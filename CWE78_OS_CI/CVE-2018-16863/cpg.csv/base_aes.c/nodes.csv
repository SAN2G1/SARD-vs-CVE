command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	128315	File	data/converged/CVE-2018-16863_ghostpdl/base_aes.c								
ANR	128316	DeclStmt									
ANR	128317	Decl							const unsigned char	const unsigned char [ 256 ]	FSb
ANR	128318	DeclStmt									
ANR	128319	Decl							const unsigned long	const unsigned long [ 256 ]	FT0
ANR	128320	DeclStmt									
ANR	128321	Decl							const unsigned long	const unsigned long [ 256 ]	FT1
ANR	128322	DeclStmt									
ANR	128323	Decl							const unsigned long	const unsigned long [ 256 ]	FT2
ANR	128324	DeclStmt									
ANR	128325	Decl							const unsigned long	const unsigned long [ 256 ]	FT3
ANR	128326	DeclStmt									
ANR	128327	Decl							const unsigned char	const unsigned char [ 256 ]	RSb
ANR	128328	DeclStmt									
ANR	128329	Decl							const unsigned long	const unsigned long [ 256 ]	RT0
ANR	128330	DeclStmt									
ANR	128331	Decl							const unsigned long	const unsigned long [ 256 ]	RT1
ANR	128332	DeclStmt									
ANR	128333	Decl							const unsigned long	const unsigned long [ 256 ]	RT2
ANR	128334	DeclStmt									
ANR	128335	Decl							const unsigned long	const unsigned long [ 256 ]	RT3
ANR	128336	DeclStmt									
ANR	128337	Decl							const unsigned long	const unsigned long [ 10 ]	RCON
ANR	128338	DeclStmt									
ANR	128339	Decl							unsigned char	unsigned char [ 256 ]	FSb
ANR	128340	DeclStmt									
ANR	128341	Decl							unsigned long	unsigned long [ 256 ]	FT0
ANR	128342	DeclStmt									
ANR	128343	Decl							unsigned long	unsigned long [ 256 ]	FT1
ANR	128344	DeclStmt									
ANR	128345	Decl							unsigned long	unsigned long [ 256 ]	FT2
ANR	128346	DeclStmt									
ANR	128347	Decl							unsigned long	unsigned long [ 256 ]	FT3
ANR	128348	DeclStmt									
ANR	128349	Decl							unsigned char	unsigned char [ 256 ]	RSb
ANR	128350	DeclStmt									
ANR	128351	Decl							unsigned long	unsigned long [ 256 ]	RT0
ANR	128352	DeclStmt									
ANR	128353	Decl							unsigned long	unsigned long [ 256 ]	RT1
ANR	128354	DeclStmt									
ANR	128355	Decl							unsigned long	unsigned long [ 256 ]	RT2
ANR	128356	DeclStmt									
ANR	128357	Decl							unsigned long	unsigned long [ 256 ]	RT3
ANR	128358	DeclStmt									
ANR	128359	Decl							unsigned long	unsigned long [ 10 ]	RCON
ANR	128360	DeclStmt									
ANR	128361	Decl							int	int	aes_init_done
ANR	128362	Function	aes_gen_tables	368:0:17026:18812							
ANR	128363	FunctionDef	aes_gen_tables ()		128362	0					
ANR	128364	CompoundStatement		369:0:17061:18812	128362	0					
ANR	128365	IdentifierDeclStatement	"int i , x , y , z ;"	370:4:17067:17081	128362	0	True				
ANR	128366	IdentifierDecl	i		128362	0					
ANR	128367	IdentifierDeclType	int		128362	0					
ANR	128368	Identifier	i		128362	1					
ANR	128369	IdentifierDecl	x		128362	1					
ANR	128370	IdentifierDeclType	int		128362	0					
ANR	128371	Identifier	x		128362	1					
ANR	128372	IdentifierDecl	y		128362	2					
ANR	128373	IdentifierDeclType	int		128362	0					
ANR	128374	Identifier	y		128362	1					
ANR	128375	IdentifierDecl	z		128362	3					
ANR	128376	IdentifierDeclType	int		128362	0					
ANR	128377	Identifier	z		128362	1					
ANR	128378	IdentifierDeclStatement	int pow [ 256 ] ;	371:4:17087:17099	128362	1	True				
ANR	128379	IdentifierDecl	pow [ 256 ]		128362	0					
ANR	128380	IdentifierDeclType	int [ 256 ]		128362	0					
ANR	128381	Identifier	pow		128362	1					
ANR	128382	PrimaryExpression	256		128362	2					
ANR	128383	IdentifierDeclStatement	int log [ 256 ] ;	372:4:17105:17117	128362	2	True				
ANR	128384	IdentifierDecl	log [ 256 ]		128362	0					
ANR	128385	IdentifierDeclType	int [ 256 ]		128362	0					
ANR	128386	Identifier	log		128362	1					
ANR	128387	PrimaryExpression	256		128362	2					
ANR	128388	ForStatement	"for ( i = 0 , x = 1 ; i < 256 ; i ++ )"		128362	3					
ANR	128389	ForInit	"i = 0 , x = 1 ;"	377:9:17191:17203	128362	0	True				
ANR	128390	Expression	"i = 0 , x = 1"		128362	0					
ANR	128391	AssignmentExpression	i = 0		128362	0		=			
ANR	128392	Identifier	i		128362	0					
ANR	128393	PrimaryExpression	0		128362	1					
ANR	128394	AssignmentExpression	x = 1		128362	1		=			
ANR	128395	Identifier	x		128362	0					
ANR	128396	PrimaryExpression	1		128362	1					
ANR	128397	Condition	i < 256	377:23:17205:17211	128362	1	True				
ANR	128398	RelationalExpression	i < 256		128362	0		<			
ANR	128399	Identifier	i		128362	0					
ANR	128400	PrimaryExpression	256		128362	1					
ANR	128401	PostIncDecOperationExpression	i ++	377:32:17214:17216	128362	2	True				
ANR	128402	Identifier	i		128362	0					
ANR	128403	IncDec	++		128362	1					
ANR	128404	CompoundStatement		10:4:162:162	128362	3					
ANR	128405	ExpressionStatement	pow [ i ] = x	379:8:17234:17244	128362	0	True				
ANR	128406	AssignmentExpression	pow [ i ] = x		128362	0		=			
ANR	128407	ArrayIndexing	pow [ i ]		128362	0					
ANR	128408	Identifier	pow		128362	0					
ANR	128409	Identifier	i		128362	1					
ANR	128410	Identifier	x		128362	1					
ANR	128411	ExpressionStatement	log [ x ] = i	380:8:17254:17264	128362	1	True				
ANR	128412	AssignmentExpression	log [ x ] = i		128362	0		=			
ANR	128413	ArrayIndexing	log [ x ]		128362	0					
ANR	128414	Identifier	log		128362	0					
ANR	128415	Identifier	x		128362	1					
ANR	128416	Identifier	i		128362	1					
ANR	128417	ExpressionStatement	x = ( x ^ XTIME ( x ) ) & 0xFF	381:8:17274:17303	128362	2	True				
ANR	128418	AssignmentExpression	x = ( x ^ XTIME ( x ) ) & 0xFF		128362	0		=			
ANR	128419	Identifier	x		128362	0					
ANR	128420	BitAndExpression	( x ^ XTIME ( x ) ) & 0xFF		128362	1		&			
ANR	128421	ExclusiveOrExpression	x ^ XTIME ( x )		128362	0		^			
ANR	128422	Identifier	x		128362	0					
ANR	128423	CallExpression	XTIME ( x )		128362	1					
ANR	128424	Callee	XTIME		128362	0					
ANR	128425	Identifier	XTIME		128362	0					
ANR	128426	ArgumentList	x		128362	1					
ANR	128427	Argument	x		128362	0					
ANR	128428	Identifier	x		128362	0					
ANR	128429	PrimaryExpression	0xFF		128362	1					
ANR	128430	ForStatement	"for ( i = 0 , x = 1 ; i < 10 ; i ++ )"		128362	4					
ANR	128431	ForInit	"i = 0 , x = 1 ;"	387:9:17373:17385	128362	0	True				
ANR	128432	Expression	"i = 0 , x = 1"		128362	0					
ANR	128433	AssignmentExpression	i = 0		128362	0		=			
ANR	128434	Identifier	i		128362	0					
ANR	128435	PrimaryExpression	0		128362	1					
ANR	128436	AssignmentExpression	x = 1		128362	1		=			
ANR	128437	Identifier	x		128362	0					
ANR	128438	PrimaryExpression	1		128362	1					
ANR	128439	Condition	i < 10	387:23:17387:17392	128362	1	True				
ANR	128440	RelationalExpression	i < 10		128362	0		<			
ANR	128441	Identifier	i		128362	0					
ANR	128442	PrimaryExpression	10		128362	1					
ANR	128443	PostIncDecOperationExpression	i ++	387:31:17395:17397	128362	2	True				
ANR	128444	Identifier	i		128362	0					
ANR	128445	IncDec	++		128362	1					
ANR	128446	CompoundStatement		20:4:343:343	128362	3					
ANR	128447	ExpressionStatement	RCON [ i ] = ( unsigned long ) x	389:8:17415:17442	128362	0	True				
ANR	128448	AssignmentExpression	RCON [ i ] = ( unsigned long ) x		128362	0		=			
ANR	128449	ArrayIndexing	RCON [ i ]		128362	0					
ANR	128450	Identifier	RCON		128362	0					
ANR	128451	Identifier	i		128362	1					
ANR	128452	CastExpression	( unsigned long ) x		128362	1					
ANR	128453	CastTarget	unsigned long		128362	0					
ANR	128454	Identifier	x		128362	1					
ANR	128455	ExpressionStatement	x = XTIME ( x ) & 0xFF	390:8:17452:17473	128362	1	True				
ANR	128456	AssignmentExpression	x = XTIME ( x ) & 0xFF		128362	0		=			
ANR	128457	Identifier	x		128362	0					
ANR	128458	BitAndExpression	XTIME ( x ) & 0xFF		128362	1		&			
ANR	128459	CallExpression	XTIME ( x )		128362	0					
ANR	128460	Callee	XTIME		128362	0					
ANR	128461	Identifier	XTIME		128362	0					
ANR	128462	ArgumentList	x		128362	1					
ANR	128463	Argument	x		128362	0					
ANR	128464	Identifier	x		128362	0					
ANR	128465	PrimaryExpression	0xFF		128362	1					
ANR	128466	ExpressionStatement	FSb [ 0x00 ] = 0x63	396:4:17549:17565	128362	5	True				
ANR	128467	AssignmentExpression	FSb [ 0x00 ] = 0x63		128362	0		=			
ANR	128468	ArrayIndexing	FSb [ 0x00 ]		128362	0					
ANR	128469	Identifier	FSb		128362	0					
ANR	128470	PrimaryExpression	0x00		128362	1					
ANR	128471	PrimaryExpression	0x63		128362	1					
ANR	128472	ExpressionStatement	RSb [ 0x63 ] = 0x00	397:4:17571:17587	128362	6	True				
ANR	128473	AssignmentExpression	RSb [ 0x63 ] = 0x00		128362	0		=			
ANR	128474	ArrayIndexing	RSb [ 0x63 ]		128362	0					
ANR	128475	Identifier	RSb		128362	0					
ANR	128476	PrimaryExpression	0x63		128362	1					
ANR	128477	PrimaryExpression	0x00		128362	1					
ANR	128478	ForStatement	for ( i = 1 ; i < 256 ; i ++ )		128362	7					
ANR	128479	ForInit	i = 1 ;	399:9:17599:17604	128362	0	True				
ANR	128480	AssignmentExpression	i = 1		128362	0		=			
ANR	128481	Identifier	i		128362	0					
ANR	128482	PrimaryExpression	1		128362	1					
ANR	128483	Condition	i < 256	399:16:17606:17612	128362	1	True				
ANR	128484	RelationalExpression	i < 256		128362	0		<			
ANR	128485	Identifier	i		128362	0					
ANR	128486	PrimaryExpression	256		128362	1					
ANR	128487	PostIncDecOperationExpression	i ++	399:25:17615:17617	128362	2	True				
ANR	128488	Identifier	i		128362	0					
ANR	128489	IncDec	++		128362	1					
ANR	128490	CompoundStatement		32:4:563:563	128362	3					
ANR	128491	ExpressionStatement	x = pow [ 255 - log [ i ] ]	401:8:17635:17656	128362	0	True				
ANR	128492	AssignmentExpression	x = pow [ 255 - log [ i ] ]		128362	0		=			
ANR	128493	Identifier	x		128362	0					
ANR	128494	ArrayIndexing	pow [ 255 - log [ i ] ]		128362	1					
ANR	128495	Identifier	pow		128362	0					
ANR	128496	AdditiveExpression	255 - log [ i ]		128362	1		-			
ANR	128497	PrimaryExpression	255		128362	0					
ANR	128498	ArrayIndexing	log [ i ]		128362	1					
ANR	128499	Identifier	log		128362	0					
ANR	128500	Identifier	i		128362	1					
ANR	128501	ExpressionStatement	y = x	403:8:17667:17673	128362	1	True				
ANR	128502	AssignmentExpression	y = x		128362	0		=			
ANR	128503	Identifier	y		128362	0					
ANR	128504	Identifier	x		128362	1					
ANR	128505	ExpressionStatement	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF	403:16:17675:17709	128362	2	True				
ANR	128506	AssignmentExpression	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	0		=			
ANR	128507	Identifier	y		128362	0					
ANR	128508	BitAndExpression	( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	1		&			
ANR	128509	InclusiveOrExpression	( y << 1 ) | ( y >> 7 )		128362	0		|			
ANR	128510	ShiftExpression	y << 1		128362	0		<<			
ANR	128511	Identifier	y		128362	0					
ANR	128512	PrimaryExpression	1		128362	1					
ANR	128513	ShiftExpression	y >> 7		128362	1		>>			
ANR	128514	Identifier	y		128362	0					
ANR	128515	PrimaryExpression	7		128362	1					
ANR	128516	PrimaryExpression	0xFF		128362	1					
ANR	128517	ExpressionStatement	x ^= y	404:8:17719:17725	128362	3	True				
ANR	128518	AssignmentExpression	x ^= y		128362	0		^=			
ANR	128519	Identifier	x		128362	0					
ANR	128520	Identifier	y		128362	1					
ANR	128521	ExpressionStatement	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF	404:16:17727:17761	128362	4	True				
ANR	128522	AssignmentExpression	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	0		=			
ANR	128523	Identifier	y		128362	0					
ANR	128524	BitAndExpression	( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	1		&			
ANR	128525	InclusiveOrExpression	( y << 1 ) | ( y >> 7 )		128362	0		|			
ANR	128526	ShiftExpression	y << 1		128362	0		<<			
ANR	128527	Identifier	y		128362	0					
ANR	128528	PrimaryExpression	1		128362	1					
ANR	128529	ShiftExpression	y >> 7		128362	1		>>			
ANR	128530	Identifier	y		128362	0					
ANR	128531	PrimaryExpression	7		128362	1					
ANR	128532	PrimaryExpression	0xFF		128362	1					
ANR	128533	ExpressionStatement	x ^= y	405:8:17771:17777	128362	5	True				
ANR	128534	AssignmentExpression	x ^= y		128362	0		^=			
ANR	128535	Identifier	x		128362	0					
ANR	128536	Identifier	y		128362	1					
ANR	128537	ExpressionStatement	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF	405:16:17779:17813	128362	6	True				
ANR	128538	AssignmentExpression	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	0		=			
ANR	128539	Identifier	y		128362	0					
ANR	128540	BitAndExpression	( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	1		&			
ANR	128541	InclusiveOrExpression	( y << 1 ) | ( y >> 7 )		128362	0		|			
ANR	128542	ShiftExpression	y << 1		128362	0		<<			
ANR	128543	Identifier	y		128362	0					
ANR	128544	PrimaryExpression	1		128362	1					
ANR	128545	ShiftExpression	y >> 7		128362	1		>>			
ANR	128546	Identifier	y		128362	0					
ANR	128547	PrimaryExpression	7		128362	1					
ANR	128548	PrimaryExpression	0xFF		128362	1					
ANR	128549	ExpressionStatement	x ^= y	406:8:17823:17829	128362	7	True				
ANR	128550	AssignmentExpression	x ^= y		128362	0		^=			
ANR	128551	Identifier	x		128362	0					
ANR	128552	Identifier	y		128362	1					
ANR	128553	ExpressionStatement	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF	406:16:17831:17865	128362	8	True				
ANR	128554	AssignmentExpression	y = ( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	0		=			
ANR	128555	Identifier	y		128362	0					
ANR	128556	BitAndExpression	( ( y << 1 ) | ( y >> 7 ) ) & 0xFF		128362	1		&			
ANR	128557	InclusiveOrExpression	( y << 1 ) | ( y >> 7 )		128362	0		|			
ANR	128558	ShiftExpression	y << 1		128362	0		<<			
ANR	128559	Identifier	y		128362	0					
ANR	128560	PrimaryExpression	1		128362	1					
ANR	128561	ShiftExpression	y >> 7		128362	1		>>			
ANR	128562	Identifier	y		128362	0					
ANR	128563	PrimaryExpression	7		128362	1					
ANR	128564	PrimaryExpression	0xFF		128362	1					
ANR	128565	ExpressionStatement	x ^= y ^ 0x63	407:8:17875:17888	128362	9	True				
ANR	128566	AssignmentExpression	x ^= y ^ 0x63		128362	0		^=			
ANR	128567	Identifier	x		128362	0					
ANR	128568	ExclusiveOrExpression	y ^ 0x63		128362	1		^			
ANR	128569	Identifier	y		128362	0					
ANR	128570	PrimaryExpression	0x63		128362	1					
ANR	128571	ExpressionStatement	FSb [ i ] = ( unsigned char ) x	409:8:17899:17925	128362	10	True				
ANR	128572	AssignmentExpression	FSb [ i ] = ( unsigned char ) x		128362	0		=			
ANR	128573	ArrayIndexing	FSb [ i ]		128362	0					
ANR	128574	Identifier	FSb		128362	0					
ANR	128575	Identifier	i		128362	1					
ANR	128576	CastExpression	( unsigned char ) x		128362	1					
ANR	128577	CastTarget	unsigned char		128362	0					
ANR	128578	Identifier	x		128362	1					
ANR	128579	ExpressionStatement	RSb [ x ] = ( unsigned char ) i	410:8:17935:17961	128362	11	True				
ANR	128580	AssignmentExpression	RSb [ x ] = ( unsigned char ) i		128362	0		=			
ANR	128581	ArrayIndexing	RSb [ x ]		128362	0					
ANR	128582	Identifier	RSb		128362	0					
ANR	128583	Identifier	x		128362	1					
ANR	128584	CastExpression	( unsigned char ) i		128362	1					
ANR	128585	CastTarget	unsigned char		128362	0					
ANR	128586	Identifier	i		128362	1					
ANR	128587	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		128362	8					
ANR	128588	ForInit	i = 0 ;	416:9:18041:18046	128362	0	True				
ANR	128589	AssignmentExpression	i = 0		128362	0		=			
ANR	128590	Identifier	i		128362	0					
ANR	128591	PrimaryExpression	0		128362	1					
ANR	128592	Condition	i < 256	416:16:18048:18054	128362	1	True				
ANR	128593	RelationalExpression	i < 256		128362	0		<			
ANR	128594	Identifier	i		128362	0					
ANR	128595	PrimaryExpression	256		128362	1					
ANR	128596	PostIncDecOperationExpression	i ++	416:25:18057:18059	128362	2	True				
ANR	128597	Identifier	i		128362	0					
ANR	128598	IncDec	++		128362	1					
ANR	128599	CompoundStatement		49:4:1005:1005	128362	3					
ANR	128600	ExpressionStatement	x = FSb [ i ]	418:8:18077:18087	128362	0	True				
ANR	128601	AssignmentExpression	x = FSb [ i ]		128362	0		=			
ANR	128602	Identifier	x		128362	0					
ANR	128603	ArrayIndexing	FSb [ i ]		128362	1					
ANR	128604	Identifier	FSb		128362	0					
ANR	128605	Identifier	i		128362	1					
ANR	128606	ExpressionStatement	y = XTIME ( x ) & 0xFF	419:8:18097:18118	128362	1	True				
ANR	128607	AssignmentExpression	y = XTIME ( x ) & 0xFF		128362	0		=			
ANR	128608	Identifier	y		128362	0					
ANR	128609	BitAndExpression	XTIME ( x ) & 0xFF		128362	1		&			
ANR	128610	CallExpression	XTIME ( x )		128362	0					
ANR	128611	Callee	XTIME		128362	0					
ANR	128612	Identifier	XTIME		128362	0					
ANR	128613	ArgumentList	x		128362	1					
ANR	128614	Argument	x		128362	0					
ANR	128615	Identifier	x		128362	0					
ANR	128616	PrimaryExpression	0xFF		128362	1					
ANR	128617	ExpressionStatement	z = ( y ^ x ) & 0xFF	420:8:18128:18149	128362	2	True				
ANR	128618	AssignmentExpression	z = ( y ^ x ) & 0xFF		128362	0		=			
ANR	128619	Identifier	z		128362	0					
ANR	128620	BitAndExpression	( y ^ x ) & 0xFF		128362	1		&			
ANR	128621	ExclusiveOrExpression	y ^ x		128362	0		^			
ANR	128622	Identifier	y		128362	0					
ANR	128623	Identifier	x		128362	1					
ANR	128624	PrimaryExpression	0xFF		128362	1					
ANR	128625	ExpressionStatement	FT0 [ i ] = ( ( unsigned long ) y ) ^ ( ( unsigned long ) x << 8 ) ^ ( ( unsigned long ) x << 16 ) ^ ( ( unsigned long ) z << 24 )	422:8:18160:18337	128362	3	True				
ANR	128626	AssignmentExpression	FT0 [ i ] = ( ( unsigned long ) y ) ^ ( ( unsigned long ) x << 8 ) ^ ( ( unsigned long ) x << 16 ) ^ ( ( unsigned long ) z << 24 )		128362	0		=			
ANR	128627	ArrayIndexing	FT0 [ i ]		128362	0					
ANR	128628	Identifier	FT0		128362	0					
ANR	128629	Identifier	i		128362	1					
ANR	128630	ExclusiveOrExpression	( ( unsigned long ) y ) ^ ( ( unsigned long ) x << 8 ) ^ ( ( unsigned long ) x << 16 ) ^ ( ( unsigned long ) z << 24 )		128362	1		^			
ANR	128631	CastExpression	( unsigned long ) y		128362	0					
ANR	128632	CastTarget	unsigned long		128362	0					
ANR	128633	Identifier	y		128362	1					
ANR	128634	ExclusiveOrExpression	( ( unsigned long ) x << 8 ) ^ ( ( unsigned long ) x << 16 ) ^ ( ( unsigned long ) z << 24 )		128362	1		^			
ANR	128635	ShiftExpression	( unsigned long ) x << 8		128362	0		<<			
ANR	128636	CastExpression	( unsigned long ) x		128362	0					
ANR	128637	CastTarget	unsigned long		128362	0					
ANR	128638	Identifier	x		128362	1					
ANR	128639	PrimaryExpression	8		128362	1					
ANR	128640	ExclusiveOrExpression	( ( unsigned long ) x << 16 ) ^ ( ( unsigned long ) z << 24 )		128362	1		^			
ANR	128641	ShiftExpression	( unsigned long ) x << 16		128362	0		<<			
ANR	128642	CastExpression	( unsigned long ) x		128362	0					
ANR	128643	CastTarget	unsigned long		128362	0					
ANR	128644	Identifier	x		128362	1					
ANR	128645	PrimaryExpression	16		128362	1					
ANR	128646	ShiftExpression	( unsigned long ) z << 24		128362	1		<<			
ANR	128647	CastExpression	( unsigned long ) z		128362	0					
ANR	128648	CastTarget	unsigned long		128362	0					
ANR	128649	Identifier	z		128362	1					
ANR	128650	PrimaryExpression	24		128362	1					
ANR	128651	ExpressionStatement	FT1 [ i ] = ROTL8 ( FT0 [ i ] )	427:8:18348:18372	128362	4	True				
ANR	128652	AssignmentExpression	FT1 [ i ] = ROTL8 ( FT0 [ i ] )		128362	0		=			
ANR	128653	ArrayIndexing	FT1 [ i ]		128362	0					
ANR	128654	Identifier	FT1		128362	0					
ANR	128655	Identifier	i		128362	1					
ANR	128656	CallExpression	ROTL8 ( FT0 [ i ] )		128362	1					
ANR	128657	Callee	ROTL8		128362	0					
ANR	128658	Identifier	ROTL8		128362	0					
ANR	128659	ArgumentList	FT0 [ i ]		128362	1					
ANR	128660	Argument	FT0 [ i ]		128362	0					
ANR	128661	ArrayIndexing	FT0 [ i ]		128362	0					
ANR	128662	Identifier	FT0		128362	0					
ANR	128663	Identifier	i		128362	1					
ANR	128664	ExpressionStatement	FT2 [ i ] = ROTL8 ( FT1 [ i ] )	428:8:18382:18406	128362	5	True				
ANR	128665	AssignmentExpression	FT2 [ i ] = ROTL8 ( FT1 [ i ] )		128362	0		=			
ANR	128666	ArrayIndexing	FT2 [ i ]		128362	0					
ANR	128667	Identifier	FT2		128362	0					
ANR	128668	Identifier	i		128362	1					
ANR	128669	CallExpression	ROTL8 ( FT1 [ i ] )		128362	1					
ANR	128670	Callee	ROTL8		128362	0					
ANR	128671	Identifier	ROTL8		128362	0					
ANR	128672	ArgumentList	FT1 [ i ]		128362	1					
ANR	128673	Argument	FT1 [ i ]		128362	0					
ANR	128674	ArrayIndexing	FT1 [ i ]		128362	0					
ANR	128675	Identifier	FT1		128362	0					
ANR	128676	Identifier	i		128362	1					
ANR	128677	ExpressionStatement	FT3 [ i ] = ROTL8 ( FT2 [ i ] )	429:8:18416:18440	128362	6	True				
ANR	128678	AssignmentExpression	FT3 [ i ] = ROTL8 ( FT2 [ i ] )		128362	0		=			
ANR	128679	ArrayIndexing	FT3 [ i ]		128362	0					
ANR	128680	Identifier	FT3		128362	0					
ANR	128681	Identifier	i		128362	1					
ANR	128682	CallExpression	ROTL8 ( FT2 [ i ] )		128362	1					
ANR	128683	Callee	ROTL8		128362	0					
ANR	128684	Identifier	ROTL8		128362	0					
ANR	128685	ArgumentList	FT2 [ i ]		128362	1					
ANR	128686	Argument	FT2 [ i ]		128362	0					
ANR	128687	ArrayIndexing	FT2 [ i ]		128362	0					
ANR	128688	Identifier	FT2		128362	0					
ANR	128689	Identifier	i		128362	1					
ANR	128690	ExpressionStatement	x = RSb [ i ]	431:8:18451:18461	128362	7	True				
ANR	128691	AssignmentExpression	x = RSb [ i ]		128362	0		=			
ANR	128692	Identifier	x		128362	0					
ANR	128693	ArrayIndexing	RSb [ i ]		128362	1					
ANR	128694	Identifier	RSb		128362	0					
ANR	128695	Identifier	i		128362	1					
ANR	128696	ExpressionStatement	"RT0 [ i ] = ( ( unsigned long ) MUL ( 0x0E , x ) ) ^ ( ( unsigned long ) MUL ( 0x09 , x ) << 8 ) ^ ( ( unsigned long ) MUL ( 0x0D , x ) << 16 ) ^ ( ( unsigned long ) MUL ( 0x0B , x ) << 24 )"	433:8:18472:18701	128362	8	True				
ANR	128697	AssignmentExpression	"RT0 [ i ] = ( ( unsigned long ) MUL ( 0x0E , x ) ) ^ ( ( unsigned long ) MUL ( 0x09 , x ) << 8 ) ^ ( ( unsigned long ) MUL ( 0x0D , x ) << 16 ) ^ ( ( unsigned long ) MUL ( 0x0B , x ) << 24 )"		128362	0		=			
ANR	128698	ArrayIndexing	RT0 [ i ]		128362	0					
ANR	128699	Identifier	RT0		128362	0					
ANR	128700	Identifier	i		128362	1					
ANR	128701	ExclusiveOrExpression	"( ( unsigned long ) MUL ( 0x0E , x ) ) ^ ( ( unsigned long ) MUL ( 0x09 , x ) << 8 ) ^ ( ( unsigned long ) MUL ( 0x0D , x ) << 16 ) ^ ( ( unsigned long ) MUL ( 0x0B , x ) << 24 )"		128362	1		^			
ANR	128702	CastExpression	"( unsigned long ) MUL ( 0x0E , x )"		128362	0					
ANR	128703	CastTarget	unsigned long		128362	0					
ANR	128704	CallExpression	"MUL ( 0x0E , x )"		128362	1					
ANR	128705	Callee	MUL		128362	0					
ANR	128706	Identifier	MUL		128362	0					
ANR	128707	ArgumentList	0x0E		128362	1					
ANR	128708	Argument	0x0E		128362	0					
ANR	128709	PrimaryExpression	0x0E		128362	0					
ANR	128710	Argument	x		128362	1					
ANR	128711	Identifier	x		128362	0					
ANR	128712	ExclusiveOrExpression	"( ( unsigned long ) MUL ( 0x09 , x ) << 8 ) ^ ( ( unsigned long ) MUL ( 0x0D , x ) << 16 ) ^ ( ( unsigned long ) MUL ( 0x0B , x ) << 24 )"		128362	1		^			
ANR	128713	ShiftExpression	"( unsigned long ) MUL ( 0x09 , x ) << 8"		128362	0		<<			
ANR	128714	CastExpression	"( unsigned long ) MUL ( 0x09 , x )"		128362	0					
ANR	128715	CastTarget	unsigned long		128362	0					
ANR	128716	CallExpression	"MUL ( 0x09 , x )"		128362	1					
ANR	128717	Callee	MUL		128362	0					
ANR	128718	Identifier	MUL		128362	0					
ANR	128719	ArgumentList	0x09		128362	1					
ANR	128720	Argument	0x09		128362	0					
ANR	128721	PrimaryExpression	0x09		128362	0					
ANR	128722	Argument	x		128362	1					
ANR	128723	Identifier	x		128362	0					
ANR	128724	PrimaryExpression	8		128362	1					
ANR	128725	ExclusiveOrExpression	"( ( unsigned long ) MUL ( 0x0D , x ) << 16 ) ^ ( ( unsigned long ) MUL ( 0x0B , x ) << 24 )"		128362	1		^			
ANR	128726	ShiftExpression	"( unsigned long ) MUL ( 0x0D , x ) << 16"		128362	0		<<			
ANR	128727	CastExpression	"( unsigned long ) MUL ( 0x0D , x )"		128362	0					
ANR	128728	CastTarget	unsigned long		128362	0					
ANR	128729	CallExpression	"MUL ( 0x0D , x )"		128362	1					
ANR	128730	Callee	MUL		128362	0					
ANR	128731	Identifier	MUL		128362	0					
ANR	128732	ArgumentList	0x0D		128362	1					
ANR	128733	Argument	0x0D		128362	0					
ANR	128734	PrimaryExpression	0x0D		128362	0					
ANR	128735	Argument	x		128362	1					
ANR	128736	Identifier	x		128362	0					
ANR	128737	PrimaryExpression	16		128362	1					
ANR	128738	ShiftExpression	"( unsigned long ) MUL ( 0x0B , x ) << 24"		128362	1		<<			
ANR	128739	CastExpression	"( unsigned long ) MUL ( 0x0B , x )"		128362	0					
ANR	128740	CastTarget	unsigned long		128362	0					
ANR	128741	CallExpression	"MUL ( 0x0B , x )"		128362	1					
ANR	128742	Callee	MUL		128362	0					
ANR	128743	Identifier	MUL		128362	0					
ANR	128744	ArgumentList	0x0B		128362	1					
ANR	128745	Argument	0x0B		128362	0					
ANR	128746	PrimaryExpression	0x0B		128362	0					
ANR	128747	Argument	x		128362	1					
ANR	128748	Identifier	x		128362	0					
ANR	128749	PrimaryExpression	24		128362	1					
ANR	128750	ExpressionStatement	RT1 [ i ] = ROTL8 ( RT0 [ i ] )	438:8:18712:18736	128362	9	True				
ANR	128751	AssignmentExpression	RT1 [ i ] = ROTL8 ( RT0 [ i ] )		128362	0		=			
ANR	128752	ArrayIndexing	RT1 [ i ]		128362	0					
ANR	128753	Identifier	RT1		128362	0					
ANR	128754	Identifier	i		128362	1					
ANR	128755	CallExpression	ROTL8 ( RT0 [ i ] )		128362	1					
ANR	128756	Callee	ROTL8		128362	0					
ANR	128757	Identifier	ROTL8		128362	0					
ANR	128758	ArgumentList	RT0 [ i ]		128362	1					
ANR	128759	Argument	RT0 [ i ]		128362	0					
ANR	128760	ArrayIndexing	RT0 [ i ]		128362	0					
ANR	128761	Identifier	RT0		128362	0					
ANR	128762	Identifier	i		128362	1					
ANR	128763	ExpressionStatement	RT2 [ i ] = ROTL8 ( RT1 [ i ] )	439:8:18746:18770	128362	10	True				
ANR	128764	AssignmentExpression	RT2 [ i ] = ROTL8 ( RT1 [ i ] )		128362	0		=			
ANR	128765	ArrayIndexing	RT2 [ i ]		128362	0					
ANR	128766	Identifier	RT2		128362	0					
ANR	128767	Identifier	i		128362	1					
ANR	128768	CallExpression	ROTL8 ( RT1 [ i ] )		128362	1					
ANR	128769	Callee	ROTL8		128362	0					
ANR	128770	Identifier	ROTL8		128362	0					
ANR	128771	ArgumentList	RT1 [ i ]		128362	1					
ANR	128772	Argument	RT1 [ i ]		128362	0					
ANR	128773	ArrayIndexing	RT1 [ i ]		128362	0					
ANR	128774	Identifier	RT1		128362	0					
ANR	128775	Identifier	i		128362	1					
ANR	128776	ExpressionStatement	RT3 [ i ] = ROTL8 ( RT2 [ i ] )	440:8:18780:18804	128362	11	True				
ANR	128777	AssignmentExpression	RT3 [ i ] = ROTL8 ( RT2 [ i ] )		128362	0		=			
ANR	128778	ArrayIndexing	RT3 [ i ]		128362	0					
ANR	128779	Identifier	RT3		128362	0					
ANR	128780	Identifier	i		128362	1					
ANR	128781	CallExpression	ROTL8 ( RT2 [ i ] )		128362	1					
ANR	128782	Callee	ROTL8		128362	0					
ANR	128783	Identifier	ROTL8		128362	0					
ANR	128784	ArgumentList	RT2 [ i ]		128362	1					
ANR	128785	Argument	RT2 [ i ]		128362	0					
ANR	128786	ArrayIndexing	RT2 [ i ]		128362	0					
ANR	128787	Identifier	RT2		128362	0					
ANR	128788	Identifier	i		128362	1					
ANR	128789	ReturnType	static void		128362	1					
ANR	128790	Identifier	aes_gen_tables		128362	2					
ANR	128791	ParameterList			128362	3					
ANR	128792	CFGEntryNode	ENTRY		128362		True				
ANR	128793	CFGExitNode	EXIT		128362		True				
ANR	128794	Symbol	RSb		128362						
ANR	128795	Symbol	* pow		128362						
ANR	128796	Symbol	* x		128362						
ANR	128797	Symbol	log		128362						
ANR	128798	Symbol	ROTL8		128362						
ANR	128799	Symbol	* RCON		128362						
ANR	128800	Symbol	* RSb		128362						
ANR	128801	Symbol	* * log		128362						
ANR	128802	Symbol	pow		128362						
ANR	128803	Symbol	XTIME		128362						
ANR	128804	Symbol	* FSb		128362						
ANR	128805	Symbol	* * i		128362						
ANR	128806	Symbol	FT1		128362						
ANR	128807	Symbol	FT0		128362						
ANR	128808	Symbol	FT3		128362						
ANR	128809	Symbol	* RT3		128362						
ANR	128810	Symbol	FT2		128362						
ANR	128811	Symbol	MUL		128362						
ANR	128812	Symbol	* RT2		128362						
ANR	128813	Symbol	* RT1		128362						
ANR	128814	Symbol	* RT0		128362						
ANR	128815	Symbol	i		128362						
ANR	128816	Symbol	* log		128362						
ANR	128817	Symbol	RT1		128362						
ANR	128818	Symbol	RT0		128362						
ANR	128819	Symbol	* FT3		128362						
ANR	128820	Symbol	RT3		128362						
ANR	128821	Symbol	* FT2		128362						
ANR	128822	Symbol	RT2		128362						
ANR	128823	Symbol	* FT1		128362						
ANR	128824	Symbol	* i		128362						
ANR	128825	Symbol	* FT0		128362						
ANR	128826	Symbol	FSb		128362						
ANR	128827	Symbol	RCON		128362						
ANR	128828	Symbol	x		128362						
ANR	128829	Symbol	y		128362						
ANR	128830	Symbol	z		128362						
ANR	128831	Function	aes_setkey_enc	449:0:18863:21709							
ANR	128832	FunctionDef	"aes_setkey_enc (aes_context * ctx , const unsigned char * key , int keysize)"		128831	0					
ANR	128833	CompoundStatement		450:0:18942:21709	128831	0					
ANR	128834	IdentifierDeclStatement	int i ;	451:4:18948:18953	128831	0	True				
ANR	128835	IdentifierDecl	i		128831	0					
ANR	128836	IdentifierDeclType	int		128831	0					
ANR	128837	Identifier	i		128831	1					
ANR	128838	IdentifierDeclStatement	unsigned long * RK ;	452:4:18959:18976	128831	1	True				
ANR	128839	IdentifierDecl	* RK		128831	0					
ANR	128840	IdentifierDeclType	unsigned long *		128831	0					
ANR	128841	Identifier	RK		128831	1					
ANR	128842	IfStatement	if ( aes_init_done == 0 )		128831	2					
ANR	128843	Condition	aes_init_done == 0	455:8:19022:19039	128831	0	True				
ANR	128844	EqualityExpression	aes_init_done == 0		128831	0		==			
ANR	128845	Identifier	aes_init_done		128831	0					
ANR	128846	PrimaryExpression	0		128831	1					
ANR	128847	CompoundStatement		7:4:104:104	128831	1					
ANR	128848	ExpressionStatement	aes_gen_tables ( )	457:8:19057:19073	128831	0	True				
ANR	128849	CallExpression	aes_gen_tables ( )		128831	0					
ANR	128850	Callee	aes_gen_tables		128831	0					
ANR	128851	Identifier	aes_gen_tables		128831	0					
ANR	128852	ArgumentList			128831	1					
ANR	128853	ExpressionStatement	aes_init_done = 1	458:8:19083:19100	128831	1	True				
ANR	128854	AssignmentExpression	aes_init_done = 1		128831	0		=			
ANR	128855	Identifier	aes_init_done		128831	0					
ANR	128856	PrimaryExpression	1		128831	1					
ANR	128857	SwitchStatement	switch ( keysize )		128831	3					
ANR	128858	Condition	keysize	462:12:19128:19134	128831	0	True				
ANR	128859	Identifier	keysize		128831	0					
ANR	128860	CompoundStatement		14:4:199:199	128831	1					
ANR	128861	Label	case 128 :	464:8:19152:19160	128831	0	True				
ANR	128862	ExpressionStatement	ctx -> nr = 10	464:18:19162:19174	128831	1	True				
ANR	128863	AssignmentExpression	ctx -> nr = 10		128831	0		=			
ANR	128864	PtrMemberAccess	ctx -> nr		128831	0					
ANR	128865	Identifier	ctx		128831	0					
ANR	128866	Identifier	nr		128831	1					
ANR	128867	PrimaryExpression	10		128831	1					
ANR	128868	BreakStatement	break ;	464:32:19176:19181	128831	2	True				
ANR	128869	Label	case 192 :	465:8:19191:19199	128831	3	True				
ANR	128870	ExpressionStatement	ctx -> nr = 12	465:18:19201:19213	128831	4	True				
ANR	128871	AssignmentExpression	ctx -> nr = 12		128831	0		=			
ANR	128872	PtrMemberAccess	ctx -> nr		128831	0					
ANR	128873	Identifier	ctx		128831	0					
ANR	128874	Identifier	nr		128831	1					
ANR	128875	PrimaryExpression	12		128831	1					
ANR	128876	BreakStatement	break ;	465:32:19215:19220	128831	5	True				
ANR	128877	Label	case 256 :	466:8:19230:19238	128831	6	True				
ANR	128878	ExpressionStatement	ctx -> nr = 14	466:18:19240:19252	128831	7	True				
ANR	128879	AssignmentExpression	ctx -> nr = 14		128831	0		=			
ANR	128880	PtrMemberAccess	ctx -> nr		128831	0					
ANR	128881	Identifier	ctx		128831	0					
ANR	128882	Identifier	nr		128831	1					
ANR	128883	PrimaryExpression	14		128831	1					
ANR	128884	BreakStatement	break ;	466:32:19254:19259	128831	8	True				
ANR	128885	Label	default :	467:8:19269:19277	128831	9	True				
ANR	128886	Identifier	default		128831	0					
ANR	128887	ReturnStatement	return ;	467:18:19279:19285	128831	10	True				
ANR	128888	ExpressionStatement	ctx -> rk = RK = PADLOCK_ALIGN16 ( ctx -> buf )	471:4:19327:19369	128831	4	True				
ANR	128889	AssignmentExpression	ctx -> rk = RK = PADLOCK_ALIGN16 ( ctx -> buf )		128831	0		=			
ANR	128890	PtrMemberAccess	ctx -> rk		128831	0					
ANR	128891	Identifier	ctx		128831	0					
ANR	128892	Identifier	rk		128831	1					
ANR	128893	AssignmentExpression	RK = PADLOCK_ALIGN16 ( ctx -> buf )		128831	1		=			
ANR	128894	Identifier	RK		128831	0					
ANR	128895	CallExpression	PADLOCK_ALIGN16 ( ctx -> buf )		128831	1					
ANR	128896	Callee	PADLOCK_ALIGN16		128831	0					
ANR	128897	Identifier	PADLOCK_ALIGN16		128831	0					
ANR	128898	ArgumentList	ctx -> buf		128831	1					
ANR	128899	Argument	ctx -> buf		128831	0					
ANR	128900	PtrMemberAccess	ctx -> buf		128831	0					
ANR	128901	Identifier	ctx		128831	0					
ANR	128902	Identifier	buf		128831	1					
ANR	128903	ForStatement	for ( i = 0 ; i < ( keysize >> 5 ) ; i ++ )		128831	5					
ANR	128904	ForInit	i = 0 ;	476:9:19423:19428	128831	0	True				
ANR	128905	AssignmentExpression	i = 0		128831	0		=			
ANR	128906	Identifier	i		128831	0					
ANR	128907	PrimaryExpression	0		128831	1					
ANR	128908	Condition	i < ( keysize >> 5 )	476:16:19430:19447	128831	1	True				
ANR	128909	RelationalExpression	i < ( keysize >> 5 )		128831	0		<			
ANR	128910	Identifier	i		128831	0					
ANR	128911	ShiftExpression	keysize >> 5		128831	1		>>			
ANR	128912	Identifier	keysize		128831	0					
ANR	128913	PrimaryExpression	5		128831	1					
ANR	128914	PostIncDecOperationExpression	i ++	476:36:19450:19452	128831	2	True				
ANR	128915	Identifier	i		128831	0					
ANR	128916	IncDec	++		128831	1					
ANR	128917	CompoundStatement		28:4:517:517	128831	3					
ANR	128918	ExpressionStatement	"GET_ULONG_LE ( RK [ i ] , key , i << 2 )"	478:8:19470:19504	128831	0	True				
ANR	128919	CallExpression	"GET_ULONG_LE ( RK [ i ] , key , i << 2 )"		128831	0					
ANR	128920	Callee	GET_ULONG_LE		128831	0					
ANR	128921	Identifier	GET_ULONG_LE		128831	0					
ANR	128922	ArgumentList	RK [ i ]		128831	1					
ANR	128923	Argument	RK [ i ]		128831	0					
ANR	128924	ArrayIndexing	RK [ i ]		128831	0					
ANR	128925	Identifier	RK		128831	0					
ANR	128926	Identifier	i		128831	1					
ANR	128927	Argument	key		128831	1					
ANR	128928	Identifier	key		128831	0					
ANR	128929	Argument	i << 2		128831	2					
ANR	128930	ShiftExpression	i << 2		128831	0		<<			
ANR	128931	Identifier	i		128831	0					
ANR	128932	PrimaryExpression	2		128831	1					
ANR	128933	SwitchStatement	switch ( ctx -> nr )		128831	6					
ANR	128934	Condition	ctx -> nr	481:12:19525:19531	128831	0	True				
ANR	128935	PtrMemberAccess	ctx -> nr		128831	0					
ANR	128936	Identifier	ctx		128831	0					
ANR	128937	Identifier	nr		128831	1					
ANR	128938	CompoundStatement		33:4:596:596	128831	1					
ANR	128939	Label	case 10 :	483:8:19549:19556	128831	0	True				
ANR	128940	ForStatement	"for ( i = 0 ; i < 10 ; i ++ , RK += 4 )"		128831	1					
ANR	128941	ForInit	i = 0 ;	485:17:19576:19581	128831	0	True				
ANR	128942	AssignmentExpression	i = 0		128831	0		=			
ANR	128943	Identifier	i		128831	0					
ANR	128944	PrimaryExpression	0		128831	1					
ANR	128945	Condition	i < 10	485:24:19583:19588	128831	1	True				
ANR	128946	RelationalExpression	i < 10		128831	0		<			
ANR	128947	Identifier	i		128831	0					
ANR	128948	PrimaryExpression	10		128831	1					
ANR	128949	Expression	"i ++ , RK += 4"	485:32:19591:19602	128831	2	True				
ANR	128950	PostIncDecOperationExpression	i ++		128831	0					
ANR	128951	Identifier	i		128831	0					
ANR	128952	IncDec	++		128831	1					
ANR	128953	AssignmentExpression	RK += 4		128831	1		+=			
ANR	128954	Identifier	RK		128831	0					
ANR	128955	PrimaryExpression	4		128831	1					
ANR	128956	CompoundStatement		37:12:675:675	128831	3					
ANR	128957	ExpressionStatement	RK [ 4 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )	487:16:19636:19924	128831	0	True				
ANR	128958	AssignmentExpression	RK [ 4 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	0		=			
ANR	128959	ArrayIndexing	RK [ 4 ]		128831	0					
ANR	128960	Identifier	RK		128831	0					
ANR	128961	PrimaryExpression	4		128831	1					
ANR	128962	ExclusiveOrExpression	RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	128963	ArrayIndexing	RK [ 0 ]		128831	0					
ANR	128964	Identifier	RK		128831	0					
ANR	128965	PrimaryExpression	0		128831	1					
ANR	128966	ExclusiveOrExpression	RCON [ i ] ^ ( FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	128967	ArrayIndexing	RCON [ i ]		128831	0					
ANR	128968	Identifier	RCON		128831	0					
ANR	128969	Identifier	i		128831	1					
ANR	128970	ExclusiveOrExpression	( FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	128971	ArrayIndexing	FSb [ ( RK [ 3 ] >> 8 ) & 0xFF ]		128831	0					
ANR	128972	Identifier	FSb		128831	0					
ANR	128973	BitAndExpression	( RK [ 3 ] >> 8 ) & 0xFF		128831	1		&			
ANR	128974	ShiftExpression	RK [ 3 ] >> 8		128831	0		>>			
ANR	128975	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	128976	Identifier	RK		128831	0					
ANR	128977	PrimaryExpression	3		128831	1					
ANR	128978	PrimaryExpression	8		128831	1					
ANR	128979	PrimaryExpression	0xFF		128831	1					
ANR	128980	ExclusiveOrExpression	( FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	128981	ShiftExpression	FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ] << 8		128831	0		<<			
ANR	128982	ArrayIndexing	FSb [ ( RK [ 3 ] >> 16 ) & 0xFF ]		128831	0					
ANR	128983	Identifier	FSb		128831	0					
ANR	128984	BitAndExpression	( RK [ 3 ] >> 16 ) & 0xFF		128831	1		&			
ANR	128985	ShiftExpression	RK [ 3 ] >> 16		128831	0		>>			
ANR	128986	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	128987	Identifier	RK		128831	0					
ANR	128988	PrimaryExpression	3		128831	1					
ANR	128989	PrimaryExpression	16		128831	1					
ANR	128990	PrimaryExpression	0xFF		128831	1					
ANR	128991	PrimaryExpression	8		128831	1					
ANR	128992	ExclusiveOrExpression	( FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	128993	ShiftExpression	FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ] << 16		128831	0		<<			
ANR	128994	ArrayIndexing	FSb [ ( RK [ 3 ] >> 24 ) & 0xFF ]		128831	0					
ANR	128995	Identifier	FSb		128831	0					
ANR	128996	BitAndExpression	( RK [ 3 ] >> 24 ) & 0xFF		128831	1		&			
ANR	128997	ShiftExpression	RK [ 3 ] >> 24		128831	0		>>			
ANR	128998	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	128999	Identifier	RK		128831	0					
ANR	129000	PrimaryExpression	3		128831	1					
ANR	129001	PrimaryExpression	24		128831	1					
ANR	129002	PrimaryExpression	0xFF		128831	1					
ANR	129003	PrimaryExpression	16		128831	1					
ANR	129004	ShiftExpression	( ( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ] ) << 24		128831	1		<<			
ANR	129005	CastExpression	( unsigned int ) FSb [ ( RK [ 3 ] ) & 0xFF ]		128831	0					
ANR	129006	CastTarget	unsigned int		128831	0					
ANR	129007	ArrayIndexing	FSb [ ( RK [ 3 ] ) & 0xFF ]		128831	1					
ANR	129008	Identifier	FSb		128831	0					
ANR	129009	BitAndExpression	( RK [ 3 ] ) & 0xFF		128831	1		&			
ANR	129010	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	129011	Identifier	RK		128831	0					
ANR	129012	PrimaryExpression	3		128831	1					
ANR	129013	PrimaryExpression	0xFF		128831	1					
ANR	129014	PrimaryExpression	24		128831	1					
ANR	129015	ExpressionStatement	RK [ 5 ] = RK [ 1 ] ^ RK [ 4 ]	493:16:19943:19965	128831	1	True				
ANR	129016	AssignmentExpression	RK [ 5 ] = RK [ 1 ] ^ RK [ 4 ]		128831	0		=			
ANR	129017	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129018	Identifier	RK		128831	0					
ANR	129019	PrimaryExpression	5		128831	1					
ANR	129020	ExclusiveOrExpression	RK [ 1 ] ^ RK [ 4 ]		128831	1		^			
ANR	129021	ArrayIndexing	RK [ 1 ]		128831	0					
ANR	129022	Identifier	RK		128831	0					
ANR	129023	PrimaryExpression	1		128831	1					
ANR	129024	ArrayIndexing	RK [ 4 ]		128831	1					
ANR	129025	Identifier	RK		128831	0					
ANR	129026	PrimaryExpression	4		128831	1					
ANR	129027	ExpressionStatement	RK [ 6 ] = RK [ 2 ] ^ RK [ 5 ]	494:16:19983:20005	128831	2	True				
ANR	129028	AssignmentExpression	RK [ 6 ] = RK [ 2 ] ^ RK [ 5 ]		128831	0		=			
ANR	129029	ArrayIndexing	RK [ 6 ]		128831	0					
ANR	129030	Identifier	RK		128831	0					
ANR	129031	PrimaryExpression	6		128831	1					
ANR	129032	ExclusiveOrExpression	RK [ 2 ] ^ RK [ 5 ]		128831	1		^			
ANR	129033	ArrayIndexing	RK [ 2 ]		128831	0					
ANR	129034	Identifier	RK		128831	0					
ANR	129035	PrimaryExpression	2		128831	1					
ANR	129036	ArrayIndexing	RK [ 5 ]		128831	1					
ANR	129037	Identifier	RK		128831	0					
ANR	129038	PrimaryExpression	5		128831	1					
ANR	129039	ExpressionStatement	RK [ 7 ] = RK [ 3 ] ^ RK [ 6 ]	495:16:20023:20045	128831	3	True				
ANR	129040	AssignmentExpression	RK [ 7 ] = RK [ 3 ] ^ RK [ 6 ]		128831	0		=			
ANR	129041	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129042	Identifier	RK		128831	0					
ANR	129043	PrimaryExpression	7		128831	1					
ANR	129044	ExclusiveOrExpression	RK [ 3 ] ^ RK [ 6 ]		128831	1		^			
ANR	129045	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	129046	Identifier	RK		128831	0					
ANR	129047	PrimaryExpression	3		128831	1					
ANR	129048	ArrayIndexing	RK [ 6 ]		128831	1					
ANR	129049	Identifier	RK		128831	0					
ANR	129050	PrimaryExpression	6		128831	1					
ANR	129051	BreakStatement	break ;	497:12:20073:20078	128831	2	True				
ANR	129052	Label	case 12 :	499:8:20089:20096	128831	3	True				
ANR	129053	ForStatement	"for ( i = 0 ; i < 8 ; i ++ , RK += 6 )"		128831	4					
ANR	129054	ForInit	i = 0 ;	501:17:20116:20121	128831	0	True				
ANR	129055	AssignmentExpression	i = 0		128831	0		=			
ANR	129056	Identifier	i		128831	0					
ANR	129057	PrimaryExpression	0		128831	1					
ANR	129058	Condition	i < 8	501:24:20123:20127	128831	1	True				
ANR	129059	RelationalExpression	i < 8		128831	0		<			
ANR	129060	Identifier	i		128831	0					
ANR	129061	PrimaryExpression	8		128831	1					
ANR	129062	Expression	"i ++ , RK += 6"	501:31:20130:20141	128831	2	True				
ANR	129063	PostIncDecOperationExpression	i ++		128831	0					
ANR	129064	Identifier	i		128831	0					
ANR	129065	IncDec	++		128831	1					
ANR	129066	AssignmentExpression	RK += 6		128831	1		+=			
ANR	129067	Identifier	RK		128831	0					
ANR	129068	PrimaryExpression	6		128831	1					
ANR	129069	CompoundStatement		53:12:1214:1214	128831	3					
ANR	129070	ExpressionStatement	RK [ 6 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )	503:16:20175:20463	128831	0	True				
ANR	129071	AssignmentExpression	RK [ 6 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	0		=			
ANR	129072	ArrayIndexing	RK [ 6 ]		128831	0					
ANR	129073	Identifier	RK		128831	0					
ANR	129074	PrimaryExpression	6		128831	1					
ANR	129075	ExclusiveOrExpression	RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129076	ArrayIndexing	RK [ 0 ]		128831	0					
ANR	129077	Identifier	RK		128831	0					
ANR	129078	PrimaryExpression	0		128831	1					
ANR	129079	ExclusiveOrExpression	RCON [ i ] ^ ( FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129080	ArrayIndexing	RCON [ i ]		128831	0					
ANR	129081	Identifier	RCON		128831	0					
ANR	129082	Identifier	i		128831	1					
ANR	129083	ExclusiveOrExpression	( FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129084	ArrayIndexing	FSb [ ( RK [ 5 ] >> 8 ) & 0xFF ]		128831	0					
ANR	129085	Identifier	FSb		128831	0					
ANR	129086	BitAndExpression	( RK [ 5 ] >> 8 ) & 0xFF		128831	1		&			
ANR	129087	ShiftExpression	RK [ 5 ] >> 8		128831	0		>>			
ANR	129088	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129089	Identifier	RK		128831	0					
ANR	129090	PrimaryExpression	5		128831	1					
ANR	129091	PrimaryExpression	8		128831	1					
ANR	129092	PrimaryExpression	0xFF		128831	1					
ANR	129093	ExclusiveOrExpression	( FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129094	ShiftExpression	FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ] << 8		128831	0		<<			
ANR	129095	ArrayIndexing	FSb [ ( RK [ 5 ] >> 16 ) & 0xFF ]		128831	0					
ANR	129096	Identifier	FSb		128831	0					
ANR	129097	BitAndExpression	( RK [ 5 ] >> 16 ) & 0xFF		128831	1		&			
ANR	129098	ShiftExpression	RK [ 5 ] >> 16		128831	0		>>			
ANR	129099	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129100	Identifier	RK		128831	0					
ANR	129101	PrimaryExpression	5		128831	1					
ANR	129102	PrimaryExpression	16		128831	1					
ANR	129103	PrimaryExpression	0xFF		128831	1					
ANR	129104	PrimaryExpression	8		128831	1					
ANR	129105	ExclusiveOrExpression	( FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129106	ShiftExpression	FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ] << 16		128831	0		<<			
ANR	129107	ArrayIndexing	FSb [ ( RK [ 5 ] >> 24 ) & 0xFF ]		128831	0					
ANR	129108	Identifier	FSb		128831	0					
ANR	129109	BitAndExpression	( RK [ 5 ] >> 24 ) & 0xFF		128831	1		&			
ANR	129110	ShiftExpression	RK [ 5 ] >> 24		128831	0		>>			
ANR	129111	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129112	Identifier	RK		128831	0					
ANR	129113	PrimaryExpression	5		128831	1					
ANR	129114	PrimaryExpression	24		128831	1					
ANR	129115	PrimaryExpression	0xFF		128831	1					
ANR	129116	PrimaryExpression	16		128831	1					
ANR	129117	ShiftExpression	( ( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ] ) << 24		128831	1		<<			
ANR	129118	CastExpression	( unsigned int ) FSb [ ( RK [ 5 ] ) & 0xFF ]		128831	0					
ANR	129119	CastTarget	unsigned int		128831	0					
ANR	129120	ArrayIndexing	FSb [ ( RK [ 5 ] ) & 0xFF ]		128831	1					
ANR	129121	Identifier	FSb		128831	0					
ANR	129122	BitAndExpression	( RK [ 5 ] ) & 0xFF		128831	1		&			
ANR	129123	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129124	Identifier	RK		128831	0					
ANR	129125	PrimaryExpression	5		128831	1					
ANR	129126	PrimaryExpression	0xFF		128831	1					
ANR	129127	PrimaryExpression	24		128831	1					
ANR	129128	ExpressionStatement	RK [ 7 ] = RK [ 1 ] ^ RK [ 6 ]	509:16:20482:20504	128831	1	True				
ANR	129129	AssignmentExpression	RK [ 7 ] = RK [ 1 ] ^ RK [ 6 ]		128831	0		=			
ANR	129130	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129131	Identifier	RK		128831	0					
ANR	129132	PrimaryExpression	7		128831	1					
ANR	129133	ExclusiveOrExpression	RK [ 1 ] ^ RK [ 6 ]		128831	1		^			
ANR	129134	ArrayIndexing	RK [ 1 ]		128831	0					
ANR	129135	Identifier	RK		128831	0					
ANR	129136	PrimaryExpression	1		128831	1					
ANR	129137	ArrayIndexing	RK [ 6 ]		128831	1					
ANR	129138	Identifier	RK		128831	0					
ANR	129139	PrimaryExpression	6		128831	1					
ANR	129140	ExpressionStatement	RK [ 8 ] = RK [ 2 ] ^ RK [ 7 ]	510:16:20522:20544	128831	2	True				
ANR	129141	AssignmentExpression	RK [ 8 ] = RK [ 2 ] ^ RK [ 7 ]		128831	0		=			
ANR	129142	ArrayIndexing	RK [ 8 ]		128831	0					
ANR	129143	Identifier	RK		128831	0					
ANR	129144	PrimaryExpression	8		128831	1					
ANR	129145	ExclusiveOrExpression	RK [ 2 ] ^ RK [ 7 ]		128831	1		^			
ANR	129146	ArrayIndexing	RK [ 2 ]		128831	0					
ANR	129147	Identifier	RK		128831	0					
ANR	129148	PrimaryExpression	2		128831	1					
ANR	129149	ArrayIndexing	RK [ 7 ]		128831	1					
ANR	129150	Identifier	RK		128831	0					
ANR	129151	PrimaryExpression	7		128831	1					
ANR	129152	ExpressionStatement	RK [ 9 ] = RK [ 3 ] ^ RK [ 8 ]	511:16:20562:20584	128831	3	True				
ANR	129153	AssignmentExpression	RK [ 9 ] = RK [ 3 ] ^ RK [ 8 ]		128831	0		=			
ANR	129154	ArrayIndexing	RK [ 9 ]		128831	0					
ANR	129155	Identifier	RK		128831	0					
ANR	129156	PrimaryExpression	9		128831	1					
ANR	129157	ExclusiveOrExpression	RK [ 3 ] ^ RK [ 8 ]		128831	1		^			
ANR	129158	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	129159	Identifier	RK		128831	0					
ANR	129160	PrimaryExpression	3		128831	1					
ANR	129161	ArrayIndexing	RK [ 8 ]		128831	1					
ANR	129162	Identifier	RK		128831	0					
ANR	129163	PrimaryExpression	8		128831	1					
ANR	129164	ExpressionStatement	RK [ 10 ] = RK [ 4 ] ^ RK [ 9 ]	512:16:20602:20624	128831	4	True				
ANR	129165	AssignmentExpression	RK [ 10 ] = RK [ 4 ] ^ RK [ 9 ]		128831	0		=			
ANR	129166	ArrayIndexing	RK [ 10 ]		128831	0					
ANR	129167	Identifier	RK		128831	0					
ANR	129168	PrimaryExpression	10		128831	1					
ANR	129169	ExclusiveOrExpression	RK [ 4 ] ^ RK [ 9 ]		128831	1		^			
ANR	129170	ArrayIndexing	RK [ 4 ]		128831	0					
ANR	129171	Identifier	RK		128831	0					
ANR	129172	PrimaryExpression	4		128831	1					
ANR	129173	ArrayIndexing	RK [ 9 ]		128831	1					
ANR	129174	Identifier	RK		128831	0					
ANR	129175	PrimaryExpression	9		128831	1					
ANR	129176	ExpressionStatement	RK [ 11 ] = RK [ 5 ] ^ RK [ 10 ]	513:16:20642:20665	128831	5	True				
ANR	129177	AssignmentExpression	RK [ 11 ] = RK [ 5 ] ^ RK [ 10 ]		128831	0		=			
ANR	129178	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129179	Identifier	RK		128831	0					
ANR	129180	PrimaryExpression	11		128831	1					
ANR	129181	ExclusiveOrExpression	RK [ 5 ] ^ RK [ 10 ]		128831	1		^			
ANR	129182	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129183	Identifier	RK		128831	0					
ANR	129184	PrimaryExpression	5		128831	1					
ANR	129185	ArrayIndexing	RK [ 10 ]		128831	1					
ANR	129186	Identifier	RK		128831	0					
ANR	129187	PrimaryExpression	10		128831	1					
ANR	129188	BreakStatement	break ;	515:12:20693:20698	128831	5	True				
ANR	129189	Label	case 14 :	517:8:20709:20716	128831	6	True				
ANR	129190	ForStatement	"for ( i = 0 ; i < 7 ; i ++ , RK += 8 )"		128831	7					
ANR	129191	ForInit	i = 0 ;	519:17:20736:20741	128831	0	True				
ANR	129192	AssignmentExpression	i = 0		128831	0		=			
ANR	129193	Identifier	i		128831	0					
ANR	129194	PrimaryExpression	0		128831	1					
ANR	129195	Condition	i < 7	519:24:20743:20747	128831	1	True				
ANR	129196	RelationalExpression	i < 7		128831	0		<			
ANR	129197	Identifier	i		128831	0					
ANR	129198	PrimaryExpression	7		128831	1					
ANR	129199	Expression	"i ++ , RK += 8"	519:31:20750:20761	128831	2	True				
ANR	129200	PostIncDecOperationExpression	i ++		128831	0					
ANR	129201	Identifier	i		128831	0					
ANR	129202	IncDec	++		128831	1					
ANR	129203	AssignmentExpression	RK += 8		128831	1		+=			
ANR	129204	Identifier	RK		128831	0					
ANR	129205	PrimaryExpression	8		128831	1					
ANR	129206	CompoundStatement		71:12:1834:1834	128831	3					
ANR	129207	ExpressionStatement	RK [ 8 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )	521:16:20795:21083	128831	0	True				
ANR	129208	AssignmentExpression	RK [ 8 ] = RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	0		=			
ANR	129209	ArrayIndexing	RK [ 8 ]		128831	0					
ANR	129210	Identifier	RK		128831	0					
ANR	129211	PrimaryExpression	8		128831	1					
ANR	129212	ExclusiveOrExpression	RK [ 0 ] ^ RCON [ i ] ^ ( FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129213	ArrayIndexing	RK [ 0 ]		128831	0					
ANR	129214	Identifier	RK		128831	0					
ANR	129215	PrimaryExpression	0		128831	1					
ANR	129216	ExclusiveOrExpression	RCON [ i ] ^ ( FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129217	ArrayIndexing	RCON [ i ]		128831	0					
ANR	129218	Identifier	RCON		128831	0					
ANR	129219	Identifier	i		128831	1					
ANR	129220	ExclusiveOrExpression	( FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ] ) ^ ( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129221	ArrayIndexing	FSb [ ( RK [ 7 ] >> 8 ) & 0xFF ]		128831	0					
ANR	129222	Identifier	FSb		128831	0					
ANR	129223	BitAndExpression	( RK [ 7 ] >> 8 ) & 0xFF		128831	1		&			
ANR	129224	ShiftExpression	RK [ 7 ] >> 8		128831	0		>>			
ANR	129225	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129226	Identifier	RK		128831	0					
ANR	129227	PrimaryExpression	7		128831	1					
ANR	129228	PrimaryExpression	8		128831	1					
ANR	129229	PrimaryExpression	0xFF		128831	1					
ANR	129230	ExclusiveOrExpression	( FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129231	ShiftExpression	FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ] << 8		128831	0		<<			
ANR	129232	ArrayIndexing	FSb [ ( RK [ 7 ] >> 16 ) & 0xFF ]		128831	0					
ANR	129233	Identifier	FSb		128831	0					
ANR	129234	BitAndExpression	( RK [ 7 ] >> 16 ) & 0xFF		128831	1		&			
ANR	129235	ShiftExpression	RK [ 7 ] >> 16		128831	0		>>			
ANR	129236	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129237	Identifier	RK		128831	0					
ANR	129238	PrimaryExpression	7		128831	1					
ANR	129239	PrimaryExpression	16		128831	1					
ANR	129240	PrimaryExpression	0xFF		128831	1					
ANR	129241	PrimaryExpression	8		128831	1					
ANR	129242	ExclusiveOrExpression	( FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129243	ShiftExpression	FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ] << 16		128831	0		<<			
ANR	129244	ArrayIndexing	FSb [ ( RK [ 7 ] >> 24 ) & 0xFF ]		128831	0					
ANR	129245	Identifier	FSb		128831	0					
ANR	129246	BitAndExpression	( RK [ 7 ] >> 24 ) & 0xFF		128831	1		&			
ANR	129247	ShiftExpression	RK [ 7 ] >> 24		128831	0		>>			
ANR	129248	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129249	Identifier	RK		128831	0					
ANR	129250	PrimaryExpression	7		128831	1					
ANR	129251	PrimaryExpression	24		128831	1					
ANR	129252	PrimaryExpression	0xFF		128831	1					
ANR	129253	PrimaryExpression	16		128831	1					
ANR	129254	ShiftExpression	( ( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ] ) << 24		128831	1		<<			
ANR	129255	CastExpression	( unsigned int ) FSb [ ( RK [ 7 ] ) & 0xFF ]		128831	0					
ANR	129256	CastTarget	unsigned int		128831	0					
ANR	129257	ArrayIndexing	FSb [ ( RK [ 7 ] ) & 0xFF ]		128831	1					
ANR	129258	Identifier	FSb		128831	0					
ANR	129259	BitAndExpression	( RK [ 7 ] ) & 0xFF		128831	1		&			
ANR	129260	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129261	Identifier	RK		128831	0					
ANR	129262	PrimaryExpression	7		128831	1					
ANR	129263	PrimaryExpression	0xFF		128831	1					
ANR	129264	PrimaryExpression	24		128831	1					
ANR	129265	ExpressionStatement	RK [ 9 ] = RK [ 1 ] ^ RK [ 8 ]	527:16:21102:21124	128831	1	True				
ANR	129266	AssignmentExpression	RK [ 9 ] = RK [ 1 ] ^ RK [ 8 ]		128831	0		=			
ANR	129267	ArrayIndexing	RK [ 9 ]		128831	0					
ANR	129268	Identifier	RK		128831	0					
ANR	129269	PrimaryExpression	9		128831	1					
ANR	129270	ExclusiveOrExpression	RK [ 1 ] ^ RK [ 8 ]		128831	1		^			
ANR	129271	ArrayIndexing	RK [ 1 ]		128831	0					
ANR	129272	Identifier	RK		128831	0					
ANR	129273	PrimaryExpression	1		128831	1					
ANR	129274	ArrayIndexing	RK [ 8 ]		128831	1					
ANR	129275	Identifier	RK		128831	0					
ANR	129276	PrimaryExpression	8		128831	1					
ANR	129277	ExpressionStatement	RK [ 10 ] = RK [ 2 ] ^ RK [ 9 ]	528:16:21142:21164	128831	2	True				
ANR	129278	AssignmentExpression	RK [ 10 ] = RK [ 2 ] ^ RK [ 9 ]		128831	0		=			
ANR	129279	ArrayIndexing	RK [ 10 ]		128831	0					
ANR	129280	Identifier	RK		128831	0					
ANR	129281	PrimaryExpression	10		128831	1					
ANR	129282	ExclusiveOrExpression	RK [ 2 ] ^ RK [ 9 ]		128831	1		^			
ANR	129283	ArrayIndexing	RK [ 2 ]		128831	0					
ANR	129284	Identifier	RK		128831	0					
ANR	129285	PrimaryExpression	2		128831	1					
ANR	129286	ArrayIndexing	RK [ 9 ]		128831	1					
ANR	129287	Identifier	RK		128831	0					
ANR	129288	PrimaryExpression	9		128831	1					
ANR	129289	ExpressionStatement	RK [ 11 ] = RK [ 3 ] ^ RK [ 10 ]	529:16:21182:21205	128831	3	True				
ANR	129290	AssignmentExpression	RK [ 11 ] = RK [ 3 ] ^ RK [ 10 ]		128831	0		=			
ANR	129291	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129292	Identifier	RK		128831	0					
ANR	129293	PrimaryExpression	11		128831	1					
ANR	129294	ExclusiveOrExpression	RK [ 3 ] ^ RK [ 10 ]		128831	1		^			
ANR	129295	ArrayIndexing	RK [ 3 ]		128831	0					
ANR	129296	Identifier	RK		128831	0					
ANR	129297	PrimaryExpression	3		128831	1					
ANR	129298	ArrayIndexing	RK [ 10 ]		128831	1					
ANR	129299	Identifier	RK		128831	0					
ANR	129300	PrimaryExpression	10		128831	1					
ANR	129301	ExpressionStatement	RK [ 12 ] = RK [ 4 ] ^ ( FSb [ ( RK [ 11 ] ) & 0xFF ] ) ^ ( FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )	531:16:21224:21506	128831	4	True				
ANR	129302	AssignmentExpression	RK [ 12 ] = RK [ 4 ] ^ ( FSb [ ( RK [ 11 ] ) & 0xFF ] ) ^ ( FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )		128831	0		=			
ANR	129303	ArrayIndexing	RK [ 12 ]		128831	0					
ANR	129304	Identifier	RK		128831	0					
ANR	129305	PrimaryExpression	12		128831	1					
ANR	129306	ExclusiveOrExpression	RK [ 4 ] ^ ( FSb [ ( RK [ 11 ] ) & 0xFF ] ) ^ ( FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129307	ArrayIndexing	RK [ 4 ]		128831	0					
ANR	129308	Identifier	RK		128831	0					
ANR	129309	PrimaryExpression	4		128831	1					
ANR	129310	ExclusiveOrExpression	( FSb [ ( RK [ 11 ] ) & 0xFF ] ) ^ ( FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129311	ArrayIndexing	FSb [ ( RK [ 11 ] ) & 0xFF ]		128831	0					
ANR	129312	Identifier	FSb		128831	0					
ANR	129313	BitAndExpression	( RK [ 11 ] ) & 0xFF		128831	1		&			
ANR	129314	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129315	Identifier	RK		128831	0					
ANR	129316	PrimaryExpression	11		128831	1					
ANR	129317	PrimaryExpression	0xFF		128831	1					
ANR	129318	ExclusiveOrExpression	( FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129319	ShiftExpression	FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ] << 8		128831	0		<<			
ANR	129320	ArrayIndexing	FSb [ ( RK [ 11 ] >> 8 ) & 0xFF ]		128831	0					
ANR	129321	Identifier	FSb		128831	0					
ANR	129322	BitAndExpression	( RK [ 11 ] >> 8 ) & 0xFF		128831	1		&			
ANR	129323	ShiftExpression	RK [ 11 ] >> 8		128831	0		>>			
ANR	129324	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129325	Identifier	RK		128831	0					
ANR	129326	PrimaryExpression	11		128831	1					
ANR	129327	PrimaryExpression	8		128831	1					
ANR	129328	PrimaryExpression	0xFF		128831	1					
ANR	129329	PrimaryExpression	8		128831	1					
ANR	129330	ExclusiveOrExpression	( FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24 )		128831	1		^			
ANR	129331	ShiftExpression	FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ] << 16		128831	0		<<			
ANR	129332	ArrayIndexing	FSb [ ( RK [ 11 ] >> 16 ) & 0xFF ]		128831	0					
ANR	129333	Identifier	FSb		128831	0					
ANR	129334	BitAndExpression	( RK [ 11 ] >> 16 ) & 0xFF		128831	1		&			
ANR	129335	ShiftExpression	RK [ 11 ] >> 16		128831	0		>>			
ANR	129336	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129337	Identifier	RK		128831	0					
ANR	129338	PrimaryExpression	11		128831	1					
ANR	129339	PrimaryExpression	16		128831	1					
ANR	129340	PrimaryExpression	0xFF		128831	1					
ANR	129341	PrimaryExpression	16		128831	1					
ANR	129342	ShiftExpression	( ( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ] ) << 24		128831	1		<<			
ANR	129343	CastExpression	( unsigned int ) FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ]		128831	0					
ANR	129344	CastTarget	unsigned int		128831	0					
ANR	129345	ArrayIndexing	FSb [ ( RK [ 11 ] >> 24 ) & 0xFF ]		128831	1					
ANR	129346	Identifier	FSb		128831	0					
ANR	129347	BitAndExpression	( RK [ 11 ] >> 24 ) & 0xFF		128831	1		&			
ANR	129348	ShiftExpression	RK [ 11 ] >> 24		128831	0		>>			
ANR	129349	ArrayIndexing	RK [ 11 ]		128831	0					
ANR	129350	Identifier	RK		128831	0					
ANR	129351	PrimaryExpression	11		128831	1					
ANR	129352	PrimaryExpression	24		128831	1					
ANR	129353	PrimaryExpression	0xFF		128831	1					
ANR	129354	PrimaryExpression	24		128831	1					
ANR	129355	ExpressionStatement	RK [ 13 ] = RK [ 5 ] ^ RK [ 12 ]	537:16:21525:21548	128831	5	True				
ANR	129356	AssignmentExpression	RK [ 13 ] = RK [ 5 ] ^ RK [ 12 ]		128831	0		=			
ANR	129357	ArrayIndexing	RK [ 13 ]		128831	0					
ANR	129358	Identifier	RK		128831	0					
ANR	129359	PrimaryExpression	13		128831	1					
ANR	129360	ExclusiveOrExpression	RK [ 5 ] ^ RK [ 12 ]		128831	1		^			
ANR	129361	ArrayIndexing	RK [ 5 ]		128831	0					
ANR	129362	Identifier	RK		128831	0					
ANR	129363	PrimaryExpression	5		128831	1					
ANR	129364	ArrayIndexing	RK [ 12 ]		128831	1					
ANR	129365	Identifier	RK		128831	0					
ANR	129366	PrimaryExpression	12		128831	1					
ANR	129367	ExpressionStatement	RK [ 14 ] = RK [ 6 ] ^ RK [ 13 ]	538:16:21566:21589	128831	6	True				
ANR	129368	AssignmentExpression	RK [ 14 ] = RK [ 6 ] ^ RK [ 13 ]		128831	0		=			
ANR	129369	ArrayIndexing	RK [ 14 ]		128831	0					
ANR	129370	Identifier	RK		128831	0					
ANR	129371	PrimaryExpression	14		128831	1					
ANR	129372	ExclusiveOrExpression	RK [ 6 ] ^ RK [ 13 ]		128831	1		^			
ANR	129373	ArrayIndexing	RK [ 6 ]		128831	0					
ANR	129374	Identifier	RK		128831	0					
ANR	129375	PrimaryExpression	6		128831	1					
ANR	129376	ArrayIndexing	RK [ 13 ]		128831	1					
ANR	129377	Identifier	RK		128831	0					
ANR	129378	PrimaryExpression	13		128831	1					
ANR	129379	ExpressionStatement	RK [ 15 ] = RK [ 7 ] ^ RK [ 14 ]	539:16:21607:21630	128831	7	True				
ANR	129380	AssignmentExpression	RK [ 15 ] = RK [ 7 ] ^ RK [ 14 ]		128831	0		=			
ANR	129381	ArrayIndexing	RK [ 15 ]		128831	0					
ANR	129382	Identifier	RK		128831	0					
ANR	129383	PrimaryExpression	15		128831	1					
ANR	129384	ExclusiveOrExpression	RK [ 7 ] ^ RK [ 14 ]		128831	1		^			
ANR	129385	ArrayIndexing	RK [ 7 ]		128831	0					
ANR	129386	Identifier	RK		128831	0					
ANR	129387	PrimaryExpression	7		128831	1					
ANR	129388	ArrayIndexing	RK [ 14 ]		128831	1					
ANR	129389	Identifier	RK		128831	0					
ANR	129390	PrimaryExpression	14		128831	1					
ANR	129391	BreakStatement	break ;	541:12:21658:21663	128831	8	True				
ANR	129392	Label	default :	543:8:21674:21681	128831	9	True				
ANR	129393	Identifier	default		128831	0					
ANR	129394	BreakStatement	break ;	545:12:21696:21701	128831	10	True				
ANR	129395	ReturnType	void		128831	1					
ANR	129396	Identifier	aes_setkey_enc		128831	2					
ANR	129397	ParameterList	"aes_context * ctx , const unsigned char * key , int keysize"		128831	3					
ANR	129398	Parameter	aes_context * ctx	449:21:18884:18899	128831	0	True				
ANR	129399	ParameterType	aes_context *		128831	0					
ANR	129400	Identifier	ctx		128831	1					
ANR	129401	Parameter	const unsigned char * key	449:39:18902:18925	128831	1	True				
ANR	129402	ParameterType	const unsigned char *		128831	0					
ANR	129403	Identifier	key		128831	1					
ANR	129404	Parameter	int keysize	449:65:18928:18938	128831	2	True				
ANR	129405	ParameterType	int		128831	0					
ANR	129406	Identifier	keysize		128831	1					
ANR	129407	CFGEntryNode	ENTRY		128831		True				
ANR	129408	CFGExitNode	EXIT		128831		True				
ANR	129409	Symbol	* FSb		128831						
ANR	129410	Symbol	ctx		128831						
ANR	129411	Symbol	ctx -> nr		128831						
ANR	129412	Symbol	* * RK		128831						
ANR	129413	Symbol	i		128831						
ANR	129414	Symbol	* ctx		128831						
ANR	129415	Symbol	* RCON		128831						
ANR	129416	Symbol	keysize		128831						
ANR	129417	Symbol	ctx -> rk		128831						
ANR	129418	Symbol	* i		128831						
ANR	129419	Symbol	FSb		128831						
ANR	129420	Symbol	PADLOCK_ALIGN16		128831						
ANR	129421	Symbol	RCON		128831						
ANR	129422	Symbol	aes_init_done		128831						
ANR	129423	Symbol	RK		128831						
ANR	129424	Symbol	ctx -> buf		128831						
ANR	129425	Symbol	* RK		128831						
ANR	129426	Symbol	key		128831						
ANR	129427	Function	aes_setkey_dec	552:0:21752:22842							
ANR	129428	FunctionDef	"aes_setkey_dec (aes_context * ctx , const unsigned char * key , int keysize)"		129427	0					
ANR	129429	CompoundStatement		553:0:21831:22842	129427	0					
ANR	129430	IdentifierDeclStatement	"int i , j ;"	554:4:21837:21845	129427	0	True				
ANR	129431	IdentifierDecl	i		129427	0					
ANR	129432	IdentifierDeclType	int		129427	0					
ANR	129433	Identifier	i		129427	1					
ANR	129434	IdentifierDecl	j		129427	1					
ANR	129435	IdentifierDeclType	int		129427	0					
ANR	129436	Identifier	j		129427	1					
ANR	129437	IdentifierDeclStatement	aes_context cty ;	555:4:21851:21866	129427	1	True				
ANR	129438	IdentifierDecl	cty		129427	0					
ANR	129439	IdentifierDeclType	aes_context		129427	0					
ANR	129440	Identifier	cty		129427	1					
ANR	129441	IdentifierDeclStatement	unsigned long * RK ;	556:4:21872:21889	129427	2	True				
ANR	129442	IdentifierDecl	* RK		129427	0					
ANR	129443	IdentifierDeclType	unsigned long *		129427	0					
ANR	129444	Identifier	RK		129427	1					
ANR	129445	IdentifierDeclStatement	unsigned long * SK ;	557:4:21895:21912	129427	3	True				
ANR	129446	IdentifierDecl	* SK		129427	0					
ANR	129447	IdentifierDeclType	unsigned long *		129427	0					
ANR	129448	Identifier	SK		129427	1					
ANR	129449	SwitchStatement	switch ( keysize )		129427	4					
ANR	129450	Condition	keysize	559:12:21927:21933	129427	0	True				
ANR	129451	Identifier	keysize		129427	0					
ANR	129452	CompoundStatement		8:4:109:109	129427	1					
ANR	129453	Label	case 128 :	561:8:21951:21959	129427	0	True				
ANR	129454	ExpressionStatement	ctx -> nr = 10	561:18:21961:21973	129427	1	True				
ANR	129455	AssignmentExpression	ctx -> nr = 10		129427	0		=			
ANR	129456	PtrMemberAccess	ctx -> nr		129427	0					
ANR	129457	Identifier	ctx		129427	0					
ANR	129458	Identifier	nr		129427	1					
ANR	129459	PrimaryExpression	10		129427	1					
ANR	129460	BreakStatement	break ;	561:32:21975:21980	129427	2	True				
ANR	129461	Label	case 192 :	562:8:21990:21998	129427	3	True				
ANR	129462	ExpressionStatement	ctx -> nr = 12	562:18:22000:22012	129427	4	True				
ANR	129463	AssignmentExpression	ctx -> nr = 12		129427	0		=			
ANR	129464	PtrMemberAccess	ctx -> nr		129427	0					
ANR	129465	Identifier	ctx		129427	0					
ANR	129466	Identifier	nr		129427	1					
ANR	129467	PrimaryExpression	12		129427	1					
ANR	129468	BreakStatement	break ;	562:32:22014:22019	129427	5	True				
ANR	129469	Label	case 256 :	563:8:22029:22037	129427	6	True				
ANR	129470	ExpressionStatement	ctx -> nr = 14	563:18:22039:22051	129427	7	True				
ANR	129471	AssignmentExpression	ctx -> nr = 14		129427	0		=			
ANR	129472	PtrMemberAccess	ctx -> nr		129427	0					
ANR	129473	Identifier	ctx		129427	0					
ANR	129474	Identifier	nr		129427	1					
ANR	129475	PrimaryExpression	14		129427	1					
ANR	129476	BreakStatement	break ;	563:32:22053:22058	129427	8	True				
ANR	129477	Label	default :	564:8:22068:22076	129427	9	True				
ANR	129478	Identifier	default		129427	0					
ANR	129479	ReturnStatement	return ;	564:18:22078:22084	129427	10	True				
ANR	129480	ExpressionStatement	ctx -> rk = RK = PADLOCK_ALIGN16 ( ctx -> buf )	568:4:22126:22168	129427	5	True				
ANR	129481	AssignmentExpression	ctx -> rk = RK = PADLOCK_ALIGN16 ( ctx -> buf )		129427	0		=			
ANR	129482	PtrMemberAccess	ctx -> rk		129427	0					
ANR	129483	Identifier	ctx		129427	0					
ANR	129484	Identifier	rk		129427	1					
ANR	129485	AssignmentExpression	RK = PADLOCK_ALIGN16 ( ctx -> buf )		129427	1		=			
ANR	129486	Identifier	RK		129427	0					
ANR	129487	CallExpression	PADLOCK_ALIGN16 ( ctx -> buf )		129427	1					
ANR	129488	Callee	PADLOCK_ALIGN16		129427	0					
ANR	129489	Identifier	PADLOCK_ALIGN16		129427	0					
ANR	129490	ArgumentList	ctx -> buf		129427	1					
ANR	129491	Argument	ctx -> buf		129427	0					
ANR	129492	PtrMemberAccess	ctx -> buf		129427	0					
ANR	129493	Identifier	ctx		129427	0					
ANR	129494	Identifier	buf		129427	1					
ANR	129495	ExpressionStatement	"aes_setkey_enc ( & cty , key , keysize )"	573:4:22217:22253	129427	6	True				
ANR	129496	CallExpression	"aes_setkey_enc ( & cty , key , keysize )"		129427	0					
ANR	129497	Callee	aes_setkey_enc		129427	0					
ANR	129498	Identifier	aes_setkey_enc		129427	0					
ANR	129499	ArgumentList	& cty		129427	1					
ANR	129500	Argument	& cty		129427	0					
ANR	129501	UnaryOperationExpression	& cty		129427	0					
ANR	129502	UnaryOperator	&		129427	0					
ANR	129503	Identifier	cty		129427	1					
ANR	129504	Argument	key		129427	1					
ANR	129505	Identifier	key		129427	0					
ANR	129506	Argument	keysize		129427	2					
ANR	129507	Identifier	keysize		129427	0					
ANR	129508	ExpressionStatement	SK = cty . rk + cty . nr * 4	574:4:22259:22283	129427	7	True				
ANR	129509	AssignmentExpression	SK = cty . rk + cty . nr * 4		129427	0		=			
ANR	129510	Identifier	SK		129427	0					
ANR	129511	AdditiveExpression	cty . rk + cty . nr * 4		129427	1		+			
ANR	129512	MemberAccess	cty . rk		129427	0					
ANR	129513	Identifier	cty		129427	0					
ANR	129514	Identifier	rk		129427	1					
ANR	129515	MultiplicativeExpression	cty . nr * 4		129427	1		*			
ANR	129516	MemberAccess	cty . nr		129427	0					
ANR	129517	Identifier	cty		129427	0					
ANR	129518	Identifier	nr		129427	1					
ANR	129519	PrimaryExpression	4		129427	1					
ANR	129520	ExpressionStatement	* RK ++ = * SK ++	576:4:22290:22303	129427	8	True				
ANR	129521	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129522	UnaryOperationExpression	* RK ++		129427	0					
ANR	129523	UnaryOperator	*		129427	0					
ANR	129524	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129525	Identifier	RK		129427	0					
ANR	129526	IncDec	++		129427	1					
ANR	129527	UnaryOperationExpression	* SK ++		129427	1					
ANR	129528	UnaryOperator	*		129427	0					
ANR	129529	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129530	Identifier	SK		129427	0					
ANR	129531	IncDec	++		129427	1					
ANR	129532	ExpressionStatement	* RK ++ = * SK ++	577:4:22309:22322	129427	9	True				
ANR	129533	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129534	UnaryOperationExpression	* RK ++		129427	0					
ANR	129535	UnaryOperator	*		129427	0					
ANR	129536	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129537	Identifier	RK		129427	0					
ANR	129538	IncDec	++		129427	1					
ANR	129539	UnaryOperationExpression	* SK ++		129427	1					
ANR	129540	UnaryOperator	*		129427	0					
ANR	129541	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129542	Identifier	SK		129427	0					
ANR	129543	IncDec	++		129427	1					
ANR	129544	ExpressionStatement	* RK ++ = * SK ++	578:4:22328:22341	129427	10	True				
ANR	129545	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129546	UnaryOperationExpression	* RK ++		129427	0					
ANR	129547	UnaryOperator	*		129427	0					
ANR	129548	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129549	Identifier	RK		129427	0					
ANR	129550	IncDec	++		129427	1					
ANR	129551	UnaryOperationExpression	* SK ++		129427	1					
ANR	129552	UnaryOperator	*		129427	0					
ANR	129553	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129554	Identifier	SK		129427	0					
ANR	129555	IncDec	++		129427	1					
ANR	129556	ExpressionStatement	* RK ++ = * SK ++	579:4:22347:22360	129427	11	True				
ANR	129557	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129558	UnaryOperationExpression	* RK ++		129427	0					
ANR	129559	UnaryOperator	*		129427	0					
ANR	129560	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129561	Identifier	RK		129427	0					
ANR	129562	IncDec	++		129427	1					
ANR	129563	UnaryOperationExpression	* SK ++		129427	1					
ANR	129564	UnaryOperator	*		129427	0					
ANR	129565	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129566	Identifier	SK		129427	0					
ANR	129567	IncDec	++		129427	1					
ANR	129568	ForStatement	"for ( i = ctx -> nr - 1 , SK -= 8 ; i > 0 ; i -- , SK -= 8 )"		129427	12					
ANR	129569	ForInit	"i = ctx -> nr - 1 , SK -= 8 ;"	581:9:22372:22396	129427	0	True				
ANR	129570	Expression	"i = ctx -> nr - 1 , SK -= 8"		129427	0					
ANR	129571	AssignmentExpression	i = ctx -> nr - 1		129427	0		=			
ANR	129572	Identifier	i		129427	0					
ANR	129573	AdditiveExpression	ctx -> nr - 1		129427	1		-			
ANR	129574	PtrMemberAccess	ctx -> nr		129427	0					
ANR	129575	Identifier	ctx		129427	0					
ANR	129576	Identifier	nr		129427	1					
ANR	129577	PrimaryExpression	1		129427	1					
ANR	129578	AssignmentExpression	SK -= 8		129427	1		-=			
ANR	129579	Identifier	SK		129427	0					
ANR	129580	PrimaryExpression	8		129427	1					
ANR	129581	Condition	i > 0	581:35:22398:22402	129427	1	True				
ANR	129582	RelationalExpression	i > 0		129427	0		>			
ANR	129583	Identifier	i		129427	0					
ANR	129584	PrimaryExpression	0		129427	1					
ANR	129585	Expression	"i -- , SK -= 8"	581:42:22405:22416	129427	2	True				
ANR	129586	PostIncDecOperationExpression	i --		129427	0					
ANR	129587	Identifier	i		129427	0					
ANR	129588	IncDec	--		129427	1					
ANR	129589	AssignmentExpression	SK -= 8		129427	1		-=			
ANR	129590	Identifier	SK		129427	0					
ANR	129591	PrimaryExpression	8		129427	1					
ANR	129592	CompoundStatement		30:4:592:592	129427	3					
ANR	129593	ForStatement	"for ( j = 0 ; j < 4 ; j ++ , SK ++ )"		129427	0					
ANR	129594	ForInit	j = 0 ;	583:13:22439:22444	129427	0	True				
ANR	129595	AssignmentExpression	j = 0		129427	0		=			
ANR	129596	Identifier	j		129427	0					
ANR	129597	PrimaryExpression	0		129427	1					
ANR	129598	Condition	j < 4	583:20:22446:22450	129427	1	True				
ANR	129599	RelationalExpression	j < 4		129427	0		<			
ANR	129600	Identifier	j		129427	0					
ANR	129601	PrimaryExpression	4		129427	1					
ANR	129602	Expression	"j ++ , SK ++"	583:27:22453:22461	129427	2	True				
ANR	129603	PostIncDecOperationExpression	j ++		129427	0					
ANR	129604	Identifier	j		129427	0					
ANR	129605	IncDec	++		129427	1					
ANR	129606	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129607	Identifier	SK		129427	0					
ANR	129608	IncDec	++		129427	1					
ANR	129609	CompoundStatement		32:8:641:641	129427	3					
ANR	129610	ExpressionStatement	* RK ++ = RT0 [ FSb [ ( * SK ) & 0xFF ] ] ^ RT1 [ FSb [ ( * SK >> 8 ) & 0xFF ] ] ^ RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ] ^ RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]	585:12:22487:22700	129427	0	True				
ANR	129611	AssignmentExpression	* RK ++ = RT0 [ FSb [ ( * SK ) & 0xFF ] ] ^ RT1 [ FSb [ ( * SK >> 8 ) & 0xFF ] ] ^ RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ] ^ RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]		129427	0		=			
ANR	129612	UnaryOperationExpression	* RK ++		129427	0					
ANR	129613	UnaryOperator	*		129427	0					
ANR	129614	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129615	Identifier	RK		129427	0					
ANR	129616	IncDec	++		129427	1					
ANR	129617	ExclusiveOrExpression	RT0 [ FSb [ ( * SK ) & 0xFF ] ] ^ RT1 [ FSb [ ( * SK >> 8 ) & 0xFF ] ] ^ RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ] ^ RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]		129427	1		^			
ANR	129618	ArrayIndexing	RT0 [ FSb [ ( * SK ) & 0xFF ] ]		129427	0					
ANR	129619	Identifier	RT0		129427	0					
ANR	129620	ArrayIndexing	FSb [ ( * SK ) & 0xFF ]		129427	1					
ANR	129621	Identifier	FSb		129427	0					
ANR	129622	BitAndExpression	( * SK ) & 0xFF		129427	1		&			
ANR	129623	UnaryOperationExpression	* SK		129427	0					
ANR	129624	UnaryOperator	*		129427	0					
ANR	129625	Identifier	SK		129427	1					
ANR	129626	PrimaryExpression	0xFF		129427	1					
ANR	129627	ExclusiveOrExpression	RT1 [ FSb [ ( * SK >> 8 ) & 0xFF ] ] ^ RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ] ^ RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]		129427	1		^			
ANR	129628	ArrayIndexing	RT1 [ FSb [ ( * SK >> 8 ) & 0xFF ] ]		129427	0					
ANR	129629	Identifier	RT1		129427	0					
ANR	129630	ArrayIndexing	FSb [ ( * SK >> 8 ) & 0xFF ]		129427	1					
ANR	129631	Identifier	FSb		129427	0					
ANR	129632	BitAndExpression	( * SK >> 8 ) & 0xFF		129427	1		&			
ANR	129633	ShiftExpression	* SK >> 8		129427	0		>>			
ANR	129634	UnaryOperationExpression	* SK		129427	0					
ANR	129635	UnaryOperator	*		129427	0					
ANR	129636	Identifier	SK		129427	1					
ANR	129637	PrimaryExpression	8		129427	1					
ANR	129638	PrimaryExpression	0xFF		129427	1					
ANR	129639	ExclusiveOrExpression	RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ] ^ RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]		129427	1		^			
ANR	129640	ArrayIndexing	RT2 [ FSb [ ( * SK >> 16 ) & 0xFF ] ]		129427	0					
ANR	129641	Identifier	RT2		129427	0					
ANR	129642	ArrayIndexing	FSb [ ( * SK >> 16 ) & 0xFF ]		129427	1					
ANR	129643	Identifier	FSb		129427	0					
ANR	129644	BitAndExpression	( * SK >> 16 ) & 0xFF		129427	1		&			
ANR	129645	ShiftExpression	* SK >> 16		129427	0		>>			
ANR	129646	UnaryOperationExpression	* SK		129427	0					
ANR	129647	UnaryOperator	*		129427	0					
ANR	129648	Identifier	SK		129427	1					
ANR	129649	PrimaryExpression	16		129427	1					
ANR	129650	PrimaryExpression	0xFF		129427	1					
ANR	129651	ArrayIndexing	RT3 [ FSb [ ( * SK >> 24 ) & 0xFF ] ]		129427	1					
ANR	129652	Identifier	RT3		129427	0					
ANR	129653	ArrayIndexing	FSb [ ( * SK >> 24 ) & 0xFF ]		129427	1					
ANR	129654	Identifier	FSb		129427	0					
ANR	129655	BitAndExpression	( * SK >> 24 ) & 0xFF		129427	1		&			
ANR	129656	ShiftExpression	* SK >> 24		129427	0		>>			
ANR	129657	UnaryOperationExpression	* SK		129427	0					
ANR	129658	UnaryOperator	*		129427	0					
ANR	129659	Identifier	SK		129427	1					
ANR	129660	PrimaryExpression	24		129427	1					
ANR	129661	PrimaryExpression	0xFF		129427	1					
ANR	129662	ExpressionStatement	* RK ++ = * SK ++	592:4:22723:22736	129427	13	True				
ANR	129663	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129664	UnaryOperationExpression	* RK ++		129427	0					
ANR	129665	UnaryOperator	*		129427	0					
ANR	129666	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129667	Identifier	RK		129427	0					
ANR	129668	IncDec	++		129427	1					
ANR	129669	UnaryOperationExpression	* SK ++		129427	1					
ANR	129670	UnaryOperator	*		129427	0					
ANR	129671	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129672	Identifier	SK		129427	0					
ANR	129673	IncDec	++		129427	1					
ANR	129674	ExpressionStatement	* RK ++ = * SK ++	593:4:22742:22755	129427	14	True				
ANR	129675	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129676	UnaryOperationExpression	* RK ++		129427	0					
ANR	129677	UnaryOperator	*		129427	0					
ANR	129678	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129679	Identifier	RK		129427	0					
ANR	129680	IncDec	++		129427	1					
ANR	129681	UnaryOperationExpression	* SK ++		129427	1					
ANR	129682	UnaryOperator	*		129427	0					
ANR	129683	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129684	Identifier	SK		129427	0					
ANR	129685	IncDec	++		129427	1					
ANR	129686	ExpressionStatement	* RK ++ = * SK ++	594:4:22761:22774	129427	15	True				
ANR	129687	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129688	UnaryOperationExpression	* RK ++		129427	0					
ANR	129689	UnaryOperator	*		129427	0					
ANR	129690	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129691	Identifier	RK		129427	0					
ANR	129692	IncDec	++		129427	1					
ANR	129693	UnaryOperationExpression	* SK ++		129427	1					
ANR	129694	UnaryOperator	*		129427	0					
ANR	129695	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129696	Identifier	SK		129427	0					
ANR	129697	IncDec	++		129427	1					
ANR	129698	ExpressionStatement	* RK ++ = * SK ++	595:4:22780:22793	129427	16	True				
ANR	129699	AssignmentExpression	* RK ++ = * SK ++		129427	0		=			
ANR	129700	UnaryOperationExpression	* RK ++		129427	0					
ANR	129701	UnaryOperator	*		129427	0					
ANR	129702	PostIncDecOperationExpression	RK ++		129427	1					
ANR	129703	Identifier	RK		129427	0					
ANR	129704	IncDec	++		129427	1					
ANR	129705	UnaryOperationExpression	* SK ++		129427	1					
ANR	129706	UnaryOperator	*		129427	0					
ANR	129707	PostIncDecOperationExpression	SK ++		129427	1					
ANR	129708	Identifier	SK		129427	0					
ANR	129709	IncDec	++		129427	1					
ANR	129710	ExpressionStatement	"memset ( & cty , 0 , sizeof ( aes_context ) )"	597:4:22800:22840	129427	17	True				
ANR	129711	CallExpression	"memset ( & cty , 0 , sizeof ( aes_context ) )"		129427	0					
ANR	129712	Callee	memset		129427	0					
ANR	129713	Identifier	memset		129427	0					
ANR	129714	ArgumentList	& cty		129427	1					
ANR	129715	Argument	& cty		129427	0					
ANR	129716	UnaryOperationExpression	& cty		129427	0					
ANR	129717	UnaryOperator	&		129427	0					
ANR	129718	Identifier	cty		129427	1					
ANR	129719	Argument	0		129427	1					
ANR	129720	PrimaryExpression	0		129427	0					
ANR	129721	Argument	sizeof ( aes_context )		129427	2					
ANR	129722	SizeofExpression	sizeof ( aes_context )		129427	0					
ANR	129723	Sizeof	sizeof		129427	0					
ANR	129724	SizeofOperand	aes_context		129427	1					
ANR	129725	ReturnType	void		129427	1					
ANR	129726	Identifier	aes_setkey_dec		129427	2					
ANR	129727	ParameterList	"aes_context * ctx , const unsigned char * key , int keysize"		129427	3					
ANR	129728	Parameter	aes_context * ctx	552:21:21773:21788	129427	0	True				
ANR	129729	ParameterType	aes_context *		129427	0					
ANR	129730	Identifier	ctx		129427	1					
ANR	129731	Parameter	const unsigned char * key	552:39:21791:21814	129427	1	True				
ANR	129732	ParameterType	const unsigned char *		129427	0					
ANR	129733	Identifier	key		129427	1					
ANR	129734	Parameter	int keysize	552:65:21817:21827	129427	2	True				
ANR	129735	ParameterType	int		129427	0					
ANR	129736	Identifier	keysize		129427	1					
ANR	129737	CFGEntryNode	ENTRY		129427		True				
ANR	129738	CFGExitNode	EXIT		129427		True				
ANR	129739	Symbol	* * * SK		129427						
ANR	129740	Symbol	ctx -> nr		129427						
ANR	129741	Symbol	* * SK		129427						
ANR	129742	Symbol	& cty		129427						
ANR	129743	Symbol	* * FSb		129427						
ANR	129744	Symbol	keysize		129427						
ANR	129745	Symbol	ctx -> rk		129427						
ANR	129746	Symbol	cty . nr		129427						
ANR	129747	Symbol	SK		129427						
ANR	129748	Symbol	cty . rk		129427						
ANR	129749	Symbol	ctx -> buf		129427						
ANR	129750	Symbol	* SK		129427						
ANR	129751	Symbol	key		129427						
ANR	129752	Symbol	* FSb		129427						
ANR	129753	Symbol	* RT3		129427						
ANR	129754	Symbol	* RT2		129427						
ANR	129755	Symbol	ctx		129427						
ANR	129756	Symbol	* RT1		129427						
ANR	129757	Symbol	* SK ++		129427						
ANR	129758	Symbol	* RT0		129427						
ANR	129759	Symbol	i		129427						
ANR	129760	Symbol	cty		129427						
ANR	129761	Symbol	j		129427						
ANR	129762	Symbol	* ctx		129427						
ANR	129763	Symbol	RT1		129427						
ANR	129764	Symbol	RT0		129427						
ANR	129765	Symbol	RT3		129427						
ANR	129766	Symbol	RT2		129427						
ANR	129767	Symbol	FSb		129427						
ANR	129768	Symbol	PADLOCK_ALIGN16		129427						
ANR	129769	Symbol	* RK ++		129427						
ANR	129770	Symbol	RK		129427						
ANR	129771	Function	aes_crypt_ecb	649:0:24997:28460							
ANR	129772	FunctionDef	"aes_crypt_ecb (aes_context * ctx , int mode , const unsigned char input [ 16 ] , unsigned char output [ 16 ])"		129771	0					
ANR	129773	CompoundStatement		653:0:25163:28460	129771	0					
ANR	129774	IdentifierDeclStatement	int i ;	654:4:25169:25174	129771	0	True				
ANR	129775	IdentifierDecl	i		129771	0					
ANR	129776	IdentifierDeclType	int		129771	0					
ANR	129777	Identifier	i		129771	1					
ANR	129778	IdentifierDeclStatement	"unsigned long * RK , X0 , X1 , X2 , X3 , Y0 , Y1 , Y2 , Y3 ;"	655:4:25180:25229	129771	1	True				
ANR	129779	IdentifierDecl	* RK		129771	0					
ANR	129780	IdentifierDeclType	unsigned long *		129771	0					
ANR	129781	Identifier	RK		129771	1					
ANR	129782	IdentifierDecl	X0		129771	1					
ANR	129783	IdentifierDeclType	unsigned long		129771	0					
ANR	129784	Identifier	X0		129771	1					
ANR	129785	IdentifierDecl	X1		129771	2					
ANR	129786	IdentifierDeclType	unsigned long		129771	0					
ANR	129787	Identifier	X1		129771	1					
ANR	129788	IdentifierDecl	X2		129771	3					
ANR	129789	IdentifierDeclType	unsigned long		129771	0					
ANR	129790	Identifier	X2		129771	1					
ANR	129791	IdentifierDecl	X3		129771	4					
ANR	129792	IdentifierDeclType	unsigned long		129771	0					
ANR	129793	Identifier	X3		129771	1					
ANR	129794	IdentifierDecl	Y0		129771	5					
ANR	129795	IdentifierDeclType	unsigned long		129771	0					
ANR	129796	Identifier	Y0		129771	1					
ANR	129797	IdentifierDecl	Y1		129771	6					
ANR	129798	IdentifierDeclType	unsigned long		129771	0					
ANR	129799	Identifier	Y1		129771	1					
ANR	129800	IdentifierDecl	Y2		129771	7					
ANR	129801	IdentifierDeclType	unsigned long		129771	0					
ANR	129802	Identifier	Y2		129771	1					
ANR	129803	IdentifierDecl	Y3		129771	8					
ANR	129804	IdentifierDeclType	unsigned long		129771	0					
ANR	129805	Identifier	Y3		129771	1					
ANR	129806	IfStatement	if ( padlock_supports ( PADLOCK_ACE ) )		129771	2					
ANR	129807	Condition	padlock_supports ( PADLOCK_ACE )	658:8:25296:25326	129771	0	True				
ANR	129808	CallExpression	padlock_supports ( PADLOCK_ACE )		129771	0					
ANR	129809	Callee	padlock_supports		129771	0					
ANR	129810	Identifier	padlock_supports		129771	0					
ANR	129811	ArgumentList	PADLOCK_ACE		129771	1					
ANR	129812	Argument	PADLOCK_ACE		129771	0					
ANR	129813	Identifier	PADLOCK_ACE		129771	0					
ANR	129814	CompoundStatement		7:4:170:170	129771	1					
ANR	129815	IfStatement	"if ( padlock_xcryptecb ( ctx , mode , input , output ) == 0 )"		129771	0					
ANR	129816	Condition	"padlock_xcryptecb ( ctx , mode , input , output ) == 0"	660:12:25348:25397	129771	0	True				
ANR	129817	EqualityExpression	"padlock_xcryptecb ( ctx , mode , input , output ) == 0"		129771	0		==			
ANR	129818	CallExpression	"padlock_xcryptecb ( ctx , mode , input , output )"		129771	0					
ANR	129819	Callee	padlock_xcryptecb		129771	0					
ANR	129820	Identifier	padlock_xcryptecb		129771	0					
ANR	129821	ArgumentList	ctx		129771	1					
ANR	129822	Argument	ctx		129771	0					
ANR	129823	Identifier	ctx		129771	0					
ANR	129824	Argument	mode		129771	1					
ANR	129825	Identifier	mode		129771	0					
ANR	129826	Argument	input		129771	2					
ANR	129827	Identifier	input		129771	0					
ANR	129828	Argument	output		129771	3					
ANR	129829	Identifier	output		129771	0					
ANR	129830	PrimaryExpression	0		129771	1					
ANR	129831	ReturnStatement	return ;	661:12:25413:25419	129771	1	True				
ANR	129832	IfStatement	if ( ctx == NULL || ctx -> rk == NULL )		129771	3					
ANR	129833	Condition	ctx == NULL || ctx -> rk == NULL	665:8:25443:25472	129771	0	True				
ANR	129834	OrExpression	ctx == NULL || ctx -> rk == NULL		129771	0		||			
ANR	129835	EqualityExpression	ctx == NULL		129771	0		==			
ANR	129836	Identifier	ctx		129771	0					
ANR	129837	Identifier	NULL		129771	1					
ANR	129838	EqualityExpression	ctx -> rk == NULL		129771	1		==			
ANR	129839	PtrMemberAccess	ctx -> rk		129771	0					
ANR	129840	Identifier	ctx		129771	0					
ANR	129841	Identifier	rk		129771	1					
ANR	129842	Identifier	NULL		129771	1					
ANR	129843	ReturnStatement	return ;	666:8:25483:25489	129771	1	True				
ANR	129844	ExpressionStatement	RK = ctx -> rk	668:4:25496:25508	129771	4	True				
ANR	129845	AssignmentExpression	RK = ctx -> rk		129771	0		=			
ANR	129846	Identifier	RK		129771	0					
ANR	129847	PtrMemberAccess	ctx -> rk		129771	1					
ANR	129848	Identifier	ctx		129771	0					
ANR	129849	Identifier	rk		129771	1					
ANR	129850	ExpressionStatement	"GET_ULONG_LE ( X0 , input , 0 )"	670:4:25515:25544	129771	5	True				
ANR	129851	CallExpression	"GET_ULONG_LE ( X0 , input , 0 )"		129771	0					
ANR	129852	Callee	GET_ULONG_LE		129771	0					
ANR	129853	Identifier	GET_ULONG_LE		129771	0					
ANR	129854	ArgumentList	X0		129771	1					
ANR	129855	Argument	X0		129771	0					
ANR	129856	Identifier	X0		129771	0					
ANR	129857	Argument	input		129771	1					
ANR	129858	Identifier	input		129771	0					
ANR	129859	Argument	0		129771	2					
ANR	129860	PrimaryExpression	0		129771	0					
ANR	129861	ExpressionStatement	X0 ^= * RK ++	670:35:25546:25557	129771	6	True				
ANR	129862	AssignmentExpression	X0 ^= * RK ++		129771	0		^=			
ANR	129863	Identifier	X0		129771	0					
ANR	129864	UnaryOperationExpression	* RK ++		129771	1					
ANR	129865	UnaryOperator	*		129771	0					
ANR	129866	PostIncDecOperationExpression	RK ++		129771	1					
ANR	129867	Identifier	RK		129771	0					
ANR	129868	IncDec	++		129771	1					
ANR	129869	ExpressionStatement	"GET_ULONG_LE ( X1 , input , 4 )"	671:4:25563:25592	129771	7	True				
ANR	129870	CallExpression	"GET_ULONG_LE ( X1 , input , 4 )"		129771	0					
ANR	129871	Callee	GET_ULONG_LE		129771	0					
ANR	129872	Identifier	GET_ULONG_LE		129771	0					
ANR	129873	ArgumentList	X1		129771	1					
ANR	129874	Argument	X1		129771	0					
ANR	129875	Identifier	X1		129771	0					
ANR	129876	Argument	input		129771	1					
ANR	129877	Identifier	input		129771	0					
ANR	129878	Argument	4		129771	2					
ANR	129879	PrimaryExpression	4		129771	0					
ANR	129880	ExpressionStatement	X1 ^= * RK ++	671:35:25594:25605	129771	8	True				
ANR	129881	AssignmentExpression	X1 ^= * RK ++		129771	0		^=			
ANR	129882	Identifier	X1		129771	0					
ANR	129883	UnaryOperationExpression	* RK ++		129771	1					
ANR	129884	UnaryOperator	*		129771	0					
ANR	129885	PostIncDecOperationExpression	RK ++		129771	1					
ANR	129886	Identifier	RK		129771	0					
ANR	129887	IncDec	++		129771	1					
ANR	129888	ExpressionStatement	"GET_ULONG_LE ( X2 , input , 8 )"	672:4:25611:25640	129771	9	True				
ANR	129889	CallExpression	"GET_ULONG_LE ( X2 , input , 8 )"		129771	0					
ANR	129890	Callee	GET_ULONG_LE		129771	0					
ANR	129891	Identifier	GET_ULONG_LE		129771	0					
ANR	129892	ArgumentList	X2		129771	1					
ANR	129893	Argument	X2		129771	0					
ANR	129894	Identifier	X2		129771	0					
ANR	129895	Argument	input		129771	1					
ANR	129896	Identifier	input		129771	0					
ANR	129897	Argument	8		129771	2					
ANR	129898	PrimaryExpression	8		129771	0					
ANR	129899	ExpressionStatement	X2 ^= * RK ++	672:35:25642:25653	129771	10	True				
ANR	129900	AssignmentExpression	X2 ^= * RK ++		129771	0		^=			
ANR	129901	Identifier	X2		129771	0					
ANR	129902	UnaryOperationExpression	* RK ++		129771	1					
ANR	129903	UnaryOperator	*		129771	0					
ANR	129904	PostIncDecOperationExpression	RK ++		129771	1					
ANR	129905	Identifier	RK		129771	0					
ANR	129906	IncDec	++		129771	1					
ANR	129907	ExpressionStatement	"GET_ULONG_LE ( X3 , input , 12 )"	673:4:25659:25688	129771	11	True				
ANR	129908	CallExpression	"GET_ULONG_LE ( X3 , input , 12 )"		129771	0					
ANR	129909	Callee	GET_ULONG_LE		129771	0					
ANR	129910	Identifier	GET_ULONG_LE		129771	0					
ANR	129911	ArgumentList	X3		129771	1					
ANR	129912	Argument	X3		129771	0					
ANR	129913	Identifier	X3		129771	0					
ANR	129914	Argument	input		129771	1					
ANR	129915	Identifier	input		129771	0					
ANR	129916	Argument	12		129771	2					
ANR	129917	PrimaryExpression	12		129771	0					
ANR	129918	ExpressionStatement	X3 ^= * RK ++	673:35:25690:25701	129771	12	True				
ANR	129919	AssignmentExpression	X3 ^= * RK ++		129771	0		^=			
ANR	129920	Identifier	X3		129771	0					
ANR	129921	UnaryOperationExpression	* RK ++		129771	1					
ANR	129922	UnaryOperator	*		129771	0					
ANR	129923	PostIncDecOperationExpression	RK ++		129771	1					
ANR	129924	Identifier	RK		129771	0					
ANR	129925	IncDec	++		129771	1					
ANR	129926	IfStatement	if ( mode == AES_DECRYPT )		129771	13					
ANR	129927	Condition	mode == AES_DECRYPT	675:8:25712:25730	129771	0	True				
ANR	129928	EqualityExpression	mode == AES_DECRYPT		129771	0		==			
ANR	129929	Identifier	mode		129771	0					
ANR	129930	Identifier	AES_DECRYPT		129771	1					
ANR	129931	CompoundStatement		24:4:574:574	129771	1					
ANR	129932	ForStatement	for ( i = ( ctx -> nr >> 1 ) - 1 ; i > 0 ; i -- )		129771	0					
ANR	129933	ForInit	i = ( ctx -> nr >> 1 ) - 1 ;	677:13:25753:25775	129771	0	True				
ANR	129934	AssignmentExpression	i = ( ctx -> nr >> 1 ) - 1		129771	0		=			
ANR	129935	Identifier	i		129771	0					
ANR	129936	AdditiveExpression	( ctx -> nr >> 1 ) - 1		129771	1		-			
ANR	129937	ShiftExpression	ctx -> nr >> 1		129771	0		>>			
ANR	129938	PtrMemberAccess	ctx -> nr		129771	0					
ANR	129939	Identifier	ctx		129771	0					
ANR	129940	Identifier	nr		129771	1					
ANR	129941	PrimaryExpression	1		129771	1					
ANR	129942	PrimaryExpression	1		129771	1					
ANR	129943	Condition	i > 0	677:37:25777:25781	129771	1	True				
ANR	129944	RelationalExpression	i > 0		129771	0		>			
ANR	129945	Identifier	i		129771	0					
ANR	129946	PrimaryExpression	0		129771	1					
ANR	129947	PostIncDecOperationExpression	i --	677:44:25784:25786	129771	2	True				
ANR	129948	Identifier	i		129771	0					
ANR	129949	IncDec	--		129771	1					
ANR	129950	CompoundStatement		26:8:634:634	129771	3					
ANR	129951	ExpressionStatement	"AES_RROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"	679:12:25812:25856	129771	0	True				
ANR	129952	CallExpression	"AES_RROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"		129771	0					
ANR	129953	Callee	AES_RROUND		129771	0					
ANR	129954	Identifier	AES_RROUND		129771	0					
ANR	129955	ArgumentList	Y0		129771	1					
ANR	129956	Argument	Y0		129771	0					
ANR	129957	Identifier	Y0		129771	0					
ANR	129958	Argument	Y1		129771	1					
ANR	129959	Identifier	Y1		129771	0					
ANR	129960	Argument	Y2		129771	2					
ANR	129961	Identifier	Y2		129771	0					
ANR	129962	Argument	Y3		129771	3					
ANR	129963	Identifier	Y3		129771	0					
ANR	129964	Argument	X0		129771	4					
ANR	129965	Identifier	X0		129771	0					
ANR	129966	Argument	X1		129771	5					
ANR	129967	Identifier	X1		129771	0					
ANR	129968	Argument	X2		129771	6					
ANR	129969	Identifier	X2		129771	0					
ANR	129970	Argument	X3		129771	7					
ANR	129971	Identifier	X3		129771	0					
ANR	129972	ExpressionStatement	"AES_RROUND ( X0 , X1 , X2 , X3 , Y0 , Y1 , Y2 , Y3 )"	680:12:25870:25914	129771	1	True				
ANR	129973	CallExpression	"AES_RROUND ( X0 , X1 , X2 , X3 , Y0 , Y1 , Y2 , Y3 )"		129771	0					
ANR	129974	Callee	AES_RROUND		129771	0					
ANR	129975	Identifier	AES_RROUND		129771	0					
ANR	129976	ArgumentList	X0		129771	1					
ANR	129977	Argument	X0		129771	0					
ANR	129978	Identifier	X0		129771	0					
ANR	129979	Argument	X1		129771	1					
ANR	129980	Identifier	X1		129771	0					
ANR	129981	Argument	X2		129771	2					
ANR	129982	Identifier	X2		129771	0					
ANR	129983	Argument	X3		129771	3					
ANR	129984	Identifier	X3		129771	0					
ANR	129985	Argument	Y0		129771	4					
ANR	129986	Identifier	Y0		129771	0					
ANR	129987	Argument	Y1		129771	5					
ANR	129988	Identifier	Y1		129771	0					
ANR	129989	Argument	Y2		129771	6					
ANR	129990	Identifier	Y2		129771	0					
ANR	129991	Argument	Y3		129771	7					
ANR	129992	Identifier	Y3		129771	0					
ANR	129993	ExpressionStatement	"AES_RROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"	683:8:25935:25979	129771	1	True				
ANR	129994	CallExpression	"AES_RROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"		129771	0					
ANR	129995	Callee	AES_RROUND		129771	0					
ANR	129996	Identifier	AES_RROUND		129771	0					
ANR	129997	ArgumentList	Y0		129771	1					
ANR	129998	Argument	Y0		129771	0					
ANR	129999	Identifier	Y0		129771	0					
ANR	130000	Argument	Y1		129771	1					
ANR	130001	Identifier	Y1		129771	0					
ANR	130002	Argument	Y2		129771	2					
ANR	130003	Identifier	Y2		129771	0					
ANR	130004	Argument	Y3		129771	3					
ANR	130005	Identifier	Y3		129771	0					
ANR	130006	Argument	X0		129771	4					
ANR	130007	Identifier	X0		129771	0					
ANR	130008	Argument	X1		129771	5					
ANR	130009	Identifier	X1		129771	0					
ANR	130010	Argument	X2		129771	6					
ANR	130011	Identifier	X2		129771	0					
ANR	130012	Argument	X3		129771	7					
ANR	130013	Identifier	X3		129771	0					
ANR	130014	ExpressionStatement	X0 = * RK ++ ^ ( RSb [ ( Y0 ) & 0xFF ] ) ^ ( RSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )	685:8:25990:26235	129771	2	True				
ANR	130015	AssignmentExpression	X0 = * RK ++ ^ ( RSb [ ( Y0 ) & 0xFF ] ) ^ ( RSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130016	Identifier	X0		129771	0					
ANR	130017	ExclusiveOrExpression	* RK ++ ^ ( RSb [ ( Y0 ) & 0xFF ] ) ^ ( RSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130018	UnaryOperationExpression	* RK ++		129771	0					
ANR	130019	UnaryOperator	*		129771	0					
ANR	130020	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130021	Identifier	RK		129771	0					
ANR	130022	IncDec	++		129771	1					
ANR	130023	ExclusiveOrExpression	( RSb [ ( Y0 ) & 0xFF ] ) ^ ( RSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130024	ArrayIndexing	RSb [ ( Y0 ) & 0xFF ]		129771	0					
ANR	130025	Identifier	RSb		129771	0					
ANR	130026	CastExpression	( Y0 ) & 0xFF		129771	1					
ANR	130027	CastTarget	Y0		129771	0					
ANR	130028	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130029	UnaryOperator	&		129771	0					
ANR	130030	PrimaryExpression	0xFF		129771	1					
ANR	130031	ExclusiveOrExpression	( RSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130032	ShiftExpression	RSb [ ( Y3 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130033	ArrayIndexing	RSb [ ( Y3 >> 8 ) & 0xFF ]		129771	0					
ANR	130034	Identifier	RSb		129771	0					
ANR	130035	BitAndExpression	( Y3 >> 8 ) & 0xFF		129771	1		&			
ANR	130036	ShiftExpression	Y3 >> 8		129771	0		>>			
ANR	130037	Identifier	Y3		129771	0					
ANR	130038	PrimaryExpression	8		129771	1					
ANR	130039	PrimaryExpression	0xFF		129771	1					
ANR	130040	PrimaryExpression	8		129771	1					
ANR	130041	ExclusiveOrExpression	( RSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130042	ShiftExpression	RSb [ ( Y2 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130043	ArrayIndexing	RSb [ ( Y2 >> 16 ) & 0xFF ]		129771	0					
ANR	130044	Identifier	RSb		129771	0					
ANR	130045	BitAndExpression	( Y2 >> 16 ) & 0xFF		129771	1		&			
ANR	130046	ShiftExpression	Y2 >> 16		129771	0		>>			
ANR	130047	Identifier	Y2		129771	0					
ANR	130048	PrimaryExpression	16		129771	1					
ANR	130049	PrimaryExpression	0xFF		129771	1					
ANR	130050	PrimaryExpression	16		129771	1					
ANR	130051	ShiftExpression	( ( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130052	CastExpression	( unsigned int ) RSb [ ( Y1 >> 24 ) & 0xFF ]		129771	0					
ANR	130053	CastTarget	unsigned int		129771	0					
ANR	130054	ArrayIndexing	RSb [ ( Y1 >> 24 ) & 0xFF ]		129771	1					
ANR	130055	Identifier	RSb		129771	0					
ANR	130056	BitAndExpression	( Y1 >> 24 ) & 0xFF		129771	1		&			
ANR	130057	ShiftExpression	Y1 >> 24		129771	0		>>			
ANR	130058	Identifier	Y1		129771	0					
ANR	130059	PrimaryExpression	24		129771	1					
ANR	130060	PrimaryExpression	0xFF		129771	1					
ANR	130061	PrimaryExpression	24		129771	1					
ANR	130062	ExpressionStatement	X1 = * RK ++ ^ ( RSb [ ( Y1 ) & 0xFF ] ) ^ ( RSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )	690:8:26246:26491	129771	3	True				
ANR	130063	AssignmentExpression	X1 = * RK ++ ^ ( RSb [ ( Y1 ) & 0xFF ] ) ^ ( RSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130064	Identifier	X1		129771	0					
ANR	130065	ExclusiveOrExpression	* RK ++ ^ ( RSb [ ( Y1 ) & 0xFF ] ) ^ ( RSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130066	UnaryOperationExpression	* RK ++		129771	0					
ANR	130067	UnaryOperator	*		129771	0					
ANR	130068	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130069	Identifier	RK		129771	0					
ANR	130070	IncDec	++		129771	1					
ANR	130071	ExclusiveOrExpression	( RSb [ ( Y1 ) & 0xFF ] ) ^ ( RSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130072	ArrayIndexing	RSb [ ( Y1 ) & 0xFF ]		129771	0					
ANR	130073	Identifier	RSb		129771	0					
ANR	130074	CastExpression	( Y1 ) & 0xFF		129771	1					
ANR	130075	CastTarget	Y1		129771	0					
ANR	130076	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130077	UnaryOperator	&		129771	0					
ANR	130078	PrimaryExpression	0xFF		129771	1					
ANR	130079	ExclusiveOrExpression	( RSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130080	ShiftExpression	RSb [ ( Y0 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130081	ArrayIndexing	RSb [ ( Y0 >> 8 ) & 0xFF ]		129771	0					
ANR	130082	Identifier	RSb		129771	0					
ANR	130083	BitAndExpression	( Y0 >> 8 ) & 0xFF		129771	1		&			
ANR	130084	ShiftExpression	Y0 >> 8		129771	0		>>			
ANR	130085	Identifier	Y0		129771	0					
ANR	130086	PrimaryExpression	8		129771	1					
ANR	130087	PrimaryExpression	0xFF		129771	1					
ANR	130088	PrimaryExpression	8		129771	1					
ANR	130089	ExclusiveOrExpression	( RSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130090	ShiftExpression	RSb [ ( Y3 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130091	ArrayIndexing	RSb [ ( Y3 >> 16 ) & 0xFF ]		129771	0					
ANR	130092	Identifier	RSb		129771	0					
ANR	130093	BitAndExpression	( Y3 >> 16 ) & 0xFF		129771	1		&			
ANR	130094	ShiftExpression	Y3 >> 16		129771	0		>>			
ANR	130095	Identifier	Y3		129771	0					
ANR	130096	PrimaryExpression	16		129771	1					
ANR	130097	PrimaryExpression	0xFF		129771	1					
ANR	130098	PrimaryExpression	16		129771	1					
ANR	130099	ShiftExpression	( ( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130100	CastExpression	( unsigned int ) RSb [ ( Y2 >> 24 ) & 0xFF ]		129771	0					
ANR	130101	CastTarget	unsigned int		129771	0					
ANR	130102	ArrayIndexing	RSb [ ( Y2 >> 24 ) & 0xFF ]		129771	1					
ANR	130103	Identifier	RSb		129771	0					
ANR	130104	BitAndExpression	( Y2 >> 24 ) & 0xFF		129771	1		&			
ANR	130105	ShiftExpression	Y2 >> 24		129771	0		>>			
ANR	130106	Identifier	Y2		129771	0					
ANR	130107	PrimaryExpression	24		129771	1					
ANR	130108	PrimaryExpression	0xFF		129771	1					
ANR	130109	PrimaryExpression	24		129771	1					
ANR	130110	ExpressionStatement	X2 = * RK ++ ^ ( RSb [ ( Y2 ) & 0xFF ] ) ^ ( RSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )	695:8:26502:26747	129771	4	True				
ANR	130111	AssignmentExpression	X2 = * RK ++ ^ ( RSb [ ( Y2 ) & 0xFF ] ) ^ ( RSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130112	Identifier	X2		129771	0					
ANR	130113	ExclusiveOrExpression	* RK ++ ^ ( RSb [ ( Y2 ) & 0xFF ] ) ^ ( RSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130114	UnaryOperationExpression	* RK ++		129771	0					
ANR	130115	UnaryOperator	*		129771	0					
ANR	130116	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130117	Identifier	RK		129771	0					
ANR	130118	IncDec	++		129771	1					
ANR	130119	ExclusiveOrExpression	( RSb [ ( Y2 ) & 0xFF ] ) ^ ( RSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130120	ArrayIndexing	RSb [ ( Y2 ) & 0xFF ]		129771	0					
ANR	130121	Identifier	RSb		129771	0					
ANR	130122	CastExpression	( Y2 ) & 0xFF		129771	1					
ANR	130123	CastTarget	Y2		129771	0					
ANR	130124	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130125	UnaryOperator	&		129771	0					
ANR	130126	PrimaryExpression	0xFF		129771	1					
ANR	130127	ExclusiveOrExpression	( RSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130128	ShiftExpression	RSb [ ( Y1 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130129	ArrayIndexing	RSb [ ( Y1 >> 8 ) & 0xFF ]		129771	0					
ANR	130130	Identifier	RSb		129771	0					
ANR	130131	BitAndExpression	( Y1 >> 8 ) & 0xFF		129771	1		&			
ANR	130132	ShiftExpression	Y1 >> 8		129771	0		>>			
ANR	130133	Identifier	Y1		129771	0					
ANR	130134	PrimaryExpression	8		129771	1					
ANR	130135	PrimaryExpression	0xFF		129771	1					
ANR	130136	PrimaryExpression	8		129771	1					
ANR	130137	ExclusiveOrExpression	( RSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130138	ShiftExpression	RSb [ ( Y0 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130139	ArrayIndexing	RSb [ ( Y0 >> 16 ) & 0xFF ]		129771	0					
ANR	130140	Identifier	RSb		129771	0					
ANR	130141	BitAndExpression	( Y0 >> 16 ) & 0xFF		129771	1		&			
ANR	130142	ShiftExpression	Y0 >> 16		129771	0		>>			
ANR	130143	Identifier	Y0		129771	0					
ANR	130144	PrimaryExpression	16		129771	1					
ANR	130145	PrimaryExpression	0xFF		129771	1					
ANR	130146	PrimaryExpression	16		129771	1					
ANR	130147	ShiftExpression	( ( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130148	CastExpression	( unsigned int ) RSb [ ( Y3 >> 24 ) & 0xFF ]		129771	0					
ANR	130149	CastTarget	unsigned int		129771	0					
ANR	130150	ArrayIndexing	RSb [ ( Y3 >> 24 ) & 0xFF ]		129771	1					
ANR	130151	Identifier	RSb		129771	0					
ANR	130152	BitAndExpression	( Y3 >> 24 ) & 0xFF		129771	1		&			
ANR	130153	ShiftExpression	Y3 >> 24		129771	0		>>			
ANR	130154	Identifier	Y3		129771	0					
ANR	130155	PrimaryExpression	24		129771	1					
ANR	130156	PrimaryExpression	0xFF		129771	1					
ANR	130157	PrimaryExpression	24		129771	1					
ANR	130158	ExpressionStatement	X3 = * RK ++ ^ ( RSb [ ( Y3 ) & 0xFF ] ) ^ ( RSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )	700:8:26758:27003	129771	5	True				
ANR	130159	AssignmentExpression	X3 = * RK ++ ^ ( RSb [ ( Y3 ) & 0xFF ] ) ^ ( RSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130160	Identifier	X3		129771	0					
ANR	130161	ExclusiveOrExpression	* RK ++ ^ ( RSb [ ( Y3 ) & 0xFF ] ) ^ ( RSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130162	UnaryOperationExpression	* RK ++		129771	0					
ANR	130163	UnaryOperator	*		129771	0					
ANR	130164	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130165	Identifier	RK		129771	0					
ANR	130166	IncDec	++		129771	1					
ANR	130167	ExclusiveOrExpression	( RSb [ ( Y3 ) & 0xFF ] ) ^ ( RSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130168	ArrayIndexing	RSb [ ( Y3 ) & 0xFF ]		129771	0					
ANR	130169	Identifier	RSb		129771	0					
ANR	130170	CastExpression	( Y3 ) & 0xFF		129771	1					
ANR	130171	CastTarget	Y3		129771	0					
ANR	130172	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130173	UnaryOperator	&		129771	0					
ANR	130174	PrimaryExpression	0xFF		129771	1					
ANR	130175	ExclusiveOrExpression	( RSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130176	ShiftExpression	RSb [ ( Y2 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130177	ArrayIndexing	RSb [ ( Y2 >> 8 ) & 0xFF ]		129771	0					
ANR	130178	Identifier	RSb		129771	0					
ANR	130179	BitAndExpression	( Y2 >> 8 ) & 0xFF		129771	1		&			
ANR	130180	ShiftExpression	Y2 >> 8		129771	0		>>			
ANR	130181	Identifier	Y2		129771	0					
ANR	130182	PrimaryExpression	8		129771	1					
ANR	130183	PrimaryExpression	0xFF		129771	1					
ANR	130184	PrimaryExpression	8		129771	1					
ANR	130185	ExclusiveOrExpression	( RSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130186	ShiftExpression	RSb [ ( Y1 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130187	ArrayIndexing	RSb [ ( Y1 >> 16 ) & 0xFF ]		129771	0					
ANR	130188	Identifier	RSb		129771	0					
ANR	130189	BitAndExpression	( Y1 >> 16 ) & 0xFF		129771	1		&			
ANR	130190	ShiftExpression	Y1 >> 16		129771	0		>>			
ANR	130191	Identifier	Y1		129771	0					
ANR	130192	PrimaryExpression	16		129771	1					
ANR	130193	PrimaryExpression	0xFF		129771	1					
ANR	130194	PrimaryExpression	16		129771	1					
ANR	130195	ShiftExpression	( ( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130196	CastExpression	( unsigned int ) RSb [ ( Y0 >> 24 ) & 0xFF ]		129771	0					
ANR	130197	CastTarget	unsigned int		129771	0					
ANR	130198	ArrayIndexing	RSb [ ( Y0 >> 24 ) & 0xFF ]		129771	1					
ANR	130199	Identifier	RSb		129771	0					
ANR	130200	BitAndExpression	( Y0 >> 24 ) & 0xFF		129771	1		&			
ANR	130201	ShiftExpression	Y0 >> 24		129771	0		>>			
ANR	130202	Identifier	Y0		129771	0					
ANR	130203	PrimaryExpression	24		129771	1					
ANR	130204	PrimaryExpression	0xFF		129771	1					
ANR	130205	PrimaryExpression	24		129771	1					
ANR	130206	ElseStatement	else		129771	0					
ANR	130207	CompoundStatement		54:4:1878:1878	129771	0					
ANR	130208	ForStatement	for ( i = ( ctx -> nr >> 1 ) - 1 ; i > 0 ; i -- )		129771	0					
ANR	130209	ForInit	i = ( ctx -> nr >> 1 ) - 1 ;	707:13:27057:27079	129771	0	True				
ANR	130210	AssignmentExpression	i = ( ctx -> nr >> 1 ) - 1		129771	0		=			
ANR	130211	Identifier	i		129771	0					
ANR	130212	AdditiveExpression	( ctx -> nr >> 1 ) - 1		129771	1		-			
ANR	130213	ShiftExpression	ctx -> nr >> 1		129771	0		>>			
ANR	130214	PtrMemberAccess	ctx -> nr		129771	0					
ANR	130215	Identifier	ctx		129771	0					
ANR	130216	Identifier	nr		129771	1					
ANR	130217	PrimaryExpression	1		129771	1					
ANR	130218	PrimaryExpression	1		129771	1					
ANR	130219	Condition	i > 0	707:37:27081:27085	129771	1	True				
ANR	130220	RelationalExpression	i > 0		129771	0		>			
ANR	130221	Identifier	i		129771	0					
ANR	130222	PrimaryExpression	0		129771	1					
ANR	130223	PostIncDecOperationExpression	i --	707:44:27088:27090	129771	2	True				
ANR	130224	Identifier	i		129771	0					
ANR	130225	IncDec	--		129771	1					
ANR	130226	CompoundStatement		56:8:1938:1938	129771	3					
ANR	130227	ExpressionStatement	"AES_FROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"	709:12:27116:27160	129771	0	True				
ANR	130228	CallExpression	"AES_FROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"		129771	0					
ANR	130229	Callee	AES_FROUND		129771	0					
ANR	130230	Identifier	AES_FROUND		129771	0					
ANR	130231	ArgumentList	Y0		129771	1					
ANR	130232	Argument	Y0		129771	0					
ANR	130233	Identifier	Y0		129771	0					
ANR	130234	Argument	Y1		129771	1					
ANR	130235	Identifier	Y1		129771	0					
ANR	130236	Argument	Y2		129771	2					
ANR	130237	Identifier	Y2		129771	0					
ANR	130238	Argument	Y3		129771	3					
ANR	130239	Identifier	Y3		129771	0					
ANR	130240	Argument	X0		129771	4					
ANR	130241	Identifier	X0		129771	0					
ANR	130242	Argument	X1		129771	5					
ANR	130243	Identifier	X1		129771	0					
ANR	130244	Argument	X2		129771	6					
ANR	130245	Identifier	X2		129771	0					
ANR	130246	Argument	X3		129771	7					
ANR	130247	Identifier	X3		129771	0					
ANR	130248	ExpressionStatement	"AES_FROUND ( X0 , X1 , X2 , X3 , Y0 , Y1 , Y2 , Y3 )"	710:12:27174:27218	129771	1	True				
ANR	130249	CallExpression	"AES_FROUND ( X0 , X1 , X2 , X3 , Y0 , Y1 , Y2 , Y3 )"		129771	0					
ANR	130250	Callee	AES_FROUND		129771	0					
ANR	130251	Identifier	AES_FROUND		129771	0					
ANR	130252	ArgumentList	X0		129771	1					
ANR	130253	Argument	X0		129771	0					
ANR	130254	Identifier	X0		129771	0					
ANR	130255	Argument	X1		129771	1					
ANR	130256	Identifier	X1		129771	0					
ANR	130257	Argument	X2		129771	2					
ANR	130258	Identifier	X2		129771	0					
ANR	130259	Argument	X3		129771	3					
ANR	130260	Identifier	X3		129771	0					
ANR	130261	Argument	Y0		129771	4					
ANR	130262	Identifier	Y0		129771	0					
ANR	130263	Argument	Y1		129771	5					
ANR	130264	Identifier	Y1		129771	0					
ANR	130265	Argument	Y2		129771	6					
ANR	130266	Identifier	Y2		129771	0					
ANR	130267	Argument	Y3		129771	7					
ANR	130268	Identifier	Y3		129771	0					
ANR	130269	ExpressionStatement	"AES_FROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"	713:8:27239:27283	129771	1	True				
ANR	130270	CallExpression	"AES_FROUND ( Y0 , Y1 , Y2 , Y3 , X0 , X1 , X2 , X3 )"		129771	0					
ANR	130271	Callee	AES_FROUND		129771	0					
ANR	130272	Identifier	AES_FROUND		129771	0					
ANR	130273	ArgumentList	Y0		129771	1					
ANR	130274	Argument	Y0		129771	0					
ANR	130275	Identifier	Y0		129771	0					
ANR	130276	Argument	Y1		129771	1					
ANR	130277	Identifier	Y1		129771	0					
ANR	130278	Argument	Y2		129771	2					
ANR	130279	Identifier	Y2		129771	0					
ANR	130280	Argument	Y3		129771	3					
ANR	130281	Identifier	Y3		129771	0					
ANR	130282	Argument	X0		129771	4					
ANR	130283	Identifier	X0		129771	0					
ANR	130284	Argument	X1		129771	5					
ANR	130285	Identifier	X1		129771	0					
ANR	130286	Argument	X2		129771	6					
ANR	130287	Identifier	X2		129771	0					
ANR	130288	Argument	X3		129771	7					
ANR	130289	Identifier	X3		129771	0					
ANR	130290	ExpressionStatement	X0 = * RK ++ ^ ( FSb [ ( Y0 ) & 0xFF ] ) ^ ( FSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )	715:8:27294:27539	129771	2	True				
ANR	130291	AssignmentExpression	X0 = * RK ++ ^ ( FSb [ ( Y0 ) & 0xFF ] ) ^ ( FSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130292	Identifier	X0		129771	0					
ANR	130293	ExclusiveOrExpression	* RK ++ ^ ( FSb [ ( Y0 ) & 0xFF ] ) ^ ( FSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130294	UnaryOperationExpression	* RK ++		129771	0					
ANR	130295	UnaryOperator	*		129771	0					
ANR	130296	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130297	Identifier	RK		129771	0					
ANR	130298	IncDec	++		129771	1					
ANR	130299	ExclusiveOrExpression	( FSb [ ( Y0 ) & 0xFF ] ) ^ ( FSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130300	ArrayIndexing	FSb [ ( Y0 ) & 0xFF ]		129771	0					
ANR	130301	Identifier	FSb		129771	0					
ANR	130302	CastExpression	( Y0 ) & 0xFF		129771	1					
ANR	130303	CastTarget	Y0		129771	0					
ANR	130304	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130305	UnaryOperator	&		129771	0					
ANR	130306	PrimaryExpression	0xFF		129771	1					
ANR	130307	ExclusiveOrExpression	( FSb [ ( Y1 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130308	ShiftExpression	FSb [ ( Y1 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130309	ArrayIndexing	FSb [ ( Y1 >> 8 ) & 0xFF ]		129771	0					
ANR	130310	Identifier	FSb		129771	0					
ANR	130311	BitAndExpression	( Y1 >> 8 ) & 0xFF		129771	1		&			
ANR	130312	ShiftExpression	Y1 >> 8		129771	0		>>			
ANR	130313	Identifier	Y1		129771	0					
ANR	130314	PrimaryExpression	8		129771	1					
ANR	130315	PrimaryExpression	0xFF		129771	1					
ANR	130316	PrimaryExpression	8		129771	1					
ANR	130317	ExclusiveOrExpression	( FSb [ ( Y2 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130318	ShiftExpression	FSb [ ( Y2 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130319	ArrayIndexing	FSb [ ( Y2 >> 16 ) & 0xFF ]		129771	0					
ANR	130320	Identifier	FSb		129771	0					
ANR	130321	BitAndExpression	( Y2 >> 16 ) & 0xFF		129771	1		&			
ANR	130322	ShiftExpression	Y2 >> 16		129771	0		>>			
ANR	130323	Identifier	Y2		129771	0					
ANR	130324	PrimaryExpression	16		129771	1					
ANR	130325	PrimaryExpression	0xFF		129771	1					
ANR	130326	PrimaryExpression	16		129771	1					
ANR	130327	ShiftExpression	( ( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130328	CastExpression	( unsigned int ) FSb [ ( Y3 >> 24 ) & 0xFF ]		129771	0					
ANR	130329	CastTarget	unsigned int		129771	0					
ANR	130330	ArrayIndexing	FSb [ ( Y3 >> 24 ) & 0xFF ]		129771	1					
ANR	130331	Identifier	FSb		129771	0					
ANR	130332	BitAndExpression	( Y3 >> 24 ) & 0xFF		129771	1		&			
ANR	130333	ShiftExpression	Y3 >> 24		129771	0		>>			
ANR	130334	Identifier	Y3		129771	0					
ANR	130335	PrimaryExpression	24		129771	1					
ANR	130336	PrimaryExpression	0xFF		129771	1					
ANR	130337	PrimaryExpression	24		129771	1					
ANR	130338	ExpressionStatement	X1 = * RK ++ ^ ( FSb [ ( Y1 ) & 0xFF ] ) ^ ( FSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )	720:8:27550:27795	129771	3	True				
ANR	130339	AssignmentExpression	X1 = * RK ++ ^ ( FSb [ ( Y1 ) & 0xFF ] ) ^ ( FSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130340	Identifier	X1		129771	0					
ANR	130341	ExclusiveOrExpression	* RK ++ ^ ( FSb [ ( Y1 ) & 0xFF ] ) ^ ( FSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130342	UnaryOperationExpression	* RK ++		129771	0					
ANR	130343	UnaryOperator	*		129771	0					
ANR	130344	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130345	Identifier	RK		129771	0					
ANR	130346	IncDec	++		129771	1					
ANR	130347	ExclusiveOrExpression	( FSb [ ( Y1 ) & 0xFF ] ) ^ ( FSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130348	ArrayIndexing	FSb [ ( Y1 ) & 0xFF ]		129771	0					
ANR	130349	Identifier	FSb		129771	0					
ANR	130350	CastExpression	( Y1 ) & 0xFF		129771	1					
ANR	130351	CastTarget	Y1		129771	0					
ANR	130352	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130353	UnaryOperator	&		129771	0					
ANR	130354	PrimaryExpression	0xFF		129771	1					
ANR	130355	ExclusiveOrExpression	( FSb [ ( Y2 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130356	ShiftExpression	FSb [ ( Y2 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130357	ArrayIndexing	FSb [ ( Y2 >> 8 ) & 0xFF ]		129771	0					
ANR	130358	Identifier	FSb		129771	0					
ANR	130359	BitAndExpression	( Y2 >> 8 ) & 0xFF		129771	1		&			
ANR	130360	ShiftExpression	Y2 >> 8		129771	0		>>			
ANR	130361	Identifier	Y2		129771	0					
ANR	130362	PrimaryExpression	8		129771	1					
ANR	130363	PrimaryExpression	0xFF		129771	1					
ANR	130364	PrimaryExpression	8		129771	1					
ANR	130365	ExclusiveOrExpression	( FSb [ ( Y3 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130366	ShiftExpression	FSb [ ( Y3 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130367	ArrayIndexing	FSb [ ( Y3 >> 16 ) & 0xFF ]		129771	0					
ANR	130368	Identifier	FSb		129771	0					
ANR	130369	BitAndExpression	( Y3 >> 16 ) & 0xFF		129771	1		&			
ANR	130370	ShiftExpression	Y3 >> 16		129771	0		>>			
ANR	130371	Identifier	Y3		129771	0					
ANR	130372	PrimaryExpression	16		129771	1					
ANR	130373	PrimaryExpression	0xFF		129771	1					
ANR	130374	PrimaryExpression	16		129771	1					
ANR	130375	ShiftExpression	( ( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130376	CastExpression	( unsigned int ) FSb [ ( Y0 >> 24 ) & 0xFF ]		129771	0					
ANR	130377	CastTarget	unsigned int		129771	0					
ANR	130378	ArrayIndexing	FSb [ ( Y0 >> 24 ) & 0xFF ]		129771	1					
ANR	130379	Identifier	FSb		129771	0					
ANR	130380	BitAndExpression	( Y0 >> 24 ) & 0xFF		129771	1		&			
ANR	130381	ShiftExpression	Y0 >> 24		129771	0		>>			
ANR	130382	Identifier	Y0		129771	0					
ANR	130383	PrimaryExpression	24		129771	1					
ANR	130384	PrimaryExpression	0xFF		129771	1					
ANR	130385	PrimaryExpression	24		129771	1					
ANR	130386	ExpressionStatement	X2 = * RK ++ ^ ( FSb [ ( Y2 ) & 0xFF ] ) ^ ( FSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )	725:8:27806:28051	129771	4	True				
ANR	130387	AssignmentExpression	X2 = * RK ++ ^ ( FSb [ ( Y2 ) & 0xFF ] ) ^ ( FSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130388	Identifier	X2		129771	0					
ANR	130389	ExclusiveOrExpression	* RK ++ ^ ( FSb [ ( Y2 ) & 0xFF ] ) ^ ( FSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130390	UnaryOperationExpression	* RK ++		129771	0					
ANR	130391	UnaryOperator	*		129771	0					
ANR	130392	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130393	Identifier	RK		129771	0					
ANR	130394	IncDec	++		129771	1					
ANR	130395	ExclusiveOrExpression	( FSb [ ( Y2 ) & 0xFF ] ) ^ ( FSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130396	ArrayIndexing	FSb [ ( Y2 ) & 0xFF ]		129771	0					
ANR	130397	Identifier	FSb		129771	0					
ANR	130398	CastExpression	( Y2 ) & 0xFF		129771	1					
ANR	130399	CastTarget	Y2		129771	0					
ANR	130400	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130401	UnaryOperator	&		129771	0					
ANR	130402	PrimaryExpression	0xFF		129771	1					
ANR	130403	ExclusiveOrExpression	( FSb [ ( Y3 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130404	ShiftExpression	FSb [ ( Y3 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130405	ArrayIndexing	FSb [ ( Y3 >> 8 ) & 0xFF ]		129771	0					
ANR	130406	Identifier	FSb		129771	0					
ANR	130407	BitAndExpression	( Y3 >> 8 ) & 0xFF		129771	1		&			
ANR	130408	ShiftExpression	Y3 >> 8		129771	0		>>			
ANR	130409	Identifier	Y3		129771	0					
ANR	130410	PrimaryExpression	8		129771	1					
ANR	130411	PrimaryExpression	0xFF		129771	1					
ANR	130412	PrimaryExpression	8		129771	1					
ANR	130413	ExclusiveOrExpression	( FSb [ ( Y0 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130414	ShiftExpression	FSb [ ( Y0 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130415	ArrayIndexing	FSb [ ( Y0 >> 16 ) & 0xFF ]		129771	0					
ANR	130416	Identifier	FSb		129771	0					
ANR	130417	BitAndExpression	( Y0 >> 16 ) & 0xFF		129771	1		&			
ANR	130418	ShiftExpression	Y0 >> 16		129771	0		>>			
ANR	130419	Identifier	Y0		129771	0					
ANR	130420	PrimaryExpression	16		129771	1					
ANR	130421	PrimaryExpression	0xFF		129771	1					
ANR	130422	PrimaryExpression	16		129771	1					
ANR	130423	ShiftExpression	( ( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130424	CastExpression	( unsigned int ) FSb [ ( Y1 >> 24 ) & 0xFF ]		129771	0					
ANR	130425	CastTarget	unsigned int		129771	0					
ANR	130426	ArrayIndexing	FSb [ ( Y1 >> 24 ) & 0xFF ]		129771	1					
ANR	130427	Identifier	FSb		129771	0					
ANR	130428	BitAndExpression	( Y1 >> 24 ) & 0xFF		129771	1		&			
ANR	130429	ShiftExpression	Y1 >> 24		129771	0		>>			
ANR	130430	Identifier	Y1		129771	0					
ANR	130431	PrimaryExpression	24		129771	1					
ANR	130432	PrimaryExpression	0xFF		129771	1					
ANR	130433	PrimaryExpression	24		129771	1					
ANR	130434	ExpressionStatement	X3 = * RK ++ ^ ( FSb [ ( Y3 ) & 0xFF ] ) ^ ( FSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )	730:8:28062:28307	129771	5	True				
ANR	130435	AssignmentExpression	X3 = * RK ++ ^ ( FSb [ ( Y3 ) & 0xFF ] ) ^ ( FSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	0		=			
ANR	130436	Identifier	X3		129771	0					
ANR	130437	ExclusiveOrExpression	* RK ++ ^ ( FSb [ ( Y3 ) & 0xFF ] ) ^ ( FSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130438	UnaryOperationExpression	* RK ++		129771	0					
ANR	130439	UnaryOperator	*		129771	0					
ANR	130440	PostIncDecOperationExpression	RK ++		129771	1					
ANR	130441	Identifier	RK		129771	0					
ANR	130442	IncDec	++		129771	1					
ANR	130443	ExclusiveOrExpression	( FSb [ ( Y3 ) & 0xFF ] ) ^ ( FSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130444	ArrayIndexing	FSb [ ( Y3 ) & 0xFF ]		129771	0					
ANR	130445	Identifier	FSb		129771	0					
ANR	130446	CastExpression	( Y3 ) & 0xFF		129771	1					
ANR	130447	CastTarget	Y3		129771	0					
ANR	130448	UnaryOperationExpression	& 0xFF		129771	1					
ANR	130449	UnaryOperator	&		129771	0					
ANR	130450	PrimaryExpression	0xFF		129771	1					
ANR	130451	ExclusiveOrExpression	( FSb [ ( Y0 >> 8 ) & 0xFF ] << 8 ) ^ ( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130452	ShiftExpression	FSb [ ( Y0 >> 8 ) & 0xFF ] << 8		129771	0		<<			
ANR	130453	ArrayIndexing	FSb [ ( Y0 >> 8 ) & 0xFF ]		129771	0					
ANR	130454	Identifier	FSb		129771	0					
ANR	130455	BitAndExpression	( Y0 >> 8 ) & 0xFF		129771	1		&			
ANR	130456	ShiftExpression	Y0 >> 8		129771	0		>>			
ANR	130457	Identifier	Y0		129771	0					
ANR	130458	PrimaryExpression	8		129771	1					
ANR	130459	PrimaryExpression	0xFF		129771	1					
ANR	130460	PrimaryExpression	8		129771	1					
ANR	130461	ExclusiveOrExpression	( FSb [ ( Y1 >> 16 ) & 0xFF ] << 16 ) ^ ( ( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24 )		129771	1		^			
ANR	130462	ShiftExpression	FSb [ ( Y1 >> 16 ) & 0xFF ] << 16		129771	0		<<			
ANR	130463	ArrayIndexing	FSb [ ( Y1 >> 16 ) & 0xFF ]		129771	0					
ANR	130464	Identifier	FSb		129771	0					
ANR	130465	BitAndExpression	( Y1 >> 16 ) & 0xFF		129771	1		&			
ANR	130466	ShiftExpression	Y1 >> 16		129771	0		>>			
ANR	130467	Identifier	Y1		129771	0					
ANR	130468	PrimaryExpression	16		129771	1					
ANR	130469	PrimaryExpression	0xFF		129771	1					
ANR	130470	PrimaryExpression	16		129771	1					
ANR	130471	ShiftExpression	( ( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ] ) << 24		129771	1		<<			
ANR	130472	CastExpression	( unsigned int ) FSb [ ( Y2 >> 24 ) & 0xFF ]		129771	0					
ANR	130473	CastTarget	unsigned int		129771	0					
ANR	130474	ArrayIndexing	FSb [ ( Y2 >> 24 ) & 0xFF ]		129771	1					
ANR	130475	Identifier	FSb		129771	0					
ANR	130476	BitAndExpression	( Y2 >> 24 ) & 0xFF		129771	1		&			
ANR	130477	ShiftExpression	Y2 >> 24		129771	0		>>			
ANR	130478	Identifier	Y2		129771	0					
ANR	130479	PrimaryExpression	24		129771	1					
ANR	130480	PrimaryExpression	0xFF		129771	1					
ANR	130481	PrimaryExpression	24		129771	1					
ANR	130482	ExpressionStatement	"PUT_ULONG_LE ( X0 , output , 0 )"	736:4:28320:28350	129771	14	True				
ANR	130483	CallExpression	"PUT_ULONG_LE ( X0 , output , 0 )"		129771	0					
ANR	130484	Callee	PUT_ULONG_LE		129771	0					
ANR	130485	Identifier	PUT_ULONG_LE		129771	0					
ANR	130486	ArgumentList	X0		129771	1					
ANR	130487	Argument	X0		129771	0					
ANR	130488	Identifier	X0		129771	0					
ANR	130489	Argument	output		129771	1					
ANR	130490	Identifier	output		129771	0					
ANR	130491	Argument	0		129771	2					
ANR	130492	PrimaryExpression	0		129771	0					
ANR	130493	ExpressionStatement	"PUT_ULONG_LE ( X1 , output , 4 )"	737:4:28356:28386	129771	15	True				
ANR	130494	CallExpression	"PUT_ULONG_LE ( X1 , output , 4 )"		129771	0					
ANR	130495	Callee	PUT_ULONG_LE		129771	0					
ANR	130496	Identifier	PUT_ULONG_LE		129771	0					
ANR	130497	ArgumentList	X1		129771	1					
ANR	130498	Argument	X1		129771	0					
ANR	130499	Identifier	X1		129771	0					
ANR	130500	Argument	output		129771	1					
ANR	130501	Identifier	output		129771	0					
ANR	130502	Argument	4		129771	2					
ANR	130503	PrimaryExpression	4		129771	0					
ANR	130504	ExpressionStatement	"PUT_ULONG_LE ( X2 , output , 8 )"	738:4:28392:28422	129771	16	True				
ANR	130505	CallExpression	"PUT_ULONG_LE ( X2 , output , 8 )"		129771	0					
ANR	130506	Callee	PUT_ULONG_LE		129771	0					
ANR	130507	Identifier	PUT_ULONG_LE		129771	0					
ANR	130508	ArgumentList	X2		129771	1					
ANR	130509	Argument	X2		129771	0					
ANR	130510	Identifier	X2		129771	0					
ANR	130511	Argument	output		129771	1					
ANR	130512	Identifier	output		129771	0					
ANR	130513	Argument	8		129771	2					
ANR	130514	PrimaryExpression	8		129771	0					
ANR	130515	ExpressionStatement	"PUT_ULONG_LE ( X3 , output , 12 )"	739:4:28428:28458	129771	17	True				
ANR	130516	CallExpression	"PUT_ULONG_LE ( X3 , output , 12 )"		129771	0					
ANR	130517	Callee	PUT_ULONG_LE		129771	0					
ANR	130518	Identifier	PUT_ULONG_LE		129771	0					
ANR	130519	ArgumentList	X3		129771	1					
ANR	130520	Argument	X3		129771	0					
ANR	130521	Identifier	X3		129771	0					
ANR	130522	Argument	output		129771	1					
ANR	130523	Identifier	output		129771	0					
ANR	130524	Argument	12		129771	2					
ANR	130525	PrimaryExpression	12		129771	0					
ANR	130526	ReturnType	void		129771	1					
ANR	130527	Identifier	aes_crypt_ecb		129771	2					
ANR	130528	ParameterList	"aes_context * ctx , int mode , const unsigned char input [ 16 ] , unsigned char output [ 16 ]"		129771	3					
ANR	130529	Parameter	aes_context * ctx	649:20:25017:25032	129771	0	True				
ANR	130530	ParameterType	aes_context *		129771	0					
ANR	130531	Identifier	ctx		129771	1					
ANR	130532	Parameter	int mode	650:20:25055:25062	129771	1	True				
ANR	130533	ParameterType	int		129771	0					
ANR	130534	Identifier	mode		129771	1					
ANR	130535	Parameter	const unsigned char input [ 16 ]	651:20:25085:25113	129771	2	True				
ANR	130536	ParameterType	const unsigned char [ 16 ]		129771	0					
ANR	130537	Identifier	input		129771	1					
ANR	130538	Parameter	unsigned char output [ 16 ]	652:20:25136:25159	129771	3	True				
ANR	130539	ParameterType	unsigned char [ 16 ]		129771	0					
ANR	130540	Identifier	output		129771	1					
ANR	130541	CFGEntryNode	ENTRY		129771		True				
ANR	130542	CFGExitNode	EXIT		129771		True				
ANR	130543	Symbol	RSb		129771						
ANR	130544	Symbol	AES_DECRYPT		129771						
ANR	130545	Symbol	ctx -> nr		129771						
ANR	130546	Symbol	padlock_xcryptecb		129771						
ANR	130547	Symbol	mode		129771						
ANR	130548	Symbol	output		129771						
ANR	130549	Symbol	PADLOCK_ACE		129771						
ANR	130550	Symbol	ctx -> rk		129771						
ANR	130551	Symbol	* RSb		129771						
ANR	130552	Symbol	X0		129771						
ANR	130553	Symbol	X1		129771						
ANR	130554	Symbol	X2		129771						
ANR	130555	Symbol	X3		129771						
ANR	130556	Symbol	* FSb		129771						
ANR	130557	Symbol	NULL		129771						
ANR	130558	Symbol	* Y3		129771						
ANR	130559	Symbol	ctx		129771						
ANR	130560	Symbol	i		129771						
ANR	130561	Symbol	* ctx		129771						
ANR	130562	Symbol	padlock_supports		129771						
ANR	130563	Symbol	input		129771						
ANR	130564	Symbol	FSb		129771						
ANR	130565	Symbol	Y0		129771						
ANR	130566	Symbol	* RK ++		129771						
ANR	130567	Symbol	Y1		129771						
ANR	130568	Symbol	Y2		129771						
ANR	130569	Symbol	RK		129771						
ANR	130570	Symbol	Y3		129771						
ANR	130571	Symbol	* Y2		129771						
ANR	130572	Symbol	* Y1		129771						
ANR	130573	Symbol	* Y0		129771						
ANR	130574	Function	aes_crypt_cbc	745:0:28510:29752							
ANR	130575	FunctionDef	"aes_crypt_cbc (aes_context * ctx , int mode , int length , unsigned char iv [ 16 ] , const unsigned char * input , unsigned char * output)"		130574	0					
ANR	130576	CompoundStatement		751:0:28744:29752	130574	0					
ANR	130577	IdentifierDeclStatement	int i ;	752:4:28750:28755	130574	0	True				
ANR	130578	IdentifierDecl	i		130574	0					
ANR	130579	IdentifierDeclType	int		130574	0					
ANR	130580	Identifier	i		130574	1					
ANR	130581	IdentifierDeclStatement	unsigned char temp [ 16 ] ;	753:4:28761:28783	130574	1	True				
ANR	130582	IdentifierDecl	temp [ 16 ]		130574	0					
ANR	130583	IdentifierDeclType	unsigned char [ 16 ]		130574	0					
ANR	130584	Identifier	temp		130574	1					
ANR	130585	PrimaryExpression	16		130574	2					
ANR	130586	IfStatement	if ( padlock_supports ( PADLOCK_ACE ) )		130574	2					
ANR	130587	Condition	padlock_supports ( PADLOCK_ACE )	756:8:28850:28880	130574	0	True				
ANR	130588	CallExpression	padlock_supports ( PADLOCK_ACE )		130574	0					
ANR	130589	Callee	padlock_supports		130574	0					
ANR	130590	Identifier	padlock_supports		130574	0					
ANR	130591	ArgumentList	PADLOCK_ACE		130574	1					
ANR	130592	Argument	PADLOCK_ACE		130574	0					
ANR	130593	Identifier	PADLOCK_ACE		130574	0					
ANR	130594	CompoundStatement		7:4:143:143	130574	1					
ANR	130595	IfStatement	"if ( padlock_xcryptcbc ( ctx , mode , length , iv , input , output ) == 0 )"		130574	0					
ANR	130596	Condition	"padlock_xcryptcbc ( ctx , mode , length , iv , input , output ) == 0"	758:12:28902:28963	130574	0	True				
ANR	130597	EqualityExpression	"padlock_xcryptcbc ( ctx , mode , length , iv , input , output ) == 0"		130574	0		==			
ANR	130598	CallExpression	"padlock_xcryptcbc ( ctx , mode , length , iv , input , output )"		130574	0					
ANR	130599	Callee	padlock_xcryptcbc		130574	0					
ANR	130600	Identifier	padlock_xcryptcbc		130574	0					
ANR	130601	ArgumentList	ctx		130574	1					
ANR	130602	Argument	ctx		130574	0					
ANR	130603	Identifier	ctx		130574	0					
ANR	130604	Argument	mode		130574	1					
ANR	130605	Identifier	mode		130574	0					
ANR	130606	Argument	length		130574	2					
ANR	130607	Identifier	length		130574	0					
ANR	130608	Argument	iv		130574	3					
ANR	130609	Identifier	iv		130574	0					
ANR	130610	Argument	input		130574	4					
ANR	130611	Identifier	input		130574	0					
ANR	130612	Argument	output		130574	5					
ANR	130613	Identifier	output		130574	0					
ANR	130614	PrimaryExpression	0		130574	1					
ANR	130615	ReturnStatement	return ;	759:12:28979:28985	130574	1	True				
ANR	130616	IfStatement	if ( mode == AES_DECRYPT )		130574	3					
ANR	130617	Condition	mode == AES_DECRYPT	763:8:29009:29027	130574	0	True				
ANR	130618	EqualityExpression	mode == AES_DECRYPT		130574	0		==			
ANR	130619	Identifier	mode		130574	0					
ANR	130620	Identifier	AES_DECRYPT		130574	1					
ANR	130621	CompoundStatement		14:4:290:290	130574	1					
ANR	130622	WhileStatement	while ( length > 0 )		130574	0					
ANR	130623	Condition	length > 0	765:15:29052:29061	130574	0	True				
ANR	130624	RelationalExpression	length > 0		130574	0		>			
ANR	130625	Identifier	length		130574	0					
ANR	130626	PrimaryExpression	0		130574	1					
ANR	130627	CompoundStatement		16:8:328:328	130574	1					
ANR	130628	ExpressionStatement	"memcpy ( temp , input , 16 )"	767:12:29087:29112	130574	0	True				
ANR	130629	CallExpression	"memcpy ( temp , input , 16 )"		130574	0					
ANR	130630	Callee	memcpy		130574	0					
ANR	130631	Identifier	memcpy		130574	0					
ANR	130632	ArgumentList	temp		130574	1					
ANR	130633	Argument	temp		130574	0					
ANR	130634	Identifier	temp		130574	0					
ANR	130635	Argument	input		130574	1					
ANR	130636	Identifier	input		130574	0					
ANR	130637	Argument	16		130574	2					
ANR	130638	PrimaryExpression	16		130574	0					
ANR	130639	ExpressionStatement	"aes_crypt_ecb ( ctx , mode , input , output )"	768:12:29126:29167	130574	1	True				
ANR	130640	CallExpression	"aes_crypt_ecb ( ctx , mode , input , output )"		130574	0					
ANR	130641	Callee	aes_crypt_ecb		130574	0					
ANR	130642	Identifier	aes_crypt_ecb		130574	0					
ANR	130643	ArgumentList	ctx		130574	1					
ANR	130644	Argument	ctx		130574	0					
ANR	130645	Identifier	ctx		130574	0					
ANR	130646	Argument	mode		130574	1					
ANR	130647	Identifier	mode		130574	0					
ANR	130648	Argument	input		130574	2					
ANR	130649	Identifier	input		130574	0					
ANR	130650	Argument	output		130574	3					
ANR	130651	Identifier	output		130574	0					
ANR	130652	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		130574	2					
ANR	130653	ForInit	i = 0 ;	770:17:29187:29192	130574	0	True				
ANR	130654	AssignmentExpression	i = 0		130574	0		=			
ANR	130655	Identifier	i		130574	0					
ANR	130656	PrimaryExpression	0		130574	1					
ANR	130657	Condition	i < 16	770:24:29194:29199	130574	1	True				
ANR	130658	RelationalExpression	i < 16		130574	0		<			
ANR	130659	Identifier	i		130574	0					
ANR	130660	PrimaryExpression	16		130574	1					
ANR	130661	PostIncDecOperationExpression	i ++	770:32:29202:29204	130574	2	True				
ANR	130662	Identifier	i		130574	0					
ANR	130663	IncDec	++		130574	1					
ANR	130664	ExpressionStatement	output [ i ] = ( unsigned char ) ( output [ i ] ^ iv [ i ] )	771:16:29224:29272	130574	3	True				
ANR	130665	AssignmentExpression	output [ i ] = ( unsigned char ) ( output [ i ] ^ iv [ i ] )		130574	0		=			
ANR	130666	ArrayIndexing	output [ i ]		130574	0					
ANR	130667	Identifier	output		130574	0					
ANR	130668	Identifier	i		130574	1					
ANR	130669	CastExpression	( unsigned char ) ( output [ i ] ^ iv [ i ] )		130574	1					
ANR	130670	CastTarget	unsigned char		130574	0					
ANR	130671	ExclusiveOrExpression	output [ i ] ^ iv [ i ]		130574	1		^			
ANR	130672	ArrayIndexing	output [ i ]		130574	0					
ANR	130673	Identifier	output		130574	0					
ANR	130674	Identifier	i		130574	1					
ANR	130675	ArrayIndexing	iv [ i ]		130574	1					
ANR	130676	Identifier	iv		130574	0					
ANR	130677	Identifier	i		130574	1					
ANR	130678	ExpressionStatement	"memcpy ( iv , temp , 16 )"	773:12:29287:29309	130574	3	True				
ANR	130679	CallExpression	"memcpy ( iv , temp , 16 )"		130574	0					
ANR	130680	Callee	memcpy		130574	0					
ANR	130681	Identifier	memcpy		130574	0					
ANR	130682	ArgumentList	iv		130574	1					
ANR	130683	Argument	iv		130574	0					
ANR	130684	Identifier	iv		130574	0					
ANR	130685	Argument	temp		130574	1					
ANR	130686	Identifier	temp		130574	0					
ANR	130687	Argument	16		130574	2					
ANR	130688	PrimaryExpression	16		130574	0					
ANR	130689	ExpressionStatement	input += 16	775:12:29324:29336	130574	4	True				
ANR	130690	AssignmentExpression	input += 16		130574	0		+=			
ANR	130691	Identifier	input		130574	0					
ANR	130692	PrimaryExpression	16		130574	1					
ANR	130693	ExpressionStatement	output += 16	776:12:29350:29362	130574	5	True				
ANR	130694	AssignmentExpression	output += 16		130574	0		+=			
ANR	130695	Identifier	output		130574	0					
ANR	130696	PrimaryExpression	16		130574	1					
ANR	130697	ExpressionStatement	length -= 16	777:12:29376:29388	130574	6	True				
ANR	130698	AssignmentExpression	length -= 16		130574	0		-=			
ANR	130699	Identifier	length		130574	0					
ANR	130700	PrimaryExpression	16		130574	1					
ANR	130701	ElseStatement	else		130574	0					
ANR	130702	CompoundStatement		31:4:674:674	130574	0					
ANR	130703	WhileStatement	while ( length > 0 )		130574	0					
ANR	130704	Condition	length > 0	782:15:29436:29445	130574	0	True				
ANR	130705	RelationalExpression	length > 0		130574	0		>			
ANR	130706	Identifier	length		130574	0					
ANR	130707	PrimaryExpression	0		130574	1					
ANR	130708	CompoundStatement		33:8:712:712	130574	1					
ANR	130709	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		130574	0					
ANR	130710	ForInit	i = 0 ;	784:17:29476:29481	130574	0	True				
ANR	130711	AssignmentExpression	i = 0		130574	0		=			
ANR	130712	Identifier	i		130574	0					
ANR	130713	PrimaryExpression	0		130574	1					
ANR	130714	Condition	i < 16	784:24:29483:29488	130574	1	True				
ANR	130715	RelationalExpression	i < 16		130574	0		<			
ANR	130716	Identifier	i		130574	0					
ANR	130717	PrimaryExpression	16		130574	1					
ANR	130718	PostIncDecOperationExpression	i ++	784:32:29491:29493	130574	2	True				
ANR	130719	Identifier	i		130574	0					
ANR	130720	IncDec	++		130574	1					
ANR	130721	ExpressionStatement	output [ i ] = ( unsigned char ) ( input [ i ] ^ iv [ i ] )	785:16:29513:29560	130574	3	True				
ANR	130722	AssignmentExpression	output [ i ] = ( unsigned char ) ( input [ i ] ^ iv [ i ] )		130574	0		=			
ANR	130723	ArrayIndexing	output [ i ]		130574	0					
ANR	130724	Identifier	output		130574	0					
ANR	130725	Identifier	i		130574	1					
ANR	130726	CastExpression	( unsigned char ) ( input [ i ] ^ iv [ i ] )		130574	1					
ANR	130727	CastTarget	unsigned char		130574	0					
ANR	130728	ExclusiveOrExpression	input [ i ] ^ iv [ i ]		130574	1		^			
ANR	130729	ArrayIndexing	input [ i ]		130574	0					
ANR	130730	Identifier	input		130574	0					
ANR	130731	Identifier	i		130574	1					
ANR	130732	ArrayIndexing	iv [ i ]		130574	1					
ANR	130733	Identifier	iv		130574	0					
ANR	130734	Identifier	i		130574	1					
ANR	130735	ExpressionStatement	"aes_crypt_ecb ( ctx , mode , output , output )"	787:12:29575:29617	130574	1	True				
ANR	130736	CallExpression	"aes_crypt_ecb ( ctx , mode , output , output )"		130574	0					
ANR	130737	Callee	aes_crypt_ecb		130574	0					
ANR	130738	Identifier	aes_crypt_ecb		130574	0					
ANR	130739	ArgumentList	ctx		130574	1					
ANR	130740	Argument	ctx		130574	0					
ANR	130741	Identifier	ctx		130574	0					
ANR	130742	Argument	mode		130574	1					
ANR	130743	Identifier	mode		130574	0					
ANR	130744	Argument	output		130574	2					
ANR	130745	Identifier	output		130574	0					
ANR	130746	Argument	output		130574	3					
ANR	130747	Identifier	output		130574	0					
ANR	130748	ExpressionStatement	"memcpy ( iv , output , 16 )"	788:12:29631:29655	130574	2	True				
ANR	130749	CallExpression	"memcpy ( iv , output , 16 )"		130574	0					
ANR	130750	Callee	memcpy		130574	0					
ANR	130751	Identifier	memcpy		130574	0					
ANR	130752	ArgumentList	iv		130574	1					
ANR	130753	Argument	iv		130574	0					
ANR	130754	Identifier	iv		130574	0					
ANR	130755	Argument	output		130574	1					
ANR	130756	Identifier	output		130574	0					
ANR	130757	Argument	16		130574	2					
ANR	130758	PrimaryExpression	16		130574	0					
ANR	130759	ExpressionStatement	input += 16	790:12:29670:29682	130574	3	True				
ANR	130760	AssignmentExpression	input += 16		130574	0		+=			
ANR	130761	Identifier	input		130574	0					
ANR	130762	PrimaryExpression	16		130574	1					
ANR	130763	ExpressionStatement	output += 16	791:12:29696:29708	130574	4	True				
ANR	130764	AssignmentExpression	output += 16		130574	0		+=			
ANR	130765	Identifier	output		130574	0					
ANR	130766	PrimaryExpression	16		130574	1					
ANR	130767	ExpressionStatement	length -= 16	792:12:29722:29734	130574	5	True				
ANR	130768	AssignmentExpression	length -= 16		130574	0		-=			
ANR	130769	Identifier	length		130574	0					
ANR	130770	PrimaryExpression	16		130574	1					
ANR	130771	ReturnType	void		130574	1					
ANR	130772	Identifier	aes_crypt_cbc		130574	2					
ANR	130773	ParameterList	"aes_context * ctx , int mode , int length , unsigned char iv [ 16 ] , const unsigned char * input , unsigned char * output"		130574	3					
ANR	130774	Parameter	aes_context * ctx	745:20:28530:28545	130574	0	True				
ANR	130775	ParameterType	aes_context *		130574	0					
ANR	130776	Identifier	ctx		130574	1					
ANR	130777	Parameter	int mode	746:20:28568:28575	130574	1	True				
ANR	130778	ParameterType	int		130574	0					
ANR	130779	Identifier	mode		130574	1					
ANR	130780	Parameter	int length	747:20:28598:28607	130574	2	True				
ANR	130781	ParameterType	int		130574	0					
ANR	130782	Identifier	length		130574	1					
ANR	130783	Parameter	unsigned char iv [ 16 ]	748:20:28630:28649	130574	3	True				
ANR	130784	ParameterType	unsigned char [ 16 ]		130574	0					
ANR	130785	Identifier	iv		130574	1					
ANR	130786	Parameter	const unsigned char * input	749:20:28672:28697	130574	4	True				
ANR	130787	ParameterType	const unsigned char *		130574	0					
ANR	130788	Identifier	input		130574	1					
ANR	130789	Parameter	unsigned char * output	750:20:28720:28740	130574	5	True				
ANR	130790	ParameterType	unsigned char *		130574	0					
ANR	130791	Identifier	output		130574	1					
ANR	130792	CFGEntryNode	ENTRY		130574		True				
ANR	130793	CFGExitNode	EXIT		130574		True				
ANR	130794	Symbol	temp		130574						
ANR	130795	Symbol	AES_DECRYPT		130574						
ANR	130796	Symbol	ctx		130574						
ANR	130797	Symbol	length		130574						
ANR	130798	Symbol	* input		130574						
ANR	130799	Symbol	i		130574						
ANR	130800	Symbol	iv		130574						
ANR	130801	Symbol	padlock_xcryptcbc		130574						
ANR	130802	Symbol	padlock_supports		130574						
ANR	130803	Symbol	mode		130574						
ANR	130804	Symbol	output		130574						
ANR	130805	Symbol	PADLOCK_ACE		130574						
ANR	130806	Symbol	* iv		130574						
ANR	130807	Symbol	input		130574						
ANR	130808	Symbol	* i		130574						
ANR	130809	Symbol	* output		130574						
ANR	130810	Function	aes_crypt_cfb	800:0:29802:30693							
ANR	130811	FunctionDef	"aes_crypt_cfb (aes_context * ctx , int mode , int length , int * iv_off , unsigned char iv [ 16 ] , const unsigned char * input , unsigned char * output)"		130810	0					
ANR	130812	CompoundStatement		807:0:30069:30693	130810	0					
ANR	130813	IdentifierDeclStatement	"int c , n = * iv_off ;"	808:4:30075:30093	130810	0	True				
ANR	130814	IdentifierDecl	c		130810	0					
ANR	130815	IdentifierDeclType	int		130810	0					
ANR	130816	Identifier	c		130810	1					
ANR	130817	IdentifierDecl	n = * iv_off		130810	1					
ANR	130818	IdentifierDeclType	int		130810	0					
ANR	130819	Identifier	n		130810	1					
ANR	130820	AssignmentExpression	n = * iv_off		130810	2		=			
ANR	130821	Identifier	n		130810	0					
ANR	130822	UnaryOperationExpression	* iv_off		130810	1					
ANR	130823	UnaryOperator	*		130810	0					
ANR	130824	Identifier	iv_off		130810	1					
ANR	130825	IfStatement	if ( mode == AES_DECRYPT )		130810	1					
ANR	130826	Condition	mode == AES_DECRYPT	810:8:30104:30122	130810	0	True				
ANR	130827	EqualityExpression	mode == AES_DECRYPT		130810	0		==			
ANR	130828	Identifier	mode		130810	0					
ANR	130829	Identifier	AES_DECRYPT		130810	1					
ANR	130830	CompoundStatement		5:4:60:60	130810	1					
ANR	130831	WhileStatement	while ( length -- )		130810	0					
ANR	130832	Condition	length --	812:15:30147:30154	130810	0	True				
ANR	130833	PostIncDecOperationExpression	length --		130810	0					
ANR	130834	Identifier	length		130810	0					
ANR	130835	IncDec	--		130810	1					
ANR	130836	CompoundStatement		7:8:96:96	130810	1					
ANR	130837	IfStatement	if ( n == 0 )		130810	0					
ANR	130838	Condition	n == 0	814:16:30184:30189	130810	0	True				
ANR	130839	EqualityExpression	n == 0		130810	0		==			
ANR	130840	Identifier	n		130810	0					
ANR	130841	PrimaryExpression	0		130810	1					
ANR	130842	ExpressionStatement	"aes_crypt_ecb ( ctx , AES_ENCRYPT , iv , iv )"	815:16:30209:30250	130810	1	True				
ANR	130843	CallExpression	"aes_crypt_ecb ( ctx , AES_ENCRYPT , iv , iv )"		130810	0					
ANR	130844	Callee	aes_crypt_ecb		130810	0					
ANR	130845	Identifier	aes_crypt_ecb		130810	0					
ANR	130846	ArgumentList	ctx		130810	1					
ANR	130847	Argument	ctx		130810	0					
ANR	130848	Identifier	ctx		130810	0					
ANR	130849	Argument	AES_ENCRYPT		130810	1					
ANR	130850	Identifier	AES_ENCRYPT		130810	0					
ANR	130851	Argument	iv		130810	2					
ANR	130852	Identifier	iv		130810	0					
ANR	130853	Argument	iv		130810	3					
ANR	130854	Identifier	iv		130810	0					
ANR	130855	ExpressionStatement	c = * input ++	817:12:30265:30277	130810	1	True				
ANR	130856	AssignmentExpression	c = * input ++		130810	0		=			
ANR	130857	Identifier	c		130810	0					
ANR	130858	UnaryOperationExpression	* input ++		130810	1					
ANR	130859	UnaryOperator	*		130810	0					
ANR	130860	PostIncDecOperationExpression	input ++		130810	1					
ANR	130861	Identifier	input		130810	0					
ANR	130862	IncDec	++		130810	1					
ANR	130863	ExpressionStatement	* output ++ = ( unsigned char ) ( c ^ iv [ n ] )	818:12:30291:30331	130810	2	True				
ANR	130864	AssignmentExpression	* output ++ = ( unsigned char ) ( c ^ iv [ n ] )		130810	0		=			
ANR	130865	UnaryOperationExpression	* output ++		130810	0					
ANR	130866	UnaryOperator	*		130810	0					
ANR	130867	PostIncDecOperationExpression	output ++		130810	1					
ANR	130868	Identifier	output		130810	0					
ANR	130869	IncDec	++		130810	1					
ANR	130870	CastExpression	( unsigned char ) ( c ^ iv [ n ] )		130810	1					
ANR	130871	CastTarget	unsigned char		130810	0					
ANR	130872	ExclusiveOrExpression	c ^ iv [ n ]		130810	1		^			
ANR	130873	Identifier	c		130810	0					
ANR	130874	ArrayIndexing	iv [ n ]		130810	1					
ANR	130875	Identifier	iv		130810	0					
ANR	130876	Identifier	n		130810	1					
ANR	130877	ExpressionStatement	iv [ n ] = ( unsigned char ) c	819:12:30345:30370	130810	3	True				
ANR	130878	AssignmentExpression	iv [ n ] = ( unsigned char ) c		130810	0		=			
ANR	130879	ArrayIndexing	iv [ n ]		130810	0					
ANR	130880	Identifier	iv		130810	0					
ANR	130881	Identifier	n		130810	1					
ANR	130882	CastExpression	( unsigned char ) c		130810	1					
ANR	130883	CastTarget	unsigned char		130810	0					
ANR	130884	Identifier	c		130810	1					
ANR	130885	ExpressionStatement	n = ( n + 1 ) & 0x0F	821:12:30385:30403	130810	4	True				
ANR	130886	AssignmentExpression	n = ( n + 1 ) & 0x0F		130810	0		=			
ANR	130887	Identifier	n		130810	0					
ANR	130888	BitAndExpression	( n + 1 ) & 0x0F		130810	1		&			
ANR	130889	AdditiveExpression	n + 1		130810	0		+			
ANR	130890	Identifier	n		130810	0					
ANR	130891	PrimaryExpression	1		130810	1					
ANR	130892	PrimaryExpression	0x0F		130810	1					
ANR	130893	ElseStatement	else		130810	0					
ANR	130894	CompoundStatement		19:4:364:364	130810	0					
ANR	130895	WhileStatement	while ( length -- )		130810	0					
ANR	130896	Condition	length --	826:15:30451:30458	130810	0	True				
ANR	130897	PostIncDecOperationExpression	length --		130810	0					
ANR	130898	Identifier	length		130810	0					
ANR	130899	IncDec	--		130810	1					
ANR	130900	CompoundStatement		21:8:400:400	130810	1					
ANR	130901	IfStatement	if ( n == 0 )		130810	0					
ANR	130902	Condition	n == 0	828:16:30488:30493	130810	0	True				
ANR	130903	EqualityExpression	n == 0		130810	0		==			
ANR	130904	Identifier	n		130810	0					
ANR	130905	PrimaryExpression	0		130810	1					
ANR	130906	ExpressionStatement	"aes_crypt_ecb ( ctx , AES_ENCRYPT , iv , iv )"	829:16:30513:30554	130810	1	True				
ANR	130907	CallExpression	"aes_crypt_ecb ( ctx , AES_ENCRYPT , iv , iv )"		130810	0					
ANR	130908	Callee	aes_crypt_ecb		130810	0					
ANR	130909	Identifier	aes_crypt_ecb		130810	0					
ANR	130910	ArgumentList	ctx		130810	1					
ANR	130911	Argument	ctx		130810	0					
ANR	130912	Identifier	ctx		130810	0					
ANR	130913	Argument	AES_ENCRYPT		130810	1					
ANR	130914	Identifier	AES_ENCRYPT		130810	0					
ANR	130915	Argument	iv		130810	2					
ANR	130916	Identifier	iv		130810	0					
ANR	130917	Argument	iv		130810	3					
ANR	130918	Identifier	iv		130810	0					
ANR	130919	ExpressionStatement	iv [ n ] = * output ++ = ( unsigned char ) ( iv [ n ] ^ * input ++ )	831:12:30569:30624	130810	1	True				
ANR	130920	AssignmentExpression	iv [ n ] = * output ++ = ( unsigned char ) ( iv [ n ] ^ * input ++ )		130810	0		=			
ANR	130921	ArrayIndexing	iv [ n ]		130810	0					
ANR	130922	Identifier	iv		130810	0					
ANR	130923	Identifier	n		130810	1					
ANR	130924	AssignmentExpression	* output ++ = ( unsigned char ) ( iv [ n ] ^ * input ++ )		130810	1		=			
ANR	130925	UnaryOperationExpression	* output ++		130810	0					
ANR	130926	UnaryOperator	*		130810	0					
ANR	130927	PostIncDecOperationExpression	output ++		130810	1					
ANR	130928	Identifier	output		130810	0					
ANR	130929	IncDec	++		130810	1					
ANR	130930	CastExpression	( unsigned char ) ( iv [ n ] ^ * input ++ )		130810	1					
ANR	130931	CastTarget	unsigned char		130810	0					
ANR	130932	ExclusiveOrExpression	iv [ n ] ^ * input ++		130810	1		^			
ANR	130933	ArrayIndexing	iv [ n ]		130810	0					
ANR	130934	Identifier	iv		130810	0					
ANR	130935	Identifier	n		130810	1					
ANR	130936	UnaryOperationExpression	* input ++		130810	1					
ANR	130937	UnaryOperator	*		130810	0					
ANR	130938	PostIncDecOperationExpression	input ++		130810	1					
ANR	130939	Identifier	input		130810	0					
ANR	130940	IncDec	++		130810	1					
ANR	130941	ExpressionStatement	n = ( n + 1 ) & 0x0F	833:12:30639:30657	130810	2	True				
ANR	130942	AssignmentExpression	n = ( n + 1 ) & 0x0F		130810	0		=			
ANR	130943	Identifier	n		130810	0					
ANR	130944	BitAndExpression	( n + 1 ) & 0x0F		130810	1		&			
ANR	130945	AdditiveExpression	n + 1		130810	0		+			
ANR	130946	Identifier	n		130810	0					
ANR	130947	PrimaryExpression	1		130810	1					
ANR	130948	PrimaryExpression	0x0F		130810	1					
ANR	130949	ExpressionStatement	* iv_off = n	837:4:30680:30691	130810	2	True				
ANR	130950	AssignmentExpression	* iv_off = n		130810	0		=			
ANR	130951	UnaryOperationExpression	* iv_off		130810	0					
ANR	130952	UnaryOperator	*		130810	0					
ANR	130953	Identifier	iv_off		130810	1					
ANR	130954	Identifier	n		130810	1					
ANR	130955	ReturnType	void		130810	1					
ANR	130956	Identifier	aes_crypt_cfb		130810	2					
ANR	130957	ParameterList	"aes_context * ctx , int mode , int length , int * iv_off , unsigned char iv [ 16 ] , const unsigned char * input , unsigned char * output"		130810	3					
ANR	130958	Parameter	aes_context * ctx	800:20:29822:29837	130810	0	True				
ANR	130959	ParameterType	aes_context *		130810	0					
ANR	130960	Identifier	ctx		130810	1					
ANR	130961	Parameter	int mode	801:20:29860:29867	130810	1	True				
ANR	130962	ParameterType	int		130810	0					
ANR	130963	Identifier	mode		130810	1					
ANR	130964	Parameter	int length	802:20:29890:29899	130810	2	True				
ANR	130965	ParameterType	int		130810	0					
ANR	130966	Identifier	length		130810	1					
ANR	130967	Parameter	int * iv_off	803:20:29922:29932	130810	3	True				
ANR	130968	ParameterType	int *		130810	0					
ANR	130969	Identifier	iv_off		130810	1					
ANR	130970	Parameter	unsigned char iv [ 16 ]	804:20:29955:29974	130810	4	True				
ANR	130971	ParameterType	unsigned char [ 16 ]		130810	0					
ANR	130972	Identifier	iv		130810	1					
ANR	130973	Parameter	const unsigned char * input	805:20:29997:30022	130810	5	True				
ANR	130974	ParameterType	const unsigned char *		130810	0					
ANR	130975	Identifier	input		130810	1					
ANR	130976	Parameter	unsigned char * output	806:20:30045:30065	130810	6	True				
ANR	130977	ParameterType	unsigned char *		130810	0					
ANR	130978	Identifier	output		130810	1					
ANR	130979	CFGEntryNode	ENTRY		130810		True				
ANR	130980	CFGExitNode	EXIT		130810		True				
ANR	130981	Symbol	* iv_off		130810						
ANR	130982	Symbol	c		130810						
ANR	130983	Symbol	AES_DECRYPT		130810						
ANR	130984	Symbol	* input ++		130810						
ANR	130985	Symbol	iv_off		130810						
ANR	130986	Symbol	ctx		130810						
ANR	130987	Symbol	length		130810						
ANR	130988	Symbol	* output ++		130810						
ANR	130989	Symbol	iv		130810						
ANR	130990	Symbol	n		130810						
ANR	130991	Symbol	AES_ENCRYPT		130810						
ANR	130992	Symbol	mode		130810						
ANR	130993	Symbol	output		130810						
ANR	130994	Symbol	* iv		130810						
ANR	130995	Symbol	input		130810						
ANR	130996	Symbol	* n		130810						
ANR	130997	Function	aes_self_test	915:0:33256:37378							
ANR	130998	FunctionDef	aes_self_test (int verbose)		130997	0					
ANR	130999	CompoundStatement		916:0:33289:37378	130997	0					
ANR	131000	IdentifierDeclStatement	"int i , j , u , v , offset ;"	917:4:33295:33317	130997	0	True				
ANR	131001	IdentifierDecl	i		130997	0					
ANR	131002	IdentifierDeclType	int		130997	0					
ANR	131003	Identifier	i		130997	1					
ANR	131004	IdentifierDecl	j		130997	1					
ANR	131005	IdentifierDeclType	int		130997	0					
ANR	131006	Identifier	j		130997	1					
ANR	131007	IdentifierDecl	u		130997	2					
ANR	131008	IdentifierDeclType	int		130997	0					
ANR	131009	Identifier	u		130997	1					
ANR	131010	IdentifierDecl	v		130997	3					
ANR	131011	IdentifierDeclType	int		130997	0					
ANR	131012	Identifier	v		130997	1					
ANR	131013	IdentifierDecl	offset		130997	4					
ANR	131014	IdentifierDeclType	int		130997	0					
ANR	131015	Identifier	offset		130997	1					
ANR	131016	IdentifierDeclStatement	unsigned char key [ 32 ] ;	918:4:33323:33344	130997	1	True				
ANR	131017	IdentifierDecl	key [ 32 ]		130997	0					
ANR	131018	IdentifierDeclType	unsigned char [ 32 ]		130997	0					
ANR	131019	Identifier	key		130997	1					
ANR	131020	PrimaryExpression	32		130997	2					
ANR	131021	IdentifierDeclStatement	unsigned char buf [ 16 ] ;	919:4:33350:33371	130997	2	True				
ANR	131022	IdentifierDecl	buf [ 16 ]		130997	0					
ANR	131023	IdentifierDeclType	unsigned char [ 16 ]		130997	0					
ANR	131024	Identifier	buf		130997	1					
ANR	131025	PrimaryExpression	16		130997	2					
ANR	131026	IdentifierDeclStatement	unsigned char prv [ 16 ] ;	920:4:33377:33398	130997	3	True				
ANR	131027	IdentifierDecl	prv [ 16 ]		130997	0					
ANR	131028	IdentifierDeclType	unsigned char [ 16 ]		130997	0					
ANR	131029	Identifier	prv		130997	1					
ANR	131030	PrimaryExpression	16		130997	2					
ANR	131031	IdentifierDeclStatement	unsigned char iv [ 16 ] ;	921:4:33404:33424	130997	4	True				
ANR	131032	IdentifierDecl	iv [ 16 ]		130997	0					
ANR	131033	IdentifierDeclType	unsigned char [ 16 ]		130997	0					
ANR	131034	Identifier	iv		130997	1					
ANR	131035	PrimaryExpression	16		130997	2					
ANR	131036	IdentifierDeclStatement	aes_context ctx ;	922:4:33430:33445	130997	5	True				
ANR	131037	IdentifierDecl	ctx		130997	0					
ANR	131038	IdentifierDeclType	aes_context		130997	0					
ANR	131039	Identifier	ctx		130997	1					
ANR	131040	ExpressionStatement	"memset ( key , 0 , 32 )"	924:4:33452:33472	130997	6	True				
ANR	131041	CallExpression	"memset ( key , 0 , 32 )"		130997	0					
ANR	131042	Callee	memset		130997	0					
ANR	131043	Identifier	memset		130997	0					
ANR	131044	ArgumentList	key		130997	1					
ANR	131045	Argument	key		130997	0					
ANR	131046	Identifier	key		130997	0					
ANR	131047	Argument	0		130997	1					
ANR	131048	PrimaryExpression	0		130997	0					
ANR	131049	Argument	32		130997	2					
ANR	131050	PrimaryExpression	32		130997	0					
ANR	131051	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		130997	7					
ANR	131052	ForInit	i = 0 ;	929:9:33515:33520	130997	0	True				
ANR	131053	AssignmentExpression	i = 0		130997	0		=			
ANR	131054	Identifier	i		130997	0					
ANR	131055	PrimaryExpression	0		130997	1					
ANR	131056	Condition	i < 6	929:16:33522:33526	130997	1	True				
ANR	131057	RelationalExpression	i < 6		130997	0		<			
ANR	131058	Identifier	i		130997	0					
ANR	131059	PrimaryExpression	6		130997	1					
ANR	131060	PostIncDecOperationExpression	i ++	929:23:33529:33531	130997	2	True				
ANR	131061	Identifier	i		130997	0					
ANR	131062	IncDec	++		130997	1					
ANR	131063	CompoundStatement		15:4:249:249	130997	3					
ANR	131064	ExpressionStatement	u = i >> 1	931:8:33549:33559	130997	0	True				
ANR	131065	AssignmentExpression	u = i >> 1		130997	0		=			
ANR	131066	Identifier	u		130997	0					
ANR	131067	ShiftExpression	i >> 1		130997	1		>>			
ANR	131068	Identifier	i		130997	0					
ANR	131069	PrimaryExpression	1		130997	1					
ANR	131070	ExpressionStatement	v = i & 1	932:8:33569:33579	130997	1	True				
ANR	131071	AssignmentExpression	v = i & 1		130997	0		=			
ANR	131072	Identifier	v		130997	0					
ANR	131073	BitAndExpression	i & 1		130997	1		&			
ANR	131074	Identifier	i		130997	0					
ANR	131075	PrimaryExpression	1		130997	1					
ANR	131076	IfStatement	if ( verbose != 0 )		130997	2					
ANR	131077	Condition	verbose != 0	934:12:33594:33605	130997	0	True				
ANR	131078	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131079	Identifier	verbose		130997	0					
ANR	131080	PrimaryExpression	0		130997	1					
ANR	131081	ExpressionStatement	"printf ( ""  AES-ECB-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"	935:12:33621:33725	130997	1	True				
ANR	131082	CallExpression	"printf ( ""  AES-ECB-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"		130997	0					
ANR	131083	Callee	printf		130997	0					
ANR	131084	Identifier	printf		130997	0					
ANR	131085	ArgumentList	"""  AES-ECB-%3d (%s): """		130997	1					
ANR	131086	Argument	"""  AES-ECB-%3d (%s): """		130997	0					
ANR	131087	PrimaryExpression	"""  AES-ECB-%3d (%s): """		130997	0					
ANR	131088	Argument	128 + u * 64		130997	1					
ANR	131089	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131090	PrimaryExpression	128		130997	0					
ANR	131091	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131092	Identifier	u		130997	0					
ANR	131093	PrimaryExpression	64		130997	1					
ANR	131094	Argument	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	2					
ANR	131095	ConditionalExpression	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	0					
ANR	131096	Condition	v == AES_DECRYPT		130997	0					
ANR	131097	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131098	Identifier	v		130997	0					
ANR	131099	Identifier	AES_DECRYPT		130997	1					
ANR	131100	PrimaryExpression	"""dec"""		130997	1					
ANR	131101	PrimaryExpression	"""enc"""		130997	2					
ANR	131102	ExpressionStatement	"memset ( buf , 0 , 16 )"	938:8:33736:33756	130997	3	True				
ANR	131103	CallExpression	"memset ( buf , 0 , 16 )"		130997	0					
ANR	131104	Callee	memset		130997	0					
ANR	131105	Identifier	memset		130997	0					
ANR	131106	ArgumentList	buf		130997	1					
ANR	131107	Argument	buf		130997	0					
ANR	131108	Identifier	buf		130997	0					
ANR	131109	Argument	0		130997	1					
ANR	131110	PrimaryExpression	0		130997	0					
ANR	131111	Argument	16		130997	2					
ANR	131112	PrimaryExpression	16		130997	0					
ANR	131113	IfStatement	if ( v == AES_DECRYPT )		130997	4					
ANR	131114	Condition	v == AES_DECRYPT	940:12:33771:33786	130997	0	True				
ANR	131115	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131116	Identifier	v		130997	0					
ANR	131117	Identifier	AES_DECRYPT		130997	1					
ANR	131118	CompoundStatement		26:8:508:508	130997	1					
ANR	131119	ExpressionStatement	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"	942:12:33812:33853	130997	0	True				
ANR	131120	CallExpression	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131121	Callee	aes_setkey_dec		130997	0					
ANR	131122	Identifier	aes_setkey_dec		130997	0					
ANR	131123	ArgumentList	& ctx		130997	1					
ANR	131124	Argument	& ctx		130997	0					
ANR	131125	UnaryOperationExpression	& ctx		130997	0					
ANR	131126	UnaryOperator	&		130997	0					
ANR	131127	Identifier	ctx		130997	1					
ANR	131128	Argument	key		130997	1					
ANR	131129	Identifier	key		130997	0					
ANR	131130	Argument	128 + u * 64		130997	2					
ANR	131131	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131132	PrimaryExpression	128		130997	0					
ANR	131133	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131134	Identifier	u		130997	0					
ANR	131135	PrimaryExpression	64		130997	1					
ANR	131136	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131137	ForInit	j = 0 ;	944:17:33873:33878	130997	0	True				
ANR	131138	AssignmentExpression	j = 0		130997	0		=			
ANR	131139	Identifier	j		130997	0					
ANR	131140	PrimaryExpression	0		130997	1					
ANR	131141	Condition	j < 10000	944:24:33880:33888	130997	1	True				
ANR	131142	RelationalExpression	j < 10000		130997	0		<			
ANR	131143	Identifier	j		130997	0					
ANR	131144	PrimaryExpression	10000		130997	1					
ANR	131145	PostIncDecOperationExpression	j ++	944:35:33891:33893	130997	2	True				
ANR	131146	Identifier	j		130997	0					
ANR	131147	IncDec	++		130997	1					
ANR	131148	ExpressionStatement	"aes_crypt_ecb ( & ctx , v , buf , buf )"	945:16:33913:33947	130997	3	True				
ANR	131149	CallExpression	"aes_crypt_ecb ( & ctx , v , buf , buf )"		130997	0					
ANR	131150	Callee	aes_crypt_ecb		130997	0					
ANR	131151	Identifier	aes_crypt_ecb		130997	0					
ANR	131152	ArgumentList	& ctx		130997	1					
ANR	131153	Argument	& ctx		130997	0					
ANR	131154	UnaryOperationExpression	& ctx		130997	0					
ANR	131155	UnaryOperator	&		130997	0					
ANR	131156	Identifier	ctx		130997	1					
ANR	131157	Argument	v		130997	1					
ANR	131158	Identifier	v		130997	0					
ANR	131159	Argument	buf		130997	2					
ANR	131160	Identifier	buf		130997	0					
ANR	131161	Argument	buf		130997	3					
ANR	131162	Identifier	buf		130997	0					
ANR	131163	IfStatement	"if ( memcmp ( buf , aes_test_ecb_dec [ u ] , 16 ) != 0 )"		130997	2					
ANR	131164	Condition	"memcmp ( buf , aes_test_ecb_dec [ u ] , 16 ) != 0"	947:16:33966:34008	130997	0	True				
ANR	131165	EqualityExpression	"memcmp ( buf , aes_test_ecb_dec [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131166	CallExpression	"memcmp ( buf , aes_test_ecb_dec [ u ] , 16 )"		130997	0					
ANR	131167	Callee	memcmp		130997	0					
ANR	131168	Identifier	memcmp		130997	0					
ANR	131169	ArgumentList	buf		130997	1					
ANR	131170	Argument	buf		130997	0					
ANR	131171	Identifier	buf		130997	0					
ANR	131172	Argument	aes_test_ecb_dec [ u ]		130997	1					
ANR	131173	ArrayIndexing	aes_test_ecb_dec [ u ]		130997	0					
ANR	131174	Identifier	aes_test_ecb_dec		130997	0					
ANR	131175	Identifier	u		130997	1					
ANR	131176	Argument	16		130997	2					
ANR	131177	PrimaryExpression	16		130997	0					
ANR	131178	PrimaryExpression	0		130997	1					
ANR	131179	CompoundStatement		33:12:734:734	130997	1					
ANR	131180	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131181	Condition	verbose != 0	949:20:34046:34057	130997	0	True				
ANR	131182	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131183	Identifier	verbose		130997	0					
ANR	131184	PrimaryExpression	0		130997	1					
ANR	131185	ExpressionStatement	"printf ( ""failed\\n"" )"	950:20:34081:34101	130997	1	True				
ANR	131186	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131187	Callee	printf		130997	0					
ANR	131188	Identifier	printf		130997	0					
ANR	131189	ArgumentList	"""failed\\n"""		130997	1					
ANR	131190	Argument	"""failed\\n"""		130997	0					
ANR	131191	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131192	ReturnStatement	return ( 1 ) ;	952:16:34120:34131	130997	1	True				
ANR	131193	PrimaryExpression	1		130997	0					
ANR	131194	ElseStatement	else		130997	0					
ANR	131195	CompoundStatement		41:8:888:888	130997	0					
ANR	131196	ExpressionStatement	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"	957:12:34192:34233	130997	0	True				
ANR	131197	CallExpression	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131198	Callee	aes_setkey_enc		130997	0					
ANR	131199	Identifier	aes_setkey_enc		130997	0					
ANR	131200	ArgumentList	& ctx		130997	1					
ANR	131201	Argument	& ctx		130997	0					
ANR	131202	UnaryOperationExpression	& ctx		130997	0					
ANR	131203	UnaryOperator	&		130997	0					
ANR	131204	Identifier	ctx		130997	1					
ANR	131205	Argument	key		130997	1					
ANR	131206	Identifier	key		130997	0					
ANR	131207	Argument	128 + u * 64		130997	2					
ANR	131208	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131209	PrimaryExpression	128		130997	0					
ANR	131210	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131211	Identifier	u		130997	0					
ANR	131212	PrimaryExpression	64		130997	1					
ANR	131213	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131214	ForInit	j = 0 ;	959:17:34253:34258	130997	0	True				
ANR	131215	AssignmentExpression	j = 0		130997	0		=			
ANR	131216	Identifier	j		130997	0					
ANR	131217	PrimaryExpression	0		130997	1					
ANR	131218	Condition	j < 10000	959:24:34260:34268	130997	1	True				
ANR	131219	RelationalExpression	j < 10000		130997	0		<			
ANR	131220	Identifier	j		130997	0					
ANR	131221	PrimaryExpression	10000		130997	1					
ANR	131222	PostIncDecOperationExpression	j ++	959:35:34271:34273	130997	2	True				
ANR	131223	Identifier	j		130997	0					
ANR	131224	IncDec	++		130997	1					
ANR	131225	ExpressionStatement	"aes_crypt_ecb ( & ctx , v , buf , buf )"	960:16:34293:34327	130997	3	True				
ANR	131226	CallExpression	"aes_crypt_ecb ( & ctx , v , buf , buf )"		130997	0					
ANR	131227	Callee	aes_crypt_ecb		130997	0					
ANR	131228	Identifier	aes_crypt_ecb		130997	0					
ANR	131229	ArgumentList	& ctx		130997	1					
ANR	131230	Argument	& ctx		130997	0					
ANR	131231	UnaryOperationExpression	& ctx		130997	0					
ANR	131232	UnaryOperator	&		130997	0					
ANR	131233	Identifier	ctx		130997	1					
ANR	131234	Argument	v		130997	1					
ANR	131235	Identifier	v		130997	0					
ANR	131236	Argument	buf		130997	2					
ANR	131237	Identifier	buf		130997	0					
ANR	131238	Argument	buf		130997	3					
ANR	131239	Identifier	buf		130997	0					
ANR	131240	IfStatement	"if ( memcmp ( buf , aes_test_ecb_enc [ u ] , 16 ) != 0 )"		130997	2					
ANR	131241	Condition	"memcmp ( buf , aes_test_ecb_enc [ u ] , 16 ) != 0"	962:16:34346:34388	130997	0	True				
ANR	131242	EqualityExpression	"memcmp ( buf , aes_test_ecb_enc [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131243	CallExpression	"memcmp ( buf , aes_test_ecb_enc [ u ] , 16 )"		130997	0					
ANR	131244	Callee	memcmp		130997	0					
ANR	131245	Identifier	memcmp		130997	0					
ANR	131246	ArgumentList	buf		130997	1					
ANR	131247	Argument	buf		130997	0					
ANR	131248	Identifier	buf		130997	0					
ANR	131249	Argument	aes_test_ecb_enc [ u ]		130997	1					
ANR	131250	ArrayIndexing	aes_test_ecb_enc [ u ]		130997	0					
ANR	131251	Identifier	aes_test_ecb_enc		130997	0					
ANR	131252	Identifier	u		130997	1					
ANR	131253	Argument	16		130997	2					
ANR	131254	PrimaryExpression	16		130997	0					
ANR	131255	PrimaryExpression	0		130997	1					
ANR	131256	CompoundStatement		48:12:1114:1114	130997	1					
ANR	131257	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131258	Condition	verbose != 0	964:20:34426:34437	130997	0	True				
ANR	131259	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131260	Identifier	verbose		130997	0					
ANR	131261	PrimaryExpression	0		130997	1					
ANR	131262	ExpressionStatement	"printf ( ""failed\\n"" )"	965:20:34461:34481	130997	1	True				
ANR	131263	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131264	Callee	printf		130997	0					
ANR	131265	Identifier	printf		130997	0					
ANR	131266	ArgumentList	"""failed\\n"""		130997	1					
ANR	131267	Argument	"""failed\\n"""		130997	0					
ANR	131268	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131269	ReturnStatement	return ( 1 ) ;	967:16:34500:34511	130997	1	True				
ANR	131270	PrimaryExpression	1		130997	0					
ANR	131271	IfStatement	if ( verbose != 0 )		130997	5					
ANR	131272	Condition	verbose != 0	971:12:34550:34561	130997	0	True				
ANR	131273	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131274	Identifier	verbose		130997	0					
ANR	131275	PrimaryExpression	0		130997	1					
ANR	131276	ExpressionStatement	"printf ( ""passed\\n"" )"	972:12:34577:34597	130997	1	True				
ANR	131277	CallExpression	"printf ( ""passed\\n"" )"		130997	0					
ANR	131278	Callee	printf		130997	0					
ANR	131279	Identifier	printf		130997	0					
ANR	131280	ArgumentList	"""passed\\n"""		130997	1					
ANR	131281	Argument	"""passed\\n"""		130997	0					
ANR	131282	PrimaryExpression	"""passed\\n"""		130997	0					
ANR	131283	IfStatement	if ( verbose != 0 )		130997	8					
ANR	131284	Condition	verbose != 0	975:8:34614:34625	130997	0	True				
ANR	131285	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131286	Identifier	verbose		130997	0					
ANR	131287	PrimaryExpression	0		130997	1					
ANR	131288	ExpressionStatement	"printf ( ""\\n"" )"	976:8:34637:34651	130997	1	True				
ANR	131289	CallExpression	"printf ( ""\\n"" )"		130997	0					
ANR	131290	Callee	printf		130997	0					
ANR	131291	Identifier	printf		130997	0					
ANR	131292	ArgumentList	"""\\n"""		130997	1					
ANR	131293	Argument	"""\\n"""		130997	0					
ANR	131294	PrimaryExpression	"""\\n"""		130997	0					
ANR	131295	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		130997	9					
ANR	131296	ForInit	i = 0 ;	981:9:34694:34699	130997	0	True				
ANR	131297	AssignmentExpression	i = 0		130997	0		=			
ANR	131298	Identifier	i		130997	0					
ANR	131299	PrimaryExpression	0		130997	1					
ANR	131300	Condition	i < 6	981:16:34701:34705	130997	1	True				
ANR	131301	RelationalExpression	i < 6		130997	0		<			
ANR	131302	Identifier	i		130997	0					
ANR	131303	PrimaryExpression	6		130997	1					
ANR	131304	PostIncDecOperationExpression	i ++	981:23:34708:34710	130997	2	True				
ANR	131305	Identifier	i		130997	0					
ANR	131306	IncDec	++		130997	1					
ANR	131307	CompoundStatement		67:4:1428:1428	130997	3					
ANR	131308	ExpressionStatement	u = i >> 1	983:8:34728:34738	130997	0	True				
ANR	131309	AssignmentExpression	u = i >> 1		130997	0		=			
ANR	131310	Identifier	u		130997	0					
ANR	131311	ShiftExpression	i >> 1		130997	1		>>			
ANR	131312	Identifier	i		130997	0					
ANR	131313	PrimaryExpression	1		130997	1					
ANR	131314	ExpressionStatement	v = i & 1	984:8:34748:34758	130997	1	True				
ANR	131315	AssignmentExpression	v = i & 1		130997	0		=			
ANR	131316	Identifier	v		130997	0					
ANR	131317	BitAndExpression	i & 1		130997	1		&			
ANR	131318	Identifier	i		130997	0					
ANR	131319	PrimaryExpression	1		130997	1					
ANR	131320	IfStatement	if ( verbose != 0 )		130997	2					
ANR	131321	Condition	verbose != 0	986:12:34773:34784	130997	0	True				
ANR	131322	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131323	Identifier	verbose		130997	0					
ANR	131324	PrimaryExpression	0		130997	1					
ANR	131325	ExpressionStatement	"printf ( ""  AES-CBC-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"	987:12:34800:34904	130997	1	True				
ANR	131326	CallExpression	"printf ( ""  AES-CBC-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"		130997	0					
ANR	131327	Callee	printf		130997	0					
ANR	131328	Identifier	printf		130997	0					
ANR	131329	ArgumentList	"""  AES-CBC-%3d (%s): """		130997	1					
ANR	131330	Argument	"""  AES-CBC-%3d (%s): """		130997	0					
ANR	131331	PrimaryExpression	"""  AES-CBC-%3d (%s): """		130997	0					
ANR	131332	Argument	128 + u * 64		130997	1					
ANR	131333	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131334	PrimaryExpression	128		130997	0					
ANR	131335	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131336	Identifier	u		130997	0					
ANR	131337	PrimaryExpression	64		130997	1					
ANR	131338	Argument	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	2					
ANR	131339	ConditionalExpression	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	0					
ANR	131340	Condition	v == AES_DECRYPT		130997	0					
ANR	131341	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131342	Identifier	v		130997	0					
ANR	131343	Identifier	AES_DECRYPT		130997	1					
ANR	131344	PrimaryExpression	"""dec"""		130997	1					
ANR	131345	PrimaryExpression	"""enc"""		130997	2					
ANR	131346	ExpressionStatement	"memset ( iv , 0 , 16 )"	990:8:34915:34935	130997	3	True				
ANR	131347	CallExpression	"memset ( iv , 0 , 16 )"		130997	0					
ANR	131348	Callee	memset		130997	0					
ANR	131349	Identifier	memset		130997	0					
ANR	131350	ArgumentList	iv		130997	1					
ANR	131351	Argument	iv		130997	0					
ANR	131352	Identifier	iv		130997	0					
ANR	131353	Argument	0		130997	1					
ANR	131354	PrimaryExpression	0		130997	0					
ANR	131355	Argument	16		130997	2					
ANR	131356	PrimaryExpression	16		130997	0					
ANR	131357	ExpressionStatement	"memset ( prv , 0 , 16 )"	991:8:34945:34965	130997	4	True				
ANR	131358	CallExpression	"memset ( prv , 0 , 16 )"		130997	0					
ANR	131359	Callee	memset		130997	0					
ANR	131360	Identifier	memset		130997	0					
ANR	131361	ArgumentList	prv		130997	1					
ANR	131362	Argument	prv		130997	0					
ANR	131363	Identifier	prv		130997	0					
ANR	131364	Argument	0		130997	1					
ANR	131365	PrimaryExpression	0		130997	0					
ANR	131366	Argument	16		130997	2					
ANR	131367	PrimaryExpression	16		130997	0					
ANR	131368	ExpressionStatement	"memset ( buf , 0 , 16 )"	992:8:34975:34995	130997	5	True				
ANR	131369	CallExpression	"memset ( buf , 0 , 16 )"		130997	0					
ANR	131370	Callee	memset		130997	0					
ANR	131371	Identifier	memset		130997	0					
ANR	131372	ArgumentList	buf		130997	1					
ANR	131373	Argument	buf		130997	0					
ANR	131374	Identifier	buf		130997	0					
ANR	131375	Argument	0		130997	1					
ANR	131376	PrimaryExpression	0		130997	0					
ANR	131377	Argument	16		130997	2					
ANR	131378	PrimaryExpression	16		130997	0					
ANR	131379	IfStatement	if ( v == AES_DECRYPT )		130997	6					
ANR	131380	Condition	v == AES_DECRYPT	994:12:35010:35025	130997	0	True				
ANR	131381	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131382	Identifier	v		130997	0					
ANR	131383	Identifier	AES_DECRYPT		130997	1					
ANR	131384	CompoundStatement		80:8:1747:1747	130997	1					
ANR	131385	ExpressionStatement	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"	996:12:35051:35092	130997	0	True				
ANR	131386	CallExpression	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131387	Callee	aes_setkey_dec		130997	0					
ANR	131388	Identifier	aes_setkey_dec		130997	0					
ANR	131389	ArgumentList	& ctx		130997	1					
ANR	131390	Argument	& ctx		130997	0					
ANR	131391	UnaryOperationExpression	& ctx		130997	0					
ANR	131392	UnaryOperator	&		130997	0					
ANR	131393	Identifier	ctx		130997	1					
ANR	131394	Argument	key		130997	1					
ANR	131395	Identifier	key		130997	0					
ANR	131396	Argument	128 + u * 64		130997	2					
ANR	131397	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131398	PrimaryExpression	128		130997	0					
ANR	131399	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131400	Identifier	u		130997	0					
ANR	131401	PrimaryExpression	64		130997	1					
ANR	131402	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131403	ForInit	j = 0 ;	998:17:35112:35117	130997	0	True				
ANR	131404	AssignmentExpression	j = 0		130997	0		=			
ANR	131405	Identifier	j		130997	0					
ANR	131406	PrimaryExpression	0		130997	1					
ANR	131407	Condition	j < 10000	998:24:35119:35127	130997	1	True				
ANR	131408	RelationalExpression	j < 10000		130997	0		<			
ANR	131409	Identifier	j		130997	0					
ANR	131410	PrimaryExpression	10000		130997	1					
ANR	131411	PostIncDecOperationExpression	j ++	998:35:35130:35132	130997	2	True				
ANR	131412	Identifier	j		130997	0					
ANR	131413	IncDec	++		130997	1					
ANR	131414	ExpressionStatement	"aes_crypt_cbc ( & ctx , v , 16 , iv , buf , buf )"	999:16:35152:35194	130997	3	True				
ANR	131415	CallExpression	"aes_crypt_cbc ( & ctx , v , 16 , iv , buf , buf )"		130997	0					
ANR	131416	Callee	aes_crypt_cbc		130997	0					
ANR	131417	Identifier	aes_crypt_cbc		130997	0					
ANR	131418	ArgumentList	& ctx		130997	1					
ANR	131419	Argument	& ctx		130997	0					
ANR	131420	UnaryOperationExpression	& ctx		130997	0					
ANR	131421	UnaryOperator	&		130997	0					
ANR	131422	Identifier	ctx		130997	1					
ANR	131423	Argument	v		130997	1					
ANR	131424	Identifier	v		130997	0					
ANR	131425	Argument	16		130997	2					
ANR	131426	PrimaryExpression	16		130997	0					
ANR	131427	Argument	iv		130997	3					
ANR	131428	Identifier	iv		130997	0					
ANR	131429	Argument	buf		130997	4					
ANR	131430	Identifier	buf		130997	0					
ANR	131431	Argument	buf		130997	5					
ANR	131432	Identifier	buf		130997	0					
ANR	131433	IfStatement	"if ( memcmp ( buf , aes_test_cbc_dec [ u ] , 16 ) != 0 )"		130997	2					
ANR	131434	Condition	"memcmp ( buf , aes_test_cbc_dec [ u ] , 16 ) != 0"	1001:16:35213:35255	130997	0	True				
ANR	131435	EqualityExpression	"memcmp ( buf , aes_test_cbc_dec [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131436	CallExpression	"memcmp ( buf , aes_test_cbc_dec [ u ] , 16 )"		130997	0					
ANR	131437	Callee	memcmp		130997	0					
ANR	131438	Identifier	memcmp		130997	0					
ANR	131439	ArgumentList	buf		130997	1					
ANR	131440	Argument	buf		130997	0					
ANR	131441	Identifier	buf		130997	0					
ANR	131442	Argument	aes_test_cbc_dec [ u ]		130997	1					
ANR	131443	ArrayIndexing	aes_test_cbc_dec [ u ]		130997	0					
ANR	131444	Identifier	aes_test_cbc_dec		130997	0					
ANR	131445	Identifier	u		130997	1					
ANR	131446	Argument	16		130997	2					
ANR	131447	PrimaryExpression	16		130997	0					
ANR	131448	PrimaryExpression	0		130997	1					
ANR	131449	CompoundStatement		87:12:1981:1981	130997	1					
ANR	131450	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131451	Condition	verbose != 0	1003:20:35293:35304	130997	0	True				
ANR	131452	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131453	Identifier	verbose		130997	0					
ANR	131454	PrimaryExpression	0		130997	1					
ANR	131455	ExpressionStatement	"printf ( ""failed\\n"" )"	1004:20:35328:35348	130997	1	True				
ANR	131456	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131457	Callee	printf		130997	0					
ANR	131458	Identifier	printf		130997	0					
ANR	131459	ArgumentList	"""failed\\n"""		130997	1					
ANR	131460	Argument	"""failed\\n"""		130997	0					
ANR	131461	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131462	ReturnStatement	return ( 1 ) ;	1006:16:35367:35378	130997	1	True				
ANR	131463	PrimaryExpression	1		130997	0					
ANR	131464	ElseStatement	else		130997	0					
ANR	131465	CompoundStatement		95:8:2135:2135	130997	0					
ANR	131466	ExpressionStatement	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"	1011:12:35439:35480	130997	0	True				
ANR	131467	CallExpression	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131468	Callee	aes_setkey_enc		130997	0					
ANR	131469	Identifier	aes_setkey_enc		130997	0					
ANR	131470	ArgumentList	& ctx		130997	1					
ANR	131471	Argument	& ctx		130997	0					
ANR	131472	UnaryOperationExpression	& ctx		130997	0					
ANR	131473	UnaryOperator	&		130997	0					
ANR	131474	Identifier	ctx		130997	1					
ANR	131475	Argument	key		130997	1					
ANR	131476	Identifier	key		130997	0					
ANR	131477	Argument	128 + u * 64		130997	2					
ANR	131478	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131479	PrimaryExpression	128		130997	0					
ANR	131480	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131481	Identifier	u		130997	0					
ANR	131482	PrimaryExpression	64		130997	1					
ANR	131483	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131484	ForInit	j = 0 ;	1013:17:35500:35505	130997	0	True				
ANR	131485	AssignmentExpression	j = 0		130997	0		=			
ANR	131486	Identifier	j		130997	0					
ANR	131487	PrimaryExpression	0		130997	1					
ANR	131488	Condition	j < 10000	1013:24:35507:35515	130997	1	True				
ANR	131489	RelationalExpression	j < 10000		130997	0		<			
ANR	131490	Identifier	j		130997	0					
ANR	131491	PrimaryExpression	10000		130997	1					
ANR	131492	PostIncDecOperationExpression	j ++	1013:35:35518:35520	130997	2	True				
ANR	131493	Identifier	j		130997	0					
ANR	131494	IncDec	++		130997	1					
ANR	131495	CompoundStatement		100:16:2264:2285	130997	3					
ANR	131496	IdentifierDeclStatement	unsigned char tmp [ 16 ] ;	1015:16:35554:35575	130997	0	True				
ANR	131497	IdentifierDecl	tmp [ 16 ]		130997	0					
ANR	131498	IdentifierDeclType	unsigned char [ 16 ]		130997	0					
ANR	131499	Identifier	tmp		130997	1					
ANR	131500	PrimaryExpression	16		130997	2					
ANR	131501	ExpressionStatement	"aes_crypt_cbc ( & ctx , v , 16 , iv , buf , buf )"	1017:16:35594:35636	130997	1	True				
ANR	131502	CallExpression	"aes_crypt_cbc ( & ctx , v , 16 , iv , buf , buf )"		130997	0					
ANR	131503	Callee	aes_crypt_cbc		130997	0					
ANR	131504	Identifier	aes_crypt_cbc		130997	0					
ANR	131505	ArgumentList	& ctx		130997	1					
ANR	131506	Argument	& ctx		130997	0					
ANR	131507	UnaryOperationExpression	& ctx		130997	0					
ANR	131508	UnaryOperator	&		130997	0					
ANR	131509	Identifier	ctx		130997	1					
ANR	131510	Argument	v		130997	1					
ANR	131511	Identifier	v		130997	0					
ANR	131512	Argument	16		130997	2					
ANR	131513	PrimaryExpression	16		130997	0					
ANR	131514	Argument	iv		130997	3					
ANR	131515	Identifier	iv		130997	0					
ANR	131516	Argument	buf		130997	4					
ANR	131517	Identifier	buf		130997	0					
ANR	131518	Argument	buf		130997	5					
ANR	131519	Identifier	buf		130997	0					
ANR	131520	ExpressionStatement	"memcpy ( tmp , prv , 16 )"	1019:16:35655:35677	130997	2	True				
ANR	131521	CallExpression	"memcpy ( tmp , prv , 16 )"		130997	0					
ANR	131522	Callee	memcpy		130997	0					
ANR	131523	Identifier	memcpy		130997	0					
ANR	131524	ArgumentList	tmp		130997	1					
ANR	131525	Argument	tmp		130997	0					
ANR	131526	Identifier	tmp		130997	0					
ANR	131527	Argument	prv		130997	1					
ANR	131528	Identifier	prv		130997	0					
ANR	131529	Argument	16		130997	2					
ANR	131530	PrimaryExpression	16		130997	0					
ANR	131531	ExpressionStatement	"memcpy ( prv , buf , 16 )"	1020:16:35695:35717	130997	3	True				
ANR	131532	CallExpression	"memcpy ( prv , buf , 16 )"		130997	0					
ANR	131533	Callee	memcpy		130997	0					
ANR	131534	Identifier	memcpy		130997	0					
ANR	131535	ArgumentList	prv		130997	1					
ANR	131536	Argument	prv		130997	0					
ANR	131537	Identifier	prv		130997	0					
ANR	131538	Argument	buf		130997	1					
ANR	131539	Identifier	buf		130997	0					
ANR	131540	Argument	16		130997	2					
ANR	131541	PrimaryExpression	16		130997	0					
ANR	131542	ExpressionStatement	"memcpy ( buf , tmp , 16 )"	1021:16:35735:35757	130997	4	True				
ANR	131543	CallExpression	"memcpy ( buf , tmp , 16 )"		130997	0					
ANR	131544	Callee	memcpy		130997	0					
ANR	131545	Identifier	memcpy		130997	0					
ANR	131546	ArgumentList	buf		130997	1					
ANR	131547	Argument	buf		130997	0					
ANR	131548	Identifier	buf		130997	0					
ANR	131549	Argument	tmp		130997	1					
ANR	131550	Identifier	tmp		130997	0					
ANR	131551	Argument	16		130997	2					
ANR	131552	PrimaryExpression	16		130997	0					
ANR	131553	IfStatement	"if ( memcmp ( prv , aes_test_cbc_enc [ u ] , 16 ) != 0 )"		130997	2					
ANR	131554	Condition	"memcmp ( prv , aes_test_cbc_enc [ u ] , 16 ) != 0"	1024:16:35790:35832	130997	0	True				
ANR	131555	EqualityExpression	"memcmp ( prv , aes_test_cbc_enc [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131556	CallExpression	"memcmp ( prv , aes_test_cbc_enc [ u ] , 16 )"		130997	0					
ANR	131557	Callee	memcmp		130997	0					
ANR	131558	Identifier	memcmp		130997	0					
ANR	131559	ArgumentList	prv		130997	1					
ANR	131560	Argument	prv		130997	0					
ANR	131561	Identifier	prv		130997	0					
ANR	131562	Argument	aes_test_cbc_enc [ u ]		130997	1					
ANR	131563	ArrayIndexing	aes_test_cbc_enc [ u ]		130997	0					
ANR	131564	Identifier	aes_test_cbc_enc		130997	0					
ANR	131565	Identifier	u		130997	1					
ANR	131566	Argument	16		130997	2					
ANR	131567	PrimaryExpression	16		130997	0					
ANR	131568	PrimaryExpression	0		130997	1					
ANR	131569	CompoundStatement		110:12:2558:2558	130997	1					
ANR	131570	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131571	Condition	verbose != 0	1026:20:35870:35881	130997	0	True				
ANR	131572	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131573	Identifier	verbose		130997	0					
ANR	131574	PrimaryExpression	0		130997	1					
ANR	131575	ExpressionStatement	"printf ( ""failed\\n"" )"	1027:20:35905:35925	130997	1	True				
ANR	131576	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131577	Callee	printf		130997	0					
ANR	131578	Identifier	printf		130997	0					
ANR	131579	ArgumentList	"""failed\\n"""		130997	1					
ANR	131580	Argument	"""failed\\n"""		130997	0					
ANR	131581	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131582	ReturnStatement	return ( 1 ) ;	1029:16:35944:35955	130997	1	True				
ANR	131583	PrimaryExpression	1		130997	0					
ANR	131584	IfStatement	if ( verbose != 0 )		130997	7					
ANR	131585	Condition	verbose != 0	1033:12:35994:36005	130997	0	True				
ANR	131586	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131587	Identifier	verbose		130997	0					
ANR	131588	PrimaryExpression	0		130997	1					
ANR	131589	ExpressionStatement	"printf ( ""passed\\n"" )"	1034:12:36021:36041	130997	1	True				
ANR	131590	CallExpression	"printf ( ""passed\\n"" )"		130997	0					
ANR	131591	Callee	printf		130997	0					
ANR	131592	Identifier	printf		130997	0					
ANR	131593	ArgumentList	"""passed\\n"""		130997	1					
ANR	131594	Argument	"""passed\\n"""		130997	0					
ANR	131595	PrimaryExpression	"""passed\\n"""		130997	0					
ANR	131596	IfStatement	if ( verbose != 0 )		130997	10					
ANR	131597	Condition	verbose != 0	1037:8:36058:36069	130997	0	True				
ANR	131598	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131599	Identifier	verbose		130997	0					
ANR	131600	PrimaryExpression	0		130997	1					
ANR	131601	ExpressionStatement	"printf ( ""\\n"" )"	1038:8:36081:36095	130997	1	True				
ANR	131602	CallExpression	"printf ( ""\\n"" )"		130997	0					
ANR	131603	Callee	printf		130997	0					
ANR	131604	Identifier	printf		130997	0					
ANR	131605	ArgumentList	"""\\n"""		130997	1					
ANR	131606	Argument	"""\\n"""		130997	0					
ANR	131607	PrimaryExpression	"""\\n"""		130997	0					
ANR	131608	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		130997	11					
ANR	131609	ForInit	i = 0 ;	1043:9:36138:36143	130997	0	True				
ANR	131610	AssignmentExpression	i = 0		130997	0		=			
ANR	131611	Identifier	i		130997	0					
ANR	131612	PrimaryExpression	0		130997	1					
ANR	131613	Condition	i < 6	1043:16:36145:36149	130997	1	True				
ANR	131614	RelationalExpression	i < 6		130997	0		<			
ANR	131615	Identifier	i		130997	0					
ANR	131616	PrimaryExpression	6		130997	1					
ANR	131617	PostIncDecOperationExpression	i ++	1043:23:36152:36154	130997	2	True				
ANR	131618	Identifier	i		130997	0					
ANR	131619	IncDec	++		130997	1					
ANR	131620	CompoundStatement		129:4:2872:2872	130997	3					
ANR	131621	ExpressionStatement	u = i >> 1	1045:8:36172:36182	130997	0	True				
ANR	131622	AssignmentExpression	u = i >> 1		130997	0		=			
ANR	131623	Identifier	u		130997	0					
ANR	131624	ShiftExpression	i >> 1		130997	1		>>			
ANR	131625	Identifier	i		130997	0					
ANR	131626	PrimaryExpression	1		130997	1					
ANR	131627	ExpressionStatement	v = i & 1	1046:8:36192:36202	130997	1	True				
ANR	131628	AssignmentExpression	v = i & 1		130997	0		=			
ANR	131629	Identifier	v		130997	0					
ANR	131630	BitAndExpression	i & 1		130997	1		&			
ANR	131631	Identifier	i		130997	0					
ANR	131632	PrimaryExpression	1		130997	1					
ANR	131633	IfStatement	if ( verbose != 0 )		130997	2					
ANR	131634	Condition	verbose != 0	1048:12:36217:36228	130997	0	True				
ANR	131635	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131636	Identifier	verbose		130997	0					
ANR	131637	PrimaryExpression	0		130997	1					
ANR	131638	ExpressionStatement	"printf ( ""  AES-CFB-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"	1049:12:36244:36348	130997	1	True				
ANR	131639	CallExpression	"printf ( ""  AES-CFB-%3d (%s): "" , 128 + u * 64 , ( v == AES_DECRYPT ) ? ""dec"" : ""enc"" )"		130997	0					
ANR	131640	Callee	printf		130997	0					
ANR	131641	Identifier	printf		130997	0					
ANR	131642	ArgumentList	"""  AES-CFB-%3d (%s): """		130997	1					
ANR	131643	Argument	"""  AES-CFB-%3d (%s): """		130997	0					
ANR	131644	PrimaryExpression	"""  AES-CFB-%3d (%s): """		130997	0					
ANR	131645	Argument	128 + u * 64		130997	1					
ANR	131646	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131647	PrimaryExpression	128		130997	0					
ANR	131648	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131649	Identifier	u		130997	0					
ANR	131650	PrimaryExpression	64		130997	1					
ANR	131651	Argument	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	2					
ANR	131652	ConditionalExpression	"( v == AES_DECRYPT ) ? ""dec"" : ""enc"""		130997	0					
ANR	131653	Condition	v == AES_DECRYPT		130997	0					
ANR	131654	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131655	Identifier	v		130997	0					
ANR	131656	Identifier	AES_DECRYPT		130997	1					
ANR	131657	PrimaryExpression	"""dec"""		130997	1					
ANR	131658	PrimaryExpression	"""enc"""		130997	2					
ANR	131659	ExpressionStatement	"memset ( iv , 0 , 16 )"	1052:8:36359:36379	130997	3	True				
ANR	131660	CallExpression	"memset ( iv , 0 , 16 )"		130997	0					
ANR	131661	Callee	memset		130997	0					
ANR	131662	Identifier	memset		130997	0					
ANR	131663	ArgumentList	iv		130997	1					
ANR	131664	Argument	iv		130997	0					
ANR	131665	Identifier	iv		130997	0					
ANR	131666	Argument	0		130997	1					
ANR	131667	PrimaryExpression	0		130997	0					
ANR	131668	Argument	16		130997	2					
ANR	131669	PrimaryExpression	16		130997	0					
ANR	131670	ExpressionStatement	"memset ( buf , 0 , 16 )"	1053:8:36389:36409	130997	4	True				
ANR	131671	CallExpression	"memset ( buf , 0 , 16 )"		130997	0					
ANR	131672	Callee	memset		130997	0					
ANR	131673	Identifier	memset		130997	0					
ANR	131674	ArgumentList	buf		130997	1					
ANR	131675	Argument	buf		130997	0					
ANR	131676	Identifier	buf		130997	0					
ANR	131677	Argument	0		130997	1					
ANR	131678	PrimaryExpression	0		130997	0					
ANR	131679	Argument	16		130997	2					
ANR	131680	PrimaryExpression	16		130997	0					
ANR	131681	ExpressionStatement	offset = 0	1054:8:36419:36429	130997	5	True				
ANR	131682	AssignmentExpression	offset = 0		130997	0		=			
ANR	131683	Identifier	offset		130997	0					
ANR	131684	PrimaryExpression	0		130997	1					
ANR	131685	IfStatement	if ( v == AES_DECRYPT )		130997	6					
ANR	131686	Condition	v == AES_DECRYPT	1056:12:36444:36459	130997	0	True				
ANR	131687	EqualityExpression	v == AES_DECRYPT		130997	0		==			
ANR	131688	Identifier	v		130997	0					
ANR	131689	Identifier	AES_DECRYPT		130997	1					
ANR	131690	CompoundStatement		142:8:3181:3181	130997	1					
ANR	131691	ExpressionStatement	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"	1058:12:36485:36526	130997	0	True				
ANR	131692	CallExpression	"aes_setkey_dec ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131693	Callee	aes_setkey_dec		130997	0					
ANR	131694	Identifier	aes_setkey_dec		130997	0					
ANR	131695	ArgumentList	& ctx		130997	1					
ANR	131696	Argument	& ctx		130997	0					
ANR	131697	UnaryOperationExpression	& ctx		130997	0					
ANR	131698	UnaryOperator	&		130997	0					
ANR	131699	Identifier	ctx		130997	1					
ANR	131700	Argument	key		130997	1					
ANR	131701	Identifier	key		130997	0					
ANR	131702	Argument	128 + u * 64		130997	2					
ANR	131703	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131704	PrimaryExpression	128		130997	0					
ANR	131705	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131706	Identifier	u		130997	0					
ANR	131707	PrimaryExpression	64		130997	1					
ANR	131708	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131709	ForInit	j = 0 ;	1060:17:36546:36551	130997	0	True				
ANR	131710	AssignmentExpression	j = 0		130997	0		=			
ANR	131711	Identifier	j		130997	0					
ANR	131712	PrimaryExpression	0		130997	1					
ANR	131713	Condition	j < 10000	1060:24:36553:36561	130997	1	True				
ANR	131714	RelationalExpression	j < 10000		130997	0		<			
ANR	131715	Identifier	j		130997	0					
ANR	131716	PrimaryExpression	10000		130997	1					
ANR	131717	PostIncDecOperationExpression	j ++	1060:35:36564:36566	130997	2	True				
ANR	131718	Identifier	j		130997	0					
ANR	131719	IncDec	++		130997	1					
ANR	131720	ExpressionStatement	"aes_crypt_cfb ( & ctx , v , 16 , & offset , iv , buf , buf )"	1061:16:36586:36637	130997	3	True				
ANR	131721	CallExpression	"aes_crypt_cfb ( & ctx , v , 16 , & offset , iv , buf , buf )"		130997	0					
ANR	131722	Callee	aes_crypt_cfb		130997	0					
ANR	131723	Identifier	aes_crypt_cfb		130997	0					
ANR	131724	ArgumentList	& ctx		130997	1					
ANR	131725	Argument	& ctx		130997	0					
ANR	131726	UnaryOperationExpression	& ctx		130997	0					
ANR	131727	UnaryOperator	&		130997	0					
ANR	131728	Identifier	ctx		130997	1					
ANR	131729	Argument	v		130997	1					
ANR	131730	Identifier	v		130997	0					
ANR	131731	Argument	16		130997	2					
ANR	131732	PrimaryExpression	16		130997	0					
ANR	131733	Argument	& offset		130997	3					
ANR	131734	UnaryOperationExpression	& offset		130997	0					
ANR	131735	UnaryOperator	&		130997	0					
ANR	131736	Identifier	offset		130997	1					
ANR	131737	Argument	iv		130997	4					
ANR	131738	Identifier	iv		130997	0					
ANR	131739	Argument	buf		130997	5					
ANR	131740	Identifier	buf		130997	0					
ANR	131741	Argument	buf		130997	6					
ANR	131742	Identifier	buf		130997	0					
ANR	131743	IfStatement	"if ( memcmp ( buf , aes_test_cfb_dec [ u ] , 16 ) != 0 )"		130997	2					
ANR	131744	Condition	"memcmp ( buf , aes_test_cfb_dec [ u ] , 16 ) != 0"	1063:16:36656:36698	130997	0	True				
ANR	131745	EqualityExpression	"memcmp ( buf , aes_test_cfb_dec [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131746	CallExpression	"memcmp ( buf , aes_test_cfb_dec [ u ] , 16 )"		130997	0					
ANR	131747	Callee	memcmp		130997	0					
ANR	131748	Identifier	memcmp		130997	0					
ANR	131749	ArgumentList	buf		130997	1					
ANR	131750	Argument	buf		130997	0					
ANR	131751	Identifier	buf		130997	0					
ANR	131752	Argument	aes_test_cfb_dec [ u ]		130997	1					
ANR	131753	ArrayIndexing	aes_test_cfb_dec [ u ]		130997	0					
ANR	131754	Identifier	aes_test_cfb_dec		130997	0					
ANR	131755	Identifier	u		130997	1					
ANR	131756	Argument	16		130997	2					
ANR	131757	PrimaryExpression	16		130997	0					
ANR	131758	PrimaryExpression	0		130997	1					
ANR	131759	CompoundStatement		149:12:3424:3424	130997	1					
ANR	131760	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131761	Condition	verbose != 0	1065:20:36736:36747	130997	0	True				
ANR	131762	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131763	Identifier	verbose		130997	0					
ANR	131764	PrimaryExpression	0		130997	1					
ANR	131765	ExpressionStatement	"printf ( ""failed\\n"" )"	1066:20:36771:36791	130997	1	True				
ANR	131766	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131767	Callee	printf		130997	0					
ANR	131768	Identifier	printf		130997	0					
ANR	131769	ArgumentList	"""failed\\n"""		130997	1					
ANR	131770	Argument	"""failed\\n"""		130997	0					
ANR	131771	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131772	ReturnStatement	return ( 1 ) ;	1068:16:36810:36821	130997	1	True				
ANR	131773	PrimaryExpression	1		130997	0					
ANR	131774	ElseStatement	else		130997	0					
ANR	131775	CompoundStatement		157:8:3578:3578	130997	0					
ANR	131776	ExpressionStatement	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"	1073:12:36882:36923	130997	0	True				
ANR	131777	CallExpression	"aes_setkey_enc ( & ctx , key , 128 + u * 64 )"		130997	0					
ANR	131778	Callee	aes_setkey_enc		130997	0					
ANR	131779	Identifier	aes_setkey_enc		130997	0					
ANR	131780	ArgumentList	& ctx		130997	1					
ANR	131781	Argument	& ctx		130997	0					
ANR	131782	UnaryOperationExpression	& ctx		130997	0					
ANR	131783	UnaryOperator	&		130997	0					
ANR	131784	Identifier	ctx		130997	1					
ANR	131785	Argument	key		130997	1					
ANR	131786	Identifier	key		130997	0					
ANR	131787	Argument	128 + u * 64		130997	2					
ANR	131788	AdditiveExpression	128 + u * 64		130997	0		+			
ANR	131789	PrimaryExpression	128		130997	0					
ANR	131790	MultiplicativeExpression	u * 64		130997	1		*			
ANR	131791	Identifier	u		130997	0					
ANR	131792	PrimaryExpression	64		130997	1					
ANR	131793	ForStatement	for ( j = 0 ; j < 10000 ; j ++ )		130997	1					
ANR	131794	ForInit	j = 0 ;	1075:17:36943:36948	130997	0	True				
ANR	131795	AssignmentExpression	j = 0		130997	0		=			
ANR	131796	Identifier	j		130997	0					
ANR	131797	PrimaryExpression	0		130997	1					
ANR	131798	Condition	j < 10000	1075:24:36950:36958	130997	1	True				
ANR	131799	RelationalExpression	j < 10000		130997	0		<			
ANR	131800	Identifier	j		130997	0					
ANR	131801	PrimaryExpression	10000		130997	1					
ANR	131802	PostIncDecOperationExpression	j ++	1075:35:36961:36963	130997	2	True				
ANR	131803	Identifier	j		130997	0					
ANR	131804	IncDec	++		130997	1					
ANR	131805	ExpressionStatement	"aes_crypt_cfb ( & ctx , v , 16 , & offset , iv , buf , buf )"	1076:16:36983:37034	130997	3	True				
ANR	131806	CallExpression	"aes_crypt_cfb ( & ctx , v , 16 , & offset , iv , buf , buf )"		130997	0					
ANR	131807	Callee	aes_crypt_cfb		130997	0					
ANR	131808	Identifier	aes_crypt_cfb		130997	0					
ANR	131809	ArgumentList	& ctx		130997	1					
ANR	131810	Argument	& ctx		130997	0					
ANR	131811	UnaryOperationExpression	& ctx		130997	0					
ANR	131812	UnaryOperator	&		130997	0					
ANR	131813	Identifier	ctx		130997	1					
ANR	131814	Argument	v		130997	1					
ANR	131815	Identifier	v		130997	0					
ANR	131816	Argument	16		130997	2					
ANR	131817	PrimaryExpression	16		130997	0					
ANR	131818	Argument	& offset		130997	3					
ANR	131819	UnaryOperationExpression	& offset		130997	0					
ANR	131820	UnaryOperator	&		130997	0					
ANR	131821	Identifier	offset		130997	1					
ANR	131822	Argument	iv		130997	4					
ANR	131823	Identifier	iv		130997	0					
ANR	131824	Argument	buf		130997	5					
ANR	131825	Identifier	buf		130997	0					
ANR	131826	Argument	buf		130997	6					
ANR	131827	Identifier	buf		130997	0					
ANR	131828	IfStatement	"if ( memcmp ( buf , aes_test_cfb_enc [ u ] , 16 ) != 0 )"		130997	2					
ANR	131829	Condition	"memcmp ( buf , aes_test_cfb_enc [ u ] , 16 ) != 0"	1078:16:37053:37095	130997	0	True				
ANR	131830	EqualityExpression	"memcmp ( buf , aes_test_cfb_enc [ u ] , 16 ) != 0"		130997	0		!=			
ANR	131831	CallExpression	"memcmp ( buf , aes_test_cfb_enc [ u ] , 16 )"		130997	0					
ANR	131832	Callee	memcmp		130997	0					
ANR	131833	Identifier	memcmp		130997	0					
ANR	131834	ArgumentList	buf		130997	1					
ANR	131835	Argument	buf		130997	0					
ANR	131836	Identifier	buf		130997	0					
ANR	131837	Argument	aes_test_cfb_enc [ u ]		130997	1					
ANR	131838	ArrayIndexing	aes_test_cfb_enc [ u ]		130997	0					
ANR	131839	Identifier	aes_test_cfb_enc		130997	0					
ANR	131840	Identifier	u		130997	1					
ANR	131841	Argument	16		130997	2					
ANR	131842	PrimaryExpression	16		130997	0					
ANR	131843	PrimaryExpression	0		130997	1					
ANR	131844	CompoundStatement		164:12:3821:3821	130997	1					
ANR	131845	IfStatement	if ( verbose != 0 )		130997	0					
ANR	131846	Condition	verbose != 0	1080:20:37133:37144	130997	0	True				
ANR	131847	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131848	Identifier	verbose		130997	0					
ANR	131849	PrimaryExpression	0		130997	1					
ANR	131850	ExpressionStatement	"printf ( ""failed\\n"" )"	1081:20:37168:37188	130997	1	True				
ANR	131851	CallExpression	"printf ( ""failed\\n"" )"		130997	0					
ANR	131852	Callee	printf		130997	0					
ANR	131853	Identifier	printf		130997	0					
ANR	131854	ArgumentList	"""failed\\n"""		130997	1					
ANR	131855	Argument	"""failed\\n"""		130997	0					
ANR	131856	PrimaryExpression	"""failed\\n"""		130997	0					
ANR	131857	ReturnStatement	return ( 1 ) ;	1083:16:37207:37218	130997	1	True				
ANR	131858	PrimaryExpression	1		130997	0					
ANR	131859	IfStatement	if ( verbose != 0 )		130997	7					
ANR	131860	Condition	verbose != 0	1087:12:37257:37268	130997	0	True				
ANR	131861	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131862	Identifier	verbose		130997	0					
ANR	131863	PrimaryExpression	0		130997	1					
ANR	131864	ExpressionStatement	"printf ( ""passed\\n"" )"	1088:12:37284:37304	130997	1	True				
ANR	131865	CallExpression	"printf ( ""passed\\n"" )"		130997	0					
ANR	131866	Callee	printf		130997	0					
ANR	131867	Identifier	printf		130997	0					
ANR	131868	ArgumentList	"""passed\\n"""		130997	1					
ANR	131869	Argument	"""passed\\n"""		130997	0					
ANR	131870	PrimaryExpression	"""passed\\n"""		130997	0					
ANR	131871	IfStatement	if ( verbose != 0 )		130997	12					
ANR	131872	Condition	verbose != 0	1091:8:37321:37332	130997	0	True				
ANR	131873	EqualityExpression	verbose != 0		130997	0		!=			
ANR	131874	Identifier	verbose		130997	0					
ANR	131875	PrimaryExpression	0		130997	1					
ANR	131876	ExpressionStatement	"printf ( ""\\n"" )"	1092:8:37344:37358	130997	1	True				
ANR	131877	CallExpression	"printf ( ""\\n"" )"		130997	0					
ANR	131878	Callee	printf		130997	0					
ANR	131879	Identifier	printf		130997	0					
ANR	131880	ArgumentList	"""\\n"""		130997	1					
ANR	131881	Argument	"""\\n"""		130997	0					
ANR	131882	PrimaryExpression	"""\\n"""		130997	0					
ANR	131883	ReturnStatement	return ( 0 ) ;	1094:4:37365:37376	130997	13	True				
ANR	131884	PrimaryExpression	0		130997	0					
ANR	131885	ReturnType	int		130997	1					
ANR	131886	Identifier	aes_self_test		130997	2					
ANR	131887	ParameterList	int verbose		130997	3					
ANR	131888	Parameter	int verbose	915:19:33275:33285	130997	0	True				
ANR	131889	ParameterType	int		130997	0					
ANR	131890	Identifier	verbose		130997	1					
ANR	131891	CFGEntryNode	ENTRY		130997		True				
ANR	131892	CFGExitNode	EXIT		130997		True				
ANR	131893	Symbol	* aes_test_cfb_enc		130997						
ANR	131894	Symbol	aes_test_cbc_enc		130997						
ANR	131895	Symbol	AES_DECRYPT		130997						
ANR	131896	Symbol	& ctx		130997						
ANR	131897	Symbol	* aes_test_cbc_dec		130997						
ANR	131898	Symbol	memcmp		130997						
ANR	131899	Symbol	aes_test_ecb_enc		130997						
ANR	131900	Symbol	tmp		130997						
ANR	131901	Symbol	* aes_test_cbc_enc		130997						
ANR	131902	Symbol	key		130997						
ANR	131903	Symbol	* aes_test_ecb_dec		130997						
ANR	131904	Symbol	offset		130997						
ANR	131905	Symbol	ctx		130997						
ANR	131906	Symbol	& offset		130997						
ANR	131907	Symbol	* aes_test_cfb_dec		130997						
ANR	131908	Symbol	i		130997						
ANR	131909	Symbol	aes_test_cbc_dec		130997						
ANR	131910	Symbol	j		130997						
ANR	131911	Symbol	aes_test_cfb_dec		130997						
ANR	131912	Symbol	iv		130997						
ANR	131913	Symbol	verbose		130997						
ANR	131914	Symbol	buf		130997						
ANR	131915	Symbol	aes_test_cfb_enc		130997						
ANR	131916	Symbol	u		130997						
ANR	131917	Symbol	prv		130997						
ANR	131918	Symbol	v		130997						
ANR	131919	Symbol	* aes_test_ecb_enc		130997						
ANR	131920	Symbol	aes_test_ecb_dec		130997						
ANR	131921	Symbol	* u		130997						
ANR	131922	Function	main	1097:0:37381:37445							
ANR	131923	FunctionDef	"main (int argc , char * argv [ ])"		131922	0					
ANR	131924	CompoundStatement		1098:0:37414:37445	131922	0					
ANR	131925	ReturnStatement	return aes_self_test ( 1 ) ;	1099:4:37420:37443	131922	0	True				
ANR	131926	CallExpression	aes_self_test ( 1 )		131922	0					
ANR	131927	Callee	aes_self_test		131922	0					
ANR	131928	Identifier	aes_self_test		131922	0					
ANR	131929	ArgumentList	1		131922	1					
ANR	131930	Argument	1		131922	0					
ANR	131931	PrimaryExpression	1		131922	0					
ANR	131932	ReturnType	int		131922	1					
ANR	131933	Identifier	main		131922	2					
ANR	131934	ParameterList	"int argc , char * argv [ ]"		131922	3					
ANR	131935	Parameter	int argc	1097:9:37390:37397	131922	0	True				
ANR	131936	ParameterType	int		131922	0					
ANR	131937	Identifier	argc		131922	1					
ANR	131938	Parameter	char * argv [ ]	1097:19:37400:37411	131922	1	True				
ANR	131939	ParameterType	char * [ ]		131922	0					
ANR	131940	Identifier	argv		131922	1					
ANR	131941	CFGEntryNode	ENTRY		131922		True				
ANR	131942	CFGExitNode	EXIT		131922		True				
ANR	131943	Symbol	argc		131922						
ANR	131944	Symbol	aes_self_test		131922						
ANR	131945	Symbol	argv		131922						
