command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3205617	File	data/converged/CVE-2018-16863_ghostpdl/fapiufst.c								
ANR	3205618	DeclStmt									
ANR	3205619	Decl							UW16 CGENTRY	UW16 CGENTRY ( FSP PFONTCONTEXT fc )	CGIFFfont
ANR	3205620	DeclStmt									
ANR	3205621	Decl							UW16 CGENTRY	UW16 CGENTRY ( fc )	CGIFFfont
ANR	3205622	DeclStmt									
ANR	3205623	Decl							PFONTCONTEXT	PFONTCONTEXT	fc
ANR	3205624	DeclStmt									
ANR	3205625	Decl							struct fapi_ufst_server_s	struct fapi_ufst_server_s	fapi_ufst_server
ANR	3205626	DeclStmt									
ANR	3205627	Decl							unsigned int	unsigned int	font_ids
ANR	3205628	DeclStmt									
ANR	3205629	Decl							define FSA_FROM_SERVER IF_STATE	define FSA_FROM_SERVER IF_STATE *	pIFS
ANR	3205630	DeclStmt									
ANR	3205631	Decl							define FSA_FROM_SERVER IF_STATE	define FSA_FROM_SERVER IF_STATE *	pIFS
ANR	3205632	DeclStmt									
ANR	3205633	Decl							fapi_ufst_server	fapi_ufst_server *	static_server_ptr_for_ufst_callback
ANR	3205634	DeclStmt									
ANR	3205635	Decl							GLOBAL UW16	"GLOBAL UW16 ( FSP LPUB8 p , UW16 gifct )"	PCLswapHdr
ANR	3205636	DeclStmt									
ANR	3205637	Decl							struct pcleo_glyph_list_elem_s	struct pcleo_glyph_list_elem_s	pcleo_glyph_list_elem
ANR	3205638	ClassDef	pcleo_glyph_list_elem_s	132:0:3277:3414							
ANR	3205639	DeclStmt									
ANR	3205640	Decl							UW16	UW16	chId
ANR	3205641	DeclStmt									
ANR	3205642	Decl							pcleo_glyph_list_elem	pcleo_glyph_list_elem *	next
ANR	3205643	ClassDef	<unnamed>	139:8:3426:3712							
ANR	3205644	DeclStmt									
ANR	3205645	Decl							SL32	SL32	font_id
ANR	3205646	DeclStmt									
ANR	3205647	Decl							uint	uint	tt_font_body_offset
ANR	3205648	DeclStmt									
ANR	3205649	Decl							UW16	UW16	is_disk_font
ANR	3205650	DeclStmt									
ANR	3205651	Decl							UW16	UW16	font_type
ANR	3205652	DeclStmt									
ANR	3205653	Decl							UW16	UW16	platformId
ANR	3205654	DeclStmt									
ANR	3205655	Decl							UW16	UW16	specificId
ANR	3205656	DeclStmt									
ANR	3205657	Decl							pcleo_glyph_list_elem	pcleo_glyph_list_elem *	glyphs
ANR	3205658	DeclStmt									
ANR	3205659	Decl							char	char [ 40 ]	decodingID
ANR	3205660	DeclStmt									
ANR	3205661	Decl							TTFONTINFOTYPE	TTFONTINFOTYPE *	ufstfontinfo
ANR	3205662	DeclStmt									
ANR	3205663	Decl							UW16	UW16	ufstfontinfosize
ANR	3205664	DeclStmt									
ANR	3205665	Decl									ufst_common_font_data
ANR	3205666	ClassDef	<unnamed>	153:8:3723:3829							
ANR	3205667	DeclStmt									
ANR	3205668	Decl							PCLETTO_CHR_HDR	PCLETTO_CHR_HDR	h
ANR	3205669	DeclStmt									
ANR	3205670	Decl							UW16	UW16	add_data
ANR	3205671	DeclStmt									
ANR	3205672	Decl							UW16	UW16	charDataSize
ANR	3205673	DeclStmt									
ANR	3205674	Decl							UW16	UW16	glyphID
ANR	3205675	DeclStmt									
ANR	3205676	Decl									PCLETTO_CHDR
ANR	3205677	ClassDef	fapi_ufst_server_s	161:0:3832:4301							
ANR	3205678	DeclStmt									
ANR	3205679	Decl							gs_fapi_server	gs_fapi_server	If
ANR	3205680	DeclStmt									
ANR	3205681	Decl							int	int	bInitialized
ANR	3205682	DeclStmt									
ANR	3205683	Decl							gs_fapi_font	gs_fapi_font *	ff
ANR	3205684	DeclStmt									
ANR	3205685	Decl							gs_memory_t	gs_memory_t *	mem
ANR	3205686	DeclStmt									
ANR	3205687	Decl							byte	byte *	param
ANR	3205688	DeclStmt									
ANR	3205689	Decl							int	int	param_size
ANR	3205690	DeclStmt									
ANR	3205691	Decl							IF_STATE	IF_STATE	IFS
ANR	3205692	DeclStmt									
ANR	3205693	Decl							FONTCONTEXT	FONTCONTEXT	fc
ANR	3205694	DeclStmt									
ANR	3205695	Decl							void	void *	char_data
ANR	3205696	DeclStmt									
ANR	3205697	Decl							bool	bool	bRaster
ANR	3205698	DeclStmt									
ANR	3205699	Decl							bool	bool	ufst_is_singleton
ANR	3205700	DeclStmt									
ANR	3205701	Decl							double	double	tran_xx
ANR	3205702	Decl							double	double	tran_xy
ANR	3205703	Decl							double	double	tran_yx
ANR	3205704	Decl							double	double	tran_yy
ANR	3205705	DeclStmt									
ANR	3205706	Decl							fco_list_elem	fco_list_elem *	fco_list
ANR	3205707	DeclStmt									
ANR	3205708	Decl							gs_fapi_retcode	gs_fapi_retcode	callback_error
ANR	3205709	DeclStmt									
ANR	3205710	Decl							gs_fapi_metrics_type	gs_fapi_metrics_type	metrics_type
ANR	3205711	DeclStmt									
ANR	3205712	Decl							fracint	fracint	sb_x
ANR	3205713	Decl							fracint	fracint	aw_x
ANR	3205714	DeclStmt									
ANR	3205715	Decl							void	void ( fapi_ufst_server * r )	gs_fapi_ufst_release_char_data_inline
ANR	3205716	DeclStmt									
ANR	3205717	Decl							void	"void ( fapi_ufst_server * r , ufst_common_font_data * d )"	release_glyphs
ANR	3205718	Function	If_to_I	186:0:4483:4583							
ANR	3205719	FunctionDef	If_to_I (gs_fapi_server * If)		3205718	0					
ANR	3205720	CompoundStatement		188:0:4545:4583	3205718	0					
ANR	3205721	ReturnStatement	return ( fapi_ufst_server * ) If ;	189:4:4551:4581	3205718	0	True				
ANR	3205722	CastExpression	( fapi_ufst_server * ) If		3205718	0					
ANR	3205723	CastTarget	fapi_ufst_server *		3205718	0					
ANR	3205724	Identifier	If		3205718	1					
ANR	3205725	ReturnType	static inline fapi_ufst_server *		3205718	1					
ANR	3205726	Identifier	If_to_I		3205718	2					
ANR	3205727	ParameterList	gs_fapi_server * If		3205718	3					
ANR	3205728	Parameter	gs_fapi_server * If	187:8:4524:4542	3205718	0	True				
ANR	3205729	ParameterType	gs_fapi_server *		3205718	0					
ANR	3205730	Identifier	If		3205718	1					
ANR	3205731	CFGEntryNode	ENTRY		3205718		True				
ANR	3205732	CFGExitNode	EXIT		3205718		True				
ANR	3205733	Symbol	If		3205718						
ANR	3205734	Function	IFS_to_I	192:0:4586:4763							
ANR	3205735	FunctionDef	IFS_to_I (IF_STATE * pIFS)		3205734	0					
ANR	3205736	CompoundStatement		194:0:4645:4763	3205734	0					
ANR	3205737	ReturnStatement	"return ( fapi_ufst_server * ) ( ( char * ) pIFS - offset_of ( fapi_ufst_server , IFS ) ) ;"	195:4:4651:4761	3205734	0	True				
ANR	3205738	CastExpression	"( fapi_ufst_server * ) ( ( char * ) pIFS - offset_of ( fapi_ufst_server , IFS ) )"		3205734	0					
ANR	3205739	CastTarget	fapi_ufst_server *		3205734	0					
ANR	3205740	AdditiveExpression	"( char * ) pIFS - offset_of ( fapi_ufst_server , IFS )"		3205734	1		-			
ANR	3205741	CastExpression	( char * ) pIFS		3205734	0					
ANR	3205742	CastTarget	char *		3205734	0					
ANR	3205743	Identifier	pIFS		3205734	1					
ANR	3205744	CallExpression	"offset_of ( fapi_ufst_server , IFS )"		3205734	1					
ANR	3205745	Callee	offset_of		3205734	0					
ANR	3205746	Identifier	offset_of		3205734	0					
ANR	3205747	ArgumentList	fapi_ufst_server		3205734	1					
ANR	3205748	Argument	fapi_ufst_server		3205734	0					
ANR	3205749	Identifier	fapi_ufst_server		3205734	0					
ANR	3205750	Argument	IFS		3205734	1					
ANR	3205751	Identifier	IFS		3205734	0					
ANR	3205752	ReturnType	static inline fapi_ufst_server *		3205734	1					
ANR	3205753	Identifier	IFS_to_I		3205734	2					
ANR	3205754	ParameterList	IF_STATE * pIFS		3205734	3					
ANR	3205755	Parameter	IF_STATE * pIFS	193:9:4628:4642	3205734	0	True				
ANR	3205756	ParameterType	IF_STATE *		3205734	0					
ANR	3205757	Identifier	pIFS		3205734	1					
ANR	3205758	CFGEntryNode	ENTRY		3205734		True				
ANR	3205759	CFGExitNode	EXIT		3205734		True				
ANR	3205760	Symbol	fapi_ufst_server		3205734						
ANR	3205761	Symbol	offset_of		3205734						
ANR	3205762	Symbol	pIFS		3205734						
ANR	3205763	Symbol	IFS		3205734						
ANR	3205764	Function	assign_font_id	200:0:4835:5252							
ANR	3205765	FunctionDef	assign_font_id ()		3205764	0					
ANR	3205766	CompoundStatement		202:0:4874:5252	3205764	0					
ANR	3205767	IfStatement	if ( ( -- font_ids ) <= ( 5 << 16 ) )		3205764	0					
ANR	3205768	Condition	( -- font_ids ) <= ( 5 << 16 )	206:8:4988:5012	3205764	0	True				
ANR	3205769	RelationalExpression	( -- font_ids ) <= ( 5 << 16 )		3205764	0		<=			
ANR	3205770	UnaryExpression	-- font_ids		3205764	0					
ANR	3205771	IncDec	--		3205764	0					
ANR	3205772	Identifier	font_ids		3205764	1					
ANR	3205773	ShiftExpression	5 << 16		3205764	1		<<			
ANR	3205774	PrimaryExpression	5		3205764	0					
ANR	3205775	PrimaryExpression	16		3205764	1					
ANR	3205776	CompoundStatement		5:35:140:140	3205764	1					
ANR	3205777	ExpressionStatement	font_ids = 0x7fffffff	211:8:5200:5221	3205764	0	True				
ANR	3205778	AssignmentExpression	font_ids = 0x7fffffff		3205764	0		=			
ANR	3205779	Identifier	font_ids		3205764	0					
ANR	3205780	PrimaryExpression	0x7fffffff		3205764	1					
ANR	3205781	ReturnStatement	return ( font_ids ) ;	213:4:5233:5250	3205764	1	True				
ANR	3205782	Identifier	font_ids		3205764	0					
ANR	3205783	ReturnType	static inline int		3205764	1					
ANR	3205784	Identifier	assign_font_id		3205764	2					
ANR	3205785	ParameterList			3205764	3					
ANR	3205786	CFGEntryNode	ENTRY		3205764		True				
ANR	3205787	CFGExitNode	EXIT		3205764		True				
ANR	3205788	Symbol	font_ids		3205764						
ANR	3205789	Function	gs_fapi_ufst_release_char_data_inline	218:0:5339:6615							
ANR	3205790	FunctionDef	gs_fapi_ufst_release_char_data_inline (fapi_ufst_server * r)		3205789	0					
ANR	3205791	CompoundStatement		220:0:5418:6615	3205789	0					
ANR	3205792	IfStatement	if ( r -> char_data != NULL )		3205789	0					
ANR	3205793	Condition	r -> char_data != NULL	231:8:6485:6504	3205789	0	True				
ANR	3205794	EqualityExpression	r -> char_data != NULL		3205789	0		!=			
ANR	3205795	PtrMemberAccess	r -> char_data		3205789	0					
ANR	3205796	Identifier	r		3205789	0					
ANR	3205797	Identifier	char_data		3205789	1					
ANR	3205798	Identifier	NULL		3205789	1					
ANR	3205799	CompoundStatement		12:30:1088:1088	3205789	1					
ANR	3205800	ExpressionStatement	FSA_FROM_SERVER	232:8:6517:6532	3205789	0	True				
ANR	3205801	Identifier	FSA_FROM_SERVER		3205789	0					
ANR	3205802	Statement	CHARfree	234:8:6543:6550	3205789	1	True				
ANR	3205803	Statement	(	234:16:6551:6551	3205789	2	True				
ANR	3205804	Statement	FSA	234:17:6552:6554	3205789	3	True				
ANR	3205805	Statement	(	234:20:6555:6555	3205789	4	True				
ANR	3205806	Statement	MEM_HANDLE	234:21:6556:6565	3205789	5	True				
ANR	3205807	Statement	)	234:31:6566:6566	3205789	6	True				
ANR	3205808	Statement	r	234:33:6568:6568	3205789	7	True				
ANR	3205809	Statement	->	234:34:6569:6570	3205789	8	True				
ANR	3205810	Statement	char_data	234:36:6571:6579	3205789	9	True				
ANR	3205811	Statement	)	234:45:6580:6580	3205789	10	True				
ANR	3205812	ExpressionStatement		234:46:6581:6581	3205789	11	True				
ANR	3205813	ExpressionStatement	r -> char_data = 0	235:8:6591:6607	3205789	12	True				
ANR	3205814	AssignmentExpression	r -> char_data = 0		3205789	0		=			
ANR	3205815	PtrMemberAccess	r -> char_data		3205789	0					
ANR	3205816	Identifier	r		3205789	0					
ANR	3205817	Identifier	char_data		3205789	1					
ANR	3205818	PrimaryExpression	0		3205789	1					
ANR	3205819	ReturnType	static inline void		3205789	1					
ANR	3205820	Identifier	gs_fapi_ufst_release_char_data_inline		3205789	2					
ANR	3205821	ParameterList	fapi_ufst_server * r		3205789	3					
ANR	3205822	Parameter	fapi_ufst_server * r	219:38:5396:5415	3205789	0	True				
ANR	3205823	ParameterType	fapi_ufst_server *		3205789	0					
ANR	3205824	Identifier	r		3205789	1					
ANR	3205825	CFGEntryNode	ENTRY		3205789		True				
ANR	3205826	CFGExitNode	EXIT		3205789		True				
ANR	3205827	Symbol	r		3205789						
ANR	3205828	Symbol	NULL		3205789						
ANR	3205829	Symbol	* r		3205789						
ANR	3205830	Symbol	r -> char_data		3205789						
ANR	3205831	Function	open_UFST	247:0:7044:9810							
ANR	3205832	FunctionDef	"open_UFST (fapi_ufst_server * r , const byte * server_param , int server_param_size)"		3205831	0					
ANR	3205833	CompoundStatement		250:0:7159:9810	3205831	0					
ANR	3205834	IdentifierDeclStatement	int code ;	251:4:7165:7173	3205831	0	True				
ANR	3205835	IdentifierDecl	code		3205831	0					
ANR	3205836	IdentifierDeclType	int		3205831	0					
ANR	3205837	Identifier	code		3205831	1					
ANR	3205838	IdentifierDeclStatement	SW16 fcHandle ;	252:4:7179:7192	3205831	1	True				
ANR	3205839	IdentifierDecl	fcHandle		3205831	0					
ANR	3205840	IdentifierDeclType	SW16		3205831	0					
ANR	3205841	Identifier	fcHandle		3205831	1					
ANR	3205842	IdentifierDeclStatement	int l ;	253:4:7198:7203	3205831	2	True				
ANR	3205843	IdentifierDecl	l		3205831	0					
ANR	3205844	IdentifierDeclType	int		3205831	0					
ANR	3205845	Identifier	l		3205831	1					
ANR	3205846	IdentifierDeclStatement	"char ufst_root_dir [ 1024 ] = """" ;"	254:4:7209:7238	3205831	3	True				
ANR	3205847	IdentifierDecl	"ufst_root_dir [ 1024 ] = """""		3205831	0					
ANR	3205848	IdentifierDeclType	char [ 1024 ]		3205831	0					
ANR	3205849	Identifier	ufst_root_dir		3205831	1					
ANR	3205850	PrimaryExpression	1024		3205831	2					
ANR	3205851	AssignmentExpression	"ufst_root_dir [ 1024 ] = """""		3205831	3		=			
ANR	3205852	Identifier	ufst_root_dir		3205831	0					
ANR	3205853	PrimaryExpression	""""""		3205831	1					
ANR	3205854	IdentifierDeclStatement	"char sPlugIn [ 1024 ] = """" ;"	255:4:7244:7267	3205831	4	True				
ANR	3205855	IdentifierDecl	"sPlugIn [ 1024 ] = """""		3205831	0					
ANR	3205856	IdentifierDeclType	char [ 1024 ]		3205831	0					
ANR	3205857	Identifier	sPlugIn		3205831	1					
ANR	3205858	PrimaryExpression	1024		3205831	2					
ANR	3205859	AssignmentExpression	"sPlugIn [ 1024 ] = """""		3205831	3		=			
ANR	3205860	Identifier	sPlugIn		3205831	0					
ANR	3205861	PrimaryExpression	""""""		3205831	1					
ANR	3205862	IdentifierDeclStatement	bool bSSdir = FALSE ;	257:4:7296:7315	3205831	5	True				
ANR	3205863	IdentifierDecl	bSSdir = FALSE		3205831	0					
ANR	3205864	IdentifierDeclType	bool		3205831	0					
ANR	3205865	Identifier	bSSdir		3205831	1					
ANR	3205866	AssignmentExpression	bSSdir = FALSE		3205831	2		=			
ANR	3205867	Identifier	FALSE		3205831	0					
ANR	3205868	Identifier	FALSE		3205831	1					
ANR	3205869	IdentifierDeclStatement	bool bPlugIn = FALSE ;	259:4:7328:7348	3205831	6	True				
ANR	3205870	IdentifierDecl	bPlugIn = FALSE		3205831	0					
ANR	3205871	IdentifierDeclType	bool		3205831	0					
ANR	3205872	Identifier	bPlugIn		3205831	1					
ANR	3205873	AssignmentExpression	bPlugIn = FALSE		3205831	2		=			
ANR	3205874	Identifier	FALSE		3205831	0					
ANR	3205875	Identifier	FALSE		3205831	1					
ANR	3205876	IdentifierDeclStatement	"const char * keySSdir = ""UFST_SSdir="" ;"	260:4:7354:7390	3205831	7	True				
ANR	3205877	IdentifierDecl	"* keySSdir = ""UFST_SSdir="""		3205831	0					
ANR	3205878	IdentifierDeclType	const char *		3205831	0					
ANR	3205879	Identifier	keySSdir		3205831	1					
ANR	3205880	AssignmentExpression	"* keySSdir = ""UFST_SSdir="""		3205831	2		=			
ANR	3205881	Identifier	keySSdir		3205831	0					
ANR	3205882	PrimaryExpression	"""UFST_SSdir="""		3205831	1					
ANR	3205883	IdentifierDeclStatement	const int keySSdir_length = strlen ( keySSdir ) ;	261:4:7396:7440	3205831	8	True				
ANR	3205884	IdentifierDecl	keySSdir_length = strlen ( keySSdir )		3205831	0					
ANR	3205885	IdentifierDeclType	const int		3205831	0					
ANR	3205886	Identifier	keySSdir_length		3205831	1					
ANR	3205887	AssignmentExpression	keySSdir_length = strlen ( keySSdir )		3205831	2		=			
ANR	3205888	Identifier	keySSdir_length		3205831	0					
ANR	3205889	CallExpression	strlen ( keySSdir )		3205831	1					
ANR	3205890	Callee	strlen		3205831	0					
ANR	3205891	Identifier	strlen		3205831	0					
ANR	3205892	ArgumentList	keySSdir		3205831	1					
ANR	3205893	Argument	keySSdir		3205831	0					
ANR	3205894	Identifier	keySSdir		3205831	0					
ANR	3205895	IdentifierDeclStatement	"const char * keyPlugIn = ""UFST_PlugIn="" ;"	262:4:7446:7484	3205831	9	True				
ANR	3205896	IdentifierDecl	"* keyPlugIn = ""UFST_PlugIn="""		3205831	0					
ANR	3205897	IdentifierDeclType	const char *		3205831	0					
ANR	3205898	Identifier	keyPlugIn		3205831	1					
ANR	3205899	AssignmentExpression	"* keyPlugIn = ""UFST_PlugIn="""		3205831	2		=			
ANR	3205900	Identifier	keyPlugIn		3205831	0					
ANR	3205901	PrimaryExpression	"""UFST_PlugIn="""		3205831	1					
ANR	3205902	IdentifierDeclStatement	const int keyPlugIn_length = strlen ( keyPlugIn ) ;	263:4:7490:7536	3205831	10	True				
ANR	3205903	IdentifierDecl	keyPlugIn_length = strlen ( keyPlugIn )		3205831	0					
ANR	3205904	IdentifierDeclType	const int		3205831	0					
ANR	3205905	Identifier	keyPlugIn_length		3205831	1					
ANR	3205906	AssignmentExpression	keyPlugIn_length = strlen ( keyPlugIn )		3205831	2		=			
ANR	3205907	Identifier	keyPlugIn_length		3205831	0					
ANR	3205908	CallExpression	strlen ( keyPlugIn )		3205831	1					
ANR	3205909	Callee	strlen		3205831	0					
ANR	3205910	Identifier	strlen		3205831	0					
ANR	3205911	ArgumentList	keyPlugIn		3205831	1					
ANR	3205912	Argument	keyPlugIn		3205831	0					
ANR	3205913	Identifier	keyPlugIn		3205831	0					
ANR	3205914	IdentifierDeclStatement	const char sep = gp_file_name_list_separator ;	264:4:7542:7586	3205831	11	True				
ANR	3205915	IdentifierDecl	sep = gp_file_name_list_separator		3205831	0					
ANR	3205916	IdentifierDeclType	const char		3205831	0					
ANR	3205917	Identifier	sep		3205831	1					
ANR	3205918	AssignmentExpression	sep = gp_file_name_list_separator		3205831	2		=			
ANR	3205919	Identifier	gp_file_name_list_separator		3205831	0					
ANR	3205920	Identifier	gp_file_name_list_separator		3205831	1					
ANR	3205921	IdentifierDeclStatement	"const byte * p = server_param , * e = server_param + server_param_size , * q ;"	265:4:7592:7663	3205831	12	True				
ANR	3205922	IdentifierDecl	* p = server_param		3205831	0					
ANR	3205923	IdentifierDeclType	const byte *		3205831	0					
ANR	3205924	Identifier	p		3205831	1					
ANR	3205925	AssignmentExpression	* p = server_param		3205831	2		=			
ANR	3205926	Identifier	server_param		3205831	0					
ANR	3205927	Identifier	server_param		3205831	1					
ANR	3205928	IdentifierDecl	* e = server_param + server_param_size		3205831	1					
ANR	3205929	IdentifierDeclType	const byte *		3205831	0					
ANR	3205930	Identifier	e		3205831	1					
ANR	3205931	AssignmentExpression	* e = server_param + server_param_size		3205831	2		=			
ANR	3205932	Identifier	e		3205831	0					
ANR	3205933	AdditiveExpression	server_param + server_param_size		3205831	1		+			
ANR	3205934	Identifier	server_param		3205831	0					
ANR	3205935	Identifier	server_param_size		3205831	1					
ANR	3205936	IdentifierDecl	* q		3205831	2					
ANR	3205937	IdentifierDeclType	const byte *		3205831	0					
ANR	3205938	Identifier	q		3205831	1					
ANR	3205939	ExpressionStatement	FSA_FROM_SERVER	267:4:7670:7685	3205831	13	True				
ANR	3205940	Identifier	FSA_FROM_SERVER		3205831	0					
ANR	3205941	IfStatement	if ( server_param_size > 0 && server_param )		3205831	14					
ANR	3205942	Condition	server_param_size > 0 && server_param	269:8:7696:7732	3205831	0	True				
ANR	3205943	AndExpression	server_param_size > 0 && server_param		3205831	0		&&			
ANR	3205944	RelationalExpression	server_param_size > 0		3205831	0		>			
ANR	3205945	Identifier	server_param_size		3205831	0					
ANR	3205946	PrimaryExpression	0		3205831	1					
ANR	3205947	Identifier	server_param		3205831	1					
ANR	3205948	CompoundStatement		20:47:575:575	3205831	1					
ANR	3205949	ExpressionStatement	"r -> param = ( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"	270:8:7745:7833	3205831	0	True				
ANR	3205950	AssignmentExpression	"r -> param = ( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		3205831	0		=			
ANR	3205951	PtrMemberAccess	r -> param		3205831	0					
ANR	3205952	Identifier	r		3205831	0					
ANR	3205953	Identifier	param		3205831	1					
ANR	3205954	CastExpression	"( byte * ) gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		3205831	1					
ANR	3205955	CastTarget	byte *		3205831	0					
ANR	3205956	CallExpression	"gs_malloc ( r -> mem , server_param_size , 1 , ""server_params"" )"		3205831	1					
ANR	3205957	Callee	gs_malloc		3205831	0					
ANR	3205958	Identifier	gs_malloc		3205831	0					
ANR	3205959	ArgumentList	r -> mem		3205831	1					
ANR	3205960	Argument	r -> mem		3205831	0					
ANR	3205961	PtrMemberAccess	r -> mem		3205831	0					
ANR	3205962	Identifier	r		3205831	0					
ANR	3205963	Identifier	mem		3205831	1					
ANR	3205964	Argument	server_param_size		3205831	1					
ANR	3205965	Identifier	server_param_size		3205831	0					
ANR	3205966	Argument	1		3205831	2					
ANR	3205967	PrimaryExpression	1		3205831	0					
ANR	3205968	Argument	"""server_params"""		3205831	3					
ANR	3205969	PrimaryExpression	"""server_params"""		3205831	0					
ANR	3205970	IfStatement	if ( ! r -> param )		3205831	1					
ANR	3205971	Condition	! r -> param	272:12:7847:7855	3205831	0	True				
ANR	3205972	UnaryOperationExpression	! r -> param		3205831	0					
ANR	3205973	UnaryOperator	!		3205831	0					
ANR	3205974	PtrMemberAccess	r -> param		3205831	1					
ANR	3205975	Identifier	r		3205831	0					
ANR	3205976	Identifier	param		3205831	1					
ANR	3205977	CompoundStatement		23:23:698:698	3205831	1					
ANR	3205978	ExpressionStatement	return_error ( gs_error_VMerror )	273:12:7872:7902	3205831	0	True				
ANR	3205979	CallExpression	return_error ( gs_error_VMerror )		3205831	0					
ANR	3205980	Callee	return_error		3205831	0					
ANR	3205981	Identifier	return_error		3205831	0					
ANR	3205982	ArgumentList	gs_error_VMerror		3205831	1					
ANR	3205983	Argument	gs_error_VMerror		3205831	0					
ANR	3205984	Identifier	gs_error_VMerror		3205831	0					
ANR	3205985	ExpressionStatement	"memcpy ( r -> param , server_param , server_param_size )"	275:8:7922:7971	3205831	2	True				
ANR	3205986	CallExpression	"memcpy ( r -> param , server_param , server_param_size )"		3205831	0					
ANR	3205987	Callee	memcpy		3205831	0					
ANR	3205988	Identifier	memcpy		3205831	0					
ANR	3205989	ArgumentList	r -> param		3205831	1					
ANR	3205990	Argument	r -> param		3205831	0					
ANR	3205991	PtrMemberAccess	r -> param		3205831	0					
ANR	3205992	Identifier	r		3205831	0					
ANR	3205993	Identifier	param		3205831	1					
ANR	3205994	Argument	server_param		3205831	1					
ANR	3205995	Identifier	server_param		3205831	0					
ANR	3205996	Argument	server_param_size		3205831	2					
ANR	3205997	Identifier	server_param_size		3205831	0					
ANR	3205998	ExpressionStatement	r -> param_size = server_param_size	276:8:7981:8014	3205831	3	True				
ANR	3205999	AssignmentExpression	r -> param_size = server_param_size		3205831	0		=			
ANR	3206000	PtrMemberAccess	r -> param_size		3205831	0					
ANR	3206001	Identifier	r		3205831	0					
ANR	3206002	Identifier	param_size		3205831	1					
ANR	3206003	Identifier	server_param_size		3205831	1					
ANR	3206004	ForStatement	for ( ; p < e ; p = q + 1 )		3205831	15					
ANR	3206005	Condition	p < e	279:11:8034:8038	3205831	0	True				
ANR	3206006	RelationalExpression	p < e		3205831	0		<			
ANR	3206007	Identifier	p		3205831	0					
ANR	3206008	Identifier	e		3205831	1					
ANR	3206009	AssignmentExpression	p = q + 1	279:18:8041:8049	3205831	1	True	=			
ANR	3206010	Identifier	p		3205831	0					
ANR	3206011	AdditiveExpression	q + 1		3205831	1		+			
ANR	3206012	Identifier	q		3205831	0					
ANR	3206013	PrimaryExpression	1		3205831	1					
ANR	3206014	CompoundStatement		30:29:892:892	3205831	2					
ANR	3206015	ForStatement	for ( q = p ; q < e && * q != sep ; q ++ )		3205831	0					
ANR	3206016	ForInit	q = p ;	280:13:8067:8072	3205831	0	True				
ANR	3206017	AssignmentExpression	q = p		3205831	0		=			
ANR	3206018	Identifier	q		3205831	0					
ANR	3206019	Identifier	p		3205831	1					
ANR	3206020	Condition	q < e && * q != sep	280:20:8074:8091	3205831	1	True				
ANR	3206021	AndExpression	q < e && * q != sep		3205831	0		&&			
ANR	3206022	RelationalExpression	q < e		3205831	0		<			
ANR	3206023	Identifier	q		3205831	0					
ANR	3206024	Identifier	e		3205831	1					
ANR	3206025	EqualityExpression	* q != sep		3205831	1		!=			
ANR	3206026	UnaryOperationExpression	* q		3205831	0					
ANR	3206027	UnaryOperator	*		3205831	0					
ANR	3206028	Identifier	q		3205831	1					
ANR	3206029	Identifier	sep		3205831	1					
ANR	3206030	PostIncDecOperationExpression	q ++	280:40:8094:8096	3205831	2	True				
ANR	3206031	Identifier	q		3205831	0					
ANR	3206032	IncDec	++		3205831	1					
ANR	3206033	ExpressionStatement		281:29:8128:8128	3205831	3	True				
ANR	3206034	ExpressionStatement	l = q - p	282:8:8138:8147	3205831	1	True				
ANR	3206035	AssignmentExpression	l = q - p		3205831	0		=			
ANR	3206036	Identifier	l		3205831	0					
ANR	3206037	AdditiveExpression	q - p		3205831	1		-			
ANR	3206038	Identifier	q		3205831	0					
ANR	3206039	Identifier	p		3205831	1					
ANR	3206040	IfStatement	"if ( l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length ) )"		3205831	2					
ANR	3206041	Condition	"l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length )"	283:12:8161:8220	3205831	0	True				
ANR	3206042	AndExpression	"l > keySSdir_length && ! memcmp ( p , keySSdir , keySSdir_length )"		3205831	0		&&			
ANR	3206043	RelationalExpression	l > keySSdir_length		3205831	0		>			
ANR	3206044	Identifier	l		3205831	0					
ANR	3206045	Identifier	keySSdir_length		3205831	1					
ANR	3206046	UnaryOperationExpression	"! memcmp ( p , keySSdir , keySSdir_length )"		3205831	1					
ANR	3206047	UnaryOperator	!		3205831	0					
ANR	3206048	CallExpression	"memcmp ( p , keySSdir , keySSdir_length )"		3205831	1					
ANR	3206049	Callee	memcmp		3205831	0					
ANR	3206050	Identifier	memcmp		3205831	0					
ANR	3206051	ArgumentList	p		3205831	1					
ANR	3206052	Argument	p		3205831	0					
ANR	3206053	Identifier	p		3205831	0					
ANR	3206054	Argument	keySSdir		3205831	1					
ANR	3206055	Identifier	keySSdir		3205831	0					
ANR	3206056	Argument	keySSdir_length		3205831	2					
ANR	3206057	Identifier	keySSdir_length		3205831	0					
ANR	3206058	CompoundStatement		34:74:1063:1063	3205831	1					
ANR	3206059	ExpressionStatement	l = q - p - keySSdir_length	284:12:8237:8264	3205831	0	True				
ANR	3206060	AssignmentExpression	l = q - p - keySSdir_length		3205831	0		=			
ANR	3206061	Identifier	l		3205831	0					
ANR	3206062	AdditiveExpression	q - p - keySSdir_length		3205831	1		-			
ANR	3206063	Identifier	q		3205831	0					
ANR	3206064	AdditiveExpression	p - keySSdir_length		3205831	1		-			
ANR	3206065	Identifier	p		3205831	0					
ANR	3206066	Identifier	keySSdir_length		3205831	1					
ANR	3206067	IfStatement	if ( l > sizeof ( ufst_root_dir ) - 1 )		3205831	1					
ANR	3206068	Condition	l > sizeof ( ufst_root_dir ) - 1	285:16:8282:8310	3205831	0	True				
ANR	3206069	RelationalExpression	l > sizeof ( ufst_root_dir ) - 1		3205831	0		>			
ANR	3206070	Identifier	l		3205831	0					
ANR	3206071	AdditiveExpression	sizeof ( ufst_root_dir ) - 1		3205831	1		-			
ANR	3206072	SizeofExpression	sizeof ( ufst_root_dir )		3205831	0					
ANR	3206073	Sizeof	sizeof		3205831	0					
ANR	3206074	SizeofOperand	ufst_root_dir		3205831	1					
ANR	3206075	PrimaryExpression	1		3205831	1					
ANR	3206076	ExpressionStatement	l = sizeof ( ufst_root_dir ) - 1	286:16:8329:8358	3205831	1	True				
ANR	3206077	AssignmentExpression	l = sizeof ( ufst_root_dir ) - 1		3205831	0		=			
ANR	3206078	Identifier	l		3205831	0					
ANR	3206079	AdditiveExpression	sizeof ( ufst_root_dir ) - 1		3205831	1		-			
ANR	3206080	SizeofExpression	sizeof ( ufst_root_dir )		3205831	0					
ANR	3206081	Sizeof	sizeof		3205831	0					
ANR	3206082	SizeofOperand	ufst_root_dir		3205831	1					
ANR	3206083	PrimaryExpression	1		3205831	1					
ANR	3206084	ExpressionStatement	"memcpy ( ufst_root_dir , p + keySSdir_length , l )"	287:12:8372:8417	3205831	2	True				
ANR	3206085	CallExpression	"memcpy ( ufst_root_dir , p + keySSdir_length , l )"		3205831	0					
ANR	3206086	Callee	memcpy		3205831	0					
ANR	3206087	Identifier	memcpy		3205831	0					
ANR	3206088	ArgumentList	ufst_root_dir		3205831	1					
ANR	3206089	Argument	ufst_root_dir		3205831	0					
ANR	3206090	Identifier	ufst_root_dir		3205831	0					
ANR	3206091	Argument	p + keySSdir_length		3205831	1					
ANR	3206092	AdditiveExpression	p + keySSdir_length		3205831	0		+			
ANR	3206093	Identifier	p		3205831	0					
ANR	3206094	Identifier	keySSdir_length		3205831	1					
ANR	3206095	Argument	l		3205831	2					
ANR	3206096	Identifier	l		3205831	0					
ANR	3206097	ExpressionStatement	ufst_root_dir [ l ] = 0	288:12:8431:8451	3205831	3	True				
ANR	3206098	AssignmentExpression	ufst_root_dir [ l ] = 0		3205831	0		=			
ANR	3206099	ArrayIndexing	ufst_root_dir [ l ]		3205831	0					
ANR	3206100	Identifier	ufst_root_dir		3205831	0					
ANR	3206101	Identifier	l		3205831	1					
ANR	3206102	PrimaryExpression	0		3205831	1					
ANR	3206103	ExpressionStatement	bSSdir = TRUE	290:12:8488:8501	3205831	4	True				
ANR	3206104	AssignmentExpression	bSSdir = TRUE		3205831	0		=			
ANR	3206105	Identifier	bSSdir		3205831	0					
ANR	3206106	Identifier	TRUE		3205831	1					
ANR	3206107	ElseStatement	else		3205831	0					
ANR	3206108	IfStatement	"if ( l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length ) )"		3205831	0					
ANR	3206109	Condition	"l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length )"	293:17:8537:8616	3205831	0	True				
ANR	3206110	AndExpression	"l > keyPlugIn_length && ! memcmp ( p , keyPlugIn , keyPlugIn_length )"		3205831	0		&&			
ANR	3206111	RelationalExpression	l > keyPlugIn_length		3205831	0		>			
ANR	3206112	Identifier	l		3205831	0					
ANR	3206113	Identifier	keyPlugIn_length		3205831	1					
ANR	3206114	UnaryOperationExpression	"! memcmp ( p , keyPlugIn , keyPlugIn_length )"		3205831	1					
ANR	3206115	UnaryOperator	!		3205831	0					
ANR	3206116	CallExpression	"memcmp ( p , keyPlugIn , keyPlugIn_length )"		3205831	1					
ANR	3206117	Callee	memcmp		3205831	0					
ANR	3206118	Identifier	memcmp		3205831	0					
ANR	3206119	ArgumentList	p		3205831	1					
ANR	3206120	Argument	p		3205831	0					
ANR	3206121	Identifier	p		3205831	0					
ANR	3206122	Argument	keyPlugIn		3205831	1					
ANR	3206123	Identifier	keyPlugIn		3205831	0					
ANR	3206124	Argument	keyPlugIn_length		3205831	2					
ANR	3206125	Identifier	keyPlugIn_length		3205831	0					
ANR	3206126	CompoundStatement		45:61:1459:1459	3205831	1					
ANR	3206127	ExpressionStatement	l = q - p - keyPlugIn_length	295:12:8633:8661	3205831	0	True				
ANR	3206128	AssignmentExpression	l = q - p - keyPlugIn_length		3205831	0		=			
ANR	3206129	Identifier	l		3205831	0					
ANR	3206130	AdditiveExpression	q - p - keyPlugIn_length		3205831	1		-			
ANR	3206131	Identifier	q		3205831	0					
ANR	3206132	AdditiveExpression	p - keyPlugIn_length		3205831	1		-			
ANR	3206133	Identifier	p		3205831	0					
ANR	3206134	Identifier	keyPlugIn_length		3205831	1					
ANR	3206135	IfStatement	if ( l > sizeof ( sPlugIn ) - 1 )		3205831	1					
ANR	3206136	Condition	l > sizeof ( sPlugIn ) - 1	296:16:8679:8701	3205831	0	True				
ANR	3206137	RelationalExpression	l > sizeof ( sPlugIn ) - 1		3205831	0		>			
ANR	3206138	Identifier	l		3205831	0					
ANR	3206139	AdditiveExpression	sizeof ( sPlugIn ) - 1		3205831	1		-			
ANR	3206140	SizeofExpression	sizeof ( sPlugIn )		3205831	0					
ANR	3206141	Sizeof	sizeof		3205831	0					
ANR	3206142	SizeofOperand	sPlugIn		3205831	1					
ANR	3206143	PrimaryExpression	1		3205831	1					
ANR	3206144	ExpressionStatement	l = sizeof ( sPlugIn ) - 1	297:16:8720:8743	3205831	1	True				
ANR	3206145	AssignmentExpression	l = sizeof ( sPlugIn ) - 1		3205831	0		=			
ANR	3206146	Identifier	l		3205831	0					
ANR	3206147	AdditiveExpression	sizeof ( sPlugIn ) - 1		3205831	1		-			
ANR	3206148	SizeofExpression	sizeof ( sPlugIn )		3205831	0					
ANR	3206149	Sizeof	sizeof		3205831	0					
ANR	3206150	SizeofOperand	sPlugIn		3205831	1					
ANR	3206151	PrimaryExpression	1		3205831	1					
ANR	3206152	ExpressionStatement	"memcpy ( sPlugIn , p + keyPlugIn_length , l )"	298:12:8757:8797	3205831	2	True				
ANR	3206153	CallExpression	"memcpy ( sPlugIn , p + keyPlugIn_length , l )"		3205831	0					
ANR	3206154	Callee	memcpy		3205831	0					
ANR	3206155	Identifier	memcpy		3205831	0					
ANR	3206156	ArgumentList	sPlugIn		3205831	1					
ANR	3206157	Argument	sPlugIn		3205831	0					
ANR	3206158	Identifier	sPlugIn		3205831	0					
ANR	3206159	Argument	p + keyPlugIn_length		3205831	1					
ANR	3206160	AdditiveExpression	p + keyPlugIn_length		3205831	0		+			
ANR	3206161	Identifier	p		3205831	0					
ANR	3206162	Identifier	keyPlugIn_length		3205831	1					
ANR	3206163	Argument	l		3205831	2					
ANR	3206164	Identifier	l		3205831	0					
ANR	3206165	ExpressionStatement	sPlugIn [ l ] = 0	299:12:8811:8825	3205831	3	True				
ANR	3206166	AssignmentExpression	sPlugIn [ l ] = 0		3205831	0		=			
ANR	3206167	ArrayIndexing	sPlugIn [ l ]		3205831	0					
ANR	3206168	Identifier	sPlugIn		3205831	0					
ANR	3206169	Identifier	l		3205831	1					
ANR	3206170	PrimaryExpression	0		3205831	1					
ANR	3206171	ExpressionStatement	bPlugIn = TRUE	300:12:8839:8853	3205831	4	True				
ANR	3206172	AssignmentExpression	bPlugIn = TRUE		3205831	0		=			
ANR	3206173	Identifier	bPlugIn		3205831	0					
ANR	3206174	Identifier	TRUE		3205831	1					
ANR	3206175	ElseStatement	else		3205831	0					
ANR	3206176	IfStatement	if ( gs_debug_c ( '1' ) )		3205831	0					
ANR	3206177	Condition	gs_debug_c ( '1' )	302:17:8882:8896	3205831	0	True				
ANR	3206178	CallExpression	gs_debug_c ( '1' )		3205831	0					
ANR	3206179	Callee	gs_debug_c		3205831	0					
ANR	3206180	Identifier	gs_debug_c		3205831	0					
ANR	3206181	ArgumentList	'1'		3205831	1					
ANR	3206182	Argument	'1'		3205831	0					
ANR	3206183	PrimaryExpression	'1'		3205831	0					
ANR	3206184	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: Unknown UFST parameter ignored.\\n"" )"	303:12:8911:8978	3205831	1	True				
ANR	3206185	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: Unknown UFST parameter ignored.\\n"" )"		3205831	0					
ANR	3206186	Callee	ufst_emprintf		3205831	0					
ANR	3206187	Identifier	ufst_emprintf		3205831	0					
ANR	3206188	ArgumentList	r -> mem		3205831	1					
ANR	3206189	Argument	r -> mem		3205831	0					
ANR	3206190	PtrMemberAccess	r -> mem		3205831	0					
ANR	3206191	Identifier	r		3205831	0					
ANR	3206192	Identifier	mem		3205831	1					
ANR	3206193	Argument	"""Warning: Unknown UFST parameter ignored.\\n"""		3205831	1					
ANR	3206194	PrimaryExpression	"""Warning: Unknown UFST parameter ignored.\\n"""		3205831	0					
ANR	3206195	IfStatement	if ( ! bSSdir )		3205831	16					
ANR	3206196	Condition	! bSSdir	306:8:9017:9023	3205831	0	True				
ANR	3206197	UnaryOperationExpression	! bSSdir		3205831	0					
ANR	3206198	UnaryOperator	!		3205831	0					
ANR	3206199	Identifier	bSSdir		3205831	1					
ANR	3206200	CompoundStatement		57:17:1866:1866	3205831	1					
ANR	3206201	ExpressionStatement	"strcpy ( ufst_root_dir , ""."" )"	307:8:9036:9062	3205831	0	True				
ANR	3206202	CallExpression	"strcpy ( ufst_root_dir , ""."" )"		3205831	0					
ANR	3206203	Callee	strcpy		3205831	0					
ANR	3206204	Identifier	strcpy		3205831	0					
ANR	3206205	ArgumentList	ufst_root_dir		3205831	1					
ANR	3206206	Argument	ufst_root_dir		3205831	0					
ANR	3206207	Identifier	ufst_root_dir		3205831	0					
ANR	3206208	Argument	"""."""		3205831	1					
ANR	3206209	PrimaryExpression	"""."""		3205831	0					
ANR	3206210	IfStatement	if ( gs_debug_c ( '1' ) )		3205831	1					
ANR	3206211	Condition	gs_debug_c ( '1' )	308:12:9076:9090	3205831	0	True				
ANR	3206212	CallExpression	gs_debug_c ( '1' )		3205831	0					
ANR	3206213	Callee	gs_debug_c		3205831	0					
ANR	3206214	Identifier	gs_debug_c		3205831	0					
ANR	3206215	ArgumentList	'1'		3205831	1					
ANR	3206216	Argument	'1'		3205831	0					
ANR	3206217	PrimaryExpression	'1'		3205831	0					
ANR	3206218	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"" )"	309:12:9105:9238	3205831	1	True				
ANR	3206219	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"" )"		3205831	0					
ANR	3206220	Callee	ufst_emprintf		3205831	0					
ANR	3206221	Identifier	ufst_emprintf		3205831	0					
ANR	3206222	ArgumentList	r -> mem		3205831	1					
ANR	3206223	Argument	r -> mem		3205831	0					
ANR	3206224	PtrMemberAccess	r -> mem		3205831	0					
ANR	3206225	Identifier	r		3205831	0					
ANR	3206226	Identifier	mem		3205831	1					
ANR	3206227	Argument	"""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"""		3205831	1					
ANR	3206228	PrimaryExpression	"""Warning: UFST_SSdir is not specified, will search *.ss files in the curent directory.\\n"""		3205831	0					
ANR	3206229	ExpressionStatement	"code = gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"	313:4:9257:9312	3205831	17	True				
ANR	3206230	AssignmentExpression	"code = gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"		3205831	0		=			
ANR	3206231	Identifier	code		3205831	0					
ANR	3206232	CallExpression	"gx_UFST_init ( r -> mem , ( const UB8 * ) ufst_root_dir )"		3205831	1					
ANR	3206233	Callee	gx_UFST_init		3205831	0					
ANR	3206234	Identifier	gx_UFST_init		3205831	0					
ANR	3206235	ArgumentList	r -> mem		3205831	1					
ANR	3206236	Argument	r -> mem		3205831	0					
ANR	3206237	PtrMemberAccess	r -> mem		3205831	0					
ANR	3206238	Identifier	r		3205831	0					
ANR	3206239	Identifier	mem		3205831	1					
ANR	3206240	Argument	( const UB8 * ) ufst_root_dir		3205831	1					
ANR	3206241	CastExpression	( const UB8 * ) ufst_root_dir		3205831	0					
ANR	3206242	CastTarget	const UB8 *		3205831	0					
ANR	3206243	Identifier	ufst_root_dir		3205831	1					
ANR	3206244	IfStatement	if ( code < 0 )		3205831	18					
ANR	3206245	Condition	code < 0	314:8:9322:9329	3205831	0	True				
ANR	3206246	RelationalExpression	code < 0		3205831	0		<			
ANR	3206247	Identifier	code		3205831	0					
ANR	3206248	PrimaryExpression	0		3205831	1					
ANR	3206249	ReturnStatement	return code ;	315:8:9340:9351	3205831	1	True				
ANR	3206250	Identifier	code		3205831	0					
ANR	3206251	ExpressionStatement	r -> ufst_is_singleton = ( code == 1 )	316:4:9357:9391	3205831	19	True				
ANR	3206252	AssignmentExpression	r -> ufst_is_singleton = ( code == 1 )		3205831	0		=			
ANR	3206253	PtrMemberAccess	r -> ufst_is_singleton		3205831	0					
ANR	3206254	Identifier	r		3205831	0					
ANR	3206255	Identifier	ufst_is_singleton		3205831	1					
ANR	3206256	EqualityExpression	code == 1		3205831	1		==			
ANR	3206257	Identifier	code		3205831	0					
ANR	3206258	PrimaryExpression	1		3205831	1					
ANR	3206259	Statement	CGIFfont_access	317:4:9397:9411	3205831	20	True				
ANR	3206260	Statement	(	317:19:9412:9412	3205831	21	True				
ANR	3206261	Statement	FSA	317:20:9413:9415	3205831	22	True				
ANR	3206262	Statement	DISK_ACCESS	317:24:9417:9427	3205831	23	True				
ANR	3206263	Statement	)	317:35:9428:9428	3205831	24	True				
ANR	3206264	ExpressionStatement		317:36:9429:9429	3205831	25	True				
ANR	3206265	IfStatement	if ( bPlugIn )		3205831	26					
ANR	3206266	Condition	bPlugIn	318:8:9439:9445	3205831	0	True				
ANR	3206267	Identifier	bPlugIn		3205831	0					
ANR	3206268	CompoundStatement		69:17:2288:2288	3205831	1					
ANR	3206269	IfStatement	"if ( ( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0 )"		3205831	0					
ANR	3206270	Condition	"( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0"	319:12:9462:9518	3205831	0	True				
ANR	3206271	EqualityExpression	"( code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle ) ) != 0"		3205831	0		!=			
ANR	3206272	AssignmentExpression	"code = gx_UFST_open_static_fco ( sPlugIn , & fcHandle )"		3205831	0		=			
ANR	3206273	Identifier	code		3205831	0					
ANR	3206274	CallExpression	"gx_UFST_open_static_fco ( sPlugIn , & fcHandle )"		3205831	1					
ANR	3206275	Callee	gx_UFST_open_static_fco		3205831	0					
ANR	3206276	Identifier	gx_UFST_open_static_fco		3205831	0					
ANR	3206277	ArgumentList	sPlugIn		3205831	1					
ANR	3206278	Argument	sPlugIn		3205831	0					
ANR	3206279	Identifier	sPlugIn		3205831	0					
ANR	3206280	Argument	& fcHandle		3205831	1					
ANR	3206281	UnaryOperationExpression	& fcHandle		3205831	0					
ANR	3206282	UnaryOperator	&		3205831	0					
ANR	3206283	Identifier	fcHandle		3205831	1					
ANR	3206284	PrimaryExpression	0		3205831	1					
ANR	3206285	ReturnStatement	return code ;	320:12:9533:9544	3205831	1	True				
ANR	3206286	Identifier	code		3205831	0					
ANR	3206287	Statement	if	321:8:9554:9555	3205831	1	True				
ANR	3206288	Statement	(	321:11:9557:9557	3205831	2	True				
ANR	3206289	Statement	(	321:12:9558:9558	3205831	3	True				
ANR	3206290	Statement	code	321:13:9559:9562	3205831	4	True				
ANR	3206291	Statement	=	321:18:9564:9564	3205831	5	True				
ANR	3206292	Statement	CGIFfco_Plugin	321:20:9566:9579	3205831	6	True				
ANR	3206293	Statement	(	321:34:9580:9580	3205831	7	True				
ANR	3206294	Statement	FSA	321:35:9581:9583	3205831	8	True				
ANR	3206295	Statement	fcHandle	321:39:9585:9592	3205831	9	True				
ANR	3206296	Statement	)	321:47:9593:9593	3205831	10	True				
ANR	3206297	Statement	)	321:48:9594:9594	3205831	11	True				
ANR	3206298	Statement	!=	321:50:9596:9597	3205831	12	True				
ANR	3206299	Statement	0	321:53:9599:9599	3205831	13	True				
ANR	3206300	Statement	)	321:54:9600:9600	3205831	14	True				
ANR	3206301	ReturnStatement	return code ;	322:12:9614:9625	3205831	15	True				
ANR	3206302	Identifier	code		3205831	0					
ANR	3206303	ElseStatement	else		3205831	0					
ANR	3206304	CompoundStatement		75:9:2482:2482	3205831	0					
ANR	3206305	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"" )"	326:8:9667:9781	3205831	0	True				
ANR	3206306	CallExpression	"ufst_emprintf ( r -> mem , ""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"" )"		3205831	0					
ANR	3206307	Callee	ufst_emprintf		3205831	0					
ANR	3206308	Identifier	ufst_emprintf		3205831	0					
ANR	3206309	ArgumentList	r -> mem		3205831	1					
ANR	3206310	Argument	r -> mem		3205831	0					
ANR	3206311	PtrMemberAccess	r -> mem		3205831	0					
ANR	3206312	Identifier	r		3205831	0					
ANR	3206313	Identifier	mem		3205831	1					
ANR	3206314	Argument	"""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"""		3205831	1					
ANR	3206315	PrimaryExpression	"""Warning: UFST_PlugIn is not specified, some characters may be missing.\\n"""		3205831	0					
ANR	3206316	ReturnStatement	return 0 ;	330:4:9800:9808	3205831	27	True				
ANR	3206317	PrimaryExpression	0		3205831	0					
ANR	3206318	ReturnType	static gs_fapi_retcode		3205831	1					
ANR	3206319	Identifier	open_UFST		3205831	2					
ANR	3206320	ParameterList	"fapi_ufst_server * r , const byte * server_param , int server_param_size"		3205831	3					
ANR	3206321	Parameter	fapi_ufst_server * r	248:10:7077:7096	3205831	0	True				
ANR	3206322	ParameterType	fapi_ufst_server *		3205831	0					
ANR	3206323	Identifier	r		3205831	1					
ANR	3206324	Parameter	const byte * server_param	248:32:7099:7123	3205831	1	True				
ANR	3206325	ParameterType	const byte *		3205831	0					
ANR	3206326	Identifier	server_param		3205831	1					
ANR	3206327	Parameter	int server_param_size	249:10:7136:7156	3205831	2	True				
ANR	3206328	ParameterType	int		3205831	0					
ANR	3206329	Identifier	server_param_size		3205831	1					
ANR	3206330	CFGEntryNode	ENTRY		3205831		True				
ANR	3206331	CFGExitNode	EXIT		3205831		True				
ANR	3206332	Symbol	r -> param		3205831						
ANR	3206333	Symbol	r -> param_size		3205831						
ANR	3206334	Symbol	code		3205831						
ANR	3206335	Symbol	r -> mem		3205831						
ANR	3206336	Symbol	keySSdir		3205831						
ANR	3206337	Symbol	* sPlugIn		3205831						
ANR	3206338	Symbol	server_param		3205831						
ANR	3206339	Symbol	gx_UFST_init		3205831						
ANR	3206340	Symbol	strlen		3205831						
ANR	3206341	Symbol	memcmp		3205831						
ANR	3206342	Symbol	server_param_size		3205831						
ANR	3206343	Symbol	bPlugIn		3205831						
ANR	3206344	Symbol	gs_debug_c		3205831						
ANR	3206345	Symbol	sep		3205831						
ANR	3206346	Symbol	& fcHandle		3205831						
ANR	3206347	Symbol	keyPlugIn_length		3205831						
ANR	3206348	Symbol	e		3205831						
ANR	3206349	Symbol	TRUE		3205831						
ANR	3206350	Symbol	l		3205831						
ANR	3206351	Symbol	fcHandle		3205831						
ANR	3206352	Symbol	p		3205831						
ANR	3206353	Symbol	q		3205831						
ANR	3206354	Symbol	gs_error_VMerror		3205831						
ANR	3206355	Symbol	gx_UFST_open_static_fco		3205831						
ANR	3206356	Symbol	r		3205831						
ANR	3206357	Symbol	gs_malloc		3205831						
ANR	3206358	Symbol	* l		3205831						
ANR	3206359	Symbol	r -> ufst_is_singleton		3205831						
ANR	3206360	Symbol	ufst_root_dir		3205831						
ANR	3206361	Symbol	bSSdir		3205831						
ANR	3206362	Symbol	* ufst_root_dir		3205831						
ANR	3206363	Symbol	FALSE		3205831						
ANR	3206364	Symbol	* q		3205831						
ANR	3206365	Symbol	gp_file_name_list_separator		3205831						
ANR	3206366	Symbol	* r		3205831						
ANR	3206367	Symbol	keyPlugIn		3205831						
ANR	3206368	Symbol	sPlugIn		3205831						
ANR	3206369	Symbol	keySSdir_length		3205831						
ANR	3206370	DeclStmt									
ANR	3206371	Decl							LPUB8	LPUB8 ( FSP UW16 chId )	impl_PCLchId2ptr
ANR	3206372	Function	gs_fapi_ufst_ensure_open	335:0:9860:10409							
ANR	3206373	FunctionDef	"gs_fapi_ufst_ensure_open (gs_fapi_server * server , const char * server_param , int server_param_size)"		3206372	0					
ANR	3206374	CompoundStatement		337:0:9981:10409	3206372	0					
ANR	3206375	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	338:4:9987:10024	3206372	0	True				
ANR	3206376	IdentifierDecl	* r = If_to_I ( server )		3206372	0					
ANR	3206377	IdentifierDeclType	fapi_ufst_server *		3206372	0					
ANR	3206378	Identifier	r		3206372	1					
ANR	3206379	AssignmentExpression	* r = If_to_I ( server )		3206372	2		=			
ANR	3206380	Identifier	r		3206372	0					
ANR	3206381	CallExpression	If_to_I ( server )		3206372	1					
ANR	3206382	Callee	If_to_I		3206372	0					
ANR	3206383	Identifier	If_to_I		3206372	0					
ANR	3206384	ArgumentList	server		3206372	1					
ANR	3206385	Argument	server		3206372	0					
ANR	3206386	Identifier	server		3206372	0					
ANR	3206387	IdentifierDeclStatement	int code ;	339:4:10030:10038	3206372	1	True				
ANR	3206388	IdentifierDecl	code		3206372	0					
ANR	3206389	IdentifierDeclType	int		3206372	0					
ANR	3206390	Identifier	code		3206372	1					
ANR	3206391	IfStatement	if ( r -> bInitialized )		3206372	2					
ANR	3206392	Condition	r -> bInitialized	341:8:10049:10063	3206372	0	True				
ANR	3206393	PtrMemberAccess	r -> bInitialized		3206372	0					
ANR	3206394	Identifier	r		3206372	0					
ANR	3206395	Identifier	bInitialized		3206372	1					
ANR	3206396	ReturnStatement	return 0 ;	342:8:10074:10082	3206372	1	True				
ANR	3206397	PrimaryExpression	0		3206372	0					
ANR	3206398	ExpressionStatement	r -> bInitialized = 1	343:4:10088:10107	3206372	3	True				
ANR	3206399	AssignmentExpression	r -> bInitialized = 1		3206372	0		=			
ANR	3206400	PtrMemberAccess	r -> bInitialized		3206372	0					
ANR	3206401	Identifier	r		3206372	0					
ANR	3206402	Identifier	bInitialized		3206372	1					
ANR	3206403	PrimaryExpression	1		3206372	1					
ANR	3206404	CompoundStatement		8:4:131:131	3206372	4					
ANR	3206405	ExpressionStatement	"code = open_UFST ( r , ( byte * ) server_param , server_param_size )"	345:8:10123:10183	3206372	0	True				
ANR	3206406	AssignmentExpression	"code = open_UFST ( r , ( byte * ) server_param , server_param_size )"		3206372	0		=			
ANR	3206407	Identifier	code		3206372	0					
ANR	3206408	CallExpression	"open_UFST ( r , ( byte * ) server_param , server_param_size )"		3206372	1					
ANR	3206409	Callee	open_UFST		3206372	0					
ANR	3206410	Identifier	open_UFST		3206372	0					
ANR	3206411	ArgumentList	r		3206372	1					
ANR	3206412	Argument	r		3206372	0					
ANR	3206413	Identifier	r		3206372	0					
ANR	3206414	Argument	( byte * ) server_param		3206372	1					
ANR	3206415	CastExpression	( byte * ) server_param		3206372	0					
ANR	3206416	CastTarget	byte *		3206372	0					
ANR	3206417	Identifier	server_param		3206372	1					
ANR	3206418	Argument	server_param_size		3206372	2					
ANR	3206419	Identifier	server_param_size		3206372	0					
ANR	3206420	IfStatement	if ( code < 0 )		3206372	1					
ANR	3206421	Condition	code < 0	346:12:10197:10204	3206372	0	True				
ANR	3206422	RelationalExpression	code < 0		3206372	0		<			
ANR	3206423	Identifier	code		3206372	0					
ANR	3206424	PrimaryExpression	0		3206372	1					
ANR	3206425	CompoundStatement		10:22:225:225	3206372	1					
ANR	3206426	ExpressionStatement	"ufst_emprintf ( r -> mem , ""Error opening the UFST font server.\\n"" )"	347:12:10221:10283	3206372	0	True				
ANR	3206427	CallExpression	"ufst_emprintf ( r -> mem , ""Error opening the UFST font server.\\n"" )"		3206372	0					
ANR	3206428	Callee	ufst_emprintf		3206372	0					
ANR	3206429	Identifier	ufst_emprintf		3206372	0					
ANR	3206430	ArgumentList	r -> mem		3206372	1					
ANR	3206431	Argument	r -> mem		3206372	0					
ANR	3206432	PtrMemberAccess	r -> mem		3206372	0					
ANR	3206433	Identifier	r		3206372	0					
ANR	3206434	Identifier	mem		3206372	1					
ANR	3206435	Argument	"""Error opening the UFST font server.\\n"""		3206372	1					
ANR	3206436	PrimaryExpression	"""Error opening the UFST font server.\\n"""		3206372	0					
ANR	3206437	ReturnStatement	return code ;	348:12:10297:10308	3206372	1	True				
ANR	3206438	Identifier	code		3206372	0					
ANR	3206439	ExpressionStatement	"gx_set_UFST_Callbacks ( NULL , impl_PCLchId2ptr , impl_PCLchId2ptr )"	351:4:10330:10393	3206372	5	True				
ANR	3206440	CallExpression	"gx_set_UFST_Callbacks ( NULL , impl_PCLchId2ptr , impl_PCLchId2ptr )"		3206372	0					
ANR	3206441	Callee	gx_set_UFST_Callbacks		3206372	0					
ANR	3206442	Identifier	gx_set_UFST_Callbacks		3206372	0					
ANR	3206443	ArgumentList	NULL		3206372	1					
ANR	3206444	Argument	NULL		3206372	0					
ANR	3206445	Identifier	NULL		3206372	0					
ANR	3206446	Argument	impl_PCLchId2ptr		3206372	1					
ANR	3206447	Identifier	impl_PCLchId2ptr		3206372	0					
ANR	3206448	Argument	impl_PCLchId2ptr		3206372	2					
ANR	3206449	Identifier	impl_PCLchId2ptr		3206372	0					
ANR	3206450	ReturnStatement	return 0 ;	352:4:10399:10407	3206372	6	True				
ANR	3206451	PrimaryExpression	0		3206372	0					
ANR	3206452	ReturnType	static gs_fapi_retcode		3206372	1					
ANR	3206453	Identifier	gs_fapi_ufst_ensure_open		3206372	2					
ANR	3206454	ParameterList	"gs_fapi_server * server , const char * server_param , int server_param_size"		3206372	3					
ANR	3206455	Parameter	gs_fapi_server * server	336:25:9908:9929	3206372	0	True				
ANR	3206456	ParameterType	gs_fapi_server *		3206372	0					
ANR	3206457	Identifier	server		3206372	1					
ANR	3206458	Parameter	const char * server_param	336:49:9932:9955	3206372	1	True				
ANR	3206459	ParameterType	const char *		3206372	0					
ANR	3206460	Identifier	server_param		3206372	1					
ANR	3206461	Parameter	int server_param_size	336:75:9958:9978	3206372	2	True				
ANR	3206462	ParameterType	int		3206372	0					
ANR	3206463	Identifier	server_param_size		3206372	1					
ANR	3206464	CFGEntryNode	ENTRY		3206372		True				
ANR	3206465	CFGExitNode	EXIT		3206372		True				
ANR	3206466	Symbol	server		3206372						
ANR	3206467	Symbol	If_to_I		3206372						
ANR	3206468	Symbol	r -> bInitialized		3206372						
ANR	3206469	Symbol	r		3206372						
ANR	3206470	Symbol	impl_PCLchId2ptr		3206372						
ANR	3206471	Symbol	code		3206372						
ANR	3206472	Symbol	NULL		3206372						
ANR	3206473	Symbol	r -> mem		3206372						
ANR	3206474	Symbol	server_param_size		3206372						
ANR	3206475	Symbol	server_param		3206372						
ANR	3206476	Symbol	open_UFST		3206372						
ANR	3206477	Symbol	* r		3206372						
ANR	3206478	Function	get_font_type	355:0:10412:11060							
ANR	3206479	FunctionDef	get_font_type (stream * f)		3206478	0					
ANR	3206480	CompoundStatement		357:0:10450:11060	3206478	0					
ANR	3206481	IdentifierDeclStatement	"char buf [ 20 ] , mark_PS [ ] = ""%!"" ;"	358:4:10456:10486	3206478	0	True				
ANR	3206482	IdentifierDecl	buf [ 20 ]		3206478	0					
ANR	3206483	IdentifierDeclType	char [ 20 ]		3206478	0					
ANR	3206484	Identifier	buf		3206478	1					
ANR	3206485	PrimaryExpression	20		3206478	2					
ANR	3206486	IdentifierDecl	"mark_PS [ ] = ""%!"""		3206478	1					
ANR	3206487	IdentifierDeclType	char [ ]		3206478	0					
ANR	3206488	Identifier	mark_PS		3206478	1					
ANR	3206489	AssignmentExpression	"mark_PS [ ] = ""%!"""		3206478	2		=			
ANR	3206490	Identifier	mark_PS		3206478	0					
ANR	3206491	PrimaryExpression	"""%!"""		3206478	1					
ANR	3206492	IdentifierDeclStatement	int i ;	359:4:10492:10497	3206478	1	True				
ANR	3206493	IdentifierDecl	i		3206478	0					
ANR	3206494	IdentifierDeclType	int		3206478	0					
ANR	3206495	Identifier	i		3206478	1					
ANR	3206496	IfStatement	"if ( sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf ) )"		3206478	2					
ANR	3206497	Condition	"sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf )"	361:8:10508:10552	3206478	0	True				
ANR	3206498	EqualityExpression	"sfread ( buf , 1 , sizeof ( buf ) , f ) != sizeof ( buf )"		3206478	0		!=			
ANR	3206499	CallExpression	"sfread ( buf , 1 , sizeof ( buf ) , f )"		3206478	0					
ANR	3206500	Callee	sfread		3206478	0					
ANR	3206501	Identifier	sfread		3206478	0					
ANR	3206502	ArgumentList	buf		3206478	1					
ANR	3206503	Argument	buf		3206478	0					
ANR	3206504	Identifier	buf		3206478	0					
ANR	3206505	Argument	1		3206478	1					
ANR	3206506	PrimaryExpression	1		3206478	0					
ANR	3206507	Argument	sizeof ( buf )		3206478	2					
ANR	3206508	SizeofExpression	sizeof ( buf )		3206478	0					
ANR	3206509	Sizeof	sizeof		3206478	0					
ANR	3206510	SizeofOperand	buf		3206478	1					
ANR	3206511	Argument	f		3206478	3					
ANR	3206512	Identifier	f		3206478	0					
ANR	3206513	SizeofExpression	sizeof ( buf )		3206478	1					
ANR	3206514	Sizeof	sizeof		3206478	0					
ANR	3206515	SizeofOperand	buf		3206478	1					
ANR	3206516	ReturnStatement	return 0 ;	362:8:10563:10571	3206478	1	True				
ANR	3206517	PrimaryExpression	0		3206478	0					
ANR	3206518	IfStatement	if ( buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00 )		3206478	3					
ANR	3206519	Condition	buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00	363:8:10581:10612	3206478	0	True				
ANR	3206520	OrExpression	buf [ 0 ] == 0x15 || buf [ 0 ] == 0x00		3206478	0		||			
ANR	3206521	EqualityExpression	buf [ 0 ] == 0x15		3206478	0		==			
ANR	3206522	ArrayIndexing	buf [ 0 ]		3206478	0					
ANR	3206523	Identifier	buf		3206478	0					
ANR	3206524	PrimaryExpression	0		3206478	1					
ANR	3206525	PrimaryExpression	0x15		3206478	1					
ANR	3206526	EqualityExpression	buf [ 0 ] == 0x00		3206478	1		==			
ANR	3206527	ArrayIndexing	buf [ 0 ]		3206478	0					
ANR	3206528	Identifier	buf		3206478	0					
ANR	3206529	PrimaryExpression	0		3206478	1					
ANR	3206530	PrimaryExpression	0x00		3206478	1					
ANR	3206531	ReturnStatement	return FC_FCO_TYPE ;	364:8:10675:10693	3206478	1	True				
ANR	3206532	Identifier	FC_FCO_TYPE		3206478	0					
ANR	3206533	ForStatement	for ( i = 0 ; i < sizeof ( buf ) - sizeof ( mark_PS ) ; i ++ )		3206478	4					
ANR	3206534	ForInit	i = 0 ;	365:9:10704:10709	3206478	0	True				
ANR	3206535	AssignmentExpression	i = 0		3206478	0		=			
ANR	3206536	Identifier	i		3206478	0					
ANR	3206537	PrimaryExpression	0		3206478	1					
ANR	3206538	Condition	i < sizeof ( buf ) - sizeof ( mark_PS )	365:16:10711:10743	3206478	1	True				
ANR	3206539	RelationalExpression	i < sizeof ( buf ) - sizeof ( mark_PS )		3206478	0		<			
ANR	3206540	Identifier	i		3206478	0					
ANR	3206541	AdditiveExpression	sizeof ( buf ) - sizeof ( mark_PS )		3206478	1		-			
ANR	3206542	SizeofExpression	sizeof ( buf )		3206478	0					
ANR	3206543	Sizeof	sizeof		3206478	0					
ANR	3206544	SizeofOperand	buf		3206478	1					
ANR	3206545	SizeofExpression	sizeof ( mark_PS )		3206478	1					
ANR	3206546	Sizeof	sizeof		3206478	0					
ANR	3206547	SizeofOperand	mark_PS		3206478	1					
ANR	3206548	PostIncDecOperationExpression	i ++	365:51:10746:10748	3206478	2	True				
ANR	3206549	Identifier	i		3206478	0					
ANR	3206550	IncDec	++		3206478	1					
ANR	3206551	IfStatement	"if ( ! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 ) )"		3206478	3					
ANR	3206552	Condition	"! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"	366:12:10763:10808	3206478	0	True				
ANR	3206553	UnaryOperationExpression	"! memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"		3206478	0					
ANR	3206554	UnaryOperator	!		3206478	0					
ANR	3206555	CallExpression	"memcmp ( buf + i , mark_PS , sizeof ( mark_PS ) - 1 )"		3206478	1					
ANR	3206556	Callee	memcmp		3206478	0					
ANR	3206557	Identifier	memcmp		3206478	0					
ANR	3206558	ArgumentList	buf + i		3206478	1					
ANR	3206559	Argument	buf + i		3206478	0					
ANR	3206560	AdditiveExpression	buf + i		3206478	0		+			
ANR	3206561	Identifier	buf		3206478	0					
ANR	3206562	Identifier	i		3206478	1					
ANR	3206563	Argument	mark_PS		3206478	1					
ANR	3206564	Identifier	mark_PS		3206478	0					
ANR	3206565	Argument	sizeof ( mark_PS ) - 1		3206478	2					
ANR	3206566	AdditiveExpression	sizeof ( mark_PS ) - 1		3206478	0		-			
ANR	3206567	SizeofExpression	sizeof ( mark_PS )		3206478	0					
ANR	3206568	Sizeof	sizeof		3206478	0					
ANR	3206569	SizeofOperand	mark_PS		3206478	1					
ANR	3206570	PrimaryExpression	1		3206478	1					
ANR	3206571	ReturnStatement	return FC_PST1_TYPE ;	367:12:10823:10842	3206478	1	True				
ANR	3206572	Identifier	FC_PST1_TYPE		3206478	0					
ANR	3206573	IfStatement	if ( buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1' )		3206478	5					
ANR	3206574	Condition	buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1'	368:8:10852:10883	3206478	0	True				
ANR	3206575	AndExpression	buf [ 0 ] == '\\0' && buf [ 1 ] == '\\1'		3206478	0		&&			
ANR	3206576	EqualityExpression	buf [ 0 ] == '\\0'		3206478	0		==			
ANR	3206577	ArrayIndexing	buf [ 0 ]		3206478	0					
ANR	3206578	Identifier	buf		3206478	0					
ANR	3206579	PrimaryExpression	0		3206478	1					
ANR	3206580	PrimaryExpression	'\\0'		3206478	1					
ANR	3206581	EqualityExpression	buf [ 1 ] == '\\1'		3206478	1		==			
ANR	3206582	ArrayIndexing	buf [ 1 ]		3206478	0					
ANR	3206583	Identifier	buf		3206478	0					
ANR	3206584	PrimaryExpression	1		3206478	1					
ANR	3206585	PrimaryExpression	'\\1'		3206478	1					
ANR	3206586	ReturnStatement	return FC_TT_TYPE ;	369:8:10894:10911	3206478	1	True				
ANR	3206587	Identifier	FC_TT_TYPE		3206478	0					
ANR	3206588	IfStatement	if ( buf [ 0 ] == 't' && buf [ 1 ] == 't' )		3206478	6					
ANR	3206589	Condition	buf [ 0 ] == 't' && buf [ 1 ] == 't'	370:8:10921:10950	3206478	0	True				
ANR	3206590	AndExpression	buf [ 0 ] == 't' && buf [ 1 ] == 't'		3206478	0		&&			
ANR	3206591	EqualityExpression	buf [ 0 ] == 't'		3206478	0		==			
ANR	3206592	ArrayIndexing	buf [ 0 ]		3206478	0					
ANR	3206593	Identifier	buf		3206478	0					
ANR	3206594	PrimaryExpression	0		3206478	1					
ANR	3206595	PrimaryExpression	't'		3206478	1					
ANR	3206596	EqualityExpression	buf [ 1 ] == 't'		3206478	1		==			
ANR	3206597	ArrayIndexing	buf [ 1 ]		3206478	0					
ANR	3206598	Identifier	buf		3206478	0					
ANR	3206599	PrimaryExpression	1		3206478	1					
ANR	3206600	PrimaryExpression	't'		3206478	1					
ANR	3206601	ReturnStatement	return FC_TT_TYPE ;	371:8:10961:10978	3206478	1	True				
ANR	3206602	Identifier	FC_TT_TYPE		3206478	0					
ANR	3206603	ReturnStatement	return 0 ;	372:4:10984:10992	3206478	7	True				
ANR	3206604	PrimaryExpression	0		3206478	0					
ANR	3206605	ReturnType	static UW16		3206478	1					
ANR	3206606	Identifier	get_font_type		3206478	2					
ANR	3206607	ParameterList	stream * f		3206478	3					
ANR	3206608	Parameter	stream * f	356:14:10438:10447	3206478	0	True				
ANR	3206609	ParameterType	stream *		3206478	0					
ANR	3206610	Identifier	f		3206478	1					
ANR	3206611	CFGEntryNode	ENTRY		3206478		True				
ANR	3206612	CFGExitNode	EXIT		3206478		True				
ANR	3206613	Symbol	mark_PS		3206478						
ANR	3206614	Symbol	buf		3206478						
ANR	3206615	Symbol	* buf		3206478						
ANR	3206616	Symbol	FC_FCO_TYPE		3206478						
ANR	3206617	Symbol	memcmp		3206478						
ANR	3206618	Symbol	FC_TT_TYPE		3206478						
ANR	3206619	Symbol	f		3206478						
ANR	3206620	Symbol	i		3206478						
ANR	3206621	Symbol	sfread		3206478						
ANR	3206622	Symbol	FC_PST1_TYPE		3206478						
ANR	3206623	Function	choose_decoding_general	375:0:11063:11363							
ANR	3206624	FunctionDef	"choose_decoding_general (fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId)"		3206623	0					
ANR	3206625	CompoundStatement		378:0:11191:11363	3206623	0					
ANR	3206626	IfStatement	if ( ! d -> decodingID [ 0 ] )		3206623	0					
ANR	3206627	Condition	! d -> decodingID [ 0 ]	379:8:11201:11217	3206623	0	True				
ANR	3206628	UnaryOperationExpression	! d -> decodingID [ 0 ]		3206623	0					
ANR	3206629	UnaryOperator	!		3206623	0					
ANR	3206630	ArrayIndexing	d -> decodingID [ 0 ]		3206623	1					
ANR	3206631	PtrMemberAccess	d -> decodingID		3206623	0					
ANR	3206632	Identifier	d		3206623	0					
ANR	3206633	Identifier	decodingID		3206623	1					
ANR	3206634	PrimaryExpression	0		3206623	1					
ANR	3206635	ExpressionStatement	"strncpy ( d -> decodingID , ""Unicode"" , sizeof ( d -> decodingID ) )"	380:8:11228:11284	3206623	1	True				
ANR	3206636	CallExpression	"strncpy ( d -> decodingID , ""Unicode"" , sizeof ( d -> decodingID ) )"		3206623	0					
ANR	3206637	Callee	strncpy		3206623	0					
ANR	3206638	Identifier	strncpy		3206623	0					
ANR	3206639	ArgumentList	d -> decodingID		3206623	1					
ANR	3206640	Argument	d -> decodingID		3206623	0					
ANR	3206641	PtrMemberAccess	d -> decodingID		3206623	0					
ANR	3206642	Identifier	d		3206623	0					
ANR	3206643	Identifier	decodingID		3206623	1					
ANR	3206644	Argument	"""Unicode"""		3206623	1					
ANR	3206645	PrimaryExpression	"""Unicode"""		3206623	0					
ANR	3206646	Argument	sizeof ( d -> decodingID )		3206623	2					
ANR	3206647	SizeofExpression	sizeof ( d -> decodingID )		3206623	0					
ANR	3206648	Sizeof	sizeof		3206623	0					
ANR	3206649	PtrMemberAccess	d -> decodingID		3206623	1					
ANR	3206650	Identifier	d		3206623	0					
ANR	3206651	Identifier	decodingID		3206623	1					
ANR	3206652	ReturnStatement	return 1 ;	382:4:11353:11361	3206623	1	True				
ANR	3206653	PrimaryExpression	1		3206623	0					
ANR	3206654	ReturnType	static int		3206623	1					
ANR	3206655	Identifier	choose_decoding_general		3206623	2					
ANR	3206656	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId"		3206623	3					
ANR	3206657	Parameter	fapi_ufst_server * r	376:24:11098:11117	3206623	0	True				
ANR	3206658	ParameterType	fapi_ufst_server *		3206623	0					
ANR	3206659	Identifier	r		3206623	1					
ANR	3206660	Parameter	ufst_common_font_data * d	376:46:11120:11144	3206623	1	True				
ANR	3206661	ParameterType	ufst_common_font_data *		3206623	0					
ANR	3206662	Identifier	d		3206623	1					
ANR	3206663	Parameter	const char * cmapId	377:24:11171:11188	3206623	2	True				
ANR	3206664	ParameterType	const char *		3206623	0					
ANR	3206665	Identifier	cmapId		3206623	1					
ANR	3206666	CFGEntryNode	ENTRY		3206623		True				
ANR	3206667	CFGExitNode	EXIT		3206623		True				
ANR	3206668	Symbol	r		3206623						
ANR	3206669	Symbol	d -> decodingID		3206623						
ANR	3206670	Symbol	d		3206623						
ANR	3206671	Symbol	* d -> decodingID		3206623						
ANR	3206672	Symbol	* * d		3206623						
ANR	3206673	Symbol	cmapId		3206623						
ANR	3206674	Symbol	* d		3206623						
ANR	3206675	Function	choose_decoding_TT	385:0:11366:12489							
ANR	3206676	FunctionDef	"choose_decoding_TT (fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId)"		3206675	0					
ANR	3206677	CompoundStatement		388:0:11484:12489	3206675	0					
ANR	3206678	IdentifierDeclStatement	"int platId , specId , i ;"	390:4:11512:11533	3206675	0	True				
ANR	3206679	IdentifierDecl	platId		3206675	0					
ANR	3206680	IdentifierDeclType	int		3206675	0					
ANR	3206681	Identifier	platId		3206675	1					
ANR	3206682	IdentifierDecl	specId		3206675	1					
ANR	3206683	IdentifierDeclType	int		3206675	0					
ANR	3206684	Identifier	specId		3206675	1					
ANR	3206685	IdentifierDecl	i		3206675	2					
ANR	3206686	IdentifierDeclType	int		3206675	0					
ANR	3206687	Identifier	i		3206675	1					
ANR	3206688	IdentifierDeclStatement	CMAP_QUERY q ;	391:4:11539:11551	3206675	1	True				
ANR	3206689	IdentifierDecl	q		3206675	0					
ANR	3206690	IdentifierDeclType	CMAP_QUERY		3206675	0					
ANR	3206691	Identifier	q		3206675	1					
ANR	3206692	IdentifierDeclStatement	UW16 font_access ;	392:4:11557:11573	3206675	2	True				
ANR	3206693	IdentifierDecl	font_access		3206675	0					
ANR	3206694	IdentifierDeclType	UW16		3206675	0					
ANR	3206695	Identifier	font_access		3206675	1					
ANR	3206696	IdentifierDeclStatement	bool failed ;	393:4:11579:11590	3206675	3	True				
ANR	3206697	IdentifierDecl	failed		3206675	0					
ANR	3206698	IdentifierDeclType	bool		3206675	0					
ANR	3206699	Identifier	failed		3206675	1					
ANR	3206700	IdentifierDeclStatement	void * p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) ) ;	394:4:11596:11805	3206675	4	True				
ANR	3206701	IdentifierDecl	* p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) )		3206675	0					
ANR	3206702	IdentifierDeclType	void *		3206675	0					
ANR	3206703	Identifier	p		3206675	1					
ANR	3206704	AssignmentExpression	* p = ( d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset ) )		3206675	2		=			
ANR	3206705	Identifier	p		3206675	0					
ANR	3206706	ConditionalExpression	d -> is_disk_font ? ( void * ) ( d + 1 ) : ( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset )		3206675	1					
ANR	3206707	Condition	d -> is_disk_font		3206675	0					
ANR	3206708	PtrMemberAccess	d -> is_disk_font		3206675	0					
ANR	3206709	Identifier	d		3206675	0					
ANR	3206710	Identifier	is_disk_font		3206675	1					
ANR	3206711	CastExpression	( void * ) ( d + 1 )		3206675	1					
ANR	3206712	CastTarget	void *		3206675	0					
ANR	3206713	AdditiveExpression	d + 1		3206675	1		+			
ANR	3206714	Identifier	d		3206675	0					
ANR	3206715	PrimaryExpression	1		3206675	1					
ANR	3206716	CastExpression	( void * ) ( ( UB8 * ) d + d -> tt_font_body_offset )		3206675	2					
ANR	3206717	CastTarget	void *		3206675	0					
ANR	3206718	AdditiveExpression	( UB8 * ) d + d -> tt_font_body_offset		3206675	1		+			
ANR	3206719	CastExpression	( UB8 * ) d		3206675	0					
ANR	3206720	CastTarget	UB8 *		3206675	0					
ANR	3206721	Identifier	d		3206675	1					
ANR	3206722	PtrMemberAccess	d -> tt_font_body_offset		3206675	1					
ANR	3206723	Identifier	d		3206675	0					
ANR	3206724	Identifier	tt_font_body_offset		3206675	1					
ANR	3206725	ExpressionStatement	FSA_FROM_SERVER	398:4:11811:11826	3206675	5	True				
ANR	3206726	Identifier	FSA_FROM_SERVER		3206675	0					
ANR	3206727	IfStatement	"if ( sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2 )"		3206675	6					
ANR	3206728	Condition	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2"	400:8:11837:11882	3206675	0	True				
ANR	3206729	EqualityExpression	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId ) != 2"		3206675	0		!=			
ANR	3206730	CallExpression	"sscanf ( cmapId , ""%d.%d"" , & platId , & specId )"		3206675	0					
ANR	3206731	Callee	sscanf		3206675	0					
ANR	3206732	Identifier	sscanf		3206675	0					
ANR	3206733	ArgumentList	cmapId		3206675	1					
ANR	3206734	Argument	cmapId		3206675	0					
ANR	3206735	Identifier	cmapId		3206675	0					
ANR	3206736	Argument	"""%d.%d"""		3206675	1					
ANR	3206737	PrimaryExpression	"""%d.%d"""		3206675	0					
ANR	3206738	Argument	& platId		3206675	2					
ANR	3206739	UnaryOperationExpression	& platId		3206675	0					
ANR	3206740	UnaryOperator	&		3206675	0					
ANR	3206741	Identifier	platId		3206675	1					
ANR	3206742	Argument	& specId		3206675	3					
ANR	3206743	UnaryOperationExpression	& specId		3206675	0					
ANR	3206744	UnaryOperator	&		3206675	0					
ANR	3206745	Identifier	specId		3206675	1					
ANR	3206746	PrimaryExpression	2		3206675	1					
ANR	3206747	ReturnStatement	return 0 ;	401:8:11893:11901	3206675	1	True				
ANR	3206748	PrimaryExpression	0		3206675	0					
ANR	3206749	ExpressionStatement	font_access = pIFS -> font_access	402:4:11907:11938	3206675	7	True				
ANR	3206750	AssignmentExpression	font_access = pIFS -> font_access		3206675	0		=			
ANR	3206751	Identifier	font_access		3206675	0					
ANR	3206752	PtrMemberAccess	pIFS -> font_access		3206675	1					
ANR	3206753	Identifier	pIFS		3206675	0					
ANR	3206754	Identifier	font_access		3206675	1					
ANR	3206755	ExpressionStatement	pIFS -> font_access = ( d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS )	403:4:11944:12008	3206675	8	True				
ANR	3206756	AssignmentExpression	pIFS -> font_access = ( d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS )		3206675	0		=			
ANR	3206757	PtrMemberAccess	pIFS -> font_access		3206675	0					
ANR	3206758	Identifier	pIFS		3206675	0					
ANR	3206759	Identifier	font_access		3206675	1					
ANR	3206760	ConditionalExpression	d -> is_disk_font ? DISK_ACCESS : ROM_ACCESS		3206675	1					
ANR	3206761	Condition	d -> is_disk_font		3206675	0					
ANR	3206762	PtrMemberAccess	d -> is_disk_font		3206675	0					
ANR	3206763	Identifier	d		3206675	0					
ANR	3206764	Identifier	is_disk_font		3206675	1					
ANR	3206765	Identifier	DISK_ACCESS		3206675	1					
ANR	3206766	Identifier	ROM_ACCESS		3206675	2					
ANR	3206767	Statement	failed	404:4:12014:12019	3206675	9	True				
ANR	3206768	Statement	=	404:11:12021:12021	3206675	10	True				
ANR	3206769	Statement	CGIFtt_cmap_query	404:13:12023:12039	3206675	11	True				
ANR	3206770	Statement	(	404:30:12040:12040	3206675	12	True				
ANR	3206771	Statement	FSA	404:31:12041:12043	3206675	13	True				
ANR	3206772	Statement	p	404:35:12045:12045	3206675	14	True				
ANR	3206773	Statement	","	404:36:12046:12046	3206675	15	True				
ANR	3206774	Statement	r	404:38:12048:12048	3206675	16	True				
ANR	3206775	Statement	->	404:39:12049:12050	3206675	17	True				
ANR	3206776	Statement	fc	404:41:12051:12052	3206675	18	True				
ANR	3206777	Statement	.	404:43:12053:12053	3206675	19	True				
ANR	3206778	Statement	ttc_index	404:44:12054:12062	3206675	20	True				
ANR	3206779	Statement	","	404:53:12063:12063	3206675	21	True				
ANR	3206780	Statement	&	404:55:12065:12065	3206675	22	True				
ANR	3206781	Statement	q	404:56:12066:12066	3206675	23	True				
ANR	3206782	Statement	)	404:57:12067:12067	3206675	24	True				
ANR	3206783	ExpressionStatement		404:58:12068:12068	3206675	25	True				
ANR	3206784	ExpressionStatement	pIFS -> font_access = font_access	405:4:12074:12105	3206675	26	True				
ANR	3206785	AssignmentExpression	pIFS -> font_access = font_access		3206675	0		=			
ANR	3206786	PtrMemberAccess	pIFS -> font_access		3206675	0					
ANR	3206787	Identifier	pIFS		3206675	0					
ANR	3206788	Identifier	font_access		3206675	1					
ANR	3206789	Identifier	font_access		3206675	1					
ANR	3206790	IfStatement	if ( failed )		3206675	27					
ANR	3206791	Condition	failed	406:8:12115:12120	3206675	0	True				
ANR	3206792	Identifier	failed		3206675	0					
ANR	3206793	ReturnStatement	return 0 ;	407:8:12131:12139	3206675	1	True				
ANR	3206794	PrimaryExpression	0		3206675	0					
ANR	3206795	ForStatement	for ( i = 0 ; i < q . numCmap ; i ++ )		3206675	28					
ANR	3206796	ForInit	i = 0 ;	408:9:12150:12155	3206675	0	True				
ANR	3206797	AssignmentExpression	i = 0		3206675	0		=			
ANR	3206798	Identifier	i		3206675	0					
ANR	3206799	PrimaryExpression	0		3206675	1					
ANR	3206800	Condition	i < q . numCmap	408:16:12157:12169	3206675	1	True				
ANR	3206801	RelationalExpression	i < q . numCmap		3206675	0		<			
ANR	3206802	Identifier	i		3206675	0					
ANR	3206803	MemberAccess	q . numCmap		3206675	1					
ANR	3206804	Identifier	q		3206675	0					
ANR	3206805	Identifier	numCmap		3206675	1					
ANR	3206806	PostIncDecOperationExpression	i ++	408:31:12172:12174	3206675	2	True				
ANR	3206807	Identifier	i		3206675	0					
ANR	3206808	IncDec	++		3206675	1					
ANR	3206809	IfStatement	if ( q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId )		3206675	3					
ANR	3206810	Condition	q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId	409:12:12189:12246	3206675	0	True				
ANR	3206811	AndExpression	q . entry [ i ] . platId == platId && q . entry [ i ] . specId == specId		3206675	0		&&			
ANR	3206812	EqualityExpression	q . entry [ i ] . platId == platId		3206675	0		==			
ANR	3206813	MemberAccess	q . entry [ i ] . platId		3206675	0					
ANR	3206814	ArrayIndexing	q . entry [ i ]		3206675	0					
ANR	3206815	MemberAccess	q . entry		3206675	0					
ANR	3206816	Identifier	q		3206675	0					
ANR	3206817	Identifier	entry		3206675	1					
ANR	3206818	Identifier	i		3206675	1					
ANR	3206819	Identifier	platId		3206675	1					
ANR	3206820	Identifier	platId		3206675	1					
ANR	3206821	EqualityExpression	q . entry [ i ] . specId == specId		3206675	1		==			
ANR	3206822	MemberAccess	q . entry [ i ] . specId		3206675	0					
ANR	3206823	ArrayIndexing	q . entry [ i ]		3206675	0					
ANR	3206824	MemberAccess	q . entry		3206675	0					
ANR	3206825	Identifier	q		3206675	0					
ANR	3206826	Identifier	entry		3206675	1					
ANR	3206827	Identifier	i		3206675	1					
ANR	3206828	Identifier	specId		3206675	1					
ANR	3206829	Identifier	specId		3206675	1					
ANR	3206830	CompoundStatement		22:72:764:764	3206675	1					
ANR	3206831	ExpressionStatement	d -> platformId = platId	410:12:12263:12285	3206675	0	True				
ANR	3206832	AssignmentExpression	d -> platformId = platId		3206675	0		=			
ANR	3206833	PtrMemberAccess	d -> platformId		3206675	0					
ANR	3206834	Identifier	d		3206675	0					
ANR	3206835	Identifier	platformId		3206675	1					
ANR	3206836	Identifier	platId		3206675	1					
ANR	3206837	ExpressionStatement	d -> specificId = specId	411:12:12299:12321	3206675	1	True				
ANR	3206838	AssignmentExpression	d -> specificId = specId		3206675	0		=			
ANR	3206839	PtrMemberAccess	d -> specificId		3206675	0					
ANR	3206840	Identifier	d		3206675	0					
ANR	3206841	Identifier	specificId		3206675	1					
ANR	3206842	Identifier	specId		3206675	1					
ANR	3206843	ReturnStatement	return 1 ;	412:12:12335:12343	3206675	2	True				
ANR	3206844	PrimaryExpression	1		3206675	0					
ANR	3206845	ReturnStatement	return 0 ;	414:4:12359:12367	3206675	29	True				
ANR	3206846	PrimaryExpression	0		3206675	0					
ANR	3206847	ReturnType	static int		3206675	1					
ANR	3206848	Identifier	choose_decoding_TT		3206675	2					
ANR	3206849	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId"		3206675	3					
ANR	3206850	Parameter	fapi_ufst_server * r	386:19:11396:11415	3206675	0	True				
ANR	3206851	ParameterType	fapi_ufst_server *		3206675	0					
ANR	3206852	Identifier	r		3206675	1					
ANR	3206853	Parameter	ufst_common_font_data * d	386:41:11418:11442	3206675	1	True				
ANR	3206854	ParameterType	ufst_common_font_data *		3206675	0					
ANR	3206855	Identifier	d		3206675	1					
ANR	3206856	Parameter	const char * cmapId	387:19:11464:11481	3206675	2	True				
ANR	3206857	ParameterType	const char *		3206675	0					
ANR	3206858	Identifier	cmapId		3206675	1					
ANR	3206859	CFGEntryNode	ENTRY		3206675		True				
ANR	3206860	CFGExitNode	EXIT		3206675		True				
ANR	3206861	Symbol	q . entry [ i ] . specId		3206675						
ANR	3206862	Symbol	DISK_ACCESS		3206675						
ANR	3206863	Symbol	q . entry		3206675						
ANR	3206864	Symbol	cmapId		3206675						
ANR	3206865	Symbol	* q . entry		3206675						
ANR	3206866	Symbol	pIFS		3206675						
ANR	3206867	Symbol	platId		3206675						
ANR	3206868	Symbol	& platId		3206675						
ANR	3206869	Symbol	q . numCmap		3206675						
ANR	3206870	Symbol	d -> platformId		3206675						
ANR	3206871	Symbol	ROM_ACCESS		3206675						
ANR	3206872	Symbol	d -> specificId		3206675						
ANR	3206873	Symbol	specId		3206675						
ANR	3206874	Symbol	d		3206675						
ANR	3206875	Symbol	pIFS -> font_access		3206675						
ANR	3206876	Symbol	i		3206675						
ANR	3206877	Symbol	font_access		3206675						
ANR	3206878	Symbol	failed		3206675						
ANR	3206879	Symbol	* d		3206675						
ANR	3206880	Symbol	p		3206675						
ANR	3206881	Symbol	q . entry [ i ] . platId		3206675						
ANR	3206882	Symbol	q		3206675						
ANR	3206883	Symbol	d -> is_disk_font		3206675						
ANR	3206884	Symbol	r		3206675						
ANR	3206885	Symbol	d -> tt_font_body_offset		3206675						
ANR	3206886	Symbol	* i		3206675						
ANR	3206887	Symbol	sscanf		3206675						
ANR	3206888	Symbol	& specId		3206675						
ANR	3206889	Symbol	* q		3206675						
ANR	3206890	Symbol	* pIFS		3206675						
ANR	3206891	Function	scan_xlatmap	422:0:12492:13331							
ANR	3206892	FunctionDef	"scan_xlatmap (fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap , const char * font_kind , int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId ))"		3206891	0					
ANR	3206893	CompoundStatement		428:0:12792:13331	3206891	0					
ANR	3206894	IdentifierDeclStatement	const char * p = xlatmap ;	429:4:12798:12821	3206891	0	True				
ANR	3206895	IdentifierDecl	* p = xlatmap		3206891	0					
ANR	3206896	IdentifierDeclType	const char *		3206891	0					
ANR	3206897	Identifier	p		3206891	1					
ANR	3206898	AssignmentExpression	* p = xlatmap		3206891	2		=			
ANR	3206899	Identifier	xlatmap		3206891	0					
ANR	3206900	Identifier	xlatmap		3206891	1					
ANR	3206901	WhileStatement	while ( * p )		3206891	1					
ANR	3206902	Condition	* p	431:11:12835:12836	3206891	0	True				
ANR	3206903	UnaryOperationExpression	* p		3206891	0					
ANR	3206904	UnaryOperator	*		3206891	0					
ANR	3206905	Identifier	p		3206891	1					
ANR	3206906	CompoundStatement		5:8:56:93	3206891	1					
ANR	3206907	IdentifierDeclStatement	"int good_kind = ! strcmp ( p , font_kind ) ;"	432:8:12849:12886	3206891	0	True				
ANR	3206908	IdentifierDecl	"good_kind = ! strcmp ( p , font_kind )"		3206891	0					
ANR	3206909	IdentifierDeclType	int		3206891	0					
ANR	3206910	Identifier	good_kind		3206891	1					
ANR	3206911	AssignmentExpression	"good_kind = ! strcmp ( p , font_kind )"		3206891	2		=			
ANR	3206912	Identifier	good_kind		3206891	0					
ANR	3206913	UnaryOperationExpression	"! strcmp ( p , font_kind )"		3206891	1					
ANR	3206914	UnaryOperator	!		3206891	0					
ANR	3206915	CallExpression	"strcmp ( p , font_kind )"		3206891	1					
ANR	3206916	Callee	strcmp		3206891	0					
ANR	3206917	Identifier	strcmp		3206891	0					
ANR	3206918	ArgumentList	p		3206891	1					
ANR	3206919	Argument	p		3206891	0					
ANR	3206920	Identifier	p		3206891	0					
ANR	3206921	Argument	font_kind		3206891	1					
ANR	3206922	Identifier	font_kind		3206891	0					
ANR	3206923	ExpressionStatement	p += strlen ( p ) + 2	434:8:12897:12915	3206891	1	True				
ANR	3206924	AssignmentExpression	p += strlen ( p ) + 2		3206891	0		+=			
ANR	3206925	Identifier	p		3206891	0					
ANR	3206926	AdditiveExpression	strlen ( p ) + 2		3206891	1		+			
ANR	3206927	CallExpression	strlen ( p )		3206891	0					
ANR	3206928	Callee	strlen		3206891	0					
ANR	3206929	Identifier	strlen		3206891	0					
ANR	3206930	ArgumentList	p		3206891	1					
ANR	3206931	Argument	p		3206891	0					
ANR	3206932	Identifier	p		3206891	0					
ANR	3206933	PrimaryExpression	2		3206891	1					
ANR	3206934	WhileStatement	while ( * p )		3206891	2					
ANR	3206935	Condition	* p	435:15:12932:12933	3206891	0	True				
ANR	3206936	UnaryOperationExpression	* p		3206891	0					
ANR	3206937	UnaryOperator	*		3206891	0					
ANR	3206938	Identifier	p		3206891	1					
ANR	3206939	CompoundStatement		9:12:157:212	3206891	1					
ANR	3206940	IdentifierDeclStatement	"const char * cmapId = p , * decodingID = p + strlen ( p ) + 1 ;"	436:12:12950:13005	3206891	0	True				
ANR	3206941	IdentifierDecl	* cmapId = p		3206891	0					
ANR	3206942	IdentifierDeclType	const char *		3206891	0					
ANR	3206943	Identifier	cmapId		3206891	1					
ANR	3206944	AssignmentExpression	* cmapId = p		3206891	2		=			
ANR	3206945	Identifier	p		3206891	0					
ANR	3206946	Identifier	p		3206891	1					
ANR	3206947	IdentifierDecl	* decodingID = p + strlen ( p ) + 1		3206891	1					
ANR	3206948	IdentifierDeclType	const char *		3206891	0					
ANR	3206949	Identifier	decodingID		3206891	1					
ANR	3206950	AssignmentExpression	* decodingID = p + strlen ( p ) + 1		3206891	2		=			
ANR	3206951	Identifier	decodingID		3206891	0					
ANR	3206952	AdditiveExpression	p + strlen ( p ) + 1		3206891	1		+			
ANR	3206953	Identifier	p		3206891	0					
ANR	3206954	AdditiveExpression	strlen ( p ) + 1		3206891	1		+			
ANR	3206955	CallExpression	strlen ( p )		3206891	0					
ANR	3206956	Callee	strlen		3206891	0					
ANR	3206957	Identifier	strlen		3206891	0					
ANR	3206958	ArgumentList	p		3206891	1					
ANR	3206959	Argument	p		3206891	0					
ANR	3206960	Identifier	p		3206891	0					
ANR	3206961	PrimaryExpression	1		3206891	1					
ANR	3206962	ExpressionStatement	"strncpy ( d -> decodingID , decodingID , sizeof ( d -> decodingID ) )"	438:12:13020:13077	3206891	1	True				
ANR	3206963	CallExpression	"strncpy ( d -> decodingID , decodingID , sizeof ( d -> decodingID ) )"		3206891	0					
ANR	3206964	Callee	strncpy		3206891	0					
ANR	3206965	Identifier	strncpy		3206891	0					
ANR	3206966	ArgumentList	d -> decodingID		3206891	1					
ANR	3206967	Argument	d -> decodingID		3206891	0					
ANR	3206968	PtrMemberAccess	d -> decodingID		3206891	0					
ANR	3206969	Identifier	d		3206891	0					
ANR	3206970	Identifier	decodingID		3206891	1					
ANR	3206971	Argument	decodingID		3206891	1					
ANR	3206972	Identifier	decodingID		3206891	0					
ANR	3206973	Argument	sizeof ( d -> decodingID )		3206891	2					
ANR	3206974	SizeofExpression	sizeof ( d -> decodingID )		3206891	0					
ANR	3206975	Sizeof	sizeof		3206891	0					
ANR	3206976	PtrMemberAccess	d -> decodingID		3206891	1					
ANR	3206977	Identifier	d		3206891	0					
ANR	3206978	Identifier	decodingID		3206891	1					
ANR	3206979	IfStatement	if ( ! decodingID [ 0 ] )		3206891	2					
ANR	3206980	Condition	! decodingID [ 0 ]	439:16:13095:13108	3206891	0	True				
ANR	3206981	UnaryOperationExpression	! decodingID [ 0 ]		3206891	0					
ANR	3206982	UnaryOperator	!		3206891	0					
ANR	3206983	ArrayIndexing	decodingID [ 0 ]		3206891	1					
ANR	3206984	Identifier	decodingID		3206891	0					
ANR	3206985	PrimaryExpression	0		3206891	1					
ANR	3206986	BreakStatement	break ;	440:16:13127:13132	3206891	1	True				
ANR	3206987	ExpressionStatement	p = decodingID + strlen ( decodingID ) + 1	441:12:13146:13185	3206891	3	True				
ANR	3206988	AssignmentExpression	p = decodingID + strlen ( decodingID ) + 1		3206891	0		=			
ANR	3206989	Identifier	p		3206891	0					
ANR	3206990	AdditiveExpression	decodingID + strlen ( decodingID ) + 1		3206891	1		+			
ANR	3206991	Identifier	decodingID		3206891	0					
ANR	3206992	AdditiveExpression	strlen ( decodingID ) + 1		3206891	1		+			
ANR	3206993	CallExpression	strlen ( decodingID )		3206891	0					
ANR	3206994	Callee	strlen		3206891	0					
ANR	3206995	Identifier	strlen		3206891	0					
ANR	3206996	ArgumentList	decodingID		3206891	1					
ANR	3206997	Argument	decodingID		3206891	0					
ANR	3206998	Identifier	decodingID		3206891	0					
ANR	3206999	PrimaryExpression	1		3206891	1					
ANR	3207000	IfStatement	if ( good_kind )		3206891	4					
ANR	3207001	Condition	good_kind	442:16:13203:13211	3206891	0	True				
ANR	3207002	Identifier	good_kind		3206891	0					
ANR	3207003	IfStatement	"if ( choose_proc ( r , d , cmapId ) )"		3206891	1					
ANR	3207004	Condition	"choose_proc ( r , d , cmapId )"	443:20:13234:13258	3206891	0	True				
ANR	3207005	CallExpression	"choose_proc ( r , d , cmapId )"		3206891	0					
ANR	3207006	Callee	choose_proc		3206891	0					
ANR	3207007	Identifier	choose_proc		3206891	0					
ANR	3207008	ArgumentList	r		3206891	1					
ANR	3207009	Argument	r		3206891	0					
ANR	3207010	Identifier	r		3206891	0					
ANR	3207011	Argument	d		3206891	1					
ANR	3207012	Identifier	d		3206891	0					
ANR	3207013	Argument	cmapId		3206891	2					
ANR	3207014	Identifier	cmapId		3206891	0					
ANR	3207015	ReturnStatement	return ;	444:20:13281:13287	3206891	1	True				
ANR	3207016	ExpressionStatement	d -> decodingID [ 0 ] = 0	447:4:13309:13329	3206891	2	True				
ANR	3207017	AssignmentExpression	d -> decodingID [ 0 ] = 0		3206891	0		=			
ANR	3207018	ArrayIndexing	d -> decodingID [ 0 ]		3206891	0					
ANR	3207019	PtrMemberAccess	d -> decodingID		3206891	0					
ANR	3207020	Identifier	d		3206891	0					
ANR	3207021	Identifier	decodingID		3206891	1					
ANR	3207022	PrimaryExpression	0		3206891	1					
ANR	3207023	PrimaryExpression	0		3206891	1					
ANR	3207024	ReturnType	static void		3206891	1					
ANR	3207025	Identifier	scan_xlatmap		3206891	2					
ANR	3207026	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap , const char * font_kind , int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId )"		3206891	3					
ANR	3207027	Parameter	fapi_ufst_server * r	423:13:12517:12536	3206891	0	True				
ANR	3207028	ParameterType	fapi_ufst_server *		3206891	0					
ANR	3207029	Identifier	r		3206891	1					
ANR	3207030	Parameter	ufst_common_font_data * d	423:35:12539:12563	3206891	1	True				
ANR	3207031	ParameterType	ufst_common_font_data *		3206891	0					
ANR	3207032	Identifier	d		3206891	1					
ANR	3207033	Parameter	const char * xlatmap	424:13:12579:12597	3206891	2	True				
ANR	3207034	ParameterType	const char *		3206891	0					
ANR	3207035	Identifier	xlatmap		3206891	1					
ANR	3207036	Parameter	const char * font_kind	424:34:12600:12620	3206891	3	True				
ANR	3207037	ParameterType	const char *		3206891	0					
ANR	3207038	Identifier	font_kind		3206891	1					
ANR	3207039	Parameter	"int ( * choose_proc ) ( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId )"	425:13:12636:12789	3206891	4	True				
ANR	3207040	ParameterType	"(( fapi_ufst_server * r , ufst_common_font_data * d , const char * cmapId ) int) *"		3206891	0					
ANR	3207041	Identifier	choose_proc		3206891	1					
ANR	3207042	CFGEntryNode	ENTRY		3206891		True				
ANR	3207043	CFGExitNode	EXIT		3206891		True				
ANR	3207044	Symbol	strcmp		3206891						
ANR	3207045	Symbol	d		3206891						
ANR	3207046	Symbol	good_kind		3206891						
ANR	3207047	Symbol	* d -> decodingID		3206891						
ANR	3207048	Symbol	* * d		3206891						
ANR	3207049	Symbol	cmapId		3206891						
ANR	3207050	Symbol	* d		3206891						
ANR	3207051	Symbol	* decodingID		3206891						
ANR	3207052	Symbol	p		3206891						
ANR	3207053	Symbol	xlatmap		3206891						
ANR	3207054	Symbol	strlen		3206891						
ANR	3207055	Symbol	decodingID		3206891						
ANR	3207056	Symbol	r		3206891						
ANR	3207057	Symbol	d -> decodingID		3206891						
ANR	3207058	Symbol	choose_proc		3206891						
ANR	3207059	Symbol	font_kind		3206891						
ANR	3207060	Symbol	* p		3206891						
ANR	3207061	Function	choose_decoding	450:0:13334:14041							
ANR	3207062	FunctionDef	"choose_decoding (fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap)"		3207061	0					
ANR	3207063	CompoundStatement		453:0:13448:14041	3207061	0					
ANR	3207064	IfStatement	if ( xlatmap != 0 )		3207061	0					
ANR	3207065	Condition	xlatmap != 0	454:8:13458:13469	3207061	0	True				
ANR	3207066	EqualityExpression	xlatmap != 0		3207061	0		!=			
ANR	3207067	Identifier	xlatmap		3207061	0					
ANR	3207068	PrimaryExpression	0		3207061	1					
ANR	3207069	SwitchStatement	switch ( d -> font_type )		3207061	1					
ANR	3207070	Condition	d -> font_type	455:16:13488:13499	3207061	0	True				
ANR	3207071	PtrMemberAccess	d -> font_type		3207061	0					
ANR	3207072	Identifier	d		3207061	0					
ANR	3207073	Identifier	font_type		3207061	1					
ANR	3207074	CompoundStatement		3:30:53:53	3207061	1					
ANR	3207075	Label	case FC_IF_TYPE :	456:12:13516:13531	3207061	0	True				
ANR	3207076	Identifier	FC_IF_TYPE		3207061	0					
ANR	3207077	BreakStatement	break ;	457:16:13563:13568	3207061	1	True				
ANR	3207078	Label	case FC_PST1_TYPE :	458:12:13582:13599	3207061	2	True				
ANR	3207079	Identifier	FC_PST1_TYPE		3207061	0					
ANR	3207080	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""PostScript"" , choose_decoding_general )"	459:16:13617:13712	3207061	3	True				
ANR	3207081	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""PostScript"" , choose_decoding_general )"		3207061	0					
ANR	3207082	Callee	scan_xlatmap		3207061	0					
ANR	3207083	Identifier	scan_xlatmap		3207061	0					
ANR	3207084	ArgumentList	r		3207061	1					
ANR	3207085	Argument	r		3207061	0					
ANR	3207086	Identifier	r		3207061	0					
ANR	3207087	Argument	d		3207061	1					
ANR	3207088	Identifier	d		3207061	0					
ANR	3207089	Argument	xlatmap		3207061	2					
ANR	3207090	Identifier	xlatmap		3207061	0					
ANR	3207091	Argument	"""PostScript"""		3207061	3					
ANR	3207092	PrimaryExpression	"""PostScript"""		3207061	0					
ANR	3207093	Argument	choose_decoding_general		3207061	4					
ANR	3207094	Identifier	choose_decoding_general		3207061	0					
ANR	3207095	BreakStatement	break ;	461:16:13730:13735	3207061	4	True				
ANR	3207096	Label	case FC_TT_TYPE :	462:12:13749:13764	3207061	5	True				
ANR	3207097	Identifier	FC_TT_TYPE		3207061	0					
ANR	3207098	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""TrueType"" , choose_decoding_TT )"	463:16:13782:13841	3207061	6	True				
ANR	3207099	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""TrueType"" , choose_decoding_TT )"		3207061	0					
ANR	3207100	Callee	scan_xlatmap		3207061	0					
ANR	3207101	Identifier	scan_xlatmap		3207061	0					
ANR	3207102	ArgumentList	r		3207061	1					
ANR	3207103	Argument	r		3207061	0					
ANR	3207104	Identifier	r		3207061	0					
ANR	3207105	Argument	d		3207061	1					
ANR	3207106	Identifier	d		3207061	0					
ANR	3207107	Argument	xlatmap		3207061	2					
ANR	3207108	Identifier	xlatmap		3207061	0					
ANR	3207109	Argument	"""TrueType"""		3207061	3					
ANR	3207110	PrimaryExpression	"""TrueType"""		3207061	0					
ANR	3207111	Argument	choose_decoding_TT		3207061	4					
ANR	3207112	Identifier	choose_decoding_TT		3207061	0					
ANR	3207113	BreakStatement	break ;	464:16:13859:13864	3207061	7	True				
ANR	3207114	Label	case FC_FCO_TYPE :	465:12:13878:13894	3207061	8	True				
ANR	3207115	Identifier	FC_FCO_TYPE		3207061	0					
ANR	3207116	ExpressionStatement	"scan_xlatmap ( r , d , xlatmap , ""Microtype"" , choose_decoding_general )"	466:16:13912:14006	3207061	9	True				
ANR	3207117	CallExpression	"scan_xlatmap ( r , d , xlatmap , ""Microtype"" , choose_decoding_general )"		3207061	0					
ANR	3207118	Callee	scan_xlatmap		3207061	0					
ANR	3207119	Identifier	scan_xlatmap		3207061	0					
ANR	3207120	ArgumentList	r		3207061	1					
ANR	3207121	Argument	r		3207061	0					
ANR	3207122	Identifier	r		3207061	0					
ANR	3207123	Argument	d		3207061	1					
ANR	3207124	Identifier	d		3207061	0					
ANR	3207125	Argument	xlatmap		3207061	2					
ANR	3207126	Identifier	xlatmap		3207061	0					
ANR	3207127	Argument	"""Microtype"""		3207061	3					
ANR	3207128	PrimaryExpression	"""Microtype"""		3207061	0					
ANR	3207129	Argument	choose_decoding_general		3207061	4					
ANR	3207130	Identifier	choose_decoding_general		3207061	0					
ANR	3207131	BreakStatement	break ;	468:16:14024:14029	3207061	10	True				
ANR	3207132	ReturnType	static void		3207061	1					
ANR	3207133	Identifier	choose_decoding		3207061	2					
ANR	3207134	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d , const char * xlatmap"		3207061	3					
ANR	3207135	Parameter	fapi_ufst_server * r	451:16:13362:13381	3207061	0	True				
ANR	3207136	ParameterType	fapi_ufst_server *		3207061	0					
ANR	3207137	Identifier	r		3207061	1					
ANR	3207138	Parameter	ufst_common_font_data * d	451:38:13384:13408	3207061	1	True				
ANR	3207139	ParameterType	ufst_common_font_data *		3207061	0					
ANR	3207140	Identifier	d		3207061	1					
ANR	3207141	Parameter	const char * xlatmap	452:16:13427:13445	3207061	2	True				
ANR	3207142	ParameterType	const char *		3207061	0					
ANR	3207143	Identifier	xlatmap		3207061	1					
ANR	3207144	CFGEntryNode	ENTRY		3207061		True				
ANR	3207145	CFGExitNode	EXIT		3207061		True				
ANR	3207146	Symbol	xlatmap		3207061						
ANR	3207147	Symbol	d -> font_type		3207061						
ANR	3207148	Symbol	r		3207061						
ANR	3207149	Symbol	d		3207061						
ANR	3207150	Symbol	choose_decoding_general		3207061						
ANR	3207151	Symbol	choose_decoding_TT		3207061						
ANR	3207152	Symbol	* d		3207061						
ANR	3207153	Function	store_word	472:0:14044:14148							
ANR	3207154	FunctionDef	"store_word (byte * * p , ushort w)"		3207153	0					
ANR	3207155	CompoundStatement		474:0:14095:14148	3207153	0					
ANR	3207156	ExpressionStatement	* ( ( * p ) ++ ) = w / 256	475:4:14101:14120	3207153	0	True				
ANR	3207157	AssignmentExpression	* ( ( * p ) ++ ) = w / 256		3207153	0		=			
ANR	3207158	UnaryOperationExpression	* ( ( * p ) ++ )		3207153	0					
ANR	3207159	UnaryOperator	*		3207153	0					
ANR	3207160	PostIncDecOperationExpression	( * p ) ++		3207153	1					
ANR	3207161	UnaryOperationExpression	* p		3207153	0					
ANR	3207162	UnaryOperator	*		3207153	0					
ANR	3207163	Identifier	p		3207153	1					
ANR	3207164	IncDec	++		3207153	1					
ANR	3207165	MultiplicativeExpression	w / 256		3207153	1		/			
ANR	3207166	Identifier	w		3207153	0					
ANR	3207167	PrimaryExpression	256		3207153	1					
ANR	3207168	ExpressionStatement	* ( ( * p ) ++ ) = w % 256	476:4:14126:14145	3207153	1	True				
ANR	3207169	AssignmentExpression	* ( ( * p ) ++ ) = w % 256		3207153	0		=			
ANR	3207170	UnaryOperationExpression	* ( ( * p ) ++ )		3207153	0					
ANR	3207171	UnaryOperator	*		3207153	0					
ANR	3207172	PostIncDecOperationExpression	( * p ) ++		3207153	1					
ANR	3207173	UnaryOperationExpression	* p		3207153	0					
ANR	3207174	UnaryOperator	*		3207153	0					
ANR	3207175	Identifier	p		3207153	1					
ANR	3207176	IncDec	++		3207153	1					
ANR	3207177	MultiplicativeExpression	w % 256		3207153	1		%			
ANR	3207178	Identifier	w		3207153	0					
ANR	3207179	PrimaryExpression	256		3207153	1					
ANR	3207180	ReturnType	static inline void		3207153	1					
ANR	3207181	Identifier	store_word		3207153	2					
ANR	3207182	ParameterList	"byte * * p , ushort w"		3207153	3					
ANR	3207183	Parameter	byte * * p	473:11:14074:14082	3207153	0	True				
ANR	3207184	ParameterType	byte * *		3207153	0					
ANR	3207185	Identifier	p		3207153	1					
ANR	3207186	Parameter	ushort w	473:22:14085:14092	3207153	1	True				
ANR	3207187	ParameterType	ushort		3207153	0					
ANR	3207188	Identifier	w		3207153	1					
ANR	3207189	CFGEntryNode	ENTRY		3207153		True				
ANR	3207190	CFGExitNode	EXIT		3207153		True				
ANR	3207191	Symbol	p		3207153						
ANR	3207192	Symbol	* ( ( * p ) ++ )		3207153						
ANR	3207193	Symbol	w		3207153						
ANR	3207194	Symbol	* p		3207153						
ANR	3207195	Function	get_TT_glyph	480:0:14151:16767							
ANR	3207196	FunctionDef	"get_TT_glyph (fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId)"		3207195	0					
ANR	3207197	CompoundStatement		482:0:14229:16767	3207195	0					
ANR	3207198	IdentifierDeclStatement	pcleo_glyph_list_elem * g ;	483:4:14235:14259	3207195	0	True				
ANR	3207199	IdentifierDecl	* g		3207195	0					
ANR	3207200	IdentifierDeclType	pcleo_glyph_list_elem *		3207195	0					
ANR	3207201	Identifier	g		3207195	1					
ANR	3207202	IdentifierDeclStatement	PCLETTO_CHDR * h ;	484:4:14265:14280	3207195	1	True				
ANR	3207203	IdentifierDecl	* h		3207195	0					
ANR	3207204	IdentifierDeclType	PCLETTO_CHDR *		3207195	0					
ANR	3207205	Identifier	h		3207195	1					
ANR	3207206	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	485:4:14286:14357	3207195	2	True				
ANR	3207207	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207195	0					
ANR	3207208	IdentifierDeclType	ufst_common_font_data *		3207195	0					
ANR	3207209	Identifier	d		3207195	1					
ANR	3207210	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207195	2		=			
ANR	3207211	Identifier	d		3207195	0					
ANR	3207212	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207195	1		-			
ANR	3207213	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		3207195	0					
ANR	3207214	CastTarget	ufst_common_font_data *		3207195	0					
ANR	3207215	MemberAccess	r -> fc . font_hdr		3207195	1					
ANR	3207216	PtrMemberAccess	r -> fc		3207195	0					
ANR	3207217	Identifier	r		3207195	0					
ANR	3207218	Identifier	fc		3207195	1					
ANR	3207219	Identifier	font_hdr		3207195	1					
ANR	3207220	PrimaryExpression	1		3207195	1					
ANR	3207221	IdentifierDeclStatement	LPUB8 q ;	486:4:14363:14370	3207195	3	True				
ANR	3207222	IdentifierDecl	q		3207195	0					
ANR	3207223	IdentifierDeclType	LPUB8		3207195	0					
ANR	3207224	Identifier	q		3207195	1					
ANR	3207225	IdentifierDeclStatement	"ushort glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 ) ;"	487:4:14376:14427	3207195	4	True				
ANR	3207226	IdentifierDecl	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		3207195	0					
ANR	3207227	IdentifierDeclType	ushort		3207195	0					
ANR	3207228	Identifier	glyph_length		3207195	1					
ANR	3207229	AssignmentExpression	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		3207195	2		=			
ANR	3207230	Identifier	glyph_length		3207195	0					
ANR	3207231	CallExpression	"ff -> get_glyph ( ff , chId , 0 , 0 )"		3207195	1					
ANR	3207232	Callee	ff -> get_glyph		3207195	0					
ANR	3207233	PtrMemberAccess	ff -> get_glyph		3207195	0					
ANR	3207234	Identifier	ff		3207195	0					
ANR	3207235	Identifier	get_glyph		3207195	1					
ANR	3207236	ArgumentList	ff		3207195	1					
ANR	3207237	Argument	ff		3207195	0					
ANR	3207238	Identifier	ff		3207195	0					
ANR	3207239	Argument	chId		3207195	1					
ANR	3207240	Identifier	chId		3207195	0					
ANR	3207241	Argument	0		3207195	2					
ANR	3207242	PrimaryExpression	0		3207195	0					
ANR	3207243	Argument	0		3207195	3					
ANR	3207244	PrimaryExpression	0		3207195	0					
ANR	3207245	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	488:4:14433:14472	3207195	5	True				
ANR	3207246	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		3207195	0					
ANR	3207247	IdentifierDeclType	bool		3207195	0					
ANR	3207248	Identifier	use_XL_format		3207195	1					
ANR	3207249	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		3207195	2		=			
ANR	3207250	Identifier	use_XL_format		3207195	0					
ANR	3207251	PtrMemberAccess	ff -> is_mtx_skipped		3207195	1					
ANR	3207252	Identifier	ff		3207195	0					
ANR	3207253	Identifier	is_mtx_skipped		3207195	1					
ANR	3207254	IfStatement	if ( glyph_length == ( ushort ) - 1 )		3207195	6					
ANR	3207255	Condition	glyph_length == ( ushort ) - 1	499:8:14792:14819	3207195	0	True				
ANR	3207256	EqualityExpression	glyph_length == ( ushort ) - 1		3207195	0		==			
ANR	3207257	Identifier	glyph_length		3207195	0					
ANR	3207258	CastExpression	( ushort ) - 1		3207195	1					
ANR	3207259	CastTarget	ushort		3207195	0					
ANR	3207260	UnaryOperationExpression	- 1		3207195	1					
ANR	3207261	UnaryOperator	-		3207195	0					
ANR	3207262	PrimaryExpression	1		3207195	1					
ANR	3207263	CompoundStatement		18:38:592:592	3207195	1					
ANR	3207264	ExpressionStatement	r -> callback_error = gs_error_invalidfont	500:8:14832:14872	3207195	0	True				
ANR	3207265	AssignmentExpression	r -> callback_error = gs_error_invalidfont		3207195	0		=			
ANR	3207266	PtrMemberAccess	r -> callback_error		3207195	0					
ANR	3207267	Identifier	r		3207195	0					
ANR	3207268	Identifier	callback_error		3207195	1					
ANR	3207269	Identifier	gs_error_invalidfont		3207195	1					
ANR	3207270	ReturnStatement	return 0 ;	501:8:14882:14890	3207195	1	True				
ANR	3207271	PrimaryExpression	0		3207195	0					
ANR	3207272	ExpressionStatement	"g = ( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"	503:4:14902:15285	3207195	7	True				
ANR	3207273	AssignmentExpression	"g = ( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		3207195	0		=			
ANR	3207274	Identifier	g		3207195	0					
ANR	3207275	CastExpression	"( pcleo_glyph_list_elem * ) gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		3207195	1					
ANR	3207276	CastTarget	pcleo_glyph_list_elem *		3207195	0					
ANR	3207277	CallExpression	"gs_malloc ( r -> mem , sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2 , 1 , ""PCLETTO char"" )"		3207195	1					
ANR	3207278	Callee	gs_malloc		3207195	0					
ANR	3207279	Identifier	gs_malloc		3207195	0					
ANR	3207280	ArgumentList	r -> mem		3207195	1					
ANR	3207281	Argument	r -> mem		3207195	0					
ANR	3207282	PtrMemberAccess	r -> mem		3207195	0					
ANR	3207283	Identifier	r		3207195	0					
ANR	3207284	Identifier	mem		3207195	1					
ANR	3207285	Argument	sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		3207195	1					
ANR	3207286	AdditiveExpression	sizeof ( pcleo_glyph_list_elem ) + ( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		3207195	0		+			
ANR	3207287	SizeofExpression	sizeof ( pcleo_glyph_list_elem )		3207195	0					
ANR	3207288	Sizeof	sizeof		3207195	0					
ANR	3207289	SizeofOperand	pcleo_glyph_list_elem		3207195	1					
ANR	3207290	AdditiveExpression	( use_XL_format ? 12 : sizeof ( PCLETTO_CHDR ) ) + glyph_length + 2		3207195	1		+			
ANR	3207291	ConditionalExpression	use_XL_format ? 12 : sizeof ( PCLETTO_CHDR )		3207195	0					
ANR	3207292	Condition	use_XL_format		3207195	0					
ANR	3207293	Identifier	use_XL_format		3207195	0					
ANR	3207294	PrimaryExpression	12		3207195	1					
ANR	3207295	SizeofExpression	sizeof ( PCLETTO_CHDR )		3207195	2					
ANR	3207296	Sizeof	sizeof		3207195	0					
ANR	3207297	SizeofOperand	PCLETTO_CHDR		3207195	1					
ANR	3207298	AdditiveExpression	glyph_length + 2		3207195	1		+			
ANR	3207299	Identifier	glyph_length		3207195	0					
ANR	3207300	PrimaryExpression	2		3207195	1					
ANR	3207301	Argument	1		3207195	2					
ANR	3207302	PrimaryExpression	1		3207195	0					
ANR	3207303	Argument	"""PCLETTO char"""		3207195	3					
ANR	3207304	PrimaryExpression	"""PCLETTO char"""		3207195	0					
ANR	3207305	IfStatement	if ( g == 0 )		3207195	8					
ANR	3207306	Condition	g == 0	509:8:15295:15300	3207195	0	True				
ANR	3207307	EqualityExpression	g == 0		3207195	0		==			
ANR	3207308	Identifier	g		3207195	0					
ANR	3207309	PrimaryExpression	0		3207195	1					
ANR	3207310	CompoundStatement		28:16:1073:1073	3207195	1					
ANR	3207311	ExpressionStatement	r -> callback_error = gs_error_VMerror	510:8:15313:15349	3207195	0	True				
ANR	3207312	AssignmentExpression	r -> callback_error = gs_error_VMerror		3207195	0		=			
ANR	3207313	PtrMemberAccess	r -> callback_error		3207195	0					
ANR	3207314	Identifier	r		3207195	0					
ANR	3207315	Identifier	callback_error		3207195	1					
ANR	3207316	Identifier	gs_error_VMerror		3207195	1					
ANR	3207317	ReturnStatement	return 0 ;	511:8:15359:15367	3207195	1	True				
ANR	3207318	PrimaryExpression	0		3207195	0					
ANR	3207319	ExpressionStatement	g -> chId = chId	513:4:15379:15393	3207195	9	True				
ANR	3207320	AssignmentExpression	g -> chId = chId		3207195	0		=			
ANR	3207321	PtrMemberAccess	g -> chId		3207195	0					
ANR	3207322	Identifier	g		3207195	0					
ANR	3207323	Identifier	chId		3207195	1					
ANR	3207324	Identifier	chId		3207195	1					
ANR	3207325	ExpressionStatement	g -> next = d -> glyphs	514:4:15399:15418	3207195	10	True				
ANR	3207326	AssignmentExpression	g -> next = d -> glyphs		3207195	0		=			
ANR	3207327	PtrMemberAccess	g -> next		3207195	0					
ANR	3207328	Identifier	g		3207195	0					
ANR	3207329	Identifier	next		3207195	1					
ANR	3207330	PtrMemberAccess	d -> glyphs		3207195	1					
ANR	3207331	Identifier	d		3207195	0					
ANR	3207332	Identifier	glyphs		3207195	1					
ANR	3207333	ExpressionStatement	d -> glyphs = g	515:4:15424:15437	3207195	11	True				
ANR	3207334	AssignmentExpression	d -> glyphs = g		3207195	0		=			
ANR	3207335	PtrMemberAccess	d -> glyphs		3207195	0					
ANR	3207336	Identifier	d		3207195	0					
ANR	3207337	Identifier	glyphs		3207195	1					
ANR	3207338	Identifier	g		3207195	1					
ANR	3207339	ExpressionStatement	h = ( PCLETTO_CHDR * ) ( g + 1 )	516:4:15443:15471	3207195	12	True				
ANR	3207340	AssignmentExpression	h = ( PCLETTO_CHDR * ) ( g + 1 )		3207195	0		=			
ANR	3207341	Identifier	h		3207195	0					
ANR	3207342	CastExpression	( PCLETTO_CHDR * ) ( g + 1 )		3207195	1					
ANR	3207343	CastTarget	PCLETTO_CHDR *		3207195	0					
ANR	3207344	AdditiveExpression	g + 1		3207195	1		+			
ANR	3207345	Identifier	g		3207195	0					
ANR	3207346	PrimaryExpression	1		3207195	1					
ANR	3207347	ExpressionStatement	h -> h . format = 15	517:4:15477:15493	3207195	13	True				
ANR	3207348	AssignmentExpression	h -> h . format = 15		3207195	0		=			
ANR	3207349	MemberAccess	h -> h . format		3207195	0					
ANR	3207350	PtrMemberAccess	h -> h		3207195	0					
ANR	3207351	Identifier	h		3207195	0					
ANR	3207352	Identifier	h		3207195	1					
ANR	3207353	Identifier	format		3207195	1					
ANR	3207354	PrimaryExpression	15		3207195	1					
ANR	3207355	IfStatement	if ( use_XL_format )		3207195	14					
ANR	3207356	Condition	use_XL_format	518:8:15503:15515	3207195	0	True				
ANR	3207357	Identifier	use_XL_format		3207195	0					
ANR	3207358	CompoundStatement		37:23:1288:1288	3207195	1					
ANR	3207359	ExpressionStatement	h -> h . continuation = 2	519:8:15528:15549	3207195	0	True				
ANR	3207360	AssignmentExpression	h -> h . continuation = 2		3207195	0		=			
ANR	3207361	MemberAccess	h -> h . continuation		3207195	0					
ANR	3207362	PtrMemberAccess	h -> h		3207195	0					
ANR	3207363	Identifier	h		3207195	0					
ANR	3207364	Identifier	h		3207195	1					
ANR	3207365	Identifier	continuation		3207195	1					
ANR	3207366	PrimaryExpression	2		3207195	1					
ANR	3207367	ExpressionStatement	q = ( LPUB8 ) h + 2	520:8:15559:15576	3207195	1	True				
ANR	3207368	AssignmentExpression	q = ( LPUB8 ) h + 2		3207195	0		=			
ANR	3207369	Identifier	q		3207195	0					
ANR	3207370	AdditiveExpression	( LPUB8 ) h + 2		3207195	1		+			
ANR	3207371	CastExpression	( LPUB8 ) h		3207195	0					
ANR	3207372	CastTarget	LPUB8		3207195	0					
ANR	3207373	Identifier	h		3207195	1					
ANR	3207374	PrimaryExpression	2		3207195	1					
ANR	3207375	ExpressionStatement	"store_word ( & q , ( ushort ) ( glyph_length + 10 ) )"	521:8:15586:15630	3207195	2	True				
ANR	3207376	CallExpression	"store_word ( & q , ( ushort ) ( glyph_length + 10 ) )"		3207195	0					
ANR	3207377	Callee	store_word		3207195	0					
ANR	3207378	Identifier	store_word		3207195	0					
ANR	3207379	ArgumentList	& q		3207195	1					
ANR	3207380	Argument	& q		3207195	0					
ANR	3207381	UnaryOperationExpression	& q		3207195	0					
ANR	3207382	UnaryOperator	&		3207195	0					
ANR	3207383	Identifier	q		3207195	1					
ANR	3207384	Argument	( ushort ) ( glyph_length + 10 )		3207195	1					
ANR	3207385	CastExpression	( ushort ) ( glyph_length + 10 )		3207195	0					
ANR	3207386	CastTarget	ushort		3207195	0					
ANR	3207387	AdditiveExpression	glyph_length + 10		3207195	1		+			
ANR	3207388	Identifier	glyph_length		3207195	0					
ANR	3207389	PrimaryExpression	10		3207195	1					
ANR	3207390	ExpressionStatement	"store_word ( & q , ( ushort ) ( r -> sb_x >> r -> If . frac_shift ) )"	522:8:15640:15694	3207195	3	True				
ANR	3207391	CallExpression	"store_word ( & q , ( ushort ) ( r -> sb_x >> r -> If . frac_shift ) )"		3207195	0					
ANR	3207392	Callee	store_word		3207195	0					
ANR	3207393	Identifier	store_word		3207195	0					
ANR	3207394	ArgumentList	& q		3207195	1					
ANR	3207395	Argument	& q		3207195	0					
ANR	3207396	UnaryOperationExpression	& q		3207195	0					
ANR	3207397	UnaryOperator	&		3207195	0					
ANR	3207398	Identifier	q		3207195	1					
ANR	3207399	Argument	( ushort ) ( r -> sb_x >> r -> If . frac_shift )		3207195	1					
ANR	3207400	CastExpression	( ushort ) ( r -> sb_x >> r -> If . frac_shift )		3207195	0					
ANR	3207401	CastTarget	ushort		3207195	0					
ANR	3207402	ShiftExpression	r -> sb_x >> r -> If . frac_shift		3207195	1		>>			
ANR	3207403	PtrMemberAccess	r -> sb_x		3207195	0					
ANR	3207404	Identifier	r		3207195	0					
ANR	3207405	Identifier	sb_x		3207195	1					
ANR	3207406	MemberAccess	r -> If . frac_shift		3207195	1					
ANR	3207407	PtrMemberAccess	r -> If		3207195	0					
ANR	3207408	Identifier	r		3207195	0					
ANR	3207409	Identifier	If		3207195	1					
ANR	3207410	Identifier	frac_shift		3207195	1					
ANR	3207411	ExpressionStatement	"store_word ( & q , ( ushort ) ( r -> aw_x >> r -> If . frac_shift ) )"	523:8:15747:15801	3207195	4	True				
ANR	3207412	CallExpression	"store_word ( & q , ( ushort ) ( r -> aw_x >> r -> If . frac_shift ) )"		3207195	0					
ANR	3207413	Callee	store_word		3207195	0					
ANR	3207414	Identifier	store_word		3207195	0					
ANR	3207415	ArgumentList	& q		3207195	1					
ANR	3207416	Argument	& q		3207195	0					
ANR	3207417	UnaryOperationExpression	& q		3207195	0					
ANR	3207418	UnaryOperator	&		3207195	0					
ANR	3207419	Identifier	q		3207195	1					
ANR	3207420	Argument	( ushort ) ( r -> aw_x >> r -> If . frac_shift )		3207195	1					
ANR	3207421	CastExpression	( ushort ) ( r -> aw_x >> r -> If . frac_shift )		3207195	0					
ANR	3207422	CastTarget	ushort		3207195	0					
ANR	3207423	ShiftExpression	r -> aw_x >> r -> If . frac_shift		3207195	1		>>			
ANR	3207424	PtrMemberAccess	r -> aw_x		3207195	0					
ANR	3207425	Identifier	r		3207195	0					
ANR	3207426	Identifier	aw_x		3207195	1					
ANR	3207427	MemberAccess	r -> If . frac_shift		3207195	1					
ANR	3207428	PtrMemberAccess	r -> If		3207195	0					
ANR	3207429	Identifier	r		3207195	0					
ANR	3207430	Identifier	If		3207195	1					
ANR	3207431	Identifier	frac_shift		3207195	1					
ANR	3207432	ExpressionStatement	"store_word ( & q , 0 )"	524:8:15811:15828	3207195	5	True				
ANR	3207433	CallExpression	"store_word ( & q , 0 )"		3207195	0					
ANR	3207434	Callee	store_word		3207195	0					
ANR	3207435	Identifier	store_word		3207195	0					
ANR	3207436	ArgumentList	& q		3207195	1					
ANR	3207437	Argument	& q		3207195	0					
ANR	3207438	UnaryOperationExpression	& q		3207195	0					
ANR	3207439	UnaryOperator	&		3207195	0					
ANR	3207440	Identifier	q		3207195	1					
ANR	3207441	Argument	0		3207195	1					
ANR	3207442	PrimaryExpression	0		3207195	0					
ANR	3207443	ExpressionStatement	"store_word ( & q , chId )"	525:8:15838:15858	3207195	6	True				
ANR	3207444	CallExpression	"store_word ( & q , chId )"		3207195	0					
ANR	3207445	Callee	store_word		3207195	0					
ANR	3207446	Identifier	store_word		3207195	0					
ANR	3207447	ArgumentList	& q		3207195	1					
ANR	3207448	Argument	& q		3207195	0					
ANR	3207449	UnaryOperationExpression	& q		3207195	0					
ANR	3207450	UnaryOperator	&		3207195	0					
ANR	3207451	Identifier	q		3207195	1					
ANR	3207452	Argument	chId		3207195	1					
ANR	3207453	Identifier	chId		3207195	0					
ANR	3207454	ElseStatement	else		3207195	0					
ANR	3207455	CompoundStatement		46:9:1645:1645	3207195	0					
ANR	3207456	ExpressionStatement	h -> h . continuation = 0	528:8:15885:15906	3207195	0	True				
ANR	3207457	AssignmentExpression	h -> h . continuation = 0		3207195	0		=			
ANR	3207458	MemberAccess	h -> h . continuation		3207195	0					
ANR	3207459	PtrMemberAccess	h -> h		3207195	0					
ANR	3207460	Identifier	h		3207195	0					
ANR	3207461	Identifier	h		3207195	1					
ANR	3207462	Identifier	continuation		3207195	1					
ANR	3207463	PrimaryExpression	0		3207195	1					
ANR	3207464	ExpressionStatement	h -> h . descriptorsize = 4	529:8:15916:15939	3207195	1	True				
ANR	3207465	AssignmentExpression	h -> h . descriptorsize = 4		3207195	0		=			
ANR	3207466	MemberAccess	h -> h . descriptorsize		3207195	0					
ANR	3207467	PtrMemberAccess	h -> h		3207195	0					
ANR	3207468	Identifier	h		3207195	0					
ANR	3207469	Identifier	h		3207195	1					
ANR	3207470	Identifier	descriptorsize		3207195	1					
ANR	3207471	PrimaryExpression	4		3207195	1					
ANR	3207472	ExpressionStatement	h -> h . ch_class = 15	530:8:15949:15967	3207195	2	True				
ANR	3207473	AssignmentExpression	h -> h . ch_class = 15		3207195	0		=			
ANR	3207474	MemberAccess	h -> h . ch_class		3207195	0					
ANR	3207475	PtrMemberAccess	h -> h		3207195	0					
ANR	3207476	Identifier	h		3207195	0					
ANR	3207477	Identifier	h		3207195	1					
ANR	3207478	Identifier	ch_class		3207195	1					
ANR	3207479	PrimaryExpression	15		3207195	1					
ANR	3207480	ExpressionStatement	h -> add_data = 0	531:8:15977:15992	3207195	3	True				
ANR	3207481	AssignmentExpression	h -> add_data = 0		3207195	0		=			
ANR	3207482	PtrMemberAccess	h -> add_data		3207195	0					
ANR	3207483	Identifier	h		3207195	0					
ANR	3207484	Identifier	add_data		3207195	1					
ANR	3207485	PrimaryExpression	0		3207195	1					
ANR	3207486	ExpressionStatement	q = ( LPUB8 ) & h -> charDataSize	532:8:16002:16031	3207195	4	True				
ANR	3207487	AssignmentExpression	q = ( LPUB8 ) & h -> charDataSize		3207195	0		=			
ANR	3207488	Identifier	q		3207195	0					
ANR	3207489	CastExpression	( LPUB8 ) & h -> charDataSize		3207195	1					
ANR	3207490	CastTarget	LPUB8		3207195	0					
ANR	3207491	UnaryOperationExpression	& h -> charDataSize		3207195	1					
ANR	3207492	UnaryOperator	&		3207195	0					
ANR	3207493	PtrMemberAccess	h -> charDataSize		3207195	1					
ANR	3207494	Identifier	h		3207195	0					
ANR	3207495	Identifier	charDataSize		3207195	1					
ANR	3207496	ExpressionStatement	"store_word ( & q , ( ushort ) ( glyph_length + 4 ) )"	533:8:16041:16084	3207195	5	True				
ANR	3207497	CallExpression	"store_word ( & q , ( ushort ) ( glyph_length + 4 ) )"		3207195	0					
ANR	3207498	Callee	store_word		3207195	0					
ANR	3207499	Identifier	store_word		3207195	0					
ANR	3207500	ArgumentList	& q		3207195	1					
ANR	3207501	Argument	& q		3207195	0					
ANR	3207502	UnaryOperationExpression	& q		3207195	0					
ANR	3207503	UnaryOperator	&		3207195	0					
ANR	3207504	Identifier	q		3207195	1					
ANR	3207505	Argument	( ushort ) ( glyph_length + 4 )		3207195	1					
ANR	3207506	CastExpression	( ushort ) ( glyph_length + 4 )		3207195	0					
ANR	3207507	CastTarget	ushort		3207195	0					
ANR	3207508	AdditiveExpression	glyph_length + 4		3207195	1		+			
ANR	3207509	Identifier	glyph_length		3207195	0					
ANR	3207510	PrimaryExpression	4		3207195	1					
ANR	3207511	ExpressionStatement	"store_word ( & q , chId )"	534:8:16094:16114	3207195	6	True				
ANR	3207512	CallExpression	"store_word ( & q , chId )"		3207195	0					
ANR	3207513	Callee	store_word		3207195	0					
ANR	3207514	Identifier	store_word		3207195	0					
ANR	3207515	ArgumentList	& q		3207195	1					
ANR	3207516	Argument	& q		3207195	0					
ANR	3207517	UnaryOperationExpression	& q		3207195	0					
ANR	3207518	UnaryOperator	&		3207195	0					
ANR	3207519	Identifier	q		3207195	1					
ANR	3207520	Argument	chId		3207195	1					
ANR	3207521	Identifier	chId		3207195	0					
ANR	3207522	IfStatement	"if ( ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1 )"		3207195	15					
ANR	3207523	Condition	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1"	536:8:16130:16193	3207195	0	True				
ANR	3207524	EqualityExpression	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length ) == ( ushort ) - 1"		3207195	0		==			
ANR	3207525	CallExpression	"ff -> get_glyph ( ff , chId , ( LPUB8 ) q , glyph_length )"		3207195	0					
ANR	3207526	Callee	ff -> get_glyph		3207195	0					
ANR	3207527	PtrMemberAccess	ff -> get_glyph		3207195	0					
ANR	3207528	Identifier	ff		3207195	0					
ANR	3207529	Identifier	get_glyph		3207195	1					
ANR	3207530	ArgumentList	ff		3207195	1					
ANR	3207531	Argument	ff		3207195	0					
ANR	3207532	Identifier	ff		3207195	0					
ANR	3207533	Argument	chId		3207195	1					
ANR	3207534	Identifier	chId		3207195	0					
ANR	3207535	Argument	( LPUB8 ) q		3207195	2					
ANR	3207536	CastExpression	( LPUB8 ) q		3207195	0					
ANR	3207537	CastTarget	LPUB8		3207195	0					
ANR	3207538	Identifier	q		3207195	1					
ANR	3207539	Argument	glyph_length		3207195	3					
ANR	3207540	Identifier	glyph_length		3207195	0					
ANR	3207541	CastExpression	( ushort ) - 1		3207195	1					
ANR	3207542	CastTarget	ushort		3207195	0					
ANR	3207543	UnaryOperationExpression	- 1		3207195	1					
ANR	3207544	UnaryOperator	-		3207195	0					
ANR	3207545	PrimaryExpression	1		3207195	1					
ANR	3207546	CompoundStatement		55:74:1966:1966	3207195	1					
ANR	3207547	ExpressionStatement	r -> callback_error = gs_error_invalidfont	537:8:16206:16246	3207195	0	True				
ANR	3207548	AssignmentExpression	r -> callback_error = gs_error_invalidfont		3207195	0		=			
ANR	3207549	PtrMemberAccess	r -> callback_error		3207195	0					
ANR	3207550	Identifier	r		3207195	0					
ANR	3207551	Identifier	callback_error		3207195	1					
ANR	3207552	Identifier	gs_error_invalidfont		3207195	1					
ANR	3207553	ReturnStatement	return 0 ;	538:8:16256:16264	3207195	1	True				
ANR	3207554	PrimaryExpression	0		3207195	0					
ANR	3207555	ExpressionStatement	q += glyph_length	540:4:16276:16293	3207195	16	True				
ANR	3207556	AssignmentExpression	q += glyph_length		3207195	0		+=			
ANR	3207557	Identifier	q		3207195	0					
ANR	3207558	Identifier	glyph_length		3207195	1					
ANR	3207559	ExpressionStatement	"store_word ( & q , 0 )"	541:4:16299:16316	3207195	17	True				
ANR	3207560	CallExpression	"store_word ( & q , 0 )"		3207195	0					
ANR	3207561	Callee	store_word		3207195	0					
ANR	3207562	Identifier	store_word		3207195	0					
ANR	3207563	ArgumentList	& q		3207195	1					
ANR	3207564	Argument	& q		3207195	0					
ANR	3207565	UnaryOperationExpression	& q		3207195	0					
ANR	3207566	UnaryOperator	&		3207195	0					
ANR	3207567	Identifier	q		3207195	1					
ANR	3207568	Argument	0		3207195	1					
ANR	3207569	PrimaryExpression	0		3207195	0					
ANR	3207570	ReturnStatement	return ( LPUB8 ) h ;	542:4:16346:16362	3207195	18	True				
ANR	3207571	CastExpression	( LPUB8 ) h		3207195	0					
ANR	3207572	CastTarget	LPUB8		3207195	0					
ANR	3207573	Identifier	h		3207195	1					
ANR	3207574	ReturnType	static LPUB8		3207195	1					
ANR	3207575	Identifier	get_TT_glyph		3207195	2					
ANR	3207576	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId"		3207195	3					
ANR	3207577	Parameter	fapi_ufst_server * r	481:13:14177:14196	3207195	0	True				
ANR	3207578	ParameterType	fapi_ufst_server *		3207195	0					
ANR	3207579	Identifier	r		3207195	1					
ANR	3207580	Parameter	gs_fapi_font * ff	481:35:14199:14215	3207195	1	True				
ANR	3207581	ParameterType	gs_fapi_font *		3207195	0					
ANR	3207582	Identifier	ff		3207195	1					
ANR	3207583	Parameter	UW16 chId	481:54:14218:14226	3207195	2	True				
ANR	3207584	ParameterType	UW16		3207195	0					
ANR	3207585	Identifier	chId		3207195	1					
ANR	3207586	CFGEntryNode	ENTRY		3207195		True				
ANR	3207587	CFGExitNode	EXIT		3207195		True				
ANR	3207588	Symbol	ff		3207195						
ANR	3207589	Symbol	r -> aw_x		3207195						
ANR	3207590	Symbol	r -> mem		3207195						
ANR	3207591	Symbol	h -> h . descriptorsize		3207195						
ANR	3207592	Symbol	r -> If . frac_shift		3207195						
ANR	3207593	Symbol	glyph_length		3207195						
ANR	3207594	Symbol	& h -> charDataSize		3207195						
ANR	3207595	Symbol	chId		3207195						
ANR	3207596	Symbol	h -> h . continuation		3207195						
ANR	3207597	Symbol	g -> chId		3207195						
ANR	3207598	Symbol	d -> glyphs		3207195						
ANR	3207599	Symbol	h -> add_data		3207195						
ANR	3207600	Symbol	ff -> get_glyph		3207195						
ANR	3207601	Symbol	h -> h . ch_class		3207195						
ANR	3207602	Symbol	gs_error_invalidfont		3207195						
ANR	3207603	Symbol	g -> next		3207195						
ANR	3207604	Symbol	h -> h		3207195						
ANR	3207605	Symbol	r -> callback_error		3207195						
ANR	3207606	Symbol	d		3207195						
ANR	3207607	Symbol	* ff		3207195						
ANR	3207608	Symbol	r -> fc		3207195						
ANR	3207609	Symbol	r -> If		3207195						
ANR	3207610	Symbol	g		3207195						
ANR	3207611	Symbol	h		3207195						
ANR	3207612	Symbol	* d		3207195						
ANR	3207613	Symbol	use_XL_format		3207195						
ANR	3207614	Symbol	q		3207195						
ANR	3207615	Symbol	gs_error_VMerror		3207195						
ANR	3207616	Symbol	* g		3207195						
ANR	3207617	Symbol	r		3207195						
ANR	3207618	Symbol	gs_malloc		3207195						
ANR	3207619	Symbol	* h		3207195						
ANR	3207620	Symbol	r -> sb_x		3207195						
ANR	3207621	Symbol	& q		3207195						
ANR	3207622	Symbol	h -> h . format		3207195						
ANR	3207623	Symbol	r -> fc . font_hdr		3207195						
ANR	3207624	Symbol	* r		3207195						
ANR	3207625	Symbol	ff -> is_mtx_skipped		3207195						
ANR	3207626	Function	get_T1_glyph	554:0:16770:20305							
ANR	3207627	FunctionDef	"get_T1_glyph (fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId)"		3207626	0					
ANR	3207628	CompoundStatement		556:0:16848:20305	3207626	0					
ANR	3207629	IdentifierDeclStatement	"ushort glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 ) ;"	559:4:16924:16975	3207626	0	True				
ANR	3207630	IdentifierDecl	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		3207626	0					
ANR	3207631	IdentifierDeclType	ushort		3207626	0					
ANR	3207632	Identifier	glyph_length		3207626	1					
ANR	3207633	AssignmentExpression	"glyph_length = ff -> get_glyph ( ff , chId , 0 , 0 )"		3207626	2		=			
ANR	3207634	Identifier	glyph_length		3207626	0					
ANR	3207635	CallExpression	"ff -> get_glyph ( ff , chId , 0 , 0 )"		3207626	1					
ANR	3207636	Callee	ff -> get_glyph		3207626	0					
ANR	3207637	PtrMemberAccess	ff -> get_glyph		3207626	0					
ANR	3207638	Identifier	ff		3207626	0					
ANR	3207639	Identifier	get_glyph		3207626	1					
ANR	3207640	ArgumentList	ff		3207626	1					
ANR	3207641	Argument	ff		3207626	0					
ANR	3207642	Identifier	ff		3207626	0					
ANR	3207643	Argument	chId		3207626	1					
ANR	3207644	Identifier	chId		3207626	0					
ANR	3207645	Argument	0		3207626	2					
ANR	3207646	PrimaryExpression	0		3207626	0					
ANR	3207647	Argument	0		3207626	3					
ANR	3207648	PrimaryExpression	0		3207626	0					
ANR	3207649	IdentifierDeclStatement	CDATASTR charstring ;	560:4:16981:17000	3207626	1	True				
ANR	3207650	IdentifierDecl	charstring		3207626	0					
ANR	3207651	IdentifierDeclType	CDATASTR		3207626	0					
ANR	3207652	Identifier	charstring		3207626	1					
ANR	3207653	IdentifierDeclStatement	PCDATASTR_DEMO pcharstring ;	561:4:17006:17032	3207626	2	True				
ANR	3207654	IdentifierDecl	pcharstring		3207626	0					
ANR	3207655	IdentifierDeclType	PCDATASTR_DEMO		3207626	0					
ANR	3207656	Identifier	pcharstring		3207626	1					
ANR	3207657	IdentifierDeclStatement	byte * cstring ;	562:4:17038:17051	3207626	3	True				
ANR	3207658	IdentifierDecl	* cstring		3207626	0					
ANR	3207659	IdentifierDeclType	byte *		3207626	0					
ANR	3207660	Identifier	cstring		3207626	1					
ANR	3207661	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	563:4:17057:17128	3207626	4	True				
ANR	3207662	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207626	0					
ANR	3207663	IdentifierDeclType	ufst_common_font_data *		3207626	0					
ANR	3207664	Identifier	d		3207626	1					
ANR	3207665	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207626	2		=			
ANR	3207666	Identifier	d		3207626	0					
ANR	3207667	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207626	1		-			
ANR	3207668	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		3207626	0					
ANR	3207669	CastTarget	ufst_common_font_data *		3207626	0					
ANR	3207670	MemberAccess	r -> fc . font_hdr		3207626	1					
ANR	3207671	PtrMemberAccess	r -> fc		3207626	0					
ANR	3207672	Identifier	r		3207626	0					
ANR	3207673	Identifier	fc		3207626	1					
ANR	3207674	Identifier	font_hdr		3207626	1					
ANR	3207675	PrimaryExpression	1		3207626	1					
ANR	3207676	IdentifierDeclStatement	MEM_HANDLE hndl ;	564:4:17134:17149	3207626	5	True				
ANR	3207677	IdentifierDecl	hndl		3207626	0					
ANR	3207678	IdentifierDeclType	MEM_HANDLE		3207626	0					
ANR	3207679	Identifier	hndl		3207626	1					
ANR	3207680	ExpressionStatement	FSA_FROM_SERVER	566:4:17156:17171	3207626	6	True				
ANR	3207681	Identifier	FSA_FROM_SERVER		3207626	0					
ANR	3207682	ExpressionStatement	d -> glyphs = NULL	568:4:17178:17194	3207626	7	True				
ANR	3207683	AssignmentExpression	d -> glyphs = NULL		3207626	0		=			
ANR	3207684	PtrMemberAccess	d -> glyphs		3207626	0					
ANR	3207685	Identifier	d		3207626	0					
ANR	3207686	Identifier	glyphs		3207626	1					
ANR	3207687	Identifier	NULL		3207626	1					
ANR	3207688	ExpressionStatement	charstring . len = glyph_length	570:4:17201:17230	3207626	8	True				
ANR	3207689	AssignmentExpression	charstring . len = glyph_length		3207626	0		=			
ANR	3207690	MemberAccess	charstring . len		3207626	0					
ANR	3207691	Identifier	charstring		3207626	0					
ANR	3207692	Identifier	len		3207626	1					
ANR	3207693	Identifier	glyph_length		3207626	1					
ANR	3207694	ExpressionStatement	charstring . hdata = BUFalloc ( charstring . len )	571:4:17236:17279	3207626	9	True				
ANR	3207695	AssignmentExpression	charstring . hdata = BUFalloc ( charstring . len )		3207626	0		=			
ANR	3207696	MemberAccess	charstring . hdata		3207626	0					
ANR	3207697	Identifier	charstring		3207626	0					
ANR	3207698	Identifier	hdata		3207626	1					
ANR	3207699	CallExpression	BUFalloc ( charstring . len )		3207626	1					
ANR	3207700	Callee	BUFalloc		3207626	0					
ANR	3207701	Identifier	BUFalloc		3207626	0					
ANR	3207702	ArgumentList	charstring . len		3207626	1					
ANR	3207703	Argument	charstring . len		3207626	0					
ANR	3207704	MemberAccess	charstring . len		3207626	0					
ANR	3207705	Identifier	charstring		3207626	0					
ANR	3207706	Identifier	len		3207626	1					
ANR	3207707	IfStatement	if ( ! charstring . hdata )		3207626	10					
ANR	3207708	Condition	! charstring . hdata	572:8:17289:17305	3207626	0	True				
ANR	3207709	UnaryOperationExpression	! charstring . hdata		3207626	0					
ANR	3207710	UnaryOperator	!		3207626	0					
ANR	3207711	MemberAccess	charstring . hdata		3207626	1					
ANR	3207712	Identifier	charstring		3207626	0					
ANR	3207713	Identifier	hdata		3207626	1					
ANR	3207714	CompoundStatement		17:27:459:459	3207626	1					
ANR	3207715	ExpressionStatement	r -> callback_error = gs_error_VMerror	573:8:17318:17354	3207626	0	True				
ANR	3207716	AssignmentExpression	r -> callback_error = gs_error_VMerror		3207626	0		=			
ANR	3207717	PtrMemberAccess	r -> callback_error		3207626	0					
ANR	3207718	Identifier	r		3207626	0					
ANR	3207719	Identifier	callback_error		3207626	1					
ANR	3207720	Identifier	gs_error_VMerror		3207626	1					
ANR	3207721	ReturnStatement	return ( NULL ) ;	574:8:17364:17377	3207626	1	True				
ANR	3207722	Identifier	NULL		3207626	0					
ANR	3207723	ExpressionStatement	cstring = ( unsigned char * ) MEMptr ( charstring . hdata )	577:4:17390:17441	3207626	11	True				
ANR	3207724	AssignmentExpression	cstring = ( unsigned char * ) MEMptr ( charstring . hdata )		3207626	0		=			
ANR	3207725	Identifier	cstring		3207626	0					
ANR	3207726	CastExpression	( unsigned char * ) MEMptr ( charstring . hdata )		3207626	1					
ANR	3207727	CastTarget	unsigned char *		3207626	0					
ANR	3207728	CallExpression	MEMptr ( charstring . hdata )		3207626	1					
ANR	3207729	Callee	MEMptr		3207626	0					
ANR	3207730	Identifier	MEMptr		3207626	0					
ANR	3207731	ArgumentList	charstring . hdata		3207626	1					
ANR	3207732	Argument	charstring . hdata		3207626	0					
ANR	3207733	MemberAccess	charstring . hdata		3207626	0					
ANR	3207734	Identifier	charstring		3207626	0					
ANR	3207735	Identifier	hdata		3207626	1					
ANR	3207736	IfStatement	"if ( ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length )"		3207626	12					
ANR	3207737	Condition	"ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length"	579:8:17452:17513	3207626	0	True				
ANR	3207738	EqualityExpression	"ff -> get_glyph ( ff , chId , cstring , glyph_length ) != glyph_length"		3207626	0		!=			
ANR	3207739	CallExpression	"ff -> get_glyph ( ff , chId , cstring , glyph_length )"		3207626	0					
ANR	3207740	Callee	ff -> get_glyph		3207626	0					
ANR	3207741	PtrMemberAccess	ff -> get_glyph		3207626	0					
ANR	3207742	Identifier	ff		3207626	0					
ANR	3207743	Identifier	get_glyph		3207626	1					
ANR	3207744	ArgumentList	ff		3207626	1					
ANR	3207745	Argument	ff		3207626	0					
ANR	3207746	Identifier	ff		3207626	0					
ANR	3207747	Argument	chId		3207626	1					
ANR	3207748	Identifier	chId		3207626	0					
ANR	3207749	Argument	cstring		3207626	2					
ANR	3207750	Identifier	cstring		3207626	0					
ANR	3207751	Argument	glyph_length		3207626	3					
ANR	3207752	Identifier	glyph_length		3207626	0					
ANR	3207753	Identifier	glyph_length		3207626	1					
ANR	3207754	CompoundStatement		24:72:667:667	3207626	1					
ANR	3207755	ExpressionStatement	r -> callback_error = gs_error_VMerror	580:8:17526:17562	3207626	0	True				
ANR	3207756	AssignmentExpression	r -> callback_error = gs_error_VMerror		3207626	0		=			
ANR	3207757	PtrMemberAccess	r -> callback_error		3207626	0					
ANR	3207758	Identifier	r		3207626	0					
ANR	3207759	Identifier	callback_error		3207626	1					
ANR	3207760	Identifier	gs_error_VMerror		3207626	1					
ANR	3207761	ExpressionStatement	BUFfree ( charstring . hdata )	581:8:17572:17597	3207626	1	True				
ANR	3207762	CallExpression	BUFfree ( charstring . hdata )		3207626	0					
ANR	3207763	Callee	BUFfree		3207626	0					
ANR	3207764	Identifier	BUFfree		3207626	0					
ANR	3207765	ArgumentList	charstring . hdata		3207626	1					
ANR	3207766	Argument	charstring . hdata		3207626	0					
ANR	3207767	MemberAccess	charstring . hdata		3207626	0					
ANR	3207768	Identifier	charstring		3207626	0					
ANR	3207769	Identifier	hdata		3207626	1					
ANR	3207770	ReturnStatement	return ( NULL ) ;	582:8:17607:17620	3207626	2	True				
ANR	3207771	Identifier	NULL		3207626	0					
ANR	3207772	ExpressionStatement	hndl = BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )	585:4:17633:17678	3207626	13	True				
ANR	3207773	AssignmentExpression	hndl = BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )		3207626	0		=			
ANR	3207774	Identifier	hndl		3207626	0					
ANR	3207775	CallExpression	BUFalloc ( FSA ( SL32 ) ( sizeof ( CDATASTR ) ) )		3207626	1					
ANR	3207776	Callee	BUFalloc		3207626	0					
ANR	3207777	Identifier	BUFalloc		3207626	0					
ANR	3207778	ArgumentList	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		3207626	1					
ANR	3207779	Argument	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		3207626	0					
ANR	3207780	CallExpression	FSA ( SL32 ) ( sizeof ( CDATASTR ) )		3207626	0					
ANR	3207781	Callee	FSA ( SL32 )		3207626	0					
ANR	3207782	CallExpression	FSA ( SL32 )		3207626	0					
ANR	3207783	Callee	FSA		3207626	0					
ANR	3207784	Identifier	FSA		3207626	0					
ANR	3207785	ArgumentList	SL32		3207626	1					
ANR	3207786	Argument	SL32		3207626	0					
ANR	3207787	Identifier	SL32		3207626	0					
ANR	3207788	ArgumentList	sizeof ( CDATASTR )		3207626	1					
ANR	3207789	Argument	sizeof ( CDATASTR )		3207626	0					
ANR	3207790	SizeofExpression	sizeof ( CDATASTR )		3207626	0					
ANR	3207791	Sizeof	sizeof		3207626	0					
ANR	3207792	SizeofOperand	CDATASTR		3207626	1					
ANR	3207793	IfStatement	if ( ! hndl )		3207626	14					
ANR	3207794	Condition	! hndl	586:8:17688:17692	3207626	0	True				
ANR	3207795	UnaryOperationExpression	! hndl		3207626	0					
ANR	3207796	UnaryOperator	!		3207626	0					
ANR	3207797	Identifier	hndl		3207626	1					
ANR	3207798	CompoundStatement		31:15:846:846	3207626	1					
ANR	3207799	ExpressionStatement	r -> callback_error = gs_error_VMerror	587:8:17705:17741	3207626	0	True				
ANR	3207800	AssignmentExpression	r -> callback_error = gs_error_VMerror		3207626	0		=			
ANR	3207801	PtrMemberAccess	r -> callback_error		3207626	0					
ANR	3207802	Identifier	r		3207626	0					
ANR	3207803	Identifier	callback_error		3207626	1					
ANR	3207804	Identifier	gs_error_VMerror		3207626	1					
ANR	3207805	ExpressionStatement	BUFfree ( charstring . hdata )	588:8:17751:17776	3207626	1	True				
ANR	3207806	CallExpression	BUFfree ( charstring . hdata )		3207626	0					
ANR	3207807	Callee	BUFfree		3207626	0					
ANR	3207808	Identifier	BUFfree		3207626	0					
ANR	3207809	ArgumentList	charstring . hdata		3207626	1					
ANR	3207810	Argument	charstring . hdata		3207626	0					
ANR	3207811	MemberAccess	charstring . hdata		3207626	0					
ANR	3207812	Identifier	charstring		3207626	0					
ANR	3207813	Identifier	hdata		3207626	1					
ANR	3207814	ReturnStatement	return ( NULL ) ;	589:8:17786:17799	3207626	2	True				
ANR	3207815	Identifier	NULL		3207626	0					
ANR	3207816	ExpressionStatement	pcharstring = ( PCDATASTR_DEMO ) MEMptr ( hndl )	592:4:17812:17855	3207626	15	True				
ANR	3207817	AssignmentExpression	pcharstring = ( PCDATASTR_DEMO ) MEMptr ( hndl )		3207626	0		=			
ANR	3207818	Identifier	pcharstring		3207626	0					
ANR	3207819	CastExpression	( PCDATASTR_DEMO ) MEMptr ( hndl )		3207626	1					
ANR	3207820	CastTarget	PCDATASTR_DEMO		3207626	0					
ANR	3207821	CallExpression	MEMptr ( hndl )		3207626	1					
ANR	3207822	Callee	MEMptr		3207626	0					
ANR	3207823	Identifier	MEMptr		3207626	0					
ANR	3207824	ArgumentList	hndl		3207626	1					
ANR	3207825	Argument	hndl		3207626	0					
ANR	3207826	Identifier	hndl		3207626	0					
ANR	3207827	ExpressionStatement	pcharstring -> len = charstring . len	594:4:17862:17895	3207626	16	True				
ANR	3207828	AssignmentExpression	pcharstring -> len = charstring . len		3207626	0		=			
ANR	3207829	PtrMemberAccess	pcharstring -> len		3207626	0					
ANR	3207830	Identifier	pcharstring		3207626	0					
ANR	3207831	Identifier	len		3207626	1					
ANR	3207832	MemberAccess	charstring . len		3207626	1					
ANR	3207833	Identifier	charstring		3207626	0					
ANR	3207834	Identifier	len		3207626	1					
ANR	3207835	ExpressionStatement	pcharstring -> hdata = charstring . hdata	595:4:17916:17953	3207626	17	True				
ANR	3207836	AssignmentExpression	pcharstring -> hdata = charstring . hdata		3207626	0		=			
ANR	3207837	PtrMemberAccess	pcharstring -> hdata		3207626	0					
ANR	3207838	Identifier	pcharstring		3207626	0					
ANR	3207839	Identifier	hdata		3207626	1					
ANR	3207840	MemberAccess	charstring . hdata		3207626	1					
ANR	3207841	Identifier	charstring		3207626	0					
ANR	3207842	Identifier	hdata		3207626	1					
ANR	3207843	ExpressionStatement	pcharstring -> decrypted = 1	596:4:17959:17985	3207626	18	True				
ANR	3207844	AssignmentExpression	pcharstring -> decrypted = 1		3207626	0		=			
ANR	3207845	PtrMemberAccess	pcharstring -> decrypted		3207626	0					
ANR	3207846	Identifier	pcharstring		3207626	0					
ANR	3207847	Identifier	decrypted		3207626	1					
ANR	3207848	PrimaryExpression	1		3207626	1					
ANR	3207849	ReturnStatement	return ( ( LPUB8 ) pcharstring ) ;	598:4:17992:18020	3207626	19	True				
ANR	3207850	CastExpression	( LPUB8 ) pcharstring		3207626	0					
ANR	3207851	CastTarget	LPUB8		3207626	0					
ANR	3207852	Identifier	pcharstring		3207626	1					
ANR	3207853	ReturnType	static LPUB8		3207626	1					
ANR	3207854	Identifier	get_T1_glyph		3207626	2					
ANR	3207855	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UW16 chId"		3207626	3					
ANR	3207856	Parameter	fapi_ufst_server * r	555:13:16796:16815	3207626	0	True				
ANR	3207857	ParameterType	fapi_ufst_server *		3207626	0					
ANR	3207858	Identifier	r		3207626	1					
ANR	3207859	Parameter	gs_fapi_font * ff	555:35:16818:16834	3207626	1	True				
ANR	3207860	ParameterType	gs_fapi_font *		3207626	0					
ANR	3207861	Identifier	ff		3207626	1					
ANR	3207862	Parameter	UW16 chId	555:54:16837:16845	3207626	2	True				
ANR	3207863	ParameterType	UW16		3207626	0					
ANR	3207864	Identifier	chId		3207626	1					
ANR	3207865	CFGEntryNode	ENTRY		3207626		True				
ANR	3207866	CFGExitNode	EXIT		3207626		True				
ANR	3207867	Symbol	ff		3207626						
ANR	3207868	Symbol	* pcharstring		3207626						
ANR	3207869	Symbol	pcharstring -> len		3207626						
ANR	3207870	Symbol	charstring		3207626						
ANR	3207871	Symbol	charstring . hdata		3207626						
ANR	3207872	Symbol	pcharstring -> hdata		3207626						
ANR	3207873	Symbol	glyph_length		3207626						
ANR	3207874	Symbol	chId		3207626						
ANR	3207875	Symbol	MEMptr		3207626						
ANR	3207876	Symbol	d -> glyphs		3207626						
ANR	3207877	Symbol	charstring . len		3207626						
ANR	3207878	Symbol	FSA		3207626						
ANR	3207879	Symbol	ff -> get_glyph		3207626						
ANR	3207880	Symbol	SL32		3207626						
ANR	3207881	Symbol	NULL		3207626						
ANR	3207882	Symbol	r -> callback_error		3207626						
ANR	3207883	Symbol	pcharstring -> decrypted		3207626						
ANR	3207884	Symbol	d		3207626						
ANR	3207885	Symbol	* ff		3207626						
ANR	3207886	Symbol	r -> fc		3207626						
ANR	3207887	Symbol	cstring		3207626						
ANR	3207888	Symbol	* d		3207626						
ANR	3207889	Symbol	gs_error_VMerror		3207626						
ANR	3207890	Symbol	r		3207626						
ANR	3207891	Symbol	pcharstring		3207626						
ANR	3207892	Symbol	r -> fc . font_hdr		3207626						
ANR	3207893	Symbol	* r		3207626						
ANR	3207894	Symbol	hndl		3207626						
ANR	3207895	Symbol	BUFalloc		3207626						
ANR	3207896	Function	find_glyph	650:0:20308:20531							
ANR	3207897	FunctionDef	"find_glyph (ufst_common_font_data * d , UW16 chId)"		3207896	0					
ANR	3207898	CompoundStatement		652:0:20388:20531	3207896	0					
ANR	3207899	IdentifierDeclStatement	pcleo_glyph_list_elem * e ;	653:4:20394:20418	3207896	0	True				
ANR	3207900	IdentifierDecl	* e		3207896	0					
ANR	3207901	IdentifierDeclType	pcleo_glyph_list_elem *		3207896	0					
ANR	3207902	Identifier	e		3207896	1					
ANR	3207903	ForStatement	for ( e = d -> glyphs ; e != 0 ; e = e -> next )		3207896	1					
ANR	3207904	ForInit	e = d -> glyphs ;	655:9:20430:20443	3207896	0	True				
ANR	3207905	AssignmentExpression	e = d -> glyphs		3207896	0		=			
ANR	3207906	Identifier	e		3207896	0					
ANR	3207907	PtrMemberAccess	d -> glyphs		3207896	1					
ANR	3207908	Identifier	d		3207896	0					
ANR	3207909	Identifier	glyphs		3207896	1					
ANR	3207910	Condition	e != 0	655:24:20445:20450	3207896	1	True				
ANR	3207911	EqualityExpression	e != 0		3207896	0		!=			
ANR	3207912	Identifier	e		3207896	0					
ANR	3207913	PrimaryExpression	0		3207896	1					
ANR	3207914	AssignmentExpression	e = e -> next	655:32:20453:20463	3207896	2	True	=			
ANR	3207915	Identifier	e		3207896	0					
ANR	3207916	PtrMemberAccess	e -> next		3207896	1					
ANR	3207917	Identifier	e		3207896	0					
ANR	3207918	Identifier	next		3207896	1					
ANR	3207919	IfStatement	if ( e -> chId == chId )		3207896	3					
ANR	3207920	Condition	e -> chId == chId	656:12:20478:20492	3207896	0	True				
ANR	3207921	EqualityExpression	e -> chId == chId		3207896	0		==			
ANR	3207922	PtrMemberAccess	e -> chId		3207896	0					
ANR	3207923	Identifier	e		3207896	0					
ANR	3207924	Identifier	chId		3207896	1					
ANR	3207925	Identifier	chId		3207896	1					
ANR	3207926	ReturnStatement	return e ;	657:12:20507:20515	3207896	1	True				
ANR	3207927	Identifier	e		3207896	0					
ANR	3207928	ReturnStatement	return 0 ;	658:4:20521:20529	3207896	2	True				
ANR	3207929	PrimaryExpression	0		3207896	0					
ANR	3207930	ReturnType	static pcleo_glyph_list_elem *		3207896	1					
ANR	3207931	Identifier	find_glyph		3207896	2					
ANR	3207932	ParameterList	"ufst_common_font_data * d , UW16 chId"		3207896	3					
ANR	3207933	Parameter	ufst_common_font_data * d	651:11:20350:20374	3207896	0	True				
ANR	3207934	ParameterType	ufst_common_font_data *		3207896	0					
ANR	3207935	Identifier	d		3207896	1					
ANR	3207936	Parameter	UW16 chId	651:38:20377:20385	3207896	1	True				
ANR	3207937	ParameterType	UW16		3207896	0					
ANR	3207938	Identifier	chId		3207896	1					
ANR	3207939	CFGEntryNode	ENTRY		3207896		True				
ANR	3207940	CFGExitNode	EXIT		3207896		True				
ANR	3207941	Symbol	d -> glyphs		3207896						
ANR	3207942	Symbol	d		3207896						
ANR	3207943	Symbol	e		3207896						
ANR	3207944	Symbol	e -> next		3207896						
ANR	3207945	Symbol	chId		3207896						
ANR	3207946	Symbol	* d		3207896						
ANR	3207947	Symbol	* e		3207896						
ANR	3207948	Symbol	e -> chId		3207896						
ANR	3207949	Function	impl_PCLchId2ptr	662:0:20556:21195							
ANR	3207950	FunctionDef	impl_PCLchId2ptr (FSP UW16 chId)		3207949	0					
ANR	3207951	CompoundStatement		664:0:20601:21195	3207949	0					
ANR	3207952	IdentifierDeclStatement	fapi_ufst_server * r = IFS_to_I ( pIFS ) ;	666:4:20626:20662	3207949	0	True				
ANR	3207953	IdentifierDecl	* r = IFS_to_I ( pIFS )		3207949	0					
ANR	3207954	IdentifierDeclType	fapi_ufst_server *		3207949	0					
ANR	3207955	Identifier	r		3207949	1					
ANR	3207956	AssignmentExpression	* r = IFS_to_I ( pIFS )		3207949	2		=			
ANR	3207957	Identifier	r		3207949	0					
ANR	3207958	CallExpression	IFS_to_I ( pIFS )		3207949	1					
ANR	3207959	Callee	IFS_to_I		3207949	0					
ANR	3207960	Identifier	IFS_to_I		3207949	0					
ANR	3207961	ArgumentList	pIFS		3207949	1					
ANR	3207962	Argument	pIFS		3207949	0					
ANR	3207963	Identifier	pIFS		3207949	0					
ANR	3207964	IdentifierDeclStatement	gs_fapi_font * ff = r -> ff ;	670:4:20744:20768	3207949	1	True				
ANR	3207965	IdentifierDecl	* ff = r -> ff		3207949	0					
ANR	3207966	IdentifierDeclType	gs_fapi_font *		3207949	0					
ANR	3207967	Identifier	ff		3207949	1					
ANR	3207968	AssignmentExpression	* ff = r -> ff		3207949	2		=			
ANR	3207969	Identifier	ff		3207949	0					
ANR	3207970	PtrMemberAccess	r -> ff		3207949	1					
ANR	3207971	Identifier	r		3207949	0					
ANR	3207972	Identifier	ff		3207949	1					
ANR	3207973	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	671:4:20774:20845	3207949	2	True				
ANR	3207974	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207949	0					
ANR	3207975	IdentifierDeclType	ufst_common_font_data *		3207949	0					
ANR	3207976	Identifier	d		3207949	1					
ANR	3207977	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207949	2		=			
ANR	3207978	Identifier	d		3207949	0					
ANR	3207979	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		3207949	1		-			
ANR	3207980	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		3207949	0					
ANR	3207981	CastTarget	ufst_common_font_data *		3207949	0					
ANR	3207982	MemberAccess	r -> fc . font_hdr		3207949	1					
ANR	3207983	PtrMemberAccess	r -> fc		3207949	0					
ANR	3207984	Identifier	r		3207949	0					
ANR	3207985	Identifier	fc		3207949	1					
ANR	3207986	Identifier	font_hdr		3207949	1					
ANR	3207987	PrimaryExpression	1		3207949	1					
ANR	3207988	IdentifierDeclStatement	"pcleo_glyph_list_elem * g = find_glyph ( d , chId ) ;"	672:4:20851:20897	3207949	3	True				
ANR	3207989	IdentifierDecl	"* g = find_glyph ( d , chId )"		3207949	0					
ANR	3207990	IdentifierDeclType	pcleo_glyph_list_elem *		3207949	0					
ANR	3207991	Identifier	g		3207949	1					
ANR	3207992	AssignmentExpression	"* g = find_glyph ( d , chId )"		3207949	2		=			
ANR	3207993	Identifier	g		3207949	0					
ANR	3207994	CallExpression	"find_glyph ( d , chId )"		3207949	1					
ANR	3207995	Callee	find_glyph		3207949	0					
ANR	3207996	Identifier	find_glyph		3207949	0					
ANR	3207997	ArgumentList	d		3207949	1					
ANR	3207998	Argument	d		3207949	0					
ANR	3207999	Identifier	d		3207949	0					
ANR	3208000	Argument	chId		3207949	1					
ANR	3208001	Identifier	chId		3207949	0					
ANR	3208002	IdentifierDeclStatement	LPUB8 result = 0 ;	673:4:20903:20919	3207949	4	True				
ANR	3208003	IdentifierDecl	result = 0		3207949	0					
ANR	3208004	IdentifierDeclType	LPUB8		3207949	0					
ANR	3208005	Identifier	result		3207949	1					
ANR	3208006	AssignmentExpression	result = 0		3207949	2		=			
ANR	3208007	Identifier	result		3207949	0					
ANR	3208008	PrimaryExpression	0		3207949	1					
ANR	3208009	IfStatement	if ( g != 0 )		3207949	5					
ANR	3208010	Condition	g != 0	675:8:20930:20935	3207949	0	True				
ANR	3208011	EqualityExpression	g != 0		3207949	0		!=			
ANR	3208012	Identifier	g		3207949	0					
ANR	3208013	PrimaryExpression	0		3207949	1					
ANR	3208014	ExpressionStatement	result = ( LPUB8 ) ( g + 1 )	676:8:20946:20970	3207949	1	True				
ANR	3208015	AssignmentExpression	result = ( LPUB8 ) ( g + 1 )		3207949	0		=			
ANR	3208016	Identifier	result		3207949	0					
ANR	3208017	CastExpression	( LPUB8 ) ( g + 1 )		3207949	1					
ANR	3208018	CastTarget	LPUB8		3207949	0					
ANR	3208019	AdditiveExpression	g + 1		3207949	1		+			
ANR	3208020	Identifier	g		3207949	0					
ANR	3208021	PrimaryExpression	1		3207949	1					
ANR	3208022	IfStatement	if ( ( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE )		3207949	6					
ANR	3208023	Condition	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE	677:8:20980:21028	3207949	0	True				
ANR	3208024	EqualityExpression	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_PST1_TYPE		3207949	0		==			
ANR	3208025	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		3207949	0		&			
ANR	3208026	MemberAccess	r -> fc . format		3207949	0					
ANR	3208027	PtrMemberAccess	r -> fc		3207949	0					
ANR	3208028	Identifier	r		3207949	0					
ANR	3208029	Identifier	fc		3207949	1					
ANR	3208030	Identifier	format		3207949	1					
ANR	3208031	Identifier	FC_FONTTYPE_MASK		3207949	1					
ANR	3208032	Identifier	FC_PST1_TYPE		3207949	1					
ANR	3208033	ExpressionStatement	"result = get_T1_glyph ( r , ff , chId )"	678:8:21039:21073	3207949	1	True				
ANR	3208034	AssignmentExpression	"result = get_T1_glyph ( r , ff , chId )"		3207949	0		=			
ANR	3208035	Identifier	result		3207949	0					
ANR	3208036	CallExpression	"get_T1_glyph ( r , ff , chId )"		3207949	1					
ANR	3208037	Callee	get_T1_glyph		3207949	0					
ANR	3208038	Identifier	get_T1_glyph		3207949	0					
ANR	3208039	ArgumentList	r		3207949	1					
ANR	3208040	Argument	r		3207949	0					
ANR	3208041	Identifier	r		3207949	0					
ANR	3208042	Argument	ff		3207949	1					
ANR	3208043	Identifier	ff		3207949	0					
ANR	3208044	Argument	chId		3207949	2					
ANR	3208045	Identifier	chId		3207949	0					
ANR	3208046	IfStatement	if ( ( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE )		3207949	7					
ANR	3208047	Condition	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE	679:8:21083:21129	3207949	0	True				
ANR	3208048	EqualityExpression	( r -> fc . format & FC_FONTTYPE_MASK ) == FC_TT_TYPE		3207949	0		==			
ANR	3208049	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		3207949	0		&			
ANR	3208050	MemberAccess	r -> fc . format		3207949	0					
ANR	3208051	PtrMemberAccess	r -> fc		3207949	0					
ANR	3208052	Identifier	r		3207949	0					
ANR	3208053	Identifier	fc		3207949	1					
ANR	3208054	Identifier	format		3207949	1					
ANR	3208055	Identifier	FC_FONTTYPE_MASK		3207949	1					
ANR	3208056	Identifier	FC_TT_TYPE		3207949	1					
ANR	3208057	ExpressionStatement	"result = get_TT_glyph ( r , ff , chId )"	680:8:21140:21174	3207949	1	True				
ANR	3208058	AssignmentExpression	"result = get_TT_glyph ( r , ff , chId )"		3207949	0		=			
ANR	3208059	Identifier	result		3207949	0					
ANR	3208060	CallExpression	"get_TT_glyph ( r , ff , chId )"		3207949	1					
ANR	3208061	Callee	get_TT_glyph		3207949	0					
ANR	3208062	Identifier	get_TT_glyph		3207949	0					
ANR	3208063	ArgumentList	r		3207949	1					
ANR	3208064	Argument	r		3207949	0					
ANR	3208065	Identifier	r		3207949	0					
ANR	3208066	Argument	ff		3207949	1					
ANR	3208067	Identifier	ff		3207949	0					
ANR	3208068	Argument	chId		3207949	2					
ANR	3208069	Identifier	chId		3207949	0					
ANR	3208070	ReturnStatement	return result ;	681:4:21180:21193	3207949	8	True				
ANR	3208071	Identifier	result		3207949	0					
ANR	3208072	ReturnType	static LPUB8		3207949	1					
ANR	3208073	Identifier	impl_PCLchId2ptr		3207949	2					
ANR	3208074	ParameterList	FSP UW16 chId		3207949	3					
ANR	3208075	Parameter	FSP UW16 chId	663:17:20586:20598	3207949	0	True				
ANR	3208076	ParameterType	FSP UW16		3207949	0					
ANR	3208077	Identifier	chId		3207949	1					
ANR	3208078	CFGEntryNode	ENTRY		3207949		True				
ANR	3208079	CFGExitNode	EXIT		3207949		True				
ANR	3208080	Symbol	ff		3207949						
ANR	3208081	Symbol	d		3207949						
ANR	3208082	Symbol	FC_TT_TYPE		3207949						
ANR	3208083	Symbol	r -> fc		3207949						
ANR	3208084	Symbol	g		3207949						
ANR	3208085	Symbol	FC_PST1_TYPE		3207949						
ANR	3208086	Symbol	r -> fc . format		3207949						
ANR	3208087	Symbol	chId		3207949						
ANR	3208088	Symbol	result		3207949						
ANR	3208089	Symbol	r		3207949						
ANR	3208090	Symbol	pIFS		3207949						
ANR	3208091	Symbol	IFS_to_I		3207949						
ANR	3208092	Symbol	FC_FONTTYPE_MASK		3207949						
ANR	3208093	Symbol	r -> ff		3207949						
ANR	3208094	Symbol	find_glyph		3207949						
ANR	3208095	Symbol	r -> fc . font_hdr		3207949						
ANR	3208096	Symbol	* r		3207949						
ANR	3208097	Symbol	get_T1_glyph		3207949						
ANR	3208098	Symbol	get_TT_glyph		3207949						
ANR	3208099	Function	pack_word	684:0:21198:21428							
ANR	3208100	FunctionDef	"pack_word (LPUB8 * p , UW16 v)"		3208099	0					
ANR	3208101	CompoundStatement		686:0:21246:21428	3208099	0					
ANR	3208102	IdentifierDeclStatement	LPUB8 q = ( LPUB8 ) & v ;	687:4:21252:21273	3208099	0	True				
ANR	3208103	IdentifierDecl	q = ( LPUB8 ) & v		3208099	0					
ANR	3208104	IdentifierDeclType	LPUB8		3208099	0					
ANR	3208105	Identifier	q		3208099	1					
ANR	3208106	AssignmentExpression	q = ( LPUB8 ) & v		3208099	2		=			
ANR	3208107	Identifier	q		3208099	0					
ANR	3208108	CastExpression	( LPUB8 ) & v		3208099	1					
ANR	3208109	CastTarget	LPUB8		3208099	0					
ANR	3208110	UnaryOperationExpression	& v		3208099	1					
ANR	3208111	UnaryOperator	&		3208099	0					
ANR	3208112	Identifier	v		3208099	1					
ANR	3208113	ExpressionStatement	( * p ) [ 1 ] = q [ 0 ]	690:4:21342:21356	3208099	1	True				
ANR	3208114	AssignmentExpression	( * p ) [ 1 ] = q [ 0 ]		3208099	0		=			
ANR	3208115	ArrayIndexing	( * p ) [ 1 ]		3208099	0					
ANR	3208116	UnaryOperationExpression	* p		3208099	0					
ANR	3208117	UnaryOperator	*		3208099	0					
ANR	3208118	Identifier	p		3208099	1					
ANR	3208119	PrimaryExpression	1		3208099	1					
ANR	3208120	ArrayIndexing	q [ 0 ]		3208099	1					
ANR	3208121	Identifier	q		3208099	0					
ANR	3208122	PrimaryExpression	0		3208099	1					
ANR	3208123	ExpressionStatement	( * p ) [ 0 ] = q [ 1 ]	691:4:21362:21376	3208099	2	True				
ANR	3208124	AssignmentExpression	( * p ) [ 0 ] = q [ 1 ]		3208099	0		=			
ANR	3208125	ArrayIndexing	( * p ) [ 0 ]		3208099	0					
ANR	3208126	UnaryOperationExpression	* p		3208099	0					
ANR	3208127	UnaryOperator	*		3208099	0					
ANR	3208128	Identifier	p		3208099	1					
ANR	3208129	PrimaryExpression	0		3208099	1					
ANR	3208130	ArrayIndexing	q [ 1 ]		3208099	1					
ANR	3208131	Identifier	q		3208099	0					
ANR	3208132	PrimaryExpression	1		3208099	1					
ANR	3208133	ExpressionStatement	* p += 2	695:4:21419:21426	3208099	3	True				
ANR	3208134	AssignmentExpression	* p += 2		3208099	0		+=			
ANR	3208135	UnaryOperationExpression	* p		3208099	0					
ANR	3208136	UnaryOperator	*		3208099	0					
ANR	3208137	Identifier	p		3208099	1					
ANR	3208138	PrimaryExpression	2		3208099	1					
ANR	3208139	ReturnType	static inline void		3208099	1					
ANR	3208140	Identifier	pack_word		3208099	2					
ANR	3208141	ParameterList	"LPUB8 * p , UW16 v"		3208099	3					
ANR	3208142	Parameter	LPUB8 * p	685:10:21227:21235	3208099	0	True				
ANR	3208143	ParameterType	LPUB8 *		3208099	0					
ANR	3208144	Identifier	p		3208099	1					
ANR	3208145	Parameter	UW16 v	685:21:21238:21243	3208099	1	True				
ANR	3208146	ParameterType	UW16		3208099	0					
ANR	3208147	Identifier	v		3208099	1					
ANR	3208148	CFGEntryNode	ENTRY		3208099		True				
ANR	3208149	CFGExitNode	EXIT		3208099		True				
ANR	3208150	Symbol	p		3208099						
ANR	3208151	Symbol	q		3208099						
ANR	3208152	Symbol	v		3208099						
ANR	3208153	Symbol	* p		3208099						
ANR	3208154	Symbol	* q		3208099						
ANR	3208155	Symbol	* * p		3208099						
ANR	3208156	Symbol	& v		3208099						
ANR	3208157	Function	pack_long	698:0:21431:21701							
ANR	3208158	FunctionDef	"pack_long (LPUB8 * p , UL32 v)"		3208157	0					
ANR	3208159	CompoundStatement		700:0:21479:21701	3208157	0					
ANR	3208160	IdentifierDeclStatement	LPUB8 q = ( LPUB8 ) & v ;	701:4:21485:21506	3208157	0	True				
ANR	3208161	IdentifierDecl	q = ( LPUB8 ) & v		3208157	0					
ANR	3208162	IdentifierDeclType	LPUB8		3208157	0					
ANR	3208163	Identifier	q		3208157	1					
ANR	3208164	AssignmentExpression	q = ( LPUB8 ) & v		3208157	2		=			
ANR	3208165	Identifier	q		3208157	0					
ANR	3208166	CastExpression	( LPUB8 ) & v		3208157	1					
ANR	3208167	CastTarget	LPUB8		3208157	0					
ANR	3208168	UnaryOperationExpression	& v		3208157	1					
ANR	3208169	UnaryOperator	&		3208157	0					
ANR	3208170	Identifier	v		3208157	1					
ANR	3208171	ExpressionStatement	( * p ) [ 3 ] = q [ 0 ]	704:4:21575:21589	3208157	1	True				
ANR	3208172	AssignmentExpression	( * p ) [ 3 ] = q [ 0 ]		3208157	0		=			
ANR	3208173	ArrayIndexing	( * p ) [ 3 ]		3208157	0					
ANR	3208174	UnaryOperationExpression	* p		3208157	0					
ANR	3208175	UnaryOperator	*		3208157	0					
ANR	3208176	Identifier	p		3208157	1					
ANR	3208177	PrimaryExpression	3		3208157	1					
ANR	3208178	ArrayIndexing	q [ 0 ]		3208157	1					
ANR	3208179	Identifier	q		3208157	0					
ANR	3208180	PrimaryExpression	0		3208157	1					
ANR	3208181	ExpressionStatement	( * p ) [ 2 ] = q [ 1 ]	705:4:21595:21609	3208157	2	True				
ANR	3208182	AssignmentExpression	( * p ) [ 2 ] = q [ 1 ]		3208157	0		=			
ANR	3208183	ArrayIndexing	( * p ) [ 2 ]		3208157	0					
ANR	3208184	UnaryOperationExpression	* p		3208157	0					
ANR	3208185	UnaryOperator	*		3208157	0					
ANR	3208186	Identifier	p		3208157	1					
ANR	3208187	PrimaryExpression	2		3208157	1					
ANR	3208188	ArrayIndexing	q [ 1 ]		3208157	1					
ANR	3208189	Identifier	q		3208157	0					
ANR	3208190	PrimaryExpression	1		3208157	1					
ANR	3208191	ExpressionStatement	( * p ) [ 1 ] = q [ 2 ]	706:4:21615:21629	3208157	3	True				
ANR	3208192	AssignmentExpression	( * p ) [ 1 ] = q [ 2 ]		3208157	0		=			
ANR	3208193	ArrayIndexing	( * p ) [ 1 ]		3208157	0					
ANR	3208194	UnaryOperationExpression	* p		3208157	0					
ANR	3208195	UnaryOperator	*		3208157	0					
ANR	3208196	Identifier	p		3208157	1					
ANR	3208197	PrimaryExpression	1		3208157	1					
ANR	3208198	ArrayIndexing	q [ 2 ]		3208157	1					
ANR	3208199	Identifier	q		3208157	0					
ANR	3208200	PrimaryExpression	2		3208157	1					
ANR	3208201	ExpressionStatement	( * p ) [ 0 ] = q [ 3 ]	707:4:21635:21649	3208157	4	True				
ANR	3208202	AssignmentExpression	( * p ) [ 0 ] = q [ 3 ]		3208157	0		=			
ANR	3208203	ArrayIndexing	( * p ) [ 0 ]		3208157	0					
ANR	3208204	UnaryOperationExpression	* p		3208157	0					
ANR	3208205	UnaryOperator	*		3208157	0					
ANR	3208206	Identifier	p		3208157	1					
ANR	3208207	PrimaryExpression	0		3208157	1					
ANR	3208208	ArrayIndexing	q [ 3 ]		3208157	1					
ANR	3208209	Identifier	q		3208157	0					
ANR	3208210	PrimaryExpression	3		3208157	1					
ANR	3208211	ExpressionStatement	* p += 4	711:4:21692:21699	3208157	5	True				
ANR	3208212	AssignmentExpression	* p += 4		3208157	0		+=			
ANR	3208213	UnaryOperationExpression	* p		3208157	0					
ANR	3208214	UnaryOperator	*		3208157	0					
ANR	3208215	Identifier	p		3208157	1					
ANR	3208216	PrimaryExpression	4		3208157	1					
ANR	3208217	ReturnType	static inline void		3208157	1					
ANR	3208218	Identifier	pack_long		3208157	2					
ANR	3208219	ParameterList	"LPUB8 * p , UL32 v"		3208157	3					
ANR	3208220	Parameter	LPUB8 * p	699:10:21460:21468	3208157	0	True				
ANR	3208221	ParameterType	LPUB8 *		3208157	0					
ANR	3208222	Identifier	p		3208157	1					
ANR	3208223	Parameter	UL32 v	699:21:21471:21476	3208157	1	True				
ANR	3208224	ParameterType	UL32		3208157	0					
ANR	3208225	Identifier	v		3208157	1					
ANR	3208226	CFGEntryNode	ENTRY		3208157		True				
ANR	3208227	CFGExitNode	EXIT		3208157		True				
ANR	3208228	Symbol	p		3208157						
ANR	3208229	Symbol	q		3208157						
ANR	3208230	Symbol	v		3208157						
ANR	3208231	Symbol	* p		3208157						
ANR	3208232	Symbol	* q		3208157						
ANR	3208233	Symbol	* * p		3208157						
ANR	3208234	Symbol	& v		3208157						
ANR	3208235	Function	pack_float	714:0:21704:21835							
ANR	3208236	FunctionDef	"pack_float (LPUB8 * p , float v)"		3208235	0					
ANR	3208237	CompoundStatement		716:0:21754:21835	3208235	0					
ANR	3208238	ExpressionStatement	"gs_sprintf ( ( char * ) ( * p ) , ""%f"" , v )"	717:4:21760:21793	3208235	0	True				
ANR	3208239	CallExpression	"gs_sprintf ( ( char * ) ( * p ) , ""%f"" , v )"		3208235	0					
ANR	3208240	Callee	gs_sprintf		3208235	0					
ANR	3208241	Identifier	gs_sprintf		3208235	0					
ANR	3208242	ArgumentList	( char * ) ( * p )		3208235	1					
ANR	3208243	Argument	( char * ) ( * p )		3208235	0					
ANR	3208244	CastExpression	( char * ) ( * p )		3208235	0					
ANR	3208245	CastTarget	char *		3208235	0					
ANR	3208246	UnaryOperationExpression	* p		3208235	1					
ANR	3208247	UnaryOperator	*		3208235	0					
ANR	3208248	Identifier	p		3208235	1					
ANR	3208249	Argument	"""%f"""		3208235	1					
ANR	3208250	PrimaryExpression	"""%f"""		3208235	0					
ANR	3208251	Argument	v		3208235	2					
ANR	3208252	Identifier	v		3208235	0					
ANR	3208253	ExpressionStatement	* p += strlen ( ( const char * ) * p ) + 1	718:4:21799:21833	3208235	1	True				
ANR	3208254	AssignmentExpression	* p += strlen ( ( const char * ) * p ) + 1		3208235	0		+=			
ANR	3208255	UnaryOperationExpression	* p		3208235	0					
ANR	3208256	UnaryOperator	*		3208235	0					
ANR	3208257	Identifier	p		3208235	1					
ANR	3208258	AdditiveExpression	strlen ( ( const char * ) * p ) + 1		3208235	1		+			
ANR	3208259	CallExpression	strlen ( ( const char * ) * p )		3208235	0					
ANR	3208260	Callee	strlen		3208235	0					
ANR	3208261	Identifier	strlen		3208235	0					
ANR	3208262	ArgumentList	( const char * ) * p		3208235	1					
ANR	3208263	Argument	( const char * ) * p		3208235	0					
ANR	3208264	CastExpression	( const char * ) * p		3208235	0					
ANR	3208265	CastTarget	const char *		3208235	0					
ANR	3208266	UnaryOperationExpression	* p		3208235	1					
ANR	3208267	UnaryOperator	*		3208235	0					
ANR	3208268	Identifier	p		3208235	1					
ANR	3208269	PrimaryExpression	1		3208235	1					
ANR	3208270	ReturnType	static inline void		3208235	1					
ANR	3208271	Identifier	pack_float		3208235	2					
ANR	3208272	ParameterList	"LPUB8 * p , float v"		3208235	3					
ANR	3208273	Parameter	LPUB8 * p	715:11:21734:21742	3208235	0	True				
ANR	3208274	ParameterType	LPUB8 *		3208235	0					
ANR	3208275	Identifier	p		3208235	1					
ANR	3208276	Parameter	float v	715:22:21745:21751	3208235	1	True				
ANR	3208277	ParameterType	float		3208235	0					
ANR	3208278	Identifier	v		3208235	1					
ANR	3208279	CFGEntryNode	ENTRY		3208235		True				
ANR	3208280	CFGExitNode	EXIT		3208235		True				
ANR	3208281	Symbol	p		3208235						
ANR	3208282	Symbol	strlen		3208235						
ANR	3208283	Symbol	v		3208235						
ANR	3208284	Symbol	* p		3208235						
ANR	3208285	Function	pack_pseo_word_array	726:0:22044:22455							
ANR	3208286	FunctionDef	"pack_pseo_word_array (fapi_ufst_server * r , gs_fapi_font * ff , UB8 * * p , UW16 max_count , gs_fapi_font_feature count_id , gs_fapi_font_feature array_id)"		3208285	0					
ANR	3208287	CompoundStatement		730:0:22248:22455	3208285	0					
ANR	3208288	IdentifierDeclStatement	"UW16 k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count ) , j ;"	731:4:22254:22311	3208285	0	True				
ANR	3208289	IdentifierDecl	"k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		3208285	0					
ANR	3208290	IdentifierDeclType	UW16		3208285	0					
ANR	3208291	Identifier	k		3208285	1					
ANR	3208292	AssignmentExpression	"k = min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		3208285	2		=			
ANR	3208293	Identifier	k		3208285	0					
ANR	3208294	CallExpression	"min ( ff -> get_word ( ff , count_id , 0 ) , max_count )"		3208285	1					
ANR	3208295	Callee	min		3208285	0					
ANR	3208296	Identifier	min		3208285	0					
ANR	3208297	ArgumentList	"ff -> get_word ( ff , count_id , 0 )"		3208285	1					
ANR	3208298	Argument	"ff -> get_word ( ff , count_id , 0 )"		3208285	0					
ANR	3208299	CallExpression	"ff -> get_word ( ff , count_id , 0 )"		3208285	0					
ANR	3208300	Callee	ff -> get_word		3208285	0					
ANR	3208301	PtrMemberAccess	ff -> get_word		3208285	0					
ANR	3208302	Identifier	ff		3208285	0					
ANR	3208303	Identifier	get_word		3208285	1					
ANR	3208304	ArgumentList	ff		3208285	1					
ANR	3208305	Argument	ff		3208285	0					
ANR	3208306	Identifier	ff		3208285	0					
ANR	3208307	Argument	count_id		3208285	1					
ANR	3208308	Identifier	count_id		3208285	0					
ANR	3208309	Argument	0		3208285	2					
ANR	3208310	PrimaryExpression	0		3208285	0					
ANR	3208311	Argument	max_count		3208285	1					
ANR	3208312	Identifier	max_count		3208285	0					
ANR	3208313	IdentifierDecl	j		3208285	1					
ANR	3208314	IdentifierDeclType	UW16		3208285	0					
ANR	3208315	Identifier	j		3208285	1					
ANR	3208316	ExpressionStatement	"pack_word ( p , k )"	733:4:22318:22333	3208285	1	True				
ANR	3208317	CallExpression	"pack_word ( p , k )"		3208285	0					
ANR	3208318	Callee	pack_word		3208285	0					
ANR	3208319	Identifier	pack_word		3208285	0					
ANR	3208320	ArgumentList	p		3208285	1					
ANR	3208321	Argument	p		3208285	0					
ANR	3208322	Identifier	p		3208285	0					
ANR	3208323	Argument	k		3208285	1					
ANR	3208324	Identifier	k		3208285	0					
ANR	3208325	ForStatement	for ( j = 0 ; j < k ; j ++ )		3208285	2					
ANR	3208326	ForInit	j = 0 ;	734:9:22344:22349	3208285	0	True				
ANR	3208327	AssignmentExpression	j = 0		3208285	0		=			
ANR	3208328	Identifier	j		3208285	0					
ANR	3208329	PrimaryExpression	0		3208285	1					
ANR	3208330	Condition	j < k	734:16:22351:22355	3208285	1	True				
ANR	3208331	RelationalExpression	j < k		3208285	0		<			
ANR	3208332	Identifier	j		3208285	0					
ANR	3208333	Identifier	k		3208285	1					
ANR	3208334	PostIncDecOperationExpression	j ++	734:23:22358:22360	3208285	2	True				
ANR	3208335	Identifier	j		3208285	0					
ANR	3208336	IncDec	++		3208285	1					
ANR	3208337	ExpressionStatement	"PACK_WORD ( * p , j , array_id )"	735:8:22371:22397	3208285	3	True				
ANR	3208338	CallExpression	"PACK_WORD ( * p , j , array_id )"		3208285	0					
ANR	3208339	Callee	PACK_WORD		3208285	0					
ANR	3208340	Identifier	PACK_WORD		3208285	0					
ANR	3208341	ArgumentList	* p		3208285	1					
ANR	3208342	Argument	* p		3208285	0					
ANR	3208343	UnaryOperationExpression	* p		3208285	0					
ANR	3208344	UnaryOperator	*		3208285	0					
ANR	3208345	Identifier	p		3208285	1					
ANR	3208346	Argument	j		3208285	1					
ANR	3208347	Identifier	j		3208285	0					
ANR	3208348	Argument	array_id		3208285	2					
ANR	3208349	Identifier	array_id		3208285	0					
ANR	3208350	ForStatement	for ( ; j < max_count ; j ++ )		3208285	3					
ANR	3208351	Condition	j < max_count	736:11:22410:22422	3208285	0	True				
ANR	3208352	RelationalExpression	j < max_count		3208285	0		<			
ANR	3208353	Identifier	j		3208285	0					
ANR	3208354	Identifier	max_count		3208285	1					
ANR	3208355	PostIncDecOperationExpression	j ++	736:26:22425:22427	3208285	1	True				
ANR	3208356	Identifier	j		3208285	0					
ANR	3208357	IncDec	++		3208285	1					
ANR	3208358	ExpressionStatement	"pack_word ( p , 0 )"	737:8:22438:22453	3208285	2	True				
ANR	3208359	CallExpression	"pack_word ( p , 0 )"		3208285	0					
ANR	3208360	Callee	pack_word		3208285	0					
ANR	3208361	Identifier	pack_word		3208285	0					
ANR	3208362	ArgumentList	p		3208285	1					
ANR	3208363	Argument	p		3208285	0					
ANR	3208364	Identifier	p		3208285	0					
ANR	3208365	Argument	0		3208285	1					
ANR	3208366	PrimaryExpression	0		3208285	0					
ANR	3208367	ReturnType	static void		3208285	1					
ANR	3208368	Identifier	pack_pseo_word_array		3208285	2					
ANR	3208369	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UB8 * * p , UW16 max_count , gs_fapi_font_feature count_id , gs_fapi_font_feature array_id"		3208285	3					
ANR	3208370	Parameter	fapi_ufst_server * r	727:21:22077:22096	3208285	0	True				
ANR	3208371	ParameterType	fapi_ufst_server *		3208285	0					
ANR	3208372	Identifier	r		3208285	1					
ANR	3208373	Parameter	gs_fapi_font * ff	727:43:22099:22115	3208285	1	True				
ANR	3208374	ParameterType	gs_fapi_font *		3208285	0					
ANR	3208375	Identifier	ff		3208285	1					
ANR	3208376	Parameter	UB8 * * p	727:62:22118:22125	3208285	2	True				
ANR	3208377	ParameterType	UB8 * *		3208285	0					
ANR	3208378	Identifier	p		3208285	1					
ANR	3208379	Parameter	UW16 max_count	728:21:22149:22162	3208285	3	True				
ANR	3208380	ParameterType	UW16		3208285	0					
ANR	3208381	Identifier	max_count		3208285	1					
ANR	3208382	Parameter	gs_fapi_font_feature count_id	728:37:22165:22193	3208285	4	True				
ANR	3208383	ParameterType	gs_fapi_font_feature		3208285	0					
ANR	3208384	Identifier	count_id		3208285	1					
ANR	3208385	Parameter	gs_fapi_font_feature array_id	729:21:22217:22245	3208285	5	True				
ANR	3208386	ParameterType	gs_fapi_font_feature		3208285	0					
ANR	3208387	Identifier	array_id		3208285	1					
ANR	3208388	CFGEntryNode	ENTRY		3208285		True				
ANR	3208389	CFGExitNode	EXIT		3208285		True				
ANR	3208390	Symbol	ff		3208285						
ANR	3208391	Symbol	p		3208285						
ANR	3208392	Symbol	max_count		3208285						
ANR	3208393	Symbol	array_id		3208285						
ANR	3208394	Symbol	r		3208285						
ANR	3208395	Symbol	min		3208285						
ANR	3208396	Symbol	* ff		3208285						
ANR	3208397	Symbol	ff -> get_word		3208285						
ANR	3208398	Symbol	count_id		3208285						
ANR	3208399	Symbol	j		3208285						
ANR	3208400	Symbol	* p		3208285						
ANR	3208401	Symbol	k		3208285						
ANR	3208402	Function	pack_pseo_fhdr	740:0:22458:26121							
ANR	3208403	FunctionDef	"pack_pseo_fhdr (fapi_ufst_server * r , gs_fapi_font * ff , UB8 * p)"		3208402	0					
ANR	3208404	CompoundStatement		742:0:22535:26121	3208402	0					
ANR	3208405	IdentifierDeclStatement	"ushort j , n , skip = 0 ;"	743:4:22541:22562	3208402	0	True				
ANR	3208406	IdentifierDecl	j		3208402	0					
ANR	3208407	IdentifierDeclType	ushort		3208402	0					
ANR	3208408	Identifier	j		3208402	1					
ANR	3208409	IdentifierDecl	n		3208402	1					
ANR	3208410	IdentifierDeclType	ushort		3208402	0					
ANR	3208411	Identifier	n		3208402	1					
ANR	3208412	IdentifierDecl	skip = 0		3208402	2					
ANR	3208413	IdentifierDeclType	ushort		3208402	0					
ANR	3208414	Identifier	skip		3208402	1					
ANR	3208415	AssignmentExpression	skip = 0		3208402	2		=			
ANR	3208416	Identifier	skip		3208402	0					
ANR	3208417	PrimaryExpression	0		3208402	1					
ANR	3208418	WhileStatement	while ( ( ( uint64_t ) p ) & 0x03 )		3208402	1					
ANR	3208419	Condition	( ( uint64_t ) p ) & 0x03	745:11:22576:22596	3208402	0	True				
ANR	3208420	BitAndExpression	( ( uint64_t ) p ) & 0x03		3208402	0		&			
ANR	3208421	CastExpression	( uint64_t ) p		3208402	0					
ANR	3208422	CastTarget	uint64_t		3208402	0					
ANR	3208423	Identifier	p		3208402	1					
ANR	3208424	PrimaryExpression	0x03		3208402	1					
ANR	3208425	ExpressionStatement	PACK_ZERO ( p )	746:8:22637:22649	3208402	1	True				
ANR	3208426	CallExpression	PACK_ZERO ( p )		3208402	0					
ANR	3208427	Callee	PACK_ZERO		3208402	0					
ANR	3208428	Identifier	PACK_ZERO		3208402	0					
ANR	3208429	ArgumentList	p		3208402	1					
ANR	3208430	Argument	p		3208402	0					
ANR	3208431	Identifier	p		3208402	0					
ANR	3208432	ExpressionStatement	"pack_long ( & p , 1 )"	748:4:22656:22672	3208402	2	True				
ANR	3208433	CallExpression	"pack_long ( & p , 1 )"		3208402	0					
ANR	3208434	Callee	pack_long		3208402	0					
ANR	3208435	Identifier	pack_long		3208402	0					
ANR	3208436	ArgumentList	& p		3208402	1					
ANR	3208437	Argument	& p		3208402	0					
ANR	3208438	UnaryOperationExpression	& p		3208402	0					
ANR	3208439	UnaryOperator	&		3208402	0					
ANR	3208440	Identifier	p		3208402	1					
ANR	3208441	Argument	1		3208402	1					
ANR	3208442	PrimaryExpression	1		3208402	0					
ANR	3208443	ForStatement	for ( j = 0 ; j < 6 ; j ++ )		3208402	3					
ANR	3208444	ForInit	j = 0 ;	749:9:22710:22715	3208402	0	True				
ANR	3208445	AssignmentExpression	j = 0		3208402	0		=			
ANR	3208446	Identifier	j		3208402	0					
ANR	3208447	PrimaryExpression	0		3208402	1					
ANR	3208448	Condition	j < 6	749:16:22717:22721	3208402	1	True				
ANR	3208449	RelationalExpression	j < 6		3208402	0		<			
ANR	3208450	Identifier	j		3208402	0					
ANR	3208451	PrimaryExpression	6		3208402	1					
ANR	3208452	PostIncDecOperationExpression	j ++	749:23:22724:22726	3208402	2	True				
ANR	3208453	Identifier	j		3208402	0					
ANR	3208454	IncDec	++		3208402	1					
ANR	3208455	ExpressionStatement	"pack_float ( & p , ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j ) )"	750:8:22737:22806	3208402	3	True				
ANR	3208456	CallExpression	"pack_float ( & p , ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j ) )"		3208402	0					
ANR	3208457	Callee	pack_float		3208402	0					
ANR	3208458	Identifier	pack_float		3208402	0					
ANR	3208459	ArgumentList	& p		3208402	1					
ANR	3208460	Argument	& p		3208402	0					
ANR	3208461	UnaryOperationExpression	& p		3208402	0					
ANR	3208462	UnaryOperator	&		3208402	0					
ANR	3208463	Identifier	p		3208402	1					
ANR	3208464	Argument	"ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j )"		3208402	1					
ANR	3208465	CallExpression	"ff -> get_float ( ff , gs_fapi_font_feature_FontMatrix , j )"		3208402	0					
ANR	3208466	Callee	ff -> get_float		3208402	0					
ANR	3208467	PtrMemberAccess	ff -> get_float		3208402	0					
ANR	3208468	Identifier	ff		3208402	0					
ANR	3208469	Identifier	get_float		3208402	1					
ANR	3208470	ArgumentList	ff		3208402	1					
ANR	3208471	Argument	ff		3208402	0					
ANR	3208472	Identifier	ff		3208402	0					
ANR	3208473	Argument	gs_fapi_font_feature_FontMatrix		3208402	1					
ANR	3208474	Identifier	gs_fapi_font_feature_FontMatrix		3208402	0					
ANR	3208475	Argument	j		3208402	2					
ANR	3208476	Identifier	j		3208402	0					
ANR	3208477	WhileStatement	while ( ( ( uint64_t ) p ) & 0x03 )		3208402	4					
ANR	3208478	Condition	( ( uint64_t ) p ) & 0x03	751:11:22819:22839	3208402	0	True				
ANR	3208479	BitAndExpression	( ( uint64_t ) p ) & 0x03		3208402	0		&			
ANR	3208480	CastExpression	( uint64_t ) p		3208402	0					
ANR	3208481	CastTarget	uint64_t		3208402	0					
ANR	3208482	Identifier	p		3208402	1					
ANR	3208483	PrimaryExpression	0x03		3208402	1					
ANR	3208484	ExpressionStatement	PACK_ZERO ( p )	752:8:22880:22892	3208402	1	True				
ANR	3208485	CallExpression	PACK_ZERO ( p )		3208402	0					
ANR	3208486	Callee	PACK_ZERO		3208402	0					
ANR	3208487	Identifier	PACK_ZERO		3208402	0					
ANR	3208488	ArgumentList	p		3208402	1					
ANR	3208489	Argument	p		3208402	0					
ANR	3208490	Identifier	p		3208402	0					
ANR	3208491	ExpressionStatement	"PACK_LONG ( p , 0 , gs_fapi_font_feature_UniqueID )"	754:4:22980:23026	3208402	5	True				
ANR	3208492	CallExpression	"PACK_LONG ( p , 0 , gs_fapi_font_feature_UniqueID )"		3208402	0					
ANR	3208493	Callee	PACK_LONG		3208402	0					
ANR	3208494	Identifier	PACK_LONG		3208402	0					
ANR	3208495	ArgumentList	p		3208402	1					
ANR	3208496	Argument	p		3208402	0					
ANR	3208497	Identifier	p		3208402	0					
ANR	3208498	Argument	0		3208402	1					
ANR	3208499	PrimaryExpression	0		3208402	0					
ANR	3208500	Argument	gs_fapi_font_feature_UniqueID		3208402	2					
ANR	3208501	Identifier	gs_fapi_font_feature_UniqueID		3208402	0					
ANR	3208502	ExpressionStatement	"PACK_LONG ( p , 0 , gs_fapi_font_feature_BlueScale )"	755:4:23032:23079	3208402	6	True				
ANR	3208503	CallExpression	"PACK_LONG ( p , 0 , gs_fapi_font_feature_BlueScale )"		3208402	0					
ANR	3208504	Callee	PACK_LONG		3208402	0					
ANR	3208505	Identifier	PACK_LONG		3208402	0					
ANR	3208506	ArgumentList	p		3208402	1					
ANR	3208507	Argument	p		3208402	0					
ANR	3208508	Identifier	p		3208402	0					
ANR	3208509	Argument	0		3208402	1					
ANR	3208510	PrimaryExpression	0		3208402	0					
ANR	3208511	Argument	gs_fapi_font_feature_BlueScale		3208402	2					
ANR	3208512	Identifier	gs_fapi_font_feature_BlueScale		3208402	0					
ANR	3208513	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_Weight )"	756:4:23085:23129	3208402	7	True				
ANR	3208514	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_Weight )"		3208402	0					
ANR	3208515	Callee	PACK_WORD		3208402	0					
ANR	3208516	Identifier	PACK_WORD		3208402	0					
ANR	3208517	ArgumentList	p		3208402	1					
ANR	3208518	Argument	p		3208402	0					
ANR	3208519	Identifier	p		3208402	0					
ANR	3208520	Argument	0		3208402	1					
ANR	3208521	PrimaryExpression	0		3208402	0					
ANR	3208522	Argument	gs_fapi_font_feature_Weight		3208402	2					
ANR	3208523	Identifier	gs_fapi_font_feature_Weight		3208402	0					
ANR	3208524	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ItalicAngle )"	757:4:23135:23184	3208402	8	True				
ANR	3208525	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ItalicAngle )"		3208402	0					
ANR	3208526	Callee	PACK_WORD		3208402	0					
ANR	3208527	Identifier	PACK_WORD		3208402	0					
ANR	3208528	ArgumentList	p		3208402	1					
ANR	3208529	Argument	p		3208402	0					
ANR	3208530	Identifier	p		3208402	0					
ANR	3208531	Argument	0		3208402	1					
ANR	3208532	PrimaryExpression	0		3208402	0					
ANR	3208533	Argument	gs_fapi_font_feature_ItalicAngle		3208402	2					
ANR	3208534	Identifier	gs_fapi_font_feature_ItalicAngle		3208402	0					
ANR	3208535	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_IsFixedPitch )"	758:4:23190:23240	3208402	9	True				
ANR	3208536	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_IsFixedPitch )"		3208402	0					
ANR	3208537	Callee	PACK_WORD		3208402	0					
ANR	3208538	Identifier	PACK_WORD		3208402	0					
ANR	3208539	ArgumentList	p		3208402	1					
ANR	3208540	Argument	p		3208402	0					
ANR	3208541	Identifier	p		3208402	0					
ANR	3208542	Argument	0		3208402	1					
ANR	3208543	PrimaryExpression	0		3208402	0					
ANR	3208544	Argument	gs_fapi_font_feature_IsFixedPitch		3208402	2					
ANR	3208545	Identifier	gs_fapi_font_feature_IsFixedPitch		3208402	0					
ANR	3208546	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderLinePosition )"	759:4:23246:23301	3208402	10	True				
ANR	3208547	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderLinePosition )"		3208402	0					
ANR	3208548	Callee	PACK_WORD		3208402	0					
ANR	3208549	Identifier	PACK_WORD		3208402	0					
ANR	3208550	ArgumentList	p		3208402	1					
ANR	3208551	Argument	p		3208402	0					
ANR	3208552	Identifier	p		3208402	0					
ANR	3208553	Argument	0		3208402	1					
ANR	3208554	PrimaryExpression	0		3208402	0					
ANR	3208555	Argument	gs_fapi_font_feature_UnderLinePosition		3208402	2					
ANR	3208556	Identifier	gs_fapi_font_feature_UnderLinePosition		3208402	0					
ANR	3208557	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderlineThickness )"	760:4:23307:23363	3208402	11	True				
ANR	3208558	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_UnderlineThickness )"		3208402	0					
ANR	3208559	Callee	PACK_WORD		3208402	0					
ANR	3208560	Identifier	PACK_WORD		3208402	0					
ANR	3208561	ArgumentList	p		3208402	1					
ANR	3208562	Argument	p		3208402	0					
ANR	3208563	Identifier	p		3208402	0					
ANR	3208564	Argument	0		3208402	1					
ANR	3208565	PrimaryExpression	0		3208402	0					
ANR	3208566	Argument	gs_fapi_font_feature_UnderlineThickness		3208402	2					
ANR	3208567	Identifier	gs_fapi_font_feature_UnderlineThickness		3208402	0					
ANR	3208568	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontType )"	761:4:23369:23415	3208402	12	True				
ANR	3208569	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontType )"		3208402	0					
ANR	3208570	Callee	PACK_WORD		3208402	0					
ANR	3208571	Identifier	PACK_WORD		3208402	0					
ANR	3208572	ArgumentList	p		3208402	1					
ANR	3208573	Argument	p		3208402	0					
ANR	3208574	Identifier	p		3208402	0					
ANR	3208575	Argument	0		3208402	1					
ANR	3208576	PrimaryExpression	0		3208402	0					
ANR	3208577	Argument	gs_fapi_font_feature_FontType		3208402	2					
ANR	3208578	Identifier	gs_fapi_font_feature_FontType		3208402	0					
ANR	3208579	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontBBox )"	762:4:23421:23467	3208402	13	True				
ANR	3208580	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_FontBBox )"		3208402	0					
ANR	3208581	Callee	PACK_WORD		3208402	0					
ANR	3208582	Identifier	PACK_WORD		3208402	0					
ANR	3208583	ArgumentList	p		3208402	1					
ANR	3208584	Argument	p		3208402	0					
ANR	3208585	Identifier	p		3208402	0					
ANR	3208586	Argument	0		3208402	1					
ANR	3208587	PrimaryExpression	0		3208402	0					
ANR	3208588	Argument	gs_fapi_font_feature_FontBBox		3208402	2					
ANR	3208589	Identifier	gs_fapi_font_feature_FontBBox		3208402	0					
ANR	3208590	ExpressionStatement	"PACK_WORD ( p , 1 , gs_fapi_font_feature_FontBBox )"	763:4:23473:23519	3208402	14	True				
ANR	3208591	CallExpression	"PACK_WORD ( p , 1 , gs_fapi_font_feature_FontBBox )"		3208402	0					
ANR	3208592	Callee	PACK_WORD		3208402	0					
ANR	3208593	Identifier	PACK_WORD		3208402	0					
ANR	3208594	ArgumentList	p		3208402	1					
ANR	3208595	Argument	p		3208402	0					
ANR	3208596	Identifier	p		3208402	0					
ANR	3208597	Argument	1		3208402	1					
ANR	3208598	PrimaryExpression	1		3208402	0					
ANR	3208599	Argument	gs_fapi_font_feature_FontBBox		3208402	2					
ANR	3208600	Identifier	gs_fapi_font_feature_FontBBox		3208402	0					
ANR	3208601	ExpressionStatement	"PACK_WORD ( p , 2 , gs_fapi_font_feature_FontBBox )"	764:4:23525:23571	3208402	15	True				
ANR	3208602	CallExpression	"PACK_WORD ( p , 2 , gs_fapi_font_feature_FontBBox )"		3208402	0					
ANR	3208603	Callee	PACK_WORD		3208402	0					
ANR	3208604	Identifier	PACK_WORD		3208402	0					
ANR	3208605	ArgumentList	p		3208402	1					
ANR	3208606	Argument	p		3208402	0					
ANR	3208607	Identifier	p		3208402	0					
ANR	3208608	Argument	2		3208402	1					
ANR	3208609	PrimaryExpression	2		3208402	0					
ANR	3208610	Argument	gs_fapi_font_feature_FontBBox		3208402	2					
ANR	3208611	Identifier	gs_fapi_font_feature_FontBBox		3208402	0					
ANR	3208612	ExpressionStatement	"PACK_WORD ( p , 3 , gs_fapi_font_feature_FontBBox )"	765:4:23577:23623	3208402	16	True				
ANR	3208613	CallExpression	"PACK_WORD ( p , 3 , gs_fapi_font_feature_FontBBox )"		3208402	0					
ANR	3208614	Callee	PACK_WORD		3208402	0					
ANR	3208615	Identifier	PACK_WORD		3208402	0					
ANR	3208616	ArgumentList	p		3208402	1					
ANR	3208617	Argument	p		3208402	0					
ANR	3208618	Identifier	p		3208402	0					
ANR	3208619	Argument	3		3208402	1					
ANR	3208620	PrimaryExpression	3		3208402	0					
ANR	3208621	Argument	gs_fapi_font_feature_FontBBox		3208402	2					
ANR	3208622	Identifier	gs_fapi_font_feature_FontBBox		3208402	0					
ANR	3208623	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_BlueValues_count , gs_fapi_font_feature_BlueValues )"	766:4:23629:23761	3208402	17	True				
ANR	3208624	CallExpression	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_BlueValues_count , gs_fapi_font_feature_BlueValues )"		3208402	0					
ANR	3208625	Callee	pack_pseo_word_array		3208402	0					
ANR	3208626	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208627	ArgumentList	r		3208402	1					
ANR	3208628	Argument	r		3208402	0					
ANR	3208629	Identifier	r		3208402	0					
ANR	3208630	Argument	ff		3208402	1					
ANR	3208631	Identifier	ff		3208402	0					
ANR	3208632	Argument	& p		3208402	2					
ANR	3208633	UnaryOperationExpression	& p		3208402	0					
ANR	3208634	UnaryOperator	&		3208402	0					
ANR	3208635	Identifier	p		3208402	1					
ANR	3208636	Argument	14		3208402	3					
ANR	3208637	PrimaryExpression	14		3208402	0					
ANR	3208638	Argument	gs_fapi_font_feature_BlueValues_count		3208402	4					
ANR	3208639	Identifier	gs_fapi_font_feature_BlueValues_count		3208402	0					
ANR	3208640	Argument	gs_fapi_font_feature_BlueValues		3208402	5					
ANR	3208641	Identifier	gs_fapi_font_feature_BlueValues		3208402	0					
ANR	3208642	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_OtherBlues_count , gs_fapi_font_feature_OtherBlues )"	768:4:23767:23899	3208402	18	True				
ANR	3208643	CallExpression	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_OtherBlues_count , gs_fapi_font_feature_OtherBlues )"		3208402	0					
ANR	3208644	Callee	pack_pseo_word_array		3208402	0					
ANR	3208645	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208646	ArgumentList	r		3208402	1					
ANR	3208647	Argument	r		3208402	0					
ANR	3208648	Identifier	r		3208402	0					
ANR	3208649	Argument	ff		3208402	1					
ANR	3208650	Identifier	ff		3208402	0					
ANR	3208651	Argument	& p		3208402	2					
ANR	3208652	UnaryOperationExpression	& p		3208402	0					
ANR	3208653	UnaryOperator	&		3208402	0					
ANR	3208654	Identifier	p		3208402	1					
ANR	3208655	Argument	10		3208402	3					
ANR	3208656	PrimaryExpression	10		3208402	0					
ANR	3208657	Argument	gs_fapi_font_feature_OtherBlues_count		3208402	4					
ANR	3208658	Identifier	gs_fapi_font_feature_OtherBlues_count		3208402	0					
ANR	3208659	Argument	gs_fapi_font_feature_OtherBlues		3208402	5					
ANR	3208660	Identifier	gs_fapi_font_feature_OtherBlues		3208402	0					
ANR	3208661	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_FamilyBlues_count , gs_fapi_font_feature_FamilyBlues )"	770:4:23905:24064	3208402	19	True				
ANR	3208662	CallExpression	"pack_pseo_word_array ( r , ff , & p , 14 , gs_fapi_font_feature_FamilyBlues_count , gs_fapi_font_feature_FamilyBlues )"		3208402	0					
ANR	3208663	Callee	pack_pseo_word_array		3208402	0					
ANR	3208664	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208665	ArgumentList	r		3208402	1					
ANR	3208666	Argument	r		3208402	0					
ANR	3208667	Identifier	r		3208402	0					
ANR	3208668	Argument	ff		3208402	1					
ANR	3208669	Identifier	ff		3208402	0					
ANR	3208670	Argument	& p		3208402	2					
ANR	3208671	UnaryOperationExpression	& p		3208402	0					
ANR	3208672	UnaryOperator	&		3208402	0					
ANR	3208673	Identifier	p		3208402	1					
ANR	3208674	Argument	14		3208402	3					
ANR	3208675	PrimaryExpression	14		3208402	0					
ANR	3208676	Argument	gs_fapi_font_feature_FamilyBlues_count		3208402	4					
ANR	3208677	Identifier	gs_fapi_font_feature_FamilyBlues_count		3208402	0					
ANR	3208678	Argument	gs_fapi_font_feature_FamilyBlues		3208402	5					
ANR	3208679	Identifier	gs_fapi_font_feature_FamilyBlues		3208402	0					
ANR	3208680	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_FamilyOtherBlues_count , gs_fapi_font_feature_FamilyOtherBlues )"	773:4:24070:24239	3208402	20	True				
ANR	3208681	CallExpression	"pack_pseo_word_array ( r , ff , & p , 10 , gs_fapi_font_feature_FamilyOtherBlues_count , gs_fapi_font_feature_FamilyOtherBlues )"		3208402	0					
ANR	3208682	Callee	pack_pseo_word_array		3208402	0					
ANR	3208683	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208684	ArgumentList	r		3208402	1					
ANR	3208685	Argument	r		3208402	0					
ANR	3208686	Identifier	r		3208402	0					
ANR	3208687	Argument	ff		3208402	1					
ANR	3208688	Identifier	ff		3208402	0					
ANR	3208689	Argument	& p		3208402	2					
ANR	3208690	UnaryOperationExpression	& p		3208402	0					
ANR	3208691	UnaryOperator	&		3208402	0					
ANR	3208692	Identifier	p		3208402	1					
ANR	3208693	Argument	10		3208402	3					
ANR	3208694	PrimaryExpression	10		3208402	0					
ANR	3208695	Argument	gs_fapi_font_feature_FamilyOtherBlues_count		3208402	4					
ANR	3208696	Identifier	gs_fapi_font_feature_FamilyOtherBlues_count		3208402	0					
ANR	3208697	Argument	gs_fapi_font_feature_FamilyOtherBlues		3208402	5					
ANR	3208698	Identifier	gs_fapi_font_feature_FamilyOtherBlues		3208402	0					
ANR	3208699	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueShift )"	776:4:24245:24292	3208402	21	True				
ANR	3208700	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueShift )"		3208402	0					
ANR	3208701	Callee	PACK_WORD		3208402	0					
ANR	3208702	Identifier	PACK_WORD		3208402	0					
ANR	3208703	ArgumentList	p		3208402	1					
ANR	3208704	Argument	p		3208402	0					
ANR	3208705	Identifier	p		3208402	0					
ANR	3208706	Argument	0		3208402	1					
ANR	3208707	PrimaryExpression	0		3208402	0					
ANR	3208708	Argument	gs_fapi_font_feature_BlueShift		3208402	2					
ANR	3208709	Identifier	gs_fapi_font_feature_BlueShift		3208402	0					
ANR	3208710	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueFuzz )"	777:4:24298:24344	3208402	22	True				
ANR	3208711	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_BlueFuzz )"		3208402	0					
ANR	3208712	Callee	PACK_WORD		3208402	0					
ANR	3208713	Identifier	PACK_WORD		3208402	0					
ANR	3208714	ArgumentList	p		3208402	1					
ANR	3208715	Argument	p		3208402	0					
ANR	3208716	Identifier	p		3208402	0					
ANR	3208717	Argument	0		3208402	1					
ANR	3208718	PrimaryExpression	0		3208402	0					
ANR	3208719	Argument	gs_fapi_font_feature_BlueFuzz		3208402	2					
ANR	3208720	Identifier	gs_fapi_font_feature_BlueFuzz		3208402	0					
ANR	3208721	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdHW )"	778:4:24350:24393	3208402	23	True				
ANR	3208722	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdHW )"		3208402	0					
ANR	3208723	Callee	PACK_WORD		3208402	0					
ANR	3208724	Identifier	PACK_WORD		3208402	0					
ANR	3208725	ArgumentList	p		3208402	1					
ANR	3208726	Argument	p		3208402	0					
ANR	3208727	Identifier	p		3208402	0					
ANR	3208728	Argument	0		3208402	1					
ANR	3208729	PrimaryExpression	0		3208402	0					
ANR	3208730	Argument	gs_fapi_font_feature_StdHW		3208402	2					
ANR	3208731	Identifier	gs_fapi_font_feature_StdHW		3208402	0					
ANR	3208732	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdVW )"	779:4:24399:24442	3208402	24	True				
ANR	3208733	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_StdVW )"		3208402	0					
ANR	3208734	Callee	PACK_WORD		3208402	0					
ANR	3208735	Identifier	PACK_WORD		3208402	0					
ANR	3208736	ArgumentList	p		3208402	1					
ANR	3208737	Argument	p		3208402	0					
ANR	3208738	Identifier	p		3208402	0					
ANR	3208739	Argument	0		3208402	1					
ANR	3208740	PrimaryExpression	0		3208402	0					
ANR	3208741	Argument	gs_fapi_font_feature_StdVW		3208402	2					
ANR	3208742	Identifier	gs_fapi_font_feature_StdVW		3208402	0					
ANR	3208743	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapH_count , gs_fapi_font_feature_StemSnapH )"	780:4:24448:24578	3208402	25	True				
ANR	3208744	CallExpression	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapH_count , gs_fapi_font_feature_StemSnapH )"		3208402	0					
ANR	3208745	Callee	pack_pseo_word_array		3208402	0					
ANR	3208746	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208747	ArgumentList	r		3208402	1					
ANR	3208748	Argument	r		3208402	0					
ANR	3208749	Identifier	r		3208402	0					
ANR	3208750	Argument	ff		3208402	1					
ANR	3208751	Identifier	ff		3208402	0					
ANR	3208752	Argument	& p		3208402	2					
ANR	3208753	UnaryOperationExpression	& p		3208402	0					
ANR	3208754	UnaryOperator	&		3208402	0					
ANR	3208755	Identifier	p		3208402	1					
ANR	3208756	Argument	12		3208402	3					
ANR	3208757	PrimaryExpression	12		3208402	0					
ANR	3208758	Argument	gs_fapi_font_feature_StemSnapH_count		3208402	4					
ANR	3208759	Identifier	gs_fapi_font_feature_StemSnapH_count		3208402	0					
ANR	3208760	Argument	gs_fapi_font_feature_StemSnapH		3208402	5					
ANR	3208761	Identifier	gs_fapi_font_feature_StemSnapH		3208402	0					
ANR	3208762	ExpressionStatement	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapV_count , gs_fapi_font_feature_StemSnapV )"	782:4:24584:24714	3208402	26	True				
ANR	3208763	CallExpression	"pack_pseo_word_array ( r , ff , & p , 12 , gs_fapi_font_feature_StemSnapV_count , gs_fapi_font_feature_StemSnapV )"		3208402	0					
ANR	3208764	Callee	pack_pseo_word_array		3208402	0					
ANR	3208765	Identifier	pack_pseo_word_array		3208402	0					
ANR	3208766	ArgumentList	r		3208402	1					
ANR	3208767	Argument	r		3208402	0					
ANR	3208768	Identifier	r		3208402	0					
ANR	3208769	Argument	ff		3208402	1					
ANR	3208770	Identifier	ff		3208402	0					
ANR	3208771	Argument	& p		3208402	2					
ANR	3208772	UnaryOperationExpression	& p		3208402	0					
ANR	3208773	UnaryOperator	&		3208402	0					
ANR	3208774	Identifier	p		3208402	1					
ANR	3208775	Argument	12		3208402	3					
ANR	3208776	PrimaryExpression	12		3208402	0					
ANR	3208777	Argument	gs_fapi_font_feature_StemSnapV_count		3208402	4					
ANR	3208778	Identifier	gs_fapi_font_feature_StemSnapV_count		3208402	0					
ANR	3208779	Argument	gs_fapi_font_feature_StemSnapV		3208402	5					
ANR	3208780	Identifier	gs_fapi_font_feature_StemSnapV		3208402	0					
ANR	3208781	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ForceBold )"	784:4:24720:24767	3208402	27	True				
ANR	3208782	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_ForceBold )"		3208402	0					
ANR	3208783	Callee	PACK_WORD		3208402	0					
ANR	3208784	Identifier	PACK_WORD		3208402	0					
ANR	3208785	ArgumentList	p		3208402	1					
ANR	3208786	Argument	p		3208402	0					
ANR	3208787	Identifier	p		3208402	0					
ANR	3208788	Argument	0		3208402	1					
ANR	3208789	PrimaryExpression	0		3208402	0					
ANR	3208790	Argument	gs_fapi_font_feature_ForceBold		3208402	2					
ANR	3208791	Identifier	gs_fapi_font_feature_ForceBold		3208402	0					
ANR	3208792	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_LanguageGroup )"	785:4:24773:24824	3208402	28	True				
ANR	3208793	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_LanguageGroup )"		3208402	0					
ANR	3208794	Callee	PACK_WORD		3208402	0					
ANR	3208795	Identifier	PACK_WORD		3208402	0					
ANR	3208796	ArgumentList	p		3208402	1					
ANR	3208797	Argument	p		3208402	0					
ANR	3208798	Identifier	p		3208402	0					
ANR	3208799	Argument	0		3208402	1					
ANR	3208800	PrimaryExpression	0		3208402	0					
ANR	3208801	Argument	gs_fapi_font_feature_LanguageGroup		3208402	2					
ANR	3208802	Identifier	gs_fapi_font_feature_LanguageGroup		3208402	0					
ANR	3208803	ExpressionStatement	"PACK_WORD ( p , 0 , gs_fapi_font_feature_lenIV )"	786:4:24830:24873	3208402	29	True				
ANR	3208804	CallExpression	"PACK_WORD ( p , 0 , gs_fapi_font_feature_lenIV )"		3208402	0					
ANR	3208805	Callee	PACK_WORD		3208402	0					
ANR	3208806	Identifier	PACK_WORD		3208402	0					
ANR	3208807	ArgumentList	p		3208402	1					
ANR	3208808	Argument	p		3208402	0					
ANR	3208809	Identifier	p		3208402	0					
ANR	3208810	Argument	0		3208402	1					
ANR	3208811	PrimaryExpression	0		3208402	0					
ANR	3208812	Argument	gs_fapi_font_feature_lenIV		3208402	2					
ANR	3208813	Identifier	gs_fapi_font_feature_lenIV		3208402	0					
ANR	3208814	ForStatement	for ( j = 0 ; j < 12 ; j ++ )		3208402	30					
ANR	3208815	ForInit	j = 0 ;	787:9:24884:24889	3208402	0	True				
ANR	3208816	AssignmentExpression	j = 0		3208402	0		=			
ANR	3208817	Identifier	j		3208402	0					
ANR	3208818	PrimaryExpression	0		3208402	1					
ANR	3208819	Condition	j < 12	787:16:24891:24896	3208402	1	True				
ANR	3208820	RelationalExpression	j < 12		3208402	0		<			
ANR	3208821	Identifier	j		3208402	0					
ANR	3208822	PrimaryExpression	12		3208402	1					
ANR	3208823	PostIncDecOperationExpression	j ++	787:24:24899:24901	3208402	2	True				
ANR	3208824	Identifier	j		3208402	0					
ANR	3208825	IncDec	++		3208402	1					
ANR	3208826	ExpressionStatement	"PACK_ZERO ( p ) , PACK_ZERO ( p )"	788:8:24912:24938	3208402	3	True				
ANR	3208827	Expression	"PACK_ZERO ( p ) , PACK_ZERO ( p )"		3208402	0					
ANR	3208828	CallExpression	PACK_ZERO ( p )		3208402	0					
ANR	3208829	Callee	PACK_ZERO		3208402	0					
ANR	3208830	Identifier	PACK_ZERO		3208402	0					
ANR	3208831	ArgumentList	p		3208402	1					
ANR	3208832	Argument	p		3208402	0					
ANR	3208833	Identifier	p		3208402	0					
ANR	3208834	CallExpression	PACK_ZERO ( p )		3208402	1					
ANR	3208835	Callee	PACK_ZERO		3208402	0					
ANR	3208836	Identifier	PACK_ZERO		3208402	0					
ANR	3208837	ArgumentList	p		3208402	1					
ANR	3208838	Argument	p		3208402	0					
ANR	3208839	Identifier	p		3208402	0					
ANR	3208840	ExpressionStatement	"n = ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"	790:4:25020:25077	3208402	31	True				
ANR	3208841	AssignmentExpression	"n = ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"		3208402	0		=			
ANR	3208842	Identifier	n		3208402	0					
ANR	3208843	CallExpression	"ff -> get_word ( ff , gs_fapi_font_feature_Subrs_count , 0 )"		3208402	1					
ANR	3208844	Callee	ff -> get_word		3208402	0					
ANR	3208845	PtrMemberAccess	ff -> get_word		3208402	0					
ANR	3208846	Identifier	ff		3208402	0					
ANR	3208847	Identifier	get_word		3208402	1					
ANR	3208848	ArgumentList	ff		3208402	1					
ANR	3208849	Argument	ff		3208402	0					
ANR	3208850	Identifier	ff		3208402	0					
ANR	3208851	Argument	gs_fapi_font_feature_Subrs_count		3208402	1					
ANR	3208852	Identifier	gs_fapi_font_feature_Subrs_count		3208402	0					
ANR	3208853	Argument	0		3208402	2					
ANR	3208854	PrimaryExpression	0		3208402	0					
ANR	3208855	ExpressionStatement	"pack_word ( & p , n )"	791:4:25083:25099	3208402	32	True				
ANR	3208856	CallExpression	"pack_word ( & p , n )"		3208402	0					
ANR	3208857	Callee	pack_word		3208402	0					
ANR	3208858	Identifier	pack_word		3208402	0					
ANR	3208859	ArgumentList	& p		3208402	1					
ANR	3208860	Argument	& p		3208402	0					
ANR	3208861	UnaryOperationExpression	& p		3208402	0					
ANR	3208862	UnaryOperator	&		3208402	0					
ANR	3208863	Identifier	p		3208402	1					
ANR	3208864	Argument	n		3208402	1					
ANR	3208865	Identifier	n		3208402	0					
ANR	3208866	ForStatement	for ( j = 0 ; j < n ; j ++ )		3208402	33					
ANR	3208867	ForInit	j = 0 ;	792:9:25110:25115	3208402	0	True				
ANR	3208868	AssignmentExpression	j = 0		3208402	0		=			
ANR	3208869	Identifier	j		3208402	0					
ANR	3208870	PrimaryExpression	0		3208402	1					
ANR	3208871	Condition	j < n	792:16:25117:25121	3208402	1	True				
ANR	3208872	RelationalExpression	j < n		3208402	0		<			
ANR	3208873	Identifier	j		3208402	0					
ANR	3208874	Identifier	n		3208402	1					
ANR	3208875	PostIncDecOperationExpression	j ++	792:23:25124:25126	3208402	2	True				
ANR	3208876	Identifier	j		3208402	0					
ANR	3208877	IncDec	++		3208402	1					
ANR	3208878	CompoundStatement		52:8:2603:2646	3208402	3					
ANR	3208879	IdentifierDeclStatement	"ushort subr_len = ff -> get_subr ( ff , j , 0 , 0 ) ;"	793:8:25139:25182	3208402	0	True				
ANR	3208880	IdentifierDecl	"subr_len = ff -> get_subr ( ff , j , 0 , 0 )"		3208402	0					
ANR	3208881	IdentifierDeclType	ushort		3208402	0					
ANR	3208882	Identifier	subr_len		3208402	1					
ANR	3208883	AssignmentExpression	"subr_len = ff -> get_subr ( ff , j , 0 , 0 )"		3208402	2		=			
ANR	3208884	Identifier	subr_len		3208402	0					
ANR	3208885	CallExpression	"ff -> get_subr ( ff , j , 0 , 0 )"		3208402	1					
ANR	3208886	Callee	ff -> get_subr		3208402	0					
ANR	3208887	PtrMemberAccess	ff -> get_subr		3208402	0					
ANR	3208888	Identifier	ff		3208402	0					
ANR	3208889	Identifier	get_subr		3208402	1					
ANR	3208890	ArgumentList	ff		3208402	1					
ANR	3208891	Argument	ff		3208402	0					
ANR	3208892	Identifier	ff		3208402	0					
ANR	3208893	Argument	j		3208402	1					
ANR	3208894	Identifier	j		3208402	0					
ANR	3208895	Argument	0		3208402	2					
ANR	3208896	PrimaryExpression	0		3208402	0					
ANR	3208897	Argument	0		3208402	3					
ANR	3208898	PrimaryExpression	0		3208402	0					
ANR	3208899	IfStatement	if ( subr_len != 0 )		3208402	1					
ANR	3208900	Condition	subr_len != 0	795:12:25197:25209	3208402	0	True				
ANR	3208901	EqualityExpression	subr_len != 0		3208402	0		!=			
ANR	3208902	Identifier	subr_len		3208402	0					
ANR	3208903	PrimaryExpression	0		3208402	1					
ANR	3208904	CompoundStatement		54:27:2676:2676	3208402	1					
ANR	3208905	ExpressionStatement	"pack_word ( & p , j )"	796:12:25226:25242	3208402	0	True				
ANR	3208906	CallExpression	"pack_word ( & p , j )"		3208402	0					
ANR	3208907	Callee	pack_word		3208402	0					
ANR	3208908	Identifier	pack_word		3208402	0					
ANR	3208909	ArgumentList	& p		3208402	1					
ANR	3208910	Argument	& p		3208402	0					
ANR	3208911	UnaryOperationExpression	& p		3208402	0					
ANR	3208912	UnaryOperator	&		3208402	0					
ANR	3208913	Identifier	p		3208402	1					
ANR	3208914	Argument	j		3208402	1					
ANR	3208915	Identifier	j		3208402	0					
ANR	3208916	ExpressionStatement	"pack_word ( & p , subr_len )"	797:12:25256:25279	3208402	1	True				
ANR	3208917	CallExpression	"pack_word ( & p , subr_len )"		3208402	0					
ANR	3208918	Callee	pack_word		3208402	0					
ANR	3208919	Identifier	pack_word		3208402	0					
ANR	3208920	ArgumentList	& p		3208402	1					
ANR	3208921	Argument	& p		3208402	0					
ANR	3208922	UnaryOperationExpression	& p		3208402	0					
ANR	3208923	UnaryOperator	&		3208402	0					
ANR	3208924	Identifier	p		3208402	1					
ANR	3208925	Argument	subr_len		3208402	1					
ANR	3208926	Identifier	subr_len		3208402	0					
ANR	3208927	ExpressionStatement	"PACK_BYTE ( p , 1 )"	798:12:25293:25308	3208402	2	True				
ANR	3208928	CallExpression	"PACK_BYTE ( p , 1 )"		3208402	0					
ANR	3208929	Callee	PACK_BYTE		3208402	0					
ANR	3208930	Identifier	PACK_BYTE		3208402	0					
ANR	3208931	ArgumentList	p		3208402	1					
ANR	3208932	Argument	p		3208402	0					
ANR	3208933	Identifier	p		3208402	0					
ANR	3208934	Argument	1		3208402	1					
ANR	3208935	PrimaryExpression	1		3208402	0					
ANR	3208936	ExpressionStatement	"ff -> get_subr ( ff , j , p , subr_len )"	799:12:25344:25376	3208402	3	True				
ANR	3208937	CallExpression	"ff -> get_subr ( ff , j , p , subr_len )"		3208402	0					
ANR	3208938	Callee	ff -> get_subr		3208402	0					
ANR	3208939	PtrMemberAccess	ff -> get_subr		3208402	0					
ANR	3208940	Identifier	ff		3208402	0					
ANR	3208941	Identifier	get_subr		3208402	1					
ANR	3208942	ArgumentList	ff		3208402	1					
ANR	3208943	Argument	ff		3208402	0					
ANR	3208944	Identifier	ff		3208402	0					
ANR	3208945	Argument	j		3208402	1					
ANR	3208946	Identifier	j		3208402	0					
ANR	3208947	Argument	p		3208402	2					
ANR	3208948	Identifier	p		3208402	0					
ANR	3208949	Argument	subr_len		3208402	3					
ANR	3208950	Identifier	subr_len		3208402	0					
ANR	3208951	ExpressionStatement	p += subr_len	800:12:25390:25403	3208402	4	True				
ANR	3208952	AssignmentExpression	p += subr_len		3208402	0		+=			
ANR	3208953	Identifier	p		3208402	0					
ANR	3208954	Identifier	subr_len		3208402	1					
ANR	3208955	ElseStatement	else		3208402	0					
ANR	3208956	ExpressionStatement	skip = 1	803:12:25440:25448	3208402	0	True				
ANR	3208957	AssignmentExpression	skip = 1		3208402	0		=			
ANR	3208958	Identifier	skip		3208402	0					
ANR	3208959	PrimaryExpression	1		3208402	1					
ANR	3208960	ExpressionStatement	"n = ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"	805:4:25460:25523	3208402	34	True				
ANR	3208961	AssignmentExpression	"n = ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"		3208402	0		=			
ANR	3208962	Identifier	n		3208402	0					
ANR	3208963	CallExpression	"ff -> get_word ( ff , gs_fapi_font_feature_GlobalSubrs_count , 0 )"		3208402	1					
ANR	3208964	Callee	ff -> get_word		3208402	0					
ANR	3208965	PtrMemberAccess	ff -> get_word		3208402	0					
ANR	3208966	Identifier	ff		3208402	0					
ANR	3208967	Identifier	get_word		3208402	1					
ANR	3208968	ArgumentList	ff		3208402	1					
ANR	3208969	Argument	ff		3208402	0					
ANR	3208970	Identifier	ff		3208402	0					
ANR	3208971	Argument	gs_fapi_font_feature_GlobalSubrs_count		3208402	1					
ANR	3208972	Identifier	gs_fapi_font_feature_GlobalSubrs_count		3208402	0					
ANR	3208973	Argument	0		3208402	2					
ANR	3208974	PrimaryExpression	0		3208402	0					
ANR	3208975	IfStatement	if ( n != 65535 )		3208402	35					
ANR	3208976	Condition	n != 65535	807:8:25621:25630	3208402	0	True				
ANR	3208977	EqualityExpression	n != 65535		3208402	0		!=			
ANR	3208978	Identifier	n		3208402	0					
ANR	3208979	PrimaryExpression	65535		3208402	1					
ANR	3208980	CompoundStatement		66:20:3097:3097	3208402	1					
ANR	3208981	ExpressionStatement	"pack_word ( & p , n )"	808:8:25643:25659	3208402	0	True				
ANR	3208982	CallExpression	"pack_word ( & p , n )"		3208402	0					
ANR	3208983	Callee	pack_word		3208402	0					
ANR	3208984	Identifier	pack_word		3208402	0					
ANR	3208985	ArgumentList	& p		3208402	1					
ANR	3208986	Argument	& p		3208402	0					
ANR	3208987	UnaryOperationExpression	& p		3208402	0					
ANR	3208988	UnaryOperator	&		3208402	0					
ANR	3208989	Identifier	p		3208402	1					
ANR	3208990	Argument	n		3208402	1					
ANR	3208991	Identifier	n		3208402	0					
ANR	3208992	ForStatement	for ( j = 0 ; j < n ; j ++ )		3208402	1					
ANR	3208993	ForInit	j = 0 ;	809:13:25674:25679	3208402	0	True				
ANR	3208994	AssignmentExpression	j = 0		3208402	0		=			
ANR	3208995	Identifier	j		3208402	0					
ANR	3208996	PrimaryExpression	0		3208402	1					
ANR	3208997	Condition	j < n	809:20:25681:25685	3208402	1	True				
ANR	3208998	RelationalExpression	j < n		3208402	0		<			
ANR	3208999	Identifier	j		3208402	0					
ANR	3209000	Identifier	n		3208402	1					
ANR	3209001	PostIncDecOperationExpression	j ++	809:27:25688:25690	3208402	2	True				
ANR	3209002	Identifier	j		3208402	0					
ANR	3209003	IncDec	++		3208402	1					
ANR	3209004	CompoundStatement		69:12:3171:3215	3208402	3					
ANR	3209005	IdentifierDeclStatement	"ushort subr_len = ff -> get_gsubr ( ff , j , 0 , 0 ) ;"	810:12:25707:25751	3208402	0	True				
ANR	3209006	IdentifierDecl	"subr_len = ff -> get_gsubr ( ff , j , 0 , 0 )"		3208402	0					
ANR	3209007	IdentifierDeclType	ushort		3208402	0					
ANR	3209008	Identifier	subr_len		3208402	1					
ANR	3209009	AssignmentExpression	"subr_len = ff -> get_gsubr ( ff , j , 0 , 0 )"		3208402	2		=			
ANR	3209010	Identifier	subr_len		3208402	0					
ANR	3209011	CallExpression	"ff -> get_gsubr ( ff , j , 0 , 0 )"		3208402	1					
ANR	3209012	Callee	ff -> get_gsubr		3208402	0					
ANR	3209013	PtrMemberAccess	ff -> get_gsubr		3208402	0					
ANR	3209014	Identifier	ff		3208402	0					
ANR	3209015	Identifier	get_gsubr		3208402	1					
ANR	3209016	ArgumentList	ff		3208402	1					
ANR	3209017	Argument	ff		3208402	0					
ANR	3209018	Identifier	ff		3208402	0					
ANR	3209019	Argument	j		3208402	1					
ANR	3209020	Identifier	j		3208402	0					
ANR	3209021	Argument	0		3208402	2					
ANR	3209022	PrimaryExpression	0		3208402	0					
ANR	3209023	Argument	0		3208402	3					
ANR	3209024	PrimaryExpression	0		3208402	0					
ANR	3209025	IfStatement	if ( subr_len != 0 )		3208402	1					
ANR	3209026	Condition	subr_len != 0	812:16:25770:25782	3208402	0	True				
ANR	3209027	EqualityExpression	subr_len != 0		3208402	0		!=			
ANR	3209028	Identifier	subr_len		3208402	0					
ANR	3209029	PrimaryExpression	0		3208402	1					
ANR	3209030	CompoundStatement		71:31:3249:3249	3208402	1					
ANR	3209031	ExpressionStatement	"pack_word ( & p , j )"	813:16:25803:25819	3208402	0	True				
ANR	3209032	CallExpression	"pack_word ( & p , j )"		3208402	0					
ANR	3209033	Callee	pack_word		3208402	0					
ANR	3209034	Identifier	pack_word		3208402	0					
ANR	3209035	ArgumentList	& p		3208402	1					
ANR	3209036	Argument	& p		3208402	0					
ANR	3209037	UnaryOperationExpression	& p		3208402	0					
ANR	3209038	UnaryOperator	&		3208402	0					
ANR	3209039	Identifier	p		3208402	1					
ANR	3209040	Argument	j		3208402	1					
ANR	3209041	Identifier	j		3208402	0					
ANR	3209042	ExpressionStatement	"pack_word ( & p , subr_len )"	814:16:25837:25860	3208402	1	True				
ANR	3209043	CallExpression	"pack_word ( & p , subr_len )"		3208402	0					
ANR	3209044	Callee	pack_word		3208402	0					
ANR	3209045	Identifier	pack_word		3208402	0					
ANR	3209046	ArgumentList	& p		3208402	1					
ANR	3209047	Argument	& p		3208402	0					
ANR	3209048	UnaryOperationExpression	& p		3208402	0					
ANR	3209049	UnaryOperator	&		3208402	0					
ANR	3209050	Identifier	p		3208402	1					
ANR	3209051	Argument	subr_len		3208402	1					
ANR	3209052	Identifier	subr_len		3208402	0					
ANR	3209053	ExpressionStatement	"PACK_BYTE ( p , 1 )"	815:16:25878:25893	3208402	2	True				
ANR	3209054	CallExpression	"PACK_BYTE ( p , 1 )"		3208402	0					
ANR	3209055	Callee	PACK_BYTE		3208402	0					
ANR	3209056	Identifier	PACK_BYTE		3208402	0					
ANR	3209057	ArgumentList	p		3208402	1					
ANR	3209058	Argument	p		3208402	0					
ANR	3209059	Identifier	p		3208402	0					
ANR	3209060	Argument	1		3208402	1					
ANR	3209061	PrimaryExpression	1		3208402	0					
ANR	3209062	ExpressionStatement	"ff -> get_gsubr ( ff , j , p , subr_len )"	816:16:25937:25970	3208402	3	True				
ANR	3209063	CallExpression	"ff -> get_gsubr ( ff , j , p , subr_len )"		3208402	0					
ANR	3209064	Callee	ff -> get_gsubr		3208402	0					
ANR	3209065	PtrMemberAccess	ff -> get_gsubr		3208402	0					
ANR	3209066	Identifier	ff		3208402	0					
ANR	3209067	Identifier	get_gsubr		3208402	1					
ANR	3209068	ArgumentList	ff		3208402	1					
ANR	3209069	Argument	ff		3208402	0					
ANR	3209070	Identifier	ff		3208402	0					
ANR	3209071	Argument	j		3208402	1					
ANR	3209072	Identifier	j		3208402	0					
ANR	3209073	Argument	p		3208402	2					
ANR	3209074	Identifier	p		3208402	0					
ANR	3209075	Argument	subr_len		3208402	3					
ANR	3209076	Identifier	subr_len		3208402	0					
ANR	3209077	ExpressionStatement	p += subr_len	817:16:25988:26001	3208402	4	True				
ANR	3209078	AssignmentExpression	p += subr_len		3208402	0		+=			
ANR	3209079	Identifier	p		3208402	0					
ANR	3209080	Identifier	subr_len		3208402	1					
ANR	3209081	ElseStatement	else		3208402	0					
ANR	3209082	ExpressionStatement	skip = 1	820:16:26050:26058	3208402	0	True				
ANR	3209083	AssignmentExpression	skip = 1		3208402	0		=			
ANR	3209084	Identifier	skip		3208402	0					
ANR	3209085	PrimaryExpression	1		3208402	1					
ANR	3209086	IfStatement	if ( skip )		3208402	36					
ANR	3209087	Condition	skip	823:8:26084:26087	3208402	0	True				
ANR	3209088	Identifier	skip		3208402	0					
ANR	3209089	ExpressionStatement	"pack_word ( & p , 0xFFFF )"	824:8:26098:26119	3208402	1	True				
ANR	3209090	CallExpression	"pack_word ( & p , 0xFFFF )"		3208402	0					
ANR	3209091	Callee	pack_word		3208402	0					
ANR	3209092	Identifier	pack_word		3208402	0					
ANR	3209093	ArgumentList	& p		3208402	1					
ANR	3209094	Argument	& p		3208402	0					
ANR	3209095	UnaryOperationExpression	& p		3208402	0					
ANR	3209096	UnaryOperator	&		3208402	0					
ANR	3209097	Identifier	p		3208402	1					
ANR	3209098	Argument	0xFFFF		3208402	1					
ANR	3209099	PrimaryExpression	0xFFFF		3208402	0					
ANR	3209100	ReturnType	static void		3208402	1					
ANR	3209101	Identifier	pack_pseo_fhdr		3208402	2					
ANR	3209102	ParameterList	"fapi_ufst_server * r , gs_fapi_font * ff , UB8 * p"		3208402	3					
ANR	3209103	Parameter	fapi_ufst_server * r	741:15:22485:22504	3208402	0	True				
ANR	3209104	ParameterType	fapi_ufst_server *		3208402	0					
ANR	3209105	Identifier	r		3208402	1					
ANR	3209106	Parameter	gs_fapi_font * ff	741:37:22507:22523	3208402	1	True				
ANR	3209107	ParameterType	gs_fapi_font *		3208402	0					
ANR	3209108	Identifier	ff		3208402	1					
ANR	3209109	Parameter	UB8 * p	741:56:22526:22532	3208402	2	True				
ANR	3209110	ParameterType	UB8 *		3208402	0					
ANR	3209111	Identifier	p		3208402	1					
ANR	3209112	CFGEntryNode	ENTRY		3208402		True				
ANR	3209113	CFGExitNode	EXIT		3208402		True				
ANR	3209114	Symbol	ff		3208402						
ANR	3209115	Symbol	gs_fapi_font_feature_UnderlineThickness		3208402						
ANR	3209116	Symbol	gs_fapi_font_feature_BlueFuzz		3208402						
ANR	3209117	Symbol	gs_fapi_font_feature_FamilyOtherBlues		3208402						
ANR	3209118	Symbol	gs_fapi_font_feature_BlueScale		3208402						
ANR	3209119	Symbol	subr_len		3208402						
ANR	3209120	Symbol	ff -> get_gsubr		3208402						
ANR	3209121	Symbol	gs_fapi_font_feature_GlobalSubrs_count		3208402						
ANR	3209122	Symbol	ff -> get_subr		3208402						
ANR	3209123	Symbol	skip		3208402						
ANR	3209124	Symbol	gs_fapi_font_feature_BlueValues		3208402						
ANR	3209125	Symbol	gs_fapi_font_feature_BlueShift		3208402						
ANR	3209126	Symbol	gs_fapi_font_feature_FontType		3208402						
ANR	3209127	Symbol	gs_fapi_font_feature_StemSnapH		3208402						
ANR	3209128	Symbol	gs_fapi_font_feature_Subrs_count		3208402						
ANR	3209129	Symbol	gs_fapi_font_feature_OtherBlues_count		3208402						
ANR	3209130	Symbol	gs_fapi_font_feature_lenIV		3208402						
ANR	3209131	Symbol	gs_fapi_font_feature_Weight		3208402						
ANR	3209132	Symbol	gs_fapi_font_feature_UnderLinePosition		3208402						
ANR	3209133	Symbol	gs_fapi_font_feature_BlueValues_count		3208402						
ANR	3209134	Symbol	gs_fapi_font_feature_StemSnapH_count		3208402						
ANR	3209135	Symbol	gs_fapi_font_feature_ForceBold		3208402						
ANR	3209136	Symbol	gs_fapi_font_feature_UniqueID		3208402						
ANR	3209137	Symbol	gs_fapi_font_feature_StemSnapV_count		3208402						
ANR	3209138	Symbol	gs_fapi_font_feature_StemSnapV		3208402						
ANR	3209139	Symbol	* ff		3208402						
ANR	3209140	Symbol	gs_fapi_font_feature_FontBBox		3208402						
ANR	3209141	Symbol	ff -> get_word		3208402						
ANR	3209142	Symbol	j		3208402						
ANR	3209143	Symbol	gs_fapi_font_feature_StdHW		3208402						
ANR	3209144	Symbol	gs_fapi_font_feature_IsFixedPitch		3208402						
ANR	3209145	Symbol	n		3208402						
ANR	3209146	Symbol	p		3208402						
ANR	3209147	Symbol	ff -> get_float		3208402						
ANR	3209148	Symbol	r		3208402						
ANR	3209149	Symbol	gs_fapi_font_feature_OtherBlues		3208402						
ANR	3209150	Symbol	& p		3208402						
ANR	3209151	Symbol	gs_fapi_font_feature_FontMatrix		3208402						
ANR	3209152	Symbol	gs_fapi_font_feature_ItalicAngle		3208402						
ANR	3209153	Symbol	gs_fapi_font_feature_FamilyBlues_count		3208402						
ANR	3209154	Symbol	gs_fapi_font_feature_StdVW		3208402						
ANR	3209155	Symbol	gs_fapi_font_feature_LanguageGroup		3208402						
ANR	3209156	Symbol	gs_fapi_font_feature_FamilyBlues		3208402						
ANR	3209157	Symbol	gs_fapi_font_feature_FamilyOtherBlues_count		3208402						
ANR	3209158	Function	my_strdup	827:0:26124:26349							
ANR	3209159	FunctionDef	"my_strdup (fapi_ufst_server * r , const char * s , const char * cname)"		3209158	0					
ANR	3209160	CompoundStatement		829:0:26204:26349	3209158	0					
ANR	3209161	IdentifierDeclStatement	int len = strlen ( s ) + 1 ;	830:4:26210:26233	3209158	0	True				
ANR	3209162	IdentifierDecl	len = strlen ( s ) + 1		3209158	0					
ANR	3209163	IdentifierDeclType	int		3209158	0					
ANR	3209164	Identifier	len		3209158	1					
ANR	3209165	AssignmentExpression	len = strlen ( s ) + 1		3209158	2		=			
ANR	3209166	Identifier	len		3209158	0					
ANR	3209167	AdditiveExpression	strlen ( s ) + 1		3209158	1		+			
ANR	3209168	CallExpression	strlen ( s )		3209158	0					
ANR	3209169	Callee	strlen		3209158	0					
ANR	3209170	Identifier	strlen		3209158	0					
ANR	3209171	ArgumentList	s		3209158	1					
ANR	3209172	Argument	s		3209158	0					
ANR	3209173	Identifier	s		3209158	0					
ANR	3209174	PrimaryExpression	1		3209158	1					
ANR	3209175	IdentifierDeclStatement	"char * p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname ) ;"	831:4:26239:26289	3209158	1	True				
ANR	3209176	IdentifierDecl	"* p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		3209158	0					
ANR	3209177	IdentifierDeclType	char *		3209158	0					
ANR	3209178	Identifier	p		3209158	1					
ANR	3209179	AssignmentExpression	"* p = ( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		3209158	2		=			
ANR	3209180	Identifier	p		3209158	0					
ANR	3209181	CastExpression	"( char * ) gs_malloc ( r -> mem , len , 1 , cname )"		3209158	1					
ANR	3209182	CastTarget	char *		3209158	0					
ANR	3209183	CallExpression	"gs_malloc ( r -> mem , len , 1 , cname )"		3209158	1					
ANR	3209184	Callee	gs_malloc		3209158	0					
ANR	3209185	Identifier	gs_malloc		3209158	0					
ANR	3209186	ArgumentList	r -> mem		3209158	1					
ANR	3209187	Argument	r -> mem		3209158	0					
ANR	3209188	PtrMemberAccess	r -> mem		3209158	0					
ANR	3209189	Identifier	r		3209158	0					
ANR	3209190	Identifier	mem		3209158	1					
ANR	3209191	Argument	len		3209158	1					
ANR	3209192	Identifier	len		3209158	0					
ANR	3209193	Argument	1		3209158	2					
ANR	3209194	PrimaryExpression	1		3209158	0					
ANR	3209195	Argument	cname		3209158	3					
ANR	3209196	Identifier	cname		3209158	0					
ANR	3209197	IfStatement	if ( p != 0 )		3209158	2					
ANR	3209198	Condition	p != 0	833:8:26300:26305	3209158	0	True				
ANR	3209199	EqualityExpression	p != 0		3209158	0		!=			
ANR	3209200	Identifier	p		3209158	0					
ANR	3209201	PrimaryExpression	0		3209158	1					
ANR	3209202	ExpressionStatement	"memcpy ( p , s , len )"	834:8:26316:26333	3209158	1	True				
ANR	3209203	CallExpression	"memcpy ( p , s , len )"		3209158	0					
ANR	3209204	Callee	memcpy		3209158	0					
ANR	3209205	Identifier	memcpy		3209158	0					
ANR	3209206	ArgumentList	p		3209158	1					
ANR	3209207	Argument	p		3209158	0					
ANR	3209208	Identifier	p		3209158	0					
ANR	3209209	Argument	s		3209158	1					
ANR	3209210	Identifier	s		3209158	0					
ANR	3209211	Argument	len		3209158	2					
ANR	3209212	Identifier	len		3209158	0					
ANR	3209213	ReturnStatement	return p ;	835:4:26339:26347	3209158	3	True				
ANR	3209214	Identifier	p		3209158	0					
ANR	3209215	ReturnType	static char *		3209158	1					
ANR	3209216	Identifier	my_strdup		3209158	2					
ANR	3209217	ParameterList	"fapi_ufst_server * r , const char * s , const char * cname"		3209158	3					
ANR	3209218	Parameter	fapi_ufst_server * r	828:10:26148:26167	3209158	0	True				
ANR	3209219	ParameterType	fapi_ufst_server *		3209158	0					
ANR	3209220	Identifier	r		3209158	1					
ANR	3209221	Parameter	const char * s	828:32:26170:26182	3209158	1	True				
ANR	3209222	ParameterType	const char *		3209158	0					
ANR	3209223	Identifier	s		3209158	1					
ANR	3209224	Parameter	const char * cname	828:47:26185:26201	3209158	2	True				
ANR	3209225	ParameterType	const char *		3209158	0					
ANR	3209226	Identifier	cname		3209158	1					
ANR	3209227	CFGEntryNode	ENTRY		3209158		True				
ANR	3209228	CFGExitNode	EXIT		3209158		True				
ANR	3209229	Symbol	p		3209158						
ANR	3209230	Symbol	strlen		3209158						
ANR	3209231	Symbol	r		3209158						
ANR	3209232	Symbol	gs_malloc		3209158						
ANR	3209233	Symbol	s		3209158						
ANR	3209234	Symbol	len		3209158						
ANR	3209235	Symbol	r -> mem		3209158						
ANR	3209236	Symbol	cname		3209158						
ANR	3209237	Symbol	* r		3209158						
ANR	3209238	Function	fco_open	838:0:26352:27575							
ANR	3209239	FunctionDef	"fco_open (fapi_ufst_server * r , const char * font_file_path , fco_list_elem * * result)"		3209238	0					
ANR	3209240	CompoundStatement		841:0:26468:27575	3209238	0					
ANR	3209241	IdentifierDeclStatement	int code ;	842:4:26474:26482	3209238	0	True				
ANR	3209242	IdentifierDecl	code		3209238	0					
ANR	3209243	IdentifierDeclType	int		3209238	0					
ANR	3209244	Identifier	code		3209238	1					
ANR	3209245	IdentifierDeclStatement	fco_list_elem * e = gx_UFST_find_static_fco ( font_file_path ) ;	843:4:26488:26546	3209238	1	True				
ANR	3209246	IdentifierDecl	* e = gx_UFST_find_static_fco ( font_file_path )		3209238	0					
ANR	3209247	IdentifierDeclType	fco_list_elem *		3209238	0					
ANR	3209248	Identifier	e		3209238	1					
ANR	3209249	AssignmentExpression	* e = gx_UFST_find_static_fco ( font_file_path )		3209238	2		=			
ANR	3209250	Identifier	e		3209238	0					
ANR	3209251	CallExpression	gx_UFST_find_static_fco ( font_file_path )		3209238	1					
ANR	3209252	Callee	gx_UFST_find_static_fco		3209238	0					
ANR	3209253	Identifier	gx_UFST_find_static_fco		3209238	0					
ANR	3209254	ArgumentList	font_file_path		3209238	1					
ANR	3209255	Argument	font_file_path		3209238	0					
ANR	3209256	Identifier	font_file_path		3209238	0					
ANR	3209257	IfStatement	if ( e != NULL )		3209238	2					
ANR	3209258	Condition	e != NULL	845:8:26557:26565	3209238	0	True				
ANR	3209259	EqualityExpression	e != NULL		3209238	0		!=			
ANR	3209260	Identifier	e		3209238	0					
ANR	3209261	Identifier	NULL		3209238	1					
ANR	3209262	CompoundStatement		5:19:99:99	3209238	1					
ANR	3209263	ExpressionStatement	* result = e	846:8:26578:26589	3209238	0	True				
ANR	3209264	AssignmentExpression	* result = e		3209238	0		=			
ANR	3209265	UnaryOperationExpression	* result		3209238	0					
ANR	3209266	UnaryOperator	*		3209238	0					
ANR	3209267	Identifier	result		3209238	1					
ANR	3209268	Identifier	e		3209238	1					
ANR	3209269	ReturnStatement	return 0 ;	847:8:26599:26607	3209238	1	True				
ANR	3209270	PrimaryExpression	0		3209238	0					
ANR	3209271	ForStatement	for ( e = r -> fco_list ; e != 0 ; e = e -> next )		3209238	3					
ANR	3209272	ForInit	e = r -> fco_list ;	849:9:26624:26639	3209238	0	True				
ANR	3209273	AssignmentExpression	e = r -> fco_list		3209238	0		=			
ANR	3209274	Identifier	e		3209238	0					
ANR	3209275	PtrMemberAccess	r -> fco_list		3209238	1					
ANR	3209276	Identifier	r		3209238	0					
ANR	3209277	Identifier	fco_list		3209238	1					
ANR	3209278	Condition	e != 0	849:26:26641:26646	3209238	1	True				
ANR	3209279	EqualityExpression	e != 0		3209238	0		!=			
ANR	3209280	Identifier	e		3209238	0					
ANR	3209281	PrimaryExpression	0		3209238	1					
ANR	3209282	AssignmentExpression	e = e -> next	849:34:26649:26659	3209238	2	True	=			
ANR	3209283	Identifier	e		3209238	0					
ANR	3209284	PtrMemberAccess	e -> next		3209238	1					
ANR	3209285	Identifier	e		3209238	0					
ANR	3209286	Identifier	next		3209238	1					
ANR	3209287	CompoundStatement		9:47:193:193	3209238	3					
ANR	3209288	IfStatement	"if ( ! strcmp ( e -> file_path , font_file_path ) )"		3209238	0					
ANR	3209289	Condition	"! strcmp ( e -> file_path , font_file_path )"	850:12:26676:26712	3209238	0	True				
ANR	3209290	UnaryOperationExpression	"! strcmp ( e -> file_path , font_file_path )"		3209238	0					
ANR	3209291	UnaryOperator	!		3209238	0					
ANR	3209292	CallExpression	"strcmp ( e -> file_path , font_file_path )"		3209238	1					
ANR	3209293	Callee	strcmp		3209238	0					
ANR	3209294	Identifier	strcmp		3209238	0					
ANR	3209295	ArgumentList	e -> file_path		3209238	1					
ANR	3209296	Argument	e -> file_path		3209238	0					
ANR	3209297	PtrMemberAccess	e -> file_path		3209238	0					
ANR	3209298	Identifier	e		3209238	0					
ANR	3209299	Identifier	file_path		3209238	1					
ANR	3209300	Argument	font_file_path		3209238	1					
ANR	3209301	Identifier	font_file_path		3209238	0					
ANR	3209302	BreakStatement	break ;	851:12:26727:26732	3209238	1	True				
ANR	3209303	IfStatement	if ( e == 0 )		3209238	4					
ANR	3209304	Condition	e == 0	853:8:26748:26753	3209238	0	True				
ANR	3209305	EqualityExpression	e == 0		3209238	0		==			
ANR	3209306	Identifier	e		3209238	0					
ANR	3209307	PrimaryExpression	0		3209238	1					
ANR	3209308	CompoundStatement		14:8:297:310	3209238	1					
ANR	3209309	IdentifierDeclStatement	SW16 fcHandle ;	854:8:26766:26779	3209238	0	True				
ANR	3209310	IdentifierDecl	fcHandle		3209238	0					
ANR	3209311	IdentifierDeclType	SW16		3209238	0					
ANR	3209312	Identifier	fcHandle		3209238	1					
ANR	3209313	ExpressionStatement	FSA_FROM_SERVER	856:8:26790:26805	3209238	1	True				
ANR	3209314	Identifier	FSA_FROM_SERVER		3209238	0					
ANR	3209315	Statement	if	858:8:26816:26817	3209238	2	True				
ANR	3209316	Statement	(	858:11:26819:26819	3209238	3	True				
ANR	3209317	Statement	(	858:12:26820:26820	3209238	4	True				
ANR	3209318	Statement	code	858:13:26821:26824	3209238	5	True				
ANR	3209319	Statement	=	858:18:26826:26826	3209238	6	True				
ANR	3209320	Statement	CGIFfco_Open	858:20:26828:26839	3209238	7	True				
ANR	3209321	Statement	(	858:32:26840:26840	3209238	8	True				
ANR	3209322	Statement	FSA	858:33:26841:26843	3209238	9	True				
ANR	3209323	Statement	(	858:36:26844:26844	3209238	10	True				
ANR	3209324	Statement	UB8	858:37:26845:26847	3209238	11	True				
ANR	3209325	Statement	*	858:41:26849:26849	3209238	12	True				
ANR	3209326	Statement	)	858:42:26850:26850	3209238	13	True				
ANR	3209327	Statement	font_file_path	858:44:26852:26865	3209238	14	True				
ANR	3209328	Statement	","	858:58:26866:26866	3209238	15	True				
ANR	3209329	Statement	&	858:60:26868:26868	3209238	16	True				
ANR	3209330	Statement	fcHandle	858:61:26869:26876	3209238	17	True				
ANR	3209331	Statement	)	858:69:26877:26877	3209238	18	True				
ANR	3209332	Statement	)	858:70:26878:26878	3209238	19	True				
ANR	3209333	Statement	!=	858:72:26880:26881	3209238	20	True				
ANR	3209334	Statement	0	858:75:26883:26883	3209238	21	True				
ANR	3209335	Statement	)	858:76:26884:26884	3209238	22	True				
ANR	3209336	ReturnStatement	return code ;	859:12:26898:26909	3209238	23	True				
ANR	3209337	Identifier	code		3209238	0					
ANR	3209338	ExpressionStatement	"e = ( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"	860:8:26919:27030	3209238	24	True				
ANR	3209339	AssignmentExpression	"e = ( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		3209238	0		=			
ANR	3209340	Identifier	e		3209238	0					
ANR	3209341	CastExpression	"( fco_list_elem * ) gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		3209238	1					
ANR	3209342	CastTarget	fco_list_elem *		3209238	0					
ANR	3209343	CallExpression	"gs_malloc ( r -> mem , sizeof ( * e ) , 1 , ""fco_list_elem"" )"		3209238	1					
ANR	3209344	Callee	gs_malloc		3209238	0					
ANR	3209345	Identifier	gs_malloc		3209238	0					
ANR	3209346	ArgumentList	r -> mem		3209238	1					
ANR	3209347	Argument	r -> mem		3209238	0					
ANR	3209348	PtrMemberAccess	r -> mem		3209238	0					
ANR	3209349	Identifier	r		3209238	0					
ANR	3209350	Identifier	mem		3209238	1					
ANR	3209351	Argument	sizeof ( * e )		3209238	1					
ANR	3209352	SizeofExpression	sizeof ( * e )		3209238	0					
ANR	3209353	Sizeof	sizeof		3209238	0					
ANR	3209354	UnaryOperationExpression	* e		3209238	1					
ANR	3209355	UnaryOperator	*		3209238	0					
ANR	3209356	Identifier	e		3209238	1					
ANR	3209357	Argument	1		3209238	2					
ANR	3209358	PrimaryExpression	1		3209238	0					
ANR	3209359	Argument	"""fco_list_elem"""		3209238	3					
ANR	3209360	PrimaryExpression	"""fco_list_elem"""		3209238	0					
ANR	3209361	IfStatement	if ( e == 0 )		3209238	25					
ANR	3209362	Condition	e == 0	862:12:27044:27049	3209238	0	True				
ANR	3209363	EqualityExpression	e == 0		3209238	0		==			
ANR	3209364	Identifier	e		3209238	0					
ANR	3209365	PrimaryExpression	0		3209238	1					
ANR	3209366	CompoundStatement		22:20:583:583	3209238	1					
ANR	3209367	Statement	CGIFfco_Close	863:12:27066:27078	3209238	0	True				
ANR	3209368	Statement	(	863:25:27079:27079	3209238	1	True				
ANR	3209369	Statement	FSA	863:26:27080:27082	3209238	2	True				
ANR	3209370	Statement	fcHandle	863:30:27084:27091	3209238	3	True				
ANR	3209371	Statement	)	863:38:27092:27092	3209238	4	True				
ANR	3209372	ExpressionStatement		863:39:27093:27093	3209238	5	True				
ANR	3209373	ExpressionStatement	return_error ( gs_error_VMerror )	864:12:27107:27137	3209238	6	True				
ANR	3209374	CallExpression	return_error ( gs_error_VMerror )		3209238	0					
ANR	3209375	Callee	return_error		3209238	0					
ANR	3209376	Identifier	return_error		3209238	0					
ANR	3209377	ArgumentList	gs_error_VMerror		3209238	1					
ANR	3209378	Argument	gs_error_VMerror		3209238	0					
ANR	3209379	Identifier	gs_error_VMerror		3209238	0					
ANR	3209380	ExpressionStatement	e -> open_count = 0	866:8:27157:27174	3209238	26	True				
ANR	3209381	AssignmentExpression	e -> open_count = 0		3209238	0		=			
ANR	3209382	PtrMemberAccess	e -> open_count		3209238	0					
ANR	3209383	Identifier	e		3209238	0					
ANR	3209384	Identifier	open_count		3209238	1					
ANR	3209385	PrimaryExpression	0		3209238	1					
ANR	3209386	ExpressionStatement	e -> fcHandle = fcHandle	867:8:27184:27206	3209238	27	True				
ANR	3209387	AssignmentExpression	e -> fcHandle = fcHandle		3209238	0		=			
ANR	3209388	PtrMemberAccess	e -> fcHandle		3209238	0					
ANR	3209389	Identifier	e		3209238	0					
ANR	3209390	Identifier	fcHandle		3209238	1					
ANR	3209391	Identifier	fcHandle		3209238	1					
ANR	3209392	ExpressionStatement	"e -> file_path = my_strdup ( r , font_file_path , ""fco_file_path"" )"	868:8:27216:27276	3209238	28	True				
ANR	3209393	AssignmentExpression	"e -> file_path = my_strdup ( r , font_file_path , ""fco_file_path"" )"		3209238	0		=			
ANR	3209394	PtrMemberAccess	e -> file_path		3209238	0					
ANR	3209395	Identifier	e		3209238	0					
ANR	3209396	Identifier	file_path		3209238	1					
ANR	3209397	CallExpression	"my_strdup ( r , font_file_path , ""fco_file_path"" )"		3209238	1					
ANR	3209398	Callee	my_strdup		3209238	0					
ANR	3209399	Identifier	my_strdup		3209238	0					
ANR	3209400	ArgumentList	r		3209238	1					
ANR	3209401	Argument	r		3209238	0					
ANR	3209402	Identifier	r		3209238	0					
ANR	3209403	Argument	font_file_path		3209238	1					
ANR	3209404	Identifier	font_file_path		3209238	0					
ANR	3209405	Argument	"""fco_file_path"""		3209238	2					
ANR	3209406	PrimaryExpression	"""fco_file_path"""		3209238	0					
ANR	3209407	IfStatement	if ( e -> file_path == 0 )		3209238	29					
ANR	3209408	Condition	e -> file_path == 0	869:12:27290:27306	3209238	0	True				
ANR	3209409	EqualityExpression	e -> file_path == 0		3209238	0		==			
ANR	3209410	PtrMemberAccess	e -> file_path		3209238	0					
ANR	3209411	Identifier	e		3209238	0					
ANR	3209412	Identifier	file_path		3209238	1					
ANR	3209413	PrimaryExpression	0		3209238	1					
ANR	3209414	CompoundStatement		29:31:840:840	3209238	1					
ANR	3209415	Statement	CGIFfco_Close	870:12:27323:27335	3209238	0	True				
ANR	3209416	Statement	(	870:25:27336:27336	3209238	1	True				
ANR	3209417	Statement	FSA	870:26:27337:27339	3209238	2	True				
ANR	3209418	Statement	fcHandle	870:30:27341:27348	3209238	3	True				
ANR	3209419	Statement	)	870:38:27349:27349	3209238	4	True				
ANR	3209420	ExpressionStatement		870:39:27350:27350	3209238	5	True				
ANR	3209421	ExpressionStatement	"gs_free ( r -> mem , e , 0 , 0 , ""fco_list_elem"" )"	871:12:27364:27405	3209238	6	True				
ANR	3209422	CallExpression	"gs_free ( r -> mem , e , 0 , 0 , ""fco_list_elem"" )"		3209238	0					
ANR	3209423	Callee	gs_free		3209238	0					
ANR	3209424	Identifier	gs_free		3209238	0					
ANR	3209425	ArgumentList	r -> mem		3209238	1					
ANR	3209426	Argument	r -> mem		3209238	0					
ANR	3209427	PtrMemberAccess	r -> mem		3209238	0					
ANR	3209428	Identifier	r		3209238	0					
ANR	3209429	Identifier	mem		3209238	1					
ANR	3209430	Argument	e		3209238	1					
ANR	3209431	Identifier	e		3209238	0					
ANR	3209432	Argument	0		3209238	2					
ANR	3209433	PrimaryExpression	0		3209238	0					
ANR	3209434	Argument	0		3209238	3					
ANR	3209435	PrimaryExpression	0		3209238	0					
ANR	3209436	Argument	"""fco_list_elem"""		3209238	4					
ANR	3209437	PrimaryExpression	"""fco_list_elem"""		3209238	0					
ANR	3209438	ExpressionStatement	return_error ( gs_error_VMerror )	872:12:27419:27449	3209238	7	True				
ANR	3209439	CallExpression	return_error ( gs_error_VMerror )		3209238	0					
ANR	3209440	Callee	return_error		3209238	0					
ANR	3209441	Identifier	return_error		3209238	0					
ANR	3209442	ArgumentList	gs_error_VMerror		3209238	1					
ANR	3209443	Argument	gs_error_VMerror		3209238	0					
ANR	3209444	Identifier	gs_error_VMerror		3209238	0					
ANR	3209445	ExpressionStatement	e -> next = r -> fco_list	874:8:27469:27490	3209238	30	True				
ANR	3209446	AssignmentExpression	e -> next = r -> fco_list		3209238	0		=			
ANR	3209447	PtrMemberAccess	e -> next		3209238	0					
ANR	3209448	Identifier	e		3209238	0					
ANR	3209449	Identifier	next		3209238	1					
ANR	3209450	PtrMemberAccess	r -> fco_list		3209238	1					
ANR	3209451	Identifier	r		3209238	0					
ANR	3209452	Identifier	fco_list		3209238	1					
ANR	3209453	ExpressionStatement	r -> fco_list = e	875:8:27500:27515	3209238	31	True				
ANR	3209454	AssignmentExpression	r -> fco_list = e		3209238	0		=			
ANR	3209455	PtrMemberAccess	r -> fco_list		3209238	0					
ANR	3209456	Identifier	r		3209238	0					
ANR	3209457	Identifier	fco_list		3209238	1					
ANR	3209458	Identifier	e		3209238	1					
ANR	3209459	ExpressionStatement	e -> open_count ++	877:4:27527:27542	3209238	5	True				
ANR	3209460	PostIncDecOperationExpression	e -> open_count ++		3209238	0					
ANR	3209461	PtrMemberAccess	e -> open_count		3209238	0					
ANR	3209462	Identifier	e		3209238	0					
ANR	3209463	Identifier	open_count		3209238	1					
ANR	3209464	IncDec	++		3209238	1					
ANR	3209465	ExpressionStatement	* result = e	878:4:27548:27559	3209238	6	True				
ANR	3209466	AssignmentExpression	* result = e		3209238	0		=			
ANR	3209467	UnaryOperationExpression	* result		3209238	0					
ANR	3209468	UnaryOperator	*		3209238	0					
ANR	3209469	Identifier	result		3209238	1					
ANR	3209470	Identifier	e		3209238	1					
ANR	3209471	ReturnStatement	return 0 ;	879:4:27565:27573	3209238	7	True				
ANR	3209472	PrimaryExpression	0		3209238	0					
ANR	3209473	ReturnType	static gs_fapi_retcode		3209238	1					
ANR	3209474	Identifier	fco_open		3209238	2					
ANR	3209475	ParameterList	"fapi_ufst_server * r , const char * font_file_path , fco_list_elem * * result"		3209238	3					
ANR	3209476	Parameter	fapi_ufst_server * r	839:9:26384:26403	3209238	0	True				
ANR	3209477	ParameterType	fapi_ufst_server *		3209238	0					
ANR	3209478	Identifier	r		3209238	1					
ANR	3209479	Parameter	const char * font_file_path	839:31:26406:26431	3209238	1	True				
ANR	3209480	ParameterType	const char *		3209238	0					
ANR	3209481	Identifier	font_file_path		3209238	1					
ANR	3209482	Parameter	fco_list_elem * * result	840:9:26443:26465	3209238	2	True				
ANR	3209483	ParameterType	fco_list_elem * *		3209238	0					
ANR	3209484	Identifier	result		3209238	1					
ANR	3209485	CFGEntryNode	ENTRY		3209238		True				
ANR	3209486	CFGExitNode	EXIT		3209238		True				
ANR	3209487	Symbol	strcmp		3209238						
ANR	3209488	Symbol	e -> fcHandle		3209238						
ANR	3209489	Symbol	gx_UFST_find_static_fco		3209238						
ANR	3209490	Symbol	e -> file_path		3209238						
ANR	3209491	Symbol	code		3209238						
ANR	3209492	Symbol	NULL		3209238						
ANR	3209493	Symbol	e		3209238						
ANR	3209494	Symbol	r -> mem		3209238						
ANR	3209495	Symbol	e -> next		3209238						
ANR	3209496	Symbol	fcHandle		3209238						
ANR	3209497	Symbol	* e		3209238						
ANR	3209498	Symbol	result		3209238						
ANR	3209499	Symbol	gs_error_VMerror		3209238						
ANR	3209500	Symbol	e -> open_count		3209238						
ANR	3209501	Symbol	r		3209238						
ANR	3209502	Symbol	gs_malloc		3209238						
ANR	3209503	Symbol	* result		3209238						
ANR	3209504	Symbol	font_file_path		3209238						
ANR	3209505	Symbol	my_strdup		3209238						
ANR	3209506	Symbol	r -> fco_list		3209238						
ANR	3209507	Symbol	* r		3209238						
ANR	3209508	Function	ufst_make_font_data	882:0:27578:35374							
ANR	3209509	FunctionDef	"ufst_make_font_data (fapi_ufst_server * r , const char * font_file_path , gs_fapi_font * ff , ufst_common_font_data * * return_data)"		3209508	0					
ANR	3209510	CompoundStatement		885:0:27748:35374	3209508	0					
ANR	3209511	IdentifierDeclStatement	"ulong area_length = sizeof ( ufst_common_font_data ) , tt_size = 0 ;"	886:4:27754:27816	3209508	0	True				
ANR	3209512	IdentifierDecl	area_length = sizeof ( ufst_common_font_data )		3209508	0					
ANR	3209513	IdentifierDeclType	ulong		3209508	0					
ANR	3209514	Identifier	area_length		3209508	1					
ANR	3209515	AssignmentExpression	area_length = sizeof ( ufst_common_font_data )		3209508	2		=			
ANR	3209516	Identifier	area_length		3209508	0					
ANR	3209517	SizeofExpression	sizeof ( ufst_common_font_data )		3209508	1					
ANR	3209518	Sizeof	sizeof		3209508	0					
ANR	3209519	SizeofOperand	ufst_common_font_data		3209508	1					
ANR	3209520	IdentifierDecl	tt_size = 0		3209508	1					
ANR	3209521	IdentifierDeclType	ulong		3209508	0					
ANR	3209522	Identifier	tt_size		3209508	1					
ANR	3209523	AssignmentExpression	tt_size = 0		3209508	2		=			
ANR	3209524	Identifier	tt_size		3209508	0					
ANR	3209525	PrimaryExpression	0		3209508	1					
ANR	3209526	IdentifierDeclStatement	LPUB8 buf ;	887:4:27822:27831	3209508	1	True				
ANR	3209527	IdentifierDecl	buf		3209508	0					
ANR	3209528	IdentifierDeclType	LPUB8		3209508	0					
ANR	3209529	Identifier	buf		3209508	1					
ANR	3209530	IdentifierDeclStatement	PCLETTO_FHDR * h ;	888:4:27837:27852	3209508	2	True				
ANR	3209531	IdentifierDecl	* h		3209508	0					
ANR	3209532	IdentifierDeclType	PCLETTO_FHDR *		3209508	0					
ANR	3209533	Identifier	h		3209508	1					
ANR	3209534	IdentifierDeclStatement	ufst_common_font_data * d ;	889:4:27858:27882	3209508	3	True				
ANR	3209535	IdentifierDecl	* d		3209508	0					
ANR	3209536	IdentifierDeclType	ufst_common_font_data *		3209508	0					
ANR	3209537	Identifier	d		3209508	1					
ANR	3209538	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	890:4:27888:27927	3209508	4	True				
ANR	3209539	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		3209508	0					
ANR	3209540	IdentifierDeclType	bool		3209508	0					
ANR	3209541	Identifier	use_XL_format		3209508	1					
ANR	3209542	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		3209508	2		=			
ANR	3209543	Identifier	use_XL_format		3209508	0					
ANR	3209544	PtrMemberAccess	ff -> is_mtx_skipped		3209508	1					
ANR	3209545	Identifier	ff		3209508	0					
ANR	3209546	Identifier	is_mtx_skipped		3209508	1					
ANR	3209547	IdentifierDeclStatement	int code ;	891:4:27933:27941	3209508	5	True				
ANR	3209548	IdentifierDecl	code		3209508	0					
ANR	3209549	IdentifierDeclType	int		3209508	0					
ANR	3209550	Identifier	code		3209508	1					
ANR	3209551	ExpressionStatement	FSA_FROM_SERVER	893:4:27948:27963	3209508	6	True				
ANR	3209552	Identifier	FSA_FROM_SERVER		3209508	0					
ANR	3209553	ExpressionStatement	* return_data = 0	895:4:27970:27986	3209508	7	True				
ANR	3209554	AssignmentExpression	* return_data = 0		3209508	0		=			
ANR	3209555	UnaryOperationExpression	* return_data		3209508	0					
ANR	3209556	UnaryOperator	*		3209508	0					
ANR	3209557	Identifier	return_data		3209508	1					
ANR	3209558	PrimaryExpression	0		3209508	1					
ANR	3209559	ExpressionStatement	r -> fc . ttc_index = ff -> subfont	896:4:27992:28021	3209508	8	True				
ANR	3209560	AssignmentExpression	r -> fc . ttc_index = ff -> subfont		3209508	0		=			
ANR	3209561	MemberAccess	r -> fc . ttc_index		3209508	0					
ANR	3209562	PtrMemberAccess	r -> fc		3209508	0					
ANR	3209563	Identifier	r		3209508	0					
ANR	3209564	Identifier	fc		3209508	1					
ANR	3209565	Identifier	ttc_index		3209508	1					
ANR	3209566	PtrMemberAccess	ff -> subfont		3209508	1					
ANR	3209567	Identifier	ff		3209508	0					
ANR	3209568	Identifier	subfont		3209508	1					
ANR	3209569	IfStatement	if ( ff -> font_file_path == NULL )		3209508	9					
ANR	3209570	Condition	ff -> font_file_path == NULL	897:8:28031:28056	3209508	0	True				
ANR	3209571	EqualityExpression	ff -> font_file_path == NULL		3209508	0		==			
ANR	3209572	PtrMemberAccess	ff -> font_file_path		3209508	0					
ANR	3209573	Identifier	ff		3209508	0					
ANR	3209574	Identifier	font_file_path		3209508	1					
ANR	3209575	Identifier	NULL		3209508	1					
ANR	3209576	CompoundStatement		13:36:310:310	3209508	1					
ANR	3209577	ReturnStatement	return ( gs_error_invalidaccess ) ;	899:8:28096:28127	3209508	0	True				
ANR	3209578	Identifier	gs_error_invalidaccess		3209508	0					
ANR	3209579	ElseStatement	else		3209508	0					
ANR	3209580	CompoundStatement		46:8:1653:1686	3209508	0					
ANR	3209581	IdentifierDeclStatement	int sind = strlen ( font_file_path ) ;	930:8:29402:29435	3209508	0	True				
ANR	3209582	IdentifierDecl	sind = strlen ( font_file_path )		3209508	0					
ANR	3209583	IdentifierDeclType	int		3209508	0					
ANR	3209584	Identifier	sind		3209508	1					
ANR	3209585	AssignmentExpression	sind = strlen ( font_file_path )		3209508	2		=			
ANR	3209586	Identifier	sind		3209508	0					
ANR	3209587	CallExpression	strlen ( font_file_path )		3209508	1					
ANR	3209588	Callee	strlen		3209508	0					
ANR	3209589	Identifier	strlen		3209508	0					
ANR	3209590	ArgumentList	font_file_path		3209508	1					
ANR	3209591	Argument	font_file_path		3209508	0					
ANR	3209592	Identifier	font_file_path		3209508	0					
ANR	3209593	IfStatement	"if ( strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0 )"		3209508	1					
ANR	3209594	Condition	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0"	932:12:29450:29503	3209508	0	True				
ANR	3209595	EqualityExpression	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 ) != 0"		3209508	0		!=			
ANR	3209596	CallExpression	"strncasecmp ( font_file_path + sind - 4 , "".fco"" , 4 )"		3209508	0					
ANR	3209597	Callee	strncasecmp		3209508	0					
ANR	3209598	Identifier	strncasecmp		3209508	0					
ANR	3209599	ArgumentList	font_file_path + sind - 4		3209508	1					
ANR	3209600	Argument	font_file_path + sind - 4		3209508	0					
ANR	3209601	AdditiveExpression	font_file_path + sind - 4		3209508	0		+			
ANR	3209602	Identifier	font_file_path		3209508	0					
ANR	3209603	AdditiveExpression	sind - 4		3209508	1		-			
ANR	3209604	Identifier	sind		3209508	0					
ANR	3209605	PrimaryExpression	4		3209508	1					
ANR	3209606	Argument	""".fco"""		3209508	1					
ANR	3209607	PrimaryExpression	""".fco"""		3209508	0					
ANR	3209608	Argument	4		3209508	2					
ANR	3209609	PrimaryExpression	4		3209508	0					
ANR	3209610	PrimaryExpression	0		3209508	1					
ANR	3209611	CompoundStatement		48:68:1757:1757	3209508	1					
ANR	3209612	ReturnStatement	return ( gs_error_invalidaccess ) ;	933:12:29520:29551	3209508	0	True				
ANR	3209613	Identifier	gs_error_invalidaccess		3209508	0					
ANR	3209614	ExpressionStatement	area_length += strlen ( font_file_path ) + 1	935:8:29571:29612	3209508	2	True				
ANR	3209615	AssignmentExpression	area_length += strlen ( font_file_path ) + 1		3209508	0		+=			
ANR	3209616	Identifier	area_length		3209508	0					
ANR	3209617	AdditiveExpression	strlen ( font_file_path ) + 1		3209508	1		+			
ANR	3209618	CallExpression	strlen ( font_file_path )		3209508	0					
ANR	3209619	Callee	strlen		3209508	0					
ANR	3209620	Identifier	strlen		3209508	0					
ANR	3209621	ArgumentList	font_file_path		3209508	1					
ANR	3209622	Argument	font_file_path		3209508	0					
ANR	3209623	Identifier	font_file_path		3209508	0					
ANR	3209624	PrimaryExpression	1		3209508	1					
ANR	3209625	ExpressionStatement	"buf = gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"	937:4:29624:29681	3209508	10	True				
ANR	3209626	AssignmentExpression	"buf = gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"		3209508	0		=			
ANR	3209627	Identifier	buf		3209508	0					
ANR	3209628	CallExpression	"gs_malloc ( r -> mem , area_length , 1 , ""ufst font data"" )"		3209508	1					
ANR	3209629	Callee	gs_malloc		3209508	0					
ANR	3209630	Identifier	gs_malloc		3209508	0					
ANR	3209631	ArgumentList	r -> mem		3209508	1					
ANR	3209632	Argument	r -> mem		3209508	0					
ANR	3209633	PtrMemberAccess	r -> mem		3209508	0					
ANR	3209634	Identifier	r		3209508	0					
ANR	3209635	Identifier	mem		3209508	1					
ANR	3209636	Argument	area_length		3209508	1					
ANR	3209637	Identifier	area_length		3209508	0					
ANR	3209638	Argument	1		3209508	2					
ANR	3209639	PrimaryExpression	1		3209508	0					
ANR	3209640	Argument	"""ufst font data"""		3209508	3					
ANR	3209641	PrimaryExpression	"""ufst font data"""		3209508	0					
ANR	3209642	IfStatement	if ( buf == 0 )		3209508	11					
ANR	3209643	Condition	buf == 0	938:8:29691:29698	3209508	0	True				
ANR	3209644	EqualityExpression	buf == 0		3209508	0		==			
ANR	3209645	Identifier	buf		3209508	0					
ANR	3209646	PrimaryExpression	0		3209508	1					
ANR	3209647	ExpressionStatement	return_error ( gs_error_VMerror )	939:8:29709:29739	3209508	1	True				
ANR	3209648	CallExpression	return_error ( gs_error_VMerror )		3209508	0					
ANR	3209649	Callee	return_error		3209508	0					
ANR	3209650	Identifier	return_error		3209508	0					
ANR	3209651	ArgumentList	gs_error_VMerror		3209508	1					
ANR	3209652	Argument	gs_error_VMerror		3209508	0					
ANR	3209653	Identifier	gs_error_VMerror		3209508	0					
ANR	3209654	ExpressionStatement	"memset ( buf , 0x00 , area_length )"	941:4:29746:29776	3209508	12	True				
ANR	3209655	CallExpression	"memset ( buf , 0x00 , area_length )"		3209508	0					
ANR	3209656	Callee	memset		3209508	0					
ANR	3209657	Identifier	memset		3209508	0					
ANR	3209658	ArgumentList	buf		3209508	1					
ANR	3209659	Argument	buf		3209508	0					
ANR	3209660	Identifier	buf		3209508	0					
ANR	3209661	Argument	0x00		3209508	1					
ANR	3209662	PrimaryExpression	0x00		3209508	0					
ANR	3209663	Argument	area_length		3209508	2					
ANR	3209664	Identifier	area_length		3209508	0					
ANR	3209665	ExpressionStatement	d = ( ufst_common_font_data * ) buf	943:4:29783:29816	3209508	13	True				
ANR	3209666	AssignmentExpression	d = ( ufst_common_font_data * ) buf		3209508	0		=			
ANR	3209667	Identifier	d		3209508	0					
ANR	3209668	CastExpression	( ufst_common_font_data * ) buf		3209508	1					
ANR	3209669	CastTarget	ufst_common_font_data *		3209508	0					
ANR	3209670	Identifier	buf		3209508	1					
ANR	3209671	ExpressionStatement	d -> tt_font_body_offset = 0	944:4:29822:29848	3209508	14	True				
ANR	3209672	AssignmentExpression	d -> tt_font_body_offset = 0		3209508	0		=			
ANR	3209673	PtrMemberAccess	d -> tt_font_body_offset		3209508	0					
ANR	3209674	Identifier	d		3209508	0					
ANR	3209675	Identifier	tt_font_body_offset		3209508	1					
ANR	3209676	PrimaryExpression	0		3209508	1					
ANR	3209677	ExpressionStatement	d -> platformId = 0	945:4:29854:29871	3209508	15	True				
ANR	3209678	AssignmentExpression	d -> platformId = 0		3209508	0		=			
ANR	3209679	PtrMemberAccess	d -> platformId		3209508	0					
ANR	3209680	Identifier	d		3209508	0					
ANR	3209681	Identifier	platformId		3209508	1					
ANR	3209682	PrimaryExpression	0		3209508	1					
ANR	3209683	ExpressionStatement	d -> specificId = 0	946:4:29877:29894	3209508	16	True				
ANR	3209684	AssignmentExpression	d -> specificId = 0		3209508	0		=			
ANR	3209685	PtrMemberAccess	d -> specificId		3209508	0					
ANR	3209686	Identifier	d		3209508	0					
ANR	3209687	Identifier	specificId		3209508	1					
ANR	3209688	PrimaryExpression	0		3209508	1					
ANR	3209689	ExpressionStatement	d -> decodingID [ 0 ] = 0	947:4:29900:29920	3209508	17	True				
ANR	3209690	AssignmentExpression	d -> decodingID [ 0 ] = 0		3209508	0		=			
ANR	3209691	ArrayIndexing	d -> decodingID [ 0 ]		3209508	0					
ANR	3209692	PtrMemberAccess	d -> decodingID		3209508	0					
ANR	3209693	Identifier	d		3209508	0					
ANR	3209694	Identifier	decodingID		3209508	1					
ANR	3209695	PrimaryExpression	0		3209508	1					
ANR	3209696	PrimaryExpression	0		3209508	1					
ANR	3209697	ExpressionStatement	d -> glyphs = 0	948:4:29926:29939	3209508	18	True				
ANR	3209698	AssignmentExpression	d -> glyphs = 0		3209508	0		=			
ANR	3209699	PtrMemberAccess	d -> glyphs		3209508	0					
ANR	3209700	Identifier	d		3209508	0					
ANR	3209701	Identifier	glyphs		3209508	1					
ANR	3209702	PrimaryExpression	0		3209508	1					
ANR	3209703	ExpressionStatement	d -> is_disk_font = ( ff -> font_file_path != NULL )	949:4:29945:29991	3209508	19	True				
ANR	3209704	AssignmentExpression	d -> is_disk_font = ( ff -> font_file_path != NULL )		3209508	0		=			
ANR	3209705	PtrMemberAccess	d -> is_disk_font		3209508	0					
ANR	3209706	Identifier	d		3209508	0					
ANR	3209707	Identifier	is_disk_font		3209508	1					
ANR	3209708	EqualityExpression	ff -> font_file_path != NULL		3209508	1		!=			
ANR	3209709	PtrMemberAccess	ff -> font_file_path		3209508	0					
ANR	3209710	Identifier	ff		3209508	0					
ANR	3209711	Identifier	font_file_path		3209508	1					
ANR	3209712	Identifier	NULL		3209508	1					
ANR	3209713	ExpressionStatement	d -> ufstfontinfo = NULL	950:4:29997:30019	3209508	20	True				
ANR	3209714	AssignmentExpression	d -> ufstfontinfo = NULL		3209508	0		=			
ANR	3209715	PtrMemberAccess	d -> ufstfontinfo		3209508	0					
ANR	3209716	Identifier	d		3209508	0					
ANR	3209717	Identifier	ufstfontinfo		3209508	1					
ANR	3209718	Identifier	NULL		3209508	1					
ANR	3209719	ExpressionStatement	d -> ufstfontinfosize = 0	951:4:30025:30048	3209508	21	True				
ANR	3209720	AssignmentExpression	d -> ufstfontinfosize = 0		3209508	0		=			
ANR	3209721	PtrMemberAccess	d -> ufstfontinfosize		3209508	0					
ANR	3209722	Identifier	d		3209508	0					
ANR	3209723	Identifier	ufstfontinfosize		3209508	1					
ANR	3209724	PrimaryExpression	0		3209508	1					
ANR	3209725	IfStatement	if ( d -> is_disk_font )		3209508	22					
ANR	3209726	Condition	d -> is_disk_font	953:8:30059:30073	3209508	0	True				
ANR	3209727	PtrMemberAccess	d -> is_disk_font		3209508	0					
ANR	3209728	Identifier	d		3209508	0					
ANR	3209729	Identifier	is_disk_font		3209508	1					
ANR	3209730	CompoundStatement		70:8:2337:2395	3209508	1					
ANR	3209731	IdentifierDeclStatement	fco_list_elem * e = gx_UFST_find_static_fco ( font_file_path ) ;	954:8:30086:30144	3209508	0	True				
ANR	3209732	IdentifierDecl	* e = gx_UFST_find_static_fco ( font_file_path )		3209508	0					
ANR	3209733	IdentifierDeclType	fco_list_elem *		3209508	0					
ANR	3209734	Identifier	e		3209508	1					
ANR	3209735	AssignmentExpression	* e = gx_UFST_find_static_fco ( font_file_path )		3209508	2		=			
ANR	3209736	Identifier	e		3209508	0					
ANR	3209737	CallExpression	gx_UFST_find_static_fco ( font_file_path )		3209508	1					
ANR	3209738	Callee	gx_UFST_find_static_fco		3209508	0					
ANR	3209739	Identifier	gx_UFST_find_static_fco		3209508	0					
ANR	3209740	ArgumentList	font_file_path		3209508	1					
ANR	3209741	Argument	font_file_path		3209508	0					
ANR	3209742	Identifier	font_file_path		3209508	0					
ANR	3209743	IfStatement	if ( e != NULL )		3209508	1					
ANR	3209744	Condition	e != NULL	956:12:30159:30167	3209508	0	True				
ANR	3209745	EqualityExpression	e != NULL		3209508	0		!=			
ANR	3209746	Identifier	e		3209508	0					
ANR	3209747	Identifier	NULL		3209508	1					
ANR	3209748	CompoundStatement		72:23:2421:2421	3209508	1					
ANR	3209749	ExpressionStatement	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"	957:12:30184:30241	3209508	0	True				
ANR	3209750	CallExpression	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"		3209508	0					
ANR	3209751	Callee	memcpy		3209508	0					
ANR	3209752	Identifier	memcpy		3209508	0					
ANR	3209753	ArgumentList	d + 1		3209508	1					
ANR	3209754	Argument	d + 1		3209508	0					
ANR	3209755	AdditiveExpression	d + 1		3209508	0		+			
ANR	3209756	Identifier	d		3209508	0					
ANR	3209757	PrimaryExpression	1		3209508	1					
ANR	3209758	Argument	font_file_path		3209508	1					
ANR	3209759	Identifier	font_file_path		3209508	0					
ANR	3209760	Argument	strlen ( font_file_path ) + 1		3209508	2					
ANR	3209761	AdditiveExpression	strlen ( font_file_path ) + 1		3209508	0		+			
ANR	3209762	CallExpression	strlen ( font_file_path )		3209508	0					
ANR	3209763	Callee	strlen		3209508	0					
ANR	3209764	Identifier	strlen		3209508	0					
ANR	3209765	ArgumentList	font_file_path		3209508	1					
ANR	3209766	Argument	font_file_path		3209508	0					
ANR	3209767	Identifier	font_file_path		3209508	0					
ANR	3209768	PrimaryExpression	1		3209508	1					
ANR	3209769	ExpressionStatement	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont	958:12:30255:30301	3209508	1	True				
ANR	3209770	AssignmentExpression	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont		3209508	0		=			
ANR	3209771	PtrMemberAccess	d -> font_id		3209508	0					
ANR	3209772	Identifier	d		3209508	0					
ANR	3209773	Identifier	font_id		3209508	1					
ANR	3209774	InclusiveOrExpression	( e -> fcHandle << 16 ) | ff -> subfont		3209508	1		|			
ANR	3209775	ShiftExpression	e -> fcHandle << 16		3209508	0		<<			
ANR	3209776	PtrMemberAccess	e -> fcHandle		3209508	0					
ANR	3209777	Identifier	e		3209508	0					
ANR	3209778	Identifier	fcHandle		3209508	1					
ANR	3209779	PrimaryExpression	16		3209508	1					
ANR	3209780	PtrMemberAccess	ff -> subfont		3209508	1					
ANR	3209781	Identifier	ff		3209508	0					
ANR	3209782	Identifier	subfont		3209508	1					
ANR	3209783	ExpressionStatement	d -> font_type = FC_FCO_TYPE	959:12:30315:30341	3209508	2	True				
ANR	3209784	AssignmentExpression	d -> font_type = FC_FCO_TYPE		3209508	0		=			
ANR	3209785	PtrMemberAccess	d -> font_type		3209508	0					
ANR	3209786	Identifier	d		3209508	0					
ANR	3209787	Identifier	font_type		3209508	1					
ANR	3209788	Identifier	FC_FCO_TYPE		3209508	1					
ANR	3209789	ElseStatement	else		3209508	0					
ANR	3209790	CompoundStatement		78:12:2631:2678	3209508	0					
ANR	3209791	IdentifierDeclStatement	"stream * f = sfopen ( font_file_path , ""r"" , r -> mem ) ;"	962:12:30380:30427	3209508	0	True				
ANR	3209792	IdentifierDecl	"* f = sfopen ( font_file_path , ""r"" , r -> mem )"		3209508	0					
ANR	3209793	IdentifierDeclType	stream *		3209508	0					
ANR	3209794	Identifier	f		3209508	1					
ANR	3209795	AssignmentExpression	"* f = sfopen ( font_file_path , ""r"" , r -> mem )"		3209508	2		=			
ANR	3209796	Identifier	f		3209508	0					
ANR	3209797	CallExpression	"sfopen ( font_file_path , ""r"" , r -> mem )"		3209508	1					
ANR	3209798	Callee	sfopen		3209508	0					
ANR	3209799	Identifier	sfopen		3209508	0					
ANR	3209800	ArgumentList	font_file_path		3209508	1					
ANR	3209801	Argument	font_file_path		3209508	0					
ANR	3209802	Identifier	font_file_path		3209508	0					
ANR	3209803	Argument	"""r"""		3209508	1					
ANR	3209804	PrimaryExpression	"""r"""		3209508	0					
ANR	3209805	Argument	r -> mem		3209508	2					
ANR	3209806	PtrMemberAccess	r -> mem		3209508	0					
ANR	3209807	Identifier	r		3209508	0					
ANR	3209808	Identifier	mem		3209508	1					
ANR	3209809	IfStatement	if ( f == NULL )		3209508	1					
ANR	3209810	Condition	f == NULL	964:16:30446:30454	3209508	0	True				
ANR	3209811	EqualityExpression	f == NULL		3209508	0		==			
ANR	3209812	Identifier	f		3209508	0					
ANR	3209813	Identifier	NULL		3209508	1					
ANR	3209814	CompoundStatement		80:27:2708:2708	3209508	1					
ANR	3209815	ExpressionStatement	"ufst_emprintf1 ( r -> mem , ""fapiufst: Can't open %s\\n"" , font_file_path )"	965:16:30475:30568	3209508	0	True				
ANR	3209816	CallExpression	"ufst_emprintf1 ( r -> mem , ""fapiufst: Can't open %s\\n"" , font_file_path )"		3209508	0					
ANR	3209817	Callee	ufst_emprintf1		3209508	0					
ANR	3209818	Identifier	ufst_emprintf1		3209508	0					
ANR	3209819	ArgumentList	r -> mem		3209508	1					
ANR	3209820	Argument	r -> mem		3209508	0					
ANR	3209821	PtrMemberAccess	r -> mem		3209508	0					
ANR	3209822	Identifier	r		3209508	0					
ANR	3209823	Identifier	mem		3209508	1					
ANR	3209824	Argument	"""fapiufst: Can't open %s\\n"""		3209508	1					
ANR	3209825	PrimaryExpression	"""fapiufst: Can't open %s\\n"""		3209508	0					
ANR	3209826	Argument	font_file_path		3209508	2					
ANR	3209827	Identifier	font_file_path		3209508	0					
ANR	3209828	ExpressionStatement	return_error ( gs_error_undefinedfilename )	967:16:30586:30626	3209508	1	True				
ANR	3209829	CallExpression	return_error ( gs_error_undefinedfilename )		3209508	0					
ANR	3209830	Callee	return_error		3209508	0					
ANR	3209831	Identifier	return_error		3209508	0					
ANR	3209832	ArgumentList	gs_error_undefinedfilename		3209508	1					
ANR	3209833	Argument	gs_error_undefinedfilename		3209508	0					
ANR	3209834	Identifier	gs_error_undefinedfilename		3209508	0					
ANR	3209835	ExpressionStatement	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"	969:12:30654:30711	3209508	2	True				
ANR	3209836	CallExpression	"memcpy ( d + 1 , font_file_path , strlen ( font_file_path ) + 1 )"		3209508	0					
ANR	3209837	Callee	memcpy		3209508	0					
ANR	3209838	Identifier	memcpy		3209508	0					
ANR	3209839	ArgumentList	d + 1		3209508	1					
ANR	3209840	Argument	d + 1		3209508	0					
ANR	3209841	AdditiveExpression	d + 1		3209508	0		+			
ANR	3209842	Identifier	d		3209508	0					
ANR	3209843	PrimaryExpression	1		3209508	1					
ANR	3209844	Argument	font_file_path		3209508	1					
ANR	3209845	Identifier	font_file_path		3209508	0					
ANR	3209846	Argument	strlen ( font_file_path ) + 1		3209508	2					
ANR	3209847	AdditiveExpression	strlen ( font_file_path ) + 1		3209508	0		+			
ANR	3209848	CallExpression	strlen ( font_file_path )		3209508	0					
ANR	3209849	Callee	strlen		3209508	0					
ANR	3209850	Identifier	strlen		3209508	0					
ANR	3209851	ArgumentList	font_file_path		3209508	1					
ANR	3209852	Argument	font_file_path		3209508	0					
ANR	3209853	Identifier	font_file_path		3209508	0					
ANR	3209854	PrimaryExpression	1		3209508	1					
ANR	3209855	ExpressionStatement	d -> font_type = get_font_type ( f )	970:12:30725:30756	3209508	3	True				
ANR	3209856	AssignmentExpression	d -> font_type = get_font_type ( f )		3209508	0		=			
ANR	3209857	PtrMemberAccess	d -> font_type		3209508	0					
ANR	3209858	Identifier	d		3209508	0					
ANR	3209859	Identifier	font_type		3209508	1					
ANR	3209860	CallExpression	get_font_type ( f )		3209508	1					
ANR	3209861	Callee	get_font_type		3209508	0					
ANR	3209862	Identifier	get_font_type		3209508	0					
ANR	3209863	ArgumentList	f		3209508	1					
ANR	3209864	Argument	f		3209508	0					
ANR	3209865	Identifier	f		3209508	0					
ANR	3209866	ExpressionStatement	sfclose ( f )	971:12:30770:30780	3209508	4	True				
ANR	3209867	CallExpression	sfclose ( f )		3209508	0					
ANR	3209868	Callee	sfclose		3209508	0					
ANR	3209869	Identifier	sfclose		3209508	0					
ANR	3209870	ArgumentList	f		3209508	1					
ANR	3209871	Argument	f		3209508	0					
ANR	3209872	Identifier	f		3209508	0					
ANR	3209873	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		3209508	5					
ANR	3209874	Condition	d -> font_type == FC_FCO_TYPE	972:16:30798:30824	3209508	0	True				
ANR	3209875	EqualityExpression	d -> font_type == FC_FCO_TYPE		3209508	0		==			
ANR	3209876	PtrMemberAccess	d -> font_type		3209508	0					
ANR	3209877	Identifier	d		3209508	0					
ANR	3209878	Identifier	font_type		3209508	1					
ANR	3209879	Identifier	FC_FCO_TYPE		3209508	1					
ANR	3209880	CompoundStatement		89:16:3096:3112	3209508	1					
ANR	3209881	IdentifierDeclStatement	fco_list_elem * e ;	973:16:30845:30861	3209508	0	True				
ANR	3209882	IdentifierDecl	* e		3209508	0					
ANR	3209883	IdentifierDeclType	fco_list_elem *		3209508	0					
ANR	3209884	Identifier	e		3209508	1					
ANR	3209885	IfStatement	"if ( ( code = fco_open ( r , font_file_path , & e ) ) != 0 )"		3209508	1					
ANR	3209886	Condition	"( code = fco_open ( r , font_file_path , & e ) ) != 0"	975:20:30884:30928	3209508	0	True				
ANR	3209887	EqualityExpression	"( code = fco_open ( r , font_file_path , & e ) ) != 0"		3209508	0		!=			
ANR	3209888	AssignmentExpression	"code = fco_open ( r , font_file_path , & e )"		3209508	0		=			
ANR	3209889	Identifier	code		3209508	0					
ANR	3209890	CallExpression	"fco_open ( r , font_file_path , & e )"		3209508	1					
ANR	3209891	Callee	fco_open		3209508	0					
ANR	3209892	Identifier	fco_open		3209508	0					
ANR	3209893	ArgumentList	r		3209508	1					
ANR	3209894	Argument	r		3209508	0					
ANR	3209895	Identifier	r		3209508	0					
ANR	3209896	Argument	font_file_path		3209508	1					
ANR	3209897	Identifier	font_file_path		3209508	0					
ANR	3209898	Argument	& e		3209508	2					
ANR	3209899	UnaryOperationExpression	& e		3209508	0					
ANR	3209900	UnaryOperator	&		3209508	0					
ANR	3209901	Identifier	e		3209508	1					
ANR	3209902	PrimaryExpression	0		3209508	1					
ANR	3209903	ReturnStatement	return code ;	976:20:30951:30962	3209508	1	True				
ANR	3209904	Identifier	code		3209508	0					
ANR	3209905	ExpressionStatement	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont	977:16:30980:31026	3209508	2	True				
ANR	3209906	AssignmentExpression	d -> font_id = ( e -> fcHandle << 16 ) | ff -> subfont		3209508	0		=			
ANR	3209907	PtrMemberAccess	d -> font_id		3209508	0					
ANR	3209908	Identifier	d		3209508	0					
ANR	3209909	Identifier	font_id		3209508	1					
ANR	3209910	InclusiveOrExpression	( e -> fcHandle << 16 ) | ff -> subfont		3209508	1		|			
ANR	3209911	ShiftExpression	e -> fcHandle << 16		3209508	0		<<			
ANR	3209912	PtrMemberAccess	e -> fcHandle		3209508	0					
ANR	3209913	Identifier	e		3209508	0					
ANR	3209914	Identifier	fcHandle		3209508	1					
ANR	3209915	PrimaryExpression	16		3209508	1					
ANR	3209916	PtrMemberAccess	ff -> subfont		3209508	1					
ANR	3209917	Identifier	ff		3209508	0					
ANR	3209918	Identifier	subfont		3209508	1					
ANR	3209919	ElseStatement	else		3209508	0					
ANR	3209920	CompoundStatement		97:9:3318:3318	3209508	0					
ANR	3209921	ExpressionStatement	d -> font_type = ( ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE )	982:8:31077:31134	3209508	0	True				
ANR	3209922	AssignmentExpression	d -> font_type = ( ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE )		3209508	0		=			
ANR	3209923	PtrMemberAccess	d -> font_type		3209508	0					
ANR	3209924	Identifier	d		3209508	0					
ANR	3209925	Identifier	font_type		3209508	1					
ANR	3209926	ConditionalExpression	ff -> is_type1 ? FC_PST1_TYPE : FC_TT_TYPE		3209508	1					
ANR	3209927	Condition	ff -> is_type1		3209508	0					
ANR	3209928	PtrMemberAccess	ff -> is_type1		3209508	0					
ANR	3209929	Identifier	ff		3209508	0					
ANR	3209930	Identifier	is_type1		3209508	1					
ANR	3209931	Identifier	FC_PST1_TYPE		3209508	1					
ANR	3209932	Identifier	FC_TT_TYPE		3209508	2					
ANR	3209933	ExpressionStatement	"d -> font_id = ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"	983:8:31144:31207	3209508	1	True				
ANR	3209934	AssignmentExpression	"d -> font_id = ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"		3209508	0		=			
ANR	3209935	PtrMemberAccess	d -> font_id		3209508	0					
ANR	3209936	Identifier	d		3209508	0					
ANR	3209937	Identifier	font_id		3209508	1					
ANR	3209938	CallExpression	"ff -> get_long ( ff , gs_fapi_font_feature_UniqueID , 0 )"		3209508	1					
ANR	3209939	Callee	ff -> get_long		3209508	0					
ANR	3209940	PtrMemberAccess	ff -> get_long		3209508	0					
ANR	3209941	Identifier	ff		3209508	0					
ANR	3209942	Identifier	get_long		3209508	1					
ANR	3209943	ArgumentList	ff		3209508	1					
ANR	3209944	Argument	ff		3209508	0					
ANR	3209945	Identifier	ff		3209508	0					
ANR	3209946	Argument	gs_fapi_font_feature_UniqueID		3209508	1					
ANR	3209947	Identifier	gs_fapi_font_feature_UniqueID		3209508	0					
ANR	3209948	Argument	0		3209508	2					
ANR	3209949	PrimaryExpression	0		3209508	0					
ANR	3209950	IfStatement	if ( d -> font_id < 0 )		3209508	2					
ANR	3209951	Condition	d -> font_id < 0	984:12:31221:31234	3209508	0	True				
ANR	3209952	RelationalExpression	d -> font_id < 0		3209508	0		<			
ANR	3209953	PtrMemberAccess	d -> font_id		3209508	0					
ANR	3209954	Identifier	d		3209508	0					
ANR	3209955	Identifier	font_id		3209508	1					
ANR	3209956	PrimaryExpression	0		3209508	1					
ANR	3209957	CompoundStatement		100:28:3488:3488	3209508	1					
ANR	3209958	ExpressionStatement	d -> font_id = assign_font_id ( )	985:12:31251:31280	3209508	0	True				
ANR	3209959	AssignmentExpression	d -> font_id = assign_font_id ( )		3209508	0		=			
ANR	3209960	PtrMemberAccess	d -> font_id		3209508	0					
ANR	3209961	Identifier	d		3209508	0					
ANR	3209962	Identifier	font_id		3209508	1					
ANR	3209963	CallExpression	assign_font_id ( )		3209508	1					
ANR	3209964	Callee	assign_font_id		3209508	0					
ANR	3209965	Identifier	assign_font_id		3209508	0					
ANR	3209966	ArgumentList			3209508	1					
ANR	3209967	ExpressionStatement	h = ( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )	987:8:31300:31358	3209508	3	True				
ANR	3209968	AssignmentExpression	h = ( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )		3209508	0		=			
ANR	3209969	Identifier	h		3209508	0					
ANR	3209970	CastExpression	( PCLETTO_FHDR * ) ( buf + sizeof ( ufst_common_font_data ) )		3209508	1					
ANR	3209971	CastTarget	PCLETTO_FHDR *		3209508	0					
ANR	3209972	AdditiveExpression	buf + sizeof ( ufst_common_font_data )		3209508	1		+			
ANR	3209973	Identifier	buf		3209508	0					
ANR	3209974	SizeofExpression	sizeof ( ufst_common_font_data )		3209508	1					
ANR	3209975	Sizeof	sizeof		3209508	0					
ANR	3209976	SizeofOperand	ufst_common_font_data		3209508	1					
ANR	3209977	IfStatement	if ( ff -> is_type1 )		3209508	4					
ANR	3209978	Condition	ff -> is_type1	989:12:31373:31384	3209508	0	True				
ANR	3209979	PtrMemberAccess	ff -> is_type1		3209508	0					
ANR	3209980	Identifier	ff		3209508	0					
ANR	3209981	Identifier	is_type1		3209508	1					
ANR	3209982	CompoundStatement		105:26:3638:3638	3209508	1					
ANR	3209983	ExpressionStatement	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE	990:12:31401:31443	3209508	0	True				
ANR	3209984	AssignmentExpression	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE		3209508	0		=			
ANR	3209985	PtrMemberAccess	h -> fontDescriptorSize		3209508	0					
ANR	3209986	Identifier	h		3209508	0					
ANR	3209987	Identifier	fontDescriptorSize		3209508	1					
ANR	3209988	Identifier	PCLETTOFONTHDRSIZE		3209508	1					
ANR	3209989	ElseStatement	else		3209508	0					
ANR	3209990	CompoundStatement		108:13:3719:3719	3209508	0					
ANR	3209991	ExpressionStatement	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE	993:12:31482:31524	3209508	0	True				
ANR	3209992	AssignmentExpression	h -> fontDescriptorSize = PCLETTOFONTHDRSIZE		3209508	0		=			
ANR	3209993	PtrMemberAccess	h -> fontDescriptorSize		3209508	0					
ANR	3209994	Identifier	h		3209508	0					
ANR	3209995	Identifier	fontDescriptorSize		3209508	1					
ANR	3209996	Identifier	PCLETTOFONTHDRSIZE		3209508	1					
ANR	3209997	IfStatement	if ( d -> font_type == FC_TT_TYPE && ! use_XL_format )		3209508	5					
ANR	3209998	Condition	d -> font_type == FC_TT_TYPE && ! use_XL_format	996:12:31549:31592	3209508	0	True				
ANR	3209999	AndExpression	d -> font_type == FC_TT_TYPE && ! use_XL_format		3209508	0		&&			
ANR	3210000	EqualityExpression	d -> font_type == FC_TT_TYPE		3209508	0		==			
ANR	3210001	PtrMemberAccess	d -> font_type		3209508	0					
ANR	3210002	Identifier	d		3209508	0					
ANR	3210003	Identifier	font_type		3209508	1					
ANR	3210004	Identifier	FC_TT_TYPE		3209508	1					
ANR	3210005	UnaryOperationExpression	! use_XL_format		3209508	1					
ANR	3210006	UnaryOperator	!		3209508	0					
ANR	3210007	Identifier	use_XL_format		3209508	1					
ANR	3210008	ExpressionStatement	h -> descriptorFormat = 16	997:12:31607:31631	3209508	1	True				
ANR	3210009	AssignmentExpression	h -> descriptorFormat = 16		3209508	0		=			
ANR	3210010	PtrMemberAccess	h -> descriptorFormat		3209508	0					
ANR	3210011	Identifier	h		3209508	0					
ANR	3210012	Identifier	descriptorFormat		3209508	1					
ANR	3210013	PrimaryExpression	16		3209508	1					
ANR	3210014	ElseStatement	else		3209508	0					
ANR	3210015	ExpressionStatement	h -> descriptorFormat = 15	999:12:31658:31682	3209508	0	True				
ANR	3210016	AssignmentExpression	h -> descriptorFormat = 15		3209508	0		=			
ANR	3210017	PtrMemberAccess	h -> descriptorFormat		3209508	0					
ANR	3210018	Identifier	h		3209508	0					
ANR	3210019	Identifier	descriptorFormat		3209508	1					
ANR	3210020	PrimaryExpression	15		3209508	1					
ANR	3210021	ExpressionStatement	h -> fontType = 11	1000:8:31692:31708	3209508	6	True				
ANR	3210022	AssignmentExpression	h -> fontType = 11		3209508	0		=			
ANR	3210023	PtrMemberAccess	h -> fontType		3209508	0					
ANR	3210024	Identifier	h		3209508	0					
ANR	3210025	Identifier	fontType		3209508	1					
ANR	3210026	PrimaryExpression	11		3209508	1					
ANR	3210027	ExpressionStatement	h -> style_msb = 0	1001:8:31777:31793	3209508	7	True				
ANR	3210028	AssignmentExpression	h -> style_msb = 0		3209508	0		=			
ANR	3210029	PtrMemberAccess	h -> style_msb		3209508	0					
ANR	3210030	Identifier	h		3209508	0					
ANR	3210031	Identifier	style_msb		3209508	1					
ANR	3210032	PrimaryExpression	0		3209508	1					
ANR	3210033	ExpressionStatement	h -> reserved1 = 0	1002:8:31863:31879	3209508	8	True				
ANR	3210034	AssignmentExpression	h -> reserved1 = 0		3209508	0		=			
ANR	3210035	PtrMemberAccess	h -> reserved1		3209508	0					
ANR	3210036	Identifier	h		3209508	0					
ANR	3210037	Identifier	reserved1		3209508	1					
ANR	3210038	PrimaryExpression	0		3209508	1					
ANR	3210039	ExpressionStatement	h -> baselinePosition = 0	1003:8:31889:31912	3209508	9	True				
ANR	3210040	AssignmentExpression	h -> baselinePosition = 0		3209508	0		=			
ANR	3210041	PtrMemberAccess	h -> baselinePosition		3209508	0					
ANR	3210042	Identifier	h		3209508	0					
ANR	3210043	Identifier	baselinePosition		3209508	1					
ANR	3210044	PrimaryExpression	0		3209508	1					
ANR	3210045	ExpressionStatement	h -> cellWidth = 1024	1004:8:31982:32001	3209508	10	True				
ANR	3210046	AssignmentExpression	h -> cellWidth = 1024		3209508	0		=			
ANR	3210047	PtrMemberAccess	h -> cellWidth		3209508	0					
ANR	3210048	Identifier	h		3209508	0					
ANR	3210049	Identifier	cellWidth		3209508	1					
ANR	3210050	PrimaryExpression	1024		3209508	1					
ANR	3210051	ExpressionStatement	h -> cellHeight = 1024	1005:8:32057:32077	3209508	11	True				
ANR	3210052	AssignmentExpression	h -> cellHeight = 1024		3209508	0		=			
ANR	3210053	PtrMemberAccess	h -> cellHeight		3209508	0					
ANR	3210054	Identifier	h		3209508	0					
ANR	3210055	Identifier	cellHeight		3209508	1					
ANR	3210056	PrimaryExpression	1024		3209508	1					
ANR	3210057	ExpressionStatement	h -> orientation = 0	1006:8:32132:32150	3209508	12	True				
ANR	3210058	AssignmentExpression	h -> orientation = 0		3209508	0		=			
ANR	3210059	PtrMemberAccess	h -> orientation		3209508	0					
ANR	3210060	Identifier	h		3209508	0					
ANR	3210061	Identifier	orientation		3209508	1					
ANR	3210062	PrimaryExpression	0		3209508	1					
ANR	3210063	ExpressionStatement	h -> spacing = 1	1007:8:32176:32190	3209508	13	True				
ANR	3210064	AssignmentExpression	h -> spacing = 1		3209508	0		=			
ANR	3210065	PtrMemberAccess	h -> spacing		3209508	0					
ANR	3210066	Identifier	h		3209508	0					
ANR	3210067	Identifier	spacing		3209508	1					
ANR	3210068	PrimaryExpression	1		3209508	1					
ANR	3210069	ExpressionStatement	h -> characterSet = 56	1008:8:32259:32279	3209508	14	True				
ANR	3210070	AssignmentExpression	h -> characterSet = 56		3209508	0		=			
ANR	3210071	PtrMemberAccess	h -> characterSet		3209508	0					
ANR	3210072	Identifier	h		3209508	0					
ANR	3210073	Identifier	characterSet		3209508	1					
ANR	3210074	PrimaryExpression	56		3209508	1					
ANR	3210075	ExpressionStatement	h -> pitch = 1024	1009:8:32348:32363	3209508	15	True				
ANR	3210076	AssignmentExpression	h -> pitch = 1024		3209508	0		=			
ANR	3210077	PtrMemberAccess	h -> pitch		3209508	0					
ANR	3210078	Identifier	h		3209508	0					
ANR	3210079	Identifier	pitch		3209508	1					
ANR	3210080	PrimaryExpression	1024		3209508	1					
ANR	3210081	ExpressionStatement	h -> height = 0	1010:8:32406:32419	3209508	16	True				
ANR	3210082	AssignmentExpression	h -> height = 0		3209508	0		=			
ANR	3210083	PtrMemberAccess	h -> height		3209508	0					
ANR	3210084	Identifier	h		3209508	0					
ANR	3210085	Identifier	height		3209508	1					
ANR	3210086	PrimaryExpression	0		3209508	1					
ANR	3210087	ExpressionStatement	h -> xHeight = 512	1011:8:32462:32478	3209508	17	True				
ANR	3210088	AssignmentExpression	h -> xHeight = 512		3209508	0		=			
ANR	3210089	PtrMemberAccess	h -> xHeight		3209508	0					
ANR	3210090	Identifier	h		3209508	0					
ANR	3210091	Identifier	xHeight		3209508	1					
ANR	3210092	PrimaryExpression	512		3209508	1					
ANR	3210093	ExpressionStatement	h -> widthType = 0	1012:8:32520:32536	3209508	18	True				
ANR	3210094	AssignmentExpression	h -> widthType = 0		3209508	0		=			
ANR	3210095	PtrMemberAccess	h -> widthType		3209508	0					
ANR	3210096	Identifier	h		3209508	0					
ANR	3210097	Identifier	widthType		3209508	1					
ANR	3210098	PrimaryExpression	0		3209508	1					
ANR	3210099	ExpressionStatement	h -> style_lsb = 0	1013:8:32578:32594	3209508	19	True				
ANR	3210100	AssignmentExpression	h -> style_lsb = 0		3209508	0		=			
ANR	3210101	PtrMemberAccess	h -> style_lsb		3209508	0					
ANR	3210102	Identifier	h		3209508	0					
ANR	3210103	Identifier	style_lsb		3209508	1					
ANR	3210104	PrimaryExpression	0		3209508	1					
ANR	3210105	ExpressionStatement	h -> strokeWeight = 0	1014:8:32636:32655	3209508	20	True				
ANR	3210106	AssignmentExpression	h -> strokeWeight = 0		3209508	0		=			
ANR	3210107	PtrMemberAccess	h -> strokeWeight		3209508	0					
ANR	3210108	Identifier	h		3209508	0					
ANR	3210109	Identifier	strokeWeight		3209508	1					
ANR	3210110	PrimaryExpression	0		3209508	1					
ANR	3210111	ExpressionStatement	h -> typeface_lsb = 0	1015:8:32694:32713	3209508	21	True				
ANR	3210112	AssignmentExpression	h -> typeface_lsb = 0		3209508	0		=			
ANR	3210113	PtrMemberAccess	h -> typeface_lsb		3209508	0					
ANR	3210114	Identifier	h		3209508	0					
ANR	3210115	Identifier	typeface_lsb		3209508	1					
ANR	3210116	PrimaryExpression	0		3209508	1					
ANR	3210117	ExpressionStatement	h -> typeface_msb = 0	1016:8:32752:32771	3209508	22	True				
ANR	3210118	AssignmentExpression	h -> typeface_msb = 0		3209508	0		=			
ANR	3210119	PtrMemberAccess	h -> typeface_msb		3209508	0					
ANR	3210120	Identifier	h		3209508	0					
ANR	3210121	Identifier	typeface_msb		3209508	1					
ANR	3210122	PrimaryExpression	0		3209508	1					
ANR	3210123	ExpressionStatement	h -> serifStyle = 0	1017:8:32810:32827	3209508	23	True				
ANR	3210124	AssignmentExpression	h -> serifStyle = 0		3209508	0		=			
ANR	3210125	PtrMemberAccess	h -> serifStyle		3209508	0					
ANR	3210126	Identifier	h		3209508	0					
ANR	3210127	Identifier	serifStyle		3209508	1					
ANR	3210128	PrimaryExpression	0		3209508	1					
ANR	3210129	ExpressionStatement	h -> quality = 0	1018:8:32868:32882	3209508	24	True				
ANR	3210130	AssignmentExpression	h -> quality = 0		3209508	0		=			
ANR	3210131	PtrMemberAccess	h -> quality		3209508	0					
ANR	3210132	Identifier	h		3209508	0					
ANR	3210133	Identifier	quality		3209508	1					
ANR	3210134	PrimaryExpression	0		3209508	1					
ANR	3210135	ExpressionStatement	h -> placement = 0	1019:8:32935:32951	3209508	25	True				
ANR	3210136	AssignmentExpression	h -> placement = 0		3209508	0		=			
ANR	3210137	PtrMemberAccess	h -> placement		3209508	0					
ANR	3210138	Identifier	h		3209508	0					
ANR	3210139	Identifier	placement		3209508	1					
ANR	3210140	PrimaryExpression	0		3209508	1					
ANR	3210141	ExpressionStatement	h -> underlinePosition = 0	1020:8:33003:33027	3209508	26	True				
ANR	3210142	AssignmentExpression	h -> underlinePosition = 0		3209508	0		=			
ANR	3210143	PtrMemberAccess	h -> underlinePosition		3209508	0					
ANR	3210144	Identifier	h		3209508	0					
ANR	3210145	Identifier	underlinePosition		3209508	1					
ANR	3210146	PrimaryExpression	0		3209508	1					
ANR	3210147	ExpressionStatement	h -> underlineHeight = 0	1021:8:33055:33077	3209508	27	True				
ANR	3210148	AssignmentExpression	h -> underlineHeight = 0		3209508	0		=			
ANR	3210149	PtrMemberAccess	h -> underlineHeight		3209508	0					
ANR	3210150	Identifier	h		3209508	0					
ANR	3210151	Identifier	underlineHeight		3209508	1					
ANR	3210152	PrimaryExpression	0		3209508	1					
ANR	3210153	ExpressionStatement	h -> textHeight = 102	1022:8:33099:33118	3209508	28	True				
ANR	3210154	AssignmentExpression	h -> textHeight = 102		3209508	0		=			
ANR	3210155	PtrMemberAccess	h -> textHeight		3209508	0					
ANR	3210156	Identifier	h		3209508	0					
ANR	3210157	Identifier	textHeight		3209508	1					
ANR	3210158	PrimaryExpression	102		3209508	1					
ANR	3210159	ExpressionStatement	h -> textWidth = 1024	1023:8:33179:33198	3209508	29	True				
ANR	3210160	AssignmentExpression	h -> textWidth = 1024		3209508	0		=			
ANR	3210161	PtrMemberAccess	h -> textWidth		3209508	0					
ANR	3210162	Identifier	h		3209508	0					
ANR	3210163	Identifier	textWidth		3209508	1					
ANR	3210164	PrimaryExpression	1024		3209508	1					
ANR	3210165	ExpressionStatement	h -> firstCode = 0	1024:8:33237:33253	3209508	30	True				
ANR	3210166	AssignmentExpression	h -> firstCode = 0		3209508	0		=			
ANR	3210167	PtrMemberAccess	h -> firstCode		3209508	0					
ANR	3210168	Identifier	h		3209508	0					
ANR	3210169	Identifier	firstCode		3209508	1					
ANR	3210170	PrimaryExpression	0		3209508	1					
ANR	3210171	ExpressionStatement	h -> lastCode = 255	1025:8:33299:33316	3209508	31	True				
ANR	3210172	AssignmentExpression	h -> lastCode = 255		3209508	0		=			
ANR	3210173	PtrMemberAccess	h -> lastCode		3209508	0					
ANR	3210174	Identifier	h		3209508	0					
ANR	3210175	Identifier	lastCode		3209508	1					
ANR	3210176	PrimaryExpression	255		3209508	1					
ANR	3210177	ExpressionStatement	h -> pitch_ext = 0	1026:8:33396:33412	3209508	32	True				
ANR	3210178	AssignmentExpression	h -> pitch_ext = 0		3209508	0		=			
ANR	3210179	PtrMemberAccess	h -> pitch_ext		3209508	0					
ANR	3210180	Identifier	h		3209508	0					
ANR	3210181	Identifier	pitch_ext		3209508	1					
ANR	3210182	PrimaryExpression	0		3209508	1					
ANR	3210183	ExpressionStatement	h -> height_ext = 0	1027:8:33452:33469	3209508	33	True				
ANR	3210184	AssignmentExpression	h -> height_ext = 0		3209508	0		=			
ANR	3210185	PtrMemberAccess	h -> height_ext		3209508	0					
ANR	3210186	Identifier	h		3209508	0					
ANR	3210187	Identifier	height_ext		3209508	1					
ANR	3210188	PrimaryExpression	0		3209508	1					
ANR	3210189	ExpressionStatement	h -> capHeight = 1024	1028:8:33508:33527	3209508	34	True				
ANR	3210190	AssignmentExpression	h -> capHeight = 1024		3209508	0		=			
ANR	3210191	PtrMemberAccess	h -> capHeight		3209508	0					
ANR	3210192	Identifier	h		3209508	0					
ANR	3210193	Identifier	capHeight		3209508	1					
ANR	3210194	PrimaryExpression	1024		3209508	1					
ANR	3210195	ExpressionStatement	h -> fontNumber = d -> font_id	1029:8:33566:33592	3209508	35	True				
ANR	3210196	AssignmentExpression	h -> fontNumber = d -> font_id		3209508	0		=			
ANR	3210197	PtrMemberAccess	h -> fontNumber		3209508	0					
ANR	3210198	Identifier	h		3209508	0					
ANR	3210199	Identifier	fontNumber		3209508	1					
ANR	3210200	PtrMemberAccess	d -> font_id		3209508	1					
ANR	3210201	Identifier	d		3209508	0					
ANR	3210202	Identifier	font_id		3209508	1					
ANR	3210203	ExpressionStatement	h -> fontName [ 0 ] = 0	1030:8:33621:33639	3209508	36	True				
ANR	3210204	AssignmentExpression	h -> fontName [ 0 ] = 0		3209508	0		=			
ANR	3210205	ArrayIndexing	h -> fontName [ 0 ]		3209508	0					
ANR	3210206	PtrMemberAccess	h -> fontName		3209508	0					
ANR	3210207	Identifier	h		3209508	0					
ANR	3210208	Identifier	fontName		3209508	1					
ANR	3210209	PrimaryExpression	0		3209508	1					
ANR	3210210	PrimaryExpression	0		3209508	1					
ANR	3210211	ExpressionStatement	h -> scaleFactor = 1024	1031:8:33679:33700	3209508	37	True				
ANR	3210212	AssignmentExpression	h -> scaleFactor = 1024		3209508	0		=			
ANR	3210213	PtrMemberAccess	h -> scaleFactor		3209508	0					
ANR	3210214	Identifier	h		3209508	0					
ANR	3210215	Identifier	scaleFactor		3209508	1					
ANR	3210216	PrimaryExpression	1024		3209508	1					
ANR	3210217	ExpressionStatement	h -> masterUnderlinePosition = 0	1032:8:33748:33778	3209508	38	True				
ANR	3210218	AssignmentExpression	h -> masterUnderlinePosition = 0		3209508	0		=			
ANR	3210219	PtrMemberAccess	h -> masterUnderlinePosition		3209508	0					
ANR	3210220	Identifier	h		3209508	0					
ANR	3210221	Identifier	masterUnderlinePosition		3209508	1					
ANR	3210222	PrimaryExpression	0		3209508	1					
ANR	3210223	ExpressionStatement	h -> masterUnderlineHeight = 0	1033:8:33835:33863	3209508	39	True				
ANR	3210224	AssignmentExpression	h -> masterUnderlineHeight = 0		3209508	0		=			
ANR	3210225	PtrMemberAccess	h -> masterUnderlineHeight		3209508	0					
ANR	3210226	Identifier	h		3209508	0					
ANR	3210227	Identifier	masterUnderlineHeight		3209508	1					
ANR	3210228	PrimaryExpression	0		3209508	1					
ANR	3210229	ExpressionStatement	h -> fontScalingTechnology = 1	1035:8:33921:33949	3209508	40	True				
ANR	3210230	AssignmentExpression	h -> fontScalingTechnology = 1		3209508	0		=			
ANR	3210231	PtrMemberAccess	h -> fontScalingTechnology		3209508	0					
ANR	3210232	Identifier	h		3209508	0					
ANR	3210233	Identifier	fontScalingTechnology		3209508	1					
ANR	3210234	PrimaryExpression	1		3209508	1					
ANR	3210235	ExpressionStatement	h -> variety = 0	1036:8:33997:34011	3209508	41	True				
ANR	3210236	AssignmentExpression	h -> variety = 0		3209508	0		=			
ANR	3210237	PtrMemberAccess	h -> variety		3209508	0					
ANR	3210238	Identifier	h		3209508	0					
ANR	3210239	Identifier	variety		3209508	1					
ANR	3210240	PrimaryExpression	0		3209508	1					
ANR	3210241	ExpressionStatement	"memset ( ( LPUB8 ) h + PCLETTOFONTHDRSIZE , 0 , 8 )"	1038:8:34054:34098	3209508	42	True				
ANR	3210242	CallExpression	"memset ( ( LPUB8 ) h + PCLETTOFONTHDRSIZE , 0 , 8 )"		3209508	0					
ANR	3210243	Callee	memset		3209508	0					
ANR	3210244	Identifier	memset		3209508	0					
ANR	3210245	ArgumentList	( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	1					
ANR	3210246	Argument	( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	0					
ANR	3210247	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	0		+			
ANR	3210248	CastExpression	( LPUB8 ) h		3209508	0					
ANR	3210249	CastTarget	LPUB8		3209508	0					
ANR	3210250	Identifier	h		3209508	1					
ANR	3210251	Identifier	PCLETTOFONTHDRSIZE		3209508	1					
ANR	3210252	Argument	0		3209508	1					
ANR	3210253	PrimaryExpression	0		3209508	0					
ANR	3210254	Argument	8		3209508	2					
ANR	3210255	PrimaryExpression	8		3209508	0					
ANR	3210256	ExpressionStatement	"UFST_PCLswapHdr ( ( UB8 * ) h , 0 )"	1045:8:34430:34459	3209508	43	True				
ANR	3210257	CallExpression	"UFST_PCLswapHdr ( ( UB8 * ) h , 0 )"		3209508	0					
ANR	3210258	Callee	UFST_PCLswapHdr		3209508	0					
ANR	3210259	Identifier	UFST_PCLswapHdr		3209508	0					
ANR	3210260	ArgumentList	( UB8 * ) h		3209508	1					
ANR	3210261	Argument	( UB8 * ) h		3209508	0					
ANR	3210262	CastExpression	( UB8 * ) h		3209508	0					
ANR	3210263	CastTarget	UB8 *		3209508	0					
ANR	3210264	Identifier	h		3209508	1					
ANR	3210265	Argument	0		3209508	1					
ANR	3210266	PrimaryExpression	0		3209508	0					
ANR	3210267	IfStatement	if ( ff -> is_type1 )		3209508	44					
ANR	3210268	Condition	ff -> is_type1	1047:12:34474:34485	3209508	0	True				
ANR	3210269	PtrMemberAccess	ff -> is_type1		3209508	0					
ANR	3210270	Identifier	ff		3209508	0					
ANR	3210271	Identifier	is_type1		3209508	1					
ANR	3210272	CompoundStatement		164:12:6753:6800	3209508	1					
ANR	3210273	IdentifierDeclStatement	LPUB8 fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE ;	1048:12:34502:34549	3209508	0	True				
ANR	3210274	IdentifierDecl	fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	0					
ANR	3210275	IdentifierDeclType	LPUB8		3209508	0					
ANR	3210276	Identifier	fontdata		3209508	1					
ANR	3210277	AssignmentExpression	fontdata = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	2		=			
ANR	3210278	Identifier	fontdata		3209508	0					
ANR	3210279	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	1		+			
ANR	3210280	CastExpression	( LPUB8 ) h		3209508	0					
ANR	3210281	CastTarget	LPUB8		3209508	0					
ANR	3210282	Identifier	h		3209508	1					
ANR	3210283	Identifier	PCLETTOFONTHDRSIZE		3209508	1					
ANR	3210284	ExpressionStatement	"pack_pseo_fhdr ( r , ff , fontdata )"	1050:12:34564:34595	3209508	1	True				
ANR	3210285	CallExpression	"pack_pseo_fhdr ( r , ff , fontdata )"		3209508	0					
ANR	3210286	Callee	pack_pseo_fhdr		3209508	0					
ANR	3210287	Identifier	pack_pseo_fhdr		3209508	0					
ANR	3210288	ArgumentList	r		3209508	1					
ANR	3210289	Argument	r		3209508	0					
ANR	3210290	Identifier	r		3209508	0					
ANR	3210291	Argument	ff		3209508	1					
ANR	3210292	Identifier	ff		3209508	0					
ANR	3210293	Argument	fontdata		3209508	2					
ANR	3210294	Identifier	fontdata		3209508	0					
ANR	3210295	ElseStatement	else		3209508	0					
ANR	3210296	CompoundStatement		170:12:6942:6998	3209508	0					
ANR	3210297	IdentifierDeclStatement	LPUB8 pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE ;	1053:12:34634:34677	3209508	0	True				
ANR	3210298	IdentifierDecl	pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	0					
ANR	3210299	IdentifierDeclType	LPUB8		3209508	0					
ANR	3210300	Identifier	pseg		3209508	1					
ANR	3210301	AssignmentExpression	pseg = ( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	2		=			
ANR	3210302	Identifier	pseg		3209508	0					
ANR	3210303	AdditiveExpression	( LPUB8 ) h + PCLETTOFONTHDRSIZE		3209508	1		+			
ANR	3210304	CastExpression	( LPUB8 ) h		3209508	0					
ANR	3210305	CastTarget	LPUB8		3209508	0					
ANR	3210306	Identifier	h		3209508	1					
ANR	3210307	Identifier	PCLETTOFONTHDRSIZE		3209508	1					
ANR	3210308	IdentifierDeclStatement	LPUB8 fontdata = pseg + 6 ;	1054:12:34691:34747	3209508	1	True				
ANR	3210309	IdentifierDecl	fontdata = pseg + 6		3209508	0					
ANR	3210310	IdentifierDeclType	LPUB8		3209508	0					
ANR	3210311	Identifier	fontdata		3209508	1					
ANR	3210312	AssignmentExpression	fontdata = pseg + 6		3209508	2		=			
ANR	3210313	Identifier	fontdata		3209508	0					
ANR	3210314	AdditiveExpression	pseg + 6		3209508	1		+			
ANR	3210315	Identifier	pseg		3209508	0					
ANR	3210316	PrimaryExpression	6		3209508	1					
ANR	3210317	ExpressionStatement	pseg [ 0 ] = 'G'	1057:12:34763:34776	3209508	2	True				
ANR	3210318	AssignmentExpression	pseg [ 0 ] = 'G'		3209508	0		=			
ANR	3210319	ArrayIndexing	pseg [ 0 ]		3209508	0					
ANR	3210320	Identifier	pseg		3209508	0					
ANR	3210321	PrimaryExpression	0		3209508	1					
ANR	3210322	PrimaryExpression	'G'		3209508	1					
ANR	3210323	ExpressionStatement	pseg [ 1 ] = 'T'	1058:12:34790:34803	3209508	3	True				
ANR	3210324	AssignmentExpression	pseg [ 1 ] = 'T'		3209508	0		=			
ANR	3210325	ArrayIndexing	pseg [ 1 ]		3209508	0					
ANR	3210326	Identifier	pseg		3209508	0					
ANR	3210327	PrimaryExpression	1		3209508	1					
ANR	3210328	PrimaryExpression	'T'		3209508	1					
ANR	3210329	ExpressionStatement	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) ) = SWAPL ( tt_size )	1060:12:34818:34860	3209508	4	True				
ANR	3210330	AssignmentExpression	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) ) = SWAPL ( tt_size )		3209508	0		=			
ANR	3210331	UnaryOperationExpression	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) )		3209508	0					
ANR	3210332	UnaryOperator	*		3209508	0					
ANR	3210333	CastExpression	( ulong * ) ( & ( pseg [ 2 ] ) )		3209508	1					
ANR	3210334	CastTarget	ulong *		3209508	0					
ANR	3210335	UnaryOperationExpression	& ( pseg [ 2 ] )		3209508	1					
ANR	3210336	UnaryOperator	&		3209508	0					
ANR	3210337	ArrayIndexing	pseg [ 2 ]		3209508	1					
ANR	3210338	Identifier	pseg		3209508	0					
ANR	3210339	PrimaryExpression	2		3209508	1					
ANR	3210340	CallExpression	SWAPL ( tt_size )		3209508	1					
ANR	3210341	Callee	SWAPL		3209508	0					
ANR	3210342	Identifier	SWAPL		3209508	0					
ANR	3210343	ArgumentList	tt_size		3209508	1					
ANR	3210344	Argument	tt_size		3209508	0					
ANR	3210345	Identifier	tt_size		3209508	0					
ANR	3210346	ExpressionStatement	d -> tt_font_body_offset = ( LPUB8 ) fontdata - ( LPUB8 ) d	1062:12:34875:34928	3209508	5	True				
ANR	3210347	AssignmentExpression	d -> tt_font_body_offset = ( LPUB8 ) fontdata - ( LPUB8 ) d		3209508	0		=			
ANR	3210348	PtrMemberAccess	d -> tt_font_body_offset		3209508	0					
ANR	3210349	Identifier	d		3209508	0					
ANR	3210350	Identifier	tt_font_body_offset		3209508	1					
ANR	3210351	AdditiveExpression	( LPUB8 ) fontdata - ( LPUB8 ) d		3209508	1		-			
ANR	3210352	CastExpression	( LPUB8 ) fontdata		3209508	0					
ANR	3210353	CastTarget	LPUB8		3209508	0					
ANR	3210354	Identifier	fontdata		3209508	1					
ANR	3210355	CastExpression	( LPUB8 ) d		3209508	1					
ANR	3210356	CastTarget	LPUB8		3209508	0					
ANR	3210357	Identifier	d		3209508	1					
ANR	3210358	IfStatement	"if ( ff -> serialize_tt_font ( ff , fontdata , tt_size ) )"		3209508	6					
ANR	3210359	Condition	"ff -> serialize_tt_font ( ff , fontdata , tt_size )"	1063:16:34946:34989	3209508	0	True				
ANR	3210360	CallExpression	"ff -> serialize_tt_font ( ff , fontdata , tt_size )"		3209508	0					
ANR	3210361	Callee	ff -> serialize_tt_font		3209508	0					
ANR	3210362	PtrMemberAccess	ff -> serialize_tt_font		3209508	0					
ANR	3210363	Identifier	ff		3209508	0					
ANR	3210364	Identifier	serialize_tt_font		3209508	1					
ANR	3210365	ArgumentList	ff		3209508	1					
ANR	3210366	Argument	ff		3209508	0					
ANR	3210367	Identifier	ff		3209508	0					
ANR	3210368	Argument	fontdata		3209508	1					
ANR	3210369	Identifier	fontdata		3209508	0					
ANR	3210370	Argument	tt_size		3209508	2					
ANR	3210371	Identifier	tt_size		3209508	0					
ANR	3210372	ExpressionStatement	return_error ( gs_error_invalidfont )	1064:16:35008:35042	3209508	1	True				
ANR	3210373	CallExpression	return_error ( gs_error_invalidfont )		3209508	0					
ANR	3210374	Callee	return_error		3209508	0					
ANR	3210375	Identifier	return_error		3209508	0					
ANR	3210376	ArgumentList	gs_error_invalidfont		3209508	1					
ANR	3210377	Argument	gs_error_invalidfont		3209508	0					
ANR	3210378	Identifier	gs_error_invalidfont		3209508	0					
ANR	3210379	ExpressionStatement	* ( fontdata + tt_size ) = 255	1065:12:35056:35083	3209508	7	True				
ANR	3210380	AssignmentExpression	* ( fontdata + tt_size ) = 255		3209508	0		=			
ANR	3210381	UnaryOperationExpression	* ( fontdata + tt_size )		3209508	0					
ANR	3210382	UnaryOperator	*		3209508	0					
ANR	3210383	AdditiveExpression	fontdata + tt_size		3209508	1		+			
ANR	3210384	Identifier	fontdata		3209508	0					
ANR	3210385	Identifier	tt_size		3209508	1					
ANR	3210386	PrimaryExpression	255		3209508	1					
ANR	3210387	ExpressionStatement	* ( fontdata + tt_size + 1 ) = 255	1066:12:35097:35128	3209508	8	True				
ANR	3210388	AssignmentExpression	* ( fontdata + tt_size + 1 ) = 255		3209508	0		=			
ANR	3210389	UnaryOperationExpression	* ( fontdata + tt_size + 1 )		3209508	0					
ANR	3210390	UnaryOperator	*		3209508	0					
ANR	3210391	AdditiveExpression	fontdata + tt_size + 1		3209508	1		+			
ANR	3210392	Identifier	fontdata		3209508	0					
ANR	3210393	AdditiveExpression	tt_size + 1		3209508	1		+			
ANR	3210394	Identifier	tt_size		3209508	0					
ANR	3210395	PrimaryExpression	1		3209508	1					
ANR	3210396	PrimaryExpression	255		3209508	1					
ANR	3210397	ExpressionStatement	* ( fontdata + tt_size + 2 ) = 0	1067:12:35142:35171	3209508	9	True				
ANR	3210398	AssignmentExpression	* ( fontdata + tt_size + 2 ) = 0		3209508	0		=			
ANR	3210399	UnaryOperationExpression	* ( fontdata + tt_size + 2 )		3209508	0					
ANR	3210400	UnaryOperator	*		3209508	0					
ANR	3210401	AdditiveExpression	fontdata + tt_size + 2		3209508	1		+			
ANR	3210402	Identifier	fontdata		3209508	0					
ANR	3210403	AdditiveExpression	tt_size + 2		3209508	1		+			
ANR	3210404	Identifier	tt_size		3209508	0					
ANR	3210405	PrimaryExpression	2		3209508	1					
ANR	3210406	PrimaryExpression	0		3209508	1					
ANR	3210407	ExpressionStatement	* ( fontdata + tt_size + 3 ) = 0	1068:12:35185:35214	3209508	10	True				
ANR	3210408	AssignmentExpression	* ( fontdata + tt_size + 3 ) = 0		3209508	0		=			
ANR	3210409	UnaryOperationExpression	* ( fontdata + tt_size + 3 )		3209508	0					
ANR	3210410	UnaryOperator	*		3209508	0					
ANR	3210411	AdditiveExpression	fontdata + tt_size + 3		3209508	1		+			
ANR	3210412	Identifier	fontdata		3209508	0					
ANR	3210413	AdditiveExpression	tt_size + 3		3209508	1		+			
ANR	3210414	Identifier	tt_size		3209508	0					
ANR	3210415	PrimaryExpression	3		3209508	1					
ANR	3210416	PrimaryExpression	0		3209508	1					
ANR	3210417	ExpressionStatement	* ( fontdata + tt_size + 4 ) = 0	1069:12:35228:35257	3209508	11	True				
ANR	3210418	AssignmentExpression	* ( fontdata + tt_size + 4 ) = 0		3209508	0		=			
ANR	3210419	UnaryOperationExpression	* ( fontdata + tt_size + 4 )		3209508	0					
ANR	3210420	UnaryOperator	*		3209508	0					
ANR	3210421	AdditiveExpression	fontdata + tt_size + 4		3209508	1		+			
ANR	3210422	Identifier	fontdata		3209508	0					
ANR	3210423	AdditiveExpression	tt_size + 4		3209508	1		+			
ANR	3210424	Identifier	tt_size		3209508	0					
ANR	3210425	PrimaryExpression	4		3209508	1					
ANR	3210426	PrimaryExpression	0		3209508	1					
ANR	3210427	ExpressionStatement	* ( fontdata + tt_size + 5 ) = 0	1070:12:35271:35300	3209508	12	True				
ANR	3210428	AssignmentExpression	* ( fontdata + tt_size + 5 ) = 0		3209508	0		=			
ANR	3210429	UnaryOperationExpression	* ( fontdata + tt_size + 5 )		3209508	0					
ANR	3210430	UnaryOperator	*		3209508	0					
ANR	3210431	AdditiveExpression	fontdata + tt_size + 5		3209508	1		+			
ANR	3210432	Identifier	fontdata		3209508	0					
ANR	3210433	AdditiveExpression	tt_size + 5		3209508	1		+			
ANR	3210434	Identifier	tt_size		3209508	0					
ANR	3210435	PrimaryExpression	5		3209508	1					
ANR	3210436	PrimaryExpression	0		3209508	1					
ANR	3210437	ExpressionStatement	* return_data = d	1073:4:35342:35358	3209508	23	True				
ANR	3210438	AssignmentExpression	* return_data = d		3209508	0		=			
ANR	3210439	UnaryOperationExpression	* return_data		3209508	0					
ANR	3210440	UnaryOperator	*		3209508	0					
ANR	3210441	Identifier	return_data		3209508	1					
ANR	3210442	Identifier	d		3209508	1					
ANR	3210443	ReturnStatement	return 0 ;	1074:4:35364:35372	3209508	24	True				
ANR	3210444	PrimaryExpression	0		3209508	0					
ANR	3210445	ReturnType	static gs_fapi_retcode		3209508	1					
ANR	3210446	Identifier	ufst_make_font_data		3209508	2					
ANR	3210447	ParameterList	"fapi_ufst_server * r , const char * font_file_path , gs_fapi_font * ff , ufst_common_font_data * * return_data"		3209508	3					
ANR	3210448	Parameter	fapi_ufst_server * r	883:20:27621:27640	3209508	0	True				
ANR	3210449	ParameterType	fapi_ufst_server *		3209508	0					
ANR	3210450	Identifier	r		3209508	1					
ANR	3210451	Parameter	const char * font_file_path	883:42:27643:27668	3209508	1	True				
ANR	3210452	ParameterType	const char *		3209508	0					
ANR	3210453	Identifier	font_file_path		3209508	1					
ANR	3210454	Parameter	gs_fapi_font * ff	884:20:27691:27707	3209508	2	True				
ANR	3210455	ParameterType	gs_fapi_font *		3209508	0					
ANR	3210456	Identifier	ff		3209508	1					
ANR	3210457	Parameter	ufst_common_font_data * * return_data	884:39:27710:27745	3209508	3	True				
ANR	3210458	ParameterType	ufst_common_font_data * *		3209508	0					
ANR	3210459	Identifier	return_data		3209508	1					
ANR	3210460	CFGEntryNode	ENTRY		3209508		True				
ANR	3210461	CFGExitNode	EXIT		3209508		True				
ANR	3210462	Symbol	e -> fcHandle		3209508						
ANR	3210463	Symbol	* ( fontdata + tt_size + 2 )		3209508						
ANR	3210464	Symbol	gx_UFST_find_static_fco		3209508						
ANR	3210465	Symbol	r -> mem		3209508						
ANR	3210466	Symbol	h -> pitch_ext		3209508						
ANR	3210467	Symbol	h -> variety		3209508						
ANR	3210468	Symbol	h -> style_msb		3209508						
ANR	3210469	Symbol	sfopen		3209508						
ANR	3210470	Symbol	d -> platformId		3209508						
ANR	3210471	Symbol	h -> height		3209508						
ANR	3210472	Symbol	gs_error_invalidaccess		3209508						
ANR	3210473	Symbol	h -> widthType		3209508						
ANR	3210474	Symbol	ff -> font_file_path		3209508						
ANR	3210475	Symbol	r -> fc . ttc_index		3209508						
ANR	3210476	Symbol	h -> typeface_lsb		3209508						
ANR	3210477	Symbol	h -> fontScalingTechnology		3209508						
ANR	3210478	Symbol	h -> characterSet		3209508						
ANR	3210479	Symbol	gs_malloc		3209508						
ANR	3210480	Symbol	h -> masterUnderlineHeight		3209508						
ANR	3210481	Symbol	return_data		3209508						
ANR	3210482	Symbol	h -> fontDescriptorSize		3209508						
ANR	3210483	Symbol	* ( fontdata + tt_size + 3 )		3209508						
ANR	3210484	Symbol	d -> ufstfontinfosize		3209508						
ANR	3210485	Symbol	FC_FCO_TYPE		3209508						
ANR	3210486	Symbol	h -> serifStyle		3209508						
ANR	3210487	Symbol	strncasecmp		3209508						
ANR	3210488	Symbol	ff -> serialize_tt_font		3209508						
ANR	3210489	Symbol	PCLETTOFONTHDRSIZE		3209508						
ANR	3210490	Symbol	h -> orientation		3209508						
ANR	3210491	Symbol	h -> textWidth		3209508						
ANR	3210492	Symbol	ff -> subfont		3209508						
ANR	3210493	Symbol	gs_error_invalidfont		3209508						
ANR	3210494	Symbol	h -> underlineHeight		3209508						
ANR	3210495	Symbol	d		3209508						
ANR	3210496	Symbol	* ff		3209508						
ANR	3210497	Symbol	e		3209508						
ANR	3210498	Symbol	f		3209508						
ANR	3210499	Symbol	get_font_type		3209508						
ANR	3210500	Symbol	h		3209508						
ANR	3210501	Symbol	gs_error_undefinedfilename		3209508						
ANR	3210502	Symbol	h -> typeface_msb		3209508						
ANR	3210503	Symbol	r		3209508						
ANR	3210504	Symbol	buf		3209508						
ANR	3210505	Symbol	* return_data		3209508						
ANR	3210506	Symbol	h -> cellWidth		3209508						
ANR	3210507	Symbol	h -> pitch		3209508						
ANR	3210508	Symbol	h -> scaleFactor		3209508						
ANR	3210509	Symbol	h -> quality		3209508						
ANR	3210510	Symbol	h -> height_ext		3209508						
ANR	3210511	Symbol	* ( fontdata + tt_size )		3209508						
ANR	3210512	Symbol	* tt_size		3209508						
ANR	3210513	Symbol	* ( fontdata + tt_size + 4 )		3209508						
ANR	3210514	Symbol	fco_open		3209508						
ANR	3210515	Symbol	h -> textHeight		3209508						
ANR	3210516	Symbol	h -> baselinePosition		3209508						
ANR	3210517	Symbol	h -> lastCode		3209508						
ANR	3210518	Symbol	strlen		3209508						
ANR	3210519	Symbol	d -> glyphs		3209508						
ANR	3210520	Symbol	h -> fontName		3209508						
ANR	3210521	Symbol	h -> masterUnderlinePosition		3209508						
ANR	3210522	Symbol	* h -> fontName		3209508						
ANR	3210523	Symbol	NULL		3209508						
ANR	3210524	Symbol	* * h		3209508						
ANR	3210525	Symbol	SWAPL		3209508						
ANR	3210526	Symbol	* * d		3209508						
ANR	3210527	Symbol	h -> descriptorFormat		3209508						
ANR	3210528	Symbol	fontdata		3209508						
ANR	3210529	Symbol	use_XL_format		3209508						
ANR	3210530	Symbol	d -> is_disk_font		3209508						
ANR	3210531	Symbol	d -> font_type		3209508						
ANR	3210532	Symbol	* pseg		3209508						
ANR	3210533	Symbol	sind		3209508						
ANR	3210534	Symbol	ff -> is_mtx_skipped		3209508						
ANR	3210535	Symbol	ff		3209508						
ANR	3210536	Symbol	code		3209508						
ANR	3210537	Symbol	ff -> is_type1		3209508						
ANR	3210538	Symbol	* fontdata		3209508						
ANR	3210539	Symbol	* ( fontdata + tt_size + 5 )		3209508						
ANR	3210540	Symbol	h -> capHeight		3209508						
ANR	3210541	Symbol	FC_TT_TYPE		3209508						
ANR	3210542	Symbol	h -> fontType		3209508						
ANR	3210543	Symbol	* d -> decodingID		3209508						
ANR	3210544	Symbol	h -> reserved1		3209508						
ANR	3210545	Symbol	h -> placement		3209508						
ANR	3210546	Symbol	h -> fontNumber		3209508						
ANR	3210547	Symbol	* ( ( ulong * ) ( & ( pseg [ 2 ] ) ) )		3209508						
ANR	3210548	Symbol	* ( fontdata + tt_size + 1 )		3209508						
ANR	3210549	Symbol	pseg		3209508						
ANR	3210550	Symbol	d -> decodingID		3209508						
ANR	3210551	Symbol	h -> style_lsb		3209508						
ANR	3210552	Symbol	ff -> get_long		3209508						
ANR	3210553	Symbol	tt_size		3209508						
ANR	3210554	Symbol	assign_font_id		3209508						
ANR	3210555	Symbol	d -> specificId		3209508						
ANR	3210556	Symbol	d -> font_id		3209508						
ANR	3210557	Symbol	h -> underlinePosition		3209508						
ANR	3210558	Symbol	gs_fapi_font_feature_UniqueID		3209508						
ANR	3210559	Symbol	h -> cellHeight		3209508						
ANR	3210560	Symbol	h -> xHeight		3209508						
ANR	3210561	Symbol	r -> fc		3209508						
ANR	3210562	Symbol	d -> ufstfontinfo		3209508						
ANR	3210563	Symbol	FC_PST1_TYPE		3209508						
ANR	3210564	Symbol	h -> firstCode		3209508						
ANR	3210565	Symbol	& e		3209508						
ANR	3210566	Symbol	* d		3209508						
ANR	3210567	Symbol	* e		3209508						
ANR	3210568	Symbol	gs_error_VMerror		3209508						
ANR	3210569	Symbol	d -> tt_font_body_offset		3209508						
ANR	3210570	Symbol	* h		3209508						
ANR	3210571	Symbol	area_length		3209508						
ANR	3210572	Symbol	font_file_path		3209508						
ANR	3210573	Symbol	h -> strokeWeight		3209508						
ANR	3210574	Symbol	* r		3209508						
ANR	3210575	Symbol	h -> spacing		3209508						
ANR	3210576	Function	prepare_typeface	1077:0:35377:35626							
ANR	3210577	FunctionDef	"prepare_typeface (fapi_ufst_server * r , ufst_common_font_data * d)"		3210576	0					
ANR	3210578	CompoundStatement		1079:0:35455:35626	3210576	0					
ANR	3210579	ExpressionStatement	r -> fc . format = d -> font_type	1080:4:35461:35488	3210576	0	True				
ANR	3210580	AssignmentExpression	r -> fc . format = d -> font_type		3210576	0		=			
ANR	3210581	MemberAccess	r -> fc . format		3210576	0					
ANR	3210582	PtrMemberAccess	r -> fc		3210576	0					
ANR	3210583	Identifier	r		3210576	0					
ANR	3210584	Identifier	fc		3210576	1					
ANR	3210585	Identifier	format		3210576	1					
ANR	3210586	PtrMemberAccess	d -> font_type		3210576	1					
ANR	3210587	Identifier	d		3210576	0					
ANR	3210588	Identifier	font_type		3210576	1					
ANR	3210589	ExpressionStatement	r -> fc . font_id = d -> font_id	1081:4:35494:35520	3210576	1	True				
ANR	3210590	AssignmentExpression	r -> fc . font_id = d -> font_id		3210576	0		=			
ANR	3210591	MemberAccess	r -> fc . font_id		3210576	0					
ANR	3210592	PtrMemberAccess	r -> fc		3210576	0					
ANR	3210593	Identifier	r		3210576	0					
ANR	3210594	Identifier	fc		3210576	1					
ANR	3210595	Identifier	font_id		3210576	1					
ANR	3210596	PtrMemberAccess	d -> font_id		3210576	1					
ANR	3210597	Identifier	d		3210576	0					
ANR	3210598	Identifier	font_id		3210576	1					
ANR	3210599	ExpressionStatement	r -> fc . font_hdr = ( UB8 * ) ( d + 1 )	1082:4:35526:35558	3210576	2	True				
ANR	3210600	AssignmentExpression	r -> fc . font_hdr = ( UB8 * ) ( d + 1 )		3210576	0		=			
ANR	3210601	MemberAccess	r -> fc . font_hdr		3210576	0					
ANR	3210602	PtrMemberAccess	r -> fc		3210576	0					
ANR	3210603	Identifier	r		3210576	0					
ANR	3210604	Identifier	fc		3210576	1					
ANR	3210605	Identifier	font_hdr		3210576	1					
ANR	3210606	CastExpression	( UB8 * ) ( d + 1 )		3210576	1					
ANR	3210607	CastTarget	UB8 *		3210576	0					
ANR	3210608	AdditiveExpression	d + 1		3210576	1		+			
ANR	3210609	Identifier	d		3210576	0					
ANR	3210610	PrimaryExpression	1		3210576	1					
ANR	3210611	IfStatement	if ( ! d -> is_disk_font )		3210576	3					
ANR	3210612	Condition	! d -> is_disk_font	1083:8:35568:35583	3210576	0	True				
ANR	3210613	UnaryOperationExpression	! d -> is_disk_font		3210576	0					
ANR	3210614	UnaryOperator	!		3210576	0					
ANR	3210615	PtrMemberAccess	d -> is_disk_font		3210576	1					
ANR	3210616	Identifier	d		3210576	0					
ANR	3210617	Identifier	is_disk_font		3210576	1					
ANR	3210618	ExpressionStatement	r -> fc . format |= FC_EXTERN_TYPE	1084:8:35594:35624	3210576	1	True				
ANR	3210619	AssignmentExpression	r -> fc . format |= FC_EXTERN_TYPE		3210576	0		|=			
ANR	3210620	MemberAccess	r -> fc . format		3210576	0					
ANR	3210621	PtrMemberAccess	r -> fc		3210576	0					
ANR	3210622	Identifier	r		3210576	0					
ANR	3210623	Identifier	fc		3210576	1					
ANR	3210624	Identifier	format		3210576	1					
ANR	3210625	Identifier	FC_EXTERN_TYPE		3210576	1					
ANR	3210626	ReturnType	static void		3210576	1					
ANR	3210627	Identifier	prepare_typeface		3210576	2					
ANR	3210628	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d"		3210576	3					
ANR	3210629	Parameter	fapi_ufst_server * r	1078:17:35406:35425	3210576	0	True				
ANR	3210630	ParameterType	fapi_ufst_server *		3210576	0					
ANR	3210631	Identifier	r		3210576	1					
ANR	3210632	Parameter	ufst_common_font_data * d	1078:39:35428:35452	3210576	1	True				
ANR	3210633	ParameterType	ufst_common_font_data *		3210576	0					
ANR	3210634	Identifier	d		3210576	1					
ANR	3210635	CFGEntryNode	ENTRY		3210576		True				
ANR	3210636	CFGExitNode	EXIT		3210576		True				
ANR	3210637	Symbol	d -> font_type		3210576						
ANR	3210638	Symbol	d -> is_disk_font		3210576						
ANR	3210639	Symbol	r		3210576						
ANR	3210640	Symbol	d		3210576						
ANR	3210641	Symbol	r -> fc		3210576						
ANR	3210642	Symbol	FC_EXTERN_TYPE		3210576						
ANR	3210643	Symbol	r -> fc . format		3210576						
ANR	3210644	Symbol	r -> fc . font_id		3210576						
ANR	3210645	Symbol	r -> fc . font_hdr		3210576						
ANR	3210646	Symbol	* r		3210576						
ANR	3210647	Symbol	* d		3210576						
ANR	3210648	Symbol	d -> font_id		3210576						
ANR	3210649	Function	gs_fapi_ufst_get_scaled_font_aux	1087:0:35629:41421							
ANR	3210650	FunctionDef	"gs_fapi_ufst_get_scaled_font_aux (gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc)"		3210649	0					
ANR	3210651	CompoundStatement		1091:0:35857:41421	3210649	0					
ANR	3210652	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1092:4:35863:35900	3210649	0	True				
ANR	3210653	IdentifierDecl	* r = If_to_I ( server )		3210649	0					
ANR	3210654	IdentifierDeclType	fapi_ufst_server *		3210649	0					
ANR	3210655	Identifier	r		3210649	1					
ANR	3210656	AssignmentExpression	* r = If_to_I ( server )		3210649	2		=			
ANR	3210657	Identifier	r		3210649	0					
ANR	3210658	CallExpression	If_to_I ( server )		3210649	1					
ANR	3210659	Callee	If_to_I		3210649	0					
ANR	3210660	Identifier	If_to_I		3210649	0					
ANR	3210661	ArgumentList	server		3210649	1					
ANR	3210662	Argument	server		3210649	0					
ANR	3210663	Identifier	server		3210649	0					
ANR	3210664	IdentifierDeclStatement	FONTCONTEXT * fc = & r -> fc ;	1093:4:35906:35930	3210649	1	True				
ANR	3210665	IdentifierDecl	* fc = & r -> fc		3210649	0					
ANR	3210666	IdentifierDeclType	FONTCONTEXT *		3210649	0					
ANR	3210667	Identifier	fc		3210649	1					
ANR	3210668	AssignmentExpression	* fc = & r -> fc		3210649	2		=			
ANR	3210669	Identifier	fc		3210649	0					
ANR	3210670	UnaryOperationExpression	& r -> fc		3210649	1					
ANR	3210671	UnaryOperator	&		3210649	0					
ANR	3210672	PtrMemberAccess	r -> fc		3210649	1					
ANR	3210673	Identifier	r		3210649	0					
ANR	3210674	Identifier	fc		3210649	1					
ANR	3210675	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1100:4:36201:36274	3210649	2	True				
ANR	3210676	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		3210649	0					
ANR	3210677	IdentifierDeclType	ufst_common_font_data *		3210649	0					
ANR	3210678	Identifier	d		3210649	1					
ANR	3210679	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		3210649	2		=			
ANR	3210680	Identifier	d		3210649	0					
ANR	3210681	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		3210649	1					
ANR	3210682	CastTarget	ufst_common_font_data *		3210649	0					
ANR	3210683	PtrMemberAccess	ff -> server_font_data		3210649	1					
ANR	3210684	Identifier	ff		3210649	0					
ANR	3210685	Identifier	server_font_data		3210649	1					
ANR	3210686	IdentifierDeclStatement	const double scale = F_ONE ;	1101:4:36280:36306	3210649	3	True				
ANR	3210687	IdentifierDecl	scale = F_ONE		3210649	0					
ANR	3210688	IdentifierDeclType	const double		3210649	0					
ANR	3210689	Identifier	scale		3210649	1					
ANR	3210690	AssignmentExpression	scale = F_ONE		3210649	2		=			
ANR	3210691	Identifier	F_ONE		3210649	0					
ANR	3210692	Identifier	F_ONE		3210649	1					
ANR	3210693	IdentifierDeclStatement	"double hx , hy ;"	1102:4:36312:36325	3210649	4	True				
ANR	3210694	IdentifierDecl	hx		3210649	0					
ANR	3210695	IdentifierDeclType	double		3210649	0					
ANR	3210696	Identifier	hx		3210649	1					
ANR	3210697	IdentifierDecl	hy		3210649	1					
ANR	3210698	IdentifierDeclType	double		3210649	0					
ANR	3210699	Identifier	hy		3210649	1					
ANR	3210700	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1103:4:36331:36355	3210649	5	True				
ANR	3210701	IdentifierDecl	code = 0		3210649	0					
ANR	3210702	IdentifierDeclType	gs_fapi_retcode		3210649	0					
ANR	3210703	Identifier	code		3210649	1					
ANR	3210704	AssignmentExpression	code = 0		3210649	2		=			
ANR	3210705	Identifier	code		3210649	0					
ANR	3210706	PrimaryExpression	0		3210649	1					
ANR	3210707	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	1104:4:36361:36400	3210649	6	True				
ANR	3210708	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		3210649	0					
ANR	3210709	IdentifierDeclType	bool		3210649	0					
ANR	3210710	Identifier	use_XL_format		3210649	1					
ANR	3210711	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		3210649	2		=			
ANR	3210712	Identifier	use_XL_format		3210649	0					
ANR	3210713	PtrMemberAccess	ff -> is_mtx_skipped		3210649	1					
ANR	3210714	Identifier	ff		3210649	0					
ANR	3210715	Identifier	is_mtx_skipped		3210649	1					
ANR	3210716	IdentifierDeclStatement	int world_scale = 0 ;	1105:4:36406:36425	3210649	7	True				
ANR	3210717	IdentifierDecl	world_scale = 0		3210649	0					
ANR	3210718	IdentifierDeclType	int		3210649	0					
ANR	3210719	Identifier	world_scale		3210649	1					
ANR	3210720	AssignmentExpression	world_scale = 0		3210649	2		=			
ANR	3210721	Identifier	world_scale		3210649	0					
ANR	3210722	PrimaryExpression	0		3210649	1					
ANR	3210723	IdentifierDeclStatement	FONT_METRICS fm ;	1106:4:36431:36446	3210649	8	True				
ANR	3210724	IdentifierDecl	fm		3210649	0					
ANR	3210725	IdentifierDeclType	FONT_METRICS		3210649	0					
ANR	3210726	Identifier	fm		3210649	1					
ANR	3210727	ExpressionStatement	FSA_FROM_SERVER	1108:4:36453:36468	3210649	9	True				
ANR	3210728	Identifier	FSA_FROM_SERVER		3210649	0					
ANR	3210729	IfStatement	if ( ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete ) )		3210649	10					
ANR	3210730	Condition	ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )	1110:8:36479:36611	3210649	0	True				
ANR	3210731	AndExpression	ff -> is_cid && ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		3210649	0		&&			
ANR	3210732	PtrMemberAccess	ff -> is_cid		3210649	0					
ANR	3210733	Identifier	ff		3210649	0					
ANR	3210734	Identifier	is_cid		3210649	1					
ANR	3210735	AndExpression	ff -> is_type1 && ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		3210649	1		&&			
ANR	3210736	PtrMemberAccess	ff -> is_type1		3210649	0					
ANR	3210737	Identifier	ff		3210649	0					
ANR	3210738	Identifier	is_type1		3210649	1					
ANR	3210739	AndExpression	ff -> font_file_path == NULL && ( dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete )		3210649	1		&&			
ANR	3210740	EqualityExpression	ff -> font_file_path == NULL		3210649	0		==			
ANR	3210741	PtrMemberAccess	ff -> font_file_path		3210649	0					
ANR	3210742	Identifier	ff		3210649	0					
ANR	3210743	Identifier	font_file_path		3210649	1					
ANR	3210744	Identifier	NULL		3210649	1					
ANR	3210745	OrExpression	dc == gs_fapi_toplevel_begin || dc == gs_fapi_toplevel_complete		3210649	1		||			
ANR	3210746	EqualityExpression	dc == gs_fapi_toplevel_begin		3210649	0		==			
ANR	3210747	Identifier	dc		3210649	0					
ANR	3210748	Identifier	gs_fapi_toplevel_begin		3210649	1					
ANR	3210749	EqualityExpression	dc == gs_fapi_toplevel_complete		3210649	1		==			
ANR	3210750	Identifier	dc		3210649	0					
ANR	3210751	Identifier	gs_fapi_toplevel_complete		3210649	1					
ANR	3210752	CompoundStatement		21:75:756:756	3210649	1					
ANR	3210753	ReturnStatement	return 0 ;	1116:8:36821:36829	3210649	0	True				
ANR	3210754	PrimaryExpression	0		3210649	0					
ANR	3210755	ExpressionStatement	ff -> need_decrypt = 1	1119:4:36842:36862	3210649	11	True				
ANR	3210756	AssignmentExpression	ff -> need_decrypt = 1		3210649	0		=			
ANR	3210757	PtrMemberAccess	ff -> need_decrypt		3210649	0					
ANR	3210758	Identifier	ff		3210649	0					
ANR	3210759	Identifier	need_decrypt		3210649	1					
ANR	3210760	PrimaryExpression	1		3210649	1					
ANR	3210761	IfStatement	if ( d == 0 )		3210649	12					
ANR	3210762	Condition	d == 0	1120:8:36872:36877	3210649	0	True				
ANR	3210763	EqualityExpression	d == 0		3210649	0		==			
ANR	3210764	Identifier	d		3210649	0					
ANR	3210765	PrimaryExpression	0		3210649	1					
ANR	3210766	CompoundStatement		30:16:1022:1022	3210649	1					
ANR	3210767	IfStatement	"if ( ( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0 )"		3210649	0					
ANR	3210768	Condition	"( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0"	1121:12:36894:36957	3210649	0	True				
ANR	3210769	EqualityExpression	"( code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d ) ) != 0"		3210649	0		!=			
ANR	3210770	AssignmentExpression	"code = ufst_make_font_data ( r , ff -> font_file_path , ff , & d )"		3210649	0		=			
ANR	3210771	Identifier	code		3210649	0					
ANR	3210772	CallExpression	"ufst_make_font_data ( r , ff -> font_file_path , ff , & d )"		3210649	1					
ANR	3210773	Callee	ufst_make_font_data		3210649	0					
ANR	3210774	Identifier	ufst_make_font_data		3210649	0					
ANR	3210775	ArgumentList	r		3210649	1					
ANR	3210776	Argument	r		3210649	0					
ANR	3210777	Identifier	r		3210649	0					
ANR	3210778	Argument	ff -> font_file_path		3210649	1					
ANR	3210779	PtrMemberAccess	ff -> font_file_path		3210649	0					
ANR	3210780	Identifier	ff		3210649	0					
ANR	3210781	Identifier	font_file_path		3210649	1					
ANR	3210782	Argument	ff		3210649	2					
ANR	3210783	Identifier	ff		3210649	0					
ANR	3210784	Argument	& d		3210649	3					
ANR	3210785	UnaryOperationExpression	& d		3210649	0					
ANR	3210786	UnaryOperator	&		3210649	0					
ANR	3210787	Identifier	d		3210649	1					
ANR	3210788	PrimaryExpression	0		3210649	1					
ANR	3210789	ReturnStatement	return code ;	1122:12:36972:36983	3210649	1	True				
ANR	3210790	Identifier	code		3210649	0					
ANR	3210791	ExpressionStatement	ff -> server_font_data = d	1123:8:36993:37017	3210649	1	True				
ANR	3210792	AssignmentExpression	ff -> server_font_data = d		3210649	0		=			
ANR	3210793	PtrMemberAccess	ff -> server_font_data		3210649	0					
ANR	3210794	Identifier	ff		3210649	0					
ANR	3210795	Identifier	server_font_data		3210649	1					
ANR	3210796	Identifier	d		3210649	1					
ANR	3210797	ExpressionStatement	"prepare_typeface ( r , d )"	1124:8:37027:37049	3210649	2	True				
ANR	3210798	CallExpression	"prepare_typeface ( r , d )"		3210649	0					
ANR	3210799	Callee	prepare_typeface		3210649	0					
ANR	3210800	Identifier	prepare_typeface		3210649	0					
ANR	3210801	ArgumentList	r		3210649	1					
ANR	3210802	Argument	r		3210649	0					
ANR	3210803	Identifier	r		3210649	0					
ANR	3210804	Argument	d		3210649	1					
ANR	3210805	Identifier	d		3210649	0					
ANR	3210806	IfStatement	if ( ff -> font_file_path != NULL || ff -> is_type1 )		3210649	3					
ANR	3210807	Condition	ff -> font_file_path != NULL || ff -> is_type1	1125:12:37063:37104	3210649	0	True				
ANR	3210808	OrExpression	ff -> font_file_path != NULL || ff -> is_type1		3210649	0		||			
ANR	3210809	EqualityExpression	ff -> font_file_path != NULL		3210649	0		!=			
ANR	3210810	PtrMemberAccess	ff -> font_file_path		3210649	0					
ANR	3210811	Identifier	ff		3210649	0					
ANR	3210812	Identifier	font_file_path		3210649	1					
ANR	3210813	Identifier	NULL		3210649	1					
ANR	3210814	PtrMemberAccess	ff -> is_type1		3210649	1					
ANR	3210815	Identifier	ff		3210649	0					
ANR	3210816	Identifier	is_type1		3210649	1					
ANR	3210817	ExpressionStatement	"choose_decoding ( r , d , xlatmap )"	1126:12:37156:37186	3210649	1	True				
ANR	3210818	CallExpression	"choose_decoding ( r , d , xlatmap )"		3210649	0					
ANR	3210819	Callee	choose_decoding		3210649	0					
ANR	3210820	Identifier	choose_decoding		3210649	0					
ANR	3210821	ArgumentList	r		3210649	1					
ANR	3210822	Argument	r		3210649	0					
ANR	3210823	Identifier	r		3210649	0					
ANR	3210824	Argument	d		3210649	1					
ANR	3210825	Identifier	d		3210649	0					
ANR	3210826	Argument	xlatmap		3210649	2					
ANR	3210827	Identifier	xlatmap		3210649	0					
ANR	3210828	ElseStatement	else		3210649	0					
ANR	3210829	CompoundStatement		38:9:1345:1345	3210649	0					
ANR	3210830	ExpressionStatement	"prepare_typeface ( r , d )"	1129:8:37213:37235	3210649	0	True				
ANR	3210831	CallExpression	"prepare_typeface ( r , d )"		3210649	0					
ANR	3210832	Callee	prepare_typeface		3210649	0					
ANR	3210833	Identifier	prepare_typeface		3210649	0					
ANR	3210834	ArgumentList	r		3210649	1					
ANR	3210835	Argument	r		3210649	0					
ANR	3210836	Identifier	r		3210649	0					
ANR	3210837	Argument	d		3210649	1					
ANR	3210838	Identifier	d		3210649	0					
ANR	3210839	IfStatement	if ( ff -> font_file_path != NULL || ff -> is_type1 )		3210649	1					
ANR	3210840	Condition	ff -> font_file_path != NULL || ff -> is_type1	1130:12:37249:37290	3210649	0	True				
ANR	3210841	OrExpression	ff -> font_file_path != NULL || ff -> is_type1		3210649	0		||			
ANR	3210842	EqualityExpression	ff -> font_file_path != NULL		3210649	0		!=			
ANR	3210843	PtrMemberAccess	ff -> font_file_path		3210649	0					
ANR	3210844	Identifier	ff		3210649	0					
ANR	3210845	Identifier	font_file_path		3210649	1					
ANR	3210846	Identifier	NULL		3210649	1					
ANR	3210847	PtrMemberAccess	ff -> is_type1		3210649	1					
ANR	3210848	Identifier	ff		3210649	0					
ANR	3210849	Identifier	is_type1		3210649	1					
ANR	3210850	ExpressionStatement	"choose_decoding ( r , d , xlatmap )"	1131:12:37342:37372	3210649	1	True				
ANR	3210851	CallExpression	"choose_decoding ( r , d , xlatmap )"		3210649	0					
ANR	3210852	Callee	choose_decoding		3210649	0					
ANR	3210853	Identifier	choose_decoding		3210649	0					
ANR	3210854	ArgumentList	r		3210649	1					
ANR	3210855	Argument	r		3210649	0					
ANR	3210856	Identifier	r		3210649	0					
ANR	3210857	Argument	d		3210649	1					
ANR	3210858	Identifier	d		3210649	0					
ANR	3210859	Argument	xlatmap		3210649	2					
ANR	3210860	Identifier	xlatmap		3210649	0					
ANR	3210861	ExpressionStatement	"r -> tran_xx = font_scale -> matrix [ 0 ] / scale , r -> tran_xy = font_scale -> matrix [ 1 ] / scale"	1134:4:37385:37479	3210649	13	True				
ANR	3210862	Expression	"r -> tran_xx = font_scale -> matrix [ 0 ] / scale , r -> tran_xy = font_scale -> matrix [ 1 ] / scale"		3210649	0					
ANR	3210863	AssignmentExpression	r -> tran_xx = font_scale -> matrix [ 0 ] / scale		3210649	0		=			
ANR	3210864	PtrMemberAccess	r -> tran_xx		3210649	0					
ANR	3210865	Identifier	r		3210649	0					
ANR	3210866	Identifier	tran_xx		3210649	1					
ANR	3210867	MultiplicativeExpression	font_scale -> matrix [ 0 ] / scale		3210649	1		/			
ANR	3210868	ArrayIndexing	font_scale -> matrix [ 0 ]		3210649	0					
ANR	3210869	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3210870	Identifier	font_scale		3210649	0					
ANR	3210871	Identifier	matrix		3210649	1					
ANR	3210872	PrimaryExpression	0		3210649	1					
ANR	3210873	Identifier	scale		3210649	1					
ANR	3210874	AssignmentExpression	r -> tran_xy = font_scale -> matrix [ 1 ] / scale		3210649	1		=			
ANR	3210875	PtrMemberAccess	r -> tran_xy		3210649	0					
ANR	3210876	Identifier	r		3210649	0					
ANR	3210877	Identifier	tran_xy		3210649	1					
ANR	3210878	MultiplicativeExpression	font_scale -> matrix [ 1 ] / scale		3210649	1		/			
ANR	3210879	ArrayIndexing	font_scale -> matrix [ 1 ]		3210649	0					
ANR	3210880	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3210881	Identifier	font_scale		3210649	0					
ANR	3210882	Identifier	matrix		3210649	1					
ANR	3210883	PrimaryExpression	1		3210649	1					
ANR	3210884	Identifier	scale		3210649	1					
ANR	3210885	ExpressionStatement	"r -> tran_yx = font_scale -> matrix [ 2 ] / scale , r -> tran_yy = font_scale -> matrix [ 3 ] / scale"	1136:4:37485:37579	3210649	14	True				
ANR	3210886	Expression	"r -> tran_yx = font_scale -> matrix [ 2 ] / scale , r -> tran_yy = font_scale -> matrix [ 3 ] / scale"		3210649	0					
ANR	3210887	AssignmentExpression	r -> tran_yx = font_scale -> matrix [ 2 ] / scale		3210649	0		=			
ANR	3210888	PtrMemberAccess	r -> tran_yx		3210649	0					
ANR	3210889	Identifier	r		3210649	0					
ANR	3210890	Identifier	tran_yx		3210649	1					
ANR	3210891	MultiplicativeExpression	font_scale -> matrix [ 2 ] / scale		3210649	1		/			
ANR	3210892	ArrayIndexing	font_scale -> matrix [ 2 ]		3210649	0					
ANR	3210893	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3210894	Identifier	font_scale		3210649	0					
ANR	3210895	Identifier	matrix		3210649	1					
ANR	3210896	PrimaryExpression	2		3210649	1					
ANR	3210897	Identifier	scale		3210649	1					
ANR	3210898	AssignmentExpression	r -> tran_yy = font_scale -> matrix [ 3 ] / scale		3210649	1		=			
ANR	3210899	PtrMemberAccess	r -> tran_yy		3210649	0					
ANR	3210900	Identifier	r		3210649	0					
ANR	3210901	Identifier	tran_yy		3210649	1					
ANR	3210902	MultiplicativeExpression	font_scale -> matrix [ 3 ] / scale		3210649	1		/			
ANR	3210903	ArrayIndexing	font_scale -> matrix [ 3 ]		3210649	0					
ANR	3210904	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3210905	Identifier	font_scale		3210649	0					
ANR	3210906	Identifier	matrix		3210649	1					
ANR	3210907	PrimaryExpression	3		3210649	1					
ANR	3210908	Identifier	scale		3210649	1					
ANR	3210909	ExpressionStatement	"hx = hypot ( r -> tran_xx , r -> tran_xy ) , hy = hypot ( r -> tran_yx , r -> tran_yy )"	1138:4:37585:37655	3210649	15	True				
ANR	3210910	Expression	"hx = hypot ( r -> tran_xx , r -> tran_xy ) , hy = hypot ( r -> tran_yx , r -> tran_yy )"		3210649	0					
ANR	3210911	AssignmentExpression	"hx = hypot ( r -> tran_xx , r -> tran_xy )"		3210649	0		=			
ANR	3210912	Identifier	hx		3210649	0					
ANR	3210913	CallExpression	"hypot ( r -> tran_xx , r -> tran_xy )"		3210649	1					
ANR	3210914	Callee	hypot		3210649	0					
ANR	3210915	Identifier	hypot		3210649	0					
ANR	3210916	ArgumentList	r -> tran_xx		3210649	1					
ANR	3210917	Argument	r -> tran_xx		3210649	0					
ANR	3210918	PtrMemberAccess	r -> tran_xx		3210649	0					
ANR	3210919	Identifier	r		3210649	0					
ANR	3210920	Identifier	tran_xx		3210649	1					
ANR	3210921	Argument	r -> tran_xy		3210649	1					
ANR	3210922	PtrMemberAccess	r -> tran_xy		3210649	0					
ANR	3210923	Identifier	r		3210649	0					
ANR	3210924	Identifier	tran_xy		3210649	1					
ANR	3210925	AssignmentExpression	"hy = hypot ( r -> tran_yx , r -> tran_yy )"		3210649	1		=			
ANR	3210926	Identifier	hy		3210649	0					
ANR	3210927	CallExpression	"hypot ( r -> tran_yx , r -> tran_yy )"		3210649	1					
ANR	3210928	Callee	hypot		3210649	0					
ANR	3210929	Identifier	hypot		3210649	0					
ANR	3210930	ArgumentList	r -> tran_yx		3210649	1					
ANR	3210931	Argument	r -> tran_yx		3210649	0					
ANR	3210932	PtrMemberAccess	r -> tran_yx		3210649	0					
ANR	3210933	Identifier	r		3210649	0					
ANR	3210934	Identifier	tran_yx		3210649	1					
ANR	3210935	Argument	r -> tran_yy		3210649	1					
ANR	3210936	PtrMemberAccess	r -> tran_yy		3210649	0					
ANR	3210937	Identifier	r		3210649	0					
ANR	3210938	Identifier	tran_yy		3210649	1					
ANR	3210939	ExpressionStatement	fc -> xspot = F_ONE	1139:4:37661:37678	3210649	16	True				
ANR	3210940	AssignmentExpression	fc -> xspot = F_ONE		3210649	0		=			
ANR	3210941	PtrMemberAccess	fc -> xspot		3210649	0					
ANR	3210942	Identifier	fc		3210649	0					
ANR	3210943	Identifier	xspot		3210649	1					
ANR	3210944	Identifier	F_ONE		3210649	1					
ANR	3210945	ExpressionStatement	fc -> yspot = F_ONE	1140:4:37684:37701	3210649	17	True				
ANR	3210946	AssignmentExpression	fc -> yspot = F_ONE		3210649	0		=			
ANR	3210947	PtrMemberAccess	fc -> yspot		3210649	0					
ANR	3210948	Identifier	fc		3210649	0					
ANR	3210949	Identifier	yspot		3210649	1					
ANR	3210950	Identifier	F_ONE		3210649	1					
ANR	3210951	ExpressionStatement	fc -> fc_type = FC_MAT2_TYPE	1141:4:37707:37733	3210649	18	True				
ANR	3210952	AssignmentExpression	fc -> fc_type = FC_MAT2_TYPE		3210649	0		=			
ANR	3210953	PtrMemberAccess	fc -> fc_type		3210649	0					
ANR	3210954	Identifier	fc		3210649	0					
ANR	3210955	Identifier	fc_type		3210649	1					
ANR	3210956	Identifier	FC_MAT2_TYPE		3210649	1					
ANR	3210957	ExpressionStatement	fc -> s . m2 . m [ 0 ] = ( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )	1143:4:37740:37803	3210649	19	True				
ANR	3210958	AssignmentExpression	fc -> s . m2 . m [ 0 ] = ( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )		3210649	0		=			
ANR	3210959	ArrayIndexing	fc -> s . m2 . m [ 0 ]		3210649	0					
ANR	3210960	MemberAccess	fc -> s . m2 . m		3210649	0					
ANR	3210961	MemberAccess	fc -> s . m2		3210649	0					
ANR	3210962	PtrMemberAccess	fc -> s		3210649	0					
ANR	3210963	Identifier	fc		3210649	0					
ANR	3210964	Identifier	s		3210649	1					
ANR	3210965	Identifier	m2		3210649	1					
ANR	3210966	Identifier	m		3210649	1					
ANR	3210967	PrimaryExpression	0		3210649	1					
ANR	3210968	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 0 ] / hx + 0.5 )		3210649	1					
ANR	3210969	CastTarget	int		3210649	0					
ANR	3210970	AdditiveExpression	( double ) font_scale -> matrix [ 0 ] / hx + 0.5		3210649	1		+			
ANR	3210971	MultiplicativeExpression	( double ) font_scale -> matrix [ 0 ] / hx		3210649	0		/			
ANR	3210972	CastExpression	( double ) font_scale -> matrix [ 0 ]		3210649	0					
ANR	3210973	CastTarget	double		3210649	0					
ANR	3210974	ArrayIndexing	font_scale -> matrix [ 0 ]		3210649	1					
ANR	3210975	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3210976	Identifier	font_scale		3210649	0					
ANR	3210977	Identifier	matrix		3210649	1					
ANR	3210978	PrimaryExpression	0		3210649	1					
ANR	3210979	Identifier	hx		3210649	1					
ANR	3210980	PrimaryExpression	0.5		3210649	1					
ANR	3210981	ExpressionStatement	fc -> s . m2 . m [ 1 ] = ( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )	1144:4:37809:37872	3210649	20	True				
ANR	3210982	AssignmentExpression	fc -> s . m2 . m [ 1 ] = ( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )		3210649	0		=			
ANR	3210983	ArrayIndexing	fc -> s . m2 . m [ 1 ]		3210649	0					
ANR	3210984	MemberAccess	fc -> s . m2 . m		3210649	0					
ANR	3210985	MemberAccess	fc -> s . m2		3210649	0					
ANR	3210986	PtrMemberAccess	fc -> s		3210649	0					
ANR	3210987	Identifier	fc		3210649	0					
ANR	3210988	Identifier	s		3210649	1					
ANR	3210989	Identifier	m2		3210649	1					
ANR	3210990	Identifier	m		3210649	1					
ANR	3210991	PrimaryExpression	1		3210649	1					
ANR	3210992	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 1 ] / hx + 0.5 )		3210649	1					
ANR	3210993	CastTarget	int		3210649	0					
ANR	3210994	AdditiveExpression	( double ) font_scale -> matrix [ 1 ] / hx + 0.5		3210649	1		+			
ANR	3210995	MultiplicativeExpression	( double ) font_scale -> matrix [ 1 ] / hx		3210649	0		/			
ANR	3210996	CastExpression	( double ) font_scale -> matrix [ 1 ]		3210649	0					
ANR	3210997	CastTarget	double		3210649	0					
ANR	3210998	ArrayIndexing	font_scale -> matrix [ 1 ]		3210649	1					
ANR	3210999	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3211000	Identifier	font_scale		3210649	0					
ANR	3211001	Identifier	matrix		3210649	1					
ANR	3211002	PrimaryExpression	1		3210649	1					
ANR	3211003	Identifier	hx		3210649	1					
ANR	3211004	PrimaryExpression	0.5		3210649	1					
ANR	3211005	ExpressionStatement	fc -> s . m2 . m [ 2 ] = ( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )	1145:4:37878:37941	3210649	21	True				
ANR	3211006	AssignmentExpression	fc -> s . m2 . m [ 2 ] = ( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )		3210649	0		=			
ANR	3211007	ArrayIndexing	fc -> s . m2 . m [ 2 ]		3210649	0					
ANR	3211008	MemberAccess	fc -> s . m2 . m		3210649	0					
ANR	3211009	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211010	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211011	Identifier	fc		3210649	0					
ANR	3211012	Identifier	s		3210649	1					
ANR	3211013	Identifier	m2		3210649	1					
ANR	3211014	Identifier	m		3210649	1					
ANR	3211015	PrimaryExpression	2		3210649	1					
ANR	3211016	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 2 ] / hy + 0.5 )		3210649	1					
ANR	3211017	CastTarget	int		3210649	0					
ANR	3211018	AdditiveExpression	( double ) font_scale -> matrix [ 2 ] / hy + 0.5		3210649	1		+			
ANR	3211019	MultiplicativeExpression	( double ) font_scale -> matrix [ 2 ] / hy		3210649	0		/			
ANR	3211020	CastExpression	( double ) font_scale -> matrix [ 2 ]		3210649	0					
ANR	3211021	CastTarget	double		3210649	0					
ANR	3211022	ArrayIndexing	font_scale -> matrix [ 2 ]		3210649	1					
ANR	3211023	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3211024	Identifier	font_scale		3210649	0					
ANR	3211025	Identifier	matrix		3210649	1					
ANR	3211026	PrimaryExpression	2		3210649	1					
ANR	3211027	Identifier	hy		3210649	1					
ANR	3211028	PrimaryExpression	0.5		3210649	1					
ANR	3211029	ExpressionStatement	fc -> s . m2 . m [ 3 ] = ( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )	1146:4:37947:38010	3210649	22	True				
ANR	3211030	AssignmentExpression	fc -> s . m2 . m [ 3 ] = ( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )		3210649	0		=			
ANR	3211031	ArrayIndexing	fc -> s . m2 . m [ 3 ]		3210649	0					
ANR	3211032	MemberAccess	fc -> s . m2 . m		3210649	0					
ANR	3211033	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211034	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211035	Identifier	fc		3210649	0					
ANR	3211036	Identifier	s		3210649	1					
ANR	3211037	Identifier	m2		3210649	1					
ANR	3211038	Identifier	m		3210649	1					
ANR	3211039	PrimaryExpression	3		3210649	1					
ANR	3211040	CastExpression	( int ) ( ( double ) font_scale -> matrix [ 3 ] / hy + 0.5 )		3210649	1					
ANR	3211041	CastTarget	int		3210649	0					
ANR	3211042	AdditiveExpression	( double ) font_scale -> matrix [ 3 ] / hy + 0.5		3210649	1		+			
ANR	3211043	MultiplicativeExpression	( double ) font_scale -> matrix [ 3 ] / hy		3210649	0		/			
ANR	3211044	CastExpression	( double ) font_scale -> matrix [ 3 ]		3210649	0					
ANR	3211045	CastTarget	double		3210649	0					
ANR	3211046	ArrayIndexing	font_scale -> matrix [ 3 ]		3210649	1					
ANR	3211047	PtrMemberAccess	font_scale -> matrix		3210649	0					
ANR	3211048	Identifier	font_scale		3210649	0					
ANR	3211049	Identifier	matrix		3210649	1					
ANR	3211050	PrimaryExpression	3		3210649	1					
ANR	3211051	Identifier	hy		3210649	1					
ANR	3211052	PrimaryExpression	0.5		3210649	1					
ANR	3211053	ExpressionStatement	fc -> s . m2 . matrix_scale = 16	1147:4:38016:38042	3210649	23	True				
ANR	3211054	AssignmentExpression	fc -> s . m2 . matrix_scale = 16		3210649	0		=			
ANR	3211055	MemberAccess	fc -> s . m2 . matrix_scale		3210649	0					
ANR	3211056	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211057	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211058	Identifier	fc		3210649	0					
ANR	3211059	Identifier	s		3210649	1					
ANR	3211060	Identifier	m2		3210649	1					
ANR	3211061	Identifier	matrix_scale		3210649	1					
ANR	3211062	PrimaryExpression	16		3210649	1					
ANR	3211063	ExpressionStatement	fc -> s . m2 . xworld_res = font_scale -> HWResolution [ 0 ] >> 16	1148:4:38048:38103	3210649	24	True				
ANR	3211064	AssignmentExpression	fc -> s . m2 . xworld_res = font_scale -> HWResolution [ 0 ] >> 16		3210649	0		=			
ANR	3211065	MemberAccess	fc -> s . m2 . xworld_res		3210649	0					
ANR	3211066	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211067	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211068	Identifier	fc		3210649	0					
ANR	3211069	Identifier	s		3210649	1					
ANR	3211070	Identifier	m2		3210649	1					
ANR	3211071	Identifier	xworld_res		3210649	1					
ANR	3211072	ShiftExpression	font_scale -> HWResolution [ 0 ] >> 16		3210649	1		>>			
ANR	3211073	ArrayIndexing	font_scale -> HWResolution [ 0 ]		3210649	0					
ANR	3211074	PtrMemberAccess	font_scale -> HWResolution		3210649	0					
ANR	3211075	Identifier	font_scale		3210649	0					
ANR	3211076	Identifier	HWResolution		3210649	1					
ANR	3211077	PrimaryExpression	0		3210649	1					
ANR	3211078	PrimaryExpression	16		3210649	1					
ANR	3211079	ExpressionStatement	fc -> s . m2 . yworld_res = font_scale -> HWResolution [ 1 ] >> 16	1149:4:38109:38164	3210649	25	True				
ANR	3211080	AssignmentExpression	fc -> s . m2 . yworld_res = font_scale -> HWResolution [ 1 ] >> 16		3210649	0		=			
ANR	3211081	MemberAccess	fc -> s . m2 . yworld_res		3210649	0					
ANR	3211082	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211083	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211084	Identifier	fc		3210649	0					
ANR	3211085	Identifier	s		3210649	1					
ANR	3211086	Identifier	m2		3210649	1					
ANR	3211087	Identifier	yworld_res		3210649	1					
ANR	3211088	ShiftExpression	font_scale -> HWResolution [ 1 ] >> 16		3210649	1		>>			
ANR	3211089	ArrayIndexing	font_scale -> HWResolution [ 1 ]		3210649	0					
ANR	3211090	PtrMemberAccess	font_scale -> HWResolution		3210649	0					
ANR	3211091	Identifier	font_scale		3210649	0					
ANR	3211092	Identifier	HWResolution		3210649	1					
ANR	3211093	PrimaryExpression	1		3210649	1					
ANR	3211094	PrimaryExpression	16		3210649	1					
ANR	3211095	IfStatement	if ( ( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 ) )		3210649	26					
ANR	3211096	Condition	( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 )	1151:8:38175:38218	3210649	0	True				
ANR	3211097	AndExpression	( hx > 0 && hy > 0 ) && ( hx < 1.5 || hy < 1.5 )		3210649	0		&&			
ANR	3211098	AndExpression	hx > 0 && hy > 0		3210649	0		&&			
ANR	3211099	RelationalExpression	hx > 0		3210649	0		>			
ANR	3211100	Identifier	hx		3210649	0					
ANR	3211101	PrimaryExpression	0		3210649	1					
ANR	3211102	RelationalExpression	hy > 0		3210649	1		>			
ANR	3211103	Identifier	hy		3210649	0					
ANR	3211104	PrimaryExpression	0		3210649	1					
ANR	3211105	OrExpression	hx < 1.5 || hy < 1.5		3210649	1		||			
ANR	3211106	RelationalExpression	hx < 1.5		3210649	0		<			
ANR	3211107	Identifier	hx		3210649	0					
ANR	3211108	PrimaryExpression	1.5		3210649	1					
ANR	3211109	RelationalExpression	hy < 1.5		3210649	1		<			
ANR	3211110	Identifier	hy		3210649	0					
ANR	3211111	PrimaryExpression	1.5		3210649	1					
ANR	3211112	CompoundStatement		61:54:2363:2363	3210649	1					
ANR	3211113	ExpressionStatement	world_scale = 8	1152:8:38231:38246	3210649	0	True				
ANR	3211114	AssignmentExpression	world_scale = 8		3210649	0		=			
ANR	3211115	Identifier	world_scale		3210649	0					
ANR	3211116	PrimaryExpression	8		3210649	1					
ANR	3211117	ExpressionStatement	hx *= 256	1153:8:38256:38265	3210649	1	True				
ANR	3211118	AssignmentExpression	hx *= 256		3210649	0		*=			
ANR	3211119	Identifier	hx		3210649	0					
ANR	3211120	PrimaryExpression	256		3210649	1					
ANR	3211121	ExpressionStatement	hy *= 256	1154:8:38275:38284	3210649	2	True				
ANR	3211122	AssignmentExpression	hy *= 256		3210649	0		*=			
ANR	3211123	Identifier	hy		3210649	0					
ANR	3211124	PrimaryExpression	256		3210649	1					
ANR	3211125	WhileStatement	while ( hx < 1.5 || hy < 1.5 )		3210649	3					
ANR	3211126	Condition	hx < 1.5 || hy < 1.5	1156:15:38302:38321	3210649	0	True				
ANR	3211127	OrExpression	hx < 1.5 || hy < 1.5		3210649	0		||			
ANR	3211128	RelationalExpression	hx < 1.5		3210649	0		<			
ANR	3211129	Identifier	hx		3210649	0					
ANR	3211130	PrimaryExpression	1.5		3210649	1					
ANR	3211131	RelationalExpression	hy < 1.5		3210649	1		<			
ANR	3211132	Identifier	hy		3210649	0					
ANR	3211133	PrimaryExpression	1.5		3210649	1					
ANR	3211134	CompoundStatement		66:37:2466:2466	3210649	1					
ANR	3211135	ExpressionStatement	world_scale += 1	1157:12:38338:38354	3210649	0	True				
ANR	3211136	AssignmentExpression	world_scale += 1		3210649	0		+=			
ANR	3211137	Identifier	world_scale		3210649	0					
ANR	3211138	PrimaryExpression	1		3210649	1					
ANR	3211139	ExpressionStatement	hx *= 10	1158:12:38368:38376	3210649	1	True				
ANR	3211140	AssignmentExpression	hx *= 10		3210649	0		*=			
ANR	3211141	Identifier	hx		3210649	0					
ANR	3211142	PrimaryExpression	10		3210649	1					
ANR	3211143	ExpressionStatement	hy *= 10	1159:12:38390:38398	3210649	2	True				
ANR	3211144	AssignmentExpression	hy *= 10		3210649	0		*=			
ANR	3211145	Identifier	hy		3210649	0					
ANR	3211146	PrimaryExpression	10		3210649	1					
ANR	3211147	ExpressionStatement	fc -> s . m2 . world_scale = world_scale	1162:4:38420:38454	3210649	27	True				
ANR	3211148	AssignmentExpression	fc -> s . m2 . world_scale = world_scale		3210649	0		=			
ANR	3211149	MemberAccess	fc -> s . m2 . world_scale		3210649	0					
ANR	3211150	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211151	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211152	Identifier	fc		3210649	0					
ANR	3211153	Identifier	s		3210649	1					
ANR	3211154	Identifier	m2		3210649	1					
ANR	3211155	Identifier	world_scale		3210649	1					
ANR	3211156	Identifier	world_scale		3210649	1					
ANR	3211157	ExpressionStatement	fc -> s . m2 . point_size = ( int ) ( hy * 8 + 0.5 )	1163:4:38460:38501	3210649	28	True				
ANR	3211158	AssignmentExpression	fc -> s . m2 . point_size = ( int ) ( hy * 8 + 0.5 )		3210649	0		=			
ANR	3211159	MemberAccess	fc -> s . m2 . point_size		3210649	0					
ANR	3211160	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211161	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211162	Identifier	fc		3210649	0					
ANR	3211163	Identifier	s		3210649	1					
ANR	3211164	Identifier	m2		3210649	1					
ANR	3211165	Identifier	point_size		3210649	1					
ANR	3211166	CastExpression	( int ) ( hy * 8 + 0.5 )		3210649	1					
ANR	3211167	CastTarget	int		3210649	0					
ANR	3211168	AdditiveExpression	hy * 8 + 0.5		3210649	1		+			
ANR	3211169	MultiplicativeExpression	hy * 8		3210649	0		*			
ANR	3211170	Identifier	hy		3210649	0					
ANR	3211171	PrimaryExpression	8		3210649	1					
ANR	3211172	PrimaryExpression	0.5		3210649	1					
ANR	3211173	ExpressionStatement	fc -> s . m2 . set_size = ( int ) ( hx * 8 + 0.5 )	1164:4:38531:38570	3210649	29	True				
ANR	3211174	AssignmentExpression	fc -> s . m2 . set_size = ( int ) ( hx * 8 + 0.5 )		3210649	0		=			
ANR	3211175	MemberAccess	fc -> s . m2 . set_size		3210649	0					
ANR	3211176	MemberAccess	fc -> s . m2		3210649	0					
ANR	3211177	PtrMemberAccess	fc -> s		3210649	0					
ANR	3211178	Identifier	fc		3210649	0					
ANR	3211179	Identifier	s		3210649	1					
ANR	3211180	Identifier	m2		3210649	1					
ANR	3211181	Identifier	set_size		3210649	1					
ANR	3211182	CastExpression	( int ) ( hx * 8 + 0.5 )		3210649	1					
ANR	3211183	CastTarget	int		3210649	0					
ANR	3211184	AdditiveExpression	hx * 8 + 0.5		3210649	1		+			
ANR	3211185	MultiplicativeExpression	hx * 8		3210649	0		*			
ANR	3211186	Identifier	hx		3210649	0					
ANR	3211187	PrimaryExpression	8		3210649	1					
ANR	3211188	PrimaryExpression	0.5		3210649	1					
ANR	3211189	ExpressionStatement	fc -> numXsubpixels = font_scale -> subpixels [ 0 ]	1167:4:38593:38637	3210649	30	True				
ANR	3211190	AssignmentExpression	fc -> numXsubpixels = font_scale -> subpixels [ 0 ]		3210649	0		=			
ANR	3211191	PtrMemberAccess	fc -> numXsubpixels		3210649	0					
ANR	3211192	Identifier	fc		3210649	0					
ANR	3211193	Identifier	numXsubpixels		3210649	1					
ANR	3211194	ArrayIndexing	font_scale -> subpixels [ 0 ]		3210649	1					
ANR	3211195	PtrMemberAccess	font_scale -> subpixels		3210649	0					
ANR	3211196	Identifier	font_scale		3210649	0					
ANR	3211197	Identifier	subpixels		3210649	1					
ANR	3211198	PrimaryExpression	0		3210649	1					
ANR	3211199	ExpressionStatement	fc -> numYsubpixels = font_scale -> subpixels [ 1 ]	1168:4:38643:38687	3210649	31	True				
ANR	3211200	AssignmentExpression	fc -> numYsubpixels = font_scale -> subpixels [ 1 ]		3210649	0		=			
ANR	3211201	PtrMemberAccess	fc -> numYsubpixels		3210649	0					
ANR	3211202	Identifier	fc		3210649	0					
ANR	3211203	Identifier	numYsubpixels		3210649	1					
ANR	3211204	ArrayIndexing	font_scale -> subpixels [ 1 ]		3210649	1					
ANR	3211205	PtrMemberAccess	font_scale -> subpixels		3210649	0					
ANR	3211206	Identifier	font_scale		3210649	0					
ANR	3211207	Identifier	subpixels		3210649	1					
ANR	3211208	PrimaryExpression	1		3210649	1					
ANR	3211209	ExpressionStatement	fc -> alignment = ( font_scale -> align_to_pixels ? GAGG : GAPP )	1169:4:38693:38752	3210649	32	True				
ANR	3211210	AssignmentExpression	fc -> alignment = ( font_scale -> align_to_pixels ? GAGG : GAPP )		3210649	0		=			
ANR	3211211	PtrMemberAccess	fc -> alignment		3210649	0					
ANR	3211212	Identifier	fc		3210649	0					
ANR	3211213	Identifier	alignment		3210649	1					
ANR	3211214	ConditionalExpression	font_scale -> align_to_pixels ? GAGG : GAPP		3210649	1					
ANR	3211215	Condition	font_scale -> align_to_pixels		3210649	0					
ANR	3211216	PtrMemberAccess	font_scale -> align_to_pixels		3210649	0					
ANR	3211217	Identifier	font_scale		3210649	0					
ANR	3211218	Identifier	align_to_pixels		3210649	1					
ANR	3211219	Identifier	GAGG		3210649	1					
ANR	3211220	Identifier	GAPP		3210649	2					
ANR	3211221	ExpressionStatement	fc -> ExtndFlags = 0	1172:4:38766:38784	3210649	33	True				
ANR	3211222	AssignmentExpression	fc -> ExtndFlags = 0		3210649	0		=			
ANR	3211223	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211224	Identifier	fc		3210649	0					
ANR	3211225	Identifier	ExtndFlags		3210649	1					
ANR	3211226	PrimaryExpression	0		3210649	1					
ANR	3211227	IfStatement	if ( d -> font_type == FC_TT_TYPE )		3210649	34					
ANR	3211228	Condition	d -> font_type == FC_TT_TYPE	1173:8:38794:38819	3210649	0	True				
ANR	3211229	EqualityExpression	d -> font_type == FC_TT_TYPE		3210649	0		==			
ANR	3211230	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211231	Identifier	d		3210649	0					
ANR	3211232	Identifier	font_type		3210649	1					
ANR	3211233	Identifier	FC_TT_TYPE		3210649	1					
ANR	3211234	CompoundStatement		83:36:2964:2964	3210649	1					
ANR	3211235	ExpressionStatement	fc -> ExtndFlags |= EF_TT_ERRORCHECK_ON	1175:8:38860:38897	3210649	0	True				
ANR	3211236	AssignmentExpression	fc -> ExtndFlags |= EF_TT_ERRORCHECK_ON		3210649	0		|=			
ANR	3211237	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211238	Identifier	fc		3210649	0					
ANR	3211239	Identifier	ExtndFlags		3210649	1					
ANR	3211240	Identifier	EF_TT_ERRORCHECK_ON		3210649	1					
ANR	3211241	ExpressionStatement	fc -> ssnum = USER_CMAP	1177:8:38914:38935	3210649	1	True				
ANR	3211242	AssignmentExpression	fc -> ssnum = USER_CMAP		3210649	0		=			
ANR	3211243	PtrMemberAccess	fc -> ssnum		3210649	0					
ANR	3211244	Identifier	fc		3210649	0					
ANR	3211245	Identifier	ssnum		3210649	1					
ANR	3211246	Identifier	USER_CMAP		3210649	1					
ANR	3211247	ElseStatement	else		3210649	0					
ANR	3211248	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		3210649	0					
ANR	3211249	Condition	d -> font_type == FC_FCO_TYPE	1179:13:38956:38982	3210649	0	True				
ANR	3211250	EqualityExpression	d -> font_type == FC_FCO_TYPE		3210649	0		==			
ANR	3211251	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211252	Identifier	d		3210649	0					
ANR	3211253	Identifier	font_type		3210649	1					
ANR	3211254	Identifier	FC_FCO_TYPE		3210649	1					
ANR	3211255	CompoundStatement		89:42:3127:3127	3210649	1					
ANR	3211256	ExpressionStatement	fc -> ssnum = UNICODE	1180:8:38995:39014	3210649	0	True				
ANR	3211257	AssignmentExpression	fc -> ssnum = UNICODE		3210649	0		=			
ANR	3211258	PtrMemberAccess	fc -> ssnum		3210649	0					
ANR	3211259	Identifier	fc		3210649	0					
ANR	3211260	Identifier	ssnum		3210649	1					
ANR	3211261	Identifier	UNICODE		3210649	1					
ANR	3211262	ElseStatement	else		3210649	0					
ANR	3211263	IfStatement	if ( d -> font_type == FC_PST1_TYPE )		3210649	0					
ANR	3211264	Condition	d -> font_type == FC_PST1_TYPE	1182:13:39035:39062	3210649	0	True				
ANR	3211265	EqualityExpression	d -> font_type == FC_PST1_TYPE		3210649	0		==			
ANR	3211266	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211267	Identifier	d		3210649	0					
ANR	3211268	Identifier	font_type		3210649	1					
ANR	3211269	Identifier	FC_PST1_TYPE		3210649	1					
ANR	3211270	CompoundStatement		92:43:3207:3207	3210649	1					
ANR	3211271	ExpressionStatement	fc -> ssnum = T1ENCODING	1183:8:39075:39097	3210649	0	True				
ANR	3211272	AssignmentExpression	fc -> ssnum = T1ENCODING		3210649	0		=			
ANR	3211273	PtrMemberAccess	fc -> ssnum		3210649	0					
ANR	3211274	Identifier	fc		3210649	0					
ANR	3211275	Identifier	ssnum		3210649	1					
ANR	3211276	Identifier	T1ENCODING		3210649	1					
ANR	3211277	IfStatement	if ( d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE )		3210649	35					
ANR	3211278	Condition	d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE	1186:8:39114:39170	3210649	0	True				
ANR	3211279	AndExpression	d -> font_type != FC_TT_TYPE && d -> font_type != FC_FCO_TYPE		3210649	0		&&			
ANR	3211280	EqualityExpression	d -> font_type != FC_TT_TYPE		3210649	0		!=			
ANR	3211281	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211282	Identifier	d		3210649	0					
ANR	3211283	Identifier	font_type		3210649	1					
ANR	3211284	Identifier	FC_TT_TYPE		3210649	1					
ANR	3211285	EqualityExpression	d -> font_type != FC_FCO_TYPE		3210649	1		!=			
ANR	3211286	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211287	Identifier	d		3210649	0					
ANR	3211288	Identifier	font_type		3210649	1					
ANR	3211289	Identifier	FC_FCO_TYPE		3210649	1					
ANR	3211290	CompoundStatement		96:67:3315:3315	3210649	1					
ANR	3211291	ExpressionStatement	fc -> ExtndFlags |= EF_NOSYMSETMAP	1187:8:39183:39215	3210649	0	True				
ANR	3211292	AssignmentExpression	fc -> ExtndFlags |= EF_NOSYMSETMAP		3210649	0		|=			
ANR	3211293	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211294	Identifier	fc		3210649	0					
ANR	3211295	Identifier	ExtndFlags		3210649	1					
ANR	3211296	Identifier	EF_NOSYMSETMAP		3210649	1					
ANR	3211297	IfStatement	if ( d -> font_type == FC_TT_TYPE && ! use_XL_format )		3210649	36					
ANR	3211298	Condition	d -> font_type == FC_TT_TYPE && ! use_XL_format	1190:8:39281:39324	3210649	0	True				
ANR	3211299	AndExpression	d -> font_type == FC_TT_TYPE && ! use_XL_format		3210649	0		&&			
ANR	3211300	EqualityExpression	d -> font_type == FC_TT_TYPE		3210649	0		==			
ANR	3211301	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211302	Identifier	d		3210649	0					
ANR	3211303	Identifier	font_type		3210649	1					
ANR	3211304	Identifier	FC_TT_TYPE		3210649	1					
ANR	3211305	UnaryOperationExpression	! use_XL_format		3210649	1					
ANR	3211306	UnaryOperator	!		3210649	0					
ANR	3211307	Identifier	use_XL_format		3210649	1					
ANR	3211308	CompoundStatement		100:54:3469:3469	3210649	1					
ANR	3211309	ExpressionStatement	fc -> ExtndFlags |= EF_FORMAT16_TYPE	1191:8:39337:39371	3210649	0	True				
ANR	3211310	AssignmentExpression	fc -> ExtndFlags |= EF_FORMAT16_TYPE		3210649	0		|=			
ANR	3211311	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211312	Identifier	fc		3210649	0					
ANR	3211313	Identifier	ExtndFlags		3210649	1					
ANR	3211314	Identifier	EF_FORMAT16_TYPE		3210649	1					
ANR	3211315	ExpressionStatement	fc -> format |= FC_NON_Z_WIND	1194:4:39433:39460	3210649	37	True				
ANR	3211316	AssignmentExpression	fc -> format |= FC_NON_Z_WIND		3210649	0		|=			
ANR	3211317	PtrMemberAccess	fc -> format		3210649	0					
ANR	3211318	Identifier	fc		3210649	0					
ANR	3211319	Identifier	format		3210649	1					
ANR	3211320	Identifier	FC_NON_Z_WIND		3210649	1					
ANR	3211321	ExpressionStatement	fc -> format |= FC_INCHES_TYPE	1195:4:39518:39546	3210649	38	True				
ANR	3211322	AssignmentExpression	fc -> format |= FC_INCHES_TYPE		3210649	0		|=			
ANR	3211323	PtrMemberAccess	fc -> format		3210649	0					
ANR	3211324	Identifier	fc		3210649	0					
ANR	3211325	Identifier	format		3210649	1					
ANR	3211326	Identifier	FC_INCHES_TYPE		3210649	1					
ANR	3211327	ExpressionStatement	fc -> user_platID = d -> platformId	1196:4:39589:39620	3210649	39	True				
ANR	3211328	AssignmentExpression	fc -> user_platID = d -> platformId		3210649	0		=			
ANR	3211329	PtrMemberAccess	fc -> user_platID		3210649	0					
ANR	3211330	Identifier	fc		3210649	0					
ANR	3211331	Identifier	user_platID		3210649	1					
ANR	3211332	PtrMemberAccess	d -> platformId		3210649	1					
ANR	3211333	Identifier	d		3210649	0					
ANR	3211334	Identifier	platformId		3210649	1					
ANR	3211335	ExpressionStatement	fc -> user_specID = d -> specificId	1197:4:39626:39657	3210649	40	True				
ANR	3211336	AssignmentExpression	fc -> user_specID = d -> specificId		3210649	0		=			
ANR	3211337	PtrMemberAccess	fc -> user_specID		3210649	0					
ANR	3211338	Identifier	fc		3210649	0					
ANR	3211339	Identifier	user_specID		3210649	1					
ANR	3211340	PtrMemberAccess	d -> specificId		3210649	1					
ANR	3211341	Identifier	d		3210649	0					
ANR	3211342	Identifier	specificId		3210649	1					
ANR	3211343	IfStatement	if ( use_XL_format )		3210649	41					
ANR	3211344	Condition	use_XL_format	1198:8:39667:39679	3210649	0	True				
ANR	3211345	Identifier	use_XL_format		3210649	0					
ANR	3211346	CompoundStatement		108:23:3824:3824	3210649	1					
ANR	3211347	ExpressionStatement	fc -> ExtndFlags |= EF_XLFONT_TYPE	1199:8:39692:39724	3210649	0	True				
ANR	3211348	AssignmentExpression	fc -> ExtndFlags |= EF_XLFONT_TYPE		3210649	0		|=			
ANR	3211349	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211350	Identifier	fc		3210649	0					
ANR	3211351	Identifier	ExtndFlags		3210649	1					
ANR	3211352	Identifier	EF_XLFONT_TYPE		3210649	1					
ANR	3211353	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1201:8:39795:39825	3210649	1	True				
ANR	3211354	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		3210649	0		|=			
ANR	3211355	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211356	Identifier	fc		3210649	0					
ANR	3211357	Identifier	ExtndFlags		3210649	1					
ANR	3211358	Identifier	EF_TT_NOHINT		3210649	1					
ANR	3211359	IfStatement	if ( ff -> is_vertical )		3210649	42					
ANR	3211360	Condition	ff -> is_vertical	1203:8:39841:39855	3210649	0	True				
ANR	3211361	PtrMemberAccess	ff -> is_vertical		3210649	0					
ANR	3211362	Identifier	ff		3210649	0					
ANR	3211363	Identifier	is_vertical		3210649	1					
ANR	3211364	ExpressionStatement	fc -> ExtndFlags |= EF_UFSTVERT_TYPE	1204:8:39866:39900	3210649	1	True				
ANR	3211365	AssignmentExpression	fc -> ExtndFlags |= EF_UFSTVERT_TYPE		3210649	0		|=			
ANR	3211366	PtrMemberAccess	fc -> ExtndFlags		3210649	0					
ANR	3211367	Identifier	fc		3210649	0					
ANR	3211368	Identifier	ExtndFlags		3210649	1					
ANR	3211369	Identifier	EF_UFSTVERT_TYPE		3210649	1					
ANR	3211370	ExpressionStatement	fc -> dl_ssnum = ( d -> specificId << 4 ) | d -> platformId	1205:4:39906:39957	3210649	43	True				
ANR	3211371	AssignmentExpression	fc -> dl_ssnum = ( d -> specificId << 4 ) | d -> platformId		3210649	0		=			
ANR	3211372	PtrMemberAccess	fc -> dl_ssnum		3210649	0					
ANR	3211373	Identifier	fc		3210649	0					
ANR	3211374	Identifier	dl_ssnum		3210649	1					
ANR	3211375	InclusiveOrExpression	( d -> specificId << 4 ) | d -> platformId		3210649	1		|			
ANR	3211376	ShiftExpression	d -> specificId << 4		3210649	0		<<			
ANR	3211377	PtrMemberAccess	d -> specificId		3210649	0					
ANR	3211378	Identifier	d		3210649	0					
ANR	3211379	Identifier	specificId		3210649	1					
ANR	3211380	PrimaryExpression	4		3210649	1					
ANR	3211381	PtrMemberAccess	d -> platformId		3210649	1					
ANR	3211382	Identifier	d		3210649	0					
ANR	3211383	Identifier	platformId		3210649	1					
ANR	3211384	ExpressionStatement	fc -> ttc_index = ff -> subfont	1206:4:39963:39990	3210649	44	True				
ANR	3211385	AssignmentExpression	fc -> ttc_index = ff -> subfont		3210649	0		=			
ANR	3211386	PtrMemberAccess	fc -> ttc_index		3210649	0					
ANR	3211387	Identifier	fc		3210649	0					
ANR	3211388	Identifier	ttc_index		3210649	1					
ANR	3211389	PtrMemberAccess	ff -> subfont		3210649	1					
ANR	3211390	Identifier	ff		3210649	0					
ANR	3211391	Identifier	subfont		3210649	1					
ANR	3211392	ExpressionStatement	r -> callback_error = 0	1207:4:39996:40017	3210649	45	True				
ANR	3211393	AssignmentExpression	r -> callback_error = 0		3210649	0		=			
ANR	3211394	PtrMemberAccess	r -> callback_error		3210649	0					
ANR	3211395	Identifier	r		3210649	0					
ANR	3211396	Identifier	callback_error		3210649	1					
ANR	3211397	PrimaryExpression	0		3210649	1					
ANR	3211398	Statement	code	1209:4:40024:40027	3210649	46	True				
ANR	3211399	Statement	=	1209:9:40029:40029	3210649	47	True				
ANR	3211400	Statement	CGIFfont	1209:11:40031:40038	3210649	48	True				
ANR	3211401	Statement	(	1209:19:40039:40039	3210649	49	True				
ANR	3211402	Statement	FSA	1209:20:40040:40042	3210649	50	True				
ANR	3211403	Statement	fc	1209:24:40044:40045	3210649	51	True				
ANR	3211404	Statement	)	1209:26:40046:40046	3210649	52	True				
ANR	3211405	ExpressionStatement		1209:27:40047:40047	3210649	53	True				
ANR	3211406	IfStatement	if ( r -> callback_error != 0 )		3210649	54					
ANR	3211407	Condition	r -> callback_error != 0	1210:8:40057:40078	3210649	0	True				
ANR	3211408	EqualityExpression	r -> callback_error != 0		3210649	0		!=			
ANR	3211409	PtrMemberAccess	r -> callback_error		3210649	0					
ANR	3211410	Identifier	r		3210649	0					
ANR	3211411	Identifier	callback_error		3210649	1					
ANR	3211412	PrimaryExpression	0		3210649	1					
ANR	3211413	ReturnStatement	return r -> callback_error ;	1211:8:40089:40113	3210649	1	True				
ANR	3211414	PtrMemberAccess	r -> callback_error		3210649	0					
ANR	3211415	Identifier	r		3210649	0					
ANR	3211416	Identifier	callback_error		3210649	1					
ANR	3211417	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		3210649	55					
ANR	3211418	Condition	d -> font_type == FC_FCO_TYPE	1213:8:40124:40150	3210649	0	True				
ANR	3211419	EqualityExpression	d -> font_type == FC_FCO_TYPE		3210649	0		==			
ANR	3211420	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211421	Identifier	d		3210649	0					
ANR	3211422	Identifier	font_type		3210649	1					
ANR	3211423	Identifier	FC_FCO_TYPE		3210649	1					
ANR	3211424	CompoundStatement		123:37:4295:4295	3210649	1					
ANR	3211425	ExpressionStatement	code = CGIFfont_metrics ( & fm )	1214:8:40163:40191	3210649	0	True				
ANR	3211426	AssignmentExpression	code = CGIFfont_metrics ( & fm )		3210649	0		=			
ANR	3211427	Identifier	code		3210649	0					
ANR	3211428	CallExpression	CGIFfont_metrics ( & fm )		3210649	1					
ANR	3211429	Callee	CGIFfont_metrics		3210649	0					
ANR	3211430	Identifier	CGIFfont_metrics		3210649	0					
ANR	3211431	ArgumentList	& fm		3210649	1					
ANR	3211432	Argument	& fm		3210649	0					
ANR	3211433	UnaryOperationExpression	& fm		3210649	0					
ANR	3211434	UnaryOperator	&		3210649	0					
ANR	3211435	Identifier	fm		3210649	1					
ANR	3211436	IfStatement	if ( r -> callback_error != 0 )		3210649	1					
ANR	3211437	Condition	r -> callback_error != 0	1215:12:40205:40226	3210649	0	True				
ANR	3211438	EqualityExpression	r -> callback_error != 0		3210649	0		!=			
ANR	3211439	PtrMemberAccess	r -> callback_error		3210649	0					
ANR	3211440	Identifier	r		3210649	0					
ANR	3211441	Identifier	callback_error		3210649	1					
ANR	3211442	PrimaryExpression	0		3210649	1					
ANR	3211443	ReturnStatement	return r -> callback_error ;	1216:12:40241:40265	3210649	1	True				
ANR	3211444	PtrMemberAccess	r -> callback_error		3210649	0					
ANR	3211445	Identifier	r		3210649	0					
ANR	3211446	Identifier	callback_error		3210649	1					
ANR	3211447	IfStatement	if ( code != 0 )		3210649	56					
ANR	3211448	Condition	code != 0	1218:8:40281:40289	3210649	0	True				
ANR	3211449	EqualityExpression	code != 0		3210649	0		!=			
ANR	3211450	Identifier	code		3210649	0					
ANR	3211451	PrimaryExpression	0		3210649	1					
ANR	3211452	CompoundStatement		128:19:4434:4434	3210649	1					
ANR	3211453	ExpressionStatement	code = gs_error_invalidfont	1219:8:40302:40329	3210649	0	True				
ANR	3211454	AssignmentExpression	code = gs_error_invalidfont		3210649	0		=			
ANR	3211455	Identifier	code		3210649	0					
ANR	3211456	Identifier	gs_error_invalidfont		3210649	1					
ANR	3211457	IfStatement	if ( code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path )		3210649	57					
ANR	3211458	Condition	code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path	1222:8:40346:40407	3210649	0	True				
ANR	3211459	AndExpression	code >= 0 && d -> font_type == FC_FCO_TYPE && ff -> font_file_path		3210649	0		&&			
ANR	3211460	RelationalExpression	code >= 0		3210649	0		>=			
ANR	3211461	Identifier	code		3210649	0					
ANR	3211462	PrimaryExpression	0		3210649	1					
ANR	3211463	AndExpression	d -> font_type == FC_FCO_TYPE && ff -> font_file_path		3210649	1		&&			
ANR	3211464	EqualityExpression	d -> font_type == FC_FCO_TYPE		3210649	0		==			
ANR	3211465	PtrMemberAccess	d -> font_type		3210649	0					
ANR	3211466	Identifier	d		3210649	0					
ANR	3211467	Identifier	font_type		3210649	1					
ANR	3211468	Identifier	FC_FCO_TYPE		3210649	1					
ANR	3211469	PtrMemberAccess	ff -> font_file_path		3210649	1					
ANR	3211470	Identifier	ff		3210649	0					
ANR	3211471	Identifier	font_file_path		3210649	1					
ANR	3211472	CompoundStatement		134:8:4588:4607	3210649	1					
ANR	3211473	IdentifierDeclStatement	UW16 bufsize = 0 ;	1223:8:40420:40436	3210649	0	True				
ANR	3211474	IdentifierDecl	bufsize = 0		3210649	0					
ANR	3211475	IdentifierDeclType	UW16		3210649	0					
ANR	3211476	Identifier	bufsize		3210649	1					
ANR	3211477	AssignmentExpression	bufsize = 0		3210649	2		=			
ANR	3211478	Identifier	bufsize		3210649	0					
ANR	3211479	PrimaryExpression	0		3210649	1					
ANR	3211480	IdentifierDeclStatement	LPSB8 buffer = NULL ;	1224:8:40446:40465	3210649	1	True				
ANR	3211481	IdentifierDecl	buffer = NULL		3210649	0					
ANR	3211482	IdentifierDeclType	LPSB8		3210649	0					
ANR	3211483	Identifier	buffer		3210649	1					
ANR	3211484	AssignmentExpression	buffer = NULL		3210649	2		=			
ANR	3211485	Identifier	NULL		3210649	0					
ANR	3211486	Identifier	NULL		3210649	1					
ANR	3211487	Statement	code	1226:8:40476:40479	3210649	2	True				
ANR	3211488	Statement	=	1226:13:40481:40481	3210649	3	True				
ANR	3211489	Statement	CGIFfco_Access	1227:12:40495:40508	3210649	4	True				
ANR	3211490	Statement	(	1227:26:40509:40509	3210649	5	True				
ANR	3211491	Statement	FSA	1227:27:40510:40512	3210649	6	True				
ANR	3211492	Statement	(	1227:31:40514:40514	3210649	7	True				
ANR	3211493	Statement	LPUB8	1227:32:40515:40519	3210649	8	True				
ANR	3211494	Statement	)	1227:37:40520:40520	3210649	9	True				
ANR	3211495	Statement	ff	1227:38:40521:40522	3210649	10	True				
ANR	3211496	Statement	->	1227:40:40523:40524	3210649	11	True				
ANR	3211497	Statement	font_file_path	1227:42:40525:40538	3210649	12	True				
ANR	3211498	Statement	","	1227:56:40539:40539	3210649	13	True				
ANR	3211499	Statement	ff	1227:58:40541:40542	3210649	14	True				
ANR	3211500	Statement	->	1227:60:40543:40544	3210649	15	True				
ANR	3211501	Statement	subfont	1227:62:40545:40551	3210649	16	True				
ANR	3211502	Statement	","	1227:69:40552:40552	3210649	17	True				
ANR	3211503	Statement	TFATRIB_KEY	1227:71:40554:40564	3210649	18	True				
ANR	3211504	Statement	","	1227:82:40565:40565	3210649	19	True				
ANR	3211505	Statement	&	1228:27:40594:40594	3210649	20	True				
ANR	3211506	Statement	bufsize	1228:28:40595:40601	3210649	21	True				
ANR	3211507	Statement	","	1228:35:40602:40602	3210649	22	True				
ANR	3211508	Statement	NULL	1228:37:40604:40607	3210649	23	True				
ANR	3211509	Statement	)	1228:41:40608:40608	3210649	24	True				
ANR	3211510	ExpressionStatement		1228:42:40609:40609	3210649	25	True				
ANR	3211511	IfStatement	if ( code == 0 )		3210649	26					
ANR	3211512	Condition	code == 0	1229:12:40623:40631	3210649	0	True				
ANR	3211513	EqualityExpression	code == 0		3210649	0		==			
ANR	3211514	Identifier	code		3210649	0					
ANR	3211515	PrimaryExpression	0		3210649	1					
ANR	3211516	CompoundStatement		139:23:4776:4776	3210649	1					
ANR	3211517	IfStatement	if ( bufsize > d -> ufstfontinfosize )		3210649	0					
ANR	3211518	Condition	bufsize > d -> ufstfontinfosize	1230:16:40652:40680	3210649	0	True				
ANR	3211519	RelationalExpression	bufsize > d -> ufstfontinfosize		3210649	0		>			
ANR	3211520	Identifier	bufsize		3210649	0					
ANR	3211521	PtrMemberAccess	d -> ufstfontinfosize		3210649	1					
ANR	3211522	Identifier	d		3210649	0					
ANR	3211523	Identifier	ufstfontinfosize		3210649	1					
ANR	3211524	CompoundStatement		140:47:4825:4825	3210649	1					
ANR	3211525	ExpressionStatement	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font info data"" )"	1231:16:40701:40762	3210649	0	True				
ANR	3211526	CallExpression	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font info data"" )"		3210649	0					
ANR	3211527	Callee	gs_free		3210649	0					
ANR	3211528	Identifier	gs_free		3210649	0					
ANR	3211529	ArgumentList	r -> mem		3210649	1					
ANR	3211530	Argument	r -> mem		3210649	0					
ANR	3211531	PtrMemberAccess	r -> mem		3210649	0					
ANR	3211532	Identifier	r		3210649	0					
ANR	3211533	Identifier	mem		3210649	1					
ANR	3211534	Argument	d -> ufstfontinfo		3210649	1					
ANR	3211535	PtrMemberAccess	d -> ufstfontinfo		3210649	0					
ANR	3211536	Identifier	d		3210649	0					
ANR	3211537	Identifier	ufstfontinfo		3210649	1					
ANR	3211538	Argument	0		3210649	2					
ANR	3211539	PrimaryExpression	0		3210649	0					
ANR	3211540	Argument	0		3210649	3					
ANR	3211541	PrimaryExpression	0		3210649	0					
ANR	3211542	Argument	"""ufst font info data"""		3210649	4					
ANR	3211543	PrimaryExpression	"""ufst font info data"""		3210649	0					
ANR	3211544	ExpressionStatement	"buffer = gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"	1233:16:40781:40842	3210649	1	True				
ANR	3211545	AssignmentExpression	"buffer = gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"		3210649	0		=			
ANR	3211546	Identifier	buffer		3210649	0					
ANR	3211547	CallExpression	"gs_malloc ( r -> mem , bufsize , 1 , ""ufst font info data"" )"		3210649	1					
ANR	3211548	Callee	gs_malloc		3210649	0					
ANR	3211549	Identifier	gs_malloc		3210649	0					
ANR	3211550	ArgumentList	r -> mem		3210649	1					
ANR	3211551	Argument	r -> mem		3210649	0					
ANR	3211552	PtrMemberAccess	r -> mem		3210649	0					
ANR	3211553	Identifier	r		3210649	0					
ANR	3211554	Identifier	mem		3210649	1					
ANR	3211555	Argument	bufsize		3210649	1					
ANR	3211556	Identifier	bufsize		3210649	0					
ANR	3211557	Argument	1		3210649	2					
ANR	3211558	PrimaryExpression	1		3210649	0					
ANR	3211559	Argument	"""ufst font info data"""		3210649	3					
ANR	3211560	PrimaryExpression	"""ufst font info data"""		3210649	0					
ANR	3211561	IfStatement	if ( buffer == NULL )		3210649	2					
ANR	3211562	Condition	buffer == NULL	1234:20:40864:40877	3210649	0	True				
ANR	3211563	EqualityExpression	buffer == NULL		3210649	0		==			
ANR	3211564	Identifier	buffer		3210649	0					
ANR	3211565	Identifier	NULL		3210649	1					
ANR	3211566	CompoundStatement		144:36:5022:5022	3210649	1					
ANR	3211567	ExpressionStatement	code = gs_error_VMerror	1235:20:40902:40925	3210649	0	True				
ANR	3211568	AssignmentExpression	code = gs_error_VMerror		3210649	0		=			
ANR	3211569	Identifier	code		3210649	0					
ANR	3211570	Identifier	gs_error_VMerror		3210649	1					
ANR	3211571	ElseStatement	else		3210649	0					
ANR	3211572	CompoundStatement		148:17:5118:5118	3210649	0					
ANR	3211573	ExpressionStatement	buffer = ( LPSB8 ) d -> ufstfontinfo	1239:16:40994:41026	3210649	0	True				
ANR	3211574	AssignmentExpression	buffer = ( LPSB8 ) d -> ufstfontinfo		3210649	0		=			
ANR	3211575	Identifier	buffer		3210649	0					
ANR	3211576	CastExpression	( LPSB8 ) d -> ufstfontinfo		3210649	1					
ANR	3211577	CastTarget	LPSB8		3210649	0					
ANR	3211578	PtrMemberAccess	d -> ufstfontinfo		3210649	1					
ANR	3211579	Identifier	d		3210649	0					
ANR	3211580	Identifier	ufstfontinfo		3210649	1					
ANR	3211581	ExpressionStatement	bufsize = d -> ufstfontinfosize	1240:16:41044:41073	3210649	1	True				
ANR	3211582	AssignmentExpression	bufsize = d -> ufstfontinfosize		3210649	0		=			
ANR	3211583	Identifier	bufsize		3210649	0					
ANR	3211584	PtrMemberAccess	d -> ufstfontinfosize		3210649	1					
ANR	3211585	Identifier	d		3210649	0					
ANR	3211586	Identifier	ufstfontinfosize		3210649	1					
ANR	3211587	IfStatement	if ( buffer )		3210649	1					
ANR	3211588	Condition	buffer	1242:16:41105:41110	3210649	0	True				
ANR	3211589	Identifier	buffer		3210649	0					
ANR	3211590	CompoundStatement		152:24:5255:5255	3210649	1					
ANR	3211591	Statement	(	1243:16:41131:41131	3210649	0	True				
ANR	3211592	Statement	void	1243:17:41132:41135	3210649	1	True				
ANR	3211593	Statement	)	1243:21:41136:41136	3210649	2	True				
ANR	3211594	Statement	CGIFfco_Access	1243:22:41137:41150	3210649	3	True				
ANR	3211595	Statement	(	1243:36:41151:41151	3210649	4	True				
ANR	3211596	Statement	FSA	1243:37:41152:41154	3210649	5	True				
ANR	3211597	Statement	(	1243:41:41156:41156	3210649	6	True				
ANR	3211598	Statement	LPUB8	1243:42:41157:41161	3210649	7	True				
ANR	3211599	Statement	)	1243:47:41162:41162	3210649	8	True				
ANR	3211600	Statement	ff	1243:48:41163:41164	3210649	9	True				
ANR	3211601	Statement	->	1243:50:41165:41166	3210649	10	True				
ANR	3211602	Statement	font_file_path	1243:52:41167:41180	3210649	11	True				
ANR	3211603	Statement	","	1243:66:41181:41181	3210649	12	True				
ANR	3211604	Statement	ff	1243:68:41183:41184	3210649	13	True				
ANR	3211605	Statement	->	1243:70:41185:41186	3210649	14	True				
ANR	3211606	Statement	subfont	1243:72:41187:41193	3210649	15	True				
ANR	3211607	Statement	","	1243:79:41194:41194	3210649	16	True				
ANR	3211608	Statement	TFATRIB_KEY	1244:37:41233:41243	3210649	17	True				
ANR	3211609	Statement	","	1244:48:41244:41244	3210649	18	True				
ANR	3211610	Statement	&	1244:50:41246:41246	3210649	19	True				
ANR	3211611	Statement	bufsize	1244:51:41247:41253	3210649	20	True				
ANR	3211612	Statement	","	1244:58:41254:41254	3210649	21	True				
ANR	3211613	Statement	buffer	1244:60:41256:41261	3210649	22	True				
ANR	3211614	Statement	)	1244:66:41262:41262	3210649	23	True				
ANR	3211615	ExpressionStatement		1244:67:41263:41263	3210649	24	True				
ANR	3211616	ExpressionStatement	d -> ufstfontinfo = ( TTFONTINFOTYPE * ) buffer	1245:16:41281:41324	3210649	25	True				
ANR	3211617	AssignmentExpression	d -> ufstfontinfo = ( TTFONTINFOTYPE * ) buffer		3210649	0		=			
ANR	3211618	PtrMemberAccess	d -> ufstfontinfo		3210649	0					
ANR	3211619	Identifier	d		3210649	0					
ANR	3211620	Identifier	ufstfontinfo		3210649	1					
ANR	3211621	CastExpression	( TTFONTINFOTYPE * ) buffer		3210649	1					
ANR	3211622	CastTarget	TTFONTINFOTYPE *		3210649	0					
ANR	3211623	Identifier	buffer		3210649	1					
ANR	3211624	ExpressionStatement	d -> ufstfontinfosize = bufsize	1246:16:41342:41371	3210649	26	True				
ANR	3211625	AssignmentExpression	d -> ufstfontinfosize = bufsize		3210649	0		=			
ANR	3211626	PtrMemberAccess	d -> ufstfontinfosize		3210649	0					
ANR	3211627	Identifier	d		3210649	0					
ANR	3211628	Identifier	ufstfontinfosize		3210649	1					
ANR	3211629	Identifier	bufsize		3210649	1					
ANR	3211630	ReturnStatement	return code ;	1251:4:41408:41419	3210649	58	True				
ANR	3211631	Identifier	code		3210649	0					
ANR	3211632	ReturnType	static gs_fapi_retcode		3210649	1					
ANR	3211633	Identifier	gs_fapi_ufst_get_scaled_font_aux		3210649	2					
ANR	3211634	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc"		3210649	3					
ANR	3211635	Parameter	gs_fapi_server * server	1088:33:35685:35707	3210649	0	True				
ANR	3211636	ParameterType	gs_fapi_server *		3210649	0					
ANR	3211637	Identifier	server		3210649	1					
ANR	3211638	Parameter	gs_fapi_font * ff	1088:58:35710:35726	3210649	1	True				
ANR	3211639	ParameterType	gs_fapi_font *		3210649	0					
ANR	3211640	Identifier	ff		3210649	1					
ANR	3211641	Parameter	const gs_fapi_font_scale * font_scale	1089:20:35749:35785	3210649	2	True				
ANR	3211642	ParameterType	const gs_fapi_font_scale *		3210649	0					
ANR	3211643	Identifier	font_scale		3210649	1					
ANR	3211644	Parameter	const char * xlatmap	1090:20:35808:35826	3210649	3	True				
ANR	3211645	ParameterType	const char *		3210649	0					
ANR	3211646	Identifier	xlatmap		3210649	1					
ANR	3211647	Parameter	gs_fapi_descendant_code dc	1090:41:35829:35854	3210649	4	True				
ANR	3211648	ParameterType	gs_fapi_descendant_code		3210649	0					
ANR	3211649	Identifier	dc		3210649	1					
ANR	3211650	CFGEntryNode	ENTRY		3210649		True				
ANR	3211651	CFGExitNode	EXIT		3210649		True				
ANR	3211652	Symbol	ff -> is_cid		3210649						
ANR	3211653	Symbol	fc -> s . m2		3210649						
ANR	3211654	Symbol	r -> mem		3210649						
ANR	3211655	Symbol	r -> tran_yy		3210649						
ANR	3211656	Symbol	fc -> alignment		3210649						
ANR	3211657	Symbol	r -> tran_yx		3210649						
ANR	3211658	Symbol	UNICODE		3210649						
ANR	3211659	Symbol	hx		3210649						
ANR	3211660	Symbol	& fm		3210649						
ANR	3211661	Symbol	xlatmap		3210649						
ANR	3211662	Symbol	hy		3210649						
ANR	3211663	Symbol	d -> platformId		3210649						
ANR	3211664	Symbol	GAGG		3210649						
ANR	3211665	Symbol	USER_CMAP		3210649						
ANR	3211666	Symbol	EF_XLFONT_TYPE		3210649						
ANR	3211667	Symbol	ff -> font_file_path		3210649						
ANR	3211668	Symbol	fc -> ExtndFlags		3210649						
ANR	3211669	Symbol	fc -> s . m2 . xworld_res		3210649						
ANR	3211670	Symbol	r -> tran_xx		3210649						
ANR	3211671	Symbol	fc -> yspot		3210649						
ANR	3211672	Symbol	* * fc		3210649						
ANR	3211673	Symbol	r -> tran_xy		3210649						
ANR	3211674	Symbol	gs_malloc		3210649						
ANR	3211675	Symbol	* font_scale -> HWResolution		3210649						
ANR	3211676	Symbol	fc -> s . m2 . yworld_res		3210649						
ANR	3211677	Symbol	server		3210649						
ANR	3211678	Symbol	FC_FCO_TYPE		3210649						
ANR	3211679	Symbol	d -> ufstfontinfosize		3210649						
ANR	3211680	Symbol	fc -> s . m2 . m		3210649						
ANR	3211681	Symbol	* font_scale		3210649						
ANR	3211682	Symbol	EF_TT_NOHINT		3210649						
ANR	3211683	Symbol	ff -> is_vertical		3210649						
ANR	3211684	Symbol	hypot		3210649						
ANR	3211685	Symbol	ff -> server_font_data		3210649						
ANR	3211686	Symbol	ff -> subfont		3210649						
ANR	3211687	Symbol	gs_error_invalidfont		3210649						
ANR	3211688	Symbol	* fc		3210649						
ANR	3211689	Symbol	fc -> numXsubpixels		3210649						
ANR	3211690	Symbol	If_to_I		3210649						
ANR	3211691	Symbol	& r -> fc		3210649						
ANR	3211692	Symbol	r -> callback_error		3210649						
ANR	3211693	Symbol	d		3210649						
ANR	3211694	Symbol	ufst_make_font_data		3210649						
ANR	3211695	Symbol	* * font_scale		3210649						
ANR	3211696	Symbol	* ff		3210649						
ANR	3211697	Symbol	T1ENCODING		3210649						
ANR	3211698	Symbol	EF_FORMAT16_TYPE		3210649						
ANR	3211699	Symbol	bufsize		3210649						
ANR	3211700	Symbol	fc -> ssnum		3210649						
ANR	3211701	Symbol	fc -> fc_type		3210649						
ANR	3211702	Symbol	gs_fapi_toplevel_begin		3210649						
ANR	3211703	Symbol	* font_scale -> matrix		3210649						
ANR	3211704	Symbol	r		3210649						
ANR	3211705	Symbol	world_scale		3210649						
ANR	3211706	Symbol	GAPP		3210649						
ANR	3211707	Symbol	dc		3210649						
ANR	3211708	Symbol	gs_fapi_toplevel_complete		3210649						
ANR	3211709	Symbol	* font_scale -> subpixels		3210649						
ANR	3211710	Symbol	EF_TT_ERRORCHECK_ON		3210649						
ANR	3211711	Symbol	font_scale -> matrix		3210649						
ANR	3211712	Symbol	fc -> xspot		3210649						
ANR	3211713	Symbol	buffer		3210649						
ANR	3211714	Symbol	* fc -> s . m2		3210649						
ANR	3211715	Symbol	fc -> user_specID		3210649						
ANR	3211716	Symbol	NULL		3210649						
ANR	3211717	Symbol	font_scale -> HWResolution		3210649						
ANR	3211718	Symbol	fc -> s . m2 . world_scale		3210649						
ANR	3211719	Symbol	fc -> s . m2 . point_size		3210649						
ANR	3211720	Symbol	fc -> s . m2 . set_size		3210649						
ANR	3211721	Symbol	use_XL_format		3210649						
ANR	3211722	Symbol	d -> font_type		3210649						
ANR	3211723	Symbol	* fc -> s		3210649						
ANR	3211724	Symbol	fc -> user_platID		3210649						
ANR	3211725	Symbol	fc		3210649						
ANR	3211726	Symbol	fc -> format		3210649						
ANR	3211727	Symbol	ff -> is_mtx_skipped		3210649						
ANR	3211728	Symbol	ff		3210649						
ANR	3211729	Symbol	fc -> ttc_index		3210649						
ANR	3211730	Symbol	code		3210649						
ANR	3211731	Symbol	ff -> is_type1		3210649						
ANR	3211732	Symbol	fc -> s		3210649						
ANR	3211733	Symbol	FC_TT_TYPE		3210649						
ANR	3211734	Symbol	fm		3210649						
ANR	3211735	Symbol	scale		3210649						
ANR	3211736	Symbol	F_ONE		3210649						
ANR	3211737	Symbol	EF_NOSYMSETMAP		3210649						
ANR	3211738	Symbol	FC_NON_Z_WIND		3210649						
ANR	3211739	Symbol	FC_MAT2_TYPE		3210649						
ANR	3211740	Symbol	fc -> s . m2 . matrix_scale		3210649						
ANR	3211741	Symbol	fc -> numYsubpixels		3210649						
ANR	3211742	Symbol	font_scale -> align_to_pixels		3210649						
ANR	3211743	Symbol	FC_INCHES_TYPE		3210649						
ANR	3211744	Symbol	d -> specificId		3210649						
ANR	3211745	Symbol	fc -> dl_ssnum		3210649						
ANR	3211746	Symbol	d -> ufstfontinfo		3210649						
ANR	3211747	Symbol	font_scale -> subpixels		3210649						
ANR	3211748	Symbol	FC_PST1_TYPE		3210649						
ANR	3211749	Symbol	ff -> need_decrypt		3210649						
ANR	3211750	Symbol	& d		3210649						
ANR	3211751	Symbol	* d		3210649						
ANR	3211752	Symbol	EF_UFSTVERT_TYPE		3210649						
ANR	3211753	Symbol	CGIFfont_metrics		3210649						
ANR	3211754	Symbol	gs_error_VMerror		3210649						
ANR	3211755	Symbol	font_scale		3210649						
ANR	3211756	Symbol	* fc -> s . m2 . m		3210649						
ANR	3211757	Symbol	* r		3210649						
ANR	3211758	Function	gs_fapi_ufst_get_scaled_font	1254:0:41424:41726							
ANR	3211759	FunctionDef	"gs_fapi_ufst_get_scaled_font (gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc)"		3211758	0					
ANR	3211760	CompoundStatement		1258:0:41640:41726	3211758	0					
ANR	3211761	ReturnStatement	"return ( gs_fapi_ufst_get_scaled_font_aux ( server , ff , font_scale , xlatmap , dc ) ) ;"	1259:4:41646:41724	3211758	0	True				
ANR	3211762	CallExpression	"gs_fapi_ufst_get_scaled_font_aux ( server , ff , font_scale , xlatmap , dc )"		3211758	0					
ANR	3211763	Callee	gs_fapi_ufst_get_scaled_font_aux		3211758	0					
ANR	3211764	Identifier	gs_fapi_ufst_get_scaled_font_aux		3211758	0					
ANR	3211765	ArgumentList	server		3211758	1					
ANR	3211766	Argument	server		3211758	0					
ANR	3211767	Identifier	server		3211758	0					
ANR	3211768	Argument	ff		3211758	1					
ANR	3211769	Identifier	ff		3211758	0					
ANR	3211770	Argument	font_scale		3211758	2					
ANR	3211771	Identifier	font_scale		3211758	0					
ANR	3211772	Argument	xlatmap		3211758	3					
ANR	3211773	Identifier	xlatmap		3211758	0					
ANR	3211774	Argument	dc		3211758	4					
ANR	3211775	Identifier	dc		3211758	0					
ANR	3211776	ReturnType	static gs_fapi_retcode		3211758	1					
ANR	3211777	Identifier	gs_fapi_ufst_get_scaled_font		3211758	2					
ANR	3211778	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const gs_fapi_font_scale * font_scale , const char * xlatmap , gs_fapi_descendant_code dc"		3211758	3					
ANR	3211779	Parameter	gs_fapi_server * server	1255:29:41476:41498	3211758	0	True				
ANR	3211780	ParameterType	gs_fapi_server *		3211758	0					
ANR	3211781	Identifier	server		3211758	1					
ANR	3211782	Parameter	gs_fapi_font * ff	1255:54:41501:41517	3211758	1	True				
ANR	3211783	ParameterType	gs_fapi_font *		3211758	0					
ANR	3211784	Identifier	ff		3211758	1					
ANR	3211785	Parameter	const gs_fapi_font_scale * font_scale	1256:16:41536:41572	3211758	2	True				
ANR	3211786	ParameterType	const gs_fapi_font_scale *		3211758	0					
ANR	3211787	Identifier	font_scale		3211758	1					
ANR	3211788	Parameter	const char * xlatmap	1256:55:41575:41593	3211758	3	True				
ANR	3211789	ParameterType	const char *		3211758	0					
ANR	3211790	Identifier	xlatmap		3211758	1					
ANR	3211791	Parameter	gs_fapi_descendant_code dc	1257:16:41612:41637	3211758	4	True				
ANR	3211792	ParameterType	gs_fapi_descendant_code		3211758	0					
ANR	3211793	Identifier	dc		3211758	1					
ANR	3211794	CFGEntryNode	ENTRY		3211758		True				
ANR	3211795	CFGExitNode	EXIT		3211758		True				
ANR	3211796	Symbol	ff		3211758						
ANR	3211797	Symbol	gs_fapi_ufst_get_scaled_font_aux		3211758						
ANR	3211798	Symbol	server		3211758						
ANR	3211799	Symbol	xlatmap		3211758						
ANR	3211800	Symbol	font_scale		3211758						
ANR	3211801	Symbol	dc		3211758						
ANR	3211802	Function	gs_fapi_ufst_get_font_info	1262:0:41729:43582							
ANR	3211803	FunctionDef	"gs_fapi_ufst_get_font_info (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_font_info item , int index , void * data , int * data_len)"		3211802	0					
ANR	3211804	CompoundStatement		1266:0:41923:43582	3211802	0					
ANR	3211805	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1267:4:41929:41953	3211802	0	True				
ANR	3211806	IdentifierDecl	code = 0		3211802	0					
ANR	3211807	IdentifierDeclType	gs_fapi_retcode		3211802	0					
ANR	3211808	Identifier	code		3211802	1					
ANR	3211809	AssignmentExpression	code = 0		3211802	2		=			
ANR	3211810	Identifier	code		3211802	0					
ANR	3211811	PrimaryExpression	0		3211802	1					
ANR	3211812	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1268:4:41959:42032	3211802	1	True				
ANR	3211813	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		3211802	0					
ANR	3211814	IdentifierDeclType	ufst_common_font_data *		3211802	0					
ANR	3211815	Identifier	d		3211802	1					
ANR	3211816	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		3211802	2		=			
ANR	3211817	Identifier	d		3211802	0					
ANR	3211818	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		3211802	1					
ANR	3211819	CastTarget	ufst_common_font_data *		3211802	0					
ANR	3211820	PtrMemberAccess	ff -> server_font_data		3211802	1					
ANR	3211821	Identifier	ff		3211802	0					
ANR	3211822	Identifier	server_font_data		3211802	1					
ANR	3211823	IfStatement	if ( ! d || ! d -> ufstfontinfo )		3211802	2					
ANR	3211824	Condition	! d || ! d -> ufstfontinfo	1270:8:42043:42064	3211802	0	True				
ANR	3211825	OrExpression	! d || ! d -> ufstfontinfo		3211802	0		||			
ANR	3211826	UnaryOperationExpression	! d		3211802	0					
ANR	3211827	UnaryOperator	!		3211802	0					
ANR	3211828	Identifier	d		3211802	1					
ANR	3211829	UnaryOperationExpression	! d -> ufstfontinfo		3211802	1					
ANR	3211830	UnaryOperator	!		3211802	0					
ANR	3211831	PtrMemberAccess	d -> ufstfontinfo		3211802	1					
ANR	3211832	Identifier	d		3211802	0					
ANR	3211833	Identifier	ufstfontinfo		3211802	1					
ANR	3211834	ReturnStatement	return ( gs_error_invalidfont ) ;	1271:8:42075:42104	3211802	1	True				
ANR	3211835	Identifier	gs_error_invalidfont		3211802	0					
ANR	3211836	IfStatement	if ( code == 0 )		3211802	3					
ANR	3211837	Condition	code == 0	1273:8:42115:42123	3211802	0	True				
ANR	3211838	EqualityExpression	code == 0		3211802	0		==			
ANR	3211839	Identifier	code		3211802	0					
ANR	3211840	PrimaryExpression	0		3211802	1					
ANR	3211841	CompoundStatement		8:19:202:202	3211802	1					
ANR	3211842	SwitchStatement	switch ( item )		3211802	0					
ANR	3211843	Condition	item	1274:16:42144:42147	3211802	0	True				
ANR	3211844	Identifier	item		3211802	0					
ANR	3211845	CompoundStatement		9:22:226:226	3211802	1					
ANR	3211846	Label	case gs_fapi_font_info_name :	1275:12:42164:42191	3211802	0	True				
ANR	3211847	Identifier	gs_fapi_font_info_name		3211802	0					
ANR	3211848	CompoundStatement		14:20:418:441	3211802	1					
ANR	3211849	IdentifierDeclStatement	LPSB8 pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname ;	1277:20:42231:42320	3211802	0	True				
ANR	3211850	IdentifierDecl	pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		3211802	0					
ANR	3211851	IdentifierDeclType	LPSB8		3211802	0					
ANR	3211852	Identifier	pname		3211802	1					
ANR	3211853	AssignmentExpression	pname = ( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		3211802	2		=			
ANR	3211854	Identifier	pname		3211802	0					
ANR	3211855	AdditiveExpression	( ( LPSB8 ) d -> ufstfontinfo ) + d -> ufstfontinfo -> psname		3211802	1		+			
ANR	3211856	CastExpression	( LPSB8 ) d -> ufstfontinfo		3211802	0					
ANR	3211857	CastTarget	LPSB8		3211802	0					
ANR	3211858	PtrMemberAccess	d -> ufstfontinfo		3211802	1					
ANR	3211859	Identifier	d		3211802	0					
ANR	3211860	Identifier	ufstfontinfo		3211802	1					
ANR	3211861	PtrMemberAccess	d -> ufstfontinfo -> psname		3211802	1					
ANR	3211862	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211863	Identifier	d		3211802	0					
ANR	3211864	Identifier	ufstfontinfo		3211802	1					
ANR	3211865	Identifier	psname		3211802	1					
ANR	3211866	IdentifierDeclStatement	int len = strlen ( pname ) ;	1279:20:42342:42365	3211802	1	True				
ANR	3211867	IdentifierDecl	len = strlen ( pname )		3211802	0					
ANR	3211868	IdentifierDeclType	int		3211802	0					
ANR	3211869	Identifier	len		3211802	1					
ANR	3211870	AssignmentExpression	len = strlen ( pname )		3211802	2		=			
ANR	3211871	Identifier	len		3211802	0					
ANR	3211872	CallExpression	strlen ( pname )		3211802	1					
ANR	3211873	Callee	strlen		3211802	0					
ANR	3211874	Identifier	strlen		3211802	0					
ANR	3211875	ArgumentList	pname		3211802	1					
ANR	3211876	Argument	pname		3211802	0					
ANR	3211877	Identifier	pname		3211802	0					
ANR	3211878	IfStatement	if ( data && * data_len >= len + 1 )		3211802	2					
ANR	3211879	Condition	data && * data_len >= len + 1	1281:24:42392:42419	3211802	0	True				
ANR	3211880	AndExpression	data && * data_len >= len + 1		3211802	0		&&			
ANR	3211881	Identifier	data		3211802	0					
ANR	3211882	RelationalExpression	* data_len >= len + 1		3211802	1		>=			
ANR	3211883	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211884	UnaryOperator	*		3211802	0					
ANR	3211885	Identifier	data_len		3211802	1					
ANR	3211886	AdditiveExpression	len + 1		3211802	1		+			
ANR	3211887	Identifier	len		3211802	0					
ANR	3211888	PrimaryExpression	1		3211802	1					
ANR	3211889	CompoundStatement		16:54:498:498	3211802	1					
ANR	3211890	ExpressionStatement	"strcpy ( data , pname )"	1282:24:42448:42467	3211802	0	True				
ANR	3211891	CallExpression	"strcpy ( data , pname )"		3211802	0					
ANR	3211892	Callee	strcpy		3211802	0					
ANR	3211893	Identifier	strcpy		3211802	0					
ANR	3211894	ArgumentList	data		3211802	1					
ANR	3211895	Argument	data		3211802	0					
ANR	3211896	Identifier	data		3211802	0					
ANR	3211897	Argument	pname		3211802	1					
ANR	3211898	Identifier	pname		3211802	0					
ANR	3211899	ExpressionStatement	* data_len = len + 1	1284:20:42511:42530	3211802	3	True				
ANR	3211900	AssignmentExpression	* data_len = len + 1		3211802	0		=			
ANR	3211901	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211902	UnaryOperator	*		3211802	0					
ANR	3211903	Identifier	data_len		3211802	1					
ANR	3211904	AdditiveExpression	len + 1		3211802	1		+			
ANR	3211905	Identifier	len		3211802	0					
ANR	3211906	PrimaryExpression	1		3211802	1					
ANR	3211907	BreakStatement	break ;	1285:20:42552:42557	3211802	4	True				
ANR	3211908	Label	case gs_fapi_font_info_uid :	1288:12:42590:42616	3211802	2	True				
ANR	3211909	Identifier	gs_fapi_font_info_uid		3211802	0					
ANR	3211910	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber ) )		3211802	3					
ANR	3211911	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber )	1289:20:42638:42689	3211802	0	True				
ANR	3211912	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> pcltFontNumber )		3211802	0		>=			
ANR	3211913	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211914	UnaryOperator	*		3211802	0					
ANR	3211915	Identifier	data_len		3211802	1					
ANR	3211916	SizeofExpression	sizeof ( d -> ufstfontinfo -> pcltFontNumber )		3211802	1					
ANR	3211917	Sizeof	sizeof		3211802	0					
ANR	3211918	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		3211802	1					
ANR	3211919	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211920	Identifier	d		3211802	0					
ANR	3211921	Identifier	ufstfontinfo		3211802	1					
ANR	3211922	Identifier	pcltFontNumber		3211802	1					
ANR	3211923	CompoundStatement		24:74:768:768	3211802	1					
ANR	3211924	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> pcltFontNumber	1290:20:42714:42762	3211802	0	True				
ANR	3211925	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> pcltFontNumber		3211802	0		=			
ANR	3211926	UnaryOperationExpression	* ( ( int * ) data )		3211802	0					
ANR	3211927	UnaryOperator	*		3211802	0					
ANR	3211928	CastExpression	( int * ) data		3211802	1					
ANR	3211929	CastTarget	int *		3211802	0					
ANR	3211930	Identifier	data		3211802	1					
ANR	3211931	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		3211802	1					
ANR	3211932	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211933	Identifier	d		3211802	0					
ANR	3211934	Identifier	ufstfontinfo		3211802	1					
ANR	3211935	Identifier	pcltFontNumber		3211802	1					
ANR	3211936	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> pcltFontNumber )	1292:16:42798:42849	3211802	4	True				
ANR	3211937	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> pcltFontNumber )		3211802	0		=			
ANR	3211938	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211939	UnaryOperator	*		3211802	0					
ANR	3211940	Identifier	data_len		3211802	1					
ANR	3211941	SizeofExpression	sizeof ( d -> ufstfontinfo -> pcltFontNumber )		3211802	1					
ANR	3211942	Sizeof	sizeof		3211802	0					
ANR	3211943	PtrMemberAccess	d -> ufstfontinfo -> pcltFontNumber		3211802	1					
ANR	3211944	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211945	Identifier	d		3211802	0					
ANR	3211946	Identifier	ufstfontinfo		3211802	1					
ANR	3211947	Identifier	pcltFontNumber		3211802	1					
ANR	3211948	BreakStatement	break ;	1293:16:42867:42872	3211802	5	True				
ANR	3211949	Label	case gs_fapi_font_info_pitch :	1295:12:42887:42915	3211802	6	True				
ANR	3211950	Identifier	gs_fapi_font_info_pitch		3211802	0					
ANR	3211951	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> spaceBand ) )		3211802	7					
ANR	3211952	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> spaceBand )	1296:20:42937:42983	3211802	0	True				
ANR	3211953	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> spaceBand )		3211802	0		>=			
ANR	3211954	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211955	UnaryOperator	*		3211802	0					
ANR	3211956	Identifier	data_len		3211802	1					
ANR	3211957	SizeofExpression	sizeof ( d -> ufstfontinfo -> spaceBand )		3211802	1					
ANR	3211958	Sizeof	sizeof		3211802	0					
ANR	3211959	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		3211802	1					
ANR	3211960	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211961	Identifier	d		3211802	0					
ANR	3211962	Identifier	ufstfontinfo		3211802	1					
ANR	3211963	Identifier	spaceBand		3211802	1					
ANR	3211964	CompoundStatement		31:69:1062:1062	3211802	1					
ANR	3211965	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> spaceBand	1297:20:43008:43051	3211802	0	True				
ANR	3211966	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> spaceBand		3211802	0		=			
ANR	3211967	UnaryOperationExpression	* ( ( int * ) data )		3211802	0					
ANR	3211968	UnaryOperator	*		3211802	0					
ANR	3211969	CastExpression	( int * ) data		3211802	1					
ANR	3211970	CastTarget	int *		3211802	0					
ANR	3211971	Identifier	data		3211802	1					
ANR	3211972	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		3211802	1					
ANR	3211973	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211974	Identifier	d		3211802	0					
ANR	3211975	Identifier	ufstfontinfo		3211802	1					
ANR	3211976	Identifier	spaceBand		3211802	1					
ANR	3211977	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> spaceBand )	1299:16:43087:43133	3211802	8	True				
ANR	3211978	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> spaceBand )		3211802	0		=			
ANR	3211979	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211980	UnaryOperator	*		3211802	0					
ANR	3211981	Identifier	data_len		3211802	1					
ANR	3211982	SizeofExpression	sizeof ( d -> ufstfontinfo -> spaceBand )		3211802	1					
ANR	3211983	Sizeof	sizeof		3211802	0					
ANR	3211984	PtrMemberAccess	d -> ufstfontinfo -> spaceBand		3211802	1					
ANR	3211985	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3211986	Identifier	d		3211802	0					
ANR	3211987	Identifier	ufstfontinfo		3211802	1					
ANR	3211988	Identifier	spaceBand		3211802	1					
ANR	3211989	BreakStatement	break ;	1300:16:43151:43156	3211802	9	True				
ANR	3211990	Label	case gs_fapi_font_info_design_units :	1302:12:43171:43206	3211802	10	True				
ANR	3211991	Identifier	gs_fapi_font_info_design_units		3211802	0					
ANR	3211992	IfStatement	if ( * data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor ) )		3211802	11					
ANR	3211993	Condition	* data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor )	1303:20:43228:43276	3211802	0	True				
ANR	3211994	RelationalExpression	* data_len >= sizeof ( d -> ufstfontinfo -> scaleFactor )		3211802	0		>=			
ANR	3211995	UnaryOperationExpression	* data_len		3211802	0					
ANR	3211996	UnaryOperator	*		3211802	0					
ANR	3211997	Identifier	data_len		3211802	1					
ANR	3211998	SizeofExpression	sizeof ( d -> ufstfontinfo -> scaleFactor )		3211802	1					
ANR	3211999	Sizeof	sizeof		3211802	0					
ANR	3212000	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		3211802	1					
ANR	3212001	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3212002	Identifier	d		3211802	0					
ANR	3212003	Identifier	ufstfontinfo		3211802	1					
ANR	3212004	Identifier	scaleFactor		3211802	1					
ANR	3212005	CompoundStatement		38:71:1355:1355	3211802	1					
ANR	3212006	ExpressionStatement	* ( ( int * ) data ) = d -> ufstfontinfo -> scaleFactor	1304:20:43301:43346	3211802	0	True				
ANR	3212007	AssignmentExpression	* ( ( int * ) data ) = d -> ufstfontinfo -> scaleFactor		3211802	0		=			
ANR	3212008	UnaryOperationExpression	* ( ( int * ) data )		3211802	0					
ANR	3212009	UnaryOperator	*		3211802	0					
ANR	3212010	CastExpression	( int * ) data		3211802	1					
ANR	3212011	CastTarget	int *		3211802	0					
ANR	3212012	Identifier	data		3211802	1					
ANR	3212013	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		3211802	1					
ANR	3212014	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3212015	Identifier	d		3211802	0					
ANR	3212016	Identifier	ufstfontinfo		3211802	1					
ANR	3212017	Identifier	scaleFactor		3211802	1					
ANR	3212018	ExpressionStatement	* data_len = sizeof ( d -> ufstfontinfo -> scaleFactor )	1306:16:43382:43430	3211802	12	True				
ANR	3212019	AssignmentExpression	* data_len = sizeof ( d -> ufstfontinfo -> scaleFactor )		3211802	0		=			
ANR	3212020	UnaryOperationExpression	* data_len		3211802	0					
ANR	3212021	UnaryOperator	*		3211802	0					
ANR	3212022	Identifier	data_len		3211802	1					
ANR	3212023	SizeofExpression	sizeof ( d -> ufstfontinfo -> scaleFactor )		3211802	1					
ANR	3212024	Sizeof	sizeof		3211802	0					
ANR	3212025	PtrMemberAccess	d -> ufstfontinfo -> scaleFactor		3211802	1					
ANR	3212026	PtrMemberAccess	d -> ufstfontinfo		3211802	0					
ANR	3212027	Identifier	d		3211802	0					
ANR	3212028	Identifier	ufstfontinfo		3211802	1					
ANR	3212029	Identifier	scaleFactor		3211802	1					
ANR	3212030	BreakStatement	break ;	1307:16:43448:43453	3211802	13	True				
ANR	3212031	Label	default :	1309:12:43468:43475	3211802	14	True				
ANR	3212032	Identifier	default		3211802	0					
ANR	3212033	ExpressionStatement	code = gs_error_invalidaccess	1310:16:43493:43522	3211802	15	True				
ANR	3212034	AssignmentExpression	code = gs_error_invalidaccess		3211802	0		=			
ANR	3212035	Identifier	code		3211802	0					
ANR	3212036	Identifier	gs_error_invalidaccess		3211802	1					
ANR	3212037	BreakStatement	break ;	1311:16:43540:43545	3211802	16	True				
ANR	3212038	ReturnStatement	return ( code ) ;	1314:4:43567:43580	3211802	4	True				
ANR	3212039	Identifier	code		3211802	0					
ANR	3212040	ReturnType	static gs_fapi_retcode		3211802	1					
ANR	3212041	Identifier	gs_fapi_ufst_get_font_info		3211802	2					
ANR	3212042	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_font_info item , int index , void * data , int * data_len"		3211802	3					
ANR	3212043	Parameter	gs_fapi_server * server	1263:27:41779:41801	3211802	0	True				
ANR	3212044	ParameterType	gs_fapi_server *		3211802	0					
ANR	3212045	Identifier	server		3211802	1					
ANR	3212046	Parameter	gs_fapi_font * ff	1263:52:41804:41820	3211802	1	True				
ANR	3212047	ParameterType	gs_fapi_font *		3211802	0					
ANR	3212048	Identifier	ff		3211802	1					
ANR	3212049	Parameter	gs_fapi_font_info item	1264:19:41842:41863	3211802	2	True				
ANR	3212050	ParameterType	gs_fapi_font_info		3211802	0					
ANR	3212051	Identifier	item		3211802	1					
ANR	3212052	Parameter	int index	1264:43:41866:41874	3211802	3	True				
ANR	3212053	ParameterType	int		3211802	0					
ANR	3212054	Identifier	index		3211802	1					
ANR	3212055	Parameter	void * data	1264:54:41877:41886	3211802	4	True				
ANR	3212056	ParameterType	void *		3211802	0					
ANR	3212057	Identifier	data		3211802	1					
ANR	3212058	Parameter	int * data_len	1265:19:41908:41920	3211802	5	True				
ANR	3212059	ParameterType	int *		3211802	0					
ANR	3212060	Identifier	data_len		3211802	1					
ANR	3212061	CFGEntryNode	ENTRY		3211802		True				
ANR	3212062	CFGExitNode	EXIT		3211802		True				
ANR	3212063	Symbol	ff		3211802						
ANR	3212064	Symbol	server		3211802						
ANR	3212065	Symbol	code		3211802						
ANR	3212066	Symbol	data		3211802						
ANR	3212067	Symbol	d -> ufstfontinfo -> pcltFontNumber		3211802						
ANR	3212068	Symbol	strlen		3211802						
ANR	3212069	Symbol	len		3211802						
ANR	3212070	Symbol	* d -> ufstfontinfo		3211802						
ANR	3212071	Symbol	ff -> server_font_data		3211802						
ANR	3212072	Symbol	gs_error_invalidaccess		3211802						
ANR	3212073	Symbol	gs_error_invalidfont		3211802						
ANR	3212074	Symbol	d -> ufstfontinfo -> psname		3211802						
ANR	3212075	Symbol	item		3211802						
ANR	3212076	Symbol	* ( ( int * ) data )		3211802						
ANR	3212077	Symbol	d		3211802						
ANR	3212078	Symbol	* ff		3211802						
ANR	3212079	Symbol	d -> ufstfontinfo		3211802						
ANR	3212080	Symbol	pname		3211802						
ANR	3212081	Symbol	data_len		3211802						
ANR	3212082	Symbol	* * d		3211802						
ANR	3212083	Symbol	index		3211802						
ANR	3212084	Symbol	* d		3211802						
ANR	3212085	Symbol	* data_len		3211802						
ANR	3212086	Symbol	* data		3211802						
ANR	3212087	Symbol	d -> ufstfontinfo -> spaceBand		3211802						
ANR	3212088	Symbol	d -> ufstfontinfo -> scaleFactor		3211802						
ANR	3212089	Function	gs_fapi_ufst_get_decodingID	1317:0:43585:43904							
ANR	3212090	FunctionDef	"gs_fapi_ufst_get_decodingID (gs_fapi_server * server , gs_fapi_font * ff , const char * * decodingID_result)"		3212089	0					
ANR	3212091	CompoundStatement		1320:0:43727:43904	3212089	0					
ANR	3212092	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1321:4:43733:43770	3212089	0	True				
ANR	3212093	IdentifierDecl	* r = If_to_I ( server )		3212089	0					
ANR	3212094	IdentifierDeclType	fapi_ufst_server *		3212089	0					
ANR	3212095	Identifier	r		3212089	1					
ANR	3212096	AssignmentExpression	* r = If_to_I ( server )		3212089	2		=			
ANR	3212097	Identifier	r		3212089	0					
ANR	3212098	CallExpression	If_to_I ( server )		3212089	1					
ANR	3212099	Callee	If_to_I		3212089	0					
ANR	3212100	Identifier	If_to_I		3212089	0					
ANR	3212101	ArgumentList	server		3212089	1					
ANR	3212102	Argument	server		3212089	0					
ANR	3212103	Identifier	server		3212089	0					
ANR	3212104	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1 ;	1322:4:43776:43847	3212089	1	True				
ANR	3212105	IdentifierDecl	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3212089	0					
ANR	3212106	IdentifierDeclType	ufst_common_font_data *		3212089	0					
ANR	3212107	Identifier	d		3212089	1					
ANR	3212108	AssignmentExpression	* d = ( ufst_common_font_data * ) r -> fc . font_hdr - 1		3212089	2		=			
ANR	3212109	Identifier	d		3212089	0					
ANR	3212110	AdditiveExpression	( ufst_common_font_data * ) r -> fc . font_hdr - 1		3212089	1		-			
ANR	3212111	CastExpression	( ufst_common_font_data * ) r -> fc . font_hdr		3212089	0					
ANR	3212112	CastTarget	ufst_common_font_data *		3212089	0					
ANR	3212113	MemberAccess	r -> fc . font_hdr		3212089	1					
ANR	3212114	PtrMemberAccess	r -> fc		3212089	0					
ANR	3212115	Identifier	r		3212089	0					
ANR	3212116	Identifier	fc		3212089	1					
ANR	3212117	Identifier	font_hdr		3212089	1					
ANR	3212118	PrimaryExpression	1		3212089	1					
ANR	3212119	ExpressionStatement	* decodingID_result = d -> decodingID	1324:4:43854:43888	3212089	2	True				
ANR	3212120	AssignmentExpression	* decodingID_result = d -> decodingID		3212089	0		=			
ANR	3212121	UnaryOperationExpression	* decodingID_result		3212089	0					
ANR	3212122	UnaryOperator	*		3212089	0					
ANR	3212123	Identifier	decodingID_result		3212089	1					
ANR	3212124	PtrMemberAccess	d -> decodingID		3212089	1					
ANR	3212125	Identifier	d		3212089	0					
ANR	3212126	Identifier	decodingID		3212089	1					
ANR	3212127	ReturnStatement	return 0 ;	1325:4:43894:43902	3212089	3	True				
ANR	3212128	PrimaryExpression	0		3212089	0					
ANR	3212129	ReturnType	static gs_fapi_retcode		3212089	1					
ANR	3212130	Identifier	gs_fapi_ufst_get_decodingID		3212089	2					
ANR	3212131	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , const char * * decodingID_result"		3212089	3					
ANR	3212132	Parameter	gs_fapi_server * server	1318:28:43636:43658	3212089	0	True				
ANR	3212133	ParameterType	gs_fapi_server *		3212089	0					
ANR	3212134	Identifier	server		3212089	1					
ANR	3212135	Parameter	gs_fapi_font * ff	1318:53:43661:43677	3212089	1	True				
ANR	3212136	ParameterType	gs_fapi_font *		3212089	0					
ANR	3212137	Identifier	ff		3212089	1					
ANR	3212138	Parameter	const char * * decodingID_result	1319:15:43695:43724	3212089	2	True				
ANR	3212139	ParameterType	const char * *		3212089	0					
ANR	3212140	Identifier	decodingID_result		3212089	1					
ANR	3212141	CFGEntryNode	ENTRY		3212089		True				
ANR	3212142	CFGExitNode	EXIT		3212089		True				
ANR	3212143	Symbol	ff		3212089						
ANR	3212144	Symbol	server		3212089						
ANR	3212145	Symbol	If_to_I		3212089						
ANR	3212146	Symbol	r		3212089						
ANR	3212147	Symbol	d -> decodingID		3212089						
ANR	3212148	Symbol	d		3212089						
ANR	3212149	Symbol	r -> fc		3212089						
ANR	3212150	Symbol	* decodingID_result		3212089						
ANR	3212151	Symbol	r -> fc . font_hdr		3212089						
ANR	3212152	Symbol	* r		3212089						
ANR	3212153	Symbol	* d		3212089						
ANR	3212154	Symbol	decodingID_result		3212089						
ANR	3212155	Function	gs_fapi_ufst_get_font_bbox	1328:0:43907:44622							
ANR	3212156	FunctionDef	"gs_fapi_ufst_get_font_bbox (gs_fapi_server * server , gs_fapi_font * ff , int BBox [ 4 ] , int unitsPerEm [ 2 ])"		3212155	0					
ANR	3212157	CompoundStatement		1330:0:44033:44622	3212155	0					
ANR	3212158	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1331:4:44039:44076	3212155	0	True				
ANR	3212159	IdentifierDecl	* r = If_to_I ( server )		3212155	0					
ANR	3212160	IdentifierDeclType	fapi_ufst_server *		3212155	0					
ANR	3212161	Identifier	r		3212155	1					
ANR	3212162	AssignmentExpression	* r = If_to_I ( server )		3212155	2		=			
ANR	3212163	Identifier	r		3212155	0					
ANR	3212164	CallExpression	If_to_I ( server )		3212155	1					
ANR	3212165	Callee	If_to_I		3212155	0					
ANR	3212166	Identifier	If_to_I		3212155	0					
ANR	3212167	ArgumentList	server		3212155	1					
ANR	3212168	Argument	server		3212155	0					
ANR	3212169	Identifier	server		3212155	0					
ANR	3212170	IdentifierDeclStatement	SW16 VLCPower = 0 ;	1332:4:44082:44099	3212155	1	True				
ANR	3212171	IdentifierDecl	VLCPower = 0		3212155	0					
ANR	3212172	IdentifierDeclType	SW16		3212155	0					
ANR	3212173	Identifier	VLCPower		3212155	1					
ANR	3212174	AssignmentExpression	VLCPower = 0		3212155	2		=			
ANR	3212175	Identifier	VLCPower		3212155	0					
ANR	3212176	PrimaryExpression	0		3212155	1					
ANR	3212177	IdentifierDeclStatement	int code ;	1333:4:44105:44113	3212155	2	True				
ANR	3212178	IdentifierDecl	code		3212155	0					
ANR	3212179	IdentifierDeclType	int		3212155	0					
ANR	3212180	Identifier	code		3212155	1					
ANR	3212181	ExpressionStatement	FSA_FROM_SERVER	1335:4:44120:44135	3212155	3	True				
ANR	3212182	Identifier	FSA_FROM_SERVER		3212155	0					
ANR	3212183	Statement	if	1337:4:44142:44143	3212155	4	True				
ANR	3212184	Statement	(	1337:7:44145:44145	3212155	5	True				
ANR	3212185	Statement	(	1337:8:44146:44146	3212155	6	True				
ANR	3212186	Statement	code	1337:9:44147:44150	3212155	7	True				
ANR	3212187	Statement	=	1337:14:44152:44152	3212155	8	True				
ANR	3212188	Statement	CGIFbound_box	1337:16:44154:44166	3212155	9	True				
ANR	3212189	Statement	(	1337:29:44167:44167	3212155	10	True				
ANR	3212190	Statement	FSA	1337:30:44168:44170	3212155	11	True				
ANR	3212191	Statement	BBox	1337:34:44172:44175	3212155	12	True				
ANR	3212192	Statement	","	1337:38:44176:44176	3212155	13	True				
ANR	3212193	Statement	&	1337:40:44178:44178	3212155	14	True				
ANR	3212194	Statement	VLCPower	1337:41:44179:44186	3212155	15	True				
ANR	3212195	Statement	)	1337:49:44187:44187	3212155	16	True				
ANR	3212196	Statement	)	1337:50:44188:44188	3212155	17	True				
ANR	3212197	Statement	<	1337:52:44190:44190	3212155	18	True				
ANR	3212198	Statement	0	1337:54:44192:44192	3212155	19	True				
ANR	3212199	Statement	)	1337:55:44193:44193	3212155	20	True				
ANR	3212200	ReturnStatement	return code ;	1338:8:44203:44214	3212155	21	True				
ANR	3212201	Identifier	code		3212155	0					
ANR	3212202	ExpressionStatement	BBox [ 0 ] += 2	1343:4:44395:44407	3212155	22	True				
ANR	3212203	AssignmentExpression	BBox [ 0 ] += 2		3212155	0		+=			
ANR	3212204	ArrayIndexing	BBox [ 0 ]		3212155	0					
ANR	3212205	Identifier	BBox		3212155	0					
ANR	3212206	PrimaryExpression	0		3212155	1					
ANR	3212207	PrimaryExpression	2		3212155	1					
ANR	3212208	ExpressionStatement	BBox [ 1 ] += 2	1344:4:44413:44425	3212155	23	True				
ANR	3212209	AssignmentExpression	BBox [ 1 ] += 2		3212155	0		+=			
ANR	3212210	ArrayIndexing	BBox [ 1 ]		3212155	0					
ANR	3212211	Identifier	BBox		3212155	0					
ANR	3212212	PrimaryExpression	1		3212155	1					
ANR	3212213	PrimaryExpression	2		3212155	1					
ANR	3212214	ExpressionStatement	BBox [ 2 ] -= 2	1345:4:44431:44443	3212155	24	True				
ANR	3212215	AssignmentExpression	BBox [ 2 ] -= 2		3212155	0		-=			
ANR	3212216	ArrayIndexing	BBox [ 2 ]		3212155	0					
ANR	3212217	Identifier	BBox		3212155	0					
ANR	3212218	PrimaryExpression	2		3212155	1					
ANR	3212219	PrimaryExpression	2		3212155	1					
ANR	3212220	ExpressionStatement	BBox [ 3 ] -= 2	1346:4:44449:44461	3212155	25	True				
ANR	3212221	AssignmentExpression	BBox [ 3 ] -= 2		3212155	0		-=			
ANR	3212222	ArrayIndexing	BBox [ 3 ]		3212155	0					
ANR	3212223	Identifier	BBox		3212155	0					
ANR	3212224	PrimaryExpression	3		3212155	1					
ANR	3212225	PrimaryExpression	2		3212155	1					
ANR	3212226	ExpressionStatement	BBox [ 0 ] >>= VLCPower	1347:4:44467:44487	3212155	26	True				
ANR	3212227	AssignmentExpression	BBox [ 0 ] >>= VLCPower		3212155	0		>>=			
ANR	3212228	ArrayIndexing	BBox [ 0 ]		3212155	0					
ANR	3212229	Identifier	BBox		3212155	0					
ANR	3212230	PrimaryExpression	0		3212155	1					
ANR	3212231	Identifier	VLCPower		3212155	1					
ANR	3212232	ExpressionStatement	BBox [ 1 ] >>= VLCPower	1348:4:44493:44513	3212155	27	True				
ANR	3212233	AssignmentExpression	BBox [ 1 ] >>= VLCPower		3212155	0		>>=			
ANR	3212234	ArrayIndexing	BBox [ 1 ]		3212155	0					
ANR	3212235	Identifier	BBox		3212155	0					
ANR	3212236	PrimaryExpression	1		3212155	1					
ANR	3212237	Identifier	VLCPower		3212155	1					
ANR	3212238	ExpressionStatement	BBox [ 2 ] >>= VLCPower	1349:4:44519:44539	3212155	28	True				
ANR	3212239	AssignmentExpression	BBox [ 2 ] >>= VLCPower		3212155	0		>>=			
ANR	3212240	ArrayIndexing	BBox [ 2 ]		3212155	0					
ANR	3212241	Identifier	BBox		3212155	0					
ANR	3212242	PrimaryExpression	2		3212155	1					
ANR	3212243	Identifier	VLCPower		3212155	1					
ANR	3212244	ExpressionStatement	BBox [ 3 ] >>= VLCPower	1350:4:44545:44565	3212155	29	True				
ANR	3212245	AssignmentExpression	BBox [ 3 ] >>= VLCPower		3212155	0		>>=			
ANR	3212246	ArrayIndexing	BBox [ 3 ]		3212155	0					
ANR	3212247	Identifier	BBox		3212155	0					
ANR	3212248	PrimaryExpression	3		3212155	1					
ANR	3212249	Identifier	VLCPower		3212155	1					
ANR	3212250	ExpressionStatement	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = 1	1352:4:44572:44605	3212155	30	True				
ANR	3212251	AssignmentExpression	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = 1		3212155	0		=			
ANR	3212252	ArrayIndexing	unitsPerEm [ 0 ]		3212155	0					
ANR	3212253	Identifier	unitsPerEm		3212155	0					
ANR	3212254	PrimaryExpression	0		3212155	1					
ANR	3212255	AssignmentExpression	unitsPerEm [ 1 ] = 1		3212155	1		=			
ANR	3212256	ArrayIndexing	unitsPerEm [ 1 ]		3212155	0					
ANR	3212257	Identifier	unitsPerEm		3212155	0					
ANR	3212258	PrimaryExpression	1		3212155	1					
ANR	3212259	PrimaryExpression	1		3212155	1					
ANR	3212260	ReturnStatement	return 0 ;	1354:4:44612:44620	3212155	31	True				
ANR	3212261	PrimaryExpression	0		3212155	0					
ANR	3212262	ReturnType	static gs_fapi_retcode		3212155	1					
ANR	3212263	Identifier	gs_fapi_ufst_get_font_bbox		3212155	2					
ANR	3212264	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , int BBox [ 4 ] , int unitsPerEm [ 2 ]"		3212155	3					
ANR	3212265	Parameter	gs_fapi_server * server	1329:27:43957:43979	3212155	0	True				
ANR	3212266	ParameterType	gs_fapi_server *		3212155	0					
ANR	3212267	Identifier	server		3212155	1					
ANR	3212268	Parameter	gs_fapi_font * ff	1329:52:43982:43998	3212155	1	True				
ANR	3212269	ParameterType	gs_fapi_font *		3212155	0					
ANR	3212270	Identifier	ff		3212155	1					
ANR	3212271	Parameter	int BBox [ 4 ]	1329:71:44001:44011	3212155	2	True				
ANR	3212272	ParameterType	int [ 4 ]		3212155	0					
ANR	3212273	Identifier	BBox		3212155	1					
ANR	3212274	Parameter	int unitsPerEm [ 2 ]	1329:84:44014:44030	3212155	3	True				
ANR	3212275	ParameterType	int [ 2 ]		3212155	0					
ANR	3212276	Identifier	unitsPerEm		3212155	1					
ANR	3212277	CFGEntryNode	ENTRY		3212155		True				
ANR	3212278	CFGExitNode	EXIT		3212155		True				
ANR	3212279	Symbol	ff		3212155						
ANR	3212280	Symbol	server		3212155						
ANR	3212281	Symbol	If_to_I		3212155						
ANR	3212282	Symbol	r		3212155						
ANR	3212283	Symbol	* BBox		3212155						
ANR	3212284	Symbol	code		3212155						
ANR	3212285	Symbol	BBox		3212155						
ANR	3212286	Symbol	VLCPower		3212155						
ANR	3212287	Symbol	* unitsPerEm		3212155						
ANR	3212288	Symbol	unitsPerEm		3212155						
ANR	3212289	Function	gs_fapi_ufst_get_font_proportional_feature	1357:0:44625:45349							
ANR	3212290	FunctionDef	"gs_fapi_ufst_get_font_proportional_feature (gs_fapi_server * server , gs_fapi_font * ff , bool * bProportional)"		3212289	0					
ANR	3212291	CompoundStatement		1360:0:44787:45349	3212289	0					
ANR	3212292	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1361:4:44793:44830	3212289	0	True				
ANR	3212293	IdentifierDecl	* r = If_to_I ( server )		3212289	0					
ANR	3212294	IdentifierDeclType	fapi_ufst_server *		3212289	0					
ANR	3212295	Identifier	r		3212289	1					
ANR	3212296	AssignmentExpression	* r = If_to_I ( server )		3212289	2		=			
ANR	3212297	Identifier	r		3212289	0					
ANR	3212298	CallExpression	If_to_I ( server )		3212289	1					
ANR	3212299	Callee	If_to_I		3212289	0					
ANR	3212300	Identifier	If_to_I		3212289	0					
ANR	3212301	ArgumentList	server		3212289	1					
ANR	3212302	Argument	server		3212289	0					
ANR	3212303	Identifier	server		3212289	0					
ANR	3212304	ExpressionStatement	FSA_FROM_SERVER	1363:4:44837:44852	3212289	1	True				
ANR	3212305	Identifier	FSA_FROM_SERVER		3212289	0					
ANR	3212306	ExpressionStatement	* bProportional = FALSE	1365:4:44859:44881	3212289	2	True				
ANR	3212307	AssignmentExpression	* bProportional = FALSE		3212289	0		=			
ANR	3212308	UnaryOperationExpression	* bProportional		3212289	0					
ANR	3212309	UnaryOperator	*		3212289	0					
ANR	3212310	Identifier	bProportional		3212289	1					
ANR	3212311	Identifier	FALSE		3212289	1					
ANR	3212312	IfStatement	if ( ff -> font_file_path == NULL || ff -> is_type1 )		3212289	3					
ANR	3212313	Condition	ff -> font_file_path == NULL || ff -> is_type1	1366:8:44891:44932	3212289	0	True				
ANR	3212314	OrExpression	ff -> font_file_path == NULL || ff -> is_type1		3212289	0		||			
ANR	3212315	EqualityExpression	ff -> font_file_path == NULL		3212289	0		==			
ANR	3212316	PtrMemberAccess	ff -> font_file_path		3212289	0					
ANR	3212317	Identifier	ff		3212289	0					
ANR	3212318	Identifier	font_file_path		3212289	1					
ANR	3212319	Identifier	NULL		3212289	1					
ANR	3212320	PtrMemberAccess	ff -> is_type1		3212289	1					
ANR	3212321	Identifier	ff		3212289	0					
ANR	3212322	Identifier	is_type1		3212289	1					
ANR	3212323	ReturnStatement	return 0 ;	1367:8:44943:44951	3212289	1	True				
ANR	3212324	PrimaryExpression	0		3212289	0					
ANR	3212325	CompoundStatement		12:8:222:247	3212289	4					
ANR	3212326	IdentifierDeclStatement	UB8 buf [ 74 ] ;	1370:8:44989:45000	3212289	0	True				
ANR	3212327	IdentifierDecl	buf [ 74 ]		3212289	0					
ANR	3212328	IdentifierDeclType	UB8 [ 74 ]		3212289	0					
ANR	3212329	Identifier	buf		3212289	1					
ANR	3212330	PrimaryExpression	74		3212289	2					
ANR	3212331	IdentifierDeclStatement	UL32 length = sizeof ( buf ) ;	1371:8:45010:45035	3212289	1	True				
ANR	3212332	IdentifierDecl	length = sizeof ( buf )		3212289	0					
ANR	3212333	IdentifierDeclType	UL32		3212289	0					
ANR	3212334	Identifier	length		3212289	1					
ANR	3212335	AssignmentExpression	length = sizeof ( buf )		3212289	2		=			
ANR	3212336	Identifier	length		3212289	0					
ANR	3212337	SizeofExpression	sizeof ( buf )		3212289	1					
ANR	3212338	Sizeof	sizeof		3212289	0					
ANR	3212339	SizeofOperand	buf		3212289	1					
ANR	3212340	Statement	if	1373:8:45046:45047	3212289	2	True				
ANR	3212341	Statement	(	1373:11:45049:45049	3212289	3	True				
ANR	3212342	Statement	CGIFtt_query	1373:12:45050:45061	3212289	4	True				
ANR	3212343	Statement	(	1374:12:45075:45075	3212289	5	True				
ANR	3212344	Statement	FSA	1374:13:45076:45078	3212289	6	True				
ANR	3212345	Statement	(	1374:16:45079:45079	3212289	7	True				
ANR	3212346	Statement	UB8	1374:17:45080:45082	3212289	8	True				
ANR	3212347	Statement	*	1374:21:45084:45084	3212289	9	True				
ANR	3212348	Statement	)	1374:22:45085:45085	3212289	10	True				
ANR	3212349	Statement	ff	1374:24:45087:45088	3212289	11	True				
ANR	3212350	Statement	->	1374:26:45089:45090	3212289	12	True				
ANR	3212351	Statement	font_file_path	1374:28:45091:45104	3212289	13	True				
ANR	3212352	Statement	","	1374:42:45105:45105	3212289	14	True				
ANR	3212353	Statement	*	1374:44:45107:45107	3212289	15	True				
ANR	3212354	Statement	(	1374:45:45108:45108	3212289	16	True				
ANR	3212355	Statement	UL32	1374:46:45109:45112	3212289	17	True				
ANR	3212356	Statement	*	1374:51:45114:45114	3212289	18	True				
ANR	3212357	Statement	)	1374:52:45115:45115	3212289	19	True				
ANR	3212358	Statement	"""OS/2"""	1374:54:45117:45122	3212289	20	True				
ANR	3212359	Statement	","	1374:60:45123:45123	3212289	21	True				
ANR	3212360	Statement	(	1375:13:45138:45138	3212289	22	True				
ANR	3212361	Statement	UW16	1375:14:45139:45142	3212289	23	True				
ANR	3212362	Statement	)	1375:18:45143:45143	3212289	24	True				
ANR	3212363	Statement	ff	1375:20:45145:45146	3212289	25	True				
ANR	3212364	Statement	->	1375:22:45147:45148	3212289	26	True				
ANR	3212365	Statement	subfont	1375:24:45149:45155	3212289	27	True				
ANR	3212366	Statement	","	1375:31:45156:45156	3212289	28	True				
ANR	3212367	Statement	&	1375:33:45158:45158	3212289	29	True				
ANR	3212368	Statement	length	1375:34:45159:45164	3212289	30	True				
ANR	3212369	Statement	","	1375:40:45165:45165	3212289	31	True				
ANR	3212370	Statement	buf	1375:42:45167:45169	3212289	32	True				
ANR	3212371	Statement	)	1375:45:45170:45170	3212289	33	True				
ANR	3212372	Statement	!=	1375:47:45172:45173	3212289	34	True				
ANR	3212373	Statement	0	1375:50:45175:45175	3212289	35	True				
ANR	3212374	Statement	)	1375:51:45176:45176	3212289	36	True				
ANR	3212375	ReturnStatement	return 0 ;	1376:12:45190:45198	3212289	37	True				
ANR	3212376	PrimaryExpression	0		3212289	0					
ANR	3212377	ExpressionStatement	* bProportional = ( buf [ 35 ] == 9 )	1377:8:45289:45320	3212289	38	True				
ANR	3212378	AssignmentExpression	* bProportional = ( buf [ 35 ] == 9 )		3212289	0		=			
ANR	3212379	UnaryOperationExpression	* bProportional		3212289	0					
ANR	3212380	UnaryOperator	*		3212289	0					
ANR	3212381	Identifier	bProportional		3212289	1					
ANR	3212382	EqualityExpression	buf [ 35 ] == 9		3212289	1		==			
ANR	3212383	ArrayIndexing	buf [ 35 ]		3212289	0					
ANR	3212384	Identifier	buf		3212289	0					
ANR	3212385	PrimaryExpression	35		3212289	1					
ANR	3212386	PrimaryExpression	9		3212289	1					
ANR	3212387	ReturnStatement	return 0 ;	1380:4:45339:45347	3212289	5	True				
ANR	3212388	PrimaryExpression	0		3212289	0					
ANR	3212389	ReturnType	static gs_fapi_retcode		3212289	1					
ANR	3212390	Identifier	gs_fapi_ufst_get_font_proportional_feature		3212289	2					
ANR	3212391	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , bool * bProportional"		3212289	3					
ANR	3212392	Parameter	gs_fapi_server * server	1358:43:44691:44713	3212289	0	True				
ANR	3212393	ParameterType	gs_fapi_server *		3212289	0					
ANR	3212394	Identifier	server		3212289	1					
ANR	3212395	Parameter	gs_fapi_font * ff	1358:68:44716:44732	3212289	1	True				
ANR	3212396	ParameterType	gs_fapi_font *		3212289	0					
ANR	3212397	Identifier	ff		3212289	1					
ANR	3212398	Parameter	bool * bProportional	1359:30:44765:44784	3212289	2	True				
ANR	3212399	ParameterType	bool *		3212289	0					
ANR	3212400	Identifier	bProportional		3212289	1					
ANR	3212401	CFGEntryNode	ENTRY		3212289		True				
ANR	3212402	CFGExitNode	EXIT		3212289		True				
ANR	3212403	Symbol	ff		3212289						
ANR	3212404	Symbol	server		3212289						
ANR	3212405	Symbol	If_to_I		3212289						
ANR	3212406	Symbol	ff -> font_file_path		3212289						
ANR	3212407	Symbol	* buf		3212289						
ANR	3212408	Symbol	NULL		3212289						
ANR	3212409	Symbol	ff -> is_type1		3212289						
ANR	3212410	Symbol	bProportional		3212289						
ANR	3212411	Symbol	* ff		3212289						
ANR	3212412	Symbol	length		3212289						
ANR	3212413	Symbol	* bProportional		3212289						
ANR	3212414	Symbol	r		3212289						
ANR	3212415	Symbol	buf		3212289						
ANR	3212416	Symbol	FALSE		3212289						
ANR	3212417	Function	make_asciiz_char_name	1383:0:45352:45555							
ANR	3212418	FunctionDef	"make_asciiz_char_name (char * buf , int buf_length , gs_fapi_char_ref * c)"		3212417	0					
ANR	3212419	CompoundStatement		1385:0:45442:45555	3212417	0					
ANR	3212420	IdentifierDeclStatement	"int len = min ( buf_length - 1 , c -> char_name_length ) ;"	1386:4:45448:45498	3212417	0	True				
ANR	3212421	IdentifierDecl	"len = min ( buf_length - 1 , c -> char_name_length )"		3212417	0					
ANR	3212422	IdentifierDeclType	int		3212417	0					
ANR	3212423	Identifier	len		3212417	1					
ANR	3212424	AssignmentExpression	"len = min ( buf_length - 1 , c -> char_name_length )"		3212417	2		=			
ANR	3212425	Identifier	len		3212417	0					
ANR	3212426	CallExpression	"min ( buf_length - 1 , c -> char_name_length )"		3212417	1					
ANR	3212427	Callee	min		3212417	0					
ANR	3212428	Identifier	min		3212417	0					
ANR	3212429	ArgumentList	buf_length - 1		3212417	1					
ANR	3212430	Argument	buf_length - 1		3212417	0					
ANR	3212431	AdditiveExpression	buf_length - 1		3212417	0		-			
ANR	3212432	Identifier	buf_length		3212417	0					
ANR	3212433	PrimaryExpression	1		3212417	1					
ANR	3212434	Argument	c -> char_name_length		3212417	1					
ANR	3212435	PtrMemberAccess	c -> char_name_length		3212417	0					
ANR	3212436	Identifier	c		3212417	0					
ANR	3212437	Identifier	char_name_length		3212417	1					
ANR	3212438	ExpressionStatement	"memcpy ( buf , c -> char_name , len )"	1388:4:45505:45535	3212417	1	True				
ANR	3212439	CallExpression	"memcpy ( buf , c -> char_name , len )"		3212417	0					
ANR	3212440	Callee	memcpy		3212417	0					
ANR	3212441	Identifier	memcpy		3212417	0					
ANR	3212442	ArgumentList	buf		3212417	1					
ANR	3212443	Argument	buf		3212417	0					
ANR	3212444	Identifier	buf		3212417	0					
ANR	3212445	Argument	c -> char_name		3212417	1					
ANR	3212446	PtrMemberAccess	c -> char_name		3212417	0					
ANR	3212447	Identifier	c		3212417	0					
ANR	3212448	Identifier	char_name		3212417	1					
ANR	3212449	Argument	len		3212417	2					
ANR	3212450	Identifier	len		3212417	0					
ANR	3212451	ExpressionStatement	buf [ len ] = 0	1389:4:45541:45553	3212417	2	True				
ANR	3212452	AssignmentExpression	buf [ len ] = 0		3212417	0		=			
ANR	3212453	ArrayIndexing	buf [ len ]		3212417	0					
ANR	3212454	Identifier	buf		3212417	0					
ANR	3212455	Identifier	len		3212417	1					
ANR	3212456	PrimaryExpression	0		3212417	1					
ANR	3212457	ReturnType	static inline void		3212417	1					
ANR	3212458	Identifier	make_asciiz_char_name		3212417	2					
ANR	3212459	ParameterList	"char * buf , int buf_length , gs_fapi_char_ref * c"		3212417	3					
ANR	3212460	Parameter	char * buf	1384:22:45393:45401	3212417	0	True				
ANR	3212461	ParameterType	char *		3212417	0					
ANR	3212462	Identifier	buf		3212417	1					
ANR	3212463	Parameter	int buf_length	1384:33:45404:45417	3212417	1	True				
ANR	3212464	ParameterType	int		3212417	0					
ANR	3212465	Identifier	buf_length		3212417	1					
ANR	3212466	Parameter	gs_fapi_char_ref * c	1384:49:45420:45439	3212417	2	True				
ANR	3212467	ParameterType	gs_fapi_char_ref *		3212417	0					
ANR	3212468	Identifier	c		3212417	1					
ANR	3212469	CFGEntryNode	ENTRY		3212417		True				
ANR	3212470	CFGExitNode	EXIT		3212417		True				
ANR	3212471	Symbol	buf		3212417						
ANR	3212472	Symbol	* buf		3212417						
ANR	3212473	Symbol	c		3212417						
ANR	3212474	Symbol	c -> char_name_length		3212417						
ANR	3212475	Symbol	min		3212417						
ANR	3212476	Symbol	len		3212417						
ANR	3212477	Symbol	c -> char_name		3212417						
ANR	3212478	Symbol	buf_length		3212417						
ANR	3212479	Symbol	* c		3212417						
ANR	3212480	Symbol	* len		3212417						
ANR	3212481	Function	gs_fapi_ufst_can_retrieve_char_by_name	1394:0:45591:46027							
ANR	3212482	FunctionDef	"gs_fapi_ufst_can_retrieve_char_by_name (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result)"		3212481	0					
ANR	3212483	CompoundStatement		1397:0:45758:46027	3212481	0					
ANR	3212484	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1398:4:45764:45801	3212481	0	True				
ANR	3212485	IdentifierDecl	* r = If_to_I ( server )		3212481	0					
ANR	3212486	IdentifierDeclType	fapi_ufst_server *		3212481	0					
ANR	3212487	Identifier	r		3212481	1					
ANR	3212488	AssignmentExpression	* r = If_to_I ( server )		3212481	2		=			
ANR	3212489	Identifier	r		3212481	0					
ANR	3212490	CallExpression	If_to_I ( server )		3212481	1					
ANR	3212491	Callee	If_to_I		3212481	0					
ANR	3212492	Identifier	If_to_I		3212481	0					
ANR	3212493	ArgumentList	server		3212481	1					
ANR	3212494	Argument	server		3212481	0					
ANR	3212495	Identifier	server		3212481	0					
ANR	3212496	ExpressionStatement	FSA_FROM_SERVER	1400:4:45808:45823	3212481	1	True				
ANR	3212497	Identifier	FSA_FROM_SERVER		3212481	0					
ANR	3212498	ExpressionStatement	* result = 0	1402:4:45830:45841	3212481	2	True				
ANR	3212499	AssignmentExpression	* result = 0		3212481	0		=			
ANR	3212500	UnaryOperationExpression	* result		3212481	0					
ANR	3212501	UnaryOperator	*		3212481	0					
ANR	3212502	Identifier	result		3212481	1					
ANR	3212503	PrimaryExpression	0		3212481	1					
ANR	3212504	SwitchStatement	switch ( r -> fc . format & FC_FONTTYPE_MASK )		3212481	3					
ANR	3212505	Condition	r -> fc . format & FC_FONTTYPE_MASK	1404:12:45856:45886	3212481	0	True				
ANR	3212506	BitAndExpression	r -> fc . format & FC_FONTTYPE_MASK		3212481	0		&			
ANR	3212507	MemberAccess	r -> fc . format		3212481	0					
ANR	3212508	PtrMemberAccess	r -> fc		3212481	0					
ANR	3212509	Identifier	r		3212481	0					
ANR	3212510	Identifier	fc		3212481	1					
ANR	3212511	Identifier	format		3212481	1					
ANR	3212512	Identifier	FC_FONTTYPE_MASK		3212481	1					
ANR	3212513	CompoundStatement		8:45:130:130	3212481	1					
ANR	3212514	Label	case FC_PST1_TYPE :	1405:8:45899:45916	3212481	0	True				
ANR	3212515	Identifier	FC_PST1_TYPE		3212481	0					
ANR	3212516	ExpressionStatement	* result = 1	1406:12:45930:45941	3212481	1	True				
ANR	3212517	AssignmentExpression	* result = 1		3212481	0		=			
ANR	3212518	UnaryOperationExpression	* result		3212481	0					
ANR	3212519	UnaryOperator	*		3212481	0					
ANR	3212520	Identifier	result		3212481	1					
ANR	3212521	PrimaryExpression	1		3212481	1					
ANR	3212522	BreakStatement	break ;	1407:12:45955:45960	3212481	2	True				
ANR	3212523	Label	case FC_TT_TYPE :	1408:8:45970:45985	3212481	3	True				
ANR	3212524	Identifier	FC_TT_TYPE		3212481	0					
ANR	3212525	BreakStatement	break ;	1409:12:45999:46004	3212481	4	True				
ANR	3212526	ReturnStatement	return 0 ;	1412:4:46017:46025	3212481	4	True				
ANR	3212527	PrimaryExpression	0		3212481	0					
ANR	3212528	ReturnType	static gs_fapi_retcode		3212481	1					
ANR	3212529	Identifier	gs_fapi_ufst_can_retrieve_char_by_name		3212481	2					
ANR	3212530	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result"		3212481	3					
ANR	3212531	Parameter	gs_fapi_server * server	1395:39:45653:45675	3212481	0	True				
ANR	3212532	ParameterType	gs_fapi_server *		3212481	0					
ANR	3212533	Identifier	server		3212481	1					
ANR	3212534	Parameter	gs_fapi_font * ff	1395:64:45678:45694	3212481	1	True				
ANR	3212535	ParameterType	gs_fapi_font *		3212481	0					
ANR	3212536	Identifier	ff		3212481	1					
ANR	3212537	Parameter	gs_fapi_char_ref * c	1396:26:45723:45742	3212481	2	True				
ANR	3212538	ParameterType	gs_fapi_char_ref *		3212481	0					
ANR	3212539	Identifier	c		3212481	1					
ANR	3212540	Parameter	int * result	1396:48:45745:45755	3212481	3	True				
ANR	3212541	ParameterType	int *		3212481	0					
ANR	3212542	Identifier	result		3212481	1					
ANR	3212543	CFGEntryNode	ENTRY		3212481		True				
ANR	3212544	CFGExitNode	EXIT		3212481		True				
ANR	3212545	Symbol	ff		3212481						
ANR	3212546	Symbol	result		3212481						
ANR	3212547	Symbol	server		3212481						
ANR	3212548	Symbol	If_to_I		3212481						
ANR	3212549	Symbol	r		3212481						
ANR	3212550	Symbol	c		3212481						
ANR	3212551	Symbol	* result		3212481						
ANR	3212552	Symbol	r -> fc		3212481						
ANR	3212553	Symbol	FC_FONTTYPE_MASK		3212481						
ANR	3212554	Symbol	r -> fc . format		3212481						
ANR	3212555	Symbol	* r		3212481						
ANR	3212556	Function	gs_fapi_ufst_can_replace_metrics	1415:0:46030:46363							
ANR	3212557	FunctionDef	"gs_fapi_ufst_can_replace_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result)"		3212556	0					
ANR	3212558	CompoundStatement		1418:0:46185:46363	3212556	0					
ANR	3212559	ExpressionStatement	* result = ( ! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace )	1419:4:46191:46347	3212556	0	True				
ANR	3212560	AssignmentExpression	* result = ( ! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace )		3212556	0		=			
ANR	3212561	UnaryOperationExpression	* result		3212556	0					
ANR	3212562	UnaryOperator	*		3212556	0					
ANR	3212563	Identifier	result		3212556	1					
ANR	3212564	AndExpression	! ff -> is_type1 && ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		3212556	1		&&			
ANR	3212565	UnaryOperationExpression	! ff -> is_type1		3212556	0					
ANR	3212566	UnaryOperator	!		3212556	0					
ANR	3212567	PtrMemberAccess	ff -> is_type1		3212556	1					
ANR	3212568	Identifier	ff		3212556	0					
ANR	3212569	Identifier	is_type1		3212556	1					
ANR	3212570	AndExpression	ff -> font_file_path == NULL && c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		3212556	1		&&			
ANR	3212571	EqualityExpression	ff -> font_file_path == NULL		3212556	0		==			
ANR	3212572	PtrMemberAccess	ff -> font_file_path		3212556	0					
ANR	3212573	Identifier	ff		3212556	0					
ANR	3212574	Identifier	font_file_path		3212556	1					
ANR	3212575	Identifier	NULL		3212556	1					
ANR	3212576	AndExpression	c -> metrics_scale == 0 && c -> metrics_type == gs_fapi_metrics_replace		3212556	1		&&			
ANR	3212577	EqualityExpression	c -> metrics_scale == 0		3212556	0		==			
ANR	3212578	PtrMemberAccess	c -> metrics_scale		3212556	0					
ANR	3212579	Identifier	c		3212556	0					
ANR	3212580	Identifier	metrics_scale		3212556	1					
ANR	3212581	PrimaryExpression	0		3212556	1					
ANR	3212582	EqualityExpression	c -> metrics_type == gs_fapi_metrics_replace		3212556	1		==			
ANR	3212583	PtrMemberAccess	c -> metrics_type		3212556	0					
ANR	3212584	Identifier	c		3212556	0					
ANR	3212585	Identifier	metrics_type		3212556	1					
ANR	3212586	Identifier	gs_fapi_metrics_replace		3212556	1					
ANR	3212587	ReturnStatement	return 0 ;	1422:4:46353:46361	3212556	1	True				
ANR	3212588	PrimaryExpression	0		3212556	0					
ANR	3212589	ReturnType	static gs_fapi_retcode		3212556	1					
ANR	3212590	Identifier	gs_fapi_ufst_can_replace_metrics		3212556	2					
ANR	3212591	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , int * result"		3212556	3					
ANR	3212592	Parameter	gs_fapi_server * server	1416:33:46086:46108	3212556	0	True				
ANR	3212593	ParameterType	gs_fapi_server *		3212556	0					
ANR	3212594	Identifier	server		3212556	1					
ANR	3212595	Parameter	gs_fapi_font * ff	1416:58:46111:46127	3212556	1	True				
ANR	3212596	ParameterType	gs_fapi_font *		3212556	0					
ANR	3212597	Identifier	ff		3212556	1					
ANR	3212598	Parameter	gs_fapi_char_ref * c	1417:20:46150:46169	3212556	2	True				
ANR	3212599	ParameterType	gs_fapi_char_ref *		3212556	0					
ANR	3212600	Identifier	c		3212556	1					
ANR	3212601	Parameter	int * result	1417:42:46172:46182	3212556	3	True				
ANR	3212602	ParameterType	int *		3212556	0					
ANR	3212603	Identifier	result		3212556	1					
ANR	3212604	CFGEntryNode	ENTRY		3212556		True				
ANR	3212605	CFGExitNode	EXIT		3212556		True				
ANR	3212606	Symbol	ff		3212556						
ANR	3212607	Symbol	server		3212556						
ANR	3212608	Symbol	ff -> font_file_path		3212556						
ANR	3212609	Symbol	c		3212556						
ANR	3212610	Symbol	NULL		3212556						
ANR	3212611	Symbol	ff -> is_type1		3212556						
ANR	3212612	Symbol	* ff		3212556						
ANR	3212613	Symbol	* c		3212556						
ANR	3212614	Symbol	c -> metrics_type		3212556						
ANR	3212615	Symbol	result		3212556						
ANR	3212616	Symbol	c -> metrics_scale		3212556						
ANR	3212617	Symbol	* result		3212556						
ANR	3212618	Symbol	gs_fapi_metrics_replace		3212556						
ANR	3212619	Function	release_glyphs	1425:0:46366:46668							
ANR	3212620	FunctionDef	"release_glyphs (fapi_ufst_server * r , ufst_common_font_data * d)"		3212619	0					
ANR	3212621	CompoundStatement		1427:0:46442:46668	3212619	0					
ANR	3212622	IfStatement	if ( d )		3212619	0					
ANR	3212623	Condition	d	1428:8:46452:46452	3212619	0	True				
ANR	3212624	Identifier	d		3212619	0					
ANR	3212625	CompoundStatement		2:11:12:12	3212619	1					
ANR	3212626	WhileStatement	while ( d -> glyphs != 0 )		3212619	0					
ANR	3212627	Condition	d -> glyphs != 0	1429:15:46472:46485	3212619	0	True				
ANR	3212628	EqualityExpression	d -> glyphs != 0		3212619	0		!=			
ANR	3212629	PtrMemberAccess	d -> glyphs		3212619	0					
ANR	3212630	Identifier	d		3212619	0					
ANR	3212631	Identifier	glyphs		3212619	1					
ANR	3212632	PrimaryExpression	0		3212619	1					
ANR	3212633	CompoundStatement		4:12:59:95	3212619	1					
ANR	3212634	IdentifierDeclStatement	pcleo_glyph_list_elem * e = d -> glyphs ;	1430:12:46502:46538	3212619	0	True				
ANR	3212635	IdentifierDecl	* e = d -> glyphs		3212619	0					
ANR	3212636	IdentifierDeclType	pcleo_glyph_list_elem *		3212619	0					
ANR	3212637	Identifier	e		3212619	1					
ANR	3212638	AssignmentExpression	* e = d -> glyphs		3212619	2		=			
ANR	3212639	Identifier	e		3212619	0					
ANR	3212640	PtrMemberAccess	d -> glyphs		3212619	1					
ANR	3212641	Identifier	d		3212619	0					
ANR	3212642	Identifier	glyphs		3212619	1					
ANR	3212643	ExpressionStatement	d -> glyphs = e -> next	1432:12:46553:46572	3212619	1	True				
ANR	3212644	AssignmentExpression	d -> glyphs = e -> next		3212619	0		=			
ANR	3212645	PtrMemberAccess	d -> glyphs		3212619	0					
ANR	3212646	Identifier	d		3212619	0					
ANR	3212647	Identifier	glyphs		3212619	1					
ANR	3212648	PtrMemberAccess	e -> next		3212619	1					
ANR	3212649	Identifier	e		3212619	0					
ANR	3212650	Identifier	next		3212619	1					
ANR	3212651	ExpressionStatement	"gs_free ( r -> mem , e , 0 , 0 , ""PCLEO char"" )"	1433:12:46586:46624	3212619	2	True				
ANR	3212652	CallExpression	"gs_free ( r -> mem , e , 0 , 0 , ""PCLEO char"" )"		3212619	0					
ANR	3212653	Callee	gs_free		3212619	0					
ANR	3212654	Identifier	gs_free		3212619	0					
ANR	3212655	ArgumentList	r -> mem		3212619	1					
ANR	3212656	Argument	r -> mem		3212619	0					
ANR	3212657	PtrMemberAccess	r -> mem		3212619	0					
ANR	3212658	Identifier	r		3212619	0					
ANR	3212659	Identifier	mem		3212619	1					
ANR	3212660	Argument	e		3212619	1					
ANR	3212661	Identifier	e		3212619	0					
ANR	3212662	Argument	0		3212619	2					
ANR	3212663	PrimaryExpression	0		3212619	0					
ANR	3212664	Argument	0		3212619	3					
ANR	3212665	PrimaryExpression	0		3212619	0					
ANR	3212666	Argument	"""PCLEO char"""		3212619	4					
ANR	3212667	PrimaryExpression	"""PCLEO char"""		3212619	0					
ANR	3212668	ExpressionStatement	d -> glyphs = NULL	1435:8:46644:46660	3212619	1	True				
ANR	3212669	AssignmentExpression	d -> glyphs = NULL		3212619	0		=			
ANR	3212670	PtrMemberAccess	d -> glyphs		3212619	0					
ANR	3212671	Identifier	d		3212619	0					
ANR	3212672	Identifier	glyphs		3212619	1					
ANR	3212673	Identifier	NULL		3212619	1					
ANR	3212674	ReturnType	static void		3212619	1					
ANR	3212675	Identifier	release_glyphs		3212619	2					
ANR	3212676	ParameterList	"fapi_ufst_server * r , ufst_common_font_data * d"		3212619	3					
ANR	3212677	Parameter	fapi_ufst_server * r	1426:15:46393:46412	3212619	0	True				
ANR	3212678	ParameterType	fapi_ufst_server *		3212619	0					
ANR	3212679	Identifier	r		3212619	1					
ANR	3212680	Parameter	ufst_common_font_data * d	1426:37:46415:46439	3212619	1	True				
ANR	3212681	ParameterType	ufst_common_font_data *		3212619	0					
ANR	3212682	Identifier	d		3212619	1					
ANR	3212683	CFGEntryNode	ENTRY		3212619		True				
ANR	3212684	CFGExitNode	EXIT		3212619		True				
ANR	3212685	Symbol	r		3212619						
ANR	3212686	Symbol	d -> glyphs		3212619						
ANR	3212687	Symbol	NULL		3212619						
ANR	3212688	Symbol	d		3212619						
ANR	3212689	Symbol	e		3212619						
ANR	3212690	Symbol	r -> mem		3212619						
ANR	3212691	Symbol	e -> next		3212619						
ANR	3212692	Symbol	* r		3212619						
ANR	3212693	Symbol	* d		3212619						
ANR	3212694	Symbol	* e		3212619						
ANR	3212695	Function	gs_fapi_ufst_get_fontmatrix	1439:0:46671:48448							
ANR	3212696	FunctionDef	"gs_fapi_ufst_get_fontmatrix (gs_fapi_server * I , gs_matrix * m)"		3212695	0					
ANR	3212697	CompoundStatement		1441:0:46757:48448	3212695	0					
ANR	3212698	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( I ) ;	1442:4:46763:46795	3212695	0	True				
ANR	3212699	IdentifierDecl	* r = If_to_I ( I )		3212695	0					
ANR	3212700	IdentifierDeclType	fapi_ufst_server *		3212695	0					
ANR	3212701	Identifier	r		3212695	1					
ANR	3212702	AssignmentExpression	* r = If_to_I ( I )		3212695	2		=			
ANR	3212703	Identifier	r		3212695	0					
ANR	3212704	CallExpression	If_to_I ( I )		3212695	1					
ANR	3212705	Callee	If_to_I		3212695	0					
ANR	3212706	Identifier	If_to_I		3212695	0					
ANR	3212707	ArgumentList	I		3212695	1					
ANR	3212708	Argument	I		3212695	0					
ANR	3212709	Identifier	I		3212695	0					
ANR	3212710	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) I -> ff . server_font_data ;	1443:4:46801:46884	3212695	1	True				
ANR	3212711	IdentifierDecl	* d = ( ufst_common_font_data * ) I -> ff . server_font_data		3212695	0					
ANR	3212712	IdentifierDeclType	ufst_common_font_data *		3212695	0					
ANR	3212713	Identifier	d		3212695	1					
ANR	3212714	AssignmentExpression	* d = ( ufst_common_font_data * ) I -> ff . server_font_data		3212695	2		=			
ANR	3212715	Identifier	d		3212695	0					
ANR	3212716	CastExpression	( ufst_common_font_data * ) I -> ff . server_font_data		3212695	1					
ANR	3212717	CastTarget	ufst_common_font_data *		3212695	0					
ANR	3212718	MemberAccess	I -> ff . server_font_data		3212695	1					
ANR	3212719	PtrMemberAccess	I -> ff		3212695	0					
ANR	3212720	Identifier	I		3212695	0					
ANR	3212721	Identifier	ff		3212695	1					
ANR	3212722	Identifier	server_font_data		3212695	1					
ANR	3212723	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	1445:4:46890:46914	3212695	2	True				
ANR	3212724	IdentifierDecl	code = 0		3212695	0					
ANR	3212725	IdentifierDeclType	gs_fapi_retcode		3212695	0					
ANR	3212726	Identifier	code		3212695	1					
ANR	3212727	AssignmentExpression	code = 0		3212695	2		=			
ANR	3212728	Identifier	code		3212695	0					
ANR	3212729	PrimaryExpression	0		3212695	1					
ANR	3212730	IdentifierDeclStatement	bool is_FCO_PSfont = false ;	1446:4:46920:46946	3212695	3	True				
ANR	3212731	IdentifierDecl	is_FCO_PSfont = false		3212695	0					
ANR	3212732	IdentifierDeclType	bool		3212695	0					
ANR	3212733	Identifier	is_FCO_PSfont		3212695	1					
ANR	3212734	AssignmentExpression	is_FCO_PSfont = false		3212695	2		=			
ANR	3212735	Identifier	false		3212695	0					
ANR	3212736	Identifier	false		3212695	1					
ANR	3212737	IfStatement	if ( I -> ff . is_type1 && I -> ff . font_file_path )		3212695	4					
ANR	3212738	Condition	I -> ff . is_type1 && I -> ff . font_file_path	1448:8:46957:46994	3212695	0	True				
ANR	3212739	AndExpression	I -> ff . is_type1 && I -> ff . font_file_path		3212695	0		&&			
ANR	3212740	MemberAccess	I -> ff . is_type1		3212695	0					
ANR	3212741	PtrMemberAccess	I -> ff		3212695	0					
ANR	3212742	Identifier	I		3212695	0					
ANR	3212743	Identifier	ff		3212695	1					
ANR	3212744	Identifier	is_type1		3212695	1					
ANR	3212745	MemberAccess	I -> ff . font_file_path		3212695	1					
ANR	3212746	PtrMemberAccess	I -> ff		3212695	0					
ANR	3212747	Identifier	I		3212695	0					
ANR	3212748	Identifier	ff		3212695	1					
ANR	3212749	Identifier	font_file_path		3212695	1					
ANR	3212750	CompoundStatement		8:48:239:239	3212695	1					
ANR	3212751	IfStatement	if ( d == 0 )		3212695	0					
ANR	3212752	Condition	d == 0	1449:12:47011:47016	3212695	0	True				
ANR	3212753	EqualityExpression	d == 0		3212695	0		==			
ANR	3212754	Identifier	d		3212695	0					
ANR	3212755	PrimaryExpression	0		3212695	1					
ANR	3212756	CompoundStatement		9:20:261:261	3212695	1					
ANR	3212757	IfStatement	"if ( ( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0 )"		3212695	0					
ANR	3212758	Condition	"( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0"	1450:16:47037:47162	3212695	0	True				
ANR	3212759	EqualityExpression	"( code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d ) ) != 0"		3212695	0		!=			
ANR	3212760	AssignmentExpression	"code = ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d )"		3212695	0		=			
ANR	3212761	Identifier	code		3212695	0					
ANR	3212762	CallExpression	"ufst_make_font_data ( r , I -> ff . font_file_path , & ( I -> ff ) , & d )"		3212695	1					
ANR	3212763	Callee	ufst_make_font_data		3212695	0					
ANR	3212764	Identifier	ufst_make_font_data		3212695	0					
ANR	3212765	ArgumentList	r		3212695	1					
ANR	3212766	Argument	r		3212695	0					
ANR	3212767	Identifier	r		3212695	0					
ANR	3212768	Argument	I -> ff . font_file_path		3212695	1					
ANR	3212769	MemberAccess	I -> ff . font_file_path		3212695	0					
ANR	3212770	PtrMemberAccess	I -> ff		3212695	0					
ANR	3212771	Identifier	I		3212695	0					
ANR	3212772	Identifier	ff		3212695	1					
ANR	3212773	Identifier	font_file_path		3212695	1					
ANR	3212774	Argument	& ( I -> ff )		3212695	2					
ANR	3212775	UnaryOperationExpression	& ( I -> ff )		3212695	0					
ANR	3212776	UnaryOperator	&		3212695	0					
ANR	3212777	PtrMemberAccess	I -> ff		3212695	1					
ANR	3212778	Identifier	I		3212695	0					
ANR	3212779	Identifier	ff		3212695	1					
ANR	3212780	Argument	& d		3212695	3					
ANR	3212781	UnaryOperationExpression	& d		3212695	0					
ANR	3212782	UnaryOperator	&		3212695	0					
ANR	3212783	Identifier	d		3212695	1					
ANR	3212784	PrimaryExpression	0		3212695	1					
ANR	3212785	ReturnStatement	return ( code ) ;	1453:16:47181:47194	3212695	1	True				
ANR	3212786	Identifier	code		3212695	0					
ANR	3212787	ExpressionStatement	I -> ff . server_font_data = d	1454:12:47208:47234	3212695	1	True				
ANR	3212788	AssignmentExpression	I -> ff . server_font_data = d		3212695	0		=			
ANR	3212789	MemberAccess	I -> ff . server_font_data		3212695	0					
ANR	3212790	PtrMemberAccess	I -> ff		3212695	0					
ANR	3212791	Identifier	I		3212695	0					
ANR	3212792	Identifier	ff		3212695	1					
ANR	3212793	Identifier	server_font_data		3212695	1					
ANR	3212794	Identifier	d		3212695	1					
ANR	3212795	ExpressionStatement	"prepare_typeface ( r , d )"	1455:12:47248:47270	3212695	2	True				
ANR	3212796	CallExpression	"prepare_typeface ( r , d )"		3212695	0					
ANR	3212797	Callee	prepare_typeface		3212695	0					
ANR	3212798	Identifier	prepare_typeface		3212695	0					
ANR	3212799	ArgumentList	r		3212695	1					
ANR	3212800	Argument	r		3212695	0					
ANR	3212801	Identifier	r		3212695	0					
ANR	3212802	Argument	d		3212695	1					
ANR	3212803	Identifier	d		3212695	0					
ANR	3212804	IfStatement	if ( d )		3212695	1					
ANR	3212805	Condition	d	1457:12:47294:47294	3212695	0	True				
ANR	3212806	Identifier	d		3212695	0					
ANR	3212807	CompoundStatement		17:15:539:539	3212695	1					
ANR	3212808	ExpressionStatement	is_FCO_PSfont = ( d -> font_type & FC_FCO_TYPE ) > 0	1458:12:47311:47359	3212695	0	True				
ANR	3212809	AssignmentExpression	is_FCO_PSfont = ( d -> font_type & FC_FCO_TYPE ) > 0		3212695	0		=			
ANR	3212810	Identifier	is_FCO_PSfont		3212695	0					
ANR	3212811	RelationalExpression	( d -> font_type & FC_FCO_TYPE ) > 0		3212695	1		>			
ANR	3212812	BitAndExpression	d -> font_type & FC_FCO_TYPE		3212695	0		&			
ANR	3212813	PtrMemberAccess	d -> font_type		3212695	0					
ANR	3212814	Identifier	d		3212695	0					
ANR	3212815	Identifier	font_type		3212695	1					
ANR	3212816	Identifier	FC_FCO_TYPE		3212695	1					
ANR	3212817	PrimaryExpression	0		3212695	1					
ANR	3212818	IfStatement	if ( is_FCO_PSfont )		3212695	5					
ANR	3212819	Condition	is_FCO_PSfont	1470:8:47831:47843	3212695	0	True				
ANR	3212820	Identifier	is_FCO_PSfont		3212695	0					
ANR	3212821	CompoundStatement		30:23:1088:1088	3212695	1					
ANR	3212822	ExpressionStatement	m -> xx = 0.001	1471:8:47856:47869	3212695	0	True				
ANR	3212823	AssignmentExpression	m -> xx = 0.001		3212695	0		=			
ANR	3212824	PtrMemberAccess	m -> xx		3212695	0					
ANR	3212825	Identifier	m		3212695	0					
ANR	3212826	Identifier	xx		3212695	1					
ANR	3212827	PrimaryExpression	0.001		3212695	1					
ANR	3212828	ExpressionStatement	m -> xy = 0.0	1472:8:47879:47890	3212695	1	True				
ANR	3212829	AssignmentExpression	m -> xy = 0.0		3212695	0		=			
ANR	3212830	PtrMemberAccess	m -> xy		3212695	0					
ANR	3212831	Identifier	m		3212695	0					
ANR	3212832	Identifier	xy		3212695	1					
ANR	3212833	PrimaryExpression	0.0		3212695	1					
ANR	3212834	ExpressionStatement	m -> yx = 0.0	1473:8:47900:47911	3212695	2	True				
ANR	3212835	AssignmentExpression	m -> yx = 0.0		3212695	0		=			
ANR	3212836	PtrMemberAccess	m -> yx		3212695	0					
ANR	3212837	Identifier	m		3212695	0					
ANR	3212838	Identifier	yx		3212695	1					
ANR	3212839	PrimaryExpression	0.0		3212695	1					
ANR	3212840	ExpressionStatement	m -> yy = 0.001	1474:8:47921:47934	3212695	3	True				
ANR	3212841	AssignmentExpression	m -> yy = 0.001		3212695	0		=			
ANR	3212842	PtrMemberAccess	m -> yy		3212695	0					
ANR	3212843	Identifier	m		3212695	0					
ANR	3212844	Identifier	yy		3212695	1					
ANR	3212845	PrimaryExpression	0.001		3212695	1					
ANR	3212846	ExpressionStatement	m -> tx = 0.0	1475:8:47944:47955	3212695	4	True				
ANR	3212847	AssignmentExpression	m -> tx = 0.0		3212695	0		=			
ANR	3212848	PtrMemberAccess	m -> tx		3212695	0					
ANR	3212849	Identifier	m		3212695	0					
ANR	3212850	Identifier	tx		3212695	1					
ANR	3212851	PrimaryExpression	0.0		3212695	1					
ANR	3212852	ExpressionStatement	m -> ty = 0.0	1476:8:47965:47976	3212695	5	True				
ANR	3212853	AssignmentExpression	m -> ty = 0.0		3212695	0		=			
ANR	3212854	PtrMemberAccess	m -> ty		3212695	0					
ANR	3212855	Identifier	m		3212695	0					
ANR	3212856	Identifier	ty		3212695	1					
ANR	3212857	PrimaryExpression	0.0		3212695	1					
ANR	3212858	ElseStatement	else		3212695	0					
ANR	3212859	CompoundStatement		38:9:1235:1235	3212695	0					
ANR	3212860	ExpressionStatement	m -> xx = 1.0	1479:8:48003:48014	3212695	0	True				
ANR	3212861	AssignmentExpression	m -> xx = 1.0		3212695	0		=			
ANR	3212862	PtrMemberAccess	m -> xx		3212695	0					
ANR	3212863	Identifier	m		3212695	0					
ANR	3212864	Identifier	xx		3212695	1					
ANR	3212865	PrimaryExpression	1.0		3212695	1					
ANR	3212866	ExpressionStatement	m -> xy = 0.0	1480:8:48024:48035	3212695	1	True				
ANR	3212867	AssignmentExpression	m -> xy = 0.0		3212695	0		=			
ANR	3212868	PtrMemberAccess	m -> xy		3212695	0					
ANR	3212869	Identifier	m		3212695	0					
ANR	3212870	Identifier	xy		3212695	1					
ANR	3212871	PrimaryExpression	0.0		3212695	1					
ANR	3212872	ExpressionStatement	m -> yx = 0.0	1481:8:48045:48056	3212695	2	True				
ANR	3212873	AssignmentExpression	m -> yx = 0.0		3212695	0		=			
ANR	3212874	PtrMemberAccess	m -> yx		3212695	0					
ANR	3212875	Identifier	m		3212695	0					
ANR	3212876	Identifier	yx		3212695	1					
ANR	3212877	PrimaryExpression	0.0		3212695	1					
ANR	3212878	ExpressionStatement	m -> yy = 1.0	1482:8:48066:48077	3212695	3	True				
ANR	3212879	AssignmentExpression	m -> yy = 1.0		3212695	0		=			
ANR	3212880	PtrMemberAccess	m -> yy		3212695	0					
ANR	3212881	Identifier	m		3212695	0					
ANR	3212882	Identifier	yy		3212695	1					
ANR	3212883	PrimaryExpression	1.0		3212695	1					
ANR	3212884	ExpressionStatement	m -> tx = 0.0	1483:8:48087:48098	3212695	4	True				
ANR	3212885	AssignmentExpression	m -> tx = 0.0		3212695	0		=			
ANR	3212886	PtrMemberAccess	m -> tx		3212695	0					
ANR	3212887	Identifier	m		3212695	0					
ANR	3212888	Identifier	tx		3212695	1					
ANR	3212889	PrimaryExpression	0.0		3212695	1					
ANR	3212890	ExpressionStatement	m -> ty = 0.0	1484:8:48108:48119	3212695	5	True				
ANR	3212891	AssignmentExpression	m -> ty = 0.0		3212695	0		=			
ANR	3212892	PtrMemberAccess	m -> ty		3212695	0					
ANR	3212893	Identifier	m		3212695	0					
ANR	3212894	Identifier	ty		3212695	1					
ANR	3212895	PrimaryExpression	0.0		3212695	1					
ANR	3212896	IdentifierDeclStatement	gs_matrix * base_font_matrix = & I -> initial_FontMatrix ;	1488:4:48138:48190	3212695	6	True				
ANR	3212897	IdentifierDecl	* base_font_matrix = & I -> initial_FontMatrix		3212695	0					
ANR	3212898	IdentifierDeclType	gs_matrix *		3212695	0					
ANR	3212899	Identifier	base_font_matrix		3212695	1					
ANR	3212900	AssignmentExpression	* base_font_matrix = & I -> initial_FontMatrix		3212695	2		=			
ANR	3212901	Identifier	base_font_matrix		3212695	0					
ANR	3212902	UnaryOperationExpression	& I -> initial_FontMatrix		3212695	1					
ANR	3212903	UnaryOperator	&		3212695	0					
ANR	3212904	PtrMemberAccess	I -> initial_FontMatrix		3212695	1					
ANR	3212905	Identifier	I		3212695	0					
ANR	3212906	Identifier	initial_FontMatrix		3212695	1					
ANR	3212907	ExpressionStatement	m -> xx = I -> initial_FontMatrix . xx	1490:4:48197:48229	3212695	7	True				
ANR	3212908	AssignmentExpression	m -> xx = I -> initial_FontMatrix . xx		3212695	0		=			
ANR	3212909	PtrMemberAccess	m -> xx		3212695	0					
ANR	3212910	Identifier	m		3212695	0					
ANR	3212911	Identifier	xx		3212695	1					
ANR	3212912	MemberAccess	I -> initial_FontMatrix . xx		3212695	1					
ANR	3212913	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212914	Identifier	I		3212695	0					
ANR	3212915	Identifier	initial_FontMatrix		3212695	1					
ANR	3212916	Identifier	xx		3212695	1					
ANR	3212917	ExpressionStatement	m -> xy = I -> initial_FontMatrix . xy	1491:4:48235:48267	3212695	8	True				
ANR	3212918	AssignmentExpression	m -> xy = I -> initial_FontMatrix . xy		3212695	0		=			
ANR	3212919	PtrMemberAccess	m -> xy		3212695	0					
ANR	3212920	Identifier	m		3212695	0					
ANR	3212921	Identifier	xy		3212695	1					
ANR	3212922	MemberAccess	I -> initial_FontMatrix . xy		3212695	1					
ANR	3212923	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212924	Identifier	I		3212695	0					
ANR	3212925	Identifier	initial_FontMatrix		3212695	1					
ANR	3212926	Identifier	xy		3212695	1					
ANR	3212927	ExpressionStatement	m -> yx = I -> initial_FontMatrix . yx	1492:4:48273:48305	3212695	9	True				
ANR	3212928	AssignmentExpression	m -> yx = I -> initial_FontMatrix . yx		3212695	0		=			
ANR	3212929	PtrMemberAccess	m -> yx		3212695	0					
ANR	3212930	Identifier	m		3212695	0					
ANR	3212931	Identifier	yx		3212695	1					
ANR	3212932	MemberAccess	I -> initial_FontMatrix . yx		3212695	1					
ANR	3212933	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212934	Identifier	I		3212695	0					
ANR	3212935	Identifier	initial_FontMatrix		3212695	1					
ANR	3212936	Identifier	yx		3212695	1					
ANR	3212937	ExpressionStatement	m -> yy = I -> initial_FontMatrix . yy	1493:4:48311:48343	3212695	10	True				
ANR	3212938	AssignmentExpression	m -> yy = I -> initial_FontMatrix . yy		3212695	0		=			
ANR	3212939	PtrMemberAccess	m -> yy		3212695	0					
ANR	3212940	Identifier	m		3212695	0					
ANR	3212941	Identifier	yy		3212695	1					
ANR	3212942	MemberAccess	I -> initial_FontMatrix . yy		3212695	1					
ANR	3212943	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212944	Identifier	I		3212695	0					
ANR	3212945	Identifier	initial_FontMatrix		3212695	1					
ANR	3212946	Identifier	yy		3212695	1					
ANR	3212947	ExpressionStatement	m -> tx = I -> initial_FontMatrix . tx	1494:4:48349:48381	3212695	11	True				
ANR	3212948	AssignmentExpression	m -> tx = I -> initial_FontMatrix . tx		3212695	0		=			
ANR	3212949	PtrMemberAccess	m -> tx		3212695	0					
ANR	3212950	Identifier	m		3212695	0					
ANR	3212951	Identifier	tx		3212695	1					
ANR	3212952	MemberAccess	I -> initial_FontMatrix . tx		3212695	1					
ANR	3212953	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212954	Identifier	I		3212695	0					
ANR	3212955	Identifier	initial_FontMatrix		3212695	1					
ANR	3212956	Identifier	tx		3212695	1					
ANR	3212957	ExpressionStatement	m -> ty = I -> initial_FontMatrix . ty	1495:4:48387:48419	3212695	12	True				
ANR	3212958	AssignmentExpression	m -> ty = I -> initial_FontMatrix . ty		3212695	0		=			
ANR	3212959	PtrMemberAccess	m -> ty		3212695	0					
ANR	3212960	Identifier	m		3212695	0					
ANR	3212961	Identifier	ty		3212695	1					
ANR	3212962	MemberAccess	I -> initial_FontMatrix . ty		3212695	1					
ANR	3212963	PtrMemberAccess	I -> initial_FontMatrix		3212695	0					
ANR	3212964	Identifier	I		3212695	0					
ANR	3212965	Identifier	initial_FontMatrix		3212695	1					
ANR	3212966	Identifier	ty		3212695	1					
ANR	3212967	ReturnStatement	return ( code ) ;	1497:4:48432:48445	3212695	13	True				
ANR	3212968	Identifier	code		3212695	0					
ANR	3212969	ReturnType	static gs_fapi_retcode		3212695	1					
ANR	3212970	Identifier	gs_fapi_ufst_get_fontmatrix		3212695	2					
ANR	3212971	ParameterList	"gs_fapi_server * I , gs_matrix * m"		3212695	3					
ANR	3212972	Parameter	gs_fapi_server * I	1440:28:46722:46739	3212695	0	True				
ANR	3212973	ParameterType	gs_fapi_server *		3212695	0					
ANR	3212974	Identifier	I		3212695	1					
ANR	3212975	Parameter	gs_matrix * m	1440:48:46742:46754	3212695	1	True				
ANR	3212976	ParameterType	gs_matrix *		3212695	0					
ANR	3212977	Identifier	m		3212695	1					
ANR	3212978	CFGEntryNode	ENTRY		3212695		True				
ANR	3212979	CFGExitNode	EXIT		3212695		True				
ANR	3212980	Symbol	I -> initial_FontMatrix . xy		3212695						
ANR	3212981	Symbol	FC_FCO_TYPE		3212695						
ANR	3212982	Symbol	m -> yx		3212695						
ANR	3212983	Symbol	code		3212695						
ANR	3212984	Symbol	I -> initial_FontMatrix . tx		3212695						
ANR	3212985	Symbol	I -> initial_FontMatrix . ty		3212695						
ANR	3212986	Symbol	m -> yy		3212695						
ANR	3212987	Symbol	I		3212695						
ANR	3212988	Symbol	& I -> initial_FontMatrix		3212695						
ANR	3212989	Symbol	I -> ff . font_file_path		3212695						
ANR	3212990	Symbol	* I		3212695						
ANR	3212991	Symbol	I -> ff . is_type1		3212695						
ANR	3212992	Symbol	& I -> ff		3212695						
ANR	3212993	Symbol	m -> ty		3212695						
ANR	3212994	Symbol	m -> tx		3212695						
ANR	3212995	Symbol	base_font_matrix		3212695						
ANR	3212996	Symbol	I -> initial_FontMatrix . xx		3212695						
ANR	3212997	Symbol	I -> ff		3212695						
ANR	3212998	Symbol	If_to_I		3212695						
ANR	3212999	Symbol	d		3212695						
ANR	3213000	Symbol	ufst_make_font_data		3212695						
ANR	3213001	Symbol	m -> xy		3212695						
ANR	3213002	Symbol	m -> xx		3212695						
ANR	3213003	Symbol	I -> initial_FontMatrix		3212695						
ANR	3213004	Symbol	false		3212695						
ANR	3213005	Symbol	& d		3212695						
ANR	3213006	Symbol	m		3212695						
ANR	3213007	Symbol	is_FCO_PSfont		3212695						
ANR	3213008	Symbol	* d		3212695						
ANR	3213009	Symbol	d -> font_type		3212695						
ANR	3213010	Symbol	r		3212695						
ANR	3213011	Symbol	I -> ff . server_font_data		3212695						
ANR	3213012	Symbol	* m		3212695						
ANR	3213013	Symbol	I -> initial_FontMatrix . yx		3212695						
ANR	3213014	Symbol	I -> initial_FontMatrix . yy		3212695						
ANR	3213015	Function	export_outline	1501:0:48451:50592							
ANR	3213016	FunctionDef	"export_outline (fapi_ufst_server * r , PIFOUTLINE pol , gs_fapi_path * p)"		3213015	0					
ANR	3213017	CompoundStatement		1503:0:48533:50592	3213015	0					
ANR	3213018	IdentifierDeclStatement	POUTLINE_CHAR outchar ;	1504:4:48539:48560	3213015	0	True				
ANR	3213019	IdentifierDecl	outchar		3213015	0					
ANR	3213020	IdentifierDeclType	POUTLINE_CHAR		3213015	0					
ANR	3213021	Identifier	outchar		3213015	1					
ANR	3213022	IdentifierDeclStatement	"SW16 num_contrs , num_segmts ;"	1505:4:48566:48593	3213015	1	True				
ANR	3213023	IdentifierDecl	num_contrs		3213015	0					
ANR	3213024	IdentifierDeclType	SW16		3213015	0					
ANR	3213025	Identifier	num_contrs		3213015	1					
ANR	3213026	IdentifierDecl	num_segmts		3213015	1					
ANR	3213027	IdentifierDeclType	SW16		3213015	0					
ANR	3213028	Identifier	num_segmts		3213015	1					
ANR	3213029	IdentifierDeclStatement	LPSB8 segment ;	1506:4:48599:48612	3213015	2	True				
ANR	3213030	IdentifierDecl	segment		3213015	0					
ANR	3213031	IdentifierDeclType	LPSB8		3213015	0					
ANR	3213032	Identifier	segment		3213015	1					
ANR	3213033	IdentifierDeclStatement	PINTRVECTOR points ;	1507:4:48618:48636	3213015	3	True				
ANR	3213034	IdentifierDecl	points		3213015	0					
ANR	3213035	IdentifierDeclType	PINTRVECTOR		3213015	0					
ANR	3213036	Identifier	points		3213015	1					
ANR	3213037	IdentifierDeclStatement	"SW16 i , j ;"	1508:4:48642:48651	3213015	4	True				
ANR	3213038	IdentifierDecl	i		3213015	0					
ANR	3213039	IdentifierDeclType	SW16		3213015	0					
ANR	3213040	Identifier	i		3213015	1					
ANR	3213041	IdentifierDecl	j		3213015	1					
ANR	3213042	IdentifierDeclType	SW16		3213015	0					
ANR	3213043	Identifier	j		3213015	1					
ANR	3213044	IfStatement	if ( pol == NULL )		3213015	5					
ANR	3213045	Condition	pol == NULL	1510:8:48662:48672	3213015	0	True				
ANR	3213046	EqualityExpression	pol == NULL		3213015	0		==			
ANR	3213047	Identifier	pol		3213015	0					
ANR	3213048	Identifier	NULL		3213015	1					
ANR	3213049	ReturnStatement	return 0 ;	1511:8:48683:48691	3213015	1	True				
ANR	3213050	PrimaryExpression	0		3213015	0					
ANR	3213051	ExpressionStatement	p -> shift += r -> If . frac_shift + pol -> VLCpower	1512:4:48697:48741	3213015	6	True				
ANR	3213052	AssignmentExpression	p -> shift += r -> If . frac_shift + pol -> VLCpower		3213015	0		+=			
ANR	3213053	PtrMemberAccess	p -> shift		3213015	0					
ANR	3213054	Identifier	p		3213015	0					
ANR	3213055	Identifier	shift		3213015	1					
ANR	3213056	AdditiveExpression	r -> If . frac_shift + pol -> VLCpower		3213015	1		+			
ANR	3213057	MemberAccess	r -> If . frac_shift		3213015	0					
ANR	3213058	PtrMemberAccess	r -> If		3213015	0					
ANR	3213059	Identifier	r		3213015	0					
ANR	3213060	Identifier	If		3213015	1					
ANR	3213061	Identifier	frac_shift		3213015	1					
ANR	3213062	PtrMemberAccess	pol -> VLCpower		3213015	1					
ANR	3213063	Identifier	pol		3213015	0					
ANR	3213064	Identifier	VLCpower		3213015	1					
ANR	3213065	ExpressionStatement	outchar = & pol -> ol	1513:4:48747:48765	3213015	7	True				
ANR	3213066	AssignmentExpression	outchar = & pol -> ol		3213015	0		=			
ANR	3213067	Identifier	outchar		3213015	0					
ANR	3213068	UnaryOperationExpression	& pol -> ol		3213015	1					
ANR	3213069	UnaryOperator	&		3213015	0					
ANR	3213070	PtrMemberAccess	pol -> ol		3213015	1					
ANR	3213071	Identifier	pol		3213015	0					
ANR	3213072	Identifier	ol		3213015	1					
ANR	3213073	ExpressionStatement	num_contrs = outchar -> num_loops	1514:4:48771:48802	3213015	8	True				
ANR	3213074	AssignmentExpression	num_contrs = outchar -> num_loops		3213015	0		=			
ANR	3213075	Identifier	num_contrs		3213015	0					
ANR	3213076	PtrMemberAccess	outchar -> num_loops		3213015	1					
ANR	3213077	Identifier	outchar		3213015	0					
ANR	3213078	Identifier	num_loops		3213015	1					
ANR	3213079	ForStatement	for ( i = 0 ; i < num_contrs ; i ++ )		3213015	9					
ANR	3213080	ForInit	i = 0 ;	1515:9:48813:48818	3213015	0	True				
ANR	3213081	AssignmentExpression	i = 0		3213015	0		=			
ANR	3213082	Identifier	i		3213015	0					
ANR	3213083	PrimaryExpression	0		3213015	1					
ANR	3213084	Condition	i < num_contrs	1515:16:48820:48833	3213015	1	True				
ANR	3213085	RelationalExpression	i < num_contrs		3213015	0		<			
ANR	3213086	Identifier	i		3213015	0					
ANR	3213087	Identifier	num_contrs		3213015	1					
ANR	3213088	PostIncDecOperationExpression	i ++	1515:32:48836:48838	3213015	2	True				
ANR	3213089	Identifier	i		3213015	0					
ANR	3213090	IncDec	++		3213015	1					
ANR	3213091	CompoundStatement		13:37:307:307	3213015	3					
ANR	3213092	ExpressionStatement	num_segmts = outchar -> loop [ i ] . num_segmts	1516:8:48851:48891	3213015	0	True				
ANR	3213093	AssignmentExpression	num_segmts = outchar -> loop [ i ] . num_segmts		3213015	0		=			
ANR	3213094	Identifier	num_segmts		3213015	0					
ANR	3213095	MemberAccess	outchar -> loop [ i ] . num_segmts		3213015	1					
ANR	3213096	ArrayIndexing	outchar -> loop [ i ]		3213015	0					
ANR	3213097	PtrMemberAccess	outchar -> loop		3213015	0					
ANR	3213098	Identifier	outchar		3213015	0					
ANR	3213099	Identifier	loop		3213015	1					
ANR	3213100	Identifier	i		3213015	1					
ANR	3213101	Identifier	num_segmts		3213015	1					
ANR	3213102	ExpressionStatement	segment = ( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )	1517:8:48901:48988	3213015	1	True				
ANR	3213103	AssignmentExpression	segment = ( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )		3213015	0		=			
ANR	3213104	Identifier	segment		3213015	0					
ANR	3213105	CastExpression	( LPSB8 ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset )		3213015	1					
ANR	3213106	CastTarget	LPSB8		3213015	0					
ANR	3213107	AdditiveExpression	( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . segmt_offset		3213015	1		+			
ANR	3213108	CastExpression	( LPSB8 ) ( outchar -> loop )		3213015	0					
ANR	3213109	CastTarget	LPSB8		3213015	0					
ANR	3213110	PtrMemberAccess	outchar -> loop		3213015	1					
ANR	3213111	Identifier	outchar		3213015	0					
ANR	3213112	Identifier	loop		3213015	1					
ANR	3213113	MemberAccess	outchar -> loop [ i ] . segmt_offset		3213015	1					
ANR	3213114	ArrayIndexing	outchar -> loop [ i ]		3213015	0					
ANR	3213115	PtrMemberAccess	outchar -> loop		3213015	0					
ANR	3213116	Identifier	outchar		3213015	0					
ANR	3213117	Identifier	loop		3213015	1					
ANR	3213118	Identifier	i		3213015	1					
ANR	3213119	Identifier	segmt_offset		3213015	1					
ANR	3213120	ExpressionStatement	points = ( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )	1519:8:48998:49117	3213015	2	True				
ANR	3213121	AssignmentExpression	points = ( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )		3213015	0		=			
ANR	3213122	Identifier	points		3213015	0					
ANR	3213123	CastExpression	( PINTRVECTOR ) ( ( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset )		3213015	1					
ANR	3213124	CastTarget	PINTRVECTOR		3213015	0					
ANR	3213125	AdditiveExpression	( LPSB8 ) ( outchar -> loop ) + outchar -> loop [ i ] . coord_offset		3213015	1		+			
ANR	3213126	CastExpression	( LPSB8 ) ( outchar -> loop )		3213015	0					
ANR	3213127	CastTarget	LPSB8		3213015	0					
ANR	3213128	PtrMemberAccess	outchar -> loop		3213015	1					
ANR	3213129	Identifier	outchar		3213015	0					
ANR	3213130	Identifier	loop		3213015	1					
ANR	3213131	MemberAccess	outchar -> loop [ i ] . coord_offset		3213015	1					
ANR	3213132	ArrayIndexing	outchar -> loop [ i ]		3213015	0					
ANR	3213133	PtrMemberAccess	outchar -> loop		3213015	0					
ANR	3213134	Identifier	outchar		3213015	0					
ANR	3213135	Identifier	loop		3213015	1					
ANR	3213136	Identifier	i		3213015	1					
ANR	3213137	Identifier	coord_offset		3213015	1					
ANR	3213138	ForStatement	for ( j = 0 ; j < num_segmts ; j ++ )		3213015	3					
ANR	3213139	ForInit	j = 0 ;	1522:13:49132:49137	3213015	0	True				
ANR	3213140	AssignmentExpression	j = 0		3213015	0		=			
ANR	3213141	Identifier	j		3213015	0					
ANR	3213142	PrimaryExpression	0		3213015	1					
ANR	3213143	Condition	j < num_segmts	1522:20:49139:49152	3213015	1	True				
ANR	3213144	RelationalExpression	j < num_segmts		3213015	0		<			
ANR	3213145	Identifier	j		3213015	0					
ANR	3213146	Identifier	num_segmts		3213015	1					
ANR	3213147	PostIncDecOperationExpression	j ++	1522:36:49155:49157	3213015	2	True				
ANR	3213148	Identifier	j		3213015	0					
ANR	3213149	IncDec	++		3213015	1					
ANR	3213150	CompoundStatement		20:41:626:626	3213015	3					
ANR	3213151	IfStatement	if ( * segment == 0x00 )		3213015	0					
ANR	3213152	Condition	* segment == 0x00	1524:16:49179:49194	3213015	0	True				
ANR	3213153	EqualityExpression	* segment == 0x00		3213015	0		==			
ANR	3213154	UnaryOperationExpression	* segment		3213015	0					
ANR	3213155	UnaryOperator	*		3213015	0					
ANR	3213156	Identifier	segment		3213015	1					
ANR	3213157	PrimaryExpression	0x00		3213015	1					
ANR	3213158	CompoundStatement		22:34:663:663	3213015	1					
ANR	3213159	IfStatement	"if ( ( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0 )"		3213015	0					
ANR	3213160	Condition	"( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"	1525:20:49219:49361	3213015	0	True				
ANR	3213161	EqualityExpression	"( p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"		3213015	0		!=			
ANR	3213162	AssignmentExpression	"p -> gs_error = p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		3213015	0		=			
ANR	3213163	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213164	Identifier	p		3213015	0					
ANR	3213165	Identifier	gs_error		3213015	1					
ANR	3213166	CallExpression	"p -> moveto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		3213015	1					
ANR	3213167	Callee	p -> moveto		3213015	0					
ANR	3213168	PtrMemberAccess	p -> moveto		3213015	0					
ANR	3213169	Identifier	p		3213015	0					
ANR	3213170	Identifier	moveto		3213015	1					
ANR	3213171	ArgumentList	p		3213015	1					
ANR	3213172	Argument	p		3213015	0					
ANR	3213173	Identifier	p		3213015	0					
ANR	3213174	Argument	( ( int64_t ) points -> x ) << 16		3213015	1					
ANR	3213175	ShiftExpression	( ( int64_t ) points -> x ) << 16		3213015	0		<<			
ANR	3213176	CastExpression	( int64_t ) points -> x		3213015	0					
ANR	3213177	CastTarget	int64_t		3213015	0					
ANR	3213178	PtrMemberAccess	points -> x		3213015	1					
ANR	3213179	Identifier	points		3213015	0					
ANR	3213180	Identifier	x		3213015	1					
ANR	3213181	PrimaryExpression	16		3213015	1					
ANR	3213182	Argument	( ( int64_t ) points -> y ) << 16		3213015	2					
ANR	3213183	ShiftExpression	( ( int64_t ) points -> y ) << 16		3213015	0		<<			
ANR	3213184	CastExpression	( int64_t ) points -> y		3213015	0					
ANR	3213185	CastTarget	int64_t		3213015	0					
ANR	3213186	PtrMemberAccess	points -> y		3213015	1					
ANR	3213187	Identifier	points		3213015	0					
ANR	3213188	Identifier	y		3213015	1					
ANR	3213189	PrimaryExpression	16		3213015	1					
ANR	3213190	PrimaryExpression	0		3213015	1					
ANR	3213191	ReturnStatement	return p -> gs_error ;	1528:20:49384:49402	3213015	1	True				
ANR	3213192	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213193	Identifier	p		3213015	0					
ANR	3213194	Identifier	gs_error		3213015	1					
ANR	3213195	ExpressionStatement	points ++	1529:16:49420:49428	3213015	1	True				
ANR	3213196	PostIncDecOperationExpression	points ++		3213015	0					
ANR	3213197	Identifier	points		3213015	0					
ANR	3213198	IncDec	++		3213015	1					
ANR	3213199	ElseStatement	else		3213015	0					
ANR	3213200	IfStatement	if ( * segment == 0x01 )		3213015	0					
ANR	3213201	Condition	* segment == 0x01	1531:21:49465:49480	3213015	0	True				
ANR	3213202	EqualityExpression	* segment == 0x01		3213015	0		==			
ANR	3213203	UnaryOperationExpression	* segment		3213015	0					
ANR	3213204	UnaryOperator	*		3213015	0					
ANR	3213205	Identifier	segment		3213015	1					
ANR	3213206	PrimaryExpression	0x01		3213015	1					
ANR	3213207	CompoundStatement		29:39:949:949	3213015	1					
ANR	3213208	IfStatement	"if ( ( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0 )"		3213015	0					
ANR	3213209	Condition	"( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"	1532:20:49505:49647	3213015	0	True				
ANR	3213210	EqualityExpression	"( p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 ) ) != 0"		3213015	0		!=			
ANR	3213211	AssignmentExpression	"p -> gs_error = p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		3213015	0		=			
ANR	3213212	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213213	Identifier	p		3213015	0					
ANR	3213214	Identifier	gs_error		3213015	1					
ANR	3213215	CallExpression	"p -> lineto ( p , ( ( int64_t ) points -> x ) << 16 , ( ( int64_t ) points -> y ) << 16 )"		3213015	1					
ANR	3213216	Callee	p -> lineto		3213015	0					
ANR	3213217	PtrMemberAccess	p -> lineto		3213015	0					
ANR	3213218	Identifier	p		3213015	0					
ANR	3213219	Identifier	lineto		3213015	1					
ANR	3213220	ArgumentList	p		3213015	1					
ANR	3213221	Argument	p		3213015	0					
ANR	3213222	Identifier	p		3213015	0					
ANR	3213223	Argument	( ( int64_t ) points -> x ) << 16		3213015	1					
ANR	3213224	ShiftExpression	( ( int64_t ) points -> x ) << 16		3213015	0		<<			
ANR	3213225	CastExpression	( int64_t ) points -> x		3213015	0					
ANR	3213226	CastTarget	int64_t		3213015	0					
ANR	3213227	PtrMemberAccess	points -> x		3213015	1					
ANR	3213228	Identifier	points		3213015	0					
ANR	3213229	Identifier	x		3213015	1					
ANR	3213230	PrimaryExpression	16		3213015	1					
ANR	3213231	Argument	( ( int64_t ) points -> y ) << 16		3213015	2					
ANR	3213232	ShiftExpression	( ( int64_t ) points -> y ) << 16		3213015	0		<<			
ANR	3213233	CastExpression	( int64_t ) points -> y		3213015	0					
ANR	3213234	CastTarget	int64_t		3213015	0					
ANR	3213235	PtrMemberAccess	points -> y		3213015	1					
ANR	3213236	Identifier	points		3213015	0					
ANR	3213237	Identifier	y		3213015	1					
ANR	3213238	PrimaryExpression	16		3213015	1					
ANR	3213239	PrimaryExpression	0		3213015	1					
ANR	3213240	ReturnStatement	return p -> gs_error ;	1535:20:49670:49688	3213015	1	True				
ANR	3213241	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213242	Identifier	p		3213015	0					
ANR	3213243	Identifier	gs_error		3213015	1					
ANR	3213244	ExpressionStatement	points ++	1536:16:49706:49714	3213015	1	True				
ANR	3213245	PostIncDecOperationExpression	points ++		3213015	0					
ANR	3213246	Identifier	points		3213015	0					
ANR	3213247	IncDec	++		3213015	1					
ANR	3213248	ElseStatement	else		3213015	0					
ANR	3213249	IfStatement	if ( * segment == 0x02 )		3213015	0					
ANR	3213250	Condition	* segment == 0x02	1538:21:49751:49766	3213015	0	True				
ANR	3213251	EqualityExpression	* segment == 0x02		3213015	0		==			
ANR	3213252	UnaryOperationExpression	* segment		3213015	0					
ANR	3213253	UnaryOperator	*		3213015	0					
ANR	3213254	Identifier	segment		3213015	1					
ANR	3213255	PrimaryExpression	0x02		3213015	1					
ANR	3213256	CompoundStatement		36:39:1235:1235	3213015	1					
ANR	3213257	ExpressionStatement	points += 2	1539:16:49787:49798	3213015	0	True				
ANR	3213258	AssignmentExpression	points += 2		3213015	0		+=			
ANR	3213259	Identifier	points		3213015	0					
ANR	3213260	PrimaryExpression	2		3213015	1					
ANR	3213261	ExpressionStatement	return_error ( gs_error_invalidfont )	1540:16:49816:49850	3213015	1	True				
ANR	3213262	CallExpression	return_error ( gs_error_invalidfont )		3213015	0					
ANR	3213263	Callee	return_error		3213015	0					
ANR	3213264	Identifier	return_error		3213015	0					
ANR	3213265	ArgumentList	gs_error_invalidfont		3213015	1					
ANR	3213266	Argument	gs_error_invalidfont		3213015	0					
ANR	3213267	Identifier	gs_error_invalidfont		3213015	0					
ANR	3213268	ElseStatement	else		3213015	0					
ANR	3213269	IfStatement	if ( * segment == 0x03 )		3213015	0					
ANR	3213270	Condition	* segment == 0x03	1542:21:49916:49931	3213015	0	True				
ANR	3213271	EqualityExpression	* segment == 0x03		3213015	0		==			
ANR	3213272	UnaryOperationExpression	* segment		3213015	0					
ANR	3213273	UnaryOperator	*		3213015	0					
ANR	3213274	Identifier	segment		3213015	1					
ANR	3213275	PrimaryExpression	0x03		3213015	1					
ANR	3213276	CompoundStatement		40:39:1400:1400	3213015	1					
ANR	3213277	IfStatement	"if ( ( p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0 ) )"		3213015	0					
ANR	3213278	Condition	"p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"	1543:20:49956:50355	3213015	0	True				
ANR	3213279	AssignmentExpression	"p -> gs_error = p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"		3213015	0		=			
ANR	3213280	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213281	Identifier	p		3213015	0					
ANR	3213282	Identifier	gs_error		3213015	1					
ANR	3213283	RelationalExpression	"p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 ) < 0"		3213015	1		<			
ANR	3213284	CallExpression	"p -> curveto ( p , ( ( int64_t ) points [ 0 ] . x ) << 16 , ( ( int64_t ) points [ 0 ] . y ) << 16 , ( ( int64_t ) points [ 1 ] . x ) << 16 , ( ( int64_t ) points [ 1 ] . y ) << 16 , ( ( int64_t ) points [ 2 ] . x ) << 16 , ( ( int64_t ) points [ 2 ] . y ) << 16 )"		3213015	0					
ANR	3213285	Callee	p -> curveto		3213015	0					
ANR	3213286	PtrMemberAccess	p -> curveto		3213015	0					
ANR	3213287	Identifier	p		3213015	0					
ANR	3213288	Identifier	curveto		3213015	1					
ANR	3213289	ArgumentList	p		3213015	1					
ANR	3213290	Argument	p		3213015	0					
ANR	3213291	Identifier	p		3213015	0					
ANR	3213292	Argument	( ( int64_t ) points [ 0 ] . x ) << 16		3213015	1					
ANR	3213293	ShiftExpression	( ( int64_t ) points [ 0 ] . x ) << 16		3213015	0		<<			
ANR	3213294	CastExpression	( int64_t ) points [ 0 ] . x		3213015	0					
ANR	3213295	CastTarget	int64_t		3213015	0					
ANR	3213296	MemberAccess	points [ 0 ] . x		3213015	1					
ANR	3213297	ArrayIndexing	points [ 0 ]		3213015	0					
ANR	3213298	Identifier	points		3213015	0					
ANR	3213299	PrimaryExpression	0		3213015	1					
ANR	3213300	Identifier	x		3213015	1					
ANR	3213301	PrimaryExpression	16		3213015	1					
ANR	3213302	Argument	( ( int64_t ) points [ 0 ] . y ) << 16		3213015	2					
ANR	3213303	ShiftExpression	( ( int64_t ) points [ 0 ] . y ) << 16		3213015	0		<<			
ANR	3213304	CastExpression	( int64_t ) points [ 0 ] . y		3213015	0					
ANR	3213305	CastTarget	int64_t		3213015	0					
ANR	3213306	MemberAccess	points [ 0 ] . y		3213015	1					
ANR	3213307	ArrayIndexing	points [ 0 ]		3213015	0					
ANR	3213308	Identifier	points		3213015	0					
ANR	3213309	PrimaryExpression	0		3213015	1					
ANR	3213310	Identifier	y		3213015	1					
ANR	3213311	PrimaryExpression	16		3213015	1					
ANR	3213312	Argument	( ( int64_t ) points [ 1 ] . x ) << 16		3213015	3					
ANR	3213313	ShiftExpression	( ( int64_t ) points [ 1 ] . x ) << 16		3213015	0		<<			
ANR	3213314	CastExpression	( int64_t ) points [ 1 ] . x		3213015	0					
ANR	3213315	CastTarget	int64_t		3213015	0					
ANR	3213316	MemberAccess	points [ 1 ] . x		3213015	1					
ANR	3213317	ArrayIndexing	points [ 1 ]		3213015	0					
ANR	3213318	Identifier	points		3213015	0					
ANR	3213319	PrimaryExpression	1		3213015	1					
ANR	3213320	Identifier	x		3213015	1					
ANR	3213321	PrimaryExpression	16		3213015	1					
ANR	3213322	Argument	( ( int64_t ) points [ 1 ] . y ) << 16		3213015	4					
ANR	3213323	ShiftExpression	( ( int64_t ) points [ 1 ] . y ) << 16		3213015	0		<<			
ANR	3213324	CastExpression	( int64_t ) points [ 1 ] . y		3213015	0					
ANR	3213325	CastTarget	int64_t		3213015	0					
ANR	3213326	MemberAccess	points [ 1 ] . y		3213015	1					
ANR	3213327	ArrayIndexing	points [ 1 ]		3213015	0					
ANR	3213328	Identifier	points		3213015	0					
ANR	3213329	PrimaryExpression	1		3213015	1					
ANR	3213330	Identifier	y		3213015	1					
ANR	3213331	PrimaryExpression	16		3213015	1					
ANR	3213332	Argument	( ( int64_t ) points [ 2 ] . x ) << 16		3213015	5					
ANR	3213333	ShiftExpression	( ( int64_t ) points [ 2 ] . x ) << 16		3213015	0		<<			
ANR	3213334	CastExpression	( int64_t ) points [ 2 ] . x		3213015	0					
ANR	3213335	CastTarget	int64_t		3213015	0					
ANR	3213336	MemberAccess	points [ 2 ] . x		3213015	1					
ANR	3213337	ArrayIndexing	points [ 2 ]		3213015	0					
ANR	3213338	Identifier	points		3213015	0					
ANR	3213339	PrimaryExpression	2		3213015	1					
ANR	3213340	Identifier	x		3213015	1					
ANR	3213341	PrimaryExpression	16		3213015	1					
ANR	3213342	Argument	( ( int64_t ) points [ 2 ] . y ) << 16		3213015	6					
ANR	3213343	ShiftExpression	( ( int64_t ) points [ 2 ] . y ) << 16		3213015	0		<<			
ANR	3213344	CastExpression	( int64_t ) points [ 2 ] . y		3213015	0					
ANR	3213345	CastTarget	int64_t		3213015	0					
ANR	3213346	MemberAccess	points [ 2 ] . y		3213015	1					
ANR	3213347	ArrayIndexing	points [ 2 ]		3213015	0					
ANR	3213348	Identifier	points		3213015	0					
ANR	3213349	PrimaryExpression	2		3213015	1					
ANR	3213350	Identifier	y		3213015	1					
ANR	3213351	PrimaryExpression	16		3213015	1					
ANR	3213352	PrimaryExpression	0		3213015	1					
ANR	3213353	ReturnStatement	return p -> gs_error ;	1550:20:50378:50396	3213015	1	True				
ANR	3213354	PtrMemberAccess	p -> gs_error		3213015	0					
ANR	3213355	Identifier	p		3213015	0					
ANR	3213356	Identifier	gs_error		3213015	1					
ANR	3213357	ExpressionStatement	points += 3	1551:16:50414:50425	3213015	1	True				
ANR	3213358	AssignmentExpression	points += 3		3213015	0		+=			
ANR	3213359	Identifier	points		3213015	0					
ANR	3213360	PrimaryExpression	3		3213015	1					
ANR	3213361	ElseStatement	else		3213015	0					
ANR	3213362	ExpressionStatement	return_error ( gs_error_invalidfont )	1554:16:50474:50508	3213015	0	True				
ANR	3213363	CallExpression	return_error ( gs_error_invalidfont )		3213015	0					
ANR	3213364	Callee	return_error		3213015	0					
ANR	3213365	Identifier	return_error		3213015	0					
ANR	3213366	ArgumentList	gs_error_invalidfont		3213015	1					
ANR	3213367	Argument	gs_error_invalidfont		3213015	0					
ANR	3213368	Identifier	gs_error_invalidfont		3213015	0					
ANR	3213369	ExpressionStatement	segment ++	1555:12:50551:50560	3213015	1	True				
ANR	3213370	PostIncDecOperationExpression	segment ++		3213015	0					
ANR	3213371	Identifier	segment		3213015	0					
ANR	3213372	IncDec	++		3213015	1					
ANR	3213373	ReturnStatement	return 0 ;	1558:4:50582:50590	3213015	10	True				
ANR	3213374	PrimaryExpression	0		3213015	0					
ANR	3213375	ReturnType	static int		3213015	1					
ANR	3213376	Identifier	export_outline		3213015	2					
ANR	3213377	ParameterList	"fapi_ufst_server * r , PIFOUTLINE pol , gs_fapi_path * p"		3213015	3					
ANR	3213378	Parameter	fapi_ufst_server * r	1502:15:48477:48496	3213015	0	True				
ANR	3213379	ParameterType	fapi_ufst_server *		3213015	0					
ANR	3213380	Identifier	r		3213015	1					
ANR	3213381	Parameter	PIFOUTLINE pol	1502:37:48499:48512	3213015	1	True				
ANR	3213382	ParameterType	PIFOUTLINE		3213015	0					
ANR	3213383	Identifier	pol		3213015	1					
ANR	3213384	Parameter	gs_fapi_path * p	1502:53:48515:48530	3213015	2	True				
ANR	3213385	ParameterType	gs_fapi_path *		3213015	0					
ANR	3213386	Identifier	p		3213015	1					
ANR	3213387	CFGEntryNode	ENTRY		3213015		True				
ANR	3213388	CFGExitNode	EXIT		3213015		True				
ANR	3213389	Symbol	* outchar -> loop		3213015						
ANR	3213390	Symbol	* outchar		3213015						
ANR	3213391	Symbol	points -> y		3213015						
ANR	3213392	Symbol	points -> x		3213015						
ANR	3213393	Symbol	r -> If . frac_shift		3213015						
ANR	3213394	Symbol	points [ 2 ] . x		3213015						
ANR	3213395	Symbol	pol		3213015						
ANR	3213396	Symbol	p -> moveto		3213015						
ANR	3213397	Symbol	points		3213015						
ANR	3213398	Symbol	points [ 2 ] . y		3213015						
ANR	3213399	Symbol	p -> lineto		3213015						
ANR	3213400	Symbol	segment		3213015						
ANR	3213401	Symbol	& pol -> ol		3213015						
ANR	3213402	Symbol	gs_error_invalidfont		3213015						
ANR	3213403	Symbol	points [ 0 ] . y		3213015						
ANR	3213404	Symbol	points [ 0 ] . x		3213015						
ANR	3213405	Symbol	outchar -> loop		3213015						
ANR	3213406	Symbol	NULL		3213015						
ANR	3213407	Symbol	p -> shift		3213015						
ANR	3213408	Symbol	outchar -> num_loops		3213015						
ANR	3213409	Symbol	r -> If		3213015						
ANR	3213410	Symbol	points [ 1 ] . y		3213015						
ANR	3213411	Symbol	* * outchar		3213015						
ANR	3213412	Symbol	points [ 1 ] . x		3213015						
ANR	3213413	Symbol	num_contrs		3213015						
ANR	3213414	Symbol	i		3213015						
ANR	3213415	Symbol	j		3213015						
ANR	3213416	Symbol	outchar -> loop [ i ] . num_segmts		3213015						
ANR	3213417	Symbol	p -> gs_error		3213015						
ANR	3213418	Symbol	outchar		3213015						
ANR	3213419	Symbol	p		3213015						
ANR	3213420	Symbol	r		3213015						
ANR	3213421	Symbol	num_segmts		3213015						
ANR	3213422	Symbol	* i		3213015						
ANR	3213423	Symbol	pol -> VLCpower		3213015						
ANR	3213424	Symbol	outchar -> loop [ i ] . segmt_offset		3213015						
ANR	3213425	Symbol	p -> curveto		3213015						
ANR	3213426	Symbol	* pol		3213015						
ANR	3213427	Symbol	* segment		3213015						
ANR	3213428	Symbol	* p		3213015						
ANR	3213429	Symbol	* r		3213015						
ANR	3213430	Symbol	* points		3213015						
ANR	3213431	Symbol	outchar -> loop [ i ] . coord_offset		3213015						
ANR	3213432	Function	set_metrics	1561:0:50595:51086							
ANR	3213433	FunctionDef	"set_metrics (fapi_ufst_server * r , gs_fapi_metrics * metrics , SL32 design_bbox [ 4 ] , SW16 design_escapement [ 2 ] , SW16 du_emx , SW16 du_emy)"		3213432	0					
ANR	3213434	CompoundStatement		1565:0:50773:51086	3213432	0					
ANR	3213435	ExpressionStatement	metrics -> escapement = design_escapement [ 0 ]	1567:4:50780:50822	3213432	0	True				
ANR	3213436	AssignmentExpression	metrics -> escapement = design_escapement [ 0 ]		3213432	0		=			
ANR	3213437	PtrMemberAccess	metrics -> escapement		3213432	0					
ANR	3213438	Identifier	metrics		3213432	0					
ANR	3213439	Identifier	escapement		3213432	1					
ANR	3213440	ArrayIndexing	design_escapement [ 0 ]		3213432	1					
ANR	3213441	Identifier	design_escapement		3213432	0					
ANR	3213442	PrimaryExpression	0		3213432	1					
ANR	3213443	ExpressionStatement	metrics -> v_escapement = design_escapement [ 1 ]	1568:4:50828:50872	3213432	1	True				
ANR	3213444	AssignmentExpression	metrics -> v_escapement = design_escapement [ 1 ]		3213432	0		=			
ANR	3213445	PtrMemberAccess	metrics -> v_escapement		3213432	0					
ANR	3213446	Identifier	metrics		3213432	0					
ANR	3213447	Identifier	v_escapement		3213432	1					
ANR	3213448	ArrayIndexing	design_escapement [ 1 ]		3213432	1					
ANR	3213449	Identifier	design_escapement		3213432	0					
ANR	3213450	PrimaryExpression	1		3213432	1					
ANR	3213451	ExpressionStatement	metrics -> em_x = du_emx	1569:4:50878:50900	3213432	2	True				
ANR	3213452	AssignmentExpression	metrics -> em_x = du_emx		3213432	0		=			
ANR	3213453	PtrMemberAccess	metrics -> em_x		3213432	0					
ANR	3213454	Identifier	metrics		3213432	0					
ANR	3213455	Identifier	em_x		3213432	1					
ANR	3213456	Identifier	du_emx		3213432	1					
ANR	3213457	ExpressionStatement	metrics -> em_y = du_emy	1570:4:50906:50928	3213432	3	True				
ANR	3213458	AssignmentExpression	metrics -> em_y = du_emy		3213432	0		=			
ANR	3213459	PtrMemberAccess	metrics -> em_y		3213432	0					
ANR	3213460	Identifier	metrics		3213432	0					
ANR	3213461	Identifier	em_y		3213432	1					
ANR	3213462	Identifier	du_emy		3213432	1					
ANR	3213463	ExpressionStatement	metrics -> bbox_x0 = design_bbox [ 0 ]	1571:4:50934:50967	3213432	4	True				
ANR	3213464	AssignmentExpression	metrics -> bbox_x0 = design_bbox [ 0 ]		3213432	0		=			
ANR	3213465	PtrMemberAccess	metrics -> bbox_x0		3213432	0					
ANR	3213466	Identifier	metrics		3213432	0					
ANR	3213467	Identifier	bbox_x0		3213432	1					
ANR	3213468	ArrayIndexing	design_bbox [ 0 ]		3213432	1					
ANR	3213469	Identifier	design_bbox		3213432	0					
ANR	3213470	PrimaryExpression	0		3213432	1					
ANR	3213471	ExpressionStatement	metrics -> bbox_y0 = design_bbox [ 1 ]	1572:4:50973:51006	3213432	5	True				
ANR	3213472	AssignmentExpression	metrics -> bbox_y0 = design_bbox [ 1 ]		3213432	0		=			
ANR	3213473	PtrMemberAccess	metrics -> bbox_y0		3213432	0					
ANR	3213474	Identifier	metrics		3213432	0					
ANR	3213475	Identifier	bbox_y0		3213432	1					
ANR	3213476	ArrayIndexing	design_bbox [ 1 ]		3213432	1					
ANR	3213477	Identifier	design_bbox		3213432	0					
ANR	3213478	PrimaryExpression	1		3213432	1					
ANR	3213479	ExpressionStatement	metrics -> bbox_x1 = design_bbox [ 2 ]	1573:4:51012:51045	3213432	6	True				
ANR	3213480	AssignmentExpression	metrics -> bbox_x1 = design_bbox [ 2 ]		3213432	0		=			
ANR	3213481	PtrMemberAccess	metrics -> bbox_x1		3213432	0					
ANR	3213482	Identifier	metrics		3213432	0					
ANR	3213483	Identifier	bbox_x1		3213432	1					
ANR	3213484	ArrayIndexing	design_bbox [ 2 ]		3213432	1					
ANR	3213485	Identifier	design_bbox		3213432	0					
ANR	3213486	PrimaryExpression	2		3213432	1					
ANR	3213487	ExpressionStatement	metrics -> bbox_y1 = design_bbox [ 3 ]	1574:4:51051:51084	3213432	7	True				
ANR	3213488	AssignmentExpression	metrics -> bbox_y1 = design_bbox [ 3 ]		3213432	0		=			
ANR	3213489	PtrMemberAccess	metrics -> bbox_y1		3213432	0					
ANR	3213490	Identifier	metrics		3213432	0					
ANR	3213491	Identifier	bbox_y1		3213432	1					
ANR	3213492	ArrayIndexing	design_bbox [ 3 ]		3213432	1					
ANR	3213493	Identifier	design_bbox		3213432	0					
ANR	3213494	PrimaryExpression	3		3213432	1					
ANR	3213495	ReturnType	static inline void		3213432	1					
ANR	3213496	Identifier	set_metrics		3213432	2					
ANR	3213497	ParameterList	"fapi_ufst_server * r , gs_fapi_metrics * metrics , SL32 design_bbox [ 4 ] , SW16 design_escapement [ 2 ] , SW16 du_emx , SW16 du_emy"		3213432	3					
ANR	3213498	Parameter	fapi_ufst_server * r	1562:12:50626:50645	3213432	0	True				
ANR	3213499	ParameterType	fapi_ufst_server *		3213432	0					
ANR	3213500	Identifier	r		3213432	1					
ANR	3213501	Parameter	gs_fapi_metrics * metrics	1562:34:50648:50672	3213432	1	True				
ANR	3213502	ParameterType	gs_fapi_metrics *		3213432	0					
ANR	3213503	Identifier	metrics		3213432	1					
ANR	3213504	Parameter	SL32 design_bbox [ 4 ]	1563:12:50687:50705	3213432	2	True				
ANR	3213505	ParameterType	SL32 [ 4 ]		3213432	0					
ANR	3213506	Identifier	design_bbox		3213432	1					
ANR	3213507	Parameter	SW16 design_escapement [ 2 ]	1563:33:50708:50732	3213432	3	True				
ANR	3213508	ParameterType	SW16 [ 2 ]		3213432	0					
ANR	3213509	Identifier	design_escapement		3213432	1					
ANR	3213510	Parameter	SW16 du_emx	1563:60:50735:50745	3213432	4	True				
ANR	3213511	ParameterType	SW16		3213432	0					
ANR	3213512	Identifier	du_emx		3213432	1					
ANR	3213513	Parameter	SW16 du_emy	1564:12:50760:50770	3213432	5	True				
ANR	3213514	ParameterType	SW16		3213432	0					
ANR	3213515	Identifier	du_emy		3213432	1					
ANR	3213516	CFGEntryNode	ENTRY		3213432		True				
ANR	3213517	CFGExitNode	EXIT		3213432		True				
ANR	3213518	Symbol	du_emx		3213432						
ANR	3213519	Symbol	metrics -> escapement		3213432						
ANR	3213520	Symbol	du_emy		3213432						
ANR	3213521	Symbol	design_bbox		3213432						
ANR	3213522	Symbol	metrics -> em_y		3213432						
ANR	3213523	Symbol	design_escapement		3213432						
ANR	3213524	Symbol	metrics -> em_x		3213432						
ANR	3213525	Symbol	* design_bbox		3213432						
ANR	3213526	Symbol	metrics -> v_escapement		3213432						
ANR	3213527	Symbol	r		3213432						
ANR	3213528	Symbol	metrics -> bbox_y0		3213432						
ANR	3213529	Symbol	metrics -> bbox_x1		3213432						
ANR	3213530	Symbol	* metrics		3213432						
ANR	3213531	Symbol	metrics -> bbox_x0		3213432						
ANR	3213532	Symbol	metrics -> bbox_y1		3213432						
ANR	3213533	Symbol	metrics		3213432						
ANR	3213534	Symbol	* design_escapement		3213432						
ANR	3213535	Function	get_char	1577:0:51089:64354							
ANR	3213536	FunctionDef	"get_char (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_path * p , gs_fapi_metrics * metrics , UW16 format)"		3213535	0					
ANR	3213537	CompoundStatement		1580:0:51249:64354	3213535	0					
ANR	3213538	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1581:4:51255:51292	3213535	0	True				
ANR	3213539	IdentifierDecl	* r = If_to_I ( server )		3213535	0					
ANR	3213540	IdentifierDeclType	fapi_ufst_server *		3213535	0					
ANR	3213541	Identifier	r		3213535	1					
ANR	3213542	AssignmentExpression	* r = If_to_I ( server )		3213535	2		=			
ANR	3213543	Identifier	r		3213535	0					
ANR	3213544	CallExpression	If_to_I ( server )		3213535	1					
ANR	3213545	Callee	If_to_I		3213535	0					
ANR	3213546	Identifier	If_to_I		3213535	0					
ANR	3213547	ArgumentList	server		3213535	1					
ANR	3213548	Argument	server		3213535	0					
ANR	3213549	Identifier	server		3213535	0					
ANR	3213550	IdentifierDeclStatement	"UW16 code = 0 , code2 = 0 ;"	1582:4:51298:51322	3213535	1	True				
ANR	3213551	IdentifierDecl	code = 0		3213535	0					
ANR	3213552	IdentifierDeclType	UW16		3213535	0					
ANR	3213553	Identifier	code		3213535	1					
ANR	3213554	AssignmentExpression	code = 0		3213535	2		=			
ANR	3213555	Identifier	code		3213535	0					
ANR	3213556	PrimaryExpression	0		3213535	1					
ANR	3213557	IdentifierDecl	code2 = 0		3213535	1					
ANR	3213558	IdentifierDeclType	UW16		3213535	0					
ANR	3213559	Identifier	code2		3213535	1					
ANR	3213560	AssignmentExpression	code2 = 0		3213535	2		=			
ANR	3213561	Identifier	code2		3213535	0					
ANR	3213562	PrimaryExpression	0		3213535	1					
ANR	3213563	IdentifierDeclStatement	UL32 cc = ( UL32 ) c -> char_codes [ 0 ] ;	1583:4:51328:51361	3213535	2	True				
ANR	3213564	IdentifierDecl	cc = ( UL32 ) c -> char_codes [ 0 ]		3213535	0					
ANR	3213565	IdentifierDeclType	UL32		3213535	0					
ANR	3213566	Identifier	cc		3213535	1					
ANR	3213567	AssignmentExpression	cc = ( UL32 ) c -> char_codes [ 0 ]		3213535	2		=			
ANR	3213568	Identifier	cc		3213535	0					
ANR	3213569	CastExpression	( UL32 ) c -> char_codes [ 0 ]		3213535	1					
ANR	3213570	CastTarget	UL32		3213535	0					
ANR	3213571	ArrayIndexing	c -> char_codes [ 0 ]		3213535	1					
ANR	3213572	PtrMemberAccess	c -> char_codes		3213535	0					
ANR	3213573	Identifier	c		3213535	0					
ANR	3213574	Identifier	char_codes		3213535	1					
ANR	3213575	PrimaryExpression	0		3213535	1					
ANR	3213576	IdentifierDeclStatement	SL32 design_bbox [ 4 ] ;	1584:4:51367:51386	3213535	3	True				
ANR	3213577	IdentifierDecl	design_bbox [ 4 ]		3213535	0					
ANR	3213578	IdentifierDeclType	SL32 [ 4 ]		3213535	0					
ANR	3213579	Identifier	design_bbox		3213535	1					
ANR	3213580	PrimaryExpression	4		3213535	2					
ANR	3213581	IdentifierDeclStatement	char PSchar_name [ MAX_CHAR_NAME_LENGTH ] ;	1585:4:51392:51430	3213535	4	True				
ANR	3213582	IdentifierDecl	PSchar_name [ MAX_CHAR_NAME_LENGTH ]		3213535	0					
ANR	3213583	IdentifierDeclType	char [ MAX_CHAR_NAME_LENGTH ]		3213535	0					
ANR	3213584	Identifier	PSchar_name		3213535	1					
ANR	3213585	Identifier	MAX_CHAR_NAME_LENGTH		3213535	2					
ANR	3213586	IdentifierDeclStatement	MEM_HANDLE result = NULL ;	1586:4:51436:51460	3213535	5	True				
ANR	3213587	IdentifierDecl	result = NULL		3213535	0					
ANR	3213588	IdentifierDeclType	MEM_HANDLE		3213535	0					
ANR	3213589	Identifier	result		3213535	1					
ANR	3213590	AssignmentExpression	result = NULL		3213535	2		=			
ANR	3213591	Identifier	NULL		3213535	0					
ANR	3213592	Identifier	NULL		3213535	1					
ANR	3213593	IdentifierDeclStatement	ufst_common_font_data * d = ( ufst_common_font_data * ) ff -> server_font_data ;	1587:4:51466:51539	3213535	6	True				
ANR	3213594	IdentifierDecl	* d = ( ufst_common_font_data * ) ff -> server_font_data		3213535	0					
ANR	3213595	IdentifierDeclType	ufst_common_font_data *		3213535	0					
ANR	3213596	Identifier	d		3213535	1					
ANR	3213597	AssignmentExpression	* d = ( ufst_common_font_data * ) ff -> server_font_data		3213535	2		=			
ANR	3213598	Identifier	d		3213535	0					
ANR	3213599	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		3213535	1					
ANR	3213600	CastTarget	ufst_common_font_data *		3213535	0					
ANR	3213601	PtrMemberAccess	ff -> server_font_data		3213535	1					
ANR	3213602	Identifier	ff		3213535	0					
ANR	3213603	Identifier	server_font_data		3213535	1					
ANR	3213604	IdentifierDeclStatement	SW16 design_escapement [ 2 ] ;	1588:4:51545:51570	3213535	7	True				
ANR	3213605	IdentifierDecl	design_escapement [ 2 ]		3213535	0					
ANR	3213606	IdentifierDeclType	SW16 [ 2 ]		3213535	0					
ANR	3213607	Identifier	design_escapement		3213535	1					
ANR	3213608	PrimaryExpression	2		3213535	2					
ANR	3213609	IdentifierDeclStatement	"SW16 du_emx = 0 , du_emy = 0 ;"	1589:4:51576:51603	3213535	8	True				
ANR	3213610	IdentifierDecl	du_emx = 0		3213535	0					
ANR	3213611	IdentifierDeclType	SW16		3213535	0					
ANR	3213612	Identifier	du_emx		3213535	1					
ANR	3213613	AssignmentExpression	du_emx = 0		3213535	2		=			
ANR	3213614	Identifier	du_emx		3213535	0					
ANR	3213615	PrimaryExpression	0		3213535	1					
ANR	3213616	IdentifierDecl	du_emy = 0		3213535	1					
ANR	3213617	IdentifierDeclType	SW16		3213535	0					
ANR	3213618	Identifier	du_emy		3213535	1					
ANR	3213619	AssignmentExpression	du_emy = 0		3213535	2		=			
ANR	3213620	Identifier	du_emy		3213535	0					
ANR	3213621	PrimaryExpression	0		3213535	1					
ANR	3213622	IdentifierDeclStatement	gs_string notdef_str ;	1590:4:51609:51629	3213535	9	True				
ANR	3213623	IdentifierDecl	notdef_str		3213535	0					
ANR	3213624	IdentifierDeclType	gs_string		3213535	0					
ANR	3213625	Identifier	notdef_str		3213535	1					
ANR	3213626	IdentifierDeclStatement	"const char * notdef = "".notdef"" ;"	1591:4:51635:51665	3213535	10	True				
ANR	3213627	IdentifierDecl	"* notdef = "".notdef"""		3213535	0					
ANR	3213628	IdentifierDeclType	const char *		3213535	0					
ANR	3213629	Identifier	notdef		3213535	1					
ANR	3213630	AssignmentExpression	"* notdef = "".notdef"""		3213535	2		=			
ANR	3213631	Identifier	notdef		3213535	0					
ANR	3213632	PrimaryExpression	""".notdef"""		3213535	1					
ANR	3213633	IdentifierDeclStatement	"const char * space = ""space"" ;"	1592:4:51671:51698	3213535	11	True				
ANR	3213634	IdentifierDecl	"* space = ""space"""		3213535	0					
ANR	3213635	IdentifierDeclType	const char *		3213535	0					
ANR	3213636	Identifier	space		3213535	1					
ANR	3213637	AssignmentExpression	"* space = ""space"""		3213535	2		=			
ANR	3213638	Identifier	space		3213535	0					
ANR	3213639	PrimaryExpression	"""space"""		3213535	1					
ANR	3213640	IdentifierDeclStatement	const void * client_char_data = ff -> char_data ;	1593:4:51704:51748	3213535	12	True				
ANR	3213641	IdentifierDecl	* client_char_data = ff -> char_data		3213535	0					
ANR	3213642	IdentifierDeclType	const void *		3213535	0					
ANR	3213643	Identifier	client_char_data		3213535	1					
ANR	3213644	AssignmentExpression	* client_char_data = ff -> char_data		3213535	2		=			
ANR	3213645	Identifier	client_char_data		3213535	0					
ANR	3213646	PtrMemberAccess	ff -> char_data		3213535	1					
ANR	3213647	Identifier	ff		3213535	0					
ANR	3213648	Identifier	char_data		3213535	1					
ANR	3213649	IdentifierDeclStatement	const int client_char_data_len = ff -> char_data_len ;	1594:4:51754:51804	3213535	13	True				
ANR	3213650	IdentifierDecl	client_char_data_len = ff -> char_data_len		3213535	0					
ANR	3213651	IdentifierDeclType	const int		3213535	0					
ANR	3213652	Identifier	client_char_data_len		3213535	1					
ANR	3213653	AssignmentExpression	client_char_data_len = ff -> char_data_len		3213535	2		=			
ANR	3213654	Identifier	client_char_data_len		3213535	0					
ANR	3213655	PtrMemberAccess	ff -> char_data_len		3213535	1					
ANR	3213656	Identifier	ff		3213535	0					
ANR	3213657	Identifier	char_data_len		3213535	1					
ANR	3213658	IdentifierDeclStatement	int length ;	1595:4:51810:51820	3213535	14	True				
ANR	3213659	IdentifierDecl	length		3213535	0					
ANR	3213660	IdentifierDeclType	int		3213535	0					
ANR	3213661	Identifier	length		3213535	1					
ANR	3213662	IdentifierDeclStatement	FONTCONTEXT * fc = & r -> fc ;	1596:4:51826:51850	3213535	15	True				
ANR	3213663	IdentifierDecl	* fc = & r -> fc		3213535	0					
ANR	3213664	IdentifierDeclType	FONTCONTEXT *		3213535	0					
ANR	3213665	Identifier	fc		3213535	1					
ANR	3213666	AssignmentExpression	* fc = & r -> fc		3213535	2		=			
ANR	3213667	Identifier	fc		3213535	0					
ANR	3213668	UnaryOperationExpression	& r -> fc		3213535	1					
ANR	3213669	UnaryOperator	&		3213535	0					
ANR	3213670	PtrMemberAccess	r -> fc		3213535	1					
ANR	3213671	Identifier	r		3213535	0					
ANR	3213672	Identifier	fc		3213535	1					
ANR	3213673	IdentifierDeclStatement	UW16 glyph_width [ 2 ] ;	1597:4:51856:51875	3213535	16	True				
ANR	3213674	IdentifierDecl	glyph_width [ 2 ]		3213535	0					
ANR	3213675	IdentifierDeclType	UW16 [ 2 ]		3213535	0					
ANR	3213676	Identifier	glyph_width		3213535	1					
ANR	3213677	PrimaryExpression	2		3213535	2					
ANR	3213678	IdentifierDeclStatement	WIDTH_LIST_INPUT_ENTRY glyph_width_code ;	1598:4:51881:51920	3213535	17	True				
ANR	3213679	IdentifierDecl	glyph_width_code		3213535	0					
ANR	3213680	IdentifierDeclType	WIDTH_LIST_INPUT_ENTRY		3213535	0					
ANR	3213681	Identifier	glyph_width_code		3213535	1					
ANR	3213682	IdentifierDeclStatement	bool use_XL_format = ff -> is_mtx_skipped ;	1599:4:51926:51965	3213535	18	True				
ANR	3213683	IdentifierDecl	use_XL_format = ff -> is_mtx_skipped		3213535	0					
ANR	3213684	IdentifierDeclType	bool		3213535	0					
ANR	3213685	Identifier	use_XL_format		3213535	1					
ANR	3213686	AssignmentExpression	use_XL_format = ff -> is_mtx_skipped		3213535	2		=			
ANR	3213687	Identifier	use_XL_format		3213535	0					
ANR	3213688	PtrMemberAccess	ff -> is_mtx_skipped		3213535	1					
ANR	3213689	Identifier	ff		3213535	0					
ANR	3213690	Identifier	is_mtx_skipped		3213535	1					
ANR	3213691	ExpressionStatement	FSA_FROM_SERVER	1601:4:51972:51987	3213535	19	True				
ANR	3213692	Identifier	FSA_FROM_SERVER		3213535	0					
ANR	3213693	ExpressionStatement	design_escapement [ 0 ] = design_escapement [ 1 ] = 0	1603:4:51994:52041	3213535	20	True				
ANR	3213694	AssignmentExpression	design_escapement [ 0 ] = design_escapement [ 1 ] = 0		3213535	0		=			
ANR	3213695	ArrayIndexing	design_escapement [ 0 ]		3213535	0					
ANR	3213696	Identifier	design_escapement		3213535	0					
ANR	3213697	PrimaryExpression	0		3213535	1					
ANR	3213698	AssignmentExpression	design_escapement [ 1 ] = 0		3213535	1		=			
ANR	3213699	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3213700	Identifier	design_escapement		3213535	0					
ANR	3213701	PrimaryExpression	1		3213535	1					
ANR	3213702	PrimaryExpression	0		3213535	1					
ANR	3213703	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		3213535	21					
ANR	3213704	Condition	d -> font_type == FC_FCO_TYPE	1610:7:52304:52330	3213535	0	True				
ANR	3213705	EqualityExpression	d -> font_type == FC_FCO_TYPE		3213535	0		==			
ANR	3213706	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3213707	Identifier	d		3213535	0					
ANR	3213708	Identifier	font_type		3213535	1					
ANR	3213709	Identifier	FC_FCO_TYPE		3213535	1					
ANR	3213710	CompoundStatement		31:36:1083:1083	3213535	1					
ANR	3213711	ExpressionStatement	"memset ( & ( server -> face . ctm ) , 0x00 , sizeof ( server -> face . ctm ) )"	1611:8:52343:52402	3213535	0	True				
ANR	3213712	CallExpression	"memset ( & ( server -> face . ctm ) , 0x00 , sizeof ( server -> face . ctm ) )"		3213535	0					
ANR	3213713	Callee	memset		3213535	0					
ANR	3213714	Identifier	memset		3213535	0					
ANR	3213715	ArgumentList	& ( server -> face . ctm )		3213535	1					
ANR	3213716	Argument	& ( server -> face . ctm )		3213535	0					
ANR	3213717	UnaryOperationExpression	& ( server -> face . ctm )		3213535	0					
ANR	3213718	UnaryOperator	&		3213535	0					
ANR	3213719	MemberAccess	server -> face . ctm		3213535	1					
ANR	3213720	PtrMemberAccess	server -> face		3213535	0					
ANR	3213721	Identifier	server		3213535	0					
ANR	3213722	Identifier	face		3213535	1					
ANR	3213723	Identifier	ctm		3213535	1					
ANR	3213724	Argument	0x00		3213535	1					
ANR	3213725	PrimaryExpression	0x00		3213535	0					
ANR	3213726	Argument	sizeof ( server -> face . ctm )		3213535	2					
ANR	3213727	SizeofExpression	sizeof ( server -> face . ctm )		3213535	0					
ANR	3213728	Sizeof	sizeof		3213535	0					
ANR	3213729	MemberAccess	server -> face . ctm		3213535	1					
ANR	3213730	PtrMemberAccess	server -> face		3213535	0					
ANR	3213731	Identifier	server		3213535	0					
ANR	3213732	Identifier	face		3213535	1					
ANR	3213733	Identifier	ctm		3213535	1					
ANR	3213734	IfStatement	if ( ff -> is_type1 )		3213535	22					
ANR	3213735	Condition	ff -> is_type1	1614:8:52419:52430	3213535	0	True				
ANR	3213736	PtrMemberAccess	ff -> is_type1		3213535	0					
ANR	3213737	Identifier	ff		3213535	0					
ANR	3213738	Identifier	is_type1		3213535	1					
ANR	3213739	CompoundStatement		35:22:1183:1183	3213535	1					
ANR	3213740	ExpressionStatement	ff -> need_decrypt = false	1620:8:52721:52745	3213535	0	True				
ANR	3213741	AssignmentExpression	ff -> need_decrypt = false		3213535	0		=			
ANR	3213742	PtrMemberAccess	ff -> need_decrypt		3213535	0					
ANR	3213743	Identifier	ff		3213535	0					
ANR	3213744	Identifier	need_decrypt		3213535	1					
ANR	3213745	Identifier	false		3213535	1					
ANR	3213746	ExpressionStatement	"length = ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"	1621:8:52755:52808	3213535	1	True				
ANR	3213747	AssignmentExpression	"length = ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"		3213535	0		=			
ANR	3213748	Identifier	length		3213535	0					
ANR	3213749	CallExpression	"ff -> get_glyph ( ff , c -> char_codes [ 0 ] , NULL , 0 )"		3213535	1					
ANR	3213750	Callee	ff -> get_glyph		3213535	0					
ANR	3213751	PtrMemberAccess	ff -> get_glyph		3213535	0					
ANR	3213752	Identifier	ff		3213535	0					
ANR	3213753	Identifier	get_glyph		3213535	1					
ANR	3213754	ArgumentList	ff		3213535	1					
ANR	3213755	Argument	ff		3213535	0					
ANR	3213756	Identifier	ff		3213535	0					
ANR	3213757	Argument	c -> char_codes [ 0 ]		3213535	1					
ANR	3213758	ArrayIndexing	c -> char_codes [ 0 ]		3213535	0					
ANR	3213759	PtrMemberAccess	c -> char_codes		3213535	0					
ANR	3213760	Identifier	c		3213535	0					
ANR	3213761	Identifier	char_codes		3213535	1					
ANR	3213762	PrimaryExpression	0		3213535	1					
ANR	3213763	Argument	NULL		3213535	2					
ANR	3213764	Identifier	NULL		3213535	0					
ANR	3213765	Argument	0		3213535	3					
ANR	3213766	PrimaryExpression	0		3213535	0					
ANR	3213767	IfStatement	if ( length == - 1 )		3213535	2					
ANR	3213768	Condition	length == - 1	1622:12:52822:52833	3213535	0	True				
ANR	3213769	EqualityExpression	length == - 1		3213535	0		==			
ANR	3213770	Identifier	length		3213535	0					
ANR	3213771	UnaryOperationExpression	- 1		3213535	1					
ANR	3213772	UnaryOperator	-		3213535	0					
ANR	3213773	PrimaryExpression	1		3213535	1					
ANR	3213774	CompoundStatement		43:26:1586:1586	3213535	1					
ANR	3213775	ReturnStatement	return ( c -> char_codes [ 0 ] + 1 ) ;	1623:12:52850:52879	3213535	0	True				
ANR	3213776	AdditiveExpression	c -> char_codes [ 0 ] + 1		3213535	0		+			
ANR	3213777	ArrayIndexing	c -> char_codes [ 0 ]		3213535	0					
ANR	3213778	PtrMemberAccess	c -> char_codes		3213535	0					
ANR	3213779	Identifier	c		3213535	0					
ANR	3213780	Identifier	char_codes		3213535	1					
ANR	3213781	PrimaryExpression	0		3213535	1					
ANR	3213782	PrimaryExpression	1		3213535	1					
ANR	3213783	ExpressionStatement	ff -> need_decrypt = true	1626:4:52901:52924	3213535	23	True				
ANR	3213784	AssignmentExpression	ff -> need_decrypt = true		3213535	0		=			
ANR	3213785	PtrMemberAccess	ff -> need_decrypt		3213535	0					
ANR	3213786	Identifier	ff		3213535	0					
ANR	3213787	Identifier	need_decrypt		3213535	1					
ANR	3213788	Identifier	true		3213535	1					
ANR	3213789	ExpressionStatement	"memset ( metrics , 0 , sizeof ( * metrics ) )"	1627:4:52930:52966	3213535	24	True				
ANR	3213790	CallExpression	"memset ( metrics , 0 , sizeof ( * metrics ) )"		3213535	0					
ANR	3213791	Callee	memset		3213535	0					
ANR	3213792	Identifier	memset		3213535	0					
ANR	3213793	ArgumentList	metrics		3213535	1					
ANR	3213794	Argument	metrics		3213535	0					
ANR	3213795	Identifier	metrics		3213535	0					
ANR	3213796	Argument	0		3213535	1					
ANR	3213797	PrimaryExpression	0		3213535	0					
ANR	3213798	Argument	sizeof ( * metrics )		3213535	2					
ANR	3213799	SizeofExpression	sizeof ( * metrics )		3213535	0					
ANR	3213800	Sizeof	sizeof		3213535	0					
ANR	3213801	UnaryOperationExpression	* metrics		3213535	1					
ANR	3213802	UnaryOperator	*		3213535	0					
ANR	3213803	Identifier	metrics		3213535	1					
ANR	3213804	ExpressionStatement	metrics -> bbox_x1 = - 1	1628:4:52972:52993	3213535	25	True				
ANR	3213805	AssignmentExpression	metrics -> bbox_x1 = - 1		3213535	0		=			
ANR	3213806	PtrMemberAccess	metrics -> bbox_x1		3213535	0					
ANR	3213807	Identifier	metrics		3213535	0					
ANR	3213808	Identifier	bbox_x1		3213535	1					
ANR	3213809	UnaryOperationExpression	- 1		3213535	1					
ANR	3213810	UnaryOperator	-		3213535	0					
ANR	3213811	PrimaryExpression	1		3213535	1					
ANR	3213812	IfStatement	if ( ff -> is_type1 && ! ff -> is_cid )		3213535	26					
ANR	3213813	Condition	ff -> is_type1 && ! ff -> is_cid	1630:8:53004:53030	3213535	0	True				
ANR	3213814	AndExpression	ff -> is_type1 && ! ff -> is_cid		3213535	0		&&			
ANR	3213815	PtrMemberAccess	ff -> is_type1		3213535	0					
ANR	3213816	Identifier	ff		3213535	0					
ANR	3213817	Identifier	is_type1		3213535	1					
ANR	3213818	UnaryOperationExpression	! ff -> is_cid		3213535	1					
ANR	3213819	UnaryOperator	!		3213535	0					
ANR	3213820	PtrMemberAccess	ff -> is_cid		3213535	1					
ANR	3213821	Identifier	ff		3213535	0					
ANR	3213822	Identifier	is_cid		3213535	1					
ANR	3213823	CompoundStatement		52:8:1793:1850	3213535	1					
ANR	3213824	IdentifierDeclStatement	"int len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 ) ;"	1631:8:53043:53100	3213535	0	True				
ANR	3213825	IdentifierDecl	"len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		3213535	0					
ANR	3213826	IdentifierDeclType	int		3213535	0					
ANR	3213827	Identifier	len		3213535	1					
ANR	3213828	AssignmentExpression	"len = min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		3213535	2		=			
ANR	3213829	Identifier	len		3213535	0					
ANR	3213830	CallExpression	"min ( ff -> char_data_len , sizeof ( PSchar_name ) - 1 )"		3213535	1					
ANR	3213831	Callee	min		3213535	0					
ANR	3213832	Identifier	min		3213535	0					
ANR	3213833	ArgumentList	ff -> char_data_len		3213535	1					
ANR	3213834	Argument	ff -> char_data_len		3213535	0					
ANR	3213835	PtrMemberAccess	ff -> char_data_len		3213535	0					
ANR	3213836	Identifier	ff		3213535	0					
ANR	3213837	Identifier	char_data_len		3213535	1					
ANR	3213838	Argument	sizeof ( PSchar_name ) - 1		3213535	1					
ANR	3213839	AdditiveExpression	sizeof ( PSchar_name ) - 1		3213535	0		-			
ANR	3213840	SizeofExpression	sizeof ( PSchar_name )		3213535	0					
ANR	3213841	Sizeof	sizeof		3213535	0					
ANR	3213842	SizeofOperand	PSchar_name		3213535	1					
ANR	3213843	PrimaryExpression	1		3213535	1					
ANR	3213844	ExpressionStatement	"memcpy ( PSchar_name , ff -> char_data , len )"	1633:8:53111:53150	3213535	1	True				
ANR	3213845	CallExpression	"memcpy ( PSchar_name , ff -> char_data , len )"		3213535	0					
ANR	3213846	Callee	memcpy		3213535	0					
ANR	3213847	Identifier	memcpy		3213535	0					
ANR	3213848	ArgumentList	PSchar_name		3213535	1					
ANR	3213849	Argument	PSchar_name		3213535	0					
ANR	3213850	Identifier	PSchar_name		3213535	0					
ANR	3213851	Argument	ff -> char_data		3213535	1					
ANR	3213852	PtrMemberAccess	ff -> char_data		3213535	0					
ANR	3213853	Identifier	ff		3213535	0					
ANR	3213854	Identifier	char_data		3213535	1					
ANR	3213855	Argument	len		3213535	2					
ANR	3213856	Identifier	len		3213535	0					
ANR	3213857	ExpressionStatement	PSchar_name [ len ] = 0	1634:8:53160:53180	3213535	2	True				
ANR	3213858	AssignmentExpression	PSchar_name [ len ] = 0		3213535	0		=			
ANR	3213859	ArrayIndexing	PSchar_name [ len ]		3213535	0					
ANR	3213860	Identifier	PSchar_name		3213535	0					
ANR	3213861	Identifier	len		3213535	1					
ANR	3213862	PrimaryExpression	0		3213535	1					
ANR	3213863	ElseStatement	else		3213535	0					
ANR	3213864	CompoundStatement		57:9:1947:1947	3213535	0					
ANR	3213865	ExpressionStatement	"make_asciiz_char_name ( PSchar_name , sizeof ( PSchar_name ) , c )"	1637:8:53207:53265	3213535	0	True				
ANR	3213866	CallExpression	"make_asciiz_char_name ( PSchar_name , sizeof ( PSchar_name ) , c )"		3213535	0					
ANR	3213867	Callee	make_asciiz_char_name		3213535	0					
ANR	3213868	Identifier	make_asciiz_char_name		3213535	0					
ANR	3213869	ArgumentList	PSchar_name		3213535	1					
ANR	3213870	Argument	PSchar_name		3213535	0					
ANR	3213871	Identifier	PSchar_name		3213535	0					
ANR	3213872	Argument	sizeof ( PSchar_name )		3213535	1					
ANR	3213873	SizeofExpression	sizeof ( PSchar_name )		3213535	0					
ANR	3213874	Sizeof	sizeof		3213535	0					
ANR	3213875	SizeofOperand	PSchar_name		3213535	1					
ANR	3213876	Argument	c		3213535	2					
ANR	3213877	Identifier	c		3213535	0					
ANR	3213878	ExpressionStatement	"CGIFchIdptr ( FSA & cc , PSchar_name )"	1640:4:53278:53312	3213535	27	True				
ANR	3213879	CallExpression	"CGIFchIdptr ( FSA & cc , PSchar_name )"		3213535	0					
ANR	3213880	Callee	CGIFchIdptr		3213535	0					
ANR	3213881	Identifier	CGIFchIdptr		3213535	0					
ANR	3213882	ArgumentList	FSA & cc		3213535	1					
ANR	3213883	Argument	FSA & cc		3213535	0					
ANR	3213884	BitAndExpression	FSA & cc		3213535	0		&			
ANR	3213885	Identifier	FSA		3213535	0					
ANR	3213886	Identifier	cc		3213535	1					
ANR	3213887	Argument	PSchar_name		3213535	1					
ANR	3213888	Identifier	PSchar_name		3213535	0					
ANR	3213889	CompoundStatement		62:4:2117:2117	3213535	28					
ANR	3213890	ExpressionStatement	pIFS -> fcCur . format &= ~FC_OUTPUT_MASK	1643:8:53587:53624	3213535	0	True				
ANR	3213891	AssignmentExpression	pIFS -> fcCur . format &= ~FC_OUTPUT_MASK		3213535	0		&=			
ANR	3213892	MemberAccess	pIFS -> fcCur . format		3213535	0					
ANR	3213893	PtrMemberAccess	pIFS -> fcCur		3213535	0					
ANR	3213894	Identifier	pIFS		3213535	0					
ANR	3213895	Identifier	fcCur		3213535	1					
ANR	3213896	Identifier	format		3213535	1					
ANR	3213897	Identifier	~FC_OUTPUT_MASK		3213535	1					
ANR	3213898	ExpressionStatement	pIFS -> fcCur . format |= format	1644:8:53634:53662	3213535	1	True				
ANR	3213899	AssignmentExpression	pIFS -> fcCur . format |= format		3213535	0		|=			
ANR	3213900	MemberAccess	pIFS -> fcCur . format		3213535	0					
ANR	3213901	PtrMemberAccess	pIFS -> fcCur		3213535	0					
ANR	3213902	Identifier	pIFS		3213535	0					
ANR	3213903	Identifier	fcCur		3213535	1					
ANR	3213904	Identifier	format		3213535	1					
ANR	3213905	Identifier	format		3213535	1					
ANR	3213906	ExpressionStatement	r -> bRaster = FALSE	1646:4:53674:53692	3213535	29	True				
ANR	3213907	AssignmentExpression	r -> bRaster = FALSE		3213535	0		=			
ANR	3213908	PtrMemberAccess	r -> bRaster		3213535	0					
ANR	3213909	Identifier	r		3213535	0					
ANR	3213910	Identifier	bRaster		3213535	1					
ANR	3213911	Identifier	FALSE		3213535	1					
ANR	3213912	ExpressionStatement	r -> ff = ff	1647:4:53698:53708	3213535	30	True				
ANR	3213913	AssignmentExpression	r -> ff = ff		3213535	0		=			
ANR	3213914	PtrMemberAccess	r -> ff		3213535	0					
ANR	3213915	Identifier	r		3213535	0					
ANR	3213916	Identifier	ff		3213535	1					
ANR	3213917	Identifier	ff		3213535	1					
ANR	3213918	ExpressionStatement	r -> callback_error = 0	1648:4:53714:53735	3213535	31	True				
ANR	3213919	AssignmentExpression	r -> callback_error = 0		3213535	0		=			
ANR	3213920	PtrMemberAccess	r -> callback_error		3213535	0					
ANR	3213921	Identifier	r		3213535	0					
ANR	3213922	Identifier	callback_error		3213535	1					
ANR	3213923	PrimaryExpression	0		3213535	1					
ANR	3213924	ExpressionStatement	r -> sb_x = c -> sb_x	1649:4:53741:53758	3213535	32	True				
ANR	3213925	AssignmentExpression	r -> sb_x = c -> sb_x		3213535	0		=			
ANR	3213926	PtrMemberAccess	r -> sb_x		3213535	0					
ANR	3213927	Identifier	r		3213535	0					
ANR	3213928	Identifier	sb_x		3213535	1					
ANR	3213929	PtrMemberAccess	c -> sb_x		3213535	1					
ANR	3213930	Identifier	c		3213535	0					
ANR	3213931	Identifier	sb_x		3213535	1					
ANR	3213932	ExpressionStatement	r -> aw_x = c -> aw_x	1650:4:53764:53781	3213535	33	True				
ANR	3213933	AssignmentExpression	r -> aw_x = c -> aw_x		3213535	0		=			
ANR	3213934	PtrMemberAccess	r -> aw_x		3213535	0					
ANR	3213935	Identifier	r		3213535	0					
ANR	3213936	Identifier	aw_x		3213535	1					
ANR	3213937	PtrMemberAccess	c -> aw_x		3213535	1					
ANR	3213938	Identifier	c		3213535	0					
ANR	3213939	Identifier	aw_x		3213535	1					
ANR	3213940	ExpressionStatement	r -> metrics_type = c -> metrics_type	1651:4:53787:53820	3213535	34	True				
ANR	3213941	AssignmentExpression	r -> metrics_type = c -> metrics_type		3213535	0		=			
ANR	3213942	PtrMemberAccess	r -> metrics_type		3213535	0					
ANR	3213943	Identifier	r		3213535	0					
ANR	3213944	Identifier	metrics_type		3213535	1					
ANR	3213945	PtrMemberAccess	c -> metrics_type		3213535	1					
ANR	3213946	Identifier	c		3213535	0					
ANR	3213947	Identifier	metrics_type		3213535	1					
ANR	3213948	IfStatement	if ( d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE )		3213535	35					
ANR	3213949	Condition	d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE	1652:8:53830:53909	3213535	0	True				
ANR	3213950	AndExpression	d -> font_type == FC_FCO_TYPE && r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE		3213535	0		&&			
ANR	3213951	EqualityExpression	d -> font_type == FC_FCO_TYPE		3213535	0		==			
ANR	3213952	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3213953	Identifier	d		3213535	0					
ANR	3213954	Identifier	font_type		3213535	1					
ANR	3213955	Identifier	FC_FCO_TYPE		3213535	1					
ANR	3213956	BitAndExpression	r -> fc . ExtndFlags & EF_SUBSTHOLLOWBOX_TYPE		3213535	1		&			
ANR	3213957	MemberAccess	r -> fc . ExtndFlags		3213535	0					
ANR	3213958	PtrMemberAccess	r -> fc		3213535	0					
ANR	3213959	Identifier	r		3213535	0					
ANR	3213960	Identifier	fc		3213535	1					
ANR	3213961	Identifier	ExtndFlags		3213535	1					
ANR	3213962	Identifier	EF_SUBSTHOLLOWBOX_TYPE		3213535	1					
ANR	3213963	CompoundStatement		74:54:2662:2662	3213535	1					
ANR	3213964	IfStatement	"if ( c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 ) )"		3213535	0					
ANR	3213965	Condition	"c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"	1654:12:53926:54024	3213535	0	True				
ANR	3213966	AndExpression	"c -> char_name != NULL && c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"		3213535	0		&&			
ANR	3213967	EqualityExpression	c -> char_name != NULL		3213535	0		!=			
ANR	3213968	PtrMemberAccess	c -> char_name		3213535	0					
ANR	3213969	Identifier	c		3213535	0					
ANR	3213970	Identifier	char_name		3213535	1					
ANR	3213971	Identifier	NULL		3213535	1					
ANR	3213972	AndExpression	"c -> char_name_length == 7 && ! memcmp ( c -> char_name , "".notdef"" , 7 )"		3213535	1		&&			
ANR	3213973	EqualityExpression	c -> char_name_length == 7		3213535	0		==			
ANR	3213974	PtrMemberAccess	c -> char_name_length		3213535	0					
ANR	3213975	Identifier	c		3213535	0					
ANR	3213976	Identifier	char_name_length		3213535	1					
ANR	3213977	PrimaryExpression	7		3213535	1					
ANR	3213978	UnaryOperationExpression	"! memcmp ( c -> char_name , "".notdef"" , 7 )"		3213535	1					
ANR	3213979	UnaryOperator	!		3213535	0					
ANR	3213980	CallExpression	"memcmp ( c -> char_name , "".notdef"" , 7 )"		3213535	1					
ANR	3213981	Callee	memcmp		3213535	0					
ANR	3213982	Identifier	memcmp		3213535	0					
ANR	3213983	ArgumentList	c -> char_name		3213535	1					
ANR	3213984	Argument	c -> char_name		3213535	0					
ANR	3213985	PtrMemberAccess	c -> char_name		3213535	0					
ANR	3213986	Identifier	c		3213535	0					
ANR	3213987	Identifier	char_name		3213535	1					
ANR	3213988	Argument	""".notdef"""		3213535	1					
ANR	3213989	PrimaryExpression	""".notdef"""		3213535	0					
ANR	3213990	Argument	7		3213535	2					
ANR	3213991	PrimaryExpression	7		3213535	0					
ANR	3213992	CompoundStatement		76:52:2777:2777	3213535	1					
ANR	3213993	ExpressionStatement	cc = 32	1660:12:54285:54292	3213535	0	True				
ANR	3213994	AssignmentExpression	cc = 32		3213535	0		=			
ANR	3213995	Identifier	cc		3213535	0					
ANR	3213996	PrimaryExpression	32		3213535	1					
ANR	3213997	ExpressionStatement	static_server_ptr_for_ufst_callback = r	1664:4:54334:54373	3213535	36	True				
ANR	3213998	AssignmentExpression	static_server_ptr_for_ufst_callback = r		3213535	0		=			
ANR	3213999	Identifier	static_server_ptr_for_ufst_callback		3213535	0					
ANR	3214000	Identifier	r		3213535	1					
ANR	3214001	ExpressionStatement	pIFS -> gpps = NULL	1668:4:54400:54417	3213535	37	True				
ANR	3214002	AssignmentExpression	pIFS -> gpps = NULL		3213535	0		=			
ANR	3214003	PtrMemberAccess	pIFS -> gpps		3213535	0					
ANR	3214004	Identifier	pIFS		3213535	0					
ANR	3214005	Identifier	gpps		3213535	1					
ANR	3214006	Identifier	NULL		3213535	1					
ANR	3214007	IfStatement	if ( d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE )		3213535	38					
ANR	3214008	Condition	d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE	1671:8:54435:54491	3213535	0	True				
ANR	3214009	OrExpression	d -> font_type == FC_TT_TYPE || d -> font_type == FC_FCO_TYPE		3213535	0		||			
ANR	3214010	EqualityExpression	d -> font_type == FC_TT_TYPE		3213535	0		==			
ANR	3214011	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3214012	Identifier	d		3213535	0					
ANR	3214013	Identifier	font_type		3213535	1					
ANR	3214014	Identifier	FC_TT_TYPE		3213535	1					
ANR	3214015	EqualityExpression	d -> font_type == FC_FCO_TYPE		3213535	1		==			
ANR	3214016	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3214017	Identifier	d		3213535	0					
ANR	3214018	Identifier	font_type		3213535	1					
ANR	3214019	Identifier	FC_FCO_TYPE		3213535	1					
ANR	3214020	CompoundStatement		92:67:3244:3244	3213535	1					
ANR	3214021	ExpressionStatement	glyph_width_code . CharType . TT_unicode = cc	1672:8:54504:54545	3213535	0	True				
ANR	3214022	AssignmentExpression	glyph_width_code . CharType . TT_unicode = cc		3213535	0		=			
ANR	3214023	MemberAccess	glyph_width_code . CharType . TT_unicode		3213535	0					
ANR	3214024	MemberAccess	glyph_width_code . CharType		3213535	0					
ANR	3214025	Identifier	glyph_width_code		3213535	0					
ANR	3214026	Identifier	CharType		3213535	1					
ANR	3214027	Identifier	TT_unicode		3213535	1					
ANR	3214028	Identifier	cc		3213535	1					
ANR	3214029	IfStatement	if ( use_XL_format || d -> font_type == FC_PST1_TYPE )		3213535	39					
ANR	3214030	Condition	use_XL_format || d -> font_type == FC_PST1_TYPE	1675:8:54562:54606	3213535	0	True				
ANR	3214031	OrExpression	use_XL_format || d -> font_type == FC_PST1_TYPE		3213535	0		||			
ANR	3214032	Identifier	use_XL_format		3213535	0					
ANR	3214033	EqualityExpression	d -> font_type == FC_PST1_TYPE		3213535	1		==			
ANR	3214034	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3214035	Identifier	d		3213535	0					
ANR	3214036	Identifier	font_type		3213535	1					
ANR	3214037	Identifier	FC_PST1_TYPE		3213535	1					
ANR	3214038	CompoundStatement		96:55:3359:3359	3213535	1					
ANR	3214039	ExpressionStatement	code = 0	1676:8:54619:54627	3213535	0	True				
ANR	3214040	AssignmentExpression	code = 0		3213535	0		=			
ANR	3214041	Identifier	code		3213535	0					
ANR	3214042	PrimaryExpression	0		3213535	1					
ANR	3214043	ExpressionStatement	glyph_width [ 0 ] = glyph_width [ 1 ] = 0	1677:8:54637:54672	3213535	1	True				
ANR	3214044	AssignmentExpression	glyph_width [ 0 ] = glyph_width [ 1 ] = 0		3213535	0		=			
ANR	3214045	ArrayIndexing	glyph_width [ 0 ]		3213535	0					
ANR	3214046	Identifier	glyph_width		3213535	0					
ANR	3214047	PrimaryExpression	0		3213535	1					
ANR	3214048	AssignmentExpression	glyph_width [ 1 ] = 0		3213535	1		=			
ANR	3214049	ArrayIndexing	glyph_width [ 1 ]		3213535	0					
ANR	3214050	Identifier	glyph_width		3213535	0					
ANR	3214051	PrimaryExpression	1		3213535	1					
ANR	3214052	PrimaryExpression	0		3213535	1					
ANR	3214053	ElseStatement	else		3213535	0					
ANR	3214054	CompoundStatement		100:9:3439:3439	3213535	0					
ANR	3214055	ExpressionStatement	"code = CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"	1683:8:54856:54934	3213535	0	True				
ANR	3214056	AssignmentExpression	"code = CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"		3213535	0		=			
ANR	3214057	Identifier	code		3213535	0					
ANR	3214058	CallExpression	"CGIFFwidth2 ( FSA & glyph_width_code , 1 , sizeof ( glyph_width ) , glyph_width )"		3213535	1					
ANR	3214059	Callee	CGIFFwidth2		3213535	0					
ANR	3214060	Identifier	CGIFFwidth2		3213535	0					
ANR	3214061	ArgumentList	FSA & glyph_width_code		3213535	1					
ANR	3214062	Argument	FSA & glyph_width_code		3213535	0					
ANR	3214063	BitAndExpression	FSA & glyph_width_code		3213535	0		&			
ANR	3214064	Identifier	FSA		3213535	0					
ANR	3214065	Identifier	glyph_width_code		3213535	1					
ANR	3214066	Argument	1		3213535	1					
ANR	3214067	PrimaryExpression	1		3213535	0					
ANR	3214068	Argument	sizeof ( glyph_width )		3213535	2					
ANR	3214069	SizeofExpression	sizeof ( glyph_width )		3213535	0					
ANR	3214070	Sizeof	sizeof		3213535	0					
ANR	3214071	SizeofOperand	glyph_width		3213535	1					
ANR	3214072	Argument	glyph_width		3213535	3					
ANR	3214073	Identifier	glyph_width		3213535	0					
ANR	3214074	IfStatement	if ( code >= 0 )		3213535	40					
ANR	3214075	Condition	code >= 0	1686:8:54955:54963	3213535	0	True				
ANR	3214076	RelationalExpression	code >= 0		3213535	0		>=			
ANR	3214077	Identifier	code		3213535	0					
ANR	3214078	PrimaryExpression	0		3213535	1					
ANR	3214079	CompoundStatement		107:19:3716:3716	3213535	1					
ANR	3214080	Statement	code	1687:8:54976:54979	3213535	0	True				
ANR	3214081	Statement	=	1687:13:54981:54981	3213535	1	True				
ANR	3214082	Statement	CGIFchar_handle	1687:15:54983:54997	3213535	2	True				
ANR	3214083	Statement	(	1687:30:54998:54998	3213535	3	True				
ANR	3214084	Statement	FSA	1687:31:54999:55001	3213535	4	True				
ANR	3214085	Statement	cc	1687:35:55003:55004	3213535	5	True				
ANR	3214086	Statement	","	1687:37:55005:55005	3213535	6	True				
ANR	3214087	Statement	&	1687:39:55007:55007	3213535	7	True				
ANR	3214088	Statement	result	1687:40:55008:55013	3213535	8	True				
ANR	3214089	Statement	","	1687:46:55014:55014	3213535	9	True				
ANR	3214090	Statement	(	1687:48:55016:55016	3213535	10	True				
ANR	3214091	Statement	SW16	1687:49:55017:55020	3213535	11	True				
ANR	3214092	Statement	)	1687:53:55021:55021	3213535	12	True				
ANR	3214093	Statement	0	1687:55:55023:55023	3213535	13	True				
ANR	3214094	Statement	)	1687:56:55024:55024	3213535	14	True				
ANR	3214095	ExpressionStatement		1687:57:55025:55025	3213535	15	True				
ANR	3214096	ElseStatement	else		3213535	0					
ANR	3214097	CompoundStatement		110:9:3792:3792	3213535	0					
ANR	3214098	ExpressionStatement	result = NULL	1690:8:55052:55065	3213535	0	True				
ANR	3214099	AssignmentExpression	result = NULL		3213535	0		=			
ANR	3214100	Identifier	result		3213535	0					
ANR	3214101	Identifier	NULL		3213535	1					
ANR	3214102	Statement	if	1693:4:55078:55079	3213535	41	True				
ANR	3214103	Statement	(	1693:7:55081:55081	3213535	42	True				
ANR	3214104	Statement	code	1693:8:55082:55085	3213535	43	True				
ANR	3214105	Statement	==	1693:13:55087:55088	3213535	44	True				
ANR	3214106	Statement	ERR_TT_UNDEFINED_INSTRUCTION	1693:16:55090:55117	3213535	45	True				
ANR	3214107	Statement	||	1695:8:55155:55156	3213535	46	True				
ANR	3214108	Statement	(	1695:11:55158:55158	3213535	47	True				
ANR	3214109	Statement	code	1695:12:55159:55162	3213535	48	True				
ANR	3214110	Statement	>=	1695:17:55164:55165	3213535	49	True				
ANR	3214111	Statement	ERR_TT_NULL_FUNCDEF	1695:20:55167:55185	3213535	50	True				
ANR	3214112	Statement	&&	1695:40:55187:55188	3213535	51	True				
ANR	3214113	Statement	code	1695:43:55190:55193	3213535	52	True				
ANR	3214114	Statement	<=	1695:48:55195:55196	3213535	53	True				
ANR	3214115	Statement	ERR_TT_STACK_OUT_OF_RANGE	1695:51:55198:55222	3213535	54	True				
ANR	3214116	Statement	)	1695:76:55223:55223	3213535	55	True				
ANR	3214117	Statement	)	1697:8:55243:55243	3213535	56	True				
ANR	3214118	CompoundStatement		119:8:4005:4037	3213535	57					
ANR	3214119	IdentifierDeclStatement	int savehint = FC_DONTHINTTT ( fc ) ;	1698:8:55255:55287	3213535	0	True				
ANR	3214120	IdentifierDecl	savehint = FC_DONTHINTTT ( fc )		3213535	0					
ANR	3214121	IdentifierDeclType	int		3213535	0					
ANR	3214122	Identifier	savehint		3213535	1					
ANR	3214123	AssignmentExpression	savehint = FC_DONTHINTTT ( fc )		3213535	2		=			
ANR	3214124	Identifier	savehint		3213535	0					
ANR	3214125	CallExpression	FC_DONTHINTTT ( fc )		3213535	1					
ANR	3214126	Callee	FC_DONTHINTTT		3213535	0					
ANR	3214127	Identifier	FC_DONTHINTTT		3213535	0					
ANR	3214128	ArgumentList	fc		3213535	1					
ANR	3214129	Argument	fc		3213535	0					
ANR	3214130	Identifier	fc		3213535	0					
ANR	3214131	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1700:8:55298:55328	3213535	1	True				
ANR	3214132	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		3213535	0		|=			
ANR	3214133	PtrMemberAccess	fc -> ExtndFlags		3213535	0					
ANR	3214134	Identifier	fc		3213535	0					
ANR	3214135	Identifier	ExtndFlags		3213535	1					
ANR	3214136	Identifier	EF_TT_NOHINT		3213535	1					
ANR	3214137	Statement	(	1702:8:55339:55339	3213535	2	True				
ANR	3214138	Statement	void	1702:9:55340:55343	3213535	3	True				
ANR	3214139	Statement	)	1702:13:55344:55344	3213535	4	True				
ANR	3214140	Statement	CGIFfont	1702:14:55345:55352	3213535	5	True				
ANR	3214141	Statement	(	1702:22:55353:55353	3213535	6	True				
ANR	3214142	Statement	FSA	1702:23:55354:55356	3213535	7	True				
ANR	3214143	Statement	fc	1702:27:55358:55359	3213535	8	True				
ANR	3214144	Statement	)	1702:29:55360:55360	3213535	9	True				
ANR	3214145	ExpressionStatement		1702:30:55361:55361	3213535	10	True				
ANR	3214146	Statement	code	1703:8:55371:55374	3213535	11	True				
ANR	3214147	Statement	=	1703:13:55376:55376	3213535	12	True				
ANR	3214148	Statement	CGIFchar_handle	1703:15:55378:55392	3213535	13	True				
ANR	3214149	Statement	(	1703:30:55393:55393	3213535	14	True				
ANR	3214150	Statement	FSA	1703:31:55394:55396	3213535	15	True				
ANR	3214151	Statement	cc	1703:35:55398:55399	3213535	16	True				
ANR	3214152	Statement	","	1703:37:55400:55400	3213535	17	True				
ANR	3214153	Statement	&	1703:39:55402:55402	3213535	18	True				
ANR	3214154	Statement	result	1703:40:55403:55408	3213535	19	True				
ANR	3214155	Statement	","	1703:46:55409:55409	3213535	20	True				
ANR	3214156	Statement	(	1703:48:55411:55411	3213535	21	True				
ANR	3214157	Statement	SW16	1703:49:55412:55415	3213535	22	True				
ANR	3214158	Statement	)	1703:53:55416:55416	3213535	23	True				
ANR	3214159	Statement	0	1703:55:55418:55418	3213535	24	True				
ANR	3214160	Statement	)	1703:56:55419:55419	3213535	25	True				
ANR	3214161	ExpressionStatement		1703:57:55420:55420	3213535	26	True				
ANR	3214162	ExpressionStatement	fc -> ExtndFlags |= savehint	1705:8:55431:55457	3213535	27	True				
ANR	3214163	AssignmentExpression	fc -> ExtndFlags |= savehint		3213535	0		|=			
ANR	3214164	PtrMemberAccess	fc -> ExtndFlags		3213535	0					
ANR	3214165	Identifier	fc		3213535	0					
ANR	3214166	Identifier	ExtndFlags		3213535	1					
ANR	3214167	Identifier	savehint		3213535	1					
ANR	3214168	Statement	(	1706:8:55467:55467	3213535	28	True				
ANR	3214169	Statement	void	1706:9:55468:55471	3213535	29	True				
ANR	3214170	Statement	)	1706:13:55472:55472	3213535	30	True				
ANR	3214171	Statement	CGIFfont	1706:14:55473:55480	3213535	31	True				
ANR	3214172	Statement	(	1706:22:55481:55481	3213535	32	True				
ANR	3214173	Statement	FSA	1706:23:55482:55484	3213535	33	True				
ANR	3214174	Statement	fc	1706:27:55486:55487	3213535	34	True				
ANR	3214175	Statement	)	1706:29:55488:55488	3213535	35	True				
ANR	3214176	ExpressionStatement		1706:30:55489:55489	3213535	36	True				
ANR	3214177	IfStatement	if ( ( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big ) )		3213535	58					
ANR	3214178	Condition	( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big )	1708:8:55505:55675	3213535	0	True				
ANR	3214179	OrExpression	( result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big ) || ( code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big )		3213535	0		||			
ANR	3214180	AndExpression	result == NULL && code != ERR_bm_buff && code != ERR_bm_too_big		3213535	0		&&			
ANR	3214181	EqualityExpression	result == NULL		3213535	0		==			
ANR	3214182	Identifier	result		3213535	0					
ANR	3214183	Identifier	NULL		3213535	1					
ANR	3214184	AndExpression	code != ERR_bm_buff && code != ERR_bm_too_big		3213535	1		&&			
ANR	3214185	EqualityExpression	code != ERR_bm_buff		3213535	0		!=			
ANR	3214186	Identifier	code		3213535	0					
ANR	3214187	Identifier	ERR_bm_buff		3213535	1					
ANR	3214188	EqualityExpression	code != ERR_bm_too_big		3213535	1		!=			
ANR	3214189	Identifier	code		3213535	0					
ANR	3214190	Identifier	ERR_bm_too_big		3213535	1					
ANR	3214191	AndExpression	code && code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big		3213535	1		&&			
ANR	3214192	Identifier	code		3213535	0					
ANR	3214193	AndExpression	code != ERR_fixed_space && code != ERR_bm_buff && code != ERR_bm_too_big		3213535	1		&&			
ANR	3214194	EqualityExpression	code != ERR_fixed_space		3213535	0		!=			
ANR	3214195	Identifier	code		3213535	0					
ANR	3214196	Identifier	ERR_fixed_space		3213535	1					
ANR	3214197	AndExpression	code != ERR_bm_buff && code != ERR_bm_too_big		3213535	1		&&			
ANR	3214198	EqualityExpression	code != ERR_bm_buff		3213535	0		!=			
ANR	3214199	Identifier	code		3213535	0					
ANR	3214200	Identifier	ERR_bm_buff		3213535	1					
ANR	3214201	EqualityExpression	code != ERR_bm_too_big		3213535	1		!=			
ANR	3214202	Identifier	code		3213535	0					
ANR	3214203	Identifier	ERR_bm_too_big		3213535	1					
ANR	3214204	CompoundStatement		134:8:4562:4594	3213535	1					
ANR	3214205	IdentifierDeclStatement	"UW16 c1 = 0 , ssnum = pIFS -> fcCur . ssnum ;"	1712:8:55764:55802	3213535	0	True				
ANR	3214206	IdentifierDecl	c1 = 0		3213535	0					
ANR	3214207	IdentifierDeclType	UW16		3213535	0					
ANR	3214208	Identifier	c1		3213535	1					
ANR	3214209	AssignmentExpression	c1 = 0		3213535	2		=			
ANR	3214210	Identifier	c1		3213535	0					
ANR	3214211	PrimaryExpression	0		3213535	1					
ANR	3214212	IdentifierDecl	ssnum = pIFS -> fcCur . ssnum		3213535	1					
ANR	3214213	IdentifierDeclType	UW16		3213535	0					
ANR	3214214	Identifier	ssnum		3213535	1					
ANR	3214215	AssignmentExpression	ssnum = pIFS -> fcCur . ssnum		3213535	2		=			
ANR	3214216	Identifier	ssnum		3213535	0					
ANR	3214217	MemberAccess	pIFS -> fcCur . ssnum		3213535	1					
ANR	3214218	PtrMemberAccess	pIFS -> fcCur		3213535	0					
ANR	3214219	Identifier	pIFS		3213535	0					
ANR	3214220	Identifier	fcCur		3213535	1					
ANR	3214221	Identifier	ssnum		3213535	1					
ANR	3214222	IdentifierDeclStatement	int savehint = FC_DONTHINTTT ( fc ) ;	1713:8:55812:55844	3213535	1	True				
ANR	3214223	IdentifierDecl	savehint = FC_DONTHINTTT ( fc )		3213535	0					
ANR	3214224	IdentifierDeclType	int		3213535	0					
ANR	3214225	Identifier	savehint		3213535	1					
ANR	3214226	AssignmentExpression	savehint = FC_DONTHINTTT ( fc )		3213535	2		=			
ANR	3214227	Identifier	savehint		3213535	0					
ANR	3214228	CallExpression	FC_DONTHINTTT ( fc )		3213535	1					
ANR	3214229	Callee	FC_DONTHINTTT		3213535	0					
ANR	3214230	Identifier	FC_DONTHINTTT		3213535	0					
ANR	3214231	ArgumentList	fc		3213535	1					
ANR	3214232	Argument	fc		3213535	0					
ANR	3214233	Identifier	fc		3213535	0					
ANR	3214234	ExpressionStatement	fc -> ExtndFlags |= EF_TT_NOHINT	1715:8:55855:55885	3213535	2	True				
ANR	3214235	AssignmentExpression	fc -> ExtndFlags |= EF_TT_NOHINT		3213535	0		|=			
ANR	3214236	PtrMemberAccess	fc -> ExtndFlags		3213535	0					
ANR	3214237	Identifier	fc		3213535	0					
ANR	3214238	Identifier	ExtndFlags		3213535	1					
ANR	3214239	Identifier	EF_TT_NOHINT		3213535	1					
ANR	3214240	Statement	(	1716:8:55895:55895	3213535	3	True				
ANR	3214241	Statement	void	1716:9:55896:55899	3213535	4	True				
ANR	3214242	Statement	)	1716:13:55900:55900	3213535	5	True				
ANR	3214243	Statement	CGIFfont	1716:14:55901:55908	3213535	6	True				
ANR	3214244	Statement	(	1716:22:55909:55909	3213535	7	True				
ANR	3214245	Statement	FSA	1716:23:55910:55912	3213535	8	True				
ANR	3214246	Statement	fc	1716:27:55914:55915	3213535	9	True				
ANR	3214247	Statement	)	1716:29:55916:55916	3213535	10	True				
ANR	3214248	ExpressionStatement		1716:30:55917:55917	3213535	11	True				
ANR	3214249	IfStatement	if ( d -> font_type == FC_FCO_TYPE )		3213535	12					
ANR	3214250	Condition	d -> font_type == FC_FCO_TYPE	1718:12:55932:55958	3213535	0	True				
ANR	3214251	EqualityExpression	d -> font_type == FC_FCO_TYPE		3213535	0		==			
ANR	3214252	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3214253	Identifier	d		3213535	0					
ANR	3214254	Identifier	font_type		3213535	1					
ANR	3214255	Identifier	FC_FCO_TYPE		3213535	1					
ANR	3214256	CompoundStatement		139:41:4711:4711	3213535	1					
ANR	3214257	ExpressionStatement	c1 = 32	1724:12:56277:56284	3213535	0	True				
ANR	3214258	AssignmentExpression	c1 = 32		3213535	0		=			
ANR	3214259	Identifier	c1		3213535	0					
ANR	3214260	PrimaryExpression	32		3213535	1					
ANR	3214261	ElseStatement	else		3213535	0					
ANR	3214262	CompoundStatement		147:13:5059:5059	3213535	0					
ANR	3214263	ExpressionStatement	pIFS -> fcCur . ssnum = RAW_GLYPH	1728:12:56389:56418	3213535	0	True				
ANR	3214264	AssignmentExpression	pIFS -> fcCur . ssnum = RAW_GLYPH		3213535	0		=			
ANR	3214265	MemberAccess	pIFS -> fcCur . ssnum		3213535	0					
ANR	3214266	PtrMemberAccess	pIFS -> fcCur		3213535	0					
ANR	3214267	Identifier	pIFS		3213535	0					
ANR	3214268	Identifier	fcCur		3213535	1					
ANR	3214269	Identifier	ssnum		3213535	1					
ANR	3214270	Identifier	RAW_GLYPH		3213535	1					
ANR	3214271	ExpressionStatement	r -> callback_error = 0	1730:8:56438:56459	3213535	13	True				
ANR	3214272	AssignmentExpression	r -> callback_error = 0		3213535	0		=			
ANR	3214273	PtrMemberAccess	r -> callback_error		3213535	0					
ANR	3214274	Identifier	r		3213535	0					
ANR	3214275	Identifier	callback_error		3213535	1					
ANR	3214276	PrimaryExpression	0		3213535	1					
ANR	3214277	ExpressionStatement	notdef_str . data = ( byte * ) notdef	1731:8:56469:56501	3213535	14	True				
ANR	3214278	AssignmentExpression	notdef_str . data = ( byte * ) notdef		3213535	0		=			
ANR	3214279	MemberAccess	notdef_str . data		3213535	0					
ANR	3214280	Identifier	notdef_str		3213535	0					
ANR	3214281	Identifier	data		3213535	1					
ANR	3214282	CastExpression	( byte * ) notdef		3213535	1					
ANR	3214283	CastTarget	byte *		3213535	0					
ANR	3214284	Identifier	notdef		3213535	1					
ANR	3214285	ExpressionStatement	notdef_str . size = strlen ( notdef )	1732:8:56511:56543	3213535	15	True				
ANR	3214286	AssignmentExpression	notdef_str . size = strlen ( notdef )		3213535	0		=			
ANR	3214287	MemberAccess	notdef_str . size		3213535	0					
ANR	3214288	Identifier	notdef_str		3213535	0					
ANR	3214289	Identifier	size		3213535	1					
ANR	3214290	CallExpression	strlen ( notdef )		3213535	1					
ANR	3214291	Callee	strlen		3213535	0					
ANR	3214292	Identifier	strlen		3213535	0					
ANR	3214293	ArgumentList	notdef		3213535	1					
ANR	3214294	Argument	notdef		3213535	0					
ANR	3214295	Identifier	notdef		3213535	0					
ANR	3214296	ExpressionStatement	ff -> char_data = ( void * ) & notdef_str	1733:8:56553:56588	3213535	16	True				
ANR	3214297	AssignmentExpression	ff -> char_data = ( void * ) & notdef_str		3213535	0		=			
ANR	3214298	PtrMemberAccess	ff -> char_data		3213535	0					
ANR	3214299	Identifier	ff		3213535	0					
ANR	3214300	Identifier	char_data		3213535	1					
ANR	3214301	CastExpression	( void * ) & notdef_str		3213535	1					
ANR	3214302	CastTarget	void *		3213535	0					
ANR	3214303	UnaryOperationExpression	& notdef_str		3213535	1					
ANR	3214304	UnaryOperator	&		3213535	0					
ANR	3214305	Identifier	notdef_str		3213535	1					
ANR	3214306	ExpressionStatement	ff -> char_data_len = 0	1734:8:56598:56619	3213535	17	True				
ANR	3214307	AssignmentExpression	ff -> char_data_len = 0		3213535	0		=			
ANR	3214308	PtrMemberAccess	ff -> char_data_len		3213535	0					
ANR	3214309	Identifier	ff		3213535	0					
ANR	3214310	Identifier	char_data_len		3213535	1					
ANR	3214311	PrimaryExpression	0		3213535	1					
ANR	3214312	ExpressionStatement	"memcpy ( PSchar_name , notdef , 8 )"	1735:8:56629:56659	3213535	18	True				
ANR	3214313	CallExpression	"memcpy ( PSchar_name , notdef , 8 )"		3213535	0					
ANR	3214314	Callee	memcpy		3213535	0					
ANR	3214315	Identifier	memcpy		3213535	0					
ANR	3214316	ArgumentList	PSchar_name		3213535	1					
ANR	3214317	Argument	PSchar_name		3213535	0					
ANR	3214318	Identifier	PSchar_name		3213535	0					
ANR	3214319	Argument	notdef		3213535	1					
ANR	3214320	Identifier	notdef		3213535	0					
ANR	3214321	Argument	8		3213535	2					
ANR	3214322	PrimaryExpression	8		3213535	0					
ANR	3214323	Statement	CGIFchIdptr	1736:8:56669:56679	3213535	19	True				
ANR	3214324	Statement	(	1736:19:56680:56680	3213535	20	True				
ANR	3214325	Statement	FSA	1736:20:56681:56683	3213535	21	True				
ANR	3214326	Statement	(	1736:23:56684:56684	3213535	22	True				
ANR	3214327	Statement	void	1736:24:56685:56688	3213535	23	True				
ANR	3214328	Statement	*	1736:29:56690:56690	3213535	24	True				
ANR	3214329	Statement	)	1736:30:56691:56691	3213535	25	True				
ANR	3214330	Statement	&	1736:32:56693:56693	3213535	26	True				
ANR	3214331	Statement	c1	1736:34:56695:56696	3213535	27	True				
ANR	3214332	Statement	","	1736:36:56697:56697	3213535	28	True				
ANR	3214333	Statement	(	1736:38:56699:56699	3213535	29	True				
ANR	3214334	Statement	void	1736:39:56700:56703	3213535	30	True				
ANR	3214335	Statement	*	1736:44:56705:56705	3213535	31	True				
ANR	3214336	Statement	)	1736:45:56706:56706	3213535	32	True				
ANR	3214337	Statement	notdef	1736:46:56707:56712	3213535	33	True				
ANR	3214338	Statement	)	1736:52:56713:56713	3213535	34	True				
ANR	3214339	ExpressionStatement		1736:53:56714:56714	3213535	35	True				
ANR	3214340	Statement	code2	1738:8:56725:56729	3213535	36	True				
ANR	3214341	Statement	=	1738:14:56731:56731	3213535	37	True				
ANR	3214342	Statement	CGIFchar_handle	1738:16:56733:56747	3213535	38	True				
ANR	3214343	Statement	(	1738:31:56748:56748	3213535	39	True				
ANR	3214344	Statement	FSA	1738:32:56749:56751	3213535	40	True				
ANR	3214345	Statement	c1	1738:36:56753:56754	3213535	41	True				
ANR	3214346	Statement	","	1738:38:56755:56755	3213535	42	True				
ANR	3214347	Statement	&	1738:40:56757:56757	3213535	43	True				
ANR	3214348	Statement	result	1738:41:56758:56763	3213535	44	True				
ANR	3214349	Statement	","	1738:47:56764:56764	3213535	45	True				
ANR	3214350	Statement	(	1738:49:56766:56766	3213535	46	True				
ANR	3214351	Statement	SW16	1738:50:56767:56770	3213535	47	True				
ANR	3214352	Statement	)	1738:54:56771:56771	3213535	48	True				
ANR	3214353	Statement	0	1738:56:56773:56773	3213535	49	True				
ANR	3214354	Statement	)	1738:57:56774:56774	3213535	50	True				
ANR	3214355	ExpressionStatement		1738:58:56775:56775	3213535	51	True				
ANR	3214356	IfStatement	if ( code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big )		3213535	52					
ANR	3214357	Condition	code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big	1739:12:56789:56884	3213535	0	True				
ANR	3214358	AndExpression	code2 && code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big		3213535	0		&&			
ANR	3214359	Identifier	code2		3213535	0					
ANR	3214360	AndExpression	code2 != ERR_fixed_space && code2 != ERR_bm_buff && code2 != ERR_bm_too_big		3213535	1		&&			
ANR	3214361	EqualityExpression	code2 != ERR_fixed_space		3213535	0		!=			
ANR	3214362	Identifier	code2		3213535	0					
ANR	3214363	Identifier	ERR_fixed_space		3213535	1					
ANR	3214364	AndExpression	code2 != ERR_bm_buff && code2 != ERR_bm_too_big		3213535	1		&&			
ANR	3214365	EqualityExpression	code2 != ERR_bm_buff		3213535	0		!=			
ANR	3214366	Identifier	code2		3213535	0					
ANR	3214367	Identifier	ERR_bm_buff		3213535	1					
ANR	3214368	EqualityExpression	code2 != ERR_bm_too_big		3213535	1		!=			
ANR	3214369	Identifier	code2		3213535	0					
ANR	3214370	Identifier	ERR_bm_too_big		3213535	1					
ANR	3214371	CompoundStatement		161:40:5637:5637	3213535	1					
ANR	3214372	ExpressionStatement	notdef_str . data = ( byte * ) space	1742:12:56914:56945	3213535	0	True				
ANR	3214373	AssignmentExpression	notdef_str . data = ( byte * ) space		3213535	0		=			
ANR	3214374	MemberAccess	notdef_str . data		3213535	0					
ANR	3214375	Identifier	notdef_str		3213535	0					
ANR	3214376	Identifier	data		3213535	1					
ANR	3214377	CastExpression	( byte * ) space		3213535	1					
ANR	3214378	CastTarget	byte *		3213535	0					
ANR	3214379	Identifier	space		3213535	1					
ANR	3214380	ExpressionStatement	notdef_str . size = strlen ( space )	1743:12:56959:56990	3213535	1	True				
ANR	3214381	AssignmentExpression	notdef_str . size = strlen ( space )		3213535	0		=			
ANR	3214382	MemberAccess	notdef_str . size		3213535	0					
ANR	3214383	Identifier	notdef_str		3213535	0					
ANR	3214384	Identifier	size		3213535	1					
ANR	3214385	CallExpression	strlen ( space )		3213535	1					
ANR	3214386	Callee	strlen		3213535	0					
ANR	3214387	Identifier	strlen		3213535	0					
ANR	3214388	ArgumentList	space		3213535	1					
ANR	3214389	Argument	space		3213535	0					
ANR	3214390	Identifier	space		3213535	0					
ANR	3214391	ExpressionStatement	ff -> char_data = ( void * ) & notdef_str	1744:12:57004:57039	3213535	2	True				
ANR	3214392	AssignmentExpression	ff -> char_data = ( void * ) & notdef_str		3213535	0		=			
ANR	3214393	PtrMemberAccess	ff -> char_data		3213535	0					
ANR	3214394	Identifier	ff		3213535	0					
ANR	3214395	Identifier	char_data		3213535	1					
ANR	3214396	CastExpression	( void * ) & notdef_str		3213535	1					
ANR	3214397	CastTarget	void *		3213535	0					
ANR	3214398	UnaryOperationExpression	& notdef_str		3213535	1					
ANR	3214399	UnaryOperator	&		3213535	0					
ANR	3214400	Identifier	notdef_str		3213535	1					
ANR	3214401	ExpressionStatement	ff -> char_data_len = 0	1745:12:57053:57074	3213535	3	True				
ANR	3214402	AssignmentExpression	ff -> char_data_len = 0		3213535	0		=			
ANR	3214403	PtrMemberAccess	ff -> char_data_len		3213535	0					
ANR	3214404	Identifier	ff		3213535	0					
ANR	3214405	Identifier	char_data_len		3213535	1					
ANR	3214406	PrimaryExpression	0		3213535	1					
ANR	3214407	ExpressionStatement	"memcpy ( PSchar_name , space , 6 )"	1746:12:57088:57117	3213535	4	True				
ANR	3214408	CallExpression	"memcpy ( PSchar_name , space , 6 )"		3213535	0					
ANR	3214409	Callee	memcpy		3213535	0					
ANR	3214410	Identifier	memcpy		3213535	0					
ANR	3214411	ArgumentList	PSchar_name		3213535	1					
ANR	3214412	Argument	PSchar_name		3213535	0					
ANR	3214413	Identifier	PSchar_name		3213535	0					
ANR	3214414	Argument	space		3213535	1					
ANR	3214415	Identifier	space		3213535	0					
ANR	3214416	Argument	6		3213535	2					
ANR	3214417	PrimaryExpression	6		3213535	0					
ANR	3214418	Statement	CGIFchIdptr	1748:12:57132:57142	3213535	5	True				
ANR	3214419	Statement	(	1748:23:57143:57143	3213535	6	True				
ANR	3214420	Statement	FSA	1748:24:57144:57146	3213535	7	True				
ANR	3214421	Statement	(	1748:27:57147:57147	3213535	8	True				
ANR	3214422	Statement	void	1748:28:57148:57151	3213535	9	True				
ANR	3214423	Statement	*	1748:33:57153:57153	3213535	10	True				
ANR	3214424	Statement	)	1748:34:57154:57154	3213535	11	True				
ANR	3214425	Statement	&	1748:36:57156:57156	3213535	12	True				
ANR	3214426	Statement	c1	1748:38:57158:57159	3213535	13	True				
ANR	3214427	Statement	","	1748:40:57160:57160	3213535	14	True				
ANR	3214428	Statement	(	1748:42:57162:57162	3213535	15	True				
ANR	3214429	Statement	void	1748:43:57163:57166	3213535	16	True				
ANR	3214430	Statement	*	1748:48:57168:57168	3213535	17	True				
ANR	3214431	Statement	)	1748:49:57169:57169	3213535	18	True				
ANR	3214432	Statement	space	1748:50:57170:57174	3213535	19	True				
ANR	3214433	Statement	)	1748:55:57175:57175	3213535	20	True				
ANR	3214434	ExpressionStatement		1748:56:57176:57176	3213535	21	True				
ANR	3214435	Statement	code2	1750:12:57191:57195	3213535	22	True				
ANR	3214436	Statement	=	1750:18:57197:57197	3213535	23	True				
ANR	3214437	Statement	CGIFchar_handle	1750:20:57199:57213	3213535	24	True				
ANR	3214438	Statement	(	1750:35:57214:57214	3213535	25	True				
ANR	3214439	Statement	FSA	1750:36:57215:57217	3213535	26	True				
ANR	3214440	Statement	c1	1750:40:57219:57220	3213535	27	True				
ANR	3214441	Statement	","	1750:42:57221:57221	3213535	28	True				
ANR	3214442	Statement	&	1750:44:57223:57223	3213535	29	True				
ANR	3214443	Statement	result	1750:45:57224:57229	3213535	30	True				
ANR	3214444	Statement	","	1750:51:57230:57230	3213535	31	True				
ANR	3214445	Statement	(	1750:53:57232:57232	3213535	32	True				
ANR	3214446	Statement	SW16	1750:54:57233:57236	3213535	33	True				
ANR	3214447	Statement	)	1750:58:57237:57237	3213535	34	True				
ANR	3214448	Statement	0	1750:60:57239:57239	3213535	35	True				
ANR	3214449	Statement	)	1750:61:57240:57240	3213535	36	True				
ANR	3214450	ExpressionStatement		1750:62:57241:57241	3213535	37	True				
ANR	3214451	IfStatement	if ( ! code2 || code2 == ERR_fixed_space )		3213535	53					
ANR	3214452	Condition	! code2 || code2 == ERR_fixed_space	1752:12:57265:57298	3213535	0	True				
ANR	3214453	OrExpression	! code2 || code2 == ERR_fixed_space		3213535	0		||			
ANR	3214454	UnaryOperationExpression	! code2		3213535	0					
ANR	3214455	UnaryOperator	!		3213535	0					
ANR	3214456	Identifier	code2		3213535	1					
ANR	3214457	EqualityExpression	code2 == ERR_fixed_space		3213535	1		==			
ANR	3214458	Identifier	code2		3213535	0					
ANR	3214459	Identifier	ERR_fixed_space		3213535	1					
ANR	3214460	CompoundStatement		173:48:6051:6051	3213535	1					
ANR	3214461	ExpressionStatement	code = code2	1753:12:57315:57327	3213535	0	True				
ANR	3214462	AssignmentExpression	code = code2		3213535	0		=			
ANR	3214463	Identifier	code		3213535	0					
ANR	3214464	Identifier	code2		3213535	1					
ANR	3214465	ExpressionStatement	fc -> ExtndFlags |= savehint	1755:8:57347:57373	3213535	54	True				
ANR	3214466	AssignmentExpression	fc -> ExtndFlags |= savehint		3213535	0		|=			
ANR	3214467	PtrMemberAccess	fc -> ExtndFlags		3213535	0					
ANR	3214468	Identifier	fc		3213535	0					
ANR	3214469	Identifier	ExtndFlags		3213535	1					
ANR	3214470	Identifier	savehint		3213535	1					
ANR	3214471	Statement	(	1756:8:57383:57383	3213535	55	True				
ANR	3214472	Statement	void	1756:9:57384:57387	3213535	56	True				
ANR	3214473	Statement	)	1756:13:57388:57388	3213535	57	True				
ANR	3214474	Statement	CGIFfont	1756:14:57389:57396	3213535	58	True				
ANR	3214475	Statement	(	1756:22:57397:57397	3213535	59	True				
ANR	3214476	Statement	FSA	1756:23:57398:57400	3213535	60	True				
ANR	3214477	Statement	fc	1756:27:57402:57403	3213535	61	True				
ANR	3214478	Statement	)	1756:29:57404:57404	3213535	62	True				
ANR	3214479	ExpressionStatement		1756:30:57405:57405	3213535	63	True				
ANR	3214480	ExpressionStatement	pIFS -> fcCur . ssnum = ssnum	1757:8:57415:57440	3213535	64	True				
ANR	3214481	AssignmentExpression	pIFS -> fcCur . ssnum = ssnum		3213535	0		=			
ANR	3214482	MemberAccess	pIFS -> fcCur . ssnum		3213535	0					
ANR	3214483	PtrMemberAccess	pIFS -> fcCur		3213535	0					
ANR	3214484	Identifier	pIFS		3213535	0					
ANR	3214485	Identifier	fcCur		3213535	1					
ANR	3214486	Identifier	ssnum		3213535	1					
ANR	3214487	Identifier	ssnum		3213535	1					
ANR	3214488	ExpressionStatement	ff -> char_data = client_char_data	1759:4:57452:57484	3213535	59	True				
ANR	3214489	AssignmentExpression	ff -> char_data = client_char_data		3213535	0		=			
ANR	3214490	PtrMemberAccess	ff -> char_data		3213535	0					
ANR	3214491	Identifier	ff		3213535	0					
ANR	3214492	Identifier	char_data		3213535	1					
ANR	3214493	Identifier	client_char_data		3213535	1					
ANR	3214494	ExpressionStatement	ff -> char_data_len = client_char_data_len	1760:4:57490:57530	3213535	60	True				
ANR	3214495	AssignmentExpression	ff -> char_data_len = client_char_data_len		3213535	0		=			
ANR	3214496	PtrMemberAccess	ff -> char_data_len		3213535	0					
ANR	3214497	Identifier	ff		3213535	0					
ANR	3214498	Identifier	char_data_len		3213535	1					
ANR	3214499	Identifier	client_char_data_len		3213535	1					
ANR	3214500	ExpressionStatement	static_server_ptr_for_ufst_callback = 0	1764:4:57558:57597	3213535	61	True				
ANR	3214501	AssignmentExpression	static_server_ptr_for_ufst_callback = 0		3213535	0		=			
ANR	3214502	Identifier	static_server_ptr_for_ufst_callback		3213535	0					
ANR	3214503	PrimaryExpression	0		3213535	1					
ANR	3214504	ExpressionStatement	r -> ff = 0	1767:4:57611:57620	3213535	62	True				
ANR	3214505	AssignmentExpression	r -> ff = 0		3213535	0		=			
ANR	3214506	PtrMemberAccess	r -> ff		3213535	0					
ANR	3214507	Identifier	r		3213535	0					
ANR	3214508	Identifier	ff		3213535	1					
ANR	3214509	PrimaryExpression	0		3213535	1					
ANR	3214510	ExpressionStatement	"release_glyphs ( r , ( ufst_common_font_data * ) ff -> server_font_data )"	1768:4:57626:57691	3213535	63	True				
ANR	3214511	CallExpression	"release_glyphs ( r , ( ufst_common_font_data * ) ff -> server_font_data )"		3213535	0					
ANR	3214512	Callee	release_glyphs		3213535	0					
ANR	3214513	Identifier	release_glyphs		3213535	0					
ANR	3214514	ArgumentList	r		3213535	1					
ANR	3214515	Argument	r		3213535	0					
ANR	3214516	Identifier	r		3213535	0					
ANR	3214517	Argument	( ufst_common_font_data * ) ff -> server_font_data		3213535	1					
ANR	3214518	CastExpression	( ufst_common_font_data * ) ff -> server_font_data		3213535	0					
ANR	3214519	CastTarget	ufst_common_font_data *		3213535	0					
ANR	3214520	PtrMemberAccess	ff -> server_font_data		3213535	1					
ANR	3214521	Identifier	ff		3213535	0					
ANR	3214522	Identifier	server_font_data		3213535	1					
ANR	3214523	IfStatement	if ( code != ERR_fixed_space && code != 0 )		3213535	64					
ANR	3214524	Condition	code != ERR_fixed_space && code != 0	1769:8:57701:57736	3213535	0	True				
ANR	3214525	AndExpression	code != ERR_fixed_space && code != 0		3213535	0		&&			
ANR	3214526	EqualityExpression	code != ERR_fixed_space		3213535	0		!=			
ANR	3214527	Identifier	code		3213535	0					
ANR	3214528	Identifier	ERR_fixed_space		3213535	1					
ANR	3214529	EqualityExpression	code != 0		3213535	1		!=			
ANR	3214530	Identifier	code		3213535	0					
ANR	3214531	PrimaryExpression	0		3213535	1					
ANR	3214532	ReturnStatement	return code ;	1770:8:57747:57758	3213535	1	True				
ANR	3214533	Identifier	code		3213535	0					
ANR	3214534	IfStatement	if ( r -> callback_error != 0 )		3213535	65					
ANR	3214535	Condition	r -> callback_error != 0	1772:8:57769:57790	3213535	0	True				
ANR	3214536	EqualityExpression	r -> callback_error != 0		3213535	0		!=			
ANR	3214537	PtrMemberAccess	r -> callback_error		3213535	0					
ANR	3214538	Identifier	r		3213535	0					
ANR	3214539	Identifier	callback_error		3213535	1					
ANR	3214540	PrimaryExpression	0		3213535	1					
ANR	3214541	ReturnStatement	return r -> callback_error ;	1773:8:57801:57825	3213535	1	True				
ANR	3214542	PtrMemberAccess	r -> callback_error		3213535	0					
ANR	3214543	Identifier	r		3213535	0					
ANR	3214544	Identifier	callback_error		3213535	1					
ANR	3214545	IfStatement	if ( format == FC_BITMAP_TYPE && result )		3213535	66					
ANR	3214546	Condition	format == FC_BITMAP_TYPE && result	1775:8:57836:57869	3213535	0	True				
ANR	3214547	AndExpression	format == FC_BITMAP_TYPE && result		3213535	0		&&			
ANR	3214548	EqualityExpression	format == FC_BITMAP_TYPE		3213535	0		==			
ANR	3214549	Identifier	format		3213535	0					
ANR	3214550	Identifier	FC_BITMAP_TYPE		3213535	1					
ANR	3214551	Identifier	result		3213535	1					
ANR	3214552	CompoundStatement		197:8:6632:6667	3213535	1					
ANR	3214553	IdentifierDeclStatement	IFBITMAP * pbm = ( IFBITMAP * ) result ;	1776:8:57882:57917	3213535	0	True				
ANR	3214554	IdentifierDecl	* pbm = ( IFBITMAP * ) result		3213535	0					
ANR	3214555	IdentifierDeclType	IFBITMAP *		3213535	0					
ANR	3214556	Identifier	pbm		3213535	1					
ANR	3214557	AssignmentExpression	* pbm = ( IFBITMAP * ) result		3213535	2		=			
ANR	3214558	Identifier	pbm		3213535	0					
ANR	3214559	CastExpression	( IFBITMAP * ) result		3213535	1					
ANR	3214560	CastTarget	IFBITMAP *		3213535	0					
ANR	3214561	Identifier	result		3213535	1					
ANR	3214562	ExpressionStatement	du_emx = pbm -> du_emx	1778:8:57928:57948	3213535	1	True				
ANR	3214563	AssignmentExpression	du_emx = pbm -> du_emx		3213535	0		=			
ANR	3214564	Identifier	du_emx		3213535	0					
ANR	3214565	PtrMemberAccess	pbm -> du_emx		3213535	1					
ANR	3214566	Identifier	pbm		3213535	0					
ANR	3214567	Identifier	du_emx		3213535	1					
ANR	3214568	ExpressionStatement	du_emy = pbm -> du_emy	1779:8:57958:57978	3213535	2	True				
ANR	3214569	AssignmentExpression	du_emy = pbm -> du_emy		3213535	0		=			
ANR	3214570	Identifier	du_emy		3213535	0					
ANR	3214571	PtrMemberAccess	pbm -> du_emy		3213535	1					
ANR	3214572	Identifier	pbm		3213535	0					
ANR	3214573	Identifier	du_emy		3213535	1					
ANR	3214574	ExpressionStatement	r -> char_data = pbm	1780:8:57988:58006	3213535	3	True				
ANR	3214575	AssignmentExpression	r -> char_data = pbm		3213535	0		=			
ANR	3214576	PtrMemberAccess	r -> char_data		3213535	0					
ANR	3214577	Identifier	r		3213535	0					
ANR	3214578	Identifier	char_data		3213535	1					
ANR	3214579	Identifier	pbm		3213535	1					
ANR	3214580	ExpressionStatement	r -> bRaster = TRUE	1781:8:58016:58033	3213535	4	True				
ANR	3214581	AssignmentExpression	r -> bRaster = TRUE		3213535	0		=			
ANR	3214582	PtrMemberAccess	r -> bRaster		3213535	0					
ANR	3214583	Identifier	r		3213535	0					
ANR	3214584	Identifier	bRaster		3213535	1					
ANR	3214585	Identifier	TRUE		3213535	1					
ANR	3214586	ExpressionStatement	design_escapement [ 0 ] = pbm -> escapement	1783:8:58044:58082	3213535	5	True				
ANR	3214587	AssignmentExpression	design_escapement [ 0 ] = pbm -> escapement		3213535	0		=			
ANR	3214588	ArrayIndexing	design_escapement [ 0 ]		3213535	0					
ANR	3214589	Identifier	design_escapement		3213535	0					
ANR	3214590	PrimaryExpression	0		3213535	1					
ANR	3214591	PtrMemberAccess	pbm -> escapement		3213535	1					
ANR	3214592	Identifier	pbm		3213535	0					
ANR	3214593	Identifier	escapement		3213535	1					
ANR	3214594	ExpressionStatement	design_bbox [ 0 ] = pbm -> left_indent	1787:8:58149:58182	3213535	6	True				
ANR	3214595	AssignmentExpression	design_bbox [ 0 ] = pbm -> left_indent		3213535	0		=			
ANR	3214596	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3214597	Identifier	design_bbox		3213535	0					
ANR	3214598	PrimaryExpression	0		3213535	1					
ANR	3214599	PtrMemberAccess	pbm -> left_indent		3213535	1					
ANR	3214600	Identifier	pbm		3213535	0					
ANR	3214601	Identifier	left_indent		3213535	1					
ANR	3214602	ExpressionStatement	design_bbox [ 1 ] = pbm -> top_indent	1788:8:58192:58224	3213535	7	True				
ANR	3214603	AssignmentExpression	design_bbox [ 1 ] = pbm -> top_indent		3213535	0		=			
ANR	3214604	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3214605	Identifier	design_bbox		3213535	0					
ANR	3214606	PrimaryExpression	1		3213535	1					
ANR	3214607	PtrMemberAccess	pbm -> top_indent		3213535	1					
ANR	3214608	Identifier	pbm		3213535	0					
ANR	3214609	Identifier	top_indent		3213535	1					
ANR	3214610	ExpressionStatement	design_bbox [ 2 ] = pbm -> black_width	1789:8:58234:58267	3213535	8	True				
ANR	3214611	AssignmentExpression	design_bbox [ 2 ] = pbm -> black_width		3213535	0		=			
ANR	3214612	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3214613	Identifier	design_bbox		3213535	0					
ANR	3214614	PrimaryExpression	2		3213535	1					
ANR	3214615	PtrMemberAccess	pbm -> black_width		3213535	1					
ANR	3214616	Identifier	pbm		3213535	0					
ANR	3214617	Identifier	black_width		3213535	1					
ANR	3214618	ExpressionStatement	design_bbox [ 3 ] = pbm -> black_depth	1790:8:58277:58310	3213535	9	True				
ANR	3214619	AssignmentExpression	design_bbox [ 3 ] = pbm -> black_depth		3213535	0		=			
ANR	3214620	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3214621	Identifier	design_bbox		3213535	0					
ANR	3214622	PrimaryExpression	3		3213535	1					
ANR	3214623	PtrMemberAccess	pbm -> black_depth		3213535	1					
ANR	3214624	Identifier	pbm		3213535	0					
ANR	3214625	Identifier	black_depth		3213535	1					
ANR	3214626	IfStatement	if ( ff -> is_vertical )		3213535	10					
ANR	3214627	Condition	ff -> is_vertical	1792:12:58333:58347	3213535	0	True				
ANR	3214628	PtrMemberAccess	ff -> is_vertical		3213535	0					
ANR	3214629	Identifier	ff		3213535	0					
ANR	3214630	Identifier	is_vertical		3213535	1					
ANR	3214631	CompoundStatement		213:29:7100:7100	3213535	1					
ANR	3214632	IfStatement	if ( pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0 )		3213535	0					
ANR	3214633	Condition	pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0	1794:16:58457:58520	3213535	0	True				
ANR	3214634	AndExpression	pIFS -> glyphMetricsDU . aw . x == 0 && pIFS -> glyphMetricsDU . aw . y == 0		3213535	0		&&			
ANR	3214635	EqualityExpression	pIFS -> glyphMetricsDU . aw . x == 0		3213535	0		==			
ANR	3214636	MemberAccess	pIFS -> glyphMetricsDU . aw . x		3213535	0					
ANR	3214637	MemberAccess	pIFS -> glyphMetricsDU . aw		3213535	0					
ANR	3214638	PtrMemberAccess	pIFS -> glyphMetricsDU		3213535	0					
ANR	3214639	Identifier	pIFS		3213535	0					
ANR	3214640	Identifier	glyphMetricsDU		3213535	1					
ANR	3214641	Identifier	aw		3213535	1					
ANR	3214642	Identifier	x		3213535	1					
ANR	3214643	PrimaryExpression	0		3213535	1					
ANR	3214644	EqualityExpression	pIFS -> glyphMetricsDU . aw . y == 0		3213535	1		==			
ANR	3214645	MemberAccess	pIFS -> glyphMetricsDU . aw . y		3213535	0					
ANR	3214646	MemberAccess	pIFS -> glyphMetricsDU . aw		3213535	0					
ANR	3214647	PtrMemberAccess	pIFS -> glyphMetricsDU		3213535	0					
ANR	3214648	Identifier	pIFS		3213535	0					
ANR	3214649	Identifier	glyphMetricsDU		3213535	1					
ANR	3214650	Identifier	aw		3213535	1					
ANR	3214651	Identifier	y		3213535	1					
ANR	3214652	PrimaryExpression	0		3213535	1					
ANR	3214653	CompoundStatement		215:82:7273:7273	3213535	1					
ANR	3214654	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1795:16:58541:58578	3213535	0	True				
ANR	3214655	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		3213535	0		=			
ANR	3214656	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214657	Identifier	design_escapement		3213535	0					
ANR	3214658	PrimaryExpression	1		3213535	1					
ANR	3214659	ArrayIndexing	glyph_width [ 1 ]		3213535	1					
ANR	3214660	Identifier	glyph_width		3213535	0					
ANR	3214661	PrimaryExpression	1		3213535	1					
ANR	3214662	ElseStatement	else		3213535	0					
ANR	3214663	CompoundStatement		218:17:7361:7361	3213535	0					
ANR	3214664	ExpressionStatement	design_escapement [ 1 ] = pIFS -> glyphMetricsDU . aw . y	1798:16:58629:58677	3213535	0	True				
ANR	3214665	AssignmentExpression	design_escapement [ 1 ] = pIFS -> glyphMetricsDU . aw . y		3213535	0		=			
ANR	3214666	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214667	Identifier	design_escapement		3213535	0					
ANR	3214668	PrimaryExpression	1		3213535	1					
ANR	3214669	MemberAccess	pIFS -> glyphMetricsDU . aw . y		3213535	1					
ANR	3214670	MemberAccess	pIFS -> glyphMetricsDU . aw		3213535	0					
ANR	3214671	PtrMemberAccess	pIFS -> glyphMetricsDU		3213535	0					
ANR	3214672	Identifier	pIFS		3213535	0					
ANR	3214673	Identifier	glyphMetricsDU		3213535	1					
ANR	3214674	Identifier	aw		3213535	1					
ANR	3214675	Identifier	y		3213535	1					
ANR	3214676	ElseStatement	else		3213535	0					
ANR	3214677	IfStatement	if ( result )		3213535	0					
ANR	3214678	Condition	result	1804:13:58730:58735	3213535	0	True				
ANR	3214679	Identifier	result		3213535	0					
ANR	3214680	CompoundStatement		226:8:7498:7535	3213535	1					
ANR	3214681	IdentifierDeclStatement	IFOUTLINE * pol = ( IFOUTLINE * ) result ;	1805:8:58748:58785	3213535	0	True				
ANR	3214682	IdentifierDecl	* pol = ( IFOUTLINE * ) result		3213535	0					
ANR	3214683	IdentifierDeclType	IFOUTLINE *		3213535	0					
ANR	3214684	Identifier	pol		3213535	1					
ANR	3214685	AssignmentExpression	* pol = ( IFOUTLINE * ) result		3213535	2		=			
ANR	3214686	Identifier	pol		3213535	0					
ANR	3214687	CastExpression	( IFOUTLINE * ) result		3213535	1					
ANR	3214688	CastTarget	IFOUTLINE *		3213535	0					
ANR	3214689	Identifier	result		3213535	1					
ANR	3214690	IfStatement	if ( glyph_width [ 0 ] == 0x7fff )		3213535	1					
ANR	3214691	Condition	glyph_width [ 0 ] == 0x7fff	1807:12:58800:58823	3213535	0	True				
ANR	3214692	EqualityExpression	glyph_width [ 0 ] == 0x7fff		3213535	0		==			
ANR	3214693	ArrayIndexing	glyph_width [ 0 ]		3213535	0					
ANR	3214694	Identifier	glyph_width		3213535	0					
ANR	3214695	PrimaryExpression	0		3213535	1					
ANR	3214696	PrimaryExpression	0x7fff		3213535	1					
ANR	3214697	CompoundStatement		228:38:7576:7576	3213535	1					
ANR	3214698	ExpressionStatement	design_escapement [ 0 ] = pol -> escapement	1808:12:58856:58894	3213535	0	True				
ANR	3214699	AssignmentExpression	design_escapement [ 0 ] = pol -> escapement		3213535	0		=			
ANR	3214700	ArrayIndexing	design_escapement [ 0 ]		3213535	0					
ANR	3214701	Identifier	design_escapement		3213535	0					
ANR	3214702	PrimaryExpression	0		3213535	1					
ANR	3214703	PtrMemberAccess	pol -> escapement		3213535	1					
ANR	3214704	Identifier	pol		3213535	0					
ANR	3214705	Identifier	escapement		3213535	1					
ANR	3214706	ElseStatement	else		3213535	0					
ANR	3214707	CompoundStatement		231:13:7669:7669	3213535	0					
ANR	3214708	ExpressionStatement	design_escapement [ 0 ] = glyph_width [ 0 ]	1811:12:58933:58970	3213535	0	True				
ANR	3214709	AssignmentExpression	design_escapement [ 0 ] = glyph_width [ 0 ]		3213535	0		=			
ANR	3214710	ArrayIndexing	design_escapement [ 0 ]		3213535	0					
ANR	3214711	Identifier	design_escapement		3213535	0					
ANR	3214712	PrimaryExpression	0		3213535	1					
ANR	3214713	ArrayIndexing	glyph_width [ 0 ]		3213535	1					
ANR	3214714	Identifier	glyph_width		3213535	0					
ANR	3214715	PrimaryExpression	0		3213535	1					
ANR	3214716	IfStatement	if ( ff -> is_vertical )		3213535	2					
ANR	3214717	Condition	ff -> is_vertical	1813:12:58994:59008	3213535	0	True				
ANR	3214718	PtrMemberAccess	ff -> is_vertical		3213535	0					
ANR	3214719	Identifier	ff		3213535	0					
ANR	3214720	Identifier	is_vertical		3213535	1					
ANR	3214721	CompoundStatement		234:29:7761:7761	3213535	1					
ANR	3214722	IfStatement	if ( glyph_width [ 1 ] == 0x7fff )		3213535	0					
ANR	3214723	Condition	glyph_width [ 1 ] == 0x7fff	1814:16:59029:59052	3213535	0	True				
ANR	3214724	EqualityExpression	glyph_width [ 1 ] == 0x7fff		3213535	0		==			
ANR	3214725	ArrayIndexing	glyph_width [ 1 ]		3213535	0					
ANR	3214726	Identifier	glyph_width		3213535	0					
ANR	3214727	PrimaryExpression	1		3213535	1					
ANR	3214728	PrimaryExpression	0x7fff		3213535	1					
ANR	3214729	CompoundStatement		235:42:7805:7805	3213535	1					
ANR	3214730	ExpressionStatement	design_escapement [ 1 ] = pol -> advanceHeight	1815:16:59089:59130	3213535	0	True				
ANR	3214731	AssignmentExpression	design_escapement [ 1 ] = pol -> advanceHeight		3213535	0		=			
ANR	3214732	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214733	Identifier	design_escapement		3213535	0					
ANR	3214734	PrimaryExpression	1		3213535	1					
ANR	3214735	PtrMemberAccess	pol -> advanceHeight		3213535	1					
ANR	3214736	Identifier	pol		3213535	0					
ANR	3214737	Identifier	advanceHeight		3213535	1					
ANR	3214738	ElseStatement	else		3213535	0					
ANR	3214739	CompoundStatement		238:17:7913:7913	3213535	0					
ANR	3214740	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1818:16:59181:59218	3213535	0	True				
ANR	3214741	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		3213535	0		=			
ANR	3214742	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214743	Identifier	design_escapement		3213535	0					
ANR	3214744	PrimaryExpression	1		3213535	1					
ANR	3214745	ArrayIndexing	glyph_width [ 1 ]		3213535	1					
ANR	3214746	Identifier	glyph_width		3213535	0					
ANR	3214747	PrimaryExpression	1		3213535	1					
ANR	3214748	ElseStatement	else		3213535	0					
ANR	3214749	CompoundStatement		242:13:8007:8007	3213535	0					
ANR	3214750	ExpressionStatement	design_escapement [ 1 ] = 0	1822:12:59271:59295	3213535	0	True				
ANR	3214751	AssignmentExpression	design_escapement [ 1 ] = 0		3213535	0		=			
ANR	3214752	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214753	Identifier	design_escapement		3213535	0					
ANR	3214754	PrimaryExpression	1		3213535	1					
ANR	3214755	PrimaryExpression	0		3213535	1					
ANR	3214756	IfStatement	if ( pol -> du_emx > 0 && pol -> du_emy > 0 )		3213535	3					
ANR	3214757	Condition	pol -> du_emx > 0 && pol -> du_emy > 0	1825:12:59320:59353	3213535	0	True				
ANR	3214758	AndExpression	pol -> du_emx > 0 && pol -> du_emy > 0		3213535	0		&&			
ANR	3214759	RelationalExpression	pol -> du_emx > 0		3213535	0		>			
ANR	3214760	PtrMemberAccess	pol -> du_emx		3213535	0					
ANR	3214761	Identifier	pol		3213535	0					
ANR	3214762	Identifier	du_emx		3213535	1					
ANR	3214763	PrimaryExpression	0		3213535	1					
ANR	3214764	RelationalExpression	pol -> du_emy > 0		3213535	1		>			
ANR	3214765	PtrMemberAccess	pol -> du_emy		3213535	0					
ANR	3214766	Identifier	pol		3213535	0					
ANR	3214767	Identifier	du_emy		3213535	1					
ANR	3214768	PrimaryExpression	0		3213535	1					
ANR	3214769	CompoundStatement		246:48:8106:8106	3213535	1					
ANR	3214770	ExpressionStatement	du_emx = pol -> du_emx	1826:12:59370:59390	3213535	0	True				
ANR	3214771	AssignmentExpression	du_emx = pol -> du_emx		3213535	0		=			
ANR	3214772	Identifier	du_emx		3213535	0					
ANR	3214773	PtrMemberAccess	pol -> du_emx		3213535	1					
ANR	3214774	Identifier	pol		3213535	0					
ANR	3214775	Identifier	du_emx		3213535	1					
ANR	3214776	ExpressionStatement	du_emy = pol -> du_emy	1827:12:59404:59424	3213535	1	True				
ANR	3214777	AssignmentExpression	du_emy = pol -> du_emy		3213535	0		=			
ANR	3214778	Identifier	du_emy		3213535	0					
ANR	3214779	PtrMemberAccess	pol -> du_emy		3213535	1					
ANR	3214780	Identifier	pol		3213535	0					
ANR	3214781	Identifier	du_emy		3213535	1					
ANR	3214782	ElseStatement	else		3213535	0					
ANR	3214783	CompoundStatement		250:13:8199:8199	3213535	0					
ANR	3214784	ExpressionStatement	du_emx = pIFS -> cs . du_emx	1830:12:59463:59487	3213535	0	True				
ANR	3214785	AssignmentExpression	du_emx = pIFS -> cs . du_emx		3213535	0		=			
ANR	3214786	Identifier	du_emx		3213535	0					
ANR	3214787	MemberAccess	pIFS -> cs . du_emx		3213535	1					
ANR	3214788	PtrMemberAccess	pIFS -> cs		3213535	0					
ANR	3214789	Identifier	pIFS		3213535	0					
ANR	3214790	Identifier	cs		3213535	1					
ANR	3214791	Identifier	du_emx		3213535	1					
ANR	3214792	ExpressionStatement	du_emy = pIFS -> cs . du_emy	1831:12:59501:59525	3213535	1	True				
ANR	3214793	AssignmentExpression	du_emy = pIFS -> cs . du_emy		3213535	0		=			
ANR	3214794	Identifier	du_emy		3213535	0					
ANR	3214795	MemberAccess	pIFS -> cs . du_emy		3213535	1					
ANR	3214796	PtrMemberAccess	pIFS -> cs		3213535	0					
ANR	3214797	Identifier	pIFS		3213535	0					
ANR	3214798	Identifier	cs		3213535	1					
ANR	3214799	Identifier	du_emy		3213535	1					
ANR	3214800	ExpressionStatement	design_bbox [ 0 ] = pol -> left	1834:8:59546:59572	3213535	4	True				
ANR	3214801	AssignmentExpression	design_bbox [ 0 ] = pol -> left		3213535	0		=			
ANR	3214802	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3214803	Identifier	design_bbox		3213535	0					
ANR	3214804	PrimaryExpression	0		3213535	1					
ANR	3214805	PtrMemberAccess	pol -> left		3213535	1					
ANR	3214806	Identifier	pol		3213535	0					
ANR	3214807	Identifier	left		3213535	1					
ANR	3214808	ExpressionStatement	design_bbox [ 1 ] = pol -> bottom	1835:8:59582:59610	3213535	5	True				
ANR	3214809	AssignmentExpression	design_bbox [ 1 ] = pol -> bottom		3213535	0		=			
ANR	3214810	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3214811	Identifier	design_bbox		3213535	0					
ANR	3214812	PrimaryExpression	1		3213535	1					
ANR	3214813	PtrMemberAccess	pol -> bottom		3213535	1					
ANR	3214814	Identifier	pol		3213535	0					
ANR	3214815	Identifier	bottom		3213535	1					
ANR	3214816	ExpressionStatement	design_bbox [ 2 ] = pol -> right	1836:8:59620:59647	3213535	6	True				
ANR	3214817	AssignmentExpression	design_bbox [ 2 ] = pol -> right		3213535	0		=			
ANR	3214818	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3214819	Identifier	design_bbox		3213535	0					
ANR	3214820	PrimaryExpression	2		3213535	1					
ANR	3214821	PtrMemberAccess	pol -> right		3213535	1					
ANR	3214822	Identifier	pol		3213535	0					
ANR	3214823	Identifier	right		3213535	1					
ANR	3214824	ExpressionStatement	design_bbox [ 3 ] = pol -> top	1837:8:59657:59682	3213535	7	True				
ANR	3214825	AssignmentExpression	design_bbox [ 3 ] = pol -> top		3213535	0		=			
ANR	3214826	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3214827	Identifier	design_bbox		3213535	0					
ANR	3214828	PrimaryExpression	3		3213535	1					
ANR	3214829	PtrMemberAccess	pol -> top		3213535	1					
ANR	3214830	Identifier	pol		3213535	0					
ANR	3214831	Identifier	top		3213535	1					
ANR	3214832	ExpressionStatement	r -> char_data = ( IFOUTLINE * ) result	1839:8:59701:59736	3213535	8	True				
ANR	3214833	AssignmentExpression	r -> char_data = ( IFOUTLINE * ) result		3213535	0		=			
ANR	3214834	PtrMemberAccess	r -> char_data		3213535	0					
ANR	3214835	Identifier	r		3213535	0					
ANR	3214836	Identifier	char_data		3213535	1					
ANR	3214837	CastExpression	( IFOUTLINE * ) result		3213535	1					
ANR	3214838	CastTarget	IFOUTLINE *		3213535	0					
ANR	3214839	Identifier	result		3213535	1					
ANR	3214840	ElseStatement	else		3213535	0					
ANR	3214841	CompoundStatement		262:9:8503:8503	3213535	0					
ANR	3214842	ExpressionStatement	design_escapement [ 0 ] = glyph_width [ 0 ]	1842:8:59763:59800	3213535	0	True				
ANR	3214843	AssignmentExpression	design_escapement [ 0 ] = glyph_width [ 0 ]		3213535	0		=			
ANR	3214844	ArrayIndexing	design_escapement [ 0 ]		3213535	0					
ANR	3214845	Identifier	design_escapement		3213535	0					
ANR	3214846	PrimaryExpression	0		3213535	1					
ANR	3214847	ArrayIndexing	glyph_width [ 0 ]		3213535	1					
ANR	3214848	Identifier	glyph_width		3213535	0					
ANR	3214849	PrimaryExpression	0		3213535	1					
ANR	3214850	ExpressionStatement	design_escapement [ 1 ] = glyph_width [ 1 ]	1843:8:59810:59847	3213535	1	True				
ANR	3214851	AssignmentExpression	design_escapement [ 1 ] = glyph_width [ 1 ]		3213535	0		=			
ANR	3214852	ArrayIndexing	design_escapement [ 1 ]		3213535	0					
ANR	3214853	Identifier	design_escapement		3213535	0					
ANR	3214854	PrimaryExpression	1		3213535	1					
ANR	3214855	ArrayIndexing	glyph_width [ 1 ]		3213535	1					
ANR	3214856	Identifier	glyph_width		3213535	0					
ANR	3214857	PrimaryExpression	1		3213535	1					
ANR	3214858	ExpressionStatement	design_bbox [ 0 ] = design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0	1845:8:59866:59935	3213535	2	True				
ANR	3214859	AssignmentExpression	design_bbox [ 0 ] = design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0		3213535	0		=			
ANR	3214860	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3214861	Identifier	design_bbox		3213535	0					
ANR	3214862	PrimaryExpression	0		3213535	1					
ANR	3214863	AssignmentExpression	design_bbox [ 1 ] = design_bbox [ 2 ] = design_bbox [ 3 ] = 0		3213535	1		=			
ANR	3214864	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3214865	Identifier	design_bbox		3213535	0					
ANR	3214866	PrimaryExpression	1		3213535	1					
ANR	3214867	AssignmentExpression	design_bbox [ 2 ] = design_bbox [ 3 ] = 0		3213535	1		=			
ANR	3214868	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3214869	Identifier	design_bbox		3213535	0					
ANR	3214870	PrimaryExpression	2		3213535	1					
ANR	3214871	AssignmentExpression	design_bbox [ 3 ] = 0		3213535	1		=			
ANR	3214872	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3214873	Identifier	design_bbox		3213535	0					
ANR	3214874	PrimaryExpression	3		3213535	1					
ANR	3214875	PrimaryExpression	0		3213535	1					
ANR	3214876	IfStatement	if ( USBOUNDBOX && d -> font_type == FC_FCO_TYPE )		3213535	67					
ANR	3214877	Condition	USBOUNDBOX && d -> font_type == FC_FCO_TYPE	1848:8:59998:60038	3213535	0	True				
ANR	3214878	AndExpression	USBOUNDBOX && d -> font_type == FC_FCO_TYPE		3213535	0		&&			
ANR	3214879	Identifier	USBOUNDBOX		3213535	0					
ANR	3214880	EqualityExpression	d -> font_type == FC_FCO_TYPE		3213535	1		==			
ANR	3214881	PtrMemberAccess	d -> font_type		3213535	0					
ANR	3214882	Identifier	d		3213535	0					
ANR	3214883	Identifier	font_type		3213535	1					
ANR	3214884	Identifier	FC_FCO_TYPE		3213535	1					
ANR	3214885	CompoundStatement		269:51:8791:8791	3213535	1					
ANR	3214886	IfStatement	if ( pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor )		3213535	0					
ANR	3214887	Condition	pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor	1849:12:60055:60186	3213535	0	True				
ANR	3214888	AndExpression	pIFS -> USBBOXorigScaleFactor && pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor		3213535	0		&&			
ANR	3214889	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	0					
ANR	3214890	Identifier	pIFS		3213535	0					
ANR	3214891	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214892	EqualityExpression	pIFS -> USBBOXorigScaleFactor != pIFS -> USBBOXscaleFactor		3213535	1		!=			
ANR	3214893	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	0					
ANR	3214894	Identifier	pIFS		3213535	0					
ANR	3214895	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214896	PtrMemberAccess	pIFS -> USBBOXscaleFactor		3213535	1					
ANR	3214897	Identifier	pIFS		3213535	0					
ANR	3214898	Identifier	USBBOXscaleFactor		3213535	1					
ANR	3214899	CompoundStatement		274:12:9133:9172	3213535	1					
ANR	3214900	IdentifierDeclStatement	int w = pIFS -> USBBOXorigScaleFactor / 2 ;	1853:12:60383:60422	3213535	0	True				
ANR	3214901	IdentifierDecl	w = pIFS -> USBBOXorigScaleFactor / 2		3213535	0					
ANR	3214902	IdentifierDeclType	int		3213535	0					
ANR	3214903	Identifier	w		3213535	1					
ANR	3214904	AssignmentExpression	w = pIFS -> USBBOXorigScaleFactor / 2		3213535	2		=			
ANR	3214905	Identifier	w		3213535	0					
ANR	3214906	MultiplicativeExpression	pIFS -> USBBOXorigScaleFactor / 2		3213535	1		/			
ANR	3214907	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	0					
ANR	3214908	Identifier	pIFS		3213535	0					
ANR	3214909	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214910	PrimaryExpression	2		3213535	1					
ANR	3214911	ExpressionStatement	design_bbox [ 0 ] = pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor	1855:12:60437:60558	3213535	1	True				
ANR	3214912	AssignmentExpression	design_bbox [ 0 ] = pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	0		=			
ANR	3214913	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3214914	Identifier	design_bbox		3213535	0					
ANR	3214915	PrimaryExpression	0		3213535	1					
ANR	3214916	MultiplicativeExpression	pIFS -> USBBOXxmin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	1		*			
ANR	3214917	PtrMemberAccess	pIFS -> USBBOXxmin		3213535	0					
ANR	3214918	Identifier	pIFS		3213535	0					
ANR	3214919	Identifier	USBBOXxmin		3213535	1					
ANR	3214920	MultiplicativeExpression	pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	1		/			
ANR	3214921	PtrMemberAccess	pIFS -> USBBOXscaleFactor		3213535	0					
ANR	3214922	Identifier	pIFS		3213535	0					
ANR	3214923	Identifier	USBBOXscaleFactor		3213535	1					
ANR	3214924	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	1					
ANR	3214925	Identifier	pIFS		3213535	0					
ANR	3214926	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214927	ExpressionStatement	design_bbox [ 1 ] = pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor	1858:12:60572:60693	3213535	2	True				
ANR	3214928	AssignmentExpression	design_bbox [ 1 ] = pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	0		=			
ANR	3214929	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3214930	Identifier	design_bbox		3213535	0					
ANR	3214931	PrimaryExpression	1		3213535	1					
ANR	3214932	MultiplicativeExpression	pIFS -> USBBOXymin * pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	1		*			
ANR	3214933	PtrMemberAccess	pIFS -> USBBOXymin		3213535	0					
ANR	3214934	Identifier	pIFS		3213535	0					
ANR	3214935	Identifier	USBBOXymin		3213535	1					
ANR	3214936	MultiplicativeExpression	pIFS -> USBBOXscaleFactor / pIFS -> USBBOXorigScaleFactor		3213535	1		/			
ANR	3214937	PtrMemberAccess	pIFS -> USBBOXscaleFactor		3213535	0					
ANR	3214938	Identifier	pIFS		3213535	0					
ANR	3214939	Identifier	USBBOXscaleFactor		3213535	1					
ANR	3214940	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	1					
ANR	3214941	Identifier	pIFS		3213535	0					
ANR	3214942	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214943	ExpressionStatement	design_bbox [ 2 ] = ( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor	1861:12:60707:60835	3213535	3	True				
ANR	3214944	AssignmentExpression	design_bbox [ 2 ] = ( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		3213535	0		=			
ANR	3214945	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3214946	Identifier	design_bbox		3213535	0					
ANR	3214947	PrimaryExpression	2		3213535	1					
ANR	3214948	MultiplicativeExpression	( pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		3213535	1		/			
ANR	3214949	AdditiveExpression	pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor + w		3213535	0		+			
ANR	3214950	MultiplicativeExpression	pIFS -> USBBOXxmax * pIFS -> USBBOXscaleFactor		3213535	0		*			
ANR	3214951	PtrMemberAccess	pIFS -> USBBOXxmax		3213535	0					
ANR	3214952	Identifier	pIFS		3213535	0					
ANR	3214953	Identifier	USBBOXxmax		3213535	1					
ANR	3214954	PtrMemberAccess	pIFS -> USBBOXscaleFactor		3213535	1					
ANR	3214955	Identifier	pIFS		3213535	0					
ANR	3214956	Identifier	USBBOXscaleFactor		3213535	1					
ANR	3214957	Identifier	w		3213535	1					
ANR	3214958	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	1					
ANR	3214959	Identifier	pIFS		3213535	0					
ANR	3214960	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214961	ExpressionStatement	design_bbox [ 3 ] = ( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor	1864:12:60849:60977	3213535	4	True				
ANR	3214962	AssignmentExpression	design_bbox [ 3 ] = ( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		3213535	0		=			
ANR	3214963	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3214964	Identifier	design_bbox		3213535	0					
ANR	3214965	PrimaryExpression	3		3213535	1					
ANR	3214966	MultiplicativeExpression	( pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w ) / pIFS -> USBBOXorigScaleFactor		3213535	1		/			
ANR	3214967	AdditiveExpression	pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor + w		3213535	0		+			
ANR	3214968	MultiplicativeExpression	pIFS -> USBBOXymax * pIFS -> USBBOXscaleFactor		3213535	0		*			
ANR	3214969	PtrMemberAccess	pIFS -> USBBOXymax		3213535	0					
ANR	3214970	Identifier	pIFS		3213535	0					
ANR	3214971	Identifier	USBBOXymax		3213535	1					
ANR	3214972	PtrMemberAccess	pIFS -> USBBOXscaleFactor		3213535	1					
ANR	3214973	Identifier	pIFS		3213535	0					
ANR	3214974	Identifier	USBBOXscaleFactor		3213535	1					
ANR	3214975	Identifier	w		3213535	1					
ANR	3214976	PtrMemberAccess	pIFS -> USBBOXorigScaleFactor		3213535	1					
ANR	3214977	Identifier	pIFS		3213535	0					
ANR	3214978	Identifier	USBBOXorigScaleFactor		3213535	1					
ANR	3214979	ElseStatement	else		3213535	0					
ANR	3214980	CompoundStatement		289:13:9752:9752	3213535	0					
ANR	3214981	ExpressionStatement	design_bbox [ 0 ] = pIFS -> USBBOXxmin	1869:12:61016:61049	3213535	0	True				
ANR	3214982	AssignmentExpression	design_bbox [ 0 ] = pIFS -> USBBOXxmin		3213535	0		=			
ANR	3214983	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3214984	Identifier	design_bbox		3213535	0					
ANR	3214985	PrimaryExpression	0		3213535	1					
ANR	3214986	PtrMemberAccess	pIFS -> USBBOXxmin		3213535	1					
ANR	3214987	Identifier	pIFS		3213535	0					
ANR	3214988	Identifier	USBBOXxmin		3213535	1					
ANR	3214989	ExpressionStatement	design_bbox [ 1 ] = pIFS -> USBBOXymin	1870:12:61063:61096	3213535	1	True				
ANR	3214990	AssignmentExpression	design_bbox [ 1 ] = pIFS -> USBBOXymin		3213535	0		=			
ANR	3214991	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3214992	Identifier	design_bbox		3213535	0					
ANR	3214993	PrimaryExpression	1		3213535	1					
ANR	3214994	PtrMemberAccess	pIFS -> USBBOXymin		3213535	1					
ANR	3214995	Identifier	pIFS		3213535	0					
ANR	3214996	Identifier	USBBOXymin		3213535	1					
ANR	3214997	ExpressionStatement	design_bbox [ 2 ] = pIFS -> USBBOXxmax	1871:12:61110:61143	3213535	2	True				
ANR	3214998	AssignmentExpression	design_bbox [ 2 ] = pIFS -> USBBOXxmax		3213535	0		=			
ANR	3214999	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3215000	Identifier	design_bbox		3213535	0					
ANR	3215001	PrimaryExpression	2		3213535	1					
ANR	3215002	PtrMemberAccess	pIFS -> USBBOXxmax		3213535	1					
ANR	3215003	Identifier	pIFS		3213535	0					
ANR	3215004	Identifier	USBBOXxmax		3213535	1					
ANR	3215005	ExpressionStatement	design_bbox [ 3 ] = pIFS -> USBBOXymax	1872:12:61157:61190	3213535	3	True				
ANR	3215006	AssignmentExpression	design_bbox [ 3 ] = pIFS -> USBBOXymax		3213535	0		=			
ANR	3215007	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3215008	Identifier	design_bbox		3213535	0					
ANR	3215009	PrimaryExpression	3		3213535	1					
ANR	3215010	PtrMemberAccess	pIFS -> USBBOXymax		3213535	1					
ANR	3215011	Identifier	pIFS		3213535	0					
ANR	3215012	Identifier	USBBOXymax		3213535	1					
ANR	3215013	ElseStatement	else		3213535	0					
ANR	3215014	CompoundStatement		296:9:9967:9967	3213535	0					
ANR	3215015	CompoundStatement		338:8:12313:12353	3213535	68					
ANR	3215016	IdentifierDeclStatement	"const double expansion_x = 2 , expansion_y = 2 ;"	1907:8:63047:63092	3213535	0	True				
ANR	3215017	IdentifierDecl	expansion_x = 2		3213535	0					
ANR	3215018	IdentifierDeclType	const double		3213535	0					
ANR	3215019	Identifier	expansion_x		3213535	1					
ANR	3215020	AssignmentExpression	expansion_x = 2		3213535	2		=			
ANR	3215021	Identifier	expansion_x		3213535	0					
ANR	3215022	PrimaryExpression	2		3213535	1					
ANR	3215023	IdentifierDecl	expansion_y = 2		3213535	1					
ANR	3215024	IdentifierDeclType	const double		3213535	0					
ANR	3215025	Identifier	expansion_y		3213535	1					
ANR	3215026	AssignmentExpression	expansion_y = 2		3213535	2		=			
ANR	3215027	Identifier	expansion_y		3213535	0					
ANR	3215028	PrimaryExpression	2		3213535	1					
ANR	3215029	IdentifierDeclStatement	const double XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx ;	1908:8:63133:63219	3213535	1	True				
ANR	3215030	IdentifierDecl	XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	0					
ANR	3215031	IdentifierDeclType	const double		3213535	0					
ANR	3215032	Identifier	XX		3213535	1					
ANR	3215033	AssignmentExpression	XX = r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	2		=			
ANR	3215034	Identifier	XX		3213535	0					
ANR	3215035	MultiplicativeExpression	r -> tran_xx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	1		*			
ANR	3215036	PtrMemberAccess	r -> tran_xx		3213535	0					
ANR	3215037	Identifier	r		3213535	0					
ANR	3215038	Identifier	tran_xx		3213535	1					
ANR	3215039	MultiplicativeExpression	( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	1		/			
ANR	3215040	ShiftExpression	r -> fc . s . m2 . xworld_res >> 16		3213535	0		>>			
ANR	3215041	MemberAccess	r -> fc . s . m2 . xworld_res		3213535	0					
ANR	3215042	MemberAccess	r -> fc . s . m2		3213535	0					
ANR	3215043	MemberAccess	r -> fc . s		3213535	0					
ANR	3215044	PtrMemberAccess	r -> fc		3213535	0					
ANR	3215045	Identifier	r		3213535	0					
ANR	3215046	Identifier	fc		3213535	1					
ANR	3215047	Identifier	s		3213535	1					
ANR	3215048	Identifier	m2		3213535	1					
ANR	3215049	Identifier	xworld_res		3213535	1					
ANR	3215050	PrimaryExpression	16		3213535	1					
ANR	3215051	MultiplicativeExpression	72 / du_emx		3213535	1		/			
ANR	3215052	PrimaryExpression	72		3213535	0					
ANR	3215053	Identifier	du_emx		3213535	1					
ANR	3215054	IdentifierDeclStatement	const double XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy ;	1910:8:63229:63315	3213535	2	True				
ANR	3215055	IdentifierDecl	XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	0					
ANR	3215056	IdentifierDeclType	const double		3213535	0					
ANR	3215057	Identifier	XY		3213535	1					
ANR	3215058	AssignmentExpression	XY = r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	2		=			
ANR	3215059	Identifier	XY		3213535	0					
ANR	3215060	MultiplicativeExpression	r -> tran_xy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	1		*			
ANR	3215061	PtrMemberAccess	r -> tran_xy		3213535	0					
ANR	3215062	Identifier	r		3213535	0					
ANR	3215063	Identifier	tran_xy		3213535	1					
ANR	3215064	MultiplicativeExpression	( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	1		/			
ANR	3215065	ShiftExpression	r -> fc . s . m2 . yworld_res >> 16		3213535	0		>>			
ANR	3215066	MemberAccess	r -> fc . s . m2 . yworld_res		3213535	0					
ANR	3215067	MemberAccess	r -> fc . s . m2		3213535	0					
ANR	3215068	MemberAccess	r -> fc . s		3213535	0					
ANR	3215069	PtrMemberAccess	r -> fc		3213535	0					
ANR	3215070	Identifier	r		3213535	0					
ANR	3215071	Identifier	fc		3213535	1					
ANR	3215072	Identifier	s		3213535	1					
ANR	3215073	Identifier	m2		3213535	1					
ANR	3215074	Identifier	yworld_res		3213535	1					
ANR	3215075	PrimaryExpression	16		3213535	1					
ANR	3215076	MultiplicativeExpression	72 / du_emy		3213535	1		/			
ANR	3215077	PrimaryExpression	72		3213535	0					
ANR	3215078	Identifier	du_emy		3213535	1					
ANR	3215079	IdentifierDeclStatement	const double YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx ;	1912:8:63325:63411	3213535	3	True				
ANR	3215080	IdentifierDecl	YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	0					
ANR	3215081	IdentifierDeclType	const double		3213535	0					
ANR	3215082	Identifier	YX		3213535	1					
ANR	3215083	AssignmentExpression	YX = r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	2		=			
ANR	3215084	Identifier	YX		3213535	0					
ANR	3215085	MultiplicativeExpression	r -> tran_yx * ( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	1		*			
ANR	3215086	PtrMemberAccess	r -> tran_yx		3213535	0					
ANR	3215087	Identifier	r		3213535	0					
ANR	3215088	Identifier	tran_yx		3213535	1					
ANR	3215089	MultiplicativeExpression	( r -> fc . s . m2 . xworld_res >> 16 ) / 72 / du_emx		3213535	1		/			
ANR	3215090	ShiftExpression	r -> fc . s . m2 . xworld_res >> 16		3213535	0		>>			
ANR	3215091	MemberAccess	r -> fc . s . m2 . xworld_res		3213535	0					
ANR	3215092	MemberAccess	r -> fc . s . m2		3213535	0					
ANR	3215093	MemberAccess	r -> fc . s		3213535	0					
ANR	3215094	PtrMemberAccess	r -> fc		3213535	0					
ANR	3215095	Identifier	r		3213535	0					
ANR	3215096	Identifier	fc		3213535	1					
ANR	3215097	Identifier	s		3213535	1					
ANR	3215098	Identifier	m2		3213535	1					
ANR	3215099	Identifier	xworld_res		3213535	1					
ANR	3215100	PrimaryExpression	16		3213535	1					
ANR	3215101	MultiplicativeExpression	72 / du_emx		3213535	1		/			
ANR	3215102	PrimaryExpression	72		3213535	0					
ANR	3215103	Identifier	du_emx		3213535	1					
ANR	3215104	IdentifierDeclStatement	const double YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy ;	1914:8:63421:63507	3213535	4	True				
ANR	3215105	IdentifierDecl	YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	0					
ANR	3215106	IdentifierDeclType	const double		3213535	0					
ANR	3215107	Identifier	YY		3213535	1					
ANR	3215108	AssignmentExpression	YY = r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	2		=			
ANR	3215109	Identifier	YY		3213535	0					
ANR	3215110	MultiplicativeExpression	r -> tran_yy * ( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	1		*			
ANR	3215111	PtrMemberAccess	r -> tran_yy		3213535	0					
ANR	3215112	Identifier	r		3213535	0					
ANR	3215113	Identifier	tran_yy		3213535	1					
ANR	3215114	MultiplicativeExpression	( r -> fc . s . m2 . yworld_res >> 16 ) / 72 / du_emy		3213535	1		/			
ANR	3215115	ShiftExpression	r -> fc . s . m2 . yworld_res >> 16		3213535	0		>>			
ANR	3215116	MemberAccess	r -> fc . s . m2 . yworld_res		3213535	0					
ANR	3215117	MemberAccess	r -> fc . s . m2		3213535	0					
ANR	3215118	MemberAccess	r -> fc . s		3213535	0					
ANR	3215119	PtrMemberAccess	r -> fc		3213535	0					
ANR	3215120	Identifier	r		3213535	0					
ANR	3215121	Identifier	fc		3213535	1					
ANR	3215122	Identifier	s		3213535	1					
ANR	3215123	Identifier	m2		3213535	1					
ANR	3215124	Identifier	yworld_res		3213535	1					
ANR	3215125	PrimaryExpression	16		3213535	1					
ANR	3215126	MultiplicativeExpression	72 / du_emy		3213535	1		/			
ANR	3215127	PrimaryExpression	72		3213535	0					
ANR	3215128	Identifier	du_emy		3213535	1					
ANR	3215129	IdentifierDeclStatement	const double det = XX * YY - XY * YX ;	1916:8:63517:63553	3213535	5	True				
ANR	3215130	IdentifierDecl	det = XX * YY - XY * YX		3213535	0					
ANR	3215131	IdentifierDeclType	const double		3213535	0					
ANR	3215132	Identifier	det		3213535	1					
ANR	3215133	AssignmentExpression	det = XX * YY - XY * YX		3213535	2		=			
ANR	3215134	Identifier	det		3213535	0					
ANR	3215135	AdditiveExpression	XX * YY - XY * YX		3213535	1		-			
ANR	3215136	MultiplicativeExpression	XX * YY		3213535	0		*			
ANR	3215137	Identifier	XX		3213535	0					
ANR	3215138	Identifier	YY		3213535	1					
ANR	3215139	MultiplicativeExpression	XY * YX		3213535	1		*			
ANR	3215140	Identifier	XY		3213535	0					
ANR	3215141	Identifier	YX		3213535	1					
ANR	3215142	IdentifierDeclStatement	const double deta = det < 0 ? - det : det ;	1917:8:63563:63603	3213535	6	True				
ANR	3215143	IdentifierDecl	deta = det < 0 ? - det : det		3213535	0					
ANR	3215144	IdentifierDeclType	const double		3213535	0					
ANR	3215145	Identifier	deta		3213535	1					
ANR	3215146	AssignmentExpression	deta = det < 0 ? - det : det		3213535	2		=			
ANR	3215147	Identifier	deta		3213535	0					
ANR	3215148	ConditionalExpression	det < 0 ? - det : det		3213535	1					
ANR	3215149	Condition	det < 0		3213535	0					
ANR	3215150	RelationalExpression	det < 0		3213535	0		<			
ANR	3215151	Identifier	det		3213535	0					
ANR	3215152	PrimaryExpression	0		3213535	1					
ANR	3215153	UnaryOperationExpression	- det		3213535	1					
ANR	3215154	UnaryOperator	-		3213535	0					
ANR	3215155	Identifier	det		3213535	1					
ANR	3215156	Identifier	det		3213535	2					
ANR	3215157	IfStatement	if ( deta > 0.0000000001 )		3213535	7					
ANR	3215158	Condition	deta > 0.0000000001	1919:12:63618:63636	3213535	0	True				
ANR	3215159	RelationalExpression	deta > 0.0000000001		3213535	0		>			
ANR	3215160	Identifier	deta		3213535	0					
ANR	3215161	PrimaryExpression	0.0000000001		3213535	1					
ANR	3215162	CompoundStatement		346:12:12720:12771	3213535	1					
ANR	3215163	IdentifierDeclStatement	"const double xx = YY / det , xy = - XY / det ;"	1920:12:63653:63695	3213535	0	True				
ANR	3215164	IdentifierDecl	xx = YY / det		3213535	0					
ANR	3215165	IdentifierDeclType	const double		3213535	0					
ANR	3215166	Identifier	xx		3213535	1					
ANR	3215167	AssignmentExpression	xx = YY / det		3213535	2		=			
ANR	3215168	Identifier	xx		3213535	0					
ANR	3215169	MultiplicativeExpression	YY / det		3213535	1		/			
ANR	3215170	Identifier	YY		3213535	0					
ANR	3215171	Identifier	det		3213535	1					
ANR	3215172	IdentifierDecl	xy = - XY / det		3213535	1					
ANR	3215173	IdentifierDeclType	const double		3213535	0					
ANR	3215174	Identifier	xy		3213535	1					
ANR	3215175	AssignmentExpression	xy = - XY / det		3213535	2		=			
ANR	3215176	Identifier	xy		3213535	0					
ANR	3215177	MultiplicativeExpression	- XY / det		3213535	1		/			
ANR	3215178	UnaryOperationExpression	- XY		3213535	0					
ANR	3215179	UnaryOperator	-		3213535	0					
ANR	3215180	Identifier	XY		3213535	1					
ANR	3215181	Identifier	det		3213535	1					
ANR	3215182	IdentifierDeclStatement	"const double yx = - YX / det , yy = XX / det ;"	1921:12:63709:63751	3213535	1	True				
ANR	3215183	IdentifierDecl	yx = - YX / det		3213535	0					
ANR	3215184	IdentifierDeclType	const double		3213535	0					
ANR	3215185	Identifier	yx		3213535	1					
ANR	3215186	AssignmentExpression	yx = - YX / det		3213535	2		=			
ANR	3215187	Identifier	yx		3213535	0					
ANR	3215188	MultiplicativeExpression	- YX / det		3213535	1		/			
ANR	3215189	UnaryOperationExpression	- YX		3213535	0					
ANR	3215190	UnaryOperator	-		3213535	0					
ANR	3215191	Identifier	YX		3213535	1					
ANR	3215192	Identifier	det		3213535	1					
ANR	3215193	IdentifierDecl	yy = XX / det		3213535	1					
ANR	3215194	IdentifierDeclType	const double		3213535	0					
ANR	3215195	Identifier	yy		3213535	1					
ANR	3215196	AssignmentExpression	yy = XX / det		3213535	2		=			
ANR	3215197	Identifier	yy		3213535	0					
ANR	3215198	MultiplicativeExpression	XX / det		3213535	1		/			
ANR	3215199	Identifier	XX		3213535	0					
ANR	3215200	Identifier	det		3213535	1					
ANR	3215201	IdentifierDeclStatement	const double dx = - ( expansion_x * xx + expansion_y * xy ) ;	1922:12:63765:63821	3213535	2	True				
ANR	3215202	IdentifierDecl	dx = - ( expansion_x * xx + expansion_y * xy )		3213535	0					
ANR	3215203	IdentifierDeclType	const double		3213535	0					
ANR	3215204	Identifier	dx		3213535	1					
ANR	3215205	AssignmentExpression	dx = - ( expansion_x * xx + expansion_y * xy )		3213535	2		=			
ANR	3215206	Identifier	dx		3213535	0					
ANR	3215207	UnaryOperationExpression	- ( expansion_x * xx + expansion_y * xy )		3213535	1					
ANR	3215208	UnaryOperator	-		3213535	0					
ANR	3215209	AdditiveExpression	expansion_x * xx + expansion_y * xy		3213535	1		+			
ANR	3215210	MultiplicativeExpression	expansion_x * xx		3213535	0		*			
ANR	3215211	Identifier	expansion_x		3213535	0					
ANR	3215212	Identifier	xx		3213535	1					
ANR	3215213	MultiplicativeExpression	expansion_y * xy		3213535	1		*			
ANR	3215214	Identifier	expansion_y		3213535	0					
ANR	3215215	Identifier	xy		3213535	1					
ANR	3215216	IdentifierDeclStatement	const double dy = - ( expansion_x * yx + expansion_y * yy ) ;	1923:12:63835:63891	3213535	3	True				
ANR	3215217	IdentifierDecl	dy = - ( expansion_x * yx + expansion_y * yy )		3213535	0					
ANR	3215218	IdentifierDeclType	const double		3213535	0					
ANR	3215219	Identifier	dy		3213535	1					
ANR	3215220	AssignmentExpression	dy = - ( expansion_x * yx + expansion_y * yy )		3213535	2		=			
ANR	3215221	Identifier	dy		3213535	0					
ANR	3215222	UnaryOperationExpression	- ( expansion_x * yx + expansion_y * yy )		3213535	1					
ANR	3215223	UnaryOperator	-		3213535	0					
ANR	3215224	AdditiveExpression	expansion_x * yx + expansion_y * yy		3213535	1		+			
ANR	3215225	MultiplicativeExpression	expansion_x * yx		3213535	0		*			
ANR	3215226	Identifier	expansion_x		3213535	0					
ANR	3215227	Identifier	yx		3213535	1					
ANR	3215228	MultiplicativeExpression	expansion_y * yy		3213535	1		*			
ANR	3215229	Identifier	expansion_y		3213535	0					
ANR	3215230	Identifier	yy		3213535	1					
ANR	3215231	IdentifierDeclStatement	const SL32 dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 ) ;	1924:12:63905:63956	3213535	4	True				
ANR	3215232	IdentifierDecl	dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		3213535	0					
ANR	3215233	IdentifierDeclType	const SL32		3213535	0					
ANR	3215234	Identifier	dxa		3213535	1					
ANR	3215235	AssignmentExpression	dxa = ( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		3213535	2		=			
ANR	3215236	Identifier	dxa		3213535	0					
ANR	3215237	CastExpression	( SL32 ) ( ( dx < 0 ? - dx : dx ) + 0.5 )		3213535	1					
ANR	3215238	CastTarget	SL32		3213535	0					
ANR	3215239	AdditiveExpression	( dx < 0 ? - dx : dx ) + 0.5		3213535	1		+			
ANR	3215240	ConditionalExpression	dx < 0 ? - dx : dx		3213535	0					
ANR	3215241	Condition	dx < 0		3213535	0					
ANR	3215242	RelationalExpression	dx < 0		3213535	0		<			
ANR	3215243	Identifier	dx		3213535	0					
ANR	3215244	PrimaryExpression	0		3213535	1					
ANR	3215245	UnaryOperationExpression	- dx		3213535	1					
ANR	3215246	UnaryOperator	-		3213535	0					
ANR	3215247	Identifier	dx		3213535	1					
ANR	3215248	Identifier	dx		3213535	2					
ANR	3215249	PrimaryExpression	0.5		3213535	1					
ANR	3215250	IdentifierDeclStatement	const SL32 dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 ) ;	1925:12:63970:64021	3213535	5	True				
ANR	3215251	IdentifierDecl	dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		3213535	0					
ANR	3215252	IdentifierDeclType	const SL32		3213535	0					
ANR	3215253	Identifier	dya		3213535	1					
ANR	3215254	AssignmentExpression	dya = ( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		3213535	2		=			
ANR	3215255	Identifier	dya		3213535	0					
ANR	3215256	CastExpression	( SL32 ) ( ( dy < 0 ? - dy : dy ) + 0.5 )		3213535	1					
ANR	3215257	CastTarget	SL32		3213535	0					
ANR	3215258	AdditiveExpression	( dy < 0 ? - dy : dy ) + 0.5		3213535	1		+			
ANR	3215259	ConditionalExpression	dy < 0 ? - dy : dy		3213535	0					
ANR	3215260	Condition	dy < 0		3213535	0					
ANR	3215261	RelationalExpression	dy < 0		3213535	0		<			
ANR	3215262	Identifier	dy		3213535	0					
ANR	3215263	PrimaryExpression	0		3213535	1					
ANR	3215264	UnaryOperationExpression	- dy		3213535	1					
ANR	3215265	UnaryOperator	-		3213535	0					
ANR	3215266	Identifier	dy		3213535	1					
ANR	3215267	Identifier	dy		3213535	2					
ANR	3215268	PrimaryExpression	0.5		3213535	1					
ANR	3215269	ExpressionStatement	design_bbox [ 0 ] -= dxa	1927:12:64036:64057	3213535	6	True				
ANR	3215270	AssignmentExpression	design_bbox [ 0 ] -= dxa		3213535	0		-=			
ANR	3215271	ArrayIndexing	design_bbox [ 0 ]		3213535	0					
ANR	3215272	Identifier	design_bbox		3213535	0					
ANR	3215273	PrimaryExpression	0		3213535	1					
ANR	3215274	Identifier	dxa		3213535	1					
ANR	3215275	ExpressionStatement	design_bbox [ 1 ] -= dya	1928:12:64071:64092	3213535	7	True				
ANR	3215276	AssignmentExpression	design_bbox [ 1 ] -= dya		3213535	0		-=			
ANR	3215277	ArrayIndexing	design_bbox [ 1 ]		3213535	0					
ANR	3215278	Identifier	design_bbox		3213535	0					
ANR	3215279	PrimaryExpression	1		3213535	1					
ANR	3215280	Identifier	dya		3213535	1					
ANR	3215281	ExpressionStatement	design_bbox [ 2 ] += dxa	1929:12:64106:64127	3213535	8	True				
ANR	3215282	AssignmentExpression	design_bbox [ 2 ] += dxa		3213535	0		+=			
ANR	3215283	ArrayIndexing	design_bbox [ 2 ]		3213535	0					
ANR	3215284	Identifier	design_bbox		3213535	0					
ANR	3215285	PrimaryExpression	2		3213535	1					
ANR	3215286	Identifier	dxa		3213535	1					
ANR	3215287	ExpressionStatement	design_bbox [ 3 ] += dya	1930:12:64141:64162	3213535	9	True				
ANR	3215288	AssignmentExpression	design_bbox [ 3 ] += dya		3213535	0		+=			
ANR	3215289	ArrayIndexing	design_bbox [ 3 ]		3213535	0					
ANR	3215290	Identifier	design_bbox		3213535	0					
ANR	3215291	PrimaryExpression	3		3213535	1					
ANR	3215292	Identifier	dya		3213535	1					
ANR	3215293	ExpressionStatement	"set_metrics ( r , metrics , design_bbox , design_escapement , du_emx , du_emy )"	1933:4:64184:64255	3213535	69	True				
ANR	3215294	CallExpression	"set_metrics ( r , metrics , design_bbox , design_escapement , du_emx , du_emy )"		3213535	0					
ANR	3215295	Callee	set_metrics		3213535	0					
ANR	3215296	Identifier	set_metrics		3213535	0					
ANR	3215297	ArgumentList	r		3213535	1					
ANR	3215298	Argument	r		3213535	0					
ANR	3215299	Identifier	r		3213535	0					
ANR	3215300	Argument	metrics		3213535	1					
ANR	3215301	Identifier	metrics		3213535	0					
ANR	3215302	Argument	design_bbox		3213535	2					
ANR	3215303	Identifier	design_bbox		3213535	0					
ANR	3215304	Argument	design_escapement		3213535	3					
ANR	3215305	Identifier	design_escapement		3213535	0					
ANR	3215306	Argument	du_emx		3213535	4					
ANR	3215307	Identifier	du_emx		3213535	0					
ANR	3215308	Argument	du_emy		3213535	5					
ANR	3215309	Identifier	du_emy		3213535	0					
ANR	3215310	IfStatement	if ( code == ERR_fixed_space )		3213535	70					
ANR	3215311	Condition	code == ERR_fixed_space	1934:8:64265:64287	3213535	0	True				
ANR	3215312	EqualityExpression	code == ERR_fixed_space		3213535	0		==			
ANR	3215313	Identifier	code		3213535	0					
ANR	3215314	Identifier	ERR_fixed_space		3213535	1					
ANR	3215315	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1935:8:64298:64338	3213535	1	True				
ANR	3215316	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3213535	0					
ANR	3215317	Callee	gs_fapi_ufst_release_char_data_inline		3213535	0					
ANR	3215318	Identifier	gs_fapi_ufst_release_char_data_inline		3213535	0					
ANR	3215319	ArgumentList	r		3213535	1					
ANR	3215320	Argument	r		3213535	0					
ANR	3215321	Identifier	r		3213535	0					
ANR	3215322	ReturnStatement	return 0 ;	1936:4:64344:64352	3213535	71	True				
ANR	3215323	PrimaryExpression	0		3213535	0					
ANR	3215324	ReturnType	static gs_fapi_retcode		3213535	1					
ANR	3215325	Identifier	get_char		3213535	2					
ANR	3215326	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_path * p , gs_fapi_metrics * metrics , UW16 format"		3213535	3					
ANR	3215327	Parameter	gs_fapi_server * server	1578:9:51121:51142	3213535	0	True				
ANR	3215328	ParameterType	gs_fapi_server *		3213535	0					
ANR	3215329	Identifier	server		3213535	1					
ANR	3215330	Parameter	gs_fapi_font * ff	1578:33:51145:51160	3213535	1	True				
ANR	3215331	ParameterType	gs_fapi_font *		3213535	0					
ANR	3215332	Identifier	ff		3213535	1					
ANR	3215333	Parameter	gs_fapi_char_ref * c	1578:51:51163:51181	3213535	2	True				
ANR	3215334	ParameterType	gs_fapi_char_ref *		3213535	0					
ANR	3215335	Identifier	c		3213535	1					
ANR	3215336	Parameter	gs_fapi_path * p	1579:9:51193:51207	3213535	3	True				
ANR	3215337	ParameterType	gs_fapi_path *		3213535	0					
ANR	3215338	Identifier	p		3213535	1					
ANR	3215339	Parameter	gs_fapi_metrics * metrics	1579:26:51210:51233	3213535	4	True				
ANR	3215340	ParameterType	gs_fapi_metrics *		3213535	0					
ANR	3215341	Identifier	metrics		3213535	1					
ANR	3215342	Parameter	UW16 format	1579:52:51236:51246	3213535	5	True				
ANR	3215343	ParameterType	UW16		3213535	0					
ANR	3215344	Identifier	format		3213535	1					
ANR	3215345	CFGEntryNode	ENTRY		3213535		True				
ANR	3215346	CFGExitNode	EXIT		3213535		True				
ANR	3215347	Symbol	c -> sb_x		3213535						
ANR	3215348	Symbol	XX		3213535						
ANR	3215349	Symbol	xx		3213535						
ANR	3215350	Symbol	XY		3213535						
ANR	3215351	Symbol	xy		3213535						
ANR	3215352	Symbol	ff -> is_cid		3213535						
ANR	3215353	Symbol	ff -> char_data_len		3213535						
ANR	3215354	Symbol	pIFS -> fcCur . ssnum		3213535						
ANR	3215355	Symbol	& server -> face . ctm		3213535						
ANR	3215356	Symbol	USBOUNDBOX		3213535						
ANR	3215357	Symbol	r -> tran_yy		3213535						
ANR	3215358	Symbol	pIFS -> cs		3213535						
ANR	3215359	Symbol	r -> tran_yx		3213535						
ANR	3215360	Symbol	* glyph_width		3213535						
ANR	3215361	Symbol	pbm -> left_indent		3213535						
ANR	3215362	Symbol	pIFS -> fcCur		3213535						
ANR	3215363	Symbol	det		3213535						
ANR	3215364	Symbol	len		3213535						
ANR	3215365	Symbol	FSA		3213535						
ANR	3215366	Symbol	r -> fc . s . m2 . xworld_res		3213535						
ANR	3215367	Symbol	ff -> get_glyph		3213535						
ANR	3215368	Symbol	notdef_str . data		3213535						
ANR	3215369	Symbol	CGIFFwidth2		3213535						
ANR	3215370	Symbol	pIFS -> fcCur . format		3213535						
ANR	3215371	Symbol	YX		3213535						
ANR	3215372	Symbol	yx		3213535						
ANR	3215373	Symbol	YY		3213535						
ANR	3215374	Symbol	yy		3213535						
ANR	3215375	Symbol	fc -> ExtndFlags		3213535						
ANR	3215376	Symbol	design_bbox		3213535						
ANR	3215377	Symbol	* PSchar_name		3213535						
ANR	3215378	Symbol	FC_DONTHINTTT		3213535						
ANR	3215379	Symbol	server -> face		3213535						
ANR	3215380	Symbol	pIFS -> USBBOXorigScaleFactor		3213535						
ANR	3215381	Symbol	r -> tran_xx		3213535						
ANR	3215382	Symbol	~FC_OUTPUT_MASK		3213535						
ANR	3215383	Symbol	r -> tran_xy		3213535						
ANR	3215384	Symbol	c1		3213535						
ANR	3215385	Symbol	pbm -> du_emx		3213535						
ANR	3215386	Symbol	pbm -> du_emy		3213535						
ANR	3215387	Symbol	pIFS -> glyphMetricsDU . aw		3213535						
ANR	3215388	Symbol	r -> sb_x		3213535						
ANR	3215389	Symbol	* pol		3213535						
ANR	3215390	Symbol	pIFS -> USBBOXxmin		3213535						
ANR	3215391	Symbol	r -> fc . s . m2 . yworld_res		3213535						
ANR	3215392	Symbol	metrics		3213535						
ANR	3215393	Symbol	r -> char_data		3213535						
ANR	3215394	Symbol	* pIFS		3213535						
ANR	3215395	Symbol	server		3213535						
ANR	3215396	Symbol	pol -> top		3213535						
ANR	3215397	Symbol	code2		3213535						
ANR	3215398	Symbol	FC_FCO_TYPE		3213535						
ANR	3215399	Symbol	pbm -> top_indent		3213535						
ANR	3215400	Symbol	* server		3213535						
ANR	3215401	Symbol	server -> face . ctm		3213535						
ANR	3215402	Symbol	pIFS -> USBBOXxmax		3213535						
ANR	3215403	Symbol	glyph_width_code . CharType . TT_unicode		3213535						
ANR	3215404	Symbol	pol		3213535						
ANR	3215405	Symbol	dxa		3213535						
ANR	3215406	Symbol	EF_TT_NOHINT		3213535						
ANR	3215407	Symbol	ff -> is_vertical		3213535						
ANR	3215408	Symbol	result		3213535						
ANR	3215409	Symbol	ERR_fixed_space		3213535						
ANR	3215410	Symbol	pIFS		3213535						
ANR	3215411	Symbol	pbm -> escapement		3213535						
ANR	3215412	Symbol	min		3213535						
ANR	3215413	Symbol	c -> char_name_length		3213535						
ANR	3215414	Symbol	notdef		3213535						
ANR	3215415	Symbol	PSchar_name		3213535						
ANR	3215416	Symbol	ff -> server_font_data		3213535						
ANR	3215417	Symbol	cc		3213535						
ANR	3215418	Symbol	du_emx		3213535						
ANR	3215419	Symbol	* fc		3213535						
ANR	3215420	Symbol	If_to_I		3213535						
ANR	3215421	Symbol	du_emy		3213535						
ANR	3215422	Symbol	& r -> fc		3213535						
ANR	3215423	Symbol	c		3213535						
ANR	3215424	Symbol	r -> callback_error		3213535						
ANR	3215425	Symbol	d		3213535						
ANR	3215426	Symbol	* ff		3213535						
ANR	3215427	Symbol	pol -> left		3213535						
ANR	3215428	Symbol	glyph_width_code		3213535						
ANR	3215429	Symbol	RAW_GLYPH		3213535						
ANR	3215430	Symbol	r -> fc . s . m2		3213535						
ANR	3215431	Symbol	dya		3213535						
ANR	3215432	Symbol	p		3213535						
ANR	3215433	Symbol	r		3213535						
ANR	3215434	Symbol	pbm -> black_width		3213535						
ANR	3215435	Symbol	& server -> face		3213535						
ANR	3215436	Symbol	w		3213535						
ANR	3215437	Symbol	pbm -> black_depth		3213535						
ANR	3215438	Symbol	* design_escapement		3213535						
ANR	3215439	Symbol	* len		3213535						
ANR	3215440	Symbol	deta		3213535						
ANR	3215441	Symbol	ERR_bm_too_big		3213535						
ANR	3215442	Symbol	pIFS -> USBBOXscaleFactor		3213535						
ANR	3215443	Symbol	FC_BITMAP_TYPE		3213535						
ANR	3215444	Symbol	client_char_data		3213535						
ANR	3215445	Symbol	space		3213535						
ANR	3215446	Symbol	r -> bRaster		3213535						
ANR	3215447	Symbol	pol -> bottom		3213535						
ANR	3215448	Symbol	notdef_str		3213535						
ANR	3215449	Symbol	strlen		3213535						
ANR	3215450	Symbol	memcmp		3213535						
ANR	3215451	Symbol	pIFS -> gpps		3213535						
ANR	3215452	Symbol	dx		3213535						
ANR	3215453	Symbol	* metrics		3213535						
ANR	3215454	Symbol	dy		3213535						
ANR	3215455	Symbol	pIFS -> USBBOXymin		3213535						
ANR	3215456	Symbol	pol -> advanceHeight		3213535						
ANR	3215457	Symbol	glyph_width_code . CharType		3213535						
ANR	3215458	Symbol	NULL		3213535						
ANR	3215459	Symbol	* pbm		3213535						
ANR	3215460	Symbol	pIFS -> USBBOXymax		3213535						
ANR	3215461	Symbol	notdef_str . size		3213535						
ANR	3215462	Symbol	format		3213535						
ANR	3215463	Symbol	* * c		3213535						
ANR	3215464	Symbol	pIFS -> cs . du_emy		3213535						
ANR	3215465	Symbol	TRUE		3213535						
ANR	3215466	Symbol	r -> metrics_type		3213535						
ANR	3215467	Symbol	ssnum		3213535						
ANR	3215468	Symbol	client_char_data_len		3213535						
ANR	3215469	Symbol	use_XL_format		3213535						
ANR	3215470	Symbol	d -> font_type		3213535						
ANR	3215471	Symbol	ff -> char_data		3213535						
ANR	3215472	Symbol	& notdef_str		3213535						
ANR	3215473	Symbol	pol -> right		3213535						
ANR	3215474	Symbol	pIFS -> cs . du_emx		3213535						
ANR	3215475	Symbol	true		3213535						
ANR	3215476	Symbol	pbm		3213535						
ANR	3215477	Symbol	fc		3213535						
ANR	3215478	Symbol	ff -> is_mtx_skipped		3213535						
ANR	3215479	Symbol	ff		3213535						
ANR	3215480	Symbol	pol -> du_emx		3213535						
ANR	3215481	Symbol	code		3213535						
ANR	3215482	Symbol	ff -> is_type1		3213535						
ANR	3215483	Symbol	pol -> du_emy		3213535						
ANR	3215484	Symbol	design_escapement		3213535						
ANR	3215485	Symbol	r -> aw_x		3213535						
ANR	3215486	Symbol	FC_TT_TYPE		3213535						
ANR	3215487	Symbol	c -> char_codes		3213535						
ANR	3215488	Symbol	* design_bbox		3213535						
ANR	3215489	Symbol	glyph_width		3213535						
ANR	3215490	Symbol	pIFS -> glyphMetricsDU		3213535						
ANR	3215491	Symbol	c -> metrics_type		3213535						
ANR	3215492	Symbol	r -> fc . s		3213535						
ANR	3215493	Symbol	c -> aw_x		3213535						
ANR	3215494	Symbol	EF_SUBSTHOLLOWBOX_TYPE		3213535						
ANR	3215495	Symbol	metrics -> bbox_x1		3213535						
ANR	3215496	Symbol	c -> char_name		3213535						
ANR	3215497	Symbol	r -> ff		3213535						
ANR	3215498	Symbol	pIFS -> glyphMetricsDU . aw . x		3213535						
ANR	3215499	Symbol	pIFS -> glyphMetricsDU . aw . y		3213535						
ANR	3215500	Symbol	r -> fc		3213535						
ANR	3215501	Symbol	static_server_ptr_for_ufst_callback		3213535						
ANR	3215502	Symbol	length		3213535						
ANR	3215503	Symbol	false		3213535						
ANR	3215504	Symbol	expansion_x		3213535						
ANR	3215505	Symbol	FC_PST1_TYPE		3213535						
ANR	3215506	Symbol	expansion_y		3213535						
ANR	3215507	Symbol	ff -> need_decrypt		3213535						
ANR	3215508	Symbol	* c		3213535						
ANR	3215509	Symbol	* d		3213535						
ANR	3215510	Symbol	pol -> escapement		3213535						
ANR	3215511	Symbol	* c -> char_codes		3213535						
ANR	3215512	Symbol	r -> fc . ExtndFlags		3213535						
ANR	3215513	Symbol	FALSE		3213535						
ANR	3215514	Symbol	savehint		3213535						
ANR	3215515	Symbol	* r		3213535						
ANR	3215516	Symbol	ERR_bm_buff		3213535						
ANR	3215517	Function	gs_fapi_ufst_get_char_outline_metrics	1939:0:64357:64859							
ANR	3215518	FunctionDef	"gs_fapi_ufst_get_char_outline_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		3215517	0					
ANR	3215519	CompoundStatement		1942:0:64535:64859	3215517	0					
ANR	3215520	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1943:4:64541:64578	3215517	0	True				
ANR	3215521	IdentifierDecl	* r = If_to_I ( server )		3215517	0					
ANR	3215522	IdentifierDeclType	fapi_ufst_server *		3215517	0					
ANR	3215523	Identifier	r		3215517	1					
ANR	3215524	AssignmentExpression	* r = If_to_I ( server )		3215517	2		=			
ANR	3215525	Identifier	r		3215517	0					
ANR	3215526	CallExpression	If_to_I ( server )		3215517	1					
ANR	3215527	Callee	If_to_I		3215517	0					
ANR	3215528	Identifier	If_to_I		3215517	0					
ANR	3215529	ArgumentList	server		3215517	1					
ANR	3215530	Argument	server		3215517	0					
ANR	3215531	Identifier	server		3215517	0					
ANR	3215532	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1945:4:64585:64625	3215517	1	True				
ANR	3215533	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3215517	0					
ANR	3215534	Callee	gs_fapi_ufst_release_char_data_inline		3215517	0					
ANR	3215535	Identifier	gs_fapi_ufst_release_char_data_inline		3215517	0					
ANR	3215536	ArgumentList	r		3215517	1					
ANR	3215537	Argument	r		3215517	0					
ANR	3215538	Identifier	r		3215517	0					
ANR	3215539	ReturnStatement	"return get_char ( server , ff , c , NULL , metrics , FC_CUBIC_TYPE ) ;"	1946:4:64631:64691	3215517	2	True				
ANR	3215540	CallExpression	"get_char ( server , ff , c , NULL , metrics , FC_CUBIC_TYPE )"		3215517	0					
ANR	3215541	Callee	get_char		3215517	0					
ANR	3215542	Identifier	get_char		3215517	0					
ANR	3215543	ArgumentList	server		3215517	1					
ANR	3215544	Argument	server		3215517	0					
ANR	3215545	Identifier	server		3215517	0					
ANR	3215546	Argument	ff		3215517	1					
ANR	3215547	Identifier	ff		3215517	0					
ANR	3215548	Argument	c		3215517	2					
ANR	3215549	Identifier	c		3215517	0					
ANR	3215550	Argument	NULL		3215517	3					
ANR	3215551	Identifier	NULL		3215517	0					
ANR	3215552	Argument	metrics		3215517	4					
ANR	3215553	Identifier	metrics		3215517	0					
ANR	3215554	Argument	FC_CUBIC_TYPE		3215517	5					
ANR	3215555	Identifier	FC_CUBIC_TYPE		3215517	0					
ANR	3215556	ReturnType	static gs_fapi_retcode		3215517	1					
ANR	3215557	Identifier	gs_fapi_ufst_get_char_outline_metrics		3215517	2					
ANR	3215558	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		3215517	3					
ANR	3215559	Parameter	gs_fapi_server * server	1940:38:64418:64439	3215517	0	True				
ANR	3215560	ParameterType	gs_fapi_server *		3215517	0					
ANR	3215561	Identifier	server		3215517	1					
ANR	3215562	Parameter	gs_fapi_font * ff	1940:62:64442:64458	3215517	1	True				
ANR	3215563	ParameterType	gs_fapi_font *		3215517	0					
ANR	3215564	Identifier	ff		3215517	1					
ANR	3215565	Parameter	gs_fapi_char_ref * c	1941:25:64486:64505	3215517	2	True				
ANR	3215566	ParameterType	gs_fapi_char_ref *		3215517	0					
ANR	3215567	Identifier	c		3215517	1					
ANR	3215568	Parameter	gs_fapi_metrics * metrics	1941:47:64508:64532	3215517	3	True				
ANR	3215569	ParameterType	gs_fapi_metrics *		3215517	0					
ANR	3215570	Identifier	metrics		3215517	1					
ANR	3215571	CFGEntryNode	ENTRY		3215517		True				
ANR	3215572	CFGExitNode	EXIT		3215517		True				
ANR	3215573	Symbol	ff		3215517						
ANR	3215574	Symbol	server		3215517						
ANR	3215575	Symbol	If_to_I		3215517						
ANR	3215576	Symbol	r		3215517						
ANR	3215577	Symbol	c		3215517						
ANR	3215578	Symbol	NULL		3215517						
ANR	3215579	Symbol	get_char		3215517						
ANR	3215580	Symbol	metrics		3215517						
ANR	3215581	Symbol	FC_CUBIC_TYPE		3215517						
ANR	3215582	Function	gs_fapi_ufst_get_char_outline	1952:0:64862:65065							
ANR	3215583	FunctionDef	"gs_fapi_ufst_get_char_outline (gs_fapi_server * server , gs_fapi_path * p)"		3215582	0					
ANR	3215584	CompoundStatement		1954:0:64958:65065	3215582	0					
ANR	3215585	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1955:4:64964:65001	3215582	0	True				
ANR	3215586	IdentifierDecl	* r = If_to_I ( server )		3215582	0					
ANR	3215587	IdentifierDeclType	fapi_ufst_server *		3215582	0					
ANR	3215588	Identifier	r		3215582	1					
ANR	3215589	AssignmentExpression	* r = If_to_I ( server )		3215582	2		=			
ANR	3215590	Identifier	r		3215582	0					
ANR	3215591	CallExpression	If_to_I ( server )		3215582	1					
ANR	3215592	Callee	If_to_I		3215582	0					
ANR	3215593	Identifier	If_to_I		3215582	0					
ANR	3215594	ArgumentList	server		3215582	1					
ANR	3215595	Argument	server		3215582	0					
ANR	3215596	Identifier	server		3215582	0					
ANR	3215597	ReturnStatement	"return export_outline ( r , ( IFOUTLINE * ) r -> char_data , p ) ;"	1957:4:65008:65063	3215582	1	True				
ANR	3215598	CallExpression	"export_outline ( r , ( IFOUTLINE * ) r -> char_data , p )"		3215582	0					
ANR	3215599	Callee	export_outline		3215582	0					
ANR	3215600	Identifier	export_outline		3215582	0					
ANR	3215601	ArgumentList	r		3215582	1					
ANR	3215602	Argument	r		3215582	0					
ANR	3215603	Identifier	r		3215582	0					
ANR	3215604	Argument	( IFOUTLINE * ) r -> char_data		3215582	1					
ANR	3215605	CastExpression	( IFOUTLINE * ) r -> char_data		3215582	0					
ANR	3215606	CastTarget	IFOUTLINE *		3215582	0					
ANR	3215607	PtrMemberAccess	r -> char_data		3215582	1					
ANR	3215608	Identifier	r		3215582	0					
ANR	3215609	Identifier	char_data		3215582	1					
ANR	3215610	Argument	p		3215582	2					
ANR	3215611	Identifier	p		3215582	0					
ANR	3215612	ReturnType	static gs_fapi_retcode		3215582	1					
ANR	3215613	Identifier	gs_fapi_ufst_get_char_outline		3215582	2					
ANR	3215614	ParameterList	"gs_fapi_server * server , gs_fapi_path * p"		3215582	3					
ANR	3215615	Parameter	gs_fapi_server * server	1953:30:64915:64937	3215582	0	True				
ANR	3215616	ParameterType	gs_fapi_server *		3215582	0					
ANR	3215617	Identifier	server		3215582	1					
ANR	3215618	Parameter	gs_fapi_path * p	1953:55:64940:64955	3215582	1	True				
ANR	3215619	ParameterType	gs_fapi_path *		3215582	0					
ANR	3215620	Identifier	p		3215582	1					
ANR	3215621	CFGEntryNode	ENTRY		3215582		True				
ANR	3215622	CFGExitNode	EXIT		3215582		True				
ANR	3215623	Symbol	p		3215582						
ANR	3215624	Symbol	server		3215582						
ANR	3215625	Symbol	If_to_I		3215582						
ANR	3215626	Symbol	r		3215582						
ANR	3215627	Symbol	export_outline		3215582						
ANR	3215628	Symbol	* r		3215582						
ANR	3215629	Symbol	r -> char_data		3215582						
ANR	3215630	Function	gs_fapi_ufst_get_char_raster_metrics	1960:0:65068:65716							
ANR	3215631	FunctionDef	"gs_fapi_ufst_get_char_raster_metrics (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		3215630	0					
ANR	3215632	CompoundStatement		1963:0:65245:65716	3215630	0					
ANR	3215633	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1964:4:65251:65288	3215630	0	True				
ANR	3215634	IdentifierDecl	* r = If_to_I ( server )		3215630	0					
ANR	3215635	IdentifierDeclType	fapi_ufst_server *		3215630	0					
ANR	3215636	Identifier	r		3215630	1					
ANR	3215637	AssignmentExpression	* r = If_to_I ( server )		3215630	2		=			
ANR	3215638	Identifier	r		3215630	0					
ANR	3215639	CallExpression	If_to_I ( server )		3215630	1					
ANR	3215640	Callee	If_to_I		3215630	0					
ANR	3215641	Identifier	If_to_I		3215630	0					
ANR	3215642	ArgumentList	server		3215630	1					
ANR	3215643	Argument	server		3215630	0					
ANR	3215644	Identifier	server		3215630	0					
ANR	3215645	IdentifierDeclStatement	int code ;	1965:4:65294:65302	3215630	1	True				
ANR	3215646	IdentifierDecl	code		3215630	0					
ANR	3215647	IdentifierDeclType	int		3215630	0					
ANR	3215648	Identifier	code		3215630	1					
ANR	3215649	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1967:4:65309:65349	3215630	2	True				
ANR	3215650	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3215630	0					
ANR	3215651	Callee	gs_fapi_ufst_release_char_data_inline		3215630	0					
ANR	3215652	Identifier	gs_fapi_ufst_release_char_data_inline		3215630	0					
ANR	3215653	ArgumentList	r		3215630	1					
ANR	3215654	Argument	r		3215630	0					
ANR	3215655	Identifier	r		3215630	0					
ANR	3215656	ExpressionStatement	"code = get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"	1968:4:65355:65416	3215630	3	True				
ANR	3215657	AssignmentExpression	"code = get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"		3215630	0		=			
ANR	3215658	Identifier	code		3215630	0					
ANR	3215659	CallExpression	"get_char ( server , ff , c , NULL , metrics , FC_BITMAP_TYPE )"		3215630	1					
ANR	3215660	Callee	get_char		3215630	0					
ANR	3215661	Identifier	get_char		3215630	0					
ANR	3215662	ArgumentList	server		3215630	1					
ANR	3215663	Argument	server		3215630	0					
ANR	3215664	Identifier	server		3215630	0					
ANR	3215665	Argument	ff		3215630	1					
ANR	3215666	Identifier	ff		3215630	0					
ANR	3215667	Argument	c		3215630	2					
ANR	3215668	Identifier	c		3215630	0					
ANR	3215669	Argument	NULL		3215630	3					
ANR	3215670	Identifier	NULL		3215630	0					
ANR	3215671	Argument	metrics		3215630	4					
ANR	3215672	Identifier	metrics		3215630	0					
ANR	3215673	Argument	FC_BITMAP_TYPE		3215630	5					
ANR	3215674	Identifier	FC_BITMAP_TYPE		3215630	0					
ANR	3215675	IfStatement	if ( code == ERR_bm_buff || code == ERR_bm_too_big )		3215630	4					
ANR	3215676	Condition	code == ERR_bm_buff || code == ERR_bm_too_big	1969:8:65426:65470	3215630	0	True				
ANR	3215677	OrExpression	code == ERR_bm_buff || code == ERR_bm_too_big		3215630	0		||			
ANR	3215678	EqualityExpression	code == ERR_bm_buff		3215630	0		==			
ANR	3215679	Identifier	code		3215630	0					
ANR	3215680	Identifier	ERR_bm_buff		3215630	1					
ANR	3215681	EqualityExpression	code == ERR_bm_too_big		3215630	1		==			
ANR	3215682	Identifier	code		3215630	0					
ANR	3215683	Identifier	ERR_bm_too_big		3215630	1					
ANR	3215684	ReturnStatement	return ( gs_error_VMerror ) ;	1970:8:65508:65533	3215630	1	True				
ANR	3215685	Identifier	gs_error_VMerror		3215630	0					
ANR	3215686	ReturnStatement	return code ;	1971:4:65539:65550	3215630	5	True				
ANR	3215687	Identifier	code		3215630	0					
ANR	3215688	ReturnType	static gs_fapi_retcode		3215630	1					
ANR	3215689	Identifier	gs_fapi_ufst_get_char_raster_metrics		3215630	2					
ANR	3215690	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		3215630	3					
ANR	3215691	Parameter	gs_fapi_server * server	1961:37:65128:65150	3215630	0	True				
ANR	3215692	ParameterType	gs_fapi_server *		3215630	0					
ANR	3215693	Identifier	server		3215630	1					
ANR	3215694	Parameter	gs_fapi_font * ff	1961:62:65153:65169	3215630	1	True				
ANR	3215695	ParameterType	gs_fapi_font *		3215630	0					
ANR	3215696	Identifier	ff		3215630	1					
ANR	3215697	Parameter	gs_fapi_char_ref * c	1962:24:65196:65215	3215630	2	True				
ANR	3215698	ParameterType	gs_fapi_char_ref *		3215630	0					
ANR	3215699	Identifier	c		3215630	1					
ANR	3215700	Parameter	gs_fapi_metrics * metrics	1962:46:65218:65242	3215630	3	True				
ANR	3215701	ParameterType	gs_fapi_metrics *		3215630	0					
ANR	3215702	Identifier	metrics		3215630	1					
ANR	3215703	CFGEntryNode	ENTRY		3215630		True				
ANR	3215704	CFGExitNode	EXIT		3215630		True				
ANR	3215705	Symbol	ff		3215630						
ANR	3215706	Symbol	server		3215630						
ANR	3215707	Symbol	If_to_I		3215630						
ANR	3215708	Symbol	ERR_bm_too_big		3215630						
ANR	3215709	Symbol	c		3215630						
ANR	3215710	Symbol	code		3215630						
ANR	3215711	Symbol	NULL		3215630						
ANR	3215712	Symbol	FC_BITMAP_TYPE		3215630						
ANR	3215713	Symbol	gs_error_VMerror		3215630						
ANR	3215714	Symbol	r		3215630						
ANR	3215715	Symbol	get_char		3215630						
ANR	3215716	Symbol	metrics		3215630						
ANR	3215717	Symbol	ERR_bm_buff		3215630						
ANR	3215718	Function	gs_fapi_ufst_get_char_width	1977:0:65719:66412							
ANR	3215719	FunctionDef	"gs_fapi_ufst_get_char_width (gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics)"		3215718	0					
ANR	3215720	CompoundStatement		1980:0:65878:66412	3215718	0					
ANR	3215721	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	1981:4:65884:65921	3215718	0	True				
ANR	3215722	IdentifierDecl	* r = If_to_I ( server )		3215718	0					
ANR	3215723	IdentifierDeclType	fapi_ufst_server *		3215718	0					
ANR	3215724	Identifier	r		3215718	1					
ANR	3215725	AssignmentExpression	* r = If_to_I ( server )		3215718	2		=			
ANR	3215726	Identifier	r		3215718	0					
ANR	3215727	CallExpression	If_to_I ( server )		3215718	1					
ANR	3215728	Callee	If_to_I		3215718	0					
ANR	3215729	Identifier	If_to_I		3215718	0					
ANR	3215730	ArgumentList	server		3215718	1					
ANR	3215731	Argument	server		3215718	0					
ANR	3215732	Identifier	server		3215718	0					
ANR	3215733	IdentifierDeclStatement	int code ;	1982:4:65927:65935	3215718	1	True				
ANR	3215734	IdentifierDecl	code		3215718	0					
ANR	3215735	IdentifierDeclType	int		3215718	0					
ANR	3215736	Identifier	code		3215718	1					
ANR	3215737	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	1984:4:65942:65982	3215718	2	True				
ANR	3215738	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3215718	0					
ANR	3215739	Callee	gs_fapi_ufst_release_char_data_inline		3215718	0					
ANR	3215740	Identifier	gs_fapi_ufst_release_char_data_inline		3215718	0					
ANR	3215741	ArgumentList	r		3215718	1					
ANR	3215742	Argument	r		3215718	0					
ANR	3215743	Identifier	r		3215718	0					
ANR	3215744	ExpressionStatement	"code = get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"	1985:4:65988:66112	3215718	3	True				
ANR	3215745	AssignmentExpression	"code = get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"		3215718	0		=			
ANR	3215746	Identifier	code		3215718	0					
ANR	3215747	CallExpression	"get_char ( server , ff , c , NULL , metrics , server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE )"		3215718	1					
ANR	3215748	Callee	get_char		3215718	0					
ANR	3215749	Identifier	get_char		3215718	0					
ANR	3215750	ArgumentList	server		3215718	1					
ANR	3215751	Argument	server		3215718	0					
ANR	3215752	Identifier	server		3215718	0					
ANR	3215753	Argument	ff		3215718	1					
ANR	3215754	Identifier	ff		3215718	0					
ANR	3215755	Argument	c		3215718	2					
ANR	3215756	Identifier	c		3215718	0					
ANR	3215757	Argument	NULL		3215718	3					
ANR	3215758	Identifier	NULL		3215718	0					
ANR	3215759	Argument	metrics		3215718	4					
ANR	3215760	Identifier	metrics		3215718	0					
ANR	3215761	Argument	server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE		3215718	5					
ANR	3215762	ConditionalExpression	server -> use_outline ? FC_CUBIC_TYPE : FC_BITMAP_TYPE		3215718	0					
ANR	3215763	Condition	server -> use_outline		3215718	0					
ANR	3215764	PtrMemberAccess	server -> use_outline		3215718	0					
ANR	3215765	Identifier	server		3215718	0					
ANR	3215766	Identifier	use_outline		3215718	1					
ANR	3215767	Identifier	FC_CUBIC_TYPE		3215718	1					
ANR	3215768	Identifier	FC_BITMAP_TYPE		3215718	2					
ANR	3215769	IfStatement	if ( code == ERR_bm_buff || code == ERR_bm_too_big )		3215718	4					
ANR	3215770	Condition	code == ERR_bm_buff || code == ERR_bm_too_big	1988:8:66122:66166	3215718	0	True				
ANR	3215771	OrExpression	code == ERR_bm_buff || code == ERR_bm_too_big		3215718	0		||			
ANR	3215772	EqualityExpression	code == ERR_bm_buff		3215718	0		==			
ANR	3215773	Identifier	code		3215718	0					
ANR	3215774	Identifier	ERR_bm_buff		3215718	1					
ANR	3215775	EqualityExpression	code == ERR_bm_too_big		3215718	1		==			
ANR	3215776	Identifier	code		3215718	0					
ANR	3215777	Identifier	ERR_bm_too_big		3215718	1					
ANR	3215778	ReturnStatement	return ( gs_error_VMerror ) ;	1989:8:66204:66229	3215718	1	True				
ANR	3215779	Identifier	gs_error_VMerror		3215718	0					
ANR	3215780	ReturnStatement	return code ;	1990:4:66235:66246	3215718	5	True				
ANR	3215781	Identifier	code		3215718	0					
ANR	3215782	ReturnType	static gs_fapi_retcode		3215718	1					
ANR	3215783	Identifier	gs_fapi_ufst_get_char_width		3215718	2					
ANR	3215784	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , gs_fapi_char_ref * c , gs_fapi_metrics * metrics"		3215718	3					
ANR	3215785	Parameter	gs_fapi_server * server	1978:28:65770:65792	3215718	0	True				
ANR	3215786	ParameterType	gs_fapi_server *		3215718	0					
ANR	3215787	Identifier	server		3215718	1					
ANR	3215788	Parameter	gs_fapi_font * ff	1978:53:65795:65811	3215718	1	True				
ANR	3215789	ParameterType	gs_fapi_font *		3215718	0					
ANR	3215790	Identifier	ff		3215718	1					
ANR	3215791	Parameter	gs_fapi_char_ref * c	1979:15:65829:65848	3215718	2	True				
ANR	3215792	ParameterType	gs_fapi_char_ref *		3215718	0					
ANR	3215793	Identifier	c		3215718	1					
ANR	3215794	Parameter	gs_fapi_metrics * metrics	1979:37:65851:65875	3215718	3	True				
ANR	3215795	ParameterType	gs_fapi_metrics *		3215718	0					
ANR	3215796	Identifier	metrics		3215718	1					
ANR	3215797	CFGEntryNode	ENTRY		3215718		True				
ANR	3215798	CFGExitNode	EXIT		3215718		True				
ANR	3215799	Symbol	ff		3215718						
ANR	3215800	Symbol	server		3215718						
ANR	3215801	Symbol	If_to_I		3215718						
ANR	3215802	Symbol	ERR_bm_too_big		3215718						
ANR	3215803	Symbol	c		3215718						
ANR	3215804	Symbol	code		3215718						
ANR	3215805	Symbol	* server		3215718						
ANR	3215806	Symbol	NULL		3215718						
ANR	3215807	Symbol	FC_BITMAP_TYPE		3215718						
ANR	3215808	Symbol	gs_error_VMerror		3215718						
ANR	3215809	Symbol	r		3215718						
ANR	3215810	Symbol	get_char		3215718						
ANR	3215811	Symbol	metrics		3215718						
ANR	3215812	Symbol	server -> use_outline		3215718						
ANR	3215813	Symbol	FC_CUBIC_TYPE		3215718						
ANR	3215814	Symbol	ERR_bm_buff		3215718						
ANR	3215815	Function	gs_fapi_ufst_get_char_raster	1997:0:66416:67381							
ANR	3215816	FunctionDef	"gs_fapi_ufst_get_char_raster (gs_fapi_server * server , gs_fapi_raster * rast)"		3215815	0					
ANR	3215817	CompoundStatement		1999:0:66516:67381	3215815	0					
ANR	3215818	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2000:4:66522:66559	3215815	0	True				
ANR	3215819	IdentifierDecl	* r = If_to_I ( server )		3215815	0					
ANR	3215820	IdentifierDeclType	fapi_ufst_server *		3215815	0					
ANR	3215821	Identifier	r		3215815	1					
ANR	3215822	AssignmentExpression	* r = If_to_I ( server )		3215815	2		=			
ANR	3215823	Identifier	r		3215815	0					
ANR	3215824	CallExpression	If_to_I ( server )		3215815	1					
ANR	3215825	Callee	If_to_I		3215815	0					
ANR	3215826	Identifier	If_to_I		3215815	0					
ANR	3215827	ArgumentList	server		3215815	1					
ANR	3215828	Argument	server		3215815	0					
ANR	3215829	Identifier	server		3215815	0					
ANR	3215830	IfStatement	if ( ! r -> bRaster )		3215815	1					
ANR	3215831	Condition	! r -> bRaster	2002:8:66570:66580	3215815	0	True				
ANR	3215832	UnaryOperationExpression	! r -> bRaster		3215815	0					
ANR	3215833	UnaryOperator	!		3215815	0					
ANR	3215834	PtrMemberAccess	r -> bRaster		3215815	1					
ANR	3215835	Identifier	r		3215815	0					
ANR	3215836	Identifier	bRaster		3215815	1					
ANR	3215837	ExpressionStatement	return_error ( gs_error_unregistered )	2003:8:66591:66626	3215815	1	True				
ANR	3215838	CallExpression	return_error ( gs_error_unregistered )		3215815	0					
ANR	3215839	Callee	return_error		3215815	0					
ANR	3215840	Identifier	return_error		3215815	0					
ANR	3215841	ArgumentList	gs_error_unregistered		3215815	1					
ANR	3215842	Argument	gs_error_unregistered		3215815	0					
ANR	3215843	Identifier	gs_error_unregistered		3215815	0					
ANR	3215844	ElseStatement	else		3215815	0					
ANR	3215845	IfStatement	if ( r -> char_data == NULL )		3215815	0					
ANR	3215846	Condition	r -> char_data == NULL	2004:13:66641:66660	3215815	0	True				
ANR	3215847	EqualityExpression	r -> char_data == NULL		3215815	0		==			
ANR	3215848	PtrMemberAccess	r -> char_data		3215815	0					
ANR	3215849	Identifier	r		3215815	0					
ANR	3215850	Identifier	char_data		3215815	1					
ANR	3215851	Identifier	NULL		3215815	1					
ANR	3215852	CompoundStatement		6:35:146:146	3215815	1					
ANR	3215853	ExpressionStatement	rast -> height = rast -> width = rast -> line_step = 0	2005:8:66673:66721	3215815	0	True				
ANR	3215854	AssignmentExpression	rast -> height = rast -> width = rast -> line_step = 0		3215815	0		=			
ANR	3215855	PtrMemberAccess	rast -> height		3215815	0					
ANR	3215856	Identifier	rast		3215815	0					
ANR	3215857	Identifier	height		3215815	1					
ANR	3215858	AssignmentExpression	rast -> width = rast -> line_step = 0		3215815	1		=			
ANR	3215859	PtrMemberAccess	rast -> width		3215815	0					
ANR	3215860	Identifier	rast		3215815	0					
ANR	3215861	Identifier	width		3215815	1					
ANR	3215862	AssignmentExpression	rast -> line_step = 0		3215815	1		=			
ANR	3215863	PtrMemberAccess	rast -> line_step		3215815	0					
ANR	3215864	Identifier	rast		3215815	0					
ANR	3215865	Identifier	line_step		3215815	1					
ANR	3215866	PrimaryExpression	0		3215815	1					
ANR	3215867	ExpressionStatement	rast -> p = 0	2006:8:66731:66742	3215815	1	True				
ANR	3215868	AssignmentExpression	rast -> p = 0		3215815	0		=			
ANR	3215869	PtrMemberAccess	rast -> p		3215815	0					
ANR	3215870	Identifier	rast		3215815	0					
ANR	3215871	Identifier	p		3215815	1					
ANR	3215872	PrimaryExpression	0		3215815	1					
ANR	3215873	ElseStatement	else		3215815	0					
ANR	3215874	CompoundStatement		11:8:252:293	3215815	0					
ANR	3215875	IdentifierDeclStatement	IFBITMAP * pbm = ( IFBITMAP * ) r -> char_data ;	2009:8:66769:66810	3215815	0	True				
ANR	3215876	IdentifierDecl	* pbm = ( IFBITMAP * ) r -> char_data		3215815	0					
ANR	3215877	IdentifierDeclType	IFBITMAP *		3215815	0					
ANR	3215878	Identifier	pbm		3215815	1					
ANR	3215879	AssignmentExpression	* pbm = ( IFBITMAP * ) r -> char_data		3215815	2		=			
ANR	3215880	Identifier	pbm		3215815	0					
ANR	3215881	CastExpression	( IFBITMAP * ) r -> char_data		3215815	1					
ANR	3215882	CastTarget	IFBITMAP *		3215815	0					
ANR	3215883	PtrMemberAccess	r -> char_data		3215815	1					
ANR	3215884	Identifier	r		3215815	0					
ANR	3215885	Identifier	char_data		3215815	1					
ANR	3215886	ExpressionStatement	rast -> p = pbm -> bm	2011:8:66821:66838	3215815	1	True				
ANR	3215887	AssignmentExpression	rast -> p = pbm -> bm		3215815	0		=			
ANR	3215888	PtrMemberAccess	rast -> p		3215815	0					
ANR	3215889	Identifier	rast		3215815	0					
ANR	3215890	Identifier	p		3215815	1					
ANR	3215891	PtrMemberAccess	pbm -> bm		3215815	1					
ANR	3215892	Identifier	pbm		3215815	0					
ANR	3215893	Identifier	bm		3215815	1					
ANR	3215894	ExpressionStatement	rast -> height = pbm -> top_indent + pbm -> black_depth	2012:8:66848:66897	3215815	2	True				
ANR	3215895	AssignmentExpression	rast -> height = pbm -> top_indent + pbm -> black_depth		3215815	0		=			
ANR	3215896	PtrMemberAccess	rast -> height		3215815	0					
ANR	3215897	Identifier	rast		3215815	0					
ANR	3215898	Identifier	height		3215815	1					
ANR	3215899	AdditiveExpression	pbm -> top_indent + pbm -> black_depth		3215815	1		+			
ANR	3215900	PtrMemberAccess	pbm -> top_indent		3215815	0					
ANR	3215901	Identifier	pbm		3215815	0					
ANR	3215902	Identifier	top_indent		3215815	1					
ANR	3215903	PtrMemberAccess	pbm -> black_depth		3215815	1					
ANR	3215904	Identifier	pbm		3215815	0					
ANR	3215905	Identifier	black_depth		3215815	1					
ANR	3215906	ExpressionStatement	rast -> width = pbm -> left_indent + pbm -> black_width	2013:8:66907:66956	3215815	3	True				
ANR	3215907	AssignmentExpression	rast -> width = pbm -> left_indent + pbm -> black_width		3215815	0		=			
ANR	3215908	PtrMemberAccess	rast -> width		3215815	0					
ANR	3215909	Identifier	rast		3215815	0					
ANR	3215910	Identifier	width		3215815	1					
ANR	3215911	AdditiveExpression	pbm -> left_indent + pbm -> black_width		3215815	1		+			
ANR	3215912	PtrMemberAccess	pbm -> left_indent		3215815	0					
ANR	3215913	Identifier	pbm		3215815	0					
ANR	3215914	Identifier	left_indent		3215815	1					
ANR	3215915	PtrMemberAccess	pbm -> black_width		3215815	1					
ANR	3215916	Identifier	pbm		3215815	0					
ANR	3215917	Identifier	black_width		3215815	1					
ANR	3215918	ExpressionStatement	rast -> line_step = pbm -> width	2014:8:66966:66994	3215815	4	True				
ANR	3215919	AssignmentExpression	rast -> line_step = pbm -> width		3215815	0		=			
ANR	3215920	PtrMemberAccess	rast -> line_step		3215815	0					
ANR	3215921	Identifier	rast		3215815	0					
ANR	3215922	Identifier	line_step		3215815	1					
ANR	3215923	PtrMemberAccess	pbm -> width		3215815	1					
ANR	3215924	Identifier	pbm		3215815	0					
ANR	3215925	Identifier	width		3215815	1					
ANR	3215926	ExpressionStatement	rast -> left_indent = pbm -> left_indent	2015:8:67004:67040	3215815	5	True				
ANR	3215927	AssignmentExpression	rast -> left_indent = pbm -> left_indent		3215815	0		=			
ANR	3215928	PtrMemberAccess	rast -> left_indent		3215815	0					
ANR	3215929	Identifier	rast		3215815	0					
ANR	3215930	Identifier	left_indent		3215815	1					
ANR	3215931	PtrMemberAccess	pbm -> left_indent		3215815	1					
ANR	3215932	Identifier	pbm		3215815	0					
ANR	3215933	Identifier	left_indent		3215815	1					
ANR	3215934	ExpressionStatement	rast -> top_indent = pbm -> top_indent	2016:8:67050:67084	3215815	6	True				
ANR	3215935	AssignmentExpression	rast -> top_indent = pbm -> top_indent		3215815	0		=			
ANR	3215936	PtrMemberAccess	rast -> top_indent		3215815	0					
ANR	3215937	Identifier	rast		3215815	0					
ANR	3215938	Identifier	top_indent		3215815	1					
ANR	3215939	PtrMemberAccess	pbm -> top_indent		3215815	1					
ANR	3215940	Identifier	pbm		3215815	0					
ANR	3215941	Identifier	top_indent		3215815	1					
ANR	3215942	ExpressionStatement	rast -> black_width = pbm -> black_width	2017:8:67094:67130	3215815	7	True				
ANR	3215943	AssignmentExpression	rast -> black_width = pbm -> black_width		3215815	0		=			
ANR	3215944	PtrMemberAccess	rast -> black_width		3215815	0					
ANR	3215945	Identifier	rast		3215815	0					
ANR	3215946	Identifier	black_width		3215815	1					
ANR	3215947	PtrMemberAccess	pbm -> black_width		3215815	1					
ANR	3215948	Identifier	pbm		3215815	0					
ANR	3215949	Identifier	black_width		3215815	1					
ANR	3215950	ExpressionStatement	rast -> black_height = pbm -> black_depth	2018:8:67140:67177	3215815	8	True				
ANR	3215951	AssignmentExpression	rast -> black_height = pbm -> black_depth		3215815	0		=			
ANR	3215952	PtrMemberAccess	rast -> black_height		3215815	0					
ANR	3215953	Identifier	rast		3215815	0					
ANR	3215954	Identifier	black_height		3215815	1					
ANR	3215955	PtrMemberAccess	pbm -> black_depth		3215815	1					
ANR	3215956	Identifier	pbm		3215815	0					
ANR	3215957	Identifier	black_depth		3215815	1					
ANR	3215958	IfStatement	if ( rast -> width != 0 )		3215815	9					
ANR	3215959	Condition	rast -> width != 0	2019:12:67191:67206	3215815	0	True				
ANR	3215960	EqualityExpression	rast -> width != 0		3215815	0		!=			
ANR	3215961	PtrMemberAccess	rast -> width		3215815	0					
ANR	3215962	Identifier	rast		3215815	0					
ANR	3215963	Identifier	width		3215815	1					
ANR	3215964	PrimaryExpression	0		3215815	1					
ANR	3215965	CompoundStatement		21:30:692:692	3215815	1					
ANR	3215966	ExpressionStatement	rast -> orig_x = pbm -> xorigin	2020:12:67223:67250	3215815	0	True				
ANR	3215967	AssignmentExpression	rast -> orig_x = pbm -> xorigin		3215815	0		=			
ANR	3215968	PtrMemberAccess	rast -> orig_x		3215815	0					
ANR	3215969	Identifier	rast		3215815	0					
ANR	3215970	Identifier	orig_x		3215815	1					
ANR	3215971	PtrMemberAccess	pbm -> xorigin		3215815	1					
ANR	3215972	Identifier	pbm		3215815	0					
ANR	3215973	Identifier	xorigin		3215815	1					
ANR	3215974	ExpressionStatement	rast -> orig_y = pbm -> yorigin	2021:12:67264:67291	3215815	1	True				
ANR	3215975	AssignmentExpression	rast -> orig_y = pbm -> yorigin		3215815	0		=			
ANR	3215976	PtrMemberAccess	rast -> orig_y		3215815	0					
ANR	3215977	Identifier	rast		3215815	0					
ANR	3215978	Identifier	orig_y		3215815	1					
ANR	3215979	PtrMemberAccess	pbm -> yorigin		3215815	1					
ANR	3215980	Identifier	pbm		3215815	0					
ANR	3215981	Identifier	yorigin		3215815	1					
ANR	3215982	ElseStatement	else		3215815	0					
ANR	3215983	ExpressionStatement	rast -> orig_x = rast -> orig_y = 0	2024:12:67328:67359	3215815	0	True				
ANR	3215984	AssignmentExpression	rast -> orig_x = rast -> orig_y = 0		3215815	0		=			
ANR	3215985	PtrMemberAccess	rast -> orig_x		3215815	0					
ANR	3215986	Identifier	rast		3215815	0					
ANR	3215987	Identifier	orig_x		3215815	1					
ANR	3215988	AssignmentExpression	rast -> orig_y = 0		3215815	1		=			
ANR	3215989	PtrMemberAccess	rast -> orig_y		3215815	0					
ANR	3215990	Identifier	rast		3215815	0					
ANR	3215991	Identifier	orig_y		3215815	1					
ANR	3215992	PrimaryExpression	0		3215815	1					
ANR	3215993	ReturnStatement	return 0 ;	2026:4:67371:67379	3215815	2	True				
ANR	3215994	PrimaryExpression	0		3215815	0					
ANR	3215995	ReturnType	static gs_fapi_retcode		3215815	1					
ANR	3215996	Identifier	gs_fapi_ufst_get_char_raster		3215815	2					
ANR	3215997	ParameterList	"gs_fapi_server * server , gs_fapi_raster * rast"		3215815	3					
ANR	3215998	Parameter	gs_fapi_server * server	1998:29:66468:66490	3215815	0	True				
ANR	3215999	ParameterType	gs_fapi_server *		3215815	0					
ANR	3216000	Identifier	server		3215815	1					
ANR	3216001	Parameter	gs_fapi_raster * rast	1998:54:66493:66513	3215815	1	True				
ANR	3216002	ParameterType	gs_fapi_raster *		3215815	0					
ANR	3216003	Identifier	rast		3215815	1					
ANR	3216004	CFGEntryNode	ENTRY		3215815		True				
ANR	3216005	CFGExitNode	EXIT		3215815		True				
ANR	3216006	Symbol	rast -> line_step		3215815						
ANR	3216007	Symbol	server		3215815						
ANR	3216008	Symbol	gs_error_unregistered		3215815						
ANR	3216009	Symbol	pbm -> top_indent		3215815						
ANR	3216010	Symbol	rast -> orig_y		3215815						
ANR	3216011	Symbol	rast -> orig_x		3215815						
ANR	3216012	Symbol	rast -> left_indent		3215815						
ANR	3216013	Symbol	pbm -> yorigin		3215815						
ANR	3216014	Symbol	rast -> width		3215815						
ANR	3216015	Symbol	r -> bRaster		3215815						
ANR	3216016	Symbol	pbm -> left_indent		3215815						
ANR	3216017	Symbol	rast -> p		3215815						
ANR	3216018	Symbol	pbm -> width		3215815						
ANR	3216019	Symbol	rast -> top_indent		3215815						
ANR	3216020	Symbol	rast -> black_width		3215815						
ANR	3216021	Symbol	If_to_I		3215815						
ANR	3216022	Symbol	NULL		3215815						
ANR	3216023	Symbol	rast		3215815						
ANR	3216024	Symbol	* rast		3215815						
ANR	3216025	Symbol	* pbm		3215815						
ANR	3216026	Symbol	pbm -> bm		3215815						
ANR	3216027	Symbol	pbm -> xorigin		3215815						
ANR	3216028	Symbol	rast -> height		3215815						
ANR	3216029	Symbol	r		3215815						
ANR	3216030	Symbol	rast -> black_height		3215815						
ANR	3216031	Symbol	pbm -> black_width		3215815						
ANR	3216032	Symbol	pbm -> black_depth		3215815						
ANR	3216033	Symbol	pbm		3215815						
ANR	3216034	Symbol	* r		3215815						
ANR	3216035	Symbol	r -> char_data		3215815						
ANR	3216036	Function	gs_fapi_ufst_release_char_data	2029:0:67384:67569							
ANR	3216037	FunctionDef	gs_fapi_ufst_release_char_data (gs_fapi_server * server)		3216036	0					
ANR	3216038	CompoundStatement		2031:0:67463:67569	3216036	0					
ANR	3216039	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2032:4:67469:67506	3216036	0	True				
ANR	3216040	IdentifierDecl	* r = If_to_I ( server )		3216036	0					
ANR	3216041	IdentifierDeclType	fapi_ufst_server *		3216036	0					
ANR	3216042	Identifier	r		3216036	1					
ANR	3216043	AssignmentExpression	* r = If_to_I ( server )		3216036	2		=			
ANR	3216044	Identifier	r		3216036	0					
ANR	3216045	CallExpression	If_to_I ( server )		3216036	1					
ANR	3216046	Callee	If_to_I		3216036	0					
ANR	3216047	Identifier	If_to_I		3216036	0					
ANR	3216048	ArgumentList	server		3216036	1					
ANR	3216049	Argument	server		3216036	0					
ANR	3216050	Identifier	server		3216036	0					
ANR	3216051	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2034:4:67513:67553	3216036	1	True				
ANR	3216052	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3216036	0					
ANR	3216053	Callee	gs_fapi_ufst_release_char_data_inline		3216036	0					
ANR	3216054	Identifier	gs_fapi_ufst_release_char_data_inline		3216036	0					
ANR	3216055	ArgumentList	r		3216036	1					
ANR	3216056	Argument	r		3216036	0					
ANR	3216057	Identifier	r		3216036	0					
ANR	3216058	ReturnStatement	return 0 ;	2035:4:67559:67567	3216036	2	True				
ANR	3216059	PrimaryExpression	0		3216036	0					
ANR	3216060	ReturnType	static gs_fapi_retcode		3216036	1					
ANR	3216061	Identifier	gs_fapi_ufst_release_char_data		3216036	2					
ANR	3216062	ParameterList	gs_fapi_server * server		3216036	3					
ANR	3216063	Parameter	gs_fapi_server * server	2030:31:67438:67460	3216036	0	True				
ANR	3216064	ParameterType	gs_fapi_server *		3216036	0					
ANR	3216065	Identifier	server		3216036	1					
ANR	3216066	CFGEntryNode	ENTRY		3216036		True				
ANR	3216067	CFGExitNode	EXIT		3216036		True				
ANR	3216068	Symbol	server		3216036						
ANR	3216069	Symbol	If_to_I		3216036						
ANR	3216070	Symbol	r		3216036						
ANR	3216071	Function	release_fco	2038:0:67572:68155							
ANR	3216072	FunctionDef	"release_fco (fapi_ufst_server * r , SW16 fcHandle)"		3216071	0					
ANR	3216073	CompoundStatement		2040:0:67633:68155	3216071	0					
ANR	3216074	IdentifierDeclStatement	fco_list_elem * * e ;	2041:4:67639:67656	3216071	0	True				
ANR	3216075	IdentifierDecl	* * e		3216071	0					
ANR	3216076	IdentifierDeclType	fco_list_elem * *		3216071	0					
ANR	3216077	Identifier	e		3216071	1					
ANR	3216078	IfStatement	if ( gx_UFST_find_static_fco_handle ( fcHandle ) != NULL )		3216071	1					
ANR	3216079	Condition	gx_UFST_find_static_fco_handle ( fcHandle ) != NULL	2043:8:67667:67714	3216071	0	True				
ANR	3216080	EqualityExpression	gx_UFST_find_static_fco_handle ( fcHandle ) != NULL		3216071	0		!=			
ANR	3216081	CallExpression	gx_UFST_find_static_fco_handle ( fcHandle )		3216071	0					
ANR	3216082	Callee	gx_UFST_find_static_fco_handle		3216071	0					
ANR	3216083	Identifier	gx_UFST_find_static_fco_handle		3216071	0					
ANR	3216084	ArgumentList	fcHandle		3216071	1					
ANR	3216085	Argument	fcHandle		3216071	0					
ANR	3216086	Identifier	fcHandle		3216071	0					
ANR	3216087	Identifier	NULL		3216071	1					
ANR	3216088	ReturnStatement	return ;	2044:8:67725:67731	3216071	1	True				
ANR	3216089	ForStatement	for ( e = & r -> fco_list ; * e != 0 ; )		3216071	2					
ANR	3216090	ForInit	e = & r -> fco_list ;	2045:9:67742:67758	3216071	0	True				
ANR	3216091	AssignmentExpression	e = & r -> fco_list		3216071	0		=			
ANR	3216092	Identifier	e		3216071	0					
ANR	3216093	UnaryOperationExpression	& r -> fco_list		3216071	1					
ANR	3216094	UnaryOperator	&		3216071	0					
ANR	3216095	PtrMemberAccess	r -> fco_list		3216071	1					
ANR	3216096	Identifier	r		3216071	0					
ANR	3216097	Identifier	fco_list		3216071	1					
ANR	3216098	Condition	* e != 0	2045:27:67760:67766	3216071	1	True				
ANR	3216099	EqualityExpression	* e != 0		3216071	0		!=			
ANR	3216100	UnaryOperationExpression	* e		3216071	0					
ANR	3216101	UnaryOperator	*		3216071	0					
ANR	3216102	Identifier	e		3216071	1					
ANR	3216103	PrimaryExpression	0		3216071	1					
ANR	3216104	IfStatement	if ( ( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0 )		3216071	2					
ANR	3216105	Condition	( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0	2046:12:67782:67836	3216071	0	True				
ANR	3216106	AndExpression	( * e ) -> fcHandle == fcHandle && ( -- ( * e ) -> open_count ) == 0		3216071	0		&&			
ANR	3216107	EqualityExpression	( * e ) -> fcHandle == fcHandle		3216071	0		==			
ANR	3216108	PtrMemberAccess	( * e ) -> fcHandle		3216071	0					
ANR	3216109	UnaryOperationExpression	* e		3216071	0					
ANR	3216110	UnaryOperator	*		3216071	0					
ANR	3216111	Identifier	e		3216071	1					
ANR	3216112	Identifier	fcHandle		3216071	1					
ANR	3216113	Identifier	fcHandle		3216071	1					
ANR	3216114	EqualityExpression	( -- ( * e ) -> open_count ) == 0		3216071	1		==			
ANR	3216115	UnaryExpression	-- ( * e ) -> open_count		3216071	0					
ANR	3216116	IncDec	--		3216071	0					
ANR	3216117	PtrMemberAccess	( * e ) -> open_count		3216071	1					
ANR	3216118	UnaryOperationExpression	* e		3216071	0					
ANR	3216119	UnaryOperator	*		3216071	0					
ANR	3216120	Identifier	e		3216071	1					
ANR	3216121	Identifier	open_count		3216071	1					
ANR	3216122	PrimaryExpression	0		3216071	1					
ANR	3216123	CompoundStatement		8:12:219:241	3216071	1					
ANR	3216124	IdentifierDeclStatement	fco_list_elem * ee = * e ;	2047:12:67853:67875	3216071	0	True				
ANR	3216125	IdentifierDecl	* ee = * e		3216071	0					
ANR	3216126	IdentifierDeclType	fco_list_elem *		3216071	0					
ANR	3216127	Identifier	ee		3216071	1					
ANR	3216128	AssignmentExpression	* ee = * e		3216071	2		=			
ANR	3216129	Identifier	ee		3216071	0					
ANR	3216130	UnaryOperationExpression	* e		3216071	1					
ANR	3216131	UnaryOperator	*		3216071	0					
ANR	3216132	Identifier	e		3216071	1					
ANR	3216133	ExpressionStatement	FSA_FROM_SERVER	2049:12:67890:67905	3216071	1	True				
ANR	3216134	Identifier	FSA_FROM_SERVER		3216071	0					
ANR	3216135	ExpressionStatement	* e = ee -> next	2051:12:67920:67933	3216071	2	True				
ANR	3216136	AssignmentExpression	* e = ee -> next		3216071	0		=			
ANR	3216137	UnaryOperationExpression	* e		3216071	0					
ANR	3216138	UnaryOperator	*		3216071	0					
ANR	3216139	Identifier	e		3216071	1					
ANR	3216140	PtrMemberAccess	ee -> next		3216071	1					
ANR	3216141	Identifier	ee		3216071	0					
ANR	3216142	Identifier	next		3216071	1					
ANR	3216143	Statement	CGIFfco_Close	2052:12:67947:67959	3216071	3	True				
ANR	3216144	Statement	(	2052:25:67960:67960	3216071	4	True				
ANR	3216145	Statement	FSA	2052:26:67961:67963	3216071	5	True				
ANR	3216146	Statement	ee	2052:30:67965:67966	3216071	6	True				
ANR	3216147	Statement	->	2052:32:67967:67968	3216071	7	True				
ANR	3216148	Statement	fcHandle	2052:34:67969:67976	3216071	8	True				
ANR	3216149	Statement	)	2052:42:67977:67977	3216071	9	True				
ANR	3216150	ExpressionStatement		2052:43:67978:67978	3216071	10	True				
ANR	3216151	ExpressionStatement	"gs_free ( r -> mem , ee -> file_path , 0 , 0 , ""fco_file_path"" )"	2053:12:67992:68045	3216071	11	True				
ANR	3216152	CallExpression	"gs_free ( r -> mem , ee -> file_path , 0 , 0 , ""fco_file_path"" )"		3216071	0					
ANR	3216153	Callee	gs_free		3216071	0					
ANR	3216154	Identifier	gs_free		3216071	0					
ANR	3216155	ArgumentList	r -> mem		3216071	1					
ANR	3216156	Argument	r -> mem		3216071	0					
ANR	3216157	PtrMemberAccess	r -> mem		3216071	0					
ANR	3216158	Identifier	r		3216071	0					
ANR	3216159	Identifier	mem		3216071	1					
ANR	3216160	Argument	ee -> file_path		3216071	1					
ANR	3216161	PtrMemberAccess	ee -> file_path		3216071	0					
ANR	3216162	Identifier	ee		3216071	0					
ANR	3216163	Identifier	file_path		3216071	1					
ANR	3216164	Argument	0		3216071	2					
ANR	3216165	PrimaryExpression	0		3216071	0					
ANR	3216166	Argument	0		3216071	3					
ANR	3216167	PrimaryExpression	0		3216071	0					
ANR	3216168	Argument	"""fco_file_path"""		3216071	4					
ANR	3216169	PrimaryExpression	"""fco_file_path"""		3216071	0					
ANR	3216170	ExpressionStatement	"gs_free ( r -> mem , ee , 0 , 0 , ""fco_list_elem"" )"	2054:12:68059:68101	3216071	12	True				
ANR	3216171	CallExpression	"gs_free ( r -> mem , ee , 0 , 0 , ""fco_list_elem"" )"		3216071	0					
ANR	3216172	Callee	gs_free		3216071	0					
ANR	3216173	Identifier	gs_free		3216071	0					
ANR	3216174	ArgumentList	r -> mem		3216071	1					
ANR	3216175	Argument	r -> mem		3216071	0					
ANR	3216176	PtrMemberAccess	r -> mem		3216071	0					
ANR	3216177	Identifier	r		3216071	0					
ANR	3216178	Identifier	mem		3216071	1					
ANR	3216179	Argument	ee		3216071	1					
ANR	3216180	Identifier	ee		3216071	0					
ANR	3216181	Argument	0		3216071	2					
ANR	3216182	PrimaryExpression	0		3216071	0					
ANR	3216183	Argument	0		3216071	3					
ANR	3216184	PrimaryExpression	0		3216071	0					
ANR	3216185	Argument	"""fco_list_elem"""		3216071	4					
ANR	3216186	PrimaryExpression	"""fco_list_elem"""		3216071	0					
ANR	3216187	ElseStatement	else		3216071	0					
ANR	3216188	ExpressionStatement	e = & ( * e ) -> next	2057:12:68138:68153	3216071	0	True				
ANR	3216189	AssignmentExpression	e = & ( * e ) -> next		3216071	0		=			
ANR	3216190	Identifier	e		3216071	0					
ANR	3216191	UnaryOperationExpression	& ( * e ) -> next		3216071	1					
ANR	3216192	UnaryOperator	&		3216071	0					
ANR	3216193	PtrMemberAccess	( * e ) -> next		3216071	1					
ANR	3216194	UnaryOperationExpression	* e		3216071	0					
ANR	3216195	UnaryOperator	*		3216071	0					
ANR	3216196	Identifier	e		3216071	1					
ANR	3216197	Identifier	next		3216071	1					
ANR	3216198	ReturnType	static void		3216071	1					
ANR	3216199	Identifier	release_fco		3216071	2					
ANR	3216200	ParameterList	"fapi_ufst_server * r , SW16 fcHandle"		3216071	3					
ANR	3216201	Parameter	fapi_ufst_server * r	2039:12:67596:67615	3216071	0	True				
ANR	3216202	ParameterType	fapi_ufst_server *		3216071	0					
ANR	3216203	Identifier	r		3216071	1					
ANR	3216204	Parameter	SW16 fcHandle	2039:34:67618:67630	3216071	1	True				
ANR	3216205	ParameterType	SW16		3216071	0					
ANR	3216206	Identifier	fcHandle		3216071	1					
ANR	3216207	CFGEntryNode	ENTRY		3216071		True				
ANR	3216208	CFGExitNode	EXIT		3216071		True				
ANR	3216209	Symbol	ee		3216071						
ANR	3216210	Symbol	NULL		3216071						
ANR	3216211	Symbol	e		3216071						
ANR	3216212	Symbol	* ee		3216071						
ANR	3216213	Symbol	r -> mem		3216071						
ANR	3216214	Symbol	* * e		3216071						
ANR	3216215	Symbol	& r -> fco_list		3216071						
ANR	3216216	Symbol	fcHandle		3216071						
ANR	3216217	Symbol	( * e ) -> open_count		3216071						
ANR	3216218	Symbol	gx_UFST_find_static_fco_handle		3216071						
ANR	3216219	Symbol	* e		3216071						
ANR	3216220	Symbol	& ( * e ) -> next		3216071						
ANR	3216221	Symbol	r		3216071						
ANR	3216222	Symbol	( * e ) -> fcHandle		3216071						
ANR	3216223	Symbol	ee -> next		3216071						
ANR	3216224	Symbol	* r		3216071						
ANR	3216225	Symbol	ee -> file_path		3216071						
ANR	3216226	Function	gs_fapi_ufst_release_typeface	2060:0:68158:68959							
ANR	3216227	FunctionDef	"gs_fapi_ufst_release_typeface (gs_fapi_server * server , void * font_data)"		3216226	0					
ANR	3216228	CompoundStatement		2062:0:68253:68959	3216226	0					
ANR	3216229	IdentifierDeclStatement	fapi_ufst_server * r = If_to_I ( server ) ;	2063:4:68259:68296	3216226	0	True				
ANR	3216230	IdentifierDecl	* r = If_to_I ( server )		3216226	0					
ANR	3216231	IdentifierDeclType	fapi_ufst_server *		3216226	0					
ANR	3216232	Identifier	r		3216226	1					
ANR	3216233	AssignmentExpression	* r = If_to_I ( server )		3216226	2		=			
ANR	3216234	Identifier	r		3216226	0					
ANR	3216235	CallExpression	If_to_I ( server )		3216226	1					
ANR	3216236	Callee	If_to_I		3216226	0					
ANR	3216237	Identifier	If_to_I		3216226	0					
ANR	3216238	ArgumentList	server		3216226	1					
ANR	3216239	Argument	server		3216226	0					
ANR	3216240	Identifier	server		3216226	0					
ANR	3216241	IdentifierDeclStatement	ufst_common_font_data * d ;	2064:4:68302:68326	3216226	1	True				
ANR	3216242	IdentifierDecl	* d		3216226	0					
ANR	3216243	IdentifierDeclType	ufst_common_font_data *		3216226	0					
ANR	3216244	Identifier	d		3216226	1					
ANR	3216245	IdentifierDeclStatement	gs_fapi_retcode code = 0 ;	2065:4:68332:68356	3216226	2	True				
ANR	3216246	IdentifierDecl	code = 0		3216226	0					
ANR	3216247	IdentifierDeclType	gs_fapi_retcode		3216226	0					
ANR	3216248	Identifier	code		3216226	1					
ANR	3216249	AssignmentExpression	code = 0		3216226	2		=			
ANR	3216250	Identifier	code		3216226	0					
ANR	3216251	PrimaryExpression	0		3216226	1					
ANR	3216252	ExpressionStatement	FSA_FROM_SERVER	2067:4:68363:68378	3216226	3	True				
ANR	3216253	Identifier	FSA_FROM_SERVER		3216226	0					
ANR	3216254	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2069:4:68385:68425	3216226	4	True				
ANR	3216255	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3216226	0					
ANR	3216256	Callee	gs_fapi_ufst_release_char_data_inline		3216226	0					
ANR	3216257	Identifier	gs_fapi_ufst_release_char_data_inline		3216226	0					
ANR	3216258	ArgumentList	r		3216226	1					
ANR	3216259	Argument	r		3216226	0					
ANR	3216260	Identifier	r		3216226	0					
ANR	3216261	IfStatement	if ( font_data == 0 )		3216226	5					
ANR	3216262	Condition	font_data == 0	2070:8:68435:68448	3216226	0	True				
ANR	3216263	EqualityExpression	font_data == 0		3216226	0		==			
ANR	3216264	Identifier	font_data		3216226	0					
ANR	3216265	PrimaryExpression	0		3216226	1					
ANR	3216266	ReturnStatement	return 0 ;	2071:8:68459:68467	3216226	1	True				
ANR	3216267	PrimaryExpression	0		3216226	0					
ANR	3216268	ExpressionStatement	d = ( ufst_common_font_data * ) font_data	2072:4:68473:68512	3216226	6	True				
ANR	3216269	AssignmentExpression	d = ( ufst_common_font_data * ) font_data		3216226	0		=			
ANR	3216270	Identifier	d		3216226	0					
ANR	3216271	CastExpression	( ufst_common_font_data * ) font_data		3216226	1					
ANR	3216272	CastTarget	ufst_common_font_data *		3216226	0					
ANR	3216273	Identifier	font_data		3216226	1					
ANR	3216274	IfStatement	if ( d -> ufstfontinfo )		3216226	7					
ANR	3216275	Condition	d -> ufstfontinfo	2073:8:68522:68536	3216226	0	True				
ANR	3216276	PtrMemberAccess	d -> ufstfontinfo		3216226	0					
ANR	3216277	Identifier	d		3216226	0					
ANR	3216278	Identifier	ufstfontinfo		3216226	1					
ANR	3216279	CompoundStatement		12:25:285:285	3216226	1					
ANR	3216280	ExpressionStatement	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font data"" )"	2074:8:68549:68605	3216226	0	True				
ANR	3216281	CallExpression	"gs_free ( r -> mem , d -> ufstfontinfo , 0 , 0 , ""ufst font data"" )"		3216226	0					
ANR	3216282	Callee	gs_free		3216226	0					
ANR	3216283	Identifier	gs_free		3216226	0					
ANR	3216284	ArgumentList	r -> mem		3216226	1					
ANR	3216285	Argument	r -> mem		3216226	0					
ANR	3216286	PtrMemberAccess	r -> mem		3216226	0					
ANR	3216287	Identifier	r		3216226	0					
ANR	3216288	Identifier	mem		3216226	1					
ANR	3216289	Argument	d -> ufstfontinfo		3216226	1					
ANR	3216290	PtrMemberAccess	d -> ufstfontinfo		3216226	0					
ANR	3216291	Identifier	d		3216226	0					
ANR	3216292	Identifier	ufstfontinfo		3216226	1					
ANR	3216293	Argument	0		3216226	2					
ANR	3216294	PrimaryExpression	0		3216226	0					
ANR	3216295	Argument	0		3216226	3					
ANR	3216296	PrimaryExpression	0		3216226	0					
ANR	3216297	Argument	"""ufst font data"""		3216226	4					
ANR	3216298	PrimaryExpression	"""ufst font data"""		3216226	0					
ANR	3216299	ExpressionStatement	d -> ufstfontinfo = NULL	2075:8:68615:68637	3216226	1	True				
ANR	3216300	AssignmentExpression	d -> ufstfontinfo = NULL		3216226	0		=			
ANR	3216301	PtrMemberAccess	d -> ufstfontinfo		3216226	0					
ANR	3216302	Identifier	d		3216226	0					
ANR	3216303	Identifier	ufstfontinfo		3216226	1					
ANR	3216304	Identifier	NULL		3216226	1					
ANR	3216305	ExpressionStatement	"prepare_typeface ( r , d )"	2077:4:68649:68671	3216226	8	True				
ANR	3216306	CallExpression	"prepare_typeface ( r , d )"		3216226	0					
ANR	3216307	Callee	prepare_typeface		3216226	0					
ANR	3216308	Identifier	prepare_typeface		3216226	0					
ANR	3216309	ArgumentList	r		3216226	1					
ANR	3216310	Argument	r		3216226	0					
ANR	3216311	Identifier	r		3216226	0					
ANR	3216312	Argument	d		3216226	1					
ANR	3216313	Identifier	d		3216226	0					
ANR	3216314	IfStatement	if ( d -> is_disk_font )		3216226	9					
ANR	3216315	Condition	d -> is_disk_font	2079:8:68687:68701	3216226	0	True				
ANR	3216316	PtrMemberAccess	d -> is_disk_font		3216226	0					
ANR	3216317	Identifier	d		3216226	0					
ANR	3216318	Identifier	is_disk_font		3216226	1					
ANR	3216319	ExpressionStatement	code = CGIFhdr_font_purge ( FSA & r -> fc )	2080:8:68712:68750	3216226	1	True				
ANR	3216320	AssignmentExpression	code = CGIFhdr_font_purge ( FSA & r -> fc )		3216226	0		=			
ANR	3216321	Identifier	code		3216226	0					
ANR	3216322	CallExpression	CGIFhdr_font_purge ( FSA & r -> fc )		3216226	1					
ANR	3216323	Callee	CGIFhdr_font_purge		3216226	0					
ANR	3216324	Identifier	CGIFhdr_font_purge		3216226	0					
ANR	3216325	ArgumentList	FSA & r -> fc		3216226	1					
ANR	3216326	Argument	FSA & r -> fc		3216226	0					
ANR	3216327	BitAndExpression	FSA & r -> fc		3216226	0		&			
ANR	3216328	Identifier	FSA		3216226	0					
ANR	3216329	PtrMemberAccess	r -> fc		3216226	1					
ANR	3216330	Identifier	r		3216226	0					
ANR	3216331	Identifier	fc		3216226	1					
ANR	3216332	ElseStatement	else		3216226	0					
ANR	3216333	ExpressionStatement	code = CGIFfont_purge ( FSA & r -> fc )	2082:8:68769:68803	3216226	0	True				
ANR	3216334	AssignmentExpression	code = CGIFfont_purge ( FSA & r -> fc )		3216226	0		=			
ANR	3216335	Identifier	code		3216226	0					
ANR	3216336	CallExpression	CGIFfont_purge ( FSA & r -> fc )		3216226	1					
ANR	3216337	Callee	CGIFfont_purge		3216226	0					
ANR	3216338	Identifier	CGIFfont_purge		3216226	0					
ANR	3216339	ArgumentList	FSA & r -> fc		3216226	1					
ANR	3216340	Argument	FSA & r -> fc		3216226	0					
ANR	3216341	BitAndExpression	FSA & r -> fc		3216226	0		&			
ANR	3216342	Identifier	FSA		3216226	0					
ANR	3216343	PtrMemberAccess	r -> fc		3216226	1					
ANR	3216344	Identifier	r		3216226	0					
ANR	3216345	Identifier	fc		3216226	1					
ANR	3216346	ExpressionStatement	"release_glyphs ( r , d )"	2085:4:68817:68837	3216226	10	True				
ANR	3216347	CallExpression	"release_glyphs ( r , d )"		3216226	0					
ANR	3216348	Callee	release_glyphs		3216226	0					
ANR	3216349	Identifier	release_glyphs		3216226	0					
ANR	3216350	ArgumentList	r		3216226	1					
ANR	3216351	Argument	r		3216226	0					
ANR	3216352	Identifier	r		3216226	0					
ANR	3216353	Argument	d		3216226	1					
ANR	3216354	Identifier	d		3216226	0					
ANR	3216355	ExpressionStatement	"release_fco ( r , ( SW16 ) ( d -> font_id >> 16 ) )"	2086:4:68843:68884	3216226	11	True				
ANR	3216356	CallExpression	"release_fco ( r , ( SW16 ) ( d -> font_id >> 16 ) )"		3216226	0					
ANR	3216357	Callee	release_fco		3216226	0					
ANR	3216358	Identifier	release_fco		3216226	0					
ANR	3216359	ArgumentList	r		3216226	1					
ANR	3216360	Argument	r		3216226	0					
ANR	3216361	Identifier	r		3216226	0					
ANR	3216362	Argument	( SW16 ) ( d -> font_id >> 16 )		3216226	1					
ANR	3216363	CastExpression	( SW16 ) ( d -> font_id >> 16 )		3216226	0					
ANR	3216364	CastTarget	SW16		3216226	0					
ANR	3216365	ShiftExpression	d -> font_id >> 16		3216226	1		>>			
ANR	3216366	PtrMemberAccess	d -> font_id		3216226	0					
ANR	3216367	Identifier	d		3216226	0					
ANR	3216368	Identifier	font_id		3216226	1					
ANR	3216369	PrimaryExpression	16		3216226	1					
ANR	3216370	ExpressionStatement	"gs_free ( r -> mem , font_data , 0 , 0 , ""ufst font data"" )"	2087:4:68890:68940	3216226	12	True				
ANR	3216371	CallExpression	"gs_free ( r -> mem , font_data , 0 , 0 , ""ufst font data"" )"		3216226	0					
ANR	3216372	Callee	gs_free		3216226	0					
ANR	3216373	Identifier	gs_free		3216226	0					
ANR	3216374	ArgumentList	r -> mem		3216226	1					
ANR	3216375	Argument	r -> mem		3216226	0					
ANR	3216376	PtrMemberAccess	r -> mem		3216226	0					
ANR	3216377	Identifier	r		3216226	0					
ANR	3216378	Identifier	mem		3216226	1					
ANR	3216379	Argument	font_data		3216226	1					
ANR	3216380	Identifier	font_data		3216226	0					
ANR	3216381	Argument	0		3216226	2					
ANR	3216382	PrimaryExpression	0		3216226	0					
ANR	3216383	Argument	0		3216226	3					
ANR	3216384	PrimaryExpression	0		3216226	0					
ANR	3216385	Argument	"""ufst font data"""		3216226	4					
ANR	3216386	PrimaryExpression	"""ufst font data"""		3216226	0					
ANR	3216387	ReturnStatement	return code ;	2088:4:68946:68957	3216226	13	True				
ANR	3216388	Identifier	code		3216226	0					
ANR	3216389	ReturnType	static gs_fapi_retcode		3216226	1					
ANR	3216390	Identifier	gs_fapi_ufst_release_typeface		3216226	2					
ANR	3216391	ParameterList	"gs_fapi_server * server , void * font_data"		3216226	3					
ANR	3216392	Parameter	gs_fapi_server * server	2061:30:68211:68233	3216226	0	True				
ANR	3216393	ParameterType	gs_fapi_server *		3216226	0					
ANR	3216394	Identifier	server		3216226	1					
ANR	3216395	Parameter	void * font_data	2061:55:68236:68250	3216226	1	True				
ANR	3216396	ParameterType	void *		3216226	0					
ANR	3216397	Identifier	font_data		3216226	1					
ANR	3216398	CFGEntryNode	ENTRY		3216226		True				
ANR	3216399	CFGExitNode	EXIT		3216226		True				
ANR	3216400	Symbol	CGIFhdr_font_purge		3216226						
ANR	3216401	Symbol	server		3216226						
ANR	3216402	Symbol	If_to_I		3216226						
ANR	3216403	Symbol	code		3216226						
ANR	3216404	Symbol	NULL		3216226						
ANR	3216405	Symbol	d		3216226						
ANR	3216406	Symbol	r -> mem		3216226						
ANR	3216407	Symbol	d -> ufstfontinfo		3216226						
ANR	3216408	Symbol	r -> fc		3216226						
ANR	3216409	Symbol	CGIFfont_purge		3216226						
ANR	3216410	Symbol	* d		3216226						
ANR	3216411	Symbol	d -> is_disk_font		3216226						
ANR	3216412	Symbol	r		3216226						
ANR	3216413	Symbol	font_data		3216226						
ANR	3216414	Symbol	FSA		3216226						
ANR	3216415	Symbol	* r		3216226						
ANR	3216416	Symbol	d -> font_id		3216226						
ANR	3216417	Function	gs_fapi_ufst_check_cmap_for_GID	2091:0:68962:69072							
ANR	3216418	FunctionDef	"gs_fapi_ufst_check_cmap_for_GID (gs_fapi_server * server , uint * index)"		3216417	0					
ANR	3216419	CompoundStatement		2093:0:69056:69072	3216417	0					
ANR	3216420	ReturnStatement	return 0 ;	2094:4:69062:69070	3216417	0	True				
ANR	3216421	PrimaryExpression	0		3216417	0					
ANR	3216422	ReturnType	static gs_fapi_retcode		3216417	1					
ANR	3216423	Identifier	gs_fapi_ufst_check_cmap_for_GID		3216417	2					
ANR	3216424	ParameterList	"gs_fapi_server * server , uint * index"		3216417	3					
ANR	3216425	Parameter	gs_fapi_server * server	2092:32:69017:69039	3216417	0	True				
ANR	3216426	ParameterType	gs_fapi_server *		3216417	0					
ANR	3216427	Identifier	server		3216417	1					
ANR	3216428	Parameter	uint * index	2092:57:69042:69053	3216417	1	True				
ANR	3216429	ParameterType	uint *		3216417	0					
ANR	3216430	Identifier	index		3216417	1					
ANR	3216431	CFGEntryNode	ENTRY		3216417		True				
ANR	3216432	CFGExitNode	EXIT		3216417		True				
ANR	3216433	Symbol	server		3216417						
ANR	3216434	Symbol	index		3216417						
ANR	3216435	Function	gs_fapi_ufst_set_mm_weight_vector	2097:0:69075:69313							
ANR	3216436	FunctionDef	"gs_fapi_ufst_set_mm_weight_vector (gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length)"		3216435	0					
ANR	3216437	CompoundStatement		2099:0:69202:69313	3216435	0					
ANR	3216438	ExpressionStatement	( void ) server	2100:4:69208:69220	3216435	0	True				
ANR	3216439	CastExpression	( void ) server		3216435	0					
ANR	3216440	CastTarget	void		3216435	0					
ANR	3216441	Identifier	server		3216435	1					
ANR	3216442	ExpressionStatement	( void ) ff	2101:4:69226:69234	3216435	1	True				
ANR	3216443	CastExpression	( void ) ff		3216435	0					
ANR	3216444	CastTarget	void		3216435	0					
ANR	3216445	Identifier	ff		3216435	1					
ANR	3216446	ExpressionStatement	( void ) wvector	2102:4:69240:69253	3216435	2	True				
ANR	3216447	CastExpression	( void ) wvector		3216435	0					
ANR	3216448	CastTarget	void		3216435	0					
ANR	3216449	Identifier	wvector		3216435	1					
ANR	3216450	ExpressionStatement	( void ) length	2103:4:69259:69271	3216435	3	True				
ANR	3216451	CastExpression	( void ) length		3216435	0					
ANR	3216452	CastTarget	void		3216435	0					
ANR	3216453	Identifier	length		3216435	1					
ANR	3216454	ReturnStatement	return gs_error_invalidaccess ;	2105:4:69282:69311	3216435	4	True				
ANR	3216455	Identifier	gs_error_invalidaccess		3216435	0					
ANR	3216456	ReturnType	static gs_fapi_retcode		3216435	1					
ANR	3216457	Identifier	gs_fapi_ufst_set_mm_weight_vector		3216435	2					
ANR	3216458	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length"		3216435	3					
ANR	3216459	Parameter	gs_fapi_server * server	2098:34:69132:69153	3216435	0	True				
ANR	3216460	ParameterType	gs_fapi_server *		3216435	0					
ANR	3216461	Identifier	server		3216435	1					
ANR	3216462	Parameter	gs_fapi_font * ff	2098:58:69156:69171	3216435	1	True				
ANR	3216463	ParameterType	gs_fapi_font *		3216435	0					
ANR	3216464	Identifier	ff		3216435	1					
ANR	3216465	Parameter	float * wvector	2098:76:69174:69187	3216435	2	True				
ANR	3216466	ParameterType	float *		3216435	0					
ANR	3216467	Identifier	wvector		3216435	1					
ANR	3216468	Parameter	int length	2098:92:69190:69199	3216435	3	True				
ANR	3216469	ParameterType	int		3216435	0					
ANR	3216470	Identifier	length		3216435	1					
ANR	3216471	CFGEntryNode	ENTRY		3216435		True				
ANR	3216472	CFGExitNode	EXIT		3216435		True				
ANR	3216473	Symbol	ff		3216435						
ANR	3216474	Symbol	server		3216435						
ANR	3216475	Symbol	wvector		3216435						
ANR	3216476	Symbol	length		3216435						
ANR	3216477	Symbol	gs_error_invalidaccess		3216435						
ANR	3216478	DeclStmt									
ANR	3216479	Decl							void	void ( gs_fapi_server * * server )	gs_fapi_ufst_destroy
ANR	3216480	DeclStmt									
ANR	3216481	Decl							const gs_fapi_server_descriptor	const gs_fapi_server_descriptor	ufst_descriptor
ANR	3216482	DeclStmt									
ANR	3216483	Decl							const gs_fapi_server	const gs_fapi_server	ufstserver
ANR	3216484	DeclStmt									
ANR	3216485	Decl							int	"int ( gs_memory_t * mem , gs_fapi_server * * server )"	gs_fapi_ufst_init
ANR	3216486	Function	gs_fapi_ufst_init	2151:0:70596:71336							
ANR	3216487	FunctionDef	"gs_fapi_ufst_init (gs_memory_t * mem , gs_fapi_server * * server)"		3216486	0					
ANR	3216488	CompoundStatement		2153:0:70663:71336	3216486	0					
ANR	3216489	IdentifierDeclStatement	fapi_ufst_server * serv ;	2154:4:70669:70691	3216486	0	True				
ANR	3216490	IdentifierDecl	* serv		3216486	0					
ANR	3216491	IdentifierDeclType	fapi_ufst_server *		3216486	0					
ANR	3216492	Identifier	serv		3216486	1					
ANR	3216493	IdentifierDeclStatement	int code = 0 ;	2155:4:70697:70709	3216486	1	True				
ANR	3216494	IdentifierDecl	code = 0		3216486	0					
ANR	3216495	IdentifierDeclType	int		3216486	0					
ANR	3216496	Identifier	code		3216486	1					
ANR	3216497	AssignmentExpression	code = 0		3216486	2		=			
ANR	3216498	Identifier	code		3216486	0					
ANR	3216499	PrimaryExpression	0		3216486	1					
ANR	3216500	IdentifierDeclStatement	gs_memory_t * cmem = mem -> non_gc_memory ;	2156:4:70715:70753	3216486	2	True				
ANR	3216501	IdentifierDecl	* cmem = mem -> non_gc_memory		3216486	0					
ANR	3216502	IdentifierDeclType	gs_memory_t *		3216486	0					
ANR	3216503	Identifier	cmem		3216486	1					
ANR	3216504	AssignmentExpression	* cmem = mem -> non_gc_memory		3216486	2		=			
ANR	3216505	Identifier	cmem		3216486	0					
ANR	3216506	PtrMemberAccess	mem -> non_gc_memory		3216486	1					
ANR	3216507	Identifier	mem		3216486	0					
ANR	3216508	Identifier	non_gc_memory		3216486	1					
ANR	3216509	ExpressionStatement	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"	2158:4:70760:70801	3216486	3	True				
ANR	3216510	AssignmentExpression	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"		3216486	0		=			
ANR	3216511	Identifier	code		3216486	0					
ANR	3216512	CallExpression	"gs_memory_chunk_wrap ( & ( cmem ) , mem )"		3216486	1					
ANR	3216513	Callee	gs_memory_chunk_wrap		3216486	0					
ANR	3216514	Identifier	gs_memory_chunk_wrap		3216486	0					
ANR	3216515	ArgumentList	& ( cmem )		3216486	1					
ANR	3216516	Argument	& ( cmem )		3216486	0					
ANR	3216517	UnaryOperationExpression	& ( cmem )		3216486	0					
ANR	3216518	UnaryOperator	&		3216486	0					
ANR	3216519	Identifier	cmem		3216486	1					
ANR	3216520	Argument	mem		3216486	1					
ANR	3216521	Identifier	mem		3216486	0					
ANR	3216522	IfStatement	if ( code != 0 )		3216486	4					
ANR	3216523	Condition	code != 0	2159:8:70811:70819	3216486	0	True				
ANR	3216524	EqualityExpression	code != 0		3216486	0		!=			
ANR	3216525	Identifier	code		3216486	0					
ANR	3216526	PrimaryExpression	0		3216486	1					
ANR	3216527	CompoundStatement		7:19:158:158	3216486	1					
ANR	3216528	ReturnStatement	return ( code ) ;	2160:8:70832:70845	3216486	0	True				
ANR	3216529	Identifier	code		3216486	0					
ANR	3216530	ExpressionStatement	"serv = ( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"	2163:4:70858:71133	3216486	5	True				
ANR	3216531	AssignmentExpression	"serv = ( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		3216486	0		=			
ANR	3216532	Identifier	serv		3216486	0					
ANR	3216533	CastExpression	"( fapi_ufst_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		3216486	1					
ANR	3216534	CastTarget	fapi_ufst_server *		3216486	0					
ANR	3216535	CallExpression	"gs_alloc_bytes_immovable ( cmem , sizeof ( fapi_ufst_server ) , ""fapi_ufst_server"" )"		3216486	1					
ANR	3216536	Callee	gs_alloc_bytes_immovable		3216486	0					
ANR	3216537	Identifier	gs_alloc_bytes_immovable		3216486	0					
ANR	3216538	ArgumentList	cmem		3216486	1					
ANR	3216539	Argument	cmem		3216486	0					
ANR	3216540	Identifier	cmem		3216486	0					
ANR	3216541	Argument	sizeof ( fapi_ufst_server )		3216486	1					
ANR	3216542	SizeofExpression	sizeof ( fapi_ufst_server )		3216486	0					
ANR	3216543	Sizeof	sizeof		3216486	0					
ANR	3216544	SizeofOperand	fapi_ufst_server		3216486	1					
ANR	3216545	Argument	"""fapi_ufst_server"""		3216486	2					
ANR	3216546	PrimaryExpression	"""fapi_ufst_server"""		3216486	0					
ANR	3216547	IfStatement	if ( serv == 0 )		3216486	6					
ANR	3216548	Condition	serv == 0	2168:8:71143:71151	3216486	0	True				
ANR	3216549	EqualityExpression	serv == 0		3216486	0		==			
ANR	3216550	Identifier	serv		3216486	0					
ANR	3216551	PrimaryExpression	0		3216486	1					
ANR	3216552	ExpressionStatement	return_error ( gs_error_Fatal )	2169:8:71162:71190	3216486	1	True				
ANR	3216553	CallExpression	return_error ( gs_error_Fatal )		3216486	0					
ANR	3216554	Callee	return_error		3216486	0					
ANR	3216555	Identifier	return_error		3216486	0					
ANR	3216556	ArgumentList	gs_error_Fatal		3216486	1					
ANR	3216557	Argument	gs_error_Fatal		3216486	0					
ANR	3216558	Identifier	gs_error_Fatal		3216486	0					
ANR	3216559	ExpressionStatement	"memset ( serv , 0 , sizeof ( * serv ) )"	2170:4:71196:71226	3216486	7	True				
ANR	3216560	CallExpression	"memset ( serv , 0 , sizeof ( * serv ) )"		3216486	0					
ANR	3216561	Callee	memset		3216486	0					
ANR	3216562	Identifier	memset		3216486	0					
ANR	3216563	ArgumentList	serv		3216486	1					
ANR	3216564	Argument	serv		3216486	0					
ANR	3216565	Identifier	serv		3216486	0					
ANR	3216566	Argument	0		3216486	1					
ANR	3216567	PrimaryExpression	0		3216486	0					
ANR	3216568	Argument	sizeof ( * serv )		3216486	2					
ANR	3216569	SizeofExpression	sizeof ( * serv )		3216486	0					
ANR	3216570	Sizeof	sizeof		3216486	0					
ANR	3216571	UnaryOperationExpression	* serv		3216486	1					
ANR	3216572	UnaryOperator	*		3216486	0					
ANR	3216573	Identifier	serv		3216486	1					
ANR	3216574	ExpressionStatement	serv -> mem = cmem	2172:4:71233:71249	3216486	8	True				
ANR	3216575	AssignmentExpression	serv -> mem = cmem		3216486	0		=			
ANR	3216576	PtrMemberAccess	serv -> mem		3216486	0					
ANR	3216577	Identifier	serv		3216486	0					
ANR	3216578	Identifier	mem		3216486	1					
ANR	3216579	Identifier	cmem		3216486	1					
ANR	3216580	ExpressionStatement	serv -> If = ufstserver	2174:4:71256:71277	3216486	9	True				
ANR	3216581	AssignmentExpression	serv -> If = ufstserver		3216486	0		=			
ANR	3216582	PtrMemberAccess	serv -> If		3216486	0					
ANR	3216583	Identifier	serv		3216486	0					
ANR	3216584	Identifier	If		3216486	1					
ANR	3216585	Identifier	ufstserver		3216486	1					
ANR	3216586	ExpressionStatement	( * server ) = ( gs_fapi_server * ) serv	2176:4:71284:71319	3216486	10	True				
ANR	3216587	AssignmentExpression	( * server ) = ( gs_fapi_server * ) serv		3216486	0		=			
ANR	3216588	UnaryOperationExpression	* server		3216486	0					
ANR	3216589	UnaryOperator	*		3216486	0					
ANR	3216590	Identifier	server		3216486	1					
ANR	3216591	CastExpression	( gs_fapi_server * ) serv		3216486	1					
ANR	3216592	CastTarget	gs_fapi_server *		3216486	0					
ANR	3216593	Identifier	serv		3216486	1					
ANR	3216594	ReturnStatement	return 0 ;	2178:4:71326:71334	3216486	11	True				
ANR	3216595	PrimaryExpression	0		3216486	0					
ANR	3216596	ReturnType	int		3216486	1					
ANR	3216597	Identifier	gs_fapi_ufst_init		3216486	2					
ANR	3216598	ParameterList	"gs_memory_t * mem , gs_fapi_server * * server"		3216486	3					
ANR	3216599	Parameter	gs_memory_t * mem	2152:18:70618:70634	3216486	0	True				
ANR	3216600	ParameterType	gs_memory_t *		3216486	0					
ANR	3216601	Identifier	mem		3216486	1					
ANR	3216602	Parameter	gs_fapi_server * * server	2152:37:70637:70660	3216486	1	True				
ANR	3216603	ParameterType	gs_fapi_server * *		3216486	0					
ANR	3216604	Identifier	server		3216486	1					
ANR	3216605	CFGEntryNode	ENTRY		3216486		True				
ANR	3216606	CFGExitNode	EXIT		3216486		True				
ANR	3216607	Symbol	gs_error_Fatal		3216486						
ANR	3216608	Symbol	server		3216486						
ANR	3216609	Symbol	serv		3216486						
ANR	3216610	Symbol	code		3216486						
ANR	3216611	Symbol	* server		3216486						
ANR	3216612	Symbol	gs_memory_chunk_wrap		3216486						
ANR	3216613	Symbol	ufstserver		3216486						
ANR	3216614	Symbol	& cmem		3216486						
ANR	3216615	Symbol	* serv		3216486						
ANR	3216616	Symbol	mem -> non_gc_memory		3216486						
ANR	3216617	Symbol	mem		3216486						
ANR	3216618	Symbol	gs_alloc_bytes_immovable		3216486						
ANR	3216619	Symbol	serv -> mem		3216486						
ANR	3216620	Symbol	serv -> If		3216486						
ANR	3216621	Symbol	cmem		3216486						
ANR	3216622	Symbol	* mem		3216486						
ANR	3216623	DeclStmt									
ANR	3216624	Decl							unsigned long	unsigned long	maxmem
ANR	3216625	Function	gs_fapi_ufst_destroy	2189:0:71469:72305							
ANR	3216626	FunctionDef	gs_fapi_ufst_destroy (gs_fapi_server * * server)		3216625	0					
ANR	3216627	CompoundStatement		2191:0:71528:72305	3216625	0					
ANR	3216628	IdentifierDeclStatement	fapi_ufst_server * r = ( fapi_ufst_server * ) * server ;	2192:4:71534:71585	3216625	0	True				
ANR	3216629	IdentifierDecl	* r = ( fapi_ufst_server * ) * server		3216625	0					
ANR	3216630	IdentifierDeclType	fapi_ufst_server *		3216625	0					
ANR	3216631	Identifier	r		3216625	1					
ANR	3216632	AssignmentExpression	* r = ( fapi_ufst_server * ) * server		3216625	2		=			
ANR	3216633	Identifier	r		3216625	0					
ANR	3216634	CastExpression	( fapi_ufst_server * ) * server		3216625	1					
ANR	3216635	CastTarget	fapi_ufst_server *		3216625	0					
ANR	3216636	UnaryOperationExpression	* server		3216625	1					
ANR	3216637	UnaryOperator	*		3216625	0					
ANR	3216638	Identifier	server		3216625	1					
ANR	3216639	IdentifierDeclStatement	gs_memory_t * cmem = r -> mem ;	2193:4:71591:71617	3216625	1	True				
ANR	3216640	IdentifierDecl	* cmem = r -> mem		3216625	0					
ANR	3216641	IdentifierDeclType	gs_memory_t *		3216625	0					
ANR	3216642	Identifier	cmem		3216625	1					
ANR	3216643	AssignmentExpression	* cmem = r -> mem		3216625	2		=			
ANR	3216644	Identifier	cmem		3216625	0					
ANR	3216645	PtrMemberAccess	r -> mem		3216625	1					
ANR	3216646	Identifier	r		3216625	0					
ANR	3216647	Identifier	mem		3216625	1					
ANR	3216648	ExpressionStatement	FSA_FROM_SERVER	2195:4:71624:71639	3216625	2	True				
ANR	3216649	Identifier	FSA_FROM_SERVER		3216625	0					
ANR	3216650	ExpressionStatement	"dmprintf1 ( r -> mem , ""UFST used %Lf kb\\n"" , ( ( long double ) maxmem ) / 1024 )"	2198:4:71671:71740	3216625	3	True				
ANR	3216651	CallExpression	"dmprintf1 ( r -> mem , ""UFST used %Lf kb\\n"" , ( ( long double ) maxmem ) / 1024 )"		3216625	0					
ANR	3216652	Callee	dmprintf1		3216625	0					
ANR	3216653	Identifier	dmprintf1		3216625	0					
ANR	3216654	ArgumentList	r -> mem		3216625	1					
ANR	3216655	Argument	r -> mem		3216625	0					
ANR	3216656	PtrMemberAccess	r -> mem		3216625	0					
ANR	3216657	Identifier	r		3216625	0					
ANR	3216658	Identifier	mem		3216625	1					
ANR	3216659	Argument	"""UFST used %Lf kb\\n"""		3216625	1					
ANR	3216660	PrimaryExpression	"""UFST used %Lf kb\\n"""		3216625	0					
ANR	3216661	Argument	( ( long double ) maxmem ) / 1024		3216625	2					
ANR	3216662	MultiplicativeExpression	( ( long double ) maxmem ) / 1024		3216625	0		/			
ANR	3216663	CastExpression	( long double ) maxmem		3216625	0					
ANR	3216664	CastTarget	long double		3216625	0					
ANR	3216665	Identifier	maxmem		3216625	1					
ANR	3216666	PrimaryExpression	1024		3216625	1					
ANR	3216667	Statement	in	2202:35:71858:71859	3216625	4	True				
ANR	3216668	Statement	a	2202:38:71861:71861	3216625	5	True				
ANR	3216669	Statement	single	2202:40:71863:71868	3216625	6	True				
ANR	3216670	Statement	language	2202:47:71870:71877	3216625	7	True				
ANR	3216671	Statement	build	2202:56:71879:71883	3216625	8	True				
ANR	3216672	Statement	for	2202:62:71885:71887	3216625	9	True				
ANR	3216673	Statement	host	2202:66:71889:71892	3216625	10	True				
ANR	3216674	Statement	-	2202:70:71893:71893	3216625	11	True				
ANR	3216675	Statement	based	2202:71:71894:71898	3216625	12	True				
ANR	3216676	Statement	applications	2202:77:71900:71911	3216625	13	True				
ANR	3216677	Statement	.	2202:89:71912:71912	3216625	14	True				
ANR	3216678	Statement	*	2202:91:71914:71914	3216625	15	True				
ANR	3216679	Statement	/	2202:92:71915:71915	3216625	16	True				
ANR	3216680	ExpressionStatement	"gx_set_UFST_Callbacks ( NULL , NULL , NULL )"	2203:4:71921:71960	3216625	17	True				
ANR	3216681	CallExpression	"gx_set_UFST_Callbacks ( NULL , NULL , NULL )"		3216625	0					
ANR	3216682	Callee	gx_set_UFST_Callbacks		3216625	0					
ANR	3216683	Identifier	gx_set_UFST_Callbacks		3216625	0					
ANR	3216684	ArgumentList	NULL		3216625	1					
ANR	3216685	Argument	NULL		3216625	0					
ANR	3216686	Identifier	NULL		3216625	0					
ANR	3216687	Argument	NULL		3216625	1					
ANR	3216688	Identifier	NULL		3216625	0					
ANR	3216689	Argument	NULL		3216625	2					
ANR	3216690	Identifier	NULL		3216625	0					
ANR	3216691	ExpressionStatement	gs_fapi_ufst_release_char_data_inline ( r )	2206:4:71974:72014	3216625	18	True				
ANR	3216692	CallExpression	gs_fapi_ufst_release_char_data_inline ( r )		3216625	0					
ANR	3216693	Callee	gs_fapi_ufst_release_char_data_inline		3216625	0					
ANR	3216694	Identifier	gs_fapi_ufst_release_char_data_inline		3216625	0					
ANR	3216695	ArgumentList	r		3216625	1					
ANR	3216696	Argument	r		3216625	0					
ANR	3216697	Identifier	r		3216625	0					
ANR	3216698	IfStatement	if ( r -> bInitialized && ! r -> ufst_is_singleton )		3216625	19					
ANR	3216699	Condition	r -> bInitialized && ! r -> ufst_is_singleton	2207:8:72024:72063	3216625	0	True				
ANR	3216700	AndExpression	r -> bInitialized && ! r -> ufst_is_singleton		3216625	0		&&			
ANR	3216701	PtrMemberAccess	r -> bInitialized		3216625	0					
ANR	3216702	Identifier	r		3216625	0					
ANR	3216703	Identifier	bInitialized		3216625	1					
ANR	3216704	UnaryOperationExpression	! r -> ufst_is_singleton		3216625	1					
ANR	3216705	UnaryOperator	!		3216625	0					
ANR	3216706	PtrMemberAccess	r -> ufst_is_singleton		3216625	1					
ANR	3216707	Identifier	r		3216625	0					
ANR	3216708	Identifier	ufst_is_singleton		3216625	1					
ANR	3216709	ExpressionStatement	gx_UFST_fini ( )	2208:8:72074:72088	3216625	1	True				
ANR	3216710	CallExpression	gx_UFST_fini ( )		3216625	0					
ANR	3216711	Callee	gx_UFST_fini		3216625	0					
ANR	3216712	Identifier	gx_UFST_fini		3216625	0					
ANR	3216713	ArgumentList			3216625	1					
ANR	3216714	IfStatement	if ( r -> param )		3216625	20					
ANR	3216715	Condition	r -> param	2210:8:72099:72106	3216625	0	True				
ANR	3216716	PtrMemberAccess	r -> param		3216625	0					
ANR	3216717	Identifier	r		3216625	0					
ANR	3216718	Identifier	param		3216625	1					
ANR	3216719	CompoundStatement		20:18:580:580	3216625	1					
ANR	3216720	ExpressionStatement	"gs_free ( r -> mem , r -> param , 0 , 0 , ""server_params"" )"	2211:8:72119:72167	3216625	0	True				
ANR	3216721	CallExpression	"gs_free ( r -> mem , r -> param , 0 , 0 , ""server_params"" )"		3216625	0					
ANR	3216722	Callee	gs_free		3216625	0					
ANR	3216723	Identifier	gs_free		3216625	0					
ANR	3216724	ArgumentList	r -> mem		3216625	1					
ANR	3216725	Argument	r -> mem		3216625	0					
ANR	3216726	PtrMemberAccess	r -> mem		3216625	0					
ANR	3216727	Identifier	r		3216625	0					
ANR	3216728	Identifier	mem		3216625	1					
ANR	3216729	Argument	r -> param		3216625	1					
ANR	3216730	PtrMemberAccess	r -> param		3216625	0					
ANR	3216731	Identifier	r		3216625	0					
ANR	3216732	Identifier	param		3216625	1					
ANR	3216733	Argument	0		3216625	2					
ANR	3216734	PrimaryExpression	0		3216625	0					
ANR	3216735	Argument	0		3216625	3					
ANR	3216736	PrimaryExpression	0		3216625	0					
ANR	3216737	Argument	"""server_params"""		3216625	4					
ANR	3216738	PrimaryExpression	"""server_params"""		3216625	0					
ANR	3216739	ExpressionStatement	"gs_free ( cmem , r , 0 , 0 , ""gs_fapi_ufst_destroy: fapi_ufst_server"" )"	2214:4:72180:72244	3216625	21	True				
ANR	3216740	CallExpression	"gs_free ( cmem , r , 0 , 0 , ""gs_fapi_ufst_destroy: fapi_ufst_server"" )"		3216625	0					
ANR	3216741	Callee	gs_free		3216625	0					
ANR	3216742	Identifier	gs_free		3216625	0					
ANR	3216743	ArgumentList	cmem		3216625	1					
ANR	3216744	Argument	cmem		3216625	0					
ANR	3216745	Identifier	cmem		3216625	0					
ANR	3216746	Argument	r		3216625	1					
ANR	3216747	Identifier	r		3216625	0					
ANR	3216748	Argument	0		3216625	2					
ANR	3216749	PrimaryExpression	0		3216625	0					
ANR	3216750	Argument	0		3216625	3					
ANR	3216751	PrimaryExpression	0		3216625	0					
ANR	3216752	Argument	"""gs_fapi_ufst_destroy: fapi_ufst_server"""		3216625	4					
ANR	3216753	PrimaryExpression	"""gs_fapi_ufst_destroy: fapi_ufst_server"""		3216625	0					
ANR	3216754	ExpressionStatement	gs_memory_chunk_release ( cmem )	2216:4:72251:72280	3216625	22	True				
ANR	3216755	CallExpression	gs_memory_chunk_release ( cmem )		3216625	0					
ANR	3216756	Callee	gs_memory_chunk_release		3216625	0					
ANR	3216757	Identifier	gs_memory_chunk_release		3216625	0					
ANR	3216758	ArgumentList	cmem		3216625	1					
ANR	3216759	Argument	cmem		3216625	0					
ANR	3216760	Identifier	cmem		3216625	0					
ANR	3216761	ExpressionStatement	( * server ) = NULL	2218:4:72287:72303	3216625	23	True				
ANR	3216762	AssignmentExpression	( * server ) = NULL		3216625	0		=			
ANR	3216763	UnaryOperationExpression	* server		3216625	0					
ANR	3216764	UnaryOperator	*		3216625	0					
ANR	3216765	Identifier	server		3216625	1					
ANR	3216766	Identifier	NULL		3216625	1					
ANR	3216767	ReturnType	static void		3216625	1					
ANR	3216768	Identifier	gs_fapi_ufst_destroy		3216625	2					
ANR	3216769	ParameterList	gs_fapi_server * * server		3216625	3					
ANR	3216770	Parameter	gs_fapi_server * * server	2190:21:71502:71525	3216625	0	True				
ANR	3216771	ParameterType	gs_fapi_server * *		3216625	0					
ANR	3216772	Identifier	server		3216625	1					
ANR	3216773	CFGEntryNode	ENTRY		3216625		True				
ANR	3216774	CFGExitNode	EXIT		3216625		True				
ANR	3216775	Symbol	r -> param		3216625						
ANR	3216776	Symbol	server		3216625						
ANR	3216777	Symbol	r -> bInitialized		3216625						
ANR	3216778	Symbol	r		3216625						
ANR	3216779	Symbol	* server		3216625						
ANR	3216780	Symbol	NULL		3216625						
ANR	3216781	Symbol	r -> mem		3216625						
ANR	3216782	Symbol	r -> ufst_is_singleton		3216625						
ANR	3216783	Symbol	cmem		3216625						
ANR	3216784	Symbol	* r		3216625						
ANR	3216785	Symbol	maxmem		3216625						
