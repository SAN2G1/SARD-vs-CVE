command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	699178	File	data/converged/CVE-2018-16863_ghostpdl/base_gsmisc.c								
ANR	699179	Function	orig_sqrt	31:0:1015:1078							
ANR	699180	FunctionDef	orig_sqrt (double x)		699179	0					
ANR	699181	CompoundStatement		33:0:1056:1078	699179	0					
ANR	699182	ReturnStatement	return sqrt ( x ) ;	34:4:1062:1076	699179	0	True				
ANR	699183	CallExpression	sqrt ( x )		699179	0					
ANR	699184	Callee	sqrt		699179	0					
ANR	699185	Identifier	sqrt		699179	0					
ANR	699186	ArgumentList	x		699179	1					
ANR	699187	Argument	x		699179	0					
ANR	699188	Identifier	x		699179	0					
ANR	699189	ReturnType	static inline double		699179	1					
ANR	699190	Identifier	orig_sqrt		699179	2					
ANR	699191	ParameterList	double x		699179	3					
ANR	699192	Parameter	double x	32:10:1046:1053	699179	0	True				
ANR	699193	ParameterType	double		699179	0					
ANR	699194	Identifier	x		699179	1					
ANR	699195	CFGEntryNode	ENTRY		699179		True				
ANR	699196	CFGExitNode	EXIT		699179		True				
ANR	699197	Symbol	sqrt		699179						
ANR	699198	Symbol	x		699179						
ANR	699199	DeclStmt									
ANR	699200	Decl							const char	const char [ ]	msg_truncated
ANR	699201	Function	outprintf	58:0:1600:2070							
ANR	699202	FunctionDef	"outprintf (const gs_memory_t * mem , const char * fmt)"		699201	0					
ANR	699203	CompoundStatement		59:0:1660:2070	699201	0					
ANR	699204	IdentifierDeclStatement	int count ;	60:4:1666:1675	699201	0	True				
ANR	699205	IdentifierDecl	count		699201	0					
ANR	699206	IdentifierDeclType	int		699201	0					
ANR	699207	Identifier	count		699201	1					
ANR	699208	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	61:4:1681:1708	699201	1	True				
ANR	699209	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		699201	0					
ANR	699210	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		699201	0					
ANR	699211	Identifier	buf		699201	1					
ANR	699212	Identifier	PRINTF_BUF_LENGTH		699201	2					
ANR	699213	IdentifierDeclStatement	va_list args ;	62:4:1714:1726	699201	2	True				
ANR	699214	IdentifierDecl	args		699201	0					
ANR	699215	IdentifierDeclType	va_list		699201	0					
ANR	699216	Identifier	args		699201	1					
ANR	699217	ExpressionStatement	"va_start ( args , fmt )"	64:4:1733:1752	699201	3	True				
ANR	699218	CallExpression	"va_start ( args , fmt )"		699201	0					
ANR	699219	Callee	va_start		699201	0					
ANR	699220	Identifier	va_start		699201	0					
ANR	699221	ArgumentList	args		699201	1					
ANR	699222	Argument	args		699201	0					
ANR	699223	Identifier	args		699201	0					
ANR	699224	Argument	fmt		699201	1					
ANR	699225	Identifier	fmt		699201	0					
ANR	699226	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	65:4:1758:1804	699201	4	True				
ANR	699227	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699201	0		=			
ANR	699228	Identifier	count		699201	0					
ANR	699229	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699201	1					
ANR	699230	Callee	vsnprintf		699201	0					
ANR	699231	Identifier	vsnprintf		699201	0					
ANR	699232	ArgumentList	buf		699201	1					
ANR	699233	Argument	buf		699201	0					
ANR	699234	Identifier	buf		699201	0					
ANR	699235	Argument	sizeof ( buf )		699201	1					
ANR	699236	SizeofExpression	sizeof ( buf )		699201	0					
ANR	699237	Sizeof	sizeof		699201	0					
ANR	699238	SizeofOperand	buf		699201	1					
ANR	699239	Argument	fmt		699201	2					
ANR	699240	Identifier	fmt		699201	0					
ANR	699241	Argument	args		699201	3					
ANR	699242	Identifier	args		699201	0					
ANR	699243	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		699201	5					
ANR	699244	Condition	count >= sizeof ( buf ) || count < 0	66:8:1814:1846	699201	0	True				
ANR	699245	OrExpression	count >= sizeof ( buf ) || count < 0		699201	0		||			
ANR	699246	RelationalExpression	count >= sizeof ( buf )		699201	0		>=			
ANR	699247	Identifier	count		699201	0					
ANR	699248	SizeofExpression	sizeof ( buf )		699201	1					
ANR	699249	Sizeof	sizeof		699201	0					
ANR	699250	SizeofOperand	buf		699201	1					
ANR	699251	RelationalExpression	count < 0		699201	1		<			
ANR	699252	Identifier	count		699201	0					
ANR	699253	PrimaryExpression	0		699201	1					
ANR	699254	CompoundStatement		8:44:189:189	699201	1					
ANR	699255	ExpressionStatement	"outwrite ( mem , buf , sizeof ( buf ) - 1 )"	67:8:1878:1913	699201	0	True				
ANR	699256	CallExpression	"outwrite ( mem , buf , sizeof ( buf ) - 1 )"		699201	0					
ANR	699257	Callee	outwrite		699201	0					
ANR	699258	Identifier	outwrite		699201	0					
ANR	699259	ArgumentList	mem		699201	1					
ANR	699260	Argument	mem		699201	0					
ANR	699261	Identifier	mem		699201	0					
ANR	699262	Argument	buf		699201	1					
ANR	699263	Identifier	buf		699201	0					
ANR	699264	Argument	sizeof ( buf ) - 1		699201	2					
ANR	699265	AdditiveExpression	sizeof ( buf ) - 1		699201	0		-			
ANR	699266	SizeofExpression	sizeof ( buf )		699201	0					
ANR	699267	Sizeof	sizeof		699201	0					
ANR	699268	SizeofOperand	buf		699201	1					
ANR	699269	PrimaryExpression	1		699201	1					
ANR	699270	ExpressionStatement	"outwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"	68:8:1923:1978	699201	1	True				
ANR	699271	CallExpression	"outwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"		699201	0					
ANR	699272	Callee	outwrite		699201	0					
ANR	699273	Identifier	outwrite		699201	0					
ANR	699274	ArgumentList	mem		699201	1					
ANR	699275	Argument	mem		699201	0					
ANR	699276	Identifier	mem		699201	0					
ANR	699277	Argument	msg_truncated		699201	1					
ANR	699278	Identifier	msg_truncated		699201	0					
ANR	699279	Argument	sizeof ( msg_truncated ) - 1		699201	2					
ANR	699280	AdditiveExpression	sizeof ( msg_truncated ) - 1		699201	0		-			
ANR	699281	SizeofExpression	sizeof ( msg_truncated )		699201	0					
ANR	699282	Sizeof	sizeof		699201	0					
ANR	699283	SizeofOperand	msg_truncated		699201	1					
ANR	699284	PrimaryExpression	1		699201	1					
ANR	699285	ElseStatement	else		699201	0					
ANR	699286	CompoundStatement		11:11:330:330	699201	0					
ANR	699287	ExpressionStatement	"outwrite ( mem , buf , count )"	70:8:2001:2026	699201	0	True				
ANR	699288	CallExpression	"outwrite ( mem , buf , count )"		699201	0					
ANR	699289	Callee	outwrite		699201	0					
ANR	699290	Identifier	outwrite		699201	0					
ANR	699291	ArgumentList	mem		699201	1					
ANR	699292	Argument	mem		699201	0					
ANR	699293	Identifier	mem		699201	0					
ANR	699294	Argument	buf		699201	1					
ANR	699295	Identifier	buf		699201	0					
ANR	699296	Argument	count		699201	2					
ANR	699297	Identifier	count		699201	0					
ANR	699298	ExpressionStatement	va_end ( args )	72:4:2038:2050	699201	6	True				
ANR	699299	CallExpression	va_end ( args )		699201	0					
ANR	699300	Callee	va_end		699201	0					
ANR	699301	Identifier	va_end		699201	0					
ANR	699302	ArgumentList	args		699201	1					
ANR	699303	Argument	args		699201	0					
ANR	699304	Identifier	args		699201	0					
ANR	699305	ReturnStatement	return count ;	73:4:2056:2068	699201	7	True				
ANR	699306	Identifier	count		699201	0					
ANR	699307	ReturnType	int		699201	1					
ANR	699308	Identifier	outprintf		699201	2					
ANR	699309	ParameterList	"const gs_memory_t * mem , const char * fmt"		699201	3					
ANR	699310	Parameter	const gs_memory_t * mem	58:14:1614:1635	699201	0	True				
ANR	699311	ParameterType	const gs_memory_t *		699201	0					
ANR	699312	Identifier	mem		699201	1					
ANR	699313	Parameter	const char * fmt	58:38:1638:1652	699201	1	True				
ANR	699314	ParameterType	const char *		699201	0					
ANR	699315	Identifier	fmt		699201	1					
ANR	699316	CFGEntryNode	ENTRY		699201		True				
ANR	699317	CFGExitNode	EXIT		699201		True				
ANR	699318	Symbol	args		699201						
ANR	699319	Symbol	buf		699201						
ANR	699320	Symbol	msg_truncated		699201						
ANR	699321	Symbol	mem		699201						
ANR	699322	Symbol	count		699201						
ANR	699323	Symbol	fmt		699201						
ANR	699324	Symbol	vsnprintf		699201						
ANR	699325	Function	errprintf_nomem	77:0:2095:2550							
ANR	699326	FunctionDef	errprintf_nomem (const char * fmt)		699325	0					
ANR	699327	CompoundStatement		78:0:2137:2550	699325	0					
ANR	699328	IdentifierDeclStatement	int count ;	79:4:2143:2152	699325	0	True				
ANR	699329	IdentifierDecl	count		699325	0					
ANR	699330	IdentifierDeclType	int		699325	0					
ANR	699331	Identifier	count		699325	1					
ANR	699332	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	80:4:2158:2185	699325	1	True				
ANR	699333	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		699325	0					
ANR	699334	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		699325	0					
ANR	699335	Identifier	buf		699325	1					
ANR	699336	Identifier	PRINTF_BUF_LENGTH		699325	2					
ANR	699337	IdentifierDeclStatement	va_list args ;	81:4:2191:2203	699325	2	True				
ANR	699338	IdentifierDecl	args		699325	0					
ANR	699339	IdentifierDeclType	va_list		699325	0					
ANR	699340	Identifier	args		699325	1					
ANR	699341	ExpressionStatement	"va_start ( args , fmt )"	83:4:2210:2229	699325	3	True				
ANR	699342	CallExpression	"va_start ( args , fmt )"		699325	0					
ANR	699343	Callee	va_start		699325	0					
ANR	699344	Identifier	va_start		699325	0					
ANR	699345	ArgumentList	args		699325	1					
ANR	699346	Argument	args		699325	0					
ANR	699347	Identifier	args		699325	0					
ANR	699348	Argument	fmt		699325	1					
ANR	699349	Identifier	fmt		699325	0					
ANR	699350	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	84:4:2235:2281	699325	4	True				
ANR	699351	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699325	0		=			
ANR	699352	Identifier	count		699325	0					
ANR	699353	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699325	1					
ANR	699354	Callee	vsnprintf		699325	0					
ANR	699355	Identifier	vsnprintf		699325	0					
ANR	699356	ArgumentList	buf		699325	1					
ANR	699357	Argument	buf		699325	0					
ANR	699358	Identifier	buf		699325	0					
ANR	699359	Argument	sizeof ( buf )		699325	1					
ANR	699360	SizeofExpression	sizeof ( buf )		699325	0					
ANR	699361	Sizeof	sizeof		699325	0					
ANR	699362	SizeofOperand	buf		699325	1					
ANR	699363	Argument	fmt		699325	2					
ANR	699364	Identifier	fmt		699325	0					
ANR	699365	Argument	args		699325	3					
ANR	699366	Identifier	args		699325	0					
ANR	699367	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		699325	5					
ANR	699368	Condition	count >= sizeof ( buf ) || count < 0	85:8:2291:2323	699325	0	True				
ANR	699369	OrExpression	count >= sizeof ( buf ) || count < 0		699325	0		||			
ANR	699370	RelationalExpression	count >= sizeof ( buf )		699325	0		>=			
ANR	699371	Identifier	count		699325	0					
ANR	699372	SizeofExpression	sizeof ( buf )		699325	1					
ANR	699373	Sizeof	sizeof		699325	0					
ANR	699374	SizeofOperand	buf		699325	1					
ANR	699375	RelationalExpression	count < 0		699325	1		<			
ANR	699376	Identifier	count		699325	0					
ANR	699377	PrimaryExpression	0		699325	1					
ANR	699378	CompoundStatement		8:44:189:189	699325	1					
ANR	699379	ExpressionStatement	"errwrite_nomem ( buf , sizeof ( buf ) - 1 )"	86:8:2355:2391	699325	0	True				
ANR	699380	CallExpression	"errwrite_nomem ( buf , sizeof ( buf ) - 1 )"		699325	0					
ANR	699381	Callee	errwrite_nomem		699325	0					
ANR	699382	Identifier	errwrite_nomem		699325	0					
ANR	699383	ArgumentList	buf		699325	1					
ANR	699384	Argument	buf		699325	0					
ANR	699385	Identifier	buf		699325	0					
ANR	699386	Argument	sizeof ( buf ) - 1		699325	1					
ANR	699387	AdditiveExpression	sizeof ( buf ) - 1		699325	0		-			
ANR	699388	SizeofExpression	sizeof ( buf )		699325	0					
ANR	699389	Sizeof	sizeof		699325	0					
ANR	699390	SizeofOperand	buf		699325	1					
ANR	699391	PrimaryExpression	1		699325	1					
ANR	699392	ExpressionStatement	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"	87:8:2401:2457	699325	1	True				
ANR	699393	CallExpression	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"		699325	0					
ANR	699394	Callee	errwrite_nomem		699325	0					
ANR	699395	Identifier	errwrite_nomem		699325	0					
ANR	699396	ArgumentList	msg_truncated		699325	1					
ANR	699397	Argument	msg_truncated		699325	0					
ANR	699398	Identifier	msg_truncated		699325	0					
ANR	699399	Argument	sizeof ( msg_truncated ) - 1		699325	1					
ANR	699400	AdditiveExpression	sizeof ( msg_truncated ) - 1		699325	0		-			
ANR	699401	SizeofExpression	sizeof ( msg_truncated )		699325	0					
ANR	699402	Sizeof	sizeof		699325	0					
ANR	699403	SizeofOperand	msg_truncated		699325	1					
ANR	699404	PrimaryExpression	1		699325	1					
ANR	699405	ElseStatement	else		699325	0					
ANR	699406	CompoundStatement		11:11:332:332	699325	0					
ANR	699407	ExpressionStatement	"errwrite_nomem ( buf , count )"	89:8:2480:2506	699325	0	True				
ANR	699408	CallExpression	"errwrite_nomem ( buf , count )"		699325	0					
ANR	699409	Callee	errwrite_nomem		699325	0					
ANR	699410	Identifier	errwrite_nomem		699325	0					
ANR	699411	ArgumentList	buf		699325	1					
ANR	699412	Argument	buf		699325	0					
ANR	699413	Identifier	buf		699325	0					
ANR	699414	Argument	count		699325	1					
ANR	699415	Identifier	count		699325	0					
ANR	699416	ExpressionStatement	va_end ( args )	91:4:2518:2530	699325	6	True				
ANR	699417	CallExpression	va_end ( args )		699325	0					
ANR	699418	Callee	va_end		699325	0					
ANR	699419	Identifier	va_end		699325	0					
ANR	699420	ArgumentList	args		699325	1					
ANR	699421	Argument	args		699325	0					
ANR	699422	Identifier	args		699325	0					
ANR	699423	ReturnStatement	return count ;	92:4:2536:2548	699325	7	True				
ANR	699424	Identifier	count		699325	0					
ANR	699425	ReturnType	int		699325	1					
ANR	699426	Identifier	errprintf_nomem		699325	2					
ANR	699427	ParameterList	const char * fmt		699325	3					
ANR	699428	Parameter	const char * fmt	77:20:2115:2129	699325	0	True				
ANR	699429	ParameterType	const char *		699325	0					
ANR	699430	Identifier	fmt		699325	1					
ANR	699431	CFGEntryNode	ENTRY		699325		True				
ANR	699432	CFGExitNode	EXIT		699325		True				
ANR	699433	Symbol	args		699325						
ANR	699434	Symbol	buf		699325						
ANR	699435	Symbol	msg_truncated		699325						
ANR	699436	Symbol	count		699325						
ANR	699437	Symbol	fmt		699325						
ANR	699438	Symbol	vsnprintf		699325						
ANR	699439	Function	errprintf	96:0:2560:3030							
ANR	699440	FunctionDef	"errprintf (const gs_memory_t * mem , const char * fmt)"		699439	0					
ANR	699441	CompoundStatement		97:0:2620:3030	699439	0					
ANR	699442	IdentifierDeclStatement	int count ;	98:4:2626:2635	699439	0	True				
ANR	699443	IdentifierDecl	count		699439	0					
ANR	699444	IdentifierDeclType	int		699439	0					
ANR	699445	Identifier	count		699439	1					
ANR	699446	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	99:4:2641:2668	699439	1	True				
ANR	699447	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		699439	0					
ANR	699448	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		699439	0					
ANR	699449	Identifier	buf		699439	1					
ANR	699450	Identifier	PRINTF_BUF_LENGTH		699439	2					
ANR	699451	IdentifierDeclStatement	va_list args ;	100:4:2674:2686	699439	2	True				
ANR	699452	IdentifierDecl	args		699439	0					
ANR	699453	IdentifierDeclType	va_list		699439	0					
ANR	699454	Identifier	args		699439	1					
ANR	699455	ExpressionStatement	"va_start ( args , fmt )"	102:4:2693:2712	699439	3	True				
ANR	699456	CallExpression	"va_start ( args , fmt )"		699439	0					
ANR	699457	Callee	va_start		699439	0					
ANR	699458	Identifier	va_start		699439	0					
ANR	699459	ArgumentList	args		699439	1					
ANR	699460	Argument	args		699439	0					
ANR	699461	Identifier	args		699439	0					
ANR	699462	Argument	fmt		699439	1					
ANR	699463	Identifier	fmt		699439	0					
ANR	699464	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	103:4:2718:2764	699439	4	True				
ANR	699465	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699439	0		=			
ANR	699466	Identifier	count		699439	0					
ANR	699467	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		699439	1					
ANR	699468	Callee	vsnprintf		699439	0					
ANR	699469	Identifier	vsnprintf		699439	0					
ANR	699470	ArgumentList	buf		699439	1					
ANR	699471	Argument	buf		699439	0					
ANR	699472	Identifier	buf		699439	0					
ANR	699473	Argument	sizeof ( buf )		699439	1					
ANR	699474	SizeofExpression	sizeof ( buf )		699439	0					
ANR	699475	Sizeof	sizeof		699439	0					
ANR	699476	SizeofOperand	buf		699439	1					
ANR	699477	Argument	fmt		699439	2					
ANR	699478	Identifier	fmt		699439	0					
ANR	699479	Argument	args		699439	3					
ANR	699480	Identifier	args		699439	0					
ANR	699481	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		699439	5					
ANR	699482	Condition	count >= sizeof ( buf ) || count < 0	104:8:2774:2806	699439	0	True				
ANR	699483	OrExpression	count >= sizeof ( buf ) || count < 0		699439	0		||			
ANR	699484	RelationalExpression	count >= sizeof ( buf )		699439	0		>=			
ANR	699485	Identifier	count		699439	0					
ANR	699486	SizeofExpression	sizeof ( buf )		699439	1					
ANR	699487	Sizeof	sizeof		699439	0					
ANR	699488	SizeofOperand	buf		699439	1					
ANR	699489	RelationalExpression	count < 0		699439	1		<			
ANR	699490	Identifier	count		699439	0					
ANR	699491	PrimaryExpression	0		699439	1					
ANR	699492	CompoundStatement		8:44:189:189	699439	1					
ANR	699493	ExpressionStatement	"errwrite ( mem , buf , sizeof ( buf ) - 1 )"	105:8:2838:2873	699439	0	True				
ANR	699494	CallExpression	"errwrite ( mem , buf , sizeof ( buf ) - 1 )"		699439	0					
ANR	699495	Callee	errwrite		699439	0					
ANR	699496	Identifier	errwrite		699439	0					
ANR	699497	ArgumentList	mem		699439	1					
ANR	699498	Argument	mem		699439	0					
ANR	699499	Identifier	mem		699439	0					
ANR	699500	Argument	buf		699439	1					
ANR	699501	Identifier	buf		699439	0					
ANR	699502	Argument	sizeof ( buf ) - 1		699439	2					
ANR	699503	AdditiveExpression	sizeof ( buf ) - 1		699439	0		-			
ANR	699504	SizeofExpression	sizeof ( buf )		699439	0					
ANR	699505	Sizeof	sizeof		699439	0					
ANR	699506	SizeofOperand	buf		699439	1					
ANR	699507	PrimaryExpression	1		699439	1					
ANR	699508	ExpressionStatement	"errwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"	106:8:2883:2938	699439	1	True				
ANR	699509	CallExpression	"errwrite ( mem , msg_truncated , sizeof ( msg_truncated ) - 1 )"		699439	0					
ANR	699510	Callee	errwrite		699439	0					
ANR	699511	Identifier	errwrite		699439	0					
ANR	699512	ArgumentList	mem		699439	1					
ANR	699513	Argument	mem		699439	0					
ANR	699514	Identifier	mem		699439	0					
ANR	699515	Argument	msg_truncated		699439	1					
ANR	699516	Identifier	msg_truncated		699439	0					
ANR	699517	Argument	sizeof ( msg_truncated ) - 1		699439	2					
ANR	699518	AdditiveExpression	sizeof ( msg_truncated ) - 1		699439	0		-			
ANR	699519	SizeofExpression	sizeof ( msg_truncated )		699439	0					
ANR	699520	Sizeof	sizeof		699439	0					
ANR	699521	SizeofOperand	msg_truncated		699439	1					
ANR	699522	PrimaryExpression	1		699439	1					
ANR	699523	ElseStatement	else		699439	0					
ANR	699524	CompoundStatement		11:11:330:330	699439	0					
ANR	699525	ExpressionStatement	"errwrite ( mem , buf , count )"	108:8:2961:2986	699439	0	True				
ANR	699526	CallExpression	"errwrite ( mem , buf , count )"		699439	0					
ANR	699527	Callee	errwrite		699439	0					
ANR	699528	Identifier	errwrite		699439	0					
ANR	699529	ArgumentList	mem		699439	1					
ANR	699530	Argument	mem		699439	0					
ANR	699531	Identifier	mem		699439	0					
ANR	699532	Argument	buf		699439	1					
ANR	699533	Identifier	buf		699439	0					
ANR	699534	Argument	count		699439	2					
ANR	699535	Identifier	count		699439	0					
ANR	699536	ExpressionStatement	va_end ( args )	110:4:2998:3010	699439	6	True				
ANR	699537	CallExpression	va_end ( args )		699439	0					
ANR	699538	Callee	va_end		699439	0					
ANR	699539	Identifier	va_end		699439	0					
ANR	699540	ArgumentList	args		699439	1					
ANR	699541	Argument	args		699439	0					
ANR	699542	Identifier	args		699439	0					
ANR	699543	ReturnStatement	return count ;	111:4:3016:3028	699439	7	True				
ANR	699544	Identifier	count		699439	0					
ANR	699545	ReturnType	int		699439	1					
ANR	699546	Identifier	errprintf		699439	2					
ANR	699547	ParameterList	"const gs_memory_t * mem , const char * fmt"		699439	3					
ANR	699548	Parameter	const gs_memory_t * mem	96:14:2574:2595	699439	0	True				
ANR	699549	ParameterType	const gs_memory_t *		699439	0					
ANR	699550	Identifier	mem		699439	1					
ANR	699551	Parameter	const char * fmt	96:38:2598:2612	699439	1	True				
ANR	699552	ParameterType	const char *		699439	0					
ANR	699553	Identifier	fmt		699439	1					
ANR	699554	CFGEntryNode	ENTRY		699439		True				
ANR	699555	CFGExitNode	EXIT		699439		True				
ANR	699556	Symbol	args		699439						
ANR	699557	Symbol	buf		699439						
ANR	699558	Symbol	msg_truncated		699439						
ANR	699559	Symbol	mem		699439						
ANR	699560	Symbol	count		699439						
ANR	699561	Symbol	fmt		699439						
ANR	699562	Symbol	vsnprintf		699439						
ANR	699563	DeclStmt									
ANR	699564	Decl							char	char [ 128 ]	gs_debug
ANR	699565	Function	gs_debug_c	125:0:3494:3787							
ANR	699566	FunctionDef	gs_debug_c (int c)		699565	0					
ANR	699567	CompoundStatement		127:0:3517:3787	699565	0					
ANR	699568	IdentifierDeclStatement	bool ret = gs_debug [ c ] ;	128:4:3523:3545	699565	0	True				
ANR	699569	IdentifierDecl	ret = gs_debug [ c ]		699565	0					
ANR	699570	IdentifierDeclType	bool		699565	0					
ANR	699571	Identifier	ret		699565	1					
ANR	699572	AssignmentExpression	ret = gs_debug [ c ]		699565	2		=			
ANR	699573	Identifier	ret		699565	0					
ANR	699574	ArrayIndexing	gs_debug [ c ]		699565	1					
ANR	699575	Identifier	gs_debug		699565	0					
ANR	699576	Identifier	c		699565	1					
ANR	699577	ExpressionStatement	c = gs_debug_flag_implied_by [ c ]	131:4:3610:3641	699565	1	True				
ANR	699578	AssignmentExpression	c = gs_debug_flag_implied_by [ c ]		699565	0		=			
ANR	699579	Identifier	c		699565	0					
ANR	699580	ArrayIndexing	gs_debug_flag_implied_by [ c ]		699565	1					
ANR	699581	Identifier	gs_debug_flag_implied_by		699565	0					
ANR	699582	Identifier	c		699565	1					
ANR	699583	IfStatement	if ( c == 0 )		699565	2					
ANR	699584	Condition	c == 0	132:8:3651:3656	699565	0	True				
ANR	699585	EqualityExpression	c == 0		699565	0		==			
ANR	699586	Identifier	c		699565	0					
ANR	699587	PrimaryExpression	0		699565	1					
ANR	699588	ReturnStatement	return ret ;	133:8:3667:3677	699565	1	True				
ANR	699589	Identifier	ret		699565	0					
ANR	699590	DoStatement	do		699565	3					
ANR	699591	CompoundStatement		9:7:169:169	699565	0					
ANR	699592	ExpressionStatement	ret |= gs_debug [ c ]	136:8:3697:3715	699565	0	True				
ANR	699593	AssignmentExpression	ret |= gs_debug [ c ]		699565	0		|=			
ANR	699594	Identifier	ret		699565	0					
ANR	699595	ArrayIndexing	gs_debug [ c ]		699565	1					
ANR	699596	Identifier	gs_debug		699565	0					
ANR	699597	Identifier	c		699565	1					
ANR	699598	Condition	( c = gs_debug_flag_implied_by [ c ] ) != 0	137:13:3730:3767	699565	1	True				
ANR	699599	EqualityExpression	( c = gs_debug_flag_implied_by [ c ] ) != 0		699565	0		!=			
ANR	699600	AssignmentExpression	c = gs_debug_flag_implied_by [ c ]		699565	0		=			
ANR	699601	Identifier	c		699565	0					
ANR	699602	ArrayIndexing	gs_debug_flag_implied_by [ c ]		699565	1					
ANR	699603	Identifier	gs_debug_flag_implied_by		699565	0					
ANR	699604	Identifier	c		699565	1					
ANR	699605	PrimaryExpression	0		699565	1					
ANR	699606	ReturnStatement	return ret ;	138:4:3775:3785	699565	4	True				
ANR	699607	Identifier	ret		699565	0					
ANR	699608	ReturnType	bool		699565	1					
ANR	699609	Identifier	gs_debug_c		699565	2					
ANR	699610	ParameterList	int c		699565	3					
ANR	699611	Parameter	int c	126:11:3510:3514	699565	0	True				
ANR	699612	ParameterType	int		699565	0					
ANR	699613	Identifier	c		699565	1					
ANR	699614	CFGEntryNode	ENTRY		699565		True				
ANR	699615	CFGExitNode	EXIT		699565		True				
ANR	699616	Symbol	ret		699565						
ANR	699617	Symbol	gs_debug		699565						
ANR	699618	Symbol	c		699565						
ANR	699619	Symbol	* gs_debug_flag_implied_by		699565						
ANR	699620	Symbol	* gs_debug		699565						
ANR	699621	Symbol	gs_debug_flag_implied_by		699565						
ANR	699622	Symbol	* c		699565						
ANR	699623	Function	dprintf_file_tail	151:0:4250:4506							
ANR	699624	FunctionDef	dprintf_file_tail (const char * file)		699623	0					
ANR	699625	CompoundStatement		153:0:4306:4506	699623	0					
ANR	699626	IdentifierDeclStatement	const char * tail = file + strlen ( file ) ;	154:4:4312:4350	699623	0	True				
ANR	699627	IdentifierDecl	* tail = file + strlen ( file )		699623	0					
ANR	699628	IdentifierDeclType	const char *		699623	0					
ANR	699629	Identifier	tail		699623	1					
ANR	699630	AssignmentExpression	* tail = file + strlen ( file )		699623	2		=			
ANR	699631	Identifier	tail		699623	0					
ANR	699632	AdditiveExpression	file + strlen ( file )		699623	1		+			
ANR	699633	Identifier	file		699623	0					
ANR	699634	CallExpression	strlen ( file )		699623	1					
ANR	699635	Callee	strlen		699623	0					
ANR	699636	Identifier	strlen		699623	0					
ANR	699637	ArgumentList	file		699623	1					
ANR	699638	Argument	file		699623	0					
ANR	699639	Identifier	file		699623	0					
ANR	699640	WhileStatement	while ( tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' ) )		699623	1					
ANR	699641	Condition	tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' )	156:11:4364:4461	699623	0	True				
ANR	699642	AndExpression	tail > file && ( isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_' )		699623	0		&&			
ANR	699643	RelationalExpression	tail > file		699623	0		>			
ANR	699644	Identifier	tail		699623	0					
ANR	699645	Identifier	file		699623	1					
ANR	699646	OrExpression	isalnum ( ( unsigned char ) tail [ - 1 ] ) || tail [ - 1 ] == '.' || tail [ - 1 ] == '_'		699623	1		||			
ANR	699647	CallExpression	isalnum ( ( unsigned char ) tail [ - 1 ] )		699623	0					
ANR	699648	Callee	isalnum		699623	0					
ANR	699649	Identifier	isalnum		699623	0					
ANR	699650	ArgumentList	( unsigned char ) tail [ - 1 ]		699623	1					
ANR	699651	Argument	( unsigned char ) tail [ - 1 ]		699623	0					
ANR	699652	CastExpression	( unsigned char ) tail [ - 1 ]		699623	0					
ANR	699653	CastTarget	unsigned char		699623	0					
ANR	699654	ArrayIndexing	tail [ - 1 ]		699623	1					
ANR	699655	Identifier	tail		699623	0					
ANR	699656	UnaryOperationExpression	- 1		699623	1					
ANR	699657	UnaryOperator	-		699623	0					
ANR	699658	PrimaryExpression	1		699623	1					
ANR	699659	OrExpression	tail [ - 1 ] == '.' || tail [ - 1 ] == '_'		699623	1		||			
ANR	699660	EqualityExpression	tail [ - 1 ] == '.'		699623	0		==			
ANR	699661	ArrayIndexing	tail [ - 1 ]		699623	0					
ANR	699662	Identifier	tail		699623	0					
ANR	699663	UnaryOperationExpression	- 1		699623	1					
ANR	699664	UnaryOperator	-		699623	0					
ANR	699665	PrimaryExpression	1		699623	1					
ANR	699666	PrimaryExpression	'.'		699623	1					
ANR	699667	EqualityExpression	tail [ - 1 ] == '_'		699623	1		==			
ANR	699668	ArrayIndexing	tail [ - 1 ]		699623	0					
ANR	699669	Identifier	tail		699623	0					
ANR	699670	UnaryOperationExpression	- 1		699623	1					
ANR	699671	UnaryOperator	-		699623	0					
ANR	699672	PrimaryExpression	1		699623	1					
ANR	699673	PrimaryExpression	'_'		699623	1					
ANR	699674	ExpressionStatement	-- tail	159:8:4481:4487	699623	1	True				
ANR	699675	UnaryExpression	-- tail		699623	0					
ANR	699676	IncDec	--		699623	0					
ANR	699677	Identifier	tail		699623	1					
ANR	699678	ReturnStatement	return tail ;	160:4:4493:4504	699623	2	True				
ANR	699679	Identifier	tail		699623	0					
ANR	699680	ReturnType	static const char *		699623	1					
ANR	699681	Identifier	dprintf_file_tail		699623	2					
ANR	699682	ParameterList	const char * file		699623	3					
ANR	699683	Parameter	const char * file	152:18:4288:4303	699623	0	True				
ANR	699684	ParameterType	const char *		699623	0					
ANR	699685	Identifier	file		699623	1					
ANR	699686	CFGEntryNode	ENTRY		699623		True				
ANR	699687	CFGExitNode	EXIT		699623		True				
ANR	699688	Symbol	strlen		699623						
ANR	699689	Symbol	* tail		699623						
ANR	699690	Symbol	file		699623						
ANR	699691	Symbol	isalnum		699623						
ANR	699692	Symbol	tail		699623						
ANR	699693	Function	dflush	163:0:4530:4572							
ANR	699694	FunctionDef	dflush ()		699693	0					
ANR	699695	CompoundStatement		165:0:4548:4572	699693	0					
ANR	699696	ExpressionStatement	errflush_nomem ( )	166:4:4554:4570	699693	0	True				
ANR	699697	CallExpression	errflush_nomem ( )		699693	0					
ANR	699698	Callee	errflush_nomem		699693	0					
ANR	699699	Identifier	errflush_nomem		699693	0					
ANR	699700	ArgumentList			699693	1					
ANR	699701	ReturnType	void		699693	1					
ANR	699702	Identifier	dflush		699693	2					
ANR	699703	ParameterList			699693	3					
ANR	699704	CFGEntryNode	ENTRY		699693		True				
ANR	699705	CFGExitNode	EXIT		699693		True				
ANR	699706	Function	dprintf_file_and_line	169:0:4633:4803							
ANR	699707	FunctionDef	"dprintf_file_and_line (const char * file , int line)"		699706	0					
ANR	699708	CompoundStatement		171:0:4688:4803	699706	0					
ANR	699709	IfStatement	if ( gs_debug [ '/' ] )		699706	0					
ANR	699710	Condition	gs_debug [ '/' ]	172:8:4698:4710	699706	0	True				
ANR	699711	ArrayIndexing	gs_debug [ '/' ]		699706	0					
ANR	699712	Identifier	gs_debug		699706	0					
ANR	699713	PrimaryExpression	'/'		699706	1					
ANR	699714	ExpressionStatement	"dpf ( dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"	173:8:4721:4801	699706	1	True				
ANR	699715	CallExpression	"dpf ( dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"		699706	0					
ANR	699716	Callee	dpf		699706	0					
ANR	699717	Identifier	dpf		699706	0					
ANR	699718	ArgumentList	dprintf_file_and_line_format		699706	1					
ANR	699719	Argument	dprintf_file_and_line_format		699706	0					
ANR	699720	Identifier	dprintf_file_and_line_format		699706	0					
ANR	699721	Argument	dprintf_file_tail ( file )		699706	1					
ANR	699722	CallExpression	dprintf_file_tail ( file )		699706	0					
ANR	699723	Callee	dprintf_file_tail		699706	0					
ANR	699724	Identifier	dprintf_file_tail		699706	0					
ANR	699725	ArgumentList	file		699706	1					
ANR	699726	Argument	file		699706	0					
ANR	699727	Identifier	file		699706	0					
ANR	699728	Argument	line		699706	2					
ANR	699729	Identifier	line		699706	0					
ANR	699730	ReturnType	void		699706	1					
ANR	699731	Identifier	dprintf_file_and_line		699706	2					
ANR	699732	ParameterList	"const char * file , int line"		699706	3					
ANR	699733	Parameter	const char * file	170:22:4660:4675	699706	0	True				
ANR	699734	ParameterType	const char *		699706	0					
ANR	699735	Identifier	file		699706	1					
ANR	699736	Parameter	int line	170:40:4678:4685	699706	1	True				
ANR	699737	ParameterType	int		699706	0					
ANR	699738	Identifier	line		699706	1					
ANR	699739	CFGEntryNode	ENTRY		699706		True				
ANR	699740	CFGExitNode	EXIT		699706		True				
ANR	699741	Symbol	gs_debug		699706						
ANR	699742	Symbol	file		699706						
ANR	699743	Symbol	line		699706						
ANR	699744	Symbol	* gs_debug		699706						
ANR	699745	Symbol	dprintf_file_tail		699706						
ANR	699746	Symbol	dprintf_file_and_line_format		699706						
ANR	699747	Function	lprintf_file_and_line	176:0:4805:4895							
ANR	699748	FunctionDef	"lprintf_file_and_line (const char * file , int line)"		699747	0					
ANR	699749	CompoundStatement		178:0:4860:4895	699747	0					
ANR	699750	ExpressionStatement	"epf ( ""%s(%d): "" , file , line )"	179:4:4866:4893	699747	0	True				
ANR	699751	CallExpression	"epf ( ""%s(%d): "" , file , line )"		699747	0					
ANR	699752	Callee	epf		699747	0					
ANR	699753	Identifier	epf		699747	0					
ANR	699754	ArgumentList	"""%s(%d): """		699747	1					
ANR	699755	Argument	"""%s(%d): """		699747	0					
ANR	699756	PrimaryExpression	"""%s(%d): """		699747	0					
ANR	699757	Argument	file		699747	1					
ANR	699758	Identifier	file		699747	0					
ANR	699759	Argument	line		699747	2					
ANR	699760	Identifier	line		699747	0					
ANR	699761	ReturnType	void		699747	1					
ANR	699762	Identifier	lprintf_file_and_line		699747	2					
ANR	699763	ParameterList	"const char * file , int line"		699747	3					
ANR	699764	Parameter	const char * file	177:22:4832:4847	699747	0	True				
ANR	699765	ParameterType	const char *		699747	0					
ANR	699766	Identifier	file		699747	1					
ANR	699767	Parameter	int line	177:40:4850:4857	699747	1	True				
ANR	699768	ParameterType	int		699747	0					
ANR	699769	Identifier	line		699747	1					
ANR	699770	CFGEntryNode	ENTRY		699747		True				
ANR	699771	CFGExitNode	EXIT		699747		True				
ANR	699772	Symbol	file		699747						
ANR	699773	Symbol	line		699747						
ANR	699774	Function	dprintf_file_only	182:0:4903:5033							
ANR	699775	FunctionDef	dprintf_file_only (const char * file)		699774	0					
ANR	699776	CompoundStatement		184:0:4944:5033	699774	0					
ANR	699777	IfStatement	if ( gs_debug [ '/' ] )		699774	0					
ANR	699778	Condition	gs_debug [ '/' ]	185:8:4954:4966	699774	0	True				
ANR	699779	ArrayIndexing	gs_debug [ '/' ]		699774	0					
ANR	699780	Identifier	gs_debug		699774	0					
ANR	699781	PrimaryExpression	'/'		699774	1					
ANR	699782	ExpressionStatement	"dpf ( dprintf_file_only_format , dprintf_file_tail ( file ) )"	186:8:4977:5031	699774	1	True				
ANR	699783	CallExpression	"dpf ( dprintf_file_only_format , dprintf_file_tail ( file ) )"		699774	0					
ANR	699784	Callee	dpf		699774	0					
ANR	699785	Identifier	dpf		699774	0					
ANR	699786	ArgumentList	dprintf_file_only_format		699774	1					
ANR	699787	Argument	dprintf_file_only_format		699774	0					
ANR	699788	Identifier	dprintf_file_only_format		699774	0					
ANR	699789	Argument	dprintf_file_tail ( file )		699774	1					
ANR	699790	CallExpression	dprintf_file_tail ( file )		699774	0					
ANR	699791	Callee	dprintf_file_tail		699774	0					
ANR	699792	Identifier	dprintf_file_tail		699774	0					
ANR	699793	ArgumentList	file		699774	1					
ANR	699794	Argument	file		699774	0					
ANR	699795	Identifier	file		699774	0					
ANR	699796	ReturnType	void		699774	1					
ANR	699797	Identifier	dprintf_file_only		699774	2					
ANR	699798	ParameterList	const char * file		699774	3					
ANR	699799	Parameter	const char * file	183:18:4926:4941	699774	0	True				
ANR	699800	ParameterType	const char *		699774	0					
ANR	699801	Identifier	file		699774	1					
ANR	699802	CFGEntryNode	ENTRY		699774		True				
ANR	699803	CFGExitNode	EXIT		699774		True				
ANR	699804	Symbol	gs_debug		699774						
ANR	699805	Symbol	file		699774						
ANR	699806	Symbol	dprintf_file_only_format		699774						
ANR	699807	Symbol	* gs_debug		699774						
ANR	699808	Symbol	dprintf_file_tail		699774						
ANR	699809	Function	lprintf_file_only	188:0:5035:5114							
ANR	699810	FunctionDef	"lprintf_file_only (FILE * f , const char * file)"		699809	0					
ANR	699811	CompoundStatement		190:0:5086:5114	699809	0					
ANR	699812	ExpressionStatement	"epf ( ""%s(?): "" , file )"	191:4:5092:5112	699809	0	True				
ANR	699813	CallExpression	"epf ( ""%s(?): "" , file )"		699809	0					
ANR	699814	Callee	epf		699809	0					
ANR	699815	Identifier	epf		699809	0					
ANR	699816	ArgumentList	"""%s(?): """		699809	1					
ANR	699817	Argument	"""%s(?): """		699809	0					
ANR	699818	PrimaryExpression	"""%s(?): """		699809	0					
ANR	699819	Argument	file		699809	1					
ANR	699820	Identifier	file		699809	0					
ANR	699821	ReturnType	void		699809	1					
ANR	699822	Identifier	lprintf_file_only		699809	2					
ANR	699823	ParameterList	"FILE * f , const char * file"		699809	3					
ANR	699824	Parameter	FILE * f	189:18:5058:5065	699809	0	True				
ANR	699825	ParameterType	FILE *		699809	0					
ANR	699826	Identifier	f		699809	1					
ANR	699827	Parameter	const char * file	189:28:5068:5083	699809	1	True				
ANR	699828	ParameterType	const char *		699809	0					
ANR	699829	Identifier	file		699809	1					
ANR	699830	CFGEntryNode	ENTRY		699809		True				
ANR	699831	CFGExitNode	EXIT		699809		True				
ANR	699832	Symbol	file		699809						
ANR	699833	Symbol	f		699809						
ANR	699834	Function	eprintf_program_ident	194:0:5123:5486							
ANR	699835	FunctionDef	"eprintf_program_ident (const char * program_name , long revision_number)"		699834	0					
ANR	699836	CompoundStatement		197:0:5220:5486	699834	0					
ANR	699837	IfStatement	if ( program_name )		699834	0					
ANR	699838	Condition	program_name	198:8:5230:5241	699834	0	True				
ANR	699839	Identifier	program_name		699834	0					
ANR	699840	CompoundStatement		2:22:23:23	699834	1					
ANR	699841	ExpressionStatement	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	199:8:5254:5305	699834	0	True				
ANR	699842	CallExpression	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		699834	0					
ANR	699843	Callee	epf		699834	0					
ANR	699844	Identifier	epf		699834	0					
ANR	699845	ArgumentList	"revision_number ? ""%s "" : ""%s"""		699834	1					
ANR	699846	Argument	"revision_number ? ""%s "" : ""%s"""		699834	0					
ANR	699847	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		699834	0					
ANR	699848	Condition	revision_number		699834	0					
ANR	699849	Identifier	revision_number		699834	0					
ANR	699850	PrimaryExpression	"""%s """		699834	1					
ANR	699851	PrimaryExpression	"""%s"""		699834	2					
ANR	699852	Argument	program_name		699834	1					
ANR	699853	Identifier	program_name		699834	0					
ANR	699854	IfStatement	if ( revision_number )		699834	1					
ANR	699855	Condition	revision_number	200:12:5319:5333	699834	0	True				
ANR	699856	Identifier	revision_number		699834	0					
ANR	699857	CompoundStatement		5:12:129:162	699834	1					
ANR	699858	IdentifierDeclStatement	int fpart = revision_number % 100 ;	201:12:5350:5383	699834	0	True				
ANR	699859	IdentifierDecl	fpart = revision_number % 100		699834	0					
ANR	699860	IdentifierDeclType	int		699834	0					
ANR	699861	Identifier	fpart		699834	1					
ANR	699862	AssignmentExpression	fpart = revision_number % 100		699834	2		=			
ANR	699863	Identifier	fpart		699834	0					
ANR	699864	MultiplicativeExpression	revision_number % 100		699834	1		%			
ANR	699865	Identifier	revision_number		699834	0					
ANR	699866	PrimaryExpression	100		699834	1					
ANR	699867	ExpressionStatement	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	203:12:5398:5449	699834	1	True				
ANR	699868	CallExpression	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		699834	0					
ANR	699869	Callee	epf		699834	0					
ANR	699870	Identifier	epf		699834	0					
ANR	699871	ArgumentList	"""%d.%02d"""		699834	1					
ANR	699872	Argument	"""%d.%02d"""		699834	0					
ANR	699873	PrimaryExpression	"""%d.%02d"""		699834	0					
ANR	699874	Argument	( int ) ( revision_number / 100 )		699834	1					
ANR	699875	CastExpression	( int ) ( revision_number / 100 )		699834	0					
ANR	699876	CastTarget	int		699834	0					
ANR	699877	MultiplicativeExpression	revision_number / 100		699834	1		/			
ANR	699878	Identifier	revision_number		699834	0					
ANR	699879	PrimaryExpression	100		699834	1					
ANR	699880	Argument	fpart		699834	2					
ANR	699881	Identifier	fpart		699834	0					
ANR	699882	ExpressionStatement	"epf ( "": "" )"	205:8:5469:5478	699834	2	True				
ANR	699883	CallExpression	"epf ( "": "" )"		699834	0					
ANR	699884	Callee	epf		699834	0					
ANR	699885	Identifier	epf		699834	0					
ANR	699886	ArgumentList	""": """		699834	1					
ANR	699887	Argument	""": """		699834	0					
ANR	699888	PrimaryExpression	""": """		699834	0					
ANR	699889	ReturnType	void		699834	1					
ANR	699890	Identifier	eprintf_program_ident		699834	2					
ANR	699891	ParameterList	"const char * program_name , long revision_number"		699834	3					
ANR	699892	Parameter	const char * program_name	195:22:5150:5173	699834	0	True				
ANR	699893	ParameterType	const char *		699834	0					
ANR	699894	Identifier	program_name		699834	1					
ANR	699895	Parameter	long revision_number	196:22:5198:5217	699834	1	True				
ANR	699896	ParameterType	long		699834	0					
ANR	699897	Identifier	revision_number		699834	1					
ANR	699898	CFGEntryNode	ENTRY		699834		True				
ANR	699899	CFGExitNode	EXIT		699834		True				
ANR	699900	Symbol	revision_number		699834						
ANR	699901	Symbol	program_name		699834						
ANR	699902	Symbol	fpart		699834						
ANR	699903	Function	dmprintf_file_and_line	210:0:5554:5754							
ANR	699904	FunctionDef	"dmprintf_file_and_line (const gs_memory_t * mem , const char * file , int line)"		699903	0					
ANR	699905	CompoundStatement		212:0:5633:5754	699903	0					
ANR	699906	IfStatement	if ( gs_debug [ '/' ] )		699903	0					
ANR	699907	Condition	gs_debug [ '/' ]	213:8:5643:5655	699903	0	True				
ANR	699908	ArrayIndexing	gs_debug [ '/' ]		699903	0					
ANR	699909	Identifier	gs_debug		699903	0					
ANR	699910	PrimaryExpression	'/'		699903	1					
ANR	699911	ExpressionStatement	"dpfm ( mem , dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"	214:8:5666:5752	699903	1	True				
ANR	699912	CallExpression	"dpfm ( mem , dprintf_file_and_line_format , dprintf_file_tail ( file ) , line )"		699903	0					
ANR	699913	Callee	dpfm		699903	0					
ANR	699914	Identifier	dpfm		699903	0					
ANR	699915	ArgumentList	mem		699903	1					
ANR	699916	Argument	mem		699903	0					
ANR	699917	Identifier	mem		699903	0					
ANR	699918	Argument	dprintf_file_and_line_format		699903	1					
ANR	699919	Identifier	dprintf_file_and_line_format		699903	0					
ANR	699920	Argument	dprintf_file_tail ( file )		699903	2					
ANR	699921	CallExpression	dprintf_file_tail ( file )		699903	0					
ANR	699922	Callee	dprintf_file_tail		699903	0					
ANR	699923	Identifier	dprintf_file_tail		699903	0					
ANR	699924	ArgumentList	file		699903	1					
ANR	699925	Argument	file		699903	0					
ANR	699926	Identifier	file		699903	0					
ANR	699927	Argument	line		699903	3					
ANR	699928	Identifier	line		699903	0					
ANR	699929	ReturnType	void		699903	1					
ANR	699930	Identifier	dmprintf_file_and_line		699903	2					
ANR	699931	ParameterList	"const gs_memory_t * mem , const char * file , int line"		699903	3					
ANR	699932	Parameter	const gs_memory_t * mem	211:23:5582:5603	699903	0	True				
ANR	699933	ParameterType	const gs_memory_t *		699903	0					
ANR	699934	Identifier	mem		699903	1					
ANR	699935	Parameter	const char * file	211:46:5605:5620	699903	1	True				
ANR	699936	ParameterType	const char *		699903	0					
ANR	699937	Identifier	file		699903	1					
ANR	699938	Parameter	int line	211:64:5623:5630	699903	2	True				
ANR	699939	ParameterType	int		699903	0					
ANR	699940	Identifier	line		699903	1					
ANR	699941	CFGEntryNode	ENTRY		699903		True				
ANR	699942	CFGExitNode	EXIT		699903		True				
ANR	699943	Symbol	gs_debug		699903						
ANR	699944	Symbol	file		699903						
ANR	699945	Symbol	mem		699903						
ANR	699946	Symbol	line		699903						
ANR	699947	Symbol	* gs_debug		699903						
ANR	699948	Symbol	dprintf_file_tail		699903						
ANR	699949	Symbol	dprintf_file_and_line_format		699903						
ANR	699950	Function	dmprintf_file_only	218:0:5762:5922							
ANR	699951	FunctionDef	"dmprintf_file_only (const gs_memory_t * mem , const char * file)"		699950	0					
ANR	699952	CompoundStatement		220:0:5827:5922	699950	0					
ANR	699953	IfStatement	if ( gs_debug [ '/' ] )		699950	0					
ANR	699954	Condition	gs_debug [ '/' ]	221:8:5837:5849	699950	0	True				
ANR	699955	ArrayIndexing	gs_debug [ '/' ]		699950	0					
ANR	699956	Identifier	gs_debug		699950	0					
ANR	699957	PrimaryExpression	'/'		699950	1					
ANR	699958	ExpressionStatement	"dpfm ( mem , dprintf_file_only_format , dprintf_file_tail ( file ) )"	222:8:5860:5920	699950	1	True				
ANR	699959	CallExpression	"dpfm ( mem , dprintf_file_only_format , dprintf_file_tail ( file ) )"		699950	0					
ANR	699960	Callee	dpfm		699950	0					
ANR	699961	Identifier	dpfm		699950	0					
ANR	699962	ArgumentList	mem		699950	1					
ANR	699963	Argument	mem		699950	0					
ANR	699964	Identifier	mem		699950	0					
ANR	699965	Argument	dprintf_file_only_format		699950	1					
ANR	699966	Identifier	dprintf_file_only_format		699950	0					
ANR	699967	Argument	dprintf_file_tail ( file )		699950	2					
ANR	699968	CallExpression	dprintf_file_tail ( file )		699950	0					
ANR	699969	Callee	dprintf_file_tail		699950	0					
ANR	699970	Identifier	dprintf_file_tail		699950	0					
ANR	699971	ArgumentList	file		699950	1					
ANR	699972	Argument	file		699950	0					
ANR	699973	Identifier	file		699950	0					
ANR	699974	ReturnType	void		699950	1					
ANR	699975	Identifier	dmprintf_file_only		699950	2					
ANR	699976	ParameterList	"const gs_memory_t * mem , const char * file"		699950	3					
ANR	699977	Parameter	const gs_memory_t * mem	219:19:5786:5807	699950	0	True				
ANR	699978	ParameterType	const gs_memory_t *		699950	0					
ANR	699979	Identifier	mem		699950	1					
ANR	699980	Parameter	const char * file	219:42:5809:5824	699950	1	True				
ANR	699981	ParameterType	const char *		699950	0					
ANR	699982	Identifier	file		699950	1					
ANR	699983	CFGEntryNode	ENTRY		699950		True				
ANR	699984	CFGExitNode	EXIT		699950		True				
ANR	699985	Symbol	gs_debug		699950						
ANR	699986	Symbol	file		699950						
ANR	699987	Symbol	mem		699950						
ANR	699988	Symbol	dprintf_file_only_format		699950						
ANR	699989	Symbol	* gs_debug		699950						
ANR	699990	Symbol	dprintf_file_tail		699950						
ANR	699991	Function	printf_program_ident	225:0:5931:6274							
ANR	699992	FunctionDef	"printf_program_ident (const gs_memory_t * mem , const char * program_name , long revision_number)"		699991	0					
ANR	699993	CompoundStatement		227:0:6029:6274	699991	0					
ANR	699994	IfStatement	if ( program_name )		699991	0					
ANR	699995	Condition	program_name	228:8:6039:6050	699991	0	True				
ANR	699996	Identifier	program_name		699991	0					
ANR	699997	ExpressionStatement	"outprintf ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	229:8:6061:6123	699991	1	True				
ANR	699998	CallExpression	"outprintf ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		699991	0					
ANR	699999	Callee	outprintf		699991	0					
ANR	700000	Identifier	outprintf		699991	0					
ANR	700001	ArgumentList	mem		699991	1					
ANR	700002	Argument	mem		699991	0					
ANR	700003	Identifier	mem		699991	0					
ANR	700004	Argument	"revision_number ? ""%s "" : ""%s"""		699991	1					
ANR	700005	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		699991	0					
ANR	700006	Condition	revision_number		699991	0					
ANR	700007	Identifier	revision_number		699991	0					
ANR	700008	PrimaryExpression	"""%s """		699991	1					
ANR	700009	PrimaryExpression	"""%s"""		699991	2					
ANR	700010	Argument	program_name		699991	2					
ANR	700011	Identifier	program_name		699991	0					
ANR	700012	IfStatement	if ( revision_number )		699991	1					
ANR	700013	Condition	revision_number	230:8:6133:6147	699991	0	True				
ANR	700014	Identifier	revision_number		699991	0					
ANR	700015	CompoundStatement		5:8:130:163	699991	1					
ANR	700016	IdentifierDeclStatement	int fpart = revision_number % 100 ;	231:8:6160:6193	699991	0	True				
ANR	700017	IdentifierDecl	fpart = revision_number % 100		699991	0					
ANR	700018	IdentifierDeclType	int		699991	0					
ANR	700019	Identifier	fpart		699991	1					
ANR	700020	AssignmentExpression	fpart = revision_number % 100		699991	2		=			
ANR	700021	Identifier	fpart		699991	0					
ANR	700022	MultiplicativeExpression	revision_number % 100		699991	1		%			
ANR	700023	Identifier	revision_number		699991	0					
ANR	700024	PrimaryExpression	100		699991	1					
ANR	700025	ExpressionStatement	"outprintf ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	233:8:6204:6266	699991	1	True				
ANR	700026	CallExpression	"outprintf ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		699991	0					
ANR	700027	Callee	outprintf		699991	0					
ANR	700028	Identifier	outprintf		699991	0					
ANR	700029	ArgumentList	mem		699991	1					
ANR	700030	Argument	mem		699991	0					
ANR	700031	Identifier	mem		699991	0					
ANR	700032	Argument	"""%d.%02d"""		699991	1					
ANR	700033	PrimaryExpression	"""%d.%02d"""		699991	0					
ANR	700034	Argument	( int ) ( revision_number / 100 )		699991	2					
ANR	700035	CastExpression	( int ) ( revision_number / 100 )		699991	0					
ANR	700036	CastTarget	int		699991	0					
ANR	700037	MultiplicativeExpression	revision_number / 100		699991	1		/			
ANR	700038	Identifier	revision_number		699991	0					
ANR	700039	PrimaryExpression	100		699991	1					
ANR	700040	Argument	fpart		699991	3					
ANR	700041	Identifier	fpart		699991	0					
ANR	700042	ReturnType	void		699991	1					
ANR	700043	Identifier	printf_program_ident		699991	2					
ANR	700044	ParameterList	"const gs_memory_t * mem , const char * program_name , long revision_number"		699991	3					
ANR	700045	Parameter	const gs_memory_t * mem	226:21:5957:5978	699991	0	True				
ANR	700046	ParameterType	const gs_memory_t *		699991	0					
ANR	700047	Identifier	mem		699991	1					
ANR	700048	Parameter	const char * program_name	226:45:5981:6004	699991	1	True				
ANR	700049	ParameterType	const char *		699991	0					
ANR	700050	Identifier	program_name		699991	1					
ANR	700051	Parameter	long revision_number	226:71:6007:6026	699991	2	True				
ANR	700052	ParameterType	long		699991	0					
ANR	700053	Identifier	revision_number		699991	1					
ANR	700054	CFGEntryNode	ENTRY		699991		True				
ANR	700055	CFGExitNode	EXIT		699991		True				
ANR	700056	Symbol	mem		699991						
ANR	700057	Symbol	revision_number		699991						
ANR	700058	Symbol	program_name		699991						
ANR	700059	Symbol	fpart		699991						
ANR	700060	Function	emprintf_program_ident	236:0:6276:6706							
ANR	700061	FunctionDef	"emprintf_program_ident (const gs_memory_t * mem , const char * program_name , long revision_number)"		700060	0					
ANR	700062	CompoundStatement		240:0:6422:6706	700060	0					
ANR	700063	IfStatement	if ( program_name )		700060	0					
ANR	700064	Condition	program_name	241:8:6432:6443	700060	0	True				
ANR	700065	Identifier	program_name		700060	0					
ANR	700066	CompoundStatement		2:22:23:23	700060	1					
ANR	700067	ExpressionStatement	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	242:8:6456:6513	700060	0	True				
ANR	700068	CallExpression	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		700060	0					
ANR	700069	Callee	epfm		700060	0					
ANR	700070	Identifier	epfm		700060	0					
ANR	700071	ArgumentList	mem		700060	1					
ANR	700072	Argument	mem		700060	0					
ANR	700073	Identifier	mem		700060	0					
ANR	700074	Argument	"revision_number ? ""%s "" : ""%s"""		700060	1					
ANR	700075	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		700060	0					
ANR	700076	Condition	revision_number		700060	0					
ANR	700077	Identifier	revision_number		700060	0					
ANR	700078	PrimaryExpression	"""%s """		700060	1					
ANR	700079	PrimaryExpression	"""%s"""		700060	2					
ANR	700080	Argument	program_name		700060	2					
ANR	700081	Identifier	program_name		700060	0					
ANR	700082	IfStatement	if ( revision_number )		700060	1					
ANR	700083	Condition	revision_number	243:12:6527:6541	700060	0	True				
ANR	700084	Identifier	revision_number		700060	0					
ANR	700085	CompoundStatement		5:12:135:168	700060	1					
ANR	700086	IdentifierDeclStatement	int fpart = revision_number % 100 ;	244:12:6558:6591	700060	0	True				
ANR	700087	IdentifierDecl	fpart = revision_number % 100		700060	0					
ANR	700088	IdentifierDeclType	int		700060	0					
ANR	700089	Identifier	fpart		700060	1					
ANR	700090	AssignmentExpression	fpart = revision_number % 100		700060	2		=			
ANR	700091	Identifier	fpart		700060	0					
ANR	700092	MultiplicativeExpression	revision_number % 100		700060	1		%			
ANR	700093	Identifier	revision_number		700060	0					
ANR	700094	PrimaryExpression	100		700060	1					
ANR	700095	ExpressionStatement	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	246:12:6606:6663	700060	1	True				
ANR	700096	CallExpression	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		700060	0					
ANR	700097	Callee	epfm		700060	0					
ANR	700098	Identifier	epfm		700060	0					
ANR	700099	ArgumentList	mem		700060	1					
ANR	700100	Argument	mem		700060	0					
ANR	700101	Identifier	mem		700060	0					
ANR	700102	Argument	"""%d.%02d"""		700060	1					
ANR	700103	PrimaryExpression	"""%d.%02d"""		700060	0					
ANR	700104	Argument	( int ) ( revision_number / 100 )		700060	2					
ANR	700105	CastExpression	( int ) ( revision_number / 100 )		700060	0					
ANR	700106	CastTarget	int		700060	0					
ANR	700107	MultiplicativeExpression	revision_number / 100		700060	1		/			
ANR	700108	Identifier	revision_number		700060	0					
ANR	700109	PrimaryExpression	100		700060	1					
ANR	700110	Argument	fpart		700060	3					
ANR	700111	Identifier	fpart		700060	0					
ANR	700112	ExpressionStatement	"epfm ( mem , "": "" )"	248:8:6683:6698	700060	2	True				
ANR	700113	CallExpression	"epfm ( mem , "": "" )"		700060	0					
ANR	700114	Callee	epfm		700060	0					
ANR	700115	Identifier	epfm		700060	0					
ANR	700116	ArgumentList	mem		700060	1					
ANR	700117	Argument	mem		700060	0					
ANR	700118	Identifier	mem		700060	0					
ANR	700119	Argument	""": """		700060	1					
ANR	700120	PrimaryExpression	""": """		700060	0					
ANR	700121	ReturnType	void		700060	1					
ANR	700122	Identifier	emprintf_program_ident		700060	2					
ANR	700123	ParameterList	"const gs_memory_t * mem , const char * program_name , long revision_number"		700060	3					
ANR	700124	Parameter	const gs_memory_t * mem	237:23:6304:6325	700060	0	True				
ANR	700125	ParameterType	const gs_memory_t *		700060	0					
ANR	700126	Identifier	mem		700060	1					
ANR	700127	Parameter	const char * program_name	238:23:6351:6374	700060	1	True				
ANR	700128	ParameterType	const char *		700060	0					
ANR	700129	Identifier	program_name		700060	1					
ANR	700130	Parameter	long revision_number	239:23:6400:6419	700060	2	True				
ANR	700131	ParameterType	long		700060	0					
ANR	700132	Identifier	revision_number		700060	1					
ANR	700133	CFGEntryNode	ENTRY		700060		True				
ANR	700134	CFGExitNode	EXIT		700060		True				
ANR	700135	Symbol	mem		700060						
ANR	700136	Symbol	revision_number		700060						
ANR	700137	Symbol	program_name		700060						
ANR	700138	Symbol	fpart		700060						
ANR	700139	Function	mlprintf_file_and_line	252:0:6767:6888							
ANR	700140	FunctionDef	"mlprintf_file_and_line (const gs_memory_t * mem , const char * file , int line)"		700139	0					
ANR	700141	CompoundStatement		254:0:6847:6888	700139	0					
ANR	700142	ExpressionStatement	"epfm ( mem , ""%s(%d): "" , file , line )"	255:4:6853:6886	700139	0	True				
ANR	700143	CallExpression	"epfm ( mem , ""%s(%d): "" , file , line )"		700139	0					
ANR	700144	Callee	epfm		700139	0					
ANR	700145	Identifier	epfm		700139	0					
ANR	700146	ArgumentList	mem		700139	1					
ANR	700147	Argument	mem		700139	0					
ANR	700148	Identifier	mem		700139	0					
ANR	700149	Argument	"""%s(%d): """		700139	1					
ANR	700150	PrimaryExpression	"""%s(%d): """		700139	0					
ANR	700151	Argument	file		700139	2					
ANR	700152	Identifier	file		700139	0					
ANR	700153	Argument	line		700139	3					
ANR	700154	Identifier	line		700139	0					
ANR	700155	ReturnType	void		700139	1					
ANR	700156	Identifier	mlprintf_file_and_line		700139	2					
ANR	700157	ParameterList	"const gs_memory_t * mem , const char * file , int line"		700139	3					
ANR	700158	Parameter	const gs_memory_t * mem	253:23:6795:6816	700139	0	True				
ANR	700159	ParameterType	const gs_memory_t *		700139	0					
ANR	700160	Identifier	mem		700139	1					
ANR	700161	Parameter	const char * file	253:47:6819:6834	700139	1	True				
ANR	700162	ParameterType	const char *		700139	0					
ANR	700163	Identifier	file		700139	1					
ANR	700164	Parameter	int line	253:65:6837:6844	700139	2	True				
ANR	700165	ParameterType	int		700139	0					
ANR	700166	Identifier	line		700139	1					
ANR	700167	CFGEntryNode	ENTRY		700139		True				
ANR	700168	CFGExitNode	EXIT		700139		True				
ANR	700169	Symbol	file		700139						
ANR	700170	Symbol	mem		700139						
ANR	700171	Symbol	line		700139						
ANR	700172	Function	mlprintf_file_only	258:0:6896:7006							
ANR	700173	FunctionDef	"mlprintf_file_only (const gs_memory_t * mem , FILE * f , const char * file)"		700172	0					
ANR	700174	CompoundStatement		260:0:6972:7006	700172	0					
ANR	700175	ExpressionStatement	"epfm ( mem , ""%s(?): "" , file )"	261:4:6978:7004	700172	0	True				
ANR	700176	CallExpression	"epfm ( mem , ""%s(?): "" , file )"		700172	0					
ANR	700177	Callee	epfm		700172	0					
ANR	700178	Identifier	epfm		700172	0					
ANR	700179	ArgumentList	mem		700172	1					
ANR	700180	Argument	mem		700172	0					
ANR	700181	Identifier	mem		700172	0					
ANR	700182	Argument	"""%s(?): """		700172	1					
ANR	700183	PrimaryExpression	"""%s(?): """		700172	0					
ANR	700184	Argument	file		700172	2					
ANR	700185	Identifier	file		700172	0					
ANR	700186	ReturnType	void		700172	1					
ANR	700187	Identifier	mlprintf_file_only		700172	2					
ANR	700188	ParameterList	"const gs_memory_t * mem , FILE * f , const char * file"		700172	3					
ANR	700189	Parameter	const gs_memory_t * mem	259:19:6920:6941	700172	0	True				
ANR	700190	ParameterType	const gs_memory_t *		700172	0					
ANR	700191	Identifier	mem		700172	1					
ANR	700192	Parameter	FILE * f	259:43:6944:6951	700172	1	True				
ANR	700193	ParameterType	FILE *		700172	0					
ANR	700194	Identifier	f		700172	1					
ANR	700195	Parameter	const char * file	259:53:6954:6969	700172	2	True				
ANR	700196	ParameterType	const char *		700172	0					
ANR	700197	Identifier	file		700172	1					
ANR	700198	CFGEntryNode	ENTRY		700172		True				
ANR	700199	CFGExitNode	EXIT		700172		True				
ANR	700200	Symbol	file		700172						
ANR	700201	Symbol	mem		700172						
ANR	700202	Symbol	f		700172						
ANR	700203	Function	gs_log_error	267:1:7127:7489							
ANR	700204	FunctionDef	"gs_log_error (int err , const char * file , int line)"		700203	0					
ANR	700205	CompoundStatement		270:0:7242:7489	700203	0					
ANR	700206	IfStatement	if ( gs_log_errors )		700203	0					
ANR	700207	Condition	gs_log_errors	271:8:7252:7264	700203	0	True				
ANR	700208	Identifier	gs_log_errors		700203	0					
ANR	700209	CompoundStatement		2:23:24:24	700203	1					
ANR	700210	IfStatement	if ( file == NULL )		700203	0					
ANR	700211	Condition	file == NULL	272:12:7281:7292	700203	0	True				
ANR	700212	EqualityExpression	file == NULL		700203	0		==			
ANR	700213	Identifier	file		700203	0					
ANR	700214	Identifier	NULL		700203	1					
ANR	700215	ExpressionStatement	"dprintf1 ( ""Returning error %d.\\n"" , err )"	273:12:7307:7345	700203	1	True				
ANR	700216	CallExpression	"dprintf1 ( ""Returning error %d.\\n"" , err )"		700203	0					
ANR	700217	Callee	dprintf1		700203	0					
ANR	700218	Identifier	dprintf1		700203	0					
ANR	700219	ArgumentList	"""Returning error %d.\\n"""		700203	1					
ANR	700220	Argument	"""Returning error %d.\\n"""		700203	0					
ANR	700221	PrimaryExpression	"""Returning error %d.\\n"""		700203	0					
ANR	700222	Argument	err		700203	1					
ANR	700223	Identifier	err		700203	0					
ANR	700224	ElseStatement	else		700203	0					
ANR	700225	ExpressionStatement	"dprintf3 ( ""%s(%d): Returning error %d.\\n"" , ( const char * ) file , line , err )"	275:12:7372:7465	700203	0	True				
ANR	700226	CallExpression	"dprintf3 ( ""%s(%d): Returning error %d.\\n"" , ( const char * ) file , line , err )"		700203	0					
ANR	700227	Callee	dprintf3		700203	0					
ANR	700228	Identifier	dprintf3		700203	0					
ANR	700229	ArgumentList	"""%s(%d): Returning error %d.\\n"""		700203	1					
ANR	700230	Argument	"""%s(%d): Returning error %d.\\n"""		700203	0					
ANR	700231	PrimaryExpression	"""%s(%d): Returning error %d.\\n"""		700203	0					
ANR	700232	Argument	( const char * ) file		700203	1					
ANR	700233	CastExpression	( const char * ) file		700203	0					
ANR	700234	CastTarget	const char *		700203	0					
ANR	700235	Identifier	file		700203	1					
ANR	700236	Argument	line		700203	2					
ANR	700237	Identifier	line		700203	0					
ANR	700238	Argument	err		700203	3					
ANR	700239	Identifier	err		700203	0					
ANR	700240	ReturnStatement	return err ;	278:4:7477:7487	700203	1	True				
ANR	700241	Identifier	err		700203	0					
ANR	700242	ReturnType	undef gs_log_error int		700203	1					
ANR	700243	Identifier	gs_log_error		700203	2					
ANR	700244	ParameterList	"int err , const char * file , int line"		700203	3					
ANR	700245	Parameter	int err	269:13:7205:7211	700203	0	True				
ANR	700246	ParameterType	int		700203	0					
ANR	700247	Identifier	err		700203	1					
ANR	700248	Parameter	const char * file	269:22:7214:7229	700203	1	True				
ANR	700249	ParameterType	const char *		700203	0					
ANR	700250	Identifier	file		700203	1					
ANR	700251	Parameter	int line	269:40:7232:7239	700203	2	True				
ANR	700252	ParameterType	int		700203	0					
ANR	700253	Identifier	line		700203	1					
ANR	700254	CFGEntryNode	ENTRY		700203		True				
ANR	700255	CFGExitNode	EXIT		700203		True				
ANR	700256	Symbol	gs_log_errors		700203						
ANR	700257	Symbol	file		700203						
ANR	700258	Symbol	NULL		700203						
ANR	700259	Symbol	err		700203						
ANR	700260	Symbol	line		700203						
ANR	700261	Function	gs_return_check_interrupt	282:0:7536:7810							
ANR	700262	FunctionDef	"gs_return_check_interrupt (const gs_memory_t * mem , int code)"		700261	0					
ANR	700263	CompoundStatement		284:0:7600:7810	700261	0					
ANR	700264	IfStatement	if ( code < 0 )		700261	0					
ANR	700265	Condition	code < 0	285:8:7610:7617	700261	0	True				
ANR	700266	RelationalExpression	code < 0		700261	0		<			
ANR	700267	Identifier	code		700261	0					
ANR	700268	PrimaryExpression	0		700261	1					
ANR	700269	ReturnStatement	return code ;	286:8:7628:7639	700261	1	True				
ANR	700270	Identifier	code		700261	0					
ANR	700271	CompoundStatement		5:8:54:90	700261	1					
ANR	700272	IdentifierDeclStatement	int icode = gp_check_interrupts ( mem ) ;	288:8:7655:7691	700261	0	True				
ANR	700273	IdentifierDecl	icode = gp_check_interrupts ( mem )		700261	0					
ANR	700274	IdentifierDeclType	int		700261	0					
ANR	700275	Identifier	icode		700261	1					
ANR	700276	AssignmentExpression	icode = gp_check_interrupts ( mem )		700261	2		=			
ANR	700277	Identifier	icode		700261	0					
ANR	700278	CallExpression	gp_check_interrupts ( mem )		700261	1					
ANR	700279	Callee	gp_check_interrupts		700261	0					
ANR	700280	Identifier	gp_check_interrupts		700261	0					
ANR	700281	ArgumentList	mem		700261	1					
ANR	700282	Argument	mem		700261	0					
ANR	700283	Identifier	mem		700261	0					
ANR	700284	ReturnStatement	return ( icode == 0 ? code : gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) ) ) ;	290:8:7702:7802	700261	1	True				
ANR	700285	ConditionalExpression	icode == 0 ? code : gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) )		700261	0					
ANR	700286	Condition	icode == 0		700261	0					
ANR	700287	EqualityExpression	icode == 0		700261	0		==			
ANR	700288	Identifier	icode		700261	0					
ANR	700289	PrimaryExpression	0		700261	1					
ANR	700290	Identifier	code		700261	1					
ANR	700291	CallExpression	gs_note_error ( ( icode > 0 ? gs_error_interrupt : icode ) )		700261	2					
ANR	700292	Callee	gs_note_error		700261	0					
ANR	700293	Identifier	gs_note_error		700261	0					
ANR	700294	ArgumentList	icode > 0 ? gs_error_interrupt : icode		700261	1					
ANR	700295	Argument	icode > 0 ? gs_error_interrupt : icode		700261	0					
ANR	700296	ConditionalExpression	icode > 0 ? gs_error_interrupt : icode		700261	0					
ANR	700297	Condition	icode > 0		700261	0					
ANR	700298	RelationalExpression	icode > 0		700261	0		>			
ANR	700299	Identifier	icode		700261	0					
ANR	700300	PrimaryExpression	0		700261	1					
ANR	700301	Identifier	gs_error_interrupt		700261	1					
ANR	700302	Identifier	icode		700261	2					
ANR	700303	ReturnType	int		700261	1					
ANR	700304	Identifier	gs_return_check_interrupt		700261	2					
ANR	700305	ParameterList	"const gs_memory_t * mem , int code"		700261	3					
ANR	700306	Parameter	const gs_memory_t * mem	283:26:7566:7587	700261	0	True				
ANR	700307	ParameterType	const gs_memory_t *		700261	0					
ANR	700308	Identifier	mem		700261	1					
ANR	700309	Parameter	int code	283:50:7590:7597	700261	1	True				
ANR	700310	ParameterType	int		700261	0					
ANR	700311	Identifier	code		700261	1					
ANR	700312	CFGEntryNode	ENTRY		700261		True				
ANR	700313	CFGExitNode	EXIT		700261		True				
ANR	700314	Symbol	icode		700261						
ANR	700315	Symbol	gs_note_error		700261						
ANR	700316	Symbol	code		700261						
ANR	700317	Symbol	gs_error_interrupt		700261						
ANR	700318	Symbol	mem		700261						
ANR	700319	Symbol	gp_check_interrupts		700261						
ANR	700320	Function	gs_throw_imp	296:0:7835:8904							
ANR	700321	FunctionDef	"gs_throw_imp (const char * func , const char * file , int line , int op , int code , const char * fmt)"		700320	0					
ANR	700322	CompoundStatement		297:0:7938:8904	700320	0					
ANR	700323	IdentifierDeclStatement	char msg [ 1024 ] ;	298:4:7944:7958	700320	0	True				
ANR	700324	IdentifierDecl	msg [ 1024 ]		700320	0					
ANR	700325	IdentifierDeclType	char [ 1024 ]		700320	0					
ANR	700326	Identifier	msg		700320	1					
ANR	700327	PrimaryExpression	1024		700320	2					
ANR	700328	IdentifierDeclStatement	va_list ap ;	299:4:7964:7974	700320	1	True				
ANR	700329	IdentifierDecl	ap		700320	0					
ANR	700330	IdentifierDeclType	va_list		700320	0					
ANR	700331	Identifier	ap		700320	1					
ANR	700332	IdentifierDeclStatement	int count ;	300:4:7980:7989	700320	2	True				
ANR	700333	IdentifierDecl	count		700320	0					
ANR	700334	IdentifierDeclType	int		700320	0					
ANR	700335	Identifier	count		700320	1					
ANR	700336	ExpressionStatement	"va_start ( ap , fmt )"	302:4:7996:8013	700320	3	True				
ANR	700337	CallExpression	"va_start ( ap , fmt )"		700320	0					
ANR	700338	Callee	va_start		700320	0					
ANR	700339	Identifier	va_start		700320	0					
ANR	700340	ArgumentList	ap		700320	1					
ANR	700341	Argument	ap		700320	0					
ANR	700342	Identifier	ap		700320	0					
ANR	700343	Argument	fmt		700320	1					
ANR	700344	Identifier	fmt		700320	0					
ANR	700345	ExpressionStatement	"count = vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"	303:4:8019:8063	700320	4	True				
ANR	700346	AssignmentExpression	"count = vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"		700320	0		=			
ANR	700347	Identifier	count		700320	0					
ANR	700348	CallExpression	"vsnprintf ( msg , sizeof ( msg ) , fmt , ap )"		700320	1					
ANR	700349	Callee	vsnprintf		700320	0					
ANR	700350	Identifier	vsnprintf		700320	0					
ANR	700351	ArgumentList	msg		700320	1					
ANR	700352	Argument	msg		700320	0					
ANR	700353	Identifier	msg		700320	0					
ANR	700354	Argument	sizeof ( msg )		700320	1					
ANR	700355	SizeofExpression	sizeof ( msg )		700320	0					
ANR	700356	Sizeof	sizeof		700320	0					
ANR	700357	SizeofOperand	msg		700320	1					
ANR	700358	Argument	fmt		700320	2					
ANR	700359	Identifier	fmt		700320	0					
ANR	700360	Argument	ap		700320	3					
ANR	700361	Identifier	ap		700320	0					
ANR	700362	ExpressionStatement	msg [ sizeof ( msg ) - 1 ] = 0	304:4:8069:8093	700320	5	True				
ANR	700363	AssignmentExpression	msg [ sizeof ( msg ) - 1 ] = 0		700320	0		=			
ANR	700364	ArrayIndexing	msg [ sizeof ( msg ) - 1 ]		700320	0					
ANR	700365	Identifier	msg		700320	0					
ANR	700366	AdditiveExpression	sizeof ( msg ) - 1		700320	1		-			
ANR	700367	SizeofExpression	sizeof ( msg )		700320	0					
ANR	700368	Sizeof	sizeof		700320	0					
ANR	700369	SizeofOperand	msg		700320	1					
ANR	700370	PrimaryExpression	1		700320	1					
ANR	700371	PrimaryExpression	0		700320	1					
ANR	700372	ExpressionStatement	va_end ( ap )	305:4:8099:8109	700320	6	True				
ANR	700373	CallExpression	va_end ( ap )		700320	0					
ANR	700374	Callee	va_end		700320	0					
ANR	700375	Identifier	va_end		700320	0					
ANR	700376	ArgumentList	ap		700320	1					
ANR	700377	Argument	ap		700320	0					
ANR	700378	Identifier	ap		700320	0					
ANR	700379	IfStatement	if ( ! gs_debug_c ( '#' ) )		700320	7					
ANR	700380	Condition	! gs_debug_c ( '#' )	307:8:8120:8135	700320	0	True				
ANR	700381	UnaryOperationExpression	! gs_debug_c ( '#' )		700320	0					
ANR	700382	UnaryOperator	!		700320	0					
ANR	700383	CallExpression	gs_debug_c ( '#' )		700320	1					
ANR	700384	Callee	gs_debug_c		700320	0					
ANR	700385	Identifier	gs_debug_c		700320	0					
ANR	700386	ArgumentList	'#'		700320	1					
ANR	700387	Argument	'#'		700320	0					
ANR	700388	PrimaryExpression	'#'		700320	0					
ANR	700389	CompoundStatement		11:26:199:199	700320	1					
ANR	700390	ExpressionStatement		308:8:8148:8148	700320	0	True				
ANR	700391	IfStatement	if ( op == 0 )		700320	8					
ANR	700392	Condition	op == 0	316:8:8354:8360	700320	0	True				
ANR	700393	EqualityExpression	op == 0		700320	0		==			
ANR	700394	Identifier	op		700320	0					
ANR	700395	PrimaryExpression	0		700320	1					
ANR	700396	ExpressionStatement	"errprintf_nomem ( ""+ %s:%d: %s(): %s\\n"" , file , line , func , msg )"	317:8:8371:8432	700320	1	True				
ANR	700397	CallExpression	"errprintf_nomem ( ""+ %s:%d: %s(): %s\\n"" , file , line , func , msg )"		700320	0					
ANR	700398	Callee	errprintf_nomem		700320	0					
ANR	700399	Identifier	errprintf_nomem		700320	0					
ANR	700400	ArgumentList	"""+ %s:%d: %s(): %s\\n"""		700320	1					
ANR	700401	Argument	"""+ %s:%d: %s(): %s\\n"""		700320	0					
ANR	700402	PrimaryExpression	"""+ %s:%d: %s(): %s\\n"""		700320	0					
ANR	700403	Argument	file		700320	1					
ANR	700404	Identifier	file		700320	0					
ANR	700405	Argument	line		700320	2					
ANR	700406	Identifier	line		700320	0					
ANR	700407	Argument	func		700320	3					
ANR	700408	Identifier	func		700320	0					
ANR	700409	Argument	msg		700320	4					
ANR	700410	Identifier	msg		700320	0					
ANR	700411	IfStatement	if ( op == 1 )		700320	9					
ANR	700412	Condition	op == 1	320:8:8461:8467	700320	0	True				
ANR	700413	EqualityExpression	op == 1		700320	0		==			
ANR	700414	Identifier	op		700320	0					
ANR	700415	PrimaryExpression	1		700320	1					
ANR	700416	ExpressionStatement	"errprintf_nomem ( ""| %s:%d: %s(): %s\\n"" , file , line , func , msg )"	321:8:8478:8539	700320	1	True				
ANR	700417	CallExpression	"errprintf_nomem ( ""| %s:%d: %s(): %s\\n"" , file , line , func , msg )"		700320	0					
ANR	700418	Callee	errprintf_nomem		700320	0					
ANR	700419	Identifier	errprintf_nomem		700320	0					
ANR	700420	ArgumentList	"""| %s:%d: %s(): %s\\n"""		700320	1					
ANR	700421	Argument	"""| %s:%d: %s(): %s\\n"""		700320	0					
ANR	700422	PrimaryExpression	"""| %s:%d: %s(): %s\\n"""		700320	0					
ANR	700423	Argument	file		700320	1					
ANR	700424	Identifier	file		700320	0					
ANR	700425	Argument	line		700320	2					
ANR	700426	Identifier	line		700320	0					
ANR	700427	Argument	func		700320	3					
ANR	700428	Identifier	func		700320	0					
ANR	700429	Argument	msg		700320	4					
ANR	700430	Identifier	msg		700320	0					
ANR	700431	IfStatement	if ( op == 2 )		700320	10					
ANR	700432	Condition	op == 2	324:8:8566:8572	700320	0	True				
ANR	700433	EqualityExpression	op == 2		700320	0		==			
ANR	700434	Identifier	op		700320	0					
ANR	700435	PrimaryExpression	2		700320	1					
ANR	700436	ExpressionStatement	"errprintf_nomem ( ""- %s:%d: %s(): %s\\n"" , file , line , func , msg )"	325:8:8583:8644	700320	1	True				
ANR	700437	CallExpression	"errprintf_nomem ( ""- %s:%d: %s(): %s\\n"" , file , line , func , msg )"		700320	0					
ANR	700438	Callee	errprintf_nomem		700320	0					
ANR	700439	Identifier	errprintf_nomem		700320	0					
ANR	700440	ArgumentList	"""- %s:%d: %s(): %s\\n"""		700320	1					
ANR	700441	Argument	"""- %s:%d: %s(): %s\\n"""		700320	0					
ANR	700442	PrimaryExpression	"""- %s:%d: %s(): %s\\n"""		700320	0					
ANR	700443	Argument	file		700320	1					
ANR	700444	Identifier	file		700320	0					
ANR	700445	Argument	line		700320	2					
ANR	700446	Identifier	line		700320	0					
ANR	700447	Argument	func		700320	3					
ANR	700448	Identifier	func		700320	0					
ANR	700449	Argument	msg		700320	4					
ANR	700450	Identifier	msg		700320	0					
ANR	700451	IfStatement	if ( op == 3 )		700320	11					
ANR	700452	Condition	op == 3	328:8:8670:8676	700320	0	True				
ANR	700453	EqualityExpression	op == 3		700320	0		==			
ANR	700454	Identifier	op		700320	0					
ANR	700455	PrimaryExpression	3		700320	1					
ANR	700456	ExpressionStatement	"errprintf_nomem ( ""  %s:%d: %s(): %s\\n"" , file , line , func , msg )"	329:8:8687:8748	700320	1	True				
ANR	700457	CallExpression	"errprintf_nomem ( ""  %s:%d: %s(): %s\\n"" , file , line , func , msg )"		700320	0					
ANR	700458	Callee	errprintf_nomem		700320	0					
ANR	700459	Identifier	errprintf_nomem		700320	0					
ANR	700460	ArgumentList	"""  %s:%d: %s(): %s\\n"""		700320	1					
ANR	700461	Argument	"""  %s:%d: %s(): %s\\n"""		700320	0					
ANR	700462	PrimaryExpression	"""  %s:%d: %s(): %s\\n"""		700320	0					
ANR	700463	Argument	file		700320	1					
ANR	700464	Identifier	file		700320	0					
ANR	700465	Argument	line		700320	2					
ANR	700466	Identifier	line		700320	0					
ANR	700467	Argument	func		700320	3					
ANR	700468	Identifier	func		700320	0					
ANR	700469	Argument	msg		700320	4					
ANR	700470	Identifier	msg		700320	0					
ANR	700471	IfStatement	if ( count >= sizeof ( msg ) || count < 0 )		700320	12					
ANR	700472	Condition	count >= sizeof ( msg ) || count < 0	331:8:8759:8791	700320	0	True				
ANR	700473	OrExpression	count >= sizeof ( msg ) || count < 0		700320	0		||			
ANR	700474	RelationalExpression	count >= sizeof ( msg )		700320	0		>=			
ANR	700475	Identifier	count		700320	0					
ANR	700476	SizeofExpression	sizeof ( msg )		700320	1					
ANR	700477	Sizeof	sizeof		700320	0					
ANR	700478	SizeofOperand	msg		700320	1					
ANR	700479	RelationalExpression	count < 0		700320	1		<			
ANR	700480	Identifier	count		700320	0					
ANR	700481	PrimaryExpression	0		700320	1					
ANR	700482	CompoundStatement		35:44:856:856	700320	1					
ANR	700483	ExpressionStatement	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"	332:8:8823:8879	700320	0	True				
ANR	700484	CallExpression	"errwrite_nomem ( msg_truncated , sizeof ( msg_truncated ) - 1 )"		700320	0					
ANR	700485	Callee	errwrite_nomem		700320	0					
ANR	700486	Identifier	errwrite_nomem		700320	0					
ANR	700487	ArgumentList	msg_truncated		700320	1					
ANR	700488	Argument	msg_truncated		700320	0					
ANR	700489	Identifier	msg_truncated		700320	0					
ANR	700490	Argument	sizeof ( msg_truncated ) - 1		700320	1					
ANR	700491	AdditiveExpression	sizeof ( msg_truncated ) - 1		700320	0		-			
ANR	700492	SizeofExpression	sizeof ( msg_truncated )		700320	0					
ANR	700493	Sizeof	sizeof		700320	0					
ANR	700494	SizeofOperand	msg_truncated		700320	1					
ANR	700495	PrimaryExpression	1		700320	1					
ANR	700496	ReturnStatement	return code ;	334:4:8891:8902	700320	13	True				
ANR	700497	Identifier	code		700320	0					
ANR	700498	ReturnType	int		700320	1					
ANR	700499	Identifier	gs_throw_imp		700320	2					
ANR	700500	ParameterList	"const char * func , const char * file , int line , int op , int code , const char * fmt"		700320	3					
ANR	700501	Parameter	const char * func	296:17:7852:7867	700320	0	True				
ANR	700502	ParameterType	const char *		700320	0					
ANR	700503	Identifier	func		700320	1					
ANR	700504	Parameter	const char * file	296:35:7870:7885	700320	1	True				
ANR	700505	ParameterType	const char *		700320	0					
ANR	700506	Identifier	file		700320	1					
ANR	700507	Parameter	int line	296:53:7888:7895	700320	2	True				
ANR	700508	ParameterType	int		700320	0					
ANR	700509	Identifier	line		700320	1					
ANR	700510	Parameter	int op	296:63:7898:7903	700320	3	True				
ANR	700511	ParameterType	int		700320	0					
ANR	700512	Identifier	op		700320	1					
ANR	700513	Parameter	int code	296:71:7906:7913	700320	4	True				
ANR	700514	ParameterType	int		700320	0					
ANR	700515	Identifier	code		700320	1					
ANR	700516	Parameter	const char * fmt	296:81:7916:7930	700320	5	True				
ANR	700517	ParameterType	const char *		700320	0					
ANR	700518	Identifier	fmt		700320	1					
ANR	700519	CFGEntryNode	ENTRY		700320		True				
ANR	700520	CFGExitNode	EXIT		700320		True				
ANR	700521	Symbol	msg		700320						
ANR	700522	Symbol	op		700320						
ANR	700523	Symbol	code		700320						
ANR	700524	Symbol	line		700320						
ANR	700525	Symbol	count		700320						
ANR	700526	Symbol	* msg		700320						
ANR	700527	Symbol	fmt		700320						
ANR	700528	Symbol	ap		700320						
ANR	700529	Symbol	file		700320						
ANR	700530	Symbol	msg_truncated		700320						
ANR	700531	Symbol	func		700320						
ANR	700532	Symbol	gs_debug_c		700320						
ANR	700533	Symbol	vsnprintf		700320						
ANR	700534	Function	gs_errstr	338:0:8914:9892							
ANR	700535	FunctionDef	gs_errstr (int code)		700534	0					
ANR	700536	CompoundStatement		339:0:8946:9892	700534	0					
ANR	700537	SwitchStatement	switch ( code )		700534	0					
ANR	700538	Condition	code	340:12:8960:8963	700534	0	True				
ANR	700539	Identifier	code		700534	0					
ANR	700540	CompoundStatement		2:18:19:19	700534	1					
ANR	700541	Label	default :	341:4:8972:8979	700534	0	True				
ANR	700542	Identifier	default		700534	0					
ANR	700543	Label	case gs_error_unknownerror :	342:4:8985:9011	700534	1	True				
ANR	700544	Identifier	gs_error_unknownerror		700534	0					
ANR	700545	ReturnStatement	"return ""unknownerror"" ;"	342:32:9013:9034	700534	2	True				
ANR	700546	PrimaryExpression	"""unknownerror"""		700534	0					
ANR	700547	Label	case gs_error_interrupt :	343:4:9040:9063	700534	3	True				
ANR	700548	Identifier	gs_error_interrupt		700534	0					
ANR	700549	ReturnStatement	"return ""interrupt"" ;"	343:29:9065:9083	700534	4	True				
ANR	700550	PrimaryExpression	"""interrupt"""		700534	0					
ANR	700551	Label	case gs_error_invalidaccess :	344:4:9089:9116	700534	5	True				
ANR	700552	Identifier	gs_error_invalidaccess		700534	0					
ANR	700553	ReturnStatement	"return ""invalidaccess"" ;"	344:33:9118:9140	700534	6	True				
ANR	700554	PrimaryExpression	"""invalidaccess"""		700534	0					
ANR	700555	Label	case gs_error_invalidfileaccess :	345:4:9146:9177	700534	7	True				
ANR	700556	Identifier	gs_error_invalidfileaccess		700534	0					
ANR	700557	ReturnStatement	"return ""invalidfileaccess"" ;"	345:37:9179:9205	700534	8	True				
ANR	700558	PrimaryExpression	"""invalidfileaccess"""		700534	0					
ANR	700559	Label	case gs_error_invalidfont :	346:4:9211:9236	700534	9	True				
ANR	700560	Identifier	gs_error_invalidfont		700534	0					
ANR	700561	ReturnStatement	"return ""invalidfont"" ;"	346:31:9238:9258	700534	10	True				
ANR	700562	PrimaryExpression	"""invalidfont"""		700534	0					
ANR	700563	Label	case gs_error_ioerror :	347:4:9264:9285	700534	11	True				
ANR	700564	Identifier	gs_error_ioerror		700534	0					
ANR	700565	ReturnStatement	"return ""ioerror"" ;"	347:27:9287:9303	700534	12	True				
ANR	700566	PrimaryExpression	"""ioerror"""		700534	0					
ANR	700567	Label	case gs_error_limitcheck :	348:4:9309:9333	700534	13	True				
ANR	700568	Identifier	gs_error_limitcheck		700534	0					
ANR	700569	ReturnStatement	"return ""limitcheck"" ;"	348:30:9335:9354	700534	14	True				
ANR	700570	PrimaryExpression	"""limitcheck"""		700534	0					
ANR	700571	Label	case gs_error_nocurrentpoint :	349:4:9360:9388	700534	15	True				
ANR	700572	Identifier	gs_error_nocurrentpoint		700534	0					
ANR	700573	ReturnStatement	"return ""nocurrentpoint"" ;"	349:34:9390:9413	700534	16	True				
ANR	700574	PrimaryExpression	"""nocurrentpoint"""		700534	0					
ANR	700575	Label	case gs_error_rangecheck :	350:4:9419:9443	700534	17	True				
ANR	700576	Identifier	gs_error_rangecheck		700534	0					
ANR	700577	ReturnStatement	"return ""rangecheck"" ;"	350:30:9445:9464	700534	18	True				
ANR	700578	PrimaryExpression	"""rangecheck"""		700534	0					
ANR	700579	Label	case gs_error_typecheck :	351:4:9470:9493	700534	19	True				
ANR	700580	Identifier	gs_error_typecheck		700534	0					
ANR	700581	ReturnStatement	"return ""typecheck"" ;"	351:29:9495:9513	700534	20	True				
ANR	700582	PrimaryExpression	"""typecheck"""		700534	0					
ANR	700583	Label	case gs_error_undefined :	352:4:9519:9542	700534	21	True				
ANR	700584	Identifier	gs_error_undefined		700534	0					
ANR	700585	ReturnStatement	"return ""undefined"" ;"	352:29:9544:9562	700534	22	True				
ANR	700586	PrimaryExpression	"""undefined"""		700534	0					
ANR	700587	Label	case gs_error_undefinedfilename :	353:4:9568:9599	700534	23	True				
ANR	700588	Identifier	gs_error_undefinedfilename		700534	0					
ANR	700589	ReturnStatement	"return ""undefinedfilename"" ;"	353:37:9601:9627	700534	24	True				
ANR	700590	PrimaryExpression	"""undefinedfilename"""		700534	0					
ANR	700591	Label	case gs_error_undefinedresult :	354:4:9633:9662	700534	25	True				
ANR	700592	Identifier	gs_error_undefinedresult		700534	0					
ANR	700593	ReturnStatement	"return ""undefinedresult"" ;"	354:35:9664:9688	700534	26	True				
ANR	700594	PrimaryExpression	"""undefinedresult"""		700534	0					
ANR	700595	Label	case gs_error_VMerror :	355:4:9694:9715	700534	27	True				
ANR	700596	Identifier	gs_error_VMerror		700534	0					
ANR	700597	ReturnStatement	"return ""vmerror"" ;"	355:27:9717:9733	700534	28	True				
ANR	700598	PrimaryExpression	"""vmerror"""		700534	0					
ANR	700599	Label	case gs_error_unregistered :	356:4:9739:9765	700534	29	True				
ANR	700600	Identifier	gs_error_unregistered		700534	0					
ANR	700601	ReturnStatement	"return ""unregistered"" ;"	356:32:9767:9788	700534	30	True				
ANR	700602	PrimaryExpression	"""unregistered"""		700534	0					
ANR	700603	Label	case gs_error_hit_detected :	357:4:9794:9820	700534	31	True				
ANR	700604	Identifier	gs_error_hit_detected		700534	0					
ANR	700605	ReturnStatement	"return ""hit_detected"" ;"	357:32:9822:9843	700534	32	True				
ANR	700606	PrimaryExpression	"""hit_detected"""		700534	0					
ANR	700607	Label	case gs_error_Fatal :	358:4:9849:9868	700534	33	True				
ANR	700608	Identifier	gs_error_Fatal		700534	0					
ANR	700609	ReturnStatement	"return ""Fatal"" ;"	358:25:9870:9884	700534	34	True				
ANR	700610	PrimaryExpression	"""Fatal"""		700534	0					
ANR	700611	ReturnType	const char *		700534	1					
ANR	700612	Identifier	gs_errstr		700534	2					
ANR	700613	ParameterList	int code		700534	3					
ANR	700614	Parameter	int code	338:22:8936:8943	700534	0	True				
ANR	700615	ParameterType	int		700534	0					
ANR	700616	Identifier	code		700534	1					
ANR	700617	CFGEntryNode	ENTRY		700534		True				
ANR	700618	CFGExitNode	EXIT		700534		True				
ANR	700619	Symbol	code		700534						
ANR	700620	Function	gs_memmove	368:0:10195:11564							
ANR	700621	FunctionDef	"gs_memmove (void * dest , const void * src , size_t len)"		700620	0					
ANR	700622	CompoundStatement		370:0:10254:11564	700620	0					
ANR	700623	IfStatement	if ( ! len )		700620	0					
ANR	700624	Condition	! len	371:8:10264:10267	700620	0	True				
ANR	700625	UnaryOperationExpression	! len		700620	0					
ANR	700626	UnaryOperator	!		700620	0					
ANR	700627	Identifier	len		700620	1					
ANR	700628	ReturnStatement	return ( void * ) src ;	372:8:10278:10296	700620	1	True				
ANR	700629	CastExpression	( void * ) src		700620	0					
ANR	700630	CastTarget	void *		700620	0					
ANR	700631	Identifier	src		700620	1					
ANR	700632	Statement	define	373:1:10299:10304	700620	1	True				
ANR	700633	Statement	bdest	373:8:10306:10310	700620	2	True				
ANR	700634	Statement	(	373:14:10312:10312	700620	3	True				
ANR	700635	Statement	(	373:15:10313:10313	700620	4	True				
ANR	700636	Statement	byte	373:16:10314:10317	700620	5	True				
ANR	700637	Statement	*	373:21:10319:10319	700620	6	True				
ANR	700638	Statement	)	373:22:10320:10320	700620	7	True				
ANR	700639	Statement	dest	373:23:10321:10324	700620	8	True				
ANR	700640	Statement	)	373:27:10325:10325	700620	9	True				
ANR	700641	Statement	define	374:1:10328:10333	700620	10	True				
ANR	700642	Statement	bsrc	374:8:10335:10338	700620	11	True				
ANR	700643	Statement	(	374:13:10340:10340	700620	12	True				
ANR	700644	Statement	(	374:14:10341:10341	700620	13	True				
ANR	700645	Statement	const	374:15:10342:10346	700620	14	True				
ANR	700646	Statement	byte	374:21:10348:10351	700620	15	True				
ANR	700647	Statement	*	374:26:10353:10353	700620	16	True				
ANR	700648	Statement	)	374:27:10354:10354	700620	17	True				
ANR	700649	Statement	src	374:28:10355:10357	700620	18	True				
ANR	700650	Statement	)	374:31:10358:10358	700620	19	True				
ANR	700651	IfStatement	"if ( PTR_LE ( bdest , bsrc ) )"		700620	20					
ANR	700652	Condition	"PTR_LE ( bdest , bsrc )"	377:8:10491:10509	700620	0	True				
ANR	700653	CallExpression	"PTR_LE ( bdest , bsrc )"		700620	0					
ANR	700654	Callee	PTR_LE		700620	0					
ANR	700655	Identifier	PTR_LE		700620	0					
ANR	700656	ArgumentList	bdest		700620	1					
ANR	700657	Argument	bdest		700620	0					
ANR	700658	Identifier	bdest		700620	0					
ANR	700659	Argument	bsrc		700620	1					
ANR	700660	Identifier	bsrc		700620	0					
ANR	700661	CompoundStatement		9:17:276:305	700620	1					
ANR	700662	Statement	register	378:8:10522:10529	700620	0	True				
ANR	700663	IdentifierDeclStatement	byte * end = bdest + ( len - 1 ) ;	378:17:10531:10560	700620	1	True				
ANR	700664	IdentifierDecl	* end = bdest + ( len - 1 )		700620	0					
ANR	700665	IdentifierDeclType	byte *		700620	0					
ANR	700666	Identifier	end		700620	1					
ANR	700667	AssignmentExpression	* end = bdest + ( len - 1 )		700620	2		=			
ANR	700668	Identifier	end		700620	0					
ANR	700669	AdditiveExpression	bdest + ( len - 1 )		700620	1		+			
ANR	700670	Identifier	bdest		700620	0					
ANR	700671	AdditiveExpression	len - 1		700620	1		-			
ANR	700672	Identifier	len		700620	0					
ANR	700673	PrimaryExpression	1		700620	1					
ANR	700674	IfStatement	"if ( PTR_LE ( bsrc , end ) )"		700620	2					
ANR	700675	Condition	"PTR_LE ( bsrc , end )"	380:12:10575:10591	700620	0	True				
ANR	700676	CallExpression	"PTR_LE ( bsrc , end )"		700620	0					
ANR	700677	Callee	PTR_LE		700620	0					
ANR	700678	Identifier	PTR_LE		700620	0					
ANR	700679	ArgumentList	bsrc		700620	1					
ANR	700680	Argument	bsrc		700620	0					
ANR	700681	Identifier	bsrc		700620	0					
ANR	700682	Argument	end		700620	1					
ANR	700683	Identifier	end		700620	0					
ANR	700684	CompoundStatement		14:21:466:482	700620	1					
ANR	700685	Statement	register	382:12:10666:10673	700620	0	True				
ANR	700686	IdentifierDeclStatement	const byte * from = bsrc ;	382:21:10675:10698	700620	1	True				
ANR	700687	IdentifierDecl	* from = bsrc		700620	0					
ANR	700688	IdentifierDeclType	const byte *		700620	0					
ANR	700689	Identifier	from		700620	1					
ANR	700690	AssignmentExpression	* from = bsrc		700620	2		=			
ANR	700691	Identifier	bsrc		700620	0					
ANR	700692	Identifier	bsrc		700620	1					
ANR	700693	Statement	register	383:12:10712:10719	700620	2	True				
ANR	700694	IdentifierDeclStatement	byte * to = bdest ;	383:21:10721:10737	700620	3	True				
ANR	700695	IdentifierDecl	* to = bdest		700620	0					
ANR	700696	IdentifierDeclType	byte *		700620	0					
ANR	700697	Identifier	to		700620	1					
ANR	700698	AssignmentExpression	* to = bdest		700620	2		=			
ANR	700699	Identifier	bdest		700620	0					
ANR	700700	Identifier	bdest		700620	1					
ANR	700701	ForStatement	for ( ; ; )		700620	4					
ANR	700702	CompoundStatement		16:21:506:506	700620	0					
ANR	700703	ExpressionStatement	* to = * from	386:16:10779:10790	700620	0	True				
ANR	700704	AssignmentExpression	* to = * from		700620	0		=			
ANR	700705	UnaryOperationExpression	* to		700620	0					
ANR	700706	UnaryOperator	*		700620	0					
ANR	700707	Identifier	to		700620	1					
ANR	700708	UnaryOperationExpression	* from		700620	1					
ANR	700709	UnaryOperator	*		700620	0					
ANR	700710	Identifier	from		700620	1					
ANR	700711	IfStatement	if ( to >= end )		700620	1					
ANR	700712	Condition	to >= end	387:20:10812:10820	700620	0	True				
ANR	700713	RelationalExpression	to >= end		700620	0		>=			
ANR	700714	Identifier	to		700620	0					
ANR	700715	Identifier	end		700620	1					
ANR	700716	ReturnStatement	return ( void * ) src ;	388:20:10864:10882	700620	1	True				
ANR	700717	CastExpression	( void * ) src		700620	0					
ANR	700718	CastTarget	void *		700620	0					
ANR	700719	Identifier	src		700620	1					
ANR	700720	ExpressionStatement	to ++	389:16:10900:10904	700620	2	True				
ANR	700721	PostIncDecOperationExpression	to ++		700620	0					
ANR	700722	Identifier	to		700620	0					
ANR	700723	IncDec	++		700620	1					
ANR	700724	ExpressionStatement	from ++	390:16:10922:10928	700620	3	True				
ANR	700725	PostIncDecOperationExpression	from ++		700620	0					
ANR	700726	Identifier	from		700620	0					
ANR	700727	IncDec	++		700620	1					
ANR	700728	ElseStatement	else		700620	0					
ANR	700729	CompoundStatement		25:17:729:764	700620	0					
ANR	700730	Statement	register	394:8:10975:10982	700620	0	True				
ANR	700731	IdentifierDeclStatement	const byte * from = bsrc + ( len - 1 ) ;	394:17:10984:11019	700620	1	True				
ANR	700732	IdentifierDecl	* from = bsrc + ( len - 1 )		700620	0					
ANR	700733	IdentifierDeclType	const byte *		700620	0					
ANR	700734	Identifier	from		700620	1					
ANR	700735	AssignmentExpression	* from = bsrc + ( len - 1 )		700620	2		=			
ANR	700736	Identifier	from		700620	0					
ANR	700737	AdditiveExpression	bsrc + ( len - 1 )		700620	1		+			
ANR	700738	Identifier	bsrc		700620	0					
ANR	700739	AdditiveExpression	len - 1		700620	1		-			
ANR	700740	Identifier	len		700620	0					
ANR	700741	PrimaryExpression	1		700620	1					
ANR	700742	IfStatement	"if ( PTR_LE ( bdest , from ) )"		700620	2					
ANR	700743	Condition	"PTR_LE ( bdest , from )"	396:12:11034:11052	700620	0	True				
ANR	700744	CallExpression	"PTR_LE ( bdest , from )"		700620	0					
ANR	700745	Callee	PTR_LE		700620	0					
ANR	700746	Identifier	PTR_LE		700620	0					
ANR	700747	ArgumentList	bdest		700620	1					
ANR	700748	Argument	bdest		700620	0					
ANR	700749	Identifier	bdest		700620	0					
ANR	700750	Argument	from		700620	1					
ANR	700751	Identifier	from		700620	0					
ANR	700752	CompoundStatement		30:21:926:954	700620	1					
ANR	700753	Statement	register	398:12:11127:11134	700620	0	True				
ANR	700754	IdentifierDeclStatement	const byte * end = bsrc ;	398:21:11136:11158	700620	1	True				
ANR	700755	IdentifierDecl	* end = bsrc		700620	0					
ANR	700756	IdentifierDeclType	const byte *		700620	0					
ANR	700757	Identifier	end		700620	1					
ANR	700758	AssignmentExpression	* end = bsrc		700620	2		=			
ANR	700759	Identifier	bsrc		700620	0					
ANR	700760	Identifier	bsrc		700620	1					
ANR	700761	Statement	register	399:12:11172:11179	700620	2	True				
ANR	700762	IdentifierDeclStatement	byte * to = bdest + ( len - 1 ) ;	399:21:11181:11209	700620	3	True				
ANR	700763	IdentifierDecl	* to = bdest + ( len - 1 )		700620	0					
ANR	700764	IdentifierDeclType	byte *		700620	0					
ANR	700765	Identifier	to		700620	1					
ANR	700766	AssignmentExpression	* to = bdest + ( len - 1 )		700620	2		=			
ANR	700767	Identifier	to		700620	0					
ANR	700768	AdditiveExpression	bdest + ( len - 1 )		700620	1		+			
ANR	700769	Identifier	bdest		700620	0					
ANR	700770	AdditiveExpression	len - 1		700620	1		-			
ANR	700771	Identifier	len		700620	0					
ANR	700772	PrimaryExpression	1		700620	1					
ANR	700773	ForStatement	for ( ; ; )		700620	4					
ANR	700774	CompoundStatement		32:21:978:978	700620	0					
ANR	700775	ExpressionStatement	* to = * from	402:16:11251:11262	700620	0	True				
ANR	700776	AssignmentExpression	* to = * from		700620	0		=			
ANR	700777	UnaryOperationExpression	* to		700620	0					
ANR	700778	UnaryOperator	*		700620	0					
ANR	700779	Identifier	to		700620	1					
ANR	700780	UnaryOperationExpression	* from		700620	1					
ANR	700781	UnaryOperator	*		700620	0					
ANR	700782	Identifier	from		700620	1					
ANR	700783	IfStatement	if ( from <= end )		700620	1					
ANR	700784	Condition	from <= end	403:20:11284:11294	700620	0	True				
ANR	700785	RelationalExpression	from <= end		700620	0		<=			
ANR	700786	Identifier	from		700620	0					
ANR	700787	Identifier	end		700620	1					
ANR	700788	ReturnStatement	return ( void * ) src ;	404:20:11344:11362	700620	1	True				
ANR	700789	CastExpression	( void * ) src		700620	0					
ANR	700790	CastTarget	void *		700620	0					
ANR	700791	Identifier	src		700620	1					
ANR	700792	ExpressionStatement	to --	405:16:11380:11384	700620	2	True				
ANR	700793	PostIncDecOperationExpression	to --		700620	0					
ANR	700794	Identifier	to		700620	0					
ANR	700795	IncDec	--		700620	1					
ANR	700796	ExpressionStatement	from --	406:16:11402:11408	700620	3	True				
ANR	700797	PostIncDecOperationExpression	from --		700620	0					
ANR	700798	Identifier	from		700620	0					
ANR	700799	IncDec	--		700620	1					
ANR	700800	IdentifierDeclStatement	"undef bdest undef bsrc memcpy ( dest , src , len ) ;"	410:1:11441:11538	700620	21	True				
ANR	700801	IdentifierDecl	"memcpy ( dest , src , len )"		700620	0					
ANR	700802	IdentifierDeclType	undef bdest undef bsrc		700620	0					
ANR	700803	Identifier	memcpy		700620	1					
ANR	700804	Expression	"dest , src , len"		700620	2					
ANR	700805	Identifier	dest		700620	0					
ANR	700806	Expression	"src , len"		700620	1					
ANR	700807	Identifier	src		700620	0					
ANR	700808	Identifier	len		700620	1					
ANR	700809	ReturnStatement	return ( void * ) src ;	414:4:11544:11562	700620	22	True				
ANR	700810	CastExpression	( void * ) src		700620	0					
ANR	700811	CastTarget	void *		700620	0					
ANR	700812	Identifier	src		700620	1					
ANR	700813	ReturnType	void *		700620	1					
ANR	700814	Identifier	gs_memmove		700620	2					
ANR	700815	ParameterList	"void * dest , const void * src , size_t len"		700620	3					
ANR	700816	Parameter	void * dest	369:11:10213:10222	700620	0	True				
ANR	700817	ParameterType	void *		700620	0					
ANR	700818	Identifier	dest		700620	1					
ANR	700819	Parameter	const void * src	369:23:10225:10239	700620	1	True				
ANR	700820	ParameterType	const void *		700620	0					
ANR	700821	Identifier	src		700620	1					
ANR	700822	Parameter	size_t len	369:40:10242:10251	700620	2	True				
ANR	700823	ParameterType	size_t		700620	0					
ANR	700824	Identifier	len		700620	1					
ANR	700825	CFGEntryNode	ENTRY		700620		True				
ANR	700826	CFGExitNode	EXIT		700620		True				
ANR	700827	InfiniteForNode	true		700620		True				
ANR	700828	InfiniteForNode	true		700620		True				
ANR	700829	Symbol	PTR_LE		700620						
ANR	700830	Symbol	* to		700620						
ANR	700831	Symbol	len		700620						
ANR	700832	Symbol	src		700620						
ANR	700833	Symbol	memcpy		700620						
ANR	700834	Symbol	bdest		700620						
ANR	700835	Symbol	end		700620						
ANR	700836	Symbol	from		700620						
ANR	700837	Symbol	to		700620						
ANR	700838	Symbol	dest		700620						
ANR	700839	Symbol	bsrc		700620						
ANR	700840	Symbol	* from		700620						
ANR	700841	Function	gs_memcpy	419:0:11626:12172							
ANR	700842	FunctionDef	"gs_memcpy (void * dest , const void * src , size_t len)"		700841	0					
ANR	700843	CompoundStatement		421:0:11684:12172	700841	0					
ANR	700844	IfStatement	if ( len > 0 )		700841	0					
ANR	700845	Condition	len > 0	422:8:11694:11700	700841	0	True				
ANR	700846	RelationalExpression	len > 0		700841	0		>			
ANR	700847	Identifier	len		700841	0					
ANR	700848	PrimaryExpression	0		700841	1					
ANR	700849	CompoundStatement		8:17:246:262	700841	1					
ANR	700850	Statement	define	423:1:11706:11711	700841	0	True				
ANR	700851	Statement	bdest	423:8:11713:11717	700841	1	True				
ANR	700852	Statement	(	423:14:11719:11719	700841	2	True				
ANR	700853	Statement	(	423:15:11720:11720	700841	3	True				
ANR	700854	Statement	byte	423:16:11721:11724	700841	4	True				
ANR	700855	Statement	*	423:21:11726:11726	700841	5	True				
ANR	700856	Statement	)	423:22:11727:11727	700841	6	True				
ANR	700857	Statement	dest	423:23:11728:11731	700841	7	True				
ANR	700858	Statement	)	423:27:11732:11732	700841	8	True				
ANR	700859	Statement	define	424:1:11735:11740	700841	9	True				
ANR	700860	Statement	bsrc	424:8:11742:11745	700841	10	True				
ANR	700861	Statement	(	424:13:11747:11747	700841	11	True				
ANR	700862	Statement	(	424:14:11748:11748	700841	12	True				
ANR	700863	Statement	const	424:15:11749:11753	700841	13	True				
ANR	700864	Statement	byte	424:21:11755:11758	700841	14	True				
ANR	700865	Statement	*	424:26:11760:11760	700841	15	True				
ANR	700866	Statement	)	424:27:11761:11761	700841	16	True				
ANR	700867	Statement	src	424:28:11762:11764	700841	17	True				
ANR	700868	Statement	)	424:31:11765:11765	700841	18	True				
ANR	700869	Statement	register	426:8:11832:11839	700841	19	True				
ANR	700870	IdentifierDeclStatement	byte * end = bdest + ( len - 1 ) ;	426:17:11841:11870	700841	20	True				
ANR	700871	IdentifierDecl	* end = bdest + ( len - 1 )		700841	0					
ANR	700872	IdentifierDeclType	byte *		700841	0					
ANR	700873	Identifier	end		700841	1					
ANR	700874	AssignmentExpression	* end = bdest + ( len - 1 )		700841	2		=			
ANR	700875	Identifier	end		700841	0					
ANR	700876	AdditiveExpression	bdest + ( len - 1 )		700841	1		+			
ANR	700877	Identifier	bdest		700841	0					
ANR	700878	AdditiveExpression	len - 1		700841	1		-			
ANR	700879	Identifier	len		700841	0					
ANR	700880	PrimaryExpression	1		700841	1					
ANR	700881	Statement	register	427:8:11880:11887	700841	21	True				
ANR	700882	IdentifierDeclStatement	const byte * from = bsrc ;	427:17:11889:11912	700841	22	True				
ANR	700883	IdentifierDecl	* from = bsrc		700841	0					
ANR	700884	IdentifierDeclType	const byte *		700841	0					
ANR	700885	Identifier	from		700841	1					
ANR	700886	AssignmentExpression	* from = bsrc		700841	2		=			
ANR	700887	Identifier	bsrc		700841	0					
ANR	700888	Identifier	bsrc		700841	1					
ANR	700889	Statement	register	428:8:11922:11929	700841	23	True				
ANR	700890	IdentifierDeclStatement	byte * to = bdest ;	428:17:11931:11947	700841	24	True				
ANR	700891	IdentifierDecl	* to = bdest		700841	0					
ANR	700892	IdentifierDeclType	byte *		700841	0					
ANR	700893	Identifier	to		700841	1					
ANR	700894	AssignmentExpression	* to = bdest		700841	2		=			
ANR	700895	Identifier	bdest		700841	0					
ANR	700896	Identifier	bdest		700841	1					
ANR	700897	ForStatement	for ( ; ; )		700841	25					
ANR	700898	CompoundStatement		10:17:282:282	700841	0					
ANR	700899	ExpressionStatement	* to = * from	431:12:11981:11992	700841	0	True				
ANR	700900	AssignmentExpression	* to = * from		700841	0		=			
ANR	700901	UnaryOperationExpression	* to		700841	0					
ANR	700902	UnaryOperator	*		700841	0					
ANR	700903	Identifier	to		700841	1					
ANR	700904	UnaryOperationExpression	* from		700841	1					
ANR	700905	UnaryOperator	*		700841	0					
ANR	700906	Identifier	from		700841	1					
ANR	700907	IfStatement	if ( to >= end )		700841	1					
ANR	700908	Condition	to >= end	432:16:12010:12018	700841	0	True				
ANR	700909	RelationalExpression	to >= end		700841	0		>=			
ANR	700910	Identifier	to		700841	0					
ANR	700911	Identifier	end		700841	1					
ANR	700912	BreakStatement	break ;	433:16:12062:12067	700841	1	True				
ANR	700913	ExpressionStatement	to ++	434:12:12081:12085	700841	2	True				
ANR	700914	PostIncDecOperationExpression	to ++		700841	0					
ANR	700915	Identifier	to		700841	0					
ANR	700916	IncDec	++		700841	1					
ANR	700917	ExpressionStatement	from ++	435:12:12099:12105	700841	3	True				
ANR	700918	PostIncDecOperationExpression	from ++		700841	0					
ANR	700919	Identifier	from		700841	0					
ANR	700920	IncDec	++		700841	1					
ANR	700921	Statement	undef	438:1:12124:12128	700841	1	True				
ANR	700922	Statement	bdest	438:7:12130:12134	700841	2	True				
ANR	700923	Statement	undef	439:1:12137:12141	700841	3	True				
ANR	700924	Statement	bsrc	439:7:12143:12146	700841	4	True				
ANR	700925	ReturnStatement	return ( void * ) src ;	440:4:12152:12170	700841	5	True				
ANR	700926	CastExpression	( void * ) src		700841	0					
ANR	700927	CastTarget	void *		700841	0					
ANR	700928	Identifier	src		700841	1					
ANR	700929	ReturnType	void *		700841	1					
ANR	700930	Identifier	gs_memcpy		700841	2					
ANR	700931	ParameterList	"void * dest , const void * src , size_t len"		700841	3					
ANR	700932	Parameter	void * dest	420:10:11643:11652	700841	0	True				
ANR	700933	ParameterType	void *		700841	0					
ANR	700934	Identifier	dest		700841	1					
ANR	700935	Parameter	const void * src	420:22:11655:11669	700841	1	True				
ANR	700936	ParameterType	const void *		700841	0					
ANR	700937	Identifier	src		700841	1					
ANR	700938	Parameter	size_t len	420:39:11672:11681	700841	2	True				
ANR	700939	ParameterType	size_t		700841	0					
ANR	700940	Identifier	len		700841	1					
ANR	700941	CFGEntryNode	ENTRY		700841		True				
ANR	700942	CFGExitNode	EXIT		700841		True				
ANR	700943	InfiniteForNode	true		700841		True				
ANR	700944	Symbol	* to		700841						
ANR	700945	Symbol	len		700841						
ANR	700946	Symbol	src		700841						
ANR	700947	Symbol	bdest		700841						
ANR	700948	Symbol	end		700841						
ANR	700949	Symbol	from		700841						
ANR	700950	Symbol	to		700841						
ANR	700951	Symbol	dest		700841						
ANR	700952	Symbol	bsrc		700841						
ANR	700953	Symbol	* from		700841						
ANR	700954	Function	gs_memchr	447:0:12335:12627							
ANR	700955	FunctionDef	"gs_memchr (const void * ptr , int ch , size_t len)"		700954	0					
ANR	700956	CompoundStatement		449:0:12389:12627	700954	0					
ANR	700957	IfStatement	if ( len > 0 )		700954	0					
ANR	700958	Condition	len > 0	450:8:12399:12405	700954	0	True				
ANR	700959	RelationalExpression	len > 0		700954	0		>			
ANR	700960	Identifier	len		700954	0					
ANR	700961	PrimaryExpression	0		700954	1					
ANR	700962	CompoundStatement		4:17:75:91	700954	1					
ANR	700963	Statement	register	451:8:12418:12425	700954	0	True				
ANR	700964	IdentifierDeclStatement	const char * p = ptr ;	451:17:12427:12446	700954	1	True				
ANR	700965	IdentifierDecl	* p = ptr		700954	0					
ANR	700966	IdentifierDeclType	const char *		700954	0					
ANR	700967	Identifier	p		700954	1					
ANR	700968	AssignmentExpression	* p = ptr		700954	2		=			
ANR	700969	Identifier	ptr		700954	0					
ANR	700970	Identifier	ptr		700954	1					
ANR	700971	Statement	register	452:8:12456:12463	700954	2	True				
ANR	700972	IdentifierDeclStatement	uint count = len ;	452:17:12465:12481	700954	3	True				
ANR	700973	IdentifierDecl	count = len		700954	0					
ANR	700974	IdentifierDeclType	uint		700954	0					
ANR	700975	Identifier	count		700954	1					
ANR	700976	AssignmentExpression	count = len		700954	2		=			
ANR	700977	Identifier	len		700954	0					
ANR	700978	Identifier	len		700954	1					
ANR	700979	DoStatement	do		700954	4					
ANR	700980	CompoundStatement		6:11:105:105	700954	0					
ANR	700981	IfStatement	if ( * p == ( char ) ch )		700954	0					
ANR	700982	Condition	* p == ( char ) ch	455:16:12513:12526	700954	0	True				
ANR	700983	EqualityExpression	* p == ( char ) ch		700954	0		==			
ANR	700984	UnaryOperationExpression	* p		700954	0					
ANR	700985	UnaryOperator	*		700954	0					
ANR	700986	Identifier	p		700954	1					
ANR	700987	CastExpression	( char ) ch		700954	1					
ANR	700988	CastTarget	char		700954	0					
ANR	700989	Identifier	ch		700954	1					
ANR	700990	ReturnStatement	return ( void * ) p ;	456:16:12545:12561	700954	1	True				
ANR	700991	CastExpression	( void * ) p		700954	0					
ANR	700992	CastTarget	void *		700954	0					
ANR	700993	Identifier	p		700954	1					
ANR	700994	ExpressionStatement	p ++	457:12:12575:12578	700954	1	True				
ANR	700995	PostIncDecOperationExpression	p ++		700954	0					
ANR	700996	Identifier	p		700954	0					
ANR	700997	IncDec	++		700954	1					
ANR	700998	Condition	-- count	458:17:12597:12603	700954	1	True				
ANR	700999	UnaryExpression	-- count		700954	0					
ANR	701000	IncDec	--		700954	0					
ANR	701001	Identifier	count		700954	1					
ANR	701002	ReturnStatement	return 0 ;	460:4:12617:12625	700954	1	True				
ANR	701003	PrimaryExpression	0		700954	0					
ANR	701004	ReturnType	void *		700954	1					
ANR	701005	Identifier	gs_memchr		700954	2					
ANR	701006	ParameterList	"const void * ptr , int ch , size_t len"		700954	3					
ANR	701007	Parameter	const void * ptr	448:10:12352:12366	700954	0	True				
ANR	701008	ParameterType	const void *		700954	0					
ANR	701009	Identifier	ptr		700954	1					
ANR	701010	Parameter	int ch	448:27:12369:12374	700954	1	True				
ANR	701011	ParameterType	int		700954	0					
ANR	701012	Identifier	ch		700954	1					
ANR	701013	Parameter	size_t len	448:35:12377:12386	700954	2	True				
ANR	701014	ParameterType	size_t		700954	0					
ANR	701015	Identifier	len		700954	1					
ANR	701016	CFGEntryNode	ENTRY		700954		True				
ANR	701017	CFGExitNode	EXIT		700954		True				
ANR	701018	Symbol	p		700954						
ANR	701019	Symbol	len		700954						
ANR	701020	Symbol	ch		700954						
ANR	701021	Symbol	count		700954						
ANR	701022	Symbol	* p		700954						
ANR	701023	Symbol	ptr		700954						
ANR	701024	Function	gs_memset	467:0:12790:13959							
ANR	701025	FunctionDef	"gs_memset (void * dest , register int ch , size_t len)"		701024	0					
ANR	701026	CompoundStatement		469:0:12848:13959	701024	0					
ANR	701027	Statement	register	474:4:12985:12992	701024	0	True				
ANR	701028	IdentifierDeclStatement	char * p = dest ;	474:13:12994:13008	701024	1	True				
ANR	701029	IdentifierDecl	* p = dest		701024	0					
ANR	701030	IdentifierDeclType	char *		701024	0					
ANR	701031	Identifier	p		701024	1					
ANR	701032	AssignmentExpression	* p = dest		701024	2		=			
ANR	701033	Identifier	dest		701024	0					
ANR	701034	Identifier	dest		701024	1					
ANR	701035	Statement	register	475:4:13014:13021	701024	2	True				
ANR	701036	IdentifierDeclStatement	size_t count = len ;	475:13:13023:13041	701024	3	True				
ANR	701037	IdentifierDecl	count = len		701024	0					
ANR	701038	IdentifierDeclType	size_t		701024	0					
ANR	701039	Identifier	count		701024	1					
ANR	701040	AssignmentExpression	count = len		701024	2		=			
ANR	701041	Identifier	len		701024	0					
ANR	701042	Identifier	len		701024	1					
ANR	701043	ExpressionStatement	ch &= 255	477:4:13048:13057	701024	4	True				
ANR	701044	AssignmentExpression	ch &= 255		701024	0		&=			
ANR	701045	Identifier	ch		701024	0					
ANR	701046	PrimaryExpression	255		701024	1					
ANR	701047	IfStatement	if ( len >= sizeof ( long ) * 3 )		701024	5					
ANR	701048	Condition	len >= sizeof ( long ) * 3	478:8:13067:13089	701024	0	True				
ANR	701049	RelationalExpression	len >= sizeof ( long ) * 3		701024	0		>=			
ANR	701050	Identifier	len		701024	0					
ANR	701051	MultiplicativeExpression	sizeof ( long ) * 3		701024	1		*			
ANR	701052	SizeofExpression	sizeof ( long )		701024	0					
ANR	701053	Sizeof	sizeof		701024	0					
ANR	701054	SizeofOperand	long		701024	1					
ANR	701055	PrimaryExpression	3		701024	1					
ANR	701056	CompoundStatement		11:8:253:303	701024	1					
ANR	701057	IdentifierDeclStatement	long wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch ;	479:8:13102:13152	701024	0	True				
ANR	701058	IdentifierDecl	wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		701024	0					
ANR	701059	IdentifierDeclType	long		701024	0					
ANR	701060	Identifier	wd		701024	1					
ANR	701061	AssignmentExpression	wd = ( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		701024	2		=			
ANR	701062	Identifier	wd		701024	0					
ANR	701063	InclusiveOrExpression	( ch << 24 ) | ( ch << 16 ) | ( ch << 8 ) | ch		701024	1		|			
ANR	701064	ShiftExpression	ch << 24		701024	0		<<			
ANR	701065	Identifier	ch		701024	0					
ANR	701066	PrimaryExpression	24		701024	1					
ANR	701067	InclusiveOrExpression	( ch << 16 ) | ( ch << 8 ) | ch		701024	1		|			
ANR	701068	ShiftExpression	ch << 16		701024	0		<<			
ANR	701069	Identifier	ch		701024	0					
ANR	701070	PrimaryExpression	16		701024	1					
ANR	701071	InclusiveOrExpression	( ch << 8 ) | ch		701024	1		|			
ANR	701072	ShiftExpression	ch << 8		701024	0		<<			
ANR	701073	Identifier	ch		701024	0					
ANR	701074	PrimaryExpression	8		701024	1					
ANR	701075	Identifier	ch		701024	1					
ANR	701076	WhileStatement	"while ( ALIGNMENT_MOD ( p , sizeof ( long ) ) )"		701024	1					
ANR	701077	Condition	"ALIGNMENT_MOD ( p , sizeof ( long ) )"	481:15:13170:13199	701024	0	True				
ANR	701078	CallExpression	"ALIGNMENT_MOD ( p , sizeof ( long ) )"		701024	0					
ANR	701079	Callee	ALIGNMENT_MOD		701024	0					
ANR	701080	Identifier	ALIGNMENT_MOD		701024	0					
ANR	701081	ArgumentList	p		701024	1					
ANR	701082	Argument	p		701024	0					
ANR	701083	Identifier	p		701024	0					
ANR	701084	Argument	sizeof ( long )		701024	1					
ANR	701085	SizeofExpression	sizeof ( long )		701024	0					
ANR	701086	Sizeof	sizeof		701024	0					
ANR	701087	SizeofOperand	long		701024	1					
ANR	701088	ExpressionStatement	"* p ++ = ( char ) ch , -- count"	482:12:13214:13238	701024	1	True				
ANR	701089	Expression	"* p ++ = ( char ) ch , -- count"		701024	0					
ANR	701090	AssignmentExpression	* p ++ = ( char ) ch		701024	0		=			
ANR	701091	UnaryOperationExpression	* p ++		701024	0					
ANR	701092	UnaryOperator	*		701024	0					
ANR	701093	PostIncDecOperationExpression	p ++		701024	1					
ANR	701094	Identifier	p		701024	0					
ANR	701095	IncDec	++		701024	1					
ANR	701096	CastExpression	( char ) ch		701024	1					
ANR	701097	CastTarget	char		701024	0					
ANR	701098	Identifier	ch		701024	1					
ANR	701099	UnaryExpression	-- count		701024	1					
ANR	701100	IncDec	--		701024	0					
ANR	701101	Identifier	count		701024	1					
ANR	701102	ForStatement	"for ( ; count >= sizeof ( long ) * 4 ; p += sizeof ( long ) * 4 , count -= sizeof ( long ) * 4 )"		701024	2					
ANR	701103	Condition	count >= sizeof ( long ) * 4	483:15:13255:13279	701024	0	True				
ANR	701104	RelationalExpression	count >= sizeof ( long ) * 4		701024	0		>=			
ANR	701105	Identifier	count		701024	0					
ANR	701106	MultiplicativeExpression	sizeof ( long ) * 4		701024	1		*			
ANR	701107	SizeofExpression	sizeof ( long )		701024	0					
ANR	701108	Sizeof	sizeof		701024	0					
ANR	701109	SizeofOperand	long		701024	1					
ANR	701110	PrimaryExpression	4		701024	1					
ANR	701111	Expression	"p += sizeof ( long ) * 4 , count -= sizeof ( long ) * 4"	484:13:13295:13342	701024	1	True				
ANR	701112	AssignmentExpression	p += sizeof ( long ) * 4		701024	0		+=			
ANR	701113	Identifier	p		701024	0					
ANR	701114	MultiplicativeExpression	sizeof ( long ) * 4		701024	1		*			
ANR	701115	SizeofExpression	sizeof ( long )		701024	0					
ANR	701116	Sizeof	sizeof		701024	0					
ANR	701117	SizeofOperand	long		701024	1					
ANR	701118	PrimaryExpression	4		701024	1					
ANR	701119	AssignmentExpression	count -= sizeof ( long ) * 4		701024	1		-=			
ANR	701120	Identifier	count		701024	0					
ANR	701121	MultiplicativeExpression	sizeof ( long ) * 4		701024	1		*			
ANR	701122	SizeofExpression	sizeof ( long )		701024	0					
ANR	701123	Sizeof	sizeof		701024	0					
ANR	701124	SizeofOperand	long		701024	1					
ANR	701125	PrimaryExpression	4		701024	1					
ANR	701126	ExpressionStatement	( ( long * ) p ) [ 3 ] = ( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd	486:12:13371:13457	701024	2	True				
ANR	701127	AssignmentExpression	( ( long * ) p ) [ 3 ] = ( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		701024	0		=			
ANR	701128	ArrayIndexing	( ( long * ) p ) [ 3 ]		701024	0					
ANR	701129	CastExpression	( long * ) p		701024	0					
ANR	701130	CastTarget	long *		701024	0					
ANR	701131	Identifier	p		701024	1					
ANR	701132	PrimaryExpression	3		701024	1					
ANR	701133	AssignmentExpression	( ( long * ) p ) [ 2 ] = ( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		701024	1		=			
ANR	701134	ArrayIndexing	( ( long * ) p ) [ 2 ]		701024	0					
ANR	701135	CastExpression	( long * ) p		701024	0					
ANR	701136	CastTarget	long *		701024	0					
ANR	701137	Identifier	p		701024	1					
ANR	701138	PrimaryExpression	2		701024	1					
ANR	701139	AssignmentExpression	( ( long * ) p ) [ 1 ] = ( ( long * ) p ) [ 0 ] = wd		701024	1		=			
ANR	701140	ArrayIndexing	( ( long * ) p ) [ 1 ]		701024	0					
ANR	701141	CastExpression	( long * ) p		701024	0					
ANR	701142	CastTarget	long *		701024	0					
ANR	701143	Identifier	p		701024	1					
ANR	701144	PrimaryExpression	1		701024	1					
ANR	701145	AssignmentExpression	( ( long * ) p ) [ 0 ] = wd		701024	1		=			
ANR	701146	ArrayIndexing	( ( long * ) p ) [ 0 ]		701024	0					
ANR	701147	CastExpression	( long * ) p		701024	0					
ANR	701148	CastTarget	long *		701024	0					
ANR	701149	Identifier	p		701024	1					
ANR	701150	PrimaryExpression	0		701024	1					
ANR	701151	Identifier	wd		701024	1					
ANR	701152	SwitchStatement	switch ( count >> ARCH_LOG2_SIZEOF_LONG )		701024	3					
ANR	701153	Condition	count >> ARCH_LOG2_SIZEOF_LONG	488:16:13475:13504	701024	0	True				
ANR	701154	ShiftExpression	count >> ARCH_LOG2_SIZEOF_LONG		701024	0		>>			
ANR	701155	Identifier	count		701024	0					
ANR	701156	Identifier	ARCH_LOG2_SIZEOF_LONG		701024	1					
ANR	701157	CompoundStatement		20:48:658:658	701024	1					
ANR	701158	Label	case 3 :	489:8:13517:13523	701024	0	True				
ANR	701159	ExpressionStatement	* ( ( long * ) p ) = wd	490:12:13537:13554	701024	1	True				
ANR	701160	AssignmentExpression	* ( ( long * ) p ) = wd		701024	0		=			
ANR	701161	UnaryOperationExpression	* ( ( long * ) p )		701024	0					
ANR	701162	UnaryOperator	*		701024	0					
ANR	701163	CastExpression	( long * ) p		701024	1					
ANR	701164	CastTarget	long *		701024	0					
ANR	701165	Identifier	p		701024	1					
ANR	701166	Identifier	wd		701024	1					
ANR	701167	ExpressionStatement	p += sizeof ( long )	490:31:13556:13573	701024	2	True				
ANR	701168	AssignmentExpression	p += sizeof ( long )		701024	0		+=			
ANR	701169	Identifier	p		701024	0					
ANR	701170	SizeofExpression	sizeof ( long )		701024	1					
ANR	701171	Sizeof	sizeof		701024	0					
ANR	701172	SizeofOperand	long		701024	1					
ANR	701173	Label	case 2 :	491:8:13583:13589	701024	3	True				
ANR	701174	ExpressionStatement	* ( ( long * ) p ) = wd	492:12:13603:13620	701024	4	True				
ANR	701175	AssignmentExpression	* ( ( long * ) p ) = wd		701024	0		=			
ANR	701176	UnaryOperationExpression	* ( ( long * ) p )		701024	0					
ANR	701177	UnaryOperator	*		701024	0					
ANR	701178	CastExpression	( long * ) p		701024	1					
ANR	701179	CastTarget	long *		701024	0					
ANR	701180	Identifier	p		701024	1					
ANR	701181	Identifier	wd		701024	1					
ANR	701182	ExpressionStatement	p += sizeof ( long )	492:31:13622:13639	701024	5	True				
ANR	701183	AssignmentExpression	p += sizeof ( long )		701024	0		+=			
ANR	701184	Identifier	p		701024	0					
ANR	701185	SizeofExpression	sizeof ( long )		701024	1					
ANR	701186	Sizeof	sizeof		701024	0					
ANR	701187	SizeofOperand	long		701024	1					
ANR	701188	Label	case 1 :	493:8:13649:13655	701024	6	True				
ANR	701189	ExpressionStatement	* ( ( long * ) p ) = wd	494:12:13669:13686	701024	7	True				
ANR	701190	AssignmentExpression	* ( ( long * ) p ) = wd		701024	0		=			
ANR	701191	UnaryOperationExpression	* ( ( long * ) p )		701024	0					
ANR	701192	UnaryOperator	*		701024	0					
ANR	701193	CastExpression	( long * ) p		701024	1					
ANR	701194	CastTarget	long *		701024	0					
ANR	701195	Identifier	p		701024	1					
ANR	701196	Identifier	wd		701024	1					
ANR	701197	ExpressionStatement	p += sizeof ( long )	494:31:13688:13705	701024	8	True				
ANR	701198	AssignmentExpression	p += sizeof ( long )		701024	0		+=			
ANR	701199	Identifier	p		701024	0					
ANR	701200	SizeofExpression	sizeof ( long )		701024	1					
ANR	701201	Sizeof	sizeof		701024	0					
ANR	701202	SizeofOperand	long		701024	1					
ANR	701203	ExpressionStatement	count &= sizeof ( long ) - 1	495:12:13719:13744	701024	9	True				
ANR	701204	AssignmentExpression	count &= sizeof ( long ) - 1		701024	0		&=			
ANR	701205	Identifier	count		701024	0					
ANR	701206	AdditiveExpression	sizeof ( long ) - 1		701024	1		-			
ANR	701207	SizeofExpression	sizeof ( long )		701024	0					
ANR	701208	Sizeof	sizeof		701024	0					
ANR	701209	SizeofOperand	long		701024	1					
ANR	701210	PrimaryExpression	1		701024	1					
ANR	701211	Label	case 0 :	496:8:13754:13760	701024	10	True				
ANR	701212	Label	default :	497:8:13770:13777	701024	11	True				
ANR	701213	Identifier	default		701024	0					
ANR	701214	ExpressionStatement	DO_NOTHING	498:12:13825:13835	701024	12	True				
ANR	701215	Identifier	DO_NOTHING		701024	0					
ANR	701216	ForStatement	for ( ; count > 0 ; -- count )		701024	6					
ANR	701217	Condition	count > 0	502:11:13897:13905	701024	0	True				
ANR	701218	RelationalExpression	count > 0		701024	0		>			
ANR	701219	Identifier	count		701024	0					
ANR	701220	PrimaryExpression	0		701024	1					
ANR	701221	UnaryExpression	-- count	502:22:13908:13914	701024	1	True				
ANR	701222	IncDec	--		701024	0					
ANR	701223	Identifier	count		701024	1					
ANR	701224	ExpressionStatement	* p ++ = ( char ) ch	503:8:13925:13940	701024	2	True				
ANR	701225	AssignmentExpression	* p ++ = ( char ) ch		701024	0		=			
ANR	701226	UnaryOperationExpression	* p ++		701024	0					
ANR	701227	UnaryOperator	*		701024	0					
ANR	701228	PostIncDecOperationExpression	p ++		701024	1					
ANR	701229	Identifier	p		701024	0					
ANR	701230	IncDec	++		701024	1					
ANR	701231	CastExpression	( char ) ch		701024	1					
ANR	701232	CastTarget	char		701024	0					
ANR	701233	Identifier	ch		701024	1					
ANR	701234	ReturnStatement	return dest ;	504:4:13946:13957	701024	7	True				
ANR	701235	Identifier	dest		701024	0					
ANR	701236	ReturnType	void *		701024	1					
ANR	701237	Identifier	gs_memset		701024	2					
ANR	701238	ParameterList	"void * dest , register int ch , size_t len"		701024	3					
ANR	701239	Parameter	void * dest	468:10:12807:12816	701024	0	True				
ANR	701240	ParameterType	void *		701024	0					
ANR	701241	Identifier	dest		701024	1					
ANR	701242	Parameter	register int ch	468:22:12819:12833	701024	1	True				
ANR	701243	ParameterType	register int		701024	0					
ANR	701244	Identifier	ch		701024	1					
ANR	701245	Parameter	size_t len	468:39:12836:12845	701024	2	True				
ANR	701246	ParameterType	size_t		701024	0					
ANR	701247	Identifier	len		701024	1					
ANR	701248	CFGEntryNode	ENTRY		701024		True				
ANR	701249	CFGExitNode	EXIT		701024		True				
ANR	701250	Symbol	p		701024						
ANR	701251	Symbol	len		701024						
ANR	701252	Symbol	ch		701024						
ANR	701253	Symbol	* p ++		701024						
ANR	701254	Symbol	count		701024						
ANR	701255	Symbol	* ( ( long * ) p )		701024						
ANR	701256	Symbol	ALIGNMENT_MOD		701024						
ANR	701257	Symbol	* p		701024						
ANR	701258	Symbol	dest		701024						
ANR	701259	Symbol	wd		701024						
ANR	701260	Symbol	ARCH_LOG2_SIZEOF_LONG		701024						
ANR	701261	Function	gs_realloc	510:0:14085:14588							
ANR	701262	FunctionDef	"gs_realloc (void * old_ptr , size_t old_size , size_t new_size)"		701261	0					
ANR	701263	CompoundStatement		512:0:14152:14588	701261	0					
ANR	701264	IdentifierDeclStatement	void * new_ptr ;	513:4:14158:14171	701261	0	True				
ANR	701265	IdentifierDecl	* new_ptr		701261	0					
ANR	701266	IdentifierDeclType	void *		701261	0					
ANR	701267	Identifier	new_ptr		701261	1					
ANR	701268	IfStatement	if ( new_size )		701261	1					
ANR	701269	Condition	new_size	515:8:14182:14189	701261	0	True				
ANR	701270	Identifier	new_size		701261	0					
ANR	701271	CompoundStatement		4:18:39:39	701261	1					
ANR	701272	ExpressionStatement	new_ptr = malloc ( new_size )	516:8:14202:14228	701261	0	True				
ANR	701273	AssignmentExpression	new_ptr = malloc ( new_size )		701261	0		=			
ANR	701274	Identifier	new_ptr		701261	0					
ANR	701275	CallExpression	malloc ( new_size )		701261	1					
ANR	701276	Callee	malloc		701261	0					
ANR	701277	Identifier	malloc		701261	0					
ANR	701278	ArgumentList	new_size		701261	1					
ANR	701279	Argument	new_size		701261	0					
ANR	701280	Identifier	new_size		701261	0					
ANR	701281	IfStatement	if ( new_ptr == NULL )		701261	1					
ANR	701282	Condition	new_ptr == NULL	517:12:14242:14256	701261	0	True				
ANR	701283	EqualityExpression	new_ptr == NULL		701261	0		==			
ANR	701284	Identifier	new_ptr		701261	0					
ANR	701285	Identifier	NULL		701261	1					
ANR	701286	ReturnStatement	return NULL ;	518:12:14271:14282	701261	1	True				
ANR	701287	Identifier	NULL		701261	0					
ANR	701288	ElseStatement	else		701261	0					
ANR	701289	ExpressionStatement	new_ptr = NULL	520:8:14303:14317	701261	0	True				
ANR	701290	AssignmentExpression	new_ptr = NULL		701261	0		=			
ANR	701291	Identifier	new_ptr		701261	0					
ANR	701292	Identifier	NULL		701261	1					
ANR	701293	IfStatement	if ( old_ptr != NULL )		701261	2					
ANR	701294	Condition	old_ptr != NULL	523:8:14428:14442	701261	0	True				
ANR	701295	EqualityExpression	old_ptr != NULL		701261	0		!=			
ANR	701296	Identifier	old_ptr		701261	0					
ANR	701297	Identifier	NULL		701261	1					
ANR	701298	CompoundStatement		12:25:292:292	701261	1					
ANR	701299	IfStatement	if ( new_ptr != NULL )		701261	0					
ANR	701300	Condition	new_ptr != NULL	524:12:14459:14473	701261	0	True				
ANR	701301	EqualityExpression	new_ptr != NULL		701261	0		!=			
ANR	701302	Identifier	new_ptr		701261	0					
ANR	701303	Identifier	NULL		701261	1					
ANR	701304	ExpressionStatement	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"	525:12:14488:14537	701261	1	True				
ANR	701305	CallExpression	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"		701261	0					
ANR	701306	Callee	memcpy		701261	0					
ANR	701307	Identifier	memcpy		701261	0					
ANR	701308	ArgumentList	new_ptr		701261	1					
ANR	701309	Argument	new_ptr		701261	0					
ANR	701310	Identifier	new_ptr		701261	0					
ANR	701311	Argument	old_ptr		701261	1					
ANR	701312	Identifier	old_ptr		701261	0					
ANR	701313	Argument	"min ( old_size , new_size )"		701261	2					
ANR	701314	CallExpression	"min ( old_size , new_size )"		701261	0					
ANR	701315	Callee	min		701261	0					
ANR	701316	Identifier	min		701261	0					
ANR	701317	ArgumentList	old_size		701261	1					
ANR	701318	Argument	old_size		701261	0					
ANR	701319	Identifier	old_size		701261	0					
ANR	701320	Argument	new_size		701261	1					
ANR	701321	Identifier	new_size		701261	0					
ANR	701322	ExpressionStatement	free ( old_ptr )	526:8:14547:14560	701261	1	True				
ANR	701323	CallExpression	free ( old_ptr )		701261	0					
ANR	701324	Callee	free		701261	0					
ANR	701325	Identifier	free		701261	0					
ANR	701326	ArgumentList	old_ptr		701261	1					
ANR	701327	Argument	old_ptr		701261	0					
ANR	701328	Identifier	old_ptr		701261	0					
ANR	701329	ReturnStatement	return new_ptr ;	528:4:14572:14586	701261	3	True				
ANR	701330	Identifier	new_ptr		701261	0					
ANR	701331	ReturnType	void *		701261	1					
ANR	701332	Identifier	gs_realloc		701261	2					
ANR	701333	ParameterList	"void * old_ptr , size_t old_size , size_t new_size"		701261	3					
ANR	701334	Parameter	void * old_ptr	511:11:14103:14115	701261	0	True				
ANR	701335	ParameterType	void *		701261	0					
ANR	701336	Identifier	old_ptr		701261	1					
ANR	701337	Parameter	size_t old_size	511:26:14118:14132	701261	1	True				
ANR	701338	ParameterType	size_t		701261	0					
ANR	701339	Identifier	old_size		701261	1					
ANR	701340	Parameter	size_t new_size	511:43:14135:14149	701261	2	True				
ANR	701341	ParameterType	size_t		701261	0					
ANR	701342	Identifier	new_size		701261	1					
ANR	701343	CFGEntryNode	ENTRY		701261		True				
ANR	701344	CFGExitNode	EXIT		701261		True				
ANR	701345	Symbol	old_size		701261						
ANR	701346	Symbol	malloc		701261						
ANR	701347	Symbol	NULL		701261						
ANR	701348	Symbol	min		701261						
ANR	701349	Symbol	new_size		701261						
ANR	701350	Symbol	old_ptr		701261						
ANR	701351	Symbol	new_ptr		701261						
ANR	701352	Function	debug_print_string_hex_nomem	536:0:14699:14856							
ANR	701353	FunctionDef	"debug_print_string_hex_nomem (const byte * chrs , uint len)"		701352	0					
ANR	701354	CompoundStatement		538:0:14762:14856	701352	0					
ANR	701355	IdentifierDeclStatement	uint i ;	539:4:14768:14774	701352	0	True				
ANR	701356	IdentifierDecl	i		701352	0					
ANR	701357	IdentifierDeclType	uint		701352	0					
ANR	701358	Identifier	i		701352	1					
ANR	701359	ForStatement	for ( i = 0 ; i < len ; i ++ )		701352	1					
ANR	701360	ForInit	i = 0 ;	541:9:14786:14791	701352	0	True				
ANR	701361	AssignmentExpression	i = 0		701352	0		=			
ANR	701362	Identifier	i		701352	0					
ANR	701363	PrimaryExpression	0		701352	1					
ANR	701364	Condition	i < len	541:16:14793:14799	701352	1	True				
ANR	701365	RelationalExpression	i < len		701352	0		<			
ANR	701366	Identifier	i		701352	0					
ANR	701367	Identifier	len		701352	1					
ANR	701368	PostIncDecOperationExpression	i ++	541:25:14802:14804	701352	2	True				
ANR	701369	Identifier	i		701352	0					
ANR	701370	IncDec	++		701352	1					
ANR	701371	ExpressionStatement	"dprintf1 ( ""%02x"" , chrs [ i ] )"	542:8:14815:14840	701352	3	True				
ANR	701372	CallExpression	"dprintf1 ( ""%02x"" , chrs [ i ] )"		701352	0					
ANR	701373	Callee	dprintf1		701352	0					
ANR	701374	Identifier	dprintf1		701352	0					
ANR	701375	ArgumentList	"""%02x"""		701352	1					
ANR	701376	Argument	"""%02x"""		701352	0					
ANR	701377	PrimaryExpression	"""%02x"""		701352	0					
ANR	701378	Argument	chrs [ i ]		701352	1					
ANR	701379	ArrayIndexing	chrs [ i ]		701352	0					
ANR	701380	Identifier	chrs		701352	0					
ANR	701381	Identifier	i		701352	1					
ANR	701382	ExpressionStatement	dflush ( )	543:4:14846:14854	701352	2	True				
ANR	701383	CallExpression	dflush ( )		701352	0					
ANR	701384	Callee	dflush		701352	0					
ANR	701385	Identifier	dflush		701352	0					
ANR	701386	ArgumentList			701352	1					
ANR	701387	ReturnType	void		701352	1					
ANR	701388	Identifier	debug_print_string_hex_nomem		701352	2					
ANR	701389	ParameterList	"const byte * chrs , uint len"		701352	3					
ANR	701390	Parameter	const byte * chrs	537:29:14733:14749	701352	0	True				
ANR	701391	ParameterType	const byte *		701352	0					
ANR	701392	Identifier	chrs		701352	1					
ANR	701393	Parameter	uint len	537:48:14752:14759	701352	1	True				
ANR	701394	ParameterType	uint		701352	0					
ANR	701395	Identifier	len		701352	1					
ANR	701396	CFGEntryNode	ENTRY		701352		True				
ANR	701397	CFGExitNode	EXIT		701352		True				
ANR	701398	Symbol	* chrs		701352						
ANR	701399	Symbol	* i		701352						
ANR	701400	Symbol	len		701352						
ANR	701401	Symbol	chrs		701352						
ANR	701402	Symbol	i		701352						
ANR	701403	Function	debug_dump_bytes	548:0:14897:15297							
ANR	701404	FunctionDef	"debug_dump_bytes (const gs_memory_t * mem , const byte * from , const byte * to , const char * msg)"		701403	0					
ANR	701405	CompoundStatement		550:0:14996:15297	701403	0					
ANR	701406	IdentifierDeclStatement	const byte * p = from ;	551:4:15002:15022	701403	0	True				
ANR	701407	IdentifierDecl	* p = from		701403	0					
ANR	701408	IdentifierDeclType	const byte *		701403	0					
ANR	701409	Identifier	p		701403	1					
ANR	701410	AssignmentExpression	* p = from		701403	2		=			
ANR	701411	Identifier	from		701403	0					
ANR	701412	Identifier	from		701403	1					
ANR	701413	IfStatement	if ( from < to && msg )		701403	1					
ANR	701414	Condition	from < to && msg	553:8:15033:15048	701403	0	True				
ANR	701415	AndExpression	from < to && msg		701403	0		&&			
ANR	701416	RelationalExpression	from < to		701403	0		<			
ANR	701417	Identifier	from		701403	0					
ANR	701418	Identifier	to		701403	1					
ANR	701419	Identifier	msg		701403	1					
ANR	701420	ExpressionStatement	"dmprintf1 ( mem , ""%s:\\n"" , msg )"	554:8:15059:15087	701403	1	True				
ANR	701421	CallExpression	"dmprintf1 ( mem , ""%s:\\n"" , msg )"		701403	0					
ANR	701422	Callee	dmprintf1		701403	0					
ANR	701423	Identifier	dmprintf1		701403	0					
ANR	701424	ArgumentList	mem		701403	1					
ANR	701425	Argument	mem		701403	0					
ANR	701426	Identifier	mem		701403	0					
ANR	701427	Argument	"""%s:\\n"""		701403	1					
ANR	701428	PrimaryExpression	"""%s:\\n"""		701403	0					
ANR	701429	Argument	msg		701403	2					
ANR	701430	Identifier	msg		701403	0					
ANR	701431	WhileStatement	while ( p != to )		701403	2					
ANR	701432	Condition	p != to	555:11:15100:15106	701403	0	True				
ANR	701433	EqualityExpression	p != to		701403	0		!=			
ANR	701434	Identifier	p		701403	0					
ANR	701435	Identifier	to		701403	1					
ANR	701436	CompoundStatement		7:8:122:153	701403	1					
ANR	701437	IdentifierDeclStatement	"const byte * q = min ( p + 16 , to ) ;"	556:8:15119:15150	701403	0	True				
ANR	701438	IdentifierDecl	"* q = min ( p + 16 , to )"		701403	0					
ANR	701439	IdentifierDeclType	const byte *		701403	0					
ANR	701440	Identifier	q		701403	1					
ANR	701441	AssignmentExpression	"* q = min ( p + 16 , to )"		701403	2		=			
ANR	701442	Identifier	q		701403	0					
ANR	701443	CallExpression	"min ( p + 16 , to )"		701403	1					
ANR	701444	Callee	min		701403	0					
ANR	701445	Identifier	min		701403	0					
ANR	701446	ArgumentList	p + 16		701403	1					
ANR	701447	Argument	p + 16		701403	0					
ANR	701448	AdditiveExpression	p + 16		701403	0		+			
ANR	701449	Identifier	p		701403	0					
ANR	701450	PrimaryExpression	16		701403	1					
ANR	701451	Argument	to		701403	1					
ANR	701452	Identifier	to		701403	0					
ANR	701453	ExpressionStatement	"dmprintf1 ( mem , ""0x%lx:"" , ( ulong ) p )"	558:8:15161:15196	701403	1	True				
ANR	701454	CallExpression	"dmprintf1 ( mem , ""0x%lx:"" , ( ulong ) p )"		701403	0					
ANR	701455	Callee	dmprintf1		701403	0					
ANR	701456	Identifier	dmprintf1		701403	0					
ANR	701457	ArgumentList	mem		701403	1					
ANR	701458	Argument	mem		701403	0					
ANR	701459	Identifier	mem		701403	0					
ANR	701460	Argument	"""0x%lx:"""		701403	1					
ANR	701461	PrimaryExpression	"""0x%lx:"""		701403	0					
ANR	701462	Argument	( ulong ) p		701403	2					
ANR	701463	CastExpression	( ulong ) p		701403	0					
ANR	701464	CastTarget	ulong		701403	0					
ANR	701465	Identifier	p		701403	1					
ANR	701466	WhileStatement	while ( p != q )		701403	2					
ANR	701467	Condition	p != q	559:15:15213:15218	701403	0	True				
ANR	701468	EqualityExpression	p != q		701403	0		!=			
ANR	701469	Identifier	p		701403	0					
ANR	701470	Identifier	q		701403	1					
ANR	701471	ExpressionStatement	"dmprintf1 ( mem , "" %02x"" , * p ++ )"	560:12:15233:15262	701403	1	True				
ANR	701472	CallExpression	"dmprintf1 ( mem , "" %02x"" , * p ++ )"		701403	0					
ANR	701473	Callee	dmprintf1		701403	0					
ANR	701474	Identifier	dmprintf1		701403	0					
ANR	701475	ArgumentList	mem		701403	1					
ANR	701476	Argument	mem		701403	0					
ANR	701477	Identifier	mem		701403	0					
ANR	701478	Argument	""" %02x"""		701403	1					
ANR	701479	PrimaryExpression	""" %02x"""		701403	0					
ANR	701480	Argument	* p ++		701403	2					
ANR	701481	UnaryOperationExpression	* p ++		701403	0					
ANR	701482	UnaryOperator	*		701403	0					
ANR	701483	PostIncDecOperationExpression	p ++		701403	1					
ANR	701484	Identifier	p		701403	0					
ANR	701485	IncDec	++		701403	1					
ANR	701486	ExpressionStatement	"dmputc ( mem , '\\n' )"	561:8:15272:15289	701403	3	True				
ANR	701487	CallExpression	"dmputc ( mem , '\\n' )"		701403	0					
ANR	701488	Callee	dmputc		701403	0					
ANR	701489	Identifier	dmputc		701403	0					
ANR	701490	ArgumentList	mem		701403	1					
ANR	701491	Argument	mem		701403	0					
ANR	701492	Identifier	mem		701403	0					
ANR	701493	Argument	'\\n'		701403	1					
ANR	701494	PrimaryExpression	'\\n'		701403	0					
ANR	701495	ReturnType	void		701403	1					
ANR	701496	Identifier	debug_dump_bytes		701403	2					
ANR	701497	ParameterList	"const gs_memory_t * mem , const byte * from , const byte * to , const char * msg"		701403	3					
ANR	701498	Parameter	const gs_memory_t * mem	549:17:14919:14940	701403	0	True				
ANR	701499	ParameterType	const gs_memory_t *		701403	0					
ANR	701500	Identifier	mem		701403	1					
ANR	701501	Parameter	const byte * from	549:41:14943:14959	701403	1	True				
ANR	701502	ParameterType	const byte *		701403	0					
ANR	701503	Identifier	from		701403	1					
ANR	701504	Parameter	const byte * to	549:60:14962:14976	701403	2	True				
ANR	701505	ParameterType	const byte *		701403	0					
ANR	701506	Identifier	to		701403	1					
ANR	701507	Parameter	const char * msg	549:77:14979:14993	701403	3	True				
ANR	701508	ParameterType	const char *		701403	0					
ANR	701509	Identifier	msg		701403	1					
ANR	701510	CFGEntryNode	ENTRY		701403		True				
ANR	701511	CFGExitNode	EXIT		701403		True				
ANR	701512	Symbol	msg		701403						
ANR	701513	Symbol	p		701403						
ANR	701514	Symbol	q		701403						
ANR	701515	Symbol	min		701403						
ANR	701516	Symbol	mem		701403						
ANR	701517	Symbol	* p ++		701403						
ANR	701518	Symbol	from		701403						
ANR	701519	Symbol	to		701403						
ANR	701520	Function	debug_dump_bitmap	566:0:15321:15598							
ANR	701521	FunctionDef	"debug_dump_bitmap (const gs_memory_t * mem , const byte * bits , uint raster , uint height , const char * msg)"		701520	0					
ANR	701522	CompoundStatement		568:0:15430:15598	701520	0					
ANR	701523	IdentifierDeclStatement	uint y ;	569:4:15436:15442	701520	0	True				
ANR	701524	IdentifierDecl	y		701520	0					
ANR	701525	IdentifierDeclType	uint		701520	0					
ANR	701526	Identifier	y		701520	1					
ANR	701527	IdentifierDeclStatement	const byte * data = bits ;	570:4:15448:15471	701520	1	True				
ANR	701528	IdentifierDecl	* data = bits		701520	0					
ANR	701529	IdentifierDeclType	const byte *		701520	0					
ANR	701530	Identifier	data		701520	1					
ANR	701531	AssignmentExpression	* data = bits		701520	2		=			
ANR	701532	Identifier	bits		701520	0					
ANR	701533	Identifier	bits		701520	1					
ANR	701534	ForStatement	"for ( y = 0 ; y < height ; ++ y , data += raster )"		701520	2					
ANR	701535	ForInit	y = 0 ;	572:9:15483:15488	701520	0	True				
ANR	701536	AssignmentExpression	y = 0		701520	0		=			
ANR	701537	Identifier	y		701520	0					
ANR	701538	PrimaryExpression	0		701520	1					
ANR	701539	Condition	y < height	572:16:15490:15499	701520	1	True				
ANR	701540	RelationalExpression	y < height		701520	0		<			
ANR	701541	Identifier	y		701520	0					
ANR	701542	Identifier	height		701520	1					
ANR	701543	Expression	"++ y , data += raster"	572:28:15502:15520	701520	2	True				
ANR	701544	UnaryExpression	++ y		701520	0					
ANR	701545	IncDec	++		701520	0					
ANR	701546	Identifier	y		701520	1					
ANR	701547	AssignmentExpression	data += raster		701520	1		+=			
ANR	701548	Identifier	data		701520	0					
ANR	701549	Identifier	raster		701520	1					
ANR	701550	ExpressionStatement	"debug_dump_bytes ( mem , data , data + raster , ( y == 0 ? msg : NULL ) )"	573:8:15531:15596	701520	3	True				
ANR	701551	CallExpression	"debug_dump_bytes ( mem , data , data + raster , ( y == 0 ? msg : NULL ) )"		701520	0					
ANR	701552	Callee	debug_dump_bytes		701520	0					
ANR	701553	Identifier	debug_dump_bytes		701520	0					
ANR	701554	ArgumentList	mem		701520	1					
ANR	701555	Argument	mem		701520	0					
ANR	701556	Identifier	mem		701520	0					
ANR	701557	Argument	data		701520	1					
ANR	701558	Identifier	data		701520	0					
ANR	701559	Argument	data + raster		701520	2					
ANR	701560	AdditiveExpression	data + raster		701520	0		+			
ANR	701561	Identifier	data		701520	0					
ANR	701562	Identifier	raster		701520	1					
ANR	701563	Argument	y == 0 ? msg : NULL		701520	3					
ANR	701564	ConditionalExpression	y == 0 ? msg : NULL		701520	0					
ANR	701565	Condition	y == 0		701520	0					
ANR	701566	EqualityExpression	y == 0		701520	0		==			
ANR	701567	Identifier	y		701520	0					
ANR	701568	PrimaryExpression	0		701520	1					
ANR	701569	Identifier	msg		701520	1					
ANR	701570	Identifier	NULL		701520	2					
ANR	701571	ReturnType	void		701520	1					
ANR	701572	Identifier	debug_dump_bitmap		701520	2					
ANR	701573	ParameterList	"const gs_memory_t * mem , const byte * bits , uint raster , uint height , const char * msg"		701520	3					
ANR	701574	Parameter	const gs_memory_t * mem	567:18:15344:15365	701520	0	True				
ANR	701575	ParameterType	const gs_memory_t *		701520	0					
ANR	701576	Identifier	mem		701520	1					
ANR	701577	Parameter	const byte * bits	567:42:15368:15384	701520	1	True				
ANR	701578	ParameterType	const byte *		701520	0					
ANR	701579	Identifier	bits		701520	1					
ANR	701580	Parameter	uint raster	567:61:15387:15397	701520	2	True				
ANR	701581	ParameterType	uint		701520	0					
ANR	701582	Identifier	raster		701520	1					
ANR	701583	Parameter	uint height	567:74:15400:15410	701520	3	True				
ANR	701584	ParameterType	uint		701520	0					
ANR	701585	Identifier	height		701520	1					
ANR	701586	Parameter	const char * msg	567:87:15413:15427	701520	4	True				
ANR	701587	ParameterType	const char *		701520	0					
ANR	701588	Identifier	msg		701520	1					
ANR	701589	CFGEntryNode	ENTRY		701520		True				
ANR	701590	CFGExitNode	EXIT		701520		True				
ANR	701591	Symbol	msg		701520						
ANR	701592	Symbol	NULL		701520						
ANR	701593	Symbol	mem		701520						
ANR	701594	Symbol	data		701520						
ANR	701595	Symbol	bits		701520						
ANR	701596	Symbol	raster		701520						
ANR	701597	Symbol	y		701520						
ANR	701598	Symbol	height		701520						
ANR	701599	Function	debug_print_string	577:0:15623:15793							
ANR	701600	FunctionDef	"debug_print_string (const gs_memory_t * mem , const byte * chrs , uint len)"		701599	0					
ANR	701601	CompoundStatement		579:0:15700:15793	701599	0					
ANR	701602	IdentifierDeclStatement	uint i ;	580:4:15706:15712	701599	0	True				
ANR	701603	IdentifierDecl	i		701599	0					
ANR	701604	IdentifierDeclType	uint		701599	0					
ANR	701605	Identifier	i		701599	1					
ANR	701606	ForStatement	for ( i = 0 ; i < len ; i ++ )		701599	1					
ANR	701607	ForInit	i = 0 ;	582:9:15724:15729	701599	0	True				
ANR	701608	AssignmentExpression	i = 0		701599	0		=			
ANR	701609	Identifier	i		701599	0					
ANR	701610	PrimaryExpression	0		701599	1					
ANR	701611	Condition	i < len	582:16:15731:15737	701599	1	True				
ANR	701612	RelationalExpression	i < len		701599	0		<			
ANR	701613	Identifier	i		701599	0					
ANR	701614	Identifier	len		701599	1					
ANR	701615	PostIncDecOperationExpression	i ++	582:25:15740:15742	701599	2	True				
ANR	701616	Identifier	i		701599	0					
ANR	701617	IncDec	++		701599	1					
ANR	701618	ExpressionStatement	"dmputc ( mem , chrs [ i ] )"	583:8:15753:15773	701599	3	True				
ANR	701619	CallExpression	"dmputc ( mem , chrs [ i ] )"		701599	0					
ANR	701620	Callee	dmputc		701599	0					
ANR	701621	Identifier	dmputc		701599	0					
ANR	701622	ArgumentList	mem		701599	1					
ANR	701623	Argument	mem		701599	0					
ANR	701624	Identifier	mem		701599	0					
ANR	701625	Argument	chrs [ i ]		701599	1					
ANR	701626	ArrayIndexing	chrs [ i ]		701599	0					
ANR	701627	Identifier	chrs		701599	0					
ANR	701628	Identifier	i		701599	1					
ANR	701629	ExpressionStatement	dmflush ( mem )	584:4:15779:15791	701599	2	True				
ANR	701630	CallExpression	dmflush ( mem )		701599	0					
ANR	701631	Callee	dmflush		701599	0					
ANR	701632	Identifier	dmflush		701599	0					
ANR	701633	ArgumentList	mem		701599	1					
ANR	701634	Argument	mem		701599	0					
ANR	701635	Identifier	mem		701599	0					
ANR	701636	ReturnType	void		701599	1					
ANR	701637	Identifier	debug_print_string		701599	2					
ANR	701638	ParameterList	"const gs_memory_t * mem , const byte * chrs , uint len"		701599	3					
ANR	701639	Parameter	const gs_memory_t * mem	578:19:15647:15668	701599	0	True				
ANR	701640	ParameterType	const gs_memory_t *		701599	0					
ANR	701641	Identifier	mem		701599	1					
ANR	701642	Parameter	const byte * chrs	578:43:15671:15687	701599	1	True				
ANR	701643	ParameterType	const byte *		701599	0					
ANR	701644	Identifier	chrs		701599	1					
ANR	701645	Parameter	uint len	578:62:15690:15697	701599	2	True				
ANR	701646	ParameterType	uint		701599	0					
ANR	701647	Identifier	len		701599	1					
ANR	701648	CFGEntryNode	ENTRY		701599		True				
ANR	701649	CFGExitNode	EXIT		701599		True				
ANR	701650	Symbol	* chrs		701599						
ANR	701651	Symbol	* i		701599						
ANR	701652	Symbol	mem		701599						
ANR	701653	Symbol	len		701599						
ANR	701654	Symbol	chrs		701599						
ANR	701655	Symbol	i		701599						
ANR	701656	Function	debug_print_string_hex	588:0:15836:16021							
ANR	701657	FunctionDef	"debug_print_string_hex (const gs_memory_t * mem , const byte * chrs , uint len)"		701656	0					
ANR	701658	CompoundStatement		590:0:15917:16021	701656	0					
ANR	701659	IdentifierDeclStatement	uint i ;	591:4:15923:15929	701656	0	True				
ANR	701660	IdentifierDecl	i		701656	0					
ANR	701661	IdentifierDeclType	uint		701656	0					
ANR	701662	Identifier	i		701656	1					
ANR	701663	ForStatement	for ( i = 0 ; i < len ; i ++ )		701656	1					
ANR	701664	ForInit	i = 0 ;	593:9:15941:15946	701656	0	True				
ANR	701665	AssignmentExpression	i = 0		701656	0		=			
ANR	701666	Identifier	i		701656	0					
ANR	701667	PrimaryExpression	0		701656	1					
ANR	701668	Condition	i < len	593:16:15948:15954	701656	1	True				
ANR	701669	RelationalExpression	i < len		701656	0		<			
ANR	701670	Identifier	i		701656	0					
ANR	701671	Identifier	len		701656	1					
ANR	701672	PostIncDecOperationExpression	i ++	593:25:15957:15959	701656	2	True				
ANR	701673	Identifier	i		701656	0					
ANR	701674	IncDec	++		701656	1					
ANR	701675	ExpressionStatement	"dmprintf1 ( mem , ""%02x"" , chrs [ i ] )"	594:8:15970:16001	701656	3	True				
ANR	701676	CallExpression	"dmprintf1 ( mem , ""%02x"" , chrs [ i ] )"		701656	0					
ANR	701677	Callee	dmprintf1		701656	0					
ANR	701678	Identifier	dmprintf1		701656	0					
ANR	701679	ArgumentList	mem		701656	1					
ANR	701680	Argument	mem		701656	0					
ANR	701681	Identifier	mem		701656	0					
ANR	701682	Argument	"""%02x"""		701656	1					
ANR	701683	PrimaryExpression	"""%02x"""		701656	0					
ANR	701684	Argument	chrs [ i ]		701656	2					
ANR	701685	ArrayIndexing	chrs [ i ]		701656	0					
ANR	701686	Identifier	chrs		701656	0					
ANR	701687	Identifier	i		701656	1					
ANR	701688	ExpressionStatement	dmflush ( mem )	595:4:16007:16019	701656	2	True				
ANR	701689	CallExpression	dmflush ( mem )		701656	0					
ANR	701690	Callee	dmflush		701656	0					
ANR	701691	Identifier	dmflush		701656	0					
ANR	701692	ArgumentList	mem		701656	1					
ANR	701693	Argument	mem		701656	0					
ANR	701694	Identifier	mem		701656	0					
ANR	701695	ReturnType	void		701656	1					
ANR	701696	Identifier	debug_print_string_hex		701656	2					
ANR	701697	ParameterList	"const gs_memory_t * mem , const byte * chrs , uint len"		701656	3					
ANR	701698	Parameter	const gs_memory_t * mem	589:23:15864:15885	701656	0	True				
ANR	701699	ParameterType	const gs_memory_t *		701656	0					
ANR	701700	Identifier	mem		701656	1					
ANR	701701	Parameter	const byte * chrs	589:47:15888:15904	701656	1	True				
ANR	701702	ParameterType	const byte *		701656	0					
ANR	701703	Identifier	chrs		701656	1					
ANR	701704	Parameter	uint len	589:66:15907:15914	701656	2	True				
ANR	701705	ParameterType	uint		701656	0					
ANR	701706	Identifier	len		701656	1					
ANR	701707	CFGEntryNode	ENTRY		701656		True				
ANR	701708	CFGExitNode	EXIT		701656		True				
ANR	701709	Symbol	* chrs		701656						
ANR	701710	Symbol	* i		701656						
ANR	701711	Symbol	mem		701656						
ANR	701712	Symbol	len		701656						
ANR	701713	Symbol	chrs		701656						
ANR	701714	Symbol	i		701656						
ANR	701715	DeclStmt									
ANR	701716	Decl							BEGIN ulong	BEGIN ulong *	fp_
ANR	701717	Function	imod	620:0:16793:16997							
ANR	701718	FunctionDef	"imod (int m , int n)"		701717	0					
ANR	701719	CompoundStatement		622:0:16816:16997	701717	0					
ANR	701720	IfStatement	if ( n <= 0 )		701717	0					
ANR	701721	Condition	n <= 0	623:8:16826:16831	701717	0	True				
ANR	701722	RelationalExpression	n <= 0		701717	0		<=			
ANR	701723	Identifier	n		701717	0					
ANR	701724	PrimaryExpression	0		701717	1					
ANR	701725	ReturnStatement	return 0 ;	624:8:16842:16850	701717	1	True				
ANR	701726	PrimaryExpression	0		701717	0					
ANR	701727	IfStatement	if ( m >= 0 )		701717	1					
ANR	701728	Condition	m >= 0	625:8:16893:16898	701717	0	True				
ANR	701729	RelationalExpression	m >= 0		701717	0		>=			
ANR	701730	Identifier	m		701717	0					
ANR	701731	PrimaryExpression	0		701717	1					
ANR	701732	ReturnStatement	return m % n ;	626:8:16909:16921	701717	1	True				
ANR	701733	MultiplicativeExpression	m % n		701717	0		%			
ANR	701734	Identifier	m		701717	0					
ANR	701735	Identifier	n		701717	1					
ANR	701736	CompoundStatement		7:8:120:134	701717	2					
ANR	701737	IdentifierDeclStatement	int r = - m % n ;	628:8:16937:16951	701717	0	True				
ANR	701738	IdentifierDecl	r = - m % n		701717	0					
ANR	701739	IdentifierDeclType	int		701717	0					
ANR	701740	Identifier	r		701717	1					
ANR	701741	AssignmentExpression	r = - m % n		701717	2		=			
ANR	701742	Identifier	r		701717	0					
ANR	701743	MultiplicativeExpression	- m % n		701717	1		%			
ANR	701744	UnaryOperationExpression	- m		701717	0					
ANR	701745	UnaryOperator	-		701717	0					
ANR	701746	Identifier	m		701717	1					
ANR	701747	Identifier	n		701717	1					
ANR	701748	ReturnStatement	return ( r == 0 ? 0 : n - r ) ;	630:8:16962:16989	701717	1	True				
ANR	701749	ConditionalExpression	r == 0 ? 0 : n - r		701717	0					
ANR	701750	Condition	r == 0		701717	0					
ANR	701751	EqualityExpression	r == 0		701717	0		==			
ANR	701752	Identifier	r		701717	0					
ANR	701753	PrimaryExpression	0		701717	1					
ANR	701754	PrimaryExpression	0		701717	1					
ANR	701755	AdditiveExpression	n - r		701717	2		-			
ANR	701756	Identifier	n		701717	0					
ANR	701757	Identifier	r		701717	1					
ANR	701758	ReturnType	int		701717	1					
ANR	701759	Identifier	imod		701717	2					
ANR	701760	ParameterList	"int m , int n"		701717	3					
ANR	701761	Parameter	int m	621:5:16802:16806	701717	0	True				
ANR	701762	ParameterType	int		701717	0					
ANR	701763	Identifier	m		701717	1					
ANR	701764	Parameter	int n	621:12:16809:16813	701717	1	True				
ANR	701765	ParameterType	int		701717	0					
ANR	701766	Identifier	n		701717	1					
ANR	701767	CFGEntryNode	ENTRY		701717		True				
ANR	701768	CFGExitNode	EXIT		701717		True				
ANR	701769	Symbol	r		701717						
ANR	701770	Symbol	m		701717						
ANR	701771	Symbol	n		701717						
ANR	701772	Function	igcd	635:0:17039:17312							
ANR	701773	FunctionDef	"igcd (int x , int y)"		701772	0					
ANR	701774	CompoundStatement		637:0:17062:17312	701772	0					
ANR	701775	IdentifierDeclStatement	"int c = x , d = y ;"	638:4:17068:17084	701772	0	True				
ANR	701776	IdentifierDecl	c = x		701772	0					
ANR	701777	IdentifierDeclType	int		701772	0					
ANR	701778	Identifier	c		701772	1					
ANR	701779	AssignmentExpression	c = x		701772	2		=			
ANR	701780	Identifier	x		701772	0					
ANR	701781	Identifier	x		701772	1					
ANR	701782	IdentifierDecl	d = y		701772	1					
ANR	701783	IdentifierDeclType	int		701772	0					
ANR	701784	Identifier	d		701772	1					
ANR	701785	AssignmentExpression	d = y		701772	2		=			
ANR	701786	Identifier	y		701772	0					
ANR	701787	Identifier	y		701772	1					
ANR	701788	IfStatement	if ( c < 0 )		701772	1					
ANR	701789	Condition	c < 0	640:8:17095:17099	701772	0	True				
ANR	701790	RelationalExpression	c < 0		701772	0		<			
ANR	701791	Identifier	c		701772	0					
ANR	701792	PrimaryExpression	0		701772	1					
ANR	701793	ExpressionStatement	c = - c	641:8:17110:17116	701772	1	True				
ANR	701794	AssignmentExpression	c = - c		701772	0		=			
ANR	701795	Identifier	c		701772	0					
ANR	701796	UnaryOperationExpression	- c		701772	1					
ANR	701797	UnaryOperator	-		701772	0					
ANR	701798	Identifier	c		701772	1					
ANR	701799	IfStatement	if ( d < 0 )		701772	2					
ANR	701800	Condition	d < 0	642:8:17126:17130	701772	0	True				
ANR	701801	RelationalExpression	d < 0		701772	0		<			
ANR	701802	Identifier	d		701772	0					
ANR	701803	PrimaryExpression	0		701772	1					
ANR	701804	ExpressionStatement	d = - d	643:8:17141:17147	701772	1	True				
ANR	701805	AssignmentExpression	d = - d		701772	0		=			
ANR	701806	Identifier	d		701772	0					
ANR	701807	UnaryOperationExpression	- d		701772	1					
ANR	701808	UnaryOperator	-		701772	0					
ANR	701809	Identifier	d		701772	1					
ANR	701810	WhileStatement	while ( c != 0 && d != 0 )		701772	3					
ANR	701811	Condition	c != 0 && d != 0	644:11:17160:17175	701772	0	True				
ANR	701812	AndExpression	c != 0 && d != 0		701772	0		&&			
ANR	701813	EqualityExpression	c != 0		701772	0		!=			
ANR	701814	Identifier	c		701772	0					
ANR	701815	PrimaryExpression	0		701772	1					
ANR	701816	EqualityExpression	d != 0		701772	1		!=			
ANR	701817	Identifier	d		701772	0					
ANR	701818	PrimaryExpression	0		701772	1					
ANR	701819	IfStatement	if ( c > d )		701772	1					
ANR	701820	Condition	c > d	645:12:17190:17194	701772	0	True				
ANR	701821	RelationalExpression	c > d		701772	0		>			
ANR	701822	Identifier	c		701772	0					
ANR	701823	Identifier	d		701772	1					
ANR	701824	ExpressionStatement	c %= d	646:12:17209:17215	701772	1	True				
ANR	701825	AssignmentExpression	c %= d		701772	0		%=			
ANR	701826	Identifier	c		701772	0					
ANR	701827	Identifier	d		701772	1					
ANR	701828	ElseStatement	else		701772	0					
ANR	701829	ExpressionStatement	d %= c	648:12:17242:17248	701772	0	True				
ANR	701830	AssignmentExpression	d %= c		701772	0		%=			
ANR	701831	Identifier	d		701772	0					
ANR	701832	Identifier	c		701772	1					
ANR	701833	ReturnStatement	return d + c ;	649:4:17254:17266	701772	4	True				
ANR	701834	AdditiveExpression	d + c		701772	0		+			
ANR	701835	Identifier	d		701772	0					
ANR	701836	Identifier	c		701772	1					
ANR	701837	ReturnType	int		701772	1					
ANR	701838	Identifier	igcd		701772	2					
ANR	701839	ParameterList	"int x , int y"		701772	3					
ANR	701840	Parameter	int x	636:5:17048:17052	701772	0	True				
ANR	701841	ParameterType	int		701772	0					
ANR	701842	Identifier	x		701772	1					
ANR	701843	Parameter	int y	636:12:17055:17059	701772	1	True				
ANR	701844	ParameterType	int		701772	0					
ANR	701845	Identifier	y		701772	1					
ANR	701846	CFGEntryNode	ENTRY		701772		True				
ANR	701847	CFGExitNode	EXIT		701772		True				
ANR	701848	Symbol	c		701772						
ANR	701849	Symbol	d		701772						
ANR	701850	Symbol	x		701772						
ANR	701851	Symbol	y		701772						
ANR	701852	Function	idivmod	653:0:17384:18042							
ANR	701853	FunctionDef	"idivmod (int a , int b , int m)"		701852	0					
ANR	701854	CompoundStatement		655:0:17417:18042	701852	0					
ANR	701855	IdentifierDeclStatement	"int u1 = 0 , u3 = m ;"	660:4:17575:17593	701852	0	True				
ANR	701856	IdentifierDecl	u1 = 0		701852	0					
ANR	701857	IdentifierDeclType	int		701852	0					
ANR	701858	Identifier	u1		701852	1					
ANR	701859	AssignmentExpression	u1 = 0		701852	2		=			
ANR	701860	Identifier	u1		701852	0					
ANR	701861	PrimaryExpression	0		701852	1					
ANR	701862	IdentifierDecl	u3 = m		701852	1					
ANR	701863	IdentifierDeclType	int		701852	0					
ANR	701864	Identifier	u3		701852	1					
ANR	701865	AssignmentExpression	u3 = m		701852	2		=			
ANR	701866	Identifier	m		701852	0					
ANR	701867	Identifier	m		701852	1					
ANR	701868	IdentifierDeclStatement	"int v1 = 1 , v3 = a ;"	661:4:17599:17617	701852	1	True				
ANR	701869	IdentifierDecl	v1 = 1		701852	0					
ANR	701870	IdentifierDeclType	int		701852	0					
ANR	701871	Identifier	v1		701852	1					
ANR	701872	AssignmentExpression	v1 = 1		701852	2		=			
ANR	701873	Identifier	v1		701852	0					
ANR	701874	PrimaryExpression	1		701852	1					
ANR	701875	IdentifierDecl	v3 = a		701852	1					
ANR	701876	IdentifierDeclType	int		701852	0					
ANR	701877	Identifier	v3		701852	1					
ANR	701878	AssignmentExpression	v3 = a		701852	2		=			
ANR	701879	Identifier	a		701852	0					
ANR	701880	Identifier	a		701852	1					
ANR	701881	WhileStatement	while ( v3 )		701852	2					
ANR	701882	Condition	v3	668:11:17876:17877	701852	0	True				
ANR	701883	Identifier	v3		701852	0					
ANR	701884	CompoundStatement		15:8:472:490	701852	1					
ANR	701885	IdentifierDeclStatement	"int q = u3 / v3 , t ;"	669:8:17890:17908	701852	0	True				
ANR	701886	IdentifierDecl	q = u3 / v3		701852	0					
ANR	701887	IdentifierDeclType	int		701852	0					
ANR	701888	Identifier	q		701852	1					
ANR	701889	AssignmentExpression	q = u3 / v3		701852	2		=			
ANR	701890	Identifier	q		701852	0					
ANR	701891	MultiplicativeExpression	u3 / v3		701852	1		/			
ANR	701892	Identifier	u3		701852	0					
ANR	701893	Identifier	v3		701852	1					
ANR	701894	IdentifierDecl	t		701852	1					
ANR	701895	IdentifierDeclType	int		701852	0					
ANR	701896	Identifier	t		701852	1					
ANR	701897	ExpressionStatement	"t = u1 - v1 * q , u1 = v1 , v1 = t"	671:8:17919:17951	701852	1	True				
ANR	701898	Expression	"t = u1 - v1 * q , u1 = v1 , v1 = t"		701852	0					
ANR	701899	AssignmentExpression	t = u1 - v1 * q		701852	0		=			
ANR	701900	Identifier	t		701852	0					
ANR	701901	AdditiveExpression	u1 - v1 * q		701852	1		-			
ANR	701902	Identifier	u1		701852	0					
ANR	701903	MultiplicativeExpression	v1 * q		701852	1		*			
ANR	701904	Identifier	v1		701852	0					
ANR	701905	Identifier	q		701852	1					
ANR	701906	Expression	"u1 = v1 , v1 = t"		701852	1					
ANR	701907	AssignmentExpression	u1 = v1		701852	0		=			
ANR	701908	Identifier	u1		701852	0					
ANR	701909	Identifier	v1		701852	1					
ANR	701910	AssignmentExpression	v1 = t		701852	1		=			
ANR	701911	Identifier	v1		701852	0					
ANR	701912	Identifier	t		701852	1					
ANR	701913	ExpressionStatement	"t = u3 - v3 * q , u3 = v3 , v3 = t"	672:8:17961:17993	701852	2	True				
ANR	701914	Expression	"t = u3 - v3 * q , u3 = v3 , v3 = t"		701852	0					
ANR	701915	AssignmentExpression	t = u3 - v3 * q		701852	0		=			
ANR	701916	Identifier	t		701852	0					
ANR	701917	AdditiveExpression	u3 - v3 * q		701852	1		-			
ANR	701918	Identifier	u3		701852	0					
ANR	701919	MultiplicativeExpression	v3 * q		701852	1		*			
ANR	701920	Identifier	v3		701852	0					
ANR	701921	Identifier	q		701852	1					
ANR	701922	Expression	"u3 = v3 , v3 = t"		701852	1					
ANR	701923	AssignmentExpression	u3 = v3		701852	0		=			
ANR	701924	Identifier	u3		701852	0					
ANR	701925	Identifier	v3		701852	1					
ANR	701926	AssignmentExpression	v3 = t		701852	1		=			
ANR	701927	Identifier	v3		701852	0					
ANR	701928	Identifier	t		701852	1					
ANR	701929	ReturnStatement	"return imod ( u1 * b / igcd ( a , m ) , m ) ;"	674:4:18005:18040	701852	3	True				
ANR	701930	CallExpression	"imod ( u1 * b / igcd ( a , m ) , m )"		701852	0					
ANR	701931	Callee	imod		701852	0					
ANR	701932	Identifier	imod		701852	0					
ANR	701933	ArgumentList	"u1 * b / igcd ( a , m )"		701852	1					
ANR	701934	Argument	"u1 * b / igcd ( a , m )"		701852	0					
ANR	701935	MultiplicativeExpression	"u1 * b / igcd ( a , m )"		701852	0		*			
ANR	701936	Identifier	u1		701852	0					
ANR	701937	MultiplicativeExpression	"b / igcd ( a , m )"		701852	1		/			
ANR	701938	Identifier	b		701852	0					
ANR	701939	CallExpression	"igcd ( a , m )"		701852	1					
ANR	701940	Callee	igcd		701852	0					
ANR	701941	Identifier	igcd		701852	0					
ANR	701942	ArgumentList	a		701852	1					
ANR	701943	Argument	a		701852	0					
ANR	701944	Identifier	a		701852	0					
ANR	701945	Argument	m		701852	1					
ANR	701946	Identifier	m		701852	0					
ANR	701947	Argument	m		701852	1					
ANR	701948	Identifier	m		701852	0					
ANR	701949	ReturnType	int		701852	1					
ANR	701950	Identifier	idivmod		701852	2					
ANR	701951	ParameterList	"int a , int b , int m"		701852	3					
ANR	701952	Parameter	int a	654:8:17396:17400	701852	0	True				
ANR	701953	ParameterType	int		701852	0					
ANR	701954	Identifier	a		701852	1					
ANR	701955	Parameter	int b	654:15:17403:17407	701852	1	True				
ANR	701956	ParameterType	int		701852	0					
ANR	701957	Identifier	b		701852	1					
ANR	701958	Parameter	int m	654:22:17410:17414	701852	2	True				
ANR	701959	ParameterType	int		701852	0					
ANR	701960	Identifier	m		701852	1					
ANR	701961	CFGEntryNode	ENTRY		701852		True				
ANR	701962	CFGExitNode	EXIT		701852		True				
ANR	701963	Symbol	a		701852						
ANR	701964	Symbol	q		701852						
ANR	701965	Symbol	b		701852						
ANR	701966	Symbol	t		701852						
ANR	701967	Symbol	imod		701852						
ANR	701968	Symbol	v1		701852						
ANR	701969	Symbol	u1		701852						
ANR	701970	Symbol	m		701852						
ANR	701971	Symbol	v3		701852						
ANR	701972	Symbol	u3		701852						
ANR	701973	Symbol	igcd		701852						
ANR	701974	Function	ilog2	678:0:18092:18297							
ANR	701975	FunctionDef	ilog2 (int n)		701974	0					
ANR	701976	CompoundStatement		680:0:18109:18297	701974	0					
ANR	701977	IdentifierDeclStatement	"int m = n , l = 0 ;"	681:4:18115:18131	701974	0	True				
ANR	701978	IdentifierDecl	m = n		701974	0					
ANR	701979	IdentifierDeclType	int		701974	0					
ANR	701980	Identifier	m		701974	1					
ANR	701981	AssignmentExpression	m = n		701974	2		=			
ANR	701982	Identifier	n		701974	0					
ANR	701983	Identifier	n		701974	1					
ANR	701984	IdentifierDecl	l = 0		701974	1					
ANR	701985	IdentifierDeclType	int		701974	0					
ANR	701986	Identifier	l		701974	1					
ANR	701987	AssignmentExpression	l = 0		701974	2		=			
ANR	701988	Identifier	l		701974	0					
ANR	701989	PrimaryExpression	0		701974	1					
ANR	701990	WhileStatement	while ( m >= 16 )		701974	1					
ANR	701991	Condition	m >= 16	683:11:18145:18151	701974	0	True				
ANR	701992	RelationalExpression	m >= 16		701974	0		>=			
ANR	701993	Identifier	m		701974	0					
ANR	701994	PrimaryExpression	16		701974	1					
ANR	701995	ExpressionStatement	"m >>= 4 , l += 4"	684:8:18162:18177	701974	1	True				
ANR	701996	Expression	"m >>= 4 , l += 4"		701974	0					
ANR	701997	AssignmentExpression	m >>= 4		701974	0		>>=			
ANR	701998	Identifier	m		701974	0					
ANR	701999	PrimaryExpression	4		701974	1					
ANR	702000	AssignmentExpression	l += 4		701974	1		+=			
ANR	702001	Identifier	l		701974	0					
ANR	702002	PrimaryExpression	4		701974	1					
ANR	702003	ReturnStatement	"return ( m <= 1 ? l : ""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l ) ;"	685:4:18183:18295	701974	2	True				
ANR	702004	ConditionalExpression	"m <= 1 ? l : ""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l"		701974	0					
ANR	702005	Condition	m <= 1		701974	0					
ANR	702006	RelationalExpression	m <= 1		701974	0		<=			
ANR	702007	Identifier	m		701974	0					
ANR	702008	PrimaryExpression	1		701974	1					
ANR	702009	Identifier	l		701974	1					
ANR	702010	AdditiveExpression	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ] + l"		701974	2		+			
ANR	702011	ArrayIndexing	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"" [ m ]"		701974	0					
ANR	702012	PrimaryExpression	"""\\000\\000\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\\003\\003\\003\\003"""		701974	0					
ANR	702013	Identifier	m		701974	1					
ANR	702014	Identifier	l		701974	1					
ANR	702015	ReturnType	int		701974	1					
ANR	702016	Identifier	ilog2		701974	2					
ANR	702017	ParameterList	int n		701974	3					
ANR	702018	Parameter	int n	679:6:18102:18106	701974	0	True				
ANR	702019	ParameterType	int		701974	0					
ANR	702020	Identifier	n		701974	1					
ANR	702021	CFGEntryNode	ENTRY		701974		True				
ANR	702022	CFGExitNode	EXIT		701974		True				
ANR	702023	Symbol	* m		701974						
ANR	702024	Symbol	l		701974						
ANR	702025	Symbol	m		701974						
ANR	702026	Symbol	n		701974						
ANR	702027	ClassDef	<unnamed>	714:0:19089:19171							
ANR	702028	DeclStmt									
ANR	702029	Decl							long	long	mnanb
ANR	702030	Decl							long	long	mnab
ANR	702031	Decl							long	long	manb
ANR	702032	Decl							long	long	mab
ANR	702033	Decl							long	long	mnc
ANR	702034	Decl							long	long	mdq
ANR	702035	Decl							long	long	mde
ANR	702036	Decl							long	long	mds
ANR	702037	Decl							long	long	mqh
ANR	702038	Decl							long	long	mql
ANR	702039	DeclStmt									
ANR	702040	Decl									fmq_stat
ANR	702041	Function	fixed_mult_quo	721:0:19248:23906							
ANR	702042	FunctionDef	"fixed_mult_quo (fixed signed_A , fixed B , fixed C)"		702041	0					
ANR	702043	CompoundStatement		723:0:19303:23906	702041	0					
ANR	702044	IdentifierDeclStatement	ulong A = ( signed_A < 0 ? - signed_A : signed_A ) ;	725:4:19366:19413	702041	0	True				
ANR	702045	IdentifierDecl	A = ( signed_A < 0 ? - signed_A : signed_A )		702041	0					
ANR	702046	IdentifierDeclType	ulong		702041	0					
ANR	702047	Identifier	A		702041	1					
ANR	702048	AssignmentExpression	A = ( signed_A < 0 ? - signed_A : signed_A )		702041	2		=			
ANR	702049	Identifier	A		702041	0					
ANR	702050	ConditionalExpression	signed_A < 0 ? - signed_A : signed_A		702041	1					
ANR	702051	Condition	signed_A < 0		702041	0					
ANR	702052	RelationalExpression	signed_A < 0		702041	0		<			
ANR	702053	Identifier	signed_A		702041	0					
ANR	702054	PrimaryExpression	0		702041	1					
ANR	702055	UnaryOperationExpression	- signed_A		702041	1					
ANR	702056	UnaryOperator	-		702041	0					
ANR	702057	Identifier	signed_A		702041	1					
ANR	702058	Identifier	signed_A		702041	2					
ANR	702059	IdentifierDeclStatement	long msw ;	726:4:19419:19427	702041	1	True				
ANR	702060	IdentifierDecl	msw		702041	0					
ANR	702061	IdentifierDeclType	long		702041	0					
ANR	702062	Identifier	msw		702041	1					
ANR	702063	IdentifierDeclStatement	ulong lsw ;	727:4:19433:19442	702041	2	True				
ANR	702064	IdentifierDecl	lsw		702041	0					
ANR	702065	IdentifierDeclType	ulong		702041	0					
ANR	702066	Identifier	lsw		702041	1					
ANR	702067	IdentifierDeclStatement	ulong p1 ;	728:4:19448:19456	702041	3	True				
ANR	702068	IdentifierDecl	p1		702041	0					
ANR	702069	IdentifierDeclType	ulong		702041	0					
ANR	702070	Identifier	p1		702041	1					
ANR	702071	IfStatement	if ( B <= half_mask )		702041	4					
ANR	702072	Condition	B <= half_mask	730:8:19467:19480	702041	0	True				
ANR	702073	RelationalExpression	B <= half_mask		702041	0		<=			
ANR	702074	Identifier	B		702041	0					
ANR	702075	Identifier	half_mask		702041	1					
ANR	702076	CompoundStatement		8:24:179:179	702041	1					
ANR	702077	IfStatement	if ( A <= half_mask )		702041	0					
ANR	702078	Condition	A <= half_mask	731:12:19497:19510	702041	0	True				
ANR	702079	RelationalExpression	A <= half_mask		702041	0		<=			
ANR	702080	Identifier	A		702041	0					
ANR	702081	Identifier	half_mask		702041	1					
ANR	702082	CompoundStatement		11:12:252:274	702041	1					
ANR	702083	IdentifierDeclStatement	ulong P = A * B ;	732:12:19527:19542	702041	0	True				
ANR	702084	IdentifierDecl	P = A * B		702041	0					
ANR	702085	IdentifierDeclType	ulong		702041	0					
ANR	702086	Identifier	P		702041	1					
ANR	702087	AssignmentExpression	P = A * B		702041	2		=			
ANR	702088	Identifier	P		702041	0					
ANR	702089	MultiplicativeExpression	A * B		702041	1		*			
ANR	702090	Identifier	A		702041	0					
ANR	702091	Identifier	B		702041	1					
ANR	702092	IdentifierDeclStatement	fixed Q = P / ( ulong ) C ;	733:12:19556:19578	702041	1	True				
ANR	702093	IdentifierDecl	Q = P / ( ulong ) C		702041	0					
ANR	702094	IdentifierDeclType	fixed		702041	0					
ANR	702095	Identifier	Q		702041	1					
ANR	702096	AssignmentExpression	Q = P / ( ulong ) C		702041	2		=			
ANR	702097	Identifier	Q		702041	0					
ANR	702098	MultiplicativeExpression	P / ( ulong ) C		702041	1		/			
ANR	702099	Identifier	P		702041	0					
ANR	702100	CastExpression	( ulong ) C		702041	1					
ANR	702101	CastTarget	ulong		702041	0					
ANR	702102	Identifier	C		702041	1					
ANR	702103	ExpressionStatement	mincr ( mnanb )	735:12:19593:19605	702041	2	True				
ANR	702104	CallExpression	mincr ( mnanb )		702041	0					
ANR	702105	Callee	mincr		702041	0					
ANR	702106	Identifier	mincr		702041	0					
ANR	702107	ArgumentList	mnanb		702041	1					
ANR	702108	Argument	mnanb		702041	0					
ANR	702109	Identifier	mnanb		702041	0					
ANR	702110	ReturnStatement	return ( signed_A >= 0 ? Q : Q * C == P ? - Q : ~Q ) ;	737:12:19692:19754	702041	3	True				
ANR	702111	ConditionalExpression	signed_A >= 0 ? Q : Q * C == P ? - Q : ~Q		702041	0					
ANR	702112	Condition	signed_A >= 0		702041	0					
ANR	702113	RelationalExpression	signed_A >= 0		702041	0		>=			
ANR	702114	Identifier	signed_A		702041	0					
ANR	702115	PrimaryExpression	0		702041	1					
ANR	702116	Identifier	Q		702041	1					
ANR	702117	ConditionalExpression	Q * C == P ? - Q : ~Q		702041	2					
ANR	702118	Condition	Q * C == P		702041	0					
ANR	702119	EqualityExpression	Q * C == P		702041	0		==			
ANR	702120	MultiplicativeExpression	Q * C		702041	0		*			
ANR	702121	Identifier	Q		702041	0					
ANR	702122	Identifier	C		702041	1					
ANR	702123	Identifier	P		702041	1					
ANR	702124	UnaryOperationExpression	- Q		702041	1					
ANR	702125	UnaryOperator	-		702041	0					
ANR	702126	Identifier	Q		702041	1					
ANR	702127	Identifier	~Q		702041	2					
ANR	702128	ExpressionStatement	lsw = ( A & half_mask ) * B	743:8:19901:19926	702041	1	True				
ANR	702129	AssignmentExpression	lsw = ( A & half_mask ) * B		702041	0		=			
ANR	702130	Identifier	lsw		702041	0					
ANR	702131	MultiplicativeExpression	( A & half_mask ) * B		702041	1		*			
ANR	702132	BitAndExpression	A & half_mask		702041	0		&			
ANR	702133	Identifier	A		702041	0					
ANR	702134	Identifier	half_mask		702041	1					
ANR	702135	Identifier	B		702041	1					
ANR	702136	ExpressionStatement	p1 = ( A >> half_bits ) * B	744:8:19936:19961	702041	2	True				
ANR	702137	AssignmentExpression	p1 = ( A >> half_bits ) * B		702041	0		=			
ANR	702138	Identifier	p1		702041	0					
ANR	702139	MultiplicativeExpression	( A >> half_bits ) * B		702041	1		*			
ANR	702140	ShiftExpression	A >> half_bits		702041	0		>>			
ANR	702141	Identifier	A		702041	0					
ANR	702142	Identifier	half_bits		702041	1					
ANR	702143	Identifier	B		702041	1					
ANR	702144	IfStatement	if ( C <= half_mask )		702041	3					
ANR	702145	Condition	C <= half_mask	745:12:19975:19988	702041	0	True				
ANR	702146	RelationalExpression	C <= half_mask		702041	0		<=			
ANR	702147	Identifier	C		702041	0					
ANR	702148	Identifier	half_mask		702041	1					
ANR	702149	CompoundStatement		27:12:867:899	702041	1					
ANR	702150	IdentifierDeclStatement	fixed q0 = ( p1 += lsw >> half_bits ) / C ;	746:12:20005:20044	702041	0	True				
ANR	702151	IdentifierDecl	q0 = ( p1 += lsw >> half_bits ) / C		702041	0					
ANR	702152	IdentifierDeclType	fixed		702041	0					
ANR	702153	Identifier	q0		702041	1					
ANR	702154	AssignmentExpression	q0 = ( p1 += lsw >> half_bits ) / C		702041	2		=			
ANR	702155	Identifier	q0		702041	0					
ANR	702156	MultiplicativeExpression	( p1 += lsw >> half_bits ) / C		702041	1		/			
ANR	702157	AssignmentExpression	p1 += lsw >> half_bits		702041	0		+=			
ANR	702158	Identifier	p1		702041	0					
ANR	702159	ShiftExpression	lsw >> half_bits		702041	1		>>			
ANR	702160	Identifier	lsw		702041	0					
ANR	702161	Identifier	half_bits		702041	1					
ANR	702162	Identifier	C		702041	1					
ANR	702163	IdentifierDeclStatement	ulong rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask ) ;	747:12:20058:20118	702041	1	True				
ANR	702164	IdentifierDecl	rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		702041	0					
ANR	702165	IdentifierDeclType	ulong		702041	0					
ANR	702166	Identifier	rem		702041	1					
ANR	702167	AssignmentExpression	rem = ( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		702041	2		=			
ANR	702168	Identifier	rem		702041	0					
ANR	702169	AdditiveExpression	( ( p1 - C * q0 ) << half_bits ) + ( lsw & half_mask )		702041	1		+			
ANR	702170	ShiftExpression	( p1 - C * q0 ) << half_bits		702041	0		<<			
ANR	702171	AdditiveExpression	p1 - C * q0		702041	0		-			
ANR	702172	Identifier	p1		702041	0					
ANR	702173	MultiplicativeExpression	C * q0		702041	1		*			
ANR	702174	Identifier	C		702041	0					
ANR	702175	Identifier	q0		702041	1					
ANR	702176	Identifier	half_bits		702041	1					
ANR	702177	BitAndExpression	lsw & half_mask		702041	1		&			
ANR	702178	Identifier	lsw		702041	0					
ANR	702179	Identifier	half_mask		702041	1					
ANR	702180	IdentifierDeclStatement	ulong q1 = rem / ( ulong ) C ;	748:12:20132:20157	702041	2	True				
ANR	702181	IdentifierDecl	q1 = rem / ( ulong ) C		702041	0					
ANR	702182	IdentifierDeclType	ulong		702041	0					
ANR	702183	Identifier	q1		702041	1					
ANR	702184	AssignmentExpression	q1 = rem / ( ulong ) C		702041	2		=			
ANR	702185	Identifier	q1		702041	0					
ANR	702186	MultiplicativeExpression	rem / ( ulong ) C		702041	1		/			
ANR	702187	Identifier	rem		702041	0					
ANR	702188	CastExpression	( ulong ) C		702041	1					
ANR	702189	CastTarget	ulong		702041	0					
ANR	702190	Identifier	C		702041	1					
ANR	702191	IdentifierDeclStatement	fixed Q = ( q0 << half_bits ) + q1 ;	749:12:20171:20203	702041	3	True				
ANR	702192	IdentifierDecl	Q = ( q0 << half_bits ) + q1		702041	0					
ANR	702193	IdentifierDeclType	fixed		702041	0					
ANR	702194	Identifier	Q		702041	1					
ANR	702195	AssignmentExpression	Q = ( q0 << half_bits ) + q1		702041	2		=			
ANR	702196	Identifier	Q		702041	0					
ANR	702197	AdditiveExpression	( q0 << half_bits ) + q1		702041	1		+			
ANR	702198	ShiftExpression	q0 << half_bits		702041	0		<<			
ANR	702199	Identifier	q0		702041	0					
ANR	702200	Identifier	half_bits		702041	1					
ANR	702201	Identifier	q1		702041	1					
ANR	702202	ExpressionStatement	mincr ( mnc )	751:12:20218:20228	702041	4	True				
ANR	702203	CallExpression	mincr ( mnc )		702041	0					
ANR	702204	Callee	mincr		702041	0					
ANR	702205	Identifier	mincr		702041	0					
ANR	702206	ArgumentList	mnc		702041	1					
ANR	702207	Argument	mnc		702041	0					
ANR	702208	Identifier	mnc		702041	0					
ANR	702209	ReturnStatement	return ( signed_A >= 0 ? Q : q1 * C == rem ? - Q : ~Q ) ;	753:12:20315:20367	702041	5	True				
ANR	702210	ConditionalExpression	signed_A >= 0 ? Q : q1 * C == rem ? - Q : ~Q		702041	0					
ANR	702211	Condition	signed_A >= 0		702041	0					
ANR	702212	RelationalExpression	signed_A >= 0		702041	0		>=			
ANR	702213	Identifier	signed_A		702041	0					
ANR	702214	PrimaryExpression	0		702041	1					
ANR	702215	Identifier	Q		702041	1					
ANR	702216	ConditionalExpression	q1 * C == rem ? - Q : ~Q		702041	2					
ANR	702217	Condition	q1 * C == rem		702041	0					
ANR	702218	EqualityExpression	q1 * C == rem		702041	0		==			
ANR	702219	MultiplicativeExpression	q1 * C		702041	0		*			
ANR	702220	Identifier	q1		702041	0					
ANR	702221	Identifier	C		702041	1					
ANR	702222	Identifier	rem		702041	1					
ANR	702223	UnaryOperationExpression	- Q		702041	1					
ANR	702224	UnaryOperator	-		702041	0					
ANR	702225	Identifier	Q		702041	1					
ANR	702226	Identifier	~Q		702041	2					
ANR	702227	ExpressionStatement	msw = p1 >> half_bits	755:8:20387:20408	702041	4	True				
ANR	702228	AssignmentExpression	msw = p1 >> half_bits		702041	0		=			
ANR	702229	Identifier	msw		702041	0					
ANR	702230	ShiftExpression	p1 >> half_bits		702041	1		>>			
ANR	702231	Identifier	p1		702041	0					
ANR	702232	Identifier	half_bits		702041	1					
ANR	702233	ExpressionStatement	mincr ( manb )	756:8:20418:20429	702041	5	True				
ANR	702234	CallExpression	mincr ( manb )		702041	0					
ANR	702235	Callee	mincr		702041	0					
ANR	702236	Identifier	mincr		702041	0					
ANR	702237	ArgumentList	manb		702041	1					
ANR	702238	Argument	manb		702041	0					
ANR	702239	Identifier	manb		702041	0					
ANR	702240	ElseStatement	else		702041	0					
ANR	702241	IfStatement	if ( A <= half_mask )		702041	0					
ANR	702242	Condition	A <= half_mask	757:15:20446:20459	702041	0	True				
ANR	702243	RelationalExpression	A <= half_mask		702041	0		<=			
ANR	702244	Identifier	A		702041	0					
ANR	702245	Identifier	half_mask		702041	1					
ANR	702246	CompoundStatement		35:31:1158:1158	702041	1					
ANR	702247	ExpressionStatement	p1 = A * ( B >> half_bits )	758:8:20472:20497	702041	0	True				
ANR	702248	AssignmentExpression	p1 = A * ( B >> half_bits )		702041	0		=			
ANR	702249	Identifier	p1		702041	0					
ANR	702250	MultiplicativeExpression	A * ( B >> half_bits )		702041	1		*			
ANR	702251	Identifier	A		702041	0					
ANR	702252	ShiftExpression	B >> half_bits		702041	1		>>			
ANR	702253	Identifier	B		702041	0					
ANR	702254	Identifier	half_bits		702041	1					
ANR	702255	ExpressionStatement	msw = p1 >> half_bits	759:8:20507:20528	702041	1	True				
ANR	702256	AssignmentExpression	msw = p1 >> half_bits		702041	0		=			
ANR	702257	Identifier	msw		702041	0					
ANR	702258	ShiftExpression	p1 >> half_bits		702041	1		>>			
ANR	702259	Identifier	p1		702041	0					
ANR	702260	Identifier	half_bits		702041	1					
ANR	702261	ExpressionStatement	lsw = A * ( B & half_mask )	760:8:20538:20563	702041	2	True				
ANR	702262	AssignmentExpression	lsw = A * ( B & half_mask )		702041	0		=			
ANR	702263	Identifier	lsw		702041	0					
ANR	702264	MultiplicativeExpression	A * ( B & half_mask )		702041	1		*			
ANR	702265	Identifier	A		702041	0					
ANR	702266	BitAndExpression	B & half_mask		702041	1		&			
ANR	702267	Identifier	B		702041	0					
ANR	702268	Identifier	half_mask		702041	1					
ANR	702269	ExpressionStatement	mincr ( mnab )	761:8:20573:20584	702041	3	True				
ANR	702270	CallExpression	mincr ( mnab )		702041	0					
ANR	702271	Callee	mincr		702041	0					
ANR	702272	Identifier	mincr		702041	0					
ANR	702273	ArgumentList	mnab		702041	1					
ANR	702274	Argument	mnab		702041	0					
ANR	702275	Identifier	mnab		702041	0					
ANR	702276	ElseStatement	else		702041	0					
ANR	702277	CompoundStatement		45:8:1514:1537	702041	0					
ANR	702278	IdentifierDeclStatement	ulong lo_A = A & half_mask ;	763:8:20672:20698	702041	0	True				
ANR	702279	IdentifierDecl	lo_A = A & half_mask		702041	0					
ANR	702280	IdentifierDeclType	ulong		702041	0					
ANR	702281	Identifier	lo_A		702041	1					
ANR	702282	AssignmentExpression	lo_A = A & half_mask		702041	2		=			
ANR	702283	Identifier	lo_A		702041	0					
ANR	702284	BitAndExpression	A & half_mask		702041	1		&			
ANR	702285	Identifier	A		702041	0					
ANR	702286	Identifier	half_mask		702041	1					
ANR	702287	IdentifierDeclStatement	ulong hi_A = A >> half_bits ;	764:8:20708:20735	702041	1	True				
ANR	702288	IdentifierDecl	hi_A = A >> half_bits		702041	0					
ANR	702289	IdentifierDeclType	ulong		702041	0					
ANR	702290	Identifier	hi_A		702041	1					
ANR	702291	AssignmentExpression	hi_A = A >> half_bits		702041	2		=			
ANR	702292	Identifier	hi_A		702041	0					
ANR	702293	ShiftExpression	A >> half_bits		702041	1		>>			
ANR	702294	Identifier	A		702041	0					
ANR	702295	Identifier	half_bits		702041	1					
ANR	702296	IdentifierDeclStatement	ulong lo_B = B & half_mask ;	765:8:20745:20771	702041	2	True				
ANR	702297	IdentifierDecl	lo_B = B & half_mask		702041	0					
ANR	702298	IdentifierDeclType	ulong		702041	0					
ANR	702299	Identifier	lo_B		702041	1					
ANR	702300	AssignmentExpression	lo_B = B & half_mask		702041	2		=			
ANR	702301	Identifier	lo_B		702041	0					
ANR	702302	BitAndExpression	B & half_mask		702041	1		&			
ANR	702303	Identifier	B		702041	0					
ANR	702304	Identifier	half_mask		702041	1					
ANR	702305	IdentifierDeclStatement	ulong hi_B = B >> half_bits ;	766:8:20781:20808	702041	3	True				
ANR	702306	IdentifierDecl	hi_B = B >> half_bits		702041	0					
ANR	702307	IdentifierDeclType	ulong		702041	0					
ANR	702308	Identifier	hi_B		702041	1					
ANR	702309	AssignmentExpression	hi_B = B >> half_bits		702041	2		=			
ANR	702310	Identifier	hi_B		702041	0					
ANR	702311	ShiftExpression	B >> half_bits		702041	1		>>			
ANR	702312	Identifier	B		702041	0					
ANR	702313	Identifier	half_bits		702041	1					
ANR	702314	IdentifierDeclStatement	ulong p1x = hi_A * lo_B ;	767:8:20818:20841	702041	4	True				
ANR	702315	IdentifierDecl	p1x = hi_A * lo_B		702041	0					
ANR	702316	IdentifierDeclType	ulong		702041	0					
ANR	702317	Identifier	p1x		702041	1					
ANR	702318	AssignmentExpression	p1x = hi_A * lo_B		702041	2		=			
ANR	702319	Identifier	p1x		702041	0					
ANR	702320	MultiplicativeExpression	hi_A * lo_B		702041	1		*			
ANR	702321	Identifier	hi_A		702041	0					
ANR	702322	Identifier	lo_B		702041	1					
ANR	702323	ExpressionStatement	msw = hi_A * hi_B	769:8:20852:20869	702041	5	True				
ANR	702324	AssignmentExpression	msw = hi_A * hi_B		702041	0		=			
ANR	702325	Identifier	msw		702041	0					
ANR	702326	MultiplicativeExpression	hi_A * hi_B		702041	1		*			
ANR	702327	Identifier	hi_A		702041	0					
ANR	702328	Identifier	hi_B		702041	1					
ANR	702329	ExpressionStatement	lsw = lo_A * lo_B	770:8:20879:20896	702041	6	True				
ANR	702330	AssignmentExpression	lsw = lo_A * lo_B		702041	0		=			
ANR	702331	Identifier	lsw		702041	0					
ANR	702332	MultiplicativeExpression	lo_A * lo_B		702041	1		*			
ANR	702333	Identifier	lo_A		702041	0					
ANR	702334	Identifier	lo_B		702041	1					
ANR	702335	ExpressionStatement	p1 = lo_A * hi_B	771:8:20906:20922	702041	7	True				
ANR	702336	AssignmentExpression	p1 = lo_A * hi_B		702041	0		=			
ANR	702337	Identifier	p1		702041	0					
ANR	702338	MultiplicativeExpression	lo_A * hi_B		702041	1		*			
ANR	702339	Identifier	lo_A		702041	0					
ANR	702340	Identifier	hi_B		702041	1					
ANR	702341	IfStatement	if ( p1 > max_ulong - p1x )		702041	8					
ANR	702342	Condition	p1 > max_ulong - p1x	772:12:20936:20955	702041	0	True				
ANR	702343	RelationalExpression	p1 > max_ulong - p1x		702041	0		>			
ANR	702344	Identifier	p1		702041	0					
ANR	702345	AdditiveExpression	max_ulong - p1x		702041	1		-			
ANR	702346	Identifier	max_ulong		702041	0					
ANR	702347	Identifier	p1x		702041	1					
ANR	702348	ExpressionStatement	msw += 1L << half_bits	773:12:20970:20992	702041	1	True				
ANR	702349	AssignmentExpression	msw += 1L << half_bits		702041	0		+=			
ANR	702350	Identifier	msw		702041	0					
ANR	702351	ShiftExpression	1L << half_bits		702041	1		<<			
ANR	702352	PrimaryExpression	1L		702041	0					
ANR	702353	Identifier	half_bits		702041	1					
ANR	702354	ExpressionStatement	p1 += p1x	774:8:21002:21011	702041	9	True				
ANR	702355	AssignmentExpression	p1 += p1x		702041	0		+=			
ANR	702356	Identifier	p1		702041	0					
ANR	702357	Identifier	p1x		702041	1					
ANR	702358	ExpressionStatement	msw += p1 >> half_bits	775:8:21021:21043	702041	10	True				
ANR	702359	AssignmentExpression	msw += p1 >> half_bits		702041	0		+=			
ANR	702360	Identifier	msw		702041	0					
ANR	702361	ShiftExpression	p1 >> half_bits		702041	1		>>			
ANR	702362	Identifier	p1		702041	0					
ANR	702363	Identifier	half_bits		702041	1					
ANR	702364	ExpressionStatement	mincr ( mab )	776:8:21053:21063	702041	11	True				
ANR	702365	CallExpression	mincr ( mab )		702041	0					
ANR	702366	Callee	mincr		702041	0					
ANR	702367	Identifier	mincr		702041	0					
ANR	702368	ArgumentList	mab		702041	1					
ANR	702369	Argument	mab		702041	0					
ANR	702370	Identifier	mab		702041	0					
ANR	702371	ExpressionStatement	p1 &= half_mask	780:4:21174:21189	702041	5	True				
ANR	702372	AssignmentExpression	p1 &= half_mask		702041	0		&=			
ANR	702373	Identifier	p1		702041	0					
ANR	702374	Identifier	half_mask		702041	1					
ANR	702375	ExpressionStatement	p1 <<= half_bits	782:4:21202:21218	702041	6	True				
ANR	702376	AssignmentExpression	p1 <<= half_bits		702041	0		<<=			
ANR	702377	Identifier	p1		702041	0					
ANR	702378	Identifier	half_bits		702041	1					
ANR	702379	IfStatement	if ( p1 > max_ulong - lsw )		702041	7					
ANR	702380	Condition	p1 > max_ulong - lsw	783:8:21228:21247	702041	0	True				
ANR	702381	RelationalExpression	p1 > max_ulong - lsw		702041	0		>			
ANR	702382	Identifier	p1		702041	0					
ANR	702383	AdditiveExpression	max_ulong - lsw		702041	1		-			
ANR	702384	Identifier	max_ulong		702041	0					
ANR	702385	Identifier	lsw		702041	1					
ANR	702386	ExpressionStatement	msw ++	784:8:21258:21263	702041	1	True				
ANR	702387	PostIncDecOperationExpression	msw ++		702041	0					
ANR	702388	Identifier	msw		702041	0					
ANR	702389	IncDec	++		702041	1					
ANR	702390	ExpressionStatement	lsw += p1	785:4:21269:21278	702041	8	True				
ANR	702391	AssignmentExpression	lsw += p1		702041	0		+=			
ANR	702392	Identifier	lsw		702041	0					
ANR	702393	Identifier	p1		702041	1					
ANR	702394	CompoundStatement		71:8:2234:2247	702041	9					
ANR	702395	IdentifierDeclStatement	ulong denom = C ;	792:8:21513:21528	702041	0	True				
ANR	702396	IdentifierDecl	denom = C		702041	0					
ANR	702397	IdentifierDeclType	ulong		702041	0					
ANR	702398	Identifier	denom		702041	1					
ANR	702399	AssignmentExpression	denom = C		702041	2		=			
ANR	702400	Identifier	C		702041	0					
ANR	702401	Identifier	C		702041	1					
ANR	702402	IdentifierDeclStatement	int shift = 0 ;	793:8:21538:21551	702041	1	True				
ANR	702403	IdentifierDecl	shift = 0		702041	0					
ANR	702404	IdentifierDeclType	int		702041	0					
ANR	702405	Identifier	shift		702041	1					
ANR	702406	AssignmentExpression	shift = 0		702041	2		=			
ANR	702407	Identifier	shift		702041	0					
ANR	702408	PrimaryExpression	0		702041	1					
ANR	702409	Statement	define	795:1:21555:21560	702041	2	True				
ANR	702410	Statement	bits_4th	795:8:21562:21569	702041	3	True				
ANR	702411	Statement	(	795:17:21571:21571	702041	4	True				
ANR	702412	Statement	num_bits	795:18:21572:21579	702041	5	True				
ANR	702413	Statement	/	795:27:21581:21581	702041	6	True				
ANR	702414	Statement	4	795:29:21583:21583	702041	7	True				
ANR	702415	Statement	)	795:30:21584:21584	702041	8	True				
ANR	702416	IfStatement	if ( denom < 1L << ( num_bits - bits_4th ) )		702041	9					
ANR	702417	Condition	denom < 1L << ( num_bits - bits_4th )	796:12:21598:21632	702041	0	True				
ANR	702418	RelationalExpression	denom < 1L << ( num_bits - bits_4th )		702041	0		<			
ANR	702419	Identifier	denom		702041	0					
ANR	702420	ShiftExpression	1L << ( num_bits - bits_4th )		702041	1		<<			
ANR	702421	PrimaryExpression	1L		702041	0					
ANR	702422	AdditiveExpression	num_bits - bits_4th		702041	1		-			
ANR	702423	Identifier	num_bits		702041	0					
ANR	702424	Identifier	bits_4th		702041	1					
ANR	702425	CompoundStatement		74:49:2331:2331	702041	1					
ANR	702426	ExpressionStatement	mincr ( mdq )	797:12:21649:21659	702041	0	True				
ANR	702427	CallExpression	mincr ( mdq )		702041	0					
ANR	702428	Callee	mincr		702041	0					
ANR	702429	Identifier	mincr		702041	0					
ANR	702430	ArgumentList	mdq		702041	1					
ANR	702431	Argument	mdq		702041	0					
ANR	702432	Identifier	mdq		702041	0					
ANR	702433	ExpressionStatement	"denom <<= bits_4th , shift += bits_4th"	798:12:21673:21710	702041	1	True				
ANR	702434	Expression	"denom <<= bits_4th , shift += bits_4th"		702041	0					
ANR	702435	AssignmentExpression	denom <<= bits_4th		702041	0		<<=			
ANR	702436	Identifier	denom		702041	0					
ANR	702437	Identifier	bits_4th		702041	1					
ANR	702438	AssignmentExpression	shift += bits_4th		702041	1		+=			
ANR	702439	Identifier	shift		702041	0					
ANR	702440	Identifier	bits_4th		702041	1					
ANR	702441	Statement	undef	800:1:21723:21727	702041	10	True				
ANR	702442	Statement	bits_4th	800:7:21729:21736	702041	11	True				
ANR	702443	Statement	define	801:1:21739:21744	702041	12	True				
ANR	702444	Statement	bits_8th	801:8:21746:21753	702041	13	True				
ANR	702445	Statement	(	801:17:21755:21755	702041	14	True				
ANR	702446	Statement	num_bits	801:18:21756:21763	702041	15	True				
ANR	702447	Statement	/	801:27:21765:21765	702041	16	True				
ANR	702448	Statement	8	801:29:21767:21767	702041	17	True				
ANR	702449	Statement	)	801:30:21768:21768	702041	18	True				
ANR	702450	IfStatement	if ( denom < 1L << ( num_bits - bits_8th ) )		702041	19					
ANR	702451	Condition	denom < 1L << ( num_bits - bits_8th )	802:12:21782:21816	702041	0	True				
ANR	702452	RelationalExpression	denom < 1L << ( num_bits - bits_8th )		702041	0		<			
ANR	702453	Identifier	denom		702041	0					
ANR	702454	ShiftExpression	1L << ( num_bits - bits_8th )		702041	1		<<			
ANR	702455	PrimaryExpression	1L		702041	0					
ANR	702456	AdditiveExpression	num_bits - bits_8th		702041	1		-			
ANR	702457	Identifier	num_bits		702041	0					
ANR	702458	Identifier	bits_8th		702041	1					
ANR	702459	CompoundStatement		80:49:2515:2515	702041	1					
ANR	702460	ExpressionStatement	mincr ( mde )	803:12:21833:21843	702041	0	True				
ANR	702461	CallExpression	mincr ( mde )		702041	0					
ANR	702462	Callee	mincr		702041	0					
ANR	702463	Identifier	mincr		702041	0					
ANR	702464	ArgumentList	mde		702041	1					
ANR	702465	Argument	mde		702041	0					
ANR	702466	Identifier	mde		702041	0					
ANR	702467	ExpressionStatement	"denom <<= bits_8th , shift += bits_8th"	804:12:21857:21894	702041	1	True				
ANR	702468	Expression	"denom <<= bits_8th , shift += bits_8th"		702041	0					
ANR	702469	AssignmentExpression	denom <<= bits_8th		702041	0		<<=			
ANR	702470	Identifier	denom		702041	0					
ANR	702471	Identifier	bits_8th		702041	1					
ANR	702472	AssignmentExpression	shift += bits_8th		702041	1		+=			
ANR	702473	Identifier	shift		702041	0					
ANR	702474	Identifier	bits_8th		702041	1					
ANR	702475	Statement	undef	806:1:21907:21911	702041	20	True				
ANR	702476	Statement	bits_8th	806:7:21913:21920	702041	21	True				
ANR	702477	WhileStatement	while ( ! ( denom & ( - 1L << ( num_bits - 1 ) ) ) )		702041	22					
ANR	702478	Condition	! ( denom & ( - 1L << ( num_bits - 1 ) ) )	807:15:21937:21970	702041	0	True				
ANR	702479	UnaryOperationExpression	! ( denom & ( - 1L << ( num_bits - 1 ) ) )		702041	0					
ANR	702480	UnaryOperator	!		702041	0					
ANR	702481	BitAndExpression	denom & ( - 1L << ( num_bits - 1 ) )		702041	1		&			
ANR	702482	Identifier	denom		702041	0					
ANR	702483	ShiftExpression	- 1L << ( num_bits - 1 )		702041	1		<<			
ANR	702484	UnaryOperationExpression	- 1L		702041	0					
ANR	702485	UnaryOperator	-		702041	0					
ANR	702486	PrimaryExpression	1L		702041	1					
ANR	702487	AdditiveExpression	num_bits - 1		702041	1		-			
ANR	702488	Identifier	num_bits		702041	0					
ANR	702489	PrimaryExpression	1		702041	1					
ANR	702490	CompoundStatement		85:51:2669:2669	702041	1					
ANR	702491	ExpressionStatement	mincr ( mds )	808:12:21987:21997	702041	0	True				
ANR	702492	CallExpression	mincr ( mds )		702041	0					
ANR	702493	Callee	mincr		702041	0					
ANR	702494	Identifier	mincr		702041	0					
ANR	702495	ArgumentList	mds		702041	1					
ANR	702496	Argument	mds		702041	0					
ANR	702497	Identifier	mds		702041	0					
ANR	702498	ExpressionStatement	"denom <<= 1 , ++ shift"	809:12:22011:22031	702041	1	True				
ANR	702499	Expression	"denom <<= 1 , ++ shift"		702041	0					
ANR	702500	AssignmentExpression	denom <<= 1		702041	0		<<=			
ANR	702501	Identifier	denom		702041	0					
ANR	702502	PrimaryExpression	1		702041	1					
ANR	702503	UnaryExpression	++ shift		702041	1					
ANR	702504	IncDec	++		702041	0					
ANR	702505	Identifier	shift		702041	1					
ANR	702506	ExpressionStatement	msw = ( msw << shift ) + ( lsw >> ( num_bits - shift ) )	811:8:22051:22101	702041	23	True				
ANR	702507	AssignmentExpression	msw = ( msw << shift ) + ( lsw >> ( num_bits - shift ) )		702041	0		=			
ANR	702508	Identifier	msw		702041	0					
ANR	702509	AdditiveExpression	( msw << shift ) + ( lsw >> ( num_bits - shift ) )		702041	1		+			
ANR	702510	ShiftExpression	msw << shift		702041	0		<<			
ANR	702511	Identifier	msw		702041	0					
ANR	702512	Identifier	shift		702041	1					
ANR	702513	ShiftExpression	lsw >> ( num_bits - shift )		702041	1		>>			
ANR	702514	Identifier	lsw		702041	0					
ANR	702515	AdditiveExpression	num_bits - shift		702041	1		-			
ANR	702516	Identifier	num_bits		702041	0					
ANR	702517	Identifier	shift		702041	1					
ANR	702518	ExpressionStatement	lsw <<= shift	812:8:22111:22124	702041	24	True				
ANR	702519	AssignmentExpression	lsw <<= shift		702041	0		<<=			
ANR	702520	Identifier	lsw		702041	0					
ANR	702521	Identifier	shift		702041	1					
ANR	702522	ExpressionStatement	lsw &= ( 1L << ( sizeof ( fixed ) * 8 ) ) - 1	814:8:22159:22197	702041	25	True				
ANR	702523	AssignmentExpression	lsw &= ( 1L << ( sizeof ( fixed ) * 8 ) ) - 1		702041	0		&=			
ANR	702524	Identifier	lsw		702041	0					
ANR	702525	AdditiveExpression	( 1L << ( sizeof ( fixed ) * 8 ) ) - 1		702041	1		-			
ANR	702526	ShiftExpression	1L << ( sizeof ( fixed ) * 8 )		702041	0		<<			
ANR	702527	PrimaryExpression	1L		702041	0					
ANR	702528	MultiplicativeExpression	sizeof ( fixed ) * 8		702041	1		*			
ANR	702529	SizeofExpression	sizeof ( fixed )		702041	0					
ANR	702530	Sizeof	sizeof		702041	0					
ANR	702531	SizeofOperand	fixed		702041	1					
ANR	702532	PrimaryExpression	8		702041	1					
ANR	702533	PrimaryExpression	1		702041	1					
ANR	702534	CompoundStatement		103:12:3256:3266	702041	26					
ANR	702535	IdentifierDeclStatement	ulong hi_D = denom >> half_bits ;	818:12:22279:22310	702041	0	True				
ANR	702536	IdentifierDecl	hi_D = denom >> half_bits		702041	0					
ANR	702537	IdentifierDeclType	ulong		702041	0					
ANR	702538	Identifier	hi_D		702041	1					
ANR	702539	AssignmentExpression	hi_D = denom >> half_bits		702041	2		=			
ANR	702540	Identifier	hi_D		702041	0					
ANR	702541	ShiftExpression	denom >> half_bits		702041	1		>>			
ANR	702542	Identifier	denom		702041	0					
ANR	702543	Identifier	half_bits		702041	1					
ANR	702544	IdentifierDeclStatement	ulong lo_D = denom & half_mask ;	819:12:22324:22354	702041	1	True				
ANR	702545	IdentifierDecl	lo_D = denom & half_mask		702041	0					
ANR	702546	IdentifierDeclType	ulong		702041	0					
ANR	702547	Identifier	lo_D		702041	1					
ANR	702548	AssignmentExpression	lo_D = denom & half_mask		702041	2		=			
ANR	702549	Identifier	lo_D		702041	0					
ANR	702550	BitAndExpression	denom & half_mask		702041	1		&			
ANR	702551	Identifier	denom		702041	0					
ANR	702552	Identifier	half_mask		702041	1					
ANR	702553	IdentifierDeclStatement	ulong hi_Q = ( ulong ) msw / hi_D ;	820:12:22368:22399	702041	2	True				
ANR	702554	IdentifierDecl	hi_Q = ( ulong ) msw / hi_D		702041	0					
ANR	702555	IdentifierDeclType	ulong		702041	0					
ANR	702556	Identifier	hi_Q		702041	1					
ANR	702557	AssignmentExpression	hi_Q = ( ulong ) msw / hi_D		702041	2		=			
ANR	702558	Identifier	hi_Q		702041	0					
ANR	702559	MultiplicativeExpression	( ulong ) msw / hi_D		702041	1		/			
ANR	702560	CastExpression	( ulong ) msw		702041	0					
ANR	702561	CastTarget	ulong		702041	0					
ANR	702562	Identifier	msw		702041	1					
ANR	702563	Identifier	hi_D		702041	1					
ANR	702564	IdentifierDeclStatement	ulong p0 = hi_Q * hi_D ;	823:12:22488:22510	702041	3	True				
ANR	702565	IdentifierDecl	p0 = hi_Q * hi_D		702041	0					
ANR	702566	IdentifierDeclType	ulong		702041	0					
ANR	702567	Identifier	p0		702041	1					
ANR	702568	AssignmentExpression	p0 = hi_Q * hi_D		702041	2		=			
ANR	702569	Identifier	p0		702041	0					
ANR	702570	MultiplicativeExpression	hi_Q * hi_D		702041	1		*			
ANR	702571	Identifier	hi_Q		702041	0					
ANR	702572	Identifier	hi_D		702041	1					
ANR	702573	IdentifierDeclStatement	ulong p1 = hi_Q * lo_D ;	824:12:22524:22546	702041	4	True				
ANR	702574	IdentifierDecl	p1 = hi_Q * lo_D		702041	0					
ANR	702575	IdentifierDeclType	ulong		702041	0					
ANR	702576	Identifier	p1		702041	1					
ANR	702577	AssignmentExpression	p1 = hi_Q * lo_D		702041	2		=			
ANR	702578	Identifier	p1		702041	0					
ANR	702579	MultiplicativeExpression	hi_Q * lo_D		702041	1		*			
ANR	702580	Identifier	hi_Q		702041	0					
ANR	702581	Identifier	lo_D		702041	1					
ANR	702582	IdentifierDeclStatement	ulong hi_P ;	825:12:22560:22570	702041	5	True				
ANR	702583	IdentifierDecl	hi_P		702041	0					
ANR	702584	IdentifierDeclType	ulong		702041	0					
ANR	702585	Identifier	hi_P		702041	1					
ANR	702586	WhileStatement	while ( ( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw ) )		702041	6					
ANR	702587	Condition	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )	827:19:22592:22705	702041	0	True				
ANR	702588	OrExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )		702041	0		||			
ANR	702589	RelationalExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw		702041	0		>			
ANR	702590	AssignmentExpression	hi_P = p0 + ( p1 >> half_bits )		702041	0		=			
ANR	702591	Identifier	hi_P		702041	0					
ANR	702592	AdditiveExpression	p0 + ( p1 >> half_bits )		702041	1		+			
ANR	702593	Identifier	p0		702041	0					
ANR	702594	ShiftExpression	p1 >> half_bits		702041	1		>>			
ANR	702595	Identifier	p1		702041	0					
ANR	702596	Identifier	half_bits		702041	1					
ANR	702597	Identifier	msw		702041	1					
ANR	702598	AndExpression	hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw		702041	1		&&			
ANR	702599	EqualityExpression	hi_P == msw		702041	0		==			
ANR	702600	Identifier	hi_P		702041	0					
ANR	702601	Identifier	msw		702041	1					
ANR	702602	RelationalExpression	( ( p1 & half_mask ) << half_bits ) > lsw		702041	1		>			
ANR	702603	ShiftExpression	( p1 & half_mask ) << half_bits		702041	0		<<			
ANR	702604	BitAndExpression	p1 & half_mask		702041	0		&			
ANR	702605	Identifier	p1		702041	0					
ANR	702606	Identifier	half_mask		702041	1					
ANR	702607	Identifier	half_bits		702041	1					
ANR	702608	Identifier	lsw		702041	1					
ANR	702609	CompoundStatement		107:18:3421:3421	702041	1					
ANR	702610	ExpressionStatement	-- hi_Q	830:16:22785:22791	702041	0	True				
ANR	702611	UnaryExpression	-- hi_Q		702041	0					
ANR	702612	IncDec	--		702041	0					
ANR	702613	Identifier	hi_Q		702041	1					
ANR	702614	ExpressionStatement	p0 -= hi_D	831:16:22809:22819	702041	1	True				
ANR	702615	AssignmentExpression	p0 -= hi_D		702041	0		-=			
ANR	702616	Identifier	p0		702041	0					
ANR	702617	Identifier	hi_D		702041	1					
ANR	702618	ExpressionStatement	p1 -= lo_D	832:16:22837:22847	702041	2	True				
ANR	702619	AssignmentExpression	p1 -= lo_D		702041	0		-=			
ANR	702620	Identifier	p1		702041	0					
ANR	702621	Identifier	lo_D		702041	1					
ANR	702622	ExpressionStatement	mincr ( mqh )	833:16:22865:22875	702041	3	True				
ANR	702623	CallExpression	mincr ( mqh )		702041	0					
ANR	702624	Callee	mincr		702041	0					
ANR	702625	Identifier	mincr		702041	0					
ANR	702626	ArgumentList	mqh		702041	1					
ANR	702627	Argument	mqh		702041	0					
ANR	702628	Identifier	mqh		702041	0					
ANR	702629	ExpressionStatement	p1 = ( p1 & half_mask ) << half_bits	835:12:22903:22937	702041	7	True				
ANR	702630	AssignmentExpression	p1 = ( p1 & half_mask ) << half_bits		702041	0		=			
ANR	702631	Identifier	p1		702041	0					
ANR	702632	ShiftExpression	( p1 & half_mask ) << half_bits		702041	1		<<			
ANR	702633	BitAndExpression	p1 & half_mask		702041	0		&			
ANR	702634	Identifier	p1		702041	0					
ANR	702635	Identifier	half_mask		702041	1					
ANR	702636	Identifier	half_bits		702041	1					
ANR	702637	IfStatement	if ( p1 > lsw )		702041	8					
ANR	702638	Condition	p1 > lsw	836:16:22955:22962	702041	0	True				
ANR	702639	RelationalExpression	p1 > lsw		702041	0		>			
ANR	702640	Identifier	p1		702041	0					
ANR	702641	Identifier	lsw		702041	1					
ANR	702642	ExpressionStatement	msw --	837:16:22981:22986	702041	1	True				
ANR	702643	PostIncDecOperationExpression	msw --		702041	0					
ANR	702644	Identifier	msw		702041	0					
ANR	702645	IncDec	--		702041	1					
ANR	702646	ExpressionStatement	lsw -= p1	838:12:23000:23009	702041	9	True				
ANR	702647	AssignmentExpression	lsw -= p1		702041	0		-=			
ANR	702648	Identifier	lsw		702041	0					
ANR	702649	Identifier	p1		702041	1					
ANR	702650	ExpressionStatement	msw -= hi_P	839:12:23023:23034	702041	10	True				
ANR	702651	AssignmentExpression	msw -= hi_P		702041	0		-=			
ANR	702652	Identifier	msw		702041	0					
ANR	702653	Identifier	hi_P		702041	1					
ANR	702654	ExpressionStatement	msw = ( msw << half_bits ) + ( lsw >> half_bits )	841:12:23109:23154	702041	11	True				
ANR	702655	AssignmentExpression	msw = ( msw << half_bits ) + ( lsw >> half_bits )		702041	0		=			
ANR	702656	Identifier	msw		702041	0					
ANR	702657	AdditiveExpression	( msw << half_bits ) + ( lsw >> half_bits )		702041	1		+			
ANR	702658	ShiftExpression	msw << half_bits		702041	0		<<			
ANR	702659	Identifier	msw		702041	0					
ANR	702660	Identifier	half_bits		702041	1					
ANR	702661	ShiftExpression	lsw >> half_bits		702041	1		>>			
ANR	702662	Identifier	lsw		702041	0					
ANR	702663	Identifier	half_bits		702041	1					
ANR	702664	ExpressionStatement	lsw &= half_mask	843:12:23193:23209	702041	12	True				
ANR	702665	AssignmentExpression	lsw &= half_mask		702041	0		&=			
ANR	702666	Identifier	lsw		702041	0					
ANR	702667	Identifier	half_mask		702041	1					
ANR	702668	ExpressionStatement	lsw <<= half_bits	845:12:23230:23247	702041	13	True				
ANR	702669	AssignmentExpression	lsw <<= half_bits		702041	0		<<=			
ANR	702670	Identifier	lsw		702041	0					
ANR	702671	Identifier	half_bits		702041	1					
ANR	702672	CompoundStatement		126:16:4024:4030	702041	14					
ANR	702673	IdentifierDeclStatement	ulong lo_Q = ( ulong ) msw / hi_D ;	847:16:23279:23310	702041	0	True				
ANR	702674	IdentifierDecl	lo_Q = ( ulong ) msw / hi_D		702041	0					
ANR	702675	IdentifierDeclType	ulong		702041	0					
ANR	702676	Identifier	lo_Q		702041	1					
ANR	702677	AssignmentExpression	lo_Q = ( ulong ) msw / hi_D		702041	2		=			
ANR	702678	Identifier	lo_Q		702041	0					
ANR	702679	MultiplicativeExpression	( ulong ) msw / hi_D		702041	1		/			
ANR	702680	CastExpression	( ulong ) msw		702041	0					
ANR	702681	CastTarget	ulong		702041	0					
ANR	702682	Identifier	msw		702041	1					
ANR	702683	Identifier	hi_D		702041	1					
ANR	702684	IdentifierDeclStatement	long Q ;	848:16:23328:23334	702041	1	True				
ANR	702685	IdentifierDecl	Q		702041	0					
ANR	702686	IdentifierDeclType	long		702041	0					
ANR	702687	Identifier	Q		702041	1					
ANR	702688	ExpressionStatement	p1 = lo_Q * lo_D	850:16:23353:23369	702041	2	True				
ANR	702689	AssignmentExpression	p1 = lo_Q * lo_D		702041	0		=			
ANR	702690	Identifier	p1		702041	0					
ANR	702691	MultiplicativeExpression	lo_Q * lo_D		702041	1		*			
ANR	702692	Identifier	lo_Q		702041	0					
ANR	702693	Identifier	lo_D		702041	1					
ANR	702694	ExpressionStatement	p0 = lo_Q * hi_D	851:16:23387:23403	702041	3	True				
ANR	702695	AssignmentExpression	p0 = lo_Q * hi_D		702041	0		=			
ANR	702696	Identifier	p0		702041	0					
ANR	702697	MultiplicativeExpression	lo_Q * hi_D		702041	1		*			
ANR	702698	Identifier	lo_Q		702041	0					
ANR	702699	Identifier	hi_D		702041	1					
ANR	702700	WhileStatement	while ( ( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw ) )		702041	4					
ANR	702701	Condition	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )	852:23:23428:23545	702041	0	True				
ANR	702702	OrExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw || ( hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw )		702041	0		||			
ANR	702703	RelationalExpression	( hi_P = p0 + ( p1 >> half_bits ) ) > msw		702041	0		>			
ANR	702704	AssignmentExpression	hi_P = p0 + ( p1 >> half_bits )		702041	0		=			
ANR	702705	Identifier	hi_P		702041	0					
ANR	702706	AdditiveExpression	p0 + ( p1 >> half_bits )		702041	1		+			
ANR	702707	Identifier	p0		702041	0					
ANR	702708	ShiftExpression	p1 >> half_bits		702041	1		>>			
ANR	702709	Identifier	p1		702041	0					
ANR	702710	Identifier	half_bits		702041	1					
ANR	702711	Identifier	msw		702041	1					
ANR	702712	AndExpression	hi_P == msw && ( ( p1 & half_mask ) << half_bits ) > lsw		702041	1		&&			
ANR	702713	EqualityExpression	hi_P == msw		702041	0		==			
ANR	702714	Identifier	hi_P		702041	0					
ANR	702715	Identifier	msw		702041	1					
ANR	702716	RelationalExpression	( ( p1 & half_mask ) << half_bits ) > lsw		702041	1		>			
ANR	702717	ShiftExpression	( p1 & half_mask ) << half_bits		702041	0		<<			
ANR	702718	BitAndExpression	p1 & half_mask		702041	0		&			
ANR	702719	Identifier	p1		702041	0					
ANR	702720	Identifier	half_mask		702041	1					
ANR	702721	Identifier	half_bits		702041	1					
ANR	702722	Identifier	lsw		702041	1					
ANR	702723	CompoundStatement		132:22:4265:4265	702041	1					
ANR	702724	ExpressionStatement	-- lo_Q	855:20:23629:23635	702041	0	True				
ANR	702725	UnaryExpression	-- lo_Q		702041	0					
ANR	702726	IncDec	--		702041	0					
ANR	702727	Identifier	lo_Q		702041	1					
ANR	702728	ExpressionStatement	p0 -= hi_D	856:20:23657:23667	702041	1	True				
ANR	702729	AssignmentExpression	p0 -= hi_D		702041	0		-=			
ANR	702730	Identifier	p0		702041	0					
ANR	702731	Identifier	hi_D		702041	1					
ANR	702732	ExpressionStatement	p1 -= lo_D	857:20:23689:23699	702041	2	True				
ANR	702733	AssignmentExpression	p1 -= lo_D		702041	0		-=			
ANR	702734	Identifier	p1		702041	0					
ANR	702735	Identifier	lo_D		702041	1					
ANR	702736	ExpressionStatement	mincr ( mql )	858:20:23721:23731	702041	3	True				
ANR	702737	CallExpression	mincr ( mql )		702041	0					
ANR	702738	Callee	mincr		702041	0					
ANR	702739	Identifier	mincr		702041	0					
ANR	702740	ArgumentList	mql		702041	1					
ANR	702741	Argument	mql		702041	0					
ANR	702742	Identifier	mql		702041	0					
ANR	702743	ExpressionStatement	Q = ( hi_Q << half_bits ) + lo_Q	860:16:23767:23797	702041	5	True				
ANR	702744	AssignmentExpression	Q = ( hi_Q << half_bits ) + lo_Q		702041	0		=			
ANR	702745	Identifier	Q		702041	0					
ANR	702746	AdditiveExpression	( hi_Q << half_bits ) + lo_Q		702041	1		+			
ANR	702747	ShiftExpression	hi_Q << half_bits		702041	0		<<			
ANR	702748	Identifier	hi_Q		702041	0					
ANR	702749	Identifier	half_bits		702041	1					
ANR	702750	Identifier	lo_Q		702041	1					
ANR	702751	ReturnStatement	return ( signed_A >= 0 ? Q : p0 | p1 ? ~Q : - Q ) ;	861:16:23815:23874	702041	6	True				
ANR	702752	ConditionalExpression	signed_A >= 0 ? Q : p0 | p1 ? ~Q : - Q		702041	0					
ANR	702753	Condition	signed_A >= 0		702041	0					
ANR	702754	RelationalExpression	signed_A >= 0		702041	0		>=			
ANR	702755	Identifier	signed_A		702041	0					
ANR	702756	PrimaryExpression	0		702041	1					
ANR	702757	Identifier	Q		702041	1					
ANR	702758	ConditionalExpression	p0 | p1 ? ~Q : - Q		702041	2					
ANR	702759	Condition	p0 | p1		702041	0					
ANR	702760	InclusiveOrExpression	p0 | p1		702041	0		|			
ANR	702761	Identifier	p0		702041	0					
ANR	702762	Identifier	p1		702041	1					
ANR	702763	Identifier	~Q		702041	1					
ANR	702764	UnaryOperationExpression	- Q		702041	2					
ANR	702765	UnaryOperator	-		702041	0					
ANR	702766	Identifier	Q		702041	1					
ANR	702767	ReturnType	fixed		702041	1					
ANR	702768	Identifier	fixed_mult_quo		702041	2					
ANR	702769	ParameterList	"fixed signed_A , fixed B , fixed C"		702041	3					
ANR	702770	Parameter	fixed signed_A	722:15:19269:19282	702041	0	True				
ANR	702771	ParameterType	fixed		702041	0					
ANR	702772	Identifier	signed_A		702041	1					
ANR	702773	Parameter	fixed B	722:31:19285:19291	702041	1	True				
ANR	702774	ParameterType	fixed		702041	0					
ANR	702775	Identifier	B		702041	1					
ANR	702776	Parameter	fixed C	722:40:19294:19300	702041	2	True				
ANR	702777	ParameterType	fixed		702041	0					
ANR	702778	Identifier	C		702041	1					
ANR	702779	CFGEntryNode	ENTRY		702041		True				
ANR	702780	CFGExitNode	EXIT		702041		True				
ANR	702781	Symbol	p0		702041						
ANR	702782	Symbol	A		702041						
ANR	702783	Symbol	p1		702041						
ANR	702784	Symbol	B		702041						
ANR	702785	Symbol	C		702041						
ANR	702786	Symbol	half_mask		702041						
ANR	702787	Symbol	mqh		702041						
ANR	702788	Symbol	shift		702041						
ANR	702789	Symbol	signed_A		702041						
ANR	702790	Symbol	mql		702041						
ANR	702791	Symbol	mab		702041						
ANR	702792	Symbol	msw		702041						
ANR	702793	Symbol	P		702041						
ANR	702794	Symbol	lsw		702041						
ANR	702795	Symbol	Q		702041						
ANR	702796	Symbol	~Q		702041						
ANR	702797	Symbol	p1x		702041						
ANR	702798	Symbol	rem		702041						
ANR	702799	Symbol	denom		702041						
ANR	702800	Symbol	q0		702041						
ANR	702801	Symbol	q1		702041						
ANR	702802	Symbol	hi_P		702041						
ANR	702803	Symbol	mnc		702041						
ANR	702804	Symbol	hi_Q		702041						
ANR	702805	Symbol	half_bits		702041						
ANR	702806	Symbol	mnanb		702041						
ANR	702807	Symbol	bits_8th		702041						
ANR	702808	Symbol	lo_Q		702041						
ANR	702809	Symbol	mde		702041						
ANR	702810	Symbol	mnab		702041						
ANR	702811	Symbol	hi_A		702041						
ANR	702812	Symbol	lo_B		702041						
ANR	702813	Symbol	hi_B		702041						
ANR	702814	Symbol	max_ulong		702041						
ANR	702815	Symbol	hi_D		702041						
ANR	702816	Symbol	lo_A		702041						
ANR	702817	Symbol	lo_D		702041						
ANR	702818	Symbol	manb		702041						
ANR	702819	Symbol	bits_4th		702041						
ANR	702820	Symbol	mdq		702041						
ANR	702821	Symbol	num_bits		702041						
ANR	702822	Symbol	mds		702041						
ANR	702823	Function	fixed_mult_quo	873:0:24106:25717							
ANR	702824	FunctionDef	"fixed_mult_quo (fixed signed_A , fixed B , fixed C)"		702823	0					
ANR	702825	CompoundStatement		875:0:24161:25717	702823	0					
ANR	702826	Statement	define	879:1:24244:24249	702823	0	True				
ANR	702827	Statement	MAX_OTHER_FACTOR	879:8:24251:24266	702823	1	True				
ANR	702828	Statement	(	879:25:24268:24268	702823	2	True				
ANR	702829	Statement	1L	879:26:24269:24270	702823	3	True				
ANR	702830	Statement	<<	879:29:24272:24273	702823	4	True				
ANR	702831	Statement	MAX_OTHER_FACTOR_BITS	879:32:24275:24295	702823	5	True				
ANR	702832	Statement	)	879:53:24296:24296	702823	6	True				
ANR	702833	IfStatement	if ( B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR )		702823	7					
ANR	702834	Condition	B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR	880:8:24306:24365	702823	0	True				
ANR	702835	OrExpression	B < MAX_OTHER_FACTOR || any_abs ( signed_A ) < MAX_OTHER_FACTOR		702823	0		||			
ANR	702836	RelationalExpression	B < MAX_OTHER_FACTOR		702823	0		<			
ANR	702837	Identifier	B		702823	0					
ANR	702838	Identifier	MAX_OTHER_FACTOR		702823	1					
ANR	702839	RelationalExpression	any_abs ( signed_A ) < MAX_OTHER_FACTOR		702823	1		<			
ANR	702840	CallExpression	any_abs ( signed_A )		702823	0					
ANR	702841	Callee	any_abs		702823	0					
ANR	702842	Identifier	any_abs		702823	0					
ANR	702843	ArgumentList	signed_A		702823	1					
ANR	702844	Argument	signed_A		702823	0					
ANR	702845	Identifier	signed_A		702823	0					
ANR	702846	Identifier	MAX_OTHER_FACTOR		702823	1					
ANR	702847	CompoundStatement		6:70:206:206	702823	1					
ANR	702848	Statement	undef	881:1:24371:24375	702823	0	True				
ANR	702849	Statement	MAX_OTHER_FACTOR	881:7:24377:24392	702823	1	True				
ANR	702850	ReturnStatement	return ( fixed ) floor ( ( double ) signed_A * B / C ) ;	886:8:24520:24565	702823	2	True				
ANR	702851	CastExpression	( fixed ) floor ( ( double ) signed_A * B / C )		702823	0					
ANR	702852	CastTarget	fixed		702823	0					
ANR	702853	CallExpression	floor ( ( double ) signed_A * B / C )		702823	1					
ANR	702854	Callee	floor		702823	0					
ANR	702855	Identifier	floor		702823	0					
ANR	702856	ArgumentList	( double ) signed_A * B / C		702823	1					
ANR	702857	Argument	( double ) signed_A * B / C		702823	0					
ANR	702858	MultiplicativeExpression	( double ) signed_A * B / C		702823	0		*			
ANR	702859	CastExpression	( double ) signed_A		702823	0					
ANR	702860	CastTarget	double		702823	0					
ANR	702861	Identifier	signed_A		702823	1					
ANR	702862	MultiplicativeExpression	B / C		702823	1		/			
ANR	702863	Identifier	B		702823	0					
ANR	702864	Identifier	C		702823	1					
ANR	702865	ElseStatement	else		702823	0					
ANR	702866	CompoundStatement		27:8:1234:1317	702823	0					
ANR	702867	IdentifierDeclStatement	fixed q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C ) ;	901:8:25396:25479	702823	0	True				
ANR	702868	IdentifierDecl	q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		702823	0					
ANR	702869	IdentifierDeclType	fixed		702823	0					
ANR	702870	Identifier	q		702823	1					
ANR	702871	AssignmentExpression	q = ( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		702823	2		=			
ANR	702872	Identifier	q		702823	0					
ANR	702873	CastExpression	( fixed ) floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		702823	1					
ANR	702874	CastTarget	fixed		702823	0					
ANR	702875	CallExpression	floor ( ( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C )		702823	1					
ANR	702876	Callee	floor		702823	0					
ANR	702877	Identifier	floor		702823	0					
ANR	702878	ArgumentList	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		702823	1					
ANR	702879	Argument	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		702823	0					
ANR	702880	MultiplicativeExpression	( ( double ) signed_A * B + ( 1L << ROUND_BITS ) ) / C		702823	0		/			
ANR	702881	AdditiveExpression	( double ) signed_A * B + ( 1L << ROUND_BITS )		702823	0		+			
ANR	702882	MultiplicativeExpression	( double ) signed_A * B		702823	0		*			
ANR	702883	CastExpression	( double ) signed_A		702823	0					
ANR	702884	CastTarget	double		702823	0					
ANR	702885	Identifier	signed_A		702823	1					
ANR	702886	Identifier	B		702823	1					
ANR	702887	ShiftExpression	1L << ROUND_BITS		702823	1		<<			
ANR	702888	PrimaryExpression	1L		702823	0					
ANR	702889	Identifier	ROUND_BITS		702823	1					
ANR	702890	Identifier	C		702823	1					
ANR	702891	IfStatement	if ( signed_A * B - q * C < 0 )		702823	1					
ANR	702892	Condition	signed_A * B - q * C < 0	908:12:25650:25673	702823	0	True				
ANR	702893	RelationalExpression	signed_A * B - q * C < 0		702823	0		<			
ANR	702894	AdditiveExpression	signed_A * B - q * C		702823	0		-			
ANR	702895	MultiplicativeExpression	signed_A * B		702823	0		*			
ANR	702896	Identifier	signed_A		702823	0					
ANR	702897	Identifier	B		702823	1					
ANR	702898	MultiplicativeExpression	q * C		702823	1		*			
ANR	702899	Identifier	q		702823	0					
ANR	702900	Identifier	C		702823	1					
ANR	702901	PrimaryExpression	0		702823	1					
ANR	702902	ExpressionStatement	-- q	909:12:25688:25691	702823	1	True				
ANR	702903	UnaryExpression	-- q		702823	0					
ANR	702904	IncDec	--		702823	0					
ANR	702905	Identifier	q		702823	1					
ANR	702906	ReturnStatement	return q ;	910:8:25701:25709	702823	2	True				
ANR	702907	Identifier	q		702823	0					
ANR	702908	ReturnType	fixed		702823	1					
ANR	702909	Identifier	fixed_mult_quo		702823	2					
ANR	702910	ParameterList	"fixed signed_A , fixed B , fixed C"		702823	3					
ANR	702911	Parameter	fixed signed_A	874:15:24127:24140	702823	0	True				
ANR	702912	ParameterType	fixed		702823	0					
ANR	702913	Identifier	signed_A		702823	1					
ANR	702914	Parameter	fixed B	874:31:24143:24149	702823	1	True				
ANR	702915	ParameterType	fixed		702823	0					
ANR	702916	Identifier	B		702823	1					
ANR	702917	Parameter	fixed C	874:40:24152:24158	702823	2	True				
ANR	702918	ParameterType	fixed		702823	0					
ANR	702919	Identifier	C		702823	1					
ANR	702920	CFGEntryNode	ENTRY		702823		True				
ANR	702921	CFGExitNode	EXIT		702823		True				
ANR	702922	Symbol	q		702823						
ANR	702923	Symbol	B		702823						
ANR	702924	Symbol	C		702823						
ANR	702925	Symbol	ROUND_BITS		702823						
ANR	702926	Symbol	signed_A		702823						
ANR	702927	Symbol	any_abs		702823						
ANR	702928	Symbol	MAX_OTHER_FACTOR		702823						
ANR	702929	Symbol	floor		702823						
ANR	702930	Function	gs_sqrt	916:1:25729:26102							
ANR	702931	FunctionDef	"gs_sqrt (double x , const char * file , int line)"		702930	0					
ANR	702932	CompoundStatement		926:0:25922:26102	702930	0					
ANR	702933	IfStatement	if ( gs_debug_c ( '~' ) )		702930	0					
ANR	702934	Condition	gs_debug_c ( '~' )	928:8:25954:25968	702930	0	True				
ANR	702935	CallExpression	gs_debug_c ( '~' )		702930	0					
ANR	702936	Callee	gs_debug_c		702930	0					
ANR	702937	Identifier	gs_debug_c		702930	0					
ANR	702938	ArgumentList	'~'		702930	1					
ANR	702939	Argument	'~'		702930	0					
ANR	702940	PrimaryExpression	'~'		702930	0					
ANR	702941	CompoundStatement		3:25:48:48	702930	1					
ANR	702942	ExpressionStatement	"dprintf3 ( ""[~]sqrt(%g) at %s:%d\\n"" , x , ( const char * ) file , line )"	929:8:25981:26044	702930	0	True				
ANR	702943	CallExpression	"dprintf3 ( ""[~]sqrt(%g) at %s:%d\\n"" , x , ( const char * ) file , line )"		702930	0					
ANR	702944	Callee	dprintf3		702930	0					
ANR	702945	Identifier	dprintf3		702930	0					
ANR	702946	ArgumentList	"""[~]sqrt(%g) at %s:%d\\n"""		702930	1					
ANR	702947	Argument	"""[~]sqrt(%g) at %s:%d\\n"""		702930	0					
ANR	702948	PrimaryExpression	"""[~]sqrt(%g) at %s:%d\\n"""		702930	0					
ANR	702949	Argument	x		702930	1					
ANR	702950	Identifier	x		702930	0					
ANR	702951	Argument	( const char * ) file		702930	2					
ANR	702952	CastExpression	( const char * ) file		702930	0					
ANR	702953	CastTarget	const char *		702930	0					
ANR	702954	Identifier	file		702930	1					
ANR	702955	Argument	line		702930	3					
ANR	702956	Identifier	line		702930	0					
ANR	702957	ExpressionStatement	dflush ( )	930:8:26054:26062	702930	1	True				
ANR	702958	CallExpression	dflush ( )		702930	0					
ANR	702959	Callee	dflush		702930	0					
ANR	702960	Identifier	dflush		702930	0					
ANR	702961	ArgumentList			702930	1					
ANR	702962	ReturnStatement	return orig_sqrt ( x ) ;	933:4:26081:26100	702930	1	True				
ANR	702963	CallExpression	orig_sqrt ( x )		702930	0					
ANR	702964	Callee	orig_sqrt		702930	0					
ANR	702965	Identifier	orig_sqrt		702930	0					
ANR	702966	ArgumentList	x		702930	1					
ANR	702967	Argument	x		702930	0					
ANR	702968	Identifier	x		702930	0					
ANR	702969	ReturnType	undef MAX_OTHER_FACTOR_BITS undef ROUND_BITS undef num_bits undef half_bits undef half_mask double		702930	1					
ANR	702970	Identifier	gs_sqrt		702930	2					
ANR	702971	ParameterList	"double x , const char * file , int line"		702930	3					
ANR	702972	Parameter	double x	925:8:25884:25891	702930	0	True				
ANR	702973	ParameterType	double		702930	0					
ANR	702974	Identifier	x		702930	1					
ANR	702975	Parameter	const char * file	925:18:25894:25909	702930	1	True				
ANR	702976	ParameterType	const char *		702930	0					
ANR	702977	Identifier	file		702930	1					
ANR	702978	Parameter	int line	925:36:25912:25919	702930	2	True				
ANR	702979	ParameterType	int		702930	0					
ANR	702980	Identifier	line		702930	1					
ANR	702981	CFGEntryNode	ENTRY		702930		True				
ANR	702982	CFGExitNode	EXIT		702930		True				
ANR	702983	Symbol	file		702930						
ANR	702984	Symbol	line		702930						
ANR	702985	Symbol	x		702930						
ANR	702986	Symbol	gs_debug_c		702930						
ANR	702987	Symbol	orig_sqrt		702930						
ANR	702988	DeclStmt									
ANR	702989	Decl							const int	const int [ 5 ]	isincos
ANR	702990	DeclStmt									
ANR	702991	Decl							double	double	const_90_degrees
ANR	702992	Function	gs_sin_degrees	945:0:26406:26760							
ANR	702993	FunctionDef	gs_sin_degrees (double ang)		702992	0					
ANR	702994	CompoundStatement		947:0:26440:26760	702992	0					
ANR	702995	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	948:4:26446:26482	702992	0	True				
ANR	702996	IdentifierDecl	quot = ang / const_90_degrees		702992	0					
ANR	702997	IdentifierDeclType	double		702992	0					
ANR	702998	Identifier	quot		702992	1					
ANR	702999	AssignmentExpression	quot = ang / const_90_degrees		702992	2		=			
ANR	703000	Identifier	quot		702992	0					
ANR	703001	MultiplicativeExpression	ang / const_90_degrees		702992	1		/			
ANR	703002	Identifier	ang		702992	0					
ANR	703003	Identifier	const_90_degrees		702992	1					
ANR	703004	IfStatement	if ( floor ( quot ) == quot )		702992	1					
ANR	703005	Condition	floor ( quot ) == quot	950:8:26493:26511	702992	0	True				
ANR	703006	EqualityExpression	floor ( quot ) == quot		702992	0		==			
ANR	703007	CallExpression	floor ( quot )		702992	0					
ANR	703008	Callee	floor		702992	0					
ANR	703009	Identifier	floor		702992	0					
ANR	703010	ArgumentList	quot		702992	1					
ANR	703011	Argument	quot		702992	0					
ANR	703012	Identifier	quot		702992	0					
ANR	703013	Identifier	quot		702992	1					
ANR	703014	CompoundStatement		4:29:73:73	702992	1					
ANR	703015	ReturnStatement	"return isincos [ ( int ) fmod ( quot , 4.0 ) & 3 ] ;"	955:8:26676:26716	702992	0	True				
ANR	703016	ArrayIndexing	"isincos [ ( int ) fmod ( quot , 4.0 ) & 3 ]"		702992	0					
ANR	703017	Identifier	isincos		702992	0					
ANR	703018	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		702992	1		&			
ANR	703019	CastExpression	"( int ) fmod ( quot , 4.0 )"		702992	0					
ANR	703020	CastTarget	int		702992	0					
ANR	703021	CallExpression	"fmod ( quot , 4.0 )"		702992	1					
ANR	703022	Callee	fmod		702992	0					
ANR	703023	Identifier	fmod		702992	0					
ANR	703024	ArgumentList	quot		702992	1					
ANR	703025	Argument	quot		702992	0					
ANR	703026	Identifier	quot		702992	0					
ANR	703027	Argument	4.0		702992	1					
ANR	703028	PrimaryExpression	4.0		702992	0					
ANR	703029	PrimaryExpression	3		702992	1					
ANR	703030	ReturnStatement	return sin ( ang * ( M_PI / 180 ) ) ;	957:4:26728:26758	702992	2	True				
ANR	703031	CallExpression	sin ( ang * ( M_PI / 180 ) )		702992	0					
ANR	703032	Callee	sin		702992	0					
ANR	703033	Identifier	sin		702992	0					
ANR	703034	ArgumentList	ang * ( M_PI / 180 )		702992	1					
ANR	703035	Argument	ang * ( M_PI / 180 )		702992	0					
ANR	703036	MultiplicativeExpression	ang * ( M_PI / 180 )		702992	0		*			
ANR	703037	Identifier	ang		702992	0					
ANR	703038	MultiplicativeExpression	M_PI / 180		702992	1		/			
ANR	703039	Identifier	M_PI		702992	0					
ANR	703040	PrimaryExpression	180		702992	1					
ANR	703041	ReturnType	double		702992	1					
ANR	703042	Identifier	gs_sin_degrees		702992	2					
ANR	703043	ParameterList	double ang		702992	3					
ANR	703044	Parameter	double ang	946:15:26428:26437	702992	0	True				
ANR	703045	ParameterType	double		702992	0					
ANR	703046	Identifier	ang		702992	1					
ANR	703047	CFGEntryNode	ENTRY		702992		True				
ANR	703048	CFGExitNode	EXIT		702992		True				
ANR	703049	Symbol	const_90_degrees		702992						
ANR	703050	Symbol	* isincos		702992						
ANR	703051	Symbol	sin		702992						
ANR	703052	Symbol	ang		702992						
ANR	703053	Symbol	quot		702992						
ANR	703054	Symbol	floor		702992						
ANR	703055	Symbol	fmod		702992						
ANR	703056	Symbol	* fmod		702992						
ANR	703057	Symbol	isincos		702992						
ANR	703058	Symbol	M_PI		702992						
ANR	703059	Function	gs_cos_degrees	960:0:26763:27018							
ANR	703060	FunctionDef	gs_cos_degrees (double ang)		703059	0					
ANR	703061	CompoundStatement		962:0:26797:27018	703059	0					
ANR	703062	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	963:4:26803:26839	703059	0	True				
ANR	703063	IdentifierDecl	quot = ang / const_90_degrees		703059	0					
ANR	703064	IdentifierDeclType	double		703059	0					
ANR	703065	Identifier	quot		703059	1					
ANR	703066	AssignmentExpression	quot = ang / const_90_degrees		703059	2		=			
ANR	703067	Identifier	quot		703059	0					
ANR	703068	MultiplicativeExpression	ang / const_90_degrees		703059	1		/			
ANR	703069	Identifier	ang		703059	0					
ANR	703070	Identifier	const_90_degrees		703059	1					
ANR	703071	IfStatement	if ( floor ( quot ) == quot )		703059	1					
ANR	703072	Condition	floor ( quot ) == quot	965:8:26850:26868	703059	0	True				
ANR	703073	EqualityExpression	floor ( quot ) == quot		703059	0		==			
ANR	703074	CallExpression	floor ( quot )		703059	0					
ANR	703075	Callee	floor		703059	0					
ANR	703076	Identifier	floor		703059	0					
ANR	703077	ArgumentList	quot		703059	1					
ANR	703078	Argument	quot		703059	0					
ANR	703079	Identifier	quot		703059	0					
ANR	703080	Identifier	quot		703059	1					
ANR	703081	CompoundStatement		4:29:73:73	703059	1					
ANR	703082	ReturnStatement	"return isincos [ ( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1 ] ;"	967:8:26928:26974	703059	0	True				
ANR	703083	ArrayIndexing	"isincos [ ( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1 ]"		703059	0					
ANR	703084	Identifier	isincos		703059	0					
ANR	703085	AdditiveExpression	"( ( int ) fmod ( quot , 4.0 ) & 3 ) + 1"		703059	1		+			
ANR	703086	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		703059	0		&			
ANR	703087	CastExpression	"( int ) fmod ( quot , 4.0 )"		703059	0					
ANR	703088	CastTarget	int		703059	0					
ANR	703089	CallExpression	"fmod ( quot , 4.0 )"		703059	1					
ANR	703090	Callee	fmod		703059	0					
ANR	703091	Identifier	fmod		703059	0					
ANR	703092	ArgumentList	quot		703059	1					
ANR	703093	Argument	quot		703059	0					
ANR	703094	Identifier	quot		703059	0					
ANR	703095	Argument	4.0		703059	1					
ANR	703096	PrimaryExpression	4.0		703059	0					
ANR	703097	PrimaryExpression	3		703059	1					
ANR	703098	PrimaryExpression	1		703059	1					
ANR	703099	ReturnStatement	return cos ( ang * ( M_PI / 180 ) ) ;	969:4:26986:27016	703059	2	True				
ANR	703100	CallExpression	cos ( ang * ( M_PI / 180 ) )		703059	0					
ANR	703101	Callee	cos		703059	0					
ANR	703102	Identifier	cos		703059	0					
ANR	703103	ArgumentList	ang * ( M_PI / 180 )		703059	1					
ANR	703104	Argument	ang * ( M_PI / 180 )		703059	0					
ANR	703105	MultiplicativeExpression	ang * ( M_PI / 180 )		703059	0		*			
ANR	703106	Identifier	ang		703059	0					
ANR	703107	MultiplicativeExpression	M_PI / 180		703059	1		/			
ANR	703108	Identifier	M_PI		703059	0					
ANR	703109	PrimaryExpression	180		703059	1					
ANR	703110	ReturnType	double		703059	1					
ANR	703111	Identifier	gs_cos_degrees		703059	2					
ANR	703112	ParameterList	double ang		703059	3					
ANR	703113	Parameter	double ang	961:15:26785:26794	703059	0	True				
ANR	703114	ParameterType	double		703059	0					
ANR	703115	Identifier	ang		703059	1					
ANR	703116	CFGEntryNode	ENTRY		703059		True				
ANR	703117	CFGExitNode	EXIT		703059		True				
ANR	703118	Symbol	const_90_degrees		703059						
ANR	703119	Symbol	* isincos		703059						
ANR	703120	Symbol	cos		703059						
ANR	703121	Symbol	ang		703059						
ANR	703122	Symbol	quot		703059						
ANR	703123	Symbol	floor		703059						
ANR	703124	Symbol	fmod		703059						
ANR	703125	Symbol	* fmod		703059						
ANR	703126	Symbol	isincos		703059						
ANR	703127	Symbol	M_PI		703059						
ANR	703128	Function	gs_sincos_degrees	972:0:27021:27534							
ANR	703129	FunctionDef	"gs_sincos_degrees (double ang , gs_sincos_t * psincos)"		703128	0					
ANR	703130	CompoundStatement		974:0:27079:27534	703128	0					
ANR	703131	IdentifierDeclStatement	double quot = ang / const_90_degrees ;	975:4:27085:27121	703128	0	True				
ANR	703132	IdentifierDecl	quot = ang / const_90_degrees		703128	0					
ANR	703133	IdentifierDeclType	double		703128	0					
ANR	703134	Identifier	quot		703128	1					
ANR	703135	AssignmentExpression	quot = ang / const_90_degrees		703128	2		=			
ANR	703136	Identifier	quot		703128	0					
ANR	703137	MultiplicativeExpression	ang / const_90_degrees		703128	1		/			
ANR	703138	Identifier	ang		703128	0					
ANR	703139	Identifier	const_90_degrees		703128	1					
ANR	703140	IfStatement	if ( floor ( quot ) == quot )		703128	1					
ANR	703141	Condition	floor ( quot ) == quot	977:8:27132:27150	703128	0	True				
ANR	703142	EqualityExpression	floor ( quot ) == quot		703128	0		==			
ANR	703143	CallExpression	floor ( quot )		703128	0					
ANR	703144	Callee	floor		703128	0					
ANR	703145	Identifier	floor		703128	0					
ANR	703146	ArgumentList	quot		703128	1					
ANR	703147	Argument	quot		703128	0					
ANR	703148	Identifier	quot		703128	0					
ANR	703149	Identifier	quot		703128	1					
ANR	703150	CompoundStatement		6:8:130:166	703128	1					
ANR	703151	IdentifierDeclStatement	"int quads = ( int ) fmod ( quot , 4.0 ) & 3 ;"	979:8:27210:27246	703128	0	True				
ANR	703152	IdentifierDecl	"quads = ( int ) fmod ( quot , 4.0 ) & 3"		703128	0					
ANR	703153	IdentifierDeclType	int		703128	0					
ANR	703154	Identifier	quads		703128	1					
ANR	703155	AssignmentExpression	"quads = ( int ) fmod ( quot , 4.0 ) & 3"		703128	2		=			
ANR	703156	Identifier	quads		703128	0					
ANR	703157	BitAndExpression	"( int ) fmod ( quot , 4.0 ) & 3"		703128	1		&			
ANR	703158	CastExpression	"( int ) fmod ( quot , 4.0 )"		703128	0					
ANR	703159	CastTarget	int		703128	0					
ANR	703160	CallExpression	"fmod ( quot , 4.0 )"		703128	1					
ANR	703161	Callee	fmod		703128	0					
ANR	703162	Identifier	fmod		703128	0					
ANR	703163	ArgumentList	quot		703128	1					
ANR	703164	Argument	quot		703128	0					
ANR	703165	Identifier	quot		703128	0					
ANR	703166	Argument	4.0		703128	1					
ANR	703167	PrimaryExpression	4.0		703128	0					
ANR	703168	PrimaryExpression	3		703128	1					
ANR	703169	ExpressionStatement	psincos -> sin = isincos [ quads ]	981:8:27257:27286	703128	1	True				
ANR	703170	AssignmentExpression	psincos -> sin = isincos [ quads ]		703128	0		=			
ANR	703171	PtrMemberAccess	psincos -> sin		703128	0					
ANR	703172	Identifier	psincos		703128	0					
ANR	703173	Identifier	sin		703128	1					
ANR	703174	ArrayIndexing	isincos [ quads ]		703128	1					
ANR	703175	Identifier	isincos		703128	0					
ANR	703176	Identifier	quads		703128	1					
ANR	703177	ExpressionStatement	psincos -> cos = isincos [ quads + 1 ]	982:8:27296:27329	703128	2	True				
ANR	703178	AssignmentExpression	psincos -> cos = isincos [ quads + 1 ]		703128	0		=			
ANR	703179	PtrMemberAccess	psincos -> cos		703128	0					
ANR	703180	Identifier	psincos		703128	0					
ANR	703181	Identifier	cos		703128	1					
ANR	703182	ArrayIndexing	isincos [ quads + 1 ]		703128	1					
ANR	703183	Identifier	isincos		703128	0					
ANR	703184	AdditiveExpression	quads + 1		703128	1		+			
ANR	703185	Identifier	quads		703128	0					
ANR	703186	PrimaryExpression	1		703128	1					
ANR	703187	ExpressionStatement	psincos -> orthogonal = true	983:8:27339:27365	703128	3	True				
ANR	703188	AssignmentExpression	psincos -> orthogonal = true		703128	0		=			
ANR	703189	PtrMemberAccess	psincos -> orthogonal		703128	0					
ANR	703190	Identifier	psincos		703128	0					
ANR	703191	Identifier	orthogonal		703128	1					
ANR	703192	Identifier	true		703128	1					
ANR	703193	ElseStatement	else		703128	0					
ANR	703194	CompoundStatement		12:8:308:340	703128	0					
ANR	703195	IdentifierDeclStatement	double arad = ang * ( M_PI / 180 ) ;	985:8:27388:27420	703128	0	True				
ANR	703196	IdentifierDecl	arad = ang * ( M_PI / 180 )		703128	0					
ANR	703197	IdentifierDeclType	double		703128	0					
ANR	703198	Identifier	arad		703128	1					
ANR	703199	AssignmentExpression	arad = ang * ( M_PI / 180 )		703128	2		=			
ANR	703200	Identifier	arad		703128	0					
ANR	703201	MultiplicativeExpression	ang * ( M_PI / 180 )		703128	1		*			
ANR	703202	Identifier	ang		703128	0					
ANR	703203	MultiplicativeExpression	M_PI / 180		703128	1		/			
ANR	703204	Identifier	M_PI		703128	0					
ANR	703205	PrimaryExpression	180		703128	1					
ANR	703206	ExpressionStatement	psincos -> sin = sin ( arad )	987:8:27431:27455	703128	1	True				
ANR	703207	AssignmentExpression	psincos -> sin = sin ( arad )		703128	0		=			
ANR	703208	PtrMemberAccess	psincos -> sin		703128	0					
ANR	703209	Identifier	psincos		703128	0					
ANR	703210	Identifier	sin		703128	1					
ANR	703211	CallExpression	sin ( arad )		703128	1					
ANR	703212	Callee	sin		703128	0					
ANR	703213	Identifier	sin		703128	0					
ANR	703214	ArgumentList	arad		703128	1					
ANR	703215	Argument	arad		703128	0					
ANR	703216	Identifier	arad		703128	0					
ANR	703217	ExpressionStatement	psincos -> cos = cos ( arad )	988:8:27465:27489	703128	2	True				
ANR	703218	AssignmentExpression	psincos -> cos = cos ( arad )		703128	0		=			
ANR	703219	PtrMemberAccess	psincos -> cos		703128	0					
ANR	703220	Identifier	psincos		703128	0					
ANR	703221	Identifier	cos		703128	1					
ANR	703222	CallExpression	cos ( arad )		703128	1					
ANR	703223	Callee	cos		703128	0					
ANR	703224	Identifier	cos		703128	0					
ANR	703225	ArgumentList	arad		703128	1					
ANR	703226	Argument	arad		703128	0					
ANR	703227	Identifier	arad		703128	0					
ANR	703228	ExpressionStatement	psincos -> orthogonal = false	989:8:27499:27526	703128	3	True				
ANR	703229	AssignmentExpression	psincos -> orthogonal = false		703128	0		=			
ANR	703230	PtrMemberAccess	psincos -> orthogonal		703128	0					
ANR	703231	Identifier	psincos		703128	0					
ANR	703232	Identifier	orthogonal		703128	1					
ANR	703233	Identifier	false		703128	1					
ANR	703234	ReturnType	void		703128	1					
ANR	703235	Identifier	gs_sincos_degrees		703128	2					
ANR	703236	ParameterList	"double ang , gs_sincos_t * psincos"		703128	3					
ANR	703237	Parameter	double ang	973:18:27044:27053	703128	0	True				
ANR	703238	ParameterType	double		703128	0					
ANR	703239	Identifier	ang		703128	1					
ANR	703240	Parameter	gs_sincos_t * psincos	973:30:27056:27076	703128	1	True				
ANR	703241	ParameterType	gs_sincos_t *		703128	0					
ANR	703242	Identifier	psincos		703128	1					
ANR	703243	CFGEntryNode	ENTRY		703128		True				
ANR	703244	CFGExitNode	EXIT		703128		True				
ANR	703245	Symbol	psincos -> sin		703128						
ANR	703246	Symbol	const_90_degrees		703128						
ANR	703247	Symbol	quads		703128						
ANR	703248	Symbol	* isincos		703128						
ANR	703249	Symbol	cos		703128						
ANR	703250	Symbol	false		703128						
ANR	703251	Symbol	fmod		703128						
ANR	703252	Symbol	psincos		703128						
ANR	703253	Symbol	M_PI		703128						
ANR	703254	Symbol	psincos -> cos		703128						
ANR	703255	Symbol	true		703128						
ANR	703256	Symbol	* quads		703128						
ANR	703257	Symbol	arad		703128						
ANR	703258	Symbol	sin		703128						
ANR	703259	Symbol	ang		703128						
ANR	703260	Symbol	* psincos		703128						
ANR	703261	Symbol	quot		703128						
ANR	703262	Symbol	floor		703128						
ANR	703263	Symbol	isincos		703128						
ANR	703264	Symbol	psincos -> orthogonal		703128						
ANR	703265	Function	gs_atan2_degrees	998:0:27702:28093							
ANR	703266	FunctionDef	"gs_atan2_degrees (double y , double x , double * pangle)"		703265	0					
ANR	703267	CompoundStatement		1000:0:27759:28093	703265	0					
ANR	703268	IfStatement	if ( y == 0 )		703265	0					
ANR	703269	Condition	y == 0	1001:8:27769:27774	703265	0	True				
ANR	703270	EqualityExpression	y == 0		703265	0		==			
ANR	703271	Identifier	y		703265	0					
ANR	703272	PrimaryExpression	0		703265	1					
ANR	703273	CompoundStatement		2:16:17:17	703265	1					
ANR	703274	IfStatement	if ( x == 0 )		703265	0					
ANR	703275	Condition	x == 0	1002:12:27827:27832	703265	0	True				
ANR	703276	EqualityExpression	x == 0		703265	0		==			
ANR	703277	Identifier	x		703265	0					
ANR	703278	PrimaryExpression	0		703265	1					
ANR	703279	ExpressionStatement	return_error ( gs_error_undefinedresult )	1003:12:27847:27885	703265	1	True				
ANR	703280	CallExpression	return_error ( gs_error_undefinedresult )		703265	0					
ANR	703281	Callee	return_error		703265	0					
ANR	703282	Identifier	return_error		703265	0					
ANR	703283	ArgumentList	gs_error_undefinedresult		703265	1					
ANR	703284	Argument	gs_error_undefinedresult		703265	0					
ANR	703285	Identifier	gs_error_undefinedresult		703265	0					
ANR	703286	ExpressionStatement	* pangle = ( x < 0 ? 180 : 0 )	1004:8:27895:27922	703265	1	True				
ANR	703287	AssignmentExpression	* pangle = ( x < 0 ? 180 : 0 )		703265	0		=			
ANR	703288	UnaryOperationExpression	* pangle		703265	0					
ANR	703289	UnaryOperator	*		703265	0					
ANR	703290	Identifier	pangle		703265	1					
ANR	703291	ConditionalExpression	x < 0 ? 180 : 0		703265	1					
ANR	703292	Condition	x < 0		703265	0					
ANR	703293	RelationalExpression	x < 0		703265	0		<			
ANR	703294	Identifier	x		703265	0					
ANR	703295	PrimaryExpression	0		703265	1					
ANR	703296	PrimaryExpression	180		703265	1					
ANR	703297	PrimaryExpression	0		703265	2					
ANR	703298	ElseStatement	else		703265	0					
ANR	703299	CompoundStatement		7:8:185:233	703265	0					
ANR	703300	IdentifierDeclStatement	"double result = atan2 ( y , x ) * radians_to_degrees ;"	1006:8:27945:27993	703265	0	True				
ANR	703301	IdentifierDecl	"result = atan2 ( y , x ) * radians_to_degrees"		703265	0					
ANR	703302	IdentifierDeclType	double		703265	0					
ANR	703303	Identifier	result		703265	1					
ANR	703304	AssignmentExpression	"result = atan2 ( y , x ) * radians_to_degrees"		703265	2		=			
ANR	703305	Identifier	result		703265	0					
ANR	703306	MultiplicativeExpression	"atan2 ( y , x ) * radians_to_degrees"		703265	1		*			
ANR	703307	CallExpression	"atan2 ( y , x )"		703265	0					
ANR	703308	Callee	atan2		703265	0					
ANR	703309	Identifier	atan2		703265	0					
ANR	703310	ArgumentList	y		703265	1					
ANR	703311	Argument	y		703265	0					
ANR	703312	Identifier	y		703265	0					
ANR	703313	Argument	x		703265	1					
ANR	703314	Identifier	x		703265	0					
ANR	703315	Identifier	radians_to_degrees		703265	1					
ANR	703316	IfStatement	if ( result < 0 )		703265	1					
ANR	703317	Condition	result < 0	1008:12:28008:28017	703265	0	True				
ANR	703318	RelationalExpression	result < 0		703265	0		<			
ANR	703319	Identifier	result		703265	0					
ANR	703320	PrimaryExpression	0		703265	1					
ANR	703321	ExpressionStatement	result += 360	1009:12:28032:28045	703265	1	True				
ANR	703322	AssignmentExpression	result += 360		703265	0		+=			
ANR	703323	Identifier	result		703265	0					
ANR	703324	PrimaryExpression	360		703265	1					
ANR	703325	ExpressionStatement	* pangle = result	1010:8:28055:28071	703265	2	True				
ANR	703326	AssignmentExpression	* pangle = result		703265	0		=			
ANR	703327	UnaryOperationExpression	* pangle		703265	0					
ANR	703328	UnaryOperator	*		703265	0					
ANR	703329	Identifier	pangle		703265	1					
ANR	703330	Identifier	result		703265	1					
ANR	703331	ReturnStatement	return 0 ;	1012:4:28083:28091	703265	1	True				
ANR	703332	PrimaryExpression	0		703265	0					
ANR	703333	ReturnType	int		703265	1					
ANR	703334	Identifier	gs_atan2_degrees		703265	2					
ANR	703335	ParameterList	"double y , double x , double * pangle"		703265	3					
ANR	703336	Parameter	double y	999:17:27723:27730	703265	0	True				
ANR	703337	ParameterType	double		703265	0					
ANR	703338	Identifier	y		703265	1					
ANR	703339	Parameter	double x	999:27:27733:27740	703265	1	True				
ANR	703340	ParameterType	double		703265	0					
ANR	703341	Identifier	x		703265	1					
ANR	703342	Parameter	double * pangle	999:37:27743:27756	703265	2	True				
ANR	703343	ParameterType	double *		703265	0					
ANR	703344	Identifier	pangle		703265	1					
ANR	703345	CFGEntryNode	ENTRY		703265		True				
ANR	703346	CFGExitNode	EXIT		703265		True				
ANR	703347	Symbol	result		703265						
ANR	703348	Symbol	x		703265						
ANR	703349	Symbol	y		703265						
ANR	703350	Symbol	pangle		703265						
ANR	703351	Symbol	* pangle		703265						
ANR	703352	Symbol	radians_to_degrees		703265						
ANR	703353	Symbol	gs_error_undefinedresult		703265						
ANR	703354	Symbol	atan2		703265						
ANR	703355	Function	gx_intersect_small_bars	1024:0:28538:32283							
ANR	703356	FunctionDef	"gx_intersect_small_bars (fixed q0x , fixed q0y , fixed q1x , fixed q1y , fixed q2x , fixed q2y , fixed q3x , fixed q3y , fixed * ry , fixed * ey)"		703355	0					
ANR	703357	CompoundStatement		1027:0:28701:32283	703355	0					
ANR	703358	IdentifierDeclStatement	"fixed dx1 = q1x - q0x , dy1 = q1y - q0y ;"	1028:4:28707:28745	703355	0	True				
ANR	703359	IdentifierDecl	dx1 = q1x - q0x		703355	0					
ANR	703360	IdentifierDeclType	fixed		703355	0					
ANR	703361	Identifier	dx1		703355	1					
ANR	703362	AssignmentExpression	dx1 = q1x - q0x		703355	2		=			
ANR	703363	Identifier	dx1		703355	0					
ANR	703364	AdditiveExpression	q1x - q0x		703355	1		-			
ANR	703365	Identifier	q1x		703355	0					
ANR	703366	Identifier	q0x		703355	1					
ANR	703367	IdentifierDecl	dy1 = q1y - q0y		703355	1					
ANR	703368	IdentifierDeclType	fixed		703355	0					
ANR	703369	Identifier	dy1		703355	1					
ANR	703370	AssignmentExpression	dy1 = q1y - q0y		703355	2		=			
ANR	703371	Identifier	dy1		703355	0					
ANR	703372	AdditiveExpression	q1y - q0y		703355	1		-			
ANR	703373	Identifier	q1y		703355	0					
ANR	703374	Identifier	q0y		703355	1					
ANR	703375	IdentifierDeclStatement	"fixed dx2 = q2x - q0x , dy2 = q2y - q0y ;"	1029:4:28751:28789	703355	1	True				
ANR	703376	IdentifierDecl	dx2 = q2x - q0x		703355	0					
ANR	703377	IdentifierDeclType	fixed		703355	0					
ANR	703378	Identifier	dx2		703355	1					
ANR	703379	AssignmentExpression	dx2 = q2x - q0x		703355	2		=			
ANR	703380	Identifier	dx2		703355	0					
ANR	703381	AdditiveExpression	q2x - q0x		703355	1		-			
ANR	703382	Identifier	q2x		703355	0					
ANR	703383	Identifier	q0x		703355	1					
ANR	703384	IdentifierDecl	dy2 = q2y - q0y		703355	1					
ANR	703385	IdentifierDeclType	fixed		703355	0					
ANR	703386	Identifier	dy2		703355	1					
ANR	703387	AssignmentExpression	dy2 = q2y - q0y		703355	2		=			
ANR	703388	Identifier	dy2		703355	0					
ANR	703389	AdditiveExpression	q2y - q0y		703355	1		-			
ANR	703390	Identifier	q2y		703355	0					
ANR	703391	Identifier	q0y		703355	1					
ANR	703392	IdentifierDeclStatement	"fixed dx3 = q3x - q0x , dy3 = q3y - q0y ;"	1030:4:28795:28833	703355	2	True				
ANR	703393	IdentifierDecl	dx3 = q3x - q0x		703355	0					
ANR	703394	IdentifierDeclType	fixed		703355	0					
ANR	703395	Identifier	dx3		703355	1					
ANR	703396	AssignmentExpression	dx3 = q3x - q0x		703355	2		=			
ANR	703397	Identifier	dx3		703355	0					
ANR	703398	AdditiveExpression	q3x - q0x		703355	1		-			
ANR	703399	Identifier	q3x		703355	0					
ANR	703400	Identifier	q0x		703355	1					
ANR	703401	IdentifierDecl	dy3 = q3y - q0y		703355	1					
ANR	703402	IdentifierDeclType	fixed		703355	0					
ANR	703403	Identifier	dy3		703355	1					
ANR	703404	AssignmentExpression	dy3 = q3y - q0y		703355	2		=			
ANR	703405	Identifier	dy3		703355	0					
ANR	703406	AdditiveExpression	q3y - q0y		703355	1		-			
ANR	703407	Identifier	q3y		703355	0					
ANR	703408	Identifier	q0y		703355	1					
ANR	703409	IdentifierDeclStatement	"int64_t vp2a , vp2b , vp3a , vp3b ;"	1032:4:28840:28870	703355	3	True				
ANR	703410	IdentifierDecl	vp2a		703355	0					
ANR	703411	IdentifierDeclType	int64_t		703355	0					
ANR	703412	Identifier	vp2a		703355	1					
ANR	703413	IdentifierDecl	vp2b		703355	1					
ANR	703414	IdentifierDeclType	int64_t		703355	0					
ANR	703415	Identifier	vp2b		703355	1					
ANR	703416	IdentifierDecl	vp3a		703355	2					
ANR	703417	IdentifierDeclType	int64_t		703355	0					
ANR	703418	Identifier	vp3a		703355	1					
ANR	703419	IdentifierDecl	vp3b		703355	3					
ANR	703420	IdentifierDeclType	int64_t		703355	0					
ANR	703421	Identifier	vp3b		703355	1					
ANR	703422	IdentifierDeclStatement	"int s2 , s3 ;"	1033:4:28876:28886	703355	4	True				
ANR	703423	IdentifierDecl	s2		703355	0					
ANR	703424	IdentifierDeclType	int		703355	0					
ANR	703425	Identifier	s2		703355	1					
ANR	703426	IdentifierDecl	s3		703355	1					
ANR	703427	IdentifierDeclType	int		703355	0					
ANR	703428	Identifier	s3		703355	1					
ANR	703429	IfStatement	if ( dx1 == 0 && dy1 == 0 )		703355	5					
ANR	703430	Condition	dx1 == 0 && dy1 == 0	1035:8:28897:28916	703355	0	True				
ANR	703431	AndExpression	dx1 == 0 && dy1 == 0		703355	0		&&			
ANR	703432	EqualityExpression	dx1 == 0		703355	0		==			
ANR	703433	Identifier	dx1		703355	0					
ANR	703434	PrimaryExpression	0		703355	1					
ANR	703435	EqualityExpression	dy1 == 0		703355	1		==			
ANR	703436	Identifier	dy1		703355	0					
ANR	703437	PrimaryExpression	0		703355	1					
ANR	703438	ReturnStatement	return false ;	1036:8:28927:28939	703355	1	True				
ANR	703439	Identifier	false		703355	0					
ANR	703440	IfStatement	if ( dx2 == 0 && dy2 == 0 )		703355	6					
ANR	703441	Condition	dx2 == 0 && dy2 == 0	1037:8:28993:29012	703355	0	True				
ANR	703442	AndExpression	dx2 == 0 && dy2 == 0		703355	0		&&			
ANR	703443	EqualityExpression	dx2 == 0		703355	0		==			
ANR	703444	Identifier	dx2		703355	0					
ANR	703445	PrimaryExpression	0		703355	1					
ANR	703446	EqualityExpression	dy2 == 0		703355	1		==			
ANR	703447	Identifier	dy2		703355	0					
ANR	703448	PrimaryExpression	0		703355	1					
ANR	703449	ReturnStatement	return false ;	1038:8:29023:29035	703355	1	True				
ANR	703450	Identifier	false		703355	0					
ANR	703451	IfStatement	if ( dx3 == 0 && dy3 == 0 )		703355	7					
ANR	703452	Condition	dx3 == 0 && dy3 == 0	1039:8:29088:29107	703355	0	True				
ANR	703453	AndExpression	dx3 == 0 && dy3 == 0		703355	0		&&			
ANR	703454	EqualityExpression	dx3 == 0		703355	0		==			
ANR	703455	Identifier	dx3		703355	0					
ANR	703456	PrimaryExpression	0		703355	1					
ANR	703457	EqualityExpression	dy3 == 0		703355	1		==			
ANR	703458	Identifier	dy3		703355	0					
ANR	703459	PrimaryExpression	0		703355	1					
ANR	703460	ReturnStatement	return false ;	1040:8:29118:29130	703355	1	True				
ANR	703461	Identifier	false		703355	0					
ANR	703462	IfStatement	if ( dx2 == dx1 && dy2 == dy1 )		703355	8					
ANR	703463	Condition	dx2 == dx1 && dy2 == dy1	1041:8:29183:29206	703355	0	True				
ANR	703464	AndExpression	dx2 == dx1 && dy2 == dy1		703355	0		&&			
ANR	703465	EqualityExpression	dx2 == dx1		703355	0		==			
ANR	703466	Identifier	dx2		703355	0					
ANR	703467	Identifier	dx1		703355	1					
ANR	703468	EqualityExpression	dy2 == dy1		703355	1		==			
ANR	703469	Identifier	dy2		703355	0					
ANR	703470	Identifier	dy1		703355	1					
ANR	703471	ReturnStatement	return false ;	1042:8:29217:29229	703355	1	True				
ANR	703472	Identifier	false		703355	0					
ANR	703473	IfStatement	if ( dx3 == dx1 && dy3 == dy1 )		703355	9					
ANR	703474	Condition	dx3 == dx1 && dy3 == dy1	1043:8:29282:29305	703355	0	True				
ANR	703475	AndExpression	dx3 == dx1 && dy3 == dy1		703355	0		&&			
ANR	703476	EqualityExpression	dx3 == dx1		703355	0		==			
ANR	703477	Identifier	dx3		703355	0					
ANR	703478	Identifier	dx1		703355	1					
ANR	703479	EqualityExpression	dy3 == dy1		703355	1		==			
ANR	703480	Identifier	dy3		703355	0					
ANR	703481	Identifier	dy1		703355	1					
ANR	703482	ReturnStatement	return false ;	1044:8:29316:29328	703355	1	True				
ANR	703483	Identifier	false		703355	0					
ANR	703484	IfStatement	if ( dx2 == dx3 && dy2 == dy3 )		703355	10					
ANR	703485	Condition	dx2 == dx3 && dy2 == dy3	1045:8:29381:29404	703355	0	True				
ANR	703486	AndExpression	dx2 == dx3 && dy2 == dy3		703355	0		&&			
ANR	703487	EqualityExpression	dx2 == dx3		703355	0		==			
ANR	703488	Identifier	dx2		703355	0					
ANR	703489	Identifier	dx3		703355	1					
ANR	703490	EqualityExpression	dy2 == dy3		703355	1		==			
ANR	703491	Identifier	dy2		703355	0					
ANR	703492	Identifier	dy3		703355	1					
ANR	703493	ReturnStatement	return false ;	1046:8:29415:29427	703355	1	True				
ANR	703494	Identifier	false		703355	0					
ANR	703495	ExpressionStatement	vp2a = ( int64_t ) dx1 * dy2	1047:4:29477:29502	703355	11	True				
ANR	703496	AssignmentExpression	vp2a = ( int64_t ) dx1 * dy2		703355	0		=			
ANR	703497	Identifier	vp2a		703355	0					
ANR	703498	MultiplicativeExpression	( int64_t ) dx1 * dy2		703355	1		*			
ANR	703499	CastExpression	( int64_t ) dx1		703355	0					
ANR	703500	CastTarget	int64_t		703355	0					
ANR	703501	Identifier	dx1		703355	1					
ANR	703502	Identifier	dy2		703355	1					
ANR	703503	ExpressionStatement	vp2b = ( int64_t ) dy1 * dx2	1048:4:29508:29533	703355	12	True				
ANR	703504	AssignmentExpression	vp2b = ( int64_t ) dy1 * dx2		703355	0		=			
ANR	703505	Identifier	vp2b		703355	0					
ANR	703506	MultiplicativeExpression	( int64_t ) dy1 * dx2		703355	1		*			
ANR	703507	CastExpression	( int64_t ) dy1		703355	0					
ANR	703508	CastTarget	int64_t		703355	0					
ANR	703509	Identifier	dy1		703355	1					
ANR	703510	Identifier	dx2		703355	1					
ANR	703511	IfStatement	if ( vp2a > vp2b )		703355	13					
ANR	703512	Condition	vp2a > vp2b	1050:8:29624:29634	703355	0	True				
ANR	703513	RelationalExpression	vp2a > vp2b		703355	0		>			
ANR	703514	Identifier	vp2a		703355	0					
ANR	703515	Identifier	vp2b		703355	1					
ANR	703516	ExpressionStatement	s2 = 1	1051:8:29645:29651	703355	1	True				
ANR	703517	AssignmentExpression	s2 = 1		703355	0		=			
ANR	703518	Identifier	s2		703355	0					
ANR	703519	PrimaryExpression	1		703355	1					
ANR	703520	ElseStatement	else		703355	0					
ANR	703521	IfStatement	if ( vp2a < vp2b )		703355	0					
ANR	703522	Condition	vp2a < vp2b	1052:13:29666:29676	703355	0	True				
ANR	703523	RelationalExpression	vp2a < vp2b		703355	0		<			
ANR	703524	Identifier	vp2a		703355	0					
ANR	703525	Identifier	vp2b		703355	1					
ANR	703526	ExpressionStatement	s2 = - 1	1053:8:29687:29694	703355	1	True				
ANR	703527	AssignmentExpression	s2 = - 1		703355	0		=			
ANR	703528	Identifier	s2		703355	0					
ANR	703529	UnaryOperationExpression	- 1		703355	1					
ANR	703530	UnaryOperator	-		703355	0					
ANR	703531	PrimaryExpression	1		703355	1					
ANR	703532	ElseStatement	else		703355	0					
ANR	703533	ExpressionStatement	s2 = 0	1055:8:29713:29719	703355	0	True				
ANR	703534	AssignmentExpression	s2 = 0		703355	0		=			
ANR	703535	Identifier	s2		703355	0					
ANR	703536	PrimaryExpression	0		703355	1					
ANR	703537	ExpressionStatement	vp3a = ( int64_t ) dx1 * dy3	1056:4:29725:29750	703355	14	True				
ANR	703538	AssignmentExpression	vp3a = ( int64_t ) dx1 * dy3		703355	0		=			
ANR	703539	Identifier	vp3a		703355	0					
ANR	703540	MultiplicativeExpression	( int64_t ) dx1 * dy3		703355	1		*			
ANR	703541	CastExpression	( int64_t ) dx1		703355	0					
ANR	703542	CastTarget	int64_t		703355	0					
ANR	703543	Identifier	dx1		703355	1					
ANR	703544	Identifier	dy3		703355	1					
ANR	703545	ExpressionStatement	vp3b = ( int64_t ) dy1 * dx3	1057:4:29756:29781	703355	15	True				
ANR	703546	AssignmentExpression	vp3b = ( int64_t ) dy1 * dx3		703355	0		=			
ANR	703547	Identifier	vp3b		703355	0					
ANR	703548	MultiplicativeExpression	( int64_t ) dy1 * dx3		703355	1		*			
ANR	703549	CastExpression	( int64_t ) dy1		703355	0					
ANR	703550	CastTarget	int64_t		703355	0					
ANR	703551	Identifier	dy1		703355	1					
ANR	703552	Identifier	dx3		703355	1					
ANR	703553	IfStatement	if ( vp3a > vp3b )		703355	16					
ANR	703554	Condition	vp3a > vp3b	1059:8:29872:29882	703355	0	True				
ANR	703555	RelationalExpression	vp3a > vp3b		703355	0		>			
ANR	703556	Identifier	vp3a		703355	0					
ANR	703557	Identifier	vp3b		703355	1					
ANR	703558	ExpressionStatement	s3 = 1	1060:8:29893:29899	703355	1	True				
ANR	703559	AssignmentExpression	s3 = 1		703355	0		=			
ANR	703560	Identifier	s3		703355	0					
ANR	703561	PrimaryExpression	1		703355	1					
ANR	703562	ElseStatement	else		703355	0					
ANR	703563	IfStatement	if ( vp3a < vp3b )		703355	0					
ANR	703564	Condition	vp3a < vp3b	1061:13:29914:29924	703355	0	True				
ANR	703565	RelationalExpression	vp3a < vp3b		703355	0		<			
ANR	703566	Identifier	vp3a		703355	0					
ANR	703567	Identifier	vp3b		703355	1					
ANR	703568	ExpressionStatement	s3 = - 1	1062:8:29935:29942	703355	1	True				
ANR	703569	AssignmentExpression	s3 = - 1		703355	0		=			
ANR	703570	Identifier	s3		703355	0					
ANR	703571	UnaryOperationExpression	- 1		703355	1					
ANR	703572	UnaryOperator	-		703355	0					
ANR	703573	PrimaryExpression	1		703355	1					
ANR	703574	ElseStatement	else		703355	0					
ANR	703575	ExpressionStatement	s3 = 0	1064:8:29961:29967	703355	0	True				
ANR	703576	AssignmentExpression	s3 = 0		703355	0		=			
ANR	703577	Identifier	s3		703355	0					
ANR	703578	PrimaryExpression	0		703355	1					
ANR	703579	IfStatement	if ( s2 == 0 )		703355	17					
ANR	703580	Condition	s2 == 0	1065:8:29977:29983	703355	0	True				
ANR	703581	EqualityExpression	s2 == 0		703355	0		==			
ANR	703582	Identifier	s2		703355	0					
ANR	703583	PrimaryExpression	0		703355	1					
ANR	703584	CompoundStatement		39:17:1284:1284	703355	1					
ANR	703585	IfStatement	if ( s3 == 0 )		703355	0					
ANR	703586	Condition	s3 == 0	1066:12:30000:30006	703355	0	True				
ANR	703587	EqualityExpression	s3 == 0		703355	0		==			
ANR	703588	Identifier	s3		703355	0					
ANR	703589	PrimaryExpression	0		703355	1					
ANR	703590	ReturnStatement	return false ;	1067:12:30021:30033	703355	1	True				
ANR	703591	Identifier	false		703355	0					
ANR	703592	IfStatement	if ( 0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1 )		703355	1					
ANR	703593	Condition	0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1	1068:12:30087:30134	703355	0	True				
ANR	703594	AndExpression	0 <= dx2 && dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1		703355	0		&&			
ANR	703595	RelationalExpression	0 <= dx2		703355	0		<=			
ANR	703596	PrimaryExpression	0		703355	0					
ANR	703597	Identifier	dx2		703355	1					
ANR	703598	AndExpression	dx2 <= dx1 && 0 <= dy2 && dy2 <= dy1		703355	1		&&			
ANR	703599	RelationalExpression	dx2 <= dx1		703355	0		<=			
ANR	703600	Identifier	dx2		703355	0					
ANR	703601	Identifier	dx1		703355	1					
ANR	703602	AndExpression	0 <= dy2 && dy2 <= dy1		703355	1		&&			
ANR	703603	RelationalExpression	0 <= dy2		703355	0		<=			
ANR	703604	PrimaryExpression	0		703355	0					
ANR	703605	Identifier	dy2		703355	1					
ANR	703606	RelationalExpression	dy2 <= dy1		703355	1		<=			
ANR	703607	Identifier	dy2		703355	0					
ANR	703608	Identifier	dy1		703355	1					
ANR	703609	CompoundStatement		42:62:1435:1435	703355	1					
ANR	703610	ExpressionStatement	* ry = q2y	1070:12:30209:30218	703355	0	True				
ANR	703611	AssignmentExpression	* ry = q2y		703355	0		=			
ANR	703612	UnaryOperationExpression	* ry		703355	0					
ANR	703613	UnaryOperator	*		703355	0					
ANR	703614	Identifier	ry		703355	1					
ANR	703615	Identifier	q2y		703355	1					
ANR	703616	ExpressionStatement	* ey = 0	1071:12:30232:30239	703355	1	True				
ANR	703617	AssignmentExpression	* ey = 0		703355	0		=			
ANR	703618	UnaryOperationExpression	* ey		703355	0					
ANR	703619	UnaryOperator	*		703355	0					
ANR	703620	Identifier	ey		703355	1					
ANR	703621	PrimaryExpression	0		703355	1					
ANR	703622	ReturnStatement	return true ;	1072:12:30253:30264	703355	2	True				
ANR	703623	Identifier	true		703355	0					
ANR	703624	ElseStatement	else		703355	0					
ANR	703625	IfStatement	if ( s3 == 0 )		703355	0					
ANR	703626	Condition	s3 == 0	1074:15:30291:30297	703355	0	True				
ANR	703627	EqualityExpression	s3 == 0		703355	0		==			
ANR	703628	Identifier	s3		703355	0					
ANR	703629	PrimaryExpression	0		703355	1					
ANR	703630	CompoundStatement		48:24:1598:1598	703355	1					
ANR	703631	IfStatement	if ( 0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1 )		703355	0					
ANR	703632	Condition	0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1	1075:12:30314:30361	703355	0	True				
ANR	703633	AndExpression	0 <= dx3 && dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1		703355	0		&&			
ANR	703634	RelationalExpression	0 <= dx3		703355	0		<=			
ANR	703635	PrimaryExpression	0		703355	0					
ANR	703636	Identifier	dx3		703355	1					
ANR	703637	AndExpression	dx3 <= dx1 && 0 <= dy3 && dy3 <= dy1		703355	1		&&			
ANR	703638	RelationalExpression	dx3 <= dx1		703355	0		<=			
ANR	703639	Identifier	dx3		703355	0					
ANR	703640	Identifier	dx1		703355	1					
ANR	703641	AndExpression	0 <= dy3 && dy3 <= dy1		703355	1		&&			
ANR	703642	RelationalExpression	0 <= dy3		703355	0		<=			
ANR	703643	PrimaryExpression	0		703355	0					
ANR	703644	Identifier	dy3		703355	1					
ANR	703645	RelationalExpression	dy3 <= dy1		703355	1		<=			
ANR	703646	Identifier	dy3		703355	0					
ANR	703647	Identifier	dy1		703355	1					
ANR	703648	CompoundStatement		49:62:1662:1662	703355	1					
ANR	703649	ExpressionStatement	* ry = q3y	1077:12:30434:30443	703355	0	True				
ANR	703650	AssignmentExpression	* ry = q3y		703355	0		=			
ANR	703651	UnaryOperationExpression	* ry		703355	0					
ANR	703652	UnaryOperator	*		703355	0					
ANR	703653	Identifier	ry		703355	1					
ANR	703654	Identifier	q3y		703355	1					
ANR	703655	ExpressionStatement	* ey = 0	1078:12:30457:30464	703355	1	True				
ANR	703656	AssignmentExpression	* ey = 0		703355	0		=			
ANR	703657	UnaryOperationExpression	* ey		703355	0					
ANR	703658	UnaryOperator	*		703355	0					
ANR	703659	Identifier	ey		703355	1					
ANR	703660	PrimaryExpression	0		703355	1					
ANR	703661	ReturnStatement	return true ;	1079:12:30478:30489	703355	2	True				
ANR	703662	Identifier	true		703355	0					
ANR	703663	ElseStatement	else		703355	0					
ANR	703664	IfStatement	if ( s2 * s3 < 0 )		703355	0					
ANR	703665	Condition	s2 * s3 < 0	1081:15:30516:30526	703355	0	True				
ANR	703666	RelationalExpression	s2 * s3 < 0		703355	0		<			
ANR	703667	MultiplicativeExpression	s2 * s3		703355	0		*			
ANR	703668	Identifier	s2		703355	0					
ANR	703669	Identifier	s3		703355	1					
ANR	703670	PrimaryExpression	0		703355	1					
ANR	703671	CompoundStatement		59:8:2034:2089	703355	1					
ANR	703672	IdentifierDeclStatement	"fixed d23x = dx3 - dx2 , d23y = dy3 - dy2 ;"	1083:8:30621:30661	703355	0	True				
ANR	703673	IdentifierDecl	d23x = dx3 - dx2		703355	0					
ANR	703674	IdentifierDeclType	fixed		703355	0					
ANR	703675	Identifier	d23x		703355	1					
ANR	703676	AssignmentExpression	d23x = dx3 - dx2		703355	2		=			
ANR	703677	Identifier	d23x		703355	0					
ANR	703678	AdditiveExpression	dx3 - dx2		703355	1		-			
ANR	703679	Identifier	dx3		703355	0					
ANR	703680	Identifier	dx2		703355	1					
ANR	703681	IdentifierDecl	d23y = dy3 - dy2		703355	1					
ANR	703682	IdentifierDeclType	fixed		703355	0					
ANR	703683	Identifier	d23y		703355	1					
ANR	703684	AssignmentExpression	d23y = dy3 - dy2		703355	2		=			
ANR	703685	Identifier	d23y		703355	0					
ANR	703686	AdditiveExpression	dy3 - dy2		703355	1		-			
ANR	703687	Identifier	dy3		703355	0					
ANR	703688	Identifier	dy2		703355	1					
ANR	703689	IdentifierDeclStatement	int64_t det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x ;	1084:8:30671:30726	703355	1	True				
ANR	703690	IdentifierDecl	det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		703355	0					
ANR	703691	IdentifierDeclType	int64_t		703355	0					
ANR	703692	Identifier	det		703355	1					
ANR	703693	AssignmentExpression	det = ( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		703355	2		=			
ANR	703694	Identifier	det		703355	0					
ANR	703695	AdditiveExpression	( int64_t ) dx1 * d23y - ( int64_t ) dy1 * d23x		703355	1		-			
ANR	703696	MultiplicativeExpression	( int64_t ) dx1 * d23y		703355	0		*			
ANR	703697	CastExpression	( int64_t ) dx1		703355	0					
ANR	703698	CastTarget	int64_t		703355	0					
ANR	703699	Identifier	dx1		703355	1					
ANR	703700	Identifier	d23y		703355	1					
ANR	703701	MultiplicativeExpression	( int64_t ) dy1 * d23x		703355	1		*			
ANR	703702	CastExpression	( int64_t ) dy1		703355	0					
ANR	703703	CastTarget	int64_t		703355	0					
ANR	703704	Identifier	dy1		703355	1					
ANR	703705	Identifier	d23x		703355	1					
ANR	703706	IdentifierDeclStatement	int64_t mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x ;	1085:8:30736:30791	703355	2	True				
ANR	703707	IdentifierDecl	mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		703355	0					
ANR	703708	IdentifierDeclType	int64_t		703355	0					
ANR	703709	Identifier	mul		703355	1					
ANR	703710	AssignmentExpression	mul = ( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		703355	2		=			
ANR	703711	Identifier	mul		703355	0					
ANR	703712	AdditiveExpression	( int64_t ) dx2 * d23y - ( int64_t ) dy2 * d23x		703355	1		-			
ANR	703713	MultiplicativeExpression	( int64_t ) dx2 * d23y		703355	0		*			
ANR	703714	CastExpression	( int64_t ) dx2		703355	0					
ANR	703715	CastTarget	int64_t		703355	0					
ANR	703716	Identifier	dx2		703355	1					
ANR	703717	Identifier	d23y		703355	1					
ANR	703718	MultiplicativeExpression	( int64_t ) dy2 * d23x		703355	1		*			
ANR	703719	CastExpression	( int64_t ) dy2		703355	0					
ANR	703720	CastTarget	int64_t		703355	0					
ANR	703721	Identifier	dy2		703355	1					
ANR	703722	Identifier	d23x		703355	1					
ANR	703723	CompoundStatement		65:12:2310:2324	703355	3					
ANR	703724	IdentifierDeclStatement	"int64_t num = dy1 * mul , iiy ;"	1089:12:30948:30976	703355	0	True				
ANR	703725	IdentifierDecl	num = dy1 * mul		703355	0					
ANR	703726	IdentifierDeclType	int64_t		703355	0					
ANR	703727	Identifier	num		703355	1					
ANR	703728	AssignmentExpression	num = dy1 * mul		703355	2		=			
ANR	703729	Identifier	num		703355	0					
ANR	703730	MultiplicativeExpression	dy1 * mul		703355	1		*			
ANR	703731	Identifier	dy1		703355	0					
ANR	703732	Identifier	mul		703355	1					
ANR	703733	IdentifierDecl	iiy		703355	1					
ANR	703734	IdentifierDeclType	int64_t		703355	0					
ANR	703735	Identifier	iiy		703355	1					
ANR	703736	IdentifierDeclStatement	fixed iy ;	1090:12:30990:30998	703355	1	True				
ANR	703737	IdentifierDecl	iy		703355	0					
ANR	703738	IdentifierDeclType	fixed		703355	0					
ANR	703739	Identifier	iy		703355	1					
ANR	703740	IdentifierDeclStatement	"fixed pry , pey ;"	1091:12:31012:31026	703355	2	True				
ANR	703741	IdentifierDecl	pry		703355	0					
ANR	703742	IdentifierDeclType	fixed		703355	0					
ANR	703743	Identifier	pry		703355	1					
ANR	703744	IdentifierDecl	pey		703355	1					
ANR	703745	IdentifierDeclType	fixed		703355	0					
ANR	703746	Identifier	pey		703355	1					
ANR	703747	CompoundStatement		67:12:2339:2339	703355	3					
ANR	703748	IfStatement	if ( det < 0 )		703355	0					
ANR	703749	Condition	det < 0	1095:20:31240:31246	703355	0	True				
ANR	703750	RelationalExpression	det < 0		703355	0		<			
ANR	703751	Identifier	det		703355	0					
ANR	703752	PrimaryExpression	0		703355	1					
ANR	703753	ExpressionStatement	"num = - num , det = - det"	1096:20:31269:31291	703355	1	True				
ANR	703754	Expression	"num = - num , det = - det"		703355	0					
ANR	703755	AssignmentExpression	num = - num		703355	0		=			
ANR	703756	Identifier	num		703355	0					
ANR	703757	UnaryOperationExpression	- num		703355	1					
ANR	703758	UnaryOperator	-		703355	0					
ANR	703759	Identifier	num		703355	1					
ANR	703760	AssignmentExpression	det = - det		703355	1		=			
ANR	703761	Identifier	det		703355	0					
ANR	703762	UnaryOperationExpression	- det		703355	1					
ANR	703763	UnaryOperator	-		703355	0					
ANR	703764	Identifier	det		703355	1					
ANR	703765	ExpressionStatement	iiy = ( num >= 0 ? num / det : ( num - det + 1 ) / det )	1097:16:31309:31361	703355	1	True				
ANR	703766	AssignmentExpression	iiy = ( num >= 0 ? num / det : ( num - det + 1 ) / det )		703355	0		=			
ANR	703767	Identifier	iiy		703355	0					
ANR	703768	ConditionalExpression	num >= 0 ? num / det : ( num - det + 1 ) / det		703355	1					
ANR	703769	Condition	num >= 0		703355	0					
ANR	703770	RelationalExpression	num >= 0		703355	0		>=			
ANR	703771	Identifier	num		703355	0					
ANR	703772	PrimaryExpression	0		703355	1					
ANR	703773	MultiplicativeExpression	num / det		703355	1		/			
ANR	703774	Identifier	num		703355	0					
ANR	703775	Identifier	det		703355	1					
ANR	703776	MultiplicativeExpression	( num - det + 1 ) / det		703355	2		/			
ANR	703777	AdditiveExpression	num - det + 1		703355	0		-			
ANR	703778	Identifier	num		703355	0					
ANR	703779	AdditiveExpression	det + 1		703355	1		+			
ANR	703780	Identifier	det		703355	0					
ANR	703781	PrimaryExpression	1		703355	1					
ANR	703782	Identifier	det		703355	1					
ANR	703783	ExpressionStatement	iy = ( fixed ) iiy	1098:16:31379:31394	703355	2	True				
ANR	703784	AssignmentExpression	iy = ( fixed ) iiy		703355	0		=			
ANR	703785	Identifier	iy		703355	0					
ANR	703786	CastExpression	( fixed ) iiy		703355	1					
ANR	703787	CastTarget	fixed		703355	0					
ANR	703788	Identifier	iiy		703355	1					
ANR	703789	IfStatement	if ( iy != iiy )		703355	3					
ANR	703790	Condition	iy != iiy	1099:20:31416:31424	703355	0	True				
ANR	703791	EqualityExpression	iy != iiy		703355	0		!=			
ANR	703792	Identifier	iy		703355	0					
ANR	703793	Identifier	iiy		703355	1					
ANR	703794	CompoundStatement		73:31:2725:2725	703355	1					
ANR	703795	ReturnStatement	return false ;	1101:20:31525:31537	703355	0	True				
ANR	703796	Identifier	false		703355	0					
ANR	703797	IfStatement	if ( dy1 > 0 )		703355	4					
ANR	703798	Condition	dy1 > 0	1104:16:31587:31593	703355	0	True				
ANR	703799	RelationalExpression	dy1 > 0		703355	0		>			
ANR	703800	Identifier	dy1		703355	0					
ANR	703801	PrimaryExpression	0		703355	1					
ANR	703802	CompoundStatement		78:25:2894:2894	703355	1					
ANR	703803	IfStatement	if ( iy < 0 || iy >= dy1 )		703355	0					
ANR	703804	Condition	iy < 0 || iy >= dy1	1105:20:31618:31636	703355	0	True				
ANR	703805	OrExpression	iy < 0 || iy >= dy1		703355	0		||			
ANR	703806	RelationalExpression	iy < 0		703355	0		<			
ANR	703807	Identifier	iy		703355	0					
ANR	703808	PrimaryExpression	0		703355	1					
ANR	703809	RelationalExpression	iy >= dy1		703355	1		>=			
ANR	703810	Identifier	iy		703355	0					
ANR	703811	Identifier	dy1		703355	1					
ANR	703812	ReturnStatement	return false ;	1106:20:31659:31671	703355	1	True				
ANR	703813	Identifier	false		703355	0					
ANR	703814	ElseStatement	else		703355	0					
ANR	703815	CompoundStatement		81:19:3015:3015	703355	0					
ANR	703816	IfStatement	if ( iy > 0 || iy <= dy1 )		703355	0					
ANR	703817	Condition	iy > 0 || iy <= dy1	1108:20:31739:31757	703355	0	True				
ANR	703818	OrExpression	iy > 0 || iy <= dy1		703355	0		||			
ANR	703819	RelationalExpression	iy > 0		703355	0		>			
ANR	703820	Identifier	iy		703355	0					
ANR	703821	PrimaryExpression	0		703355	1					
ANR	703822	RelationalExpression	iy <= dy1		703355	1		<=			
ANR	703823	Identifier	iy		703355	0					
ANR	703824	Identifier	dy1		703355	1					
ANR	703825	ReturnStatement	return false ;	1109:20:31780:31792	703355	1	True				
ANR	703826	Identifier	false		703355	0					
ANR	703827	IfStatement	if ( dy2 < dy3 )		703355	5					
ANR	703828	Condition	dy2 < dy3	1111:16:31849:31857	703355	0	True				
ANR	703829	RelationalExpression	dy2 < dy3		703355	0		<			
ANR	703830	Identifier	dy2		703355	0					
ANR	703831	Identifier	dy3		703355	1					
ANR	703832	CompoundStatement		85:27:3158:3158	703355	1					
ANR	703833	IfStatement	if ( iy <= dy2 || iy >= dy3 )		703355	0					
ANR	703834	Condition	iy <= dy2 || iy >= dy3	1112:20:31882:31903	703355	0	True				
ANR	703835	OrExpression	iy <= dy2 || iy >= dy3		703355	0		||			
ANR	703836	RelationalExpression	iy <= dy2		703355	0		<=			
ANR	703837	Identifier	iy		703355	0					
ANR	703838	Identifier	dy2		703355	1					
ANR	703839	RelationalExpression	iy >= dy3		703355	1		>=			
ANR	703840	Identifier	iy		703355	0					
ANR	703841	Identifier	dy3		703355	1					
ANR	703842	ReturnStatement	return false ;	1113:20:31926:31938	703355	1	True				
ANR	703843	Identifier	false		703355	0					
ANR	703844	ElseStatement	else		703355	0					
ANR	703845	CompoundStatement		88:19:3282:3282	703355	0					
ANR	703846	IfStatement	if ( iy >= dy2 || iy <= dy3 )		703355	0					
ANR	703847	Condition	iy >= dy2 || iy <= dy3	1115:20:32006:32027	703355	0	True				
ANR	703848	OrExpression	iy >= dy2 || iy <= dy3		703355	0		||			
ANR	703849	RelationalExpression	iy >= dy2		703355	0		>=			
ANR	703850	Identifier	iy		703355	0					
ANR	703851	Identifier	dy2		703355	1					
ANR	703852	RelationalExpression	iy <= dy3		703355	1		<=			
ANR	703853	Identifier	iy		703355	0					
ANR	703854	Identifier	dy3		703355	1					
ANR	703855	ReturnStatement	return false ;	1116:20:32050:32062	703355	1	True				
ANR	703856	Identifier	false		703355	0					
ANR	703857	ExpressionStatement	pry = q0y + ( fixed ) iy	1118:12:32115:32136	703355	6	True				
ANR	703858	AssignmentExpression	pry = q0y + ( fixed ) iy		703355	0		=			
ANR	703859	Identifier	pry		703355	0					
ANR	703860	AdditiveExpression	q0y + ( fixed ) iy		703355	1		+			
ANR	703861	Identifier	q0y		703355	0					
ANR	703862	CastExpression	( fixed ) iy		703355	1					
ANR	703863	CastTarget	fixed		703355	0					
ANR	703864	Identifier	iy		703355	1					
ANR	703865	ExpressionStatement	pey = ( iy * det < num ? 1 : 0 )	1119:12:32150:32180	703355	7	True				
ANR	703866	AssignmentExpression	pey = ( iy * det < num ? 1 : 0 )		703355	0		=			
ANR	703867	Identifier	pey		703355	0					
ANR	703868	ConditionalExpression	iy * det < num ? 1 : 0		703355	1					
ANR	703869	Condition	iy * det < num		703355	0					
ANR	703870	RelationalExpression	iy * det < num		703355	0		<			
ANR	703871	MultiplicativeExpression	iy * det		703355	0		*			
ANR	703872	Identifier	iy		703355	0					
ANR	703873	Identifier	det		703355	1					
ANR	703874	Identifier	num		703355	1					
ANR	703875	PrimaryExpression	1		703355	1					
ANR	703876	PrimaryExpression	0		703355	2					
ANR	703877	ExpressionStatement	* ry = pry	1120:12:32194:32203	703355	8	True				
ANR	703878	AssignmentExpression	* ry = pry		703355	0		=			
ANR	703879	UnaryOperationExpression	* ry		703355	0					
ANR	703880	UnaryOperator	*		703355	0					
ANR	703881	Identifier	ry		703355	1					
ANR	703882	Identifier	pry		703355	1					
ANR	703883	ExpressionStatement	* ey = pey	1121:12:32217:32226	703355	9	True				
ANR	703884	AssignmentExpression	* ey = pey		703355	0		=			
ANR	703885	UnaryOperationExpression	* ey		703355	0					
ANR	703886	UnaryOperator	*		703355	0					
ANR	703887	Identifier	ey		703355	1					
ANR	703888	Identifier	pey		703355	1					
ANR	703889	ReturnStatement	return true ;	1123:8:32246:32257	703355	4	True				
ANR	703890	Identifier	true		703355	0					
ANR	703891	ReturnStatement	return false ;	1125:4:32269:32281	703355	18	True				
ANR	703892	Identifier	false		703355	0					
ANR	703893	ReturnType	bool		703355	1					
ANR	703894	Identifier	gx_intersect_small_bars		703355	2					
ANR	703895	ParameterList	"fixed q0x , fixed q0y , fixed q1x , fixed q1y , fixed q2x , fixed q2y , fixed q3x , fixed q3y , fixed * ry , fixed * ey"		703355	3					
ANR	703896	Parameter	fixed q0x	1025:24:28567:28575	703355	0	True				
ANR	703897	ParameterType	fixed		703355	0					
ANR	703898	Identifier	q0x		703355	1					
ANR	703899	Parameter	fixed q0y	1025:35:28578:28586	703355	1	True				
ANR	703900	ParameterType	fixed		703355	0					
ANR	703901	Identifier	q0y		703355	1					
ANR	703902	Parameter	fixed q1x	1025:46:28589:28597	703355	2	True				
ANR	703903	ParameterType	fixed		703355	0					
ANR	703904	Identifier	q1x		703355	1					
ANR	703905	Parameter	fixed q1y	1025:57:28600:28608	703355	3	True				
ANR	703906	ParameterType	fixed		703355	0					
ANR	703907	Identifier	q1y		703355	1					
ANR	703908	Parameter	fixed q2x	1025:68:28611:28619	703355	4	True				
ANR	703909	ParameterType	fixed		703355	0					
ANR	703910	Identifier	q2x		703355	1					
ANR	703911	Parameter	fixed q2y	1025:79:28622:28630	703355	5	True				
ANR	703912	ParameterType	fixed		703355	0					
ANR	703913	Identifier	q2y		703355	1					
ANR	703914	Parameter	fixed q3x	1026:24:28657:28665	703355	6	True				
ANR	703915	ParameterType	fixed		703355	0					
ANR	703916	Identifier	q3x		703355	1					
ANR	703917	Parameter	fixed q3y	1026:35:28668:28676	703355	7	True				
ANR	703918	ParameterType	fixed		703355	0					
ANR	703919	Identifier	q3y		703355	1					
ANR	703920	Parameter	fixed * ry	1026:46:28679:28687	703355	8	True				
ANR	703921	ParameterType	fixed *		703355	0					
ANR	703922	Identifier	ry		703355	1					
ANR	703923	Parameter	fixed * ey	1026:57:28690:28698	703355	9	True				
ANR	703924	ParameterType	fixed *		703355	0					
ANR	703925	Identifier	ey		703355	1					
ANR	703926	CFGEntryNode	ENTRY		703355		True				
ANR	703927	CFGExitNode	EXIT		703355		True				
ANR	703928	Symbol	mul		703355						
ANR	703929	Symbol	ry		703355						
ANR	703930	Symbol	num		703355						
ANR	703931	Symbol	det		703355						
ANR	703932	Symbol	q3y		703355						
ANR	703933	Symbol	q3x		703355						
ANR	703934	Symbol	q1y		703355						
ANR	703935	Symbol	iiy		703355						
ANR	703936	Symbol	q1x		703355						
ANR	703937	Symbol	d23y		703355						
ANR	703938	Symbol	dx1		703355						
ANR	703939	Symbol	vp2b		703355						
ANR	703940	Symbol	d23x		703355						
ANR	703941	Symbol	dx3		703355						
ANR	703942	Symbol	vp2a		703355						
ANR	703943	Symbol	dx2		703355						
ANR	703944	Symbol	s2		703355						
ANR	703945	Symbol	s3		703355						
ANR	703946	Symbol	pey		703355						
ANR	703947	Symbol	false		703355						
ANR	703948	Symbol	* ry		703355						
ANR	703949	Symbol	iy		703355						
ANR	703950	Symbol	ey		703355						
ANR	703951	Symbol	q2x		703355						
ANR	703952	Symbol	pry		703355						
ANR	703953	Symbol	q0x		703355						
ANR	703954	Symbol	true		703355						
ANR	703955	Symbol	q2y		703355						
ANR	703956	Symbol	* ey		703355						
ANR	703957	Symbol	q0y		703355						
ANR	703958	Symbol	dy2		703355						
ANR	703959	Symbol	dy1		703355						
ANR	703960	Symbol	vp3b		703355						
ANR	703961	Symbol	dy3		703355						
ANR	703962	Symbol	vp3a		703355						
ANR	703963	DeclStmt									
ANR	703964	Decl							const gs_debug_flag_details	const gs_debug_flag_details [ ]	gs_debug_flags
ANR	703965	DeclStmt									
ANR	703966	Decl							const byte	const byte [ ]	gs_debug_flag_implied_by
ANR	703967	Function	gs_debug_flags_parse	1148:0:32629:34229							
ANR	703968	FunctionDef	"gs_debug_flags_parse (gs_memory_t * heap , const char * arg)"		703967	0					
ANR	703969	CompoundStatement		1149:0:32690:34229	703967	0					
ANR	703970	IdentifierDeclStatement	const char * p ;	1151:4:32709:32722	703967	0	True				
ANR	703971	IdentifierDecl	* p		703967	0					
ANR	703972	IdentifierDeclType	const char *		703967	0					
ANR	703973	Identifier	p		703967	1					
ANR	703974	IdentifierDeclStatement	"int i , j ;"	1152:4:32728:32736	703967	1	True				
ANR	703975	IdentifierDecl	i		703967	0					
ANR	703976	IdentifierDeclType	int		703967	0					
ANR	703977	Identifier	i		703967	1					
ANR	703978	IdentifierDecl	j		703967	1					
ANR	703979	IdentifierDeclType	int		703967	0					
ANR	703980	Identifier	j		703967	1					
ANR	703981	IdentifierDeclStatement	int result = 0 ;	1153:4:32742:32756	703967	2	True				
ANR	703982	IdentifierDecl	result = 0		703967	0					
ANR	703983	IdentifierDeclType	int		703967	0					
ANR	703984	Identifier	result		703967	1					
ANR	703985	AssignmentExpression	result = 0		703967	2		=			
ANR	703986	Identifier	result		703967	0					
ANR	703987	PrimaryExpression	0		703967	1					
ANR	703988	WhileStatement	while ( * arg != 0 )		703967	3					
ANR	703989	Condition	* arg != 0	1155:11:32770:32778	703967	0	True				
ANR	703990	EqualityExpression	* arg != 0		703967	0		!=			
ANR	703991	UnaryOperationExpression	* arg		703967	0					
ANR	703992	UnaryOperator	*		703967	0					
ANR	703993	Identifier	arg		703967	1					
ANR	703994	PrimaryExpression	0		703967	1					
ANR	703995	CompoundStatement		9:8:135:152	703967	1					
ANR	703996	IdentifierDeclStatement	byte value = 0xff ;	1157:8:32826:32843	703967	0	True				
ANR	703997	IdentifierDecl	value = 0xff		703967	0					
ANR	703998	IdentifierDeclType	byte		703967	0					
ANR	703999	Identifier	value		703967	1					
ANR	704000	AssignmentExpression	value = 0xff		703967	2		=			
ANR	704001	Identifier	value		703967	0					
ANR	704002	PrimaryExpression	0xff		703967	1					
ANR	704003	WhileStatement	"while ( * arg == ',' )"		703967	1					
ANR	704004	Condition	"* arg == ','"	1158:15:32860:32870	703967	0	True				
ANR	704005	EqualityExpression	"* arg == ','"		703967	0		==			
ANR	704006	UnaryOperationExpression	* arg		703967	0					
ANR	704007	UnaryOperator	*		703967	0					
ANR	704008	Identifier	arg		703967	1					
ANR	704009	PrimaryExpression	"','"		703967	1					
ANR	704010	ExpressionStatement	arg ++	1159:12:32885:32890	703967	1	True				
ANR	704011	PostIncDecOperationExpression	arg ++		703967	0					
ANR	704012	Identifier	arg		703967	0					
ANR	704013	IncDec	++		703967	1					
ANR	704014	IfStatement	if ( * arg == '-' )		703967	2					
ANR	704015	Condition	* arg == '-'	1160:12:32904:32914	703967	0	True				
ANR	704016	EqualityExpression	* arg == '-'		703967	0		==			
ANR	704017	UnaryOperationExpression	* arg		703967	0					
ANR	704018	UnaryOperator	*		703967	0					
ANR	704019	Identifier	arg		703967	1					
ANR	704020	PrimaryExpression	'-'		703967	1					
ANR	704021	CompoundStatement		12:25:226:226	703967	1					
ANR	704022	ExpressionStatement	value = 0	1161:12:32931:32940	703967	0	True				
ANR	704023	AssignmentExpression	value = 0		703967	0		=			
ANR	704024	Identifier	value		703967	0					
ANR	704025	PrimaryExpression	0		703967	1					
ANR	704026	ExpressionStatement	arg ++	1162:12:32954:32959	703967	1	True				
ANR	704027	PostIncDecOperationExpression	arg ++		703967	0					
ANR	704028	Identifier	arg		703967	0					
ANR	704029	IncDec	++		703967	1					
ANR	704030	IfStatement	"if ( * arg == ',' )"		703967	3					
ANR	704031	Condition	"* arg == ','"	1164:12:32983:32993	703967	0	True				
ANR	704032	EqualityExpression	"* arg == ','"		703967	0		==			
ANR	704033	UnaryOperationExpression	* arg		703967	0					
ANR	704034	UnaryOperator	*		703967	0					
ANR	704035	Identifier	arg		703967	1					
ANR	704036	PrimaryExpression	"','"		703967	1					
ANR	704037	CompoundStatement		16:25:305:305	703967	1					
ANR	704038	ExpressionStatement	arg ++	1165:12:33010:33015	703967	0	True				
ANR	704039	PostIncDecOperationExpression	arg ++		703967	0					
ANR	704040	Identifier	arg		703967	0					
ANR	704041	IncDec	++		703967	1					
ANR	704042	ContinueStatement	continue ;	1166:12:33029:33037	703967	1	True				
ANR	704043	IfStatement	if ( * arg == 0 )		703967	4					
ANR	704044	Condition	* arg == 0	1168:12:33061:33069	703967	0	True				
ANR	704045	EqualityExpression	* arg == 0		703967	0		==			
ANR	704046	UnaryOperationExpression	* arg		703967	0					
ANR	704047	UnaryOperator	*		703967	0					
ANR	704048	Identifier	arg		703967	1					
ANR	704049	PrimaryExpression	0		703967	1					
ANR	704050	ReturnStatement	return result ;	1169:12:33084:33097	703967	1	True				
ANR	704051	Identifier	result		703967	0					
ANR	704052	ForStatement	for ( i = 0 ; i < gs_debug_flags_max ; i ++ )		703967	5					
ANR	704053	ForInit	i = 0 ;	1170:13:33112:33115	703967	0	True				
ANR	704054	AssignmentExpression	i = 0		703967	0		=			
ANR	704055	Identifier	i		703967	0					
ANR	704056	PrimaryExpression	0		703967	1					
ANR	704057	Condition	i < gs_debug_flags_max	1170:18:33117:33138	703967	1	True				
ANR	704058	RelationalExpression	i < gs_debug_flags_max		703967	0		<			
ANR	704059	Identifier	i		703967	0					
ANR	704060	Identifier	gs_debug_flags_max		703967	1					
ANR	704061	PostIncDecOperationExpression	i ++	1170:42:33141:33143	703967	2	True				
ANR	704062	Identifier	i		703967	0					
ANR	704063	IncDec	++		703967	1					
ANR	704064	CompoundStatement		23:12:469:478	703967	3					
ANR	704065	IdentifierDeclStatement	"char c , d ;"	1171:12:33160:33169	703967	0	True				
ANR	704066	IdentifierDecl	c		703967	0					
ANR	704067	IdentifierDeclType	char		703967	0					
ANR	704068	Identifier	c		703967	1					
ANR	704069	IdentifierDecl	d		703967	1					
ANR	704070	IdentifierDeclType	char		703967	0					
ANR	704071	Identifier	d		703967	1					
ANR	704072	IfStatement	if ( ! gs_debug_flags [ i ] . used )		703967	1					
ANR	704073	Condition	! gs_debug_flags [ i ] . used	1172:16:33187:33209	703967	0	True				
ANR	704074	UnaryOperationExpression	! gs_debug_flags [ i ] . used		703967	0					
ANR	704075	UnaryOperator	!		703967	0					
ANR	704076	MemberAccess	gs_debug_flags [ i ] . used		703967	1					
ANR	704077	ArrayIndexing	gs_debug_flags [ i ]		703967	0					
ANR	704078	Identifier	gs_debug_flags		703967	0					
ANR	704079	Identifier	i		703967	1					
ANR	704080	Identifier	used		703967	1					
ANR	704081	ContinueStatement	continue ;	1173:16:33228:33236	703967	1	True				
ANR	704082	ExpressionStatement	p = arg	1174:12:33250:33257	703967	2	True				
ANR	704083	AssignmentExpression	p = arg		703967	0		=			
ANR	704084	Identifier	p		703967	0					
ANR	704085	Identifier	arg		703967	1					
ANR	704086	ForStatement	for ( j = 0 ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		703967	3					
ANR	704087	ForInit	j = 0 ;	1175:17:33276:33279	703967	0	True				
ANR	704088	AssignmentExpression	j = 0		703967	0		=			
ANR	704089	Identifier	j		703967	0					
ANR	704090	PrimaryExpression	0		703967	1					
ANR	704091	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1175:22:33281:33320	703967	1	True				
ANR	704092	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		703967	0		<			
ANR	704093	Identifier	j		703967	0					
ANR	704094	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		703967	1					
ANR	704095	Sizeof	sizeof		703967	0					
ANR	704096	MemberAccess	gs_debug_flags [ i ] . short_desc		703967	1					
ANR	704097	ArrayIndexing	gs_debug_flags [ i ]		703967	0					
ANR	704098	Identifier	gs_debug_flags		703967	0					
ANR	704099	Identifier	i		703967	1					
ANR	704100	Identifier	short_desc		703967	1					
ANR	704101	PostIncDecOperationExpression	j ++	1175:64:33323:33325	703967	2	True				
ANR	704102	Identifier	j		703967	0					
ANR	704103	IncDec	++		703967	1					
ANR	704104	CompoundStatement		27:69:637:637	703967	3					
ANR	704105	ExpressionStatement	d = gs_debug_flags [ i ] . short_desc [ j ]	1176:16:33346:33381	703967	0	True				
ANR	704106	AssignmentExpression	d = gs_debug_flags [ i ] . short_desc [ j ]		703967	0		=			
ANR	704107	Identifier	d		703967	0					
ANR	704108	ArrayIndexing	gs_debug_flags [ i ] . short_desc [ j ]		703967	1					
ANR	704109	MemberAccess	gs_debug_flags [ i ] . short_desc		703967	0					
ANR	704110	ArrayIndexing	gs_debug_flags [ i ]		703967	0					
ANR	704111	Identifier	gs_debug_flags		703967	0					
ANR	704112	Identifier	i		703967	1					
ANR	704113	Identifier	short_desc		703967	1					
ANR	704114	Identifier	j		703967	1					
ANR	704115	ExpressionStatement	c = * p ++	1177:16:33399:33407	703967	1	True				
ANR	704116	AssignmentExpression	c = * p ++		703967	0		=			
ANR	704117	Identifier	c		703967	0					
ANR	704118	UnaryOperationExpression	* p ++		703967	1					
ANR	704119	UnaryOperator	*		703967	0					
ANR	704120	PostIncDecOperationExpression	p ++		703967	1					
ANR	704121	Identifier	p		703967	0					
ANR	704122	IncDec	++		703967	1					
ANR	704123	IfStatement	if ( d == '_' )		703967	2					
ANR	704124	Condition	d == '_'	1178:20:33429:33436	703967	0	True				
ANR	704125	EqualityExpression	d == '_'		703967	0		==			
ANR	704126	Identifier	d		703967	0					
ANR	704127	PrimaryExpression	'_'		703967	1					
ANR	704128	ExpressionStatement	d = '-'	1178:30:33439:33446	703967	1	True				
ANR	704129	AssignmentExpression	d = '-'		703967	0		=			
ANR	704130	Identifier	d		703967	0					
ANR	704131	PrimaryExpression	'-'		703967	1					
ANR	704132	IfStatement	"if ( c == ',' )"		703967	3					
ANR	704133	Condition	"c == ','"	1179:20:33468:33475	703967	0	True				
ANR	704134	EqualityExpression	"c == ','"		703967	0		==			
ANR	704135	Identifier	c		703967	0					
ANR	704136	PrimaryExpression	"','"		703967	1					
ANR	704137	ExpressionStatement	c = 0	1180:20:33498:33503	703967	1	True				
ANR	704138	AssignmentExpression	c = 0		703967	0		=			
ANR	704139	Identifier	c		703967	0					
ANR	704140	PrimaryExpression	0		703967	1					
ANR	704141	IfStatement	if ( ( c != d ) || ( c == 0 ) )		703967	4					
ANR	704142	Condition	( c != d ) || ( c == 0 )	1181:20:33525:33544	703967	0	True				
ANR	704143	OrExpression	( c != d ) || ( c == 0 )		703967	0		||			
ANR	704144	EqualityExpression	c != d		703967	0		!=			
ANR	704145	Identifier	c		703967	0					
ANR	704146	Identifier	d		703967	1					
ANR	704147	EqualityExpression	c == 0		703967	1		==			
ANR	704148	Identifier	c		703967	0					
ANR	704149	PrimaryExpression	0		703967	1					
ANR	704150	BreakStatement	break ;	1182:20:33567:33572	703967	1	True				
ANR	704151	IfStatement	if ( ( c == 0 ) && ( d == 0 ) )		703967	4					
ANR	704152	Condition	( c == 0 ) && ( d == 0 )	1184:16:33604:33623	703967	0	True				
ANR	704153	AndExpression	( c == 0 ) && ( d == 0 )		703967	0		&&			
ANR	704154	EqualityExpression	c == 0		703967	0		==			
ANR	704155	Identifier	c		703967	0					
ANR	704156	PrimaryExpression	0		703967	1					
ANR	704157	EqualityExpression	d == 0		703967	1		==			
ANR	704158	Identifier	d		703967	0					
ANR	704159	PrimaryExpression	0		703967	1					
ANR	704160	BreakStatement	break ;	1185:16:33642:33647	703967	1	True				
ANR	704161	IfStatement	if ( i < gs_debug_flags_max )		703967	6					
ANR	704162	Condition	i < gs_debug_flags_max	1187:12:33671:33692	703967	0	True				
ANR	704163	RelationalExpression	i < gs_debug_flags_max		703967	0		<			
ANR	704164	Identifier	i		703967	0					
ANR	704165	Identifier	gs_debug_flags_max		703967	1					
ANR	704166	ExpressionStatement	gs_debug [ i ] = value	1188:12:33707:33726	703967	1	True				
ANR	704167	AssignmentExpression	gs_debug [ i ] = value		703967	0		=			
ANR	704168	ArrayIndexing	gs_debug [ i ]		703967	0					
ANR	704169	Identifier	gs_debug		703967	0					
ANR	704170	Identifier	i		703967	1					
ANR	704171	Identifier	value		703967	1					
ANR	704172	ElseStatement	else		703967	0					
ANR	704173	CompoundStatement		41:13:1050:1050	703967	0					
ANR	704174	ExpressionStatement	"outprintf ( heap , ""Unknown debug flag: "" )"	1190:12:33755:33794	703967	0	True				
ANR	704175	CallExpression	"outprintf ( heap , ""Unknown debug flag: "" )"		703967	0					
ANR	704176	Callee	outprintf		703967	0					
ANR	704177	Identifier	outprintf		703967	0					
ANR	704178	ArgumentList	heap		703967	1					
ANR	704179	Argument	heap		703967	0					
ANR	704180	Identifier	heap		703967	0					
ANR	704181	Argument	"""Unknown debug flag: """		703967	1					
ANR	704182	PrimaryExpression	"""Unknown debug flag: """		703967	0					
ANR	704183	ExpressionStatement	p = arg	1191:12:33808:33815	703967	1	True				
ANR	704184	AssignmentExpression	p = arg		703967	0		=			
ANR	704185	Identifier	p		703967	0					
ANR	704186	Identifier	arg		703967	1					
ANR	704187	DoStatement	do		703967	2					
ANR	704188	CompoundStatement		45:16:1159:1172	703967	0					
ANR	704189	IdentifierDeclStatement	char c = * p ++ ;	1193:16:33850:33863	703967	0	True				
ANR	704190	IdentifierDecl	c = * p ++		703967	0					
ANR	704191	IdentifierDeclType	char		703967	0					
ANR	704192	Identifier	c		703967	1					
ANR	704193	AssignmentExpression	c = * p ++		703967	2		=			
ANR	704194	Identifier	c		703967	0					
ANR	704195	UnaryOperationExpression	* p ++		703967	1					
ANR	704196	UnaryOperator	*		703967	0					
ANR	704197	PostIncDecOperationExpression	p ++		703967	1					
ANR	704198	Identifier	p		703967	0					
ANR	704199	IncDec	++		703967	1					
ANR	704200	IfStatement	"if ( ( c == 0 ) || ( c == ',' ) )"		703967	1					
ANR	704201	Condition	"( c == 0 ) || ( c == ',' )"	1194:20:33885:33906	703967	0	True				
ANR	704202	OrExpression	"( c == 0 ) || ( c == ',' )"		703967	0		||			
ANR	704203	EqualityExpression	c == 0		703967	0		==			
ANR	704204	Identifier	c		703967	0					
ANR	704205	PrimaryExpression	0		703967	1					
ANR	704206	EqualityExpression	"c == ','"		703967	1		==			
ANR	704207	Identifier	c		703967	0					
ANR	704208	PrimaryExpression	"','"		703967	1					
ANR	704209	BreakStatement	break ;	1195:20:33929:33934	703967	1	True				
ANR	704210	ExpressionStatement	"outprintf ( heap , ""%c"" , c )"	1196:16:33952:33976	703967	2	True				
ANR	704211	CallExpression	"outprintf ( heap , ""%c"" , c )"		703967	0					
ANR	704212	Callee	outprintf		703967	0					
ANR	704213	Identifier	outprintf		703967	0					
ANR	704214	ArgumentList	heap		703967	1					
ANR	704215	Argument	heap		703967	0					
ANR	704216	Identifier	heap		703967	0					
ANR	704217	Argument	"""%c"""		703967	1					
ANR	704218	PrimaryExpression	"""%c"""		703967	0					
ANR	704219	Argument	c		703967	2					
ANR	704220	Identifier	c		703967	0					
ANR	704221	Condition	1	1197:21:33999:33999	703967	1	True				
ANR	704222	PrimaryExpression	1		703967	0					
ANR	704223	ExpressionStatement	"outprintf ( heap , ""\\n"" )"	1198:12:34015:34036	703967	3	True				
ANR	704224	CallExpression	"outprintf ( heap , ""\\n"" )"		703967	0					
ANR	704225	Callee	outprintf		703967	0					
ANR	704226	Identifier	outprintf		703967	0					
ANR	704227	ArgumentList	heap		703967	1					
ANR	704228	Argument	heap		703967	0					
ANR	704229	Identifier	heap		703967	0					
ANR	704230	Argument	"""\\n"""		703967	1					
ANR	704231	PrimaryExpression	"""\\n"""		703967	0					
ANR	704232	ExpressionStatement	result = gs_error_Fatal	1199:12:34050:34073	703967	4	True				
ANR	704233	AssignmentExpression	result = gs_error_Fatal		703967	0		=			
ANR	704234	Identifier	result		703967	0					
ANR	704235	Identifier	gs_error_Fatal		703967	1					
ANR	704236	ExpressionStatement	arg = p - 1	1201:8:34093:34102	703967	7	True				
ANR	704237	AssignmentExpression	arg = p - 1		703967	0		=			
ANR	704238	Identifier	arg		703967	0					
ANR	704239	AdditiveExpression	p - 1		703967	1		-			
ANR	704240	Identifier	p		703967	0					
ANR	704241	PrimaryExpression	1		703967	1					
ANR	704242	ReturnStatement	return result ;	1203:4:34114:34127	703967	4	True				
ANR	704243	Identifier	result		703967	0					
ANR	704244	ReturnType	int		703967	1					
ANR	704245	Identifier	gs_debug_flags_parse		703967	2					
ANR	704246	ParameterList	"gs_memory_t * heap , const char * arg"		703967	3					
ANR	704247	Parameter	gs_memory_t * heap	1148:25:32654:32670	703967	0	True				
ANR	704248	ParameterType	gs_memory_t *		703967	0					
ANR	704249	Identifier	heap		703967	1					
ANR	704250	Parameter	const char * arg	1148:44:32673:32687	703967	1	True				
ANR	704251	ParameterType	const char *		703967	0					
ANR	704252	Identifier	arg		703967	1					
ANR	704253	CFGEntryNode	ENTRY		703967		True				
ANR	704254	CFGExitNode	EXIT		703967		True				
ANR	704255	Symbol	gs_error_Fatal		703967						
ANR	704256	Symbol	* * i		703967						
ANR	704257	Symbol	c		703967						
ANR	704258	Symbol	d		703967						
ANR	704259	Symbol	* gs_debug_flags		703967						
ANR	704260	Symbol	* p ++		703967						
ANR	704261	Symbol	i		703967						
ANR	704262	Symbol	j		703967						
ANR	704263	Symbol	* gs_debug_flags [ i ] . short_desc		703967						
ANR	704264	Symbol	p		703967						
ANR	704265	Symbol	result		703967						
ANR	704266	Symbol	* * gs_debug_flags		703967						
ANR	704267	Symbol	gs_debug		703967						
ANR	704268	Symbol	* i		703967						
ANR	704269	Symbol	* j		703967						
ANR	704270	Symbol	gs_debug_flags		703967						
ANR	704271	Symbol	arg		703967						
ANR	704272	Symbol	gs_debug_flags_max		703967						
ANR	704273	Symbol	* gs_debug		703967						
ANR	704274	Symbol	heap		703967						
ANR	704275	Symbol	gs_debug_flags [ i ] . short_desc		703967						
ANR	704276	Symbol	value		703967						
ANR	704277	Symbol	gs_debug_flags [ i ] . used		703967						
ANR	704278	Symbol	* arg		703967						
ANR	704279	Function	gs_debug_flags_list	1210:0:34232:35446							
ANR	704280	FunctionDef	gs_debug_flags_list (gs_memory_t * heap)		704279	0					
ANR	704281	CompoundStatement		1212:0:34276:35446	704279	0					
ANR	704282	IdentifierDeclStatement	"int i , j ;"	1214:4:34295:34303	704279	0	True				
ANR	704283	IdentifierDecl	i		704279	0					
ANR	704284	IdentifierDeclType	int		704279	0					
ANR	704285	Identifier	i		704279	1					
ANR	704286	IdentifierDecl	j		704279	1					
ANR	704287	IdentifierDeclType	int		704279	0					
ANR	704288	Identifier	j		704279	1					
ANR	704289	ExpressionStatement	"outprintf ( heap , ""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"" )"	1216:4:34310:34401	704279	1	True				
ANR	704290	CallExpression	"outprintf ( heap , ""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"" )"		704279	0					
ANR	704291	Callee	outprintf		704279	0					
ANR	704292	Identifier	outprintf		704279	0					
ANR	704293	ArgumentList	heap		704279	1					
ANR	704294	Argument	heap		704279	0					
ANR	704295	Identifier	heap		704279	0					
ANR	704296	Argument	"""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"""		704279	1					
ANR	704297	PrimaryExpression	"""Debugging flags are as follows:\\n\\n-Z  --debug=            Description\\n"""		704279	0					
ANR	704298	ForStatement	for ( i = 0 ; i < gs_debug_flags_max ; i ++ )		704279	2					
ANR	704299	ForInit	i = 0 ;	1217:9:34412:34415	704279	0	True				
ANR	704300	AssignmentExpression	i = 0		704279	0		=			
ANR	704301	Identifier	i		704279	0					
ANR	704302	PrimaryExpression	0		704279	1					
ANR	704303	Condition	i < gs_debug_flags_max	1217:14:34417:34438	704279	1	True				
ANR	704304	RelationalExpression	i < gs_debug_flags_max		704279	0		<			
ANR	704305	Identifier	i		704279	0					
ANR	704306	Identifier	gs_debug_flags_max		704279	1					
ANR	704307	PostIncDecOperationExpression	i ++	1217:38:34441:34443	704279	2	True				
ANR	704308	Identifier	i		704279	0					
ANR	704309	IncDec	++		704279	1					
ANR	704310	CompoundStatement		6:43:169:169	704279	3					
ANR	704311	IfStatement	if ( ! gs_debug_flags [ i ] . used )		704279	0					
ANR	704312	Condition	! gs_debug_flags [ i ] . used	1218:12:34460:34482	704279	0	True				
ANR	704313	UnaryOperationExpression	! gs_debug_flags [ i ] . used		704279	0					
ANR	704314	UnaryOperator	!		704279	0					
ANR	704315	MemberAccess	gs_debug_flags [ i ] . used		704279	1					
ANR	704316	ArrayIndexing	gs_debug_flags [ i ]		704279	0					
ANR	704317	Identifier	gs_debug_flags		704279	0					
ANR	704318	Identifier	i		704279	1					
ANR	704319	Identifier	used		704279	1					
ANR	704320	ContinueStatement	continue ;	1219:12:34497:34505	704279	1	True				
ANR	704321	ExpressionStatement	"outprintf ( heap , "" %c  "" , ( i < 32 || i > 126 ? ' ' : i ) )"	1220:8:34515:34570	704279	1	True				
ANR	704322	CallExpression	"outprintf ( heap , "" %c  "" , ( i < 32 || i > 126 ? ' ' : i ) )"		704279	0					
ANR	704323	Callee	outprintf		704279	0					
ANR	704324	Identifier	outprintf		704279	0					
ANR	704325	ArgumentList	heap		704279	1					
ANR	704326	Argument	heap		704279	0					
ANR	704327	Identifier	heap		704279	0					
ANR	704328	Argument	""" %c  """		704279	1					
ANR	704329	PrimaryExpression	""" %c  """		704279	0					
ANR	704330	Argument	i < 32 || i > 126 ? ' ' : i		704279	2					
ANR	704331	ConditionalExpression	i < 32 || i > 126 ? ' ' : i		704279	0					
ANR	704332	Condition	i < 32 || i > 126		704279	0					
ANR	704333	OrExpression	i < 32 || i > 126		704279	0		||			
ANR	704334	RelationalExpression	i < 32		704279	0		<			
ANR	704335	Identifier	i		704279	0					
ANR	704336	PrimaryExpression	32		704279	1					
ANR	704337	RelationalExpression	i > 126		704279	1		>			
ANR	704338	Identifier	i		704279	0					
ANR	704339	PrimaryExpression	126		704279	1					
ANR	704340	PrimaryExpression	' '		704279	1					
ANR	704341	Identifier	i		704279	2					
ANR	704342	ForStatement	for ( j = 0 ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		704279	2					
ANR	704343	ForInit	j = 0 ;	1221:13:34585:34588	704279	0	True				
ANR	704344	AssignmentExpression	j = 0		704279	0		=			
ANR	704345	Identifier	j		704279	0					
ANR	704346	PrimaryExpression	0		704279	1					
ANR	704347	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1221:18:34590:34629	704279	1	True				
ANR	704348	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		704279	0		<			
ANR	704349	Identifier	j		704279	0					
ANR	704350	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		704279	1					
ANR	704351	Sizeof	sizeof		704279	0					
ANR	704352	MemberAccess	gs_debug_flags [ i ] . short_desc		704279	1					
ANR	704353	ArrayIndexing	gs_debug_flags [ i ]		704279	0					
ANR	704354	Identifier	gs_debug_flags		704279	0					
ANR	704355	Identifier	i		704279	1					
ANR	704356	Identifier	short_desc		704279	1					
ANR	704357	PostIncDecOperationExpression	j ++	1221:60:34632:34634	704279	2	True				
ANR	704358	Identifier	j		704279	0					
ANR	704359	IncDec	++		704279	1					
ANR	704360	CompoundStatement		11:12:374:414	704279	3					
ANR	704361	IdentifierDeclStatement	char c = gs_debug_flags [ i ] . short_desc [ j ] ;	1222:12:34651:34691	704279	0	True				
ANR	704362	IdentifierDecl	c = gs_debug_flags [ i ] . short_desc [ j ]		704279	0					
ANR	704363	IdentifierDeclType	char		704279	0					
ANR	704364	Identifier	c		704279	1					
ANR	704365	AssignmentExpression	c = gs_debug_flags [ i ] . short_desc [ j ]		704279	2		=			
ANR	704366	Identifier	c		704279	0					
ANR	704367	ArrayIndexing	gs_debug_flags [ i ] . short_desc [ j ]		704279	1					
ANR	704368	MemberAccess	gs_debug_flags [ i ] . short_desc		704279	0					
ANR	704369	ArrayIndexing	gs_debug_flags [ i ]		704279	0					
ANR	704370	Identifier	gs_debug_flags		704279	0					
ANR	704371	Identifier	i		704279	1					
ANR	704372	Identifier	short_desc		704279	1					
ANR	704373	Identifier	j		704279	1					
ANR	704374	IfStatement	if ( c == 0 )		704279	1					
ANR	704375	Condition	c == 0	1223:16:34709:34714	704279	0	True				
ANR	704376	EqualityExpression	c == 0		704279	0		==			
ANR	704377	Identifier	c		704279	0					
ANR	704378	PrimaryExpression	0		704279	1					
ANR	704379	BreakStatement	break ;	1224:16:34733:34738	704279	1	True				
ANR	704380	IfStatement	if ( c == '_' )		704279	2					
ANR	704381	Condition	c == '_'	1225:16:34756:34763	704279	0	True				
ANR	704382	EqualityExpression	c == '_'		704279	0		==			
ANR	704383	Identifier	c		704279	0					
ANR	704384	PrimaryExpression	'_'		704279	1					
ANR	704385	ExpressionStatement	c = '-'	1226:16:34782:34789	704279	1	True				
ANR	704386	AssignmentExpression	c = '-'		704279	0		=			
ANR	704387	Identifier	c		704279	0					
ANR	704388	PrimaryExpression	'-'		704279	1					
ANR	704389	ExpressionStatement	"outprintf ( heap , ""%c"" , c )"	1227:12:34803:34827	704279	3	True				
ANR	704390	CallExpression	"outprintf ( heap , ""%c"" , c )"		704279	0					
ANR	704391	Callee	outprintf		704279	0					
ANR	704392	Identifier	outprintf		704279	0					
ANR	704393	ArgumentList	heap		704279	1					
ANR	704394	Argument	heap		704279	0					
ANR	704395	Identifier	heap		704279	0					
ANR	704396	Argument	"""%c"""		704279	1					
ANR	704397	PrimaryExpression	"""%c"""		704279	0					
ANR	704398	Argument	c		704279	2					
ANR	704399	Identifier	c		704279	0					
ANR	704400	ForStatement	for ( ; j < sizeof ( gs_debug_flags [ i ] . short_desc ) ; j ++ )		704279	3					
ANR	704401	Condition	j < sizeof ( gs_debug_flags [ i ] . short_desc )	1229:15:34854:34893	704279	0	True				
ANR	704402	RelationalExpression	j < sizeof ( gs_debug_flags [ i ] . short_desc )		704279	0		<			
ANR	704403	Identifier	j		704279	0					
ANR	704404	SizeofExpression	sizeof ( gs_debug_flags [ i ] . short_desc )		704279	1					
ANR	704405	Sizeof	sizeof		704279	0					
ANR	704406	MemberAccess	gs_debug_flags [ i ] . short_desc		704279	1					
ANR	704407	ArrayIndexing	gs_debug_flags [ i ]		704279	0					
ANR	704408	Identifier	gs_debug_flags		704279	0					
ANR	704409	Identifier	i		704279	1					
ANR	704410	Identifier	short_desc		704279	1					
ANR	704411	PostIncDecOperationExpression	j ++	1229:57:34896:34898	704279	1	True				
ANR	704412	Identifier	j		704279	0					
ANR	704413	IncDec	++		704279	1					
ANR	704414	CompoundStatement		18:62:624:624	704279	2					
ANR	704415	ExpressionStatement	"outprintf ( heap , "" "" )"	1230:12:34915:34935	704279	0	True				
ANR	704416	CallExpression	"outprintf ( heap , "" "" )"		704279	0					
ANR	704417	Callee	outprintf		704279	0					
ANR	704418	Identifier	outprintf		704279	0					
ANR	704419	ArgumentList	heap		704279	1					
ANR	704420	Argument	heap		704279	0					
ANR	704421	Identifier	heap		704279	0					
ANR	704422	Argument	""" """		704279	1					
ANR	704423	PrimaryExpression	""" """		704279	0					
ANR	704424	ExpressionStatement	"outprintf ( heap , ""%s\\n"" , gs_debug_flags [ i ] . long_desc )"	1232:8:34955:35007	704279	4	True				
ANR	704425	CallExpression	"outprintf ( heap , ""%s\\n"" , gs_debug_flags [ i ] . long_desc )"		704279	0					
ANR	704426	Callee	outprintf		704279	0					
ANR	704427	Identifier	outprintf		704279	0					
ANR	704428	ArgumentList	heap		704279	1					
ANR	704429	Argument	heap		704279	0					
ANR	704430	Identifier	heap		704279	0					
ANR	704431	Argument	"""%s\\n"""		704279	1					
ANR	704432	PrimaryExpression	"""%s\\n"""		704279	0					
ANR	704433	Argument	gs_debug_flags [ i ] . long_desc		704279	2					
ANR	704434	MemberAccess	gs_debug_flags [ i ] . long_desc		704279	0					
ANR	704435	ArrayIndexing	gs_debug_flags [ i ]		704279	0					
ANR	704436	Identifier	gs_debug_flags		704279	0					
ANR	704437	Identifier	i		704279	1					
ANR	704438	Identifier	long_desc		704279	1					
ANR	704439	Statement	outprintf	1234:4:35019:35027	704279	3	True				
ANR	704440	Statement	(	1234:13:35028:35028	704279	4	True				
ANR	704441	Statement	heap	1234:14:35029:35032	704279	5	True				
ANR	704442	Statement	","	1234:18:35033:35033	704279	6	True				
ANR	704443	Statement	"""\\nDebugging may be enabled by using -Zx (where x is one of the 1 character\\n"""	1235:14:35049:35126	704279	7	True				
ANR	704444	Statement	"""codes given above), or by using --debug=xxxxx. Multiple flags may be specified\\n"""	1236:14:35142:35223	704279	8	True				
ANR	704445	Statement	"""at once, using -Zxyz or --debug=xxxxx,yyyyy,zzzzz. -Z=-x or --debug=-xxxxx\\n"""	1237:14:35239:35316	704279	9	True				
ANR	704446	Statement	"""disables a flag once set.\\n"""	1238:14:35332:35360	704279	10	True				
ANR	704447	Statement	)	1238:43:35361:35361	704279	11	True				
ANR	704448	ExpressionStatement		1238:44:35362:35362	704279	12	True				
ANR	704449	ReturnType	void		704279	1					
ANR	704450	Identifier	gs_debug_flags_list		704279	2					
ANR	704451	ParameterList	gs_memory_t * heap		704279	3					
ANR	704452	Parameter	gs_memory_t * heap	1211:20:34257:34273	704279	0	True				
ANR	704453	ParameterType	gs_memory_t *		704279	0					
ANR	704454	Identifier	heap		704279	1					
ANR	704455	CFGEntryNode	ENTRY		704279		True				
ANR	704456	CFGExitNode	EXIT		704279		True				
ANR	704457	Symbol	* * i		704279						
ANR	704458	Symbol	c		704279						
ANR	704459	Symbol	* gs_debug_flags		704279						
ANR	704460	Symbol	i		704279						
ANR	704461	Symbol	j		704279						
ANR	704462	Symbol	gs_debug_flags [ i ] . long_desc		704279						
ANR	704463	Symbol	* gs_debug_flags [ i ] . short_desc		704279						
ANR	704464	Symbol	* * gs_debug_flags		704279						
ANR	704465	Symbol	* i		704279						
ANR	704466	Symbol	* j		704279						
ANR	704467	Symbol	gs_debug_flags		704279						
ANR	704468	Symbol	gs_debug_flags_max		704279						
ANR	704469	Symbol	heap		704279						
ANR	704470	Symbol	gs_debug_flags [ i ] . short_desc		704279						
ANR	704471	Symbol	gs_debug_flags [ i ] . used		704279						
