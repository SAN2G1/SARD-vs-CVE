command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3075111	File	data/converged/CVE-2018-16863_ghostpdl/echogs.c								
ANR	3075112	DeclStmt									
ANR	3075113	Decl							extern int	"extern int ( int , FILE * )"	fputc
ANR	3075114	Decl							extern int	"extern int ( const char * , FILE * )"	fputs
ANR	3075115	DeclStmt									
ANR	3075116	Decl							int	"int ( int , FILE * )"	hputc
ANR	3075117	Decl							int	"int ( const char * , FILE * )"	hputs
ANR	3075118	Function	main	84:0:3267:11286							
ANR	3075119	FunctionDef	"main (int argc , char * argv [ ])"		3075118	0					
ANR	3075120	CompoundStatement		86:0:3300:11286	3075118	0					
ANR	3075121	IdentifierDeclStatement	FILE * out = stdout ;	87:4:3306:3324	3075118	0	True				
ANR	3075122	IdentifierDecl	* out = stdout		3075118	0					
ANR	3075123	IdentifierDeclType	FILE *		3075118	0					
ANR	3075124	Identifier	out		3075118	1					
ANR	3075125	AssignmentExpression	* out = stdout		3075118	2		=			
ANR	3075126	Identifier	stdout		3075118	0					
ANR	3075127	Identifier	stdout		3075118	1					
ANR	3075128	IdentifierDeclStatement	FILE * in = 0 ;	93:4:3549:3561	3075118	1	True				
ANR	3075129	IdentifierDecl	* in = 0		3075118	0					
ANR	3075130	IdentifierDeclType	FILE *		3075118	0					
ANR	3075131	Identifier	in		3075118	1					
ANR	3075132	AssignmentExpression	* in = 0		3075118	2		=			
ANR	3075133	Identifier	in		3075118	0					
ANR	3075134	PrimaryExpression	0		3075118	1					
ANR	3075135	IdentifierDeclStatement	"const char * extn = """" ;"	94:4:3567:3588	3075118	2	True				
ANR	3075136	IdentifierDecl	"* extn = """""		3075118	0					
ANR	3075137	IdentifierDeclType	const char *		3075118	0					
ANR	3075138	Identifier	extn		3075118	1					
ANR	3075139	AssignmentExpression	"* extn = """""		3075118	2		=			
ANR	3075140	Identifier	extn		3075118	0					
ANR	3075141	PrimaryExpression	""""""		3075118	1					
ANR	3075142	IdentifierDeclStatement	char fmode [ 5 ] = { 0 } ;	95:4:3594:3613	3075118	3	True				
ANR	3075143	IdentifierDecl	fmode [ 5 ] = { 0 }		3075118	0					
ANR	3075144	IdentifierDeclType	char [ 5 ]		3075118	0					
ANR	3075145	Identifier	fmode		3075118	1					
ANR	3075146	PrimaryExpression	5		3075118	2					
ANR	3075147	AssignmentExpression	fmode [ 5 ] = { 0 }		3075118	3		=			
ANR	3075148	Identifier	fmode		3075118	0					
ANR	3075149	InitializerList	0		3075118	1					
ANR	3075150	PrimaryExpression	0		3075118	0					
ANR	3075151	Statement	define	96:1:3616:3621	3075118	4	True				
ANR	3075152	Statement	FNSIZE	96:8:3623:3628	3075118	5	True				
ANR	3075153	Statement	4096	96:15:3630:3633	3075118	6	True				
ANR	3075154	IdentifierDeclStatement	char * fnparam = NULL ;	97:4:3639:3659	3075118	7	True				
ANR	3075155	IdentifierDecl	* fnparam = NULL		3075118	0					
ANR	3075156	IdentifierDeclType	char *		3075118	0					
ANR	3075157	Identifier	fnparam		3075118	1					
ANR	3075158	AssignmentExpression	* fnparam = NULL		3075118	2		=			
ANR	3075159	Identifier	NULL		3075118	0					
ANR	3075160	Identifier	NULL		3075118	1					
ANR	3075161	IdentifierDeclStatement	char fname [ FNSIZE ] ;	98:4:3707:3725	3075118	8	True				
ANR	3075162	IdentifierDecl	fname [ FNSIZE ]		3075118	0					
ANR	3075163	IdentifierDeclType	char [ FNSIZE ]		3075118	0					
ANR	3075164	Identifier	fname		3075118	1					
ANR	3075165	Identifier	FNSIZE		3075118	2					
ANR	3075166	IdentifierDeclStatement	int newline = 1 ;	99:4:3731:3746	3075118	9	True				
ANR	3075167	IdentifierDecl	newline = 1		3075118	0					
ANR	3075168	IdentifierDeclType	int		3075118	0					
ANR	3075169	Identifier	newline		3075118	1					
ANR	3075170	AssignmentExpression	newline = 1		3075118	2		=			
ANR	3075171	Identifier	newline		3075118	0					
ANR	3075172	PrimaryExpression	1		3075118	1					
ANR	3075173	IdentifierDeclStatement	int interact = 0 ;	100:4:3752:3768	3075118	10	True				
ANR	3075174	IdentifierDecl	interact = 0		3075118	0					
ANR	3075175	IdentifierDeclType	int		3075118	0					
ANR	3075176	Identifier	interact		3075118	1					
ANR	3075177	AssignmentExpression	interact = 0		3075118	2		=			
ANR	3075178	Identifier	interact		3075118	0					
ANR	3075179	PrimaryExpression	0		3075118	1					
ANR	3075180	IdentifierDeclStatement	"int ( * eputc ) ( int , FILE * ) = fputc ;"	101:4:3774:3807	3075118	11	True				
ANR	3075181	IdentifierDecl	"( * eputc ) ( int , FILE * ) = fputc"		3075118	0					
ANR	3075182	IdentifierDeclType	"int ( * ) ( int , FILE * )"		3075118	0					
ANR	3075183	Identifier	eputc		3075118	1					
ANR	3075184	AssignmentExpression	"( * eputc ) ( int , FILE * ) = fputc"		3075118	2		=			
ANR	3075185	Identifier	fputc		3075118	0					
ANR	3075186	Identifier	fputc		3075118	1					
ANR	3075187	IdentifierDeclStatement	"int ( * eputs ) ( const char * , FILE * ) = fputs ;"	102:4:3813:3855	3075118	12	True				
ANR	3075188	IdentifierDecl	"( * eputs ) ( const char * , FILE * ) = fputs"		3075118	0					
ANR	3075189	IdentifierDeclType	"int ( * ) ( const char * , FILE * )"		3075118	0					
ANR	3075190	Identifier	eputs		3075118	1					
ANR	3075191	AssignmentExpression	"( * eputs ) ( const char * , FILE * ) = fputs"		3075118	2		=			
ANR	3075192	Identifier	fputs		3075118	0					
ANR	3075193	Identifier	fputs		3075118	1					
ANR	3075194	Statement	define	103:1:3858:3863	3075118	13	True				
ANR	3075195	Statement	LINESIZE	103:8:3865:3872	3075118	14	True				
ANR	3075196	Statement	1000	103:17:3874:3877	3075118	15	True				
ANR	3075197	Statement	+	103:21:3878:3878	3075118	16	True				
ANR	3075198	Statement	FNSIZE	103:22:3879:3884	3075118	17	True				
ANR	3075199	Statement	define	104:1:3887:3892	3075118	18	True				
ANR	3075200	Statement	LINESIZESLOP	104:8:3894:3905	3075118	19	True				
ANR	3075201	Statement	LINESIZE	104:21:3907:3914	3075118	20	True				
ANR	3075202	Statement	+	104:30:3916:3916	3075118	21	True				
ANR	3075203	Statement	10	104:32:3918:3919	3075118	22	True				
ANR	3075204	IdentifierDeclStatement	char line [ LINESIZESLOP ] ;	105:4:3925:3948	3075118	23	True				
ANR	3075205	IdentifierDecl	line [ LINESIZESLOP ]		3075118	0					
ANR	3075206	IdentifierDeclType	char [ LINESIZESLOP ]		3075118	0					
ANR	3075207	Identifier	line		3075118	1					
ANR	3075208	Identifier	LINESIZESLOP		3075118	2					
ANR	3075209	IdentifierDeclStatement	"char sw = 0 , sp = 0 , hexx = 0 ;"	106:4:3954:3983	3075118	24	True				
ANR	3075210	IdentifierDecl	sw = 0		3075118	0					
ANR	3075211	IdentifierDeclType	char		3075118	0					
ANR	3075212	Identifier	sw		3075118	1					
ANR	3075213	AssignmentExpression	sw = 0		3075118	2		=			
ANR	3075214	Identifier	sw		3075118	0					
ANR	3075215	PrimaryExpression	0		3075118	1					
ANR	3075216	IdentifierDecl	sp = 0		3075118	1					
ANR	3075217	IdentifierDeclType	char		3075118	0					
ANR	3075218	Identifier	sp		3075118	1					
ANR	3075219	AssignmentExpression	sp = 0		3075118	2		=			
ANR	3075220	Identifier	sp		3075118	0					
ANR	3075221	PrimaryExpression	0		3075118	1					
ANR	3075222	IdentifierDecl	hexx = 0		3075118	2					
ANR	3075223	IdentifierDeclType	char		3075118	0					
ANR	3075224	Identifier	hexx		3075118	1					
ANR	3075225	AssignmentExpression	hexx = 0		3075118	2		=			
ANR	3075226	Identifier	hexx		3075118	0					
ANR	3075227	PrimaryExpression	0		3075118	1					
ANR	3075228	IdentifierDeclStatement	char * * argp = argv + 1 ;	107:4:3989:4011	3075118	25	True				
ANR	3075229	IdentifierDecl	* * argp = argv + 1		3075118	0					
ANR	3075230	IdentifierDeclType	char * *		3075118	0					
ANR	3075231	Identifier	argp		3075118	1					
ANR	3075232	AssignmentExpression	* * argp = argv + 1		3075118	2		=			
ANR	3075233	Identifier	argp		3075118	0					
ANR	3075234	AdditiveExpression	argv + 1		3075118	1		+			
ANR	3075235	Identifier	argv		3075118	0					
ANR	3075236	PrimaryExpression	1		3075118	1					
ANR	3075237	IdentifierDeclStatement	int nargs = argc - 1 ;	108:4:4017:4037	3075118	26	True				
ANR	3075238	IdentifierDecl	nargs = argc - 1		3075118	0					
ANR	3075239	IdentifierDeclType	int		3075118	0					
ANR	3075240	Identifier	nargs		3075118	1					
ANR	3075241	AssignmentExpression	nargs = argc - 1		3075118	2		=			
ANR	3075242	Identifier	nargs		3075118	0					
ANR	3075243	AdditiveExpression	argc - 1		3075118	1		-			
ANR	3075244	Identifier	argc		3075118	0					
ANR	3075245	PrimaryExpression	1		3075118	1					
ANR	3075246	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-e"" ) )"		3075118	27					
ANR	3075247	Condition	"nargs > 0 && ! strcmp ( * argp , ""-e"" )"	110:8:4048:4080	3075118	0	True				
ANR	3075248	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-e"" )"		3075118	0		&&			
ANR	3075249	RelationalExpression	nargs > 0		3075118	0		>			
ANR	3075250	Identifier	nargs		3075118	0					
ANR	3075251	PrimaryExpression	0		3075118	1					
ANR	3075252	UnaryOperationExpression	"! strcmp ( * argp , ""-e"" )"		3075118	1					
ANR	3075253	UnaryOperator	!		3075118	0					
ANR	3075254	CallExpression	"strcmp ( * argp , ""-e"" )"		3075118	1					
ANR	3075255	Callee	strcmp		3075118	0					
ANR	3075256	Identifier	strcmp		3075118	0					
ANR	3075257	ArgumentList	* argp		3075118	1					
ANR	3075258	Argument	* argp		3075118	0					
ANR	3075259	UnaryOperationExpression	* argp		3075118	0					
ANR	3075260	UnaryOperator	*		3075118	0					
ANR	3075261	Identifier	argp		3075118	1					
ANR	3075262	Argument	"""-e"""		3075118	1					
ANR	3075263	PrimaryExpression	"""-e"""		3075118	0					
ANR	3075264	CompoundStatement		25:43:782:782	3075118	1					
ANR	3075265	IfStatement	if ( nargs < 2 )		3075118	0					
ANR	3075266	Condition	nargs < 2	111:12:4097:4105	3075118	0	True				
ANR	3075267	RelationalExpression	nargs < 2		3075118	0		<			
ANR	3075268	Identifier	nargs		3075118	0					
ANR	3075269	PrimaryExpression	2		3075118	1					
ANR	3075270	ReturnStatement	return 1 ;	112:12:4120:4128	3075118	1	True				
ANR	3075271	PrimaryExpression	1		3075118	0					
ANR	3075272	ExpressionStatement	extn = argp [ 1 ]	113:8:4138:4152	3075118	1	True				
ANR	3075273	AssignmentExpression	extn = argp [ 1 ]		3075118	0		=			
ANR	3075274	Identifier	extn		3075118	0					
ANR	3075275	ArrayIndexing	argp [ 1 ]		3075118	1					
ANR	3075276	Identifier	argp		3075118	0					
ANR	3075277	PrimaryExpression	1		3075118	1					
ANR	3075278	ExpressionStatement	"argp += 2 , nargs -= 2"	114:8:4162:4183	3075118	2	True				
ANR	3075279	Expression	"argp += 2 , nargs -= 2"		3075118	0					
ANR	3075280	AssignmentExpression	argp += 2		3075118	0		+=			
ANR	3075281	Identifier	argp		3075118	0					
ANR	3075282	PrimaryExpression	2		3075118	1					
ANR	3075283	AssignmentExpression	nargs -= 2		3075118	1		-=			
ANR	3075284	Identifier	nargs		3075118	0					
ANR	3075285	PrimaryExpression	2		3075118	1					
ANR	3075286	IfStatement	if ( nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' ) )		3075118	28					
ANR	3075287	Condition	nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )	116:8:4199:4280	3075118	0	True				
ANR	3075288	AndExpression	nargs > 0 && ( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )		3075118	0		&&			
ANR	3075289	RelationalExpression	nargs > 0		3075118	0		>			
ANR	3075290	Identifier	nargs		3075118	0					
ANR	3075291	PrimaryExpression	0		3075118	1					
ANR	3075292	AndExpression	( * argp ) [ 0 ] == '-' && ( ( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a' )		3075118	1		&&			
ANR	3075293	EqualityExpression	( * argp ) [ 0 ] == '-'		3075118	0		==			
ANR	3075294	ArrayIndexing	( * argp ) [ 0 ]		3075118	0					
ANR	3075295	UnaryOperationExpression	* argp		3075118	0					
ANR	3075296	UnaryOperator	*		3075118	0					
ANR	3075297	Identifier	argp		3075118	1					
ANR	3075298	PrimaryExpression	0		3075118	1					
ANR	3075299	PrimaryExpression	'-'		3075118	1					
ANR	3075300	OrExpression	( * argp ) [ 1 ] == 'w' || ( * argp ) [ 1 ] == 'a'		3075118	1		||			
ANR	3075301	EqualityExpression	( * argp ) [ 1 ] == 'w'		3075118	0		==			
ANR	3075302	ArrayIndexing	( * argp ) [ 1 ]		3075118	0					
ANR	3075303	UnaryOperationExpression	* argp		3075118	0					
ANR	3075304	UnaryOperator	*		3075118	0					
ANR	3075305	Identifier	argp		3075118	1					
ANR	3075306	PrimaryExpression	1		3075118	1					
ANR	3075307	PrimaryExpression	'w'		3075118	1					
ANR	3075308	EqualityExpression	( * argp ) [ 1 ] == 'a'		3075118	1		==			
ANR	3075309	ArrayIndexing	( * argp ) [ 1 ]		3075118	0					
ANR	3075310	UnaryOperationExpression	* argp		3075118	0					
ANR	3075311	UnaryOperator	*		3075118	0					
ANR	3075312	Identifier	argp		3075118	1					
ANR	3075313	PrimaryExpression	1		3075118	1					
ANR	3075314	PrimaryExpression	'a'		3075118	1					
ANR	3075315	CompoundStatement		35:8:1037:1042	3075118	1					
ANR	3075316	IdentifierDeclStatement	size_t len = strlen ( * argp ) ;	119:8:4302:4328	3075118	0	True				
ANR	3075317	IdentifierDecl	len = strlen ( * argp )		3075118	0					
ANR	3075318	IdentifierDeclType	size_t		3075118	0					
ANR	3075319	Identifier	len		3075118	1					
ANR	3075320	AssignmentExpression	len = strlen ( * argp )		3075118	2		=			
ANR	3075321	Identifier	len		3075118	0					
ANR	3075322	CallExpression	strlen ( * argp )		3075118	1					
ANR	3075323	Callee	strlen		3075118	0					
ANR	3075324	Identifier	strlen		3075118	0					
ANR	3075325	ArgumentList	* argp		3075118	1					
ANR	3075326	Argument	* argp		3075118	0					
ANR	3075327	UnaryOperationExpression	* argp		3075118	0					
ANR	3075328	UnaryOperator	*		3075118	0					
ANR	3075329	Identifier	argp		3075118	1					
ANR	3075330	IdentifierDeclStatement	int i ;	120:8:4338:4343	3075118	1	True				
ANR	3075331	IdentifierDecl	i		3075118	0					
ANR	3075332	IdentifierDeclType	int		3075118	0					
ANR	3075333	Identifier	i		3075118	1					
ANR	3075334	IfStatement	if ( len > 4 )		3075118	2					
ANR	3075335	Condition	len > 4	122:12:4358:4364	3075118	0	True				
ANR	3075336	RelationalExpression	len > 4		3075118	0		>			
ANR	3075337	Identifier	len		3075118	0					
ANR	3075338	PrimaryExpression	4		3075118	1					
ANR	3075339	ReturnStatement	return 1 ;	123:12:4379:4387	3075118	1	True				
ANR	3075340	PrimaryExpression	1		3075118	0					
ANR	3075341	ForStatement	for ( i = 1 ; i < nargs ; i ++ )		3075118	3					
ANR	3075342	ForInit	i = 1 ;	124:13:4402:4407	3075118	0	True				
ANR	3075343	AssignmentExpression	i = 1		3075118	0		=			
ANR	3075344	Identifier	i		3075118	0					
ANR	3075345	PrimaryExpression	1		3075118	1					
ANR	3075346	Condition	i < nargs	124:20:4409:4417	3075118	1	True				
ANR	3075347	RelationalExpression	i < nargs		3075118	0		<			
ANR	3075348	Identifier	i		3075118	0					
ANR	3075349	Identifier	nargs		3075118	1					
ANR	3075350	PostIncDecOperationExpression	i ++	124:31:4420:4422	3075118	2	True				
ANR	3075351	Identifier	i		3075118	0					
ANR	3075352	IncDec	++		3075118	1					
ANR	3075353	IfStatement	if ( argp [ i ] [ 0 ] != '-' )		3075118	3					
ANR	3075354	Condition	argp [ i ] [ 0 ] != '-'	125:16:4441:4457	3075118	0	True				
ANR	3075355	EqualityExpression	argp [ i ] [ 0 ] != '-'		3075118	0		!=			
ANR	3075356	ArrayIndexing	argp [ i ] [ 0 ]		3075118	0					
ANR	3075357	ArrayIndexing	argp [ i ]		3075118	0					
ANR	3075358	Identifier	argp		3075118	0					
ANR	3075359	Identifier	i		3075118	1					
ANR	3075360	PrimaryExpression	0		3075118	1					
ANR	3075361	PrimaryExpression	'-'		3075118	1					
ANR	3075362	BreakStatement	break ;	126:16:4476:4481	3075118	1	True				
ANR	3075363	IfStatement	if ( i == nargs )		3075118	4					
ANR	3075364	Condition	i == nargs	127:12:4495:4504	3075118	0	True				
ANR	3075365	EqualityExpression	i == nargs		3075118	0		==			
ANR	3075366	Identifier	i		3075118	0					
ANR	3075367	Identifier	nargs		3075118	1					
ANR	3075368	ReturnStatement	return 1 ;	128:12:4519:4527	3075118	1	True				
ANR	3075369	PrimaryExpression	1		3075118	0					
ANR	3075370	ExpressionStatement	fnparam = argp [ i ]	129:8:4537:4554	3075118	5	True				
ANR	3075371	AssignmentExpression	fnparam = argp [ i ]		3075118	0		=			
ANR	3075372	Identifier	fnparam		3075118	0					
ANR	3075373	ArrayIndexing	argp [ i ]		3075118	1					
ANR	3075374	Identifier	argp		3075118	0					
ANR	3075375	Identifier	i		3075118	1					
ANR	3075376	ExpressionStatement	"strncpy ( fmode , * argp + 1 , 4 )"	130:8:4564:4592	3075118	6	True				
ANR	3075377	CallExpression	"strncpy ( fmode , * argp + 1 , 4 )"		3075118	0					
ANR	3075378	Callee	strncpy		3075118	0					
ANR	3075379	Identifier	strncpy		3075118	0					
ANR	3075380	ArgumentList	fmode		3075118	1					
ANR	3075381	Argument	fmode		3075118	0					
ANR	3075382	Identifier	fmode		3075118	0					
ANR	3075383	Argument	* argp + 1		3075118	1					
ANR	3075384	AdditiveExpression	* argp + 1		3075118	0		+			
ANR	3075385	UnaryOperationExpression	* argp		3075118	0					
ANR	3075386	UnaryOperator	*		3075118	0					
ANR	3075387	Identifier	argp		3075118	1					
ANR	3075388	PrimaryExpression	1		3075118	1					
ANR	3075389	Argument	4		3075118	2					
ANR	3075390	PrimaryExpression	4		3075118	0					
ANR	3075391	IfStatement	if ( strlen ( fnparam ) + strlen ( extn ) >= FNSIZE )		3075118	7					
ANR	3075392	Condition	strlen ( fnparam ) + strlen ( extn ) >= FNSIZE	131:12:4606:4645	3075118	0	True				
ANR	3075393	RelationalExpression	strlen ( fnparam ) + strlen ( extn ) >= FNSIZE		3075118	0		>=			
ANR	3075394	AdditiveExpression	strlen ( fnparam ) + strlen ( extn )		3075118	0		+			
ANR	3075395	CallExpression	strlen ( fnparam )		3075118	0					
ANR	3075396	Callee	strlen		3075118	0					
ANR	3075397	Identifier	strlen		3075118	0					
ANR	3075398	ArgumentList	fnparam		3075118	1					
ANR	3075399	Argument	fnparam		3075118	0					
ANR	3075400	Identifier	fnparam		3075118	0					
ANR	3075401	CallExpression	strlen ( extn )		3075118	1					
ANR	3075402	Callee	strlen		3075118	0					
ANR	3075403	Identifier	strlen		3075118	0					
ANR	3075404	ArgumentList	extn		3075118	1					
ANR	3075405	Argument	extn		3075118	0					
ANR	3075406	Identifier	extn		3075118	0					
ANR	3075407	Identifier	FNSIZE		3075118	1					
ANR	3075408	CompoundStatement		46:54:1347:1347	3075118	1					
ANR	3075409	ExpressionStatement	"fputs ( ""File param size exceeded\\n"" , stderr )"	132:12:4662:4705	3075118	0	True				
ANR	3075410	CallExpression	"fputs ( ""File param size exceeded\\n"" , stderr )"		3075118	0					
ANR	3075411	Callee	fputs		3075118	0					
ANR	3075412	Identifier	fputs		3075118	0					
ANR	3075413	ArgumentList	"""File param size exceeded\\n"""		3075118	1					
ANR	3075414	Argument	"""File param size exceeded\\n"""		3075118	0					
ANR	3075415	PrimaryExpression	"""File param size exceeded\\n"""		3075118	0					
ANR	3075416	Argument	stderr		3075118	1					
ANR	3075417	Identifier	stderr		3075118	0					
ANR	3075418	ReturnStatement	return 1 ;	133:12:4719:4727	3075118	1	True				
ANR	3075419	PrimaryExpression	1		3075118	0					
ANR	3075420	ExpressionStatement	"strcpy ( fname , fnparam )"	135:8:4747:4769	3075118	8	True				
ANR	3075421	CallExpression	"strcpy ( fname , fnparam )"		3075118	0					
ANR	3075422	Callee	strcpy		3075118	0					
ANR	3075423	Identifier	strcpy		3075118	0					
ANR	3075424	ArgumentList	fname		3075118	1					
ANR	3075425	Argument	fname		3075118	0					
ANR	3075426	Identifier	fname		3075118	0					
ANR	3075427	Argument	fnparam		3075118	1					
ANR	3075428	Identifier	fnparam		3075118	0					
ANR	3075429	ExpressionStatement	"strcat ( fname , extn )"	136:8:4779:4798	3075118	9	True				
ANR	3075430	CallExpression	"strcat ( fname , extn )"		3075118	0					
ANR	3075431	Callee	strcat		3075118	0					
ANR	3075432	Identifier	strcat		3075118	0					
ANR	3075433	ArgumentList	fname		3075118	1					
ANR	3075434	Argument	fname		3075118	0					
ANR	3075435	Identifier	fname		3075118	0					
ANR	3075436	Argument	extn		3075118	1					
ANR	3075437	Identifier	extn		3075118	0					
ANR	3075438	IfStatement	if ( fmode [ len - 2 ] == '-' )		3075118	10					
ANR	3075439	Condition	fmode [ len - 2 ] == '-'	137:12:4812:4832	3075118	0	True				
ANR	3075440	EqualityExpression	fmode [ len - 2 ] == '-'		3075118	0		==			
ANR	3075441	ArrayIndexing	fmode [ len - 2 ]		3075118	0					
ANR	3075442	Identifier	fmode		3075118	0					
ANR	3075443	AdditiveExpression	len - 2		3075118	1		-			
ANR	3075444	Identifier	len		3075118	0					
ANR	3075445	PrimaryExpression	2		3075118	1					
ANR	3075446	PrimaryExpression	'-'		3075118	1					
ANR	3075447	CompoundStatement		57:19:1735:1760	3075118	1					
ANR	3075448	Statement	static	142:12:5029:5034	3075118	0	True				
ANR	3075449	IdentifierDeclStatement	"char dash [ 2 ] = { '-' , 0 } ;"	142:19:5036:5061	3075118	1	True				
ANR	3075450	IdentifierDecl	"dash [ 2 ] = { '-' , 0 }"		3075118	0					
ANR	3075451	IdentifierDeclType	char [ 2 ]		3075118	0					
ANR	3075452	Identifier	dash		3075118	1					
ANR	3075453	PrimaryExpression	2		3075118	2					
ANR	3075454	AssignmentExpression	"dash [ 2 ] = { '-' , 0 }"		3075118	3		=			
ANR	3075455	Identifier	dash		3075118	0					
ANR	3075456	InitializerList	'-'		3075118	1					
ANR	3075457	PrimaryExpression	'-'		3075118	0					
ANR	3075458	PrimaryExpression	0		3075118	1					
ANR	3075459	ExpressionStatement	fmode [ len - 2 ] = 0	144:12:5076:5094	3075118	2	True				
ANR	3075460	AssignmentExpression	fmode [ len - 2 ] = 0		3075118	0		=			
ANR	3075461	ArrayIndexing	fmode [ len - 2 ]		3075118	0					
ANR	3075462	Identifier	fmode		3075118	0					
ANR	3075463	AdditiveExpression	len - 2		3075118	1		-			
ANR	3075464	Identifier	len		3075118	0					
ANR	3075465	PrimaryExpression	2		3075118	1					
ANR	3075466	PrimaryExpression	0		3075118	1					
ANR	3075467	ExpressionStatement	argp [ i ] = dash	145:12:5108:5122	3075118	3	True				
ANR	3075468	AssignmentExpression	argp [ i ] = dash		3075118	0		=			
ANR	3075469	ArrayIndexing	argp [ i ]		3075118	0					
ANR	3075470	Identifier	argp		3075118	0					
ANR	3075471	Identifier	i		3075118	1					
ANR	3075472	Identifier	dash		3075118	1					
ANR	3075473	ExpressionStatement	"argp ++ , nargs --"	146:12:5136:5151	3075118	4	True				
ANR	3075474	Expression	"argp ++ , nargs --"		3075118	0					
ANR	3075475	PostIncDecOperationExpression	argp ++		3075118	0					
ANR	3075476	Identifier	argp		3075118	0					
ANR	3075477	IncDec	++		3075118	1					
ANR	3075478	PostIncDecOperationExpression	nargs --		3075118	1					
ANR	3075479	Identifier	nargs		3075118	0					
ANR	3075480	IncDec	--		3075118	1					
ANR	3075481	ElseStatement	else		3075118	0					
ANR	3075482	CompoundStatement		62:15:1867:1867	3075118	0					
ANR	3075483	ForStatement	for ( ; i > 1 ; i -- )		3075118	0					
ANR	3075484	Condition	i > 1	148:19:5189:5193	3075118	0	True				
ANR	3075485	RelationalExpression	i > 1		3075118	0		>			
ANR	3075486	Identifier	i		3075118	0					
ANR	3075487	PrimaryExpression	1		3075118	1					
ANR	3075488	PostIncDecOperationExpression	i --	148:26:5196:5198	3075118	1	True				
ANR	3075489	Identifier	i		3075118	0					
ANR	3075490	IncDec	--		3075118	1					
ANR	3075491	ExpressionStatement	argp [ i ] = argp [ i - 1 ]	149:16:5217:5238	3075118	2	True				
ANR	3075492	AssignmentExpression	argp [ i ] = argp [ i - 1 ]		3075118	0		=			
ANR	3075493	ArrayIndexing	argp [ i ]		3075118	0					
ANR	3075494	Identifier	argp		3075118	0					
ANR	3075495	Identifier	i		3075118	1					
ANR	3075496	ArrayIndexing	argp [ i - 1 ]		3075118	1					
ANR	3075497	Identifier	argp		3075118	0					
ANR	3075498	AdditiveExpression	i - 1		3075118	1		-			
ANR	3075499	Identifier	i		3075118	0					
ANR	3075500	PrimaryExpression	1		3075118	1					
ANR	3075501	ExpressionStatement	"argp += 2 , nargs -= 2"	150:12:5252:5273	3075118	1	True				
ANR	3075502	Expression	"argp += 2 , nargs -= 2"		3075118	0					
ANR	3075503	AssignmentExpression	argp += 2		3075118	0		+=			
ANR	3075504	Identifier	argp		3075118	0					
ANR	3075505	PrimaryExpression	2		3075118	1					
ANR	3075506	AssignmentExpression	nargs -= 2		3075118	1		-=			
ANR	3075507	Identifier	nargs		3075118	0					
ANR	3075508	PrimaryExpression	2		3075118	1					
ANR	3075509	ElseStatement	else		3075118	0					
ANR	3075510	CompoundStatement		67:11:1995:1995	3075118	0					
ANR	3075511	ExpressionStatement	"strcpy ( fname , """" )"	153:8:5306:5323	3075118	0	True				
ANR	3075512	CallExpression	"strcpy ( fname , """" )"		3075118	0					
ANR	3075513	Callee	strcpy		3075118	0					
ANR	3075514	Identifier	strcpy		3075118	0					
ANR	3075515	ArgumentList	fname		3075118	1					
ANR	3075516	Argument	fname		3075118	0					
ANR	3075517	Identifier	fname		3075118	0					
ANR	3075518	Argument	""""""		3075118	1					
ANR	3075519	PrimaryExpression	""""""		3075118	0					
ANR	3075520	ExpressionStatement	fnparam = fname	154:8:5333:5348	3075118	1	True				
ANR	3075521	AssignmentExpression	fnparam = fname		3075118	0		=			
ANR	3075522	Identifier	fnparam		3075118	0					
ANR	3075523	Identifier	fname		3075118	1					
ANR	3075524	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-h"" ) )"		3075118	29					
ANR	3075525	Condition	"nargs > 0 && ! strcmp ( * argp , ""-h"" )"	156:8:5394:5426	3075118	0	True				
ANR	3075526	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-h"" )"		3075118	0		&&			
ANR	3075527	RelationalExpression	nargs > 0		3075118	0		>			
ANR	3075528	Identifier	nargs		3075118	0					
ANR	3075529	PrimaryExpression	0		3075118	1					
ANR	3075530	UnaryOperationExpression	"! strcmp ( * argp , ""-h"" )"		3075118	1					
ANR	3075531	UnaryOperator	!		3075118	0					
ANR	3075532	CallExpression	"strcmp ( * argp , ""-h"" )"		3075118	1					
ANR	3075533	Callee	strcmp		3075118	0					
ANR	3075534	Identifier	strcmp		3075118	0					
ANR	3075535	ArgumentList	* argp		3075118	1					
ANR	3075536	Argument	* argp		3075118	0					
ANR	3075537	UnaryOperationExpression	* argp		3075118	0					
ANR	3075538	UnaryOperator	*		3075118	0					
ANR	3075539	Identifier	argp		3075118	1					
ANR	3075540	Argument	"""-h"""		3075118	1					
ANR	3075541	PrimaryExpression	"""-h"""		3075118	0					
ANR	3075542	CompoundStatement		71:43:2128:2128	3075118	1					
ANR	3075543	ExpressionStatement	"eputc = hputc , eputs = hputs"	157:8:5439:5467	3075118	0	True				
ANR	3075544	Expression	"eputc = hputc , eputs = hputs"		3075118	0					
ANR	3075545	AssignmentExpression	eputc = hputc		3075118	0		=			
ANR	3075546	Identifier	eputc		3075118	0					
ANR	3075547	Identifier	hputc		3075118	1					
ANR	3075548	AssignmentExpression	eputs = hputs		3075118	1		=			
ANR	3075549	Identifier	eputs		3075118	0					
ANR	3075550	Identifier	hputs		3075118	1					
ANR	3075551	ExpressionStatement	"argp ++ , nargs --"	158:8:5477:5492	3075118	1	True				
ANR	3075552	Expression	"argp ++ , nargs --"		3075118	0					
ANR	3075553	PostIncDecOperationExpression	argp ++		3075118	0					
ANR	3075554	Identifier	argp		3075118	0					
ANR	3075555	IncDec	++		3075118	1					
ANR	3075556	PostIncDecOperationExpression	nargs --		3075118	1					
ANR	3075557	Identifier	nargs		3075118	0					
ANR	3075558	IncDec	--		3075118	1					
ANR	3075559	IfStatement	"if ( nargs > 0 && ! strcmp ( * argp , ""-n"" ) )"		3075118	30					
ANR	3075560	Condition	"nargs > 0 && ! strcmp ( * argp , ""-n"" )"	160:8:5508:5540	3075118	0	True				
ANR	3075561	AndExpression	"nargs > 0 && ! strcmp ( * argp , ""-n"" )"		3075118	0		&&			
ANR	3075562	RelationalExpression	nargs > 0		3075118	0		>			
ANR	3075563	Identifier	nargs		3075118	0					
ANR	3075564	PrimaryExpression	0		3075118	1					
ANR	3075565	UnaryOperationExpression	"! strcmp ( * argp , ""-n"" )"		3075118	1					
ANR	3075566	UnaryOperator	!		3075118	0					
ANR	3075567	CallExpression	"strcmp ( * argp , ""-n"" )"		3075118	1					
ANR	3075568	Callee	strcmp		3075118	0					
ANR	3075569	Identifier	strcmp		3075118	0					
ANR	3075570	ArgumentList	* argp		3075118	1					
ANR	3075571	Argument	* argp		3075118	0					
ANR	3075572	UnaryOperationExpression	* argp		3075118	0					
ANR	3075573	UnaryOperator	*		3075118	0					
ANR	3075574	Identifier	argp		3075118	1					
ANR	3075575	Argument	"""-n"""		3075118	1					
ANR	3075576	PrimaryExpression	"""-n"""		3075118	0					
ANR	3075577	CompoundStatement		75:43:2242:2242	3075118	1					
ANR	3075578	ExpressionStatement	newline = 0	161:8:5553:5564	3075118	0	True				
ANR	3075579	AssignmentExpression	newline = 0		3075118	0		=			
ANR	3075580	Identifier	newline		3075118	0					
ANR	3075581	PrimaryExpression	0		3075118	1					
ANR	3075582	ExpressionStatement	"argp ++ , nargs --"	162:8:5574:5589	3075118	1	True				
ANR	3075583	Expression	"argp ++ , nargs --"		3075118	0					
ANR	3075584	PostIncDecOperationExpression	argp ++		3075118	0					
ANR	3075585	Identifier	argp		3075118	0					
ANR	3075586	IncDec	++		3075118	1					
ANR	3075587	PostIncDecOperationExpression	nargs --		3075118	1					
ANR	3075588	Identifier	nargs		3075118	0					
ANR	3075589	IncDec	--		3075118	1					
ANR	3075590	IfStatement	if ( strlen ( fname ) != 0 )		3075118	31					
ANR	3075591	Condition	strlen ( fname ) != 0	164:8:5605:5622	3075118	0	True				
ANR	3075592	EqualityExpression	strlen ( fname ) != 0		3075118	0		!=			
ANR	3075593	CallExpression	strlen ( fname )		3075118	0					
ANR	3075594	Callee	strlen		3075118	0					
ANR	3075595	Identifier	strlen		3075118	0					
ANR	3075596	ArgumentList	fname		3075118	1					
ANR	3075597	Argument	fname		3075118	0					
ANR	3075598	Identifier	fname		3075118	0					
ANR	3075599	PrimaryExpression	0		3075118	1					
ANR	3075600	CompoundStatement		79:28:2324:2324	3075118	1					
ANR	3075601	ExpressionStatement	"out = fopen ( fname , fmode )"	165:8:5635:5660	3075118	0	True				
ANR	3075602	AssignmentExpression	"out = fopen ( fname , fmode )"		3075118	0		=			
ANR	3075603	Identifier	out		3075118	0					
ANR	3075604	CallExpression	"fopen ( fname , fmode )"		3075118	1					
ANR	3075605	Callee	fopen		3075118	0					
ANR	3075606	Identifier	fopen		3075118	0					
ANR	3075607	ArgumentList	fname		3075118	1					
ANR	3075608	Argument	fname		3075118	0					
ANR	3075609	Identifier	fname		3075118	0					
ANR	3075610	Argument	fmode		3075118	1					
ANR	3075611	Identifier	fmode		3075118	0					
ANR	3075612	IfStatement	if ( out == 0 )		3075118	1					
ANR	3075613	Condition	out == 0	166:12:5674:5681	3075118	0	True				
ANR	3075614	EqualityExpression	out == 0		3075118	0		==			
ANR	3075615	Identifier	out		3075118	0					
ANR	3075616	PrimaryExpression	0		3075118	1					
ANR	3075617	ReturnStatement	return 1 ;	167:12:5696:5704	3075118	1	True				
ANR	3075618	PrimaryExpression	1		3075118	0					
ANR	3075619	WhileStatement	while ( 1 )		3075118	32					
ANR	3075620	Condition	1	169:11:5723:5723	3075118	0	True				
ANR	3075621	PrimaryExpression	1		3075118	0					
ANR	3075622	CompoundStatement		86:8:2454:2459	3075118	1					
ANR	3075623	IdentifierDeclStatement	char * arg ;	170:8:5736:5745	3075118	0	True				
ANR	3075624	IdentifierDecl	* arg		3075118	0					
ANR	3075625	IdentifierDeclType	char *		3075118	0					
ANR	3075626	Identifier	arg		3075118	1					
ANR	3075627	IdentifierDeclStatement	int i ;	171:8:5755:5760	3075118	1	True				
ANR	3075628	IdentifierDecl	i		3075118	0					
ANR	3075629	IdentifierDeclType	int		3075118	0					
ANR	3075630	Identifier	i		3075118	1					
ANR	3075631	IfStatement	if ( interact )		3075118	2					
ANR	3075632	Condition	interact	173:12:5775:5782	3075118	0	True				
ANR	3075633	Identifier	interact		3075118	0					
ANR	3075634	CompoundStatement		88:22:2484:2484	3075118	1					
ANR	3075635	IfStatement	"if ( fgets ( line , LINESIZESLOP , in ) == NULL )"		3075118	0					
ANR	3075636	Condition	"fgets ( line , LINESIZESLOP , in ) == NULL"	174:16:5803:5839	3075118	0	True				
ANR	3075637	EqualityExpression	"fgets ( line , LINESIZESLOP , in ) == NULL"		3075118	0		==			
ANR	3075638	CallExpression	"fgets ( line , LINESIZESLOP , in )"		3075118	0					
ANR	3075639	Callee	fgets		3075118	0					
ANR	3075640	Identifier	fgets		3075118	0					
ANR	3075641	ArgumentList	line		3075118	1					
ANR	3075642	Argument	line		3075118	0					
ANR	3075643	Identifier	line		3075118	0					
ANR	3075644	Argument	LINESIZESLOP		3075118	1					
ANR	3075645	Identifier	LINESIZESLOP		3075118	0					
ANR	3075646	Argument	in		3075118	2					
ANR	3075647	Identifier	in		3075118	0					
ANR	3075648	Identifier	NULL		3075118	1					
ANR	3075649	CompoundStatement		89:55:2541:2541	3075118	1					
ANR	3075650	ExpressionStatement	interact = 0	175:16:5860:5872	3075118	0	True				
ANR	3075651	AssignmentExpression	interact = 0		3075118	0		=			
ANR	3075652	Identifier	interact		3075118	0					
ANR	3075653	PrimaryExpression	0		3075118	1					
ANR	3075654	IfStatement	if ( in != stdin )		3075118	1					
ANR	3075655	Condition	in != stdin	176:20:5894:5904	3075118	0	True				
ANR	3075656	EqualityExpression	in != stdin		3075118	0		!=			
ANR	3075657	Identifier	in		3075118	0					
ANR	3075658	Identifier	stdin		3075118	1					
ANR	3075659	ExpressionStatement	fclose ( in )	177:20:5927:5937	3075118	1	True				
ANR	3075660	CallExpression	fclose ( in )		3075118	0					
ANR	3075661	Callee	fclose		3075118	0					
ANR	3075662	Identifier	fclose		3075118	0					
ANR	3075663	ArgumentList	in		3075118	1					
ANR	3075664	Argument	in		3075118	0					
ANR	3075665	Identifier	in		3075118	0					
ANR	3075666	ContinueStatement	continue ;	178:16:5955:5963	3075118	2	True				
ANR	3075667	IfStatement	if ( strlen ( line ) > LINESIZE )		3075118	1					
ANR	3075668	Condition	strlen ( line ) > LINESIZE	181:16:6040:6062	3075118	0	True				
ANR	3075669	RelationalExpression	strlen ( line ) > LINESIZE		3075118	0		>			
ANR	3075670	CallExpression	strlen ( line )		3075118	0					
ANR	3075671	Callee	strlen		3075118	0					
ANR	3075672	Identifier	strlen		3075118	0					
ANR	3075673	ArgumentList	line		3075118	1					
ANR	3075674	Argument	line		3075118	0					
ANR	3075675	Identifier	line		3075118	0					
ANR	3075676	Identifier	LINESIZE		3075118	1					
ANR	3075677	CompoundStatement		96:41:2764:2764	3075118	1					
ANR	3075678	ExpressionStatement	"fputs ( ""Line limit exceeded\\n"" , stderr )"	182:16:6083:6121	3075118	0	True				
ANR	3075679	CallExpression	"fputs ( ""Line limit exceeded\\n"" , stderr )"		3075118	0					
ANR	3075680	Callee	fputs		3075118	0					
ANR	3075681	Identifier	fputs		3075118	0					
ANR	3075682	ArgumentList	"""Line limit exceeded\\n"""		3075118	1					
ANR	3075683	Argument	"""Line limit exceeded\\n"""		3075118	0					
ANR	3075684	PrimaryExpression	"""Line limit exceeded\\n"""		3075118	0					
ANR	3075685	Argument	stderr		3075118	1					
ANR	3075686	Identifier	stderr		3075118	0					
ANR	3075687	ReturnStatement	return 1 ;	183:16:6139:6147	3075118	1	True				
ANR	3075688	PrimaryExpression	1		3075118	0					
ANR	3075689	ForStatement	for ( i = strlen ( line ) - 1 ; i < LINESIZESLOP ; i ++ )		3075118	2					
ANR	3075690	ForInit	i = strlen ( line ) - 1 ;	185:17:6180:6200	3075118	0	True				
ANR	3075691	AssignmentExpression	i = strlen ( line ) - 1		3075118	0		=			
ANR	3075692	Identifier	i		3075118	0					
ANR	3075693	AdditiveExpression	strlen ( line ) - 1		3075118	1		-			
ANR	3075694	CallExpression	strlen ( line )		3075118	0					
ANR	3075695	Callee	strlen		3075118	0					
ANR	3075696	Identifier	strlen		3075118	0					
ANR	3075697	ArgumentList	line		3075118	1					
ANR	3075698	Argument	line		3075118	0					
ANR	3075699	Identifier	line		3075118	0					
ANR	3075700	PrimaryExpression	1		3075118	1					
ANR	3075701	Condition	i < LINESIZESLOP	185:39:6202:6217	3075118	1	True				
ANR	3075702	RelationalExpression	i < LINESIZESLOP		3075118	0		<			
ANR	3075703	Identifier	i		3075118	0					
ANR	3075704	Identifier	LINESIZESLOP		3075118	1					
ANR	3075705	PostIncDecOperationExpression	i ++	185:57:6220:6222	3075118	2	True				
ANR	3075706	Identifier	i		3075118	0					
ANR	3075707	IncDec	++		3075118	1					
ANR	3075708	CompoundStatement		100:62:2924:2924	3075118	3					
ANR	3075709	ExpressionStatement	line [ i ] = 0	186:16:6243:6254	3075118	0	True				
ANR	3075710	AssignmentExpression	line [ i ] = 0		3075118	0		=			
ANR	3075711	ArrayIndexing	line [ i ]		3075118	0					
ANR	3075712	Identifier	line		3075118	0					
ANR	3075713	Identifier	i		3075118	1					
ANR	3075714	PrimaryExpression	0		3075118	1					
ANR	3075715	ExpressionStatement	arg = line	188:12:6282:6292	3075118	3	True				
ANR	3075716	AssignmentExpression	arg = line		3075118	0		=			
ANR	3075717	Identifier	arg		3075118	0					
ANR	3075718	Identifier	line		3075118	1					
ANR	3075719	ElseStatement	else		3075118	0					
ANR	3075720	CompoundStatement		104:15:3008:3008	3075118	0					
ANR	3075721	IfStatement	if ( nargs == 0 )		3075118	0					
ANR	3075722	Condition	nargs == 0	190:16:6327:6336	3075118	0	True				
ANR	3075723	EqualityExpression	nargs == 0		3075118	0		==			
ANR	3075724	Identifier	nargs		3075118	0					
ANR	3075725	PrimaryExpression	0		3075118	1					
ANR	3075726	BreakStatement	break ;	191:16:6355:6360	3075118	1	True				
ANR	3075727	ExpressionStatement	arg = * argp	192:12:6374:6385	3075118	1	True				
ANR	3075728	AssignmentExpression	arg = * argp		3075118	0		=			
ANR	3075729	Identifier	arg		3075118	0					
ANR	3075730	UnaryOperationExpression	* argp		3075118	1					
ANR	3075731	UnaryOperator	*		3075118	0					
ANR	3075732	Identifier	argp		3075118	1					
ANR	3075733	ExpressionStatement	"argp ++ , nargs --"	193:12:6399:6414	3075118	2	True				
ANR	3075734	Expression	"argp ++ , nargs --"		3075118	0					
ANR	3075735	PostIncDecOperationExpression	argp ++		3075118	0					
ANR	3075736	Identifier	argp		3075118	0					
ANR	3075737	IncDec	++		3075118	1					
ANR	3075738	PostIncDecOperationExpression	nargs --		3075118	1					
ANR	3075739	Identifier	nargs		3075118	0					
ANR	3075740	IncDec	--		3075118	1					
ANR	3075741	IfStatement	if ( sw == 0 && arg [ 0 ] == '-' )		3075118	3					
ANR	3075742	Condition	sw == 0 && arg [ 0 ] == '-'	195:12:6438:6461	3075118	0	True				
ANR	3075743	AndExpression	sw == 0 && arg [ 0 ] == '-'		3075118	0		&&			
ANR	3075744	EqualityExpression	sw == 0		3075118	0		==			
ANR	3075745	Identifier	sw		3075118	0					
ANR	3075746	PrimaryExpression	0		3075118	1					
ANR	3075747	EqualityExpression	arg [ 0 ] == '-'		3075118	1		==			
ANR	3075748	ArrayIndexing	arg [ 0 ]		3075118	0					
ANR	3075749	Identifier	arg		3075118	0					
ANR	3075750	PrimaryExpression	0		3075118	1					
ANR	3075751	PrimaryExpression	'-'		3075118	1					
ANR	3075752	CompoundStatement		111:12:3177:3194	3075118	1					
ANR	3075753	IdentifierDeclStatement	char chr = arg [ 1 ] ;	196:12:6478:6495	3075118	0	True				
ANR	3075754	IdentifierDecl	chr = arg [ 1 ]		3075118	0					
ANR	3075755	IdentifierDeclType	char		3075118	0					
ANR	3075756	Identifier	chr		3075118	1					
ANR	3075757	AssignmentExpression	chr = arg [ 1 ]		3075118	2		=			
ANR	3075758	Identifier	chr		3075118	0					
ANR	3075759	ArrayIndexing	arg [ 1 ]		3075118	1					
ANR	3075760	Identifier	arg		3075118	0					
ANR	3075761	PrimaryExpression	1		3075118	1					
ANR	3075762	ExpressionStatement	sp = 0	198:12:6510:6516	3075118	1	True				
ANR	3075763	AssignmentExpression	sp = 0		3075118	0		=			
ANR	3075764	Identifier	sp		3075118	0					
ANR	3075765	PrimaryExpression	0		3075118	1					
ANR	3075766	Label	swc :	199:10:6528:6531	3075118	2	True				
ANR	3075767	Identifier	swc		3075118	0					
ANR	3075768	SwitchStatement	switch ( chr )		3075118	3					
ANR	3075769	Condition	chr	199:22:6540:6542	3075118	0	True				
ANR	3075770	Identifier	chr		3075118	0					
ANR	3075771	CompoundStatement		114:27:3244:3244	3075118	1					
ANR	3075772	Label	case 'l' :	200:16:6563:6571	3075118	0	True				
ANR	3075773	ExpressionStatement	chr = 'Q'	201:20:6623:6632	3075118	1	True				
ANR	3075774	AssignmentExpression	chr = 'Q'		3075118	0		=			
ANR	3075775	Identifier	chr		3075118	0					
ANR	3075776	PrimaryExpression	'Q'		3075118	1					
ANR	3075777	Label	case 'q' :	203:16:6690:6698	3075118	2	True				
ANR	3075778	Label	case 'Q' :	204:16:6737:6745	3075118	3	True				
ANR	3075779	IfStatement	if ( arg [ 2 ] != 0 )		3075118	4					
ANR	3075780	Condition	arg [ 2 ] != 0	205:24:6801:6811	3075118	0	True				
ANR	3075781	EqualityExpression	arg [ 2 ] != 0		3075118	0		!=			
ANR	3075782	ArrayIndexing	arg [ 2 ]		3075118	0					
ANR	3075783	Identifier	arg		3075118	0					
ANR	3075784	PrimaryExpression	2		3075118	1					
ANR	3075785	PrimaryExpression	0		3075118	1					
ANR	3075786	CompoundStatement		120:37:3513:3513	3075118	1					
ANR	3075787	ExpressionStatement	"( * eputs ) ( arg + 2 , out )"	206:24:6840:6863	3075118	0	True				
ANR	3075788	CallExpression	"( * eputs ) ( arg + 2 , out )"		3075118	0					
ANR	3075789	Callee	* eputs		3075118	0					
ANR	3075790	UnaryOperationExpression	* eputs		3075118	0					
ANR	3075791	UnaryOperator	*		3075118	0					
ANR	3075792	Identifier	eputs		3075118	1					
ANR	3075793	ArgumentList	arg + 2		3075118	1					
ANR	3075794	Argument	arg + 2		3075118	0					
ANR	3075795	AdditiveExpression	arg + 2		3075118	0		+			
ANR	3075796	Identifier	arg		3075118	0					
ANR	3075797	PrimaryExpression	2		3075118	1					
ANR	3075798	Argument	out		3075118	1					
ANR	3075799	Identifier	out		3075118	0					
ANR	3075800	IfStatement	if ( chr == 'Q' )		3075118	1					
ANR	3075801	Condition	chr == 'Q'	207:28:6893:6902	3075118	0	True				
ANR	3075802	EqualityExpression	chr == 'Q'		3075118	0		==			
ANR	3075803	Identifier	chr		3075118	0					
ANR	3075804	PrimaryExpression	'Q'		3075118	1					
ANR	3075805	ExpressionStatement	"( * eputc ) ( ' ' , out )"	208:28:6933:6952	3075118	1	True				
ANR	3075806	CallExpression	"( * eputc ) ( ' ' , out )"		3075118	0					
ANR	3075807	Callee	* eputc		3075118	0					
ANR	3075808	UnaryOperationExpression	* eputc		3075118	0					
ANR	3075809	UnaryOperator	*		3075118	0					
ANR	3075810	Identifier	eputc		3075118	1					
ANR	3075811	ArgumentList	' '		3075118	1					
ANR	3075812	Argument	' '		3075118	0					
ANR	3075813	PrimaryExpression	' '		3075118	0					
ANR	3075814	Argument	out		3075118	1					
ANR	3075815	Identifier	out		3075118	0					
ANR	3075816	BreakStatement	break ;	209:24:6978:6983	3075118	2	True				
ANR	3075817	Label	case 'r' :	212:16:7063:7071	3075118	5	True				
ANR	3075818	Label	case 'R' :	213:16:7112:7120	3075118	6	True				
ANR	3075819	Label	case 'u' :	214:16:7138:7146	3075118	7	True				
ANR	3075820	Label	case 'x' :	215:16:7188:7196	3075118	8	True				
ANR	3075821	ExpressionStatement	sw = chr	216:20:7235:7243	3075118	9	True				
ANR	3075822	AssignmentExpression	sw = chr		3075118	0		=			
ANR	3075823	Identifier	sw		3075118	0					
ANR	3075824	Identifier	chr		3075118	1					
ANR	3075825	BreakStatement	break ;	217:20:7265:7270	3075118	10	True				
ANR	3075826	Label	case 's' :	218:16:7288:7296	3075118	11	True				
ANR	3075827	ExpressionStatement	"( * eputc ) ( ' ' , out )"	219:20:7338:7357	3075118	12	True				
ANR	3075828	CallExpression	"( * eputc ) ( ' ' , out )"		3075118	0					
ANR	3075829	Callee	* eputc		3075118	0					
ANR	3075830	UnaryOperationExpression	* eputc		3075118	0					
ANR	3075831	UnaryOperator	*		3075118	0					
ANR	3075832	Identifier	eputc		3075118	1					
ANR	3075833	ArgumentList	' '		3075118	1					
ANR	3075834	Argument	' '		3075118	0					
ANR	3075835	PrimaryExpression	' '		3075118	0					
ANR	3075836	Argument	out		3075118	1					
ANR	3075837	Identifier	out		3075118	0					
ANR	3075838	BreakStatement	break ;	220:20:7379:7384	3075118	13	True				
ANR	3075839	Label	case 'i' :	221:16:7402:7410	3075118	14	True				
ANR	3075840	ExpressionStatement	interact = 1	222:20:7457:7469	3075118	15	True				
ANR	3075841	AssignmentExpression	interact = 1		3075118	0		=			
ANR	3075842	Identifier	interact		3075118	0					
ANR	3075843	PrimaryExpression	1		3075118	1					
ANR	3075844	ExpressionStatement	in = stdin	223:20:7491:7501	3075118	16	True				
ANR	3075845	AssignmentExpression	in = stdin		3075118	0		=			
ANR	3075846	Identifier	in		3075118	0					
ANR	3075847	Identifier	stdin		3075118	1					
ANR	3075848	BreakStatement	break ;	224:20:7523:7528	3075118	17	True				
ANR	3075849	Label	case 'b' :	225:16:7546:7554	3075118	18	True				
ANR	3075850	Label	case 'B' :	226:16:7600:7608	3075118	19	True				
ANR	3075851	ExpressionStatement	arg = fnparam + strlen ( fnparam )	227:20:7630:7661	3075118	20	True				
ANR	3075852	AssignmentExpression	arg = fnparam + strlen ( fnparam )		3075118	0		=			
ANR	3075853	Identifier	arg		3075118	0					
ANR	3075854	AdditiveExpression	fnparam + strlen ( fnparam )		3075118	1		+			
ANR	3075855	Identifier	fnparam		3075118	0					
ANR	3075856	CallExpression	strlen ( fnparam )		3075118	1					
ANR	3075857	Callee	strlen		3075118	0					
ANR	3075858	Identifier	strlen		3075118	0					
ANR	3075859	ArgumentList	fnparam		3075118	1					
ANR	3075860	Argument	fnparam		3075118	0					
ANR	3075861	Identifier	fnparam		3075118	0					
ANR	3075862	WhileStatement	while ( arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' ) )		3075118	21					
ANR	3075863	Condition	arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' )	228:27:7690:7769	3075118	0	True				
ANR	3075864	AndExpression	arg > fnparam && ( isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_' )		3075118	0		&&			
ANR	3075865	RelationalExpression	arg > fnparam		3075118	0		>			
ANR	3075866	Identifier	arg		3075118	0					
ANR	3075867	Identifier	fnparam		3075118	1					
ANR	3075868	OrExpression	isalnum ( arg [ - 1 ] ) || arg [ - 1 ] == '_'		3075118	1		||			
ANR	3075869	CallExpression	isalnum ( arg [ - 1 ] )		3075118	0					
ANR	3075870	Callee	isalnum		3075118	0					
ANR	3075871	Identifier	isalnum		3075118	0					
ANR	3075872	ArgumentList	arg [ - 1 ]		3075118	1					
ANR	3075873	Argument	arg [ - 1 ]		3075118	0					
ANR	3075874	ArrayIndexing	arg [ - 1 ]		3075118	0					
ANR	3075875	Identifier	arg		3075118	0					
ANR	3075876	UnaryOperationExpression	- 1		3075118	1					
ANR	3075877	UnaryOperator	-		3075118	0					
ANR	3075878	PrimaryExpression	1		3075118	1					
ANR	3075879	EqualityExpression	arg [ - 1 ] == '_'		3075118	1		==			
ANR	3075880	ArrayIndexing	arg [ - 1 ]		3075118	0					
ANR	3075881	Identifier	arg		3075118	0					
ANR	3075882	UnaryOperationExpression	- 1		3075118	1					
ANR	3075883	UnaryOperator	-		3075118	0					
ANR	3075884	PrimaryExpression	1		3075118	1					
ANR	3075885	PrimaryExpression	'_'		3075118	1					
ANR	3075886	ExpressionStatement	-- arg	230:24:7796:7801	3075118	1	True				
ANR	3075887	UnaryExpression	-- arg		3075118	0					
ANR	3075888	IncDec	--		3075118	0					
ANR	3075889	Identifier	arg		3075118	1					
ANR	3075890	ExpressionStatement	"( * eputs ) ( arg , out )"	231:20:7823:7842	3075118	22	True				
ANR	3075891	CallExpression	"( * eputs ) ( arg , out )"		3075118	0					
ANR	3075892	Callee	* eputs		3075118	0					
ANR	3075893	UnaryOperationExpression	* eputs		3075118	0					
ANR	3075894	UnaryOperator	*		3075118	0					
ANR	3075895	Identifier	eputs		3075118	1					
ANR	3075896	ArgumentList	arg		3075118	1					
ANR	3075897	Argument	arg		3075118	0					
ANR	3075898	Identifier	arg		3075118	0					
ANR	3075899	Argument	out		3075118	1					
ANR	3075900	Identifier	out		3075118	0					
ANR	3075901	BreakStatement	break ;	232:20:7864:7869	3075118	23	True				
ANR	3075902	Label	case 'd' :	233:16:7887:7895	3075118	24	True				
ANR	3075903	Label	case 'D' :	234:16:7936:7944	3075118	25	True				
ANR	3075904	CompoundStatement		152:24:4725:4737	3075118	26					
ANR	3075905	IdentifierDeclStatement	time_t t ;	236:24:7992:8000	3075118	0	True				
ANR	3075906	IdentifierDecl	t		3075118	0					
ANR	3075907	IdentifierDeclType	time_t		3075118	0					
ANR	3075908	Identifier	t		3075118	1					
ANR	3075909	IdentifierDeclStatement	char str [ 26 ] ;	237:24:8026:8038	3075118	1	True				
ANR	3075910	IdentifierDecl	str [ 26 ]		3075118	0					
ANR	3075911	IdentifierDeclType	char [ 26 ]		3075118	0					
ANR	3075912	Identifier	str		3075118	1					
ANR	3075913	PrimaryExpression	26		3075118	2					
ANR	3075914	ExpressionStatement	time ( & t )	239:24:8065:8073	3075118	2	True				
ANR	3075915	CallExpression	time ( & t )		3075118	0					
ANR	3075916	Callee	time		3075118	0					
ANR	3075917	Identifier	time		3075118	0					
ANR	3075918	ArgumentList	& t		3075118	1					
ANR	3075919	Argument	& t		3075118	0					
ANR	3075920	UnaryOperationExpression	& t		3075118	0					
ANR	3075921	UnaryOperator	&		3075118	0					
ANR	3075922	Identifier	t		3075118	1					
ANR	3075923	ExpressionStatement	"strncpy ( str , ctime ( & t ) , 25 )"	240:24:8099:8126	3075118	3	True				
ANR	3075924	CallExpression	"strncpy ( str , ctime ( & t ) , 25 )"		3075118	0					
ANR	3075925	Callee	strncpy		3075118	0					
ANR	3075926	Identifier	strncpy		3075118	0					
ANR	3075927	ArgumentList	str		3075118	1					
ANR	3075928	Argument	str		3075118	0					
ANR	3075929	Identifier	str		3075118	0					
ANR	3075930	Argument	ctime ( & t )		3075118	1					
ANR	3075931	CallExpression	ctime ( & t )		3075118	0					
ANR	3075932	Callee	ctime		3075118	0					
ANR	3075933	Identifier	ctime		3075118	0					
ANR	3075934	ArgumentList	& t		3075118	1					
ANR	3075935	Argument	& t		3075118	0					
ANR	3075936	UnaryOperationExpression	& t		3075118	0					
ANR	3075937	UnaryOperator	&		3075118	0					
ANR	3075938	Identifier	t		3075118	1					
ANR	3075939	Argument	25		3075118	2					
ANR	3075940	PrimaryExpression	25		3075118	0					
ANR	3075941	ExpressionStatement	str [ 24 ] = 0	241:24:8152:8163	3075118	4	True				
ANR	3075942	AssignmentExpression	str [ 24 ] = 0		3075118	0		=			
ANR	3075943	ArrayIndexing	str [ 24 ]		3075118	0					
ANR	3075944	Identifier	str		3075118	0					
ANR	3075945	PrimaryExpression	24		3075118	1					
ANR	3075946	PrimaryExpression	0		3075118	1					
ANR	3075947	ExpressionStatement	"( * eputs ) ( str , out )"	242:24:8205:8224	3075118	5	True				
ANR	3075948	CallExpression	"( * eputs ) ( str , out )"		3075118	0					
ANR	3075949	Callee	* eputs		3075118	0					
ANR	3075950	UnaryOperationExpression	* eputs		3075118	0					
ANR	3075951	UnaryOperator	*		3075118	0					
ANR	3075952	Identifier	eputs		3075118	1					
ANR	3075953	ArgumentList	str		3075118	1					
ANR	3075954	Argument	str		3075118	0					
ANR	3075955	Identifier	str		3075118	0					
ANR	3075956	Argument	out		3075118	1					
ANR	3075957	Identifier	out		3075118	0					
ANR	3075958	BreakStatement	break ;	243:22:8248:8253	3075118	27	True				
ANR	3075959	Label	case 'f' :	244:16:8271:8279	3075118	28	True				
ANR	3075960	Label	case 'F' :	245:16:8320:8328	3075118	29	True				
ANR	3075961	ExpressionStatement	"( * eputs ) ( fnparam , out )"	246:20:8350:8373	3075118	30	True				
ANR	3075962	CallExpression	"( * eputs ) ( fnparam , out )"		3075118	0					
ANR	3075963	Callee	* eputs		3075118	0					
ANR	3075964	UnaryOperationExpression	* eputs		3075118	0					
ANR	3075965	UnaryOperator	*		3075118	0					
ANR	3075966	Identifier	eputs		3075118	1					
ANR	3075967	ArgumentList	fnparam		3075118	1					
ANR	3075968	Argument	fnparam		3075118	0					
ANR	3075969	Identifier	fnparam		3075118	0					
ANR	3075970	Argument	out		3075118	1					
ANR	3075971	Identifier	out		3075118	0					
ANR	3075972	BreakStatement	break ;	247:20:8395:8400	3075118	31	True				
ANR	3075973	Label	case 'X' :	248:16:8418:8426	3075118	32	True				
ANR	3075974	ExpressionStatement	hexx = 1	249:20:8476:8484	3075118	33	True				
ANR	3075975	AssignmentExpression	hexx = 1		3075118	0		=			
ANR	3075976	Identifier	hexx		3075118	0					
ANR	3075977	PrimaryExpression	1		3075118	1					
ANR	3075978	BreakStatement	break ;	250:20:8506:8511	3075118	34	True				
ANR	3075979	Label	case '+' :	251:16:8529:8537	3075118	35	True				
ANR	3075980	IfStatement	if ( arg [ 1 ] )		3075118	36					
ANR	3075981	Condition	arg [ 1 ]	252:24:8588:8593	3075118	0	True				
ANR	3075982	ArrayIndexing	arg [ 1 ]		3075118	0					
ANR	3075983	Identifier	arg		3075118	0					
ANR	3075984	PrimaryExpression	1		3075118	1					
ANR	3075985	CompoundStatement		167:32:5295:5295	3075118	1					
ANR	3075986	ExpressionStatement	++ arg	253:24:8622:8627	3075118	0	True				
ANR	3075987	UnaryExpression	++ arg		3075118	0					
ANR	3075988	IncDec	++		3075118	0					
ANR	3075989	Identifier	arg		3075118	1					
ANR	3075990	ExpressionStatement	chr = toupper ( arg [ 1 ] )	254:24:8653:8674	3075118	1	True				
ANR	3075991	AssignmentExpression	chr = toupper ( arg [ 1 ] )		3075118	0		=			
ANR	3075992	Identifier	chr		3075118	0					
ANR	3075993	CallExpression	toupper ( arg [ 1 ] )		3075118	1					
ANR	3075994	Callee	toupper		3075118	0					
ANR	3075995	Identifier	toupper		3075118	0					
ANR	3075996	ArgumentList	arg [ 1 ]		3075118	1					
ANR	3075997	Argument	arg [ 1 ]		3075118	0					
ANR	3075998	ArrayIndexing	arg [ 1 ]		3075118	0					
ANR	3075999	Identifier	arg		3075118	0					
ANR	3076000	PrimaryExpression	1		3075118	1					
ANR	3076001	GotoStatement	goto swc ;	255:24:8700:8708	3075118	2	True				
ANR	3076002	Identifier	swc		3075118	0					
ANR	3076003	Label	case 0 :	258:16:8788:8794	3075118	37	True				
ANR	3076004	ExpressionStatement	sw = '-'	259:20:8832:8840	3075118	38	True				
ANR	3076005	AssignmentExpression	sw = '-'		3075118	0		=			
ANR	3076006	Identifier	sw		3075118	0					
ANR	3076007	PrimaryExpression	'-'		3075118	1					
ANR	3076008	BreakStatement	break ;	260:20:8862:8867	3075118	39	True				
ANR	3076009	ElseStatement	else		3075118	0					
ANR	3076010	SwitchStatement	switch ( sw )		3075118	0					
ANR	3076011	Condition	sw	263:20:8918:8919	3075118	0	True				
ANR	3076012	Identifier	sw		3075118	0					
ANR	3076013	CompoundStatement		178:24:5621:5621	3075118	1					
ANR	3076014	Label	case 0 :	264:16:8940:8946	3075118	0	True				
ANR	3076015	Label	case '-' :	265:16:8964:8972	3075118	1	True				
ANR	3076016	IfStatement	if ( hexx )		3075118	2					
ANR	3076017	Condition	hexx	266:24:8998:9001	3075118	0	True				
ANR	3076018	Identifier	hexx		3075118	0					
ANR	3076019	GotoStatement	goto xx ;	267:24:9028:9035	3075118	1	True				
ANR	3076020	Identifier	xx		3075118	0					
ANR	3076021	IfStatement	if ( sp )		3075118	3					
ANR	3076022	Condition	sp	268:24:9061:9062	3075118	0	True				
ANR	3076023	Identifier	sp		3075118	0					
ANR	3076024	ExpressionStatement	"( * eputc ) ( ' ' , out )"	269:24:9089:9108	3075118	1	True				
ANR	3076025	CallExpression	"( * eputc ) ( ' ' , out )"		3075118	0					
ANR	3076026	Callee	* eputc		3075118	0					
ANR	3076027	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076028	UnaryOperator	*		3075118	0					
ANR	3076029	Identifier	eputc		3075118	1					
ANR	3076030	ArgumentList	' '		3075118	1					
ANR	3076031	Argument	' '		3075118	0					
ANR	3076032	PrimaryExpression	' '		3075118	0					
ANR	3076033	Argument	out		3075118	1					
ANR	3076034	Identifier	out		3075118	0					
ANR	3076035	ExpressionStatement	"( * eputs ) ( arg , out )"	270:20:9130:9149	3075118	4	True				
ANR	3076036	CallExpression	"( * eputs ) ( arg , out )"		3075118	0					
ANR	3076037	Callee	* eputs		3075118	0					
ANR	3076038	UnaryOperationExpression	* eputs		3075118	0					
ANR	3076039	UnaryOperator	*		3075118	0					
ANR	3076040	Identifier	eputs		3075118	1					
ANR	3076041	ArgumentList	arg		3075118	1					
ANR	3076042	Argument	arg		3075118	0					
ANR	3076043	Identifier	arg		3075118	0					
ANR	3076044	Argument	out		3075118	1					
ANR	3076045	Identifier	out		3075118	0					
ANR	3076046	ExpressionStatement	sp = 1	271:20:9171:9177	3075118	5	True				
ANR	3076047	AssignmentExpression	sp = 1		3075118	0		=			
ANR	3076048	Identifier	sp		3075118	0					
ANR	3076049	PrimaryExpression	1		3075118	1					
ANR	3076050	BreakStatement	break ;	272:20:9199:9204	3075118	6	True				
ANR	3076051	Label	case 'q' :	273:16:9222:9230	3075118	7	True				
ANR	3076052	ExpressionStatement	sw = 0	274:20:9252:9258	3075118	8	True				
ANR	3076053	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076054	Identifier	sw		3075118	0					
ANR	3076055	PrimaryExpression	0		3075118	1					
ANR	3076056	ExpressionStatement	"( * eputs ) ( arg , out )"	275:20:9280:9299	3075118	9	True				
ANR	3076057	CallExpression	"( * eputs ) ( arg , out )"		3075118	0					
ANR	3076058	Callee	* eputs		3075118	0					
ANR	3076059	UnaryOperationExpression	* eputs		3075118	0					
ANR	3076060	UnaryOperator	*		3075118	0					
ANR	3076061	Identifier	eputs		3075118	1					
ANR	3076062	ArgumentList	arg		3075118	1					
ANR	3076063	Argument	arg		3075118	0					
ANR	3076064	Identifier	arg		3075118	0					
ANR	3076065	Argument	out		3075118	1					
ANR	3076066	Identifier	out		3075118	0					
ANR	3076067	BreakStatement	break ;	276:20:9321:9326	3075118	10	True				
ANR	3076068	Label	case 'Q' :	277:16:9344:9352	3075118	11	True				
ANR	3076069	ExpressionStatement	sw = 0	278:20:9374:9380	3075118	12	True				
ANR	3076070	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076071	Identifier	sw		3075118	0					
ANR	3076072	PrimaryExpression	0		3075118	1					
ANR	3076073	ExpressionStatement	"( * eputs ) ( arg , out )"	279:20:9402:9421	3075118	13	True				
ANR	3076074	CallExpression	"( * eputs ) ( arg , out )"		3075118	0					
ANR	3076075	Callee	* eputs		3075118	0					
ANR	3076076	UnaryOperationExpression	* eputs		3075118	0					
ANR	3076077	UnaryOperator	*		3075118	0					
ANR	3076078	Identifier	eputs		3075118	1					
ANR	3076079	ArgumentList	arg		3075118	1					
ANR	3076080	Argument	arg		3075118	0					
ANR	3076081	Identifier	arg		3075118	0					
ANR	3076082	Argument	out		3075118	1					
ANR	3076083	Identifier	out		3075118	0					
ANR	3076084	ExpressionStatement	"( * eputc ) ( ' ' , out )"	280:20:9443:9462	3075118	14	True				
ANR	3076085	CallExpression	"( * eputc ) ( ' ' , out )"		3075118	0					
ANR	3076086	Callee	* eputc		3075118	0					
ANR	3076087	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076088	UnaryOperator	*		3075118	0					
ANR	3076089	Identifier	eputc		3075118	1					
ANR	3076090	ArgumentList	' '		3075118	1					
ANR	3076091	Argument	' '		3075118	0					
ANR	3076092	PrimaryExpression	' '		3075118	0					
ANR	3076093	Argument	out		3075118	1					
ANR	3076094	Identifier	out		3075118	0					
ANR	3076095	BreakStatement	break ;	281:20:9484:9489	3075118	15	True				
ANR	3076096	Label	case 'r' :	282:16:9507:9515	3075118	16	True				
ANR	3076097	ExpressionStatement	sw = 0	283:20:9537:9543	3075118	17	True				
ANR	3076098	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076099	Identifier	sw		3075118	0					
ANR	3076100	PrimaryExpression	0		3075118	1					
ANR	3076101	ExpressionStatement	"in = fopen ( arg , ""r"" )"	284:20:9565:9585	3075118	18	True				
ANR	3076102	AssignmentExpression	"in = fopen ( arg , ""r"" )"		3075118	0		=			
ANR	3076103	Identifier	in		3075118	0					
ANR	3076104	CallExpression	"fopen ( arg , ""r"" )"		3075118	1					
ANR	3076105	Callee	fopen		3075118	0					
ANR	3076106	Identifier	fopen		3075118	0					
ANR	3076107	ArgumentList	arg		3075118	1					
ANR	3076108	Argument	arg		3075118	0					
ANR	3076109	Identifier	arg		3075118	0					
ANR	3076110	Argument	"""r"""		3075118	1					
ANR	3076111	PrimaryExpression	"""r"""		3075118	0					
ANR	3076112	IfStatement	if ( in == NULL )		3075118	19					
ANR	3076113	Condition	in == NULL	285:24:9611:9620	3075118	0	True				
ANR	3076114	EqualityExpression	in == NULL		3075118	0		==			
ANR	3076115	Identifier	in		3075118	0					
ANR	3076116	Identifier	NULL		3075118	1					
ANR	3076117	ExpressionStatement	exit ( exit_FAILED )	286:24:9647:9664	3075118	1	True				
ANR	3076118	CallExpression	exit ( exit_FAILED )		3075118	0					
ANR	3076119	Callee	exit		3075118	0					
ANR	3076120	Identifier	exit		3075118	0					
ANR	3076121	ArgumentList	exit_FAILED		3075118	1					
ANR	3076122	Argument	exit_FAILED		3075118	0					
ANR	3076123	Identifier	exit_FAILED		3075118	0					
ANR	3076124	ExpressionStatement	interact = 1	287:20:9686:9698	3075118	20	True				
ANR	3076125	AssignmentExpression	interact = 1		3075118	0		=			
ANR	3076126	Identifier	interact		3075118	0					
ANR	3076127	PrimaryExpression	1		3075118	1					
ANR	3076128	BreakStatement	break ;	288:20:9720:9725	3075118	21	True				
ANR	3076129	Label	case 'R' :	289:16:9743:9751	3075118	22	True				
ANR	3076130	ExpressionStatement	sw = 0	290:20:9773:9779	3075118	23	True				
ANR	3076131	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076132	Identifier	sw		3075118	0					
ANR	3076133	PrimaryExpression	0		3075118	1					
ANR	3076134	ExpressionStatement	"in = fopen ( arg , ""r"" )"	291:20:9801:9821	3075118	24	True				
ANR	3076135	AssignmentExpression	"in = fopen ( arg , ""r"" )"		3075118	0		=			
ANR	3076136	Identifier	in		3075118	0					
ANR	3076137	CallExpression	"fopen ( arg , ""r"" )"		3075118	1					
ANR	3076138	Callee	fopen		3075118	0					
ANR	3076139	Identifier	fopen		3075118	0					
ANR	3076140	ArgumentList	arg		3075118	1					
ANR	3076141	Argument	arg		3075118	0					
ANR	3076142	Identifier	arg		3075118	0					
ANR	3076143	Argument	"""r"""		3075118	1					
ANR	3076144	PrimaryExpression	"""r"""		3075118	0					
ANR	3076145	IfStatement	if ( in == NULL )		3075118	25					
ANR	3076146	Condition	in == NULL	292:24:9847:9856	3075118	0	True				
ANR	3076147	EqualityExpression	in == NULL		3075118	0		==			
ANR	3076148	Identifier	in		3075118	0					
ANR	3076149	Identifier	NULL		3075118	1					
ANR	3076150	ExpressionStatement	exit ( exit_FAILED )	293:24:9883:9900	3075118	1	True				
ANR	3076151	CallExpression	exit ( exit_FAILED )		3075118	0					
ANR	3076152	Callee	exit		3075118	0					
ANR	3076153	Identifier	exit		3075118	0					
ANR	3076154	ArgumentList	exit_FAILED		3075118	1					
ANR	3076155	Argument	exit_FAILED		3075118	0					
ANR	3076156	Identifier	exit_FAILED		3075118	0					
ANR	3076157	WhileStatement	"while ( fread ( line , 1 , 1 , in ) > 0 )"		3075118	26					
ANR	3076158	Condition	"fread ( line , 1 , 1 , in ) > 0"	294:27:9929:9953	3075118	0	True				
ANR	3076159	RelationalExpression	"fread ( line , 1 , 1 , in ) > 0"		3075118	0		>			
ANR	3076160	CallExpression	"fread ( line , 1 , 1 , in )"		3075118	0					
ANR	3076161	Callee	fread		3075118	0					
ANR	3076162	Identifier	fread		3075118	0					
ANR	3076163	ArgumentList	line		3075118	1					
ANR	3076164	Argument	line		3075118	0					
ANR	3076165	Identifier	line		3075118	0					
ANR	3076166	Argument	1		3075118	1					
ANR	3076167	PrimaryExpression	1		3075118	0					
ANR	3076168	Argument	1		3075118	2					
ANR	3076169	PrimaryExpression	1		3075118	0					
ANR	3076170	Argument	in		3075118	3					
ANR	3076171	Identifier	in		3075118	0					
ANR	3076172	PrimaryExpression	0		3075118	1					
ANR	3076173	ExpressionStatement	"( * eputc ) ( line [ 0 ] , out )"	295:24:9980:10003	3075118	1	True				
ANR	3076174	CallExpression	"( * eputc ) ( line [ 0 ] , out )"		3075118	0					
ANR	3076175	Callee	* eputc		3075118	0					
ANR	3076176	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076177	UnaryOperator	*		3075118	0					
ANR	3076178	Identifier	eputc		3075118	1					
ANR	3076179	ArgumentList	line [ 0 ]		3075118	1					
ANR	3076180	Argument	line [ 0 ]		3075118	0					
ANR	3076181	ArrayIndexing	line [ 0 ]		3075118	0					
ANR	3076182	Identifier	line		3075118	0					
ANR	3076183	PrimaryExpression	0		3075118	1					
ANR	3076184	Argument	out		3075118	1					
ANR	3076185	Identifier	out		3075118	0					
ANR	3076186	ExpressionStatement	fclose ( in )	296:20:10025:10035	3075118	27	True				
ANR	3076187	CallExpression	fclose ( in )		3075118	0					
ANR	3076188	Callee	fclose		3075118	0					
ANR	3076189	Identifier	fclose		3075118	0					
ANR	3076190	ArgumentList	in		3075118	1					
ANR	3076191	Argument	in		3075118	0					
ANR	3076192	Identifier	in		3075118	0					
ANR	3076193	BreakStatement	break ;	297:20:10057:10062	3075118	28	True				
ANR	3076194	Label	case 'u' :	298:16:10080:10088	3075118	29	True				
ANR	3076195	CompoundStatement		215:24:6835:6843	3075118	30					
ANR	3076196	IdentifierDeclStatement	char * up ;	300:24:10136:10144	3075118	0	True				
ANR	3076197	IdentifierDecl	* up		3075118	0					
ANR	3076198	IdentifierDeclType	char *		3075118	0					
ANR	3076199	Identifier	up		3075118	1					
ANR	3076200	ForStatement	for ( up = arg ; * up ; up ++ )		3075118	1					
ANR	3076201	ForInit	up = arg ;	302:29:10176:10184	3075118	0	True				
ANR	3076202	AssignmentExpression	up = arg		3075118	0		=			
ANR	3076203	Identifier	up		3075118	0					
ANR	3076204	Identifier	arg		3075118	1					
ANR	3076205	Condition	* up	302:39:10186:10188	3075118	1	True				
ANR	3076206	UnaryOperationExpression	* up		3075118	0					
ANR	3076207	UnaryOperator	*		3075118	0					
ANR	3076208	Identifier	up		3075118	1					
ANR	3076209	PostIncDecOperationExpression	up ++	302:44:10191:10194	3075118	2	True				
ANR	3076210	Identifier	up		3075118	0					
ANR	3076211	IncDec	++		3075118	1					
ANR	3076212	ExpressionStatement	"( * eputc ) ( toupper ( * up ) , out )"	303:28:10225:10253	3075118	3	True				
ANR	3076213	CallExpression	"( * eputc ) ( toupper ( * up ) , out )"		3075118	0					
ANR	3076214	Callee	* eputc		3075118	0					
ANR	3076215	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076216	UnaryOperator	*		3075118	0					
ANR	3076217	Identifier	eputc		3075118	1					
ANR	3076218	ArgumentList	toupper ( * up )		3075118	1					
ANR	3076219	Argument	toupper ( * up )		3075118	0					
ANR	3076220	CallExpression	toupper ( * up )		3075118	0					
ANR	3076221	Callee	toupper		3075118	0					
ANR	3076222	Identifier	toupper		3075118	0					
ANR	3076223	ArgumentList	* up		3075118	1					
ANR	3076224	Argument	* up		3075118	0					
ANR	3076225	UnaryOperationExpression	* up		3075118	0					
ANR	3076226	UnaryOperator	*		3075118	0					
ANR	3076227	Identifier	up		3075118	1					
ANR	3076228	Argument	out		3075118	1					
ANR	3076229	Identifier	out		3075118	0					
ANR	3076230	ExpressionStatement	sw = 0	305:20:10297:10303	3075118	31	True				
ANR	3076231	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076232	Identifier	sw		3075118	0					
ANR	3076233	PrimaryExpression	0		3075118	1					
ANR	3076234	BreakStatement	break ;	306:20:10325:10330	3075118	32	True				
ANR	3076235	Label	case 'x' :	307:16:10348:10356	3075118	33	True				
ANR	3076236	Label	xx :	308:18:10376:10378	3075118	34	True				
ANR	3076237	Identifier	xx		3075118	0					
ANR	3076238	CompoundStatement		225:24:7138:7159	3075118	35					
ANR	3076239	IdentifierDeclStatement	char * xp ;	309:24:10405:10413	3075118	0	True				
ANR	3076240	IdentifierDecl	* xp		3075118	0					
ANR	3076241	IdentifierDeclType	char *		3075118	0					
ANR	3076242	Identifier	xp		3075118	1					
ANR	3076243	IdentifierDeclStatement	unsigned int xchr = 1 ;	310:24:10439:10460	3075118	1	True				
ANR	3076244	IdentifierDecl	xchr = 1		3075118	0					
ANR	3076245	IdentifierDeclType	unsigned int		3075118	0					
ANR	3076246	Identifier	xchr		3075118	1					
ANR	3076247	AssignmentExpression	xchr = 1		3075118	2		=			
ANR	3076248	Identifier	xchr		3075118	0					
ANR	3076249	PrimaryExpression	1		3075118	1					
ANR	3076250	ForStatement	for ( xp = arg ; * xp ; xp ++ )		3075118	2					
ANR	3076251	ForInit	xp = arg ;	312:29:10492:10500	3075118	0	True				
ANR	3076252	AssignmentExpression	xp = arg		3075118	0		=			
ANR	3076253	Identifier	xp		3075118	0					
ANR	3076254	Identifier	arg		3075118	1					
ANR	3076255	Condition	* xp	312:39:10502:10504	3075118	1	True				
ANR	3076256	UnaryOperationExpression	* xp		3075118	0					
ANR	3076257	UnaryOperator	*		3075118	0					
ANR	3076258	Identifier	xp		3075118	1					
ANR	3076259	PostIncDecOperationExpression	xp ++	312:44:10507:10510	3075118	2	True				
ANR	3076260	Identifier	xp		3075118	0					
ANR	3076261	IncDec	++		3075118	1					
ANR	3076262	CompoundStatement		228:28:7242:7255	3075118	3					
ANR	3076263	IdentifierDeclStatement	char ch = * xp ;	313:28:10543:10556	3075118	0	True				
ANR	3076264	IdentifierDecl	ch = * xp		3075118	0					
ANR	3076265	IdentifierDeclType	char		3075118	0					
ANR	3076266	Identifier	ch		3075118	1					
ANR	3076267	AssignmentExpression	ch = * xp		3075118	2		=			
ANR	3076268	Identifier	ch		3075118	0					
ANR	3076269	UnaryOperationExpression	* xp		3075118	1					
ANR	3076270	UnaryOperator	*		3075118	0					
ANR	3076271	Identifier	xp		3075118	1					
ANR	3076272	IfStatement	if ( ! isxdigit ( ch ) )		3075118	1					
ANR	3076273	Condition	! isxdigit ( ch )	315:32:10591:10603	3075118	0	True				
ANR	3076274	UnaryOperationExpression	! isxdigit ( ch )		3075118	0					
ANR	3076275	UnaryOperator	!		3075118	0					
ANR	3076276	CallExpression	isxdigit ( ch )		3075118	1					
ANR	3076277	Callee	isxdigit		3075118	0					
ANR	3076278	Identifier	isxdigit		3075118	0					
ANR	3076279	ArgumentList	ch		3075118	1					
ANR	3076280	Argument	ch		3075118	0					
ANR	3076281	Identifier	ch		3075118	0					
ANR	3076282	ReturnStatement	return 1 ;	316:32:10638:10646	3075118	1	True				
ANR	3076283	PrimaryExpression	1		3075118	0					
ANR	3076284	ExpressionStatement	xchr <<= 4	317:28:10676:10686	3075118	2	True				
ANR	3076285	AssignmentExpression	xchr <<= 4		3075118	0		<<=			
ANR	3076286	Identifier	xchr		3075118	0					
ANR	3076287	PrimaryExpression	4		3075118	1					
ANR	3076288	ExpressionStatement	xchr += ( isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10 )	318:28:10716:10868	3075118	3	True				
ANR	3076289	AssignmentExpression	xchr += ( isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10 )		3075118	0		+=			
ANR	3076290	Identifier	xchr		3075118	0					
ANR	3076291	ConditionalExpression	isdigit ( ch ) ? ch - '0' : ( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10		3075118	1					
ANR	3076292	Condition	isdigit ( ch )		3075118	0					
ANR	3076293	CallExpression	isdigit ( ch )		3075118	0					
ANR	3076294	Callee	isdigit		3075118	0					
ANR	3076295	Identifier	isdigit		3075118	0					
ANR	3076296	ArgumentList	ch		3075118	1					
ANR	3076297	Argument	ch		3075118	0					
ANR	3076298	Identifier	ch		3075118	0					
ANR	3076299	AdditiveExpression	ch - '0'		3075118	1		-			
ANR	3076300	Identifier	ch		3075118	0					
ANR	3076301	PrimaryExpression	'0'		3075118	1					
ANR	3076302	AdditiveExpression	( isupper ( ch ) ? tolower ( ch ) : ch ) - 'a' + 10		3075118	2		-			
ANR	3076303	ConditionalExpression	isupper ( ch ) ? tolower ( ch ) : ch		3075118	0					
ANR	3076304	Condition	isupper ( ch )		3075118	0					
ANR	3076305	CallExpression	isupper ( ch )		3075118	0					
ANR	3076306	Callee	isupper		3075118	0					
ANR	3076307	Identifier	isupper		3075118	0					
ANR	3076308	ArgumentList	ch		3075118	1					
ANR	3076309	Argument	ch		3075118	0					
ANR	3076310	Identifier	ch		3075118	0					
ANR	3076311	CallExpression	tolower ( ch )		3075118	1					
ANR	3076312	Callee	tolower		3075118	0					
ANR	3076313	Identifier	tolower		3075118	0					
ANR	3076314	ArgumentList	ch		3075118	1					
ANR	3076315	Argument	ch		3075118	0					
ANR	3076316	Identifier	ch		3075118	0					
ANR	3076317	Identifier	ch		3075118	2					
ANR	3076318	AdditiveExpression	'a' + 10		3075118	1		+			
ANR	3076319	PrimaryExpression	'a'		3075118	0					
ANR	3076320	PrimaryExpression	10		3075118	1					
ANR	3076321	IfStatement	if ( xchr >= 0x100 )		3075118	4					
ANR	3076322	Condition	xchr >= 0x100	321:32:10902:10914	3075118	0	True				
ANR	3076323	RelationalExpression	xchr >= 0x100		3075118	0		>=			
ANR	3076324	Identifier	xchr		3075118	0					
ANR	3076325	PrimaryExpression	0x100		3075118	1					
ANR	3076326	CompoundStatement		236:47:7616:7616	3075118	1					
ANR	3076327	ExpressionStatement	"( * eputc ) ( xchr & 0xff , out )"	322:32:10951:10978	3075118	0	True				
ANR	3076328	CallExpression	"( * eputc ) ( xchr & 0xff , out )"		3075118	0					
ANR	3076329	Callee	* eputc		3075118	0					
ANR	3076330	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076331	UnaryOperator	*		3075118	0					
ANR	3076332	Identifier	eputc		3075118	1					
ANR	3076333	ArgumentList	xchr & 0xff		3075118	1					
ANR	3076334	Argument	xchr & 0xff		3075118	0					
ANR	3076335	BitAndExpression	xchr & 0xff		3075118	0		&			
ANR	3076336	Identifier	xchr		3075118	0					
ANR	3076337	PrimaryExpression	0xff		3075118	1					
ANR	3076338	Argument	out		3075118	1					
ANR	3076339	Identifier	out		3075118	0					
ANR	3076340	ExpressionStatement	xchr = 1	323:32:11012:11020	3075118	1	True				
ANR	3076341	AssignmentExpression	xchr = 1		3075118	0		=			
ANR	3076342	Identifier	xchr		3075118	0					
ANR	3076343	PrimaryExpression	1		3075118	1					
ANR	3076344	ExpressionStatement	sw = 0	327:20:11120:11126	3075118	36	True				
ANR	3076345	AssignmentExpression	sw = 0		3075118	0		=			
ANR	3076346	Identifier	sw		3075118	0					
ANR	3076347	PrimaryExpression	0		3075118	1					
ANR	3076348	BreakStatement	break ;	328:20:11148:11153	3075118	37	True				
ANR	3076349	IfStatement	if ( newline )		3075118	33					
ANR	3076350	Condition	newline	331:8:11183:11189	3075118	0	True				
ANR	3076351	Identifier	newline		3075118	0					
ANR	3076352	ExpressionStatement	"( * eputc ) ( '\\n' , out )"	332:8:11200:11220	3075118	1	True				
ANR	3076353	CallExpression	"( * eputc ) ( '\\n' , out )"		3075118	0					
ANR	3076354	Callee	* eputc		3075118	0					
ANR	3076355	UnaryOperationExpression	* eputc		3075118	0					
ANR	3076356	UnaryOperator	*		3075118	0					
ANR	3076357	Identifier	eputc		3075118	1					
ANR	3076358	ArgumentList	'\\n'		3075118	1					
ANR	3076359	Argument	'\\n'		3075118	0					
ANR	3076360	PrimaryExpression	'\\n'		3075118	0					
ANR	3076361	Argument	out		3075118	1					
ANR	3076362	Identifier	out		3075118	0					
ANR	3076363	IfStatement	if ( out != stdout )		3075118	34					
ANR	3076364	Condition	out != stdout	333:8:11230:11242	3075118	0	True				
ANR	3076365	EqualityExpression	out != stdout		3075118	0		!=			
ANR	3076366	Identifier	out		3075118	0					
ANR	3076367	Identifier	stdout		3075118	1					
ANR	3076368	ExpressionStatement	fclose ( out )	334:8:11253:11264	3075118	1	True				
ANR	3076369	CallExpression	fclose ( out )		3075118	0					
ANR	3076370	Callee	fclose		3075118	0					
ANR	3076371	Identifier	fclose		3075118	0					
ANR	3076372	ArgumentList	out		3075118	1					
ANR	3076373	Argument	out		3075118	0					
ANR	3076374	Identifier	out		3075118	0					
ANR	3076375	ReturnStatement	return exit_OK ;	335:4:11270:11284	3075118	35	True				
ANR	3076376	Identifier	exit_OK		3075118	0					
ANR	3076377	ReturnType	int		3075118	1					
ANR	3076378	Identifier	main		3075118	2					
ANR	3076379	ParameterList	"int argc , char * argv [ ]"		3075118	3					
ANR	3076380	Parameter	int argc	85:5:3276:3283	3075118	0	True				
ANR	3076381	ParameterType	int		3075118	0					
ANR	3076382	Identifier	argc		3075118	1					
ANR	3076383	Parameter	char * argv [ ]	85:15:3286:3297	3075118	1	True				
ANR	3076384	ParameterType	char * [ ]		3075118	0					
ANR	3076385	Identifier	argv		3075118	1					
ANR	3076386	CFGEntryNode	ENTRY		3075118		True				
ANR	3076387	CFGExitNode	EXIT		3075118		True				
ANR	3076388	Symbol	stdin		3075118						
ANR	3076389	Symbol	stdout		3075118						
ANR	3076390	Symbol	tolower		3075118						
ANR	3076391	Symbol	exit_OK		3075118						
ANR	3076392	Symbol	* line		3075118						
ANR	3076393	Symbol	* argp		3075118						
ANR	3076394	Symbol	fnparam		3075118						
ANR	3076395	Symbol	hexx		3075118						
ANR	3076396	Symbol	xchr		3075118						
ANR	3076397	Symbol	fgets		3075118						
ANR	3076398	Symbol	strlen		3075118						
ANR	3076399	Symbol	newline		3075118						
ANR	3076400	Symbol	* * argp		3075118						
ANR	3076401	Symbol	len		3075118						
ANR	3076402	Symbol	LINESIZESLOP		3075118						
ANR	3076403	Symbol	ctime		3075118						
ANR	3076404	Symbol	up		3075118						
ANR	3076405	Symbol	isdigit		3075118						
ANR	3076406	Symbol	isxdigit		3075118						
ANR	3076407	Symbol	strcmp		3075118						
ANR	3076408	Symbol	fname		3075118						
ANR	3076409	Symbol	* * i		3075118						
ANR	3076410	Symbol	* fmode		3075118						
ANR	3076411	Symbol	NULL		3075118						
ANR	3076412	Symbol	isalnum		3075118						
ANR	3076413	Symbol	exit_FAILED		3075118						
ANR	3076414	Symbol	in		3075118						
ANR	3076415	Symbol	FNSIZE		3075118						
ANR	3076416	Symbol	stderr		3075118						
ANR	3076417	Symbol	chr		3075118						
ANR	3076418	Symbol	fread		3075118						
ANR	3076419	Symbol	str		3075118						
ANR	3076420	Symbol	dash		3075118						
ANR	3076421	Symbol	* xp		3075118						
ANR	3076422	Symbol	* arg		3075118						
ANR	3076423	Symbol	extn		3075118						
ANR	3076424	Symbol	hputs		3075118						
ANR	3076425	Symbol	* up		3075118						
ANR	3076426	Symbol	line		3075118						
ANR	3076427	Symbol	fputc		3075118						
ANR	3076428	Symbol	interact		3075118						
ANR	3076429	Symbol	argv		3075118						
ANR	3076430	Symbol	out		3075118						
ANR	3076431	Symbol	arg		3075118						
ANR	3076432	Symbol	fmode		3075118						
ANR	3076433	Symbol	eputc		3075118						
ANR	3076434	Symbol	* str		3075118						
ANR	3076435	Symbol	sp		3075118						
ANR	3076436	Symbol	argc		3075118						
ANR	3076437	Symbol	fopen		3075118						
ANR	3076438	Symbol	sw		3075118						
ANR	3076439	Symbol	toupper		3075118						
ANR	3076440	Symbol	ch		3075118						
ANR	3076441	Symbol	isupper		3075118						
ANR	3076442	Symbol	i		3075118						
ANR	3076443	Symbol	eputs		3075118						
ANR	3076444	Symbol	nargs		3075118						
ANR	3076445	Symbol	hputc		3075118						
ANR	3076446	Symbol	* i		3075118						
ANR	3076447	Symbol	t		3075118						
ANR	3076448	Symbol	argp		3075118						
ANR	3076449	Symbol	fputs		3075118						
ANR	3076450	Symbol	LINESIZE		3075118						
ANR	3076451	Symbol	xp		3075118						
ANR	3076452	Symbol	& t		3075118						
ANR	3076453	Symbol	* len		3075118						
ANR	3076454	Function	hputc	338:0:11289:11531							
ANR	3076455	FunctionDef	"hputc (int ch , FILE * out)"		3076454	0					
ANR	3076456	CompoundStatement		340:0:11326:11531	3076454	0					
ANR	3076457	Statement	static	341:4:11332:11337	3076454	0	True				
ANR	3076458	IdentifierDeclStatement	"const char * hex = ""0123456789abcdef"" ;"	341:11:11339:11375	3076454	1	True				
ANR	3076459	IdentifierDecl	"* hex = ""0123456789abcdef"""		3076454	0					
ANR	3076460	IdentifierDeclType	const char *		3076454	0					
ANR	3076461	Identifier	hex		3076454	1					
ANR	3076462	AssignmentExpression	"* hex = ""0123456789abcdef"""		3076454	2		=			
ANR	3076463	Identifier	hex		3076454	0					
ANR	3076464	PrimaryExpression	"""0123456789abcdef"""		3076454	1					
ANR	3076465	ExpressionStatement	"putc ( hex [ ( ch >> 4 ) & 0xf ] , out )"	344:4:11454:11485	3076454	2	True				
ANR	3076466	CallExpression	"putc ( hex [ ( ch >> 4 ) & 0xf ] , out )"		3076454	0					
ANR	3076467	Callee	putc		3076454	0					
ANR	3076468	Identifier	putc		3076454	0					
ANR	3076469	ArgumentList	hex [ ( ch >> 4 ) & 0xf ]		3076454	1					
ANR	3076470	Argument	hex [ ( ch >> 4 ) & 0xf ]		3076454	0					
ANR	3076471	ArrayIndexing	hex [ ( ch >> 4 ) & 0xf ]		3076454	0					
ANR	3076472	Identifier	hex		3076454	0					
ANR	3076473	BitAndExpression	( ch >> 4 ) & 0xf		3076454	1		&			
ANR	3076474	ShiftExpression	ch >> 4		3076454	0		>>			
ANR	3076475	Identifier	ch		3076454	0					
ANR	3076476	PrimaryExpression	4		3076454	1					
ANR	3076477	PrimaryExpression	0xf		3076454	1					
ANR	3076478	Argument	out		3076454	1					
ANR	3076479	Identifier	out		3076454	0					
ANR	3076480	ExpressionStatement	"putc ( hex [ ch & 0xf ] , out )"	345:4:11491:11515	3076454	3	True				
ANR	3076481	CallExpression	"putc ( hex [ ch & 0xf ] , out )"		3076454	0					
ANR	3076482	Callee	putc		3076454	0					
ANR	3076483	Identifier	putc		3076454	0					
ANR	3076484	ArgumentList	hex [ ch & 0xf ]		3076454	1					
ANR	3076485	Argument	hex [ ch & 0xf ]		3076454	0					
ANR	3076486	ArrayIndexing	hex [ ch & 0xf ]		3076454	0					
ANR	3076487	Identifier	hex		3076454	0					
ANR	3076488	BitAndExpression	ch & 0xf		3076454	1		&			
ANR	3076489	Identifier	ch		3076454	0					
ANR	3076490	PrimaryExpression	0xf		3076454	1					
ANR	3076491	Argument	out		3076454	1					
ANR	3076492	Identifier	out		3076454	0					
ANR	3076493	ReturnStatement	return 0 ;	346:4:11521:11529	3076454	4	True				
ANR	3076494	PrimaryExpression	0		3076454	0					
ANR	3076495	ReturnType	static int		3076454	1					
ANR	3076496	Identifier	hputc		3076454	2					
ANR	3076497	ParameterList	"int ch , FILE * out"		3076454	3					
ANR	3076498	Parameter	int ch	339:6:11306:11311	3076454	0	True				
ANR	3076499	ParameterType	int		3076454	0					
ANR	3076500	Identifier	ch		3076454	1					
ANR	3076501	Parameter	FILE * out	339:14:11314:11323	3076454	1	True				
ANR	3076502	ParameterType	FILE *		3076454	0					
ANR	3076503	Identifier	out		3076454	1					
ANR	3076504	CFGEntryNode	ENTRY		3076454		True				
ANR	3076505	CFGExitNode	EXIT		3076454		True				
ANR	3076506	Symbol	ch		3076454						
ANR	3076507	Symbol	* ch		3076454						
ANR	3076508	Symbol	hex		3076454						
ANR	3076509	Symbol	* hex		3076454						
ANR	3076510	Symbol	out		3076454						
ANR	3076511	Function	hputs	349:0:11534:11648							
ANR	3076512	FunctionDef	"hputs (const char * str , FILE * out)"		3076511	0					
ANR	3076513	CompoundStatement		351:0:11580:11648	3076511	0					
ANR	3076514	WhileStatement	while ( * str )		3076511	0					
ANR	3076515	Condition	* str	352:11:11593:11596	3076511	0	True				
ANR	3076516	UnaryOperationExpression	* str		3076511	0					
ANR	3076517	UnaryOperator	*		3076511	0					
ANR	3076518	Identifier	str		3076511	1					
ANR	3076519	ExpressionStatement	"hputc ( * str ++ & 0xff , out )"	353:8:11607:11632	3076511	1	True				
ANR	3076520	CallExpression	"hputc ( * str ++ & 0xff , out )"		3076511	0					
ANR	3076521	Callee	hputc		3076511	0					
ANR	3076522	Identifier	hputc		3076511	0					
ANR	3076523	ArgumentList	* str ++ & 0xff		3076511	1					
ANR	3076524	Argument	* str ++ & 0xff		3076511	0					
ANR	3076525	BitAndExpression	* str ++ & 0xff		3076511	0		&			
ANR	3076526	UnaryOperationExpression	* str ++		3076511	0					
ANR	3076527	UnaryOperator	*		3076511	0					
ANR	3076528	PostIncDecOperationExpression	str ++		3076511	1					
ANR	3076529	Identifier	str		3076511	0					
ANR	3076530	IncDec	++		3076511	1					
ANR	3076531	PrimaryExpression	0xff		3076511	1					
ANR	3076532	Argument	out		3076511	1					
ANR	3076533	Identifier	out		3076511	0					
ANR	3076534	ReturnStatement	return 0 ;	354:4:11638:11646	3076511	1	True				
ANR	3076535	PrimaryExpression	0		3076511	0					
ANR	3076536	ReturnType	static int		3076511	1					
ANR	3076537	Identifier	hputs		3076511	2					
ANR	3076538	ParameterList	"const char * str , FILE * out"		3076511	3					
ANR	3076539	Parameter	const char * str	350:6:11551:11565	3076511	0	True				
ANR	3076540	ParameterType	const char *		3076511	0					
ANR	3076541	Identifier	str		3076511	1					
ANR	3076542	Parameter	FILE * out	350:23:11568:11577	3076511	1	True				
ANR	3076543	ParameterType	FILE *		3076511	0					
ANR	3076544	Identifier	out		3076511	1					
ANR	3076545	CFGEntryNode	ENTRY		3076511		True				
ANR	3076546	CFGExitNode	EXIT		3076511		True				
ANR	3076547	Symbol	str		3076511						
ANR	3076548	Symbol	* str ++		3076511						
ANR	3076549	Symbol	* str		3076511						
ANR	3076550	Symbol	out		3076511						
