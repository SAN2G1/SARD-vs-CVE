command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3099639	File	data/converged/CVE-2018-16863_ghostpdl/evenbetter-rll.c								
ANR	3099640	DeclStmt									
ANR	3099641	Decl							struct _eb_ctx_sse2	struct _eb_ctx_sse2	eb_ctx_sse2
ANR	3099642	DeclStmt									
ANR	3099643	Decl							struct _eb_srcbuf	struct _eb_srcbuf	eb_srcbuf
ANR	3099644	DeclStmt									
ANR	3099645	Decl							int	int ( void )	eb_test_sse2
ANR	3099646	DeclStmt									
ANR	3099647	Decl							int	"int ( eb_ctx_sse2 * ctx , unsigned char * * out , eb_srcbuf * in , int offset )"	eb_sse2_core
ANR	3099648	DeclStmt									
ANR	3099649	Decl							int	"int ( eb_ctx_sse2 * ctx , int offset )"	eb_sse2_rev_rs
ANR	3099650	DeclStmt									
ANR	3099651	Decl							int	int ( void )	eb_sse2_set_daz
ANR	3099652	DeclStmt									
ANR	3099653	Decl							void	void ( int save_mxcsr )	eb_sse2_restore_daz
ANR	3099654	ClassDef	_eb_ctx_sse2	64:0:1628:2026							
ANR	3099655	DeclStmt									
ANR	3099656	Decl							int	int	xs
ANR	3099657	DeclStmt									
ANR	3099658	Decl							int	int *	iir_line
ANR	3099659	DeclStmt									
ANR	3099660	Decl							int	int *	r_line
ANR	3099661	DeclStmt									
ANR	3099662	Decl							int	int *	a_line
ANR	3099663	DeclStmt									
ANR	3099664	Decl							int	int *	b_line
ANR	3099665	DeclStmt									
ANR	3099666	Decl							char	char *	skip_line
ANR	3099667	DeclStmt									
ANR	3099668	Decl							int	int [ 2 ]	dummy
ANR	3099669	DeclStmt									
ANR	3099670	Decl							float	float * [ 4 ]	luts
ANR	3099671	DeclStmt									
ANR	3099672	Decl							float	float [ 4 ]	e
ANR	3099673	DeclStmt									
ANR	3099674	Decl							float	float [ 4 ]	e_i_1
ANR	3099675	DeclStmt									
ANR	3099676	Decl							int	int [ 4 ]	r
ANR	3099677	DeclStmt									
ANR	3099678	Decl							int	int [ 4 ]	a
ANR	3099679	DeclStmt									
ANR	3099680	Decl							int	int [ 4 ]	b
ANR	3099681	DeclStmt									
ANR	3099682	Decl							int	int [ 4 ]	ones
ANR	3099683	DeclStmt									
ANR	3099684	Decl							int	int [ 4 ]	twos
ANR	3099685	DeclStmt									
ANR	3099686	Decl							int	int [ 4 ]	aspect2
ANR	3099687	DeclStmt									
ANR	3099688	Decl							float	float [ 4 ]	ehi
ANR	3099689	DeclStmt									
ANR	3099690	Decl							float	float [ 4 ]	elo
ANR	3099691	DeclStmt									
ANR	3099692	Decl							float	float [ 4 ]	ohi
ANR	3099693	DeclStmt									
ANR	3099694	Decl							float	float [ 4 ]	r_mul
ANR	3099695	DeclStmt									
ANR	3099696	Decl							float	float [ 4 ]	kernel
ANR	3099697	DeclStmt									
ANR	3099698	Decl							unsigned int	unsigned int [ 4 ]	seed1
ANR	3099699	DeclStmt									
ANR	3099700	Decl							unsigned int	unsigned int [ 4 ]	seed2
ANR	3099701	ClassDef	_eb_srcbuf	90:0:2030:2114							
ANR	3099702	DeclStmt									
ANR	3099703	Decl							float	float [ 64 ]	im
ANR	3099704	DeclStmt									
ANR	3099705	Decl							float	float [ 64 ]	rb
ANR	3099706	DeclStmt									
ANR	3099707	Decl							float	float [ 64 ]	rs
ANR	3099708	DeclStmt									
ANR	3099709	Decl							int	int [ 3 ]	dummy
ANR	3099710	DeclStmt									
ANR	3099711	Decl							struct _EBPlaneCtx	struct _EBPlaneCtx	EBPlaneCtx
ANR	3099712	DeclStmt									
ANR	3099713	Decl							unsigned int	unsigned int	uint32
ANR	3099714	ClassDef	_EvenBetterCtx	102:0:2195:2689							
ANR	3099715	DeclStmt									
ANR	3099716	Decl							int	int	source_width
ANR	3099717	DeclStmt									
ANR	3099718	Decl							int	int	dest_width
ANR	3099719	DeclStmt									
ANR	3099720	Decl							int	int	n_planes
ANR	3099721	DeclStmt									
ANR	3099722	Decl							int	int	levels
ANR	3099723	DeclStmt									
ANR	3099724	Decl							EBPlaneCtx	EBPlaneCtx * *	plane_ctx
ANR	3099725	DeclStmt									
ANR	3099726	Decl							int	int	aspect
ANR	3099727	DeclStmt									
ANR	3099728	Decl							int	int *	strengths
ANR	3099729	DeclStmt									
ANR	3099730	Decl							int	int	even_elo
ANR	3099731	DeclStmt									
ANR	3099732	Decl							int	int	even_ehi
ANR	3099733	DeclStmt									
ANR	3099734	Decl							int	int *	c_line
ANR	3099735	DeclStmt									
ANR	3099736	Decl							int	int	even_c1
ANR	3099737	DeclStmt									
ANR	3099738	Decl							int	int	do_shadows
ANR	3099739	DeclStmt									
ANR	3099740	Decl							uint32	uint32	seed1
ANR	3099741	DeclStmt									
ANR	3099742	Decl							uint32	uint32	seed2
ANR	3099743	DeclStmt									
ANR	3099744	Decl							FILE	FILE *	dump_file
ANR	3099745	DeclStmt									
ANR	3099746	Decl							EbDumpLevel	EbDumpLevel	dump_level
ANR	3099747	DeclStmt									
ANR	3099748	Decl							eb_ctx_sse2	eb_ctx_sse2 * *	sse2_ctx
ANR	3099749	DeclStmt									
ANR	3099750	Decl							int	int	using_vectors
ANR	3099751	DeclStmt									
ANR	3099752	Decl							eb_ctx_avec	eb_ctx_avec * *	avec_ctx
ANR	3099753	DeclStmt									
ANR	3099754	Decl							int	int	using_vectors
ANR	3099755	ClassDef	_EBPlaneCtx	133:0:2693:2952							
ANR	3099756	DeclStmt									
ANR	3099757	Decl							int	int	source_width
ANR	3099758	DeclStmt									
ANR	3099759	Decl							int	int	dest_width
ANR	3099760	DeclStmt									
ANR	3099761	Decl							int	int *	rb_line
ANR	3099762	DeclStmt									
ANR	3099763	Decl							int	int *	iir_line
ANR	3099764	DeclStmt									
ANR	3099765	Decl							int	int *	r_line
ANR	3099766	DeclStmt									
ANR	3099767	Decl							int	int *	a_line
ANR	3099768	DeclStmt									
ANR	3099769	Decl							int	int *	b_line
ANR	3099770	DeclStmt									
ANR	3099771	Decl							int	int *	r_line_sh
ANR	3099772	DeclStmt									
ANR	3099773	Decl							int	int *	a_line_sh
ANR	3099774	DeclStmt									
ANR	3099775	Decl							int	int *	b_line_sh
ANR	3099776	DeclStmt									
ANR	3099777	Decl							int	int *	lut
ANR	3099778	DeclStmt									
ANR	3099779	Decl							int	int *	rb_lut
ANR	3099780	DeclStmt									
ANR	3099781	Decl							char	char *	rs_lut
ANR	3099782	DeclStmt									
ANR	3099783	Decl							int	int *	white_count_line
ANR	3099784	Function	eb_malloc_aligned	150:0:2956:3244							
ANR	3099785	FunctionDef	"eb_malloc_aligned (int size , int align)"		3099784	0					
ANR	3099786	CompoundStatement		152:0:3002:3244	3099784	0					
ANR	3099787	IdentifierDeclStatement	void * result ;	153:2:3006:3018	3099784	0	True				
ANR	3099788	IdentifierDecl	* result		3099784	0					
ANR	3099789	IdentifierDeclType	void *		3099784	0					
ANR	3099790	Identifier	result		3099784	1					
ANR	3099791	IdentifierDeclStatement	void * alloced = malloc ( size + align ) ;	154:2:3022:3058	3099784	1	True				
ANR	3099792	IdentifierDecl	* alloced = malloc ( size + align )		3099784	0					
ANR	3099793	IdentifierDeclType	void *		3099784	0					
ANR	3099794	Identifier	alloced		3099784	1					
ANR	3099795	AssignmentExpression	* alloced = malloc ( size + align )		3099784	2		=			
ANR	3099796	Identifier	alloced		3099784	0					
ANR	3099797	CallExpression	malloc ( size + align )		3099784	1					
ANR	3099798	Callee	malloc		3099784	0					
ANR	3099799	Identifier	malloc		3099784	0					
ANR	3099800	ArgumentList	size + align		3099784	1					
ANR	3099801	Argument	size + align		3099784	0					
ANR	3099802	AdditiveExpression	size + align		3099784	0		+			
ANR	3099803	Identifier	size		3099784	0					
ANR	3099804	Identifier	align		3099784	1					
ANR	3099805	IdentifierDeclStatement	int pad ;	155:2:3062:3069	3099784	2	True				
ANR	3099806	IdentifierDecl	pad		3099784	0					
ANR	3099807	IdentifierDeclType	int		3099784	0					
ANR	3099808	Identifier	pad		3099784	1					
ANR	3099809	IfStatement	if ( alloced == 0 )		3099784	3					
ANR	3099810	Condition	alloced == 0	157:6:3078:3089	3099784	0	True				
ANR	3099811	EqualityExpression	alloced == 0		3099784	0		==			
ANR	3099812	Identifier	alloced		3099784	0					
ANR	3099813	PrimaryExpression	0		3099784	1					
ANR	3099814	ReturnStatement	return 0 ;	158:4:3096:3104	3099784	1	True				
ANR	3099815	PrimaryExpression	0		3099784	0					
ANR	3099816	ExpressionStatement	pad = ( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4	159:2:3108:3152	3099784	4	True				
ANR	3099817	AssignmentExpression	pad = ( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4		3099784	0		=			
ANR	3099818	Identifier	pad		3099784	0					
ANR	3099819	AdditiveExpression	( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4		3099784	1		+			
ANR	3099820	BitAndExpression	( ( int ) ( size_t ) alloced + 12 ) & 15		3099784	0		&			
ANR	3099821	AdditiveExpression	( int ) ( size_t ) alloced + 12		3099784	0		+			
ANR	3099822	CastExpression	( int ) ( size_t ) alloced		3099784	0					
ANR	3099823	CastTarget	int		3099784	0					
ANR	3099824	CastExpression	( size_t ) alloced		3099784	1					
ANR	3099825	CastTarget	size_t		3099784	0					
ANR	3099826	Identifier	alloced		3099784	1					
ANR	3099827	PrimaryExpression	12		3099784	1					
ANR	3099828	PrimaryExpression	15		3099784	1					
ANR	3099829	PrimaryExpression	4		3099784	1					
ANR	3099830	ExpressionStatement	result = ( void * ) ( pad + ( char * ) alloced )	160:2:3156:3196	3099784	5	True				
ANR	3099831	AssignmentExpression	result = ( void * ) ( pad + ( char * ) alloced )		3099784	0		=			
ANR	3099832	Identifier	result		3099784	0					
ANR	3099833	CastExpression	( void * ) ( pad + ( char * ) alloced )		3099784	1					
ANR	3099834	CastTarget	void *		3099784	0					
ANR	3099835	AdditiveExpression	pad + ( char * ) alloced		3099784	1		+			
ANR	3099836	Identifier	pad		3099784	0					
ANR	3099837	CastExpression	( char * ) alloced		3099784	1					
ANR	3099838	CastTarget	char *		3099784	0					
ANR	3099839	Identifier	alloced		3099784	1					
ANR	3099840	ExpressionStatement	( ( int * ) result ) [ - 1 ] = pad	161:2:3200:3225	3099784	6	True				
ANR	3099841	AssignmentExpression	( ( int * ) result ) [ - 1 ] = pad		3099784	0		=			
ANR	3099842	ArrayIndexing	( ( int * ) result ) [ - 1 ]		3099784	0					
ANR	3099843	CastExpression	( int * ) result		3099784	0					
ANR	3099844	CastTarget	int *		3099784	0					
ANR	3099845	Identifier	result		3099784	1					
ANR	3099846	UnaryOperationExpression	- 1		3099784	1					
ANR	3099847	UnaryOperator	-		3099784	0					
ANR	3099848	PrimaryExpression	1		3099784	1					
ANR	3099849	Identifier	pad		3099784	1					
ANR	3099850	ReturnStatement	return result ;	162:2:3229:3242	3099784	7	True				
ANR	3099851	Identifier	result		3099784	0					
ANR	3099852	ReturnType	void *		3099784	1					
ANR	3099853	Identifier	eb_malloc_aligned		3099784	2					
ANR	3099854	ParameterList	"int size , int align"		3099784	3					
ANR	3099855	Parameter	int size	151:18:2981:2988	3099784	0	True				
ANR	3099856	ParameterType	int		3099784	0					
ANR	3099857	Identifier	size		3099784	1					
ANR	3099858	Parameter	int align	151:28:2991:2999	3099784	1	True				
ANR	3099859	ParameterType	int		3099784	0					
ANR	3099860	Identifier	align		3099784	1					
ANR	3099861	CFGEntryNode	ENTRY		3099784		True				
ANR	3099862	CFGExitNode	EXIT		3099784		True				
ANR	3099863	Symbol	result		3099784						
ANR	3099864	Symbol	malloc		3099784						
ANR	3099865	Symbol	pad		3099784						
ANR	3099866	Symbol	size		3099784						
ANR	3099867	Symbol	* result		3099784						
ANR	3099868	Symbol	alloced		3099784						
ANR	3099869	Symbol	align		3099784						
ANR	3099870	Function	eb_free_aligned	165:0:3247:3331							
ANR	3099871	FunctionDef	eb_free_aligned (void * p)		3099870	0					
ANR	3099872	CompoundStatement		167:0:3277:3331	3099870	0					
ANR	3099873	IdentifierDeclStatement	int pad = ( ( int * ) p ) [ - 1 ] ;	168:2:3281:3305	3099870	0	True				
ANR	3099874	IdentifierDecl	pad = ( ( int * ) p ) [ - 1 ]		3099870	0					
ANR	3099875	IdentifierDeclType	int		3099870	0					
ANR	3099876	Identifier	pad		3099870	1					
ANR	3099877	AssignmentExpression	pad = ( ( int * ) p ) [ - 1 ]		3099870	2		=			
ANR	3099878	Identifier	pad		3099870	0					
ANR	3099879	ArrayIndexing	( ( int * ) p ) [ - 1 ]		3099870	1					
ANR	3099880	CastExpression	( int * ) p		3099870	0					
ANR	3099881	CastTarget	int *		3099870	0					
ANR	3099882	Identifier	p		3099870	1					
ANR	3099883	UnaryOperationExpression	- 1		3099870	1					
ANR	3099884	UnaryOperator	-		3099870	0					
ANR	3099885	PrimaryExpression	1		3099870	1					
ANR	3099886	ExpressionStatement	free ( ( char * ) p - pad )	169:2:3309:3329	3099870	1	True				
ANR	3099887	CallExpression	free ( ( char * ) p - pad )		3099870	0					
ANR	3099888	Callee	free		3099870	0					
ANR	3099889	Identifier	free		3099870	0					
ANR	3099890	ArgumentList	( char * ) p - pad		3099870	1					
ANR	3099891	Argument	( char * ) p - pad		3099870	0					
ANR	3099892	AdditiveExpression	( char * ) p - pad		3099870	0		-			
ANR	3099893	CastExpression	( char * ) p		3099870	0					
ANR	3099894	CastTarget	char *		3099870	0					
ANR	3099895	Identifier	p		3099870	1					
ANR	3099896	Identifier	pad		3099870	1					
ANR	3099897	ReturnType	void		3099870	1					
ANR	3099898	Identifier	eb_free_aligned		3099870	2					
ANR	3099899	ParameterList	void * p		3099870	3					
ANR	3099900	Parameter	void * p	166:16:3268:3274	3099870	0	True				
ANR	3099901	ParameterType	void *		3099870	0					
ANR	3099902	Identifier	p		3099870	1					
ANR	3099903	CFGEntryNode	ENTRY		3099870		True				
ANR	3099904	CFGExitNode	EXIT		3099870		True				
ANR	3099905	Symbol	p		3099870						
ANR	3099906	Symbol	pad		3099870						
ANR	3099907	Symbol	* p		3099870						
ANR	3099908	Function	eb_compute_rbscale	172:0:3334:3610							
ANR	3099909	FunctionDef	eb_compute_rbscale (const EvenBetterParams * params)		3099908	0					
ANR	3099910	CompoundStatement		174:0:3399:3610	3099908	0					
ANR	3099911	IdentifierDeclStatement	double rbscale = params -> rbscale ;	175:2:3403:3435	3099908	0	True				
ANR	3099912	IdentifierDecl	rbscale = params -> rbscale		3099908	0					
ANR	3099913	IdentifierDeclType	double		3099908	0					
ANR	3099914	Identifier	rbscale		3099908	1					
ANR	3099915	AssignmentExpression	rbscale = params -> rbscale		3099908	2		=			
ANR	3099916	Identifier	rbscale		3099908	0					
ANR	3099917	PtrMemberAccess	params -> rbscale		3099908	1					
ANR	3099918	Identifier	params		3099908	0					
ANR	3099919	Identifier	rbscale		3099908	1					
ANR	3099920	IfStatement	if ( rbscale == 0.0 )		3099908	1					
ANR	3099921	Condition	rbscale == 0.0	177:6:3444:3457	3099908	0	True				
ANR	3099922	EqualityExpression	rbscale == 0.0		3099908	0		==			
ANR	3099923	Identifier	rbscale		3099908	0					
ANR	3099924	PrimaryExpression	0.0		3099908	1					
ANR	3099925	CompoundStatement		5:4:64:64	3099908	1					
ANR	3099926	ExpressionStatement	rbscale = params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1	179:6:3472:3584	3099908	0	True				
ANR	3099927	AssignmentExpression	rbscale = params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		3099908	0		=			
ANR	3099928	Identifier	rbscale		3099908	0					
ANR	3099929	ConditionalExpression	params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		3099908	1					
ANR	3099930	Condition	params -> aspect == 1		3099908	0					
ANR	3099931	EqualityExpression	params -> aspect == 1		3099908	0		==			
ANR	3099932	PtrMemberAccess	params -> aspect		3099908	0					
ANR	3099933	Identifier	params		3099908	0					
ANR	3099934	Identifier	aspect		3099908	1					
ANR	3099935	PrimaryExpression	1		3099908	1					
ANR	3099936	PrimaryExpression	0.95		3099908	1					
ANR	3099937	ConditionalExpression	params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		3099908	2					
ANR	3099938	Condition	params -> aspect == 2		3099908	0					
ANR	3099939	EqualityExpression	params -> aspect == 2		3099908	0		==			
ANR	3099940	PtrMemberAccess	params -> aspect		3099908	0					
ANR	3099941	Identifier	params		3099908	0					
ANR	3099942	Identifier	aspect		3099908	1					
ANR	3099943	PrimaryExpression	2		3099908	1					
ANR	3099944	PrimaryExpression	1.8		3099908	1					
ANR	3099945	ConditionalExpression	params -> aspect == 4 ? 3.6 : 1		3099908	2					
ANR	3099946	Condition	params -> aspect == 4		3099908	0					
ANR	3099947	EqualityExpression	params -> aspect == 4		3099908	0		==			
ANR	3099948	PtrMemberAccess	params -> aspect		3099908	0					
ANR	3099949	Identifier	params		3099908	0					
ANR	3099950	Identifier	aspect		3099908	1					
ANR	3099951	PrimaryExpression	4		3099908	1					
ANR	3099952	PrimaryExpression	3.6		3099908	1					
ANR	3099953	PrimaryExpression	1		3099908	2					
ANR	3099954	ReturnStatement	return rbscale ;	183:2:3594:3608	3099908	2	True				
ANR	3099955	Identifier	rbscale		3099908	0					
ANR	3099956	ReturnType	static double		3099908	1					
ANR	3099957	Identifier	eb_compute_rbscale		3099908	2					
ANR	3099958	ParameterList	const EvenBetterParams * params		3099908	3					
ANR	3099959	Parameter	const EvenBetterParams * params	173:19:3367:3396	3099908	0	True				
ANR	3099960	ParameterType	const EvenBetterParams *		3099908	0					
ANR	3099961	Identifier	params		3099908	1					
ANR	3099962	CFGEntryNode	ENTRY		3099908		True				
ANR	3099963	CFGExitNode	EXIT		3099908		True				
ANR	3099964	Symbol	params		3099908						
ANR	3099965	Symbol	params -> rbscale		3099908						
ANR	3099966	Symbol	rbscale		3099908						
ANR	3099967	Symbol	* params		3099908						
ANR	3099968	Symbol	params -> aspect		3099908						
ANR	3099969	Function	eb_compute_randshift	186:0:3613:4931							
ANR	3099970	FunctionDef	"eb_compute_randshift (int nl , int rs_base , int do_shadows , int levels)"		3099969	0					
ANR	3099971	CompoundStatement		188:0:3694:4931	3099969	0					
ANR	3099972	IdentifierDeclStatement	int rs = rs_base ;	189:2:3698:3714	3099969	0	True				
ANR	3099973	IdentifierDecl	rs = rs_base		3099969	0					
ANR	3099974	IdentifierDeclType	int		3099969	0					
ANR	3099975	Identifier	rs		3099969	1					
ANR	3099976	AssignmentExpression	rs = rs_base		3099969	2		=			
ANR	3099977	Identifier	rs_base		3099969	0					
ANR	3099978	Identifier	rs_base		3099969	1					
ANR	3099979	IfStatement	if ( ( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) ) )		3099969	1					
ANR	3099980	Condition	( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) )	190:6:3722:3880	3099969	0	True				
ANR	3099981	OrExpression	( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) )		3099969	0		||			
ANR	3099982	AndExpression	nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) )		3099969	0		&&			
ANR	3099983	RelationalExpression	nl > ( 90 << ( EVEN_SHIFT - 10 ) )		3099969	0		>			
ANR	3099984	Identifier	nl		3099969	0					
ANR	3099985	ShiftExpression	90 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3099986	PrimaryExpression	90		3099969	0					
ANR	3099987	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3099988	Identifier	EVEN_SHIFT		3099969	0					
ANR	3099989	PrimaryExpression	10		3099969	1					
ANR	3099990	RelationalExpression	nl < ( 129 << ( EVEN_SHIFT - 10 ) )		3099969	1		<			
ANR	3099991	Identifier	nl		3099969	0					
ANR	3099992	ShiftExpression	129 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3099993	PrimaryExpression	129		3099969	0					
ANR	3099994	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3099995	Identifier	EVEN_SHIFT		3099969	0					
ANR	3099996	PrimaryExpression	10		3099969	1					
ANR	3099997	AndExpression	nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) )		3099969	1		&&			
ANR	3099998	RelationalExpression	nl > ( 162 << ( EVEN_SHIFT - 10 ) )		3099969	0		>			
ANR	3099999	Identifier	nl		3099969	0					
ANR	3100000	ShiftExpression	162 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100001	PrimaryExpression	162		3099969	0					
ANR	3100002	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100003	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100004	PrimaryExpression	10		3099969	1					
ANR	3100005	RelationalExpression	nl < ( 180 << ( EVEN_SHIFT - 10 ) )		3099969	1		<			
ANR	3100006	Identifier	nl		3099969	0					
ANR	3100007	ShiftExpression	180 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100008	PrimaryExpression	180		3099969	0					
ANR	3100009	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100010	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100011	PrimaryExpression	10		3099969	1					
ANR	3100012	ExpressionStatement	rs --	194:4:3887:3891	3099969	1	True				
ANR	3100013	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100014	Identifier	rs		3099969	0					
ANR	3100015	IncDec	--		3099969	1					
ANR	3100016	ElseStatement	else		3099969	0					
ANR	3100017	IfStatement	if ( nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) ) )		3099969	0					
ANR	3100018	Condition	nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) )	195:11:3904:3980	3099969	0	True				
ANR	3100019	AndExpression	nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) )		3099969	0		&&			
ANR	3100020	RelationalExpression	nl > ( 321 << ( EVEN_SHIFT - 10 ) )		3099969	0		>			
ANR	3100021	Identifier	nl		3099969	0					
ANR	3100022	ShiftExpression	321 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100023	PrimaryExpression	321		3099969	0					
ANR	3100024	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100025	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100026	PrimaryExpression	10		3099969	1					
ANR	3100027	RelationalExpression	nl < ( 361 << ( EVEN_SHIFT - 10 ) )		3099969	1		<			
ANR	3100028	Identifier	nl		3099969	0					
ANR	3100029	ShiftExpression	361 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100030	PrimaryExpression	361		3099969	0					
ANR	3100031	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100032	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100033	PrimaryExpression	10		3099969	1					
ANR	3100034	CompoundStatement		10:4:292:292	3099969	1					
ANR	3100035	ExpressionStatement	rs --	198:6:3995:3999	3099969	0	True				
ANR	3100036	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100037	Identifier	rs		3099969	0					
ANR	3100038	IncDec	--		3099969	1					
ANR	3100039	IfStatement	if ( nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) ) )		3099969	1					
ANR	3100040	Condition	nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) )	199:10:4011:4086	3099969	0	True				
ANR	3100041	AndExpression	nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) )		3099969	0		&&			
ANR	3100042	RelationalExpression	nl > ( 331 << ( EVEN_SHIFT - 10 ) )		3099969	0		>			
ANR	3100043	Identifier	nl		3099969	0					
ANR	3100044	ShiftExpression	331 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100045	PrimaryExpression	331		3099969	0					
ANR	3100046	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100047	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100048	PrimaryExpression	10		3099969	1					
ANR	3100049	RelationalExpression	nl < ( 351 << ( EVEN_SHIFT - 10 ) )		3099969	1		<			
ANR	3100050	Identifier	nl		3099969	0					
ANR	3100051	ShiftExpression	351 << ( EVEN_SHIFT - 10 )		3099969	1		<<			
ANR	3100052	PrimaryExpression	351		3099969	0					
ANR	3100053	AdditiveExpression	EVEN_SHIFT - 10		3099969	1		-			
ANR	3100054	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100055	PrimaryExpression	10		3099969	1					
ANR	3100056	ExpressionStatement	rs --	201:8:4097:4101	3099969	1	True				
ANR	3100057	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100058	Identifier	rs		3099969	0					
ANR	3100059	IncDec	--		3099969	1					
ANR	3100060	ElseStatement	else		3099969	0					
ANR	3100061	IfStatement	if ( ( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) ) )		3099969	0					
ANR	3100062	Condition	( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )	203:11:4120:4264	3099969	0	True				
ANR	3100063	AndExpression	( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		3099969	0		&&			
ANR	3100064	OrExpression	do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT		3099969	0		||			
ANR	3100065	Identifier	do_shadows		3099969	0					
ANR	3100066	EqualityExpression	nl == ( levels - 1 ) << EVEN_SHIFT		3099969	1		==			
ANR	3100067	Identifier	nl		3099969	0					
ANR	3100068	ShiftExpression	( levels - 1 ) << EVEN_SHIFT		3099969	1		<<			
ANR	3100069	AdditiveExpression	levels - 1		3099969	0		-			
ANR	3100070	Identifier	levels		3099969	0					
ANR	3100071	PrimaryExpression	1		3099969	1					
ANR	3100072	Identifier	EVEN_SHIFT		3099969	1					
ANR	3100073	RelationalExpression	nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		3099969	1		>			
ANR	3100074	Identifier	nl		3099969	0					
ANR	3100075	AdditiveExpression	( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		3099969	1		-			
ANR	3100076	ShiftExpression	( levels - 1 ) << EVEN_SHIFT		3099969	0		<<			
ANR	3100077	AdditiveExpression	levels - 1		3099969	0		-			
ANR	3100078	Identifier	levels		3099969	0					
ANR	3100079	PrimaryExpression	1		3099969	1					
ANR	3100080	Identifier	EVEN_SHIFT		3099969	1					
ANR	3100081	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		3099969	1		<<			
ANR	3100082	PrimaryExpression	1		3099969	0					
ANR	3100083	AdditiveExpression	EVEN_SHIFT - 2		3099969	1		-			
ANR	3100084	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100085	PrimaryExpression	2		3099969	1					
ANR	3100086	CompoundStatement		20:4:576:576	3099969	1					
ANR	3100087	ElseStatement	else		3099969	0					
ANR	3100088	IfStatement	if ( ( nl > ( 3 << ( EVEN_SHIFT - 2 ) ) ) )		3099969	0					
ANR	3100089	Condition	nl > ( 3 << ( EVEN_SHIFT - 2 ) )	210:11:4342:4371	3099969	0	True				
ANR	3100090	RelationalExpression	nl > ( 3 << ( EVEN_SHIFT - 2 ) )		3099969	0		>			
ANR	3100091	Identifier	nl		3099969	0					
ANR	3100092	ShiftExpression	3 << ( EVEN_SHIFT - 2 )		3099969	1		<<			
ANR	3100093	PrimaryExpression	3		3099969	0					
ANR	3100094	AdditiveExpression	EVEN_SHIFT - 2		3099969	1		-			
ANR	3100095	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100096	PrimaryExpression	2		3099969	1					
ANR	3100097	CompoundStatement		24:4:683:683	3099969	1					
ANR	3100098	ExpressionStatement	nl -= ( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )	212:6:4386:4449	3099969	0	True				
ANR	3100099	AssignmentExpression	nl -= ( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )		3099969	0		-=			
ANR	3100100	Identifier	nl		3099969	0					
ANR	3100101	BitAndExpression	( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )		3099969	1		&			
ANR	3100102	AdditiveExpression	nl + ( 1 << ( EVEN_SHIFT - 2 ) )		3099969	0		+			
ANR	3100103	Identifier	nl		3099969	0					
ANR	3100104	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		3099969	1		<<			
ANR	3100105	PrimaryExpression	1		3099969	0					
ANR	3100106	AdditiveExpression	EVEN_SHIFT - 2		3099969	1		-			
ANR	3100107	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100108	PrimaryExpression	2		3099969	1					
ANR	3100109	UnaryOperationExpression	- ( 1 << ( EVEN_SHIFT - 1 ) )		3099969	1					
ANR	3100110	UnaryOperator	-		3099969	0					
ANR	3100111	ShiftExpression	1 << ( EVEN_SHIFT - 1 )		3099969	1		<<			
ANR	3100112	PrimaryExpression	1		3099969	0					
ANR	3100113	AdditiveExpression	EVEN_SHIFT - 1		3099969	1		-			
ANR	3100114	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100115	PrimaryExpression	1		3099969	1					
ANR	3100116	IfStatement	if ( nl < 0 )		3099969	1					
ANR	3100117	Condition	nl < 0	213:10:4461:4466	3099969	0	True				
ANR	3100118	RelationalExpression	nl < 0		3099969	0		<			
ANR	3100119	Identifier	nl		3099969	0					
ANR	3100120	PrimaryExpression	0		3099969	1					
ANR	3100121	ExpressionStatement	nl = - nl	213:18:4469:4477	3099969	1	True				
ANR	3100122	AssignmentExpression	nl = - nl		3099969	0		=			
ANR	3100123	Identifier	nl		3099969	0					
ANR	3100124	UnaryOperationExpression	- nl		3099969	1					
ANR	3100125	UnaryOperator	-		3099969	0					
ANR	3100126	Identifier	nl		3099969	1					
ANR	3100127	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 4 ) ) )		3099969	2					
ANR	3100128	Condition	nl < ( 1 << ( EVEN_SHIFT - 4 ) )	214:10:4489:4516	3099969	0	True				
ANR	3100129	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 4 ) )		3099969	0		<			
ANR	3100130	Identifier	nl		3099969	0					
ANR	3100131	ShiftExpression	1 << ( EVEN_SHIFT - 4 )		3099969	1		<<			
ANR	3100132	PrimaryExpression	1		3099969	0					
ANR	3100133	AdditiveExpression	EVEN_SHIFT - 4		3099969	1		-			
ANR	3100134	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100135	PrimaryExpression	4		3099969	1					
ANR	3100136	ExpressionStatement	rs --	214:40:4519:4523	3099969	1	True				
ANR	3100137	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100138	Identifier	rs		3099969	0					
ANR	3100139	IncDec	--		3099969	1					
ANR	3100140	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 5 ) ) )		3099969	3					
ANR	3100141	Condition	nl < ( 1 << ( EVEN_SHIFT - 5 ) )	215:10:4535:4562	3099969	0	True				
ANR	3100142	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 5 ) )		3099969	0		<			
ANR	3100143	Identifier	nl		3099969	0					
ANR	3100144	ShiftExpression	1 << ( EVEN_SHIFT - 5 )		3099969	1		<<			
ANR	3100145	PrimaryExpression	1		3099969	0					
ANR	3100146	AdditiveExpression	EVEN_SHIFT - 5		3099969	1		-			
ANR	3100147	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100148	PrimaryExpression	5		3099969	1					
ANR	3100149	ExpressionStatement	rs --	215:40:4565:4569	3099969	1	True				
ANR	3100150	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100151	Identifier	rs		3099969	0					
ANR	3100152	IncDec	--		3099969	1					
ANR	3100153	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 6 ) ) )		3099969	4					
ANR	3100154	Condition	nl < ( 1 << ( EVEN_SHIFT - 6 ) )	216:10:4581:4608	3099969	0	True				
ANR	3100155	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 6 ) )		3099969	0		<			
ANR	3100156	Identifier	nl		3099969	0					
ANR	3100157	ShiftExpression	1 << ( EVEN_SHIFT - 6 )		3099969	1		<<			
ANR	3100158	PrimaryExpression	1		3099969	0					
ANR	3100159	AdditiveExpression	EVEN_SHIFT - 6		3099969	1		-			
ANR	3100160	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100161	PrimaryExpression	6		3099969	1					
ANR	3100162	ExpressionStatement	rs --	216:40:4611:4615	3099969	1	True				
ANR	3100163	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100164	Identifier	rs		3099969	0					
ANR	3100165	IncDec	--		3099969	1					
ANR	3100166	ElseStatement	else		3099969	0					
ANR	3100167	CompoundStatement		32:4:939:939	3099969	0					
ANR	3100168	IfStatement	if ( nl < ( 3 << ( EVEN_SHIFT - 3 ) ) )		3099969	0					
ANR	3100169	Condition	nl < ( 3 << ( EVEN_SHIFT - 3 ) )	220:10:4646:4673	3099969	0	True				
ANR	3100170	RelationalExpression	nl < ( 3 << ( EVEN_SHIFT - 3 ) )		3099969	0		<			
ANR	3100171	Identifier	nl		3099969	0					
ANR	3100172	ShiftExpression	3 << ( EVEN_SHIFT - 3 )		3099969	1		<<			
ANR	3100173	PrimaryExpression	3		3099969	0					
ANR	3100174	AdditiveExpression	EVEN_SHIFT - 3		3099969	1		-			
ANR	3100175	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100176	PrimaryExpression	3		3099969	1					
ANR	3100177	ExpressionStatement	nl += 1 << ( EVEN_SHIFT - 2 )	220:40:4676:4703	3099969	1	True				
ANR	3100178	AssignmentExpression	nl += 1 << ( EVEN_SHIFT - 2 )		3099969	0		+=			
ANR	3100179	Identifier	nl		3099969	0					
ANR	3100180	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		3099969	1		<<			
ANR	3100181	PrimaryExpression	1		3099969	0					
ANR	3100182	AdditiveExpression	EVEN_SHIFT - 2		3099969	1		-			
ANR	3100183	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100184	PrimaryExpression	2		3099969	1					
ANR	3100185	ExpressionStatement	nl = nl - ( 1 << ( EVEN_SHIFT - 1 ) )	221:6:4711:4744	3099969	1	True				
ANR	3100186	AssignmentExpression	nl = nl - ( 1 << ( EVEN_SHIFT - 1 ) )		3099969	0		=			
ANR	3100187	Identifier	nl		3099969	0					
ANR	3100188	AdditiveExpression	nl - ( 1 << ( EVEN_SHIFT - 1 ) )		3099969	1		-			
ANR	3100189	Identifier	nl		3099969	0					
ANR	3100190	ShiftExpression	1 << ( EVEN_SHIFT - 1 )		3099969	1		<<			
ANR	3100191	PrimaryExpression	1		3099969	0					
ANR	3100192	AdditiveExpression	EVEN_SHIFT - 1		3099969	1		-			
ANR	3100193	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100194	PrimaryExpression	1		3099969	1					
ANR	3100195	IfStatement	if ( nl < 0 )		3099969	2					
ANR	3100196	Condition	nl < 0	222:10:4756:4761	3099969	0	True				
ANR	3100197	RelationalExpression	nl < 0		3099969	0		<			
ANR	3100198	Identifier	nl		3099969	0					
ANR	3100199	PrimaryExpression	0		3099969	1					
ANR	3100200	ExpressionStatement	nl = - nl	222:18:4764:4772	3099969	1	True				
ANR	3100201	AssignmentExpression	nl = - nl		3099969	0		=			
ANR	3100202	Identifier	nl		3099969	0					
ANR	3100203	UnaryOperationExpression	- nl		3099969	1					
ANR	3100204	UnaryOperator	-		3099969	0					
ANR	3100205	Identifier	nl		3099969	1					
ANR	3100206	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 4 ) ) )		3099969	3					
ANR	3100207	Condition	nl < ( 1 << ( EVEN_SHIFT - 4 ) )	223:10:4784:4811	3099969	0	True				
ANR	3100208	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 4 ) )		3099969	0		<			
ANR	3100209	Identifier	nl		3099969	0					
ANR	3100210	ShiftExpression	1 << ( EVEN_SHIFT - 4 )		3099969	1		<<			
ANR	3100211	PrimaryExpression	1		3099969	0					
ANR	3100212	AdditiveExpression	EVEN_SHIFT - 4		3099969	1		-			
ANR	3100213	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100214	PrimaryExpression	4		3099969	1					
ANR	3100215	ExpressionStatement	rs --	223:40:4814:4818	3099969	1	True				
ANR	3100216	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100217	Identifier	rs		3099969	0					
ANR	3100218	IncDec	--		3099969	1					
ANR	3100219	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 5 ) ) )		3099969	4					
ANR	3100220	Condition	nl < ( 1 << ( EVEN_SHIFT - 5 ) )	224:10:4830:4857	3099969	0	True				
ANR	3100221	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 5 ) )		3099969	0		<			
ANR	3100222	Identifier	nl		3099969	0					
ANR	3100223	ShiftExpression	1 << ( EVEN_SHIFT - 5 )		3099969	1		<<			
ANR	3100224	PrimaryExpression	1		3099969	0					
ANR	3100225	AdditiveExpression	EVEN_SHIFT - 5		3099969	1		-			
ANR	3100226	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100227	PrimaryExpression	5		3099969	1					
ANR	3100228	ExpressionStatement	rs --	224:40:4860:4864	3099969	1	True				
ANR	3100229	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100230	Identifier	rs		3099969	0					
ANR	3100231	IncDec	--		3099969	1					
ANR	3100232	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 6 ) ) )		3099969	5					
ANR	3100233	Condition	nl < ( 1 << ( EVEN_SHIFT - 6 ) )	225:10:4876:4903	3099969	0	True				
ANR	3100234	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 6 ) )		3099969	0		<			
ANR	3100235	Identifier	nl		3099969	0					
ANR	3100236	ShiftExpression	1 << ( EVEN_SHIFT - 6 )		3099969	1		<<			
ANR	3100237	PrimaryExpression	1		3099969	0					
ANR	3100238	AdditiveExpression	EVEN_SHIFT - 6		3099969	1		-			
ANR	3100239	Identifier	EVEN_SHIFT		3099969	0					
ANR	3100240	PrimaryExpression	6		3099969	1					
ANR	3100241	ExpressionStatement	rs --	225:40:4906:4910	3099969	1	True				
ANR	3100242	PostIncDecOperationExpression	rs --		3099969	0					
ANR	3100243	Identifier	rs		3099969	0					
ANR	3100244	IncDec	--		3099969	1					
ANR	3100245	ReturnStatement	return rs ;	227:2:4920:4929	3099969	2	True				
ANR	3100246	Identifier	rs		3099969	0					
ANR	3100247	ReturnType	static int		3099969	1					
ANR	3100248	Identifier	eb_compute_randshift		3099969	2					
ANR	3100249	ParameterList	"int nl , int rs_base , int do_shadows , int levels"		3099969	3					
ANR	3100250	Parameter	int nl	187:21:3645:3650	3099969	0	True				
ANR	3100251	ParameterType	int		3099969	0					
ANR	3100252	Identifier	nl		3099969	1					
ANR	3100253	Parameter	int rs_base	187:29:3653:3663	3099969	1	True				
ANR	3100254	ParameterType	int		3099969	0					
ANR	3100255	Identifier	rs_base		3099969	1					
ANR	3100256	Parameter	int do_shadows	187:42:3666:3679	3099969	2	True				
ANR	3100257	ParameterType	int		3099969	0					
ANR	3100258	Identifier	do_shadows		3099969	1					
ANR	3100259	Parameter	int levels	187:58:3682:3691	3099969	3	True				
ANR	3100260	ParameterType	int		3099969	0					
ANR	3100261	Identifier	levels		3099969	1					
ANR	3100262	CFGEntryNode	ENTRY		3099969		True				
ANR	3100263	CFGExitNode	EXIT		3099969		True				
ANR	3100264	Symbol	rs		3099969						
ANR	3100265	Symbol	EVEN_SHIFT		3099969						
ANR	3100266	Symbol	rs_base		3099969						
ANR	3100267	Symbol	do_shadows		3099969						
ANR	3100268	Symbol	nl		3099969						
ANR	3100269	Symbol	levels		3099969						
ANR	3100270	Function	eb_ctx_sse2_new	231:0:4950:7365							
ANR	3100271	FunctionDef	"eb_ctx_sse2_new (const EvenBetterParams * params , int start_plane , int end_plane)"		3100270	0					
ANR	3100272	CompoundStatement		233:0:5051:7365	3100270	0					
ANR	3100273	IdentifierDeclStatement	int xs = params -> source_width ;	234:2:5055:5084	3100270	0	True				
ANR	3100274	IdentifierDecl	xs = params -> source_width		3100270	0					
ANR	3100275	IdentifierDeclType	int		3100270	0					
ANR	3100276	Identifier	xs		3100270	1					
ANR	3100277	AssignmentExpression	xs = params -> source_width		3100270	2		=			
ANR	3100278	Identifier	xs		3100270	0					
ANR	3100279	PtrMemberAccess	params -> source_width		3100270	1					
ANR	3100280	Identifier	params		3100270	0					
ANR	3100281	Identifier	source_width		3100270	1					
ANR	3100282	IdentifierDeclStatement	int aspect2 = params -> aspect * params -> aspect ;	235:2:5088:5133	3100270	1	True				
ANR	3100283	IdentifierDecl	aspect2 = params -> aspect * params -> aspect		3100270	0					
ANR	3100284	IdentifierDeclType	int		3100270	0					
ANR	3100285	Identifier	aspect2		3100270	1					
ANR	3100286	AssignmentExpression	aspect2 = params -> aspect * params -> aspect		3100270	2		=			
ANR	3100287	Identifier	aspect2		3100270	0					
ANR	3100288	MultiplicativeExpression	params -> aspect * params -> aspect		3100270	1		*			
ANR	3100289	PtrMemberAccess	params -> aspect		3100270	0					
ANR	3100290	Identifier	params		3100270	0					
ANR	3100291	Identifier	aspect		3100270	1					
ANR	3100292	PtrMemberAccess	params -> aspect		3100270	1					
ANR	3100293	Identifier	params		3100270	0					
ANR	3100294	Identifier	aspect		3100270	1					
ANR	3100295	IdentifierDeclStatement	eb_ctx_sse2 * ctx ;	236:2:5137:5153	3100270	2	True				
ANR	3100296	IdentifierDecl	* ctx		3100270	0					
ANR	3100297	IdentifierDeclType	eb_ctx_sse2 *		3100270	0					
ANR	3100298	Identifier	ctx		3100270	1					
ANR	3100299	IdentifierDeclStatement	int i ;	237:2:5157:5162	3100270	3	True				
ANR	3100300	IdentifierDecl	i		3100270	0					
ANR	3100301	IdentifierDeclType	int		3100270	0					
ANR	3100302	Identifier	i		3100270	1					
ANR	3100303	IdentifierDeclStatement	double im_scale ;	238:2:5166:5181	3100270	4	True				
ANR	3100304	IdentifierDecl	im_scale		3100270	0					
ANR	3100305	IdentifierDeclType	double		3100270	0					
ANR	3100306	Identifier	im_scale		3100270	1					
ANR	3100307	IdentifierDeclStatement	float r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) ) ;	239:2:5185:5258	3100270	5	True				
ANR	3100308	IdentifierDecl	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3100270	0					
ANR	3100309	IdentifierDeclType	float		3100270	0					
ANR	3100310	Identifier	r_mul		3100270	1					
ANR	3100311	AssignmentExpression	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3100270	2		=			
ANR	3100312	Identifier	r_mul		3100270	0					
ANR	3100313	MultiplicativeExpression	1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3100270	1		/			
ANR	3100314	PrimaryExpression	1.0		3100270	0					
ANR	3100315	MultiplicativeExpression	params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) )		3100270	1		*			
ANR	3100316	PtrMemberAccess	params -> aspect		3100270	0					
ANR	3100317	Identifier	params		3100270	0					
ANR	3100318	Identifier	aspect		3100270	1					
ANR	3100319	ShiftExpression	1 << ( 6 - params -> even_c1_scale )		3100270	1		<<			
ANR	3100320	PrimaryExpression	1		3100270	0					
ANR	3100321	AdditiveExpression	6 - params -> even_c1_scale		3100270	1		-			
ANR	3100322	PrimaryExpression	6		3100270	0					
ANR	3100323	PtrMemberAccess	params -> even_c1_scale		3100270	1					
ANR	3100324	Identifier	params		3100270	0					
ANR	3100325	Identifier	even_c1_scale		3100270	1					
ANR	3100326	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	240:2:5262:5305	3100270	6	True				
ANR	3100327	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		3100270	0					
ANR	3100328	IdentifierDeclType	double		3100270	0					
ANR	3100329	Identifier	rbscale		3100270	1					
ANR	3100330	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		3100270	2		=			
ANR	3100331	Identifier	rbscale		3100270	0					
ANR	3100332	CallExpression	eb_compute_rbscale ( params )		3100270	1					
ANR	3100333	Callee	eb_compute_rbscale		3100270	0					
ANR	3100334	Identifier	eb_compute_rbscale		3100270	0					
ANR	3100335	ArgumentList	params		3100270	1					
ANR	3100336	Argument	params		3100270	0					
ANR	3100337	Identifier	params		3100270	0					
ANR	3100338	IdentifierDeclStatement	int rs_base ;	241:2:5309:5320	3100270	7	True				
ANR	3100339	IdentifierDecl	rs_base		3100270	0					
ANR	3100340	IdentifierDeclType	int		3100270	0					
ANR	3100341	Identifier	rs_base		3100270	1					
ANR	3100342	ExpressionStatement	"ctx = ( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"	243:2:5325:5388	3100270	8	True				
ANR	3100343	AssignmentExpression	"ctx = ( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		3100270	0		=			
ANR	3100344	Identifier	ctx		3100270	0					
ANR	3100345	CastExpression	"( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		3100270	1					
ANR	3100346	CastTarget	eb_ctx_sse2 *		3100270	0					
ANR	3100347	CallExpression	"eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		3100270	1					
ANR	3100348	Callee	eb_malloc_aligned		3100270	0					
ANR	3100349	Identifier	eb_malloc_aligned		3100270	0					
ANR	3100350	ArgumentList	sizeof ( eb_ctx_sse2 )		3100270	1					
ANR	3100351	Argument	sizeof ( eb_ctx_sse2 )		3100270	0					
ANR	3100352	SizeofExpression	sizeof ( eb_ctx_sse2 )		3100270	0					
ANR	3100353	Sizeof	sizeof		3100270	0					
ANR	3100354	SizeofOperand	eb_ctx_sse2		3100270	1					
ANR	3100355	Argument	16		3100270	1					
ANR	3100356	PrimaryExpression	16		3100270	0					
ANR	3100357	ExpressionStatement	ctx -> xs = xs	244:2:5392:5404	3100270	9	True				
ANR	3100358	AssignmentExpression	ctx -> xs = xs		3100270	0		=			
ANR	3100359	PtrMemberAccess	ctx -> xs		3100270	0					
ANR	3100360	Identifier	ctx		3100270	0					
ANR	3100361	Identifier	xs		3100270	1					
ANR	3100362	Identifier	xs		3100270	1					
ANR	3100363	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3100270	10					
ANR	3100364	ForInit	i = 0 ;	245:7:5413:5418	3100270	0	True				
ANR	3100365	AssignmentExpression	i = 0		3100270	0		=			
ANR	3100366	Identifier	i		3100270	0					
ANR	3100367	PrimaryExpression	0		3100270	1					
ANR	3100368	Condition	i < 4	245:14:5420:5424	3100270	1	True				
ANR	3100369	RelationalExpression	i < 4		3100270	0		<			
ANR	3100370	Identifier	i		3100270	0					
ANR	3100371	PrimaryExpression	4		3100270	1					
ANR	3100372	PostIncDecOperationExpression	i ++	245:21:5427:5429	3100270	2	True				
ANR	3100373	Identifier	i		3100270	0					
ANR	3100374	IncDec	++		3100270	1					
ANR	3100375	CompoundStatement		14:4:384:384	3100270	3					
ANR	3100376	ExpressionStatement	ctx -> e [ i ] = 0.0	247:6:5444:5459	3100270	0	True				
ANR	3100377	AssignmentExpression	ctx -> e [ i ] = 0.0		3100270	0		=			
ANR	3100378	ArrayIndexing	ctx -> e [ i ]		3100270	0					
ANR	3100379	PtrMemberAccess	ctx -> e		3100270	0					
ANR	3100380	Identifier	ctx		3100270	0					
ANR	3100381	Identifier	e		3100270	1					
ANR	3100382	Identifier	i		3100270	1					
ANR	3100383	PrimaryExpression	0.0		3100270	1					
ANR	3100384	ExpressionStatement	ctx -> e_i_1 [ i ] = 0.0	248:6:5467:5486	3100270	1	True				
ANR	3100385	AssignmentExpression	ctx -> e_i_1 [ i ] = 0.0		3100270	0		=			
ANR	3100386	ArrayIndexing	ctx -> e_i_1 [ i ]		3100270	0					
ANR	3100387	PtrMemberAccess	ctx -> e_i_1		3100270	0					
ANR	3100388	Identifier	ctx		3100270	0					
ANR	3100389	Identifier	e_i_1		3100270	1					
ANR	3100390	Identifier	i		3100270	1					
ANR	3100391	PrimaryExpression	0.0		3100270	1					
ANR	3100392	ExpressionStatement	ctx -> r [ i ] = 0	249:6:5494:5507	3100270	2	True				
ANR	3100393	AssignmentExpression	ctx -> r [ i ] = 0		3100270	0		=			
ANR	3100394	ArrayIndexing	ctx -> r [ i ]		3100270	0					
ANR	3100395	PtrMemberAccess	ctx -> r		3100270	0					
ANR	3100396	Identifier	ctx		3100270	0					
ANR	3100397	Identifier	r		3100270	1					
ANR	3100398	Identifier	i		3100270	1					
ANR	3100399	PrimaryExpression	0		3100270	1					
ANR	3100400	ExpressionStatement	ctx -> a [ i ] = 1	250:6:5515:5528	3100270	3	True				
ANR	3100401	AssignmentExpression	ctx -> a [ i ] = 1		3100270	0		=			
ANR	3100402	ArrayIndexing	ctx -> a [ i ]		3100270	0					
ANR	3100403	PtrMemberAccess	ctx -> a		3100270	0					
ANR	3100404	Identifier	ctx		3100270	0					
ANR	3100405	Identifier	a		3100270	1					
ANR	3100406	Identifier	i		3100270	1					
ANR	3100407	PrimaryExpression	1		3100270	1					
ANR	3100408	ExpressionStatement	ctx -> b [ i ] = aspect2	251:6:5536:5555	3100270	4	True				
ANR	3100409	AssignmentExpression	ctx -> b [ i ] = aspect2		3100270	0		=			
ANR	3100410	ArrayIndexing	ctx -> b [ i ]		3100270	0					
ANR	3100411	PtrMemberAccess	ctx -> b		3100270	0					
ANR	3100412	Identifier	ctx		3100270	0					
ANR	3100413	Identifier	b		3100270	1					
ANR	3100414	Identifier	i		3100270	1					
ANR	3100415	Identifier	aspect2		3100270	1					
ANR	3100416	ExpressionStatement	ctx -> ones [ i ] = 1	252:6:5563:5579	3100270	5	True				
ANR	3100417	AssignmentExpression	ctx -> ones [ i ] = 1		3100270	0		=			
ANR	3100418	ArrayIndexing	ctx -> ones [ i ]		3100270	0					
ANR	3100419	PtrMemberAccess	ctx -> ones		3100270	0					
ANR	3100420	Identifier	ctx		3100270	0					
ANR	3100421	Identifier	ones		3100270	1					
ANR	3100422	Identifier	i		3100270	1					
ANR	3100423	PrimaryExpression	1		3100270	1					
ANR	3100424	ExpressionStatement	ctx -> twos [ i ] = 2	253:6:5587:5603	3100270	6	True				
ANR	3100425	AssignmentExpression	ctx -> twos [ i ] = 2		3100270	0		=			
ANR	3100426	ArrayIndexing	ctx -> twos [ i ]		3100270	0					
ANR	3100427	PtrMemberAccess	ctx -> twos		3100270	0					
ANR	3100428	Identifier	ctx		3100270	0					
ANR	3100429	Identifier	twos		3100270	1					
ANR	3100430	Identifier	i		3100270	1					
ANR	3100431	PrimaryExpression	2		3100270	1					
ANR	3100432	ExpressionStatement	ctx -> aspect2 [ i ] = aspect2	254:6:5611:5636	3100270	7	True				
ANR	3100433	AssignmentExpression	ctx -> aspect2 [ i ] = aspect2		3100270	0		=			
ANR	3100434	ArrayIndexing	ctx -> aspect2 [ i ]		3100270	0					
ANR	3100435	PtrMemberAccess	ctx -> aspect2		3100270	0					
ANR	3100436	Identifier	ctx		3100270	0					
ANR	3100437	Identifier	aspect2		3100270	1					
ANR	3100438	Identifier	i		3100270	1					
ANR	3100439	Identifier	aspect2		3100270	1					
ANR	3100440	ExpressionStatement	ctx -> ohi [ i ] = params -> levels - 1	255:6:5644:5676	3100270	8	True				
ANR	3100441	AssignmentExpression	ctx -> ohi [ i ] = params -> levels - 1		3100270	0		=			
ANR	3100442	ArrayIndexing	ctx -> ohi [ i ]		3100270	0					
ANR	3100443	PtrMemberAccess	ctx -> ohi		3100270	0					
ANR	3100444	Identifier	ctx		3100270	0					
ANR	3100445	Identifier	ohi		3100270	1					
ANR	3100446	Identifier	i		3100270	1					
ANR	3100447	AdditiveExpression	params -> levels - 1		3100270	1		-			
ANR	3100448	PtrMemberAccess	params -> levels		3100270	0					
ANR	3100449	Identifier	params		3100270	0					
ANR	3100450	Identifier	levels		3100270	1					
ANR	3100451	PrimaryExpression	1		3100270	1					
ANR	3100452	ExpressionStatement	ctx -> ehi [ i ] = 1.1	256:6:5684:5701	3100270	9	True				
ANR	3100453	AssignmentExpression	ctx -> ehi [ i ] = 1.1		3100270	0		=			
ANR	3100454	ArrayIndexing	ctx -> ehi [ i ]		3100270	0					
ANR	3100455	PtrMemberAccess	ctx -> ehi		3100270	0					
ANR	3100456	Identifier	ctx		3100270	0					
ANR	3100457	Identifier	ehi		3100270	1					
ANR	3100458	Identifier	i		3100270	1					
ANR	3100459	PrimaryExpression	1.1		3100270	1					
ANR	3100460	ExpressionStatement	ctx -> elo [ i ] = - 0.1	257:6:5709:5727	3100270	10	True				
ANR	3100461	AssignmentExpression	ctx -> elo [ i ] = - 0.1		3100270	0		=			
ANR	3100462	ArrayIndexing	ctx -> elo [ i ]		3100270	0					
ANR	3100463	PtrMemberAccess	ctx -> elo		3100270	0					
ANR	3100464	Identifier	ctx		3100270	0					
ANR	3100465	Identifier	elo		3100270	1					
ANR	3100466	Identifier	i		3100270	1					
ANR	3100467	UnaryOperationExpression	- 0.1		3100270	1					
ANR	3100468	UnaryOperator	-		3100270	0					
ANR	3100469	PrimaryExpression	0.1		3100270	1					
ANR	3100470	ExpressionStatement	ctx -> r_mul [ i ] = r_mul	258:6:5735:5756	3100270	11	True				
ANR	3100471	AssignmentExpression	ctx -> r_mul [ i ] = r_mul		3100270	0		=			
ANR	3100472	ArrayIndexing	ctx -> r_mul [ i ]		3100270	0					
ANR	3100473	PtrMemberAccess	ctx -> r_mul		3100270	0					
ANR	3100474	Identifier	ctx		3100270	0					
ANR	3100475	Identifier	r_mul		3100270	1					
ANR	3100476	Identifier	i		3100270	1					
ANR	3100477	Identifier	r_mul		3100270	1					
ANR	3100478	ExpressionStatement	ctx -> seed1 [ i ] = ( i << 8 ) + 0x7000	259:6:5764:5797	3100270	12	True				
ANR	3100479	AssignmentExpression	ctx -> seed1 [ i ] = ( i << 8 ) + 0x7000		3100270	0		=			
ANR	3100480	ArrayIndexing	ctx -> seed1 [ i ]		3100270	0					
ANR	3100481	PtrMemberAccess	ctx -> seed1		3100270	0					
ANR	3100482	Identifier	ctx		3100270	0					
ANR	3100483	Identifier	seed1		3100270	1					
ANR	3100484	Identifier	i		3100270	1					
ANR	3100485	AdditiveExpression	( i << 8 ) + 0x7000		3100270	1		+			
ANR	3100486	ShiftExpression	i << 8		3100270	0		<<			
ANR	3100487	Identifier	i		3100270	0					
ANR	3100488	PrimaryExpression	8		3100270	1					
ANR	3100489	PrimaryExpression	0x7000		3100270	1					
ANR	3100490	ExpressionStatement	ctx -> seed2 [ i ] = ( i << 16 ) + 0x9000	260:6:5805:5839	3100270	13	True				
ANR	3100491	AssignmentExpression	ctx -> seed2 [ i ] = ( i << 16 ) + 0x9000		3100270	0		=			
ANR	3100492	ArrayIndexing	ctx -> seed2 [ i ]		3100270	0					
ANR	3100493	PtrMemberAccess	ctx -> seed2		3100270	0					
ANR	3100494	Identifier	ctx		3100270	0					
ANR	3100495	Identifier	seed2		3100270	1					
ANR	3100496	Identifier	i		3100270	1					
ANR	3100497	AdditiveExpression	( i << 16 ) + 0x9000		3100270	1		+			
ANR	3100498	ShiftExpression	i << 16		3100270	0		<<			
ANR	3100499	Identifier	i		3100270	0					
ANR	3100500	PrimaryExpression	16		3100270	1					
ANR	3100501	PrimaryExpression	0x9000		3100270	1					
ANR	3100502	ExpressionStatement	ctx -> kernel [ 0 ] = 1.0 / 16	262:2:5849:5874	3100270	11	True				
ANR	3100503	AssignmentExpression	ctx -> kernel [ 0 ] = 1.0 / 16		3100270	0		=			
ANR	3100504	ArrayIndexing	ctx -> kernel [ 0 ]		3100270	0					
ANR	3100505	PtrMemberAccess	ctx -> kernel		3100270	0					
ANR	3100506	Identifier	ctx		3100270	0					
ANR	3100507	Identifier	kernel		3100270	1					
ANR	3100508	PrimaryExpression	0		3100270	1					
ANR	3100509	MultiplicativeExpression	1.0 / 16		3100270	1		/			
ANR	3100510	PrimaryExpression	1.0		3100270	0					
ANR	3100511	PrimaryExpression	16		3100270	1					
ANR	3100512	ExpressionStatement	ctx -> kernel [ 1 ] = 3.0 / 16	263:2:5878:5903	3100270	12	True				
ANR	3100513	AssignmentExpression	ctx -> kernel [ 1 ] = 3.0 / 16		3100270	0		=			
ANR	3100514	ArrayIndexing	ctx -> kernel [ 1 ]		3100270	0					
ANR	3100515	PtrMemberAccess	ctx -> kernel		3100270	0					
ANR	3100516	Identifier	ctx		3100270	0					
ANR	3100517	Identifier	kernel		3100270	1					
ANR	3100518	PrimaryExpression	1		3100270	1					
ANR	3100519	MultiplicativeExpression	3.0 / 16		3100270	1		/			
ANR	3100520	PrimaryExpression	3.0		3100270	0					
ANR	3100521	PrimaryExpression	16		3100270	1					
ANR	3100522	ExpressionStatement	ctx -> kernel [ 2 ] = 5.0 / 16	264:2:5907:5932	3100270	13	True				
ANR	3100523	AssignmentExpression	ctx -> kernel [ 2 ] = 5.0 / 16		3100270	0		=			
ANR	3100524	ArrayIndexing	ctx -> kernel [ 2 ]		3100270	0					
ANR	3100525	PtrMemberAccess	ctx -> kernel		3100270	0					
ANR	3100526	Identifier	ctx		3100270	0					
ANR	3100527	Identifier	kernel		3100270	1					
ANR	3100528	PrimaryExpression	2		3100270	1					
ANR	3100529	MultiplicativeExpression	5.0 / 16		3100270	1		/			
ANR	3100530	PrimaryExpression	5.0		3100270	0					
ANR	3100531	PrimaryExpression	16		3100270	1					
ANR	3100532	ExpressionStatement	ctx -> kernel [ 3 ] = 7.0 / 16	265:2:5936:5961	3100270	14	True				
ANR	3100533	AssignmentExpression	ctx -> kernel [ 3 ] = 7.0 / 16		3100270	0		=			
ANR	3100534	ArrayIndexing	ctx -> kernel [ 3 ]		3100270	0					
ANR	3100535	PtrMemberAccess	ctx -> kernel		3100270	0					
ANR	3100536	Identifier	ctx		3100270	0					
ANR	3100537	Identifier	kernel		3100270	1					
ANR	3100538	PrimaryExpression	3		3100270	1					
ANR	3100539	MultiplicativeExpression	7.0 / 16		3100270	1		/			
ANR	3100540	PrimaryExpression	7.0		3100270	0					
ANR	3100541	PrimaryExpression	16		3100270	1					
ANR	3100542	ExpressionStatement	im_scale = ( params -> levels - 1 ) * 1.0 / ( 1 << 24 )	267:2:5966:6015	3100270	15	True				
ANR	3100543	AssignmentExpression	im_scale = ( params -> levels - 1 ) * 1.0 / ( 1 << 24 )		3100270	0		=			
ANR	3100544	Identifier	im_scale		3100270	0					
ANR	3100545	MultiplicativeExpression	( params -> levels - 1 ) * 1.0 / ( 1 << 24 )		3100270	1		*			
ANR	3100546	AdditiveExpression	params -> levels - 1		3100270	0		-			
ANR	3100547	PtrMemberAccess	params -> levels		3100270	0					
ANR	3100548	Identifier	params		3100270	0					
ANR	3100549	Identifier	levels		3100270	1					
ANR	3100550	PrimaryExpression	1		3100270	1					
ANR	3100551	MultiplicativeExpression	1.0 / ( 1 << 24 )		3100270	1		/			
ANR	3100552	PrimaryExpression	1.0		3100270	0					
ANR	3100553	ShiftExpression	1 << 24		3100270	1		<<			
ANR	3100554	PrimaryExpression	1		3100270	0					
ANR	3100555	PrimaryExpression	24		3100270	1					
ANR	3100556	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	268:2:6019:6065	3100270	16	True				
ANR	3100557	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		3100270	0		=			
ANR	3100558	Identifier	rs_base		3100270	0					
ANR	3100559	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		3100270	1		-			
ANR	3100560	PrimaryExpression	35		3100270	0					
ANR	3100561	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		3100270	1		-			
ANR	3100562	Identifier	EVEN_SHIFT		3100270	0					
ANR	3100563	PtrMemberAccess	params -> rand_scale		3100270	1					
ANR	3100564	Identifier	params		3100270	0					
ANR	3100565	Identifier	rand_scale		3100270	1					
ANR	3100566	ForStatement	for ( i = start_plane ; i < end_plane ; i ++ )		3100270	17					
ANR	3100567	ForInit	i = start_plane ;	270:7:6075:6090	3100270	0	True				
ANR	3100568	AssignmentExpression	i = start_plane		3100270	0		=			
ANR	3100569	Identifier	i		3100270	0					
ANR	3100570	Identifier	start_plane		3100270	1					
ANR	3100571	Condition	i < end_plane	270:24:6092:6104	3100270	1	True				
ANR	3100572	RelationalExpression	i < end_plane		3100270	0		<			
ANR	3100573	Identifier	i		3100270	0					
ANR	3100574	Identifier	end_plane		3100270	1					
ANR	3100575	PostIncDecOperationExpression	i ++	270:39:6107:6109	3100270	2	True				
ANR	3100576	Identifier	i		3100270	0					
ANR	3100577	IncDec	++		3100270	1					
ANR	3100578	CompoundStatement		41:6:1146:1151	3100270	3					
ANR	3100579	IdentifierDeclStatement	float * lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 ) ;	272:6:6124:6190	3100270	0	True				
ANR	3100580	IdentifierDecl	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3100270	0					
ANR	3100581	IdentifierDeclType	float *		3100270	0					
ANR	3100582	Identifier	lut		3100270	1					
ANR	3100583	AssignmentExpression	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3100270	2		=			
ANR	3100584	Identifier	lut		3100270	0					
ANR	3100585	CastExpression	( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3100270	1					
ANR	3100586	CastTarget	float *		3100270	0					
ANR	3100587	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3100270	1					
ANR	3100588	Callee	malloc		3100270	0					
ANR	3100589	Identifier	malloc		3100270	0					
ANR	3100590	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3100270	1					
ANR	3100591	Argument	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3100270	0					
ANR	3100592	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3100270	0		*			
ANR	3100593	AdditiveExpression	ET_SRC_MAX + 1		3100270	0		+			
ANR	3100594	Identifier	ET_SRC_MAX		3100270	0					
ANR	3100595	PrimaryExpression	1		3100270	1					
ANR	3100596	MultiplicativeExpression	sizeof ( float ) * 3		3100270	1		*			
ANR	3100597	SizeofExpression	sizeof ( float )		3100270	0					
ANR	3100598	Sizeof	sizeof		3100270	0					
ANR	3100599	SizeofOperand	float		3100270	1					
ANR	3100600	PrimaryExpression	3		3100270	1					
ANR	3100601	IdentifierDeclStatement	int j ;	273:6:6198:6203	3100270	1	True				
ANR	3100602	IdentifierDecl	j		3100270	0					
ANR	3100603	IdentifierDeclType	int		3100270	0					
ANR	3100604	Identifier	j		3100270	1					
ANR	3100605	ExpressionStatement	ctx -> luts [ i - start_plane ] = lut	274:6:6211:6243	3100270	2	True				
ANR	3100606	AssignmentExpression	ctx -> luts [ i - start_plane ] = lut		3100270	0		=			
ANR	3100607	ArrayIndexing	ctx -> luts [ i - start_plane ]		3100270	0					
ANR	3100608	PtrMemberAccess	ctx -> luts		3100270	0					
ANR	3100609	Identifier	ctx		3100270	0					
ANR	3100610	Identifier	luts		3100270	1					
ANR	3100611	AdditiveExpression	i - start_plane		3100270	1		-			
ANR	3100612	Identifier	i		3100270	0					
ANR	3100613	Identifier	start_plane		3100270	1					
ANR	3100614	Identifier	lut		3100270	1					
ANR	3100615	ForStatement	for ( j = 0 ; j < ET_SRC_MAX + 1 ; j ++ )		3100270	3					
ANR	3100616	ForInit	j = 0 ;	276:11:6257:6262	3100270	0	True				
ANR	3100617	AssignmentExpression	j = 0		3100270	0		=			
ANR	3100618	Identifier	j		3100270	0					
ANR	3100619	PrimaryExpression	0		3100270	1					
ANR	3100620	Condition	j < ET_SRC_MAX + 1	276:18:6264:6281	3100270	1	True				
ANR	3100621	RelationalExpression	j < ET_SRC_MAX + 1		3100270	0		<			
ANR	3100622	Identifier	j		3100270	0					
ANR	3100623	AdditiveExpression	ET_SRC_MAX + 1		3100270	1		+			
ANR	3100624	Identifier	ET_SRC_MAX		3100270	0					
ANR	3100625	PrimaryExpression	1		3100270	1					
ANR	3100626	PostIncDecOperationExpression	j ++	276:38:6284:6286	3100270	2	True				
ANR	3100627	Identifier	j		3100270	0					
ANR	3100628	IncDec	++		3100270	1					
ANR	3100629	CompoundStatement		47:10:1323:1333	3100270	3					
ANR	3100630	IdentifierDeclStatement	double g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale ;	278:10:6309:6363	3100270	0	True				
ANR	3100631	IdentifierDecl	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3100270	0					
ANR	3100632	IdentifierDeclType	double		3100270	0					
ANR	3100633	Identifier	g		3100270	1					
ANR	3100634	AssignmentExpression	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3100270	2		=			
ANR	3100635	Identifier	g		3100270	0					
ANR	3100636	MultiplicativeExpression	( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3100270	1		*			
ANR	3100637	AdditiveExpression	( 1 << 24 ) - params -> luts [ i ] [ j ]		3100270	0		-			
ANR	3100638	ShiftExpression	1 << 24		3100270	0		<<			
ANR	3100639	PrimaryExpression	1		3100270	0					
ANR	3100640	PrimaryExpression	24		3100270	1					
ANR	3100641	ArrayIndexing	params -> luts [ i ] [ j ]		3100270	1					
ANR	3100642	ArrayIndexing	params -> luts [ i ]		3100270	0					
ANR	3100643	PtrMemberAccess	params -> luts		3100270	0					
ANR	3100644	Identifier	params		3100270	0					
ANR	3100645	Identifier	luts		3100270	1					
ANR	3100646	Identifier	i		3100270	1					
ANR	3100647	Identifier	j		3100270	1					
ANR	3100648	Identifier	im_scale		3100270	1					
ANR	3100649	IdentifierDeclStatement	"int nl , rs ;"	279:10:6375:6385	3100270	1	True				
ANR	3100650	IdentifierDecl	nl		3100270	0					
ANR	3100651	IdentifierDeclType	int		3100270	0					
ANR	3100652	Identifier	nl		3100270	1					
ANR	3100653	IdentifierDecl	rs		3100270	1					
ANR	3100654	IdentifierDeclType	int		3100270	0					
ANR	3100655	Identifier	rs		3100270	1					
ANR	3100656	ExpressionStatement	lut [ j * 3 ] = g	281:10:6398:6412	3100270	2	True				
ANR	3100657	AssignmentExpression	lut [ j * 3 ] = g		3100270	0		=			
ANR	3100658	ArrayIndexing	lut [ j * 3 ]		3100270	0					
ANR	3100659	Identifier	lut		3100270	0					
ANR	3100660	MultiplicativeExpression	j * 3		3100270	1		*			
ANR	3100661	Identifier	j		3100270	0					
ANR	3100662	PrimaryExpression	3		3100270	1					
ANR	3100663	Identifier	g		3100270	1					
ANR	3100664	IfStatement	if ( g == 0.0 )		3100270	3					
ANR	3100665	Condition	g == 0.0	282:14:6428:6435	3100270	0	True				
ANR	3100666	EqualityExpression	g == 0.0		3100270	0		==			
ANR	3100667	Identifier	g		3100270	0					
ANR	3100668	PrimaryExpression	0.0		3100270	1					
ANR	3100669	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5	283:12:6450:6470	3100270	1	True				
ANR	3100670	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5		3100270	0		=			
ANR	3100671	ArrayIndexing	lut [ j * 3 + 1 ]		3100270	0					
ANR	3100672	Identifier	lut		3100270	0					
ANR	3100673	AdditiveExpression	j * 3 + 1		3100270	1		+			
ANR	3100674	MultiplicativeExpression	j * 3		3100270	0		*			
ANR	3100675	Identifier	j		3100270	0					
ANR	3100676	PrimaryExpression	3		3100270	1					
ANR	3100677	PrimaryExpression	1		3100270	1					
ANR	3100678	PrimaryExpression	0.5		3100270	1					
ANR	3100679	ElseStatement	else		3100270	0					
ANR	3100680	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g	285:12:6499:6541	3100270	0	True				
ANR	3100681	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g		3100270	0		=			
ANR	3100682	ArrayIndexing	lut [ j * 3 + 1 ]		3100270	0					
ANR	3100683	Identifier	lut		3100270	0					
ANR	3100684	AdditiveExpression	j * 3 + 1		3100270	1		+			
ANR	3100685	MultiplicativeExpression	j * 3		3100270	0		*			
ANR	3100686	Identifier	j		3100270	0					
ANR	3100687	PrimaryExpression	3		3100270	1					
ANR	3100688	PrimaryExpression	1		3100270	1					
ANR	3100689	AdditiveExpression	0.5 - r_mul * rbscale / g		3100270	1		-			
ANR	3100690	PrimaryExpression	0.5		3100270	0					
ANR	3100691	MultiplicativeExpression	r_mul * rbscale / g		3100270	1		*			
ANR	3100692	Identifier	r_mul		3100270	0					
ANR	3100693	MultiplicativeExpression	rbscale / g		3100270	1		/			
ANR	3100694	Identifier	rbscale		3100270	0					
ANR	3100695	Identifier	g		3100270	1					
ANR	3100696	ExpressionStatement	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )	287:10:6554:6603	3100270	4	True				
ANR	3100697	AssignmentExpression	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		3100270	0		=			
ANR	3100698	Identifier	nl		3100270	0					
ANR	3100699	MultiplicativeExpression	( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		3100270	1		*			
ANR	3100700	AdditiveExpression	params -> levels - 1 - g		3100270	0		-			
ANR	3100701	PtrMemberAccess	params -> levels		3100270	0					
ANR	3100702	Identifier	params		3100270	0					
ANR	3100703	Identifier	levels		3100270	1					
ANR	3100704	AdditiveExpression	1 - g		3100270	1		-			
ANR	3100705	PrimaryExpression	1		3100270	0					
ANR	3100706	Identifier	g		3100270	1					
ANR	3100707	ShiftExpression	1 << EVEN_SHIFT		3100270	1		<<			
ANR	3100708	PrimaryExpression	1		3100270	0					
ANR	3100709	Identifier	EVEN_SHIFT		3100270	1					
ANR	3100710	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"	288:10:6615:6725	3100270	5	True				
ANR	3100711	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		3100270	0		=			
ANR	3100712	Identifier	rs		3100270	0					
ANR	3100713	CallExpression	"eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		3100270	1					
ANR	3100714	Callee	eb_compute_randshift		3100270	0					
ANR	3100715	Identifier	eb_compute_randshift		3100270	0					
ANR	3100716	ArgumentList	nl		3100270	1					
ANR	3100717	Argument	nl		3100270	0					
ANR	3100718	Identifier	nl		3100270	0					
ANR	3100719	Argument	rs_base		3100270	1					
ANR	3100720	Identifier	rs_base		3100270	0					
ANR	3100721	Argument	params -> do_shadows		3100270	2					
ANR	3100722	PtrMemberAccess	params -> do_shadows		3100270	0					
ANR	3100723	Identifier	params		3100270	0					
ANR	3100724	Identifier	do_shadows		3100270	1					
ANR	3100725	Argument	params -> levels		3100270	3					
ANR	3100726	PtrMemberAccess	params -> levels		3100270	0					
ANR	3100727	Identifier	params		3100270	0					
ANR	3100728	Identifier	levels		3100270	1					
ANR	3100729	ExpressionStatement	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )	291:10:6738:6790	3100270	6	True				
ANR	3100730	AssignmentExpression	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		3100270	0		=			
ANR	3100731	ArrayIndexing	lut [ j * 3 + 2 ]		3100270	0					
ANR	3100732	Identifier	lut		3100270	0					
ANR	3100733	AdditiveExpression	j * 3 + 2		3100270	1		+			
ANR	3100734	MultiplicativeExpression	j * 3		3100270	0		*			
ANR	3100735	Identifier	j		3100270	0					
ANR	3100736	PrimaryExpression	3		3100270	1					
ANR	3100737	PrimaryExpression	2		3100270	1					
ANR	3100738	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		3100270	1		/			
ANR	3100739	PrimaryExpression	1.0		3100270	0					
ANR	3100740	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs )		3100270	1		/			
ANR	3100741	ShiftExpression	1 << EVEN_SHIFT		3100270	0		<<			
ANR	3100742	PrimaryExpression	1		3100270	0					
ANR	3100743	Identifier	EVEN_SHIFT		3100270	1					
ANR	3100744	ShiftExpression	1 << rs		3100270	1		<<			
ANR	3100745	PrimaryExpression	1		3100270	0					
ANR	3100746	Identifier	rs		3100270	1					
ANR	3100747	ForStatement	for ( i = i - start_plane ; i < 4 ; i ++ )		3100270	18					
ANR	3100748	ForInit	i = i - start_plane ;	294:7:6815:6834	3100270	0	True				
ANR	3100749	AssignmentExpression	i = i - start_plane		3100270	0		=			
ANR	3100750	Identifier	i		3100270	0					
ANR	3100751	AdditiveExpression	i - start_plane		3100270	1		-			
ANR	3100752	Identifier	i		3100270	0					
ANR	3100753	Identifier	start_plane		3100270	1					
ANR	3100754	Condition	i < 4	294:28:6836:6840	3100270	1	True				
ANR	3100755	RelationalExpression	i < 4		3100270	0		<			
ANR	3100756	Identifier	i		3100270	0					
ANR	3100757	PrimaryExpression	4		3100270	1					
ANR	3100758	PostIncDecOperationExpression	i ++	294:35:6843:6845	3100270	2	True				
ANR	3100759	Identifier	i		3100270	0					
ANR	3100760	IncDec	++		3100270	1					
ANR	3100761	ExpressionStatement	ctx -> luts [ i ] = NULL	295:4:6852:6871	3100270	3	True				
ANR	3100762	AssignmentExpression	ctx -> luts [ i ] = NULL		3100270	0		=			
ANR	3100763	ArrayIndexing	ctx -> luts [ i ]		3100270	0					
ANR	3100764	PtrMemberAccess	ctx -> luts		3100270	0					
ANR	3100765	Identifier	ctx		3100270	0					
ANR	3100766	Identifier	luts		3100270	1					
ANR	3100767	Identifier	i		3100270	1					
ANR	3100768	Identifier	NULL		3100270	1					
ANR	3100769	ExpressionStatement	"ctx -> iir_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	297:2:6876:6936	3100270	19	True				
ANR	3100770	AssignmentExpression	"ctx -> iir_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	0		=			
ANR	3100771	PtrMemberAccess	ctx -> iir_line		3100270	0					
ANR	3100772	Identifier	ctx		3100270	0					
ANR	3100773	Identifier	iir_line		3100270	1					
ANR	3100774	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100775	CastTarget	int *		3100270	0					
ANR	3100776	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100777	Callee	eb_malloc_aligned		3100270	0					
ANR	3100778	Identifier	eb_malloc_aligned		3100270	0					
ANR	3100779	ArgumentList	16 * ( xs + 32 )		3100270	1					
ANR	3100780	Argument	16 * ( xs + 32 )		3100270	0					
ANR	3100781	MultiplicativeExpression	16 * ( xs + 32 )		3100270	0		*			
ANR	3100782	PrimaryExpression	16		3100270	0					
ANR	3100783	AdditiveExpression	xs + 32		3100270	1		+			
ANR	3100784	Identifier	xs		3100270	0					
ANR	3100785	PrimaryExpression	32		3100270	1					
ANR	3100786	Argument	16		3100270	1					
ANR	3100787	PrimaryExpression	16		3100270	0					
ANR	3100788	ExpressionStatement	"ctx -> a_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	298:2:6940:6998	3100270	20	True				
ANR	3100789	AssignmentExpression	"ctx -> a_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	0		=			
ANR	3100790	PtrMemberAccess	ctx -> a_line		3100270	0					
ANR	3100791	Identifier	ctx		3100270	0					
ANR	3100792	Identifier	a_line		3100270	1					
ANR	3100793	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100794	CastTarget	int *		3100270	0					
ANR	3100795	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100796	Callee	eb_malloc_aligned		3100270	0					
ANR	3100797	Identifier	eb_malloc_aligned		3100270	0					
ANR	3100798	ArgumentList	16 * ( xs + 32 )		3100270	1					
ANR	3100799	Argument	16 * ( xs + 32 )		3100270	0					
ANR	3100800	MultiplicativeExpression	16 * ( xs + 32 )		3100270	0		*			
ANR	3100801	PrimaryExpression	16		3100270	0					
ANR	3100802	AdditiveExpression	xs + 32		3100270	1		+			
ANR	3100803	Identifier	xs		3100270	0					
ANR	3100804	PrimaryExpression	32		3100270	1					
ANR	3100805	Argument	16		3100270	1					
ANR	3100806	PrimaryExpression	16		3100270	0					
ANR	3100807	ExpressionStatement	"ctx -> b_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	299:2:7002:7060	3100270	21	True				
ANR	3100808	AssignmentExpression	"ctx -> b_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	0		=			
ANR	3100809	PtrMemberAccess	ctx -> b_line		3100270	0					
ANR	3100810	Identifier	ctx		3100270	0					
ANR	3100811	Identifier	b_line		3100270	1					
ANR	3100812	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100813	CastTarget	int *		3100270	0					
ANR	3100814	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100815	Callee	eb_malloc_aligned		3100270	0					
ANR	3100816	Identifier	eb_malloc_aligned		3100270	0					
ANR	3100817	ArgumentList	16 * ( xs + 32 )		3100270	1					
ANR	3100818	Argument	16 * ( xs + 32 )		3100270	0					
ANR	3100819	MultiplicativeExpression	16 * ( xs + 32 )		3100270	0		*			
ANR	3100820	PrimaryExpression	16		3100270	0					
ANR	3100821	AdditiveExpression	xs + 32		3100270	1		+			
ANR	3100822	Identifier	xs		3100270	0					
ANR	3100823	PrimaryExpression	32		3100270	1					
ANR	3100824	Argument	16		3100270	1					
ANR	3100825	PrimaryExpression	16		3100270	0					
ANR	3100826	ExpressionStatement	"ctx -> r_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	300:2:7064:7122	3100270	22	True				
ANR	3100827	AssignmentExpression	"ctx -> r_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	0		=			
ANR	3100828	PtrMemberAccess	ctx -> r_line		3100270	0					
ANR	3100829	Identifier	ctx		3100270	0					
ANR	3100830	Identifier	r_line		3100270	1					
ANR	3100831	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100832	CastTarget	int *		3100270	0					
ANR	3100833	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3100270	1					
ANR	3100834	Callee	eb_malloc_aligned		3100270	0					
ANR	3100835	Identifier	eb_malloc_aligned		3100270	0					
ANR	3100836	ArgumentList	16 * ( xs + 32 )		3100270	1					
ANR	3100837	Argument	16 * ( xs + 32 )		3100270	0					
ANR	3100838	MultiplicativeExpression	16 * ( xs + 32 )		3100270	0		*			
ANR	3100839	PrimaryExpression	16		3100270	0					
ANR	3100840	AdditiveExpression	xs + 32		3100270	1		+			
ANR	3100841	Identifier	xs		3100270	0					
ANR	3100842	PrimaryExpression	32		3100270	1					
ANR	3100843	Argument	16		3100270	1					
ANR	3100844	PrimaryExpression	16		3100270	0					
ANR	3100845	ForStatement	for ( i = 0 ; i < ( xs + 32 ) * 4 ; i ++ )		3100270	23					
ANR	3100846	ForInit	i = 0 ;	301:7:7131:7136	3100270	0	True				
ANR	3100847	AssignmentExpression	i = 0		3100270	0		=			
ANR	3100848	Identifier	i		3100270	0					
ANR	3100849	PrimaryExpression	0		3100270	1					
ANR	3100850	Condition	i < ( xs + 32 ) * 4	301:14:7138:7154	3100270	1	True				
ANR	3100851	RelationalExpression	i < ( xs + 32 ) * 4		3100270	0		<			
ANR	3100852	Identifier	i		3100270	0					
ANR	3100853	MultiplicativeExpression	( xs + 32 ) * 4		3100270	1		*			
ANR	3100854	AdditiveExpression	xs + 32		3100270	0		+			
ANR	3100855	Identifier	xs		3100270	0					
ANR	3100856	PrimaryExpression	32		3100270	1					
ANR	3100857	PrimaryExpression	4		3100270	1					
ANR	3100858	PostIncDecOperationExpression	i ++	301:33:7157:7159	3100270	2	True				
ANR	3100859	Identifier	i		3100270	0					
ANR	3100860	IncDec	++		3100270	1					
ANR	3100861	CompoundStatement		70:4:2114:2114	3100270	3					
ANR	3100862	ExpressionStatement	( ( float * ) ctx -> iir_line ) [ i ] = 0	303:6:7174:7205	3100270	0	True				
ANR	3100863	AssignmentExpression	( ( float * ) ctx -> iir_line ) [ i ] = 0		3100270	0		=			
ANR	3100864	ArrayIndexing	( ( float * ) ctx -> iir_line ) [ i ]		3100270	0					
ANR	3100865	CastExpression	( float * ) ctx -> iir_line		3100270	0					
ANR	3100866	CastTarget	float *		3100270	0					
ANR	3100867	PtrMemberAccess	ctx -> iir_line		3100270	1					
ANR	3100868	Identifier	ctx		3100270	0					
ANR	3100869	Identifier	iir_line		3100270	1					
ANR	3100870	Identifier	i		3100270	1					
ANR	3100871	PrimaryExpression	0		3100270	1					
ANR	3100872	ExpressionStatement	ctx -> a_line [ i ] = 1	304:6:7213:7231	3100270	1	True				
ANR	3100873	AssignmentExpression	ctx -> a_line [ i ] = 1		3100270	0		=			
ANR	3100874	ArrayIndexing	ctx -> a_line [ i ]		3100270	0					
ANR	3100875	PtrMemberAccess	ctx -> a_line		3100270	0					
ANR	3100876	Identifier	ctx		3100270	0					
ANR	3100877	Identifier	a_line		3100270	1					
ANR	3100878	Identifier	i		3100270	1					
ANR	3100879	PrimaryExpression	1		3100270	1					
ANR	3100880	ExpressionStatement	ctx -> b_line [ i ] = aspect2	305:6:7239:7263	3100270	2	True				
ANR	3100881	AssignmentExpression	ctx -> b_line [ i ] = aspect2		3100270	0		=			
ANR	3100882	ArrayIndexing	ctx -> b_line [ i ]		3100270	0					
ANR	3100883	PtrMemberAccess	ctx -> b_line		3100270	0					
ANR	3100884	Identifier	ctx		3100270	0					
ANR	3100885	Identifier	b_line		3100270	1					
ANR	3100886	Identifier	i		3100270	1					
ANR	3100887	Identifier	aspect2		3100270	1					
ANR	3100888	ExpressionStatement	ctx -> r_line [ i ] = 0	306:6:7271:7289	3100270	3	True				
ANR	3100889	AssignmentExpression	ctx -> r_line [ i ] = 0		3100270	0		=			
ANR	3100890	ArrayIndexing	ctx -> r_line [ i ]		3100270	0					
ANR	3100891	PtrMemberAccess	ctx -> r_line		3100270	0					
ANR	3100892	Identifier	ctx		3100270	0					
ANR	3100893	Identifier	r_line		3100270	1					
ANR	3100894	Identifier	i		3100270	1					
ANR	3100895	PrimaryExpression	0		3100270	1					
ANR	3100896	ExpressionStatement	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )	309:2:7300:7348	3100270	24	True				
ANR	3100897	AssignmentExpression	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )		3100270	0		=			
ANR	3100898	PtrMemberAccess	ctx -> skip_line		3100270	0					
ANR	3100899	Identifier	ctx		3100270	0					
ANR	3100900	Identifier	skip_line		3100270	1					
ANR	3100901	CastExpression	( char * ) malloc ( ( xs + 15 ) & - 16 )		3100270	1					
ANR	3100902	CastTarget	char *		3100270	0					
ANR	3100903	CallExpression	malloc ( ( xs + 15 ) & - 16 )		3100270	1					
ANR	3100904	Callee	malloc		3100270	0					
ANR	3100905	Identifier	malloc		3100270	0					
ANR	3100906	ArgumentList	( xs + 15 ) & - 16		3100270	1					
ANR	3100907	Argument	( xs + 15 ) & - 16		3100270	0					
ANR	3100908	BitAndExpression	( xs + 15 ) & - 16		3100270	0		&			
ANR	3100909	AdditiveExpression	xs + 15		3100270	0		+			
ANR	3100910	Identifier	xs		3100270	0					
ANR	3100911	PrimaryExpression	15		3100270	1					
ANR	3100912	UnaryOperationExpression	- 16		3100270	1					
ANR	3100913	UnaryOperator	-		3100270	0					
ANR	3100914	PrimaryExpression	16		3100270	1					
ANR	3100915	ReturnStatement	return ctx ;	311:2:7353:7363	3100270	25	True				
ANR	3100916	Identifier	ctx		3100270	0					
ANR	3100917	ReturnType	static eb_ctx_sse2 *		3100270	1					
ANR	3100918	Identifier	eb_ctx_sse2_new		3100270	2					
ANR	3100919	ParameterList	"const EvenBetterParams * params , int start_plane , int end_plane"		3100270	3					
ANR	3100920	Parameter	const EvenBetterParams * params	232:16:4987:5016	3100270	0	True				
ANR	3100921	ParameterType	const EvenBetterParams *		3100270	0					
ANR	3100922	Identifier	params		3100270	1					
ANR	3100923	Parameter	int start_plane	232:48:5019:5033	3100270	1	True				
ANR	3100924	ParameterType	int		3100270	0					
ANR	3100925	Identifier	start_plane		3100270	1					
ANR	3100926	Parameter	int end_plane	232:65:5036:5048	3100270	2	True				
ANR	3100927	ParameterType	int		3100270	0					
ANR	3100928	Identifier	end_plane		3100270	1					
ANR	3100929	CFGEntryNode	ENTRY		3100270		True				
ANR	3100930	CFGExitNode	EXIT		3100270		True				
ANR	3100931	Symbol	r_mul		3100270						
ANR	3100932	Symbol	ET_SRC_MAX		3100270						
ANR	3100933	Symbol	* ctx -> luts		3100270						
ANR	3100934	Symbol	aspect2		3100270						
ANR	3100935	Symbol	ctx -> b		3100270						
ANR	3100936	Symbol	ctx -> e		3100270						
ANR	3100937	Symbol	lut		3100270						
ANR	3100938	Symbol	eb_compute_randshift		3100270						
ANR	3100939	Symbol	* ctx -> ones		3100270						
ANR	3100940	Symbol	* * params		3100270						
ANR	3100941	Symbol	ctx -> xs		3100270						
ANR	3100942	Symbol	ctx -> twos		3100270						
ANR	3100943	Symbol	ctx -> a		3100270						
ANR	3100944	Symbol	params -> even_c1_scale		3100270						
ANR	3100945	Symbol	* * * params		3100270						
ANR	3100946	Symbol	EVEN_SHIFT		3100270						
ANR	3100947	Symbol	ctx -> skip_line		3100270						
ANR	3100948	Symbol	ctx -> iir_line		3100270						
ANR	3100949	Symbol	* ctx -> b_line		3100270						
ANR	3100950	Symbol	ctx -> r_mul		3100270						
ANR	3100951	Symbol	ctx -> r		3100270						
ANR	3100952	Symbol	* ctx -> e_i_1		3100270						
ANR	3100953	Symbol	* * i		3100270						
ANR	3100954	Symbol	* ctx -> a_line		3100270						
ANR	3100955	Symbol	rs_base		3100270						
ANR	3100956	Symbol	* ctx -> twos		3100270						
ANR	3100957	Symbol	NULL		3100270						
ANR	3100958	Symbol	* ctx -> kernel		3100270						
ANR	3100959	Symbol	ctx		3100270						
ANR	3100960	Symbol	params		3100270						
ANR	3100961	Symbol	* ctx -> ohi		3100270						
ANR	3100962	Symbol	eb_compute_rbscale		3100270						
ANR	3100963	Symbol	* ctx -> r_mul		3100270						
ANR	3100964	Symbol	* ctx -> elo		3100270						
ANR	3100965	Symbol	params -> source_width		3100270						
ANR	3100966	Symbol	* ctx -> ehi		3100270						
ANR	3100967	Symbol	start_plane		3100270						
ANR	3100968	Symbol	* ctx -> iir_line		3100270						
ANR	3100969	Symbol	nl		3100270						
ANR	3100970	Symbol	rs		3100270						
ANR	3100971	Symbol	* params -> luts		3100270						
ANR	3100972	Symbol	params -> do_shadows		3100270						
ANR	3100973	Symbol	eb_malloc_aligned		3100270						
ANR	3100974	Symbol	* ctx -> seed2		3100270						
ANR	3100975	Symbol	* ctx -> seed1		3100270						
ANR	3100976	Symbol	params -> rand_scale		3100270						
ANR	3100977	Symbol	ctx -> b_line		3100270						
ANR	3100978	Symbol	* ctx -> r		3100270						
ANR	3100979	Symbol	ctx -> ones		3100270						
ANR	3100980	Symbol	ctx -> seed2		3100270						
ANR	3100981	Symbol	ctx -> seed1		3100270						
ANR	3100982	Symbol	end_plane		3100270						
ANR	3100983	Symbol	ctx -> ehi		3100270						
ANR	3100984	Symbol	ctx -> elo		3100270						
ANR	3100985	Symbol	* ctx -> r_line		3100270						
ANR	3100986	Symbol	ctx -> e_i_1		3100270						
ANR	3100987	Symbol	* ctx -> e		3100270						
ANR	3100988	Symbol	ctx -> ohi		3100270						
ANR	3100989	Symbol	* ctx -> b		3100270						
ANR	3100990	Symbol	rbscale		3100270						
ANR	3100991	Symbol	* ctx -> a		3100270						
ANR	3100992	Symbol	* params		3100270						
ANR	3100993	Symbol	params -> aspect		3100270						
ANR	3100994	Symbol	malloc		3100270						
ANR	3100995	Symbol	g		3100270						
ANR	3100996	Symbol	i		3100270						
ANR	3100997	Symbol	params -> luts		3100270						
ANR	3100998	Symbol	* ctx -> aspect2		3100270						
ANR	3100999	Symbol	j		3100270						
ANR	3101000	Symbol	ctx -> kernel		3100270						
ANR	3101001	Symbol	im_scale		3100270						
ANR	3101002	Symbol	ctx -> r_line		3100270						
ANR	3101003	Symbol	* ctx		3100270						
ANR	3101004	Symbol	ctx -> aspect2		3100270						
ANR	3101005	Symbol	params -> levels		3100270						
ANR	3101006	Symbol	ctx -> luts		3100270						
ANR	3101007	Symbol	* i		3100270						
ANR	3101008	Symbol	* * params -> luts		3100270						
ANR	3101009	Symbol	* j		3100270						
ANR	3101010	Symbol	* lut		3100270						
ANR	3101011	Symbol	xs		3100270						
ANR	3101012	Symbol	* * ctx		3100270						
ANR	3101013	Symbol	* start_plane		3100270						
ANR	3101014	Symbol	ctx -> a_line		3100270						
ANR	3101015	Function	eb_ctx_sse2_free	314:0:7368:7655							
ANR	3101016	FunctionDef	eb_ctx_sse2_free (eb_ctx_sse2 * ctx)		3101015	0					
ANR	3101017	CompoundStatement		316:0:7415:7655	3101015	0					
ANR	3101018	IdentifierDeclStatement	int i ;	317:2:7419:7424	3101015	0	True				
ANR	3101019	IdentifierDecl	i		3101015	0					
ANR	3101020	IdentifierDeclType	int		3101015	0					
ANR	3101021	Identifier	i		3101015	1					
ANR	3101022	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3101015	1					
ANR	3101023	ForInit	i = 0 ;	319:7:7434:7439	3101015	0	True				
ANR	3101024	AssignmentExpression	i = 0		3101015	0		=			
ANR	3101025	Identifier	i		3101015	0					
ANR	3101026	PrimaryExpression	0		3101015	1					
ANR	3101027	Condition	i < 4	319:14:7441:7445	3101015	1	True				
ANR	3101028	RelationalExpression	i < 4		3101015	0		<			
ANR	3101029	Identifier	i		3101015	0					
ANR	3101030	PrimaryExpression	4		3101015	1					
ANR	3101031	PostIncDecOperationExpression	i ++	319:21:7448:7450	3101015	2	True				
ANR	3101032	Identifier	i		3101015	0					
ANR	3101033	IncDec	++		3101015	1					
ANR	3101034	ExpressionStatement	free ( ctx -> luts [ i ] )	320:4:7457:7475	3101015	3	True				
ANR	3101035	CallExpression	free ( ctx -> luts [ i ] )		3101015	0					
ANR	3101036	Callee	free		3101015	0					
ANR	3101037	Identifier	free		3101015	0					
ANR	3101038	ArgumentList	ctx -> luts [ i ]		3101015	1					
ANR	3101039	Argument	ctx -> luts [ i ]		3101015	0					
ANR	3101040	ArrayIndexing	ctx -> luts [ i ]		3101015	0					
ANR	3101041	PtrMemberAccess	ctx -> luts		3101015	0					
ANR	3101042	Identifier	ctx		3101015	0					
ANR	3101043	Identifier	luts		3101015	1					
ANR	3101044	Identifier	i		3101015	1					
ANR	3101045	ExpressionStatement	eb_free_aligned ( ctx -> iir_line )	321:2:7479:7509	3101015	2	True				
ANR	3101046	CallExpression	eb_free_aligned ( ctx -> iir_line )		3101015	0					
ANR	3101047	Callee	eb_free_aligned		3101015	0					
ANR	3101048	Identifier	eb_free_aligned		3101015	0					
ANR	3101049	ArgumentList	ctx -> iir_line		3101015	1					
ANR	3101050	Argument	ctx -> iir_line		3101015	0					
ANR	3101051	PtrMemberAccess	ctx -> iir_line		3101015	0					
ANR	3101052	Identifier	ctx		3101015	0					
ANR	3101053	Identifier	iir_line		3101015	1					
ANR	3101054	ExpressionStatement	eb_free_aligned ( ctx -> a_line )	322:2:7513:7541	3101015	3	True				
ANR	3101055	CallExpression	eb_free_aligned ( ctx -> a_line )		3101015	0					
ANR	3101056	Callee	eb_free_aligned		3101015	0					
ANR	3101057	Identifier	eb_free_aligned		3101015	0					
ANR	3101058	ArgumentList	ctx -> a_line		3101015	1					
ANR	3101059	Argument	ctx -> a_line		3101015	0					
ANR	3101060	PtrMemberAccess	ctx -> a_line		3101015	0					
ANR	3101061	Identifier	ctx		3101015	0					
ANR	3101062	Identifier	a_line		3101015	1					
ANR	3101063	ExpressionStatement	eb_free_aligned ( ctx -> b_line )	323:2:7545:7573	3101015	4	True				
ANR	3101064	CallExpression	eb_free_aligned ( ctx -> b_line )		3101015	0					
ANR	3101065	Callee	eb_free_aligned		3101015	0					
ANR	3101066	Identifier	eb_free_aligned		3101015	0					
ANR	3101067	ArgumentList	ctx -> b_line		3101015	1					
ANR	3101068	Argument	ctx -> b_line		3101015	0					
ANR	3101069	PtrMemberAccess	ctx -> b_line		3101015	0					
ANR	3101070	Identifier	ctx		3101015	0					
ANR	3101071	Identifier	b_line		3101015	1					
ANR	3101072	ExpressionStatement	eb_free_aligned ( ctx -> r_line )	324:2:7577:7605	3101015	5	True				
ANR	3101073	CallExpression	eb_free_aligned ( ctx -> r_line )		3101015	0					
ANR	3101074	Callee	eb_free_aligned		3101015	0					
ANR	3101075	Identifier	eb_free_aligned		3101015	0					
ANR	3101076	ArgumentList	ctx -> r_line		3101015	1					
ANR	3101077	Argument	ctx -> r_line		3101015	0					
ANR	3101078	PtrMemberAccess	ctx -> r_line		3101015	0					
ANR	3101079	Identifier	ctx		3101015	0					
ANR	3101080	Identifier	r_line		3101015	1					
ANR	3101081	ExpressionStatement	free ( ctx -> skip_line )	325:2:7609:7629	3101015	6	True				
ANR	3101082	CallExpression	free ( ctx -> skip_line )		3101015	0					
ANR	3101083	Callee	free		3101015	0					
ANR	3101084	Identifier	free		3101015	0					
ANR	3101085	ArgumentList	ctx -> skip_line		3101015	1					
ANR	3101086	Argument	ctx -> skip_line		3101015	0					
ANR	3101087	PtrMemberAccess	ctx -> skip_line		3101015	0					
ANR	3101088	Identifier	ctx		3101015	0					
ANR	3101089	Identifier	skip_line		3101015	1					
ANR	3101090	ExpressionStatement	eb_free_aligned ( ctx )	326:2:7633:7653	3101015	7	True				
ANR	3101091	CallExpression	eb_free_aligned ( ctx )		3101015	0					
ANR	3101092	Callee	eb_free_aligned		3101015	0					
ANR	3101093	Identifier	eb_free_aligned		3101015	0					
ANR	3101094	ArgumentList	ctx		3101015	1					
ANR	3101095	Argument	ctx		3101015	0					
ANR	3101096	Identifier	ctx		3101015	0					
ANR	3101097	ReturnType	static void		3101015	1					
ANR	3101098	Identifier	eb_ctx_sse2_free		3101015	2					
ANR	3101099	ParameterList	eb_ctx_sse2 * ctx		3101015	3					
ANR	3101100	Parameter	eb_ctx_sse2 * ctx	315:17:7397:7412	3101015	0	True				
ANR	3101101	ParameterType	eb_ctx_sse2 *		3101015	0					
ANR	3101102	Identifier	ctx		3101015	1					
ANR	3101103	CFGEntryNode	ENTRY		3101015		True				
ANR	3101104	CFGExitNode	EXIT		3101015		True				
ANR	3101105	Symbol	ctx -> luts		3101015						
ANR	3101106	Symbol	* i		3101015						
ANR	3101107	Symbol	ctx -> skip_line		3101015						
ANR	3101108	Symbol	ctx -> iir_line		3101015						
ANR	3101109	Symbol	ctx		3101015						
ANR	3101110	Symbol	* ctx -> luts		3101015						
ANR	3101111	Symbol	i		3101015						
ANR	3101112	Symbol	* * ctx		3101015						
ANR	3101113	Symbol	ctx -> b_line		3101015						
ANR	3101114	Symbol	ctx -> r_line		3101015						
ANR	3101115	Symbol	* ctx		3101015						
ANR	3101116	Symbol	ctx -> a_line		3101015						
ANR	3101117	Function	eb_ctx_avec_new	331:0:7681:11563							
ANR	3101118	FunctionDef	"eb_ctx_avec_new (const EvenBetterParams * params , int start_plane , int end_plane)"		3101117	0					
ANR	3101119	CompoundStatement		333:0:7782:11563	3101117	0					
ANR	3101120	IdentifierDeclStatement	int xs = params -> source_width ;	334:2:7786:7815	3101117	0	True				
ANR	3101121	IdentifierDecl	xs = params -> source_width		3101117	0					
ANR	3101122	IdentifierDeclType	int		3101117	0					
ANR	3101123	Identifier	xs		3101117	1					
ANR	3101124	AssignmentExpression	xs = params -> source_width		3101117	2		=			
ANR	3101125	Identifier	xs		3101117	0					
ANR	3101126	PtrMemberAccess	params -> source_width		3101117	1					
ANR	3101127	Identifier	params		3101117	0					
ANR	3101128	Identifier	source_width		3101117	1					
ANR	3101129	IdentifierDeclStatement	int aspect2 = params -> aspect * params -> aspect ;	335:2:7819:7864	3101117	1	True				
ANR	3101130	IdentifierDecl	aspect2 = params -> aspect * params -> aspect		3101117	0					
ANR	3101131	IdentifierDeclType	int		3101117	0					
ANR	3101132	Identifier	aspect2		3101117	1					
ANR	3101133	AssignmentExpression	aspect2 = params -> aspect * params -> aspect		3101117	2		=			
ANR	3101134	Identifier	aspect2		3101117	0					
ANR	3101135	MultiplicativeExpression	params -> aspect * params -> aspect		3101117	1		*			
ANR	3101136	PtrMemberAccess	params -> aspect		3101117	0					
ANR	3101137	Identifier	params		3101117	0					
ANR	3101138	Identifier	aspect		3101117	1					
ANR	3101139	PtrMemberAccess	params -> aspect		3101117	1					
ANR	3101140	Identifier	params		3101117	0					
ANR	3101141	Identifier	aspect		3101117	1					
ANR	3101142	IdentifierDeclStatement	eb_ctx_avec * ctx ;	336:2:7868:7884	3101117	2	True				
ANR	3101143	IdentifierDecl	* ctx		3101117	0					
ANR	3101144	IdentifierDeclType	eb_ctx_avec *		3101117	0					
ANR	3101145	Identifier	ctx		3101117	1					
ANR	3101146	IdentifierDeclStatement	int i ;	337:2:7888:7893	3101117	3	True				
ANR	3101147	IdentifierDecl	i		3101117	0					
ANR	3101148	IdentifierDeclType	int		3101117	0					
ANR	3101149	Identifier	i		3101117	1					
ANR	3101150	IdentifierDeclStatement	double im_scale ;	338:2:7897:7912	3101117	4	True				
ANR	3101151	IdentifierDecl	im_scale		3101117	0					
ANR	3101152	IdentifierDeclType	double		3101117	0					
ANR	3101153	Identifier	im_scale		3101117	1					
ANR	3101154	IdentifierDeclStatement	double k ;	339:2:7916:7924	3101117	5	True				
ANR	3101155	IdentifierDecl	k		3101117	0					
ANR	3101156	IdentifierDeclType	double		3101117	0					
ANR	3101157	Identifier	k		3101117	1					
ANR	3101158	IdentifierDeclStatement	"float imscale1 , imscale2 , rbmul , rsbase ;"	340:2:7928:7967	3101117	6	True				
ANR	3101159	IdentifierDecl	imscale1		3101117	0					
ANR	3101160	IdentifierDeclType	float		3101117	0					
ANR	3101161	Identifier	imscale1		3101117	1					
ANR	3101162	IdentifierDecl	imscale2		3101117	1					
ANR	3101163	IdentifierDeclType	float		3101117	0					
ANR	3101164	Identifier	imscale2		3101117	1					
ANR	3101165	IdentifierDecl	rbmul		3101117	2					
ANR	3101166	IdentifierDeclType	float		3101117	0					
ANR	3101167	Identifier	rbmul		3101117	1					
ANR	3101168	IdentifierDecl	rsbase		3101117	3					
ANR	3101169	IdentifierDeclType	float		3101117	0					
ANR	3101170	Identifier	rsbase		3101117	1					
ANR	3101171	IdentifierDeclStatement	float r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) ) ;	341:2:7971:8044	3101117	7	True				
ANR	3101172	IdentifierDecl	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3101117	0					
ANR	3101173	IdentifierDeclType	float		3101117	0					
ANR	3101174	Identifier	r_mul		3101117	1					
ANR	3101175	AssignmentExpression	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3101117	2		=			
ANR	3101176	Identifier	r_mul		3101117	0					
ANR	3101177	MultiplicativeExpression	1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		3101117	1		/			
ANR	3101178	PrimaryExpression	1.0		3101117	0					
ANR	3101179	MultiplicativeExpression	params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) )		3101117	1		*			
ANR	3101180	PtrMemberAccess	params -> aspect		3101117	0					
ANR	3101181	Identifier	params		3101117	0					
ANR	3101182	Identifier	aspect		3101117	1					
ANR	3101183	ShiftExpression	1 << ( 6 - params -> even_c1_scale )		3101117	1		<<			
ANR	3101184	PrimaryExpression	1		3101117	0					
ANR	3101185	AdditiveExpression	6 - params -> even_c1_scale		3101117	1		-			
ANR	3101186	PrimaryExpression	6		3101117	0					
ANR	3101187	PtrMemberAccess	params -> even_c1_scale		3101117	1					
ANR	3101188	Identifier	params		3101117	0					
ANR	3101189	Identifier	even_c1_scale		3101117	1					
ANR	3101190	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	342:2:8048:8091	3101117	8	True				
ANR	3101191	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		3101117	0					
ANR	3101192	IdentifierDeclType	double		3101117	0					
ANR	3101193	Identifier	rbscale		3101117	1					
ANR	3101194	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		3101117	2		=			
ANR	3101195	Identifier	rbscale		3101117	0					
ANR	3101196	CallExpression	eb_compute_rbscale ( params )		3101117	1					
ANR	3101197	Callee	eb_compute_rbscale		3101117	0					
ANR	3101198	Identifier	eb_compute_rbscale		3101117	0					
ANR	3101199	ArgumentList	params		3101117	1					
ANR	3101200	Argument	params		3101117	0					
ANR	3101201	Identifier	params		3101117	0					
ANR	3101202	Statement	vector	343:2:8095:8100	3101117	9	True				
ANR	3101203	IdentifierDeclStatement	unsigned int zero = vec_splat_u32 ( 0 ) ;	343:9:8102:8138	3101117	10	True				
ANR	3101204	IdentifierDecl	zero = vec_splat_u32 ( 0 )		3101117	0					
ANR	3101205	IdentifierDeclType	unsigned int		3101117	0					
ANR	3101206	Identifier	zero		3101117	1					
ANR	3101207	AssignmentExpression	zero = vec_splat_u32 ( 0 )		3101117	2		=			
ANR	3101208	Identifier	zero		3101117	0					
ANR	3101209	CallExpression	vec_splat_u32 ( 0 )		3101117	1					
ANR	3101210	Callee	vec_splat_u32		3101117	0					
ANR	3101211	Identifier	vec_splat_u32		3101117	0					
ANR	3101212	ArgumentList	0		3101117	1					
ANR	3101213	Argument	0		3101117	0					
ANR	3101214	PrimaryExpression	0		3101117	0					
ANR	3101215	IdentifierDeclStatement	"const vector float kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 } ;"	344:2:8142:8212	3101117	11	True				
ANR	3101216	IdentifierDecl	"kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 }"		3101117	0					
ANR	3101217	IdentifierDeclType	const vector float		3101117	0					
ANR	3101218	Identifier	kernel		3101117	1					
ANR	3101219	AssignmentExpression	"kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 }"		3101117	2		=			
ANR	3101220	Identifier	kernel		3101117	0					
ANR	3101221	InitializerList	1.0 / 16		3101117	1					
ANR	3101222	MultiplicativeExpression	1.0 / 16		3101117	0		/			
ANR	3101223	PrimaryExpression	1.0		3101117	0					
ANR	3101224	PrimaryExpression	16		3101117	1					
ANR	3101225	MultiplicativeExpression	3.0 / 16		3101117	1		/			
ANR	3101226	PrimaryExpression	3.0		3101117	0					
ANR	3101227	PrimaryExpression	16		3101117	1					
ANR	3101228	MultiplicativeExpression	5.0 / 16		3101117	2		/			
ANR	3101229	PrimaryExpression	5.0		3101117	0					
ANR	3101230	PrimaryExpression	16		3101117	1					
ANR	3101231	MultiplicativeExpression	7.0 / 16		3101117	3		/			
ANR	3101232	PrimaryExpression	7.0		3101117	0					
ANR	3101233	PrimaryExpression	16		3101117	1					
ANR	3101234	IdentifierDeclStatement	"vector float almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 } ;"	345:2:8216:8287	3101117	12	True				
ANR	3101235	IdentifierDecl	"almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 }"		3101117	0					
ANR	3101236	IdentifierDeclType	vector float		3101117	0					
ANR	3101237	Identifier	almostone		3101117	1					
ANR	3101238	AssignmentExpression	"almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 }"		3101117	2		=			
ANR	3101239	Identifier	almostone		3101117	0					
ANR	3101240	InitializerList	255.0 / 256		3101117	1					
ANR	3101241	MultiplicativeExpression	255.0 / 256		3101117	0		/			
ANR	3101242	PrimaryExpression	255.0		3101117	0					
ANR	3101243	PrimaryExpression	256		3101117	1					
ANR	3101244	MultiplicativeExpression	255.0 / 256		3101117	1		/			
ANR	3101245	PrimaryExpression	255.0		3101117	0					
ANR	3101246	PrimaryExpression	256		3101117	1					
ANR	3101247	MultiplicativeExpression	255.0 / 256		3101117	2		/			
ANR	3101248	PrimaryExpression	255.0		3101117	0					
ANR	3101249	PrimaryExpression	256		3101117	1					
ANR	3101250	MultiplicativeExpression	255.0 / 256		3101117	3		/			
ANR	3101251	PrimaryExpression	255.0		3101117	0					
ANR	3101252	PrimaryExpression	256		3101117	1					
ANR	3101253	IdentifierDeclStatement	int rs_base ;	346:2:8291:8302	3101117	13	True				
ANR	3101254	IdentifierDecl	rs_base		3101117	0					
ANR	3101255	IdentifierDeclType	int		3101117	0					
ANR	3101256	Identifier	rs_base		3101117	1					
ANR	3101257	ExpressionStatement	"ctx = ( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"	348:2:8307:8370	3101117	14	True				
ANR	3101258	AssignmentExpression	"ctx = ( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		3101117	0		=			
ANR	3101259	Identifier	ctx		3101117	0					
ANR	3101260	CastExpression	"( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		3101117	1					
ANR	3101261	CastTarget	eb_ctx_avec *		3101117	0					
ANR	3101262	CallExpression	"eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		3101117	1					
ANR	3101263	Callee	eb_malloc_aligned		3101117	0					
ANR	3101264	Identifier	eb_malloc_aligned		3101117	0					
ANR	3101265	ArgumentList	sizeof ( eb_ctx_avec )		3101117	1					
ANR	3101266	Argument	sizeof ( eb_ctx_avec )		3101117	0					
ANR	3101267	SizeofExpression	sizeof ( eb_ctx_avec )		3101117	0					
ANR	3101268	Sizeof	sizeof		3101117	0					
ANR	3101269	SizeofOperand	eb_ctx_avec		3101117	1					
ANR	3101270	Argument	16		3101117	1					
ANR	3101271	PrimaryExpression	16		3101117	0					
ANR	3101272	ExpressionStatement	ctx -> xs = xs	349:2:8374:8386	3101117	15	True				
ANR	3101273	AssignmentExpression	ctx -> xs = xs		3101117	0		=			
ANR	3101274	PtrMemberAccess	ctx -> xs		3101117	0					
ANR	3101275	Identifier	ctx		3101117	0					
ANR	3101276	Identifier	xs		3101117	1					
ANR	3101277	Identifier	xs		3101117	1					
ANR	3101278	ExpressionStatement	ctx -> e = ( vector float ) zero	351:2:8391:8419	3101117	16	True				
ANR	3101279	AssignmentExpression	ctx -> e = ( vector float ) zero		3101117	0		=			
ANR	3101280	PtrMemberAccess	ctx -> e		3101117	0					
ANR	3101281	Identifier	ctx		3101117	0					
ANR	3101282	Identifier	e		3101117	1					
ANR	3101283	CastExpression	( vector float ) zero		3101117	1					
ANR	3101284	CastTarget	vector float		3101117	0					
ANR	3101285	Identifier	zero		3101117	1					
ANR	3101286	ExpressionStatement	ctx -> e_i_1 = ( vector float ) zero	352:2:8423:8455	3101117	17	True				
ANR	3101287	AssignmentExpression	ctx -> e_i_1 = ( vector float ) zero		3101117	0		=			
ANR	3101288	PtrMemberAccess	ctx -> e_i_1		3101117	0					
ANR	3101289	Identifier	ctx		3101117	0					
ANR	3101290	Identifier	e_i_1		3101117	1					
ANR	3101291	CastExpression	( vector float ) zero		3101117	1					
ANR	3101292	CastTarget	vector float		3101117	0					
ANR	3101293	Identifier	zero		3101117	1					
ANR	3101294	ExpressionStatement	ctx -> r = zero	353:2:8459:8472	3101117	18	True				
ANR	3101295	AssignmentExpression	ctx -> r = zero		3101117	0		=			
ANR	3101296	PtrMemberAccess	ctx -> r		3101117	0					
ANR	3101297	Identifier	ctx		3101117	0					
ANR	3101298	Identifier	r		3101117	1					
ANR	3101299	Identifier	zero		3101117	1					
ANR	3101300	ExpressionStatement	ctx -> a = zero	354:2:8476:8489	3101117	19	True				
ANR	3101301	AssignmentExpression	ctx -> a = zero		3101117	0		=			
ANR	3101302	PtrMemberAccess	ctx -> a		3101117	0					
ANR	3101303	Identifier	ctx		3101117	0					
ANR	3101304	Identifier	a		3101117	1					
ANR	3101305	Identifier	zero		3101117	1					
ANR	3101306	ExpressionStatement	im_scale = ( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )	355:2:8493:8544	3101117	20	True				
ANR	3101307	AssignmentExpression	im_scale = ( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )		3101117	0		=			
ANR	3101308	Identifier	im_scale		3101117	0					
ANR	3101309	MultiplicativeExpression	( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )		3101117	1		*			
ANR	3101310	AdditiveExpression	params -> levels - 1		3101117	0		-			
ANR	3101311	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101312	Identifier	params		3101117	0					
ANR	3101313	Identifier	levels		3101117	1					
ANR	3101314	PrimaryExpression	1		3101117	1					
ANR	3101315	MultiplicativeExpression	1.0 / ( 1 << 24 )		3101117	1		/			
ANR	3101316	PrimaryExpression	1.0		3101117	0					
ANR	3101317	ShiftExpression	1 << 24		3101117	1		<<			
ANR	3101318	PrimaryExpression	1		3101117	0					
ANR	3101319	PrimaryExpression	24		3101117	1					
ANR	3101320	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	356:2:8548:8594	3101117	21	True				
ANR	3101321	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		3101117	0		=			
ANR	3101322	Identifier	rs_base		3101117	0					
ANR	3101323	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		3101117	1		-			
ANR	3101324	PrimaryExpression	35		3101117	0					
ANR	3101325	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		3101117	1		-			
ANR	3101326	Identifier	EVEN_SHIFT		3101117	0					
ANR	3101327	PtrMemberAccess	params -> rand_scale		3101117	1					
ANR	3101328	Identifier	params		3101117	0					
ANR	3101329	Identifier	rand_scale		3101117	1					
ANR	3101330	IfStatement	if ( params -> gamma == 1.0 )		3101117	22					
ANR	3101331	Condition	params -> gamma == 1.0	358:6:8603:8622	3101117	0	True				
ANR	3101332	EqualityExpression	params -> gamma == 1.0		3101117	0		==			
ANR	3101333	PtrMemberAccess	params -> gamma		3101117	0					
ANR	3101334	Identifier	params		3101117	0					
ANR	3101335	Identifier	gamma		3101117	1					
ANR	3101336	PrimaryExpression	1.0		3101117	1					
ANR	3101337	ExpressionStatement	k = 0	359:4:8629:8634	3101117	1	True				
ANR	3101338	AssignmentExpression	k = 0		3101117	0		=			
ANR	3101339	Identifier	k		3101117	0					
ANR	3101340	PrimaryExpression	0		3101117	1					
ANR	3101341	ElseStatement	else		3101117	0					
ANR	3101342	IfStatement	if ( params -> gamma == 1.8 )		3101117	0					
ANR	3101343	Condition	params -> gamma == 1.8	360:11:8647:8666	3101117	0	True				
ANR	3101344	EqualityExpression	params -> gamma == 1.8		3101117	0		==			
ANR	3101345	PtrMemberAccess	params -> gamma		3101117	0					
ANR	3101346	Identifier	params		3101117	0					
ANR	3101347	Identifier	gamma		3101117	1					
ANR	3101348	PrimaryExpression	1.8		3101117	1					
ANR	3101349	ExpressionStatement	k = 0.835	361:4:8673:8682	3101117	1	True				
ANR	3101350	AssignmentExpression	k = 0.835		3101117	0		=			
ANR	3101351	Identifier	k		3101117	0					
ANR	3101352	PrimaryExpression	0.835		3101117	1					
ANR	3101353	ElseStatement	else		3101117	0					
ANR	3101354	IfStatement	if ( params -> gamma == 2.0 )		3101117	0					
ANR	3101355	Condition	params -> gamma == 2.0	362:11:8695:8714	3101117	0	True				
ANR	3101356	EqualityExpression	params -> gamma == 2.0		3101117	0		==			
ANR	3101357	PtrMemberAccess	params -> gamma		3101117	0					
ANR	3101358	Identifier	params		3101117	0					
ANR	3101359	Identifier	gamma		3101117	1					
ANR	3101360	PrimaryExpression	2.0		3101117	1					
ANR	3101361	ExpressionStatement	k = 1.0	363:4:8721:8728	3101117	1	True				
ANR	3101362	AssignmentExpression	k = 1.0		3101117	0		=			
ANR	3101363	Identifier	k		3101117	0					
ANR	3101364	PrimaryExpression	1.0		3101117	1					
ANR	3101365	ElseStatement	else		3101117	0					
ANR	3101366	ExpressionStatement	k = 0	366:4:8774:8779	3101117	0	True				
ANR	3101367	AssignmentExpression	k = 0		3101117	0		=			
ANR	3101368	Identifier	k		3101117	0					
ANR	3101369	PrimaryExpression	0		3101117	1					
ANR	3101370	ForStatement	for ( ; ; )		3101117	23					
ANR	3101371	CompoundStatement		38:6:1022:1047	3101117	0					
ANR	3101372	IdentifierDeclStatement	"vector float foff , f0 , f1 ;"	370:6:8805:8830	3101117	0	True				
ANR	3101373	IdentifierDecl	foff		3101117	0					
ANR	3101374	IdentifierDeclType	vector float		3101117	0					
ANR	3101375	Identifier	foff		3101117	1					
ANR	3101376	IdentifierDecl	f0		3101117	1					
ANR	3101377	IdentifierDeclType	vector float		3101117	0					
ANR	3101378	Identifier	f0		3101117	1					
ANR	3101379	IdentifierDecl	f1		3101117	2					
ANR	3101380	IdentifierDeclType	vector float		3101117	0					
ANR	3101381	Identifier	f1		3101117	1					
ANR	3101382	ExpressionStatement	imscale1 = ( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )	372:6:8839:8898	3101117	1	True				
ANR	3101383	AssignmentExpression	imscale1 = ( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )		3101117	0		=			
ANR	3101384	Identifier	imscale1		3101117	0					
ANR	3101385	MultiplicativeExpression	( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )		3101117	1		*			
ANR	3101386	AdditiveExpression	1 - k		3101117	0		-			
ANR	3101387	PrimaryExpression	1		3101117	0					
ANR	3101388	Identifier	k		3101117	1					
ANR	3101389	MultiplicativeExpression	( params -> levels - 1 ) * ( 256.0 / 255.0 )		3101117	1		*			
ANR	3101390	AdditiveExpression	params -> levels - 1		3101117	0		-			
ANR	3101391	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101392	Identifier	params		3101117	0					
ANR	3101393	Identifier	levels		3101117	1					
ANR	3101394	PrimaryExpression	1		3101117	1					
ANR	3101395	MultiplicativeExpression	256.0 / 255.0		3101117	1		/			
ANR	3101396	PrimaryExpression	256.0		3101117	0					
ANR	3101397	PrimaryExpression	255.0		3101117	1					
ANR	3101398	ExpressionStatement	imscale2 = k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )	373:6:8906:8963	3101117	2	True				
ANR	3101399	AssignmentExpression	imscale2 = k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		3101117	0		=			
ANR	3101400	Identifier	imscale2		3101117	0					
ANR	3101401	MultiplicativeExpression	k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		3101117	1		*			
ANR	3101402	Identifier	k		3101117	0					
ANR	3101403	MultiplicativeExpression	( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		3101117	1		*			
ANR	3101404	AdditiveExpression	params -> levels - 1		3101117	0		-			
ANR	3101405	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101406	Identifier	params		3101117	0					
ANR	3101407	Identifier	levels		3101117	1					
ANR	3101408	PrimaryExpression	1		3101117	1					
ANR	3101409	CallExpression	sqrt ( 256.0 / 255.0 )		3101117	1					
ANR	3101410	Callee	sqrt		3101117	0					
ANR	3101411	Identifier	sqrt		3101117	0					
ANR	3101412	ArgumentList	256.0 / 255.0		3101117	1					
ANR	3101413	Argument	256.0 / 255.0		3101117	0					
ANR	3101414	MultiplicativeExpression	256.0 / 255.0		3101117	0		/			
ANR	3101415	PrimaryExpression	256.0		3101117	0					
ANR	3101416	PrimaryExpression	255.0		3101117	1					
ANR	3101417	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3101117	3					
ANR	3101418	ForInit	i = 0 ;	374:11:8976:8981	3101117	0	True				
ANR	3101419	AssignmentExpression	i = 0		3101117	0		=			
ANR	3101420	Identifier	i		3101117	0					
ANR	3101421	PrimaryExpression	0		3101117	1					
ANR	3101422	Condition	i < 4	374:18:8983:8987	3101117	1	True				
ANR	3101423	RelationalExpression	i < 4		3101117	0		<			
ANR	3101424	Identifier	i		3101117	0					
ANR	3101425	PrimaryExpression	4		3101117	1					
ANR	3101426	PostIncDecOperationExpression	i ++	374:25:8990:8992	3101117	2	True				
ANR	3101427	Identifier	i		3101117	0					
ANR	3101428	IncDec	++		3101117	1					
ANR	3101429	CompoundStatement		43:8:1220:1220	3101117	3					
ANR	3101430	ExpressionStatement	( ( float * ) & ctx -> imscale1 ) [ i ] = imscale1	376:10:9015:9054	3101117	0	True				
ANR	3101431	AssignmentExpression	( ( float * ) & ctx -> imscale1 ) [ i ] = imscale1		3101117	0		=			
ANR	3101432	ArrayIndexing	( ( float * ) & ctx -> imscale1 ) [ i ]		3101117	0					
ANR	3101433	CastExpression	( float * ) & ctx -> imscale1		3101117	0					
ANR	3101434	CastTarget	float *		3101117	0					
ANR	3101435	UnaryOperationExpression	& ctx -> imscale1		3101117	1					
ANR	3101436	UnaryOperator	&		3101117	0					
ANR	3101437	PtrMemberAccess	ctx -> imscale1		3101117	1					
ANR	3101438	Identifier	ctx		3101117	0					
ANR	3101439	Identifier	imscale1		3101117	1					
ANR	3101440	Identifier	i		3101117	1					
ANR	3101441	Identifier	imscale1		3101117	1					
ANR	3101442	ExpressionStatement	( ( float * ) & ctx -> imscale2 ) [ i ] = imscale2	377:10:9066:9105	3101117	1	True				
ANR	3101443	AssignmentExpression	( ( float * ) & ctx -> imscale2 ) [ i ] = imscale2		3101117	0		=			
ANR	3101444	ArrayIndexing	( ( float * ) & ctx -> imscale2 ) [ i ]		3101117	0					
ANR	3101445	CastExpression	( float * ) & ctx -> imscale2		3101117	0					
ANR	3101446	CastTarget	float *		3101117	0					
ANR	3101447	UnaryOperationExpression	& ctx -> imscale2		3101117	1					
ANR	3101448	UnaryOperator	&		3101117	0					
ANR	3101449	PtrMemberAccess	ctx -> imscale2		3101117	1					
ANR	3101450	Identifier	ctx		3101117	0					
ANR	3101451	Identifier	imscale2		3101117	1					
ANR	3101452	Identifier	i		3101117	1					
ANR	3101453	Identifier	imscale2		3101117	1					
ANR	3101454	ExpressionStatement	f0 = vec_rsqrte ( almostone )	379:6:9123:9149	3101117	4	True				
ANR	3101455	AssignmentExpression	f0 = vec_rsqrte ( almostone )		3101117	0		=			
ANR	3101456	Identifier	f0		3101117	0					
ANR	3101457	CallExpression	vec_rsqrte ( almostone )		3101117	1					
ANR	3101458	Callee	vec_rsqrte		3101117	0					
ANR	3101459	Identifier	vec_rsqrte		3101117	0					
ANR	3101460	ArgumentList	almostone		3101117	1					
ANR	3101461	Argument	almostone		3101117	0					
ANR	3101462	Identifier	almostone		3101117	0					
ANR	3101463	ExpressionStatement	"f0 = vec_madd ( f0 , almostone , ( vector float ) zero )"	380:6:9157:9205	3101117	5	True				
ANR	3101464	AssignmentExpression	"f0 = vec_madd ( f0 , almostone , ( vector float ) zero )"		3101117	0		=			
ANR	3101465	Identifier	f0		3101117	0					
ANR	3101466	CallExpression	"vec_madd ( f0 , almostone , ( vector float ) zero )"		3101117	1					
ANR	3101467	Callee	vec_madd		3101117	0					
ANR	3101468	Identifier	vec_madd		3101117	0					
ANR	3101469	ArgumentList	f0		3101117	1					
ANR	3101470	Argument	f0		3101117	0					
ANR	3101471	Identifier	f0		3101117	0					
ANR	3101472	Argument	almostone		3101117	1					
ANR	3101473	Identifier	almostone		3101117	0					
ANR	3101474	Argument	( vector float ) zero		3101117	2					
ANR	3101475	CastExpression	( vector float ) zero		3101117	0					
ANR	3101476	CastTarget	vector float		3101117	0					
ANR	3101477	Identifier	zero		3101117	1					
ANR	3101478	ExpressionStatement	"f1 = vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"	381:6:9213:9265	3101117	6	True				
ANR	3101479	AssignmentExpression	"f1 = vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"		3101117	0		=			
ANR	3101480	Identifier	f1		3101117	0					
ANR	3101481	CallExpression	"vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"		3101117	1					
ANR	3101482	Callee	vec_madd		3101117	0					
ANR	3101483	Identifier	vec_madd		3101117	0					
ANR	3101484	ArgumentList	f0		3101117	1					
ANR	3101485	Argument	f0		3101117	0					
ANR	3101486	Identifier	f0		3101117	0					
ANR	3101487	Argument	ctx -> imscale2		3101117	1					
ANR	3101488	PtrMemberAccess	ctx -> imscale2		3101117	0					
ANR	3101489	Identifier	ctx		3101117	0					
ANR	3101490	Identifier	imscale2		3101117	1					
ANR	3101491	Argument	( vector float ) zero		3101117	2					
ANR	3101492	CastExpression	( vector float ) zero		3101117	0					
ANR	3101493	CastTarget	vector float		3101117	0					
ANR	3101494	Identifier	zero		3101117	1					
ANR	3101495	ExpressionStatement	"foff = vec_madd ( almostone , ctx -> imscale1 , f1 )"	382:6:9273:9318	3101117	7	True				
ANR	3101496	AssignmentExpression	"foff = vec_madd ( almostone , ctx -> imscale1 , f1 )"		3101117	0		=			
ANR	3101497	Identifier	foff		3101117	0					
ANR	3101498	CallExpression	"vec_madd ( almostone , ctx -> imscale1 , f1 )"		3101117	1					
ANR	3101499	Callee	vec_madd		3101117	0					
ANR	3101500	Identifier	vec_madd		3101117	0					
ANR	3101501	ArgumentList	almostone		3101117	1					
ANR	3101502	Argument	almostone		3101117	0					
ANR	3101503	Identifier	almostone		3101117	0					
ANR	3101504	Argument	ctx -> imscale1		3101117	1					
ANR	3101505	PtrMemberAccess	ctx -> imscale1		3101117	0					
ANR	3101506	Identifier	ctx		3101117	0					
ANR	3101507	Identifier	imscale1		3101117	1					
ANR	3101508	Argument	f1		3101117	2					
ANR	3101509	Identifier	f1		3101117	0					
ANR	3101510	ExpressionStatement	"f1 = vec_nmsub ( f0 , ctx -> imscale2 , foff )"	383:6:9326:9365	3101117	8	True				
ANR	3101511	AssignmentExpression	"f1 = vec_nmsub ( f0 , ctx -> imscale2 , foff )"		3101117	0		=			
ANR	3101512	Identifier	f1		3101117	0					
ANR	3101513	CallExpression	"vec_nmsub ( f0 , ctx -> imscale2 , foff )"		3101117	1					
ANR	3101514	Callee	vec_nmsub		3101117	0					
ANR	3101515	Identifier	vec_nmsub		3101117	0					
ANR	3101516	ArgumentList	f0		3101117	1					
ANR	3101517	Argument	f0		3101117	0					
ANR	3101518	Identifier	f0		3101117	0					
ANR	3101519	Argument	ctx -> imscale2		3101117	1					
ANR	3101520	PtrMemberAccess	ctx -> imscale2		3101117	0					
ANR	3101521	Identifier	ctx		3101117	0					
ANR	3101522	Identifier	imscale2		3101117	1					
ANR	3101523	Argument	foff		3101117	2					
ANR	3101524	Identifier	foff		3101117	0					
ANR	3101525	ExpressionStatement	"f1 = vec_nmsub ( almostone , ctx -> imscale1 , f1 )"	384:6:9373:9417	3101117	9	True				
ANR	3101526	AssignmentExpression	"f1 = vec_nmsub ( almostone , ctx -> imscale1 , f1 )"		3101117	0		=			
ANR	3101527	Identifier	f1		3101117	0					
ANR	3101528	CallExpression	"vec_nmsub ( almostone , ctx -> imscale1 , f1 )"		3101117	1					
ANR	3101529	Callee	vec_nmsub		3101117	0					
ANR	3101530	Identifier	vec_nmsub		3101117	0					
ANR	3101531	ArgumentList	almostone		3101117	1					
ANR	3101532	Argument	almostone		3101117	0					
ANR	3101533	Identifier	almostone		3101117	0					
ANR	3101534	Argument	ctx -> imscale1		3101117	1					
ANR	3101535	PtrMemberAccess	ctx -> imscale1		3101117	0					
ANR	3101536	Identifier	ctx		3101117	0					
ANR	3101537	Identifier	imscale1		3101117	1					
ANR	3101538	Argument	f1		3101117	2					
ANR	3101539	Identifier	f1		3101117	0					
ANR	3101540	IfStatement	"if ( vec_all_eq ( f1 , ( vector float ) zero ) )"		3101117	10					
ANR	3101541	Condition	"vec_all_eq ( f1 , ( vector float ) zero )"	385:10:9429:9462	3101117	0	True				
ANR	3101542	CallExpression	"vec_all_eq ( f1 , ( vector float ) zero )"		3101117	0					
ANR	3101543	Callee	vec_all_eq		3101117	0					
ANR	3101544	Identifier	vec_all_eq		3101117	0					
ANR	3101545	ArgumentList	f1		3101117	1					
ANR	3101546	Argument	f1		3101117	0					
ANR	3101547	Identifier	f1		3101117	0					
ANR	3101548	Argument	( vector float ) zero		3101117	1					
ANR	3101549	CastExpression	( vector float ) zero		3101117	0					
ANR	3101550	CastTarget	vector float		3101117	0					
ANR	3101551	Identifier	zero		3101117	1					
ANR	3101552	CompoundStatement		54:8:1690:1690	3101117	1					
ANR	3101553	ExpressionStatement	ctx -> foff = foff	387:10:9485:9501	3101117	0	True				
ANR	3101554	AssignmentExpression	ctx -> foff = foff		3101117	0		=			
ANR	3101555	PtrMemberAccess	ctx -> foff		3101117	0					
ANR	3101556	Identifier	ctx		3101117	0					
ANR	3101557	Identifier	foff		3101117	1					
ANR	3101558	Identifier	foff		3101117	1					
ANR	3101559	BreakStatement	break ;	388:10:9513:9518	3101117	1	True				
ANR	3101560	ExpressionStatement	k += 1e-5	390:6:9536:9545	3101117	11	True				
ANR	3101561	AssignmentExpression	k += 1e-5		3101117	0		+=			
ANR	3101562	Identifier	k		3101117	0					
ANR	3101563	PrimaryExpression	1e-5		3101117	1					
ANR	3101564	ExpressionStatement	rbmul = - r_mul * rbscale	392:2:9555:9579	3101117	24	True				
ANR	3101565	AssignmentExpression	rbmul = - r_mul * rbscale		3101117	0		=			
ANR	3101566	Identifier	rbmul		3101117	0					
ANR	3101567	MultiplicativeExpression	- r_mul * rbscale		3101117	1		*			
ANR	3101568	UnaryOperationExpression	- r_mul		3101117	0					
ANR	3101569	UnaryOperator	-		3101117	0					
ANR	3101570	Identifier	r_mul		3101117	1					
ANR	3101571	Identifier	rbscale		3101117	1					
ANR	3101572	ExpressionStatement	rsbase = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )	393:2:9583:9632	3101117	25	True				
ANR	3101573	AssignmentExpression	rsbase = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		3101117	0		=			
ANR	3101574	Identifier	rsbase		3101117	0					
ANR	3101575	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		3101117	1		/			
ANR	3101576	PrimaryExpression	1.0		3101117	0					
ANR	3101577	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		3101117	1		/			
ANR	3101578	ShiftExpression	1 << EVEN_SHIFT		3101117	0		<<			
ANR	3101579	PrimaryExpression	1		3101117	0					
ANR	3101580	Identifier	EVEN_SHIFT		3101117	1					
ANR	3101581	ShiftExpression	1 << rs_base		3101117	1		<<			
ANR	3101582	PrimaryExpression	1		3101117	0					
ANR	3101583	Identifier	rs_base		3101117	1					
ANR	3101584	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3101117	26					
ANR	3101585	ForInit	i = 0 ;	394:7:9641:9646	3101117	0	True				
ANR	3101586	AssignmentExpression	i = 0		3101117	0		=			
ANR	3101587	Identifier	i		3101117	0					
ANR	3101588	PrimaryExpression	0		3101117	1					
ANR	3101589	Condition	i < 4	394:14:9648:9652	3101117	1	True				
ANR	3101590	RelationalExpression	i < 4		3101117	0		<			
ANR	3101591	Identifier	i		3101117	0					
ANR	3101592	PrimaryExpression	4		3101117	1					
ANR	3101593	PostIncDecOperationExpression	i ++	394:21:9655:9657	3101117	2	True				
ANR	3101594	Identifier	i		3101117	0					
ANR	3101595	IncDec	++		3101117	1					
ANR	3101596	CompoundStatement		63:4:1881:1881	3101117	3					
ANR	3101597	ExpressionStatement	( ( int * ) & ctx -> b ) [ i ] = aspect2	396:6:9672:9701	3101117	0	True				
ANR	3101598	AssignmentExpression	( ( int * ) & ctx -> b ) [ i ] = aspect2		3101117	0		=			
ANR	3101599	ArrayIndexing	( ( int * ) & ctx -> b ) [ i ]		3101117	0					
ANR	3101600	CastExpression	( int * ) & ctx -> b		3101117	0					
ANR	3101601	CastTarget	int *		3101117	0					
ANR	3101602	UnaryOperationExpression	& ctx -> b		3101117	1					
ANR	3101603	UnaryOperator	&		3101117	0					
ANR	3101604	PtrMemberAccess	ctx -> b		3101117	1					
ANR	3101605	Identifier	ctx		3101117	0					
ANR	3101606	Identifier	b		3101117	1					
ANR	3101607	Identifier	i		3101117	1					
ANR	3101608	Identifier	aspect2		3101117	1					
ANR	3101609	ExpressionStatement	( ( int * ) & ctx -> aspect2 ) [ i ] = aspect2	397:6:9709:9744	3101117	1	True				
ANR	3101610	AssignmentExpression	( ( int * ) & ctx -> aspect2 ) [ i ] = aspect2		3101117	0		=			
ANR	3101611	ArrayIndexing	( ( int * ) & ctx -> aspect2 ) [ i ]		3101117	0					
ANR	3101612	CastExpression	( int * ) & ctx -> aspect2		3101117	0					
ANR	3101613	CastTarget	int *		3101117	0					
ANR	3101614	UnaryOperationExpression	& ctx -> aspect2		3101117	1					
ANR	3101615	UnaryOperator	&		3101117	0					
ANR	3101616	PtrMemberAccess	ctx -> aspect2		3101117	1					
ANR	3101617	Identifier	ctx		3101117	0					
ANR	3101618	Identifier	aspect2		3101117	1					
ANR	3101619	Identifier	i		3101117	1					
ANR	3101620	Identifier	aspect2		3101117	1					
ANR	3101621	ExpressionStatement	( ( int * ) & ctx -> seed1 ) [ i ] = ( i << 8 ) + 0x7000	398:6:9752:9795	3101117	2	True				
ANR	3101622	AssignmentExpression	( ( int * ) & ctx -> seed1 ) [ i ] = ( i << 8 ) + 0x7000		3101117	0		=			
ANR	3101623	ArrayIndexing	( ( int * ) & ctx -> seed1 ) [ i ]		3101117	0					
ANR	3101624	CastExpression	( int * ) & ctx -> seed1		3101117	0					
ANR	3101625	CastTarget	int *		3101117	0					
ANR	3101626	UnaryOperationExpression	& ctx -> seed1		3101117	1					
ANR	3101627	UnaryOperator	&		3101117	0					
ANR	3101628	PtrMemberAccess	ctx -> seed1		3101117	1					
ANR	3101629	Identifier	ctx		3101117	0					
ANR	3101630	Identifier	seed1		3101117	1					
ANR	3101631	Identifier	i		3101117	1					
ANR	3101632	AdditiveExpression	( i << 8 ) + 0x7000		3101117	1		+			
ANR	3101633	ShiftExpression	i << 8		3101117	0		<<			
ANR	3101634	Identifier	i		3101117	0					
ANR	3101635	PrimaryExpression	8		3101117	1					
ANR	3101636	PrimaryExpression	0x7000		3101117	1					
ANR	3101637	ExpressionStatement	( ( int * ) & ctx -> seed2 ) [ i ] = ( i << 16 ) + 0x9000	399:6:9803:9847	3101117	3	True				
ANR	3101638	AssignmentExpression	( ( int * ) & ctx -> seed2 ) [ i ] = ( i << 16 ) + 0x9000		3101117	0		=			
ANR	3101639	ArrayIndexing	( ( int * ) & ctx -> seed2 ) [ i ]		3101117	0					
ANR	3101640	CastExpression	( int * ) & ctx -> seed2		3101117	0					
ANR	3101641	CastTarget	int *		3101117	0					
ANR	3101642	UnaryOperationExpression	& ctx -> seed2		3101117	1					
ANR	3101643	UnaryOperator	&		3101117	0					
ANR	3101644	PtrMemberAccess	ctx -> seed2		3101117	1					
ANR	3101645	Identifier	ctx		3101117	0					
ANR	3101646	Identifier	seed2		3101117	1					
ANR	3101647	Identifier	i		3101117	1					
ANR	3101648	AdditiveExpression	( i << 16 ) + 0x9000		3101117	1		+			
ANR	3101649	ShiftExpression	i << 16		3101117	0		<<			
ANR	3101650	Identifier	i		3101117	0					
ANR	3101651	PrimaryExpression	16		3101117	1					
ANR	3101652	PrimaryExpression	0x9000		3101117	1					
ANR	3101653	ExpressionStatement	( ( float * ) & ctx -> ohi ) [ i ] = params -> levels - 1	400:6:9855:9899	3101117	4	True				
ANR	3101654	AssignmentExpression	( ( float * ) & ctx -> ohi ) [ i ] = params -> levels - 1		3101117	0		=			
ANR	3101655	ArrayIndexing	( ( float * ) & ctx -> ohi ) [ i ]		3101117	0					
ANR	3101656	CastExpression	( float * ) & ctx -> ohi		3101117	0					
ANR	3101657	CastTarget	float *		3101117	0					
ANR	3101658	UnaryOperationExpression	& ctx -> ohi		3101117	1					
ANR	3101659	UnaryOperator	&		3101117	0					
ANR	3101660	PtrMemberAccess	ctx -> ohi		3101117	1					
ANR	3101661	Identifier	ctx		3101117	0					
ANR	3101662	Identifier	ohi		3101117	1					
ANR	3101663	Identifier	i		3101117	1					
ANR	3101664	AdditiveExpression	params -> levels - 1		3101117	1		-			
ANR	3101665	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101666	Identifier	params		3101117	0					
ANR	3101667	Identifier	levels		3101117	1					
ANR	3101668	PrimaryExpression	1		3101117	1					
ANR	3101669	ExpressionStatement	( ( float * ) & ctx -> ehi ) [ i ] = 1.1	401:6:9907:9936	3101117	5	True				
ANR	3101670	AssignmentExpression	( ( float * ) & ctx -> ehi ) [ i ] = 1.1		3101117	0		=			
ANR	3101671	ArrayIndexing	( ( float * ) & ctx -> ehi ) [ i ]		3101117	0					
ANR	3101672	CastExpression	( float * ) & ctx -> ehi		3101117	0					
ANR	3101673	CastTarget	float *		3101117	0					
ANR	3101674	UnaryOperationExpression	& ctx -> ehi		3101117	1					
ANR	3101675	UnaryOperator	&		3101117	0					
ANR	3101676	PtrMemberAccess	ctx -> ehi		3101117	1					
ANR	3101677	Identifier	ctx		3101117	0					
ANR	3101678	Identifier	ehi		3101117	1					
ANR	3101679	Identifier	i		3101117	1					
ANR	3101680	PrimaryExpression	1.1		3101117	1					
ANR	3101681	ExpressionStatement	( ( float * ) & ctx -> elo ) [ i ] = - 0.1	402:6:9944:9974	3101117	6	True				
ANR	3101682	AssignmentExpression	( ( float * ) & ctx -> elo ) [ i ] = - 0.1		3101117	0		=			
ANR	3101683	ArrayIndexing	( ( float * ) & ctx -> elo ) [ i ]		3101117	0					
ANR	3101684	CastExpression	( float * ) & ctx -> elo		3101117	0					
ANR	3101685	CastTarget	float *		3101117	0					
ANR	3101686	UnaryOperationExpression	& ctx -> elo		3101117	1					
ANR	3101687	UnaryOperator	&		3101117	0					
ANR	3101688	PtrMemberAccess	ctx -> elo		3101117	1					
ANR	3101689	Identifier	ctx		3101117	0					
ANR	3101690	Identifier	elo		3101117	1					
ANR	3101691	Identifier	i		3101117	1					
ANR	3101692	UnaryOperationExpression	- 0.1		3101117	1					
ANR	3101693	UnaryOperator	-		3101117	0					
ANR	3101694	PrimaryExpression	0.1		3101117	1					
ANR	3101695	ExpressionStatement	( ( float * ) & ctx -> r_mul ) [ i ] = r_mul	403:6:9982:10015	3101117	7	True				
ANR	3101696	AssignmentExpression	( ( float * ) & ctx -> r_mul ) [ i ] = r_mul		3101117	0		=			
ANR	3101697	ArrayIndexing	( ( float * ) & ctx -> r_mul ) [ i ]		3101117	0					
ANR	3101698	CastExpression	( float * ) & ctx -> r_mul		3101117	0					
ANR	3101699	CastTarget	float *		3101117	0					
ANR	3101700	UnaryOperationExpression	& ctx -> r_mul		3101117	1					
ANR	3101701	UnaryOperator	&		3101117	0					
ANR	3101702	PtrMemberAccess	ctx -> r_mul		3101117	1					
ANR	3101703	Identifier	ctx		3101117	0					
ANR	3101704	Identifier	r_mul		3101117	1					
ANR	3101705	Identifier	i		3101117	1					
ANR	3101706	Identifier	r_mul		3101117	1					
ANR	3101707	ExpressionStatement	( ( float * ) & ctx -> rsbase ) [ i ] = rsbase	404:6:10023:10058	3101117	8	True				
ANR	3101708	AssignmentExpression	( ( float * ) & ctx -> rsbase ) [ i ] = rsbase		3101117	0		=			
ANR	3101709	ArrayIndexing	( ( float * ) & ctx -> rsbase ) [ i ]		3101117	0					
ANR	3101710	CastExpression	( float * ) & ctx -> rsbase		3101117	0					
ANR	3101711	CastTarget	float *		3101117	0					
ANR	3101712	UnaryOperationExpression	& ctx -> rsbase		3101117	1					
ANR	3101713	UnaryOperator	&		3101117	0					
ANR	3101714	PtrMemberAccess	ctx -> rsbase		3101117	1					
ANR	3101715	Identifier	ctx		3101117	0					
ANR	3101716	Identifier	rsbase		3101117	1					
ANR	3101717	Identifier	i		3101117	1					
ANR	3101718	Identifier	rsbase		3101117	1					
ANR	3101719	ExpressionStatement	( ( float * ) & ctx -> rbmul ) [ i ] = rbmul	405:6:10066:10099	3101117	9	True				
ANR	3101720	AssignmentExpression	( ( float * ) & ctx -> rbmul ) [ i ] = rbmul		3101117	0		=			
ANR	3101721	ArrayIndexing	( ( float * ) & ctx -> rbmul ) [ i ]		3101117	0					
ANR	3101722	CastExpression	( float * ) & ctx -> rbmul		3101117	0					
ANR	3101723	CastTarget	float *		3101117	0					
ANR	3101724	UnaryOperationExpression	& ctx -> rbmul		3101117	1					
ANR	3101725	UnaryOperator	&		3101117	0					
ANR	3101726	PtrMemberAccess	ctx -> rbmul		3101117	1					
ANR	3101727	Identifier	ctx		3101117	0					
ANR	3101728	Identifier	rbmul		3101117	1					
ANR	3101729	Identifier	i		3101117	1					
ANR	3101730	Identifier	rbmul		3101117	1					
ANR	3101731	ExpressionStatement	ctx -> kernel = kernel	407:2:10109:10129	3101117	27	True				
ANR	3101732	AssignmentExpression	ctx -> kernel = kernel		3101117	0		=			
ANR	3101733	PtrMemberAccess	ctx -> kernel		3101117	0					
ANR	3101734	Identifier	ctx		3101117	0					
ANR	3101735	Identifier	kernel		3101117	1					
ANR	3101736	Identifier	kernel		3101117	1					
ANR	3101737	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	409:2:10134:10180	3101117	28	True				
ANR	3101738	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		3101117	0		=			
ANR	3101739	Identifier	rs_base		3101117	0					
ANR	3101740	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		3101117	1		-			
ANR	3101741	PrimaryExpression	35		3101117	0					
ANR	3101742	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		3101117	1		-			
ANR	3101743	Identifier	EVEN_SHIFT		3101117	0					
ANR	3101744	PtrMemberAccess	params -> rand_scale		3101117	1					
ANR	3101745	Identifier	params		3101117	0					
ANR	3101746	Identifier	rand_scale		3101117	1					
ANR	3101747	ForStatement	for ( i = start_plane ; i < end_plane ; i ++ )		3101117	29					
ANR	3101748	ForInit	i = start_plane ;	411:7:10190:10205	3101117	0	True				
ANR	3101749	AssignmentExpression	i = start_plane		3101117	0		=			
ANR	3101750	Identifier	i		3101117	0					
ANR	3101751	Identifier	start_plane		3101117	1					
ANR	3101752	Condition	i < end_plane	411:24:10207:10219	3101117	1	True				
ANR	3101753	RelationalExpression	i < end_plane		3101117	0		<			
ANR	3101754	Identifier	i		3101117	0					
ANR	3101755	Identifier	end_plane		3101117	1					
ANR	3101756	PostIncDecOperationExpression	i ++	411:39:10222:10224	3101117	2	True				
ANR	3101757	Identifier	i		3101117	0					
ANR	3101758	IncDec	++		3101117	1					
ANR	3101759	CompoundStatement		82:6:2530:2535	3101117	3					
ANR	3101760	IdentifierDeclStatement	float * lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 ) ;	413:6:10239:10305	3101117	0	True				
ANR	3101761	IdentifierDecl	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3101117	0					
ANR	3101762	IdentifierDeclType	float *		3101117	0					
ANR	3101763	Identifier	lut		3101117	1					
ANR	3101764	AssignmentExpression	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3101117	2		=			
ANR	3101765	Identifier	lut		3101117	0					
ANR	3101766	CastExpression	( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3101117	1					
ANR	3101767	CastTarget	float *		3101117	0					
ANR	3101768	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		3101117	1					
ANR	3101769	Callee	malloc		3101117	0					
ANR	3101770	Identifier	malloc		3101117	0					
ANR	3101771	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3101117	1					
ANR	3101772	Argument	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3101117	0					
ANR	3101773	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		3101117	0		*			
ANR	3101774	AdditiveExpression	ET_SRC_MAX + 1		3101117	0		+			
ANR	3101775	Identifier	ET_SRC_MAX		3101117	0					
ANR	3101776	PrimaryExpression	1		3101117	1					
ANR	3101777	MultiplicativeExpression	sizeof ( float ) * 3		3101117	1		*			
ANR	3101778	SizeofExpression	sizeof ( float )		3101117	0					
ANR	3101779	Sizeof	sizeof		3101117	0					
ANR	3101780	SizeofOperand	float		3101117	1					
ANR	3101781	PrimaryExpression	3		3101117	1					
ANR	3101782	IdentifierDeclStatement	int j ;	414:6:10313:10318	3101117	1	True				
ANR	3101783	IdentifierDecl	j		3101117	0					
ANR	3101784	IdentifierDeclType	int		3101117	0					
ANR	3101785	Identifier	j		3101117	1					
ANR	3101786	ExpressionStatement	ctx -> luts [ i - start_plane ] = lut	415:6:10326:10358	3101117	2	True				
ANR	3101787	AssignmentExpression	ctx -> luts [ i - start_plane ] = lut		3101117	0		=			
ANR	3101788	ArrayIndexing	ctx -> luts [ i - start_plane ]		3101117	0					
ANR	3101789	PtrMemberAccess	ctx -> luts		3101117	0					
ANR	3101790	Identifier	ctx		3101117	0					
ANR	3101791	Identifier	luts		3101117	1					
ANR	3101792	AdditiveExpression	i - start_plane		3101117	1		-			
ANR	3101793	Identifier	i		3101117	0					
ANR	3101794	Identifier	start_plane		3101117	1					
ANR	3101795	Identifier	lut		3101117	1					
ANR	3101796	ForStatement	for ( j = 0 ; j < ET_SRC_MAX + 1 ; j ++ )		3101117	3					
ANR	3101797	ForInit	j = 0 ;	417:11:10372:10377	3101117	0	True				
ANR	3101798	AssignmentExpression	j = 0		3101117	0		=			
ANR	3101799	Identifier	j		3101117	0					
ANR	3101800	PrimaryExpression	0		3101117	1					
ANR	3101801	Condition	j < ET_SRC_MAX + 1	417:18:10379:10396	3101117	1	True				
ANR	3101802	RelationalExpression	j < ET_SRC_MAX + 1		3101117	0		<			
ANR	3101803	Identifier	j		3101117	0					
ANR	3101804	AdditiveExpression	ET_SRC_MAX + 1		3101117	1		+			
ANR	3101805	Identifier	ET_SRC_MAX		3101117	0					
ANR	3101806	PrimaryExpression	1		3101117	1					
ANR	3101807	PostIncDecOperationExpression	j ++	417:38:10399:10401	3101117	2	True				
ANR	3101808	Identifier	j		3101117	0					
ANR	3101809	IncDec	++		3101117	1					
ANR	3101810	CompoundStatement		88:10:2707:2717	3101117	3					
ANR	3101811	IdentifierDeclStatement	double g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale ;	419:10:10424:10478	3101117	0	True				
ANR	3101812	IdentifierDecl	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3101117	0					
ANR	3101813	IdentifierDeclType	double		3101117	0					
ANR	3101814	Identifier	g		3101117	1					
ANR	3101815	AssignmentExpression	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3101117	2		=			
ANR	3101816	Identifier	g		3101117	0					
ANR	3101817	MultiplicativeExpression	( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		3101117	1		*			
ANR	3101818	AdditiveExpression	( 1 << 24 ) - params -> luts [ i ] [ j ]		3101117	0		-			
ANR	3101819	ShiftExpression	1 << 24		3101117	0		<<			
ANR	3101820	PrimaryExpression	1		3101117	0					
ANR	3101821	PrimaryExpression	24		3101117	1					
ANR	3101822	ArrayIndexing	params -> luts [ i ] [ j ]		3101117	1					
ANR	3101823	ArrayIndexing	params -> luts [ i ]		3101117	0					
ANR	3101824	PtrMemberAccess	params -> luts		3101117	0					
ANR	3101825	Identifier	params		3101117	0					
ANR	3101826	Identifier	luts		3101117	1					
ANR	3101827	Identifier	i		3101117	1					
ANR	3101828	Identifier	j		3101117	1					
ANR	3101829	Identifier	im_scale		3101117	1					
ANR	3101830	IdentifierDeclStatement	"int nl , rs ;"	420:10:10490:10500	3101117	1	True				
ANR	3101831	IdentifierDecl	nl		3101117	0					
ANR	3101832	IdentifierDeclType	int		3101117	0					
ANR	3101833	Identifier	nl		3101117	1					
ANR	3101834	IdentifierDecl	rs		3101117	1					
ANR	3101835	IdentifierDeclType	int		3101117	0					
ANR	3101836	Identifier	rs		3101117	1					
ANR	3101837	ExpressionStatement	lut [ j * 3 ] = g	422:10:10513:10527	3101117	2	True				
ANR	3101838	AssignmentExpression	lut [ j * 3 ] = g		3101117	0		=			
ANR	3101839	ArrayIndexing	lut [ j * 3 ]		3101117	0					
ANR	3101840	Identifier	lut		3101117	0					
ANR	3101841	MultiplicativeExpression	j * 3		3101117	1		*			
ANR	3101842	Identifier	j		3101117	0					
ANR	3101843	PrimaryExpression	3		3101117	1					
ANR	3101844	Identifier	g		3101117	1					
ANR	3101845	IfStatement	if ( g == 0.0 )		3101117	3					
ANR	3101846	Condition	g == 0.0	423:14:10543:10550	3101117	0	True				
ANR	3101847	EqualityExpression	g == 0.0		3101117	0		==			
ANR	3101848	Identifier	g		3101117	0					
ANR	3101849	PrimaryExpression	0.0		3101117	1					
ANR	3101850	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5	424:12:10565:10585	3101117	1	True				
ANR	3101851	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5		3101117	0		=			
ANR	3101852	ArrayIndexing	lut [ j * 3 + 1 ]		3101117	0					
ANR	3101853	Identifier	lut		3101117	0					
ANR	3101854	AdditiveExpression	j * 3 + 1		3101117	1		+			
ANR	3101855	MultiplicativeExpression	j * 3		3101117	0		*			
ANR	3101856	Identifier	j		3101117	0					
ANR	3101857	PrimaryExpression	3		3101117	1					
ANR	3101858	PrimaryExpression	1		3101117	1					
ANR	3101859	PrimaryExpression	0.5		3101117	1					
ANR	3101860	ElseStatement	else		3101117	0					
ANR	3101861	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g	426:12:10614:10656	3101117	0	True				
ANR	3101862	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g		3101117	0		=			
ANR	3101863	ArrayIndexing	lut [ j * 3 + 1 ]		3101117	0					
ANR	3101864	Identifier	lut		3101117	0					
ANR	3101865	AdditiveExpression	j * 3 + 1		3101117	1		+			
ANR	3101866	MultiplicativeExpression	j * 3		3101117	0		*			
ANR	3101867	Identifier	j		3101117	0					
ANR	3101868	PrimaryExpression	3		3101117	1					
ANR	3101869	PrimaryExpression	1		3101117	1					
ANR	3101870	AdditiveExpression	0.5 - r_mul * rbscale / g		3101117	1		-			
ANR	3101871	PrimaryExpression	0.5		3101117	0					
ANR	3101872	MultiplicativeExpression	r_mul * rbscale / g		3101117	1		*			
ANR	3101873	Identifier	r_mul		3101117	0					
ANR	3101874	MultiplicativeExpression	rbscale / g		3101117	1		/			
ANR	3101875	Identifier	rbscale		3101117	0					
ANR	3101876	Identifier	g		3101117	1					
ANR	3101877	ExpressionStatement	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )	427:10:10668:10717	3101117	4	True				
ANR	3101878	AssignmentExpression	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		3101117	0		=			
ANR	3101879	Identifier	nl		3101117	0					
ANR	3101880	MultiplicativeExpression	( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		3101117	1		*			
ANR	3101881	AdditiveExpression	params -> levels - 1 - g		3101117	0		-			
ANR	3101882	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101883	Identifier	params		3101117	0					
ANR	3101884	Identifier	levels		3101117	1					
ANR	3101885	AdditiveExpression	1 - g		3101117	1		-			
ANR	3101886	PrimaryExpression	1		3101117	0					
ANR	3101887	Identifier	g		3101117	1					
ANR	3101888	ShiftExpression	1 << EVEN_SHIFT		3101117	1		<<			
ANR	3101889	PrimaryExpression	1		3101117	0					
ANR	3101890	Identifier	EVEN_SHIFT		3101117	1					
ANR	3101891	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"	428:10:10729:10839	3101117	5	True				
ANR	3101892	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		3101117	0		=			
ANR	3101893	Identifier	rs		3101117	0					
ANR	3101894	CallExpression	"eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		3101117	1					
ANR	3101895	Callee	eb_compute_randshift		3101117	0					
ANR	3101896	Identifier	eb_compute_randshift		3101117	0					
ANR	3101897	ArgumentList	nl		3101117	1					
ANR	3101898	Argument	nl		3101117	0					
ANR	3101899	Identifier	nl		3101117	0					
ANR	3101900	Argument	rs_base		3101117	1					
ANR	3101901	Identifier	rs_base		3101117	0					
ANR	3101902	Argument	params -> do_shadows		3101117	2					
ANR	3101903	PtrMemberAccess	params -> do_shadows		3101117	0					
ANR	3101904	Identifier	params		3101117	0					
ANR	3101905	Identifier	do_shadows		3101117	1					
ANR	3101906	Argument	params -> levels		3101117	3					
ANR	3101907	PtrMemberAccess	params -> levels		3101117	0					
ANR	3101908	Identifier	params		3101117	0					
ANR	3101909	Identifier	levels		3101117	1					
ANR	3101910	ExpressionStatement	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )	431:10:10852:10904	3101117	6	True				
ANR	3101911	AssignmentExpression	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		3101117	0		=			
ANR	3101912	ArrayIndexing	lut [ j * 3 + 2 ]		3101117	0					
ANR	3101913	Identifier	lut		3101117	0					
ANR	3101914	AdditiveExpression	j * 3 + 2		3101117	1		+			
ANR	3101915	MultiplicativeExpression	j * 3		3101117	0		*			
ANR	3101916	Identifier	j		3101117	0					
ANR	3101917	PrimaryExpression	3		3101117	1					
ANR	3101918	PrimaryExpression	2		3101117	1					
ANR	3101919	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		3101117	1		/			
ANR	3101920	PrimaryExpression	1.0		3101117	0					
ANR	3101921	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs )		3101117	1		/			
ANR	3101922	ShiftExpression	1 << EVEN_SHIFT		3101117	0		<<			
ANR	3101923	PrimaryExpression	1		3101117	0					
ANR	3101924	Identifier	EVEN_SHIFT		3101117	1					
ANR	3101925	ShiftExpression	1 << rs		3101117	1		<<			
ANR	3101926	PrimaryExpression	1		3101117	0					
ANR	3101927	Identifier	rs		3101117	1					
ANR	3101928	ForStatement	for ( i = i - start_plane ; i < 4 ; i ++ )		3101117	30					
ANR	3101929	ForInit	i = i - start_plane ;	434:7:10929:10948	3101117	0	True				
ANR	3101930	AssignmentExpression	i = i - start_plane		3101117	0		=			
ANR	3101931	Identifier	i		3101117	0					
ANR	3101932	AdditiveExpression	i - start_plane		3101117	1		-			
ANR	3101933	Identifier	i		3101117	0					
ANR	3101934	Identifier	start_plane		3101117	1					
ANR	3101935	Condition	i < 4	434:28:10950:10954	3101117	1	True				
ANR	3101936	RelationalExpression	i < 4		3101117	0		<			
ANR	3101937	Identifier	i		3101117	0					
ANR	3101938	PrimaryExpression	4		3101117	1					
ANR	3101939	PostIncDecOperationExpression	i ++	434:35:10957:10959	3101117	2	True				
ANR	3101940	Identifier	i		3101117	0					
ANR	3101941	IncDec	++		3101117	1					
ANR	3101942	ExpressionStatement	ctx -> luts [ i ] = NULL	435:4:10966:10985	3101117	3	True				
ANR	3101943	AssignmentExpression	ctx -> luts [ i ] = NULL		3101117	0		=			
ANR	3101944	ArrayIndexing	ctx -> luts [ i ]		3101117	0					
ANR	3101945	PtrMemberAccess	ctx -> luts		3101117	0					
ANR	3101946	Identifier	ctx		3101117	0					
ANR	3101947	Identifier	luts		3101117	1					
ANR	3101948	Identifier	i		3101117	1					
ANR	3101949	Identifier	NULL		3101117	1					
ANR	3101950	ExpressionStatement	"ctx -> iir_line = ( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	437:2:10990:11059	3101117	31	True				
ANR	3101951	AssignmentExpression	"ctx -> iir_line = ( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	0		=			
ANR	3101952	PtrMemberAccess	ctx -> iir_line		3101117	0					
ANR	3101953	Identifier	ctx		3101117	0					
ANR	3101954	Identifier	iir_line		3101117	1					
ANR	3101955	CastExpression	"( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	1					
ANR	3101956	CastTarget	vector float *		3101117	0					
ANR	3101957	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	1					
ANR	3101958	Callee	eb_malloc_aligned		3101117	0					
ANR	3101959	Identifier	eb_malloc_aligned		3101117	0					
ANR	3101960	ArgumentList	16 * ( xs + 32 )		3101117	1					
ANR	3101961	Argument	16 * ( xs + 32 )		3101117	0					
ANR	3101962	MultiplicativeExpression	16 * ( xs + 32 )		3101117	0		*			
ANR	3101963	PrimaryExpression	16		3101117	0					
ANR	3101964	AdditiveExpression	xs + 32		3101117	1		+			
ANR	3101965	Identifier	xs		3101117	0					
ANR	3101966	PrimaryExpression	32		3101117	1					
ANR	3101967	Argument	16		3101117	1					
ANR	3101968	PrimaryExpression	16		3101117	0					
ANR	3101969	Statement	ctx	438:2:11063:11065	3101117	32	True				
ANR	3101970	Statement	->	438:5:11066:11067	3101117	33	True				
ANR	3101971	Statement	a_line	438:7:11068:11073	3101117	34	True				
ANR	3101972	Statement	=	438:14:11075:11075	3101117	35	True				
ANR	3101973	Statement	(	438:16:11077:11077	3101117	36	True				
ANR	3101974	Statement	vector	438:17:11078:11083	3101117	37	True				
ANR	3101975	Statement	unsigned	438:24:11085:11092	3101117	38	True				
ANR	3101976	Statement	int	438:33:11094:11096	3101117	39	True				
ANR	3101977	Statement	*	438:37:11098:11098	3101117	40	True				
ANR	3101978	Statement	)	438:38:11099:11099	3101117	41	True				
ANR	3101979	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	438:39:11100:11137	3101117	42	True				
ANR	3101980	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	0					
ANR	3101981	Callee	eb_malloc_aligned		3101117	0					
ANR	3101982	Identifier	eb_malloc_aligned		3101117	0					
ANR	3101983	ArgumentList	16 * ( xs + 32 )		3101117	1					
ANR	3101984	Argument	16 * ( xs + 32 )		3101117	0					
ANR	3101985	MultiplicativeExpression	16 * ( xs + 32 )		3101117	0		*			
ANR	3101986	PrimaryExpression	16		3101117	0					
ANR	3101987	AdditiveExpression	xs + 32		3101117	1		+			
ANR	3101988	Identifier	xs		3101117	0					
ANR	3101989	PrimaryExpression	32		3101117	1					
ANR	3101990	Argument	16		3101117	1					
ANR	3101991	PrimaryExpression	16		3101117	0					
ANR	3101992	Statement	ctx	439:2:11141:11143	3101117	43	True				
ANR	3101993	Statement	->	439:5:11144:11145	3101117	44	True				
ANR	3101994	Statement	b_line	439:7:11146:11151	3101117	45	True				
ANR	3101995	Statement	=	439:14:11153:11153	3101117	46	True				
ANR	3101996	Statement	(	439:16:11155:11155	3101117	47	True				
ANR	3101997	Statement	vector	439:17:11156:11161	3101117	48	True				
ANR	3101998	Statement	unsigned	439:24:11163:11170	3101117	49	True				
ANR	3101999	Statement	int	439:33:11172:11174	3101117	50	True				
ANR	3102000	Statement	*	439:37:11176:11176	3101117	51	True				
ANR	3102001	Statement	)	439:38:11177:11177	3101117	52	True				
ANR	3102002	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	439:39:11178:11215	3101117	53	True				
ANR	3102003	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	0					
ANR	3102004	Callee	eb_malloc_aligned		3101117	0					
ANR	3102005	Identifier	eb_malloc_aligned		3101117	0					
ANR	3102006	ArgumentList	16 * ( xs + 32 )		3101117	1					
ANR	3102007	Argument	16 * ( xs + 32 )		3101117	0					
ANR	3102008	MultiplicativeExpression	16 * ( xs + 32 )		3101117	0		*			
ANR	3102009	PrimaryExpression	16		3101117	0					
ANR	3102010	AdditiveExpression	xs + 32		3101117	1		+			
ANR	3102011	Identifier	xs		3101117	0					
ANR	3102012	PrimaryExpression	32		3101117	1					
ANR	3102013	Argument	16		3101117	1					
ANR	3102014	PrimaryExpression	16		3101117	0					
ANR	3102015	Statement	ctx	440:2:11219:11221	3101117	54	True				
ANR	3102016	Statement	->	440:5:11222:11223	3101117	55	True				
ANR	3102017	Statement	r_line	440:7:11224:11229	3101117	56	True				
ANR	3102018	Statement	=	440:14:11231:11231	3101117	57	True				
ANR	3102019	Statement	(	440:16:11233:11233	3101117	58	True				
ANR	3102020	Statement	vector	440:17:11234:11239	3101117	59	True				
ANR	3102021	Statement	unsigned	440:24:11241:11248	3101117	60	True				
ANR	3102022	Statement	int	440:33:11250:11252	3101117	61	True				
ANR	3102023	Statement	*	440:37:11254:11254	3101117	62	True				
ANR	3102024	Statement	)	440:38:11255:11255	3101117	63	True				
ANR	3102025	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	440:39:11256:11293	3101117	64	True				
ANR	3102026	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		3101117	0					
ANR	3102027	Callee	eb_malloc_aligned		3101117	0					
ANR	3102028	Identifier	eb_malloc_aligned		3101117	0					
ANR	3102029	ArgumentList	16 * ( xs + 32 )		3101117	1					
ANR	3102030	Argument	16 * ( xs + 32 )		3101117	0					
ANR	3102031	MultiplicativeExpression	16 * ( xs + 32 )		3101117	0		*			
ANR	3102032	PrimaryExpression	16		3101117	0					
ANR	3102033	AdditiveExpression	xs + 32		3101117	1		+			
ANR	3102034	Identifier	xs		3101117	0					
ANR	3102035	PrimaryExpression	32		3101117	1					
ANR	3102036	Argument	16		3101117	1					
ANR	3102037	PrimaryExpression	16		3101117	0					
ANR	3102038	ForStatement	for ( i = 0 ; i < ( xs + 32 ) * 4 ; i ++ )		3101117	65					
ANR	3102039	ForInit	i = 0 ;	441:7:11302:11307	3101117	0	True				
ANR	3102040	AssignmentExpression	i = 0		3101117	0		=			
ANR	3102041	Identifier	i		3101117	0					
ANR	3102042	PrimaryExpression	0		3101117	1					
ANR	3102043	Condition	i < ( xs + 32 ) * 4	441:14:11309:11325	3101117	1	True				
ANR	3102044	RelationalExpression	i < ( xs + 32 ) * 4		3101117	0		<			
ANR	3102045	Identifier	i		3101117	0					
ANR	3102046	MultiplicativeExpression	( xs + 32 ) * 4		3101117	1		*			
ANR	3102047	AdditiveExpression	xs + 32		3101117	0		+			
ANR	3102048	Identifier	xs		3101117	0					
ANR	3102049	PrimaryExpression	32		3101117	1					
ANR	3102050	PrimaryExpression	4		3101117	1					
ANR	3102051	PostIncDecOperationExpression	i ++	441:33:11328:11330	3101117	2	True				
ANR	3102052	Identifier	i		3101117	0					
ANR	3102053	IncDec	++		3101117	1					
ANR	3102054	CompoundStatement		110:4:3554:3554	3101117	3					
ANR	3102055	ExpressionStatement	( ( float * ) ctx -> iir_line ) [ i ] = 0	443:6:11345:11376	3101117	0	True				
ANR	3102056	AssignmentExpression	( ( float * ) ctx -> iir_line ) [ i ] = 0		3101117	0		=			
ANR	3102057	ArrayIndexing	( ( float * ) ctx -> iir_line ) [ i ]		3101117	0					
ANR	3102058	CastExpression	( float * ) ctx -> iir_line		3101117	0					
ANR	3102059	CastTarget	float *		3101117	0					
ANR	3102060	PtrMemberAccess	ctx -> iir_line		3101117	1					
ANR	3102061	Identifier	ctx		3101117	0					
ANR	3102062	Identifier	iir_line		3101117	1					
ANR	3102063	Identifier	i		3101117	1					
ANR	3102064	PrimaryExpression	0		3101117	1					
ANR	3102065	ExpressionStatement	( ( int * ) ctx -> a_line ) [ i ] = 1	444:6:11384:11411	3101117	1	True				
ANR	3102066	AssignmentExpression	( ( int * ) ctx -> a_line ) [ i ] = 1		3101117	0		=			
ANR	3102067	ArrayIndexing	( ( int * ) ctx -> a_line ) [ i ]		3101117	0					
ANR	3102068	CastExpression	( int * ) ctx -> a_line		3101117	0					
ANR	3102069	CastTarget	int *		3101117	0					
ANR	3102070	PtrMemberAccess	ctx -> a_line		3101117	1					
ANR	3102071	Identifier	ctx		3101117	0					
ANR	3102072	Identifier	a_line		3101117	1					
ANR	3102073	Identifier	i		3101117	1					
ANR	3102074	PrimaryExpression	1		3101117	1					
ANR	3102075	ExpressionStatement	( ( int * ) ctx -> b_line ) [ i ] = aspect2	445:6:11419:11452	3101117	2	True				
ANR	3102076	AssignmentExpression	( ( int * ) ctx -> b_line ) [ i ] = aspect2		3101117	0		=			
ANR	3102077	ArrayIndexing	( ( int * ) ctx -> b_line ) [ i ]		3101117	0					
ANR	3102078	CastExpression	( int * ) ctx -> b_line		3101117	0					
ANR	3102079	CastTarget	int *		3101117	0					
ANR	3102080	PtrMemberAccess	ctx -> b_line		3101117	1					
ANR	3102081	Identifier	ctx		3101117	0					
ANR	3102082	Identifier	b_line		3101117	1					
ANR	3102083	Identifier	i		3101117	1					
ANR	3102084	Identifier	aspect2		3101117	1					
ANR	3102085	ExpressionStatement	( ( int * ) ctx -> r_line ) [ i ] = 0	446:6:11460:11487	3101117	3	True				
ANR	3102086	AssignmentExpression	( ( int * ) ctx -> r_line ) [ i ] = 0		3101117	0		=			
ANR	3102087	ArrayIndexing	( ( int * ) ctx -> r_line ) [ i ]		3101117	0					
ANR	3102088	CastExpression	( int * ) ctx -> r_line		3101117	0					
ANR	3102089	CastTarget	int *		3101117	0					
ANR	3102090	PtrMemberAccess	ctx -> r_line		3101117	1					
ANR	3102091	Identifier	ctx		3101117	0					
ANR	3102092	Identifier	r_line		3101117	1					
ANR	3102093	Identifier	i		3101117	1					
ANR	3102094	PrimaryExpression	0		3101117	1					
ANR	3102095	ExpressionStatement	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )	449:2:11498:11546	3101117	66	True				
ANR	3102096	AssignmentExpression	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )		3101117	0		=			
ANR	3102097	PtrMemberAccess	ctx -> skip_line		3101117	0					
ANR	3102098	Identifier	ctx		3101117	0					
ANR	3102099	Identifier	skip_line		3101117	1					
ANR	3102100	CastExpression	( char * ) malloc ( ( xs + 15 ) & - 16 )		3101117	1					
ANR	3102101	CastTarget	char *		3101117	0					
ANR	3102102	CallExpression	malloc ( ( xs + 15 ) & - 16 )		3101117	1					
ANR	3102103	Callee	malloc		3101117	0					
ANR	3102104	Identifier	malloc		3101117	0					
ANR	3102105	ArgumentList	( xs + 15 ) & - 16		3101117	1					
ANR	3102106	Argument	( xs + 15 ) & - 16		3101117	0					
ANR	3102107	BitAndExpression	( xs + 15 ) & - 16		3101117	0		&			
ANR	3102108	AdditiveExpression	xs + 15		3101117	0		+			
ANR	3102109	Identifier	xs		3101117	0					
ANR	3102110	PrimaryExpression	15		3101117	1					
ANR	3102111	UnaryOperationExpression	- 16		3101117	1					
ANR	3102112	UnaryOperator	-		3101117	0					
ANR	3102113	PrimaryExpression	16		3101117	1					
ANR	3102114	ReturnStatement	return ctx ;	451:2:11551:11561	3101117	67	True				
ANR	3102115	Identifier	ctx		3101117	0					
ANR	3102116	ReturnType	static eb_ctx_avec *		3101117	1					
ANR	3102117	Identifier	eb_ctx_avec_new		3101117	2					
ANR	3102118	ParameterList	"const EvenBetterParams * params , int start_plane , int end_plane"		3101117	3					
ANR	3102119	Parameter	const EvenBetterParams * params	332:16:7718:7747	3101117	0	True				
ANR	3102120	ParameterType	const EvenBetterParams *		3101117	0					
ANR	3102121	Identifier	params		3101117	1					
ANR	3102122	Parameter	int start_plane	332:48:7750:7764	3101117	1	True				
ANR	3102123	ParameterType	int		3101117	0					
ANR	3102124	Identifier	start_plane		3101117	1					
ANR	3102125	Parameter	int end_plane	332:65:7767:7779	3101117	2	True				
ANR	3102126	ParameterType	int		3101117	0					
ANR	3102127	Identifier	end_plane		3101117	1					
ANR	3102128	CFGEntryNode	ENTRY		3101117		True				
ANR	3102129	CFGExitNode	EXIT		3101117		True				
ANR	3102130	InfiniteForNode	true		3101117		True				
ANR	3102131	Symbol	r_mul		3101117						
ANR	3102132	Symbol	* ctx -> luts		3101117						
ANR	3102133	Symbol	aspect2		3101117						
ANR	3102134	Symbol	ctx -> b		3101117						
ANR	3102135	Symbol	ctx -> e		3101117						
ANR	3102136	Symbol	lut		3101117						
ANR	3102137	Symbol	eb_compute_randshift		3101117						
ANR	3102138	Symbol	imscale1		3101117						
ANR	3102139	Symbol	imscale2		3101117						
ANR	3102140	Symbol	ctx -> xs		3101117						
ANR	3102141	Symbol	ctx -> a		3101117						
ANR	3102142	Symbol	sqrt		3101117						
ANR	3102143	Symbol	ctx -> r		3101117						
ANR	3102144	Symbol	vec_all_eq		3101117						
ANR	3102145	Symbol	vec_madd		3101117						
ANR	3102146	Symbol	rs_base		3101117						
ANR	3102147	Symbol	ctx		3101117						
ANR	3102148	Symbol	params		3101117						
ANR	3102149	Symbol	params -> source_width		3101117						
ANR	3102150	Symbol	start_plane		3101117						
ANR	3102151	Symbol	rs		3101117						
ANR	3102152	Symbol	params -> do_shadows		3101117						
ANR	3102153	Symbol	ctx -> seed2		3101117						
ANR	3102154	Symbol	ctx -> seed1		3101117						
ANR	3102155	Symbol	& ctx -> imscale1		3101117						
ANR	3102156	Symbol	ctx -> ehi		3101117						
ANR	3102157	Symbol	* ctx -> r_line		3101117						
ANR	3102158	Symbol	& ctx -> seed2		3101117						
ANR	3102159	Symbol	& ctx -> seed1		3101117						
ANR	3102160	Symbol	ctx -> e_i_1		3101117						
ANR	3102161	Symbol	rbscale		3101117						
ANR	3102162	Symbol	* params		3101117						
ANR	3102163	Symbol	& ctx -> imscale2		3101117						
ANR	3102164	Symbol	malloc		3101117						
ANR	3102165	Symbol	kernel		3101117						
ANR	3102166	Symbol	g		3101117						
ANR	3102167	Symbol	i		3101117						
ANR	3102168	Symbol	j		3101117						
ANR	3102169	Symbol	k		3101117						
ANR	3102170	Symbol	im_scale		3101117						
ANR	3102171	Symbol	* ctx		3101117						
ANR	3102172	Symbol	vec_rsqrte		3101117						
ANR	3102173	Symbol	ctx -> aspect2		3101117						
ANR	3102174	Symbol	* * params -> luts		3101117						
ANR	3102175	Symbol	* lut		3101117						
ANR	3102176	Symbol	ctx -> foff		3101117						
ANR	3102177	Symbol	foff		3101117						
ANR	3102178	Symbol	* * ctx		3101117						
ANR	3102179	Symbol	& ctx -> ehi		3101117						
ANR	3102180	Symbol	vec_nmsub		3101117						
ANR	3102181	Symbol	ctx -> a_line		3101117						
ANR	3102182	Symbol	ET_SRC_MAX		3101117						
ANR	3102183	Symbol	f0		3101117						
ANR	3102184	Symbol	f1		3101117						
ANR	3102185	Symbol	ctx -> rbmul		3101117						
ANR	3102186	Symbol	* * params		3101117						
ANR	3102187	Symbol	params -> even_c1_scale		3101117						
ANR	3102188	Symbol	zero		3101117						
ANR	3102189	Symbol	almostone		3101117						
ANR	3102190	Symbol	* * * params		3101117						
ANR	3102191	Symbol	EVEN_SHIFT		3101117						
ANR	3102192	Symbol	ctx -> skip_line		3101117						
ANR	3102193	Symbol	& ctx -> rsbase		3101117						
ANR	3102194	Symbol	ctx -> iir_line		3101117						
ANR	3102195	Symbol	* ctx -> b_line		3101117						
ANR	3102196	Symbol	ctx -> r_mul		3101117						
ANR	3102197	Symbol	rsbase		3101117						
ANR	3102198	Symbol	* * i		3101117						
ANR	3102199	Symbol	* ctx -> a_line		3101117						
ANR	3102200	Symbol	NULL		3101117						
ANR	3102201	Symbol	ctx -> imscale1		3101117						
ANR	3102202	Symbol	ctx -> imscale2		3101117						
ANR	3102203	Symbol	vec_splat_u32		3101117						
ANR	3102204	Symbol	eb_compute_rbscale		3101117						
ANR	3102205	Symbol	params -> gamma		3101117						
ANR	3102206	Symbol	& ctx -> aspect2		3101117						
ANR	3102207	Symbol	* ctx -> iir_line		3101117						
ANR	3102208	Symbol	nl		3101117						
ANR	3102209	Symbol	& ctx -> b		3101117						
ANR	3102210	Symbol	* params -> luts		3101117						
ANR	3102211	Symbol	eb_malloc_aligned		3101117						
ANR	3102212	Symbol	ctx -> rsbase		3101117						
ANR	3102213	Symbol	params -> rand_scale		3101117						
ANR	3102214	Symbol	ctx -> b_line		3101117						
ANR	3102215	Symbol	end_plane		3101117						
ANR	3102216	Symbol	ctx -> elo		3101117						
ANR	3102217	Symbol	& ctx -> r_mul		3101117						
ANR	3102218	Symbol	ctx -> ohi		3101117						
ANR	3102219	Symbol	params -> aspect		3101117						
ANR	3102220	Symbol	rbmul		3101117						
ANR	3102221	Symbol	& ctx -> ohi		3101117						
ANR	3102222	Symbol	params -> luts		3101117						
ANR	3102223	Symbol	ctx -> kernel		3101117						
ANR	3102224	Symbol	ctx -> r_line		3101117						
ANR	3102225	Symbol	params -> levels		3101117						
ANR	3102226	Symbol	ctx -> luts		3101117						
ANR	3102227	Symbol	* i		3101117						
ANR	3102228	Symbol	* j		3101117						
ANR	3102229	Symbol	& ctx -> elo		3101117						
ANR	3102230	Symbol	& ctx -> rbmul		3101117						
ANR	3102231	Symbol	xs		3101117						
ANR	3102232	Symbol	* start_plane		3101117						
ANR	3102233	Function	eb_ctx_avec_free	454:0:11566:11853							
ANR	3102234	FunctionDef	eb_ctx_avec_free (eb_ctx_avec * ctx)		3102233	0					
ANR	3102235	CompoundStatement		456:0:11613:11853	3102233	0					
ANR	3102236	IdentifierDeclStatement	int i ;	457:2:11617:11622	3102233	0	True				
ANR	3102237	IdentifierDecl	i		3102233	0					
ANR	3102238	IdentifierDeclType	int		3102233	0					
ANR	3102239	Identifier	i		3102233	1					
ANR	3102240	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3102233	1					
ANR	3102241	ForInit	i = 0 ;	459:7:11632:11637	3102233	0	True				
ANR	3102242	AssignmentExpression	i = 0		3102233	0		=			
ANR	3102243	Identifier	i		3102233	0					
ANR	3102244	PrimaryExpression	0		3102233	1					
ANR	3102245	Condition	i < 4	459:14:11639:11643	3102233	1	True				
ANR	3102246	RelationalExpression	i < 4		3102233	0		<			
ANR	3102247	Identifier	i		3102233	0					
ANR	3102248	PrimaryExpression	4		3102233	1					
ANR	3102249	PostIncDecOperationExpression	i ++	459:21:11646:11648	3102233	2	True				
ANR	3102250	Identifier	i		3102233	0					
ANR	3102251	IncDec	++		3102233	1					
ANR	3102252	ExpressionStatement	free ( ctx -> luts [ i ] )	460:4:11655:11673	3102233	3	True				
ANR	3102253	CallExpression	free ( ctx -> luts [ i ] )		3102233	0					
ANR	3102254	Callee	free		3102233	0					
ANR	3102255	Identifier	free		3102233	0					
ANR	3102256	ArgumentList	ctx -> luts [ i ]		3102233	1					
ANR	3102257	Argument	ctx -> luts [ i ]		3102233	0					
ANR	3102258	ArrayIndexing	ctx -> luts [ i ]		3102233	0					
ANR	3102259	PtrMemberAccess	ctx -> luts		3102233	0					
ANR	3102260	Identifier	ctx		3102233	0					
ANR	3102261	Identifier	luts		3102233	1					
ANR	3102262	Identifier	i		3102233	1					
ANR	3102263	ExpressionStatement	eb_free_aligned ( ctx -> iir_line )	461:2:11677:11707	3102233	2	True				
ANR	3102264	CallExpression	eb_free_aligned ( ctx -> iir_line )		3102233	0					
ANR	3102265	Callee	eb_free_aligned		3102233	0					
ANR	3102266	Identifier	eb_free_aligned		3102233	0					
ANR	3102267	ArgumentList	ctx -> iir_line		3102233	1					
ANR	3102268	Argument	ctx -> iir_line		3102233	0					
ANR	3102269	PtrMemberAccess	ctx -> iir_line		3102233	0					
ANR	3102270	Identifier	ctx		3102233	0					
ANR	3102271	Identifier	iir_line		3102233	1					
ANR	3102272	ExpressionStatement	eb_free_aligned ( ctx -> a_line )	462:2:11711:11739	3102233	3	True				
ANR	3102273	CallExpression	eb_free_aligned ( ctx -> a_line )		3102233	0					
ANR	3102274	Callee	eb_free_aligned		3102233	0					
ANR	3102275	Identifier	eb_free_aligned		3102233	0					
ANR	3102276	ArgumentList	ctx -> a_line		3102233	1					
ANR	3102277	Argument	ctx -> a_line		3102233	0					
ANR	3102278	PtrMemberAccess	ctx -> a_line		3102233	0					
ANR	3102279	Identifier	ctx		3102233	0					
ANR	3102280	Identifier	a_line		3102233	1					
ANR	3102281	ExpressionStatement	eb_free_aligned ( ctx -> b_line )	463:2:11743:11771	3102233	4	True				
ANR	3102282	CallExpression	eb_free_aligned ( ctx -> b_line )		3102233	0					
ANR	3102283	Callee	eb_free_aligned		3102233	0					
ANR	3102284	Identifier	eb_free_aligned		3102233	0					
ANR	3102285	ArgumentList	ctx -> b_line		3102233	1					
ANR	3102286	Argument	ctx -> b_line		3102233	0					
ANR	3102287	PtrMemberAccess	ctx -> b_line		3102233	0					
ANR	3102288	Identifier	ctx		3102233	0					
ANR	3102289	Identifier	b_line		3102233	1					
ANR	3102290	ExpressionStatement	eb_free_aligned ( ctx -> r_line )	464:2:11775:11803	3102233	5	True				
ANR	3102291	CallExpression	eb_free_aligned ( ctx -> r_line )		3102233	0					
ANR	3102292	Callee	eb_free_aligned		3102233	0					
ANR	3102293	Identifier	eb_free_aligned		3102233	0					
ANR	3102294	ArgumentList	ctx -> r_line		3102233	1					
ANR	3102295	Argument	ctx -> r_line		3102233	0					
ANR	3102296	PtrMemberAccess	ctx -> r_line		3102233	0					
ANR	3102297	Identifier	ctx		3102233	0					
ANR	3102298	Identifier	r_line		3102233	1					
ANR	3102299	ExpressionStatement	free ( ctx -> skip_line )	465:2:11807:11827	3102233	6	True				
ANR	3102300	CallExpression	free ( ctx -> skip_line )		3102233	0					
ANR	3102301	Callee	free		3102233	0					
ANR	3102302	Identifier	free		3102233	0					
ANR	3102303	ArgumentList	ctx -> skip_line		3102233	1					
ANR	3102304	Argument	ctx -> skip_line		3102233	0					
ANR	3102305	PtrMemberAccess	ctx -> skip_line		3102233	0					
ANR	3102306	Identifier	ctx		3102233	0					
ANR	3102307	Identifier	skip_line		3102233	1					
ANR	3102308	ExpressionStatement	eb_free_aligned ( ctx )	466:2:11831:11851	3102233	7	True				
ANR	3102309	CallExpression	eb_free_aligned ( ctx )		3102233	0					
ANR	3102310	Callee	eb_free_aligned		3102233	0					
ANR	3102311	Identifier	eb_free_aligned		3102233	0					
ANR	3102312	ArgumentList	ctx		3102233	1					
ANR	3102313	Argument	ctx		3102233	0					
ANR	3102314	Identifier	ctx		3102233	0					
ANR	3102315	ReturnType	static void		3102233	1					
ANR	3102316	Identifier	eb_ctx_avec_free		3102233	2					
ANR	3102317	ParameterList	eb_ctx_avec * ctx		3102233	3					
ANR	3102318	Parameter	eb_ctx_avec * ctx	455:17:11595:11610	3102233	0	True				
ANR	3102319	ParameterType	eb_ctx_avec *		3102233	0					
ANR	3102320	Identifier	ctx		3102233	1					
ANR	3102321	CFGEntryNode	ENTRY		3102233		True				
ANR	3102322	CFGExitNode	EXIT		3102233		True				
ANR	3102323	Symbol	ctx -> luts		3102233						
ANR	3102324	Symbol	* i		3102233						
ANR	3102325	Symbol	ctx -> skip_line		3102233						
ANR	3102326	Symbol	ctx -> iir_line		3102233						
ANR	3102327	Symbol	ctx		3102233						
ANR	3102328	Symbol	* ctx -> luts		3102233						
ANR	3102329	Symbol	i		3102233						
ANR	3102330	Symbol	* * ctx		3102233						
ANR	3102331	Symbol	ctx -> b_line		3102233						
ANR	3102332	Symbol	ctx -> r_line		3102233						
ANR	3102333	Symbol	* ctx		3102233						
ANR	3102334	Symbol	ctx -> a_line		3102233						
ANR	3102335	DeclStmt									
ANR	3102336	Decl							int	int	n_planes
ANR	3102337	DeclStmt									
ANR	3102338	Decl							int	int	xd
ANR	3102339	DeclStmt									
ANR	3102340	Decl							int	int	strip
ANR	3102341	DeclStmt									
ANR	3102342	Decl							eb_srcbuf	eb_srcbuf	sb_alloc
ANR	3102343	DeclStmt									
ANR	3102344	Decl							eb_srcbuf	eb_srcbuf *	srcbuf
ANR	3102345	DeclStmt									
ANR	3102346	Decl							uchar	uchar [ 32 ]	dummy_a
ANR	3102347	DeclStmt									
ANR	3102348	Decl							uchar	uchar *	dummy_dst
ANR	3102349	DeclStmt									
ANR	3102350	Decl							int	int	save_mxcsr
ANR	3102351	DeclStmt									
ANR	3102352	Decl							eb_ctx_avec	eb_ctx_avec *	ctx
ANR	3102353	DeclStmt									
ANR	3102354	Decl							eb_ctx_sse2	eb_ctx_sse2 *	ctx
ANR	3102355	DeclStmt									
ANR	3102356	Decl							uchar	uchar * [ 4 ]	destbufs
ANR	3102357	DeclStmt									
ANR	3102358	Decl							int	int [ 4 ]	count
ANR	3102359	DeclStmt									
ANR	3102360	Decl							int	int [ 4 ]	src_idx
ANR	3102361	DeclStmt									
ANR	3102362	Decl							int	int	plane_idx
ANR	3102363	Decl							int	int	last_plane
ANR	3102364	DeclStmt									
ANR	3102365	Decl							float	float [ 4 ]	im
ANR	3102366	Decl							float	float [ 4 ]	rb
ANR	3102367	Decl							float	float [ 4 ]	rs
ANR	3102368	DeclStmt									
ANR	3102369	Decl							int	int	i
ANR	3102370	DeclStmt									
ANR	3102371	Decl							int	int	j
ANR	3102372	DeclStmt									
ANR	3102373	Decl							int	int	jmax
ANR	3102374	DeclStmt									
ANR	3102375	Decl							int	int	skip
ANR	3102376	DeclStmt									
ANR	3102377	Decl							int	int	j
ANR	3102378	DeclStmt									
ANR	3102379	Decl							uchar	uchar *	dst_ptr
ANR	3102380	DeclStmt									
ANR	3102381	Decl							const float	const float *	lut
ANR	3102382	DeclStmt									
ANR	3102383	Decl							float	float	imp
ANR	3102384	DeclStmt									
ANR	3102385	Decl							float	float	rbp
ANR	3102386	DeclStmt									
ANR	3102387	Decl							float	float	rsp
ANR	3102388	DeclStmt									
ANR	3102389	Decl							const ET_Rll	const ET_Rll *	src_p
ANR	3102390	DeclStmt									
ANR	3102391	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	3102392	DeclStmt									
ANR	3102393	Decl							int	int	n_planes
ANR	3102394	DeclStmt									
ANR	3102395	Decl							int	int	xd
ANR	3102396	DeclStmt									
ANR	3102397	Decl							int	int	strip
ANR	3102398	DeclStmt									
ANR	3102399	Decl							eb_srcbuf	eb_srcbuf	sb_alloc
ANR	3102400	DeclStmt									
ANR	3102401	Decl							eb_srcbuf	eb_srcbuf *	srcbuf
ANR	3102402	DeclStmt									
ANR	3102403	Decl							uchar	uchar [ 32 ]	dummy_a
ANR	3102404	DeclStmt									
ANR	3102405	Decl							uchar	uchar *	dummy_dst
ANR	3102406	DeclStmt									
ANR	3102407	Decl							eb_ctx_avec	eb_ctx_avec *	ctx
ANR	3102408	DeclStmt									
ANR	3102409	Decl							eb_ctx_sse2	eb_ctx_sse2 *	ctx
ANR	3102410	DeclStmt									
ANR	3102411	Decl							uchar	uchar * [ 4 ]	destbufs
ANR	3102412	DeclStmt									
ANR	3102413	Decl							int	int	plane_idx
ANR	3102414	Decl							int	int	last_plane
ANR	3102415	DeclStmt									
ANR	3102416	Decl							int	int	i
ANR	3102417	DeclStmt									
ANR	3102418	Decl							int	int	noskip
ANR	3102419	DeclStmt									
ANR	3102420	Decl							uchar	uchar *	dst_ptr
ANR	3102421	DeclStmt									
ANR	3102422	Decl							int	int [ M ]	a
ANR	3102423	Decl							int	int [ M ]	b
ANR	3102424	DeclStmt									
ANR	3102425	Decl							int	int [ M ]	e_1_0
ANR	3102426	Decl							int	int [ M ]	e_m1_1
ANR	3102427	Decl							int	int [ M ]	e_0_1
ANR	3102428	Decl							int	int [ M ]	e_1_1
ANR	3102429	DeclStmt									
ANR	3102430	Decl							int	int [ M ]	iml
ANR	3102431	Decl							int	int [ M ]	rbl
ANR	3102432	DeclStmt									
ANR	3102433	Decl							int	int	i
ANR	3102434	Decl							int	int	j
ANR	3102435	DeclStmt									
ANR	3102436	Decl							int	int	im
ANR	3102437	DeclStmt									
ANR	3102438	Decl							int	int *	pa
ANR	3102439	Decl							int	int *	pb
ANR	3102440	Decl							int	int *	piir
ANR	3102441	Decl							int	int *	pr
ANR	3102442	DeclStmt									
ANR	3102443	Decl							int	int [ M ]	r
ANR	3102444	Decl							int	int	rg
ANR	3102445	DeclStmt									
ANR	3102446	Decl							int	int	xd
ANR	3102447	DeclStmt									
ANR	3102448	Decl							uint32	uint32	seed1
ANR	3102449	DeclStmt									
ANR	3102450	Decl							uint32	uint32	seed2
ANR	3102451	DeclStmt									
ANR	3102452	Decl							uint32	uint32	sum
ANR	3102453	DeclStmt									
ANR	3102454	Decl							int	int	plane_idx
ANR	3102455	DeclStmt									
ANR	3102456	Decl							int	int [ M ]	r_scratch
ANR	3102457	DeclStmt									
ANR	3102458	Decl							int	int	n_planes
ANR	3102459	DeclStmt									
ANR	3102460	Decl							int	int	levels
ANR	3102461	DeclStmt									
ANR	3102462	Decl							int	int	dith_mul
ANR	3102463	DeclStmt									
ANR	3102464	Decl							int	int	dith_mul
ANR	3102465	DeclStmt									
ANR	3102466	Decl							int	int	imo_mul
ANR	3102467	DeclStmt									
ANR	3102468	Decl							int	int	aspect2
ANR	3102469	DeclStmt									
ANR	3102470	Decl							int	int *	strengths
ANR	3102471	DeclStmt									
ANR	3102472	Decl							int	int	even_elo
ANR	3102473	DeclStmt									
ANR	3102474	Decl							int	int	even_ehi
ANR	3102475	DeclStmt									
ANR	3102476	Decl							int	int	coupling
ANR	3102477	DeclStmt									
ANR	3102478	Decl							int	int *	c_line
ANR	3102479	DeclStmt									
ANR	3102480	Decl							int	int	even_c1
ANR	3102481	DeclStmt									
ANR	3102482	Decl							int	int	rand_shift
ANR	3102483	DeclStmt									
ANR	3102484	Decl							int	int	even_rlimit
ANR	3102485	DeclStmt									
ANR	3102486	Decl							int	int [ M ]	count
ANR	3102487	Decl							int	int [ M ]	src_idx
ANR	3102488	DeclStmt									
ANR	3102489	Decl							int	int [ M ]	rs
ANR	3102490	DeclStmt									
ANR	3102491	Decl							int	int [ M ]	work_planes
ANR	3102492	DeclStmt									
ANR	3102493	Decl							int	int	n_work
ANR	3102494	DeclStmt									
ANR	3102495	Decl							int	int	work_idx
ANR	3102496	DeclStmt									
ANR	3102497	Decl							int	int	jmax
ANR	3102498	DeclStmt									
ANR	3102499	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102500	DeclStmt									
ANR	3102501	Decl							int	int *	wcl
ANR	3102502	DeclStmt									
ANR	3102503	Decl							uchar	uchar *	dst_ptr
ANR	3102504	DeclStmt									
ANR	3102505	Decl							int	int	plane_idx
ANR	3102506	DeclStmt									
ANR	3102507	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102508	DeclStmt									
ANR	3102509	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	3102510	DeclStmt									
ANR	3102511	Decl							int	int	new_r
ANR	3102512	DeclStmt									
ANR	3102513	Decl							const ET_Rll	const ET_Rll *	src_p
ANR	3102514	DeclStmt									
ANR	3102515	Decl							int	int *	lut
ANR	3102516	DeclStmt									
ANR	3102517	Decl							int	int *	rblut
ANR	3102518	DeclStmt									
ANR	3102519	Decl							char	char *	rslut
ANR	3102520	DeclStmt									
ANR	3102521	Decl							int	int	r_tmp
ANR	3102522	DeclStmt									
ANR	3102523	Decl							const int	const int	r_max
ANR	3102524	DeclStmt									
ANR	3102525	Decl							int	int	plane_idx
ANR	3102526	DeclStmt									
ANR	3102527	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102528	DeclStmt									
ANR	3102529	Decl							uchar	uchar *	dst_ptr
ANR	3102530	DeclStmt									
ANR	3102531	Decl							int	int	new_e_1_0
ANR	3102532	DeclStmt									
ANR	3102533	Decl							int	int	coupling_contribution
ANR	3102534	DeclStmt									
ANR	3102535	Decl							int	int	err
ANR	3102536	DeclStmt									
ANR	3102537	Decl							int	int	imo
ANR	3102538	DeclStmt									
ANR	3102539	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102540	DeclStmt									
ANR	3102541	Decl							int	int *	wcl
ANR	3102542	DeclStmt									
ANR	3102543	Decl							int	int	av
ANR	3102544	Decl							int	int	bv
ANR	3102545	Decl							int	int	rv
ANR	3102546	DeclStmt									
ANR	3102547	Decl							int	int	jmax
ANR	3102548	DeclStmt									
ANR	3102549	Decl							int	int [ M ]	a
ANR	3102550	Decl							int	int [ M ]	b
ANR	3102551	DeclStmt									
ANR	3102552	Decl							int	int [ M ]	a_sh
ANR	3102553	Decl							int	int [ M ]	b_sh
ANR	3102554	DeclStmt									
ANR	3102555	Decl							int	int [ M ]	e_1_0
ANR	3102556	Decl							int	int [ M ]	e_m1_1
ANR	3102557	Decl							int	int [ M ]	e_0_1
ANR	3102558	Decl							int	int [ M ]	e_1_1
ANR	3102559	DeclStmt									
ANR	3102560	Decl							int	int [ M ]	imraw
ANR	3102561	DeclStmt									
ANR	3102562	Decl							int	int [ M ]	iml
ANR	3102563	DeclStmt									
ANR	3102564	Decl							int	int	i
ANR	3102565	DeclStmt									
ANR	3102566	Decl							int	int	im
ANR	3102567	DeclStmt									
ANR	3102568	Decl							int	int *	lut
ANR	3102569	DeclStmt									
ANR	3102570	Decl							const ET_SrcPixel	const ET_SrcPixel *	ps
ANR	3102571	DeclStmt									
ANR	3102572	Decl							int	int *	pa
ANR	3102573	Decl							int	int *	pb
ANR	3102574	Decl							int	int *	piir
ANR	3102575	Decl							int	int *	pr
ANR	3102576	DeclStmt									
ANR	3102577	Decl							int	int *	pa_sh
ANR	3102578	Decl							int	int *	pb_sh
ANR	3102579	Decl							int	int *	pr_sh
ANR	3102580	DeclStmt									
ANR	3102581	Decl							int	int [ M ]	r
ANR	3102582	Decl							int	int	rb
ANR	3102583	Decl							int	int	rg
ANR	3102584	DeclStmt									
ANR	3102585	Decl							int	int [ M ]	r_sh
ANR	3102586	DeclStmt									
ANR	3102587	Decl							int	int *	rblut
ANR	3102588	DeclStmt									
ANR	3102589	Decl							int	int	xd
ANR	3102590	Decl							int	int	xrem
ANR	3102591	Decl							int	int	xs
ANR	3102592	DeclStmt									
ANR	3102593	Decl							uint32	uint32	seed1
ANR	3102594	DeclStmt									
ANR	3102595	Decl							uint32	uint32	seed2
ANR	3102596	DeclStmt									
ANR	3102597	Decl							uint32	uint32	sum
ANR	3102598	DeclStmt									
ANR	3102599	Decl							int	int	plane_idx
ANR	3102600	DeclStmt									
ANR	3102601	Decl							int	int [ M ]	r_scratch
ANR	3102602	DeclStmt									
ANR	3102603	Decl							int	int	src_idx
ANR	3102604	DeclStmt									
ANR	3102605	Decl							int	int	n_planes
ANR	3102606	DeclStmt									
ANR	3102607	Decl							int	int	levels
ANR	3102608	DeclStmt									
ANR	3102609	Decl							int	int	dith_mul
ANR	3102610	DeclStmt									
ANR	3102611	Decl							int	int	dith_mul
ANR	3102612	DeclStmt									
ANR	3102613	Decl							int	int	imo_mul
ANR	3102614	DeclStmt									
ANR	3102615	Decl							int	int	aspect2
ANR	3102616	DeclStmt									
ANR	3102617	Decl							int	int *	strengths
ANR	3102618	DeclStmt									
ANR	3102619	Decl							int	int	even_elo
ANR	3102620	DeclStmt									
ANR	3102621	Decl							int	int	even_ehi
ANR	3102622	DeclStmt									
ANR	3102623	Decl							int	int	coupling
ANR	3102624	DeclStmt									
ANR	3102625	Decl							int	int *	c_line
ANR	3102626	DeclStmt									
ANR	3102627	Decl							int	int	even_c1
ANR	3102628	DeclStmt									
ANR	3102629	Decl							int	int	rand_shift
ANR	3102630	DeclStmt									
ANR	3102631	Decl							int	int	even_rlimit
ANR	3102632	DeclStmt									
ANR	3102633	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102634	DeclStmt									
ANR	3102635	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	3102636	DeclStmt									
ANR	3102637	Decl							int	int	new_r
ANR	3102638	DeclStmt									
ANR	3102639	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102640	DeclStmt									
ANR	3102641	Decl							uchar	uchar *	dst_ptr
ANR	3102642	DeclStmt									
ANR	3102643	Decl							int	int	new_e_1_0
ANR	3102644	DeclStmt									
ANR	3102645	Decl							int	int	coupling_contribution
ANR	3102646	DeclStmt									
ANR	3102647	Decl							int	int	err
ANR	3102648	DeclStmt									
ANR	3102649	Decl							int	int	imo
ANR	3102650	DeclStmt									
ANR	3102651	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	3102652	DeclStmt									
ANR	3102653	Decl							int	int	av
ANR	3102654	Decl							int	int	bv
ANR	3102655	Decl							int	int	rv
ANR	3102656	DeclStmt									
ANR	3102657	Decl							int	int	av_sh
ANR	3102658	Decl							int	int	bv_sh
ANR	3102659	Decl							int	int	rv_sh
ANR	3102660	DeclStmt									
ANR	3102661	Decl							int	int	i
ANR	3102662	DeclStmt									
ANR	3102663	Decl							int	int	i
ANR	3102664	Function	even_better_compress_rll	1389:0:37660:39039							
ANR	3102665	FunctionDef	"even_better_compress_rll (ET_Rll * dst , const ET_SrcPixel * src , int src_width , int dst_width)"		3102664	0					
ANR	3102666	CompoundStatement		1392:0:37790:39039	3102664	0					
ANR	3102667	IdentifierDeclStatement	int rll_idx ;	1393:2:37794:37805	3102664	0	True				
ANR	3102668	IdentifierDecl	rll_idx		3102664	0					
ANR	3102669	IdentifierDeclType	int		3102664	0					
ANR	3102670	Identifier	rll_idx		3102664	1					
ANR	3102671	IdentifierDeclStatement	int i ;	1394:2:37809:37814	3102664	1	True				
ANR	3102672	IdentifierDecl	i		3102664	0					
ANR	3102673	IdentifierDeclType	int		3102664	0					
ANR	3102674	Identifier	i		3102664	1					
ANR	3102675	IdentifierDeclStatement	int count ;	1395:2:37818:37827	3102664	2	True				
ANR	3102676	IdentifierDecl	count		3102664	0					
ANR	3102677	IdentifierDeclType	int		3102664	0					
ANR	3102678	Identifier	count		3102664	1					
ANR	3102679	IdentifierDeclStatement	ET_SrcPixel last_val ;	1396:2:37831:37851	3102664	3	True				
ANR	3102680	IdentifierDecl	last_val		3102664	0					
ANR	3102681	IdentifierDeclType	ET_SrcPixel		3102664	0					
ANR	3102682	Identifier	last_val		3102664	1					
ANR	3102683	IdentifierDeclStatement	int whole = dst_width / src_width ;	1397:2:37855:37888	3102664	4	True				
ANR	3102684	IdentifierDecl	whole = dst_width / src_width		3102664	0					
ANR	3102685	IdentifierDeclType	int		3102664	0					
ANR	3102686	Identifier	whole		3102664	1					
ANR	3102687	AssignmentExpression	whole = dst_width / src_width		3102664	2		=			
ANR	3102688	Identifier	whole		3102664	0					
ANR	3102689	MultiplicativeExpression	dst_width / src_width		3102664	1		/			
ANR	3102690	Identifier	dst_width		3102664	0					
ANR	3102691	Identifier	src_width		3102664	1					
ANR	3102692	IdentifierDeclStatement	int frac = dst_width % src_width ;	1398:2:37892:37924	3102664	5	True				
ANR	3102693	IdentifierDecl	frac = dst_width % src_width		3102664	0					
ANR	3102694	IdentifierDeclType	int		3102664	0					
ANR	3102695	Identifier	frac		3102664	1					
ANR	3102696	AssignmentExpression	frac = dst_width % src_width		3102664	2		=			
ANR	3102697	Identifier	frac		3102664	0					
ANR	3102698	MultiplicativeExpression	dst_width % src_width		3102664	1		%			
ANR	3102699	Identifier	dst_width		3102664	0					
ANR	3102700	Identifier	src_width		3102664	1					
ANR	3102701	IdentifierDeclStatement	int rem ;	1399:2:37928:37935	3102664	6	True				
ANR	3102702	IdentifierDecl	rem		3102664	0					
ANR	3102703	IdentifierDeclType	int		3102664	0					
ANR	3102704	Identifier	rem		3102664	1					
ANR	3102705	ExpressionStatement	rll_idx = 0	1401:2:37940:37951	3102664	7	True				
ANR	3102706	AssignmentExpression	rll_idx = 0		3102664	0		=			
ANR	3102707	Identifier	rll_idx		3102664	0					
ANR	3102708	PrimaryExpression	0		3102664	1					
ANR	3102709	ExpressionStatement	last_val = src [ 0 ]	1402:2:37955:37972	3102664	8	True				
ANR	3102710	AssignmentExpression	last_val = src [ 0 ]		3102664	0		=			
ANR	3102711	Identifier	last_val		3102664	0					
ANR	3102712	ArrayIndexing	src [ 0 ]		3102664	1					
ANR	3102713	Identifier	src		3102664	0					
ANR	3102714	PrimaryExpression	0		3102664	1					
ANR	3102715	ExpressionStatement	count = whole	1403:2:37976:37989	3102664	9	True				
ANR	3102716	AssignmentExpression	count = whole		3102664	0		=			
ANR	3102717	Identifier	count		3102664	0					
ANR	3102718	Identifier	whole		3102664	1					
ANR	3102719	IfStatement	if ( frac == 0 )		3102664	10					
ANR	3102720	Condition	frac == 0	1404:6:37997:38005	3102664	0	True				
ANR	3102721	EqualityExpression	frac == 0		3102664	0		==			
ANR	3102722	Identifier	frac		3102664	0					
ANR	3102723	PrimaryExpression	0		3102664	1					
ANR	3102724	CompoundStatement		14:4:221:221	3102664	1					
ANR	3102725	ForStatement	for ( i = 1 ; i < src_width ; i ++ )		3102664	0					
ANR	3102726	ForInit	i = 1 ;	1406:11:38025:38030	3102664	0	True				
ANR	3102727	AssignmentExpression	i = 1		3102664	0		=			
ANR	3102728	Identifier	i		3102664	0					
ANR	3102729	PrimaryExpression	1		3102664	1					
ANR	3102730	Condition	i < src_width	1406:18:38032:38044	3102664	1	True				
ANR	3102731	RelationalExpression	i < src_width		3102664	0		<			
ANR	3102732	Identifier	i		3102664	0					
ANR	3102733	Identifier	src_width		3102664	1					
ANR	3102734	PostIncDecOperationExpression	i ++	1406:33:38047:38049	3102664	2	True				
ANR	3102735	Identifier	i		3102664	0					
ANR	3102736	IncDec	++		3102664	1					
ANR	3102737	CompoundStatement		17:10:281:305	3102664	3					
ANR	3102738	IdentifierDeclStatement	ET_SrcPixel val = src [ i ] ;	1408:10:38072:38096	3102664	0	True				
ANR	3102739	IdentifierDecl	val = src [ i ]		3102664	0					
ANR	3102740	IdentifierDeclType	ET_SrcPixel		3102664	0					
ANR	3102741	Identifier	val		3102664	1					
ANR	3102742	AssignmentExpression	val = src [ i ]		3102664	2		=			
ANR	3102743	Identifier	val		3102664	0					
ANR	3102744	ArrayIndexing	src [ i ]		3102664	1					
ANR	3102745	Identifier	src		3102664	0					
ANR	3102746	Identifier	i		3102664	1					
ANR	3102747	IfStatement	if ( count > 0xffff - whole || val != last_val )		3102664	1					
ANR	3102748	Condition	count > 0xffff - whole || val != last_val	1410:14:38113:38153	3102664	0	True				
ANR	3102749	OrExpression	count > 0xffff - whole || val != last_val		3102664	0		||			
ANR	3102750	RelationalExpression	count > 0xffff - whole		3102664	0		>			
ANR	3102751	Identifier	count		3102664	0					
ANR	3102752	AdditiveExpression	0xffff - whole		3102664	1		-			
ANR	3102753	PrimaryExpression	0xffff		3102664	0					
ANR	3102754	Identifier	whole		3102664	1					
ANR	3102755	EqualityExpression	val != last_val		3102664	1		!=			
ANR	3102756	Identifier	val		3102664	0					
ANR	3102757	Identifier	last_val		3102664	1					
ANR	3102758	CompoundStatement		20:12:377:377	3102664	1					
ANR	3102759	ExpressionStatement	dst [ rll_idx ] . length = count	1412:14:38184:38211	3102664	0	True				
ANR	3102760	AssignmentExpression	dst [ rll_idx ] . length = count		3102664	0		=			
ANR	3102761	MemberAccess	dst [ rll_idx ] . length		3102664	0					
ANR	3102762	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102763	Identifier	dst		3102664	0					
ANR	3102764	Identifier	rll_idx		3102664	1					
ANR	3102765	Identifier	length		3102664	1					
ANR	3102766	Identifier	count		3102664	1					
ANR	3102767	ExpressionStatement	dst [ rll_idx ] . value = last_val	1413:14:38227:38256	3102664	1	True				
ANR	3102768	AssignmentExpression	dst [ rll_idx ] . value = last_val		3102664	0		=			
ANR	3102769	MemberAccess	dst [ rll_idx ] . value		3102664	0					
ANR	3102770	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102771	Identifier	dst		3102664	0					
ANR	3102772	Identifier	rll_idx		3102664	1					
ANR	3102773	Identifier	value		3102664	1					
ANR	3102774	Identifier	last_val		3102664	1					
ANR	3102775	ExpressionStatement	rll_idx ++	1414:14:38272:38281	3102664	2	True				
ANR	3102776	PostIncDecOperationExpression	rll_idx ++		3102664	0					
ANR	3102777	Identifier	rll_idx		3102664	0					
ANR	3102778	IncDec	++		3102664	1					
ANR	3102779	ExpressionStatement	last_val = val	1415:14:38297:38311	3102664	3	True				
ANR	3102780	AssignmentExpression	last_val = val		3102664	0		=			
ANR	3102781	Identifier	last_val		3102664	0					
ANR	3102782	Identifier	val		3102664	1					
ANR	3102783	ExpressionStatement	count = 0	1416:14:38327:38336	3102664	4	True				
ANR	3102784	AssignmentExpression	count = 0		3102664	0		=			
ANR	3102785	Identifier	count		3102664	0					
ANR	3102786	PrimaryExpression	0		3102664	1					
ANR	3102787	ExpressionStatement	count += whole	1418:10:38362:38376	3102664	2	True				
ANR	3102788	AssignmentExpression	count += whole		3102664	0		+=			
ANR	3102789	Identifier	count		3102664	0					
ANR	3102790	Identifier	whole		3102664	1					
ANR	3102791	ElseStatement	else		3102664	0					
ANR	3102792	CompoundStatement		31:4:614:614	3102664	0					
ANR	3102793	ExpressionStatement	rem = frac	1423:6:38413:38423	3102664	0	True				
ANR	3102794	AssignmentExpression	rem = frac		3102664	0		=			
ANR	3102795	Identifier	rem		3102664	0					
ANR	3102796	Identifier	frac		3102664	1					
ANR	3102797	ForStatement	for ( i = 1 ; i < src_width ; i ++ )		3102664	1					
ANR	3102798	ForInit	i = 1 ;	1424:11:38436:38441	3102664	0	True				
ANR	3102799	AssignmentExpression	i = 1		3102664	0		=			
ANR	3102800	Identifier	i		3102664	0					
ANR	3102801	PrimaryExpression	1		3102664	1					
ANR	3102802	Condition	i < src_width	1424:18:38443:38455	3102664	1	True				
ANR	3102803	RelationalExpression	i < src_width		3102664	0		<			
ANR	3102804	Identifier	i		3102664	0					
ANR	3102805	Identifier	src_width		3102664	1					
ANR	3102806	PostIncDecOperationExpression	i ++	1424:33:38458:38460	3102664	2	True				
ANR	3102807	Identifier	i		3102664	0					
ANR	3102808	IncDec	++		3102664	1					
ANR	3102809	CompoundStatement		35:10:692:716	3102664	3					
ANR	3102810	IdentifierDeclStatement	ET_SrcPixel val = src [ i ] ;	1426:10:38483:38507	3102664	0	True				
ANR	3102811	IdentifierDecl	val = src [ i ]		3102664	0					
ANR	3102812	IdentifierDeclType	ET_SrcPixel		3102664	0					
ANR	3102813	Identifier	val		3102664	1					
ANR	3102814	AssignmentExpression	val = src [ i ]		3102664	2		=			
ANR	3102815	Identifier	val		3102664	0					
ANR	3102816	ArrayIndexing	src [ i ]		3102664	1					
ANR	3102817	Identifier	src		3102664	0					
ANR	3102818	Identifier	i		3102664	1					
ANR	3102819	IfStatement	if ( count >= 0xffff - whole || val != last_val )		3102664	1					
ANR	3102820	Condition	count >= 0xffff - whole || val != last_val	1428:14:38524:38565	3102664	0	True				
ANR	3102821	OrExpression	count >= 0xffff - whole || val != last_val		3102664	0		||			
ANR	3102822	RelationalExpression	count >= 0xffff - whole		3102664	0		>=			
ANR	3102823	Identifier	count		3102664	0					
ANR	3102824	AdditiveExpression	0xffff - whole		3102664	1		-			
ANR	3102825	PrimaryExpression	0xffff		3102664	0					
ANR	3102826	Identifier	whole		3102664	1					
ANR	3102827	EqualityExpression	val != last_val		3102664	1		!=			
ANR	3102828	Identifier	val		3102664	0					
ANR	3102829	Identifier	last_val		3102664	1					
ANR	3102830	CompoundStatement		38:12:789:789	3102664	1					
ANR	3102831	ExpressionStatement	dst [ rll_idx ] . length = count	1430:14:38596:38623	3102664	0	True				
ANR	3102832	AssignmentExpression	dst [ rll_idx ] . length = count		3102664	0		=			
ANR	3102833	MemberAccess	dst [ rll_idx ] . length		3102664	0					
ANR	3102834	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102835	Identifier	dst		3102664	0					
ANR	3102836	Identifier	rll_idx		3102664	1					
ANR	3102837	Identifier	length		3102664	1					
ANR	3102838	Identifier	count		3102664	1					
ANR	3102839	ExpressionStatement	dst [ rll_idx ] . value = last_val	1431:14:38639:38668	3102664	1	True				
ANR	3102840	AssignmentExpression	dst [ rll_idx ] . value = last_val		3102664	0		=			
ANR	3102841	MemberAccess	dst [ rll_idx ] . value		3102664	0					
ANR	3102842	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102843	Identifier	dst		3102664	0					
ANR	3102844	Identifier	rll_idx		3102664	1					
ANR	3102845	Identifier	value		3102664	1					
ANR	3102846	Identifier	last_val		3102664	1					
ANR	3102847	ExpressionStatement	rll_idx ++	1432:14:38684:38693	3102664	2	True				
ANR	3102848	PostIncDecOperationExpression	rll_idx ++		3102664	0					
ANR	3102849	Identifier	rll_idx		3102664	0					
ANR	3102850	IncDec	++		3102664	1					
ANR	3102851	ExpressionStatement	last_val = val	1433:14:38709:38723	3102664	3	True				
ANR	3102852	AssignmentExpression	last_val = val		3102664	0		=			
ANR	3102853	Identifier	last_val		3102664	0					
ANR	3102854	Identifier	val		3102664	1					
ANR	3102855	ExpressionStatement	count = 0	1434:14:38739:38748	3102664	4	True				
ANR	3102856	AssignmentExpression	count = 0		3102664	0		=			
ANR	3102857	Identifier	count		3102664	0					
ANR	3102858	PrimaryExpression	0		3102664	1					
ANR	3102859	ExpressionStatement	count += whole	1436:10:38774:38788	3102664	2	True				
ANR	3102860	AssignmentExpression	count += whole		3102664	0		+=			
ANR	3102861	Identifier	count		3102664	0					
ANR	3102862	Identifier	whole		3102664	1					
ANR	3102863	ExpressionStatement	rem += frac	1437:10:38800:38811	3102664	3	True				
ANR	3102864	AssignmentExpression	rem += frac		3102664	0		+=			
ANR	3102865	Identifier	rem		3102664	0					
ANR	3102866	Identifier	frac		3102664	1					
ANR	3102867	IfStatement	if ( rem >= src_width )		3102664	4					
ANR	3102868	Condition	rem >= src_width	1438:14:38827:38842	3102664	0	True				
ANR	3102869	RelationalExpression	rem >= src_width		3102664	0		>=			
ANR	3102870	Identifier	rem		3102664	0					
ANR	3102871	Identifier	src_width		3102664	1					
ANR	3102872	CompoundStatement		48:12:1066:1066	3102664	1					
ANR	3102873	ExpressionStatement	count ++	1440:14:38873:38880	3102664	0	True				
ANR	3102874	PostIncDecOperationExpression	count ++		3102664	0					
ANR	3102875	Identifier	count		3102664	0					
ANR	3102876	IncDec	++		3102664	1					
ANR	3102877	ExpressionStatement	rem -= src_width	1441:14:38896:38912	3102664	1	True				
ANR	3102878	AssignmentExpression	rem -= src_width		3102664	0		-=			
ANR	3102879	Identifier	rem		3102664	0					
ANR	3102880	Identifier	src_width		3102664	1					
ANR	3102881	ExpressionStatement	dst [ rll_idx ] . length = count	1445:2:38946:38973	3102664	11	True				
ANR	3102882	AssignmentExpression	dst [ rll_idx ] . length = count		3102664	0		=			
ANR	3102883	MemberAccess	dst [ rll_idx ] . length		3102664	0					
ANR	3102884	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102885	Identifier	dst		3102664	0					
ANR	3102886	Identifier	rll_idx		3102664	1					
ANR	3102887	Identifier	length		3102664	1					
ANR	3102888	Identifier	count		3102664	1					
ANR	3102889	ExpressionStatement	dst [ rll_idx ] . value = last_val	1446:2:38977:39006	3102664	12	True				
ANR	3102890	AssignmentExpression	dst [ rll_idx ] . value = last_val		3102664	0		=			
ANR	3102891	MemberAccess	dst [ rll_idx ] . value		3102664	0					
ANR	3102892	ArrayIndexing	dst [ rll_idx ]		3102664	0					
ANR	3102893	Identifier	dst		3102664	0					
ANR	3102894	Identifier	rll_idx		3102664	1					
ANR	3102895	Identifier	value		3102664	1					
ANR	3102896	Identifier	last_val		3102664	1					
ANR	3102897	ExpressionStatement	rll_idx ++	1447:2:39010:39019	3102664	13	True				
ANR	3102898	PostIncDecOperationExpression	rll_idx ++		3102664	0					
ANR	3102899	Identifier	rll_idx		3102664	0					
ANR	3102900	IncDec	++		3102664	1					
ANR	3102901	ReturnStatement	return rll_idx ;	1448:2:39023:39037	3102664	14	True				
ANR	3102902	Identifier	rll_idx		3102664	0					
ANR	3102903	ReturnType	static int		3102664	1					
ANR	3102904	Identifier	even_better_compress_rll		3102664	2					
ANR	3102905	ParameterList	"ET_Rll * dst , const ET_SrcPixel * src , int src_width , int dst_width"		3102664	3					
ANR	3102906	Parameter	ET_Rll * dst	1390:26:37697:37707	3102664	0	True				
ANR	3102907	ParameterType	ET_Rll *		3102664	0					
ANR	3102908	Identifier	dst		3102664	1					
ANR	3102909	Parameter	const ET_SrcPixel * src	1390:39:37710:37731	3102664	1	True				
ANR	3102910	ParameterType	const ET_SrcPixel *		3102664	0					
ANR	3102911	Identifier	src		3102664	1					
ANR	3102912	Parameter	int src_width	1391:26:37760:37772	3102664	2	True				
ANR	3102913	ParameterType	int		3102664	0					
ANR	3102914	Identifier	src_width		3102664	1					
ANR	3102915	Parameter	int dst_width	1391:41:37775:37787	3102664	3	True				
ANR	3102916	ParameterType	int		3102664	0					
ANR	3102917	Identifier	dst_width		3102664	1					
ANR	3102918	CFGEntryNode	ENTRY		3102664		True				
ANR	3102919	CFGExitNode	EXIT		3102664		True				
ANR	3102920	Symbol	rll_idx		3102664						
ANR	3102921	Symbol	val		3102664						
ANR	3102922	Symbol	dst_width		3102664						
ANR	3102923	Symbol	dst		3102664						
ANR	3102924	Symbol	src		3102664						
ANR	3102925	Symbol	dst [ rll_idx ] . length		3102664						
ANR	3102926	Symbol	count		3102664						
ANR	3102927	Symbol	i		3102664						
ANR	3102928	Symbol	whole		3102664						
ANR	3102929	Symbol	* rll_idx		3102664						
ANR	3102930	Symbol	src_width		3102664						
ANR	3102931	Symbol	* src		3102664						
ANR	3102932	Symbol	dst [ rll_idx ] . value		3102664						
ANR	3102933	Symbol	last_val		3102664						
ANR	3102934	Symbol	* dst		3102664						
ANR	3102935	Symbol	* i		3102664						
ANR	3102936	Symbol	rem		3102664						
ANR	3102937	Symbol	frac		3102664						
ANR	3102938	DeclStmt									
ANR	3102939	Decl							ET_Rll	ET_Rll * [ M ]	rll_buf
ANR	3102940	DeclStmt									
ANR	3102941	Decl							int	int	i
ANR	3102942	DeclStmt									
ANR	3102943	Decl							int	int	source_width
ANR	3102944	DeclStmt									
ANR	3102945	Decl							int	int	dest_width
ANR	3102946	Function	even_better_plane_free	1493:0:40165:40442							
ANR	3102947	FunctionDef	even_better_plane_free (EBPlaneCtx * ctx)		3102946	0					
ANR	3102948	CompoundStatement		1495:0:40218:40442	3102946	0					
ANR	3102949	ExpressionStatement	free ( ctx -> rb_line )	1496:2:40222:40241	3102946	0	True				
ANR	3102950	CallExpression	free ( ctx -> rb_line )		3102946	0					
ANR	3102951	Callee	free		3102946	0					
ANR	3102952	Identifier	free		3102946	0					
ANR	3102953	ArgumentList	ctx -> rb_line		3102946	1					
ANR	3102954	Argument	ctx -> rb_line		3102946	0					
ANR	3102955	PtrMemberAccess	ctx -> rb_line		3102946	0					
ANR	3102956	Identifier	ctx		3102946	0					
ANR	3102957	Identifier	rb_line		3102946	1					
ANR	3102958	ExpressionStatement	free ( ctx -> iir_line )	1497:2:40245:40265	3102946	1	True				
ANR	3102959	CallExpression	free ( ctx -> iir_line )		3102946	0					
ANR	3102960	Callee	free		3102946	0					
ANR	3102961	Identifier	free		3102946	0					
ANR	3102962	ArgumentList	ctx -> iir_line		3102946	1					
ANR	3102963	Argument	ctx -> iir_line		3102946	0					
ANR	3102964	PtrMemberAccess	ctx -> iir_line		3102946	0					
ANR	3102965	Identifier	ctx		3102946	0					
ANR	3102966	Identifier	iir_line		3102946	1					
ANR	3102967	ExpressionStatement	free ( ctx -> r_line )	1498:2:40269:40287	3102946	2	True				
ANR	3102968	CallExpression	free ( ctx -> r_line )		3102946	0					
ANR	3102969	Callee	free		3102946	0					
ANR	3102970	Identifier	free		3102946	0					
ANR	3102971	ArgumentList	ctx -> r_line		3102946	1					
ANR	3102972	Argument	ctx -> r_line		3102946	0					
ANR	3102973	PtrMemberAccess	ctx -> r_line		3102946	0					
ANR	3102974	Identifier	ctx		3102946	0					
ANR	3102975	Identifier	r_line		3102946	1					
ANR	3102976	ExpressionStatement	free ( ctx -> a_line )	1499:2:40291:40309	3102946	3	True				
ANR	3102977	CallExpression	free ( ctx -> a_line )		3102946	0					
ANR	3102978	Callee	free		3102946	0					
ANR	3102979	Identifier	free		3102946	0					
ANR	3102980	ArgumentList	ctx -> a_line		3102946	1					
ANR	3102981	Argument	ctx -> a_line		3102946	0					
ANR	3102982	PtrMemberAccess	ctx -> a_line		3102946	0					
ANR	3102983	Identifier	ctx		3102946	0					
ANR	3102984	Identifier	a_line		3102946	1					
ANR	3102985	ExpressionStatement	free ( ctx -> b_line )	1500:2:40313:40331	3102946	4	True				
ANR	3102986	CallExpression	free ( ctx -> b_line )		3102946	0					
ANR	3102987	Callee	free		3102946	0					
ANR	3102988	Identifier	free		3102946	0					
ANR	3102989	ArgumentList	ctx -> b_line		3102946	1					
ANR	3102990	Argument	ctx -> b_line		3102946	0					
ANR	3102991	PtrMemberAccess	ctx -> b_line		3102946	0					
ANR	3102992	Identifier	ctx		3102946	0					
ANR	3102993	Identifier	b_line		3102946	1					
ANR	3102994	ExpressionStatement	free ( ctx -> lut )	1501:2:40335:40350	3102946	5	True				
ANR	3102995	CallExpression	free ( ctx -> lut )		3102946	0					
ANR	3102996	Callee	free		3102946	0					
ANR	3102997	Identifier	free		3102946	0					
ANR	3102998	ArgumentList	ctx -> lut		3102946	1					
ANR	3102999	Argument	ctx -> lut		3102946	0					
ANR	3103000	PtrMemberAccess	ctx -> lut		3102946	0					
ANR	3103001	Identifier	ctx		3102946	0					
ANR	3103002	Identifier	lut		3102946	1					
ANR	3103003	ExpressionStatement	free ( ctx -> rb_lut )	1502:2:40354:40372	3102946	6	True				
ANR	3103004	CallExpression	free ( ctx -> rb_lut )		3102946	0					
ANR	3103005	Callee	free		3102946	0					
ANR	3103006	Identifier	free		3102946	0					
ANR	3103007	ArgumentList	ctx -> rb_lut		3102946	1					
ANR	3103008	Argument	ctx -> rb_lut		3102946	0					
ANR	3103009	PtrMemberAccess	ctx -> rb_lut		3102946	0					
ANR	3103010	Identifier	ctx		3102946	0					
ANR	3103011	Identifier	rb_lut		3102946	1					
ANR	3103012	ExpressionStatement	free ( ctx -> rs_lut )	1503:2:40376:40394	3102946	7	True				
ANR	3103013	CallExpression	free ( ctx -> rs_lut )		3102946	0					
ANR	3103014	Callee	free		3102946	0					
ANR	3103015	Identifier	free		3102946	0					
ANR	3103016	ArgumentList	ctx -> rs_lut		3102946	1					
ANR	3103017	Argument	ctx -> rs_lut		3102946	0					
ANR	3103018	PtrMemberAccess	ctx -> rs_lut		3102946	0					
ANR	3103019	Identifier	ctx		3102946	0					
ANR	3103020	Identifier	rs_lut		3102946	1					
ANR	3103021	ExpressionStatement	free ( ctx -> white_count_line )	1504:2:40398:40426	3102946	8	True				
ANR	3103022	CallExpression	free ( ctx -> white_count_line )		3102946	0					
ANR	3103023	Callee	free		3102946	0					
ANR	3103024	Identifier	free		3102946	0					
ANR	3103025	ArgumentList	ctx -> white_count_line		3102946	1					
ANR	3103026	Argument	ctx -> white_count_line		3102946	0					
ANR	3103027	PtrMemberAccess	ctx -> white_count_line		3102946	0					
ANR	3103028	Identifier	ctx		3102946	0					
ANR	3103029	Identifier	white_count_line		3102946	1					
ANR	3103030	ExpressionStatement	free ( ctx )	1505:2:40430:40440	3102946	9	True				
ANR	3103031	CallExpression	free ( ctx )		3102946	0					
ANR	3103032	Callee	free		3102946	0					
ANR	3103033	Identifier	free		3102946	0					
ANR	3103034	ArgumentList	ctx		3102946	1					
ANR	3103035	Argument	ctx		3102946	0					
ANR	3103036	Identifier	ctx		3102946	0					
ANR	3103037	ReturnType	static void		3102946	1					
ANR	3103038	Identifier	even_better_plane_free		3102946	2					
ANR	3103039	ParameterList	EBPlaneCtx * ctx		3102946	3					
ANR	3103040	Parameter	EBPlaneCtx * ctx	1494:24:40201:40215	3102946	0	True				
ANR	3103041	ParameterType	EBPlaneCtx *		3102946	0					
ANR	3103042	Identifier	ctx		3102946	1					
ANR	3103043	CFGEntryNode	ENTRY		3102946		True				
ANR	3103044	CFGExitNode	EXIT		3102946		True				
ANR	3103045	Symbol	ctx -> rb_line		3102946						
ANR	3103046	Symbol	ctx -> iir_line		3102946						
ANR	3103047	Symbol	ctx -> lut		3102946						
ANR	3103048	Symbol	ctx		3102946						
ANR	3103049	Symbol	ctx -> b_line		3102946						
ANR	3103050	Symbol	ctx -> rb_lut		3102946						
ANR	3103051	Symbol	ctx -> r_line		3102946						
ANR	3103052	Symbol	ctx -> rs_lut		3102946						
ANR	3103053	Symbol	* ctx		3102946						
ANR	3103054	Symbol	ctx -> white_count_line		3102946						
ANR	3103055	Symbol	ctx -> a_line		3102946						
ANR	3103056	Function	even_log2	1508:0:40445:40553							
ANR	3103057	FunctionDef	even_log2 (int x)		3103056	0					
ANR	3103058	CompoundStatement		1510:0:40474:40553	3103056	0					
ANR	3103059	IdentifierDeclStatement	int y = 0 ;	1511:2:40478:40487	3103056	0	True				
ANR	3103060	IdentifierDecl	y = 0		3103056	0					
ANR	3103061	IdentifierDeclType	int		3103056	0					
ANR	3103062	Identifier	y		3103056	1					
ANR	3103063	AssignmentExpression	y = 0		3103056	2		=			
ANR	3103064	Identifier	y		3103056	0					
ANR	3103065	PrimaryExpression	0		3103056	1					
ANR	3103066	IdentifierDeclStatement	int z ;	1512:2:40491:40496	3103056	1	True				
ANR	3103067	IdentifierDecl	z		3103056	0					
ANR	3103068	IdentifierDeclType	int		3103056	0					
ANR	3103069	Identifier	z		3103056	1					
ANR	3103070	ForStatement	for ( z = x ; z > 1 ; z = z >> 1 )		3103056	2					
ANR	3103071	ForInit	z = x ;	1514:7:40506:40511	3103056	0	True				
ANR	3103072	AssignmentExpression	z = x		3103056	0		=			
ANR	3103073	Identifier	z		3103056	0					
ANR	3103074	Identifier	x		3103056	1					
ANR	3103075	Condition	z > 1	1514:14:40513:40517	3103056	1	True				
ANR	3103076	RelationalExpression	z > 1		3103056	0		>			
ANR	3103077	Identifier	z		3103056	0					
ANR	3103078	PrimaryExpression	1		3103056	1					
ANR	3103079	AssignmentExpression	z = z >> 1	1514:21:40520:40529	3103056	2	True	=			
ANR	3103080	Identifier	z		3103056	0					
ANR	3103081	ShiftExpression	z >> 1		3103056	1		>>			
ANR	3103082	Identifier	z		3103056	0					
ANR	3103083	PrimaryExpression	1		3103056	1					
ANR	3103084	ExpressionStatement	y ++	1515:4:40536:40539	3103056	3	True				
ANR	3103085	PostIncDecOperationExpression	y ++		3103056	0					
ANR	3103086	Identifier	y		3103056	0					
ANR	3103087	IncDec	++		3103056	1					
ANR	3103088	ReturnStatement	return y ;	1516:2:40543:40551	3103056	3	True				
ANR	3103089	Identifier	y		3103056	0					
ANR	3103090	ReturnType	static int		3103056	1					
ANR	3103091	Identifier	even_log2		3103056	2					
ANR	3103092	ParameterList	int x		3103056	3					
ANR	3103093	Parameter	int x	1509:11:40467:40471	3103056	0	True				
ANR	3103094	ParameterType	int		3103056	0					
ANR	3103095	Identifier	x		3103056	1					
ANR	3103096	CFGEntryNode	ENTRY		3103056		True				
ANR	3103097	CFGExitNode	EXIT		3103056		True				
ANR	3103098	Symbol	x		3103056						
ANR	3103099	Symbol	y		3103056						
ANR	3103100	Symbol	z		3103056						
ANR	3103101	Function	even_better_plane_new	1536:0:41170:44590							
ANR	3103102	FunctionDef	"even_better_plane_new (const EvenBetterParams * params , EvenBetterCtx * ebc , int plane_idx)"		3103101	0					
ANR	3103103	CompoundStatement		1539:0:41303:44590	3103101	0					
ANR	3103104	IdentifierDeclStatement	int source_width = params -> source_width ;	1540:2:41307:41346	3103101	0	True				
ANR	3103105	IdentifierDecl	source_width = params -> source_width		3103101	0					
ANR	3103106	IdentifierDeclType	int		3103101	0					
ANR	3103107	Identifier	source_width		3103101	1					
ANR	3103108	AssignmentExpression	source_width = params -> source_width		3103101	2		=			
ANR	3103109	Identifier	source_width		3103101	0					
ANR	3103110	PtrMemberAccess	params -> source_width		3103101	1					
ANR	3103111	Identifier	params		3103101	0					
ANR	3103112	Identifier	source_width		3103101	1					
ANR	3103113	IdentifierDeclStatement	int dest_width = params -> dest_width ;	1541:2:41350:41385	3103101	1	True				
ANR	3103114	IdentifierDecl	dest_width = params -> dest_width		3103101	0					
ANR	3103115	IdentifierDeclType	int		3103101	0					
ANR	3103116	Identifier	dest_width		3103101	1					
ANR	3103117	AssignmentExpression	dest_width = params -> dest_width		3103101	2		=			
ANR	3103118	Identifier	dest_width		3103101	0					
ANR	3103119	PtrMemberAccess	params -> dest_width		3103101	1					
ANR	3103120	Identifier	params		3103101	0					
ANR	3103121	Identifier	dest_width		3103101	1					
ANR	3103122	IdentifierDeclStatement	int * lut = params -> luts [ plane_idx ] ;	1542:2:41389:41423	3103101	2	True				
ANR	3103123	IdentifierDecl	* lut = params -> luts [ plane_idx ]		3103101	0					
ANR	3103124	IdentifierDeclType	int *		3103101	0					
ANR	3103125	Identifier	lut		3103101	1					
ANR	3103126	AssignmentExpression	* lut = params -> luts [ plane_idx ]		3103101	2		=			
ANR	3103127	Identifier	lut		3103101	0					
ANR	3103128	ArrayIndexing	params -> luts [ plane_idx ]		3103101	1					
ANR	3103129	PtrMemberAccess	params -> luts		3103101	0					
ANR	3103130	Identifier	params		3103101	0					
ANR	3103131	Identifier	luts		3103101	1					
ANR	3103132	Identifier	plane_idx		3103101	1					
ANR	3103133	IdentifierDeclStatement	EBPlaneCtx * result ;	1543:2:41427:41445	3103101	3	True				
ANR	3103134	IdentifierDecl	* result		3103101	0					
ANR	3103135	IdentifierDeclType	EBPlaneCtx *		3103101	0					
ANR	3103136	Identifier	result		3103101	1					
ANR	3103137	IdentifierDeclStatement	int i ;	1544:2:41449:41454	3103101	4	True				
ANR	3103138	IdentifierDecl	i		3103101	0					
ANR	3103139	IdentifierDeclType	int		3103101	0					
ANR	3103140	Identifier	i		3103101	1					
ANR	3103141	IdentifierDeclStatement	int * new_lut ;	1545:2:41458:41470	3103101	5	True				
ANR	3103142	IdentifierDecl	* new_lut		3103101	0					
ANR	3103143	IdentifierDeclType	int *		3103101	0					
ANR	3103144	Identifier	new_lut		3103101	1					
ANR	3103145	IdentifierDeclStatement	int * rb_lut ;	1546:2:41474:41485	3103101	6	True				
ANR	3103146	IdentifierDecl	* rb_lut		3103101	0					
ANR	3103147	IdentifierDeclType	int *		3103101	0					
ANR	3103148	Identifier	rb_lut		3103101	1					
ANR	3103149	IdentifierDeclStatement	char * rs_lut ;	1547:2:41489:41501	3103101	7	True				
ANR	3103150	IdentifierDecl	* rs_lut		3103101	0					
ANR	3103151	IdentifierDeclType	char *		3103101	0					
ANR	3103152	Identifier	rs_lut		3103101	1					
ANR	3103153	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	1548:2:41505:41548	3103101	8	True				
ANR	3103154	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		3103101	0					
ANR	3103155	IdentifierDeclType	double		3103101	0					
ANR	3103156	Identifier	rbscale		3103101	1					
ANR	3103157	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		3103101	2		=			
ANR	3103158	Identifier	rbscale		3103101	0					
ANR	3103159	CallExpression	eb_compute_rbscale ( params )		3103101	1					
ANR	3103160	Callee	eb_compute_rbscale		3103101	0					
ANR	3103161	Identifier	eb_compute_rbscale		3103101	0					
ANR	3103162	ArgumentList	params		3103101	1					
ANR	3103163	Argument	params		3103101	0					
ANR	3103164	Identifier	params		3103101	0					
ANR	3103165	IdentifierDeclStatement	int even_c1 = ebc -> even_c1 ;	1549:2:41552:41578	3103101	9	True				
ANR	3103166	IdentifierDecl	even_c1 = ebc -> even_c1		3103101	0					
ANR	3103167	IdentifierDeclType	int		3103101	0					
ANR	3103168	Identifier	even_c1		3103101	1					
ANR	3103169	AssignmentExpression	even_c1 = ebc -> even_c1		3103101	2		=			
ANR	3103170	Identifier	even_c1		3103101	0					
ANR	3103171	PtrMemberAccess	ebc -> even_c1		3103101	1					
ANR	3103172	Identifier	ebc		3103101	0					
ANR	3103173	Identifier	even_c1		3103101	1					
ANR	3103174	IdentifierDeclStatement	int even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 ) ;	1550:2:41582:41632	3103101	10	True				
ANR	3103175	IdentifierDecl	even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 )		3103101	0					
ANR	3103176	IdentifierDeclType	int		3103101	0					
ANR	3103177	Identifier	even_rlimit		3103101	1					
ANR	3103178	AssignmentExpression	even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 )		3103101	2		=			
ANR	3103179	Identifier	even_rlimit		3103101	0					
ANR	3103180	ShiftExpression	1 << ( 30 - EVEN_SHIFT + even_c1 )		3103101	1		<<			
ANR	3103181	PrimaryExpression	1		3103101	0					
ANR	3103182	AdditiveExpression	30 - EVEN_SHIFT + even_c1		3103101	1		-			
ANR	3103183	PrimaryExpression	30		3103101	0					
ANR	3103184	AdditiveExpression	EVEN_SHIFT + even_c1		3103101	1		+			
ANR	3103185	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103186	Identifier	even_c1		3103101	1					
ANR	3103187	IdentifierDeclStatement	int do_shadows = params -> do_shadows ;	1551:2:41636:41671	3103101	11	True				
ANR	3103188	IdentifierDecl	do_shadows = params -> do_shadows		3103101	0					
ANR	3103189	IdentifierDeclType	int		3103101	0					
ANR	3103190	Identifier	do_shadows		3103101	1					
ANR	3103191	AssignmentExpression	do_shadows = params -> do_shadows		3103101	2		=			
ANR	3103192	Identifier	do_shadows		3103101	0					
ANR	3103193	PtrMemberAccess	params -> do_shadows		3103101	1					
ANR	3103194	Identifier	params		3103101	0					
ANR	3103195	Identifier	do_shadows		3103101	1					
ANR	3103196	IdentifierDeclStatement	int log2_levels ;	1552:2:41675:41690	3103101	12	True				
ANR	3103197	IdentifierDecl	log2_levels		3103101	0					
ANR	3103198	IdentifierDeclType	int		3103101	0					
ANR	3103199	Identifier	log2_levels		3103101	1					
ANR	3103200	IdentifierDeclStatement	int rs_base ;	1553:2:41694:41705	3103101	13	True				
ANR	3103201	IdentifierDecl	rs_base		3103101	0					
ANR	3103202	IdentifierDeclType	int		3103101	0					
ANR	3103203	Identifier	rs_base		3103101	1					
ANR	3103204	ExpressionStatement	result = ( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )	1555:2:41710:41760	3103101	14	True				
ANR	3103205	AssignmentExpression	result = ( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )		3103101	0		=			
ANR	3103206	Identifier	result		3103101	0					
ANR	3103207	CastExpression	( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )		3103101	1					
ANR	3103208	CastTarget	EBPlaneCtx *		3103101	0					
ANR	3103209	CallExpression	malloc ( sizeof ( EBPlaneCtx ) )		3103101	1					
ANR	3103210	Callee	malloc		3103101	0					
ANR	3103211	Identifier	malloc		3103101	0					
ANR	3103212	ArgumentList	sizeof ( EBPlaneCtx )		3103101	1					
ANR	3103213	Argument	sizeof ( EBPlaneCtx )		3103101	0					
ANR	3103214	SizeofExpression	sizeof ( EBPlaneCtx )		3103101	0					
ANR	3103215	Sizeof	sizeof		3103101	0					
ANR	3103216	SizeofOperand	EBPlaneCtx		3103101	1					
ANR	3103217	ExpressionStatement	result -> source_width = source_width	1557:2:41765:41800	3103101	15	True				
ANR	3103218	AssignmentExpression	result -> source_width = source_width		3103101	0		=			
ANR	3103219	PtrMemberAccess	result -> source_width		3103101	0					
ANR	3103220	Identifier	result		3103101	0					
ANR	3103221	Identifier	source_width		3103101	1					
ANR	3103222	Identifier	source_width		3103101	1					
ANR	3103223	ExpressionStatement	result -> dest_width = dest_width	1558:2:41804:41835	3103101	16	True				
ANR	3103224	AssignmentExpression	result -> dest_width = dest_width		3103101	0		=			
ANR	3103225	PtrMemberAccess	result -> dest_width		3103101	0					
ANR	3103226	Identifier	result		3103101	0					
ANR	3103227	Identifier	dest_width		3103101	1					
ANR	3103228	Identifier	dest_width		3103101	1					
ANR	3103229	ExpressionStatement	new_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1560:2:41840:41896	3103101	17	True				
ANR	3103230	AssignmentExpression	new_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	0		=			
ANR	3103231	Identifier	new_lut		3103101	0					
ANR	3103232	CastExpression	( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103233	CastTarget	int *		3103101	0					
ANR	3103234	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103235	Callee	malloc		3103101	0					
ANR	3103236	Identifier	malloc		3103101	0					
ANR	3103237	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	1					
ANR	3103238	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0					
ANR	3103239	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0		*			
ANR	3103240	AdditiveExpression	ET_SRC_MAX + 1		3103101	0		+			
ANR	3103241	Identifier	ET_SRC_MAX		3103101	0					
ANR	3103242	PrimaryExpression	1		3103101	1					
ANR	3103243	SizeofExpression	sizeof ( int )		3103101	1					
ANR	3103244	Sizeof	sizeof		3103101	0					
ANR	3103245	SizeofOperand	int		3103101	1					
ANR	3103246	ForStatement	for ( i = 0 ; i < ET_SRC_MAX + 1 ; i ++ )		3103101	18					
ANR	3103247	ForInit	i = 0 ;	1561:7:41905:41910	3103101	0	True				
ANR	3103248	AssignmentExpression	i = 0		3103101	0		=			
ANR	3103249	Identifier	i		3103101	0					
ANR	3103250	PrimaryExpression	0		3103101	1					
ANR	3103251	Condition	i < ET_SRC_MAX + 1	1561:14:41912:41929	3103101	1	True				
ANR	3103252	RelationalExpression	i < ET_SRC_MAX + 1		3103101	0		<			
ANR	3103253	Identifier	i		3103101	0					
ANR	3103254	AdditiveExpression	ET_SRC_MAX + 1		3103101	1		+			
ANR	3103255	Identifier	ET_SRC_MAX		3103101	0					
ANR	3103256	PrimaryExpression	1		3103101	1					
ANR	3103257	PostIncDecOperationExpression	i ++	1561:34:41932:41934	3103101	2	True				
ANR	3103258	Identifier	i		3103101	0					
ANR	3103259	IncDec	++		3103101	1					
ANR	3103260	CompoundStatement		25:6:645:652	3103101	3					
ANR	3103261	IdentifierDeclStatement	int nli ;	1563:6:41949:41956	3103101	0	True				
ANR	3103262	IdentifierDecl	nli		3103101	0					
ANR	3103263	IdentifierDeclType	int		3103101	0					
ANR	3103264	Identifier	nli		3103101	1					
ANR	3103265	IfStatement	if ( lut == NULL )		3103101	1					
ANR	3103266	Condition	lut == NULL	1565:10:41969:41979	3103101	0	True				
ANR	3103267	EqualityExpression	lut == NULL		3103101	0		==			
ANR	3103268	Identifier	lut		3103101	0					
ANR	3103269	Identifier	NULL		3103101	1					
ANR	3103270	CompoundStatement		28:8:686:686	3103101	1					
ANR	3103271	ExpressionStatement	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )	1568:10:42024:42073	3103101	0	True				
ANR	3103272	AssignmentExpression	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )		3103101	0		=			
ANR	3103273	Identifier	nli		3103101	0					
ANR	3103274	ShiftExpression	( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )		3103101	1		>>			
ANR	3103275	AdditiveExpression	i * 65793 + ( i >> 7 )		3103101	0		+			
ANR	3103276	MultiplicativeExpression	i * 65793		3103101	0		*			
ANR	3103277	Identifier	i		3103101	0					
ANR	3103278	PrimaryExpression	65793		3103101	1					
ANR	3103279	ShiftExpression	i >> 7		3103101	1		>>			
ANR	3103280	Identifier	i		3103101	0					
ANR	3103281	PrimaryExpression	7		3103101	1					
ANR	3103282	AdditiveExpression	24 - EVEN_SHIFT		3103101	1		-			
ANR	3103283	PrimaryExpression	24		3103101	0					
ANR	3103284	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103285	ElseStatement	else		3103101	0					
ANR	3103286	ExpressionStatement	nli = lut [ i ] >> ( 24 - EVEN_SHIFT )	1574:8:42188:42221	3103101	0	True				
ANR	3103287	AssignmentExpression	nli = lut [ i ] >> ( 24 - EVEN_SHIFT )		3103101	0		=			
ANR	3103288	Identifier	nli		3103101	0					
ANR	3103289	ShiftExpression	lut [ i ] >> ( 24 - EVEN_SHIFT )		3103101	1		>>			
ANR	3103290	ArrayIndexing	lut [ i ]		3103101	0					
ANR	3103291	Identifier	lut		3103101	0					
ANR	3103292	Identifier	i		3103101	1					
ANR	3103293	AdditiveExpression	24 - EVEN_SHIFT		3103101	1		-			
ANR	3103294	PrimaryExpression	24		3103101	0					
ANR	3103295	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103296	ExpressionStatement	new_lut [ i ] = ( 1 << EVEN_SHIFT ) - nli	1575:6:42229:42265	3103101	2	True				
ANR	3103297	AssignmentExpression	new_lut [ i ] = ( 1 << EVEN_SHIFT ) - nli		3103101	0		=			
ANR	3103298	ArrayIndexing	new_lut [ i ]		3103101	0					
ANR	3103299	Identifier	new_lut		3103101	0					
ANR	3103300	Identifier	i		3103101	1					
ANR	3103301	AdditiveExpression	( 1 << EVEN_SHIFT ) - nli		3103101	1		-			
ANR	3103302	ShiftExpression	1 << EVEN_SHIFT		3103101	0		<<			
ANR	3103303	PrimaryExpression	1		3103101	0					
ANR	3103304	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103305	Identifier	nli		3103101	1					
ANR	3103306	ExpressionStatement	rb_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1578:2:42276:42331	3103101	19	True				
ANR	3103307	AssignmentExpression	rb_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	0		=			
ANR	3103308	Identifier	rb_lut		3103101	0					
ANR	3103309	CastExpression	( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103310	CastTarget	int *		3103101	0					
ANR	3103311	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103312	Callee	malloc		3103101	0					
ANR	3103313	Identifier	malloc		3103101	0					
ANR	3103314	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	1					
ANR	3103315	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0					
ANR	3103316	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0		*			
ANR	3103317	AdditiveExpression	ET_SRC_MAX + 1		3103101	0		+			
ANR	3103318	Identifier	ET_SRC_MAX		3103101	0					
ANR	3103319	PrimaryExpression	1		3103101	1					
ANR	3103320	SizeofExpression	sizeof ( int )		3103101	1					
ANR	3103321	Sizeof	sizeof		3103101	0					
ANR	3103322	SizeofOperand	int		3103101	1					
ANR	3103323	ExpressionStatement	rs_lut = ( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1579:2:42335:42391	3103101	20	True				
ANR	3103324	AssignmentExpression	rs_lut = ( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	0		=			
ANR	3103325	Identifier	rs_lut		3103101	0					
ANR	3103326	CastExpression	( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103327	CastTarget	char *		3103101	0					
ANR	3103328	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		3103101	1					
ANR	3103329	Callee	malloc		3103101	0					
ANR	3103330	Identifier	malloc		3103101	0					
ANR	3103331	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	1					
ANR	3103332	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0					
ANR	3103333	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		3103101	0		*			
ANR	3103334	AdditiveExpression	ET_SRC_MAX + 1		3103101	0		+			
ANR	3103335	Identifier	ET_SRC_MAX		3103101	0					
ANR	3103336	PrimaryExpression	1		3103101	1					
ANR	3103337	SizeofExpression	sizeof ( int )		3103101	1					
ANR	3103338	Sizeof	sizeof		3103101	0					
ANR	3103339	SizeofOperand	int		3103101	1					
ANR	3103340	ExpressionStatement	log2_levels = even_log2 ( params -> levels )	1581:2:42396:42436	3103101	21	True				
ANR	3103341	AssignmentExpression	log2_levels = even_log2 ( params -> levels )		3103101	0		=			
ANR	3103342	Identifier	log2_levels		3103101	0					
ANR	3103343	CallExpression	even_log2 ( params -> levels )		3103101	1					
ANR	3103344	Callee	even_log2		3103101	0					
ANR	3103345	Identifier	even_log2		3103101	0					
ANR	3103346	ArgumentList	params -> levels		3103101	1					
ANR	3103347	Argument	params -> levels		3103101	0					
ANR	3103348	PtrMemberAccess	params -> levels		3103101	0					
ANR	3103349	Identifier	params		3103101	0					
ANR	3103350	Identifier	levels		3103101	1					
ANR	3103351	ExpressionStatement	rs_base = 35 - EVEN_SHIFT + log2_levels - params -> rand_scale	1582:2:42440:42500	3103101	22	True				
ANR	3103352	AssignmentExpression	rs_base = 35 - EVEN_SHIFT + log2_levels - params -> rand_scale		3103101	0		=			
ANR	3103353	Identifier	rs_base		3103101	0					
ANR	3103354	AdditiveExpression	35 - EVEN_SHIFT + log2_levels - params -> rand_scale		3103101	1		-			
ANR	3103355	PrimaryExpression	35		3103101	0					
ANR	3103356	AdditiveExpression	EVEN_SHIFT + log2_levels - params -> rand_scale		3103101	1		+			
ANR	3103357	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103358	AdditiveExpression	log2_levels - params -> rand_scale		3103101	1		-			
ANR	3103359	Identifier	log2_levels		3103101	0					
ANR	3103360	PtrMemberAccess	params -> rand_scale		3103101	1					
ANR	3103361	Identifier	params		3103101	0					
ANR	3103362	Identifier	rand_scale		3103101	1					
ANR	3103363	ForStatement	for ( i = 0 ; i <= ET_SRC_MAX ; i ++ )		3103101	23					
ANR	3103364	ForInit	i = 0 ;	1584:7:42510:42515	3103101	0	True				
ANR	3103365	AssignmentExpression	i = 0		3103101	0		=			
ANR	3103366	Identifier	i		3103101	0					
ANR	3103367	PrimaryExpression	0		3103101	1					
ANR	3103368	Condition	i <= ET_SRC_MAX	1584:14:42517:42531	3103101	1	True				
ANR	3103369	RelationalExpression	i <= ET_SRC_MAX		3103101	0		<=			
ANR	3103370	Identifier	i		3103101	0					
ANR	3103371	Identifier	ET_SRC_MAX		3103101	1					
ANR	3103372	PostIncDecOperationExpression	i ++	1584:31:42534:42536	3103101	2	True				
ANR	3103373	Identifier	i		3103101	0					
ANR	3103374	IncDec	++		3103101	1					
ANR	3103375	CompoundStatement		50:6:1314:1320	3103101	3					
ANR	3103376	IdentifierDeclStatement	double rb ;	1586:6:42551:42560	3103101	0	True				
ANR	3103377	IdentifierDecl	rb		3103101	0					
ANR	3103378	IdentifierDeclType	double		3103101	0					
ANR	3103379	Identifier	rb		3103101	1					
ANR	3103380	IdentifierDeclStatement	int nl = new_lut [ i ] * ( params -> levels - 1 ) ;	1587:6:42568:42610	3103101	1	True				
ANR	3103381	IdentifierDecl	nl = new_lut [ i ] * ( params -> levels - 1 )		3103101	0					
ANR	3103382	IdentifierDeclType	int		3103101	0					
ANR	3103383	Identifier	nl		3103101	1					
ANR	3103384	AssignmentExpression	nl = new_lut [ i ] * ( params -> levels - 1 )		3103101	2		=			
ANR	3103385	Identifier	nl		3103101	0					
ANR	3103386	MultiplicativeExpression	new_lut [ i ] * ( params -> levels - 1 )		3103101	1		*			
ANR	3103387	ArrayIndexing	new_lut [ i ]		3103101	0					
ANR	3103388	Identifier	new_lut		3103101	0					
ANR	3103389	Identifier	i		3103101	1					
ANR	3103390	AdditiveExpression	params -> levels - 1		3103101	1		-			
ANR	3103391	PtrMemberAccess	params -> levels		3103101	0					
ANR	3103392	Identifier	params		3103101	0					
ANR	3103393	Identifier	levels		3103101	1					
ANR	3103394	PrimaryExpression	1		3103101	1					
ANR	3103395	IdentifierDeclStatement	int rs ;	1588:6:42618:42624	3103101	2	True				
ANR	3103396	IdentifierDecl	rs		3103101	0					
ANR	3103397	IdentifierDeclType	int		3103101	0					
ANR	3103398	Identifier	rs		3103101	1					
ANR	3103399	IfStatement	if ( nl == 0 )		3103101	3					
ANR	3103400	Condition	nl == 0	1590:10:42637:42643	3103101	0	True				
ANR	3103401	EqualityExpression	nl == 0		3103101	0		==			
ANR	3103402	Identifier	nl		3103101	0					
ANR	3103403	PrimaryExpression	0		3103101	1					
ANR	3103404	ExpressionStatement	rb = 0	1591:8:42654:42660	3103101	1	True				
ANR	3103405	AssignmentExpression	rb = 0		3103101	0		=			
ANR	3103406	Identifier	rb		3103101	0					
ANR	3103407	PrimaryExpression	0		3103101	1					
ANR	3103408	ElseStatement	else		3103101	0					
ANR	3103409	CompoundStatement		55:8:1377:1377	3103101	0					
ANR	3103410	ExpressionStatement	rb = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl	1594:10:42693:42748	3103101	0	True				
ANR	3103411	AssignmentExpression	rb = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		3103101	0		=			
ANR	3103412	Identifier	rb		3103101	0					
ANR	3103413	MultiplicativeExpression	( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		3103101	1		/			
ANR	3103414	MultiplicativeExpression	rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) )		3103101	0		*			
ANR	3103415	Identifier	rbscale		3103101	0					
ANR	3103416	ShiftExpression	1 << ( 2 * EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103417	PrimaryExpression	1		3103101	0					
ANR	3103418	AdditiveExpression	2 * EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103419	MultiplicativeExpression	2 * EVEN_SHIFT		3103101	0		*			
ANR	3103420	PrimaryExpression	2		3103101	0					
ANR	3103421	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103422	Identifier	even_c1		3103101	1					
ANR	3103423	Identifier	nl		3103101	1					
ANR	3103424	IfStatement	if ( rb > even_rlimit << ( EVEN_SHIFT - even_c1 ) )		3103101	1					
ANR	3103425	Condition	rb > even_rlimit << ( EVEN_SHIFT - even_c1 )	1595:14:42764:42805	3103101	0	True				
ANR	3103426	RelationalExpression	rb > even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	0		>			
ANR	3103427	Identifier	rb		3103101	0					
ANR	3103428	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103429	Identifier	even_rlimit		3103101	0					
ANR	3103430	AdditiveExpression	EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103431	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103432	Identifier	even_c1		3103101	1					
ANR	3103433	ExpressionStatement	rb = even_rlimit << ( EVEN_SHIFT - even_c1 )	1596:12:42820:42862	3103101	1	True				
ANR	3103434	AssignmentExpression	rb = even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	0		=			
ANR	3103435	Identifier	rb		3103101	0					
ANR	3103436	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103437	Identifier	even_rlimit		3103101	0					
ANR	3103438	AdditiveExpression	EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103439	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103440	Identifier	even_c1		3103101	1					
ANR	3103441	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"	1599:6:42881:42947	3103101	4	True				
ANR	3103442	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"		3103101	0		=			
ANR	3103443	Identifier	rs		3103101	0					
ANR	3103444	CallExpression	"eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"		3103101	1					
ANR	3103445	Callee	eb_compute_randshift		3103101	0					
ANR	3103446	Identifier	eb_compute_randshift		3103101	0					
ANR	3103447	ArgumentList	nl		3103101	1					
ANR	3103448	Argument	nl		3103101	0					
ANR	3103449	Identifier	nl		3103101	0					
ANR	3103450	Argument	rs_base		3103101	1					
ANR	3103451	Identifier	rs_base		3103101	0					
ANR	3103452	Argument	do_shadows		3103101	2					
ANR	3103453	Identifier	do_shadows		3103101	0					
ANR	3103454	Argument	params -> levels		3103101	3					
ANR	3103455	PtrMemberAccess	params -> levels		3103101	0					
ANR	3103456	Identifier	params		3103101	0					
ANR	3103457	Identifier	levels		3103101	1					
ANR	3103458	ExpressionStatement	rs_lut [ i ] = rs	1600:6:42955:42969	3103101	5	True				
ANR	3103459	AssignmentExpression	rs_lut [ i ] = rs		3103101	0		=			
ANR	3103460	ArrayIndexing	rs_lut [ i ]		3103101	0					
ANR	3103461	Identifier	rs_lut		3103101	0					
ANR	3103462	Identifier	i		3103101	1					
ANR	3103463	Identifier	rs		3103101	1					
ANR	3103464	IfStatement	if ( params -> do_shadows )		3103101	6					
ANR	3103465	Condition	params -> do_shadows	1602:10:42982:42999	3103101	0	True				
ANR	3103466	PtrMemberAccess	params -> do_shadows		3103101	0					
ANR	3103467	Identifier	params		3103101	0					
ANR	3103468	Identifier	do_shadows		3103101	1					
ANR	3103469	CompoundStatement		65:8:1706:1706	3103101	1					
ANR	3103470	ExpressionStatement	nl = ( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )	1604:10:43022:43082	3103101	0	True				
ANR	3103471	AssignmentExpression	nl = ( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )		3103101	0		=			
ANR	3103472	Identifier	nl		3103101	0					
ANR	3103473	MultiplicativeExpression	( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )		3103101	1		*			
ANR	3103474	AdditiveExpression	( 1 << EVEN_SHIFT ) - new_lut [ i ]		3103101	0		-			
ANR	3103475	ShiftExpression	1 << EVEN_SHIFT		3103101	0		<<			
ANR	3103476	PrimaryExpression	1		3103101	0					
ANR	3103477	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103478	ArrayIndexing	new_lut [ i ]		3103101	1					
ANR	3103479	Identifier	new_lut		3103101	0					
ANR	3103480	Identifier	i		3103101	1					
ANR	3103481	AdditiveExpression	params -> levels - 1		3103101	1		-			
ANR	3103482	PtrMemberAccess	params -> levels		3103101	0					
ANR	3103483	Identifier	params		3103101	0					
ANR	3103484	Identifier	levels		3103101	1					
ANR	3103485	PrimaryExpression	1		3103101	1					
ANR	3103486	IfStatement	if ( nl == 0 )		3103101	1					
ANR	3103487	Condition	nl == 0	1606:14:43099:43105	3103101	0	True				
ANR	3103488	EqualityExpression	nl == 0		3103101	0		==			
ANR	3103489	Identifier	nl		3103101	0					
ANR	3103490	PrimaryExpression	0		3103101	1					
ANR	3103491	ExpressionStatement	rb = 0	1607:12:43120:43126	3103101	1	True				
ANR	3103492	AssignmentExpression	rb = 0		3103101	0		=			
ANR	3103493	Identifier	rb		3103101	0					
ANR	3103494	PrimaryExpression	0		3103101	1					
ANR	3103495	ElseStatement	else		3103101	0					
ANR	3103496	CompoundStatement		72:14:1867:1876	3103101	0					
ANR	3103497	IdentifierDeclStatement	int rb_sh ;	1610:14:43171:43180	3103101	0	True				
ANR	3103498	IdentifierDecl	rb_sh		3103101	0					
ANR	3103499	IdentifierDeclType	int		3103101	0					
ANR	3103500	Identifier	rb_sh		3103101	1					
ANR	3103501	ExpressionStatement	rb_sh = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl	1611:14:43196:43254	3103101	1	True				
ANR	3103502	AssignmentExpression	rb_sh = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		3103101	0		=			
ANR	3103503	Identifier	rb_sh		3103101	0					
ANR	3103504	MultiplicativeExpression	( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		3103101	1		/			
ANR	3103505	MultiplicativeExpression	rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) )		3103101	0		*			
ANR	3103506	Identifier	rbscale		3103101	0					
ANR	3103507	ShiftExpression	1 << ( 2 * EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103508	PrimaryExpression	1		3103101	0					
ANR	3103509	AdditiveExpression	2 * EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103510	MultiplicativeExpression	2 * EVEN_SHIFT		3103101	0		*			
ANR	3103511	PrimaryExpression	2		3103101	0					
ANR	3103512	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103513	Identifier	even_c1		3103101	1					
ANR	3103514	Identifier	nl		3103101	1					
ANR	3103515	IfStatement	if ( rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 ) )		3103101	2					
ANR	3103516	Condition	rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 )	1612:18:43274:43318	3103101	0	True				
ANR	3103517	RelationalExpression	rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	0		>			
ANR	3103518	Identifier	rb_sh		3103101	0					
ANR	3103519	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103520	Identifier	even_rlimit		3103101	0					
ANR	3103521	AdditiveExpression	EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103522	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103523	Identifier	even_c1		3103101	1					
ANR	3103524	ExpressionStatement	rb_sh = even_rlimit << ( EVEN_SHIFT - even_c1 )	1613:16:43337:43382	3103101	1	True				
ANR	3103525	AssignmentExpression	rb_sh = even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	0		=			
ANR	3103526	Identifier	rb_sh		3103101	0					
ANR	3103527	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		3103101	1		<<			
ANR	3103528	Identifier	even_rlimit		3103101	0					
ANR	3103529	AdditiveExpression	EVEN_SHIFT - even_c1		3103101	1		-			
ANR	3103530	Identifier	EVEN_SHIFT		3103101	0					
ANR	3103531	Identifier	even_c1		3103101	1					
ANR	3103532	ExpressionStatement	rb -= rb_sh	1614:14:43398:43409	3103101	3	True				
ANR	3103533	AssignmentExpression	rb -= rb_sh		3103101	0		-=			
ANR	3103534	Identifier	rb		3103101	0					
ANR	3103535	Identifier	rb_sh		3103101	1					
ANR	3103536	ExpressionStatement	rb_lut [ i ] = rb	1617:6:43441:43455	3103101	7	True				
ANR	3103537	AssignmentExpression	rb_lut [ i ] = rb		3103101	0		=			
ANR	3103538	ArrayIndexing	rb_lut [ i ]		3103101	0					
ANR	3103539	Identifier	rb_lut		3103101	0					
ANR	3103540	Identifier	i		3103101	1					
ANR	3103541	Identifier	rb		3103101	1					
ANR	3103542	ExpressionStatement	result -> lut = new_lut	1621:2:43467:43488	3103101	24	True				
ANR	3103543	AssignmentExpression	result -> lut = new_lut		3103101	0		=			
ANR	3103544	PtrMemberAccess	result -> lut		3103101	0					
ANR	3103545	Identifier	result		3103101	0					
ANR	3103546	Identifier	lut		3103101	1					
ANR	3103547	Identifier	new_lut		3103101	1					
ANR	3103548	ExpressionStatement	result -> rb_lut = rb_lut	1622:2:43492:43515	3103101	25	True				
ANR	3103549	AssignmentExpression	result -> rb_lut = rb_lut		3103101	0		=			
ANR	3103550	PtrMemberAccess	result -> rb_lut		3103101	0					
ANR	3103551	Identifier	result		3103101	0					
ANR	3103552	Identifier	rb_lut		3103101	1					
ANR	3103553	Identifier	rb_lut		3103101	1					
ANR	3103554	ExpressionStatement	result -> rs_lut = rs_lut	1623:2:43519:43542	3103101	26	True				
ANR	3103555	AssignmentExpression	result -> rs_lut = rs_lut		3103101	0		=			
ANR	3103556	PtrMemberAccess	result -> rs_lut		3103101	0					
ANR	3103557	Identifier	result		3103101	0					
ANR	3103558	Identifier	rs_lut		3103101	1					
ANR	3103559	Identifier	rs_lut		3103101	1					
ANR	3103560	ExpressionStatement	"result -> rb_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1625:2:43547:43604	3103101	27	True				
ANR	3103561	AssignmentExpression	"result -> rb_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103562	PtrMemberAccess	result -> rb_line		3103101	0					
ANR	3103563	Identifier	result		3103101	0					
ANR	3103564	Identifier	rb_line		3103101	1					
ANR	3103565	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103566	CastTarget	int *		3103101	0					
ANR	3103567	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103568	Callee	calloc		3103101	0					
ANR	3103569	Identifier	calloc		3103101	0					
ANR	3103570	ArgumentList	dest_width		3103101	1					
ANR	3103571	Argument	dest_width		3103101	0					
ANR	3103572	Identifier	dest_width		3103101	0					
ANR	3103573	Argument	sizeof ( int )		3103101	1					
ANR	3103574	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103575	Sizeof	sizeof		3103101	0					
ANR	3103576	SizeofOperand	int		3103101	1					
ANR	3103577	ExpressionStatement	"result -> iir_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1626:2:43608:43666	3103101	28	True				
ANR	3103578	AssignmentExpression	"result -> iir_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103579	PtrMemberAccess	result -> iir_line		3103101	0					
ANR	3103580	Identifier	result		3103101	0					
ANR	3103581	Identifier	iir_line		3103101	1					
ANR	3103582	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103583	CastTarget	int *		3103101	0					
ANR	3103584	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103585	Callee	calloc		3103101	0					
ANR	3103586	Identifier	calloc		3103101	0					
ANR	3103587	ArgumentList	dest_width		3103101	1					
ANR	3103588	Argument	dest_width		3103101	0					
ANR	3103589	Identifier	dest_width		3103101	0					
ANR	3103590	Argument	sizeof ( int )		3103101	1					
ANR	3103591	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103592	Sizeof	sizeof		3103101	0					
ANR	3103593	SizeofOperand	int		3103101	1					
ANR	3103594	ExpressionStatement	"result -> r_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1627:2:43670:43726	3103101	29	True				
ANR	3103595	AssignmentExpression	"result -> r_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103596	PtrMemberAccess	result -> r_line		3103101	0					
ANR	3103597	Identifier	result		3103101	0					
ANR	3103598	Identifier	r_line		3103101	1					
ANR	3103599	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103600	CastTarget	int *		3103101	0					
ANR	3103601	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103602	Callee	calloc		3103101	0					
ANR	3103603	Identifier	calloc		3103101	0					
ANR	3103604	ArgumentList	dest_width		3103101	1					
ANR	3103605	Argument	dest_width		3103101	0					
ANR	3103606	Identifier	dest_width		3103101	0					
ANR	3103607	Argument	sizeof ( int )		3103101	1					
ANR	3103608	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103609	Sizeof	sizeof		3103101	0					
ANR	3103610	SizeofOperand	int		3103101	1					
ANR	3103611	ExpressionStatement	"result -> a_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1628:2:43730:43786	3103101	30	True				
ANR	3103612	AssignmentExpression	"result -> a_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103613	PtrMemberAccess	result -> a_line		3103101	0					
ANR	3103614	Identifier	result		3103101	0					
ANR	3103615	Identifier	a_line		3103101	1					
ANR	3103616	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103617	CastTarget	int *		3103101	0					
ANR	3103618	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103619	Callee	calloc		3103101	0					
ANR	3103620	Identifier	calloc		3103101	0					
ANR	3103621	ArgumentList	dest_width		3103101	1					
ANR	3103622	Argument	dest_width		3103101	0					
ANR	3103623	Identifier	dest_width		3103101	0					
ANR	3103624	Argument	sizeof ( int )		3103101	1					
ANR	3103625	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103626	Sizeof	sizeof		3103101	0					
ANR	3103627	SizeofOperand	int		3103101	1					
ANR	3103628	ExpressionStatement	"result -> b_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1629:2:43790:43846	3103101	31	True				
ANR	3103629	AssignmentExpression	"result -> b_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103630	PtrMemberAccess	result -> b_line		3103101	0					
ANR	3103631	Identifier	result		3103101	0					
ANR	3103632	Identifier	b_line		3103101	1					
ANR	3103633	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103634	CastTarget	int *		3103101	0					
ANR	3103635	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103636	Callee	calloc		3103101	0					
ANR	3103637	Identifier	calloc		3103101	0					
ANR	3103638	ArgumentList	dest_width		3103101	1					
ANR	3103639	Argument	dest_width		3103101	0					
ANR	3103640	Identifier	dest_width		3103101	0					
ANR	3103641	Argument	sizeof ( int )		3103101	1					
ANR	3103642	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103643	Sizeof	sizeof		3103101	0					
ANR	3103644	SizeofOperand	int		3103101	1					
ANR	3103645	ExpressionStatement	"result -> white_count_line = ( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"	1630:2:43850:43928	3103101	32	True				
ANR	3103646	AssignmentExpression	"result -> white_count_line = ( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		3103101	0		=			
ANR	3103647	PtrMemberAccess	result -> white_count_line		3103101	0					
ANR	3103648	Identifier	result		3103101	0					
ANR	3103649	Identifier	white_count_line		3103101	1					
ANR	3103650	CastExpression	"( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		3103101	1					
ANR	3103651	CastTarget	int *		3103101	0					
ANR	3103652	CallExpression	"calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		3103101	1					
ANR	3103653	Callee	calloc		3103101	0					
ANR	3103654	Identifier	calloc		3103101	0					
ANR	3103655	ArgumentList	( dest_width + 15 ) >> 4		3103101	1					
ANR	3103656	Argument	( dest_width + 15 ) >> 4		3103101	0					
ANR	3103657	ShiftExpression	( dest_width + 15 ) >> 4		3103101	0		>>			
ANR	3103658	AdditiveExpression	dest_width + 15		3103101	0		+			
ANR	3103659	Identifier	dest_width		3103101	0					
ANR	3103660	PrimaryExpression	15		3103101	1					
ANR	3103661	PrimaryExpression	4		3103101	1					
ANR	3103662	Argument	sizeof ( int )		3103101	1					
ANR	3103663	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103664	Sizeof	sizeof		3103101	0					
ANR	3103665	SizeofOperand	int		3103101	1					
ANR	3103666	IfStatement	if ( do_shadows )		3103101	33					
ANR	3103667	Condition	do_shadows	1631:6:43936:43945	3103101	0	True				
ANR	3103668	Identifier	do_shadows		3103101	0					
ANR	3103669	CompoundStatement		94:4:2648:2648	3103101	1					
ANR	3103670	ExpressionStatement	"result -> r_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1633:6:43960:44019	3103101	0	True				
ANR	3103671	AssignmentExpression	"result -> r_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103672	PtrMemberAccess	result -> r_line_sh		3103101	0					
ANR	3103673	Identifier	result		3103101	0					
ANR	3103674	Identifier	r_line_sh		3103101	1					
ANR	3103675	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103676	CastTarget	int *		3103101	0					
ANR	3103677	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103678	Callee	calloc		3103101	0					
ANR	3103679	Identifier	calloc		3103101	0					
ANR	3103680	ArgumentList	dest_width		3103101	1					
ANR	3103681	Argument	dest_width		3103101	0					
ANR	3103682	Identifier	dest_width		3103101	0					
ANR	3103683	Argument	sizeof ( int )		3103101	1					
ANR	3103684	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103685	Sizeof	sizeof		3103101	0					
ANR	3103686	SizeofOperand	int		3103101	1					
ANR	3103687	ExpressionStatement	"result -> a_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1634:6:44027:44086	3103101	1	True				
ANR	3103688	AssignmentExpression	"result -> a_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103689	PtrMemberAccess	result -> a_line_sh		3103101	0					
ANR	3103690	Identifier	result		3103101	0					
ANR	3103691	Identifier	a_line_sh		3103101	1					
ANR	3103692	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103693	CastTarget	int *		3103101	0					
ANR	3103694	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103695	Callee	calloc		3103101	0					
ANR	3103696	Identifier	calloc		3103101	0					
ANR	3103697	ArgumentList	dest_width		3103101	1					
ANR	3103698	Argument	dest_width		3103101	0					
ANR	3103699	Identifier	dest_width		3103101	0					
ANR	3103700	Argument	sizeof ( int )		3103101	1					
ANR	3103701	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103702	Sizeof	sizeof		3103101	0					
ANR	3103703	SizeofOperand	int		3103101	1					
ANR	3103704	ExpressionStatement	"result -> b_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1635:6:44094:44153	3103101	2	True				
ANR	3103705	AssignmentExpression	"result -> b_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	0		=			
ANR	3103706	PtrMemberAccess	result -> b_line_sh		3103101	0					
ANR	3103707	Identifier	result		3103101	0					
ANR	3103708	Identifier	b_line_sh		3103101	1					
ANR	3103709	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103710	CastTarget	int *		3103101	0					
ANR	3103711	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		3103101	1					
ANR	3103712	Callee	calloc		3103101	0					
ANR	3103713	Identifier	calloc		3103101	0					
ANR	3103714	ArgumentList	dest_width		3103101	1					
ANR	3103715	Argument	dest_width		3103101	0					
ANR	3103716	Identifier	dest_width		3103101	0					
ANR	3103717	Argument	sizeof ( int )		3103101	1					
ANR	3103718	SizeofExpression	sizeof ( int )		3103101	0					
ANR	3103719	Sizeof	sizeof		3103101	0					
ANR	3103720	SizeofOperand	int		3103101	1					
ANR	3103721	ElseStatement	else		3103101	0					
ANR	3103722	CompoundStatement		100:4:2868:2868	3103101	0					
ANR	3103723	ExpressionStatement	result -> r_line_sh = NULL	1639:6:44180:44204	3103101	0	True				
ANR	3103724	AssignmentExpression	result -> r_line_sh = NULL		3103101	0		=			
ANR	3103725	PtrMemberAccess	result -> r_line_sh		3103101	0					
ANR	3103726	Identifier	result		3103101	0					
ANR	3103727	Identifier	r_line_sh		3103101	1					
ANR	3103728	Identifier	NULL		3103101	1					
ANR	3103729	ExpressionStatement	result -> a_line_sh = NULL	1640:6:44212:44236	3103101	1	True				
ANR	3103730	AssignmentExpression	result -> a_line_sh = NULL		3103101	0		=			
ANR	3103731	PtrMemberAccess	result -> a_line_sh		3103101	0					
ANR	3103732	Identifier	result		3103101	0					
ANR	3103733	Identifier	a_line_sh		3103101	1					
ANR	3103734	Identifier	NULL		3103101	1					
ANR	3103735	ExpressionStatement	result -> b_line_sh = NULL	1641:6:44244:44268	3103101	2	True				
ANR	3103736	AssignmentExpression	result -> b_line_sh = NULL		3103101	0		=			
ANR	3103737	PtrMemberAccess	result -> b_line_sh		3103101	0					
ANR	3103738	Identifier	result		3103101	0					
ANR	3103739	Identifier	b_line_sh		3103101	1					
ANR	3103740	Identifier	NULL		3103101	1					
ANR	3103741	ForStatement	for ( i = 0 ; i < dest_width ; i ++ )		3103101	34					
ANR	3103742	ForInit	i = 0 ;	1643:7:44283:44288	3103101	0	True				
ANR	3103743	AssignmentExpression	i = 0		3103101	0		=			
ANR	3103744	Identifier	i		3103101	0					
ANR	3103745	PrimaryExpression	0		3103101	1					
ANR	3103746	Condition	i < dest_width	1643:14:44290:44303	3103101	1	True				
ANR	3103747	RelationalExpression	i < dest_width		3103101	0		<			
ANR	3103748	Identifier	i		3103101	0					
ANR	3103749	Identifier	dest_width		3103101	1					
ANR	3103750	PostIncDecOperationExpression	i ++	1643:30:44306:44308	3103101	2	True				
ANR	3103751	Identifier	i		3103101	0					
ANR	3103752	IncDec	++		3103101	1					
ANR	3103753	CompoundStatement		106:4:3011:3011	3103101	3					
ANR	3103754	ExpressionStatement	result -> a_line [ i ] = 1	1645:6:44323:44344	3103101	0	True				
ANR	3103755	AssignmentExpression	result -> a_line [ i ] = 1		3103101	0		=			
ANR	3103756	ArrayIndexing	result -> a_line [ i ]		3103101	0					
ANR	3103757	PtrMemberAccess	result -> a_line		3103101	0					
ANR	3103758	Identifier	result		3103101	0					
ANR	3103759	Identifier	a_line		3103101	1					
ANR	3103760	Identifier	i		3103101	1					
ANR	3103761	PrimaryExpression	1		3103101	1					
ANR	3103762	ExpressionStatement	result -> b_line [ i ] = 1	1646:6:44352:44373	3103101	1	True				
ANR	3103763	AssignmentExpression	result -> b_line [ i ] = 1		3103101	0		=			
ANR	3103764	ArrayIndexing	result -> b_line [ i ]		3103101	0					
ANR	3103765	PtrMemberAccess	result -> b_line		3103101	0					
ANR	3103766	Identifier	result		3103101	0					
ANR	3103767	Identifier	b_line		3103101	1					
ANR	3103768	Identifier	i		3103101	1					
ANR	3103769	PrimaryExpression	1		3103101	1					
ANR	3103770	ExpressionStatement	result -> iir_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )	1647:6:44381:44450	3103101	2	True				
ANR	3103771	AssignmentExpression	result -> iir_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )		3103101	0		=			
ANR	3103772	ArrayIndexing	result -> iir_line [ i ]		3103101	0					
ANR	3103773	PtrMemberAccess	result -> iir_line		3103101	0					
ANR	3103774	Identifier	result		3103101	0					
ANR	3103775	Identifier	iir_line		3103101	1					
ANR	3103776	Identifier	i		3103101	1					
ANR	3103777	ShiftExpression	- ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )		3103101	1		>>			
ANR	3103778	UnaryOperationExpression	- ( ( rand ( ) & 0x7fff ) << 6 )		3103101	0					
ANR	3103779	UnaryOperator	-		3103101	0					
ANR	3103780	ShiftExpression	( rand ( ) & 0x7fff ) << 6		3103101	1		<<			
ANR	3103781	BitAndExpression	rand ( ) & 0x7fff		3103101	0		&			
ANR	3103782	CallExpression	rand ( )		3103101	0					
ANR	3103783	Callee	rand		3103101	0					
ANR	3103784	Identifier	rand		3103101	0					
ANR	3103785	ArgumentList			3103101	1					
ANR	3103786	PrimaryExpression	0x7fff		3103101	1					
ANR	3103787	PrimaryExpression	6		3103101	1					
ANR	3103788	AdditiveExpression	24 - EVEN_SHIFT		3103101	1		-			
ANR	3103789	PrimaryExpression	24		3103101	0					
ANR	3103790	Identifier	EVEN_SHIFT		3103101	1					
ANR	3103791	IfStatement	if ( do_shadows )		3103101	3					
ANR	3103792	Condition	do_shadows	1648:10:44462:44471	3103101	0	True				
ANR	3103793	Identifier	do_shadows		3103101	0					
ANR	3103794	CompoundStatement		111:8:3178:3178	3103101	1					
ANR	3103795	ExpressionStatement	result -> a_line_sh [ i ] = 1	1650:10:44494:44518	3103101	0	True				
ANR	3103796	AssignmentExpression	result -> a_line_sh [ i ] = 1		3103101	0		=			
ANR	3103797	ArrayIndexing	result -> a_line_sh [ i ]		3103101	0					
ANR	3103798	PtrMemberAccess	result -> a_line_sh		3103101	0					
ANR	3103799	Identifier	result		3103101	0					
ANR	3103800	Identifier	a_line_sh		3103101	1					
ANR	3103801	Identifier	i		3103101	1					
ANR	3103802	PrimaryExpression	1		3103101	1					
ANR	3103803	ExpressionStatement	result -> b_line_sh [ i ] = 1	1651:10:44530:44554	3103101	1	True				
ANR	3103804	AssignmentExpression	result -> b_line_sh [ i ] = 1		3103101	0		=			
ANR	3103805	ArrayIndexing	result -> b_line_sh [ i ]		3103101	0					
ANR	3103806	PtrMemberAccess	result -> b_line_sh		3103101	0					
ANR	3103807	Identifier	result		3103101	0					
ANR	3103808	Identifier	b_line_sh		3103101	1					
ANR	3103809	Identifier	i		3103101	1					
ANR	3103810	PrimaryExpression	1		3103101	1					
ANR	3103811	ReturnStatement	return result ;	1655:2:44575:44588	3103101	35	True				
ANR	3103812	Identifier	result		3103101	0					
ANR	3103813	ReturnType	static EBPlaneCtx *		3103101	1					
ANR	3103814	Identifier	even_better_plane_new		3103101	2					
ANR	3103815	ParameterList	"const EvenBetterParams * params , EvenBetterCtx * ebc , int plane_idx"		3103101	3					
ANR	3103816	Parameter	const EvenBetterParams * params	1537:23:41213:41242	3103101	0	True				
ANR	3103817	ParameterType	const EvenBetterParams *		3103101	0					
ANR	3103818	Identifier	params		3103101	1					
ANR	3103819	Parameter	EvenBetterCtx * ebc	1537:55:41245:41262	3103101	1	True				
ANR	3103820	ParameterType	EvenBetterCtx *		3103101	0					
ANR	3103821	Identifier	ebc		3103101	1					
ANR	3103822	Parameter	int plane_idx	1538:23:41288:41300	3103101	2	True				
ANR	3103823	ParameterType	int		3103101	0					
ANR	3103824	Identifier	plane_idx		3103101	1					
ANR	3103825	CFGEntryNode	ENTRY		3103101		True				
ANR	3103826	CFGExitNode	EXIT		3103101		True				
ANR	3103827	Symbol	even_c1		3103101						
ANR	3103828	Symbol	* rs_lut		3103101						
ANR	3103829	Symbol	rs_lut		3103101						
ANR	3103830	Symbol	* result -> b_line		3103101						
ANR	3103831	Symbol	ET_SRC_MAX		3103101						
ANR	3103832	Symbol	result -> source_width		3103101						
ANR	3103833	Symbol	lut		3103101						
ANR	3103834	Symbol	eb_compute_randshift		3103101						
ANR	3103835	Symbol	result -> a_line		3103101						
ANR	3103836	Symbol	* * params		3103101						
ANR	3103837	Symbol	result -> r_line_sh		3103101						
ANR	3103838	Symbol	rand		3103101						
ANR	3103839	Symbol	EVEN_SHIFT		3103101						
ANR	3103840	Symbol	* result -> iir_line		3103101						
ANR	3103841	Symbol	* result -> a_line		3103101						
ANR	3103842	Symbol	* new_lut		3103101						
ANR	3103843	Symbol	params -> dest_width		3103101						
ANR	3103844	Symbol	rs_base		3103101						
ANR	3103845	Symbol	NULL		3103101						
ANR	3103846	Symbol	* * result		3103101						
ANR	3103847	Symbol	params		3103101						
ANR	3103848	Symbol	eb_compute_rbscale		3103101						
ANR	3103849	Symbol	* ebc		3103101						
ANR	3103850	Symbol	rb		3103101						
ANR	3103851	Symbol	rb_sh		3103101						
ANR	3103852	Symbol	even_log2		3103101						
ANR	3103853	Symbol	result -> rs_lut		3103101						
ANR	3103854	Symbol	* plane_idx		3103101						
ANR	3103855	Symbol	result -> rb_lut		3103101						
ANR	3103856	Symbol	result -> white_count_line		3103101						
ANR	3103857	Symbol	log2_levels		3103101						
ANR	3103858	Symbol	result -> dest_width		3103101						
ANR	3103859	Symbol	params -> source_width		3103101						
ANR	3103860	Symbol	result -> r_line		3103101						
ANR	3103861	Symbol	result -> a_line_sh		3103101						
ANR	3103862	Symbol	nl		3103101						
ANR	3103863	Symbol	even_rlimit		3103101						
ANR	3103864	Symbol	rs		3103101						
ANR	3103865	Symbol	* params -> luts		3103101						
ANR	3103866	Symbol	params -> do_shadows		3103101						
ANR	3103867	Symbol	plane_idx		3103101						
ANR	3103868	Symbol	do_shadows		3103101						
ANR	3103869	Symbol	params -> rand_scale		3103101						
ANR	3103870	Symbol	calloc		3103101						
ANR	3103871	Symbol	result		3103101						
ANR	3103872	Symbol	result -> lut		3103101						
ANR	3103873	Symbol	* result		3103101						
ANR	3103874	Symbol	result -> rb_line		3103101						
ANR	3103875	Symbol	rbscale		3103101						
ANR	3103876	Symbol	* params		3103101						
ANR	3103877	Symbol	* result -> a_line_sh		3103101						
ANR	3103878	Symbol	malloc		3103101						
ANR	3103879	Symbol	* rb_lut		3103101						
ANR	3103880	Symbol	* result -> b_line_sh		3103101						
ANR	3103881	Symbol	rb_lut		3103101						
ANR	3103882	Symbol	ebc		3103101						
ANR	3103883	Symbol	source_width		3103101						
ANR	3103884	Symbol	result -> b_line_sh		3103101						
ANR	3103885	Symbol	params -> luts		3103101						
ANR	3103886	Symbol	i		3103101						
ANR	3103887	Symbol	nli		3103101						
ANR	3103888	Symbol	new_lut		3103101						
ANR	3103889	Symbol	dest_width		3103101						
ANR	3103890	Symbol	params -> levels		3103101						
ANR	3103891	Symbol	* i		3103101						
ANR	3103892	Symbol	* lut		3103101						
ANR	3103893	Symbol	result -> iir_line		3103101						
ANR	3103894	Symbol	result -> b_line		3103101						
ANR	3103895	Symbol	ebc -> even_c1		3103101						
ANR	3103896	Function	even_better_new	1658:0:44593:47783							
ANR	3103897	FunctionDef	even_better_new (const EvenBetterParams * params)		3103896	0					
ANR	3103898	CompoundStatement		1660:0:44658:47783	3103896	0					
ANR	3103899	IdentifierDeclStatement	EvenBetterCtx * result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) ) ;	1661:2:44662:44733	3103896	0	True				
ANR	3103900	IdentifierDecl	* result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		3103896	0					
ANR	3103901	IdentifierDeclType	EvenBetterCtx *		3103896	0					
ANR	3103902	Identifier	result		3103896	1					
ANR	3103903	AssignmentExpression	* result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		3103896	2		=			
ANR	3103904	Identifier	result		3103896	0					
ANR	3103905	CastExpression	( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		3103896	1					
ANR	3103906	CastTarget	EvenBetterCtx *		3103896	0					
ANR	3103907	CallExpression	malloc ( sizeof ( EvenBetterCtx ) )		3103896	1					
ANR	3103908	Callee	malloc		3103896	0					
ANR	3103909	Identifier	malloc		3103896	0					
ANR	3103910	ArgumentList	sizeof ( EvenBetterCtx )		3103896	1					
ANR	3103911	Argument	sizeof ( EvenBetterCtx )		3103896	0					
ANR	3103912	SizeofExpression	sizeof ( EvenBetterCtx )		3103896	0					
ANR	3103913	Sizeof	sizeof		3103896	0					
ANR	3103914	SizeofOperand	EvenBetterCtx		3103896	1					
ANR	3103915	IdentifierDeclStatement	int n_planes = params -> n_planes ;	1662:2:44737:44768	3103896	1	True				
ANR	3103916	IdentifierDecl	n_planes = params -> n_planes		3103896	0					
ANR	3103917	IdentifierDeclType	int		3103896	0					
ANR	3103918	Identifier	n_planes		3103896	1					
ANR	3103919	AssignmentExpression	n_planes = params -> n_planes		3103896	2		=			
ANR	3103920	Identifier	n_planes		3103896	0					
ANR	3103921	PtrMemberAccess	params -> n_planes		3103896	1					
ANR	3103922	Identifier	params		3103896	0					
ANR	3103923	Identifier	n_planes		3103896	1					
ANR	3103924	IdentifierDeclStatement	int i ;	1663:2:44772:44777	3103896	2	True				
ANR	3103925	IdentifierDecl	i		3103896	0					
ANR	3103926	IdentifierDeclType	int		3103896	0					
ANR	3103927	Identifier	i		3103896	1					
ANR	3103928	IdentifierDeclStatement	"int log2_levels , log2_aspect ;"	1664:2:44781:44809	3103896	3	True				
ANR	3103929	IdentifierDecl	log2_levels		3103896	0					
ANR	3103930	IdentifierDeclType	int		3103896	0					
ANR	3103931	Identifier	log2_levels		3103896	1					
ANR	3103932	IdentifierDecl	log2_aspect		3103896	1					
ANR	3103933	IdentifierDeclType	int		3103896	0					
ANR	3103934	Identifier	log2_aspect		3103896	1					
ANR	3103935	IdentifierDeclStatement	int using_vectors = 0 ;	1665:2:44813:44834	3103896	4	True				
ANR	3103936	IdentifierDecl	using_vectors = 0		3103896	0					
ANR	3103937	IdentifierDeclType	int		3103896	0					
ANR	3103938	Identifier	using_vectors		3103896	1					
ANR	3103939	AssignmentExpression	using_vectors = 0		3103896	2		=			
ANR	3103940	Identifier	using_vectors		3103896	0					
ANR	3103941	PrimaryExpression	0		3103896	1					
ANR	3103942	IfStatement	if ( params -> dump_file )		3103896	5					
ANR	3103943	Condition	params -> dump_file	1667:6:44843:44859	3103896	0	True				
ANR	3103944	PtrMemberAccess	params -> dump_file		3103896	0					
ANR	3103945	Identifier	params		3103896	0					
ANR	3103946	Identifier	dump_file		3103896	1					
ANR	3103947	CompoundStatement		10:6:215:228	3103896	1					
ANR	3103948	IdentifierDeclStatement	int header [ 5 ] ;	1669:6:44874:44887	3103896	0	True				
ANR	3103949	IdentifierDecl	header [ 5 ]		3103896	0					
ANR	3103950	IdentifierDeclType	int [ 5 ]		3103896	0					
ANR	3103951	Identifier	header		3103896	1					
ANR	3103952	PrimaryExpression	5		3103896	2					
ANR	3103953	ExpressionStatement	header [ 0 ] = 0x70644245	1671:6:44896:44918	3103896	1	True				
ANR	3103954	AssignmentExpression	header [ 0 ] = 0x70644245		3103896	0		=			
ANR	3103955	ArrayIndexing	header [ 0 ]		3103896	0					
ANR	3103956	Identifier	header		3103896	0					
ANR	3103957	PrimaryExpression	0		3103896	1					
ANR	3103958	PrimaryExpression	0x70644245		3103896	1					
ANR	3103959	ExpressionStatement	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101	1672:6:44926:44967	3103896	2	True				
ANR	3103960	AssignmentExpression	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101		3103896	0		=			
ANR	3103961	ArrayIndexing	header [ 1 ]		3103896	0					
ANR	3103962	Identifier	header		3103896	0					
ANR	3103963	PrimaryExpression	1		3103896	1					
ANR	3103964	AdditiveExpression	'M' * 0x1010000 + 'I' * 0x101		3103896	1		+			
ANR	3103965	MultiplicativeExpression	'M' * 0x1010000		3103896	0		*			
ANR	3103966	PrimaryExpression	'M'		3103896	0					
ANR	3103967	PrimaryExpression	0x1010000		3103896	1					
ANR	3103968	MultiplicativeExpression	'I' * 0x101		3103896	1		*			
ANR	3103969	PrimaryExpression	'I'		3103896	0					
ANR	3103970	PrimaryExpression	0x101		3103896	1					
ANR	3103971	ExpressionStatement	header [ 2 ] = EVENBETTER_VERSION	1673:6:44975:45005	3103896	3	True				
ANR	3103972	AssignmentExpression	header [ 2 ] = EVENBETTER_VERSION		3103896	0		=			
ANR	3103973	ArrayIndexing	header [ 2 ]		3103896	0					
ANR	3103974	Identifier	header		3103896	0					
ANR	3103975	PrimaryExpression	2		3103896	1					
ANR	3103976	Identifier	EVENBETTER_VERSION		3103896	1					
ANR	3103977	ExpressionStatement	header [ 3 ] = ET_SRC_MAX	1674:6:45013:45035	3103896	4	True				
ANR	3103978	AssignmentExpression	header [ 3 ] = ET_SRC_MAX		3103896	0		=			
ANR	3103979	ArrayIndexing	header [ 3 ]		3103896	0					
ANR	3103980	Identifier	header		3103896	0					
ANR	3103981	PrimaryExpression	3		3103896	1					
ANR	3103982	Identifier	ET_SRC_MAX		3103896	1					
ANR	3103983	ExpressionStatement	header [ 4 ] = sizeof ( ET_SrcPixel )	1675:6:45043:45074	3103896	5	True				
ANR	3103984	AssignmentExpression	header [ 4 ] = sizeof ( ET_SrcPixel )		3103896	0		=			
ANR	3103985	ArrayIndexing	header [ 4 ]		3103896	0					
ANR	3103986	Identifier	header		3103896	0					
ANR	3103987	PrimaryExpression	4		3103896	1					
ANR	3103988	SizeofExpression	sizeof ( ET_SrcPixel )		3103896	1					
ANR	3103989	Sizeof	sizeof		3103896	0					
ANR	3103990	SizeofOperand	ET_SrcPixel		3103896	1					
ANR	3103991	ExpressionStatement	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"	1676:6:45082:45179	3103896	6	True				
ANR	3103992	CallExpression	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"		3103896	0					
ANR	3103993	Callee	fwrite		3103896	0					
ANR	3103994	Identifier	fwrite		3103896	0					
ANR	3103995	ArgumentList	header		3103896	1					
ANR	3103996	Argument	header		3103896	0					
ANR	3103997	Identifier	header		3103896	0					
ANR	3103998	Argument	sizeof ( int )		3103896	1					
ANR	3103999	SizeofExpression	sizeof ( int )		3103896	0					
ANR	3104000	Sizeof	sizeof		3103896	0					
ANR	3104001	SizeofOperand	int		3103896	1					
ANR	3104002	Argument	sizeof ( header ) / sizeof ( header [ 0 ] )		3103896	2					
ANR	3104003	MultiplicativeExpression	sizeof ( header ) / sizeof ( header [ 0 ] )		3103896	0		/			
ANR	3104004	SizeofExpression	sizeof ( header )		3103896	0					
ANR	3104005	Sizeof	sizeof		3103896	0					
ANR	3104006	SizeofOperand	header		3103896	1					
ANR	3104007	SizeofExpression	sizeof ( header [ 0 ] )		3103896	1					
ANR	3104008	Sizeof	sizeof		3103896	0					
ANR	3104009	ArrayIndexing	header [ 0 ]		3103896	1					
ANR	3104010	Identifier	header		3103896	0					
ANR	3104011	PrimaryExpression	0		3103896	1					
ANR	3104012	Argument	params -> dump_file		3103896	3					
ANR	3104013	PtrMemberAccess	params -> dump_file		3103896	0					
ANR	3104014	Identifier	params		3103896	0					
ANR	3104015	Identifier	dump_file		3103896	1					
ANR	3104016	IfStatement	if ( params -> dump_level >= EB_DUMP_PARAMS )		3103896	7					
ANR	3104017	Condition	params -> dump_level >= EB_DUMP_PARAMS	1678:10:45191:45226	3103896	0	True				
ANR	3104018	RelationalExpression	params -> dump_level >= EB_DUMP_PARAMS		3103896	0		>=			
ANR	3104019	PtrMemberAccess	params -> dump_level		3103896	0					
ANR	3104020	Identifier	params		3103896	0					
ANR	3104021	Identifier	dump_level		3103896	1					
ANR	3104022	Identifier	EB_DUMP_PARAMS		3103896	1					
ANR	3104023	CompoundStatement		20:8:578:578	3103896	1					
ANR	3104024	ExpressionStatement	"fwrite ( params , 1 , sizeof ( EvenBetterParams ) , params -> dump_file )"	1681:10:45250:45313	3103896	0	True				
ANR	3104025	CallExpression	"fwrite ( params , 1 , sizeof ( EvenBetterParams ) , params -> dump_file )"		3103896	0					
ANR	3104026	Callee	fwrite		3103896	0					
ANR	3104027	Identifier	fwrite		3103896	0					
ANR	3104028	ArgumentList	params		3103896	1					
ANR	3104029	Argument	params		3103896	0					
ANR	3104030	Identifier	params		3103896	0					
ANR	3104031	Argument	1		3103896	1					
ANR	3104032	PrimaryExpression	1		3103896	0					
ANR	3104033	Argument	sizeof ( EvenBetterParams )		3103896	2					
ANR	3104034	SizeofExpression	sizeof ( EvenBetterParams )		3103896	0					
ANR	3104035	Sizeof	sizeof		3103896	0					
ANR	3104036	SizeofOperand	EvenBetterParams		3103896	1					
ANR	3104037	Argument	params -> dump_file		3103896	3					
ANR	3104038	PtrMemberAccess	params -> dump_file		3103896	0					
ANR	3104039	Identifier	params		3103896	0					
ANR	3104040	Identifier	dump_file		3103896	1					
ANR	3104041	IfStatement	if ( params -> dump_level >= EB_DUMP_LUTS )		3103896	8					
ANR	3104042	Condition	params -> dump_level >= EB_DUMP_LUTS	1683:10:45335:45368	3103896	0	True				
ANR	3104043	RelationalExpression	params -> dump_level >= EB_DUMP_LUTS		3103896	0		>=			
ANR	3104044	PtrMemberAccess	params -> dump_level		3103896	0					
ANR	3104045	Identifier	params		3103896	0					
ANR	3104046	Identifier	dump_level		3103896	1					
ANR	3104047	Identifier	EB_DUMP_LUTS		3103896	1					
ANR	3104048	CompoundStatement		26:10:732:737	3103896	1					
ANR	3104049	IdentifierDeclStatement	int i ;	1685:10:45391:45396	3103896	0	True				
ANR	3104050	IdentifierDecl	i		3103896	0					
ANR	3104051	IdentifierDeclType	int		3103896	0					
ANR	3104052	Identifier	i		3103896	1					
ANR	3104053	ForStatement	for ( i = 0 ; i < params -> n_planes ; i ++ )		3103896	1					
ANR	3104054	ForInit	i = 0 ;	1686:15:45413:45418	3103896	0	True				
ANR	3104055	AssignmentExpression	i = 0		3103896	0		=			
ANR	3104056	Identifier	i		3103896	0					
ANR	3104057	PrimaryExpression	0		3103896	1					
ANR	3104058	Condition	i < params -> n_planes	1686:22:45420:45439	3103896	1	True				
ANR	3104059	RelationalExpression	i < params -> n_planes		3103896	0		<			
ANR	3104060	Identifier	i		3103896	0					
ANR	3104061	PtrMemberAccess	params -> n_planes		3103896	1					
ANR	3104062	Identifier	params		3103896	0					
ANR	3104063	Identifier	n_planes		3103896	1					
ANR	3104064	PostIncDecOperationExpression	i ++	1686:44:45442:45444	3103896	2	True				
ANR	3104065	Identifier	i		3103896	0					
ANR	3104066	IncDec	++		3103896	1					
ANR	3104067	ExpressionStatement	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ET_SRC_MAX + 1 , params -> dump_file )"	1687:12:45459:45551	3103896	3	True				
ANR	3104068	CallExpression	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ET_SRC_MAX + 1 , params -> dump_file )"		3103896	0					
ANR	3104069	Callee	fwrite		3103896	0					
ANR	3104070	Identifier	fwrite		3103896	0					
ANR	3104071	ArgumentList	params -> luts [ i ]		3103896	1					
ANR	3104072	Argument	params -> luts [ i ]		3103896	0					
ANR	3104073	ArrayIndexing	params -> luts [ i ]		3103896	0					
ANR	3104074	PtrMemberAccess	params -> luts		3103896	0					
ANR	3104075	Identifier	params		3103896	0					
ANR	3104076	Identifier	luts		3103896	1					
ANR	3104077	Identifier	i		3103896	1					
ANR	3104078	Argument	sizeof ( int )		3103896	1					
ANR	3104079	SizeofExpression	sizeof ( int )		3103896	0					
ANR	3104080	Sizeof	sizeof		3103896	0					
ANR	3104081	SizeofOperand	int		3103896	1					
ANR	3104082	Argument	ET_SRC_MAX + 1		3103896	2					
ANR	3104083	AdditiveExpression	ET_SRC_MAX + 1		3103896	0		+			
ANR	3104084	Identifier	ET_SRC_MAX		3103896	0					
ANR	3104085	PrimaryExpression	1		3103896	1					
ANR	3104086	Argument	params -> dump_file		3103896	3					
ANR	3104087	PtrMemberAccess	params -> dump_file		3103896	0					
ANR	3104088	Identifier	params		3103896	0					
ANR	3104089	Identifier	dump_file		3103896	1					
ANR	3104090	ExpressionStatement	result -> source_width = params -> source_width	1692:2:45572:45615	3103896	6	True				
ANR	3104091	AssignmentExpression	result -> source_width = params -> source_width		3103896	0		=			
ANR	3104092	PtrMemberAccess	result -> source_width		3103896	0					
ANR	3104093	Identifier	result		3103896	0					
ANR	3104094	Identifier	source_width		3103896	1					
ANR	3104095	PtrMemberAccess	params -> source_width		3103896	1					
ANR	3104096	Identifier	params		3103896	0					
ANR	3104097	Identifier	source_width		3103896	1					
ANR	3104098	ExpressionStatement	result -> dest_width = params -> dest_width	1693:2:45619:45658	3103896	7	True				
ANR	3104099	AssignmentExpression	result -> dest_width = params -> dest_width		3103896	0		=			
ANR	3104100	PtrMemberAccess	result -> dest_width		3103896	0					
ANR	3104101	Identifier	result		3103896	0					
ANR	3104102	Identifier	dest_width		3103896	1					
ANR	3104103	PtrMemberAccess	params -> dest_width		3103896	1					
ANR	3104104	Identifier	params		3103896	0					
ANR	3104105	Identifier	dest_width		3103896	1					
ANR	3104106	ExpressionStatement	result -> n_planes = n_planes	1694:2:45662:45689	3103896	8	True				
ANR	3104107	AssignmentExpression	result -> n_planes = n_planes		3103896	0		=			
ANR	3104108	PtrMemberAccess	result -> n_planes		3103896	0					
ANR	3104109	Identifier	result		3103896	0					
ANR	3104110	Identifier	n_planes		3103896	1					
ANR	3104111	Identifier	n_planes		3103896	1					
ANR	3104112	ExpressionStatement	result -> levels = params -> levels	1695:2:45693:45724	3103896	9	True				
ANR	3104113	AssignmentExpression	result -> levels = params -> levels		3103896	0		=			
ANR	3104114	PtrMemberAccess	result -> levels		3103896	0					
ANR	3104115	Identifier	result		3103896	0					
ANR	3104116	Identifier	levels		3103896	1					
ANR	3104117	PtrMemberAccess	params -> levels		3103896	1					
ANR	3104118	Identifier	params		3103896	0					
ANR	3104119	Identifier	levels		3103896	1					
ANR	3104120	ExpressionStatement	result -> aspect = params -> aspect	1697:2:45729:45760	3103896	10	True				
ANR	3104121	AssignmentExpression	result -> aspect = params -> aspect		3103896	0		=			
ANR	3104122	PtrMemberAccess	result -> aspect		3103896	0					
ANR	3104123	Identifier	result		3103896	0					
ANR	3104124	Identifier	aspect		3103896	1					
ANR	3104125	PtrMemberAccess	params -> aspect		3103896	1					
ANR	3104126	Identifier	params		3103896	0					
ANR	3104127	Identifier	aspect		3103896	1					
ANR	3104128	ExpressionStatement	result -> even_ehi = 0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )	1699:2:45765:45830	3103896	11	True				
ANR	3104129	AssignmentExpression	result -> even_ehi = 0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		3103896	0		=			
ANR	3104130	PtrMemberAccess	result -> even_ehi		3103896	0					
ANR	3104131	Identifier	result		3103896	0					
ANR	3104132	Identifier	even_ehi		3103896	1					
ANR	3104133	MultiplicativeExpression	0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		3103896	1		*			
ANR	3104134	PrimaryExpression	0.6		3103896	0					
ANR	3104135	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		3103896	1		/			
ANR	3104136	ShiftExpression	1 << EVEN_SHIFT		3103896	0		<<			
ANR	3104137	PrimaryExpression	1		3103896	0					
ANR	3104138	Identifier	EVEN_SHIFT		3103896	1					
ANR	3104139	AdditiveExpression	params -> levels - 1		3103896	1		-			
ANR	3104140	PtrMemberAccess	params -> levels		3103896	0					
ANR	3104141	Identifier	params		3103896	0					
ANR	3104142	Identifier	levels		3103896	1					
ANR	3104143	PrimaryExpression	1		3103896	1					
ANR	3104144	ExpressionStatement	result -> even_elo = - result -> even_ehi	1700:2:45834:45870	3103896	12	True				
ANR	3104145	AssignmentExpression	result -> even_elo = - result -> even_ehi		3103896	0		=			
ANR	3104146	PtrMemberAccess	result -> even_elo		3103896	0					
ANR	3104147	Identifier	result		3103896	0					
ANR	3104148	Identifier	even_elo		3103896	1					
ANR	3104149	UnaryOperationExpression	- result -> even_ehi		3103896	1					
ANR	3104150	UnaryOperator	-		3103896	0					
ANR	3104151	PtrMemberAccess	result -> even_ehi		3103896	1					
ANR	3104152	Identifier	result		3103896	0					
ANR	3104153	Identifier	even_ehi		3103896	1					
ANR	3104154	ExpressionStatement	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )	1702:2:45875:45933	3103896	13	True				
ANR	3104155	AssignmentExpression	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )		3103896	0		=			
ANR	3104156	PtrMemberAccess	result -> strengths		3103896	0					
ANR	3104157	Identifier	result		3103896	0					
ANR	3104158	Identifier	strengths		3103896	1					
ANR	3104159	CastExpression	( int * ) malloc ( sizeof ( int ) * n_planes )		3103896	1					
ANR	3104160	CastTarget	int *		3103896	0					
ANR	3104161	CallExpression	malloc ( sizeof ( int ) * n_planes )		3103896	1					
ANR	3104162	Callee	malloc		3103896	0					
ANR	3104163	Identifier	malloc		3103896	0					
ANR	3104164	ArgumentList	sizeof ( int ) * n_planes		3103896	1					
ANR	3104165	Argument	sizeof ( int ) * n_planes		3103896	0					
ANR	3104166	MultiplicativeExpression	sizeof ( int ) * n_planes		3103896	0		*			
ANR	3104167	SizeofExpression	sizeof ( int )		3103896	0					
ANR	3104168	Sizeof	sizeof		3103896	0					
ANR	3104169	SizeofOperand	int		3103896	1					
ANR	3104170	Identifier	n_planes		3103896	1					
ANR	3104171	ExpressionStatement	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"	1703:2:45937:46016	3103896	14	True				
ANR	3104172	CallExpression	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"		3103896	0					
ANR	3104173	Callee	memcpy		3103896	0					
ANR	3104174	Identifier	memcpy		3103896	0					
ANR	3104175	ArgumentList	result -> strengths		3103896	1					
ANR	3104176	Argument	result -> strengths		3103896	0					
ANR	3104177	PtrMemberAccess	result -> strengths		3103896	0					
ANR	3104178	Identifier	result		3103896	0					
ANR	3104179	Identifier	strengths		3103896	1					
ANR	3104180	Argument	params -> strengths		3103896	1					
ANR	3104181	PtrMemberAccess	params -> strengths		3103896	0					
ANR	3104182	Identifier	params		3103896	0					
ANR	3104183	Identifier	strengths		3103896	1					
ANR	3104184	Argument	sizeof ( int ) * n_planes		3103896	2					
ANR	3104185	MultiplicativeExpression	sizeof ( int ) * n_planes		3103896	0		*			
ANR	3104186	SizeofExpression	sizeof ( int )		3103896	0					
ANR	3104187	Sizeof	sizeof		3103896	0					
ANR	3104188	SizeofOperand	int		3103896	1					
ANR	3104189	Identifier	n_planes		3103896	1					
ANR	3104190	ExpressionStatement	log2_levels = even_log2 ( params -> levels )	1706:2:46021:46061	3103896	15	True				
ANR	3104191	AssignmentExpression	log2_levels = even_log2 ( params -> levels )		3103896	0		=			
ANR	3104192	Identifier	log2_levels		3103896	0					
ANR	3104193	CallExpression	even_log2 ( params -> levels )		3103896	1					
ANR	3104194	Callee	even_log2		3103896	0					
ANR	3104195	Identifier	even_log2		3103896	0					
ANR	3104196	ArgumentList	params -> levels		3103896	1					
ANR	3104197	Argument	params -> levels		3103896	0					
ANR	3104198	PtrMemberAccess	params -> levels		3103896	0					
ANR	3104199	Identifier	params		3103896	0					
ANR	3104200	Identifier	levels		3103896	1					
ANR	3104201	ExpressionStatement	log2_aspect = even_log2 ( params -> aspect )	1707:2:46065:46105	3103896	16	True				
ANR	3104202	AssignmentExpression	log2_aspect = even_log2 ( params -> aspect )		3103896	0		=			
ANR	3104203	Identifier	log2_aspect		3103896	0					
ANR	3104204	CallExpression	even_log2 ( params -> aspect )		3103896	1					
ANR	3104205	Callee	even_log2		3103896	0					
ANR	3104206	Identifier	even_log2		3103896	0					
ANR	3104207	ArgumentList	params -> aspect		3103896	1					
ANR	3104208	Argument	params -> aspect		3103896	0					
ANR	3104209	PtrMemberAccess	params -> aspect		3103896	0					
ANR	3104210	Identifier	params		3103896	0					
ANR	3104211	Identifier	aspect		3103896	1					
ANR	3104212	ExpressionStatement	result -> even_c1 = 6 + log2_aspect + log2_levels - params -> even_c1_scale	1708:2:46109:46180	3103896	17	True				
ANR	3104213	AssignmentExpression	result -> even_c1 = 6 + log2_aspect + log2_levels - params -> even_c1_scale		3103896	0		=			
ANR	3104214	PtrMemberAccess	result -> even_c1		3103896	0					
ANR	3104215	Identifier	result		3103896	0					
ANR	3104216	Identifier	even_c1		3103896	1					
ANR	3104217	AdditiveExpression	6 + log2_aspect + log2_levels - params -> even_c1_scale		3103896	1		+			
ANR	3104218	PrimaryExpression	6		3103896	0					
ANR	3104219	AdditiveExpression	log2_aspect + log2_levels - params -> even_c1_scale		3103896	1		+			
ANR	3104220	Identifier	log2_aspect		3103896	0					
ANR	3104221	AdditiveExpression	log2_levels - params -> even_c1_scale		3103896	1		-			
ANR	3104222	Identifier	log2_levels		3103896	0					
ANR	3104223	PtrMemberAccess	params -> even_c1_scale		3103896	1					
ANR	3104224	Identifier	params		3103896	0					
ANR	3104225	Identifier	even_c1_scale		3103896	1					
ANR	3104226	ExpressionStatement	result -> do_shadows = params -> do_shadows	1709:2:46184:46223	3103896	18	True				
ANR	3104227	AssignmentExpression	result -> do_shadows = params -> do_shadows		3103896	0		=			
ANR	3104228	PtrMemberAccess	result -> do_shadows		3103896	0					
ANR	3104229	Identifier	result		3103896	0					
ANR	3104230	Identifier	do_shadows		3103896	1					
ANR	3104231	PtrMemberAccess	params -> do_shadows		3103896	1					
ANR	3104232	Identifier	params		3103896	0					
ANR	3104233	Identifier	do_shadows		3103896	1					
ANR	3104234	ExpressionStatement	"result -> c_line = ( int * ) calloc ( params -> dest_width , sizeof ( int ) )"	1711:2:46228:46292	3103896	19	True				
ANR	3104235	AssignmentExpression	"result -> c_line = ( int * ) calloc ( params -> dest_width , sizeof ( int ) )"		3103896	0		=			
ANR	3104236	PtrMemberAccess	result -> c_line		3103896	0					
ANR	3104237	Identifier	result		3103896	0					
ANR	3104238	Identifier	c_line		3103896	1					
ANR	3104239	CastExpression	"( int * ) calloc ( params -> dest_width , sizeof ( int ) )"		3103896	1					
ANR	3104240	CastTarget	int *		3103896	0					
ANR	3104241	CallExpression	"calloc ( params -> dest_width , sizeof ( int ) )"		3103896	1					
ANR	3104242	Callee	calloc		3103896	0					
ANR	3104243	Identifier	calloc		3103896	0					
ANR	3104244	ArgumentList	params -> dest_width		3103896	1					
ANR	3104245	Argument	params -> dest_width		3103896	0					
ANR	3104246	PtrMemberAccess	params -> dest_width		3103896	0					
ANR	3104247	Identifier	params		3103896	0					
ANR	3104248	Identifier	dest_width		3103896	1					
ANR	3104249	Argument	sizeof ( int )		3103896	1					
ANR	3104250	SizeofExpression	sizeof ( int )		3103896	0					
ANR	3104251	Sizeof	sizeof		3103896	0					
ANR	3104252	SizeofOperand	int		3103896	1					
ANR	3104253	ExpressionStatement	result -> seed1 = 0x5324879f	1713:2:46297:46323	3103896	20	True				
ANR	3104254	AssignmentExpression	result -> seed1 = 0x5324879f		3103896	0		=			
ANR	3104255	PtrMemberAccess	result -> seed1		3103896	0					
ANR	3104256	Identifier	result		3103896	0					
ANR	3104257	Identifier	seed1		3103896	1					
ANR	3104258	PrimaryExpression	0x5324879f		3103896	1					
ANR	3104259	ExpressionStatement	result -> seed2 = 0xb78d0945	1714:2:46327:46353	3103896	21	True				
ANR	3104260	AssignmentExpression	result -> seed2 = 0xb78d0945		3103896	0		=			
ANR	3104261	PtrMemberAccess	result -> seed2		3103896	0					
ANR	3104262	Identifier	result		3103896	0					
ANR	3104263	Identifier	seed2		3103896	1					
ANR	3104264	PrimaryExpression	0xb78d0945		3103896	1					
ANR	3104265	ExpressionStatement	result -> dump_file = params -> dump_file	1716:2:46358:46395	3103896	22	True				
ANR	3104266	AssignmentExpression	result -> dump_file = params -> dump_file		3103896	0		=			
ANR	3104267	PtrMemberAccess	result -> dump_file		3103896	0					
ANR	3104268	Identifier	result		3103896	0					
ANR	3104269	Identifier	dump_file		3103896	1					
ANR	3104270	PtrMemberAccess	params -> dump_file		3103896	1					
ANR	3104271	Identifier	params		3103896	0					
ANR	3104272	Identifier	dump_file		3103896	1					
ANR	3104273	ExpressionStatement	result -> dump_level = params -> dump_level	1717:2:46399:46438	3103896	23	True				
ANR	3104274	AssignmentExpression	result -> dump_level = params -> dump_level		3103896	0		=			
ANR	3104275	PtrMemberAccess	result -> dump_level		3103896	0					
ANR	3104276	Identifier	result		3103896	0					
ANR	3104277	Identifier	dump_level		3103896	1					
ANR	3104278	PtrMemberAccess	params -> dump_level		3103896	1					
ANR	3104279	Identifier	params		3103896	0					
ANR	3104280	Identifier	dump_level		3103896	1					
ANR	3104281	ExpressionStatement	using_vectors = eb_test_sse2 ( )	1720:2:46459:46489	3103896	24	True				
ANR	3104282	AssignmentExpression	using_vectors = eb_test_sse2 ( )		3103896	0		=			
ANR	3104283	Identifier	using_vectors		3103896	0					
ANR	3104284	CallExpression	eb_test_sse2 ( )		3103896	1					
ANR	3104285	Callee	eb_test_sse2		3103896	0					
ANR	3104286	Identifier	eb_test_sse2		3103896	0					
ANR	3104287	ArgumentList			3103896	1					
ANR	3104288	ExpressionStatement	using_vectors = 1	1723:2:46516:46533	3103896	25	True				
ANR	3104289	AssignmentExpression	using_vectors = 1		3103896	0		=			
ANR	3104290	Identifier	using_vectors		3103896	0					
ANR	3104291	PrimaryExpression	1		3103896	1					
ANR	3104292	IfStatement	if ( sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0 )		3103896	26					
ANR	3104293	Condition	sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0	1726:6:46594:46656	3103896	0	True				
ANR	3104294	AndExpression	sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0		3103896	0		&&			
ANR	3104295	EqualityExpression	sizeof ( ET_SrcPixel ) == 1		3103896	0		==			
ANR	3104296	SizeofExpression	sizeof ( ET_SrcPixel )		3103896	0					
ANR	3104297	Sizeof	sizeof		3103896	0					
ANR	3104298	SizeofOperand	ET_SrcPixel		3103896	1					
ANR	3104299	PrimaryExpression	1		3103896	1					
ANR	3104300	AndExpression	using_vectors && params -> gamma != 0		3103896	1		&&			
ANR	3104301	Identifier	using_vectors		3103896	0					
ANR	3104302	EqualityExpression	params -> gamma != 0		3103896	1		!=			
ANR	3104303	PtrMemberAccess	params -> gamma		3103896	0					
ANR	3104304	Identifier	params		3103896	0					
ANR	3104305	Identifier	gamma		3103896	1					
ANR	3104306	PrimaryExpression	0		3103896	1					
ANR	3104307	ExpressionStatement	using_vectors = 2	1727:4:46663:46680	3103896	1	True				
ANR	3104308	AssignmentExpression	using_vectors = 2		3103896	0		=			
ANR	3104309	Identifier	using_vectors		3103896	0					
ANR	3104310	PrimaryExpression	2		3103896	1					
ANR	3104311	ExpressionStatement	result -> using_vectors = using_vectors	1732:2:46711:46748	3103896	27	True				
ANR	3104312	AssignmentExpression	result -> using_vectors = using_vectors		3103896	0		=			
ANR	3104313	PtrMemberAccess	result -> using_vectors		3103896	0					
ANR	3104314	Identifier	result		3103896	0					
ANR	3104315	Identifier	using_vectors		3103896	1					
ANR	3104316	Identifier	using_vectors		3103896	1					
ANR	3104317	IfStatement	if ( using_vectors )		3103896	28					
ANR	3104318	Condition	using_vectors	1734:6:46763:46775	3103896	0	True				
ANR	3104319	Identifier	using_vectors		3103896	0					
ANR	3104320	CompoundStatement		76:4:2123:2123	3103896	1					
ANR	3104321	ExpressionStatement	result -> sse2_ctx = ( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )	1737:6:46806:46942	3103896	0	True				
ANR	3104322	AssignmentExpression	result -> sse2_ctx = ( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	0		=			
ANR	3104323	PtrMemberAccess	result -> sse2_ctx		3103896	0					
ANR	3104324	Identifier	result		3103896	0					
ANR	3104325	Identifier	sse2_ctx		3103896	1					
ANR	3104326	CastExpression	( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	1					
ANR	3104327	CastTarget	eb_ctx_sse2 * *		3103896	0					
ANR	3104328	CallExpression	malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	1					
ANR	3104329	Callee	malloc		3103896	0					
ANR	3104330	Identifier	malloc		3103896	0					
ANR	3104331	ArgumentList	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		3103896	1					
ANR	3104332	Argument	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		3103896	0					
ANR	3104333	MultiplicativeExpression	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		3103896	0		*			
ANR	3104334	SizeofExpression	sizeof ( eb_ctx_sse2 * )		3103896	0					
ANR	3104335	Sizeof	sizeof		3103896	0					
ANR	3104336	SizeofOperand	eb_ctx_sse2 *		3103896	1					
ANR	3104337	ShiftExpression	( n_planes + 3 ) >> 2		3103896	1		>>			
ANR	3104338	AdditiveExpression	n_planes + 3		3103896	0		+			
ANR	3104339	Identifier	n_planes		3103896	0					
ANR	3104340	PrimaryExpression	3		3103896	1					
ANR	3104341	PrimaryExpression	2		3103896	1					
ANR	3104342	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		3103896	1					
ANR	3104343	ForInit	i = 0 ;	1739:11:46955:46960	3103896	0	True				
ANR	3104344	AssignmentExpression	i = 0		3103896	0		=			
ANR	3104345	Identifier	i		3103896	0					
ANR	3104346	PrimaryExpression	0		3103896	1					
ANR	3104347	Condition	i < n_planes	1739:18:46962:46973	3103896	1	True				
ANR	3104348	RelationalExpression	i < n_planes		3103896	0		<			
ANR	3104349	Identifier	i		3103896	0					
ANR	3104350	Identifier	n_planes		3103896	1					
ANR	3104351	AssignmentExpression	i += 4	1739:32:46976:46981	3103896	2	True	+=			
ANR	3104352	Identifier	i		3103896	0					
ANR	3104353	PrimaryExpression	4		3103896	1					
ANR	3104354	CompoundStatement		82:10:2345:2396	3103896	3					
ANR	3104355	IdentifierDeclStatement	int end_plane = i + 4 < n_planes ? i + 4 : n_planes ;	1741:10:47004:47055	3103896	0	True				
ANR	3104356	IdentifierDecl	end_plane = i + 4 < n_planes ? i + 4 : n_planes		3103896	0					
ANR	3104357	IdentifierDeclType	int		3103896	0					
ANR	3104358	Identifier	end_plane		3103896	1					
ANR	3104359	AssignmentExpression	end_plane = i + 4 < n_planes ? i + 4 : n_planes		3103896	2		=			
ANR	3104360	Identifier	end_plane		3103896	0					
ANR	3104361	ConditionalExpression	i + 4 < n_planes ? i + 4 : n_planes		3103896	1					
ANR	3104362	Condition	i + 4 < n_planes		3103896	0					
ANR	3104363	RelationalExpression	i + 4 < n_planes		3103896	0		<			
ANR	3104364	AdditiveExpression	i + 4		3103896	0		+			
ANR	3104365	Identifier	i		3103896	0					
ANR	3104366	PrimaryExpression	4		3103896	1					
ANR	3104367	Identifier	n_planes		3103896	1					
ANR	3104368	AdditiveExpression	i + 4		3103896	1		+			
ANR	3104369	Identifier	i		3103896	0					
ANR	3104370	PrimaryExpression	4		3103896	1					
ANR	3104371	Identifier	n_planes		3103896	2					
ANR	3104372	ExpressionStatement	"result -> sse2_ctx [ i >> 2 ] = eb_ctx_sse2_new ( params , i , end_plane )"	1742:10:47067:47131	3103896	1	True				
ANR	3104373	AssignmentExpression	"result -> sse2_ctx [ i >> 2 ] = eb_ctx_sse2_new ( params , i , end_plane )"		3103896	0		=			
ANR	3104374	ArrayIndexing	result -> sse2_ctx [ i >> 2 ]		3103896	0					
ANR	3104375	PtrMemberAccess	result -> sse2_ctx		3103896	0					
ANR	3104376	Identifier	result		3103896	0					
ANR	3104377	Identifier	sse2_ctx		3103896	1					
ANR	3104378	ShiftExpression	i >> 2		3103896	1		>>			
ANR	3104379	Identifier	i		3103896	0					
ANR	3104380	PrimaryExpression	2		3103896	1					
ANR	3104381	CallExpression	"eb_ctx_sse2_new ( params , i , end_plane )"		3103896	1					
ANR	3104382	Callee	eb_ctx_sse2_new		3103896	0					
ANR	3104383	Identifier	eb_ctx_sse2_new		3103896	0					
ANR	3104384	ArgumentList	params		3103896	1					
ANR	3104385	Argument	params		3103896	0					
ANR	3104386	Identifier	params		3103896	0					
ANR	3104387	Argument	i		3103896	1					
ANR	3104388	Identifier	i		3103896	0					
ANR	3104389	Argument	end_plane		3103896	2					
ANR	3104390	Identifier	end_plane		3103896	0					
ANR	3104391	ExpressionStatement	result -> avec_ctx = ( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )	1746:6:47172:47308	3103896	2	True				
ANR	3104392	AssignmentExpression	result -> avec_ctx = ( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	0		=			
ANR	3104393	PtrMemberAccess	result -> avec_ctx		3103896	0					
ANR	3104394	Identifier	result		3103896	0					
ANR	3104395	Identifier	avec_ctx		3103896	1					
ANR	3104396	CastExpression	( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	1					
ANR	3104397	CastTarget	eb_ctx_avec * *		3103896	0					
ANR	3104398	CallExpression	malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		3103896	1					
ANR	3104399	Callee	malloc		3103896	0					
ANR	3104400	Identifier	malloc		3103896	0					
ANR	3104401	ArgumentList	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		3103896	1					
ANR	3104402	Argument	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		3103896	0					
ANR	3104403	MultiplicativeExpression	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		3103896	0		*			
ANR	3104404	SizeofExpression	sizeof ( eb_ctx_avec * )		3103896	0					
ANR	3104405	Sizeof	sizeof		3103896	0					
ANR	3104406	SizeofOperand	eb_ctx_avec *		3103896	1					
ANR	3104407	ShiftExpression	( n_planes + 3 ) >> 2		3103896	1		>>			
ANR	3104408	AdditiveExpression	n_planes + 3		3103896	0		+			
ANR	3104409	Identifier	n_planes		3103896	0					
ANR	3104410	PrimaryExpression	3		3103896	1					
ANR	3104411	PrimaryExpression	2		3103896	1					
ANR	3104412	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		3103896	3					
ANR	3104413	ForInit	i = 0 ;	1748:11:47321:47326	3103896	0	True				
ANR	3104414	AssignmentExpression	i = 0		3103896	0		=			
ANR	3104415	Identifier	i		3103896	0					
ANR	3104416	PrimaryExpression	0		3103896	1					
ANR	3104417	Condition	i < n_planes	1748:18:47328:47339	3103896	1	True				
ANR	3104418	RelationalExpression	i < n_planes		3103896	0		<			
ANR	3104419	Identifier	i		3103896	0					
ANR	3104420	Identifier	n_planes		3103896	1					
ANR	3104421	AssignmentExpression	i += 4	1748:32:47342:47347	3103896	2	True	+=			
ANR	3104422	Identifier	i		3103896	0					
ANR	3104423	PrimaryExpression	4		3103896	1					
ANR	3104424	CompoundStatement		91:10:2711:2762	3103896	3					
ANR	3104425	IdentifierDeclStatement	int end_plane = i + 4 < n_planes ? i + 4 : n_planes ;	1750:10:47370:47421	3103896	0	True				
ANR	3104426	IdentifierDecl	end_plane = i + 4 < n_planes ? i + 4 : n_planes		3103896	0					
ANR	3104427	IdentifierDeclType	int		3103896	0					
ANR	3104428	Identifier	end_plane		3103896	1					
ANR	3104429	AssignmentExpression	end_plane = i + 4 < n_planes ? i + 4 : n_planes		3103896	2		=			
ANR	3104430	Identifier	end_plane		3103896	0					
ANR	3104431	ConditionalExpression	i + 4 < n_planes ? i + 4 : n_planes		3103896	1					
ANR	3104432	Condition	i + 4 < n_planes		3103896	0					
ANR	3104433	RelationalExpression	i + 4 < n_planes		3103896	0		<			
ANR	3104434	AdditiveExpression	i + 4		3103896	0		+			
ANR	3104435	Identifier	i		3103896	0					
ANR	3104436	PrimaryExpression	4		3103896	1					
ANR	3104437	Identifier	n_planes		3103896	1					
ANR	3104438	AdditiveExpression	i + 4		3103896	1		+			
ANR	3104439	Identifier	i		3103896	0					
ANR	3104440	PrimaryExpression	4		3103896	1					
ANR	3104441	Identifier	n_planes		3103896	2					
ANR	3104442	ExpressionStatement	"result -> avec_ctx [ i >> 2 ] = eb_ctx_avec_new ( params , i , end_plane )"	1751:10:47433:47497	3103896	1	True				
ANR	3104443	AssignmentExpression	"result -> avec_ctx [ i >> 2 ] = eb_ctx_avec_new ( params , i , end_plane )"		3103896	0		=			
ANR	3104444	ArrayIndexing	result -> avec_ctx [ i >> 2 ]		3103896	0					
ANR	3104445	PtrMemberAccess	result -> avec_ctx		3103896	0					
ANR	3104446	Identifier	result		3103896	0					
ANR	3104447	Identifier	avec_ctx		3103896	1					
ANR	3104448	ShiftExpression	i >> 2		3103896	1		>>			
ANR	3104449	Identifier	i		3103896	0					
ANR	3104450	PrimaryExpression	2		3103896	1					
ANR	3104451	CallExpression	"eb_ctx_avec_new ( params , i , end_plane )"		3103896	1					
ANR	3104452	Callee	eb_ctx_avec_new		3103896	0					
ANR	3104453	Identifier	eb_ctx_avec_new		3103896	0					
ANR	3104454	ArgumentList	params		3103896	1					
ANR	3104455	Argument	params		3103896	0					
ANR	3104456	Identifier	params		3103896	0					
ANR	3104457	Argument	i		3103896	1					
ANR	3104458	Identifier	i		3103896	0					
ANR	3104459	Argument	end_plane		3103896	2					
ANR	3104460	Identifier	end_plane		3103896	0					
ANR	3104461	ExpressionStatement	result -> plane_ctx = NULL	1754:6:47522:47546	3103896	4	True				
ANR	3104462	AssignmentExpression	result -> plane_ctx = NULL		3103896	0		=			
ANR	3104463	PtrMemberAccess	result -> plane_ctx		3103896	0					
ANR	3104464	Identifier	result		3103896	0					
ANR	3104465	Identifier	plane_ctx		3103896	1					
ANR	3104466	Identifier	NULL		3103896	1					
ANR	3104467	ElseStatement	else		3103896	0					
ANR	3104468	CompoundStatement		98:4:2906:2906	3103896	0					
ANR	3104469	ExpressionStatement	result -> plane_ctx = ( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )	1758:6:47573:47647	3103896	0	True				
ANR	3104470	AssignmentExpression	result -> plane_ctx = ( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		3103896	0		=			
ANR	3104471	PtrMemberAccess	result -> plane_ctx		3103896	0					
ANR	3104472	Identifier	result		3103896	0					
ANR	3104473	Identifier	plane_ctx		3103896	1					
ANR	3104474	CastExpression	( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		3103896	1					
ANR	3104475	CastTarget	EBPlaneCtx * *		3103896	0					
ANR	3104476	CallExpression	malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		3103896	1					
ANR	3104477	Callee	malloc		3103896	0					
ANR	3104478	Identifier	malloc		3103896	0					
ANR	3104479	ArgumentList	sizeof ( EBPlaneCtx * ) * n_planes		3103896	1					
ANR	3104480	Argument	sizeof ( EBPlaneCtx * ) * n_planes		3103896	0					
ANR	3104481	MultiplicativeExpression	sizeof ( EBPlaneCtx * ) * n_planes		3103896	0		*			
ANR	3104482	SizeofExpression	sizeof ( EBPlaneCtx * )		3103896	0					
ANR	3104483	Sizeof	sizeof		3103896	0					
ANR	3104484	SizeofOperand	EBPlaneCtx *		3103896	1					
ANR	3104485	Identifier	n_planes		3103896	1					
ANR	3104486	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		3103896	1					
ANR	3104487	ForInit	i = 0 ;	1759:11:47660:47665	3103896	0	True				
ANR	3104488	AssignmentExpression	i = 0		3103896	0		=			
ANR	3104489	Identifier	i		3103896	0					
ANR	3104490	PrimaryExpression	0		3103896	1					
ANR	3104491	Condition	i < n_planes	1759:18:47667:47678	3103896	1	True				
ANR	3104492	RelationalExpression	i < n_planes		3103896	0		<			
ANR	3104493	Identifier	i		3103896	0					
ANR	3104494	Identifier	n_planes		3103896	1					
ANR	3104495	PostIncDecOperationExpression	i ++	1759:32:47681:47683	3103896	2	True				
ANR	3104496	Identifier	i		3103896	0					
ANR	3104497	IncDec	++		3103896	1					
ANR	3104498	ExpressionStatement	"result -> plane_ctx [ i ] = even_better_plane_new ( params , result , i )"	1760:8:47694:47758	3103896	3	True				
ANR	3104499	AssignmentExpression	"result -> plane_ctx [ i ] = even_better_plane_new ( params , result , i )"		3103896	0		=			
ANR	3104500	ArrayIndexing	result -> plane_ctx [ i ]		3103896	0					
ANR	3104501	PtrMemberAccess	result -> plane_ctx		3103896	0					
ANR	3104502	Identifier	result		3103896	0					
ANR	3104503	Identifier	plane_ctx		3103896	1					
ANR	3104504	Identifier	i		3103896	1					
ANR	3104505	CallExpression	"even_better_plane_new ( params , result , i )"		3103896	1					
ANR	3104506	Callee	even_better_plane_new		3103896	0					
ANR	3104507	Identifier	even_better_plane_new		3103896	0					
ANR	3104508	ArgumentList	params		3103896	1					
ANR	3104509	Argument	params		3103896	0					
ANR	3104510	Identifier	params		3103896	0					
ANR	3104511	Argument	result		3103896	1					
ANR	3104512	Identifier	result		3103896	0					
ANR	3104513	Argument	i		3103896	2					
ANR	3104514	Identifier	i		3103896	0					
ANR	3104515	ReturnStatement	return result ;	1762:2:47768:47781	3103896	29	True				
ANR	3104516	Identifier	result		3103896	0					
ANR	3104517	ReturnType	EvenBetterCtx *		3103896	1					
ANR	3104518	Identifier	even_better_new		3103896	2					
ANR	3104519	ParameterList	const EvenBetterParams * params		3103896	3					
ANR	3104520	Parameter	const EvenBetterParams * params	1659:17:44626:44655	3103896	0	True				
ANR	3104521	ParameterType	const EvenBetterParams *		3103896	0					
ANR	3104522	Identifier	params		3103896	1					
ANR	3104523	CFGEntryNode	ENTRY		3103896		True				
ANR	3104524	CFGExitNode	EXIT		3103896		True				
ANR	3104525	Symbol	* result -> avec_ctx		3103896						
ANR	3104526	Symbol	result -> dump_file		3103896						
ANR	3104527	Symbol	ET_SRC_MAX		3103896						
ANR	3104528	Symbol	result -> source_width		3103896						
ANR	3104529	Symbol	* * params		3103896						
ANR	3104530	Symbol	result -> even_elo		3103896						
ANR	3104531	Symbol	result -> even_ehi		3103896						
ANR	3104532	Symbol	params -> even_c1_scale		3103896						
ANR	3104533	Symbol	using_vectors		3103896						
ANR	3104534	Symbol	EVEN_SHIFT		3103896						
ANR	3104535	Symbol	result -> dump_level		3103896						
ANR	3104536	Symbol	result -> sse2_ctx		3103896						
ANR	3104537	Symbol	log2_aspect		3103896						
ANR	3104538	Symbol	params -> dest_width		3103896						
ANR	3104539	Symbol	result -> c_line		3103896						
ANR	3104540	Symbol	NULL		3103896						
ANR	3104541	Symbol	params -> dump_level		3103896						
ANR	3104542	Symbol	params -> strengths		3103896						
ANR	3104543	Symbol	* * result		3103896						
ANR	3104544	Symbol	params		3103896						
ANR	3104545	Symbol	* header		3103896						
ANR	3104546	Symbol	eb_ctx_sse2_new		3103896						
ANR	3104547	Symbol	EB_DUMP_PARAMS		3103896						
ANR	3104548	Symbol	even_log2		3103896						
ANR	3104549	Symbol	result -> do_shadows		3103896						
ANR	3104550	Symbol	eb_test_sse2		3103896						
ANR	3104551	Symbol	params -> gamma		3103896						
ANR	3104552	Symbol	log2_levels		3103896						
ANR	3104553	Symbol	result -> dest_width		3103896						
ANR	3104554	Symbol	params -> dump_file		3103896						
ANR	3104555	Symbol	header		3103896						
ANR	3104556	Symbol	params -> source_width		3103896						
ANR	3104557	Symbol	params -> n_planes		3103896						
ANR	3104558	Symbol	EB_DUMP_LUTS		3103896						
ANR	3104559	Symbol	* params -> luts		3103896						
ANR	3104560	Symbol	params -> do_shadows		3103896						
ANR	3104561	Symbol	eb_ctx_avec_new		3103896						
ANR	3104562	Symbol	even_better_plane_new		3103896						
ANR	3104563	Symbol	result -> levels		3103896						
ANR	3104564	Symbol	calloc		3103896						
ANR	3104565	Symbol	result -> using_vectors		3103896						
ANR	3104566	Symbol	result -> strengths		3103896						
ANR	3104567	Symbol	result		3103896						
ANR	3104568	Symbol	end_plane		3103896						
ANR	3104569	Symbol	* result -> plane_ctx		3103896						
ANR	3104570	Symbol	* result		3103896						
ANR	3104571	Symbol	result -> aspect		3103896						
ANR	3104572	Symbol	* result -> sse2_ctx		3103896						
ANR	3104573	Symbol	result -> seed2		3103896						
ANR	3104574	Symbol	result -> seed1		3103896						
ANR	3104575	Symbol	* params		3103896						
ANR	3104576	Symbol	params -> aspect		3103896						
ANR	3104577	Symbol	malloc		3103896						
ANR	3104578	Symbol	result -> avec_ctx		3103896						
ANR	3104579	Symbol	n_planes		3103896						
ANR	3104580	Symbol	i		3103896						
ANR	3104581	Symbol	params -> luts		3103896						
ANR	3104582	Symbol	EVENBETTER_VERSION		3103896						
ANR	3104583	Symbol	params -> levels		3103896						
ANR	3104584	Symbol	* i		3103896						
ANR	3104585	Symbol	result -> even_c1		3103896						
ANR	3104586	Symbol	result -> plane_ctx		3103896						
ANR	3104587	Symbol	result -> n_planes		3103896						
ANR	3104588	Function	even_better_free	1771:0:47911:48589							
ANR	3104589	FunctionDef	even_better_free (EvenBetterCtx * ctx)		3104588	0					
ANR	3104590	CompoundStatement		1773:0:47954:48589	3104588	0					
ANR	3104591	IdentifierDeclStatement	int i ;	1774:2:47958:47963	3104588	0	True				
ANR	3104592	IdentifierDecl	i		3104588	0					
ANR	3104593	IdentifierDeclType	int		3104588	0					
ANR	3104594	Identifier	i		3104588	1					
ANR	3104595	IdentifierDeclStatement	int n_planes = ctx -> n_planes ;	1775:2:47967:47995	3104588	1	True				
ANR	3104596	IdentifierDecl	n_planes = ctx -> n_planes		3104588	0					
ANR	3104597	IdentifierDeclType	int		3104588	0					
ANR	3104598	Identifier	n_planes		3104588	1					
ANR	3104599	AssignmentExpression	n_planes = ctx -> n_planes		3104588	2		=			
ANR	3104600	Identifier	n_planes		3104588	0					
ANR	3104601	PtrMemberAccess	ctx -> n_planes		3104588	1					
ANR	3104602	Identifier	ctx		3104588	0					
ANR	3104603	Identifier	n_planes		3104588	1					
ANR	3104604	IfStatement	if ( ctx -> dump_file )		3104588	2					
ANR	3104605	Condition	ctx -> dump_file	1777:6:48004:48017	3104588	0	True				
ANR	3104606	PtrMemberAccess	ctx -> dump_file		3104588	0					
ANR	3104607	Identifier	ctx		3104588	0					
ANR	3104608	Identifier	dump_file		3104588	1					
ANR	3104609	ExpressionStatement	fclose ( ctx -> dump_file )	1778:4:48024:48047	3104588	1	True				
ANR	3104610	CallExpression	fclose ( ctx -> dump_file )		3104588	0					
ANR	3104611	Callee	fclose		3104588	0					
ANR	3104612	Identifier	fclose		3104588	0					
ANR	3104613	ArgumentList	ctx -> dump_file		3104588	1					
ANR	3104614	Argument	ctx -> dump_file		3104588	0					
ANR	3104615	PtrMemberAccess	ctx -> dump_file		3104588	0					
ANR	3104616	Identifier	ctx		3104588	0					
ANR	3104617	Identifier	dump_file		3104588	1					
ANR	3104618	IfStatement	if ( ctx -> using_vectors )		3104588	3					
ANR	3104619	Condition	ctx -> using_vectors	1781:6:48074:48091	3104588	0	True				
ANR	3104620	PtrMemberAccess	ctx -> using_vectors		3104588	0					
ANR	3104621	Identifier	ctx		3104588	0					
ANR	3104622	Identifier	using_vectors		3104588	1					
ANR	3104623	CompoundStatement		10:4:143:143	3104588	1					
ANR	3104624	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		3104588	0					
ANR	3104625	ForInit	i = 0 ;	1784:11:48127:48132	3104588	0	True				
ANR	3104626	AssignmentExpression	i = 0		3104588	0		=			
ANR	3104627	Identifier	i		3104588	0					
ANR	3104628	PrimaryExpression	0		3104588	1					
ANR	3104629	Condition	i < n_planes	1784:18:48134:48145	3104588	1	True				
ANR	3104630	RelationalExpression	i < n_planes		3104588	0		<			
ANR	3104631	Identifier	i		3104588	0					
ANR	3104632	Identifier	n_planes		3104588	1					
ANR	3104633	AssignmentExpression	i += 4	1784:32:48148:48153	3104588	2	True	+=			
ANR	3104634	Identifier	i		3104588	0					
ANR	3104635	PrimaryExpression	4		3104588	1					
ANR	3104636	ExpressionStatement	eb_ctx_sse2_free ( ctx -> sse2_ctx [ i >> 2 ] )	1785:8:48164:48203	3104588	3	True				
ANR	3104637	CallExpression	eb_ctx_sse2_free ( ctx -> sse2_ctx [ i >> 2 ] )		3104588	0					
ANR	3104638	Callee	eb_ctx_sse2_free		3104588	0					
ANR	3104639	Identifier	eb_ctx_sse2_free		3104588	0					
ANR	3104640	ArgumentList	ctx -> sse2_ctx [ i >> 2 ]		3104588	1					
ANR	3104641	Argument	ctx -> sse2_ctx [ i >> 2 ]		3104588	0					
ANR	3104642	ArrayIndexing	ctx -> sse2_ctx [ i >> 2 ]		3104588	0					
ANR	3104643	PtrMemberAccess	ctx -> sse2_ctx		3104588	0					
ANR	3104644	Identifier	ctx		3104588	0					
ANR	3104645	Identifier	sse2_ctx		3104588	1					
ANR	3104646	ShiftExpression	i >> 2		3104588	1		>>			
ANR	3104647	Identifier	i		3104588	0					
ANR	3104648	PrimaryExpression	2		3104588	1					
ANR	3104649	ExpressionStatement	free ( ctx -> sse2_ctx )	1786:6:48211:48230	3104588	1	True				
ANR	3104650	CallExpression	free ( ctx -> sse2_ctx )		3104588	0					
ANR	3104651	Callee	free		3104588	0					
ANR	3104652	Identifier	free		3104588	0					
ANR	3104653	ArgumentList	ctx -> sse2_ctx		3104588	1					
ANR	3104654	Argument	ctx -> sse2_ctx		3104588	0					
ANR	3104655	PtrMemberAccess	ctx -> sse2_ctx		3104588	0					
ANR	3104656	Identifier	ctx		3104588	0					
ANR	3104657	Identifier	sse2_ctx		3104588	1					
ANR	3104658	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		3104588	2					
ANR	3104659	ForInit	i = 0 ;	1789:11:48266:48271	3104588	0	True				
ANR	3104660	AssignmentExpression	i = 0		3104588	0		=			
ANR	3104661	Identifier	i		3104588	0					
ANR	3104662	PrimaryExpression	0		3104588	1					
ANR	3104663	Condition	i < n_planes	1789:18:48273:48284	3104588	1	True				
ANR	3104664	RelationalExpression	i < n_planes		3104588	0		<			
ANR	3104665	Identifier	i		3104588	0					
ANR	3104666	Identifier	n_planes		3104588	1					
ANR	3104667	AssignmentExpression	i += 4	1789:32:48287:48292	3104588	2	True	+=			
ANR	3104668	Identifier	i		3104588	0					
ANR	3104669	PrimaryExpression	4		3104588	1					
ANR	3104670	ExpressionStatement	eb_ctx_avec_free ( ctx -> avec_ctx [ i >> 2 ] )	1790:8:48303:48342	3104588	3	True				
ANR	3104671	CallExpression	eb_ctx_avec_free ( ctx -> avec_ctx [ i >> 2 ] )		3104588	0					
ANR	3104672	Callee	eb_ctx_avec_free		3104588	0					
ANR	3104673	Identifier	eb_ctx_avec_free		3104588	0					
ANR	3104674	ArgumentList	ctx -> avec_ctx [ i >> 2 ]		3104588	1					
ANR	3104675	Argument	ctx -> avec_ctx [ i >> 2 ]		3104588	0					
ANR	3104676	ArrayIndexing	ctx -> avec_ctx [ i >> 2 ]		3104588	0					
ANR	3104677	PtrMemberAccess	ctx -> avec_ctx		3104588	0					
ANR	3104678	Identifier	ctx		3104588	0					
ANR	3104679	Identifier	avec_ctx		3104588	1					
ANR	3104680	ShiftExpression	i >> 2		3104588	1		>>			
ANR	3104681	Identifier	i		3104588	0					
ANR	3104682	PrimaryExpression	2		3104588	1					
ANR	3104683	ExpressionStatement	free ( ctx -> avec_ctx )	1791:6:48350:48369	3104588	3	True				
ANR	3104684	CallExpression	free ( ctx -> avec_ctx )		3104588	0					
ANR	3104685	Callee	free		3104588	0					
ANR	3104686	Identifier	free		3104588	0					
ANR	3104687	ArgumentList	ctx -> avec_ctx		3104588	1					
ANR	3104688	Argument	ctx -> avec_ctx		3104588	0					
ANR	3104689	PtrMemberAccess	ctx -> avec_ctx		3104588	0					
ANR	3104690	Identifier	ctx		3104588	0					
ANR	3104691	Identifier	avec_ctx		3104588	1					
ANR	3104692	ElseStatement	else		3104588	0					
ANR	3104693	CompoundStatement		24:4:447:447	3104588	0					
ANR	3104694	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		3104588	0					
ANR	3104695	ForInit	i = 0 ;	1797:11:48415:48420	3104588	0	True				
ANR	3104696	AssignmentExpression	i = 0		3104588	0		=			
ANR	3104697	Identifier	i		3104588	0					
ANR	3104698	PrimaryExpression	0		3104588	1					
ANR	3104699	Condition	i < n_planes	1797:18:48422:48433	3104588	1	True				
ANR	3104700	RelationalExpression	i < n_planes		3104588	0		<			
ANR	3104701	Identifier	i		3104588	0					
ANR	3104702	Identifier	n_planes		3104588	1					
ANR	3104703	PostIncDecOperationExpression	i ++	1797:32:48436:48438	3104588	2	True				
ANR	3104704	Identifier	i		3104588	0					
ANR	3104705	IncDec	++		3104588	1					
ANR	3104706	ExpressionStatement	even_better_plane_free ( ctx -> plane_ctx [ i ] )	1798:8:48449:48491	3104588	3	True				
ANR	3104707	CallExpression	even_better_plane_free ( ctx -> plane_ctx [ i ] )		3104588	0					
ANR	3104708	Callee	even_better_plane_free		3104588	0					
ANR	3104709	Identifier	even_better_plane_free		3104588	0					
ANR	3104710	ArgumentList	ctx -> plane_ctx [ i ]		3104588	1					
ANR	3104711	Argument	ctx -> plane_ctx [ i ]		3104588	0					
ANR	3104712	ArrayIndexing	ctx -> plane_ctx [ i ]		3104588	0					
ANR	3104713	PtrMemberAccess	ctx -> plane_ctx		3104588	0					
ANR	3104714	Identifier	ctx		3104588	0					
ANR	3104715	Identifier	plane_ctx		3104588	1					
ANR	3104716	Identifier	i		3104588	1					
ANR	3104717	ExpressionStatement	free ( ctx -> plane_ctx )	1799:6:48499:48519	3104588	1	True				
ANR	3104718	CallExpression	free ( ctx -> plane_ctx )		3104588	0					
ANR	3104719	Callee	free		3104588	0					
ANR	3104720	Identifier	free		3104588	0					
ANR	3104721	ArgumentList	ctx -> plane_ctx		3104588	1					
ANR	3104722	Argument	ctx -> plane_ctx		3104588	0					
ANR	3104723	PtrMemberAccess	ctx -> plane_ctx		3104588	0					
ANR	3104724	Identifier	ctx		3104588	0					
ANR	3104725	Identifier	plane_ctx		3104588	1					
ANR	3104726	ExpressionStatement	free ( ctx -> strengths )	1801:2:48529:48550	3104588	4	True				
ANR	3104727	CallExpression	free ( ctx -> strengths )		3104588	0					
ANR	3104728	Callee	free		3104588	0					
ANR	3104729	Identifier	free		3104588	0					
ANR	3104730	ArgumentList	ctx -> strengths		3104588	1					
ANR	3104731	Argument	ctx -> strengths		3104588	0					
ANR	3104732	PtrMemberAccess	ctx -> strengths		3104588	0					
ANR	3104733	Identifier	ctx		3104588	0					
ANR	3104734	Identifier	strengths		3104588	1					
ANR	3104735	ExpressionStatement	free ( ctx -> c_line )	1802:2:48554:48572	3104588	5	True				
ANR	3104736	CallExpression	free ( ctx -> c_line )		3104588	0					
ANR	3104737	Callee	free		3104588	0					
ANR	3104738	Identifier	free		3104588	0					
ANR	3104739	ArgumentList	ctx -> c_line		3104588	1					
ANR	3104740	Argument	ctx -> c_line		3104588	0					
ANR	3104741	PtrMemberAccess	ctx -> c_line		3104588	0					
ANR	3104742	Identifier	ctx		3104588	0					
ANR	3104743	Identifier	c_line		3104588	1					
ANR	3104744	ExpressionStatement	free ( ctx )	1804:2:48577:48587	3104588	6	True				
ANR	3104745	CallExpression	free ( ctx )		3104588	0					
ANR	3104746	Callee	free		3104588	0					
ANR	3104747	Identifier	free		3104588	0					
ANR	3104748	ArgumentList	ctx		3104588	1					
ANR	3104749	Argument	ctx		3104588	0					
ANR	3104750	Identifier	ctx		3104588	0					
ANR	3104751	ReturnType	void		3104588	1					
ANR	3104752	Identifier	even_better_free		3104588	2					
ANR	3104753	ParameterList	EvenBetterCtx * ctx		3104588	3					
ANR	3104754	Parameter	EvenBetterCtx * ctx	1772:18:47934:47951	3104588	0	True				
ANR	3104755	ParameterType	EvenBetterCtx *		3104588	0					
ANR	3104756	Identifier	ctx		3104588	1					
ANR	3104757	CFGEntryNode	ENTRY		3104588		True				
ANR	3104758	CFGExitNode	EXIT		3104588		True				
ANR	3104759	Symbol	ctx -> strengths		3104588						
ANR	3104760	Symbol	ctx		3104588						
ANR	3104761	Symbol	n_planes		3104588						
ANR	3104762	Symbol	ctx -> c_line		3104588						
ANR	3104763	Symbol	i		3104588						
ANR	3104764	Symbol	ctx -> n_planes		3104588						
ANR	3104765	Symbol	* ctx -> sse2_ctx		3104588						
ANR	3104766	Symbol	* ctx		3104588						
ANR	3104767	Symbol	ctx -> using_vectors		3104588						
ANR	3104768	Symbol	* i		3104588						
ANR	3104769	Symbol	* ctx -> avec_ctx		3104588						
ANR	3104770	Symbol	ctx -> sse2_ctx		3104588						
ANR	3104771	Symbol	ctx -> plane_ctx		3104588						
ANR	3104772	Symbol	* * ctx		3104588						
ANR	3104773	Symbol	* ctx -> plane_ctx		3104588						
ANR	3104774	Symbol	ctx -> dump_file		3104588						
ANR	3104775	Symbol	ctx -> avec_ctx		3104588						
