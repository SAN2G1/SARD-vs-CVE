command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9393638	File	data/converged/CVE-2018-16863_ghostpdl/rinkj-config.c								
ANR	9393639	Function	rinkj_strdup_size	35:0:988:1157							
ANR	9393640	FunctionDef	"rinkj_strdup_size (const char * src , int size)"		9393639	0					
ANR	9393641	CompoundStatement		37:0:1041:1157	9393639	0					
ANR	9393642	IdentifierDeclStatement	char * result ;	38:2:1045:1057	9393639	0	True				
ANR	9393643	IdentifierDecl	* result		9393639	0					
ANR	9393644	IdentifierDeclType	char *		9393639	0					
ANR	9393645	Identifier	result		9393639	1					
ANR	9393646	ExpressionStatement	result = malloc ( size + 1 )	40:2:1062:1088	9393639	1	True				
ANR	9393647	AssignmentExpression	result = malloc ( size + 1 )		9393639	0		=			
ANR	9393648	Identifier	result		9393639	0					
ANR	9393649	CallExpression	malloc ( size + 1 )		9393639	1					
ANR	9393650	Callee	malloc		9393639	0					
ANR	9393651	Identifier	malloc		9393639	0					
ANR	9393652	ArgumentList	size + 1		9393639	1					
ANR	9393653	Argument	size + 1		9393639	0					
ANR	9393654	AdditiveExpression	size + 1		9393639	0		+			
ANR	9393655	Identifier	size		9393639	0					
ANR	9393656	PrimaryExpression	1		9393639	1					
ANR	9393657	ExpressionStatement	"memcpy ( result , src , size )"	41:2:1092:1118	9393639	2	True				
ANR	9393658	CallExpression	"memcpy ( result , src , size )"		9393639	0					
ANR	9393659	Callee	memcpy		9393639	0					
ANR	9393660	Identifier	memcpy		9393639	0					
ANR	9393661	ArgumentList	result		9393639	1					
ANR	9393662	Argument	result		9393639	0					
ANR	9393663	Identifier	result		9393639	0					
ANR	9393664	Argument	src		9393639	1					
ANR	9393665	Identifier	src		9393639	0					
ANR	9393666	Argument	size		9393639	2					
ANR	9393667	Identifier	size		9393639	0					
ANR	9393668	ExpressionStatement	result [ size ] = 0	42:2:1122:1138	9393639	3	True				
ANR	9393669	AssignmentExpression	result [ size ] = 0		9393639	0		=			
ANR	9393670	ArrayIndexing	result [ size ]		9393639	0					
ANR	9393671	Identifier	result		9393639	0					
ANR	9393672	Identifier	size		9393639	1					
ANR	9393673	PrimaryExpression	0		9393639	1					
ANR	9393674	ReturnStatement	return result ;	43:2:1142:1155	9393639	4	True				
ANR	9393675	Identifier	result		9393639	0					
ANR	9393676	ReturnType	char *		9393639	1					
ANR	9393677	Identifier	rinkj_strdup_size		9393639	2					
ANR	9393678	ParameterList	"const char * src , int size"		9393639	3					
ANR	9393679	Parameter	const char * src	36:19:1014:1028	9393639	0	True				
ANR	9393680	ParameterType	const char *		9393639	0					
ANR	9393681	Identifier	src		9393639	1					
ANR	9393682	Parameter	int size	36:36:1031:1038	9393639	1	True				
ANR	9393683	ParameterType	int		9393639	0					
ANR	9393684	Identifier	size		9393639	1					
ANR	9393685	CFGEntryNode	ENTRY		9393639		True				
ANR	9393686	CFGExitNode	EXIT		9393639		True				
ANR	9393687	Symbol	result		9393639						
ANR	9393688	Symbol	malloc		9393639						
ANR	9393689	Symbol	* size		9393639						
ANR	9393690	Symbol	size		9393639						
ANR	9393691	Symbol	src		9393639						
ANR	9393692	Symbol	* result		9393639						
ANR	9393693	Function	rinkj_config_get	55:0:1391:2353							
ANR	9393694	FunctionDef	"rinkj_config_get (const char * config , const char * key)"		9393693	0					
ANR	9393695	CompoundStatement		57:0:1453:2353	9393693	0					
ANR	9393696	IdentifierDeclStatement	int ix ;	58:2:1457:1463	9393693	0	True				
ANR	9393697	IdentifierDecl	ix		9393693	0					
ANR	9393698	IdentifierDeclType	int		9393693	0					
ANR	9393699	Identifier	ix		9393693	1					
ANR	9393700	IdentifierDeclStatement	"int ix_eol , ix_next ;"	59:2:1467:1486	9393693	1	True				
ANR	9393701	IdentifierDecl	ix_eol		9393693	0					
ANR	9393702	IdentifierDeclType	int		9393693	0					
ANR	9393703	Identifier	ix_eol		9393693	1					
ANR	9393704	IdentifierDecl	ix_next		9393693	1					
ANR	9393705	IdentifierDeclType	int		9393693	0					
ANR	9393706	Identifier	ix_next		9393693	1					
ANR	9393707	IfStatement	if ( config == NULL )		9393693	2					
ANR	9393708	Condition	config == NULL	61:6:1495:1508	9393693	0	True				
ANR	9393709	EqualityExpression	config == NULL		9393693	0		==			
ANR	9393710	Identifier	config		9393693	0					
ANR	9393711	Identifier	NULL		9393693	1					
ANR	9393712	ReturnStatement	return NULL ;	62:4:1515:1526	9393693	1	True				
ANR	9393713	Identifier	NULL		9393693	0					
ANR	9393714	ForStatement	for ( ix = 0 ; config [ ix ] ; ix = ix_next )		9393693	3					
ANR	9393715	ForInit	ix = 0 ;	64:7:1536:1542	9393693	0	True				
ANR	9393716	AssignmentExpression	ix = 0		9393693	0		=			
ANR	9393717	Identifier	ix		9393693	0					
ANR	9393718	PrimaryExpression	0		9393693	1					
ANR	9393719	Condition	config [ ix ]	64:15:1544:1553	9393693	1	True				
ANR	9393720	ArrayIndexing	config [ ix ]		9393693	0					
ANR	9393721	Identifier	config		9393693	0					
ANR	9393722	Identifier	ix		9393693	1					
ANR	9393723	AssignmentExpression	ix = ix_next	64:27:1556:1567	9393693	2	True	=			
ANR	9393724	Identifier	ix		9393693	0					
ANR	9393725	Identifier	ix_next		9393693	1					
ANR	9393726	CompoundStatement		11:6:146:156	9393693	3					
ANR	9393727	IdentifierDeclStatement	char * p_nl ;	66:6:1582:1592	9393693	0	True				
ANR	9393728	IdentifierDecl	* p_nl		9393693	0					
ANR	9393729	IdentifierDeclType	char *		9393693	0					
ANR	9393730	Identifier	p_nl		9393693	1					
ANR	9393731	IdentifierDeclStatement	int key_ix ;	67:6:1600:1610	9393693	1	True				
ANR	9393732	IdentifierDecl	key_ix		9393693	0					
ANR	9393733	IdentifierDeclType	int		9393693	0					
ANR	9393734	Identifier	key_ix		9393693	1					
ANR	9393735	ExpressionStatement	"p_nl = strchr ( config + ix , '\\n' )"	69:6:1619:1652	9393693	2	True				
ANR	9393736	AssignmentExpression	"p_nl = strchr ( config + ix , '\\n' )"		9393693	0		=			
ANR	9393737	Identifier	p_nl		9393693	0					
ANR	9393738	CallExpression	"strchr ( config + ix , '\\n' )"		9393693	1					
ANR	9393739	Callee	strchr		9393693	0					
ANR	9393740	Identifier	strchr		9393693	0					
ANR	9393741	ArgumentList	config + ix		9393693	1					
ANR	9393742	Argument	config + ix		9393693	0					
ANR	9393743	AdditiveExpression	config + ix		9393693	0		+			
ANR	9393744	Identifier	config		9393693	0					
ANR	9393745	Identifier	ix		9393693	1					
ANR	9393746	Argument	'\\n'		9393693	1					
ANR	9393747	PrimaryExpression	'\\n'		9393693	0					
ANR	9393748	IfStatement	if ( p_nl == NULL )		9393693	3					
ANR	9393749	Condition	p_nl == NULL	70:10:1664:1675	9393693	0	True				
ANR	9393750	EqualityExpression	p_nl == NULL		9393693	0		==			
ANR	9393751	Identifier	p_nl		9393693	0					
ANR	9393752	Identifier	NULL		9393693	1					
ANR	9393753	CompoundStatement		15:8:232:232	9393693	1					
ANR	9393754	ExpressionStatement	ix_eol = strlen ( config + ix )	73:10:1742:1771	9393693	0	True				
ANR	9393755	AssignmentExpression	ix_eol = strlen ( config + ix )		9393693	0		=			
ANR	9393756	Identifier	ix_eol		9393693	0					
ANR	9393757	CallExpression	strlen ( config + ix )		9393693	1					
ANR	9393758	Callee	strlen		9393693	0					
ANR	9393759	Identifier	strlen		9393693	0					
ANR	9393760	ArgumentList	config + ix		9393693	1					
ANR	9393761	Argument	config + ix		9393693	0					
ANR	9393762	AdditiveExpression	config + ix		9393693	0		+			
ANR	9393763	Identifier	config		9393693	0					
ANR	9393764	Identifier	ix		9393693	1					
ANR	9393765	ExpressionStatement	ix_next = ix_eol	74:10:1783:1799	9393693	1	True				
ANR	9393766	AssignmentExpression	ix_next = ix_eol		9393693	0		=			
ANR	9393767	Identifier	ix_next		9393693	0					
ANR	9393768	Identifier	ix_eol		9393693	1					
ANR	9393769	ElseStatement	else		9393693	0					
ANR	9393770	CompoundStatement		21:8:376:376	9393693	0					
ANR	9393771	ExpressionStatement	ix_eol = ix + p_nl - config	78:10:1842:1869	9393693	0	True				
ANR	9393772	AssignmentExpression	ix_eol = ix + p_nl - config		9393693	0		=			
ANR	9393773	Identifier	ix_eol		9393693	0					
ANR	9393774	AdditiveExpression	ix + p_nl - config		9393693	1		+			
ANR	9393775	Identifier	ix		9393693	0					
ANR	9393776	AdditiveExpression	p_nl - config		9393693	1		-			
ANR	9393777	Identifier	p_nl		9393693	0					
ANR	9393778	Identifier	config		9393693	1					
ANR	9393779	ExpressionStatement	ix_next = ix_eol + 1	79:10:1881:1901	9393693	1	True				
ANR	9393780	AssignmentExpression	ix_next = ix_eol + 1		9393693	0		=			
ANR	9393781	Identifier	ix_next		9393693	0					
ANR	9393782	AdditiveExpression	ix_eol + 1		9393693	1		+			
ANR	9393783	Identifier	ix_eol		9393693	0					
ANR	9393784	PrimaryExpression	1		9393693	1					
ANR	9393785	ForStatement	for ( key_ix = 0 ; ix + key_ix < ix_eol ; key_ix ++ )		9393693	4					
ANR	9393786	ForInit	key_ix = 0 ;	82:11:1925:1935	9393693	0	True				
ANR	9393787	AssignmentExpression	key_ix = 0		9393693	0		=			
ANR	9393788	Identifier	key_ix		9393693	0					
ANR	9393789	PrimaryExpression	0		9393693	1					
ANR	9393790	Condition	ix + key_ix < ix_eol	82:23:1937:1956	9393693	1	True				
ANR	9393791	RelationalExpression	ix + key_ix < ix_eol		9393693	0		<			
ANR	9393792	AdditiveExpression	ix + key_ix		9393693	0		+			
ANR	9393793	Identifier	ix		9393693	0					
ANR	9393794	Identifier	key_ix		9393693	1					
ANR	9393795	Identifier	ix_eol		9393693	1					
ANR	9393796	PostIncDecOperationExpression	key_ix ++	82:45:1959:1966	9393693	2	True				
ANR	9393797	Identifier	key_ix		9393693	0					
ANR	9393798	IncDec	++		9393693	1					
ANR	9393799	CompoundStatement		27:8:523:523	9393693	3					
ANR	9393800	IfStatement	if ( key [ key_ix ] == 0 && config [ ix + key_ix ] == ':' )		9393693	0					
ANR	9393801	Condition	key [ key_ix ] == 0 && config [ ix + key_ix ] == ':'	84:14:1993:2038	9393693	0	True				
ANR	9393802	AndExpression	key [ key_ix ] == 0 && config [ ix + key_ix ] == ':'		9393693	0		&&			
ANR	9393803	EqualityExpression	key [ key_ix ] == 0		9393693	0		==			
ANR	9393804	ArrayIndexing	key [ key_ix ]		9393693	0					
ANR	9393805	Identifier	key		9393693	0					
ANR	9393806	Identifier	key_ix		9393693	1					
ANR	9393807	PrimaryExpression	0		9393693	1					
ANR	9393808	EqualityExpression	config [ ix + key_ix ] == ':'		9393693	1		==			
ANR	9393809	ArrayIndexing	config [ ix + key_ix ]		9393693	0					
ANR	9393810	Identifier	config		9393693	0					
ANR	9393811	AdditiveExpression	ix + key_ix		9393693	1		+			
ANR	9393812	Identifier	ix		9393693	0					
ANR	9393813	Identifier	key_ix		9393693	1					
ANR	9393814	PrimaryExpression	':'		9393693	1					
ANR	9393815	CompoundStatement		29:12:599:599	9393693	1					
ANR	9393816	ExpressionStatement	ix += key_ix + 1	86:14:2069:2085	9393693	0	True				
ANR	9393817	AssignmentExpression	ix += key_ix + 1		9393693	0		+=			
ANR	9393818	Identifier	ix		9393693	0					
ANR	9393819	AdditiveExpression	key_ix + 1		9393693	1		+			
ANR	9393820	Identifier	key_ix		9393693	0					
ANR	9393821	PrimaryExpression	1		9393693	1					
ANR	9393822	WhileStatement	while ( ix < ix_eol && isspace ( config [ ix ] ) )		9393693	1					
ANR	9393823	Condition	ix < ix_eol && isspace ( config [ ix ] )	87:21:2108:2142	9393693	0	True				
ANR	9393824	AndExpression	ix < ix_eol && isspace ( config [ ix ] )		9393693	0		&&			
ANR	9393825	RelationalExpression	ix < ix_eol		9393693	0		<			
ANR	9393826	Identifier	ix		9393693	0					
ANR	9393827	Identifier	ix_eol		9393693	1					
ANR	9393828	CallExpression	isspace ( config [ ix ] )		9393693	1					
ANR	9393829	Callee	isspace		9393693	0					
ANR	9393830	Identifier	isspace		9393693	0					
ANR	9393831	ArgumentList	config [ ix ]		9393693	1					
ANR	9393832	Argument	config [ ix ]		9393693	0					
ANR	9393833	ArrayIndexing	config [ ix ]		9393693	0					
ANR	9393834	Identifier	config		9393693	0					
ANR	9393835	Identifier	ix		9393693	1					
ANR	9393836	ExpressionStatement	ix ++	88:16:2161:2165	9393693	1	True				
ANR	9393837	PostIncDecOperationExpression	ix ++		9393693	0					
ANR	9393838	Identifier	ix		9393693	0					
ANR	9393839	IncDec	++		9393693	1					
ANR	9393840	ReturnStatement	"return rinkj_strdup_size ( config + ix , ix_eol - ix ) ;"	89:14:2181:2232	9393693	2	True				
ANR	9393841	CallExpression	"rinkj_strdup_size ( config + ix , ix_eol - ix )"		9393693	0					
ANR	9393842	Callee	rinkj_strdup_size		9393693	0					
ANR	9393843	Identifier	rinkj_strdup_size		9393693	0					
ANR	9393844	ArgumentList	config + ix		9393693	1					
ANR	9393845	Argument	config + ix		9393693	0					
ANR	9393846	AdditiveExpression	config + ix		9393693	0		+			
ANR	9393847	Identifier	config		9393693	0					
ANR	9393848	Identifier	ix		9393693	1					
ANR	9393849	Argument	ix_eol - ix		9393693	1					
ANR	9393850	AdditiveExpression	ix_eol - ix		9393693	0		-			
ANR	9393851	Identifier	ix_eol		9393693	0					
ANR	9393852	Identifier	ix		9393693	1					
ANR	9393853	ElseStatement	else		9393693	0					
ANR	9393854	IfStatement	if ( key [ key_ix ] != config [ ix + key_ix ] )		9393693	0					
ANR	9393855	Condition	key [ key_ix ] != config [ ix + key_ix ]	91:19:2267:2300	9393693	0	True				
ANR	9393856	EqualityExpression	key [ key_ix ] != config [ ix + key_ix ]		9393693	0		!=			
ANR	9393857	ArrayIndexing	key [ key_ix ]		9393693	0					
ANR	9393858	Identifier	key		9393693	0					
ANR	9393859	Identifier	key_ix		9393693	1					
ANR	9393860	ArrayIndexing	config [ ix + key_ix ]		9393693	1					
ANR	9393861	Identifier	config		9393693	0					
ANR	9393862	AdditiveExpression	ix + key_ix		9393693	1		+			
ANR	9393863	Identifier	ix		9393693	0					
ANR	9393864	Identifier	key_ix		9393693	1					
ANR	9393865	BreakStatement	break ;	92:12:2315:2320	9393693	1	True				
ANR	9393866	ReturnStatement	return NULL ;	95:2:2340:2351	9393693	4	True				
ANR	9393867	Identifier	NULL		9393693	0					
ANR	9393868	ReturnType	char *		9393693	1					
ANR	9393869	Identifier	rinkj_config_get		9393693	2					
ANR	9393870	ParameterList	"const char * config , const char * key"		9393693	3					
ANR	9393871	Parameter	const char * config	56:18:1416:1433	9393693	0	True				
ANR	9393872	ParameterType	const char *		9393693	0					
ANR	9393873	Identifier	config		9393693	1					
ANR	9393874	Parameter	const char * key	56:38:1436:1450	9393693	1	True				
ANR	9393875	ParameterType	const char *		9393693	0					
ANR	9393876	Identifier	key		9393693	1					
ANR	9393877	CFGEntryNode	ENTRY		9393693		True				
ANR	9393878	CFGExitNode	EXIT		9393693		True				
ANR	9393879	Symbol	* config		9393693						
ANR	9393880	Symbol	ix_next		9393693						
ANR	9393881	Symbol	NULL		9393693						
ANR	9393882	Symbol	ix_eol		9393693						
ANR	9393883	Symbol	isspace		9393693						
ANR	9393884	Symbol	strchr		9393693						
ANR	9393885	Symbol	* key		9393693						
ANR	9393886	Symbol	ix		9393693						
ANR	9393887	Symbol	key_ix		9393693						
ANR	9393888	Symbol	strlen		9393693						
ANR	9393889	Symbol	* key_ix		9393693						
ANR	9393890	Symbol	rinkj_strdup_size		9393693						
ANR	9393891	Symbol	* ix		9393693						
ANR	9393892	Symbol	p_nl		9393693						
ANR	9393893	Symbol	config		9393693						
ANR	9393894	Symbol	key		9393693						
ANR	9393895	Function	rinkj_config_keyval	108:0:2680:3784							
ANR	9393896	FunctionDef	"rinkj_config_keyval (const char * config , char * * p_val , const char * * p_next)"		9393895	0					
ANR	9393897	CompoundStatement		110:0:2763:3784	9393895	0					
ANR	9393898	IdentifierDeclStatement	char * key ;	111:2:2767:2776	9393895	0	True				
ANR	9393899	IdentifierDecl	* key		9393895	0					
ANR	9393900	IdentifierDeclType	char *		9393895	0					
ANR	9393901	Identifier	key		9393895	1					
ANR	9393902	IdentifierDeclStatement	int ix ;	112:2:2780:2786	9393895	1	True				
ANR	9393903	IdentifierDecl	ix		9393895	0					
ANR	9393904	IdentifierDeclType	int		9393895	0					
ANR	9393905	Identifier	ix		9393895	1					
ANR	9393906	IdentifierDeclStatement	"int ix_eol , ix_next ;"	113:2:2790:2809	9393895	2	True				
ANR	9393907	IdentifierDecl	ix_eol		9393895	0					
ANR	9393908	IdentifierDeclType	int		9393895	0					
ANR	9393909	Identifier	ix_eol		9393895	1					
ANR	9393910	IdentifierDecl	ix_next		9393895	1					
ANR	9393911	IdentifierDeclType	int		9393895	0					
ANR	9393912	Identifier	ix_next		9393895	1					
ANR	9393913	IfStatement	if ( config == NULL )		9393895	3					
ANR	9393914	Condition	config == NULL	115:6:2818:2831	9393895	0	True				
ANR	9393915	EqualityExpression	config == NULL		9393895	0		==			
ANR	9393916	Identifier	config		9393895	0					
ANR	9393917	Identifier	NULL		9393895	1					
ANR	9393918	ReturnStatement	return NULL ;	116:4:2838:2849	9393895	1	True				
ANR	9393919	Identifier	NULL		9393895	0					
ANR	9393920	ForStatement	for ( ix = 0 ; config [ ix ] ; ix = ix_next )		9393895	4					
ANR	9393921	ForInit	ix = 0 ;	118:7:2859:2865	9393895	0	True				
ANR	9393922	AssignmentExpression	ix = 0		9393895	0		=			
ANR	9393923	Identifier	ix		9393895	0					
ANR	9393924	PrimaryExpression	0		9393895	1					
ANR	9393925	Condition	config [ ix ]	118:15:2867:2876	9393895	1	True				
ANR	9393926	ArrayIndexing	config [ ix ]		9393895	0					
ANR	9393927	Identifier	config		9393895	0					
ANR	9393928	Identifier	ix		9393895	1					
ANR	9393929	AssignmentExpression	ix = ix_next	118:27:2879:2890	9393895	2	True	=			
ANR	9393930	Identifier	ix		9393895	0					
ANR	9393931	Identifier	ix_next		9393895	1					
ANR	9393932	CompoundStatement		12:6:159:169	9393895	3					
ANR	9393933	IdentifierDeclStatement	char * p_nl ;	120:6:2905:2915	9393895	0	True				
ANR	9393934	IdentifierDecl	* p_nl		9393895	0					
ANR	9393935	IdentifierDeclType	char *		9393895	0					
ANR	9393936	Identifier	p_nl		9393895	1					
ANR	9393937	IdentifierDeclStatement	int key_ix ;	121:6:2923:2933	9393895	1	True				
ANR	9393938	IdentifierDecl	key_ix		9393895	0					
ANR	9393939	IdentifierDeclType	int		9393895	0					
ANR	9393940	Identifier	key_ix		9393895	1					
ANR	9393941	ExpressionStatement	"p_nl = strchr ( config + ix , '\\n' )"	123:6:2942:2975	9393895	2	True				
ANR	9393942	AssignmentExpression	"p_nl = strchr ( config + ix , '\\n' )"		9393895	0		=			
ANR	9393943	Identifier	p_nl		9393895	0					
ANR	9393944	CallExpression	"strchr ( config + ix , '\\n' )"		9393895	1					
ANR	9393945	Callee	strchr		9393895	0					
ANR	9393946	Identifier	strchr		9393895	0					
ANR	9393947	ArgumentList	config + ix		9393895	1					
ANR	9393948	Argument	config + ix		9393895	0					
ANR	9393949	AdditiveExpression	config + ix		9393895	0		+			
ANR	9393950	Identifier	config		9393895	0					
ANR	9393951	Identifier	ix		9393895	1					
ANR	9393952	Argument	'\\n'		9393895	1					
ANR	9393953	PrimaryExpression	'\\n'		9393895	0					
ANR	9393954	IfStatement	if ( p_nl == NULL )		9393895	3					
ANR	9393955	Condition	p_nl == NULL	124:10:2987:2998	9393895	0	True				
ANR	9393956	EqualityExpression	p_nl == NULL		9393895	0		==			
ANR	9393957	Identifier	p_nl		9393895	0					
ANR	9393958	Identifier	NULL		9393895	1					
ANR	9393959	CompoundStatement		16:8:245:245	9393895	1					
ANR	9393960	ExpressionStatement	ix_eol = strlen ( config + ix )	127:10:3065:3094	9393895	0	True				
ANR	9393961	AssignmentExpression	ix_eol = strlen ( config + ix )		9393895	0		=			
ANR	9393962	Identifier	ix_eol		9393895	0					
ANR	9393963	CallExpression	strlen ( config + ix )		9393895	1					
ANR	9393964	Callee	strlen		9393895	0					
ANR	9393965	Identifier	strlen		9393895	0					
ANR	9393966	ArgumentList	config + ix		9393895	1					
ANR	9393967	Argument	config + ix		9393895	0					
ANR	9393968	AdditiveExpression	config + ix		9393895	0		+			
ANR	9393969	Identifier	config		9393895	0					
ANR	9393970	Identifier	ix		9393895	1					
ANR	9393971	ExpressionStatement	ix_next = ix_eol	128:10:3106:3122	9393895	1	True				
ANR	9393972	AssignmentExpression	ix_next = ix_eol		9393895	0		=			
ANR	9393973	Identifier	ix_next		9393895	0					
ANR	9393974	Identifier	ix_eol		9393895	1					
ANR	9393975	ElseStatement	else		9393895	0					
ANR	9393976	CompoundStatement		22:8:389:389	9393895	0					
ANR	9393977	ExpressionStatement	ix_eol = ix + p_nl - config	132:10:3165:3192	9393895	0	True				
ANR	9393978	AssignmentExpression	ix_eol = ix + p_nl - config		9393895	0		=			
ANR	9393979	Identifier	ix_eol		9393895	0					
ANR	9393980	AdditiveExpression	ix + p_nl - config		9393895	1		+			
ANR	9393981	Identifier	ix		9393895	0					
ANR	9393982	AdditiveExpression	p_nl - config		9393895	1		-			
ANR	9393983	Identifier	p_nl		9393895	0					
ANR	9393984	Identifier	config		9393895	1					
ANR	9393985	ExpressionStatement	ix_next = ix_eol + 1	133:10:3204:3224	9393895	1	True				
ANR	9393986	AssignmentExpression	ix_next = ix_eol + 1		9393895	0		=			
ANR	9393987	Identifier	ix_next		9393895	0					
ANR	9393988	AdditiveExpression	ix_eol + 1		9393895	1		+			
ANR	9393989	Identifier	ix_eol		9393895	0					
ANR	9393990	PrimaryExpression	1		9393895	1					
ANR	9393991	ForStatement	for ( key_ix = 0 ; ix + key_ix < ix_eol ; key_ix ++ )		9393895	4					
ANR	9393992	ForInit	key_ix = 0 ;	136:11:3248:3258	9393895	0	True				
ANR	9393993	AssignmentExpression	key_ix = 0		9393895	0		=			
ANR	9393994	Identifier	key_ix		9393895	0					
ANR	9393995	PrimaryExpression	0		9393895	1					
ANR	9393996	Condition	ix + key_ix < ix_eol	136:23:3260:3279	9393895	1	True				
ANR	9393997	RelationalExpression	ix + key_ix < ix_eol		9393895	0		<			
ANR	9393998	AdditiveExpression	ix + key_ix		9393895	0		+			
ANR	9393999	Identifier	ix		9393895	0					
ANR	9394000	Identifier	key_ix		9393895	1					
ANR	9394001	Identifier	ix_eol		9393895	1					
ANR	9394002	PostIncDecOperationExpression	key_ix ++	136:45:3282:3289	9393895	2	True				
ANR	9394003	Identifier	key_ix		9393895	0					
ANR	9394004	IncDec	++		9393895	1					
ANR	9394005	CompoundStatement		28:8:536:536	9393895	3					
ANR	9394006	IfStatement	if ( config [ ix + key_ix ] == ':' )		9393895	0					
ANR	9394007	Condition	config [ ix + key_ix ] == ':'	138:14:3316:3341	9393895	0	True				
ANR	9394008	EqualityExpression	config [ ix + key_ix ] == ':'		9393895	0		==			
ANR	9394009	ArrayIndexing	config [ ix + key_ix ]		9393895	0					
ANR	9394010	Identifier	config		9393895	0					
ANR	9394011	AdditiveExpression	ix + key_ix		9393895	1		+			
ANR	9394012	Identifier	ix		9393895	0					
ANR	9394013	Identifier	key_ix		9393895	1					
ANR	9394014	PrimaryExpression	':'		9393895	1					
ANR	9394015	CompoundStatement		30:12:592:592	9393895	1					
ANR	9394016	ExpressionStatement	"key = rinkj_strdup_size ( config + ix , key_ix )"	140:14:3372:3417	9393895	0	True				
ANR	9394017	AssignmentExpression	"key = rinkj_strdup_size ( config + ix , key_ix )"		9393895	0		=			
ANR	9394018	Identifier	key		9393895	0					
ANR	9394019	CallExpression	"rinkj_strdup_size ( config + ix , key_ix )"		9393895	1					
ANR	9394020	Callee	rinkj_strdup_size		9393895	0					
ANR	9394021	Identifier	rinkj_strdup_size		9393895	0					
ANR	9394022	ArgumentList	config + ix		9393895	1					
ANR	9394023	Argument	config + ix		9393895	0					
ANR	9394024	AdditiveExpression	config + ix		9393895	0		+			
ANR	9394025	Identifier	config		9393895	0					
ANR	9394026	Identifier	ix		9393895	1					
ANR	9394027	Argument	key_ix		9393895	1					
ANR	9394028	Identifier	key_ix		9393895	0					
ANR	9394029	ExpressionStatement	ix += key_ix + 1	141:14:3433:3449	9393895	1	True				
ANR	9394030	AssignmentExpression	ix += key_ix + 1		9393895	0		+=			
ANR	9394031	Identifier	ix		9393895	0					
ANR	9394032	AdditiveExpression	key_ix + 1		9393895	1		+			
ANR	9394033	Identifier	key_ix		9393895	0					
ANR	9394034	PrimaryExpression	1		9393895	1					
ANR	9394035	WhileStatement	while ( ix < ix_eol && isspace ( config [ ix ] ) )		9393895	2					
ANR	9394036	Condition	ix < ix_eol && isspace ( config [ ix ] )	142:21:3472:3506	9393895	0	True				
ANR	9394037	AndExpression	ix < ix_eol && isspace ( config [ ix ] )		9393895	0		&&			
ANR	9394038	RelationalExpression	ix < ix_eol		9393895	0		<			
ANR	9394039	Identifier	ix		9393895	0					
ANR	9394040	Identifier	ix_eol		9393895	1					
ANR	9394041	CallExpression	isspace ( config [ ix ] )		9393895	1					
ANR	9394042	Callee	isspace		9393895	0					
ANR	9394043	Identifier	isspace		9393895	0					
ANR	9394044	ArgumentList	config [ ix ]		9393895	1					
ANR	9394045	Argument	config [ ix ]		9393895	0					
ANR	9394046	ArrayIndexing	config [ ix ]		9393895	0					
ANR	9394047	Identifier	config		9393895	0					
ANR	9394048	Identifier	ix		9393895	1					
ANR	9394049	ExpressionStatement	ix ++	143:16:3525:3529	9393895	1	True				
ANR	9394050	PostIncDecOperationExpression	ix ++		9393895	0					
ANR	9394051	Identifier	ix		9393895	0					
ANR	9394052	IncDec	++		9393895	1					
ANR	9394053	IfStatement	if ( p_val != NULL )		9393895	3					
ANR	9394054	Condition	p_val != NULL	144:18:3549:3561	9393895	0	True				
ANR	9394055	EqualityExpression	p_val != NULL		9393895	0		!=			
ANR	9394056	Identifier	p_val		9393895	0					
ANR	9394057	Identifier	NULL		9393895	1					
ANR	9394058	ExpressionStatement	"* p_val = rinkj_strdup_size ( config + ix , ix_eol - ix )"	145:16:3580:3633	9393895	1	True				
ANR	9394059	AssignmentExpression	"* p_val = rinkj_strdup_size ( config + ix , ix_eol - ix )"		9393895	0		=			
ANR	9394060	UnaryOperationExpression	* p_val		9393895	0					
ANR	9394061	UnaryOperator	*		9393895	0					
ANR	9394062	Identifier	p_val		9393895	1					
ANR	9394063	CallExpression	"rinkj_strdup_size ( config + ix , ix_eol - ix )"		9393895	1					
ANR	9394064	Callee	rinkj_strdup_size		9393895	0					
ANR	9394065	Identifier	rinkj_strdup_size		9393895	0					
ANR	9394066	ArgumentList	config + ix		9393895	1					
ANR	9394067	Argument	config + ix		9393895	0					
ANR	9394068	AdditiveExpression	config + ix		9393895	0		+			
ANR	9394069	Identifier	config		9393895	0					
ANR	9394070	Identifier	ix		9393895	1					
ANR	9394071	Argument	ix_eol - ix		9393895	1					
ANR	9394072	AdditiveExpression	ix_eol - ix		9393895	0		-			
ANR	9394073	Identifier	ix_eol		9393895	0					
ANR	9394074	Identifier	ix		9393895	1					
ANR	9394075	IfStatement	if ( p_next != NULL )		9393895	4					
ANR	9394076	Condition	p_next != NULL	146:18:3653:3666	9393895	0	True				
ANR	9394077	EqualityExpression	p_next != NULL		9393895	0		!=			
ANR	9394078	Identifier	p_next		9393895	0					
ANR	9394079	Identifier	NULL		9393895	1					
ANR	9394080	ExpressionStatement	* p_next = config + ix_next	147:16:3685:3711	9393895	1	True				
ANR	9394081	AssignmentExpression	* p_next = config + ix_next		9393895	0		=			
ANR	9394082	UnaryOperationExpression	* p_next		9393895	0					
ANR	9394083	UnaryOperator	*		9393895	0					
ANR	9394084	Identifier	p_next		9393895	1					
ANR	9394085	AdditiveExpression	config + ix_next		9393895	1		+			
ANR	9394086	Identifier	config		9393895	0					
ANR	9394087	Identifier	ix_next		9393895	1					
ANR	9394088	ReturnStatement	return key ;	148:14:3727:3737	9393895	5	True				
ANR	9394089	Identifier	key		9393895	0					
ANR	9394090	ReturnStatement	return NULL ;	152:2:3771:3782	9393895	5	True				
ANR	9394091	Identifier	NULL		9393895	0					
ANR	9394092	ReturnType	char *		9393895	1					
ANR	9394093	Identifier	rinkj_config_keyval		9393895	2					
ANR	9394094	ParameterList	"const char * config , char * * p_val , const char * * p_next"		9393895	3					
ANR	9394095	Parameter	const char * config	109:21:2708:2725	9393895	0	True				
ANR	9394096	ParameterType	const char *		9393895	0					
ANR	9394097	Identifier	config		9393895	1					
ANR	9394098	Parameter	char * * p_val	109:41:2728:2739	9393895	1	True				
ANR	9394099	ParameterType	char * *		9393895	0					
ANR	9394100	Identifier	p_val		9393895	1					
ANR	9394101	Parameter	const char * * p_next	109:55:2742:2760	9393895	2	True				
ANR	9394102	ParameterType	const char * *		9393895	0					
ANR	9394103	Identifier	p_next		9393895	1					
ANR	9394104	CFGEntryNode	ENTRY		9393895		True				
ANR	9394105	CFGExitNode	EXIT		9393895		True				
ANR	9394106	Symbol	* config		9393895						
ANR	9394107	Symbol	ix_next		9393895						
ANR	9394108	Symbol	NULL		9393895						
ANR	9394109	Symbol	* p_val		9393895						
ANR	9394110	Symbol	p_val		9393895						
ANR	9394111	Symbol	ix_eol		9393895						
ANR	9394112	Symbol	isspace		9393895						
ANR	9394113	Symbol	strchr		9393895						
ANR	9394114	Symbol	p_next		9393895						
ANR	9394115	Symbol	ix		9393895						
ANR	9394116	Symbol	key_ix		9393895						
ANR	9394117	Symbol	strlen		9393895						
ANR	9394118	Symbol	* key_ix		9393895						
ANR	9394119	Symbol	rinkj_strdup_size		9393895						
ANR	9394120	Symbol	* ix		9393895						
ANR	9394121	Symbol	p_nl		9393895						
ANR	9394122	Symbol	config		9393895						
ANR	9394123	Symbol	* p_next		9393895						
ANR	9394124	Symbol	key		9393895						
