command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7231338	File	data/converged/CVE-2018-16863_ghostpdl/libpng_contrib_libtests_makepng.c								
ANR	7231339	Function	flooru	154:0:6014:6097							
ANR	7231340	FunctionDef	flooru (double d)		7231339	0					
ANR	7231341	CompoundStatement		156:0:6051:6097	7231339	0					
ANR	7231342	ExpressionStatement	d = floor ( d )	157:3:6056:6068	7231339	0	True				
ANR	7231343	AssignmentExpression	d = floor ( d )		7231339	0		=			
ANR	7231344	Identifier	d		7231339	0					
ANR	7231345	CallExpression	floor ( d )		7231339	1					
ANR	7231346	Callee	floor		7231339	0					
ANR	7231347	Identifier	floor		7231339	0					
ANR	7231348	ArgumentList	d		7231339	1					
ANR	7231349	Argument	d		7231339	0					
ANR	7231350	Identifier	d		7231339	0					
ANR	7231351	ReturnStatement	return ( unsigned int ) d ;	158:3:6073:6095	7231339	1	True				
ANR	7231352	CastExpression	( unsigned int ) d		7231339	0					
ANR	7231353	CastTarget	unsigned int		7231339	0					
ANR	7231354	Identifier	d		7231339	1					
ANR	7231355	ReturnType	static unsigned int		7231339	1					
ANR	7231356	Identifier	flooru		7231339	2					
ANR	7231357	ParameterList	double d		7231339	3					
ANR	7231358	Parameter	double d	155:7:6041:6048	7231339	0	True				
ANR	7231359	ParameterType	double		7231339	0					
ANR	7231360	Identifier	d		7231339	1					
ANR	7231361	CFGEntryNode	ENTRY		7231339		True				
ANR	7231362	CFGExitNode	EXIT		7231339		True				
ANR	7231363	Symbol	d		7231339						
ANR	7231364	Symbol	floor		7231339						
ANR	7231365	Function	floorb	161:0:6100:6175							
ANR	7231366	FunctionDef	floorb (double d)		7231365	0					
ANR	7231367	CompoundStatement		163:0:6133:6175	7231365	0					
ANR	7231368	ExpressionStatement	d = floor ( d )	164:3:6138:6150	7231365	0	True				
ANR	7231369	AssignmentExpression	d = floor ( d )		7231365	0		=			
ANR	7231370	Identifier	d		7231365	0					
ANR	7231371	CallExpression	floor ( d )		7231365	1					
ANR	7231372	Callee	floor		7231365	0					
ANR	7231373	Identifier	floor		7231365	0					
ANR	7231374	ArgumentList	d		7231365	1					
ANR	7231375	Argument	d		7231365	0					
ANR	7231376	Identifier	d		7231365	0					
ANR	7231377	ReturnStatement	return ( png_byte ) d ;	165:3:6155:6173	7231365	1	True				
ANR	7231378	CastExpression	( png_byte ) d		7231365	0					
ANR	7231379	CastTarget	png_byte		7231365	0					
ANR	7231380	Identifier	d		7231365	1					
ANR	7231381	ReturnType	static png_byte		7231365	1					
ANR	7231382	Identifier	floorb		7231365	2					
ANR	7231383	ParameterList	double d		7231365	3					
ANR	7231384	Parameter	double d	162:7:6123:6130	7231365	0	True				
ANR	7231385	ParameterType	double		7231365	0					
ANR	7231386	Identifier	d		7231365	1					
ANR	7231387	CFGEntryNode	ENTRY		7231365		True				
ANR	7231388	CFGExitNode	EXIT		7231365		True				
ANR	7231389	Symbol	d		7231365						
ANR	7231390	Symbol	floor		7231365						
ANR	7231391	ClassDef	chunk_insert	171:8:6293:6505							
ANR	7231392	DeclStmt									
ANR	7231393	Decl							struct chunk_insert	struct chunk_insert *	next
ANR	7231394	DeclStmt									
ANR	7231395	Decl							"void ( * ) ( png_structp , png_infop , int , png_charpp )"	"void ( * ) ( png_structp , png_infop , int , png_charpp )"	insert
ANR	7231396	DeclStmt									
ANR	7231397	Decl							int	int	nparams
ANR	7231398	DeclStmt									
ANR	7231399	Decl							png_charp	png_charp [ 1 ]	parameters
ANR	7231400	DeclStmt									
ANR	7231401	Decl							chunk_insert	chunk_insert	chunk_insert
ANR	7231402	Function	channels_of_type	179:0:6508:6849							
ANR	7231403	FunctionDef	channels_of_type (int color_type)		7231402	0					
ANR	7231404	CompoundStatement		181:0:6561:6849	7231402	0					
ANR	7231405	IfStatement	if ( color_type & PNG_COLOR_MASK_PALETTE )		7231402	0					
ANR	7231406	Condition	color_type & PNG_COLOR_MASK_PALETTE	182:7:6570:6604	7231402	0	True				
ANR	7231407	BitAndExpression	color_type & PNG_COLOR_MASK_PALETTE		7231402	0		&			
ANR	7231408	Identifier	color_type		7231402	0					
ANR	7231409	Identifier	PNG_COLOR_MASK_PALETTE		7231402	1					
ANR	7231410	ReturnStatement	return 1 ;	183:6:6613:6621	7231402	1	True				
ANR	7231411	PrimaryExpression	1		7231402	0					
ANR	7231412	ElseStatement	else		7231402	0					
ANR	7231413	CompoundStatement		7:6:81:97	7231402	0					
ANR	7231414	IdentifierDeclStatement	int channels = 1 ;	187:6:6643:6659	7231402	0	True				
ANR	7231415	IdentifierDecl	channels = 1		7231402	0					
ANR	7231416	IdentifierDeclType	int		7231402	0					
ANR	7231417	Identifier	channels		7231402	1					
ANR	7231418	AssignmentExpression	channels = 1		7231402	2		=			
ANR	7231419	Identifier	channels		7231402	0					
ANR	7231420	PrimaryExpression	1		7231402	1					
ANR	7231421	IfStatement	if ( color_type & PNG_COLOR_MASK_COLOR )		7231402	1					
ANR	7231422	Condition	color_type & PNG_COLOR_MASK_COLOR	189:10:6672:6704	7231402	0	True				
ANR	7231423	BitAndExpression	color_type & PNG_COLOR_MASK_COLOR		7231402	0		&			
ANR	7231424	Identifier	color_type		7231402	0					
ANR	7231425	Identifier	PNG_COLOR_MASK_COLOR		7231402	1					
ANR	7231426	ExpressionStatement	channels = 3	190:9:6716:6728	7231402	1	True				
ANR	7231427	AssignmentExpression	channels = 3		7231402	0		=			
ANR	7231428	Identifier	channels		7231402	0					
ANR	7231429	PrimaryExpression	3		7231402	1					
ANR	7231430	IfStatement	if ( color_type & PNG_COLOR_MASK_ALPHA )		7231402	2					
ANR	7231431	Condition	color_type & PNG_COLOR_MASK_ALPHA	192:10:6741:6773	7231402	0	True				
ANR	7231432	BitAndExpression	color_type & PNG_COLOR_MASK_ALPHA		7231402	0		&			
ANR	7231433	Identifier	color_type		7231402	0					
ANR	7231434	Identifier	PNG_COLOR_MASK_ALPHA		7231402	1					
ANR	7231435	ReturnStatement	return channels + 1 ;	193:9:6785:6804	7231402	1	True				
ANR	7231436	AdditiveExpression	channels + 1		7231402	0		+			
ANR	7231437	Identifier	channels		7231402	0					
ANR	7231438	PrimaryExpression	1		7231402	1					
ANR	7231439	ElseStatement	else		7231402	0					
ANR	7231440	ReturnStatement	return channels ;	196:9:6827:6842	7231402	0	True				
ANR	7231441	Identifier	channels		7231402	0					
ANR	7231442	ReturnType	static unsigned int		7231402	1					
ANR	7231443	Identifier	channels_of_type		7231402	2					
ANR	7231444	ParameterList	int color_type		7231402	3					
ANR	7231445	Parameter	int color_type	180:17:6545:6558	7231402	0	True				
ANR	7231446	ParameterType	int		7231402	0					
ANR	7231447	Identifier	color_type		7231402	1					
ANR	7231448	CFGEntryNode	ENTRY		7231402		True				
ANR	7231449	CFGExitNode	EXIT		7231402		True				
ANR	7231450	Symbol	channels		7231402						
ANR	7231451	Symbol	PNG_COLOR_MASK_ALPHA		7231402						
ANR	7231452	Symbol	PNG_COLOR_MASK_PALETTE		7231402						
ANR	7231453	Symbol	color_type		7231402						
ANR	7231454	Symbol	PNG_COLOR_MASK_COLOR		7231402						
ANR	7231455	Function	pixel_depth_of_type	200:0:6852:6977							
ANR	7231456	FunctionDef	"pixel_depth_of_type (int color_type , int bit_depth)"		7231455	0					
ANR	7231457	CompoundStatement		202:0:6923:6977	7231455	0					
ANR	7231458	ReturnStatement	return channels_of_type ( color_type ) * bit_depth ;	203:3:6928:6975	7231455	0	True				
ANR	7231459	MultiplicativeExpression	channels_of_type ( color_type ) * bit_depth		7231455	0		*			
ANR	7231460	CallExpression	channels_of_type ( color_type )		7231455	0					
ANR	7231461	Callee	channels_of_type		7231455	0					
ANR	7231462	Identifier	channels_of_type		7231455	0					
ANR	7231463	ArgumentList	color_type		7231455	1					
ANR	7231464	Argument	color_type		7231455	0					
ANR	7231465	Identifier	color_type		7231455	0					
ANR	7231466	Identifier	bit_depth		7231455	1					
ANR	7231467	ReturnType	static unsigned int		7231455	1					
ANR	7231468	Identifier	pixel_depth_of_type		7231455	2					
ANR	7231469	ParameterList	"int color_type , int bit_depth"		7231455	3					
ANR	7231470	Parameter	int color_type	201:20:6892:6905	7231455	0	True				
ANR	7231471	ParameterType	int		7231455	0					
ANR	7231472	Identifier	color_type		7231455	1					
ANR	7231473	Parameter	int bit_depth	201:36:6908:6920	7231455	1	True				
ANR	7231474	ParameterType	int		7231455	0					
ANR	7231475	Identifier	bit_depth		7231455	1					
ANR	7231476	CFGEntryNode	ENTRY		7231455		True				
ANR	7231477	CFGExitNode	EXIT		7231455		True				
ANR	7231478	Symbol	color_type		7231455						
ANR	7231479	Symbol	bit_depth		7231455						
ANR	7231480	Symbol	channels_of_type		7231455						
ANR	7231481	Function	image_size_of_type	206:0:6980:7519							
ANR	7231482	FunctionDef	"image_size_of_type (int color_type , int bit_depth , unsigned int * colors , int small)"		7231481	0					
ANR	7231483	CompoundStatement		209:0:7086:7519	7231481	0					
ANR	7231484	IfStatement	if ( * colors )		7231481	0					
ANR	7231485	Condition	* colors	210:7:7095:7101	7231481	0	True				
ANR	7231486	UnaryOperationExpression	* colors		7231481	0					
ANR	7231487	UnaryOperator	*		7231481	0					
ANR	7231488	Identifier	colors		7231481	1					
ANR	7231489	ReturnStatement	return 16 ;	211:6:7110:7119	7231481	1	True				
ANR	7231490	PrimaryExpression	16		7231481	0					
ANR	7231491	ElseStatement	else		7231481	0					
ANR	7231492	CompoundStatement		7:6:54:114	7231481	0					
ANR	7231493	IdentifierDeclStatement	"int pixel_depth = pixel_depth_of_type ( color_type , bit_depth ) ;"	215:6:7141:7201	7231481	0	True				
ANR	7231494	IdentifierDecl	"pixel_depth = pixel_depth_of_type ( color_type , bit_depth )"		7231481	0					
ANR	7231495	IdentifierDeclType	int		7231481	0					
ANR	7231496	Identifier	pixel_depth		7231481	1					
ANR	7231497	AssignmentExpression	"pixel_depth = pixel_depth_of_type ( color_type , bit_depth )"		7231481	2		=			
ANR	7231498	Identifier	pixel_depth		7231481	0					
ANR	7231499	CallExpression	"pixel_depth_of_type ( color_type , bit_depth )"		7231481	1					
ANR	7231500	Callee	pixel_depth_of_type		7231481	0					
ANR	7231501	Identifier	pixel_depth_of_type		7231481	0					
ANR	7231502	ArgumentList	color_type		7231481	1					
ANR	7231503	Argument	color_type		7231481	0					
ANR	7231504	Identifier	color_type		7231481	0					
ANR	7231505	Argument	bit_depth		7231481	1					
ANR	7231506	Identifier	bit_depth		7231481	0					
ANR	7231507	IfStatement	if ( small )		7231481	1					
ANR	7231508	Condition	small	217:10:7214:7218	7231481	0	True				
ANR	7231509	Identifier	small		7231481	0					
ANR	7231510	CompoundStatement		10:6:140:140	7231481	1					
ANR	7231511	IfStatement	if ( pixel_depth <= 8 )		7231481	0					
ANR	7231512	Condition	pixel_depth <= 8	219:13:7242:7257	7231481	0	True				
ANR	7231513	RelationalExpression	pixel_depth <= 8		7231481	0		<=			
ANR	7231514	Identifier	pixel_depth		7231481	0					
ANR	7231515	PrimaryExpression	8		7231481	1					
ANR	7231516	ReturnStatement	return 1 << pixel_depth ;	220:12:7300:7323	7231481	1	True				
ANR	7231517	ShiftExpression	1 << pixel_depth		7231481	0		<<			
ANR	7231518	PrimaryExpression	1		7231481	0					
ANR	7231519	Identifier	pixel_depth		7231481	1					
ANR	7231520	ElseStatement	else		7231481	0					
ANR	7231521	ReturnStatement	return 256 ;	223:12:7352:7362	7231481	0	True				
ANR	7231522	PrimaryExpression	256		7231481	0					
ANR	7231523	ElseStatement	else		7231481	0					
ANR	7231524	IfStatement	if ( pixel_depth < 8 )		7231481	0					
ANR	7231525	Condition	pixel_depth < 8	226:15:7388:7402	7231481	0	True				
ANR	7231526	RelationalExpression	pixel_depth < 8		7231481	0		<			
ANR	7231527	Identifier	pixel_depth		7231481	0					
ANR	7231528	PrimaryExpression	8		7231481	1					
ANR	7231529	ReturnStatement	return 64 ;	227:9:7414:7423	7231481	1	True				
ANR	7231530	PrimaryExpression	64		7231481	0					
ANR	7231531	ElseStatement	else		7231481	0					
ANR	7231532	IfStatement	if ( pixel_depth > 16 )		7231481	0					
ANR	7231533	Condition	pixel_depth > 16	229:15:7441:7456	7231481	0	True				
ANR	7231534	RelationalExpression	pixel_depth > 16		7231481	0		>			
ANR	7231535	Identifier	pixel_depth		7231481	0					
ANR	7231536	PrimaryExpression	16		7231481	1					
ANR	7231537	ReturnStatement	return 1024 ;	230:9:7468:7479	7231481	1	True				
ANR	7231538	PrimaryExpression	1024		7231481	0					
ANR	7231539	ElseStatement	else		7231481	0					
ANR	7231540	ReturnStatement	return 256 ;	233:9:7502:7512	7231481	0	True				
ANR	7231541	PrimaryExpression	256		7231481	0					
ANR	7231542	ReturnType	static unsigned int		7231481	1					
ANR	7231543	Identifier	image_size_of_type		7231481	2					
ANR	7231544	ParameterList	"int color_type , int bit_depth , unsigned int * colors , int small"		7231481	3					
ANR	7231545	Parameter	int color_type	207:19:7019:7032	7231481	0	True				
ANR	7231546	ParameterType	int		7231481	0					
ANR	7231547	Identifier	color_type		7231481	1					
ANR	7231548	Parameter	int bit_depth	207:35:7035:7047	7231481	1	True				
ANR	7231549	ParameterType	int		7231481	0					
ANR	7231550	Identifier	bit_depth		7231481	1					
ANR	7231551	Parameter	unsigned int * colors	207:50:7050:7069	7231481	2	True				
ANR	7231552	ParameterType	unsigned int *		7231481	0					
ANR	7231553	Identifier	colors		7231481	1					
ANR	7231554	Parameter	int small	208:3:7075:7083	7231481	3	True				
ANR	7231555	ParameterType	int		7231481	0					
ANR	7231556	Identifier	small		7231481	1					
ANR	7231557	CFGEntryNode	ENTRY		7231481		True				
ANR	7231558	CFGExitNode	EXIT		7231481		True				
ANR	7231559	Symbol	small		7231481						
ANR	7231560	Symbol	* colors		7231481						
ANR	7231561	Symbol	color_type		7231481						
ANR	7231562	Symbol	pixel_depth_of_type		7231481						
ANR	7231563	Symbol	bit_depth		7231481						
ANR	7231564	Symbol	pixel_depth		7231481						
ANR	7231565	Symbol	colors		7231481						
ANR	7231566	Function	set_color	237:0:7522:7830							
ANR	7231567	FunctionDef	"set_color (png_colorp color , png_bytep trans , unsigned int red , unsigned int green , unsigned int blue , unsigned int alpha , png_const_bytep gamma_table)"		7231566	0					
ANR	7231568	CompoundStatement		241:0:7691:7830	7231566	0					
ANR	7231569	ExpressionStatement	color -> red = gamma_table [ red ]	242:3:7696:7725	7231566	0	True				
ANR	7231570	AssignmentExpression	color -> red = gamma_table [ red ]		7231566	0		=			
ANR	7231571	PtrMemberAccess	color -> red		7231566	0					
ANR	7231572	Identifier	color		7231566	0					
ANR	7231573	Identifier	red		7231566	1					
ANR	7231574	ArrayIndexing	gamma_table [ red ]		7231566	1					
ANR	7231575	Identifier	gamma_table		7231566	0					
ANR	7231576	Identifier	red		7231566	1					
ANR	7231577	ExpressionStatement	color -> green = gamma_table [ green ]	243:3:7730:7763	7231566	1	True				
ANR	7231578	AssignmentExpression	color -> green = gamma_table [ green ]		7231566	0		=			
ANR	7231579	PtrMemberAccess	color -> green		7231566	0					
ANR	7231580	Identifier	color		7231566	0					
ANR	7231581	Identifier	green		7231566	1					
ANR	7231582	ArrayIndexing	gamma_table [ green ]		7231566	1					
ANR	7231583	Identifier	gamma_table		7231566	0					
ANR	7231584	Identifier	green		7231566	1					
ANR	7231585	ExpressionStatement	color -> blue = gamma_table [ blue ]	244:3:7768:7799	7231566	2	True				
ANR	7231586	AssignmentExpression	color -> blue = gamma_table [ blue ]		7231566	0		=			
ANR	7231587	PtrMemberAccess	color -> blue		7231566	0					
ANR	7231588	Identifier	color		7231566	0					
ANR	7231589	Identifier	blue		7231566	1					
ANR	7231590	ArrayIndexing	gamma_table [ blue ]		7231566	1					
ANR	7231591	Identifier	gamma_table		7231566	0					
ANR	7231592	Identifier	blue		7231566	1					
ANR	7231593	ExpressionStatement	* trans = ( png_byte ) alpha	245:3:7804:7828	7231566	3	True				
ANR	7231594	AssignmentExpression	* trans = ( png_byte ) alpha		7231566	0		=			
ANR	7231595	UnaryOperationExpression	* trans		7231566	0					
ANR	7231596	UnaryOperator	*		7231566	0					
ANR	7231597	Identifier	trans		7231566	1					
ANR	7231598	CastExpression	( png_byte ) alpha		7231566	1					
ANR	7231599	CastTarget	png_byte		7231566	0					
ANR	7231600	Identifier	alpha		7231566	1					
ANR	7231601	ReturnType	static void		7231566	1					
ANR	7231602	Identifier	set_color		7231566	2					
ANR	7231603	ParameterList	"png_colorp color , png_bytep trans , unsigned int red , unsigned int green , unsigned int blue , unsigned int alpha , png_const_bytep gamma_table"		7231566	3					
ANR	7231604	Parameter	png_colorp color	238:10:7544:7559	7231566	0	True				
ANR	7231605	ParameterType	png_colorp		7231566	0					
ANR	7231606	Identifier	color		7231566	1					
ANR	7231607	Parameter	png_bytep trans	238:28:7562:7576	7231566	1	True				
ANR	7231608	ParameterType	png_bytep		7231566	0					
ANR	7231609	Identifier	trans		7231566	1					
ANR	7231610	Parameter	unsigned int red	238:45:7579:7594	7231566	2	True				
ANR	7231611	ParameterType	unsigned int		7231566	0					
ANR	7231612	Identifier	red		7231566	1					
ANR	7231613	Parameter	unsigned int green	239:3:7600:7617	7231566	3	True				
ANR	7231614	ParameterType	unsigned int		7231566	0					
ANR	7231615	Identifier	green		7231566	1					
ANR	7231616	Parameter	unsigned int blue	239:23:7620:7636	7231566	4	True				
ANR	7231617	ParameterType	unsigned int		7231566	0					
ANR	7231618	Identifier	blue		7231566	1					
ANR	7231619	Parameter	unsigned int alpha	239:42:7639:7656	7231566	5	True				
ANR	7231620	ParameterType	unsigned int		7231566	0					
ANR	7231621	Identifier	alpha		7231566	1					
ANR	7231622	Parameter	png_const_bytep gamma_table	240:3:7662:7688	7231566	6	True				
ANR	7231623	ParameterType	png_const_bytep		7231566	0					
ANR	7231624	Identifier	gamma_table		7231566	1					
ANR	7231625	CFGEntryNode	ENTRY		7231566		True				
ANR	7231626	CFGExitNode	EXIT		7231566		True				
ANR	7231627	Symbol	green		7231566						
ANR	7231628	Symbol	color		7231566						
ANR	7231629	Symbol	color -> red		7231566						
ANR	7231630	Symbol	* color		7231566						
ANR	7231631	Symbol	* trans		7231566						
ANR	7231632	Symbol	* green		7231566						
ANR	7231633	Symbol	* blue		7231566						
ANR	7231634	Symbol	red		7231566						
ANR	7231635	Symbol	gamma_table		7231566						
ANR	7231636	Symbol	blue		7231566						
ANR	7231637	Symbol	color -> green		7231566						
ANR	7231638	Symbol	color -> blue		7231566						
ANR	7231639	Symbol	alpha		7231566						
ANR	7231640	Symbol	* gamma_table		7231566						
ANR	7231641	Symbol	* red		7231566						
ANR	7231642	Symbol	trans		7231566						
ANR	7231643	Function	generate_palette	248:0:7833:10335							
ANR	7231644	FunctionDef	"generate_palette (png_colorp palette , png_bytep trans , int bit_depth , png_const_bytep gamma_table , unsigned int * colors)"		7231643	0					
ANR	7231645	CompoundStatement		251:0:7967:10335	7231643	0					
ANR	7231646	SwitchStatement	switch ( colors [ 0 ] )		7231643	0					
ANR	7231647	Condition	colors [ 0 ]	261:11:8297:8305	7231643	0	True				
ANR	7231648	ArrayIndexing	colors [ 0 ]		7231643	0					
ANR	7231649	Identifier	colors		7231643	0					
ANR	7231650	PrimaryExpression	0		7231643	1					
ANR	7231651	CompoundStatement		12:3:343:343	7231643	1					
ANR	7231652	Label	default :	263:6:8319:8326	7231643	0	True				
ANR	7231653	Identifier	default		7231643	0					
ANR	7231654	ExpressionStatement	"fprintf ( stderr , ""makepng: --colors=...: invalid count %u\\n"" , colors [ 0 ] )"	264:9:8337:8420	7231643	1	True				
ANR	7231655	CallExpression	"fprintf ( stderr , ""makepng: --colors=...: invalid count %u\\n"" , colors [ 0 ] )"		7231643	0					
ANR	7231656	Callee	fprintf		7231643	0					
ANR	7231657	Identifier	fprintf		7231643	0					
ANR	7231658	ArgumentList	stderr		7231643	1					
ANR	7231659	Argument	stderr		7231643	0					
ANR	7231660	Identifier	stderr		7231643	0					
ANR	7231661	Argument	"""makepng: --colors=...: invalid count %u\\n"""		7231643	1					
ANR	7231662	PrimaryExpression	"""makepng: --colors=...: invalid count %u\\n"""		7231643	0					
ANR	7231663	Argument	colors [ 0 ]		7231643	2					
ANR	7231664	ArrayIndexing	colors [ 0 ]		7231643	0					
ANR	7231665	Identifier	colors		7231643	0					
ANR	7231666	PrimaryExpression	0		7231643	1					
ANR	7231667	ExpressionStatement	exit ( 1 )	266:9:8431:8438	7231643	2	True				
ANR	7231668	CallExpression	exit ( 1 )		7231643	0					
ANR	7231669	Callee	exit		7231643	0					
ANR	7231670	Identifier	exit		7231643	0					
ANR	7231671	ArgumentList	1		7231643	1					
ANR	7231672	Argument	1		7231643	0					
ANR	7231673	PrimaryExpression	1		7231643	0					
ANR	7231674	Label	case 1 :	268:6:8447:8453	7231643	3	True				
ANR	7231675	ExpressionStatement	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 1 ] , colors [ 1 ] , 255 , gamma_table )"	269:9:8464:8556	7231643	4	True				
ANR	7231676	CallExpression	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 1 ] , colors [ 1 ] , 255 , gamma_table )"		7231643	0					
ANR	7231677	Callee	set_color		7231643	0					
ANR	7231678	Identifier	set_color		7231643	0					
ANR	7231679	ArgumentList	palette + 0		7231643	1					
ANR	7231680	Argument	palette + 0		7231643	0					
ANR	7231681	AdditiveExpression	palette + 0		7231643	0		+			
ANR	7231682	Identifier	palette		7231643	0					
ANR	7231683	PrimaryExpression	0		7231643	1					
ANR	7231684	Argument	trans + 0		7231643	1					
ANR	7231685	AdditiveExpression	trans + 0		7231643	0		+			
ANR	7231686	Identifier	trans		7231643	0					
ANR	7231687	PrimaryExpression	0		7231643	1					
ANR	7231688	Argument	colors [ 1 ]		7231643	2					
ANR	7231689	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231690	Identifier	colors		7231643	0					
ANR	7231691	PrimaryExpression	1		7231643	1					
ANR	7231692	Argument	colors [ 1 ]		7231643	3					
ANR	7231693	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231694	Identifier	colors		7231643	0					
ANR	7231695	PrimaryExpression	1		7231643	1					
ANR	7231696	Argument	colors [ 1 ]		7231643	4					
ANR	7231697	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231698	Identifier	colors		7231643	0					
ANR	7231699	PrimaryExpression	1		7231643	1					
ANR	7231700	Argument	255		7231643	5					
ANR	7231701	PrimaryExpression	255		7231643	0					
ANR	7231702	Argument	gamma_table		7231643	6					
ANR	7231703	Identifier	gamma_table		7231643	0					
ANR	7231704	ReturnStatement	return 1 ;	271:9:8567:8575	7231643	5	True				
ANR	7231705	PrimaryExpression	1		7231643	0					
ANR	7231706	Label	case 2 :	273:6:8584:8590	7231643	6	True				
ANR	7231707	ExpressionStatement	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 1 ] , colors [ 1 ] , colors [ 2 ] , gamma_table )"	274:9:8601:8699	7231643	7	True				
ANR	7231708	CallExpression	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 1 ] , colors [ 1 ] , colors [ 2 ] , gamma_table )"		7231643	0					
ANR	7231709	Callee	set_color		7231643	0					
ANR	7231710	Identifier	set_color		7231643	0					
ANR	7231711	ArgumentList	palette + 0		7231643	1					
ANR	7231712	Argument	palette + 0		7231643	0					
ANR	7231713	AdditiveExpression	palette + 0		7231643	0		+			
ANR	7231714	Identifier	palette		7231643	0					
ANR	7231715	PrimaryExpression	0		7231643	1					
ANR	7231716	Argument	trans + 0		7231643	1					
ANR	7231717	AdditiveExpression	trans + 0		7231643	0		+			
ANR	7231718	Identifier	trans		7231643	0					
ANR	7231719	PrimaryExpression	0		7231643	1					
ANR	7231720	Argument	colors [ 1 ]		7231643	2					
ANR	7231721	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231722	Identifier	colors		7231643	0					
ANR	7231723	PrimaryExpression	1		7231643	1					
ANR	7231724	Argument	colors [ 1 ]		7231643	3					
ANR	7231725	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231726	Identifier	colors		7231643	0					
ANR	7231727	PrimaryExpression	1		7231643	1					
ANR	7231728	Argument	colors [ 1 ]		7231643	4					
ANR	7231729	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231730	Identifier	colors		7231643	0					
ANR	7231731	PrimaryExpression	1		7231643	1					
ANR	7231732	Argument	colors [ 2 ]		7231643	5					
ANR	7231733	ArrayIndexing	colors [ 2 ]		7231643	0					
ANR	7231734	Identifier	colors		7231643	0					
ANR	7231735	PrimaryExpression	2		7231643	1					
ANR	7231736	Argument	gamma_table		7231643	6					
ANR	7231737	Identifier	gamma_table		7231643	0					
ANR	7231738	ReturnStatement	return 1 ;	276:9:8710:8718	7231643	8	True				
ANR	7231739	PrimaryExpression	1		7231643	0					
ANR	7231740	Label	case 3 :	278:6:8727:8733	7231643	9	True				
ANR	7231741	ExpressionStatement	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 2 ] , colors [ 3 ] , 255 , gamma_table )"	279:9:8744:8836	7231643	10	True				
ANR	7231742	CallExpression	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 2 ] , colors [ 3 ] , 255 , gamma_table )"		7231643	0					
ANR	7231743	Callee	set_color		7231643	0					
ANR	7231744	Identifier	set_color		7231643	0					
ANR	7231745	ArgumentList	palette + 0		7231643	1					
ANR	7231746	Argument	palette + 0		7231643	0					
ANR	7231747	AdditiveExpression	palette + 0		7231643	0		+			
ANR	7231748	Identifier	palette		7231643	0					
ANR	7231749	PrimaryExpression	0		7231643	1					
ANR	7231750	Argument	trans + 0		7231643	1					
ANR	7231751	AdditiveExpression	trans + 0		7231643	0		+			
ANR	7231752	Identifier	trans		7231643	0					
ANR	7231753	PrimaryExpression	0		7231643	1					
ANR	7231754	Argument	colors [ 1 ]		7231643	2					
ANR	7231755	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231756	Identifier	colors		7231643	0					
ANR	7231757	PrimaryExpression	1		7231643	1					
ANR	7231758	Argument	colors [ 2 ]		7231643	3					
ANR	7231759	ArrayIndexing	colors [ 2 ]		7231643	0					
ANR	7231760	Identifier	colors		7231643	0					
ANR	7231761	PrimaryExpression	2		7231643	1					
ANR	7231762	Argument	colors [ 3 ]		7231643	4					
ANR	7231763	ArrayIndexing	colors [ 3 ]		7231643	0					
ANR	7231764	Identifier	colors		7231643	0					
ANR	7231765	PrimaryExpression	3		7231643	1					
ANR	7231766	Argument	255		7231643	5					
ANR	7231767	PrimaryExpression	255		7231643	0					
ANR	7231768	Argument	gamma_table		7231643	6					
ANR	7231769	Identifier	gamma_table		7231643	0					
ANR	7231770	ReturnStatement	return 1 ;	281:9:8847:8855	7231643	11	True				
ANR	7231771	PrimaryExpression	1		7231643	0					
ANR	7231772	Label	case 4 :	283:6:8864:8870	7231643	12	True				
ANR	7231773	ExpressionStatement	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 2 ] , colors [ 3 ] , colors [ 4 ] , gamma_table )"	284:9:8881:8979	7231643	13	True				
ANR	7231774	CallExpression	"set_color ( palette + 0 , trans + 0 , colors [ 1 ] , colors [ 2 ] , colors [ 3 ] , colors [ 4 ] , gamma_table )"		7231643	0					
ANR	7231775	Callee	set_color		7231643	0					
ANR	7231776	Identifier	set_color		7231643	0					
ANR	7231777	ArgumentList	palette + 0		7231643	1					
ANR	7231778	Argument	palette + 0		7231643	0					
ANR	7231779	AdditiveExpression	palette + 0		7231643	0		+			
ANR	7231780	Identifier	palette		7231643	0					
ANR	7231781	PrimaryExpression	0		7231643	1					
ANR	7231782	Argument	trans + 0		7231643	1					
ANR	7231783	AdditiveExpression	trans + 0		7231643	0		+			
ANR	7231784	Identifier	trans		7231643	0					
ANR	7231785	PrimaryExpression	0		7231643	1					
ANR	7231786	Argument	colors [ 1 ]		7231643	2					
ANR	7231787	ArrayIndexing	colors [ 1 ]		7231643	0					
ANR	7231788	Identifier	colors		7231643	0					
ANR	7231789	PrimaryExpression	1		7231643	1					
ANR	7231790	Argument	colors [ 2 ]		7231643	3					
ANR	7231791	ArrayIndexing	colors [ 2 ]		7231643	0					
ANR	7231792	Identifier	colors		7231643	0					
ANR	7231793	PrimaryExpression	2		7231643	1					
ANR	7231794	Argument	colors [ 3 ]		7231643	4					
ANR	7231795	ArrayIndexing	colors [ 3 ]		7231643	0					
ANR	7231796	Identifier	colors		7231643	0					
ANR	7231797	PrimaryExpression	3		7231643	1					
ANR	7231798	Argument	colors [ 4 ]		7231643	5					
ANR	7231799	ArrayIndexing	colors [ 4 ]		7231643	0					
ANR	7231800	Identifier	colors		7231643	0					
ANR	7231801	PrimaryExpression	4		7231643	1					
ANR	7231802	Argument	gamma_table		7231643	6					
ANR	7231803	Identifier	gamma_table		7231643	0					
ANR	7231804	ReturnStatement	return 1 ;	286:9:8990:8998	7231643	14	True				
ANR	7231805	PrimaryExpression	1		7231643	0					
ANR	7231806	Label	case 0 :	288:6:9007:9013	7231643	15	True				
ANR	7231807	IfStatement	if ( bit_depth == 1 )		7231643	16					
ANR	7231808	Condition	bit_depth == 1	289:13:9028:9041	7231643	0	True				
ANR	7231809	EqualityExpression	bit_depth == 1		7231643	0		==			
ANR	7231810	Identifier	bit_depth		7231643	0					
ANR	7231811	PrimaryExpression	1		7231643	1					
ANR	7231812	CompoundStatement		40:9:1085:1085	7231643	1					
ANR	7231813	ExpressionStatement	"set_color ( palette + 0 , trans + 0 , 255 , 0 , 0 , 0 , gamma_table )"	291:12:9067:9123	7231643	0	True				
ANR	7231814	CallExpression	"set_color ( palette + 0 , trans + 0 , 255 , 0 , 0 , 0 , gamma_table )"		7231643	0					
ANR	7231815	Callee	set_color		7231643	0					
ANR	7231816	Identifier	set_color		7231643	0					
ANR	7231817	ArgumentList	palette + 0		7231643	1					
ANR	7231818	Argument	palette + 0		7231643	0					
ANR	7231819	AdditiveExpression	palette + 0		7231643	0		+			
ANR	7231820	Identifier	palette		7231643	0					
ANR	7231821	PrimaryExpression	0		7231643	1					
ANR	7231822	Argument	trans + 0		7231643	1					
ANR	7231823	AdditiveExpression	trans + 0		7231643	0		+			
ANR	7231824	Identifier	trans		7231643	0					
ANR	7231825	PrimaryExpression	0		7231643	1					
ANR	7231826	Argument	255		7231643	2					
ANR	7231827	PrimaryExpression	255		7231643	0					
ANR	7231828	Argument	0		7231643	3					
ANR	7231829	PrimaryExpression	0		7231643	0					
ANR	7231830	Argument	0		7231643	4					
ANR	7231831	PrimaryExpression	0		7231643	0					
ANR	7231832	Argument	0		7231643	5					
ANR	7231833	PrimaryExpression	0		7231643	0					
ANR	7231834	Argument	gamma_table		7231643	6					
ANR	7231835	Identifier	gamma_table		7231643	0					
ANR	7231836	ExpressionStatement	"set_color ( palette + 1 , trans + 1 , 255 , 255 , 255 , 255 , gamma_table )"	292:12:9137:9199	7231643	1	True				
ANR	7231837	CallExpression	"set_color ( palette + 1 , trans + 1 , 255 , 255 , 255 , 255 , gamma_table )"		7231643	0					
ANR	7231838	Callee	set_color		7231643	0					
ANR	7231839	Identifier	set_color		7231643	0					
ANR	7231840	ArgumentList	palette + 1		7231643	1					
ANR	7231841	Argument	palette + 1		7231643	0					
ANR	7231842	AdditiveExpression	palette + 1		7231643	0		+			
ANR	7231843	Identifier	palette		7231643	0					
ANR	7231844	PrimaryExpression	1		7231643	1					
ANR	7231845	Argument	trans + 1		7231643	1					
ANR	7231846	AdditiveExpression	trans + 1		7231643	0		+			
ANR	7231847	Identifier	trans		7231643	0					
ANR	7231848	PrimaryExpression	1		7231643	1					
ANR	7231849	Argument	255		7231643	2					
ANR	7231850	PrimaryExpression	255		7231643	0					
ANR	7231851	Argument	255		7231643	3					
ANR	7231852	PrimaryExpression	255		7231643	0					
ANR	7231853	Argument	255		7231643	4					
ANR	7231854	PrimaryExpression	255		7231643	0					
ANR	7231855	Argument	255		7231643	5					
ANR	7231856	PrimaryExpression	255		7231643	0					
ANR	7231857	Argument	gamma_table		7231643	6					
ANR	7231858	Identifier	gamma_table		7231643	0					
ANR	7231859	ReturnStatement	return 2 ;	293:12:9213:9221	7231643	2	True				
ANR	7231860	PrimaryExpression	2		7231643	0					
ANR	7231861	ElseStatement	else		7231643	0					
ANR	7231862	CompoundStatement		50:12:1405:1433	7231643	0					
ANR	7231863	IdentifierDeclStatement	unsigned int size = 1U << ( bit_depth / 2 ) ;	298:12:9272:9311	7231643	0	True				
ANR	7231864	IdentifierDecl	size = 1U << ( bit_depth / 2 )		7231643	0					
ANR	7231865	IdentifierDeclType	unsigned int		7231643	0					
ANR	7231866	Identifier	size		7231643	1					
ANR	7231867	AssignmentExpression	size = 1U << ( bit_depth / 2 )		7231643	2		=			
ANR	7231868	Identifier	size		7231643	0					
ANR	7231869	ShiftExpression	1U << ( bit_depth / 2 )		7231643	1		<<			
ANR	7231870	PrimaryExpression	1U		7231643	0					
ANR	7231871	MultiplicativeExpression	bit_depth / 2		7231643	1		/			
ANR	7231872	Identifier	bit_depth		7231643	0					
ANR	7231873	PrimaryExpression	2		7231643	1					
ANR	7231874	IdentifierDeclStatement	"unsigned int x , y ;"	299:12:9342:9359	7231643	1	True				
ANR	7231875	IdentifierDecl	x		7231643	0					
ANR	7231876	IdentifierDeclType	unsigned int		7231643	0					
ANR	7231877	Identifier	x		7231643	1					
ANR	7231878	IdentifierDecl	y		7231643	1					
ANR	7231879	IdentifierDeclType	unsigned int		7231643	0					
ANR	7231880	Identifier	y		7231643	1					
ANR	7231881	IdentifierDeclStatement	volatile unsigned int ip = 0 ;	300:12:9373:9401	7231643	2	True				
ANR	7231882	IdentifierDecl	ip = 0		7231643	0					
ANR	7231883	IdentifierDeclType	volatile unsigned int		7231643	0					
ANR	7231884	Identifier	ip		7231643	1					
ANR	7231885	AssignmentExpression	ip = 0		7231643	2		=			
ANR	7231886	Identifier	ip		7231643	0					
ANR	7231887	PrimaryExpression	0		7231643	1					
ANR	7231888	ForStatement	for ( x = 0 ; x < size ; ++ x )		7231643	3					
ANR	7231889	ForInit	x = 0 ;	302:17:9421:9424	7231643	0	True				
ANR	7231890	AssignmentExpression	x = 0		7231643	0		=			
ANR	7231891	Identifier	x		7231643	0					
ANR	7231892	PrimaryExpression	0		7231643	1					
ANR	7231893	Condition	x < size	302:22:9426:9431	7231643	1	True				
ANR	7231894	RelationalExpression	x < size		7231643	0		<			
ANR	7231895	Identifier	x		7231643	0					
ANR	7231896	Identifier	size		7231643	1					
ANR	7231897	UnaryExpression	++ x	302:30:9434:9436	7231643	2	True				
ANR	7231898	IncDec	++		7231643	0					
ANR	7231899	Identifier	x		7231643	1					
ANR	7231900	ForStatement	for ( y = 0 ; y < size ; ++ y )		7231643	3					
ANR	7231901	ForInit	y = 0 ;	302:40:9444:9447	7231643	0	True				
ANR	7231902	AssignmentExpression	y = 0		7231643	0		=			
ANR	7231903	Identifier	y		7231643	0					
ANR	7231904	PrimaryExpression	0		7231643	1					
ANR	7231905	Condition	y < size	302:45:9449:9454	7231643	1	True				
ANR	7231906	RelationalExpression	y < size		7231643	0		<			
ANR	7231907	Identifier	y		7231643	0					
ANR	7231908	Identifier	size		7231643	1					
ANR	7231909	UnaryExpression	++ y	302:53:9457:9459	7231643	2	True				
ANR	7231910	IncDec	++		7231643	0					
ANR	7231911	Identifier	y		7231643	1					
ANR	7231912	CompoundStatement		53:12:1506:1506	7231643	3					
ANR	7231913	ExpressionStatement	ip = x + ( size * y )	304:15:9491:9510	7231643	0	True				
ANR	7231914	AssignmentExpression	ip = x + ( size * y )		7231643	0		=			
ANR	7231915	Identifier	ip		7231643	0					
ANR	7231916	AdditiveExpression	x + ( size * y )		7231643	1		+			
ANR	7231917	Identifier	x		7231643	0					
ANR	7231918	MultiplicativeExpression	size * y		7231643	1		*			
ANR	7231919	Identifier	size		7231643	0					
ANR	7231920	Identifier	y		7231643	1					
ANR	7231921	Statement	define	308:15:9627:9632	7231643	1	True				
ANR	7231922	Statement	interp	308:22:9634:9639	7231643	2	True				
ANR	7231923	Statement	(	308:28:9640:9640	7231643	3	True				
ANR	7231924	Statement	pos	308:29:9641:9643	7231643	4	True				
ANR	7231925	Statement	","	308:32:9644:9644	7231643	5	True				
ANR	7231926	Statement	c1	308:34:9646:9647	7231643	6	True				
ANR	7231927	Statement	","	308:36:9648:9648	7231643	7	True				
ANR	7231928	Statement	c2	308:38:9650:9651	7231643	8	True				
ANR	7231929	Statement	)	308:40:9652:9652	7231643	9	True				
ANR	7231930	Statement	(	308:42:9654:9654	7231643	10	True				
ANR	7231931	Statement	(	308:43:9655:9655	7231643	11	True				
ANR	7231932	Statement	pos	308:44:9656:9658	7231643	12	True				
ANR	7231933	Statement	*	308:48:9660:9660	7231643	13	True				
ANR	7231934	Statement	c1	308:50:9662:9663	7231643	14	True				
ANR	7231935	Statement	)	308:52:9664:9664	7231643	15	True				
ANR	7231936	Statement	+	308:54:9666:9666	7231643	16	True				
ANR	7231937	Statement	(	308:56:9668:9668	7231643	17	True				
ANR	7231938	Statement	(	308:57:9669:9669	7231643	18	True				
ANR	7231939	Statement	size	308:58:9670:9673	7231643	19	True				
ANR	7231940	Statement	-	308:62:9674:9674	7231643	20	True				
ANR	7231941	Statement	pos	308:63:9675:9677	7231643	21	True				
ANR	7231942	Statement	)	308:66:9678:9678	7231643	22	True				
ANR	7231943	Statement	*	308:68:9680:9680	7231643	23	True				
ANR	7231944	Statement	c2	308:70:9682:9683	7231643	24	True				
ANR	7231945	Statement	)	308:72:9684:9684	7231643	25	True				
ANR	7231946	Statement	)	308:73:9685:9685	7231643	26	True				
ANR	7231947	Statement	define	309:15:9702:9707	7231643	27	True				
ANR	7231948	Statement	xyinterp	309:22:9709:9716	7231643	28	True				
ANR	7231949	Statement	(	309:30:9717:9717	7231643	29	True				
ANR	7231950	Statement	x	309:31:9718:9718	7231643	30	True				
ANR	7231951	Statement	","	309:32:9719:9719	7231643	31	True				
ANR	7231952	Statement	y	309:34:9721:9721	7231643	32	True				
ANR	7231953	Statement	","	309:35:9722:9722	7231643	33	True				
ANR	7231954	Statement	c1	309:37:9724:9725	7231643	34	True				
ANR	7231955	Statement	","	309:39:9726:9726	7231643	35	True				
ANR	7231956	Statement	c2	309:41:9728:9729	7231643	36	True				
ANR	7231957	Statement	","	309:43:9730:9730	7231643	37	True				
ANR	7231958	Statement	c3	309:45:9732:9733	7231643	38	True				
ANR	7231959	Statement	","	309:47:9734:9734	7231643	39	True				
ANR	7231960	Statement	c4	309:49:9736:9737	7231643	40	True				
ANR	7231961	Statement	)	309:51:9738:9738	7231643	41	True				
ANR	7231962	Statement	(	309:53:9740:9740	7231643	42	True				
ANR	7231963	Statement	(	309:54:9741:9741	7231643	43	True				
ANR	7231964	Statement	(	309:55:9742:9742	7231643	44	True				
ANR	7231965	Statement	size	309:56:9743:9746	7231643	45	True				
ANR	7231966	Statement	*	309:61:9748:9748	7231643	46	True				
ANR	7231967	Statement	size	309:63:9750:9753	7231643	47	True				
ANR	7231968	Statement	/	309:68:9755:9755	7231643	48	True				
ANR	7231969	Statement	2	309:70:9757:9757	7231643	49	True				
ANR	7231970	Statement	)	309:71:9758:9758	7231643	50	True				
ANR	7231971	Statement	+	309:73:9760:9760	7231643	51	True				
ANR	7231972	Statement	(	310:18:9781:9781	7231643	52	True				
ANR	7231973	Statement	interp	310:19:9782:9787	7231643	53	True				
ANR	7231974	Statement	(	310:25:9788:9788	7231643	54	True				
ANR	7231975	Statement	x	310:26:9789:9789	7231643	55	True				
ANR	7231976	Statement	","	310:27:9790:9790	7231643	56	True				
ANR	7231977	Statement	c1	310:29:9792:9793	7231643	57	True				
ANR	7231978	Statement	","	310:31:9794:9794	7231643	58	True				
ANR	7231979	Statement	c2	310:33:9796:9797	7231643	59	True				
ANR	7231980	Statement	)	310:35:9798:9798	7231643	60	True				
ANR	7231981	Statement	*	310:37:9800:9800	7231643	61	True				
ANR	7231982	Statement	y	310:39:9802:9802	7231643	62	True				
ANR	7231983	Statement	+	310:41:9804:9804	7231643	63	True				
ANR	7231984	Statement	(	310:43:9806:9806	7231643	64	True				
ANR	7231985	Statement	size	310:44:9807:9810	7231643	65	True				
ANR	7231986	Statement	-	310:48:9811:9811	7231643	66	True				
ANR	7231987	Statement	y	310:49:9812:9812	7231643	67	True				
ANR	7231988	Statement	)	310:50:9813:9813	7231643	68	True				
ANR	7231989	Statement	*	310:52:9815:9815	7231643	69	True				
ANR	7231990	Statement	interp	310:54:9817:9822	7231643	70	True				
ANR	7231991	Statement	(	310:60:9823:9823	7231643	71	True				
ANR	7231992	Statement	x	310:61:9824:9824	7231643	72	True				
ANR	7231993	Statement	","	310:62:9825:9825	7231643	73	True				
ANR	7231994	Statement	c3	310:64:9827:9828	7231643	74	True				
ANR	7231995	Statement	","	310:66:9829:9829	7231643	75	True				
ANR	7231996	Statement	c4	310:68:9831:9832	7231643	76	True				
ANR	7231997	Statement	)	310:70:9833:9833	7231643	77	True				
ANR	7231998	Statement	)	310:71:9834:9834	7231643	78	True				
ANR	7231999	Statement	)	310:72:9835:9835	7231643	79	True				
ANR	7232000	Statement	/	310:74:9837:9837	7231643	80	True				
ANR	7232001	Statement	(	311:18:9858:9858	7231643	81	True				
ANR	7232002	Statement	size	311:19:9859:9862	7231643	82	True				
ANR	7232003	Statement	*	311:23:9863:9863	7231643	83	True				
ANR	7232004	Statement	size	311:24:9864:9867	7231643	84	True				
ANR	7232005	Statement	)	311:28:9868:9868	7231643	85	True				
ANR	7232006	Statement	)	311:29:9869:9869	7231643	86	True				
ANR	7232007	ExpressionStatement	"set_color ( palette + ip , trans + ip , xyinterp ( x , y , 0 , 255 , 0 , 255 ) , xyinterp ( x , y , 255 , 0 , 0 , 255 ) , xyinterp ( x , y , 0 , 0 , 255 , 255 ) , xyinterp ( x , y , 0 , 102 , 204 , 255 ) , gamma_table )"	313:15:9887:10277	7231643	87	True				
ANR	7232008	CallExpression	"set_color ( palette + ip , trans + ip , xyinterp ( x , y , 0 , 255 , 0 , 255 ) , xyinterp ( x , y , 255 , 0 , 0 , 255 ) , xyinterp ( x , y , 0 , 0 , 255 , 255 ) , xyinterp ( x , y , 0 , 102 , 204 , 255 ) , gamma_table )"		7231643	0					
ANR	7232009	Callee	set_color		7231643	0					
ANR	7232010	Identifier	set_color		7231643	0					
ANR	7232011	ArgumentList	palette + ip		7231643	1					
ANR	7232012	Argument	palette + ip		7231643	0					
ANR	7232013	AdditiveExpression	palette + ip		7231643	0		+			
ANR	7232014	Identifier	palette		7231643	0					
ANR	7232015	Identifier	ip		7231643	1					
ANR	7232016	Argument	trans + ip		7231643	1					
ANR	7232017	AdditiveExpression	trans + ip		7231643	0		+			
ANR	7232018	Identifier	trans		7231643	0					
ANR	7232019	Identifier	ip		7231643	1					
ANR	7232020	Argument	"xyinterp ( x , y , 0 , 255 , 0 , 255 )"		7231643	2					
ANR	7232021	CallExpression	"xyinterp ( x , y , 0 , 255 , 0 , 255 )"		7231643	0					
ANR	7232022	Callee	xyinterp		7231643	0					
ANR	7232023	Identifier	xyinterp		7231643	0					
ANR	7232024	ArgumentList	x		7231643	1					
ANR	7232025	Argument	x		7231643	0					
ANR	7232026	Identifier	x		7231643	0					
ANR	7232027	Argument	y		7231643	1					
ANR	7232028	Identifier	y		7231643	0					
ANR	7232029	Argument	0		7231643	2					
ANR	7232030	PrimaryExpression	0		7231643	0					
ANR	7232031	Argument	255		7231643	3					
ANR	7232032	PrimaryExpression	255		7231643	0					
ANR	7232033	Argument	0		7231643	4					
ANR	7232034	PrimaryExpression	0		7231643	0					
ANR	7232035	Argument	255		7231643	5					
ANR	7232036	PrimaryExpression	255		7231643	0					
ANR	7232037	Argument	"xyinterp ( x , y , 255 , 0 , 0 , 255 )"		7231643	3					
ANR	7232038	CallExpression	"xyinterp ( x , y , 255 , 0 , 0 , 255 )"		7231643	0					
ANR	7232039	Callee	xyinterp		7231643	0					
ANR	7232040	Identifier	xyinterp		7231643	0					
ANR	7232041	ArgumentList	x		7231643	1					
ANR	7232042	Argument	x		7231643	0					
ANR	7232043	Identifier	x		7231643	0					
ANR	7232044	Argument	y		7231643	1					
ANR	7232045	Identifier	y		7231643	0					
ANR	7232046	Argument	255		7231643	2					
ANR	7232047	PrimaryExpression	255		7231643	0					
ANR	7232048	Argument	0		7231643	3					
ANR	7232049	PrimaryExpression	0		7231643	0					
ANR	7232050	Argument	0		7231643	4					
ANR	7232051	PrimaryExpression	0		7231643	0					
ANR	7232052	Argument	255		7231643	5					
ANR	7232053	PrimaryExpression	255		7231643	0					
ANR	7232054	Argument	"xyinterp ( x , y , 0 , 0 , 255 , 255 )"		7231643	4					
ANR	7232055	CallExpression	"xyinterp ( x , y , 0 , 0 , 255 , 255 )"		7231643	0					
ANR	7232056	Callee	xyinterp		7231643	0					
ANR	7232057	Identifier	xyinterp		7231643	0					
ANR	7232058	ArgumentList	x		7231643	1					
ANR	7232059	Argument	x		7231643	0					
ANR	7232060	Identifier	x		7231643	0					
ANR	7232061	Argument	y		7231643	1					
ANR	7232062	Identifier	y		7231643	0					
ANR	7232063	Argument	0		7231643	2					
ANR	7232064	PrimaryExpression	0		7231643	0					
ANR	7232065	Argument	0		7231643	3					
ANR	7232066	PrimaryExpression	0		7231643	0					
ANR	7232067	Argument	255		7231643	4					
ANR	7232068	PrimaryExpression	255		7231643	0					
ANR	7232069	Argument	255		7231643	5					
ANR	7232070	PrimaryExpression	255		7231643	0					
ANR	7232071	Argument	"xyinterp ( x , y , 0 , 102 , 204 , 255 )"		7231643	5					
ANR	7232072	CallExpression	"xyinterp ( x , y , 0 , 102 , 204 , 255 )"		7231643	0					
ANR	7232073	Callee	xyinterp		7231643	0					
ANR	7232074	Identifier	xyinterp		7231643	0					
ANR	7232075	ArgumentList	x		7231643	1					
ANR	7232076	Argument	x		7231643	0					
ANR	7232077	Identifier	x		7231643	0					
ANR	7232078	Argument	y		7231643	1					
ANR	7232079	Identifier	y		7231643	0					
ANR	7232080	Argument	0		7231643	2					
ANR	7232081	PrimaryExpression	0		7231643	0					
ANR	7232082	Argument	102		7231643	3					
ANR	7232083	PrimaryExpression	102		7231643	0					
ANR	7232084	Argument	204		7231643	4					
ANR	7232085	PrimaryExpression	204		7231643	0					
ANR	7232086	Argument	255		7231643	5					
ANR	7232087	PrimaryExpression	255		7231643	0					
ANR	7232088	Argument	gamma_table		7231643	6					
ANR	7232089	Identifier	gamma_table		7231643	0					
ANR	7232090	ReturnStatement	return ip + 1 ;	323:12:10306:10317	7231643	4	True				
ANR	7232091	AdditiveExpression	ip + 1		7231643	0		+			
ANR	7232092	Identifier	ip		7231643	0					
ANR	7232093	PrimaryExpression	1		7231643	1					
ANR	7232094	ReturnType	static int		7231643	1					
ANR	7232095	Identifier	generate_palette		7231643	2					
ANR	7232096	ParameterList	"png_colorp palette , png_bytep trans , int bit_depth , png_const_bytep gamma_table , unsigned int * colors"		7231643	3					
ANR	7232097	Parameter	png_colorp palette	249:17:7861:7878	7231643	0	True				
ANR	7232098	ParameterType	png_colorp		7231643	0					
ANR	7232099	Identifier	palette		7231643	1					
ANR	7232100	Parameter	png_bytep trans	249:37:7881:7895	7231643	1	True				
ANR	7232101	ParameterType	png_bytep		7231643	0					
ANR	7232102	Identifier	trans		7231643	1					
ANR	7232103	Parameter	int bit_depth	249:54:7898:7910	7231643	2	True				
ANR	7232104	ParameterType	int		7231643	0					
ANR	7232105	Identifier	bit_depth		7231643	1					
ANR	7232106	Parameter	png_const_bytep gamma_table	250:3:7916:7942	7231643	3	True				
ANR	7232107	ParameterType	png_const_bytep		7231643	0					
ANR	7232108	Identifier	gamma_table		7231643	1					
ANR	7232109	Parameter	unsigned int * colors	250:32:7945:7964	7231643	4	True				
ANR	7232110	ParameterType	unsigned int *		7231643	0					
ANR	7232111	Identifier	colors		7231643	1					
ANR	7232112	CFGEntryNode	ENTRY		7231643		True				
ANR	7232113	CFGExitNode	EXIT		7231643		True				
ANR	7232114	Symbol	* colors		7231643						
ANR	7232115	Symbol	gamma_table		7231643						
ANR	7232116	Symbol	size		7231643						
ANR	7232117	Symbol	xyinterp		7231643						
ANR	7232118	Symbol	ip		7231643						
ANR	7232119	Symbol	x		7231643						
ANR	7232120	Symbol	y		7231643						
ANR	7232121	Symbol	palette		7231643						
ANR	7232122	Symbol	bit_depth		7231643						
ANR	7232123	Symbol	stderr		7231643						
ANR	7232124	Symbol	colors		7231643						
ANR	7232125	Symbol	trans		7231643						
ANR	7232126	Function	set_value	328:0:10338:11875							
ANR	7232127	FunctionDef	"set_value (png_bytep row , size_t rowbytes , png_uint_32 x , unsigned int bit_depth , png_uint_32 value , png_const_bytep gamma_table , double conv)"		7232126	0					
ANR	7232128	CompoundStatement		331:0:10495:11875	7232126	0					
ANR	7232129	IdentifierDeclStatement	unsigned int mask = ( 1U << bit_depth ) - 1 ;	332:3:10500:10539	7232126	0	True				
ANR	7232130	IdentifierDecl	mask = ( 1U << bit_depth ) - 1		7232126	0					
ANR	7232131	IdentifierDeclType	unsigned int		7232126	0					
ANR	7232132	Identifier	mask		7232126	1					
ANR	7232133	AssignmentExpression	mask = ( 1U << bit_depth ) - 1		7232126	2		=			
ANR	7232134	Identifier	mask		7232126	0					
ANR	7232135	AdditiveExpression	( 1U << bit_depth ) - 1		7232126	1		-			
ANR	7232136	ShiftExpression	1U << bit_depth		7232126	0		<<			
ANR	7232137	PrimaryExpression	1U		7232126	0					
ANR	7232138	Identifier	bit_depth		7232126	1					
ANR	7232139	PrimaryExpression	1		7232126	1					
ANR	7232140	ExpressionStatement	x *= bit_depth	334:3:10545:10559	7232126	1	True				
ANR	7232141	AssignmentExpression	x *= bit_depth		7232126	0		*=			
ANR	7232142	Identifier	x		7232126	0					
ANR	7232143	Identifier	bit_depth		7232126	1					
ANR	7232144	IfStatement	if ( value <= mask )		7232126	2					
ANR	7232145	Condition	value <= mask	336:7:10621:10633	7232126	0	True				
ANR	7232146	RelationalExpression	value <= mask		7232126	0		<=			
ANR	7232147	Identifier	value		7232126	0					
ANR	7232148	Identifier	mask		7232126	1					
ANR	7232149	CompoundStatement		8:6:151:178	7232126	1					
ANR	7232150	IdentifierDeclStatement	png_uint_32 offset = x >> 3 ;	338:6:10647:10674	7232126	0	True				
ANR	7232151	IdentifierDecl	offset = x >> 3		7232126	0					
ANR	7232152	IdentifierDeclType	png_uint_32		7232126	0					
ANR	7232153	Identifier	offset		7232126	1					
ANR	7232154	AssignmentExpression	offset = x >> 3		7232126	2		=			
ANR	7232155	Identifier	offset		7232126	0					
ANR	7232156	ShiftExpression	x >> 3		7232126	1		>>			
ANR	7232157	Identifier	x		7232126	0					
ANR	7232158	PrimaryExpression	3		7232126	1					
ANR	7232159	IfStatement	if ( offset < rowbytes && ( bit_depth < 16 || offset + 1 < rowbytes ) )		7232126	1					
ANR	7232160	Condition	offset < rowbytes && ( bit_depth < 16 || offset + 1 < rowbytes )	340:10:10687:10746	7232126	0	True				
ANR	7232161	AndExpression	offset < rowbytes && ( bit_depth < 16 || offset + 1 < rowbytes )		7232126	0		&&			
ANR	7232162	RelationalExpression	offset < rowbytes		7232126	0		<			
ANR	7232163	Identifier	offset		7232126	0					
ANR	7232164	Identifier	rowbytes		7232126	1					
ANR	7232165	OrExpression	bit_depth < 16 || offset + 1 < rowbytes		7232126	1		||			
ANR	7232166	RelationalExpression	bit_depth < 16		7232126	0		<			
ANR	7232167	Identifier	bit_depth		7232126	0					
ANR	7232168	PrimaryExpression	16		7232126	1					
ANR	7232169	RelationalExpression	offset + 1 < rowbytes		7232126	1		<			
ANR	7232170	AdditiveExpression	offset + 1		7232126	0		+			
ANR	7232171	Identifier	offset		7232126	0					
ANR	7232172	PrimaryExpression	1		7232126	1					
ANR	7232173	Identifier	rowbytes		7232126	1					
ANR	7232174	CompoundStatement		11:6:259:259	7232126	1					
ANR	7232175	ExpressionStatement	row += offset	342:9:10766:10779	7232126	0	True				
ANR	7232176	AssignmentExpression	row += offset		7232126	0		+=			
ANR	7232177	Identifier	row		7232126	0					
ANR	7232178	Identifier	offset		7232126	1					
ANR	7232179	SwitchStatement	switch ( bit_depth )		7232126	1					
ANR	7232180	Condition	bit_depth	344:17:10799:10807	7232126	0	True				
ANR	7232181	Identifier	bit_depth		7232126	0					
ANR	7232182	CompoundStatement		15:9:323:323	7232126	1					
ANR	7232183	Label	case 1 :	346:12:10833:10839	7232126	0	True				
ANR	7232184	Label	case 2 :	347:12:10853:10859	7232126	1	True				
ANR	7232185	Label	case 4 :	348:12:10873:10879	7232126	2	True				
ANR	7232186	CompoundStatement		21:18:482:531	7232126	3					
ANR	7232187	IdentifierDeclStatement	unsigned int shift = ( 8 - bit_depth ) - ( x & 0x7U ) ;	351:18:10978:11027	7232126	0	True				
ANR	7232188	IdentifierDecl	shift = ( 8 - bit_depth ) - ( x & 0x7U )		7232126	0					
ANR	7232189	IdentifierDeclType	unsigned int		7232126	0					
ANR	7232190	Identifier	shift		7232126	1					
ANR	7232191	AssignmentExpression	shift = ( 8 - bit_depth ) - ( x & 0x7U )		7232126	2		=			
ANR	7232192	Identifier	shift		7232126	0					
ANR	7232193	AdditiveExpression	( 8 - bit_depth ) - ( x & 0x7U )		7232126	1		-			
ANR	7232194	AdditiveExpression	8 - bit_depth		7232126	0		-			
ANR	7232195	PrimaryExpression	8		7232126	0					
ANR	7232196	Identifier	bit_depth		7232126	1					
ANR	7232197	BitAndExpression	x & 0x7U		7232126	1		&			
ANR	7232198	Identifier	x		7232126	0					
ANR	7232199	PrimaryExpression	0x7U		7232126	1					
ANR	7232200	ExpressionStatement	mask <<= shift	353:18:11048:11062	7232126	1	True				
ANR	7232201	AssignmentExpression	mask <<= shift		7232126	0		<<=			
ANR	7232202	Identifier	mask		7232126	0					
ANR	7232203	Identifier	shift		7232126	1					
ANR	7232204	ExpressionStatement	value = ( value << shift ) & mask	354:18:11082:11113	7232126	2	True				
ANR	7232205	AssignmentExpression	value = ( value << shift ) & mask		7232126	0		=			
ANR	7232206	Identifier	value		7232126	0					
ANR	7232207	BitAndExpression	( value << shift ) & mask		7232126	1		&			
ANR	7232208	ShiftExpression	value << shift		7232126	0		<<			
ANR	7232209	Identifier	value		7232126	0					
ANR	7232210	Identifier	shift		7232126	1					
ANR	7232211	Identifier	mask		7232126	1					
ANR	7232212	ExpressionStatement	* row = ( png_byte ) ( ( * row & ~mask ) | value )	355:18:11133:11174	7232126	3	True				
ANR	7232213	AssignmentExpression	* row = ( png_byte ) ( ( * row & ~mask ) | value )		7232126	0		=			
ANR	7232214	UnaryOperationExpression	* row		7232126	0					
ANR	7232215	UnaryOperator	*		7232126	0					
ANR	7232216	Identifier	row		7232126	1					
ANR	7232217	CastExpression	( png_byte ) ( ( * row & ~mask ) | value )		7232126	1					
ANR	7232218	CastTarget	png_byte		7232126	0					
ANR	7232219	InclusiveOrExpression	( * row & ~mask ) | value		7232126	1		|			
ANR	7232220	BitAndExpression	* row & ~mask		7232126	0		&			
ANR	7232221	UnaryOperationExpression	* row		7232126	0					
ANR	7232222	UnaryOperator	*		7232126	0					
ANR	7232223	Identifier	row		7232126	1					
ANR	7232224	Identifier	~mask		7232126	1					
ANR	7232225	Identifier	value		7232126	1					
ANR	7232226	ReturnStatement	return ;	357:15:11208:11214	7232126	4	True				
ANR	7232227	Label	default :	359:12:11229:11236	7232126	5	True				
ANR	7232228	Identifier	default		7232126	0					
ANR	7232229	ExpressionStatement	"fprintf ( stderr , ""makepng: bad bit depth (internal error)\\n"" )"	360:15:11253:11313	7232126	6	True				
ANR	7232230	CallExpression	"fprintf ( stderr , ""makepng: bad bit depth (internal error)\\n"" )"		7232126	0					
ANR	7232231	Callee	fprintf		7232126	0					
ANR	7232232	Identifier	fprintf		7232126	0					
ANR	7232233	ArgumentList	stderr		7232126	1					
ANR	7232234	Argument	stderr		7232126	0					
ANR	7232235	Identifier	stderr		7232126	0					
ANR	7232236	Argument	"""makepng: bad bit depth (internal error)\\n"""		7232126	1					
ANR	7232237	PrimaryExpression	"""makepng: bad bit depth (internal error)\\n"""		7232126	0					
ANR	7232238	ExpressionStatement	exit ( 1 )	361:15:11330:11337	7232126	7	True				
ANR	7232239	CallExpression	exit ( 1 )		7232126	0					
ANR	7232240	Callee	exit		7232126	0					
ANR	7232241	Identifier	exit		7232126	0					
ANR	7232242	ArgumentList	1		7232126	1					
ANR	7232243	Argument	1		7232126	0					
ANR	7232244	PrimaryExpression	1		7232126	0					
ANR	7232245	Label	case 16 :	363:12:11352:11359	7232126	8	True				
ANR	7232246	ExpressionStatement	"value = flooru ( 65535 * pow ( value / 65535. , conv ) + .5 )"	364:15:11376:11423	7232126	9	True				
ANR	7232247	AssignmentExpression	"value = flooru ( 65535 * pow ( value / 65535. , conv ) + .5 )"		7232126	0		=			
ANR	7232248	Identifier	value		7232126	0					
ANR	7232249	CallExpression	"flooru ( 65535 * pow ( value / 65535. , conv ) + .5 )"		7232126	1					
ANR	7232250	Callee	flooru		7232126	0					
ANR	7232251	Identifier	flooru		7232126	0					
ANR	7232252	ArgumentList	"65535 * pow ( value / 65535. , conv ) + .5"		7232126	1					
ANR	7232253	Argument	"65535 * pow ( value / 65535. , conv ) + .5"		7232126	0					
ANR	7232254	AdditiveExpression	"65535 * pow ( value / 65535. , conv ) + .5"		7232126	0		+			
ANR	7232255	MultiplicativeExpression	"65535 * pow ( value / 65535. , conv )"		7232126	0		*			
ANR	7232256	PrimaryExpression	65535		7232126	0					
ANR	7232257	CallExpression	"pow ( value / 65535. , conv )"		7232126	1					
ANR	7232258	Callee	pow		7232126	0					
ANR	7232259	Identifier	pow		7232126	0					
ANR	7232260	ArgumentList	value / 65535.		7232126	1					
ANR	7232261	Argument	value / 65535.		7232126	0					
ANR	7232262	MultiplicativeExpression	value / 65535.		7232126	0		/			
ANR	7232263	Identifier	value		7232126	0					
ANR	7232264	PrimaryExpression	65535.		7232126	1					
ANR	7232265	Argument	conv		7232126	1					
ANR	7232266	Identifier	conv		7232126	0					
ANR	7232267	PrimaryExpression	.5		7232126	1					
ANR	7232268	ExpressionStatement	* row ++ = ( png_byte ) ( value >> 8 )	365:15:11440:11471	7232126	10	True				
ANR	7232269	AssignmentExpression	* row ++ = ( png_byte ) ( value >> 8 )		7232126	0		=			
ANR	7232270	UnaryOperationExpression	* row ++		7232126	0					
ANR	7232271	UnaryOperator	*		7232126	0					
ANR	7232272	PostIncDecOperationExpression	row ++		7232126	1					
ANR	7232273	Identifier	row		7232126	0					
ANR	7232274	IncDec	++		7232126	1					
ANR	7232275	CastExpression	( png_byte ) ( value >> 8 )		7232126	1					
ANR	7232276	CastTarget	png_byte		7232126	0					
ANR	7232277	ShiftExpression	value >> 8		7232126	1		>>			
ANR	7232278	Identifier	value		7232126	0					
ANR	7232279	PrimaryExpression	8		7232126	1					
ANR	7232280	ExpressionStatement	* row = ( png_byte ) value	366:15:11488:11510	7232126	11	True				
ANR	7232281	AssignmentExpression	* row = ( png_byte ) value		7232126	0		=			
ANR	7232282	UnaryOperationExpression	* row		7232126	0					
ANR	7232283	UnaryOperator	*		7232126	0					
ANR	7232284	Identifier	row		7232126	1					
ANR	7232285	CastExpression	( png_byte ) value		7232126	1					
ANR	7232286	CastTarget	png_byte		7232126	0					
ANR	7232287	Identifier	value		7232126	1					
ANR	7232288	ReturnStatement	return ;	367:15:11527:11533	7232126	12	True				
ANR	7232289	Label	case 8 :	369:12:11548:11554	7232126	13	True				
ANR	7232290	ExpressionStatement	* row = gamma_table [ value ]	370:15:11571:11596	7232126	14	True				
ANR	7232291	AssignmentExpression	* row = gamma_table [ value ]		7232126	0		=			
ANR	7232292	UnaryOperationExpression	* row		7232126	0					
ANR	7232293	UnaryOperator	*		7232126	0					
ANR	7232294	Identifier	row		7232126	1					
ANR	7232295	ArrayIndexing	gamma_table [ value ]		7232126	1					
ANR	7232296	Identifier	gamma_table		7232126	0					
ANR	7232297	Identifier	value		7232126	1					
ANR	7232298	ReturnStatement	return ;	371:15:11613:11619	7232126	15	True				
ANR	7232299	ElseStatement	else		7232126	0					
ANR	7232300	CompoundStatement		46:6:1162:1162	7232126	0					
ANR	7232301	ExpressionStatement	"fprintf ( stderr , ""makepng: row buffer overflow (internal error)\\n"" )"	377:9:11669:11735	7232126	0	True				
ANR	7232302	CallExpression	"fprintf ( stderr , ""makepng: row buffer overflow (internal error)\\n"" )"		7232126	0					
ANR	7232303	Callee	fprintf		7232126	0					
ANR	7232304	Identifier	fprintf		7232126	0					
ANR	7232305	ArgumentList	stderr		7232126	1					
ANR	7232306	Argument	stderr		7232126	0					
ANR	7232307	Identifier	stderr		7232126	0					
ANR	7232308	Argument	"""makepng: row buffer overflow (internal error)\\n"""		7232126	1					
ANR	7232309	PrimaryExpression	"""makepng: row buffer overflow (internal error)\\n"""		7232126	0					
ANR	7232310	ExpressionStatement	exit ( 1 )	378:9:11746:11753	7232126	1	True				
ANR	7232311	CallExpression	exit ( 1 )		7232126	0					
ANR	7232312	Callee	exit		7232126	0					
ANR	7232313	Identifier	exit		7232126	0					
ANR	7232314	ArgumentList	1		7232126	1					
ANR	7232315	Argument	1		7232126	0					
ANR	7232316	PrimaryExpression	1		7232126	0					
ANR	7232317	ElseStatement	else		7232126	0					
ANR	7232318	CompoundStatement		53:3:1284:1284	7232126	0					
ANR	7232319	ExpressionStatement	"fprintf ( stderr , ""makepng: component overflow (internal error)\\n"" )"	384:6:11788:11853	7232126	0	True				
ANR	7232320	CallExpression	"fprintf ( stderr , ""makepng: component overflow (internal error)\\n"" )"		7232126	0					
ANR	7232321	Callee	fprintf		7232126	0					
ANR	7232322	Identifier	fprintf		7232126	0					
ANR	7232323	ArgumentList	stderr		7232126	1					
ANR	7232324	Argument	stderr		7232126	0					
ANR	7232325	Identifier	stderr		7232126	0					
ANR	7232326	Argument	"""makepng: component overflow (internal error)\\n"""		7232126	1					
ANR	7232327	PrimaryExpression	"""makepng: component overflow (internal error)\\n"""		7232126	0					
ANR	7232328	ExpressionStatement	exit ( 1 )	385:6:11861:11868	7232126	1	True				
ANR	7232329	CallExpression	exit ( 1 )		7232126	0					
ANR	7232330	Callee	exit		7232126	0					
ANR	7232331	Identifier	exit		7232126	0					
ANR	7232332	ArgumentList	1		7232126	1					
ANR	7232333	Argument	1		7232126	0					
ANR	7232334	PrimaryExpression	1		7232126	0					
ANR	7232335	ReturnType	static void		7232126	1					
ANR	7232336	Identifier	set_value		7232126	2					
ANR	7232337	ParameterList	"png_bytep row , size_t rowbytes , png_uint_32 x , unsigned int bit_depth , png_uint_32 value , png_const_bytep gamma_table , double conv"		7232126	3					
ANR	7232338	Parameter	png_bytep row	329:10:10360:10372	7232126	0	True				
ANR	7232339	ParameterType	png_bytep		7232126	0					
ANR	7232340	Identifier	row		7232126	1					
ANR	7232341	Parameter	size_t rowbytes	329:25:10375:10389	7232126	1	True				
ANR	7232342	ParameterType	size_t		7232126	0					
ANR	7232343	Identifier	rowbytes		7232126	1					
ANR	7232344	Parameter	png_uint_32 x	329:42:10392:10404	7232126	2	True				
ANR	7232345	ParameterType	png_uint_32		7232126	0					
ANR	7232346	Identifier	x		7232126	1					
ANR	7232347	Parameter	unsigned int bit_depth	329:57:10407:10428	7232126	3	True				
ANR	7232348	ParameterType	unsigned int		7232126	0					
ANR	7232349	Identifier	bit_depth		7232126	1					
ANR	7232350	Parameter	png_uint_32 value	330:3:10434:10450	7232126	4	True				
ANR	7232351	ParameterType	png_uint_32		7232126	0					
ANR	7232352	Identifier	value		7232126	1					
ANR	7232353	Parameter	png_const_bytep gamma_table	330:22:10453:10479	7232126	5	True				
ANR	7232354	ParameterType	png_const_bytep		7232126	0					
ANR	7232355	Identifier	gamma_table		7232126	1					
ANR	7232356	Parameter	double conv	330:51:10482:10492	7232126	6	True				
ANR	7232357	ParameterType	double		7232126	0					
ANR	7232358	Identifier	conv		7232126	1					
ANR	7232359	CFGEntryNode	ENTRY		7232126		True				
ANR	7232360	CFGExitNode	EXIT		7232126		True				
ANR	7232361	Symbol	offset		7232126						
ANR	7232362	Symbol	* row		7232126						
ANR	7232363	Symbol	shift		7232126						
ANR	7232364	Symbol	~mask		7232126						
ANR	7232365	Symbol	* row ++		7232126						
ANR	7232366	Symbol	stderr		7232126						
ANR	7232367	Symbol	gamma_table		7232126						
ANR	7232368	Symbol	* value		7232126						
ANR	7232369	Symbol	* gamma_table		7232126						
ANR	7232370	Symbol	x		7232126						
ANR	7232371	Symbol	rowbytes		7232126						
ANR	7232372	Symbol	pow		7232126						
ANR	7232373	Symbol	conv		7232126						
ANR	7232374	Symbol	row		7232126						
ANR	7232375	Symbol	bit_depth		7232126						
ANR	7232376	Symbol	value		7232126						
ANR	7232377	Symbol	flooru		7232126						
ANR	7232378	Symbol	mask		7232126						
ANR	7232379	Function	generate_row	389:0:11878:24613							
ANR	7232380	FunctionDef	"generate_row (png_bytep row , size_t rowbytes , unsigned int y , int color_type , int bit_depth , png_const_bytep gamma_table , double conv , unsigned int * colors , int small)"		7232379	0					
ANR	7232381	CompoundStatement		393:0:12088:24613	7232379	0					
ANR	7232382	IdentifierDeclStatement	int filters = 0 ;	394:3:12093:12108	7232379	0	True				
ANR	7232383	IdentifierDecl	filters = 0		7232379	0					
ANR	7232384	IdentifierDeclType	int		7232379	0					
ANR	7232385	Identifier	filters		7232379	1					
ANR	7232386	AssignmentExpression	filters = 0		7232379	2		=			
ANR	7232387	Identifier	filters		7232379	0					
ANR	7232388	PrimaryExpression	0		7232379	1					
ANR	7232389	IdentifierDeclStatement	"png_uint_32 size_max = image_size_of_type ( color_type , bit_depth , colors , small ) - 1 ;"	395:3:12162:12249	7232379	1	True				
ANR	7232390	IdentifierDecl	"size_max = image_size_of_type ( color_type , bit_depth , colors , small ) - 1"		7232379	0					
ANR	7232391	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232392	Identifier	size_max		7232379	1					
ANR	7232393	AssignmentExpression	"size_max = image_size_of_type ( color_type , bit_depth , colors , small ) - 1"		7232379	2		=			
ANR	7232394	Identifier	size_max		7232379	0					
ANR	7232395	AdditiveExpression	"image_size_of_type ( color_type , bit_depth , colors , small ) - 1"		7232379	1		-			
ANR	7232396	CallExpression	"image_size_of_type ( color_type , bit_depth , colors , small )"		7232379	0					
ANR	7232397	Callee	image_size_of_type		7232379	0					
ANR	7232398	Identifier	image_size_of_type		7232379	0					
ANR	7232399	ArgumentList	color_type		7232379	1					
ANR	7232400	Argument	color_type		7232379	0					
ANR	7232401	Identifier	color_type		7232379	0					
ANR	7232402	Argument	bit_depth		7232379	1					
ANR	7232403	Identifier	bit_depth		7232379	0					
ANR	7232404	Argument	colors		7232379	2					
ANR	7232405	Identifier	colors		7232379	0					
ANR	7232406	Argument	small		7232379	3					
ANR	7232407	Identifier	small		7232379	0					
ANR	7232408	PrimaryExpression	1		7232379	1					
ANR	7232409	IdentifierDeclStatement	png_uint_32 depth_max = ( 1U << bit_depth ) - 1 ;	397:3:12254:12297	7232379	2	True				
ANR	7232410	IdentifierDecl	depth_max = ( 1U << bit_depth ) - 1		7232379	0					
ANR	7232411	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232412	Identifier	depth_max		7232379	1					
ANR	7232413	AssignmentExpression	depth_max = ( 1U << bit_depth ) - 1		7232379	2		=			
ANR	7232414	Identifier	depth_max		7232379	0					
ANR	7232415	AdditiveExpression	( 1U << bit_depth ) - 1		7232379	1		-			
ANR	7232416	ShiftExpression	1U << bit_depth		7232379	0		<<			
ANR	7232417	PrimaryExpression	1U		7232379	0					
ANR	7232418	Identifier	bit_depth		7232379	1					
ANR	7232419	PrimaryExpression	1		7232379	1					
ANR	7232420	IfStatement	if ( colors [ 0 ] == 0 )		7232379	3					
ANR	7232421	Condition	colors [ 0 ] == 0	399:7:12325:12338	7232379	0	True				
ANR	7232422	EqualityExpression	colors [ 0 ] == 0		7232379	0		==			
ANR	7232423	ArrayIndexing	colors [ 0 ]		7232379	0					
ANR	7232424	Identifier	colors		7232379	0					
ANR	7232425	PrimaryExpression	0		7232379	1					
ANR	7232426	PrimaryExpression	0		7232379	1					
ANR	7232427	IfStatement	if ( small )		7232379	1					
ANR	7232428	Condition	small	399:27:12345:12349	7232379	0	True				
ANR	7232429	Identifier	small		7232379	0					
ANR	7232430	CompoundStatement		9:6:274:343	7232379	1					
ANR	7232431	IdentifierDeclStatement	"unsigned int pixel_depth = pixel_depth_of_type ( color_type , bit_depth ) ;"	401:6:12363:12432	7232379	0	True				
ANR	7232432	IdentifierDecl	"pixel_depth = pixel_depth_of_type ( color_type , bit_depth )"		7232379	0					
ANR	7232433	IdentifierDeclType	unsigned int		7232379	0					
ANR	7232434	Identifier	pixel_depth		7232379	1					
ANR	7232435	AssignmentExpression	"pixel_depth = pixel_depth_of_type ( color_type , bit_depth )"		7232379	2		=			
ANR	7232436	Identifier	pixel_depth		7232379	0					
ANR	7232437	CallExpression	"pixel_depth_of_type ( color_type , bit_depth )"		7232379	1					
ANR	7232438	Callee	pixel_depth_of_type		7232379	0					
ANR	7232439	Identifier	pixel_depth_of_type		7232379	0					
ANR	7232440	ArgumentList	color_type		7232379	1					
ANR	7232441	Argument	color_type		7232379	0					
ANR	7232442	Identifier	color_type		7232379	0					
ANR	7232443	Argument	bit_depth		7232379	1					
ANR	7232444	Identifier	bit_depth		7232379	0					
ANR	7232445	SwitchStatement	switch ( pixel_depth )		7232379	1					
ANR	7232446	Condition	pixel_depth	407:14:12656:12666	7232379	0	True				
ANR	7232447	Identifier	pixel_depth		7232379	0					
ANR	7232448	CompoundStatement		16:6:586:586	7232379	1					
ANR	7232449	Label	case 1 :	409:9:12686:12692	7232379	0	True				
ANR	7232450	ExpressionStatement	assert ( y == 0 && rowbytes == 1 && size_max == 1 )	410:12:12706:12754	7232379	1	True				
ANR	7232451	CallExpression	assert ( y == 0 && rowbytes == 1 && size_max == 1 )		7232379	0					
ANR	7232452	Callee	assert		7232379	0					
ANR	7232453	Identifier	assert		7232379	0					
ANR	7232454	ArgumentList	y == 0 && rowbytes == 1 && size_max == 1		7232379	1					
ANR	7232455	Argument	y == 0 && rowbytes == 1 && size_max == 1		7232379	0					
ANR	7232456	AndExpression	y == 0 && rowbytes == 1 && size_max == 1		7232379	0		&&			
ANR	7232457	EqualityExpression	y == 0		7232379	0		==			
ANR	7232458	Identifier	y		7232379	0					
ANR	7232459	PrimaryExpression	0		7232379	1					
ANR	7232460	AndExpression	rowbytes == 1 && size_max == 1		7232379	1		&&			
ANR	7232461	EqualityExpression	rowbytes == 1		7232379	0		==			
ANR	7232462	Identifier	rowbytes		7232379	0					
ANR	7232463	PrimaryExpression	1		7232379	1					
ANR	7232464	EqualityExpression	size_max == 1		7232379	1		==			
ANR	7232465	Identifier	size_max		7232379	0					
ANR	7232466	PrimaryExpression	1		7232379	1					
ANR	7232467	ExpressionStatement	row [ 0 ] = 0x6CU	411:12:12768:12782	7232379	2	True				
ANR	7232468	AssignmentExpression	row [ 0 ] = 0x6CU		7232379	0		=			
ANR	7232469	ArrayIndexing	row [ 0 ]		7232379	0					
ANR	7232470	Identifier	row		7232379	0					
ANR	7232471	PrimaryExpression	0		7232379	1					
ANR	7232472	PrimaryExpression	0x6CU		7232379	1					
ANR	7232473	ExpressionStatement	filters = PNG_FILTER_NONE	412:12:12841:12866	7232379	3	True				
ANR	7232474	AssignmentExpression	filters = PNG_FILTER_NONE		7232379	0		=			
ANR	7232475	Identifier	filters		7232379	0					
ANR	7232476	Identifier	PNG_FILTER_NONE		7232379	1					
ANR	7232477	BreakStatement	break ;	413:12:12880:12885	7232379	4	True				
ANR	7232478	Label	case 2 :	415:9:12897:12903	7232379	5	True				
ANR	7232479	ExpressionStatement	assert ( y == 0 && rowbytes == 1 && size_max == 3 )	416:12:12917:12965	7232379	6	True				
ANR	7232480	CallExpression	assert ( y == 0 && rowbytes == 1 && size_max == 3 )		7232379	0					
ANR	7232481	Callee	assert		7232379	0					
ANR	7232482	Identifier	assert		7232379	0					
ANR	7232483	ArgumentList	y == 0 && rowbytes == 1 && size_max == 3		7232379	1					
ANR	7232484	Argument	y == 0 && rowbytes == 1 && size_max == 3		7232379	0					
ANR	7232485	AndExpression	y == 0 && rowbytes == 1 && size_max == 3		7232379	0		&&			
ANR	7232486	EqualityExpression	y == 0		7232379	0		==			
ANR	7232487	Identifier	y		7232379	0					
ANR	7232488	PrimaryExpression	0		7232379	1					
ANR	7232489	AndExpression	rowbytes == 1 && size_max == 3		7232379	1		&&			
ANR	7232490	EqualityExpression	rowbytes == 1		7232379	0		==			
ANR	7232491	Identifier	rowbytes		7232379	0					
ANR	7232492	PrimaryExpression	1		7232379	1					
ANR	7232493	EqualityExpression	size_max == 3		7232379	1		==			
ANR	7232494	Identifier	size_max		7232379	0					
ANR	7232495	PrimaryExpression	3		7232379	1					
ANR	7232496	ExpressionStatement	row [ 0 ] = 0x1BU	417:12:12979:12993	7232379	7	True				
ANR	7232497	AssignmentExpression	row [ 0 ] = 0x1BU		7232379	0		=			
ANR	7232498	ArrayIndexing	row [ 0 ]		7232379	0					
ANR	7232499	Identifier	row		7232379	0					
ANR	7232500	PrimaryExpression	0		7232379	1					
ANR	7232501	PrimaryExpression	0x1BU		7232379	1					
ANR	7232502	ExpressionStatement	filters = PNG_FILTER_NONE	418:12:13044:13069	7232379	8	True				
ANR	7232503	AssignmentExpression	filters = PNG_FILTER_NONE		7232379	0		=			
ANR	7232504	Identifier	filters		7232379	0					
ANR	7232505	Identifier	PNG_FILTER_NONE		7232379	1					
ANR	7232506	BreakStatement	break ;	419:12:13083:13088	7232379	9	True				
ANR	7232507	Label	case 4 :	421:9:13100:13106	7232379	10	True				
ANR	7232508	ExpressionStatement	assert ( y == 0 && rowbytes == 8 && size_max == 15 )	422:12:13120:13169	7232379	11	True				
ANR	7232509	CallExpression	assert ( y == 0 && rowbytes == 8 && size_max == 15 )		7232379	0					
ANR	7232510	Callee	assert		7232379	0					
ANR	7232511	Identifier	assert		7232379	0					
ANR	7232512	ArgumentList	y == 0 && rowbytes == 8 && size_max == 15		7232379	1					
ANR	7232513	Argument	y == 0 && rowbytes == 8 && size_max == 15		7232379	0					
ANR	7232514	AndExpression	y == 0 && rowbytes == 8 && size_max == 15		7232379	0		&&			
ANR	7232515	EqualityExpression	y == 0		7232379	0		==			
ANR	7232516	Identifier	y		7232379	0					
ANR	7232517	PrimaryExpression	0		7232379	1					
ANR	7232518	AndExpression	rowbytes == 8 && size_max == 15		7232379	1		&&			
ANR	7232519	EqualityExpression	rowbytes == 8		7232379	0		==			
ANR	7232520	Identifier	rowbytes		7232379	0					
ANR	7232521	PrimaryExpression	8		7232379	1					
ANR	7232522	EqualityExpression	size_max == 15		7232379	1		==			
ANR	7232523	Identifier	size_max		7232379	0					
ANR	7232524	PrimaryExpression	15		7232379	1					
ANR	7232525	ExpressionStatement	row [ 0 ] = 0x01U	423:12:13183:13197	7232379	12	True				
ANR	7232526	AssignmentExpression	row [ 0 ] = 0x01U		7232379	0		=			
ANR	7232527	ArrayIndexing	row [ 0 ]		7232379	0					
ANR	7232528	Identifier	row		7232379	0					
ANR	7232529	PrimaryExpression	0		7232379	1					
ANR	7232530	PrimaryExpression	0x01U		7232379	1					
ANR	7232531	ExpressionStatement	row [ 1 ] = 0x23U	424:12:13211:13225	7232379	13	True				
ANR	7232532	AssignmentExpression	row [ 1 ] = 0x23U		7232379	0		=			
ANR	7232533	ArrayIndexing	row [ 1 ]		7232379	0					
ANR	7232534	Identifier	row		7232379	0					
ANR	7232535	PrimaryExpression	1		7232379	1					
ANR	7232536	PrimaryExpression	0x23U		7232379	1					
ANR	7232537	ExpressionStatement	row [ 2 ] = 0x45U	425:12:13285:13299	7232379	14	True				
ANR	7232538	AssignmentExpression	row [ 2 ] = 0x45U		7232379	0		=			
ANR	7232539	ArrayIndexing	row [ 2 ]		7232379	0					
ANR	7232540	Identifier	row		7232379	0					
ANR	7232541	PrimaryExpression	2		7232379	1					
ANR	7232542	PrimaryExpression	0x45U		7232379	1					
ANR	7232543	ExpressionStatement	row [ 3 ] = 0x67U	426:12:13313:13327	7232379	15	True				
ANR	7232544	AssignmentExpression	row [ 3 ] = 0x67U		7232379	0		=			
ANR	7232545	ArrayIndexing	row [ 3 ]		7232379	0					
ANR	7232546	Identifier	row		7232379	0					
ANR	7232547	PrimaryExpression	3		7232379	1					
ANR	7232548	PrimaryExpression	0x67U		7232379	1					
ANR	7232549	ExpressionStatement	row [ 4 ] = 0x89U	427:12:13341:13355	7232379	16	True				
ANR	7232550	AssignmentExpression	row [ 4 ] = 0x89U		7232379	0		=			
ANR	7232551	ArrayIndexing	row [ 4 ]		7232379	0					
ANR	7232552	Identifier	row		7232379	0					
ANR	7232553	PrimaryExpression	4		7232379	1					
ANR	7232554	PrimaryExpression	0x89U		7232379	1					
ANR	7232555	ExpressionStatement	row [ 5 ] = 0xABU	428:12:13369:13383	7232379	17	True				
ANR	7232556	AssignmentExpression	row [ 5 ] = 0xABU		7232379	0		=			
ANR	7232557	ArrayIndexing	row [ 5 ]		7232379	0					
ANR	7232558	Identifier	row		7232379	0					
ANR	7232559	PrimaryExpression	5		7232379	1					
ANR	7232560	PrimaryExpression	0xABU		7232379	1					
ANR	7232561	ExpressionStatement	row [ 6 ] = 0xCDU	429:12:13397:13411	7232379	18	True				
ANR	7232562	AssignmentExpression	row [ 6 ] = 0xCDU		7232379	0		=			
ANR	7232563	ArrayIndexing	row [ 6 ]		7232379	0					
ANR	7232564	Identifier	row		7232379	0					
ANR	7232565	PrimaryExpression	6		7232379	1					
ANR	7232566	PrimaryExpression	0xCDU		7232379	1					
ANR	7232567	ExpressionStatement	row [ 7 ] = 0xEFU	430:12:13425:13439	7232379	19	True				
ANR	7232568	AssignmentExpression	row [ 7 ] = 0xEFU		7232379	0		=			
ANR	7232569	ArrayIndexing	row [ 7 ]		7232379	0					
ANR	7232570	Identifier	row		7232379	0					
ANR	7232571	PrimaryExpression	7		7232379	1					
ANR	7232572	PrimaryExpression	0xEFU		7232379	1					
ANR	7232573	ExpressionStatement	filters = PNG_FILTER_SUB	431:12:13453:13477	7232379	20	True				
ANR	7232574	AssignmentExpression	filters = PNG_FILTER_SUB		7232379	0		=			
ANR	7232575	Identifier	filters		7232379	0					
ANR	7232576	Identifier	PNG_FILTER_SUB		7232379	1					
ANR	7232577	BreakStatement	break ;	432:12:13491:13496	7232379	21	True				
ANR	7232578	Label	case 8 :	434:9:13508:13514	7232379	22	True				
ANR	7232579	ExpressionStatement	assert ( y == 0 && rowbytes == 256 && size_max == 255 )	440:12:13850:13902	7232379	23	True				
ANR	7232580	CallExpression	assert ( y == 0 && rowbytes == 256 && size_max == 255 )		7232379	0					
ANR	7232581	Callee	assert		7232379	0					
ANR	7232582	Identifier	assert		7232379	0					
ANR	7232583	ArgumentList	y == 0 && rowbytes == 256 && size_max == 255		7232379	1					
ANR	7232584	Argument	y == 0 && rowbytes == 256 && size_max == 255		7232379	0					
ANR	7232585	AndExpression	y == 0 && rowbytes == 256 && size_max == 255		7232379	0		&&			
ANR	7232586	EqualityExpression	y == 0		7232379	0		==			
ANR	7232587	Identifier	y		7232379	0					
ANR	7232588	PrimaryExpression	0		7232379	1					
ANR	7232589	AndExpression	rowbytes == 256 && size_max == 255		7232379	1		&&			
ANR	7232590	EqualityExpression	rowbytes == 256		7232379	0		==			
ANR	7232591	Identifier	rowbytes		7232379	0					
ANR	7232592	PrimaryExpression	256		7232379	1					
ANR	7232593	EqualityExpression	size_max == 255		7232379	1		==			
ANR	7232594	Identifier	size_max		7232379	0					
ANR	7232595	PrimaryExpression	255		7232379	1					
ANR	7232596	ForStatement	for ( ; ; )		7232379	24					
ANR	7232597	CompoundStatement		50:12:1848:1848	7232379	0					
ANR	7232598	ExpressionStatement	row [ size_max ] = 0xFFU & ( size_max + 1 )	443:15:13954:13990	7232379	0	True				
ANR	7232599	AssignmentExpression	row [ size_max ] = 0xFFU & ( size_max + 1 )		7232379	0		=			
ANR	7232600	ArrayIndexing	row [ size_max ]		7232379	0					
ANR	7232601	Identifier	row		7232379	0					
ANR	7232602	Identifier	size_max		7232379	1					
ANR	7232603	BitAndExpression	0xFFU & ( size_max + 1 )		7232379	1		&			
ANR	7232604	PrimaryExpression	0xFFU		7232379	0					
ANR	7232605	AdditiveExpression	size_max + 1		7232379	1		+			
ANR	7232606	Identifier	size_max		7232379	0					
ANR	7232607	PrimaryExpression	1		7232379	1					
ANR	7232608	IfStatement	if ( size_max == 0 )		7232379	1					
ANR	7232609	Condition	size_max == 0	444:19:14011:14023	7232379	0	True				
ANR	7232610	EqualityExpression	size_max == 0		7232379	0		==			
ANR	7232611	Identifier	size_max		7232379	0					
ANR	7232612	PrimaryExpression	0		7232379	1					
ANR	7232613	BreakStatement	break ;	445:18:14044:14049	7232379	1	True				
ANR	7232614	ExpressionStatement	-- size_max	446:15:14066:14076	7232379	2	True				
ANR	7232615	UnaryExpression	-- size_max		7232379	0					
ANR	7232616	IncDec	--		7232379	0					
ANR	7232617	Identifier	size_max		7232379	1					
ANR	7232618	ExpressionStatement	filters = PNG_FILTER_SUB	448:12:14104:14128	7232379	25	True				
ANR	7232619	AssignmentExpression	filters = PNG_FILTER_SUB		7232379	0		=			
ANR	7232620	Identifier	filters		7232379	0					
ANR	7232621	Identifier	PNG_FILTER_SUB		7232379	1					
ANR	7232622	BreakStatement	break ;	449:12:14142:14147	7232379	26	True				
ANR	7232623	Label	case 16 :	451:9:14159:14166	7232379	27	True				
ANR	7232624	ExpressionStatement	assert ( rowbytes == 512 && size_max == 255 )	479:12:15355:15397	7232379	28	True				
ANR	7232625	CallExpression	assert ( rowbytes == 512 && size_max == 255 )		7232379	0					
ANR	7232626	Callee	assert		7232379	0					
ANR	7232627	Identifier	assert		7232379	0					
ANR	7232628	ArgumentList	rowbytes == 512 && size_max == 255		7232379	1					
ANR	7232629	Argument	rowbytes == 512 && size_max == 255		7232379	0					
ANR	7232630	AndExpression	rowbytes == 512 && size_max == 255		7232379	0		&&			
ANR	7232631	EqualityExpression	rowbytes == 512		7232379	0		==			
ANR	7232632	Identifier	rowbytes		7232379	0					
ANR	7232633	PrimaryExpression	512		7232379	1					
ANR	7232634	EqualityExpression	size_max == 255		7232379	1		==			
ANR	7232635	Identifier	size_max		7232379	0					
ANR	7232636	PrimaryExpression	255		7232379	1					
ANR	7232637	ForStatement	for ( ; ; )		7232379	29					
ANR	7232638	CompoundStatement		89:12:3343:3343	7232379	0					
ANR	7232639	ExpressionStatement	row [ 2 * size_max ] = 0xFFU & size_max	482:15:15449:15485	7232379	0	True				
ANR	7232640	AssignmentExpression	row [ 2 * size_max ] = 0xFFU & size_max		7232379	0		=			
ANR	7232641	ArrayIndexing	row [ 2 * size_max ]		7232379	0					
ANR	7232642	Identifier	row		7232379	0					
ANR	7232643	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7232644	PrimaryExpression	2		7232379	0					
ANR	7232645	Identifier	size_max		7232379	1					
ANR	7232646	BitAndExpression	0xFFU & size_max		7232379	1		&			
ANR	7232647	PrimaryExpression	0xFFU		7232379	0					
ANR	7232648	Identifier	size_max		7232379	1					
ANR	7232649	ExpressionStatement	row [ 2 * size_max + 1 ] = 0xFFU & ( size_max + y + 1 )	483:15:15502:15544	7232379	1	True				
ANR	7232650	AssignmentExpression	row [ 2 * size_max + 1 ] = 0xFFU & ( size_max + y + 1 )		7232379	0		=			
ANR	7232651	ArrayIndexing	row [ 2 * size_max + 1 ]		7232379	0					
ANR	7232652	Identifier	row		7232379	0					
ANR	7232653	AdditiveExpression	2 * size_max + 1		7232379	1		+			
ANR	7232654	MultiplicativeExpression	2 * size_max		7232379	0		*			
ANR	7232655	PrimaryExpression	2		7232379	0					
ANR	7232656	Identifier	size_max		7232379	1					
ANR	7232657	PrimaryExpression	1		7232379	1					
ANR	7232658	BitAndExpression	0xFFU & ( size_max + y + 1 )		7232379	1		&			
ANR	7232659	PrimaryExpression	0xFFU		7232379	0					
ANR	7232660	AdditiveExpression	size_max + y + 1		7232379	1		+			
ANR	7232661	Identifier	size_max		7232379	0					
ANR	7232662	AdditiveExpression	y + 1		7232379	1		+			
ANR	7232663	Identifier	y		7232379	0					
ANR	7232664	PrimaryExpression	1		7232379	1					
ANR	7232665	IfStatement	if ( size_max == 0 )		7232379	2					
ANR	7232666	Condition	size_max == 0	484:19:15565:15577	7232379	0	True				
ANR	7232667	EqualityExpression	size_max == 0		7232379	0		==			
ANR	7232668	Identifier	size_max		7232379	0					
ANR	7232669	PrimaryExpression	0		7232379	1					
ANR	7232670	BreakStatement	break ;	485:18:15598:15603	7232379	1	True				
ANR	7232671	ExpressionStatement	-- size_max	486:15:15620:15630	7232379	3	True				
ANR	7232672	UnaryExpression	-- size_max		7232379	0					
ANR	7232673	IncDec	--		7232379	0					
ANR	7232674	Identifier	size_max		7232379	1					
ANR	7232675	ExpressionStatement	filters = ( y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP )	491:12:15808:15873	7232379	30	True				
ANR	7232676	AssignmentExpression	filters = ( y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP )		7232379	0		=			
ANR	7232677	Identifier	filters		7232379	0					
ANR	7232678	ConditionalExpression	y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP		7232379	1					
ANR	7232679	Condition	y == 0		7232379	0					
ANR	7232680	EqualityExpression	y == 0		7232379	0		==			
ANR	7232681	Identifier	y		7232379	0					
ANR	7232682	PrimaryExpression	0		7232379	1					
ANR	7232683	AdditiveExpression	PNG_FILTER_SUB + PNG_FILTER_UP		7232379	1		+			
ANR	7232684	Identifier	PNG_FILTER_SUB		7232379	0					
ANR	7232685	Identifier	PNG_FILTER_UP		7232379	1					
ANR	7232686	Identifier	PNG_FILTER_UP		7232379	2					
ANR	7232687	BreakStatement	break ;	492:12:15887:15892	7232379	31	True				
ANR	7232688	Label	case 24 :	494:9:15904:15911	7232379	32	True				
ANR	7232689	Label	case 32 :	495:9:15922:15929	7232379	33	True				
ANR	7232690	Label	case 48 :	496:9:15940:15947	7232379	34	True				
ANR	7232691	Label	case 64 :	497:9:15958:15965	7232379	35	True				
ANR	7232692	ExpressionStatement	assert ( size_max == 255 && rowbytes == 256 * ( pixel_depth >> 3 ) )	504:12:16380:16439	7232379	36	True				
ANR	7232693	CallExpression	assert ( size_max == 255 && rowbytes == 256 * ( pixel_depth >> 3 ) )		7232379	0					
ANR	7232694	Callee	assert		7232379	0					
ANR	7232695	Identifier	assert		7232379	0					
ANR	7232696	ArgumentList	size_max == 255 && rowbytes == 256 * ( pixel_depth >> 3 )		7232379	1					
ANR	7232697	Argument	size_max == 255 && rowbytes == 256 * ( pixel_depth >> 3 )		7232379	0					
ANR	7232698	AndExpression	size_max == 255 && rowbytes == 256 * ( pixel_depth >> 3 )		7232379	0		&&			
ANR	7232699	EqualityExpression	size_max == 255		7232379	0		==			
ANR	7232700	Identifier	size_max		7232379	0					
ANR	7232701	PrimaryExpression	255		7232379	1					
ANR	7232702	EqualityExpression	rowbytes == 256 * ( pixel_depth >> 3 )		7232379	1		==			
ANR	7232703	Identifier	rowbytes		7232379	0					
ANR	7232704	MultiplicativeExpression	256 * ( pixel_depth >> 3 )		7232379	1		*			
ANR	7232705	PrimaryExpression	256		7232379	0					
ANR	7232706	ShiftExpression	pixel_depth >> 3		7232379	1		>>			
ANR	7232707	Identifier	pixel_depth		7232379	0					
ANR	7232708	PrimaryExpression	3		7232379	1					
ANR	7232709	ExpressionStatement	pixel_depth >>= 3	505:12:16453:16470	7232379	37	True				
ANR	7232710	AssignmentExpression	pixel_depth >>= 3		7232379	0		>>=			
ANR	7232711	Identifier	pixel_depth		7232379	0					
ANR	7232712	PrimaryExpression	3		7232379	1					
ANR	7232713	WhileStatement	while ( rowbytes > 0 )		7232379	38					
ANR	7232714	Condition	rowbytes > 0	506:19:16510:16521	7232379	0	True				
ANR	7232715	RelationalExpression	rowbytes > 0		7232379	0		>			
ANR	7232716	Identifier	rowbytes		7232379	0					
ANR	7232717	PrimaryExpression	0		7232379	1					
ANR	7232718	CompoundStatement		116:15:4464:4513	7232379	1					
ANR	7232719	IdentifierDeclStatement	const size_t pixel_index = -- rowbytes / pixel_depth ;	508:15:16553:16602	7232379	0	True				
ANR	7232720	IdentifierDecl	pixel_index = -- rowbytes / pixel_depth		7232379	0					
ANR	7232721	IdentifierDeclType	const size_t		7232379	0					
ANR	7232722	Identifier	pixel_index		7232379	1					
ANR	7232723	AssignmentExpression	pixel_index = -- rowbytes / pixel_depth		7232379	2		=			
ANR	7232724	Identifier	pixel_index		7232379	0					
ANR	7232725	MultiplicativeExpression	-- rowbytes / pixel_depth		7232379	1		/			
ANR	7232726	UnaryExpression	-- rowbytes		7232379	0					
ANR	7232727	IncDec	--		7232379	0					
ANR	7232728	Identifier	rowbytes		7232379	1					
ANR	7232729	Identifier	pixel_depth		7232379	1					
ANR	7232730	IfStatement	if ( y == 0 )		7232379	1					
ANR	7232731	Condition	y == 0	510:19:16624:16629	7232379	0	True				
ANR	7232732	EqualityExpression	y == 0		7232379	0		==			
ANR	7232733	Identifier	y		7232379	0					
ANR	7232734	PrimaryExpression	0		7232379	1					
ANR	7232735	ExpressionStatement	row [ rowbytes ] = 0xFFU & pixel_index	511:18:16650:16685	7232379	1	True				
ANR	7232736	AssignmentExpression	row [ rowbytes ] = 0xFFU & pixel_index		7232379	0		=			
ANR	7232737	ArrayIndexing	row [ rowbytes ]		7232379	0					
ANR	7232738	Identifier	row		7232379	0					
ANR	7232739	Identifier	rowbytes		7232379	1					
ANR	7232740	BitAndExpression	0xFFU & pixel_index		7232379	1		&			
ANR	7232741	PrimaryExpression	0xFFU		7232379	0					
ANR	7232742	Identifier	pixel_index		7232379	1					
ANR	7232743	ElseStatement	else		7232379	0					
ANR	7232744	CompoundStatement		123:18:4654:4738	7232379	0					
ANR	7232745	IdentifierDeclStatement	const size_t byte_offset = rowbytes - pixel_index * pixel_depth ;	515:18:16743:16827	7232379	0	True				
ANR	7232746	IdentifierDecl	byte_offset = rowbytes - pixel_index * pixel_depth		7232379	0					
ANR	7232747	IdentifierDeclType	const size_t		7232379	0					
ANR	7232748	Identifier	byte_offset		7232379	1					
ANR	7232749	AssignmentExpression	byte_offset = rowbytes - pixel_index * pixel_depth		7232379	2		=			
ANR	7232750	Identifier	byte_offset		7232379	0					
ANR	7232751	AdditiveExpression	rowbytes - pixel_index * pixel_depth		7232379	1		-			
ANR	7232752	Identifier	rowbytes		7232379	0					
ANR	7232753	MultiplicativeExpression	pixel_index * pixel_depth		7232379	1		*			
ANR	7232754	Identifier	pixel_index		7232379	0					
ANR	7232755	Identifier	pixel_depth		7232379	1					
ANR	7232756	ExpressionStatement	row [ rowbytes ] = 0xFFU & ( pixel_index + ( byte_offset * 2 * y ) + 1 )	518:18:16848:16932	7232379	1	True				
ANR	7232757	AssignmentExpression	row [ rowbytes ] = 0xFFU & ( pixel_index + ( byte_offset * 2 * y ) + 1 )		7232379	0		=			
ANR	7232758	ArrayIndexing	row [ rowbytes ]		7232379	0					
ANR	7232759	Identifier	row		7232379	0					
ANR	7232760	Identifier	rowbytes		7232379	1					
ANR	7232761	BitAndExpression	0xFFU & ( pixel_index + ( byte_offset * 2 * y ) + 1 )		7232379	1		&			
ANR	7232762	PrimaryExpression	0xFFU		7232379	0					
ANR	7232763	AdditiveExpression	pixel_index + ( byte_offset * 2 * y ) + 1		7232379	1		+			
ANR	7232764	Identifier	pixel_index		7232379	0					
ANR	7232765	AdditiveExpression	( byte_offset * 2 * y ) + 1		7232379	1		+			
ANR	7232766	MultiplicativeExpression	byte_offset * 2 * y		7232379	0		*			
ANR	7232767	Identifier	byte_offset		7232379	0					
ANR	7232768	MultiplicativeExpression	2 * y		7232379	1		*			
ANR	7232769	PrimaryExpression	2		7232379	0					
ANR	7232770	Identifier	y		7232379	1					
ANR	7232771	PrimaryExpression	1		7232379	1					
ANR	7232772	ExpressionStatement	filters = ( y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP )	522:12:16977:17042	7232379	39	True				
ANR	7232773	AssignmentExpression	filters = ( y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP )		7232379	0		=			
ANR	7232774	Identifier	filters		7232379	0					
ANR	7232775	ConditionalExpression	y == 0 ? PNG_FILTER_SUB + PNG_FILTER_UP : PNG_FILTER_UP		7232379	1					
ANR	7232776	Condition	y == 0		7232379	0					
ANR	7232777	EqualityExpression	y == 0		7232379	0		==			
ANR	7232778	Identifier	y		7232379	0					
ANR	7232779	PrimaryExpression	0		7232379	1					
ANR	7232780	AdditiveExpression	PNG_FILTER_SUB + PNG_FILTER_UP		7232379	1		+			
ANR	7232781	Identifier	PNG_FILTER_SUB		7232379	0					
ANR	7232782	Identifier	PNG_FILTER_UP		7232379	1					
ANR	7232783	Identifier	PNG_FILTER_UP		7232379	2					
ANR	7232784	BreakStatement	break ;	523:12:17056:17061	7232379	40	True				
ANR	7232785	Label	default :	525:9:17073:17080	7232379	41	True				
ANR	7232786	Identifier	default		7232379	0					
ANR	7232787	ExpressionStatement	assert ( 0 )	526:12:17094:17118	7232379	42	True				
ANR	7232788	CallExpression	assert ( 0 )		7232379	0					
ANR	7232789	Callee	assert		7232379	0					
ANR	7232790	Identifier	assert		7232379	0					
ANR	7232791	ArgumentList	0		7232379	1					
ANR	7232792	Argument	0		7232379	0					
ANR	7232793	PrimaryExpression	0		7232379	0					
ANR	7232794	ElseStatement	else		7232379	0					
ANR	7232795	SwitchStatement	switch ( channels_of_type ( color_type ) )		7232379	0					
ANR	7232796	Condition	channels_of_type ( color_type )	530:16:17150:17177	7232379	0	True				
ANR	7232797	CallExpression	channels_of_type ( color_type )		7232379	0					
ANR	7232798	Callee	channels_of_type		7232379	0					
ANR	7232799	Identifier	channels_of_type		7232379	0					
ANR	7232800	ArgumentList	color_type		7232379	1					
ANR	7232801	Argument	color_type		7232379	0					
ANR	7232802	Identifier	color_type		7232379	0					
ANR	7232803	CompoundStatement		139:3:5094:5094	7232379	1					
ANR	7232804	Label	case 1 :	535:6:17344:17350	7232379	0	True				
ANR	7232805	CompoundStatement		146:12:5313:5362	7232379	1					
ANR	7232806	IdentifierDeclStatement	png_uint_32 x ;	537:12:17375:17388	7232379	0	True				
ANR	7232807	IdentifierDecl	x		7232379	0					
ANR	7232808	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232809	Identifier	x		7232379	1					
ANR	7232810	IdentifierDeclStatement	png_uint_32 base = 2 * size_max - abs ( 2 * y - size_max ) ;	538:12:17402:17451	7232379	1	True				
ANR	7232811	IdentifierDecl	base = 2 * size_max - abs ( 2 * y - size_max )		7232379	0					
ANR	7232812	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232813	Identifier	base		7232379	1					
ANR	7232814	AssignmentExpression	base = 2 * size_max - abs ( 2 * y - size_max )		7232379	2		=			
ANR	7232815	Identifier	base		7232379	0					
ANR	7232816	AdditiveExpression	2 * size_max - abs ( 2 * y - size_max )		7232379	1		-			
ANR	7232817	MultiplicativeExpression	2 * size_max		7232379	0		*			
ANR	7232818	PrimaryExpression	2		7232379	0					
ANR	7232819	Identifier	size_max		7232379	1					
ANR	7232820	CallExpression	abs ( 2 * y - size_max )		7232379	1					
ANR	7232821	Callee	abs		7232379	0					
ANR	7232822	Identifier	abs		7232379	0					
ANR	7232823	ArgumentList	2 * y - size_max		7232379	1					
ANR	7232824	Argument	2 * y - size_max		7232379	0					
ANR	7232825	AdditiveExpression	2 * y - size_max		7232379	0		-			
ANR	7232826	MultiplicativeExpression	2 * y		7232379	0		*			
ANR	7232827	PrimaryExpression	2		7232379	0					
ANR	7232828	Identifier	y		7232379	1					
ANR	7232829	Identifier	size_max		7232379	1					
ANR	7232830	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	2					
ANR	7232831	ForInit	x = 0 ;	540:17:17471:17474	7232379	0	True				
ANR	7232832	AssignmentExpression	x = 0		7232379	0		=			
ANR	7232833	Identifier	x		7232379	0					
ANR	7232834	PrimaryExpression	0		7232379	1					
ANR	7232835	Condition	x <= size_max	540:22:17476:17486	7232379	1	True				
ANR	7232836	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7232837	Identifier	x		7232379	0					
ANR	7232838	Identifier	size_max		7232379	1					
ANR	7232839	UnaryExpression	++ x	540:35:17489:17491	7232379	2	True				
ANR	7232840	IncDec	++		7232379	0					
ANR	7232841	Identifier	x		7232379	1					
ANR	7232842	CompoundStatement		150:15:5434:5477	7232379	3					
ANR	7232843	IdentifierDeclStatement	png_uint_32 luma = base - abs ( 2 * x - size_max ) ;	542:15:17523:17566	7232379	0	True				
ANR	7232844	IdentifierDecl	luma = base - abs ( 2 * x - size_max )		7232379	0					
ANR	7232845	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232846	Identifier	luma		7232379	1					
ANR	7232847	AssignmentExpression	luma = base - abs ( 2 * x - size_max )		7232379	2		=			
ANR	7232848	Identifier	luma		7232379	0					
ANR	7232849	AdditiveExpression	base - abs ( 2 * x - size_max )		7232379	1		-			
ANR	7232850	Identifier	base		7232379	0					
ANR	7232851	CallExpression	abs ( 2 * x - size_max )		7232379	1					
ANR	7232852	Callee	abs		7232379	0					
ANR	7232853	Identifier	abs		7232379	0					
ANR	7232854	ArgumentList	2 * x - size_max		7232379	1					
ANR	7232855	Argument	2 * x - size_max		7232379	0					
ANR	7232856	AdditiveExpression	2 * x - size_max		7232379	0		-			
ANR	7232857	MultiplicativeExpression	2 * x		7232379	0		*			
ANR	7232858	PrimaryExpression	2		7232379	0					
ANR	7232859	Identifier	x		7232379	1					
ANR	7232860	Identifier	size_max		7232379	1					
ANR	7232861	ExpressionStatement	luma = ( luma * depth_max + size_max ) / ( 2 * size_max )	547:15:17702:17751	7232379	1	True				
ANR	7232862	AssignmentExpression	luma = ( luma * depth_max + size_max ) / ( 2 * size_max )		7232379	0		=			
ANR	7232863	Identifier	luma		7232379	0					
ANR	7232864	MultiplicativeExpression	( luma * depth_max + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7232865	AdditiveExpression	luma * depth_max + size_max		7232379	0		+			
ANR	7232866	MultiplicativeExpression	luma * depth_max		7232379	0		*			
ANR	7232867	Identifier	luma		7232379	0					
ANR	7232868	Identifier	depth_max		7232379	1					
ANR	7232869	Identifier	size_max		7232379	1					
ANR	7232870	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7232871	PrimaryExpression	2		7232379	0					
ANR	7232872	Identifier	size_max		7232379	1					
ANR	7232873	ExpressionStatement	"set_value ( row , rowbytes , x , bit_depth , luma , gamma_table , conv )"	548:15:17768:17831	7232379	2	True				
ANR	7232874	CallExpression	"set_value ( row , rowbytes , x , bit_depth , luma , gamma_table , conv )"		7232379	0					
ANR	7232875	Callee	set_value		7232379	0					
ANR	7232876	Identifier	set_value		7232379	0					
ANR	7232877	ArgumentList	row		7232379	1					
ANR	7232878	Argument	row		7232379	0					
ANR	7232879	Identifier	row		7232379	0					
ANR	7232880	Argument	rowbytes		7232379	1					
ANR	7232881	Identifier	rowbytes		7232379	0					
ANR	7232882	Argument	x		7232379	2					
ANR	7232883	Identifier	x		7232379	0					
ANR	7232884	Argument	bit_depth		7232379	3					
ANR	7232885	Identifier	bit_depth		7232379	0					
ANR	7232886	Argument	luma		7232379	4					
ANR	7232887	Identifier	luma		7232379	0					
ANR	7232888	Argument	gamma_table		7232379	5					
ANR	7232889	Identifier	gamma_table		7232379	0					
ANR	7232890	Argument	conv		7232379	6					
ANR	7232891	Identifier	conv		7232379	0					
ANR	7232892	BreakStatement	break ;	551:9:17867:17872	7232379	2	True				
ANR	7232893	Label	case 2 :	556:6:18036:18042	7232379	3	True				
ANR	7232894	CompoundStatement		167:12:6059:6072	7232379	4					
ANR	7232895	IdentifierDeclStatement	png_uint_32 alpha = ( depth_max * y * 2 + size_max ) / ( 2 * size_max ) ;	558:12:18067:18134	7232379	0	True				
ANR	7232896	IdentifierDecl	alpha = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	0					
ANR	7232897	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232898	Identifier	alpha		7232379	1					
ANR	7232899	AssignmentExpression	alpha = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	2		=			
ANR	7232900	Identifier	alpha		7232379	0					
ANR	7232901	MultiplicativeExpression	( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7232902	AdditiveExpression	depth_max * y * 2 + size_max		7232379	0		+			
ANR	7232903	MultiplicativeExpression	depth_max * y * 2		7232379	0		*			
ANR	7232904	Identifier	depth_max		7232379	0					
ANR	7232905	MultiplicativeExpression	y * 2		7232379	1		*			
ANR	7232906	Identifier	y		7232379	0					
ANR	7232907	PrimaryExpression	2		7232379	1					
ANR	7232908	Identifier	size_max		7232379	1					
ANR	7232909	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7232910	PrimaryExpression	2		7232379	0					
ANR	7232911	Identifier	size_max		7232379	1					
ANR	7232912	IdentifierDeclStatement	png_uint_32 x ;	559:12:18148:18161	7232379	1	True				
ANR	7232913	IdentifierDecl	x		7232379	0					
ANR	7232914	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232915	Identifier	x		7232379	1					
ANR	7232916	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	2					
ANR	7232917	ForInit	x = 0 ;	561:17:18181:18184	7232379	0	True				
ANR	7232918	AssignmentExpression	x = 0		7232379	0		=			
ANR	7232919	Identifier	x		7232379	0					
ANR	7232920	PrimaryExpression	0		7232379	1					
ANR	7232921	Condition	x <= size_max	561:22:18186:18196	7232379	1	True				
ANR	7232922	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7232923	Identifier	x		7232379	0					
ANR	7232924	Identifier	size_max		7232379	1					
ANR	7232925	UnaryExpression	++ x	561:35:18199:18201	7232379	2	True				
ANR	7232926	IncDec	++		7232379	0					
ANR	7232927	Identifier	x		7232379	1					
ANR	7232928	CompoundStatement		170:12:6127:6127	7232379	3					
ANR	7232929	ExpressionStatement	"set_value ( row , rowbytes , 2 * x , bit_depth , ( depth_max * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	563:15:18233:18377	7232379	0	True				
ANR	7232930	CallExpression	"set_value ( row , rowbytes , 2 * x , bit_depth , ( depth_max * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7232931	Callee	set_value		7232379	0					
ANR	7232932	Identifier	set_value		7232379	0					
ANR	7232933	ArgumentList	row		7232379	1					
ANR	7232934	Argument	row		7232379	0					
ANR	7232935	Identifier	row		7232379	0					
ANR	7232936	Argument	rowbytes		7232379	1					
ANR	7232937	Identifier	rowbytes		7232379	0					
ANR	7232938	Argument	2 * x		7232379	2					
ANR	7232939	MultiplicativeExpression	2 * x		7232379	0		*			
ANR	7232940	PrimaryExpression	2		7232379	0					
ANR	7232941	Identifier	x		7232379	1					
ANR	7232942	Argument	bit_depth		7232379	3					
ANR	7232943	Identifier	bit_depth		7232379	0					
ANR	7232944	Argument	( depth_max * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7232945	MultiplicativeExpression	( depth_max * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		/			
ANR	7232946	AdditiveExpression	depth_max * x * 2 + size_max		7232379	0		+			
ANR	7232947	MultiplicativeExpression	depth_max * x * 2		7232379	0		*			
ANR	7232948	Identifier	depth_max		7232379	0					
ANR	7232949	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7232950	Identifier	x		7232379	0					
ANR	7232951	PrimaryExpression	2		7232379	1					
ANR	7232952	Identifier	size_max		7232379	1					
ANR	7232953	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7232954	PrimaryExpression	2		7232379	0					
ANR	7232955	Identifier	size_max		7232379	1					
ANR	7232956	Argument	gamma_table		7232379	5					
ANR	7232957	Identifier	gamma_table		7232379	0					
ANR	7232958	Argument	conv		7232379	6					
ANR	7232959	Identifier	conv		7232379	0					
ANR	7232960	ExpressionStatement	"set_value ( row , rowbytes , 2 * x + 1 , bit_depth , alpha , gamma_table , conv )"	566:15:18394:18480	7232379	1	True				
ANR	7232961	CallExpression	"set_value ( row , rowbytes , 2 * x + 1 , bit_depth , alpha , gamma_table , conv )"		7232379	0					
ANR	7232962	Callee	set_value		7232379	0					
ANR	7232963	Identifier	set_value		7232379	0					
ANR	7232964	ArgumentList	row		7232379	1					
ANR	7232965	Argument	row		7232379	0					
ANR	7232966	Identifier	row		7232379	0					
ANR	7232967	Argument	rowbytes		7232379	1					
ANR	7232968	Identifier	rowbytes		7232379	0					
ANR	7232969	Argument	2 * x + 1		7232379	2					
ANR	7232970	AdditiveExpression	2 * x + 1		7232379	0		+			
ANR	7232971	MultiplicativeExpression	2 * x		7232379	0		*			
ANR	7232972	PrimaryExpression	2		7232379	0					
ANR	7232973	Identifier	x		7232379	1					
ANR	7232974	PrimaryExpression	1		7232379	1					
ANR	7232975	Argument	bit_depth		7232379	3					
ANR	7232976	Identifier	bit_depth		7232379	0					
ANR	7232977	Argument	alpha		7232379	4					
ANR	7232978	Identifier	alpha		7232379	0					
ANR	7232979	Argument	gamma_table		7232379	5					
ANR	7232980	Identifier	gamma_table		7232379	0					
ANR	7232981	Argument	conv		7232379	6					
ANR	7232982	Identifier	conv		7232379	0					
ANR	7232983	BreakStatement	break ;	570:9:18516:18521	7232379	5	True				
ANR	7232984	Label	case 3 :	575:6:18650:18656	7232379	6	True				
ANR	7232985	CompoundStatement		191:12:6972:6985	7232379	7					
ANR	7232986	IdentifierDeclStatement	png_uint_32 Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max ) ;	582:12:18984:19047	7232379	0	True				
ANR	7232987	IdentifierDecl	Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	0					
ANR	7232988	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7232989	Identifier	Y		7232379	1					
ANR	7232990	AssignmentExpression	Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	2		=			
ANR	7232991	Identifier	Y		7232379	0					
ANR	7232992	MultiplicativeExpression	( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7232993	AdditiveExpression	depth_max * y * 2 + size_max		7232379	0		+			
ANR	7232994	MultiplicativeExpression	depth_max * y * 2		7232379	0		*			
ANR	7232995	Identifier	depth_max		7232379	0					
ANR	7232996	MultiplicativeExpression	y * 2		7232379	1		*			
ANR	7232997	Identifier	y		7232379	0					
ANR	7232998	PrimaryExpression	2		7232379	1					
ANR	7232999	Identifier	size_max		7232379	1					
ANR	7233000	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233001	PrimaryExpression	2		7232379	0					
ANR	7233002	Identifier	size_max		7232379	1					
ANR	7233003	IdentifierDeclStatement	png_uint_32 x ;	583:12:19061:19074	7232379	1	True				
ANR	7233004	IdentifierDecl	x		7232379	0					
ANR	7233005	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233006	Identifier	x		7232379	1					
ANR	7233007	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	2					
ANR	7233008	ForInit	x = 0 ;	592:17:19372:19375	7232379	0	True				
ANR	7233009	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233010	Identifier	x		7232379	0					
ANR	7233011	PrimaryExpression	0		7232379	1					
ANR	7233012	Condition	x <= size_max	592:22:19377:19387	7232379	1	True				
ANR	7233013	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7233014	Identifier	x		7232379	0					
ANR	7233015	Identifier	size_max		7232379	1					
ANR	7233016	UnaryExpression	++ x	592:35:19390:19392	7232379	2	True				
ANR	7233017	IncDec	++		7232379	0					
ANR	7233018	Identifier	x		7232379	1					
ANR	7233019	CompoundStatement		201:12:7318:7318	7232379	3					
ANR	7233020	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 0 , bit_depth , Y , gamma_table , conv )"	594:15:19424:19519	7232379	0	True				
ANR	7233021	CallExpression	"set_value ( row , rowbytes , 3 * x + 0 , bit_depth , Y , gamma_table , conv )"		7232379	0					
ANR	7233022	Callee	set_value		7232379	0					
ANR	7233023	Identifier	set_value		7232379	0					
ANR	7233024	ArgumentList	row		7232379	1					
ANR	7233025	Argument	row		7232379	0					
ANR	7233026	Identifier	row		7232379	0					
ANR	7233027	Argument	rowbytes		7232379	1					
ANR	7233028	Identifier	rowbytes		7232379	0					
ANR	7233029	Argument	3 * x + 0		7232379	2					
ANR	7233030	AdditiveExpression	3 * x + 0		7232379	0		+			
ANR	7233031	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233032	PrimaryExpression	3		7232379	0					
ANR	7233033	Identifier	x		7232379	1					
ANR	7233034	PrimaryExpression	0		7232379	1					
ANR	7233035	Argument	bit_depth		7232379	3					
ANR	7233036	Identifier	bit_depth		7232379	0					
ANR	7233037	Argument	Y		7232379	4					
ANR	7233038	Identifier	Y		7232379	0					
ANR	7233039	Argument	gamma_table		7232379	5					
ANR	7233040	Identifier	gamma_table		7232379	0					
ANR	7233041	Argument	conv		7232379	6					
ANR	7233042	Identifier	conv		7232379	0					
ANR	7233043	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 1 , bit_depth , ( depth_max * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	596:15:19536:19694	7232379	1	True				
ANR	7233044	CallExpression	"set_value ( row , rowbytes , 3 * x + 1 , bit_depth , ( depth_max * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233045	Callee	set_value		7232379	0					
ANR	7233046	Identifier	set_value		7232379	0					
ANR	7233047	ArgumentList	row		7232379	1					
ANR	7233048	Argument	row		7232379	0					
ANR	7233049	Identifier	row		7232379	0					
ANR	7233050	Argument	rowbytes		7232379	1					
ANR	7233051	Identifier	rowbytes		7232379	0					
ANR	7233052	Argument	3 * x + 1		7232379	2					
ANR	7233053	AdditiveExpression	3 * x + 1		7232379	0		+			
ANR	7233054	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233055	PrimaryExpression	3		7232379	0					
ANR	7233056	Identifier	x		7232379	1					
ANR	7233057	PrimaryExpression	1		7232379	1					
ANR	7233058	Argument	bit_depth		7232379	3					
ANR	7233059	Identifier	bit_depth		7232379	0					
ANR	7233060	Argument	( depth_max * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233061	MultiplicativeExpression	( depth_max * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		/			
ANR	7233062	AdditiveExpression	depth_max * x * 2 + size_max		7232379	0		+			
ANR	7233063	MultiplicativeExpression	depth_max * x * 2		7232379	0		*			
ANR	7233064	Identifier	depth_max		7232379	0					
ANR	7233065	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233066	Identifier	x		7232379	0					
ANR	7233067	PrimaryExpression	2		7232379	1					
ANR	7233068	Identifier	size_max		7232379	1					
ANR	7233069	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233070	PrimaryExpression	2		7232379	0					
ANR	7233071	Identifier	size_max		7232379	1					
ANR	7233072	Argument	gamma_table		7232379	5					
ANR	7233073	Identifier	gamma_table		7232379	0					
ANR	7233074	Argument	conv		7232379	6					
ANR	7233075	Identifier	conv		7232379	0					
ANR	7233076	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 2 , bit_depth , ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	599:15:19711:19860	7232379	2	True				
ANR	7233077	CallExpression	"set_value ( row , rowbytes , 3 * x + 2 , bit_depth , ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233078	Callee	set_value		7232379	0					
ANR	7233079	Identifier	set_value		7232379	0					
ANR	7233080	ArgumentList	row		7232379	1					
ANR	7233081	Argument	row		7232379	0					
ANR	7233082	Identifier	row		7232379	0					
ANR	7233083	Argument	rowbytes		7232379	1					
ANR	7233084	Identifier	rowbytes		7232379	0					
ANR	7233085	Argument	3 * x + 2		7232379	2					
ANR	7233086	AdditiveExpression	3 * x + 2		7232379	0		+			
ANR	7233087	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233088	PrimaryExpression	3		7232379	0					
ANR	7233089	Identifier	x		7232379	1					
ANR	7233090	PrimaryExpression	2		7232379	1					
ANR	7233091	Argument	bit_depth		7232379	3					
ANR	7233092	Identifier	bit_depth		7232379	0					
ANR	7233093	Argument	( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233094	MultiplicativeExpression	( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		/			
ANR	7233095	AdditiveExpression	Y * x * 2 + size_max		7232379	0		+			
ANR	7233096	MultiplicativeExpression	Y * x * 2		7232379	0		*			
ANR	7233097	Identifier	Y		7232379	0					
ANR	7233098	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233099	Identifier	x		7232379	0					
ANR	7233100	PrimaryExpression	2		7232379	1					
ANR	7233101	Identifier	size_max		7232379	1					
ANR	7233102	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233103	PrimaryExpression	2		7232379	0					
ANR	7233104	Identifier	size_max		7232379	1					
ANR	7233105	Argument	gamma_table		7232379	5					
ANR	7233106	Identifier	gamma_table		7232379	0					
ANR	7233107	Argument	conv		7232379	6					
ANR	7233108	Identifier	conv		7232379	0					
ANR	7233109	BreakStatement	break ;	604:9:19896:19901	7232379	8	True				
ANR	7233110	Label	case 4 :	609:6:20035:20041	7232379	9	True				
ANR	7233111	CompoundStatement		226:12:8407:8420	7232379	10					
ANR	7233112	IdentifierDeclStatement	png_uint_32 Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max ) ;	617:12:20419:20482	7232379	0	True				
ANR	7233113	IdentifierDecl	Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	0					
ANR	7233114	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233115	Identifier	Y		7232379	1					
ANR	7233116	AssignmentExpression	Y = ( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	2		=			
ANR	7233117	Identifier	Y		7232379	0					
ANR	7233118	MultiplicativeExpression	( depth_max * y * 2 + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7233119	AdditiveExpression	depth_max * y * 2 + size_max		7232379	0		+			
ANR	7233120	MultiplicativeExpression	depth_max * y * 2		7232379	0		*			
ANR	7233121	Identifier	depth_max		7232379	0					
ANR	7233122	MultiplicativeExpression	y * 2		7232379	1		*			
ANR	7233123	Identifier	y		7232379	0					
ANR	7233124	PrimaryExpression	2		7232379	1					
ANR	7233125	Identifier	size_max		7232379	1					
ANR	7233126	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233127	PrimaryExpression	2		7232379	0					
ANR	7233128	Identifier	size_max		7232379	1					
ANR	7233129	IdentifierDeclStatement	png_uint_32 x ;	618:12:20496:20509	7232379	1	True				
ANR	7233130	IdentifierDecl	x		7232379	0					
ANR	7233131	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233132	Identifier	x		7232379	1					
ANR	7233133	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	2					
ANR	7233134	ForInit	x = 0 ;	628:17:20870:20873	7232379	0	True				
ANR	7233135	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233136	Identifier	x		7232379	0					
ANR	7233137	PrimaryExpression	0		7232379	1					
ANR	7233138	Condition	x <= size_max	628:22:20875:20885	7232379	1	True				
ANR	7233139	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7233140	Identifier	x		7232379	0					
ANR	7233141	Identifier	size_max		7232379	1					
ANR	7233142	UnaryExpression	++ x	628:35:20888:20890	7232379	2	True				
ANR	7233143	IncDec	++		7232379	0					
ANR	7233144	Identifier	x		7232379	1					
ANR	7233145	CompoundStatement		237:12:8816:8816	7232379	3					
ANR	7233146	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 0 , bit_depth , ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	630:15:20922:21082	7232379	0	True				
ANR	7233147	CallExpression	"set_value ( row , rowbytes , 4 * x + 0 , bit_depth , ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233148	Callee	set_value		7232379	0					
ANR	7233149	Identifier	set_value		7232379	0					
ANR	7233150	ArgumentList	row		7232379	1					
ANR	7233151	Argument	row		7232379	0					
ANR	7233152	Identifier	row		7232379	0					
ANR	7233153	Argument	rowbytes		7232379	1					
ANR	7233154	Identifier	rowbytes		7232379	0					
ANR	7233155	Argument	4 * x + 0		7232379	2					
ANR	7233156	AdditiveExpression	4 * x + 0		7232379	0		+			
ANR	7233157	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233158	PrimaryExpression	4		7232379	0					
ANR	7233159	Identifier	x		7232379	1					
ANR	7233160	PrimaryExpression	0		7232379	1					
ANR	7233161	Argument	bit_depth		7232379	3					
ANR	7233162	Identifier	bit_depth		7232379	0					
ANR	7233163	Argument	( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233164	MultiplicativeExpression	( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		/			
ANR	7233165	AdditiveExpression	( depth_max - Y ) * x * 2 + size_max		7232379	0		+			
ANR	7233166	MultiplicativeExpression	( depth_max - Y ) * x * 2		7232379	0		*			
ANR	7233167	AdditiveExpression	depth_max - Y		7232379	0		-			
ANR	7233168	Identifier	depth_max		7232379	0					
ANR	7233169	Identifier	Y		7232379	1					
ANR	7233170	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233171	Identifier	x		7232379	0					
ANR	7233172	PrimaryExpression	2		7232379	1					
ANR	7233173	Identifier	size_max		7232379	1					
ANR	7233174	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233175	PrimaryExpression	2		7232379	0					
ANR	7233176	Identifier	size_max		7232379	1					
ANR	7233177	Argument	gamma_table		7232379	5					
ANR	7233178	Identifier	gamma_table		7232379	0					
ANR	7233179	Argument	conv		7232379	6					
ANR	7233180	Identifier	conv		7232379	0					
ANR	7233181	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 1 , bit_depth , ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	633:15:21099:21249	7232379	1	True				
ANR	7233182	CallExpression	"set_value ( row , rowbytes , 4 * x + 1 , bit_depth , ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233183	Callee	set_value		7232379	0					
ANR	7233184	Identifier	set_value		7232379	0					
ANR	7233185	ArgumentList	row		7232379	1					
ANR	7233186	Argument	row		7232379	0					
ANR	7233187	Identifier	row		7232379	0					
ANR	7233188	Argument	rowbytes		7232379	1					
ANR	7233189	Identifier	rowbytes		7232379	0					
ANR	7233190	Argument	4 * x + 1		7232379	2					
ANR	7233191	AdditiveExpression	4 * x + 1		7232379	0		+			
ANR	7233192	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233193	PrimaryExpression	4		7232379	0					
ANR	7233194	Identifier	x		7232379	1					
ANR	7233195	PrimaryExpression	1		7232379	1					
ANR	7233196	Argument	bit_depth		7232379	3					
ANR	7233197	Identifier	bit_depth		7232379	0					
ANR	7233198	Argument	( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233199	MultiplicativeExpression	( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		/			
ANR	7233200	AdditiveExpression	Y * x * 2 + size_max		7232379	0		+			
ANR	7233201	MultiplicativeExpression	Y * x * 2		7232379	0		*			
ANR	7233202	Identifier	Y		7232379	0					
ANR	7233203	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233204	Identifier	x		7232379	0					
ANR	7233205	PrimaryExpression	2		7232379	1					
ANR	7233206	Identifier	size_max		7232379	1					
ANR	7233207	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233208	PrimaryExpression	2		7232379	0					
ANR	7233209	Identifier	size_max		7232379	1					
ANR	7233210	Argument	gamma_table		7232379	5					
ANR	7233211	Identifier	gamma_table		7232379	0					
ANR	7233212	Argument	conv		7232379	6					
ANR	7233213	Identifier	conv		7232379	0					
ANR	7233214	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 2 , bit_depth , Y - ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	636:15:21266:21419	7232379	2	True				
ANR	7233215	CallExpression	"set_value ( row , rowbytes , 4 * x + 2 , bit_depth , Y - ( Y * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233216	Callee	set_value		7232379	0					
ANR	7233217	Identifier	set_value		7232379	0					
ANR	7233218	ArgumentList	row		7232379	1					
ANR	7233219	Argument	row		7232379	0					
ANR	7233220	Identifier	row		7232379	0					
ANR	7233221	Argument	rowbytes		7232379	1					
ANR	7233222	Identifier	rowbytes		7232379	0					
ANR	7233223	Argument	4 * x + 2		7232379	2					
ANR	7233224	AdditiveExpression	4 * x + 2		7232379	0		+			
ANR	7233225	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233226	PrimaryExpression	4		7232379	0					
ANR	7233227	Identifier	x		7232379	1					
ANR	7233228	PrimaryExpression	2		7232379	1					
ANR	7233229	Argument	bit_depth		7232379	3					
ANR	7233230	Identifier	bit_depth		7232379	0					
ANR	7233231	Argument	Y - ( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233232	AdditiveExpression	Y - ( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		-			
ANR	7233233	Identifier	Y		7232379	0					
ANR	7233234	MultiplicativeExpression	( Y * x * 2 + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7233235	AdditiveExpression	Y * x * 2 + size_max		7232379	0		+			
ANR	7233236	MultiplicativeExpression	Y * x * 2		7232379	0		*			
ANR	7233237	Identifier	Y		7232379	0					
ANR	7233238	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233239	Identifier	x		7232379	0					
ANR	7233240	PrimaryExpression	2		7232379	1					
ANR	7233241	Identifier	size_max		7232379	1					
ANR	7233242	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233243	PrimaryExpression	2		7232379	0					
ANR	7233244	Identifier	size_max		7232379	1					
ANR	7233245	Argument	gamma_table		7232379	5					
ANR	7233246	Identifier	gamma_table		7232379	0					
ANR	7233247	Argument	conv		7232379	6					
ANR	7233248	Identifier	conv		7232379	0					
ANR	7233249	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 3 , bit_depth , Y + ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"	639:15:21436:21602	7232379	3	True				
ANR	7233250	CallExpression	"set_value ( row , rowbytes , 4 * x + 3 , bit_depth , Y + ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max ) , gamma_table , conv )"		7232379	0					
ANR	7233251	Callee	set_value		7232379	0					
ANR	7233252	Identifier	set_value		7232379	0					
ANR	7233253	ArgumentList	row		7232379	1					
ANR	7233254	Argument	row		7232379	0					
ANR	7233255	Identifier	row		7232379	0					
ANR	7233256	Argument	rowbytes		7232379	1					
ANR	7233257	Identifier	rowbytes		7232379	0					
ANR	7233258	Argument	4 * x + 3		7232379	2					
ANR	7233259	AdditiveExpression	4 * x + 3		7232379	0		+			
ANR	7233260	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233261	PrimaryExpression	4		7232379	0					
ANR	7233262	Identifier	x		7232379	1					
ANR	7233263	PrimaryExpression	3		7232379	1					
ANR	7233264	Argument	bit_depth		7232379	3					
ANR	7233265	Identifier	bit_depth		7232379	0					
ANR	7233266	Argument	Y + ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max )		7232379	4					
ANR	7233267	AdditiveExpression	Y + ( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max )		7232379	0		+			
ANR	7233268	Identifier	Y		7232379	0					
ANR	7233269	MultiplicativeExpression	( ( depth_max - Y ) * x * 2 + size_max ) / ( 2 * size_max )		7232379	1		/			
ANR	7233270	AdditiveExpression	( depth_max - Y ) * x * 2 + size_max		7232379	0		+			
ANR	7233271	MultiplicativeExpression	( depth_max - Y ) * x * 2		7232379	0		*			
ANR	7233272	AdditiveExpression	depth_max - Y		7232379	0		-			
ANR	7233273	Identifier	depth_max		7232379	0					
ANR	7233274	Identifier	Y		7232379	1					
ANR	7233275	MultiplicativeExpression	x * 2		7232379	1		*			
ANR	7233276	Identifier	x		7232379	0					
ANR	7233277	PrimaryExpression	2		7232379	1					
ANR	7233278	Identifier	size_max		7232379	1					
ANR	7233279	MultiplicativeExpression	2 * size_max		7232379	1		*			
ANR	7233280	PrimaryExpression	2		7232379	0					
ANR	7233281	Identifier	size_max		7232379	1					
ANR	7233282	Argument	gamma_table		7232379	5					
ANR	7233283	Identifier	gamma_table		7232379	0					
ANR	7233284	Argument	conv		7232379	6					
ANR	7233285	Identifier	conv		7232379	0					
ANR	7233286	BreakStatement	break ;	644:9:21638:21643	7232379	11	True				
ANR	7233287	Label	default :	646:6:21652:21659	7232379	12	True				
ANR	7233288	Identifier	default		7232379	0					
ANR	7233289	ExpressionStatement	"fprintf ( stderr , ""makepng: internal bad channel count\\n"" )"	647:9:21670:21726	7232379	13	True				
ANR	7233290	CallExpression	"fprintf ( stderr , ""makepng: internal bad channel count\\n"" )"		7232379	0					
ANR	7233291	Callee	fprintf		7232379	0					
ANR	7233292	Identifier	fprintf		7232379	0					
ANR	7233293	ArgumentList	stderr		7232379	1					
ANR	7233294	Argument	stderr		7232379	0					
ANR	7233295	Identifier	stderr		7232379	0					
ANR	7233296	Argument	"""makepng: internal bad channel count\\n"""		7232379	1					
ANR	7233297	PrimaryExpression	"""makepng: internal bad channel count\\n"""		7232379	0					
ANR	7233298	ExpressionStatement	exit ( 2 )	648:9:21737:21744	7232379	14	True				
ANR	7233299	CallExpression	exit ( 2 )		7232379	0					
ANR	7233300	Callee	exit		7232379	0					
ANR	7233301	Identifier	exit		7232379	0					
ANR	7233302	ArgumentList	2		7232379	1					
ANR	7233303	Argument	2		7232379	0					
ANR	7233304	PrimaryExpression	2		7232379	0					
ANR	7233305	ElseStatement	else		7232379	0					
ANR	7233306	IfStatement	if ( color_type & PNG_COLOR_MASK_PALETTE )		7232379	0					
ANR	7233307	Condition	color_type & PNG_COLOR_MASK_PALETTE	651:12:21764:21798	7232379	0	True				
ANR	7233308	BitAndExpression	color_type & PNG_COLOR_MASK_PALETTE		7232379	0		&			
ANR	7233309	Identifier	color_type		7232379	0					
ANR	7233310	Identifier	PNG_COLOR_MASK_PALETTE		7232379	1					
ANR	7233311	CompoundStatement		260:3:9715:9715	7232379	1					
ANR	7233312	ExpressionStatement	"memset ( row , 0 , rowbytes )"	656:6:21918:21942	7232379	0	True				
ANR	7233313	CallExpression	"memset ( row , 0 , rowbytes )"		7232379	0					
ANR	7233314	Callee	memset		7232379	0					
ANR	7233315	Identifier	memset		7232379	0					
ANR	7233316	ArgumentList	row		7232379	1					
ANR	7233317	Argument	row		7232379	0					
ANR	7233318	Identifier	row		7232379	0					
ANR	7233319	Argument	0		7232379	1					
ANR	7233320	PrimaryExpression	0		7232379	0					
ANR	7233321	Argument	rowbytes		7232379	2					
ANR	7233322	Identifier	rowbytes		7232379	0					
ANR	7233323	ElseStatement	else		7232379	0					
ANR	7233324	IfStatement	if ( colors [ 0 ] == channels_of_type ( color_type ) )		7232379	0					
ANR	7233325	Condition	colors [ 0 ] == channels_of_type ( color_type )	659:12:21962:22002	7232379	0	True				
ANR	7233326	EqualityExpression	colors [ 0 ] == channels_of_type ( color_type )		7232379	0		==			
ANR	7233327	ArrayIndexing	colors [ 0 ]		7232379	0					
ANR	7233328	Identifier	colors		7232379	0					
ANR	7233329	PrimaryExpression	0		7232379	1					
ANR	7233330	CallExpression	channels_of_type ( color_type )		7232379	1					
ANR	7233331	Callee	channels_of_type		7232379	0					
ANR	7233332	Identifier	channels_of_type		7232379	0					
ANR	7233333	ArgumentList	color_type		7232379	1					
ANR	7233334	Argument	color_type		7232379	0					
ANR	7233335	Identifier	color_type		7232379	0					
ANR	7233336	SwitchStatement	switch ( channels_of_type ( color_type ) )		7232379	1					
ANR	7233337	Condition	channels_of_type ( color_type )	660:14:22019:22046	7232379	0	True				
ANR	7233338	CallExpression	channels_of_type ( color_type )		7232379	0					
ANR	7233339	Callee	channels_of_type		7232379	0					
ANR	7233340	Identifier	channels_of_type		7232379	0					
ANR	7233341	ArgumentList	color_type		7232379	1					
ANR	7233342	Argument	color_type		7232379	0					
ANR	7233343	Identifier	color_type		7232379	0					
ANR	7233344	CompoundStatement		269:6:9966:9966	7232379	1					
ANR	7233345	Label	case 1 :	662:9:22066:22072	7232379	0	True				
ANR	7233346	CompoundStatement		273:15:10065:10078	7232379	1					
ANR	7233347	IdentifierDeclStatement	const png_uint_32 luma = colors [ 1 ] ;	664:15:22103:22137	7232379	0	True				
ANR	7233348	IdentifierDecl	luma = colors [ 1 ]		7232379	0					
ANR	7233349	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233350	Identifier	luma		7232379	1					
ANR	7233351	AssignmentExpression	luma = colors [ 1 ]		7232379	2		=			
ANR	7233352	Identifier	luma		7232379	0					
ANR	7233353	ArrayIndexing	colors [ 1 ]		7232379	1					
ANR	7233354	Identifier	colors		7232379	0					
ANR	7233355	PrimaryExpression	1		7232379	1					
ANR	7233356	IdentifierDeclStatement	png_uint_32 x ;	665:15:22154:22167	7232379	1	True				
ANR	7233357	IdentifierDecl	x		7232379	0					
ANR	7233358	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233359	Identifier	x		7232379	1					
ANR	7233360	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	2					
ANR	7233361	ForInit	x = 0 ;	667:20:22190:22193	7232379	0	True				
ANR	7233362	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233363	Identifier	x		7232379	0					
ANR	7233364	PrimaryExpression	0		7232379	1					
ANR	7233365	Condition	x <= size_max	667:25:22195:22205	7232379	1	True				
ANR	7233366	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7233367	Identifier	x		7232379	0					
ANR	7233368	Identifier	size_max		7232379	1					
ANR	7233369	UnaryExpression	++ x	667:38:22208:22210	7232379	2	True				
ANR	7233370	IncDec	++		7232379	0					
ANR	7233371	Identifier	x		7232379	1					
ANR	7233372	ExpressionStatement	"set_value ( row , rowbytes , x , bit_depth , luma , gamma_table , conv )"	668:18:22231:22315	7232379	3	True				
ANR	7233373	CallExpression	"set_value ( row , rowbytes , x , bit_depth , luma , gamma_table , conv )"		7232379	0					
ANR	7233374	Callee	set_value		7232379	0					
ANR	7233375	Identifier	set_value		7232379	0					
ANR	7233376	ArgumentList	row		7232379	1					
ANR	7233377	Argument	row		7232379	0					
ANR	7233378	Identifier	row		7232379	0					
ANR	7233379	Argument	rowbytes		7232379	1					
ANR	7233380	Identifier	rowbytes		7232379	0					
ANR	7233381	Argument	x		7232379	2					
ANR	7233382	Identifier	x		7232379	0					
ANR	7233383	Argument	bit_depth		7232379	3					
ANR	7233384	Identifier	bit_depth		7232379	0					
ANR	7233385	Argument	luma		7232379	4					
ANR	7233386	Identifier	luma		7232379	0					
ANR	7233387	Argument	gamma_table		7232379	5					
ANR	7233388	Identifier	gamma_table		7232379	0					
ANR	7233389	Argument	conv		7232379	6					
ANR	7233390	Identifier	conv		7232379	0					
ANR	7233391	BreakStatement	break ;	671:12:22343:22348	7232379	2	True				
ANR	7233392	Label	case 2 :	673:9:22360:22366	7232379	3	True				
ANR	7233393	CompoundStatement		285:15:10411:10424	7232379	4					
ANR	7233394	IdentifierDeclStatement	const png_uint_32 luma = colors [ 1 ] ;	675:15:22397:22431	7232379	0	True				
ANR	7233395	IdentifierDecl	luma = colors [ 1 ]		7232379	0					
ANR	7233396	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233397	Identifier	luma		7232379	1					
ANR	7233398	AssignmentExpression	luma = colors [ 1 ]		7232379	2		=			
ANR	7233399	Identifier	luma		7232379	0					
ANR	7233400	ArrayIndexing	colors [ 1 ]		7232379	1					
ANR	7233401	Identifier	colors		7232379	0					
ANR	7233402	PrimaryExpression	1		7232379	1					
ANR	7233403	IdentifierDeclStatement	const png_uint_32 alpha = colors [ 2 ] ;	676:15:22448:22483	7232379	1	True				
ANR	7233404	IdentifierDecl	alpha = colors [ 2 ]		7232379	0					
ANR	7233405	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233406	Identifier	alpha		7232379	1					
ANR	7233407	AssignmentExpression	alpha = colors [ 2 ]		7232379	2		=			
ANR	7233408	Identifier	alpha		7232379	0					
ANR	7233409	ArrayIndexing	colors [ 2 ]		7232379	1					
ANR	7233410	Identifier	colors		7232379	0					
ANR	7233411	PrimaryExpression	2		7232379	1					
ANR	7233412	IdentifierDeclStatement	png_uint_32 x ;	677:15:22500:22513	7232379	2	True				
ANR	7233413	IdentifierDecl	x		7232379	0					
ANR	7233414	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233415	Identifier	x		7232379	1					
ANR	7233416	ForStatement	for ( x = 0 ; x < size_max ; ++ x )		7232379	3					
ANR	7233417	ForInit	x = 0 ;	679:20:22536:22539	7232379	0	True				
ANR	7233418	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233419	Identifier	x		7232379	0					
ANR	7233420	PrimaryExpression	0		7232379	1					
ANR	7233421	Condition	x < size_max	679:25:22541:22550	7232379	1	True				
ANR	7233422	RelationalExpression	x < size_max		7232379	0		<			
ANR	7233423	Identifier	x		7232379	0					
ANR	7233424	Identifier	size_max		7232379	1					
ANR	7233425	UnaryExpression	++ x	679:37:22553:22555	7232379	2	True				
ANR	7233426	IncDec	++		7232379	0					
ANR	7233427	Identifier	x		7232379	1					
ANR	7233428	CompoundStatement		288:15:10484:10484	7232379	3					
ANR	7233429	ExpressionStatement	"set_value ( row , rowbytes , 2 * x , bit_depth , luma , gamma_table , conv )"	681:18:22593:22679	7232379	0	True				
ANR	7233430	CallExpression	"set_value ( row , rowbytes , 2 * x , bit_depth , luma , gamma_table , conv )"		7232379	0					
ANR	7233431	Callee	set_value		7232379	0					
ANR	7233432	Identifier	set_value		7232379	0					
ANR	7233433	ArgumentList	row		7232379	1					
ANR	7233434	Argument	row		7232379	0					
ANR	7233435	Identifier	row		7232379	0					
ANR	7233436	Argument	rowbytes		7232379	1					
ANR	7233437	Identifier	rowbytes		7232379	0					
ANR	7233438	Argument	2 * x		7232379	2					
ANR	7233439	MultiplicativeExpression	2 * x		7232379	0		*			
ANR	7233440	PrimaryExpression	2		7232379	0					
ANR	7233441	Identifier	x		7232379	1					
ANR	7233442	Argument	bit_depth		7232379	3					
ANR	7233443	Identifier	bit_depth		7232379	0					
ANR	7233444	Argument	luma		7232379	4					
ANR	7233445	Identifier	luma		7232379	0					
ANR	7233446	Argument	gamma_table		7232379	5					
ANR	7233447	Identifier	gamma_table		7232379	0					
ANR	7233448	Argument	conv		7232379	6					
ANR	7233449	Identifier	conv		7232379	0					
ANR	7233450	ExpressionStatement	"set_value ( row , rowbytes , 2 * x + 1 , bit_depth , alpha , gamma_table , conv )"	683:18:22699:22788	7232379	1	True				
ANR	7233451	CallExpression	"set_value ( row , rowbytes , 2 * x + 1 , bit_depth , alpha , gamma_table , conv )"		7232379	0					
ANR	7233452	Callee	set_value		7232379	0					
ANR	7233453	Identifier	set_value		7232379	0					
ANR	7233454	ArgumentList	row		7232379	1					
ANR	7233455	Argument	row		7232379	0					
ANR	7233456	Identifier	row		7232379	0					
ANR	7233457	Argument	rowbytes		7232379	1					
ANR	7233458	Identifier	rowbytes		7232379	0					
ANR	7233459	Argument	2 * x + 1		7232379	2					
ANR	7233460	AdditiveExpression	2 * x + 1		7232379	0		+			
ANR	7233461	MultiplicativeExpression	2 * x		7232379	0		*			
ANR	7233462	PrimaryExpression	2		7232379	0					
ANR	7233463	Identifier	x		7232379	1					
ANR	7233464	PrimaryExpression	1		7232379	1					
ANR	7233465	Argument	bit_depth		7232379	3					
ANR	7233466	Identifier	bit_depth		7232379	0					
ANR	7233467	Argument	alpha		7232379	4					
ANR	7233468	Identifier	alpha		7232379	0					
ANR	7233469	Argument	gamma_table		7232379	5					
ANR	7233470	Identifier	gamma_table		7232379	0					
ANR	7233471	Argument	conv		7232379	6					
ANR	7233472	Identifier	conv		7232379	0					
ANR	7233473	BreakStatement	break ;	687:12:22833:22838	7232379	5	True				
ANR	7233474	Label	case 3 :	689:9:22850:22856	7232379	6	True				
ANR	7233475	CompoundStatement		302:15:10951:10964	7232379	7					
ANR	7233476	IdentifierDeclStatement	const png_uint_32 red = colors [ 1 ] ;	691:15:22887:22920	7232379	0	True				
ANR	7233477	IdentifierDecl	red = colors [ 1 ]		7232379	0					
ANR	7233478	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233479	Identifier	red		7232379	1					
ANR	7233480	AssignmentExpression	red = colors [ 1 ]		7232379	2		=			
ANR	7233481	Identifier	red		7232379	0					
ANR	7233482	ArrayIndexing	colors [ 1 ]		7232379	1					
ANR	7233483	Identifier	colors		7232379	0					
ANR	7233484	PrimaryExpression	1		7232379	1					
ANR	7233485	IdentifierDeclStatement	const png_uint_32 green = colors [ 2 ] ;	692:15:22937:22972	7232379	1	True				
ANR	7233486	IdentifierDecl	green = colors [ 2 ]		7232379	0					
ANR	7233487	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233488	Identifier	green		7232379	1					
ANR	7233489	AssignmentExpression	green = colors [ 2 ]		7232379	2		=			
ANR	7233490	Identifier	green		7232379	0					
ANR	7233491	ArrayIndexing	colors [ 2 ]		7232379	1					
ANR	7233492	Identifier	colors		7232379	0					
ANR	7233493	PrimaryExpression	2		7232379	1					
ANR	7233494	IdentifierDeclStatement	const png_uint_32 blue = colors [ 3 ] ;	693:15:22989:23023	7232379	2	True				
ANR	7233495	IdentifierDecl	blue = colors [ 3 ]		7232379	0					
ANR	7233496	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233497	Identifier	blue		7232379	1					
ANR	7233498	AssignmentExpression	blue = colors [ 3 ]		7232379	2		=			
ANR	7233499	Identifier	blue		7232379	0					
ANR	7233500	ArrayIndexing	colors [ 3 ]		7232379	1					
ANR	7233501	Identifier	colors		7232379	0					
ANR	7233502	PrimaryExpression	3		7232379	1					
ANR	7233503	IdentifierDeclStatement	png_uint_32 x ;	694:15:23040:23053	7232379	3	True				
ANR	7233504	IdentifierDecl	x		7232379	0					
ANR	7233505	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233506	Identifier	x		7232379	1					
ANR	7233507	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	4					
ANR	7233508	ForInit	x = 0 ;	696:20:23076:23079	7232379	0	True				
ANR	7233509	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233510	Identifier	x		7232379	0					
ANR	7233511	PrimaryExpression	0		7232379	1					
ANR	7233512	Condition	x <= size_max	696:25:23081:23091	7232379	1	True				
ANR	7233513	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7233514	Identifier	x		7232379	0					
ANR	7233515	Identifier	size_max		7232379	1					
ANR	7233516	UnaryExpression	++ x	696:38:23094:23096	7232379	2	True				
ANR	7233517	IncDec	++		7232379	0					
ANR	7233518	Identifier	x		7232379	1					
ANR	7233519	CompoundStatement		305:15:11025:11025	7232379	3					
ANR	7233520	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 0 , bit_depth , red , gamma_table , conv )"	698:18:23134:23221	7232379	0	True				
ANR	7233521	CallExpression	"set_value ( row , rowbytes , 3 * x + 0 , bit_depth , red , gamma_table , conv )"		7232379	0					
ANR	7233522	Callee	set_value		7232379	0					
ANR	7233523	Identifier	set_value		7232379	0					
ANR	7233524	ArgumentList	row		7232379	1					
ANR	7233525	Argument	row		7232379	0					
ANR	7233526	Identifier	row		7232379	0					
ANR	7233527	Argument	rowbytes		7232379	1					
ANR	7233528	Identifier	rowbytes		7232379	0					
ANR	7233529	Argument	3 * x + 0		7232379	2					
ANR	7233530	AdditiveExpression	3 * x + 0		7232379	0		+			
ANR	7233531	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233532	PrimaryExpression	3		7232379	0					
ANR	7233533	Identifier	x		7232379	1					
ANR	7233534	PrimaryExpression	0		7232379	1					
ANR	7233535	Argument	bit_depth		7232379	3					
ANR	7233536	Identifier	bit_depth		7232379	0					
ANR	7233537	Argument	red		7232379	4					
ANR	7233538	Identifier	red		7232379	0					
ANR	7233539	Argument	gamma_table		7232379	5					
ANR	7233540	Identifier	gamma_table		7232379	0					
ANR	7233541	Argument	conv		7232379	6					
ANR	7233542	Identifier	conv		7232379	0					
ANR	7233543	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 1 , bit_depth , green , gamma_table , conv )"	700:18:23241:23330	7232379	1	True				
ANR	7233544	CallExpression	"set_value ( row , rowbytes , 3 * x + 1 , bit_depth , green , gamma_table , conv )"		7232379	0					
ANR	7233545	Callee	set_value		7232379	0					
ANR	7233546	Identifier	set_value		7232379	0					
ANR	7233547	ArgumentList	row		7232379	1					
ANR	7233548	Argument	row		7232379	0					
ANR	7233549	Identifier	row		7232379	0					
ANR	7233550	Argument	rowbytes		7232379	1					
ANR	7233551	Identifier	rowbytes		7232379	0					
ANR	7233552	Argument	3 * x + 1		7232379	2					
ANR	7233553	AdditiveExpression	3 * x + 1		7232379	0		+			
ANR	7233554	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233555	PrimaryExpression	3		7232379	0					
ANR	7233556	Identifier	x		7232379	1					
ANR	7233557	PrimaryExpression	1		7232379	1					
ANR	7233558	Argument	bit_depth		7232379	3					
ANR	7233559	Identifier	bit_depth		7232379	0					
ANR	7233560	Argument	green		7232379	4					
ANR	7233561	Identifier	green		7232379	0					
ANR	7233562	Argument	gamma_table		7232379	5					
ANR	7233563	Identifier	gamma_table		7232379	0					
ANR	7233564	Argument	conv		7232379	6					
ANR	7233565	Identifier	conv		7232379	0					
ANR	7233566	ExpressionStatement	"set_value ( row , rowbytes , 3 * x + 2 , bit_depth , blue , gamma_table , conv )"	702:18:23350:23438	7232379	2	True				
ANR	7233567	CallExpression	"set_value ( row , rowbytes , 3 * x + 2 , bit_depth , blue , gamma_table , conv )"		7232379	0					
ANR	7233568	Callee	set_value		7232379	0					
ANR	7233569	Identifier	set_value		7232379	0					
ANR	7233570	ArgumentList	row		7232379	1					
ANR	7233571	Argument	row		7232379	0					
ANR	7233572	Identifier	row		7232379	0					
ANR	7233573	Argument	rowbytes		7232379	1					
ANR	7233574	Identifier	rowbytes		7232379	0					
ANR	7233575	Argument	3 * x + 2		7232379	2					
ANR	7233576	AdditiveExpression	3 * x + 2		7232379	0		+			
ANR	7233577	MultiplicativeExpression	3 * x		7232379	0		*			
ANR	7233578	PrimaryExpression	3		7232379	0					
ANR	7233579	Identifier	x		7232379	1					
ANR	7233580	PrimaryExpression	2		7232379	1					
ANR	7233581	Argument	bit_depth		7232379	3					
ANR	7233582	Identifier	bit_depth		7232379	0					
ANR	7233583	Argument	blue		7232379	4					
ANR	7233584	Identifier	blue		7232379	0					
ANR	7233585	Argument	gamma_table		7232379	5					
ANR	7233586	Identifier	gamma_table		7232379	0					
ANR	7233587	Argument	conv		7232379	6					
ANR	7233588	Identifier	conv		7232379	0					
ANR	7233589	BreakStatement	break ;	706:12:23483:23488	7232379	8	True				
ANR	7233590	Label	case 4 :	708:9:23500:23506	7232379	9	True				
ANR	7233591	CompoundStatement		322:15:11653:11666	7232379	10					
ANR	7233592	IdentifierDeclStatement	const png_uint_32 red = colors [ 1 ] ;	710:15:23537:23570	7232379	0	True				
ANR	7233593	IdentifierDecl	red = colors [ 1 ]		7232379	0					
ANR	7233594	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233595	Identifier	red		7232379	1					
ANR	7233596	AssignmentExpression	red = colors [ 1 ]		7232379	2		=			
ANR	7233597	Identifier	red		7232379	0					
ANR	7233598	ArrayIndexing	colors [ 1 ]		7232379	1					
ANR	7233599	Identifier	colors		7232379	0					
ANR	7233600	PrimaryExpression	1		7232379	1					
ANR	7233601	IdentifierDeclStatement	const png_uint_32 green = colors [ 2 ] ;	711:15:23587:23622	7232379	1	True				
ANR	7233602	IdentifierDecl	green = colors [ 2 ]		7232379	0					
ANR	7233603	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233604	Identifier	green		7232379	1					
ANR	7233605	AssignmentExpression	green = colors [ 2 ]		7232379	2		=			
ANR	7233606	Identifier	green		7232379	0					
ANR	7233607	ArrayIndexing	colors [ 2 ]		7232379	1					
ANR	7233608	Identifier	colors		7232379	0					
ANR	7233609	PrimaryExpression	2		7232379	1					
ANR	7233610	IdentifierDeclStatement	const png_uint_32 blue = colors [ 3 ] ;	712:15:23639:23673	7232379	2	True				
ANR	7233611	IdentifierDecl	blue = colors [ 3 ]		7232379	0					
ANR	7233612	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233613	Identifier	blue		7232379	1					
ANR	7233614	AssignmentExpression	blue = colors [ 3 ]		7232379	2		=			
ANR	7233615	Identifier	blue		7232379	0					
ANR	7233616	ArrayIndexing	colors [ 3 ]		7232379	1					
ANR	7233617	Identifier	colors		7232379	0					
ANR	7233618	PrimaryExpression	3		7232379	1					
ANR	7233619	IdentifierDeclStatement	const png_uint_32 alpha = colors [ 4 ] ;	713:15:23690:23725	7232379	3	True				
ANR	7233620	IdentifierDecl	alpha = colors [ 4 ]		7232379	0					
ANR	7233621	IdentifierDeclType	const png_uint_32		7232379	0					
ANR	7233622	Identifier	alpha		7232379	1					
ANR	7233623	AssignmentExpression	alpha = colors [ 4 ]		7232379	2		=			
ANR	7233624	Identifier	alpha		7232379	0					
ANR	7233625	ArrayIndexing	colors [ 4 ]		7232379	1					
ANR	7233626	Identifier	colors		7232379	0					
ANR	7233627	PrimaryExpression	4		7232379	1					
ANR	7233628	IdentifierDeclStatement	png_uint_32 x ;	714:15:23742:23755	7232379	4	True				
ANR	7233629	IdentifierDecl	x		7232379	0					
ANR	7233630	IdentifierDeclType	png_uint_32		7232379	0					
ANR	7233631	Identifier	x		7232379	1					
ANR	7233632	ForStatement	for ( x = 0 ; x <= size_max ; ++ x )		7232379	5					
ANR	7233633	ForInit	x = 0 ;	716:20:23778:23781	7232379	0	True				
ANR	7233634	AssignmentExpression	x = 0		7232379	0		=			
ANR	7233635	Identifier	x		7232379	0					
ANR	7233636	PrimaryExpression	0		7232379	1					
ANR	7233637	Condition	x <= size_max	716:25:23783:23793	7232379	1	True				
ANR	7233638	RelationalExpression	x <= size_max		7232379	0		<=			
ANR	7233639	Identifier	x		7232379	0					
ANR	7233640	Identifier	size_max		7232379	1					
ANR	7233641	UnaryExpression	++ x	716:38:23796:23798	7232379	2	True				
ANR	7233642	IncDec	++		7232379	0					
ANR	7233643	Identifier	x		7232379	1					
ANR	7233644	CompoundStatement		325:15:11727:11727	7232379	3					
ANR	7233645	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 0 , bit_depth , red , gamma_table , conv )"	718:18:23836:23923	7232379	0	True				
ANR	7233646	CallExpression	"set_value ( row , rowbytes , 4 * x + 0 , bit_depth , red , gamma_table , conv )"		7232379	0					
ANR	7233647	Callee	set_value		7232379	0					
ANR	7233648	Identifier	set_value		7232379	0					
ANR	7233649	ArgumentList	row		7232379	1					
ANR	7233650	Argument	row		7232379	0					
ANR	7233651	Identifier	row		7232379	0					
ANR	7233652	Argument	rowbytes		7232379	1					
ANR	7233653	Identifier	rowbytes		7232379	0					
ANR	7233654	Argument	4 * x + 0		7232379	2					
ANR	7233655	AdditiveExpression	4 * x + 0		7232379	0		+			
ANR	7233656	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233657	PrimaryExpression	4		7232379	0					
ANR	7233658	Identifier	x		7232379	1					
ANR	7233659	PrimaryExpression	0		7232379	1					
ANR	7233660	Argument	bit_depth		7232379	3					
ANR	7233661	Identifier	bit_depth		7232379	0					
ANR	7233662	Argument	red		7232379	4					
ANR	7233663	Identifier	red		7232379	0					
ANR	7233664	Argument	gamma_table		7232379	5					
ANR	7233665	Identifier	gamma_table		7232379	0					
ANR	7233666	Argument	conv		7232379	6					
ANR	7233667	Identifier	conv		7232379	0					
ANR	7233668	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 1 , bit_depth , green , gamma_table , conv )"	720:18:23943:24032	7232379	1	True				
ANR	7233669	CallExpression	"set_value ( row , rowbytes , 4 * x + 1 , bit_depth , green , gamma_table , conv )"		7232379	0					
ANR	7233670	Callee	set_value		7232379	0					
ANR	7233671	Identifier	set_value		7232379	0					
ANR	7233672	ArgumentList	row		7232379	1					
ANR	7233673	Argument	row		7232379	0					
ANR	7233674	Identifier	row		7232379	0					
ANR	7233675	Argument	rowbytes		7232379	1					
ANR	7233676	Identifier	rowbytes		7232379	0					
ANR	7233677	Argument	4 * x + 1		7232379	2					
ANR	7233678	AdditiveExpression	4 * x + 1		7232379	0		+			
ANR	7233679	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233680	PrimaryExpression	4		7232379	0					
ANR	7233681	Identifier	x		7232379	1					
ANR	7233682	PrimaryExpression	1		7232379	1					
ANR	7233683	Argument	bit_depth		7232379	3					
ANR	7233684	Identifier	bit_depth		7232379	0					
ANR	7233685	Argument	green		7232379	4					
ANR	7233686	Identifier	green		7232379	0					
ANR	7233687	Argument	gamma_table		7232379	5					
ANR	7233688	Identifier	gamma_table		7232379	0					
ANR	7233689	Argument	conv		7232379	6					
ANR	7233690	Identifier	conv		7232379	0					
ANR	7233691	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 2 , bit_depth , blue , gamma_table , conv )"	722:18:24052:24140	7232379	2	True				
ANR	7233692	CallExpression	"set_value ( row , rowbytes , 4 * x + 2 , bit_depth , blue , gamma_table , conv )"		7232379	0					
ANR	7233693	Callee	set_value		7232379	0					
ANR	7233694	Identifier	set_value		7232379	0					
ANR	7233695	ArgumentList	row		7232379	1					
ANR	7233696	Argument	row		7232379	0					
ANR	7233697	Identifier	row		7232379	0					
ANR	7233698	Argument	rowbytes		7232379	1					
ANR	7233699	Identifier	rowbytes		7232379	0					
ANR	7233700	Argument	4 * x + 2		7232379	2					
ANR	7233701	AdditiveExpression	4 * x + 2		7232379	0		+			
ANR	7233702	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233703	PrimaryExpression	4		7232379	0					
ANR	7233704	Identifier	x		7232379	1					
ANR	7233705	PrimaryExpression	2		7232379	1					
ANR	7233706	Argument	bit_depth		7232379	3					
ANR	7233707	Identifier	bit_depth		7232379	0					
ANR	7233708	Argument	blue		7232379	4					
ANR	7233709	Identifier	blue		7232379	0					
ANR	7233710	Argument	gamma_table		7232379	5					
ANR	7233711	Identifier	gamma_table		7232379	0					
ANR	7233712	Argument	conv		7232379	6					
ANR	7233713	Identifier	conv		7232379	0					
ANR	7233714	ExpressionStatement	"set_value ( row , rowbytes , 4 * x + 3 , bit_depth , alpha , gamma_table , conv )"	724:18:24160:24249	7232379	3	True				
ANR	7233715	CallExpression	"set_value ( row , rowbytes , 4 * x + 3 , bit_depth , alpha , gamma_table , conv )"		7232379	0					
ANR	7233716	Callee	set_value		7232379	0					
ANR	7233717	Identifier	set_value		7232379	0					
ANR	7233718	ArgumentList	row		7232379	1					
ANR	7233719	Argument	row		7232379	0					
ANR	7233720	Identifier	row		7232379	0					
ANR	7233721	Argument	rowbytes		7232379	1					
ANR	7233722	Identifier	rowbytes		7232379	0					
ANR	7233723	Argument	4 * x + 3		7232379	2					
ANR	7233724	AdditiveExpression	4 * x + 3		7232379	0		+			
ANR	7233725	MultiplicativeExpression	4 * x		7232379	0		*			
ANR	7233726	PrimaryExpression	4		7232379	0					
ANR	7233727	Identifier	x		7232379	1					
ANR	7233728	PrimaryExpression	3		7232379	1					
ANR	7233729	Argument	bit_depth		7232379	3					
ANR	7233730	Identifier	bit_depth		7232379	0					
ANR	7233731	Argument	alpha		7232379	4					
ANR	7233732	Identifier	alpha		7232379	0					
ANR	7233733	Argument	gamma_table		7232379	5					
ANR	7233734	Identifier	gamma_table		7232379	0					
ANR	7233735	Argument	conv		7232379	6					
ANR	7233736	Identifier	conv		7232379	0					
ANR	7233737	BreakStatement	break ;	728:9:24291:24296	7232379	11	True				
ANR	7233738	Label	default :	730:9:24308:24315	7232379	12	True				
ANR	7233739	Identifier	default		7232379	0					
ANR	7233740	ExpressionStatement	"fprintf ( stderr , ""makepng: internal bad channel count\\n"" )"	731:12:24329:24385	7232379	13	True				
ANR	7233741	CallExpression	"fprintf ( stderr , ""makepng: internal bad channel count\\n"" )"		7232379	0					
ANR	7233742	Callee	fprintf		7232379	0					
ANR	7233743	Identifier	fprintf		7232379	0					
ANR	7233744	ArgumentList	stderr		7232379	1					
ANR	7233745	Argument	stderr		7232379	0					
ANR	7233746	Identifier	stderr		7232379	0					
ANR	7233747	Argument	"""makepng: internal bad channel count\\n"""		7232379	1					
ANR	7233748	PrimaryExpression	"""makepng: internal bad channel count\\n"""		7232379	0					
ANR	7233749	ExpressionStatement	exit ( 2 )	732:12:24399:24406	7232379	14	True				
ANR	7233750	CallExpression	exit ( 2 )		7232379	0					
ANR	7233751	Callee	exit		7232379	0					
ANR	7233752	Identifier	exit		7232379	0					
ANR	7233753	ArgumentList	2		7232379	1					
ANR	7233754	Argument	2		7232379	0					
ANR	7233755	PrimaryExpression	2		7232379	0					
ANR	7233756	ElseStatement	else		7232379	0					
ANR	7233757	CompoundStatement		344:3:12339:12339	7232379	0					
ANR	7233758	ExpressionStatement	"fprintf ( stderr , ""makepng: --color: count(%u) does not match channels(%u)\\n"" , colors [ 0 ] , channels_of_type ( color_type ) )"	737:6:24436:24571	7232379	0	True				
ANR	7233759	CallExpression	"fprintf ( stderr , ""makepng: --color: count(%u) does not match channels(%u)\\n"" , colors [ 0 ] , channels_of_type ( color_type ) )"		7232379	0					
ANR	7233760	Callee	fprintf		7232379	0					
ANR	7233761	Identifier	fprintf		7232379	0					
ANR	7233762	ArgumentList	stderr		7232379	1					
ANR	7233763	Argument	stderr		7232379	0					
ANR	7233764	Identifier	stderr		7232379	0					
ANR	7233765	Argument	"""makepng: --color: count(%u) does not match channels(%u)\\n"""		7232379	1					
ANR	7233766	PrimaryExpression	"""makepng: --color: count(%u) does not match channels(%u)\\n"""		7232379	0					
ANR	7233767	Argument	colors [ 0 ]		7232379	2					
ANR	7233768	ArrayIndexing	colors [ 0 ]		7232379	0					
ANR	7233769	Identifier	colors		7232379	0					
ANR	7233770	PrimaryExpression	0		7232379	1					
ANR	7233771	Argument	channels_of_type ( color_type )		7232379	3					
ANR	7233772	CallExpression	channels_of_type ( color_type )		7232379	0					
ANR	7233773	Callee	channels_of_type		7232379	0					
ANR	7233774	Identifier	channels_of_type		7232379	0					
ANR	7233775	ArgumentList	color_type		7232379	1					
ANR	7233776	Argument	color_type		7232379	0					
ANR	7233777	Identifier	color_type		7232379	0					
ANR	7233778	ExpressionStatement	exit ( 1 )	740:6:24579:24586	7232379	1	True				
ANR	7233779	CallExpression	exit ( 1 )		7232379	0					
ANR	7233780	Callee	exit		7232379	0					
ANR	7233781	Identifier	exit		7232379	0					
ANR	7233782	ArgumentList	1		7232379	1					
ANR	7233783	Argument	1		7232379	0					
ANR	7233784	PrimaryExpression	1		7232379	0					
ANR	7233785	ReturnStatement	return filters ;	743:3:24597:24611	7232379	4	True				
ANR	7233786	Identifier	filters		7232379	0					
ANR	7233787	ReturnType	static int		7232379	1					
ANR	7233788	Identifier	generate_row		7232379	2					
ANR	7233789	ParameterList	"png_bytep row , size_t rowbytes , unsigned int y , int color_type , int bit_depth , png_const_bytep gamma_table , double conv , unsigned int * colors , int small"		7232379	3					
ANR	7233790	Parameter	png_bytep row	390:13:11928:11940	7232379	0	True				
ANR	7233791	ParameterType	png_bytep		7232379	0					
ANR	7233792	Identifier	row		7232379	1					
ANR	7233793	Parameter	size_t rowbytes	390:28:11943:11957	7232379	1	True				
ANR	7233794	ParameterType	size_t		7232379	0					
ANR	7233795	Identifier	rowbytes		7232379	1					
ANR	7233796	Parameter	unsigned int y	390:45:11960:11973	7232379	2	True				
ANR	7233797	ParameterType	unsigned int		7232379	0					
ANR	7233798	Identifier	y		7232379	1					
ANR	7233799	Parameter	int color_type	390:61:11976:11989	7232379	3	True				
ANR	7233800	ParameterType	int		7232379	0					
ANR	7233801	Identifier	color_type		7232379	1					
ANR	7233802	Parameter	int bit_depth	391:3:11995:12007	7232379	4	True				
ANR	7233803	ParameterType	int		7232379	0					
ANR	7233804	Identifier	bit_depth		7232379	1					
ANR	7233805	Parameter	png_const_bytep gamma_table	391:18:12010:12036	7232379	5	True				
ANR	7233806	ParameterType	png_const_bytep		7232379	0					
ANR	7233807	Identifier	gamma_table		7232379	1					
ANR	7233808	Parameter	double conv	391:47:12039:12049	7232379	6	True				
ANR	7233809	ParameterType	double		7232379	0					
ANR	7233810	Identifier	conv		7232379	1					
ANR	7233811	Parameter	unsigned int * colors	392:3:12055:12074	7232379	7	True				
ANR	7233812	ParameterType	unsigned int *		7232379	0					
ANR	7233813	Identifier	colors		7232379	1					
ANR	7233814	Parameter	int small	392:25:12077:12085	7232379	8	True				
ANR	7233815	ParameterType	int		7232379	0					
ANR	7233816	Identifier	small		7232379	1					
ANR	7233817	CFGEntryNode	ENTRY		7232379		True				
ANR	7233818	CFGExitNode	EXIT		7232379		True				
ANR	7233819	InfiniteForNode	true		7232379		True				
ANR	7233820	InfiniteForNode	true		7232379		True				
ANR	7233821	Symbol	small		7232379						
ANR	7233822	Symbol	* row		7232379						
ANR	7233823	Symbol	PNG_FILTER_SUB		7232379						
ANR	7233824	Symbol	* size_max		7232379						
ANR	7233825	Symbol	color_type		7232379						
ANR	7233826	Symbol	pixel_index		7232379						
ANR	7233827	Symbol	depth_max		7232379						
ANR	7233828	Symbol	pixel_depth		7232379						
ANR	7233829	Symbol	colors		7232379						
ANR	7233830	Symbol	red		7232379						
ANR	7233831	Symbol	* colors		7232379						
ANR	7233832	Symbol	alpha		7232379						
ANR	7233833	Symbol	PNG_COLOR_MASK_PALETTE		7232379						
ANR	7233834	Symbol	rowbytes		7232379						
ANR	7233835	Symbol	PNG_FILTER_NONE		7232379						
ANR	7233836	Symbol	Y		7232379						
ANR	7233837	Symbol	conv		7232379						
ANR	7233838	Symbol	row		7232379						
ANR	7233839	Symbol	image_size_of_type		7232379						
ANR	7233840	Symbol	pixel_depth_of_type		7232379						
ANR	7233841	Symbol	PNG_FILTER_UP		7232379						
ANR	7233842	Symbol	green		7232379						
ANR	7233843	Symbol	* rowbytes		7232379						
ANR	7233844	Symbol	size_max		7232379						
ANR	7233845	Symbol	byte_offset		7232379						
ANR	7233846	Symbol	filters		7232379						
ANR	7233847	Symbol	stderr		7232379						
ANR	7233848	Symbol	luma		7232379						
ANR	7233849	Symbol	gamma_table		7232379						
ANR	7233850	Symbol	abs		7232379						
ANR	7233851	Symbol	blue		7232379						
ANR	7233852	Symbol	x		7232379						
ANR	7233853	Symbol	y		7232379						
ANR	7233854	Symbol	bit_depth		7232379						
ANR	7233855	Symbol	channels_of_type		7232379						
ANR	7233856	Symbol	base		7232379						
ANR	7233857	Function	makepng_warning	747:0:24617:24914							
ANR	7233858	FunctionDef	"makepng_warning (png_structp png_ptr , png_const_charp message)"		7233857	0					
ANR	7233859	CompoundStatement		749:0:24700:24914	7233857	0					
ANR	7233860	IdentifierDeclStatement	const char * * ep = png_get_error_ptr ( png_ptr ) ;	750:3:24705:24749	7233857	0	True				
ANR	7233861	IdentifierDecl	* * ep = png_get_error_ptr ( png_ptr )		7233857	0					
ANR	7233862	IdentifierDeclType	const char * *		7233857	0					
ANR	7233863	Identifier	ep		7233857	1					
ANR	7233864	AssignmentExpression	* * ep = png_get_error_ptr ( png_ptr )		7233857	2		=			
ANR	7233865	Identifier	ep		7233857	0					
ANR	7233866	CallExpression	png_get_error_ptr ( png_ptr )		7233857	1					
ANR	7233867	Callee	png_get_error_ptr		7233857	0					
ANR	7233868	Identifier	png_get_error_ptr		7233857	0					
ANR	7233869	ArgumentList	png_ptr		7233857	1					
ANR	7233870	Argument	png_ptr		7233857	0					
ANR	7233871	Identifier	png_ptr		7233857	0					
ANR	7233872	IdentifierDeclStatement	const char * name ;	751:3:24754:24770	7233857	1	True				
ANR	7233873	IdentifierDecl	* name		7233857	0					
ANR	7233874	IdentifierDeclType	const char *		7233857	0					
ANR	7233875	Identifier	name		7233857	1					
ANR	7233876	IfStatement	if ( ep != NULL && * ep != NULL )		7233857	2					
ANR	7233877	Condition	ep != NULL && * ep != NULL	753:7:24780:24804	7233857	0	True				
ANR	7233878	AndExpression	ep != NULL && * ep != NULL		7233857	0		&&			
ANR	7233879	EqualityExpression	ep != NULL		7233857	0		!=			
ANR	7233880	Identifier	ep		7233857	0					
ANR	7233881	Identifier	NULL		7233857	1					
ANR	7233882	EqualityExpression	* ep != NULL		7233857	1		!=			
ANR	7233883	UnaryOperationExpression	* ep		7233857	0					
ANR	7233884	UnaryOperator	*		7233857	0					
ANR	7233885	Identifier	ep		7233857	1					
ANR	7233886	Identifier	NULL		7233857	1					
ANR	7233887	ExpressionStatement	name = * ep	754:6:24813:24823	7233857	1	True				
ANR	7233888	AssignmentExpression	name = * ep		7233857	0		=			
ANR	7233889	Identifier	name		7233857	0					
ANR	7233890	UnaryOperationExpression	* ep		7233857	1					
ANR	7233891	UnaryOperator	*		7233857	0					
ANR	7233892	Identifier	ep		7233857	1					
ANR	7233893	ElseStatement	else		7233857	0					
ANR	7233894	ExpressionStatement	"name = ""makepng"""	757:6:24840:24856	7233857	0	True				
ANR	7233895	AssignmentExpression	"name = ""makepng"""		7233857	0		=			
ANR	7233896	Identifier	name		7233857	0					
ANR	7233897	PrimaryExpression	"""makepng"""		7233857	1					
ANR	7233898	ExpressionStatement	"fprintf ( stderr , ""%s: warning: %s\\n"" , name , message )"	759:2:24861:24912	7233857	3	True				
ANR	7233899	CallExpression	"fprintf ( stderr , ""%s: warning: %s\\n"" , name , message )"		7233857	0					
ANR	7233900	Callee	fprintf		7233857	0					
ANR	7233901	Identifier	fprintf		7233857	0					
ANR	7233902	ArgumentList	stderr		7233857	1					
ANR	7233903	Argument	stderr		7233857	0					
ANR	7233904	Identifier	stderr		7233857	0					
ANR	7233905	Argument	"""%s: warning: %s\\n"""		7233857	1					
ANR	7233906	PrimaryExpression	"""%s: warning: %s\\n"""		7233857	0					
ANR	7233907	Argument	name		7233857	2					
ANR	7233908	Identifier	name		7233857	0					
ANR	7233909	Argument	message		7233857	3					
ANR	7233910	Identifier	message		7233857	0					
ANR	7233911	ReturnType	static void PNGCBAPI		7233857	1					
ANR	7233912	Identifier	makepng_warning		7233857	2					
ANR	7233913	ParameterList	"png_structp png_ptr , png_const_charp message"		7233857	3					
ANR	7233914	Parameter	png_structp png_ptr	748:16:24654:24672	7233857	0	True				
ANR	7233915	ParameterType	png_structp		7233857	0					
ANR	7233916	Identifier	png_ptr		7233857	1					
ANR	7233917	Parameter	png_const_charp message	748:37:24675:24697	7233857	1	True				
ANR	7233918	ParameterType	png_const_charp		7233857	0					
ANR	7233919	Identifier	message		7233857	1					
ANR	7233920	CFGEntryNode	ENTRY		7233857		True				
ANR	7233921	CFGExitNode	EXIT		7233857		True				
ANR	7233922	Symbol	* ep		7233857						
ANR	7233923	Symbol	NULL		7233857						
ANR	7233924	Symbol	png_get_error_ptr		7233857						
ANR	7233925	Symbol	name		7233857						
ANR	7233926	Symbol	ep		7233857						
ANR	7233927	Symbol	message		7233857						
ANR	7233928	Symbol	stderr		7233857						
ANR	7233929	Symbol	png_ptr		7233857						
ANR	7233930	Function	makepng_error	762:0:24917:25066							
ANR	7233931	FunctionDef	"makepng_error (png_structp png_ptr , png_const_charp message)"		7233930	0					
ANR	7233932	CompoundStatement		764:0:24998:25066	7233930	0					
ANR	7233933	ExpressionStatement	"makepng_warning ( png_ptr , message )"	765:3:25003:25036	7233930	0	True				
ANR	7233934	CallExpression	"makepng_warning ( png_ptr , message )"		7233930	0					
ANR	7233935	Callee	makepng_warning		7233930	0					
ANR	7233936	Identifier	makepng_warning		7233930	0					
ANR	7233937	ArgumentList	png_ptr		7233930	1					
ANR	7233938	Argument	png_ptr		7233930	0					
ANR	7233939	Identifier	png_ptr		7233930	0					
ANR	7233940	Argument	message		7233930	1					
ANR	7233941	Identifier	message		7233930	0					
ANR	7233942	ExpressionStatement	"png_longjmp ( png_ptr , 1 )"	766:3:25041:25064	7233930	1	True				
ANR	7233943	CallExpression	"png_longjmp ( png_ptr , 1 )"		7233930	0					
ANR	7233944	Callee	png_longjmp		7233930	0					
ANR	7233945	Identifier	png_longjmp		7233930	0					
ANR	7233946	ArgumentList	png_ptr		7233930	1					
ANR	7233947	Argument	png_ptr		7233930	0					
ANR	7233948	Identifier	png_ptr		7233930	0					
ANR	7233949	Argument	1		7233930	1					
ANR	7233950	PrimaryExpression	1		7233930	0					
ANR	7233951	ReturnType	static void PNGCBAPI		7233930	1					
ANR	7233952	Identifier	makepng_error		7233930	2					
ANR	7233953	ParameterList	"png_structp png_ptr , png_const_charp message"		7233930	3					
ANR	7233954	Parameter	png_structp png_ptr	763:14:24952:24970	7233930	0	True				
ANR	7233955	ParameterType	png_structp		7233930	0					
ANR	7233956	Identifier	png_ptr		7233930	1					
ANR	7233957	Parameter	png_const_charp message	763:35:24973:24995	7233930	1	True				
ANR	7233958	ParameterType	png_const_charp		7233930	0					
ANR	7233959	Identifier	message		7233930	1					
ANR	7233960	CFGEntryNode	ENTRY		7233930		True				
ANR	7233961	CFGExitNode	EXIT		7233930		True				
ANR	7233962	Symbol	message		7233930						
ANR	7233963	Symbol	png_ptr		7233930						
ANR	7233964	DeclStmt									
ANR	7233965	Decl							png_structp	png_structp	png_ptr
ANR	7233966	DeclStmt									
ANR	7233967	Decl							volatile png_infop	volatile png_infop	info_ptr
ANR	7233968	DeclStmt									
ANR	7233969	Decl							volatile png_bytep	volatile png_bytep	row
ANR	7233970	DeclStmt									
ANR	7233971	Decl							png_structp	png_structp	nv_ptr
ANR	7233972	DeclStmt									
ANR	7233973	Decl							png_infop	png_infop	nv_info
ANR	7233974	DeclStmt									
ANR	7233975	Decl							const unsigned int	const unsigned int	size
ANR	7233976	DeclStmt									
ANR	7233977	Decl							unsigned int	unsigned int	ysize
ANR	7233978	DeclStmt									
ANR	7233979	Decl							png_fixed_point	png_fixed_point	real_gamma
ANR	7233980	DeclStmt									
ANR	7233981	Decl							png_byte	png_byte [ 256 ]	gamma_table
ANR	7233982	DeclStmt									
ANR	7233983	Decl							double	double	conv
ANR	7233984	DeclStmt									
ANR	7233985	Decl							const unsigned int	const unsigned int	pixel_depth
ANR	7233986	DeclStmt									
ANR	7233987	Decl							unsigned int	unsigned int	i
ANR	7233988	DeclStmt									
ANR	7233989	Decl							int	int	npalette
ANR	7233990	DeclStmt									
ANR	7233991	Decl							png_color	png_color [ 256 ]	palette
ANR	7233992	DeclStmt									
ANR	7233993	Decl							png_byte	png_byte [ 256 ]	trans
ANR	7233994	DeclStmt									
ANR	7233995	Decl							png_color_16	png_color_16	col
ANR	7233996	DeclStmt									
ANR	7233997	Decl							ifdef PNG_WRITE_INTERLACING_SUPPORTED int	ifdef PNG_WRITE_INTERLACING_SUPPORTED int	passes
ANR	7233998	DeclStmt									
ANR	7233999	Decl							int	int	passes
ANR	7234000	DeclStmt									
ANR	7234001	Decl							endif int	endif int	pass
ANR	7234002	DeclStmt									
ANR	7234003	Decl							png_size_t	png_size_t	rowbytes
ANR	7234004	DeclStmt									
ANR	7234005	Decl							unsigned int	unsigned int	y
ANR	7234006	DeclStmt									
ANR	7234007	Decl							unsigned int	unsigned int	row_filters
ANR	7234008	DeclStmt									
ANR	7234009	Decl							png_structp	png_structp	nv_ptr
ANR	7234010	DeclStmt									
ANR	7234011	Decl							png_infop	png_infop	nv_info
ANR	7234012	Function	load_file	995:0:31365:33706							
ANR	7234013	FunctionDef	"load_file (png_const_charp name , png_bytepp result)"		7234012	0					
ANR	7234014	CompoundStatement		997:0:31430:33706	7234012	0					
ANR	7234015	IdentifierDeclStatement	FILE * fp = tmpfile ( ) ;	998:3:31435:31455	7234012	0	True				
ANR	7234016	IdentifierDecl	* fp = tmpfile ( )		7234012	0					
ANR	7234017	IdentifierDeclType	FILE *		7234012	0					
ANR	7234018	Identifier	fp		7234012	1					
ANR	7234019	AssignmentExpression	* fp = tmpfile ( )		7234012	2		=			
ANR	7234020	Identifier	fp		7234012	0					
ANR	7234021	CallExpression	tmpfile ( )		7234012	1					
ANR	7234022	Callee	tmpfile		7234012	0					
ANR	7234023	Identifier	tmpfile		7234012	0					
ANR	7234024	ArgumentList			7234012	1					
ANR	7234025	IfStatement	if ( fp != NULL )		7234012	1					
ANR	7234026	Condition	fp != NULL	1000:7:31465:31474	7234012	0	True				
ANR	7234027	EqualityExpression	fp != NULL		7234012	0		!=			
ANR	7234028	Identifier	fp		7234012	0					
ANR	7234029	Identifier	NULL		7234012	1					
ANR	7234030	CompoundStatement		6:6:57:85	7234012	1					
ANR	7234031	IdentifierDeclStatement	"FILE * ip = fopen ( name , ""rb"" ) ;"	1002:6:31488:31516	7234012	0	True				
ANR	7234032	IdentifierDecl	"* ip = fopen ( name , ""rb"" )"		7234012	0					
ANR	7234033	IdentifierDeclType	FILE *		7234012	0					
ANR	7234034	Identifier	ip		7234012	1					
ANR	7234035	AssignmentExpression	"* ip = fopen ( name , ""rb"" )"		7234012	2		=			
ANR	7234036	Identifier	ip		7234012	0					
ANR	7234037	CallExpression	"fopen ( name , ""rb"" )"		7234012	1					
ANR	7234038	Callee	fopen		7234012	0					
ANR	7234039	Identifier	fopen		7234012	0					
ANR	7234040	ArgumentList	name		7234012	1					
ANR	7234041	Argument	name		7234012	0					
ANR	7234042	Identifier	name		7234012	0					
ANR	7234043	Argument	"""rb"""		7234012	1					
ANR	7234044	PrimaryExpression	"""rb"""		7234012	0					
ANR	7234045	IfStatement	if ( ip != NULL )		7234012	1					
ANR	7234046	Condition	ip != NULL	1004:10:31529:31538	7234012	0	True				
ANR	7234047	EqualityExpression	ip != NULL		7234012	0		!=			
ANR	7234048	Identifier	ip		7234012	0					
ANR	7234049	Identifier	NULL		7234012	1					
ANR	7234050	CompoundStatement		11:9:154:160	7234012	1					
ANR	7234051	IdentifierDeclStatement	size_t total = 0 ;	1006:9:31558:31574	7234012	0	True				
ANR	7234052	IdentifierDecl	total = 0		7234012	0					
ANR	7234053	IdentifierDeclType	size_t		7234012	0					
ANR	7234054	Identifier	total		7234012	1					
ANR	7234055	AssignmentExpression	total = 0		7234012	2		=			
ANR	7234056	Identifier	total		7234012	0					
ANR	7234057	PrimaryExpression	0		7234012	1					
ANR	7234058	IdentifierDeclStatement	int ch ;	1007:9:31585:31591	7234012	1	True				
ANR	7234059	IdentifierDecl	ch		7234012	0					
ANR	7234060	IdentifierDeclType	int		7234012	0					
ANR	7234061	Identifier	ch		7234012	1					
ANR	7234062	ForStatement	for ( ; ; )		7234012	2					
ANR	7234063	CompoundStatement		14:9:190:190	7234012	0					
ANR	7234064	ExpressionStatement	ch = getc ( ip )	1011:12:31635:31648	7234012	0	True				
ANR	7234065	AssignmentExpression	ch = getc ( ip )		7234012	0		=			
ANR	7234066	Identifier	ch		7234012	0					
ANR	7234067	CallExpression	getc ( ip )		7234012	1					
ANR	7234068	Callee	getc		7234012	0					
ANR	7234069	Identifier	getc		7234012	0					
ANR	7234070	ArgumentList	ip		7234012	1					
ANR	7234071	Argument	ip		7234012	0					
ANR	7234072	Identifier	ip		7234012	0					
ANR	7234073	IfStatement	if ( ch == EOF )		7234012	1					
ANR	7234074	Condition	ch == EOF	1012:16:31666:31674	7234012	0	True				
ANR	7234075	EqualityExpression	ch == EOF		7234012	0		==			
ANR	7234076	Identifier	ch		7234012	0					
ANR	7234077	Identifier	EOF		7234012	1					
ANR	7234078	BreakStatement	break ;	1012:27:31677:31682	7234012	1	True				
ANR	7234079	ExpressionStatement	"putc ( ch , fp )"	1013:12:31696:31708	7234012	2	True				
ANR	7234080	CallExpression	"putc ( ch , fp )"		7234012	0					
ANR	7234081	Callee	putc		7234012	0					
ANR	7234082	Identifier	putc		7234012	0					
ANR	7234083	ArgumentList	ch		7234012	1					
ANR	7234084	Argument	ch		7234012	0					
ANR	7234085	Identifier	ch		7234012	0					
ANR	7234086	Argument	fp		7234012	1					
ANR	7234087	Identifier	fp		7234012	0					
ANR	7234088	ExpressionStatement	++ total	1014:12:31722:31729	7234012	3	True				
ANR	7234089	UnaryExpression	++ total		7234012	0					
ANR	7234090	IncDec	++		7234012	0					
ANR	7234091	Identifier	total		7234012	1					
ANR	7234092	IfStatement	if ( ferror ( ip ) )		7234012	3					
ANR	7234093	Condition	ferror ( ip )	1017:13:31756:31765	7234012	0	True				
ANR	7234094	CallExpression	ferror ( ip )		7234012	0					
ANR	7234095	Callee	ferror		7234012	0					
ANR	7234096	Identifier	ferror		7234012	0					
ANR	7234097	ArgumentList	ip		7234012	1					
ANR	7234098	Argument	ip		7234012	0					
ANR	7234099	Identifier	ip		7234012	0					
ANR	7234100	CompoundStatement		22:9:346:346	7234012	1					
ANR	7234101	ExpressionStatement	perror ( name )	1019:12:31791:31803	7234012	0	True				
ANR	7234102	CallExpression	perror ( name )		7234012	0					
ANR	7234103	Callee	perror		7234012	0					
ANR	7234104	Identifier	perror		7234012	0					
ANR	7234105	ArgumentList	name		7234012	1					
ANR	7234106	Argument	name		7234012	0					
ANR	7234107	Identifier	name		7234012	0					
ANR	7234108	ExpressionStatement	"fprintf ( stderr , ""%s: read error\\n"" , name )"	1020:12:31817:31858	7234012	1	True				
ANR	7234109	CallExpression	"fprintf ( stderr , ""%s: read error\\n"" , name )"		7234012	0					
ANR	7234110	Callee	fprintf		7234012	0					
ANR	7234111	Identifier	fprintf		7234012	0					
ANR	7234112	ArgumentList	stderr		7234012	1					
ANR	7234113	Argument	stderr		7234012	0					
ANR	7234114	Identifier	stderr		7234012	0					
ANR	7234115	Argument	"""%s: read error\\n"""		7234012	1					
ANR	7234116	PrimaryExpression	"""%s: read error\\n"""		7234012	0					
ANR	7234117	Argument	name		7234012	2					
ANR	7234118	Identifier	name		7234012	0					
ANR	7234119	ExpressionStatement	( void ) fclose ( ip )	1021:12:31872:31888	7234012	2	True				
ANR	7234120	CastExpression	( void ) fclose ( ip )		7234012	0					
ANR	7234121	CastTarget	void		7234012	0					
ANR	7234122	CallExpression	fclose ( ip )		7234012	1					
ANR	7234123	Callee	fclose		7234012	0					
ANR	7234124	Identifier	fclose		7234012	0					
ANR	7234125	ArgumentList	ip		7234012	1					
ANR	7234126	Argument	ip		7234012	0					
ANR	7234127	Identifier	ip		7234012	0					
ANR	7234128	ElseStatement	else		7234012	0					
ANR	7234129	CompoundStatement		29:9:494:494	7234012	0					
ANR	7234130	ExpressionStatement	( void ) fclose ( ip )	1026:12:31939:31955	7234012	0	True				
ANR	7234131	CastExpression	( void ) fclose ( ip )		7234012	0					
ANR	7234132	CastTarget	void		7234012	0					
ANR	7234133	CallExpression	fclose ( ip )		7234012	1					
ANR	7234134	Callee	fclose		7234012	0					
ANR	7234135	Identifier	fclose		7234012	0					
ANR	7234136	ArgumentList	ip		7234012	1					
ANR	7234137	Argument	ip		7234012	0					
ANR	7234138	Identifier	ip		7234012	0					
ANR	7234139	IfStatement	if ( ferror ( fp ) )		7234012	1					
ANR	7234140	Condition	ferror ( fp )	1028:16:31974:31983	7234012	0	True				
ANR	7234141	CallExpression	ferror ( fp )		7234012	0					
ANR	7234142	Callee	ferror		7234012	0					
ANR	7234143	Identifier	ferror		7234012	0					
ANR	7234144	ArgumentList	fp		7234012	1					
ANR	7234145	Argument	fp		7234012	0					
ANR	7234146	Identifier	fp		7234012	0					
ANR	7234147	CompoundStatement		33:12:567:567	7234012	1					
ANR	7234148	ExpressionStatement	"perror ( ""temporary file"" )"	1030:15:32015:32039	7234012	0	True				
ANR	7234149	CallExpression	"perror ( ""temporary file"" )"		7234012	0					
ANR	7234150	Callee	perror		7234012	0					
ANR	7234151	Identifier	perror		7234012	0					
ANR	7234152	ArgumentList	"""temporary file"""		7234012	1					
ANR	7234153	Argument	"""temporary file"""		7234012	0					
ANR	7234154	PrimaryExpression	"""temporary file"""		7234012	0					
ANR	7234155	ExpressionStatement	"fprintf ( stderr , ""temporary file write error\\n"" )"	1031:15:32056:32103	7234012	1	True				
ANR	7234156	CallExpression	"fprintf ( stderr , ""temporary file write error\\n"" )"		7234012	0					
ANR	7234157	Callee	fprintf		7234012	0					
ANR	7234158	Identifier	fprintf		7234012	0					
ANR	7234159	ArgumentList	stderr		7234012	1					
ANR	7234160	Argument	stderr		7234012	0					
ANR	7234161	Identifier	stderr		7234012	0					
ANR	7234162	Argument	"""temporary file write error\\n"""		7234012	1					
ANR	7234163	PrimaryExpression	"""temporary file write error\\n"""		7234012	0					
ANR	7234164	ElseStatement	else		7234012	0					
ANR	7234165	CompoundStatement		39:12:718:718	7234012	0					
ANR	7234166	ExpressionStatement	rewind ( fp )	1036:15:32166:32176	7234012	0	True				
ANR	7234167	CallExpression	rewind ( fp )		7234012	0					
ANR	7234168	Callee	rewind		7234012	0					
ANR	7234169	Identifier	rewind		7234012	0					
ANR	7234170	ArgumentList	fp		7234012	1					
ANR	7234171	Argument	fp		7234012	0					
ANR	7234172	Identifier	fp		7234012	0					
ANR	7234173	IfStatement	if ( total > 0 )		7234012	1					
ANR	7234174	Condition	total > 0	1038:19:32198:32206	7234012	0	True				
ANR	7234175	RelationalExpression	total > 0		7234012	0		>			
ANR	7234176	Identifier	total		7234012	0					
ANR	7234177	PrimaryExpression	0		7234012	1					
ANR	7234178	CompoundStatement		47:18:966:1003	7234012	1					
ANR	7234179	IdentifierDeclStatement	png_bytep data = malloc ( ( total + 3 ) & ~3 ) ;	1043:18:32397:32434	7234012	0	True				
ANR	7234180	IdentifierDecl	data = malloc ( ( total + 3 ) & ~3 )		7234012	0					
ANR	7234181	IdentifierDeclType	png_bytep		7234012	0					
ANR	7234182	Identifier	data		7234012	1					
ANR	7234183	AssignmentExpression	data = malloc ( ( total + 3 ) & ~3 )		7234012	2		=			
ANR	7234184	Identifier	data		7234012	0					
ANR	7234185	CallExpression	malloc ( ( total + 3 ) & ~3 )		7234012	1					
ANR	7234186	Callee	malloc		7234012	0					
ANR	7234187	Identifier	malloc		7234012	0					
ANR	7234188	ArgumentList	( total + 3 ) & ~3		7234012	1					
ANR	7234189	Argument	( total + 3 ) & ~3		7234012	0					
ANR	7234190	BitAndExpression	( total + 3 ) & ~3		7234012	0		&			
ANR	7234191	AdditiveExpression	total + 3		7234012	0		+			
ANR	7234192	Identifier	total		7234012	0					
ANR	7234193	PrimaryExpression	3		7234012	1					
ANR	7234194	Identifier	~3		7234012	1					
ANR	7234195	IfStatement	if ( data != NULL )		7234012	1					
ANR	7234196	Condition	data != NULL	1045:22:32459:32470	7234012	0	True				
ANR	7234197	EqualityExpression	data != NULL		7234012	0		!=			
ANR	7234198	Identifier	data		7234012	0					
ANR	7234199	Identifier	NULL		7234012	1					
ANR	7234200	CompoundStatement		51:21:1083:1102	7234012	1					
ANR	7234201	IdentifierDeclStatement	size_t new_size = 0 ;	1047:21:32514:32533	7234012	0	True				
ANR	7234202	IdentifierDecl	new_size = 0		7234012	0					
ANR	7234203	IdentifierDeclType	size_t		7234012	0					
ANR	7234204	Identifier	new_size		7234012	1					
ANR	7234205	AssignmentExpression	new_size = 0		7234012	2		=			
ANR	7234206	Identifier	new_size		7234012	0					
ANR	7234207	PrimaryExpression	0		7234012	1					
ANR	7234208	ForStatement	for ( ; ; )		7234012	1					
ANR	7234209	CompoundStatement		54:21:1156:1156	7234012	0					
ANR	7234210	ExpressionStatement	ch = getc ( fp )	1051:24:32613:32626	7234012	0	True				
ANR	7234211	AssignmentExpression	ch = getc ( fp )		7234012	0		=			
ANR	7234212	Identifier	ch		7234012	0					
ANR	7234213	CallExpression	getc ( fp )		7234012	1					
ANR	7234214	Callee	getc		7234012	0					
ANR	7234215	Identifier	getc		7234012	0					
ANR	7234216	ArgumentList	fp		7234012	1					
ANR	7234217	Argument	fp		7234012	0					
ANR	7234218	Identifier	fp		7234012	0					
ANR	7234219	IfStatement	if ( ch == EOF )		7234012	1					
ANR	7234220	Condition	ch == EOF	1052:28:32656:32664	7234012	0	True				
ANR	7234221	EqualityExpression	ch == EOF		7234012	0		==			
ANR	7234222	Identifier	ch		7234012	0					
ANR	7234223	Identifier	EOF		7234012	1					
ANR	7234224	BreakStatement	break ;	1052:39:32667:32672	7234012	1	True				
ANR	7234225	ExpressionStatement	data [ new_size ++ ] = ( png_byte ) ch	1053:24:32698:32729	7234012	2	True				
ANR	7234226	AssignmentExpression	data [ new_size ++ ] = ( png_byte ) ch		7234012	0		=			
ANR	7234227	ArrayIndexing	data [ new_size ++ ]		7234012	0					
ANR	7234228	Identifier	data		7234012	0					
ANR	7234229	PostIncDecOperationExpression	new_size ++		7234012	1					
ANR	7234230	Identifier	new_size		7234012	0					
ANR	7234231	IncDec	++		7234012	1					
ANR	7234232	CastExpression	( png_byte ) ch		7234012	1					
ANR	7234233	CastTarget	png_byte		7234012	0					
ANR	7234234	Identifier	ch		7234012	1					
ANR	7234235	IfStatement	if ( ferror ( fp ) || new_size != total )		7234012	2					
ANR	7234236	Condition	ferror ( fp ) || new_size != total	1056:25:32780:32810	7234012	0	True				
ANR	7234237	OrExpression	ferror ( fp ) || new_size != total		7234012	0		||			
ANR	7234238	CallExpression	ferror ( fp )		7234012	0					
ANR	7234239	Callee	ferror		7234012	0					
ANR	7234240	Identifier	ferror		7234012	0					
ANR	7234241	ArgumentList	fp		7234012	1					
ANR	7234242	Argument	fp		7234012	0					
ANR	7234243	Identifier	fp		7234012	0					
ANR	7234244	EqualityExpression	new_size != total		7234012	1		!=			
ANR	7234245	Identifier	new_size		7234012	0					
ANR	7234246	Identifier	total		7234012	1					
ANR	7234247	CompoundStatement		61:21:1403:1403	7234012	1					
ANR	7234248	ExpressionStatement	"perror ( ""temporary file"" )"	1058:24:32860:32884	7234012	0	True				
ANR	7234249	CallExpression	"perror ( ""temporary file"" )"		7234012	0					
ANR	7234250	Callee	perror		7234012	0					
ANR	7234251	Identifier	perror		7234012	0					
ANR	7234252	ArgumentList	"""temporary file"""		7234012	1					
ANR	7234253	Argument	"""temporary file"""		7234012	0					
ANR	7234254	PrimaryExpression	"""temporary file"""		7234012	0					
ANR	7234255	ExpressionStatement	"fprintf ( stderr , ""temporary file read error\\n"" )"	1059:24:32910:32956	7234012	1	True				
ANR	7234256	CallExpression	"fprintf ( stderr , ""temporary file read error\\n"" )"		7234012	0					
ANR	7234257	Callee	fprintf		7234012	0					
ANR	7234258	Identifier	fprintf		7234012	0					
ANR	7234259	ArgumentList	stderr		7234012	1					
ANR	7234260	Argument	stderr		7234012	0					
ANR	7234261	Identifier	stderr		7234012	0					
ANR	7234262	Argument	"""temporary file read error\\n"""		7234012	1					
ANR	7234263	PrimaryExpression	"""temporary file read error\\n"""		7234012	0					
ANR	7234264	ExpressionStatement	free ( data )	1060:24:32982:32992	7234012	2	True				
ANR	7234265	CallExpression	free ( data )		7234012	0					
ANR	7234266	Callee	free		7234012	0					
ANR	7234267	Identifier	free		7234012	0					
ANR	7234268	ArgumentList	data		7234012	1					
ANR	7234269	Argument	data		7234012	0					
ANR	7234270	Identifier	data		7234012	0					
ANR	7234271	ElseStatement	else		7234012	0					
ANR	7234272	CompoundStatement		68:21:1634:1634	7234012	0					
ANR	7234273	ExpressionStatement	( void ) fclose ( fp )	1065:24:33091:33107	7234012	0	True				
ANR	7234274	CastExpression	( void ) fclose ( fp )		7234012	0					
ANR	7234275	CastTarget	void		7234012	0					
ANR	7234276	CallExpression	fclose ( fp )		7234012	1					
ANR	7234277	Callee	fclose		7234012	0					
ANR	7234278	Identifier	fclose		7234012	0					
ANR	7234279	ArgumentList	fp		7234012	1					
ANR	7234280	Argument	fp		7234012	0					
ANR	7234281	Identifier	fp		7234012	0					
ANR	7234282	ExpressionStatement	* result = data	1066:24:33133:33147	7234012	1	True				
ANR	7234283	AssignmentExpression	* result = data		7234012	0		=			
ANR	7234284	UnaryOperationExpression	* result		7234012	0					
ANR	7234285	UnaryOperator	*		7234012	0					
ANR	7234286	Identifier	result		7234012	1					
ANR	7234287	Identifier	data		7234012	1					
ANR	7234288	ReturnStatement	return total ;	1067:24:33173:33185	7234012	2	True				
ANR	7234289	Identifier	total		7234012	0					
ANR	7234290	ElseStatement	else		7234012	0					
ANR	7234291	ExpressionStatement	"fprintf ( stderr , ""%s: out of memory loading file\\n"" , name )"	1072:21:33275:33332	7234012	0	True				
ANR	7234292	CallExpression	"fprintf ( stderr , ""%s: out of memory loading file\\n"" , name )"		7234012	0					
ANR	7234293	Callee	fprintf		7234012	0					
ANR	7234294	Identifier	fprintf		7234012	0					
ANR	7234295	ArgumentList	stderr		7234012	1					
ANR	7234296	Argument	stderr		7234012	0					
ANR	7234297	Identifier	stderr		7234012	0					
ANR	7234298	Argument	"""%s: out of memory loading file\\n"""		7234012	1					
ANR	7234299	PrimaryExpression	"""%s: out of memory loading file\\n"""		7234012	0					
ANR	7234300	Argument	name		7234012	2					
ANR	7234301	Identifier	name		7234012	0					
ANR	7234302	ElseStatement	else		7234012	0					
ANR	7234303	ExpressionStatement	"fprintf ( stderr , ""%s: empty file\\n"" , name )"	1076:18:33390:33431	7234012	0	True				
ANR	7234304	CallExpression	"fprintf ( stderr , ""%s: empty file\\n"" , name )"		7234012	0					
ANR	7234305	Callee	fprintf		7234012	0					
ANR	7234306	Identifier	fprintf		7234012	0					
ANR	7234307	ArgumentList	stderr		7234012	1					
ANR	7234308	Argument	stderr		7234012	0					
ANR	7234309	Identifier	stderr		7234012	0					
ANR	7234310	Argument	"""%s: empty file\\n"""		7234012	1					
ANR	7234311	PrimaryExpression	"""%s: empty file\\n"""		7234012	0					
ANR	7234312	Argument	name		7234012	2					
ANR	7234313	Identifier	name		7234012	0					
ANR	7234314	ElseStatement	else		7234012	0					
ANR	7234315	CompoundStatement		86:6:2053:2053	7234012	0					
ANR	7234316	ExpressionStatement	perror ( name )	1083:9:33495:33507	7234012	0	True				
ANR	7234317	CallExpression	perror ( name )		7234012	0					
ANR	7234318	Callee	perror		7234012	0					
ANR	7234319	Identifier	perror		7234012	0					
ANR	7234320	ArgumentList	name		7234012	1					
ANR	7234321	Argument	name		7234012	0					
ANR	7234322	Identifier	name		7234012	0					
ANR	7234323	ExpressionStatement	"fprintf ( stderr , ""%s: open failed\\n"" , name )"	1084:9:33518:33560	7234012	1	True				
ANR	7234324	CallExpression	"fprintf ( stderr , ""%s: open failed\\n"" , name )"		7234012	0					
ANR	7234325	Callee	fprintf		7234012	0					
ANR	7234326	Identifier	fprintf		7234012	0					
ANR	7234327	ArgumentList	stderr		7234012	1					
ANR	7234328	Argument	stderr		7234012	0					
ANR	7234329	Identifier	stderr		7234012	0					
ANR	7234330	Argument	"""%s: open failed\\n"""		7234012	1					
ANR	7234331	PrimaryExpression	"""%s: open failed\\n"""		7234012	0					
ANR	7234332	Argument	name		7234012	2					
ANR	7234333	Identifier	name		7234012	0					
ANR	7234334	ExpressionStatement	fclose ( fp )	1087:6:33577:33587	7234012	2	True				
ANR	7234335	CallExpression	fclose ( fp )		7234012	0					
ANR	7234336	Callee	fclose		7234012	0					
ANR	7234337	Identifier	fclose		7234012	0					
ANR	7234338	ArgumentList	fp		7234012	1					
ANR	7234339	Argument	fp		7234012	0					
ANR	7234340	Identifier	fp		7234012	0					
ANR	7234341	ElseStatement	else		7234012	0					
ANR	7234342	ExpressionStatement	"fprintf ( stderr , ""makepng: %s: could not open temporary file\\n"" , name )"	1091:6:33609:33678	7234012	0	True				
ANR	7234343	CallExpression	"fprintf ( stderr , ""makepng: %s: could not open temporary file\\n"" , name )"		7234012	0					
ANR	7234344	Callee	fprintf		7234012	0					
ANR	7234345	Identifier	fprintf		7234012	0					
ANR	7234346	ArgumentList	stderr		7234012	1					
ANR	7234347	Argument	stderr		7234012	0					
ANR	7234348	Identifier	stderr		7234012	0					
ANR	7234349	Argument	"""makepng: %s: could not open temporary file\\n"""		7234012	1					
ANR	7234350	PrimaryExpression	"""makepng: %s: could not open temporary file\\n"""		7234012	0					
ANR	7234351	Argument	name		7234012	2					
ANR	7234352	Identifier	name		7234012	0					
ANR	7234353	ExpressionStatement	exit ( 1 )	1093:3:33684:33691	7234012	2	True				
ANR	7234354	CallExpression	exit ( 1 )		7234012	0					
ANR	7234355	Callee	exit		7234012	0					
ANR	7234356	Identifier	exit		7234012	0					
ANR	7234357	ArgumentList	1		7234012	1					
ANR	7234358	Argument	1		7234012	0					
ANR	7234359	PrimaryExpression	1		7234012	0					
ANR	7234360	ReturnStatement	return 0 ;	1094:3:33696:33704	7234012	3	True				
ANR	7234361	PrimaryExpression	0		7234012	0					
ANR	7234362	ReturnType	static size_t		7234012	1					
ANR	7234363	Identifier	load_file		7234012	2					
ANR	7234364	ParameterList	"png_const_charp name , png_bytepp result"		7234012	3					
ANR	7234365	Parameter	png_const_charp name	996:10:31389:31408	7234012	0	True				
ANR	7234366	ParameterType	png_const_charp		7234012	0					
ANR	7234367	Identifier	name		7234012	1					
ANR	7234368	Parameter	png_bytepp result	996:32:31411:31427	7234012	1	True				
ANR	7234369	ParameterType	png_bytepp		7234012	0					
ANR	7234370	Identifier	result		7234012	1					
ANR	7234371	CFGEntryNode	ENTRY		7234012		True				
ANR	7234372	CFGExitNode	EXIT		7234012		True				
ANR	7234373	InfiniteForNode	true		7234012		True				
ANR	7234374	InfiniteForNode	true		7234012		True				
ANR	7234375	Symbol	fopen		7234012						
ANR	7234376	Symbol	malloc		7234012						
ANR	7234377	Symbol	NULL		7234012						
ANR	7234378	Symbol	data		7234012						
ANR	7234379	Symbol	ch		7234012						
ANR	7234380	Symbol	ip		7234012						
ANR	7234381	Symbol	fp		7234012						
ANR	7234382	Symbol	stderr		7234012						
ANR	7234383	Symbol	result		7234012						
ANR	7234384	Symbol	ferror		7234012						
ANR	7234385	Symbol	total		7234012						
ANR	7234386	Symbol	~3		7234012						
ANR	7234387	Symbol	* result		7234012						
ANR	7234388	Symbol	new_size		7234012						
ANR	7234389	Symbol	name		7234012						
ANR	7234390	Symbol	getc		7234012						
ANR	7234391	Symbol	EOF		7234012						
ANR	7234392	Symbol	* data		7234012						
ANR	7234393	Symbol	tmpfile		7234012						
ANR	7234394	Function	load_fake	1097:0:33709:34720							
ANR	7234395	FunctionDef	"load_fake (png_charp param , png_bytepp profile)"		7234394	0					
ANR	7234396	CompoundStatement		1099:0:33774:34720	7234394	0					
ANR	7234397	IdentifierDeclStatement	char * endptr = NULL ;	1100:3:33779:33798	7234394	0	True				
ANR	7234398	IdentifierDecl	* endptr = NULL		7234394	0					
ANR	7234399	IdentifierDeclType	char *		7234394	0					
ANR	7234400	Identifier	endptr		7234394	1					
ANR	7234401	AssignmentExpression	* endptr = NULL		7234394	2		=			
ANR	7234402	Identifier	NULL		7234394	0					
ANR	7234403	Identifier	NULL		7234394	1					
ANR	7234404	IdentifierDeclStatement	"uint64_t size = strtoull ( param , & endptr , 0 ) ;"	1101:3:33803:33854	7234394	1	True				
ANR	7234405	IdentifierDecl	"size = strtoull ( param , & endptr , 0 )"		7234394	0					
ANR	7234406	IdentifierDeclType	uint64_t		7234394	0					
ANR	7234407	Identifier	size		7234394	1					
ANR	7234408	AssignmentExpression	"size = strtoull ( param , & endptr , 0 )"		7234394	2		=			
ANR	7234409	Identifier	size		7234394	0					
ANR	7234410	CallExpression	"strtoull ( param , & endptr , 0 )"		7234394	1					
ANR	7234411	Callee	strtoull		7234394	0					
ANR	7234412	Identifier	strtoull		7234394	0					
ANR	7234413	ArgumentList	param		7234394	1					
ANR	7234414	Argument	param		7234394	0					
ANR	7234415	Identifier	param		7234394	0					
ANR	7234416	Argument	& endptr		7234394	1					
ANR	7234417	UnaryOperationExpression	& endptr		7234394	0					
ANR	7234418	UnaryOperator	&		7234394	0					
ANR	7234419	Identifier	endptr		7234394	1					
ANR	7234420	Argument	0		7234394	2					
ANR	7234421	PrimaryExpression	0		7234394	0					
ANR	7234422	IfStatement	if ( endptr != NULL && * endptr == '*' )		7234394	2					
ANR	7234423	Condition	endptr != NULL && * endptr == '*'	1104:7:33912:33943	7234394	0	True				
ANR	7234424	AndExpression	endptr != NULL && * endptr == '*'		7234394	0		&&			
ANR	7234425	EqualityExpression	endptr != NULL		7234394	0		!=			
ANR	7234426	Identifier	endptr		7234394	0					
ANR	7234427	Identifier	NULL		7234394	1					
ANR	7234428	EqualityExpression	* endptr == '*'		7234394	1		==			
ANR	7234429	UnaryOperationExpression	* endptr		7234394	0					
ANR	7234430	UnaryOperator	*		7234394	0					
ANR	7234431	Identifier	endptr		7234394	1					
ANR	7234432	PrimaryExpression	'*'		7234394	1					
ANR	7234433	CompoundStatement		9:6:219:247	7234394	1					
ANR	7234434	IdentifierDeclStatement	size_t len = strlen ( ++ endptr ) ;	1106:6:33957:33986	7234394	0	True				
ANR	7234435	IdentifierDecl	len = strlen ( ++ endptr )		7234394	0					
ANR	7234436	IdentifierDeclType	size_t		7234394	0					
ANR	7234437	Identifier	len		7234394	1					
ANR	7234438	AssignmentExpression	len = strlen ( ++ endptr )		7234394	2		=			
ANR	7234439	Identifier	len		7234394	0					
ANR	7234440	CallExpression	strlen ( ++ endptr )		7234394	1					
ANR	7234441	Callee	strlen		7234394	0					
ANR	7234442	Identifier	strlen		7234394	0					
ANR	7234443	ArgumentList	++ endptr		7234394	1					
ANR	7234444	Argument	++ endptr		7234394	0					
ANR	7234445	UnaryExpression	++ endptr		7234394	0					
ANR	7234446	IncDec	++		7234394	0					
ANR	7234447	Identifier	endptr		7234394	1					
ANR	7234448	IdentifierDeclStatement	size_t result = ( size_t ) size ;	1107:6:33994:34022	7234394	1	True				
ANR	7234449	IdentifierDecl	result = ( size_t ) size		7234394	0					
ANR	7234450	IdentifierDeclType	size_t		7234394	0					
ANR	7234451	Identifier	result		7234394	1					
ANR	7234452	AssignmentExpression	result = ( size_t ) size		7234394	2		=			
ANR	7234453	Identifier	result		7234394	0					
ANR	7234454	CastExpression	( size_t ) size		7234394	1					
ANR	7234455	CastTarget	size_t		7234394	0					
ANR	7234456	Identifier	size		7234394	1					
ANR	7234457	IfStatement	if ( len == 0 )		7234394	2					
ANR	7234458	Condition	len == 0	1109:10:34035:34042	7234394	0	True				
ANR	7234459	EqualityExpression	len == 0		7234394	0		==			
ANR	7234460	Identifier	len		7234394	0					
ANR	7234461	PrimaryExpression	0		7234394	1					
ANR	7234462	ExpressionStatement	len = 1	1109:20:34045:34052	7234394	1	True				
ANR	7234463	AssignmentExpression	len = 1		7234394	0		=			
ANR	7234464	Identifier	len		7234394	0					
ANR	7234465	PrimaryExpression	1		7234394	1					
ANR	7234466	IfStatement	if ( result == size && ( * profile = malloc ( result ) ) != NULL )		7234394	3					
ANR	7234467	Condition	result == size && ( * profile = malloc ( result ) ) != NULL	1112:10:34157:34209	7234394	0	True				
ANR	7234468	AndExpression	result == size && ( * profile = malloc ( result ) ) != NULL		7234394	0		&&			
ANR	7234469	EqualityExpression	result == size		7234394	0		==			
ANR	7234470	Identifier	result		7234394	0					
ANR	7234471	Identifier	size		7234394	1					
ANR	7234472	EqualityExpression	( * profile = malloc ( result ) ) != NULL		7234394	1		!=			
ANR	7234473	AssignmentExpression	* profile = malloc ( result )		7234394	0		=			
ANR	7234474	UnaryOperationExpression	* profile		7234394	0					
ANR	7234475	UnaryOperator	*		7234394	0					
ANR	7234476	Identifier	profile		7234394	1					
ANR	7234477	CallExpression	malloc ( result )		7234394	1					
ANR	7234478	Callee	malloc		7234394	0					
ANR	7234479	Identifier	malloc		7234394	0					
ANR	7234480	ArgumentList	result		7234394	1					
ANR	7234481	Argument	result		7234394	0					
ANR	7234482	Identifier	result		7234394	0					
ANR	7234483	Identifier	NULL		7234394	1					
ANR	7234484	CompoundStatement		16:9:454:478	7234394	1					
ANR	7234485	IdentifierDeclStatement	png_bytep out = * profile ;	1114:9:34229:34253	7234394	0	True				
ANR	7234486	IdentifierDecl	out = * profile		7234394	0					
ANR	7234487	IdentifierDeclType	png_bytep		7234394	0					
ANR	7234488	Identifier	out		7234394	1					
ANR	7234489	AssignmentExpression	out = * profile		7234394	2		=			
ANR	7234490	Identifier	out		7234394	0					
ANR	7234491	UnaryOperationExpression	* profile		7234394	1					
ANR	7234492	UnaryOperator	*		7234394	0					
ANR	7234493	Identifier	profile		7234394	1					
ANR	7234494	IfStatement	if ( len == 1 )		7234394	1					
ANR	7234495	Condition	len == 1	1116:13:34269:34276	7234394	0	True				
ANR	7234496	EqualityExpression	len == 1		7234394	0		==			
ANR	7234497	Identifier	len		7234394	0					
ANR	7234498	PrimaryExpression	1		7234394	1					
ANR	7234499	ExpressionStatement	"memset ( out , * endptr , result )"	1117:12:34291:34319	7234394	1	True				
ANR	7234500	CallExpression	"memset ( out , * endptr , result )"		7234394	0					
ANR	7234501	Callee	memset		7234394	0					
ANR	7234502	Identifier	memset		7234394	0					
ANR	7234503	ArgumentList	out		7234394	1					
ANR	7234504	Argument	out		7234394	0					
ANR	7234505	Identifier	out		7234394	0					
ANR	7234506	Argument	* endptr		7234394	1					
ANR	7234507	UnaryOperationExpression	* endptr		7234394	0					
ANR	7234508	UnaryOperator	*		7234394	0					
ANR	7234509	Identifier	endptr		7234394	1					
ANR	7234510	Argument	result		7234394	2					
ANR	7234511	Identifier	result		7234394	0					
ANR	7234512	ElseStatement	else		7234394	0					
ANR	7234513	CompoundStatement		22:9:570:570	7234394	0					
ANR	7234514	WhileStatement	while ( size >= len )		7234394	0					
ANR	7234515	Condition	size >= len	1121:19:34366:34376	7234394	0	True				
ANR	7234516	RelationalExpression	size >= len		7234394	0		>=			
ANR	7234517	Identifier	size		7234394	0					
ANR	7234518	Identifier	len		7234394	1					
ANR	7234519	CompoundStatement		24:12:616:616	7234394	1					
ANR	7234520	ExpressionStatement	"memcpy ( out , endptr , len )"	1123:15:34408:34432	7234394	0	True				
ANR	7234521	CallExpression	"memcpy ( out , endptr , len )"		7234394	0					
ANR	7234522	Callee	memcpy		7234394	0					
ANR	7234523	Identifier	memcpy		7234394	0					
ANR	7234524	ArgumentList	out		7234394	1					
ANR	7234525	Argument	out		7234394	0					
ANR	7234526	Identifier	out		7234394	0					
ANR	7234527	Argument	endptr		7234394	1					
ANR	7234528	Identifier	endptr		7234394	0					
ANR	7234529	Argument	len		7234394	2					
ANR	7234530	Identifier	len		7234394	0					
ANR	7234531	ExpressionStatement	out += len	1124:15:34449:34459	7234394	1	True				
ANR	7234532	AssignmentExpression	out += len		7234394	0		+=			
ANR	7234533	Identifier	out		7234394	0					
ANR	7234534	Identifier	len		7234394	1					
ANR	7234535	ExpressionStatement	size -= len	1125:15:34476:34487	7234394	2	True				
ANR	7234536	AssignmentExpression	size -= len		7234394	0		-=			
ANR	7234537	Identifier	size		7234394	0					
ANR	7234538	Identifier	len		7234394	1					
ANR	7234539	ExpressionStatement	"memcpy ( out , endptr , size )"	1127:12:34515:34540	7234394	1	True				
ANR	7234540	CallExpression	"memcpy ( out , endptr , size )"		7234394	0					
ANR	7234541	Callee	memcpy		7234394	0					
ANR	7234542	Identifier	memcpy		7234394	0					
ANR	7234543	ArgumentList	out		7234394	1					
ANR	7234544	Argument	out		7234394	0					
ANR	7234545	Identifier	out		7234394	0					
ANR	7234546	Argument	endptr		7234394	1					
ANR	7234547	Identifier	endptr		7234394	0					
ANR	7234548	Argument	size		7234394	2					
ANR	7234549	Identifier	size		7234394	0					
ANR	7234550	ReturnStatement	return result ;	1130:9:34563:34576	7234394	2	True				
ANR	7234551	Identifier	result		7234394	0					
ANR	7234552	ElseStatement	else		7234394	0					
ANR	7234553	CompoundStatement		36:6:829:829	7234394	0					
ANR	7234554	ExpressionStatement	"fprintf ( stderr , ""%s: size exceeds system limits\\n"" , param )"	1135:9:34615:34673	7234394	0	True				
ANR	7234555	CallExpression	"fprintf ( stderr , ""%s: size exceeds system limits\\n"" , param )"		7234394	0					
ANR	7234556	Callee	fprintf		7234394	0					
ANR	7234557	Identifier	fprintf		7234394	0					
ANR	7234558	ArgumentList	stderr		7234394	1					
ANR	7234559	Argument	stderr		7234394	0					
ANR	7234560	Identifier	stderr		7234394	0					
ANR	7234561	Argument	"""%s: size exceeds system limits\\n"""		7234394	1					
ANR	7234562	PrimaryExpression	"""%s: size exceeds system limits\\n"""		7234394	0					
ANR	7234563	Argument	param		7234394	2					
ANR	7234564	Identifier	param		7234394	0					
ANR	7234565	ExpressionStatement	exit ( 1 )	1136:9:34684:34691	7234394	1	True				
ANR	7234566	CallExpression	exit ( 1 )		7234394	0					
ANR	7234567	Callee	exit		7234394	0					
ANR	7234568	Identifier	exit		7234394	0					
ANR	7234569	ArgumentList	1		7234394	1					
ANR	7234570	Argument	1		7234394	0					
ANR	7234571	PrimaryExpression	1		7234394	0					
ANR	7234572	ReturnStatement	return 0 ;	1140:3:34710:34718	7234394	3	True				
ANR	7234573	PrimaryExpression	0		7234394	0					
ANR	7234574	ReturnType	static png_size_t		7234394	1					
ANR	7234575	Identifier	load_fake		7234394	2					
ANR	7234576	ParameterList	"png_charp param , png_bytepp profile"		7234394	3					
ANR	7234577	Parameter	png_charp param	1098:10:33737:33751	7234394	0	True				
ANR	7234578	ParameterType	png_charp		7234394	0					
ANR	7234579	Identifier	param		7234394	1					
ANR	7234580	Parameter	png_bytepp profile	1098:27:33754:33771	7234394	1	True				
ANR	7234581	ParameterType	png_bytepp		7234394	0					
ANR	7234582	Identifier	profile		7234394	1					
ANR	7234583	CFGEntryNode	ENTRY		7234394		True				
ANR	7234584	CFGExitNode	EXIT		7234394		True				
ANR	7234585	Symbol	malloc		7234394						
ANR	7234586	Symbol	NULL		7234394						
ANR	7234587	Symbol	endptr		7234394						
ANR	7234588	Symbol	* endptr		7234394						
ANR	7234589	Symbol	profile		7234394						
ANR	7234590	Symbol	& endptr		7234394						
ANR	7234591	Symbol	stderr		7234394						
ANR	7234592	Symbol	out		7234394						
ANR	7234593	Symbol	strtoull		7234394						
ANR	7234594	Symbol	result		7234394						
ANR	7234595	Symbol	strlen		7234394						
ANR	7234596	Symbol	size		7234394						
ANR	7234597	Symbol	len		7234394						
ANR	7234598	Symbol	param		7234394						
ANR	7234599	Symbol	* profile		7234394						
ANR	7234600	Function	check_param_count	1143:0:34723:34896							
ANR	7234601	FunctionDef	"check_param_count (int nparams , int expect)"		7234600	0					
ANR	7234602	CompoundStatement		1145:0:34778:34896	7234600	0					
ANR	7234603	IfStatement	if ( nparams != expect )		7234600	0					
ANR	7234604	Condition	nparams != expect	1146:7:34787:34803	7234600	0	True				
ANR	7234605	EqualityExpression	nparams != expect		7234600	0		!=			
ANR	7234606	Identifier	nparams		7234600	0					
ANR	7234607	Identifier	expect		7234600	1					
ANR	7234608	CompoundStatement		3:3:30:30	7234600	1					
ANR	7234609	ExpressionStatement	"fprintf ( stderr , ""bad parameter count (internal error)\\n"" )"	1148:6:34817:34874	7234600	0	True				
ANR	7234610	CallExpression	"fprintf ( stderr , ""bad parameter count (internal error)\\n"" )"		7234600	0					
ANR	7234611	Callee	fprintf		7234600	0					
ANR	7234612	Identifier	fprintf		7234600	0					
ANR	7234613	ArgumentList	stderr		7234600	1					
ANR	7234614	Argument	stderr		7234600	0					
ANR	7234615	Identifier	stderr		7234600	0					
ANR	7234616	Argument	"""bad parameter count (internal error)\\n"""		7234600	1					
ANR	7234617	PrimaryExpression	"""bad parameter count (internal error)\\n"""		7234600	0					
ANR	7234618	ExpressionStatement	exit ( 1 )	1149:6:34882:34889	7234600	1	True				
ANR	7234619	CallExpression	exit ( 1 )		7234600	0					
ANR	7234620	Callee	exit		7234600	0					
ANR	7234621	Identifier	exit		7234600	0					
ANR	7234622	ArgumentList	1		7234600	1					
ANR	7234623	Argument	1		7234600	0					
ANR	7234624	PrimaryExpression	1		7234600	0					
ANR	7234625	ReturnType	static void		7234600	1					
ANR	7234626	Identifier	check_param_count		7234600	2					
ANR	7234627	ParameterList	"int nparams , int expect"		7234600	3					
ANR	7234628	Parameter	int nparams	1144:18:34753:34763	7234600	0	True				
ANR	7234629	ParameterType	int		7234600	0					
ANR	7234630	Identifier	nparams		7234600	1					
ANR	7234631	Parameter	int expect	1144:31:34766:34775	7234600	1	True				
ANR	7234632	ParameterType	int		7234600	0					
ANR	7234633	Identifier	expect		7234600	1					
ANR	7234634	CFGEntryNode	ENTRY		7234600		True				
ANR	7234635	CFGExitNode	EXIT		7234600		True				
ANR	7234636	Symbol	expect		7234600						
ANR	7234637	Symbol	nparams		7234600						
ANR	7234638	Symbol	stderr		7234600						
ANR	7234639	Function	insert_iCCP	1153:0:34899:37538							
ANR	7234640	FunctionDef	"insert_iCCP (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7234639	0					
ANR	7234641	CompoundStatement		1156:0:34999:37538	7234639	0					
ANR	7234642	IdentifierDeclStatement	png_bytep profile = NULL ;	1157:3:35004:35028	7234639	0	True				
ANR	7234643	IdentifierDecl	profile = NULL		7234639	0					
ANR	7234644	IdentifierDeclType	png_bytep		7234639	0					
ANR	7234645	Identifier	profile		7234639	1					
ANR	7234646	AssignmentExpression	profile = NULL		7234639	2		=			
ANR	7234647	Identifier	NULL		7234639	0					
ANR	7234648	Identifier	NULL		7234639	1					
ANR	7234649	IdentifierDeclStatement	png_uint_32 proflen = 0 ;	1158:3:35033:35056	7234639	1	True				
ANR	7234650	IdentifierDecl	proflen = 0		7234639	0					
ANR	7234651	IdentifierDeclType	png_uint_32		7234639	0					
ANR	7234652	Identifier	proflen		7234639	1					
ANR	7234653	AssignmentExpression	proflen = 0		7234639	2		=			
ANR	7234654	Identifier	proflen		7234639	0					
ANR	7234655	PrimaryExpression	0		7234639	1					
ANR	7234656	IdentifierDeclStatement	int result ;	1159:3:35061:35071	7234639	2	True				
ANR	7234657	IdentifierDecl	result		7234639	0					
ANR	7234658	IdentifierDeclType	int		7234639	0					
ANR	7234659	Identifier	result		7234639	1					
ANR	7234660	ExpressionStatement	"check_param_count ( nparams , 2 )"	1161:3:35077:35106	7234639	3	True				
ANR	7234661	CallExpression	"check_param_count ( nparams , 2 )"		7234639	0					
ANR	7234662	Callee	check_param_count		7234639	0					
ANR	7234663	Identifier	check_param_count		7234639	0					
ANR	7234664	ArgumentList	nparams		7234639	1					
ANR	7234665	Argument	nparams		7234639	0					
ANR	7234666	Identifier	nparams		7234639	0					
ANR	7234667	Argument	2		7234639	1					
ANR	7234668	PrimaryExpression	2		7234639	0					
ANR	7234669	SwitchStatement	switch ( params [ 1 ] [ 0 ] )		7234639	4					
ANR	7234670	Condition	params [ 1 ] [ 0 ]	1163:11:35120:35131	7234639	0	True				
ANR	7234671	ArrayIndexing	params [ 1 ] [ 0 ]		7234639	0					
ANR	7234672	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234673	Identifier	params		7234639	0					
ANR	7234674	PrimaryExpression	1		7234639	1					
ANR	7234675	PrimaryExpression	0		7234639	1					
ANR	7234676	CompoundStatement		9:3:137:137	7234639	1					
ANR	7234677	Label	case '<' :	1165:6:35145:35153	7234639	0	True				
ANR	7234678	CompoundStatement		12:12:178:231	7234639	1					
ANR	7234679	IdentifierDeclStatement	"png_size_t filelen = load_file ( params [ 1 ] + 1 , & profile ) ;"	1167:12:35178:35231	7234639	0	True				
ANR	7234680	IdentifierDecl	"filelen = load_file ( params [ 1 ] + 1 , & profile )"		7234639	0					
ANR	7234681	IdentifierDeclType	png_size_t		7234639	0					
ANR	7234682	Identifier	filelen		7234639	1					
ANR	7234683	AssignmentExpression	"filelen = load_file ( params [ 1 ] + 1 , & profile )"		7234639	2		=			
ANR	7234684	Identifier	filelen		7234639	0					
ANR	7234685	CallExpression	"load_file ( params [ 1 ] + 1 , & profile )"		7234639	1					
ANR	7234686	Callee	load_file		7234639	0					
ANR	7234687	Identifier	load_file		7234639	0					
ANR	7234688	ArgumentList	params [ 1 ] + 1		7234639	1					
ANR	7234689	Argument	params [ 1 ] + 1		7234639	0					
ANR	7234690	AdditiveExpression	params [ 1 ] + 1		7234639	0		+			
ANR	7234691	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234692	Identifier	params		7234639	0					
ANR	7234693	PrimaryExpression	1		7234639	1					
ANR	7234694	PrimaryExpression	1		7234639	1					
ANR	7234695	Argument	& profile		7234639	1					
ANR	7234696	UnaryOperationExpression	& profile		7234639	0					
ANR	7234697	UnaryOperator	&		7234639	0					
ANR	7234698	Identifier	profile		7234639	1					
ANR	7234699	IfStatement	if ( filelen > 0xfffffffc )		7234639	1					
ANR	7234700	Condition	filelen > 0xfffffffc	1168:16:35249:35268	7234639	0	True				
ANR	7234701	RelationalExpression	filelen > 0xfffffffc		7234639	0		>			
ANR	7234702	Identifier	filelen		7234639	0					
ANR	7234703	PrimaryExpression	0xfffffffc		7234639	1					
ANR	7234704	CompoundStatement		14:12:312:312	7234639	1					
ANR	7234705	ExpressionStatement	"fprintf ( stderr , ""%s: file too long (%lu) for an ICC profile\\n"" , params [ 1 ] + 1 , ( unsigned long ) filelen )"	1170:15:35329:35447	7234639	0	True				
ANR	7234706	CallExpression	"fprintf ( stderr , ""%s: file too long (%lu) for an ICC profile\\n"" , params [ 1 ] + 1 , ( unsigned long ) filelen )"		7234639	0					
ANR	7234707	Callee	fprintf		7234639	0					
ANR	7234708	Identifier	fprintf		7234639	0					
ANR	7234709	ArgumentList	stderr		7234639	1					
ANR	7234710	Argument	stderr		7234639	0					
ANR	7234711	Identifier	stderr		7234639	0					
ANR	7234712	Argument	"""%s: file too long (%lu) for an ICC profile\\n"""		7234639	1					
ANR	7234713	PrimaryExpression	"""%s: file too long (%lu) for an ICC profile\\n"""		7234639	0					
ANR	7234714	Argument	params [ 1 ] + 1		7234639	2					
ANR	7234715	AdditiveExpression	params [ 1 ] + 1		7234639	0		+			
ANR	7234716	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234717	Identifier	params		7234639	0					
ANR	7234718	PrimaryExpression	1		7234639	1					
ANR	7234719	PrimaryExpression	1		7234639	1					
ANR	7234720	Argument	( unsigned long ) filelen		7234639	3					
ANR	7234721	CastExpression	( unsigned long ) filelen		7234639	0					
ANR	7234722	CastTarget	unsigned long		7234639	0					
ANR	7234723	Identifier	filelen		7234639	1					
ANR	7234724	ExpressionStatement	exit ( 1 )	1172:15:35464:35471	7234639	1	True				
ANR	7234725	CallExpression	exit ( 1 )		7234639	0					
ANR	7234726	Callee	exit		7234639	0					
ANR	7234727	Identifier	exit		7234639	0					
ANR	7234728	ArgumentList	1		7234639	1					
ANR	7234729	Argument	1		7234639	0					
ANR	7234730	PrimaryExpression	1		7234639	0					
ANR	7234731	ExpressionStatement	proflen = ( png_uint_32 ) filelen	1175:12:35500:35530	7234639	2	True				
ANR	7234732	AssignmentExpression	proflen = ( png_uint_32 ) filelen		7234639	0		=			
ANR	7234733	Identifier	proflen		7234639	0					
ANR	7234734	CastExpression	( png_uint_32 ) filelen		7234639	1					
ANR	7234735	CastTarget	png_uint_32		7234639	0					
ANR	7234736	Identifier	filelen		7234639	1					
ANR	7234737	BreakStatement	break ;	1177:9:35552:35557	7234639	2	True				
ANR	7234738	Label	case '0' :	1179:6:35566:35574	7234639	3	True				
ANR	7234739	Label	case '1' :	1179:16:35576:35584	7234639	4	True				
ANR	7234740	Label	case '2' :	1179:26:35586:35594	7234639	5	True				
ANR	7234741	Label	case '3' :	1179:36:35596:35604	7234639	6	True				
ANR	7234742	Label	case '4' :	1179:46:35606:35614	7234639	7	True				
ANR	7234743	Label	case '5' :	1180:6:35622:35630	7234639	8	True				
ANR	7234744	Label	case '6' :	1180:16:35632:35640	7234639	9	True				
ANR	7234745	Label	case '7' :	1180:26:35642:35650	7234639	10	True				
ANR	7234746	Label	case '8' :	1180:36:35652:35660	7234639	11	True				
ANR	7234747	Label	case '9' :	1180:46:35662:35670	7234639	12	True				
ANR	7234748	CompoundStatement		27:12:695:747	7234639	13					
ANR	7234749	IdentifierDeclStatement	"png_size_t fake_len = load_fake ( params [ 1 ] , & profile ) ;"	1182:12:35695:35747	7234639	0	True				
ANR	7234750	IdentifierDecl	"fake_len = load_fake ( params [ 1 ] , & profile )"		7234639	0					
ANR	7234751	IdentifierDeclType	png_size_t		7234639	0					
ANR	7234752	Identifier	fake_len		7234639	1					
ANR	7234753	AssignmentExpression	"fake_len = load_fake ( params [ 1 ] , & profile )"		7234639	2		=			
ANR	7234754	Identifier	fake_len		7234639	0					
ANR	7234755	CallExpression	"load_fake ( params [ 1 ] , & profile )"		7234639	1					
ANR	7234756	Callee	load_fake		7234639	0					
ANR	7234757	Identifier	load_fake		7234639	0					
ANR	7234758	ArgumentList	params [ 1 ]		7234639	1					
ANR	7234759	Argument	params [ 1 ]		7234639	0					
ANR	7234760	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234761	Identifier	params		7234639	0					
ANR	7234762	PrimaryExpression	1		7234639	1					
ANR	7234763	Argument	& profile		7234639	1					
ANR	7234764	UnaryOperationExpression	& profile		7234639	0					
ANR	7234765	UnaryOperator	&		7234639	0					
ANR	7234766	Identifier	profile		7234639	1					
ANR	7234767	IfStatement	if ( fake_len > 0 )		7234639	1					
ANR	7234768	Condition	fake_len > 0	1184:16:35766:35777	7234639	0	True				
ANR	7234769	RelationalExpression	fake_len > 0		7234639	0		>			
ANR	7234770	Identifier	fake_len		7234639	0					
ANR	7234771	PrimaryExpression	0		7234639	1					
ANR	7234772	CompoundStatement		30:12:822:822	7234639	1					
ANR	7234773	IfStatement	if ( fake_len > 0xffffffff )		7234639	0					
ANR	7234774	Condition	fake_len > 0xffffffff	1186:19:35843:35863	7234639	0	True				
ANR	7234775	RelationalExpression	fake_len > 0xffffffff		7234639	0		>			
ANR	7234776	Identifier	fake_len		7234639	0					
ANR	7234777	PrimaryExpression	0xffffffff		7234639	1					
ANR	7234778	CompoundStatement		32:15:910:910	7234639	1					
ANR	7234779	ExpressionStatement	"fprintf ( stderr , ""%s: fake data too long (%lu) for an ICC profile\\n"" , params [ 1 ] , ( unsigned long ) fake_len )"	1188:18:35930:36076	7234639	0	True				
ANR	7234780	CallExpression	"fprintf ( stderr , ""%s: fake data too long (%lu) for an ICC profile\\n"" , params [ 1 ] , ( unsigned long ) fake_len )"		7234639	0					
ANR	7234781	Callee	fprintf		7234639	0					
ANR	7234782	Identifier	fprintf		7234639	0					
ANR	7234783	ArgumentList	stderr		7234639	1					
ANR	7234784	Argument	stderr		7234639	0					
ANR	7234785	Identifier	stderr		7234639	0					
ANR	7234786	Argument	"""%s: fake data too long (%lu) for an ICC profile\\n"""		7234639	1					
ANR	7234787	PrimaryExpression	"""%s: fake data too long (%lu) for an ICC profile\\n"""		7234639	0					
ANR	7234788	Argument	params [ 1 ]		7234639	2					
ANR	7234789	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234790	Identifier	params		7234639	0					
ANR	7234791	PrimaryExpression	1		7234639	1					
ANR	7234792	Argument	( unsigned long ) fake_len		7234639	3					
ANR	7234793	CastExpression	( unsigned long ) fake_len		7234639	0					
ANR	7234794	CastTarget	unsigned long		7234639	0					
ANR	7234795	Identifier	fake_len		7234639	1					
ANR	7234796	ExpressionStatement	exit ( 1 )	1191:18:36096:36103	7234639	1	True				
ANR	7234797	CallExpression	exit ( 1 )		7234639	0					
ANR	7234798	Callee	exit		7234639	0					
ANR	7234799	Identifier	exit		7234639	0					
ANR	7234800	ArgumentList	1		7234639	1					
ANR	7234801	Argument	1		7234639	0					
ANR	7234802	PrimaryExpression	1		7234639	0					
ANR	7234803	ExpressionStatement	proflen = ( png_uint_32 ) ( fake_len & ~3U )	1193:15:36137:36176	7234639	1	True				
ANR	7234804	AssignmentExpression	proflen = ( png_uint_32 ) ( fake_len & ~3U )		7234639	0		=			
ANR	7234805	Identifier	proflen		7234639	0					
ANR	7234806	CastExpression	( png_uint_32 ) ( fake_len & ~3U )		7234639	1					
ANR	7234807	CastTarget	png_uint_32		7234639	0					
ANR	7234808	BitAndExpression	fake_len & ~3U		7234639	1		&			
ANR	7234809	Identifier	fake_len		7234639	0					
ANR	7234810	Identifier	~3U		7234639	1					
ANR	7234811	ExpressionStatement	"png_save_uint_32 ( profile , proflen )"	1195:15:36248:36282	7234639	2	True				
ANR	7234812	CallExpression	"png_save_uint_32 ( profile , proflen )"		7234639	0					
ANR	7234813	Callee	png_save_uint_32		7234639	0					
ANR	7234814	Identifier	png_save_uint_32		7234639	0					
ANR	7234815	ArgumentList	profile		7234639	1					
ANR	7234816	Argument	profile		7234639	0					
ANR	7234817	Identifier	profile		7234639	0					
ANR	7234818	Argument	proflen		7234639	1					
ANR	7234819	Identifier	proflen		7234639	0					
ANR	7234820	BreakStatement	break ;	1196:15:36299:36304	7234639	3	True				
ANR	7234821	Label	default :	1200:6:36338:36345	7234639	14	True				
ANR	7234822	Identifier	default		7234639	0					
ANR	7234823	ExpressionStatement	"fprintf ( stderr , ""--insert iCCP \\""%s\\"": unrecognized\\n"" , params [ 1 ] )"	1201:9:36356:36422	7234639	15	True				
ANR	7234824	CallExpression	"fprintf ( stderr , ""--insert iCCP \\""%s\\"": unrecognized\\n"" , params [ 1 ] )"		7234639	0					
ANR	7234825	Callee	fprintf		7234639	0					
ANR	7234826	Identifier	fprintf		7234639	0					
ANR	7234827	ArgumentList	stderr		7234639	1					
ANR	7234828	Argument	stderr		7234639	0					
ANR	7234829	Identifier	stderr		7234639	0					
ANR	7234830	Argument	"""--insert iCCP \\""%s\\"": unrecognized\\n"""		7234639	1					
ANR	7234831	PrimaryExpression	"""--insert iCCP \\""%s\\"": unrecognized\\n"""		7234639	0					
ANR	7234832	Argument	params [ 1 ]		7234639	2					
ANR	7234833	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234834	Identifier	params		7234639	0					
ANR	7234835	PrimaryExpression	1		7234639	1					
ANR	7234836	ExpressionStatement	"fprintf ( stderr , ""  use '<' to read a file: \\""<filename\\""\\n"" )"	1202:9:36433:36493	7234639	16	True				
ANR	7234837	CallExpression	"fprintf ( stderr , ""  use '<' to read a file: \\""<filename\\""\\n"" )"		7234639	0					
ANR	7234838	Callee	fprintf		7234639	0					
ANR	7234839	Identifier	fprintf		7234639	0					
ANR	7234840	ArgumentList	stderr		7234639	1					
ANR	7234841	Argument	stderr		7234639	0					
ANR	7234842	Identifier	stderr		7234639	0					
ANR	7234843	Argument	"""  use '<' to read a file: \\""<filename\\""\\n"""		7234639	1					
ANR	7234844	PrimaryExpression	"""  use '<' to read a file: \\""<filename\\""\\n"""		7234639	0					
ANR	7234845	ExpressionStatement	exit ( 1 )	1203:9:36504:36511	7234639	17	True				
ANR	7234846	CallExpression	exit ( 1 )		7234639	0					
ANR	7234847	Callee	exit		7234639	0					
ANR	7234848	Identifier	exit		7234639	0					
ANR	7234849	ArgumentList	1		7234639	1					
ANR	7234850	Argument	1		7234639	0					
ANR	7234851	PrimaryExpression	1		7234639	0					
ANR	7234852	ExpressionStatement	result = 1	1206:3:36522:36532	7234639	5	True				
ANR	7234853	AssignmentExpression	result = 1		7234639	0		=			
ANR	7234854	Identifier	result		7234639	0					
ANR	7234855	PrimaryExpression	1		7234639	1					
ANR	7234856	IfStatement	if ( proflen & 3 )		7234639	6					
ANR	7234857	Condition	proflen & 3	1208:7:36542:36552	7234639	0	True				
ANR	7234858	BitAndExpression	proflen & 3		7234639	0		&			
ANR	7234859	Identifier	proflen		7234639	0					
ANR	7234860	PrimaryExpression	3		7234639	1					
ANR	7234861	CompoundStatement		54:3:1558:1558	7234639	1					
ANR	7234862	ExpressionStatement	"fprintf ( stderr , ""makepng: --insert iCCP %s: profile length made a multiple of 4\\n"" , params [ 1 ] )"	1210:6:36566:36678	7234639	0	True				
ANR	7234863	CallExpression	"fprintf ( stderr , ""makepng: --insert iCCP %s: profile length made a multiple of 4\\n"" , params [ 1 ] )"		7234639	0					
ANR	7234864	Callee	fprintf		7234639	0					
ANR	7234865	Identifier	fprintf		7234639	0					
ANR	7234866	ArgumentList	stderr		7234639	1					
ANR	7234867	Argument	stderr		7234639	0					
ANR	7234868	Identifier	stderr		7234639	0					
ANR	7234869	Argument	"""makepng: --insert iCCP %s: profile length made a multiple of 4\\n"""		7234639	1					
ANR	7234870	PrimaryExpression	"""makepng: --insert iCCP %s: profile length made a multiple of 4\\n"""		7234639	0					
ANR	7234871	Argument	params [ 1 ]		7234639	2					
ANR	7234872	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234873	Identifier	params		7234639	0					
ANR	7234874	PrimaryExpression	1		7234639	1					
ANR	7234875	WhileStatement	while ( proflen & 3 )		7234639	1					
ANR	7234876	Condition	proflen & 3	1217:13:36819:36829	7234639	0	True				
ANR	7234877	BitAndExpression	proflen & 3		7234639	0		&			
ANR	7234878	Identifier	proflen		7234639	0					
ANR	7234879	PrimaryExpression	3		7234639	1					
ANR	7234880	ExpressionStatement	profile [ proflen ++ ] = 0	1218:9:36841:36863	7234639	1	True				
ANR	7234881	AssignmentExpression	profile [ proflen ++ ] = 0		7234639	0		=			
ANR	7234882	ArrayIndexing	profile [ proflen ++ ]		7234639	0					
ANR	7234883	Identifier	profile		7234639	0					
ANR	7234884	PostIncDecOperationExpression	proflen ++		7234639	1					
ANR	7234885	Identifier	proflen		7234639	0					
ANR	7234886	IncDec	++		7234639	1					
ANR	7234887	PrimaryExpression	0		7234639	1					
ANR	7234888	IfStatement	if ( profile != NULL && proflen > 3 )		7234639	7					
ANR	7234889	Condition	profile != NULL && proflen > 3	1221:7:36878:36907	7234639	0	True				
ANR	7234890	AndExpression	profile != NULL && proflen > 3		7234639	0		&&			
ANR	7234891	EqualityExpression	profile != NULL		7234639	0		!=			
ANR	7234892	Identifier	profile		7234639	0					
ANR	7234893	Identifier	NULL		7234639	1					
ANR	7234894	RelationalExpression	proflen > 3		7234639	1		>			
ANR	7234895	Identifier	proflen		7234639	0					
ANR	7234896	PrimaryExpression	3		7234639	1					
ANR	7234897	CompoundStatement		68:6:1921:1971	7234639	1					
ANR	7234898	IdentifierDeclStatement	png_uint_32 prof_header = png_get_uint_32 ( profile ) ;	1223:6:36921:36971	7234639	0	True				
ANR	7234899	IdentifierDecl	prof_header = png_get_uint_32 ( profile )		7234639	0					
ANR	7234900	IdentifierDeclType	png_uint_32		7234639	0					
ANR	7234901	Identifier	prof_header		7234639	1					
ANR	7234902	AssignmentExpression	prof_header = png_get_uint_32 ( profile )		7234639	2		=			
ANR	7234903	Identifier	prof_header		7234639	0					
ANR	7234904	CallExpression	png_get_uint_32 ( profile )		7234639	1					
ANR	7234905	Callee	png_get_uint_32		7234639	0					
ANR	7234906	Identifier	png_get_uint_32		7234639	0					
ANR	7234907	ArgumentList	profile		7234639	1					
ANR	7234908	Argument	profile		7234639	0					
ANR	7234909	Identifier	profile		7234639	0					
ANR	7234910	IfStatement	if ( prof_header != proflen )		7234639	1					
ANR	7234911	Condition	prof_header != proflen	1225:10:36984:37005	7234639	0	True				
ANR	7234912	EqualityExpression	prof_header != proflen		7234639	0		!=			
ANR	7234913	Identifier	prof_header		7234639	0					
ANR	7234914	Identifier	proflen		7234639	1					
ANR	7234915	CompoundStatement		71:6:2014:2014	7234639	1					
ANR	7234916	ExpressionStatement	"fprintf ( stderr , ""--insert iCCP %s: profile length field wrong:\\n"" , params [ 1 ] )"	1227:9:37025:37114	7234639	0	True				
ANR	7234917	CallExpression	"fprintf ( stderr , ""--insert iCCP %s: profile length field wrong:\\n"" , params [ 1 ] )"		7234639	0					
ANR	7234918	Callee	fprintf		7234639	0					
ANR	7234919	Identifier	fprintf		7234639	0					
ANR	7234920	ArgumentList	stderr		7234639	1					
ANR	7234921	Argument	stderr		7234639	0					
ANR	7234922	Identifier	stderr		7234639	0					
ANR	7234923	Argument	"""--insert iCCP %s: profile length field wrong:\\n"""		7234639	1					
ANR	7234924	PrimaryExpression	"""--insert iCCP %s: profile length field wrong:\\n"""		7234639	0					
ANR	7234925	Argument	params [ 1 ]		7234639	2					
ANR	7234926	ArrayIndexing	params [ 1 ]		7234639	0					
ANR	7234927	Identifier	params		7234639	0					
ANR	7234928	PrimaryExpression	1		7234639	1					
ANR	7234929	ExpressionStatement	"fprintf ( stderr , ""  actual %lu, recorded value %lu (corrected)\\n"" , ( unsigned long ) proflen , ( unsigned long ) prof_header )"	1229:9:37125:37254	7234639	1	True				
ANR	7234930	CallExpression	"fprintf ( stderr , ""  actual %lu, recorded value %lu (corrected)\\n"" , ( unsigned long ) proflen , ( unsigned long ) prof_header )"		7234639	0					
ANR	7234931	Callee	fprintf		7234639	0					
ANR	7234932	Identifier	fprintf		7234639	0					
ANR	7234933	ArgumentList	stderr		7234639	1					
ANR	7234934	Argument	stderr		7234639	0					
ANR	7234935	Identifier	stderr		7234639	0					
ANR	7234936	Argument	"""  actual %lu, recorded value %lu (corrected)\\n"""		7234639	1					
ANR	7234937	PrimaryExpression	"""  actual %lu, recorded value %lu (corrected)\\n"""		7234639	0					
ANR	7234938	Argument	( unsigned long ) proflen		7234639	2					
ANR	7234939	CastExpression	( unsigned long ) proflen		7234639	0					
ANR	7234940	CastTarget	unsigned long		7234639	0					
ANR	7234941	Identifier	proflen		7234639	1					
ANR	7234942	Argument	( unsigned long ) prof_header		7234639	3					
ANR	7234943	CastExpression	( unsigned long ) prof_header		7234639	0					
ANR	7234944	CastTarget	unsigned long		7234639	0					
ANR	7234945	Identifier	prof_header		7234639	1					
ANR	7234946	ExpressionStatement	"png_save_uint_32 ( profile , proflen )"	1231:9:37265:37299	7234639	2	True				
ANR	7234947	CallExpression	"png_save_uint_32 ( profile , proflen )"		7234639	0					
ANR	7234948	Callee	png_save_uint_32		7234639	0					
ANR	7234949	Identifier	png_save_uint_32		7234639	0					
ANR	7234950	ArgumentList	profile		7234639	1					
ANR	7234951	Argument	profile		7234639	0					
ANR	7234952	Identifier	profile		7234639	0					
ANR	7234953	Argument	proflen		7234639	1					
ANR	7234954	Identifier	proflen		7234639	0					
ANR	7234955	IfStatement	if ( result && profile != NULL && proflen >= 4 )		7234639	8					
ANR	7234956	Condition	result && profile != NULL && proflen >= 4	1235:7:37322:37361	7234639	0	True				
ANR	7234957	AndExpression	result && profile != NULL && proflen >= 4		7234639	0		&&			
ANR	7234958	Identifier	result		7234639	0					
ANR	7234959	AndExpression	profile != NULL && proflen >= 4		7234639	1		&&			
ANR	7234960	EqualityExpression	profile != NULL		7234639	0		!=			
ANR	7234961	Identifier	profile		7234639	0					
ANR	7234962	Identifier	NULL		7234639	1					
ANR	7234963	RelationalExpression	proflen >= 4		7234639	1		>=			
ANR	7234964	Identifier	proflen		7234639	0					
ANR	7234965	PrimaryExpression	4		7234639	1					
ANR	7234966	ExpressionStatement	"png_set_iCCP ( png_ptr , info_ptr , params [ 0 ] , PNG_COMPRESSION_TYPE_BASE , profile , proflen )"	1236:6:37370:37466	7234639	1	True				
ANR	7234967	CallExpression	"png_set_iCCP ( png_ptr , info_ptr , params [ 0 ] , PNG_COMPRESSION_TYPE_BASE , profile , proflen )"		7234639	0					
ANR	7234968	Callee	png_set_iCCP		7234639	0					
ANR	7234969	Identifier	png_set_iCCP		7234639	0					
ANR	7234970	ArgumentList	png_ptr		7234639	1					
ANR	7234971	Argument	png_ptr		7234639	0					
ANR	7234972	Identifier	png_ptr		7234639	0					
ANR	7234973	Argument	info_ptr		7234639	1					
ANR	7234974	Identifier	info_ptr		7234639	0					
ANR	7234975	Argument	params [ 0 ]		7234639	2					
ANR	7234976	ArrayIndexing	params [ 0 ]		7234639	0					
ANR	7234977	Identifier	params		7234639	0					
ANR	7234978	PrimaryExpression	0		7234639	1					
ANR	7234979	Argument	PNG_COMPRESSION_TYPE_BASE		7234639	3					
ANR	7234980	Identifier	PNG_COMPRESSION_TYPE_BASE		7234639	0					
ANR	7234981	Argument	profile		7234639	4					
ANR	7234982	Identifier	profile		7234639	0					
ANR	7234983	Argument	proflen		7234639	5					
ANR	7234984	Identifier	proflen		7234639	0					
ANR	7234985	IfStatement	if ( profile )		7234639	9					
ANR	7234986	Condition	profile	1239:7:37476:37482	7234639	0	True				
ANR	7234987	Identifier	profile		7234639	0					
ANR	7234988	ExpressionStatement	free ( profile )	1240:6:37491:37504	7234639	1	True				
ANR	7234989	CallExpression	free ( profile )		7234639	0					
ANR	7234990	Callee	free		7234639	0					
ANR	7234991	Identifier	free		7234639	0					
ANR	7234992	ArgumentList	profile		7234639	1					
ANR	7234993	Argument	profile		7234639	0					
ANR	7234994	Identifier	profile		7234639	0					
ANR	7234995	IfStatement	if ( ! result )		7234639	10					
ANR	7234996	Condition	! result	1242:7:37514:37520	7234639	0	True				
ANR	7234997	UnaryOperationExpression	! result		7234639	0					
ANR	7234998	UnaryOperator	!		7234639	0					
ANR	7234999	Identifier	result		7234639	1					
ANR	7235000	ExpressionStatement	exit ( 1 )	1243:6:37529:37536	7234639	1	True				
ANR	7235001	CallExpression	exit ( 1 )		7234639	0					
ANR	7235002	Callee	exit		7234639	0					
ANR	7235003	Identifier	exit		7234639	0					
ANR	7235004	ArgumentList	1		7234639	1					
ANR	7235005	Argument	1		7234639	0					
ANR	7235006	PrimaryExpression	1		7234639	0					
ANR	7235007	ReturnType	static void		7234639	1					
ANR	7235008	Identifier	insert_iCCP		7234639	2					
ANR	7235009	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7234639	3					
ANR	7235010	Parameter	png_structp png_ptr	1154:12:34923:34941	7234639	0	True				
ANR	7235011	ParameterType	png_structp		7234639	0					
ANR	7235012	Identifier	png_ptr		7234639	1					
ANR	7235013	Parameter	png_infop info_ptr	1154:33:34944:34961	7234639	1	True				
ANR	7235014	ParameterType	png_infop		7234639	0					
ANR	7235015	Identifier	info_ptr		7234639	1					
ANR	7235016	Parameter	int nparams	1154:53:34964:34974	7234639	2	True				
ANR	7235017	ParameterType	int		7234639	0					
ANR	7235018	Identifier	nparams		7234639	1					
ANR	7235019	Parameter	png_charpp params	1155:3:34980:34996	7234639	3	True				
ANR	7235020	ParameterType	png_charpp		7234639	0					
ANR	7235021	Identifier	params		7234639	1					
ANR	7235022	CFGEntryNode	ENTRY		7234639		True				
ANR	7235023	CFGExitNode	EXIT		7234639		True				
ANR	7235024	Symbol	~3U		7234639						
ANR	7235025	Symbol	load_fake		7234639						
ANR	7235026	Symbol	NULL		7234639						
ANR	7235027	Symbol	profile		7234639						
ANR	7235028	Symbol	PNG_COMPRESSION_TYPE_BASE		7234639						
ANR	7235029	Symbol	nparams		7234639						
ANR	7235030	Symbol	params		7234639						
ANR	7235031	Symbol	* * params		7234639						
ANR	7235032	Symbol	stderr		7234639						
ANR	7235033	Symbol	fake_len		7234639						
ANR	7235034	Symbol	png_get_uint_32		7234639						
ANR	7235035	Symbol	result		7234639						
ANR	7235036	Symbol	filelen		7234639						
ANR	7235037	Symbol	proflen		7234639						
ANR	7235038	Symbol	& profile		7234639						
ANR	7235039	Symbol	load_file		7234639						
ANR	7235040	Symbol	prof_header		7234639						
ANR	7235041	Symbol	info_ptr		7234639						
ANR	7235042	Symbol	* profile		7234639						
ANR	7235043	Symbol	png_ptr		7234639						
ANR	7235044	Symbol	* params		7234639						
ANR	7235045	Function	clear_text	1246:0:37541:37843							
ANR	7235046	FunctionDef	"clear_text (png_text * text , png_charp keyword)"		7235045	0					
ANR	7235047	CompoundStatement		1248:0:37599:37843	7235045	0					
ANR	7235048	ExpressionStatement	text -> compression = - 1	1249:3:37604:37626	7235045	0	True				
ANR	7235049	AssignmentExpression	text -> compression = - 1		7235045	0		=			
ANR	7235050	PtrMemberAccess	text -> compression		7235045	0					
ANR	7235051	Identifier	text		7235045	0					
ANR	7235052	Identifier	compression		7235045	1					
ANR	7235053	UnaryOperationExpression	- 1		7235045	1					
ANR	7235054	UnaryOperator	-		7235045	0					
ANR	7235055	PrimaryExpression	1		7235045	1					
ANR	7235056	ExpressionStatement	text -> key = keyword	1250:3:37642:37661	7235045	1	True				
ANR	7235057	AssignmentExpression	text -> key = keyword		7235045	0		=			
ANR	7235058	PtrMemberAccess	text -> key		7235045	0					
ANR	7235059	Identifier	text		7235045	0					
ANR	7235060	Identifier	key		7235045	1					
ANR	7235061	Identifier	keyword		7235045	1					
ANR	7235062	ExpressionStatement	text -> text = NULL	1251:3:37666:37683	7235045	2	True				
ANR	7235063	AssignmentExpression	text -> text = NULL		7235045	0		=			
ANR	7235064	PtrMemberAccess	text -> text		7235045	0					
ANR	7235065	Identifier	text		7235045	0					
ANR	7235066	Identifier	text		7235045	1					
ANR	7235067	Identifier	NULL		7235045	1					
ANR	7235068	ExpressionStatement	text -> text_length = 0	1252:3:37688:37709	7235045	3	True				
ANR	7235069	AssignmentExpression	text -> text_length = 0		7235045	0		=			
ANR	7235070	PtrMemberAccess	text -> text_length		7235045	0					
ANR	7235071	Identifier	text		7235045	0					
ANR	7235072	Identifier	text_length		7235045	1					
ANR	7235073	PrimaryExpression	0		7235045	1					
ANR	7235074	ExpressionStatement	text -> itxt_length = 0	1253:3:37743:37764	7235045	4	True				
ANR	7235075	AssignmentExpression	text -> itxt_length = 0		7235045	0		=			
ANR	7235076	PtrMemberAccess	text -> itxt_length		7235045	0					
ANR	7235077	Identifier	text		7235045	0					
ANR	7235078	Identifier	itxt_length		7235045	1					
ANR	7235079	PrimaryExpression	0		7235045	1					
ANR	7235080	ExpressionStatement	text -> lang = NULL	1254:3:37798:37815	7235045	5	True				
ANR	7235081	AssignmentExpression	text -> lang = NULL		7235045	0		=			
ANR	7235082	PtrMemberAccess	text -> lang		7235045	0					
ANR	7235083	Identifier	text		7235045	0					
ANR	7235084	Identifier	lang		7235045	1					
ANR	7235085	Identifier	NULL		7235045	1					
ANR	7235086	ExpressionStatement	text -> lang_key = NULL	1255:3:37820:37841	7235045	6	True				
ANR	7235087	AssignmentExpression	text -> lang_key = NULL		7235045	0		=			
ANR	7235088	PtrMemberAccess	text -> lang_key		7235045	0					
ANR	7235089	Identifier	text		7235045	0					
ANR	7235090	Identifier	lang_key		7235045	1					
ANR	7235091	Identifier	NULL		7235045	1					
ANR	7235092	ReturnType	static void		7235045	1					
ANR	7235093	Identifier	clear_text		7235045	2					
ANR	7235094	ParameterList	"png_text * text , png_charp keyword"		7235045	3					
ANR	7235095	Parameter	png_text * text	1247:11:37564:37577	7235045	0	True				
ANR	7235096	ParameterType	png_text *		7235045	0					
ANR	7235097	Identifier	text		7235045	1					
ANR	7235098	Parameter	png_charp keyword	1247:27:37580:37596	7235045	1	True				
ANR	7235099	ParameterType	png_charp		7235045	0					
ANR	7235100	Identifier	keyword		7235045	1					
ANR	7235101	CFGEntryNode	ENTRY		7235045		True				
ANR	7235102	CFGExitNode	EXIT		7235045		True				
ANR	7235103	Symbol	text -> key		7235045						
ANR	7235104	Symbol	text -> lang		7235045						
ANR	7235105	Symbol	NULL		7235045						
ANR	7235106	Symbol	text -> compression		7235045						
ANR	7235107	Symbol	text -> text		7235045						
ANR	7235108	Symbol	text -> text_length		7235045						
ANR	7235109	Symbol	text -> itxt_length		7235045						
ANR	7235110	Symbol	* text		7235045						
ANR	7235111	Symbol	text		7235045						
ANR	7235112	Symbol	keyword		7235045						
ANR	7235113	Symbol	text -> lang_key		7235045						
ANR	7235114	Function	set_text	1258:0:37846:38758							
ANR	7235115	FunctionDef	"set_text (png_structp png_ptr , png_infop info_ptr , png_textp text , png_charp param)"		7235114	0					
ANR	7235116	CompoundStatement		1261:0:37944:38758	7235114	0					
ANR	7235117	SwitchStatement	switch ( param [ 0 ] )		7235114	0					
ANR	7235118	Condition	param [ 0 ]	1262:11:37957:37964	7235114	0	True				
ANR	7235119	ArrayIndexing	param [ 0 ]		7235114	0					
ANR	7235120	Identifier	param		7235114	0					
ANR	7235121	PrimaryExpression	0		7235114	1					
ANR	7235122	CompoundStatement		3:3:25:25	7235114	1					
ANR	7235123	Label	case '<' :	1264:6:37978:37986	7235114	0	True				
ANR	7235124	CompoundStatement		6:12:66:87	7235114	1					
ANR	7235125	IdentifierDeclStatement	png_bytep file = NULL ;	1266:12:38011:38032	7235114	0	True				
ANR	7235126	IdentifierDecl	file = NULL		7235114	0					
ANR	7235127	IdentifierDeclType	png_bytep		7235114	0					
ANR	7235128	Identifier	file		7235114	1					
ANR	7235129	AssignmentExpression	file = NULL		7235114	2		=			
ANR	7235130	Identifier	NULL		7235114	0					
ANR	7235131	Identifier	NULL		7235114	1					
ANR	7235132	ExpressionStatement	"text -> text_length = load_file ( param + 1 , & file )"	1268:12:38047:38092	7235114	1	True				
ANR	7235133	AssignmentExpression	"text -> text_length = load_file ( param + 1 , & file )"		7235114	0		=			
ANR	7235134	PtrMemberAccess	text -> text_length		7235114	0					
ANR	7235135	Identifier	text		7235114	0					
ANR	7235136	Identifier	text_length		7235114	1					
ANR	7235137	CallExpression	"load_file ( param + 1 , & file )"		7235114	1					
ANR	7235138	Callee	load_file		7235114	0					
ANR	7235139	Identifier	load_file		7235114	0					
ANR	7235140	ArgumentList	param + 1		7235114	1					
ANR	7235141	Argument	param + 1		7235114	0					
ANR	7235142	AdditiveExpression	param + 1		7235114	0		+			
ANR	7235143	Identifier	param		7235114	0					
ANR	7235144	PrimaryExpression	1		7235114	1					
ANR	7235145	Argument	& file		7235114	1					
ANR	7235146	UnaryOperationExpression	& file		7235114	0					
ANR	7235147	UnaryOperator	&		7235114	0					
ANR	7235148	Identifier	file		7235114	1					
ANR	7235149	ExpressionStatement	text -> text = ( png_charp ) file	1269:12:38106:38134	7235114	2	True				
ANR	7235150	AssignmentExpression	text -> text = ( png_charp ) file		7235114	0		=			
ANR	7235151	PtrMemberAccess	text -> text		7235114	0					
ANR	7235152	Identifier	text		7235114	0					
ANR	7235153	Identifier	text		7235114	1					
ANR	7235154	CastExpression	( png_charp ) file		7235114	1					
ANR	7235155	CastTarget	png_charp		7235114	0					
ANR	7235156	Identifier	file		7235114	1					
ANR	7235157	BreakStatement	break ;	1271:9:38156:38161	7235114	2	True				
ANR	7235158	Label	case '0' :	1273:6:38170:38178	7235114	3	True				
ANR	7235159	Label	case '1' :	1273:16:38180:38188	7235114	4	True				
ANR	7235160	Label	case '2' :	1273:26:38190:38198	7235114	5	True				
ANR	7235161	Label	case '3' :	1273:36:38200:38208	7235114	6	True				
ANR	7235162	Label	case '4' :	1273:46:38210:38218	7235114	7	True				
ANR	7235163	Label	case '5' :	1274:6:38226:38234	7235114	8	True				
ANR	7235164	Label	case '6' :	1274:16:38236:38244	7235114	9	True				
ANR	7235165	Label	case '7' :	1274:26:38246:38254	7235114	10	True				
ANR	7235166	Label	case '8' :	1274:36:38256:38264	7235114	11	True				
ANR	7235167	Label	case '9' :	1274:46:38266:38274	7235114	12	True				
ANR	7235168	CompoundStatement		17:12:389:434	7235114	13					
ANR	7235169	IdentifierDeclStatement	png_bytep data = NULL ;	1276:12:38299:38320	7235114	0	True				
ANR	7235170	IdentifierDecl	data = NULL		7235114	0					
ANR	7235171	IdentifierDeclType	png_bytep		7235114	0					
ANR	7235172	Identifier	data		7235114	1					
ANR	7235173	AssignmentExpression	data = NULL		7235114	2		=			
ANR	7235174	Identifier	NULL		7235114	0					
ANR	7235175	Identifier	NULL		7235114	1					
ANR	7235176	IdentifierDeclStatement	"png_size_t fake_len = load_fake ( param , & data ) ;"	1277:12:38334:38379	7235114	1	True				
ANR	7235177	IdentifierDecl	"fake_len = load_fake ( param , & data )"		7235114	0					
ANR	7235178	IdentifierDeclType	png_size_t		7235114	0					
ANR	7235179	Identifier	fake_len		7235114	1					
ANR	7235180	AssignmentExpression	"fake_len = load_fake ( param , & data )"		7235114	2		=			
ANR	7235181	Identifier	fake_len		7235114	0					
ANR	7235182	CallExpression	"load_fake ( param , & data )"		7235114	1					
ANR	7235183	Callee	load_fake		7235114	0					
ANR	7235184	Identifier	load_fake		7235114	0					
ANR	7235185	ArgumentList	param		7235114	1					
ANR	7235186	Argument	param		7235114	0					
ANR	7235187	Identifier	param		7235114	0					
ANR	7235188	Argument	& data		7235114	1					
ANR	7235189	UnaryOperationExpression	& data		7235114	0					
ANR	7235190	UnaryOperator	&		7235114	0					
ANR	7235191	Identifier	data		7235114	1					
ANR	7235192	IfStatement	if ( fake_len > 0 )		7235114	2					
ANR	7235193	Condition	fake_len > 0	1279:16:38398:38409	7235114	0	True				
ANR	7235194	RelationalExpression	fake_len > 0		7235114	0		>			
ANR	7235195	Identifier	fake_len		7235114	0					
ANR	7235196	PrimaryExpression	0		7235114	1					
ANR	7235197	CompoundStatement		20:12:509:509	7235114	1					
ANR	7235198	ExpressionStatement	text -> text_length = fake_len	1281:15:38471:38499	7235114	0	True				
ANR	7235199	AssignmentExpression	text -> text_length = fake_len		7235114	0		=			
ANR	7235200	PtrMemberAccess	text -> text_length		7235114	0					
ANR	7235201	Identifier	text		7235114	0					
ANR	7235202	Identifier	text_length		7235114	1					
ANR	7235203	Identifier	fake_len		7235114	1					
ANR	7235204	ExpressionStatement	text -> text = ( png_charp ) data	1282:15:38516:38544	7235114	1	True				
ANR	7235205	AssignmentExpression	text -> text = ( png_charp ) data		7235114	0		=			
ANR	7235206	PtrMemberAccess	text -> text		7235114	0					
ANR	7235207	Identifier	text		7235114	0					
ANR	7235208	Identifier	text		7235114	1					
ANR	7235209	CastExpression	( png_charp ) data		7235114	1					
ANR	7235210	CastTarget	png_charp		7235114	0					
ANR	7235211	Identifier	data		7235114	1					
ANR	7235212	BreakStatement	break ;	1283:15:38561:38566	7235114	2	True				
ANR	7235213	Label	default :	1287:6:38600:38607	7235114	14	True				
ANR	7235214	Identifier	default		7235114	0					
ANR	7235215	ExpressionStatement	text -> text = param	1288:9:38618:38636	7235114	15	True				
ANR	7235216	AssignmentExpression	text -> text = param		7235114	0		=			
ANR	7235217	PtrMemberAccess	text -> text		7235114	0					
ANR	7235218	Identifier	text		7235114	0					
ANR	7235219	Identifier	text		7235114	1					
ANR	7235220	Identifier	param		7235114	1					
ANR	7235221	BreakStatement	break ;	1289:9:38647:38652	7235114	16	True				
ANR	7235222	ExpressionStatement	"png_set_text ( png_ptr , info_ptr , text , 1 )"	1292:3:38663:38703	7235114	1	True				
ANR	7235223	CallExpression	"png_set_text ( png_ptr , info_ptr , text , 1 )"		7235114	0					
ANR	7235224	Callee	png_set_text		7235114	0					
ANR	7235225	Identifier	png_set_text		7235114	0					
ANR	7235226	ArgumentList	png_ptr		7235114	1					
ANR	7235227	Argument	png_ptr		7235114	0					
ANR	7235228	Identifier	png_ptr		7235114	0					
ANR	7235229	Argument	info_ptr		7235114	1					
ANR	7235230	Identifier	info_ptr		7235114	0					
ANR	7235231	Argument	text		7235114	2					
ANR	7235232	Identifier	text		7235114	0					
ANR	7235233	Argument	1		7235114	3					
ANR	7235234	PrimaryExpression	1		7235114	0					
ANR	7235235	IfStatement	if ( text -> text != param )		7235114	2					
ANR	7235236	Condition	text -> text != param	1294:7:38713:38731	7235114	0	True				
ANR	7235237	EqualityExpression	text -> text != param		7235114	0		!=			
ANR	7235238	PtrMemberAccess	text -> text		7235114	0					
ANR	7235239	Identifier	text		7235114	0					
ANR	7235240	Identifier	text		7235114	1					
ANR	7235241	Identifier	param		7235114	1					
ANR	7235242	ExpressionStatement	free ( text -> text )	1295:6:38740:38756	7235114	1	True				
ANR	7235243	CallExpression	free ( text -> text )		7235114	0					
ANR	7235244	Callee	free		7235114	0					
ANR	7235245	Identifier	free		7235114	0					
ANR	7235246	ArgumentList	text -> text		7235114	1					
ANR	7235247	Argument	text -> text		7235114	0					
ANR	7235248	PtrMemberAccess	text -> text		7235114	0					
ANR	7235249	Identifier	text		7235114	0					
ANR	7235250	Identifier	text		7235114	1					
ANR	7235251	ReturnType	static void		7235114	1					
ANR	7235252	Identifier	set_text		7235114	2					
ANR	7235253	ParameterList	"png_structp png_ptr , png_infop info_ptr , png_textp text , png_charp param"		7235114	3					
ANR	7235254	Parameter	png_structp png_ptr	1259:9:37867:37885	7235114	0	True				
ANR	7235255	ParameterType	png_structp		7235114	0					
ANR	7235256	Identifier	png_ptr		7235114	1					
ANR	7235257	Parameter	png_infop info_ptr	1259:30:37888:37905	7235114	1	True				
ANR	7235258	ParameterType	png_infop		7235114	0					
ANR	7235259	Identifier	info_ptr		7235114	1					
ANR	7235260	Parameter	png_textp text	1259:50:37908:37921	7235114	2	True				
ANR	7235261	ParameterType	png_textp		7235114	0					
ANR	7235262	Identifier	text		7235114	1					
ANR	7235263	Parameter	png_charp param	1260:3:37927:37941	7235114	3	True				
ANR	7235264	ParameterType	png_charp		7235114	0					
ANR	7235265	Identifier	param		7235114	1					
ANR	7235266	CFGEntryNode	ENTRY		7235114		True				
ANR	7235267	CFGExitNode	EXIT		7235114		True				
ANR	7235268	Symbol	load_fake		7235114						
ANR	7235269	Symbol	NULL		7235114						
ANR	7235270	Symbol	data		7235114						
ANR	7235271	Symbol	text -> text		7235114						
ANR	7235272	Symbol	* text		7235114						
ANR	7235273	Symbol	fake_len		7235114						
ANR	7235274	Symbol	& data		7235114						
ANR	7235275	Symbol	* param		7235114						
ANR	7235276	Symbol	file		7235114						
ANR	7235277	Symbol	param		7235114						
ANR	7235278	Symbol	text -> text_length		7235114						
ANR	7235279	Symbol	load_file		7235114						
ANR	7235280	Symbol	text		7235114						
ANR	7235281	Symbol	info_ptr		7235114						
ANR	7235282	Symbol	& file		7235114						
ANR	7235283	Symbol	png_ptr		7235114						
ANR	7235284	Function	insert_tEXt	1298:0:38761:38999							
ANR	7235285	FunctionDef	"insert_tEXt (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7235284	0					
ANR	7235286	CompoundStatement		1301:0:38861:38999	7235284	0					
ANR	7235287	IdentifierDeclStatement	png_text text ;	1302:3:38866:38879	7235284	0	True				
ANR	7235288	IdentifierDecl	text		7235284	0					
ANR	7235289	IdentifierDeclType	png_text		7235284	0					
ANR	7235290	Identifier	text		7235284	1					
ANR	7235291	ExpressionStatement	"check_param_count ( nparams , 2 )"	1304:3:38885:38914	7235284	1	True				
ANR	7235292	CallExpression	"check_param_count ( nparams , 2 )"		7235284	0					
ANR	7235293	Callee	check_param_count		7235284	0					
ANR	7235294	Identifier	check_param_count		7235284	0					
ANR	7235295	ArgumentList	nparams		7235284	1					
ANR	7235296	Argument	nparams		7235284	0					
ANR	7235297	Identifier	nparams		7235284	0					
ANR	7235298	Argument	2		7235284	1					
ANR	7235299	PrimaryExpression	2		7235284	0					
ANR	7235300	ExpressionStatement	"clear_text ( & text , params [ 0 ] )"	1305:3:38919:38947	7235284	2	True				
ANR	7235301	CallExpression	"clear_text ( & text , params [ 0 ] )"		7235284	0					
ANR	7235302	Callee	clear_text		7235284	0					
ANR	7235303	Identifier	clear_text		7235284	0					
ANR	7235304	ArgumentList	& text		7235284	1					
ANR	7235305	Argument	& text		7235284	0					
ANR	7235306	UnaryOperationExpression	& text		7235284	0					
ANR	7235307	UnaryOperator	&		7235284	0					
ANR	7235308	Identifier	text		7235284	1					
ANR	7235309	Argument	params [ 0 ]		7235284	1					
ANR	7235310	ArrayIndexing	params [ 0 ]		7235284	0					
ANR	7235311	Identifier	params		7235284	0					
ANR	7235312	PrimaryExpression	0		7235284	1					
ANR	7235313	ExpressionStatement	"set_text ( png_ptr , info_ptr , & text , params [ 1 ] )"	1306:3:38952:38997	7235284	3	True				
ANR	7235314	CallExpression	"set_text ( png_ptr , info_ptr , & text , params [ 1 ] )"		7235284	0					
ANR	7235315	Callee	set_text		7235284	0					
ANR	7235316	Identifier	set_text		7235284	0					
ANR	7235317	ArgumentList	png_ptr		7235284	1					
ANR	7235318	Argument	png_ptr		7235284	0					
ANR	7235319	Identifier	png_ptr		7235284	0					
ANR	7235320	Argument	info_ptr		7235284	1					
ANR	7235321	Identifier	info_ptr		7235284	0					
ANR	7235322	Argument	& text		7235284	2					
ANR	7235323	UnaryOperationExpression	& text		7235284	0					
ANR	7235324	UnaryOperator	&		7235284	0					
ANR	7235325	Identifier	text		7235284	1					
ANR	7235326	Argument	params [ 1 ]		7235284	3					
ANR	7235327	ArrayIndexing	params [ 1 ]		7235284	0					
ANR	7235328	Identifier	params		7235284	0					
ANR	7235329	PrimaryExpression	1		7235284	1					
ANR	7235330	ReturnType	static void		7235284	1					
ANR	7235331	Identifier	insert_tEXt		7235284	2					
ANR	7235332	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7235284	3					
ANR	7235333	Parameter	png_structp png_ptr	1299:12:38785:38803	7235284	0	True				
ANR	7235334	ParameterType	png_structp		7235284	0					
ANR	7235335	Identifier	png_ptr		7235284	1					
ANR	7235336	Parameter	png_infop info_ptr	1299:33:38806:38823	7235284	1	True				
ANR	7235337	ParameterType	png_infop		7235284	0					
ANR	7235338	Identifier	info_ptr		7235284	1					
ANR	7235339	Parameter	int nparams	1299:53:38826:38836	7235284	2	True				
ANR	7235340	ParameterType	int		7235284	0					
ANR	7235341	Identifier	nparams		7235284	1					
ANR	7235342	Parameter	png_charpp params	1300:3:38842:38858	7235284	3	True				
ANR	7235343	ParameterType	png_charpp		7235284	0					
ANR	7235344	Identifier	params		7235284	1					
ANR	7235345	CFGEntryNode	ENTRY		7235284		True				
ANR	7235346	CFGExitNode	EXIT		7235284		True				
ANR	7235347	Symbol	& text		7235284						
ANR	7235348	Symbol	text		7235284						
ANR	7235349	Symbol	nparams		7235284						
ANR	7235350	Symbol	params		7235284						
ANR	7235351	Symbol	info_ptr		7235284						
ANR	7235352	Symbol	png_ptr		7235284						
ANR	7235353	Symbol	* params		7235284						
ANR	7235354	Function	insert_zTXt	1309:0:39002:39279							
ANR	7235355	FunctionDef	"insert_zTXt (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7235354	0					
ANR	7235356	CompoundStatement		1312:0:39102:39279	7235354	0					
ANR	7235357	IdentifierDeclStatement	png_text text ;	1313:3:39107:39120	7235354	0	True				
ANR	7235358	IdentifierDecl	text		7235354	0					
ANR	7235359	IdentifierDeclType	png_text		7235354	0					
ANR	7235360	Identifier	text		7235354	1					
ANR	7235361	ExpressionStatement	"check_param_count ( nparams , 2 )"	1315:3:39126:39155	7235354	1	True				
ANR	7235362	CallExpression	"check_param_count ( nparams , 2 )"		7235354	0					
ANR	7235363	Callee	check_param_count		7235354	0					
ANR	7235364	Identifier	check_param_count		7235354	0					
ANR	7235365	ArgumentList	nparams		7235354	1					
ANR	7235366	Argument	nparams		7235354	0					
ANR	7235367	Identifier	nparams		7235354	0					
ANR	7235368	Argument	2		7235354	1					
ANR	7235369	PrimaryExpression	2		7235354	0					
ANR	7235370	ExpressionStatement	"clear_text ( & text , params [ 0 ] )"	1316:3:39160:39188	7235354	2	True				
ANR	7235371	CallExpression	"clear_text ( & text , params [ 0 ] )"		7235354	0					
ANR	7235372	Callee	clear_text		7235354	0					
ANR	7235373	Identifier	clear_text		7235354	0					
ANR	7235374	ArgumentList	& text		7235354	1					
ANR	7235375	Argument	& text		7235354	0					
ANR	7235376	UnaryOperationExpression	& text		7235354	0					
ANR	7235377	UnaryOperator	&		7235354	0					
ANR	7235378	Identifier	text		7235354	1					
ANR	7235379	Argument	params [ 0 ]		7235354	1					
ANR	7235380	ArrayIndexing	params [ 0 ]		7235354	0					
ANR	7235381	Identifier	params		7235354	0					
ANR	7235382	PrimaryExpression	0		7235354	1					
ANR	7235383	ExpressionStatement	text . compression = 0	1317:3:39193:39213	7235354	3	True				
ANR	7235384	AssignmentExpression	text . compression = 0		7235354	0		=			
ANR	7235385	MemberAccess	text . compression		7235354	0					
ANR	7235386	Identifier	text		7235354	0					
ANR	7235387	Identifier	compression		7235354	1					
ANR	7235388	PrimaryExpression	0		7235354	1					
ANR	7235389	ExpressionStatement	"set_text ( png_ptr , info_ptr , & text , params [ 1 ] )"	1318:3:39232:39277	7235354	4	True				
ANR	7235390	CallExpression	"set_text ( png_ptr , info_ptr , & text , params [ 1 ] )"		7235354	0					
ANR	7235391	Callee	set_text		7235354	0					
ANR	7235392	Identifier	set_text		7235354	0					
ANR	7235393	ArgumentList	png_ptr		7235354	1					
ANR	7235394	Argument	png_ptr		7235354	0					
ANR	7235395	Identifier	png_ptr		7235354	0					
ANR	7235396	Argument	info_ptr		7235354	1					
ANR	7235397	Identifier	info_ptr		7235354	0					
ANR	7235398	Argument	& text		7235354	2					
ANR	7235399	UnaryOperationExpression	& text		7235354	0					
ANR	7235400	UnaryOperator	&		7235354	0					
ANR	7235401	Identifier	text		7235354	1					
ANR	7235402	Argument	params [ 1 ]		7235354	3					
ANR	7235403	ArrayIndexing	params [ 1 ]		7235354	0					
ANR	7235404	Identifier	params		7235354	0					
ANR	7235405	PrimaryExpression	1		7235354	1					
ANR	7235406	ReturnType	static void		7235354	1					
ANR	7235407	Identifier	insert_zTXt		7235354	2					
ANR	7235408	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7235354	3					
ANR	7235409	Parameter	png_structp png_ptr	1310:12:39026:39044	7235354	0	True				
ANR	7235410	ParameterType	png_structp		7235354	0					
ANR	7235411	Identifier	png_ptr		7235354	1					
ANR	7235412	Parameter	png_infop info_ptr	1310:33:39047:39064	7235354	1	True				
ANR	7235413	ParameterType	png_infop		7235354	0					
ANR	7235414	Identifier	info_ptr		7235354	1					
ANR	7235415	Parameter	int nparams	1310:53:39067:39077	7235354	2	True				
ANR	7235416	ParameterType	int		7235354	0					
ANR	7235417	Identifier	nparams		7235354	1					
ANR	7235418	Parameter	png_charpp params	1311:3:39083:39099	7235354	3	True				
ANR	7235419	ParameterType	png_charpp		7235354	0					
ANR	7235420	Identifier	params		7235354	1					
ANR	7235421	CFGEntryNode	ENTRY		7235354		True				
ANR	7235422	CFGExitNode	EXIT		7235354		True				
ANR	7235423	Symbol	& text		7235354						
ANR	7235424	Symbol	text		7235354						
ANR	7235425	Symbol	nparams		7235354						
ANR	7235426	Symbol	params		7235354						
ANR	7235427	Symbol	info_ptr		7235354						
ANR	7235428	Symbol	png_ptr		7235354						
ANR	7235429	Symbol	* params		7235354						
ANR	7235430	Symbol	text . compression		7235354						
ANR	7235431	Function	insert_iTXt	1321:0:39282:39665							
ANR	7235432	FunctionDef	"insert_iTXt (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7235431	0					
ANR	7235433	CompoundStatement		1324:0:39382:39665	7235431	0					
ANR	7235434	IdentifierDeclStatement	png_text text ;	1325:3:39387:39400	7235431	0	True				
ANR	7235435	IdentifierDecl	text		7235431	0					
ANR	7235436	IdentifierDeclType	png_text		7235431	0					
ANR	7235437	Identifier	text		7235431	1					
ANR	7235438	ExpressionStatement	"check_param_count ( nparams , 4 )"	1327:3:39406:39435	7235431	1	True				
ANR	7235439	CallExpression	"check_param_count ( nparams , 4 )"		7235431	0					
ANR	7235440	Callee	check_param_count		7235431	0					
ANR	7235441	Identifier	check_param_count		7235431	0					
ANR	7235442	ArgumentList	nparams		7235431	1					
ANR	7235443	Argument	nparams		7235431	0					
ANR	7235444	Identifier	nparams		7235431	0					
ANR	7235445	Argument	4		7235431	1					
ANR	7235446	PrimaryExpression	4		7235431	0					
ANR	7235447	ExpressionStatement	"clear_text ( & text , params [ 0 ] )"	1328:3:39440:39468	7235431	2	True				
ANR	7235448	CallExpression	"clear_text ( & text , params [ 0 ] )"		7235431	0					
ANR	7235449	Callee	clear_text		7235431	0					
ANR	7235450	Identifier	clear_text		7235431	0					
ANR	7235451	ArgumentList	& text		7235431	1					
ANR	7235452	Argument	& text		7235431	0					
ANR	7235453	UnaryOperationExpression	& text		7235431	0					
ANR	7235454	UnaryOperator	&		7235431	0					
ANR	7235455	Identifier	text		7235431	1					
ANR	7235456	Argument	params [ 0 ]		7235431	1					
ANR	7235457	ArrayIndexing	params [ 0 ]		7235431	0					
ANR	7235458	Identifier	params		7235431	0					
ANR	7235459	PrimaryExpression	0		7235431	1					
ANR	7235460	ExpressionStatement	text . compression = 2	1329:3:39473:39493	7235431	3	True				
ANR	7235461	AssignmentExpression	text . compression = 2		7235431	0		=			
ANR	7235462	MemberAccess	text . compression		7235431	0					
ANR	7235463	Identifier	text		7235431	0					
ANR	7235464	Identifier	compression		7235431	1					
ANR	7235465	PrimaryExpression	2		7235431	1					
ANR	7235466	ExpressionStatement	text . lang = params [ 1 ]	1330:3:39519:39540	7235431	4	True				
ANR	7235467	AssignmentExpression	text . lang = params [ 1 ]		7235431	0		=			
ANR	7235468	MemberAccess	text . lang		7235431	0					
ANR	7235469	Identifier	text		7235431	0					
ANR	7235470	Identifier	lang		7235431	1					
ANR	7235471	ArrayIndexing	params [ 1 ]		7235431	1					
ANR	7235472	Identifier	params		7235431	0					
ANR	7235473	PrimaryExpression	1		7235431	1					
ANR	7235474	ExpressionStatement	text . lang_key = params [ 2 ]	1331:3:39563:39588	7235431	5	True				
ANR	7235475	AssignmentExpression	text . lang_key = params [ 2 ]		7235431	0		=			
ANR	7235476	MemberAccess	text . lang_key		7235431	0					
ANR	7235477	Identifier	text		7235431	0					
ANR	7235478	Identifier	lang_key		7235431	1					
ANR	7235479	ArrayIndexing	params [ 2 ]		7235431	1					
ANR	7235480	Identifier	params		7235431	0					
ANR	7235481	PrimaryExpression	2		7235431	1					
ANR	7235482	ExpressionStatement	"set_text ( png_ptr , info_ptr , & text , params [ 3 ] )"	1332:3:39618:39663	7235431	6	True				
ANR	7235483	CallExpression	"set_text ( png_ptr , info_ptr , & text , params [ 3 ] )"		7235431	0					
ANR	7235484	Callee	set_text		7235431	0					
ANR	7235485	Identifier	set_text		7235431	0					
ANR	7235486	ArgumentList	png_ptr		7235431	1					
ANR	7235487	Argument	png_ptr		7235431	0					
ANR	7235488	Identifier	png_ptr		7235431	0					
ANR	7235489	Argument	info_ptr		7235431	1					
ANR	7235490	Identifier	info_ptr		7235431	0					
ANR	7235491	Argument	& text		7235431	2					
ANR	7235492	UnaryOperationExpression	& text		7235431	0					
ANR	7235493	UnaryOperator	&		7235431	0					
ANR	7235494	Identifier	text		7235431	1					
ANR	7235495	Argument	params [ 3 ]		7235431	3					
ANR	7235496	ArrayIndexing	params [ 3 ]		7235431	0					
ANR	7235497	Identifier	params		7235431	0					
ANR	7235498	PrimaryExpression	3		7235431	1					
ANR	7235499	ReturnType	static void		7235431	1					
ANR	7235500	Identifier	insert_iTXt		7235431	2					
ANR	7235501	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7235431	3					
ANR	7235502	Parameter	png_structp png_ptr	1322:12:39306:39324	7235431	0	True				
ANR	7235503	ParameterType	png_structp		7235431	0					
ANR	7235504	Identifier	png_ptr		7235431	1					
ANR	7235505	Parameter	png_infop info_ptr	1322:33:39327:39344	7235431	1	True				
ANR	7235506	ParameterType	png_infop		7235431	0					
ANR	7235507	Identifier	info_ptr		7235431	1					
ANR	7235508	Parameter	int nparams	1322:53:39347:39357	7235431	2	True				
ANR	7235509	ParameterType	int		7235431	0					
ANR	7235510	Identifier	nparams		7235431	1					
ANR	7235511	Parameter	png_charpp params	1323:3:39363:39379	7235431	3	True				
ANR	7235512	ParameterType	png_charpp		7235431	0					
ANR	7235513	Identifier	params		7235431	1					
ANR	7235514	CFGEntryNode	ENTRY		7235431		True				
ANR	7235515	CFGExitNode	EXIT		7235431		True				
ANR	7235516	Symbol	text . lang		7235431						
ANR	7235517	Symbol	& text		7235431						
ANR	7235518	Symbol	text . lang_key		7235431						
ANR	7235519	Symbol	text		7235431						
ANR	7235520	Symbol	nparams		7235431						
ANR	7235521	Symbol	params		7235431						
ANR	7235522	Symbol	info_ptr		7235431						
ANR	7235523	Symbol	png_ptr		7235431						
ANR	7235524	Symbol	* params		7235431						
ANR	7235525	Symbol	text . compression		7235431						
ANR	7235526	Function	insert_hIST	1335:0:39668:40373							
ANR	7235527	FunctionDef	"insert_hIST (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7235526	0					
ANR	7235528	CompoundStatement		1338:0:39771:40373	7235526	0					
ANR	7235529	IdentifierDeclStatement	int i ;	1339:3:39776:39781	7235526	0	True				
ANR	7235530	IdentifierDecl	i		7235526	0					
ANR	7235531	IdentifierDeclType	int		7235526	0					
ANR	7235532	Identifier	i		7235526	1					
ANR	7235533	IdentifierDeclStatement	png_uint_16 freq [ 256 ] ;	1340:3:39786:39807	7235526	1	True				
ANR	7235534	IdentifierDecl	freq [ 256 ]		7235526	0					
ANR	7235535	IdentifierDeclType	png_uint_16 [ 256 ]		7235526	0					
ANR	7235536	Identifier	freq		7235526	1					
ANR	7235537	PrimaryExpression	256		7235526	2					
ANR	7235538	ExpressionStatement	"memset ( freq , 0 , sizeof freq )"	1345:3:39953:39981	7235526	2	True				
ANR	7235539	CallExpression	"memset ( freq , 0 , sizeof freq )"		7235526	0					
ANR	7235540	Callee	memset		7235526	0					
ANR	7235541	Identifier	memset		7235526	0					
ANR	7235542	ArgumentList	freq		7235526	1					
ANR	7235543	Argument	freq		7235526	0					
ANR	7235544	Identifier	freq		7235526	0					
ANR	7235545	Argument	0		7235526	1					
ANR	7235546	PrimaryExpression	0		7235526	0					
ANR	7235547	Argument	sizeof freq		7235526	2					
ANR	7235548	SizeofExpression	sizeof freq		7235526	0					
ANR	7235549	Sizeof	sizeof		7235526	0					
ANR	7235550	Identifier	freq		7235526	1					
ANR	7235551	ForStatement	for ( i = 0 ; i < nparams ; ++ i )		7235526	3					
ANR	7235552	ForInit	i = 0 ;	1346:8:39991:39994	7235526	0	True				
ANR	7235553	AssignmentExpression	i = 0		7235526	0		=			
ANR	7235554	Identifier	i		7235526	0					
ANR	7235555	PrimaryExpression	0		7235526	1					
ANR	7235556	Condition	i < nparams	1346:13:39996:40004	7235526	1	True				
ANR	7235557	RelationalExpression	i < nparams		7235526	0		<			
ANR	7235558	Identifier	i		7235526	0					
ANR	7235559	Identifier	nparams		7235526	1					
ANR	7235560	UnaryExpression	++ i	1346:24:40007:40009	7235526	2	True				
ANR	7235561	IncDec	++		7235526	0					
ANR	7235562	Identifier	i		7235526	1					
ANR	7235563	CompoundStatement		12:6:278:338	7235526	3					
ANR	7235564	IdentifierDeclStatement	char * endptr = NULL ;	1348:6:40023:40042	7235526	0	True				
ANR	7235565	IdentifierDecl	* endptr = NULL		7235526	0					
ANR	7235566	IdentifierDeclType	char *		7235526	0					
ANR	7235567	Identifier	endptr		7235526	1					
ANR	7235568	AssignmentExpression	* endptr = NULL		7235526	2		=			
ANR	7235569	Identifier	NULL		7235526	0					
ANR	7235570	Identifier	NULL		7235526	1					
ANR	7235571	IdentifierDeclStatement	"unsigned long int l = strtoul ( params [ i ] , & endptr , 0 ) ;"	1349:6:40050:40110	7235526	1	True				
ANR	7235572	IdentifierDecl	"l = strtoul ( params [ i ] , & endptr , 0 )"		7235526	0					
ANR	7235573	IdentifierDeclType	unsigned long int		7235526	0					
ANR	7235574	Identifier	l		7235526	1					
ANR	7235575	AssignmentExpression	"l = strtoul ( params [ i ] , & endptr , 0 )"		7235526	2		=			
ANR	7235576	Identifier	l		7235526	0					
ANR	7235577	CallExpression	"strtoul ( params [ i ] , & endptr , 0 )"		7235526	1					
ANR	7235578	Callee	strtoul		7235526	0					
ANR	7235579	Identifier	strtoul		7235526	0					
ANR	7235580	ArgumentList	params [ i ]		7235526	1					
ANR	7235581	Argument	params [ i ]		7235526	0					
ANR	7235582	ArrayIndexing	params [ i ]		7235526	0					
ANR	7235583	Identifier	params		7235526	0					
ANR	7235584	Identifier	i		7235526	1					
ANR	7235585	Argument	& endptr		7235526	1					
ANR	7235586	UnaryOperationExpression	& endptr		7235526	0					
ANR	7235587	UnaryOperator	&		7235526	0					
ANR	7235588	Identifier	endptr		7235526	1					
ANR	7235589	Argument	0		7235526	2					
ANR	7235590	PrimaryExpression	0		7235526	0					
ANR	7235591	IfStatement	if ( params [ i ] [ 0 ] && * endptr == 0 && l <= 65535 )		7235526	2					
ANR	7235592	Condition	params [ i ] [ 0 ] && * endptr == 0 && l <= 65535	1351:10:40123:40164	7235526	0	True				
ANR	7235593	AndExpression	params [ i ] [ 0 ] && * endptr == 0 && l <= 65535		7235526	0		&&			
ANR	7235594	ArrayIndexing	params [ i ] [ 0 ]		7235526	0					
ANR	7235595	ArrayIndexing	params [ i ]		7235526	0					
ANR	7235596	Identifier	params		7235526	0					
ANR	7235597	Identifier	i		7235526	1					
ANR	7235598	PrimaryExpression	0		7235526	1					
ANR	7235599	AndExpression	* endptr == 0 && l <= 65535		7235526	1		&&			
ANR	7235600	EqualityExpression	* endptr == 0		7235526	0		==			
ANR	7235601	UnaryOperationExpression	* endptr		7235526	0					
ANR	7235602	UnaryOperator	*		7235526	0					
ANR	7235603	Identifier	endptr		7235526	1					
ANR	7235604	PrimaryExpression	0		7235526	1					
ANR	7235605	RelationalExpression	l <= 65535		7235526	1		<=			
ANR	7235606	Identifier	l		7235526	0					
ANR	7235607	PrimaryExpression	65535		7235526	1					
ANR	7235608	ExpressionStatement	freq [ i ] = ( png_uint_16 ) l	1352:9:40176:40200	7235526	1	True				
ANR	7235609	AssignmentExpression	freq [ i ] = ( png_uint_16 ) l		7235526	0		=			
ANR	7235610	ArrayIndexing	freq [ i ]		7235526	0					
ANR	7235611	Identifier	freq		7235526	0					
ANR	7235612	Identifier	i		7235526	1					
ANR	7235613	CastExpression	( png_uint_16 ) l		7235526	1					
ANR	7235614	CastTarget	png_uint_16		7235526	0					
ANR	7235615	Identifier	l		7235526	1					
ANR	7235616	ElseStatement	else		7235526	0					
ANR	7235617	CompoundStatement		18:6:448:448	7235526	0					
ANR	7235618	ExpressionStatement	"fprintf ( stderr , ""hIST[%d]: %s: invalid frequency\\n"" , i , params [ i ] )"	1356:9:40231:40297	7235526	0	True				
ANR	7235619	CallExpression	"fprintf ( stderr , ""hIST[%d]: %s: invalid frequency\\n"" , i , params [ i ] )"		7235526	0					
ANR	7235620	Callee	fprintf		7235526	0					
ANR	7235621	Identifier	fprintf		7235526	0					
ANR	7235622	ArgumentList	stderr		7235526	1					
ANR	7235623	Argument	stderr		7235526	0					
ANR	7235624	Identifier	stderr		7235526	0					
ANR	7235625	Argument	"""hIST[%d]: %s: invalid frequency\\n"""		7235526	1					
ANR	7235626	PrimaryExpression	"""hIST[%d]: %s: invalid frequency\\n"""		7235526	0					
ANR	7235627	Argument	i		7235526	2					
ANR	7235628	Identifier	i		7235526	0					
ANR	7235629	Argument	params [ i ]		7235526	3					
ANR	7235630	ArrayIndexing	params [ i ]		7235526	0					
ANR	7235631	Identifier	params		7235526	0					
ANR	7235632	Identifier	i		7235526	1					
ANR	7235633	ExpressionStatement	exit ( 1 )	1357:9:40308:40315	7235526	1	True				
ANR	7235634	CallExpression	exit ( 1 )		7235526	0					
ANR	7235635	Callee	exit		7235526	0					
ANR	7235636	Identifier	exit		7235526	0					
ANR	7235637	ArgumentList	1		7235526	1					
ANR	7235638	Argument	1		7235526	0					
ANR	7235639	PrimaryExpression	1		7235526	0					
ANR	7235640	ExpressionStatement	"png_set_hIST ( png_ptr , info_ptr , freq )"	1361:3:40334:40371	7235526	4	True				
ANR	7235641	CallExpression	"png_set_hIST ( png_ptr , info_ptr , freq )"		7235526	0					
ANR	7235642	Callee	png_set_hIST		7235526	0					
ANR	7235643	Identifier	png_set_hIST		7235526	0					
ANR	7235644	ArgumentList	png_ptr		7235526	1					
ANR	7235645	Argument	png_ptr		7235526	0					
ANR	7235646	Identifier	png_ptr		7235526	0					
ANR	7235647	Argument	info_ptr		7235526	1					
ANR	7235648	Identifier	info_ptr		7235526	0					
ANR	7235649	Argument	freq		7235526	2					
ANR	7235650	Identifier	freq		7235526	0					
ANR	7235651	ReturnType	static void		7235526	1					
ANR	7235652	Identifier	insert_hIST		7235526	2					
ANR	7235653	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7235526	3					
ANR	7235654	Parameter	png_structp png_ptr	1336:12:39692:39710	7235526	0	True				
ANR	7235655	ParameterType	png_structp		7235526	0					
ANR	7235656	Identifier	png_ptr		7235526	1					
ANR	7235657	Parameter	png_infop info_ptr	1336:33:39713:39730	7235526	1	True				
ANR	7235658	ParameterType	png_infop		7235526	0					
ANR	7235659	Identifier	info_ptr		7235526	1					
ANR	7235660	Parameter	int nparams	1336:53:39733:39743	7235526	2	True				
ANR	7235661	ParameterType	int		7235526	0					
ANR	7235662	Identifier	nparams		7235526	1					
ANR	7235663	Parameter	png_charpp params	1337:6:39752:39768	7235526	3	True				
ANR	7235664	ParameterType	png_charpp		7235526	0					
ANR	7235665	Identifier	params		7235526	1					
ANR	7235666	CFGEntryNode	ENTRY		7235526		True				
ANR	7235667	CFGExitNode	EXIT		7235526		True				
ANR	7235668	Symbol	* * i		7235526						
ANR	7235669	Symbol	NULL		7235526						
ANR	7235670	Symbol	endptr		7235526						
ANR	7235671	Symbol	* endptr		7235526						
ANR	7235672	Symbol	& endptr		7235526						
ANR	7235673	Symbol	freq		7235526						
ANR	7235674	Symbol	i		7235526						
ANR	7235675	Symbol	nparams		7235526						
ANR	7235676	Symbol	params		7235526						
ANR	7235677	Symbol	l		7235526						
ANR	7235678	Symbol	* * params		7235526						
ANR	7235679	Symbol	stderr		7235526						
ANR	7235680	Symbol	* freq		7235526						
ANR	7235681	Symbol	* i		7235526						
ANR	7235682	Symbol	strtoul		7235526						
ANR	7235683	Symbol	info_ptr		7235526						
ANR	7235684	Symbol	png_ptr		7235526						
ANR	7235685	Symbol	* params		7235526						
ANR	7235686	Function	bval	1364:0:40376:40688							
ANR	7235687	FunctionDef	"bval (png_const_structrp png_ptr , png_charp param , unsigned int maxval)"		7235686	0					
ANR	7235688	CompoundStatement		1366:0:40463:40688	7235686	0					
ANR	7235689	IdentifierDeclStatement	char * endptr = NULL ;	1367:3:40468:40487	7235686	0	True				
ANR	7235690	IdentifierDecl	* endptr = NULL		7235686	0					
ANR	7235691	IdentifierDeclType	char *		7235686	0					
ANR	7235692	Identifier	endptr		7235686	1					
ANR	7235693	AssignmentExpression	* endptr = NULL		7235686	2		=			
ANR	7235694	Identifier	NULL		7235686	0					
ANR	7235695	Identifier	NULL		7235686	1					
ANR	7235696	IdentifierDeclStatement	"unsigned long int l = strtoul ( param , & endptr , 0 ) ;"	1368:3:40492:40548	7235686	1	True				
ANR	7235697	IdentifierDecl	"l = strtoul ( param , & endptr , 0 )"		7235686	0					
ANR	7235698	IdentifierDeclType	unsigned long int		7235686	0					
ANR	7235699	Identifier	l		7235686	1					
ANR	7235700	AssignmentExpression	"l = strtoul ( param , & endptr , 0 )"		7235686	2		=			
ANR	7235701	Identifier	l		7235686	0					
ANR	7235702	CallExpression	"strtoul ( param , & endptr , 0 )"		7235686	1					
ANR	7235703	Callee	strtoul		7235686	0					
ANR	7235704	Identifier	strtoul		7235686	0					
ANR	7235705	ArgumentList	param		7235686	1					
ANR	7235706	Argument	param		7235686	0					
ANR	7235707	Identifier	param		7235686	0					
ANR	7235708	Argument	& endptr		7235686	1					
ANR	7235709	UnaryOperationExpression	& endptr		7235686	0					
ANR	7235710	UnaryOperator	&		7235686	0					
ANR	7235711	Identifier	endptr		7235686	1					
ANR	7235712	Argument	0		7235686	2					
ANR	7235713	PrimaryExpression	0		7235686	0					
ANR	7235714	IfStatement	if ( param [ 0 ] && * endptr == 0 && l <= maxval )		7235686	2					
ANR	7235715	Condition	param [ 0 ] && * endptr == 0 && l <= maxval	1370:7:40558:40596	7235686	0	True				
ANR	7235716	AndExpression	param [ 0 ] && * endptr == 0 && l <= maxval		7235686	0		&&			
ANR	7235717	ArrayIndexing	param [ 0 ]		7235686	0					
ANR	7235718	Identifier	param		7235686	0					
ANR	7235719	PrimaryExpression	0		7235686	1					
ANR	7235720	AndExpression	* endptr == 0 && l <= maxval		7235686	1		&&			
ANR	7235721	EqualityExpression	* endptr == 0		7235686	0		==			
ANR	7235722	UnaryOperationExpression	* endptr		7235686	0					
ANR	7235723	UnaryOperator	*		7235686	0					
ANR	7235724	Identifier	endptr		7235686	1					
ANR	7235725	PrimaryExpression	0		7235686	1					
ANR	7235726	RelationalExpression	l <= maxval		7235686	1		<=			
ANR	7235727	Identifier	l		7235686	0					
ANR	7235728	Identifier	maxval		7235686	1					
ANR	7235729	ReturnStatement	return ( png_byte ) l ;	1371:6:40605:40623	7235686	1	True				
ANR	7235730	CastExpression	( png_byte ) l		7235686	0					
ANR	7235731	CastTarget	png_byte		7235686	0					
ANR	7235732	Identifier	l		7235686	1					
ANR	7235733	ElseStatement	else		7235686	0					
ANR	7235734	ExpressionStatement	"png_error ( png_ptr , ""sBIT: invalid sBIT value"" )"	1374:6:40640:40686	7235686	0	True				
ANR	7235735	CallExpression	"png_error ( png_ptr , ""sBIT: invalid sBIT value"" )"		7235686	0					
ANR	7235736	Callee	png_error		7235686	0					
ANR	7235737	Identifier	png_error		7235686	0					
ANR	7235738	ArgumentList	png_ptr		7235686	1					
ANR	7235739	Argument	png_ptr		7235686	0					
ANR	7235740	Identifier	png_ptr		7235686	0					
ANR	7235741	Argument	"""sBIT: invalid sBIT value"""		7235686	1					
ANR	7235742	PrimaryExpression	"""sBIT: invalid sBIT value"""		7235686	0					
ANR	7235743	ReturnType	static png_byte		7235686	1					
ANR	7235744	Identifier	bval		7235686	2					
ANR	7235745	ParameterList	"png_const_structrp png_ptr , png_charp param , unsigned int maxval"		7235686	3					
ANR	7235746	Parameter	png_const_structrp png_ptr	1365:5:40397:40422	7235686	0	True				
ANR	7235747	ParameterType	png_const_structrp		7235686	0					
ANR	7235748	Identifier	png_ptr		7235686	1					
ANR	7235749	Parameter	png_charp param	1365:33:40425:40439	7235686	1	True				
ANR	7235750	ParameterType	png_charp		7235686	0					
ANR	7235751	Identifier	param		7235686	1					
ANR	7235752	Parameter	unsigned int maxval	1365:50:40442:40460	7235686	2	True				
ANR	7235753	ParameterType	unsigned int		7235686	0					
ANR	7235754	Identifier	maxval		7235686	1					
ANR	7235755	CFGEntryNode	ENTRY		7235686		True				
ANR	7235756	CFGExitNode	EXIT		7235686		True				
ANR	7235757	Symbol	maxval		7235686						
ANR	7235758	Symbol	NULL		7235686						
ANR	7235759	Symbol	param		7235686						
ANR	7235760	Symbol	endptr		7235686						
ANR	7235761	Symbol	* endptr		7235686						
ANR	7235762	Symbol	& endptr		7235686						
ANR	7235763	Symbol	strtoul		7235686						
ANR	7235764	Symbol	l		7235686						
ANR	7235765	Symbol	png_ptr		7235686						
ANR	7235766	Symbol	* param		7235686						
ANR	7235767	Function	insert_sBIT	1377:0:40691:41677							
ANR	7235768	FunctionDef	"insert_sBIT (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7235767	0					
ANR	7235769	CompoundStatement		1380:0:40794:41677	7235767	0					
ANR	7235770	IdentifierDeclStatement	"const int ct = png_get_color_type ( png_ptr , info_ptr ) ;"	1381:3:40799:40851	7235767	0	True				
ANR	7235771	IdentifierDecl	"ct = png_get_color_type ( png_ptr , info_ptr )"		7235767	0					
ANR	7235772	IdentifierDeclType	const int		7235767	0					
ANR	7235773	Identifier	ct		7235767	1					
ANR	7235774	AssignmentExpression	"ct = png_get_color_type ( png_ptr , info_ptr )"		7235767	2		=			
ANR	7235775	Identifier	ct		7235767	0					
ANR	7235776	CallExpression	"png_get_color_type ( png_ptr , info_ptr )"		7235767	1					
ANR	7235777	Callee	png_get_color_type		7235767	0					
ANR	7235778	Identifier	png_get_color_type		7235767	0					
ANR	7235779	ArgumentList	png_ptr		7235767	1					
ANR	7235780	Argument	png_ptr		7235767	0					
ANR	7235781	Identifier	png_ptr		7235767	0					
ANR	7235782	Argument	info_ptr		7235767	1					
ANR	7235783	Identifier	info_ptr		7235767	0					
ANR	7235784	IdentifierDeclStatement	const int c = ( ct & PNG_COLOR_MASK_COLOR ? 3 : 1 ) + ( ct & PNG_COLOR_MASK_ALPHA ? 1 : 0 ) ;	1382:3:40856:40949	7235767	1	True				
ANR	7235785	IdentifierDecl	c = ( ct & PNG_COLOR_MASK_COLOR ? 3 : 1 ) + ( ct & PNG_COLOR_MASK_ALPHA ? 1 : 0 )		7235767	0					
ANR	7235786	IdentifierDeclType	const int		7235767	0					
ANR	7235787	Identifier	c		7235767	1					
ANR	7235788	AssignmentExpression	c = ( ct & PNG_COLOR_MASK_COLOR ? 3 : 1 ) + ( ct & PNG_COLOR_MASK_ALPHA ? 1 : 0 )		7235767	2		=			
ANR	7235789	Identifier	c		7235767	0					
ANR	7235790	AdditiveExpression	( ct & PNG_COLOR_MASK_COLOR ? 3 : 1 ) + ( ct & PNG_COLOR_MASK_ALPHA ? 1 : 0 )		7235767	1		+			
ANR	7235791	ConditionalExpression	ct & PNG_COLOR_MASK_COLOR ? 3 : 1		7235767	0					
ANR	7235792	Condition	ct & PNG_COLOR_MASK_COLOR		7235767	0					
ANR	7235793	BitAndExpression	ct & PNG_COLOR_MASK_COLOR		7235767	0		&			
ANR	7235794	Identifier	ct		7235767	0					
ANR	7235795	Identifier	PNG_COLOR_MASK_COLOR		7235767	1					
ANR	7235796	PrimaryExpression	3		7235767	1					
ANR	7235797	PrimaryExpression	1		7235767	2					
ANR	7235798	ConditionalExpression	ct & PNG_COLOR_MASK_ALPHA ? 1 : 0		7235767	1					
ANR	7235799	Condition	ct & PNG_COLOR_MASK_ALPHA		7235767	0					
ANR	7235800	BitAndExpression	ct & PNG_COLOR_MASK_ALPHA		7235767	0		&			
ANR	7235801	Identifier	ct		7235767	0					
ANR	7235802	Identifier	PNG_COLOR_MASK_ALPHA		7235767	1					
ANR	7235803	PrimaryExpression	1		7235767	1					
ANR	7235804	PrimaryExpression	0		7235767	2					
ANR	7235805	IdentifierDeclStatement	"const unsigned int maxval = ct & PNG_COLOR_MASK_PALETTE ? 8U : png_get_bit_depth ( png_ptr , info_ptr ) ;"	1384:3:40954:41059	7235767	2	True				
ANR	7235806	IdentifierDecl	"maxval = ct & PNG_COLOR_MASK_PALETTE ? 8U : png_get_bit_depth ( png_ptr , info_ptr )"		7235767	0					
ANR	7235807	IdentifierDeclType	const unsigned int		7235767	0					
ANR	7235808	Identifier	maxval		7235767	1					
ANR	7235809	AssignmentExpression	"maxval = ct & PNG_COLOR_MASK_PALETTE ? 8U : png_get_bit_depth ( png_ptr , info_ptr )"		7235767	2		=			
ANR	7235810	Identifier	maxval		7235767	0					
ANR	7235811	ConditionalExpression	"ct & PNG_COLOR_MASK_PALETTE ? 8U : png_get_bit_depth ( png_ptr , info_ptr )"		7235767	1					
ANR	7235812	Condition	ct & PNG_COLOR_MASK_PALETTE		7235767	0					
ANR	7235813	BitAndExpression	ct & PNG_COLOR_MASK_PALETTE		7235767	0		&			
ANR	7235814	Identifier	ct		7235767	0					
ANR	7235815	Identifier	PNG_COLOR_MASK_PALETTE		7235767	1					
ANR	7235816	PrimaryExpression	8U		7235767	1					
ANR	7235817	CallExpression	"png_get_bit_depth ( png_ptr , info_ptr )"		7235767	2					
ANR	7235818	Callee	png_get_bit_depth		7235767	0					
ANR	7235819	Identifier	png_get_bit_depth		7235767	0					
ANR	7235820	ArgumentList	png_ptr		7235767	1					
ANR	7235821	Argument	png_ptr		7235767	0					
ANR	7235822	Identifier	png_ptr		7235767	0					
ANR	7235823	Argument	info_ptr		7235767	1					
ANR	7235824	Identifier	info_ptr		7235767	0					
ANR	7235825	IdentifierDeclStatement	png_color_8 sBIT ;	1386:3:41064:41080	7235767	3	True				
ANR	7235826	IdentifierDecl	sBIT		7235767	0					
ANR	7235827	IdentifierDeclType	png_color_8		7235767	0					
ANR	7235828	Identifier	sBIT		7235767	1					
ANR	7235829	IfStatement	if ( nparams != c )		7235767	4					
ANR	7235830	Condition	nparams != c	1388:7:41090:41101	7235767	0	True				
ANR	7235831	EqualityExpression	nparams != c		7235767	0		!=			
ANR	7235832	Identifier	nparams		7235767	0					
ANR	7235833	Identifier	c		7235767	1					
ANR	7235834	ExpressionStatement	"png_error ( png_ptr , ""sBIT: incorrect parameter count"" )"	1389:6:41110:41163	7235767	1	True				
ANR	7235835	CallExpression	"png_error ( png_ptr , ""sBIT: incorrect parameter count"" )"		7235767	0					
ANR	7235836	Callee	png_error		7235767	0					
ANR	7235837	Identifier	png_error		7235767	0					
ANR	7235838	ArgumentList	png_ptr		7235767	1					
ANR	7235839	Argument	png_ptr		7235767	0					
ANR	7235840	Identifier	png_ptr		7235767	0					
ANR	7235841	Argument	"""sBIT: incorrect parameter count"""		7235767	1					
ANR	7235842	PrimaryExpression	"""sBIT: incorrect parameter count"""		7235767	0					
ANR	7235843	IfStatement	if ( ct & PNG_COLOR_MASK_COLOR )		7235767	5					
ANR	7235844	Condition	ct & PNG_COLOR_MASK_COLOR	1391:7:41173:41197	7235767	0	True				
ANR	7235845	BitAndExpression	ct & PNG_COLOR_MASK_COLOR		7235767	0		&			
ANR	7235846	Identifier	ct		7235767	0					
ANR	7235847	Identifier	PNG_COLOR_MASK_COLOR		7235767	1					
ANR	7235848	CompoundStatement		13:3:408:408	7235767	1					
ANR	7235849	ExpressionStatement	"sBIT . red = bval ( png_ptr , params [ 0 ] , maxval )"	1393:6:41211:41254	7235767	0	True				
ANR	7235850	AssignmentExpression	"sBIT . red = bval ( png_ptr , params [ 0 ] , maxval )"		7235767	0		=			
ANR	7235851	MemberAccess	sBIT . red		7235767	0					
ANR	7235852	Identifier	sBIT		7235767	0					
ANR	7235853	Identifier	red		7235767	1					
ANR	7235854	CallExpression	"bval ( png_ptr , params [ 0 ] , maxval )"		7235767	1					
ANR	7235855	Callee	bval		7235767	0					
ANR	7235856	Identifier	bval		7235767	0					
ANR	7235857	ArgumentList	png_ptr		7235767	1					
ANR	7235858	Argument	png_ptr		7235767	0					
ANR	7235859	Identifier	png_ptr		7235767	0					
ANR	7235860	Argument	params [ 0 ]		7235767	1					
ANR	7235861	ArrayIndexing	params [ 0 ]		7235767	0					
ANR	7235862	Identifier	params		7235767	0					
ANR	7235863	PrimaryExpression	0		7235767	1					
ANR	7235864	Argument	maxval		7235767	2					
ANR	7235865	Identifier	maxval		7235767	0					
ANR	7235866	ExpressionStatement	"sBIT . green = bval ( png_ptr , params [ 1 ] , maxval )"	1394:6:41262:41307	7235767	1	True				
ANR	7235867	AssignmentExpression	"sBIT . green = bval ( png_ptr , params [ 1 ] , maxval )"		7235767	0		=			
ANR	7235868	MemberAccess	sBIT . green		7235767	0					
ANR	7235869	Identifier	sBIT		7235767	0					
ANR	7235870	Identifier	green		7235767	1					
ANR	7235871	CallExpression	"bval ( png_ptr , params [ 1 ] , maxval )"		7235767	1					
ANR	7235872	Callee	bval		7235767	0					
ANR	7235873	Identifier	bval		7235767	0					
ANR	7235874	ArgumentList	png_ptr		7235767	1					
ANR	7235875	Argument	png_ptr		7235767	0					
ANR	7235876	Identifier	png_ptr		7235767	0					
ANR	7235877	Argument	params [ 1 ]		7235767	1					
ANR	7235878	ArrayIndexing	params [ 1 ]		7235767	0					
ANR	7235879	Identifier	params		7235767	0					
ANR	7235880	PrimaryExpression	1		7235767	1					
ANR	7235881	Argument	maxval		7235767	2					
ANR	7235882	Identifier	maxval		7235767	0					
ANR	7235883	ExpressionStatement	"sBIT . blue = bval ( png_ptr , params [ 2 ] , maxval )"	1395:6:41315:41359	7235767	2	True				
ANR	7235884	AssignmentExpression	"sBIT . blue = bval ( png_ptr , params [ 2 ] , maxval )"		7235767	0		=			
ANR	7235885	MemberAccess	sBIT . blue		7235767	0					
ANR	7235886	Identifier	sBIT		7235767	0					
ANR	7235887	Identifier	blue		7235767	1					
ANR	7235888	CallExpression	"bval ( png_ptr , params [ 2 ] , maxval )"		7235767	1					
ANR	7235889	Callee	bval		7235767	0					
ANR	7235890	Identifier	bval		7235767	0					
ANR	7235891	ArgumentList	png_ptr		7235767	1					
ANR	7235892	Argument	png_ptr		7235767	0					
ANR	7235893	Identifier	png_ptr		7235767	0					
ANR	7235894	Argument	params [ 2 ]		7235767	1					
ANR	7235895	ArrayIndexing	params [ 2 ]		7235767	0					
ANR	7235896	Identifier	params		7235767	0					
ANR	7235897	PrimaryExpression	2		7235767	1					
ANR	7235898	Argument	maxval		7235767	2					
ANR	7235899	Identifier	maxval		7235767	0					
ANR	7235900	ExpressionStatement	sBIT . gray = 42	1396:6:41367:41381	7235767	3	True				
ANR	7235901	AssignmentExpression	sBIT . gray = 42		7235767	0		=			
ANR	7235902	MemberAccess	sBIT . gray		7235767	0					
ANR	7235903	Identifier	sBIT		7235767	0					
ANR	7235904	Identifier	gray		7235767	1					
ANR	7235905	PrimaryExpression	42		7235767	1					
ANR	7235906	ElseStatement	else		7235767	0					
ANR	7235907	CompoundStatement		21:3:605:605	7235767	0					
ANR	7235908	ExpressionStatement	sBIT . red = sBIT . green = sBIT . blue = 42	1401:6:41408:41446	7235767	0	True				
ANR	7235909	AssignmentExpression	sBIT . red = sBIT . green = sBIT . blue = 42		7235767	0		=			
ANR	7235910	MemberAccess	sBIT . red		7235767	0					
ANR	7235911	Identifier	sBIT		7235767	0					
ANR	7235912	Identifier	red		7235767	1					
ANR	7235913	AssignmentExpression	sBIT . green = sBIT . blue = 42		7235767	1		=			
ANR	7235914	MemberAccess	sBIT . green		7235767	0					
ANR	7235915	Identifier	sBIT		7235767	0					
ANR	7235916	Identifier	green		7235767	1					
ANR	7235917	AssignmentExpression	sBIT . blue = 42		7235767	1		=			
ANR	7235918	MemberAccess	sBIT . blue		7235767	0					
ANR	7235919	Identifier	sBIT		7235767	0					
ANR	7235920	Identifier	blue		7235767	1					
ANR	7235921	PrimaryExpression	42		7235767	1					
ANR	7235922	ExpressionStatement	"sBIT . gray = bval ( png_ptr , params [ 0 ] , maxval )"	1402:6:41454:41498	7235767	1	True				
ANR	7235923	AssignmentExpression	"sBIT . gray = bval ( png_ptr , params [ 0 ] , maxval )"		7235767	0		=			
ANR	7235924	MemberAccess	sBIT . gray		7235767	0					
ANR	7235925	Identifier	sBIT		7235767	0					
ANR	7235926	Identifier	gray		7235767	1					
ANR	7235927	CallExpression	"bval ( png_ptr , params [ 0 ] , maxval )"		7235767	1					
ANR	7235928	Callee	bval		7235767	0					
ANR	7235929	Identifier	bval		7235767	0					
ANR	7235930	ArgumentList	png_ptr		7235767	1					
ANR	7235931	Argument	png_ptr		7235767	0					
ANR	7235932	Identifier	png_ptr		7235767	0					
ANR	7235933	Argument	params [ 0 ]		7235767	1					
ANR	7235934	ArrayIndexing	params [ 0 ]		7235767	0					
ANR	7235935	Identifier	params		7235767	0					
ANR	7235936	PrimaryExpression	0		7235767	1					
ANR	7235937	Argument	maxval		7235767	2					
ANR	7235938	Identifier	maxval		7235767	0					
ANR	7235939	IfStatement	if ( ct & PNG_COLOR_MASK_ALPHA )		7235767	6					
ANR	7235940	Condition	ct & PNG_COLOR_MASK_ALPHA	1405:7:41513:41537	7235767	0	True				
ANR	7235941	BitAndExpression	ct & PNG_COLOR_MASK_ALPHA		7235767	0		&			
ANR	7235942	Identifier	ct		7235767	0					
ANR	7235943	Identifier	PNG_COLOR_MASK_ALPHA		7235767	1					
ANR	7235944	ExpressionStatement	"sBIT . alpha = bval ( png_ptr , params [ nparams - 1 ] , maxval )"	1406:6:41546:41599	7235767	1	True				
ANR	7235945	AssignmentExpression	"sBIT . alpha = bval ( png_ptr , params [ nparams - 1 ] , maxval )"		7235767	0		=			
ANR	7235946	MemberAccess	sBIT . alpha		7235767	0					
ANR	7235947	Identifier	sBIT		7235767	0					
ANR	7235948	Identifier	alpha		7235767	1					
ANR	7235949	CallExpression	"bval ( png_ptr , params [ nparams - 1 ] , maxval )"		7235767	1					
ANR	7235950	Callee	bval		7235767	0					
ANR	7235951	Identifier	bval		7235767	0					
ANR	7235952	ArgumentList	png_ptr		7235767	1					
ANR	7235953	Argument	png_ptr		7235767	0					
ANR	7235954	Identifier	png_ptr		7235767	0					
ANR	7235955	Argument	params [ nparams - 1 ]		7235767	1					
ANR	7235956	ArrayIndexing	params [ nparams - 1 ]		7235767	0					
ANR	7235957	Identifier	params		7235767	0					
ANR	7235958	AdditiveExpression	nparams - 1		7235767	1		-			
ANR	7235959	Identifier	nparams		7235767	0					
ANR	7235960	PrimaryExpression	1		7235767	1					
ANR	7235961	Argument	maxval		7235767	2					
ANR	7235962	Identifier	maxval		7235767	0					
ANR	7235963	ElseStatement	else		7235767	0					
ANR	7235964	ExpressionStatement	sBIT . alpha = 42	1409:6:41616:41631	7235767	0	True				
ANR	7235965	AssignmentExpression	sBIT . alpha = 42		7235767	0		=			
ANR	7235966	MemberAccess	sBIT . alpha		7235767	0					
ANR	7235967	Identifier	sBIT		7235767	0					
ANR	7235968	Identifier	alpha		7235767	1					
ANR	7235969	PrimaryExpression	42		7235767	1					
ANR	7235970	ExpressionStatement	"png_set_sBIT ( png_ptr , info_ptr , & sBIT )"	1411:3:41637:41675	7235767	7	True				
ANR	7235971	CallExpression	"png_set_sBIT ( png_ptr , info_ptr , & sBIT )"		7235767	0					
ANR	7235972	Callee	png_set_sBIT		7235767	0					
ANR	7235973	Identifier	png_set_sBIT		7235767	0					
ANR	7235974	ArgumentList	png_ptr		7235767	1					
ANR	7235975	Argument	png_ptr		7235767	0					
ANR	7235976	Identifier	png_ptr		7235767	0					
ANR	7235977	Argument	info_ptr		7235767	1					
ANR	7235978	Identifier	info_ptr		7235767	0					
ANR	7235979	Argument	& sBIT		7235767	2					
ANR	7235980	UnaryOperationExpression	& sBIT		7235767	0					
ANR	7235981	UnaryOperator	&		7235767	0					
ANR	7235982	Identifier	sBIT		7235767	1					
ANR	7235983	ReturnType	static void		7235767	1					
ANR	7235984	Identifier	insert_sBIT		7235767	2					
ANR	7235985	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7235767	3					
ANR	7235986	Parameter	png_structp png_ptr	1378:12:40715:40733	7235767	0	True				
ANR	7235987	ParameterType	png_structp		7235767	0					
ANR	7235988	Identifier	png_ptr		7235767	1					
ANR	7235989	Parameter	png_infop info_ptr	1378:33:40736:40753	7235767	1	True				
ANR	7235990	ParameterType	png_infop		7235767	0					
ANR	7235991	Identifier	info_ptr		7235767	1					
ANR	7235992	Parameter	int nparams	1378:53:40756:40766	7235767	2	True				
ANR	7235993	ParameterType	int		7235767	0					
ANR	7235994	Identifier	nparams		7235767	1					
ANR	7235995	Parameter	png_charpp params	1379:6:40775:40791	7235767	3	True				
ANR	7235996	ParameterType	png_charpp		7235767	0					
ANR	7235997	Identifier	params		7235767	1					
ANR	7235998	CFGEntryNode	ENTRY		7235767		True				
ANR	7235999	CFGExitNode	EXIT		7235767		True				
ANR	7236000	Symbol	png_get_color_type		7235767						
ANR	7236001	Symbol	sBIT . green		7235767						
ANR	7236002	Symbol	c		7235767						
ANR	7236003	Symbol	png_get_bit_depth		7235767						
ANR	7236004	Symbol	& sBIT		7235767						
ANR	7236005	Symbol	* nparams		7235767						
ANR	7236006	Symbol	PNG_COLOR_MASK_COLOR		7235767						
ANR	7236007	Symbol	nparams		7235767						
ANR	7236008	Symbol	params		7235767						
ANR	7236009	Symbol	sBIT . red		7235767						
ANR	7236010	Symbol	sBIT		7235767						
ANR	7236011	Symbol	sBIT . gray		7235767						
ANR	7236012	Symbol	ct		7235767						
ANR	7236013	Symbol	bval		7235767						
ANR	7236014	Symbol	maxval		7235767						
ANR	7236015	Symbol	sBIT . alpha		7235767						
ANR	7236016	Symbol	PNG_COLOR_MASK_ALPHA		7235767						
ANR	7236017	Symbol	PNG_COLOR_MASK_PALETTE		7235767						
ANR	7236018	Symbol	sBIT . blue		7235767						
ANR	7236019	Symbol	info_ptr		7235767						
ANR	7236020	Symbol	png_ptr		7235767						
ANR	7236021	Symbol	* params		7235767						
ANR	7236022	Function	insert_sPLT	1415:0:41686:41827							
ANR	7236023	FunctionDef	"insert_sPLT (png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params)"		7236022	0					
ANR	7236024	CompoundStatement		1417:0:41783:41827	7236022	0					
ANR	7236025	ExpressionStatement	"fprintf ( stderr , ""insert sPLT: NYI\\n"" )"	1418:3:41788:41825	7236022	0	True				
ANR	7236026	CallExpression	"fprintf ( stderr , ""insert sPLT: NYI\\n"" )"		7236022	0					
ANR	7236027	Callee	fprintf		7236022	0					
ANR	7236028	Identifier	fprintf		7236022	0					
ANR	7236029	ArgumentList	stderr		7236022	1					
ANR	7236030	Argument	stderr		7236022	0					
ANR	7236031	Identifier	stderr		7236022	0					
ANR	7236032	Argument	"""insert sPLT: NYI\\n"""		7236022	1					
ANR	7236033	PrimaryExpression	"""insert sPLT: NYI\\n"""		7236022	0					
ANR	7236034	ReturnType	static void		7236022	1					
ANR	7236035	Identifier	insert_sPLT		7236022	2					
ANR	7236036	ParameterList	"png_structp png_ptr , png_infop info_ptr , int nparams , png_charpp params"		7236022	3					
ANR	7236037	Parameter	png_structp png_ptr	1416:12:41710:41728	7236022	0	True				
ANR	7236038	ParameterType	png_structp		7236022	0					
ANR	7236039	Identifier	png_ptr		7236022	1					
ANR	7236040	Parameter	png_infop info_ptr	1416:33:41731:41748	7236022	1	True				
ANR	7236041	ParameterType	png_infop		7236022	0					
ANR	7236042	Identifier	info_ptr		7236022	1					
ANR	7236043	Parameter	int nparams	1416:53:41751:41761	7236022	2	True				
ANR	7236044	ParameterType	int		7236022	0					
ANR	7236045	Identifier	nparams		7236022	1					
ANR	7236046	Parameter	png_charpp params	1416:66:41764:41780	7236022	3	True				
ANR	7236047	ParameterType	png_charpp		7236022	0					
ANR	7236048	Identifier	params		7236022	1					
ANR	7236049	CFGEntryNode	ENTRY		7236022		True				
ANR	7236050	CFGExitNode	EXIT		7236022		True				
ANR	7236051	Symbol	nparams		7236022						
ANR	7236052	Symbol	params		7236022						
ANR	7236053	Symbol	stderr		7236022						
ANR	7236054	Symbol	info_ptr		7236022						
ANR	7236055	Symbol	png_ptr		7236022						
ANR	7236056	Function	find_parameters	1422:0:41837:42563							
ANR	7236057	FunctionDef	"find_parameters (png_const_charp what , png_charp param , png_charp * list , int nparams)"		7236056	0					
ANR	7236058	CompoundStatement		1425:0:41936:42563	7236056	0					
ANR	7236059	IdentifierDeclStatement	int i ;	1429:3:42092:42097	7236056	0	True				
ANR	7236060	IdentifierDecl	i		7236056	0					
ANR	7236061	IdentifierDeclType	int		7236056	0					
ANR	7236062	Identifier	i		7236056	1					
ANR	7236063	ForStatement	for ( i = 0 ; * param && i < nparams ; ++ i )		7236056	1					
ANR	7236064	ForInit	i = 0 ;	1430:8:42107:42110	7236056	0	True				
ANR	7236065	AssignmentExpression	i = 0		7236056	0		=			
ANR	7236066	Identifier	i		7236056	0					
ANR	7236067	PrimaryExpression	0		7236056	1					
ANR	7236068	Condition	* param && i < nparams	1430:13:42112:42130	7236056	1	True				
ANR	7236069	AndExpression	* param && i < nparams		7236056	0		&&			
ANR	7236070	UnaryOperationExpression	* param		7236056	0					
ANR	7236071	UnaryOperator	*		7236056	0					
ANR	7236072	Identifier	param		7236056	1					
ANR	7236073	RelationalExpression	i < nparams		7236056	1		<			
ANR	7236074	Identifier	i		7236056	0					
ANR	7236075	Identifier	nparams		7236056	1					
ANR	7236076	UnaryExpression	++ i	1430:34:42133:42135	7236056	2	True				
ANR	7236077	IncDec	++		7236056	0					
ANR	7236078	Identifier	i		7236056	1					
ANR	7236079	CompoundStatement		7:3:204:204	7236056	3					
ANR	7236080	ExpressionStatement	list [ i ] = param	1432:6:42149:42164	7236056	0	True				
ANR	7236081	AssignmentExpression	list [ i ] = param		7236056	0		=			
ANR	7236082	ArrayIndexing	list [ i ]		7236056	0					
ANR	7236083	Identifier	list		7236056	0					
ANR	7236084	Identifier	i		7236056	1					
ANR	7236085	Identifier	param		7236056	1					
ANR	7236086	WhileStatement	while ( * ++ param )		7236056	1					
ANR	7236087	Condition	* ++ param	1433:13:42179:42186	7236056	0	True				
ANR	7236088	UnaryOperationExpression	* ++ param		7236056	0					
ANR	7236089	UnaryOperator	*		7236056	0					
ANR	7236090	UnaryExpression	++ param		7236056	1					
ANR	7236091	IncDec	++		7236056	0					
ANR	7236092	Identifier	param		7236056	1					
ANR	7236093	IfStatement	if ( * param == '\\n' || * param == ':' )		7236056	1					
ANR	7236094	Condition	* param == '\\n' || * param == ':'	1433:27:42193:42223	7236056	0	True				
ANR	7236095	OrExpression	* param == '\\n' || * param == ':'		7236056	0		||			
ANR	7236096	EqualityExpression	* param == '\\n'		7236056	0		==			
ANR	7236097	UnaryOperationExpression	* param		7236056	0					
ANR	7236098	UnaryOperator	*		7236056	0					
ANR	7236099	Identifier	param		7236056	1					
ANR	7236100	PrimaryExpression	'\\n'		7236056	1					
ANR	7236101	EqualityExpression	* param == ':'		7236056	1		==			
ANR	7236102	UnaryOperationExpression	* param		7236056	0					
ANR	7236103	UnaryOperator	*		7236056	0					
ANR	7236104	Identifier	param		7236056	1					
ANR	7236105	PrimaryExpression	':'		7236056	1					
ANR	7236106	CompoundStatement		10:6:295:295	7236056	1					
ANR	7236107	ExpressionStatement	* param ++ = 0	1435:9:42243:42255	7236056	0	True				
ANR	7236108	AssignmentExpression	* param ++ = 0		7236056	0		=			
ANR	7236109	UnaryOperationExpression	* param ++		7236056	0					
ANR	7236110	UnaryOperator	*		7236056	0					
ANR	7236111	PostIncDecOperationExpression	param ++		7236056	1					
ANR	7236112	Identifier	param		7236056	0					
ANR	7236113	IncDec	++		7236056	1					
ANR	7236114	PrimaryExpression	0		7236056	1					
ANR	7236115	BreakStatement	break ;	1436:9:42297:42302	7236056	1	True				
ANR	7236116	IfStatement	if ( * param )		7236056	2					
ANR	7236117	Condition	* param	1440:7:42359:42364	7236056	0	True				
ANR	7236118	UnaryOperationExpression	* param		7236056	0					
ANR	7236119	UnaryOperator	*		7236056	0					
ANR	7236120	Identifier	param		7236056	1					
ANR	7236121	CompoundStatement		17:3:433:433	7236056	1					
ANR	7236122	ExpressionStatement	"fprintf ( stderr , ""--insert %s: too many parameters (%s)\\n"" , what , param )"	1442:6:42378:42449	7236056	0	True				
ANR	7236123	CallExpression	"fprintf ( stderr , ""--insert %s: too many parameters (%s)\\n"" , what , param )"		7236056	0					
ANR	7236124	Callee	fprintf		7236056	0					
ANR	7236125	Identifier	fprintf		7236056	0					
ANR	7236126	ArgumentList	stderr		7236056	1					
ANR	7236127	Argument	stderr		7236056	0					
ANR	7236128	Identifier	stderr		7236056	0					
ANR	7236129	Argument	"""--insert %s: too many parameters (%s)\\n"""		7236056	1					
ANR	7236130	PrimaryExpression	"""--insert %s: too many parameters (%s)\\n"""		7236056	0					
ANR	7236131	Argument	what		7236056	2					
ANR	7236132	Identifier	what		7236056	0					
ANR	7236133	Argument	param		7236056	3					
ANR	7236134	Identifier	param		7236056	0					
ANR	7236135	ExpressionStatement	exit ( 1 )	1443:6:42457:42464	7236056	1	True				
ANR	7236136	CallExpression	exit ( 1 )		7236056	0					
ANR	7236137	Callee	exit		7236056	0					
ANR	7236138	Identifier	exit		7236056	0					
ANR	7236139	ArgumentList	1		7236056	1					
ANR	7236140	Argument	1		7236056	0					
ANR	7236141	PrimaryExpression	1		7236056	0					
ANR	7236142	ExpressionStatement	list [ i ] = NULL	1446:3:42475:42489	7236056	3	True				
ANR	7236143	AssignmentExpression	list [ i ] = NULL		7236056	0		=			
ANR	7236144	ArrayIndexing	list [ i ]		7236056	0					
ANR	7236145	Identifier	list		7236056	0					
ANR	7236146	Identifier	i		7236056	1					
ANR	7236147	Identifier	NULL		7236056	1					
ANR	7236148	ReturnStatement	return i ;	1447:3:42516:42524	7236056	4	True				
ANR	7236149	Identifier	i		7236056	0					
ANR	7236150	ReturnType	static int		7236056	1					
ANR	7236151	Identifier	find_parameters		7236056	2					
ANR	7236152	ParameterList	"png_const_charp what , png_charp param , png_charp * list , int nparams"		7236056	3					
ANR	7236153	Parameter	png_const_charp what	1423:16:41864:41883	7236056	0	True				
ANR	7236154	ParameterType	png_const_charp		7236056	0					
ANR	7236155	Identifier	what		7236056	1					
ANR	7236156	Parameter	png_charp param	1423:38:41886:41900	7236056	1	True				
ANR	7236157	ParameterType	png_charp		7236056	0					
ANR	7236158	Identifier	param		7236056	1					
ANR	7236159	Parameter	png_charp * list	1423:55:41903:41917	7236056	2	True				
ANR	7236160	ParameterType	png_charp *		7236056	0					
ANR	7236161	Identifier	list		7236056	1					
ANR	7236162	Parameter	int nparams	1424:3:41923:41933	7236056	3	True				
ANR	7236163	ParameterType	int		7236056	0					
ANR	7236164	Identifier	nparams		7236056	1					
ANR	7236165	CFGEntryNode	ENTRY		7236056		True				
ANR	7236166	CFGExitNode	EXIT		7236056		True				
ANR	7236167	Symbol	* param ++		7236056						
ANR	7236168	Symbol	what		7236056						
ANR	7236169	Symbol	* i		7236056						
ANR	7236170	Symbol	NULL		7236056						
ANR	7236171	Symbol	param		7236056						
ANR	7236172	Symbol	* list		7236056						
ANR	7236173	Symbol	i		7236056						
ANR	7236174	Symbol	list		7236056						
ANR	7236175	Symbol	nparams		7236056						
ANR	7236176	Symbol	stderr		7236056						
ANR	7236177	Symbol	* param		7236056						
ANR	7236178	Symbol	* ++ param		7236056						
ANR	7236179	Function	bad_parameter_count	1450:0:42566:42723							
ANR	7236180	FunctionDef	"bad_parameter_count (png_const_charp what , int nparams)"		7236179	0					
ANR	7236181	CompoundStatement		1452:0:42633:42723	7236179	0					
ANR	7236182	ExpressionStatement	"fprintf ( stderr , ""--insert %s: bad parameter count %d\\n"" , what , nparams )"	1453:3:42638:42709	7236179	0	True				
ANR	7236183	CallExpression	"fprintf ( stderr , ""--insert %s: bad parameter count %d\\n"" , what , nparams )"		7236179	0					
ANR	7236184	Callee	fprintf		7236179	0					
ANR	7236185	Identifier	fprintf		7236179	0					
ANR	7236186	ArgumentList	stderr		7236179	1					
ANR	7236187	Argument	stderr		7236179	0					
ANR	7236188	Identifier	stderr		7236179	0					
ANR	7236189	Argument	"""--insert %s: bad parameter count %d\\n"""		7236179	1					
ANR	7236190	PrimaryExpression	"""--insert %s: bad parameter count %d\\n"""		7236179	0					
ANR	7236191	Argument	what		7236179	2					
ANR	7236192	Identifier	what		7236179	0					
ANR	7236193	Argument	nparams		7236179	3					
ANR	7236194	Identifier	nparams		7236179	0					
ANR	7236195	ExpressionStatement	exit ( 1 )	1454:3:42714:42721	7236179	1	True				
ANR	7236196	CallExpression	exit ( 1 )		7236179	0					
ANR	7236197	Callee	exit		7236179	0					
ANR	7236198	Identifier	exit		7236179	0					
ANR	7236199	ArgumentList	1		7236179	1					
ANR	7236200	Argument	1		7236179	0					
ANR	7236201	PrimaryExpression	1		7236179	0					
ANR	7236202	ReturnType	static void		7236179	1					
ANR	7236203	Identifier	bad_parameter_count		7236179	2					
ANR	7236204	ParameterList	"png_const_charp what , int nparams"		7236179	3					
ANR	7236205	Parameter	png_const_charp what	1451:20:42598:42617	7236179	0	True				
ANR	7236206	ParameterType	png_const_charp		7236179	0					
ANR	7236207	Identifier	what		7236179	1					
ANR	7236208	Parameter	int nparams	1451:42:42620:42630	7236179	1	True				
ANR	7236209	ParameterType	int		7236179	0					
ANR	7236210	Identifier	nparams		7236179	1					
ANR	7236211	CFGEntryNode	ENTRY		7236179		True				
ANR	7236212	CFGExitNode	EXIT		7236179		True				
ANR	7236213	Symbol	what		7236179						
ANR	7236214	Symbol	nparams		7236179						
ANR	7236215	Symbol	stderr		7236179						
ANR	7236216	Function	make_insert	1457:0:42726:43304							
ANR	7236217	FunctionDef	"make_insert (png_const_charp what , void ( * insert ) ( png_structp , png_infop , int , png_charpp ) , int nparams , png_charpp list)"		7236216	0					
ANR	7236218	CompoundStatement		1461:0:42875:43304	7236216	0					
ANR	7236219	IdentifierDeclStatement	int i ;	1462:3:42880:42885	7236216	0	True				
ANR	7236220	IdentifierDecl	i		7236216	0					
ANR	7236221	IdentifierDeclType	int		7236216	0					
ANR	7236222	Identifier	i		7236216	1					
ANR	7236223	IdentifierDeclStatement	chunk_insert * cip ;	1463:3:42890:42907	7236216	1	True				
ANR	7236224	IdentifierDecl	* cip		7236216	0					
ANR	7236225	IdentifierDeclType	chunk_insert *		7236216	0					
ANR	7236226	Identifier	cip		7236216	1					
ANR	7236227	ExpressionStatement	"cip = malloc ( offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp ) )"	1465:3:42913:42997	7236216	2	True				
ANR	7236228	AssignmentExpression	"cip = malloc ( offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp ) )"		7236216	0		=			
ANR	7236229	Identifier	cip		7236216	0					
ANR	7236230	CallExpression	"malloc ( offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp ) )"		7236216	1					
ANR	7236231	Callee	malloc		7236216	0					
ANR	7236232	Identifier	malloc		7236216	0					
ANR	7236233	ArgumentList	"offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp )"		7236216	1					
ANR	7236234	Argument	"offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp )"		7236216	0					
ANR	7236235	AdditiveExpression	"offsetof ( chunk_insert , parameters ) + nparams * sizeof ( png_charp )"		7236216	0		+			
ANR	7236236	CallExpression	"offsetof ( chunk_insert , parameters )"		7236216	0					
ANR	7236237	Callee	offsetof		7236216	0					
ANR	7236238	Identifier	offsetof		7236216	0					
ANR	7236239	ArgumentList	chunk_insert		7236216	1					
ANR	7236240	Argument	chunk_insert		7236216	0					
ANR	7236241	Identifier	chunk_insert		7236216	0					
ANR	7236242	Argument	parameters		7236216	1					
ANR	7236243	Identifier	parameters		7236216	0					
ANR	7236244	MultiplicativeExpression	nparams * sizeof ( png_charp )		7236216	1		*			
ANR	7236245	Identifier	nparams		7236216	0					
ANR	7236246	SizeofExpression	sizeof ( png_charp )		7236216	1					
ANR	7236247	Sizeof	sizeof		7236216	0					
ANR	7236248	SizeofOperand	png_charp		7236216	1					
ANR	7236249	IfStatement	if ( cip == NULL )		7236216	3					
ANR	7236250	Condition	cip == NULL	1468:7:43007:43017	7236216	0	True				
ANR	7236251	EqualityExpression	cip == NULL		7236216	0		==			
ANR	7236252	Identifier	cip		7236216	0					
ANR	7236253	Identifier	NULL		7236216	1					
ANR	7236254	CompoundStatement		9:3:147:147	7236216	1					
ANR	7236255	ExpressionStatement	"fprintf ( stderr , ""--insert %s: out of memory allocating %d parameters\\n"" , what , nparams )"	1470:6:43031:43127	7236216	0	True				
ANR	7236256	CallExpression	"fprintf ( stderr , ""--insert %s: out of memory allocating %d parameters\\n"" , what , nparams )"		7236216	0					
ANR	7236257	Callee	fprintf		7236216	0					
ANR	7236258	Identifier	fprintf		7236216	0					
ANR	7236259	ArgumentList	stderr		7236216	1					
ANR	7236260	Argument	stderr		7236216	0					
ANR	7236261	Identifier	stderr		7236216	0					
ANR	7236262	Argument	"""--insert %s: out of memory allocating %d parameters\\n"""		7236216	1					
ANR	7236263	PrimaryExpression	"""--insert %s: out of memory allocating %d parameters\\n"""		7236216	0					
ANR	7236264	Argument	what		7236216	2					
ANR	7236265	Identifier	what		7236216	0					
ANR	7236266	Argument	nparams		7236216	3					
ANR	7236267	Identifier	nparams		7236216	0					
ANR	7236268	ExpressionStatement	exit ( 1 )	1472:6:43135:43142	7236216	1	True				
ANR	7236269	CallExpression	exit ( 1 )		7236216	0					
ANR	7236270	Callee	exit		7236216	0					
ANR	7236271	Identifier	exit		7236216	0					
ANR	7236272	ArgumentList	1		7236216	1					
ANR	7236273	Argument	1		7236216	0					
ANR	7236274	PrimaryExpression	1		7236216	0					
ANR	7236275	ExpressionStatement	cip -> next = NULL	1475:3:43153:43169	7236216	4	True				
ANR	7236276	AssignmentExpression	cip -> next = NULL		7236216	0		=			
ANR	7236277	PtrMemberAccess	cip -> next		7236216	0					
ANR	7236278	Identifier	cip		7236216	0					
ANR	7236279	Identifier	next		7236216	1					
ANR	7236280	Identifier	NULL		7236216	1					
ANR	7236281	ExpressionStatement	cip -> insert = insert	1476:3:43174:43194	7236216	5	True				
ANR	7236282	AssignmentExpression	cip -> insert = insert		7236216	0		=			
ANR	7236283	PtrMemberAccess	cip -> insert		7236216	0					
ANR	7236284	Identifier	cip		7236216	0					
ANR	7236285	Identifier	insert		7236216	1					
ANR	7236286	Identifier	insert		7236216	1					
ANR	7236287	ExpressionStatement	cip -> nparams = nparams	1477:3:43199:43221	7236216	6	True				
ANR	7236288	AssignmentExpression	cip -> nparams = nparams		7236216	0		=			
ANR	7236289	PtrMemberAccess	cip -> nparams		7236216	0					
ANR	7236290	Identifier	cip		7236216	0					
ANR	7236291	Identifier	nparams		7236216	1					
ANR	7236292	Identifier	nparams		7236216	1					
ANR	7236293	ForStatement	for ( i = 0 ; i < nparams ; ++ i )		7236216	7					
ANR	7236294	ForInit	i = 0 ;	1478:8:43231:43234	7236216	0	True				
ANR	7236295	AssignmentExpression	i = 0		7236216	0		=			
ANR	7236296	Identifier	i		7236216	0					
ANR	7236297	PrimaryExpression	0		7236216	1					
ANR	7236298	Condition	i < nparams	1478:13:43236:43244	7236216	1	True				
ANR	7236299	RelationalExpression	i < nparams		7236216	0		<			
ANR	7236300	Identifier	i		7236216	0					
ANR	7236301	Identifier	nparams		7236216	1					
ANR	7236302	UnaryExpression	++ i	1478:24:43247:43249	7236216	2	True				
ANR	7236303	IncDec	++		7236216	0					
ANR	7236304	Identifier	i		7236216	1					
ANR	7236305	ExpressionStatement	cip -> parameters [ i ] = list [ i ]	1479:6:43258:43286	7236216	3	True				
ANR	7236306	AssignmentExpression	cip -> parameters [ i ] = list [ i ]		7236216	0		=			
ANR	7236307	ArrayIndexing	cip -> parameters [ i ]		7236216	0					
ANR	7236308	PtrMemberAccess	cip -> parameters		7236216	0					
ANR	7236309	Identifier	cip		7236216	0					
ANR	7236310	Identifier	parameters		7236216	1					
ANR	7236311	Identifier	i		7236216	1					
ANR	7236312	ArrayIndexing	list [ i ]		7236216	1					
ANR	7236313	Identifier	list		7236216	0					
ANR	7236314	Identifier	i		7236216	1					
ANR	7236315	ReturnStatement	return cip ;	1481:3:43292:43302	7236216	8	True				
ANR	7236316	Identifier	cip		7236216	0					
ANR	7236317	ReturnType	static chunk_insert *		7236216	1					
ANR	7236318	Identifier	make_insert		7236216	2					
ANR	7236319	ParameterList	"png_const_charp what , void ( * insert ) ( png_structp , png_infop , int , png_charpp ) , int nparams , png_charpp list"		7236216	3					
ANR	7236320	Parameter	png_const_charp what	1458:12:42760:42779	7236216	0	True				
ANR	7236321	ParameterType	png_const_charp		7236216	0					
ANR	7236322	Identifier	what		7236216	1					
ANR	7236323	Parameter	"void ( * insert ) ( png_structp , png_infop , int , png_charpp )"	1459:3:42785:42839	7236216	1	True				
ANR	7236324	ParameterType	"(( png_structp , png_infop , int , png_charpp ) void) *"		7236216	0					
ANR	7236325	Identifier	insert		7236216	1					
ANR	7236326	Parameter	int nparams	1460:3:42845:42855	7236216	2	True				
ANR	7236327	ParameterType	int		7236216	0					
ANR	7236328	Identifier	nparams		7236216	1					
ANR	7236329	Parameter	png_charpp list	1460:16:42858:42872	7236216	3	True				
ANR	7236330	ParameterType	png_charpp		7236216	0					
ANR	7236331	Identifier	list		7236216	1					
ANR	7236332	CFGEntryNode	ENTRY		7236216		True				
ANR	7236333	CFGExitNode	EXIT		7236216		True				
ANR	7236334	Symbol	malloc		7236216						
ANR	7236335	Symbol	NULL		7236216						
ANR	7236336	Symbol	* cip -> parameters		7236216						
ANR	7236337	Symbol	insert		7236216						
ANR	7236338	Symbol	i		7236216						
ANR	7236339	Symbol	cip		7236216						
ANR	7236340	Symbol	* cip		7236216						
ANR	7236341	Symbol	nparams		7236216						
ANR	7236342	Symbol	list		7236216						
ANR	7236343	Symbol	stderr		7236216						
ANR	7236344	Symbol	cip -> next		7236216						
ANR	7236345	Symbol	cip -> nparams		7236216						
ANR	7236346	Symbol	what		7236216						
ANR	7236347	Symbol	* i		7236216						
ANR	7236348	Symbol	* list		7236216						
ANR	7236349	Symbol	chunk_insert		7236216						
ANR	7236350	Symbol	offsetof		7236216						
ANR	7236351	Symbol	cip -> parameters		7236216						
ANR	7236352	Symbol	parameters		7236216						
ANR	7236353	Symbol	* * cip		7236216						
ANR	7236354	Symbol	cip -> insert		7236216						
ANR	7236355	Function	find_insert	1484:0:43307:45316							
ANR	7236356	FunctionDef	"find_insert (png_const_charp what , png_charp param)"		7236355	0					
ANR	7236357	CompoundStatement		1486:0:43380:45316	7236355	0					
ANR	7236358	IdentifierDeclStatement	png_uint_32 chunk = 0 ;	1487:3:43385:43406	7236355	0	True				
ANR	7236359	IdentifierDecl	chunk = 0		7236355	0					
ANR	7236360	IdentifierDeclType	png_uint_32		7236355	0					
ANR	7236361	Identifier	chunk		7236355	1					
ANR	7236362	AssignmentExpression	chunk = 0		7236355	2		=			
ANR	7236363	Identifier	chunk		7236355	0					
ANR	7236364	PrimaryExpression	0		7236355	1					
ANR	7236365	IdentifierDeclStatement	png_charp parameter_list [ 1024 ] ;	1488:3:43411:43441	7236355	1	True				
ANR	7236366	IdentifierDecl	parameter_list [ 1024 ]		7236355	0					
ANR	7236367	IdentifierDeclType	png_charp [ 1024 ]		7236355	0					
ANR	7236368	Identifier	parameter_list		7236355	1					
ANR	7236369	PrimaryExpression	1024		7236355	2					
ANR	7236370	IdentifierDeclStatement	"int i , nparams ;"	1489:3:43446:43460	7236355	2	True				
ANR	7236371	IdentifierDecl	i		7236355	0					
ANR	7236372	IdentifierDeclType	int		7236355	0					
ANR	7236373	Identifier	i		7236355	1					
ANR	7236374	IdentifierDecl	nparams		7236355	1					
ANR	7236375	IdentifierDeclType	int		7236355	0					
ANR	7236376	Identifier	nparams		7236355	1					
ANR	7236377	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		7236355	3					
ANR	7236378	ForInit	i = 0 ;	1492:8:43504:43507	7236355	0	True				
ANR	7236379	AssignmentExpression	i = 0		7236355	0		=			
ANR	7236380	Identifier	i		7236355	0					
ANR	7236381	PrimaryExpression	0		7236355	1					
ANR	7236382	Condition	i < 4	1492:13:43509:43511	7236355	1	True				
ANR	7236383	RelationalExpression	i < 4		7236355	0		<			
ANR	7236384	Identifier	i		7236355	0					
ANR	7236385	PrimaryExpression	4		7236355	1					
ANR	7236386	UnaryExpression	++ i	1492:18:43514:43516	7236355	2	True				
ANR	7236387	IncDec	++		7236355	0					
ANR	7236388	Identifier	i		7236355	1					
ANR	7236389	CompoundStatement		9:6:149:166	7236355	3					
ANR	7236390	IdentifierDeclStatement	char ch = what [ i ] ;	1494:6:43530:43547	7236355	0	True				
ANR	7236391	IdentifierDecl	ch = what [ i ]		7236355	0					
ANR	7236392	IdentifierDeclType	char		7236355	0					
ANR	7236393	Identifier	ch		7236355	1					
ANR	7236394	AssignmentExpression	ch = what [ i ]		7236355	2		=			
ANR	7236395	Identifier	ch		7236355	0					
ANR	7236396	ArrayIndexing	what [ i ]		7236355	1					
ANR	7236397	Identifier	what		7236355	0					
ANR	7236398	Identifier	i		7236355	1					
ANR	7236399	IfStatement	if ( ( ch >= 65 && ch <= 90 ) || ( ch >= 97 && ch <= 122 ) )		7236355	1					
ANR	7236400	Condition	( ch >= 65 && ch <= 90 ) || ( ch >= 97 && ch <= 122 )	1496:10:43560:43608	7236355	0	True				
ANR	7236401	OrExpression	( ch >= 65 && ch <= 90 ) || ( ch >= 97 && ch <= 122 )		7236355	0		||			
ANR	7236402	AndExpression	ch >= 65 && ch <= 90		7236355	0		&&			
ANR	7236403	RelationalExpression	ch >= 65		7236355	0		>=			
ANR	7236404	Identifier	ch		7236355	0					
ANR	7236405	PrimaryExpression	65		7236355	1					
ANR	7236406	RelationalExpression	ch <= 90		7236355	1		<=			
ANR	7236407	Identifier	ch		7236355	0					
ANR	7236408	PrimaryExpression	90		7236355	1					
ANR	7236409	AndExpression	ch >= 97 && ch <= 122		7236355	1		&&			
ANR	7236410	RelationalExpression	ch >= 97		7236355	0		>=			
ANR	7236411	Identifier	ch		7236355	0					
ANR	7236412	PrimaryExpression	97		7236355	1					
ANR	7236413	RelationalExpression	ch <= 122		7236355	1		<=			
ANR	7236414	Identifier	ch		7236355	0					
ANR	7236415	PrimaryExpression	122		7236355	1					
ANR	7236416	ExpressionStatement	chunk = ( chunk << 8 ) + what [ i ]	1497:9:43620:43650	7236355	1	True				
ANR	7236417	AssignmentExpression	chunk = ( chunk << 8 ) + what [ i ]		7236355	0		=			
ANR	7236418	Identifier	chunk		7236355	0					
ANR	7236419	AdditiveExpression	( chunk << 8 ) + what [ i ]		7236355	1		+			
ANR	7236420	ShiftExpression	chunk << 8		7236355	0		<<			
ANR	7236421	Identifier	chunk		7236355	0					
ANR	7236422	PrimaryExpression	8		7236355	1					
ANR	7236423	ArrayIndexing	what [ i ]		7236355	1					
ANR	7236424	Identifier	what		7236355	0					
ANR	7236425	Identifier	i		7236355	1					
ANR	7236426	ElseStatement	else		7236355	0					
ANR	7236427	BreakStatement	break ;	1500:9:43673:43678	7236355	0	True				
ANR	7236428	IfStatement	if ( i < 4 || what [ 4 ] != 0 )		7236355	4					
ANR	7236429	Condition	i < 4 || what [ 4 ] != 0	1503:7:43693:43713	7236355	0	True				
ANR	7236430	OrExpression	i < 4 || what [ 4 ] != 0		7236355	0		||			
ANR	7236431	RelationalExpression	i < 4		7236355	0		<			
ANR	7236432	Identifier	i		7236355	0					
ANR	7236433	PrimaryExpression	4		7236355	1					
ANR	7236434	EqualityExpression	what [ 4 ] != 0		7236355	1		!=			
ANR	7236435	ArrayIndexing	what [ 4 ]		7236355	0					
ANR	7236436	Identifier	what		7236355	0					
ANR	7236437	PrimaryExpression	4		7236355	1					
ANR	7236438	PrimaryExpression	0		7236355	1					
ANR	7236439	CompoundStatement		19:3:338:338	7236355	1					
ANR	7236440	ExpressionStatement	"fprintf ( stderr , ""makepng --insert \\""%s\\"": invalid chunk name\\n"" , what )"	1505:6:43727:43797	7236355	0	True				
ANR	7236441	CallExpression	"fprintf ( stderr , ""makepng --insert \\""%s\\"": invalid chunk name\\n"" , what )"		7236355	0					
ANR	7236442	Callee	fprintf		7236355	0					
ANR	7236443	Identifier	fprintf		7236355	0					
ANR	7236444	ArgumentList	stderr		7236355	1					
ANR	7236445	Argument	stderr		7236355	0					
ANR	7236446	Identifier	stderr		7236355	0					
ANR	7236447	Argument	"""makepng --insert \\""%s\\"": invalid chunk name\\n"""		7236355	1					
ANR	7236448	PrimaryExpression	"""makepng --insert \\""%s\\"": invalid chunk name\\n"""		7236355	0					
ANR	7236449	Argument	what		7236355	2					
ANR	7236450	Identifier	what		7236355	0					
ANR	7236451	ExpressionStatement	exit ( 1 )	1506:6:43805:43812	7236355	1	True				
ANR	7236452	CallExpression	exit ( 1 )		7236355	0					
ANR	7236453	Callee	exit		7236355	0					
ANR	7236454	Identifier	exit		7236355	0					
ANR	7236455	ArgumentList	1		7236355	1					
ANR	7236456	Argument	1		7236355	0					
ANR	7236457	PrimaryExpression	1		7236355	0					
ANR	7236458	ExpressionStatement	"nparams = find_parameters ( what , param , parameter_list , 1024 )"	1510:3:43861:43921	7236355	5	True				
ANR	7236459	AssignmentExpression	"nparams = find_parameters ( what , param , parameter_list , 1024 )"		7236355	0		=			
ANR	7236460	Identifier	nparams		7236355	0					
ANR	7236461	CallExpression	"find_parameters ( what , param , parameter_list , 1024 )"		7236355	1					
ANR	7236462	Callee	find_parameters		7236355	0					
ANR	7236463	Identifier	find_parameters		7236355	0					
ANR	7236464	ArgumentList	what		7236355	1					
ANR	7236465	Argument	what		7236355	0					
ANR	7236466	Identifier	what		7236355	0					
ANR	7236467	Argument	param		7236355	1					
ANR	7236468	Identifier	param		7236355	0					
ANR	7236469	Argument	parameter_list		7236355	2					
ANR	7236470	Identifier	parameter_list		7236355	0					
ANR	7236471	Argument	1024		7236355	3					
ANR	7236472	PrimaryExpression	1024		7236355	0					
ANR	7236473	Statement	define	1512:3:43927:43932	7236355	6	True				
ANR	7236474	Statement	CHUNK	1512:10:43934:43938	7236355	7	True				
ANR	7236475	Statement	(	1512:15:43939:43939	7236355	8	True				
ANR	7236476	Statement	a	1512:16:43940:43940	7236355	9	True				
ANR	7236477	Statement	","	1512:17:43941:43941	7236355	10	True				
ANR	7236478	Statement	b	1512:18:43942:43942	7236355	11	True				
ANR	7236479	Statement	","	1512:19:43943:43943	7236355	12	True				
ANR	7236480	Statement	c	1512:20:43944:43944	7236355	13	True				
ANR	7236481	Statement	","	1512:21:43945:43945	7236355	14	True				
ANR	7236482	Statement	d	1512:22:43946:43946	7236355	15	True				
ANR	7236483	Statement	)	1512:23:43947:43947	7236355	16	True				
ANR	7236484	Statement	(	1512:25:43949:43949	7236355	17	True				
ANR	7236485	Statement	(	1512:26:43950:43950	7236355	18	True				
ANR	7236486	Statement	(	1512:27:43951:43951	7236355	19	True				
ANR	7236487	Statement	a	1512:28:43952:43952	7236355	20	True				
ANR	7236488	Statement	)	1512:29:43953:43953	7236355	21	True				
ANR	7236489	Statement	<<	1512:30:43954:43955	7236355	22	True				
ANR	7236490	Statement	24	1512:32:43956:43957	7236355	23	True				
ANR	7236491	Statement	)	1512:34:43958:43958	7236355	24	True				
ANR	7236492	Statement	+	1512:35:43959:43959	7236355	25	True				
ANR	7236493	Statement	(	1512:36:43960:43960	7236355	26	True				
ANR	7236494	Statement	(	1512:37:43961:43961	7236355	27	True				
ANR	7236495	Statement	b	1512:38:43962:43962	7236355	28	True				
ANR	7236496	Statement	)	1512:39:43963:43963	7236355	29	True				
ANR	7236497	Statement	<<	1512:40:43964:43965	7236355	30	True				
ANR	7236498	Statement	16	1512:42:43966:43967	7236355	31	True				
ANR	7236499	Statement	)	1512:44:43968:43968	7236355	32	True				
ANR	7236500	Statement	+	1512:45:43969:43969	7236355	33	True				
ANR	7236501	Statement	(	1512:46:43970:43970	7236355	34	True				
ANR	7236502	Statement	(	1512:47:43971:43971	7236355	35	True				
ANR	7236503	Statement	c	1512:48:43972:43972	7236355	36	True				
ANR	7236504	Statement	)	1512:49:43973:43973	7236355	37	True				
ANR	7236505	Statement	<<	1512:50:43974:43975	7236355	38	True				
ANR	7236506	Statement	8	1512:52:43976:43976	7236355	39	True				
ANR	7236507	Statement	)	1512:53:43977:43977	7236355	40	True				
ANR	7236508	Statement	+	1512:54:43978:43978	7236355	41	True				
ANR	7236509	Statement	(	1512:55:43979:43979	7236355	42	True				
ANR	7236510	Statement	d	1512:56:43980:43980	7236355	43	True				
ANR	7236511	Statement	)	1512:57:43981:43981	7236355	44	True				
ANR	7236512	Statement	)	1512:58:43982:43982	7236355	45	True				
ANR	7236513	SwitchStatement	switch ( chunk )		7236355	46					
ANR	7236514	Condition	chunk	1514:11:43996:44000	7236355	0	True				
ANR	7236515	Identifier	chunk		7236355	0					
ANR	7236516	CompoundStatement		30:3:625:625	7236355	1					
ANR	7236517	Statement	case	1516:6:44014:44017	7236355	0	True				
ANR	7236518	Statement	CHUNK	1516:11:44019:44023	7236355	1	True				
ANR	7236519	Statement	(	1516:16:44024:44024	7236355	2	True				
ANR	7236520	Statement	105	1516:17:44025:44027	7236355	3	True				
ANR	7236521	Statement	","	1516:20:44028:44028	7236355	4	True				
ANR	7236522	Statement	67	1516:21:44029:44030	7236355	5	True				
ANR	7236523	Statement	","	1516:23:44031:44031	7236355	6	True				
ANR	7236524	Statement	67	1516:24:44032:44033	7236355	7	True				
ANR	7236525	Statement	","	1516:26:44034:44034	7236355	8	True				
ANR	7236526	Statement	80	1516:27:44035:44036	7236355	9	True				
ANR	7236527	Statement	)	1516:29:44037:44037	7236355	10	True				
ANR	7236528	Statement	:	1516:30:44038:44038	7236355	11	True				
ANR	7236529	IfStatement	if ( nparams == 2 )		7236355	12					
ANR	7236530	Condition	nparams == 2	1517:13:44065:44076	7236355	0	True				
ANR	7236531	EqualityExpression	nparams == 2		7236355	0		==			
ANR	7236532	Identifier	nparams		7236355	0					
ANR	7236533	PrimaryExpression	2		7236355	1					
ANR	7236534	ReturnStatement	"return make_insert ( what , insert_iCCP , nparams , parameter_list ) ;"	1518:12:44091:44153	7236355	1	True				
ANR	7236535	CallExpression	"make_insert ( what , insert_iCCP , nparams , parameter_list )"		7236355	0					
ANR	7236536	Callee	make_insert		7236355	0					
ANR	7236537	Identifier	make_insert		7236355	0					
ANR	7236538	ArgumentList	what		7236355	1					
ANR	7236539	Argument	what		7236355	0					
ANR	7236540	Identifier	what		7236355	0					
ANR	7236541	Argument	insert_iCCP		7236355	1					
ANR	7236542	Identifier	insert_iCCP		7236355	0					
ANR	7236543	Argument	nparams		7236355	2					
ANR	7236544	Identifier	nparams		7236355	0					
ANR	7236545	Argument	parameter_list		7236355	3					
ANR	7236546	Identifier	parameter_list		7236355	0					
ANR	7236547	BreakStatement	break ;	1519:9:44164:44169	7236355	13	True				
ANR	7236548	Statement	case	1521:6:44178:44181	7236355	14	True				
ANR	7236549	Statement	CHUNK	1521:11:44183:44187	7236355	15	True				
ANR	7236550	Statement	(	1521:16:44188:44188	7236355	16	True				
ANR	7236551	Statement	116	1521:17:44189:44191	7236355	17	True				
ANR	7236552	Statement	","	1521:20:44192:44192	7236355	18	True				
ANR	7236553	Statement	69	1521:21:44193:44194	7236355	19	True				
ANR	7236554	Statement	","	1521:23:44195:44195	7236355	20	True				
ANR	7236555	Statement	88	1521:24:44196:44197	7236355	21	True				
ANR	7236556	Statement	","	1521:26:44198:44198	7236355	22	True				
ANR	7236557	Statement	116	1521:27:44199:44201	7236355	23	True				
ANR	7236558	Statement	)	1521:30:44202:44202	7236355	24	True				
ANR	7236559	Statement	:	1521:31:44203:44203	7236355	25	True				
ANR	7236560	IfStatement	if ( nparams == 2 )		7236355	26					
ANR	7236561	Condition	nparams == 2	1522:13:44229:44240	7236355	0	True				
ANR	7236562	EqualityExpression	nparams == 2		7236355	0		==			
ANR	7236563	Identifier	nparams		7236355	0					
ANR	7236564	PrimaryExpression	2		7236355	1					
ANR	7236565	ReturnStatement	"return make_insert ( what , insert_tEXt , nparams , parameter_list ) ;"	1523:12:44255:44317	7236355	1	True				
ANR	7236566	CallExpression	"make_insert ( what , insert_tEXt , nparams , parameter_list )"		7236355	0					
ANR	7236567	Callee	make_insert		7236355	0					
ANR	7236568	Identifier	make_insert		7236355	0					
ANR	7236569	ArgumentList	what		7236355	1					
ANR	7236570	Argument	what		7236355	0					
ANR	7236571	Identifier	what		7236355	0					
ANR	7236572	Argument	insert_tEXt		7236355	1					
ANR	7236573	Identifier	insert_tEXt		7236355	0					
ANR	7236574	Argument	nparams		7236355	2					
ANR	7236575	Identifier	nparams		7236355	0					
ANR	7236576	Argument	parameter_list		7236355	3					
ANR	7236577	Identifier	parameter_list		7236355	0					
ANR	7236578	BreakStatement	break ;	1524:9:44328:44333	7236355	27	True				
ANR	7236579	Statement	case	1526:6:44342:44345	7236355	28	True				
ANR	7236580	Statement	CHUNK	1526:11:44347:44351	7236355	29	True				
ANR	7236581	Statement	(	1526:16:44352:44352	7236355	30	True				
ANR	7236582	Statement	122	1526:17:44353:44355	7236355	31	True				
ANR	7236583	Statement	","	1526:20:44356:44356	7236355	32	True				
ANR	7236584	Statement	84	1526:21:44357:44358	7236355	33	True				
ANR	7236585	Statement	","	1526:23:44359:44359	7236355	34	True				
ANR	7236586	Statement	88	1526:24:44360:44361	7236355	35	True				
ANR	7236587	Statement	","	1526:26:44362:44362	7236355	36	True				
ANR	7236588	Statement	116	1526:27:44363:44365	7236355	37	True				
ANR	7236589	Statement	)	1526:30:44366:44366	7236355	38	True				
ANR	7236590	Statement	:	1526:31:44367:44367	7236355	39	True				
ANR	7236591	IfStatement	if ( nparams == 2 )		7236355	40					
ANR	7236592	Condition	nparams == 2	1527:13:44393:44404	7236355	0	True				
ANR	7236593	EqualityExpression	nparams == 2		7236355	0		==			
ANR	7236594	Identifier	nparams		7236355	0					
ANR	7236595	PrimaryExpression	2		7236355	1					
ANR	7236596	ReturnStatement	"return make_insert ( what , insert_zTXt , nparams , parameter_list ) ;"	1528:12:44419:44481	7236355	1	True				
ANR	7236597	CallExpression	"make_insert ( what , insert_zTXt , nparams , parameter_list )"		7236355	0					
ANR	7236598	Callee	make_insert		7236355	0					
ANR	7236599	Identifier	make_insert		7236355	0					
ANR	7236600	ArgumentList	what		7236355	1					
ANR	7236601	Argument	what		7236355	0					
ANR	7236602	Identifier	what		7236355	0					
ANR	7236603	Argument	insert_zTXt		7236355	1					
ANR	7236604	Identifier	insert_zTXt		7236355	0					
ANR	7236605	Argument	nparams		7236355	2					
ANR	7236606	Identifier	nparams		7236355	0					
ANR	7236607	Argument	parameter_list		7236355	3					
ANR	7236608	Identifier	parameter_list		7236355	0					
ANR	7236609	BreakStatement	break ;	1529:9:44492:44497	7236355	41	True				
ANR	7236610	Statement	case	1531:6:44506:44509	7236355	42	True				
ANR	7236611	Statement	CHUNK	1531:11:44511:44515	7236355	43	True				
ANR	7236612	Statement	(	1531:16:44516:44516	7236355	44	True				
ANR	7236613	Statement	105	1531:17:44517:44519	7236355	45	True				
ANR	7236614	Statement	","	1531:20:44520:44520	7236355	46	True				
ANR	7236615	Statement	84	1531:21:44521:44522	7236355	47	True				
ANR	7236616	Statement	","	1531:23:44523:44523	7236355	48	True				
ANR	7236617	Statement	88	1531:24:44524:44525	7236355	49	True				
ANR	7236618	Statement	","	1531:26:44526:44526	7236355	50	True				
ANR	7236619	Statement	116	1531:27:44527:44529	7236355	51	True				
ANR	7236620	Statement	)	1531:30:44530:44530	7236355	52	True				
ANR	7236621	Statement	:	1531:31:44531:44531	7236355	53	True				
ANR	7236622	IfStatement	if ( nparams == 4 )		7236355	54					
ANR	7236623	Condition	nparams == 4	1532:13:44557:44568	7236355	0	True				
ANR	7236624	EqualityExpression	nparams == 4		7236355	0		==			
ANR	7236625	Identifier	nparams		7236355	0					
ANR	7236626	PrimaryExpression	4		7236355	1					
ANR	7236627	ReturnStatement	"return make_insert ( what , insert_iTXt , nparams , parameter_list ) ;"	1533:12:44583:44645	7236355	1	True				
ANR	7236628	CallExpression	"make_insert ( what , insert_iTXt , nparams , parameter_list )"		7236355	0					
ANR	7236629	Callee	make_insert		7236355	0					
ANR	7236630	Identifier	make_insert		7236355	0					
ANR	7236631	ArgumentList	what		7236355	1					
ANR	7236632	Argument	what		7236355	0					
ANR	7236633	Identifier	what		7236355	0					
ANR	7236634	Argument	insert_iTXt		7236355	1					
ANR	7236635	Identifier	insert_iTXt		7236355	0					
ANR	7236636	Argument	nparams		7236355	2					
ANR	7236637	Identifier	nparams		7236355	0					
ANR	7236638	Argument	parameter_list		7236355	3					
ANR	7236639	Identifier	parameter_list		7236355	0					
ANR	7236640	BreakStatement	break ;	1534:9:44656:44661	7236355	55	True				
ANR	7236641	Statement	case	1536:6:44670:44673	7236355	56	True				
ANR	7236642	Statement	CHUNK	1536:11:44675:44679	7236355	57	True				
ANR	7236643	Statement	(	1536:16:44680:44680	7236355	58	True				
ANR	7236644	Statement	104	1536:17:44681:44683	7236355	59	True				
ANR	7236645	Statement	","	1536:20:44684:44684	7236355	60	True				
ANR	7236646	Statement	73	1536:21:44685:44686	7236355	61	True				
ANR	7236647	Statement	","	1536:23:44687:44687	7236355	62	True				
ANR	7236648	Statement	83	1536:24:44688:44689	7236355	63	True				
ANR	7236649	Statement	","	1536:26:44690:44690	7236355	64	True				
ANR	7236650	Statement	84	1536:27:44691:44692	7236355	65	True				
ANR	7236651	Statement	)	1536:29:44693:44693	7236355	66	True				
ANR	7236652	Statement	:	1536:30:44694:44694	7236355	67	True				
ANR	7236653	IfStatement	if ( nparams <= 256 )		7236355	68					
ANR	7236654	Condition	nparams <= 256	1537:13:44721:44734	7236355	0	True				
ANR	7236655	RelationalExpression	nparams <= 256		7236355	0		<=			
ANR	7236656	Identifier	nparams		7236355	0					
ANR	7236657	PrimaryExpression	256		7236355	1					
ANR	7236658	ReturnStatement	"return make_insert ( what , insert_hIST , nparams , parameter_list ) ;"	1538:12:44749:44811	7236355	1	True				
ANR	7236659	CallExpression	"make_insert ( what , insert_hIST , nparams , parameter_list )"		7236355	0					
ANR	7236660	Callee	make_insert		7236355	0					
ANR	7236661	Identifier	make_insert		7236355	0					
ANR	7236662	ArgumentList	what		7236355	1					
ANR	7236663	Argument	what		7236355	0					
ANR	7236664	Identifier	what		7236355	0					
ANR	7236665	Argument	insert_hIST		7236355	1					
ANR	7236666	Identifier	insert_hIST		7236355	0					
ANR	7236667	Argument	nparams		7236355	2					
ANR	7236668	Identifier	nparams		7236355	0					
ANR	7236669	Argument	parameter_list		7236355	3					
ANR	7236670	Identifier	parameter_list		7236355	0					
ANR	7236671	BreakStatement	break ;	1539:9:44822:44827	7236355	69	True				
ANR	7236672	Statement	case	1541:6:44836:44839	7236355	70	True				
ANR	7236673	Statement	CHUNK	1541:11:44841:44845	7236355	71	True				
ANR	7236674	Statement	(	1541:16:44846:44846	7236355	72	True				
ANR	7236675	Statement	115	1541:17:44847:44849	7236355	73	True				
ANR	7236676	Statement	","	1541:20:44850:44850	7236355	74	True				
ANR	7236677	Statement	66	1541:21:44851:44852	7236355	75	True				
ANR	7236678	Statement	","	1541:23:44853:44853	7236355	76	True				
ANR	7236679	Statement	73	1541:24:44854:44855	7236355	77	True				
ANR	7236680	Statement	","	1541:26:44856:44856	7236355	78	True				
ANR	7236681	Statement	84	1541:27:44857:44858	7236355	79	True				
ANR	7236682	Statement	)	1541:29:44859:44859	7236355	80	True				
ANR	7236683	Statement	:	1541:30:44860:44860	7236355	81	True				
ANR	7236684	IfStatement	if ( nparams <= 4 )		7236355	82					
ANR	7236685	Condition	nparams <= 4	1542:13:44886:44897	7236355	0	True				
ANR	7236686	RelationalExpression	nparams <= 4		7236355	0		<=			
ANR	7236687	Identifier	nparams		7236355	0					
ANR	7236688	PrimaryExpression	4		7236355	1					
ANR	7236689	ReturnStatement	"return make_insert ( what , insert_sBIT , nparams , parameter_list ) ;"	1543:12:44912:44974	7236355	1	True				
ANR	7236690	CallExpression	"make_insert ( what , insert_sBIT , nparams , parameter_list )"		7236355	0					
ANR	7236691	Callee	make_insert		7236355	0					
ANR	7236692	Identifier	make_insert		7236355	0					
ANR	7236693	ArgumentList	what		7236355	1					
ANR	7236694	Argument	what		7236355	0					
ANR	7236695	Identifier	what		7236355	0					
ANR	7236696	Argument	insert_sBIT		7236355	1					
ANR	7236697	Identifier	insert_sBIT		7236355	0					
ANR	7236698	Argument	nparams		7236355	2					
ANR	7236699	Identifier	nparams		7236355	0					
ANR	7236700	Argument	parameter_list		7236355	3					
ANR	7236701	Identifier	parameter_list		7236355	0					
ANR	7236702	BreakStatement	break ;	1544:9:44985:44990	7236355	83	True				
ANR	7236703	Statement	case	1547:6:45005:45008	7236355	84	True				
ANR	7236704	Statement	CHUNK	1547:11:45010:45014	7236355	85	True				
ANR	7236705	Statement	(	1547:16:45015:45015	7236355	86	True				
ANR	7236706	Statement	115	1547:17:45016:45018	7236355	87	True				
ANR	7236707	Statement	","	1547:20:45019:45019	7236355	88	True				
ANR	7236708	Statement	80	1547:21:45020:45021	7236355	89	True				
ANR	7236709	Statement	","	1547:23:45022:45022	7236355	90	True				
ANR	7236710	Statement	76	1547:24:45023:45024	7236355	91	True				
ANR	7236711	Statement	","	1547:26:45025:45025	7236355	92	True				
ANR	7236712	Statement	84	1547:27:45026:45027	7236355	93	True				
ANR	7236713	Statement	)	1547:29:45028:45028	7236355	94	True				
ANR	7236714	Statement	:	1547:30:45029:45029	7236355	95	True				
ANR	7236715	ReturnStatement	"return make_insert ( what , insert_sPLT , nparams , parameter_list ) ;"	1548:9:45052:45114	7236355	96	True				
ANR	7236716	CallExpression	"make_insert ( what , insert_sPLT , nparams , parameter_list )"		7236355	0					
ANR	7236717	Callee	make_insert		7236355	0					
ANR	7236718	Identifier	make_insert		7236355	0					
ANR	7236719	ArgumentList	what		7236355	1					
ANR	7236720	Argument	what		7236355	0					
ANR	7236721	Identifier	what		7236355	0					
ANR	7236722	Argument	insert_sPLT		7236355	1					
ANR	7236723	Identifier	insert_sPLT		7236355	0					
ANR	7236724	Argument	nparams		7236355	2					
ANR	7236725	Identifier	nparams		7236355	0					
ANR	7236726	Argument	parameter_list		7236355	3					
ANR	7236727	Identifier	parameter_list		7236355	0					
ANR	7236728	Label	default :	1551:6:45130:45137	7236355	97	True				
ANR	7236729	Identifier	default		7236355	0					
ANR	7236730	ExpressionStatement	"fprintf ( stderr , ""makepng --insert \\""%s\\"": unrecognized chunk name\\n"" , what )"	1552:9:45148:45235	7236355	98	True				
ANR	7236731	CallExpression	"fprintf ( stderr , ""makepng --insert \\""%s\\"": unrecognized chunk name\\n"" , what )"		7236355	0					
ANR	7236732	Callee	fprintf		7236355	0					
ANR	7236733	Identifier	fprintf		7236355	0					
ANR	7236734	ArgumentList	stderr		7236355	1					
ANR	7236735	Argument	stderr		7236355	0					
ANR	7236736	Identifier	stderr		7236355	0					
ANR	7236737	Argument	"""makepng --insert \\""%s\\"": unrecognized chunk name\\n"""		7236355	1					
ANR	7236738	PrimaryExpression	"""makepng --insert \\""%s\\"": unrecognized chunk name\\n"""		7236355	0					
ANR	7236739	Argument	what		7236355	2					
ANR	7236740	Identifier	what		7236355	0					
ANR	7236741	ExpressionStatement	exit ( 1 )	1554:9:45246:45253	7236355	99	True				
ANR	7236742	CallExpression	exit ( 1 )		7236355	0					
ANR	7236743	Callee	exit		7236355	0					
ANR	7236744	Identifier	exit		7236355	0					
ANR	7236745	ArgumentList	1		7236355	1					
ANR	7236746	Argument	1		7236355	0					
ANR	7236747	PrimaryExpression	1		7236355	0					
ANR	7236748	ExpressionStatement	"bad_parameter_count ( what , nparams )"	1557:3:45264:45298	7236355	47	True				
ANR	7236749	CallExpression	"bad_parameter_count ( what , nparams )"		7236355	0					
ANR	7236750	Callee	bad_parameter_count		7236355	0					
ANR	7236751	Identifier	bad_parameter_count		7236355	0					
ANR	7236752	ArgumentList	what		7236355	1					
ANR	7236753	Argument	what		7236355	0					
ANR	7236754	Identifier	what		7236355	0					
ANR	7236755	Argument	nparams		7236355	1					
ANR	7236756	Identifier	nparams		7236355	0					
ANR	7236757	ReturnStatement	return NULL ;	1558:3:45303:45314	7236355	48	True				
ANR	7236758	Identifier	NULL		7236355	0					
ANR	7236759	ReturnType	static chunk_insert *		7236355	1					
ANR	7236760	Identifier	find_insert		7236355	2					
ANR	7236761	ParameterList	"png_const_charp what , png_charp param"		7236355	3					
ANR	7236762	Parameter	png_const_charp what	1485:12:43341:43360	7236355	0	True				
ANR	7236763	ParameterType	png_const_charp		7236355	0					
ANR	7236764	Identifier	what		7236355	1					
ANR	7236765	Parameter	png_charp param	1485:34:43363:43377	7236355	1	True				
ANR	7236766	ParameterType	png_charp		7236355	0					
ANR	7236767	Identifier	param		7236355	1					
ANR	7236768	CFGEntryNode	ENTRY		7236355		True				
ANR	7236769	CFGExitNode	EXIT		7236355		True				
ANR	7236770	Symbol	insert_zTXt		7236355						
ANR	7236771	Symbol	NULL		7236355						
ANR	7236772	Symbol	ch		7236355						
ANR	7236773	Symbol	chunk		7236355						
ANR	7236774	Symbol	i		7236355						
ANR	7236775	Symbol	insert_tEXt		7236355						
ANR	7236776	Symbol	nparams		7236355						
ANR	7236777	Symbol	stderr		7236355						
ANR	7236778	Symbol	make_insert		7236355						
ANR	7236779	Symbol	insert_sPLT		7236355						
ANR	7236780	Symbol	what		7236355						
ANR	7236781	Symbol	* i		7236355						
ANR	7236782	Symbol	param		7236355						
ANR	7236783	Symbol	insert_iCCP		7236355						
ANR	7236784	Symbol	insert_iTXt		7236355						
ANR	7236785	Symbol	insert_sBIT		7236355						
ANR	7236786	Symbol	find_parameters		7236355						
ANR	7236787	Symbol	* what		7236355						
ANR	7236788	Symbol	insert_hIST		7236355						
ANR	7236789	Symbol	parameter_list		7236355						
ANR	7236790	Function	strstash	1564:0:45448:45719							
ANR	7236791	FunctionDef	strstash (png_const_charp foo)		7236790	0					
ANR	7236792	CompoundStatement		1566:0:45495:45719	7236790	0					
ANR	7236793	IfStatement	if ( foo != NULL )		7236790	0					
ANR	7236794	Condition	foo != NULL	1570:7:45603:45613	7236790	0	True				
ANR	7236795	EqualityExpression	foo != NULL		7236790	0		!=			
ANR	7236796	Identifier	foo		7236790	0					
ANR	7236797	Identifier	NULL		7236790	1					
ANR	7236798	CompoundStatement		7:6:131:168	7236790	1					
ANR	7236799	IdentifierDeclStatement	png_charp bar = malloc ( strlen ( foo ) + 1 ) ;	1572:6:45627:45664	7236790	0	True				
ANR	7236800	IdentifierDecl	bar = malloc ( strlen ( foo ) + 1 )		7236790	0					
ANR	7236801	IdentifierDeclType	png_charp		7236790	0					
ANR	7236802	Identifier	bar		7236790	1					
ANR	7236803	AssignmentExpression	bar = malloc ( strlen ( foo ) + 1 )		7236790	2		=			
ANR	7236804	Identifier	bar		7236790	0					
ANR	7236805	CallExpression	malloc ( strlen ( foo ) + 1 )		7236790	1					
ANR	7236806	Callee	malloc		7236790	0					
ANR	7236807	Identifier	malloc		7236790	0					
ANR	7236808	ArgumentList	strlen ( foo ) + 1		7236790	1					
ANR	7236809	Argument	strlen ( foo ) + 1		7236790	0					
ANR	7236810	AdditiveExpression	strlen ( foo ) + 1		7236790	0		+			
ANR	7236811	CallExpression	strlen ( foo )		7236790	0					
ANR	7236812	Callee	strlen		7236790	0					
ANR	7236813	Identifier	strlen		7236790	0					
ANR	7236814	ArgumentList	foo		7236790	1					
ANR	7236815	Argument	foo		7236790	0					
ANR	7236816	Identifier	foo		7236790	0					
ANR	7236817	PrimaryExpression	1		7236790	1					
ANR	7236818	ReturnStatement	"return strcpy ( bar , foo ) ;"	1573:6:45672:45695	7236790	1	True				
ANR	7236819	CallExpression	"strcpy ( bar , foo )"		7236790	0					
ANR	7236820	Callee	strcpy		7236790	0					
ANR	7236821	Identifier	strcpy		7236790	0					
ANR	7236822	ArgumentList	bar		7236790	1					
ANR	7236823	Argument	bar		7236790	0					
ANR	7236824	Identifier	bar		7236790	0					
ANR	7236825	Argument	foo		7236790	1					
ANR	7236826	Identifier	foo		7236790	0					
ANR	7236827	ReturnStatement	return NULL ;	1576:3:45706:45717	7236790	1	True				
ANR	7236828	Identifier	NULL		7236790	0					
ANR	7236829	ReturnType	static png_charp		7236790	1					
ANR	7236830	Identifier	strstash		7236790	2					
ANR	7236831	ParameterList	png_const_charp foo		7236790	3					
ANR	7236832	Parameter	png_const_charp foo	1565:9:45474:45492	7236790	0	True				
ANR	7236833	ParameterType	png_const_charp		7236790	0					
ANR	7236834	Identifier	foo		7236790	1					
ANR	7236835	CFGEntryNode	ENTRY		7236790		True				
ANR	7236836	CFGExitNode	EXIT		7236790		True				
ANR	7236837	Symbol	malloc		7236790						
ANR	7236838	Symbol	strlen		7236790						
ANR	7236839	Symbol	bar		7236790						
ANR	7236840	Symbol	NULL		7236790						
ANR	7236841	Symbol	foo		7236790						
ANR	7236842	Symbol	strcpy		7236790						
ANR	7236843	Function	strstash_list	1579:0:45722:46120							
ANR	7236844	FunctionDef	strstash_list (const png_const_charp * text)		7236843	0					
ANR	7236845	CompoundStatement		1581:0:45782:46120	7236843	0					
ANR	7236846	IdentifierDeclStatement	size_t foo = 0 ;	1582:3:45787:45801	7236843	0	True				
ANR	7236847	IdentifierDecl	foo = 0		7236843	0					
ANR	7236848	IdentifierDeclType	size_t		7236843	0					
ANR	7236849	Identifier	foo		7236843	1					
ANR	7236850	AssignmentExpression	foo = 0		7236843	2		=			
ANR	7236851	Identifier	foo		7236843	0					
ANR	7236852	PrimaryExpression	0		7236843	1					
ANR	7236853	IdentifierDeclStatement	"png_charp result , bar ;"	1583:3:45806:45827	7236843	1	True				
ANR	7236854	IdentifierDecl	result		7236843	0					
ANR	7236855	IdentifierDeclType	png_charp		7236843	0					
ANR	7236856	Identifier	result		7236843	1					
ANR	7236857	IdentifierDecl	bar		7236843	1					
ANR	7236858	IdentifierDeclType	png_charp		7236843	0					
ANR	7236859	Identifier	bar		7236843	1					
ANR	7236860	IdentifierDeclStatement	const png_const_charp * line = text ;	1584:3:45832:45866	7236843	2	True				
ANR	7236861	IdentifierDecl	* line = text		7236843	0					
ANR	7236862	IdentifierDeclType	const png_const_charp *		7236843	0					
ANR	7236863	Identifier	line		7236843	1					
ANR	7236864	AssignmentExpression	* line = text		7236843	2		=			
ANR	7236865	Identifier	text		7236843	0					
ANR	7236866	Identifier	text		7236843	1					
ANR	7236867	WhileStatement	while ( * line != NULL )		7236843	3					
ANR	7236868	Condition	* line != NULL	1586:10:45879:45891	7236843	0	True				
ANR	7236869	EqualityExpression	* line != NULL		7236843	0		!=			
ANR	7236870	UnaryOperationExpression	* line		7236843	0					
ANR	7236871	UnaryOperator	*		7236843	0					
ANR	7236872	Identifier	line		7236843	1					
ANR	7236873	Identifier	NULL		7236843	1					
ANR	7236874	ExpressionStatement	foo += strlen ( * line ++ )	1587:6:45900:45922	7236843	1	True				
ANR	7236875	AssignmentExpression	foo += strlen ( * line ++ )		7236843	0		+=			
ANR	7236876	Identifier	foo		7236843	0					
ANR	7236877	CallExpression	strlen ( * line ++ )		7236843	1					
ANR	7236878	Callee	strlen		7236843	0					
ANR	7236879	Identifier	strlen		7236843	0					
ANR	7236880	ArgumentList	* line ++		7236843	1					
ANR	7236881	Argument	* line ++		7236843	0					
ANR	7236882	UnaryOperationExpression	* line ++		7236843	0					
ANR	7236883	UnaryOperator	*		7236843	0					
ANR	7236884	PostIncDecOperationExpression	line ++		7236843	1					
ANR	7236885	Identifier	line		7236843	0					
ANR	7236886	IncDec	++		7236843	1					
ANR	7236887	ExpressionStatement	result = bar = malloc ( foo + 1 )	1589:3:45928:45956	7236843	4	True				
ANR	7236888	AssignmentExpression	result = bar = malloc ( foo + 1 )		7236843	0		=			
ANR	7236889	Identifier	result		7236843	0					
ANR	7236890	AssignmentExpression	bar = malloc ( foo + 1 )		7236843	1		=			
ANR	7236891	Identifier	bar		7236843	0					
ANR	7236892	CallExpression	malloc ( foo + 1 )		7236843	1					
ANR	7236893	Callee	malloc		7236843	0					
ANR	7236894	Identifier	malloc		7236843	0					
ANR	7236895	ArgumentList	foo + 1		7236843	1					
ANR	7236896	Argument	foo + 1		7236843	0					
ANR	7236897	AdditiveExpression	foo + 1		7236843	0		+			
ANR	7236898	Identifier	foo		7236843	0					
ANR	7236899	PrimaryExpression	1		7236843	1					
ANR	7236900	ExpressionStatement	line = text	1591:3:45962:45973	7236843	5	True				
ANR	7236901	AssignmentExpression	line = text		7236843	0		=			
ANR	7236902	Identifier	line		7236843	0					
ANR	7236903	Identifier	text		7236843	1					
ANR	7236904	WhileStatement	while ( * line != NULL )		7236843	6					
ANR	7236905	Condition	* line != NULL	1592:10:45985:45997	7236843	0	True				
ANR	7236906	EqualityExpression	* line != NULL		7236843	0		!=			
ANR	7236907	UnaryOperationExpression	* line		7236843	0					
ANR	7236908	UnaryOperator	*		7236843	0					
ANR	7236909	Identifier	line		7236843	1					
ANR	7236910	Identifier	NULL		7236843	1					
ANR	7236911	CompoundStatement		13:3:220:220	7236843	1					
ANR	7236912	ExpressionStatement	foo = strlen ( * line )	1594:6:46011:46030	7236843	0	True				
ANR	7236913	AssignmentExpression	foo = strlen ( * line )		7236843	0		=			
ANR	7236914	Identifier	foo		7236843	0					
ANR	7236915	CallExpression	strlen ( * line )		7236843	1					
ANR	7236916	Callee	strlen		7236843	0					
ANR	7236917	Identifier	strlen		7236843	0					
ANR	7236918	ArgumentList	* line		7236843	1					
ANR	7236919	Argument	* line		7236843	0					
ANR	7236920	UnaryOperationExpression	* line		7236843	0					
ANR	7236921	UnaryOperator	*		7236843	0					
ANR	7236922	Identifier	line		7236843	1					
ANR	7236923	ExpressionStatement	"memcpy ( bar , * line ++ , foo )"	1595:6:46038:46063	7236843	1	True				
ANR	7236924	CallExpression	"memcpy ( bar , * line ++ , foo )"		7236843	0					
ANR	7236925	Callee	memcpy		7236843	0					
ANR	7236926	Identifier	memcpy		7236843	0					
ANR	7236927	ArgumentList	bar		7236843	1					
ANR	7236928	Argument	bar		7236843	0					
ANR	7236929	Identifier	bar		7236843	0					
ANR	7236930	Argument	* line ++		7236843	1					
ANR	7236931	UnaryOperationExpression	* line ++		7236843	0					
ANR	7236932	UnaryOperator	*		7236843	0					
ANR	7236933	PostIncDecOperationExpression	line ++		7236843	1					
ANR	7236934	Identifier	line		7236843	0					
ANR	7236935	IncDec	++		7236843	1					
ANR	7236936	Argument	foo		7236843	2					
ANR	7236937	Identifier	foo		7236843	0					
ANR	7236938	ExpressionStatement	bar += foo	1596:6:46071:46081	7236843	2	True				
ANR	7236939	AssignmentExpression	bar += foo		7236843	0		+=			
ANR	7236940	Identifier	bar		7236843	0					
ANR	7236941	Identifier	foo		7236843	1					
ANR	7236942	ExpressionStatement	* bar = 0	1599:3:46092:46100	7236843	7	True				
ANR	7236943	AssignmentExpression	* bar = 0		7236843	0		=			
ANR	7236944	UnaryOperationExpression	* bar		7236843	0					
ANR	7236945	UnaryOperator	*		7236843	0					
ANR	7236946	Identifier	bar		7236843	1					
ANR	7236947	PrimaryExpression	0		7236843	1					
ANR	7236948	ReturnStatement	return result ;	1600:3:46105:46118	7236843	8	True				
ANR	7236949	Identifier	result		7236843	0					
ANR	7236950	ReturnType	static png_charp		7236843	1					
ANR	7236951	Identifier	strstash_list		7236843	2					
ANR	7236952	ParameterList	const png_const_charp * text		7236843	3					
ANR	7236953	Parameter	const png_const_charp * text	1580:14:45753:45779	7236843	0	True				
ANR	7236954	ParameterType	const png_const_charp *		7236843	0					
ANR	7236955	Identifier	text		7236843	1					
ANR	7236956	CFGEntryNode	ENTRY		7236843		True				
ANR	7236957	CFGExitNode	EXIT		7236843		True				
ANR	7236958	Symbol	result		7236843						
ANR	7236959	Symbol	strlen		7236843						
ANR	7236960	Symbol	malloc		7236843						
ANR	7236961	Symbol	bar		7236843						
ANR	7236962	Symbol	* bar		7236843						
ANR	7236963	Symbol	NULL		7236843						
ANR	7236964	Symbol	line		7236843						
ANR	7236965	Symbol	foo		7236843						
ANR	7236966	Symbol	text		7236843						
ANR	7236967	Symbol	* line		7236843						
ANR	7236968	Symbol	* line ++		7236843						
ANR	7236969	Function	add_tEXt	1606:0:46247:46582							
ANR	7236970	FunctionDef	"add_tEXt (const char * key , const png_const_charp * text)"		7236969	0					
ANR	7236971	CompoundStatement		1608:0:46324:46582	7236969	0					
ANR	7236972	Statement	static	1609:3:46329:46334	7236969	0	True				
ANR	7236973	IdentifierDeclStatement	"char what [ 5 ] = { 116 , 69 , 88 , 116 , 0 } ;"	1609:10:46336:46374	7236969	1	True				
ANR	7236974	IdentifierDecl	"what [ 5 ] = { 116 , 69 , 88 , 116 , 0 }"		7236969	0					
ANR	7236975	IdentifierDeclType	char [ 5 ]		7236969	0					
ANR	7236976	Identifier	what		7236969	1					
ANR	7236977	PrimaryExpression	5		7236969	2					
ANR	7236978	AssignmentExpression	"what [ 5 ] = { 116 , 69 , 88 , 116 , 0 }"		7236969	3		=			
ANR	7236979	Identifier	what		7236969	0					
ANR	7236980	InitializerList	116		7236969	1					
ANR	7236981	PrimaryExpression	116		7236969	0					
ANR	7236982	PrimaryExpression	69		7236969	1					
ANR	7236983	PrimaryExpression	88		7236969	2					
ANR	7236984	PrimaryExpression	116		7236969	3					
ANR	7236985	PrimaryExpression	0		7236969	4					
ANR	7236986	IdentifierDeclStatement	png_charp parameter_list [ 3 ] ;	1610:3:46379:46406	7236969	2	True				
ANR	7236987	IdentifierDecl	parameter_list [ 3 ]		7236969	0					
ANR	7236988	IdentifierDeclType	png_charp [ 3 ]		7236969	0					
ANR	7236989	Identifier	parameter_list		7236969	1					
ANR	7236990	PrimaryExpression	3		7236969	2					
ANR	7236991	ExpressionStatement	parameter_list [ 0 ] = strstash ( key )	1612:3:46412:46445	7236969	3	True				
ANR	7236992	AssignmentExpression	parameter_list [ 0 ] = strstash ( key )		7236969	0		=			
ANR	7236993	ArrayIndexing	parameter_list [ 0 ]		7236969	0					
ANR	7236994	Identifier	parameter_list		7236969	0					
ANR	7236995	PrimaryExpression	0		7236969	1					
ANR	7236996	CallExpression	strstash ( key )		7236969	1					
ANR	7236997	Callee	strstash		7236969	0					
ANR	7236998	Identifier	strstash		7236969	0					
ANR	7236999	ArgumentList	key		7236969	1					
ANR	7237000	Argument	key		7236969	0					
ANR	7237001	Identifier	key		7236969	0					
ANR	7237002	ExpressionStatement	parameter_list [ 1 ] = strstash_list ( text )	1613:3:46450:46489	7236969	4	True				
ANR	7237003	AssignmentExpression	parameter_list [ 1 ] = strstash_list ( text )		7236969	0		=			
ANR	7237004	ArrayIndexing	parameter_list [ 1 ]		7236969	0					
ANR	7237005	Identifier	parameter_list		7236969	0					
ANR	7237006	PrimaryExpression	1		7236969	1					
ANR	7237007	CallExpression	strstash_list ( text )		7236969	1					
ANR	7237008	Callee	strstash_list		7236969	0					
ANR	7237009	Identifier	strstash_list		7236969	0					
ANR	7237010	ArgumentList	text		7236969	1					
ANR	7237011	Argument	text		7236969	0					
ANR	7237012	Identifier	text		7236969	0					
ANR	7237013	ExpressionStatement	parameter_list [ 2 ] = NULL	1614:3:46494:46518	7236969	5	True				
ANR	7237014	AssignmentExpression	parameter_list [ 2 ] = NULL		7236969	0		=			
ANR	7237015	ArrayIndexing	parameter_list [ 2 ]		7236969	0					
ANR	7237016	Identifier	parameter_list		7236969	0					
ANR	7237017	PrimaryExpression	2		7236969	1					
ANR	7237018	Identifier	NULL		7236969	1					
ANR	7237019	ReturnStatement	"return make_insert ( what , insert_tEXt , 2 , parameter_list ) ;"	1616:3:46524:46580	7236969	6	True				
ANR	7237020	CallExpression	"make_insert ( what , insert_tEXt , 2 , parameter_list )"		7236969	0					
ANR	7237021	Callee	make_insert		7236969	0					
ANR	7237022	Identifier	make_insert		7236969	0					
ANR	7237023	ArgumentList	what		7236969	1					
ANR	7237024	Argument	what		7236969	0					
ANR	7237025	Identifier	what		7236969	0					
ANR	7237026	Argument	insert_tEXt		7236969	1					
ANR	7237027	Identifier	insert_tEXt		7236969	0					
ANR	7237028	Argument	2		7236969	2					
ANR	7237029	PrimaryExpression	2		7236969	0					
ANR	7237030	Argument	parameter_list		7236969	3					
ANR	7237031	Identifier	parameter_list		7236969	0					
ANR	7237032	ReturnType	static chunk_insert *		7236969	1					
ANR	7237033	Identifier	add_tEXt		7236969	2					
ANR	7237034	ParameterList	"const char * key , const png_const_charp * text"		7236969	3					
ANR	7237035	Parameter	const char * key	1607:9:46278:46292	7236969	0	True				
ANR	7237036	ParameterType	const char *		7236969	0					
ANR	7237037	Identifier	key		7236969	1					
ANR	7237038	Parameter	const png_const_charp * text	1607:26:46295:46321	7236969	1	True				
ANR	7237039	ParameterType	const png_const_charp *		7236969	0					
ANR	7237040	Identifier	text		7236969	1					
ANR	7237041	CFGEntryNode	ENTRY		7236969		True				
ANR	7237042	CFGExitNode	EXIT		7236969		True				
ANR	7237043	Symbol	what		7236969						
ANR	7237044	Symbol	NULL		7236969						
ANR	7237045	Symbol	strstash		7236969						
ANR	7237046	Symbol	insert_tEXt		7236969						
ANR	7237047	Symbol	text		7236969						
ANR	7237048	Symbol	parameter_list		7236969						
ANR	7237049	Symbol	key		7236969						
ANR	7237050	Symbol	* parameter_list		7236969						
ANR	7237051	Symbol	strstash_list		7236969						
ANR	7237052	Symbol	make_insert		7236969						
ANR	7237053	Function	add_iTXt	1619:0:46585:47064							
ANR	7237054	FunctionDef	"add_iTXt (const char * key , const char * language , const char * language_key , const png_const_charp * text)"		7237053	0					
ANR	7237055	CompoundStatement		1622:0:46716:47064	7237053	0					
ANR	7237056	Statement	static	1623:3:46721:46726	7237053	0	True				
ANR	7237057	IdentifierDeclStatement	"char what [ 5 ] = { 105 , 84 , 88 , 116 , 0 } ;"	1623:10:46728:46766	7237053	1	True				
ANR	7237058	IdentifierDecl	"what [ 5 ] = { 105 , 84 , 88 , 116 , 0 }"		7237053	0					
ANR	7237059	IdentifierDeclType	char [ 5 ]		7237053	0					
ANR	7237060	Identifier	what		7237053	1					
ANR	7237061	PrimaryExpression	5		7237053	2					
ANR	7237062	AssignmentExpression	"what [ 5 ] = { 105 , 84 , 88 , 116 , 0 }"		7237053	3		=			
ANR	7237063	Identifier	what		7237053	0					
ANR	7237064	InitializerList	105		7237053	1					
ANR	7237065	PrimaryExpression	105		7237053	0					
ANR	7237066	PrimaryExpression	84		7237053	1					
ANR	7237067	PrimaryExpression	88		7237053	2					
ANR	7237068	PrimaryExpression	116		7237053	3					
ANR	7237069	PrimaryExpression	0		7237053	4					
ANR	7237070	IdentifierDeclStatement	png_charp parameter_list [ 5 ] ;	1624:3:46771:46798	7237053	2	True				
ANR	7237071	IdentifierDecl	parameter_list [ 5 ]		7237053	0					
ANR	7237072	IdentifierDeclType	png_charp [ 5 ]		7237053	0					
ANR	7237073	Identifier	parameter_list		7237053	1					
ANR	7237074	PrimaryExpression	5		7237053	2					
ANR	7237075	ExpressionStatement	parameter_list [ 0 ] = strstash ( key )	1626:3:46804:46837	7237053	3	True				
ANR	7237076	AssignmentExpression	parameter_list [ 0 ] = strstash ( key )		7237053	0		=			
ANR	7237077	ArrayIndexing	parameter_list [ 0 ]		7237053	0					
ANR	7237078	Identifier	parameter_list		7237053	0					
ANR	7237079	PrimaryExpression	0		7237053	1					
ANR	7237080	CallExpression	strstash ( key )		7237053	1					
ANR	7237081	Callee	strstash		7237053	0					
ANR	7237082	Identifier	strstash		7237053	0					
ANR	7237083	ArgumentList	key		7237053	1					
ANR	7237084	Argument	key		7237053	0					
ANR	7237085	Identifier	key		7237053	0					
ANR	7237086	ExpressionStatement	parameter_list [ 1 ] = strstash ( language )	1627:3:46842:46880	7237053	4	True				
ANR	7237087	AssignmentExpression	parameter_list [ 1 ] = strstash ( language )		7237053	0		=			
ANR	7237088	ArrayIndexing	parameter_list [ 1 ]		7237053	0					
ANR	7237089	Identifier	parameter_list		7237053	0					
ANR	7237090	PrimaryExpression	1		7237053	1					
ANR	7237091	CallExpression	strstash ( language )		7237053	1					
ANR	7237092	Callee	strstash		7237053	0					
ANR	7237093	Identifier	strstash		7237053	0					
ANR	7237094	ArgumentList	language		7237053	1					
ANR	7237095	Argument	language		7237053	0					
ANR	7237096	Identifier	language		7237053	0					
ANR	7237097	ExpressionStatement	parameter_list [ 2 ] = strstash ( language_key )	1628:3:46885:46927	7237053	5	True				
ANR	7237098	AssignmentExpression	parameter_list [ 2 ] = strstash ( language_key )		7237053	0		=			
ANR	7237099	ArrayIndexing	parameter_list [ 2 ]		7237053	0					
ANR	7237100	Identifier	parameter_list		7237053	0					
ANR	7237101	PrimaryExpression	2		7237053	1					
ANR	7237102	CallExpression	strstash ( language_key )		7237053	1					
ANR	7237103	Callee	strstash		7237053	0					
ANR	7237104	Identifier	strstash		7237053	0					
ANR	7237105	ArgumentList	language_key		7237053	1					
ANR	7237106	Argument	language_key		7237053	0					
ANR	7237107	Identifier	language_key		7237053	0					
ANR	7237108	ExpressionStatement	parameter_list [ 3 ] = strstash_list ( text )	1629:3:46932:46971	7237053	6	True				
ANR	7237109	AssignmentExpression	parameter_list [ 3 ] = strstash_list ( text )		7237053	0		=			
ANR	7237110	ArrayIndexing	parameter_list [ 3 ]		7237053	0					
ANR	7237111	Identifier	parameter_list		7237053	0					
ANR	7237112	PrimaryExpression	3		7237053	1					
ANR	7237113	CallExpression	strstash_list ( text )		7237053	1					
ANR	7237114	Callee	strstash_list		7237053	0					
ANR	7237115	Identifier	strstash_list		7237053	0					
ANR	7237116	ArgumentList	text		7237053	1					
ANR	7237117	Argument	text		7237053	0					
ANR	7237118	Identifier	text		7237053	0					
ANR	7237119	ExpressionStatement	parameter_list [ 4 ] = NULL	1630:3:46976:47000	7237053	7	True				
ANR	7237120	AssignmentExpression	parameter_list [ 4 ] = NULL		7237053	0		=			
ANR	7237121	ArrayIndexing	parameter_list [ 4 ]		7237053	0					
ANR	7237122	Identifier	parameter_list		7237053	0					
ANR	7237123	PrimaryExpression	4		7237053	1					
ANR	7237124	Identifier	NULL		7237053	1					
ANR	7237125	ReturnStatement	"return make_insert ( what , insert_iTXt , 4 , parameter_list ) ;"	1632:3:47006:47062	7237053	8	True				
ANR	7237126	CallExpression	"make_insert ( what , insert_iTXt , 4 , parameter_list )"		7237053	0					
ANR	7237127	Callee	make_insert		7237053	0					
ANR	7237128	Identifier	make_insert		7237053	0					
ANR	7237129	ArgumentList	what		7237053	1					
ANR	7237130	Argument	what		7237053	0					
ANR	7237131	Identifier	what		7237053	0					
ANR	7237132	Argument	insert_iTXt		7237053	1					
ANR	7237133	Identifier	insert_iTXt		7237053	0					
ANR	7237134	Argument	4		7237053	2					
ANR	7237135	PrimaryExpression	4		7237053	0					
ANR	7237136	Argument	parameter_list		7237053	3					
ANR	7237137	Identifier	parameter_list		7237053	0					
ANR	7237138	ReturnType	static chunk_insert *		7237053	1					
ANR	7237139	Identifier	add_iTXt		7237053	2					
ANR	7237140	ParameterList	"const char * key , const char * language , const char * language_key , const png_const_charp * text"		7237053	3					
ANR	7237141	Parameter	const char * key	1620:9:46616:46630	7237053	0	True				
ANR	7237142	ParameterType	const char *		7237053	0					
ANR	7237143	Identifier	key		7237053	1					
ANR	7237144	Parameter	const char * language	1620:26:46633:46652	7237053	1	True				
ANR	7237145	ParameterType	const char *		7237053	0					
ANR	7237146	Identifier	language		7237053	1					
ANR	7237147	Parameter	const char * language_key	1620:48:46655:46678	7237053	2	True				
ANR	7237148	ParameterType	const char *		7237053	0					
ANR	7237149	Identifier	language_key		7237053	1					
ANR	7237150	Parameter	const png_const_charp * text	1621:6:46687:46713	7237053	3	True				
ANR	7237151	ParameterType	const png_const_charp *		7237053	0					
ANR	7237152	Identifier	text		7237053	1					
ANR	7237153	CFGEntryNode	ENTRY		7237053		True				
ANR	7237154	CFGExitNode	EXIT		7237053		True				
ANR	7237155	Symbol	what		7237053						
ANR	7237156	Symbol	NULL		7237053						
ANR	7237157	Symbol	strstash		7237053						
ANR	7237158	Symbol	insert_iTXt		7237053						
ANR	7237159	Symbol	language		7237053						
ANR	7237160	Symbol	text		7237053						
ANR	7237161	Symbol	language_key		7237053						
ANR	7237162	Symbol	parameter_list		7237053						
ANR	7237163	Symbol	key		7237053						
ANR	7237164	Symbol	* parameter_list		7237053						
ANR	7237165	Symbol	strstash_list		7237053						
ANR	7237166	Symbol	make_insert		7237053						
ANR	7237167	Function	parse_color	1639:0:47247:47970							
ANR	7237168	FunctionDef	"parse_color (char * arg , unsigned int * colors)"		7237167	0					
ANR	7237169	CompoundStatement		1641:0:47304:47970	7237167	0					
ANR	7237170	IdentifierDeclStatement	unsigned int ncolors = 0 ;	1642:3:47309:47333	7237167	0	True				
ANR	7237171	IdentifierDecl	ncolors = 0		7237167	0					
ANR	7237172	IdentifierDeclType	unsigned int		7237167	0					
ANR	7237173	Identifier	ncolors		7237167	1					
ANR	7237174	AssignmentExpression	ncolors = 0		7237167	2		=			
ANR	7237175	Identifier	ncolors		7237167	0					
ANR	7237176	PrimaryExpression	0		7237167	1					
ANR	7237177	WhileStatement	while ( * arg && ncolors < 4 )		7237167	1					
ANR	7237178	Condition	* arg && ncolors < 4	1644:10:47346:47364	7237167	0	True				
ANR	7237179	AndExpression	* arg && ncolors < 4		7237167	0		&&			
ANR	7237180	UnaryOperationExpression	* arg		7237167	0					
ANR	7237181	UnaryOperator	*		7237167	0					
ANR	7237182	Identifier	arg		7237167	1					
ANR	7237183	RelationalExpression	ncolors < 4		7237167	1		<			
ANR	7237184	Identifier	ncolors		7237167	0					
ANR	7237185	PrimaryExpression	4		7237167	1					
ANR	7237186	CompoundStatement		8:6:96:135	7237167	1					
ANR	7237187	IdentifierDeclStatement	char * ep = arg ;	1646:6:47378:47392	7237167	0	True				
ANR	7237188	IdentifierDecl	* ep = arg		7237167	0					
ANR	7237189	IdentifierDeclType	char *		7237167	0					
ANR	7237190	Identifier	ep		7237167	1					
ANR	7237191	AssignmentExpression	* ep = arg		7237167	2		=			
ANR	7237192	Identifier	arg		7237167	0					
ANR	7237193	Identifier	arg		7237167	1					
ANR	7237194	IdentifierDeclStatement	"unsigned long ul = strtoul ( arg , & ep , 0 ) ;"	1648:6:47401:47440	7237167	1	True				
ANR	7237195	IdentifierDecl	"ul = strtoul ( arg , & ep , 0 )"		7237167	0					
ANR	7237196	IdentifierDeclType	unsigned long		7237167	0					
ANR	7237197	Identifier	ul		7237167	1					
ANR	7237198	AssignmentExpression	"ul = strtoul ( arg , & ep , 0 )"		7237167	2		=			
ANR	7237199	Identifier	ul		7237167	0					
ANR	7237200	CallExpression	"strtoul ( arg , & ep , 0 )"		7237167	1					
ANR	7237201	Callee	strtoul		7237167	0					
ANR	7237202	Identifier	strtoul		7237167	0					
ANR	7237203	ArgumentList	arg		7237167	1					
ANR	7237204	Argument	arg		7237167	0					
ANR	7237205	Identifier	arg		7237167	0					
ANR	7237206	Argument	& ep		7237167	1					
ANR	7237207	UnaryOperationExpression	& ep		7237167	0					
ANR	7237208	UnaryOperator	&		7237167	0					
ANR	7237209	Identifier	ep		7237167	1					
ANR	7237210	Argument	0		7237167	2					
ANR	7237211	PrimaryExpression	0		7237167	0					
ANR	7237212	IfStatement	if ( ul > 65535 )		7237167	2					
ANR	7237213	Condition	ul > 65535	1650:10:47453:47462	7237167	0	True				
ANR	7237214	RelationalExpression	ul > 65535		7237167	0		>			
ANR	7237215	Identifier	ul		7237167	0					
ANR	7237216	PrimaryExpression	65535		7237167	1					
ANR	7237217	CompoundStatement		11:6:166:166	7237167	1					
ANR	7237218	ExpressionStatement	"fprintf ( stderr , ""makepng --color=...'%s': too big\\n"" , arg )"	1652:9:47482:47540	7237167	0	True				
ANR	7237219	CallExpression	"fprintf ( stderr , ""makepng --color=...'%s': too big\\n"" , arg )"		7237167	0					
ANR	7237220	Callee	fprintf		7237167	0					
ANR	7237221	Identifier	fprintf		7237167	0					
ANR	7237222	ArgumentList	stderr		7237167	1					
ANR	7237223	Argument	stderr		7237167	0					
ANR	7237224	Identifier	stderr		7237167	0					
ANR	7237225	Argument	"""makepng --color=...'%s': too big\\n"""		7237167	1					
ANR	7237226	PrimaryExpression	"""makepng --color=...'%s': too big\\n"""		7237167	0					
ANR	7237227	Argument	arg		7237167	2					
ANR	7237228	Identifier	arg		7237167	0					
ANR	7237229	ExpressionStatement	exit ( 1 )	1653:9:47551:47558	7237167	1	True				
ANR	7237230	CallExpression	exit ( 1 )		7237167	0					
ANR	7237231	Callee	exit		7237167	0					
ANR	7237232	Identifier	exit		7237167	0					
ANR	7237233	ArgumentList	1		7237167	1					
ANR	7237234	Argument	1		7237167	0					
ANR	7237235	PrimaryExpression	1		7237167	0					
ANR	7237236	IfStatement	if ( ep == arg )		7237167	3					
ANR	7237237	Condition	ep == arg	1656:10:47579:47587	7237167	0	True				
ANR	7237238	EqualityExpression	ep == arg		7237167	0		==			
ANR	7237239	Identifier	ep		7237167	0					
ANR	7237240	Identifier	arg		7237167	1					
ANR	7237241	CompoundStatement		17:6:291:291	7237167	1					
ANR	7237242	ExpressionStatement	"fprintf ( stderr , ""makepng --color=...'%s': not a valid color\\n"" , arg )"	1658:9:47607:47675	7237167	0	True				
ANR	7237243	CallExpression	"fprintf ( stderr , ""makepng --color=...'%s': not a valid color\\n"" , arg )"		7237167	0					
ANR	7237244	Callee	fprintf		7237167	0					
ANR	7237245	Identifier	fprintf		7237167	0					
ANR	7237246	ArgumentList	stderr		7237167	1					
ANR	7237247	Argument	stderr		7237167	0					
ANR	7237248	Identifier	stderr		7237167	0					
ANR	7237249	Argument	"""makepng --color=...'%s': not a valid color\\n"""		7237167	1					
ANR	7237250	PrimaryExpression	"""makepng --color=...'%s': not a valid color\\n"""		7237167	0					
ANR	7237251	Argument	arg		7237167	2					
ANR	7237252	Identifier	arg		7237167	0					
ANR	7237253	ExpressionStatement	exit ( 1 )	1659:9:47686:47693	7237167	1	True				
ANR	7237254	CallExpression	exit ( 1 )		7237167	0					
ANR	7237255	Callee	exit		7237167	0					
ANR	7237256	Identifier	exit		7237167	0					
ANR	7237257	ArgumentList	1		7237167	1					
ANR	7237258	Argument	1		7237167	0					
ANR	7237259	PrimaryExpression	1		7237167	0					
ANR	7237260	IfStatement	if ( * ep )		7237167	4					
ANR	7237261	Condition	* ep	1662:10:47714:47716	7237167	0	True				
ANR	7237262	UnaryOperationExpression	* ep		7237167	0					
ANR	7237263	UnaryOperator	*		7237167	0					
ANR	7237264	Identifier	ep		7237167	1					
ANR	7237265	ExpressionStatement	++ ep	1662:15:47719:47723	7237167	1	True				
ANR	7237266	UnaryExpression	++ ep		7237167	0					
ANR	7237267	IncDec	++		7237167	0					
ANR	7237268	Identifier	ep		7237167	1					
ANR	7237269	ExpressionStatement	arg = ep	1663:6:47754:47762	7237167	5	True				
ANR	7237270	AssignmentExpression	arg = ep		7237167	0		=			
ANR	7237271	Identifier	arg		7237167	0					
ANR	7237272	Identifier	ep		7237167	1					
ANR	7237273	ExpressionStatement	colors [ ++ ncolors ] = ( unsigned int ) ul	1665:6:47771:47807	7237167	6	True				
ANR	7237274	AssignmentExpression	colors [ ++ ncolors ] = ( unsigned int ) ul		7237167	0		=			
ANR	7237275	ArrayIndexing	colors [ ++ ncolors ]		7237167	0					
ANR	7237276	Identifier	colors		7237167	0					
ANR	7237277	UnaryExpression	++ ncolors		7237167	1					
ANR	7237278	IncDec	++		7237167	0					
ANR	7237279	Identifier	ncolors		7237167	1					
ANR	7237280	CastExpression	( unsigned int ) ul		7237167	1					
ANR	7237281	CastTarget	unsigned int		7237167	0					
ANR	7237282	Identifier	ul		7237167	1					
ANR	7237283	IfStatement	if ( * arg )		7237167	2					
ANR	7237284	Condition	* arg	1668:7:47842:47845	7237167	0	True				
ANR	7237285	UnaryOperationExpression	* arg		7237167	0					
ANR	7237286	UnaryOperator	*		7237167	0					
ANR	7237287	Identifier	arg		7237167	1					
ANR	7237288	CompoundStatement		29:3:546:546	7237167	1					
ANR	7237289	ExpressionStatement	"fprintf ( stderr , ""makepng --color=...'%s': too many values\\n"" , arg )"	1670:6:47859:47925	7237167	0	True				
ANR	7237290	CallExpression	"fprintf ( stderr , ""makepng --color=...'%s': too many values\\n"" , arg )"		7237167	0					
ANR	7237291	Callee	fprintf		7237167	0					
ANR	7237292	Identifier	fprintf		7237167	0					
ANR	7237293	ArgumentList	stderr		7237167	1					
ANR	7237294	Argument	stderr		7237167	0					
ANR	7237295	Identifier	stderr		7237167	0					
ANR	7237296	Argument	"""makepng --color=...'%s': too many values\\n"""		7237167	1					
ANR	7237297	PrimaryExpression	"""makepng --color=...'%s': too many values\\n"""		7237167	0					
ANR	7237298	Argument	arg		7237167	2					
ANR	7237299	Identifier	arg		7237167	0					
ANR	7237300	ExpressionStatement	exit ( 1 )	1671:6:47933:47940	7237167	1	True				
ANR	7237301	CallExpression	exit ( 1 )		7237167	0					
ANR	7237302	Callee	exit		7237167	0					
ANR	7237303	Identifier	exit		7237167	0					
ANR	7237304	ArgumentList	1		7237167	1					
ANR	7237305	Argument	1		7237167	0					
ANR	7237306	PrimaryExpression	1		7237167	0					
ANR	7237307	ExpressionStatement	* colors = ncolors	1674:3:47951:47968	7237167	3	True				
ANR	7237308	AssignmentExpression	* colors = ncolors		7237167	0		=			
ANR	7237309	UnaryOperationExpression	* colors		7237167	0					
ANR	7237310	UnaryOperator	*		7237167	0					
ANR	7237311	Identifier	colors		7237167	1					
ANR	7237312	Identifier	ncolors		7237167	1					
ANR	7237313	ReturnType	static void		7237167	1					
ANR	7237314	Identifier	parse_color		7237167	2					
ANR	7237315	ParameterList	"char * arg , unsigned int * colors"		7237167	3					
ANR	7237316	Parameter	char * arg	1640:12:47271:47279	7237167	0	True				
ANR	7237317	ParameterType	char *		7237167	0					
ANR	7237318	Identifier	arg		7237167	1					
ANR	7237319	Parameter	unsigned int * colors	1640:23:47282:47301	7237167	1	True				
ANR	7237320	ParameterType	unsigned int *		7237167	0					
ANR	7237321	Identifier	colors		7237167	1					
ANR	7237322	CFGEntryNode	ENTRY		7237167		True				
ANR	7237323	CFGExitNode	EXIT		7237167		True				
ANR	7237324	Symbol	* colors		7237167						
ANR	7237325	Symbol	ncolors		7237167						
ANR	7237326	Symbol	* ep		7237167						
ANR	7237327	Symbol	& ep		7237167						
ANR	7237328	Symbol	* ncolors		7237167						
ANR	7237329	Symbol	arg		7237167						
ANR	7237330	Symbol	ul		7237167						
ANR	7237331	Symbol	strtoul		7237167						
ANR	7237332	Symbol	ep		7237167						
ANR	7237333	Symbol	stderr		7237167						
ANR	7237334	Symbol	colors		7237167						
ANR	7237335	Symbol	* arg		7237167						
ANR	7237336	Function	main	1677:0:47973:54242							
ANR	7237337	FunctionDef	"main (int argc , char * * argv)"		7237336	0					
ANR	7237338	CompoundStatement		1679:0:48005:54242	7237336	0					
ANR	7237339	IdentifierDeclStatement	FILE * fp = stdout ;	1680:3:48010:48027	7237336	0	True				
ANR	7237340	IdentifierDecl	* fp = stdout		7237336	0					
ANR	7237341	IdentifierDeclType	FILE *		7237336	0					
ANR	7237342	Identifier	fp		7237336	1					
ANR	7237343	AssignmentExpression	* fp = stdout		7237336	2		=			
ANR	7237344	Identifier	stdout		7237336	0					
ANR	7237345	Identifier	stdout		7237336	1					
ANR	7237346	IdentifierDeclStatement	const char * file_name = NULL ;	1681:3:48032:48060	7237336	1	True				
ANR	7237347	IdentifierDecl	* file_name = NULL		7237336	0					
ANR	7237348	IdentifierDeclType	const char *		7237336	0					
ANR	7237349	Identifier	file_name		7237336	1					
ANR	7237350	AssignmentExpression	* file_name = NULL		7237336	2		=			
ANR	7237351	Identifier	NULL		7237336	0					
ANR	7237352	Identifier	NULL		7237336	1					
ANR	7237353	IdentifierDeclStatement	int color_type = 8 ;	1682:3:48065:48083	7237336	2	True				
ANR	7237354	IdentifierDecl	color_type = 8		7237336	0					
ANR	7237355	IdentifierDeclType	int		7237336	0					
ANR	7237356	Identifier	color_type		7237336	1					
ANR	7237357	AssignmentExpression	color_type = 8		7237336	2		=			
ANR	7237358	Identifier	color_type		7237336	0					
ANR	7237359	PrimaryExpression	8		7237336	1					
ANR	7237360	IdentifierDeclStatement	int bit_depth = 32 ;	1683:3:48102:48120	7237336	3	True				
ANR	7237361	IdentifierDecl	bit_depth = 32		7237336	0					
ANR	7237362	IdentifierDeclType	int		7237336	0					
ANR	7237363	Identifier	bit_depth		7237336	1					
ANR	7237364	AssignmentExpression	bit_depth = 32		7237336	2		=			
ANR	7237365	Identifier	bit_depth		7237336	0					
ANR	7237366	PrimaryExpression	32		7237336	1					
ANR	7237367	IdentifierDeclStatement	int small = 0 ;	1684:3:48139:48152	7237336	4	True				
ANR	7237368	IdentifierDecl	small = 0		7237336	0					
ANR	7237369	IdentifierDeclType	int		7237336	0					
ANR	7237370	Identifier	small		7237336	1					
ANR	7237371	AssignmentExpression	small = 0		7237336	2		=			
ANR	7237372	Identifier	small		7237336	0					
ANR	7237373	PrimaryExpression	0		7237336	1					
ANR	7237374	IdentifierDeclStatement	int tRNS = 0 ;	1685:3:48185:48197	7237336	5	True				
ANR	7237375	IdentifierDecl	tRNS = 0		7237336	0					
ANR	7237376	IdentifierDeclType	int		7237336	0					
ANR	7237377	Identifier	tRNS		7237336	1					
ANR	7237378	AssignmentExpression	tRNS = 0		7237336	2		=			
ANR	7237379	Identifier	tRNS		7237336	0					
ANR	7237380	PrimaryExpression	0		7237336	1					
ANR	7237381	IdentifierDeclStatement	unsigned int colors [ 5 ] ;	1686:3:48234:48256	7237336	6	True				
ANR	7237382	IdentifierDecl	colors [ 5 ]		7237336	0					
ANR	7237383	IdentifierDeclType	unsigned int [ 5 ]		7237336	0					
ANR	7237384	Identifier	colors		7237336	1					
ANR	7237385	PrimaryExpression	5		7237336	2					
ANR	7237386	IdentifierDeclStatement	unsigned int filters = PNG_ALL_FILTERS ;	1687:3:48261:48299	7237336	7	True				
ANR	7237387	IdentifierDecl	filters = PNG_ALL_FILTERS		7237336	0					
ANR	7237388	IdentifierDeclType	unsigned int		7237336	0					
ANR	7237389	Identifier	filters		7237336	1					
ANR	7237390	AssignmentExpression	filters = PNG_ALL_FILTERS		7237336	2		=			
ANR	7237391	Identifier	PNG_ALL_FILTERS		7237336	0					
ANR	7237392	Identifier	PNG_ALL_FILTERS		7237336	1					
ANR	7237393	IdentifierDeclStatement	png_fixed_point gamma = 0 ;	1688:3:48304:48329	7237336	8	True				
ANR	7237394	IdentifierDecl	gamma = 0		7237336	0					
ANR	7237395	IdentifierDeclType	png_fixed_point		7237336	0					
ANR	7237396	Identifier	gamma		7237336	1					
ANR	7237397	AssignmentExpression	gamma = 0		7237336	2		=			
ANR	7237398	Identifier	gamma		7237336	0					
ANR	7237399	PrimaryExpression	0		7237336	1					
ANR	7237400	IdentifierDeclStatement	chunk_insert * head_insert = NULL ;	1689:3:48348:48380	7237336	9	True				
ANR	7237401	IdentifierDecl	* head_insert = NULL		7237336	0					
ANR	7237402	IdentifierDeclType	chunk_insert *		7237336	0					
ANR	7237403	Identifier	head_insert		7237336	1					
ANR	7237404	AssignmentExpression	* head_insert = NULL		7237336	2		=			
ANR	7237405	Identifier	NULL		7237336	0					
ANR	7237406	Identifier	NULL		7237336	1					
ANR	7237407	IdentifierDeclStatement	chunk_insert * * insert_ptr = & head_insert ;	1690:3:48385:48425	7237336	10	True				
ANR	7237408	IdentifierDecl	* * insert_ptr = & head_insert		7237336	0					
ANR	7237409	IdentifierDeclType	chunk_insert * *		7237336	0					
ANR	7237410	Identifier	insert_ptr		7237336	1					
ANR	7237411	AssignmentExpression	* * insert_ptr = & head_insert		7237336	2		=			
ANR	7237412	Identifier	insert_ptr		7237336	0					
ANR	7237413	UnaryOperationExpression	& head_insert		7237336	1					
ANR	7237414	UnaryOperator	&		7237336	0					
ANR	7237415	Identifier	head_insert		7237336	1					
ANR	7237416	ExpressionStatement	"memset ( colors , 0 , sizeof colors )"	1692:3:48431:48463	7237336	11	True				
ANR	7237417	CallExpression	"memset ( colors , 0 , sizeof colors )"		7237336	0					
ANR	7237418	Callee	memset		7237336	0					
ANR	7237419	Identifier	memset		7237336	0					
ANR	7237420	ArgumentList	colors		7237336	1					
ANR	7237421	Argument	colors		7237336	0					
ANR	7237422	Identifier	colors		7237336	0					
ANR	7237423	Argument	0		7237336	1					
ANR	7237424	PrimaryExpression	0		7237336	0					
ANR	7237425	Argument	sizeof colors		7237336	2					
ANR	7237426	SizeofExpression	sizeof colors		7237336	0					
ANR	7237427	Sizeof	sizeof		7237336	0					
ANR	7237428	Identifier	colors		7237336	1					
ANR	7237429	WhileStatement	while ( -- argc > 0 )		7237336	12					
ANR	7237430	Condition	-- argc > 0	1694:10:48476:48485	7237336	0	True				
ANR	7237431	RelationalExpression	-- argc > 0		7237336	0		>			
ANR	7237432	UnaryExpression	-- argc		7237336	0					
ANR	7237433	IncDec	--		7237336	0					
ANR	7237434	Identifier	argc		7237336	1					
ANR	7237435	PrimaryExpression	0		7237336	1					
ANR	7237436	CompoundStatement		18:6:493:512	7237336	1					
ANR	7237437	IdentifierDeclStatement	char * arg = * ++ argv ;	1696:6:48499:48518	7237336	0	True				
ANR	7237438	IdentifierDecl	* arg = * ++ argv		7237336	0					
ANR	7237439	IdentifierDeclType	char *		7237336	0					
ANR	7237440	Identifier	arg		7237336	1					
ANR	7237441	AssignmentExpression	* arg = * ++ argv		7237336	2		=			
ANR	7237442	Identifier	arg		7237336	0					
ANR	7237443	UnaryOperationExpression	* ++ argv		7237336	1					
ANR	7237444	UnaryOperator	*		7237336	0					
ANR	7237445	UnaryExpression	++ argv		7237336	1					
ANR	7237446	IncDec	++		7237336	0					
ANR	7237447	Identifier	argv		7237336	1					
ANR	7237448	IfStatement	"if ( strcmp ( arg , ""--small"" ) == 0 )"		7237336	1					
ANR	7237449	Condition	"strcmp ( arg , ""--small"" ) == 0"	1698:10:48531:48557	7237336	0	True				
ANR	7237450	EqualityExpression	"strcmp ( arg , ""--small"" ) == 0"		7237336	0		==			
ANR	7237451	CallExpression	"strcmp ( arg , ""--small"" )"		7237336	0					
ANR	7237452	Callee	strcmp		7237336	0					
ANR	7237453	Identifier	strcmp		7237336	0					
ANR	7237454	ArgumentList	arg		7237336	1					
ANR	7237455	Argument	arg		7237336	0					
ANR	7237456	Identifier	arg		7237336	0					
ANR	7237457	Argument	"""--small"""		7237336	1					
ANR	7237458	PrimaryExpression	"""--small"""		7237336	0					
ANR	7237459	PrimaryExpression	0		7237336	1					
ANR	7237460	CompoundStatement		21:6:560:560	7237336	1					
ANR	7237461	ExpressionStatement	small = 1	1700:9:48577:48586	7237336	0	True				
ANR	7237462	AssignmentExpression	small = 1		7237336	0		=			
ANR	7237463	Identifier	small		7237336	0					
ANR	7237464	PrimaryExpression	1		7237336	1					
ANR	7237465	ContinueStatement	continue ;	1701:9:48597:48605	7237336	1	True				
ANR	7237466	IfStatement	"if ( strcmp ( arg , ""--tRNS"" ) == 0 )"		7237336	2					
ANR	7237467	Condition	"strcmp ( arg , ""--tRNS"" ) == 0"	1704:10:48626:48651	7237336	0	True				
ANR	7237468	EqualityExpression	"strcmp ( arg , ""--tRNS"" ) == 0"		7237336	0		==			
ANR	7237469	CallExpression	"strcmp ( arg , ""--tRNS"" )"		7237336	0					
ANR	7237470	Callee	strcmp		7237336	0					
ANR	7237471	Identifier	strcmp		7237336	0					
ANR	7237472	ArgumentList	arg		7237336	1					
ANR	7237473	Argument	arg		7237336	0					
ANR	7237474	Identifier	arg		7237336	0					
ANR	7237475	Argument	"""--tRNS"""		7237336	1					
ANR	7237476	PrimaryExpression	"""--tRNS"""		7237336	0					
ANR	7237477	PrimaryExpression	0		7237336	1					
ANR	7237478	CompoundStatement		27:6:654:654	7237336	1					
ANR	7237479	ExpressionStatement	tRNS = 1	1706:9:48671:48679	7237336	0	True				
ANR	7237480	AssignmentExpression	tRNS = 1		7237336	0		=			
ANR	7237481	Identifier	tRNS		7237336	0					
ANR	7237482	PrimaryExpression	1		7237336	1					
ANR	7237483	ContinueStatement	continue ;	1707:9:48690:48698	7237336	1	True				
ANR	7237484	IfStatement	"if ( strcmp ( arg , ""--sRGB"" ) == 0 )"		7237336	3					
ANR	7237485	Condition	"strcmp ( arg , ""--sRGB"" ) == 0"	1710:10:48719:48744	7237336	0	True				
ANR	7237486	EqualityExpression	"strcmp ( arg , ""--sRGB"" ) == 0"		7237336	0		==			
ANR	7237487	CallExpression	"strcmp ( arg , ""--sRGB"" )"		7237336	0					
ANR	7237488	Callee	strcmp		7237336	0					
ANR	7237489	Identifier	strcmp		7237336	0					
ANR	7237490	ArgumentList	arg		7237336	1					
ANR	7237491	Argument	arg		7237336	0					
ANR	7237492	Identifier	arg		7237336	0					
ANR	7237493	Argument	"""--sRGB"""		7237336	1					
ANR	7237494	PrimaryExpression	"""--sRGB"""		7237336	0					
ANR	7237495	PrimaryExpression	0		7237336	1					
ANR	7237496	CompoundStatement		33:6:747:747	7237336	1					
ANR	7237497	ExpressionStatement	gamma = PNG_DEFAULT_sRGB	1712:9:48764:48788	7237336	0	True				
ANR	7237498	AssignmentExpression	gamma = PNG_DEFAULT_sRGB		7237336	0		=			
ANR	7237499	Identifier	gamma		7237336	0					
ANR	7237500	Identifier	PNG_DEFAULT_sRGB		7237336	1					
ANR	7237501	ContinueStatement	continue ;	1713:9:48799:48807	7237336	1	True				
ANR	7237502	IfStatement	"if ( strcmp ( arg , ""--linear"" ) == 0 )"		7237336	4					
ANR	7237503	Condition	"strcmp ( arg , ""--linear"" ) == 0"	1716:10:48828:48855	7237336	0	True				
ANR	7237504	EqualityExpression	"strcmp ( arg , ""--linear"" ) == 0"		7237336	0		==			
ANR	7237505	CallExpression	"strcmp ( arg , ""--linear"" )"		7237336	0					
ANR	7237506	Callee	strcmp		7237336	0					
ANR	7237507	Identifier	strcmp		7237336	0					
ANR	7237508	ArgumentList	arg		7237336	1					
ANR	7237509	Argument	arg		7237336	0					
ANR	7237510	Identifier	arg		7237336	0					
ANR	7237511	Argument	"""--linear"""		7237336	1					
ANR	7237512	PrimaryExpression	"""--linear"""		7237336	0					
ANR	7237513	PrimaryExpression	0		7237336	1					
ANR	7237514	CompoundStatement		39:6:858:858	7237336	1					
ANR	7237515	ExpressionStatement	gamma = PNG_FP_1	1718:9:48875:48891	7237336	0	True				
ANR	7237516	AssignmentExpression	gamma = PNG_FP_1		7237336	0		=			
ANR	7237517	Identifier	gamma		7237336	0					
ANR	7237518	Identifier	PNG_FP_1		7237336	1					
ANR	7237519	ContinueStatement	continue ;	1719:9:48902:48910	7237336	1	True				
ANR	7237520	IfStatement	"if ( strcmp ( arg , ""--1.8"" ) == 0 )"		7237336	5					
ANR	7237521	Condition	"strcmp ( arg , ""--1.8"" ) == 0"	1722:10:48931:48955	7237336	0	True				
ANR	7237522	EqualityExpression	"strcmp ( arg , ""--1.8"" ) == 0"		7237336	0		==			
ANR	7237523	CallExpression	"strcmp ( arg , ""--1.8"" )"		7237336	0					
ANR	7237524	Callee	strcmp		7237336	0					
ANR	7237525	Identifier	strcmp		7237336	0					
ANR	7237526	ArgumentList	arg		7237336	1					
ANR	7237527	Argument	arg		7237336	0					
ANR	7237528	Identifier	arg		7237336	0					
ANR	7237529	Argument	"""--1.8"""		7237336	1					
ANR	7237530	PrimaryExpression	"""--1.8"""		7237336	0					
ANR	7237531	PrimaryExpression	0		7237336	1					
ANR	7237532	CompoundStatement		45:6:958:958	7237336	1					
ANR	7237533	ExpressionStatement	gamma = PNG_GAMMA_MAC_18	1724:9:48975:48999	7237336	0	True				
ANR	7237534	AssignmentExpression	gamma = PNG_GAMMA_MAC_18		7237336	0		=			
ANR	7237535	Identifier	gamma		7237336	0					
ANR	7237536	Identifier	PNG_GAMMA_MAC_18		7237336	1					
ANR	7237537	ContinueStatement	continue ;	1725:9:49010:49018	7237336	1	True				
ANR	7237538	IfStatement	"if ( strcmp ( arg , ""--nofilters"" ) == 0 )"		7237336	6					
ANR	7237539	Condition	"strcmp ( arg , ""--nofilters"" ) == 0"	1728:10:49039:49069	7237336	0	True				
ANR	7237540	EqualityExpression	"strcmp ( arg , ""--nofilters"" ) == 0"		7237336	0		==			
ANR	7237541	CallExpression	"strcmp ( arg , ""--nofilters"" )"		7237336	0					
ANR	7237542	Callee	strcmp		7237336	0					
ANR	7237543	Identifier	strcmp		7237336	0					
ANR	7237544	ArgumentList	arg		7237336	1					
ANR	7237545	Argument	arg		7237336	0					
ANR	7237546	Identifier	arg		7237336	0					
ANR	7237547	Argument	"""--nofilters"""		7237336	1					
ANR	7237548	PrimaryExpression	"""--nofilters"""		7237336	0					
ANR	7237549	PrimaryExpression	0		7237336	1					
ANR	7237550	CompoundStatement		51:6:1072:1072	7237336	1					
ANR	7237551	ExpressionStatement	filters = PNG_FILTER_NONE	1730:9:49089:49114	7237336	0	True				
ANR	7237552	AssignmentExpression	filters = PNG_FILTER_NONE		7237336	0		=			
ANR	7237553	Identifier	filters		7237336	0					
ANR	7237554	Identifier	PNG_FILTER_NONE		7237336	1					
ANR	7237555	ContinueStatement	continue ;	1731:9:49125:49133	7237336	1	True				
ANR	7237556	IfStatement	"if ( strncmp ( arg , ""--color="" , 8 ) == 0 )"		7237336	7					
ANR	7237557	Condition	"strncmp ( arg , ""--color="" , 8 ) == 0"	1734:10:49154:49185	7237336	0	True				
ANR	7237558	EqualityExpression	"strncmp ( arg , ""--color="" , 8 ) == 0"		7237336	0		==			
ANR	7237559	CallExpression	"strncmp ( arg , ""--color="" , 8 )"		7237336	0					
ANR	7237560	Callee	strncmp		7237336	0					
ANR	7237561	Identifier	strncmp		7237336	0					
ANR	7237562	ArgumentList	arg		7237336	1					
ANR	7237563	Argument	arg		7237336	0					
ANR	7237564	Identifier	arg		7237336	0					
ANR	7237565	Argument	"""--color="""		7237336	1					
ANR	7237566	PrimaryExpression	"""--color="""		7237336	0					
ANR	7237567	Argument	8		7237336	2					
ANR	7237568	PrimaryExpression	8		7237336	0					
ANR	7237569	PrimaryExpression	0		7237336	1					
ANR	7237570	CompoundStatement		57:6:1188:1188	7237336	1					
ANR	7237571	ExpressionStatement	"parse_color ( arg + 8 , colors )"	1736:10:49206:49232	7237336	0	True				
ANR	7237572	CallExpression	"parse_color ( arg + 8 , colors )"		7237336	0					
ANR	7237573	Callee	parse_color		7237336	0					
ANR	7237574	Identifier	parse_color		7237336	0					
ANR	7237575	ArgumentList	arg + 8		7237336	1					
ANR	7237576	Argument	arg + 8		7237336	0					
ANR	7237577	AdditiveExpression	arg + 8		7237336	0		+			
ANR	7237578	Identifier	arg		7237336	0					
ANR	7237579	PrimaryExpression	8		7237336	1					
ANR	7237580	Argument	colors		7237336	1					
ANR	7237581	Identifier	colors		7237336	0					
ANR	7237582	ContinueStatement	continue ;	1737:10:49244:49252	7237336	1	True				
ANR	7237583	IfStatement	"if ( argc >= 3 && strcmp ( arg , ""--insert"" ) == 0 )"		7237336	8					
ANR	7237584	Condition	"argc >= 3 && strcmp ( arg , ""--insert"" ) == 0"	1740:10:49273:49313	7237336	0	True				
ANR	7237585	AndExpression	"argc >= 3 && strcmp ( arg , ""--insert"" ) == 0"		7237336	0		&&			
ANR	7237586	RelationalExpression	argc >= 3		7237336	0		>=			
ANR	7237587	Identifier	argc		7237336	0					
ANR	7237588	PrimaryExpression	3		7237336	1					
ANR	7237589	EqualityExpression	"strcmp ( arg , ""--insert"" ) == 0"		7237336	1		==			
ANR	7237590	CallExpression	"strcmp ( arg , ""--insert"" )"		7237336	0					
ANR	7237591	Callee	strcmp		7237336	0					
ANR	7237592	Identifier	strcmp		7237336	0					
ANR	7237593	ArgumentList	arg		7237336	1					
ANR	7237594	Argument	arg		7237336	0					
ANR	7237595	Identifier	arg		7237336	0					
ANR	7237596	Argument	"""--insert"""		7237336	1					
ANR	7237597	PrimaryExpression	"""--insert"""		7237336	0					
ANR	7237598	PrimaryExpression	0		7237336	1					
ANR	7237599	CompoundStatement		66:9:1404:1428	7237336	1					
ANR	7237600	IdentifierDeclStatement	png_const_charp what = * ++ argv ;	1742:9:49333:49363	7237336	0	True				
ANR	7237601	IdentifierDecl	what = * ++ argv		7237336	0					
ANR	7237602	IdentifierDeclType	png_const_charp		7237336	0					
ANR	7237603	Identifier	what		7237336	1					
ANR	7237604	AssignmentExpression	what = * ++ argv		7237336	2		=			
ANR	7237605	Identifier	what		7237336	0					
ANR	7237606	UnaryOperationExpression	* ++ argv		7237336	1					
ANR	7237607	UnaryOperator	*		7237336	0					
ANR	7237608	UnaryExpression	++ argv		7237336	1					
ANR	7237609	IncDec	++		7237336	0					
ANR	7237610	Identifier	argv		7237336	1					
ANR	7237611	IdentifierDeclStatement	png_charp param = * ++ argv ;	1743:9:49374:49399	7237336	1	True				
ANR	7237612	IdentifierDecl	param = * ++ argv		7237336	0					
ANR	7237613	IdentifierDeclType	png_charp		7237336	0					
ANR	7237614	Identifier	param		7237336	1					
ANR	7237615	AssignmentExpression	param = * ++ argv		7237336	2		=			
ANR	7237616	Identifier	param		7237336	0					
ANR	7237617	UnaryOperationExpression	* ++ argv		7237336	1					
ANR	7237618	UnaryOperator	*		7237336	0					
ANR	7237619	UnaryExpression	++ argv		7237336	1					
ANR	7237620	IncDec	++		7237336	0					
ANR	7237621	Identifier	argv		7237336	1					
ANR	7237622	IdentifierDeclStatement	chunk_insert * new_insert ;	1744:9:49410:49434	7237336	2	True				
ANR	7237623	IdentifierDecl	* new_insert		7237336	0					
ANR	7237624	IdentifierDeclType	chunk_insert *		7237336	0					
ANR	7237625	Identifier	new_insert		7237336	1					
ANR	7237626	ExpressionStatement	argc -= 2	1746:9:49446:49455	7237336	3	True				
ANR	7237627	AssignmentExpression	argc -= 2		7237336	0		-=			
ANR	7237628	Identifier	argc		7237336	0					
ANR	7237629	PrimaryExpression	2		7237336	1					
ANR	7237630	ExpressionStatement	"new_insert = find_insert ( what , param )"	1748:9:49467:49504	7237336	4	True				
ANR	7237631	AssignmentExpression	"new_insert = find_insert ( what , param )"		7237336	0		=			
ANR	7237632	Identifier	new_insert		7237336	0					
ANR	7237633	CallExpression	"find_insert ( what , param )"		7237336	1					
ANR	7237634	Callee	find_insert		7237336	0					
ANR	7237635	Identifier	find_insert		7237336	0					
ANR	7237636	ArgumentList	what		7237336	1					
ANR	7237637	Argument	what		7237336	0					
ANR	7237638	Identifier	what		7237336	0					
ANR	7237639	Argument	param		7237336	1					
ANR	7237640	Identifier	param		7237336	0					
ANR	7237641	IfStatement	if ( new_insert != NULL )		7237336	5					
ANR	7237642	Condition	new_insert != NULL	1750:13:49520:49537	7237336	0	True				
ANR	7237643	EqualityExpression	new_insert != NULL		7237336	0		!=			
ANR	7237644	Identifier	new_insert		7237336	0					
ANR	7237645	Identifier	NULL		7237336	1					
ANR	7237646	CompoundStatement		73:9:1543:1543	7237336	1					
ANR	7237647	ExpressionStatement	* insert_ptr = new_insert	1752:12:49563:49587	7237336	0	True				
ANR	7237648	AssignmentExpression	* insert_ptr = new_insert		7237336	0		=			
ANR	7237649	UnaryOperationExpression	* insert_ptr		7237336	0					
ANR	7237650	UnaryOperator	*		7237336	0					
ANR	7237651	Identifier	insert_ptr		7237336	1					
ANR	7237652	Identifier	new_insert		7237336	1					
ANR	7237653	ExpressionStatement	insert_ptr = & new_insert -> next	1753:12:49601:49631	7237336	1	True				
ANR	7237654	AssignmentExpression	insert_ptr = & new_insert -> next		7237336	0		=			
ANR	7237655	Identifier	insert_ptr		7237336	0					
ANR	7237656	UnaryOperationExpression	& new_insert -> next		7237336	1					
ANR	7237657	UnaryOperator	&		7237336	0					
ANR	7237658	PtrMemberAccess	new_insert -> next		7237336	1					
ANR	7237659	Identifier	new_insert		7237336	0					
ANR	7237660	Identifier	next		7237336	1					
ANR	7237661	ContinueStatement	continue ;	1756:9:49654:49662	7237336	6	True				
ANR	7237662	IfStatement	if ( arg [ 0 ] == '-' )		7237336	9					
ANR	7237663	Condition	arg [ 0 ] == '-'	1759:10:49683:49695	7237336	0	True				
ANR	7237664	EqualityExpression	arg [ 0 ] == '-'		7237336	0		==			
ANR	7237665	ArrayIndexing	arg [ 0 ]		7237336	0					
ANR	7237666	Identifier	arg		7237336	0					
ANR	7237667	PrimaryExpression	0		7237336	1					
ANR	7237668	PrimaryExpression	'-'		7237336	1					
ANR	7237669	CompoundStatement		82:6:1698:1698	7237336	1					
ANR	7237670	ExpressionStatement	"fprintf ( stderr , ""makepng: %s: invalid option\\n"" , arg )"	1761:9:49715:49768	7237336	0	True				
ANR	7237671	CallExpression	"fprintf ( stderr , ""makepng: %s: invalid option\\n"" , arg )"		7237336	0					
ANR	7237672	Callee	fprintf		7237336	0					
ANR	7237673	Identifier	fprintf		7237336	0					
ANR	7237674	ArgumentList	stderr		7237336	1					
ANR	7237675	Argument	stderr		7237336	0					
ANR	7237676	Identifier	stderr		7237336	0					
ANR	7237677	Argument	"""makepng: %s: invalid option\\n"""		7237336	1					
ANR	7237678	PrimaryExpression	"""makepng: %s: invalid option\\n"""		7237336	0					
ANR	7237679	Argument	arg		7237336	2					
ANR	7237680	Identifier	arg		7237336	0					
ANR	7237681	ExpressionStatement	exit ( 1 )	1762:9:49779:49786	7237336	1	True				
ANR	7237682	CallExpression	exit ( 1 )		7237336	0					
ANR	7237683	Callee	exit		7237336	0					
ANR	7237684	Identifier	exit		7237336	0					
ANR	7237685	ArgumentList	1		7237336	1					
ANR	7237686	Argument	1		7237336	0					
ANR	7237687	PrimaryExpression	1		7237336	0					
ANR	7237688	IfStatement	"if ( strcmp ( arg , ""palette"" ) == 0 )"		7237336	10					
ANR	7237689	Condition	"strcmp ( arg , ""palette"" ) == 0"	1765:10:49807:49833	7237336	0	True				
ANR	7237690	EqualityExpression	"strcmp ( arg , ""palette"" ) == 0"		7237336	0		==			
ANR	7237691	CallExpression	"strcmp ( arg , ""palette"" )"		7237336	0					
ANR	7237692	Callee	strcmp		7237336	0					
ANR	7237693	Identifier	strcmp		7237336	0					
ANR	7237694	ArgumentList	arg		7237336	1					
ANR	7237695	Argument	arg		7237336	0					
ANR	7237696	Identifier	arg		7237336	0					
ANR	7237697	Argument	"""palette"""		7237336	1					
ANR	7237698	PrimaryExpression	"""palette"""		7237336	0					
ANR	7237699	PrimaryExpression	0		7237336	1					
ANR	7237700	CompoundStatement		88:6:1836:1836	7237336	1					
ANR	7237701	ExpressionStatement	color_type = PNG_COLOR_TYPE_PALETTE	1767:9:49853:49888	7237336	0	True				
ANR	7237702	AssignmentExpression	color_type = PNG_COLOR_TYPE_PALETTE		7237336	0		=			
ANR	7237703	Identifier	color_type		7237336	0					
ANR	7237704	Identifier	PNG_COLOR_TYPE_PALETTE		7237336	1					
ANR	7237705	ContinueStatement	continue ;	1768:9:49899:49907	7237336	1	True				
ANR	7237706	IfStatement	"if ( strncmp ( arg , ""gray"" , 4 ) == 0 )"		7237336	11					
ANR	7237707	Condition	"strncmp ( arg , ""gray"" , 4 ) == 0"	1771:10:49928:49955	7237336	0	True				
ANR	7237708	EqualityExpression	"strncmp ( arg , ""gray"" , 4 ) == 0"		7237336	0		==			
ANR	7237709	CallExpression	"strncmp ( arg , ""gray"" , 4 )"		7237336	0					
ANR	7237710	Callee	strncmp		7237336	0					
ANR	7237711	Identifier	strncmp		7237336	0					
ANR	7237712	ArgumentList	arg		7237336	1					
ANR	7237713	Argument	arg		7237336	0					
ANR	7237714	Identifier	arg		7237336	0					
ANR	7237715	Argument	"""gray"""		7237336	1					
ANR	7237716	PrimaryExpression	"""gray"""		7237336	0					
ANR	7237717	Argument	4		7237336	2					
ANR	7237718	PrimaryExpression	4		7237336	0					
ANR	7237719	PrimaryExpression	0		7237336	1					
ANR	7237720	CompoundStatement		94:6:1958:1958	7237336	1					
ANR	7237721	IfStatement	if ( arg [ 4 ] == 0 )		7237336	0					
ANR	7237722	Condition	arg [ 4 ] == 0	1773:13:49979:49989	7237336	0	True				
ANR	7237723	EqualityExpression	arg [ 4 ] == 0		7237336	0		==			
ANR	7237724	ArrayIndexing	arg [ 4 ]		7237336	0					
ANR	7237725	Identifier	arg		7237336	0					
ANR	7237726	PrimaryExpression	4		7237336	1					
ANR	7237727	PrimaryExpression	0		7237336	1					
ANR	7237728	CompoundStatement		96:9:1995:1995	7237336	1					
ANR	7237729	ExpressionStatement	color_type = PNG_COLOR_TYPE_GRAY	1775:12:50015:50047	7237336	0	True				
ANR	7237730	AssignmentExpression	color_type = PNG_COLOR_TYPE_GRAY		7237336	0		=			
ANR	7237731	Identifier	color_type		7237336	0					
ANR	7237732	Identifier	PNG_COLOR_TYPE_GRAY		7237336	1					
ANR	7237733	ContinueStatement	continue ;	1776:12:50061:50069	7237336	1	True				
ANR	7237734	ElseStatement	else		7237336	0					
ANR	7237735	IfStatement	"if ( strcmp ( arg + 4 , ""a"" ) == 0 || strcmp ( arg + 4 , ""alpha"" ) == 0 || strcmp ( arg + 4 , ""-alpha"" ) == 0 )"		7237336	0					
ANR	7237736	Condition	"strcmp ( arg + 4 , ""a"" ) == 0 || strcmp ( arg + 4 , ""alpha"" ) == 0 || strcmp ( arg + 4 , ""-alpha"" ) == 0"	1779:18:50101:50210	7237336	0	True				
ANR	7237737	OrExpression	"strcmp ( arg + 4 , ""a"" ) == 0 || strcmp ( arg + 4 , ""alpha"" ) == 0 || strcmp ( arg + 4 , ""-alpha"" ) == 0"		7237336	0		||			
ANR	7237738	EqualityExpression	"strcmp ( arg + 4 , ""a"" ) == 0"		7237336	0		==			
ANR	7237739	CallExpression	"strcmp ( arg + 4 , ""a"" )"		7237336	0					
ANR	7237740	Callee	strcmp		7237336	0					
ANR	7237741	Identifier	strcmp		7237336	0					
ANR	7237742	ArgumentList	arg + 4		7237336	1					
ANR	7237743	Argument	arg + 4		7237336	0					
ANR	7237744	AdditiveExpression	arg + 4		7237336	0		+			
ANR	7237745	Identifier	arg		7237336	0					
ANR	7237746	PrimaryExpression	4		7237336	1					
ANR	7237747	Argument	"""a"""		7237336	1					
ANR	7237748	PrimaryExpression	"""a"""		7237336	0					
ANR	7237749	PrimaryExpression	0		7237336	1					
ANR	7237750	OrExpression	"strcmp ( arg + 4 , ""alpha"" ) == 0 || strcmp ( arg + 4 , ""-alpha"" ) == 0"		7237336	1		||			
ANR	7237751	EqualityExpression	"strcmp ( arg + 4 , ""alpha"" ) == 0"		7237336	0		==			
ANR	7237752	CallExpression	"strcmp ( arg + 4 , ""alpha"" )"		7237336	0					
ANR	7237753	Callee	strcmp		7237336	0					
ANR	7237754	Identifier	strcmp		7237336	0					
ANR	7237755	ArgumentList	arg + 4		7237336	1					
ANR	7237756	Argument	arg + 4		7237336	0					
ANR	7237757	AdditiveExpression	arg + 4		7237336	0		+			
ANR	7237758	Identifier	arg		7237336	0					
ANR	7237759	PrimaryExpression	4		7237336	1					
ANR	7237760	Argument	"""alpha"""		7237336	1					
ANR	7237761	PrimaryExpression	"""alpha"""		7237336	0					
ANR	7237762	PrimaryExpression	0		7237336	1					
ANR	7237763	EqualityExpression	"strcmp ( arg + 4 , ""-alpha"" ) == 0"		7237336	1		==			
ANR	7237764	CallExpression	"strcmp ( arg + 4 , ""-alpha"" )"		7237336	0					
ANR	7237765	Callee	strcmp		7237336	0					
ANR	7237766	Identifier	strcmp		7237336	0					
ANR	7237767	ArgumentList	arg + 4		7237336	1					
ANR	7237768	Argument	arg + 4		7237336	0					
ANR	7237769	AdditiveExpression	arg + 4		7237336	0		+			
ANR	7237770	Identifier	arg		7237336	0					
ANR	7237771	PrimaryExpression	4		7237336	1					
ANR	7237772	Argument	"""-alpha"""		7237336	1					
ANR	7237773	PrimaryExpression	"""-alpha"""		7237336	0					
ANR	7237774	PrimaryExpression	0		7237336	1					
ANR	7237775	CompoundStatement		104:9:2216:2216	7237336	1					
ANR	7237776	ExpressionStatement	color_type = PNG_COLOR_TYPE_GRAY_ALPHA	1783:12:50236:50274	7237336	0	True				
ANR	7237777	AssignmentExpression	color_type = PNG_COLOR_TYPE_GRAY_ALPHA		7237336	0		=			
ANR	7237778	Identifier	color_type		7237336	0					
ANR	7237779	Identifier	PNG_COLOR_TYPE_GRAY_ALPHA		7237336	1					
ANR	7237780	ContinueStatement	continue ;	1784:12:50288:50296	7237336	1	True				
ANR	7237781	IfStatement	"if ( strncmp ( arg , ""rgb"" , 3 ) == 0 )"		7237336	12					
ANR	7237782	Condition	"strncmp ( arg , ""rgb"" , 3 ) == 0"	1788:10:50328:50354	7237336	0	True				
ANR	7237783	EqualityExpression	"strncmp ( arg , ""rgb"" , 3 ) == 0"		7237336	0		==			
ANR	7237784	CallExpression	"strncmp ( arg , ""rgb"" , 3 )"		7237336	0					
ANR	7237785	Callee	strncmp		7237336	0					
ANR	7237786	Identifier	strncmp		7237336	0					
ANR	7237787	ArgumentList	arg		7237336	1					
ANR	7237788	Argument	arg		7237336	0					
ANR	7237789	Identifier	arg		7237336	0					
ANR	7237790	Argument	"""rgb"""		7237336	1					
ANR	7237791	PrimaryExpression	"""rgb"""		7237336	0					
ANR	7237792	Argument	3		7237336	2					
ANR	7237793	PrimaryExpression	3		7237336	0					
ANR	7237794	PrimaryExpression	0		7237336	1					
ANR	7237795	CompoundStatement		111:6:2357:2357	7237336	1					
ANR	7237796	IfStatement	if ( arg [ 3 ] == 0 )		7237336	0					
ANR	7237797	Condition	arg [ 3 ] == 0	1790:13:50378:50388	7237336	0	True				
ANR	7237798	EqualityExpression	arg [ 3 ] == 0		7237336	0		==			
ANR	7237799	ArrayIndexing	arg [ 3 ]		7237336	0					
ANR	7237800	Identifier	arg		7237336	0					
ANR	7237801	PrimaryExpression	3		7237336	1					
ANR	7237802	PrimaryExpression	0		7237336	1					
ANR	7237803	CompoundStatement		113:9:2394:2394	7237336	1					
ANR	7237804	ExpressionStatement	color_type = PNG_COLOR_TYPE_RGB	1792:12:50414:50445	7237336	0	True				
ANR	7237805	AssignmentExpression	color_type = PNG_COLOR_TYPE_RGB		7237336	0		=			
ANR	7237806	Identifier	color_type		7237336	0					
ANR	7237807	Identifier	PNG_COLOR_TYPE_RGB		7237336	1					
ANR	7237808	ContinueStatement	continue ;	1793:12:50459:50467	7237336	1	True				
ANR	7237809	ElseStatement	else		7237336	0					
ANR	7237810	IfStatement	"if ( strcmp ( arg + 3 , ""a"" ) == 0 || strcmp ( arg + 3 , ""alpha"" ) == 0 || strcmp ( arg + 3 , ""-alpha"" ) == 0 )"		7237336	0					
ANR	7237811	Condition	"strcmp ( arg + 3 , ""a"" ) == 0 || strcmp ( arg + 3 , ""alpha"" ) == 0 || strcmp ( arg + 3 , ""-alpha"" ) == 0"	1796:18:50499:50608	7237336	0	True				
ANR	7237812	OrExpression	"strcmp ( arg + 3 , ""a"" ) == 0 || strcmp ( arg + 3 , ""alpha"" ) == 0 || strcmp ( arg + 3 , ""-alpha"" ) == 0"		7237336	0		||			
ANR	7237813	EqualityExpression	"strcmp ( arg + 3 , ""a"" ) == 0"		7237336	0		==			
ANR	7237814	CallExpression	"strcmp ( arg + 3 , ""a"" )"		7237336	0					
ANR	7237815	Callee	strcmp		7237336	0					
ANR	7237816	Identifier	strcmp		7237336	0					
ANR	7237817	ArgumentList	arg + 3		7237336	1					
ANR	7237818	Argument	arg + 3		7237336	0					
ANR	7237819	AdditiveExpression	arg + 3		7237336	0		+			
ANR	7237820	Identifier	arg		7237336	0					
ANR	7237821	PrimaryExpression	3		7237336	1					
ANR	7237822	Argument	"""a"""		7237336	1					
ANR	7237823	PrimaryExpression	"""a"""		7237336	0					
ANR	7237824	PrimaryExpression	0		7237336	1					
ANR	7237825	OrExpression	"strcmp ( arg + 3 , ""alpha"" ) == 0 || strcmp ( arg + 3 , ""-alpha"" ) == 0"		7237336	1		||			
ANR	7237826	EqualityExpression	"strcmp ( arg + 3 , ""alpha"" ) == 0"		7237336	0		==			
ANR	7237827	CallExpression	"strcmp ( arg + 3 , ""alpha"" )"		7237336	0					
ANR	7237828	Callee	strcmp		7237336	0					
ANR	7237829	Identifier	strcmp		7237336	0					
ANR	7237830	ArgumentList	arg + 3		7237336	1					
ANR	7237831	Argument	arg + 3		7237336	0					
ANR	7237832	AdditiveExpression	arg + 3		7237336	0		+			
ANR	7237833	Identifier	arg		7237336	0					
ANR	7237834	PrimaryExpression	3		7237336	1					
ANR	7237835	Argument	"""alpha"""		7237336	1					
ANR	7237836	PrimaryExpression	"""alpha"""		7237336	0					
ANR	7237837	PrimaryExpression	0		7237336	1					
ANR	7237838	EqualityExpression	"strcmp ( arg + 3 , ""-alpha"" ) == 0"		7237336	1		==			
ANR	7237839	CallExpression	"strcmp ( arg + 3 , ""-alpha"" )"		7237336	0					
ANR	7237840	Callee	strcmp		7237336	0					
ANR	7237841	Identifier	strcmp		7237336	0					
ANR	7237842	ArgumentList	arg + 3		7237336	1					
ANR	7237843	Argument	arg + 3		7237336	0					
ANR	7237844	AdditiveExpression	arg + 3		7237336	0		+			
ANR	7237845	Identifier	arg		7237336	0					
ANR	7237846	PrimaryExpression	3		7237336	1					
ANR	7237847	Argument	"""-alpha"""		7237336	1					
ANR	7237848	PrimaryExpression	"""-alpha"""		7237336	0					
ANR	7237849	PrimaryExpression	0		7237336	1					
ANR	7237850	CompoundStatement		121:9:2614:2614	7237336	1					
ANR	7237851	ExpressionStatement	color_type = PNG_COLOR_TYPE_RGB_ALPHA	1800:12:50634:50671	7237336	0	True				
ANR	7237852	AssignmentExpression	color_type = PNG_COLOR_TYPE_RGB_ALPHA		7237336	0		=			
ANR	7237853	Identifier	color_type		7237336	0					
ANR	7237854	Identifier	PNG_COLOR_TYPE_RGB_ALPHA		7237336	1					
ANR	7237855	ContinueStatement	continue ;	1801:12:50685:50693	7237336	1	True				
ANR	7237856	IfStatement	if ( color_type == 8 && isdigit ( arg [ 0 ] ) )		7237336	13					
ANR	7237857	Condition	color_type == 8 && isdigit ( arg [ 0 ] )	1805:10:50725:50758	7237336	0	True				
ANR	7237858	AndExpression	color_type == 8 && isdigit ( arg [ 0 ] )		7237336	0		&&			
ANR	7237859	EqualityExpression	color_type == 8		7237336	0		==			
ANR	7237860	Identifier	color_type		7237336	0					
ANR	7237861	PrimaryExpression	8		7237336	1					
ANR	7237862	CallExpression	isdigit ( arg [ 0 ] )		7237336	1					
ANR	7237863	Callee	isdigit		7237336	0					
ANR	7237864	Identifier	isdigit		7237336	0					
ANR	7237865	ArgumentList	arg [ 0 ]		7237336	1					
ANR	7237866	Argument	arg [ 0 ]		7237336	0					
ANR	7237867	ArrayIndexing	arg [ 0 ]		7237336	0					
ANR	7237868	Identifier	arg		7237336	0					
ANR	7237869	PrimaryExpression	0		7237336	1					
ANR	7237870	CompoundStatement		128:6:2761:2761	7237336	1					
ANR	7237871	ExpressionStatement	color_type = atoi ( arg )	1807:9:50778:50800	7237336	0	True				
ANR	7237872	AssignmentExpression	color_type = atoi ( arg )		7237336	0		=			
ANR	7237873	Identifier	color_type		7237336	0					
ANR	7237874	CallExpression	atoi ( arg )		7237336	1					
ANR	7237875	Callee	atoi		7237336	0					
ANR	7237876	Identifier	atoi		7237336	0					
ANR	7237877	ArgumentList	arg		7237336	1					
ANR	7237878	Argument	arg		7237336	0					
ANR	7237879	Identifier	arg		7237336	0					
ANR	7237880	IfStatement	if ( color_type < 0 || color_type > 6 || color_type == 1 || color_type == 5 )		7237336	1					
ANR	7237881	Condition	color_type < 0 || color_type > 6 || color_type == 1 || color_type == 5	1808:13:50815:50896	7237336	0	True				
ANR	7237882	OrExpression	color_type < 0 || color_type > 6 || color_type == 1 || color_type == 5		7237336	0		||			
ANR	7237883	RelationalExpression	color_type < 0		7237336	0		<			
ANR	7237884	Identifier	color_type		7237336	0					
ANR	7237885	PrimaryExpression	0		7237336	1					
ANR	7237886	OrExpression	color_type > 6 || color_type == 1 || color_type == 5		7237336	1		||			
ANR	7237887	RelationalExpression	color_type > 6		7237336	0		>			
ANR	7237888	Identifier	color_type		7237336	0					
ANR	7237889	PrimaryExpression	6		7237336	1					
ANR	7237890	OrExpression	color_type == 1 || color_type == 5		7237336	1		||			
ANR	7237891	EqualityExpression	color_type == 1		7237336	0		==			
ANR	7237892	Identifier	color_type		7237336	0					
ANR	7237893	PrimaryExpression	1		7237336	1					
ANR	7237894	EqualityExpression	color_type == 5		7237336	1		==			
ANR	7237895	Identifier	color_type		7237336	0					
ANR	7237896	PrimaryExpression	5		7237336	1					
ANR	7237897	CompoundStatement		132:9:2902:2902	7237336	1					
ANR	7237898	ExpressionStatement	"fprintf ( stderr , ""makepng: %s: not a valid color type\\n"" , arg )"	1811:12:50922:50983	7237336	0	True				
ANR	7237899	CallExpression	"fprintf ( stderr , ""makepng: %s: not a valid color type\\n"" , arg )"		7237336	0					
ANR	7237900	Callee	fprintf		7237336	0					
ANR	7237901	Identifier	fprintf		7237336	0					
ANR	7237902	ArgumentList	stderr		7237336	1					
ANR	7237903	Argument	stderr		7237336	0					
ANR	7237904	Identifier	stderr		7237336	0					
ANR	7237905	Argument	"""makepng: %s: not a valid color type\\n"""		7237336	1					
ANR	7237906	PrimaryExpression	"""makepng: %s: not a valid color type\\n"""		7237336	0					
ANR	7237907	Argument	arg		7237336	2					
ANR	7237908	Identifier	arg		7237336	0					
ANR	7237909	ExpressionStatement	exit ( 1 )	1812:12:50997:51004	7237336	1	True				
ANR	7237910	CallExpression	exit ( 1 )		7237336	0					
ANR	7237911	Callee	exit		7237336	0					
ANR	7237912	Identifier	exit		7237336	0					
ANR	7237913	ArgumentList	1		7237336	1					
ANR	7237914	Argument	1		7237336	0					
ANR	7237915	PrimaryExpression	1		7237336	0					
ANR	7237916	ContinueStatement	continue ;	1815:9:51027:51035	7237336	2	True				
ANR	7237917	IfStatement	if ( bit_depth == 32 && isdigit ( arg [ 0 ] ) )		7237336	14					
ANR	7237918	Condition	bit_depth == 32 && isdigit ( arg [ 0 ] )	1818:10:51056:51089	7237336	0	True				
ANR	7237919	AndExpression	bit_depth == 32 && isdigit ( arg [ 0 ] )		7237336	0		&&			
ANR	7237920	EqualityExpression	bit_depth == 32		7237336	0		==			
ANR	7237921	Identifier	bit_depth		7237336	0					
ANR	7237922	PrimaryExpression	32		7237336	1					
ANR	7237923	CallExpression	isdigit ( arg [ 0 ] )		7237336	1					
ANR	7237924	Callee	isdigit		7237336	0					
ANR	7237925	Identifier	isdigit		7237336	0					
ANR	7237926	ArgumentList	arg [ 0 ]		7237336	1					
ANR	7237927	Argument	arg [ 0 ]		7237336	0					
ANR	7237928	ArrayIndexing	arg [ 0 ]		7237336	0					
ANR	7237929	Identifier	arg		7237336	0					
ANR	7237930	PrimaryExpression	0		7237336	1					
ANR	7237931	CompoundStatement		141:6:3092:3092	7237336	1					
ANR	7237932	ExpressionStatement	bit_depth = atoi ( arg )	1820:9:51109:51130	7237336	0	True				
ANR	7237933	AssignmentExpression	bit_depth = atoi ( arg )		7237336	0		=			
ANR	7237934	Identifier	bit_depth		7237336	0					
ANR	7237935	CallExpression	atoi ( arg )		7237336	1					
ANR	7237936	Callee	atoi		7237336	0					
ANR	7237937	Identifier	atoi		7237336	0					
ANR	7237938	ArgumentList	arg		7237336	1					
ANR	7237939	Argument	arg		7237336	0					
ANR	7237940	Identifier	arg		7237336	0					
ANR	7237941	IfStatement	if ( bit_depth <= 0 || bit_depth > 16 || ( bit_depth & - bit_depth ) != bit_depth )		7237336	1					
ANR	7237942	Condition	bit_depth <= 0 || bit_depth > 16 || ( bit_depth & - bit_depth ) != bit_depth	1821:13:51145:51229	7237336	0	True				
ANR	7237943	OrExpression	bit_depth <= 0 || bit_depth > 16 || ( bit_depth & - bit_depth ) != bit_depth		7237336	0		||			
ANR	7237944	RelationalExpression	bit_depth <= 0		7237336	0		<=			
ANR	7237945	Identifier	bit_depth		7237336	0					
ANR	7237946	PrimaryExpression	0		7237336	1					
ANR	7237947	OrExpression	bit_depth > 16 || ( bit_depth & - bit_depth ) != bit_depth		7237336	1		||			
ANR	7237948	RelationalExpression	bit_depth > 16		7237336	0		>			
ANR	7237949	Identifier	bit_depth		7237336	0					
ANR	7237950	PrimaryExpression	16		7237336	1					
ANR	7237951	EqualityExpression	( bit_depth & - bit_depth ) != bit_depth		7237336	1		!=			
ANR	7237952	BitAndExpression	bit_depth & - bit_depth		7237336	0		&			
ANR	7237953	Identifier	bit_depth		7237336	0					
ANR	7237954	UnaryOperationExpression	- bit_depth		7237336	1					
ANR	7237955	UnaryOperator	-		7237336	0					
ANR	7237956	Identifier	bit_depth		7237336	1					
ANR	7237957	Identifier	bit_depth		7237336	1					
ANR	7237958	CompoundStatement		145:9:3235:3235	7237336	1					
ANR	7237959	ExpressionStatement	"fprintf ( stderr , ""makepng: %s: not a valid bit depth\\n"" , arg )"	1824:12:51255:51315	7237336	0	True				
ANR	7237960	CallExpression	"fprintf ( stderr , ""makepng: %s: not a valid bit depth\\n"" , arg )"		7237336	0					
ANR	7237961	Callee	fprintf		7237336	0					
ANR	7237962	Identifier	fprintf		7237336	0					
ANR	7237963	ArgumentList	stderr		7237336	1					
ANR	7237964	Argument	stderr		7237336	0					
ANR	7237965	Identifier	stderr		7237336	0					
ANR	7237966	Argument	"""makepng: %s: not a valid bit depth\\n"""		7237336	1					
ANR	7237967	PrimaryExpression	"""makepng: %s: not a valid bit depth\\n"""		7237336	0					
ANR	7237968	Argument	arg		7237336	2					
ANR	7237969	Identifier	arg		7237336	0					
ANR	7237970	ExpressionStatement	exit ( 1 )	1825:12:51329:51336	7237336	1	True				
ANR	7237971	CallExpression	exit ( 1 )		7237336	0					
ANR	7237972	Callee	exit		7237336	0					
ANR	7237973	Identifier	exit		7237336	0					
ANR	7237974	ArgumentList	1		7237336	1					
ANR	7237975	Argument	1		7237336	0					
ANR	7237976	PrimaryExpression	1		7237336	0					
ANR	7237977	ContinueStatement	continue ;	1828:9:51359:51367	7237336	2	True				
ANR	7237978	IfStatement	if ( argc == 1 )		7237336	15					
ANR	7237979	Condition	argc == 1	1831:10:51388:51396	7237336	0	True				
ANR	7237980	EqualityExpression	argc == 1		7237336	0		==			
ANR	7237981	Identifier	argc		7237336	0					
ANR	7237982	PrimaryExpression	1		7237336	1					
ANR	7237983	CompoundStatement		154:6:3424:3424	7237336	1					
ANR	7237984	ExpressionStatement	"fp = fopen ( arg , ""wb"" )"	1833:9:51441:51462	7237336	0	True				
ANR	7237985	AssignmentExpression	"fp = fopen ( arg , ""wb"" )"		7237336	0		=			
ANR	7237986	Identifier	fp		7237336	0					
ANR	7237987	CallExpression	"fopen ( arg , ""wb"" )"		7237336	1					
ANR	7237988	Callee	fopen		7237336	0					
ANR	7237989	Identifier	fopen		7237336	0					
ANR	7237990	ArgumentList	arg		7237336	1					
ANR	7237991	Argument	arg		7237336	0					
ANR	7237992	Identifier	arg		7237336	0					
ANR	7237993	Argument	"""wb"""		7237336	1					
ANR	7237994	PrimaryExpression	"""wb"""		7237336	0					
ANR	7237995	IfStatement	if ( fp == NULL )		7237336	1					
ANR	7237996	Condition	fp == NULL	1834:13:51477:51486	7237336	0	True				
ANR	7237997	EqualityExpression	fp == NULL		7237336	0		==			
ANR	7237998	Identifier	fp		7237336	0					
ANR	7237999	Identifier	NULL		7237336	1					
ANR	7238000	CompoundStatement		157:9:3492:3492	7237336	1					
ANR	7238001	ExpressionStatement	"fprintf ( stderr , ""%s: %s: could not open\\n"" , arg , strerror ( errno ) )"	1836:12:51512:51577	7237336	0	True				
ANR	7238002	CallExpression	"fprintf ( stderr , ""%s: %s: could not open\\n"" , arg , strerror ( errno ) )"		7237336	0					
ANR	7238003	Callee	fprintf		7237336	0					
ANR	7238004	Identifier	fprintf		7237336	0					
ANR	7238005	ArgumentList	stderr		7237336	1					
ANR	7238006	Argument	stderr		7237336	0					
ANR	7238007	Identifier	stderr		7237336	0					
ANR	7238008	Argument	"""%s: %s: could not open\\n"""		7237336	1					
ANR	7238009	PrimaryExpression	"""%s: %s: could not open\\n"""		7237336	0					
ANR	7238010	Argument	arg		7237336	2					
ANR	7238011	Identifier	arg		7237336	0					
ANR	7238012	Argument	strerror ( errno )		7237336	3					
ANR	7238013	CallExpression	strerror ( errno )		7237336	0					
ANR	7238014	Callee	strerror		7237336	0					
ANR	7238015	Identifier	strerror		7237336	0					
ANR	7238016	ArgumentList	errno		7237336	1					
ANR	7238017	Argument	errno		7237336	0					
ANR	7238018	Identifier	errno		7237336	0					
ANR	7238019	ExpressionStatement	exit ( 1 )	1837:12:51591:51598	7237336	1	True				
ANR	7238020	CallExpression	exit ( 1 )		7237336	0					
ANR	7238021	Callee	exit		7237336	0					
ANR	7238022	Identifier	exit		7237336	0					
ANR	7238023	ArgumentList	1		7237336	1					
ANR	7238024	Argument	1		7237336	0					
ANR	7238025	PrimaryExpression	1		7237336	0					
ANR	7238026	ExpressionStatement	file_name = arg	1840:9:51621:51636	7237336	2	True				
ANR	7238027	AssignmentExpression	file_name = arg		7237336	0		=			
ANR	7238028	Identifier	file_name		7237336	0					
ANR	7238029	Identifier	arg		7237336	1					
ANR	7238030	ContinueStatement	continue ;	1841:9:51647:51655	7237336	3	True				
ANR	7238031	ExpressionStatement	"fprintf ( stderr , ""makepng: %s: unknown argument\\n"" , arg )"	1844:6:51672:51727	7237336	16	True				
ANR	7238032	CallExpression	"fprintf ( stderr , ""makepng: %s: unknown argument\\n"" , arg )"		7237336	0					
ANR	7238033	Callee	fprintf		7237336	0					
ANR	7238034	Identifier	fprintf		7237336	0					
ANR	7238035	ArgumentList	stderr		7237336	1					
ANR	7238036	Argument	stderr		7237336	0					
ANR	7238037	Identifier	stderr		7237336	0					
ANR	7238038	Argument	"""makepng: %s: unknown argument\\n"""		7237336	1					
ANR	7238039	PrimaryExpression	"""makepng: %s: unknown argument\\n"""		7237336	0					
ANR	7238040	Argument	arg		7237336	2					
ANR	7238041	Identifier	arg		7237336	0					
ANR	7238042	ExpressionStatement	exit ( 1 )	1845:6:51735:51742	7237336	17	True				
ANR	7238043	CallExpression	exit ( 1 )		7237336	0					
ANR	7238044	Callee	exit		7237336	0					
ANR	7238045	Identifier	exit		7237336	0					
ANR	7238046	ArgumentList	1		7237336	1					
ANR	7238047	Argument	1		7237336	0					
ANR	7238048	PrimaryExpression	1		7237336	0					
ANR	7238049	IfStatement	if ( color_type == 8 || bit_depth == 32 )		7237336	13					
ANR	7238050	Condition	color_type == 8 || bit_depth == 32	1848:7:51783:51816	7237336	0	True				
ANR	7238051	OrExpression	color_type == 8 || bit_depth == 32		7237336	0		||			
ANR	7238052	EqualityExpression	color_type == 8		7237336	0		==			
ANR	7238053	Identifier	color_type		7237336	0					
ANR	7238054	PrimaryExpression	8		7237336	1					
ANR	7238055	EqualityExpression	bit_depth == 32		7237336	1		==			
ANR	7238056	Identifier	bit_depth		7237336	0					
ANR	7238057	PrimaryExpression	32		7237336	1					
ANR	7238058	CompoundStatement		171:3:3816:3816	7237336	1					
ANR	7238059	Statement	fprintf	1850:6:51830:51836	7237336	0	True				
ANR	7238060	Statement	(	1850:13:51837:51837	7237336	1	True				
ANR	7238061	Statement	stderr	1850:14:51838:51843	7237336	2	True				
ANR	7238062	Statement	","	1850:20:51844:51844	7237336	3	True				
ANR	7238063	Statement	"""usage: makepng [--small] [--sRGB|--linear|--1.8] """	1850:22:51846:51896	7237336	4	True				
ANR	7238064	Statement	"""[--color=...] color-type bit-depth [file-name]\\n"""	1851:9:51907:51956	7237336	5	True				
ANR	7238065	Statement	"""  Make a test PNG file, by default writes to stdout.\\n"""	1852:9:51967:52022	7237336	6	True				
ANR	7238066	Statement	"""  Other options are available, UTSL.\\n"""	1853:9:52033:52072	7237336	7	True				
ANR	7238067	Statement	)	1853:49:52073:52073	7237336	8	True				
ANR	7238068	ExpressionStatement		1853:50:52074:52074	7237336	9	True				
ANR	7238069	ExpressionStatement	exit ( 1 )	1854:6:52082:52089	7237336	10	True				
ANR	7238070	CallExpression	exit ( 1 )		7237336	0					
ANR	7238071	Callee	exit		7237336	0					
ANR	7238072	Identifier	exit		7237336	0					
ANR	7238073	ArgumentList	1		7237336	1					
ANR	7238074	Argument	1		7237336	0					
ANR	7238075	PrimaryExpression	1		7237336	0					
ANR	7238076	CompoundStatement		183:6:4235:4249	7237336	14					
ANR	7238077	IdentifierDeclStatement	const unsigned int lim = ( color_type == PNG_COLOR_TYPE_PALETTE ? 255U : ( 1U << bit_depth ) - 1 ) ;	1859:6:52134:52233	7237336	0	True				
ANR	7238078	IdentifierDecl	lim = ( color_type == PNG_COLOR_TYPE_PALETTE ? 255U : ( 1U << bit_depth ) - 1 )		7237336	0					
ANR	7238079	IdentifierDeclType	const unsigned int		7237336	0					
ANR	7238080	Identifier	lim		7237336	1					
ANR	7238081	AssignmentExpression	lim = ( color_type == PNG_COLOR_TYPE_PALETTE ? 255U : ( 1U << bit_depth ) - 1 )		7237336	2		=			
ANR	7238082	Identifier	lim		7237336	0					
ANR	7238083	ConditionalExpression	color_type == PNG_COLOR_TYPE_PALETTE ? 255U : ( 1U << bit_depth ) - 1		7237336	1					
ANR	7238084	Condition	color_type == PNG_COLOR_TYPE_PALETTE		7237336	0					
ANR	7238085	EqualityExpression	color_type == PNG_COLOR_TYPE_PALETTE		7237336	0		==			
ANR	7238086	Identifier	color_type		7237336	0					
ANR	7238087	Identifier	PNG_COLOR_TYPE_PALETTE		7237336	1					
ANR	7238088	PrimaryExpression	255U		7237336	1					
ANR	7238089	AdditiveExpression	( 1U << bit_depth ) - 1		7237336	2		-			
ANR	7238090	ShiftExpression	1U << bit_depth		7237336	0		<<			
ANR	7238091	PrimaryExpression	1U		7237336	0					
ANR	7238092	Identifier	bit_depth		7237336	1					
ANR	7238093	PrimaryExpression	1		7237336	1					
ANR	7238094	IdentifierDeclStatement	unsigned int i ;	1861:6:52241:52255	7237336	1	True				
ANR	7238095	IdentifierDecl	i		7237336	0					
ANR	7238096	IdentifierDeclType	unsigned int		7237336	0					
ANR	7238097	Identifier	i		7237336	1					
ANR	7238098	ForStatement	for ( i = 1 ; i <= colors [ 0 ] ; ++ i )		7237336	2					
ANR	7238099	ForInit	i = 1 ;	1863:11:52269:52272	7237336	0	True				
ANR	7238100	AssignmentExpression	i = 1		7237336	0		=			
ANR	7238101	Identifier	i		7237336	0					
ANR	7238102	PrimaryExpression	1		7237336	1					
ANR	7238103	Condition	i <= colors [ 0 ]	1863:16:52274:52285	7237336	1	True				
ANR	7238104	RelationalExpression	i <= colors [ 0 ]		7237336	0		<=			
ANR	7238105	Identifier	i		7237336	0					
ANR	7238106	ArrayIndexing	colors [ 0 ]		7237336	1					
ANR	7238107	Identifier	colors		7237336	0					
ANR	7238108	PrimaryExpression	0		7237336	1					
ANR	7238109	UnaryExpression	++ i	1863:30:52288:52290	7237336	2	True				
ANR	7238110	IncDec	++		7237336	0					
ANR	7238111	Identifier	i		7237336	1					
ANR	7238112	IfStatement	if ( colors [ i ] > lim )		7237336	3					
ANR	7238113	Condition	colors [ i ] > lim	1864:13:52306:52320	7237336	0	True				
ANR	7238114	RelationalExpression	colors [ i ] > lim		7237336	0		>			
ANR	7238115	ArrayIndexing	colors [ i ]		7237336	0					
ANR	7238116	Identifier	colors		7237336	0					
ANR	7238117	Identifier	i		7237336	1					
ANR	7238118	Identifier	lim		7237336	1					
ANR	7238119	CompoundStatement		187:9:4326:4326	7237336	1					
ANR	7238120	ExpressionStatement	"fprintf ( stderr , ""makepng: --color=...: %u out of range [0..%u]\\n"" , colors [ i ] , lim )"	1866:12:52346:52443	7237336	0	True				
ANR	7238121	CallExpression	"fprintf ( stderr , ""makepng: --color=...: %u out of range [0..%u]\\n"" , colors [ i ] , lim )"		7237336	0					
ANR	7238122	Callee	fprintf		7237336	0					
ANR	7238123	Identifier	fprintf		7237336	0					
ANR	7238124	ArgumentList	stderr		7237336	1					
ANR	7238125	Argument	stderr		7237336	0					
ANR	7238126	Identifier	stderr		7237336	0					
ANR	7238127	Argument	"""makepng: --color=...: %u out of range [0..%u]\\n"""		7237336	1					
ANR	7238128	PrimaryExpression	"""makepng: --color=...: %u out of range [0..%u]\\n"""		7237336	0					
ANR	7238129	Argument	colors [ i ]		7237336	2					
ANR	7238130	ArrayIndexing	colors [ i ]		7237336	0					
ANR	7238131	Identifier	colors		7237336	0					
ANR	7238132	Identifier	i		7237336	1					
ANR	7238133	Argument	lim		7237336	3					
ANR	7238134	Identifier	lim		7237336	0					
ANR	7238135	ExpressionStatement	exit ( 1 )	1868:12:52457:52464	7237336	1	True				
ANR	7238136	CallExpression	exit ( 1 )		7237336	0					
ANR	7238137	Callee	exit		7237336	0					
ANR	7238138	Identifier	exit		7237336	0					
ANR	7238139	ArgumentList	1		7237336	1					
ANR	7238140	Argument	1		7237336	0					
ANR	7238141	PrimaryExpression	1		7237336	0					
ANR	7238142	IfStatement	if ( small && colors [ 0 ] != 0 )		7237336	15					
ANR	7238143	Condition	small && colors [ 0 ] != 0	1875:7:52600:52622	7237336	0	True				
ANR	7238144	AndExpression	small && colors [ 0 ] != 0		7237336	0		&&			
ANR	7238145	Identifier	small		7237336	0					
ANR	7238146	EqualityExpression	colors [ 0 ] != 0		7237336	1		!=			
ANR	7238147	ArrayIndexing	colors [ 0 ]		7237336	0					
ANR	7238148	Identifier	colors		7237336	0					
ANR	7238149	PrimaryExpression	0		7237336	1					
ANR	7238150	PrimaryExpression	0		7237336	1					
ANR	7238151	CompoundStatement		198:3:4622:4622	7237336	1					
ANR	7238152	ExpressionStatement	"fprintf ( stderr , ""makepng: --color --small: only one at a time!\\n"" )"	1877:6:52636:52702	7237336	0	True				
ANR	7238153	CallExpression	"fprintf ( stderr , ""makepng: --color --small: only one at a time!\\n"" )"		7237336	0					
ANR	7238154	Callee	fprintf		7237336	0					
ANR	7238155	Identifier	fprintf		7237336	0					
ANR	7238156	ArgumentList	stderr		7237336	1					
ANR	7238157	Argument	stderr		7237336	0					
ANR	7238158	Identifier	stderr		7237336	0					
ANR	7238159	Argument	"""makepng: --color --small: only one at a time!\\n"""		7237336	1					
ANR	7238160	PrimaryExpression	"""makepng: --color --small: only one at a time!\\n"""		7237336	0					
ANR	7238161	ExpressionStatement	exit ( 1 )	1878:6:52710:52717	7237336	1	True				
ANR	7238162	CallExpression	exit ( 1 )		7237336	0					
ANR	7238163	Callee	exit		7237336	0					
ANR	7238164	Identifier	exit		7237336	0					
ANR	7238165	ArgumentList	1		7237336	1					
ANR	7238166	Argument	1		7237336	0					
ANR	7238167	PrimaryExpression	1		7237336	0					
ANR	7238168	IfStatement	if ( filters == PNG_ALL_FILTERS && ! small )		7237336	16					
ANR	7238169	Condition	filters == PNG_ALL_FILTERS && ! small	1884:7:52839:52874	7237336	0	True				
ANR	7238170	AndExpression	filters == PNG_ALL_FILTERS && ! small		7237336	0		&&			
ANR	7238171	EqualityExpression	filters == PNG_ALL_FILTERS		7237336	0		==			
ANR	7238172	Identifier	filters		7237336	0					
ANR	7238173	Identifier	PNG_ALL_FILTERS		7237336	1					
ANR	7238174	UnaryOperationExpression	! small		7237336	1					
ANR	7238175	UnaryOperator	!		7237336	0					
ANR	7238176	Identifier	small		7237336	1					
ANR	7238177	CompoundStatement		207:3:4901:4901	7237336	1					
ANR	7238178	IfStatement	if ( ( color_type & PNG_COLOR_MASK_PALETTE ) != 0 || bit_depth < 8 )		7237336	0					
ANR	7238179	Condition	( color_type & PNG_COLOR_MASK_PALETTE ) != 0 || bit_depth < 8	1886:10:52919:52977	7237336	0	True				
ANR	7238180	OrExpression	( color_type & PNG_COLOR_MASK_PALETTE ) != 0 || bit_depth < 8		7237336	0		||			
ANR	7238181	EqualityExpression	( color_type & PNG_COLOR_MASK_PALETTE ) != 0		7237336	0		!=			
ANR	7238182	BitAndExpression	color_type & PNG_COLOR_MASK_PALETTE		7237336	0		&			
ANR	7238183	Identifier	color_type		7237336	0					
ANR	7238184	Identifier	PNG_COLOR_MASK_PALETTE		7237336	1					
ANR	7238185	PrimaryExpression	0		7237336	1					
ANR	7238186	RelationalExpression	bit_depth < 8		7237336	1		<			
ANR	7238187	Identifier	bit_depth		7237336	0					
ANR	7238188	PrimaryExpression	8		7237336	1					
ANR	7238189	ExpressionStatement	filters = PNG_FILTER_NONE	1887:9:52989:53014	7237336	1	True				
ANR	7238190	AssignmentExpression	filters = PNG_FILTER_NONE		7237336	0		=			
ANR	7238191	Identifier	filters		7237336	0					
ANR	7238192	Identifier	PNG_FILTER_NONE		7237336	1					
ANR	7238193	ElseStatement	else		7237336	0					
ANR	7238194	IfStatement	if ( color_type & PNG_COLOR_MASK_COLOR )		7237336	0					
ANR	7238195	Condition	color_type & PNG_COLOR_MASK_COLOR	1889:15:53032:53064	7237336	0	True				
ANR	7238196	BitAndExpression	color_type & PNG_COLOR_MASK_COLOR		7237336	0		&			
ANR	7238197	Identifier	color_type		7237336	0					
ANR	7238198	Identifier	PNG_COLOR_MASK_COLOR		7237336	1					
ANR	7238199	CompoundStatement		212:6:5077:5077	7237336	1					
ANR	7238200	IfStatement	if ( bit_depth == 8 )		7237336	0					
ANR	7238201	Condition	bit_depth == 8	1891:13:53098:53111	7237336	0	True				
ANR	7238202	EqualityExpression	bit_depth == 8		7237336	0		==			
ANR	7238203	Identifier	bit_depth		7237336	0					
ANR	7238204	PrimaryExpression	8		7237336	1					
ANR	7238205	ExpressionStatement	filters &= ~ ( PNG_FILTER_NONE | PNG_FILTER_AVG )	1892:12:53126:53172	7237336	1	True				
ANR	7238206	AssignmentExpression	filters &= ~ ( PNG_FILTER_NONE | PNG_FILTER_AVG )		7237336	0		&=			
ANR	7238207	Identifier	filters		7237336	0					
ANR	7238208	UnaryOperationExpression	~ ( PNG_FILTER_NONE | PNG_FILTER_AVG )		7237336	1					
ANR	7238209	UnaryOperator	~		7237336	0					
ANR	7238210	InclusiveOrExpression	PNG_FILTER_NONE | PNG_FILTER_AVG		7237336	1		|			
ANR	7238211	Identifier	PNG_FILTER_NONE		7237336	0					
ANR	7238212	Identifier	PNG_FILTER_AVG		7237336	1					
ANR	7238213	ElseStatement	else		7237336	0					
ANR	7238214	ExpressionStatement	filters = PNG_FILTER_SUB | PNG_FILTER_PAETH	1895:12:53201:53244	7237336	0	True				
ANR	7238215	AssignmentExpression	filters = PNG_FILTER_SUB | PNG_FILTER_PAETH		7237336	0		=			
ANR	7238216	Identifier	filters		7237336	0					
ANR	7238217	InclusiveOrExpression	PNG_FILTER_SUB | PNG_FILTER_PAETH		7237336	1		|			
ANR	7238218	Identifier	PNG_FILTER_SUB		7237336	0					
ANR	7238219	Identifier	PNG_FILTER_PAETH		7237336	1					
ANR	7238220	ElseStatement	else		7237336	0					
ANR	7238221	ExpressionStatement	filters &= ~PNG_FILTER_NONE	1899:9:53298:53325	7237336	0	True				
ANR	7238222	AssignmentExpression	filters &= ~PNG_FILTER_NONE		7237336	0		&=			
ANR	7238223	Identifier	filters		7237336	0					
ANR	7238224	Identifier	~PNG_FILTER_NONE		7237336	1					
ANR	7238225	CompoundStatement		237:6:5616:5640	7237336	17					
ANR	7238226	Statement	static	1904:6:53397:53402	7237336	0	True				
ANR	7238227	IdentifierDeclStatement	"png_const_charp copyright [ ] = { COPYRIGHT , NULL } ;"	1904:13:53404:53501	7237336	1	True				
ANR	7238228	IdentifierDecl	"copyright [ ] = { COPYRIGHT , NULL }"		7237336	0					
ANR	7238229	IdentifierDeclType	png_const_charp [ ]		7237336	0					
ANR	7238230	Identifier	copyright		7237336	1					
ANR	7238231	AssignmentExpression	"copyright [ ] = { COPYRIGHT , NULL }"		7237336	2		=			
ANR	7238232	Identifier	copyright		7237336	0					
ANR	7238233	InitializerList	COPYRIGHT		7237336	1					
ANR	7238234	Identifier	COPYRIGHT		7237336	0					
ANR	7238235	Identifier	NULL		7237336	1					
ANR	7238236	Statement	static	1909:6:53509:53514	7237336	2	True				
ANR	7238237	IdentifierDeclStatement	"png_const_charp licensing [ ] = { IMAGE_LICENSING , NULL } ;"	1909:13:53516:53613	7237336	3	True				
ANR	7238238	IdentifierDecl	"licensing [ ] = { IMAGE_LICENSING , NULL }"		7237336	0					
ANR	7238239	IdentifierDeclType	png_const_charp [ ]		7237336	0					
ANR	7238240	Identifier	licensing		7237336	1					
ANR	7238241	AssignmentExpression	"licensing [ ] = { IMAGE_LICENSING , NULL }"		7237336	2		=			
ANR	7238242	Identifier	licensing		7237336	0					
ANR	7238243	InitializerList	IMAGE_LICENSING		7237336	1					
ANR	7238244	Identifier	IMAGE_LICENSING		7237336	0					
ANR	7238245	Identifier	NULL		7237336	1					
ANR	7238246	IdentifierDeclStatement	chunk_insert * new_insert ;	1915:6:53622:53646	7237336	4	True				
ANR	7238247	IdentifierDecl	* new_insert		7237336	0					
ANR	7238248	IdentifierDeclType	chunk_insert *		7237336	0					
ANR	7238249	Identifier	new_insert		7237336	1					
ANR	7238250	ExpressionStatement	"new_insert = add_tEXt ( ""Copyright"" , copyright )"	1917:6:53655:53700	7237336	5	True				
ANR	7238251	AssignmentExpression	"new_insert = add_tEXt ( ""Copyright"" , copyright )"		7237336	0		=			
ANR	7238252	Identifier	new_insert		7237336	0					
ANR	7238253	CallExpression	"add_tEXt ( ""Copyright"" , copyright )"		7237336	1					
ANR	7238254	Callee	add_tEXt		7237336	0					
ANR	7238255	Identifier	add_tEXt		7237336	0					
ANR	7238256	ArgumentList	"""Copyright"""		7237336	1					
ANR	7238257	Argument	"""Copyright"""		7237336	0					
ANR	7238258	PrimaryExpression	"""Copyright"""		7237336	0					
ANR	7238259	Argument	copyright		7237336	1					
ANR	7238260	Identifier	copyright		7237336	0					
ANR	7238261	IfStatement	if ( new_insert != NULL )		7237336	6					
ANR	7238262	Condition	new_insert != NULL	1918:10:53712:53729	7237336	0	True				
ANR	7238263	EqualityExpression	new_insert != NULL		7237336	0		!=			
ANR	7238264	Identifier	new_insert		7237336	0					
ANR	7238265	Identifier	NULL		7237336	1					
ANR	7238266	CompoundStatement		241:6:5732:5732	7237336	1					
ANR	7238267	ExpressionStatement	* insert_ptr = new_insert	1920:9:53749:53773	7237336	0	True				
ANR	7238268	AssignmentExpression	* insert_ptr = new_insert		7237336	0		=			
ANR	7238269	UnaryOperationExpression	* insert_ptr		7237336	0					
ANR	7238270	UnaryOperator	*		7237336	0					
ANR	7238271	Identifier	insert_ptr		7237336	1					
ANR	7238272	Identifier	new_insert		7237336	1					
ANR	7238273	ExpressionStatement	insert_ptr = & new_insert -> next	1921:9:53784:53814	7237336	1	True				
ANR	7238274	AssignmentExpression	insert_ptr = & new_insert -> next		7237336	0		=			
ANR	7238275	Identifier	insert_ptr		7237336	0					
ANR	7238276	UnaryOperationExpression	& new_insert -> next		7237336	1					
ANR	7238277	UnaryOperator	&		7237336	0					
ANR	7238278	PtrMemberAccess	new_insert -> next		7237336	1					
ANR	7238279	Identifier	new_insert		7237336	0					
ANR	7238280	Identifier	next		7237336	1					
ANR	7238281	ExpressionStatement	"new_insert = add_iTXt ( ""Licensing"" , ""en"" , NULL , licensing )"	1924:6:53831:53888	7237336	7	True				
ANR	7238282	AssignmentExpression	"new_insert = add_iTXt ( ""Licensing"" , ""en"" , NULL , licensing )"		7237336	0		=			
ANR	7238283	Identifier	new_insert		7237336	0					
ANR	7238284	CallExpression	"add_iTXt ( ""Licensing"" , ""en"" , NULL , licensing )"		7237336	1					
ANR	7238285	Callee	add_iTXt		7237336	0					
ANR	7238286	Identifier	add_iTXt		7237336	0					
ANR	7238287	ArgumentList	"""Licensing"""		7237336	1					
ANR	7238288	Argument	"""Licensing"""		7237336	0					
ANR	7238289	PrimaryExpression	"""Licensing"""		7237336	0					
ANR	7238290	Argument	"""en"""		7237336	1					
ANR	7238291	PrimaryExpression	"""en"""		7237336	0					
ANR	7238292	Argument	NULL		7237336	2					
ANR	7238293	Identifier	NULL		7237336	0					
ANR	7238294	Argument	licensing		7237336	3					
ANR	7238295	Identifier	licensing		7237336	0					
ANR	7238296	IfStatement	if ( new_insert != NULL )		7237336	8					
ANR	7238297	Condition	new_insert != NULL	1925:10:53900:53917	7237336	0	True				
ANR	7238298	EqualityExpression	new_insert != NULL		7237336	0		!=			
ANR	7238299	Identifier	new_insert		7237336	0					
ANR	7238300	Identifier	NULL		7237336	1					
ANR	7238301	CompoundStatement		248:6:5920:5920	7237336	1					
ANR	7238302	ExpressionStatement	* insert_ptr = new_insert	1927:9:53937:53961	7237336	0	True				
ANR	7238303	AssignmentExpression	* insert_ptr = new_insert		7237336	0		=			
ANR	7238304	UnaryOperationExpression	* insert_ptr		7237336	0					
ANR	7238305	UnaryOperator	*		7237336	0					
ANR	7238306	Identifier	insert_ptr		7237336	1					
ANR	7238307	Identifier	new_insert		7237336	1					
ANR	7238308	ExpressionStatement	insert_ptr = & new_insert -> next	1928:9:53972:54002	7237336	1	True				
ANR	7238309	AssignmentExpression	insert_ptr = & new_insert -> next		7237336	0		=			
ANR	7238310	Identifier	insert_ptr		7237336	0					
ANR	7238311	UnaryOperationExpression	& new_insert -> next		7237336	1					
ANR	7238312	UnaryOperator	&		7237336	0					
ANR	7238313	PtrMemberAccess	new_insert -> next		7237336	1					
ANR	7238314	Identifier	new_insert		7237336	0					
ANR	7238315	Identifier	next		7237336	1					
ANR	7238316	CompoundStatement		255:6:6023:6140	7237336	18					
ANR	7238317	IdentifierDeclStatement	"int ret = write_png ( & file_name , fp , color_type , bit_depth , gamma , head_insert , filters , colors , small , tRNS ) ;"	1933:6:54029:54146	7237336	0	True				
ANR	7238318	IdentifierDecl	"ret = write_png ( & file_name , fp , color_type , bit_depth , gamma , head_insert , filters , colors , small , tRNS )"		7237336	0					
ANR	7238319	IdentifierDeclType	int		7237336	0					
ANR	7238320	Identifier	ret		7237336	1					
ANR	7238321	AssignmentExpression	"ret = write_png ( & file_name , fp , color_type , bit_depth , gamma , head_insert , filters , colors , small , tRNS )"		7237336	2		=			
ANR	7238322	Identifier	ret		7237336	0					
ANR	7238323	CallExpression	"write_png ( & file_name , fp , color_type , bit_depth , gamma , head_insert , filters , colors , small , tRNS )"		7237336	1					
ANR	7238324	Callee	write_png		7237336	0					
ANR	7238325	Identifier	write_png		7237336	0					
ANR	7238326	ArgumentList	& file_name		7237336	1					
ANR	7238327	Argument	& file_name		7237336	0					
ANR	7238328	UnaryOperationExpression	& file_name		7237336	0					
ANR	7238329	UnaryOperator	&		7237336	0					
ANR	7238330	Identifier	file_name		7237336	1					
ANR	7238331	Argument	fp		7237336	1					
ANR	7238332	Identifier	fp		7237336	0					
ANR	7238333	Argument	color_type		7237336	2					
ANR	7238334	Identifier	color_type		7237336	0					
ANR	7238335	Argument	bit_depth		7237336	3					
ANR	7238336	Identifier	bit_depth		7237336	0					
ANR	7238337	Argument	gamma		7237336	4					
ANR	7238338	Identifier	gamma		7237336	0					
ANR	7238339	Argument	head_insert		7237336	5					
ANR	7238340	Identifier	head_insert		7237336	0					
ANR	7238341	Argument	filters		7237336	6					
ANR	7238342	Identifier	filters		7237336	0					
ANR	7238343	Argument	colors		7237336	7					
ANR	7238344	Identifier	colors		7237336	0					
ANR	7238345	Argument	small		7237336	8					
ANR	7238346	Identifier	small		7237336	0					
ANR	7238347	Argument	tRNS		7237336	9					
ANR	7238348	Identifier	tRNS		7237336	0					
ANR	7238349	IfStatement	if ( ret != 0 && file_name != NULL )		7237336	1					
ANR	7238350	Condition	ret != 0 && file_name != NULL	1936:10:54159:54187	7237336	0	True				
ANR	7238351	AndExpression	ret != 0 && file_name != NULL		7237336	0		&&			
ANR	7238352	EqualityExpression	ret != 0		7237336	0		!=			
ANR	7238353	Identifier	ret		7237336	0					
ANR	7238354	PrimaryExpression	0		7237336	1					
ANR	7238355	EqualityExpression	file_name != NULL		7237336	1		!=			
ANR	7238356	Identifier	file_name		7237336	0					
ANR	7238357	Identifier	NULL		7237336	1					
ANR	7238358	ExpressionStatement	remove ( file_name )	1937:9:54199:54216	7237336	1	True				
ANR	7238359	CallExpression	remove ( file_name )		7237336	0					
ANR	7238360	Callee	remove		7237336	0					
ANR	7238361	Identifier	remove		7237336	0					
ANR	7238362	ArgumentList	file_name		7237336	1					
ANR	7238363	Argument	file_name		7237336	0					
ANR	7238364	Identifier	file_name		7237336	0					
ANR	7238365	ReturnStatement	return ret ;	1939:6:54225:54235	7237336	2	True				
ANR	7238366	Identifier	ret		7237336	0					
ANR	7238367	ReturnType	int		7237336	1					
ANR	7238368	Identifier	main		7237336	2					
ANR	7238369	ParameterList	"int argc , char * * argv"		7237336	3					
ANR	7238370	Parameter	int argc	1678:5:47982:47989	7237336	0	True				
ANR	7238371	ParameterType	int		7237336	0					
ANR	7238372	Identifier	argc		7237336	1					
ANR	7238373	Parameter	char * * argv	1678:15:47992:48002	7237336	1	True				
ANR	7238374	ParameterType	char * *		7237336	0					
ANR	7238375	Identifier	argv		7237336	1					
ANR	7238376	CFGEntryNode	ENTRY		7237336		True				
ANR	7238377	CFGExitNode	EXIT		7237336		True				
ANR	7238378	Symbol	small		7237336						
ANR	7238379	Symbol	copyright		7237336						
ANR	7238380	Symbol	find_insert		7237336						
ANR	7238381	Symbol	stdout		7237336						
ANR	7238382	Symbol	PNG_FILTER_SUB		7237336						
ANR	7238383	Symbol	* argv		7237336						
ANR	7238384	Symbol	~PNG_FILTER_NONE		7237336						
ANR	7238385	Symbol	strncmp		7237336						
ANR	7238386	Symbol	lim		7237336						
ANR	7238387	Symbol	add_iTXt		7237336						
ANR	7238388	Symbol	tRNS		7237336						
ANR	7238389	Symbol	PNG_COLOR_MASK_PALETTE		7237336						
ANR	7238390	Symbol	PNG_FILTER_NONE		7237336						
ANR	7238391	Symbol	isdigit		7237336						
ANR	7238392	Symbol	strcmp		7237336						
ANR	7238393	Symbol	ret		7237336						
ANR	7238394	Symbol	errno		7237336						
ANR	7238395	Symbol	NULL		7237336						
ANR	7238396	Symbol	new_insert		7237336						
ANR	7238397	Symbol	PNG_FILTER_AVG		7237336						
ANR	7238398	Symbol	stderr		7237336						
ANR	7238399	Symbol	PNG_GAMMA_MAC_18		7237336						
ANR	7238400	Symbol	& head_insert		7237336						
ANR	7238401	Symbol	strerror		7237336						
ANR	7238402	Symbol	IMAGE_LICENSING		7237336						
ANR	7238403	Symbol	bit_depth		7237336						
ANR	7238404	Symbol	* arg		7237336						
ANR	7238405	Symbol	PNG_COLOR_TYPE_RGB		7237336						
ANR	7238406	Symbol	PNG_COLOR_TYPE_GRAY		7237336						
ANR	7238407	Symbol	color_type		7237336						
ANR	7238408	Symbol	* insert_ptr		7237336						
ANR	7238409	Symbol	fp		7237336						
ANR	7238410	Symbol	argv		7237336						
ANR	7238411	Symbol	colors		7237336						
ANR	7238412	Symbol	* colors		7237336						
ANR	7238413	Symbol	PNG_COLOR_TYPE_RGB_ALPHA		7237336						
ANR	7238414	Symbol	param		7237336						
ANR	7238415	Symbol	arg		7237336						
ANR	7238416	Symbol	& file_name		7237336						
ANR	7238417	Symbol	add_tEXt		7237336						
ANR	7238418	Symbol	head_insert		7237336						
ANR	7238419	Symbol	licensing		7237336						
ANR	7238420	Symbol	argc		7237336						
ANR	7238421	Symbol	atoi		7237336						
ANR	7238422	Symbol	fopen		7237336						
ANR	7238423	Symbol	PNG_ALL_FILTERS		7237336						
ANR	7238424	Symbol	PNG_COLOR_TYPE_GRAY_ALPHA		7237336						
ANR	7238425	Symbol	file_name		7237336						
ANR	7238426	Symbol	PNG_FILTER_PAETH		7237336						
ANR	7238427	Symbol	i		7237336						
ANR	7238428	Symbol	PNG_COLOR_MASK_COLOR		7237336						
ANR	7238429	Symbol	filters		7237336						
ANR	7238430	Symbol	PNG_DEFAULT_sRGB		7237336						
ANR	7238431	Symbol	& new_insert -> next		7237336						
ANR	7238432	Symbol	insert_ptr		7237336						
ANR	7238433	Symbol	what		7237336						
ANR	7238434	Symbol	* i		7237336						
ANR	7238435	Symbol	PNG_FP_1		7237336						
ANR	7238436	Symbol	* ++ argv		7237336						
ANR	7238437	Symbol	COPYRIGHT		7237336						
ANR	7238438	Symbol	write_png		7237336						
ANR	7238439	Symbol	gamma		7237336						
ANR	7238440	Symbol	PNG_COLOR_TYPE_PALETTE		7237336						
