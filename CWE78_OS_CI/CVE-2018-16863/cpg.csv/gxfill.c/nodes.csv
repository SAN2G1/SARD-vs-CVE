command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5595257	File	data/converged/CVE-2018-16863_ghostpdl/gxfill.c								
ANR	5595258	DeclStmt									
ANR	5595259	Decl							stats_fill_t	stats_fill_t	stats_fill
ANR	5595260	Function	x_order	107:0:3787:5251							
ANR	5595261	FunctionDef	"x_order (const active_line * lp1 , const active_line * lp2)"		5595260	0					
ANR	5595262	CompoundStatement		109:0:3854:5251	5595260	0					
ANR	5595263	IdentifierDeclStatement	bool s1 ;	110:4:3860:3867	5595260	0	True				
ANR	5595264	IdentifierDecl	s1		5595260	0					
ANR	5595265	IdentifierDeclType	bool		5595260	0					
ANR	5595266	Identifier	s1		5595260	1					
ANR	5595267	ExpressionStatement	INCR ( order )	112:4:3874:3885	5595260	1	True				
ANR	5595268	CallExpression	INCR ( order )		5595260	0					
ANR	5595269	Callee	INCR		5595260	0					
ANR	5595270	Identifier	INCR		5595260	0					
ANR	5595271	ArgumentList	order		5595260	1					
ANR	5595272	Argument	order		5595260	0					
ANR	5595273	Identifier	order		5595260	0					
ANR	5595274	IfStatement	if ( ! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current )		5595260	2					
ANR	5595275	Condition	! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current	113:8:3895:3941	5595260	0	True				
ANR	5595276	OrExpression	! lp1 || ! lp2 || lp1 -> x_current < lp2 -> x_current		5595260	0		||			
ANR	5595277	UnaryOperationExpression	! lp1		5595260	0					
ANR	5595278	UnaryOperator	!		5595260	0					
ANR	5595279	Identifier	lp1		5595260	1					
ANR	5595280	OrExpression	! lp2 || lp1 -> x_current < lp2 -> x_current		5595260	1		||			
ANR	5595281	UnaryOperationExpression	! lp2		5595260	0					
ANR	5595282	UnaryOperator	!		5595260	0					
ANR	5595283	Identifier	lp2		5595260	1					
ANR	5595284	RelationalExpression	lp1 -> x_current < lp2 -> x_current		5595260	1		<			
ANR	5595285	PtrMemberAccess	lp1 -> x_current		5595260	0					
ANR	5595286	Identifier	lp1		5595260	0					
ANR	5595287	Identifier	x_current		5595260	1					
ANR	5595288	PtrMemberAccess	lp2 -> x_current		5595260	1					
ANR	5595289	Identifier	lp2		5595260	0					
ANR	5595290	Identifier	x_current		5595260	1					
ANR	5595291	ReturnStatement	return - 1 ;	114:8:3952:3961	5595260	1	True				
ANR	5595292	UnaryOperationExpression	- 1		5595260	0					
ANR	5595293	UnaryOperator	-		5595260	0					
ANR	5595294	PrimaryExpression	1		5595260	1					
ANR	5595295	ElseStatement	else		5595260	0					
ANR	5595296	IfStatement	if ( lp1 -> x_current > lp2 -> x_current )		5595260	0					
ANR	5595297	Condition	lp1 -> x_current > lp2 -> x_current	115:13:3976:4006	5595260	0	True				
ANR	5595298	RelationalExpression	lp1 -> x_current > lp2 -> x_current		5595260	0		>			
ANR	5595299	PtrMemberAccess	lp1 -> x_current		5595260	0					
ANR	5595300	Identifier	lp1		5595260	0					
ANR	5595301	Identifier	x_current		5595260	1					
ANR	5595302	PtrMemberAccess	lp2 -> x_current		5595260	1					
ANR	5595303	Identifier	lp2		5595260	0					
ANR	5595304	Identifier	x_current		5595260	1					
ANR	5595305	ReturnStatement	return 1 ;	116:8:4017:4025	5595260	1	True				
ANR	5595306	PrimaryExpression	1		5595260	0					
ANR	5595307	IfStatement	if ( ( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x ) )		5595260	3					
ANR	5595308	Condition	( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x )	121:8:4180:4242	5595260	0	True				
ANR	5595309	EqualityExpression	( s1 = lp1 -> start . x < lp1 -> end . x ) != ( lp2 -> start . x < lp2 -> end . x )		5595260	0		!=			
ANR	5595310	AssignmentExpression	s1 = lp1 -> start . x < lp1 -> end . x		5595260	0		=			
ANR	5595311	Identifier	s1		5595260	0					
ANR	5595312	RelationalExpression	lp1 -> start . x < lp1 -> end . x		5595260	1		<			
ANR	5595313	MemberAccess	lp1 -> start . x		5595260	0					
ANR	5595314	PtrMemberAccess	lp1 -> start		5595260	0					
ANR	5595315	Identifier	lp1		5595260	0					
ANR	5595316	Identifier	start		5595260	1					
ANR	5595317	Identifier	x		5595260	1					
ANR	5595318	MemberAccess	lp1 -> end . x		5595260	1					
ANR	5595319	PtrMemberAccess	lp1 -> end		5595260	0					
ANR	5595320	Identifier	lp1		5595260	0					
ANR	5595321	Identifier	end		5595260	1					
ANR	5595322	Identifier	x		5595260	1					
ANR	5595323	RelationalExpression	lp2 -> start . x < lp2 -> end . x		5595260	1		<			
ANR	5595324	MemberAccess	lp2 -> start . x		5595260	0					
ANR	5595325	PtrMemberAccess	lp2 -> start		5595260	0					
ANR	5595326	Identifier	lp2		5595260	0					
ANR	5595327	Identifier	start		5595260	1					
ANR	5595328	Identifier	x		5595260	1					
ANR	5595329	MemberAccess	lp2 -> end . x		5595260	1					
ANR	5595330	PtrMemberAccess	lp2 -> end		5595260	0					
ANR	5595331	Identifier	lp2		5595260	0					
ANR	5595332	Identifier	end		5595260	1					
ANR	5595333	Identifier	x		5595260	1					
ANR	5595334	ReturnStatement	return ( s1 ? 1 : - 1 ) ;	122:8:4253:4273	5595260	1	True				
ANR	5595335	ConditionalExpression	s1 ? 1 : - 1		5595260	0					
ANR	5595336	Condition	s1		5595260	0					
ANR	5595337	Identifier	s1		5595260	0					
ANR	5595338	PrimaryExpression	1		5595260	1					
ANR	5595339	UnaryOperationExpression	- 1		5595260	2					
ANR	5595340	UnaryOperator	-		5595260	0					
ANR	5595341	PrimaryExpression	1		5595260	1					
ANR	5595342	ExpressionStatement	INCR ( slow_order )	134:4:4924:4940	5595260	4	True				
ANR	5595343	CallExpression	INCR ( slow_order )		5595260	0					
ANR	5595344	Callee	INCR		5595260	0					
ANR	5595345	Identifier	INCR		5595260	0					
ANR	5595346	ArgumentList	slow_order		5595260	1					
ANR	5595347	Argument	slow_order		5595260	0					
ANR	5595348	Identifier	slow_order		5595260	0					
ANR	5595349	CompoundStatement		32:8:1285:1336	5595260	5					
ANR	5595350	IdentifierDeclStatement	"fixed dx1 = lp1 -> end . x - lp1 -> start . x , dy1 = lp1 -> end . y - lp1 -> start . y ;"	136:8:4956:5038	5595260	0	True				
ANR	5595351	IdentifierDecl	dx1 = lp1 -> end . x - lp1 -> start . x		5595260	0					
ANR	5595352	IdentifierDeclType	fixed		5595260	0					
ANR	5595353	Identifier	dx1		5595260	1					
ANR	5595354	AssignmentExpression	dx1 = lp1 -> end . x - lp1 -> start . x		5595260	2		=			
ANR	5595355	Identifier	dx1		5595260	0					
ANR	5595356	AdditiveExpression	lp1 -> end . x - lp1 -> start . x		5595260	1		-			
ANR	5595357	MemberAccess	lp1 -> end . x		5595260	0					
ANR	5595358	PtrMemberAccess	lp1 -> end		5595260	0					
ANR	5595359	Identifier	lp1		5595260	0					
ANR	5595360	Identifier	end		5595260	1					
ANR	5595361	Identifier	x		5595260	1					
ANR	5595362	MemberAccess	lp1 -> start . x		5595260	1					
ANR	5595363	PtrMemberAccess	lp1 -> start		5595260	0					
ANR	5595364	Identifier	lp1		5595260	0					
ANR	5595365	Identifier	start		5595260	1					
ANR	5595366	Identifier	x		5595260	1					
ANR	5595367	IdentifierDecl	dy1 = lp1 -> end . y - lp1 -> start . y		5595260	1					
ANR	5595368	IdentifierDeclType	fixed		5595260	0					
ANR	5595369	Identifier	dy1		5595260	1					
ANR	5595370	AssignmentExpression	dy1 = lp1 -> end . y - lp1 -> start . y		5595260	2		=			
ANR	5595371	Identifier	dy1		5595260	0					
ANR	5595372	AdditiveExpression	lp1 -> end . y - lp1 -> start . y		5595260	1		-			
ANR	5595373	MemberAccess	lp1 -> end . y		5595260	0					
ANR	5595374	PtrMemberAccess	lp1 -> end		5595260	0					
ANR	5595375	Identifier	lp1		5595260	0					
ANR	5595376	Identifier	end		5595260	1					
ANR	5595377	Identifier	y		5595260	1					
ANR	5595378	MemberAccess	lp1 -> start . y		5595260	1					
ANR	5595379	PtrMemberAccess	lp1 -> start		5595260	0					
ANR	5595380	Identifier	lp1		5595260	0					
ANR	5595381	Identifier	start		5595260	1					
ANR	5595382	Identifier	y		5595260	1					
ANR	5595383	IdentifierDeclStatement	"fixed dx2 = lp2 -> end . x - lp2 -> start . x , dy2 = lp2 -> end . y - lp2 -> start . y ;"	138:8:5048:5130	5595260	1	True				
ANR	5595384	IdentifierDecl	dx2 = lp2 -> end . x - lp2 -> start . x		5595260	0					
ANR	5595385	IdentifierDeclType	fixed		5595260	0					
ANR	5595386	Identifier	dx2		5595260	1					
ANR	5595387	AssignmentExpression	dx2 = lp2 -> end . x - lp2 -> start . x		5595260	2		=			
ANR	5595388	Identifier	dx2		5595260	0					
ANR	5595389	AdditiveExpression	lp2 -> end . x - lp2 -> start . x		5595260	1		-			
ANR	5595390	MemberAccess	lp2 -> end . x		5595260	0					
ANR	5595391	PtrMemberAccess	lp2 -> end		5595260	0					
ANR	5595392	Identifier	lp2		5595260	0					
ANR	5595393	Identifier	end		5595260	1					
ANR	5595394	Identifier	x		5595260	1					
ANR	5595395	MemberAccess	lp2 -> start . x		5595260	1					
ANR	5595396	PtrMemberAccess	lp2 -> start		5595260	0					
ANR	5595397	Identifier	lp2		5595260	0					
ANR	5595398	Identifier	start		5595260	1					
ANR	5595399	Identifier	x		5595260	1					
ANR	5595400	IdentifierDecl	dy2 = lp2 -> end . y - lp2 -> start . y		5595260	1					
ANR	5595401	IdentifierDeclType	fixed		5595260	0					
ANR	5595402	Identifier	dy2		5595260	1					
ANR	5595403	AssignmentExpression	dy2 = lp2 -> end . y - lp2 -> start . y		5595260	2		=			
ANR	5595404	Identifier	dy2		5595260	0					
ANR	5595405	AdditiveExpression	lp2 -> end . y - lp2 -> start . y		5595260	1		-			
ANR	5595406	MemberAccess	lp2 -> end . y		5595260	0					
ANR	5595407	PtrMemberAccess	lp2 -> end		5595260	0					
ANR	5595408	Identifier	lp2		5595260	0					
ANR	5595409	Identifier	end		5595260	1					
ANR	5595410	Identifier	y		5595260	1					
ANR	5595411	MemberAccess	lp2 -> start . y		5595260	1					
ANR	5595412	PtrMemberAccess	lp2 -> start		5595260	0					
ANR	5595413	Identifier	lp2		5595260	0					
ANR	5595414	Identifier	start		5595260	1					
ANR	5595415	Identifier	y		5595260	1					
ANR	5595416	IdentifierDeclStatement	double diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1 ;	140:8:5140:5191	5595260	2	True				
ANR	5595417	IdentifierDecl	diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1		5595260	0					
ANR	5595418	IdentifierDeclType	double		5595260	0					
ANR	5595419	Identifier	diff		5595260	1					
ANR	5595420	AssignmentExpression	diff = ( double ) dx1 * dy2 - ( double ) dx2 * dy1		5595260	2		=			
ANR	5595421	Identifier	diff		5595260	0					
ANR	5595422	AdditiveExpression	( double ) dx1 * dy2 - ( double ) dx2 * dy1		5595260	1		-			
ANR	5595423	MultiplicativeExpression	( double ) dx1 * dy2		5595260	0		*			
ANR	5595424	CastExpression	( double ) dx1		5595260	0					
ANR	5595425	CastTarget	double		5595260	0					
ANR	5595426	Identifier	dx1		5595260	1					
ANR	5595427	Identifier	dy2		5595260	1					
ANR	5595428	MultiplicativeExpression	( double ) dx2 * dy1		5595260	1		*			
ANR	5595429	CastExpression	( double ) dx2		5595260	0					
ANR	5595430	CastTarget	double		5595260	0					
ANR	5595431	Identifier	dx2		5595260	1					
ANR	5595432	Identifier	dy1		5595260	1					
ANR	5595433	ReturnStatement	return ( diff < 0 ? - 1 : diff > 0 ? 1 : 0 ) ;	142:8:5202:5243	5595260	3	True				
ANR	5595434	ConditionalExpression	diff < 0 ? - 1 : diff > 0 ? 1 : 0		5595260	0					
ANR	5595435	Condition	diff < 0		5595260	0					
ANR	5595436	RelationalExpression	diff < 0		5595260	0		<			
ANR	5595437	Identifier	diff		5595260	0					
ANR	5595438	PrimaryExpression	0		5595260	1					
ANR	5595439	UnaryOperationExpression	- 1		5595260	1					
ANR	5595440	UnaryOperator	-		5595260	0					
ANR	5595441	PrimaryExpression	1		5595260	1					
ANR	5595442	ConditionalExpression	diff > 0 ? 1 : 0		5595260	2					
ANR	5595443	Condition	diff > 0		5595260	0					
ANR	5595444	RelationalExpression	diff > 0		5595260	0		>			
ANR	5595445	Identifier	diff		5595260	0					
ANR	5595446	PrimaryExpression	0		5595260	1					
ANR	5595447	PrimaryExpression	1		5595260	1					
ANR	5595448	PrimaryExpression	0		5595260	2					
ANR	5595449	ReturnType	static int		5595260	1					
ANR	5595450	Identifier	x_order		5595260	2					
ANR	5595451	ParameterList	"const active_line * lp1 , const active_line * lp2"		5595260	3					
ANR	5595452	Parameter	const active_line * lp1	108:8:3806:3827	5595260	0	True				
ANR	5595453	ParameterType	const active_line *		5595260	0					
ANR	5595454	Identifier	lp1		5595260	1					
ANR	5595455	Parameter	const active_line * lp2	108:32:3830:3851	5595260	1	True				
ANR	5595456	ParameterType	const active_line *		5595260	0					
ANR	5595457	Identifier	lp2		5595260	1					
ANR	5595458	CFGEntryNode	ENTRY		5595260		True				
ANR	5595459	CFGExitNode	EXIT		5595260		True				
ANR	5595460	Symbol	lp2 -> start		5595260						
ANR	5595461	Symbol	lp1 -> start . x		5595260						
ANR	5595462	Symbol	lp2 -> start . x		5595260						
ANR	5595463	Symbol	lp1 -> start . y		5595260						
ANR	5595464	Symbol	lp2 -> start . y		5595260						
ANR	5595465	Symbol	lp1 -> end . y		5595260						
ANR	5595466	Symbol	lp1 -> end . x		5595260						
ANR	5595467	Symbol	* lp1		5595260						
ANR	5595468	Symbol	* lp2		5595260						
ANR	5595469	Symbol	dx1		5595260						
ANR	5595470	Symbol	s1		5595260						
ANR	5595471	Symbol	order		5595260						
ANR	5595472	Symbol	lp1 -> start		5595260						
ANR	5595473	Symbol	dx2		5595260						
ANR	5595474	Symbol	lp2 -> x_current		5595260						
ANR	5595475	Symbol	lp1 -> x_current		5595260						
ANR	5595476	Symbol	slow_order		5595260						
ANR	5595477	Symbol	diff		5595260						
ANR	5595478	Symbol	lp1		5595260						
ANR	5595479	Symbol	lp2 -> end		5595260						
ANR	5595480	Symbol	lp2 -> end . x		5595260						
ANR	5595481	Symbol	lp2 -> end . y		5595260						
ANR	5595482	Symbol	lp1 -> end		5595260						
ANR	5595483	Symbol	lp2		5595260						
ANR	5595484	Symbol	dy2		5595260						
ANR	5595485	Symbol	dy1		5595260						
ANR	5595486	Function	print_active_line	155:0:5596:6220							
ANR	5595487	FunctionDef	"print_active_line (const gs_memory_t * mem , const char * label , const active_line * alp)"		5595486	0					
ANR	5595488	CompoundStatement		157:0:5694:6220	5595486	0					
ANR	5595489	ExpressionStatement	"dmlprintf5 ( mem , ""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"" , label , ( ulong ) alp , alp -> direction , fixed2float ( alp -> x_current ) , fixed2float ( alp -> x_next ) )"	158:4:5700:5881	5595486	0	True				
ANR	5595490	CallExpression	"dmlprintf5 ( mem , ""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"" , label , ( ulong ) alp , alp -> direction , fixed2float ( alp -> x_current ) , fixed2float ( alp -> x_next ) )"		5595486	0					
ANR	5595491	Callee	dmlprintf5		5595486	0					
ANR	5595492	Identifier	dmlprintf5		5595486	0					
ANR	5595493	ArgumentList	mem		5595486	1					
ANR	5595494	Argument	mem		5595486	0					
ANR	5595495	Identifier	mem		5595486	0					
ANR	5595496	Argument	"""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"""		5595486	1					
ANR	5595497	PrimaryExpression	"""[f]%s 0x%lx(%d): x_current=%f x_next=%f\\n"""		5595486	0					
ANR	5595498	Argument	label		5595486	2					
ANR	5595499	Identifier	label		5595486	0					
ANR	5595500	Argument	( ulong ) alp		5595486	3					
ANR	5595501	CastExpression	( ulong ) alp		5595486	0					
ANR	5595502	CastTarget	ulong		5595486	0					
ANR	5595503	Identifier	alp		5595486	1					
ANR	5595504	Argument	alp -> direction		5595486	4					
ANR	5595505	PtrMemberAccess	alp -> direction		5595486	0					
ANR	5595506	Identifier	alp		5595486	0					
ANR	5595507	Identifier	direction		5595486	1					
ANR	5595508	Argument	fixed2float ( alp -> x_current )		5595486	5					
ANR	5595509	CallExpression	fixed2float ( alp -> x_current )		5595486	0					
ANR	5595510	Callee	fixed2float		5595486	0					
ANR	5595511	Identifier	fixed2float		5595486	0					
ANR	5595512	ArgumentList	alp -> x_current		5595486	1					
ANR	5595513	Argument	alp -> x_current		5595486	0					
ANR	5595514	PtrMemberAccess	alp -> x_current		5595486	0					
ANR	5595515	Identifier	alp		5595486	0					
ANR	5595516	Identifier	x_current		5595486	1					
ANR	5595517	Argument	fixed2float ( alp -> x_next )		5595486	6					
ANR	5595518	CallExpression	fixed2float ( alp -> x_next )		5595486	0					
ANR	5595519	Callee	fixed2float		5595486	0					
ANR	5595520	Identifier	fixed2float		5595486	0					
ANR	5595521	ArgumentList	alp -> x_next		5595486	1					
ANR	5595522	Argument	alp -> x_next		5595486	0					
ANR	5595523	PtrMemberAccess	alp -> x_next		5595486	0					
ANR	5595524	Identifier	alp		5595486	0					
ANR	5595525	Identifier	x_next		5595486	1					
ANR	5595526	ExpressionStatement	"dmlprintf5 ( mem , ""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"" , fixed2float ( alp -> start . x ) , fixed2float ( alp -> start . y ) , ( ulong ) alp -> pseg , fixed2float ( alp -> end . x ) , fixed2float ( alp -> end . y ) )"	161:4:5887:6113	5595486	1	True				
ANR	5595527	CallExpression	"dmlprintf5 ( mem , ""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"" , fixed2float ( alp -> start . x ) , fixed2float ( alp -> start . y ) , ( ulong ) alp -> pseg , fixed2float ( alp -> end . x ) , fixed2float ( alp -> end . y ) )"		5595486	0					
ANR	5595528	Callee	dmlprintf5		5595486	0					
ANR	5595529	Identifier	dmlprintf5		5595486	0					
ANR	5595530	ArgumentList	mem		5595486	1					
ANR	5595531	Argument	mem		5595486	0					
ANR	5595532	Identifier	mem		5595486	0					
ANR	5595533	Argument	"""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"""		5595486	1					
ANR	5595534	PrimaryExpression	"""    start=(%f,%f) pt_end=0x%lx(%f,%f)\\n"""		5595486	0					
ANR	5595535	Argument	fixed2float ( alp -> start . x )		5595486	2					
ANR	5595536	CallExpression	fixed2float ( alp -> start . x )		5595486	0					
ANR	5595537	Callee	fixed2float		5595486	0					
ANR	5595538	Identifier	fixed2float		5595486	0					
ANR	5595539	ArgumentList	alp -> start . x		5595486	1					
ANR	5595540	Argument	alp -> start . x		5595486	0					
ANR	5595541	MemberAccess	alp -> start . x		5595486	0					
ANR	5595542	PtrMemberAccess	alp -> start		5595486	0					
ANR	5595543	Identifier	alp		5595486	0					
ANR	5595544	Identifier	start		5595486	1					
ANR	5595545	Identifier	x		5595486	1					
ANR	5595546	Argument	fixed2float ( alp -> start . y )		5595486	3					
ANR	5595547	CallExpression	fixed2float ( alp -> start . y )		5595486	0					
ANR	5595548	Callee	fixed2float		5595486	0					
ANR	5595549	Identifier	fixed2float		5595486	0					
ANR	5595550	ArgumentList	alp -> start . y		5595486	1					
ANR	5595551	Argument	alp -> start . y		5595486	0					
ANR	5595552	MemberAccess	alp -> start . y		5595486	0					
ANR	5595553	PtrMemberAccess	alp -> start		5595486	0					
ANR	5595554	Identifier	alp		5595486	0					
ANR	5595555	Identifier	start		5595486	1					
ANR	5595556	Identifier	y		5595486	1					
ANR	5595557	Argument	( ulong ) alp -> pseg		5595486	4					
ANR	5595558	CastExpression	( ulong ) alp -> pseg		5595486	0					
ANR	5595559	CastTarget	ulong		5595486	0					
ANR	5595560	PtrMemberAccess	alp -> pseg		5595486	1					
ANR	5595561	Identifier	alp		5595486	0					
ANR	5595562	Identifier	pseg		5595486	1					
ANR	5595563	Argument	fixed2float ( alp -> end . x )		5595486	5					
ANR	5595564	CallExpression	fixed2float ( alp -> end . x )		5595486	0					
ANR	5595565	Callee	fixed2float		5595486	0					
ANR	5595566	Identifier	fixed2float		5595486	0					
ANR	5595567	ArgumentList	alp -> end . x		5595486	1					
ANR	5595568	Argument	alp -> end . x		5595486	0					
ANR	5595569	MemberAccess	alp -> end . x		5595486	0					
ANR	5595570	PtrMemberAccess	alp -> end		5595486	0					
ANR	5595571	Identifier	alp		5595486	0					
ANR	5595572	Identifier	end		5595486	1					
ANR	5595573	Identifier	x		5595486	1					
ANR	5595574	Argument	fixed2float ( alp -> end . y )		5595486	6					
ANR	5595575	CallExpression	fixed2float ( alp -> end . y )		5595486	0					
ANR	5595576	Callee	fixed2float		5595486	0					
ANR	5595577	Identifier	fixed2float		5595486	0					
ANR	5595578	ArgumentList	alp -> end . y		5595486	1					
ANR	5595579	Argument	alp -> end . y		5595486	0					
ANR	5595580	MemberAccess	alp -> end . y		5595486	0					
ANR	5595581	PtrMemberAccess	alp -> end		5595486	0					
ANR	5595582	Identifier	alp		5595486	0					
ANR	5595583	Identifier	end		5595486	1					
ANR	5595584	Identifier	y		5595486	1					
ANR	5595585	ExpressionStatement	"dmlprintf2 ( mem , ""    prev=0x%lx next=0x%lx\\n"" , ( ulong ) alp -> prev , ( ulong ) alp -> next )"	165:4:6119:6218	5595486	2	True				
ANR	5595586	CallExpression	"dmlprintf2 ( mem , ""    prev=0x%lx next=0x%lx\\n"" , ( ulong ) alp -> prev , ( ulong ) alp -> next )"		5595486	0					
ANR	5595587	Callee	dmlprintf2		5595486	0					
ANR	5595588	Identifier	dmlprintf2		5595486	0					
ANR	5595589	ArgumentList	mem		5595486	1					
ANR	5595590	Argument	mem		5595486	0					
ANR	5595591	Identifier	mem		5595486	0					
ANR	5595592	Argument	"""    prev=0x%lx next=0x%lx\\n"""		5595486	1					
ANR	5595593	PrimaryExpression	"""    prev=0x%lx next=0x%lx\\n"""		5595486	0					
ANR	5595594	Argument	( ulong ) alp -> prev		5595486	2					
ANR	5595595	CastExpression	( ulong ) alp -> prev		5595486	0					
ANR	5595596	CastTarget	ulong		5595486	0					
ANR	5595597	PtrMemberAccess	alp -> prev		5595486	1					
ANR	5595598	Identifier	alp		5595486	0					
ANR	5595599	Identifier	prev		5595486	1					
ANR	5595600	Argument	( ulong ) alp -> next		5595486	3					
ANR	5595601	CastExpression	( ulong ) alp -> next		5595486	0					
ANR	5595602	CastTarget	ulong		5595486	0					
ANR	5595603	PtrMemberAccess	alp -> next		5595486	1					
ANR	5595604	Identifier	alp		5595486	0					
ANR	5595605	Identifier	next		5595486	1					
ANR	5595606	ReturnType	static void		5595486	1					
ANR	5595607	Identifier	print_active_line		5595486	2					
ANR	5595608	ParameterList	"const gs_memory_t * mem , const char * label , const active_line * alp"		5595486	3					
ANR	5595609	Parameter	const gs_memory_t * mem	156:18:5626:5647	5595486	0	True				
ANR	5595610	ParameterType	const gs_memory_t *		5595486	0					
ANR	5595611	Identifier	mem		5595486	1					
ANR	5595612	Parameter	const char * label	156:42:5650:5666	5595486	1	True				
ANR	5595613	ParameterType	const char *		5595486	0					
ANR	5595614	Identifier	label		5595486	1					
ANR	5595615	Parameter	const active_line * alp	156:61:5669:5691	5595486	2	True				
ANR	5595616	ParameterType	const active_line *		5595486	0					
ANR	5595617	Identifier	alp		5595486	1					
ANR	5595618	CFGEntryNode	ENTRY		5595486		True				
ANR	5595619	CFGExitNode	EXIT		5595486		True				
ANR	5595620	Symbol	alp -> direction		5595486						
ANR	5595621	Symbol	alp		5595486						
ANR	5595622	Symbol	fixed2float		5595486						
ANR	5595623	Symbol	alp -> end		5595486						
ANR	5595624	Symbol	alp -> x_current		5595486						
ANR	5595625	Symbol	label		5595486						
ANR	5595626	Symbol	alp -> pseg		5595486						
ANR	5595627	Symbol	* alp		5595486						
ANR	5595628	Symbol	alp -> x_next		5595486						
ANR	5595629	Symbol	alp -> prev		5595486						
ANR	5595630	Symbol	alp -> start . y		5595486						
ANR	5595631	Symbol	alp -> start . x		5595486						
ANR	5595632	Symbol	alp -> next		5595486						
ANR	5595633	Symbol	mem		5595486						
ANR	5595634	Symbol	alp -> end . y		5595486						
ANR	5595635	Symbol	alp -> end . x		5595486						
ANR	5595636	Symbol	alp -> start		5595486						
ANR	5595637	Function	print_line_list	168:0:6222:6673							
ANR	5595638	FunctionDef	"print_line_list (const gs_memory_t * mem , const active_line * flp)"		5595637	0					
ANR	5595639	CompoundStatement		170:0:6299:6673	5595637	0					
ANR	5595640	IdentifierDeclStatement	const active_line * lp ;	171:4:6305:6326	5595637	0	True				
ANR	5595641	IdentifierDecl	* lp		5595637	0					
ANR	5595642	IdentifierDeclType	const active_line *		5595637	0					
ANR	5595643	Identifier	lp		5595637	1					
ANR	5595644	ForStatement	for ( lp = flp ; lp != 0 ; lp = lp -> next )		5595637	1					
ANR	5595645	ForInit	lp = flp ;	173:9:6338:6346	5595637	0	True				
ANR	5595646	AssignmentExpression	lp = flp		5595637	0		=			
ANR	5595647	Identifier	lp		5595637	0					
ANR	5595648	Identifier	flp		5595637	1					
ANR	5595649	Condition	lp != 0	173:19:6348:6354	5595637	1	True				
ANR	5595650	EqualityExpression	lp != 0		5595637	0		!=			
ANR	5595651	Identifier	lp		5595637	0					
ANR	5595652	PrimaryExpression	0		5595637	1					
ANR	5595653	AssignmentExpression	lp = lp -> next	173:28:6357:6369	5595637	2	True	=			
ANR	5595654	Identifier	lp		5595637	0					
ANR	5595655	PtrMemberAccess	lp -> next		5595637	1					
ANR	5595656	Identifier	lp		5595637	0					
ANR	5595657	Identifier	next		5595637	1					
ANR	5595658	CompoundStatement		5:8:82:123	5595637	3					
ANR	5595659	IdentifierDeclStatement	"fixed xc = lp -> x_current , xn = lp -> x_next ;"	174:8:6382:6423	5595637	0	True				
ANR	5595660	IdentifierDecl	xc = lp -> x_current		5595637	0					
ANR	5595661	IdentifierDeclType	fixed		5595637	0					
ANR	5595662	Identifier	xc		5595637	1					
ANR	5595663	AssignmentExpression	xc = lp -> x_current		5595637	2		=			
ANR	5595664	Identifier	xc		5595637	0					
ANR	5595665	PtrMemberAccess	lp -> x_current		5595637	1					
ANR	5595666	Identifier	lp		5595637	0					
ANR	5595667	Identifier	x_current		5595637	1					
ANR	5595668	IdentifierDecl	xn = lp -> x_next		5595637	1					
ANR	5595669	IdentifierDeclType	fixed		5595637	0					
ANR	5595670	Identifier	xn		5595637	1					
ANR	5595671	AssignmentExpression	xn = lp -> x_next		5595637	2		=			
ANR	5595672	Identifier	xn		5595637	0					
ANR	5595673	PtrMemberAccess	lp -> x_next		5595637	1					
ANR	5595674	Identifier	lp		5595637	0					
ANR	5595675	Identifier	x_next		5595637	1					
ANR	5595676	ExpressionStatement	"dmlprintf3 ( mem , ""[f]0x%lx(%d): x_current/next=%g"" , ( ulong ) lp , lp -> direction , fixed2float ( xc ) )"	176:8:6434:6564	5595637	1	True				
ANR	5595677	CallExpression	"dmlprintf3 ( mem , ""[f]0x%lx(%d): x_current/next=%g"" , ( ulong ) lp , lp -> direction , fixed2float ( xc ) )"		5595637	0					
ANR	5595678	Callee	dmlprintf3		5595637	0					
ANR	5595679	Identifier	dmlprintf3		5595637	0					
ANR	5595680	ArgumentList	mem		5595637	1					
ANR	5595681	Argument	mem		5595637	0					
ANR	5595682	Identifier	mem		5595637	0					
ANR	5595683	Argument	"""[f]0x%lx(%d): x_current/next=%g"""		5595637	1					
ANR	5595684	PrimaryExpression	"""[f]0x%lx(%d): x_current/next=%g"""		5595637	0					
ANR	5595685	Argument	( ulong ) lp		5595637	2					
ANR	5595686	CastExpression	( ulong ) lp		5595637	0					
ANR	5595687	CastTarget	ulong		5595637	0					
ANR	5595688	Identifier	lp		5595637	1					
ANR	5595689	Argument	lp -> direction		5595637	3					
ANR	5595690	PtrMemberAccess	lp -> direction		5595637	0					
ANR	5595691	Identifier	lp		5595637	0					
ANR	5595692	Identifier	direction		5595637	1					
ANR	5595693	Argument	fixed2float ( xc )		5595637	4					
ANR	5595694	CallExpression	fixed2float ( xc )		5595637	0					
ANR	5595695	Callee	fixed2float		5595637	0					
ANR	5595696	Identifier	fixed2float		5595637	0					
ANR	5595697	ArgumentList	xc		5595637	1					
ANR	5595698	Argument	xc		5595637	0					
ANR	5595699	Identifier	xc		5595637	0					
ANR	5595700	IfStatement	if ( xn != xc )		5595637	2					
ANR	5595701	Condition	xn != xc	179:12:6578:6585	5595637	0	True				
ANR	5595702	EqualityExpression	xn != xc		5595637	0		!=			
ANR	5595703	Identifier	xn		5595637	0					
ANR	5595704	Identifier	xc		5595637	1					
ANR	5595705	ExpressionStatement	"dmprintf1 ( mem , ""/%g"" , fixed2float ( xn ) )"	180:12:6600:6638	5595637	1	True				
ANR	5595706	CallExpression	"dmprintf1 ( mem , ""/%g"" , fixed2float ( xn ) )"		5595637	0					
ANR	5595707	Callee	dmprintf1		5595637	0					
ANR	5595708	Identifier	dmprintf1		5595637	0					
ANR	5595709	ArgumentList	mem		5595637	1					
ANR	5595710	Argument	mem		5595637	0					
ANR	5595711	Identifier	mem		5595637	0					
ANR	5595712	Argument	"""/%g"""		5595637	1					
ANR	5595713	PrimaryExpression	"""/%g"""		5595637	0					
ANR	5595714	Argument	fixed2float ( xn )		5595637	2					
ANR	5595715	CallExpression	fixed2float ( xn )		5595637	0					
ANR	5595716	Callee	fixed2float		5595637	0					
ANR	5595717	Identifier	fixed2float		5595637	0					
ANR	5595718	ArgumentList	xn		5595637	1					
ANR	5595719	Argument	xn		5595637	0					
ANR	5595720	Identifier	xn		5595637	0					
ANR	5595721	ExpressionStatement	"dmputc ( mem , '\\n' )"	181:8:6648:6665	5595637	3	True				
ANR	5595722	CallExpression	"dmputc ( mem , '\\n' )"		5595637	0					
ANR	5595723	Callee	dmputc		5595637	0					
ANR	5595724	Identifier	dmputc		5595637	0					
ANR	5595725	ArgumentList	mem		5595637	1					
ANR	5595726	Argument	mem		5595637	0					
ANR	5595727	Identifier	mem		5595637	0					
ANR	5595728	Argument	'\\n'		5595637	1					
ANR	5595729	PrimaryExpression	'\\n'		5595637	0					
ANR	5595730	ReturnType	static void		5595637	1					
ANR	5595731	Identifier	print_line_list		5595637	2					
ANR	5595732	ParameterList	"const gs_memory_t * mem , const active_line * flp"		5595637	3					
ANR	5595733	Parameter	const gs_memory_t * mem	169:16:6250:6271	5595637	0	True				
ANR	5595734	ParameterType	const gs_memory_t *		5595637	0					
ANR	5595735	Identifier	mem		5595637	1					
ANR	5595736	Parameter	const active_line * flp	169:40:6274:6296	5595637	1	True				
ANR	5595737	ParameterType	const active_line *		5595637	0					
ANR	5595738	Identifier	flp		5595637	1					
ANR	5595739	CFGEntryNode	ENTRY		5595637		True				
ANR	5595740	CFGExitNode	EXIT		5595637		True				
ANR	5595741	Symbol	mem		5595637						
ANR	5595742	Symbol	lp		5595637						
ANR	5595743	Symbol	lp -> x_next		5595637						
ANR	5595744	Symbol	fixed2float		5595637						
ANR	5595745	Symbol	xn		5595637						
ANR	5595746	Symbol	* lp		5595637						
ANR	5595747	Symbol	lp -> direction		5595637						
ANR	5595748	Symbol	flp		5595637						
ANR	5595749	Symbol	lp -> next		5595637						
ANR	5595750	Symbol	xc		5595637						
ANR	5595751	Symbol	lp -> x_current		5595637						
ANR	5595752	Function	print_al	184:0:6675:6842							
ANR	5595753	FunctionDef	"print_al (const gs_memory_t * mem , const char * label , const active_line * alp)"		5595752	0					
ANR	5595754	CompoundStatement		186:0:6771:6842	5595752	0					
ANR	5595755	IfStatement	if ( gs_debug_c ( 'F' ) )		5595752	0					
ANR	5595756	Condition	gs_debug_c ( 'F' )	187:8:6781:6795	5595752	0	True				
ANR	5595757	CallExpression	gs_debug_c ( 'F' )		5595752	0					
ANR	5595758	Callee	gs_debug_c		5595752	0					
ANR	5595759	Identifier	gs_debug_c		5595752	0					
ANR	5595760	ArgumentList	'F'		5595752	1					
ANR	5595761	Argument	'F'		5595752	0					
ANR	5595762	PrimaryExpression	'F'		5595752	0					
ANR	5595763	ExpressionStatement	"print_active_line ( mem , label , alp )"	188:8:6806:6840	5595752	1	True				
ANR	5595764	CallExpression	"print_active_line ( mem , label , alp )"		5595752	0					
ANR	5595765	Callee	print_active_line		5595752	0					
ANR	5595766	Identifier	print_active_line		5595752	0					
ANR	5595767	ArgumentList	mem		5595752	1					
ANR	5595768	Argument	mem		5595752	0					
ANR	5595769	Identifier	mem		5595752	0					
ANR	5595770	Argument	label		5595752	1					
ANR	5595771	Identifier	label		5595752	0					
ANR	5595772	Argument	alp		5595752	2					
ANR	5595773	Identifier	alp		5595752	0					
ANR	5595774	ReturnType	static inline void		5595752	1					
ANR	5595775	Identifier	print_al		5595752	2					
ANR	5595776	ParameterList	"const gs_memory_t * mem , const char * label , const active_line * alp"		5595752	3					
ANR	5595777	Parameter	const gs_memory_t * mem	185:9:6703:6724	5595752	0	True				
ANR	5595778	ParameterType	const gs_memory_t *		5595752	0					
ANR	5595779	Identifier	mem		5595752	1					
ANR	5595780	Parameter	const char * label	185:33:6727:6743	5595752	1	True				
ANR	5595781	ParameterType	const char *		5595752	0					
ANR	5595782	Identifier	label		5595752	1					
ANR	5595783	Parameter	const active_line * alp	185:52:6746:6768	5595752	2	True				
ANR	5595784	ParameterType	const active_line *		5595752	0					
ANR	5595785	Identifier	alp		5595752	1					
ANR	5595786	CFGEntryNode	ENTRY		5595752		True				
ANR	5595787	CFGExitNode	EXIT		5595752		True				
ANR	5595788	Symbol	mem		5595752						
ANR	5595789	Symbol	alp		5595752						
ANR	5595790	Symbol	gs_debug_c		5595752						
ANR	5595791	Symbol	label		5595752						
ANR	5595792	Function	is_spotan_device	194:0:6901:7298							
ANR	5595793	FunctionDef	is_spotan_device (gx_device * dev)		5595792	0					
ANR	5595794	CompoundStatement		196:0:6954:7298	5595792	0					
ANR	5595795	ReturnStatement	"return dev_proc ( dev , open_device ) == san_open ;"	202:4:7251:7296	5595792	0	True				
ANR	5595796	EqualityExpression	"dev_proc ( dev , open_device ) == san_open"		5595792	0		==			
ANR	5595797	CallExpression	"dev_proc ( dev , open_device )"		5595792	0					
ANR	5595798	Callee	dev_proc		5595792	0					
ANR	5595799	Identifier	dev_proc		5595792	0					
ANR	5595800	ArgumentList	dev		5595792	1					
ANR	5595801	Argument	dev		5595792	0					
ANR	5595802	Identifier	dev		5595792	0					
ANR	5595803	Argument	open_device		5595792	1					
ANR	5595804	Identifier	open_device		5595792	0					
ANR	5595805	Identifier	san_open		5595792	1					
ANR	5595806	ReturnType	static inline bool		5595792	1					
ANR	5595807	Identifier	is_spotan_device		5595792	2					
ANR	5595808	ParameterList	gx_device * dev		5595792	3					
ANR	5595809	Parameter	gx_device * dev	195:17:6937:6951	5595792	0	True				
ANR	5595810	ParameterType	gx_device *		5595792	0					
ANR	5595811	Identifier	dev		5595792	1					
ANR	5595812	CFGEntryNode	ENTRY		5595792		True				
ANR	5595813	CFGExitNode	EXIT		5595792		True				
ANR	5595814	Symbol	dev		5595792						
ANR	5595815	Symbol	dev_proc		5595792						
ANR	5595816	Symbol	open_device		5595792						
ANR	5595817	Symbol	san_open		5595792						
ANR	5595818	DeclStmt									
ANR	5595819	Decl							void	void ( line_list * )	free_line_list
ANR	5595820	DeclStmt									
ANR	5595821	Decl							int	"int ( gx_path * , line_list * )"	add_y_list
ANR	5595822	DeclStmt									
ANR	5595823	Decl							int	"int ( const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll )"	add_y_line_aux
ANR	5595824	DeclStmt									
ANR	5595825	Decl							void	"void ( active_line * , line_list * )"	insert_x_new
ANR	5595826	DeclStmt									
ANR	5595827	Decl							int	"int ( active_line * , const line_list * , bool )"	end_x_line
ANR	5595828	DeclStmt									
ANR	5595829	Decl							int	"int ( active_line * alp , bool move_iterator )"	step_al
ANR	5595830	Function	init_line_list	234:0:8639:9254							
ANR	5595831	FunctionDef	"init_line_list (line_list * ll , gs_memory_t * mem)"		5595830	0					
ANR	5595832	CompoundStatement		236:0:8707:9254	5595830	0					
ANR	5595833	ExpressionStatement	ll -> memory = mem	237:4:8713:8729	5595830	0	True				
ANR	5595834	AssignmentExpression	ll -> memory = mem		5595830	0		=			
ANR	5595835	PtrMemberAccess	ll -> memory		5595830	0					
ANR	5595836	Identifier	ll		5595830	0					
ANR	5595837	Identifier	memory		5595830	1					
ANR	5595838	Identifier	mem		5595830	1					
ANR	5595839	ExpressionStatement	ll -> active_area = 0	238:4:8735:8754	5595830	1	True				
ANR	5595840	AssignmentExpression	ll -> active_area = 0		5595830	0		=			
ANR	5595841	PtrMemberAccess	ll -> active_area		5595830	0					
ANR	5595842	Identifier	ll		5595830	0					
ANR	5595843	Identifier	active_area		5595830	1					
ANR	5595844	PrimaryExpression	0		5595830	1					
ANR	5595845	ExpressionStatement	ll -> next_active = ll -> local_active	239:4:8760:8794	5595830	2	True				
ANR	5595846	AssignmentExpression	ll -> next_active = ll -> local_active		5595830	0		=			
ANR	5595847	PtrMemberAccess	ll -> next_active		5595830	0					
ANR	5595848	Identifier	ll		5595830	0					
ANR	5595849	Identifier	next_active		5595830	1					
ANR	5595850	PtrMemberAccess	ll -> local_active		5595830	1					
ANR	5595851	Identifier	ll		5595830	0					
ANR	5595852	Identifier	local_active		5595830	1					
ANR	5595853	ExpressionStatement	ll -> limit = ll -> next_active + MAX_LOCAL_ACTIVE	240:4:8800:8846	5595830	3	True				
ANR	5595854	AssignmentExpression	ll -> limit = ll -> next_active + MAX_LOCAL_ACTIVE		5595830	0		=			
ANR	5595855	PtrMemberAccess	ll -> limit		5595830	0					
ANR	5595856	Identifier	ll		5595830	0					
ANR	5595857	Identifier	limit		5595830	1					
ANR	5595858	AdditiveExpression	ll -> next_active + MAX_LOCAL_ACTIVE		5595830	1		+			
ANR	5595859	PtrMemberAccess	ll -> next_active		5595830	0					
ANR	5595860	Identifier	ll		5595830	0					
ANR	5595861	Identifier	next_active		5595830	1					
ANR	5595862	Identifier	MAX_LOCAL_ACTIVE		5595830	1					
ANR	5595863	ExpressionStatement	ll -> close_count = 0	241:4:8852:8871	5595830	4	True				
ANR	5595864	AssignmentExpression	ll -> close_count = 0		5595830	0		=			
ANR	5595865	PtrMemberAccess	ll -> close_count		5595830	0					
ANR	5595866	Identifier	ll		5595830	0					
ANR	5595867	Identifier	close_count		5595830	1					
ANR	5595868	PrimaryExpression	0		5595830	1					
ANR	5595869	ExpressionStatement	ll -> y_list = 0	242:4:8877:8891	5595830	5	True				
ANR	5595870	AssignmentExpression	ll -> y_list = 0		5595830	0		=			
ANR	5595871	PtrMemberAccess	ll -> y_list		5595830	0					
ANR	5595872	Identifier	ll		5595830	0					
ANR	5595873	Identifier	y_list		5595830	1					
ANR	5595874	PrimaryExpression	0		5595830	1					
ANR	5595875	ExpressionStatement	ll -> y_line = 0	243:4:8897:8911	5595830	6	True				
ANR	5595876	AssignmentExpression	ll -> y_line = 0		5595830	0		=			
ANR	5595877	PtrMemberAccess	ll -> y_line		5595830	0					
ANR	5595878	Identifier	ll		5595830	0					
ANR	5595879	Identifier	y_line		5595830	1					
ANR	5595880	PrimaryExpression	0		5595830	1					
ANR	5595881	ExpressionStatement	ll -> h_list0 = ll -> h_list1 = 0	244:4:8917:8946	5595830	7	True				
ANR	5595882	AssignmentExpression	ll -> h_list0 = ll -> h_list1 = 0		5595830	0		=			
ANR	5595883	PtrMemberAccess	ll -> h_list0		5595830	0					
ANR	5595884	Identifier	ll		5595830	0					
ANR	5595885	Identifier	h_list0		5595830	1					
ANR	5595886	AssignmentExpression	ll -> h_list1 = 0		5595830	1		=			
ANR	5595887	PtrMemberAccess	ll -> h_list1		5595830	0					
ANR	5595888	Identifier	ll		5595830	0					
ANR	5595889	Identifier	h_list1		5595830	1					
ANR	5595890	PrimaryExpression	0		5595830	1					
ANR	5595891	ExpressionStatement	ll -> x_head . prev = NULL	246:4:8953:8975	5595830	8	True				
ANR	5595892	AssignmentExpression	ll -> x_head . prev = NULL		5595830	0		=			
ANR	5595893	MemberAccess	ll -> x_head . prev		5595830	0					
ANR	5595894	PtrMemberAccess	ll -> x_head		5595830	0					
ANR	5595895	Identifier	ll		5595830	0					
ANR	5595896	Identifier	x_head		5595830	1					
ANR	5595897	Identifier	prev		5595830	1					
ANR	5595898	Identifier	NULL		5595830	1					
ANR	5595899	ExpressionStatement	ll -> x_head . start . x = 0	248:4:9047:9069	5595830	9	True				
ANR	5595900	AssignmentExpression	ll -> x_head . start . x = 0		5595830	0		=			
ANR	5595901	MemberAccess	ll -> x_head . start . x		5595830	0					
ANR	5595902	MemberAccess	ll -> x_head . start		5595830	0					
ANR	5595903	PtrMemberAccess	ll -> x_head		5595830	0					
ANR	5595904	Identifier	ll		5595830	0					
ANR	5595905	Identifier	x_head		5595830	1					
ANR	5595906	Identifier	start		5595830	1					
ANR	5595907	Identifier	x		5595830	1					
ANR	5595908	PrimaryExpression	0		5595830	1					
ANR	5595909	ExpressionStatement	ll -> x_head . start . y = 0	249:4:9075:9097	5595830	10	True				
ANR	5595910	AssignmentExpression	ll -> x_head . start . y = 0		5595830	0		=			
ANR	5595911	MemberAccess	ll -> x_head . start . y		5595830	0					
ANR	5595912	MemberAccess	ll -> x_head . start		5595830	0					
ANR	5595913	PtrMemberAccess	ll -> x_head		5595830	0					
ANR	5595914	Identifier	ll		5595830	0					
ANR	5595915	Identifier	x_head		5595830	1					
ANR	5595916	Identifier	start		5595830	1					
ANR	5595917	Identifier	y		5595830	1					
ANR	5595918	PrimaryExpression	0		5595830	1					
ANR	5595919	ExpressionStatement	ll -> x_head . end . x = 0	250:4:9103:9123	5595830	11	True				
ANR	5595920	AssignmentExpression	ll -> x_head . end . x = 0		5595830	0		=			
ANR	5595921	MemberAccess	ll -> x_head . end . x		5595830	0					
ANR	5595922	MemberAccess	ll -> x_head . end		5595830	0					
ANR	5595923	PtrMemberAccess	ll -> x_head		5595830	0					
ANR	5595924	Identifier	ll		5595830	0					
ANR	5595925	Identifier	x_head		5595830	1					
ANR	5595926	Identifier	end		5595830	1					
ANR	5595927	Identifier	x		5595830	1					
ANR	5595928	PrimaryExpression	0		5595830	1					
ANR	5595929	ExpressionStatement	ll -> x_head . end . y = 0	251:4:9129:9149	5595830	12	True				
ANR	5595930	AssignmentExpression	ll -> x_head . end . y = 0		5595830	0		=			
ANR	5595931	MemberAccess	ll -> x_head . end . y		5595830	0					
ANR	5595932	MemberAccess	ll -> x_head . end		5595830	0					
ANR	5595933	PtrMemberAccess	ll -> x_head		5595830	0					
ANR	5595934	Identifier	ll		5595830	0					
ANR	5595935	Identifier	x_head		5595830	1					
ANR	5595936	Identifier	end		5595830	1					
ANR	5595937	Identifier	y		5595830	1					
ANR	5595938	PrimaryExpression	0		5595830	1					
ANR	5595939	ExpressionStatement	INCR ( fill )	254:4:9242:9252	5595830	13	True				
ANR	5595940	CallExpression	INCR ( fill )		5595830	0					
ANR	5595941	Callee	INCR		5595830	0					
ANR	5595942	Identifier	INCR		5595830	0					
ANR	5595943	ArgumentList	fill		5595830	1					
ANR	5595944	Argument	fill		5595830	0					
ANR	5595945	Identifier	fill		5595830	0					
ANR	5595946	ReturnType	static inline void		5595830	1					
ANR	5595947	Identifier	init_line_list		5595830	2					
ANR	5595948	ParameterList	"line_list * ll , gs_memory_t * mem"		5595830	3					
ANR	5595949	Parameter	line_list * ll	235:15:8673:8685	5595830	0	True				
ANR	5595950	ParameterType	line_list *		5595830	0					
ANR	5595951	Identifier	ll		5595830	1					
ANR	5595952	Parameter	gs_memory_t * mem	235:30:8688:8704	5595830	1	True				
ANR	5595953	ParameterType	gs_memory_t *		5595830	0					
ANR	5595954	Identifier	mem		5595830	1					
ANR	5595955	CFGEntryNode	ENTRY		5595830		True				
ANR	5595956	CFGExitNode	EXIT		5595830		True				
ANR	5595957	Symbol	ll		5595830						
ANR	5595958	Symbol	ll -> local_active		5595830						
ANR	5595959	Symbol	NULL		5595830						
ANR	5595960	Symbol	ll -> next_active		5595830						
ANR	5595961	Symbol	* ll		5595830						
ANR	5595962	Symbol	ll -> memory		5595830						
ANR	5595963	Symbol	ll -> y_list		5595830						
ANR	5595964	Symbol	ll -> x_head . prev		5595830						
ANR	5595965	Symbol	fill		5595830						
ANR	5595966	Symbol	ll -> active_area		5595830						
ANR	5595967	Symbol	ll -> x_head . end . x		5595830						
ANR	5595968	Symbol	ll -> x_head . end . y		5595830						
ANR	5595969	Symbol	MAX_LOCAL_ACTIVE		5595830						
ANR	5595970	Symbol	ll -> x_head		5595830						
ANR	5595971	Symbol	ll -> y_line		5595830						
ANR	5595972	Symbol	ll -> x_head . start		5595830						
ANR	5595973	Symbol	mem		5595830						
ANR	5595974	Symbol	ll -> h_list0		5595830						
ANR	5595975	Symbol	ll -> h_list1		5595830						
ANR	5595976	Symbol	ll -> limit		5595830						
ANR	5595977	Symbol	ll -> x_head . start . y		5595830						
ANR	5595978	Symbol	ll -> x_head . start . x		5595830						
ANR	5595979	Symbol	ll -> x_head . end		5595830						
ANR	5595980	Symbol	ll -> close_count		5595830						
ANR	5595981	Function	unclose_path	258:0:9313:9781							
ANR	5595982	FunctionDef	"unclose_path (gx_path * ppath , int count)"		5595981	0					
ANR	5595983	CompoundStatement		260:0:9373:9781	5595981	0					
ANR	5595984	IdentifierDeclStatement	subpath * psub ;	261:4:9379:9392	5595981	0	True				
ANR	5595985	IdentifierDecl	* psub		5595981	0					
ANR	5595986	IdentifierDeclType	subpath *		5595981	0					
ANR	5595987	Identifier	psub		5595981	1					
ANR	5595988	ForStatement	for ( psub = ppath -> first_subpath ; count != 0 ; psub = ( subpath * ) psub -> last -> next )		5595981	1					
ANR	5595989	ForInit	psub = ppath -> first_subpath ;	263:9:9404:9431	5595981	0	True				
ANR	5595990	AssignmentExpression	psub = ppath -> first_subpath		5595981	0		=			
ANR	5595991	Identifier	psub		5595981	0					
ANR	5595992	PtrMemberAccess	ppath -> first_subpath		5595981	1					
ANR	5595993	Identifier	ppath		5595981	0					
ANR	5595994	Identifier	first_subpath		5595981	1					
ANR	5595995	Condition	count != 0	263:38:9433:9442	5595981	1	True				
ANR	5595996	EqualityExpression	count != 0		5595981	0		!=			
ANR	5595997	Identifier	count		5595981	0					
ANR	5595998	PrimaryExpression	0		5595981	1					
ANR	5595999	AssignmentExpression	psub = ( subpath * ) psub -> last -> next	264:9:9454:9488	5595981	2	True	=			
ANR	5596000	Identifier	psub		5595981	0					
ANR	5596001	CastExpression	( subpath * ) psub -> last -> next		5595981	1					
ANR	5596002	CastTarget	subpath *		5595981	0					
ANR	5596003	PtrMemberAccess	psub -> last -> next		5595981	1					
ANR	5596004	PtrMemberAccess	psub -> last		5595981	0					
ANR	5596005	Identifier	psub		5595981	0					
ANR	5596006	Identifier	last		5595981	1					
ANR	5596007	Identifier	next		5595981	1					
ANR	5596008	IfStatement	if ( psub -> last == ( segment * ) & psub -> closer )		5595981	3					
ANR	5596009	Condition	psub -> last == ( segment * ) & psub -> closer	266:12:9512:9551	5595981	0	True				
ANR	5596010	EqualityExpression	psub -> last == ( segment * ) & psub -> closer		5595981	0		==			
ANR	5596011	PtrMemberAccess	psub -> last		5595981	0					
ANR	5596012	Identifier	psub		5595981	0					
ANR	5596013	Identifier	last		5595981	1					
ANR	5596014	CastExpression	( segment * ) & psub -> closer		5595981	1					
ANR	5596015	CastTarget	segment *		5595981	0					
ANR	5596016	UnaryOperationExpression	& psub -> closer		5595981	1					
ANR	5596017	UnaryOperator	&		5595981	0					
ANR	5596018	PtrMemberAccess	psub -> closer		5595981	1					
ANR	5596019	Identifier	psub		5595981	0					
ANR	5596020	Identifier	closer		5595981	1					
ANR	5596021	CompoundStatement		8:12:194:254	5595981	1					
ANR	5596022	IdentifierDeclStatement	"segment * prev = psub -> closer . prev , * next = psub -> closer . next ;"	267:12:9568:9628	5595981	0	True				
ANR	5596023	IdentifierDecl	* prev = psub -> closer . prev		5595981	0					
ANR	5596024	IdentifierDeclType	segment *		5595981	0					
ANR	5596025	Identifier	prev		5595981	1					
ANR	5596026	AssignmentExpression	* prev = psub -> closer . prev		5595981	2		=			
ANR	5596027	Identifier	prev		5595981	0					
ANR	5596028	MemberAccess	psub -> closer . prev		5595981	1					
ANR	5596029	PtrMemberAccess	psub -> closer		5595981	0					
ANR	5596030	Identifier	psub		5595981	0					
ANR	5596031	Identifier	closer		5595981	1					
ANR	5596032	Identifier	prev		5595981	1					
ANR	5596033	IdentifierDecl	* next = psub -> closer . next		5595981	1					
ANR	5596034	IdentifierDeclType	segment *		5595981	0					
ANR	5596035	Identifier	next		5595981	1					
ANR	5596036	AssignmentExpression	* next = psub -> closer . next		5595981	2		=			
ANR	5596037	Identifier	next		5595981	0					
ANR	5596038	MemberAccess	psub -> closer . next		5595981	1					
ANR	5596039	PtrMemberAccess	psub -> closer		5595981	0					
ANR	5596040	Identifier	psub		5595981	0					
ANR	5596041	Identifier	closer		5595981	1					
ANR	5596042	Identifier	next		5595981	1					
ANR	5596043	ExpressionStatement	prev -> next = next	269:12:9643:9660	5595981	1	True				
ANR	5596044	AssignmentExpression	prev -> next = next		5595981	0		=			
ANR	5596045	PtrMemberAccess	prev -> next		5595981	0					
ANR	5596046	Identifier	prev		5595981	0					
ANR	5596047	Identifier	next		5595981	1					
ANR	5596048	Identifier	next		5595981	1					
ANR	5596049	IfStatement	if ( next )		5595981	2					
ANR	5596050	Condition	next	270:16:9678:9681	5595981	0	True				
ANR	5596051	Identifier	next		5595981	0					
ANR	5596052	ExpressionStatement	next -> prev = prev	271:16:9700:9717	5595981	1	True				
ANR	5596053	AssignmentExpression	next -> prev = prev		5595981	0		=			
ANR	5596054	PtrMemberAccess	next -> prev		5595981	0					
ANR	5596055	Identifier	next		5595981	0					
ANR	5596056	Identifier	prev		5595981	1					
ANR	5596057	Identifier	prev		5595981	1					
ANR	5596058	ExpressionStatement	psub -> last = prev	272:12:9731:9748	5595981	3	True				
ANR	5596059	AssignmentExpression	psub -> last = prev		5595981	0		=			
ANR	5596060	PtrMemberAccess	psub -> last		5595981	0					
ANR	5596061	Identifier	psub		5595981	0					
ANR	5596062	Identifier	last		5595981	1					
ANR	5596063	Identifier	prev		5595981	1					
ANR	5596064	ExpressionStatement	count --	273:12:9762:9769	5595981	4	True				
ANR	5596065	PostIncDecOperationExpression	count --		5595981	0					
ANR	5596066	Identifier	count		5595981	0					
ANR	5596067	IncDec	--		5595981	1					
ANR	5596068	ReturnType	static inline void		5595981	1					
ANR	5596069	Identifier	unclose_path		5595981	2					
ANR	5596070	ParameterList	"gx_path * ppath , int count"		5595981	3					
ANR	5596071	Parameter	gx_path * ppath	259:13:9345:9359	5595981	0	True				
ANR	5596072	ParameterType	gx_path *		5595981	0					
ANR	5596073	Identifier	ppath		5595981	1					
ANR	5596074	Parameter	int count	259:30:9362:9370	5595981	1	True				
ANR	5596075	ParameterType	int		5595981	0					
ANR	5596076	Identifier	count		5595981	1					
ANR	5596077	CFGEntryNode	ENTRY		5595981		True				
ANR	5596078	CFGExitNode	EXIT		5595981		True				
ANR	5596079	Symbol	* ppath		5595981						
ANR	5596080	Symbol	next		5595981						
ANR	5596081	Symbol	prev -> next		5595981						
ANR	5596082	Symbol	psub -> last		5595981						
ANR	5596083	Symbol	& psub -> closer		5595981						
ANR	5596084	Symbol	psub		5595981						
ANR	5596085	Symbol	* psub		5595981						
ANR	5596086	Symbol	psub -> closer		5595981						
ANR	5596087	Symbol	* * psub		5595981						
ANR	5596088	Symbol	prev		5595981						
ANR	5596089	Symbol	count		5595981						
ANR	5596090	Symbol	* prev		5595981						
ANR	5596091	Symbol	ppath		5595981						
ANR	5596092	Symbol	ppath -> first_subpath		5595981						
ANR	5596093	Symbol	* next		5595981						
ANR	5596094	Symbol	* psub -> last		5595981						
ANR	5596095	Symbol	psub -> closer . next		5595981						
ANR	5596096	Symbol	next -> prev		5595981						
ANR	5596097	Symbol	psub -> closer . prev		5595981						
ANR	5596098	Symbol	psub -> last -> next		5595981						
ANR	5596099	Function	gx_general_fill_path	280:0:9828:24076							
ANR	5596100	FunctionDef	"gx_general_fill_path (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		5596099	0					
ANR	5596101	CompoundStatement		284:0:10047:24076	5596099	0					
ANR	5596102	IdentifierDeclStatement	gs_fixed_point adjust ;	285:4:10053:10074	5596099	0	True				
ANR	5596103	IdentifierDecl	adjust		5596099	0					
ANR	5596104	IdentifierDeclType	gs_fixed_point		5596099	0					
ANR	5596105	Identifier	adjust		5596099	1					
ANR	5596106	IdentifierDeclStatement	gs_logical_operation_t lop = pgs -> log_op ;	286:4:10080:10120	5596099	1	True				
ANR	5596107	IdentifierDecl	lop = pgs -> log_op		5596099	0					
ANR	5596108	IdentifierDeclType	gs_logical_operation_t		5596099	0					
ANR	5596109	Identifier	lop		5596099	1					
ANR	5596110	AssignmentExpression	lop = pgs -> log_op		5596099	2		=			
ANR	5596111	Identifier	lop		5596099	0					
ANR	5596112	PtrMemberAccess	pgs -> log_op		5596099	1					
ANR	5596113	Identifier	pgs		5596099	0					
ANR	5596114	Identifier	log_op		5596099	1					
ANR	5596115	IdentifierDeclStatement	"gs_fixed_rect ibox , bbox , sbox ;"	287:4:10126:10156	5596099	2	True				
ANR	5596116	IdentifierDecl	ibox		5596099	0					
ANR	5596117	IdentifierDeclType	gs_fixed_rect		5596099	0					
ANR	5596118	Identifier	ibox		5596099	1					
ANR	5596119	IdentifierDecl	bbox		5596099	1					
ANR	5596120	IdentifierDeclType	gs_fixed_rect		5596099	0					
ANR	5596121	Identifier	bbox		5596099	1					
ANR	5596122	IdentifierDecl	sbox		5596099	2					
ANR	5596123	IdentifierDeclType	gs_fixed_rect		5596099	0					
ANR	5596124	Identifier	sbox		5596099	1					
ANR	5596125	IdentifierDeclStatement	gx_device_clip cdev ;	288:4:10162:10181	5596099	3	True				
ANR	5596126	IdentifierDecl	cdev		5596099	0					
ANR	5596127	IdentifierDeclType	gx_device_clip		5596099	0					
ANR	5596128	Identifier	cdev		5596099	1					
ANR	5596129	IdentifierDeclStatement	gx_device * dev = pdev ;	289:4:10187:10208	5596099	4	True				
ANR	5596130	IdentifierDecl	* dev = pdev		5596099	0					
ANR	5596131	IdentifierDeclType	gx_device *		5596099	0					
ANR	5596132	Identifier	dev		5596099	1					
ANR	5596133	AssignmentExpression	* dev = pdev		5596099	2		=			
ANR	5596134	Identifier	pdev		5596099	0					
ANR	5596135	Identifier	pdev		5596099	1					
ANR	5596136	IdentifierDeclStatement	gx_device * save_dev = dev ;	290:4:10214:10239	5596099	5	True				
ANR	5596137	IdentifierDecl	* save_dev = dev		5596099	0					
ANR	5596138	IdentifierDeclType	gx_device *		5596099	0					
ANR	5596139	Identifier	save_dev		5596099	1					
ANR	5596140	AssignmentExpression	* save_dev = dev		5596099	2		=			
ANR	5596141	Identifier	dev		5596099	0					
ANR	5596142	Identifier	dev		5596099	1					
ANR	5596143	IdentifierDeclStatement	gx_path ffpath ;	291:4:10245:10259	5596099	6	True				
ANR	5596144	IdentifierDecl	ffpath		5596099	0					
ANR	5596145	IdentifierDeclType	gx_path		5596099	0					
ANR	5596146	Identifier	ffpath		5596099	1					
ANR	5596147	IdentifierDeclStatement	gx_path * pfpath ;	292:4:10265:10280	5596099	7	True				
ANR	5596148	IdentifierDecl	* pfpath		5596099	0					
ANR	5596149	IdentifierDeclType	gx_path *		5596099	0					
ANR	5596150	Identifier	pfpath		5596099	1					
ANR	5596151	IdentifierDeclStatement	int code ;	293:4:10286:10294	5596099	8	True				
ANR	5596152	IdentifierDecl	code		5596099	0					
ANR	5596153	IdentifierDeclType	int		5596099	0					
ANR	5596154	Identifier	code		5596099	1					
ANR	5596155	IdentifierDeclStatement	int max_fill_band = dev -> max_fill_band ;	294:4:10300:10338	5596099	9	True				
ANR	5596156	IdentifierDecl	max_fill_band = dev -> max_fill_band		5596099	0					
ANR	5596157	IdentifierDeclType	int		5596099	0					
ANR	5596158	Identifier	max_fill_band		5596099	1					
ANR	5596159	AssignmentExpression	max_fill_band = dev -> max_fill_band		5596099	2		=			
ANR	5596160	Identifier	max_fill_band		5596099	0					
ANR	5596161	PtrMemberAccess	dev -> max_fill_band		5596099	1					
ANR	5596162	Identifier	dev		5596099	0					
ANR	5596163	Identifier	max_fill_band		5596099	1					
ANR	5596164	Statement	define	295:1:10341:10346	5596099	10	True				
ANR	5596165	Statement	NO_BAND_MASK	295:8:10348:10359	5596099	11	True				
ANR	5596166	Statement	(	295:21:10361:10361	5596099	12	True				
ANR	5596167	Statement	(	295:22:10362:10362	5596099	13	True				
ANR	5596168	Statement	fixed	295:23:10363:10367	5596099	14	True				
ANR	5596169	Statement	)	295:28:10368:10368	5596099	15	True				
ANR	5596170	Statement	(	295:29:10369:10369	5596099	16	True				
ANR	5596171	Statement	-	295:30:10370:10370	5596099	17	True				
ANR	5596172	Statement	1	295:31:10371:10371	5596099	18	True				
ANR	5596173	Statement	)	295:32:10372:10372	5596099	19	True				
ANR	5596174	Statement	<<	295:34:10374:10375	5596099	20	True				
ANR	5596175	Statement	(	295:37:10377:10377	5596099	21	True				
ANR	5596176	Statement	sizeof	295:38:10378:10383	5596099	22	True				
ANR	5596177	Statement	(	295:44:10384:10384	5596099	23	True				
ANR	5596178	Statement	fixed	295:45:10385:10389	5596099	24	True				
ANR	5596179	Statement	)	295:50:10390:10390	5596099	25	True				
ANR	5596180	Statement	*	295:52:10392:10392	5596099	26	True				
ANR	5596181	Statement	8	295:54:10394:10394	5596099	27	True				
ANR	5596182	Statement	-	295:56:10396:10396	5596099	28	True				
ANR	5596183	Statement	1	295:58:10398:10398	5596099	29	True				
ANR	5596184	Statement	)	295:59:10399:10399	5596099	30	True				
ANR	5596185	Statement	)	295:60:10400:10400	5596099	31	True				
ANR	5596186	IdentifierDeclStatement	const bool is_character = params -> adjust . x == - 1 ;	296:4:10406:10454	5596099	32	True				
ANR	5596187	IdentifierDecl	is_character = params -> adjust . x == - 1		5596099	0					
ANR	5596188	IdentifierDeclType	const bool		5596099	0					
ANR	5596189	Identifier	is_character		5596099	1					
ANR	5596190	AssignmentExpression	is_character = params -> adjust . x == - 1		5596099	2		=			
ANR	5596191	Identifier	is_character		5596099	0					
ANR	5596192	EqualityExpression	params -> adjust . x == - 1		5596099	1		==			
ANR	5596193	MemberAccess	params -> adjust . x		5596099	0					
ANR	5596194	PtrMemberAccess	params -> adjust		5596099	0					
ANR	5596195	Identifier	params		5596099	0					
ANR	5596196	Identifier	adjust		5596099	1					
ANR	5596197	Identifier	x		5596099	1					
ANR	5596198	UnaryOperationExpression	- 1		5596099	1					
ANR	5596199	UnaryOperator	-		5596099	0					
ANR	5596200	PrimaryExpression	1		5596099	1					
ANR	5596201	IdentifierDeclStatement	bool fill_by_trapezoids ;	297:4:10481:10504	5596099	33	True				
ANR	5596202	IdentifierDecl	fill_by_trapezoids		5596099	0					
ANR	5596203	IdentifierDeclType	bool		5596099	0					
ANR	5596204	Identifier	fill_by_trapezoids		5596099	1					
ANR	5596205	IdentifierDeclStatement	bool big_path = ppath -> subpath_count > 50 ;	298:4:10510:10551	5596099	34	True				
ANR	5596206	IdentifierDecl	big_path = ppath -> subpath_count > 50		5596099	0					
ANR	5596207	IdentifierDeclType	bool		5596099	0					
ANR	5596208	Identifier	big_path		5596099	1					
ANR	5596209	AssignmentExpression	big_path = ppath -> subpath_count > 50		5596099	2		=			
ANR	5596210	Identifier	big_path		5596099	0					
ANR	5596211	RelationalExpression	ppath -> subpath_count > 50		5596099	1		>			
ANR	5596212	PtrMemberAccess	ppath -> subpath_count		5596099	0					
ANR	5596213	Identifier	ppath		5596099	0					
ANR	5596214	Identifier	subpath_count		5596099	1					
ANR	5596215	PrimaryExpression	50		5596099	1					
ANR	5596216	IdentifierDeclStatement	fill_options fo ;	299:4:10557:10572	5596099	35	True				
ANR	5596217	IdentifierDecl	fo		5596099	0					
ANR	5596218	IdentifierDeclType	fill_options		5596099	0					
ANR	5596219	Identifier	fo		5596099	1					
ANR	5596220	IdentifierDeclStatement	line_list lst ;	300:4:10578:10591	5596099	36	True				
ANR	5596221	IdentifierDecl	lst		5596099	0					
ANR	5596222	IdentifierDeclType	line_list		5596099	0					
ANR	5596223	Identifier	lst		5596099	1					
ANR	5596224	IdentifierDeclStatement	int clipping = 0 ;	301:4:10597:10613	5596099	37	True				
ANR	5596225	IdentifierDecl	clipping = 0		5596099	0					
ANR	5596226	IdentifierDeclType	int		5596099	0					
ANR	5596227	Identifier	clipping		5596099	1					
ANR	5596228	AssignmentExpression	clipping = 0		5596099	2		=			
ANR	5596229	Identifier	clipping		5596099	0					
ANR	5596230	PrimaryExpression	0		5596099	1					
ANR	5596231	IdentifierDeclStatement	int scanconverter ;	302:4:10619:10636	5596099	38	True				
ANR	5596232	IdentifierDecl	scanconverter		5596099	0					
ANR	5596233	IdentifierDeclType	int		5596099	0					
ANR	5596234	Identifier	scanconverter		5596099	1					
ANR	5596235	ExpressionStatement	* ( const fill_options * * ) & lst . fo = & fo	304:4:10643:10680	5596099	39	True				
ANR	5596236	AssignmentExpression	* ( const fill_options * * ) & lst . fo = & fo		5596099	0		=			
ANR	5596237	UnaryOperationExpression	* ( const fill_options * * ) & lst . fo		5596099	0					
ANR	5596238	UnaryOperator	*		5596099	0					
ANR	5596239	CastExpression	( const fill_options * * ) & lst . fo		5596099	1					
ANR	5596240	CastTarget	const fill_options * *		5596099	0					
ANR	5596241	UnaryOperationExpression	& lst . fo		5596099	1					
ANR	5596242	UnaryOperator	&		5596099	0					
ANR	5596243	MemberAccess	lst . fo		5596099	1					
ANR	5596244	Identifier	lst		5596099	0					
ANR	5596245	Identifier	fo		5596099	1					
ANR	5596246	UnaryOperationExpression	& fo		5596099	1					
ANR	5596247	UnaryOperator	&		5596099	0					
ANR	5596248	Identifier	fo		5596099	1					
ANR	5596249	ExpressionStatement	"gx_path_bbox ( ppath , & ibox )"	313:4:11066:11092	5596099	40	True				
ANR	5596250	CallExpression	"gx_path_bbox ( ppath , & ibox )"		5596099	0					
ANR	5596251	Callee	gx_path_bbox		5596099	0					
ANR	5596252	Identifier	gx_path_bbox		5596099	0					
ANR	5596253	ArgumentList	ppath		5596099	1					
ANR	5596254	Argument	ppath		5596099	0					
ANR	5596255	Identifier	ppath		5596099	0					
ANR	5596256	Argument	& ibox		5596099	1					
ANR	5596257	UnaryOperationExpression	& ibox		5596099	0					
ANR	5596258	UnaryOperator	&		5596099	0					
ANR	5596259	Identifier	ibox		5596099	1					
ANR	5596260	IfStatement	if ( is_character )		5596099	41					
ANR	5596261	Condition	is_character	314:8:11102:11113	5596099	0	True				
ANR	5596262	Identifier	is_character		5596099	0					
ANR	5596263	ExpressionStatement	adjust . x = adjust . y = 0	315:8:11124:11147	5596099	1	True				
ANR	5596264	AssignmentExpression	adjust . x = adjust . y = 0		5596099	0		=			
ANR	5596265	MemberAccess	adjust . x		5596099	0					
ANR	5596266	Identifier	adjust		5596099	0					
ANR	5596267	Identifier	x		5596099	1					
ANR	5596268	AssignmentExpression	adjust . y = 0		5596099	1		=			
ANR	5596269	MemberAccess	adjust . y		5596099	0					
ANR	5596270	Identifier	adjust		5596099	0					
ANR	5596271	Identifier	y		5596099	1					
ANR	5596272	PrimaryExpression	0		5596099	1					
ANR	5596273	ElseStatement	else		5596099	0					
ANR	5596274	ExpressionStatement	adjust = params -> adjust	317:8:11166:11189	5596099	0	True				
ANR	5596275	AssignmentExpression	adjust = params -> adjust		5596099	0		=			
ANR	5596276	Identifier	adjust		5596099	0					
ANR	5596277	PtrMemberAccess	params -> adjust		5596099	1					
ANR	5596278	Identifier	params		5596099	0					
ANR	5596279	Identifier	adjust		5596099	1					
ANR	5596280	ExpressionStatement	lst . contour_count = 0	318:4:11195:11216	5596099	42	True				
ANR	5596281	AssignmentExpression	lst . contour_count = 0		5596099	0		=			
ANR	5596282	MemberAccess	lst . contour_count		5596099	0					
ANR	5596283	Identifier	lst		5596099	0					
ANR	5596284	Identifier	contour_count		5596099	1					
ANR	5596285	PrimaryExpression	0		5596099	1					
ANR	5596286	ExpressionStatement	lst . windings = NULL	319:4:11222:11241	5596099	43	True				
ANR	5596287	AssignmentExpression	lst . windings = NULL		5596099	0		=			
ANR	5596288	MemberAccess	lst . windings		5596099	0					
ANR	5596289	Identifier	lst		5596099	0					
ANR	5596290	Identifier	windings		5596099	1					
ANR	5596291	Identifier	NULL		5596099	1					
ANR	5596292	ExpressionStatement	lst . bbox_left = fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )	320:4:11247:11309	5596099	44	True				
ANR	5596293	AssignmentExpression	lst . bbox_left = fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )		5596099	0		=			
ANR	5596294	MemberAccess	lst . bbox_left		5596099	0					
ANR	5596295	Identifier	lst		5596099	0					
ANR	5596296	Identifier	bbox_left		5596099	1					
ANR	5596297	CallExpression	fixed2int ( ibox . p . x - adjust . x - fixed_epsilon )		5596099	1					
ANR	5596298	Callee	fixed2int		5596099	0					
ANR	5596299	Identifier	fixed2int		5596099	0					
ANR	5596300	ArgumentList	ibox . p . x - adjust . x - fixed_epsilon		5596099	1					
ANR	5596301	Argument	ibox . p . x - adjust . x - fixed_epsilon		5596099	0					
ANR	5596302	AdditiveExpression	ibox . p . x - adjust . x - fixed_epsilon		5596099	0		-			
ANR	5596303	MemberAccess	ibox . p . x		5596099	0					
ANR	5596304	MemberAccess	ibox . p		5596099	0					
ANR	5596305	Identifier	ibox		5596099	0					
ANR	5596306	Identifier	p		5596099	1					
ANR	5596307	Identifier	x		5596099	1					
ANR	5596308	AdditiveExpression	adjust . x - fixed_epsilon		5596099	1		-			
ANR	5596309	MemberAccess	adjust . x		5596099	0					
ANR	5596310	Identifier	adjust		5596099	0					
ANR	5596311	Identifier	x		5596099	1					
ANR	5596312	Identifier	fixed_epsilon		5596099	1					
ANR	5596313	ExpressionStatement	lst . bbox_width = fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left	321:4:11315:11393	5596099	45	True				
ANR	5596314	AssignmentExpression	lst . bbox_width = fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left		5596099	0		=			
ANR	5596315	MemberAccess	lst . bbox_width		5596099	0					
ANR	5596316	Identifier	lst		5596099	0					
ANR	5596317	Identifier	bbox_width		5596099	1					
ANR	5596318	AdditiveExpression	fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) ) - lst . bbox_left		5596099	1		-			
ANR	5596319	CallExpression	fixed2int ( fixed_ceiling ( ibox . q . x + adjust . x ) )		5596099	0					
ANR	5596320	Callee	fixed2int		5596099	0					
ANR	5596321	Identifier	fixed2int		5596099	0					
ANR	5596322	ArgumentList	fixed_ceiling ( ibox . q . x + adjust . x )		5596099	1					
ANR	5596323	Argument	fixed_ceiling ( ibox . q . x + adjust . x )		5596099	0					
ANR	5596324	CallExpression	fixed_ceiling ( ibox . q . x + adjust . x )		5596099	0					
ANR	5596325	Callee	fixed_ceiling		5596099	0					
ANR	5596326	Identifier	fixed_ceiling		5596099	0					
ANR	5596327	ArgumentList	ibox . q . x + adjust . x		5596099	1					
ANR	5596328	Argument	ibox . q . x + adjust . x		5596099	0					
ANR	5596329	AdditiveExpression	ibox . q . x + adjust . x		5596099	0		+			
ANR	5596330	MemberAccess	ibox . q . x		5596099	0					
ANR	5596331	MemberAccess	ibox . q		5596099	0					
ANR	5596332	Identifier	ibox		5596099	0					
ANR	5596333	Identifier	q		5596099	1					
ANR	5596334	Identifier	x		5596099	1					
ANR	5596335	MemberAccess	adjust . x		5596099	1					
ANR	5596336	Identifier	adjust		5596099	0					
ANR	5596337	Identifier	x		5596099	1					
ANR	5596338	MemberAccess	lst . bbox_left		5596099	1					
ANR	5596339	Identifier	lst		5596099	0					
ANR	5596340	Identifier	bbox_left		5596099	1					
ANR	5596341	ExpressionStatement	"if_debug6m ( 'f' , pdev -> memory , ""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"" , fixed2float ( adjust . x ) , fixed2float ( adjust . y ) , fixed2float ( ibox . p . x ) , fixed2float ( ibox . p . y ) , fixed2float ( ibox . q . x ) , fixed2float ( ibox . q . y ) )"	323:4:11435:11689	5596099	46	True				
ANR	5596342	CallExpression	"if_debug6m ( 'f' , pdev -> memory , ""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"" , fixed2float ( adjust . x ) , fixed2float ( adjust . y ) , fixed2float ( ibox . p . x ) , fixed2float ( ibox . p . y ) , fixed2float ( ibox . q . x ) , fixed2float ( ibox . q . y ) )"		5596099	0					
ANR	5596343	Callee	if_debug6m		5596099	0					
ANR	5596344	Identifier	if_debug6m		5596099	0					
ANR	5596345	ArgumentList	'f'		5596099	1					
ANR	5596346	Argument	'f'		5596099	0					
ANR	5596347	PrimaryExpression	'f'		5596099	0					
ANR	5596348	Argument	pdev -> memory		5596099	1					
ANR	5596349	PtrMemberAccess	pdev -> memory		5596099	0					
ANR	5596350	Identifier	pdev		5596099	0					
ANR	5596351	Identifier	memory		5596099	1					
ANR	5596352	Argument	"""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"""		5596099	2					
ANR	5596353	PrimaryExpression	"""[f]adjust=%g,%g bbox=(%g,%g),(%g,%g)\\n"""		5596099	0					
ANR	5596354	Argument	fixed2float ( adjust . x )		5596099	3					
ANR	5596355	CallExpression	fixed2float ( adjust . x )		5596099	0					
ANR	5596356	Callee	fixed2float		5596099	0					
ANR	5596357	Identifier	fixed2float		5596099	0					
ANR	5596358	ArgumentList	adjust . x		5596099	1					
ANR	5596359	Argument	adjust . x		5596099	0					
ANR	5596360	MemberAccess	adjust . x		5596099	0					
ANR	5596361	Identifier	adjust		5596099	0					
ANR	5596362	Identifier	x		5596099	1					
ANR	5596363	Argument	fixed2float ( adjust . y )		5596099	4					
ANR	5596364	CallExpression	fixed2float ( adjust . y )		5596099	0					
ANR	5596365	Callee	fixed2float		5596099	0					
ANR	5596366	Identifier	fixed2float		5596099	0					
ANR	5596367	ArgumentList	adjust . y		5596099	1					
ANR	5596368	Argument	adjust . y		5596099	0					
ANR	5596369	MemberAccess	adjust . y		5596099	0					
ANR	5596370	Identifier	adjust		5596099	0					
ANR	5596371	Identifier	y		5596099	1					
ANR	5596372	Argument	fixed2float ( ibox . p . x )		5596099	5					
ANR	5596373	CallExpression	fixed2float ( ibox . p . x )		5596099	0					
ANR	5596374	Callee	fixed2float		5596099	0					
ANR	5596375	Identifier	fixed2float		5596099	0					
ANR	5596376	ArgumentList	ibox . p . x		5596099	1					
ANR	5596377	Argument	ibox . p . x		5596099	0					
ANR	5596378	MemberAccess	ibox . p . x		5596099	0					
ANR	5596379	MemberAccess	ibox . p		5596099	0					
ANR	5596380	Identifier	ibox		5596099	0					
ANR	5596381	Identifier	p		5596099	1					
ANR	5596382	Identifier	x		5596099	1					
ANR	5596383	Argument	fixed2float ( ibox . p . y )		5596099	6					
ANR	5596384	CallExpression	fixed2float ( ibox . p . y )		5596099	0					
ANR	5596385	Callee	fixed2float		5596099	0					
ANR	5596386	Identifier	fixed2float		5596099	0					
ANR	5596387	ArgumentList	ibox . p . y		5596099	1					
ANR	5596388	Argument	ibox . p . y		5596099	0					
ANR	5596389	MemberAccess	ibox . p . y		5596099	0					
ANR	5596390	MemberAccess	ibox . p		5596099	0					
ANR	5596391	Identifier	ibox		5596099	0					
ANR	5596392	Identifier	p		5596099	1					
ANR	5596393	Identifier	y		5596099	1					
ANR	5596394	Argument	fixed2float ( ibox . q . x )		5596099	7					
ANR	5596395	CallExpression	fixed2float ( ibox . q . x )		5596099	0					
ANR	5596396	Callee	fixed2float		5596099	0					
ANR	5596397	Identifier	fixed2float		5596099	0					
ANR	5596398	ArgumentList	ibox . q . x		5596099	1					
ANR	5596399	Argument	ibox . q . x		5596099	0					
ANR	5596400	MemberAccess	ibox . q . x		5596099	0					
ANR	5596401	MemberAccess	ibox . q		5596099	0					
ANR	5596402	Identifier	ibox		5596099	0					
ANR	5596403	Identifier	q		5596099	1					
ANR	5596404	Identifier	x		5596099	1					
ANR	5596405	Argument	fixed2float ( ibox . q . y )		5596099	8					
ANR	5596406	CallExpression	fixed2float ( ibox . q . y )		5596099	0					
ANR	5596407	Callee	fixed2float		5596099	0					
ANR	5596408	Identifier	fixed2float		5596099	0					
ANR	5596409	ArgumentList	ibox . q . y		5596099	1					
ANR	5596410	Argument	ibox . q . y		5596099	0					
ANR	5596411	MemberAccess	ibox . q . y		5596099	0					
ANR	5596412	MemberAccess	ibox . q		5596099	0					
ANR	5596413	Identifier	ibox		5596099	0					
ANR	5596414	Identifier	q		5596099	1					
ANR	5596415	Identifier	y		5596099	1					
ANR	5596416	IfStatement	if ( pcpath )		5596099	47					
ANR	5596417	Condition	pcpath	327:8:11699:11704	5596099	0	True				
ANR	5596418	Identifier	pcpath		5596099	0					
ANR	5596419	ExpressionStatement	"gx_cpath_inner_box ( pcpath , & bbox )"	328:8:11715:11748	5596099	1	True				
ANR	5596420	CallExpression	"gx_cpath_inner_box ( pcpath , & bbox )"		5596099	0					
ANR	5596421	Callee	gx_cpath_inner_box		5596099	0					
ANR	5596422	Identifier	gx_cpath_inner_box		5596099	0					
ANR	5596423	ArgumentList	pcpath		5596099	1					
ANR	5596424	Argument	pcpath		5596099	0					
ANR	5596425	Identifier	pcpath		5596099	0					
ANR	5596426	Argument	& bbox		5596099	1					
ANR	5596427	UnaryOperationExpression	& bbox		5596099	0					
ANR	5596428	UnaryOperator	&		5596099	0					
ANR	5596429	Identifier	bbox		5596099	1					
ANR	5596430	ElseStatement	else		5596099	0					
ANR	5596431	ExpressionStatement	"( * dev_proc ( dev , get_clipping_box ) ) ( dev , & bbox )"	330:8:11767:11814	5596099	0	True				
ANR	5596432	CallExpression	"( * dev_proc ( dev , get_clipping_box ) ) ( dev , & bbox )"		5596099	0					
ANR	5596433	Callee	"* dev_proc ( dev , get_clipping_box )"		5596099	0					
ANR	5596434	UnaryOperationExpression	"* dev_proc ( dev , get_clipping_box )"		5596099	0					
ANR	5596435	UnaryOperator	*		5596099	0					
ANR	5596436	CallExpression	"dev_proc ( dev , get_clipping_box )"		5596099	1					
ANR	5596437	Callee	dev_proc		5596099	0					
ANR	5596438	Identifier	dev_proc		5596099	0					
ANR	5596439	ArgumentList	dev		5596099	1					
ANR	5596440	Argument	dev		5596099	0					
ANR	5596441	Identifier	dev		5596099	0					
ANR	5596442	Argument	get_clipping_box		5596099	1					
ANR	5596443	Identifier	get_clipping_box		5596099	0					
ANR	5596444	ArgumentList	dev		5596099	1					
ANR	5596445	Argument	dev		5596099	0					
ANR	5596446	Identifier	dev		5596099	0					
ANR	5596447	Argument	& bbox		5596099	1					
ANR	5596448	UnaryOperationExpression	& bbox		5596099	0					
ANR	5596449	UnaryOperator	&		5596099	0					
ANR	5596450	Identifier	bbox		5596099	1					
ANR	5596451	IfStatement	"if ( ! rect_within ( ibox , bbox ) )"		5596099	48					
ANR	5596452	Condition	"! rect_within ( ibox , bbox )"	331:8:11824:11847	5596099	0	True				
ANR	5596453	UnaryOperationExpression	"! rect_within ( ibox , bbox )"		5596099	0					
ANR	5596454	UnaryOperator	!		5596099	0					
ANR	5596455	CallExpression	"rect_within ( ibox , bbox )"		5596099	1					
ANR	5596456	Callee	rect_within		5596099	0					
ANR	5596457	Identifier	rect_within		5596099	0					
ANR	5596458	ArgumentList	ibox		5596099	1					
ANR	5596459	Argument	ibox		5596099	0					
ANR	5596460	Identifier	ibox		5596099	0					
ANR	5596461	Argument	bbox		5596099	1					
ANR	5596462	Identifier	bbox		5596099	0					
ANR	5596463	CompoundStatement		48:34:1802:1802	5596099	1					
ANR	5596464	IfStatement	if ( pcpath )		5596099	0					
ANR	5596465	Condition	pcpath	336:12:12011:12016	5596099	0	True				
ANR	5596466	Identifier	pcpath		5596099	0					
ANR	5596467	ExpressionStatement	"gx_cpath_outer_box ( pcpath , & bbox )"	337:12:12031:12064	5596099	1	True				
ANR	5596468	CallExpression	"gx_cpath_outer_box ( pcpath , & bbox )"		5596099	0					
ANR	5596469	Callee	gx_cpath_outer_box		5596099	0					
ANR	5596470	Identifier	gx_cpath_outer_box		5596099	0					
ANR	5596471	ArgumentList	pcpath		5596099	1					
ANR	5596472	Argument	pcpath		5596099	0					
ANR	5596473	Identifier	pcpath		5596099	0					
ANR	5596474	Argument	& bbox		5596099	1					
ANR	5596475	UnaryOperationExpression	& bbox		5596099	0					
ANR	5596476	UnaryOperator	&		5596099	0					
ANR	5596477	Identifier	bbox		5596099	1					
ANR	5596478	ExpressionStatement	"if_debug4m ( 'f' , pdev -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"	338:8:12074:12267	5596099	1	True				
ANR	5596479	CallExpression	"if_debug4m ( 'f' , pdev -> memory , ""   outer_box=(%g,%g),(%g,%g)\\n"" , fixed2float ( bbox . p . x ) , fixed2float ( bbox . p . y ) , fixed2float ( bbox . q . x ) , fixed2float ( bbox . q . y ) )"		5596099	0					
ANR	5596480	Callee	if_debug4m		5596099	0					
ANR	5596481	Identifier	if_debug4m		5596099	0					
ANR	5596482	ArgumentList	'f'		5596099	1					
ANR	5596483	Argument	'f'		5596099	0					
ANR	5596484	PrimaryExpression	'f'		5596099	0					
ANR	5596485	Argument	pdev -> memory		5596099	1					
ANR	5596486	PtrMemberAccess	pdev -> memory		5596099	0					
ANR	5596487	Identifier	pdev		5596099	0					
ANR	5596488	Identifier	memory		5596099	1					
ANR	5596489	Argument	"""   outer_box=(%g,%g),(%g,%g)\\n"""		5596099	2					
ANR	5596490	PrimaryExpression	"""   outer_box=(%g,%g),(%g,%g)\\n"""		5596099	0					
ANR	5596491	Argument	fixed2float ( bbox . p . x )		5596099	3					
ANR	5596492	CallExpression	fixed2float ( bbox . p . x )		5596099	0					
ANR	5596493	Callee	fixed2float		5596099	0					
ANR	5596494	Identifier	fixed2float		5596099	0					
ANR	5596495	ArgumentList	bbox . p . x		5596099	1					
ANR	5596496	Argument	bbox . p . x		5596099	0					
ANR	5596497	MemberAccess	bbox . p . x		5596099	0					
ANR	5596498	MemberAccess	bbox . p		5596099	0					
ANR	5596499	Identifier	bbox		5596099	0					
ANR	5596500	Identifier	p		5596099	1					
ANR	5596501	Identifier	x		5596099	1					
ANR	5596502	Argument	fixed2float ( bbox . p . y )		5596099	4					
ANR	5596503	CallExpression	fixed2float ( bbox . p . y )		5596099	0					
ANR	5596504	Callee	fixed2float		5596099	0					
ANR	5596505	Identifier	fixed2float		5596099	0					
ANR	5596506	ArgumentList	bbox . p . y		5596099	1					
ANR	5596507	Argument	bbox . p . y		5596099	0					
ANR	5596508	MemberAccess	bbox . p . y		5596099	0					
ANR	5596509	MemberAccess	bbox . p		5596099	0					
ANR	5596510	Identifier	bbox		5596099	0					
ANR	5596511	Identifier	p		5596099	1					
ANR	5596512	Identifier	y		5596099	1					
ANR	5596513	Argument	fixed2float ( bbox . q . x )		5596099	5					
ANR	5596514	CallExpression	fixed2float ( bbox . q . x )		5596099	0					
ANR	5596515	Callee	fixed2float		5596099	0					
ANR	5596516	Identifier	fixed2float		5596099	0					
ANR	5596517	ArgumentList	bbox . q . x		5596099	1					
ANR	5596518	Argument	bbox . q . x		5596099	0					
ANR	5596519	MemberAccess	bbox . q . x		5596099	0					
ANR	5596520	MemberAccess	bbox . q		5596099	0					
ANR	5596521	Identifier	bbox		5596099	0					
ANR	5596522	Identifier	q		5596099	1					
ANR	5596523	Identifier	x		5596099	1					
ANR	5596524	Argument	fixed2float ( bbox . q . y )		5596099	6					
ANR	5596525	CallExpression	fixed2float ( bbox . q . y )		5596099	0					
ANR	5596526	Callee	fixed2float		5596099	0					
ANR	5596527	Identifier	fixed2float		5596099	0					
ANR	5596528	ArgumentList	bbox . q . y		5596099	1					
ANR	5596529	Argument	bbox . q . y		5596099	0					
ANR	5596530	MemberAccess	bbox . q . y		5596099	0					
ANR	5596531	MemberAccess	bbox . q		5596099	0					
ANR	5596532	Identifier	bbox		5596099	0					
ANR	5596533	Identifier	q		5596099	1					
ANR	5596534	Identifier	y		5596099	1					
ANR	5596535	ExpressionStatement	"rect_intersect ( ibox , bbox )"	341:8:12277:12303	5596099	2	True				
ANR	5596536	CallExpression	"rect_intersect ( ibox , bbox )"		5596099	0					
ANR	5596537	Callee	rect_intersect		5596099	0					
ANR	5596538	Identifier	rect_intersect		5596099	0					
ANR	5596539	ArgumentList	ibox		5596099	1					
ANR	5596540	Argument	ibox		5596099	0					
ANR	5596541	Identifier	ibox		5596099	0					
ANR	5596542	Argument	bbox		5596099	1					
ANR	5596543	Identifier	bbox		5596099	0					
ANR	5596544	IfStatement	if ( ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y )		5596099	3					
ANR	5596545	Condition	ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y	342:12:12317:12416	5596099	0	True				
ANR	5596546	OrExpression	ibox . p . x - adjust . x >= ibox . q . x + adjust . x || ibox . p . y - adjust . y >= ibox . q . y + adjust . y		5596099	0		||			
ANR	5596547	RelationalExpression	ibox . p . x - adjust . x >= ibox . q . x + adjust . x		5596099	0		>=			
ANR	5596548	AdditiveExpression	ibox . p . x - adjust . x		5596099	0		-			
ANR	5596549	MemberAccess	ibox . p . x		5596099	0					
ANR	5596550	MemberAccess	ibox . p		5596099	0					
ANR	5596551	Identifier	ibox		5596099	0					
ANR	5596552	Identifier	p		5596099	1					
ANR	5596553	Identifier	x		5596099	1					
ANR	5596554	MemberAccess	adjust . x		5596099	1					
ANR	5596555	Identifier	adjust		5596099	0					
ANR	5596556	Identifier	x		5596099	1					
ANR	5596557	AdditiveExpression	ibox . q . x + adjust . x		5596099	1		+			
ANR	5596558	MemberAccess	ibox . q . x		5596099	0					
ANR	5596559	MemberAccess	ibox . q		5596099	0					
ANR	5596560	Identifier	ibox		5596099	0					
ANR	5596561	Identifier	q		5596099	1					
ANR	5596562	Identifier	x		5596099	1					
ANR	5596563	MemberAccess	adjust . x		5596099	1					
ANR	5596564	Identifier	adjust		5596099	0					
ANR	5596565	Identifier	x		5596099	1					
ANR	5596566	RelationalExpression	ibox . p . y - adjust . y >= ibox . q . y + adjust . y		5596099	1		>=			
ANR	5596567	AdditiveExpression	ibox . p . y - adjust . y		5596099	0		-			
ANR	5596568	MemberAccess	ibox . p . y		5596099	0					
ANR	5596569	MemberAccess	ibox . p		5596099	0					
ANR	5596570	Identifier	ibox		5596099	0					
ANR	5596571	Identifier	p		5596099	1					
ANR	5596572	Identifier	y		5596099	1					
ANR	5596573	MemberAccess	adjust . y		5596099	1					
ANR	5596574	Identifier	adjust		5596099	0					
ANR	5596575	Identifier	y		5596099	1					
ANR	5596576	AdditiveExpression	ibox . q . y + adjust . y		5596099	1		+			
ANR	5596577	MemberAccess	ibox . q . y		5596099	0					
ANR	5596578	MemberAccess	ibox . q		5596099	0					
ANR	5596579	Identifier	ibox		5596099	0					
ANR	5596580	Identifier	q		5596099	1					
ANR	5596581	Identifier	y		5596099	1					
ANR	5596582	MemberAccess	adjust . y		5596099	1					
ANR	5596583	Identifier	adjust		5596099	0					
ANR	5596584	Identifier	y		5596099	1					
ANR	5596585	CompoundStatement		61:14:2384:2384	5596099	1					
ANR	5596586	ReturnStatement	return 0 ;	345:12:12500:12508	5596099	0	True				
ANR	5596587	PrimaryExpression	0		5596099	0					
ANR	5596588	IfStatement	if ( pcpath )		5596099	4					
ANR	5596589	Condition	pcpath	356:12:12913:12918	5596099	0	True				
ANR	5596590	Identifier	pcpath		5596099	0					
ANR	5596591	CompoundStatement		73:20:2873:2873	5596099	1					
ANR	5596592	ExpressionStatement	dev = ( gx_device * ) & cdev	357:12:12935:12961	5596099	0	True				
ANR	5596593	AssignmentExpression	dev = ( gx_device * ) & cdev		5596099	0		=			
ANR	5596594	Identifier	dev		5596099	0					
ANR	5596595	CastExpression	( gx_device * ) & cdev		5596099	1					
ANR	5596596	CastTarget	gx_device *		5596099	0					
ANR	5596597	UnaryOperationExpression	& cdev		5596099	1					
ANR	5596598	UnaryOperator	&		5596099	0					
ANR	5596599	Identifier	cdev		5596099	1					
ANR	5596600	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath , save_dev )"	358:12:12975:13028	5596099	1	True				
ANR	5596601	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath , save_dev )"		5596099	0					
ANR	5596602	Callee	gx_make_clip_device_on_stack		5596099	0					
ANR	5596603	Identifier	gx_make_clip_device_on_stack		5596099	0					
ANR	5596604	ArgumentList	& cdev		5596099	1					
ANR	5596605	Argument	& cdev		5596099	0					
ANR	5596606	UnaryOperationExpression	& cdev		5596099	0					
ANR	5596607	UnaryOperator	&		5596099	0					
ANR	5596608	Identifier	cdev		5596099	1					
ANR	5596609	Argument	pcpath		5596099	1					
ANR	5596610	Identifier	pcpath		5596099	0					
ANR	5596611	Argument	save_dev		5596099	2					
ANR	5596612	Identifier	save_dev		5596099	0					
ANR	5596613	ExpressionStatement	cdev . max_fill_band = save_dev -> max_fill_band	359:12:13042:13086	5596099	2	True				
ANR	5596614	AssignmentExpression	cdev . max_fill_band = save_dev -> max_fill_band		5596099	0		=			
ANR	5596615	MemberAccess	cdev . max_fill_band		5596099	0					
ANR	5596616	Identifier	cdev		5596099	0					
ANR	5596617	Identifier	max_fill_band		5596099	1					
ANR	5596618	PtrMemberAccess	save_dev -> max_fill_band		5596099	1					
ANR	5596619	Identifier	save_dev		5596099	0					
ANR	5596620	Identifier	max_fill_band		5596099	1					
ANR	5596621	ExpressionStatement	clipping = 1	360:12:13100:13112	5596099	3	True				
ANR	5596622	AssignmentExpression	clipping = 1		5596099	0		=			
ANR	5596623	Identifier	clipping		5596099	0					
ANR	5596624	PrimaryExpression	1		5596099	1					
ANR	5596625	IfStatement	if ( adjust . x == fixed_half )		5596099	49					
ANR	5596626	Condition	adjust . x == fixed_half	374:8:13689:13710	5596099	0	True				
ANR	5596627	EqualityExpression	adjust . x == fixed_half		5596099	0		==			
ANR	5596628	MemberAccess	adjust . x		5596099	0					
ANR	5596629	Identifier	adjust		5596099	0					
ANR	5596630	Identifier	x		5596099	1					
ANR	5596631	Identifier	fixed_half		5596099	1					
ANR	5596632	ExpressionStatement	"fo . adjust_left = fixed_half - fixed_epsilon , fo . adjust_right = fixed_half"	375:8:13721:13829	5596099	1	True				
ANR	5596633	Expression	"fo . adjust_left = fixed_half - fixed_epsilon , fo . adjust_right = fixed_half"		5596099	0					
ANR	5596634	AssignmentExpression	fo . adjust_left = fixed_half - fixed_epsilon		5596099	0		=			
ANR	5596635	MemberAccess	fo . adjust_left		5596099	0					
ANR	5596636	Identifier	fo		5596099	0					
ANR	5596637	Identifier	adjust_left		5596099	1					
ANR	5596638	AdditiveExpression	fixed_half - fixed_epsilon		5596099	1		-			
ANR	5596639	Identifier	fixed_half		5596099	0					
ANR	5596640	Identifier	fixed_epsilon		5596099	1					
ANR	5596641	AssignmentExpression	fo . adjust_right = fixed_half		5596099	1		=			
ANR	5596642	MemberAccess	fo . adjust_right		5596099	0					
ANR	5596643	Identifier	fo		5596099	0					
ANR	5596644	Identifier	adjust_right		5596099	1					
ANR	5596645	Identifier	fixed_half		5596099	1					
ANR	5596646	ElseStatement	else		5596099	0					
ANR	5596647	ExpressionStatement	fo . adjust_left = fo . adjust_right = adjust . x	378:8:13871:13914	5596099	0	True				
ANR	5596648	AssignmentExpression	fo . adjust_left = fo . adjust_right = adjust . x		5596099	0		=			
ANR	5596649	MemberAccess	fo . adjust_left		5596099	0					
ANR	5596650	Identifier	fo		5596099	0					
ANR	5596651	Identifier	adjust_left		5596099	1					
ANR	5596652	AssignmentExpression	fo . adjust_right = adjust . x		5596099	1		=			
ANR	5596653	MemberAccess	fo . adjust_right		5596099	0					
ANR	5596654	Identifier	fo		5596099	0					
ANR	5596655	Identifier	adjust_right		5596099	1					
ANR	5596656	MemberAccess	adjust . x		5596099	1					
ANR	5596657	Identifier	adjust		5596099	0					
ANR	5596658	Identifier	x		5596099	1					
ANR	5596659	IfStatement	if ( adjust . y == fixed_half )		5596099	50					
ANR	5596660	Condition	adjust . y == fixed_half	379:8:13924:13945	5596099	0	True				
ANR	5596661	EqualityExpression	adjust . y == fixed_half		5596099	0		==			
ANR	5596662	MemberAccess	adjust . y		5596099	0					
ANR	5596663	Identifier	adjust		5596099	0					
ANR	5596664	Identifier	y		5596099	1					
ANR	5596665	Identifier	fixed_half		5596099	1					
ANR	5596666	ExpressionStatement	"fo . adjust_below = fixed_half - fixed_epsilon , fo . adjust_above = fixed_half"	380:8:13956:14065	5596099	1	True				
ANR	5596667	Expression	"fo . adjust_below = fixed_half - fixed_epsilon , fo . adjust_above = fixed_half"		5596099	0					
ANR	5596668	AssignmentExpression	fo . adjust_below = fixed_half - fixed_epsilon		5596099	0		=			
ANR	5596669	MemberAccess	fo . adjust_below		5596099	0					
ANR	5596670	Identifier	fo		5596099	0					
ANR	5596671	Identifier	adjust_below		5596099	1					
ANR	5596672	AdditiveExpression	fixed_half - fixed_epsilon		5596099	1		-			
ANR	5596673	Identifier	fixed_half		5596099	0					
ANR	5596674	Identifier	fixed_epsilon		5596099	1					
ANR	5596675	AssignmentExpression	fo . adjust_above = fixed_half		5596099	1		=			
ANR	5596676	MemberAccess	fo . adjust_above		5596099	0					
ANR	5596677	Identifier	fo		5596099	0					
ANR	5596678	Identifier	adjust_above		5596099	1					
ANR	5596679	Identifier	fixed_half		5596099	1					
ANR	5596680	ElseStatement	else		5596099	0					
ANR	5596681	ExpressionStatement	fo . adjust_below = fo . adjust_above = adjust . y	383:8:14107:14151	5596099	0	True				
ANR	5596682	AssignmentExpression	fo . adjust_below = fo . adjust_above = adjust . y		5596099	0		=			
ANR	5596683	MemberAccess	fo . adjust_below		5596099	0					
ANR	5596684	Identifier	fo		5596099	0					
ANR	5596685	Identifier	adjust_below		5596099	1					
ANR	5596686	AssignmentExpression	fo . adjust_above = adjust . y		5596099	1		=			
ANR	5596687	MemberAccess	fo . adjust_above		5596099	0					
ANR	5596688	Identifier	fo		5596099	0					
ANR	5596689	Identifier	adjust_above		5596099	1					
ANR	5596690	MemberAccess	adjust . y		5596099	1					
ANR	5596691	Identifier	adjust		5596099	0					
ANR	5596692	Identifier	y		5596099	1					
ANR	5596693	ExpressionStatement	sbox . p . x = ibox . p . x - adjust . x	384:4:14157:14187	5596099	51	True				
ANR	5596694	AssignmentExpression	sbox . p . x = ibox . p . x - adjust . x		5596099	0		=			
ANR	5596695	MemberAccess	sbox . p . x		5596099	0					
ANR	5596696	MemberAccess	sbox . p		5596099	0					
ANR	5596697	Identifier	sbox		5596099	0					
ANR	5596698	Identifier	p		5596099	1					
ANR	5596699	Identifier	x		5596099	1					
ANR	5596700	AdditiveExpression	ibox . p . x - adjust . x		5596099	1		-			
ANR	5596701	MemberAccess	ibox . p . x		5596099	0					
ANR	5596702	MemberAccess	ibox . p		5596099	0					
ANR	5596703	Identifier	ibox		5596099	0					
ANR	5596704	Identifier	p		5596099	1					
ANR	5596705	Identifier	x		5596099	1					
ANR	5596706	MemberAccess	adjust . x		5596099	1					
ANR	5596707	Identifier	adjust		5596099	0					
ANR	5596708	Identifier	x		5596099	1					
ANR	5596709	ExpressionStatement	sbox . p . y = ibox . p . y - adjust . y	385:4:14193:14223	5596099	52	True				
ANR	5596710	AssignmentExpression	sbox . p . y = ibox . p . y - adjust . y		5596099	0		=			
ANR	5596711	MemberAccess	sbox . p . y		5596099	0					
ANR	5596712	MemberAccess	sbox . p		5596099	0					
ANR	5596713	Identifier	sbox		5596099	0					
ANR	5596714	Identifier	p		5596099	1					
ANR	5596715	Identifier	y		5596099	1					
ANR	5596716	AdditiveExpression	ibox . p . y - adjust . y		5596099	1		-			
ANR	5596717	MemberAccess	ibox . p . y		5596099	0					
ANR	5596718	MemberAccess	ibox . p		5596099	0					
ANR	5596719	Identifier	ibox		5596099	0					
ANR	5596720	Identifier	p		5596099	1					
ANR	5596721	Identifier	y		5596099	1					
ANR	5596722	MemberAccess	adjust . y		5596099	1					
ANR	5596723	Identifier	adjust		5596099	0					
ANR	5596724	Identifier	y		5596099	1					
ANR	5596725	ExpressionStatement	sbox . q . x = ibox . q . x + adjust . x	386:4:14229:14259	5596099	53	True				
ANR	5596726	AssignmentExpression	sbox . q . x = ibox . q . x + adjust . x		5596099	0		=			
ANR	5596727	MemberAccess	sbox . q . x		5596099	0					
ANR	5596728	MemberAccess	sbox . q		5596099	0					
ANR	5596729	Identifier	sbox		5596099	0					
ANR	5596730	Identifier	q		5596099	1					
ANR	5596731	Identifier	x		5596099	1					
ANR	5596732	AdditiveExpression	ibox . q . x + adjust . x		5596099	1		+			
ANR	5596733	MemberAccess	ibox . q . x		5596099	0					
ANR	5596734	MemberAccess	ibox . q		5596099	0					
ANR	5596735	Identifier	ibox		5596099	0					
ANR	5596736	Identifier	q		5596099	1					
ANR	5596737	Identifier	x		5596099	1					
ANR	5596738	MemberAccess	adjust . x		5596099	1					
ANR	5596739	Identifier	adjust		5596099	0					
ANR	5596740	Identifier	x		5596099	1					
ANR	5596741	ExpressionStatement	sbox . q . y = ibox . q . y + adjust . y	387:4:14265:14295	5596099	54	True				
ANR	5596742	AssignmentExpression	sbox . q . y = ibox . q . y + adjust . y		5596099	0		=			
ANR	5596743	MemberAccess	sbox . q . y		5596099	0					
ANR	5596744	MemberAccess	sbox . q		5596099	0					
ANR	5596745	Identifier	sbox		5596099	0					
ANR	5596746	Identifier	q		5596099	1					
ANR	5596747	Identifier	y		5596099	1					
ANR	5596748	AdditiveExpression	ibox . q . y + adjust . y		5596099	1		+			
ANR	5596749	MemberAccess	ibox . q . y		5596099	0					
ANR	5596750	MemberAccess	ibox . q		5596099	0					
ANR	5596751	Identifier	ibox		5596099	0					
ANR	5596752	Identifier	q		5596099	1					
ANR	5596753	Identifier	y		5596099	1					
ANR	5596754	MemberAccess	adjust . y		5596099	1					
ANR	5596755	Identifier	adjust		5596099	0					
ANR	5596756	Identifier	y		5596099	1					
ANR	5596757	ExpressionStatement	fo . pdevc = pdevc	388:4:14301:14317	5596099	55	True				
ANR	5596758	AssignmentExpression	fo . pdevc = pdevc		5596099	0		=			
ANR	5596759	MemberAccess	fo . pdevc		5596099	0					
ANR	5596760	Identifier	fo		5596099	0					
ANR	5596761	Identifier	pdevc		5596099	1					
ANR	5596762	Identifier	pdevc		5596099	1					
ANR	5596763	ExpressionStatement	fo . lop = lop	389:4:14323:14335	5596099	56	True				
ANR	5596764	AssignmentExpression	fo . lop = lop		5596099	0		=			
ANR	5596765	MemberAccess	fo . lop		5596099	0					
ANR	5596766	Identifier	fo		5596099	0					
ANR	5596767	Identifier	lop		5596099	1					
ANR	5596768	Identifier	lop		5596099	1					
ANR	5596769	ExpressionStatement	fo . fixed_flat = float2fixed ( params -> flatness )	390:4:14341:14386	5596099	57	True				
ANR	5596770	AssignmentExpression	fo . fixed_flat = float2fixed ( params -> flatness )		5596099	0		=			
ANR	5596771	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5596772	Identifier	fo		5596099	0					
ANR	5596773	Identifier	fixed_flat		5596099	1					
ANR	5596774	CallExpression	float2fixed ( params -> flatness )		5596099	1					
ANR	5596775	Callee	float2fixed		5596099	0					
ANR	5596776	Identifier	float2fixed		5596099	0					
ANR	5596777	ArgumentList	params -> flatness		5596099	1					
ANR	5596778	Argument	params -> flatness		5596099	0					
ANR	5596779	PtrMemberAccess	params -> flatness		5596099	0					
ANR	5596780	Identifier	params		5596099	0					
ANR	5596781	Identifier	flatness		5596099	1					
ANR	5596782	ExpressionStatement	fo . ymin = ibox . p . y	391:4:14392:14410	5596099	58	True				
ANR	5596783	AssignmentExpression	fo . ymin = ibox . p . y		5596099	0		=			
ANR	5596784	MemberAccess	fo . ymin		5596099	0					
ANR	5596785	Identifier	fo		5596099	0					
ANR	5596786	Identifier	ymin		5596099	1					
ANR	5596787	MemberAccess	ibox . p . y		5596099	1					
ANR	5596788	MemberAccess	ibox . p		5596099	0					
ANR	5596789	Identifier	ibox		5596099	0					
ANR	5596790	Identifier	p		5596099	1					
ANR	5596791	Identifier	y		5596099	1					
ANR	5596792	ExpressionStatement	fo . ymax = ibox . q . y	392:4:14416:14434	5596099	59	True				
ANR	5596793	AssignmentExpression	fo . ymax = ibox . q . y		5596099	0		=			
ANR	5596794	MemberAccess	fo . ymax		5596099	0					
ANR	5596795	Identifier	fo		5596099	0					
ANR	5596796	Identifier	ymax		5596099	1					
ANR	5596797	MemberAccess	ibox . q . y		5596099	1					
ANR	5596798	MemberAccess	ibox . q		5596099	0					
ANR	5596799	Identifier	ibox		5596099	0					
ANR	5596800	Identifier	q		5596099	1					
ANR	5596801	Identifier	y		5596099	1					
ANR	5596802	ExpressionStatement	fo . dev = dev	393:4:14440:14452	5596099	60	True				
ANR	5596803	AssignmentExpression	fo . dev = dev		5596099	0		=			
ANR	5596804	MemberAccess	fo . dev		5596099	0					
ANR	5596805	Identifier	fo		5596099	0					
ANR	5596806	Identifier	dev		5596099	1					
ANR	5596807	Identifier	dev		5596099	1					
ANR	5596808	ExpressionStatement	fo . pbox = & sbox	394:4:14458:14473	5596099	61	True				
ANR	5596809	AssignmentExpression	fo . pbox = & sbox		5596099	0		=			
ANR	5596810	MemberAccess	fo . pbox		5596099	0					
ANR	5596811	Identifier	fo		5596099	0					
ANR	5596812	Identifier	pbox		5596099	1					
ANR	5596813	UnaryOperationExpression	& sbox		5596099	1					
ANR	5596814	UnaryOperator	&		5596099	0					
ANR	5596815	Identifier	sbox		5596099	1					
ANR	5596816	ExpressionStatement	fo . rule = params -> rule	395:4:14479:14501	5596099	62	True				
ANR	5596817	AssignmentExpression	fo . rule = params -> rule		5596099	0		=			
ANR	5596818	MemberAccess	fo . rule		5596099	0					
ANR	5596819	Identifier	fo		5596099	0					
ANR	5596820	Identifier	rule		5596099	1					
ANR	5596821	PtrMemberAccess	params -> rule		5596099	1					
ANR	5596822	Identifier	params		5596099	0					
ANR	5596823	Identifier	rule		5596099	1					
ANR	5596824	ExpressionStatement	fo . is_spotan = is_spotan_device ( dev )	396:4:14507:14543	5596099	63	True				
ANR	5596825	AssignmentExpression	fo . is_spotan = is_spotan_device ( dev )		5596099	0		=			
ANR	5596826	MemberAccess	fo . is_spotan		5596099	0					
ANR	5596827	Identifier	fo		5596099	0					
ANR	5596828	Identifier	is_spotan		5596099	1					
ANR	5596829	CallExpression	is_spotan_device ( dev )		5596099	1					
ANR	5596830	Callee	is_spotan_device		5596099	0					
ANR	5596831	Identifier	is_spotan_device		5596099	0					
ANR	5596832	ArgumentList	dev		5596099	1					
ANR	5596833	Argument	dev		5596099	0					
ANR	5596834	Identifier	dev		5596099	0					
ANR	5596835	ExpressionStatement	"fo . fill_direct = color_writes_pure ( pdevc , lop )"	397:4:14549:14595	5596099	64	True				
ANR	5596836	AssignmentExpression	"fo . fill_direct = color_writes_pure ( pdevc , lop )"		5596099	0		=			
ANR	5596837	MemberAccess	fo . fill_direct		5596099	0					
ANR	5596838	Identifier	fo		5596099	0					
ANR	5596839	Identifier	fill_direct		5596099	1					
ANR	5596840	CallExpression	"color_writes_pure ( pdevc , lop )"		5596099	1					
ANR	5596841	Callee	color_writes_pure		5596099	0					
ANR	5596842	Identifier	color_writes_pure		5596099	0					
ANR	5596843	ArgumentList	pdevc		5596099	1					
ANR	5596844	Argument	pdevc		5596099	0					
ANR	5596845	Identifier	pdevc		5596099	0					
ANR	5596846	Argument	lop		5596099	1					
ANR	5596847	Identifier	lop		5596099	0					
ANR	5596848	ExpressionStatement	"fo . fill_rect = ( fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL )"	398:4:14601:14671	5596099	65	True				
ANR	5596849	AssignmentExpression	"fo . fill_rect = ( fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL )"		5596099	0		=			
ANR	5596850	MemberAccess	fo . fill_rect		5596099	0					
ANR	5596851	Identifier	fo		5596099	0					
ANR	5596852	Identifier	fill_rect		5596099	1					
ANR	5596853	ConditionalExpression	"fo . fill_direct ? dev_proc ( dev , fill_rectangle ) : NULL"		5596099	1					
ANR	5596854	Condition	fo . fill_direct		5596099	0					
ANR	5596855	MemberAccess	fo . fill_direct		5596099	0					
ANR	5596856	Identifier	fo		5596099	0					
ANR	5596857	Identifier	fill_direct		5596099	1					
ANR	5596858	CallExpression	"dev_proc ( dev , fill_rectangle )"		5596099	1					
ANR	5596859	Callee	dev_proc		5596099	0					
ANR	5596860	Identifier	dev_proc		5596099	0					
ANR	5596861	ArgumentList	dev		5596099	1					
ANR	5596862	Argument	dev		5596099	0					
ANR	5596863	Identifier	dev		5596099	0					
ANR	5596864	Argument	fill_rectangle		5596099	1					
ANR	5596865	Identifier	fill_rectangle		5596099	0					
ANR	5596866	Identifier	NULL		5596099	2					
ANR	5596867	ExpressionStatement	"fo . fill_trap = dev_proc ( dev , fill_trapezoid )"	399:4:14677:14721	5596099	66	True				
ANR	5596868	AssignmentExpression	"fo . fill_trap = dev_proc ( dev , fill_trapezoid )"		5596099	0		=			
ANR	5596869	MemberAccess	fo . fill_trap		5596099	0					
ANR	5596870	Identifier	fo		5596099	0					
ANR	5596871	Identifier	fill_trap		5596099	1					
ANR	5596872	CallExpression	"dev_proc ( dev , fill_trapezoid )"		5596099	1					
ANR	5596873	Callee	dev_proc		5596099	0					
ANR	5596874	Identifier	dev_proc		5596099	0					
ANR	5596875	ArgumentList	dev		5596099	1					
ANR	5596876	Argument	dev		5596099	0					
ANR	5596877	Identifier	dev		5596099	0					
ANR	5596878	Argument	fill_trapezoid		5596099	1					
ANR	5596879	Identifier	fill_trapezoid		5596099	0					
ANR	5596880	ExpressionStatement	fill_by_trapezoids = ( ! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan )	417:4:15433:15551	5596099	67	True				
ANR	5596881	AssignmentExpression	fill_by_trapezoids = ( ! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan )		5596099	0		=			
ANR	5596882	Identifier	fill_by_trapezoids		5596099	0					
ANR	5596883	OrExpression	! gx_path_has_curves ( ppath ) || params -> flatness >= 1.0 || fo . is_spotan		5596099	1		||			
ANR	5596884	UnaryOperationExpression	! gx_path_has_curves ( ppath )		5596099	0					
ANR	5596885	UnaryOperator	!		5596099	0					
ANR	5596886	CallExpression	gx_path_has_curves ( ppath )		5596099	1					
ANR	5596887	Callee	gx_path_has_curves		5596099	0					
ANR	5596888	Identifier	gx_path_has_curves		5596099	0					
ANR	5596889	ArgumentList	ppath		5596099	1					
ANR	5596890	Argument	ppath		5596099	0					
ANR	5596891	Identifier	ppath		5596099	0					
ANR	5596892	OrExpression	params -> flatness >= 1.0 || fo . is_spotan		5596099	1		||			
ANR	5596893	RelationalExpression	params -> flatness >= 1.0		5596099	0		>=			
ANR	5596894	PtrMemberAccess	params -> flatness		5596099	0					
ANR	5596895	Identifier	params		5596099	0					
ANR	5596896	Identifier	flatness		5596099	1					
ANR	5596897	PrimaryExpression	1.0		5596099	1					
ANR	5596898	MemberAccess	fo . is_spotan		5596099	1					
ANR	5596899	Identifier	fo		5596099	0					
ANR	5596900	Identifier	is_spotan		5596099	1					
ANR	5596901	IfStatement	if ( fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop ) )		5596099	68					
ANR	5596902	Condition	fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop )	420:8:15562:15623	5596099	0	True				
ANR	5596903	AndExpression	fill_by_trapezoids && ! fo . is_spotan && ! lop_is_idempotent ( lop )		5596099	0		&&			
ANR	5596904	Identifier	fill_by_trapezoids		5596099	0					
ANR	5596905	AndExpression	! fo . is_spotan && ! lop_is_idempotent ( lop )		5596099	1		&&			
ANR	5596906	UnaryOperationExpression	! fo . is_spotan		5596099	0					
ANR	5596907	UnaryOperator	!		5596099	0					
ANR	5596908	MemberAccess	fo . is_spotan		5596099	1					
ANR	5596909	Identifier	fo		5596099	0					
ANR	5596910	Identifier	is_spotan		5596099	1					
ANR	5596911	UnaryOperationExpression	! lop_is_idempotent ( lop )		5596099	1					
ANR	5596912	UnaryOperator	!		5596099	0					
ANR	5596913	CallExpression	lop_is_idempotent ( lop )		5596099	1					
ANR	5596914	Callee	lop_is_idempotent		5596099	0					
ANR	5596915	Identifier	lop_is_idempotent		5596099	0					
ANR	5596916	ArgumentList	lop		5596099	1					
ANR	5596917	Argument	lop		5596099	0					
ANR	5596918	Identifier	lop		5596099	0					
ANR	5596919	CompoundStatement		138:8:5588:5606	5596099	1					
ANR	5596920	IdentifierDeclStatement	gs_fixed_rect rbox ;	421:8:15636:15654	5596099	0	True				
ANR	5596921	IdentifierDecl	rbox		5596099	0					
ANR	5596922	IdentifierDeclType	gs_fixed_rect		5596099	0					
ANR	5596923	Identifier	rbox		5596099	1					
ANR	5596924	IfStatement	"if ( gx_path_is_rectangular ( ppath , & rbox ) )"		5596099	1					
ANR	5596925	Condition	"gx_path_is_rectangular ( ppath , & rbox )"	423:12:15669:15704	5596099	0	True				
ANR	5596926	CallExpression	"gx_path_is_rectangular ( ppath , & rbox )"		5596099	0					
ANR	5596927	Callee	gx_path_is_rectangular		5596099	0					
ANR	5596928	Identifier	gx_path_is_rectangular		5596099	0					
ANR	5596929	ArgumentList	ppath		5596099	1					
ANR	5596930	Argument	ppath		5596099	0					
ANR	5596931	Identifier	ppath		5596099	0					
ANR	5596932	Argument	& rbox		5596099	1					
ANR	5596933	UnaryOperationExpression	& rbox		5596099	0					
ANR	5596934	UnaryOperator	&		5596099	0					
ANR	5596935	Identifier	rbox		5596099	1					
ANR	5596936	CompoundStatement		144:12:5879:5934	5596099	1					
ANR	5596937	IdentifierDeclStatement	int x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left ) ;	424:12:15721:15775	5596099	0	True				
ANR	5596938	IdentifierDecl	x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left )		5596099	0					
ANR	5596939	IdentifierDeclType	int		5596099	0					
ANR	5596940	Identifier	x0		5596099	1					
ANR	5596941	AssignmentExpression	x0 = fixed2int_pixround ( rbox . p . x - fo . adjust_left )		5596099	2		=			
ANR	5596942	Identifier	x0		5596099	0					
ANR	5596943	CallExpression	fixed2int_pixround ( rbox . p . x - fo . adjust_left )		5596099	1					
ANR	5596944	Callee	fixed2int_pixround		5596099	0					
ANR	5596945	Identifier	fixed2int_pixround		5596099	0					
ANR	5596946	ArgumentList	rbox . p . x - fo . adjust_left		5596099	1					
ANR	5596947	Argument	rbox . p . x - fo . adjust_left		5596099	0					
ANR	5596948	AdditiveExpression	rbox . p . x - fo . adjust_left		5596099	0		-			
ANR	5596949	MemberAccess	rbox . p . x		5596099	0					
ANR	5596950	MemberAccess	rbox . p		5596099	0					
ANR	5596951	Identifier	rbox		5596099	0					
ANR	5596952	Identifier	p		5596099	1					
ANR	5596953	Identifier	x		5596099	1					
ANR	5596954	MemberAccess	fo . adjust_left		5596099	1					
ANR	5596955	Identifier	fo		5596099	0					
ANR	5596956	Identifier	adjust_left		5596099	1					
ANR	5596957	IdentifierDeclStatement	int y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below ) ;	425:12:15789:15844	5596099	1	True				
ANR	5596958	IdentifierDecl	y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below )		5596099	0					
ANR	5596959	IdentifierDeclType	int		5596099	0					
ANR	5596960	Identifier	y0		5596099	1					
ANR	5596961	AssignmentExpression	y0 = fixed2int_pixround ( rbox . p . y - fo . adjust_below )		5596099	2		=			
ANR	5596962	Identifier	y0		5596099	0					
ANR	5596963	CallExpression	fixed2int_pixround ( rbox . p . y - fo . adjust_below )		5596099	1					
ANR	5596964	Callee	fixed2int_pixround		5596099	0					
ANR	5596965	Identifier	fixed2int_pixround		5596099	0					
ANR	5596966	ArgumentList	rbox . p . y - fo . adjust_below		5596099	1					
ANR	5596967	Argument	rbox . p . y - fo . adjust_below		5596099	0					
ANR	5596968	AdditiveExpression	rbox . p . y - fo . adjust_below		5596099	0		-			
ANR	5596969	MemberAccess	rbox . p . y		5596099	0					
ANR	5596970	MemberAccess	rbox . p		5596099	0					
ANR	5596971	Identifier	rbox		5596099	0					
ANR	5596972	Identifier	p		5596099	1					
ANR	5596973	Identifier	y		5596099	1					
ANR	5596974	MemberAccess	fo . adjust_below		5596099	1					
ANR	5596975	Identifier	fo		5596099	0					
ANR	5596976	Identifier	adjust_below		5596099	1					
ANR	5596977	IdentifierDeclStatement	int x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right ) ;	426:12:15858:15913	5596099	2	True				
ANR	5596978	IdentifierDecl	x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right )		5596099	0					
ANR	5596979	IdentifierDeclType	int		5596099	0					
ANR	5596980	Identifier	x1		5596099	1					
ANR	5596981	AssignmentExpression	x1 = fixed2int_pixround ( rbox . q . x + fo . adjust_right )		5596099	2		=			
ANR	5596982	Identifier	x1		5596099	0					
ANR	5596983	CallExpression	fixed2int_pixround ( rbox . q . x + fo . adjust_right )		5596099	1					
ANR	5596984	Callee	fixed2int_pixround		5596099	0					
ANR	5596985	Identifier	fixed2int_pixround		5596099	0					
ANR	5596986	ArgumentList	rbox . q . x + fo . adjust_right		5596099	1					
ANR	5596987	Argument	rbox . q . x + fo . adjust_right		5596099	0					
ANR	5596988	AdditiveExpression	rbox . q . x + fo . adjust_right		5596099	0		+			
ANR	5596989	MemberAccess	rbox . q . x		5596099	0					
ANR	5596990	MemberAccess	rbox . q		5596099	0					
ANR	5596991	Identifier	rbox		5596099	0					
ANR	5596992	Identifier	q		5596099	1					
ANR	5596993	Identifier	x		5596099	1					
ANR	5596994	MemberAccess	fo . adjust_right		5596099	1					
ANR	5596995	Identifier	fo		5596099	0					
ANR	5596996	Identifier	adjust_right		5596099	1					
ANR	5596997	IdentifierDeclStatement	int y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above ) ;	427:12:15927:15982	5596099	3	True				
ANR	5596998	IdentifierDecl	y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above )		5596099	0					
ANR	5596999	IdentifierDeclType	int		5596099	0					
ANR	5597000	Identifier	y1		5596099	1					
ANR	5597001	AssignmentExpression	y1 = fixed2int_pixround ( rbox . q . y + fo . adjust_above )		5596099	2		=			
ANR	5597002	Identifier	y1		5596099	0					
ANR	5597003	CallExpression	fixed2int_pixround ( rbox . q . y + fo . adjust_above )		5596099	1					
ANR	5597004	Callee	fixed2int_pixround		5596099	0					
ANR	5597005	Identifier	fixed2int_pixround		5596099	0					
ANR	5597006	ArgumentList	rbox . q . y + fo . adjust_above		5596099	1					
ANR	5597007	Argument	rbox . q . y + fo . adjust_above		5596099	0					
ANR	5597008	AdditiveExpression	rbox . q . y + fo . adjust_above		5596099	0		+			
ANR	5597009	MemberAccess	rbox . q . y		5596099	0					
ANR	5597010	MemberAccess	rbox . q		5596099	0					
ANR	5597011	Identifier	rbox		5596099	0					
ANR	5597012	Identifier	q		5596099	1					
ANR	5597013	Identifier	y		5596099	1					
ANR	5597014	MemberAccess	fo . adjust_above		5596099	1					
ANR	5597015	Identifier	fo		5596099	0					
ANR	5597016	Identifier	adjust_above		5596099	1					
ANR	5597017	ReturnStatement	"return gx_fill_rectangle_device_rop ( x0 , y0 , x1 - x0 , y1 - y0 , pdevc , dev , lop ) ;"	429:12:15997:16123	5596099	4	True				
ANR	5597018	CallExpression	"gx_fill_rectangle_device_rop ( x0 , y0 , x1 - x0 , y1 - y0 , pdevc , dev , lop )"		5596099	0					
ANR	5597019	Callee	gx_fill_rectangle_device_rop		5596099	0					
ANR	5597020	Identifier	gx_fill_rectangle_device_rop		5596099	0					
ANR	5597021	ArgumentList	x0		5596099	1					
ANR	5597022	Argument	x0		5596099	0					
ANR	5597023	Identifier	x0		5596099	0					
ANR	5597024	Argument	y0		5596099	1					
ANR	5597025	Identifier	y0		5596099	0					
ANR	5597026	Argument	x1 - x0		5596099	2					
ANR	5597027	AdditiveExpression	x1 - x0		5596099	0		-			
ANR	5597028	Identifier	x1		5596099	0					
ANR	5597029	Identifier	x0		5596099	1					
ANR	5597030	Argument	y1 - y0		5596099	3					
ANR	5597031	AdditiveExpression	y1 - y0		5596099	0		-			
ANR	5597032	Identifier	y1		5596099	0					
ANR	5597033	Identifier	y0		5596099	1					
ANR	5597034	Argument	pdevc		5596099	4					
ANR	5597035	Identifier	pdevc		5596099	0					
ANR	5597036	Argument	dev		5596099	5					
ANR	5597037	Identifier	dev		5596099	0					
ANR	5597038	Argument	lop		5596099	6					
ANR	5597039	Identifier	lop		5596099	0					
ANR	5597040	IfStatement	if ( fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above )		5596099	2					
ANR	5597041	Condition	fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above	432:12:16147:16214	5596099	0	True				
ANR	5597042	InclusiveOrExpression	fo . adjust_left | fo . adjust_right | fo . adjust_below | fo . adjust_above		5596099	0		|			
ANR	5597043	MemberAccess	fo . adjust_left		5596099	0					
ANR	5597044	Identifier	fo		5596099	0					
ANR	5597045	Identifier	adjust_left		5596099	1					
ANR	5597046	InclusiveOrExpression	fo . adjust_right | fo . adjust_below | fo . adjust_above		5596099	1		|			
ANR	5597047	MemberAccess	fo . adjust_right		5596099	0					
ANR	5597048	Identifier	fo		5596099	0					
ANR	5597049	Identifier	adjust_right		5596099	1					
ANR	5597050	InclusiveOrExpression	fo . adjust_below | fo . adjust_above		5596099	1		|			
ANR	5597051	MemberAccess	fo . adjust_below		5596099	0					
ANR	5597052	Identifier	fo		5596099	0					
ANR	5597053	Identifier	adjust_below		5596099	1					
ANR	5597054	MemberAccess	fo . adjust_above		5596099	1					
ANR	5597055	Identifier	fo		5596099	0					
ANR	5597056	Identifier	adjust_above		5596099	1					
ANR	5597057	ExpressionStatement	fill_by_trapezoids = false	433:12:16229:16255	5596099	1	True				
ANR	5597058	AssignmentExpression	fill_by_trapezoids = false		5596099	0		=			
ANR	5597059	Identifier	fill_by_trapezoids		5596099	0					
ANR	5597060	Identifier	false		5596099	1					
ANR	5597061	IfStatement	if ( ! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) ) )		5596099	69					
ANR	5597062	Condition	! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) )	436:8:16306:16521	5596099	0	True				
ANR	5597063	AndExpression	! fo . is_spotan && ( ( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER ) )		5596099	0		&&			
ANR	5597064	UnaryOperationExpression	! fo . is_spotan		5596099	0					
ANR	5597065	UnaryOperator	!		5596099	0					
ANR	5597066	MemberAccess	fo . is_spotan		5596099	1					
ANR	5597067	Identifier	fo		5596099	0					
ANR	5597068	Identifier	is_spotan		5596099	1					
ANR	5597069	OrExpression	( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER || ( scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER )		5596099	1		||			
ANR	5597070	RelationalExpression	( scanconverter = gs_getscanconverter ( pdev -> memory ) ) >= GS_SCANCONVERTER_EDGEBUFFER		5596099	0		>=			
ANR	5597071	AssignmentExpression	scanconverter = gs_getscanconverter ( pdev -> memory )		5596099	0		=			
ANR	5597072	Identifier	scanconverter		5596099	0					
ANR	5597073	CallExpression	gs_getscanconverter ( pdev -> memory )		5596099	1					
ANR	5597074	Callee	gs_getscanconverter		5596099	0					
ANR	5597075	Identifier	gs_getscanconverter		5596099	0					
ANR	5597076	ArgumentList	pdev -> memory		5596099	1					
ANR	5597077	Argument	pdev -> memory		5596099	0					
ANR	5597078	PtrMemberAccess	pdev -> memory		5596099	0					
ANR	5597079	Identifier	pdev		5596099	0					
ANR	5597080	Identifier	memory		5596099	1					
ANR	5597081	Identifier	GS_SCANCONVERTER_EDGEBUFFER		5596099	1					
ANR	5597082	AndExpression	scanconverter == GS_SCANCONVERTER_DEFAULT && GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		5596099	1		&&			
ANR	5597083	EqualityExpression	scanconverter == GS_SCANCONVERTER_DEFAULT		5596099	0		==			
ANR	5597084	Identifier	scanconverter		5596099	0					
ANR	5597085	Identifier	GS_SCANCONVERTER_DEFAULT		5596099	1					
ANR	5597086	Identifier	GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		5596099	1					
ANR	5597087	CompoundStatement		155:8:6486:6510	5596099	1					
ANR	5597088	IdentifierDeclStatement	gx_edgebuffer eb = { 0 } ;	438:8:16534:16558	5596099	0	True				
ANR	5597089	IdentifierDecl	eb = { 0 }		5596099	0					
ANR	5597090	IdentifierDeclType	gx_edgebuffer		5596099	0					
ANR	5597091	Identifier	eb		5596099	1					
ANR	5597092	AssignmentExpression	eb = { 0 }		5596099	2		=			
ANR	5597093	Identifier	eb		5596099	0					
ANR	5597094	InitializerList	0		5596099	1					
ANR	5597095	PrimaryExpression	0		5596099	0					
ANR	5597096	IfStatement	if ( ! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath ) )		5596099	1					
ANR	5597097	Condition	! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath )	441:12:16694:16755	5596099	0	True				
ANR	5597098	AndExpression	! big_path && pgs -> accurate_curves && gx_path_has_curves ( ppath )		5596099	0		&&			
ANR	5597099	UnaryOperationExpression	! big_path		5596099	0					
ANR	5597100	UnaryOperator	!		5596099	0					
ANR	5597101	Identifier	big_path		5596099	1					
ANR	5597102	AndExpression	pgs -> accurate_curves && gx_path_has_curves ( ppath )		5596099	1		&&			
ANR	5597103	PtrMemberAccess	pgs -> accurate_curves		5596099	0					
ANR	5597104	Identifier	pgs		5596099	0					
ANR	5597105	Identifier	accurate_curves		5596099	1					
ANR	5597106	CallExpression	gx_path_has_curves ( ppath )		5596099	1					
ANR	5597107	Callee	gx_path_has_curves		5596099	0					
ANR	5597108	Identifier	gx_path_has_curves		5596099	0					
ANR	5597109	ArgumentList	ppath		5596099	1					
ANR	5597110	Argument	ppath		5596099	0					
ANR	5597111	Identifier	ppath		5596099	0					
ANR	5597112	CompoundStatement		159:8:6718:6718	5596099	1					
ANR	5597113	ExpressionStatement	"gx_path_init_local ( & ffpath , ppath -> memory )"	443:12:16780:16822	5596099	0	True				
ANR	5597114	CallExpression	"gx_path_init_local ( & ffpath , ppath -> memory )"		5596099	0					
ANR	5597115	Callee	gx_path_init_local		5596099	0					
ANR	5597116	Identifier	gx_path_init_local		5596099	0					
ANR	5597117	ArgumentList	& ffpath		5596099	1					
ANR	5597118	Argument	& ffpath		5596099	0					
ANR	5597119	UnaryOperationExpression	& ffpath		5596099	0					
ANR	5597120	UnaryOperator	&		5596099	0					
ANR	5597121	Identifier	ffpath		5596099	1					
ANR	5597122	Argument	ppath -> memory		5596099	1					
ANR	5597123	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597124	Identifier	ppath		5596099	0					
ANR	5597125	Identifier	memory		5596099	1					
ANR	5597126	ExpressionStatement	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"	444:12:16836:16975	5596099	1	True				
ANR	5597127	AssignmentExpression	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"		5596099	0		=			
ANR	5597128	Identifier	code		5596099	0					
ANR	5597129	CallExpression	"gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | pco_accurate )"		5596099	1					
ANR	5597130	Callee	gx_path_copy_reducing		5596099	0					
ANR	5597131	Identifier	gx_path_copy_reducing		5596099	0					
ANR	5597132	ArgumentList	ppath		5596099	1					
ANR	5597133	Argument	ppath		5596099	0					
ANR	5597134	Identifier	ppath		5596099	0					
ANR	5597135	Argument	& ffpath		5596099	1					
ANR	5597136	UnaryOperationExpression	& ffpath		5596099	0					
ANR	5597137	UnaryOperator	&		5596099	0					
ANR	5597138	Identifier	ffpath		5596099	1					
ANR	5597139	Argument	fo . fixed_flat		5596099	2					
ANR	5597140	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597141	Identifier	fo		5596099	0					
ANR	5597142	Identifier	fixed_flat		5596099	1					
ANR	5597143	Argument	NULL		5596099	3					
ANR	5597144	Identifier	NULL		5596099	0					
ANR	5597145	Argument	pco_small_curves | pco_accurate		5596099	4					
ANR	5597146	InclusiveOrExpression	pco_small_curves | pco_accurate		5596099	0		|			
ANR	5597147	Identifier	pco_small_curves		5596099	0					
ANR	5597148	Identifier	pco_accurate		5596099	1					
ANR	5597149	IfStatement	if ( code < 0 )		5596099	2					
ANR	5597150	Condition	code < 0	446:16:16993:17000	5596099	0	True				
ANR	5597151	RelationalExpression	code < 0		5596099	0		<			
ANR	5597152	Identifier	code		5596099	0					
ANR	5597153	PrimaryExpression	0		5596099	1					
ANR	5597154	ReturnStatement	return code ;	447:16:17019:17030	5596099	1	True				
ANR	5597155	Identifier	code		5596099	0					
ANR	5597156	ExpressionStatement	ppath = & ffpath	448:12:17044:17059	5596099	3	True				
ANR	5597157	AssignmentExpression	ppath = & ffpath		5596099	0		=			
ANR	5597158	Identifier	ppath		5596099	0					
ANR	5597159	UnaryOperationExpression	& ffpath		5596099	1					
ANR	5597160	UnaryOperator	&		5596099	0					
ANR	5597161	Identifier	ffpath		5596099	1					
ANR	5597162	IfStatement	if ( fill_by_trapezoids && ! lop_is_idempotent ( lop ) )		5596099	2					
ANR	5597163	Condition	fill_by_trapezoids && ! lop_is_idempotent ( lop )	451:12:17084:17128	5596099	0	True				
ANR	5597164	AndExpression	fill_by_trapezoids && ! lop_is_idempotent ( lop )		5596099	0		&&			
ANR	5597165	Identifier	fill_by_trapezoids		5596099	0					
ANR	5597166	UnaryOperationExpression	! lop_is_idempotent ( lop )		5596099	1					
ANR	5597167	UnaryOperator	!		5596099	0					
ANR	5597168	CallExpression	lop_is_idempotent ( lop )		5596099	1					
ANR	5597169	Callee	lop_is_idempotent		5596099	0					
ANR	5597170	Identifier	lop_is_idempotent		5596099	0					
ANR	5597171	ArgumentList	lop		5596099	1					
ANR	5597172	Argument	lop		5596099	0					
ANR	5597173	Identifier	lop		5596099	0					
ANR	5597174	ExpressionStatement	fill_by_trapezoids = 0	452:12:17143:17165	5596099	1	True				
ANR	5597175	AssignmentExpression	fill_by_trapezoids = 0		5596099	0		=			
ANR	5597176	Identifier	fill_by_trapezoids		5596099	0					
ANR	5597177	PrimaryExpression	0		5596099	1					
ANR	5597178	IfStatement	if ( ! fill_by_trapezoids )		5596099	3					
ANR	5597179	Condition	! fill_by_trapezoids	453:12:17179:17197	5596099	0	True				
ANR	5597180	UnaryOperationExpression	! fill_by_trapezoids		5596099	0					
ANR	5597181	UnaryOperator	!		5596099	0					
ANR	5597182	Identifier	fill_by_trapezoids		5596099	1					
ANR	5597183	CompoundStatement		171:8:7160:7160	5596099	1					
ANR	5597184	IfStatement	if ( adjust . x == 0 && adjust . y == 0 )		5596099	0					
ANR	5597185	Condition	adjust . x == 0 && adjust . y == 0	455:16:17226:17255	5596099	0	True				
ANR	5597186	AndExpression	adjust . x == 0 && adjust . y == 0		5596099	0		&&			
ANR	5597187	EqualityExpression	adjust . x == 0		5596099	0		==			
ANR	5597188	MemberAccess	adjust . x		5596099	0					
ANR	5597189	Identifier	adjust		5596099	0					
ANR	5597190	Identifier	x		5596099	1					
ANR	5597191	PrimaryExpression	0		5596099	1					
ANR	5597192	EqualityExpression	adjust . y == 0		5596099	1		==			
ANR	5597193	MemberAccess	adjust . y		5596099	0					
ANR	5597194	Identifier	adjust		5596099	0					
ANR	5597195	Identifier	y		5596099	1					
ANR	5597196	PrimaryExpression	0		5596099	1					
ANR	5597197	CompoundStatement		172:48:7210:7210	5596099	1					
ANR	5597198	ExpressionStatement	"code = gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	456:16:17276:17493	5596099	0	True				
ANR	5597199	AssignmentExpression	"code = gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	0		=			
ANR	5597200	Identifier	code		5596099	0					
ANR	5597201	CallExpression	"gx_scan_convert ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	1					
ANR	5597202	Callee	gx_scan_convert		5596099	0					
ANR	5597203	Identifier	gx_scan_convert		5596099	0					
ANR	5597204	ArgumentList	dev		5596099	1					
ANR	5597205	Argument	dev		5596099	0					
ANR	5597206	Identifier	dev		5596099	0					
ANR	5597207	Argument	ppath		5596099	1					
ANR	5597208	Identifier	ppath		5596099	0					
ANR	5597209	Argument	& ibox		5596099	2					
ANR	5597210	UnaryOperationExpression	& ibox		5596099	0					
ANR	5597211	UnaryOperator	&		5596099	0					
ANR	5597212	Identifier	ibox		5596099	1					
ANR	5597213	Argument	& eb		5596099	3					
ANR	5597214	UnaryOperationExpression	& eb		5596099	0					
ANR	5597215	UnaryOperator	&		5596099	0					
ANR	5597216	Identifier	eb		5596099	1					
ANR	5597217	Argument	fo . fixed_flat		5596099	4					
ANR	5597218	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597219	Identifier	fo		5596099	0					
ANR	5597220	Identifier	fixed_flat		5596099	1					
ANR	5597221	IfStatement	if ( code >= 0 )		5596099	1					
ANR	5597222	Condition	code >= 0	461:20:17515:17523	5596099	0	True				
ANR	5597223	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597224	Identifier	code		5596099	0					
ANR	5597225	PrimaryExpression	0		5596099	1					
ANR	5597226	CompoundStatement		178:31:7478:7478	5596099	1					
ANR	5597227	ExpressionStatement	"code = gx_filter_edgebuffer ( dev , & eb , params -> rule )"	462:20:17548:17695	5596099	0	True				
ANR	5597228	AssignmentExpression	"code = gx_filter_edgebuffer ( dev , & eb , params -> rule )"		5596099	0		=			
ANR	5597229	Identifier	code		5596099	0					
ANR	5597230	CallExpression	"gx_filter_edgebuffer ( dev , & eb , params -> rule )"		5596099	1					
ANR	5597231	Callee	gx_filter_edgebuffer		5596099	0					
ANR	5597232	Identifier	gx_filter_edgebuffer		5596099	0					
ANR	5597233	ArgumentList	dev		5596099	1					
ANR	5597234	Argument	dev		5596099	0					
ANR	5597235	Identifier	dev		5596099	0					
ANR	5597236	Argument	& eb		5596099	1					
ANR	5597237	UnaryOperationExpression	& eb		5596099	0					
ANR	5597238	UnaryOperator	&		5596099	0					
ANR	5597239	Identifier	eb		5596099	1					
ANR	5597240	Argument	params -> rule		5596099	2					
ANR	5597241	PtrMemberAccess	params -> rule		5596099	0					
ANR	5597242	Identifier	params		5596099	0					
ANR	5597243	Identifier	rule		5596099	1					
ANR	5597244	IfStatement	if ( code >= 0 )		5596099	2					
ANR	5597245	Condition	code >= 0	466:20:17735:17743	5596099	0	True				
ANR	5597246	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597247	Identifier	code		5596099	0					
ANR	5597248	PrimaryExpression	0		5596099	1					
ANR	5597249	CompoundStatement		183:31:7698:7698	5596099	1					
ANR	5597250	ExpressionStatement	"code = gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"	467:20:17768:17988	5596099	0	True				
ANR	5597251	AssignmentExpression	"code = gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		5596099	0		=			
ANR	5597252	Identifier	code		5596099	0					
ANR	5597253	CallExpression	"gx_fill_edgebuffer ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		5596099	1					
ANR	5597254	Callee	gx_fill_edgebuffer		5596099	0					
ANR	5597255	Identifier	gx_fill_edgebuffer		5596099	0					
ANR	5597256	ArgumentList	dev		5596099	1					
ANR	5597257	Argument	dev		5596099	0					
ANR	5597258	Identifier	dev		5596099	0					
ANR	5597259	Argument	pdevc		5596099	1					
ANR	5597260	Identifier	pdevc		5596099	0					
ANR	5597261	Argument	& eb		5596099	2					
ANR	5597262	UnaryOperationExpression	& eb		5596099	0					
ANR	5597263	UnaryOperator	&		5596099	0					
ANR	5597264	Identifier	eb		5596099	1					
ANR	5597265	Argument	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		5596099	3					
ANR	5597266	ConditionalExpression	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		5596099	0					
ANR	5597267	Condition	fo . fill_direct		5596099	0					
ANR	5597268	MemberAccess	fo . fill_direct		5596099	0					
ANR	5597269	Identifier	fo		5596099	0					
ANR	5597270	Identifier	fill_direct		5596099	1					
ANR	5597271	UnaryOperationExpression	- 1		5596099	1					
ANR	5597272	UnaryOperator	-		5596099	0					
ANR	5597273	PrimaryExpression	1		5596099	1					
ANR	5597274	CastExpression	( int ) pgs -> log_op		5596099	2					
ANR	5597275	CastTarget	int		5596099	0					
ANR	5597276	PtrMemberAccess	pgs -> log_op		5596099	1					
ANR	5597277	Identifier	pgs		5596099	0					
ANR	5597278	Identifier	log_op		5596099	1					
ANR	5597279	ElseStatement	else		5596099	0					
ANR	5597280	CompoundStatement		189:19:7979:7979	5596099	0					
ANR	5597281	ExpressionStatement	"code = gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	473:16:18045:18282	5596099	0	True				
ANR	5597282	AssignmentExpression	"code = gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	0		=			
ANR	5597283	Identifier	code		5596099	0					
ANR	5597284	CallExpression	"gx_scan_convert_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	1					
ANR	5597285	Callee	gx_scan_convert_app		5596099	0					
ANR	5597286	Identifier	gx_scan_convert_app		5596099	0					
ANR	5597287	ArgumentList	dev		5596099	1					
ANR	5597288	Argument	dev		5596099	0					
ANR	5597289	Identifier	dev		5596099	0					
ANR	5597290	Argument	ppath		5596099	1					
ANR	5597291	Identifier	ppath		5596099	0					
ANR	5597292	Argument	& ibox		5596099	2					
ANR	5597293	UnaryOperationExpression	& ibox		5596099	0					
ANR	5597294	UnaryOperator	&		5596099	0					
ANR	5597295	Identifier	ibox		5596099	1					
ANR	5597296	Argument	& eb		5596099	3					
ANR	5597297	UnaryOperationExpression	& eb		5596099	0					
ANR	5597298	UnaryOperator	&		5596099	0					
ANR	5597299	Identifier	eb		5596099	1					
ANR	5597300	Argument	fo . fixed_flat		5596099	4					
ANR	5597301	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597302	Identifier	fo		5596099	0					
ANR	5597303	Identifier	fixed_flat		5596099	1					
ANR	5597304	IfStatement	if ( code >= 0 )		5596099	1					
ANR	5597305	Condition	code >= 0	478:20:18304:18312	5596099	0	True				
ANR	5597306	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597307	Identifier	code		5596099	0					
ANR	5597308	PrimaryExpression	0		5596099	1					
ANR	5597309	CompoundStatement		195:31:8267:8267	5596099	1					
ANR	5597310	ExpressionStatement	"code = gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"	479:20:18337:18496	5596099	0	True				
ANR	5597311	AssignmentExpression	"code = gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"		5596099	0		=			
ANR	5597312	Identifier	code		5596099	0					
ANR	5597313	CallExpression	"gx_filter_edgebuffer_app ( dev , & eb , params -> rule )"		5596099	1					
ANR	5597314	Callee	gx_filter_edgebuffer_app		5596099	0					
ANR	5597315	Identifier	gx_filter_edgebuffer_app		5596099	0					
ANR	5597316	ArgumentList	dev		5596099	1					
ANR	5597317	Argument	dev		5596099	0					
ANR	5597318	Identifier	dev		5596099	0					
ANR	5597319	Argument	& eb		5596099	1					
ANR	5597320	UnaryOperationExpression	& eb		5596099	0					
ANR	5597321	UnaryOperator	&		5596099	0					
ANR	5597322	Identifier	eb		5596099	1					
ANR	5597323	Argument	params -> rule		5596099	2					
ANR	5597324	PtrMemberAccess	params -> rule		5596099	0					
ANR	5597325	Identifier	params		5596099	0					
ANR	5597326	Identifier	rule		5596099	1					
ANR	5597327	IfStatement	if ( code >= 0 )		5596099	2					
ANR	5597328	Condition	code >= 0	483:20:18536:18544	5596099	0	True				
ANR	5597329	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597330	Identifier	code		5596099	0					
ANR	5597331	PrimaryExpression	0		5596099	1					
ANR	5597332	CompoundStatement		200:31:8499:8499	5596099	1					
ANR	5597333	ExpressionStatement	"code = gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"	484:20:18569:18805	5596099	0	True				
ANR	5597334	AssignmentExpression	"code = gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		5596099	0		=			
ANR	5597335	Identifier	code		5596099	0					
ANR	5597336	CallExpression	"gx_fill_edgebuffer_app ( dev , pdevc , & eb , fo . fill_direct ? - 1 : ( int ) pgs -> log_op )"		5596099	1					
ANR	5597337	Callee	gx_fill_edgebuffer_app		5596099	0					
ANR	5597338	Identifier	gx_fill_edgebuffer_app		5596099	0					
ANR	5597339	ArgumentList	dev		5596099	1					
ANR	5597340	Argument	dev		5596099	0					
ANR	5597341	Identifier	dev		5596099	0					
ANR	5597342	Argument	pdevc		5596099	1					
ANR	5597343	Identifier	pdevc		5596099	0					
ANR	5597344	Argument	& eb		5596099	2					
ANR	5597345	UnaryOperationExpression	& eb		5596099	0					
ANR	5597346	UnaryOperator	&		5596099	0					
ANR	5597347	Identifier	eb		5596099	1					
ANR	5597348	Argument	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		5596099	3					
ANR	5597349	ConditionalExpression	fo . fill_direct ? - 1 : ( int ) pgs -> log_op		5596099	0					
ANR	5597350	Condition	fo . fill_direct		5596099	0					
ANR	5597351	MemberAccess	fo . fill_direct		5596099	0					
ANR	5597352	Identifier	fo		5596099	0					
ANR	5597353	Identifier	fill_direct		5596099	1					
ANR	5597354	UnaryOperationExpression	- 1		5596099	1					
ANR	5597355	UnaryOperator	-		5596099	0					
ANR	5597356	PrimaryExpression	1		5596099	1					
ANR	5597357	CastExpression	( int ) pgs -> log_op		5596099	2					
ANR	5597358	CastTarget	int		5596099	0					
ANR	5597359	PtrMemberAccess	pgs -> log_op		5596099	1					
ANR	5597360	Identifier	pgs		5596099	0					
ANR	5597361	Identifier	log_op		5596099	1					
ANR	5597362	ElseStatement	else		5596099	0					
ANR	5597363	CompoundStatement		207:15:8806:8806	5596099	0					
ANR	5597364	IfStatement	if ( adjust . x == 0 && adjust . y == 0 )		5596099	0					
ANR	5597365	Condition	adjust . x == 0 && adjust . y == 0	491:16:18872:18901	5596099	0	True				
ANR	5597366	AndExpression	adjust . x == 0 && adjust . y == 0		5596099	0		&&			
ANR	5597367	EqualityExpression	adjust . x == 0		5596099	0		==			
ANR	5597368	MemberAccess	adjust . x		5596099	0					
ANR	5597369	Identifier	adjust		5596099	0					
ANR	5597370	Identifier	x		5596099	1					
ANR	5597371	PrimaryExpression	0		5596099	1					
ANR	5597372	EqualityExpression	adjust . y == 0		5596099	1		==			
ANR	5597373	MemberAccess	adjust . y		5596099	0					
ANR	5597374	Identifier	adjust		5596099	0					
ANR	5597375	Identifier	y		5596099	1					
ANR	5597376	PrimaryExpression	0		5596099	1					
ANR	5597377	CompoundStatement		208:48:8856:8856	5596099	1					
ANR	5597378	ExpressionStatement	"code = gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	492:16:18922:19154	5596099	0	True				
ANR	5597379	AssignmentExpression	"code = gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	0		=			
ANR	5597380	Identifier	code		5596099	0					
ANR	5597381	CallExpression	"gx_scan_convert_tr ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	1					
ANR	5597382	Callee	gx_scan_convert_tr		5596099	0					
ANR	5597383	Identifier	gx_scan_convert_tr		5596099	0					
ANR	5597384	ArgumentList	dev		5596099	1					
ANR	5597385	Argument	dev		5596099	0					
ANR	5597386	Identifier	dev		5596099	0					
ANR	5597387	Argument	ppath		5596099	1					
ANR	5597388	Identifier	ppath		5596099	0					
ANR	5597389	Argument	& ibox		5596099	2					
ANR	5597390	UnaryOperationExpression	& ibox		5596099	0					
ANR	5597391	UnaryOperator	&		5596099	0					
ANR	5597392	Identifier	ibox		5596099	1					
ANR	5597393	Argument	& eb		5596099	3					
ANR	5597394	UnaryOperationExpression	& eb		5596099	0					
ANR	5597395	UnaryOperator	&		5596099	0					
ANR	5597396	Identifier	eb		5596099	1					
ANR	5597397	Argument	fo . fixed_flat		5596099	4					
ANR	5597398	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597399	Identifier	fo		5596099	0					
ANR	5597400	Identifier	fixed_flat		5596099	1					
ANR	5597401	IfStatement	if ( code >= 0 )		5596099	1					
ANR	5597402	Condition	code >= 0	497:20:19176:19184	5596099	0	True				
ANR	5597403	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597404	Identifier	code		5596099	0					
ANR	5597405	PrimaryExpression	0		5596099	1					
ANR	5597406	CompoundStatement		214:31:9139:9139	5596099	1					
ANR	5597407	ExpressionStatement	"code = gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"	498:20:19209:19366	5596099	0	True				
ANR	5597408	AssignmentExpression	"code = gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"		5596099	0		=			
ANR	5597409	Identifier	code		5596099	0					
ANR	5597410	CallExpression	"gx_filter_edgebuffer_tr ( dev , & eb , params -> rule )"		5596099	1					
ANR	5597411	Callee	gx_filter_edgebuffer_tr		5596099	0					
ANR	5597412	Identifier	gx_filter_edgebuffer_tr		5596099	0					
ANR	5597413	ArgumentList	dev		5596099	1					
ANR	5597414	Argument	dev		5596099	0					
ANR	5597415	Identifier	dev		5596099	0					
ANR	5597416	Argument	& eb		5596099	1					
ANR	5597417	UnaryOperationExpression	& eb		5596099	0					
ANR	5597418	UnaryOperator	&		5596099	0					
ANR	5597419	Identifier	eb		5596099	1					
ANR	5597420	Argument	params -> rule		5596099	2					
ANR	5597421	PtrMemberAccess	params -> rule		5596099	0					
ANR	5597422	Identifier	params		5596099	0					
ANR	5597423	Identifier	rule		5596099	1					
ANR	5597424	IfStatement	if ( code >= 0 )		5596099	2					
ANR	5597425	Condition	code >= 0	502:20:19406:19414	5596099	0	True				
ANR	5597426	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597427	Identifier	code		5596099	0					
ANR	5597428	PrimaryExpression	0		5596099	1					
ANR	5597429	CompoundStatement		219:31:9369:9369	5596099	1					
ANR	5597430	ExpressionStatement	"code = gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"	503:20:19439:19649	5596099	0	True				
ANR	5597431	AssignmentExpression	"code = gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		5596099	0		=			
ANR	5597432	Identifier	code		5596099	0					
ANR	5597433	CallExpression	"gx_fill_edgebuffer_tr ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		5596099	1					
ANR	5597434	Callee	gx_fill_edgebuffer_tr		5596099	0					
ANR	5597435	Identifier	gx_fill_edgebuffer_tr		5596099	0					
ANR	5597436	ArgumentList	dev		5596099	1					
ANR	5597437	Argument	dev		5596099	0					
ANR	5597438	Identifier	dev		5596099	0					
ANR	5597439	Argument	pdevc		5596099	1					
ANR	5597440	Identifier	pdevc		5596099	0					
ANR	5597441	Argument	& eb		5596099	2					
ANR	5597442	UnaryOperationExpression	& eb		5596099	0					
ANR	5597443	UnaryOperator	&		5596099	0					
ANR	5597444	Identifier	eb		5596099	1					
ANR	5597445	Argument	( int ) pgs -> log_op		5596099	3					
ANR	5597446	CastExpression	( int ) pgs -> log_op		5596099	0					
ANR	5597447	CastTarget	int		5596099	0					
ANR	5597448	PtrMemberAccess	pgs -> log_op		5596099	1					
ANR	5597449	Identifier	pgs		5596099	0					
ANR	5597450	Identifier	log_op		5596099	1					
ANR	5597451	ElseStatement	else		5596099	0					
ANR	5597452	CompoundStatement		225:19:9640:9640	5596099	0					
ANR	5597453	ExpressionStatement	"code = gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"	509:16:19706:19958	5596099	0	True				
ANR	5597454	AssignmentExpression	"code = gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	0		=			
ANR	5597455	Identifier	code		5596099	0					
ANR	5597456	CallExpression	"gx_scan_convert_tr_app ( dev , ppath , & ibox , & eb , fo . fixed_flat )"		5596099	1					
ANR	5597457	Callee	gx_scan_convert_tr_app		5596099	0					
ANR	5597458	Identifier	gx_scan_convert_tr_app		5596099	0					
ANR	5597459	ArgumentList	dev		5596099	1					
ANR	5597460	Argument	dev		5596099	0					
ANR	5597461	Identifier	dev		5596099	0					
ANR	5597462	Argument	ppath		5596099	1					
ANR	5597463	Identifier	ppath		5596099	0					
ANR	5597464	Argument	& ibox		5596099	2					
ANR	5597465	UnaryOperationExpression	& ibox		5596099	0					
ANR	5597466	UnaryOperator	&		5596099	0					
ANR	5597467	Identifier	ibox		5596099	1					
ANR	5597468	Argument	& eb		5596099	3					
ANR	5597469	UnaryOperationExpression	& eb		5596099	0					
ANR	5597470	UnaryOperator	&		5596099	0					
ANR	5597471	Identifier	eb		5596099	1					
ANR	5597472	Argument	fo . fixed_flat		5596099	4					
ANR	5597473	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597474	Identifier	fo		5596099	0					
ANR	5597475	Identifier	fixed_flat		5596099	1					
ANR	5597476	IfStatement	if ( code >= 0 )		5596099	1					
ANR	5597477	Condition	code >= 0	514:20:19980:19988	5596099	0	True				
ANR	5597478	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597479	Identifier	code		5596099	0					
ANR	5597480	PrimaryExpression	0		5596099	1					
ANR	5597481	CompoundStatement		231:31:9943:9943	5596099	1					
ANR	5597482	ExpressionStatement	"code = gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"	515:20:20013:20181	5596099	0	True				
ANR	5597483	AssignmentExpression	"code = gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"		5596099	0		=			
ANR	5597484	Identifier	code		5596099	0					
ANR	5597485	CallExpression	"gx_filter_edgebuffer_tr_app ( dev , & eb , params -> rule )"		5596099	1					
ANR	5597486	Callee	gx_filter_edgebuffer_tr_app		5596099	0					
ANR	5597487	Identifier	gx_filter_edgebuffer_tr_app		5596099	0					
ANR	5597488	ArgumentList	dev		5596099	1					
ANR	5597489	Argument	dev		5596099	0					
ANR	5597490	Identifier	dev		5596099	0					
ANR	5597491	Argument	& eb		5596099	1					
ANR	5597492	UnaryOperationExpression	& eb		5596099	0					
ANR	5597493	UnaryOperator	&		5596099	0					
ANR	5597494	Identifier	eb		5596099	1					
ANR	5597495	Argument	params -> rule		5596099	2					
ANR	5597496	PtrMemberAccess	params -> rule		5596099	0					
ANR	5597497	Identifier	params		5596099	0					
ANR	5597498	Identifier	rule		5596099	1					
ANR	5597499	IfStatement	if ( code >= 0 )		5596099	2					
ANR	5597500	Condition	code >= 0	519:20:20221:20229	5596099	0	True				
ANR	5597501	RelationalExpression	code >= 0		5596099	0		>=			
ANR	5597502	Identifier	code		5596099	0					
ANR	5597503	PrimaryExpression	0		5596099	1					
ANR	5597504	CompoundStatement		236:31:10184:10184	5596099	1					
ANR	5597505	ExpressionStatement	"code = gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"	520:20:20254:20480	5596099	0	True				
ANR	5597506	AssignmentExpression	"code = gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		5596099	0		=			
ANR	5597507	Identifier	code		5596099	0					
ANR	5597508	CallExpression	"gx_fill_edgebuffer_tr_app ( dev , pdevc , & eb , ( int ) pgs -> log_op )"		5596099	1					
ANR	5597509	Callee	gx_fill_edgebuffer_tr_app		5596099	0					
ANR	5597510	Identifier	gx_fill_edgebuffer_tr_app		5596099	0					
ANR	5597511	ArgumentList	dev		5596099	1					
ANR	5597512	Argument	dev		5596099	0					
ANR	5597513	Identifier	dev		5596099	0					
ANR	5597514	Argument	pdevc		5596099	1					
ANR	5597515	Identifier	pdevc		5596099	0					
ANR	5597516	Argument	& eb		5596099	2					
ANR	5597517	UnaryOperationExpression	& eb		5596099	0					
ANR	5597518	UnaryOperator	&		5596099	0					
ANR	5597519	Identifier	eb		5596099	1					
ANR	5597520	Argument	( int ) pgs -> log_op		5596099	3					
ANR	5597521	CastExpression	( int ) pgs -> log_op		5596099	0					
ANR	5597522	CastTarget	int		5596099	0					
ANR	5597523	PtrMemberAccess	pgs -> log_op		5596099	1					
ANR	5597524	Identifier	pgs		5596099	0					
ANR	5597525	Identifier	log_op		5596099	1					
ANR	5597526	IfStatement	if ( ppath == & ffpath )		5596099	4					
ANR	5597527	Condition	ppath == & ffpath	527:12:20536:20551	5596099	0	True				
ANR	5597528	EqualityExpression	ppath == & ffpath		5596099	0		==			
ANR	5597529	Identifier	ppath		5596099	0					
ANR	5597530	UnaryOperationExpression	& ffpath		5596099	1					
ANR	5597531	UnaryOperator	&		5596099	0					
ANR	5597532	Identifier	ffpath		5596099	1					
ANR	5597533	ExpressionStatement	"gx_path_free ( ppath , ""gx_general_fill_path"" )"	528:12:20566:20609	5596099	1	True				
ANR	5597534	CallExpression	"gx_path_free ( ppath , ""gx_general_fill_path"" )"		5596099	0					
ANR	5597535	Callee	gx_path_free		5596099	0					
ANR	5597536	Identifier	gx_path_free		5596099	0					
ANR	5597537	ArgumentList	ppath		5596099	1					
ANR	5597538	Argument	ppath		5596099	0					
ANR	5597539	Identifier	ppath		5596099	0					
ANR	5597540	Argument	"""gx_general_fill_path"""		5596099	1					
ANR	5597541	PrimaryExpression	"""gx_general_fill_path"""		5596099	0					
ANR	5597542	ExpressionStatement	"gx_edgebuffer_fin ( dev , & eb )"	529:8:20619:20645	5596099	5	True				
ANR	5597543	CallExpression	"gx_edgebuffer_fin ( dev , & eb )"		5596099	0					
ANR	5597544	Callee	gx_edgebuffer_fin		5596099	0					
ANR	5597545	Identifier	gx_edgebuffer_fin		5596099	0					
ANR	5597546	ArgumentList	dev		5596099	1					
ANR	5597547	Argument	dev		5596099	0					
ANR	5597548	Identifier	dev		5596099	0					
ANR	5597549	Argument	& eb		5596099	1					
ANR	5597550	UnaryOperationExpression	& eb		5596099	0					
ANR	5597551	UnaryOperator	&		5596099	0					
ANR	5597552	Identifier	eb		5596099	1					
ANR	5597553	ReturnStatement	return code ;	530:8:20655:20666	5596099	6	True				
ANR	5597554	Identifier	code		5596099	0					
ANR	5597555	ExpressionStatement	"gx_path_init_local ( & ffpath , ppath -> memory )"	533:4:20679:20721	5596099	70	True				
ANR	5597556	CallExpression	"gx_path_init_local ( & ffpath , ppath -> memory )"		5596099	0					
ANR	5597557	Callee	gx_path_init_local		5596099	0					
ANR	5597558	Identifier	gx_path_init_local		5596099	0					
ANR	5597559	ArgumentList	& ffpath		5596099	1					
ANR	5597560	Argument	& ffpath		5596099	0					
ANR	5597561	UnaryOperationExpression	& ffpath		5596099	0					
ANR	5597562	UnaryOperator	&		5596099	0					
ANR	5597563	Identifier	ffpath		5596099	1					
ANR	5597564	Argument	ppath -> memory		5596099	1					
ANR	5597565	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597566	Identifier	ppath		5596099	0					
ANR	5597567	Identifier	memory		5596099	1					
ANR	5597568	IfStatement	if ( ! big_path && ! gx_path_has_curves ( ppath ) )		5596099	71					
ANR	5597569	Condition	! big_path && ! gx_path_has_curves ( ppath )	534:8:20731:20769	5596099	0	True				
ANR	5597570	AndExpression	! big_path && ! gx_path_has_curves ( ppath )		5596099	0		&&			
ANR	5597571	UnaryOperationExpression	! big_path		5596099	0					
ANR	5597572	UnaryOperator	!		5596099	0					
ANR	5597573	Identifier	big_path		5596099	1					
ANR	5597574	UnaryOperationExpression	! gx_path_has_curves ( ppath )		5596099	1					
ANR	5597575	UnaryOperator	!		5596099	0					
ANR	5597576	CallExpression	gx_path_has_curves ( ppath )		5596099	1					
ANR	5597577	Callee	gx_path_has_curves		5596099	0					
ANR	5597578	Identifier	gx_path_has_curves		5596099	0					
ANR	5597579	ArgumentList	ppath		5596099	1					
ANR	5597580	Argument	ppath		5596099	0					
ANR	5597581	Identifier	ppath		5596099	0					
ANR	5597582	ExpressionStatement	pfpath = ppath	535:8:20815:20829	5596099	1	True				
ANR	5597583	AssignmentExpression	pfpath = ppath		5596099	0		=			
ANR	5597584	Identifier	pfpath		5596099	0					
ANR	5597585	Identifier	ppath		5596099	1					
ANR	5597586	ElseStatement	else		5596099	0					
ANR	5597587	IfStatement	if ( is_spotan_device ( dev ) )		5596099	0					
ANR	5597588	Condition	is_spotan_device ( dev )	536:13:20844:20864	5596099	0	True				
ANR	5597589	CallExpression	is_spotan_device ( dev )		5596099	0					
ANR	5597590	Callee	is_spotan_device		5596099	0					
ANR	5597591	Identifier	is_spotan_device		5596099	0					
ANR	5597592	ArgumentList	dev		5596099	1					
ANR	5597593	Argument	dev		5596099	0					
ANR	5597594	Identifier	dev		5596099	0					
ANR	5597595	ExpressionStatement	pfpath = ppath	537:8:20875:20889	5596099	1	True				
ANR	5597596	AssignmentExpression	pfpath = ppath		5596099	0		=			
ANR	5597597	Identifier	pfpath		5596099	0					
ANR	5597598	Identifier	ppath		5596099	1					
ANR	5597599	ElseStatement	else		5596099	0					
ANR	5597600	IfStatement	"if ( ! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat ) )"		5596099	0					
ANR	5597601	Condition	"! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"	538:13:20904:21002	5596099	0	True				
ANR	5597602	AndExpression	"! big_path && ! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		5596099	0		&&			
ANR	5597603	UnaryOperationExpression	! big_path		5596099	0					
ANR	5597604	UnaryOperator	!		5596099	0					
ANR	5597605	Identifier	big_path		5596099	1					
ANR	5597606	AndExpression	"! pgs -> accurate_curves && gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		5596099	1		&&			
ANR	5597607	UnaryOperationExpression	! pgs -> accurate_curves		5596099	0					
ANR	5597608	UnaryOperator	!		5596099	0					
ANR	5597609	PtrMemberAccess	pgs -> accurate_curves		5596099	1					
ANR	5597610	Identifier	pgs		5596099	0					
ANR	5597611	Identifier	accurate_curves		5596099	1					
ANR	5597612	CallExpression	"gx_path__check_curves ( ppath , pco_small_curves , fo . fixed_flat )"		5596099	1					
ANR	5597613	Callee	gx_path__check_curves		5596099	0					
ANR	5597614	Identifier	gx_path__check_curves		5596099	0					
ANR	5597615	ArgumentList	ppath		5596099	1					
ANR	5597616	Argument	ppath		5596099	0					
ANR	5597617	Identifier	ppath		5596099	0					
ANR	5597618	Argument	pco_small_curves		5596099	1					
ANR	5597619	Identifier	pco_small_curves		5596099	0					
ANR	5597620	Argument	fo . fixed_flat		5596099	2					
ANR	5597621	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597622	Identifier	fo		5596099	0					
ANR	5597623	Identifier	fixed_flat		5596099	1					
ANR	5597624	ExpressionStatement	pfpath = ppath	539:8:21013:21027	5596099	1	True				
ANR	5597625	AssignmentExpression	pfpath = ppath		5596099	0		=			
ANR	5597626	Identifier	pfpath		5596099	0					
ANR	5597627	Identifier	ppath		5596099	1					
ANR	5597628	ElseStatement	else		5596099	0					
ANR	5597629	CompoundStatement		257:9:10990:10990	5596099	0					
ANR	5597630	ExpressionStatement	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"	541:8:21048:21212	5596099	0	True				
ANR	5597631	AssignmentExpression	"code = gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"		5596099	0		=			
ANR	5597632	Identifier	code		5596099	0					
ANR	5597633	CallExpression	"gx_path_copy_reducing ( ppath , & ffpath , fo . fixed_flat , NULL , pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 ) )"		5596099	1					
ANR	5597634	Callee	gx_path_copy_reducing		5596099	0					
ANR	5597635	Identifier	gx_path_copy_reducing		5596099	0					
ANR	5597636	ArgumentList	ppath		5596099	1					
ANR	5597637	Argument	ppath		5596099	0					
ANR	5597638	Identifier	ppath		5596099	0					
ANR	5597639	Argument	& ffpath		5596099	1					
ANR	5597640	UnaryOperationExpression	& ffpath		5596099	0					
ANR	5597641	UnaryOperator	&		5596099	0					
ANR	5597642	Identifier	ffpath		5596099	1					
ANR	5597643	Argument	fo . fixed_flat		5596099	2					
ANR	5597644	MemberAccess	fo . fixed_flat		5596099	0					
ANR	5597645	Identifier	fo		5596099	0					
ANR	5597646	Identifier	fixed_flat		5596099	1					
ANR	5597647	Argument	NULL		5596099	3					
ANR	5597648	Identifier	NULL		5596099	0					
ANR	5597649	Argument	pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 )		5596099	4					
ANR	5597650	InclusiveOrExpression	pco_small_curves | ( pgs -> accurate_curves ? pco_accurate : 0 )		5596099	0		|			
ANR	5597651	Identifier	pco_small_curves		5596099	0					
ANR	5597652	ConditionalExpression	pgs -> accurate_curves ? pco_accurate : 0		5596099	1					
ANR	5597653	Condition	pgs -> accurate_curves		5596099	0					
ANR	5597654	PtrMemberAccess	pgs -> accurate_curves		5596099	0					
ANR	5597655	Identifier	pgs		5596099	0					
ANR	5597656	Identifier	accurate_curves		5596099	1					
ANR	5597657	Identifier	pco_accurate		5596099	1					
ANR	5597658	PrimaryExpression	0		5596099	2					
ANR	5597659	IfStatement	if ( code < 0 )		5596099	1					
ANR	5597660	Condition	code < 0	543:12:21226:21233	5596099	0	True				
ANR	5597661	RelationalExpression	code < 0		5596099	0		<			
ANR	5597662	Identifier	code		5596099	0					
ANR	5597663	PrimaryExpression	0		5596099	1					
ANR	5597664	ReturnStatement	return code ;	544:12:21248:21259	5596099	1	True				
ANR	5597665	Identifier	code		5596099	0					
ANR	5597666	ExpressionStatement	pfpath = & ffpath	545:8:21269:21285	5596099	2	True				
ANR	5597667	AssignmentExpression	pfpath = & ffpath		5596099	0		=			
ANR	5597668	Identifier	pfpath		5596099	0					
ANR	5597669	UnaryOperationExpression	& ffpath		5596099	1					
ANR	5597670	UnaryOperator	&		5596099	0					
ANR	5597671	Identifier	ffpath		5596099	1					
ANR	5597672	IfStatement	if ( big_path )		5596099	3					
ANR	5597673	Condition	big_path	546:12:21299:21306	5596099	0	True				
ANR	5597674	Identifier	big_path		5596099	0					
ANR	5597675	CompoundStatement		263:22:11261:11261	5596099	1					
ANR	5597676	ExpressionStatement	code = gx_path_merge_contacting_contours ( pfpath )	547:12:21323:21371	5596099	0	True				
ANR	5597677	AssignmentExpression	code = gx_path_merge_contacting_contours ( pfpath )		5596099	0		=			
ANR	5597678	Identifier	code		5596099	0					
ANR	5597679	CallExpression	gx_path_merge_contacting_contours ( pfpath )		5596099	1					
ANR	5597680	Callee	gx_path_merge_contacting_contours		5596099	0					
ANR	5597681	Identifier	gx_path_merge_contacting_contours		5596099	0					
ANR	5597682	ArgumentList	pfpath		5596099	1					
ANR	5597683	Argument	pfpath		5596099	0					
ANR	5597684	Identifier	pfpath		5596099	0					
ANR	5597685	IfStatement	if ( code < 0 )		5596099	1					
ANR	5597686	Condition	code < 0	548:16:21389:21396	5596099	0	True				
ANR	5597687	RelationalExpression	code < 0		5596099	0		<			
ANR	5597688	Identifier	code		5596099	0					
ANR	5597689	PrimaryExpression	0		5596099	1					
ANR	5597690	ReturnStatement	return code ;	549:16:21415:21426	5596099	1	True				
ANR	5597691	Identifier	code		5596099	0					
ANR	5597692	ExpressionStatement	fo . fill_by_trapezoids = fill_by_trapezoids	552:4:21448:21490	5596099	72	True				
ANR	5597693	AssignmentExpression	fo . fill_by_trapezoids = fill_by_trapezoids		5596099	0		=			
ANR	5597694	MemberAccess	fo . fill_by_trapezoids		5596099	0					
ANR	5597695	Identifier	fo		5596099	0					
ANR	5597696	Identifier	fill_by_trapezoids		5596099	1					
ANR	5597697	Identifier	fill_by_trapezoids		5596099	1					
ANR	5597698	ExpressionStatement	"init_line_list ( & lst , ppath -> memory )"	554:4:21539:21574	5596099	73	True				
ANR	5597699	CallExpression	"init_line_list ( & lst , ppath -> memory )"		5596099	0					
ANR	5597700	Callee	init_line_list		5596099	0					
ANR	5597701	Identifier	init_line_list		5596099	0					
ANR	5597702	ArgumentList	& lst		5596099	1					
ANR	5597703	Argument	& lst		5596099	0					
ANR	5597704	UnaryOperationExpression	& lst		5596099	0					
ANR	5597705	UnaryOperator	&		5596099	0					
ANR	5597706	Identifier	lst		5596099	1					
ANR	5597707	Argument	ppath -> memory		5596099	1					
ANR	5597708	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597709	Identifier	ppath		5596099	0					
ANR	5597710	Identifier	memory		5596099	1					
ANR	5597711	IfStatement	"if ( ( code = add_y_list ( pfpath , & lst ) ) < 0 )"		5596099	74					
ANR	5597712	Condition	"( code = add_y_list ( pfpath , & lst ) ) < 0"	555:8:21584:21620	5596099	0	True				
ANR	5597713	RelationalExpression	"( code = add_y_list ( pfpath , & lst ) ) < 0"		5596099	0		<			
ANR	5597714	AssignmentExpression	"code = add_y_list ( pfpath , & lst )"		5596099	0		=			
ANR	5597715	Identifier	code		5596099	0					
ANR	5597716	CallExpression	"add_y_list ( pfpath , & lst )"		5596099	1					
ANR	5597717	Callee	add_y_list		5596099	0					
ANR	5597718	Identifier	add_y_list		5596099	0					
ANR	5597719	ArgumentList	pfpath		5596099	1					
ANR	5597720	Argument	pfpath		5596099	0					
ANR	5597721	Identifier	pfpath		5596099	0					
ANR	5597722	Argument	& lst		5596099	1					
ANR	5597723	UnaryOperationExpression	& lst		5596099	0					
ANR	5597724	UnaryOperator	&		5596099	0					
ANR	5597725	Identifier	lst		5596099	1					
ANR	5597726	PrimaryExpression	0		5596099	1					
ANR	5597727	GotoStatement	goto nope ;	556:8:21631:21640	5596099	1	True				
ANR	5597728	Identifier	nope		5596099	0					
ANR	5597729	CompoundStatement		274:4:11598:11598	5596099	75					
ANR	5597730	ExpressionStatement	FILL_LOOP_PROC ( ( * fill_loop ) )	558:8:21656:21684	5596099	0	True				
ANR	5597731	CallExpression	FILL_LOOP_PROC ( ( * fill_loop ) )		5596099	0					
ANR	5597732	Callee	FILL_LOOP_PROC		5596099	0					
ANR	5597733	Identifier	FILL_LOOP_PROC		5596099	0					
ANR	5597734	ArgumentList	* fill_loop		5596099	1					
ANR	5597735	Argument	* fill_loop		5596099	0					
ANR	5597736	UnaryOperationExpression	* fill_loop		5596099	0					
ANR	5597737	UnaryOperator	*		5596099	0					
ANR	5597738	Identifier	fill_loop		5596099	1					
ANR	5597739	IfStatement	if ( fill_by_trapezoids )		5596099	1					
ANR	5597740	Condition	fill_by_trapezoids	561:12:21777:21794	5596099	0	True				
ANR	5597741	Identifier	fill_by_trapezoids		5596099	0					
ANR	5597742	ExpressionStatement	fill_loop = spot_into_trapezoids	562:12:21809:21841	5596099	1	True				
ANR	5597743	AssignmentExpression	fill_loop = spot_into_trapezoids		5596099	0		=			
ANR	5597744	Identifier	fill_loop		5596099	0					
ANR	5597745	Identifier	spot_into_trapezoids		5596099	1					
ANR	5597746	ElseStatement	else		5596099	0					
ANR	5597747	ExpressionStatement	fill_loop = spot_into_scan_lines	564:12:21868:21900	5596099	0	True				
ANR	5597748	AssignmentExpression	fill_loop = spot_into_scan_lines		5596099	0		=			
ANR	5597749	Identifier	fill_loop		5596099	0					
ANR	5597750	Identifier	spot_into_scan_lines		5596099	1					
ANR	5597751	IfStatement	if ( gs_currentcpsimode ( pgs -> memory ) && is_character )		5596099	2					
ANR	5597752	Condition	gs_currentcpsimode ( pgs -> memory ) && is_character	565:12:21914:21960	5596099	0	True				
ANR	5597753	AndExpression	gs_currentcpsimode ( pgs -> memory ) && is_character		5596099	0		&&			
ANR	5597754	CallExpression	gs_currentcpsimode ( pgs -> memory )		5596099	0					
ANR	5597755	Callee	gs_currentcpsimode		5596099	0					
ANR	5597756	Identifier	gs_currentcpsimode		5596099	0					
ANR	5597757	ArgumentList	pgs -> memory		5596099	1					
ANR	5597758	Argument	pgs -> memory		5596099	0					
ANR	5597759	PtrMemberAccess	pgs -> memory		5596099	0					
ANR	5597760	Identifier	pgs		5596099	0					
ANR	5597761	Identifier	memory		5596099	1					
ANR	5597762	Identifier	is_character		5596099	1					
ANR	5597763	CompoundStatement		282:61:11915:11915	5596099	1					
ANR	5597764	IfStatement	if ( lst . contour_count > countof ( lst . local_windings ) )		5596099	0					
ANR	5597765	Condition	lst . contour_count > countof ( lst . local_windings )	566:16:21981:22027	5596099	0	True				
ANR	5597766	RelationalExpression	lst . contour_count > countof ( lst . local_windings )		5596099	0		>			
ANR	5597767	MemberAccess	lst . contour_count		5596099	0					
ANR	5597768	Identifier	lst		5596099	0					
ANR	5597769	Identifier	contour_count		5596099	1					
ANR	5597770	CallExpression	countof ( lst . local_windings )		5596099	1					
ANR	5597771	Callee	countof		5596099	0					
ANR	5597772	Identifier	countof		5596099	0					
ANR	5597773	ArgumentList	lst . local_windings		5596099	1					
ANR	5597774	Argument	lst . local_windings		5596099	0					
ANR	5597775	MemberAccess	lst . local_windings		5596099	0					
ANR	5597776	Identifier	lst		5596099	0					
ANR	5597777	Identifier	local_windings		5596099	1					
ANR	5597778	CompoundStatement		283:65:11982:11982	5596099	1					
ANR	5597779	ExpressionStatement	"lst . windings = ( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"	567:16:22048:22191	5596099	0	True				
ANR	5597780	AssignmentExpression	"lst . windings = ( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		5596099	0		=			
ANR	5597781	MemberAccess	lst . windings		5596099	0					
ANR	5597782	Identifier	lst		5596099	0					
ANR	5597783	Identifier	windings		5596099	1					
ANR	5597784	CastExpression	"( int * ) gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		5596099	1					
ANR	5597785	CastTarget	int *		5596099	0					
ANR	5597786	CallExpression	"gs_alloc_byte_array ( pdev -> memory , lst . contour_count , sizeof ( int ) , ""gx_general_fill_path"" )"		5596099	1					
ANR	5597787	Callee	gs_alloc_byte_array		5596099	0					
ANR	5597788	Identifier	gs_alloc_byte_array		5596099	0					
ANR	5597789	ArgumentList	pdev -> memory		5596099	1					
ANR	5597790	Argument	pdev -> memory		5596099	0					
ANR	5597791	PtrMemberAccess	pdev -> memory		5596099	0					
ANR	5597792	Identifier	pdev		5596099	0					
ANR	5597793	Identifier	memory		5596099	1					
ANR	5597794	Argument	lst . contour_count		5596099	1					
ANR	5597795	MemberAccess	lst . contour_count		5596099	0					
ANR	5597796	Identifier	lst		5596099	0					
ANR	5597797	Identifier	contour_count		5596099	1					
ANR	5597798	Argument	sizeof ( int )		5596099	2					
ANR	5597799	SizeofExpression	sizeof ( int )		5596099	0					
ANR	5597800	Sizeof	sizeof		5596099	0					
ANR	5597801	SizeofOperand	int		5596099	1					
ANR	5597802	Argument	"""gx_general_fill_path"""		5596099	3					
ANR	5597803	PrimaryExpression	"""gx_general_fill_path"""		5596099	0					
ANR	5597804	ElseStatement	else		5596099	0					
ANR	5597805	ExpressionStatement	lst . windings = lst . local_windings	570:16:22228:22261	5596099	0	True				
ANR	5597806	AssignmentExpression	lst . windings = lst . local_windings		5596099	0		=			
ANR	5597807	MemberAccess	lst . windings		5596099	0					
ANR	5597808	Identifier	lst		5596099	0					
ANR	5597809	Identifier	windings		5596099	1					
ANR	5597810	MemberAccess	lst . local_windings		5596099	1					
ANR	5597811	Identifier	lst		5596099	0					
ANR	5597812	Identifier	local_windings		5596099	1					
ANR	5597813	ExpressionStatement	"memset ( lst . windings , 0 , sizeof ( lst . windings [ 0 ] ) * lst . contour_count )"	571:12:22275:22343	5596099	1	True				
ANR	5597814	CallExpression	"memset ( lst . windings , 0 , sizeof ( lst . windings [ 0 ] ) * lst . contour_count )"		5596099	0					
ANR	5597815	Callee	memset		5596099	0					
ANR	5597816	Identifier	memset		5596099	0					
ANR	5597817	ArgumentList	lst . windings		5596099	1					
ANR	5597818	Argument	lst . windings		5596099	0					
ANR	5597819	MemberAccess	lst . windings		5596099	0					
ANR	5597820	Identifier	lst		5596099	0					
ANR	5597821	Identifier	windings		5596099	1					
ANR	5597822	Argument	0		5596099	1					
ANR	5597823	PrimaryExpression	0		5596099	0					
ANR	5597824	Argument	sizeof ( lst . windings [ 0 ] ) * lst . contour_count		5596099	2					
ANR	5597825	MultiplicativeExpression	sizeof ( lst . windings [ 0 ] ) * lst . contour_count		5596099	0		*			
ANR	5597826	SizeofExpression	sizeof ( lst . windings [ 0 ] )		5596099	0					
ANR	5597827	Sizeof	sizeof		5596099	0					
ANR	5597828	ArrayIndexing	lst . windings [ 0 ]		5596099	1					
ANR	5597829	MemberAccess	lst . windings		5596099	0					
ANR	5597830	Identifier	lst		5596099	0					
ANR	5597831	Identifier	windings		5596099	1					
ANR	5597832	PrimaryExpression	0		5596099	1					
ANR	5597833	MemberAccess	lst . contour_count		5596099	1					
ANR	5597834	Identifier	lst		5596099	0					
ANR	5597835	Identifier	contour_count		5596099	1					
ANR	5597836	ExpressionStatement	"code = ( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"	573:8:22363:22466	5596099	3	True				
ANR	5597837	AssignmentExpression	"code = ( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"		5596099	0		=			
ANR	5597838	Identifier	code		5596099	0					
ANR	5597839	CallExpression	"( * fill_loop ) ( & lst , ( max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band ) ) )"		5596099	1					
ANR	5597840	Callee	* fill_loop		5596099	0					
ANR	5597841	UnaryOperationExpression	* fill_loop		5596099	0					
ANR	5597842	UnaryOperator	*		5596099	0					
ANR	5597843	Identifier	fill_loop		5596099	1					
ANR	5597844	ArgumentList	& lst		5596099	1					
ANR	5597845	Argument	& lst		5596099	0					
ANR	5597846	UnaryOperationExpression	& lst		5596099	0					
ANR	5597847	UnaryOperator	&		5596099	0					
ANR	5597848	Identifier	lst		5596099	1					
ANR	5597849	Argument	max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band )		5596099	1					
ANR	5597850	ConditionalExpression	max_fill_band == 0 ? NO_BAND_MASK : int2fixed ( - max_fill_band )		5596099	0					
ANR	5597851	Condition	max_fill_band == 0		5596099	0					
ANR	5597852	EqualityExpression	max_fill_band == 0		5596099	0		==			
ANR	5597853	Identifier	max_fill_band		5596099	0					
ANR	5597854	PrimaryExpression	0		5596099	1					
ANR	5597855	Identifier	NO_BAND_MASK		5596099	1					
ANR	5597856	CallExpression	int2fixed ( - max_fill_band )		5596099	2					
ANR	5597857	Callee	int2fixed		5596099	0					
ANR	5597858	Identifier	int2fixed		5596099	0					
ANR	5597859	ArgumentList	- max_fill_band		5596099	1					
ANR	5597860	Argument	- max_fill_band		5596099	0					
ANR	5597861	UnaryOperationExpression	- max_fill_band		5596099	0					
ANR	5597862	UnaryOperator	-		5596099	0					
ANR	5597863	Identifier	max_fill_band		5596099	1					
ANR	5597864	IfStatement	if ( lst . windings != NULL && lst . windings != lst . local_windings )		5596099	4					
ANR	5597865	Condition	lst . windings != NULL && lst . windings != lst . local_windings	575:12:22480:22537	5596099	0	True				
ANR	5597866	AndExpression	lst . windings != NULL && lst . windings != lst . local_windings		5596099	0		&&			
ANR	5597867	EqualityExpression	lst . windings != NULL		5596099	0		!=			
ANR	5597868	MemberAccess	lst . windings		5596099	0					
ANR	5597869	Identifier	lst		5596099	0					
ANR	5597870	Identifier	windings		5596099	1					
ANR	5597871	Identifier	NULL		5596099	1					
ANR	5597872	EqualityExpression	lst . windings != lst . local_windings		5596099	1		!=			
ANR	5597873	MemberAccess	lst . windings		5596099	0					
ANR	5597874	Identifier	lst		5596099	0					
ANR	5597875	Identifier	windings		5596099	1					
ANR	5597876	MemberAccess	lst . local_windings		5596099	1					
ANR	5597877	Identifier	lst		5596099	0					
ANR	5597878	Identifier	local_windings		5596099	1					
ANR	5597879	ExpressionStatement	"gs_free_object ( pdev -> memory , lst . windings , ""gx_general_fill_path"" )"	576:12:22552:22618	5596099	1	True				
ANR	5597880	CallExpression	"gs_free_object ( pdev -> memory , lst . windings , ""gx_general_fill_path"" )"		5596099	0					
ANR	5597881	Callee	gs_free_object		5596099	0					
ANR	5597882	Identifier	gs_free_object		5596099	0					
ANR	5597883	ArgumentList	pdev -> memory		5596099	1					
ANR	5597884	Argument	pdev -> memory		5596099	0					
ANR	5597885	PtrMemberAccess	pdev -> memory		5596099	0					
ANR	5597886	Identifier	pdev		5596099	0					
ANR	5597887	Identifier	memory		5596099	1					
ANR	5597888	Argument	lst . windings		5596099	1					
ANR	5597889	MemberAccess	lst . windings		5596099	0					
ANR	5597890	Identifier	lst		5596099	0					
ANR	5597891	Identifier	windings		5596099	1					
ANR	5597892	Argument	"""gx_general_fill_path"""		5596099	2					
ANR	5597893	PrimaryExpression	"""gx_general_fill_path"""		5596099	0					
ANR	5597894	Label	nope :	578:2:22628:22632	5596099	76	True				
ANR	5597895	Identifier	nope		5596099	0					
ANR	5597896	IfStatement	if ( lst . close_count != 0 )		5596099	77					
ANR	5597897	Condition	lst . close_count != 0	578:11:22637:22656	5596099	0	True				
ANR	5597898	EqualityExpression	lst . close_count != 0		5596099	0		!=			
ANR	5597899	MemberAccess	lst . close_count		5596099	0					
ANR	5597900	Identifier	lst		5596099	0					
ANR	5597901	Identifier	close_count		5596099	1					
ANR	5597902	PrimaryExpression	0		5596099	1					
ANR	5597903	ExpressionStatement	"unclose_path ( pfpath , lst . close_count )"	579:8:22667:22704	5596099	1	True				
ANR	5597904	CallExpression	"unclose_path ( pfpath , lst . close_count )"		5596099	0					
ANR	5597905	Callee	unclose_path		5596099	0					
ANR	5597906	Identifier	unclose_path		5596099	0					
ANR	5597907	ArgumentList	pfpath		5596099	1					
ANR	5597908	Argument	pfpath		5596099	0					
ANR	5597909	Identifier	pfpath		5596099	0					
ANR	5597910	Argument	lst . close_count		5596099	1					
ANR	5597911	MemberAccess	lst . close_count		5596099	0					
ANR	5597912	Identifier	lst		5596099	0					
ANR	5597913	Identifier	close_count		5596099	1					
ANR	5597914	ExpressionStatement	free_line_list ( & lst )	580:4:22710:22730	5596099	78	True				
ANR	5597915	CallExpression	free_line_list ( & lst )		5596099	0					
ANR	5597916	Callee	free_line_list		5596099	0					
ANR	5597917	Identifier	free_line_list		5596099	0					
ANR	5597918	ArgumentList	& lst		5596099	1					
ANR	5597919	Argument	& lst		5596099	0					
ANR	5597920	UnaryOperationExpression	& lst		5596099	0					
ANR	5597921	UnaryOperator	&		5596099	0					
ANR	5597922	Identifier	lst		5596099	1					
ANR	5597923	IfStatement	if ( pfpath != ppath )		5596099	79					
ANR	5597924	Condition	pfpath != ppath	581:8:22740:22754	5596099	0	True				
ANR	5597925	EqualityExpression	pfpath != ppath		5596099	0		!=			
ANR	5597926	Identifier	pfpath		5596099	0					
ANR	5597927	Identifier	ppath		5596099	1					
ANR	5597928	ExpressionStatement	"gx_path_free ( pfpath , ""gx_general_fill_path"" )"	582:8:22793:22837	5596099	1	True				
ANR	5597929	CallExpression	"gx_path_free ( pfpath , ""gx_general_fill_path"" )"		5596099	0					
ANR	5597930	Callee	gx_path_free		5596099	0					
ANR	5597931	Identifier	gx_path_free		5596099	0					
ANR	5597932	ArgumentList	pfpath		5596099	1					
ANR	5597933	Argument	pfpath		5596099	0					
ANR	5597934	Identifier	pfpath		5596099	0					
ANR	5597935	Argument	"""gx_general_fill_path"""		5596099	1					
ANR	5597936	PrimaryExpression	"""gx_general_fill_path"""		5596099	0					
ANR	5597937	IfStatement	if ( gs_debug_c ( 'f' ) )		5596099	80					
ANR	5597938	Condition	gs_debug_c ( 'f' )	584:8:22893:22907	5596099	0	True				
ANR	5597939	CallExpression	gs_debug_c ( 'f' )		5596099	0					
ANR	5597940	Callee	gs_debug_c		5596099	0					
ANR	5597941	Identifier	gs_debug_c		5596099	0					
ANR	5597942	ArgumentList	'f'		5596099	1					
ANR	5597943	Argument	'f'		5596099	0					
ANR	5597944	PrimaryExpression	'f'		5596099	0					
ANR	5597945	CompoundStatement		301:25:12862:12862	5596099	1					
ANR	5597946	ExpressionStatement	"dmlputs ( ppath -> memory , ""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"" )"	585:8:22920:23035	5596099	0	True				
ANR	5597947	CallExpression	"dmlputs ( ppath -> memory , ""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"" )"		5596099	0					
ANR	5597948	Callee	dmlputs		5596099	0					
ANR	5597949	Identifier	dmlputs		5596099	0					
ANR	5597950	ArgumentList	ppath -> memory		5596099	1					
ANR	5597951	Argument	ppath -> memory		5596099	0					
ANR	5597952	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597953	Identifier	ppath		5596099	0					
ANR	5597954	Identifier	memory		5596099	1					
ANR	5597955	Argument	"""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"""		5596099	1					
ANR	5597956	PrimaryExpression	"""[f]  # alloc    up  down horiz step slowx  iter  find  band bstep bfill\\n"""		5596099	0					
ANR	5597957	ExpressionStatement	"dmlprintf5 ( ppath -> memory , "" %5ld %5ld %5ld %5ld %5ld"" , stats_fill . fill , stats_fill . fill_alloc , stats_fill . y_up , stats_fill . y_down , stats_fill . horiz )"	587:8:23045:23250	5596099	1	True				
ANR	5597958	CallExpression	"dmlprintf5 ( ppath -> memory , "" %5ld %5ld %5ld %5ld %5ld"" , stats_fill . fill , stats_fill . fill_alloc , stats_fill . y_up , stats_fill . y_down , stats_fill . horiz )"		5596099	0					
ANR	5597959	Callee	dmlprintf5		5596099	0					
ANR	5597960	Identifier	dmlprintf5		5596099	0					
ANR	5597961	ArgumentList	ppath -> memory		5596099	1					
ANR	5597962	Argument	ppath -> memory		5596099	0					
ANR	5597963	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597964	Identifier	ppath		5596099	0					
ANR	5597965	Identifier	memory		5596099	1					
ANR	5597966	Argument	""" %5ld %5ld %5ld %5ld %5ld"""		5596099	1					
ANR	5597967	PrimaryExpression	""" %5ld %5ld %5ld %5ld %5ld"""		5596099	0					
ANR	5597968	Argument	stats_fill . fill		5596099	2					
ANR	5597969	MemberAccess	stats_fill . fill		5596099	0					
ANR	5597970	Identifier	stats_fill		5596099	0					
ANR	5597971	Identifier	fill		5596099	1					
ANR	5597972	Argument	stats_fill . fill_alloc		5596099	3					
ANR	5597973	MemberAccess	stats_fill . fill_alloc		5596099	0					
ANR	5597974	Identifier	stats_fill		5596099	0					
ANR	5597975	Identifier	fill_alloc		5596099	1					
ANR	5597976	Argument	stats_fill . y_up		5596099	4					
ANR	5597977	MemberAccess	stats_fill . y_up		5596099	0					
ANR	5597978	Identifier	stats_fill		5596099	0					
ANR	5597979	Identifier	y_up		5596099	1					
ANR	5597980	Argument	stats_fill . y_down		5596099	5					
ANR	5597981	MemberAccess	stats_fill . y_down		5596099	0					
ANR	5597982	Identifier	stats_fill		5596099	0					
ANR	5597983	Identifier	y_down		5596099	1					
ANR	5597984	Argument	stats_fill . horiz		5596099	6					
ANR	5597985	MemberAccess	stats_fill . horiz		5596099	0					
ANR	5597986	Identifier	stats_fill		5596099	0					
ANR	5597987	Identifier	horiz		5596099	1					
ANR	5597988	ExpressionStatement	"dmlprintf4 ( ppath -> memory , "" %5ld %5ld %5ld %5ld"" , stats_fill . x_step , stats_fill . slow_x , stats_fill . iter , stats_fill . find_y )"	591:8:23260:23421	5596099	2	True				
ANR	5597989	CallExpression	"dmlprintf4 ( ppath -> memory , "" %5ld %5ld %5ld %5ld"" , stats_fill . x_step , stats_fill . slow_x , stats_fill . iter , stats_fill . find_y )"		5596099	0					
ANR	5597990	Callee	dmlprintf4		5596099	0					
ANR	5597991	Identifier	dmlprintf4		5596099	0					
ANR	5597992	ArgumentList	ppath -> memory		5596099	1					
ANR	5597993	Argument	ppath -> memory		5596099	0					
ANR	5597994	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5597995	Identifier	ppath		5596099	0					
ANR	5597996	Identifier	memory		5596099	1					
ANR	5597997	Argument	""" %5ld %5ld %5ld %5ld"""		5596099	1					
ANR	5597998	PrimaryExpression	""" %5ld %5ld %5ld %5ld"""		5596099	0					
ANR	5597999	Argument	stats_fill . x_step		5596099	2					
ANR	5598000	MemberAccess	stats_fill . x_step		5596099	0					
ANR	5598001	Identifier	stats_fill		5596099	0					
ANR	5598002	Identifier	x_step		5596099	1					
ANR	5598003	Argument	stats_fill . slow_x		5596099	3					
ANR	5598004	MemberAccess	stats_fill . slow_x		5596099	0					
ANR	5598005	Identifier	stats_fill		5596099	0					
ANR	5598006	Identifier	slow_x		5596099	1					
ANR	5598007	Argument	stats_fill . iter		5596099	4					
ANR	5598008	MemberAccess	stats_fill . iter		5596099	0					
ANR	5598009	Identifier	stats_fill		5596099	0					
ANR	5598010	Identifier	iter		5596099	1					
ANR	5598011	Argument	stats_fill . find_y		5596099	5					
ANR	5598012	MemberAccess	stats_fill . find_y		5596099	0					
ANR	5598013	Identifier	stats_fill		5596099	0					
ANR	5598014	Identifier	find_y		5596099	1					
ANR	5598015	ExpressionStatement	"dmlprintf3 ( ppath -> memory , "" %5ld %5ld %5ld\\n"" , stats_fill . band , stats_fill . band_step , stats_fill . band_fill )"	594:8:23431:23576	5596099	3	True				
ANR	5598016	CallExpression	"dmlprintf3 ( ppath -> memory , "" %5ld %5ld %5ld\\n"" , stats_fill . band , stats_fill . band_step , stats_fill . band_fill )"		5596099	0					
ANR	5598017	Callee	dmlprintf3		5596099	0					
ANR	5598018	Identifier	dmlprintf3		5596099	0					
ANR	5598019	ArgumentList	ppath -> memory		5596099	1					
ANR	5598020	Argument	ppath -> memory		5596099	0					
ANR	5598021	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5598022	Identifier	ppath		5596099	0					
ANR	5598023	Identifier	memory		5596099	1					
ANR	5598024	Argument	""" %5ld %5ld %5ld\\n"""		5596099	1					
ANR	5598025	PrimaryExpression	""" %5ld %5ld %5ld\\n"""		5596099	0					
ANR	5598026	Argument	stats_fill . band		5596099	2					
ANR	5598027	MemberAccess	stats_fill . band		5596099	0					
ANR	5598028	Identifier	stats_fill		5596099	0					
ANR	5598029	Identifier	band		5596099	1					
ANR	5598030	Argument	stats_fill . band_step		5596099	3					
ANR	5598031	MemberAccess	stats_fill . band_step		5596099	0					
ANR	5598032	Identifier	stats_fill		5596099	0					
ANR	5598033	Identifier	band_step		5596099	1					
ANR	5598034	Argument	stats_fill . band_fill		5596099	4					
ANR	5598035	MemberAccess	stats_fill . band_fill		5596099	0					
ANR	5598036	Identifier	stats_fill		5596099	0					
ANR	5598037	Identifier	band_fill		5596099	1					
ANR	5598038	ExpressionStatement	"dmlputs ( ppath -> memory , ""[f]    afill slant shall sfill mqcrs order slowo\\n"" )"	597:8:23586:23678	5596099	4	True				
ANR	5598039	CallExpression	"dmlputs ( ppath -> memory , ""[f]    afill slant shall sfill mqcrs order slowo\\n"" )"		5596099	0					
ANR	5598040	Callee	dmlputs		5596099	0					
ANR	5598041	Identifier	dmlputs		5596099	0					
ANR	5598042	ArgumentList	ppath -> memory		5596099	1					
ANR	5598043	Argument	ppath -> memory		5596099	0					
ANR	5598044	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5598045	Identifier	ppath		5596099	0					
ANR	5598046	Identifier	memory		5596099	1					
ANR	5598047	Argument	"""[f]    afill slant shall sfill mqcrs order slowo\\n"""		5596099	1					
ANR	5598048	PrimaryExpression	"""[f]    afill slant shall sfill mqcrs order slowo\\n"""		5596099	0					
ANR	5598049	ExpressionStatement	"dmlprintf7 ( ppath -> memory , ""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"" , stats_fill . afill , stats_fill . slant , stats_fill . slant_shallow , stats_fill . sfill , stats_fill . mq_cross , stats_fill . order , stats_fill . slow_order )"	599:8:23688:23978	5596099	5	True				
ANR	5598050	CallExpression	"dmlprintf7 ( ppath -> memory , ""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"" , stats_fill . afill , stats_fill . slant , stats_fill . slant_shallow , stats_fill . sfill , stats_fill . mq_cross , stats_fill . order , stats_fill . slow_order )"		5596099	0					
ANR	5598051	Callee	dmlprintf7		5596099	0					
ANR	5598052	Identifier	dmlprintf7		5596099	0					
ANR	5598053	ArgumentList	ppath -> memory		5596099	1					
ANR	5598054	Argument	ppath -> memory		5596099	0					
ANR	5598055	PtrMemberAccess	ppath -> memory		5596099	0					
ANR	5598056	Identifier	ppath		5596099	0					
ANR	5598057	Identifier	memory		5596099	1					
ANR	5598058	Argument	"""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"""		5596099	1					
ANR	5598059	PrimaryExpression	"""       %5ld %5ld %5ld %5ld %5ld %5ld %5ld\\n"""		5596099	0					
ANR	5598060	Argument	stats_fill . afill		5596099	2					
ANR	5598061	MemberAccess	stats_fill . afill		5596099	0					
ANR	5598062	Identifier	stats_fill		5596099	0					
ANR	5598063	Identifier	afill		5596099	1					
ANR	5598064	Argument	stats_fill . slant		5596099	3					
ANR	5598065	MemberAccess	stats_fill . slant		5596099	0					
ANR	5598066	Identifier	stats_fill		5596099	0					
ANR	5598067	Identifier	slant		5596099	1					
ANR	5598068	Argument	stats_fill . slant_shallow		5596099	4					
ANR	5598069	MemberAccess	stats_fill . slant_shallow		5596099	0					
ANR	5598070	Identifier	stats_fill		5596099	0					
ANR	5598071	Identifier	slant_shallow		5596099	1					
ANR	5598072	Argument	stats_fill . sfill		5596099	5					
ANR	5598073	MemberAccess	stats_fill . sfill		5596099	0					
ANR	5598074	Identifier	stats_fill		5596099	0					
ANR	5598075	Identifier	sfill		5596099	1					
ANR	5598076	Argument	stats_fill . mq_cross		5596099	6					
ANR	5598077	MemberAccess	stats_fill . mq_cross		5596099	0					
ANR	5598078	Identifier	stats_fill		5596099	0					
ANR	5598079	Identifier	mq_cross		5596099	1					
ANR	5598080	Argument	stats_fill . order		5596099	7					
ANR	5598081	MemberAccess	stats_fill . order		5596099	0					
ANR	5598082	Identifier	stats_fill		5596099	0					
ANR	5598083	Identifier	order		5596099	1					
ANR	5598084	Argument	stats_fill . slow_order		5596099	8					
ANR	5598085	MemberAccess	stats_fill . slow_order		5596099	0					
ANR	5598086	Identifier	stats_fill		5596099	0					
ANR	5598087	Identifier	slow_order		5596099	1					
ANR	5598088	IfStatement	if ( clipping )		5596099	81					
ANR	5598089	Condition	clipping	606:8:24001:24008	5596099	0	True				
ANR	5598090	Identifier	clipping		5596099	0					
ANR	5598091	ExpressionStatement	gx_destroy_clip_device_on_stack ( & cdev )	607:8:24019:24057	5596099	1	True				
ANR	5598092	CallExpression	gx_destroy_clip_device_on_stack ( & cdev )		5596099	0					
ANR	5598093	Callee	gx_destroy_clip_device_on_stack		5596099	0					
ANR	5598094	Identifier	gx_destroy_clip_device_on_stack		5596099	0					
ANR	5598095	ArgumentList	& cdev		5596099	1					
ANR	5598096	Argument	& cdev		5596099	0					
ANR	5598097	UnaryOperationExpression	& cdev		5596099	0					
ANR	5598098	UnaryOperator	&		5596099	0					
ANR	5598099	Identifier	cdev		5596099	1					
ANR	5598100	ReturnStatement	return code ;	608:4:24063:24074	5596099	82	True				
ANR	5598101	Identifier	code		5596099	0					
ANR	5598102	ReturnType	static int		5596099	1					
ANR	5598103	Identifier	gx_general_fill_path		5596099	2					
ANR	5598104	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		5596099	3					
ANR	5598105	Parameter	gx_device * pdev	281:21:9860:9875	5596099	0	True				
ANR	5598106	ParameterType	gx_device *		5596099	0					
ANR	5598107	Identifier	pdev		5596099	1					
ANR	5598108	Parameter	const gs_gstate * pgs	281:39:9878:9898	5596099	1	True				
ANR	5598109	ParameterType	const gs_gstate *		5596099	0					
ANR	5598110	Identifier	pgs		5596099	1					
ANR	5598111	Parameter	gx_path * ppath	282:21:9922:9936	5596099	2	True				
ANR	5598112	ParameterType	gx_path *		5596099	0					
ANR	5598113	Identifier	ppath		5596099	1					
ANR	5598114	Parameter	const gx_fill_params * params	282:38:9939:9967	5596099	3	True				
ANR	5598115	ParameterType	const gx_fill_params *		5596099	0					
ANR	5598116	Identifier	params		5596099	1					
ANR	5598117	Parameter	const gx_device_color * pdevc	283:17:9987:10015	5596099	4	True				
ANR	5598118	ParameterType	const gx_device_color *		5596099	0					
ANR	5598119	Identifier	pdevc		5596099	1					
ANR	5598120	Parameter	const gx_clip_path * pcpath	283:48:10018:10044	5596099	5	True				
ANR	5598121	ParameterType	const gx_clip_path *		5596099	0					
ANR	5598122	Identifier	pcpath		5596099	1					
ANR	5598123	CFGEntryNode	ENTRY		5596099		True				
ANR	5598124	CFGExitNode	EXIT		5596099		True				
ANR	5598125	Symbol	clipping		5596099						
ANR	5598126	Symbol	params -> flatness		5596099						
ANR	5598127	Symbol	& rbox		5596099						
ANR	5598128	Symbol	rbox . q		5596099						
ANR	5598129	Symbol	ffpath		5596099						
ANR	5598130	Symbol	* pgs		5596099						
ANR	5598131	Symbol	fo . fill_trap		5596099						
ANR	5598132	Symbol	pdevc		5596099						
ANR	5598133	Symbol	bbox		5596099						
ANR	5598134	Symbol	stats_fill . y_down		5596099						
ANR	5598135	Symbol	sbox . p		5596099						
ANR	5598136	Symbol	sbox . q		5596099						
ANR	5598137	Symbol	get_clipping_box		5596099						
ANR	5598138	Symbol	fo . ymin		5596099						
ANR	5598139	Symbol	rbox . p		5596099						
ANR	5598140	Symbol	& ffpath		5596099						
ANR	5598141	Symbol	gx_fill_edgebuffer_tr_app		5596099						
ANR	5598142	Symbol	sbox . q . x		5596099						
ANR	5598143	Symbol	& fo		5596099						
ANR	5598144	Symbol	sbox . q . y		5596099						
ANR	5598145	Symbol	dev		5596099						
ANR	5598146	Symbol	fixed_ceiling		5596099						
ANR	5598147	Symbol	gx_path_is_rectangular		5596099						
ANR	5598148	Symbol	GS_SCANCONVERTER_DEFAULT_IS_EDGEBUFFER		5596099						
ANR	5598149	Symbol	fill_trapezoid		5596099						
ANR	5598150	Symbol	fo . ymax		5596099						
ANR	5598151	Symbol	save_dev		5596099						
ANR	5598152	Symbol	ibox . p . x		5596099						
ANR	5598153	Symbol	ibox . p . y		5596099						
ANR	5598154	Symbol	& bbox		5596099						
ANR	5598155	Symbol	fixed2int_pixround		5596099						
ANR	5598156	Symbol	params		5596099						
ANR	5598157	Symbol	fill_rectangle		5596099						
ANR	5598158	Symbol	rbox		5596099						
ANR	5598159	Symbol	scanconverter		5596099						
ANR	5598160	Symbol	rbox . p . x		5596099						
ANR	5598161	Symbol	countof		5596099						
ANR	5598162	Symbol	ibox . p		5596099						
ANR	5598163	Symbol	ibox . q		5596099						
ANR	5598164	Symbol	rbox . p . y		5596099						
ANR	5598165	Symbol	lop_is_idempotent		5596099						
ANR	5598166	Symbol	stats_fill . band_fill		5596099						
ANR	5598167	Symbol	stats_fill . slant_shallow		5596099						
ANR	5598168	Symbol	gx_path_copy_reducing		5596099						
ANR	5598169	Symbol	lst . local_windings		5596099						
ANR	5598170	Symbol	bbox . p . y		5596099						
ANR	5598171	Symbol	gx_filter_edgebuffer_tr_app		5596099						
ANR	5598172	Symbol	bbox . p . x		5596099						
ANR	5598173	Symbol	gx_scan_convert_tr_app		5596099						
ANR	5598174	Symbol	* dev		5596099						
ANR	5598175	Symbol	stats_fill . y_up		5596099						
ANR	5598176	Symbol	stats_fill . x_step		5596099						
ANR	5598177	Symbol	is_character		5596099						
ANR	5598178	Symbol	ppath -> subpath_count		5596099						
ANR	5598179	Symbol	adjust . x		5596099						
ANR	5598180	Symbol	adjust . y		5596099						
ANR	5598181	Symbol	& cdev		5596099						
ANR	5598182	Symbol	pco_small_curves		5596099						
ANR	5598183	Symbol	* fill_loop		5596099						
ANR	5598184	Symbol	lst . contour_count		5596099						
ANR	5598185	Symbol	lop		5596099						
ANR	5598186	Symbol	sbox		5596099						
ANR	5598187	Symbol	save_dev -> max_fill_band		5596099						
ANR	5598188	Symbol	stats_fill . iter		5596099						
ANR	5598189	Symbol	gx_filter_edgebuffer_tr		5596099						
ANR	5598190	Symbol	float2fixed		5596099						
ANR	5598191	Symbol	gs_currentcpsimode		5596099						
ANR	5598192	Symbol	max_fill_band		5596099						
ANR	5598193	Symbol	gx_scan_convert_tr		5596099						
ANR	5598194	Symbol	stats_fill . find_y		5596099						
ANR	5598195	Symbol	lst . fo		5596099						
ANR	5598196	Symbol	pgs		5596099						
ANR	5598197	Symbol	pgs -> memory		5596099						
ANR	5598198	Symbol	pcpath		5596099						
ANR	5598199	Symbol	* params		5596099						
ANR	5598200	Symbol	lst . bbox_left		5596099						
ANR	5598201	Symbol	fo . pbox		5596099						
ANR	5598202	Symbol	gx_path_has_curves		5596099						
ANR	5598203	Symbol	fo . fill_by_trapezoids		5596099						
ANR	5598204	Symbol	gx_scan_convert_app		5596099						
ANR	5598205	Symbol	* lst . windings		5596099						
ANR	5598206	Symbol	stats_fill		5596099						
ANR	5598207	Symbol	int2fixed		5596099						
ANR	5598208	Symbol	* pdev		5596099						
ANR	5598209	Symbol	lst . windings		5596099						
ANR	5598210	Symbol	GS_SCANCONVERTER_DEFAULT		5596099						
ANR	5598211	Symbol	gs_alloc_byte_array		5596099						
ANR	5598212	Symbol	stats_fill . afill		5596099						
ANR	5598213	Symbol	fo . adjust_below		5596099						
ANR	5598214	Symbol	stats_fill . sfill		5596099						
ANR	5598215	Symbol	& lst . fo		5596099						
ANR	5598216	Symbol	gx_fill_edgebuffer_tr		5596099						
ANR	5598217	Symbol	color_writes_pure		5596099						
ANR	5598218	Symbol	stats_fill . order		5596099						
ANR	5598219	Symbol	bbox . q . x		5596099						
ANR	5598220	Symbol	fixed2int		5596099						
ANR	5598221	Symbol	bbox . q . y		5596099						
ANR	5598222	Symbol	gx_path_merge_contacting_contours		5596099						
ANR	5598223	Symbol	pdev		5596099						
ANR	5598224	Symbol	pdev -> memory		5596099						
ANR	5598225	Symbol	fill_loop		5596099						
ANR	5598226	Symbol	gs_debug_c		5596099						
ANR	5598227	Symbol	fixed_epsilon		5596099						
ANR	5598228	Symbol	* save_dev		5596099						
ANR	5598229	Symbol	eb		5596099						
ANR	5598230	Symbol	* ppath		5596099						
ANR	5598231	Symbol	pco_accurate		5596099						
ANR	5598232	Symbol	stats_fill . band		5596099						
ANR	5598233	Symbol	sbox . p . x		5596099						
ANR	5598234	Symbol	NULL		5596099						
ANR	5598235	Symbol	sbox . p . y		5596099						
ANR	5598236	Symbol	spot_into_scan_lines		5596099						
ANR	5598237	Symbol	rbox . q . y		5596099						
ANR	5598238	Symbol	rbox . q . x		5596099						
ANR	5598239	Symbol	params -> rule		5596099						
ANR	5598240	Symbol	gx_fill_rectangle_device_rop		5596099						
ANR	5598241	Symbol	fo . adjust_right		5596099						
ANR	5598242	Symbol	& ibox		5596099						
ANR	5598243	Symbol	fo . adjust_left		5596099						
ANR	5598244	Symbol	fo . fixed_flat		5596099						
ANR	5598245	Symbol	fo . dev		5596099						
ANR	5598246	Symbol	ibox . q . y		5596099						
ANR	5598247	Symbol	spot_into_trapezoids		5596099						
ANR	5598248	Symbol	adjust		5596099						
ANR	5598249	Symbol	* lst		5596099						
ANR	5598250	Symbol	params -> adjust		5596099						
ANR	5598251	Symbol	x0		5596099						
ANR	5598252	Symbol	x1		5596099						
ANR	5598253	Symbol	ibox . q . x		5596099						
ANR	5598254	Symbol	pgs -> accurate_curves		5596099						
ANR	5598255	Symbol	dev -> max_fill_band		5596099						
ANR	5598256	Symbol	stats_fill . horiz		5596099						
ANR	5598257	Symbol	fo . rule		5596099						
ANR	5598258	Symbol	code		5596099						
ANR	5598259	Symbol	params -> adjust . x		5596099						
ANR	5598260	Symbol	gx_filter_edgebuffer_app		5596099						
ANR	5598261	Symbol	& eb		5596099						
ANR	5598262	Symbol	gx_fill_edgebuffer		5596099						
ANR	5598263	Symbol	fo		5596099						
ANR	5598264	Symbol	ppath		5596099						
ANR	5598265	Symbol	lst		5596099						
ANR	5598266	Symbol	* ( const fill_options * * ) & lst . fo		5596099						
ANR	5598267	Symbol	gx_filter_edgebuffer		5596099						
ANR	5598268	Symbol	stats_fill . slow_order		5596099						
ANR	5598269	Symbol	fo . adjust_above		5596099						
ANR	5598270	Symbol	is_spotan_device		5596099						
ANR	5598271	Symbol	dev_proc		5596099						
ANR	5598272	Symbol	stats_fill . band_step		5596099						
ANR	5598273	Symbol	big_path		5596099						
ANR	5598274	Symbol	y0		5596099						
ANR	5598275	Symbol	y1		5596099						
ANR	5598276	Symbol	fixed_half		5596099						
ANR	5598277	Symbol	ppath -> memory		5596099						
ANR	5598278	Symbol	add_y_list		5596099						
ANR	5598279	Symbol	lst . bbox_width		5596099						
ANR	5598280	Symbol	gx_scan_convert		5596099						
ANR	5598281	Symbol	pgs -> log_op		5596099						
ANR	5598282	Symbol	bbox . q		5596099						
ANR	5598283	Symbol	& sbox		5596099						
ANR	5598284	Symbol	gx_fill_edgebuffer_app		5596099						
ANR	5598285	Symbol	fixed2float		5596099						
ANR	5598286	Symbol	gx_path__check_curves		5596099						
ANR	5598287	Symbol	stats_fill . slow_x		5596099						
ANR	5598288	Symbol	false		5596099						
ANR	5598289	Symbol	rect_within		5596099						
ANR	5598290	Symbol	stats_fill . mq_cross		5596099						
ANR	5598291	Symbol	pfpath		5596099						
ANR	5598292	Symbol	NO_BAND_MASK		5596099						
ANR	5598293	Symbol	gs_getscanconverter		5596099						
ANR	5598294	Symbol	bbox . p		5596099						
ANR	5598295	Symbol	lst . close_count		5596099						
ANR	5598296	Symbol	stats_fill . fill_alloc		5596099						
ANR	5598297	Symbol	fo . pdevc		5596099						
ANR	5598298	Symbol	fo . fill_rect		5596099						
ANR	5598299	Symbol	ibox		5596099						
ANR	5598300	Symbol	fill_by_trapezoids		5596099						
ANR	5598301	Symbol	& lst		5596099						
ANR	5598302	Symbol	fo . fill_direct		5596099						
ANR	5598303	Symbol	cdev . max_fill_band		5596099						
ANR	5598304	Symbol	stats_fill . fill		5596099						
ANR	5598305	Symbol	fo . is_spotan		5596099						
ANR	5598306	Symbol	GS_SCANCONVERTER_EDGEBUFFER		5596099						
ANR	5598307	Symbol	stats_fill . slant		5596099						
ANR	5598308	Symbol	fo . lop		5596099						
ANR	5598309	Symbol	cdev		5596099						
ANR	5598310	Function	pass_shading_area_through_clip_path_device	611:0:24079:24666							
ANR	5598311	FunctionDef	"pass_shading_area_through_clip_path_device (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		5598310	0					
ANR	5598312	CompoundStatement		615:0:24320:24666	5598310	0					
ANR	5598313	IfStatement	if ( pdevc == NULL )		5598310	0					
ANR	5598314	Condition	pdevc == NULL	616:8:24330:24342	5598310	0	True				
ANR	5598315	EqualityExpression	pdevc == NULL		5598310	0		==			
ANR	5598316	Identifier	pdevc		5598310	0					
ANR	5598317	Identifier	NULL		5598310	1					
ANR	5598318	CompoundStatement		3:8:34:79	5598310	1					
ANR	5598319	IdentifierDeclStatement	gx_device_clip * cdev = ( gx_device_clip * ) pdev ;	617:8:24355:24400	5598310	0	True				
ANR	5598320	IdentifierDecl	* cdev = ( gx_device_clip * ) pdev		5598310	0					
ANR	5598321	IdentifierDeclType	gx_device_clip *		5598310	0					
ANR	5598322	Identifier	cdev		5598310	1					
ANR	5598323	AssignmentExpression	* cdev = ( gx_device_clip * ) pdev		5598310	2		=			
ANR	5598324	Identifier	cdev		5598310	0					
ANR	5598325	CastExpression	( gx_device_clip * ) pdev		5598310	1					
ANR	5598326	CastTarget	gx_device_clip *		5598310	0					
ANR	5598327	Identifier	pdev		5598310	1					
ANR	5598328	ReturnStatement	"return dev_proc ( cdev -> target , fill_path ) ( cdev -> target , pgs , ppath , params , pdevc , pcpath ) ;"	619:8:24411:24500	5598310	1	True				
ANR	5598329	CallExpression	"dev_proc ( cdev -> target , fill_path ) ( cdev -> target , pgs , ppath , params , pdevc , pcpath )"		5598310	0					
ANR	5598330	Callee	"dev_proc ( cdev -> target , fill_path )"		5598310	0					
ANR	5598331	CallExpression	"dev_proc ( cdev -> target , fill_path )"		5598310	0					
ANR	5598332	Callee	dev_proc		5598310	0					
ANR	5598333	Identifier	dev_proc		5598310	0					
ANR	5598334	ArgumentList	cdev -> target		5598310	1					
ANR	5598335	Argument	cdev -> target		5598310	0					
ANR	5598336	PtrMemberAccess	cdev -> target		5598310	0					
ANR	5598337	Identifier	cdev		5598310	0					
ANR	5598338	Identifier	target		5598310	1					
ANR	5598339	Argument	fill_path		5598310	1					
ANR	5598340	Identifier	fill_path		5598310	0					
ANR	5598341	ArgumentList	cdev -> target		5598310	1					
ANR	5598342	Argument	cdev -> target		5598310	0					
ANR	5598343	PtrMemberAccess	cdev -> target		5598310	0					
ANR	5598344	Identifier	cdev		5598310	0					
ANR	5598345	Identifier	target		5598310	1					
ANR	5598346	Argument	pgs		5598310	1					
ANR	5598347	Identifier	pgs		5598310	0					
ANR	5598348	Argument	ppath		5598310	2					
ANR	5598349	Identifier	ppath		5598310	0					
ANR	5598350	Argument	params		5598310	3					
ANR	5598351	Identifier	params		5598310	0					
ANR	5598352	Argument	pdevc		5598310	4					
ANR	5598353	Identifier	pdevc		5598310	0					
ANR	5598354	Argument	pcpath		5598310	5					
ANR	5598355	Identifier	pcpath		5598310	0					
ANR	5598356	ReturnStatement	"return gx_default_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath ) ;"	622:4:24596:24664	5598310	1	True				
ANR	5598357	CallExpression	"gx_default_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		5598310	0					
ANR	5598358	Callee	gx_default_fill_path		5598310	0					
ANR	5598359	Identifier	gx_default_fill_path		5598310	0					
ANR	5598360	ArgumentList	pdev		5598310	1					
ANR	5598361	Argument	pdev		5598310	0					
ANR	5598362	Identifier	pdev		5598310	0					
ANR	5598363	Argument	pgs		5598310	1					
ANR	5598364	Identifier	pgs		5598310	0					
ANR	5598365	Argument	ppath		5598310	2					
ANR	5598366	Identifier	ppath		5598310	0					
ANR	5598367	Argument	params		5598310	3					
ANR	5598368	Identifier	params		5598310	0					
ANR	5598369	Argument	pdevc		5598310	4					
ANR	5598370	Identifier	pdevc		5598310	0					
ANR	5598371	Argument	pcpath		5598310	5					
ANR	5598372	Identifier	pcpath		5598310	0					
ANR	5598373	ReturnType	static int		5598310	1					
ANR	5598374	Identifier	pass_shading_area_through_clip_path_device		5598310	2					
ANR	5598375	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		5598310	3					
ANR	5598376	Parameter	gx_device * pdev	612:43:24133:24148	5598310	0	True				
ANR	5598377	ParameterType	gx_device *		5598310	0					
ANR	5598378	Identifier	pdev		5598310	1					
ANR	5598379	Parameter	const gs_gstate * pgs	612:61:24151:24171	5598310	1	True				
ANR	5598380	ParameterType	const gs_gstate *		5598310	0					
ANR	5598381	Identifier	pgs		5598310	1					
ANR	5598382	Parameter	gx_path * ppath	613:21:24195:24209	5598310	2	True				
ANR	5598383	ParameterType	gx_path *		5598310	0					
ANR	5598384	Identifier	ppath		5598310	1					
ANR	5598385	Parameter	const gx_fill_params * params	613:38:24212:24240	5598310	3	True				
ANR	5598386	ParameterType	const gx_fill_params *		5598310	0					
ANR	5598387	Identifier	params		5598310	1					
ANR	5598388	Parameter	const gx_device_color * pdevc	614:17:24260:24288	5598310	4	True				
ANR	5598389	ParameterType	const gx_device_color *		5598310	0					
ANR	5598390	Identifier	pdevc		5598310	1					
ANR	5598391	Parameter	const gx_clip_path * pcpath	614:48:24291:24317	5598310	5	True				
ANR	5598392	ParameterType	const gx_clip_path *		5598310	0					
ANR	5598393	Identifier	pcpath		5598310	1					
ANR	5598394	CFGEntryNode	ENTRY		5598310		True				
ANR	5598395	CFGExitNode	EXIT		5598310		True				
ANR	5598396	Symbol	NULL		5598310						
ANR	5598397	Symbol	pdevc		5598310						
ANR	5598398	Symbol	cdev -> target		5598310						
ANR	5598399	Symbol	ppath		5598310						
ANR	5598400	Symbol	params		5598310						
ANR	5598401	Symbol	pdev		5598310						
ANR	5598402	Symbol	* cdev		5598310						
ANR	5598403	Symbol	dev_proc		5598310						
ANR	5598404	Symbol	fill_path		5598310						
ANR	5598405	Symbol	cdev		5598310						
ANR	5598406	Symbol	pgs		5598310						
ANR	5598407	Symbol	pcpath		5598310						
ANR	5598408	Symbol	gx_default_fill_path		5598310						
ANR	5598409	Function	gx_default_fill_path	629:0:24766:29089							
ANR	5598410	FunctionDef	"gx_default_fill_path (gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath)"		5598409	0					
ANR	5598411	CompoundStatement		633:0:24978:29089	5598409	0					
ANR	5598412	IdentifierDeclStatement	int code = 0 ;	634:4:24984:24996	5598409	0	True				
ANR	5598413	IdentifierDecl	code = 0		5598409	0					
ANR	5598414	IdentifierDeclType	int		5598409	0					
ANR	5598415	Identifier	code		5598409	1					
ANR	5598416	AssignmentExpression	code = 0		5598409	2		=			
ANR	5598417	Identifier	code		5598409	0					
ANR	5598418	PrimaryExpression	0		5598409	1					
ANR	5598419	IfStatement	if ( gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) ) )		5598409	1					
ANR	5598420	Condition	gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )	636:8:25007:25192	5598409	0	True				
ANR	5598421	OrExpression	gx_dc_is_pattern2_color ( pdevc ) || pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )		5598409	0		||			
ANR	5598422	CallExpression	gx_dc_is_pattern2_color ( pdevc )		5598409	0					
ANR	5598423	Callee	gx_dc_is_pattern2_color		5598409	0					
ANR	5598424	Identifier	gx_dc_is_pattern2_color		5598409	0					
ANR	5598425	ArgumentList	pdevc		5598409	1					
ANR	5598426	Argument	pdevc		5598409	0					
ANR	5598427	Identifier	pdevc		5598409	0					
ANR	5598428	OrExpression	pdevc -> type == & gx_dc_type_data_ht_colored || ( gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile ) )		5598409	1		||			
ANR	5598429	EqualityExpression	pdevc -> type == & gx_dc_type_data_ht_colored		5598409	0		==			
ANR	5598430	PtrMemberAccess	pdevc -> type		5598409	0					
ANR	5598431	Identifier	pdevc		5598409	0					
ANR	5598432	Identifier	type		5598409	1					
ANR	5598433	UnaryOperationExpression	& gx_dc_type_data_ht_colored		5598409	1					
ANR	5598434	UnaryOperator	&		5598409	0					
ANR	5598435	Identifier	gx_dc_type_data_ht_colored		5598409	1					
ANR	5598436	AndExpression	gx_dc_is_pattern1_color ( pdevc ) && gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile )		5598409	1		&&			
ANR	5598437	CallExpression	gx_dc_is_pattern1_color ( pdevc )		5598409	0					
ANR	5598438	Callee	gx_dc_is_pattern1_color		5598409	0					
ANR	5598439	Identifier	gx_dc_is_pattern1_color		5598409	0					
ANR	5598440	ArgumentList	pdevc		5598409	1					
ANR	5598441	Argument	pdevc		5598409	0					
ANR	5598442	Identifier	pdevc		5598409	0					
ANR	5598443	CallExpression	gx_pattern_tile_is_clist ( pdevc -> colors . pattern . p_tile )		5598409	1					
ANR	5598444	Callee	gx_pattern_tile_is_clist		5598409	0					
ANR	5598445	Identifier	gx_pattern_tile_is_clist		5598409	0					
ANR	5598446	ArgumentList	pdevc -> colors . pattern . p_tile		5598409	1					
ANR	5598447	Argument	pdevc -> colors . pattern . p_tile		5598409	0					
ANR	5598448	MemberAccess	pdevc -> colors . pattern . p_tile		5598409	0					
ANR	5598449	MemberAccess	pdevc -> colors . pattern		5598409	0					
ANR	5598450	PtrMemberAccess	pdevc -> colors		5598409	0					
ANR	5598451	Identifier	pdevc		5598409	0					
ANR	5598452	Identifier	colors		5598409	1					
ANR	5598453	Identifier	pattern		5598409	1					
ANR	5598454	Identifier	p_tile		5598409	1					
ANR	5598455	CompoundStatement		24:8:1262:1303	5598409	1					
ANR	5598456	IdentifierDeclStatement	"gx_clip_path cpath_intersection , cpath_with_shading_bbox ;"	654:8:26128:26184	5598409	0	True				
ANR	5598457	IdentifierDecl	cpath_intersection		5598409	0					
ANR	5598458	IdentifierDeclType	gx_clip_path		5598409	0					
ANR	5598459	Identifier	cpath_intersection		5598409	1					
ANR	5598460	IdentifierDecl	cpath_with_shading_bbox		5598409	1					
ANR	5598461	IdentifierDeclType	gx_clip_path		5598409	0					
ANR	5598462	Identifier	cpath_with_shading_bbox		5598409	1					
ANR	5598463	IdentifierDeclStatement	"const gx_clip_path * pcpath1 , * pcpath2 ;"	655:8:26194:26231	5598409	1	True				
ANR	5598464	IdentifierDecl	* pcpath1		5598409	0					
ANR	5598465	IdentifierDeclType	const gx_clip_path *		5598409	0					
ANR	5598466	Identifier	pcpath1		5598409	1					
ANR	5598467	IdentifierDecl	* pcpath2		5598409	1					
ANR	5598468	IdentifierDeclType	const gx_clip_path *		5598409	0					
ANR	5598469	Identifier	pcpath2		5598409	1					
ANR	5598470	IdentifierDeclStatement	gs_gstate * pgs_noconst = ( gs_gstate * ) pgs ;	656:8:26241:26282	5598409	2	True				
ANR	5598471	IdentifierDecl	* pgs_noconst = ( gs_gstate * ) pgs		5598409	0					
ANR	5598472	IdentifierDeclType	gs_gstate *		5598409	0					
ANR	5598473	Identifier	pgs_noconst		5598409	1					
ANR	5598474	AssignmentExpression	* pgs_noconst = ( gs_gstate * ) pgs		5598409	2		=			
ANR	5598475	Identifier	pgs_noconst		5598409	0					
ANR	5598476	CastExpression	( gs_gstate * ) pgs		5598409	1					
ANR	5598477	CastTarget	gs_gstate *		5598409	0					
ANR	5598478	Identifier	pgs		5598409	1					
ANR	5598479	IfStatement	if ( ppath != NULL )		5598409	3					
ANR	5598480	Condition	ppath != NULL	658:12:26316:26328	5598409	0	True				
ANR	5598481	EqualityExpression	ppath != NULL		5598409	0		!=			
ANR	5598482	Identifier	ppath		5598409	0					
ANR	5598483	Identifier	NULL		5598409	1					
ANR	5598484	CompoundStatement		26:27:1352:1352	5598409	1					
ANR	5598485	ExpressionStatement	"code = gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"	659:12:26345:26431	5598409	0	True				
ANR	5598486	AssignmentExpression	"code = gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"		5598409	0		=			
ANR	5598487	Identifier	code		5598409	0					
ANR	5598488	CallExpression	"gx_cpath_init_local_shared_nested ( & cpath_intersection , pcpath , pdev -> memory , 1 )"		5598409	1					
ANR	5598489	Callee	gx_cpath_init_local_shared_nested		5598409	0					
ANR	5598490	Identifier	gx_cpath_init_local_shared_nested		5598409	0					
ANR	5598491	ArgumentList	& cpath_intersection		5598409	1					
ANR	5598492	Argument	& cpath_intersection		5598409	0					
ANR	5598493	UnaryOperationExpression	& cpath_intersection		5598409	0					
ANR	5598494	UnaryOperator	&		5598409	0					
ANR	5598495	Identifier	cpath_intersection		5598409	1					
ANR	5598496	Argument	pcpath		5598409	1					
ANR	5598497	Identifier	pcpath		5598409	0					
ANR	5598498	Argument	pdev -> memory		5598409	2					
ANR	5598499	PtrMemberAccess	pdev -> memory		5598409	0					
ANR	5598500	Identifier	pdev		5598409	0					
ANR	5598501	Identifier	memory		5598409	1					
ANR	5598502	Argument	1		5598409	3					
ANR	5598503	PrimaryExpression	1		5598409	0					
ANR	5598504	IfStatement	if ( code < 0 )		5598409	1					
ANR	5598505	Condition	code < 0	660:16:26449:26456	5598409	0	True				
ANR	5598506	RelationalExpression	code < 0		5598409	0		<			
ANR	5598507	Identifier	code		5598409	0					
ANR	5598508	PrimaryExpression	0		5598409	1					
ANR	5598509	ReturnStatement	return code ;	661:16:26475:26486	5598409	1	True				
ANR	5598510	Identifier	code		5598409	0					
ANR	5598511	IfStatement	if ( pcpath == NULL )		5598409	2					
ANR	5598512	Condition	pcpath == NULL	662:16:26504:26517	5598409	0	True				
ANR	5598513	EqualityExpression	pcpath == NULL		5598409	0		==			
ANR	5598514	Identifier	pcpath		5598409	0					
ANR	5598515	Identifier	NULL		5598409	1					
ANR	5598516	CompoundStatement		31:16:1559:1582	5598409	1					
ANR	5598517	IdentifierDeclStatement	gs_fixed_rect clip_box1 ;	663:16:26538:26561	5598409	0	True				
ANR	5598518	IdentifierDecl	clip_box1		5598409	0					
ANR	5598519	IdentifierDeclType	gs_fixed_rect		5598409	0					
ANR	5598520	Identifier	clip_box1		5598409	1					
ANR	5598521	ExpressionStatement	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & clip_box1 )"	665:16:26580:26634	5598409	1	True				
ANR	5598522	CallExpression	"( * dev_proc ( pdev , get_clipping_box ) ) ( pdev , & clip_box1 )"		5598409	0					
ANR	5598523	Callee	"* dev_proc ( pdev , get_clipping_box )"		5598409	0					
ANR	5598524	UnaryOperationExpression	"* dev_proc ( pdev , get_clipping_box )"		5598409	0					
ANR	5598525	UnaryOperator	*		5598409	0					
ANR	5598526	CallExpression	"dev_proc ( pdev , get_clipping_box )"		5598409	1					
ANR	5598527	Callee	dev_proc		5598409	0					
ANR	5598528	Identifier	dev_proc		5598409	0					
ANR	5598529	ArgumentList	pdev		5598409	1					
ANR	5598530	Argument	pdev		5598409	0					
ANR	5598531	Identifier	pdev		5598409	0					
ANR	5598532	Argument	get_clipping_box		5598409	1					
ANR	5598533	Identifier	get_clipping_box		5598409	0					
ANR	5598534	ArgumentList	pdev		5598409	1					
ANR	5598535	Argument	pdev		5598409	0					
ANR	5598536	Identifier	pdev		5598409	0					
ANR	5598537	Argument	& clip_box1		5598409	1					
ANR	5598538	UnaryOperationExpression	& clip_box1		5598409	0					
ANR	5598539	UnaryOperator	&		5598409	0					
ANR	5598540	Identifier	clip_box1		5598409	1					
ANR	5598541	ExpressionStatement	"code = gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"	666:16:26652:26715	5598409	2	True				
ANR	5598542	AssignmentExpression	"code = gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"		5598409	0		=			
ANR	5598543	Identifier	code		5598409	0					
ANR	5598544	CallExpression	"gx_cpath_from_rectangle ( & cpath_intersection , & clip_box1 )"		5598409	1					
ANR	5598545	Callee	gx_cpath_from_rectangle		5598409	0					
ANR	5598546	Identifier	gx_cpath_from_rectangle		5598409	0					
ANR	5598547	ArgumentList	& cpath_intersection		5598409	1					
ANR	5598548	Argument	& cpath_intersection		5598409	0					
ANR	5598549	UnaryOperationExpression	& cpath_intersection		5598409	0					
ANR	5598550	UnaryOperator	&		5598409	0					
ANR	5598551	Identifier	cpath_intersection		5598409	1					
ANR	5598552	Argument	& clip_box1		5598409	1					
ANR	5598553	UnaryOperationExpression	& clip_box1		5598409	0					
ANR	5598554	UnaryOperator	&		5598409	0					
ANR	5598555	Identifier	clip_box1		5598409	1					
ANR	5598556	IfStatement	if ( code >= 0 )		5598409	3					
ANR	5598557	Condition	code >= 0	668:16:26747:26755	5598409	0	True				
ANR	5598558	RelationalExpression	code >= 0		5598409	0		>=			
ANR	5598559	Identifier	code		5598409	0					
ANR	5598560	PrimaryExpression	0		5598409	1					
ANR	5598561	ExpressionStatement	"code = gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"	669:16:26774:26898	5598409	1	True				
ANR	5598562	AssignmentExpression	"code = gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"		5598409	0		=			
ANR	5598563	Identifier	code		5598409	0					
ANR	5598564	CallExpression	"gx_cpath_intersect_with_params ( & cpath_intersection , ppath , params -> rule , pgs_noconst , params )"		5598409	1					
ANR	5598565	Callee	gx_cpath_intersect_with_params		5598409	0					
ANR	5598566	Identifier	gx_cpath_intersect_with_params		5598409	0					
ANR	5598567	ArgumentList	& cpath_intersection		5598409	1					
ANR	5598568	Argument	& cpath_intersection		5598409	0					
ANR	5598569	UnaryOperationExpression	& cpath_intersection		5598409	0					
ANR	5598570	UnaryOperator	&		5598409	0					
ANR	5598571	Identifier	cpath_intersection		5598409	1					
ANR	5598572	Argument	ppath		5598409	1					
ANR	5598573	Identifier	ppath		5598409	0					
ANR	5598574	Argument	params -> rule		5598409	2					
ANR	5598575	PtrMemberAccess	params -> rule		5598409	0					
ANR	5598576	Identifier	params		5598409	0					
ANR	5598577	Identifier	rule		5598409	1					
ANR	5598578	Argument	pgs_noconst		5598409	3					
ANR	5598579	Identifier	pgs_noconst		5598409	0					
ANR	5598580	Argument	params		5598409	4					
ANR	5598581	Identifier	params		5598409	0					
ANR	5598582	ExpressionStatement	pcpath1 = & cpath_intersection	671:12:26912:26941	5598409	4	True				
ANR	5598583	AssignmentExpression	pcpath1 = & cpath_intersection		5598409	0		=			
ANR	5598584	Identifier	pcpath1		5598409	0					
ANR	5598585	UnaryOperationExpression	& cpath_intersection		5598409	1					
ANR	5598586	UnaryOperator	&		5598409	0					
ANR	5598587	Identifier	cpath_intersection		5598409	1					
ANR	5598588	ElseStatement	else		5598409	0					
ANR	5598589	ExpressionStatement	pcpath1 = pcpath	673:12:26970:26986	5598409	0	True				
ANR	5598590	AssignmentExpression	pcpath1 = pcpath		5598409	0		=			
ANR	5598591	Identifier	pcpath1		5598409	0					
ANR	5598592	Identifier	pcpath		5598409	1					
ANR	5598593	ExpressionStatement	pcpath2 = pcpath1	674:8:26996:27013	5598409	4	True				
ANR	5598594	AssignmentExpression	pcpath2 = pcpath1		5598409	0		=			
ANR	5598595	Identifier	pcpath2		5598409	0					
ANR	5598596	Identifier	pcpath1		5598409	1					
ANR	5598597	IfStatement	if ( code >= 0 )		5598409	5					
ANR	5598598	Condition	code >= 0	675:12:27027:27035	5598409	0	True				
ANR	5598599	RelationalExpression	code >= 0		5598409	0		>=			
ANR	5598600	Identifier	code		5598409	0					
ANR	5598601	PrimaryExpression	0		5598409	1					
ANR	5598602	ExpressionStatement	"code = gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"	676:12:27050:27135	5598409	1	True				
ANR	5598603	AssignmentExpression	"code = gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"		5598409	0		=			
ANR	5598604	Identifier	code		5598409	0					
ANR	5598605	CallExpression	"gx_dc_pattern2_clip_with_bbox ( pdevc , pdev , & cpath_with_shading_bbox , & pcpath1 )"		5598409	1					
ANR	5598606	Callee	gx_dc_pattern2_clip_with_bbox		5598409	0					
ANR	5598607	Identifier	gx_dc_pattern2_clip_with_bbox		5598409	0					
ANR	5598608	ArgumentList	pdevc		5598409	1					
ANR	5598609	Argument	pdevc		5598409	0					
ANR	5598610	Identifier	pdevc		5598409	0					
ANR	5598611	Argument	pdev		5598409	1					
ANR	5598612	Identifier	pdev		5598409	0					
ANR	5598613	Argument	& cpath_with_shading_bbox		5598409	2					
ANR	5598614	UnaryOperationExpression	& cpath_with_shading_bbox		5598409	0					
ANR	5598615	UnaryOperator	&		5598409	0					
ANR	5598616	Identifier	cpath_with_shading_bbox		5598409	1					
ANR	5598617	Argument	& pcpath1		5598409	3					
ANR	5598618	UnaryOperationExpression	& pcpath1		5598409	0					
ANR	5598619	UnaryOperator	&		5598409	0					
ANR	5598620	Identifier	pcpath1		5598409	1					
ANR	5598621	IfStatement	if ( code >= 0 )		5598409	6					
ANR	5598622	Condition	code >= 0	678:12:27173:27181	5598409	0	True				
ANR	5598623	RelationalExpression	code >= 0		5598409	0		>=			
ANR	5598624	Identifier	code		5598409	0					
ANR	5598625	PrimaryExpression	0		5598409	1					
ANR	5598626	CompoundStatement		51:12:2357:2376	5598409	1					
ANR	5598627	IdentifierDeclStatement	gs_fixed_rect clip_box ;	679:12:27198:27220	5598409	0	True				
ANR	5598628	IdentifierDecl	clip_box		5598409	0					
ANR	5598629	IdentifierDeclType	gs_fixed_rect		5598409	0					
ANR	5598630	Identifier	clip_box		5598409	1					
ANR	5598631	IdentifierDeclStatement	gs_int_rect cb ;	680:12:27234:27248	5598409	1	True				
ANR	5598632	IdentifierDecl	cb		5598409	0					
ANR	5598633	IdentifierDeclType	gs_int_rect		5598409	0					
ANR	5598634	Identifier	cb		5598409	1					
ANR	5598635	IdentifierDeclStatement	const gx_rop_source_t * rs = NULL ;	681:12:27262:27294	5598409	2	True				
ANR	5598636	IdentifierDecl	* rs = NULL		5598409	0					
ANR	5598637	IdentifierDeclType	const gx_rop_source_t *		5598409	0					
ANR	5598638	Identifier	rs		5598409	1					
ANR	5598639	AssignmentExpression	* rs = NULL		5598409	2		=			
ANR	5598640	Identifier	NULL		5598409	0					
ANR	5598641	Identifier	NULL		5598409	1					
ANR	5598642	IdentifierDeclStatement	gx_device * dev ;	682:12:27308:27322	5598409	3	True				
ANR	5598643	IdentifierDecl	* dev		5598409	0					
ANR	5598644	IdentifierDeclType	gx_device *		5598409	0					
ANR	5598645	Identifier	dev		5598409	1					
ANR	5598646	IdentifierDeclStatement	gx_device_clip cdev ;	683:12:27336:27355	5598409	4	True				
ANR	5598647	IdentifierDecl	cdev		5598409	0					
ANR	5598648	IdentifierDeclType	gx_device_clip		5598409	0					
ANR	5598649	Identifier	cdev		5598409	1					
ANR	5598650	ExpressionStatement	"gx_cpath_outer_box ( pcpath1 , & clip_box )"	685:12:27370:27408	5598409	5	True				
ANR	5598651	CallExpression	"gx_cpath_outer_box ( pcpath1 , & clip_box )"		5598409	0					
ANR	5598652	Callee	gx_cpath_outer_box		5598409	0					
ANR	5598653	Identifier	gx_cpath_outer_box		5598409	0					
ANR	5598654	ArgumentList	pcpath1		5598409	1					
ANR	5598655	Argument	pcpath1		5598409	0					
ANR	5598656	Identifier	pcpath1		5598409	0					
ANR	5598657	Argument	& clip_box		5598409	1					
ANR	5598658	UnaryOperationExpression	& clip_box		5598409	0					
ANR	5598659	UnaryOperator	&		5598409	0					
ANR	5598660	Identifier	clip_box		5598409	1					
ANR	5598661	ExpressionStatement	cb . p . x = fixed2int_pixround ( clip_box . p . x )	686:12:27422:27463	5598409	6	True				
ANR	5598662	AssignmentExpression	cb . p . x = fixed2int_pixround ( clip_box . p . x )		5598409	0		=			
ANR	5598663	MemberAccess	cb . p . x		5598409	0					
ANR	5598664	MemberAccess	cb . p		5598409	0					
ANR	5598665	Identifier	cb		5598409	0					
ANR	5598666	Identifier	p		5598409	1					
ANR	5598667	Identifier	x		5598409	1					
ANR	5598668	CallExpression	fixed2int_pixround ( clip_box . p . x )		5598409	1					
ANR	5598669	Callee	fixed2int_pixround		5598409	0					
ANR	5598670	Identifier	fixed2int_pixround		5598409	0					
ANR	5598671	ArgumentList	clip_box . p . x		5598409	1					
ANR	5598672	Argument	clip_box . p . x		5598409	0					
ANR	5598673	MemberAccess	clip_box . p . x		5598409	0					
ANR	5598674	MemberAccess	clip_box . p		5598409	0					
ANR	5598675	Identifier	clip_box		5598409	0					
ANR	5598676	Identifier	p		5598409	1					
ANR	5598677	Identifier	x		5598409	1					
ANR	5598678	ExpressionStatement	cb . p . y = fixed2int_pixround ( clip_box . p . y )	687:12:27477:27518	5598409	7	True				
ANR	5598679	AssignmentExpression	cb . p . y = fixed2int_pixround ( clip_box . p . y )		5598409	0		=			
ANR	5598680	MemberAccess	cb . p . y		5598409	0					
ANR	5598681	MemberAccess	cb . p		5598409	0					
ANR	5598682	Identifier	cb		5598409	0					
ANR	5598683	Identifier	p		5598409	1					
ANR	5598684	Identifier	y		5598409	1					
ANR	5598685	CallExpression	fixed2int_pixround ( clip_box . p . y )		5598409	1					
ANR	5598686	Callee	fixed2int_pixround		5598409	0					
ANR	5598687	Identifier	fixed2int_pixround		5598409	0					
ANR	5598688	ArgumentList	clip_box . p . y		5598409	1					
ANR	5598689	Argument	clip_box . p . y		5598409	0					
ANR	5598690	MemberAccess	clip_box . p . y		5598409	0					
ANR	5598691	MemberAccess	clip_box . p		5598409	0					
ANR	5598692	Identifier	clip_box		5598409	0					
ANR	5598693	Identifier	p		5598409	1					
ANR	5598694	Identifier	y		5598409	1					
ANR	5598695	ExpressionStatement	cb . q . x = fixed2int_pixround ( clip_box . q . x )	688:12:27532:27573	5598409	8	True				
ANR	5598696	AssignmentExpression	cb . q . x = fixed2int_pixround ( clip_box . q . x )		5598409	0		=			
ANR	5598697	MemberAccess	cb . q . x		5598409	0					
ANR	5598698	MemberAccess	cb . q		5598409	0					
ANR	5598699	Identifier	cb		5598409	0					
ANR	5598700	Identifier	q		5598409	1					
ANR	5598701	Identifier	x		5598409	1					
ANR	5598702	CallExpression	fixed2int_pixround ( clip_box . q . x )		5598409	1					
ANR	5598703	Callee	fixed2int_pixround		5598409	0					
ANR	5598704	Identifier	fixed2int_pixround		5598409	0					
ANR	5598705	ArgumentList	clip_box . q . x		5598409	1					
ANR	5598706	Argument	clip_box . q . x		5598409	0					
ANR	5598707	MemberAccess	clip_box . q . x		5598409	0					
ANR	5598708	MemberAccess	clip_box . q		5598409	0					
ANR	5598709	Identifier	clip_box		5598409	0					
ANR	5598710	Identifier	q		5598409	1					
ANR	5598711	Identifier	x		5598409	1					
ANR	5598712	ExpressionStatement	cb . q . y = fixed2int_pixround ( clip_box . q . y )	689:12:27587:27628	5598409	9	True				
ANR	5598713	AssignmentExpression	cb . q . y = fixed2int_pixround ( clip_box . q . y )		5598409	0		=			
ANR	5598714	MemberAccess	cb . q . y		5598409	0					
ANR	5598715	MemberAccess	cb . q		5598409	0					
ANR	5598716	Identifier	cb		5598409	0					
ANR	5598717	Identifier	q		5598409	1					
ANR	5598718	Identifier	y		5598409	1					
ANR	5598719	CallExpression	fixed2int_pixround ( clip_box . q . y )		5598409	1					
ANR	5598720	Callee	fixed2int_pixround		5598409	0					
ANR	5598721	Identifier	fixed2int_pixround		5598409	0					
ANR	5598722	ArgumentList	clip_box . q . y		5598409	1					
ANR	5598723	Argument	clip_box . q . y		5598409	0					
ANR	5598724	MemberAccess	clip_box . q . y		5598409	0					
ANR	5598725	MemberAccess	clip_box . q		5598409	0					
ANR	5598726	Identifier	clip_box		5598409	0					
ANR	5598727	Identifier	q		5598409	1					
ANR	5598728	Identifier	y		5598409	1					
ANR	5598729	IfStatement	"if ( gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0 )"		5598409	10					
ANR	5598730	Condition	"gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"	690:16:27646:27806	5598409	0	True				
ANR	5598731	AndExpression	"gx_dc_is_pattern2_color ( pdevc ) && ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"		5598409	0		&&			
ANR	5598732	CallExpression	gx_dc_is_pattern2_color ( pdevc )		5598409	0					
ANR	5598733	Callee	gx_dc_is_pattern2_color		5598409	0					
ANR	5598734	Identifier	gx_dc_is_pattern2_color		5598409	0					
ANR	5598735	ArgumentList	pdevc		5598409	1					
ANR	5598736	Argument	pdevc		5598409	0					
ANR	5598737	Identifier	pdevc		5598409	0					
ANR	5598738	RelationalExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 ) > 0"		5598409	1		>			
ANR	5598739	CallExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_handles_clip_path , NULL , 0 )"		5598409	0					
ANR	5598740	Callee	"* dev_proc ( pdev , dev_spec_op )"		5598409	0					
ANR	5598741	UnaryOperationExpression	"* dev_proc ( pdev , dev_spec_op )"		5598409	0					
ANR	5598742	UnaryOperator	*		5598409	0					
ANR	5598743	CallExpression	"dev_proc ( pdev , dev_spec_op )"		5598409	1					
ANR	5598744	Callee	dev_proc		5598409	0					
ANR	5598745	Identifier	dev_proc		5598409	0					
ANR	5598746	ArgumentList	pdev		5598409	1					
ANR	5598747	Argument	pdev		5598409	0					
ANR	5598748	Identifier	pdev		5598409	0					
ANR	5598749	Argument	dev_spec_op		5598409	1					
ANR	5598750	Identifier	dev_spec_op		5598409	0					
ANR	5598751	ArgumentList	pdev		5598409	1					
ANR	5598752	Argument	pdev		5598409	0					
ANR	5598753	Identifier	pdev		5598409	0					
ANR	5598754	Argument	gxdso_pattern_handles_clip_path		5598409	1					
ANR	5598755	Identifier	gxdso_pattern_handles_clip_path		5598409	0					
ANR	5598756	Argument	NULL		5598409	2					
ANR	5598757	Identifier	NULL		5598409	0					
ANR	5598758	Argument	0		5598409	3					
ANR	5598759	PrimaryExpression	0		5598409	0					
ANR	5598760	PrimaryExpression	0		5598409	1					
ANR	5598761	CompoundStatement		60:72:2830:2830	5598409	1					
ANR	5598762	ExpressionStatement	"code = ( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"	696:16:28033:28109	5598409	0	True				
ANR	5598763	AssignmentExpression	"code = ( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"		5598409	0		=			
ANR	5598764	Identifier	code		5598409	0					
ANR	5598765	CallExpression	"( * dev_proc ( pdev , fill_path ) ) ( pdev , pgs , ppath , params , NULL , pcpath1 )"		5598409	1					
ANR	5598766	Callee	"* dev_proc ( pdev , fill_path )"		5598409	0					
ANR	5598767	UnaryOperationExpression	"* dev_proc ( pdev , fill_path )"		5598409	0					
ANR	5598768	UnaryOperator	*		5598409	0					
ANR	5598769	CallExpression	"dev_proc ( pdev , fill_path )"		5598409	1					
ANR	5598770	Callee	dev_proc		5598409	0					
ANR	5598771	Identifier	dev_proc		5598409	0					
ANR	5598772	ArgumentList	pdev		5598409	1					
ANR	5598773	Argument	pdev		5598409	0					
ANR	5598774	Identifier	pdev		5598409	0					
ANR	5598775	Argument	fill_path		5598409	1					
ANR	5598776	Identifier	fill_path		5598409	0					
ANR	5598777	ArgumentList	pdev		5598409	1					
ANR	5598778	Argument	pdev		5598409	0					
ANR	5598779	Identifier	pdev		5598409	0					
ANR	5598780	Argument	pgs		5598409	1					
ANR	5598781	Identifier	pgs		5598409	0					
ANR	5598782	Argument	ppath		5598409	2					
ANR	5598783	Identifier	ppath		5598409	0					
ANR	5598784	Argument	params		5598409	3					
ANR	5598785	Identifier	params		5598409	0					
ANR	5598786	Argument	NULL		5598409	4					
ANR	5598787	Identifier	NULL		5598409	0					
ANR	5598788	Argument	pcpath1		5598409	5					
ANR	5598789	Identifier	pcpath1		5598409	0					
ANR	5598790	ExpressionStatement	dev = pdev	697:16:28127:28137	5598409	1	True				
ANR	5598791	AssignmentExpression	dev = pdev		5598409	0		=			
ANR	5598792	Identifier	dev		5598409	0					
ANR	5598793	Identifier	pdev		5598409	1					
ANR	5598794	ElseStatement	else		5598409	0					
ANR	5598795	CompoundStatement		66:19:3179:3179	5598409	0					
ANR	5598796	ExpressionStatement	"gx_make_clip_device_on_stack ( & cdev , pcpath1 , pdev )"	699:16:28176:28226	5598409	0	True				
ANR	5598797	CallExpression	"gx_make_clip_device_on_stack ( & cdev , pcpath1 , pdev )"		5598409	0					
ANR	5598798	Callee	gx_make_clip_device_on_stack		5598409	0					
ANR	5598799	Identifier	gx_make_clip_device_on_stack		5598409	0					
ANR	5598800	ArgumentList	& cdev		5598409	1					
ANR	5598801	Argument	& cdev		5598409	0					
ANR	5598802	UnaryOperationExpression	& cdev		5598409	0					
ANR	5598803	UnaryOperator	&		5598409	0					
ANR	5598804	Identifier	cdev		5598409	1					
ANR	5598805	Argument	pcpath1		5598409	1					
ANR	5598806	Identifier	pcpath1		5598409	0					
ANR	5598807	Argument	pdev		5598409	2					
ANR	5598808	Identifier	pdev		5598409	0					
ANR	5598809	ExpressionStatement	dev = ( gx_device * ) & cdev	700:16:28244:28268	5598409	1	True				
ANR	5598810	AssignmentExpression	dev = ( gx_device * ) & cdev		5598409	0		=			
ANR	5598811	Identifier	dev		5598409	0					
ANR	5598812	CastExpression	( gx_device * ) & cdev		5598409	1					
ANR	5598813	CastTarget	gx_device *		5598409	0					
ANR	5598814	UnaryOperationExpression	& cdev		5598409	1					
ANR	5598815	UnaryOperator	&		5598409	0					
ANR	5598816	Identifier	cdev		5598409	1					
ANR	5598817	IfStatement	"if ( ( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0 )"		5598409	2					
ANR	5598818	Condition	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0"	701:20:28290:28390	5598409	0	True				
ANR	5598819	RelationalExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 ) > 0"		5598409	0		>			
ANR	5598820	CallExpression	"( * dev_proc ( pdev , dev_spec_op ) ) ( pdev , gxdso_pattern_shading_area , NULL , 0 )"		5598409	0					
ANR	5598821	Callee	"* dev_proc ( pdev , dev_spec_op )"		5598409	0					
ANR	5598822	UnaryOperationExpression	"* dev_proc ( pdev , dev_spec_op )"		5598409	0					
ANR	5598823	UnaryOperator	*		5598409	0					
ANR	5598824	CallExpression	"dev_proc ( pdev , dev_spec_op )"		5598409	1					
ANR	5598825	Callee	dev_proc		5598409	0					
ANR	5598826	Identifier	dev_proc		5598409	0					
ANR	5598827	ArgumentList	pdev		5598409	1					
ANR	5598828	Argument	pdev		5598409	0					
ANR	5598829	Identifier	pdev		5598409	0					
ANR	5598830	Argument	dev_spec_op		5598409	1					
ANR	5598831	Identifier	dev_spec_op		5598409	0					
ANR	5598832	ArgumentList	pdev		5598409	1					
ANR	5598833	Argument	pdev		5598409	0					
ANR	5598834	Identifier	pdev		5598409	0					
ANR	5598835	Argument	gxdso_pattern_shading_area		5598409	1					
ANR	5598836	Identifier	gxdso_pattern_shading_area		5598409	0					
ANR	5598837	Argument	NULL		5598409	2					
ANR	5598838	Identifier	NULL		5598409	0					
ANR	5598839	Argument	0		5598409	3					
ANR	5598840	PrimaryExpression	0		5598409	0					
ANR	5598841	PrimaryExpression	0		5598409	1					
ANR	5598842	ExpressionStatement	"set_dev_proc ( & cdev , fill_path , pass_shading_area_through_clip_path_device )"	703:20:28413:28487	5598409	1	True				
ANR	5598843	CallExpression	"set_dev_proc ( & cdev , fill_path , pass_shading_area_through_clip_path_device )"		5598409	0					
ANR	5598844	Callee	set_dev_proc		5598409	0					
ANR	5598845	Identifier	set_dev_proc		5598409	0					
ANR	5598846	ArgumentList	& cdev		5598409	1					
ANR	5598847	Argument	& cdev		5598409	0					
ANR	5598848	UnaryOperationExpression	& cdev		5598409	0					
ANR	5598849	UnaryOperator	&		5598409	0					
ANR	5598850	Identifier	cdev		5598409	1					
ANR	5598851	Argument	fill_path		5598409	1					
ANR	5598852	Identifier	fill_path		5598409	0					
ANR	5598853	Argument	pass_shading_area_through_clip_path_device		5598409	2					
ANR	5598854	Identifier	pass_shading_area_through_clip_path_device		5598409	0					
ANR	5598855	ExpressionStatement	code = 0	704:16:28505:28513	5598409	3	True				
ANR	5598856	AssignmentExpression	code = 0		5598409	0		=			
ANR	5598857	Identifier	code		5598409	0					
ANR	5598858	PrimaryExpression	0		5598409	1					
ANR	5598859	IfStatement	if ( code >= 0 )		5598409	11					
ANR	5598860	Condition	code >= 0	706:16:28545:28553	5598409	0	True				
ANR	5598861	RelationalExpression	code >= 0		5598409	0		>=			
ANR	5598862	Identifier	code		5598409	0					
ANR	5598863	PrimaryExpression	0		5598409	1					
ANR	5598864	ExpressionStatement	"code = pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"	707:16:28572:28733	5598409	1	True				
ANR	5598865	AssignmentExpression	"code = pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"		5598409	0		=			
ANR	5598866	Identifier	code		5598409	0					
ANR	5598867	CallExpression	"pdevc -> type -> fill_rectangle ( pdevc , cb . p . x , cb . p . y , cb . q . x - cb . p . x , cb . q . y - cb . p . y , dev , pgs -> log_op , rs )"		5598409	1					
ANR	5598868	Callee	pdevc -> type -> fill_rectangle		5598409	0					
ANR	5598869	PtrMemberAccess	pdevc -> type -> fill_rectangle		5598409	0					
ANR	5598870	PtrMemberAccess	pdevc -> type		5598409	0					
ANR	5598871	Identifier	pdevc		5598409	0					
ANR	5598872	Identifier	type		5598409	1					
ANR	5598873	Identifier	fill_rectangle		5598409	1					
ANR	5598874	ArgumentList	pdevc		5598409	1					
ANR	5598875	Argument	pdevc		5598409	0					
ANR	5598876	Identifier	pdevc		5598409	0					
ANR	5598877	Argument	cb . p . x		5598409	1					
ANR	5598878	MemberAccess	cb . p . x		5598409	0					
ANR	5598879	MemberAccess	cb . p		5598409	0					
ANR	5598880	Identifier	cb		5598409	0					
ANR	5598881	Identifier	p		5598409	1					
ANR	5598882	Identifier	x		5598409	1					
ANR	5598883	Argument	cb . p . y		5598409	2					
ANR	5598884	MemberAccess	cb . p . y		5598409	0					
ANR	5598885	MemberAccess	cb . p		5598409	0					
ANR	5598886	Identifier	cb		5598409	0					
ANR	5598887	Identifier	p		5598409	1					
ANR	5598888	Identifier	y		5598409	1					
ANR	5598889	Argument	cb . q . x - cb . p . x		5598409	3					
ANR	5598890	AdditiveExpression	cb . q . x - cb . p . x		5598409	0		-			
ANR	5598891	MemberAccess	cb . q . x		5598409	0					
ANR	5598892	MemberAccess	cb . q		5598409	0					
ANR	5598893	Identifier	cb		5598409	0					
ANR	5598894	Identifier	q		5598409	1					
ANR	5598895	Identifier	x		5598409	1					
ANR	5598896	MemberAccess	cb . p . x		5598409	1					
ANR	5598897	MemberAccess	cb . p		5598409	0					
ANR	5598898	Identifier	cb		5598409	0					
ANR	5598899	Identifier	p		5598409	1					
ANR	5598900	Identifier	x		5598409	1					
ANR	5598901	Argument	cb . q . y - cb . p . y		5598409	4					
ANR	5598902	AdditiveExpression	cb . q . y - cb . p . y		5598409	0		-			
ANR	5598903	MemberAccess	cb . q . y		5598409	0					
ANR	5598904	MemberAccess	cb . q		5598409	0					
ANR	5598905	Identifier	cb		5598409	0					
ANR	5598906	Identifier	q		5598409	1					
ANR	5598907	Identifier	y		5598409	1					
ANR	5598908	MemberAccess	cb . p . y		5598409	1					
ANR	5598909	MemberAccess	cb . p		5598409	0					
ANR	5598910	Identifier	cb		5598409	0					
ANR	5598911	Identifier	p		5598409	1					
ANR	5598912	Identifier	y		5598409	1					
ANR	5598913	Argument	dev		5598409	5					
ANR	5598914	Identifier	dev		5598409	0					
ANR	5598915	Argument	pgs -> log_op		5598409	6					
ANR	5598916	PtrMemberAccess	pgs -> log_op		5598409	0					
ANR	5598917	Identifier	pgs		5598409	0					
ANR	5598918	Identifier	log_op		5598409	1					
ANR	5598919	Argument	rs		5598409	7					
ANR	5598920	Identifier	rs		5598409	0					
ANR	5598921	IfStatement	if ( ppath != NULL )		5598409	7					
ANR	5598922	Condition	ppath != NULL	711:12:28757:28769	5598409	0	True				
ANR	5598923	EqualityExpression	ppath != NULL		5598409	0		!=			
ANR	5598924	Identifier	ppath		5598409	0					
ANR	5598925	Identifier	NULL		5598409	1					
ANR	5598926	ExpressionStatement	"gx_cpath_free ( & cpath_intersection , ""shading_fill_cpath_intersection"" )"	712:12:28784:28853	5598409	1	True				
ANR	5598927	CallExpression	"gx_cpath_free ( & cpath_intersection , ""shading_fill_cpath_intersection"" )"		5598409	0					
ANR	5598928	Callee	gx_cpath_free		5598409	0					
ANR	5598929	Identifier	gx_cpath_free		5598409	0					
ANR	5598930	ArgumentList	& cpath_intersection		5598409	1					
ANR	5598931	Argument	& cpath_intersection		5598409	0					
ANR	5598932	UnaryOperationExpression	& cpath_intersection		5598409	0					
ANR	5598933	UnaryOperator	&		5598409	0					
ANR	5598934	Identifier	cpath_intersection		5598409	1					
ANR	5598935	Argument	"""shading_fill_cpath_intersection"""		5598409	1					
ANR	5598936	PrimaryExpression	"""shading_fill_cpath_intersection"""		5598409	0					
ANR	5598937	IfStatement	if ( pcpath1 != pcpath2 )		5598409	8					
ANR	5598938	Condition	pcpath1 != pcpath2	713:12:28867:28884	5598409	0	True				
ANR	5598939	EqualityExpression	pcpath1 != pcpath2		5598409	0		!=			
ANR	5598940	Identifier	pcpath1		5598409	0					
ANR	5598941	Identifier	pcpath2		5598409	1					
ANR	5598942	ExpressionStatement	"gx_cpath_free ( & cpath_with_shading_bbox , ""shading_fill_cpath_intersection"" )"	714:12:28899:28973	5598409	1	True				
ANR	5598943	CallExpression	"gx_cpath_free ( & cpath_with_shading_bbox , ""shading_fill_cpath_intersection"" )"		5598409	0					
ANR	5598944	Callee	gx_cpath_free		5598409	0					
ANR	5598945	Identifier	gx_cpath_free		5598409	0					
ANR	5598946	ArgumentList	& cpath_with_shading_bbox		5598409	1					
ANR	5598947	Argument	& cpath_with_shading_bbox		5598409	0					
ANR	5598948	UnaryOperationExpression	& cpath_with_shading_bbox		5598409	0					
ANR	5598949	UnaryOperator	&		5598409	0					
ANR	5598950	Identifier	cpath_with_shading_bbox		5598409	1					
ANR	5598951	Argument	"""shading_fill_cpath_intersection"""		5598409	1					
ANR	5598952	PrimaryExpression	"""shading_fill_cpath_intersection"""		5598409	0					
ANR	5598953	ElseStatement	else		5598409	0					
ANR	5598954	CompoundStatement		83:11:4007:4007	5598409	0					
ANR	5598955	ExpressionStatement	"code = gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"	716:8:28996:29064	5598409	0	True				
ANR	5598956	AssignmentExpression	"code = gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		5598409	0		=			
ANR	5598957	Identifier	code		5598409	0					
ANR	5598958	CallExpression	"gx_general_fill_path ( pdev , pgs , ppath , params , pdevc , pcpath )"		5598409	1					
ANR	5598959	Callee	gx_general_fill_path		5598409	0					
ANR	5598960	Identifier	gx_general_fill_path		5598409	0					
ANR	5598961	ArgumentList	pdev		5598409	1					
ANR	5598962	Argument	pdev		5598409	0					
ANR	5598963	Identifier	pdev		5598409	0					
ANR	5598964	Argument	pgs		5598409	1					
ANR	5598965	Identifier	pgs		5598409	0					
ANR	5598966	Argument	ppath		5598409	2					
ANR	5598967	Identifier	ppath		5598409	0					
ANR	5598968	Argument	params		5598409	3					
ANR	5598969	Identifier	params		5598409	0					
ANR	5598970	Argument	pdevc		5598409	4					
ANR	5598971	Identifier	pdevc		5598409	0					
ANR	5598972	Argument	pcpath		5598409	5					
ANR	5598973	Identifier	pcpath		5598409	0					
ANR	5598974	ReturnStatement	return code ;	718:4:29076:29087	5598409	2	True				
ANR	5598975	Identifier	code		5598409	0					
ANR	5598976	ReturnType	int		5598409	1					
ANR	5598977	Identifier	gx_default_fill_path		5598409	2					
ANR	5598978	ParameterList	"gx_device * pdev , const gs_gstate * pgs , gx_path * ppath , const gx_fill_params * params , const gx_device_color * pdevc , const gx_clip_path * pcpath"		5598409	3					
ANR	5598979	Parameter	gx_device * pdev	630:21:24791:24806	5598409	0	True				
ANR	5598980	ParameterType	gx_device *		5598409	0					
ANR	5598981	Identifier	pdev		5598409	1					
ANR	5598982	Parameter	const gs_gstate * pgs	630:39:24809:24829	5598409	1	True				
ANR	5598983	ParameterType	const gs_gstate *		5598409	0					
ANR	5598984	Identifier	pgs		5598409	1					
ANR	5598985	Parameter	gx_path * ppath	631:21:24853:24867	5598409	2	True				
ANR	5598986	ParameterType	gx_path *		5598409	0					
ANR	5598987	Identifier	ppath		5598409	1					
ANR	5598988	Parameter	const gx_fill_params * params	631:38:24870:24898	5598409	3	True				
ANR	5598989	ParameterType	const gx_fill_params *		5598409	0					
ANR	5598990	Identifier	params		5598409	1					
ANR	5598991	Parameter	const gx_device_color * pdevc	632:17:24918:24946	5598409	4	True				
ANR	5598992	ParameterType	const gx_device_color *		5598409	0					
ANR	5598993	Identifier	pdevc		5598409	1					
ANR	5598994	Parameter	const gx_clip_path * pcpath	632:48:24949:24975	5598409	5	True				
ANR	5598995	ParameterType	const gx_clip_path *		5598409	0					
ANR	5598996	Identifier	pcpath		5598409	1					
ANR	5598997	CFGEntryNode	ENTRY		5598409		True				
ANR	5598998	CFGExitNode	EXIT		5598409		True				
ANR	5598999	Symbol	* pgs		5598409						
ANR	5599000	Symbol	pdevc		5598409						
ANR	5599001	Symbol	gx_dc_is_pattern2_color		5598409						
ANR	5599002	Symbol	dev_spec_op		5598409						
ANR	5599003	Symbol	get_clipping_box		5598409						
ANR	5599004	Symbol	pdevc -> type -> fill_rectangle		5598409						
ANR	5599005	Symbol	& cpath_intersection		5598409						
ANR	5599006	Symbol	pdev		5598409						
ANR	5599007	Symbol	dev		5598409						
ANR	5599008	Symbol	pdev -> memory		5598409						
ANR	5599009	Symbol	gx_cpath_from_rectangle		5598409						
ANR	5599010	Symbol	pdevc -> colors		5598409						
ANR	5599011	Symbol	pcpath1		5598409						
ANR	5599012	Symbol	fill_path		5598409						
ANR	5599013	Symbol	pcpath2		5598409						
ANR	5599014	Symbol	pdevc -> type		5598409						
ANR	5599015	Symbol	clip_box . p . y		5598409						
ANR	5599016	Symbol	clip_box . p . x		5598409						
ANR	5599017	Symbol	NULL		5598409						
ANR	5599018	Symbol	cpath_intersection		5598409						
ANR	5599019	Symbol	cb . q . x		5598409						
ANR	5599020	Symbol	& gx_dc_type_data_ht_colored		5598409						
ANR	5599021	Symbol	cb . q . y		5598409						
ANR	5599022	Symbol	params -> rule		5598409						
ANR	5599023	Symbol	gx_cpath_intersect_with_params		5598409						
ANR	5599024	Symbol	fixed2int_pixround		5598409						
ANR	5599025	Symbol	params		5598409						
ANR	5599026	Symbol	clip_box . q . y		5598409						
ANR	5599027	Symbol	pdevc -> colors . pattern		5598409						
ANR	5599028	Symbol	clip_box . q . x		5598409						
ANR	5599029	Symbol	pgs_noconst		5598409						
ANR	5599030	Symbol	& clip_box		5598409						
ANR	5599031	Symbol	clip_box1		5598409						
ANR	5599032	Symbol	clip_box . p		5598409						
ANR	5599033	Symbol	clip_box . q		5598409						
ANR	5599034	Symbol	rs		5598409						
ANR	5599035	Symbol	code		5598409						
ANR	5599036	Symbol	& cdev		5598409						
ANR	5599037	Symbol	* dev_proc		5598409						
ANR	5599038	Symbol	pass_shading_area_through_clip_path_device		5598409						
ANR	5599039	Symbol	ppath		5598409						
ANR	5599040	Symbol	gxdso_pattern_handles_clip_path		5598409						
ANR	5599041	Symbol	* pdevc -> type		5598409						
ANR	5599042	Symbol	& pcpath1		5598409						
ANR	5599043	Symbol	cb . p . x		5598409						
ANR	5599044	Symbol	* pdevc		5598409						
ANR	5599045	Symbol	gx_dc_is_pattern1_color		5598409						
ANR	5599046	Symbol	gx_dc_pattern2_clip_with_bbox		5598409						
ANR	5599047	Symbol	dev_proc		5598409						
ANR	5599048	Symbol	cb . p . y		5598409						
ANR	5599049	Symbol	& clip_box1		5598409						
ANR	5599050	Symbol	gx_general_fill_path		5598409						
ANR	5599051	Symbol	cb . p		5598409						
ANR	5599052	Symbol	cb . q		5598409						
ANR	5599053	Symbol	gx_pattern_tile_is_clist		5598409						
ANR	5599054	Symbol	pgs		5598409						
ANR	5599055	Symbol	& cpath_with_shading_bbox		5598409						
ANR	5599056	Symbol	pcpath		5598409						
ANR	5599057	Symbol	pdevc -> colors . pattern . p_tile		5598409						
ANR	5599058	Symbol	* params		5598409						
ANR	5599059	Symbol	cb		5598409						
ANR	5599060	Symbol	"* dev_proc ( pdev , dev_spec_op )"		5598409						
ANR	5599061	Symbol	pgs -> log_op		5598409						
ANR	5599062	Symbol	gx_cpath_init_local_shared_nested		5598409						
ANR	5599063	Symbol	"* dev_proc ( pdev , fill_path )"		5598409						
ANR	5599064	Symbol	clip_box		5598409						
ANR	5599065	Symbol	* * pdevc		5598409						
ANR	5599066	Symbol	gxdso_pattern_shading_area		5598409						
ANR	5599067	Symbol	* pdev		5598409						
ANR	5599068	Symbol	cdev		5598409						
ANR	5599069	Symbol	cpath_with_shading_bbox		5598409						
ANR	5599070	Function	free_line_list	722:0:29118:29452							
ANR	5599071	FunctionDef	free_line_list (line_list * ll)		5599070	0					
ANR	5599072	CompoundStatement		724:0:29160:29452	5599070	0					
ANR	5599073	IdentifierDeclStatement	gs_memory_t * mem = ll -> memory ;	726:4:29222:29251	5599070	0	True				
ANR	5599074	IdentifierDecl	* mem = ll -> memory		5599070	0					
ANR	5599075	IdentifierDeclType	gs_memory_t *		5599070	0					
ANR	5599076	Identifier	mem		5599070	1					
ANR	5599077	AssignmentExpression	* mem = ll -> memory		5599070	2		=			
ANR	5599078	Identifier	mem		5599070	0					
ANR	5599079	PtrMemberAccess	ll -> memory		5599070	1					
ANR	5599080	Identifier	ll		5599070	0					
ANR	5599081	Identifier	memory		5599070	1					
ANR	5599082	IdentifierDeclStatement	active_line * alp ;	727:4:29257:29273	5599070	1	True				
ANR	5599083	IdentifierDecl	* alp		5599070	0					
ANR	5599084	IdentifierDeclType	active_line *		5599070	0					
ANR	5599085	Identifier	alp		5599070	1					
ANR	5599086	WhileStatement	while ( ( alp = ll -> active_area ) != 0 )		5599070	2					
ANR	5599087	Condition	( alp = ll -> active_area ) != 0	729:11:29287:29314	5599070	0	True				
ANR	5599088	EqualityExpression	( alp = ll -> active_area ) != 0		5599070	0		!=			
ANR	5599089	AssignmentExpression	alp = ll -> active_area		5599070	0		=			
ANR	5599090	Identifier	alp		5599070	0					
ANR	5599091	PtrMemberAccess	ll -> active_area		5599070	1					
ANR	5599092	Identifier	ll		5599070	0					
ANR	5599093	Identifier	active_area		5599070	1					
ANR	5599094	PrimaryExpression	0		5599070	1					
ANR	5599095	CompoundStatement		7:8:166:201	5599070	1					
ANR	5599096	IdentifierDeclStatement	active_line * next = alp -> alloc_next ;	730:8:29327:29362	5599070	0	True				
ANR	5599097	IdentifierDecl	* next = alp -> alloc_next		5599070	0					
ANR	5599098	IdentifierDeclType	active_line *		5599070	0					
ANR	5599099	Identifier	next		5599070	1					
ANR	5599100	AssignmentExpression	* next = alp -> alloc_next		5599070	2		=			
ANR	5599101	Identifier	next		5599070	0					
ANR	5599102	PtrMemberAccess	alp -> alloc_next		5599070	1					
ANR	5599103	Identifier	alp		5599070	0					
ANR	5599104	Identifier	alloc_next		5599070	1					
ANR	5599105	ExpressionStatement	"gs_free_object ( mem , alp , ""active line"" )"	732:8:29373:29412	5599070	1	True				
ANR	5599106	CallExpression	"gs_free_object ( mem , alp , ""active line"" )"		5599070	0					
ANR	5599107	Callee	gs_free_object		5599070	0					
ANR	5599108	Identifier	gs_free_object		5599070	0					
ANR	5599109	ArgumentList	mem		5599070	1					
ANR	5599110	Argument	mem		5599070	0					
ANR	5599111	Identifier	mem		5599070	0					
ANR	5599112	Argument	alp		5599070	1					
ANR	5599113	Identifier	alp		5599070	0					
ANR	5599114	Argument	"""active line"""		5599070	2					
ANR	5599115	PrimaryExpression	"""active line"""		5599070	0					
ANR	5599116	ExpressionStatement	ll -> active_area = next	733:8:29422:29444	5599070	2	True				
ANR	5599117	AssignmentExpression	ll -> active_area = next		5599070	0		=			
ANR	5599118	PtrMemberAccess	ll -> active_area		5599070	0					
ANR	5599119	Identifier	ll		5599070	0					
ANR	5599120	Identifier	active_area		5599070	1					
ANR	5599121	Identifier	next		5599070	1					
ANR	5599122	ReturnType	static void		5599070	1					
ANR	5599123	Identifier	free_line_list		5599070	2					
ANR	5599124	ParameterList	line_list * ll		5599070	3					
ANR	5599125	Parameter	line_list * ll	723:15:29145:29157	5599070	0	True				
ANR	5599126	ParameterType	line_list *		5599070	0					
ANR	5599127	Identifier	ll		5599070	1					
ANR	5599128	CFGEntryNode	ENTRY		5599070		True				
ANR	5599129	CFGExitNode	EXIT		5599070		True				
ANR	5599130	Symbol	ll		5599070						
ANR	5599131	Symbol	next		5599070						
ANR	5599132	Symbol	* alp		5599070						
ANR	5599133	Symbol	mem		5599070						
ANR	5599134	Symbol	alp		5599070						
ANR	5599135	Symbol	* ll		5599070						
ANR	5599136	Symbol	ll -> memory		5599070						
ANR	5599137	Symbol	alp -> alloc_next		5599070						
ANR	5599138	Symbol	ll -> active_area		5599070						
ANR	5599139	Function	make_al	737:0:29455:29970							
ANR	5599140	FunctionDef	make_al (line_list * ll)		5599139	0					
ANR	5599141	CompoundStatement		739:0:29506:29970	5599139	0					
ANR	5599142	IdentifierDeclStatement	active_line * alp = ll -> next_active ;	740:4:29512:29546	5599139	0	True				
ANR	5599143	IdentifierDecl	* alp = ll -> next_active		5599139	0					
ANR	5599144	IdentifierDeclType	active_line *		5599139	0					
ANR	5599145	Identifier	alp		5599139	1					
ANR	5599146	AssignmentExpression	* alp = ll -> next_active		5599139	2		=			
ANR	5599147	Identifier	alp		5599139	0					
ANR	5599148	PtrMemberAccess	ll -> next_active		5599139	1					
ANR	5599149	Identifier	ll		5599139	0					
ANR	5599150	Identifier	next_active		5599139	1					
ANR	5599151	IfStatement	if ( alp == ll -> limit )		5599139	1					
ANR	5599152	Condition	alp == ll -> limit	742:8:29557:29572	5599139	0	True				
ANR	5599153	EqualityExpression	alp == ll -> limit		5599139	0		==			
ANR	5599154	Identifier	alp		5599139	0					
ANR	5599155	PtrMemberAccess	ll -> limit		5599139	1					
ANR	5599156	Identifier	ll		5599139	0					
ANR	5599157	Identifier	limit		5599139	1					
ANR	5599158	CompoundStatement		4:26:68:68	5599139	1					
ANR	5599159	ExpressionStatement	"alp = gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"	743:8:29615:29723	5599139	0	True				
ANR	5599160	AssignmentExpression	"alp = gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"		5599139	0		=			
ANR	5599161	Identifier	alp		5599139	0					
ANR	5599162	CallExpression	"gs_alloc_struct ( ll -> memory , active_line , & st_active_line , ""active line"" )"		5599139	1					
ANR	5599163	Callee	gs_alloc_struct		5599139	0					
ANR	5599164	Identifier	gs_alloc_struct		5599139	0					
ANR	5599165	ArgumentList	ll -> memory		5599139	1					
ANR	5599166	Argument	ll -> memory		5599139	0					
ANR	5599167	PtrMemberAccess	ll -> memory		5599139	0					
ANR	5599168	Identifier	ll		5599139	0					
ANR	5599169	Identifier	memory		5599139	1					
ANR	5599170	Argument	active_line		5599139	1					
ANR	5599171	Identifier	active_line		5599139	0					
ANR	5599172	Argument	& st_active_line		5599139	2					
ANR	5599173	UnaryOperationExpression	& st_active_line		5599139	0					
ANR	5599174	UnaryOperator	&		5599139	0					
ANR	5599175	Identifier	st_active_line		5599139	1					
ANR	5599176	Argument	"""active line"""		5599139	3					
ANR	5599177	PrimaryExpression	"""active line"""		5599139	0					
ANR	5599178	IfStatement	if ( alp == 0 )		5599139	1					
ANR	5599179	Condition	alp == 0	745:12:29737:29744	5599139	0	True				
ANR	5599180	EqualityExpression	alp == 0		5599139	0		==			
ANR	5599181	Identifier	alp		5599139	0					
ANR	5599182	PrimaryExpression	0		5599139	1					
ANR	5599183	ReturnStatement	return NULL ;	746:12:29759:29770	5599139	1	True				
ANR	5599184	Identifier	NULL		5599139	0					
ANR	5599185	ExpressionStatement	alp -> alloc_next = ll -> active_area	747:8:29780:29813	5599139	2	True				
ANR	5599186	AssignmentExpression	alp -> alloc_next = ll -> active_area		5599139	0		=			
ANR	5599187	PtrMemberAccess	alp -> alloc_next		5599139	0					
ANR	5599188	Identifier	alp		5599139	0					
ANR	5599189	Identifier	alloc_next		5599139	1					
ANR	5599190	PtrMemberAccess	ll -> active_area		5599139	1					
ANR	5599191	Identifier	ll		5599139	0					
ANR	5599192	Identifier	active_area		5599139	1					
ANR	5599193	ExpressionStatement	ll -> active_area = alp	748:8:29823:29844	5599139	3	True				
ANR	5599194	AssignmentExpression	ll -> active_area = alp		5599139	0		=			
ANR	5599195	PtrMemberAccess	ll -> active_area		5599139	0					
ANR	5599196	Identifier	ll		5599139	0					
ANR	5599197	Identifier	active_area		5599139	1					
ANR	5599198	Identifier	alp		5599139	1					
ANR	5599199	ExpressionStatement	INCR ( fill_alloc )	749:8:29854:29870	5599139	4	True				
ANR	5599200	CallExpression	INCR ( fill_alloc )		5599139	0					
ANR	5599201	Callee	INCR		5599139	0					
ANR	5599202	Identifier	INCR		5599139	0					
ANR	5599203	ArgumentList	fill_alloc		5599139	1					
ANR	5599204	Argument	fill_alloc		5599139	0					
ANR	5599205	Identifier	fill_alloc		5599139	0					
ANR	5599206	ElseStatement	else		5599139	0					
ANR	5599207	ExpressionStatement	ll -> next_active ++	751:8:29891:29908	5599139	0	True				
ANR	5599208	PostIncDecOperationExpression	ll -> next_active ++		5599139	0					
ANR	5599209	PtrMemberAccess	ll -> next_active		5599139	0					
ANR	5599210	Identifier	ll		5599139	0					
ANR	5599211	Identifier	next_active		5599139	1					
ANR	5599212	IncDec	++		5599139	1					
ANR	5599213	ExpressionStatement	alp -> contour_count = ll -> contour_count	752:4:29914:29952	5599139	2	True				
ANR	5599214	AssignmentExpression	alp -> contour_count = ll -> contour_count		5599139	0		=			
ANR	5599215	PtrMemberAccess	alp -> contour_count		5599139	0					
ANR	5599216	Identifier	alp		5599139	0					
ANR	5599217	Identifier	contour_count		5599139	1					
ANR	5599218	PtrMemberAccess	ll -> contour_count		5599139	1					
ANR	5599219	Identifier	ll		5599139	0					
ANR	5599220	Identifier	contour_count		5599139	1					
ANR	5599221	ReturnStatement	return alp ;	753:4:29958:29968	5599139	3	True				
ANR	5599222	Identifier	alp		5599139	0					
ANR	5599223	ReturnType	static inline active_line *		5599139	1					
ANR	5599224	Identifier	make_al		5599139	2					
ANR	5599225	ParameterList	line_list * ll		5599139	3					
ANR	5599226	Parameter	line_list * ll	738:8:29491:29503	5599139	0	True				
ANR	5599227	ParameterType	line_list *		5599139	0					
ANR	5599228	Identifier	ll		5599139	1					
ANR	5599229	CFGEntryNode	ENTRY		5599139		True				
ANR	5599230	CFGExitNode	EXIT		5599139		True				
ANR	5599231	Symbol	ll		5599139						
ANR	5599232	Symbol	NULL		5599139						
ANR	5599233	Symbol	fill_alloc		5599139						
ANR	5599234	Symbol	ll -> next_active		5599139						
ANR	5599235	Symbol	alp		5599139						
ANR	5599236	Symbol	* ll		5599139						
ANR	5599237	Symbol	ll -> memory		5599139						
ANR	5599238	Symbol	gs_alloc_struct		5599139						
ANR	5599239	Symbol	ll -> active_area		5599139						
ANR	5599240	Symbol	* alp		5599139						
ANR	5599241	Symbol	ll -> limit		5599139						
ANR	5599242	Symbol	alp -> alloc_next		5599139						
ANR	5599243	Symbol	alp -> contour_count		5599139						
ANR	5599244	Symbol	& st_active_line		5599139						
ANR	5599245	Symbol	ll -> contour_count		5599139						
ANR	5599246	Symbol	active_line		5599139						
ANR	5599247	Function	insert_y_line	757:0:30017:31054							
ANR	5599248	FunctionDef	"insert_y_line (line_list * ll , active_line * alp)"		5599247	0					
ANR	5599249	CompoundStatement		759:0:30076:31054	5599247	0					
ANR	5599250	IdentifierDeclStatement	active_line * yp = ll -> y_line ;	760:4:30082:30110	5599247	0	True				
ANR	5599251	IdentifierDecl	* yp = ll -> y_line		5599247	0					
ANR	5599252	IdentifierDeclType	active_line *		5599247	0					
ANR	5599253	Identifier	yp		5599247	1					
ANR	5599254	AssignmentExpression	* yp = ll -> y_line		5599247	2		=			
ANR	5599255	Identifier	yp		5599247	0					
ANR	5599256	PtrMemberAccess	ll -> y_line		5599247	1					
ANR	5599257	Identifier	ll		5599247	0					
ANR	5599258	Identifier	y_line		5599247	1					
ANR	5599259	IdentifierDeclStatement	active_line * nyp ;	761:4:30116:30132	5599247	1	True				
ANR	5599260	IdentifierDecl	* nyp		5599247	0					
ANR	5599261	IdentifierDeclType	active_line *		5599247	0					
ANR	5599262	Identifier	nyp		5599247	1					
ANR	5599263	IdentifierDeclStatement	fixed y_start = alp -> start . y ;	762:4:30138:30166	5599247	2	True				
ANR	5599264	IdentifierDecl	y_start = alp -> start . y		5599247	0					
ANR	5599265	IdentifierDeclType	fixed		5599247	0					
ANR	5599266	Identifier	y_start		5599247	1					
ANR	5599267	AssignmentExpression	y_start = alp -> start . y		5599247	2		=			
ANR	5599268	Identifier	y_start		5599247	0					
ANR	5599269	MemberAccess	alp -> start . y		5599247	1					
ANR	5599270	PtrMemberAccess	alp -> start		5599247	0					
ANR	5599271	Identifier	alp		5599247	0					
ANR	5599272	Identifier	start		5599247	1					
ANR	5599273	Identifier	y		5599247	1					
ANR	5599274	IfStatement	if ( yp == 0 )		5599247	3					
ANR	5599275	Condition	yp == 0	764:8:30177:30183	5599247	0	True				
ANR	5599276	EqualityExpression	yp == 0		5599247	0		==			
ANR	5599277	Identifier	yp		5599247	0					
ANR	5599278	PrimaryExpression	0		5599247	1					
ANR	5599279	CompoundStatement		6:17:109:109	5599247	1					
ANR	5599280	ExpressionStatement	alp -> next = alp -> prev = 0	765:8:30196:30221	5599247	0	True				
ANR	5599281	AssignmentExpression	alp -> next = alp -> prev = 0		5599247	0		=			
ANR	5599282	PtrMemberAccess	alp -> next		5599247	0					
ANR	5599283	Identifier	alp		5599247	0					
ANR	5599284	Identifier	next		5599247	1					
ANR	5599285	AssignmentExpression	alp -> prev = 0		5599247	1		=			
ANR	5599286	PtrMemberAccess	alp -> prev		5599247	0					
ANR	5599287	Identifier	alp		5599247	0					
ANR	5599288	Identifier	prev		5599247	1					
ANR	5599289	PrimaryExpression	0		5599247	1					
ANR	5599290	ExpressionStatement	ll -> y_list = alp	766:8:30231:30247	5599247	1	True				
ANR	5599291	AssignmentExpression	ll -> y_list = alp		5599247	0		=			
ANR	5599292	PtrMemberAccess	ll -> y_list		5599247	0					
ANR	5599293	Identifier	ll		5599247	0					
ANR	5599294	Identifier	y_list		5599247	1					
ANR	5599295	Identifier	alp		5599247	1					
ANR	5599296	ElseStatement	else		5599247	0					
ANR	5599297	IfStatement	if ( y_start >= yp -> start . y )		5599247	0					
ANR	5599298	Condition	y_start >= yp -> start . y	767:15:30264:30285	5599247	0	True				
ANR	5599299	RelationalExpression	y_start >= yp -> start . y		5599247	0		>=			
ANR	5599300	Identifier	y_start		5599247	0					
ANR	5599301	MemberAccess	yp -> start . y		5599247	1					
ANR	5599302	PtrMemberAccess	yp -> start		5599247	0					
ANR	5599303	Identifier	yp		5599247	0					
ANR	5599304	Identifier	start		5599247	1					
ANR	5599305	Identifier	y		5599247	1					
ANR	5599306	CompoundStatement		9:39:211:211	5599247	1					
ANR	5599307	WhileStatement	"while ( INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y ) )"		5599247	0					
ANR	5599308	Condition	"INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y )"	768:15:30351:30450	5599247	0	True				
ANR	5599309	Expression	"INCR_EXPR ( y_up ) , ( ( nyp = yp -> next ) != NULL && y_start > nyp -> start . y )"		5599247	0					
ANR	5599310	CallExpression	INCR_EXPR ( y_up )		5599247	0					
ANR	5599311	Callee	INCR_EXPR		5599247	0					
ANR	5599312	Identifier	INCR_EXPR		5599247	0					
ANR	5599313	ArgumentList	y_up		5599247	1					
ANR	5599314	Argument	y_up		5599247	0					
ANR	5599315	Identifier	y_up		5599247	0					
ANR	5599316	AndExpression	( nyp = yp -> next ) != NULL && y_start > nyp -> start . y		5599247	1		&&			
ANR	5599317	EqualityExpression	( nyp = yp -> next ) != NULL		5599247	0		!=			
ANR	5599318	AssignmentExpression	nyp = yp -> next		5599247	0		=			
ANR	5599319	Identifier	nyp		5599247	0					
ANR	5599320	PtrMemberAccess	yp -> next		5599247	1					
ANR	5599321	Identifier	yp		5599247	0					
ANR	5599322	Identifier	next		5599247	1					
ANR	5599323	Identifier	NULL		5599247	1					
ANR	5599324	RelationalExpression	y_start > nyp -> start . y		5599247	1		>			
ANR	5599325	Identifier	y_start		5599247	0					
ANR	5599326	MemberAccess	nyp -> start . y		5599247	1					
ANR	5599327	PtrMemberAccess	nyp -> start		5599247	0					
ANR	5599328	Identifier	nyp		5599247	0					
ANR	5599329	Identifier	start		5599247	1					
ANR	5599330	Identifier	y		5599247	1					
ANR	5599331	ExpressionStatement	yp = nyp	772:12:30478:30486	5599247	1	True				
ANR	5599332	AssignmentExpression	yp = nyp		5599247	0		=			
ANR	5599333	Identifier	yp		5599247	0					
ANR	5599334	Identifier	nyp		5599247	1					
ANR	5599335	ExpressionStatement	alp -> next = nyp	773:8:30496:30511	5599247	1	True				
ANR	5599336	AssignmentExpression	alp -> next = nyp		5599247	0		=			
ANR	5599337	PtrMemberAccess	alp -> next		5599247	0					
ANR	5599338	Identifier	alp		5599247	0					
ANR	5599339	Identifier	next		5599247	1					
ANR	5599340	Identifier	nyp		5599247	1					
ANR	5599341	ExpressionStatement	alp -> prev = yp	774:8:30521:30535	5599247	2	True				
ANR	5599342	AssignmentExpression	alp -> prev = yp		5599247	0		=			
ANR	5599343	PtrMemberAccess	alp -> prev		5599247	0					
ANR	5599344	Identifier	alp		5599247	0					
ANR	5599345	Identifier	prev		5599247	1					
ANR	5599346	Identifier	yp		5599247	1					
ANR	5599347	ExpressionStatement	yp -> next = alp	775:8:30545:30559	5599247	3	True				
ANR	5599348	AssignmentExpression	yp -> next = alp		5599247	0		=			
ANR	5599349	PtrMemberAccess	yp -> next		5599247	0					
ANR	5599350	Identifier	yp		5599247	0					
ANR	5599351	Identifier	next		5599247	1					
ANR	5599352	Identifier	alp		5599247	1					
ANR	5599353	IfStatement	if ( nyp )		5599247	4					
ANR	5599354	Condition	nyp	776:12:30573:30575	5599247	0	True				
ANR	5599355	Identifier	nyp		5599247	0					
ANR	5599356	ExpressionStatement	nyp -> prev = alp	777:12:30590:30605	5599247	1	True				
ANR	5599357	AssignmentExpression	nyp -> prev = alp		5599247	0		=			
ANR	5599358	PtrMemberAccess	nyp -> prev		5599247	0					
ANR	5599359	Identifier	nyp		5599247	0					
ANR	5599360	Identifier	prev		5599247	1					
ANR	5599361	Identifier	alp		5599247	1					
ANR	5599362	ElseStatement	else		5599247	0					
ANR	5599363	CompoundStatement		20:11:541:541	5599247	0					
ANR	5599364	WhileStatement	"while ( INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y ) )"		5599247	0					
ANR	5599365	Condition	"INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y )"	779:15:30686:30787	5599247	0	True				
ANR	5599366	Expression	"INCR_EXPR ( y_down ) , ( ( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y )"		5599247	0					
ANR	5599367	CallExpression	INCR_EXPR ( y_down )		5599247	0					
ANR	5599368	Callee	INCR_EXPR		5599247	0					
ANR	5599369	Identifier	INCR_EXPR		5599247	0					
ANR	5599370	ArgumentList	y_down		5599247	1					
ANR	5599371	Argument	y_down		5599247	0					
ANR	5599372	Identifier	y_down		5599247	0					
ANR	5599373	AndExpression	( nyp = yp -> prev ) != NULL && y_start < nyp -> start . y		5599247	1		&&			
ANR	5599374	EqualityExpression	( nyp = yp -> prev ) != NULL		5599247	0		!=			
ANR	5599375	AssignmentExpression	nyp = yp -> prev		5599247	0		=			
ANR	5599376	Identifier	nyp		5599247	0					
ANR	5599377	PtrMemberAccess	yp -> prev		5599247	1					
ANR	5599378	Identifier	yp		5599247	0					
ANR	5599379	Identifier	prev		5599247	1					
ANR	5599380	Identifier	NULL		5599247	1					
ANR	5599381	RelationalExpression	y_start < nyp -> start . y		5599247	1		<			
ANR	5599382	Identifier	y_start		5599247	0					
ANR	5599383	MemberAccess	nyp -> start . y		5599247	1					
ANR	5599384	PtrMemberAccess	nyp -> start		5599247	0					
ANR	5599385	Identifier	nyp		5599247	0					
ANR	5599386	Identifier	start		5599247	1					
ANR	5599387	Identifier	y		5599247	1					
ANR	5599388	ExpressionStatement	yp = nyp	783:12:30815:30823	5599247	1	True				
ANR	5599389	AssignmentExpression	yp = nyp		5599247	0		=			
ANR	5599390	Identifier	yp		5599247	0					
ANR	5599391	Identifier	nyp		5599247	1					
ANR	5599392	ExpressionStatement	alp -> prev = nyp	784:8:30833:30848	5599247	1	True				
ANR	5599393	AssignmentExpression	alp -> prev = nyp		5599247	0		=			
ANR	5599394	PtrMemberAccess	alp -> prev		5599247	0					
ANR	5599395	Identifier	alp		5599247	0					
ANR	5599396	Identifier	prev		5599247	1					
ANR	5599397	Identifier	nyp		5599247	1					
ANR	5599398	ExpressionStatement	alp -> next = yp	785:8:30858:30872	5599247	2	True				
ANR	5599399	AssignmentExpression	alp -> next = yp		5599247	0		=			
ANR	5599400	PtrMemberAccess	alp -> next		5599247	0					
ANR	5599401	Identifier	alp		5599247	0					
ANR	5599402	Identifier	next		5599247	1					
ANR	5599403	Identifier	yp		5599247	1					
ANR	5599404	ExpressionStatement	yp -> prev = alp	786:8:30882:30896	5599247	3	True				
ANR	5599405	AssignmentExpression	yp -> prev = alp		5599247	0		=			
ANR	5599406	PtrMemberAccess	yp -> prev		5599247	0					
ANR	5599407	Identifier	yp		5599247	0					
ANR	5599408	Identifier	prev		5599247	1					
ANR	5599409	Identifier	alp		5599247	1					
ANR	5599410	IfStatement	if ( nyp )		5599247	4					
ANR	5599411	Condition	nyp	787:12:30910:30912	5599247	0	True				
ANR	5599412	Identifier	nyp		5599247	0					
ANR	5599413	ExpressionStatement	nyp -> next = alp	788:12:30927:30942	5599247	1	True				
ANR	5599414	AssignmentExpression	nyp -> next = alp		5599247	0		=			
ANR	5599415	PtrMemberAccess	nyp -> next		5599247	0					
ANR	5599416	Identifier	nyp		5599247	0					
ANR	5599417	Identifier	next		5599247	1					
ANR	5599418	Identifier	alp		5599247	1					
ANR	5599419	ElseStatement	else		5599247	0					
ANR	5599420	ExpressionStatement	ll -> y_list = alp	790:12:30969:30985	5599247	0	True				
ANR	5599421	AssignmentExpression	ll -> y_list = alp		5599247	0		=			
ANR	5599422	PtrMemberAccess	ll -> y_list		5599247	0					
ANR	5599423	Identifier	ll		5599247	0					
ANR	5599424	Identifier	y_list		5599247	1					
ANR	5599425	Identifier	alp		5599247	1					
ANR	5599426	ExpressionStatement	ll -> y_line = alp	792:4:30997:31013	5599247	4	True				
ANR	5599427	AssignmentExpression	ll -> y_line = alp		5599247	0		=			
ANR	5599428	PtrMemberAccess	ll -> y_line		5599247	0					
ANR	5599429	Identifier	ll		5599247	0					
ANR	5599430	Identifier	y_line		5599247	1					
ANR	5599431	Identifier	alp		5599247	1					
ANR	5599432	ExpressionStatement	"print_al ( ll -> memory , ""add "" , alp )"	793:4:31019:31052	5599247	5	True				
ANR	5599433	CallExpression	"print_al ( ll -> memory , ""add "" , alp )"		5599247	0					
ANR	5599434	Callee	print_al		5599247	0					
ANR	5599435	Identifier	print_al		5599247	0					
ANR	5599436	ArgumentList	ll -> memory		5599247	1					
ANR	5599437	Argument	ll -> memory		5599247	0					
ANR	5599438	PtrMemberAccess	ll -> memory		5599247	0					
ANR	5599439	Identifier	ll		5599247	0					
ANR	5599440	Identifier	memory		5599247	1					
ANR	5599441	Argument	"""add """		5599247	1					
ANR	5599442	PrimaryExpression	"""add """		5599247	0					
ANR	5599443	Argument	alp		5599247	2					
ANR	5599444	Identifier	alp		5599247	0					
ANR	5599445	ReturnType	static void		5599247	1					
ANR	5599446	Identifier	insert_y_line		5599247	2					
ANR	5599447	ParameterList	"line_list * ll , active_line * alp"		5599247	3					
ANR	5599448	Parameter	line_list * ll	758:14:30043:30055	5599247	0	True				
ANR	5599449	ParameterType	line_list *		5599247	0					
ANR	5599450	Identifier	ll		5599247	1					
ANR	5599451	Parameter	active_line * alp	758:29:30058:30073	5599247	1	True				
ANR	5599452	ParameterType	active_line *		5599247	0					
ANR	5599453	Identifier	alp		5599247	1					
ANR	5599454	CFGEntryNode	ENTRY		5599247		True				
ANR	5599455	CFGExitNode	EXIT		5599247		True				
ANR	5599456	Symbol	ll		5599247						
ANR	5599457	Symbol	nyp -> start . y		5599247						
ANR	5599458	Symbol	nyp		5599247						
ANR	5599459	Symbol	ll -> memory		5599247						
ANR	5599460	Symbol	ll -> y_list		5599247						
ANR	5599461	Symbol	y_down		5599247						
ANR	5599462	Symbol	yp		5599247						
ANR	5599463	Symbol	yp -> start		5599247						
ANR	5599464	Symbol	y_up		5599247						
ANR	5599465	Symbol	* yp		5599247						
ANR	5599466	Symbol	NULL		5599247						
ANR	5599467	Symbol	alp		5599247						
ANR	5599468	Symbol	* ll		5599247						
ANR	5599469	Symbol	y_start		5599247						
ANR	5599470	Symbol	yp -> start . y		5599247						
ANR	5599471	Symbol	INCR_EXPR		5599247						
ANR	5599472	Symbol	nyp -> prev		5599247						
ANR	5599473	Symbol	nyp -> next		5599247						
ANR	5599474	Symbol	* nyp		5599247						
ANR	5599475	Symbol	* alp		5599247						
ANR	5599476	Symbol	yp -> prev		5599247						
ANR	5599477	Symbol	alp -> prev		5599247						
ANR	5599478	Symbol	alp -> start . y		5599247						
ANR	5599479	Symbol	ll -> y_line		5599247						
ANR	5599480	Symbol	alp -> next		5599247						
ANR	5599481	Symbol	nyp -> start		5599247						
ANR	5599482	Symbol	alp -> start		5599247						
ANR	5599483	Symbol	yp -> next		5599247						
ANR	5599484	ClassDef	contour_cursor_s	796:8:31065:31307							
ANR	5599485	DeclStmt									
ANR	5599486	Decl							segment	segment *	prev
ANR	5599487	Decl							segment	segment *	pseg
ANR	5599488	Decl							segment	segment *	pfirst
ANR	5599489	Decl							segment	segment *	plast
ANR	5599490	DeclStmt									
ANR	5599491	Decl							gx_flattened_iterator	gx_flattened_iterator	fi
ANR	5599492	DeclStmt									
ANR	5599493	Decl							bool	bool	more_flattened
ANR	5599494	DeclStmt									
ANR	5599495	Decl							bool	bool	first_flattened
ANR	5599496	DeclStmt									
ANR	5599497	Decl							int	int	dir
ANR	5599498	DeclStmt									
ANR	5599499	Decl							bool	bool	monotonic_y
ANR	5599500	DeclStmt									
ANR	5599501	Decl							bool	bool	monotonic_x
ANR	5599502	DeclStmt									
ANR	5599503	Decl							bool	bool	crossing
ANR	5599504	DeclStmt									
ANR	5599505	Decl							contour_cursor_s	contour_cursor_s	contour_cursor
ANR	5599506	Function	compute_dir	807:0:31310:31601							
ANR	5599507	FunctionDef	"compute_dir (const fill_options * fo , fixed y0 , fixed y1)"		5599506	0					
ANR	5599508	CompoundStatement		809:0:31384:31601	5599506	0					
ANR	5599509	IfStatement	"if ( max ( y0 , y1 ) < fo -> ymin )"		5599506	0					
ANR	5599510	Condition	"max ( y0 , y1 ) < fo -> ymin"	810:8:31394:31415	5599506	0	True				
ANR	5599511	RelationalExpression	"max ( y0 , y1 ) < fo -> ymin"		5599506	0		<			
ANR	5599512	CallExpression	"max ( y0 , y1 )"		5599506	0					
ANR	5599513	Callee	max		5599506	0					
ANR	5599514	Identifier	max		5599506	0					
ANR	5599515	ArgumentList	y0		5599506	1					
ANR	5599516	Argument	y0		5599506	0					
ANR	5599517	Identifier	y0		5599506	0					
ANR	5599518	Argument	y1		5599506	1					
ANR	5599519	Identifier	y1		5599506	0					
ANR	5599520	PtrMemberAccess	fo -> ymin		5599506	1					
ANR	5599521	Identifier	fo		5599506	0					
ANR	5599522	Identifier	ymin		5599506	1					
ANR	5599523	ReturnStatement	return DIR_OUT_OF_Y_RANGE ;	811:8:31426:31451	5599506	1	True				
ANR	5599524	Identifier	DIR_OUT_OF_Y_RANGE		5599506	0					
ANR	5599525	IfStatement	"if ( min ( y0 , y1 ) > fo -> ymax )"		5599506	1					
ANR	5599526	Condition	"min ( y0 , y1 ) > fo -> ymax"	812:8:31461:31482	5599506	0	True				
ANR	5599527	RelationalExpression	"min ( y0 , y1 ) > fo -> ymax"		5599506	0		>			
ANR	5599528	CallExpression	"min ( y0 , y1 )"		5599506	0					
ANR	5599529	Callee	min		5599506	0					
ANR	5599530	Identifier	min		5599506	0					
ANR	5599531	ArgumentList	y0		5599506	1					
ANR	5599532	Argument	y0		5599506	0					
ANR	5599533	Identifier	y0		5599506	0					
ANR	5599534	Argument	y1		5599506	1					
ANR	5599535	Identifier	y1		5599506	0					
ANR	5599536	PtrMemberAccess	fo -> ymax		5599506	1					
ANR	5599537	Identifier	fo		5599506	0					
ANR	5599538	Identifier	ymax		5599506	1					
ANR	5599539	ReturnStatement	return DIR_OUT_OF_Y_RANGE ;	813:8:31493:31518	5599506	1	True				
ANR	5599540	Identifier	DIR_OUT_OF_Y_RANGE		5599506	0					
ANR	5599541	ReturnStatement	return ( y0 < y1 ? DIR_UP : y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL ) ;	814:4:31524:31599	5599506	2	True				
ANR	5599542	ConditionalExpression	y0 < y1 ? DIR_UP : y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL		5599506	0					
ANR	5599543	Condition	y0 < y1		5599506	0					
ANR	5599544	RelationalExpression	y0 < y1		5599506	0		<			
ANR	5599545	Identifier	y0		5599506	0					
ANR	5599546	Identifier	y1		5599506	1					
ANR	5599547	Identifier	DIR_UP		5599506	1					
ANR	5599548	ConditionalExpression	y0 > y1 ? DIR_DOWN : DIR_HORIZONTAL		5599506	2					
ANR	5599549	Condition	y0 > y1		5599506	0					
ANR	5599550	RelationalExpression	y0 > y1		5599506	0		>			
ANR	5599551	Identifier	y0		5599506	0					
ANR	5599552	Identifier	y1		5599506	1					
ANR	5599553	Identifier	DIR_DOWN		5599506	1					
ANR	5599554	Identifier	DIR_HORIZONTAL		5599506	2					
ANR	5599555	ReturnType	static inline int		5599506	1					
ANR	5599556	Identifier	compute_dir		5599506	2					
ANR	5599557	ParameterList	"const fill_options * fo , fixed y0 , fixed y1"		5599506	3					
ANR	5599558	Parameter	const fill_options * fo	808:12:31340:31361	5599506	0	True				
ANR	5599559	ParameterType	const fill_options *		5599506	0					
ANR	5599560	Identifier	fo		5599506	1					
ANR	5599561	Parameter	fixed y0	808:36:31364:31371	5599506	1	True				
ANR	5599562	ParameterType	fixed		5599506	0					
ANR	5599563	Identifier	y0		5599506	1					
ANR	5599564	Parameter	fixed y1	808:46:31374:31381	5599506	2	True				
ANR	5599565	ParameterType	fixed		5599506	0					
ANR	5599566	Identifier	y1		5599506	1					
ANR	5599567	CFGEntryNode	ENTRY		5599506		True				
ANR	5599568	CFGExitNode	EXIT		5599506		True				
ANR	5599569	Symbol	min		5599506						
ANR	5599570	Symbol	fo -> ymin		5599506						
ANR	5599571	Symbol	max		5599506						
ANR	5599572	Symbol	fo -> ymax		5599506						
ANR	5599573	Symbol	y0		5599506						
ANR	5599574	Symbol	y1		5599506						
ANR	5599575	Symbol	fo		5599506						
ANR	5599576	Symbol	DIR_UP		5599506						
ANR	5599577	Symbol	DIR_OUT_OF_Y_RANGE		5599506						
ANR	5599578	Symbol	DIR_DOWN		5599506						
ANR	5599579	Symbol	* fo		5599506						
ANR	5599580	Symbol	DIR_HORIZONTAL		5599506						
ANR	5599581	Function	add_y_curve_part	818:0:31604:32603							
ANR	5599582	FunctionDef	"add_y_curve_part (line_list * ll , segment * s0 , segment * s1 , int dir , gx_flattened_iterator * fi , bool more1 , bool step_back , bool monotonic_x)"		5599581	0					
ANR	5599583	CompoundStatement		821:0:31766:32603	5599581	0					
ANR	5599584	IdentifierDeclStatement	active_line * alp = make_al ( ll ) ;	822:4:31772:31802	5599581	0	True				
ANR	5599585	IdentifierDecl	* alp = make_al ( ll )		5599581	0					
ANR	5599586	IdentifierDeclType	active_line *		5599581	0					
ANR	5599587	Identifier	alp		5599581	1					
ANR	5599588	AssignmentExpression	* alp = make_al ( ll )		5599581	2		=			
ANR	5599589	Identifier	alp		5599581	0					
ANR	5599590	CallExpression	make_al ( ll )		5599581	1					
ANR	5599591	Callee	make_al		5599581	0					
ANR	5599592	Identifier	make_al		5599581	0					
ANR	5599593	ArgumentList	ll		5599581	1					
ANR	5599594	Argument	ll		5599581	0					
ANR	5599595	Identifier	ll		5599581	0					
ANR	5599596	IdentifierDeclStatement	int code ;	823:4:31808:31816	5599581	1	True				
ANR	5599597	IdentifierDecl	code		5599581	0					
ANR	5599598	IdentifierDeclType	int		5599581	0					
ANR	5599599	Identifier	code		5599581	1					
ANR	5599600	IfStatement	if ( alp == NULL )		5599581	2					
ANR	5599601	Condition	alp == NULL	825:8:31827:31837	5599581	0	True				
ANR	5599602	EqualityExpression	alp == NULL		5599581	0		==			
ANR	5599603	Identifier	alp		5599581	0					
ANR	5599604	Identifier	NULL		5599581	1					
ANR	5599605	ExpressionStatement	return_error ( gs_error_VMerror )	826:8:31848:31878	5599581	1	True				
ANR	5599606	CallExpression	return_error ( gs_error_VMerror )		5599581	0					
ANR	5599607	Callee	return_error		5599581	0					
ANR	5599608	Identifier	return_error		5599581	0					
ANR	5599609	ArgumentList	gs_error_VMerror		5599581	1					
ANR	5599610	Argument	gs_error_VMerror		5599581	0					
ANR	5599611	Identifier	gs_error_VMerror		5599581	0					
ANR	5599612	ExpressionStatement	alp -> pseg = ( dir == DIR_UP ? s1 : s0 )	827:4:31884:31921	5599581	3	True				
ANR	5599613	AssignmentExpression	alp -> pseg = ( dir == DIR_UP ? s1 : s0 )		5599581	0		=			
ANR	5599614	PtrMemberAccess	alp -> pseg		5599581	0					
ANR	5599615	Identifier	alp		5599581	0					
ANR	5599616	Identifier	pseg		5599581	1					
ANR	5599617	ConditionalExpression	dir == DIR_UP ? s1 : s0		5599581	1					
ANR	5599618	Condition	dir == DIR_UP		5599581	0					
ANR	5599619	EqualityExpression	dir == DIR_UP		5599581	0		==			
ANR	5599620	Identifier	dir		5599581	0					
ANR	5599621	Identifier	DIR_UP		5599581	1					
ANR	5599622	Identifier	s1		5599581	1					
ANR	5599623	Identifier	s0		5599581	2					
ANR	5599624	ExpressionStatement	alp -> direction = dir	828:4:31927:31947	5599581	4	True				
ANR	5599625	AssignmentExpression	alp -> direction = dir		5599581	0		=			
ANR	5599626	PtrMemberAccess	alp -> direction		5599581	0					
ANR	5599627	Identifier	alp		5599581	0					
ANR	5599628	Identifier	direction		5599581	1					
ANR	5599629	Identifier	dir		5599581	1					
ANR	5599630	ExpressionStatement	alp -> fi = * fi	829:4:31953:31966	5599581	5	True				
ANR	5599631	AssignmentExpression	alp -> fi = * fi		5599581	0		=			
ANR	5599632	PtrMemberAccess	alp -> fi		5599581	0					
ANR	5599633	Identifier	alp		5599581	0					
ANR	5599634	Identifier	fi		5599581	1					
ANR	5599635	UnaryOperationExpression	* fi		5599581	1					
ANR	5599636	UnaryOperator	*		5599581	0					
ANR	5599637	Identifier	fi		5599581	1					
ANR	5599638	ExpressionStatement	alp -> more_flattened = more1	830:4:31972:31999	5599581	6	True				
ANR	5599639	AssignmentExpression	alp -> more_flattened = more1		5599581	0		=			
ANR	5599640	PtrMemberAccess	alp -> more_flattened		5599581	0					
ANR	5599641	Identifier	alp		5599581	0					
ANR	5599642	Identifier	more_flattened		5599581	1					
ANR	5599643	Identifier	more1		5599581	1					
ANR	5599644	IfStatement	if ( dir != DIR_UP && more1 )		5599581	7					
ANR	5599645	Condition	dir != DIR_UP && more1	831:8:32009:32030	5599581	0	True				
ANR	5599646	AndExpression	dir != DIR_UP && more1		5599581	0		&&			
ANR	5599647	EqualityExpression	dir != DIR_UP		5599581	0		!=			
ANR	5599648	Identifier	dir		5599581	0					
ANR	5599649	Identifier	DIR_UP		5599581	1					
ANR	5599650	Identifier	more1		5599581	1					
ANR	5599651	ExpressionStatement	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , more1 )"	832:8:32041:32099	5599581	1	True				
ANR	5599652	CallExpression	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , more1 )"		5599581	0					
ANR	5599653	Callee	gx_flattened_iterator__switch_to_backscan		5599581	0					
ANR	5599654	Identifier	gx_flattened_iterator__switch_to_backscan		5599581	0					
ANR	5599655	ArgumentList	& alp -> fi		5599581	1					
ANR	5599656	Argument	& alp -> fi		5599581	0					
ANR	5599657	UnaryOperationExpression	& alp -> fi		5599581	0					
ANR	5599658	UnaryOperator	&		5599581	0					
ANR	5599659	PtrMemberAccess	alp -> fi		5599581	1					
ANR	5599660	Identifier	alp		5599581	0					
ANR	5599661	Identifier	fi		5599581	1					
ANR	5599662	Argument	more1		5599581	1					
ANR	5599663	Identifier	more1		5599581	0					
ANR	5599664	IfStatement	if ( step_back )		5599581	8					
ANR	5599665	Condition	step_back	833:8:32109:32117	5599581	0	True				
ANR	5599666	Identifier	step_back		5599581	0					
ANR	5599667	CompoundStatement		13:19:353:353	5599581	1					
ANR	5599668	DoStatement	do		5599581	0					
ANR	5599669	CompoundStatement		14:11:366:366	5599581	0					
ANR	5599670	ExpressionStatement	code = gx_flattened_iterator__prev ( & alp -> fi )	835:12:32147:32191	5599581	0	True				
ANR	5599671	AssignmentExpression	code = gx_flattened_iterator__prev ( & alp -> fi )		5599581	0		=			
ANR	5599672	Identifier	code		5599581	0					
ANR	5599673	CallExpression	gx_flattened_iterator__prev ( & alp -> fi )		5599581	1					
ANR	5599674	Callee	gx_flattened_iterator__prev		5599581	0					
ANR	5599675	Identifier	gx_flattened_iterator__prev		5599581	0					
ANR	5599676	ArgumentList	& alp -> fi		5599581	1					
ANR	5599677	Argument	& alp -> fi		5599581	0					
ANR	5599678	UnaryOperationExpression	& alp -> fi		5599581	0					
ANR	5599679	UnaryOperator	&		5599581	0					
ANR	5599680	PtrMemberAccess	alp -> fi		5599581	1					
ANR	5599681	Identifier	alp		5599581	0					
ANR	5599682	Identifier	fi		5599581	1					
ANR	5599683	IfStatement	if ( code < 0 )		5599581	1					
ANR	5599684	Condition	code < 0	836:16:32209:32216	5599581	0	True				
ANR	5599685	RelationalExpression	code < 0		5599581	0		<			
ANR	5599686	Identifier	code		5599581	0					
ANR	5599687	PrimaryExpression	0		5599581	1					
ANR	5599688	ReturnStatement	return code ;	837:16:32235:32246	5599581	1	True				
ANR	5599689	Identifier	code		5599581	0					
ANR	5599690	ExpressionStatement	alp -> more_flattened = code	838:12:32260:32286	5599581	2	True				
ANR	5599691	AssignmentExpression	alp -> more_flattened = code		5599581	0		=			
ANR	5599692	PtrMemberAccess	alp -> more_flattened		5599581	0					
ANR	5599693	Identifier	alp		5599581	0					
ANR	5599694	Identifier	more_flattened		5599581	1					
ANR	5599695	Identifier	code		5599581	1					
ANR	5599696	IfStatement	"if ( compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2 )"		5599581	3					
ANR	5599697	Condition	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2"	839:16:32304:32353	5599581	0	True				
ANR	5599698	EqualityExpression	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 ) != 2"		5599581	0		!=			
ANR	5599699	CallExpression	"compute_dir ( ll -> fo , alp -> fi . ly0 , alp -> fi . ly1 )"		5599581	0					
ANR	5599700	Callee	compute_dir		5599581	0					
ANR	5599701	Identifier	compute_dir		5599581	0					
ANR	5599702	ArgumentList	ll -> fo		5599581	1					
ANR	5599703	Argument	ll -> fo		5599581	0					
ANR	5599704	PtrMemberAccess	ll -> fo		5599581	0					
ANR	5599705	Identifier	ll		5599581	0					
ANR	5599706	Identifier	fo		5599581	1					
ANR	5599707	Argument	alp -> fi . ly0		5599581	1					
ANR	5599708	MemberAccess	alp -> fi . ly0		5599581	0					
ANR	5599709	PtrMemberAccess	alp -> fi		5599581	0					
ANR	5599710	Identifier	alp		5599581	0					
ANR	5599711	Identifier	fi		5599581	1					
ANR	5599712	Identifier	ly0		5599581	1					
ANR	5599713	Argument	alp -> fi . ly1		5599581	2					
ANR	5599714	MemberAccess	alp -> fi . ly1		5599581	0					
ANR	5599715	PtrMemberAccess	alp -> fi		5599581	0					
ANR	5599716	Identifier	alp		5599581	0					
ANR	5599717	Identifier	fi		5599581	1					
ANR	5599718	Identifier	ly1		5599581	1					
ANR	5599719	PrimaryExpression	2		5599581	1					
ANR	5599720	BreakStatement	break ;	840:16:32372:32377	5599581	1	True				
ANR	5599721	Condition	alp -> more_flattened	841:17:32396:32414	5599581	1	True				
ANR	5599722	PtrMemberAccess	alp -> more_flattened		5599581	0					
ANR	5599723	Identifier	alp		5599581	0					
ANR	5599724	Identifier	more_flattened		5599581	1					
ANR	5599725	ExpressionStatement	"code = step_al ( alp , false )"	843:4:32428:32454	5599581	9	True				
ANR	5599726	AssignmentExpression	"code = step_al ( alp , false )"		5599581	0		=			
ANR	5599727	Identifier	code		5599581	0					
ANR	5599728	CallExpression	"step_al ( alp , false )"		5599581	1					
ANR	5599729	Callee	step_al		5599581	0					
ANR	5599730	Identifier	step_al		5599581	0					
ANR	5599731	ArgumentList	alp		5599581	1					
ANR	5599732	Argument	alp		5599581	0					
ANR	5599733	Identifier	alp		5599581	0					
ANR	5599734	Argument	false		5599581	1					
ANR	5599735	Identifier	false		5599581	0					
ANR	5599736	IfStatement	if ( code < 0 )		5599581	10					
ANR	5599737	Condition	code < 0	844:8:32464:32471	5599581	0	True				
ANR	5599738	RelationalExpression	code < 0		5599581	0		<			
ANR	5599739	Identifier	code		5599581	0					
ANR	5599740	PrimaryExpression	0		5599581	1					
ANR	5599741	ReturnStatement	return code ;	845:8:32482:32493	5599581	1	True				
ANR	5599742	Identifier	code		5599581	0					
ANR	5599743	ExpressionStatement	alp -> monotonic_y = false	846:4:32499:32523	5599581	11	True				
ANR	5599744	AssignmentExpression	alp -> monotonic_y = false		5599581	0		=			
ANR	5599745	PtrMemberAccess	alp -> monotonic_y		5599581	0					
ANR	5599746	Identifier	alp		5599581	0					
ANR	5599747	Identifier	monotonic_y		5599581	1					
ANR	5599748	Identifier	false		5599581	1					
ANR	5599749	ExpressionStatement	alp -> monotonic_x = monotonic_x	847:4:32529:32559	5599581	12	True				
ANR	5599750	AssignmentExpression	alp -> monotonic_x = monotonic_x		5599581	0		=			
ANR	5599751	PtrMemberAccess	alp -> monotonic_x		5599581	0					
ANR	5599752	Identifier	alp		5599581	0					
ANR	5599753	Identifier	monotonic_x		5599581	1					
ANR	5599754	Identifier	monotonic_x		5599581	1					
ANR	5599755	ExpressionStatement	"insert_y_line ( ll , alp )"	848:4:32565:32587	5599581	13	True				
ANR	5599756	CallExpression	"insert_y_line ( ll , alp )"		5599581	0					
ANR	5599757	Callee	insert_y_line		5599581	0					
ANR	5599758	Identifier	insert_y_line		5599581	0					
ANR	5599759	ArgumentList	ll		5599581	1					
ANR	5599760	Argument	ll		5599581	0					
ANR	5599761	Identifier	ll		5599581	0					
ANR	5599762	Argument	alp		5599581	1					
ANR	5599763	Identifier	alp		5599581	0					
ANR	5599764	ReturnStatement	return 0 ;	849:4:32593:32601	5599581	14	True				
ANR	5599765	PrimaryExpression	0		5599581	0					
ANR	5599766	ReturnType	static inline int		5599581	1					
ANR	5599767	Identifier	add_y_curve_part		5599581	2					
ANR	5599768	ParameterList	"line_list * ll , segment * s0 , segment * s1 , int dir , gx_flattened_iterator * fi , bool more1 , bool step_back , bool monotonic_x"		5599581	3					
ANR	5599769	Parameter	line_list * ll	819:17:31639:31651	5599581	0	True				
ANR	5599770	ParameterType	line_list *		5599581	0					
ANR	5599771	Identifier	ll		5599581	1					
ANR	5599772	Parameter	segment * s0	819:32:31654:31664	5599581	1	True				
ANR	5599773	ParameterType	segment *		5599581	0					
ANR	5599774	Identifier	s0		5599581	1					
ANR	5599775	Parameter	segment * s1	819:45:31667:31677	5599581	2	True				
ANR	5599776	ParameterType	segment *		5599581	0					
ANR	5599777	Identifier	s1		5599581	1					
ANR	5599778	Parameter	int dir	819:58:31680:31686	5599581	3	True				
ANR	5599779	ParameterType	int		5599581	0					
ANR	5599780	Identifier	dir		5599581	1					
ANR	5599781	Parameter	gx_flattened_iterator * fi	820:4:31693:31717	5599581	4	True				
ANR	5599782	ParameterType	gx_flattened_iterator *		5599581	0					
ANR	5599783	Identifier	fi		5599581	1					
ANR	5599784	Parameter	bool more1	820:31:31720:31729	5599581	5	True				
ANR	5599785	ParameterType	bool		5599581	0					
ANR	5599786	Identifier	more1		5599581	1					
ANR	5599787	Parameter	bool step_back	820:43:31732:31745	5599581	6	True				
ANR	5599788	ParameterType	bool		5599581	0					
ANR	5599789	Identifier	step_back		5599581	1					
ANR	5599790	Parameter	bool monotonic_x	820:59:31748:31763	5599581	7	True				
ANR	5599791	ParameterType	bool		5599581	0					
ANR	5599792	Identifier	monotonic_x		5599581	1					
ANR	5599793	CFGEntryNode	ENTRY		5599581		True				
ANR	5599794	CFGExitNode	EXIT		5599581		True				
ANR	5599795	Symbol	ll		5599581						
ANR	5599796	Symbol	alp -> direction		5599581						
ANR	5599797	Symbol	fi		5599581						
ANR	5599798	Symbol	code		5599581						
ANR	5599799	Symbol	more1		5599581						
ANR	5599800	Symbol	alp -> monotonic_y		5599581						
ANR	5599801	Symbol	dir		5599581						
ANR	5599802	Symbol	gx_flattened_iterator__prev		5599581						
ANR	5599803	Symbol	alp -> pseg		5599581						
ANR	5599804	Symbol	alp -> fi		5599581						
ANR	5599805	Symbol	compute_dir		5599581						
ANR	5599806	Symbol	alp -> monotonic_x		5599581						
ANR	5599807	Symbol	step_back		5599581						
ANR	5599808	Symbol	DIR_UP		5599581						
ANR	5599809	Symbol	step_al		5599581						
ANR	5599810	Symbol	s0		5599581						
ANR	5599811	Symbol	monotonic_x		5599581						
ANR	5599812	Symbol	s1		5599581						
ANR	5599813	Symbol	NULL		5599581						
ANR	5599814	Symbol	alp		5599581						
ANR	5599815	Symbol	& alp -> fi		5599581						
ANR	5599816	Symbol	* ll		5599581						
ANR	5599817	Symbol	alp -> fi . ly0		5599581						
ANR	5599818	Symbol	false		5599581						
ANR	5599819	Symbol	alp -> fi . ly1		5599581						
ANR	5599820	Symbol	ll -> fo		5599581						
ANR	5599821	Symbol	* fi		5599581						
ANR	5599822	Symbol	* alp		5599581						
ANR	5599823	Symbol	gs_error_VMerror		5599581						
ANR	5599824	Symbol	alp -> more_flattened		5599581						
ANR	5599825	Symbol	make_al		5599581						
ANR	5599826	Function	add_y_line	852:0:32606:32778							
ANR	5599827	FunctionDef	"add_y_line (const segment * prev_lp , const segment * lp , int dir , line_list * ll)"		5599826	0					
ANR	5599828	CompoundStatement		854:0:32704:32778	5599826	0					
ANR	5599829	ReturnStatement	"return add_y_line_aux ( prev_lp , lp , & lp -> pt , & prev_lp -> pt , dir , ll ) ;"	855:4:32710:32776	5599826	0	True				
ANR	5599830	CallExpression	"add_y_line_aux ( prev_lp , lp , & lp -> pt , & prev_lp -> pt , dir , ll )"		5599826	0					
ANR	5599831	Callee	add_y_line_aux		5599826	0					
ANR	5599832	Identifier	add_y_line_aux		5599826	0					
ANR	5599833	ArgumentList	prev_lp		5599826	1					
ANR	5599834	Argument	prev_lp		5599826	0					
ANR	5599835	Identifier	prev_lp		5599826	0					
ANR	5599836	Argument	lp		5599826	1					
ANR	5599837	Identifier	lp		5599826	0					
ANR	5599838	Argument	& lp -> pt		5599826	2					
ANR	5599839	UnaryOperationExpression	& lp -> pt		5599826	0					
ANR	5599840	UnaryOperator	&		5599826	0					
ANR	5599841	PtrMemberAccess	lp -> pt		5599826	1					
ANR	5599842	Identifier	lp		5599826	0					
ANR	5599843	Identifier	pt		5599826	1					
ANR	5599844	Argument	& prev_lp -> pt		5599826	3					
ANR	5599845	UnaryOperationExpression	& prev_lp -> pt		5599826	0					
ANR	5599846	UnaryOperator	&		5599826	0					
ANR	5599847	PtrMemberAccess	prev_lp -> pt		5599826	1					
ANR	5599848	Identifier	prev_lp		5599826	0					
ANR	5599849	Identifier	pt		5599826	1					
ANR	5599850	Argument	dir		5599826	4					
ANR	5599851	Identifier	dir		5599826	0					
ANR	5599852	Argument	ll		5599826	5					
ANR	5599853	Identifier	ll		5599826	0					
ANR	5599854	ReturnType	static inline int		5599826	1					
ANR	5599855	Identifier	add_y_line		5599826	2					
ANR	5599856	ParameterList	"const segment * prev_lp , const segment * lp , int dir , line_list * ll"		5599826	3					
ANR	5599857	Parameter	const segment * prev_lp	853:11:32635:32657	5599826	0	True				
ANR	5599858	ParameterType	const segment *		5599826	0					
ANR	5599859	Identifier	prev_lp		5599826	1					
ANR	5599860	Parameter	const segment * lp	853:36:32660:32677	5599826	1	True				
ANR	5599861	ParameterType	const segment *		5599826	0					
ANR	5599862	Identifier	lp		5599826	1					
ANR	5599863	Parameter	int dir	853:56:32680:32686	5599826	2	True				
ANR	5599864	ParameterType	int		5599826	0					
ANR	5599865	Identifier	dir		5599826	1					
ANR	5599866	Parameter	line_list * ll	853:65:32689:32701	5599826	3	True				
ANR	5599867	ParameterType	line_list *		5599826	0					
ANR	5599868	Identifier	ll		5599826	1					
ANR	5599869	CFGEntryNode	ENTRY		5599826		True				
ANR	5599870	CFGExitNode	EXIT		5599826		True				
ANR	5599871	Symbol	ll		5599826						
ANR	5599872	Symbol	lp		5599826						
ANR	5599873	Symbol	& prev_lp -> pt		5599826						
ANR	5599874	Symbol	prev_lp		5599826						
ANR	5599875	Symbol	add_y_line_aux		5599826						
ANR	5599876	Symbol	dir		5599826						
ANR	5599877	Symbol	& lp -> pt		5599826						
ANR	5599878	Function	start_al_pair	858:0:32781:33407							
ANR	5599879	FunctionDef	"start_al_pair (line_list * ll , contour_cursor * q , contour_cursor * p)"		5599878	0					
ANR	5599880	CompoundStatement		860:0:32866:33407	5599878	0					
ANR	5599881	IdentifierDeclStatement	int code ;	861:4:32872:32880	5599878	0	True				
ANR	5599882	IdentifierDecl	code		5599878	0					
ANR	5599883	IdentifierDeclType	int		5599878	0					
ANR	5599884	Identifier	code		5599878	1					
ANR	5599885	IfStatement	if ( q -> monotonic_y )		5599878	1					
ANR	5599886	Condition	q -> monotonic_y	863:8:32891:32904	5599878	0	True				
ANR	5599887	PtrMemberAccess	q -> monotonic_y		5599878	0					
ANR	5599888	Identifier	q		5599878	0					
ANR	5599889	Identifier	monotonic_y		5599878	1					
ANR	5599890	ExpressionStatement	"code = add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"	864:8:32915:32964	5599878	1	True				
ANR	5599891	AssignmentExpression	"code = add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"		5599878	0		=			
ANR	5599892	Identifier	code		5599878	0					
ANR	5599893	CallExpression	"add_y_line ( q -> prev , q -> pseg , DIR_DOWN , ll )"		5599878	1					
ANR	5599894	Callee	add_y_line		5599878	0					
ANR	5599895	Identifier	add_y_line		5599878	0					
ANR	5599896	ArgumentList	q -> prev		5599878	1					
ANR	5599897	Argument	q -> prev		5599878	0					
ANR	5599898	PtrMemberAccess	q -> prev		5599878	0					
ANR	5599899	Identifier	q		5599878	0					
ANR	5599900	Identifier	prev		5599878	1					
ANR	5599901	Argument	q -> pseg		5599878	1					
ANR	5599902	PtrMemberAccess	q -> pseg		5599878	0					
ANR	5599903	Identifier	q		5599878	0					
ANR	5599904	Identifier	pseg		5599878	1					
ANR	5599905	Argument	DIR_DOWN		5599878	2					
ANR	5599906	Identifier	DIR_DOWN		5599878	0					
ANR	5599907	Argument	ll		5599878	3					
ANR	5599908	Identifier	ll		5599878	0					
ANR	5599909	ElseStatement	else		5599878	0					
ANR	5599910	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"	866:8:32983:33118	5599878	0	True				
ANR	5599911	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"		5599878	0		=			
ANR	5599912	Identifier	code		5599878	0					
ANR	5599913	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , ! q -> first_flattened , false , q -> monotonic_x )"		5599878	1					
ANR	5599914	Callee	add_y_curve_part		5599878	0					
ANR	5599915	Identifier	add_y_curve_part		5599878	0					
ANR	5599916	ArgumentList	ll		5599878	1					
ANR	5599917	Argument	ll		5599878	0					
ANR	5599918	Identifier	ll		5599878	0					
ANR	5599919	Argument	q -> prev		5599878	1					
ANR	5599920	PtrMemberAccess	q -> prev		5599878	0					
ANR	5599921	Identifier	q		5599878	0					
ANR	5599922	Identifier	prev		5599878	1					
ANR	5599923	Argument	q -> pseg		5599878	2					
ANR	5599924	PtrMemberAccess	q -> pseg		5599878	0					
ANR	5599925	Identifier	q		5599878	0					
ANR	5599926	Identifier	pseg		5599878	1					
ANR	5599927	Argument	DIR_DOWN		5599878	3					
ANR	5599928	Identifier	DIR_DOWN		5599878	0					
ANR	5599929	Argument	& q -> fi		5599878	4					
ANR	5599930	UnaryOperationExpression	& q -> fi		5599878	0					
ANR	5599931	UnaryOperator	&		5599878	0					
ANR	5599932	PtrMemberAccess	q -> fi		5599878	1					
ANR	5599933	Identifier	q		5599878	0					
ANR	5599934	Identifier	fi		5599878	1					
ANR	5599935	Argument	! q -> first_flattened		5599878	5					
ANR	5599936	UnaryOperationExpression	! q -> first_flattened		5599878	0					
ANR	5599937	UnaryOperator	!		5599878	0					
ANR	5599938	PtrMemberAccess	q -> first_flattened		5599878	1					
ANR	5599939	Identifier	q		5599878	0					
ANR	5599940	Identifier	first_flattened		5599878	1					
ANR	5599941	Argument	false		5599878	6					
ANR	5599942	Identifier	false		5599878	0					
ANR	5599943	Argument	q -> monotonic_x		5599878	7					
ANR	5599944	PtrMemberAccess	q -> monotonic_x		5599878	0					
ANR	5599945	Identifier	q		5599878	0					
ANR	5599946	Identifier	monotonic_x		5599878	1					
ANR	5599947	IfStatement	if ( code < 0 )		5599878	2					
ANR	5599948	Condition	code < 0	868:8:33128:33135	5599878	0	True				
ANR	5599949	RelationalExpression	code < 0		5599878	0		<			
ANR	5599950	Identifier	code		5599878	0					
ANR	5599951	PrimaryExpression	0		5599878	1					
ANR	5599952	ReturnStatement	return code ;	869:8:33146:33157	5599878	1	True				
ANR	5599953	Identifier	code		5599878	0					
ANR	5599954	IfStatement	if ( p -> monotonic_y )		5599878	3					
ANR	5599955	Condition	p -> monotonic_y	870:8:33167:33180	5599878	0	True				
ANR	5599956	PtrMemberAccess	p -> monotonic_y		5599878	0					
ANR	5599957	Identifier	p		5599878	0					
ANR	5599958	Identifier	monotonic_y		5599878	1					
ANR	5599959	ExpressionStatement	"code = add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"	871:8:33191:33238	5599878	1	True				
ANR	5599960	AssignmentExpression	"code = add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"		5599878	0		=			
ANR	5599961	Identifier	code		5599878	0					
ANR	5599962	CallExpression	"add_y_line ( p -> prev , p -> pseg , DIR_UP , ll )"		5599878	1					
ANR	5599963	Callee	add_y_line		5599878	0					
ANR	5599964	Identifier	add_y_line		5599878	0					
ANR	5599965	ArgumentList	p -> prev		5599878	1					
ANR	5599966	Argument	p -> prev		5599878	0					
ANR	5599967	PtrMemberAccess	p -> prev		5599878	0					
ANR	5599968	Identifier	p		5599878	0					
ANR	5599969	Identifier	prev		5599878	1					
ANR	5599970	Argument	p -> pseg		5599878	1					
ANR	5599971	PtrMemberAccess	p -> pseg		5599878	0					
ANR	5599972	Identifier	p		5599878	0					
ANR	5599973	Identifier	pseg		5599878	1					
ANR	5599974	Argument	DIR_UP		5599878	2					
ANR	5599975	Identifier	DIR_UP		5599878	0					
ANR	5599976	Argument	ll		5599878	3					
ANR	5599977	Identifier	ll		5599878	0					
ANR	5599978	ElseStatement	else		5599878	0					
ANR	5599979	ExpressionStatement	"code = add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"	873:8:33257:33388	5599878	0	True				
ANR	5599980	AssignmentExpression	"code = add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"		5599878	0		=			
ANR	5599981	Identifier	code		5599878	0					
ANR	5599982	CallExpression	"add_y_curve_part ( ll , p -> prev , p -> pseg , DIR_UP , & p -> fi , p -> more_flattened , false , p -> monotonic_x )"		5599878	1					
ANR	5599983	Callee	add_y_curve_part		5599878	0					
ANR	5599984	Identifier	add_y_curve_part		5599878	0					
ANR	5599985	ArgumentList	ll		5599878	1					
ANR	5599986	Argument	ll		5599878	0					
ANR	5599987	Identifier	ll		5599878	0					
ANR	5599988	Argument	p -> prev		5599878	1					
ANR	5599989	PtrMemberAccess	p -> prev		5599878	0					
ANR	5599990	Identifier	p		5599878	0					
ANR	5599991	Identifier	prev		5599878	1					
ANR	5599992	Argument	p -> pseg		5599878	2					
ANR	5599993	PtrMemberAccess	p -> pseg		5599878	0					
ANR	5599994	Identifier	p		5599878	0					
ANR	5599995	Identifier	pseg		5599878	1					
ANR	5599996	Argument	DIR_UP		5599878	3					
ANR	5599997	Identifier	DIR_UP		5599878	0					
ANR	5599998	Argument	& p -> fi		5599878	4					
ANR	5599999	UnaryOperationExpression	& p -> fi		5599878	0					
ANR	5600000	UnaryOperator	&		5599878	0					
ANR	5600001	PtrMemberAccess	p -> fi		5599878	1					
ANR	5600002	Identifier	p		5599878	0					
ANR	5600003	Identifier	fi		5599878	1					
ANR	5600004	Argument	p -> more_flattened		5599878	5					
ANR	5600005	PtrMemberAccess	p -> more_flattened		5599878	0					
ANR	5600006	Identifier	p		5599878	0					
ANR	5600007	Identifier	more_flattened		5599878	1					
ANR	5600008	Argument	false		5599878	6					
ANR	5600009	Identifier	false		5599878	0					
ANR	5600010	Argument	p -> monotonic_x		5599878	7					
ANR	5600011	PtrMemberAccess	p -> monotonic_x		5599878	0					
ANR	5600012	Identifier	p		5599878	0					
ANR	5600013	Identifier	monotonic_x		5599878	1					
ANR	5600014	ReturnStatement	return code ;	875:4:33394:33405	5599878	4	True				
ANR	5600015	Identifier	code		5599878	0					
ANR	5600016	ReturnType	static inline int		5599878	1					
ANR	5600017	Identifier	start_al_pair		5599878	2					
ANR	5600018	ParameterList	"line_list * ll , contour_cursor * q , contour_cursor * p"		5599878	3					
ANR	5600019	Parameter	line_list * ll	859:14:32813:32825	5599878	0	True				
ANR	5600020	ParameterType	line_list *		5599878	0					
ANR	5600021	Identifier	ll		5599878	1					
ANR	5600022	Parameter	contour_cursor * q	859:29:32828:32844	5599878	1	True				
ANR	5600023	ParameterType	contour_cursor *		5599878	0					
ANR	5600024	Identifier	q		5599878	1					
ANR	5600025	Parameter	contour_cursor * p	859:48:32847:32863	5599878	2	True				
ANR	5600026	ParameterType	contour_cursor *		5599878	0					
ANR	5600027	Identifier	p		5599878	1					
ANR	5600028	CFGEntryNode	ENTRY		5599878		True				
ANR	5600029	CFGExitNode	EXIT		5599878		True				
ANR	5600030	Symbol	ll		5599878						
ANR	5600031	Symbol	p -> prev		5599878						
ANR	5600032	Symbol	code		5599878						
ANR	5600033	Symbol	q -> prev		5599878						
ANR	5600034	Symbol	add_y_line		5599878						
ANR	5600035	Symbol	q -> first_flattened		5599878						
ANR	5600036	Symbol	p -> more_flattened		5599878						
ANR	5600037	Symbol	false		5599878						
ANR	5600038	Symbol	& q -> fi		5599878						
ANR	5600039	Symbol	add_y_curve_part		5599878						
ANR	5600040	Symbol	DIR_DOWN		5599878						
ANR	5600041	Symbol	p -> monotonic_y		5599878						
ANR	5600042	Symbol	p -> monotonic_x		5599878						
ANR	5600043	Symbol	p		5599878						
ANR	5600044	Symbol	q		5599878						
ANR	5600045	Symbol	& p -> fi		5599878						
ANR	5600046	Symbol	q -> pseg		5599878						
ANR	5600047	Symbol	p -> pseg		5599878						
ANR	5600048	Symbol	q -> monotonic_x		5599878						
ANR	5600049	Symbol	DIR_UP		5599878						
ANR	5600050	Symbol	* p		5599878						
ANR	5600051	Symbol	* q		5599878						
ANR	5600052	Symbol	q -> monotonic_y		5599878						
ANR	5600053	Function	start_al_pair_from_min	879:0:33485:35476							
ANR	5600054	FunctionDef	"start_al_pair_from_min (line_list * ll , contour_cursor * q)"		5600053	0					
ANR	5600055	CompoundStatement		881:0:33553:35476	5600053	0					
ANR	5600056	IdentifierDeclStatement	"int dir , code ;"	882:4:33559:33572	5600053	0	True				
ANR	5600057	IdentifierDecl	dir		5600053	0					
ANR	5600058	IdentifierDeclType	int		5600053	0					
ANR	5600059	Identifier	dir		5600053	1					
ANR	5600060	IdentifierDecl	code		5600053	1					
ANR	5600061	IdentifierDeclType	int		5600053	0					
ANR	5600062	Identifier	code		5600053	1					
ANR	5600063	Statement	const	883:4:33578:33582	5600053	1	True				
ANR	5600064	Statement	fill_options	883:10:33584:33595	5600053	2	True				
ANR	5600065	Statement	*	883:23:33597:33597	5600053	3	True				
ANR	5600066	Statement	const	883:25:33599:33603	5600053	4	True				
ANR	5600067	ExpressionStatement	fo = ll -> fo	883:31:33605:33616	5600053	5	True				
ANR	5600068	AssignmentExpression	fo = ll -> fo		5600053	0		=			
ANR	5600069	Identifier	fo		5600053	0					
ANR	5600070	PtrMemberAccess	ll -> fo		5600053	1					
ANR	5600071	Identifier	ll		5600053	0					
ANR	5600072	Identifier	fo		5600053	1					
ANR	5600073	DoStatement	do		5600053	6					
ANR	5600074	CompoundStatement		6:7:131:131	5600053	0					
ANR	5600075	ExpressionStatement	code = gx_flattened_iterator__next ( & q -> fi )	887:8:33695:33737	5600053	0	True				
ANR	5600076	AssignmentExpression	code = gx_flattened_iterator__next ( & q -> fi )		5600053	0		=			
ANR	5600077	Identifier	code		5600053	0					
ANR	5600078	CallExpression	gx_flattened_iterator__next ( & q -> fi )		5600053	1					
ANR	5600079	Callee	gx_flattened_iterator__next		5600053	0					
ANR	5600080	Identifier	gx_flattened_iterator__next		5600053	0					
ANR	5600081	ArgumentList	& q -> fi		5600053	1					
ANR	5600082	Argument	& q -> fi		5600053	0					
ANR	5600083	UnaryOperationExpression	& q -> fi		5600053	0					
ANR	5600084	UnaryOperator	&		5600053	0					
ANR	5600085	PtrMemberAccess	q -> fi		5600053	1					
ANR	5600086	Identifier	q		5600053	0					
ANR	5600087	Identifier	fi		5600053	1					
ANR	5600088	IfStatement	if ( code < 0 )		5600053	1					
ANR	5600089	Condition	code < 0	888:12:33751:33758	5600053	0	True				
ANR	5600090	RelationalExpression	code < 0		5600053	0		<			
ANR	5600091	Identifier	code		5600053	0					
ANR	5600092	PrimaryExpression	0		5600053	1					
ANR	5600093	ReturnStatement	return code ;	889:12:33773:33784	5600053	1	True				
ANR	5600094	Identifier	code		5600053	0					
ANR	5600095	ExpressionStatement	q -> more_flattened = code	890:8:33794:33818	5600053	2	True				
ANR	5600096	AssignmentExpression	q -> more_flattened = code		5600053	0		=			
ANR	5600097	PtrMemberAccess	q -> more_flattened		5600053	0					
ANR	5600098	Identifier	q		5600053	0					
ANR	5600099	Identifier	more_flattened		5600053	1					
ANR	5600100	Identifier	code		5600053	1					
ANR	5600101	ExpressionStatement	"dir = compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"	891:8:33828:33871	5600053	3	True				
ANR	5600102	AssignmentExpression	"dir = compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"		5600053	0		=			
ANR	5600103	Identifier	dir		5600053	0					
ANR	5600104	CallExpression	"compute_dir ( fo , q -> fi . ly0 , q -> fi . ly1 )"		5600053	1					
ANR	5600105	Callee	compute_dir		5600053	0					
ANR	5600106	Identifier	compute_dir		5600053	0					
ANR	5600107	ArgumentList	fo		5600053	1					
ANR	5600108	Argument	fo		5600053	0					
ANR	5600109	Identifier	fo		5600053	0					
ANR	5600110	Argument	q -> fi . ly0		5600053	1					
ANR	5600111	MemberAccess	q -> fi . ly0		5600053	0					
ANR	5600112	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600113	Identifier	q		5600053	0					
ANR	5600114	Identifier	fi		5600053	1					
ANR	5600115	Identifier	ly0		5600053	1					
ANR	5600116	Argument	q -> fi . ly1		5600053	2					
ANR	5600117	MemberAccess	q -> fi . ly1		5600053	0					
ANR	5600118	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600119	Identifier	q		5600053	0					
ANR	5600120	Identifier	fi		5600053	1					
ANR	5600121	Identifier	ly1		5600053	1					
ANR	5600122	IfStatement	if ( q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0 )		5600053	4					
ANR	5600123	Condition	q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0	892:12:33885:33930	5600053	0	True				
ANR	5600124	AndExpression	q -> fi . ly0 > fo -> ymax && ll -> y_break > q -> fi . y0		5600053	0		&&			
ANR	5600125	RelationalExpression	q -> fi . ly0 > fo -> ymax		5600053	0		>			
ANR	5600126	MemberAccess	q -> fi . ly0		5600053	0					
ANR	5600127	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600128	Identifier	q		5600053	0					
ANR	5600129	Identifier	fi		5600053	1					
ANR	5600130	Identifier	ly0		5600053	1					
ANR	5600131	PtrMemberAccess	fo -> ymax		5600053	1					
ANR	5600132	Identifier	fo		5600053	0					
ANR	5600133	Identifier	ymax		5600053	1					
ANR	5600134	RelationalExpression	ll -> y_break > q -> fi . y0		5600053	1		>			
ANR	5600135	PtrMemberAccess	ll -> y_break		5600053	0					
ANR	5600136	Identifier	ll		5600053	0					
ANR	5600137	Identifier	y_break		5600053	1					
ANR	5600138	MemberAccess	q -> fi . y0		5600053	1					
ANR	5600139	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600140	Identifier	q		5600053	0					
ANR	5600141	Identifier	fi		5600053	1					
ANR	5600142	Identifier	y0		5600053	1					
ANR	5600143	ExpressionStatement	ll -> y_break = q -> fi . ly0	893:12:33945:33968	5600053	1	True				
ANR	5600144	AssignmentExpression	ll -> y_break = q -> fi . ly0		5600053	0		=			
ANR	5600145	PtrMemberAccess	ll -> y_break		5600053	0					
ANR	5600146	Identifier	ll		5600053	0					
ANR	5600147	Identifier	y_break		5600053	1					
ANR	5600148	MemberAccess	q -> fi . ly0		5600053	1					
ANR	5600149	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600150	Identifier	q		5600053	0					
ANR	5600151	Identifier	fi		5600053	1					
ANR	5600152	Identifier	ly0		5600053	1					
ANR	5600153	IfStatement	if ( q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1 )		5600053	5					
ANR	5600154	Condition	q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1	894:12:33982:34028	5600053	0	True				
ANR	5600155	AndExpression	q -> fi . ly1 > fo -> ymax && ll -> y_break > q -> fi . ly1		5600053	0		&&			
ANR	5600156	RelationalExpression	q -> fi . ly1 > fo -> ymax		5600053	0		>			
ANR	5600157	MemberAccess	q -> fi . ly1		5600053	0					
ANR	5600158	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600159	Identifier	q		5600053	0					
ANR	5600160	Identifier	fi		5600053	1					
ANR	5600161	Identifier	ly1		5600053	1					
ANR	5600162	PtrMemberAccess	fo -> ymax		5600053	1					
ANR	5600163	Identifier	fo		5600053	0					
ANR	5600164	Identifier	ymax		5600053	1					
ANR	5600165	RelationalExpression	ll -> y_break > q -> fi . ly1		5600053	1		>			
ANR	5600166	PtrMemberAccess	ll -> y_break		5600053	0					
ANR	5600167	Identifier	ll		5600053	0					
ANR	5600168	Identifier	y_break		5600053	1					
ANR	5600169	MemberAccess	q -> fi . ly1		5600053	1					
ANR	5600170	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600171	Identifier	q		5600053	0					
ANR	5600172	Identifier	fi		5600053	1					
ANR	5600173	Identifier	ly1		5600053	1					
ANR	5600174	ExpressionStatement	ll -> y_break = q -> fi . ly1	895:12:34043:34066	5600053	1	True				
ANR	5600175	AssignmentExpression	ll -> y_break = q -> fi . ly1		5600053	0		=			
ANR	5600176	PtrMemberAccess	ll -> y_break		5600053	0					
ANR	5600177	Identifier	ll		5600053	0					
ANR	5600178	Identifier	y_break		5600053	1					
ANR	5600179	MemberAccess	q -> fi . ly1		5600053	1					
ANR	5600180	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600181	Identifier	q		5600053	0					
ANR	5600182	Identifier	fi		5600053	1					
ANR	5600183	Identifier	ly1		5600053	1					
ANR	5600184	IfStatement	if ( q -> fi . ly0 >= fo -> ymin )		5600053	6					
ANR	5600185	Condition	q -> fi . ly0 >= fo -> ymin	896:12:34080:34100	5600053	0	True				
ANR	5600186	RelationalExpression	q -> fi . ly0 >= fo -> ymin		5600053	0		>=			
ANR	5600187	MemberAccess	q -> fi . ly0		5600053	0					
ANR	5600188	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600189	Identifier	q		5600053	0					
ANR	5600190	Identifier	fi		5600053	1					
ANR	5600191	Identifier	ly0		5600053	1					
ANR	5600192	PtrMemberAccess	fo -> ymin		5600053	1					
ANR	5600193	Identifier	fo		5600053	0					
ANR	5600194	Identifier	ymin		5600053	1					
ANR	5600195	CompoundStatement		16:35:549:549	5600053	1					
ANR	5600196	IfStatement	if ( dir == DIR_UP && ll -> main_dir == DIR_DOWN )		5600053	0					
ANR	5600197	Condition	dir == DIR_UP && ll -> main_dir == DIR_DOWN	897:16:34121:34161	5600053	0	True				
ANR	5600198	AndExpression	dir == DIR_UP && ll -> main_dir == DIR_DOWN		5600053	0		&&			
ANR	5600199	EqualityExpression	dir == DIR_UP		5600053	0		==			
ANR	5600200	Identifier	dir		5600053	0					
ANR	5600201	Identifier	DIR_UP		5600053	1					
ANR	5600202	EqualityExpression	ll -> main_dir == DIR_DOWN		5600053	1		==			
ANR	5600203	PtrMemberAccess	ll -> main_dir		5600053	0					
ANR	5600204	Identifier	ll		5600053	0					
ANR	5600205	Identifier	main_dir		5600053	1					
ANR	5600206	Identifier	DIR_DOWN		5600053	1					
ANR	5600207	CompoundStatement		17:59:610:610	5600053	1					
ANR	5600208	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"	898:16:34182:34313	5600053	0	True				
ANR	5600209	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"		5600053	0		=			
ANR	5600210	Identifier	code		5600053	0					
ANR	5600211	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , true , q -> monotonic_x )"		5600053	1					
ANR	5600212	Callee	add_y_curve_part		5600053	0					
ANR	5600213	Identifier	add_y_curve_part		5600053	0					
ANR	5600214	ArgumentList	ll		5600053	1					
ANR	5600215	Argument	ll		5600053	0					
ANR	5600216	Identifier	ll		5600053	0					
ANR	5600217	Argument	q -> prev		5600053	1					
ANR	5600218	PtrMemberAccess	q -> prev		5600053	0					
ANR	5600219	Identifier	q		5600053	0					
ANR	5600220	Identifier	prev		5600053	1					
ANR	5600221	Argument	q -> pseg		5600053	2					
ANR	5600222	PtrMemberAccess	q -> pseg		5600053	0					
ANR	5600223	Identifier	q		5600053	0					
ANR	5600224	Identifier	pseg		5600053	1					
ANR	5600225	Argument	DIR_DOWN		5600053	3					
ANR	5600226	Identifier	DIR_DOWN		5600053	0					
ANR	5600227	Argument	& q -> fi		5600053	4					
ANR	5600228	UnaryOperationExpression	& q -> fi		5600053	0					
ANR	5600229	UnaryOperator	&		5600053	0					
ANR	5600230	PtrMemberAccess	q -> fi		5600053	1					
ANR	5600231	Identifier	q		5600053	0					
ANR	5600232	Identifier	fi		5600053	1					
ANR	5600233	Argument	true		5600053	5					
ANR	5600234	Identifier	true		5600053	0					
ANR	5600235	Argument	true		5600053	6					
ANR	5600236	Identifier	true		5600053	0					
ANR	5600237	Argument	q -> monotonic_x		5600053	7					
ANR	5600238	PtrMemberAccess	q -> monotonic_x		5600053	0					
ANR	5600239	Identifier	q		5600053	0					
ANR	5600240	Identifier	monotonic_x		5600053	1					
ANR	5600241	IfStatement	if ( code < 0 )		5600053	1					
ANR	5600242	Condition	code < 0	900:20:34335:34342	5600053	0	True				
ANR	5600243	RelationalExpression	code < 0		5600053	0		<			
ANR	5600244	Identifier	code		5600053	0					
ANR	5600245	PrimaryExpression	0		5600053	1					
ANR	5600246	ReturnStatement	return code ;	901:20:34365:34376	5600053	1	True				
ANR	5600247	Identifier	code		5600053	0					
ANR	5600248	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"	902:16:34394:34537	5600053	2	True				
ANR	5600249	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		5600053	0		=			
ANR	5600250	Identifier	code		5600053	0					
ANR	5600251	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		5600053	1					
ANR	5600252	Callee	add_y_curve_part		5600053	0					
ANR	5600253	Identifier	add_y_curve_part		5600053	0					
ANR	5600254	ArgumentList	ll		5600053	1					
ANR	5600255	Argument	ll		5600053	0					
ANR	5600256	Identifier	ll		5600053	0					
ANR	5600257	Argument	q -> prev		5600053	1					
ANR	5600258	PtrMemberAccess	q -> prev		5600053	0					
ANR	5600259	Identifier	q		5600053	0					
ANR	5600260	Identifier	prev		5600053	1					
ANR	5600261	Argument	q -> pseg		5600053	2					
ANR	5600262	PtrMemberAccess	q -> pseg		5600053	0					
ANR	5600263	Identifier	q		5600053	0					
ANR	5600264	Identifier	pseg		5600053	1					
ANR	5600265	Argument	DIR_UP		5600053	3					
ANR	5600266	Identifier	DIR_UP		5600053	0					
ANR	5600267	Argument	& q -> fi		5600053	4					
ANR	5600268	UnaryOperationExpression	& q -> fi		5600053	0					
ANR	5600269	UnaryOperator	&		5600053	0					
ANR	5600270	PtrMemberAccess	q -> fi		5600053	1					
ANR	5600271	Identifier	q		5600053	0					
ANR	5600272	Identifier	fi		5600053	1					
ANR	5600273	Argument	q -> more_flattened		5600053	5					
ANR	5600274	PtrMemberAccess	q -> more_flattened		5600053	0					
ANR	5600275	Identifier	q		5600053	0					
ANR	5600276	Identifier	more_flattened		5600053	1					
ANR	5600277	Argument	false		5600053	6					
ANR	5600278	Identifier	false		5600053	0					
ANR	5600279	Argument	q -> monotonic_x		5600053	7					
ANR	5600280	PtrMemberAccess	q -> monotonic_x		5600053	0					
ANR	5600281	Identifier	q		5600053	0					
ANR	5600282	Identifier	monotonic_x		5600053	1					
ANR	5600283	IfStatement	if ( code < 0 )		5600053	3					
ANR	5600284	Condition	code < 0	904:20:34559:34566	5600053	0	True				
ANR	5600285	RelationalExpression	code < 0		5600053	0		<			
ANR	5600286	Identifier	code		5600053	0					
ANR	5600287	PrimaryExpression	0		5600053	1					
ANR	5600288	ReturnStatement	return code ;	905:20:34589:34600	5600053	1	True				
ANR	5600289	Identifier	code		5600053	0					
ANR	5600290	ElseStatement	else		5600053	0					
ANR	5600291	IfStatement	if ( q -> fi . ly1 < fo -> ymin )		5600053	0					
ANR	5600292	Condition	q -> fi . ly1 < fo -> ymin	906:23:34625:34644	5600053	0	True				
ANR	5600293	RelationalExpression	q -> fi . ly1 < fo -> ymin		5600053	0		<			
ANR	5600294	MemberAccess	q -> fi . ly1		5600053	0					
ANR	5600295	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600296	Identifier	q		5600053	0					
ANR	5600297	Identifier	fi		5600053	1					
ANR	5600298	Identifier	ly1		5600053	1					
ANR	5600299	PtrMemberAccess	fo -> ymin		5600053	1					
ANR	5600300	Identifier	fo		5600053	0					
ANR	5600301	Identifier	ymin		5600053	1					
ANR	5600302	CompoundStatement		26:45:1093:1093	5600053	1					
ANR	5600303	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"	907:16:34665:34797	5600053	0	True				
ANR	5600304	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"		5600053	0		=			
ANR	5600305	Identifier	code		5600053	0					
ANR	5600306	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_DOWN , & q -> fi , true , false , q -> monotonic_x )"		5600053	1					
ANR	5600307	Callee	add_y_curve_part		5600053	0					
ANR	5600308	Identifier	add_y_curve_part		5600053	0					
ANR	5600309	ArgumentList	ll		5600053	1					
ANR	5600310	Argument	ll		5600053	0					
ANR	5600311	Identifier	ll		5600053	0					
ANR	5600312	Argument	q -> prev		5600053	1					
ANR	5600313	PtrMemberAccess	q -> prev		5600053	0					
ANR	5600314	Identifier	q		5600053	0					
ANR	5600315	Identifier	prev		5600053	1					
ANR	5600316	Argument	q -> pseg		5600053	2					
ANR	5600317	PtrMemberAccess	q -> pseg		5600053	0					
ANR	5600318	Identifier	q		5600053	0					
ANR	5600319	Identifier	pseg		5600053	1					
ANR	5600320	Argument	DIR_DOWN		5600053	3					
ANR	5600321	Identifier	DIR_DOWN		5600053	0					
ANR	5600322	Argument	& q -> fi		5600053	4					
ANR	5600323	UnaryOperationExpression	& q -> fi		5600053	0					
ANR	5600324	UnaryOperator	&		5600053	0					
ANR	5600325	PtrMemberAccess	q -> fi		5600053	1					
ANR	5600326	Identifier	q		5600053	0					
ANR	5600327	Identifier	fi		5600053	1					
ANR	5600328	Argument	true		5600053	5					
ANR	5600329	Identifier	true		5600053	0					
ANR	5600330	Argument	false		5600053	6					
ANR	5600331	Identifier	false		5600053	0					
ANR	5600332	Argument	q -> monotonic_x		5600053	7					
ANR	5600333	PtrMemberAccess	q -> monotonic_x		5600053	0					
ANR	5600334	Identifier	q		5600053	0					
ANR	5600335	Identifier	monotonic_x		5600053	1					
ANR	5600336	IfStatement	if ( code < 0 )		5600053	1					
ANR	5600337	Condition	code < 0	909:20:34819:34826	5600053	0	True				
ANR	5600338	RelationalExpression	code < 0		5600053	0		<			
ANR	5600339	Identifier	code		5600053	0					
ANR	5600340	PrimaryExpression	0		5600053	1					
ANR	5600341	ReturnStatement	return code ;	910:20:34849:34860	5600053	1	True				
ANR	5600342	Identifier	code		5600053	0					
ANR	5600343	ElseStatement	else		5600053	0					
ANR	5600344	IfStatement	if ( q -> fi . ly1 >= fo -> ymin )		5600053	0					
ANR	5600345	Condition	q -> fi . ly1 >= fo -> ymin	912:19:34895:34915	5600053	0	True				
ANR	5600346	RelationalExpression	q -> fi . ly1 >= fo -> ymin		5600053	0		>=			
ANR	5600347	MemberAccess	q -> fi . ly1		5600053	0					
ANR	5600348	PtrMemberAccess	q -> fi		5600053	0					
ANR	5600349	Identifier	q		5600053	0					
ANR	5600350	Identifier	fi		5600053	1					
ANR	5600351	Identifier	ly1		5600053	1					
ANR	5600352	PtrMemberAccess	fo -> ymin		5600053	1					
ANR	5600353	Identifier	fo		5600053	0					
ANR	5600354	Identifier	ymin		5600053	1					
ANR	5600355	CompoundStatement		32:42:1364:1364	5600053	1					
ANR	5600356	ExpressionStatement	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"	913:12:34932:35071	5600053	0	True				
ANR	5600357	AssignmentExpression	"code = add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		5600053	0		=			
ANR	5600358	Identifier	code		5600053	0					
ANR	5600359	CallExpression	"add_y_curve_part ( ll , q -> prev , q -> pseg , DIR_UP , & q -> fi , q -> more_flattened , false , q -> monotonic_x )"		5600053	1					
ANR	5600360	Callee	add_y_curve_part		5600053	0					
ANR	5600361	Identifier	add_y_curve_part		5600053	0					
ANR	5600362	ArgumentList	ll		5600053	1					
ANR	5600363	Argument	ll		5600053	0					
ANR	5600364	Identifier	ll		5600053	0					
ANR	5600365	Argument	q -> prev		5600053	1					
ANR	5600366	PtrMemberAccess	q -> prev		5600053	0					
ANR	5600367	Identifier	q		5600053	0					
ANR	5600368	Identifier	prev		5600053	1					
ANR	5600369	Argument	q -> pseg		5600053	2					
ANR	5600370	PtrMemberAccess	q -> pseg		5600053	0					
ANR	5600371	Identifier	q		5600053	0					
ANR	5600372	Identifier	pseg		5600053	1					
ANR	5600373	Argument	DIR_UP		5600053	3					
ANR	5600374	Identifier	DIR_UP		5600053	0					
ANR	5600375	Argument	& q -> fi		5600053	4					
ANR	5600376	UnaryOperationExpression	& q -> fi		5600053	0					
ANR	5600377	UnaryOperator	&		5600053	0					
ANR	5600378	PtrMemberAccess	q -> fi		5600053	1					
ANR	5600379	Identifier	q		5600053	0					
ANR	5600380	Identifier	fi		5600053	1					
ANR	5600381	Argument	q -> more_flattened		5600053	5					
ANR	5600382	PtrMemberAccess	q -> more_flattened		5600053	0					
ANR	5600383	Identifier	q		5600053	0					
ANR	5600384	Identifier	more_flattened		5600053	1					
ANR	5600385	Argument	false		5600053	6					
ANR	5600386	Identifier	false		5600053	0					
ANR	5600387	Argument	q -> monotonic_x		5600053	7					
ANR	5600388	PtrMemberAccess	q -> monotonic_x		5600053	0					
ANR	5600389	Identifier	q		5600053	0					
ANR	5600390	Identifier	monotonic_x		5600053	1					
ANR	5600391	IfStatement	if ( code < 0 )		5600053	1					
ANR	5600392	Condition	code < 0	915:16:35089:35096	5600053	0	True				
ANR	5600393	RelationalExpression	code < 0		5600053	0		<			
ANR	5600394	Identifier	code		5600053	0					
ANR	5600395	PrimaryExpression	0		5600053	1					
ANR	5600396	ReturnStatement	return code ;	916:16:35115:35126	5600053	1	True				
ANR	5600397	Identifier	code		5600053	0					
ANR	5600398	ExpressionStatement	q -> first_flattened = false	918:8:35146:35172	5600053	7	True				
ANR	5600399	AssignmentExpression	q -> first_flattened = false		5600053	0		=			
ANR	5600400	PtrMemberAccess	q -> first_flattened		5600053	0					
ANR	5600401	Identifier	q		5600053	0					
ANR	5600402	Identifier	first_flattened		5600053	1					
ANR	5600403	Identifier	false		5600053	1					
ANR	5600404	ExpressionStatement	q -> dir = dir	919:8:35182:35194	5600053	8	True				
ANR	5600405	AssignmentExpression	q -> dir = dir		5600053	0		=			
ANR	5600406	PtrMemberAccess	q -> dir		5600053	0					
ANR	5600407	Identifier	q		5600053	0					
ANR	5600408	Identifier	dir		5600053	1					
ANR	5600409	Identifier	dir		5600053	1					
ANR	5600410	IfStatement	if ( dir == DIR_DOWN || dir == DIR_UP )		5600053	9					
ANR	5600411	Condition	dir == DIR_DOWN || dir == DIR_UP	920:12:35208:35239	5600053	0	True				
ANR	5600412	OrExpression	dir == DIR_DOWN || dir == DIR_UP		5600053	0		||			
ANR	5600413	EqualityExpression	dir == DIR_DOWN		5600053	0		==			
ANR	5600414	Identifier	dir		5600053	0					
ANR	5600415	Identifier	DIR_DOWN		5600053	1					
ANR	5600416	EqualityExpression	dir == DIR_UP		5600053	1		==			
ANR	5600417	Identifier	dir		5600053	0					
ANR	5600418	Identifier	DIR_UP		5600053	1					
ANR	5600419	ExpressionStatement	ll -> main_dir = dir	921:12:35254:35272	5600053	1	True				
ANR	5600420	AssignmentExpression	ll -> main_dir = dir		5600053	0		=			
ANR	5600421	PtrMemberAccess	ll -> main_dir		5600053	0					
ANR	5600422	Identifier	ll		5600053	0					
ANR	5600423	Identifier	main_dir		5600053	1					
ANR	5600424	Identifier	dir		5600053	1					
ANR	5600425	Condition	q -> more_flattened	922:12:35286:35302	5600053	1	True				
ANR	5600426	PtrMemberAccess	q -> more_flattened		5600053	0					
ANR	5600427	Identifier	q		5600053	0					
ANR	5600428	Identifier	more_flattened		5600053	1					
ANR	5600429	ReturnStatement	return 0 ;	924:4:35350:35358	5600053	7	True				
ANR	5600430	PrimaryExpression	0		5600053	0					
ANR	5600431	ReturnType	static int		5600053	1					
ANR	5600432	Identifier	start_al_pair_from_min		5600053	2					
ANR	5600433	ParameterList	"line_list * ll , contour_cursor * q"		5600053	3					
ANR	5600434	Parameter	line_list * ll	880:23:33519:33531	5600053	0	True				
ANR	5600435	ParameterType	line_list *		5600053	0					
ANR	5600436	Identifier	ll		5600053	1					
ANR	5600437	Parameter	contour_cursor * q	880:38:33534:33550	5600053	1	True				
ANR	5600438	ParameterType	contour_cursor *		5600053	0					
ANR	5600439	Identifier	q		5600053	1					
ANR	5600440	CFGEntryNode	ENTRY		5600053		True				
ANR	5600441	CFGExitNode	EXIT		5600053		True				
ANR	5600442	Symbol	ll		5600053						
ANR	5600443	Symbol	code		5600053						
ANR	5600444	Symbol	q -> fi . y0		5600053						
ANR	5600445	Symbol	q -> prev		5600053						
ANR	5600446	Symbol	q -> first_flattened		5600053						
ANR	5600447	Symbol	fo		5600053						
ANR	5600448	Symbol	& q -> fi		5600053						
ANR	5600449	Symbol	add_y_curve_part		5600053						
ANR	5600450	Symbol	DIR_DOWN		5600053						
ANR	5600451	Symbol	dir		5600053						
ANR	5600452	Symbol	gx_flattened_iterator__next		5600053						
ANR	5600453	Symbol	compute_dir		5600053						
ANR	5600454	Symbol	ll -> y_break		5600053						
ANR	5600455	Symbol	q -> pseg		5600053						
ANR	5600456	Symbol	fo -> ymax		5600053						
ANR	5600457	Symbol	DIR_UP		5600053						
ANR	5600458	Symbol	q -> dir		5600053						
ANR	5600459	Symbol	fo -> ymin		5600053						
ANR	5600460	Symbol	* ll		5600053						
ANR	5600461	Symbol	false		5600053						
ANR	5600462	Symbol	ll -> fo		5600053						
ANR	5600463	Symbol	* fo		5600053						
ANR	5600464	Symbol	ll -> main_dir		5600053						
ANR	5600465	Symbol	q		5600053						
ANR	5600466	Symbol	q -> more_flattened		5600053						
ANR	5600467	Symbol	q -> fi		5600053						
ANR	5600468	Symbol	true		5600053						
ANR	5600469	Symbol	q -> monotonic_x		5600053						
ANR	5600470	Symbol	q -> fi . ly0		5600053						
ANR	5600471	Symbol	* q		5600053						
ANR	5600472	Symbol	q -> fi . ly1		5600053						
ANR	5600473	DeclStmt									
ANR	5600474	Decl							curve_segment	curve_segment *	s
ANR	5600475	DeclStmt									
ANR	5600476	Decl							fixed	fixed	ymin
ANR	5600477	DeclStmt									
ANR	5600478	Decl							fixed	fixed	ymax
ANR	5600479	DeclStmt									
ANR	5600480	Decl							bool	bool	in_band
ANR	5600481	DeclStmt									
ANR	5600482	Decl							curve_segment	curve_segment *	s
ANR	5600483	DeclStmt									
ANR	5600484	Decl							int	int	k
ANR	5600485	Function	scan_contour	962:0:36992:44782							
ANR	5600486	FunctionDef	"scan_contour (line_list * ll , segment * pfirst , segment * plast , segment * prev)"		5600485	0					
ANR	5600487	CompoundStatement		964:0:37079:44782	5600485	0					
ANR	5600488	IdentifierDeclStatement	"contour_cursor p , q ;"	965:4:37085:37104	5600485	0	True				
ANR	5600489	IdentifierDecl	p		5600485	0					
ANR	5600490	IdentifierDeclType	contour_cursor		5600485	0					
ANR	5600491	Identifier	p		5600485	1					
ANR	5600492	IdentifierDecl	q		5600485	1					
ANR	5600493	IdentifierDeclType	contour_cursor		5600485	0					
ANR	5600494	Identifier	q		5600485	1					
ANR	5600495	IdentifierDeclStatement	int code ;	966:4:37110:37118	5600485	1	True				
ANR	5600496	IdentifierDecl	code		5600485	0					
ANR	5600497	IdentifierDeclType	int		5600485	0					
ANR	5600498	Identifier	code		5600485	1					
ANR	5600499	IdentifierDeclStatement	"bool only_horizontal = true , saved = false ;"	967:4:37124:37166	5600485	2	True				
ANR	5600500	IdentifierDecl	only_horizontal = true		5600485	0					
ANR	5600501	IdentifierDeclType	bool		5600485	0					
ANR	5600502	Identifier	only_horizontal		5600485	1					
ANR	5600503	AssignmentExpression	only_horizontal = true		5600485	2		=			
ANR	5600504	Identifier	true		5600485	0					
ANR	5600505	Identifier	true		5600485	1					
ANR	5600506	IdentifierDecl	saved = false		5600485	1					
ANR	5600507	IdentifierDeclType	bool		5600485	0					
ANR	5600508	Identifier	saved		5600485	1					
ANR	5600509	AssignmentExpression	saved = false		5600485	2		=			
ANR	5600510	Identifier	false		5600485	0					
ANR	5600511	Identifier	false		5600485	1					
ANR	5600512	Statement	const	968:4:37172:37176	5600485	3	True				
ANR	5600513	Statement	fill_options	968:10:37178:37189	5600485	4	True				
ANR	5600514	Statement	*	968:23:37191:37191	5600485	5	True				
ANR	5600515	Statement	const	968:25:37193:37197	5600485	6	True				
ANR	5600516	ExpressionStatement	fo = ll -> fo	968:31:37199:37210	5600485	7	True				
ANR	5600517	AssignmentExpression	fo = ll -> fo		5600485	0		=			
ANR	5600518	Identifier	fo		5600485	0					
ANR	5600519	PtrMemberAccess	ll -> fo		5600485	1					
ANR	5600520	Identifier	ll		5600485	0					
ANR	5600521	Identifier	fo		5600485	1					
ANR	5600522	IdentifierDeclStatement	contour_cursor save_q ;	969:4:37216:37237	5600485	8	True				
ANR	5600523	IdentifierDecl	save_q		5600485	0					
ANR	5600524	IdentifierDeclType	contour_cursor		5600485	0					
ANR	5600525	Identifier	save_q		5600485	1					
ANR	5600526	ExpressionStatement	q . prev = prev	971:4:37244:37257	5600485	9	True				
ANR	5600527	AssignmentExpression	q . prev = prev		5600485	0		=			
ANR	5600528	MemberAccess	q . prev		5600485	0					
ANR	5600529	Identifier	q		5600485	0					
ANR	5600530	Identifier	prev		5600485	1					
ANR	5600531	Identifier	prev		5600485	1					
ANR	5600532	ExpressionStatement	q . pseg = plast	972:4:37263:37277	5600485	10	True				
ANR	5600533	AssignmentExpression	q . pseg = plast		5600485	0		=			
ANR	5600534	MemberAccess	q . pseg		5600485	0					
ANR	5600535	Identifier	q		5600485	0					
ANR	5600536	Identifier	pseg		5600485	1					
ANR	5600537	Identifier	plast		5600485	1					
ANR	5600538	ExpressionStatement	q . pfirst = pfirst	973:4:37283:37300	5600485	11	True				
ANR	5600539	AssignmentExpression	q . pfirst = pfirst		5600485	0		=			
ANR	5600540	MemberAccess	q . pfirst		5600485	0					
ANR	5600541	Identifier	q		5600485	0					
ANR	5600542	Identifier	pfirst		5600485	1					
ANR	5600543	Identifier	pfirst		5600485	1					
ANR	5600544	ExpressionStatement	q . plast = plast	974:4:37306:37321	5600485	12	True				
ANR	5600545	AssignmentExpression	q . plast = plast		5600485	0		=			
ANR	5600546	MemberAccess	q . plast		5600485	0					
ANR	5600547	Identifier	q		5600485	0					
ANR	5600548	Identifier	plast		5600485	1					
ANR	5600549	Identifier	plast		5600485	1					
ANR	5600550	ExpressionStatement	"memset ( & save_q , 0 , sizeof ( save_q ) )"	976:4:37328:37362	5600485	13	True				
ANR	5600551	CallExpression	"memset ( & save_q , 0 , sizeof ( save_q ) )"		5600485	0					
ANR	5600552	Callee	memset		5600485	0					
ANR	5600553	Identifier	memset		5600485	0					
ANR	5600554	ArgumentList	& save_q		5600485	1					
ANR	5600555	Argument	& save_q		5600485	0					
ANR	5600556	UnaryOperationExpression	& save_q		5600485	0					
ANR	5600557	UnaryOperator	&		5600485	0					
ANR	5600558	Identifier	save_q		5600485	1					
ANR	5600559	Argument	0		5600485	1					
ANR	5600560	PrimaryExpression	0		5600485	0					
ANR	5600561	Argument	sizeof ( save_q )		5600485	2					
ANR	5600562	SizeofExpression	sizeof ( save_q )		5600485	0					
ANR	5600563	Sizeof	sizeof		5600485	0					
ANR	5600564	SizeofOperand	save_q		5600485	1					
ANR	5600565	ExpressionStatement	p . monotonic_x = false	977:4:37393:37414	5600485	14	True				
ANR	5600566	AssignmentExpression	p . monotonic_x = false		5600485	0		=			
ANR	5600567	MemberAccess	p . monotonic_x		5600485	0					
ANR	5600568	Identifier	p		5600485	0					
ANR	5600569	Identifier	monotonic_x		5600485	1					
ANR	5600570	Identifier	false		5600485	1					
ANR	5600571	ExpressionStatement	q . monotonic_x = false	978:4:37445:37466	5600485	15	True				
ANR	5600572	AssignmentExpression	q . monotonic_x = false		5600485	0		=			
ANR	5600573	MemberAccess	q . monotonic_x		5600485	0					
ANR	5600574	Identifier	q		5600485	0					
ANR	5600575	Identifier	monotonic_x		5600485	1					
ANR	5600576	Identifier	false		5600485	1					
ANR	5600577	ExpressionStatement	save_q . dir = DIR_OUT_OF_Y_RANGE	985:4:37880:37911	5600485	16	True				
ANR	5600578	AssignmentExpression	save_q . dir = DIR_OUT_OF_Y_RANGE		5600485	0		=			
ANR	5600579	MemberAccess	save_q . dir		5600485	0					
ANR	5600580	Identifier	save_q		5600485	0					
ANR	5600581	Identifier	dir		5600485	1					
ANR	5600582	Identifier	DIR_OUT_OF_Y_RANGE		5600485	1					
ANR	5600583	ExpressionStatement	ll -> main_dir = DIR_HORIZONTAL	986:4:37917:37946	5600485	17	True				
ANR	5600584	AssignmentExpression	ll -> main_dir = DIR_HORIZONTAL		5600485	0		=			
ANR	5600585	PtrMemberAccess	ll -> main_dir		5600485	0					
ANR	5600586	Identifier	ll		5600485	0					
ANR	5600587	Identifier	main_dir		5600485	1					
ANR	5600588	Identifier	DIR_HORIZONTAL		5600485	1					
ANR	5600589	ForStatement	"for ( ; ; q . pseg = q . prev , q . prev = q . prev -> prev )"		5600485	18					
ANR	5600590	Expression	"q . pseg = q . prev , q . prev = q . prev -> prev"	987:13:37961:37998	5600485	0	True				
ANR	5600591	AssignmentExpression	q . pseg = q . prev		5600485	0		=			
ANR	5600592	MemberAccess	q . pseg		5600485	0					
ANR	5600593	Identifier	q		5600485	0					
ANR	5600594	Identifier	pseg		5600485	1					
ANR	5600595	MemberAccess	q . prev		5600485	1					
ANR	5600596	Identifier	q		5600485	0					
ANR	5600597	Identifier	prev		5600485	1					
ANR	5600598	AssignmentExpression	q . prev = q . prev -> prev		5600485	1		=			
ANR	5600599	MemberAccess	q . prev		5600485	0					
ANR	5600600	Identifier	q		5600485	0					
ANR	5600601	Identifier	prev		5600485	1					
ANR	5600602	PtrMemberAccess	q . prev -> prev		5600485	1					
ANR	5600603	MemberAccess	q . prev		5600485	0					
ANR	5600604	Identifier	q		5600485	0					
ANR	5600605	Identifier	prev		5600485	1					
ANR	5600606	Identifier	prev		5600485	1					
ANR	5600607	CompoundStatement		24:53:921:921	5600485	1					
ANR	5600608	ExpressionStatement	"code = init_contour_cursor ( fo , & q )"	989:8:38089:38123	5600485	0	True				
ANR	5600609	AssignmentExpression	"code = init_contour_cursor ( fo , & q )"		5600485	0		=			
ANR	5600610	Identifier	code		5600485	0					
ANR	5600611	CallExpression	"init_contour_cursor ( fo , & q )"		5600485	1					
ANR	5600612	Callee	init_contour_cursor		5600485	0					
ANR	5600613	Identifier	init_contour_cursor		5600485	0					
ANR	5600614	ArgumentList	fo		5600485	1					
ANR	5600615	Argument	fo		5600485	0					
ANR	5600616	Identifier	fo		5600485	0					
ANR	5600617	Argument	& q		5600485	1					
ANR	5600618	UnaryOperationExpression	& q		5600485	0					
ANR	5600619	UnaryOperator	&		5600485	0					
ANR	5600620	Identifier	q		5600485	1					
ANR	5600621	IfStatement	if ( code < 0 )		5600485	1					
ANR	5600622	Condition	code < 0	990:12:38137:38144	5600485	0	True				
ANR	5600623	RelationalExpression	code < 0		5600485	0		<			
ANR	5600624	Identifier	code		5600485	0					
ANR	5600625	PrimaryExpression	0		5600485	1					
ANR	5600626	ReturnStatement	return code ;	991:12:38159:38170	5600485	1	True				
ANR	5600627	Identifier	code		5600485	0					
ANR	5600628	ForStatement	for ( ; ; )		5600485	2					
ANR	5600629	CompoundStatement		29:17:1109:1109	5600485	0					
ANR	5600630	ExpressionStatement	code = gx_flattened_iterator__next ( & q . fi )	993:12:38203:38244	5600485	0	True				
ANR	5600631	AssignmentExpression	code = gx_flattened_iterator__next ( & q . fi )		5600485	0		=			
ANR	5600632	Identifier	code		5600485	0					
ANR	5600633	CallExpression	gx_flattened_iterator__next ( & q . fi )		5600485	1					
ANR	5600634	Callee	gx_flattened_iterator__next		5600485	0					
ANR	5600635	Identifier	gx_flattened_iterator__next		5600485	0					
ANR	5600636	ArgumentList	& q . fi		5600485	1					
ANR	5600637	Argument	& q . fi		5600485	0					
ANR	5600638	UnaryOperationExpression	& q . fi		5600485	0					
ANR	5600639	UnaryOperator	&		5600485	0					
ANR	5600640	MemberAccess	q . fi		5600485	1					
ANR	5600641	Identifier	q		5600485	0					
ANR	5600642	Identifier	fi		5600485	1					
ANR	5600643	ExpressionStatement	assert ( code >= 0 )	994:12:38258:38275	5600485	1	True				
ANR	5600644	CallExpression	assert ( code >= 0 )		5600485	0					
ANR	5600645	Callee	assert		5600485	0					
ANR	5600646	Identifier	assert		5600485	0					
ANR	5600647	ArgumentList	code >= 0		5600485	1					
ANR	5600648	Argument	code >= 0		5600485	0					
ANR	5600649	RelationalExpression	code >= 0		5600485	0		>=			
ANR	5600650	Identifier	code		5600485	0					
ANR	5600651	PrimaryExpression	0		5600485	1					
ANR	5600652	IfStatement	if ( code < 0 )		5600485	2					
ANR	5600653	Condition	code < 0	995:16:38327:38334	5600485	0	True				
ANR	5600654	RelationalExpression	code < 0		5600485	0		<			
ANR	5600655	Identifier	code		5600485	0					
ANR	5600656	PrimaryExpression	0		5600485	1					
ANR	5600657	ReturnStatement	return code ;	996:16:38353:38364	5600485	1	True				
ANR	5600658	Identifier	code		5600485	0					
ANR	5600659	ExpressionStatement	"q . dir = compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"	997:12:38378:38421	5600485	3	True				
ANR	5600660	AssignmentExpression	"q . dir = compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"		5600485	0		=			
ANR	5600661	MemberAccess	q . dir		5600485	0					
ANR	5600662	Identifier	q		5600485	0					
ANR	5600663	Identifier	dir		5600485	1					
ANR	5600664	CallExpression	"compute_dir ( fo , q . fi . ly0 , q . fi . ly1 )"		5600485	1					
ANR	5600665	Callee	compute_dir		5600485	0					
ANR	5600666	Identifier	compute_dir		5600485	0					
ANR	5600667	ArgumentList	fo		5600485	1					
ANR	5600668	Argument	fo		5600485	0					
ANR	5600669	Identifier	fo		5600485	0					
ANR	5600670	Argument	q . fi . ly0		5600485	1					
ANR	5600671	MemberAccess	q . fi . ly0		5600485	0					
ANR	5600672	MemberAccess	q . fi		5600485	0					
ANR	5600673	Identifier	q		5600485	0					
ANR	5600674	Identifier	fi		5600485	1					
ANR	5600675	Identifier	ly0		5600485	1					
ANR	5600676	Argument	q . fi . ly1		5600485	2					
ANR	5600677	MemberAccess	q . fi . ly1		5600485	0					
ANR	5600678	MemberAccess	q . fi		5600485	0					
ANR	5600679	Identifier	q		5600485	0					
ANR	5600680	Identifier	fi		5600485	1					
ANR	5600681	Identifier	ly1		5600485	1					
ANR	5600682	IfStatement	if ( q . dir == DIR_DOWN || q . dir == DIR_UP )		5600485	4					
ANR	5600683	Condition	q . dir == DIR_DOWN || q . dir == DIR_UP	998:16:38439:38474	5600485	0	True				
ANR	5600684	OrExpression	q . dir == DIR_DOWN || q . dir == DIR_UP		5600485	0		||			
ANR	5600685	EqualityExpression	q . dir == DIR_DOWN		5600485	0		==			
ANR	5600686	MemberAccess	q . dir		5600485	0					
ANR	5600687	Identifier	q		5600485	0					
ANR	5600688	Identifier	dir		5600485	1					
ANR	5600689	Identifier	DIR_DOWN		5600485	1					
ANR	5600690	EqualityExpression	q . dir == DIR_UP		5600485	1		==			
ANR	5600691	MemberAccess	q . dir		5600485	0					
ANR	5600692	Identifier	q		5600485	0					
ANR	5600693	Identifier	dir		5600485	1					
ANR	5600694	Identifier	DIR_UP		5600485	1					
ANR	5600695	ExpressionStatement	ll -> main_dir = q . dir	999:16:38493:38513	5600485	1	True				
ANR	5600696	AssignmentExpression	ll -> main_dir = q . dir		5600485	0		=			
ANR	5600697	PtrMemberAccess	ll -> main_dir		5600485	0					
ANR	5600698	Identifier	ll		5600485	0					
ANR	5600699	Identifier	main_dir		5600485	1					
ANR	5600700	MemberAccess	q . dir		5600485	1					
ANR	5600701	Identifier	q		5600485	0					
ANR	5600702	Identifier	dir		5600485	1					
ANR	5600703	IfStatement	if ( ! code )		5600485	5					
ANR	5600704	Condition	! code	1001:16:38611:38615	5600485	0	True				
ANR	5600705	UnaryOperationExpression	! code		5600485	0					
ANR	5600706	UnaryOperator	!		5600485	0					
ANR	5600707	Identifier	code		5600485	1					
ANR	5600708	BreakStatement	break ;	1002:16:38634:38639	5600485	1	True				
ANR	5600709	ExpressionStatement	q . first_flattened = false	1003:12:38653:38678	5600485	6	True				
ANR	5600710	AssignmentExpression	q . first_flattened = false		5600485	0		=			
ANR	5600711	MemberAccess	q . first_flattened		5600485	0					
ANR	5600712	Identifier	q		5600485	0					
ANR	5600713	Identifier	first_flattened		5600485	1					
ANR	5600714	Identifier	false		5600485	1					
ANR	5600715	ExpressionStatement	q . more_flattened = false	1006:8:38779:38803	5600485	3	True				
ANR	5600716	AssignmentExpression	q . more_flattened = false		5600485	0		=			
ANR	5600717	MemberAccess	q . more_flattened		5600485	0					
ANR	5600718	Identifier	q		5600485	0					
ANR	5600719	Identifier	more_flattened		5600485	1					
ANR	5600720	Identifier	false		5600485	1					
ANR	5600721	IfStatement	if ( ll -> main_dir != DIR_HORIZONTAL )		5600485	4					
ANR	5600722	Condition	ll -> main_dir != DIR_HORIZONTAL	1010:12:39019:39048	5600485	0	True				
ANR	5600723	EqualityExpression	ll -> main_dir != DIR_HORIZONTAL		5600485	0		!=			
ANR	5600724	PtrMemberAccess	ll -> main_dir		5600485	0					
ANR	5600725	Identifier	ll		5600485	0					
ANR	5600726	Identifier	main_dir		5600485	1					
ANR	5600727	Identifier	DIR_HORIZONTAL		5600485	1					
ANR	5600728	CompoundStatement		47:44:1971:1971	5600485	1					
ANR	5600729	ExpressionStatement	only_horizontal = false	1011:12:39065:39088	5600485	0	True				
ANR	5600730	AssignmentExpression	only_horizontal = false		5600485	0		=			
ANR	5600731	Identifier	only_horizontal		5600485	0					
ANR	5600732	Identifier	false		5600485	1					
ANR	5600733	BreakStatement	break ;	1013:12:39186:39191	5600485	1	True				
ANR	5600734	IfStatement	if ( ! saved && q . dir != DIR_OUT_OF_Y_RANGE )		5600485	5					
ANR	5600735	Condition	! saved && q . dir != DIR_OUT_OF_Y_RANGE	1018:12:39446:39482	5600485	0	True				
ANR	5600736	AndExpression	! saved && q . dir != DIR_OUT_OF_Y_RANGE		5600485	0		&&			
ANR	5600737	UnaryOperationExpression	! saved		5600485	0					
ANR	5600738	UnaryOperator	!		5600485	0					
ANR	5600739	Identifier	saved		5600485	1					
ANR	5600740	EqualityExpression	q . dir != DIR_OUT_OF_Y_RANGE		5600485	1		!=			
ANR	5600741	MemberAccess	q . dir		5600485	0					
ANR	5600742	Identifier	q		5600485	0					
ANR	5600743	Identifier	dir		5600485	1					
ANR	5600744	Identifier	DIR_OUT_OF_Y_RANGE		5600485	1					
ANR	5600745	CompoundStatement		55:51:2405:2405	5600485	1					
ANR	5600746	ExpressionStatement	save_q = q	1019:12:39499:39509	5600485	0	True				
ANR	5600747	AssignmentExpression	save_q = q		5600485	0		=			
ANR	5600748	Identifier	save_q		5600485	0					
ANR	5600749	Identifier	q		5600485	1					
ANR	5600750	ExpressionStatement	saved = true	1020:12:39523:39535	5600485	1	True				
ANR	5600751	AssignmentExpression	saved = true		5600485	0		=			
ANR	5600752	Identifier	saved		5600485	0					
ANR	5600753	Identifier	true		5600485	1					
ANR	5600754	IfStatement	if ( q . prev == q . pfirst )		5600485	6					
ANR	5600755	Condition	q . prev == q . pfirst	1022:12:39559:39576	5600485	0	True				
ANR	5600756	EqualityExpression	q . prev == q . pfirst		5600485	0		==			
ANR	5600757	MemberAccess	q . prev		5600485	0					
ANR	5600758	Identifier	q		5600485	0					
ANR	5600759	Identifier	prev		5600485	1					
ANR	5600760	MemberAccess	q . pfirst		5600485	1					
ANR	5600761	Identifier	q		5600485	0					
ANR	5600762	Identifier	pfirst		5600485	1					
ANR	5600763	BreakStatement	break ;	1023:12:39591:39596	5600485	1	True				
ANR	5600764	IfStatement	if ( saved )		5600485	19					
ANR	5600765	Condition	saved	1028:8:39781:39785	5600485	0	True				
ANR	5600766	Identifier	saved		5600485	0					
ANR	5600767	CompoundStatement		65:15:2708:2708	5600485	1					
ANR	5600768	ExpressionStatement	q = save_q	1029:8:39798:39808	5600485	0	True				
ANR	5600769	AssignmentExpression	q = save_q		5600485	0		=			
ANR	5600770	Identifier	q		5600485	0					
ANR	5600771	Identifier	save_q		5600485	1					
ANR	5600772	ForStatement	for ( p . prev = q . pfirst ; p . prev != q . plast ; p . prev = p . pseg )		5600485	20					
ANR	5600773	ForInit	p . prev = q . pfirst ;	1034:9:39978:39995	5600485	0	True				
ANR	5600774	AssignmentExpression	p . prev = q . pfirst		5600485	0		=			
ANR	5600775	MemberAccess	p . prev		5600485	0					
ANR	5600776	Identifier	p		5600485	0					
ANR	5600777	Identifier	prev		5600485	1					
ANR	5600778	MemberAccess	q . pfirst		5600485	1					
ANR	5600779	Identifier	q		5600485	0					
ANR	5600780	Identifier	pfirst		5600485	1					
ANR	5600781	Condition	p . prev != q . plast	1034:28:39997:40013	5600485	1	True				
ANR	5600782	EqualityExpression	p . prev != q . plast		5600485	0		!=			
ANR	5600783	MemberAccess	p . prev		5600485	0					
ANR	5600784	Identifier	p		5600485	0					
ANR	5600785	Identifier	prev		5600485	1					
ANR	5600786	MemberAccess	q . plast		5600485	1					
ANR	5600787	Identifier	q		5600485	0					
ANR	5600788	Identifier	plast		5600485	1					
ANR	5600789	AssignmentExpression	p . prev = p . pseg	1034:47:40016:40030	5600485	2	True	=			
ANR	5600790	MemberAccess	p . prev		5600485	0					
ANR	5600791	Identifier	p		5600485	0					
ANR	5600792	Identifier	prev		5600485	1					
ANR	5600793	MemberAccess	p . pseg		5600485	1					
ANR	5600794	Identifier	p		5600485	0					
ANR	5600795	Identifier	pseg		5600485	1					
ANR	5600796	CompoundStatement		72:8:2963:2973	5600485	3					
ANR	5600797	IdentifierDeclStatement	bool added ;	1035:8:40043:40053	5600485	0	True				
ANR	5600798	IdentifierDecl	added		5600485	0					
ANR	5600799	IdentifierDeclType	bool		5600485	0					
ANR	5600800	Identifier	added		5600485	1					
ANR	5600801	ExpressionStatement	p . pseg = p . prev -> next	1036:8:40063:40084	5600485	1	True				
ANR	5600802	AssignmentExpression	p . pseg = p . prev -> next		5600485	0		=			
ANR	5600803	MemberAccess	p . pseg		5600485	0					
ANR	5600804	Identifier	p		5600485	0					
ANR	5600805	Identifier	pseg		5600485	1					
ANR	5600806	PtrMemberAccess	p . prev -> next		5600485	1					
ANR	5600807	MemberAccess	p . prev		5600485	0					
ANR	5600808	Identifier	p		5600485	0					
ANR	5600809	Identifier	prev		5600485	1					
ANR	5600810	Identifier	next		5600485	1					
ANR	5600811	IfStatement	if ( ! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y )		5600485	2					
ANR	5600812	Condition	! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y	1038:12:40149:40267	5600485	0	True				
ANR	5600813	AndExpression	! only_horizontal && p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		5600485	0		&&			
ANR	5600814	UnaryOperationExpression	! only_horizontal		5600485	0					
ANR	5600815	UnaryOperator	!		5600485	0					
ANR	5600816	Identifier	only_horizontal		5600485	1					
ANR	5600817	AndExpression	p . pseg -> type != s_curve && p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		5600485	1		&&			
ANR	5600818	EqualityExpression	p . pseg -> type != s_curve		5600485	0		!=			
ANR	5600819	PtrMemberAccess	p . pseg -> type		5600485	0					
ANR	5600820	MemberAccess	p . pseg		5600485	0					
ANR	5600821	Identifier	p		5600485	0					
ANR	5600822	Identifier	pseg		5600485	1					
ANR	5600823	Identifier	type		5600485	1					
ANR	5600824	Identifier	s_curve		5600485	1					
ANR	5600825	AndExpression	p . prev -> pt . x == p . pseg -> pt . x && p . prev -> pt . y == p . pseg -> pt . y		5600485	1		&&			
ANR	5600826	EqualityExpression	p . prev -> pt . x == p . pseg -> pt . x		5600485	0		==			
ANR	5600827	MemberAccess	p . prev -> pt . x		5600485	0					
ANR	5600828	PtrMemberAccess	p . prev -> pt		5600485	0					
ANR	5600829	MemberAccess	p . prev		5600485	0					
ANR	5600830	Identifier	p		5600485	0					
ANR	5600831	Identifier	prev		5600485	1					
ANR	5600832	Identifier	pt		5600485	1					
ANR	5600833	Identifier	x		5600485	1					
ANR	5600834	MemberAccess	p . pseg -> pt . x		5600485	1					
ANR	5600835	PtrMemberAccess	p . pseg -> pt		5600485	0					
ANR	5600836	MemberAccess	p . pseg		5600485	0					
ANR	5600837	Identifier	p		5600485	0					
ANR	5600838	Identifier	pseg		5600485	1					
ANR	5600839	Identifier	pt		5600485	1					
ANR	5600840	Identifier	x		5600485	1					
ANR	5600841	EqualityExpression	p . prev -> pt . y == p . pseg -> pt . y		5600485	1		==			
ANR	5600842	MemberAccess	p . prev -> pt . y		5600485	0					
ANR	5600843	PtrMemberAccess	p . prev -> pt		5600485	0					
ANR	5600844	MemberAccess	p . prev		5600485	0					
ANR	5600845	Identifier	p		5600485	0					
ANR	5600846	Identifier	prev		5600485	1					
ANR	5600847	Identifier	pt		5600485	1					
ANR	5600848	Identifier	y		5600485	1					
ANR	5600849	MemberAccess	p . pseg -> pt . y		5600485	1					
ANR	5600850	PtrMemberAccess	p . pseg -> pt		5600485	0					
ANR	5600851	MemberAccess	p . pseg		5600485	0					
ANR	5600852	Identifier	p		5600485	0					
ANR	5600853	Identifier	pseg		5600485	1					
ANR	5600854	Identifier	pt		5600485	1					
ANR	5600855	Identifier	y		5600485	1					
ANR	5600856	ContinueStatement	continue ;	1040:12:40282:40290	5600485	1	True				
ANR	5600857	ExpressionStatement	"code = init_contour_cursor ( fo , & p )"	1043:8:40340:40374	5600485	3	True				
ANR	5600858	AssignmentExpression	"code = init_contour_cursor ( fo , & p )"		5600485	0		=			
ANR	5600859	Identifier	code		5600485	0					
ANR	5600860	CallExpression	"init_contour_cursor ( fo , & p )"		5600485	1					
ANR	5600861	Callee	init_contour_cursor		5600485	0					
ANR	5600862	Identifier	init_contour_cursor		5600485	0					
ANR	5600863	ArgumentList	fo		5600485	1					
ANR	5600864	Argument	fo		5600485	0					
ANR	5600865	Identifier	fo		5600485	0					
ANR	5600866	Argument	& p		5600485	1					
ANR	5600867	UnaryOperationExpression	& p		5600485	0					
ANR	5600868	UnaryOperator	&		5600485	0					
ANR	5600869	Identifier	p		5600485	1					
ANR	5600870	IfStatement	if ( code < 0 )		5600485	4					
ANR	5600871	Condition	code < 0	1044:12:40388:40395	5600485	0	True				
ANR	5600872	RelationalExpression	code < 0		5600485	0		<			
ANR	5600873	Identifier	code		5600485	0					
ANR	5600874	PrimaryExpression	0		5600485	1					
ANR	5600875	ReturnStatement	return code ;	1045:12:40410:40421	5600485	1	True				
ANR	5600876	Identifier	code		5600485	0					
ANR	5600877	DoStatement	do		5600485	5					
ANR	5600878	CompoundStatement		84:11:3355:3355	5600485	0					
ANR	5600879	DoStatement	do		5600485	0					
ANR	5600880	CompoundStatement		86:15:3443:3443	5600485	0					
ANR	5600881	ExpressionStatement	code = gx_flattened_iterator__next ( & p . fi )	1050:16:40541:40582	5600485	0	True				
ANR	5600882	AssignmentExpression	code = gx_flattened_iterator__next ( & p . fi )		5600485	0		=			
ANR	5600883	Identifier	code		5600485	0					
ANR	5600884	CallExpression	gx_flattened_iterator__next ( & p . fi )		5600485	1					
ANR	5600885	Callee	gx_flattened_iterator__next		5600485	0					
ANR	5600886	Identifier	gx_flattened_iterator__next		5600485	0					
ANR	5600887	ArgumentList	& p . fi		5600485	1					
ANR	5600888	Argument	& p . fi		5600485	0					
ANR	5600889	UnaryOperationExpression	& p . fi		5600485	0					
ANR	5600890	UnaryOperator	&		5600485	0					
ANR	5600891	MemberAccess	p . fi		5600485	1					
ANR	5600892	Identifier	p		5600485	0					
ANR	5600893	Identifier	fi		5600485	1					
ANR	5600894	ExpressionStatement	assert ( code >= 0 )	1051:16:40600:40617	5600485	1	True				
ANR	5600895	CallExpression	assert ( code >= 0 )		5600485	0					
ANR	5600896	Callee	assert		5600485	0					
ANR	5600897	Identifier	assert		5600485	0					
ANR	5600898	ArgumentList	code >= 0		5600485	1					
ANR	5600899	Argument	code >= 0		5600485	0					
ANR	5600900	RelationalExpression	code >= 0		5600485	0		>=			
ANR	5600901	Identifier	code		5600485	0					
ANR	5600902	PrimaryExpression	0		5600485	1					
ANR	5600903	IfStatement	if ( code < 0 )		5600485	2					
ANR	5600904	Condition	code < 0	1052:20:40673:40680	5600485	0	True				
ANR	5600905	RelationalExpression	code < 0		5600485	0		<			
ANR	5600906	Identifier	code		5600485	0					
ANR	5600907	PrimaryExpression	0		5600485	1					
ANR	5600908	ReturnStatement	return code ;	1053:20:40703:40714	5600485	1	True				
ANR	5600909	Identifier	code		5600485	0					
ANR	5600910	ExpressionStatement	p . more_flattened = code	1054:16:40732:40755	5600485	3	True				
ANR	5600911	AssignmentExpression	p . more_flattened = code		5600485	0		=			
ANR	5600912	MemberAccess	p . more_flattened		5600485	0					
ANR	5600913	Identifier	p		5600485	0					
ANR	5600914	Identifier	more_flattened		5600485	1					
ANR	5600915	Identifier	code		5600485	1					
ANR	5600916	ExpressionStatement	"p . dir = compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"	1055:16:40773:40816	5600485	4	True				
ANR	5600917	AssignmentExpression	"p . dir = compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"		5600485	0		=			
ANR	5600918	MemberAccess	p . dir		5600485	0					
ANR	5600919	Identifier	p		5600485	0					
ANR	5600920	Identifier	dir		5600485	1					
ANR	5600921	CallExpression	"compute_dir ( fo , p . fi . ly0 , p . fi . ly1 )"		5600485	1					
ANR	5600922	Callee	compute_dir		5600485	0					
ANR	5600923	Identifier	compute_dir		5600485	0					
ANR	5600924	ArgumentList	fo		5600485	1					
ANR	5600925	Argument	fo		5600485	0					
ANR	5600926	Identifier	fo		5600485	0					
ANR	5600927	Argument	p . fi . ly0		5600485	1					
ANR	5600928	MemberAccess	p . fi . ly0		5600485	0					
ANR	5600929	MemberAccess	p . fi		5600485	0					
ANR	5600930	Identifier	p		5600485	0					
ANR	5600931	Identifier	fi		5600485	1					
ANR	5600932	Identifier	ly0		5600485	1					
ANR	5600933	Argument	p . fi . ly1		5600485	2					
ANR	5600934	MemberAccess	p . fi . ly1		5600485	0					
ANR	5600935	MemberAccess	p . fi		5600485	0					
ANR	5600936	Identifier	p		5600485	0					
ANR	5600937	Identifier	fi		5600485	1					
ANR	5600938	Identifier	ly1		5600485	1					
ANR	5600939	Condition	p . more_flattened && p . dir == DIR_OUT_OF_Y_RANGE	1056:21:40839:40885	5600485	1	True				
ANR	5600940	AndExpression	p . more_flattened && p . dir == DIR_OUT_OF_Y_RANGE		5600485	0		&&			
ANR	5600941	MemberAccess	p . more_flattened		5600485	0					
ANR	5600942	Identifier	p		5600485	0					
ANR	5600943	Identifier	more_flattened		5600485	1					
ANR	5600944	EqualityExpression	p . dir == DIR_OUT_OF_Y_RANGE		5600485	1		==			
ANR	5600945	MemberAccess	p . dir		5600485	0					
ANR	5600946	Identifier	p		5600485	0					
ANR	5600947	Identifier	dir		5600485	1					
ANR	5600948	Identifier	DIR_OUT_OF_Y_RANGE		5600485	1					
ANR	5600949	IfStatement	if ( p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0 )		5600485	1					
ANR	5600950	Condition	p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0	1062:16:41158:41202	5600485	0	True				
ANR	5600951	AndExpression	p . fi . ly0 > fo -> ymax && ll -> y_break > p . fi . ly0		5600485	0		&&			
ANR	5600952	RelationalExpression	p . fi . ly0 > fo -> ymax		5600485	0		>			
ANR	5600953	MemberAccess	p . fi . ly0		5600485	0					
ANR	5600954	MemberAccess	p . fi		5600485	0					
ANR	5600955	Identifier	p		5600485	0					
ANR	5600956	Identifier	fi		5600485	1					
ANR	5600957	Identifier	ly0		5600485	1					
ANR	5600958	PtrMemberAccess	fo -> ymax		5600485	1					
ANR	5600959	Identifier	fo		5600485	0					
ANR	5600960	Identifier	ymax		5600485	1					
ANR	5600961	RelationalExpression	ll -> y_break > p . fi . ly0		5600485	1		>			
ANR	5600962	PtrMemberAccess	ll -> y_break		5600485	0					
ANR	5600963	Identifier	ll		5600485	0					
ANR	5600964	Identifier	y_break		5600485	1					
ANR	5600965	MemberAccess	p . fi . ly0		5600485	1					
ANR	5600966	MemberAccess	p . fi		5600485	0					
ANR	5600967	Identifier	p		5600485	0					
ANR	5600968	Identifier	fi		5600485	1					
ANR	5600969	Identifier	ly0		5600485	1					
ANR	5600970	ExpressionStatement	ll -> y_break = p . fi . ly0	1063:16:41221:41243	5600485	1	True				
ANR	5600971	AssignmentExpression	ll -> y_break = p . fi . ly0		5600485	0		=			
ANR	5600972	PtrMemberAccess	ll -> y_break		5600485	0					
ANR	5600973	Identifier	ll		5600485	0					
ANR	5600974	Identifier	y_break		5600485	1					
ANR	5600975	MemberAccess	p . fi . ly0		5600485	1					
ANR	5600976	MemberAccess	p . fi		5600485	0					
ANR	5600977	Identifier	p		5600485	0					
ANR	5600978	Identifier	fi		5600485	1					
ANR	5600979	Identifier	ly0		5600485	1					
ANR	5600980	IfStatement	if ( p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1 )		5600485	2					
ANR	5600981	Condition	p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1	1064:16:41261:41305	5600485	0	True				
ANR	5600982	AndExpression	p . fi . ly1 > fo -> ymax && ll -> y_break > p . fi . ly1		5600485	0		&&			
ANR	5600983	RelationalExpression	p . fi . ly1 > fo -> ymax		5600485	0		>			
ANR	5600984	MemberAccess	p . fi . ly1		5600485	0					
ANR	5600985	MemberAccess	p . fi		5600485	0					
ANR	5600986	Identifier	p		5600485	0					
ANR	5600987	Identifier	fi		5600485	1					
ANR	5600988	Identifier	ly1		5600485	1					
ANR	5600989	PtrMemberAccess	fo -> ymax		5600485	1					
ANR	5600990	Identifier	fo		5600485	0					
ANR	5600991	Identifier	ymax		5600485	1					
ANR	5600992	RelationalExpression	ll -> y_break > p . fi . ly1		5600485	1		>			
ANR	5600993	PtrMemberAccess	ll -> y_break		5600485	0					
ANR	5600994	Identifier	ll		5600485	0					
ANR	5600995	Identifier	y_break		5600485	1					
ANR	5600996	MemberAccess	p . fi . ly1		5600485	1					
ANR	5600997	MemberAccess	p . fi		5600485	0					
ANR	5600998	Identifier	p		5600485	0					
ANR	5600999	Identifier	fi		5600485	1					
ANR	5601000	Identifier	ly1		5600485	1					
ANR	5601001	ExpressionStatement	ll -> y_break = p . fi . ly1	1065:16:41324:41346	5600485	1	True				
ANR	5601002	AssignmentExpression	ll -> y_break = p . fi . ly1		5600485	0		=			
ANR	5601003	PtrMemberAccess	ll -> y_break		5600485	0					
ANR	5601004	Identifier	ll		5600485	0					
ANR	5601005	Identifier	y_break		5600485	1					
ANR	5601006	MemberAccess	p . fi . ly1		5600485	1					
ANR	5601007	MemberAccess	p . fi		5600485	0					
ANR	5601008	Identifier	p		5600485	0					
ANR	5601009	Identifier	fi		5600485	1					
ANR	5601010	Identifier	ly1		5600485	1					
ANR	5601011	ExpressionStatement	added = 0	1067:12:41361:41370	5600485	3	True				
ANR	5601012	AssignmentExpression	added = 0		5600485	0		=			
ANR	5601013	Identifier	added		5600485	0					
ANR	5601014	PrimaryExpression	0		5600485	1					
ANR	5601015	IfStatement	if ( p . dir == DIR_HORIZONTAL )		5600485	4					
ANR	5601016	Condition	p . dir == DIR_HORIZONTAL	1068:16:41388:41410	5600485	0	True				
ANR	5601017	EqualityExpression	p . dir == DIR_HORIZONTAL		5600485	0		==			
ANR	5601018	MemberAccess	p . dir		5600485	0					
ANR	5601019	Identifier	p		5600485	0					
ANR	5601020	Identifier	dir		5600485	1					
ANR	5601021	Identifier	DIR_HORIZONTAL		5600485	1					
ANR	5601022	CompoundStatement		105:41:4333:4333	5600485	1					
ANR	5601023	IfStatement	if ( p . monotonic_y )		5600485	0					
ANR	5601024	Condition	p . monotonic_y	1069:20:41435:41447	5600485	0	True				
ANR	5601025	MemberAccess	p . monotonic_y		5600485	0					
ANR	5601026	Identifier	p		5600485	0					
ANR	5601027	Identifier	monotonic_y		5600485	1					
ANR	5601028	CompoundStatement		106:35:4370:4370	5600485	1					
ANR	5601029	Statement	if	1070:20:41472:41473	5600485	0	True				
ANR	5601030	Statement	(	1070:23:41475:41475	5600485	1	True				
ANR	5601031	Statement	(	1072:24:41524:41524	5600485	2	True				
ANR	5601032	Statement	fo	1072:25:41525:41526	5600485	3	True				
ANR	5601033	Statement	->	1072:27:41527:41528	5600485	4	True				
ANR	5601034	Statement	adjust_below	1072:29:41529:41540	5600485	5	True				
ANR	5601035	Statement	|	1072:42:41542:41542	5600485	6	True				
ANR	5601036	Statement	fo	1072:44:41544:41545	5600485	7	True				
ANR	5601037	Statement	->	1072:46:41546:41547	5600485	8	True				
ANR	5601038	Statement	adjust_above	1072:48:41548:41559	5600485	9	True				
ANR	5601039	Statement	)	1072:60:41560:41560	5600485	10	True				
ANR	5601040	Statement	!=	1072:62:41562:41563	5600485	11	True				
ANR	5601041	Statement	0	1072:65:41565:41565	5600485	12	True				
ANR	5601042	Statement	)	1072:66:41566:41566	5600485	13	True				
ANR	5601043	CompoundStatement		109:68:4488:4488	5600485	14					
ANR	5601044	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"	1079:24:41952:42005	5600485	0	True				
ANR	5601045	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"		5600485	0		=			
ANR	5601046	Identifier	code		5600485	0					
ANR	5601047	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_HORIZONTAL , ll )"		5600485	1					
ANR	5601048	Callee	add_y_line		5600485	0					
ANR	5601049	Identifier	add_y_line		5600485	0					
ANR	5601050	ArgumentList	p . prev		5600485	1					
ANR	5601051	Argument	p . prev		5600485	0					
ANR	5601052	MemberAccess	p . prev		5600485	0					
ANR	5601053	Identifier	p		5600485	0					
ANR	5601054	Identifier	prev		5600485	1					
ANR	5601055	Argument	p . pseg		5600485	1					
ANR	5601056	MemberAccess	p . pseg		5600485	0					
ANR	5601057	Identifier	p		5600485	0					
ANR	5601058	Identifier	pseg		5600485	1					
ANR	5601059	Argument	DIR_HORIZONTAL		5600485	2					
ANR	5601060	Identifier	DIR_HORIZONTAL		5600485	0					
ANR	5601061	Argument	ll		5600485	3					
ANR	5601062	Identifier	ll		5600485	0					
ANR	5601063	IfStatement	if ( code < 0 )		5600485	1					
ANR	5601064	Condition	code < 0	1080:28:42035:42042	5600485	0	True				
ANR	5601065	RelationalExpression	code < 0		5600485	0		<			
ANR	5601066	Identifier	code		5600485	0					
ANR	5601067	PrimaryExpression	0		5600485	1					
ANR	5601068	ReturnStatement	return code ;	1081:28:42073:42084	5600485	1	True				
ANR	5601069	Identifier	code		5600485	0					
ANR	5601070	ExpressionStatement	added = 1	1082:24:42110:42119	5600485	2	True				
ANR	5601071	AssignmentExpression	added = 1		5600485	0		=			
ANR	5601072	Identifier	added		5600485	0					
ANR	5601073	PrimaryExpression	1		5600485	1					
ANR	5601074	ElseStatement	else		5600485	0					
ANR	5601075	CompoundStatement		122:19:5100:5100	5600485	0					
ANR	5601076	IfStatement	if ( p . fi . ly0 >= fo -> ymin )		5600485	0					
ANR	5601077	Condition	p . fi . ly0 >= fo -> ymin	1086:20:42202:42221	5600485	0	True				
ANR	5601078	RelationalExpression	p . fi . ly0 >= fo -> ymin		5600485	0		>=			
ANR	5601079	MemberAccess	p . fi . ly0		5600485	0					
ANR	5601080	MemberAccess	p . fi		5600485	0					
ANR	5601081	Identifier	p		5600485	0					
ANR	5601082	Identifier	fi		5600485	1					
ANR	5601083	Identifier	ly0		5600485	1					
ANR	5601084	PtrMemberAccess	fo -> ymin		5600485	1					
ANR	5601085	Identifier	fo		5600485	0					
ANR	5601086	Identifier	ymin		5600485	1					
ANR	5601087	CompoundStatement		124:16:5160:5160	5600485	1					
ANR	5601088	IfStatement	if ( p . dir == DIR_UP && ll -> main_dir == DIR_DOWN )		5600485	0					
ANR	5601089	Condition	p . dir == DIR_UP && ll -> main_dir == DIR_DOWN	1088:24:42266:42308	5600485	0	True				
ANR	5601090	AndExpression	p . dir == DIR_UP && ll -> main_dir == DIR_DOWN		5600485	0		&&			
ANR	5601091	EqualityExpression	p . dir == DIR_UP		5600485	0		==			
ANR	5601092	MemberAccess	p . dir		5600485	0					
ANR	5601093	Identifier	p		5600485	0					
ANR	5601094	Identifier	dir		5600485	1					
ANR	5601095	Identifier	DIR_UP		5600485	1					
ANR	5601096	EqualityExpression	ll -> main_dir == DIR_DOWN		5600485	1		==			
ANR	5601097	PtrMemberAccess	ll -> main_dir		5600485	0					
ANR	5601098	Identifier	ll		5600485	0					
ANR	5601099	Identifier	main_dir		5600485	1					
ANR	5601100	Identifier	DIR_DOWN		5600485	1					
ANR	5601101	CompoundStatement		125:69:5231:5231	5600485	1					
ANR	5601102	ExpressionStatement	"code = start_al_pair ( ll , & q , & p )"	1091:24:42530:42562	5600485	0	True				
ANR	5601103	AssignmentExpression	"code = start_al_pair ( ll , & q , & p )"		5600485	0		=			
ANR	5601104	Identifier	code		5600485	0					
ANR	5601105	CallExpression	"start_al_pair ( ll , & q , & p )"		5600485	1					
ANR	5601106	Callee	start_al_pair		5600485	0					
ANR	5601107	Identifier	start_al_pair		5600485	0					
ANR	5601108	ArgumentList	ll		5600485	1					
ANR	5601109	Argument	ll		5600485	0					
ANR	5601110	Identifier	ll		5600485	0					
ANR	5601111	Argument	& q		5600485	1					
ANR	5601112	UnaryOperationExpression	& q		5600485	0					
ANR	5601113	UnaryOperator	&		5600485	0					
ANR	5601114	Identifier	q		5600485	1					
ANR	5601115	Argument	& p		5600485	2					
ANR	5601116	UnaryOperationExpression	& p		5600485	0					
ANR	5601117	UnaryOperator	&		5600485	0					
ANR	5601118	Identifier	p		5600485	1					
ANR	5601119	IfStatement	if ( code < 0 )		5600485	1					
ANR	5601120	Condition	code < 0	1092:28:42592:42599	5600485	0	True				
ANR	5601121	RelationalExpression	code < 0		5600485	0		<			
ANR	5601122	Identifier	code		5600485	0					
ANR	5601123	PrimaryExpression	0		5600485	1					
ANR	5601124	ReturnStatement	return code ;	1093:28:42630:42641	5600485	1	True				
ANR	5601125	Identifier	code		5600485	0					
ANR	5601126	ExpressionStatement	added = 1	1094:24:42667:42676	5600485	2	True				
ANR	5601127	AssignmentExpression	added = 1		5600485	0		=			
ANR	5601128	Identifier	added		5600485	0					
ANR	5601129	PrimaryExpression	1		5600485	1					
ANR	5601130	ElseStatement	else		5600485	0					
ANR	5601131	IfStatement	if ( p . fi . ly1 < fo -> ymin )		5600485	0					
ANR	5601132	Condition	p . fi . ly1 < fo -> ymin	1095:31:42709:42727	5600485	0	True				
ANR	5601133	RelationalExpression	p . fi . ly1 < fo -> ymin		5600485	0		<			
ANR	5601134	MemberAccess	p . fi . ly1		5600485	0					
ANR	5601135	MemberAccess	p . fi		5600485	0					
ANR	5601136	Identifier	p		5600485	0					
ANR	5601137	Identifier	fi		5600485	1					
ANR	5601138	Identifier	ly1		5600485	1					
ANR	5601139	PtrMemberAccess	fo -> ymin		5600485	1					
ANR	5601140	Identifier	fo		5600485	0					
ANR	5601141	Identifier	ymin		5600485	1					
ANR	5601142	CompoundStatement		132:52:5650:5650	5600485	1					
ANR	5601143	IfStatement	if ( p . monotonic_y )		5600485	0					
ANR	5601144	Condition	p . monotonic_y	1097:28:42810:42822	5600485	0	True				
ANR	5601145	MemberAccess	p . monotonic_y		5600485	0					
ANR	5601146	Identifier	p		5600485	0					
ANR	5601147	Identifier	monotonic_y		5600485	1					
ANR	5601148	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"	1098:28:42853:42900	5600485	1	True				
ANR	5601149	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"		5600485	0		=			
ANR	5601150	Identifier	code		5600485	0					
ANR	5601151	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_DOWN , ll )"		5600485	1					
ANR	5601152	Callee	add_y_line		5600485	0					
ANR	5601153	Identifier	add_y_line		5600485	0					
ANR	5601154	ArgumentList	p . prev		5600485	1					
ANR	5601155	Argument	p . prev		5600485	0					
ANR	5601156	MemberAccess	p . prev		5600485	0					
ANR	5601157	Identifier	p		5600485	0					
ANR	5601158	Identifier	prev		5600485	1					
ANR	5601159	Argument	p . pseg		5600485	1					
ANR	5601160	MemberAccess	p . pseg		5600485	0					
ANR	5601161	Identifier	p		5600485	0					
ANR	5601162	Identifier	pseg		5600485	1					
ANR	5601163	Argument	DIR_DOWN		5600485	2					
ANR	5601164	Identifier	DIR_DOWN		5600485	0					
ANR	5601165	Argument	ll		5600485	3					
ANR	5601166	Identifier	ll		5600485	0					
ANR	5601167	ElseStatement	else		5600485	0					
ANR	5601168	ExpressionStatement	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"	1100:28:42959:43113	5600485	0	True				
ANR	5601169	AssignmentExpression	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"		5600485	0		=			
ANR	5601170	Identifier	code		5600485	0					
ANR	5601171	CallExpression	"add_y_curve_part ( ll , p . prev , p . pseg , DIR_DOWN , & p . fi , ! p . first_flattened , false , p . monotonic_x )"		5600485	1					
ANR	5601172	Callee	add_y_curve_part		5600485	0					
ANR	5601173	Identifier	add_y_curve_part		5600485	0					
ANR	5601174	ArgumentList	ll		5600485	1					
ANR	5601175	Argument	ll		5600485	0					
ANR	5601176	Identifier	ll		5600485	0					
ANR	5601177	Argument	p . prev		5600485	1					
ANR	5601178	MemberAccess	p . prev		5600485	0					
ANR	5601179	Identifier	p		5600485	0					
ANR	5601180	Identifier	prev		5600485	1					
ANR	5601181	Argument	p . pseg		5600485	2					
ANR	5601182	MemberAccess	p . pseg		5600485	0					
ANR	5601183	Identifier	p		5600485	0					
ANR	5601184	Identifier	pseg		5600485	1					
ANR	5601185	Argument	DIR_DOWN		5600485	3					
ANR	5601186	Identifier	DIR_DOWN		5600485	0					
ANR	5601187	Argument	& p . fi		5600485	4					
ANR	5601188	UnaryOperationExpression	& p . fi		5600485	0					
ANR	5601189	UnaryOperator	&		5600485	0					
ANR	5601190	MemberAccess	p . fi		5600485	1					
ANR	5601191	Identifier	p		5600485	0					
ANR	5601192	Identifier	fi		5600485	1					
ANR	5601193	Argument	! p . first_flattened		5600485	5					
ANR	5601194	UnaryOperationExpression	! p . first_flattened		5600485	0					
ANR	5601195	UnaryOperator	!		5600485	0					
ANR	5601196	MemberAccess	p . first_flattened		5600485	1					
ANR	5601197	Identifier	p		5600485	0					
ANR	5601198	Identifier	first_flattened		5600485	1					
ANR	5601199	Argument	false		5600485	6					
ANR	5601200	Identifier	false		5600485	0					
ANR	5601201	Argument	p . monotonic_x		5600485	7					
ANR	5601202	MemberAccess	p . monotonic_x		5600485	0					
ANR	5601203	Identifier	p		5600485	0					
ANR	5601204	Identifier	monotonic_x		5600485	1					
ANR	5601205	IfStatement	if ( code < 0 )		5600485	1					
ANR	5601206	Condition	code < 0	1102:28:43143:43150	5600485	0	True				
ANR	5601207	RelationalExpression	code < 0		5600485	0		<			
ANR	5601208	Identifier	code		5600485	0					
ANR	5601209	PrimaryExpression	0		5600485	1					
ANR	5601210	ReturnStatement	return code ;	1103:28:43181:43192	5600485	1	True				
ANR	5601211	Identifier	code		5600485	0					
ANR	5601212	ExpressionStatement	added = 1	1104:24:43218:43227	5600485	2	True				
ANR	5601213	AssignmentExpression	added = 1		5600485	0		=			
ANR	5601214	Identifier	added		5600485	0					
ANR	5601215	PrimaryExpression	1		5600485	1					
ANR	5601216	ElseStatement	else		5600485	0					
ANR	5601217	IfStatement	if ( p . fi . ly1 >= fo -> ymin )		5600485	0					
ANR	5601218	Condition	p . fi . ly1 >= fo -> ymin	1106:27:43278:43297	5600485	0	True				
ANR	5601219	RelationalExpression	p . fi . ly1 >= fo -> ymin		5600485	0		>=			
ANR	5601220	MemberAccess	p . fi . ly1		5600485	0					
ANR	5601221	MemberAccess	p . fi		5600485	0					
ANR	5601222	Identifier	p		5600485	0					
ANR	5601223	Identifier	fi		5600485	1					
ANR	5601224	Identifier	ly1		5600485	1					
ANR	5601225	PtrMemberAccess	fo -> ymin		5600485	1					
ANR	5601226	Identifier	fo		5600485	0					
ANR	5601227	Identifier	ymin		5600485	1					
ANR	5601228	CompoundStatement		143:49:6220:6220	5600485	1					
ANR	5601229	IfStatement	if ( p . monotonic_y )		5600485	0					
ANR	5601230	Condition	p . monotonic_y	1108:24:43370:43382	5600485	0	True				
ANR	5601231	MemberAccess	p . monotonic_y		5600485	0					
ANR	5601232	Identifier	p		5600485	0					
ANR	5601233	Identifier	monotonic_y		5600485	1					
ANR	5601234	ExpressionStatement	"code = add_y_line ( p . prev , p . pseg , DIR_UP , ll )"	1109:24:43409:43454	5600485	1	True				
ANR	5601235	AssignmentExpression	"code = add_y_line ( p . prev , p . pseg , DIR_UP , ll )"		5600485	0		=			
ANR	5601236	Identifier	code		5600485	0					
ANR	5601237	CallExpression	"add_y_line ( p . prev , p . pseg , DIR_UP , ll )"		5600485	1					
ANR	5601238	Callee	add_y_line		5600485	0					
ANR	5601239	Identifier	add_y_line		5600485	0					
ANR	5601240	ArgumentList	p . prev		5600485	1					
ANR	5601241	Argument	p . prev		5600485	0					
ANR	5601242	MemberAccess	p . prev		5600485	0					
ANR	5601243	Identifier	p		5600485	0					
ANR	5601244	Identifier	prev		5600485	1					
ANR	5601245	Argument	p . pseg		5600485	1					
ANR	5601246	MemberAccess	p . pseg		5600485	0					
ANR	5601247	Identifier	p		5600485	0					
ANR	5601248	Identifier	pseg		5600485	1					
ANR	5601249	Argument	DIR_UP		5600485	2					
ANR	5601250	Identifier	DIR_UP		5600485	0					
ANR	5601251	Argument	ll		5600485	3					
ANR	5601252	Identifier	ll		5600485	0					
ANR	5601253	ElseStatement	else		5600485	0					
ANR	5601254	ExpressionStatement	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"	1111:24:43505:43651	5600485	0	True				
ANR	5601255	AssignmentExpression	"code = add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"		5600485	0		=			
ANR	5601256	Identifier	code		5600485	0					
ANR	5601257	CallExpression	"add_y_curve_part ( ll , p . prev , p . pseg , DIR_UP , & p . fi , p . more_flattened , false , p . monotonic_x )"		5600485	1					
ANR	5601258	Callee	add_y_curve_part		5600485	0					
ANR	5601259	Identifier	add_y_curve_part		5600485	0					
ANR	5601260	ArgumentList	ll		5600485	1					
ANR	5601261	Argument	ll		5600485	0					
ANR	5601262	Identifier	ll		5600485	0					
ANR	5601263	Argument	p . prev		5600485	1					
ANR	5601264	MemberAccess	p . prev		5600485	0					
ANR	5601265	Identifier	p		5600485	0					
ANR	5601266	Identifier	prev		5600485	1					
ANR	5601267	Argument	p . pseg		5600485	2					
ANR	5601268	MemberAccess	p . pseg		5600485	0					
ANR	5601269	Identifier	p		5600485	0					
ANR	5601270	Identifier	pseg		5600485	1					
ANR	5601271	Argument	DIR_UP		5600485	3					
ANR	5601272	Identifier	DIR_UP		5600485	0					
ANR	5601273	Argument	& p . fi		5600485	4					
ANR	5601274	UnaryOperationExpression	& p . fi		5600485	0					
ANR	5601275	UnaryOperator	&		5600485	0					
ANR	5601276	MemberAccess	p . fi		5600485	1					
ANR	5601277	Identifier	p		5600485	0					
ANR	5601278	Identifier	fi		5600485	1					
ANR	5601279	Argument	p . more_flattened		5600485	5					
ANR	5601280	MemberAccess	p . more_flattened		5600485	0					
ANR	5601281	Identifier	p		5600485	0					
ANR	5601282	Identifier	more_flattened		5600485	1					
ANR	5601283	Argument	false		5600485	6					
ANR	5601284	Identifier	false		5600485	0					
ANR	5601285	Argument	p . monotonic_x		5600485	7					
ANR	5601286	MemberAccess	p . monotonic_x		5600485	0					
ANR	5601287	Identifier	p		5600485	0					
ANR	5601288	Identifier	monotonic_x		5600485	1					
ANR	5601289	IfStatement	if ( code < 0 )		5600485	1					
ANR	5601290	Condition	code < 0	1113:24:43677:43684	5600485	0	True				
ANR	5601291	RelationalExpression	code < 0		5600485	0		<			
ANR	5601292	Identifier	code		5600485	0					
ANR	5601293	PrimaryExpression	0		5600485	1					
ANR	5601294	ReturnStatement	return code ;	1114:24:43711:43722	5600485	1	True				
ANR	5601295	Identifier	code		5600485	0					
ANR	5601296	ExpressionStatement	added = 1	1115:20:43744:43753	5600485	2	True				
ANR	5601297	AssignmentExpression	added = 1		5600485	0		=			
ANR	5601298	Identifier	added		5600485	0					
ANR	5601299	PrimaryExpression	1		5600485	1					
ANR	5601300	IfStatement	if ( p . dir == DIR_DOWN || p . dir == DIR_UP )		5600485	1					
ANR	5601301	Condition	p . dir == DIR_DOWN || p . dir == DIR_UP	1117:20:43793:43828	5600485	0	True				
ANR	5601302	OrExpression	p . dir == DIR_DOWN || p . dir == DIR_UP		5600485	0		||			
ANR	5601303	EqualityExpression	p . dir == DIR_DOWN		5600485	0		==			
ANR	5601304	MemberAccess	p . dir		5600485	0					
ANR	5601305	Identifier	p		5600485	0					
ANR	5601306	Identifier	dir		5600485	1					
ANR	5601307	Identifier	DIR_DOWN		5600485	1					
ANR	5601308	EqualityExpression	p . dir == DIR_UP		5600485	1		==			
ANR	5601309	MemberAccess	p . dir		5600485	0					
ANR	5601310	Identifier	p		5600485	0					
ANR	5601311	Identifier	dir		5600485	1					
ANR	5601312	Identifier	DIR_UP		5600485	1					
ANR	5601313	ExpressionStatement	ll -> main_dir = p . dir	1118:20:43851:43871	5600485	1	True				
ANR	5601314	AssignmentExpression	ll -> main_dir = p . dir		5600485	0		=			
ANR	5601315	PtrMemberAccess	ll -> main_dir		5600485	0					
ANR	5601316	Identifier	ll		5600485	0					
ANR	5601317	Identifier	main_dir		5600485	1					
ANR	5601318	MemberAccess	p . dir		5600485	1					
ANR	5601319	Identifier	p		5600485	0					
ANR	5601320	Identifier	dir		5600485	1					
ANR	5601321	IfStatement	if ( ! p . monotonic_y && p . more_flattened )		5600485	5					
ANR	5601322	Condition	! p . monotonic_y && p . more_flattened	1120:16:43903:43936	5600485	0	True				
ANR	5601323	AndExpression	! p . monotonic_y && p . more_flattened		5600485	0		&&			
ANR	5601324	UnaryOperationExpression	! p . monotonic_y		5600485	0					
ANR	5601325	UnaryOperator	!		5600485	0					
ANR	5601326	MemberAccess	p . monotonic_y		5600485	1					
ANR	5601327	Identifier	p		5600485	0					
ANR	5601328	Identifier	monotonic_y		5600485	1					
ANR	5601329	MemberAccess	p . more_flattened		5600485	1					
ANR	5601330	Identifier	p		5600485	0					
ANR	5601331	Identifier	more_flattened		5600485	1					
ANR	5601332	CompoundStatement		157:52:6859:6859	5600485	1					
ANR	5601333	ExpressionStatement	"code = start_al_pair_from_min ( ll , & p )"	1121:16:43957:43994	5600485	0	True				
ANR	5601334	AssignmentExpression	"code = start_al_pair_from_min ( ll , & p )"		5600485	0		=			
ANR	5601335	Identifier	code		5600485	0					
ANR	5601336	CallExpression	"start_al_pair_from_min ( ll , & p )"		5600485	1					
ANR	5601337	Callee	start_al_pair_from_min		5600485	0					
ANR	5601338	Identifier	start_al_pair_from_min		5600485	0					
ANR	5601339	ArgumentList	ll		5600485	1					
ANR	5601340	Argument	ll		5600485	0					
ANR	5601341	Identifier	ll		5600485	0					
ANR	5601342	Argument	& p		5600485	1					
ANR	5601343	UnaryOperationExpression	& p		5600485	0					
ANR	5601344	UnaryOperator	&		5600485	0					
ANR	5601345	Identifier	p		5600485	1					
ANR	5601346	IfStatement	if ( code < 0 )		5600485	1					
ANR	5601347	Condition	code < 0	1122:20:44016:44023	5600485	0	True				
ANR	5601348	RelationalExpression	code < 0		5600485	0		<			
ANR	5601349	Identifier	code		5600485	0					
ANR	5601350	PrimaryExpression	0		5600485	1					
ANR	5601351	ReturnStatement	return code ;	1123:20:44046:44057	5600485	1	True				
ANR	5601352	Identifier	code		5600485	0					
ANR	5601353	ExpressionStatement	added = 1	1124:16:44075:44084	5600485	2	True				
ANR	5601354	AssignmentExpression	added = 1		5600485	0		=			
ANR	5601355	Identifier	added		5600485	0					
ANR	5601356	PrimaryExpression	1		5600485	1					
ANR	5601357	IfStatement	if ( p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL )		5600485	6					
ANR	5601358	Condition	p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL	1126:16:44116:44159	5600485	0	True				
ANR	5601359	OrExpression	p . dir == DIR_DOWN || p . dir == DIR_HORIZONTAL		5600485	0		||			
ANR	5601360	EqualityExpression	p . dir == DIR_DOWN		5600485	0		==			
ANR	5601361	MemberAccess	p . dir		5600485	0					
ANR	5601362	Identifier	p		5600485	0					
ANR	5601363	Identifier	dir		5600485	1					
ANR	5601364	Identifier	DIR_DOWN		5600485	1					
ANR	5601365	EqualityExpression	p . dir == DIR_HORIZONTAL		5600485	1		==			
ANR	5601366	MemberAccess	p . dir		5600485	0					
ANR	5601367	Identifier	p		5600485	0					
ANR	5601368	Identifier	dir		5600485	1					
ANR	5601369	Identifier	DIR_HORIZONTAL		5600485	1					
ANR	5601370	CompoundStatement		163:62:7082:7082	5600485	1					
ANR	5601371	ExpressionStatement	q . prev = p . prev	1127:16:44180:44195	5600485	0	True				
ANR	5601372	AssignmentExpression	q . prev = p . prev		5600485	0		=			
ANR	5601373	MemberAccess	q . prev		5600485	0					
ANR	5601374	Identifier	q		5600485	0					
ANR	5601375	Identifier	prev		5600485	1					
ANR	5601376	MemberAccess	p . prev		5600485	1					
ANR	5601377	Identifier	p		5600485	0					
ANR	5601378	Identifier	prev		5600485	1					
ANR	5601379	ExpressionStatement	q . pseg = p . pseg	1128:16:44213:44228	5600485	1	True				
ANR	5601380	AssignmentExpression	q . pseg = p . pseg		5600485	0		=			
ANR	5601381	MemberAccess	q . pseg		5600485	0					
ANR	5601382	Identifier	q		5600485	0					
ANR	5601383	Identifier	pseg		5600485	1					
ANR	5601384	MemberAccess	p . pseg		5600485	1					
ANR	5601385	Identifier	p		5600485	0					
ANR	5601386	Identifier	pseg		5600485	1					
ANR	5601387	ExpressionStatement	q . monotonic_y = p . monotonic_y	1129:16:44246:44275	5600485	2	True				
ANR	5601388	AssignmentExpression	q . monotonic_y = p . monotonic_y		5600485	0		=			
ANR	5601389	MemberAccess	q . monotonic_y		5600485	0					
ANR	5601390	Identifier	q		5600485	0					
ANR	5601391	Identifier	monotonic_y		5600485	1					
ANR	5601392	MemberAccess	p . monotonic_y		5600485	1					
ANR	5601393	Identifier	p		5600485	0					
ANR	5601394	Identifier	monotonic_y		5600485	1					
ANR	5601395	ExpressionStatement	q . more_flattened = p . more_flattened	1130:16:44293:44328	5600485	3	True				
ANR	5601396	AssignmentExpression	q . more_flattened = p . more_flattened		5600485	0		=			
ANR	5601397	MemberAccess	q . more_flattened		5600485	0					
ANR	5601398	Identifier	q		5600485	0					
ANR	5601399	Identifier	more_flattened		5600485	1					
ANR	5601400	MemberAccess	p . more_flattened		5600485	1					
ANR	5601401	Identifier	p		5600485	0					
ANR	5601402	Identifier	more_flattened		5600485	1					
ANR	5601403	ExpressionStatement	q . first_flattened = p . first_flattened	1131:16:44346:44383	5600485	4	True				
ANR	5601404	AssignmentExpression	q . first_flattened = p . first_flattened		5600485	0		=			
ANR	5601405	MemberAccess	q . first_flattened		5600485	0					
ANR	5601406	Identifier	q		5600485	0					
ANR	5601407	Identifier	first_flattened		5600485	1					
ANR	5601408	MemberAccess	p . first_flattened		5600485	1					
ANR	5601409	Identifier	p		5600485	0					
ANR	5601410	Identifier	first_flattened		5600485	1					
ANR	5601411	ExpressionStatement	q . fi = p . fi	1132:16:44401:44412	5600485	5	True				
ANR	5601412	AssignmentExpression	q . fi = p . fi		5600485	0		=			
ANR	5601413	MemberAccess	q . fi		5600485	0					
ANR	5601414	Identifier	q		5600485	0					
ANR	5601415	Identifier	fi		5600485	1					
ANR	5601416	MemberAccess	p . fi		5600485	1					
ANR	5601417	Identifier	p		5600485	0					
ANR	5601418	Identifier	fi		5600485	1					
ANR	5601419	ExpressionStatement	q . dir = p . dir	1133:16:44430:44443	5600485	6	True				
ANR	5601420	AssignmentExpression	q . dir = p . dir		5600485	0		=			
ANR	5601421	MemberAccess	q . dir		5600485	0					
ANR	5601422	Identifier	q		5600485	0					
ANR	5601423	Identifier	dir		5600485	1					
ANR	5601424	MemberAccess	p . dir		5600485	1					
ANR	5601425	Identifier	p		5600485	0					
ANR	5601426	Identifier	dir		5600485	1					
ANR	5601427	Condition	! added && p . more_flattened	1139:17:44733:44758	5600485	1	True				
ANR	5601428	AndExpression	! added && p . more_flattened		5600485	0		&&			
ANR	5601429	UnaryOperationExpression	! added		5600485	0					
ANR	5601430	UnaryOperator	!		5600485	0					
ANR	5601431	Identifier	added		5600485	1					
ANR	5601432	MemberAccess	p . more_flattened		5600485	1					
ANR	5601433	Identifier	p		5600485	0					
ANR	5601434	Identifier	more_flattened		5600485	1					
ANR	5601435	ReturnStatement	return 0 ;	1141:4:44772:44780	5600485	21	True				
ANR	5601436	PrimaryExpression	0		5600485	0					
ANR	5601437	ReturnType	static int		5600485	1					
ANR	5601438	Identifier	scan_contour		5600485	2					
ANR	5601439	ParameterList	"line_list * ll , segment * pfirst , segment * plast , segment * prev"		5600485	3					
ANR	5601440	Parameter	line_list * ll	963:13:37016:37028	5600485	0	True				
ANR	5601441	ParameterType	line_list *		5600485	0					
ANR	5601442	Identifier	ll		5600485	1					
ANR	5601443	Parameter	segment * pfirst	963:28:37031:37045	5600485	1	True				
ANR	5601444	ParameterType	segment *		5600485	0					
ANR	5601445	Identifier	pfirst		5600485	1					
ANR	5601446	Parameter	segment * plast	963:45:37048:37061	5600485	2	True				
ANR	5601447	ParameterType	segment *		5600485	0					
ANR	5601448	Identifier	plast		5600485	1					
ANR	5601449	Parameter	segment * prev	963:61:37064:37076	5600485	3	True				
ANR	5601450	ParameterType	segment *		5600485	0					
ANR	5601451	Identifier	prev		5600485	1					
ANR	5601452	CFGEntryNode	ENTRY		5600485		True				
ANR	5601453	CFGExitNode	EXIT		5600485		True				
ANR	5601454	InfiniteForNode	true		5600485		True				
ANR	5601455	InfiniteForNode	true		5600485		True				
ANR	5601456	Symbol	ll		5600485						
ANR	5601457	Symbol	q . pseg		5600485						
ANR	5601458	Symbol	add_y_line		5600485						
ANR	5601459	Symbol	saved		5600485						
ANR	5601460	Symbol	added		5600485						
ANR	5601461	Symbol	p . pseg		5600485						
ANR	5601462	Symbol	p . dir		5600485						
ANR	5601463	Symbol	prev		5600485						
ANR	5601464	Symbol	DIR_DOWN		5600485						
ANR	5601465	Symbol	gx_flattened_iterator__next		5600485						
ANR	5601466	Symbol	* p . prev		5600485						
ANR	5601467	Symbol	s_curve		5600485						
ANR	5601468	Symbol	p . more_flattened		5600485						
ANR	5601469	Symbol	ll -> y_break		5600485						
ANR	5601470	Symbol	start_al_pair_from_min		5600485						
ANR	5601471	Symbol	q . prev -> prev		5600485						
ANR	5601472	Symbol	& save_q		5600485						
ANR	5601473	Symbol	* q . prev		5600485						
ANR	5601474	Symbol	p . prev -> next		5600485						
ANR	5601475	Symbol	DIR_UP		5600485						
ANR	5601476	Symbol	DIR_HORIZONTAL		5600485						
ANR	5601477	Symbol	& q . fi		5600485						
ANR	5601478	Symbol	p . pseg -> type		5600485						
ANR	5601479	Symbol	fo -> ymin		5600485						
ANR	5601480	Symbol	* ll		5600485						
ANR	5601481	Symbol	p . prev -> pt		5600485						
ANR	5601482	Symbol	* p . pseg		5600485						
ANR	5601483	Symbol	q . more_flattened		5600485						
ANR	5601484	Symbol	ll -> fo		5600485						
ANR	5601485	Symbol	pfirst		5600485						
ANR	5601486	Symbol	start_al_pair		5600485						
ANR	5601487	Symbol	p . monotonic_x		5600485						
ANR	5601488	Symbol	p . monotonic_y		5600485						
ANR	5601489	Symbol	true		5600485						
ANR	5601490	Symbol	DIR_OUT_OF_Y_RANGE		5600485						
ANR	5601491	Symbol	code		5600485						
ANR	5601492	Symbol	p . prev -> pt . x		5600485						
ANR	5601493	Symbol	p . prev -> pt . y		5600485						
ANR	5601494	Symbol	fo		5600485						
ANR	5601495	Symbol	p . first_flattened		5600485						
ANR	5601496	Symbol	add_y_curve_part		5600485						
ANR	5601497	Symbol	p . pseg -> pt		5600485						
ANR	5601498	Symbol	q . first_flattened		5600485						
ANR	5601499	Symbol	compute_dir		5600485						
ANR	5601500	Symbol	p . fi		5600485						
ANR	5601501	Symbol	q . monotonic_y		5600485						
ANR	5601502	Symbol	q . monotonic_x		5600485						
ANR	5601503	Symbol	q . plast		5600485						
ANR	5601504	Symbol	p . prev		5600485						
ANR	5601505	Symbol	only_horizontal		5600485						
ANR	5601506	Symbol	q . prev		5600485						
ANR	5601507	Symbol	fo -> ymax		5600485						
ANR	5601508	Symbol	save_q . dir		5600485						
ANR	5601509	Symbol	plast		5600485						
ANR	5601510	Symbol	init_contour_cursor		5600485						
ANR	5601511	Symbol	q . pfirst		5600485						
ANR	5601512	Symbol	save_q		5600485						
ANR	5601513	Symbol	p . pseg -> pt . x		5600485						
ANR	5601514	Symbol	p . pseg -> pt . y		5600485						
ANR	5601515	Symbol	false		5600485						
ANR	5601516	Symbol	q . fi . ly1		5600485						
ANR	5601517	Symbol	* fo		5600485						
ANR	5601518	Symbol	ll -> main_dir		5600485						
ANR	5601519	Symbol	q . fi		5600485						
ANR	5601520	Symbol	q . fi . ly0		5600485						
ANR	5601521	Symbol	p		5600485						
ANR	5601522	Symbol	q		5600485						
ANR	5601523	Symbol	& p . fi		5600485						
ANR	5601524	Symbol	& p		5600485						
ANR	5601525	Symbol	& q		5600485						
ANR	5601526	Symbol	* p		5600485						
ANR	5601527	Symbol	* q		5600485						
ANR	5601528	Symbol	p . fi . ly0		5600485						
ANR	5601529	Symbol	q . dir		5600485						
ANR	5601530	Symbol	p . fi . ly1		5600485						
ANR	5601531	Function	add_y_list	1150:0:45068:46170							
ANR	5601532	FunctionDef	"add_y_list (gx_path * ppath , line_list * ll)"		5601531	0					
ANR	5601533	CompoundStatement		1152:0:45122:46170	5601531	0					
ANR	5601534	IdentifierDeclStatement	subpath * psub = ppath -> first_subpath ;	1153:4:45128:45164	5601531	0	True				
ANR	5601535	IdentifierDecl	* psub = ppath -> first_subpath		5601531	0					
ANR	5601536	IdentifierDeclType	subpath *		5601531	0					
ANR	5601537	Identifier	psub		5601531	1					
ANR	5601538	AssignmentExpression	* psub = ppath -> first_subpath		5601531	2		=			
ANR	5601539	Identifier	psub		5601531	0					
ANR	5601540	PtrMemberAccess	ppath -> first_subpath		5601531	1					
ANR	5601541	Identifier	ppath		5601531	0					
ANR	5601542	Identifier	first_subpath		5601531	1					
ANR	5601543	IdentifierDeclStatement	int close_count = 0 ;	1154:4:45170:45189	5601531	1	True				
ANR	5601544	IdentifierDecl	close_count = 0		5601531	0					
ANR	5601545	IdentifierDeclType	int		5601531	0					
ANR	5601546	Identifier	close_count		5601531	1					
ANR	5601547	AssignmentExpression	close_count = 0		5601531	2		=			
ANR	5601548	Identifier	close_count		5601531	0					
ANR	5601549	PrimaryExpression	0		5601531	1					
ANR	5601550	IdentifierDeclStatement	int code ;	1155:4:45195:45203	5601531	2	True				
ANR	5601551	IdentifierDecl	code		5601531	0					
ANR	5601552	IdentifierDeclType	int		5601531	0					
ANR	5601553	Identifier	code		5601531	1					
ANR	5601554	ExpressionStatement	ll -> y_break = max_fixed	1157:4:45210:45233	5601531	3	True				
ANR	5601555	AssignmentExpression	ll -> y_break = max_fixed		5601531	0		=			
ANR	5601556	PtrMemberAccess	ll -> y_break		5601531	0					
ANR	5601557	Identifier	ll		5601531	0					
ANR	5601558	Identifier	y_break		5601531	1					
ANR	5601559	Identifier	max_fixed		5601531	1					
ANR	5601560	ForStatement	for ( ; psub ; psub = ( subpath * ) psub -> last -> next )		5601531	4					
ANR	5601561	Condition	psub	1159:10:45246:45249	5601531	0	True				
ANR	5601562	Identifier	psub		5601531	0					
ANR	5601563	AssignmentExpression	psub = ( subpath * ) psub -> last -> next	1159:16:45252:45285	5601531	1	True	=			
ANR	5601564	Identifier	psub		5601531	0					
ANR	5601565	CastExpression	( subpath * ) psub -> last -> next		5601531	1					
ANR	5601566	CastTarget	subpath *		5601531	0					
ANR	5601567	PtrMemberAccess	psub -> last -> next		5601531	1					
ANR	5601568	PtrMemberAccess	psub -> last		5601531	0					
ANR	5601569	Identifier	psub		5601531	0					
ANR	5601570	Identifier	last		5601531	1					
ANR	5601571	Identifier	next		5601531	1					
ANR	5601572	CompoundStatement		11:8:286:320	5601531	2					
ANR	5601573	IdentifierDeclStatement	segment * pfirst = ( segment * ) psub ;	1161:8:45366:45399	5601531	0	True				
ANR	5601574	IdentifierDecl	* pfirst = ( segment * ) psub		5601531	0					
ANR	5601575	IdentifierDeclType	segment *		5601531	0					
ANR	5601576	Identifier	pfirst		5601531	1					
ANR	5601577	AssignmentExpression	* pfirst = ( segment * ) psub		5601531	2		=			
ANR	5601578	Identifier	pfirst		5601531	0					
ANR	5601579	CastExpression	( segment * ) psub		5601531	1					
ANR	5601580	CastTarget	segment *		5601531	0					
ANR	5601581	Identifier	psub		5601531	1					
ANR	5601582	IdentifierDeclStatement	"segment * plast = psub -> last , * prev ;"	1162:8:45409:45443	5601531	1	True				
ANR	5601583	IdentifierDecl	* plast = psub -> last		5601531	0					
ANR	5601584	IdentifierDeclType	segment *		5601531	0					
ANR	5601585	Identifier	plast		5601531	1					
ANR	5601586	AssignmentExpression	* plast = psub -> last		5601531	2		=			
ANR	5601587	Identifier	plast		5601531	0					
ANR	5601588	PtrMemberAccess	psub -> last		5601531	1					
ANR	5601589	Identifier	psub		5601531	0					
ANR	5601590	Identifier	last		5601531	1					
ANR	5601591	IdentifierDecl	* prev		5601531	1					
ANR	5601592	IdentifierDeclType	segment *		5601531	0					
ANR	5601593	Identifier	prev		5601531	1					
ANR	5601594	IfStatement	if ( plast -> type != s_line_close )		5601531	2					
ANR	5601595	Condition	plast -> type != s_line_close	1164:12:45458:45484	5601531	0	True				
ANR	5601596	EqualityExpression	plast -> type != s_line_close		5601531	0		!=			
ANR	5601597	PtrMemberAccess	plast -> type		5601531	0					
ANR	5601598	Identifier	plast		5601531	0					
ANR	5601599	Identifier	type		5601531	1					
ANR	5601600	Identifier	s_line_close		5601531	1					
ANR	5601601	CompoundStatement		16:12:475:502	5601531	1					
ANR	5601602	IdentifierDeclStatement	line_close_segment * lp = & psub -> closer ;	1166:12:45546:45584	5601531	0	True				
ANR	5601603	IdentifierDecl	* lp = & psub -> closer		5601531	0					
ANR	5601604	IdentifierDeclType	line_close_segment *		5601531	0					
ANR	5601605	Identifier	lp		5601531	1					
ANR	5601606	AssignmentExpression	* lp = & psub -> closer		5601531	2		=			
ANR	5601607	Identifier	lp		5601531	0					
ANR	5601608	UnaryOperationExpression	& psub -> closer		5601531	1					
ANR	5601609	UnaryOperator	&		5601531	0					
ANR	5601610	PtrMemberAccess	psub -> closer		5601531	1					
ANR	5601611	Identifier	psub		5601531	0					
ANR	5601612	Identifier	closer		5601531	1					
ANR	5601613	IdentifierDeclStatement	segment * next = plast -> next ;	1167:12:45598:45625	5601531	1	True				
ANR	5601614	IdentifierDecl	* next = plast -> next		5601531	0					
ANR	5601615	IdentifierDeclType	segment *		5601531	0					
ANR	5601616	Identifier	next		5601531	1					
ANR	5601617	AssignmentExpression	* next = plast -> next		5601531	2		=			
ANR	5601618	Identifier	next		5601531	0					
ANR	5601619	PtrMemberAccess	plast -> next		5601531	1					
ANR	5601620	Identifier	plast		5601531	0					
ANR	5601621	Identifier	next		5601531	1					
ANR	5601622	ExpressionStatement	lp -> next = next	1169:12:45640:45655	5601531	2	True				
ANR	5601623	AssignmentExpression	lp -> next = next		5601531	0		=			
ANR	5601624	PtrMemberAccess	lp -> next		5601531	0					
ANR	5601625	Identifier	lp		5601531	0					
ANR	5601626	Identifier	next		5601531	1					
ANR	5601627	Identifier	next		5601531	1					
ANR	5601628	ExpressionStatement	lp -> prev = plast	1170:12:45669:45685	5601531	3	True				
ANR	5601629	AssignmentExpression	lp -> prev = plast		5601531	0		=			
ANR	5601630	PtrMemberAccess	lp -> prev		5601531	0					
ANR	5601631	Identifier	lp		5601531	0					
ANR	5601632	Identifier	prev		5601531	1					
ANR	5601633	Identifier	plast		5601531	1					
ANR	5601634	ExpressionStatement	plast -> next = ( segment * ) lp	1171:12:45699:45727	5601531	4	True				
ANR	5601635	AssignmentExpression	plast -> next = ( segment * ) lp		5601531	0		=			
ANR	5601636	PtrMemberAccess	plast -> next		5601531	0					
ANR	5601637	Identifier	plast		5601531	0					
ANR	5601638	Identifier	next		5601531	1					
ANR	5601639	CastExpression	( segment * ) lp		5601531	1					
ANR	5601640	CastTarget	segment *		5601531	0					
ANR	5601641	Identifier	lp		5601531	1					
ANR	5601642	IfStatement	if ( next )		5601531	5					
ANR	5601643	Condition	next	1172:16:45745:45748	5601531	0	True				
ANR	5601644	Identifier	next		5601531	0					
ANR	5601645	ExpressionStatement	next -> prev = ( segment * ) lp	1173:16:45767:45794	5601531	1	True				
ANR	5601646	AssignmentExpression	next -> prev = ( segment * ) lp		5601531	0		=			
ANR	5601647	PtrMemberAccess	next -> prev		5601531	0					
ANR	5601648	Identifier	next		5601531	0					
ANR	5601649	Identifier	prev		5601531	1					
ANR	5601650	CastExpression	( segment * ) lp		5601531	1					
ANR	5601651	CastTarget	segment *		5601531	0					
ANR	5601652	Identifier	lp		5601531	1					
ANR	5601653	ExpressionStatement	lp -> type = s_line_close	1174:12:45808:45831	5601531	6	True				
ANR	5601654	AssignmentExpression	lp -> type = s_line_close		5601531	0		=			
ANR	5601655	PtrMemberAccess	lp -> type		5601531	0					
ANR	5601656	Identifier	lp		5601531	0					
ANR	5601657	Identifier	type		5601531	1					
ANR	5601658	Identifier	s_line_close		5601531	1					
ANR	5601659	ExpressionStatement	lp -> pt = psub -> pt	1175:12:45845:45862	5601531	7	True				
ANR	5601660	AssignmentExpression	lp -> pt = psub -> pt		5601531	0		=			
ANR	5601661	PtrMemberAccess	lp -> pt		5601531	0					
ANR	5601662	Identifier	lp		5601531	0					
ANR	5601663	Identifier	pt		5601531	1					
ANR	5601664	PtrMemberAccess	psub -> pt		5601531	1					
ANR	5601665	Identifier	psub		5601531	0					
ANR	5601666	Identifier	pt		5601531	1					
ANR	5601667	ExpressionStatement	lp -> sub = psub	1176:12:45876:45890	5601531	8	True				
ANR	5601668	AssignmentExpression	lp -> sub = psub		5601531	0		=			
ANR	5601669	PtrMemberAccess	lp -> sub		5601531	0					
ANR	5601670	Identifier	lp		5601531	0					
ANR	5601671	Identifier	sub		5601531	1					
ANR	5601672	Identifier	psub		5601531	1					
ANR	5601673	ExpressionStatement	psub -> last = plast = ( segment * ) lp	1177:12:45904:45939	5601531	9	True				
ANR	5601674	AssignmentExpression	psub -> last = plast = ( segment * ) lp		5601531	0		=			
ANR	5601675	PtrMemberAccess	psub -> last		5601531	0					
ANR	5601676	Identifier	psub		5601531	0					
ANR	5601677	Identifier	last		5601531	1					
ANR	5601678	AssignmentExpression	plast = ( segment * ) lp		5601531	1		=			
ANR	5601679	Identifier	plast		5601531	0					
ANR	5601680	CastExpression	( segment * ) lp		5601531	1					
ANR	5601681	CastTarget	segment *		5601531	0					
ANR	5601682	Identifier	lp		5601531	1					
ANR	5601683	ExpressionStatement	ll -> close_count ++	1178:12:45953:45970	5601531	10	True				
ANR	5601684	PostIncDecOperationExpression	ll -> close_count ++		5601531	0					
ANR	5601685	PtrMemberAccess	ll -> close_count		5601531	0					
ANR	5601686	Identifier	ll		5601531	0					
ANR	5601687	Identifier	close_count		5601531	1					
ANR	5601688	IncDec	++		5601531	1					
ANR	5601689	ExpressionStatement	prev = plast -> prev	1180:8:45990:46008	5601531	3	True				
ANR	5601690	AssignmentExpression	prev = plast -> prev		5601531	0		=			
ANR	5601691	Identifier	prev		5601531	0					
ANR	5601692	PtrMemberAccess	plast -> prev		5601531	1					
ANR	5601693	Identifier	plast		5601531	0					
ANR	5601694	Identifier	prev		5601531	1					
ANR	5601695	ExpressionStatement	"code = scan_contour ( ll , pfirst , plast , prev )"	1181:8:46018:46062	5601531	4	True				
ANR	5601696	AssignmentExpression	"code = scan_contour ( ll , pfirst , plast , prev )"		5601531	0		=			
ANR	5601697	Identifier	code		5601531	0					
ANR	5601698	CallExpression	"scan_contour ( ll , pfirst , plast , prev )"		5601531	1					
ANR	5601699	Callee	scan_contour		5601531	0					
ANR	5601700	Identifier	scan_contour		5601531	0					
ANR	5601701	ArgumentList	ll		5601531	1					
ANR	5601702	Argument	ll		5601531	0					
ANR	5601703	Identifier	ll		5601531	0					
ANR	5601704	Argument	pfirst		5601531	1					
ANR	5601705	Identifier	pfirst		5601531	0					
ANR	5601706	Argument	plast		5601531	2					
ANR	5601707	Identifier	plast		5601531	0					
ANR	5601708	Argument	prev		5601531	3					
ANR	5601709	Identifier	prev		5601531	0					
ANR	5601710	IfStatement	if ( code < 0 )		5601531	5					
ANR	5601711	Condition	code < 0	1182:12:46076:46083	5601531	0	True				
ANR	5601712	RelationalExpression	code < 0		5601531	0		<			
ANR	5601713	Identifier	code		5601531	0					
ANR	5601714	PrimaryExpression	0		5601531	1					
ANR	5601715	ReturnStatement	return code ;	1183:12:46098:46109	5601531	1	True				
ANR	5601716	Identifier	code		5601531	0					
ANR	5601717	ExpressionStatement	ll -> contour_count ++	1184:8:46119:46138	5601531	6	True				
ANR	5601718	PostIncDecOperationExpression	ll -> contour_count ++		5601531	0					
ANR	5601719	PtrMemberAccess	ll -> contour_count		5601531	0					
ANR	5601720	Identifier	ll		5601531	0					
ANR	5601721	Identifier	contour_count		5601531	1					
ANR	5601722	IncDec	++		5601531	1					
ANR	5601723	ReturnStatement	return close_count ;	1186:4:46150:46168	5601531	5	True				
ANR	5601724	Identifier	close_count		5601531	0					
ANR	5601725	ReturnType	static int		5601531	1					
ANR	5601726	Identifier	add_y_list		5601531	2					
ANR	5601727	ParameterList	"gx_path * ppath , line_list * ll"		5601531	3					
ANR	5601728	Parameter	gx_path * ppath	1151:11:45090:45104	5601531	0	True				
ANR	5601729	ParameterType	gx_path *		5601531	0					
ANR	5601730	Identifier	ppath		5601531	1					
ANR	5601731	Parameter	line_list * ll	1151:28:45107:45119	5601531	1	True				
ANR	5601732	ParameterType	line_list *		5601531	0					
ANR	5601733	Identifier	ll		5601531	1					
ANR	5601734	CFGEntryNode	ENTRY		5601531		True				
ANR	5601735	CFGExitNode	EXIT		5601531		True				
ANR	5601736	Symbol	ll		5601531						
ANR	5601737	Symbol	next		5601531						
ANR	5601738	Symbol	lp -> sub		5601531						
ANR	5601739	Symbol	psub -> last		5601531						
ANR	5601740	Symbol	code		5601531						
ANR	5601741	Symbol	lp		5601531						
ANR	5601742	Symbol	prev		5601531						
ANR	5601743	Symbol	ppath		5601531						
ANR	5601744	Symbol	ppath -> first_subpath		5601531						
ANR	5601745	Symbol	* next		5601531						
ANR	5601746	Symbol	* psub -> last		5601531						
ANR	5601747	Symbol	close_count		5601531						
ANR	5601748	Symbol	ll -> y_break		5601531						
ANR	5601749	Symbol	max_fixed		5601531						
ANR	5601750	Symbol	scan_contour		5601531						
ANR	5601751	Symbol	plast		5601531						
ANR	5601752	Symbol	ll -> contour_count		5601531						
ANR	5601753	Symbol	psub -> last -> next		5601531						
ANR	5601754	Symbol	lp -> pt		5601531						
ANR	5601755	Symbol	psub -> pt		5601531						
ANR	5601756	Symbol	ll -> close_count		5601531						
ANR	5601757	Symbol	* ppath		5601531						
ANR	5601758	Symbol	& psub -> closer		5601531						
ANR	5601759	Symbol	psub		5601531						
ANR	5601760	Symbol	* ll		5601531						
ANR	5601761	Symbol	* psub		5601531						
ANR	5601762	Symbol	plast -> next		5601531						
ANR	5601763	Symbol	plast -> prev		5601531						
ANR	5601764	Symbol	* * psub		5601531						
ANR	5601765	Symbol	s_line_close		5601531						
ANR	5601766	Symbol	lp -> prev		5601531						
ANR	5601767	Symbol	* lp		5601531						
ANR	5601768	Symbol	lp -> next		5601531						
ANR	5601769	Symbol	pfirst		5601531						
ANR	5601770	Symbol	* plast		5601531						
ANR	5601771	Symbol	next -> prev		5601531						
ANR	5601772	Symbol	lp -> type		5601531						
ANR	5601773	Symbol	plast -> type		5601531						
ANR	5601774	Function	step_al	1189:0:46173:47155							
ANR	5601775	FunctionDef	"step_al (active_line * alp , bool move_iterator)"		5601774	0					
ANR	5601776	CompoundStatement		1191:0:46230:47155	5601774	0					
ANR	5601777	IdentifierDeclStatement	bool forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve ) ;	1192:4:46236:46293	5601774	0	True				
ANR	5601778	IdentifierDecl	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		5601774	0					
ANR	5601779	IdentifierDeclType	bool		5601774	0					
ANR	5601780	Identifier	forth		5601774	1					
ANR	5601781	AssignmentExpression	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		5601774	2		=			
ANR	5601782	Identifier	forth		5601774	0					
ANR	5601783	OrExpression	alp -> direction == DIR_UP || ! alp -> fi . curve		5601774	1		||			
ANR	5601784	EqualityExpression	alp -> direction == DIR_UP		5601774	0		==			
ANR	5601785	PtrMemberAccess	alp -> direction		5601774	0					
ANR	5601786	Identifier	alp		5601774	0					
ANR	5601787	Identifier	direction		5601774	1					
ANR	5601788	Identifier	DIR_UP		5601774	1					
ANR	5601789	UnaryOperationExpression	! alp -> fi . curve		5601774	1					
ANR	5601790	UnaryOperator	!		5601774	0					
ANR	5601791	MemberAccess	alp -> fi . curve		5601774	1					
ANR	5601792	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601793	Identifier	alp		5601774	0					
ANR	5601794	Identifier	fi		5601774	1					
ANR	5601795	Identifier	curve		5601774	1					
ANR	5601796	IfStatement	if ( move_iterator )		5601774	1					
ANR	5601797	Condition	move_iterator	1194:8:46304:46316	5601774	0	True				
ANR	5601798	Identifier	move_iterator		5601774	0					
ANR	5601799	CompoundStatement		5:8:98:106	5601774	1					
ANR	5601800	IdentifierDeclStatement	int code ;	1195:8:46329:46337	5601774	0	True				
ANR	5601801	IdentifierDecl	code		5601774	0					
ANR	5601802	IdentifierDeclType	int		5601774	0					
ANR	5601803	Identifier	code		5601774	1					
ANR	5601804	IfStatement	if ( forth )		5601774	1					
ANR	5601805	Condition	forth	1197:12:46352:46356	5601774	0	True				
ANR	5601806	Identifier	forth		5601774	0					
ANR	5601807	ExpressionStatement	code = gx_flattened_iterator__next ( & alp -> fi )	1198:12:46371:46415	5601774	1	True				
ANR	5601808	AssignmentExpression	code = gx_flattened_iterator__next ( & alp -> fi )		5601774	0		=			
ANR	5601809	Identifier	code		5601774	0					
ANR	5601810	CallExpression	gx_flattened_iterator__next ( & alp -> fi )		5601774	1					
ANR	5601811	Callee	gx_flattened_iterator__next		5601774	0					
ANR	5601812	Identifier	gx_flattened_iterator__next		5601774	0					
ANR	5601813	ArgumentList	& alp -> fi		5601774	1					
ANR	5601814	Argument	& alp -> fi		5601774	0					
ANR	5601815	UnaryOperationExpression	& alp -> fi		5601774	0					
ANR	5601816	UnaryOperator	&		5601774	0					
ANR	5601817	PtrMemberAccess	alp -> fi		5601774	1					
ANR	5601818	Identifier	alp		5601774	0					
ANR	5601819	Identifier	fi		5601774	1					
ANR	5601820	ElseStatement	else		5601774	0					
ANR	5601821	ExpressionStatement	code = gx_flattened_iterator__prev ( & alp -> fi )	1200:12:46442:46486	5601774	0	True				
ANR	5601822	AssignmentExpression	code = gx_flattened_iterator__prev ( & alp -> fi )		5601774	0		=			
ANR	5601823	Identifier	code		5601774	0					
ANR	5601824	CallExpression	gx_flattened_iterator__prev ( & alp -> fi )		5601774	1					
ANR	5601825	Callee	gx_flattened_iterator__prev		5601774	0					
ANR	5601826	Identifier	gx_flattened_iterator__prev		5601774	0					
ANR	5601827	ArgumentList	& alp -> fi		5601774	1					
ANR	5601828	Argument	& alp -> fi		5601774	0					
ANR	5601829	UnaryOperationExpression	& alp -> fi		5601774	0					
ANR	5601830	UnaryOperator	&		5601774	0					
ANR	5601831	PtrMemberAccess	alp -> fi		5601774	1					
ANR	5601832	Identifier	alp		5601774	0					
ANR	5601833	Identifier	fi		5601774	1					
ANR	5601834	IfStatement	if ( code < 0 )		5601774	2					
ANR	5601835	Condition	code < 0	1201:12:46500:46507	5601774	0	True				
ANR	5601836	RelationalExpression	code < 0		5601774	0		<			
ANR	5601837	Identifier	code		5601774	0					
ANR	5601838	PrimaryExpression	0		5601774	1					
ANR	5601839	ReturnStatement	return code ;	1202:12:46522:46533	5601774	1	True				
ANR	5601840	Identifier	code		5601774	0					
ANR	5601841	ExpressionStatement	alp -> more_flattened = code	1203:8:46543:46569	5601774	3	True				
ANR	5601842	AssignmentExpression	alp -> more_flattened = code		5601774	0		=			
ANR	5601843	PtrMemberAccess	alp -> more_flattened		5601774	0					
ANR	5601844	Identifier	alp		5601774	0					
ANR	5601845	Identifier	more_flattened		5601774	1					
ANR	5601846	Identifier	code		5601774	1					
ANR	5601847	ExpressionStatement	alp -> start . x = ( forth ? alp -> fi . lx0 : alp -> fi . lx1 )	1207:4:46682:46732	5601774	2	True				
ANR	5601848	AssignmentExpression	alp -> start . x = ( forth ? alp -> fi . lx0 : alp -> fi . lx1 )		5601774	0		=			
ANR	5601849	MemberAccess	alp -> start . x		5601774	0					
ANR	5601850	PtrMemberAccess	alp -> start		5601774	0					
ANR	5601851	Identifier	alp		5601774	0					
ANR	5601852	Identifier	start		5601774	1					
ANR	5601853	Identifier	x		5601774	1					
ANR	5601854	ConditionalExpression	forth ? alp -> fi . lx0 : alp -> fi . lx1		5601774	1					
ANR	5601855	Condition	forth		5601774	0					
ANR	5601856	Identifier	forth		5601774	0					
ANR	5601857	MemberAccess	alp -> fi . lx0		5601774	1					
ANR	5601858	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601859	Identifier	alp		5601774	0					
ANR	5601860	Identifier	fi		5601774	1					
ANR	5601861	Identifier	lx0		5601774	1					
ANR	5601862	MemberAccess	alp -> fi . lx1		5601774	2					
ANR	5601863	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601864	Identifier	alp		5601774	0					
ANR	5601865	Identifier	fi		5601774	1					
ANR	5601866	Identifier	lx1		5601774	1					
ANR	5601867	ExpressionStatement	alp -> start . y = ( forth ? alp -> fi . ly0 : alp -> fi . ly1 )	1208:4:46738:46788	5601774	3	True				
ANR	5601868	AssignmentExpression	alp -> start . y = ( forth ? alp -> fi . ly0 : alp -> fi . ly1 )		5601774	0		=			
ANR	5601869	MemberAccess	alp -> start . y		5601774	0					
ANR	5601870	PtrMemberAccess	alp -> start		5601774	0					
ANR	5601871	Identifier	alp		5601774	0					
ANR	5601872	Identifier	start		5601774	1					
ANR	5601873	Identifier	y		5601774	1					
ANR	5601874	ConditionalExpression	forth ? alp -> fi . ly0 : alp -> fi . ly1		5601774	1					
ANR	5601875	Condition	forth		5601774	0					
ANR	5601876	Identifier	forth		5601774	0					
ANR	5601877	MemberAccess	alp -> fi . ly0		5601774	1					
ANR	5601878	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601879	Identifier	alp		5601774	0					
ANR	5601880	Identifier	fi		5601774	1					
ANR	5601881	Identifier	ly0		5601774	1					
ANR	5601882	MemberAccess	alp -> fi . ly1		5601774	2					
ANR	5601883	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601884	Identifier	alp		5601774	0					
ANR	5601885	Identifier	fi		5601774	1					
ANR	5601886	Identifier	ly1		5601774	1					
ANR	5601887	ExpressionStatement	alp -> end . x = ( forth ? alp -> fi . lx1 : alp -> fi . lx0 )	1209:4:46794:46842	5601774	4	True				
ANR	5601888	AssignmentExpression	alp -> end . x = ( forth ? alp -> fi . lx1 : alp -> fi . lx0 )		5601774	0		=			
ANR	5601889	MemberAccess	alp -> end . x		5601774	0					
ANR	5601890	PtrMemberAccess	alp -> end		5601774	0					
ANR	5601891	Identifier	alp		5601774	0					
ANR	5601892	Identifier	end		5601774	1					
ANR	5601893	Identifier	x		5601774	1					
ANR	5601894	ConditionalExpression	forth ? alp -> fi . lx1 : alp -> fi . lx0		5601774	1					
ANR	5601895	Condition	forth		5601774	0					
ANR	5601896	Identifier	forth		5601774	0					
ANR	5601897	MemberAccess	alp -> fi . lx1		5601774	1					
ANR	5601898	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601899	Identifier	alp		5601774	0					
ANR	5601900	Identifier	fi		5601774	1					
ANR	5601901	Identifier	lx1		5601774	1					
ANR	5601902	MemberAccess	alp -> fi . lx0		5601774	2					
ANR	5601903	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601904	Identifier	alp		5601774	0					
ANR	5601905	Identifier	fi		5601774	1					
ANR	5601906	Identifier	lx0		5601774	1					
ANR	5601907	ExpressionStatement	alp -> end . y = ( forth ? alp -> fi . ly1 : alp -> fi . ly0 )	1210:4:46848:46896	5601774	5	True				
ANR	5601908	AssignmentExpression	alp -> end . y = ( forth ? alp -> fi . ly1 : alp -> fi . ly0 )		5601774	0		=			
ANR	5601909	MemberAccess	alp -> end . y		5601774	0					
ANR	5601910	PtrMemberAccess	alp -> end		5601774	0					
ANR	5601911	Identifier	alp		5601774	0					
ANR	5601912	Identifier	end		5601774	1					
ANR	5601913	Identifier	y		5601774	1					
ANR	5601914	ConditionalExpression	forth ? alp -> fi . ly1 : alp -> fi . ly0		5601774	1					
ANR	5601915	Condition	forth		5601774	0					
ANR	5601916	Identifier	forth		5601774	0					
ANR	5601917	MemberAccess	alp -> fi . ly1		5601774	1					
ANR	5601918	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601919	Identifier	alp		5601774	0					
ANR	5601920	Identifier	fi		5601774	1					
ANR	5601921	Identifier	ly1		5601774	1					
ANR	5601922	MemberAccess	alp -> fi . ly0		5601774	2					
ANR	5601923	PtrMemberAccess	alp -> fi		5601774	0					
ANR	5601924	Identifier	alp		5601774	0					
ANR	5601925	Identifier	fi		5601774	1					
ANR	5601926	Identifier	ly0		5601774	1					
ANR	5601927	ExpressionStatement	alp -> diff . x = alp -> end . x - alp -> start . x	1211:4:46902:46941	5601774	6	True				
ANR	5601928	AssignmentExpression	alp -> diff . x = alp -> end . x - alp -> start . x		5601774	0		=			
ANR	5601929	MemberAccess	alp -> diff . x		5601774	0					
ANR	5601930	PtrMemberAccess	alp -> diff		5601774	0					
ANR	5601931	Identifier	alp		5601774	0					
ANR	5601932	Identifier	diff		5601774	1					
ANR	5601933	Identifier	x		5601774	1					
ANR	5601934	AdditiveExpression	alp -> end . x - alp -> start . x		5601774	1		-			
ANR	5601935	MemberAccess	alp -> end . x		5601774	0					
ANR	5601936	PtrMemberAccess	alp -> end		5601774	0					
ANR	5601937	Identifier	alp		5601774	0					
ANR	5601938	Identifier	end		5601774	1					
ANR	5601939	Identifier	x		5601774	1					
ANR	5601940	MemberAccess	alp -> start . x		5601774	1					
ANR	5601941	PtrMemberAccess	alp -> start		5601774	0					
ANR	5601942	Identifier	alp		5601774	0					
ANR	5601943	Identifier	start		5601774	1					
ANR	5601944	Identifier	x		5601774	1					
ANR	5601945	ExpressionStatement	alp -> diff . y = alp -> end . y - alp -> start . y	1212:4:46947:46986	5601774	7	True				
ANR	5601946	AssignmentExpression	alp -> diff . y = alp -> end . y - alp -> start . y		5601774	0		=			
ANR	5601947	MemberAccess	alp -> diff . y		5601774	0					
ANR	5601948	PtrMemberAccess	alp -> diff		5601774	0					
ANR	5601949	Identifier	alp		5601774	0					
ANR	5601950	Identifier	diff		5601774	1					
ANR	5601951	Identifier	y		5601774	1					
ANR	5601952	AdditiveExpression	alp -> end . y - alp -> start . y		5601774	1		-			
ANR	5601953	MemberAccess	alp -> end . y		5601774	0					
ANR	5601954	PtrMemberAccess	alp -> end		5601774	0					
ANR	5601955	Identifier	alp		5601774	0					
ANR	5601956	Identifier	end		5601774	1					
ANR	5601957	Identifier	y		5601774	1					
ANR	5601958	MemberAccess	alp -> start . y		5601774	1					
ANR	5601959	PtrMemberAccess	alp -> start		5601774	0					
ANR	5601960	Identifier	alp		5601774	0					
ANR	5601961	Identifier	start		5601774	1					
ANR	5601962	Identifier	y		5601774	1					
ANR	5601963	ExpressionStatement	SET_NUM_ADJUST ( alp )	1213:4:46992:47011	5601774	8	True				
ANR	5601964	CallExpression	SET_NUM_ADJUST ( alp )		5601774	0					
ANR	5601965	Callee	SET_NUM_ADJUST		5601774	0					
ANR	5601966	Identifier	SET_NUM_ADJUST		5601774	0					
ANR	5601967	ArgumentList	alp		5601774	1					
ANR	5601968	Argument	alp		5601774	0					
ANR	5601969	Identifier	alp		5601774	0					
ANR	5601970	ExpressionStatement	( alp ) -> y_fast_max = MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y	1214:4:47017:47139	5601774	9	True				
ANR	5601971	AssignmentExpression	( alp ) -> y_fast_max = MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y		5601774	0		=			
ANR	5601972	PtrMemberAccess	( alp ) -> y_fast_max		5601774	0					
ANR	5601973	Identifier	alp		5601774	0					
ANR	5601974	Identifier	y_fast_max		5601774	1					
ANR	5601975	AdditiveExpression	MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 ) + alp -> start . y		5601774	1		+			
ANR	5601976	MultiplicativeExpression	MAX_MINUS_NUM_ADJUST ( alp ) / ( ( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1 )		5601774	0		/			
ANR	5601977	CallExpression	MAX_MINUS_NUM_ADJUST ( alp )		5601774	0					
ANR	5601978	Callee	MAX_MINUS_NUM_ADJUST		5601774	0					
ANR	5601979	Identifier	MAX_MINUS_NUM_ADJUST		5601774	0					
ANR	5601980	ArgumentList	alp		5601774	1					
ANR	5601981	Argument	alp		5601774	0					
ANR	5601982	Identifier	alp		5601774	0					
ANR	5601983	InclusiveOrExpression	( alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x ) | 1		5601774	1		|			
ANR	5601984	ConditionalExpression	alp -> diff . x >= 0 ? alp -> diff . x : - alp -> diff . x		5601774	0					
ANR	5601985	Condition	alp -> diff . x >= 0		5601774	0					
ANR	5601986	RelationalExpression	alp -> diff . x >= 0		5601774	0		>=			
ANR	5601987	MemberAccess	alp -> diff . x		5601774	0					
ANR	5601988	PtrMemberAccess	alp -> diff		5601774	0					
ANR	5601989	Identifier	alp		5601774	0					
ANR	5601990	Identifier	diff		5601774	1					
ANR	5601991	Identifier	x		5601774	1					
ANR	5601992	PrimaryExpression	0		5601774	1					
ANR	5601993	MemberAccess	alp -> diff . x		5601774	1					
ANR	5601994	PtrMemberAccess	alp -> diff		5601774	0					
ANR	5601995	Identifier	alp		5601774	0					
ANR	5601996	Identifier	diff		5601774	1					
ANR	5601997	Identifier	x		5601774	1					
ANR	5601998	UnaryOperationExpression	- alp -> diff . x		5601774	2					
ANR	5601999	UnaryOperator	-		5601774	0					
ANR	5602000	MemberAccess	alp -> diff . x		5601774	1					
ANR	5602001	PtrMemberAccess	alp -> diff		5601774	0					
ANR	5602002	Identifier	alp		5601774	0					
ANR	5602003	Identifier	diff		5601774	1					
ANR	5602004	Identifier	x		5601774	1					
ANR	5602005	PrimaryExpression	1		5601774	1					
ANR	5602006	MemberAccess	alp -> start . y		5601774	1					
ANR	5602007	PtrMemberAccess	alp -> start		5601774	0					
ANR	5602008	Identifier	alp		5601774	0					
ANR	5602009	Identifier	start		5601774	1					
ANR	5602010	Identifier	y		5601774	1					
ANR	5602011	ReturnStatement	return 0 ;	1216:4:47145:47153	5601774	10	True				
ANR	5602012	PrimaryExpression	0		5601774	0					
ANR	5602013	ReturnType	static int		5601774	1					
ANR	5602014	Identifier	step_al		5601774	2					
ANR	5602015	ParameterList	"active_line * alp , bool move_iterator"		5601774	3					
ANR	5602016	Parameter	active_line * alp	1190:8:46192:46207	5601774	0	True				
ANR	5602017	ParameterType	active_line *		5601774	0					
ANR	5602018	Identifier	alp		5601774	1					
ANR	5602019	Parameter	bool move_iterator	1190:26:46210:46227	5601774	1	True				
ANR	5602020	ParameterType	bool		5601774	0					
ANR	5602021	Identifier	move_iterator		5601774	1					
ANR	5602022	CFGEntryNode	ENTRY		5601774		True				
ANR	5602023	CFGExitNode	EXIT		5601774		True				
ANR	5602024	Symbol	alp -> direction		5601774						
ANR	5602025	Symbol	code		5601774						
ANR	5602026	Symbol	alp -> end		5601774						
ANR	5602027	Symbol	move_iterator		5601774						
ANR	5602028	Symbol	alp -> fi . lx0		5601774						
ANR	5602029	Symbol	alp -> fi . lx1		5601774						
ANR	5602030	Symbol	( alp ) -> y_fast_max		5601774						
ANR	5602031	Symbol	gx_flattened_iterator__prev		5601774						
ANR	5602032	Symbol	gx_flattened_iterator__next		5601774						
ANR	5602033	Symbol	alp -> fi		5601774						
ANR	5602034	Symbol	alp -> fi . curve		5601774						
ANR	5602035	Symbol	DIR_UP		5601774						
ANR	5602036	Symbol	MAX_MINUS_NUM_ADJUST		5601774						
ANR	5602037	Symbol	alp -> diff . x		5601774						
ANR	5602038	Symbol	alp		5601774						
ANR	5602039	Symbol	& alp -> fi		5601774						
ANR	5602040	Symbol	alp -> diff . y		5601774						
ANR	5602041	Symbol	alp -> fi . ly0		5601774						
ANR	5602042	Symbol	alp -> fi . ly1		5601774						
ANR	5602043	Symbol	alp -> diff		5601774						
ANR	5602044	Symbol	forth		5601774						
ANR	5602045	Symbol	* alp		5601774						
ANR	5602046	Symbol	alp -> start . y		5601774						
ANR	5602047	Symbol	alp -> start . x		5601774						
ANR	5602048	Symbol	alp -> more_flattened		5601774						
ANR	5602049	Symbol	alp -> end . y		5601774						
ANR	5602050	Symbol	alp -> end . x		5601774						
ANR	5602051	Symbol	alp -> start		5601774						
ANR	5602052	Function	init_al	1219:0:47158:49706							
ANR	5602053	FunctionDef	"init_al (active_line * alp , const segment * s0 , const segment * s1 , const line_list * ll)"		5602052	0					
ANR	5602054	CompoundStatement		1221:0:47254:49706	5602052	0					
ANR	5602055	IdentifierDeclStatement	const segment * ss = ( alp -> direction == DIR_UP ? s1 : s0 ) ;	1222:4:47260:47316	5602052	0	True				
ANR	5602056	IdentifierDecl	* ss = ( alp -> direction == DIR_UP ? s1 : s0 )		5602052	0					
ANR	5602057	IdentifierDeclType	const segment *		5602052	0					
ANR	5602058	Identifier	ss		5602052	1					
ANR	5602059	AssignmentExpression	* ss = ( alp -> direction == DIR_UP ? s1 : s0 )		5602052	2		=			
ANR	5602060	Identifier	ss		5602052	0					
ANR	5602061	ConditionalExpression	alp -> direction == DIR_UP ? s1 : s0		5602052	1					
ANR	5602062	Condition	alp -> direction == DIR_UP		5602052	0					
ANR	5602063	EqualityExpression	alp -> direction == DIR_UP		5602052	0		==			
ANR	5602064	PtrMemberAccess	alp -> direction		5602052	0					
ANR	5602065	Identifier	alp		5602052	0					
ANR	5602066	Identifier	direction		5602052	1					
ANR	5602067	Identifier	DIR_UP		5602052	1					
ANR	5602068	Identifier	s1		5602052	1					
ANR	5602069	Identifier	s0		5602052	2					
ANR	5602070	IdentifierDeclStatement	bool curve = ( ss != NULL && ss -> type == s_curve ) ;	1224:4:47372:47420	5602052	1	True				
ANR	5602071	IdentifierDecl	curve = ( ss != NULL && ss -> type == s_curve )		5602052	0					
ANR	5602072	IdentifierDeclType	bool		5602052	0					
ANR	5602073	Identifier	curve		5602052	1					
ANR	5602074	AssignmentExpression	curve = ( ss != NULL && ss -> type == s_curve )		5602052	2		=			
ANR	5602075	Identifier	curve		5602052	0					
ANR	5602076	AndExpression	ss != NULL && ss -> type == s_curve		5602052	1		&&			
ANR	5602077	EqualityExpression	ss != NULL		5602052	0		!=			
ANR	5602078	Identifier	ss		5602052	0					
ANR	5602079	Identifier	NULL		5602052	1					
ANR	5602080	EqualityExpression	ss -> type == s_curve		5602052	1		==			
ANR	5602081	PtrMemberAccess	ss -> type		5602052	0					
ANR	5602082	Identifier	ss		5602052	0					
ANR	5602083	Identifier	type		5602052	1					
ANR	5602084	Identifier	s_curve		5602052	1					
ANR	5602085	IdentifierDeclStatement	int code ;	1225:4:47426:47434	5602052	2	True				
ANR	5602086	IdentifierDecl	code		5602052	0					
ANR	5602087	IdentifierDeclType	int		5602052	0					
ANR	5602088	Identifier	code		5602052	1					
ANR	5602089	IfStatement	if ( curve )		5602052	3					
ANR	5602090	Condition	curve	1227:8:47445:47449	5602052	0	True				
ANR	5602091	Identifier	curve		5602052	0					
ANR	5602092	CompoundStatement		7:15:197:197	5602052	1					
ANR	5602093	IfStatement	if ( alp -> direction == DIR_UP )		5602052	0					
ANR	5602094	Condition	alp -> direction == DIR_UP	1228:12:47466:47489	5602052	0	True				
ANR	5602095	EqualityExpression	alp -> direction == DIR_UP		5602052	0		==			
ANR	5602096	PtrMemberAccess	alp -> direction		5602052	0					
ANR	5602097	Identifier	alp		5602052	0					
ANR	5602098	Identifier	direction		5602052	1					
ANR	5602099	Identifier	DIR_UP		5602052	1					
ANR	5602100	CompoundStatement		10:12:316:389	5602052	1					
ANR	5602101	IdentifierDeclStatement	const curve_segment * cs = ( const curve_segment * ) s1 ;	1229:12:47506:47557	5602052	0	True				
ANR	5602102	IdentifierDecl	* cs = ( const curve_segment * ) s1		5602052	0					
ANR	5602103	IdentifierDeclType	const curve_segment *		5602052	0					
ANR	5602104	Identifier	cs		5602052	1					
ANR	5602105	AssignmentExpression	* cs = ( const curve_segment * ) s1		5602052	2		=			
ANR	5602106	Identifier	cs		5602052	0					
ANR	5602107	CastExpression	( const curve_segment * ) s1		5602052	1					
ANR	5602108	CastTarget	const curve_segment *		5602052	0					
ANR	5602109	Identifier	s1		5602052	1					
ANR	5602110	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat ) ;"	1230:12:47571:47644	5602052	1	True				
ANR	5602111	IdentifierDecl	"k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	0					
ANR	5602112	IdentifierDeclType	int		5602052	0					
ANR	5602113	Identifier	k		5602052	1					
ANR	5602114	AssignmentExpression	"k = gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	2		=			
ANR	5602115	Identifier	k		5602052	0					
ANR	5602116	CallExpression	"gx_curve_log2_samples ( s0 -> pt . x , s0 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	1					
ANR	5602117	Callee	gx_curve_log2_samples		5602052	0					
ANR	5602118	Identifier	gx_curve_log2_samples		5602052	0					
ANR	5602119	ArgumentList	s0 -> pt . x		5602052	1					
ANR	5602120	Argument	s0 -> pt . x		5602052	0					
ANR	5602121	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602122	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602123	Identifier	s0		5602052	0					
ANR	5602124	Identifier	pt		5602052	1					
ANR	5602125	Identifier	x		5602052	1					
ANR	5602126	Argument	s0 -> pt . y		5602052	1					
ANR	5602127	MemberAccess	s0 -> pt . y		5602052	0					
ANR	5602128	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602129	Identifier	s0		5602052	0					
ANR	5602130	Identifier	pt		5602052	1					
ANR	5602131	Identifier	y		5602052	1					
ANR	5602132	Argument	cs		5602052	2					
ANR	5602133	Identifier	cs		5602052	0					
ANR	5602134	Argument	ll -> fo -> fixed_flat		5602052	3					
ANR	5602135	PtrMemberAccess	ll -> fo -> fixed_flat		5602052	0					
ANR	5602136	PtrMemberAccess	ll -> fo		5602052	0					
ANR	5602137	Identifier	ll		5602052	0					
ANR	5602138	Identifier	fo		5602052	1					
ANR	5602139	Identifier	fixed_flat		5602052	1					
ANR	5602140	ExpressionStatement	"gx_flattened_iterator__init ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , ( const curve_segment * ) s1 , k )"	1232:12:47659:47762	5602052	2	True				
ANR	5602141	CallExpression	"gx_flattened_iterator__init ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , ( const curve_segment * ) s1 , k )"		5602052	0					
ANR	5602142	Callee	gx_flattened_iterator__init		5602052	0					
ANR	5602143	Identifier	gx_flattened_iterator__init		5602052	0					
ANR	5602144	ArgumentList	& alp -> fi		5602052	1					
ANR	5602145	Argument	& alp -> fi		5602052	0					
ANR	5602146	UnaryOperationExpression	& alp -> fi		5602052	0					
ANR	5602147	UnaryOperator	&		5602052	0					
ANR	5602148	PtrMemberAccess	alp -> fi		5602052	1					
ANR	5602149	Identifier	alp		5602052	0					
ANR	5602150	Identifier	fi		5602052	1					
ANR	5602151	Argument	s0 -> pt . x		5602052	1					
ANR	5602152	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602153	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602154	Identifier	s0		5602052	0					
ANR	5602155	Identifier	pt		5602052	1					
ANR	5602156	Identifier	x		5602052	1					
ANR	5602157	Argument	s0 -> pt . y		5602052	2					
ANR	5602158	MemberAccess	s0 -> pt . y		5602052	0					
ANR	5602159	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602160	Identifier	s0		5602052	0					
ANR	5602161	Identifier	pt		5602052	1					
ANR	5602162	Identifier	y		5602052	1					
ANR	5602163	Argument	( const curve_segment * ) s1		5602052	3					
ANR	5602164	CastExpression	( const curve_segment * ) s1		5602052	0					
ANR	5602165	CastTarget	const curve_segment *		5602052	0					
ANR	5602166	Identifier	s1		5602052	1					
ANR	5602167	Argument	k		5602052	4					
ANR	5602168	Identifier	k		5602052	0					
ANR	5602169	ExpressionStatement	"code = step_al ( alp , true )"	1234:12:47776:47801	5602052	3	True				
ANR	5602170	AssignmentExpression	"code = step_al ( alp , true )"		5602052	0		=			
ANR	5602171	Identifier	code		5602052	0					
ANR	5602172	CallExpression	"step_al ( alp , true )"		5602052	1					
ANR	5602173	Callee	step_al		5602052	0					
ANR	5602174	Identifier	step_al		5602052	0					
ANR	5602175	ArgumentList	alp		5602052	1					
ANR	5602176	Argument	alp		5602052	0					
ANR	5602177	Identifier	alp		5602052	0					
ANR	5602178	Argument	true		5602052	1					
ANR	5602179	Identifier	true		5602052	0					
ANR	5602180	IfStatement	if ( code < 0 )		5602052	4					
ANR	5602181	Condition	code < 0	1235:16:47819:47826	5602052	0	True				
ANR	5602182	RelationalExpression	code < 0		5602052	0		<			
ANR	5602183	Identifier	code		5602052	0					
ANR	5602184	PrimaryExpression	0		5602052	1					
ANR	5602185	ReturnStatement	return code ;	1236:16:47845:47856	5602052	1	True				
ANR	5602186	Identifier	code		5602052	0					
ANR	5602187	IfStatement	if ( ! ll -> fo -> fill_by_trapezoids )		5602052	5					
ANR	5602188	Condition	! ll -> fo -> fill_by_trapezoids	1237:16:47874:47900	5602052	0	True				
ANR	5602189	UnaryOperationExpression	! ll -> fo -> fill_by_trapezoids		5602052	0					
ANR	5602190	UnaryOperator	!		5602052	0					
ANR	5602191	PtrMemberAccess	ll -> fo -> fill_by_trapezoids		5602052	1					
ANR	5602192	PtrMemberAccess	ll -> fo		5602052	0					
ANR	5602193	Identifier	ll		5602052	0					
ANR	5602194	Identifier	fo		5602052	1					
ANR	5602195	Identifier	fill_by_trapezoids		5602052	1					
ANR	5602196	CompoundStatement		17:45:648:648	5602052	1					
ANR	5602197	ExpressionStatement	alp -> monotonic_y = ( s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y )	1238:16:47921:48010	5602052	0	True				
ANR	5602198	AssignmentExpression	alp -> monotonic_y = ( s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y )		5602052	0		=			
ANR	5602199	PtrMemberAccess	alp -> monotonic_y		5602052	0					
ANR	5602200	Identifier	alp		5602052	0					
ANR	5602201	Identifier	monotonic_y		5602052	1					
ANR	5602202	AndExpression	s0 -> pt . y <= cs -> p1 . y && cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y		5602052	1		&&			
ANR	5602203	RelationalExpression	s0 -> pt . y <= cs -> p1 . y		5602052	0		<=			
ANR	5602204	MemberAccess	s0 -> pt . y		5602052	0					
ANR	5602205	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602206	Identifier	s0		5602052	0					
ANR	5602207	Identifier	pt		5602052	1					
ANR	5602208	Identifier	y		5602052	1					
ANR	5602209	MemberAccess	cs -> p1 . y		5602052	1					
ANR	5602210	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602211	Identifier	cs		5602052	0					
ANR	5602212	Identifier	p1		5602052	1					
ANR	5602213	Identifier	y		5602052	1					
ANR	5602214	AndExpression	cs -> p1 . y <= cs -> p2 . y && cs -> p2 . y <= cs -> pt . y		5602052	1		&&			
ANR	5602215	RelationalExpression	cs -> p1 . y <= cs -> p2 . y		5602052	0		<=			
ANR	5602216	MemberAccess	cs -> p1 . y		5602052	0					
ANR	5602217	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602218	Identifier	cs		5602052	0					
ANR	5602219	Identifier	p1		5602052	1					
ANR	5602220	Identifier	y		5602052	1					
ANR	5602221	MemberAccess	cs -> p2 . y		5602052	1					
ANR	5602222	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602223	Identifier	cs		5602052	0					
ANR	5602224	Identifier	p2		5602052	1					
ANR	5602225	Identifier	y		5602052	1					
ANR	5602226	RelationalExpression	cs -> p2 . y <= cs -> pt . y		5602052	1		<=			
ANR	5602227	MemberAccess	cs -> p2 . y		5602052	0					
ANR	5602228	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602229	Identifier	cs		5602052	0					
ANR	5602230	Identifier	p2		5602052	1					
ANR	5602231	Identifier	y		5602052	1					
ANR	5602232	MemberAccess	cs -> pt . y		5602052	1					
ANR	5602233	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602234	Identifier	cs		5602052	0					
ANR	5602235	Identifier	pt		5602052	1					
ANR	5602236	Identifier	y		5602052	1					
ANR	5602237	ExpressionStatement	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )	1239:16:48028:48226	5602052	1	True				
ANR	5602238	AssignmentExpression	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		5602052	0		=			
ANR	5602239	PtrMemberAccess	alp -> monotonic_x		5602052	0					
ANR	5602240	Identifier	alp		5602052	0					
ANR	5602241	Identifier	monotonic_x		5602052	1					
ANR	5602242	OrExpression	( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		5602052	1		||			
ANR	5602243	AndExpression	s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		5602052	0		&&			
ANR	5602244	RelationalExpression	s0 -> pt . x <= cs -> p1 . x		5602052	0		<=			
ANR	5602245	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602246	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602247	Identifier	s0		5602052	0					
ANR	5602248	Identifier	pt		5602052	1					
ANR	5602249	Identifier	x		5602052	1					
ANR	5602250	MemberAccess	cs -> p1 . x		5602052	1					
ANR	5602251	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602252	Identifier	cs		5602052	0					
ANR	5602253	Identifier	p1		5602052	1					
ANR	5602254	Identifier	x		5602052	1					
ANR	5602255	AndExpression	cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		5602052	1		&&			
ANR	5602256	RelationalExpression	cs -> p1 . x <= cs -> p2 . x		5602052	0		<=			
ANR	5602257	MemberAccess	cs -> p1 . x		5602052	0					
ANR	5602258	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602259	Identifier	cs		5602052	0					
ANR	5602260	Identifier	p1		5602052	1					
ANR	5602261	Identifier	x		5602052	1					
ANR	5602262	MemberAccess	cs -> p2 . x		5602052	1					
ANR	5602263	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602264	Identifier	cs		5602052	0					
ANR	5602265	Identifier	p2		5602052	1					
ANR	5602266	Identifier	x		5602052	1					
ANR	5602267	RelationalExpression	cs -> p2 . x <= cs -> pt . x		5602052	1		<=			
ANR	5602268	MemberAccess	cs -> p2 . x		5602052	0					
ANR	5602269	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602270	Identifier	cs		5602052	0					
ANR	5602271	Identifier	p2		5602052	1					
ANR	5602272	Identifier	x		5602052	1					
ANR	5602273	MemberAccess	cs -> pt . x		5602052	1					
ANR	5602274	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602275	Identifier	cs		5602052	0					
ANR	5602276	Identifier	pt		5602052	1					
ANR	5602277	Identifier	x		5602052	1					
ANR	5602278	AndExpression	s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		5602052	1		&&			
ANR	5602279	RelationalExpression	s0 -> pt . x >= cs -> p1 . x		5602052	0		>=			
ANR	5602280	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602281	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602282	Identifier	s0		5602052	0					
ANR	5602283	Identifier	pt		5602052	1					
ANR	5602284	Identifier	x		5602052	1					
ANR	5602285	MemberAccess	cs -> p1 . x		5602052	1					
ANR	5602286	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602287	Identifier	cs		5602052	0					
ANR	5602288	Identifier	p1		5602052	1					
ANR	5602289	Identifier	x		5602052	1					
ANR	5602290	AndExpression	cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		5602052	1		&&			
ANR	5602291	RelationalExpression	cs -> p1 . x >= cs -> p2 . x		5602052	0		>=			
ANR	5602292	MemberAccess	cs -> p1 . x		5602052	0					
ANR	5602293	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602294	Identifier	cs		5602052	0					
ANR	5602295	Identifier	p1		5602052	1					
ANR	5602296	Identifier	x		5602052	1					
ANR	5602297	MemberAccess	cs -> p2 . x		5602052	1					
ANR	5602298	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602299	Identifier	cs		5602052	0					
ANR	5602300	Identifier	p2		5602052	1					
ANR	5602301	Identifier	x		5602052	1					
ANR	5602302	RelationalExpression	cs -> p2 . x >= cs -> pt . x		5602052	1		>=			
ANR	5602303	MemberAccess	cs -> p2 . x		5602052	0					
ANR	5602304	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602305	Identifier	cs		5602052	0					
ANR	5602306	Identifier	p2		5602052	1					
ANR	5602307	Identifier	x		5602052	1					
ANR	5602308	MemberAccess	cs -> pt . x		5602052	1					
ANR	5602309	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602310	Identifier	cs		5602052	0					
ANR	5602311	Identifier	pt		5602052	1					
ANR	5602312	Identifier	x		5602052	1					
ANR	5602313	ElseStatement	else		5602052	0					
ANR	5602314	CompoundStatement		25:12:1168:1177	5602052	0					
ANR	5602315	IdentifierDeclStatement	const curve_segment * cs = ( const curve_segment * ) s0 ;	1243:12:48271:48322	5602052	0	True				
ANR	5602316	IdentifierDecl	* cs = ( const curve_segment * ) s0		5602052	0					
ANR	5602317	IdentifierDeclType	const curve_segment *		5602052	0					
ANR	5602318	Identifier	cs		5602052	1					
ANR	5602319	AssignmentExpression	* cs = ( const curve_segment * ) s0		5602052	2		=			
ANR	5602320	Identifier	cs		5602052	0					
ANR	5602321	CastExpression	( const curve_segment * ) s0		5602052	1					
ANR	5602322	CastTarget	const curve_segment *		5602052	0					
ANR	5602323	Identifier	s0		5602052	1					
ANR	5602324	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat ) ;"	1244:12:48336:48409	5602052	1	True				
ANR	5602325	IdentifierDecl	"k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	0					
ANR	5602326	IdentifierDeclType	int		5602052	0					
ANR	5602327	Identifier	k		5602052	1					
ANR	5602328	AssignmentExpression	"k = gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	2		=			
ANR	5602329	Identifier	k		5602052	0					
ANR	5602330	CallExpression	"gx_curve_log2_samples ( s1 -> pt . x , s1 -> pt . y , cs , ll -> fo -> fixed_flat )"		5602052	1					
ANR	5602331	Callee	gx_curve_log2_samples		5602052	0					
ANR	5602332	Identifier	gx_curve_log2_samples		5602052	0					
ANR	5602333	ArgumentList	s1 -> pt . x		5602052	1					
ANR	5602334	Argument	s1 -> pt . x		5602052	0					
ANR	5602335	MemberAccess	s1 -> pt . x		5602052	0					
ANR	5602336	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602337	Identifier	s1		5602052	0					
ANR	5602338	Identifier	pt		5602052	1					
ANR	5602339	Identifier	x		5602052	1					
ANR	5602340	Argument	s1 -> pt . y		5602052	1					
ANR	5602341	MemberAccess	s1 -> pt . y		5602052	0					
ANR	5602342	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602343	Identifier	s1		5602052	0					
ANR	5602344	Identifier	pt		5602052	1					
ANR	5602345	Identifier	y		5602052	1					
ANR	5602346	Argument	cs		5602052	2					
ANR	5602347	Identifier	cs		5602052	0					
ANR	5602348	Argument	ll -> fo -> fixed_flat		5602052	3					
ANR	5602349	PtrMemberAccess	ll -> fo -> fixed_flat		5602052	0					
ANR	5602350	PtrMemberAccess	ll -> fo		5602052	0					
ANR	5602351	Identifier	ll		5602052	0					
ANR	5602352	Identifier	fo		5602052	1					
ANR	5602353	Identifier	fixed_flat		5602052	1					
ANR	5602354	IdentifierDeclStatement	bool more ;	1245:12:48423:48432	5602052	2	True				
ANR	5602355	IdentifierDecl	more		5602052	0					
ANR	5602356	IdentifierDeclType	bool		5602052	0					
ANR	5602357	Identifier	more		5602052	1					
ANR	5602358	ExpressionStatement	"gx_flattened_iterator__init ( & alp -> fi , s1 -> pt . x , s1 -> pt . y , ( const curve_segment * ) s0 , k )"	1247:12:48447:48550	5602052	3	True				
ANR	5602359	CallExpression	"gx_flattened_iterator__init ( & alp -> fi , s1 -> pt . x , s1 -> pt . y , ( const curve_segment * ) s0 , k )"		5602052	0					
ANR	5602360	Callee	gx_flattened_iterator__init		5602052	0					
ANR	5602361	Identifier	gx_flattened_iterator__init		5602052	0					
ANR	5602362	ArgumentList	& alp -> fi		5602052	1					
ANR	5602363	Argument	& alp -> fi		5602052	0					
ANR	5602364	UnaryOperationExpression	& alp -> fi		5602052	0					
ANR	5602365	UnaryOperator	&		5602052	0					
ANR	5602366	PtrMemberAccess	alp -> fi		5602052	1					
ANR	5602367	Identifier	alp		5602052	0					
ANR	5602368	Identifier	fi		5602052	1					
ANR	5602369	Argument	s1 -> pt . x		5602052	1					
ANR	5602370	MemberAccess	s1 -> pt . x		5602052	0					
ANR	5602371	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602372	Identifier	s1		5602052	0					
ANR	5602373	Identifier	pt		5602052	1					
ANR	5602374	Identifier	x		5602052	1					
ANR	5602375	Argument	s1 -> pt . y		5602052	2					
ANR	5602376	MemberAccess	s1 -> pt . y		5602052	0					
ANR	5602377	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602378	Identifier	s1		5602052	0					
ANR	5602379	Identifier	pt		5602052	1					
ANR	5602380	Identifier	y		5602052	1					
ANR	5602381	Argument	( const curve_segment * ) s0		5602052	3					
ANR	5602382	CastExpression	( const curve_segment * ) s0		5602052	0					
ANR	5602383	CastTarget	const curve_segment *		5602052	0					
ANR	5602384	Identifier	s0		5602052	1					
ANR	5602385	Argument	k		5602052	4					
ANR	5602386	Identifier	k		5602052	0					
ANR	5602387	ExpressionStatement	alp -> more_flattened = false	1249:12:48564:48591	5602052	4	True				
ANR	5602388	AssignmentExpression	alp -> more_flattened = false		5602052	0		=			
ANR	5602389	PtrMemberAccess	alp -> more_flattened		5602052	0					
ANR	5602390	Identifier	alp		5602052	0					
ANR	5602391	Identifier	more_flattened		5602052	1					
ANR	5602392	Identifier	false		5602052	1					
ANR	5602393	DoStatement	do		5602052	5					
ANR	5602394	CompoundStatement		30:15:1353:1353	5602052	0					
ANR	5602395	ExpressionStatement	code = gx_flattened_iterator__next ( & alp -> fi )	1251:16:48626:48670	5602052	0	True				
ANR	5602396	AssignmentExpression	code = gx_flattened_iterator__next ( & alp -> fi )		5602052	0		=			
ANR	5602397	Identifier	code		5602052	0					
ANR	5602398	CallExpression	gx_flattened_iterator__next ( & alp -> fi )		5602052	1					
ANR	5602399	Callee	gx_flattened_iterator__next		5602052	0					
ANR	5602400	Identifier	gx_flattened_iterator__next		5602052	0					
ANR	5602401	ArgumentList	& alp -> fi		5602052	1					
ANR	5602402	Argument	& alp -> fi		5602052	0					
ANR	5602403	UnaryOperationExpression	& alp -> fi		5602052	0					
ANR	5602404	UnaryOperator	&		5602052	0					
ANR	5602405	PtrMemberAccess	alp -> fi		5602052	1					
ANR	5602406	Identifier	alp		5602052	0					
ANR	5602407	Identifier	fi		5602052	1					
ANR	5602408	IfStatement	if ( code < 0 )		5602052	1					
ANR	5602409	Condition	code < 0	1252:20:48692:48699	5602052	0	True				
ANR	5602410	RelationalExpression	code < 0		5602052	0		<			
ANR	5602411	Identifier	code		5602052	0					
ANR	5602412	PrimaryExpression	0		5602052	1					
ANR	5602413	ReturnStatement	return code ;	1253:20:48722:48733	5602052	1	True				
ANR	5602414	Identifier	code		5602052	0					
ANR	5602415	ExpressionStatement	more = code	1254:16:48751:48762	5602052	2	True				
ANR	5602416	AssignmentExpression	more = code		5602052	0		=			
ANR	5602417	Identifier	more		5602052	0					
ANR	5602418	Identifier	code		5602052	1					
ANR	5602419	ExpressionStatement	alp -> more_flattened |= more	1255:16:48780:48807	5602052	3	True				
ANR	5602420	AssignmentExpression	alp -> more_flattened |= more		5602052	0		|=			
ANR	5602421	PtrMemberAccess	alp -> more_flattened		5602052	0					
ANR	5602422	Identifier	alp		5602052	0					
ANR	5602423	Identifier	more_flattened		5602052	1					
ANR	5602424	Identifier	more		5602052	1					
ANR	5602425	Condition	more	1256:20:48829:48832	5602052	1	True				
ANR	5602426	Identifier	more		5602052	0					
ANR	5602427	ExpressionStatement	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , alp -> more_flattened )"	1257:12:48848:48920	5602052	6	True				
ANR	5602428	CallExpression	"gx_flattened_iterator__switch_to_backscan ( & alp -> fi , alp -> more_flattened )"		5602052	0					
ANR	5602429	Callee	gx_flattened_iterator__switch_to_backscan		5602052	0					
ANR	5602430	Identifier	gx_flattened_iterator__switch_to_backscan		5602052	0					
ANR	5602431	ArgumentList	& alp -> fi		5602052	1					
ANR	5602432	Argument	& alp -> fi		5602052	0					
ANR	5602433	UnaryOperationExpression	& alp -> fi		5602052	0					
ANR	5602434	UnaryOperator	&		5602052	0					
ANR	5602435	PtrMemberAccess	alp -> fi		5602052	1					
ANR	5602436	Identifier	alp		5602052	0					
ANR	5602437	Identifier	fi		5602052	1					
ANR	5602438	Argument	alp -> more_flattened		5602052	1					
ANR	5602439	PtrMemberAccess	alp -> more_flattened		5602052	0					
ANR	5602440	Identifier	alp		5602052	0					
ANR	5602441	Identifier	more_flattened		5602052	1					
ANR	5602442	ExpressionStatement	"code = step_al ( alp , false )"	1258:12:48934:48960	5602052	7	True				
ANR	5602443	AssignmentExpression	"code = step_al ( alp , false )"		5602052	0		=			
ANR	5602444	Identifier	code		5602052	0					
ANR	5602445	CallExpression	"step_al ( alp , false )"		5602052	1					
ANR	5602446	Callee	step_al		5602052	0					
ANR	5602447	Identifier	step_al		5602052	0					
ANR	5602448	ArgumentList	alp		5602052	1					
ANR	5602449	Argument	alp		5602052	0					
ANR	5602450	Identifier	alp		5602052	0					
ANR	5602451	Argument	false		5602052	1					
ANR	5602452	Identifier	false		5602052	0					
ANR	5602453	IfStatement	if ( code < 0 )		5602052	8					
ANR	5602454	Condition	code < 0	1259:16:48978:48985	5602052	0	True				
ANR	5602455	RelationalExpression	code < 0		5602052	0		<			
ANR	5602456	Identifier	code		5602052	0					
ANR	5602457	PrimaryExpression	0		5602052	1					
ANR	5602458	ReturnStatement	return code ;	1260:16:49004:49015	5602052	1	True				
ANR	5602459	Identifier	code		5602052	0					
ANR	5602460	IfStatement	if ( ! ll -> fo -> fill_by_trapezoids )		5602052	9					
ANR	5602461	Condition	! ll -> fo -> fill_by_trapezoids	1261:16:49033:49059	5602052	0	True				
ANR	5602462	UnaryOperationExpression	! ll -> fo -> fill_by_trapezoids		5602052	0					
ANR	5602463	UnaryOperator	!		5602052	0					
ANR	5602464	PtrMemberAccess	ll -> fo -> fill_by_trapezoids		5602052	1					
ANR	5602465	PtrMemberAccess	ll -> fo		5602052	0					
ANR	5602466	Identifier	ll		5602052	0					
ANR	5602467	Identifier	fo		5602052	1					
ANR	5602468	Identifier	fill_by_trapezoids		5602052	1					
ANR	5602469	CompoundStatement		41:45:1807:1807	5602052	1					
ANR	5602470	ExpressionStatement	alp -> monotonic_y = ( s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y )	1262:16:49080:49169	5602052	0	True				
ANR	5602471	AssignmentExpression	alp -> monotonic_y = ( s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y )		5602052	0		=			
ANR	5602472	PtrMemberAccess	alp -> monotonic_y		5602052	0					
ANR	5602473	Identifier	alp		5602052	0					
ANR	5602474	Identifier	monotonic_y		5602052	1					
ANR	5602475	AndExpression	s0 -> pt . y >= cs -> p1 . y && cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y		5602052	1		&&			
ANR	5602476	RelationalExpression	s0 -> pt . y >= cs -> p1 . y		5602052	0		>=			
ANR	5602477	MemberAccess	s0 -> pt . y		5602052	0					
ANR	5602478	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602479	Identifier	s0		5602052	0					
ANR	5602480	Identifier	pt		5602052	1					
ANR	5602481	Identifier	y		5602052	1					
ANR	5602482	MemberAccess	cs -> p1 . y		5602052	1					
ANR	5602483	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602484	Identifier	cs		5602052	0					
ANR	5602485	Identifier	p1		5602052	1					
ANR	5602486	Identifier	y		5602052	1					
ANR	5602487	AndExpression	cs -> p1 . y >= cs -> p2 . y && cs -> p2 . y >= cs -> pt . y		5602052	1		&&			
ANR	5602488	RelationalExpression	cs -> p1 . y >= cs -> p2 . y		5602052	0		>=			
ANR	5602489	MemberAccess	cs -> p1 . y		5602052	0					
ANR	5602490	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602491	Identifier	cs		5602052	0					
ANR	5602492	Identifier	p1		5602052	1					
ANR	5602493	Identifier	y		5602052	1					
ANR	5602494	MemberAccess	cs -> p2 . y		5602052	1					
ANR	5602495	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602496	Identifier	cs		5602052	0					
ANR	5602497	Identifier	p2		5602052	1					
ANR	5602498	Identifier	y		5602052	1					
ANR	5602499	RelationalExpression	cs -> p2 . y >= cs -> pt . y		5602052	1		>=			
ANR	5602500	MemberAccess	cs -> p2 . y		5602052	0					
ANR	5602501	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602502	Identifier	cs		5602052	0					
ANR	5602503	Identifier	p2		5602052	1					
ANR	5602504	Identifier	y		5602052	1					
ANR	5602505	MemberAccess	cs -> pt . y		5602052	1					
ANR	5602506	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602507	Identifier	cs		5602052	0					
ANR	5602508	Identifier	pt		5602052	1					
ANR	5602509	Identifier	y		5602052	1					
ANR	5602510	ExpressionStatement	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )	1263:16:49187:49385	5602052	1	True				
ANR	5602511	AssignmentExpression	alp -> monotonic_x = ( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		5602052	0		=			
ANR	5602512	PtrMemberAccess	alp -> monotonic_x		5602052	0					
ANR	5602513	Identifier	alp		5602052	0					
ANR	5602514	Identifier	monotonic_x		5602052	1					
ANR	5602515	OrExpression	( s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x ) || ( s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x )		5602052	1		||			
ANR	5602516	AndExpression	s0 -> pt . x <= cs -> p1 . x && cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		5602052	0		&&			
ANR	5602517	RelationalExpression	s0 -> pt . x <= cs -> p1 . x		5602052	0		<=			
ANR	5602518	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602519	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602520	Identifier	s0		5602052	0					
ANR	5602521	Identifier	pt		5602052	1					
ANR	5602522	Identifier	x		5602052	1					
ANR	5602523	MemberAccess	cs -> p1 . x		5602052	1					
ANR	5602524	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602525	Identifier	cs		5602052	0					
ANR	5602526	Identifier	p1		5602052	1					
ANR	5602527	Identifier	x		5602052	1					
ANR	5602528	AndExpression	cs -> p1 . x <= cs -> p2 . x && cs -> p2 . x <= cs -> pt . x		5602052	1		&&			
ANR	5602529	RelationalExpression	cs -> p1 . x <= cs -> p2 . x		5602052	0		<=			
ANR	5602530	MemberAccess	cs -> p1 . x		5602052	0					
ANR	5602531	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602532	Identifier	cs		5602052	0					
ANR	5602533	Identifier	p1		5602052	1					
ANR	5602534	Identifier	x		5602052	1					
ANR	5602535	MemberAccess	cs -> p2 . x		5602052	1					
ANR	5602536	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602537	Identifier	cs		5602052	0					
ANR	5602538	Identifier	p2		5602052	1					
ANR	5602539	Identifier	x		5602052	1					
ANR	5602540	RelationalExpression	cs -> p2 . x <= cs -> pt . x		5602052	1		<=			
ANR	5602541	MemberAccess	cs -> p2 . x		5602052	0					
ANR	5602542	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602543	Identifier	cs		5602052	0					
ANR	5602544	Identifier	p2		5602052	1					
ANR	5602545	Identifier	x		5602052	1					
ANR	5602546	MemberAccess	cs -> pt . x		5602052	1					
ANR	5602547	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602548	Identifier	cs		5602052	0					
ANR	5602549	Identifier	pt		5602052	1					
ANR	5602550	Identifier	x		5602052	1					
ANR	5602551	AndExpression	s0 -> pt . x >= cs -> p1 . x && cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		5602052	1		&&			
ANR	5602552	RelationalExpression	s0 -> pt . x >= cs -> p1 . x		5602052	0		>=			
ANR	5602553	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602554	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602555	Identifier	s0		5602052	0					
ANR	5602556	Identifier	pt		5602052	1					
ANR	5602557	Identifier	x		5602052	1					
ANR	5602558	MemberAccess	cs -> p1 . x		5602052	1					
ANR	5602559	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602560	Identifier	cs		5602052	0					
ANR	5602561	Identifier	p1		5602052	1					
ANR	5602562	Identifier	x		5602052	1					
ANR	5602563	AndExpression	cs -> p1 . x >= cs -> p2 . x && cs -> p2 . x >= cs -> pt . x		5602052	1		&&			
ANR	5602564	RelationalExpression	cs -> p1 . x >= cs -> p2 . x		5602052	0		>=			
ANR	5602565	MemberAccess	cs -> p1 . x		5602052	0					
ANR	5602566	PtrMemberAccess	cs -> p1		5602052	0					
ANR	5602567	Identifier	cs		5602052	0					
ANR	5602568	Identifier	p1		5602052	1					
ANR	5602569	Identifier	x		5602052	1					
ANR	5602570	MemberAccess	cs -> p2 . x		5602052	1					
ANR	5602571	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602572	Identifier	cs		5602052	0					
ANR	5602573	Identifier	p2		5602052	1					
ANR	5602574	Identifier	x		5602052	1					
ANR	5602575	RelationalExpression	cs -> p2 . x >= cs -> pt . x		5602052	1		>=			
ANR	5602576	MemberAccess	cs -> p2 . x		5602052	0					
ANR	5602577	PtrMemberAccess	cs -> p2		5602052	0					
ANR	5602578	Identifier	cs		5602052	0					
ANR	5602579	Identifier	p2		5602052	1					
ANR	5602580	Identifier	x		5602052	1					
ANR	5602581	MemberAccess	cs -> pt . x		5602052	1					
ANR	5602582	PtrMemberAccess	cs -> pt		5602052	0					
ANR	5602583	Identifier	cs		5602052	0					
ANR	5602584	Identifier	pt		5602052	1					
ANR	5602585	Identifier	x		5602052	1					
ANR	5602586	ElseStatement	else		5602052	0					
ANR	5602587	CompoundStatement		47:11:2167:2167	5602052	0					
ANR	5602588	ExpressionStatement	"gx_flattened_iterator__init_line ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , s1 -> pt . x , s1 -> pt . y )"	1268:8:49432:49530	5602052	0	True				
ANR	5602589	CallExpression	"gx_flattened_iterator__init_line ( & alp -> fi , s0 -> pt . x , s0 -> pt . y , s1 -> pt . x , s1 -> pt . y )"		5602052	0					
ANR	5602590	Callee	gx_flattened_iterator__init_line		5602052	0					
ANR	5602591	Identifier	gx_flattened_iterator__init_line		5602052	0					
ANR	5602592	ArgumentList	& alp -> fi		5602052	1					
ANR	5602593	Argument	& alp -> fi		5602052	0					
ANR	5602594	UnaryOperationExpression	& alp -> fi		5602052	0					
ANR	5602595	UnaryOperator	&		5602052	0					
ANR	5602596	PtrMemberAccess	alp -> fi		5602052	1					
ANR	5602597	Identifier	alp		5602052	0					
ANR	5602598	Identifier	fi		5602052	1					
ANR	5602599	Argument	s0 -> pt . x		5602052	1					
ANR	5602600	MemberAccess	s0 -> pt . x		5602052	0					
ANR	5602601	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602602	Identifier	s0		5602052	0					
ANR	5602603	Identifier	pt		5602052	1					
ANR	5602604	Identifier	x		5602052	1					
ANR	5602605	Argument	s0 -> pt . y		5602052	2					
ANR	5602606	MemberAccess	s0 -> pt . y		5602052	0					
ANR	5602607	PtrMemberAccess	s0 -> pt		5602052	0					
ANR	5602608	Identifier	s0		5602052	0					
ANR	5602609	Identifier	pt		5602052	1					
ANR	5602610	Identifier	y		5602052	1					
ANR	5602611	Argument	s1 -> pt . x		5602052	3					
ANR	5602612	MemberAccess	s1 -> pt . x		5602052	0					
ANR	5602613	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602614	Identifier	s1		5602052	0					
ANR	5602615	Identifier	pt		5602052	1					
ANR	5602616	Identifier	x		5602052	1					
ANR	5602617	Argument	s1 -> pt . y		5602052	4					
ANR	5602618	MemberAccess	s1 -> pt . y		5602052	0					
ANR	5602619	PtrMemberAccess	s1 -> pt		5602052	0					
ANR	5602620	Identifier	s1		5602052	0					
ANR	5602621	Identifier	pt		5602052	1					
ANR	5602622	Identifier	y		5602052	1					
ANR	5602623	ExpressionStatement	"code = step_al ( alp , true )"	1270:8:49540:49565	5602052	1	True				
ANR	5602624	AssignmentExpression	"code = step_al ( alp , true )"		5602052	0		=			
ANR	5602625	Identifier	code		5602052	0					
ANR	5602626	CallExpression	"step_al ( alp , true )"		5602052	1					
ANR	5602627	Callee	step_al		5602052	0					
ANR	5602628	Identifier	step_al		5602052	0					
ANR	5602629	ArgumentList	alp		5602052	1					
ANR	5602630	Argument	alp		5602052	0					
ANR	5602631	Identifier	alp		5602052	0					
ANR	5602632	Argument	true		5602052	1					
ANR	5602633	Identifier	true		5602052	0					
ANR	5602634	IfStatement	if ( code < 0 )		5602052	2					
ANR	5602635	Condition	code < 0	1271:12:49579:49586	5602052	0	True				
ANR	5602636	RelationalExpression	code < 0		5602052	0		<			
ANR	5602637	Identifier	code		5602052	0					
ANR	5602638	PrimaryExpression	0		5602052	1					
ANR	5602639	ReturnStatement	return code ;	1272:12:49601:49612	5602052	1	True				
ANR	5602640	Identifier	code		5602052	0					
ANR	5602641	ExpressionStatement	alp -> monotonic_x = alp -> monotonic_y = true	1273:8:49622:49664	5602052	3	True				
ANR	5602642	AssignmentExpression	alp -> monotonic_x = alp -> monotonic_y = true		5602052	0		=			
ANR	5602643	PtrMemberAccess	alp -> monotonic_x		5602052	0					
ANR	5602644	Identifier	alp		5602052	0					
ANR	5602645	Identifier	monotonic_x		5602052	1					
ANR	5602646	AssignmentExpression	alp -> monotonic_y = true		5602052	1		=			
ANR	5602647	PtrMemberAccess	alp -> monotonic_y		5602052	0					
ANR	5602648	Identifier	alp		5602052	0					
ANR	5602649	Identifier	monotonic_y		5602052	1					
ANR	5602650	Identifier	true		5602052	1					
ANR	5602651	ExpressionStatement	alp -> pseg = s1	1275:4:49676:49690	5602052	4	True				
ANR	5602652	AssignmentExpression	alp -> pseg = s1		5602052	0		=			
ANR	5602653	PtrMemberAccess	alp -> pseg		5602052	0					
ANR	5602654	Identifier	alp		5602052	0					
ANR	5602655	Identifier	pseg		5602052	1					
ANR	5602656	Identifier	s1		5602052	1					
ANR	5602657	ReturnStatement	return 0 ;	1276:4:49696:49704	5602052	5	True				
ANR	5602658	PrimaryExpression	0		5602052	0					
ANR	5602659	ReturnType	static int		5602052	1					
ANR	5602660	Identifier	init_al		5602052	2					
ANR	5602661	ParameterList	"active_line * alp , const segment * s0 , const segment * s1 , const line_list * ll"		5602052	3					
ANR	5602662	Parameter	active_line * alp	1220:8:47177:47192	5602052	0	True				
ANR	5602663	ParameterType	active_line *		5602052	0					
ANR	5602664	Identifier	alp		5602052	1					
ANR	5602665	Parameter	const segment * s0	1220:26:47195:47211	5602052	1	True				
ANR	5602666	ParameterType	const segment *		5602052	0					
ANR	5602667	Identifier	s0		5602052	1					
ANR	5602668	Parameter	const segment * s1	1220:45:47214:47230	5602052	2	True				
ANR	5602669	ParameterType	const segment *		5602052	0					
ANR	5602670	Identifier	s1		5602052	1					
ANR	5602671	Parameter	const line_list * ll	1220:64:47233:47251	5602052	3	True				
ANR	5602672	ParameterType	const line_list *		5602052	0					
ANR	5602673	Identifier	ll		5602052	1					
ANR	5602674	CFGEntryNode	ENTRY		5602052		True				
ANR	5602675	CFGExitNode	EXIT		5602052		True				
ANR	5602676	Symbol	ll		5602052						
ANR	5602677	Symbol	* ss		5602052						
ANR	5602678	Symbol	cs -> pt . x		5602052						
ANR	5602679	Symbol	gx_flattened_iterator__next		5602052						
ANR	5602680	Symbol	cs -> pt . y		5602052						
ANR	5602681	Symbol	alp -> pseg		5602052						
ANR	5602682	Symbol	s_curve		5602052						
ANR	5602683	Symbol	cs -> pt		5602052						
ANR	5602684	Symbol	cs -> p1 . y		5602052						
ANR	5602685	Symbol	s1 -> pt . y		5602052						
ANR	5602686	Symbol	cs -> p1 . x		5602052						
ANR	5602687	Symbol	s0 -> pt		5602052						
ANR	5602688	Symbol	ss -> type		5602052						
ANR	5602689	Symbol	DIR_UP		5602052						
ANR	5602690	Symbol	s0		5602052						
ANR	5602691	Symbol	ll -> fo -> fixed_flat		5602052						
ANR	5602692	Symbol	s1 -> pt . x		5602052						
ANR	5602693	Symbol	s1		5602052						
ANR	5602694	Symbol	NULL		5602052						
ANR	5602695	Symbol	alp		5602052						
ANR	5602696	Symbol	& alp -> fi		5602052						
ANR	5602697	Symbol	cs -> p2 . x		5602052						
ANR	5602698	Symbol	* ll		5602052						
ANR	5602699	Symbol	ll -> fo		5602052						
ANR	5602700	Symbol	cs -> p2 . y		5602052						
ANR	5602701	Symbol	s0 -> pt . y		5602052						
ANR	5602702	Symbol	s0 -> pt . x		5602052						
ANR	5602703	Symbol	gx_curve_log2_samples		5602052						
ANR	5602704	Symbol	alp -> more_flattened		5602052						
ANR	5602705	Symbol	* cs		5602052						
ANR	5602706	Symbol	true		5602052						
ANR	5602707	Symbol	s1 -> pt		5602052						
ANR	5602708	Symbol	* s0		5602052						
ANR	5602709	Symbol	alp -> direction		5602052						
ANR	5602710	Symbol	* ll -> fo		5602052						
ANR	5602711	Symbol	code		5602052						
ANR	5602712	Symbol	curve		5602052						
ANR	5602713	Symbol	* s1		5602052						
ANR	5602714	Symbol	ll -> fo -> fill_by_trapezoids		5602052						
ANR	5602715	Symbol	alp -> monotonic_y		5602052						
ANR	5602716	Symbol	cs -> p1		5602052						
ANR	5602717	Symbol	cs -> p2		5602052						
ANR	5602718	Symbol	alp -> monotonic_x		5602052						
ANR	5602719	Symbol	step_al		5602052						
ANR	5602720	Symbol	ss		5602052						
ANR	5602721	Symbol	more		5602052						
ANR	5602722	Symbol	false		5602052						
ANR	5602723	Symbol	k		5602052						
ANR	5602724	Symbol	* * ll		5602052						
ANR	5602725	Symbol	* alp		5602052						
ANR	5602726	Symbol	cs		5602052						
ANR	5602727	Function	add_y_line_aux	1282:0:49803:50825							
ANR	5602728	FunctionDef	"add_y_line_aux (const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll)"		5602727	0					
ANR	5602729	CompoundStatement		1285:0:49966:50825	5602727	0					
ANR	5602730	IdentifierDeclStatement	int code ;	1286:4:49972:49980	5602727	0	True				
ANR	5602731	IdentifierDecl	code		5602727	0					
ANR	5602732	IdentifierDeclType	int		5602727	0					
ANR	5602733	Identifier	code		5602727	1					
ANR	5602734	IdentifierDeclStatement	active_line * alp = make_al ( ll ) ;	1288:4:49987:50017	5602727	1	True				
ANR	5602735	IdentifierDecl	* alp = make_al ( ll )		5602727	0					
ANR	5602736	IdentifierDeclType	active_line *		5602727	0					
ANR	5602737	Identifier	alp		5602727	1					
ANR	5602738	AssignmentExpression	* alp = make_al ( ll )		5602727	2		=			
ANR	5602739	Identifier	alp		5602727	0					
ANR	5602740	CallExpression	make_al ( ll )		5602727	1					
ANR	5602741	Callee	make_al		5602727	0					
ANR	5602742	Identifier	make_al		5602727	0					
ANR	5602743	ArgumentList	ll		5602727	1					
ANR	5602744	Argument	ll		5602727	0					
ANR	5602745	Identifier	ll		5602727	0					
ANR	5602746	IfStatement	if ( alp == NULL )		5602727	2					
ANR	5602747	Condition	alp == NULL	1289:8:50027:50037	5602727	0	True				
ANR	5602748	EqualityExpression	alp == NULL		5602727	0		==			
ANR	5602749	Identifier	alp		5602727	0					
ANR	5602750	Identifier	NULL		5602727	1					
ANR	5602751	ExpressionStatement	return_error ( gs_error_VMerror )	1290:8:50048:50078	5602727	1	True				
ANR	5602752	CallExpression	return_error ( gs_error_VMerror )		5602727	0					
ANR	5602753	Callee	return_error		5602727	0					
ANR	5602754	Identifier	return_error		5602727	0					
ANR	5602755	ArgumentList	gs_error_VMerror		5602727	1					
ANR	5602756	Argument	gs_error_VMerror		5602727	0					
ANR	5602757	Identifier	gs_error_VMerror		5602727	0					
ANR	5602758	ExpressionStatement	alp -> more_flattened = false	1291:4:50084:50111	5602727	3	True				
ANR	5602759	AssignmentExpression	alp -> more_flattened = false		5602727	0		=			
ANR	5602760	PtrMemberAccess	alp -> more_flattened		5602727	0					
ANR	5602761	Identifier	alp		5602727	0					
ANR	5602762	Identifier	more_flattened		5602727	1					
ANR	5602763	Identifier	false		5602727	1					
ANR	5602764	SwitchStatement	switch ( ( alp -> direction = dir ) )		5602727	4					
ANR	5602765	Condition	alp -> direction = dir	1292:12:50125:50146	5602727	0	True				
ANR	5602766	AssignmentExpression	alp -> direction = dir		5602727	0		=			
ANR	5602767	PtrMemberAccess	alp -> direction		5602727	0					
ANR	5602768	Identifier	alp		5602727	0					
ANR	5602769	Identifier	direction		5602727	1					
ANR	5602770	Identifier	dir		5602727	1					
ANR	5602771	CompoundStatement		8:36:182:182	5602727	1					
ANR	5602772	Label	case DIR_UP :	1293:8:50159:50170	5602727	0	True				
ANR	5602773	Identifier	DIR_UP		5602727	0					
ANR	5602774	ExpressionStatement	"code = init_al ( alp , prev_lp , lp , ll )"	1294:12:50184:50220	5602727	1	True				
ANR	5602775	AssignmentExpression	"code = init_al ( alp , prev_lp , lp , ll )"		5602727	0		=			
ANR	5602776	Identifier	code		5602727	0					
ANR	5602777	CallExpression	"init_al ( alp , prev_lp , lp , ll )"		5602727	1					
ANR	5602778	Callee	init_al		5602727	0					
ANR	5602779	Identifier	init_al		5602727	0					
ANR	5602780	ArgumentList	alp		5602727	1					
ANR	5602781	Argument	alp		5602727	0					
ANR	5602782	Identifier	alp		5602727	0					
ANR	5602783	Argument	prev_lp		5602727	1					
ANR	5602784	Identifier	prev_lp		5602727	0					
ANR	5602785	Argument	lp		5602727	2					
ANR	5602786	Identifier	lp		5602727	0					
ANR	5602787	Argument	ll		5602727	3					
ANR	5602788	Identifier	ll		5602727	0					
ANR	5602789	IfStatement	if ( code < 0 )		5602727	2					
ANR	5602790	Condition	code < 0	1295:16:50238:50245	5602727	0	True				
ANR	5602791	RelationalExpression	code < 0		5602727	0		<			
ANR	5602792	Identifier	code		5602727	0					
ANR	5602793	PrimaryExpression	0		5602727	1					
ANR	5602794	ReturnStatement	return code ;	1296:16:50264:50275	5602727	1	True				
ANR	5602795	Identifier	code		5602727	0					
ANR	5602796	BreakStatement	break ;	1297:12:50289:50294	5602727	3	True				
ANR	5602797	Label	case DIR_DOWN :	1298:8:50304:50317	5602727	4	True				
ANR	5602798	Identifier	DIR_DOWN		5602727	0					
ANR	5602799	ExpressionStatement	"code = init_al ( alp , lp , prev_lp , ll )"	1299:12:50331:50367	5602727	5	True				
ANR	5602800	AssignmentExpression	"code = init_al ( alp , lp , prev_lp , ll )"		5602727	0		=			
ANR	5602801	Identifier	code		5602727	0					
ANR	5602802	CallExpression	"init_al ( alp , lp , prev_lp , ll )"		5602727	1					
ANR	5602803	Callee	init_al		5602727	0					
ANR	5602804	Identifier	init_al		5602727	0					
ANR	5602805	ArgumentList	alp		5602727	1					
ANR	5602806	Argument	alp		5602727	0					
ANR	5602807	Identifier	alp		5602727	0					
ANR	5602808	Argument	lp		5602727	1					
ANR	5602809	Identifier	lp		5602727	0					
ANR	5602810	Argument	prev_lp		5602727	2					
ANR	5602811	Identifier	prev_lp		5602727	0					
ANR	5602812	Argument	ll		5602727	3					
ANR	5602813	Identifier	ll		5602727	0					
ANR	5602814	IfStatement	if ( code < 0 )		5602727	6					
ANR	5602815	Condition	code < 0	1300:16:50385:50392	5602727	0	True				
ANR	5602816	RelationalExpression	code < 0		5602727	0		<			
ANR	5602817	Identifier	code		5602727	0					
ANR	5602818	PrimaryExpression	0		5602727	1					
ANR	5602819	ReturnStatement	return code ;	1301:16:50411:50422	5602727	1	True				
ANR	5602820	Identifier	code		5602727	0					
ANR	5602821	BreakStatement	break ;	1302:12:50436:50441	5602727	7	True				
ANR	5602822	Label	case DIR_HORIZONTAL :	1303:8:50451:50470	5602727	8	True				
ANR	5602823	Identifier	DIR_HORIZONTAL		5602727	0					
ANR	5602824	ExpressionStatement	alp -> start = * prev	1304:12:50484:50502	5602727	9	True				
ANR	5602825	AssignmentExpression	alp -> start = * prev		5602727	0		=			
ANR	5602826	PtrMemberAccess	alp -> start		5602727	0					
ANR	5602827	Identifier	alp		5602727	0					
ANR	5602828	Identifier	start		5602727	1					
ANR	5602829	UnaryOperationExpression	* prev		5602727	1					
ANR	5602830	UnaryOperator	*		5602727	0					
ANR	5602831	Identifier	prev		5602727	1					
ANR	5602832	ExpressionStatement	alp -> end = * curr	1305:12:50516:50532	5602727	10	True				
ANR	5602833	AssignmentExpression	alp -> end = * curr		5602727	0		=			
ANR	5602834	PtrMemberAccess	alp -> end		5602727	0					
ANR	5602835	Identifier	alp		5602727	0					
ANR	5602836	Identifier	end		5602727	1					
ANR	5602837	UnaryOperationExpression	* curr		5602727	1					
ANR	5602838	UnaryOperator	*		5602727	0					
ANR	5602839	Identifier	curr		5602727	1					
ANR	5602840	ExpressionStatement	alp -> pseg = prev_lp	1307:12:50599:50618	5602727	11	True				
ANR	5602841	AssignmentExpression	alp -> pseg = prev_lp		5602727	0		=			
ANR	5602842	PtrMemberAccess	alp -> pseg		5602727	0					
ANR	5602843	Identifier	alp		5602727	0					
ANR	5602844	Identifier	pseg		5602727	1					
ANR	5602845	Identifier	prev_lp		5602727	1					
ANR	5602846	BreakStatement	break ;	1308:12:50670:50675	5602727	12	True				
ANR	5602847	Label	default :	1309:8:50685:50692	5602727	13	True				
ANR	5602848	Identifier	default		5602727	0					
ANR	5602849	ExpressionStatement	return_error ( gs_error_unregistered )	1310:12:50740:50775	5602727	14	True				
ANR	5602850	CallExpression	return_error ( gs_error_unregistered )		5602727	0					
ANR	5602851	Callee	return_error		5602727	0					
ANR	5602852	Identifier	return_error		5602727	0					
ANR	5602853	ArgumentList	gs_error_unregistered		5602727	1					
ANR	5602854	Argument	gs_error_unregistered		5602727	0					
ANR	5602855	Identifier	gs_error_unregistered		5602727	0					
ANR	5602856	ExpressionStatement	"insert_y_line ( ll , alp )"	1312:4:50787:50809	5602727	5	True				
ANR	5602857	CallExpression	"insert_y_line ( ll , alp )"		5602727	0					
ANR	5602858	Callee	insert_y_line		5602727	0					
ANR	5602859	Identifier	insert_y_line		5602727	0					
ANR	5602860	ArgumentList	ll		5602727	1					
ANR	5602861	Argument	ll		5602727	0					
ANR	5602862	Identifier	ll		5602727	0					
ANR	5602863	Argument	alp		5602727	1					
ANR	5602864	Identifier	alp		5602727	0					
ANR	5602865	ReturnStatement	return 0 ;	1313:4:50815:50823	5602727	6	True				
ANR	5602866	PrimaryExpression	0		5602727	0					
ANR	5602867	ReturnType	static int		5602727	1					
ANR	5602868	Identifier	add_y_line_aux		5602727	2					
ANR	5602869	ParameterList	"const segment * prev_lp , const segment * lp , const gs_fixed_point * curr , const gs_fixed_point * prev , int dir , line_list * ll"		5602727	3					
ANR	5602870	Parameter	const segment * prev_lp	1283:15:49829:49851	5602727	0	True				
ANR	5602871	ParameterType	const segment *		5602727	0					
ANR	5602872	Identifier	prev_lp		5602727	1					
ANR	5602873	Parameter	const segment * lp	1283:40:49854:49871	5602727	1	True				
ANR	5602874	ParameterType	const segment *		5602727	0					
ANR	5602875	Identifier	lp		5602727	1					
ANR	5602876	Parameter	const gs_fixed_point * curr	1284:12:49886:49911	5602727	2	True				
ANR	5602877	ParameterType	const gs_fixed_point *		5602727	0					
ANR	5602878	Identifier	curr		5602727	1					
ANR	5602879	Parameter	const gs_fixed_point * prev	1284:40:49914:49939	5602727	3	True				
ANR	5602880	ParameterType	const gs_fixed_point *		5602727	0					
ANR	5602881	Identifier	prev		5602727	1					
ANR	5602882	Parameter	int dir	1284:68:49942:49948	5602727	4	True				
ANR	5602883	ParameterType	int		5602727	0					
ANR	5602884	Identifier	dir		5602727	1					
ANR	5602885	Parameter	line_list * ll	1284:77:49951:49963	5602727	5	True				
ANR	5602886	ParameterType	line_list *		5602727	0					
ANR	5602887	Identifier	ll		5602727	1					
ANR	5602888	CFGEntryNode	ENTRY		5602727		True				
ANR	5602889	CFGExitNode	EXIT		5602727		True				
ANR	5602890	Symbol	ll		5602727						
ANR	5602891	Symbol	alp -> direction		5602727						
ANR	5602892	Symbol	gs_error_unregistered		5602727						
ANR	5602893	Symbol	code		5602727						
ANR	5602894	Symbol	NULL		5602727						
ANR	5602895	Symbol	lp		5602727						
ANR	5602896	Symbol	alp		5602727						
ANR	5602897	Symbol	alp -> end		5602727						
ANR	5602898	Symbol	prev		5602727						
ANR	5602899	Symbol	false		5602727						
ANR	5602900	Symbol	* prev		5602727						
ANR	5602901	Symbol	dir		5602727						
ANR	5602902	Symbol	alp -> pseg		5602727						
ANR	5602903	Symbol	* alp		5602727						
ANR	5602904	Symbol	gs_error_VMerror		5602727						
ANR	5602905	Symbol	alp -> more_flattened		5602727						
ANR	5602906	Symbol	* curr		5602727						
ANR	5602907	Symbol	prev_lp		5602727						
ANR	5602908	Symbol	alp -> start		5602727						
ANR	5602909	Symbol	init_al		5602727						
ANR	5602910	Symbol	curr		5602727						
ANR	5602911	Symbol	make_al		5602727						
ANR	5602912	Function	insert_x_new	1319:0:50944:51558							
ANR	5602913	FunctionDef	"insert_x_new (active_line * alp , line_list * ll)"		5602912	0					
ANR	5602914	CompoundStatement		1321:0:51003:51558	5602912	0					
ANR	5602915	IdentifierDeclStatement	active_line * next ;	1322:4:51009:51026	5602912	0	True				
ANR	5602916	IdentifierDecl	* next		5602912	0					
ANR	5602917	IdentifierDeclType	active_line *		5602912	0					
ANR	5602918	Identifier	next		5602912	1					
ANR	5602919	IdentifierDeclStatement	active_line * prev = & ll -> x_head ;	1323:4:51032:51063	5602912	1	True				
ANR	5602920	IdentifierDecl	* prev = & ll -> x_head		5602912	0					
ANR	5602921	IdentifierDeclType	active_line *		5602912	0					
ANR	5602922	Identifier	prev		5602912	1					
ANR	5602923	AssignmentExpression	* prev = & ll -> x_head		5602912	2		=			
ANR	5602924	Identifier	prev		5602912	0					
ANR	5602925	UnaryOperationExpression	& ll -> x_head		5602912	1					
ANR	5602926	UnaryOperator	&		5602912	0					
ANR	5602927	PtrMemberAccess	ll -> x_head		5602912	1					
ANR	5602928	Identifier	ll		5602912	0					
ANR	5602929	Identifier	x_head		5602912	1					
ANR	5602930	ExpressionStatement	alp -> x_current = alp -> start . x	1325:4:51070:51099	5602912	2	True				
ANR	5602931	AssignmentExpression	alp -> x_current = alp -> start . x		5602912	0		=			
ANR	5602932	PtrMemberAccess	alp -> x_current		5602912	0					
ANR	5602933	Identifier	alp		5602912	0					
ANR	5602934	Identifier	x_current		5602912	1					
ANR	5602935	MemberAccess	alp -> start . x		5602912	1					
ANR	5602936	PtrMemberAccess	alp -> start		5602912	0					
ANR	5602937	Identifier	alp		5602912	0					
ANR	5602938	Identifier	start		5602912	1					
ANR	5602939	Identifier	x		5602912	1					
ANR	5602940	ExpressionStatement	alp -> x_next = alp -> start . x	1326:4:51105:51131	5602912	3	True				
ANR	5602941	AssignmentExpression	alp -> x_next = alp -> start . x		5602912	0		=			
ANR	5602942	PtrMemberAccess	alp -> x_next		5602912	0					
ANR	5602943	Identifier	alp		5602912	0					
ANR	5602944	Identifier	x_next		5602912	1					
ANR	5602945	MemberAccess	alp -> start . x		5602912	1					
ANR	5602946	PtrMemberAccess	alp -> start		5602912	0					
ANR	5602947	Identifier	alp		5602912	0					
ANR	5602948	Identifier	start		5602912	1					
ANR	5602949	Identifier	x		5602912	1					
ANR	5602950	WhileStatement	"while ( INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0 )"		5602912	4					
ANR	5602951	Condition	"INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"	1329:11:51335:51414	5602912	0	True				
ANR	5602952	Expression	"INCR_EXPR ( x_step ) , ( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"		5602912	0					
ANR	5602953	CallExpression	INCR_EXPR ( x_step )		5602912	0					
ANR	5602954	Callee	INCR_EXPR		5602912	0					
ANR	5602955	Identifier	INCR_EXPR		5602912	0					
ANR	5602956	ArgumentList	x_step		5602912	1					
ANR	5602957	Argument	x_step		5602912	0					
ANR	5602958	Identifier	x_step		5602912	0					
ANR	5602959	AndExpression	"( next = prev -> next ) != 0 && x_order ( next , alp ) < 0"		5602912	1		&&			
ANR	5602960	EqualityExpression	( next = prev -> next ) != 0		5602912	0		!=			
ANR	5602961	AssignmentExpression	next = prev -> next		5602912	0		=			
ANR	5602962	Identifier	next		5602912	0					
ANR	5602963	PtrMemberAccess	prev -> next		5602912	1					
ANR	5602964	Identifier	prev		5602912	0					
ANR	5602965	Identifier	next		5602912	1					
ANR	5602966	PrimaryExpression	0		5602912	1					
ANR	5602967	RelationalExpression	"x_order ( next , alp ) < 0"		5602912	1		<			
ANR	5602968	CallExpression	"x_order ( next , alp )"		5602912	0					
ANR	5602969	Callee	x_order		5602912	0					
ANR	5602970	Identifier	x_order		5602912	0					
ANR	5602971	ArgumentList	next		5602912	1					
ANR	5602972	Argument	next		5602912	0					
ANR	5602973	Identifier	next		5602912	0					
ANR	5602974	Argument	alp		5602912	1					
ANR	5602975	Identifier	alp		5602912	0					
ANR	5602976	PrimaryExpression	0		5602912	1					
ANR	5602977	ExpressionStatement	prev = next	1332:8:51434:51445	5602912	1	True				
ANR	5602978	AssignmentExpression	prev = next		5602912	0		=			
ANR	5602979	Identifier	prev		5602912	0					
ANR	5602980	Identifier	next		5602912	1					
ANR	5602981	ExpressionStatement	alp -> next = next	1333:4:51451:51467	5602912	5	True				
ANR	5602982	AssignmentExpression	alp -> next = next		5602912	0		=			
ANR	5602983	PtrMemberAccess	alp -> next		5602912	0					
ANR	5602984	Identifier	alp		5602912	0					
ANR	5602985	Identifier	next		5602912	1					
ANR	5602986	Identifier	next		5602912	1					
ANR	5602987	ExpressionStatement	alp -> prev = prev	1334:4:51473:51489	5602912	6	True				
ANR	5602988	AssignmentExpression	alp -> prev = prev		5602912	0		=			
ANR	5602989	PtrMemberAccess	alp -> prev		5602912	0					
ANR	5602990	Identifier	alp		5602912	0					
ANR	5602991	Identifier	prev		5602912	1					
ANR	5602992	Identifier	prev		5602912	1					
ANR	5602993	IfStatement	if ( next != 0 )		5602912	7					
ANR	5602994	Condition	next != 0	1335:8:51499:51507	5602912	0	True				
ANR	5602995	EqualityExpression	next != 0		5602912	0		!=			
ANR	5602996	Identifier	next		5602912	0					
ANR	5602997	PrimaryExpression	0		5602912	1					
ANR	5602998	ExpressionStatement	next -> prev = alp	1336:8:51518:51534	5602912	1	True				
ANR	5602999	AssignmentExpression	next -> prev = alp		5602912	0		=			
ANR	5603000	PtrMemberAccess	next -> prev		5602912	0					
ANR	5603001	Identifier	next		5602912	0					
ANR	5603002	Identifier	prev		5602912	1					
ANR	5603003	Identifier	alp		5602912	1					
ANR	5603004	ExpressionStatement	prev -> next = alp	1337:4:51540:51556	5602912	8	True				
ANR	5603005	AssignmentExpression	prev -> next = alp		5602912	0		=			
ANR	5603006	PtrMemberAccess	prev -> next		5602912	0					
ANR	5603007	Identifier	prev		5602912	0					
ANR	5603008	Identifier	next		5602912	1					
ANR	5603009	Identifier	alp		5602912	1					
ANR	5603010	ReturnType	static void		5602912	1					
ANR	5603011	Identifier	insert_x_new		5602912	2					
ANR	5603012	ParameterList	"active_line * alp , line_list * ll"		5602912	3					
ANR	5603013	Parameter	active_line * alp	1320:13:50969:50985	5602912	0	True				
ANR	5603014	ParameterType	active_line *		5602912	0					
ANR	5603015	Identifier	alp		5602912	1					
ANR	5603016	Parameter	line_list * ll	1320:32:50988:51000	5602912	1	True				
ANR	5603017	ParameterType	line_list *		5602912	0					
ANR	5603018	Identifier	ll		5602912	1					
ANR	5603019	CFGEntryNode	ENTRY		5602912		True				
ANR	5603020	CFGExitNode	EXIT		5602912		True				
ANR	5603021	Symbol	ll		5602912						
ANR	5603022	Symbol	next		5602912						
ANR	5603023	Symbol	& ll -> x_head		5602912						
ANR	5603024	Symbol	prev -> next		5602912						
ANR	5603025	Symbol	alp		5602912						
ANR	5603026	Symbol	x_step		5602912						
ANR	5603027	Symbol	prev		5602912						
ANR	5603028	Symbol	alp -> x_current		5602912						
ANR	5603029	Symbol	INCR_EXPR		5602912						
ANR	5603030	Symbol	* prev		5602912						
ANR	5603031	Symbol	* next		5602912						
ANR	5603032	Symbol	* alp		5602912						
ANR	5603033	Symbol	alp -> x_next		5602912						
ANR	5603034	Symbol	alp -> prev		5602912						
ANR	5603035	Symbol	alp -> start . x		5602912						
ANR	5603036	Symbol	alp -> next		5602912						
ANR	5603037	Symbol	next -> prev		5602912						
ANR	5603038	Symbol	alp -> start		5602912						
ANR	5603039	Symbol	x_order		5602912						
ANR	5603040	Function	insert_h_new	1345:0:51789:52375							
ANR	5603041	FunctionDef	"insert_h_new (active_line * alp , line_list * ll)"		5603040	0					
ANR	5603042	CompoundStatement		1347:0:51855:52375	5603040	0					
ANR	5603043	ExpressionStatement	alp -> next = ll -> h_list0	1348:4:51861:51884	5603040	0	True				
ANR	5603044	AssignmentExpression	alp -> next = ll -> h_list0		5603040	0		=			
ANR	5603045	PtrMemberAccess	alp -> next		5603040	0					
ANR	5603046	Identifier	alp		5603040	0					
ANR	5603047	Identifier	next		5603040	1					
ANR	5603048	PtrMemberAccess	ll -> h_list0		5603040	1					
ANR	5603049	Identifier	ll		5603040	0					
ANR	5603050	Identifier	h_list0		5603040	1					
ANR	5603051	ExpressionStatement	alp -> prev = 0	1349:4:51890:51903	5603040	1	True				
ANR	5603052	AssignmentExpression	alp -> prev = 0		5603040	0		=			
ANR	5603053	PtrMemberAccess	alp -> prev		5603040	0					
ANR	5603054	Identifier	alp		5603040	0					
ANR	5603055	Identifier	prev		5603040	1					
ANR	5603056	PrimaryExpression	0		5603040	1					
ANR	5603057	IfStatement	if ( ll -> h_list0 != 0 )		5603040	2					
ANR	5603058	Condition	ll -> h_list0 != 0	1350:8:51913:51928	5603040	0	True				
ANR	5603059	EqualityExpression	ll -> h_list0 != 0		5603040	0		!=			
ANR	5603060	PtrMemberAccess	ll -> h_list0		5603040	0					
ANR	5603061	Identifier	ll		5603040	0					
ANR	5603062	Identifier	h_list0		5603040	1					
ANR	5603063	PrimaryExpression	0		5603040	1					
ANR	5603064	ExpressionStatement	ll -> h_list0 -> prev = alp	1351:8:51939:51962	5603040	1	True				
ANR	5603065	AssignmentExpression	ll -> h_list0 -> prev = alp		5603040	0		=			
ANR	5603066	PtrMemberAccess	ll -> h_list0 -> prev		5603040	0					
ANR	5603067	PtrMemberAccess	ll -> h_list0		5603040	0					
ANR	5603068	Identifier	ll		5603040	0					
ANR	5603069	Identifier	h_list0		5603040	1					
ANR	5603070	Identifier	prev		5603040	1					
ANR	5603071	Identifier	alp		5603040	1					
ANR	5603072	ExpressionStatement	ll -> h_list0 = alp	1352:4:51968:51985	5603040	3	True				
ANR	5603073	AssignmentExpression	ll -> h_list0 = alp		5603040	0		=			
ANR	5603074	PtrMemberAccess	ll -> h_list0		5603040	0					
ANR	5603075	Identifier	ll		5603040	0					
ANR	5603076	Identifier	h_list0		5603040	1					
ANR	5603077	Identifier	alp		5603040	1					
ANR	5603078	ReturnType	static inline void		5603040	1					
ANR	5603079	Identifier	insert_h_new		5603040	2					
ANR	5603080	ParameterList	"active_line * alp , line_list * ll"		5603040	3					
ANR	5603081	Parameter	active_line * alp	1346:13:51821:51837	5603040	0	True				
ANR	5603082	ParameterType	active_line *		5603040	0					
ANR	5603083	Identifier	alp		5603040	1					
ANR	5603084	Parameter	line_list * ll	1346:32:51840:51852	5603040	1	True				
ANR	5603085	ParameterType	line_list *		5603040	0					
ANR	5603086	Identifier	ll		5603040	1					
ANR	5603087	CFGEntryNode	ENTRY		5603040		True				
ANR	5603088	CFGExitNode	EXIT		5603040		True				
ANR	5603089	Symbol	ll		5603040						
ANR	5603090	Symbol	* alp		5603040						
ANR	5603091	Symbol	alp -> prev		5603040						
ANR	5603092	Symbol	alp -> next		5603040						
ANR	5603093	Symbol	ll -> h_list0 -> prev		5603040						
ANR	5603094	Symbol	alp		5603040						
ANR	5603095	Symbol	ll -> h_list0		5603040						
ANR	5603096	Symbol	* ll		5603040						
ANR	5603097	Symbol	* ll -> h_list0		5603040						
ANR	5603098	Symbol	* * ll		5603040						
ANR	5603099	Function	remove_al	1363:0:52378:52619							
ANR	5603100	FunctionDef	"remove_al (const line_list * ll , active_line * alp)"		5603099	0					
ANR	5603101	CompoundStatement		1365:0:52446:52619	5603099	0					
ANR	5603102	IdentifierDeclStatement	active_line * nlp = alp -> next ;	1366:4:52452:52480	5603099	0	True				
ANR	5603103	IdentifierDecl	* nlp = alp -> next		5603099	0					
ANR	5603104	IdentifierDeclType	active_line *		5603099	0					
ANR	5603105	Identifier	nlp		5603099	1					
ANR	5603106	AssignmentExpression	* nlp = alp -> next		5603099	2		=			
ANR	5603107	Identifier	nlp		5603099	0					
ANR	5603108	PtrMemberAccess	alp -> next		5603099	1					
ANR	5603109	Identifier	alp		5603099	0					
ANR	5603110	Identifier	next		5603099	1					
ANR	5603111	ExpressionStatement	alp -> prev -> next = nlp	1368:4:52487:52508	5603099	1	True				
ANR	5603112	AssignmentExpression	alp -> prev -> next = nlp		5603099	0		=			
ANR	5603113	PtrMemberAccess	alp -> prev -> next		5603099	0					
ANR	5603114	PtrMemberAccess	alp -> prev		5603099	0					
ANR	5603115	Identifier	alp		5603099	0					
ANR	5603116	Identifier	prev		5603099	1					
ANR	5603117	Identifier	next		5603099	1					
ANR	5603118	Identifier	nlp		5603099	1					
ANR	5603119	IfStatement	if ( nlp )		5603099	2					
ANR	5603120	Condition	nlp	1369:8:52518:52520	5603099	0	True				
ANR	5603121	Identifier	nlp		5603099	0					
ANR	5603122	ExpressionStatement	nlp -> prev = alp -> prev	1370:8:52531:52552	5603099	1	True				
ANR	5603123	AssignmentExpression	nlp -> prev = alp -> prev		5603099	0		=			
ANR	5603124	PtrMemberAccess	nlp -> prev		5603099	0					
ANR	5603125	Identifier	nlp		5603099	0					
ANR	5603126	Identifier	prev		5603099	1					
ANR	5603127	PtrMemberAccess	alp -> prev		5603099	1					
ANR	5603128	Identifier	alp		5603099	0					
ANR	5603129	Identifier	prev		5603099	1					
ANR	5603130	ExpressionStatement	"if_debug1m ( 'F' , ll -> memory , ""[F]drop 0x%lx\\n"" , ( ulong ) alp )"	1371:4:52558:52617	5603099	3	True				
ANR	5603131	CallExpression	"if_debug1m ( 'F' , ll -> memory , ""[F]drop 0x%lx\\n"" , ( ulong ) alp )"		5603099	0					
ANR	5603132	Callee	if_debug1m		5603099	0					
ANR	5603133	Identifier	if_debug1m		5603099	0					
ANR	5603134	ArgumentList	'F'		5603099	1					
ANR	5603135	Argument	'F'		5603099	0					
ANR	5603136	PrimaryExpression	'F'		5603099	0					
ANR	5603137	Argument	ll -> memory		5603099	1					
ANR	5603138	PtrMemberAccess	ll -> memory		5603099	0					
ANR	5603139	Identifier	ll		5603099	0					
ANR	5603140	Identifier	memory		5603099	1					
ANR	5603141	Argument	"""[F]drop 0x%lx\\n"""		5603099	2					
ANR	5603142	PrimaryExpression	"""[F]drop 0x%lx\\n"""		5603099	0					
ANR	5603143	Argument	( ulong ) alp		5603099	3					
ANR	5603144	CastExpression	( ulong ) alp		5603099	0					
ANR	5603145	CastTarget	ulong		5603099	0					
ANR	5603146	Identifier	alp		5603099	1					
ANR	5603147	ReturnType	static inline void		5603099	1					
ANR	5603148	Identifier	remove_al		5603099	2					
ANR	5603149	ParameterList	"const line_list * ll , active_line * alp"		5603099	3					
ANR	5603150	Parameter	const line_list * ll	1364:10:52407:52425	5603099	0	True				
ANR	5603151	ParameterType	const line_list *		5603099	0					
ANR	5603152	Identifier	ll		5603099	1					
ANR	5603153	Parameter	active_line * alp	1364:31:52428:52443	5603099	1	True				
ANR	5603154	ParameterType	active_line *		5603099	0					
ANR	5603155	Identifier	alp		5603099	1					
ANR	5603156	CFGEntryNode	ENTRY		5603099		True				
ANR	5603157	CFGExitNode	EXIT		5603099		True				
ANR	5603158	Symbol	ll		5603099						
ANR	5603159	Symbol	alp		5603099						
ANR	5603160	Symbol	* ll		5603099						
ANR	5603161	Symbol	ll -> memory		5603099						
ANR	5603162	Symbol	nlp -> prev		5603099						
ANR	5603163	Symbol	alp -> prev -> next		5603099						
ANR	5603164	Symbol	* alp		5603099						
ANR	5603165	Symbol	alp -> prev		5603099						
ANR	5603166	Symbol	nlp		5603099						
ANR	5603167	Symbol	alp -> next		5603099						
ANR	5603168	Symbol	* alp -> prev		5603099						
ANR	5603169	Symbol	* * alp		5603099						
ANR	5603170	Symbol	* nlp		5603099						
ANR	5603171	Function	end_x_line	1378:0:52728:54557							
ANR	5603172	FunctionDef	"end_x_line (active_line * alp , const line_list * ll , bool update)"		5603171	0					
ANR	5603173	CompoundStatement		1380:0:52802:54557	5603171	0					
ANR	5603174	IdentifierDeclStatement	const segment * pseg = alp -> pseg ;	1381:4:52808:52839	5603171	0	True				
ANR	5603175	IdentifierDecl	* pseg = alp -> pseg		5603171	0					
ANR	5603176	IdentifierDeclType	const segment *		5603171	0					
ANR	5603177	Identifier	pseg		5603171	1					
ANR	5603178	AssignmentExpression	* pseg = alp -> pseg		5603171	2		=			
ANR	5603179	Identifier	pseg		5603171	0					
ANR	5603180	PtrMemberAccess	alp -> pseg		5603171	1					
ANR	5603181	Identifier	alp		5603171	0					
ANR	5603182	Identifier	pseg		5603171	1					
ANR	5603183	IdentifierDeclStatement	const segment * next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) ) ;	1388:4:53078:53572	5603171	1	True				
ANR	5603184	IdentifierDecl	* next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) )		5603171	0					
ANR	5603185	IdentifierDeclType	const segment *		5603171	0					
ANR	5603186	Identifier	next		5603171	1					
ANR	5603187	AssignmentExpression	* next = ( alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev ) )		5603171	2		=			
ANR	5603188	Identifier	next		5603171	0					
ANR	5603189	ConditionalExpression	alp -> direction == DIR_UP ? ( pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next ) : ( pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev )		5603171	1					
ANR	5603190	Condition	alp -> direction == DIR_UP		5603171	0					
ANR	5603191	EqualityExpression	alp -> direction == DIR_UP		5603171	0		==			
ANR	5603192	PtrMemberAccess	alp -> direction		5603171	0					
ANR	5603193	Identifier	alp		5603171	0					
ANR	5603194	Identifier	direction		5603171	1					
ANR	5603195	Identifier	DIR_UP		5603171	1					
ANR	5603196	ConditionalExpression	pseg -> type == s_line_close ? ( ( const line_close_segment * ) pseg ) -> sub -> next : pseg -> next		5603171	1					
ANR	5603197	Condition	pseg -> type == s_line_close		5603171	0					
ANR	5603198	EqualityExpression	pseg -> type == s_line_close		5603171	0		==			
ANR	5603199	PtrMemberAccess	pseg -> type		5603171	0					
ANR	5603200	Identifier	pseg		5603171	0					
ANR	5603201	Identifier	type		5603171	1					
ANR	5603202	Identifier	s_line_close		5603171	1					
ANR	5603203	PtrMemberAccess	( ( const line_close_segment * ) pseg ) -> sub -> next		5603171	1					
ANR	5603204	PtrMemberAccess	( ( const line_close_segment * ) pseg ) -> sub		5603171	0					
ANR	5603205	CastExpression	( const line_close_segment * ) pseg		5603171	0					
ANR	5603206	CastTarget	const line_close_segment *		5603171	0					
ANR	5603207	Identifier	pseg		5603171	1					
ANR	5603208	Identifier	sub		5603171	1					
ANR	5603209	Identifier	next		5603171	1					
ANR	5603210	PtrMemberAccess	pseg -> next		5603171	2					
ANR	5603211	Identifier	pseg		5603171	0					
ANR	5603212	Identifier	next		5603171	1					
ANR	5603213	ConditionalExpression	pseg -> type == s_start ? ( ( const subpath * ) pseg ) -> last -> prev : pseg -> prev		5603171	2					
ANR	5603214	Condition	pseg -> type == s_start		5603171	0					
ANR	5603215	EqualityExpression	pseg -> type == s_start		5603171	0		==			
ANR	5603216	PtrMemberAccess	pseg -> type		5603171	0					
ANR	5603217	Identifier	pseg		5603171	0					
ANR	5603218	Identifier	type		5603171	1					
ANR	5603219	Identifier	s_start		5603171	1					
ANR	5603220	PtrMemberAccess	( ( const subpath * ) pseg ) -> last -> prev		5603171	1					
ANR	5603221	PtrMemberAccess	( ( const subpath * ) pseg ) -> last		5603171	0					
ANR	5603222	CastExpression	( const subpath * ) pseg		5603171	0					
ANR	5603223	CastTarget	const subpath *		5603171	0					
ANR	5603224	Identifier	pseg		5603171	1					
ANR	5603225	Identifier	last		5603171	1					
ANR	5603226	Identifier	prev		5603171	1					
ANR	5603227	PtrMemberAccess	pseg -> prev		5603171	2					
ANR	5603228	Identifier	pseg		5603171	0					
ANR	5603229	Identifier	prev		5603171	1					
ANR	5603230	IdentifierDeclStatement	int code ;	1399:4:53578:53586	5603171	2	True				
ANR	5603231	IdentifierDecl	code		5603171	0					
ANR	5603232	IdentifierDeclType	int		5603171	0					
ANR	5603233	Identifier	code		5603171	1					
ANR	5603234	IfStatement	if ( alp -> end . y < alp -> start . y )		5603171	3					
ANR	5603235	Condition	alp -> end . y < alp -> start . y	1401:8:53597:53621	5603171	0	True				
ANR	5603236	RelationalExpression	alp -> end . y < alp -> start . y		5603171	0		<			
ANR	5603237	MemberAccess	alp -> end . y		5603171	0					
ANR	5603238	PtrMemberAccess	alp -> end		5603171	0					
ANR	5603239	Identifier	alp		5603171	0					
ANR	5603240	Identifier	end		5603171	1					
ANR	5603241	Identifier	y		5603171	1					
ANR	5603242	MemberAccess	alp -> start . y		5603171	1					
ANR	5603243	PtrMemberAccess	alp -> start		5603171	0					
ANR	5603244	Identifier	alp		5603171	0					
ANR	5603245	Identifier	start		5603171	1					
ANR	5603246	Identifier	y		5603171	1					
ANR	5603247	CompoundStatement		22:35:821:821	5603171	1					
ANR	5603248	ExpressionStatement	"remove_al ( ll , alp )"	1411:8:54147:54165	5603171	0	True				
ANR	5603249	CallExpression	"remove_al ( ll , alp )"		5603171	0					
ANR	5603250	Callee	remove_al		5603171	0					
ANR	5603251	Identifier	remove_al		5603171	0					
ANR	5603252	ArgumentList	ll		5603171	1					
ANR	5603253	Argument	ll		5603171	0					
ANR	5603254	Identifier	ll		5603171	0					
ANR	5603255	Argument	alp		5603171	1					
ANR	5603256	Identifier	alp		5603171	0					
ANR	5603257	ReturnStatement	return true ;	1412:8:54175:54186	5603171	1	True				
ANR	5603258	Identifier	true		5603171	0					
ANR	5603259	ElseStatement	else		5603171	0					
ANR	5603260	IfStatement	if ( alp -> more_flattened )		5603171	0					
ANR	5603261	Condition	alp -> more_flattened	1413:15:54203:54221	5603171	0	True				
ANR	5603262	PtrMemberAccess	alp -> more_flattened		5603171	0					
ANR	5603263	Identifier	alp		5603171	0					
ANR	5603264	Identifier	more_flattened		5603171	1					
ANR	5603265	ReturnStatement	return false ;	1414:8:54232:54244	5603171	1	True				
ANR	5603266	Identifier	false		5603171	0					
ANR	5603267	ExpressionStatement	"code = init_al ( alp , pseg , next , ll )"	1415:4:54250:54285	5603171	4	True				
ANR	5603268	AssignmentExpression	"code = init_al ( alp , pseg , next , ll )"		5603171	0		=			
ANR	5603269	Identifier	code		5603171	0					
ANR	5603270	CallExpression	"init_al ( alp , pseg , next , ll )"		5603171	1					
ANR	5603271	Callee	init_al		5603171	0					
ANR	5603272	Identifier	init_al		5603171	0					
ANR	5603273	ArgumentList	alp		5603171	1					
ANR	5603274	Argument	alp		5603171	0					
ANR	5603275	Identifier	alp		5603171	0					
ANR	5603276	Argument	pseg		5603171	1					
ANR	5603277	Identifier	pseg		5603171	0					
ANR	5603278	Argument	next		5603171	2					
ANR	5603279	Identifier	next		5603171	0					
ANR	5603280	Argument	ll		5603171	3					
ANR	5603281	Identifier	ll		5603171	0					
ANR	5603282	IfStatement	if ( code < 0 )		5603171	5					
ANR	5603283	Condition	code < 0	1416:8:54295:54302	5603171	0	True				
ANR	5603284	RelationalExpression	code < 0		5603171	0		<			
ANR	5603285	Identifier	code		5603171	0					
ANR	5603286	PrimaryExpression	0		5603171	1					
ANR	5603287	ReturnStatement	return code ;	1417:8:54313:54324	5603171	1	True				
ANR	5603288	Identifier	code		5603171	0					
ANR	5603289	IfStatement	if ( alp -> start . y > alp -> end . y )		5603171	6					
ANR	5603290	Condition	alp -> start . y > alp -> end . y	1418:8:54334:54358	5603171	0	True				
ANR	5603291	RelationalExpression	alp -> start . y > alp -> end . y		5603171	0		>			
ANR	5603292	MemberAccess	alp -> start . y		5603171	0					
ANR	5603293	PtrMemberAccess	alp -> start		5603171	0					
ANR	5603294	Identifier	alp		5603171	0					
ANR	5603295	Identifier	start		5603171	1					
ANR	5603296	Identifier	y		5603171	1					
ANR	5603297	MemberAccess	alp -> end . y		5603171	1					
ANR	5603298	PtrMemberAccess	alp -> end		5603171	0					
ANR	5603299	Identifier	alp		5603171	0					
ANR	5603300	Identifier	end		5603171	1					
ANR	5603301	Identifier	y		5603171	1					
ANR	5603302	CompoundStatement		39:35:1558:1558	5603171	1					
ANR	5603303	ExpressionStatement	"remove_al ( ll , alp )"	1420:8:54404:54422	5603171	0	True				
ANR	5603304	CallExpression	"remove_al ( ll , alp )"		5603171	0					
ANR	5603305	Callee	remove_al		5603171	0					
ANR	5603306	Identifier	remove_al		5603171	0					
ANR	5603307	ArgumentList	ll		5603171	1					
ANR	5603308	Argument	ll		5603171	0					
ANR	5603309	Identifier	ll		5603171	0					
ANR	5603310	Argument	alp		5603171	1					
ANR	5603311	Identifier	alp		5603171	0					
ANR	5603312	ReturnStatement	return true ;	1421:8:54432:54443	5603171	1	True				
ANR	5603313	Identifier	true		5603171	0					
ANR	5603314	ExpressionStatement	alp -> x_current = alp -> x_next = alp -> start . x	1423:4:54455:54498	5603171	7	True				
ANR	5603315	AssignmentExpression	alp -> x_current = alp -> x_next = alp -> start . x		5603171	0		=			
ANR	5603316	PtrMemberAccess	alp -> x_current		5603171	0					
ANR	5603317	Identifier	alp		5603171	0					
ANR	5603318	Identifier	x_current		5603171	1					
ANR	5603319	AssignmentExpression	alp -> x_next = alp -> start . x		5603171	1		=			
ANR	5603320	PtrMemberAccess	alp -> x_next		5603171	0					
ANR	5603321	Identifier	alp		5603171	0					
ANR	5603322	Identifier	x_next		5603171	1					
ANR	5603323	MemberAccess	alp -> start . x		5603171	1					
ANR	5603324	PtrMemberAccess	alp -> start		5603171	0					
ANR	5603325	Identifier	alp		5603171	0					
ANR	5603326	Identifier	start		5603171	1					
ANR	5603327	Identifier	x		5603171	1					
ANR	5603328	ExpressionStatement	"print_al ( ll -> memory , ""repl"" , alp )"	1424:4:54504:54537	5603171	8	True				
ANR	5603329	CallExpression	"print_al ( ll -> memory , ""repl"" , alp )"		5603171	0					
ANR	5603330	Callee	print_al		5603171	0					
ANR	5603331	Identifier	print_al		5603171	0					
ANR	5603332	ArgumentList	ll -> memory		5603171	1					
ANR	5603333	Argument	ll -> memory		5603171	0					
ANR	5603334	PtrMemberAccess	ll -> memory		5603171	0					
ANR	5603335	Identifier	ll		5603171	0					
ANR	5603336	Identifier	memory		5603171	1					
ANR	5603337	Argument	"""repl"""		5603171	1					
ANR	5603338	PrimaryExpression	"""repl"""		5603171	0					
ANR	5603339	Argument	alp		5603171	2					
ANR	5603340	Identifier	alp		5603171	0					
ANR	5603341	ReturnStatement	return false ;	1425:4:54543:54555	5603171	9	True				
ANR	5603342	Identifier	false		5603171	0					
ANR	5603343	ReturnType	static int		5603171	1					
ANR	5603344	Identifier	end_x_line		5603171	2					
ANR	5603345	ParameterList	"active_line * alp , const line_list * ll , bool update"		5603171	3					
ANR	5603346	Parameter	active_line * alp	1379:11:52750:52765	5603171	0	True				
ANR	5603347	ParameterType	active_line *		5603171	0					
ANR	5603348	Identifier	alp		5603171	1					
ANR	5603349	Parameter	const line_list * ll	1379:29:52768:52786	5603171	1	True				
ANR	5603350	ParameterType	const line_list *		5603171	0					
ANR	5603351	Identifier	ll		5603171	1					
ANR	5603352	Parameter	bool update	1379:50:52789:52799	5603171	2	True				
ANR	5603353	ParameterType	bool		5603171	0					
ANR	5603354	Identifier	update		5603171	1					
ANR	5603355	CFGEntryNode	ENTRY		5603171		True				
ANR	5603356	CFGExitNode	EXIT		5603171		True				
ANR	5603357	Symbol	ll		5603171						
ANR	5603358	Symbol	next		5603171						
ANR	5603359	Symbol	alp -> direction		5603171						
ANR	5603360	Symbol	( ( const subpath * ) pseg ) -> last		5603171						
ANR	5603361	Symbol	code		5603171						
ANR	5603362	Symbol	s_start		5603171						
ANR	5603363	Symbol	ll -> memory		5603171						
ANR	5603364	Symbol	alp -> end		5603171						
ANR	5603365	Symbol	alp -> x_current		5603171						
ANR	5603366	Symbol	update		5603171						
ANR	5603367	Symbol	* * pseg		5603171						
ANR	5603368	Symbol	( ( const subpath * ) pseg ) -> last -> prev		5603171						
ANR	5603369	Symbol	alp -> pseg		5603171						
ANR	5603370	Symbol	pseg -> next		5603171						
ANR	5603371	Symbol	pseg		5603171						
ANR	5603372	Symbol	pseg -> type		5603171						
ANR	5603373	Symbol	* ( ( const line_close_segment * ) pseg ) -> sub		5603171						
ANR	5603374	Symbol	DIR_UP		5603171						
ANR	5603375	Symbol	init_al		5603171						
ANR	5603376	Symbol	pseg -> prev		5603171						
ANR	5603377	Symbol	( ( const line_close_segment * ) pseg ) -> sub -> next		5603171						
ANR	5603378	Symbol	alp		5603171						
ANR	5603379	Symbol	* ll		5603171						
ANR	5603380	Symbol	s_line_close		5603171						
ANR	5603381	Symbol	false		5603171						
ANR	5603382	Symbol	( ( const line_close_segment * ) pseg ) -> sub		5603171						
ANR	5603383	Symbol	* ( ( const subpath * ) pseg ) -> last		5603171						
ANR	5603384	Symbol	* alp		5603171						
ANR	5603385	Symbol	alp -> x_next		5603171						
ANR	5603386	Symbol	alp -> start . y		5603171						
ANR	5603387	Symbol	alp -> start . x		5603171						
ANR	5603388	Symbol	alp -> more_flattened		5603171						
ANR	5603389	Symbol	alp -> end . y		5603171						
ANR	5603390	Symbol	* pseg		5603171						
ANR	5603391	Symbol	true		5603171						
ANR	5603392	Symbol	alp -> start		5603171						
ANR	5603393	Function	fill_slant_adjust	1433:0:54748:63783							
ANR	5603394	FunctionDef	"fill_slant_adjust (const line_list * ll , const active_line * flp , const active_line * alp , fixed y , fixed y1)"		5603393	0					
ANR	5603395	CompoundStatement		1436:0:54873:63783	5603393	0					
ANR	5603396	Statement	const	1437:4:54879:54883	5603393	0	True				
ANR	5603397	Statement	fill_options	1437:10:54885:54896	5603393	1	True				
ANR	5603398	Statement	*	1437:23:54898:54898	5603393	2	True				
ANR	5603399	Statement	const	1437:25:54900:54904	5603393	3	True				
ANR	5603400	ExpressionStatement	fo = ll -> fo	1437:31:54906:54917	5603393	4	True				
ANR	5603401	AssignmentExpression	fo = ll -> fo		5603393	0		=			
ANR	5603402	Identifier	fo		5603393	0					
ANR	5603403	PtrMemberAccess	ll -> fo		5603393	1					
ANR	5603404	Identifier	ll		5603393	0					
ANR	5603405	Identifier	fo		5603393	1					
ANR	5603406	IdentifierDeclStatement	const fixed Yb = y - fo -> adjust_below ;	1438:4:54923:54960	5603393	5	True				
ANR	5603407	IdentifierDecl	Yb = y - fo -> adjust_below		5603393	0					
ANR	5603408	IdentifierDeclType	const fixed		5603393	0					
ANR	5603409	Identifier	Yb		5603393	1					
ANR	5603410	AssignmentExpression	Yb = y - fo -> adjust_below		5603393	2		=			
ANR	5603411	Identifier	Yb		5603393	0					
ANR	5603412	AdditiveExpression	y - fo -> adjust_below		5603393	1		-			
ANR	5603413	Identifier	y		5603393	0					
ANR	5603414	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5603415	Identifier	fo		5603393	0					
ANR	5603416	Identifier	adjust_below		5603393	1					
ANR	5603417	IdentifierDeclStatement	fixed Ya = y + fo -> adjust_above ;	1439:4:54966:54997	5603393	6	True				
ANR	5603418	IdentifierDecl	Ya = y + fo -> adjust_above		5603393	0					
ANR	5603419	IdentifierDeclType	fixed		5603393	0					
ANR	5603420	Identifier	Ya		5603393	1					
ANR	5603421	AssignmentExpression	Ya = y + fo -> adjust_above		5603393	2		=			
ANR	5603422	Identifier	Ya		5603393	0					
ANR	5603423	AdditiveExpression	y + fo -> adjust_above		5603393	1		+			
ANR	5603424	Identifier	y		5603393	0					
ANR	5603425	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5603426	Identifier	fo		5603393	0					
ANR	5603427	Identifier	adjust_above		5603393	1					
ANR	5603428	IdentifierDeclStatement	fixed Y1b = y1 - fo -> adjust_below ;	1440:4:55003:55036	5603393	7	True				
ANR	5603429	IdentifierDecl	Y1b = y1 - fo -> adjust_below		5603393	0					
ANR	5603430	IdentifierDeclType	fixed		5603393	0					
ANR	5603431	Identifier	Y1b		5603393	1					
ANR	5603432	AssignmentExpression	Y1b = y1 - fo -> adjust_below		5603393	2		=			
ANR	5603433	Identifier	Y1b		5603393	0					
ANR	5603434	AdditiveExpression	y1 - fo -> adjust_below		5603393	1		-			
ANR	5603435	Identifier	y1		5603393	0					
ANR	5603436	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5603437	Identifier	fo		5603393	0					
ANR	5603438	Identifier	adjust_below		5603393	1					
ANR	5603439	IdentifierDeclStatement	const fixed Y1a = y1 + fo -> adjust_above ;	1441:4:55042:55081	5603393	8	True				
ANR	5603440	IdentifierDecl	Y1a = y1 + fo -> adjust_above		5603393	0					
ANR	5603441	IdentifierDeclType	const fixed		5603393	0					
ANR	5603442	Identifier	Y1a		5603393	1					
ANR	5603443	AssignmentExpression	Y1a = y1 + fo -> adjust_above		5603393	2		=			
ANR	5603444	Identifier	Y1a		5603393	0					
ANR	5603445	AdditiveExpression	y1 + fo -> adjust_above		5603393	1		+			
ANR	5603446	Identifier	y1		5603393	0					
ANR	5603447	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5603448	Identifier	fo		5603393	0					
ANR	5603449	Identifier	adjust_above		5603393	1					
ANR	5603450	IdentifierDeclStatement	"const gs_fixed_edge * plbot , * prbot , * pltop , * prtop ;"	1442:4:55087:55137	5603393	9	True				
ANR	5603451	IdentifierDecl	* plbot		5603393	0					
ANR	5603452	IdentifierDeclType	const gs_fixed_edge *		5603393	0					
ANR	5603453	Identifier	plbot		5603393	1					
ANR	5603454	IdentifierDecl	* prbot		5603393	1					
ANR	5603455	IdentifierDeclType	const gs_fixed_edge *		5603393	0					
ANR	5603456	Identifier	prbot		5603393	1					
ANR	5603457	IdentifierDecl	* pltop		5603393	2					
ANR	5603458	IdentifierDeclType	const gs_fixed_edge *		5603393	0					
ANR	5603459	Identifier	pltop		5603393	1					
ANR	5603460	IdentifierDecl	* prtop		5603393	3					
ANR	5603461	IdentifierDeclType	const gs_fixed_edge *		5603393	0					
ANR	5603462	Identifier	prtop		5603393	1					
ANR	5603463	IdentifierDeclStatement	"gs_fixed_edge vert_left , slant_left , vert_right , slant_right ;"	1443:4:55143:55203	5603393	10	True				
ANR	5603464	IdentifierDecl	vert_left		5603393	0					
ANR	5603465	IdentifierDeclType	gs_fixed_edge		5603393	0					
ANR	5603466	Identifier	vert_left		5603393	1					
ANR	5603467	IdentifierDecl	slant_left		5603393	1					
ANR	5603468	IdentifierDeclType	gs_fixed_edge		5603393	0					
ANR	5603469	Identifier	slant_left		5603393	1					
ANR	5603470	IdentifierDecl	vert_right		5603393	2					
ANR	5603471	IdentifierDeclType	gs_fixed_edge		5603393	0					
ANR	5603472	Identifier	vert_right		5603393	1					
ANR	5603473	IdentifierDecl	slant_right		5603393	3					
ANR	5603474	IdentifierDeclType	gs_fixed_edge		5603393	0					
ANR	5603475	Identifier	slant_right		5603393	1					
ANR	5603476	IdentifierDeclStatement	int code ;	1444:4:55209:55217	5603393	11	True				
ANR	5603477	IdentifierDecl	code		5603393	0					
ANR	5603478	IdentifierDeclType	int		5603393	0					
ANR	5603479	Identifier	code		5603393	1					
ANR	5603480	ExpressionStatement	INCR ( slant )	1446:4:55224:55235	5603393	12	True				
ANR	5603481	CallExpression	INCR ( slant )		5603393	0					
ANR	5603482	Callee	INCR		5603393	0					
ANR	5603483	Identifier	INCR		5603393	0					
ANR	5603484	ArgumentList	slant		5603393	1					
ANR	5603485	Argument	slant		5603393	0					
ANR	5603486	Identifier	slant		5603393	0					
ANR	5603487	ExpressionStatement	slant_left . start . x = flp -> start . x - fo -> adjust_left	1450:4:55313:55364	5603393	13	True				
ANR	5603488	AssignmentExpression	slant_left . start . x = flp -> start . x - fo -> adjust_left		5603393	0		=			
ANR	5603489	MemberAccess	slant_left . start . x		5603393	0					
ANR	5603490	MemberAccess	slant_left . start		5603393	0					
ANR	5603491	Identifier	slant_left		5603393	0					
ANR	5603492	Identifier	start		5603393	1					
ANR	5603493	Identifier	x		5603393	1					
ANR	5603494	AdditiveExpression	flp -> start . x - fo -> adjust_left		5603393	1		-			
ANR	5603495	MemberAccess	flp -> start . x		5603393	0					
ANR	5603496	PtrMemberAccess	flp -> start		5603393	0					
ANR	5603497	Identifier	flp		5603393	0					
ANR	5603498	Identifier	start		5603393	1					
ANR	5603499	Identifier	x		5603393	1					
ANR	5603500	PtrMemberAccess	fo -> adjust_left		5603393	1					
ANR	5603501	Identifier	fo		5603393	0					
ANR	5603502	Identifier	adjust_left		5603393	1					
ANR	5603503	ExpressionStatement	slant_left . end . x = flp -> end . x - fo -> adjust_left	1451:4:55370:55417	5603393	14	True				
ANR	5603504	AssignmentExpression	slant_left . end . x = flp -> end . x - fo -> adjust_left		5603393	0		=			
ANR	5603505	MemberAccess	slant_left . end . x		5603393	0					
ANR	5603506	MemberAccess	slant_left . end		5603393	0					
ANR	5603507	Identifier	slant_left		5603393	0					
ANR	5603508	Identifier	end		5603393	1					
ANR	5603509	Identifier	x		5603393	1					
ANR	5603510	AdditiveExpression	flp -> end . x - fo -> adjust_left		5603393	1		-			
ANR	5603511	MemberAccess	flp -> end . x		5603393	0					
ANR	5603512	PtrMemberAccess	flp -> end		5603393	0					
ANR	5603513	Identifier	flp		5603393	0					
ANR	5603514	Identifier	end		5603393	1					
ANR	5603515	Identifier	x		5603393	1					
ANR	5603516	PtrMemberAccess	fo -> adjust_left		5603393	1					
ANR	5603517	Identifier	fo		5603393	0					
ANR	5603518	Identifier	adjust_left		5603393	1					
ANR	5603519	ExpressionStatement	slant_right . start . x = alp -> start . x + fo -> adjust_right	1452:4:55423:55476	5603393	15	True				
ANR	5603520	AssignmentExpression	slant_right . start . x = alp -> start . x + fo -> adjust_right		5603393	0		=			
ANR	5603521	MemberAccess	slant_right . start . x		5603393	0					
ANR	5603522	MemberAccess	slant_right . start		5603393	0					
ANR	5603523	Identifier	slant_right		5603393	0					
ANR	5603524	Identifier	start		5603393	1					
ANR	5603525	Identifier	x		5603393	1					
ANR	5603526	AdditiveExpression	alp -> start . x + fo -> adjust_right		5603393	1		+			
ANR	5603527	MemberAccess	alp -> start . x		5603393	0					
ANR	5603528	PtrMemberAccess	alp -> start		5603393	0					
ANR	5603529	Identifier	alp		5603393	0					
ANR	5603530	Identifier	start		5603393	1					
ANR	5603531	Identifier	x		5603393	1					
ANR	5603532	PtrMemberAccess	fo -> adjust_right		5603393	1					
ANR	5603533	Identifier	fo		5603393	0					
ANR	5603534	Identifier	adjust_right		5603393	1					
ANR	5603535	ExpressionStatement	slant_right . end . x = alp -> end . x + fo -> adjust_right	1453:4:55482:55531	5603393	16	True				
ANR	5603536	AssignmentExpression	slant_right . end . x = alp -> end . x + fo -> adjust_right		5603393	0		=			
ANR	5603537	MemberAccess	slant_right . end . x		5603393	0					
ANR	5603538	MemberAccess	slant_right . end		5603393	0					
ANR	5603539	Identifier	slant_right		5603393	0					
ANR	5603540	Identifier	end		5603393	1					
ANR	5603541	Identifier	x		5603393	1					
ANR	5603542	AdditiveExpression	alp -> end . x + fo -> adjust_right		5603393	1		+			
ANR	5603543	MemberAccess	alp -> end . x		5603393	0					
ANR	5603544	PtrMemberAccess	alp -> end		5603393	0					
ANR	5603545	Identifier	alp		5603393	0					
ANR	5603546	Identifier	end		5603393	1					
ANR	5603547	Identifier	x		5603393	1					
ANR	5603548	PtrMemberAccess	fo -> adjust_right		5603393	1					
ANR	5603549	Identifier	fo		5603393	0					
ANR	5603550	Identifier	adjust_right		5603393	1					
ANR	5603551	IfStatement	if ( flp -> start . x < flp -> end . x )		5603393	17					
ANR	5603552	Condition	flp -> start . x < flp -> end . x	1454:8:55541:55565	5603393	0	True				
ANR	5603553	RelationalExpression	flp -> start . x < flp -> end . x		5603393	0		<			
ANR	5603554	MemberAccess	flp -> start . x		5603393	0					
ANR	5603555	PtrMemberAccess	flp -> start		5603393	0					
ANR	5603556	Identifier	flp		5603393	0					
ANR	5603557	Identifier	start		5603393	1					
ANR	5603558	Identifier	x		5603393	1					
ANR	5603559	MemberAccess	flp -> end . x		5603393	1					
ANR	5603560	PtrMemberAccess	flp -> end		5603393	0					
ANR	5603561	Identifier	flp		5603393	0					
ANR	5603562	Identifier	end		5603393	1					
ANR	5603563	Identifier	x		5603393	1					
ANR	5603564	CompoundStatement		19:35:694:694	5603393	1					
ANR	5603565	ExpressionStatement	vert_left . start . x = vert_left . end . x = flp -> x_current - fo -> adjust_left	1455:8:55578:55648	5603393	0	True				
ANR	5603566	AssignmentExpression	vert_left . start . x = vert_left . end . x = flp -> x_current - fo -> adjust_left		5603393	0		=			
ANR	5603567	MemberAccess	vert_left . start . x		5603393	0					
ANR	5603568	MemberAccess	vert_left . start		5603393	0					
ANR	5603569	Identifier	vert_left		5603393	0					
ANR	5603570	Identifier	start		5603393	1					
ANR	5603571	Identifier	x		5603393	1					
ANR	5603572	AssignmentExpression	vert_left . end . x = flp -> x_current - fo -> adjust_left		5603393	1		=			
ANR	5603573	MemberAccess	vert_left . end . x		5603393	0					
ANR	5603574	MemberAccess	vert_left . end		5603393	0					
ANR	5603575	Identifier	vert_left		5603393	0					
ANR	5603576	Identifier	end		5603393	1					
ANR	5603577	Identifier	x		5603393	1					
ANR	5603578	AdditiveExpression	flp -> x_current - fo -> adjust_left		5603393	1		-			
ANR	5603579	PtrMemberAccess	flp -> x_current		5603393	0					
ANR	5603580	Identifier	flp		5603393	0					
ANR	5603581	Identifier	x_current		5603393	1					
ANR	5603582	PtrMemberAccess	fo -> adjust_left		5603393	1					
ANR	5603583	Identifier	fo		5603393	0					
ANR	5603584	Identifier	adjust_left		5603393	1					
ANR	5603585	ExpressionStatement	"vert_left . start . y = Yb , vert_left . end . y = Ya"	1456:8:55658:55702	5603393	1	True				
ANR	5603586	Expression	"vert_left . start . y = Yb , vert_left . end . y = Ya"		5603393	0					
ANR	5603587	AssignmentExpression	vert_left . start . y = Yb		5603393	0		=			
ANR	5603588	MemberAccess	vert_left . start . y		5603393	0					
ANR	5603589	MemberAccess	vert_left . start		5603393	0					
ANR	5603590	Identifier	vert_left		5603393	0					
ANR	5603591	Identifier	start		5603393	1					
ANR	5603592	Identifier	y		5603393	1					
ANR	5603593	Identifier	Yb		5603393	1					
ANR	5603594	AssignmentExpression	vert_left . end . y = Ya		5603393	1		=			
ANR	5603595	MemberAccess	vert_left . end . y		5603393	0					
ANR	5603596	MemberAccess	vert_left . end		5603393	0					
ANR	5603597	Identifier	vert_left		5603393	0					
ANR	5603598	Identifier	end		5603393	1					
ANR	5603599	Identifier	y		5603393	1					
ANR	5603600	Identifier	Ya		5603393	1					
ANR	5603601	ExpressionStatement	vert_right . start . x = vert_right . end . x = alp -> x_next + fo -> adjust_right	1457:8:55712:55782	5603393	2	True				
ANR	5603602	AssignmentExpression	vert_right . start . x = vert_right . end . x = alp -> x_next + fo -> adjust_right		5603393	0		=			
ANR	5603603	MemberAccess	vert_right . start . x		5603393	0					
ANR	5603604	MemberAccess	vert_right . start		5603393	0					
ANR	5603605	Identifier	vert_right		5603393	0					
ANR	5603606	Identifier	start		5603393	1					
ANR	5603607	Identifier	x		5603393	1					
ANR	5603608	AssignmentExpression	vert_right . end . x = alp -> x_next + fo -> adjust_right		5603393	1		=			
ANR	5603609	MemberAccess	vert_right . end . x		5603393	0					
ANR	5603610	MemberAccess	vert_right . end		5603393	0					
ANR	5603611	Identifier	vert_right		5603393	0					
ANR	5603612	Identifier	end		5603393	1					
ANR	5603613	Identifier	x		5603393	1					
ANR	5603614	AdditiveExpression	alp -> x_next + fo -> adjust_right		5603393	1		+			
ANR	5603615	PtrMemberAccess	alp -> x_next		5603393	0					
ANR	5603616	Identifier	alp		5603393	0					
ANR	5603617	Identifier	x_next		5603393	1					
ANR	5603618	PtrMemberAccess	fo -> adjust_right		5603393	1					
ANR	5603619	Identifier	fo		5603393	0					
ANR	5603620	Identifier	adjust_right		5603393	1					
ANR	5603621	ExpressionStatement	"vert_right . start . y = Y1b , vert_right . end . y = Y1a"	1458:8:55792:55840	5603393	3	True				
ANR	5603622	Expression	"vert_right . start . y = Y1b , vert_right . end . y = Y1a"		5603393	0					
ANR	5603623	AssignmentExpression	vert_right . start . y = Y1b		5603393	0		=			
ANR	5603624	MemberAccess	vert_right . start . y		5603393	0					
ANR	5603625	MemberAccess	vert_right . start		5603393	0					
ANR	5603626	Identifier	vert_right		5603393	0					
ANR	5603627	Identifier	start		5603393	1					
ANR	5603628	Identifier	y		5603393	1					
ANR	5603629	Identifier	Y1b		5603393	1					
ANR	5603630	AssignmentExpression	vert_right . end . y = Y1a		5603393	1		=			
ANR	5603631	MemberAccess	vert_right . end . y		5603393	0					
ANR	5603632	MemberAccess	vert_right . end		5603393	0					
ANR	5603633	Identifier	vert_right		5603393	0					
ANR	5603634	Identifier	end		5603393	1					
ANR	5603635	Identifier	y		5603393	1					
ANR	5603636	Identifier	Y1a		5603393	1					
ANR	5603637	ExpressionStatement	slant_left . start . y = flp -> start . y + fo -> adjust_above	1459:8:55850:55902	5603393	4	True				
ANR	5603638	AssignmentExpression	slant_left . start . y = flp -> start . y + fo -> adjust_above		5603393	0		=			
ANR	5603639	MemberAccess	slant_left . start . y		5603393	0					
ANR	5603640	MemberAccess	slant_left . start		5603393	0					
ANR	5603641	Identifier	slant_left		5603393	0					
ANR	5603642	Identifier	start		5603393	1					
ANR	5603643	Identifier	y		5603393	1					
ANR	5603644	AdditiveExpression	flp -> start . y + fo -> adjust_above		5603393	1		+			
ANR	5603645	MemberAccess	flp -> start . y		5603393	0					
ANR	5603646	PtrMemberAccess	flp -> start		5603393	0					
ANR	5603647	Identifier	flp		5603393	0					
ANR	5603648	Identifier	start		5603393	1					
ANR	5603649	Identifier	y		5603393	1					
ANR	5603650	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5603651	Identifier	fo		5603393	0					
ANR	5603652	Identifier	adjust_above		5603393	1					
ANR	5603653	ExpressionStatement	slant_left . end . y = flp -> end . y + fo -> adjust_above	1460:8:55912:55960	5603393	5	True				
ANR	5603654	AssignmentExpression	slant_left . end . y = flp -> end . y + fo -> adjust_above		5603393	0		=			
ANR	5603655	MemberAccess	slant_left . end . y		5603393	0					
ANR	5603656	MemberAccess	slant_left . end		5603393	0					
ANR	5603657	Identifier	slant_left		5603393	0					
ANR	5603658	Identifier	end		5603393	1					
ANR	5603659	Identifier	y		5603393	1					
ANR	5603660	AdditiveExpression	flp -> end . y + fo -> adjust_above		5603393	1		+			
ANR	5603661	MemberAccess	flp -> end . y		5603393	0					
ANR	5603662	PtrMemberAccess	flp -> end		5603393	0					
ANR	5603663	Identifier	flp		5603393	0					
ANR	5603664	Identifier	end		5603393	1					
ANR	5603665	Identifier	y		5603393	1					
ANR	5603666	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5603667	Identifier	fo		5603393	0					
ANR	5603668	Identifier	adjust_above		5603393	1					
ANR	5603669	ExpressionStatement	slant_right . start . y = alp -> start . y - fo -> adjust_below	1461:8:55970:56023	5603393	6	True				
ANR	5603670	AssignmentExpression	slant_right . start . y = alp -> start . y - fo -> adjust_below		5603393	0		=			
ANR	5603671	MemberAccess	slant_right . start . y		5603393	0					
ANR	5603672	MemberAccess	slant_right . start		5603393	0					
ANR	5603673	Identifier	slant_right		5603393	0					
ANR	5603674	Identifier	start		5603393	1					
ANR	5603675	Identifier	y		5603393	1					
ANR	5603676	AdditiveExpression	alp -> start . y - fo -> adjust_below		5603393	1		-			
ANR	5603677	MemberAccess	alp -> start . y		5603393	0					
ANR	5603678	PtrMemberAccess	alp -> start		5603393	0					
ANR	5603679	Identifier	alp		5603393	0					
ANR	5603680	Identifier	start		5603393	1					
ANR	5603681	Identifier	y		5603393	1					
ANR	5603682	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5603683	Identifier	fo		5603393	0					
ANR	5603684	Identifier	adjust_below		5603393	1					
ANR	5603685	ExpressionStatement	slant_right . end . y = alp -> end . y - fo -> adjust_below	1462:8:56033:56082	5603393	7	True				
ANR	5603686	AssignmentExpression	slant_right . end . y = alp -> end . y - fo -> adjust_below		5603393	0		=			
ANR	5603687	MemberAccess	slant_right . end . y		5603393	0					
ANR	5603688	MemberAccess	slant_right . end		5603393	0					
ANR	5603689	Identifier	slant_right		5603393	0					
ANR	5603690	Identifier	end		5603393	1					
ANR	5603691	Identifier	y		5603393	1					
ANR	5603692	AdditiveExpression	alp -> end . y - fo -> adjust_below		5603393	1		-			
ANR	5603693	MemberAccess	alp -> end . y		5603393	0					
ANR	5603694	PtrMemberAccess	alp -> end		5603393	0					
ANR	5603695	Identifier	alp		5603393	0					
ANR	5603696	Identifier	end		5603393	1					
ANR	5603697	Identifier	y		5603393	1					
ANR	5603698	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5603699	Identifier	fo		5603393	0					
ANR	5603700	Identifier	adjust_below		5603393	1					
ANR	5603701	ExpressionStatement	"plbot = & vert_left , prbot = & slant_right"	1463:8:56092:56132	5603393	8	True				
ANR	5603702	Expression	"plbot = & vert_left , prbot = & slant_right"		5603393	0					
ANR	5603703	AssignmentExpression	plbot = & vert_left		5603393	0		=			
ANR	5603704	Identifier	plbot		5603393	0					
ANR	5603705	UnaryOperationExpression	& vert_left		5603393	1					
ANR	5603706	UnaryOperator	&		5603393	0					
ANR	5603707	Identifier	vert_left		5603393	1					
ANR	5603708	AssignmentExpression	prbot = & slant_right		5603393	1		=			
ANR	5603709	Identifier	prbot		5603393	0					
ANR	5603710	UnaryOperationExpression	& slant_right		5603393	1					
ANR	5603711	UnaryOperator	&		5603393	0					
ANR	5603712	Identifier	slant_right		5603393	1					
ANR	5603713	ExpressionStatement	"pltop = & slant_left , prtop = & vert_right"	1464:8:56142:56182	5603393	9	True				
ANR	5603714	Expression	"pltop = & slant_left , prtop = & vert_right"		5603393	0					
ANR	5603715	AssignmentExpression	pltop = & slant_left		5603393	0		=			
ANR	5603716	Identifier	pltop		5603393	0					
ANR	5603717	UnaryOperationExpression	& slant_left		5603393	1					
ANR	5603718	UnaryOperator	&		5603393	0					
ANR	5603719	Identifier	slant_left		5603393	1					
ANR	5603720	AssignmentExpression	prtop = & vert_right		5603393	1		=			
ANR	5603721	Identifier	prtop		5603393	0					
ANR	5603722	UnaryOperationExpression	& vert_right		5603393	1					
ANR	5603723	UnaryOperator	&		5603393	0					
ANR	5603724	Identifier	vert_right		5603393	1					
ANR	5603725	IfStatement	if ( TRY_TO_EXTEND_TRAP )		5603393	10					
ANR	5603726	Condition	TRY_TO_EXTEND_TRAP	1465:12:56196:56213	5603393	0	True				
ANR	5603727	Identifier	TRY_TO_EXTEND_TRAP		5603393	0					
ANR	5603728	CompoundStatement		32:12:1364:1381	5603393	1					
ANR	5603729	IdentifierDeclStatement	"int x , cx , cy , dy ;"	1467:12:56238:56255	5603393	0	True				
ANR	5603730	IdentifierDecl	x		5603393	0					
ANR	5603731	IdentifierDeclType	int		5603393	0					
ANR	5603732	Identifier	x		5603393	1					
ANR	5603733	IdentifierDecl	cx		5603393	1					
ANR	5603734	IdentifierDeclType	int		5603393	0					
ANR	5603735	Identifier	cx		5603393	1					
ANR	5603736	IdentifierDecl	cy		5603393	2					
ANR	5603737	IdentifierDeclType	int		5603393	0					
ANR	5603738	Identifier	cy		5603393	1					
ANR	5603739	IdentifierDecl	dy		5603393	3					
ANR	5603740	IdentifierDeclType	int		5603393	0					
ANR	5603741	Identifier	dy		5603393	1					
ANR	5603742	WhileStatement	while ( slant_right . end . y < Y1a )		5603393	1					
ANR	5603743	Condition	slant_right . end . y < Y1a	1471:19:56443:56465	5603393	0	True				
ANR	5603744	RelationalExpression	slant_right . end . y < Y1a		5603393	0		<			
ANR	5603745	MemberAccess	slant_right . end . y		5603393	0					
ANR	5603746	MemberAccess	slant_right . end		5603393	0					
ANR	5603747	Identifier	slant_right		5603393	0					
ANR	5603748	Identifier	end		5603393	1					
ANR	5603749	Identifier	y		5603393	1					
ANR	5603750	Identifier	Y1a		5603393	1					
ANR	5603751	CompoundStatement		37:12:1606:1606	5603393	1					
ANR	5603752	ExpressionStatement	slant_right . end . x += slant_right . end . x - slant_right . start . x	1473:16:56498:56558	5603393	0	True				
ANR	5603753	AssignmentExpression	slant_right . end . x += slant_right . end . x - slant_right . start . x		5603393	0		+=			
ANR	5603754	MemberAccess	slant_right . end . x		5603393	0					
ANR	5603755	MemberAccess	slant_right . end		5603393	0					
ANR	5603756	Identifier	slant_right		5603393	0					
ANR	5603757	Identifier	end		5603393	1					
ANR	5603758	Identifier	x		5603393	1					
ANR	5603759	AdditiveExpression	slant_right . end . x - slant_right . start . x		5603393	1		-			
ANR	5603760	MemberAccess	slant_right . end . x		5603393	0					
ANR	5603761	MemberAccess	slant_right . end		5603393	0					
ANR	5603762	Identifier	slant_right		5603393	0					
ANR	5603763	Identifier	end		5603393	1					
ANR	5603764	Identifier	x		5603393	1					
ANR	5603765	MemberAccess	slant_right . start . x		5603393	1					
ANR	5603766	MemberAccess	slant_right . start		5603393	0					
ANR	5603767	Identifier	slant_right		5603393	0					
ANR	5603768	Identifier	start		5603393	1					
ANR	5603769	Identifier	x		5603393	1					
ANR	5603770	ExpressionStatement	slant_right . end . y += slant_right . end . y - slant_right . start . y	1474:16:56576:56636	5603393	1	True				
ANR	5603771	AssignmentExpression	slant_right . end . y += slant_right . end . y - slant_right . start . y		5603393	0		+=			
ANR	5603772	MemberAccess	slant_right . end . y		5603393	0					
ANR	5603773	MemberAccess	slant_right . end		5603393	0					
ANR	5603774	Identifier	slant_right		5603393	0					
ANR	5603775	Identifier	end		5603393	1					
ANR	5603776	Identifier	y		5603393	1					
ANR	5603777	AdditiveExpression	slant_right . end . y - slant_right . start . y		5603393	1		-			
ANR	5603778	MemberAccess	slant_right . end . y		5603393	0					
ANR	5603779	MemberAccess	slant_right . end		5603393	0					
ANR	5603780	Identifier	slant_right		5603393	0					
ANR	5603781	Identifier	end		5603393	1					
ANR	5603782	Identifier	y		5603393	1					
ANR	5603783	MemberAccess	slant_right . start . y		5603393	1					
ANR	5603784	MemberAccess	slant_right . start		5603393	0					
ANR	5603785	Identifier	slant_right		5603393	0					
ANR	5603786	Identifier	start		5603393	1					
ANR	5603787	Identifier	y		5603393	1					
ANR	5603788	WhileStatement	while ( slant_left . start . y > Yb )		5603393	2					
ANR	5603789	Condition	slant_left . start . y > Yb	1476:19:56671:56693	5603393	0	True				
ANR	5603790	RelationalExpression	slant_left . start . y > Yb		5603393	0		>			
ANR	5603791	MemberAccess	slant_left . start . y		5603393	0					
ANR	5603792	MemberAccess	slant_left . start		5603393	0					
ANR	5603793	Identifier	slant_left		5603393	0					
ANR	5603794	Identifier	start		5603393	1					
ANR	5603795	Identifier	y		5603393	1					
ANR	5603796	Identifier	Yb		5603393	1					
ANR	5603797	CompoundStatement		42:12:1834:1834	5603393	1					
ANR	5603798	ExpressionStatement	slant_left . start . x -= slant_left . end . x - slant_left . start . x	1478:16:56726:56785	5603393	0	True				
ANR	5603799	AssignmentExpression	slant_left . start . x -= slant_left . end . x - slant_left . start . x		5603393	0		-=			
ANR	5603800	MemberAccess	slant_left . start . x		5603393	0					
ANR	5603801	MemberAccess	slant_left . start		5603393	0					
ANR	5603802	Identifier	slant_left		5603393	0					
ANR	5603803	Identifier	start		5603393	1					
ANR	5603804	Identifier	x		5603393	1					
ANR	5603805	AdditiveExpression	slant_left . end . x - slant_left . start . x		5603393	1		-			
ANR	5603806	MemberAccess	slant_left . end . x		5603393	0					
ANR	5603807	MemberAccess	slant_left . end		5603393	0					
ANR	5603808	Identifier	slant_left		5603393	0					
ANR	5603809	Identifier	end		5603393	1					
ANR	5603810	Identifier	x		5603393	1					
ANR	5603811	MemberAccess	slant_left . start . x		5603393	1					
ANR	5603812	MemberAccess	slant_left . start		5603393	0					
ANR	5603813	Identifier	slant_left		5603393	0					
ANR	5603814	Identifier	start		5603393	1					
ANR	5603815	Identifier	x		5603393	1					
ANR	5603816	ExpressionStatement	slant_left . start . y -= slant_left . end . y - slant_left . start . y	1479:16:56803:56862	5603393	1	True				
ANR	5603817	AssignmentExpression	slant_left . start . y -= slant_left . end . y - slant_left . start . y		5603393	0		-=			
ANR	5603818	MemberAccess	slant_left . start . y		5603393	0					
ANR	5603819	MemberAccess	slant_left . start		5603393	0					
ANR	5603820	Identifier	slant_left		5603393	0					
ANR	5603821	Identifier	start		5603393	1					
ANR	5603822	Identifier	y		5603393	1					
ANR	5603823	AdditiveExpression	slant_left . end . y - slant_left . start . y		5603393	1		-			
ANR	5603824	MemberAccess	slant_left . end . y		5603393	0					
ANR	5603825	MemberAccess	slant_left . end		5603393	0					
ANR	5603826	Identifier	slant_left		5603393	0					
ANR	5603827	Identifier	end		5603393	1					
ANR	5603828	Identifier	y		5603393	1					
ANR	5603829	MemberAccess	slant_left . start . y		5603393	1					
ANR	5603830	MemberAccess	slant_left . start		5603393	0					
ANR	5603831	Identifier	slant_left		5603393	0					
ANR	5603832	Identifier	start		5603393	1					
ANR	5603833	Identifier	y		5603393	1					
ANR	5603834	ExpressionStatement	cy = fixed_pixround ( vert_right . start . y ) + fixed_half	1485:12:57144:57194	5603393	3	True				
ANR	5603835	AssignmentExpression	cy = fixed_pixround ( vert_right . start . y ) + fixed_half		5603393	0		=			
ANR	5603836	Identifier	cy		5603393	0					
ANR	5603837	AdditiveExpression	fixed_pixround ( vert_right . start . y ) + fixed_half		5603393	1		+			
ANR	5603838	CallExpression	fixed_pixround ( vert_right . start . y )		5603393	0					
ANR	5603839	Callee	fixed_pixround		5603393	0					
ANR	5603840	Identifier	fixed_pixround		5603393	0					
ANR	5603841	ArgumentList	vert_right . start . y		5603393	1					
ANR	5603842	Argument	vert_right . start . y		5603393	0					
ANR	5603843	MemberAccess	vert_right . start . y		5603393	0					
ANR	5603844	MemberAccess	vert_right . start		5603393	0					
ANR	5603845	Identifier	vert_right		5603393	0					
ANR	5603846	Identifier	start		5603393	1					
ANR	5603847	Identifier	y		5603393	1					
ANR	5603848	Identifier	fixed_half		5603393	1					
ANR	5603849	ExpressionStatement	cx = fixed_pixround ( vert_right . start . x ) + fixed_half	1486:12:57208:57258	5603393	4	True				
ANR	5603850	AssignmentExpression	cx = fixed_pixround ( vert_right . start . x ) + fixed_half		5603393	0		=			
ANR	5603851	Identifier	cx		5603393	0					
ANR	5603852	AdditiveExpression	fixed_pixround ( vert_right . start . x ) + fixed_half		5603393	1		+			
ANR	5603853	CallExpression	fixed_pixround ( vert_right . start . x )		5603393	0					
ANR	5603854	Callee	fixed_pixround		5603393	0					
ANR	5603855	Identifier	fixed_pixround		5603393	0					
ANR	5603856	ArgumentList	vert_right . start . x		5603393	1					
ANR	5603857	Argument	vert_right . start . x		5603393	0					
ANR	5603858	MemberAccess	vert_right . start . x		5603393	0					
ANR	5603859	MemberAccess	vert_right . start		5603393	0					
ANR	5603860	Identifier	vert_right		5603393	0					
ANR	5603861	Identifier	start		5603393	1					
ANR	5603862	Identifier	x		5603393	1					
ANR	5603863	Identifier	fixed_half		5603393	1					
ANR	5603864	ExpressionStatement	dy = slant_right . end . y - slant_right . start . y	1487:12:57272:57314	5603393	5	True				
ANR	5603865	AssignmentExpression	dy = slant_right . end . y - slant_right . start . y		5603393	0		=			
ANR	5603866	Identifier	dy		5603393	0					
ANR	5603867	AdditiveExpression	slant_right . end . y - slant_right . start . y		5603393	1		-			
ANR	5603868	MemberAccess	slant_right . end . y		5603393	0					
ANR	5603869	MemberAccess	slant_right . end		5603393	0					
ANR	5603870	Identifier	slant_right		5603393	0					
ANR	5603871	Identifier	end		5603393	1					
ANR	5603872	Identifier	y		5603393	1					
ANR	5603873	MemberAccess	slant_right . start . y		5603393	1					
ANR	5603874	MemberAccess	slant_right . start		5603393	0					
ANR	5603875	Identifier	slant_right		5603393	0					
ANR	5603876	Identifier	start		5603393	1					
ANR	5603877	Identifier	y		5603393	1					
ANR	5603878	ExpressionStatement	x = vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1488:12:57328:57541	5603393	6	True				
ANR	5603879	AssignmentExpression	x = vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	0		=			
ANR	5603880	Identifier	x		5603393	0					
ANR	5603881	AdditiveExpression	vert_right . start . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1		+			
ANR	5603882	MemberAccess	vert_right . start . x		5603393	0					
ANR	5603883	MemberAccess	vert_right . start		5603393	0					
ANR	5603884	Identifier	vert_right		5603393	0					
ANR	5603885	Identifier	start		5603393	1					
ANR	5603886	Identifier	x		5603393	1					
ANR	5603887	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1					
ANR	5603888	CastTarget	fixed		5603393	0					
ANR	5603889	MultiplicativeExpression	( ( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy )		5603393	1		/			
ANR	5603890	AdditiveExpression	( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) ) + dy - 1		5603393	0		+			
ANR	5603891	MultiplicativeExpression	( ( int64_t ) ( slant_right . end . x - slant_right . start . x ) ) * ( ( int64_t ) ( cy - vert_right . start . y ) )		5603393	0		*			
ANR	5603892	CastExpression	( int64_t ) ( slant_right . end . x - slant_right . start . x )		5603393	0					
ANR	5603893	CastTarget	int64_t		5603393	0					
ANR	5603894	AdditiveExpression	slant_right . end . x - slant_right . start . x		5603393	1		-			
ANR	5603895	MemberAccess	slant_right . end . x		5603393	0					
ANR	5603896	MemberAccess	slant_right . end		5603393	0					
ANR	5603897	Identifier	slant_right		5603393	0					
ANR	5603898	Identifier	end		5603393	1					
ANR	5603899	Identifier	x		5603393	1					
ANR	5603900	MemberAccess	slant_right . start . x		5603393	1					
ANR	5603901	MemberAccess	slant_right . start		5603393	0					
ANR	5603902	Identifier	slant_right		5603393	0					
ANR	5603903	Identifier	start		5603393	1					
ANR	5603904	Identifier	x		5603393	1					
ANR	5603905	CastExpression	( int64_t ) ( cy - vert_right . start . y )		5603393	1					
ANR	5603906	CastTarget	int64_t		5603393	0					
ANR	5603907	AdditiveExpression	cy - vert_right . start . y		5603393	1		-			
ANR	5603908	Identifier	cy		5603393	0					
ANR	5603909	MemberAccess	vert_right . start . y		5603393	1					
ANR	5603910	MemberAccess	vert_right . start		5603393	0					
ANR	5603911	Identifier	vert_right		5603393	0					
ANR	5603912	Identifier	start		5603393	1					
ANR	5603913	Identifier	y		5603393	1					
ANR	5603914	AdditiveExpression	dy - 1		5603393	1		-			
ANR	5603915	Identifier	dy		5603393	0					
ANR	5603916	PrimaryExpression	1		5603393	1					
ANR	5603917	CastExpression	( int64_t ) dy		5603393	1					
ANR	5603918	CastTarget	int64_t		5603393	0					
ANR	5603919	Identifier	dy		5603393	1					
ANR	5603920	IfStatement	if ( ( cy >= Y1a ) || ( x < cx ) )		5603393	7					
ANR	5603921	Condition	( cy >= Y1a ) || ( x < cx )	1492:16:57559:57581	5603393	0	True				
ANR	5603922	OrExpression	( cy >= Y1a ) || ( x < cx )		5603393	0		||			
ANR	5603923	RelationalExpression	cy >= Y1a		5603393	0		>=			
ANR	5603924	Identifier	cy		5603393	0					
ANR	5603925	Identifier	Y1a		5603393	1					
ANR	5603926	RelationalExpression	x < cx		5603393	1		<			
ANR	5603927	Identifier	x		5603393	0					
ANR	5603928	Identifier	cx		5603393	1					
ANR	5603929	CompoundStatement		58:12:2722:2722	5603393	1					
ANR	5603930	ExpressionStatement	Y1b = Y1a	1495:16:57675:57684	5603393	0	True				
ANR	5603931	AssignmentExpression	Y1b = Y1a		5603393	0		=			
ANR	5603932	Identifier	Y1b		5603393	0					
ANR	5603933	Identifier	Y1a		5603393	1					
ANR	5603934	ExpressionStatement	cy = fixed_pixround ( vert_left . end . y ) - fixed_half	1501:12:57962:58009	5603393	8	True				
ANR	5603935	AssignmentExpression	cy = fixed_pixround ( vert_left . end . y ) - fixed_half		5603393	0		=			
ANR	5603936	Identifier	cy		5603393	0					
ANR	5603937	AdditiveExpression	fixed_pixround ( vert_left . end . y ) - fixed_half		5603393	1		-			
ANR	5603938	CallExpression	fixed_pixround ( vert_left . end . y )		5603393	0					
ANR	5603939	Callee	fixed_pixround		5603393	0					
ANR	5603940	Identifier	fixed_pixround		5603393	0					
ANR	5603941	ArgumentList	vert_left . end . y		5603393	1					
ANR	5603942	Argument	vert_left . end . y		5603393	0					
ANR	5603943	MemberAccess	vert_left . end . y		5603393	0					
ANR	5603944	MemberAccess	vert_left . end		5603393	0					
ANR	5603945	Identifier	vert_left		5603393	0					
ANR	5603946	Identifier	end		5603393	1					
ANR	5603947	Identifier	y		5603393	1					
ANR	5603948	Identifier	fixed_half		5603393	1					
ANR	5603949	ExpressionStatement	cx = fixed_pixround ( vert_left . end . x ) - fixed_half	1502:12:58023:58070	5603393	9	True				
ANR	5603950	AssignmentExpression	cx = fixed_pixround ( vert_left . end . x ) - fixed_half		5603393	0		=			
ANR	5603951	Identifier	cx		5603393	0					
ANR	5603952	AdditiveExpression	fixed_pixround ( vert_left . end . x ) - fixed_half		5603393	1		-			
ANR	5603953	CallExpression	fixed_pixround ( vert_left . end . x )		5603393	0					
ANR	5603954	Callee	fixed_pixround		5603393	0					
ANR	5603955	Identifier	fixed_pixround		5603393	0					
ANR	5603956	ArgumentList	vert_left . end . x		5603393	1					
ANR	5603957	Argument	vert_left . end . x		5603393	0					
ANR	5603958	MemberAccess	vert_left . end . x		5603393	0					
ANR	5603959	MemberAccess	vert_left . end		5603393	0					
ANR	5603960	Identifier	vert_left		5603393	0					
ANR	5603961	Identifier	end		5603393	1					
ANR	5603962	Identifier	x		5603393	1					
ANR	5603963	Identifier	fixed_half		5603393	1					
ANR	5603964	ExpressionStatement	dy = slant_left . end . y - slant_left . start . y	1503:12:58084:58124	5603393	10	True				
ANR	5603965	AssignmentExpression	dy = slant_left . end . y - slant_left . start . y		5603393	0		=			
ANR	5603966	Identifier	dy		5603393	0					
ANR	5603967	AdditiveExpression	slant_left . end . y - slant_left . start . y		5603393	1		-			
ANR	5603968	MemberAccess	slant_left . end . y		5603393	0					
ANR	5603969	MemberAccess	slant_left . end		5603393	0					
ANR	5603970	Identifier	slant_left		5603393	0					
ANR	5603971	Identifier	end		5603393	1					
ANR	5603972	Identifier	y		5603393	1					
ANR	5603973	MemberAccess	slant_left . start . y		5603393	1					
ANR	5603974	MemberAccess	slant_left . start		5603393	0					
ANR	5603975	Identifier	slant_left		5603393	0					
ANR	5603976	Identifier	start		5603393	1					
ANR	5603977	Identifier	y		5603393	1					
ANR	5603978	ExpressionStatement	x = vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1504:12:58138:58343	5603393	11	True				
ANR	5603979	AssignmentExpression	x = vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	0		=			
ANR	5603980	Identifier	x		5603393	0					
ANR	5603981	AdditiveExpression	vert_left . end . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1		-			
ANR	5603982	MemberAccess	vert_left . end . x		5603393	0					
ANR	5603983	MemberAccess	vert_left . end		5603393	0					
ANR	5603984	Identifier	vert_left		5603393	0					
ANR	5603985	Identifier	end		5603393	1					
ANR	5603986	Identifier	x		5603393	1					
ANR	5603987	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1					
ANR	5603988	CastTarget	fixed		5603393	0					
ANR	5603989	MultiplicativeExpression	( ( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy )		5603393	1		/			
ANR	5603990	AdditiveExpression	( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) ) + dy - 1		5603393	0		+			
ANR	5603991	MultiplicativeExpression	( ( int64_t ) ( slant_left . end . x - slant_left . start . x ) ) * ( ( int64_t ) ( vert_left . end . y - cy ) )		5603393	0		*			
ANR	5603992	CastExpression	( int64_t ) ( slant_left . end . x - slant_left . start . x )		5603393	0					
ANR	5603993	CastTarget	int64_t		5603393	0					
ANR	5603994	AdditiveExpression	slant_left . end . x - slant_left . start . x		5603393	1		-			
ANR	5603995	MemberAccess	slant_left . end . x		5603393	0					
ANR	5603996	MemberAccess	slant_left . end		5603393	0					
ANR	5603997	Identifier	slant_left		5603393	0					
ANR	5603998	Identifier	end		5603393	1					
ANR	5603999	Identifier	x		5603393	1					
ANR	5604000	MemberAccess	slant_left . start . x		5603393	1					
ANR	5604001	MemberAccess	slant_left . start		5603393	0					
ANR	5604002	Identifier	slant_left		5603393	0					
ANR	5604003	Identifier	start		5603393	1					
ANR	5604004	Identifier	x		5603393	1					
ANR	5604005	CastExpression	( int64_t ) ( vert_left . end . y - cy )		5603393	1					
ANR	5604006	CastTarget	int64_t		5603393	0					
ANR	5604007	AdditiveExpression	vert_left . end . y - cy		5603393	1		-			
ANR	5604008	MemberAccess	vert_left . end . y		5603393	0					
ANR	5604009	MemberAccess	vert_left . end		5603393	0					
ANR	5604010	Identifier	vert_left		5603393	0					
ANR	5604011	Identifier	end		5603393	1					
ANR	5604012	Identifier	y		5603393	1					
ANR	5604013	Identifier	cy		5603393	1					
ANR	5604014	AdditiveExpression	dy - 1		5603393	1		-			
ANR	5604015	Identifier	dy		5603393	0					
ANR	5604016	PrimaryExpression	1		5603393	1					
ANR	5604017	CastExpression	( int64_t ) dy		5603393	1					
ANR	5604018	CastTarget	int64_t		5603393	0					
ANR	5604019	Identifier	dy		5603393	1					
ANR	5604020	IfStatement	if ( ( cy < Yb ) || ( x > cx ) )		5603393	12					
ANR	5604021	Condition	( cy < Yb ) || ( x > cx )	1508:16:58361:58381	5603393	0	True				
ANR	5604022	OrExpression	( cy < Yb ) || ( x > cx )		5603393	0		||			
ANR	5604023	RelationalExpression	cy < Yb		5603393	0		<			
ANR	5604024	Identifier	cy		5603393	0					
ANR	5604025	Identifier	Yb		5603393	1					
ANR	5604026	RelationalExpression	x > cx		5603393	1		>			
ANR	5604027	Identifier	x		5603393	0					
ANR	5604028	Identifier	cx		5603393	1					
ANR	5604029	CompoundStatement		74:12:3522:3522	5603393	1					
ANR	5604030	ExpressionStatement	Ya = Yb	1511:16:58477:58484	5603393	0	True				
ANR	5604031	AssignmentExpression	Ya = Yb		5603393	0		=			
ANR	5604032	Identifier	Ya		5603393	0					
ANR	5604033	Identifier	Yb		5603393	1					
ANR	5604034	ElseStatement	else		5603393	0					
ANR	5604035	CompoundStatement		79:11:3647:3647	5603393	0					
ANR	5604036	ExpressionStatement	vert_left . start . x = vert_left . end . x = flp -> x_next - fo -> adjust_left	1515:8:58531:58598	5603393	0	True				
ANR	5604037	AssignmentExpression	vert_left . start . x = vert_left . end . x = flp -> x_next - fo -> adjust_left		5603393	0		=			
ANR	5604038	MemberAccess	vert_left . start . x		5603393	0					
ANR	5604039	MemberAccess	vert_left . start		5603393	0					
ANR	5604040	Identifier	vert_left		5603393	0					
ANR	5604041	Identifier	start		5603393	1					
ANR	5604042	Identifier	x		5603393	1					
ANR	5604043	AssignmentExpression	vert_left . end . x = flp -> x_next - fo -> adjust_left		5603393	1		=			
ANR	5604044	MemberAccess	vert_left . end . x		5603393	0					
ANR	5604045	MemberAccess	vert_left . end		5603393	0					
ANR	5604046	Identifier	vert_left		5603393	0					
ANR	5604047	Identifier	end		5603393	1					
ANR	5604048	Identifier	x		5603393	1					
ANR	5604049	AdditiveExpression	flp -> x_next - fo -> adjust_left		5603393	1		-			
ANR	5604050	PtrMemberAccess	flp -> x_next		5603393	0					
ANR	5604051	Identifier	flp		5603393	0					
ANR	5604052	Identifier	x_next		5603393	1					
ANR	5604053	PtrMemberAccess	fo -> adjust_left		5603393	1					
ANR	5604054	Identifier	fo		5603393	0					
ANR	5604055	Identifier	adjust_left		5603393	1					
ANR	5604056	ExpressionStatement	"vert_left . start . y = Y1b , vert_left . end . y = Y1a"	1516:8:58608:58654	5603393	1	True				
ANR	5604057	Expression	"vert_left . start . y = Y1b , vert_left . end . y = Y1a"		5603393	0					
ANR	5604058	AssignmentExpression	vert_left . start . y = Y1b		5603393	0		=			
ANR	5604059	MemberAccess	vert_left . start . y		5603393	0					
ANR	5604060	MemberAccess	vert_left . start		5603393	0					
ANR	5604061	Identifier	vert_left		5603393	0					
ANR	5604062	Identifier	start		5603393	1					
ANR	5604063	Identifier	y		5603393	1					
ANR	5604064	Identifier	Y1b		5603393	1					
ANR	5604065	AssignmentExpression	vert_left . end . y = Y1a		5603393	1		=			
ANR	5604066	MemberAccess	vert_left . end . y		5603393	0					
ANR	5604067	MemberAccess	vert_left . end		5603393	0					
ANR	5604068	Identifier	vert_left		5603393	0					
ANR	5604069	Identifier	end		5603393	1					
ANR	5604070	Identifier	y		5603393	1					
ANR	5604071	Identifier	Y1a		5603393	1					
ANR	5604072	ExpressionStatement	vert_right . start . x = vert_right . end . x = alp -> x_current + fo -> adjust_right	1517:8:58664:58737	5603393	2	True				
ANR	5604073	AssignmentExpression	vert_right . start . x = vert_right . end . x = alp -> x_current + fo -> adjust_right		5603393	0		=			
ANR	5604074	MemberAccess	vert_right . start . x		5603393	0					
ANR	5604075	MemberAccess	vert_right . start		5603393	0					
ANR	5604076	Identifier	vert_right		5603393	0					
ANR	5604077	Identifier	start		5603393	1					
ANR	5604078	Identifier	x		5603393	1					
ANR	5604079	AssignmentExpression	vert_right . end . x = alp -> x_current + fo -> adjust_right		5603393	1		=			
ANR	5604080	MemberAccess	vert_right . end . x		5603393	0					
ANR	5604081	MemberAccess	vert_right . end		5603393	0					
ANR	5604082	Identifier	vert_right		5603393	0					
ANR	5604083	Identifier	end		5603393	1					
ANR	5604084	Identifier	x		5603393	1					
ANR	5604085	AdditiveExpression	alp -> x_current + fo -> adjust_right		5603393	1		+			
ANR	5604086	PtrMemberAccess	alp -> x_current		5603393	0					
ANR	5604087	Identifier	alp		5603393	0					
ANR	5604088	Identifier	x_current		5603393	1					
ANR	5604089	PtrMemberAccess	fo -> adjust_right		5603393	1					
ANR	5604090	Identifier	fo		5603393	0					
ANR	5604091	Identifier	adjust_right		5603393	1					
ANR	5604092	ExpressionStatement	"vert_right . start . y = Yb , vert_right . end . y = Ya"	1518:8:58747:58793	5603393	3	True				
ANR	5604093	Expression	"vert_right . start . y = Yb , vert_right . end . y = Ya"		5603393	0					
ANR	5604094	AssignmentExpression	vert_right . start . y = Yb		5603393	0		=			
ANR	5604095	MemberAccess	vert_right . start . y		5603393	0					
ANR	5604096	MemberAccess	vert_right . start		5603393	0					
ANR	5604097	Identifier	vert_right		5603393	0					
ANR	5604098	Identifier	start		5603393	1					
ANR	5604099	Identifier	y		5603393	1					
ANR	5604100	Identifier	Yb		5603393	1					
ANR	5604101	AssignmentExpression	vert_right . end . y = Ya		5603393	1		=			
ANR	5604102	MemberAccess	vert_right . end . y		5603393	0					
ANR	5604103	MemberAccess	vert_right . end		5603393	0					
ANR	5604104	Identifier	vert_right		5603393	0					
ANR	5604105	Identifier	end		5603393	1					
ANR	5604106	Identifier	y		5603393	1					
ANR	5604107	Identifier	Ya		5603393	1					
ANR	5604108	ExpressionStatement	slant_left . start . y = flp -> start . y - fo -> adjust_below	1519:8:58803:58855	5603393	4	True				
ANR	5604109	AssignmentExpression	slant_left . start . y = flp -> start . y - fo -> adjust_below		5603393	0		=			
ANR	5604110	MemberAccess	slant_left . start . y		5603393	0					
ANR	5604111	MemberAccess	slant_left . start		5603393	0					
ANR	5604112	Identifier	slant_left		5603393	0					
ANR	5604113	Identifier	start		5603393	1					
ANR	5604114	Identifier	y		5603393	1					
ANR	5604115	AdditiveExpression	flp -> start . y - fo -> adjust_below		5603393	1		-			
ANR	5604116	MemberAccess	flp -> start . y		5603393	0					
ANR	5604117	PtrMemberAccess	flp -> start		5603393	0					
ANR	5604118	Identifier	flp		5603393	0					
ANR	5604119	Identifier	start		5603393	1					
ANR	5604120	Identifier	y		5603393	1					
ANR	5604121	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5604122	Identifier	fo		5603393	0					
ANR	5604123	Identifier	adjust_below		5603393	1					
ANR	5604124	ExpressionStatement	slant_left . end . y = flp -> end . y - fo -> adjust_below	1520:8:58865:58913	5603393	5	True				
ANR	5604125	AssignmentExpression	slant_left . end . y = flp -> end . y - fo -> adjust_below		5603393	0		=			
ANR	5604126	MemberAccess	slant_left . end . y		5603393	0					
ANR	5604127	MemberAccess	slant_left . end		5603393	0					
ANR	5604128	Identifier	slant_left		5603393	0					
ANR	5604129	Identifier	end		5603393	1					
ANR	5604130	Identifier	y		5603393	1					
ANR	5604131	AdditiveExpression	flp -> end . y - fo -> adjust_below		5603393	1		-			
ANR	5604132	MemberAccess	flp -> end . y		5603393	0					
ANR	5604133	PtrMemberAccess	flp -> end		5603393	0					
ANR	5604134	Identifier	flp		5603393	0					
ANR	5604135	Identifier	end		5603393	1					
ANR	5604136	Identifier	y		5603393	1					
ANR	5604137	PtrMemberAccess	fo -> adjust_below		5603393	1					
ANR	5604138	Identifier	fo		5603393	0					
ANR	5604139	Identifier	adjust_below		5603393	1					
ANR	5604140	ExpressionStatement	slant_right . start . y = alp -> start . y + fo -> adjust_above	1521:8:58923:58976	5603393	6	True				
ANR	5604141	AssignmentExpression	slant_right . start . y = alp -> start . y + fo -> adjust_above		5603393	0		=			
ANR	5604142	MemberAccess	slant_right . start . y		5603393	0					
ANR	5604143	MemberAccess	slant_right . start		5603393	0					
ANR	5604144	Identifier	slant_right		5603393	0					
ANR	5604145	Identifier	start		5603393	1					
ANR	5604146	Identifier	y		5603393	1					
ANR	5604147	AdditiveExpression	alp -> start . y + fo -> adjust_above		5603393	1		+			
ANR	5604148	MemberAccess	alp -> start . y		5603393	0					
ANR	5604149	PtrMemberAccess	alp -> start		5603393	0					
ANR	5604150	Identifier	alp		5603393	0					
ANR	5604151	Identifier	start		5603393	1					
ANR	5604152	Identifier	y		5603393	1					
ANR	5604153	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5604154	Identifier	fo		5603393	0					
ANR	5604155	Identifier	adjust_above		5603393	1					
ANR	5604156	ExpressionStatement	slant_right . end . y = alp -> end . y + fo -> adjust_above	1522:8:58986:59035	5603393	7	True				
ANR	5604157	AssignmentExpression	slant_right . end . y = alp -> end . y + fo -> adjust_above		5603393	0		=			
ANR	5604158	MemberAccess	slant_right . end . y		5603393	0					
ANR	5604159	MemberAccess	slant_right . end		5603393	0					
ANR	5604160	Identifier	slant_right		5603393	0					
ANR	5604161	Identifier	end		5603393	1					
ANR	5604162	Identifier	y		5603393	1					
ANR	5604163	AdditiveExpression	alp -> end . y + fo -> adjust_above		5603393	1		+			
ANR	5604164	MemberAccess	alp -> end . y		5603393	0					
ANR	5604165	PtrMemberAccess	alp -> end		5603393	0					
ANR	5604166	Identifier	alp		5603393	0					
ANR	5604167	Identifier	end		5603393	1					
ANR	5604168	Identifier	y		5603393	1					
ANR	5604169	PtrMemberAccess	fo -> adjust_above		5603393	1					
ANR	5604170	Identifier	fo		5603393	0					
ANR	5604171	Identifier	adjust_above		5603393	1					
ANR	5604172	ExpressionStatement	"plbot = & slant_left , prbot = & vert_right"	1523:8:59045:59085	5603393	8	True				
ANR	5604173	Expression	"plbot = & slant_left , prbot = & vert_right"		5603393	0					
ANR	5604174	AssignmentExpression	plbot = & slant_left		5603393	0		=			
ANR	5604175	Identifier	plbot		5603393	0					
ANR	5604176	UnaryOperationExpression	& slant_left		5603393	1					
ANR	5604177	UnaryOperator	&		5603393	0					
ANR	5604178	Identifier	slant_left		5603393	1					
ANR	5604179	AssignmentExpression	prbot = & vert_right		5603393	1		=			
ANR	5604180	Identifier	prbot		5603393	0					
ANR	5604181	UnaryOperationExpression	& vert_right		5603393	1					
ANR	5604182	UnaryOperator	&		5603393	0					
ANR	5604183	Identifier	vert_right		5603393	1					
ANR	5604184	ExpressionStatement	"pltop = & vert_left , prtop = & slant_right"	1524:8:59095:59135	5603393	9	True				
ANR	5604185	Expression	"pltop = & vert_left , prtop = & slant_right"		5603393	0					
ANR	5604186	AssignmentExpression	pltop = & vert_left		5603393	0		=			
ANR	5604187	Identifier	pltop		5603393	0					
ANR	5604188	UnaryOperationExpression	& vert_left		5603393	1					
ANR	5604189	UnaryOperator	&		5603393	0					
ANR	5604190	Identifier	vert_left		5603393	1					
ANR	5604191	AssignmentExpression	prtop = & slant_right		5603393	1		=			
ANR	5604192	Identifier	prtop		5603393	0					
ANR	5604193	UnaryOperationExpression	& slant_right		5603393	1					
ANR	5604194	UnaryOperator	&		5603393	0					
ANR	5604195	Identifier	slant_right		5603393	1					
ANR	5604196	IfStatement	if ( TRY_TO_EXTEND_TRAP )		5603393	10					
ANR	5604197	Condition	TRY_TO_EXTEND_TRAP	1525:12:59149:59166	5603393	0	True				
ANR	5604198	Identifier	TRY_TO_EXTEND_TRAP		5603393	0					
ANR	5604199	CompoundStatement		92:12:4317:4334	5603393	1					
ANR	5604200	IdentifierDeclStatement	"int x , cx , cy , dy ;"	1527:12:59191:59208	5603393	0	True				
ANR	5604201	IdentifierDecl	x		5603393	0					
ANR	5604202	IdentifierDeclType	int		5603393	0					
ANR	5604203	Identifier	x		5603393	1					
ANR	5604204	IdentifierDecl	cx		5603393	1					
ANR	5604205	IdentifierDeclType	int		5603393	0					
ANR	5604206	Identifier	cx		5603393	1					
ANR	5604207	IdentifierDecl	cy		5603393	2					
ANR	5604208	IdentifierDeclType	int		5603393	0					
ANR	5604209	Identifier	cy		5603393	1					
ANR	5604210	IdentifierDecl	dy		5603393	3					
ANR	5604211	IdentifierDeclType	int		5603393	0					
ANR	5604212	Identifier	dy		5603393	1					
ANR	5604213	WhileStatement	while ( slant_left . end . y < Y1a )		5603393	1					
ANR	5604214	Condition	slant_left . end . y < Y1a	1531:19:59396:59417	5603393	0	True				
ANR	5604215	RelationalExpression	slant_left . end . y < Y1a		5603393	0		<			
ANR	5604216	MemberAccess	slant_left . end . y		5603393	0					
ANR	5604217	MemberAccess	slant_left . end		5603393	0					
ANR	5604218	Identifier	slant_left		5603393	0					
ANR	5604219	Identifier	end		5603393	1					
ANR	5604220	Identifier	y		5603393	1					
ANR	5604221	Identifier	Y1a		5603393	1					
ANR	5604222	CompoundStatement		97:12:4558:4558	5603393	1					
ANR	5604223	ExpressionStatement	slant_left . end . x += slant_left . end . x - slant_left . start . x	1533:16:59450:59507	5603393	0	True				
ANR	5604224	AssignmentExpression	slant_left . end . x += slant_left . end . x - slant_left . start . x		5603393	0		+=			
ANR	5604225	MemberAccess	slant_left . end . x		5603393	0					
ANR	5604226	MemberAccess	slant_left . end		5603393	0					
ANR	5604227	Identifier	slant_left		5603393	0					
ANR	5604228	Identifier	end		5603393	1					
ANR	5604229	Identifier	x		5603393	1					
ANR	5604230	AdditiveExpression	slant_left . end . x - slant_left . start . x		5603393	1		-			
ANR	5604231	MemberAccess	slant_left . end . x		5603393	0					
ANR	5604232	MemberAccess	slant_left . end		5603393	0					
ANR	5604233	Identifier	slant_left		5603393	0					
ANR	5604234	Identifier	end		5603393	1					
ANR	5604235	Identifier	x		5603393	1					
ANR	5604236	MemberAccess	slant_left . start . x		5603393	1					
ANR	5604237	MemberAccess	slant_left . start		5603393	0					
ANR	5604238	Identifier	slant_left		5603393	0					
ANR	5604239	Identifier	start		5603393	1					
ANR	5604240	Identifier	x		5603393	1					
ANR	5604241	ExpressionStatement	slant_left . end . y += slant_left . end . y - slant_left . start . y	1534:16:59525:59582	5603393	1	True				
ANR	5604242	AssignmentExpression	slant_left . end . y += slant_left . end . y - slant_left . start . y		5603393	0		+=			
ANR	5604243	MemberAccess	slant_left . end . y		5603393	0					
ANR	5604244	MemberAccess	slant_left . end		5603393	0					
ANR	5604245	Identifier	slant_left		5603393	0					
ANR	5604246	Identifier	end		5603393	1					
ANR	5604247	Identifier	y		5603393	1					
ANR	5604248	AdditiveExpression	slant_left . end . y - slant_left . start . y		5603393	1		-			
ANR	5604249	MemberAccess	slant_left . end . y		5603393	0					
ANR	5604250	MemberAccess	slant_left . end		5603393	0					
ANR	5604251	Identifier	slant_left		5603393	0					
ANR	5604252	Identifier	end		5603393	1					
ANR	5604253	Identifier	y		5603393	1					
ANR	5604254	MemberAccess	slant_left . start . y		5603393	1					
ANR	5604255	MemberAccess	slant_left . start		5603393	0					
ANR	5604256	Identifier	slant_left		5603393	0					
ANR	5604257	Identifier	start		5603393	1					
ANR	5604258	Identifier	y		5603393	1					
ANR	5604259	WhileStatement	while ( slant_right . start . y > Yb )		5603393	2					
ANR	5604260	Condition	slant_right . start . y > Yb	1536:19:59617:59640	5603393	0	True				
ANR	5604261	RelationalExpression	slant_right . start . y > Yb		5603393	0		>			
ANR	5604262	MemberAccess	slant_right . start . y		5603393	0					
ANR	5604263	MemberAccess	slant_right . start		5603393	0					
ANR	5604264	Identifier	slant_right		5603393	0					
ANR	5604265	Identifier	start		5603393	1					
ANR	5604266	Identifier	y		5603393	1					
ANR	5604267	Identifier	Yb		5603393	1					
ANR	5604268	CompoundStatement		102:12:4781:4781	5603393	1					
ANR	5604269	ExpressionStatement	slant_right . start . x -= slant_right . end . x - slant_right . start . x	1538:16:59673:59733	5603393	0	True				
ANR	5604270	AssignmentExpression	slant_right . start . x -= slant_right . end . x - slant_right . start . x		5603393	0		-=			
ANR	5604271	MemberAccess	slant_right . start . x		5603393	0					
ANR	5604272	MemberAccess	slant_right . start		5603393	0					
ANR	5604273	Identifier	slant_right		5603393	0					
ANR	5604274	Identifier	start		5603393	1					
ANR	5604275	Identifier	x		5603393	1					
ANR	5604276	AdditiveExpression	slant_right . end . x - slant_right . start . x		5603393	1		-			
ANR	5604277	MemberAccess	slant_right . end . x		5603393	0					
ANR	5604278	MemberAccess	slant_right . end		5603393	0					
ANR	5604279	Identifier	slant_right		5603393	0					
ANR	5604280	Identifier	end		5603393	1					
ANR	5604281	Identifier	x		5603393	1					
ANR	5604282	MemberAccess	slant_right . start . x		5603393	1					
ANR	5604283	MemberAccess	slant_right . start		5603393	0					
ANR	5604284	Identifier	slant_right		5603393	0					
ANR	5604285	Identifier	start		5603393	1					
ANR	5604286	Identifier	x		5603393	1					
ANR	5604287	ExpressionStatement	slant_right . start . y -= slant_right . end . y - slant_right . start . y	1539:16:59751:59811	5603393	1	True				
ANR	5604288	AssignmentExpression	slant_right . start . y -= slant_right . end . y - slant_right . start . y		5603393	0		-=			
ANR	5604289	MemberAccess	slant_right . start . y		5603393	0					
ANR	5604290	MemberAccess	slant_right . start		5603393	0					
ANR	5604291	Identifier	slant_right		5603393	0					
ANR	5604292	Identifier	start		5603393	1					
ANR	5604293	Identifier	y		5603393	1					
ANR	5604294	AdditiveExpression	slant_right . end . y - slant_right . start . y		5603393	1		-			
ANR	5604295	MemberAccess	slant_right . end . y		5603393	0					
ANR	5604296	MemberAccess	slant_right . end		5603393	0					
ANR	5604297	Identifier	slant_right		5603393	0					
ANR	5604298	Identifier	end		5603393	1					
ANR	5604299	Identifier	y		5603393	1					
ANR	5604300	MemberAccess	slant_right . start . y		5603393	1					
ANR	5604301	MemberAccess	slant_right . start		5603393	0					
ANR	5604302	Identifier	slant_right		5603393	0					
ANR	5604303	Identifier	start		5603393	1					
ANR	5604304	Identifier	y		5603393	1					
ANR	5604305	ExpressionStatement	cy = fixed_pixround ( vert_left . start . y ) + fixed_half	1545:12:60091:60140	5603393	3	True				
ANR	5604306	AssignmentExpression	cy = fixed_pixround ( vert_left . start . y ) + fixed_half		5603393	0		=			
ANR	5604307	Identifier	cy		5603393	0					
ANR	5604308	AdditiveExpression	fixed_pixround ( vert_left . start . y ) + fixed_half		5603393	1		+			
ANR	5604309	CallExpression	fixed_pixround ( vert_left . start . y )		5603393	0					
ANR	5604310	Callee	fixed_pixround		5603393	0					
ANR	5604311	Identifier	fixed_pixround		5603393	0					
ANR	5604312	ArgumentList	vert_left . start . y		5603393	1					
ANR	5604313	Argument	vert_left . start . y		5603393	0					
ANR	5604314	MemberAccess	vert_left . start . y		5603393	0					
ANR	5604315	MemberAccess	vert_left . start		5603393	0					
ANR	5604316	Identifier	vert_left		5603393	0					
ANR	5604317	Identifier	start		5603393	1					
ANR	5604318	Identifier	y		5603393	1					
ANR	5604319	Identifier	fixed_half		5603393	1					
ANR	5604320	ExpressionStatement	cx = fixed_pixround ( vert_left . start . x ) - fixed_half	1546:12:60154:60203	5603393	4	True				
ANR	5604321	AssignmentExpression	cx = fixed_pixround ( vert_left . start . x ) - fixed_half		5603393	0		=			
ANR	5604322	Identifier	cx		5603393	0					
ANR	5604323	AdditiveExpression	fixed_pixround ( vert_left . start . x ) - fixed_half		5603393	1		-			
ANR	5604324	CallExpression	fixed_pixround ( vert_left . start . x )		5603393	0					
ANR	5604325	Callee	fixed_pixround		5603393	0					
ANR	5604326	Identifier	fixed_pixround		5603393	0					
ANR	5604327	ArgumentList	vert_left . start . x		5603393	1					
ANR	5604328	Argument	vert_left . start . x		5603393	0					
ANR	5604329	MemberAccess	vert_left . start . x		5603393	0					
ANR	5604330	MemberAccess	vert_left . start		5603393	0					
ANR	5604331	Identifier	vert_left		5603393	0					
ANR	5604332	Identifier	start		5603393	1					
ANR	5604333	Identifier	x		5603393	1					
ANR	5604334	Identifier	fixed_half		5603393	1					
ANR	5604335	ExpressionStatement	dy = slant_left . end . y - slant_left . start . y	1547:12:60217:60257	5603393	5	True				
ANR	5604336	AssignmentExpression	dy = slant_left . end . y - slant_left . start . y		5603393	0		=			
ANR	5604337	Identifier	dy		5603393	0					
ANR	5604338	AdditiveExpression	slant_left . end . y - slant_left . start . y		5603393	1		-			
ANR	5604339	MemberAccess	slant_left . end . y		5603393	0					
ANR	5604340	MemberAccess	slant_left . end		5603393	0					
ANR	5604341	Identifier	slant_left		5603393	0					
ANR	5604342	Identifier	end		5603393	1					
ANR	5604343	Identifier	y		5603393	1					
ANR	5604344	MemberAccess	slant_left . start . y		5603393	1					
ANR	5604345	MemberAccess	slant_left . start		5603393	0					
ANR	5604346	Identifier	slant_left		5603393	0					
ANR	5604347	Identifier	start		5603393	1					
ANR	5604348	Identifier	y		5603393	1					
ANR	5604349	ExpressionStatement	x = vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1548:12:60271:60480	5603393	6	True				
ANR	5604350	AssignmentExpression	x = vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	0		=			
ANR	5604351	Identifier	x		5603393	0					
ANR	5604352	AdditiveExpression	vert_left . start . x - ( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1		-			
ANR	5604353	MemberAccess	vert_left . start . x		5603393	0					
ANR	5604354	MemberAccess	vert_left . start		5603393	0					
ANR	5604355	Identifier	vert_left		5603393	0					
ANR	5604356	Identifier	start		5603393	1					
ANR	5604357	Identifier	x		5603393	1					
ANR	5604358	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1					
ANR	5604359	CastTarget	fixed		5603393	0					
ANR	5604360	MultiplicativeExpression	( ( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1 ) / ( ( int64_t ) dy )		5603393	1		/			
ANR	5604361	AdditiveExpression	( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) ) + dy - 1		5603393	0		+			
ANR	5604362	MultiplicativeExpression	( ( int64_t ) ( slant_left . start . x - slant_left . end . x ) ) * ( ( int64_t ) ( cy - vert_left . start . y ) )		5603393	0		*			
ANR	5604363	CastExpression	( int64_t ) ( slant_left . start . x - slant_left . end . x )		5603393	0					
ANR	5604364	CastTarget	int64_t		5603393	0					
ANR	5604365	AdditiveExpression	slant_left . start . x - slant_left . end . x		5603393	1		-			
ANR	5604366	MemberAccess	slant_left . start . x		5603393	0					
ANR	5604367	MemberAccess	slant_left . start		5603393	0					
ANR	5604368	Identifier	slant_left		5603393	0					
ANR	5604369	Identifier	start		5603393	1					
ANR	5604370	Identifier	x		5603393	1					
ANR	5604371	MemberAccess	slant_left . end . x		5603393	1					
ANR	5604372	MemberAccess	slant_left . end		5603393	0					
ANR	5604373	Identifier	slant_left		5603393	0					
ANR	5604374	Identifier	end		5603393	1					
ANR	5604375	Identifier	x		5603393	1					
ANR	5604376	CastExpression	( int64_t ) ( cy - vert_left . start . y )		5603393	1					
ANR	5604377	CastTarget	int64_t		5603393	0					
ANR	5604378	AdditiveExpression	cy - vert_left . start . y		5603393	1		-			
ANR	5604379	Identifier	cy		5603393	0					
ANR	5604380	MemberAccess	vert_left . start . y		5603393	1					
ANR	5604381	MemberAccess	vert_left . start		5603393	0					
ANR	5604382	Identifier	vert_left		5603393	0					
ANR	5604383	Identifier	start		5603393	1					
ANR	5604384	Identifier	y		5603393	1					
ANR	5604385	AdditiveExpression	dy - 1		5603393	1		-			
ANR	5604386	Identifier	dy		5603393	0					
ANR	5604387	PrimaryExpression	1		5603393	1					
ANR	5604388	CastExpression	( int64_t ) dy		5603393	1					
ANR	5604389	CastTarget	int64_t		5603393	0					
ANR	5604390	Identifier	dy		5603393	1					
ANR	5604391	IfStatement	if ( ( cy >= Y1a ) || ( x > cx ) )		5603393	7					
ANR	5604392	Condition	( cy >= Y1a ) || ( x > cx )	1552:16:60498:60520	5603393	0	True				
ANR	5604393	OrExpression	( cy >= Y1a ) || ( x > cx )		5603393	0		||			
ANR	5604394	RelationalExpression	cy >= Y1a		5603393	0		>=			
ANR	5604395	Identifier	cy		5603393	0					
ANR	5604396	Identifier	Y1a		5603393	1					
ANR	5604397	RelationalExpression	x > cx		5603393	1		>			
ANR	5604398	Identifier	x		5603393	0					
ANR	5604399	Identifier	cx		5603393	1					
ANR	5604400	CompoundStatement		118:12:5661:5661	5603393	1					
ANR	5604401	ExpressionStatement	Y1b = Y1a	1555:16:60614:60623	5603393	0	True				
ANR	5604402	AssignmentExpression	Y1b = Y1a		5603393	0		=			
ANR	5604403	Identifier	Y1b		5603393	0					
ANR	5604404	Identifier	Y1a		5603393	1					
ANR	5604405	ExpressionStatement	cy = fixed_pixround ( vert_right . end . y ) - fixed_half	1561:12:60901:60949	5603393	8	True				
ANR	5604406	AssignmentExpression	cy = fixed_pixround ( vert_right . end . y ) - fixed_half		5603393	0		=			
ANR	5604407	Identifier	cy		5603393	0					
ANR	5604408	AdditiveExpression	fixed_pixround ( vert_right . end . y ) - fixed_half		5603393	1		-			
ANR	5604409	CallExpression	fixed_pixround ( vert_right . end . y )		5603393	0					
ANR	5604410	Callee	fixed_pixround		5603393	0					
ANR	5604411	Identifier	fixed_pixround		5603393	0					
ANR	5604412	ArgumentList	vert_right . end . y		5603393	1					
ANR	5604413	Argument	vert_right . end . y		5603393	0					
ANR	5604414	MemberAccess	vert_right . end . y		5603393	0					
ANR	5604415	MemberAccess	vert_right . end		5603393	0					
ANR	5604416	Identifier	vert_right		5603393	0					
ANR	5604417	Identifier	end		5603393	1					
ANR	5604418	Identifier	y		5603393	1					
ANR	5604419	Identifier	fixed_half		5603393	1					
ANR	5604420	ExpressionStatement	cx = fixed_pixround ( vert_right . end . x ) - fixed_half	1562:12:60963:61011	5603393	9	True				
ANR	5604421	AssignmentExpression	cx = fixed_pixround ( vert_right . end . x ) - fixed_half		5603393	0		=			
ANR	5604422	Identifier	cx		5603393	0					
ANR	5604423	AdditiveExpression	fixed_pixround ( vert_right . end . x ) - fixed_half		5603393	1		-			
ANR	5604424	CallExpression	fixed_pixround ( vert_right . end . x )		5603393	0					
ANR	5604425	Callee	fixed_pixround		5603393	0					
ANR	5604426	Identifier	fixed_pixround		5603393	0					
ANR	5604427	ArgumentList	vert_right . end . x		5603393	1					
ANR	5604428	Argument	vert_right . end . x		5603393	0					
ANR	5604429	MemberAccess	vert_right . end . x		5603393	0					
ANR	5604430	MemberAccess	vert_right . end		5603393	0					
ANR	5604431	Identifier	vert_right		5603393	0					
ANR	5604432	Identifier	end		5603393	1					
ANR	5604433	Identifier	x		5603393	1					
ANR	5604434	Identifier	fixed_half		5603393	1					
ANR	5604435	ExpressionStatement	dy = slant_right . end . y - slant_right . start . y	1563:12:61025:61067	5603393	10	True				
ANR	5604436	AssignmentExpression	dy = slant_right . end . y - slant_right . start . y		5603393	0		=			
ANR	5604437	Identifier	dy		5603393	0					
ANR	5604438	AdditiveExpression	slant_right . end . y - slant_right . start . y		5603393	1		-			
ANR	5604439	MemberAccess	slant_right . end . y		5603393	0					
ANR	5604440	MemberAccess	slant_right . end		5603393	0					
ANR	5604441	Identifier	slant_right		5603393	0					
ANR	5604442	Identifier	end		5603393	1					
ANR	5604443	Identifier	y		5603393	1					
ANR	5604444	MemberAccess	slant_right . start . y		5603393	1					
ANR	5604445	MemberAccess	slant_right . start		5603393	0					
ANR	5604446	Identifier	slant_right		5603393	0					
ANR	5604447	Identifier	start		5603393	1					
ANR	5604448	Identifier	y		5603393	1					
ANR	5604449	ExpressionStatement	x = vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )	1564:12:61081:61290	5603393	11	True				
ANR	5604450	AssignmentExpression	x = vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	0		=			
ANR	5604451	Identifier	x		5603393	0					
ANR	5604452	AdditiveExpression	vert_right . end . x + ( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1		+			
ANR	5604453	MemberAccess	vert_right . end . x		5603393	0					
ANR	5604454	MemberAccess	vert_right . end		5603393	0					
ANR	5604455	Identifier	vert_right		5603393	0					
ANR	5604456	Identifier	end		5603393	1					
ANR	5604457	Identifier	x		5603393	1					
ANR	5604458	CastExpression	( fixed ) ( ( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy ) )		5603393	1					
ANR	5604459	CastTarget	fixed		5603393	0					
ANR	5604460	MultiplicativeExpression	( ( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1 ) / ( ( int64_t ) dy )		5603393	1		/			
ANR	5604461	AdditiveExpression	( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) ) + dy - 1		5603393	0		+			
ANR	5604462	MultiplicativeExpression	( ( int64_t ) ( slant_right . start . x - slant_right . end . x ) ) * ( ( int64_t ) ( vert_right . end . y - cy ) )		5603393	0		*			
ANR	5604463	CastExpression	( int64_t ) ( slant_right . start . x - slant_right . end . x )		5603393	0					
ANR	5604464	CastTarget	int64_t		5603393	0					
ANR	5604465	AdditiveExpression	slant_right . start . x - slant_right . end . x		5603393	1		-			
ANR	5604466	MemberAccess	slant_right . start . x		5603393	0					
ANR	5604467	MemberAccess	slant_right . start		5603393	0					
ANR	5604468	Identifier	slant_right		5603393	0					
ANR	5604469	Identifier	start		5603393	1					
ANR	5604470	Identifier	x		5603393	1					
ANR	5604471	MemberAccess	slant_right . end . x		5603393	1					
ANR	5604472	MemberAccess	slant_right . end		5603393	0					
ANR	5604473	Identifier	slant_right		5603393	0					
ANR	5604474	Identifier	end		5603393	1					
ANR	5604475	Identifier	x		5603393	1					
ANR	5604476	CastExpression	( int64_t ) ( vert_right . end . y - cy )		5603393	1					
ANR	5604477	CastTarget	int64_t		5603393	0					
ANR	5604478	AdditiveExpression	vert_right . end . y - cy		5603393	1		-			
ANR	5604479	MemberAccess	vert_right . end . y		5603393	0					
ANR	5604480	MemberAccess	vert_right . end		5603393	0					
ANR	5604481	Identifier	vert_right		5603393	0					
ANR	5604482	Identifier	end		5603393	1					
ANR	5604483	Identifier	y		5603393	1					
ANR	5604484	Identifier	cy		5603393	1					
ANR	5604485	AdditiveExpression	dy - 1		5603393	1		-			
ANR	5604486	Identifier	dy		5603393	0					
ANR	5604487	PrimaryExpression	1		5603393	1					
ANR	5604488	CastExpression	( int64_t ) dy		5603393	1					
ANR	5604489	CastTarget	int64_t		5603393	0					
ANR	5604490	Identifier	dy		5603393	1					
ANR	5604491	IfStatement	if ( ( cy < Yb ) || ( x < cx ) )		5603393	12					
ANR	5604492	Condition	( cy < Yb ) || ( x < cx )	1568:16:61308:61328	5603393	0	True				
ANR	5604493	OrExpression	( cy < Yb ) || ( x < cx )		5603393	0		||			
ANR	5604494	RelationalExpression	cy < Yb		5603393	0		<			
ANR	5604495	Identifier	cy		5603393	0					
ANR	5604496	Identifier	Yb		5603393	1					
ANR	5604497	RelationalExpression	x < cx		5603393	1		<			
ANR	5604498	Identifier	x		5603393	0					
ANR	5604499	Identifier	cx		5603393	1					
ANR	5604500	CompoundStatement		134:12:6469:6469	5603393	1					
ANR	5604501	ExpressionStatement	Ya = Yb	1571:16:61424:61431	5603393	0	True				
ANR	5604502	AssignmentExpression	Ya = Yb		5603393	0		=			
ANR	5604503	Identifier	Ya		5603393	0					
ANR	5604504	Identifier	Yb		5603393	1					
ANR	5604505	IfStatement	if ( Ya >= Y1b )		5603393	18					
ANR	5604506	Condition	Ya >= Y1b	1576:8:61472:61480	5603393	0	True				
ANR	5604507	RelationalExpression	Ya >= Y1b		5603393	0		>=			
ANR	5604508	Identifier	Ya		5603393	0					
ANR	5604509	Identifier	Y1b		5603393	1					
ANR	5604510	CompoundStatement		152:8:7068:7106	5603393	1					
ANR	5604511	IdentifierDeclStatement	int iYb = fixed2int_var_pixround ( Yb ) ;	1584:8:61802:61838	5603393	0	True				
ANR	5604512	IdentifierDecl	iYb = fixed2int_var_pixround ( Yb )		5603393	0					
ANR	5604513	IdentifierDeclType	int		5603393	0					
ANR	5604514	Identifier	iYb		5603393	1					
ANR	5604515	AssignmentExpression	iYb = fixed2int_var_pixround ( Yb )		5603393	2		=			
ANR	5604516	Identifier	iYb		5603393	0					
ANR	5604517	CallExpression	fixed2int_var_pixround ( Yb )		5603393	1					
ANR	5604518	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604519	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604520	ArgumentList	Yb		5603393	1					
ANR	5604521	Argument	Yb		5603393	0					
ANR	5604522	Identifier	Yb		5603393	0					
ANR	5604523	IdentifierDeclStatement	int iYa = fixed2int_var_pixround ( Ya ) ;	1585:8:61848:61884	5603393	1	True				
ANR	5604524	IdentifierDecl	iYa = fixed2int_var_pixround ( Ya )		5603393	0					
ANR	5604525	IdentifierDeclType	int		5603393	0					
ANR	5604526	Identifier	iYa		5603393	1					
ANR	5604527	AssignmentExpression	iYa = fixed2int_var_pixround ( Ya )		5603393	2		=			
ANR	5604528	Identifier	iYa		5603393	0					
ANR	5604529	CallExpression	fixed2int_var_pixround ( Ya )		5603393	1					
ANR	5604530	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604531	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604532	ArgumentList	Ya		5603393	1					
ANR	5604533	Argument	Ya		5603393	0					
ANR	5604534	Identifier	Ya		5603393	0					
ANR	5604535	IdentifierDeclStatement	int iY1b = fixed2int_var_pixround ( Y1b ) ;	1586:8:61894:61932	5603393	2	True				
ANR	5604536	IdentifierDecl	iY1b = fixed2int_var_pixround ( Y1b )		5603393	0					
ANR	5604537	IdentifierDeclType	int		5603393	0					
ANR	5604538	Identifier	iY1b		5603393	1					
ANR	5604539	AssignmentExpression	iY1b = fixed2int_var_pixround ( Y1b )		5603393	2		=			
ANR	5604540	Identifier	iY1b		5603393	0					
ANR	5604541	CallExpression	fixed2int_var_pixround ( Y1b )		5603393	1					
ANR	5604542	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604543	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604544	ArgumentList	Y1b		5603393	1					
ANR	5604545	Argument	Y1b		5603393	0					
ANR	5604546	Identifier	Y1b		5603393	0					
ANR	5604547	IdentifierDeclStatement	int iY1a = fixed2int_var_pixround ( Y1a ) ;	1587:8:61942:61980	5603393	3	True				
ANR	5604548	IdentifierDecl	iY1a = fixed2int_var_pixround ( Y1a )		5603393	0					
ANR	5604549	IdentifierDeclType	int		5603393	0					
ANR	5604550	Identifier	iY1a		5603393	1					
ANR	5604551	AssignmentExpression	iY1a = fixed2int_var_pixround ( Y1a )		5603393	2		=			
ANR	5604552	Identifier	iY1a		5603393	0					
ANR	5604553	CallExpression	fixed2int_var_pixround ( Y1a )		5603393	1					
ANR	5604554	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604555	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604556	ArgumentList	Y1a		5603393	1					
ANR	5604557	Argument	Y1a		5603393	0					
ANR	5604558	Identifier	Y1a		5603393	0					
ANR	5604559	ExpressionStatement	INCR ( slant_shallow )	1589:8:61991:62010	5603393	4	True				
ANR	5604560	CallExpression	INCR ( slant_shallow )		5603393	0					
ANR	5604561	Callee	INCR		5603393	0					
ANR	5604562	Identifier	INCR		5603393	0					
ANR	5604563	ArgumentList	slant_shallow		5603393	1					
ANR	5604564	Argument	slant_shallow		5603393	0					
ANR	5604565	Identifier	slant_shallow		5603393	0					
ANR	5604566	IfStatement	if ( iY1b > iYb )		5603393	5					
ANR	5604567	Condition	iY1b > iYb	1590:12:62024:62033	5603393	0	True				
ANR	5604568	RelationalExpression	iY1b > iYb		5603393	0		>			
ANR	5604569	Identifier	iY1b		5603393	0					
ANR	5604570	Identifier	iYb		5603393	1					
ANR	5604571	CompoundStatement		155:24:7162:7162	5603393	1					
ANR	5604572	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"	1591:12:62050:62162	5603393	0	True				
ANR	5604573	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604574	Identifier	code		5603393	0					
ANR	5604575	CallExpression	"fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Y1b , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604576	Callee	fo -> fill_trap		5603393	0					
ANR	5604577	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604578	Identifier	fo		5603393	0					
ANR	5604579	Identifier	fill_trap		5603393	1					
ANR	5604580	ArgumentList	fo -> dev		5603393	1					
ANR	5604581	Argument	fo -> dev		5603393	0					
ANR	5604582	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604583	Identifier	fo		5603393	0					
ANR	5604584	Identifier	dev		5603393	1					
ANR	5604585	Argument	plbot		5603393	1					
ANR	5604586	Identifier	plbot		5603393	0					
ANR	5604587	Argument	prbot		5603393	2					
ANR	5604588	Identifier	prbot		5603393	0					
ANR	5604589	Argument	Yb		5603393	3					
ANR	5604590	Identifier	Yb		5603393	0					
ANR	5604591	Argument	Y1b		5603393	4					
ANR	5604592	Identifier	Y1b		5603393	0					
ANR	5604593	Argument	false		5603393	5					
ANR	5604594	Identifier	false		5603393	0					
ANR	5604595	Argument	fo -> pdevc		5603393	6					
ANR	5604596	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604597	Identifier	fo		5603393	0					
ANR	5604598	Identifier	pdevc		5603393	1					
ANR	5604599	Argument	fo -> lop		5603393	7					
ANR	5604600	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604601	Identifier	fo		5603393	0					
ANR	5604602	Identifier	lop		5603393	1					
ANR	5604603	IfStatement	if ( code < 0 )		5603393	1					
ANR	5604604	Condition	code < 0	1593:16:62180:62187	5603393	0	True				
ANR	5604605	RelationalExpression	code < 0		5603393	0		<			
ANR	5604606	Identifier	code		5603393	0					
ANR	5604607	PrimaryExpression	0		5603393	1					
ANR	5604608	ReturnStatement	return code ;	1594:16:62206:62217	5603393	1	True				
ANR	5604609	Identifier	code		5603393	0					
ANR	5604610	IfStatement	if ( iYa > iY1b )		5603393	6					
ANR	5604611	Condition	iYa > iY1b	1596:12:62241:62250	5603393	0	True				
ANR	5604612	RelationalExpression	iYa > iY1b		5603393	0		>			
ANR	5604613	Identifier	iYa		5603393	0					
ANR	5604614	Identifier	iY1b		5603393	1					
ANR	5604615	CompoundStatement		163:12:7457:7513	5603393	1					
ANR	5604616	IdentifierDeclStatement	int ix = fixed2int_var_pixround ( vert_left . start . x ) ;	1597:12:62267:62317	5603393	0	True				
ANR	5604617	IdentifierDecl	ix = fixed2int_var_pixround ( vert_left . start . x )		5603393	0					
ANR	5604618	IdentifierDeclType	int		5603393	0					
ANR	5604619	Identifier	ix		5603393	1					
ANR	5604620	AssignmentExpression	ix = fixed2int_var_pixround ( vert_left . start . x )		5603393	2		=			
ANR	5604621	Identifier	ix		5603393	0					
ANR	5604622	CallExpression	fixed2int_var_pixround ( vert_left . start . x )		5603393	1					
ANR	5604623	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604624	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604625	ArgumentList	vert_left . start . x		5603393	1					
ANR	5604626	Argument	vert_left . start . x		5603393	0					
ANR	5604627	MemberAccess	vert_left . start . x		5603393	0					
ANR	5604628	MemberAccess	vert_left . start		5603393	0					
ANR	5604629	Identifier	vert_left		5603393	0					
ANR	5604630	Identifier	start		5603393	1					
ANR	5604631	Identifier	x		5603393	1					
ANR	5604632	IdentifierDeclStatement	int iw = fixed2int_var_pixround ( vert_right . start . x ) - ix ;	1598:12:62331:62387	5603393	1	True				
ANR	5604633	IdentifierDecl	iw = fixed2int_var_pixround ( vert_right . start . x ) - ix		5603393	0					
ANR	5604634	IdentifierDeclType	int		5603393	0					
ANR	5604635	Identifier	iw		5603393	1					
ANR	5604636	AssignmentExpression	iw = fixed2int_var_pixround ( vert_right . start . x ) - ix		5603393	2		=			
ANR	5604637	Identifier	iw		5603393	0					
ANR	5604638	AdditiveExpression	fixed2int_var_pixround ( vert_right . start . x ) - ix		5603393	1		-			
ANR	5604639	CallExpression	fixed2int_var_pixround ( vert_right . start . x )		5603393	0					
ANR	5604640	Callee	fixed2int_var_pixround		5603393	0					
ANR	5604641	Identifier	fixed2int_var_pixround		5603393	0					
ANR	5604642	ArgumentList	vert_right . start . x		5603393	1					
ANR	5604643	Argument	vert_right . start . x		5603393	0					
ANR	5604644	MemberAccess	vert_right . start . x		5603393	0					
ANR	5604645	MemberAccess	vert_right . start		5603393	0					
ANR	5604646	Identifier	vert_right		5603393	0					
ANR	5604647	Identifier	start		5603393	1					
ANR	5604648	Identifier	x		5603393	1					
ANR	5604649	Identifier	ix		5603393	1					
ANR	5604650	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"	1600:12:62402:62516	5603393	2	True				
ANR	5604651	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"		5603393	0		=			
ANR	5604652	Identifier	code		5603393	0					
ANR	5604653	CallExpression	"gx_fill_rectangle_device_rop ( ix , iY1b , iw , iYa - iY1b , fo -> pdevc , fo -> dev , fo -> lop )"		5603393	1					
ANR	5604654	Callee	gx_fill_rectangle_device_rop		5603393	0					
ANR	5604655	Identifier	gx_fill_rectangle_device_rop		5603393	0					
ANR	5604656	ArgumentList	ix		5603393	1					
ANR	5604657	Argument	ix		5603393	0					
ANR	5604658	Identifier	ix		5603393	0					
ANR	5604659	Argument	iY1b		5603393	1					
ANR	5604660	Identifier	iY1b		5603393	0					
ANR	5604661	Argument	iw		5603393	2					
ANR	5604662	Identifier	iw		5603393	0					
ANR	5604663	Argument	iYa - iY1b		5603393	3					
ANR	5604664	AdditiveExpression	iYa - iY1b		5603393	0		-			
ANR	5604665	Identifier	iYa		5603393	0					
ANR	5604666	Identifier	iY1b		5603393	1					
ANR	5604667	Argument	fo -> pdevc		5603393	4					
ANR	5604668	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604669	Identifier	fo		5603393	0					
ANR	5604670	Identifier	pdevc		5603393	1					
ANR	5604671	Argument	fo -> dev		5603393	5					
ANR	5604672	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604673	Identifier	fo		5603393	0					
ANR	5604674	Identifier	dev		5603393	1					
ANR	5604675	Argument	fo -> lop		5603393	6					
ANR	5604676	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604677	Identifier	fo		5603393	0					
ANR	5604678	Identifier	lop		5603393	1					
ANR	5604679	IfStatement	if ( code < 0 )		5603393	3					
ANR	5604680	Condition	code < 0	1602:16:62534:62541	5603393	0	True				
ANR	5604681	RelationalExpression	code < 0		5603393	0		<			
ANR	5604682	Identifier	code		5603393	0					
ANR	5604683	PrimaryExpression	0		5603393	1					
ANR	5604684	ReturnStatement	return code ;	1603:16:62560:62571	5603393	1	True				
ANR	5604685	Identifier	code		5603393	0					
ANR	5604686	IfStatement	if ( iY1a > iYa )		5603393	7					
ANR	5604687	Condition	iY1a > iYa	1605:12:62595:62604	5603393	0	True				
ANR	5604688	RelationalExpression	iY1a > iYa		5603393	0		>			
ANR	5604689	Identifier	iY1a		5603393	0					
ANR	5604690	Identifier	iYa		5603393	1					
ANR	5604691	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"	1606:12:62619:62731	5603393	1	True				
ANR	5604692	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604693	Identifier	code		5603393	0					
ANR	5604694	CallExpression	"fo -> fill_trap ( fo -> dev , pltop , prtop , Ya , Y1a , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604695	Callee	fo -> fill_trap		5603393	0					
ANR	5604696	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604697	Identifier	fo		5603393	0					
ANR	5604698	Identifier	fill_trap		5603393	1					
ANR	5604699	ArgumentList	fo -> dev		5603393	1					
ANR	5604700	Argument	fo -> dev		5603393	0					
ANR	5604701	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604702	Identifier	fo		5603393	0					
ANR	5604703	Identifier	dev		5603393	1					
ANR	5604704	Argument	pltop		5603393	1					
ANR	5604705	Identifier	pltop		5603393	0					
ANR	5604706	Argument	prtop		5603393	2					
ANR	5604707	Identifier	prtop		5603393	0					
ANR	5604708	Argument	Ya		5603393	3					
ANR	5604709	Identifier	Ya		5603393	0					
ANR	5604710	Argument	Y1a		5603393	4					
ANR	5604711	Identifier	Y1a		5603393	0					
ANR	5604712	Argument	false		5603393	5					
ANR	5604713	Identifier	false		5603393	0					
ANR	5604714	Argument	fo -> pdevc		5603393	6					
ANR	5604715	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604716	Identifier	fo		5603393	0					
ANR	5604717	Identifier	pdevc		5603393	1					
ANR	5604718	Argument	fo -> lop		5603393	7					
ANR	5604719	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604720	Identifier	fo		5603393	0					
ANR	5604721	Identifier	lop		5603393	1					
ANR	5604722	ElseStatement	else		5603393	0					
ANR	5604723	ExpressionStatement	code = 0	1609:12:62758:62766	5603393	0	True				
ANR	5604724	AssignmentExpression	code = 0		5603393	0		=			
ANR	5604725	Identifier	code		5603393	0					
ANR	5604726	PrimaryExpression	0		5603393	1					
ANR	5604727	ElseStatement	else		5603393	0					
ANR	5604728	CompoundStatement		180:8:8068:8077	5603393	0					
ANR	5604729	IdentifierDeclStatement	fixed Yac ;	1615:8:62942:62951	5603393	0	True				
ANR	5604730	IdentifierDecl	Yac		5603393	0					
ANR	5604731	IdentifierDeclType	fixed		5603393	0					
ANR	5604732	Identifier	Yac		5603393	1					
ANR	5604733	IfStatement	if ( fo -> pbox -> p . y < Ya )		5603393	1					
ANR	5604734	Condition	fo -> pbox -> p . y < Ya	1617:12:62966:62983	5603393	0	True				
ANR	5604735	RelationalExpression	fo -> pbox -> p . y < Ya		5603393	0		<			
ANR	5604736	MemberAccess	fo -> pbox -> p . y		5603393	0					
ANR	5604737	PtrMemberAccess	fo -> pbox -> p		5603393	0					
ANR	5604738	PtrMemberAccess	fo -> pbox		5603393	0					
ANR	5604739	Identifier	fo		5603393	0					
ANR	5604740	Identifier	pbox		5603393	1					
ANR	5604741	Identifier	p		5603393	1					
ANR	5604742	Identifier	y		5603393	1					
ANR	5604743	Identifier	Ya		5603393	1					
ANR	5604744	CompoundStatement		182:32:8112:8112	5603393	1					
ANR	5604745	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"	1618:12:63000:63111	5603393	0	True				
ANR	5604746	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604747	Identifier	code		5603393	0					
ANR	5604748	CallExpression	"fo -> fill_trap ( fo -> dev , plbot , prbot , Yb , Ya , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604749	Callee	fo -> fill_trap		5603393	0					
ANR	5604750	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604751	Identifier	fo		5603393	0					
ANR	5604752	Identifier	fill_trap		5603393	1					
ANR	5604753	ArgumentList	fo -> dev		5603393	1					
ANR	5604754	Argument	fo -> dev		5603393	0					
ANR	5604755	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604756	Identifier	fo		5603393	0					
ANR	5604757	Identifier	dev		5603393	1					
ANR	5604758	Argument	plbot		5603393	1					
ANR	5604759	Identifier	plbot		5603393	0					
ANR	5604760	Argument	prbot		5603393	2					
ANR	5604761	Identifier	prbot		5603393	0					
ANR	5604762	Argument	Yb		5603393	3					
ANR	5604763	Identifier	Yb		5603393	0					
ANR	5604764	Argument	Ya		5603393	4					
ANR	5604765	Identifier	Ya		5603393	0					
ANR	5604766	Argument	false		5603393	5					
ANR	5604767	Identifier	false		5603393	0					
ANR	5604768	Argument	fo -> pdevc		5603393	6					
ANR	5604769	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604770	Identifier	fo		5603393	0					
ANR	5604771	Identifier	pdevc		5603393	1					
ANR	5604772	Argument	fo -> lop		5603393	7					
ANR	5604773	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604774	Identifier	fo		5603393	0					
ANR	5604775	Identifier	lop		5603393	1					
ANR	5604776	IfStatement	if ( code < 0 )		5603393	1					
ANR	5604777	Condition	code < 0	1620:16:63129:63136	5603393	0	True				
ANR	5604778	RelationalExpression	code < 0		5603393	0		<			
ANR	5604779	Identifier	code		5603393	0					
ANR	5604780	PrimaryExpression	0		5603393	1					
ANR	5604781	ReturnStatement	return code ;	1621:16:63155:63166	5603393	1	True				
ANR	5604782	Identifier	code		5603393	0					
ANR	5604783	ExpressionStatement	Yac = Ya	1622:12:63180:63188	5603393	2	True				
ANR	5604784	AssignmentExpression	Yac = Ya		5603393	0		=			
ANR	5604785	Identifier	Yac		5603393	0					
ANR	5604786	Identifier	Ya		5603393	1					
ANR	5604787	ElseStatement	else		5603393	0					
ANR	5604788	ExpressionStatement	Yac = fo -> pbox -> p . y	1624:12:63217:63236	5603393	0	True				
ANR	5604789	AssignmentExpression	Yac = fo -> pbox -> p . y		5603393	0		=			
ANR	5604790	Identifier	Yac		5603393	0					
ANR	5604791	MemberAccess	fo -> pbox -> p . y		5603393	1					
ANR	5604792	PtrMemberAccess	fo -> pbox -> p		5603393	0					
ANR	5604793	PtrMemberAccess	fo -> pbox		5603393	0					
ANR	5604794	Identifier	fo		5603393	0					
ANR	5604795	Identifier	pbox		5603393	1					
ANR	5604796	Identifier	p		5603393	1					
ANR	5604797	Identifier	y		5603393	1					
ANR	5604798	IfStatement	if ( fo -> pbox -> q . y > Y1b )		5603393	2					
ANR	5604799	Condition	fo -> pbox -> q . y > Y1b	1625:12:63250:63268	5603393	0	True				
ANR	5604800	RelationalExpression	fo -> pbox -> q . y > Y1b		5603393	0		>			
ANR	5604801	MemberAccess	fo -> pbox -> q . y		5603393	0					
ANR	5604802	PtrMemberAccess	fo -> pbox -> q		5603393	0					
ANR	5604803	PtrMemberAccess	fo -> pbox		5603393	0					
ANR	5604804	Identifier	fo		5603393	0					
ANR	5604805	Identifier	pbox		5603393	1					
ANR	5604806	Identifier	q		5603393	1					
ANR	5604807	Identifier	y		5603393	1					
ANR	5604808	Identifier	Y1b		5603393	1					
ANR	5604809	CompoundStatement		190:33:8397:8397	5603393	1					
ANR	5604810	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"	1626:12:63285:63411	5603393	0	True				
ANR	5604811	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604812	Identifier	code		5603393	0					
ANR	5604813	CallExpression	"fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , Y1b , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604814	Callee	fo -> fill_trap		5603393	0					
ANR	5604815	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604816	Identifier	fo		5603393	0					
ANR	5604817	Identifier	fill_trap		5603393	1					
ANR	5604818	ArgumentList	fo -> dev		5603393	1					
ANR	5604819	Argument	fo -> dev		5603393	0					
ANR	5604820	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604821	Identifier	fo		5603393	0					
ANR	5604822	Identifier	dev		5603393	1					
ANR	5604823	Argument	& slant_left		5603393	1					
ANR	5604824	UnaryOperationExpression	& slant_left		5603393	0					
ANR	5604825	UnaryOperator	&		5603393	0					
ANR	5604826	Identifier	slant_left		5603393	1					
ANR	5604827	Argument	& slant_right		5603393	2					
ANR	5604828	UnaryOperationExpression	& slant_right		5603393	0					
ANR	5604829	UnaryOperator	&		5603393	0					
ANR	5604830	Identifier	slant_right		5603393	1					
ANR	5604831	Argument	Yac		5603393	3					
ANR	5604832	Identifier	Yac		5603393	0					
ANR	5604833	Argument	Y1b		5603393	4					
ANR	5604834	Identifier	Y1b		5603393	0					
ANR	5604835	Argument	false		5603393	5					
ANR	5604836	Identifier	false		5603393	0					
ANR	5604837	Argument	fo -> pdevc		5603393	6					
ANR	5604838	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604839	Identifier	fo		5603393	0					
ANR	5604840	Identifier	pdevc		5603393	1					
ANR	5604841	Argument	fo -> lop		5603393	7					
ANR	5604842	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604843	Identifier	fo		5603393	0					
ANR	5604844	Identifier	lop		5603393	1					
ANR	5604845	IfStatement	if ( code < 0 )		5603393	1					
ANR	5604846	Condition	code < 0	1628:16:63429:63436	5603393	0	True				
ANR	5604847	RelationalExpression	code < 0		5603393	0		<			
ANR	5604848	Identifier	code		5603393	0					
ANR	5604849	PrimaryExpression	0		5603393	1					
ANR	5604850	ReturnStatement	return code ;	1629:16:63455:63466	5603393	1	True				
ANR	5604851	Identifier	code		5603393	0					
ANR	5604852	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"	1630:12:63480:63593	5603393	2	True				
ANR	5604853	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604854	Identifier	code		5603393	0					
ANR	5604855	CallExpression	"fo -> fill_trap ( fo -> dev , pltop , prtop , Y1b , Y1a , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604856	Callee	fo -> fill_trap		5603393	0					
ANR	5604857	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604858	Identifier	fo		5603393	0					
ANR	5604859	Identifier	fill_trap		5603393	1					
ANR	5604860	ArgumentList	fo -> dev		5603393	1					
ANR	5604861	Argument	fo -> dev		5603393	0					
ANR	5604862	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604863	Identifier	fo		5603393	0					
ANR	5604864	Identifier	dev		5603393	1					
ANR	5604865	Argument	pltop		5603393	1					
ANR	5604866	Identifier	pltop		5603393	0					
ANR	5604867	Argument	prtop		5603393	2					
ANR	5604868	Identifier	prtop		5603393	0					
ANR	5604869	Argument	Y1b		5603393	3					
ANR	5604870	Identifier	Y1b		5603393	0					
ANR	5604871	Argument	Y1a		5603393	4					
ANR	5604872	Identifier	Y1a		5603393	0					
ANR	5604873	Argument	false		5603393	5					
ANR	5604874	Identifier	false		5603393	0					
ANR	5604875	Argument	fo -> pdevc		5603393	6					
ANR	5604876	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604877	Identifier	fo		5603393	0					
ANR	5604878	Identifier	pdevc		5603393	1					
ANR	5604879	Argument	fo -> lop		5603393	7					
ANR	5604880	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604881	Identifier	fo		5603393	0					
ANR	5604882	Identifier	lop		5603393	1					
ANR	5604883	ElseStatement	else		5603393	0					
ANR	5604884	ExpressionStatement	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"	1633:12:63622:63758	5603393	0	True				
ANR	5604885	AssignmentExpression	"code = fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"		5603393	0		=			
ANR	5604886	Identifier	code		5603393	0					
ANR	5604887	CallExpression	"fo -> fill_trap ( fo -> dev , & slant_left , & slant_right , Yac , fo -> pbox -> q . y , false , fo -> pdevc , fo -> lop )"		5603393	1					
ANR	5604888	Callee	fo -> fill_trap		5603393	0					
ANR	5604889	PtrMemberAccess	fo -> fill_trap		5603393	0					
ANR	5604890	Identifier	fo		5603393	0					
ANR	5604891	Identifier	fill_trap		5603393	1					
ANR	5604892	ArgumentList	fo -> dev		5603393	1					
ANR	5604893	Argument	fo -> dev		5603393	0					
ANR	5604894	PtrMemberAccess	fo -> dev		5603393	0					
ANR	5604895	Identifier	fo		5603393	0					
ANR	5604896	Identifier	dev		5603393	1					
ANR	5604897	Argument	& slant_left		5603393	1					
ANR	5604898	UnaryOperationExpression	& slant_left		5603393	0					
ANR	5604899	UnaryOperator	&		5603393	0					
ANR	5604900	Identifier	slant_left		5603393	1					
ANR	5604901	Argument	& slant_right		5603393	2					
ANR	5604902	UnaryOperationExpression	& slant_right		5603393	0					
ANR	5604903	UnaryOperator	&		5603393	0					
ANR	5604904	Identifier	slant_right		5603393	1					
ANR	5604905	Argument	Yac		5603393	3					
ANR	5604906	Identifier	Yac		5603393	0					
ANR	5604907	Argument	fo -> pbox -> q . y		5603393	4					
ANR	5604908	MemberAccess	fo -> pbox -> q . y		5603393	0					
ANR	5604909	PtrMemberAccess	fo -> pbox -> q		5603393	0					
ANR	5604910	PtrMemberAccess	fo -> pbox		5603393	0					
ANR	5604911	Identifier	fo		5603393	0					
ANR	5604912	Identifier	pbox		5603393	1					
ANR	5604913	Identifier	q		5603393	1					
ANR	5604914	Identifier	y		5603393	1					
ANR	5604915	Argument	false		5603393	5					
ANR	5604916	Identifier	false		5603393	0					
ANR	5604917	Argument	fo -> pdevc		5603393	6					
ANR	5604918	PtrMemberAccess	fo -> pdevc		5603393	0					
ANR	5604919	Identifier	fo		5603393	0					
ANR	5604920	Identifier	pdevc		5603393	1					
ANR	5604921	Argument	fo -> lop		5603393	7					
ANR	5604922	PtrMemberAccess	fo -> lop		5603393	0					
ANR	5604923	Identifier	fo		5603393	0					
ANR	5604924	Identifier	lop		5603393	1					
ANR	5604925	ReturnStatement	return code ;	1636:4:63770:63781	5603393	19	True				
ANR	5604926	Identifier	code		5603393	0					
ANR	5604927	ReturnType	static int		5603393	1					
ANR	5604928	Identifier	fill_slant_adjust		5603393	2					
ANR	5604929	ParameterList	"const line_list * ll , const active_line * flp , const active_line * alp , fixed y , fixed y1"		5603393	3					
ANR	5604930	Parameter	const line_list * ll	1434:18:54777:54795	5603393	0	True				
ANR	5604931	ParameterType	const line_list *		5603393	0					
ANR	5604932	Identifier	ll		5603393	1					
ANR	5604933	Parameter	const active_line * flp	1435:8:54806:54827	5603393	1	True				
ANR	5604934	ParameterType	const active_line *		5603393	0					
ANR	5604935	Identifier	flp		5603393	1					
ANR	5604936	Parameter	const active_line * alp	1435:32:54830:54851	5603393	2	True				
ANR	5604937	ParameterType	const active_line *		5603393	0					
ANR	5604938	Identifier	alp		5603393	1					
ANR	5604939	Parameter	fixed y	1435:56:54854:54860	5603393	3	True				
ANR	5604940	ParameterType	fixed		5603393	0					
ANR	5604941	Identifier	y		5603393	1					
ANR	5604942	Parameter	fixed y1	1435:65:54863:54870	5603393	4	True				
ANR	5604943	ParameterType	fixed		5603393	0					
ANR	5604944	Identifier	y1		5603393	1					
ANR	5604945	CFGEntryNode	ENTRY		5603393		True				
ANR	5604946	CFGExitNode	EXIT		5603393		True				
ANR	5604947	Symbol	slant_right . end		5603393						
ANR	5604948	Symbol	fo -> pbox -> p . y		5603393						
ANR	5604949	Symbol	vert_left		5603393						
ANR	5604950	Symbol	fo -> adjust_below		5603393						
ANR	5604951	Symbol	plbot		5603393						
ANR	5604952	Symbol	vert_left . start . y		5603393						
ANR	5604953	Symbol	slant_left . end . x		5603393						
ANR	5604954	Symbol	* ll		5603393						
ANR	5604955	Symbol	vert_left . start . x		5603393						
ANR	5604956	Symbol	Ya		5603393						
ANR	5604957	Symbol	Yb		5603393						
ANR	5604958	Symbol	* flp		5603393						
ANR	5604959	Symbol	fo -> adjust_right		5603393						
ANR	5604960	Symbol	slant_left . end . y		5603393						
ANR	5604961	Symbol	iw		5603393						
ANR	5604962	Symbol	ix		5603393						
ANR	5604963	Symbol	alp -> start . y		5603393						
ANR	5604964	Symbol	alp -> start . x		5603393						
ANR	5604965	Symbol	& vert_right		5603393						
ANR	5604966	Symbol	* * fo		5603393						
ANR	5604967	Symbol	Yac		5603393						
ANR	5604968	Symbol	fo -> pbox		5603393						
ANR	5604969	Symbol	flp -> start		5603393						
ANR	5604970	Symbol	alp -> x_current		5603393						
ANR	5604971	Symbol	flp -> x_current		5603393						
ANR	5604972	Symbol	prtop		5603393						
ANR	5604973	Symbol	iYa		5603393						
ANR	5604974	Symbol	iY1b		5603393						
ANR	5604975	Symbol	iY1a		5603393						
ANR	5604976	Symbol	vert_right . start . x		5603393						
ANR	5604977	Symbol	vert_right . start . y		5603393						
ANR	5604978	Symbol	iYb		5603393						
ANR	5604979	Symbol	fo -> adjust_left		5603393						
ANR	5604980	Symbol	fixed_pixround		5603393						
ANR	5604981	Symbol	& slant_right		5603393						
ANR	5604982	Symbol	fo -> lop		5603393						
ANR	5604983	Symbol	Y1a		5603393						
ANR	5604984	Symbol	slant		5603393						
ANR	5604985	Symbol	flp		5603393						
ANR	5604986	Symbol	Y1b		5603393						
ANR	5604987	Symbol	* fo		5603393						
ANR	5604988	Symbol	flp -> start . x		5603393						
ANR	5604989	Symbol	flp -> start . y		5603393						
ANR	5604990	Symbol	slant_left . start		5603393						
ANR	5604991	Symbol	alp -> end . y		5603393						
ANR	5604992	Symbol	cx		5603393						
ANR	5604993	Symbol	alp -> end . x		5603393						
ANR	5604994	Symbol	cy		5603393						
ANR	5604995	Symbol	fo -> pdevc		5603393						
ANR	5604996	Symbol	x		5603393						
ANR	5604997	Symbol	y		5603393						
ANR	5604998	Symbol	ll		5603393						
ANR	5604999	Symbol	& slant_left		5603393						
ANR	5605000	Symbol	pltop		5603393						
ANR	5605001	Symbol	slant_left . end		5603393						
ANR	5605002	Symbol	fo -> pbox -> q . y		5603393						
ANR	5605003	Symbol	alp -> end		5603393						
ANR	5605004	Symbol	vert_right		5603393						
ANR	5605005	Symbol	vert_right . end		5603393						
ANR	5605006	Symbol	dy		5603393						
ANR	5605007	Symbol	flp -> x_next		5603393						
ANR	5605008	Symbol	alp		5603393						
ANR	5605009	Symbol	fixed2int_var_pixround		5603393						
ANR	5605010	Symbol	ll -> fo		5603393						
ANR	5605011	Symbol	gx_fill_rectangle_device_rop		5603393						
ANR	5605012	Symbol	fo -> dev		5603393						
ANR	5605013	Symbol	alp -> x_next		5603393						
ANR	5605014	Symbol	& vert_left		5603393						
ANR	5605015	Symbol	TRY_TO_EXTEND_TRAP		5603393						
ANR	5605016	Symbol	fo -> adjust_above		5603393						
ANR	5605017	Symbol	alp -> start		5603393						
ANR	5605018	Symbol	slant_right . end . x		5603393						
ANR	5605019	Symbol	slant_right . end . y		5603393						
ANR	5605020	Symbol	slant_left		5603393						
ANR	5605021	Symbol	code		5603393						
ANR	5605022	Symbol	slant_right		5603393						
ANR	5605023	Symbol	* fo -> pbox		5603393						
ANR	5605024	Symbol	slant_shallow		5603393						
ANR	5605025	Symbol	fo		5603393						
ANR	5605026	Symbol	vert_left . end		5603393						
ANR	5605027	Symbol	slant_right . start		5603393						
ANR	5605028	Symbol	flp -> end		5603393						
ANR	5605029	Symbol	y1		5603393						
ANR	5605030	Symbol	fixed_half		5603393						
ANR	5605031	Symbol	prbot		5603393						
ANR	5605032	Symbol	vert_left . end . y		5603393						
ANR	5605033	Symbol	vert_left . end . x		5603393						
ANR	5605034	Symbol	false		5603393						
ANR	5605035	Symbol	vert_left . start		5603393						
ANR	5605036	Symbol	* alp		5603393						
ANR	5605037	Symbol	vert_right . end . x		5603393						
ANR	5605038	Symbol	fo -> fill_trap		5603393						
ANR	5605039	Symbol	vert_right . start		5603393						
ANR	5605040	Symbol	vert_right . end . y		5603393						
ANR	5605041	Symbol	fo -> pbox -> p		5603393						
ANR	5605042	Symbol	fo -> pbox -> q		5603393						
ANR	5605043	Symbol	slant_left . start . x		5603393						
ANR	5605044	Symbol	flp -> end . x		5603393						
ANR	5605045	Symbol	slant_right . start . y		5603393						
ANR	5605046	Symbol	slant_left . start . y		5603393						
ANR	5605047	Symbol	flp -> end . y		5603393						
ANR	5605048	Symbol	slant_right . start . x		5603393						
ANR	5605049	Function	resort_x_line	1640:0:63854:64506							
ANR	5605050	FunctionDef	resort_x_line (active_line * alp)		5605049	0					
ANR	5605051	CompoundStatement		1642:0:63906:64506	5605049	0					
ANR	5605052	IdentifierDeclStatement	active_line * prev = alp -> prev ;	1643:4:63912:63941	5605049	0	True				
ANR	5605053	IdentifierDecl	* prev = alp -> prev		5605049	0					
ANR	5605054	IdentifierDeclType	active_line *		5605049	0					
ANR	5605055	Identifier	prev		5605049	1					
ANR	5605056	AssignmentExpression	* prev = alp -> prev		5605049	2		=			
ANR	5605057	Identifier	prev		5605049	0					
ANR	5605058	PtrMemberAccess	alp -> prev		5605049	1					
ANR	5605059	Identifier	alp		5605049	0					
ANR	5605060	Identifier	prev		5605049	1					
ANR	5605061	IdentifierDeclStatement	active_line * next = alp -> next ;	1644:4:63947:63976	5605049	1	True				
ANR	5605062	IdentifierDecl	* next = alp -> next		5605049	0					
ANR	5605063	IdentifierDeclType	active_line *		5605049	0					
ANR	5605064	Identifier	next		5605049	1					
ANR	5605065	AssignmentExpression	* next = alp -> next		5605049	2		=			
ANR	5605066	Identifier	next		5605049	0					
ANR	5605067	PtrMemberAccess	alp -> next		5605049	1					
ANR	5605068	Identifier	alp		5605049	0					
ANR	5605069	Identifier	next		5605049	1					
ANR	5605070	ExpressionStatement	prev -> next = next	1646:4:63983:64000	5605049	2	True				
ANR	5605071	AssignmentExpression	prev -> next = next		5605049	0		=			
ANR	5605072	PtrMemberAccess	prev -> next		5605049	0					
ANR	5605073	Identifier	prev		5605049	0					
ANR	5605074	Identifier	next		5605049	1					
ANR	5605075	Identifier	next		5605049	1					
ANR	5605076	IfStatement	if ( next )		5605049	3					
ANR	5605077	Condition	next	1647:8:64010:64013	5605049	0	True				
ANR	5605078	Identifier	next		5605049	0					
ANR	5605079	ExpressionStatement	next -> prev = prev	1648:8:64024:64041	5605049	1	True				
ANR	5605080	AssignmentExpression	next -> prev = prev		5605049	0		=			
ANR	5605081	PtrMemberAccess	next -> prev		5605049	0					
ANR	5605082	Identifier	next		5605049	0					
ANR	5605083	Identifier	prev		5605049	1					
ANR	5605084	Identifier	prev		5605049	1					
ANR	5605085	WhileStatement	"while ( x_order ( prev , alp ) > 0 )"		5605049	4					
ANR	5605086	Condition	"x_order ( prev , alp ) > 0"	1649:11:64054:64075	5605049	0	True				
ANR	5605087	RelationalExpression	"x_order ( prev , alp ) > 0"		5605049	0		>			
ANR	5605088	CallExpression	"x_order ( prev , alp )"		5605049	0					
ANR	5605089	Callee	x_order		5605049	0					
ANR	5605090	Identifier	x_order		5605049	0					
ANR	5605091	ArgumentList	prev		5605049	1					
ANR	5605092	Argument	prev		5605049	0					
ANR	5605093	Identifier	prev		5605049	0					
ANR	5605094	Argument	alp		5605049	1					
ANR	5605095	Identifier	alp		5605049	0					
ANR	5605096	PrimaryExpression	0		5605049	1					
ANR	5605097	CompoundStatement		8:35:171:171	5605049	1					
ANR	5605098	ExpressionStatement	"if_debug2 ( 'F' , ""[F]swap 0x%lx,0x%lx\\n"" , ( ulong ) alp , ( ulong ) prev )"	1650:8:64088:64173	5605049	0	True				
ANR	5605099	CallExpression	"if_debug2 ( 'F' , ""[F]swap 0x%lx,0x%lx\\n"" , ( ulong ) alp , ( ulong ) prev )"		5605049	0					
ANR	5605100	Callee	if_debug2		5605049	0					
ANR	5605101	Identifier	if_debug2		5605049	0					
ANR	5605102	ArgumentList	'F'		5605049	1					
ANR	5605103	Argument	'F'		5605049	0					
ANR	5605104	PrimaryExpression	'F'		5605049	0					
ANR	5605105	Argument	"""[F]swap 0x%lx,0x%lx\\n"""		5605049	1					
ANR	5605106	PrimaryExpression	"""[F]swap 0x%lx,0x%lx\\n"""		5605049	0					
ANR	5605107	Argument	( ulong ) alp		5605049	2					
ANR	5605108	CastExpression	( ulong ) alp		5605049	0					
ANR	5605109	CastTarget	ulong		5605049	0					
ANR	5605110	Identifier	alp		5605049	1					
ANR	5605111	Argument	( ulong ) prev		5605049	3					
ANR	5605112	CastExpression	( ulong ) prev		5605049	0					
ANR	5605113	CastTarget	ulong		5605049	0					
ANR	5605114	Identifier	prev		5605049	1					
ANR	5605115	ExpressionStatement	"next = prev , prev = prev -> prev"	1652:8:64183:64213	5605049	1	True				
ANR	5605116	Expression	"next = prev , prev = prev -> prev"		5605049	0					
ANR	5605117	AssignmentExpression	next = prev		5605049	0		=			
ANR	5605118	Identifier	next		5605049	0					
ANR	5605119	Identifier	prev		5605049	1					
ANR	5605120	AssignmentExpression	prev = prev -> prev		5605049	1		=			
ANR	5605121	Identifier	prev		5605049	0					
ANR	5605122	PtrMemberAccess	prev -> prev		5605049	1					
ANR	5605123	Identifier	prev		5605049	0					
ANR	5605124	Identifier	prev		5605049	1					
ANR	5605125	ExpressionStatement	alp -> next = next	1654:4:64225:64241	5605049	5	True				
ANR	5605126	AssignmentExpression	alp -> next = next		5605049	0		=			
ANR	5605127	PtrMemberAccess	alp -> next		5605049	0					
ANR	5605128	Identifier	alp		5605049	0					
ANR	5605129	Identifier	next		5605049	1					
ANR	5605130	Identifier	next		5605049	1					
ANR	5605131	ExpressionStatement	alp -> prev = prev	1655:4:64247:64263	5605049	6	True				
ANR	5605132	AssignmentExpression	alp -> prev = prev		5605049	0		=			
ANR	5605133	PtrMemberAccess	alp -> prev		5605049	0					
ANR	5605134	Identifier	alp		5605049	0					
ANR	5605135	Identifier	prev		5605049	1					
ANR	5605136	Identifier	prev		5605049	1					
ANR	5605137	IfStatement	if ( next )		5605049	7					
ANR	5605138	Condition	next	1657:8:64343:64346	5605049	0	True				
ANR	5605139	Identifier	next		5605049	0					
ANR	5605140	ExpressionStatement	next -> prev = alp	1658:8:64357:64373	5605049	1	True				
ANR	5605141	AssignmentExpression	next -> prev = alp		5605049	0		=			
ANR	5605142	PtrMemberAccess	next -> prev		5605049	0					
ANR	5605143	Identifier	next		5605049	0					
ANR	5605144	Identifier	prev		5605049	1					
ANR	5605145	Identifier	alp		5605049	1					
ANR	5605146	IfStatement	if ( prev )		5605049	8					
ANR	5605147	Condition	prev	1660:8:64474:64477	5605049	0	True				
ANR	5605148	Identifier	prev		5605049	0					
ANR	5605149	ExpressionStatement	prev -> next = alp	1661:8:64488:64504	5605049	1	True				
ANR	5605150	AssignmentExpression	prev -> next = alp		5605049	0		=			
ANR	5605151	PtrMemberAccess	prev -> next		5605049	0					
ANR	5605152	Identifier	prev		5605049	0					
ANR	5605153	Identifier	next		5605049	1					
ANR	5605154	Identifier	alp		5605049	1					
ANR	5605155	ReturnType	static inline void		5605049	1					
ANR	5605156	Identifier	resort_x_line		5605049	2					
ANR	5605157	ParameterList	active_line * alp		5605049	3					
ANR	5605158	Parameter	active_line * alp	1641:14:63887:63903	5605049	0	True				
ANR	5605159	ParameterType	active_line *		5605049	0					
ANR	5605160	Identifier	alp		5605049	1					
ANR	5605161	CFGEntryNode	ENTRY		5605049		True				
ANR	5605162	CFGExitNode	EXIT		5605049		True				
ANR	5605163	Symbol	* alp		5605049						
ANR	5605164	Symbol	next		5605049						
ANR	5605165	Symbol	prev -> next		5605049						
ANR	5605166	Symbol	alp -> prev		5605049						
ANR	5605167	Symbol	alp -> next		5605049						
ANR	5605168	Symbol	prev -> prev		5605049						
ANR	5605169	Symbol	alp		5605049						
ANR	5605170	Symbol	next -> prev		5605049						
ANR	5605171	Symbol	prev		5605049						
ANR	5605172	Symbol	* prev		5605049						
ANR	5605173	Symbol	* next		5605049						
ANR	5605174	Symbol	x_order		5605049						
ANR	5605175	Function	move_al_by_y	1665:0:64539:65562							
ANR	5605176	FunctionDef	"move_al_by_y (line_list * ll , fixed y1)"		5605175	0					
ANR	5605177	CompoundStatement		1667:0:64595:65562	5605175	0					
ANR	5605178	IdentifierDeclStatement	fixed x ;	1668:4:64601:64608	5605175	0	True				
ANR	5605179	IdentifierDecl	x		5605175	0					
ANR	5605180	IdentifierDeclType	fixed		5605175	0					
ANR	5605181	Identifier	x		5605175	1					
ANR	5605182	IdentifierDeclStatement	"active_line * alp , * nlp ;"	1669:4:64614:64636	5605175	1	True				
ANR	5605183	IdentifierDecl	* alp		5605175	0					
ANR	5605184	IdentifierDeclType	active_line *		5605175	0					
ANR	5605185	Identifier	alp		5605175	1					
ANR	5605186	IdentifierDecl	* nlp		5605175	1					
ANR	5605187	IdentifierDeclType	active_line *		5605175	0					
ANR	5605188	Identifier	nlp		5605175	1					
ANR	5605189	IdentifierDeclStatement	int code ;	1670:4:64642:64650	5605175	2	True				
ANR	5605190	IdentifierDecl	code		5605175	0					
ANR	5605191	IdentifierDeclType	int		5605175	0					
ANR	5605192	Identifier	code		5605175	1					
ANR	5605193	ForStatement	"for ( x = min_fixed , alp = ll -> x_list ; alp != 0 ; alp = nlp )"		5605175	3					
ANR	5605194	ForInit	"x = min_fixed , alp = ll -> x_list ;"	1672:9:64662:64693	5605175	0	True				
ANR	5605195	Expression	"x = min_fixed , alp = ll -> x_list"		5605175	0					
ANR	5605196	AssignmentExpression	x = min_fixed		5605175	0		=			
ANR	5605197	Identifier	x		5605175	0					
ANR	5605198	Identifier	min_fixed		5605175	1					
ANR	5605199	AssignmentExpression	alp = ll -> x_list		5605175	1		=			
ANR	5605200	Identifier	alp		5605175	0					
ANR	5605201	PtrMemberAccess	ll -> x_list		5605175	1					
ANR	5605202	Identifier	ll		5605175	0					
ANR	5605203	Identifier	x_list		5605175	1					
ANR	5605204	Condition	alp != 0	1672:42:64695:64702	5605175	1	True				
ANR	5605205	EqualityExpression	alp != 0		5605175	0		!=			
ANR	5605206	Identifier	alp		5605175	0					
ANR	5605207	PrimaryExpression	0		5605175	1					
ANR	5605208	AssignmentExpression	alp = nlp	1672:52:64705:64713	5605175	2	True	=			
ANR	5605209	Identifier	alp		5605175	0					
ANR	5605210	Identifier	nlp		5605175	1					
ANR	5605211	CompoundStatement		7:8:130:149	5605175	3					
ANR	5605212	IdentifierDeclStatement	bool notend = false ;	1673:8:64726:64745	5605175	0	True				
ANR	5605213	IdentifierDecl	notend = false		5605175	0					
ANR	5605214	IdentifierDeclType	bool		5605175	0					
ANR	5605215	Identifier	notend		5605175	1					
ANR	5605216	AssignmentExpression	notend = false		5605175	2		=			
ANR	5605217	Identifier	false		5605175	0					
ANR	5605218	Identifier	false		5605175	1					
ANR	5605219	ExpressionStatement	alp -> x_current = alp -> x_next	1674:8:64755:64783	5605175	1	True				
ANR	5605220	AssignmentExpression	alp -> x_current = alp -> x_next		5605175	0		=			
ANR	5605221	PtrMemberAccess	alp -> x_current		5605175	0					
ANR	5605222	Identifier	alp		5605175	0					
ANR	5605223	Identifier	x_current		5605175	1					
ANR	5605224	PtrMemberAccess	alp -> x_next		5605175	1					
ANR	5605225	Identifier	alp		5605175	0					
ANR	5605226	Identifier	x_next		5605175	1					
ANR	5605227	ExpressionStatement	nlp = alp -> next	1676:8:64794:64809	5605175	2	True				
ANR	5605228	AssignmentExpression	nlp = alp -> next		5605175	0		=			
ANR	5605229	Identifier	nlp		5605175	0					
ANR	5605230	PtrMemberAccess	alp -> next		5605175	1					
ANR	5605231	Identifier	alp		5605175	0					
ANR	5605232	Identifier	next		5605175	1					
ANR	5605233	IfStatement	if ( alp -> end . y == y1 && alp -> more_flattened )		5605175	3					
ANR	5605234	Condition	alp -> end . y == y1 && alp -> more_flattened	1677:12:64823:64861	5605175	0	True				
ANR	5605235	AndExpression	alp -> end . y == y1 && alp -> more_flattened		5605175	0		&&			
ANR	5605236	EqualityExpression	alp -> end . y == y1		5605175	0		==			
ANR	5605237	MemberAccess	alp -> end . y		5605175	0					
ANR	5605238	PtrMemberAccess	alp -> end		5605175	0					
ANR	5605239	Identifier	alp		5605175	0					
ANR	5605240	Identifier	end		5605175	1					
ANR	5605241	Identifier	y		5605175	1					
ANR	5605242	Identifier	y1		5605175	1					
ANR	5605243	PtrMemberAccess	alp -> more_flattened		5605175	1					
ANR	5605244	Identifier	alp		5605175	0					
ANR	5605245	Identifier	more_flattened		5605175	1					
ANR	5605246	CompoundStatement		11:53:268:268	5605175	1					
ANR	5605247	ExpressionStatement	"code = step_al ( alp , true )"	1678:12:64878:64903	5605175	0	True				
ANR	5605248	AssignmentExpression	"code = step_al ( alp , true )"		5605175	0		=			
ANR	5605249	Identifier	code		5605175	0					
ANR	5605250	CallExpression	"step_al ( alp , true )"		5605175	1					
ANR	5605251	Callee	step_al		5605175	0					
ANR	5605252	Identifier	step_al		5605175	0					
ANR	5605253	ArgumentList	alp		5605175	1					
ANR	5605254	Argument	alp		5605175	0					
ANR	5605255	Identifier	alp		5605175	0					
ANR	5605256	Argument	true		5605175	1					
ANR	5605257	Identifier	true		5605175	0					
ANR	5605258	IfStatement	if ( code < 0 )		5605175	1					
ANR	5605259	Condition	code < 0	1679:16:64921:64928	5605175	0	True				
ANR	5605260	RelationalExpression	code < 0		5605175	0		<			
ANR	5605261	Identifier	code		5605175	0					
ANR	5605262	PrimaryExpression	0		5605175	1					
ANR	5605263	ReturnStatement	return code ;	1680:16:64947:64958	5605175	1	True				
ANR	5605264	Identifier	code		5605175	0					
ANR	5605265	ExpressionStatement	alp -> x_current = alp -> x_next = alp -> start . x	1681:12:64972:65015	5605175	2	True				
ANR	5605266	AssignmentExpression	alp -> x_current = alp -> x_next = alp -> start . x		5605175	0		=			
ANR	5605267	PtrMemberAccess	alp -> x_current		5605175	0					
ANR	5605268	Identifier	alp		5605175	0					
ANR	5605269	Identifier	x_current		5605175	1					
ANR	5605270	AssignmentExpression	alp -> x_next = alp -> start . x		5605175	1		=			
ANR	5605271	PtrMemberAccess	alp -> x_next		5605175	0					
ANR	5605272	Identifier	alp		5605175	0					
ANR	5605273	Identifier	x_next		5605175	1					
ANR	5605274	MemberAccess	alp -> start . x		5605175	1					
ANR	5605275	PtrMemberAccess	alp -> start		5605175	0					
ANR	5605276	Identifier	alp		5605175	0					
ANR	5605277	Identifier	start		5605175	1					
ANR	5605278	Identifier	x		5605175	1					
ANR	5605279	ExpressionStatement	notend = ( alp -> end . y >= alp -> start . y )	1682:12:65029:65066	5605175	3	True				
ANR	5605280	AssignmentExpression	notend = ( alp -> end . y >= alp -> start . y )		5605175	0		=			
ANR	5605281	Identifier	notend		5605175	0					
ANR	5605282	RelationalExpression	alp -> end . y >= alp -> start . y		5605175	1		>=			
ANR	5605283	MemberAccess	alp -> end . y		5605175	0					
ANR	5605284	PtrMemberAccess	alp -> end		5605175	0					
ANR	5605285	Identifier	alp		5605175	0					
ANR	5605286	Identifier	end		5605175	1					
ANR	5605287	Identifier	y		5605175	1					
ANR	5605288	MemberAccess	alp -> start . y		5605175	1					
ANR	5605289	PtrMemberAccess	alp -> start		5605175	0					
ANR	5605290	Identifier	alp		5605175	0					
ANR	5605291	Identifier	start		5605175	1					
ANR	5605292	Identifier	y		5605175	1					
ANR	5605293	IfStatement	if ( alp -> end . y > y1 || notend )		5605175	4					
ANR	5605294	Condition	alp -> end . y > y1 || notend	1684:12:65090:65114	5605175	0	True				
ANR	5605295	OrExpression	alp -> end . y > y1 || notend		5605175	0		||			
ANR	5605296	RelationalExpression	alp -> end . y > y1		5605175	0		>			
ANR	5605297	MemberAccess	alp -> end . y		5605175	0					
ANR	5605298	PtrMemberAccess	alp -> end		5605175	0					
ANR	5605299	Identifier	alp		5605175	0					
ANR	5605300	Identifier	end		5605175	1					
ANR	5605301	Identifier	y		5605175	1					
ANR	5605302	Identifier	y1		5605175	1					
ANR	5605303	Identifier	notend		5605175	1					
ANR	5605304	CompoundStatement		18:39:521:521	5605175	1					
ANR	5605305	IfStatement	if ( alp -> x_next <= x )		5605175	0					
ANR	5605306	Condition	alp -> x_next <= x	1685:16:65135:65150	5605175	0	True				
ANR	5605307	RelationalExpression	alp -> x_next <= x		5605175	0		<=			
ANR	5605308	PtrMemberAccess	alp -> x_next		5605175	0					
ANR	5605309	Identifier	alp		5605175	0					
ANR	5605310	Identifier	x_next		5605175	1					
ANR	5605311	Identifier	x		5605175	1					
ANR	5605312	ExpressionStatement	resort_x_line ( alp )	1686:16:65169:65187	5605175	1	True				
ANR	5605313	CallExpression	resort_x_line ( alp )		5605175	0					
ANR	5605314	Callee	resort_x_line		5605175	0					
ANR	5605315	Identifier	resort_x_line		5605175	0					
ANR	5605316	ArgumentList	alp		5605175	1					
ANR	5605317	Argument	alp		5605175	0					
ANR	5605318	Identifier	alp		5605175	0					
ANR	5605319	ElseStatement	else		5605175	0					
ANR	5605320	ExpressionStatement	x = alp -> x_next	1688:16:65222:65237	5605175	0	True				
ANR	5605321	AssignmentExpression	x = alp -> x_next		5605175	0		=			
ANR	5605322	Identifier	x		5605175	0					
ANR	5605323	PtrMemberAccess	alp -> x_next		5605175	1					
ANR	5605324	Identifier	alp		5605175	0					
ANR	5605325	Identifier	x_next		5605175	1					
ANR	5605326	ElseStatement	else		5605175	0					
ANR	5605327	CompoundStatement		23:15:658:658	5605175	0					
ANR	5605328	ExpressionStatement	"code = end_x_line ( alp , ll , true )"	1690:12:65268:65300	5605175	0	True				
ANR	5605329	AssignmentExpression	"code = end_x_line ( alp , ll , true )"		5605175	0		=			
ANR	5605330	Identifier	code		5605175	0					
ANR	5605331	CallExpression	"end_x_line ( alp , ll , true )"		5605175	1					
ANR	5605332	Callee	end_x_line		5605175	0					
ANR	5605333	Identifier	end_x_line		5605175	0					
ANR	5605334	ArgumentList	alp		5605175	1					
ANR	5605335	Argument	alp		5605175	0					
ANR	5605336	Identifier	alp		5605175	0					
ANR	5605337	Argument	ll		5605175	1					
ANR	5605338	Identifier	ll		5605175	0					
ANR	5605339	Argument	true		5605175	2					
ANR	5605340	Identifier	true		5605175	0					
ANR	5605341	IfStatement	if ( code < 0 )		5605175	1					
ANR	5605342	Condition	code < 0	1691:16:65318:65325	5605175	0	True				
ANR	5605343	RelationalExpression	code < 0		5605175	0		<			
ANR	5605344	Identifier	code		5605175	0					
ANR	5605345	PrimaryExpression	0		5605175	1					
ANR	5605346	ReturnStatement	return code ;	1692:16:65344:65355	5605175	1	True				
ANR	5605347	Identifier	code		5605175	0					
ANR	5605348	IfStatement	if ( ! code )		5605175	2					
ANR	5605349	Condition	! code	1693:16:65373:65377	5605175	0	True				
ANR	5605350	UnaryOperationExpression	! code		5605175	0					
ANR	5605351	UnaryOperator	!		5605175	0					
ANR	5605352	Identifier	code		5605175	1					
ANR	5605353	CompoundStatement		27:23:784:784	5605175	1					
ANR	5605354	IfStatement	if ( alp -> x_next <= x )		5605175	0					
ANR	5605355	Condition	alp -> x_next <= x	1694:20:65402:65417	5605175	0	True				
ANR	5605356	RelationalExpression	alp -> x_next <= x		5605175	0		<=			
ANR	5605357	PtrMemberAccess	alp -> x_next		5605175	0					
ANR	5605358	Identifier	alp		5605175	0					
ANR	5605359	Identifier	x_next		5605175	1					
ANR	5605360	Identifier	x		5605175	1					
ANR	5605361	ExpressionStatement	resort_x_line ( alp )	1695:20:65440:65458	5605175	1	True				
ANR	5605362	CallExpression	resort_x_line ( alp )		5605175	0					
ANR	5605363	Callee	resort_x_line		5605175	0					
ANR	5605364	Identifier	resort_x_line		5605175	0					
ANR	5605365	ArgumentList	alp		5605175	1					
ANR	5605366	Argument	alp		5605175	0					
ANR	5605367	Identifier	alp		5605175	0					
ANR	5605368	ElseStatement	else		5605175	0					
ANR	5605369	ExpressionStatement	x = alp -> x_next	1697:20:65501:65516	5605175	0	True				
ANR	5605370	AssignmentExpression	x = alp -> x_next		5605175	0		=			
ANR	5605371	Identifier	x		5605175	0					
ANR	5605372	PtrMemberAccess	alp -> x_next		5605175	1					
ANR	5605373	Identifier	alp		5605175	0					
ANR	5605374	Identifier	x_next		5605175	1					
ANR	5605375	ReturnStatement	return 0 ;	1701:4:65552:65560	5605175	4	True				
ANR	5605376	PrimaryExpression	0		5605175	0					
ANR	5605377	ReturnType	static inline int		5605175	1					
ANR	5605378	Identifier	move_al_by_y		5605175	2					
ANR	5605379	ParameterList	"line_list * ll , fixed y1"		5605175	3					
ANR	5605380	Parameter	line_list * ll	1666:13:64570:64582	5605175	0	True				
ANR	5605381	ParameterType	line_list *		5605175	0					
ANR	5605382	Identifier	ll		5605175	1					
ANR	5605383	Parameter	fixed y1	1666:28:64585:64592	5605175	1	True				
ANR	5605384	ParameterType	fixed		5605175	0					
ANR	5605385	Identifier	y1		5605175	1					
ANR	5605386	CFGEntryNode	ENTRY		5605175		True				
ANR	5605387	CFGExitNode	EXIT		5605175		True				
ANR	5605388	Symbol	ll		5605175						
ANR	5605389	Symbol	code		5605175						
ANR	5605390	Symbol	alp		5605175						
ANR	5605391	Symbol	* ll		5605175						
ANR	5605392	Symbol	alp -> end		5605175						
ANR	5605393	Symbol	end_x_line		5605175						
ANR	5605394	Symbol	alp -> x_current		5605175						
ANR	5605395	Symbol	false		5605175						
ANR	5605396	Symbol	notend		5605175						
ANR	5605397	Symbol	min_fixed		5605175						
ANR	5605398	Symbol	* alp		5605175						
ANR	5605399	Symbol	alp -> x_next		5605175						
ANR	5605400	Symbol	ll -> x_list		5605175						
ANR	5605401	Symbol	alp -> start . y		5605175						
ANR	5605402	Symbol	nlp		5605175						
ANR	5605403	Symbol	alp -> next		5605175						
ANR	5605404	Symbol	alp -> start . x		5605175						
ANR	5605405	Symbol	alp -> more_flattened		5605175						
ANR	5605406	Symbol	alp -> end . y		5605175						
ANR	5605407	Symbol	y1		5605175						
ANR	5605408	Symbol	x		5605175						
ANR	5605409	Symbol	true		5605175						
ANR	5605410	Symbol	alp -> start		5605175						
ANR	5605411	Symbol	step_al		5605175						
ANR	5605412	Function	process_h_segments	1705:0:65609:65986							
ANR	5605413	FunctionDef	"process_h_segments (line_list * ll , fixed y)"		5605412	0					
ANR	5605414	CompoundStatement		1707:0:65670:65986	5605412	0					
ANR	5605415	IdentifierDeclStatement	"active_line * alp , * nlp ;"	1708:4:65676:65698	5605412	0	True				
ANR	5605416	IdentifierDecl	* alp		5605412	0					
ANR	5605417	IdentifierDeclType	active_line *		5605412	0					
ANR	5605418	Identifier	alp		5605412	1					
ANR	5605419	IdentifierDecl	* nlp		5605412	1					
ANR	5605420	IdentifierDeclType	active_line *		5605412	0					
ANR	5605421	Identifier	nlp		5605412	1					
ANR	5605422	IdentifierDeclStatement	int inserted = 0 ;	1709:4:65704:65720	5605412	1	True				
ANR	5605423	IdentifierDecl	inserted = 0		5605412	0					
ANR	5605424	IdentifierDeclType	int		5605412	0					
ANR	5605425	Identifier	inserted		5605412	1					
ANR	5605426	AssignmentExpression	inserted = 0		5605412	2		=			
ANR	5605427	Identifier	inserted		5605412	0					
ANR	5605428	PrimaryExpression	0		5605412	1					
ANR	5605429	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = nlp )		5605412	2					
ANR	5605430	ForInit	alp = ll -> x_list ;	1711:9:65732:65748	5605412	0	True				
ANR	5605431	AssignmentExpression	alp = ll -> x_list		5605412	0		=			
ANR	5605432	Identifier	alp		5605412	0					
ANR	5605433	PtrMemberAccess	ll -> x_list		5605412	1					
ANR	5605434	Identifier	ll		5605412	0					
ANR	5605435	Identifier	x_list		5605412	1					
ANR	5605436	Condition	alp != 0	1711:27:65750:65757	5605412	1	True				
ANR	5605437	EqualityExpression	alp != 0		5605412	0		!=			
ANR	5605438	Identifier	alp		5605412	0					
ANR	5605439	PrimaryExpression	0		5605412	1					
ANR	5605440	AssignmentExpression	alp = nlp	1711:37:65760:65768	5605412	2	True	=			
ANR	5605441	Identifier	alp		5605412	0					
ANR	5605442	Identifier	nlp		5605412	1					
ANR	5605443	CompoundStatement		5:48:100:100	5605412	3					
ANR	5605444	ExpressionStatement	nlp = alp -> next	1712:8:65781:65796	5605412	0	True				
ANR	5605445	AssignmentExpression	nlp = alp -> next		5605412	0		=			
ANR	5605446	Identifier	nlp		5605412	0					
ANR	5605447	PtrMemberAccess	alp -> next		5605412	1					
ANR	5605448	Identifier	alp		5605412	0					
ANR	5605449	Identifier	next		5605412	1					
ANR	5605450	IfStatement	if ( alp -> start . y == y && alp -> end . y == y )		5605412	1					
ANR	5605451	Condition	alp -> start . y == y && alp -> end . y == y	1713:12:65810:65845	5605412	0	True				
ANR	5605452	AndExpression	alp -> start . y == y && alp -> end . y == y		5605412	0		&&			
ANR	5605453	EqualityExpression	alp -> start . y == y		5605412	0		==			
ANR	5605454	MemberAccess	alp -> start . y		5605412	0					
ANR	5605455	PtrMemberAccess	alp -> start		5605412	0					
ANR	5605456	Identifier	alp		5605412	0					
ANR	5605457	Identifier	start		5605412	1					
ANR	5605458	Identifier	y		5605412	1					
ANR	5605459	Identifier	y		5605412	1					
ANR	5605460	EqualityExpression	alp -> end . y == y		5605412	1		==			
ANR	5605461	MemberAccess	alp -> end . y		5605412	0					
ANR	5605462	PtrMemberAccess	alp -> end		5605412	0					
ANR	5605463	Identifier	alp		5605412	0					
ANR	5605464	Identifier	end		5605412	1					
ANR	5605465	Identifier	y		5605412	1					
ANR	5605466	Identifier	y		5605412	1					
ANR	5605467	CompoundStatement		7:50:177:177	5605412	1					
ANR	5605468	ExpressionStatement	inserted = 1	1714:12:65862:65874	5605412	0	True				
ANR	5605469	AssignmentExpression	inserted = 1		5605412	0		=			
ANR	5605470	Identifier	inserted		5605412	0					
ANR	5605471	PrimaryExpression	1		5605412	1					
ANR	5605472	ReturnStatement	return inserted ;	1717:4:65896:65911	5605412	3	True				
ANR	5605473	Identifier	inserted		5605412	0					
ANR	5605474	ReturnType	static inline int		5605412	1					
ANR	5605475	Identifier	process_h_segments		5605412	2					
ANR	5605476	ParameterList	"line_list * ll , fixed y"		5605412	3					
ANR	5605477	Parameter	line_list * ll	1706:19:65646:65658	5605412	0	True				
ANR	5605478	ParameterType	line_list *		5605412	0					
ANR	5605479	Identifier	ll		5605412	1					
ANR	5605480	Parameter	fixed y	1706:34:65661:65667	5605412	1	True				
ANR	5605481	ParameterType	fixed		5605412	0					
ANR	5605482	Identifier	y		5605412	1					
ANR	5605483	CFGEntryNode	ENTRY		5605412		True				
ANR	5605484	CFGExitNode	EXIT		5605412		True				
ANR	5605485	Symbol	ll		5605412						
ANR	5605486	Symbol	alp		5605412						
ANR	5605487	Symbol	* ll		5605412						
ANR	5605488	Symbol	alp -> end		5605412						
ANR	5605489	Symbol	* alp		5605412						
ANR	5605490	Symbol	ll -> x_list		5605412						
ANR	5605491	Symbol	alp -> start . y		5605412						
ANR	5605492	Symbol	nlp		5605412						
ANR	5605493	Symbol	inserted		5605412						
ANR	5605494	Symbol	alp -> next		5605412						
ANR	5605495	Symbol	alp -> end . y		5605412						
ANR	5605496	Symbol	y		5605412						
ANR	5605497	Symbol	alp -> start		5605412						
ANR	5605498	Function	loop_fill_trap_np	1721:0:65989:66377							
ANR	5605499	FunctionDef	"loop_fill_trap_np (const line_list * ll , const gs_fixed_edge * le , const gs_fixed_edge * re , fixed y , fixed y1)"		5605498	0					
ANR	5605500	CompoundStatement		1723:0:66115:66377	5605498	0					
ANR	5605501	Statement	const	1724:4:66121:66125	5605498	0	True				
ANR	5605502	Statement	fill_options	1724:10:66127:66138	5605498	1	True				
ANR	5605503	Statement	*	1724:23:66140:66140	5605498	2	True				
ANR	5605504	Statement	const	1724:25:66142:66146	5605498	3	True				
ANR	5605505	ExpressionStatement	fo = ll -> fo	1724:31:66148:66159	5605498	4	True				
ANR	5605506	AssignmentExpression	fo = ll -> fo		5605498	0		=			
ANR	5605507	Identifier	fo		5605498	0					
ANR	5605508	PtrMemberAccess	ll -> fo		5605498	1					
ANR	5605509	Identifier	ll		5605498	0					
ANR	5605510	Identifier	fo		5605498	1					
ANR	5605511	IdentifierDeclStatement	"fixed ybot = max ( y , fo -> pbox -> p . y ) ;"	1725:4:66165:66199	5605498	5	True				
ANR	5605512	IdentifierDecl	"ybot = max ( y , fo -> pbox -> p . y )"		5605498	0					
ANR	5605513	IdentifierDeclType	fixed		5605498	0					
ANR	5605514	Identifier	ybot		5605498	1					
ANR	5605515	AssignmentExpression	"ybot = max ( y , fo -> pbox -> p . y )"		5605498	2		=			
ANR	5605516	Identifier	ybot		5605498	0					
ANR	5605517	CallExpression	"max ( y , fo -> pbox -> p . y )"		5605498	1					
ANR	5605518	Callee	max		5605498	0					
ANR	5605519	Identifier	max		5605498	0					
ANR	5605520	ArgumentList	y		5605498	1					
ANR	5605521	Argument	y		5605498	0					
ANR	5605522	Identifier	y		5605498	0					
ANR	5605523	Argument	fo -> pbox -> p . y		5605498	1					
ANR	5605524	MemberAccess	fo -> pbox -> p . y		5605498	0					
ANR	5605525	PtrMemberAccess	fo -> pbox -> p		5605498	0					
ANR	5605526	PtrMemberAccess	fo -> pbox		5605498	0					
ANR	5605527	Identifier	fo		5605498	0					
ANR	5605528	Identifier	pbox		5605498	1					
ANR	5605529	Identifier	p		5605498	1					
ANR	5605530	Identifier	y		5605498	1					
ANR	5605531	IdentifierDeclStatement	"fixed ytop = min ( y1 , fo -> pbox -> q . y ) ;"	1726:4:66205:66240	5605498	6	True				
ANR	5605532	IdentifierDecl	"ytop = min ( y1 , fo -> pbox -> q . y )"		5605498	0					
ANR	5605533	IdentifierDeclType	fixed		5605498	0					
ANR	5605534	Identifier	ytop		5605498	1					
ANR	5605535	AssignmentExpression	"ytop = min ( y1 , fo -> pbox -> q . y )"		5605498	2		=			
ANR	5605536	Identifier	ytop		5605498	0					
ANR	5605537	CallExpression	"min ( y1 , fo -> pbox -> q . y )"		5605498	1					
ANR	5605538	Callee	min		5605498	0					
ANR	5605539	Identifier	min		5605498	0					
ANR	5605540	ArgumentList	y1		5605498	1					
ANR	5605541	Argument	y1		5605498	0					
ANR	5605542	Identifier	y1		5605498	0					
ANR	5605543	Argument	fo -> pbox -> q . y		5605498	1					
ANR	5605544	MemberAccess	fo -> pbox -> q . y		5605498	0					
ANR	5605545	PtrMemberAccess	fo -> pbox -> q		5605498	0					
ANR	5605546	PtrMemberAccess	fo -> pbox		5605498	0					
ANR	5605547	Identifier	fo		5605498	0					
ANR	5605548	Identifier	pbox		5605498	1					
ANR	5605549	Identifier	q		5605498	1					
ANR	5605550	Identifier	y		5605498	1					
ANR	5605551	IfStatement	if ( ybot >= ytop )		5605498	7					
ANR	5605552	Condition	ybot >= ytop	1728:8:66251:66262	5605498	0	True				
ANR	5605553	RelationalExpression	ybot >= ytop		5605498	0		>=			
ANR	5605554	Identifier	ybot		5605498	0					
ANR	5605555	Identifier	ytop		5605498	1					
ANR	5605556	ReturnStatement	return 0 ;	1729:8:66273:66281	5605498	1	True				
ANR	5605557	PrimaryExpression	0		5605498	0					
ANR	5605558	ReturnStatement	"return ( * fo -> fill_trap ) ( fo -> dev , le , re , ybot , ytop , false , fo -> pdevc , fo -> lop ) ;"	1730:4:66287:66375	5605498	8	True				
ANR	5605559	CallExpression	"( * fo -> fill_trap ) ( fo -> dev , le , re , ybot , ytop , false , fo -> pdevc , fo -> lop )"		5605498	0					
ANR	5605560	Callee	* fo -> fill_trap		5605498	0					
ANR	5605561	UnaryOperationExpression	* fo -> fill_trap		5605498	0					
ANR	5605562	UnaryOperator	*		5605498	0					
ANR	5605563	PtrMemberAccess	fo -> fill_trap		5605498	1					
ANR	5605564	Identifier	fo		5605498	0					
ANR	5605565	Identifier	fill_trap		5605498	1					
ANR	5605566	ArgumentList	fo -> dev		5605498	1					
ANR	5605567	Argument	fo -> dev		5605498	0					
ANR	5605568	PtrMemberAccess	fo -> dev		5605498	0					
ANR	5605569	Identifier	fo		5605498	0					
ANR	5605570	Identifier	dev		5605498	1					
ANR	5605571	Argument	le		5605498	1					
ANR	5605572	Identifier	le		5605498	0					
ANR	5605573	Argument	re		5605498	2					
ANR	5605574	Identifier	re		5605498	0					
ANR	5605575	Argument	ybot		5605498	3					
ANR	5605576	Identifier	ybot		5605498	0					
ANR	5605577	Argument	ytop		5605498	4					
ANR	5605578	Identifier	ytop		5605498	0					
ANR	5605579	Argument	false		5605498	5					
ANR	5605580	Identifier	false		5605498	0					
ANR	5605581	Argument	fo -> pdevc		5605498	6					
ANR	5605582	PtrMemberAccess	fo -> pdevc		5605498	0					
ANR	5605583	Identifier	fo		5605498	0					
ANR	5605584	Identifier	pdevc		5605498	1					
ANR	5605585	Argument	fo -> lop		5605498	7					
ANR	5605586	PtrMemberAccess	fo -> lop		5605498	0					
ANR	5605587	Identifier	fo		5605498	0					
ANR	5605588	Identifier	lop		5605498	1					
ANR	5605589	ReturnType	static inline int		5605498	1					
ANR	5605590	Identifier	loop_fill_trap_np		5605498	2					
ANR	5605591	ParameterList	"const line_list * ll , const gs_fixed_edge * le , const gs_fixed_edge * re , fixed y , fixed y1"		5605498	3					
ANR	5605592	Parameter	const line_list * ll	1722:18:66025:66043	5605498	0	True				
ANR	5605593	ParameterType	const line_list *		5605498	0					
ANR	5605594	Identifier	ll		5605498	1					
ANR	5605595	Parameter	const gs_fixed_edge * le	1722:39:66046:66068	5605498	1	True				
ANR	5605596	ParameterType	const gs_fixed_edge *		5605498	0					
ANR	5605597	Identifier	le		5605498	1					
ANR	5605598	Parameter	const gs_fixed_edge * re	1722:64:66071:66093	5605498	2	True				
ANR	5605599	ParameterType	const gs_fixed_edge *		5605498	0					
ANR	5605600	Identifier	re		5605498	1					
ANR	5605601	Parameter	fixed y	1722:89:66096:66102	5605498	3	True				
ANR	5605602	ParameterType	fixed		5605498	0					
ANR	5605603	Identifier	y		5605498	1					
ANR	5605604	Parameter	fixed y1	1722:98:66105:66112	5605498	4	True				
ANR	5605605	ParameterType	fixed		5605498	0					
ANR	5605606	Identifier	y1		5605498	1					
ANR	5605607	CFGEntryNode	ENTRY		5605498		True				
ANR	5605608	CFGExitNode	EXIT		5605498		True				
ANR	5605609	Symbol	ll		5605498						
ANR	5605610	Symbol	fo -> pbox		5605498						
ANR	5605611	Symbol	ytop		5605498						
ANR	5605612	Symbol	* fo -> pbox		5605498						
ANR	5605613	Symbol	fo -> pbox -> q . y		5605498						
ANR	5605614	Symbol	fo		5605498						
ANR	5605615	Symbol	fo -> pbox -> p . y		5605498						
ANR	5605616	Symbol	min		5605498						
ANR	5605617	Symbol	ybot		5605498						
ANR	5605618	Symbol	y1		5605498						
ANR	5605619	Symbol	* fo -> fill_trap		5605498						
ANR	5605620	Symbol	* ll		5605498						
ANR	5605621	Symbol	max		5605498						
ANR	5605622	Symbol	fo -> lop		5605498						
ANR	5605623	Symbol	false		5605498						
ANR	5605624	Symbol	ll -> fo		5605498						
ANR	5605625	Symbol	* fo		5605498						
ANR	5605626	Symbol	fo -> dev		5605498						
ANR	5605627	Symbol	fo -> fill_trap		5605498						
ANR	5605628	Symbol	re		5605498						
ANR	5605629	Symbol	fo -> pbox -> p		5605498						
ANR	5605630	Symbol	fo -> pdevc		5605498						
ANR	5605631	Symbol	* * fo		5605498						
ANR	5605632	Symbol	fo -> pbox -> q		5605498						
ANR	5605633	Symbol	le		5605498						
ANR	5605634	Symbol	y		5605498						
ANR	5605635	Function	intersect	1752:0:67025:69480							
ANR	5605636	FunctionDef	"intersect (active_line * endp , active_line * alp , fixed y , fixed y1 , fixed * p_y_new)"		5605635	0					
ANR	5605637	CompoundStatement		1754:0:67119:69480	5605635	0					
ANR	5605638	IdentifierDeclStatement	"fixed y_new , dy ;"	1755:4:67125:67140	5605635	0	True				
ANR	5605639	IdentifierDecl	y_new		5605635	0					
ANR	5605640	IdentifierDeclType	fixed		5605635	0					
ANR	5605641	Identifier	y_new		5605635	1					
ANR	5605642	IdentifierDecl	dy		5605635	1					
ANR	5605643	IdentifierDeclType	fixed		5605635	0					
ANR	5605644	Identifier	dy		5605635	1					
ANR	5605645	IdentifierDeclStatement	fixed dx_old = alp -> x_current - endp -> x_current ;	1756:4:67146:67193	5605635	1	True				
ANR	5605646	IdentifierDecl	dx_old = alp -> x_current - endp -> x_current		5605635	0					
ANR	5605647	IdentifierDeclType	fixed		5605635	0					
ANR	5605648	Identifier	dx_old		5605635	1					
ANR	5605649	AssignmentExpression	dx_old = alp -> x_current - endp -> x_current		5605635	2		=			
ANR	5605650	Identifier	dx_old		5605635	0					
ANR	5605651	AdditiveExpression	alp -> x_current - endp -> x_current		5605635	1		-			
ANR	5605652	PtrMemberAccess	alp -> x_current		5605635	0					
ANR	5605653	Identifier	alp		5605635	0					
ANR	5605654	Identifier	x_current		5605635	1					
ANR	5605655	PtrMemberAccess	endp -> x_current		5605635	1					
ANR	5605656	Identifier	endp		5605635	0					
ANR	5605657	Identifier	x_current		5605635	1					
ANR	5605658	IdentifierDeclStatement	fixed dx_den = dx_old + endp -> x_next - alp -> x_next ;	1757:4:67199:67249	5605635	2	True				
ANR	5605659	IdentifierDecl	dx_den = dx_old + endp -> x_next - alp -> x_next		5605635	0					
ANR	5605660	IdentifierDeclType	fixed		5605635	0					
ANR	5605661	Identifier	dx_den		5605635	1					
ANR	5605662	AssignmentExpression	dx_den = dx_old + endp -> x_next - alp -> x_next		5605635	2		=			
ANR	5605663	Identifier	dx_den		5605635	0					
ANR	5605664	AdditiveExpression	dx_old + endp -> x_next - alp -> x_next		5605635	1		+			
ANR	5605665	Identifier	dx_old		5605635	0					
ANR	5605666	AdditiveExpression	endp -> x_next - alp -> x_next		5605635	1		-			
ANR	5605667	PtrMemberAccess	endp -> x_next		5605635	0					
ANR	5605668	Identifier	endp		5605635	0					
ANR	5605669	Identifier	x_next		5605635	1					
ANR	5605670	PtrMemberAccess	alp -> x_next		5605635	1					
ANR	5605671	Identifier	alp		5605635	0					
ANR	5605672	Identifier	x_next		5605635	1					
ANR	5605673	IfStatement	if ( dx_den <= dx_old || dx_den == 0 )		5605635	3					
ANR	5605674	Condition	dx_den <= dx_old || dx_den == 0	1759:8:67260:67290	5605635	0	True				
ANR	5605675	OrExpression	dx_den <= dx_old || dx_den == 0		5605635	0		||			
ANR	5605676	RelationalExpression	dx_den <= dx_old		5605635	0		<=			
ANR	5605677	Identifier	dx_den		5605635	0					
ANR	5605678	Identifier	dx_old		5605635	1					
ANR	5605679	EqualityExpression	dx_den == 0		5605635	1		==			
ANR	5605680	Identifier	dx_den		5605635	0					
ANR	5605681	PrimaryExpression	0		5605635	1					
ANR	5605682	ReturnStatement	return false ;	1760:8:67301:67313	5605635	1	True				
ANR	5605683	Identifier	false		5605635	0					
ANR	5605684	ExpressionStatement	dy = y1 - y	1761:4:67354:67365	5605635	4	True				
ANR	5605685	AssignmentExpression	dy = y1 - y		5605635	0		=			
ANR	5605686	Identifier	dy		5605635	0					
ANR	5605687	AdditiveExpression	y1 - y		5605635	1		-			
ANR	5605688	Identifier	y1		5605635	0					
ANR	5605689	Identifier	y		5605635	1					
ANR	5605690	ExpressionStatement	"if_debug3 ( 'F' , ""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"" , fixed2float ( dy ) , fixed2float ( dx_old ) , fixed2float ( dx_den - dx_old ) )"	1762:4:67371:67524	5605635	5	True				
ANR	5605691	CallExpression	"if_debug3 ( 'F' , ""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"" , fixed2float ( dy ) , fixed2float ( dx_old ) , fixed2float ( dx_den - dx_old ) )"		5605635	0					
ANR	5605692	Callee	if_debug3		5605635	0					
ANR	5605693	Identifier	if_debug3		5605635	0					
ANR	5605694	ArgumentList	'F'		5605635	1					
ANR	5605695	Argument	'F'		5605635	0					
ANR	5605696	PrimaryExpression	'F'		5605635	0					
ANR	5605697	Argument	"""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"""		5605635	1					
ANR	5605698	PrimaryExpression	"""[F]cross: dy=%g, dx_old=%g, dx_new=%g\\n"""		5605635	0					
ANR	5605699	Argument	fixed2float ( dy )		5605635	2					
ANR	5605700	CallExpression	fixed2float ( dy )		5605635	0					
ANR	5605701	Callee	fixed2float		5605635	0					
ANR	5605702	Identifier	fixed2float		5605635	0					
ANR	5605703	ArgumentList	dy		5605635	1					
ANR	5605704	Argument	dy		5605635	0					
ANR	5605705	Identifier	dy		5605635	0					
ANR	5605706	Argument	fixed2float ( dx_old )		5605635	3					
ANR	5605707	CallExpression	fixed2float ( dx_old )		5605635	0					
ANR	5605708	Callee	fixed2float		5605635	0					
ANR	5605709	Identifier	fixed2float		5605635	0					
ANR	5605710	ArgumentList	dx_old		5605635	1					
ANR	5605711	Argument	dx_old		5605635	0					
ANR	5605712	Identifier	dx_old		5605635	0					
ANR	5605713	Argument	fixed2float ( dx_den - dx_old )		5605635	4					
ANR	5605714	CallExpression	fixed2float ( dx_den - dx_old )		5605635	0					
ANR	5605715	Callee	fixed2float		5605635	0					
ANR	5605716	Identifier	fixed2float		5605635	0					
ANR	5605717	ArgumentList	dx_den - dx_old		5605635	1					
ANR	5605718	Argument	dx_den - dx_old		5605635	0					
ANR	5605719	AdditiveExpression	dx_den - dx_old		5605635	0		-			
ANR	5605720	Identifier	dx_den		5605635	0					
ANR	5605721	Identifier	dx_old		5605635	1					
ANR	5605722	ExpressionStatement	"y_new = ( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"	1767:4:67621:67810	5605635	6	True				
ANR	5605723	AssignmentExpression	"y_new = ( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"		5605635	0		=			
ANR	5605724	Identifier	y_new		5605635	0					
ANR	5605725	AdditiveExpression	"( ( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) ) ) + y"		5605635	1		+			
ANR	5605726	ConditionalExpression	"( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) ) ? dy * dx_old / dx_den : ( INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den ) )"		5605635	0					
ANR	5605727	Condition	( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) )		5605635	0					
ANR	5605728	RelationalExpression	( ( ufixed ) ( dy | dx_old ) ) < ( 1L << ( size_of ( fixed ) * 4 - 1 ) )		5605635	0		<			
ANR	5605729	CastExpression	( ufixed ) ( dy | dx_old )		5605635	0					
ANR	5605730	CastTarget	ufixed		5605635	0					
ANR	5605731	InclusiveOrExpression	dy | dx_old		5605635	1		|			
ANR	5605732	Identifier	dy		5605635	0					
ANR	5605733	Identifier	dx_old		5605635	1					
ANR	5605734	ShiftExpression	1L << ( size_of ( fixed ) * 4 - 1 )		5605635	1		<<			
ANR	5605735	PrimaryExpression	1L		5605635	0					
ANR	5605736	AdditiveExpression	size_of ( fixed ) * 4 - 1		5605635	1		-			
ANR	5605737	MultiplicativeExpression	size_of ( fixed ) * 4		5605635	0		*			
ANR	5605738	CallExpression	size_of ( fixed )		5605635	0					
ANR	5605739	Callee	size_of		5605635	0					
ANR	5605740	Identifier	size_of		5605635	0					
ANR	5605741	ArgumentList	fixed		5605635	1					
ANR	5605742	Argument	fixed		5605635	0					
ANR	5605743	Identifier	fixed		5605635	0					
ANR	5605744	PrimaryExpression	4		5605635	1					
ANR	5605745	PrimaryExpression	1		5605635	1					
ANR	5605746	MultiplicativeExpression	dy * dx_old / dx_den		5605635	1		*			
ANR	5605747	Identifier	dy		5605635	0					
ANR	5605748	MultiplicativeExpression	dx_old / dx_den		5605635	1		/			
ANR	5605749	Identifier	dx_old		5605635	0					
ANR	5605750	Identifier	dx_den		5605635	1					
ANR	5605751	Expression	"INCR_EXPR ( mq_cross ) , fixed_mult_quo ( dy , dx_old , dx_den )"		5605635	2					
ANR	5605752	CallExpression	INCR_EXPR ( mq_cross )		5605635	0					
ANR	5605753	Callee	INCR_EXPR		5605635	0					
ANR	5605754	Identifier	INCR_EXPR		5605635	0					
ANR	5605755	ArgumentList	mq_cross		5605635	1					
ANR	5605756	Argument	mq_cross		5605635	0					
ANR	5605757	Identifier	mq_cross		5605635	0					
ANR	5605758	CallExpression	"fixed_mult_quo ( dy , dx_old , dx_den )"		5605635	1					
ANR	5605759	Callee	fixed_mult_quo		5605635	0					
ANR	5605760	Identifier	fixed_mult_quo		5605635	0					
ANR	5605761	ArgumentList	dy		5605635	1					
ANR	5605762	Argument	dy		5605635	0					
ANR	5605763	Identifier	dy		5605635	0					
ANR	5605764	Argument	dx_old		5605635	1					
ANR	5605765	Identifier	dx_old		5605635	0					
ANR	5605766	Argument	dx_den		5605635	2					
ANR	5605767	Identifier	dx_den		5605635	0					
ANR	5605768	Identifier	y		5605635	1					
ANR	5605769	ExpressionStatement	"if_debug3 ( 'F' , ""[F]cross y=%g, y_new=%g, y1=%g\\n"" , fixed2float ( y ) , fixed2float ( y_new ) , fixed2float ( y1 ) )"	1775:4:67955:68086	5605635	7	True				
ANR	5605770	CallExpression	"if_debug3 ( 'F' , ""[F]cross y=%g, y_new=%g, y1=%g\\n"" , fixed2float ( y ) , fixed2float ( y_new ) , fixed2float ( y1 ) )"		5605635	0					
ANR	5605771	Callee	if_debug3		5605635	0					
ANR	5605772	Identifier	if_debug3		5605635	0					
ANR	5605773	ArgumentList	'F'		5605635	1					
ANR	5605774	Argument	'F'		5605635	0					
ANR	5605775	PrimaryExpression	'F'		5605635	0					
ANR	5605776	Argument	"""[F]cross y=%g, y_new=%g, y1=%g\\n"""		5605635	1					
ANR	5605777	PrimaryExpression	"""[F]cross y=%g, y_new=%g, y1=%g\\n"""		5605635	0					
ANR	5605778	Argument	fixed2float ( y )		5605635	2					
ANR	5605779	CallExpression	fixed2float ( y )		5605635	0					
ANR	5605780	Callee	fixed2float		5605635	0					
ANR	5605781	Identifier	fixed2float		5605635	0					
ANR	5605782	ArgumentList	y		5605635	1					
ANR	5605783	Argument	y		5605635	0					
ANR	5605784	Identifier	y		5605635	0					
ANR	5605785	Argument	fixed2float ( y_new )		5605635	3					
ANR	5605786	CallExpression	fixed2float ( y_new )		5605635	0					
ANR	5605787	Callee	fixed2float		5605635	0					
ANR	5605788	Identifier	fixed2float		5605635	0					
ANR	5605789	ArgumentList	y_new		5605635	1					
ANR	5605790	Argument	y_new		5605635	0					
ANR	5605791	Identifier	y_new		5605635	0					
ANR	5605792	Argument	fixed2float ( y1 )		5605635	4					
ANR	5605793	CallExpression	fixed2float ( y1 )		5605635	0					
ANR	5605794	Callee	fixed2float		5605635	0					
ANR	5605795	Identifier	fixed2float		5605635	0					
ANR	5605796	ArgumentList	y1		5605635	1					
ANR	5605797	Argument	y1		5605635	0					
ANR	5605798	Identifier	y1		5605635	0					
ANR	5605799	IfStatement	if ( y_new <= y )		5605635	8					
ANR	5605800	Condition	y_new <= y	1778:8:68096:68105	5605635	0	True				
ANR	5605801	RelationalExpression	y_new <= y		5605635	0		<=			
ANR	5605802	Identifier	y_new		5605635	0					
ANR	5605803	Identifier	y		5605635	1					
ANR	5605804	CompoundStatement		30:8:1104:1150	5605635	1					
ANR	5605805	IdentifierDeclStatement	"fixed ys , xs0 , xs1 , ye , xe0 , xe1 , dy , dx0 , dx1 ;"	1783:8:68224:68270	5605635	0	True				
ANR	5605806	IdentifierDecl	ys		5605635	0					
ANR	5605807	IdentifierDeclType	fixed		5605635	0					
ANR	5605808	Identifier	ys		5605635	1					
ANR	5605809	IdentifierDecl	xs0		5605635	1					
ANR	5605810	IdentifierDeclType	fixed		5605635	0					
ANR	5605811	Identifier	xs0		5605635	1					
ANR	5605812	IdentifierDecl	xs1		5605635	2					
ANR	5605813	IdentifierDeclType	fixed		5605635	0					
ANR	5605814	Identifier	xs1		5605635	1					
ANR	5605815	IdentifierDecl	ye		5605635	3					
ANR	5605816	IdentifierDeclType	fixed		5605635	0					
ANR	5605817	Identifier	ye		5605635	1					
ANR	5605818	IdentifierDecl	xe0		5605635	4					
ANR	5605819	IdentifierDeclType	fixed		5605635	0					
ANR	5605820	Identifier	xe0		5605635	1					
ANR	5605821	IdentifierDecl	xe1		5605635	5					
ANR	5605822	IdentifierDeclType	fixed		5605635	0					
ANR	5605823	Identifier	xe1		5605635	1					
ANR	5605824	IdentifierDecl	dy		5605635	6					
ANR	5605825	IdentifierDeclType	fixed		5605635	0					
ANR	5605826	Identifier	dy		5605635	1					
ANR	5605827	IdentifierDecl	dx0		5605635	7					
ANR	5605828	IdentifierDeclType	fixed		5605635	0					
ANR	5605829	Identifier	dx0		5605635	1					
ANR	5605830	IdentifierDecl	dx1		5605635	8					
ANR	5605831	IdentifierDeclType	fixed		5605635	0					
ANR	5605832	Identifier	dx1		5605635	1					
ANR	5605833	ExpressionStatement	INCR ( cross_slow )	1785:8:68281:68297	5605635	1	True				
ANR	5605834	CallExpression	INCR ( cross_slow )		5605635	0					
ANR	5605835	Callee	INCR		5605635	0					
ANR	5605836	Identifier	INCR		5605635	0					
ANR	5605837	ArgumentList	cross_slow		5605635	1					
ANR	5605838	Argument	cross_slow		5605635	0					
ANR	5605839	Identifier	cross_slow		5605635	0					
ANR	5605840	IfStatement	if ( endp -> start . y < alp -> start . y )		5605635	2					
ANR	5605841	Condition	endp -> start . y < alp -> start . y	1786:12:68311:68338	5605635	0	True				
ANR	5605842	RelationalExpression	endp -> start . y < alp -> start . y		5605635	0		<			
ANR	5605843	MemberAccess	endp -> start . y		5605635	0					
ANR	5605844	PtrMemberAccess	endp -> start		5605635	0					
ANR	5605845	Identifier	endp		5605635	0					
ANR	5605846	Identifier	start		5605635	1					
ANR	5605847	Identifier	y		5605635	1					
ANR	5605848	MemberAccess	alp -> start . y		5605635	1					
ANR	5605849	PtrMemberAccess	alp -> start		5605635	0					
ANR	5605850	Identifier	alp		5605635	0					
ANR	5605851	Identifier	start		5605635	1					
ANR	5605852	Identifier	y		5605635	1					
ANR	5605853	ExpressionStatement	"ys = alp -> start . y , xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"	1787:12:68353:68433	5605635	1	True				
ANR	5605854	Expression	"ys = alp -> start . y , xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"		5605635	0					
ANR	5605855	AssignmentExpression	ys = alp -> start . y		5605635	0		=			
ANR	5605856	Identifier	ys		5605635	0					
ANR	5605857	MemberAccess	alp -> start . y		5605635	1					
ANR	5605858	PtrMemberAccess	alp -> start		5605635	0					
ANR	5605859	Identifier	alp		5605635	0					
ANR	5605860	Identifier	start		5605635	1					
ANR	5605861	Identifier	y		5605635	1					
ANR	5605862	Expression	"xs0 = AL_X_AT_Y ( endp , ys ) , xs1 = alp -> start . x"		5605635	1					
ANR	5605863	AssignmentExpression	"xs0 = AL_X_AT_Y ( endp , ys )"		5605635	0		=			
ANR	5605864	Identifier	xs0		5605635	0					
ANR	5605865	CallExpression	"AL_X_AT_Y ( endp , ys )"		5605635	1					
ANR	5605866	Callee	AL_X_AT_Y		5605635	0					
ANR	5605867	Identifier	AL_X_AT_Y		5605635	0					
ANR	5605868	ArgumentList	endp		5605635	1					
ANR	5605869	Argument	endp		5605635	0					
ANR	5605870	Identifier	endp		5605635	0					
ANR	5605871	Argument	ys		5605635	1					
ANR	5605872	Identifier	ys		5605635	0					
ANR	5605873	AssignmentExpression	xs1 = alp -> start . x		5605635	1		=			
ANR	5605874	Identifier	xs1		5605635	0					
ANR	5605875	MemberAccess	alp -> start . x		5605635	1					
ANR	5605876	PtrMemberAccess	alp -> start		5605635	0					
ANR	5605877	Identifier	alp		5605635	0					
ANR	5605878	Identifier	start		5605635	1					
ANR	5605879	Identifier	x		5605635	1					
ANR	5605880	ElseStatement	else		5605635	0					
ANR	5605881	ExpressionStatement	"ys = endp -> start . y , xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"	1790:12:68460:68541	5605635	0	True				
ANR	5605882	Expression	"ys = endp -> start . y , xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"		5605635	0					
ANR	5605883	AssignmentExpression	ys = endp -> start . y		5605635	0		=			
ANR	5605884	Identifier	ys		5605635	0					
ANR	5605885	MemberAccess	endp -> start . y		5605635	1					
ANR	5605886	PtrMemberAccess	endp -> start		5605635	0					
ANR	5605887	Identifier	endp		5605635	0					
ANR	5605888	Identifier	start		5605635	1					
ANR	5605889	Identifier	y		5605635	1					
ANR	5605890	Expression	"xs0 = endp -> start . x , xs1 = AL_X_AT_Y ( alp , ys )"		5605635	1					
ANR	5605891	AssignmentExpression	xs0 = endp -> start . x		5605635	0		=			
ANR	5605892	Identifier	xs0		5605635	0					
ANR	5605893	MemberAccess	endp -> start . x		5605635	1					
ANR	5605894	PtrMemberAccess	endp -> start		5605635	0					
ANR	5605895	Identifier	endp		5605635	0					
ANR	5605896	Identifier	start		5605635	1					
ANR	5605897	Identifier	x		5605635	1					
ANR	5605898	AssignmentExpression	"xs1 = AL_X_AT_Y ( alp , ys )"		5605635	1		=			
ANR	5605899	Identifier	xs1		5605635	0					
ANR	5605900	CallExpression	"AL_X_AT_Y ( alp , ys )"		5605635	1					
ANR	5605901	Callee	AL_X_AT_Y		5605635	0					
ANR	5605902	Identifier	AL_X_AT_Y		5605635	0					
ANR	5605903	ArgumentList	alp		5605635	1					
ANR	5605904	Argument	alp		5605635	0					
ANR	5605905	Identifier	alp		5605635	0					
ANR	5605906	Argument	ys		5605635	1					
ANR	5605907	Identifier	ys		5605635	0					
ANR	5605908	IfStatement	if ( endp -> end . y > alp -> end . y )		5605635	3					
ANR	5605909	Condition	endp -> end . y > alp -> end . y	1792:12:68555:68578	5605635	0	True				
ANR	5605910	RelationalExpression	endp -> end . y > alp -> end . y		5605635	0		>			
ANR	5605911	MemberAccess	endp -> end . y		5605635	0					
ANR	5605912	PtrMemberAccess	endp -> end		5605635	0					
ANR	5605913	Identifier	endp		5605635	0					
ANR	5605914	Identifier	end		5605635	1					
ANR	5605915	Identifier	y		5605635	1					
ANR	5605916	MemberAccess	alp -> end . y		5605635	1					
ANR	5605917	PtrMemberAccess	alp -> end		5605635	0					
ANR	5605918	Identifier	alp		5605635	0					
ANR	5605919	Identifier	end		5605635	1					
ANR	5605920	Identifier	y		5605635	1					
ANR	5605921	ExpressionStatement	"ye = alp -> end . y , xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"	1793:12:68593:68669	5605635	1	True				
ANR	5605922	Expression	"ye = alp -> end . y , xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"		5605635	0					
ANR	5605923	AssignmentExpression	ye = alp -> end . y		5605635	0		=			
ANR	5605924	Identifier	ye		5605635	0					
ANR	5605925	MemberAccess	alp -> end . y		5605635	1					
ANR	5605926	PtrMemberAccess	alp -> end		5605635	0					
ANR	5605927	Identifier	alp		5605635	0					
ANR	5605928	Identifier	end		5605635	1					
ANR	5605929	Identifier	y		5605635	1					
ANR	5605930	Expression	"xe0 = AL_X_AT_Y ( endp , ye ) , xe1 = alp -> end . x"		5605635	1					
ANR	5605931	AssignmentExpression	"xe0 = AL_X_AT_Y ( endp , ye )"		5605635	0		=			
ANR	5605932	Identifier	xe0		5605635	0					
ANR	5605933	CallExpression	"AL_X_AT_Y ( endp , ye )"		5605635	1					
ANR	5605934	Callee	AL_X_AT_Y		5605635	0					
ANR	5605935	Identifier	AL_X_AT_Y		5605635	0					
ANR	5605936	ArgumentList	endp		5605635	1					
ANR	5605937	Argument	endp		5605635	0					
ANR	5605938	Identifier	endp		5605635	0					
ANR	5605939	Argument	ye		5605635	1					
ANR	5605940	Identifier	ye		5605635	0					
ANR	5605941	AssignmentExpression	xe1 = alp -> end . x		5605635	1		=			
ANR	5605942	Identifier	xe1		5605635	0					
ANR	5605943	MemberAccess	alp -> end . x		5605635	1					
ANR	5605944	PtrMemberAccess	alp -> end		5605635	0					
ANR	5605945	Identifier	alp		5605635	0					
ANR	5605946	Identifier	end		5605635	1					
ANR	5605947	Identifier	x		5605635	1					
ANR	5605948	ElseStatement	else		5605635	0					
ANR	5605949	ExpressionStatement	"ye = endp -> end . y , xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"	1796:12:68696:68773	5605635	0	True				
ANR	5605950	Expression	"ye = endp -> end . y , xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"		5605635	0					
ANR	5605951	AssignmentExpression	ye = endp -> end . y		5605635	0		=			
ANR	5605952	Identifier	ye		5605635	0					
ANR	5605953	MemberAccess	endp -> end . y		5605635	1					
ANR	5605954	PtrMemberAccess	endp -> end		5605635	0					
ANR	5605955	Identifier	endp		5605635	0					
ANR	5605956	Identifier	end		5605635	1					
ANR	5605957	Identifier	y		5605635	1					
ANR	5605958	Expression	"xe0 = endp -> end . x , xe1 = AL_X_AT_Y ( alp , ye )"		5605635	1					
ANR	5605959	AssignmentExpression	xe0 = endp -> end . x		5605635	0		=			
ANR	5605960	Identifier	xe0		5605635	0					
ANR	5605961	MemberAccess	endp -> end . x		5605635	1					
ANR	5605962	PtrMemberAccess	endp -> end		5605635	0					
ANR	5605963	Identifier	endp		5605635	0					
ANR	5605964	Identifier	end		5605635	1					
ANR	5605965	Identifier	x		5605635	1					
ANR	5605966	AssignmentExpression	"xe1 = AL_X_AT_Y ( alp , ye )"		5605635	1		=			
ANR	5605967	Identifier	xe1		5605635	0					
ANR	5605968	CallExpression	"AL_X_AT_Y ( alp , ye )"		5605635	1					
ANR	5605969	Callee	AL_X_AT_Y		5605635	0					
ANR	5605970	Identifier	AL_X_AT_Y		5605635	0					
ANR	5605971	ArgumentList	alp		5605635	1					
ANR	5605972	Argument	alp		5605635	0					
ANR	5605973	Identifier	alp		5605635	0					
ANR	5605974	Argument	ye		5605635	1					
ANR	5605975	Identifier	ye		5605635	0					
ANR	5605976	ExpressionStatement	dy = ye - ys	1798:8:68783:68795	5605635	4	True				
ANR	5605977	AssignmentExpression	dy = ye - ys		5605635	0		=			
ANR	5605978	Identifier	dy		5605635	0					
ANR	5605979	AdditiveExpression	ye - ys		5605635	1		-			
ANR	5605980	Identifier	ye		5605635	0					
ANR	5605981	Identifier	ys		5605635	1					
ANR	5605982	ExpressionStatement	dx0 = xe0 - xs0	1799:8:68805:68820	5605635	5	True				
ANR	5605983	AssignmentExpression	dx0 = xe0 - xs0		5605635	0		=			
ANR	5605984	Identifier	dx0		5605635	0					
ANR	5605985	AdditiveExpression	xe0 - xs0		5605635	1		-			
ANR	5605986	Identifier	xe0		5605635	0					
ANR	5605987	Identifier	xs0		5605635	1					
ANR	5605988	ExpressionStatement	dx1 = xe1 - xs1	1800:8:68830:68845	5605635	6	True				
ANR	5605989	AssignmentExpression	dx1 = xe1 - xs1		5605635	0		=			
ANR	5605990	Identifier	dx1		5605635	0					
ANR	5605991	AdditiveExpression	xe1 - xs1		5605635	1		-			
ANR	5605992	Identifier	xe1		5605635	0					
ANR	5605993	Identifier	xs1		5605635	1					
ANR	5605994	IfStatement	if ( dx0 == dx1 )		5605635	7					
ANR	5605995	Condition	dx0 == dx1	1802:12:68921:68930	5605635	0	True				
ANR	5605996	EqualityExpression	dx0 == dx1		5605635	0		==			
ANR	5605997	Identifier	dx0		5605635	0					
ANR	5605998	Identifier	dx1		5605635	1					
ANR	5605999	CompoundStatement		49:24:1813:1813	5605635	1					
ANR	5606000	ExpressionStatement	y_new = y1	1804:12:69008:69018	5605635	0	True				
ANR	5606001	AssignmentExpression	y_new = y1		5605635	0		=			
ANR	5606002	Identifier	y_new		5605635	0					
ANR	5606003	Identifier	y1		5605635	1					
ANR	5606004	ElseStatement	else		5605635	0					
ANR	5606005	CompoundStatement		53:12:1929:1977	5605635	0					
ANR	5606006	IdentifierDeclStatement	double cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 ) ;	1806:12:69049:69097	5605635	0	True				
ANR	5606007	IdentifierDecl	cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		5605635	0					
ANR	5606008	IdentifierDeclType	double		5605635	0					
ANR	5606009	Identifier	cross		5605635	1					
ANR	5606010	AssignmentExpression	cross = ( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		5605635	2		=			
ANR	5606011	Identifier	cross		5605635	0					
ANR	5606012	MultiplicativeExpression	( double ) ( xs0 - xs1 ) / ( dx1 - dx0 )		5605635	1		/			
ANR	5606013	CastExpression	( double ) ( xs0 - xs1 )		5605635	0					
ANR	5606014	CastTarget	double		5605635	0					
ANR	5606015	AdditiveExpression	xs0 - xs1		5605635	1		-			
ANR	5606016	Identifier	xs0		5605635	0					
ANR	5606017	Identifier	xs1		5605635	1					
ANR	5606018	AdditiveExpression	dx1 - dx0		5605635	1		-			
ANR	5606019	Identifier	dx1		5605635	0					
ANR	5606020	Identifier	dx0		5605635	1					
ANR	5606021	ExpressionStatement	y_new = ( fixed ) ( ys + cross * dy )	1808:12:69112:69144	5605635	1	True				
ANR	5606022	AssignmentExpression	y_new = ( fixed ) ( ys + cross * dy )		5605635	0		=			
ANR	5606023	Identifier	y_new		5605635	0					
ANR	5606024	CastExpression	( fixed ) ( ys + cross * dy )		5605635	1					
ANR	5606025	CastTarget	fixed		5605635	0					
ANR	5606026	AdditiveExpression	ys + cross * dy		5605635	1		+			
ANR	5606027	Identifier	ys		5605635	0					
ANR	5606028	MultiplicativeExpression	cross * dy		5605635	1		*			
ANR	5606029	Identifier	cross		5605635	0					
ANR	5606030	Identifier	dy		5605635	1					
ANR	5606031	IfStatement	if ( y_new <= y )		5605635	2					
ANR	5606032	Condition	y_new <= y	1809:16:69162:69171	5605635	0	True				
ANR	5606033	RelationalExpression	y_new <= y		5605635	0		<=			
ANR	5606034	Identifier	y_new		5605635	0					
ANR	5606035	Identifier	y		5605635	1					
ANR	5606036	CompoundStatement		56:28:2054:2054	5605635	1					
ANR	5606037	ExpressionStatement	INCR ( cross_low )	1814:16:69351:69366	5605635	0	True				
ANR	5606038	CallExpression	INCR ( cross_low )		5605635	0					
ANR	5606039	Callee	INCR		5605635	0					
ANR	5606040	Identifier	INCR		5605635	0					
ANR	5606041	ArgumentList	cross_low		5605635	1					
ANR	5606042	Argument	cross_low		5605635	0					
ANR	5606043	Identifier	cross_low		5605635	0					
ANR	5606044	ExpressionStatement	y_new = y + fixed_epsilon	1815:16:69384:69409	5605635	1	True				
ANR	5606045	AssignmentExpression	y_new = y + fixed_epsilon		5605635	0		=			
ANR	5606046	Identifier	y_new		5605635	0					
ANR	5606047	AdditiveExpression	y + fixed_epsilon		5605635	1		+			
ANR	5606048	Identifier	y		5605635	0					
ANR	5606049	Identifier	fixed_epsilon		5605635	1					
ANR	5606050	ExpressionStatement	* p_y_new = y_new	1819:4:69445:69461	5605635	9	True				
ANR	5606051	AssignmentExpression	* p_y_new = y_new		5605635	0		=			
ANR	5606052	UnaryOperationExpression	* p_y_new		5605635	0					
ANR	5606053	UnaryOperator	*		5605635	0					
ANR	5606054	Identifier	p_y_new		5605635	1					
ANR	5606055	Identifier	y_new		5605635	1					
ANR	5606056	ReturnStatement	return true ;	1820:4:69467:69478	5605635	10	True				
ANR	5606057	Identifier	true		5605635	0					
ANR	5606058	ReturnType	static bool		5605635	1					
ANR	5606059	Identifier	intersect		5605635	2					
ANR	5606060	ParameterList	"active_line * endp , active_line * alp , fixed y , fixed y1 , fixed * p_y_new"		5605635	3					
ANR	5606061	Parameter	active_line * endp	1753:10:67047:67063	5605635	0	True				
ANR	5606062	ParameterType	active_line *		5605635	0					
ANR	5606063	Identifier	endp		5605635	1					
ANR	5606064	Parameter	active_line * alp	1753:29:67066:67081	5605635	1	True				
ANR	5606065	ParameterType	active_line *		5605635	0					
ANR	5606066	Identifier	alp		5605635	1					
ANR	5606067	Parameter	fixed y	1753:47:67084:67090	5605635	2	True				
ANR	5606068	ParameterType	fixed		5605635	0					
ANR	5606069	Identifier	y		5605635	1					
ANR	5606070	Parameter	fixed y1	1753:56:67093:67100	5605635	3	True				
ANR	5606071	ParameterType	fixed		5605635	0					
ANR	5606072	Identifier	y1		5605635	1					
ANR	5606073	Parameter	fixed * p_y_new	1753:66:67103:67116	5605635	4	True				
ANR	5606074	ParameterType	fixed *		5605635	0					
ANR	5606075	Identifier	p_y_new		5605635	1					
ANR	5606076	CFGEntryNode	ENTRY		5605635		True				
ANR	5606077	CFGExitNode	EXIT		5605635		True				
ANR	5606078	Symbol	fixed_mult_quo		5605635						
ANR	5606079	Symbol	alp -> end		5605635						
ANR	5606080	Symbol	ye		5605635						
ANR	5606081	Symbol	dx_den		5605635						
ANR	5606082	Symbol	y_new		5605635						
ANR	5606083	Symbol	dx_old		5605635						
ANR	5606084	Symbol	xs0		5605635						
ANR	5606085	Symbol	dy		5605635						
ANR	5606086	Symbol	xs1		5605635						
ANR	5606087	Symbol	ys		5605635						
ANR	5606088	Symbol	cross_low		5605635						
ANR	5606089	Symbol	dx1		5605635						
ANR	5606090	Symbol	fixed_epsilon		5605635						
ANR	5606091	Symbol	dx0		5605635						
ANR	5606092	Symbol	mq_cross		5605635						
ANR	5606093	Symbol	alp		5605635						
ANR	5606094	Symbol	endp -> x_current		5605635						
ANR	5606095	Symbol	INCR_EXPR		5605635						
ANR	5606096	Symbol	alp -> x_next		5605635						
ANR	5606097	Symbol	alp -> start . y		5605635						
ANR	5606098	Symbol	alp -> start . x		5605635						
ANR	5606099	Symbol	* endp		5605635						
ANR	5606100	Symbol	true		5605635						
ANR	5606101	Symbol	alp -> start		5605635						
ANR	5606102	Symbol	fixed		5605635						
ANR	5606103	Symbol	cross_slow		5605635						
ANR	5606104	Symbol	AL_X_AT_Y		5605635						
ANR	5606105	Symbol	alp -> x_current		5605635						
ANR	5606106	Symbol	endp -> x_next		5605635						
ANR	5606107	Symbol	endp -> end . y		5605635						
ANR	5606108	Symbol	endp -> end . x		5605635						
ANR	5606109	Symbol	size_of		5605635						
ANR	5606110	Symbol	y1		5605635						
ANR	5606111	Symbol	* p_y_new		5605635						
ANR	5606112	Symbol	endp		5605635						
ANR	5606113	Symbol	xe0		5605635						
ANR	5606114	Symbol	fixed2float		5605635						
ANR	5606115	Symbol	endp -> end		5605635						
ANR	5606116	Symbol	xe1		5605635						
ANR	5606117	Symbol	p_y_new		5605635						
ANR	5606118	Symbol	false		5605635						
ANR	5606119	Symbol	cross		5605635						
ANR	5606120	Symbol	* alp		5605635						
ANR	5606121	Symbol	alp -> end . y		5605635						
ANR	5606122	Symbol	endp -> start		5605635						
ANR	5606123	Symbol	alp -> end . x		5605635						
ANR	5606124	Symbol	y		5605635						
ANR	5606125	Symbol	endp -> start . x		5605635						
ANR	5606126	Symbol	endp -> start . y		5605635						
ANR	5606127	Function	set_x_next	1823:0:69483:69645							
ANR	5606128	FunctionDef	"set_x_next (active_line * endp , active_line * alp , fixed x)"		5606127	0					
ANR	5606129	CompoundStatement		1825:0:69559:69645	5606127	0					
ANR	5606130	WhileStatement	while ( endp != alp )		5606127	0					
ANR	5606131	Condition	endp != alp	1826:10:69571:69581	5606127	0	True				
ANR	5606132	EqualityExpression	endp != alp		5606127	0		!=			
ANR	5606133	Identifier	endp		5606127	0					
ANR	5606134	Identifier	alp		5606127	1					
ANR	5606135	CompoundStatement		2:23:24:24	5606127	1					
ANR	5606136	ExpressionStatement	endp -> x_next = x	1827:8:69594:69610	5606127	0	True				
ANR	5606137	AssignmentExpression	endp -> x_next = x		5606127	0		=			
ANR	5606138	PtrMemberAccess	endp -> x_next		5606127	0					
ANR	5606139	Identifier	endp		5606127	0					
ANR	5606140	Identifier	x_next		5606127	1					
ANR	5606141	Identifier	x		5606127	1					
ANR	5606142	ExpressionStatement	endp = endp -> next	1828:8:69620:69637	5606127	1	True				
ANR	5606143	AssignmentExpression	endp = endp -> next		5606127	0		=			
ANR	5606144	Identifier	endp		5606127	0					
ANR	5606145	PtrMemberAccess	endp -> next		5606127	1					
ANR	5606146	Identifier	endp		5606127	0					
ANR	5606147	Identifier	next		5606127	1					
ANR	5606148	ReturnType	static inline void		5606127	1					
ANR	5606149	Identifier	set_x_next		5606127	2					
ANR	5606150	ParameterList	"active_line * endp , active_line * alp , fixed x"		5606127	3					
ANR	5606151	Parameter	active_line * endp	1824:11:69513:69529	5606127	0	True				
ANR	5606152	ParameterType	active_line *		5606127	0					
ANR	5606153	Identifier	endp		5606127	1					
ANR	5606154	Parameter	active_line * alp	1824:30:69532:69547	5606127	1	True				
ANR	5606155	ParameterType	active_line *		5606127	0					
ANR	5606156	Identifier	alp		5606127	1					
ANR	5606157	Parameter	fixed x	1824:48:69550:69556	5606127	2	True				
ANR	5606158	ParameterType	fixed		5606127	0					
ANR	5606159	Identifier	x		5606127	1					
ANR	5606160	CFGEntryNode	ENTRY		5606127		True				
ANR	5606161	CFGExitNode	EXIT		5606127		True				
ANR	5606162	Symbol	alp		5606127						
ANR	5606163	Symbol	* endp		5606127						
ANR	5606164	Symbol	endp -> x_next		5606127						
ANR	5606165	Symbol	x		5606127						
ANR	5606166	Symbol	endp		5606127						
ANR	5606167	Symbol	endp -> next		5606127						
ANR	5606168	Function	coord_weight	1832:0:69648:69786							
ANR	5606169	FunctionDef	coord_weight (const active_line * alp)		5606168	0					
ANR	5606170	CompoundStatement		1834:0:69703:69786	5606168	0					
ANR	5606171	ReturnStatement	"return 1 + min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 ) ;"	1835:4:69709:69784	5606168	0	True				
ANR	5606172	AdditiveExpression	"1 + min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 )"		5606168	0		+			
ANR	5606173	PrimaryExpression	1		5606168	0					
ANR	5606174	CallExpression	"min ( any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) ) , 256 )"		5606168	1					
ANR	5606175	Callee	min		5606168	0					
ANR	5606176	Identifier	min		5606168	0					
ANR	5606177	ArgumentList	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		5606168	1					
ANR	5606178	Argument	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		5606168	0					
ANR	5606179	CallExpression	any_abs ( ( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x ) )		5606168	0					
ANR	5606180	Callee	any_abs		5606168	0					
ANR	5606181	Identifier	any_abs		5606168	0					
ANR	5606182	ArgumentList	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		5606168	1					
ANR	5606183	Argument	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		5606168	0					
ANR	5606184	CastExpression	( int ) ( ( int64_t ) alp -> diff . y * 8 / alp -> diff . x )		5606168	0					
ANR	5606185	CastTarget	int		5606168	0					
ANR	5606186	MultiplicativeExpression	( int64_t ) alp -> diff . y * 8 / alp -> diff . x		5606168	1		*			
ANR	5606187	CastExpression	( int64_t ) alp -> diff . y		5606168	0					
ANR	5606188	CastTarget	int64_t		5606168	0					
ANR	5606189	MemberAccess	alp -> diff . y		5606168	1					
ANR	5606190	PtrMemberAccess	alp -> diff		5606168	0					
ANR	5606191	Identifier	alp		5606168	0					
ANR	5606192	Identifier	diff		5606168	1					
ANR	5606193	Identifier	y		5606168	1					
ANR	5606194	MultiplicativeExpression	8 / alp -> diff . x		5606168	1		/			
ANR	5606195	PrimaryExpression	8		5606168	0					
ANR	5606196	MemberAccess	alp -> diff . x		5606168	1					
ANR	5606197	PtrMemberAccess	alp -> diff		5606168	0					
ANR	5606198	Identifier	alp		5606168	0					
ANR	5606199	Identifier	diff		5606168	1					
ANR	5606200	Identifier	x		5606168	1					
ANR	5606201	Argument	256		5606168	1					
ANR	5606202	PrimaryExpression	256		5606168	0					
ANR	5606203	ReturnType	static inline int		5606168	1					
ANR	5606204	Identifier	coord_weight		5606168	2					
ANR	5606205	ParameterList	const active_line * alp		5606168	3					
ANR	5606206	Parameter	const active_line * alp	1833:13:69679:69700	5606168	0	True				
ANR	5606207	ParameterType	const active_line *		5606168	0					
ANR	5606208	Identifier	alp		5606168	1					
ANR	5606209	CFGEntryNode	ENTRY		5606168		True				
ANR	5606210	CFGExitNode	EXIT		5606168		True				
ANR	5606211	Symbol	* alp		5606168						
ANR	5606212	Symbol	min		5606168						
ANR	5606213	Symbol	alp		5606168						
ANR	5606214	Symbol	alp -> diff . y		5606168						
ANR	5606215	Symbol	any_abs		5606168						
ANR	5606216	Symbol	alp -> diff		5606168						
ANR	5606217	Symbol	alp -> diff . x		5606168						
ANR	5606218	Function	intersect_al	1840:0:69904:75250							
ANR	5606219	FunctionDef	"intersect_al (line_list * ll , fixed y , fixed * y_top , int draw , bool all_bands)"		5606218	0					
ANR	5606220	CompoundStatement		1842:0:69993:75250	5606218	0					
ANR	5606221	IdentifierDeclStatement	"fixed x = min_fixed , y1 = * y_top ;"	1843:4:69999:70031	5606218	0	True				
ANR	5606222	IdentifierDecl	x = min_fixed		5606218	0					
ANR	5606223	IdentifierDeclType	fixed		5606218	0					
ANR	5606224	Identifier	x		5606218	1					
ANR	5606225	AssignmentExpression	x = min_fixed		5606218	2		=			
ANR	5606226	Identifier	min_fixed		5606218	0					
ANR	5606227	Identifier	min_fixed		5606218	1					
ANR	5606228	IdentifierDecl	y1 = * y_top		5606218	1					
ANR	5606229	IdentifierDeclType	fixed		5606218	0					
ANR	5606230	Identifier	y1		5606218	1					
ANR	5606231	AssignmentExpression	y1 = * y_top		5606218	2		=			
ANR	5606232	Identifier	y1		5606218	0					
ANR	5606233	UnaryOperationExpression	* y_top		5606218	1					
ANR	5606234	UnaryOperator	*		5606218	0					
ANR	5606235	Identifier	y_top		5606218	1					
ANR	5606236	IdentifierDeclStatement	"active_line * alp , * stopx = NULL ;"	1844:4:70037:70068	5606218	1	True				
ANR	5606237	IdentifierDecl	* alp		5606218	0					
ANR	5606238	IdentifierDeclType	active_line *		5606218	0					
ANR	5606239	Identifier	alp		5606218	1					
ANR	5606240	IdentifierDecl	* stopx = NULL		5606218	1					
ANR	5606241	IdentifierDeclType	active_line *		5606218	0					
ANR	5606242	Identifier	stopx		5606218	1					
ANR	5606243	AssignmentExpression	* stopx = NULL		5606218	2		=			
ANR	5606244	Identifier	NULL		5606218	0					
ANR	5606245	Identifier	NULL		5606218	1					
ANR	5606246	IdentifierDeclStatement	active_line * endp = NULL ;	1845:4:70074:70098	5606218	2	True				
ANR	5606247	IdentifierDecl	* endp = NULL		5606218	0					
ANR	5606248	IdentifierDeclType	active_line *		5606218	0					
ANR	5606249	Identifier	endp		5606218	1					
ANR	5606250	AssignmentExpression	* endp = NULL		5606218	2		=			
ANR	5606251	Identifier	NULL		5606218	0					
ANR	5606252	Identifier	NULL		5606218	1					
ANR	5606253	IfStatement	if ( y == y1 )		5606218	3					
ANR	5606254	Condition	y == y1	1847:8:70109:70115	5606218	0	True				
ANR	5606255	EqualityExpression	y == y1		5606218	0		==			
ANR	5606256	Identifier	y		5606218	0					
ANR	5606257	Identifier	y1		5606218	1					
ANR	5606258	CompoundStatement		6:17:124:124	5606218	1					
ANR	5606259	ElseStatement	else		5606218	0					
ANR	5606260	IfStatement	if ( draw >= 0 || all_bands )		5606218	0					
ANR	5606261	Condition	draw >= 0 || all_bands	1852:15:70310:70331	5606218	0	True				
ANR	5606262	OrExpression	draw >= 0 || all_bands		5606218	0		||			
ANR	5606263	RelationalExpression	draw >= 0		5606218	0		>=			
ANR	5606264	Identifier	draw		5606218	0					
ANR	5606265	PrimaryExpression	0		5606218	1					
ANR	5606266	Identifier	all_bands		5606218	1					
ANR	5606267	CompoundStatement		11:39:340:340	5606218	1					
ANR	5606268	ForStatement	"for ( alp = stopx = ll -> x_list ; INCR_EXPR ( find_y ) , alp != 0 ; endp = alp , alp = alp -> next )"		5606218	0					
ANR	5606269	ForInit	alp = stopx = ll -> x_list ;	1859:13:70539:70563	5606218	0	True				
ANR	5606270	AssignmentExpression	alp = stopx = ll -> x_list		5606218	0		=			
ANR	5606271	Identifier	alp		5606218	0					
ANR	5606272	AssignmentExpression	stopx = ll -> x_list		5606218	1		=			
ANR	5606273	Identifier	stopx		5606218	0					
ANR	5606274	PtrMemberAccess	ll -> x_list		5606218	1					
ANR	5606275	Identifier	ll		5606218	0					
ANR	5606276	Identifier	x_list		5606218	1					
ANR	5606277	Condition	"INCR_EXPR ( find_y ) , alp != 0"	1860:13:70578:70604	5606218	1	True				
ANR	5606278	Expression	"INCR_EXPR ( find_y ) , alp != 0"		5606218	0					
ANR	5606279	CallExpression	INCR_EXPR ( find_y )		5606218	0					
ANR	5606280	Callee	INCR_EXPR		5606218	0					
ANR	5606281	Identifier	INCR_EXPR		5606218	0					
ANR	5606282	ArgumentList	find_y		5606218	1					
ANR	5606283	Argument	find_y		5606218	0					
ANR	5606284	Identifier	find_y		5606218	0					
ANR	5606285	EqualityExpression	alp != 0		5606218	1		!=			
ANR	5606286	Identifier	alp		5606218	0					
ANR	5606287	PrimaryExpression	0		5606218	1					
ANR	5606288	Expression	"endp = alp , alp = alp -> next"	1861:13:70620:70646	5606218	2	True				
ANR	5606289	AssignmentExpression	endp = alp		5606218	0		=			
ANR	5606290	Identifier	endp		5606218	0					
ANR	5606291	Identifier	alp		5606218	1					
ANR	5606292	AssignmentExpression	alp = alp -> next		5606218	1		=			
ANR	5606293	Identifier	alp		5606218	0					
ANR	5606294	PtrMemberAccess	alp -> next		5606218	1					
ANR	5606295	Identifier	alp		5606218	0					
ANR	5606296	Identifier	next		5606218	1					
ANR	5606297	CompoundStatement		23:12:725:736	5606218	3					
ANR	5606298	IdentifierDeclStatement	"fixed nx = AL_X_AT_Y ( alp , y1 ) ;"	1863:12:70676:70705	5606218	0	True				
ANR	5606299	IdentifierDecl	"nx = AL_X_AT_Y ( alp , y1 )"		5606218	0					
ANR	5606300	IdentifierDeclType	fixed		5606218	0					
ANR	5606301	Identifier	nx		5606218	1					
ANR	5606302	AssignmentExpression	"nx = AL_X_AT_Y ( alp , y1 )"		5606218	2		=			
ANR	5606303	Identifier	nx		5606218	0					
ANR	5606304	CallExpression	"AL_X_AT_Y ( alp , y1 )"		5606218	1					
ANR	5606305	Callee	AL_X_AT_Y		5606218	0					
ANR	5606306	Identifier	AL_X_AT_Y		5606218	0					
ANR	5606307	ArgumentList	alp		5606218	1					
ANR	5606308	Argument	alp		5606218	0					
ANR	5606309	Identifier	alp		5606218	0					
ANR	5606310	Argument	y1		5606218	1					
ANR	5606311	Identifier	y1		5606218	0					
ANR	5606312	IdentifierDeclStatement	fixed y_new ;	1864:12:70719:70730	5606218	1	True				
ANR	5606313	IdentifierDecl	y_new		5606218	0					
ANR	5606314	IdentifierDeclType	fixed		5606218	0					
ANR	5606315	Identifier	y_new		5606218	1					
ANR	5606316	ExpressionStatement	alp -> x_next = nx	1866:12:70745:70761	5606218	2	True				
ANR	5606317	AssignmentExpression	alp -> x_next = nx		5606218	0		=			
ANR	5606318	PtrMemberAccess	alp -> x_next		5606218	0					
ANR	5606319	Identifier	alp		5606218	0					
ANR	5606320	Identifier	x_next		5606218	1					
ANR	5606321	Identifier	nx		5606218	1					
ANR	5606322	IfStatement	if ( nx >= x )		5606218	3					
ANR	5606323	Condition	nx >= x	1868:16:70827:70833	5606218	0	True				
ANR	5606324	RelationalExpression	nx >= x		5606218	0		>=			
ANR	5606325	Identifier	nx		5606218	0					
ANR	5606326	Identifier	x		5606218	1					
ANR	5606327	ExpressionStatement	x = nx	1869:16:70852:70858	5606218	1	True				
ANR	5606328	AssignmentExpression	x = nx		5606218	0		=			
ANR	5606329	Identifier	x		5606218	0					
ANR	5606330	Identifier	nx		5606218	1					
ANR	5606331	ElseStatement	else		5606218	0					
ANR	5606332	IfStatement	"if ( alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new ) )"		5606218	0					
ANR	5606333	Condition	"alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new )"	1870:21:70881:70973	5606218	0	True				
ANR	5606334	AndExpression	"alp -> x_current >= endp -> x_current && intersect ( endp , alp , y , y1 , & y_new )"		5606218	0		&&			
ANR	5606335	RelationalExpression	alp -> x_current >= endp -> x_current		5606218	0		>=			
ANR	5606336	PtrMemberAccess	alp -> x_current		5606218	0					
ANR	5606337	Identifier	alp		5606218	0					
ANR	5606338	Identifier	x_current		5606218	1					
ANR	5606339	PtrMemberAccess	endp -> x_current		5606218	1					
ANR	5606340	Identifier	endp		5606218	0					
ANR	5606341	Identifier	x_current		5606218	1					
ANR	5606342	CallExpression	"intersect ( endp , alp , y , y1 , & y_new )"		5606218	1					
ANR	5606343	Callee	intersect		5606218	0					
ANR	5606344	Identifier	intersect		5606218	0					
ANR	5606345	ArgumentList	endp		5606218	1					
ANR	5606346	Argument	endp		5606218	0					
ANR	5606347	Identifier	endp		5606218	0					
ANR	5606348	Argument	alp		5606218	1					
ANR	5606349	Identifier	alp		5606218	0					
ANR	5606350	Argument	y		5606218	2					
ANR	5606351	Identifier	y		5606218	0					
ANR	5606352	Argument	y1		5606218	3					
ANR	5606353	Identifier	y1		5606218	0					
ANR	5606354	Argument	& y_new		5606218	4					
ANR	5606355	UnaryOperationExpression	& y_new		5606218	0					
ANR	5606356	UnaryOperator	&		5606218	0					
ANR	5606357	Identifier	y_new		5606218	1					
ANR	5606358	CompoundStatement		30:58:982:982	5606218	1					
ANR	5606359	IfStatement	if ( y_new <= y1 )		5606218	0					
ANR	5606360	Condition	y_new <= y1	1872:20:70998:71008	5606218	0	True				
ANR	5606361	RelationalExpression	y_new <= y1		5606218	0		<=			
ANR	5606362	Identifier	y_new		5606218	0					
ANR	5606363	Identifier	y1		5606218	1					
ANR	5606364	CompoundStatement		31:33:1017:1017	5606218	1					
ANR	5606365	ExpressionStatement	stopx = endp	1873:20:71033:71045	5606218	0	True				
ANR	5606366	AssignmentExpression	stopx = endp		5606218	0		=			
ANR	5606367	Identifier	stopx		5606218	0					
ANR	5606368	Identifier	endp		5606218	1					
ANR	5606369	ExpressionStatement	y1 = y_new	1874:20:71067:71077	5606218	1	True				
ANR	5606370	AssignmentExpression	y1 = y_new		5606218	0		=			
ANR	5606371	Identifier	y1		5606218	0					
ANR	5606372	Identifier	y_new		5606218	1					
ANR	5606373	IfStatement	if ( endp -> diff . x == 0 )		5606218	2					
ANR	5606374	Condition	endp -> diff . x == 0	1875:24:71103:71119	5606218	0	True				
ANR	5606375	EqualityExpression	endp -> diff . x == 0		5606218	0		==			
ANR	5606376	MemberAccess	endp -> diff . x		5606218	0					
ANR	5606377	PtrMemberAccess	endp -> diff		5606218	0					
ANR	5606378	Identifier	endp		5606218	0					
ANR	5606379	Identifier	diff		5606218	1					
ANR	5606380	Identifier	x		5606218	1					
ANR	5606381	PrimaryExpression	0		5606218	1					
ANR	5606382	ExpressionStatement	nx = endp -> start . x	1876:24:71146:71164	5606218	1	True				
ANR	5606383	AssignmentExpression	nx = endp -> start . x		5606218	0		=			
ANR	5606384	Identifier	nx		5606218	0					
ANR	5606385	MemberAccess	endp -> start . x		5606218	1					
ANR	5606386	PtrMemberAccess	endp -> start		5606218	0					
ANR	5606387	Identifier	endp		5606218	0					
ANR	5606388	Identifier	start		5606218	1					
ANR	5606389	Identifier	x		5606218	1					
ANR	5606390	ElseStatement	else		5606218	0					
ANR	5606391	IfStatement	if ( alp -> diff . x == 0 )		5606218	0					
ANR	5606392	Condition	alp -> diff . x == 0	1877:29:71195:71210	5606218	0	True				
ANR	5606393	EqualityExpression	alp -> diff . x == 0		5606218	0		==			
ANR	5606394	MemberAccess	alp -> diff . x		5606218	0					
ANR	5606395	PtrMemberAccess	alp -> diff		5606218	0					
ANR	5606396	Identifier	alp		5606218	0					
ANR	5606397	Identifier	diff		5606218	1					
ANR	5606398	Identifier	x		5606218	1					
ANR	5606399	PrimaryExpression	0		5606218	1					
ANR	5606400	ExpressionStatement	nx = alp -> start . x	1878:24:71237:71254	5606218	1	True				
ANR	5606401	AssignmentExpression	nx = alp -> start . x		5606218	0		=			
ANR	5606402	Identifier	nx		5606218	0					
ANR	5606403	MemberAccess	alp -> start . x		5606218	1					
ANR	5606404	PtrMemberAccess	alp -> start		5606218	0					
ANR	5606405	Identifier	alp		5606218	0					
ANR	5606406	Identifier	start		5606218	1					
ANR	5606407	Identifier	x		5606218	1					
ANR	5606408	ElseStatement	else		5606218	0					
ANR	5606409	CompoundStatement		40:24:1370:1400	5606218	0					
ANR	5606410	IdentifierDeclStatement	"fixed nx0 = AL_X_AT_Y ( endp , y1 ) ;"	1880:24:71307:71338	5606218	0	True				
ANR	5606411	IdentifierDecl	"nx0 = AL_X_AT_Y ( endp , y1 )"		5606218	0					
ANR	5606412	IdentifierDeclType	fixed		5606218	0					
ANR	5606413	Identifier	nx0		5606218	1					
ANR	5606414	AssignmentExpression	"nx0 = AL_X_AT_Y ( endp , y1 )"		5606218	2		=			
ANR	5606415	Identifier	nx0		5606218	0					
ANR	5606416	CallExpression	"AL_X_AT_Y ( endp , y1 )"		5606218	1					
ANR	5606417	Callee	AL_X_AT_Y		5606218	0					
ANR	5606418	Identifier	AL_X_AT_Y		5606218	0					
ANR	5606419	ArgumentList	endp		5606218	1					
ANR	5606420	Argument	endp		5606218	0					
ANR	5606421	Identifier	endp		5606218	0					
ANR	5606422	Argument	y1		5606218	1					
ANR	5606423	Identifier	y1		5606218	0					
ANR	5606424	IdentifierDeclStatement	"fixed nx1 = AL_X_AT_Y ( alp , y1 ) ;"	1881:24:71364:71394	5606218	1	True				
ANR	5606425	IdentifierDecl	"nx1 = AL_X_AT_Y ( alp , y1 )"		5606218	0					
ANR	5606426	IdentifierDeclType	fixed		5606218	0					
ANR	5606427	Identifier	nx1		5606218	1					
ANR	5606428	AssignmentExpression	"nx1 = AL_X_AT_Y ( alp , y1 )"		5606218	2		=			
ANR	5606429	Identifier	nx1		5606218	0					
ANR	5606430	CallExpression	"AL_X_AT_Y ( alp , y1 )"		5606218	1					
ANR	5606431	Callee	AL_X_AT_Y		5606218	0					
ANR	5606432	Identifier	AL_X_AT_Y		5606218	0					
ANR	5606433	ArgumentList	alp		5606218	1					
ANR	5606434	Argument	alp		5606218	0					
ANR	5606435	Identifier	alp		5606218	0					
ANR	5606436	Argument	y1		5606218	1					
ANR	5606437	Identifier	y1		5606218	0					
ANR	5606438	IfStatement	if ( nx0 != nx1 )		5606218	2					
ANR	5606439	Condition	nx0 != nx1	1882:28:71424:71433	5606218	0	True				
ANR	5606440	EqualityExpression	nx0 != nx1		5606218	0		!=			
ANR	5606441	Identifier	nx0		5606218	0					
ANR	5606442	Identifier	nx1		5606218	1					
ANR	5606443	CompoundStatement		47:28:1824:1854	5606218	1					
ANR	5606444	IdentifierDeclStatement	int64_t w0 = coord_weight ( endp ) ;	1887:28:71757:71788	5606218	0	True				
ANR	5606445	IdentifierDecl	w0 = coord_weight ( endp )		5606218	0					
ANR	5606446	IdentifierDeclType	int64_t		5606218	0					
ANR	5606447	Identifier	w0		5606218	1					
ANR	5606448	AssignmentExpression	w0 = coord_weight ( endp )		5606218	2		=			
ANR	5606449	Identifier	w0		5606218	0					
ANR	5606450	CallExpression	coord_weight ( endp )		5606218	1					
ANR	5606451	Callee	coord_weight		5606218	0					
ANR	5606452	Identifier	coord_weight		5606218	0					
ANR	5606453	ArgumentList	endp		5606218	1					
ANR	5606454	Argument	endp		5606218	0					
ANR	5606455	Identifier	endp		5606218	0					
ANR	5606456	IdentifierDeclStatement	int64_t w1 = coord_weight ( alp ) ;	1888:28:71818:71848	5606218	1	True				
ANR	5606457	IdentifierDecl	w1 = coord_weight ( alp )		5606218	0					
ANR	5606458	IdentifierDeclType	int64_t		5606218	0					
ANR	5606459	Identifier	w1		5606218	1					
ANR	5606460	AssignmentExpression	w1 = coord_weight ( alp )		5606218	2		=			
ANR	5606461	Identifier	w1		5606218	0					
ANR	5606462	CallExpression	coord_weight ( alp )		5606218	1					
ANR	5606463	Callee	coord_weight		5606218	0					
ANR	5606464	Identifier	coord_weight		5606218	0					
ANR	5606465	ArgumentList	alp		5606218	1					
ANR	5606466	Argument	alp		5606218	0					
ANR	5606467	Identifier	alp		5606218	0					
ANR	5606468	ExpressionStatement	nx = ( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )	1890:28:71879:71926	5606218	2	True				
ANR	5606469	AssignmentExpression	nx = ( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )		5606218	0		=			
ANR	5606470	Identifier	nx		5606218	0					
ANR	5606471	CastExpression	( fixed ) ( ( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 ) )		5606218	1					
ANR	5606472	CastTarget	fixed		5606218	0					
ANR	5606473	MultiplicativeExpression	( w0 * nx0 + w1 * nx1 ) / ( w0 + w1 )		5606218	1		/			
ANR	5606474	AdditiveExpression	w0 * nx0 + w1 * nx1		5606218	0		+			
ANR	5606475	MultiplicativeExpression	w0 * nx0		5606218	0		*			
ANR	5606476	Identifier	w0		5606218	0					
ANR	5606477	Identifier	nx0		5606218	1					
ANR	5606478	MultiplicativeExpression	w1 * nx1		5606218	1		*			
ANR	5606479	Identifier	w1		5606218	0					
ANR	5606480	Identifier	nx1		5606218	1					
ANR	5606481	AdditiveExpression	w0 + w1		5606218	1		+			
ANR	5606482	Identifier	w0		5606218	0					
ANR	5606483	Identifier	w1		5606218	1					
ANR	5606484	ElseStatement	else		5606218	0					
ANR	5606485	ExpressionStatement	nx = nx0	1892:28:71987:71995	5606218	0	True				
ANR	5606486	AssignmentExpression	nx = nx0		5606218	0		=			
ANR	5606487	Identifier	nx		5606218	0					
ANR	5606488	Identifier	nx0		5606218	1					
ANR	5606489	ExpressionStatement	endp -> x_next = alp -> x_next = nx	1894:20:72039:72070	5606218	3	True				
ANR	5606490	AssignmentExpression	endp -> x_next = alp -> x_next = nx		5606218	0		=			
ANR	5606491	PtrMemberAccess	endp -> x_next		5606218	0					
ANR	5606492	Identifier	endp		5606218	0					
ANR	5606493	Identifier	x_next		5606218	1					
ANR	5606494	AssignmentExpression	alp -> x_next = nx		5606218	1		=			
ANR	5606495	PtrMemberAccess	alp -> x_next		5606218	0					
ANR	5606496	Identifier	alp		5606218	0					
ANR	5606497	Identifier	x_next		5606218	1					
ANR	5606498	Identifier	nx		5606218	1					
ANR	5606499	IfStatement	if ( nx > x )		5606218	1					
ANR	5606500	Condition	nx > x	1898:20:72256:72261	5606218	0	True				
ANR	5606501	RelationalExpression	nx > x		5606218	0		>			
ANR	5606502	Identifier	nx		5606218	0					
ANR	5606503	Identifier	x		5606218	1					
ANR	5606504	ExpressionStatement	x = nx	1899:20:72284:72290	5606218	1	True				
ANR	5606505	AssignmentExpression	x = nx		5606218	0		=			
ANR	5606506	Identifier	x		5606218	0					
ANR	5606507	Identifier	nx		5606218	1					
ANR	5606508	ForStatement	for ( alp = ll -> x_list ; alp != stopx ; alp = alp -> next )		5606218	1					
ANR	5606509	ForInit	alp = ll -> x_list ;	1903:13:72395:72411	5606218	0	True				
ANR	5606510	AssignmentExpression	alp = ll -> x_list		5606218	0		=			
ANR	5606511	Identifier	alp		5606218	0					
ANR	5606512	PtrMemberAccess	ll -> x_list		5606218	1					
ANR	5606513	Identifier	ll		5606218	0					
ANR	5606514	Identifier	x_list		5606218	1					
ANR	5606515	Condition	alp != stopx	1903:31:72413:72424	5606218	1	True				
ANR	5606516	EqualityExpression	alp != stopx		5606218	0		!=			
ANR	5606517	Identifier	alp		5606218	0					
ANR	5606518	Identifier	stopx		5606218	1					
ANR	5606519	AssignmentExpression	alp = alp -> next	1903:45:72427:72441	5606218	2	True	=			
ANR	5606520	Identifier	alp		5606218	0					
ANR	5606521	PtrMemberAccess	alp -> next		5606218	1					
ANR	5606522	Identifier	alp		5606218	0					
ANR	5606523	Identifier	next		5606218	1					
ANR	5606524	ExpressionStatement	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"	1904:12:72456:72488	5606218	3	True				
ANR	5606525	AssignmentExpression	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"		5606218	0		=			
ANR	5606526	PtrMemberAccess	alp -> x_next		5606218	0					
ANR	5606527	Identifier	alp		5606218	0					
ANR	5606528	Identifier	x_next		5606218	1					
ANR	5606529	CallExpression	"AL_X_AT_Y ( alp , y1 )"		5606218	1					
ANR	5606530	Callee	AL_X_AT_Y		5606218	0					
ANR	5606531	Identifier	AL_X_AT_Y		5606218	0					
ANR	5606532	ArgumentList	alp		5606218	1					
ANR	5606533	Argument	alp		5606218	0					
ANR	5606534	Identifier	alp		5606218	0					
ANR	5606535	Argument	y1		5606218	1					
ANR	5606536	Identifier	y1		5606218	0					
ANR	5606537	IfStatement	if ( ll -> x_list != NULL )		5606218	2					
ANR	5606538	Condition	ll -> x_list != NULL	1906:12:72583:72600	5606218	0	True				
ANR	5606539	EqualityExpression	ll -> x_list != NULL		5606218	0		!=			
ANR	5606540	PtrMemberAccess	ll -> x_list		5606218	0					
ANR	5606541	Identifier	ll		5606218	0					
ANR	5606542	Identifier	x_list		5606218	1					
ANR	5606543	Identifier	NULL		5606218	1					
ANR	5606544	CompoundStatement		65:32:2609:2609	5606218	1					
ANR	5606545	ForStatement	for ( ; ; )		5606218	0					
ANR	5606546	CompoundStatement		69:16:2773:2794	5606218	0					
ANR	5606547	IdentifierDeclStatement	fixed x1 ;	1908:16:72644:72652	5606218	0	True				
ANR	5606548	IdentifierDecl	x1		5606218	0					
ANR	5606549	IdentifierDeclType	fixed		5606218	0					
ANR	5606550	Identifier	x1		5606218	1					
ANR	5606551	IdentifierDeclStatement	double sx = 0xbaadf00d ;	1909:16:72670:72692	5606218	1	True				
ANR	5606552	IdentifierDecl	sx = 0xbaadf00d		5606218	0					
ANR	5606553	IdentifierDeclType	double		5606218	0					
ANR	5606554	Identifier	sx		5606218	1					
ANR	5606555	AssignmentExpression	sx = 0xbaadf00d		5606218	2		=			
ANR	5606556	Identifier	sx		5606218	0					
ANR	5606557	PrimaryExpression	0xbaadf00d		5606218	1					
ANR	5606558	IdentifierDeclStatement	"int k = 0xbaadf00d , n ;"	1910:16:72767:72788	5606218	2	True				
ANR	5606559	IdentifierDecl	k = 0xbaadf00d		5606218	0					
ANR	5606560	IdentifierDeclType	int		5606218	0					
ANR	5606561	Identifier	k		5606218	1					
ANR	5606562	AssignmentExpression	k = 0xbaadf00d		5606218	2		=			
ANR	5606563	Identifier	k		5606218	0					
ANR	5606564	PrimaryExpression	0xbaadf00d		5606218	1					
ANR	5606565	IdentifierDecl	n		5606218	1					
ANR	5606566	IdentifierDeclType	int		5606218	0					
ANR	5606567	Identifier	n		5606218	1					
ANR	5606568	ExpressionStatement	endp = ll -> x_list	1912:16:72807:72824	5606218	3	True				
ANR	5606569	AssignmentExpression	endp = ll -> x_list		5606218	0		=			
ANR	5606570	Identifier	endp		5606218	0					
ANR	5606571	PtrMemberAccess	ll -> x_list		5606218	1					
ANR	5606572	Identifier	ll		5606218	0					
ANR	5606573	Identifier	x_list		5606218	1					
ANR	5606574	ExpressionStatement	x1 = endp -> x_next	1913:16:72842:72859	5606218	4	True				
ANR	5606575	AssignmentExpression	x1 = endp -> x_next		5606218	0		=			
ANR	5606576	Identifier	x1		5606218	0					
ANR	5606577	PtrMemberAccess	endp -> x_next		5606218	1					
ANR	5606578	Identifier	endp		5606218	0					
ANR	5606579	Identifier	x_next		5606218	1					
ANR	5606580	ForStatement	"for ( alp = endp -> next ; alp != NULL ; x1 = alp -> x_next , alp = alp -> next )"		5606218	5					
ANR	5606581	ForInit	alp = endp -> next ;	1914:21:72882:72898	5606218	0	True				
ANR	5606582	AssignmentExpression	alp = endp -> next		5606218	0		=			
ANR	5606583	Identifier	alp		5606218	0					
ANR	5606584	PtrMemberAccess	endp -> next		5606218	1					
ANR	5606585	Identifier	endp		5606218	0					
ANR	5606586	Identifier	next		5606218	1					
ANR	5606587	Condition	alp != NULL	1914:39:72900:72910	5606218	1	True				
ANR	5606588	EqualityExpression	alp != NULL		5606218	0		!=			
ANR	5606589	Identifier	alp		5606218	0					
ANR	5606590	Identifier	NULL		5606218	1					
ANR	5606591	Expression	"x1 = alp -> x_next , alp = alp -> next"	1914:52:72913:72945	5606218	2	True				
ANR	5606592	AssignmentExpression	x1 = alp -> x_next		5606218	0		=			
ANR	5606593	Identifier	x1		5606218	0					
ANR	5606594	PtrMemberAccess	alp -> x_next		5606218	1					
ANR	5606595	Identifier	alp		5606218	0					
ANR	5606596	Identifier	x_next		5606218	1					
ANR	5606597	AssignmentExpression	alp = alp -> next		5606218	1		=			
ANR	5606598	Identifier	alp		5606218	0					
ANR	5606599	PtrMemberAccess	alp -> next		5606218	1					
ANR	5606600	Identifier	alp		5606218	0					
ANR	5606601	Identifier	next		5606218	1					
ANR	5606602	IfStatement	if ( alp -> x_next < x1 )		5606218	3					
ANR	5606603	Condition	alp -> x_next < x1	1915:24:72972:72987	5606218	0	True				
ANR	5606604	RelationalExpression	alp -> x_next < x1		5606218	0		<			
ANR	5606605	PtrMemberAccess	alp -> x_next		5606218	0					
ANR	5606606	Identifier	alp		5606218	0					
ANR	5606607	Identifier	x_next		5606218	1					
ANR	5606608	Identifier	x1		5606218	1					
ANR	5606609	BreakStatement	break ;	1916:24:73014:73019	5606218	1	True				
ANR	5606610	IfStatement	if ( alp == NULL )		5606218	6					
ANR	5606611	Condition	alp == NULL	1917:20:73041:73051	5606218	0	True				
ANR	5606612	EqualityExpression	alp == NULL		5606218	0		==			
ANR	5606613	Identifier	alp		5606218	0					
ANR	5606614	Identifier	NULL		5606218	1					
ANR	5606615	BreakStatement	break ;	1918:20:73074:73079	5606218	1	True				
ANR	5606616	ExpressionStatement	x1 = endp -> x_next	1919:16:73097:73114	5606218	7	True				
ANR	5606617	AssignmentExpression	x1 = endp -> x_next		5606218	0		=			
ANR	5606618	Identifier	x1		5606218	0					
ANR	5606619	PtrMemberAccess	endp -> x_next		5606218	1					
ANR	5606620	Identifier	endp		5606218	0					
ANR	5606621	Identifier	x_next		5606218	1					
ANR	5606622	ExpressionStatement	n = 0	1920:16:73132:73137	5606218	8	True				
ANR	5606623	AssignmentExpression	n = 0		5606218	0		=			
ANR	5606624	Identifier	n		5606218	0					
ANR	5606625	PrimaryExpression	0		5606218	1					
ANR	5606626	ForStatement	for ( alp = endp -> next ; alp != NULL ; alp = alp -> next )		5606218	9					
ANR	5606627	ForInit	alp = endp -> next ;	1921:21:73160:73176	5606218	0	True				
ANR	5606628	AssignmentExpression	alp = endp -> next		5606218	0		=			
ANR	5606629	Identifier	alp		5606218	0					
ANR	5606630	PtrMemberAccess	endp -> next		5606218	1					
ANR	5606631	Identifier	endp		5606218	0					
ANR	5606632	Identifier	next		5606218	1					
ANR	5606633	Condition	alp != NULL	1921:39:73178:73188	5606218	1	True				
ANR	5606634	EqualityExpression	alp != NULL		5606218	0		!=			
ANR	5606635	Identifier	alp		5606218	0					
ANR	5606636	Identifier	NULL		5606218	1					
ANR	5606637	AssignmentExpression	alp = alp -> next	1921:52:73191:73205	5606218	2	True	=			
ANR	5606638	Identifier	alp		5606218	0					
ANR	5606639	PtrMemberAccess	alp -> next		5606218	1					
ANR	5606640	Identifier	alp		5606218	0					
ANR	5606641	Identifier	next		5606218	1					
ANR	5606642	CompoundStatement		80:69:3214:3214	5606218	3					
ANR	5606643	ExpressionStatement	x = alp -> x_next	1922:21:73231:73246	5606218	0	True				
ANR	5606644	AssignmentExpression	x = alp -> x_next		5606218	0		=			
ANR	5606645	Identifier	x		5606218	0					
ANR	5606646	PtrMemberAccess	alp -> x_next		5606218	1					
ANR	5606647	Identifier	alp		5606218	0					
ANR	5606648	Identifier	x_next		5606218	1					
ANR	5606649	IfStatement	if ( x < x1 )		5606218	1					
ANR	5606650	Condition	x < x1	1923:25:73273:73278	5606218	0	True				
ANR	5606651	RelationalExpression	x < x1		5606218	0		<			
ANR	5606652	Identifier	x		5606218	0					
ANR	5606653	Identifier	x1		5606218	1					
ANR	5606654	CompoundStatement		82:33:3287:3287	5606218	1					
ANR	5606655	IfStatement	if ( n == 0 )		5606218	0					
ANR	5606656	Condition	n == 0	1924:28:73311:73316	5606218	0	True				
ANR	5606657	EqualityExpression	n == 0		5606218	0		==			
ANR	5606658	Identifier	n		5606218	0					
ANR	5606659	PrimaryExpression	0		5606218	1					
ANR	5606660	CompoundStatement		83:36:3325:3325	5606218	1					
ANR	5606661	IfStatement	if ( endp -> diff . x == 0 )		5606218	0					
ANR	5606662	Condition	endp -> diff . x == 0	1925:32:73353:73369	5606218	0	True				
ANR	5606663	EqualityExpression	endp -> diff . x == 0		5606218	0		==			
ANR	5606664	MemberAccess	endp -> diff . x		5606218	0					
ANR	5606665	PtrMemberAccess	endp -> diff		5606218	0					
ANR	5606666	Identifier	endp		5606218	0					
ANR	5606667	Identifier	diff		5606218	1					
ANR	5606668	Identifier	x		5606218	1					
ANR	5606669	PrimaryExpression	0		5606218	1					
ANR	5606670	CompoundStatement		84:51:3378:3378	5606218	1					
ANR	5606671	ExpressionStatement	k = - 1	1926:32:73406:73412	5606218	0	True				
ANR	5606672	AssignmentExpression	k = - 1		5606218	0		=			
ANR	5606673	Identifier	k		5606218	0					
ANR	5606674	UnaryOperationExpression	- 1		5606218	1					
ANR	5606675	UnaryOperator	-		5606218	0					
ANR	5606676	PrimaryExpression	1		5606218	1					
ANR	5606677	ExpressionStatement	sx = x1	1927:32:73446:73453	5606218	1	True				
ANR	5606678	AssignmentExpression	sx = x1		5606218	0		=			
ANR	5606679	Identifier	sx		5606218	0					
ANR	5606680	Identifier	x1		5606218	1					
ANR	5606681	ElseStatement	else		5606218	0					
ANR	5606682	CompoundStatement		87:35:3496:3496	5606218	0					
ANR	5606683	ExpressionStatement	k = coord_weight ( endp )	1929:32:73524:73546	5606218	0	True				
ANR	5606684	AssignmentExpression	k = coord_weight ( endp )		5606218	0		=			
ANR	5606685	Identifier	k		5606218	0					
ANR	5606686	CallExpression	coord_weight ( endp )		5606218	1					
ANR	5606687	Callee	coord_weight		5606218	0					
ANR	5606688	Identifier	coord_weight		5606218	0					
ANR	5606689	ArgumentList	endp		5606218	1					
ANR	5606690	Argument	endp		5606218	0					
ANR	5606691	Identifier	endp		5606218	0					
ANR	5606692	ExpressionStatement	sx = ( double ) x1 * k	1930:32:73580:73599	5606218	1	True				
ANR	5606693	AssignmentExpression	sx = ( double ) x1 * k		5606218	0		=			
ANR	5606694	Identifier	sx		5606218	0					
ANR	5606695	MultiplicativeExpression	( double ) x1 * k		5606218	1		*			
ANR	5606696	CastExpression	( double ) x1		5606218	0					
ANR	5606697	CastTarget	double		5606218	0					
ANR	5606698	Identifier	x1		5606218	1					
ANR	5606699	Identifier	k		5606218	1					
ANR	5606700	ExpressionStatement	n = 1	1932:28:73659:73664	5606218	1	True				
ANR	5606701	AssignmentExpression	n = 1		5606218	0		=			
ANR	5606702	Identifier	n		5606218	0					
ANR	5606703	PrimaryExpression	1		5606218	1					
ANR	5606704	ExpressionStatement	n ++	1934:24:73716:73719	5606218	1	True				
ANR	5606705	PostIncDecOperationExpression	n ++		5606218	0					
ANR	5606706	Identifier	n		5606218	0					
ANR	5606707	IncDec	++		5606218	1					
ANR	5606708	IfStatement	if ( alp -> diff . x == 0 )		5606218	2					
ANR	5606709	Condition	alp -> diff . x == 0	1935:28:73749:73764	5606218	0	True				
ANR	5606710	EqualityExpression	alp -> diff . x == 0		5606218	0		==			
ANR	5606711	MemberAccess	alp -> diff . x		5606218	0					
ANR	5606712	PtrMemberAccess	alp -> diff		5606218	0					
ANR	5606713	Identifier	alp		5606218	0					
ANR	5606714	Identifier	diff		5606218	1					
ANR	5606715	Identifier	x		5606218	1					
ANR	5606716	PrimaryExpression	0		5606218	1					
ANR	5606717	CompoundStatement		94:46:3773:3773	5606218	1					
ANR	5606718	IfStatement	if ( k <= - 1 )		5606218	0					
ANR	5606719	Condition	k <= - 1	1937:32:73874:73880	5606218	0	True				
ANR	5606720	RelationalExpression	k <= - 1		5606218	0		<=			
ANR	5606721	Identifier	k		5606218	0					
ANR	5606722	UnaryOperationExpression	- 1		5606218	1					
ANR	5606723	UnaryOperator	-		5606218	0					
ANR	5606724	PrimaryExpression	1		5606218	1					
ANR	5606725	CompoundStatement		96:41:3889:3889	5606218	1					
ANR	5606726	ExpressionStatement	sx += x	1938:32:73917:73924	5606218	0	True				
ANR	5606727	AssignmentExpression	sx += x		5606218	0		+=			
ANR	5606728	Identifier	sx		5606218	0					
ANR	5606729	Identifier	x		5606218	1					
ANR	5606730	ExpressionStatement	k --	1939:32:73958:73961	5606218	1	True				
ANR	5606731	PostIncDecOperationExpression	k --		5606218	0					
ANR	5606732	Identifier	k		5606218	0					
ANR	5606733	IncDec	--		5606218	1					
ANR	5606734	ElseStatement	else		5606218	0					
ANR	5606735	CompoundStatement		99:35:4004:4004	5606218	0					
ANR	5606736	ExpressionStatement	k = - 1	1941:32:74032:74038	5606218	0	True				
ANR	5606737	AssignmentExpression	k = - 1		5606218	0		=			
ANR	5606738	Identifier	k		5606218	0					
ANR	5606739	UnaryOperationExpression	- 1		5606218	1					
ANR	5606740	UnaryOperator	-		5606218	0					
ANR	5606741	PrimaryExpression	1		5606218	1					
ANR	5606742	ExpressionStatement	sx = x	1942:32:74072:74078	5606218	1	True				
ANR	5606743	AssignmentExpression	sx = x		5606218	0		=			
ANR	5606744	Identifier	sx		5606218	0					
ANR	5606745	Identifier	x		5606218	1					
ANR	5606746	ElseStatement	else		5606218	0					
ANR	5606747	IfStatement	if ( k > 0 )		5606218	0					
ANR	5606748	Condition	k > 0	1944:35:74145:74149	5606218	0	True				
ANR	5606749	RelationalExpression	k > 0		5606218	0		>			
ANR	5606750	Identifier	k		5606218	0					
ANR	5606751	PrimaryExpression	0		5606218	1					
ANR	5606752	CompoundStatement		104:28:4188:4213	5606218	1					
ANR	5606753	IdentifierDeclStatement	int w = coord_weight ( alp ) ;	1945:28:74182:74207	5606218	0	True				
ANR	5606754	IdentifierDecl	w = coord_weight ( alp )		5606218	0					
ANR	5606755	IdentifierDeclType	int		5606218	0					
ANR	5606756	Identifier	w		5606218	1					
ANR	5606757	AssignmentExpression	w = coord_weight ( alp )		5606218	2		=			
ANR	5606758	Identifier	w		5606218	0					
ANR	5606759	CallExpression	coord_weight ( alp )		5606218	1					
ANR	5606760	Callee	coord_weight		5606218	0					
ANR	5606761	Identifier	coord_weight		5606218	0					
ANR	5606762	ArgumentList	alp		5606218	1					
ANR	5606763	Argument	alp		5606218	0					
ANR	5606764	Identifier	alp		5606218	0					
ANR	5606765	ExpressionStatement	sx += ( double ) x * w	1947:28:74238:74257	5606218	1	True				
ANR	5606766	AssignmentExpression	sx += ( double ) x * w		5606218	0		+=			
ANR	5606767	Identifier	sx		5606218	0					
ANR	5606768	MultiplicativeExpression	( double ) x * w		5606218	1		*			
ANR	5606769	CastExpression	( double ) x		5606218	0					
ANR	5606770	CastTarget	double		5606218	0					
ANR	5606771	Identifier	x		5606218	1					
ANR	5606772	Identifier	w		5606218	1					
ANR	5606773	ExpressionStatement	k += w	1948:28:74287:74293	5606218	2	True				
ANR	5606774	AssignmentExpression	k += w		5606218	0		+=			
ANR	5606775	Identifier	k		5606218	0					
ANR	5606776	Identifier	w		5606218	1					
ANR	5606777	ElseStatement	else		5606218	0					
ANR	5606778	CompoundStatement		109:28:4355:4355	5606218	0					
ANR	5606779	IfStatement	if ( n > 1 )		5606218	0					
ANR	5606780	Condition	n > 1	1951:28:74379:74383	5606218	0	True				
ANR	5606781	RelationalExpression	n > 1		5606218	0		>			
ANR	5606782	Identifier	n		5606218	0					
ANR	5606783	PrimaryExpression	1		5606218	1					
ANR	5606784	CompoundStatement		110:35:4392:4392	5606218	1					
ANR	5606785	ExpressionStatement	k = any_abs ( k )	1952:28:74416:74430	5606218	0	True				
ANR	5606786	AssignmentExpression	k = any_abs ( k )		5606218	0		=			
ANR	5606787	Identifier	k		5606218	0					
ANR	5606788	CallExpression	any_abs ( k )		5606218	1					
ANR	5606789	Callee	any_abs		5606218	0					
ANR	5606790	Identifier	any_abs		5606218	0					
ANR	5606791	ArgumentList	k		5606218	1					
ANR	5606792	Argument	k		5606218	0					
ANR	5606793	Identifier	k		5606218	0					
ANR	5606794	ExpressionStatement	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"	1953:28:74460:74508	5606218	1	True				
ANR	5606795	CallExpression	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"		5606218	0					
ANR	5606796	Callee	set_x_next		5606218	0					
ANR	5606797	Identifier	set_x_next		5606218	0					
ANR	5606798	ArgumentList	endp		5606218	1					
ANR	5606799	Argument	endp		5606218	0					
ANR	5606800	Identifier	endp		5606218	0					
ANR	5606801	Argument	alp		5606218	1					
ANR	5606802	Identifier	alp		5606218	0					
ANR	5606803	Argument	( fixed ) ( ( sx + k / 2 ) / k )		5606218	2					
ANR	5606804	CastExpression	( fixed ) ( ( sx + k / 2 ) / k )		5606218	0					
ANR	5606805	CastTarget	fixed		5606218	0					
ANR	5606806	MultiplicativeExpression	( sx + k / 2 ) / k		5606218	1		/			
ANR	5606807	AdditiveExpression	sx + k / 2		5606218	0		+			
ANR	5606808	Identifier	sx		5606218	0					
ANR	5606809	MultiplicativeExpression	k / 2		5606218	1		/			
ANR	5606810	Identifier	k		5606218	0					
ANR	5606811	PrimaryExpression	2		5606218	1					
ANR	5606812	Identifier	k		5606218	1					
ANR	5606813	ExpressionStatement	x1 = alp -> x_next	1955:24:74560:74576	5606218	1	True				
ANR	5606814	AssignmentExpression	x1 = alp -> x_next		5606218	0		=			
ANR	5606815	Identifier	x1		5606218	0					
ANR	5606816	PtrMemberAccess	alp -> x_next		5606218	1					
ANR	5606817	Identifier	alp		5606218	0					
ANR	5606818	Identifier	x_next		5606218	1					
ANR	5606819	ExpressionStatement	n = 0	1956:24:74602:74607	5606218	2	True				
ANR	5606820	AssignmentExpression	n = 0		5606218	0		=			
ANR	5606821	Identifier	n		5606218	0					
ANR	5606822	PrimaryExpression	0		5606218	1					
ANR	5606823	ExpressionStatement	endp = alp	1957:24:74633:74643	5606218	3	True				
ANR	5606824	AssignmentExpression	endp = alp		5606218	0		=			
ANR	5606825	Identifier	endp		5606218	0					
ANR	5606826	Identifier	alp		5606218	1					
ANR	5606827	IfStatement	if ( n > 1 )		5606218	10					
ANR	5606828	Condition	n > 1	1960:20:74706:74710	5606218	0	True				
ANR	5606829	RelationalExpression	n > 1		5606218	0		>			
ANR	5606830	Identifier	n		5606218	0					
ANR	5606831	PrimaryExpression	1		5606218	1					
ANR	5606832	CompoundStatement		119:27:4719:4719	5606218	1					
ANR	5606833	ExpressionStatement	k = any_abs ( k )	1961:20:74735:74749	5606218	0	True				
ANR	5606834	AssignmentExpression	k = any_abs ( k )		5606218	0		=			
ANR	5606835	Identifier	k		5606218	0					
ANR	5606836	CallExpression	any_abs ( k )		5606218	1					
ANR	5606837	Callee	any_abs		5606218	0					
ANR	5606838	Identifier	any_abs		5606218	0					
ANR	5606839	ArgumentList	k		5606218	1					
ANR	5606840	Argument	k		5606218	0					
ANR	5606841	Identifier	k		5606218	0					
ANR	5606842	ExpressionStatement	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"	1962:20:74771:74819	5606218	1	True				
ANR	5606843	CallExpression	"set_x_next ( endp , alp , ( fixed ) ( ( sx + k / 2 ) / k ) )"		5606218	0					
ANR	5606844	Callee	set_x_next		5606218	0					
ANR	5606845	Identifier	set_x_next		5606218	0					
ANR	5606846	ArgumentList	endp		5606218	1					
ANR	5606847	Argument	endp		5606218	0					
ANR	5606848	Identifier	endp		5606218	0					
ANR	5606849	Argument	alp		5606218	1					
ANR	5606850	Identifier	alp		5606218	0					
ANR	5606851	Argument	( fixed ) ( ( sx + k / 2 ) / k )		5606218	2					
ANR	5606852	CastExpression	( fixed ) ( ( sx + k / 2 ) / k )		5606218	0					
ANR	5606853	CastTarget	fixed		5606218	0					
ANR	5606854	MultiplicativeExpression	( sx + k / 2 ) / k		5606218	1		/			
ANR	5606855	AdditiveExpression	sx + k / 2		5606218	0		+			
ANR	5606856	Identifier	sx		5606218	0					
ANR	5606857	MultiplicativeExpression	k / 2		5606218	1		/			
ANR	5606858	Identifier	k		5606218	0					
ANR	5606859	PrimaryExpression	2		5606218	1					
ANR	5606860	Identifier	k		5606218	1					
ANR	5606861	ElseStatement	else		5606218	0					
ANR	5606862	CompoundStatement		125:11:4880:4880	5606218	0					
ANR	5606863	ForStatement	for ( alp = ll -> x_list ; alp != stopx ; alp = alp -> next )		5606218	0					
ANR	5606864	ForInit	alp = ll -> x_list ;	1968:13:74955:74971	5606218	0	True				
ANR	5606865	AssignmentExpression	alp = ll -> x_list		5606218	0		=			
ANR	5606866	Identifier	alp		5606218	0					
ANR	5606867	PtrMemberAccess	ll -> x_list		5606218	1					
ANR	5606868	Identifier	ll		5606218	0					
ANR	5606869	Identifier	x_list		5606218	1					
ANR	5606870	Condition	alp != stopx	1968:31:74973:74984	5606218	1	True				
ANR	5606871	EqualityExpression	alp != stopx		5606218	0		!=			
ANR	5606872	Identifier	alp		5606218	0					
ANR	5606873	Identifier	stopx		5606218	1					
ANR	5606874	AssignmentExpression	alp = alp -> next	1968:45:74987:75001	5606218	2	True	=			
ANR	5606875	Identifier	alp		5606218	0					
ANR	5606876	PtrMemberAccess	alp -> next		5606218	1					
ANR	5606877	Identifier	alp		5606218	0					
ANR	5606878	Identifier	next		5606218	1					
ANR	5606879	ExpressionStatement	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"	1969:12:75016:75048	5606218	3	True				
ANR	5606880	AssignmentExpression	"alp -> x_next = AL_X_AT_Y ( alp , y1 )"		5606218	0		=			
ANR	5606881	PtrMemberAccess	alp -> x_next		5606218	0					
ANR	5606882	Identifier	alp		5606218	0					
ANR	5606883	Identifier	x_next		5606218	1					
ANR	5606884	CallExpression	"AL_X_AT_Y ( alp , y1 )"		5606218	1					
ANR	5606885	Callee	AL_X_AT_Y		5606218	0					
ANR	5606886	Identifier	AL_X_AT_Y		5606218	0					
ANR	5606887	ArgumentList	alp		5606218	1					
ANR	5606888	Argument	alp		5606218	0					
ANR	5606889	Identifier	alp		5606218	0					
ANR	5606890	Argument	y1		5606218	1					
ANR	5606891	Identifier	y1		5606218	0					
ANR	5606892	IfStatement	if ( gs_debug_c ( 'F' ) )		5606218	4					
ANR	5606893	Condition	gs_debug_c ( 'F' )	1972:8:75077:75091	5606218	0	True				
ANR	5606894	CallExpression	gs_debug_c ( 'F' )		5606218	0					
ANR	5606895	Callee	gs_debug_c		5606218	0					
ANR	5606896	Identifier	gs_debug_c		5606218	0					
ANR	5606897	ArgumentList	'F'		5606218	1					
ANR	5606898	Argument	'F'		5606218	0					
ANR	5606899	PrimaryExpression	'F'		5606218	0					
ANR	5606900	CompoundStatement		131:25:5100:5100	5606218	1					
ANR	5606901	ExpressionStatement	"dmlprintf1 ( ll -> memory , ""[F]after loop: y1=%f\\n"" , fixed2float ( y1 ) )"	1973:8:75104:75169	5606218	0	True				
ANR	5606902	CallExpression	"dmlprintf1 ( ll -> memory , ""[F]after loop: y1=%f\\n"" , fixed2float ( y1 ) )"		5606218	0					
ANR	5606903	Callee	dmlprintf1		5606218	0					
ANR	5606904	Identifier	dmlprintf1		5606218	0					
ANR	5606905	ArgumentList	ll -> memory		5606218	1					
ANR	5606906	Argument	ll -> memory		5606218	0					
ANR	5606907	PtrMemberAccess	ll -> memory		5606218	0					
ANR	5606908	Identifier	ll		5606218	0					
ANR	5606909	Identifier	memory		5606218	1					
ANR	5606910	Argument	"""[F]after loop: y1=%f\\n"""		5606218	1					
ANR	5606911	PrimaryExpression	"""[F]after loop: y1=%f\\n"""		5606218	0					
ANR	5606912	Argument	fixed2float ( y1 )		5606218	2					
ANR	5606913	CallExpression	fixed2float ( y1 )		5606218	0					
ANR	5606914	Callee	fixed2float		5606218	0					
ANR	5606915	Identifier	fixed2float		5606218	0					
ANR	5606916	ArgumentList	y1		5606218	1					
ANR	5606917	Argument	y1		5606218	0					
ANR	5606918	Identifier	y1		5606218	0					
ANR	5606919	ExpressionStatement	"print_line_list ( ll -> memory , ll -> x_list )"	1974:8:75179:75218	5606218	1	True				
ANR	5606920	CallExpression	"print_line_list ( ll -> memory , ll -> x_list )"		5606218	0					
ANR	5606921	Callee	print_line_list		5606218	0					
ANR	5606922	Identifier	print_line_list		5606218	0					
ANR	5606923	ArgumentList	ll -> memory		5606218	1					
ANR	5606924	Argument	ll -> memory		5606218	0					
ANR	5606925	PtrMemberAccess	ll -> memory		5606218	0					
ANR	5606926	Identifier	ll		5606218	0					
ANR	5606927	Identifier	memory		5606218	1					
ANR	5606928	Argument	ll -> x_list		5606218	1					
ANR	5606929	PtrMemberAccess	ll -> x_list		5606218	0					
ANR	5606930	Identifier	ll		5606218	0					
ANR	5606931	Identifier	x_list		5606218	1					
ANR	5606932	ExpressionStatement	* y_top = y1	1977:4:75237:75248	5606218	5	True				
ANR	5606933	AssignmentExpression	* y_top = y1		5606218	0		=			
ANR	5606934	UnaryOperationExpression	* y_top		5606218	0					
ANR	5606935	UnaryOperator	*		5606218	0					
ANR	5606936	Identifier	y_top		5606218	1					
ANR	5606937	Identifier	y1		5606218	1					
ANR	5606938	ReturnType	static void		5606218	1					
ANR	5606939	Identifier	intersect_al		5606218	2					
ANR	5606940	ParameterList	"line_list * ll , fixed y , fixed * y_top , int draw , bool all_bands"		5606218	3					
ANR	5606941	Parameter	line_list * ll	1841:13:69929:69941	5606218	0	True				
ANR	5606942	ParameterType	line_list *		5606218	0					
ANR	5606943	Identifier	ll		5606218	1					
ANR	5606944	Parameter	fixed y	1841:28:69944:69950	5606218	1	True				
ANR	5606945	ParameterType	fixed		5606218	0					
ANR	5606946	Identifier	y		5606218	1					
ANR	5606947	Parameter	fixed * y_top	1841:37:69953:69964	5606218	2	True				
ANR	5606948	ParameterType	fixed *		5606218	0					
ANR	5606949	Identifier	y_top		5606218	1					
ANR	5606950	Parameter	int draw	1841:51:69967:69974	5606218	3	True				
ANR	5606951	ParameterType	int		5606218	0					
ANR	5606952	Identifier	draw		5606218	1					
ANR	5606953	Parameter	bool all_bands	1841:61:69977:69990	5606218	4	True				
ANR	5606954	ParameterType	bool		5606218	0					
ANR	5606955	Identifier	all_bands		5606218	1					
ANR	5606956	CFGEntryNode	ENTRY		5606218		True				
ANR	5606957	CFGExitNode	EXIT		5606218		True				
ANR	5606958	InfiniteForNode	true		5606218		True				
ANR	5606959	Symbol	ll		5606218						
ANR	5606960	Symbol	ll -> memory		5606218						
ANR	5606961	Symbol	endp -> next		5606218						
ANR	5606962	Symbol	y_new		5606218						
ANR	5606963	Symbol	min_fixed		5606218						
ANR	5606964	Symbol	ll -> x_list		5606218						
ANR	5606965	Symbol	w0		5606218						
ANR	5606966	Symbol	alp -> diff . x		5606218						
ANR	5606967	Symbol	w1		5606218						
ANR	5606968	Symbol	gs_debug_c		5606218						
ANR	5606969	Symbol	NULL		5606218						
ANR	5606970	Symbol	alp		5606218						
ANR	5606971	Symbol	* ll		5606218						
ANR	5606972	Symbol	endp -> x_current		5606218						
ANR	5606973	Symbol	nx1		5606218						
ANR	5606974	Symbol	nx0		5606218						
ANR	5606975	Symbol	INCR_EXPR		5606218						
ANR	5606976	Symbol	* y_top		5606218						
ANR	5606977	Symbol	alp -> x_next		5606218						
ANR	5606978	Symbol	endp -> diff		5606218						
ANR	5606979	Symbol	alp -> start . x		5606218						
ANR	5606980	Symbol	* endp		5606218						
ANR	5606981	Symbol	alp -> start		5606218						
ANR	5606982	Symbol	x1		5606218						
ANR	5606983	Symbol	stopx		5606218						
ANR	5606984	Symbol	AL_X_AT_Y		5606218						
ANR	5606985	Symbol	alp -> x_current		5606218						
ANR	5606986	Symbol	endp -> x_next		5606218						
ANR	5606987	Symbol	nx		5606218						
ANR	5606988	Symbol	y1		5606218						
ANR	5606989	Symbol	any_abs		5606218						
ANR	5606990	Symbol	y_top		5606218						
ANR	5606991	Symbol	endp		5606218						
ANR	5606992	Symbol	intersect		5606218						
ANR	5606993	Symbol	fixed2float		5606218						
ANR	5606994	Symbol	sx		5606218						
ANR	5606995	Symbol	coord_weight		5606218						
ANR	5606996	Symbol	endp -> diff . x		5606218						
ANR	5606997	Symbol	alp -> diff		5606218						
ANR	5606998	Symbol	draw		5606218						
ANR	5606999	Symbol	k		5606218						
ANR	5607000	Symbol	n		5606218						
ANR	5607001	Symbol	* alp		5606218						
ANR	5607002	Symbol	alp -> next		5606218						
ANR	5607003	Symbol	endp -> start		5606218						
ANR	5607004	Symbol	w		5606218						
ANR	5607005	Symbol	x		5606218						
ANR	5607006	Symbol	y		5606218						
ANR	5607007	Symbol	find_y		5606218						
ANR	5607008	Symbol	endp -> start . x		5606218						
ANR	5607009	Symbol	all_bands		5606218						
ANR	5607010	Symbol	& y_new		5606218						
ANR	5607011	DeclStmt									
ANR	5607012	Decl							int	int	k
ANR	5607013	DeclStmt									
ANR	5607014	Decl							int	int	v
ANR	5607015	Function	spot_into_trapezoids	2088:0:78242:79155							
ANR	5607016	FunctionDef	"spot_into_trapezoids (line_list * ll , fixed band_mask)"		5607015	0					
ANR	5607017	CompoundStatement		2090:0:78306:79155	5607015	0					
ANR	5607018	Statement	const	2092:4:78379:78383	5607015	0	True				
ANR	5607019	Statement	fill_options	2092:10:78385:78396	5607015	1	True				
ANR	5607020	Statement	*	2092:23:78398:78398	5607015	2	True				
ANR	5607021	Statement	const	2092:25:78400:78404	5607015	3	True				
ANR	5607022	ExpressionStatement	fo = ll -> fo	2092:31:78406:78417	5607015	4	True				
ANR	5607023	AssignmentExpression	fo = ll -> fo		5607015	0		=			
ANR	5607024	Identifier	fo		5607015	0					
ANR	5607025	PtrMemberAccess	ll -> fo		5607015	1					
ANR	5607026	Identifier	ll		5607015	0					
ANR	5607027	Identifier	fo		5607015	1					
ANR	5607028	IfStatement	if ( fo -> is_spotan )		5607015	5					
ANR	5607029	Condition	fo -> is_spotan	2094:8:78428:78440	5607015	0	True				
ANR	5607030	PtrMemberAccess	fo -> is_spotan		5607015	0					
ANR	5607031	Identifier	fo		5607015	0					
ANR	5607032	Identifier	is_spotan		5607015	1					
ANR	5607033	ReturnStatement	"return spot_into_trapezoids__spotan ( ll , band_mask ) ;"	2095:8:78451:78501	5607015	1	True				
ANR	5607034	CallExpression	"spot_into_trapezoids__spotan ( ll , band_mask )"		5607015	0					
ANR	5607035	Callee	spot_into_trapezoids__spotan		5607015	0					
ANR	5607036	Identifier	spot_into_trapezoids__spotan		5607015	0					
ANR	5607037	ArgumentList	ll		5607015	1					
ANR	5607038	Argument	ll		5607015	0					
ANR	5607039	Identifier	ll		5607015	0					
ANR	5607040	Argument	band_mask		5607015	1					
ANR	5607041	Identifier	band_mask		5607015	0					
ANR	5607042	IfStatement	if ( fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right )		5607015	6					
ANR	5607043	Condition	fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right	2096:8:78511:78582	5607015	0	True				
ANR	5607044	InclusiveOrExpression	fo -> adjust_below | fo -> adjust_above | fo -> adjust_left | fo -> adjust_right		5607015	0		|			
ANR	5607045	PtrMemberAccess	fo -> adjust_below		5607015	0					
ANR	5607046	Identifier	fo		5607015	0					
ANR	5607047	Identifier	adjust_below		5607015	1					
ANR	5607048	InclusiveOrExpression	fo -> adjust_above | fo -> adjust_left | fo -> adjust_right		5607015	1		|			
ANR	5607049	PtrMemberAccess	fo -> adjust_above		5607015	0					
ANR	5607050	Identifier	fo		5607015	0					
ANR	5607051	Identifier	adjust_above		5607015	1					
ANR	5607052	InclusiveOrExpression	fo -> adjust_left | fo -> adjust_right		5607015	1		|			
ANR	5607053	PtrMemberAccess	fo -> adjust_left		5607015	0					
ANR	5607054	Identifier	fo		5607015	0					
ANR	5607055	Identifier	adjust_left		5607015	1					
ANR	5607056	PtrMemberAccess	fo -> adjust_right		5607015	1					
ANR	5607057	Identifier	fo		5607015	0					
ANR	5607058	Identifier	adjust_right		5607015	1					
ANR	5607059	CompoundStatement		7:82:278:278	5607015	1					
ANR	5607060	IfStatement	if ( fo -> fill_direct )		5607015	0					
ANR	5607061	Condition	fo -> fill_direct	2097:12:78599:78613	5607015	0	True				
ANR	5607062	PtrMemberAccess	fo -> fill_direct		5607015	0					
ANR	5607063	Identifier	fo		5607015	0					
ANR	5607064	Identifier	fill_direct		5607015	1					
ANR	5607065	ReturnStatement	"return spot_into_trapezoids__aj_fd ( ll , band_mask ) ;"	2098:12:78628:78677	5607015	1	True				
ANR	5607066	CallExpression	"spot_into_trapezoids__aj_fd ( ll , band_mask )"		5607015	0					
ANR	5607067	Callee	spot_into_trapezoids__aj_fd		5607015	0					
ANR	5607068	Identifier	spot_into_trapezoids__aj_fd		5607015	0					
ANR	5607069	ArgumentList	ll		5607015	1					
ANR	5607070	Argument	ll		5607015	0					
ANR	5607071	Identifier	ll		5607015	0					
ANR	5607072	Argument	band_mask		5607015	1					
ANR	5607073	Identifier	band_mask		5607015	0					
ANR	5607074	ElseStatement	else		5607015	0					
ANR	5607075	ReturnStatement	"return spot_into_trapezoids__aj_nd ( ll , band_mask ) ;"	2100:12:78704:78753	5607015	0	True				
ANR	5607076	CallExpression	"spot_into_trapezoids__aj_nd ( ll , band_mask )"		5607015	0					
ANR	5607077	Callee	spot_into_trapezoids__aj_nd		5607015	0					
ANR	5607078	Identifier	spot_into_trapezoids__aj_nd		5607015	0					
ANR	5607079	ArgumentList	ll		5607015	1					
ANR	5607080	Argument	ll		5607015	0					
ANR	5607081	Identifier	ll		5607015	0					
ANR	5607082	Argument	band_mask		5607015	1					
ANR	5607083	Identifier	band_mask		5607015	0					
ANR	5607084	ElseStatement	else		5607015	0					
ANR	5607085	IfStatement	if ( ll -> windings != NULL )		5607015	0					
ANR	5607086	Condition	ll -> windings != NULL	2101:15:78770:78789	5607015	0	True				
ANR	5607087	EqualityExpression	ll -> windings != NULL		5607015	0		!=			
ANR	5607088	PtrMemberAccess	ll -> windings		5607015	0					
ANR	5607089	Identifier	ll		5607015	0					
ANR	5607090	Identifier	windings		5607015	1					
ANR	5607091	Identifier	NULL		5607015	1					
ANR	5607092	CompoundStatement		12:37:485:485	5607015	1					
ANR	5607093	IfStatement	if ( fo -> fill_direct )		5607015	0					
ANR	5607094	Condition	fo -> fill_direct	2102:12:78806:78820	5607015	0	True				
ANR	5607095	PtrMemberAccess	fo -> fill_direct		5607015	0					
ANR	5607096	Identifier	fo		5607015	0					
ANR	5607097	Identifier	fill_direct		5607015	1					
ANR	5607098	ReturnStatement	"return spot_into_trapezoids__nj_fd_sw ( ll , band_mask ) ;"	2103:12:78835:78887	5607015	1	True				
ANR	5607099	CallExpression	"spot_into_trapezoids__nj_fd_sw ( ll , band_mask )"		5607015	0					
ANR	5607100	Callee	spot_into_trapezoids__nj_fd_sw		5607015	0					
ANR	5607101	Identifier	spot_into_trapezoids__nj_fd_sw		5607015	0					
ANR	5607102	ArgumentList	ll		5607015	1					
ANR	5607103	Argument	ll		5607015	0					
ANR	5607104	Identifier	ll		5607015	0					
ANR	5607105	Argument	band_mask		5607015	1					
ANR	5607106	Identifier	band_mask		5607015	0					
ANR	5607107	ElseStatement	else		5607015	0					
ANR	5607108	ReturnStatement	"return spot_into_trapezoids__nj_nd_sw ( ll , band_mask ) ;"	2105:12:78914:78966	5607015	0	True				
ANR	5607109	CallExpression	"spot_into_trapezoids__nj_nd_sw ( ll , band_mask )"		5607015	0					
ANR	5607110	Callee	spot_into_trapezoids__nj_nd_sw		5607015	0					
ANR	5607111	Identifier	spot_into_trapezoids__nj_nd_sw		5607015	0					
ANR	5607112	ArgumentList	ll		5607015	1					
ANR	5607113	Argument	ll		5607015	0					
ANR	5607114	Identifier	ll		5607015	0					
ANR	5607115	Argument	band_mask		5607015	1					
ANR	5607116	Identifier	band_mask		5607015	0					
ANR	5607117	ElseStatement	else		5607015	0					
ANR	5607118	CompoundStatement		17:11:672:672	5607015	0					
ANR	5607119	IfStatement	if ( fo -> fill_direct )		5607015	0					
ANR	5607120	Condition	fo -> fill_direct	2107:12:78993:79007	5607015	0	True				
ANR	5607121	PtrMemberAccess	fo -> fill_direct		5607015	0					
ANR	5607122	Identifier	fo		5607015	0					
ANR	5607123	Identifier	fill_direct		5607015	1					
ANR	5607124	ReturnStatement	"return spot_into_trapezoids__nj_fd ( ll , band_mask ) ;"	2108:12:79022:79071	5607015	1	True				
ANR	5607125	CallExpression	"spot_into_trapezoids__nj_fd ( ll , band_mask )"		5607015	0					
ANR	5607126	Callee	spot_into_trapezoids__nj_fd		5607015	0					
ANR	5607127	Identifier	spot_into_trapezoids__nj_fd		5607015	0					
ANR	5607128	ArgumentList	ll		5607015	1					
ANR	5607129	Argument	ll		5607015	0					
ANR	5607130	Identifier	ll		5607015	0					
ANR	5607131	Argument	band_mask		5607015	1					
ANR	5607132	Identifier	band_mask		5607015	0					
ANR	5607133	ElseStatement	else		5607015	0					
ANR	5607134	ReturnStatement	"return spot_into_trapezoids__nj_nd ( ll , band_mask ) ;"	2110:12:79098:79147	5607015	0	True				
ANR	5607135	CallExpression	"spot_into_trapezoids__nj_nd ( ll , band_mask )"		5607015	0					
ANR	5607136	Callee	spot_into_trapezoids__nj_nd		5607015	0					
ANR	5607137	Identifier	spot_into_trapezoids__nj_nd		5607015	0					
ANR	5607138	ArgumentList	ll		5607015	1					
ANR	5607139	Argument	ll		5607015	0					
ANR	5607140	Identifier	ll		5607015	0					
ANR	5607141	Argument	band_mask		5607015	1					
ANR	5607142	Identifier	band_mask		5607015	0					
ANR	5607143	ReturnType	static int		5607015	1					
ANR	5607144	Identifier	spot_into_trapezoids		5607015	2					
ANR	5607145	ParameterList	"line_list * ll , fixed band_mask"		5607015	3					
ANR	5607146	Parameter	line_list * ll	2089:21:78274:78286	5607015	0	True				
ANR	5607147	ParameterType	line_list *		5607015	0					
ANR	5607148	Identifier	ll		5607015	1					
ANR	5607149	Parameter	fixed band_mask	2089:36:78289:78303	5607015	1	True				
ANR	5607150	ParameterType	fixed		5607015	0					
ANR	5607151	Identifier	band_mask		5607015	1					
ANR	5607152	CFGEntryNode	ENTRY		5607015		True				
ANR	5607153	CFGExitNode	EXIT		5607015		True				
ANR	5607154	Symbol	ll		5607015						
ANR	5607155	Symbol	NULL		5607015						
ANR	5607156	Symbol	* ll		5607015						
ANR	5607157	Symbol	ll -> fo		5607015						
ANR	5607158	Symbol	fo		5607015						
ANR	5607159	Symbol	fo -> is_spotan		5607015						
ANR	5607160	Symbol	fo -> adjust_right		5607015						
ANR	5607161	Symbol	* fo		5607015						
ANR	5607162	Symbol	spot_into_trapezoids__aj_fd		5607015						
ANR	5607163	Symbol	spot_into_trapezoids__nj_nd		5607015						
ANR	5607164	Symbol	ll -> windings		5607015						
ANR	5607165	Symbol	band_mask		5607015						
ANR	5607166	Symbol	spot_into_trapezoids__nj_nd_sw		5607015						
ANR	5607167	Symbol	fo -> adjust_left		5607015						
ANR	5607168	Symbol	spot_into_trapezoids__aj_nd		5607015						
ANR	5607169	Symbol	fo -> adjust_below		5607015						
ANR	5607170	Symbol	spot_into_trapezoids__nj_fd		5607015						
ANR	5607171	Symbol	fo -> fill_direct		5607015						
ANR	5607172	Symbol	spot_into_trapezoids__spotan		5607015						
ANR	5607173	Symbol	fo -> adjust_above		5607015						
ANR	5607174	Symbol	spot_into_trapezoids__nj_fd_sw		5607015						
ANR	5607175	DeclStmt									
ANR	5607176	Decl							int	int	coord_value_t
ANR	5607177	DeclStmt									
ANR	5607178	Decl							struct coord_range_s	struct coord_range_s	coord_range_t
ANR	5607179	ClassDef	coord_range_s	2144:0:80153:80269							
ANR	5607180	DeclStmt									
ANR	5607181	Decl							coord_value_t	coord_value_t	rmin
ANR	5607182	Decl							coord_value_t	coord_value_t	rmax
ANR	5607183	DeclStmt									
ANR	5607184	Decl							coord_range_t	coord_range_t *	prev
ANR	5607185	Decl							coord_range_t	coord_range_t *	next
ANR	5607186	DeclStmt									
ANR	5607187	Decl							coord_range_t	coord_range_t *	alloc_next
ANR	5607188	ClassDef	coord_range_list_s	2152:8:80430:80693							
ANR	5607189	DeclStmt									
ANR	5607190	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5607191	ClassDef	rl_	2154:4:80487:80556							
ANR	5607192	DeclStmt									
ANR	5607193	Decl							coord_range_t	coord_range_t *	first
ANR	5607194	Decl							coord_range_t	coord_range_t *	next
ANR	5607195	Decl							coord_range_t	coord_range_t *	limit
ANR	5607196	DeclStmt									
ANR	5607197	Decl							rl_	rl_	local
ANR	5607198	DeclStmt									
ANR	5607199	Decl							coord_range_t	coord_range_t *	allocated
ANR	5607200	DeclStmt									
ANR	5607201	Decl							coord_range_t	coord_range_t *	freed
ANR	5607202	DeclStmt									
ANR	5607203	Decl							coord_range_t	coord_range_t *	current
ANR	5607204	DeclStmt									
ANR	5607205	Decl							coord_range_t	coord_range_t	first
ANR	5607206	Decl							coord_range_t	coord_range_t	last
ANR	5607207	DeclStmt									
ANR	5607208	Decl							coord_range_list_s	coord_range_list_s	coord_range_list_t
ANR	5607209	Function	range_alloc	2163:0:80696:81227							
ANR	5607210	FunctionDef	range_alloc (coord_range_list_t * pcrl)		5607209	0					
ANR	5607211	CompoundStatement		2165:0:80757:81227	5607209	0					
ANR	5607212	IdentifierDeclStatement	coord_range_t * pcr ;	2166:4:80763:80781	5607209	0	True				
ANR	5607213	IdentifierDecl	* pcr		5607209	0					
ANR	5607214	IdentifierDeclType	coord_range_t *		5607209	0					
ANR	5607215	Identifier	pcr		5607209	1					
ANR	5607216	IfStatement	if ( pcrl -> freed )		5607209	1					
ANR	5607217	Condition	pcrl -> freed	2168:8:80792:80802	5607209	0	True				
ANR	5607218	PtrMemberAccess	pcrl -> freed		5607209	0					
ANR	5607219	Identifier	pcrl		5607209	0					
ANR	5607220	Identifier	freed		5607209	1					
ANR	5607221	CompoundStatement		4:21:47:47	5607209	1					
ANR	5607222	ExpressionStatement	pcr = pcrl -> freed	2169:8:80815:80832	5607209	0	True				
ANR	5607223	AssignmentExpression	pcr = pcrl -> freed		5607209	0		=			
ANR	5607224	Identifier	pcr		5607209	0					
ANR	5607225	PtrMemberAccess	pcrl -> freed		5607209	1					
ANR	5607226	Identifier	pcrl		5607209	0					
ANR	5607227	Identifier	freed		5607209	1					
ANR	5607228	ExpressionStatement	pcrl -> freed = pcr -> next	2170:8:80842:80865	5607209	1	True				
ANR	5607229	AssignmentExpression	pcrl -> freed = pcr -> next		5607209	0		=			
ANR	5607230	PtrMemberAccess	pcrl -> freed		5607209	0					
ANR	5607231	Identifier	pcrl		5607209	0					
ANR	5607232	Identifier	freed		5607209	1					
ANR	5607233	PtrMemberAccess	pcr -> next		5607209	1					
ANR	5607234	Identifier	pcr		5607209	0					
ANR	5607235	Identifier	next		5607209	1					
ANR	5607236	ElseStatement	else		5607209	0					
ANR	5607237	IfStatement	if ( pcrl -> local . next < pcrl -> local . limit )		5607209	0					
ANR	5607238	Condition	pcrl -> local . next < pcrl -> local . limit	2171:15:80882:80917	5607209	0	True				
ANR	5607239	RelationalExpression	pcrl -> local . next < pcrl -> local . limit		5607209	0		<			
ANR	5607240	MemberAccess	pcrl -> local . next		5607209	0					
ANR	5607241	PtrMemberAccess	pcrl -> local		5607209	0					
ANR	5607242	Identifier	pcrl		5607209	0					
ANR	5607243	Identifier	local		5607209	1					
ANR	5607244	Identifier	next		5607209	1					
ANR	5607245	MemberAccess	pcrl -> local . limit		5607209	1					
ANR	5607246	PtrMemberAccess	pcrl -> local		5607209	0					
ANR	5607247	Identifier	pcrl		5607209	0					
ANR	5607248	Identifier	local		5607209	1					
ANR	5607249	Identifier	limit		5607209	1					
ANR	5607250	ExpressionStatement	pcr = pcrl -> local . next ++	2172:8:80928:80952	5607209	1	True				
ANR	5607251	AssignmentExpression	pcr = pcrl -> local . next ++		5607209	0		=			
ANR	5607252	Identifier	pcr		5607209	0					
ANR	5607253	PostIncDecOperationExpression	pcrl -> local . next ++		5607209	1					
ANR	5607254	MemberAccess	pcrl -> local . next		5607209	0					
ANR	5607255	PtrMemberAccess	pcrl -> local		5607209	0					
ANR	5607256	Identifier	pcrl		5607209	0					
ANR	5607257	Identifier	local		5607209	1					
ANR	5607258	Identifier	next		5607209	1					
ANR	5607259	IncDec	++		5607209	1					
ANR	5607260	ElseStatement	else		5607209	0					
ANR	5607261	CompoundStatement		9:9:205:205	5607209	0					
ANR	5607262	ExpressionStatement	"pcr = gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"	2174:8:80973:81085	5607209	0	True				
ANR	5607263	AssignmentExpression	"pcr = gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"		5607209	0		=			
ANR	5607264	Identifier	pcr		5607209	0					
ANR	5607265	CallExpression	"gs_alloc_struct ( pcrl -> memory , coord_range_t , & st_coord_range , ""range_alloc"" )"		5607209	1					
ANR	5607266	Callee	gs_alloc_struct		5607209	0					
ANR	5607267	Identifier	gs_alloc_struct		5607209	0					
ANR	5607268	ArgumentList	pcrl -> memory		5607209	1					
ANR	5607269	Argument	pcrl -> memory		5607209	0					
ANR	5607270	PtrMemberAccess	pcrl -> memory		5607209	0					
ANR	5607271	Identifier	pcrl		5607209	0					
ANR	5607272	Identifier	memory		5607209	1					
ANR	5607273	Argument	coord_range_t		5607209	1					
ANR	5607274	Identifier	coord_range_t		5607209	0					
ANR	5607275	Argument	& st_coord_range		5607209	2					
ANR	5607276	UnaryOperationExpression	& st_coord_range		5607209	0					
ANR	5607277	UnaryOperator	&		5607209	0					
ANR	5607278	Identifier	st_coord_range		5607209	1					
ANR	5607279	Argument	"""range_alloc"""		5607209	3					
ANR	5607280	PrimaryExpression	"""range_alloc"""		5607209	0					
ANR	5607281	IfStatement	if ( pcr == 0 )		5607209	1					
ANR	5607282	Condition	pcr == 0	2176:12:81099:81106	5607209	0	True				
ANR	5607283	EqualityExpression	pcr == 0		5607209	0		==			
ANR	5607284	Identifier	pcr		5607209	0					
ANR	5607285	PrimaryExpression	0		5607209	1					
ANR	5607286	ReturnStatement	return 0 ;	2177:12:81121:81129	5607209	1	True				
ANR	5607287	PrimaryExpression	0		5607209	0					
ANR	5607288	ExpressionStatement	pcr -> alloc_next = pcrl -> allocated	2178:8:81139:81172	5607209	2	True				
ANR	5607289	AssignmentExpression	pcr -> alloc_next = pcrl -> allocated		5607209	0		=			
ANR	5607290	PtrMemberAccess	pcr -> alloc_next		5607209	0					
ANR	5607291	Identifier	pcr		5607209	0					
ANR	5607292	Identifier	alloc_next		5607209	1					
ANR	5607293	PtrMemberAccess	pcrl -> allocated		5607209	1					
ANR	5607294	Identifier	pcrl		5607209	0					
ANR	5607295	Identifier	allocated		5607209	1					
ANR	5607296	ExpressionStatement	pcrl -> allocated = pcr	2179:8:81182:81203	5607209	3	True				
ANR	5607297	AssignmentExpression	pcrl -> allocated = pcr		5607209	0		=			
ANR	5607298	PtrMemberAccess	pcrl -> allocated		5607209	0					
ANR	5607299	Identifier	pcrl		5607209	0					
ANR	5607300	Identifier	allocated		5607209	1					
ANR	5607301	Identifier	pcr		5607209	1					
ANR	5607302	ReturnStatement	return pcr ;	2181:4:81215:81225	5607209	2	True				
ANR	5607303	Identifier	pcr		5607209	0					
ANR	5607304	ReturnType	static coord_range_t *		5607209	1					
ANR	5607305	Identifier	range_alloc		5607209	2					
ANR	5607306	ParameterList	coord_range_list_t * pcrl		5607209	3					
ANR	5607307	Parameter	coord_range_list_t * pcrl	2164:12:80731:80754	5607209	0	True				
ANR	5607308	ParameterType	coord_range_list_t *		5607209	0					
ANR	5607309	Identifier	pcrl		5607209	1					
ANR	5607310	CFGEntryNode	ENTRY		5607209		True				
ANR	5607311	CFGExitNode	EXIT		5607209		True				
ANR	5607312	Symbol	* pcrl		5607209						
ANR	5607313	Symbol	pcrl -> local . limit		5607209						
ANR	5607314	Symbol	gs_alloc_struct		5607209						
ANR	5607315	Symbol	* pcr		5607209						
ANR	5607316	Symbol	pcr -> next		5607209						
ANR	5607317	Symbol	pcrl -> memory		5607209						
ANR	5607318	Symbol	coord_range_t		5607209						
ANR	5607319	Symbol	pcrl -> allocated		5607209						
ANR	5607320	Symbol	pcrl -> freed		5607209						
ANR	5607321	Symbol	pcrl -> local		5607209						
ANR	5607322	Symbol	& st_coord_range		5607209						
ANR	5607323	Symbol	pcrl -> local . next		5607209						
ANR	5607324	Symbol	pcrl		5607209						
ANR	5607325	Symbol	pcr -> alloc_next		5607209						
ANR	5607326	Symbol	pcr		5607209						
ANR	5607327	Function	range_delete	2184:0:81230:81520							
ANR	5607328	FunctionDef	"range_delete (coord_range_list_t * pcrl , coord_range_t * pcr)"		5607327	0					
ANR	5607329	CompoundStatement		2186:0:81301:81520	5607327	0					
ANR	5607330	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]delete 0x%lx: [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , pcr -> rmax )"	2187:4:81307:81400	5607327	0	True				
ANR	5607331	CallExpression	"if_debug3 ( 'Q' , ""[Qr]delete 0x%lx: [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , pcr -> rmax )"		5607327	0					
ANR	5607332	Callee	if_debug3		5607327	0					
ANR	5607333	Identifier	if_debug3		5607327	0					
ANR	5607334	ArgumentList	'Q'		5607327	1					
ANR	5607335	Argument	'Q'		5607327	0					
ANR	5607336	PrimaryExpression	'Q'		5607327	0					
ANR	5607337	Argument	"""[Qr]delete 0x%lx: [%d,%d)\\n"""		5607327	1					
ANR	5607338	PrimaryExpression	"""[Qr]delete 0x%lx: [%d,%d)\\n"""		5607327	0					
ANR	5607339	Argument	( ulong ) pcr		5607327	2					
ANR	5607340	CastExpression	( ulong ) pcr		5607327	0					
ANR	5607341	CastTarget	ulong		5607327	0					
ANR	5607342	Identifier	pcr		5607327	1					
ANR	5607343	Argument	pcr -> rmin		5607327	3					
ANR	5607344	PtrMemberAccess	pcr -> rmin		5607327	0					
ANR	5607345	Identifier	pcr		5607327	0					
ANR	5607346	Identifier	rmin		5607327	1					
ANR	5607347	Argument	pcr -> rmax		5607327	4					
ANR	5607348	PtrMemberAccess	pcr -> rmax		5607327	0					
ANR	5607349	Identifier	pcr		5607327	0					
ANR	5607350	Identifier	rmax		5607327	1					
ANR	5607351	ExpressionStatement	pcr -> prev -> next = pcr -> next	2189:4:81406:81433	5607327	1	True				
ANR	5607352	AssignmentExpression	pcr -> prev -> next = pcr -> next		5607327	0		=			
ANR	5607353	PtrMemberAccess	pcr -> prev -> next		5607327	0					
ANR	5607354	PtrMemberAccess	pcr -> prev		5607327	0					
ANR	5607355	Identifier	pcr		5607327	0					
ANR	5607356	Identifier	prev		5607327	1					
ANR	5607357	Identifier	next		5607327	1					
ANR	5607358	PtrMemberAccess	pcr -> next		5607327	1					
ANR	5607359	Identifier	pcr		5607327	0					
ANR	5607360	Identifier	next		5607327	1					
ANR	5607361	ExpressionStatement	pcr -> next -> prev = pcr -> prev	2190:4:81439:81466	5607327	2	True				
ANR	5607362	AssignmentExpression	pcr -> next -> prev = pcr -> prev		5607327	0		=			
ANR	5607363	PtrMemberAccess	pcr -> next -> prev		5607327	0					
ANR	5607364	PtrMemberAccess	pcr -> next		5607327	0					
ANR	5607365	Identifier	pcr		5607327	0					
ANR	5607366	Identifier	next		5607327	1					
ANR	5607367	Identifier	prev		5607327	1					
ANR	5607368	PtrMemberAccess	pcr -> prev		5607327	1					
ANR	5607369	Identifier	pcr		5607327	0					
ANR	5607370	Identifier	prev		5607327	1					
ANR	5607371	ExpressionStatement	pcr -> next = pcrl -> freed	2191:4:81472:81495	5607327	3	True				
ANR	5607372	AssignmentExpression	pcr -> next = pcrl -> freed		5607327	0		=			
ANR	5607373	PtrMemberAccess	pcr -> next		5607327	0					
ANR	5607374	Identifier	pcr		5607327	0					
ANR	5607375	Identifier	next		5607327	1					
ANR	5607376	PtrMemberAccess	pcrl -> freed		5607327	1					
ANR	5607377	Identifier	pcrl		5607327	0					
ANR	5607378	Identifier	freed		5607327	1					
ANR	5607379	ExpressionStatement	pcrl -> freed = pcr	2192:4:81501:81518	5607327	4	True				
ANR	5607380	AssignmentExpression	pcrl -> freed = pcr		5607327	0		=			
ANR	5607381	PtrMemberAccess	pcrl -> freed		5607327	0					
ANR	5607382	Identifier	pcrl		5607327	0					
ANR	5607383	Identifier	freed		5607327	1					
ANR	5607384	Identifier	pcr		5607327	1					
ANR	5607385	ReturnType	static void		5607327	1					
ANR	5607386	Identifier	range_delete		5607327	2					
ANR	5607387	ParameterList	"coord_range_list_t * pcrl , coord_range_t * pcr"		5607327	3					
ANR	5607388	Parameter	coord_range_list_t * pcrl	2185:13:81255:81278	5607327	0	True				
ANR	5607389	ParameterType	coord_range_list_t *		5607327	0					
ANR	5607390	Identifier	pcrl		5607327	1					
ANR	5607391	Parameter	coord_range_t * pcr	2185:39:81281:81298	5607327	1	True				
ANR	5607392	ParameterType	coord_range_t *		5607327	0					
ANR	5607393	Identifier	pcr		5607327	1					
ANR	5607394	CFGEntryNode	ENTRY		5607327		True				
ANR	5607395	CFGExitNode	EXIT		5607327		True				
ANR	5607396	Symbol	* pcrl		5607327						
ANR	5607397	Symbol	pcr -> next -> prev		5607327						
ANR	5607398	Symbol	* pcr -> next		5607327						
ANR	5607399	Symbol	* pcr		5607327						
ANR	5607400	Symbol	pcr -> next		5607327						
ANR	5607401	Symbol	* pcr -> prev		5607327						
ANR	5607402	Symbol	pcrl -> freed		5607327						
ANR	5607403	Symbol	pcr -> rmax		5607327						
ANR	5607404	Symbol	pcr -> prev		5607327						
ANR	5607405	Symbol	* * pcr		5607327						
ANR	5607406	Symbol	pcr -> prev -> next		5607327						
ANR	5607407	Symbol	pcrl		5607327						
ANR	5607408	Symbol	pcr		5607327						
ANR	5607409	Symbol	pcr -> rmin		5607327						
ANR	5607410	Function	range_list_clear	2195:0:81523:81723							
ANR	5607411	FunctionDef	range_list_clear (coord_range_list_t * pcrl)		5607410	0					
ANR	5607412	CompoundStatement		2197:0:81578:81723	5607410	0					
ANR	5607413	ExpressionStatement	"if_debug0 ( 'Q' , ""[Qr]clearing\\n"" )"	2198:4:81584:81616	5607410	0	True				
ANR	5607414	CallExpression	"if_debug0 ( 'Q' , ""[Qr]clearing\\n"" )"		5607410	0					
ANR	5607415	Callee	if_debug0		5607410	0					
ANR	5607416	Identifier	if_debug0		5607410	0					
ANR	5607417	ArgumentList	'Q'		5607410	1					
ANR	5607418	Argument	'Q'		5607410	0					
ANR	5607419	PrimaryExpression	'Q'		5607410	0					
ANR	5607420	Argument	"""[Qr]clearing\\n"""		5607410	1					
ANR	5607421	PrimaryExpression	"""[Qr]clearing\\n"""		5607410	0					
ANR	5607422	ExpressionStatement	pcrl -> first . next = & pcrl -> last	2199:4:81622:81652	5607410	1	True				
ANR	5607423	AssignmentExpression	pcrl -> first . next = & pcrl -> last		5607410	0		=			
ANR	5607424	MemberAccess	pcrl -> first . next		5607410	0					
ANR	5607425	PtrMemberAccess	pcrl -> first		5607410	0					
ANR	5607426	Identifier	pcrl		5607410	0					
ANR	5607427	Identifier	first		5607410	1					
ANR	5607428	Identifier	next		5607410	1					
ANR	5607429	UnaryOperationExpression	& pcrl -> last		5607410	1					
ANR	5607430	UnaryOperator	&		5607410	0					
ANR	5607431	PtrMemberAccess	pcrl -> last		5607410	1					
ANR	5607432	Identifier	pcrl		5607410	0					
ANR	5607433	Identifier	last		5607410	1					
ANR	5607434	ExpressionStatement	pcrl -> last . prev = & pcrl -> first	2200:4:81658:81688	5607410	2	True				
ANR	5607435	AssignmentExpression	pcrl -> last . prev = & pcrl -> first		5607410	0		=			
ANR	5607436	MemberAccess	pcrl -> last . prev		5607410	0					
ANR	5607437	PtrMemberAccess	pcrl -> last		5607410	0					
ANR	5607438	Identifier	pcrl		5607410	0					
ANR	5607439	Identifier	last		5607410	1					
ANR	5607440	Identifier	prev		5607410	1					
ANR	5607441	UnaryOperationExpression	& pcrl -> first		5607410	1					
ANR	5607442	UnaryOperator	&		5607410	0					
ANR	5607443	PtrMemberAccess	pcrl -> first		5607410	1					
ANR	5607444	Identifier	pcrl		5607410	0					
ANR	5607445	Identifier	first		5607410	1					
ANR	5607446	ExpressionStatement	pcrl -> current = & pcrl -> last	2201:4:81694:81721	5607410	3	True				
ANR	5607447	AssignmentExpression	pcrl -> current = & pcrl -> last		5607410	0		=			
ANR	5607448	PtrMemberAccess	pcrl -> current		5607410	0					
ANR	5607449	Identifier	pcrl		5607410	0					
ANR	5607450	Identifier	current		5607410	1					
ANR	5607451	UnaryOperationExpression	& pcrl -> last		5607410	1					
ANR	5607452	UnaryOperator	&		5607410	0					
ANR	5607453	PtrMemberAccess	pcrl -> last		5607410	1					
ANR	5607454	Identifier	pcrl		5607410	0					
ANR	5607455	Identifier	last		5607410	1					
ANR	5607456	ReturnType	static void		5607410	1					
ANR	5607457	Identifier	range_list_clear		5607410	2					
ANR	5607458	ParameterList	coord_range_list_t * pcrl		5607410	3					
ANR	5607459	Parameter	coord_range_list_t * pcrl	2196:17:81552:81575	5607410	0	True				
ANR	5607460	ParameterType	coord_range_list_t *		5607410	0					
ANR	5607461	Identifier	pcrl		5607410	1					
ANR	5607462	CFGEntryNode	ENTRY		5607410		True				
ANR	5607463	CFGExitNode	EXIT		5607410		True				
ANR	5607464	Symbol	* pcrl		5607410						
ANR	5607465	Symbol	pcrl -> first . next		5607410						
ANR	5607466	Symbol	pcrl -> last . prev		5607410						
ANR	5607467	Symbol	& pcrl -> last		5607410						
ANR	5607468	Symbol	pcrl		5607410						
ANR	5607469	Symbol	& pcrl -> first		5607410						
ANR	5607470	Symbol	pcrl -> first		5607410						
ANR	5607471	Symbol	pcrl -> current		5607410						
ANR	5607472	Symbol	pcrl -> last		5607410						
ANR	5607473	DeclStmt									
ANR	5607474	Decl							void	void ( coord_range_list_t * )	range_list_clear
ANR	5607475	Function	range_list_init	2208:0:81878:82368							
ANR	5607476	FunctionDef	"range_list_init (coord_range_list_t * pcrl , coord_range_t * pcr_local , int num_local , gs_memory_t * mem)"		5607475	0					
ANR	5607477	CompoundStatement		2211:0:82007:82368	5607475	0					
ANR	5607478	ExpressionStatement	pcrl -> memory = mem	2212:4:82013:82031	5607475	0	True				
ANR	5607479	AssignmentExpression	pcrl -> memory = mem		5607475	0		=			
ANR	5607480	PtrMemberAccess	pcrl -> memory		5607475	0					
ANR	5607481	Identifier	pcrl		5607475	0					
ANR	5607482	Identifier	memory		5607475	1					
ANR	5607483	Identifier	mem		5607475	1					
ANR	5607484	ExpressionStatement	pcrl -> local . first = pcrl -> local . next = pcr_local	2213:4:82037:82085	5607475	1	True				
ANR	5607485	AssignmentExpression	pcrl -> local . first = pcrl -> local . next = pcr_local		5607475	0		=			
ANR	5607486	MemberAccess	pcrl -> local . first		5607475	0					
ANR	5607487	PtrMemberAccess	pcrl -> local		5607475	0					
ANR	5607488	Identifier	pcrl		5607475	0					
ANR	5607489	Identifier	local		5607475	1					
ANR	5607490	Identifier	first		5607475	1					
ANR	5607491	AssignmentExpression	pcrl -> local . next = pcr_local		5607475	1		=			
ANR	5607492	MemberAccess	pcrl -> local . next		5607475	0					
ANR	5607493	PtrMemberAccess	pcrl -> local		5607475	0					
ANR	5607494	Identifier	pcrl		5607475	0					
ANR	5607495	Identifier	local		5607475	1					
ANR	5607496	Identifier	next		5607475	1					
ANR	5607497	Identifier	pcr_local		5607475	1					
ANR	5607498	ExpressionStatement	pcrl -> local . limit = pcr_local + num_local	2214:4:82091:82132	5607475	2	True				
ANR	5607499	AssignmentExpression	pcrl -> local . limit = pcr_local + num_local		5607475	0		=			
ANR	5607500	MemberAccess	pcrl -> local . limit		5607475	0					
ANR	5607501	PtrMemberAccess	pcrl -> local		5607475	0					
ANR	5607502	Identifier	pcrl		5607475	0					
ANR	5607503	Identifier	local		5607475	1					
ANR	5607504	Identifier	limit		5607475	1					
ANR	5607505	AdditiveExpression	pcr_local + num_local		5607475	1		+			
ANR	5607506	Identifier	pcr_local		5607475	0					
ANR	5607507	Identifier	num_local		5607475	1					
ANR	5607508	ExpressionStatement	pcrl -> allocated = pcrl -> freed = 0	2215:4:82138:82171	5607475	3	True				
ANR	5607509	AssignmentExpression	pcrl -> allocated = pcrl -> freed = 0		5607475	0		=			
ANR	5607510	PtrMemberAccess	pcrl -> allocated		5607475	0					
ANR	5607511	Identifier	pcrl		5607475	0					
ANR	5607512	Identifier	allocated		5607475	1					
ANR	5607513	AssignmentExpression	pcrl -> freed = 0		5607475	1		=			
ANR	5607514	PtrMemberAccess	pcrl -> freed		5607475	0					
ANR	5607515	Identifier	pcrl		5607475	0					
ANR	5607516	Identifier	freed		5607475	1					
ANR	5607517	PrimaryExpression	0		5607475	1					
ANR	5607518	ExpressionStatement	pcrl -> first . rmin = pcrl -> first . rmax = MIN_COORD_VALUE	2216:4:82177:82230	5607475	4	True				
ANR	5607519	AssignmentExpression	pcrl -> first . rmin = pcrl -> first . rmax = MIN_COORD_VALUE		5607475	0		=			
ANR	5607520	MemberAccess	pcrl -> first . rmin		5607475	0					
ANR	5607521	PtrMemberAccess	pcrl -> first		5607475	0					
ANR	5607522	Identifier	pcrl		5607475	0					
ANR	5607523	Identifier	first		5607475	1					
ANR	5607524	Identifier	rmin		5607475	1					
ANR	5607525	AssignmentExpression	pcrl -> first . rmax = MIN_COORD_VALUE		5607475	1		=			
ANR	5607526	MemberAccess	pcrl -> first . rmax		5607475	0					
ANR	5607527	PtrMemberAccess	pcrl -> first		5607475	0					
ANR	5607528	Identifier	pcrl		5607475	0					
ANR	5607529	Identifier	first		5607475	1					
ANR	5607530	Identifier	rmax		5607475	1					
ANR	5607531	Identifier	MIN_COORD_VALUE		5607475	1					
ANR	5607532	ExpressionStatement	pcrl -> first . prev = 0	2217:4:82236:82256	5607475	5	True				
ANR	5607533	AssignmentExpression	pcrl -> first . prev = 0		5607475	0		=			
ANR	5607534	MemberAccess	pcrl -> first . prev		5607475	0					
ANR	5607535	PtrMemberAccess	pcrl -> first		5607475	0					
ANR	5607536	Identifier	pcrl		5607475	0					
ANR	5607537	Identifier	first		5607475	1					
ANR	5607538	Identifier	prev		5607475	1					
ANR	5607539	PrimaryExpression	0		5607475	1					
ANR	5607540	ExpressionStatement	pcrl -> last . rmin = pcrl -> last . rmax = MAX_COORD_VALUE	2218:4:82262:82313	5607475	6	True				
ANR	5607541	AssignmentExpression	pcrl -> last . rmin = pcrl -> last . rmax = MAX_COORD_VALUE		5607475	0		=			
ANR	5607542	MemberAccess	pcrl -> last . rmin		5607475	0					
ANR	5607543	PtrMemberAccess	pcrl -> last		5607475	0					
ANR	5607544	Identifier	pcrl		5607475	0					
ANR	5607545	Identifier	last		5607475	1					
ANR	5607546	Identifier	rmin		5607475	1					
ANR	5607547	AssignmentExpression	pcrl -> last . rmax = MAX_COORD_VALUE		5607475	1		=			
ANR	5607548	MemberAccess	pcrl -> last . rmax		5607475	0					
ANR	5607549	PtrMemberAccess	pcrl -> last		5607475	0					
ANR	5607550	Identifier	pcrl		5607475	0					
ANR	5607551	Identifier	last		5607475	1					
ANR	5607552	Identifier	rmax		5607475	1					
ANR	5607553	Identifier	MAX_COORD_VALUE		5607475	1					
ANR	5607554	ExpressionStatement	pcrl -> last . next = 0	2219:4:82319:82338	5607475	7	True				
ANR	5607555	AssignmentExpression	pcrl -> last . next = 0		5607475	0		=			
ANR	5607556	MemberAccess	pcrl -> last . next		5607475	0					
ANR	5607557	PtrMemberAccess	pcrl -> last		5607475	0					
ANR	5607558	Identifier	pcrl		5607475	0					
ANR	5607559	Identifier	last		5607475	1					
ANR	5607560	Identifier	next		5607475	1					
ANR	5607561	PrimaryExpression	0		5607475	1					
ANR	5607562	ExpressionStatement	range_list_clear ( pcrl )	2220:4:82344:82366	5607475	8	True				
ANR	5607563	CallExpression	range_list_clear ( pcrl )		5607475	0					
ANR	5607564	Callee	range_list_clear		5607475	0					
ANR	5607565	Identifier	range_list_clear		5607475	0					
ANR	5607566	ArgumentList	pcrl		5607475	1					
ANR	5607567	Argument	pcrl		5607475	0					
ANR	5607568	Identifier	pcrl		5607475	0					
ANR	5607569	ReturnType	static void		5607475	1					
ANR	5607570	Identifier	range_list_init		5607475	2					
ANR	5607571	ParameterList	"coord_range_list_t * pcrl , coord_range_t * pcr_local , int num_local , gs_memory_t * mem"		5607475	3					
ANR	5607572	Parameter	coord_range_list_t * pcrl	2209:16:81906:81929	5607475	0	True				
ANR	5607573	ParameterType	coord_range_list_t *		5607475	0					
ANR	5607574	Identifier	pcrl		5607475	1					
ANR	5607575	Parameter	coord_range_t * pcr_local	2209:42:81932:81955	5607475	1	True				
ANR	5607576	ParameterType	coord_range_t *		5607475	0					
ANR	5607577	Identifier	pcr_local		5607475	1					
ANR	5607578	Parameter	int num_local	2210:16:81974:81986	5607475	2	True				
ANR	5607579	ParameterType	int		5607475	0					
ANR	5607580	Identifier	num_local		5607475	1					
ANR	5607581	Parameter	gs_memory_t * mem	2210:31:81989:82004	5607475	3	True				
ANR	5607582	ParameterType	gs_memory_t *		5607475	0					
ANR	5607583	Identifier	mem		5607475	1					
ANR	5607584	CFGEntryNode	ENTRY		5607475		True				
ANR	5607585	CFGExitNode	EXIT		5607475		True				
ANR	5607586	Symbol	* pcrl		5607475						
ANR	5607587	Symbol	pcrl -> last . rmax		5607475						
ANR	5607588	Symbol	pcrl -> local . limit		5607475						
ANR	5607589	Symbol	pcrl -> local . first		5607475						
ANR	5607590	Symbol	pcr_local		5607475						
ANR	5607591	Symbol	num_local		5607475						
ANR	5607592	Symbol	MAX_COORD_VALUE		5607475						
ANR	5607593	Symbol	MIN_COORD_VALUE		5607475						
ANR	5607594	Symbol	pcrl -> memory		5607475						
ANR	5607595	Symbol	pcrl -> allocated		5607475						
ANR	5607596	Symbol	pcrl -> last		5607475						
ANR	5607597	Symbol	pcrl -> local		5607475						
ANR	5607598	Symbol	pcrl -> freed		5607475						
ANR	5607599	Symbol	pcrl -> last . rmin		5607475						
ANR	5607600	Symbol	mem		5607475						
ANR	5607601	Symbol	pcrl -> local . next		5607475						
ANR	5607602	Symbol	pcrl -> first . rmax		5607475						
ANR	5607603	Symbol	pcrl -> first . prev		5607475						
ANR	5607604	Symbol	pcrl		5607475						
ANR	5607605	Symbol	pcrl -> first . rmin		5607475						
ANR	5607606	Symbol	pcrl -> first		5607475						
ANR	5607607	Symbol	pcrl -> last . next		5607475						
ANR	5607608	Function	range_list_reset	2224:0:82429:82652							
ANR	5607609	FunctionDef	range_list_reset (coord_range_list_t * pcrl)		5607608	0					
ANR	5607610	CompoundStatement		2226:0:82484:82652	5607608	0					
ANR	5607611	IfStatement	if ( pcrl -> first . next != & pcrl -> last )		5607608	0					
ANR	5607612	Condition	pcrl -> first . next != & pcrl -> last	2227:8:82494:82524	5607608	0	True				
ANR	5607613	EqualityExpression	pcrl -> first . next != & pcrl -> last		5607608	0		!=			
ANR	5607614	MemberAccess	pcrl -> first . next		5607608	0					
ANR	5607615	PtrMemberAccess	pcrl -> first		5607608	0					
ANR	5607616	Identifier	pcrl		5607608	0					
ANR	5607617	Identifier	first		5607608	1					
ANR	5607618	Identifier	next		5607608	1					
ANR	5607619	UnaryOperationExpression	& pcrl -> last		5607608	1					
ANR	5607620	UnaryOperator	&		5607608	0					
ANR	5607621	PtrMemberAccess	pcrl -> last		5607608	1					
ANR	5607622	Identifier	pcrl		5607608	0					
ANR	5607623	Identifier	last		5607608	1					
ANR	5607624	CompoundStatement		2:41:42:42	5607608	1					
ANR	5607625	ExpressionStatement	pcrl -> last . prev -> next = pcrl -> freed	2228:8:82537:82572	5607608	0	True				
ANR	5607626	AssignmentExpression	pcrl -> last . prev -> next = pcrl -> freed		5607608	0		=			
ANR	5607627	PtrMemberAccess	pcrl -> last . prev -> next		5607608	0					
ANR	5607628	MemberAccess	pcrl -> last . prev		5607608	0					
ANR	5607629	PtrMemberAccess	pcrl -> last		5607608	0					
ANR	5607630	Identifier	pcrl		5607608	0					
ANR	5607631	Identifier	last		5607608	1					
ANR	5607632	Identifier	prev		5607608	1					
ANR	5607633	Identifier	next		5607608	1					
ANR	5607634	PtrMemberAccess	pcrl -> freed		5607608	1					
ANR	5607635	Identifier	pcrl		5607608	0					
ANR	5607636	Identifier	freed		5607608	1					
ANR	5607637	ExpressionStatement	pcrl -> freed = pcrl -> first . next	2229:8:82582:82612	5607608	1	True				
ANR	5607638	AssignmentExpression	pcrl -> freed = pcrl -> first . next		5607608	0		=			
ANR	5607639	PtrMemberAccess	pcrl -> freed		5607608	0					
ANR	5607640	Identifier	pcrl		5607608	0					
ANR	5607641	Identifier	freed		5607608	1					
ANR	5607642	MemberAccess	pcrl -> first . next		5607608	1					
ANR	5607643	PtrMemberAccess	pcrl -> first		5607608	0					
ANR	5607644	Identifier	pcrl		5607608	0					
ANR	5607645	Identifier	first		5607608	1					
ANR	5607646	Identifier	next		5607608	1					
ANR	5607647	ExpressionStatement	range_list_clear ( pcrl )	2230:8:82622:82644	5607608	2	True				
ANR	5607648	CallExpression	range_list_clear ( pcrl )		5607608	0					
ANR	5607649	Callee	range_list_clear		5607608	0					
ANR	5607650	Identifier	range_list_clear		5607608	0					
ANR	5607651	ArgumentList	pcrl		5607608	1					
ANR	5607652	Argument	pcrl		5607608	0					
ANR	5607653	Identifier	pcrl		5607608	0					
ANR	5607654	ReturnType	static void		5607608	1					
ANR	5607655	Identifier	range_list_reset		5607608	2					
ANR	5607656	ParameterList	coord_range_list_t * pcrl		5607608	3					
ANR	5607657	Parameter	coord_range_list_t * pcrl	2225:17:82458:82481	5607608	0	True				
ANR	5607658	ParameterType	coord_range_list_t *		5607608	0					
ANR	5607659	Identifier	pcrl		5607608	1					
ANR	5607660	CFGEntryNode	ENTRY		5607608		True				
ANR	5607661	CFGExitNode	EXIT		5607608		True				
ANR	5607662	Symbol	pcrl -> freed		5607608						
ANR	5607663	Symbol	pcrl -> last . prev -> next		5607608						
ANR	5607664	Symbol	* pcrl		5607608						
ANR	5607665	Symbol	pcrl -> first . next		5607608						
ANR	5607666	Symbol	* * pcrl		5607608						
ANR	5607667	Symbol	pcrl -> last . prev		5607608						
ANR	5607668	Symbol	& pcrl -> last		5607608						
ANR	5607669	Symbol	* pcrl -> last		5607608						
ANR	5607670	Symbol	pcrl		5607608						
ANR	5607671	Symbol	* pcrl -> last . prev		5607608						
ANR	5607672	Symbol	pcrl -> first		5607608						
ANR	5607673	Symbol	pcrl -> last		5607608						
ANR	5607674	Function	range_list_rescan	2239:0:82845:82948							
ANR	5607675	FunctionDef	range_list_rescan (coord_range_list_t * pcrl)		5607674	0					
ANR	5607676	CompoundStatement		2241:0:82908:82948	5607674	0					
ANR	5607677	ExpressionStatement	pcrl -> current = pcrl -> first . next	2242:4:82914:82946	5607674	0	True				
ANR	5607678	AssignmentExpression	pcrl -> current = pcrl -> first . next		5607674	0		=			
ANR	5607679	PtrMemberAccess	pcrl -> current		5607674	0					
ANR	5607680	Identifier	pcrl		5607674	0					
ANR	5607681	Identifier	current		5607674	1					
ANR	5607682	MemberAccess	pcrl -> first . next		5607674	1					
ANR	5607683	PtrMemberAccess	pcrl -> first		5607674	0					
ANR	5607684	Identifier	pcrl		5607674	0					
ANR	5607685	Identifier	first		5607674	1					
ANR	5607686	Identifier	next		5607674	1					
ANR	5607687	ReturnType	static inline void		5607674	1					
ANR	5607688	Identifier	range_list_rescan		5607674	2					
ANR	5607689	ParameterList	coord_range_list_t * pcrl		5607674	3					
ANR	5607690	Parameter	coord_range_list_t * pcrl	2240:18:82882:82905	5607674	0	True				
ANR	5607691	ParameterType	coord_range_list_t *		5607674	0					
ANR	5607692	Identifier	pcrl		5607674	1					
ANR	5607693	CFGEntryNode	ENTRY		5607674		True				
ANR	5607694	CFGExitNode	EXIT		5607674		True				
ANR	5607695	Symbol	* pcrl		5607674						
ANR	5607696	Symbol	pcrl -> first . next		5607674						
ANR	5607697	Symbol	pcrl		5607674						
ANR	5607698	Symbol	pcrl -> first		5607674						
ANR	5607699	Symbol	pcrl -> current		5607674						
ANR	5607700	Function	range_list_free	2246:0:82976:83248							
ANR	5607701	FunctionDef	range_list_free (coord_range_list_t * pcrl)		5607700	0					
ANR	5607702	CompoundStatement		2248:0:83030:83248	5607700	0					
ANR	5607703	IdentifierDeclStatement	coord_range_t * pcr ;	2249:4:83036:83054	5607700	0	True				
ANR	5607704	IdentifierDecl	* pcr		5607700	0					
ANR	5607705	IdentifierDeclType	coord_range_t *		5607700	0					
ANR	5607706	Identifier	pcr		5607700	1					
ANR	5607707	WhileStatement	while ( ( pcr = pcrl -> allocated ) != 0 )		5607700	1					
ANR	5607708	Condition	( pcr = pcrl -> allocated ) != 0	2251:11:83068:83095	5607700	0	True				
ANR	5607709	EqualityExpression	( pcr = pcrl -> allocated ) != 0		5607700	0		!=			
ANR	5607710	AssignmentExpression	pcr = pcrl -> allocated		5607700	0		=			
ANR	5607711	Identifier	pcr		5607700	0					
ANR	5607712	PtrMemberAccess	pcrl -> allocated		5607700	1					
ANR	5607713	Identifier	pcrl		5607700	0					
ANR	5607714	Identifier	allocated		5607700	1					
ANR	5607715	PrimaryExpression	0		5607700	1					
ANR	5607716	CompoundStatement		5:8:77:114	5607700	1					
ANR	5607717	IdentifierDeclStatement	coord_range_t * next = pcr -> alloc_next ;	2252:8:83108:83145	5607700	0	True				
ANR	5607718	IdentifierDecl	* next = pcr -> alloc_next		5607700	0					
ANR	5607719	IdentifierDeclType	coord_range_t *		5607700	0					
ANR	5607720	Identifier	next		5607700	1					
ANR	5607721	AssignmentExpression	* next = pcr -> alloc_next		5607700	2		=			
ANR	5607722	Identifier	next		5607700	0					
ANR	5607723	PtrMemberAccess	pcr -> alloc_next		5607700	1					
ANR	5607724	Identifier	pcr		5607700	0					
ANR	5607725	Identifier	alloc_next		5607700	1					
ANR	5607726	ExpressionStatement	"gs_free_object ( pcrl -> memory , pcr , ""range_list_free"" )"	2254:8:83156:83208	5607700	1	True				
ANR	5607727	CallExpression	"gs_free_object ( pcrl -> memory , pcr , ""range_list_free"" )"		5607700	0					
ANR	5607728	Callee	gs_free_object		5607700	0					
ANR	5607729	Identifier	gs_free_object		5607700	0					
ANR	5607730	ArgumentList	pcrl -> memory		5607700	1					
ANR	5607731	Argument	pcrl -> memory		5607700	0					
ANR	5607732	PtrMemberAccess	pcrl -> memory		5607700	0					
ANR	5607733	Identifier	pcrl		5607700	0					
ANR	5607734	Identifier	memory		5607700	1					
ANR	5607735	Argument	pcr		5607700	1					
ANR	5607736	Identifier	pcr		5607700	0					
ANR	5607737	Argument	"""range_list_free"""		5607700	2					
ANR	5607738	PrimaryExpression	"""range_list_free"""		5607700	0					
ANR	5607739	ExpressionStatement	pcrl -> allocated = next	2255:8:83218:83240	5607700	2	True				
ANR	5607740	AssignmentExpression	pcrl -> allocated = next		5607700	0		=			
ANR	5607741	PtrMemberAccess	pcrl -> allocated		5607700	0					
ANR	5607742	Identifier	pcrl		5607700	0					
ANR	5607743	Identifier	allocated		5607700	1					
ANR	5607744	Identifier	next		5607700	1					
ANR	5607745	ReturnType	static void		5607700	1					
ANR	5607746	Identifier	range_list_free		5607700	2					
ANR	5607747	ParameterList	coord_range_list_t * pcrl		5607700	3					
ANR	5607748	Parameter	coord_range_list_t * pcrl	2247:16:83004:83027	5607700	0	True				
ANR	5607749	ParameterType	coord_range_list_t *		5607700	0					
ANR	5607750	Identifier	pcrl		5607700	1					
ANR	5607751	CFGEntryNode	ENTRY		5607700		True				
ANR	5607752	CFGExitNode	EXIT		5607700		True				
ANR	5607753	Symbol	next		5607700						
ANR	5607754	Symbol	* pcrl		5607700						
ANR	5607755	Symbol	pcrl		5607700						
ANR	5607756	Symbol	* pcr		5607700						
ANR	5607757	Symbol	pcr -> alloc_next		5607700						
ANR	5607758	Symbol	pcr		5607700						
ANR	5607759	Symbol	pcrl -> allocated		5607700						
ANR	5607760	Symbol	pcrl -> memory		5607700						
ANR	5607761	Function	range_list_add	2260:0:83270:85617							
ANR	5607762	FunctionDef	"range_list_add (coord_range_list_t * pcrl , coord_value_t rmin , coord_value_t rmax)"		5607761	0					
ANR	5607763	CompoundStatement		2262:0:83362:85617	5607761	0					
ANR	5607764	IdentifierDeclStatement	coord_range_t * pcr = pcrl -> current ;	2263:4:83368:83402	5607761	0	True				
ANR	5607765	IdentifierDecl	* pcr = pcrl -> current		5607761	0					
ANR	5607766	IdentifierDeclType	coord_range_t *		5607761	0					
ANR	5607767	Identifier	pcr		5607761	1					
ANR	5607768	AssignmentExpression	* pcr = pcrl -> current		5607761	2		=			
ANR	5607769	Identifier	pcr		5607761	0					
ANR	5607770	PtrMemberAccess	pcrl -> current		5607761	1					
ANR	5607771	Identifier	pcrl		5607761	0					
ANR	5607772	Identifier	current		5607761	1					
ANR	5607773	IfStatement	if ( rmin >= rmax )		5607761	1					
ANR	5607774	Condition	rmin >= rmax	2265:8:83413:83424	5607761	0	True				
ANR	5607775	RelationalExpression	rmin >= rmax		5607761	0		>=			
ANR	5607776	Identifier	rmin		5607761	0					
ANR	5607777	Identifier	rmax		5607761	1					
ANR	5607778	ReturnStatement	return 0 ;	2266:8:83435:83443	5607761	1	True				
ANR	5607779	PrimaryExpression	0		5607761	0					
ANR	5607780	Label	top :	2271:1:83609:83612	5607761	2	True				
ANR	5607781	Identifier	top		5607761	0					
ANR	5607782	IfStatement	if ( rmax < pcr -> rmin )		5607761	3					
ANR	5607783	Condition	rmax < pcr -> rmin	2272:8:83622:83637	5607761	0	True				
ANR	5607784	RelationalExpression	rmax < pcr -> rmin		5607761	0		<			
ANR	5607785	Identifier	rmax		5607761	0					
ANR	5607786	PtrMemberAccess	pcr -> rmin		5607761	1					
ANR	5607787	Identifier	pcr		5607761	0					
ANR	5607788	Identifier	rmin		5607761	1					
ANR	5607789	CompoundStatement		11:26:277:277	5607761	1					
ANR	5607790	IfStatement	if ( rmin > pcr -> prev -> rmax )		5607761	0					
ANR	5607791	Condition	rmin > pcr -> prev -> rmax	2273:12:83654:83675	5607761	0	True				
ANR	5607792	RelationalExpression	rmin > pcr -> prev -> rmax		5607761	0		>			
ANR	5607793	Identifier	rmin		5607761	0					
ANR	5607794	PtrMemberAccess	pcr -> prev -> rmax		5607761	1					
ANR	5607795	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5607796	Identifier	pcr		5607761	0					
ANR	5607797	Identifier	prev		5607761	1					
ANR	5607798	Identifier	rmax		5607761	1					
ANR	5607799	GotoStatement	goto ins ;	2274:12:83690:83698	5607761	1	True				
ANR	5607800	Identifier	ins		5607761	0					
ANR	5607801	ExpressionStatement	pcr = pcr -> prev	2275:8:83708:83723	5607761	1	True				
ANR	5607802	AssignmentExpression	pcr = pcr -> prev		5607761	0		=			
ANR	5607803	Identifier	pcr		5607761	0					
ANR	5607804	PtrMemberAccess	pcr -> prev		5607761	1					
ANR	5607805	Identifier	pcr		5607761	0					
ANR	5607806	Identifier	prev		5607761	1					
ANR	5607807	GotoStatement	goto top ;	2276:8:83733:83741	5607761	2	True				
ANR	5607808	Identifier	top		5607761	0					
ANR	5607809	IfStatement	if ( rmin > pcr -> rmax )		5607761	4					
ANR	5607810	Condition	rmin > pcr -> rmax	2278:8:83757:83772	5607761	0	True				
ANR	5607811	RelationalExpression	rmin > pcr -> rmax		5607761	0		>			
ANR	5607812	Identifier	rmin		5607761	0					
ANR	5607813	PtrMemberAccess	pcr -> rmax		5607761	1					
ANR	5607814	Identifier	pcr		5607761	0					
ANR	5607815	Identifier	rmax		5607761	1					
ANR	5607816	CompoundStatement		17:26:412:412	5607761	1					
ANR	5607817	ExpressionStatement	pcr = pcr -> next	2279:8:83785:83800	5607761	0	True				
ANR	5607818	AssignmentExpression	pcr = pcr -> next		5607761	0		=			
ANR	5607819	Identifier	pcr		5607761	0					
ANR	5607820	PtrMemberAccess	pcr -> next		5607761	1					
ANR	5607821	Identifier	pcr		5607761	0					
ANR	5607822	Identifier	next		5607761	1					
ANR	5607823	IfStatement	if ( rmax < pcr -> rmin )		5607761	1					
ANR	5607824	Condition	rmax < pcr -> rmin	2280:12:83814:83829	5607761	0	True				
ANR	5607825	RelationalExpression	rmax < pcr -> rmin		5607761	0		<			
ANR	5607826	Identifier	rmax		5607761	0					
ANR	5607827	PtrMemberAccess	pcr -> rmin		5607761	1					
ANR	5607828	Identifier	pcr		5607761	0					
ANR	5607829	Identifier	rmin		5607761	1					
ANR	5607830	GotoStatement	goto ins ;	2281:12:83844:83852	5607761	1	True				
ANR	5607831	Identifier	ins		5607761	0					
ANR	5607832	GotoStatement	goto top ;	2282:8:83862:83870	5607761	2	True				
ANR	5607833	Identifier	top		5607761	0					
ANR	5607834	WhileStatement	while ( rmin <= pcr -> prev -> rmax )		5607761	5					
ANR	5607835	Condition	rmin <= pcr -> prev -> rmax	2288:11:84038:84060	5607761	0	True				
ANR	5607836	RelationalExpression	rmin <= pcr -> prev -> rmax		5607761	0		<=			
ANR	5607837	Identifier	rmin		5607761	0					
ANR	5607838	PtrMemberAccess	pcr -> prev -> rmax		5607761	1					
ANR	5607839	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5607840	Identifier	pcr		5607761	0					
ANR	5607841	Identifier	prev		5607761	1					
ANR	5607842	Identifier	rmax		5607761	1					
ANR	5607843	CompoundStatement		27:36:700:700	5607761	1					
ANR	5607844	IfStatement	if ( ! pcr -> prev -> prev )		5607761	0					
ANR	5607845	Condition	! pcr -> prev -> prev	2290:12:84132:84147	5607761	0	True				
ANR	5607846	UnaryOperationExpression	! pcr -> prev -> prev		5607761	0					
ANR	5607847	UnaryOperator	!		5607761	0					
ANR	5607848	PtrMemberAccess	pcr -> prev -> prev		5607761	1					
ANR	5607849	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5607850	Identifier	pcr		5607761	0					
ANR	5607851	Identifier	prev		5607761	1					
ANR	5607852	Identifier	prev		5607761	1					
ANR	5607853	BreakStatement	break ;	2291:12:84162:84167	5607761	1	True				
ANR	5607854	ExpressionStatement	pcr -> rmin = pcr -> prev -> rmin	2292:8:84227:84254	5607761	1	True				
ANR	5607855	AssignmentExpression	pcr -> rmin = pcr -> prev -> rmin		5607761	0		=			
ANR	5607856	PtrMemberAccess	pcr -> rmin		5607761	0					
ANR	5607857	Identifier	pcr		5607761	0					
ANR	5607858	Identifier	rmin		5607761	1					
ANR	5607859	PtrMemberAccess	pcr -> prev -> rmin		5607761	1					
ANR	5607860	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5607861	Identifier	pcr		5607761	0					
ANR	5607862	Identifier	prev		5607761	1					
ANR	5607863	Identifier	rmin		5607761	1					
ANR	5607864	ExpressionStatement	"range_delete ( pcrl , pcr -> prev )"	2293:8:84264:84293	5607761	2	True				
ANR	5607865	CallExpression	"range_delete ( pcrl , pcr -> prev )"		5607761	0					
ANR	5607866	Callee	range_delete		5607761	0					
ANR	5607867	Identifier	range_delete		5607761	0					
ANR	5607868	ArgumentList	pcrl		5607761	1					
ANR	5607869	Argument	pcrl		5607761	0					
ANR	5607870	Identifier	pcrl		5607761	0					
ANR	5607871	Argument	pcr -> prev		5607761	1					
ANR	5607872	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5607873	Identifier	pcr		5607761	0					
ANR	5607874	Identifier	prev		5607761	1					
ANR	5607875	WhileStatement	while ( rmax >= pcr -> next -> rmin )		5607761	6					
ANR	5607876	Condition	rmax >= pcr -> next -> rmin	2295:11:84312:84334	5607761	0	True				
ANR	5607877	RelationalExpression	rmax >= pcr -> next -> rmin		5607761	0		>=			
ANR	5607878	Identifier	rmax		5607761	0					
ANR	5607879	PtrMemberAccess	pcr -> next -> rmin		5607761	1					
ANR	5607880	PtrMemberAccess	pcr -> next		5607761	0					
ANR	5607881	Identifier	pcr		5607761	0					
ANR	5607882	Identifier	next		5607761	1					
ANR	5607883	Identifier	rmin		5607761	1					
ANR	5607884	CompoundStatement		34:36:974:974	5607761	1					
ANR	5607885	IfStatement	if ( ! pcr -> next -> next )		5607761	0					
ANR	5607886	Condition	! pcr -> next -> next	2297:12:84406:84421	5607761	0	True				
ANR	5607887	UnaryOperationExpression	! pcr -> next -> next		5607761	0					
ANR	5607888	UnaryOperator	!		5607761	0					
ANR	5607889	PtrMemberAccess	pcr -> next -> next		5607761	1					
ANR	5607890	PtrMemberAccess	pcr -> next		5607761	0					
ANR	5607891	Identifier	pcr		5607761	0					
ANR	5607892	Identifier	next		5607761	1					
ANR	5607893	Identifier	next		5607761	1					
ANR	5607894	BreakStatement	break ;	2298:12:84436:84441	5607761	1	True				
ANR	5607895	ExpressionStatement	pcr -> rmax = pcr -> next -> rmax	2299:8:84501:84528	5607761	1	True				
ANR	5607896	AssignmentExpression	pcr -> rmax = pcr -> next -> rmax		5607761	0		=			
ANR	5607897	PtrMemberAccess	pcr -> rmax		5607761	0					
ANR	5607898	Identifier	pcr		5607761	0					
ANR	5607899	Identifier	rmax		5607761	1					
ANR	5607900	PtrMemberAccess	pcr -> next -> rmax		5607761	1					
ANR	5607901	PtrMemberAccess	pcr -> next		5607761	0					
ANR	5607902	Identifier	pcr		5607761	0					
ANR	5607903	Identifier	next		5607761	1					
ANR	5607904	Identifier	rmax		5607761	1					
ANR	5607905	ExpressionStatement	"range_delete ( pcrl , pcr -> next )"	2300:8:84538:84567	5607761	2	True				
ANR	5607906	CallExpression	"range_delete ( pcrl , pcr -> next )"		5607761	0					
ANR	5607907	Callee	range_delete		5607761	0					
ANR	5607908	Identifier	range_delete		5607761	0					
ANR	5607909	ArgumentList	pcrl		5607761	1					
ANR	5607910	Argument	pcrl		5607761	0					
ANR	5607911	Identifier	pcrl		5607761	0					
ANR	5607912	Argument	pcr -> next		5607761	1					
ANR	5607913	PtrMemberAccess	pcr -> next		5607761	0					
ANR	5607914	Identifier	pcr		5607761	0					
ANR	5607915	Identifier	next		5607761	1					
ANR	5607916	IfStatement	if ( rmin < pcr -> rmin )		5607761	7					
ANR	5607917	Condition	rmin < pcr -> rmin	2307:8:84813:84828	5607761	0	True				
ANR	5607918	RelationalExpression	rmin < pcr -> rmin		5607761	0		<			
ANR	5607919	Identifier	rmin		5607761	0					
ANR	5607920	PtrMemberAccess	pcr -> rmin		5607761	1					
ANR	5607921	Identifier	pcr		5607761	0					
ANR	5607922	Identifier	rmin		5607761	1					
ANR	5607923	CompoundStatement		46:26:1468:1468	5607761	1					
ANR	5607924	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , rmin , pcr -> rmax )"	2308:8:84841:84935	5607761	0	True				
ANR	5607925	CallExpression	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , rmin , pcr -> rmax )"		5607761	0					
ANR	5607926	Callee	if_debug3		5607761	0					
ANR	5607927	Identifier	if_debug3		5607761	0					
ANR	5607928	ArgumentList	'Q'		5607761	1					
ANR	5607929	Argument	'Q'		5607761	0					
ANR	5607930	PrimaryExpression	'Q'		5607761	0					
ANR	5607931	Argument	"""[Qr]update 0x%lx => [%d,%d)\\n"""		5607761	1					
ANR	5607932	PrimaryExpression	"""[Qr]update 0x%lx => [%d,%d)\\n"""		5607761	0					
ANR	5607933	Argument	( ulong ) pcr		5607761	2					
ANR	5607934	CastExpression	( ulong ) pcr		5607761	0					
ANR	5607935	CastTarget	ulong		5607761	0					
ANR	5607936	Identifier	pcr		5607761	1					
ANR	5607937	Argument	rmin		5607761	3					
ANR	5607938	Identifier	rmin		5607761	0					
ANR	5607939	Argument	pcr -> rmax		5607761	4					
ANR	5607940	PtrMemberAccess	pcr -> rmax		5607761	0					
ANR	5607941	Identifier	pcr		5607761	0					
ANR	5607942	Identifier	rmax		5607761	1					
ANR	5607943	ExpressionStatement	pcr -> rmin = rmin	2310:8:84945:84961	5607761	1	True				
ANR	5607944	AssignmentExpression	pcr -> rmin = rmin		5607761	0		=			
ANR	5607945	PtrMemberAccess	pcr -> rmin		5607761	0					
ANR	5607946	Identifier	pcr		5607761	0					
ANR	5607947	Identifier	rmin		5607761	1					
ANR	5607948	Identifier	rmin		5607761	1					
ANR	5607949	IfStatement	if ( rmax > pcr -> rmax )		5607761	8					
ANR	5607950	Condition	rmax > pcr -> rmax	2312:8:84977:84992	5607761	0	True				
ANR	5607951	RelationalExpression	rmax > pcr -> rmax		5607761	0		>			
ANR	5607952	Identifier	rmax		5607761	0					
ANR	5607953	PtrMemberAccess	pcr -> rmax		5607761	1					
ANR	5607954	Identifier	pcr		5607761	0					
ANR	5607955	Identifier	rmax		5607761	1					
ANR	5607956	CompoundStatement		51:26:1632:1632	5607761	1					
ANR	5607957	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , rmax )"	2313:8:85005:85099	5607761	0	True				
ANR	5607958	CallExpression	"if_debug3 ( 'Q' , ""[Qr]update 0x%lx => [%d,%d)\\n"" , ( ulong ) pcr , pcr -> rmin , rmax )"		5607761	0					
ANR	5607959	Callee	if_debug3		5607761	0					
ANR	5607960	Identifier	if_debug3		5607761	0					
ANR	5607961	ArgumentList	'Q'		5607761	1					
ANR	5607962	Argument	'Q'		5607761	0					
ANR	5607963	PrimaryExpression	'Q'		5607761	0					
ANR	5607964	Argument	"""[Qr]update 0x%lx => [%d,%d)\\n"""		5607761	1					
ANR	5607965	PrimaryExpression	"""[Qr]update 0x%lx => [%d,%d)\\n"""		5607761	0					
ANR	5607966	Argument	( ulong ) pcr		5607761	2					
ANR	5607967	CastExpression	( ulong ) pcr		5607761	0					
ANR	5607968	CastTarget	ulong		5607761	0					
ANR	5607969	Identifier	pcr		5607761	1					
ANR	5607970	Argument	pcr -> rmin		5607761	3					
ANR	5607971	PtrMemberAccess	pcr -> rmin		5607761	0					
ANR	5607972	Identifier	pcr		5607761	0					
ANR	5607973	Identifier	rmin		5607761	1					
ANR	5607974	Argument	rmax		5607761	4					
ANR	5607975	Identifier	rmax		5607761	0					
ANR	5607976	ExpressionStatement	pcr -> rmax = rmax	2315:8:85109:85125	5607761	1	True				
ANR	5607977	AssignmentExpression	pcr -> rmax = rmax		5607761	0		=			
ANR	5607978	PtrMemberAccess	pcr -> rmax		5607761	0					
ANR	5607979	Identifier	pcr		5607761	0					
ANR	5607980	Identifier	rmax		5607761	1					
ANR	5607981	Identifier	rmax		5607761	1					
ANR	5607982	ExpressionStatement	pcrl -> current = pcr -> next	2317:4:85137:85162	5607761	9	True				
ANR	5607983	AssignmentExpression	pcrl -> current = pcr -> next		5607761	0		=			
ANR	5607984	PtrMemberAccess	pcrl -> current		5607761	0					
ANR	5607985	Identifier	pcrl		5607761	0					
ANR	5607986	Identifier	current		5607761	1					
ANR	5607987	PtrMemberAccess	pcr -> next		5607761	1					
ANR	5607988	Identifier	pcr		5607761	0					
ANR	5607989	Identifier	next		5607761	1					
ANR	5607990	ReturnStatement	return 0 ;	2318:4:85168:85176	5607761	10	True				
ANR	5607991	PrimaryExpression	0		5607761	0					
ANR	5607992	Label	ins :	2319:1:85179:85182	5607761	11	True				
ANR	5607993	Identifier	ins		5607761	0					
ANR	5607994	CompoundStatement		61:8:1875:1914	5607761	12					
ANR	5607995	IdentifierDeclStatement	coord_range_t * prev = range_alloc ( pcrl ) ;	2322:8:85238:85277	5607761	0	True				
ANR	5607996	IdentifierDecl	* prev = range_alloc ( pcrl )		5607761	0					
ANR	5607997	IdentifierDeclType	coord_range_t *		5607761	0					
ANR	5607998	Identifier	prev		5607761	1					
ANR	5607999	AssignmentExpression	* prev = range_alloc ( pcrl )		5607761	2		=			
ANR	5608000	Identifier	prev		5607761	0					
ANR	5608001	CallExpression	range_alloc ( pcrl )		5607761	1					
ANR	5608002	Callee	range_alloc		5607761	0					
ANR	5608003	Identifier	range_alloc		5607761	0					
ANR	5608004	ArgumentList	pcrl		5607761	1					
ANR	5608005	Argument	pcrl		5607761	0					
ANR	5608006	Identifier	pcrl		5607761	0					
ANR	5608007	IfStatement	if ( prev == 0 )		5607761	1					
ANR	5608008	Condition	prev == 0	2324:12:85292:85300	5607761	0	True				
ANR	5608009	EqualityExpression	prev == 0		5607761	0		==			
ANR	5608010	Identifier	prev		5607761	0					
ANR	5608011	PrimaryExpression	0		5607761	1					
ANR	5608012	ExpressionStatement	return_error ( gs_error_VMerror )	2325:12:85315:85345	5607761	1	True				
ANR	5608013	CallExpression	return_error ( gs_error_VMerror )		5607761	0					
ANR	5608014	Callee	return_error		5607761	0					
ANR	5608015	Identifier	return_error		5607761	0					
ANR	5608016	ArgumentList	gs_error_VMerror		5607761	1					
ANR	5608017	Argument	gs_error_VMerror		5607761	0					
ANR	5608018	Identifier	gs_error_VMerror		5607761	0					
ANR	5608019	ExpressionStatement	"if_debug3 ( 'Q' , ""[Qr]insert 0x%lx: [%d,%d)\\n"" , ( ulong ) prev , rmin , rmax )"	2326:8:85355:85425	5607761	2	True				
ANR	5608020	CallExpression	"if_debug3 ( 'Q' , ""[Qr]insert 0x%lx: [%d,%d)\\n"" , ( ulong ) prev , rmin , rmax )"		5607761	0					
ANR	5608021	Callee	if_debug3		5607761	0					
ANR	5608022	Identifier	if_debug3		5607761	0					
ANR	5608023	ArgumentList	'Q'		5607761	1					
ANR	5608024	Argument	'Q'		5607761	0					
ANR	5608025	PrimaryExpression	'Q'		5607761	0					
ANR	5608026	Argument	"""[Qr]insert 0x%lx: [%d,%d)\\n"""		5607761	1					
ANR	5608027	PrimaryExpression	"""[Qr]insert 0x%lx: [%d,%d)\\n"""		5607761	0					
ANR	5608028	Argument	( ulong ) prev		5607761	2					
ANR	5608029	CastExpression	( ulong ) prev		5607761	0					
ANR	5608030	CastTarget	ulong		5607761	0					
ANR	5608031	Identifier	prev		5607761	1					
ANR	5608032	Argument	rmin		5607761	3					
ANR	5608033	Identifier	rmin		5607761	0					
ANR	5608034	Argument	rmax		5607761	4					
ANR	5608035	Identifier	rmax		5607761	0					
ANR	5608036	ExpressionStatement	"prev -> rmin = rmin , prev -> rmax = rmax"	2327:8:85435:85471	5607761	3	True				
ANR	5608037	Expression	"prev -> rmin = rmin , prev -> rmax = rmax"		5607761	0					
ANR	5608038	AssignmentExpression	prev -> rmin = rmin		5607761	0		=			
ANR	5608039	PtrMemberAccess	prev -> rmin		5607761	0					
ANR	5608040	Identifier	prev		5607761	0					
ANR	5608041	Identifier	rmin		5607761	1					
ANR	5608042	Identifier	rmin		5607761	1					
ANR	5608043	AssignmentExpression	prev -> rmax = rmax		5607761	1		=			
ANR	5608044	PtrMemberAccess	prev -> rmax		5607761	0					
ANR	5608045	Identifier	prev		5607761	0					
ANR	5608046	Identifier	rmax		5607761	1					
ANR	5608047	Identifier	rmax		5607761	1					
ANR	5608048	ExpressionStatement	( prev -> prev = pcr -> prev ) -> next = prev	2328:8:85481:85518	5607761	4	True				
ANR	5608049	AssignmentExpression	( prev -> prev = pcr -> prev ) -> next = prev		5607761	0		=			
ANR	5608050	PtrMemberAccess	( prev -> prev = pcr -> prev ) -> next		5607761	0					
ANR	5608051	AssignmentExpression	prev -> prev = pcr -> prev		5607761	0		=			
ANR	5608052	PtrMemberAccess	prev -> prev		5607761	0					
ANR	5608053	Identifier	prev		5607761	0					
ANR	5608054	Identifier	prev		5607761	1					
ANR	5608055	PtrMemberAccess	pcr -> prev		5607761	1					
ANR	5608056	Identifier	pcr		5607761	0					
ANR	5608057	Identifier	prev		5607761	1					
ANR	5608058	Identifier	next		5607761	1					
ANR	5608059	Identifier	prev		5607761	1					
ANR	5608060	ExpressionStatement	prev -> next = pcr	2329:8:85528:85544	5607761	5	True				
ANR	5608061	AssignmentExpression	prev -> next = pcr		5607761	0		=			
ANR	5608062	PtrMemberAccess	prev -> next		5607761	0					
ANR	5608063	Identifier	prev		5607761	0					
ANR	5608064	Identifier	next		5607761	1					
ANR	5608065	Identifier	pcr		5607761	1					
ANR	5608066	ExpressionStatement	pcr -> prev = prev	2330:8:85554:85570	5607761	6	True				
ANR	5608067	AssignmentExpression	pcr -> prev = prev		5607761	0		=			
ANR	5608068	PtrMemberAccess	pcr -> prev		5607761	0					
ANR	5608069	Identifier	pcr		5607761	0					
ANR	5608070	Identifier	prev		5607761	1					
ANR	5608071	Identifier	prev		5607761	1					
ANR	5608072	ExpressionStatement	pcrl -> current = pcr	2332:4:85582:85601	5607761	13	True				
ANR	5608073	AssignmentExpression	pcrl -> current = pcr		5607761	0		=			
ANR	5608074	PtrMemberAccess	pcrl -> current		5607761	0					
ANR	5608075	Identifier	pcrl		5607761	0					
ANR	5608076	Identifier	current		5607761	1					
ANR	5608077	Identifier	pcr		5607761	1					
ANR	5608078	ReturnStatement	return 0 ;	2333:4:85607:85615	5607761	14	True				
ANR	5608079	PrimaryExpression	0		5607761	0					
ANR	5608080	ReturnType	static int		5607761	1					
ANR	5608081	Identifier	range_list_add		5607761	2					
ANR	5608082	ParameterList	"coord_range_list_t * pcrl , coord_value_t rmin , coord_value_t rmax"		5607761	3					
ANR	5608083	Parameter	coord_range_list_t * pcrl	2261:15:83296:83319	5607761	0	True				
ANR	5608084	ParameterType	coord_range_list_t *		5607761	0					
ANR	5608085	Identifier	pcrl		5607761	1					
ANR	5608086	Parameter	coord_value_t rmin	2261:41:83322:83339	5607761	1	True				
ANR	5608087	ParameterType	coord_value_t		5607761	0					
ANR	5608088	Identifier	rmin		5607761	1					
ANR	5608089	Parameter	coord_value_t rmax	2261:61:83342:83359	5607761	2	True				
ANR	5608090	ParameterType	coord_value_t		5607761	0					
ANR	5608091	Identifier	rmax		5607761	1					
ANR	5608092	CFGEntryNode	ENTRY		5607761		True				
ANR	5608093	CFGExitNode	EXIT		5607761		True				
ANR	5608094	Symbol	* pcrl		5607761						
ANR	5608095	Symbol	pcr -> next -> rmax		5607761						
ANR	5608096	Symbol	( prev -> prev = pcr -> prev ) -> next		5607761						
ANR	5608097	Symbol	rmax		5607761						
ANR	5608098	Symbol	prev		5607761						
ANR	5608099	Symbol	* pcr -> next		5607761						
ANR	5608100	Symbol	* pcr		5607761						
ANR	5608101	Symbol	* prev		5607761						
ANR	5608102	Symbol	pcr -> next		5607761						
ANR	5608103	Symbol	* pcr -> prev		5607761						
ANR	5608104	Symbol	pcr -> prev		5607761						
ANR	5608105	Symbol	pcr -> rmax		5607761						
ANR	5608106	Symbol	pcr -> prev -> rmax		5607761						
ANR	5608107	Symbol	range_alloc		5607761						
ANR	5608108	Symbol	rmin		5607761						
ANR	5608109	Symbol	pcr -> prev -> prev		5607761						
ANR	5608110	Symbol	pcrl		5607761						
ANR	5608111	Symbol	pcr		5607761						
ANR	5608112	Symbol	prev -> next		5607761						
ANR	5608113	Symbol	prev -> rmax		5607761						
ANR	5608114	Symbol	prev -> prev		5607761						
ANR	5608115	Symbol	pcr -> prev -> rmin		5607761						
ANR	5608116	Symbol	pcrl -> current		5607761						
ANR	5608117	Symbol	pcr -> next -> rmin		5607761						
ANR	5608118	Symbol	gs_error_VMerror		5607761						
ANR	5608119	Symbol	* * pcr		5607761						
ANR	5608120	Symbol	prev -> rmin		5607761						
ANR	5608121	Symbol	pcr -> next -> next		5607761						
ANR	5608122	Symbol	pcr -> rmin		5607761						
ANR	5608123	Function	merge_ranges	2341:0:85800:87668							
ANR	5608124	FunctionDef	"merge_ranges (coord_range_list_t * pcrl , const line_list * ll , fixed y_min , fixed y_top)"		5608123	0					
ANR	5608125	CompoundStatement		2343:0:85897:87668	5608123	0					
ANR	5608126	IdentifierDeclStatement	"active_line * alp , * nlp ;"	2344:4:85903:85925	5608123	0	True				
ANR	5608127	IdentifierDecl	* alp		5608123	0					
ANR	5608128	IdentifierDeclType	active_line *		5608123	0					
ANR	5608129	Identifier	alp		5608123	1					
ANR	5608130	IdentifierDecl	* nlp		5608123	1					
ANR	5608131	IdentifierDeclType	active_line *		5608123	0					
ANR	5608132	Identifier	nlp		5608123	1					
ANR	5608133	IdentifierDeclStatement	int code = 0 ;	2345:4:85931:85943	5608123	1	True				
ANR	5608134	IdentifierDecl	code = 0		5608123	0					
ANR	5608135	IdentifierDeclType	int		5608123	0					
ANR	5608136	Identifier	code		5608123	1					
ANR	5608137	AssignmentExpression	code = 0		5608123	2		=			
ANR	5608138	Identifier	code		5608123	0					
ANR	5608139	PrimaryExpression	0		5608123	1					
ANR	5608140	ExpressionStatement	range_list_rescan ( pcrl )	2347:4:85950:85973	5608123	2	True				
ANR	5608141	CallExpression	range_list_rescan ( pcrl )		5608123	0					
ANR	5608142	Callee	range_list_rescan		5608123	0					
ANR	5608143	Identifier	range_list_rescan		5608123	0					
ANR	5608144	ArgumentList	pcrl		5608123	1					
ANR	5608145	Argument	pcrl		5608123	0					
ANR	5608146	Identifier	pcrl		5608123	0					
ANR	5608147	ForStatement	for ( alp = ll -> x_list ; alp != 0 && code >= 0 ; alp = nlp )		5608123	3					
ANR	5608148	ForInit	alp = ll -> x_list ;	2348:9:85984:86000	5608123	0	True				
ANR	5608149	AssignmentExpression	alp = ll -> x_list		5608123	0		=			
ANR	5608150	Identifier	alp		5608123	0					
ANR	5608151	PtrMemberAccess	ll -> x_list		5608123	1					
ANR	5608152	Identifier	ll		5608123	0					
ANR	5608153	Identifier	x_list		5608123	1					
ANR	5608154	Condition	alp != 0 && code >= 0	2348:27:86002:86022	5608123	1	True				
ANR	5608155	AndExpression	alp != 0 && code >= 0		5608123	0		&&			
ANR	5608156	EqualityExpression	alp != 0		5608123	0		!=			
ANR	5608157	Identifier	alp		5608123	0					
ANR	5608158	PrimaryExpression	0		5608123	1					
ANR	5608159	RelationalExpression	code >= 0		5608123	1		>=			
ANR	5608160	Identifier	code		5608123	0					
ANR	5608161	PrimaryExpression	0		5608123	1					
ANR	5608162	AssignmentExpression	alp = nlp	2348:50:86025:86033	5608123	2	True	=			
ANR	5608163	Identifier	alp		5608123	0					
ANR	5608164	Identifier	nlp		5608123	1					
ANR	5608165	CompoundStatement		10:8:312:356	5608123	3					
ANR	5608166	IdentifierDeclStatement	"fixed x0 = alp -> x_current , x1 , xt ;"	2349:8:86046:86079	5608123	0	True				
ANR	5608167	IdentifierDecl	x0 = alp -> x_current		5608123	0					
ANR	5608168	IdentifierDeclType	fixed		5608123	0					
ANR	5608169	Identifier	x0		5608123	1					
ANR	5608170	AssignmentExpression	x0 = alp -> x_current		5608123	2		=			
ANR	5608171	Identifier	x0		5608123	0					
ANR	5608172	PtrMemberAccess	alp -> x_current		5608123	1					
ANR	5608173	Identifier	alp		5608123	0					
ANR	5608174	Identifier	x_current		5608123	1					
ANR	5608175	IdentifierDecl	x1		5608123	1					
ANR	5608176	IdentifierDeclType	fixed		5608123	0					
ANR	5608177	Identifier	x1		5608123	1					
ANR	5608178	IdentifierDecl	xt		5608123	2					
ANR	5608179	IdentifierDeclType	fixed		5608123	0					
ANR	5608180	Identifier	xt		5608123	1					
ANR	5608181	IdentifierDeclStatement	bool forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve ) ;	2350:8:86089:86146	5608123	1	True				
ANR	5608182	IdentifierDecl	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		5608123	0					
ANR	5608183	IdentifierDeclType	bool		5608123	0					
ANR	5608184	Identifier	forth		5608123	1					
ANR	5608185	AssignmentExpression	forth = ( alp -> direction == DIR_UP || ! alp -> fi . curve )		5608123	2		=			
ANR	5608186	Identifier	forth		5608123	0					
ANR	5608187	OrExpression	alp -> direction == DIR_UP || ! alp -> fi . curve		5608123	1		||			
ANR	5608188	EqualityExpression	alp -> direction == DIR_UP		5608123	0		==			
ANR	5608189	PtrMemberAccess	alp -> direction		5608123	0					
ANR	5608190	Identifier	alp		5608123	0					
ANR	5608191	Identifier	direction		5608123	1					
ANR	5608192	Identifier	DIR_UP		5608123	1					
ANR	5608193	UnaryOperationExpression	! alp -> fi . curve		5608123	1					
ANR	5608194	UnaryOperator	!		5608123	0					
ANR	5608195	MemberAccess	alp -> fi . curve		5608123	1					
ANR	5608196	PtrMemberAccess	alp -> fi		5608123	0					
ANR	5608197	Identifier	alp		5608123	0					
ANR	5608198	Identifier	fi		5608123	1					
ANR	5608199	Identifier	curve		5608123	1					
ANR	5608200	IdentifierDeclStatement	fixed xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 ) ;	2351:8:86156:86200	5608123	2	True				
ANR	5608201	IdentifierDecl	xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 )		5608123	0					
ANR	5608202	IdentifierDeclType	fixed		5608123	0					
ANR	5608203	Identifier	xe		5608123	1					
ANR	5608204	AssignmentExpression	xe = ( forth ? alp -> fi . x3 : alp -> fi . x0 )		5608123	2		=			
ANR	5608205	Identifier	xe		5608123	0					
ANR	5608206	ConditionalExpression	forth ? alp -> fi . x3 : alp -> fi . x0		5608123	1					
ANR	5608207	Condition	forth		5608123	0					
ANR	5608208	Identifier	forth		5608123	0					
ANR	5608209	MemberAccess	alp -> fi . x3		5608123	1					
ANR	5608210	PtrMemberAccess	alp -> fi		5608123	0					
ANR	5608211	Identifier	alp		5608123	0					
ANR	5608212	Identifier	fi		5608123	1					
ANR	5608213	Identifier	x3		5608123	1					
ANR	5608214	MemberAccess	alp -> fi . x0		5608123	2					
ANR	5608215	PtrMemberAccess	alp -> fi		5608123	0					
ANR	5608216	Identifier	alp		5608123	0					
ANR	5608217	Identifier	fi		5608123	1					
ANR	5608218	Identifier	x0		5608123	1					
ANR	5608219	IdentifierDeclStatement	fixed ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 ) ;	2352:8:86210:86254	5608123	3	True				
ANR	5608220	IdentifierDecl	ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 )		5608123	0					
ANR	5608221	IdentifierDeclType	fixed		5608123	0					
ANR	5608222	Identifier	ye		5608123	1					
ANR	5608223	AssignmentExpression	ye = ( forth ? alp -> fi . y3 : alp -> fi . y0 )		5608123	2		=			
ANR	5608224	Identifier	ye		5608123	0					
ANR	5608225	ConditionalExpression	forth ? alp -> fi . y3 : alp -> fi . y0		5608123	1					
ANR	5608226	Condition	forth		5608123	0					
ANR	5608227	Identifier	forth		5608123	0					
ANR	5608228	MemberAccess	alp -> fi . y3		5608123	1					
ANR	5608229	PtrMemberAccess	alp -> fi		5608123	0					
ANR	5608230	Identifier	alp		5608123	0					
ANR	5608231	Identifier	fi		5608123	1					
ANR	5608232	Identifier	y3		5608123	1					
ANR	5608233	MemberAccess	alp -> fi . y0		5608123	2					
ANR	5608234	PtrMemberAccess	alp -> fi		5608123	0					
ANR	5608235	Identifier	alp		5608123	0					
ANR	5608236	Identifier	fi		5608123	1					
ANR	5608237	Identifier	y0		5608123	1					
ANR	5608238	ExpressionStatement	nlp = alp -> next	2354:8:86265:86280	5608123	4	True				
ANR	5608239	AssignmentExpression	nlp = alp -> next		5608123	0		=			
ANR	5608240	Identifier	nlp		5608123	0					
ANR	5608241	PtrMemberAccess	alp -> next		5608123	1					
ANR	5608242	Identifier	alp		5608123	0					
ANR	5608243	Identifier	next		5608123	1					
ANR	5608244	IfStatement	if ( alp -> start . y < y_min )		5608123	5					
ANR	5608245	Condition	alp -> start . y < y_min	2355:12:86294:86313	5608123	0	True				
ANR	5608246	RelationalExpression	alp -> start . y < y_min		5608123	0		<			
ANR	5608247	MemberAccess	alp -> start . y		5608123	0					
ANR	5608248	PtrMemberAccess	alp -> start		5608123	0					
ANR	5608249	Identifier	alp		5608123	0					
ANR	5608250	Identifier	start		5608123	1					
ANR	5608251	Identifier	y		5608123	1					
ANR	5608252	Identifier	y_min		5608123	1					
ANR	5608253	ContinueStatement	continue ;	2356:12:86328:86336	5608123	1	True				
ANR	5608254	IfStatement	if ( alp -> monotonic_x && alp -> monotonic_y && ye <= y_top )		5608123	6					
ANR	5608255	Condition	alp -> monotonic_x && alp -> monotonic_y && ye <= y_top	2357:12:86350:86400	5608123	0	True				
ANR	5608256	AndExpression	alp -> monotonic_x && alp -> monotonic_y && ye <= y_top		5608123	0		&&			
ANR	5608257	PtrMemberAccess	alp -> monotonic_x		5608123	0					
ANR	5608258	Identifier	alp		5608123	0					
ANR	5608259	Identifier	monotonic_x		5608123	1					
ANR	5608260	AndExpression	alp -> monotonic_y && ye <= y_top		5608123	1		&&			
ANR	5608261	PtrMemberAccess	alp -> monotonic_y		5608123	0					
ANR	5608262	Identifier	alp		5608123	0					
ANR	5608263	Identifier	monotonic_y		5608123	1					
ANR	5608264	RelationalExpression	ye <= y_top		5608123	1		<=			
ANR	5608265	Identifier	ye		5608123	0					
ANR	5608266	Identifier	y_top		5608123	1					
ANR	5608267	CompoundStatement		15:65:505:505	5608123	1					
ANR	5608268	ExpressionStatement	x1 = xe	2358:12:86417:86424	5608123	0	True				
ANR	5608269	AssignmentExpression	x1 = xe		5608123	0		=			
ANR	5608270	Identifier	x1		5608123	0					
ANR	5608271	Identifier	xe		5608123	1					
ANR	5608272	IfStatement	if ( x0 > x1 )		5608123	1					
ANR	5608273	Condition	x0 > x1	2359:16:86442:86448	5608123	0	True				
ANR	5608274	RelationalExpression	x0 > x1		5608123	0		>			
ANR	5608275	Identifier	x0		5608123	0					
ANR	5608276	Identifier	x1		5608123	1					
ANR	5608277	ExpressionStatement	"xt = x0 , x0 = x1 , x1 = xt"	2360:16:86467:86492	5608123	1	True				
ANR	5608278	Expression	"xt = x0 , x0 = x1 , x1 = xt"		5608123	0					
ANR	5608279	AssignmentExpression	xt = x0		5608123	0		=			
ANR	5608280	Identifier	xt		5608123	0					
ANR	5608281	Identifier	x0		5608123	1					
ANR	5608282	Expression	"x0 = x1 , x1 = xt"		5608123	1					
ANR	5608283	AssignmentExpression	x0 = x1		5608123	0		=			
ANR	5608284	Identifier	x0		5608123	0					
ANR	5608285	Identifier	x1		5608123	1					
ANR	5608286	AssignmentExpression	x1 = xt		5608123	1		=			
ANR	5608287	Identifier	x1		5608123	0					
ANR	5608288	Identifier	xt		5608123	1					
ANR	5608289	ExpressionStatement	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"	2361:12:86506:86693	5608123	2	True				
ANR	5608290	AssignmentExpression	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		5608123	0		=			
ANR	5608291	Identifier	code		5608123	0					
ANR	5608292	CallExpression	"range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		5608123	1					
ANR	5608293	Callee	range_list_add		5608123	0					
ANR	5608294	Identifier	range_list_add		5608123	0					
ANR	5608295	ArgumentList	pcrl		5608123	1					
ANR	5608296	Argument	pcrl		5608123	0					
ANR	5608297	Identifier	pcrl		5608123	0					
ANR	5608298	Argument	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		5608123	1					
ANR	5608299	CallExpression	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		5608123	0					
ANR	5608300	Callee	fixed2int_pixround		5608123	0					
ANR	5608301	Identifier	fixed2int_pixround		5608123	0					
ANR	5608302	ArgumentList	x0 - ll -> fo -> adjust_left		5608123	1					
ANR	5608303	Argument	x0 - ll -> fo -> adjust_left		5608123	0					
ANR	5608304	AdditiveExpression	x0 - ll -> fo -> adjust_left		5608123	0		-			
ANR	5608305	Identifier	x0		5608123	0					
ANR	5608306	PtrMemberAccess	ll -> fo -> adjust_left		5608123	1					
ANR	5608307	PtrMemberAccess	ll -> fo		5608123	0					
ANR	5608308	Identifier	ll		5608123	0					
ANR	5608309	Identifier	fo		5608123	1					
ANR	5608310	Identifier	adjust_left		5608123	1					
ANR	5608311	Argument	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		5608123	2					
ANR	5608312	CallExpression	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		5608123	0					
ANR	5608313	Callee	fixed2int_rounded		5608123	0					
ANR	5608314	Identifier	fixed2int_rounded		5608123	0					
ANR	5608315	ArgumentList	x1 + ll -> fo -> adjust_right		5608123	1					
ANR	5608316	Argument	x1 + ll -> fo -> adjust_right		5608123	0					
ANR	5608317	AdditiveExpression	x1 + ll -> fo -> adjust_right		5608123	0		+			
ANR	5608318	Identifier	x1		5608123	0					
ANR	5608319	PtrMemberAccess	ll -> fo -> adjust_right		5608123	1					
ANR	5608320	PtrMemberAccess	ll -> fo		5608123	0					
ANR	5608321	Identifier	ll		5608123	0					
ANR	5608322	Identifier	fo		5608123	1					
ANR	5608323	Identifier	adjust_right		5608123	1					
ANR	5608324	ExpressionStatement	alp -> more_flattened = false	2364:12:86707:86734	5608123	3	True				
ANR	5608325	AssignmentExpression	alp -> more_flattened = false		5608123	0		=			
ANR	5608326	PtrMemberAccess	alp -> more_flattened		5608123	0					
ANR	5608327	Identifier	alp		5608123	0					
ANR	5608328	Identifier	more_flattened		5608123	1					
ANR	5608329	Identifier	false		5608123	1					
ANR	5608330	ElseStatement	else		5608123	0					
ANR	5608331	CompoundStatement		23:15:887:887	5608123	0					
ANR	5608332	ExpressionStatement	x1 = x0	2366:12:86799:86806	5608123	0	True				
ANR	5608333	AssignmentExpression	x1 = x0		5608123	0		=			
ANR	5608334	Identifier	x1		5608123	0					
ANR	5608335	Identifier	x0		5608123	1					
ANR	5608336	ForStatement	for ( ; ; )		5608123	1					
ANR	5608337	CompoundStatement		25:21:931:931	5608123	0					
ANR	5608338	IfStatement	if ( alp -> end . y <= y_top )		5608123	0					
ANR	5608339	Condition	alp -> end . y <= y_top	2368:20:86851:86869	5608123	0	True				
ANR	5608340	RelationalExpression	alp -> end . y <= y_top		5608123	0		<=			
ANR	5608341	MemberAccess	alp -> end . y		5608123	0					
ANR	5608342	PtrMemberAccess	alp -> end		5608123	0					
ANR	5608343	Identifier	alp		5608123	0					
ANR	5608344	Identifier	end		5608123	1					
ANR	5608345	Identifier	y		5608123	1					
ANR	5608346	Identifier	y_top		5608123	1					
ANR	5608347	ExpressionStatement	xt = alp -> end . x	2369:20:86892:86907	5608123	1	True				
ANR	5608348	AssignmentExpression	xt = alp -> end . x		5608123	0		=			
ANR	5608349	Identifier	xt		5608123	0					
ANR	5608350	MemberAccess	alp -> end . x		5608123	1					
ANR	5608351	PtrMemberAccess	alp -> end		5608123	0					
ANR	5608352	Identifier	alp		5608123	0					
ANR	5608353	Identifier	end		5608123	1					
ANR	5608354	Identifier	x		5608123	1					
ANR	5608355	ElseStatement	else		5608123	0					
ANR	5608356	ExpressionStatement	"xt = AL_X_AT_Y ( alp , y_top )"	2371:20:86950:86976	5608123	0	True				
ANR	5608357	AssignmentExpression	"xt = AL_X_AT_Y ( alp , y_top )"		5608123	0		=			
ANR	5608358	Identifier	xt		5608123	0					
ANR	5608359	CallExpression	"AL_X_AT_Y ( alp , y_top )"		5608123	1					
ANR	5608360	Callee	AL_X_AT_Y		5608123	0					
ANR	5608361	Identifier	AL_X_AT_Y		5608123	0					
ANR	5608362	ArgumentList	alp		5608123	1					
ANR	5608363	Argument	alp		5608123	0					
ANR	5608364	Identifier	alp		5608123	0					
ANR	5608365	Argument	y_top		5608123	1					
ANR	5608366	Identifier	y_top		5608123	0					
ANR	5608367	ExpressionStatement	"x0 = min ( x0 , xt )"	2372:16:86994:87010	5608123	1	True				
ANR	5608368	AssignmentExpression	"x0 = min ( x0 , xt )"		5608123	0		=			
ANR	5608369	Identifier	x0		5608123	0					
ANR	5608370	CallExpression	"min ( x0 , xt )"		5608123	1					
ANR	5608371	Callee	min		5608123	0					
ANR	5608372	Identifier	min		5608123	0					
ANR	5608373	ArgumentList	x0		5608123	1					
ANR	5608374	Argument	x0		5608123	0					
ANR	5608375	Identifier	x0		5608123	0					
ANR	5608376	Argument	xt		5608123	1					
ANR	5608377	Identifier	xt		5608123	0					
ANR	5608378	ExpressionStatement	"x1 = max ( x1 , xt )"	2373:16:87028:87044	5608123	2	True				
ANR	5608379	AssignmentExpression	"x1 = max ( x1 , xt )"		5608123	0		=			
ANR	5608380	Identifier	x1		5608123	0					
ANR	5608381	CallExpression	"max ( x1 , xt )"		5608123	1					
ANR	5608382	Callee	max		5608123	0					
ANR	5608383	Identifier	max		5608123	0					
ANR	5608384	ArgumentList	x1		5608123	1					
ANR	5608385	Argument	x1		5608123	0					
ANR	5608386	Identifier	x1		5608123	0					
ANR	5608387	Argument	xt		5608123	1					
ANR	5608388	Identifier	xt		5608123	0					
ANR	5608389	IfStatement	if ( ! alp -> more_flattened || alp -> end . y > y_top )		5608123	3					
ANR	5608390	Condition	! alp -> more_flattened || alp -> end . y > y_top	2374:20:87066:87107	5608123	0	True				
ANR	5608391	OrExpression	! alp -> more_flattened || alp -> end . y > y_top		5608123	0		||			
ANR	5608392	UnaryOperationExpression	! alp -> more_flattened		5608123	0					
ANR	5608393	UnaryOperator	!		5608123	0					
ANR	5608394	PtrMemberAccess	alp -> more_flattened		5608123	1					
ANR	5608395	Identifier	alp		5608123	0					
ANR	5608396	Identifier	more_flattened		5608123	1					
ANR	5608397	RelationalExpression	alp -> end . y > y_top		5608123	1		>			
ANR	5608398	MemberAccess	alp -> end . y		5608123	0					
ANR	5608399	PtrMemberAccess	alp -> end		5608123	0					
ANR	5608400	Identifier	alp		5608123	0					
ANR	5608401	Identifier	end		5608123	1					
ANR	5608402	Identifier	y		5608123	1					
ANR	5608403	Identifier	y_top		5608123	1					
ANR	5608404	BreakStatement	break ;	2375:20:87130:87135	5608123	1	True				
ANR	5608405	ExpressionStatement	"code = step_al ( alp , true )"	2376:16:87153:87178	5608123	4	True				
ANR	5608406	AssignmentExpression	"code = step_al ( alp , true )"		5608123	0		=			
ANR	5608407	Identifier	code		5608123	0					
ANR	5608408	CallExpression	"step_al ( alp , true )"		5608123	1					
ANR	5608409	Callee	step_al		5608123	0					
ANR	5608410	Identifier	step_al		5608123	0					
ANR	5608411	ArgumentList	alp		5608123	1					
ANR	5608412	Argument	alp		5608123	0					
ANR	5608413	Identifier	alp		5608123	0					
ANR	5608414	Argument	true		5608123	1					
ANR	5608415	Identifier	true		5608123	0					
ANR	5608416	IfStatement	if ( code < 0 )		5608123	5					
ANR	5608417	Condition	code < 0	2377:20:87200:87207	5608123	0	True				
ANR	5608418	RelationalExpression	code < 0		5608123	0		<			
ANR	5608419	Identifier	code		5608123	0					
ANR	5608420	PrimaryExpression	0		5608123	1					
ANR	5608421	ReturnStatement	return code ;	2378:20:87230:87241	5608123	1	True				
ANR	5608422	Identifier	code		5608123	0					
ANR	5608423	IfStatement	if ( alp -> end . y < alp -> start . y )		5608123	6					
ANR	5608424	Condition	alp -> end . y < alp -> start . y	2379:20:87263:87287	5608123	0	True				
ANR	5608425	RelationalExpression	alp -> end . y < alp -> start . y		5608123	0		<			
ANR	5608426	MemberAccess	alp -> end . y		5608123	0					
ANR	5608427	PtrMemberAccess	alp -> end		5608123	0					
ANR	5608428	Identifier	alp		5608123	0					
ANR	5608429	Identifier	end		5608123	1					
ANR	5608430	Identifier	y		5608123	1					
ANR	5608431	MemberAccess	alp -> start . y		5608123	1					
ANR	5608432	PtrMemberAccess	alp -> start		5608123	0					
ANR	5608433	Identifier	alp		5608123	0					
ANR	5608434	Identifier	start		5608123	1					
ANR	5608435	Identifier	y		5608123	1					
ANR	5608436	CompoundStatement		37:47:1392:1392	5608123	1					
ANR	5608437	ExpressionStatement	"remove_al ( ll , alp )"	2380:20:87312:87330	5608123	0	True				
ANR	5608438	CallExpression	"remove_al ( ll , alp )"		5608123	0					
ANR	5608439	Callee	remove_al		5608123	0					
ANR	5608440	Identifier	remove_al		5608123	0					
ANR	5608441	ArgumentList	ll		5608123	1					
ANR	5608442	Argument	ll		5608123	0					
ANR	5608443	Identifier	ll		5608123	0					
ANR	5608444	Argument	alp		5608123	1					
ANR	5608445	Identifier	alp		5608123	0					
ANR	5608446	BreakStatement	break ;	2381:20:87394:87399	5608123	1	True				
ANR	5608447	ExpressionStatement	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"	2384:12:87445:87632	5608123	2	True				
ANR	5608448	AssignmentExpression	"code = range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		5608123	0		=			
ANR	5608449	Identifier	code		5608123	0					
ANR	5608450	CallExpression	"range_list_add ( pcrl , fixed2int_pixround ( x0 - ll -> fo -> adjust_left ) , fixed2int_rounded ( x1 + ll -> fo -> adjust_right ) )"		5608123	1					
ANR	5608451	Callee	range_list_add		5608123	0					
ANR	5608452	Identifier	range_list_add		5608123	0					
ANR	5608453	ArgumentList	pcrl		5608123	1					
ANR	5608454	Argument	pcrl		5608123	0					
ANR	5608455	Identifier	pcrl		5608123	0					
ANR	5608456	Argument	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		5608123	1					
ANR	5608457	CallExpression	fixed2int_pixround ( x0 - ll -> fo -> adjust_left )		5608123	0					
ANR	5608458	Callee	fixed2int_pixround		5608123	0					
ANR	5608459	Identifier	fixed2int_pixround		5608123	0					
ANR	5608460	ArgumentList	x0 - ll -> fo -> adjust_left		5608123	1					
ANR	5608461	Argument	x0 - ll -> fo -> adjust_left		5608123	0					
ANR	5608462	AdditiveExpression	x0 - ll -> fo -> adjust_left		5608123	0		-			
ANR	5608463	Identifier	x0		5608123	0					
ANR	5608464	PtrMemberAccess	ll -> fo -> adjust_left		5608123	1					
ANR	5608465	PtrMemberAccess	ll -> fo		5608123	0					
ANR	5608466	Identifier	ll		5608123	0					
ANR	5608467	Identifier	fo		5608123	1					
ANR	5608468	Identifier	adjust_left		5608123	1					
ANR	5608469	Argument	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		5608123	2					
ANR	5608470	CallExpression	fixed2int_rounded ( x1 + ll -> fo -> adjust_right )		5608123	0					
ANR	5608471	Callee	fixed2int_rounded		5608123	0					
ANR	5608472	Identifier	fixed2int_rounded		5608123	0					
ANR	5608473	ArgumentList	x1 + ll -> fo -> adjust_right		5608123	1					
ANR	5608474	Argument	x1 + ll -> fo -> adjust_right		5608123	0					
ANR	5608475	AdditiveExpression	x1 + ll -> fo -> adjust_right		5608123	0		+			
ANR	5608476	Identifier	x1		5608123	0					
ANR	5608477	PtrMemberAccess	ll -> fo -> adjust_right		5608123	1					
ANR	5608478	PtrMemberAccess	ll -> fo		5608123	0					
ANR	5608479	Identifier	ll		5608123	0					
ANR	5608480	Identifier	fo		5608123	1					
ANR	5608481	Identifier	adjust_right		5608123	1					
ANR	5608482	ReturnStatement	return code ;	2390:4:87655:87666	5608123	4	True				
ANR	5608483	Identifier	code		5608123	0					
ANR	5608484	ReturnType	static int		5608123	1					
ANR	5608485	Identifier	merge_ranges		5608123	2					
ANR	5608486	ParameterList	"coord_range_list_t * pcrl , const line_list * ll , fixed y_min , fixed y_top"		5608123	3					
ANR	5608487	Parameter	coord_range_list_t * pcrl	2342:13:85824:85847	5608123	0	True				
ANR	5608488	ParameterType	coord_range_list_t *		5608123	0					
ANR	5608489	Identifier	pcrl		5608123	1					
ANR	5608490	Parameter	const line_list * ll	2342:39:85850:85868	5608123	1	True				
ANR	5608491	ParameterType	const line_list *		5608123	0					
ANR	5608492	Identifier	ll		5608123	1					
ANR	5608493	Parameter	fixed y_min	2342:60:85871:85881	5608123	2	True				
ANR	5608494	ParameterType	fixed		5608123	0					
ANR	5608495	Identifier	y_min		5608123	1					
ANR	5608496	Parameter	fixed y_top	2342:73:85884:85894	5608123	3	True				
ANR	5608497	ParameterType	fixed		5608123	0					
ANR	5608498	Identifier	y_top		5608123	1					
ANR	5608499	CFGEntryNode	ENTRY		5608123		True				
ANR	5608500	CFGExitNode	EXIT		5608123		True				
ANR	5608501	InfiniteForNode	true		5608123		True				
ANR	5608502	Symbol	ll		5608123						
ANR	5608503	Symbol	alp -> direction		5608123						
ANR	5608504	Symbol	* ll -> fo		5608123						
ANR	5608505	Symbol	code		5608123						
ANR	5608506	Symbol	AL_X_AT_Y		5608123						
ANR	5608507	Symbol	alp -> end		5608123						
ANR	5608508	Symbol	alp -> x_current		5608123						
ANR	5608509	Symbol	alp -> monotonic_y		5608123						
ANR	5608510	Symbol	ye		5608123						
ANR	5608511	Symbol	alp -> fi		5608123						
ANR	5608512	Symbol	ll -> x_list		5608123						
ANR	5608513	Symbol	alp -> fi . x0		5608123						
ANR	5608514	Symbol	min		5608123						
ANR	5608515	Symbol	alp -> fi . curve		5608123						
ANR	5608516	Symbol	alp -> monotonic_x		5608123						
ANR	5608517	Symbol	alp -> fi . x3		5608123						
ANR	5608518	Symbol	range_list_add		5608123						
ANR	5608519	Symbol	pcrl		5608123						
ANR	5608520	Symbol	y_min		5608123						
ANR	5608521	Symbol	y_top		5608123						
ANR	5608522	Symbol	DIR_UP		5608123						
ANR	5608523	Symbol	step_al		5608123						
ANR	5608524	Symbol	fixed2int_rounded		5608123						
ANR	5608525	Symbol	ll -> fo -> adjust_left		5608123						
ANR	5608526	Symbol	alp		5608123						
ANR	5608527	Symbol	* ll		5608123						
ANR	5608528	Symbol	max		5608123						
ANR	5608529	Symbol	false		5608123						
ANR	5608530	Symbol	ll -> fo		5608123						
ANR	5608531	Symbol	fixed2int_pixround		5608123						
ANR	5608532	Symbol	forth		5608123						
ANR	5608533	Symbol	xe		5608123						
ANR	5608534	Symbol	* * ll		5608123						
ANR	5608535	Symbol	ll -> fo -> adjust_right		5608123						
ANR	5608536	Symbol	* alp		5608123						
ANR	5608537	Symbol	alp -> start . y		5608123						
ANR	5608538	Symbol	nlp		5608123						
ANR	5608539	Symbol	alp -> fi . y0		5608123						
ANR	5608540	Symbol	alp -> next		5608123						
ANR	5608541	Symbol	alp -> fi . y3		5608123						
ANR	5608542	Symbol	alp -> more_flattened		5608123						
ANR	5608543	Symbol	alp -> end . y		5608123						
ANR	5608544	Symbol	alp -> end . x		5608123						
ANR	5608545	Symbol	x0		5608123						
ANR	5608546	Symbol	true		5608123						
ANR	5608547	Symbol	x1		5608123						
ANR	5608548	Symbol	alp -> start		5608123						
ANR	5608549	Symbol	xt		5608123						
ANR	5608550	Function	spot_into_scan_lines	2409:0:88114:88328							
ANR	5608551	FunctionDef	"spot_into_scan_lines (line_list * ll , fixed band_mask)"		5608550	0					
ANR	5608552	CompoundStatement		2411:0:88178:88328	5608550	0					
ANR	5608553	IfStatement	if ( ll -> fo -> fill_direct )		5608550	0					
ANR	5608554	Condition	ll -> fo -> fill_direct	2412:8:88188:88206	5608550	0	True				
ANR	5608555	PtrMemberAccess	ll -> fo -> fill_direct		5608550	0					
ANR	5608556	PtrMemberAccess	ll -> fo		5608550	0					
ANR	5608557	Identifier	ll		5608550	0					
ANR	5608558	Identifier	fo		5608550	1					
ANR	5608559	Identifier	fill_direct		5608550	1					
ANR	5608560	ReturnStatement	"return spot_into_scan_lines_fd ( ll , band_mask ) ;"	2413:8:88217:88262	5608550	1	True				
ANR	5608561	CallExpression	"spot_into_scan_lines_fd ( ll , band_mask )"		5608550	0					
ANR	5608562	Callee	spot_into_scan_lines_fd		5608550	0					
ANR	5608563	Identifier	spot_into_scan_lines_fd		5608550	0					
ANR	5608564	ArgumentList	ll		5608550	1					
ANR	5608565	Argument	ll		5608550	0					
ANR	5608566	Identifier	ll		5608550	0					
ANR	5608567	Argument	band_mask		5608550	1					
ANR	5608568	Identifier	band_mask		5608550	0					
ANR	5608569	ElseStatement	else		5608550	0					
ANR	5608570	ReturnStatement	"return spot_into_scan_lines_nd ( ll , band_mask ) ;"	2415:8:88281:88326	5608550	0	True				
ANR	5608571	CallExpression	"spot_into_scan_lines_nd ( ll , band_mask )"		5608550	0					
ANR	5608572	Callee	spot_into_scan_lines_nd		5608550	0					
ANR	5608573	Identifier	spot_into_scan_lines_nd		5608550	0					
ANR	5608574	ArgumentList	ll		5608550	1					
ANR	5608575	Argument	ll		5608550	0					
ANR	5608576	Identifier	ll		5608550	0					
ANR	5608577	Argument	band_mask		5608550	1					
ANR	5608578	Identifier	band_mask		5608550	0					
ANR	5608579	ReturnType	static int		5608550	1					
ANR	5608580	Identifier	spot_into_scan_lines		5608550	2					
ANR	5608581	ParameterList	"line_list * ll , fixed band_mask"		5608550	3					
ANR	5608582	Parameter	line_list * ll	2410:21:88146:88158	5608550	0	True				
ANR	5608583	ParameterType	line_list *		5608550	0					
ANR	5608584	Identifier	ll		5608550	1					
ANR	5608585	Parameter	fixed band_mask	2410:36:88161:88175	5608550	1	True				
ANR	5608586	ParameterType	fixed		5608550	0					
ANR	5608587	Identifier	band_mask		5608550	1					
ANR	5608588	CFGEntryNode	ENTRY		5608550		True				
ANR	5608589	CFGExitNode	EXIT		5608550		True				
ANR	5608590	Symbol	ll		5608550						
ANR	5608591	Symbol	ll -> fo -> fill_direct		5608550						
ANR	5608592	Symbol	band_mask		5608550						
ANR	5608593	Symbol	* ll -> fo		5608550						
ANR	5608594	Symbol	* ll		5608550						
ANR	5608595	Symbol	spot_into_scan_lines_fd		5608550						
ANR	5608596	Symbol	ll -> fo		5608550						
ANR	5608597	Symbol	* * ll		5608550						
ANR	5608598	Symbol	spot_into_scan_lines_nd		5608550						
