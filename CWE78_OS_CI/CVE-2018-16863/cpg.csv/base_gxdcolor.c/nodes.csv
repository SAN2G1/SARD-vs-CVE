command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	998390	File	data/converged/CVE-2018-16863_ghostpdl/base_gxdcolor.c								
ANR	998391	DeclStmt									
ANR	998392	Decl							const gx_device_color_type_t	const gx_device_color_type_t	gx_dc_type_data_none
ANR	998393	DeclStmt									
ANR	998394	Decl							const gx_device_color_type_t	const gx_device_color_type_t	gx_dc_type_data_null
ANR	998395	DeclStmt									
ANR	998396	Decl							const gx_device_color_type_t	const gx_device_color_type_t	gx_dc_type_data_pure
ANR	998397	DeclStmt									
ANR	998398	Decl							const gx_device_color_type_t	const gx_device_color_type_t	gx_dc_type_data_devn
ANR	998399	Function	gx_device_black	106:0:4359:5031							
ANR	998400	FunctionDef	gx_device_black (gx_device * dev)		998399	0					
ANR	998401	CompoundStatement		108:0:4406:5031	998399	0					
ANR	998402	IfStatement	if ( dev -> cached_colors . black == gx_no_color_index )		998399	0					
ANR	998403	Condition	dev -> cached_colors . black == gx_no_color_index	109:8:4416:4460	998399	0	True				
ANR	998404	EqualityExpression	dev -> cached_colors . black == gx_no_color_index		998399	0		==			
ANR	998405	MemberAccess	dev -> cached_colors . black		998399	0					
ANR	998406	PtrMemberAccess	dev -> cached_colors		998399	0					
ANR	998407	Identifier	dev		998399	0					
ANR	998408	Identifier	cached_colors		998399	1					
ANR	998409	Identifier	black		998399	1					
ANR	998410	Identifier	gx_no_color_index		998399	1					
ANR	998411	CompoundStatement		6:8:216:265	998399	1					
ANR	998412	IdentifierDeclStatement	subclass_color_mappings scm ;	110:8:4473:4500	998399	0	True				
ANR	998413	IdentifierDecl	scm		998399	0					
ANR	998414	IdentifierDeclType	subclass_color_mappings		998399	0					
ANR	998415	Identifier	scm		998399	1					
ANR	998416	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	111:8:4510:4558	998399	1	True				
ANR	998417	IdentifierDecl	i		998399	0					
ANR	998418	IdentifierDeclType	uchar		998399	0					
ANR	998419	Identifier	i		998399	1					
ANR	998420	IdentifierDecl	ncomps = dev -> color_info . num_components		998399	1					
ANR	998421	IdentifierDeclType	uchar		998399	0					
ANR	998422	Identifier	ncomps		998399	1					
ANR	998423	AssignmentExpression	ncomps = dev -> color_info . num_components		998399	2		=			
ANR	998424	Identifier	ncomps		998399	0					
ANR	998425	MemberAccess	dev -> color_info . num_components		998399	1					
ANR	998426	PtrMemberAccess	dev -> color_info		998399	0					
ANR	998427	Identifier	dev		998399	0					
ANR	998428	Identifier	color_info		998399	1					
ANR	998429	Identifier	num_components		998399	1					
ANR	998430	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	112:8:4568:4613	998399	2	True				
ANR	998431	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998399	0					
ANR	998432	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998399	0					
ANR	998433	Identifier	cm_comps		998399	1					
ANR	998434	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		998399	2					
ANR	998435	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	113:8:4623:4672	998399	3	True				
ANR	998436	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998399	0					
ANR	998437	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998399	0					
ANR	998438	Identifier	cv		998399	1					
ANR	998439	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		998399	2					
ANR	998440	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	115:8:4683:4726	998399	4	True				
ANR	998441	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		998399	0		=			
ANR	998442	Identifier	scm		998399	0					
ANR	998443	CallExpression	get_color_mapping_procs_subclass ( dev )		998399	1					
ANR	998444	Callee	get_color_mapping_procs_subclass		998399	0					
ANR	998445	Identifier	get_color_mapping_procs_subclass		998399	0					
ANR	998446	ArgumentList	dev		998399	1					
ANR	998447	Argument	dev		998399	0					
ANR	998448	Identifier	dev		998399	0					
ANR	998449	ExpressionStatement	"map_gray_subclass ( scm , frac_0 , cm_comps )"	117:8:4792:4832	998399	5	True				
ANR	998450	CallExpression	"map_gray_subclass ( scm , frac_0 , cm_comps )"		998399	0					
ANR	998451	Callee	map_gray_subclass		998399	0					
ANR	998452	Identifier	map_gray_subclass		998399	0					
ANR	998453	ArgumentList	scm		998399	1					
ANR	998454	Argument	scm		998399	0					
ANR	998455	Identifier	scm		998399	0					
ANR	998456	Argument	frac_0		998399	1					
ANR	998457	Identifier	frac_0		998399	0					
ANR	998458	Argument	cm_comps		998399	2					
ANR	998459	Identifier	cm_comps		998399	0					
ANR	998460	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		998399	6					
ANR	998461	ForInit	i = 0 ;	119:13:4848:4853	998399	0	True				
ANR	998462	AssignmentExpression	i = 0		998399	0		=			
ANR	998463	Identifier	i		998399	0					
ANR	998464	PrimaryExpression	0		998399	1					
ANR	998465	Condition	i < ncomps	119:20:4855:4864	998399	1	True				
ANR	998466	RelationalExpression	i < ncomps		998399	0		<			
ANR	998467	Identifier	i		998399	0					
ANR	998468	Identifier	ncomps		998399	1					
ANR	998469	PostIncDecOperationExpression	i ++	119:32:4867:4869	998399	2	True				
ANR	998470	Identifier	i		998399	0					
ANR	998471	IncDec	++		998399	1					
ANR	998472	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	120:12:4884:4912	998399	3	True				
ANR	998473	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		998399	0		=			
ANR	998474	ArrayIndexing	cv [ i ]		998399	0					
ANR	998475	Identifier	cv		998399	0					
ANR	998476	Identifier	i		998399	1					
ANR	998477	CallExpression	frac2cv ( cm_comps [ i ] )		998399	1					
ANR	998478	Callee	frac2cv		998399	0					
ANR	998479	Identifier	frac2cv		998399	0					
ANR	998480	ArgumentList	cm_comps [ i ]		998399	1					
ANR	998481	Argument	cm_comps [ i ]		998399	0					
ANR	998482	ArrayIndexing	cm_comps [ i ]		998399	0					
ANR	998483	Identifier	cm_comps		998399	0					
ANR	998484	Identifier	i		998399	1					
ANR	998485	ExpressionStatement	"dev -> cached_colors . black = dev_proc ( dev , encode_color ) ( dev , cv )"	122:8:4923:4986	998399	7	True				
ANR	998486	AssignmentExpression	"dev -> cached_colors . black = dev_proc ( dev , encode_color ) ( dev , cv )"		998399	0		=			
ANR	998487	MemberAccess	dev -> cached_colors . black		998399	0					
ANR	998488	PtrMemberAccess	dev -> cached_colors		998399	0					
ANR	998489	Identifier	dev		998399	0					
ANR	998490	Identifier	cached_colors		998399	1					
ANR	998491	Identifier	black		998399	1					
ANR	998492	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		998399	1					
ANR	998493	Callee	"dev_proc ( dev , encode_color )"		998399	0					
ANR	998494	CallExpression	"dev_proc ( dev , encode_color )"		998399	0					
ANR	998495	Callee	dev_proc		998399	0					
ANR	998496	Identifier	dev_proc		998399	0					
ANR	998497	ArgumentList	dev		998399	1					
ANR	998498	Argument	dev		998399	0					
ANR	998499	Identifier	dev		998399	0					
ANR	998500	Argument	encode_color		998399	1					
ANR	998501	Identifier	encode_color		998399	0					
ANR	998502	ArgumentList	dev		998399	1					
ANR	998503	Argument	dev		998399	0					
ANR	998504	Identifier	dev		998399	0					
ANR	998505	Argument	cv		998399	1					
ANR	998506	Identifier	cv		998399	0					
ANR	998507	ReturnStatement	return dev -> cached_colors . black ;	124:4:4998:5029	998399	1	True				
ANR	998508	MemberAccess	dev -> cached_colors . black		998399	0					
ANR	998509	PtrMemberAccess	dev -> cached_colors		998399	0					
ANR	998510	Identifier	dev		998399	0					
ANR	998511	Identifier	cached_colors		998399	1					
ANR	998512	Identifier	black		998399	1					
ANR	998513	ReturnType	gx_color_index		998399	1					
ANR	998514	Identifier	gx_device_black		998399	2					
ANR	998515	ParameterList	gx_device * dev		998399	3					
ANR	998516	Parameter	gx_device * dev	107:16:4390:4403	998399	0	True				
ANR	998517	ParameterType	gx_device *		998399	0					
ANR	998518	Identifier	dev		998399	1					
ANR	998519	CFGEntryNode	ENTRY		998399		True				
ANR	998520	CFGExitNode	EXIT		998399		True				
ANR	998521	Symbol	* dev		998399						
ANR	998522	Symbol	dev -> color_info . num_components		998399						
ANR	998523	Symbol	encode_color		998399						
ANR	998524	Symbol	dev -> cached_colors . black		998399						
ANR	998525	Symbol	i		998399						
ANR	998526	Symbol	ncomps		998399						
ANR	998527	Symbol	dev -> color_info		998399						
ANR	998528	Symbol	cm_comps		998399						
ANR	998529	Symbol	gx_no_color_index		998399						
ANR	998530	Symbol	cv		998399						
ANR	998531	Symbol	* i		998399						
ANR	998532	Symbol	dev		998399						
ANR	998533	Symbol	get_color_mapping_procs_subclass		998399						
ANR	998534	Symbol	dev_proc		998399						
ANR	998535	Symbol	dev -> cached_colors		998399						
ANR	998536	Symbol	* cv		998399						
ANR	998537	Symbol	scm		998399						
ANR	998538	Symbol	* cm_comps		998399						
ANR	998539	Symbol	frac_0		998399						
ANR	998540	Symbol	frac2cv		998399						
ANR	998541	Function	gx_device_white	126:0:5033:5705							
ANR	998542	FunctionDef	gx_device_white (gx_device * dev)		998541	0					
ANR	998543	CompoundStatement		128:0:5080:5705	998541	0					
ANR	998544	IfStatement	if ( dev -> cached_colors . white == gx_no_color_index )		998541	0					
ANR	998545	Condition	dev -> cached_colors . white == gx_no_color_index	129:8:5090:5134	998541	0	True				
ANR	998546	EqualityExpression	dev -> cached_colors . white == gx_no_color_index		998541	0		==			
ANR	998547	MemberAccess	dev -> cached_colors . white		998541	0					
ANR	998548	PtrMemberAccess	dev -> cached_colors		998541	0					
ANR	998549	Identifier	dev		998541	0					
ANR	998550	Identifier	cached_colors		998541	1					
ANR	998551	Identifier	white		998541	1					
ANR	998552	Identifier	gx_no_color_index		998541	1					
ANR	998553	CompoundStatement		6:8:216:265	998541	1					
ANR	998554	IdentifierDeclStatement	subclass_color_mappings scm ;	130:8:5147:5174	998541	0	True				
ANR	998555	IdentifierDecl	scm		998541	0					
ANR	998556	IdentifierDeclType	subclass_color_mappings		998541	0					
ANR	998557	Identifier	scm		998541	1					
ANR	998558	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	131:8:5184:5232	998541	1	True				
ANR	998559	IdentifierDecl	i		998541	0					
ANR	998560	IdentifierDeclType	uchar		998541	0					
ANR	998561	Identifier	i		998541	1					
ANR	998562	IdentifierDecl	ncomps = dev -> color_info . num_components		998541	1					
ANR	998563	IdentifierDeclType	uchar		998541	0					
ANR	998564	Identifier	ncomps		998541	1					
ANR	998565	AssignmentExpression	ncomps = dev -> color_info . num_components		998541	2		=			
ANR	998566	Identifier	ncomps		998541	0					
ANR	998567	MemberAccess	dev -> color_info . num_components		998541	1					
ANR	998568	PtrMemberAccess	dev -> color_info		998541	0					
ANR	998569	Identifier	dev		998541	0					
ANR	998570	Identifier	color_info		998541	1					
ANR	998571	Identifier	num_components		998541	1					
ANR	998572	IdentifierDeclStatement	frac cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	132:8:5242:5287	998541	2	True				
ANR	998573	IdentifierDecl	cm_comps [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998541	0					
ANR	998574	IdentifierDeclType	frac [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998541	0					
ANR	998575	Identifier	cm_comps		998541	1					
ANR	998576	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		998541	2					
ANR	998577	IdentifierDeclStatement	gx_color_value cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	133:8:5297:5346	998541	3	True				
ANR	998578	IdentifierDecl	cv [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998541	0					
ANR	998579	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		998541	0					
ANR	998580	Identifier	cv		998541	1					
ANR	998581	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		998541	2					
ANR	998582	ExpressionStatement	scm = get_color_mapping_procs_subclass ( dev )	135:8:5357:5400	998541	4	True				
ANR	998583	AssignmentExpression	scm = get_color_mapping_procs_subclass ( dev )		998541	0		=			
ANR	998584	Identifier	scm		998541	0					
ANR	998585	CallExpression	get_color_mapping_procs_subclass ( dev )		998541	1					
ANR	998586	Callee	get_color_mapping_procs_subclass		998541	0					
ANR	998587	Identifier	get_color_mapping_procs_subclass		998541	0					
ANR	998588	ArgumentList	dev		998541	1					
ANR	998589	Argument	dev		998541	0					
ANR	998590	Identifier	dev		998541	0					
ANR	998591	ExpressionStatement	"map_gray_subclass ( scm , frac_1 , cm_comps )"	137:8:5466:5506	998541	5	True				
ANR	998592	CallExpression	"map_gray_subclass ( scm , frac_1 , cm_comps )"		998541	0					
ANR	998593	Callee	map_gray_subclass		998541	0					
ANR	998594	Identifier	map_gray_subclass		998541	0					
ANR	998595	ArgumentList	scm		998541	1					
ANR	998596	Argument	scm		998541	0					
ANR	998597	Identifier	scm		998541	0					
ANR	998598	Argument	frac_1		998541	1					
ANR	998599	Identifier	frac_1		998541	0					
ANR	998600	Argument	cm_comps		998541	2					
ANR	998601	Identifier	cm_comps		998541	0					
ANR	998602	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		998541	6					
ANR	998603	ForInit	i = 0 ;	139:13:5522:5527	998541	0	True				
ANR	998604	AssignmentExpression	i = 0		998541	0		=			
ANR	998605	Identifier	i		998541	0					
ANR	998606	PrimaryExpression	0		998541	1					
ANR	998607	Condition	i < ncomps	139:20:5529:5538	998541	1	True				
ANR	998608	RelationalExpression	i < ncomps		998541	0		<			
ANR	998609	Identifier	i		998541	0					
ANR	998610	Identifier	ncomps		998541	1					
ANR	998611	PostIncDecOperationExpression	i ++	139:32:5541:5543	998541	2	True				
ANR	998612	Identifier	i		998541	0					
ANR	998613	IncDec	++		998541	1					
ANR	998614	ExpressionStatement	cv [ i ] = frac2cv ( cm_comps [ i ] )	140:12:5558:5586	998541	3	True				
ANR	998615	AssignmentExpression	cv [ i ] = frac2cv ( cm_comps [ i ] )		998541	0		=			
ANR	998616	ArrayIndexing	cv [ i ]		998541	0					
ANR	998617	Identifier	cv		998541	0					
ANR	998618	Identifier	i		998541	1					
ANR	998619	CallExpression	frac2cv ( cm_comps [ i ] )		998541	1					
ANR	998620	Callee	frac2cv		998541	0					
ANR	998621	Identifier	frac2cv		998541	0					
ANR	998622	ArgumentList	cm_comps [ i ]		998541	1					
ANR	998623	Argument	cm_comps [ i ]		998541	0					
ANR	998624	ArrayIndexing	cm_comps [ i ]		998541	0					
ANR	998625	Identifier	cm_comps		998541	0					
ANR	998626	Identifier	i		998541	1					
ANR	998627	ExpressionStatement	"dev -> cached_colors . white = dev_proc ( dev , encode_color ) ( dev , cv )"	142:8:5597:5660	998541	7	True				
ANR	998628	AssignmentExpression	"dev -> cached_colors . white = dev_proc ( dev , encode_color ) ( dev , cv )"		998541	0		=			
ANR	998629	MemberAccess	dev -> cached_colors . white		998541	0					
ANR	998630	PtrMemberAccess	dev -> cached_colors		998541	0					
ANR	998631	Identifier	dev		998541	0					
ANR	998632	Identifier	cached_colors		998541	1					
ANR	998633	Identifier	white		998541	1					
ANR	998634	CallExpression	"dev_proc ( dev , encode_color ) ( dev , cv )"		998541	1					
ANR	998635	Callee	"dev_proc ( dev , encode_color )"		998541	0					
ANR	998636	CallExpression	"dev_proc ( dev , encode_color )"		998541	0					
ANR	998637	Callee	dev_proc		998541	0					
ANR	998638	Identifier	dev_proc		998541	0					
ANR	998639	ArgumentList	dev		998541	1					
ANR	998640	Argument	dev		998541	0					
ANR	998641	Identifier	dev		998541	0					
ANR	998642	Argument	encode_color		998541	1					
ANR	998643	Identifier	encode_color		998541	0					
ANR	998644	ArgumentList	dev		998541	1					
ANR	998645	Argument	dev		998541	0					
ANR	998646	Identifier	dev		998541	0					
ANR	998647	Argument	cv		998541	1					
ANR	998648	Identifier	cv		998541	0					
ANR	998649	ReturnStatement	return dev -> cached_colors . white ;	144:4:5672:5703	998541	1	True				
ANR	998650	MemberAccess	dev -> cached_colors . white		998541	0					
ANR	998651	PtrMemberAccess	dev -> cached_colors		998541	0					
ANR	998652	Identifier	dev		998541	0					
ANR	998653	Identifier	cached_colors		998541	1					
ANR	998654	Identifier	white		998541	1					
ANR	998655	ReturnType	gx_color_index		998541	1					
ANR	998656	Identifier	gx_device_white		998541	2					
ANR	998657	ParameterList	gx_device * dev		998541	3					
ANR	998658	Parameter	gx_device * dev	127:16:5064:5077	998541	0	True				
ANR	998659	ParameterType	gx_device *		998541	0					
ANR	998660	Identifier	dev		998541	1					
ANR	998661	CFGEntryNode	ENTRY		998541		True				
ANR	998662	CFGExitNode	EXIT		998541		True				
ANR	998663	Symbol	* dev		998541						
ANR	998664	Symbol	frac_1		998541						
ANR	998665	Symbol	dev -> cached_colors . white		998541						
ANR	998666	Symbol	dev -> color_info . num_components		998541						
ANR	998667	Symbol	encode_color		998541						
ANR	998668	Symbol	i		998541						
ANR	998669	Symbol	ncomps		998541						
ANR	998670	Symbol	dev -> color_info		998541						
ANR	998671	Symbol	cm_comps		998541						
ANR	998672	Symbol	gx_no_color_index		998541						
ANR	998673	Symbol	cv		998541						
ANR	998674	Symbol	* i		998541						
ANR	998675	Symbol	dev		998541						
ANR	998676	Symbol	get_color_mapping_procs_subclass		998541						
ANR	998677	Symbol	dev_proc		998541						
ANR	998678	Symbol	dev -> cached_colors		998541						
ANR	998679	Symbol	* cv		998541						
ANR	998680	Symbol	scm		998541						
ANR	998681	Symbol	* cm_comps		998541						
ANR	998682	Symbol	frac2cv		998541						
ANR	998683	Function	gx_device_decache_colors	148:0:5737:5862							
ANR	998684	FunctionDef	gx_device_decache_colors (gx_device * dev)		998683	0					
ANR	998685	CompoundStatement		150:0:5783:5862	998683	0					
ANR	998686	ExpressionStatement	dev -> cached_colors . black = dev -> cached_colors . white = gx_no_color_index	151:4:5789:5860	998683	0	True				
ANR	998687	AssignmentExpression	dev -> cached_colors . black = dev -> cached_colors . white = gx_no_color_index		998683	0		=			
ANR	998688	MemberAccess	dev -> cached_colors . black		998683	0					
ANR	998689	PtrMemberAccess	dev -> cached_colors		998683	0					
ANR	998690	Identifier	dev		998683	0					
ANR	998691	Identifier	cached_colors		998683	1					
ANR	998692	Identifier	black		998683	1					
ANR	998693	AssignmentExpression	dev -> cached_colors . white = gx_no_color_index		998683	1		=			
ANR	998694	MemberAccess	dev -> cached_colors . white		998683	0					
ANR	998695	PtrMemberAccess	dev -> cached_colors		998683	0					
ANR	998696	Identifier	dev		998683	0					
ANR	998697	Identifier	cached_colors		998683	1					
ANR	998698	Identifier	white		998683	1					
ANR	998699	Identifier	gx_no_color_index		998683	1					
ANR	998700	ReturnType	void		998683	1					
ANR	998701	Identifier	gx_device_decache_colors		998683	2					
ANR	998702	ParameterList	gx_device * dev		998683	3					
ANR	998703	Parameter	gx_device * dev	149:25:5767:5780	998683	0	True				
ANR	998704	ParameterType	gx_device *		998683	0					
ANR	998705	Identifier	dev		998683	1					
ANR	998706	CFGEntryNode	ENTRY		998683		True				
ANR	998707	CFGExitNode	EXIT		998683		True				
ANR	998708	Symbol	* dev		998683						
ANR	998709	Symbol	gx_no_color_index		998683						
ANR	998710	Symbol	dev		998683						
ANR	998711	Symbol	dev -> cached_colors . white		998683						
ANR	998712	Symbol	dev -> cached_colors		998683						
ANR	998713	Symbol	dev -> cached_colors . black		998683						
ANR	998714	DeclStmt									
ANR	998715	Decl							const gx_rop_source_t	const gx_rop_source_t	gx_rop_no_source_0
ANR	998716	DeclStmt									
ANR	998717	Decl							const gx_rop_source_t	const gx_rop_source_t	gx_rop_no_source_1
ANR	998718	Function	gx_set_rop_no_source	157:0:6055:6644							
ANR	998719	FunctionDef	"gx_set_rop_no_source (const gx_rop_source_t * * psource , gx_rop_source_t * pno_source , gx_device * dev)"		998718	0					
ANR	998720	CompoundStatement		160:0:6180:6644	998718	0					
ANR	998721	IdentifierDeclStatement	gx_color_index black ;	161:4:6186:6206	998718	0	True				
ANR	998722	IdentifierDecl	black		998718	0					
ANR	998723	IdentifierDeclType	gx_color_index		998718	0					
ANR	998724	Identifier	black		998718	1					
ANR	998725	Label	top :	163:0:6209:6212	998718	1	True				
ANR	998726	Identifier	top		998718	0					
ANR	998727	ExpressionStatement	black = dev -> cached_colors . black	164:4:6218:6250	998718	2	True				
ANR	998728	AssignmentExpression	black = dev -> cached_colors . black		998718	0		=			
ANR	998729	Identifier	black		998718	0					
ANR	998730	MemberAccess	dev -> cached_colors . black		998718	1					
ANR	998731	PtrMemberAccess	dev -> cached_colors		998718	0					
ANR	998732	Identifier	dev		998718	0					
ANR	998733	Identifier	cached_colors		998718	1					
ANR	998734	Identifier	black		998718	1					
ANR	998735	IfStatement	if ( black == 0 )		998718	3					
ANR	998736	Condition	black == 0	165:8:6260:6269	998718	0	True				
ANR	998737	EqualityExpression	black == 0		998718	0		==			
ANR	998738	Identifier	black		998718	0					
ANR	998739	PrimaryExpression	0		998718	1					
ANR	998740	ExpressionStatement	* psource = & gx_rop_no_source_0	166:8:6280:6310	998718	1	True				
ANR	998741	AssignmentExpression	* psource = & gx_rop_no_source_0		998718	0		=			
ANR	998742	UnaryOperationExpression	* psource		998718	0					
ANR	998743	UnaryOperator	*		998718	0					
ANR	998744	Identifier	psource		998718	1					
ANR	998745	UnaryOperationExpression	& gx_rop_no_source_0		998718	1					
ANR	998746	UnaryOperator	&		998718	0					
ANR	998747	Identifier	gx_rop_no_source_0		998718	1					
ANR	998748	ElseStatement	else		998718	0					
ANR	998749	IfStatement	if ( black == 1 )		998718	0					
ANR	998750	Condition	black == 1	167:13:6325:6334	998718	0	True				
ANR	998751	EqualityExpression	black == 1		998718	0		==			
ANR	998752	Identifier	black		998718	0					
ANR	998753	PrimaryExpression	1		998718	1					
ANR	998754	ExpressionStatement	* psource = & gx_rop_no_source_1	168:8:6345:6375	998718	1	True				
ANR	998755	AssignmentExpression	* psource = & gx_rop_no_source_1		998718	0		=			
ANR	998756	UnaryOperationExpression	* psource		998718	0					
ANR	998757	UnaryOperator	*		998718	0					
ANR	998758	Identifier	psource		998718	1					
ANR	998759	UnaryOperationExpression	& gx_rop_no_source_1		998718	1					
ANR	998760	UnaryOperator	&		998718	0					
ANR	998761	Identifier	gx_rop_no_source_1		998718	1					
ANR	998762	ElseStatement	else		998718	0					
ANR	998763	IfStatement	if ( black == gx_no_color_index )		998718	0					
ANR	998764	Condition	black == gx_no_color_index	169:13:6390:6415	998718	0	True				
ANR	998765	EqualityExpression	black == gx_no_color_index		998718	0		==			
ANR	998766	Identifier	black		998718	0					
ANR	998767	Identifier	gx_no_color_index		998718	1					
ANR	998768	CompoundStatement		10:41:237:237	998718	1					
ANR	998769	ExpressionStatement	discard ( gx_device_black ( dev ) )	170:8:6451:6480	998718	0	True				
ANR	998770	CallExpression	discard ( gx_device_black ( dev ) )		998718	0					
ANR	998771	Callee	discard		998718	0					
ANR	998772	Identifier	discard		998718	0					
ANR	998773	ArgumentList	gx_device_black ( dev )		998718	1					
ANR	998774	Argument	gx_device_black ( dev )		998718	0					
ANR	998775	CallExpression	gx_device_black ( dev )		998718	0					
ANR	998776	Callee	gx_device_black		998718	0					
ANR	998777	Identifier	gx_device_black		998718	0					
ANR	998778	ArgumentList	dev		998718	1					
ANR	998779	Argument	dev		998718	0					
ANR	998780	Identifier	dev		998718	0					
ANR	998781	GotoStatement	goto top ;	171:8:6490:6498	998718	1	True				
ANR	998782	Identifier	top		998718	0					
ANR	998783	ElseStatement	else		998718	0					
ANR	998784	CompoundStatement		13:11:330:330	998718	0					
ANR	998785	ExpressionStatement	* pno_source = gx_rop_no_source_0	173:8:6521:6553	998718	0	True				
ANR	998786	AssignmentExpression	* pno_source = gx_rop_no_source_0		998718	0		=			
ANR	998787	UnaryOperationExpression	* pno_source		998718	0					
ANR	998788	UnaryOperator	*		998718	0					
ANR	998789	Identifier	pno_source		998718	1					
ANR	998790	Identifier	gx_rop_no_source_0		998718	1					
ANR	998791	ExpressionStatement	"gx_rop_source_set_color ( pno_source , black )"	174:8:6563:6605	998718	1	True				
ANR	998792	CallExpression	"gx_rop_source_set_color ( pno_source , black )"		998718	0					
ANR	998793	Callee	gx_rop_source_set_color		998718	0					
ANR	998794	Identifier	gx_rop_source_set_color		998718	0					
ANR	998795	ArgumentList	pno_source		998718	1					
ANR	998796	Argument	pno_source		998718	0					
ANR	998797	Identifier	pno_source		998718	0					
ANR	998798	Argument	black		998718	1					
ANR	998799	Identifier	black		998718	0					
ANR	998800	ExpressionStatement	* psource = pno_source	175:8:6615:6636	998718	2	True				
ANR	998801	AssignmentExpression	* psource = pno_source		998718	0		=			
ANR	998802	UnaryOperationExpression	* psource		998718	0					
ANR	998803	UnaryOperator	*		998718	0					
ANR	998804	Identifier	psource		998718	1					
ANR	998805	Identifier	pno_source		998718	1					
ANR	998806	ReturnType	void		998718	1					
ANR	998807	Identifier	gx_set_rop_no_source		998718	2					
ANR	998808	ParameterList	"const gx_rop_source_t * * psource , gx_rop_source_t * pno_source , gx_device * dev"		998718	3					
ANR	998809	Parameter	const gx_rop_source_t * * psource	158:21:6081:6111	998718	0	True				
ANR	998810	ParameterType	const gx_rop_source_t * *		998718	0					
ANR	998811	Identifier	psource		998718	1					
ANR	998812	Parameter	gx_rop_source_t * pno_source	159:21:6135:6161	998718	1	True				
ANR	998813	ParameterType	gx_rop_source_t *		998718	0					
ANR	998814	Identifier	pno_source		998718	1					
ANR	998815	Parameter	gx_device * dev	159:50:6164:6177	998718	2	True				
ANR	998816	ParameterType	gx_device *		998718	0					
ANR	998817	Identifier	dev		998718	1					
ANR	998818	CFGEntryNode	ENTRY		998718		True				
ANR	998819	CFGExitNode	EXIT		998718		True				
ANR	998820	Symbol	* dev		998718						
ANR	998821	Symbol	psource		998718						
ANR	998822	Symbol	gx_device_black		998718						
ANR	998823	Symbol	pno_source		998718						
ANR	998824	Symbol	black		998718						
ANR	998825	Symbol	dev -> cached_colors . black		998718						
ANR	998826	Symbol	gx_no_color_index		998718						
ANR	998827	Symbol	dev		998718						
ANR	998828	Symbol	& gx_rop_no_source_1		998718						
ANR	998829	Symbol	& gx_rop_no_source_0		998718						
ANR	998830	Symbol	dev -> cached_colors		998718						
ANR	998831	Symbol	* pno_source		998718						
ANR	998832	Symbol	gx_rop_no_source_0		998718						
ANR	998833	Symbol	* psource		998718						
ANR	998834	Function	gx_device_color_equal	185:0:6907:7068							
ANR	998835	FunctionDef	"gx_device_color_equal (const gx_device_color * pdevc1 , const gx_device_color * pdevc2)"		998834	0					
ANR	998836	CompoundStatement		188:0:7018:7068	998834	0					
ANR	998837	ReturnStatement	"return pdevc1 -> type -> equal ( pdevc1 , pdevc2 ) ;"	189:4:7024:7066	998834	0	True				
ANR	998838	CallExpression	"pdevc1 -> type -> equal ( pdevc1 , pdevc2 )"		998834	0					
ANR	998839	Callee	pdevc1 -> type -> equal		998834	0					
ANR	998840	PtrMemberAccess	pdevc1 -> type -> equal		998834	0					
ANR	998841	PtrMemberAccess	pdevc1 -> type		998834	0					
ANR	998842	Identifier	pdevc1		998834	0					
ANR	998843	Identifier	type		998834	1					
ANR	998844	Identifier	equal		998834	1					
ANR	998845	ArgumentList	pdevc1		998834	1					
ANR	998846	Argument	pdevc1		998834	0					
ANR	998847	Identifier	pdevc1		998834	0					
ANR	998848	Argument	pdevc2		998834	1					
ANR	998849	Identifier	pdevc2		998834	0					
ANR	998850	ReturnType	bool		998834	1					
ANR	998851	Identifier	gx_device_color_equal		998834	2					
ANR	998852	ParameterList	"const gx_device_color * pdevc1 , const gx_device_color * pdevc2"		998834	3					
ANR	998853	Parameter	const gx_device_color * pdevc1	186:22:6934:6962	998834	0	True				
ANR	998854	ParameterType	const gx_device_color *		998834	0					
ANR	998855	Identifier	pdevc1		998834	1					
ANR	998856	Parameter	const gx_device_color * pdevc2	187:22:6987:7015	998834	1	True				
ANR	998857	ParameterType	const gx_device_color *		998834	0					
ANR	998858	Identifier	pdevc2		998834	1					
ANR	998859	CFGEntryNode	ENTRY		998834		True				
ANR	998860	CFGExitNode	EXIT		998834		True				
ANR	998861	Symbol	* pdevc1		998834						
ANR	998862	Symbol	* pdevc1 -> type		998834						
ANR	998863	Symbol	pdevc1 -> type		998834						
ANR	998864	Symbol	pdevc1 -> type -> equal		998834						
ANR	998865	Symbol	pdevc2		998834						
ANR	998866	Symbol	pdevc1		998834						
ANR	998867	Symbol	* * pdevc1		998834						
ANR	998868	DeclStmt									
ANR	998869	Decl							const gx_device_color_type_t	const gx_device_color_type_t * [ ]	dc_color_type_table
ANR	998870	Function	gx_get_dc_type_index	212:0:7961:8339							
ANR	998871	FunctionDef	gx_get_dc_type_index (const gx_device_color * pdevc)		998870	0					
ANR	998872	CompoundStatement		214:0:8017:8339	998870	0					
ANR	998873	IdentifierDeclStatement	const gx_device_color_type_t * type = pdevc -> type ;	215:4:8023:8073	998870	0	True				
ANR	998874	IdentifierDecl	* type = pdevc -> type		998870	0					
ANR	998875	IdentifierDeclType	const gx_device_color_type_t *		998870	0					
ANR	998876	Identifier	type		998870	1					
ANR	998877	AssignmentExpression	* type = pdevc -> type		998870	2		=			
ANR	998878	Identifier	type		998870	0					
ANR	998879	PtrMemberAccess	pdevc -> type		998870	1					
ANR	998880	Identifier	pdevc		998870	0					
ANR	998881	Identifier	type		998870	1					
ANR	998882	IdentifierDeclStatement	"int num_types , i ;"	216:4:8079:8123	998870	1	True				
ANR	998883	IdentifierDecl	num_types		998870	0					
ANR	998884	IdentifierDeclType	int		998870	0					
ANR	998885	Identifier	num_types		998870	1					
ANR	998886	IdentifierDecl	i		998870	1					
ANR	998887	IdentifierDeclType	int		998870	0					
ANR	998888	Identifier	i		998870	1					
ANR	998889	ExpressionStatement	num_types = sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )	218:4:8130:8202	998870	2	True				
ANR	998890	AssignmentExpression	num_types = sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )		998870	0		=			
ANR	998891	Identifier	num_types		998870	0					
ANR	998892	MultiplicativeExpression	sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )		998870	1		/			
ANR	998893	SizeofExpression	sizeof ( dc_color_type_table )		998870	0					
ANR	998894	Sizeof	sizeof		998870	0					
ANR	998895	SizeofOperand	dc_color_type_table		998870	1					
ANR	998896	SizeofExpression	sizeof ( dc_color_type_table [ 0 ] )		998870	1					
ANR	998897	Sizeof	sizeof		998870	0					
ANR	998898	ArrayIndexing	dc_color_type_table [ 0 ]		998870	1					
ANR	998899	Identifier	dc_color_type_table		998870	0					
ANR	998900	PrimaryExpression	0		998870	1					
ANR	998901	ForStatement	for ( i = 0 ; i < num_types && type != dc_color_type_table [ i ] ; i ++ )		998870	3					
ANR	998902	ForInit	i = 0 ;	219:9:8213:8218	998870	0	True				
ANR	998903	AssignmentExpression	i = 0		998870	0		=			
ANR	998904	Identifier	i		998870	0					
ANR	998905	PrimaryExpression	0		998870	1					
ANR	998906	Condition	i < num_types && type != dc_color_type_table [ i ]	219:16:8220:8266	998870	1	True				
ANR	998907	AndExpression	i < num_types && type != dc_color_type_table [ i ]		998870	0		&&			
ANR	998908	RelationalExpression	i < num_types		998870	0		<			
ANR	998909	Identifier	i		998870	0					
ANR	998910	Identifier	num_types		998870	1					
ANR	998911	EqualityExpression	type != dc_color_type_table [ i ]		998870	1		!=			
ANR	998912	Identifier	type		998870	0					
ANR	998913	ArrayIndexing	dc_color_type_table [ i ]		998870	1					
ANR	998914	Identifier	dc_color_type_table		998870	0					
ANR	998915	Identifier	i		998870	1					
ANR	998916	PostIncDecOperationExpression	i ++	219:65:8269:8271	998870	2	True				
ANR	998917	Identifier	i		998870	0					
ANR	998918	IncDec	++		998870	1					
ANR	998919	ExpressionStatement		220:8:8282:8282	998870	3	True				
ANR	998920	ReturnStatement	return i < num_types ? i : gs_error_unknownerror ;	222:4:8289:8337	998870	4	True				
ANR	998921	ConditionalExpression	i < num_types ? i : gs_error_unknownerror		998870	0					
ANR	998922	Condition	i < num_types		998870	0					
ANR	998923	RelationalExpression	i < num_types		998870	0		<			
ANR	998924	Identifier	i		998870	0					
ANR	998925	Identifier	num_types		998870	1					
ANR	998926	Identifier	i		998870	1					
ANR	998927	Identifier	gs_error_unknownerror		998870	2					
ANR	998928	ReturnType	int		998870	1					
ANR	998929	Identifier	gx_get_dc_type_index		998870	2					
ANR	998930	ParameterList	const gx_device_color * pdevc		998870	3					
ANR	998931	Parameter	const gx_device_color * pdevc	213:21:7986:8014	998870	0	True				
ANR	998932	ParameterType	const gx_device_color *		998870	0					
ANR	998933	Identifier	pdevc		998870	1					
ANR	998934	CFGEntryNode	ENTRY		998870		True				
ANR	998935	CFGExitNode	EXIT		998870		True				
ANR	998936	Symbol	pdevc -> type		998870						
ANR	998937	Symbol	num_types		998870						
ANR	998938	Symbol	* pdevc		998870						
ANR	998939	Symbol	* i		998870						
ANR	998940	Symbol	pdevc		998870						
ANR	998941	Symbol	i		998870						
ANR	998942	Symbol	dc_color_type_table		998870						
ANR	998943	Symbol	type		998870						
ANR	998944	Symbol	* dc_color_type_table		998870						
ANR	998945	Symbol	gs_error_unknownerror		998870						
ANR	998946	Function	gx_get_dc_type_from_index	226:0:8412:8697							
ANR	998947	FunctionDef	gx_get_dc_type_from_index (int i)		998946	0					
ANR	998948	CompoundStatement		228:0:8476:8697	998946	0					
ANR	998949	IfStatement	if ( i >= 0 && i < sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] ) )		998946	0					
ANR	998950	Condition	i >= 0 && i < sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )	229:9:8487:8626	998946	0	True				
ANR	998951	AndExpression	i >= 0 && i < sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )		998946	0		&&			
ANR	998952	RelationalExpression	i >= 0		998946	0		>=			
ANR	998953	Identifier	i		998946	0					
ANR	998954	PrimaryExpression	0		998946	1					
ANR	998955	RelationalExpression	i < sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )		998946	1		<			
ANR	998956	Identifier	i		998946	0					
ANR	998957	MultiplicativeExpression	sizeof ( dc_color_type_table ) / sizeof ( dc_color_type_table [ 0 ] )		998946	1		/			
ANR	998958	SizeofExpression	sizeof ( dc_color_type_table )		998946	0					
ANR	998959	Sizeof	sizeof		998946	0					
ANR	998960	SizeofOperand	dc_color_type_table		998946	1					
ANR	998961	SizeofExpression	sizeof ( dc_color_type_table [ 0 ] )		998946	1					
ANR	998962	Sizeof	sizeof		998946	0					
ANR	998963	ArrayIndexing	dc_color_type_table [ 0 ]		998946	1					
ANR	998964	Identifier	dc_color_type_table		998946	0					
ANR	998965	PrimaryExpression	0		998946	1					
ANR	998966	ReturnStatement	return dc_color_type_table [ i ] ;	231:8:8639:8668	998946	1	True				
ANR	998967	ArrayIndexing	dc_color_type_table [ i ]		998946	0					
ANR	998968	Identifier	dc_color_type_table		998946	0					
ANR	998969	Identifier	i		998946	1					
ANR	998970	ElseStatement	else		998946	0					
ANR	998971	ReturnStatement	return 0 ;	233:8:8687:8695	998946	0	True				
ANR	998972	PrimaryExpression	0		998946	0					
ANR	998973	ReturnType	const gx_device_color_type_t *		998946	1					
ANR	998974	Identifier	gx_get_dc_type_from_index		998946	2					
ANR	998975	ParameterList	int i		998946	3					
ANR	998976	Parameter	int i	227:26:8469:8473	998946	0	True				
ANR	998977	ParameterType	int		998946	0					
ANR	998978	Identifier	i		998946	1					
ANR	998979	CFGEntryNode	ENTRY		998946		True				
ANR	998980	CFGExitNode	EXIT		998946		True				
ANR	998981	Symbol	* i		998946						
ANR	998982	Symbol	i		998946						
ANR	998983	Symbol	dc_color_type_table		998946						
ANR	998984	Symbol	* dc_color_type_table		998946						
ANR	998985	Function	gx_dc_no_get_phase	237:0:8748:8846							
ANR	998986	FunctionDef	"gx_dc_no_get_phase (const gx_device_color * pdevc , gs_int_point * pphase)"		998985	0					
ANR	998987	CompoundStatement		239:0:8826:8846	998985	0					
ANR	998988	ReturnStatement	return false ;	240:4:8832:8844	998985	0	True				
ANR	998989	Identifier	false		998985	0					
ANR	998990	ReturnType	bool		998985	1					
ANR	998991	Identifier	gx_dc_no_get_phase		998985	2					
ANR	998992	ParameterList	"const gx_device_color * pdevc , gs_int_point * pphase"		998985	3					
ANR	998993	Parameter	const gx_device_color * pdevc	238:19:8772:8800	998985	0	True				
ANR	998994	ParameterType	const gx_device_color *		998985	0					
ANR	998995	Identifier	pdevc		998985	1					
ANR	998996	Parameter	gs_int_point * pphase	238:50:8803:8823	998985	1	True				
ANR	998997	ParameterType	gs_int_point *		998985	0					
ANR	998998	Identifier	pphase		998985	1					
ANR	998999	CFGEntryNode	ENTRY		998985		True				
ANR	999000	CFGExitNode	EXIT		998985		True				
ANR	999001	Symbol	pphase		998985						
ANR	999002	Symbol	pdevc		998985						
ANR	999003	Symbol	false		998985						
ANR	999004	Function	gx_dc_ht_get_phase	243:0:8849:8974							
ANR	999005	FunctionDef	"gx_dc_ht_get_phase (const gx_device_color * pdevc , gs_int_point * pphase)"		999004	0					
ANR	999006	CompoundStatement		245:0:8927:8974	999004	0					
ANR	999007	ExpressionStatement	* pphase = pdevc -> phase	246:4:8933:8955	999004	0	True				
ANR	999008	AssignmentExpression	* pphase = pdevc -> phase		999004	0		=			
ANR	999009	UnaryOperationExpression	* pphase		999004	0					
ANR	999010	UnaryOperator	*		999004	0					
ANR	999011	Identifier	pphase		999004	1					
ANR	999012	PtrMemberAccess	pdevc -> phase		999004	1					
ANR	999013	Identifier	pdevc		999004	0					
ANR	999014	Identifier	phase		999004	1					
ANR	999015	ReturnStatement	return true ;	247:4:8961:8972	999004	1	True				
ANR	999016	Identifier	true		999004	0					
ANR	999017	ReturnType	bool		999004	1					
ANR	999018	Identifier	gx_dc_ht_get_phase		999004	2					
ANR	999019	ParameterList	"const gx_device_color * pdevc , gs_int_point * pphase"		999004	3					
ANR	999020	Parameter	const gx_device_color * pdevc	244:19:8873:8901	999004	0	True				
ANR	999021	ParameterType	const gx_device_color *		999004	0					
ANR	999022	Identifier	pdevc		999004	1					
ANR	999023	Parameter	gs_int_point * pphase	244:50:8904:8924	999004	1	True				
ANR	999024	ParameterType	gs_int_point *		999004	0					
ANR	999025	Identifier	pphase		999004	1					
ANR	999026	CFGEntryNode	ENTRY		999004		True				
ANR	999027	CFGExitNode	EXIT		999004		True				
ANR	999028	Symbol	pphase		999004						
ANR	999029	Symbol	* pdevc		999004						
ANR	999030	Symbol	* pphase		999004						
ANR	999031	Symbol	pdevc		999004						
ANR	999032	Symbol	pdevc -> phase		999004						
ANR	999033	Symbol	true		999004						
ANR	999034	Function	gx_dc_no_save_dc	251:0:9013:9135							
ANR	999035	FunctionDef	"gx_dc_no_save_dc (const gx_device_color * pdevc , gx_device_color_saved * psdc)"		999034	0					
ANR	999036	CompoundStatement		253:0:9103:9135	999034	0					
ANR	999037	ExpressionStatement	psdc -> type = pdevc -> type	254:4:9109:9133	999034	0	True				
ANR	999038	AssignmentExpression	psdc -> type = pdevc -> type		999034	0		=			
ANR	999039	PtrMemberAccess	psdc -> type		999034	0					
ANR	999040	Identifier	psdc		999034	0					
ANR	999041	Identifier	type		999034	1					
ANR	999042	PtrMemberAccess	pdevc -> type		999034	1					
ANR	999043	Identifier	pdevc		999034	0					
ANR	999044	Identifier	type		999034	1					
ANR	999045	ReturnType	static void		999034	1					
ANR	999046	Identifier	gx_dc_no_save_dc		999034	2					
ANR	999047	ParameterList	"const gx_device_color * pdevc , gx_device_color_saved * psdc"		999034	3					
ANR	999048	Parameter	const gx_device_color * pdevc	252:17:9042:9070	999034	0	True				
ANR	999049	ParameterType	const gx_device_color *		999034	0					
ANR	999050	Identifier	pdevc		999034	1					
ANR	999051	Parameter	gx_device_color_saved * psdc	252:48:9073:9100	999034	1	True				
ANR	999052	ParameterType	gx_device_color_saved *		999034	0					
ANR	999053	Identifier	psdc		999034	1					
ANR	999054	CFGEntryNode	ENTRY		999034		True				
ANR	999055	CFGExitNode	EXIT		999034		True				
ANR	999056	Symbol	pdevc -> type		999034						
ANR	999057	Symbol	* pdevc		999034						
ANR	999058	Symbol	psdc -> type		999034						
ANR	999059	Symbol	psdc		999034						
ANR	999060	Symbol	pdevc		999034						
ANR	999061	Symbol	* psdc		999034						
ANR	999062	Function	gx_dc_no_get_dev_halftone	257:0:9138:9245							
ANR	999063	FunctionDef	gx_dc_no_get_dev_halftone (const gx_device_color * pdevc)		999062	0					
ANR	999064	CompoundStatement		259:0:9229:9245	999062	0					
ANR	999065	ReturnStatement	return 0 ;	260:4:9235:9243	999062	0	True				
ANR	999066	PrimaryExpression	0		999062	0					
ANR	999067	ReturnType	static const gx_device_halftone *		999062	1					
ANR	999068	Identifier	gx_dc_no_get_dev_halftone		999062	2					
ANR	999069	ParameterList	const gx_device_color * pdevc		999062	3					
ANR	999070	Parameter	const gx_device_color * pdevc	258:26:9198:9226	999062	0	True				
ANR	999071	ParameterType	const gx_device_color *		999062	0					
ANR	999072	Identifier	pdevc		999062	1					
ANR	999073	CFGEntryNode	ENTRY		999062		True				
ANR	999074	CFGExitNode	EXIT		999062		True				
ANR	999075	Symbol	pdevc		999062						
ANR	999076	Function	gx_dc_no_load	263:0:9248:9412							
ANR	999077	FunctionDef	"gx_dc_no_load (gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select)"		999076	0					
ANR	999078	CompoundStatement		266:0:9396:9412	999076	0					
ANR	999079	ReturnStatement	return 0 ;	267:4:9402:9410	999076	0	True				
ANR	999080	PrimaryExpression	0		999076	0					
ANR	999081	ReturnType	static int		999076	1					
ANR	999082	Identifier	gx_dc_no_load		999076	2					
ANR	999083	ParameterList	"gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select"		999076	3					
ANR	999084	Parameter	gx_device_color * pdevc	264:14:9273:9294	999076	0	True				
ANR	999085	ParameterType	gx_device_color *		999076	0					
ANR	999086	Identifier	pdevc		999076	1					
ANR	999087	Parameter	const gs_gstate * ignore_pgs	264:38:9297:9323	999076	1	True				
ANR	999088	ParameterType	const gs_gstate *		999076	0					
ANR	999089	Identifier	ignore_pgs		999076	1					
ANR	999090	Parameter	gx_device * ignore_dev	265:14:9340:9360	999076	2	True				
ANR	999091	ParameterType	gx_device *		999076	0					
ANR	999092	Identifier	ignore_dev		999076	1					
ANR	999093	Parameter	gs_color_select_t ignore_select	265:37:9363:9393	999076	3	True				
ANR	999094	ParameterType	gs_color_select_t		999076	0					
ANR	999095	Identifier	ignore_select		999076	1					
ANR	999096	CFGEntryNode	ENTRY		999076		True				
ANR	999097	CFGExitNode	EXIT		999076		True				
ANR	999098	Symbol	pdevc		999076						
ANR	999099	Symbol	ignore_dev		999076						
ANR	999100	Symbol	ignore_select		999076						
ANR	999101	Symbol	ignore_pgs		999076						
ANR	999102	Function	gx_dc_no_fill_rectangle	270:0:9415:9951							
ANR	999103	FunctionDef	"gx_dc_no_fill_rectangle (const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source)"		999102	0					
ANR	999104	CompoundStatement		275:0:9655:9951	999102	0					
ANR	999105	IdentifierDeclStatement	gx_device_color filler ;	276:4:9661:9683	999102	0	True				
ANR	999106	IdentifierDecl	filler		999102	0					
ANR	999107	IdentifierDeclType	gx_device_color		999102	0					
ANR	999108	Identifier	filler		999102	1					
ANR	999109	IfStatement	if ( w <= 0 || h <= 0 )		999102	1					
ANR	999110	Condition	w <= 0 || h <= 0	278:8:9694:9709	999102	0	True				
ANR	999111	OrExpression	w <= 0 || h <= 0		999102	0		||			
ANR	999112	RelationalExpression	w <= 0		999102	0		<=			
ANR	999113	Identifier	w		999102	0					
ANR	999114	PrimaryExpression	0		999102	1					
ANR	999115	RelationalExpression	h <= 0		999102	1		<=			
ANR	999116	Identifier	h		999102	0					
ANR	999117	PrimaryExpression	0		999102	1					
ANR	999118	ReturnStatement	return 0 ;	279:8:9720:9728	999102	1	True				
ANR	999119	PrimaryExpression	0		999102	0					
ANR	999120	IfStatement	if ( lop_uses_T ( lop ) )		999102	2					
ANR	999121	Condition	lop_uses_T ( lop )	280:8:9738:9752	999102	0	True				
ANR	999122	CallExpression	lop_uses_T ( lop )		999102	0					
ANR	999123	Callee	lop_uses_T		999102	0					
ANR	999124	Identifier	lop_uses_T		999102	0					
ANR	999125	ArgumentList	lop		999102	1					
ANR	999126	Argument	lop		999102	0					
ANR	999127	Identifier	lop		999102	0					
ANR	999128	ExpressionStatement	return_error ( gs_error_Fatal )	281:8:9763:9791	999102	1	True				
ANR	999129	CallExpression	return_error ( gs_error_Fatal )		999102	0					
ANR	999130	Callee	return_error		999102	0					
ANR	999131	Identifier	return_error		999102	0					
ANR	999132	ArgumentList	gs_error_Fatal		999102	1					
ANR	999133	Argument	gs_error_Fatal		999102	0					
ANR	999134	Identifier	gs_error_Fatal		999102	0					
ANR	999135	ExpressionStatement	"set_nonclient_dev_color ( & filler , 0 )"	282:4:9797:9832	999102	3	True				
ANR	999136	CallExpression	"set_nonclient_dev_color ( & filler , 0 )"		999102	0					
ANR	999137	Callee	set_nonclient_dev_color		999102	0					
ANR	999138	Identifier	set_nonclient_dev_color		999102	0					
ANR	999139	ArgumentList	& filler		999102	1					
ANR	999140	Argument	& filler		999102	0					
ANR	999141	UnaryOperationExpression	& filler		999102	0					
ANR	999142	UnaryOperator	&		999102	0					
ANR	999143	Identifier	filler		999102	1					
ANR	999144	Argument	0		999102	1					
ANR	999145	PrimaryExpression	0		999102	0					
ANR	999146	ReturnStatement	"return gx_dc_pure_fill_rectangle ( & filler , x , y , w , h , dev , lop , source ) ;"	283:4:9878:9949	999102	4	True				
ANR	999147	CallExpression	"gx_dc_pure_fill_rectangle ( & filler , x , y , w , h , dev , lop , source )"		999102	0					
ANR	999148	Callee	gx_dc_pure_fill_rectangle		999102	0					
ANR	999149	Identifier	gx_dc_pure_fill_rectangle		999102	0					
ANR	999150	ArgumentList	& filler		999102	1					
ANR	999151	Argument	& filler		999102	0					
ANR	999152	UnaryOperationExpression	& filler		999102	0					
ANR	999153	UnaryOperator	&		999102	0					
ANR	999154	Identifier	filler		999102	1					
ANR	999155	Argument	x		999102	1					
ANR	999156	Identifier	x		999102	0					
ANR	999157	Argument	y		999102	2					
ANR	999158	Identifier	y		999102	0					
ANR	999159	Argument	w		999102	3					
ANR	999160	Identifier	w		999102	0					
ANR	999161	Argument	h		999102	4					
ANR	999162	Identifier	h		999102	0					
ANR	999163	Argument	dev		999102	5					
ANR	999164	Identifier	dev		999102	0					
ANR	999165	Argument	lop		999102	6					
ANR	999166	Identifier	lop		999102	0					
ANR	999167	Argument	source		999102	7					
ANR	999168	Identifier	source		999102	0					
ANR	999169	ReturnType	static int		999102	1					
ANR	999170	Identifier	gx_dc_no_fill_rectangle		999102	2					
ANR	999171	ParameterList	"const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source"		999102	3					
ANR	999172	Parameter	const gx_device_color * pdevc	271:24:9450:9477	999102	0	True				
ANR	999173	ParameterType	const gx_device_color *		999102	0					
ANR	999174	Identifier	pdevc		999102	1					
ANR	999175	Parameter	int x	271:54:9480:9484	999102	1	True				
ANR	999176	ParameterType	int		999102	0					
ANR	999177	Identifier	x		999102	1					
ANR	999178	Parameter	int y	271:61:9487:9491	999102	2	True				
ANR	999179	ParameterType	int		999102	0					
ANR	999180	Identifier	y		999102	1					
ANR	999181	Parameter	int w	272:24:9518:9522	999102	3	True				
ANR	999182	ParameterType	int		999102	0					
ANR	999183	Identifier	w		999102	1					
ANR	999184	Parameter	int h	272:31:9525:9529	999102	4	True				
ANR	999185	ParameterType	int		999102	0					
ANR	999186	Identifier	h		999102	1					
ANR	999187	Parameter	gx_device * dev	272:38:9532:9545	999102	5	True				
ANR	999188	ParameterType	gx_device *		999102	0					
ANR	999189	Identifier	dev		999102	1					
ANR	999190	Parameter	gs_logical_operation_t lop	273:24:9572:9597	999102	6	True				
ANR	999191	ParameterType	gs_logical_operation_t		999102	0					
ANR	999192	Identifier	lop		999102	1					
ANR	999193	Parameter	const gx_rop_source_t * source	274:24:9624:9652	999102	7	True				
ANR	999194	ParameterType	const gx_rop_source_t *		999102	0					
ANR	999195	Identifier	source		999102	1					
ANR	999196	CFGEntryNode	ENTRY		999102		True				
ANR	999197	CFGExitNode	EXIT		999102		True				
ANR	999198	Symbol	gs_error_Fatal		999102						
ANR	999199	Symbol	pdevc		999102						
ANR	999200	Symbol	h		999102						
ANR	999201	Symbol	source		999102						
ANR	999202	Symbol	lop		999102						
ANR	999203	Symbol	gx_dc_pure_fill_rectangle		999102						
ANR	999204	Symbol	dev		999102						
ANR	999205	Symbol	lop_uses_T		999102						
ANR	999206	Symbol	& filler		999102						
ANR	999207	Symbol	w		999102						
ANR	999208	Symbol	x		999102						
ANR	999209	Symbol	filler		999102						
ANR	999210	Symbol	y		999102						
ANR	999211	Function	gx_dc_no_fill_masked	286:0:9954:10303							
ANR	999212	FunctionDef	"gx_dc_no_fill_masked (const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert)"		999211	0					
ANR	999213	CompoundStatement		291:0:10223:10303	999211	0					
ANR	999214	IfStatement	if ( w <= 0 || h <= 0 )		999211	0					
ANR	999215	Condition	w <= 0 || h <= 0	292:8:10233:10248	999211	0	True				
ANR	999216	OrExpression	w <= 0 || h <= 0		999211	0		||			
ANR	999217	RelationalExpression	w <= 0		999211	0		<=			
ANR	999218	Identifier	w		999211	0					
ANR	999219	PrimaryExpression	0		999211	1					
ANR	999220	RelationalExpression	h <= 0		999211	1		<=			
ANR	999221	Identifier	h		999211	0					
ANR	999222	PrimaryExpression	0		999211	1					
ANR	999223	ReturnStatement	return 0 ;	293:8:10259:10267	999211	1	True				
ANR	999224	PrimaryExpression	0		999211	0					
ANR	999225	ExpressionStatement	return_error ( gs_error_Fatal )	294:4:10273:10301	999211	1	True				
ANR	999226	CallExpression	return_error ( gs_error_Fatal )		999211	0					
ANR	999227	Callee	return_error		999211	0					
ANR	999228	Identifier	return_error		999211	0					
ANR	999229	ArgumentList	gs_error_Fatal		999211	1					
ANR	999230	Argument	gs_error_Fatal		999211	0					
ANR	999231	Identifier	gs_error_Fatal		999211	0					
ANR	999232	ReturnType	static int		999211	1					
ANR	999233	Identifier	gx_dc_no_fill_masked		999211	2					
ANR	999234	ParameterList	"const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert"		999211	3					
ANR	999235	Parameter	const gx_device_color * pdevc	287:21:9986:10013	999211	0	True				
ANR	999236	ParameterType	const gx_device_color *		999211	0					
ANR	999237	Identifier	pdevc		999211	1					
ANR	999238	Parameter	const byte * data	287:51:10016:10031	999211	1	True				
ANR	999239	ParameterType	const byte *		999211	0					
ANR	999240	Identifier	data		999211	1					
ANR	999241	Parameter	int data_x	288:21:10055:10064	999211	2	True				
ANR	999242	ParameterType	int		999211	0					
ANR	999243	Identifier	data_x		999211	1					
ANR	999244	Parameter	int raster	288:33:10067:10076	999211	3	True				
ANR	999245	ParameterType	int		999211	0					
ANR	999246	Identifier	raster		999211	1					
ANR	999247	Parameter	gx_bitmap_id id	288:45:10079:10093	999211	4	True				
ANR	999248	ParameterType	gx_bitmap_id		999211	0					
ANR	999249	Identifier	id		999211	1					
ANR	999250	Parameter	int x	289:21:10117:10121	999211	5	True				
ANR	999251	ParameterType	int		999211	0					
ANR	999252	Identifier	x		999211	1					
ANR	999253	Parameter	int y	289:28:10124:10128	999211	6	True				
ANR	999254	ParameterType	int		999211	0					
ANR	999255	Identifier	y		999211	1					
ANR	999256	Parameter	int w	289:35:10131:10135	999211	7	True				
ANR	999257	ParameterType	int		999211	0					
ANR	999258	Identifier	w		999211	1					
ANR	999259	Parameter	int h	289:42:10138:10142	999211	8	True				
ANR	999260	ParameterType	int		999211	0					
ANR	999261	Identifier	h		999211	1					
ANR	999262	Parameter	gx_device * dev	289:49:10145:10158	999211	9	True				
ANR	999263	ParameterType	gx_device *		999211	0					
ANR	999264	Identifier	dev		999211	1					
ANR	999265	Parameter	gs_logical_operation_t lop	290:21:10182:10207	999211	10	True				
ANR	999266	ParameterType	gs_logical_operation_t		999211	0					
ANR	999267	Identifier	lop		999211	1					
ANR	999268	Parameter	bool invert	290:49:10210:10220	999211	11	True				
ANR	999269	ParameterType	bool		999211	0					
ANR	999270	Identifier	invert		999211	1					
ANR	999271	CFGEntryNode	ENTRY		999211		True				
ANR	999272	CFGExitNode	EXIT		999211		True				
ANR	999273	Symbol	gs_error_Fatal		999211						
ANR	999274	Symbol	data		999211						
ANR	999275	Symbol	invert		999211						
ANR	999276	Symbol	pdevc		999211						
ANR	999277	Symbol	raster		999211						
ANR	999278	Symbol	h		999211						
ANR	999279	Symbol	lop		999211						
ANR	999280	Symbol	data_x		999211						
ANR	999281	Symbol	dev		999211						
ANR	999282	Symbol	w		999211						
ANR	999283	Symbol	x		999211						
ANR	999284	Symbol	y		999211						
ANR	999285	Symbol	id		999211						
ANR	999286	Function	gx_dc_no_equal	297:0:10306:10415							
ANR	999287	FunctionDef	"gx_dc_no_equal (const gx_device_color * pdevc1 , const gx_device_color * pdevc2)"		999286	0					
ANR	999288	CompoundStatement		299:0:10395:10415	999286	0					
ANR	999289	ReturnStatement	return false ;	300:4:10401:10413	999286	0	True				
ANR	999290	Identifier	false		999286	0					
ANR	999291	ReturnType	static bool		999286	1					
ANR	999292	Identifier	gx_dc_no_equal		999286	2					
ANR	999293	ParameterList	"const gx_device_color * pdevc1 , const gx_device_color * pdevc2"		999286	3					
ANR	999294	Parameter	const gx_device_color * pdevc1	298:15:10333:10361	999286	0	True				
ANR	999295	ParameterType	const gx_device_color *		999286	0					
ANR	999296	Identifier	pdevc1		999286	1					
ANR	999297	Parameter	const gx_device_color * pdevc2	298:46:10364:10392	999286	1	True				
ANR	999298	ParameterType	const gx_device_color *		999286	0					
ANR	999299	Identifier	pdevc2		999286	1					
ANR	999300	CFGEntryNode	ENTRY		999286		True				
ANR	999301	CFGExitNode	EXIT		999286		True				
ANR	999302	Symbol	false		999286						
ANR	999303	Symbol	pdevc2		999286						
ANR	999304	Symbol	pdevc1		999286						
ANR	999305	Function	gx_dc_no_write	303:0:10418:10858							
ANR	999306	FunctionDef	"gx_dc_no_write (const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * data , uint * psize)"		999305	0					
ANR	999307	CompoundStatement		311:0:10781:10858	999305	0					
ANR	999308	ExpressionStatement	* psize = 0	312:4:10787:10797	999305	0	True				
ANR	999309	AssignmentExpression	* psize = 0		999305	0		=			
ANR	999310	UnaryOperationExpression	* psize		999305	0					
ANR	999311	UnaryOperator	*		999305	0					
ANR	999312	Identifier	psize		999305	1					
ANR	999313	PrimaryExpression	0		999305	1					
ANR	999314	ReturnStatement	return psdc != 0 && psdc -> type == pdevc -> type ? 1 : 0 ;	313:4:10803:10856	999305	1	True				
ANR	999315	ConditionalExpression	psdc != 0 && psdc -> type == pdevc -> type ? 1 : 0		999305	0					
ANR	999316	Condition	psdc != 0 && psdc -> type == pdevc -> type		999305	0					
ANR	999317	AndExpression	psdc != 0 && psdc -> type == pdevc -> type		999305	0		&&			
ANR	999318	EqualityExpression	psdc != 0		999305	0		!=			
ANR	999319	Identifier	psdc		999305	0					
ANR	999320	PrimaryExpression	0		999305	1					
ANR	999321	EqualityExpression	psdc -> type == pdevc -> type		999305	1		==			
ANR	999322	PtrMemberAccess	psdc -> type		999305	0					
ANR	999323	Identifier	psdc		999305	0					
ANR	999324	Identifier	type		999305	1					
ANR	999325	PtrMemberAccess	pdevc -> type		999305	1					
ANR	999326	Identifier	pdevc		999305	0					
ANR	999327	Identifier	type		999305	1					
ANR	999328	PrimaryExpression	1		999305	1					
ANR	999329	PrimaryExpression	0		999305	2					
ANR	999330	ReturnType	static int		999305	1					
ANR	999331	Identifier	gx_dc_no_write		999305	2					
ANR	999332	ParameterList	"const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * data , uint * psize"		999305	3					
ANR	999333	Parameter	const gx_device_color * pdevc	305:4:10449:10485	999305	0	True				
ANR	999334	ParameterType	const gx_device_color *		999305	0					
ANR	999335	Identifier	pdevc		999305	1					
ANR	999336	Parameter	const gx_device_color_saved * psdc	306:4:10511:10546	999305	1	True				
ANR	999337	ParameterType	const gx_device_color_saved *		999305	0					
ANR	999338	Identifier	psdc		999305	1					
ANR	999339	Parameter	const gx_device * dev	307:4:10573:10607	999305	2	True				
ANR	999340	ParameterType	const gx_device *		999305	0					
ANR	999341	Identifier	dev		999305	1					
ANR	999342	Parameter	int64_t offset	308:4:10635:10654	999305	3	True				
ANR	999343	ParameterType	int64_t		999305	0					
ANR	999344	Identifier	offset		999305	1					
ANR	999345	Parameter	byte * data	309:4:10679:10714	999305	4	True				
ANR	999346	ParameterType	byte *		999305	0					
ANR	999347	Identifier	data		999305	1					
ANR	999348	Parameter	uint * psize	310:4:10741:10777	999305	5	True				
ANR	999349	ParameterType	uint *		999305	0					
ANR	999350	Identifier	psize		999305	1					
ANR	999351	CFGEntryNode	ENTRY		999305		True				
ANR	999352	CFGExitNode	EXIT		999305		True				
ANR	999353	Symbol	pdevc -> type		999305						
ANR	999354	Symbol	psize		999305						
ANR	999355	Symbol	* pdevc		999305						
ANR	999356	Symbol	dev		999305						
ANR	999357	Symbol	offset		999305						
ANR	999358	Symbol	data		999305						
ANR	999359	Symbol	psdc -> type		999305						
ANR	999360	Symbol	psdc		999305						
ANR	999361	Symbol	pdevc		999305						
ANR	999362	Symbol	* psize		999305						
ANR	999363	Symbol	* psdc		999305						
ANR	999364	Function	gx_dc_no_read	316:0:10861:11397							
ANR	999365	FunctionDef	"gx_dc_no_read (gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem)"		999364	0					
ANR	999366	CompoundStatement		326:0:11346:11397	999364	0					
ANR	999367	ExpressionStatement	pdevc -> type = gx_dc_type_none	327:4:11352:11381	999364	0	True				
ANR	999368	AssignmentExpression	pdevc -> type = gx_dc_type_none		999364	0		=			
ANR	999369	PtrMemberAccess	pdevc -> type		999364	0					
ANR	999370	Identifier	pdevc		999364	0					
ANR	999371	Identifier	type		999364	1					
ANR	999372	Identifier	gx_dc_type_none		999364	1					
ANR	999373	ReturnStatement	return 0 ;	328:4:11387:11395	999364	1	True				
ANR	999374	PrimaryExpression	0		999364	0					
ANR	999375	ReturnType	static int		999364	1					
ANR	999376	Identifier	gx_dc_no_read		999364	2					
ANR	999377	ParameterList	"gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem"		999364	3					
ANR	999378	Parameter	gx_device_color * pdevc	318:4:10891:10919	999364	0	True				
ANR	999379	ParameterType	gx_device_color *		999364	0					
ANR	999380	Identifier	pdevc		999364	1					
ANR	999381	Parameter	const gs_gstate * pgs	319:4:10926:10953	999364	1	True				
ANR	999382	ParameterType	const gs_gstate *		999364	0					
ANR	999383	Identifier	pgs		999364	1					
ANR	999384	Parameter	const gx_device_color * prior_devc	320:4:10989:11022	999364	2	True				
ANR	999385	ParameterType	const gx_device_color *		999364	0					
ANR	999386	Identifier	prior_devc		999364	1					
ANR	999387	Parameter	const gx_device * dev	321:4:11051:11077	999364	3	True				
ANR	999388	ParameterType	const gx_device *		999364	0					
ANR	999389	Identifier	dev		999364	1					
ANR	999390	Parameter	int64_t offset	322:4:11113:11131	999364	4	True				
ANR	999391	ParameterType	int64_t		999364	0					
ANR	999392	Identifier	offset		999364	1					
ANR	999393	Parameter	const byte * pdata	323:4:11164:11192	999364	5	True				
ANR	999394	ParameterType	const byte *		999364	0					
ANR	999395	Identifier	pdata		999364	1					
ANR	999396	Parameter	uint size	324:4:11226:11253	999364	6	True				
ANR	999397	ParameterType	uint		999364	0					
ANR	999398	Identifier	size		999364	1					
ANR	999399	Parameter	gs_memory_t * mem	325:4:11288:11314	999364	7	True				
ANR	999400	ParameterType	gs_memory_t *		999364	0					
ANR	999401	Identifier	mem		999364	1					
ANR	999402	CFGEntryNode	ENTRY		999364		True				
ANR	999403	CFGExitNode	EXIT		999364		True				
ANR	999404	Symbol	pdevc -> type		999364						
ANR	999405	Symbol	* pdevc		999364						
ANR	999406	Symbol	pdata		999364						
ANR	999407	Symbol	dev		999364						
ANR	999408	Symbol	offset		999364						
ANR	999409	Symbol	size		999364						
ANR	999410	Symbol	mem		999364						
ANR	999411	Symbol	pdevc		999364						
ANR	999412	Symbol	pgs		999364						
ANR	999413	Symbol	gx_dc_type_none		999364						
ANR	999414	Symbol	prior_devc		999364						
ANR	999415	Function	gx_dc_cannot_write	331:0:11400:11803							
ANR	999416	FunctionDef	"gx_dc_cannot_write (const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * data , uint * psize)"		999415	0					
ANR	999417	CompoundStatement		339:0:11760:11803	999415	0					
ANR	999418	ExpressionStatement	return_error ( gs_error_unknownerror )	340:4:11766:11801	999415	0	True				
ANR	999419	CallExpression	return_error ( gs_error_unknownerror )		999415	0					
ANR	999420	Callee	return_error		999415	0					
ANR	999421	Identifier	return_error		999415	0					
ANR	999422	ArgumentList	gs_error_unknownerror		999415	1					
ANR	999423	Argument	gs_error_unknownerror		999415	0					
ANR	999424	Identifier	gs_error_unknownerror		999415	0					
ANR	999425	ReturnType	int		999415	1					
ANR	999426	Identifier	gx_dc_cannot_write		999415	2					
ANR	999427	ParameterList	"const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * data , uint * psize"		999415	3					
ANR	999428	Parameter	const gx_device_color * pdevc	333:4:11428:11464	999415	0	True				
ANR	999429	ParameterType	const gx_device_color *		999415	0					
ANR	999430	Identifier	pdevc		999415	1					
ANR	999431	Parameter	const gx_device_color_saved * psdc	334:4:11490:11525	999415	1	True				
ANR	999432	ParameterType	const gx_device_color_saved *		999415	0					
ANR	999433	Identifier	psdc		999415	1					
ANR	999434	Parameter	const gx_device * dev	335:4:11552:11586	999415	2	True				
ANR	999435	ParameterType	const gx_device *		999415	0					
ANR	999436	Identifier	dev		999415	1					
ANR	999437	Parameter	int64_t offset	336:4:11614:11633	999415	3	True				
ANR	999438	ParameterType	int64_t		999415	0					
ANR	999439	Identifier	offset		999415	1					
ANR	999440	Parameter	byte * data	337:4:11658:11693	999415	4	True				
ANR	999441	ParameterType	byte *		999415	0					
ANR	999442	Identifier	data		999415	1					
ANR	999443	Parameter	uint * psize	338:4:11720:11756	999415	5	True				
ANR	999444	ParameterType	uint *		999415	0					
ANR	999445	Identifier	psize		999415	1					
ANR	999446	CFGEntryNode	ENTRY		999415		True				
ANR	999447	CFGExitNode	EXIT		999415		True				
ANR	999448	Symbol	psize		999415						
ANR	999449	Symbol	dev		999415						
ANR	999450	Symbol	offset		999415						
ANR	999451	Symbol	data		999415						
ANR	999452	Symbol	psdc		999415						
ANR	999453	Symbol	pdevc		999415						
ANR	999454	Symbol	gs_error_unknownerror		999415						
ANR	999455	Function	gx_dc_cannot_read	343:0:11806:12331							
ANR	999456	FunctionDef	"gx_dc_cannot_read (gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem)"		999455	0					
ANR	999457	CompoundStatement		353:0:12288:12331	999455	0					
ANR	999458	ExpressionStatement	return_error ( gs_error_unknownerror )	354:4:12294:12329	999455	0	True				
ANR	999459	CallExpression	return_error ( gs_error_unknownerror )		999455	0					
ANR	999460	Callee	return_error		999455	0					
ANR	999461	Identifier	return_error		999455	0					
ANR	999462	ArgumentList	gs_error_unknownerror		999455	1					
ANR	999463	Argument	gs_error_unknownerror		999455	0					
ANR	999464	Identifier	gs_error_unknownerror		999455	0					
ANR	999465	ReturnType	int		999455	1					
ANR	999466	Identifier	gx_dc_cannot_read		999455	2					
ANR	999467	ParameterList	"gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem"		999455	3					
ANR	999468	Parameter	gx_device_color * pdevc	345:4:11833:11861	999455	0	True				
ANR	999469	ParameterType	gx_device_color *		999455	0					
ANR	999470	Identifier	pdevc		999455	1					
ANR	999471	Parameter	const gs_gstate * pgs	346:4:11868:11895	999455	1	True				
ANR	999472	ParameterType	const gs_gstate *		999455	0					
ANR	999473	Identifier	pgs		999455	1					
ANR	999474	Parameter	const gx_device_color * prior_devc	347:4:11931:11964	999455	2	True				
ANR	999475	ParameterType	const gx_device_color *		999455	0					
ANR	999476	Identifier	prior_devc		999455	1					
ANR	999477	Parameter	const gx_device * dev	348:4:11993:12019	999455	3	True				
ANR	999478	ParameterType	const gx_device *		999455	0					
ANR	999479	Identifier	dev		999455	1					
ANR	999480	Parameter	int64_t offset	349:4:12055:12073	999455	4	True				
ANR	999481	ParameterType	int64_t		999455	0					
ANR	999482	Identifier	offset		999455	1					
ANR	999483	Parameter	const byte * pdata	350:4:12106:12134	999455	5	True				
ANR	999484	ParameterType	const byte *		999455	0					
ANR	999485	Identifier	pdata		999455	1					
ANR	999486	Parameter	uint size	351:4:12168:12195	999455	6	True				
ANR	999487	ParameterType	uint		999455	0					
ANR	999488	Identifier	size		999455	1					
ANR	999489	Parameter	gs_memory_t * mem	352:4:12230:12256	999455	7	True				
ANR	999490	ParameterType	gs_memory_t *		999455	0					
ANR	999491	Identifier	mem		999455	1					
ANR	999492	CFGEntryNode	ENTRY		999455		True				
ANR	999493	CFGExitNode	EXIT		999455		True				
ANR	999494	Symbol	pdata		999455						
ANR	999495	Symbol	dev		999455						
ANR	999496	Symbol	offset		999455						
ANR	999497	Symbol	size		999455						
ANR	999498	Symbol	mem		999455						
ANR	999499	Symbol	pdevc		999455						
ANR	999500	Symbol	pgs		999455						
ANR	999501	Symbol	prior_devc		999455						
ANR	999502	Symbol	gs_error_unknownerror		999455						
ANR	999503	Function	gx_dc_no_get_nonzero_comps	357:0:12334:12522							
ANR	999504	FunctionDef	"gx_dc_no_get_nonzero_comps (const gx_device_color * pdevc_ignored , const gx_device * dev_ignored , gx_color_index * pcomp_bits_ignored)"		999503	0					
ANR	999505	CompoundStatement		362:0:12506:12522	999503	0					
ANR	999506	ReturnStatement	return 0 ;	363:4:12512:12520	999503	0	True				
ANR	999507	PrimaryExpression	0		999503	0					
ANR	999508	ReturnType	static int		999503	1					
ANR	999509	Identifier	gx_dc_no_get_nonzero_comps		999503	2					
ANR	999510	ParameterList	"const gx_device_color * pdevc_ignored , const gx_device * dev_ignored , gx_color_index * pcomp_bits_ignored"		999503	3					
ANR	999511	Parameter	const gx_device_color * pdevc_ignored	359:4:12377:12413	999503	0	True				
ANR	999512	ParameterType	const gx_device_color *		999503	0					
ANR	999513	Identifier	pdevc_ignored		999503	1					
ANR	999514	Parameter	const gx_device * dev_ignored	360:4:12420:12454	999503	1	True				
ANR	999515	ParameterType	const gx_device *		999503	0					
ANR	999516	Identifier	dev_ignored		999503	1					
ANR	999517	Parameter	gx_color_index * pcomp_bits_ignored	361:4:12461:12502	999503	2	True				
ANR	999518	ParameterType	gx_color_index *		999503	0					
ANR	999519	Identifier	pcomp_bits_ignored		999503	1					
ANR	999520	CFGEntryNode	ENTRY		999503		True				
ANR	999521	CFGExitNode	EXIT		999503		True				
ANR	999522	Symbol	pcomp_bits_ignored		999503						
ANR	999523	Symbol	dev_ignored		999503						
ANR	999524	Symbol	pdevc_ignored		999503						
ANR	999525	Function	gx_dc_null_load	368:0:12557:12725							
ANR	999526	FunctionDef	"gx_dc_null_load (gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select)"		999525	0					
ANR	999527	CompoundStatement		371:0:12709:12725	999525	0					
ANR	999528	ReturnStatement	return 0 ;	372:4:12715:12723	999525	0	True				
ANR	999529	PrimaryExpression	0		999525	0					
ANR	999530	ReturnType	static int		999525	1					
ANR	999531	Identifier	gx_dc_null_load		999525	2					
ANR	999532	ParameterList	"gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select"		999525	3					
ANR	999533	Parameter	gx_device_color * pdevc	369:16:12584:12605	999525	0	True				
ANR	999534	ParameterType	gx_device_color *		999525	0					
ANR	999535	Identifier	pdevc		999525	1					
ANR	999536	Parameter	const gs_gstate * ignore_pgs	369:40:12608:12634	999525	1	True				
ANR	999537	ParameterType	const gs_gstate *		999525	0					
ANR	999538	Identifier	ignore_pgs		999525	1					
ANR	999539	Parameter	gx_device * ignore_dev	370:16:12653:12673	999525	2	True				
ANR	999540	ParameterType	gx_device *		999525	0					
ANR	999541	Identifier	ignore_dev		999525	1					
ANR	999542	Parameter	gs_color_select_t ignore_select	370:39:12676:12706	999525	3	True				
ANR	999543	ParameterType	gs_color_select_t		999525	0					
ANR	999544	Identifier	ignore_select		999525	1					
ANR	999545	CFGEntryNode	ENTRY		999525		True				
ANR	999546	CFGExitNode	EXIT		999525		True				
ANR	999547	Symbol	pdevc		999525						
ANR	999548	Symbol	ignore_dev		999525						
ANR	999549	Symbol	ignore_select		999525						
ANR	999550	Symbol	ignore_pgs		999525						
ANR	999551	Function	gx_dc_null_fill_rectangle	375:0:12728:12995							
ANR	999552	FunctionDef	"gx_dc_null_fill_rectangle (const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source)"		999551	0					
ANR	999553	CompoundStatement		380:0:12979:12995	999551	0					
ANR	999554	ReturnStatement	return 0 ;	381:4:12985:12993	999551	0	True				
ANR	999555	PrimaryExpression	0		999551	0					
ANR	999556	ReturnType	static int		999551	1					
ANR	999557	Identifier	gx_dc_null_fill_rectangle		999551	2					
ANR	999558	ParameterList	"const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source"		999551	3					
ANR	999559	Parameter	const gx_device_color * pdevc	376:26:12765:12793	999551	0	True				
ANR	999560	ParameterType	const gx_device_color *		999551	0					
ANR	999561	Identifier	pdevc		999551	1					
ANR	999562	Parameter	int x	376:57:12796:12800	999551	1	True				
ANR	999563	ParameterType	int		999551	0					
ANR	999564	Identifier	x		999551	1					
ANR	999565	Parameter	int y	376:64:12803:12807	999551	2	True				
ANR	999566	ParameterType	int		999551	0					
ANR	999567	Identifier	y		999551	1					
ANR	999568	Parameter	int w	377:26:12836:12840	999551	3	True				
ANR	999569	ParameterType	int		999551	0					
ANR	999570	Identifier	w		999551	1					
ANR	999571	Parameter	int h	377:33:12843:12847	999551	4	True				
ANR	999572	ParameterType	int		999551	0					
ANR	999573	Identifier	h		999551	1					
ANR	999574	Parameter	gx_device * dev	377:40:12850:12864	999551	5	True				
ANR	999575	ParameterType	gx_device *		999551	0					
ANR	999576	Identifier	dev		999551	1					
ANR	999577	Parameter	gs_logical_operation_t lop	378:26:12893:12918	999551	6	True				
ANR	999578	ParameterType	gs_logical_operation_t		999551	0					
ANR	999579	Identifier	lop		999551	1					
ANR	999580	Parameter	const gx_rop_source_t * source	379:26:12947:12976	999551	7	True				
ANR	999581	ParameterType	const gx_rop_source_t *		999551	0					
ANR	999582	Identifier	source		999551	1					
ANR	999583	CFGEntryNode	ENTRY		999551		True				
ANR	999584	CFGExitNode	EXIT		999551		True				
ANR	999585	Symbol	dev		999551						
ANR	999586	Symbol	pdevc		999551						
ANR	999587	Symbol	w		999551						
ANR	999588	Symbol	x		999551						
ANR	999589	Symbol	h		999551						
ANR	999590	Symbol	y		999551						
ANR	999591	Symbol	source		999551						
ANR	999592	Symbol	lop		999551						
ANR	999593	Function	gx_dc_null_fill_masked	384:0:12998:13294							
ANR	999594	FunctionDef	"gx_dc_null_fill_masked (const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert)"		999593	0					
ANR	999595	CompoundStatement		389:0:13278:13294	999593	0					
ANR	999596	ReturnStatement	return 0 ;	390:4:13284:13292	999593	0	True				
ANR	999597	PrimaryExpression	0		999593	0					
ANR	999598	ReturnType	static int		999593	1					
ANR	999599	Identifier	gx_dc_null_fill_masked		999593	2					
ANR	999600	ParameterList	"const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert"		999593	3					
ANR	999601	Parameter	const gx_device_color * pdevc	385:23:13032:13060	999593	0	True				
ANR	999602	ParameterType	const gx_device_color *		999593	0					
ANR	999603	Identifier	pdevc		999593	1					
ANR	999604	Parameter	const byte * data	385:54:13063:13079	999593	1	True				
ANR	999605	ParameterType	const byte *		999593	0					
ANR	999606	Identifier	data		999593	1					
ANR	999607	Parameter	int data_x	386:23:13105:13114	999593	2	True				
ANR	999608	ParameterType	int		999593	0					
ANR	999609	Identifier	data_x		999593	1					
ANR	999610	Parameter	int raster	386:35:13117:13126	999593	3	True				
ANR	999611	ParameterType	int		999593	0					
ANR	999612	Identifier	raster		999593	1					
ANR	999613	Parameter	gx_bitmap_id id	386:47:13129:13143	999593	4	True				
ANR	999614	ParameterType	gx_bitmap_id		999593	0					
ANR	999615	Identifier	id		999593	1					
ANR	999616	Parameter	int x	387:23:13169:13173	999593	5	True				
ANR	999617	ParameterType	int		999593	0					
ANR	999618	Identifier	x		999593	1					
ANR	999619	Parameter	int y	387:30:13176:13180	999593	6	True				
ANR	999620	ParameterType	int		999593	0					
ANR	999621	Identifier	y		999593	1					
ANR	999622	Parameter	int w	387:37:13183:13187	999593	7	True				
ANR	999623	ParameterType	int		999593	0					
ANR	999624	Identifier	w		999593	1					
ANR	999625	Parameter	int h	387:44:13190:13194	999593	8	True				
ANR	999626	ParameterType	int		999593	0					
ANR	999627	Identifier	h		999593	1					
ANR	999628	Parameter	gx_device * dev	387:51:13197:13211	999593	9	True				
ANR	999629	ParameterType	gx_device *		999593	0					
ANR	999630	Identifier	dev		999593	1					
ANR	999631	Parameter	gs_logical_operation_t lop	388:23:13237:13262	999593	10	True				
ANR	999632	ParameterType	gs_logical_operation_t		999593	0					
ANR	999633	Identifier	lop		999593	1					
ANR	999634	Parameter	bool invert	388:51:13265:13275	999593	11	True				
ANR	999635	ParameterType	bool		999593	0					
ANR	999636	Identifier	invert		999593	1					
ANR	999637	CFGEntryNode	ENTRY		999593		True				
ANR	999638	CFGExitNode	EXIT		999593		True				
ANR	999639	Symbol	data_x		999593						
ANR	999640	Symbol	data		999593						
ANR	999641	Symbol	dev		999593						
ANR	999642	Symbol	invert		999593						
ANR	999643	Symbol	pdevc		999593						
ANR	999644	Symbol	w		999593						
ANR	999645	Symbol	raster		999593						
ANR	999646	Symbol	x		999593						
ANR	999647	Symbol	h		999593						
ANR	999648	Symbol	y		999593						
ANR	999649	Symbol	id		999593						
ANR	999650	Symbol	lop		999593						
ANR	999651	Function	gx_dc_null_equal	393:0:13297:13433							
ANR	999652	FunctionDef	"gx_dc_null_equal (const gx_device_color * pdevc1 , const gx_device_color * pdevc2)"		999651	0					
ANR	999653	CompoundStatement		395:0:13390:13433	999651	0					
ANR	999654	ReturnStatement	return pdevc2 -> type == pdevc1 -> type ;	396:4:13396:13431	999651	0	True				
ANR	999655	EqualityExpression	pdevc2 -> type == pdevc1 -> type		999651	0		==			
ANR	999656	PtrMemberAccess	pdevc2 -> type		999651	0					
ANR	999657	Identifier	pdevc2		999651	0					
ANR	999658	Identifier	type		999651	1					
ANR	999659	PtrMemberAccess	pdevc1 -> type		999651	1					
ANR	999660	Identifier	pdevc1		999651	0					
ANR	999661	Identifier	type		999651	1					
ANR	999662	ReturnType	static bool		999651	1					
ANR	999663	Identifier	gx_dc_null_equal		999651	2					
ANR	999664	ParameterList	"const gx_device_color * pdevc1 , const gx_device_color * pdevc2"		999651	3					
ANR	999665	Parameter	const gx_device_color * pdevc1	394:17:13326:13355	999651	0	True				
ANR	999666	ParameterType	const gx_device_color *		999651	0					
ANR	999667	Identifier	pdevc1		999651	1					
ANR	999668	Parameter	const gx_device_color * pdevc2	394:49:13358:13387	999651	1	True				
ANR	999669	ParameterType	const gx_device_color *		999651	0					
ANR	999670	Identifier	pdevc2		999651	1					
ANR	999671	CFGEntryNode	ENTRY		999651		True				
ANR	999672	CFGExitNode	EXIT		999651		True				
ANR	999673	Symbol	* pdevc1		999651						
ANR	999674	Symbol	* pdevc2		999651						
ANR	999675	Symbol	pdevc2 -> type		999651						
ANR	999676	Symbol	pdevc1 -> type		999651						
ANR	999677	Symbol	pdevc2		999651						
ANR	999678	Symbol	pdevc1		999651						
ANR	999679	Function	gx_dc_null_read	399:0:13436:13974							
ANR	999680	FunctionDef	"gx_dc_null_read (gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem)"		999679	0					
ANR	999681	CompoundStatement		409:0:13923:13974	999679	0					
ANR	999682	ExpressionStatement	pdevc -> type = gx_dc_type_null	410:4:13929:13958	999679	0	True				
ANR	999683	AssignmentExpression	pdevc -> type = gx_dc_type_null		999679	0		=			
ANR	999684	PtrMemberAccess	pdevc -> type		999679	0					
ANR	999685	Identifier	pdevc		999679	0					
ANR	999686	Identifier	type		999679	1					
ANR	999687	Identifier	gx_dc_type_null		999679	1					
ANR	999688	ReturnStatement	return 0 ;	411:4:13964:13972	999679	1	True				
ANR	999689	PrimaryExpression	0		999679	0					
ANR	999690	ReturnType	static int		999679	1					
ANR	999691	Identifier	gx_dc_null_read		999679	2					
ANR	999692	ParameterList	"gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem"		999679	3					
ANR	999693	Parameter	gx_device_color * pdevc	401:4:13468:13496	999679	0	True				
ANR	999694	ParameterType	gx_device_color *		999679	0					
ANR	999695	Identifier	pdevc		999679	1					
ANR	999696	Parameter	const gs_gstate * pgs	402:4:13503:13530	999679	1	True				
ANR	999697	ParameterType	const gs_gstate *		999679	0					
ANR	999698	Identifier	pgs		999679	1					
ANR	999699	Parameter	const gx_device_color * prior_devc	403:4:13566:13599	999679	2	True				
ANR	999700	ParameterType	const gx_device_color *		999679	0					
ANR	999701	Identifier	prior_devc		999679	1					
ANR	999702	Parameter	const gx_device * dev	404:4:13628:13654	999679	3	True				
ANR	999703	ParameterType	const gx_device *		999679	0					
ANR	999704	Identifier	dev		999679	1					
ANR	999705	Parameter	int64_t offset	405:4:13690:13708	999679	4	True				
ANR	999706	ParameterType	int64_t		999679	0					
ANR	999707	Identifier	offset		999679	1					
ANR	999708	Parameter	const byte * pdata	406:4:13741:13769	999679	5	True				
ANR	999709	ParameterType	const byte *		999679	0					
ANR	999710	Identifier	pdata		999679	1					
ANR	999711	Parameter	uint size	407:4:13803:13830	999679	6	True				
ANR	999712	ParameterType	uint		999679	0					
ANR	999713	Identifier	size		999679	1					
ANR	999714	Parameter	gs_memory_t * mem	408:4:13865:13891	999679	7	True				
ANR	999715	ParameterType	gs_memory_t *		999679	0					
ANR	999716	Identifier	mem		999679	1					
ANR	999717	CFGEntryNode	ENTRY		999679		True				
ANR	999718	CFGExitNode	EXIT		999679		True				
ANR	999719	Symbol	pdevc -> type		999679						
ANR	999720	Symbol	* pdevc		999679						
ANR	999721	Symbol	pdata		999679						
ANR	999722	Symbol	dev		999679						
ANR	999723	Symbol	offset		999679						
ANR	999724	Symbol	size		999679						
ANR	999725	Symbol	mem		999679						
ANR	999726	Symbol	pdevc		999679						
ANR	999727	Symbol	gx_dc_type_null		999679						
ANR	999728	Symbol	pgs		999679						
ANR	999729	Symbol	prior_devc		999679						
ANR	999730	Function	gx_dc_devn_save_dc	417:0:14041:14300							
ANR	999731	FunctionDef	"gx_dc_devn_save_dc (const gx_device_color * pdevc , gx_device_color_saved * psdc)"		999730	0					
ANR	999732	CompoundStatement		419:0:14133:14300	999730	0					
ANR	999733	ExpressionStatement	psdc -> type = pdevc -> type	420:4:14139:14163	999730	0	True				
ANR	999734	AssignmentExpression	psdc -> type = pdevc -> type		999730	0		=			
ANR	999735	PtrMemberAccess	psdc -> type		999730	0					
ANR	999736	Identifier	psdc		999730	0					
ANR	999737	Identifier	type		999730	1					
ANR	999738	PtrMemberAccess	pdevc -> type		999730	1					
ANR	999739	Identifier	pdevc		999730	0					
ANR	999740	Identifier	type		999730	1					
ANR	999741	ExpressionStatement	"memcpy ( & ( psdc -> colors . devn . values [ 0 ] ) , & ( pdevc -> colors . devn . values [ 0 ] ) , GX_DEVICE_COLOR_MAX_COMPONENTS * sizeof ( ushort ) )"	421:4:14169:14298	999730	1	True				
ANR	999742	CallExpression	"memcpy ( & ( psdc -> colors . devn . values [ 0 ] ) , & ( pdevc -> colors . devn . values [ 0 ] ) , GX_DEVICE_COLOR_MAX_COMPONENTS * sizeof ( ushort ) )"		999730	0					
ANR	999743	Callee	memcpy		999730	0					
ANR	999744	Identifier	memcpy		999730	0					
ANR	999745	ArgumentList	& ( psdc -> colors . devn . values [ 0 ] )		999730	1					
ANR	999746	Argument	& ( psdc -> colors . devn . values [ 0 ] )		999730	0					
ANR	999747	UnaryOperationExpression	& ( psdc -> colors . devn . values [ 0 ] )		999730	0					
ANR	999748	UnaryOperator	&		999730	0					
ANR	999749	ArrayIndexing	psdc -> colors . devn . values [ 0 ]		999730	1					
ANR	999750	MemberAccess	psdc -> colors . devn . values		999730	0					
ANR	999751	MemberAccess	psdc -> colors . devn		999730	0					
ANR	999752	PtrMemberAccess	psdc -> colors		999730	0					
ANR	999753	Identifier	psdc		999730	0					
ANR	999754	Identifier	colors		999730	1					
ANR	999755	Identifier	devn		999730	1					
ANR	999756	Identifier	values		999730	1					
ANR	999757	PrimaryExpression	0		999730	1					
ANR	999758	Argument	& ( pdevc -> colors . devn . values [ 0 ] )		999730	1					
ANR	999759	UnaryOperationExpression	& ( pdevc -> colors . devn . values [ 0 ] )		999730	0					
ANR	999760	UnaryOperator	&		999730	0					
ANR	999761	ArrayIndexing	pdevc -> colors . devn . values [ 0 ]		999730	1					
ANR	999762	MemberAccess	pdevc -> colors . devn . values		999730	0					
ANR	999763	MemberAccess	pdevc -> colors . devn		999730	0					
ANR	999764	PtrMemberAccess	pdevc -> colors		999730	0					
ANR	999765	Identifier	pdevc		999730	0					
ANR	999766	Identifier	colors		999730	1					
ANR	999767	Identifier	devn		999730	1					
ANR	999768	Identifier	values		999730	1					
ANR	999769	PrimaryExpression	0		999730	1					
ANR	999770	Argument	GX_DEVICE_COLOR_MAX_COMPONENTS * sizeof ( ushort )		999730	2					
ANR	999771	MultiplicativeExpression	GX_DEVICE_COLOR_MAX_COMPONENTS * sizeof ( ushort )		999730	0		*			
ANR	999772	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		999730	0					
ANR	999773	SizeofExpression	sizeof ( ushort )		999730	1					
ANR	999774	Sizeof	sizeof		999730	0					
ANR	999775	SizeofOperand	ushort		999730	1					
ANR	999776	ReturnType	static void		999730	1					
ANR	999777	Identifier	gx_dc_devn_save_dc		999730	2					
ANR	999778	ParameterList	"const gx_device_color * pdevc , gx_device_color_saved * psdc"		999730	3					
ANR	999779	Parameter	const gx_device_color * pdevc	418:19:14072:14100	999730	0	True				
ANR	999780	ParameterType	const gx_device_color *		999730	0					
ANR	999781	Identifier	pdevc		999730	1					
ANR	999782	Parameter	gx_device_color_saved * psdc	418:50:14103:14130	999730	1	True				
ANR	999783	ParameterType	gx_device_color_saved *		999730	0					
ANR	999784	Identifier	psdc		999730	1					
ANR	999785	CFGEntryNode	ENTRY		999730		True				
ANR	999786	CFGExitNode	EXIT		999730		True				
ANR	999787	Symbol	pdevc -> type		999730						
ANR	999788	Symbol	pdevc -> colors . devn . values		999730						
ANR	999789	Symbol	pdevc		999730						
ANR	999790	Symbol	pdevc -> colors . devn		999730						
ANR	999791	Symbol	* pdevc		999730						
ANR	999792	Symbol	psdc -> type		999730						
ANR	999793	Symbol	psdc		999730						
ANR	999794	Symbol	pdevc -> colors		999730						
ANR	999795	Symbol	psdc -> colors . devn		999730						
ANR	999796	Symbol	* psdc		999730						
ANR	999797	Symbol	psdc -> colors . devn . values		999730						
ANR	999798	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		999730						
ANR	999799	Symbol	psdc -> colors		999730						
ANR	999800	Function	gx_dc_devn_load	425:0:14303:14474							
ANR	999801	FunctionDef	"gx_dc_devn_load (gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select)"		999800	0					
ANR	999802	CompoundStatement		428:0:14458:14474	999800	0					
ANR	999803	ReturnStatement	return 0 ;	429:4:14464:14472	999800	0	True				
ANR	999804	PrimaryExpression	0		999800	0					
ANR	999805	ReturnType	static int		999800	1					
ANR	999806	Identifier	gx_dc_devn_load		999800	2					
ANR	999807	ParameterList	"gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select"		999800	3					
ANR	999808	Parameter	gx_device_color * pdevc	426:16:14330:14352	999800	0	True				
ANR	999809	ParameterType	gx_device_color *		999800	0					
ANR	999810	Identifier	pdevc		999800	1					
ANR	999811	Parameter	const gs_gstate * ignore_pgs	426:41:14355:14382	999800	1	True				
ANR	999812	ParameterType	const gs_gstate *		999800	0					
ANR	999813	Identifier	ignore_pgs		999800	1					
ANR	999814	Parameter	gx_device * ignore_dev	427:16:14401:14422	999800	2	True				
ANR	999815	ParameterType	gx_device *		999800	0					
ANR	999816	Identifier	ignore_dev		999800	1					
ANR	999817	Parameter	gs_color_select_t ignore_select	427:40:14425:14455	999800	3	True				
ANR	999818	ParameterType	gs_color_select_t		999800	0					
ANR	999819	Identifier	ignore_select		999800	1					
ANR	999820	CFGEntryNode	ENTRY		999800		True				
ANR	999821	CFGExitNode	EXIT		999800		True				
ANR	999822	Symbol	pdevc		999800						
ANR	999823	Symbol	ignore_dev		999800						
ANR	999824	Symbol	ignore_select		999800						
ANR	999825	Symbol	ignore_pgs		999800						
ANR	999826	Function	gx_dc_devn_fill_rectangle	433:0:14522:15010							
ANR	999827	FunctionDef	"gx_dc_devn_fill_rectangle (const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source)"		999826	0					
ANR	999828	CompoundStatement		438:0:14773:15010	999826	0					
ANR	999829	IdentifierDeclStatement	gs_fixed_rect rect ;	439:4:14779:14797	999826	0	True				
ANR	999830	IdentifierDecl	rect		999826	0					
ANR	999831	IdentifierDeclType	gs_fixed_rect		999826	0					
ANR	999832	Identifier	rect		999826	1					
ANR	999833	ExpressionStatement	rect . p . x = int2fixed ( x )	441:4:14804:14827	999826	1	True				
ANR	999834	AssignmentExpression	rect . p . x = int2fixed ( x )		999826	0		=			
ANR	999835	MemberAccess	rect . p . x		999826	0					
ANR	999836	MemberAccess	rect . p		999826	0					
ANR	999837	Identifier	rect		999826	0					
ANR	999838	Identifier	p		999826	1					
ANR	999839	Identifier	x		999826	1					
ANR	999840	CallExpression	int2fixed ( x )		999826	1					
ANR	999841	Callee	int2fixed		999826	0					
ANR	999842	Identifier	int2fixed		999826	0					
ANR	999843	ArgumentList	x		999826	1					
ANR	999844	Argument	x		999826	0					
ANR	999845	Identifier	x		999826	0					
ANR	999846	ExpressionStatement	rect . p . y = int2fixed ( y )	442:4:14833:14856	999826	2	True				
ANR	999847	AssignmentExpression	rect . p . y = int2fixed ( y )		999826	0		=			
ANR	999848	MemberAccess	rect . p . y		999826	0					
ANR	999849	MemberAccess	rect . p		999826	0					
ANR	999850	Identifier	rect		999826	0					
ANR	999851	Identifier	p		999826	1					
ANR	999852	Identifier	y		999826	1					
ANR	999853	CallExpression	int2fixed ( y )		999826	1					
ANR	999854	Callee	int2fixed		999826	0					
ANR	999855	Identifier	int2fixed		999826	0					
ANR	999856	ArgumentList	y		999826	1					
ANR	999857	Argument	y		999826	0					
ANR	999858	Identifier	y		999826	0					
ANR	999859	ExpressionStatement	rect . q . x = int2fixed ( w + x )	443:4:14862:14889	999826	3	True				
ANR	999860	AssignmentExpression	rect . q . x = int2fixed ( w + x )		999826	0		=			
ANR	999861	MemberAccess	rect . q . x		999826	0					
ANR	999862	MemberAccess	rect . q		999826	0					
ANR	999863	Identifier	rect		999826	0					
ANR	999864	Identifier	q		999826	1					
ANR	999865	Identifier	x		999826	1					
ANR	999866	CallExpression	int2fixed ( w + x )		999826	1					
ANR	999867	Callee	int2fixed		999826	0					
ANR	999868	Identifier	int2fixed		999826	0					
ANR	999869	ArgumentList	w + x		999826	1					
ANR	999870	Argument	w + x		999826	0					
ANR	999871	AdditiveExpression	w + x		999826	0		+			
ANR	999872	Identifier	w		999826	0					
ANR	999873	Identifier	x		999826	1					
ANR	999874	ExpressionStatement	rect . q . y = int2fixed ( h + y )	444:4:14895:14922	999826	4	True				
ANR	999875	AssignmentExpression	rect . q . y = int2fixed ( h + y )		999826	0		=			
ANR	999876	MemberAccess	rect . q . y		999826	0					
ANR	999877	MemberAccess	rect . q		999826	0					
ANR	999878	Identifier	rect		999826	0					
ANR	999879	Identifier	q		999826	1					
ANR	999880	Identifier	y		999826	1					
ANR	999881	CallExpression	int2fixed ( h + y )		999826	1					
ANR	999882	Callee	int2fixed		999826	0					
ANR	999883	Identifier	int2fixed		999826	0					
ANR	999884	ArgumentList	h + y		999826	1					
ANR	999885	Argument	h + y		999826	0					
ANR	999886	AdditiveExpression	h + y		999826	0		+			
ANR	999887	Identifier	h		999826	0					
ANR	999888	Identifier	y		999826	1					
ANR	999889	ReturnStatement	"return ( * dev_proc ( dev , fill_rectangle_hl_color ) ) ( dev , & rect , NULL , pdevc , NULL ) ;"	445:4:14928:15008	999826	5	True				
ANR	999890	CallExpression	"( * dev_proc ( dev , fill_rectangle_hl_color ) ) ( dev , & rect , NULL , pdevc , NULL )"		999826	0					
ANR	999891	Callee	"* dev_proc ( dev , fill_rectangle_hl_color )"		999826	0					
ANR	999892	UnaryOperationExpression	"* dev_proc ( dev , fill_rectangle_hl_color )"		999826	0					
ANR	999893	UnaryOperator	*		999826	0					
ANR	999894	CallExpression	"dev_proc ( dev , fill_rectangle_hl_color )"		999826	1					
ANR	999895	Callee	dev_proc		999826	0					
ANR	999896	Identifier	dev_proc		999826	0					
ANR	999897	ArgumentList	dev		999826	1					
ANR	999898	Argument	dev		999826	0					
ANR	999899	Identifier	dev		999826	0					
ANR	999900	Argument	fill_rectangle_hl_color		999826	1					
ANR	999901	Identifier	fill_rectangle_hl_color		999826	0					
ANR	999902	ArgumentList	dev		999826	1					
ANR	999903	Argument	dev		999826	0					
ANR	999904	Identifier	dev		999826	0					
ANR	999905	Argument	& rect		999826	1					
ANR	999906	UnaryOperationExpression	& rect		999826	0					
ANR	999907	UnaryOperator	&		999826	0					
ANR	999908	Identifier	rect		999826	1					
ANR	999909	Argument	NULL		999826	2					
ANR	999910	Identifier	NULL		999826	0					
ANR	999911	Argument	pdevc		999826	3					
ANR	999912	Identifier	pdevc		999826	0					
ANR	999913	Argument	NULL		999826	4					
ANR	999914	Identifier	NULL		999826	0					
ANR	999915	ReturnType	static int		999826	1					
ANR	999916	Identifier	gx_dc_devn_fill_rectangle		999826	2					
ANR	999917	ParameterList	"const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source"		999826	3					
ANR	999918	Parameter	const gx_device_color * pdevc	434:26:14559:14587	999826	0	True				
ANR	999919	ParameterType	const gx_device_color *		999826	0					
ANR	999920	Identifier	pdevc		999826	1					
ANR	999921	Parameter	int x	434:57:14590:14594	999826	1	True				
ANR	999922	ParameterType	int		999826	0					
ANR	999923	Identifier	x		999826	1					
ANR	999924	Parameter	int y	434:64:14597:14601	999826	2	True				
ANR	999925	ParameterType	int		999826	0					
ANR	999926	Identifier	y		999826	1					
ANR	999927	Parameter	int w	435:26:14630:14634	999826	3	True				
ANR	999928	ParameterType	int		999826	0					
ANR	999929	Identifier	w		999826	1					
ANR	999930	Parameter	int h	435:33:14637:14641	999826	4	True				
ANR	999931	ParameterType	int		999826	0					
ANR	999932	Identifier	h		999826	1					
ANR	999933	Parameter	gx_device * dev	435:40:14644:14658	999826	5	True				
ANR	999934	ParameterType	gx_device *		999826	0					
ANR	999935	Identifier	dev		999826	1					
ANR	999936	Parameter	gs_logical_operation_t lop	436:26:14687:14712	999826	6	True				
ANR	999937	ParameterType	gs_logical_operation_t		999826	0					
ANR	999938	Identifier	lop		999826	1					
ANR	999939	Parameter	const gx_rop_source_t * source	437:26:14741:14770	999826	7	True				
ANR	999940	ParameterType	const gx_rop_source_t *		999826	0					
ANR	999941	Identifier	source		999826	1					
ANR	999942	CFGEntryNode	ENTRY		999826		True				
ANR	999943	CFGExitNode	EXIT		999826		True				
ANR	999944	Symbol	NULL		999826						
ANR	999945	Symbol	* dev_proc		999826						
ANR	999946	Symbol	pdevc		999826						
ANR	999947	Symbol	h		999826						
ANR	999948	Symbol	fill_rectangle_hl_color		999826						
ANR	999949	Symbol	source		999826						
ANR	999950	Symbol	lop		999826						
ANR	999951	Symbol	rect . q . y		999826						
ANR	999952	Symbol	& rect		999826						
ANR	999953	Symbol	"* dev_proc ( dev , fill_rectangle_hl_color )"		999826						
ANR	999954	Symbol	rect . q . x		999826						
ANR	999955	Symbol	rect . p . x		999826						
ANR	999956	Symbol	rect		999826						
ANR	999957	Symbol	rect . p . y		999826						
ANR	999958	Symbol	dev		999826						
ANR	999959	Symbol	dev_proc		999826						
ANR	999960	Symbol	w		999826						
ANR	999961	Symbol	int2fixed		999826						
ANR	999962	Symbol	x		999826						
ANR	999963	Symbol	y		999826						
ANR	999964	Symbol	rect . q		999826						
ANR	999965	Symbol	rect . p		999826						
ANR	999966	Function	gx_dc_devn_fill_masked	452:0:15255:17669							
ANR	999967	FunctionDef	"gx_dc_devn_fill_masked (const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert)"		999966	0					
ANR	999968	CompoundStatement		456:0:15486:17669	999966	0					
ANR	999969	IdentifierDeclStatement	int lbit = data_x & 7 ;	457:4:15492:15513	999966	0	True				
ANR	999970	IdentifierDecl	lbit = data_x & 7		999966	0					
ANR	999971	IdentifierDeclType	int		999966	0					
ANR	999972	Identifier	lbit		999966	1					
ANR	999973	AssignmentExpression	lbit = data_x & 7		999966	2		=			
ANR	999974	Identifier	lbit		999966	0					
ANR	999975	BitAndExpression	data_x & 7		999966	1		&			
ANR	999976	Identifier	data_x		999966	0					
ANR	999977	PrimaryExpression	7		999966	1					
ANR	999978	IdentifierDeclStatement	const byte * row = data + ( data_x >> 3 ) ;	458:4:15519:15557	999966	1	True				
ANR	999979	IdentifierDecl	* row = data + ( data_x >> 3 )		999966	0					
ANR	999980	IdentifierDeclType	const byte *		999966	0					
ANR	999981	Identifier	row		999966	1					
ANR	999982	AssignmentExpression	* row = data + ( data_x >> 3 )		999966	2		=			
ANR	999983	Identifier	row		999966	0					
ANR	999984	AdditiveExpression	data + ( data_x >> 3 )		999966	1		+			
ANR	999985	Identifier	data		999966	0					
ANR	999986	ShiftExpression	data_x >> 3		999966	1		>>			
ANR	999987	Identifier	data_x		999966	0					
ANR	999988	PrimaryExpression	3		999966	1					
ANR	999989	IdentifierDeclStatement	uint one = ( invert ? 0 : 0xff ) ;	459:4:15563:15593	999966	2	True				
ANR	999990	IdentifierDecl	one = ( invert ? 0 : 0xff )		999966	0					
ANR	999991	IdentifierDeclType	uint		999966	0					
ANR	999992	Identifier	one		999966	1					
ANR	999993	AssignmentExpression	one = ( invert ? 0 : 0xff )		999966	2		=			
ANR	999994	Identifier	one		999966	0					
ANR	999995	ConditionalExpression	invert ? 0 : 0xff		999966	1					
ANR	999996	Condition	invert		999966	0					
ANR	999997	Identifier	invert		999966	0					
ANR	999998	PrimaryExpression	0		999966	1					
ANR	999999	PrimaryExpression	0xff		999966	2					
ANR	1000000	IdentifierDeclStatement	uint zero = one ^ 0xff ;	460:4:15599:15621	999966	3	True				
ANR	1000001	IdentifierDecl	zero = one ^ 0xff		999966	0					
ANR	1000002	IdentifierDeclType	uint		999966	0					
ANR	1000003	Identifier	zero		999966	1					
ANR	1000004	AssignmentExpression	zero = one ^ 0xff		999966	2		=			
ANR	1000005	Identifier	zero		999966	0					
ANR	1000006	ExclusiveOrExpression	one ^ 0xff		999966	1		^			
ANR	1000007	Identifier	one		999966	0					
ANR	1000008	PrimaryExpression	0xff		999966	1					
ANR	1000009	IdentifierDeclStatement	int iy ;	461:4:15627:15633	999966	4	True				
ANR	1000010	IdentifierDecl	iy		999966	0					
ANR	1000011	IdentifierDeclType	int		999966	0					
ANR	1000012	Identifier	iy		999966	1					
ANR	1000013	ForStatement	"for ( iy = 0 ; iy < h ; ++ iy , row += raster )"		999966	5					
ANR	1000014	ForInit	iy = 0 ;	463:9:15645:15651	999966	0	True				
ANR	1000015	AssignmentExpression	iy = 0		999966	0		=			
ANR	1000016	Identifier	iy		999966	0					
ANR	1000017	PrimaryExpression	0		999966	1					
ANR	1000018	Condition	iy < h	463:17:15653:15658	999966	1	True				
ANR	1000019	RelationalExpression	iy < h		999966	0		<			
ANR	1000020	Identifier	iy		999966	0					
ANR	1000021	Identifier	h		999966	1					
ANR	1000022	Expression	"++ iy , row += raster"	463:25:15661:15679	999966	2	True				
ANR	1000023	UnaryExpression	++ iy		999966	0					
ANR	1000024	IncDec	++		999966	0					
ANR	1000025	Identifier	iy		999966	1					
ANR	1000026	AssignmentExpression	row += raster		999966	1		+=			
ANR	1000027	Identifier	row		999966	0					
ANR	1000028	Identifier	raster		999966	1					
ANR	1000029	CompoundStatement		12:8:280:286	999966	3					
ANR	1000030	IdentifierDeclStatement	const byte * p = row ;	464:8:15692:15711	999966	0	True				
ANR	1000031	IdentifierDecl	* p = row		999966	0					
ANR	1000032	IdentifierDeclType	const byte *		999966	0					
ANR	1000033	Identifier	p		999966	1					
ANR	1000034	AssignmentExpression	* p = row		999966	2		=			
ANR	1000035	Identifier	row		999966	0					
ANR	1000036	Identifier	row		999966	1					
ANR	1000037	IdentifierDeclStatement	int bit = lbit ;	465:8:15721:15735	999966	1	True				
ANR	1000038	IdentifierDecl	bit = lbit		999966	0					
ANR	1000039	IdentifierDeclType	int		999966	0					
ANR	1000040	Identifier	bit		999966	1					
ANR	1000041	AssignmentExpression	bit = lbit		999966	2		=			
ANR	1000042	Identifier	lbit		999966	0					
ANR	1000043	Identifier	lbit		999966	1					
ANR	1000044	IdentifierDeclStatement	int left = w ;	466:8:15745:15757	999966	2	True				
ANR	1000045	IdentifierDecl	left = w		999966	0					
ANR	1000046	IdentifierDeclType	int		999966	0					
ANR	1000047	Identifier	left		999966	1					
ANR	1000048	AssignmentExpression	left = w		999966	2		=			
ANR	1000049	Identifier	w		999966	0					
ANR	1000050	Identifier	w		999966	1					
ANR	1000051	IdentifierDeclStatement	int l0 ;	467:8:15767:15773	999966	3	True				
ANR	1000052	IdentifierDecl	l0		999966	0					
ANR	1000053	IdentifierDeclType	int		999966	0					
ANR	1000054	Identifier	l0		999966	1					
ANR	1000055	WhileStatement	while ( left )		999966	4					
ANR	1000056	Condition	left	469:15:15791:15794	999966	0	True				
ANR	1000057	Identifier	left		999966	0					
ANR	1000058	CompoundStatement		15:12:324:337	999966	1					
ANR	1000059	IdentifierDeclStatement	"int run , code ;"	470:12:15811:15824	999966	0	True				
ANR	1000060	IdentifierDecl	run		999966	0					
ANR	1000061	IdentifierDeclType	int		999966	0					
ANR	1000062	Identifier	run		999966	1					
ANR	1000063	IdentifierDecl	code		999966	1					
ANR	1000064	IdentifierDeclType	int		999966	0					
ANR	1000065	Identifier	code		999966	1					
ANR	1000066	ExpressionStatement	run = byte_bit_run_length [ bit ] [ * p ^ one ]	473:12:15878:15918	999966	1	True				
ANR	1000067	AssignmentExpression	run = byte_bit_run_length [ bit ] [ * p ^ one ]		999966	0		=			
ANR	1000068	Identifier	run		999966	0					
ANR	1000069	ArrayIndexing	byte_bit_run_length [ bit ] [ * p ^ one ]		999966	1					
ANR	1000070	ArrayIndexing	byte_bit_run_length [ bit ]		999966	0					
ANR	1000071	Identifier	byte_bit_run_length		999966	0					
ANR	1000072	Identifier	bit		999966	1					
ANR	1000073	ExclusiveOrExpression	* p ^ one		999966	1		^			
ANR	1000074	UnaryOperationExpression	* p		999966	0					
ANR	1000075	UnaryOperator	*		999966	0					
ANR	1000076	Identifier	p		999966	1					
ANR	1000077	Identifier	one		999966	1					
ANR	1000078	IfStatement	if ( run )		999966	2					
ANR	1000079	Condition	run	474:16:15936:15938	999966	0	True				
ANR	1000080	Identifier	run		999966	0					
ANR	1000081	CompoundStatement		19:21:454:454	999966	1					
ANR	1000082	IfStatement	if ( run < 8 )		999966	0					
ANR	1000083	Condition	run < 8	475:20:15963:15969	999966	0	True				
ANR	1000084	RelationalExpression	run < 8		999966	0		<			
ANR	1000085	Identifier	run		999966	0					
ANR	1000086	PrimaryExpression	8		999966	1					
ANR	1000087	CompoundStatement		20:29:485:485	999966	1					
ANR	1000088	IfStatement	if ( run >= left )		999966	0					
ANR	1000089	Condition	run >= left	476:24:15998:16008	999966	0	True				
ANR	1000090	RelationalExpression	run >= left		999966	0		>=			
ANR	1000091	Identifier	run		999966	0					
ANR	1000092	Identifier	left		999966	1					
ANR	1000093	BreakStatement	break ;	477:24:16035:16040	999966	1	True				
ANR	1000094	ExpressionStatement	"bit += run , left -= run"	478:20:16094:16117	999966	1	True				
ANR	1000095	Expression	"bit += run , left -= run"		999966	0					
ANR	1000096	AssignmentExpression	bit += run		999966	0		+=			
ANR	1000097	Identifier	bit		999966	0					
ANR	1000098	Identifier	run		999966	1					
ANR	1000099	AssignmentExpression	left -= run		999966	1		-=			
ANR	1000100	Identifier	left		999966	0					
ANR	1000101	Identifier	run		999966	1					
ANR	1000102	ElseStatement	else		999966	0					
ANR	1000103	IfStatement	if ( ( run -= 8 ) >= left )		999966	0					
ANR	1000104	Condition	( run -= 8 ) >= left	479:27:16146:16163	999966	0	True				
ANR	1000105	RelationalExpression	( run -= 8 ) >= left		999966	0		>=			
ANR	1000106	AssignmentExpression	run -= 8		999966	0		-=			
ANR	1000107	Identifier	run		999966	0					
ANR	1000108	PrimaryExpression	8		999966	1					
ANR	1000109	Identifier	left		999966	1					
ANR	1000110	BreakStatement	break ;	480:20:16186:16191	999966	1	True				
ANR	1000111	ElseStatement	else		999966	0					
ANR	1000112	CompoundStatement		26:21:759:759	999966	0					
ANR	1000113	ExpressionStatement	left -= run	482:20:16268:16279	999966	0	True				
ANR	1000114	AssignmentExpression	left -= run		999966	0		-=			
ANR	1000115	Identifier	left		999966	0					
ANR	1000116	Identifier	run		999966	1					
ANR	1000117	ExpressionStatement	++ p	483:20:16301:16304	999966	1	True				
ANR	1000118	UnaryExpression	++ p		999966	0					
ANR	1000119	IncDec	++		999966	0					
ANR	1000120	Identifier	p		999966	1					
ANR	1000121	WhileStatement	while ( left > 8 && * p == zero )		999966	2					
ANR	1000122	Condition	left > 8 && * p == zero	484:27:16333:16354	999966	0	True				
ANR	1000123	AndExpression	left > 8 && * p == zero		999966	0		&&			
ANR	1000124	RelationalExpression	left > 8		999966	0		>			
ANR	1000125	Identifier	left		999966	0					
ANR	1000126	PrimaryExpression	8		999966	1					
ANR	1000127	EqualityExpression	* p == zero		999966	1		==			
ANR	1000128	UnaryOperationExpression	* p		999966	0					
ANR	1000129	UnaryOperator	*		999966	0					
ANR	1000130	Identifier	p		999966	1					
ANR	1000131	Identifier	zero		999966	1					
ANR	1000132	ExpressionStatement	"left -= 8 , ++ p"	485:24:16381:16395	999966	1	True				
ANR	1000133	Expression	"left -= 8 , ++ p"		999966	0					
ANR	1000134	AssignmentExpression	left -= 8		999966	0		-=			
ANR	1000135	Identifier	left		999966	0					
ANR	1000136	PrimaryExpression	8		999966	1					
ANR	1000137	UnaryExpression	++ p		999966	1					
ANR	1000138	IncDec	++		999966	0					
ANR	1000139	Identifier	p		999966	1					
ANR	1000140	ExpressionStatement	run = byte_bit_run_length_0 [ * p ^ one ]	486:20:16417:16454	999966	3	True				
ANR	1000141	AssignmentExpression	run = byte_bit_run_length_0 [ * p ^ one ]		999966	0		=			
ANR	1000142	Identifier	run		999966	0					
ANR	1000143	ArrayIndexing	byte_bit_run_length_0 [ * p ^ one ]		999966	1					
ANR	1000144	Identifier	byte_bit_run_length_0		999966	0					
ANR	1000145	ExclusiveOrExpression	* p ^ one		999966	1		^			
ANR	1000146	UnaryOperationExpression	* p		999966	0					
ANR	1000147	UnaryOperator	*		999966	0					
ANR	1000148	Identifier	p		999966	1					
ANR	1000149	Identifier	one		999966	1					
ANR	1000150	IfStatement	if ( run >= left )		999966	4					
ANR	1000151	Condition	run >= left	487:24:16480:16490	999966	0	True				
ANR	1000152	RelationalExpression	run >= left		999966	0		>=			
ANR	1000153	Identifier	run		999966	0					
ANR	1000154	Identifier	left		999966	1					
ANR	1000155	BreakStatement	break ;	488:24:16553:16558	999966	1	True				
ANR	1000156	ElseStatement	else		999966	0					
ANR	1000157	ExpressionStatement	"bit = run & 7 , left -= run"	490:24:16641:16667	999966	0	True				
ANR	1000158	Expression	"bit = run & 7 , left -= run"		999966	0					
ANR	1000159	AssignmentExpression	bit = run & 7		999966	0		=			
ANR	1000160	Identifier	bit		999966	0					
ANR	1000161	BitAndExpression	run & 7		999966	1		&			
ANR	1000162	Identifier	run		999966	0					
ANR	1000163	PrimaryExpression	7		999966	1					
ANR	1000164	AssignmentExpression	left -= run		999966	1		-=			
ANR	1000165	Identifier	left		999966	0					
ANR	1000166	Identifier	run		999966	1					
ANR	1000167	ExpressionStatement	l0 = left	493:12:16713:16722	999966	3	True				
ANR	1000168	AssignmentExpression	l0 = left		999966	0		=			
ANR	1000169	Identifier	l0		999966	0					
ANR	1000170	Identifier	left		999966	1					
ANR	1000171	ExpressionStatement	run = byte_bit_run_length [ bit ] [ * p ^ zero ]	495:12:16793:16834	999966	4	True				
ANR	1000172	AssignmentExpression	run = byte_bit_run_length [ bit ] [ * p ^ zero ]		999966	0		=			
ANR	1000173	Identifier	run		999966	0					
ANR	1000174	ArrayIndexing	byte_bit_run_length [ bit ] [ * p ^ zero ]		999966	1					
ANR	1000175	ArrayIndexing	byte_bit_run_length [ bit ]		999966	0					
ANR	1000176	Identifier	byte_bit_run_length		999966	0					
ANR	1000177	Identifier	bit		999966	1					
ANR	1000178	ExclusiveOrExpression	* p ^ zero		999966	1		^			
ANR	1000179	UnaryOperationExpression	* p		999966	0					
ANR	1000180	UnaryOperator	*		999966	0					
ANR	1000181	Identifier	p		999966	1					
ANR	1000182	Identifier	zero		999966	1					
ANR	1000183	IfStatement	if ( run < 8 )		999966	5					
ANR	1000184	Condition	run < 8	496:16:16852:16858	999966	0	True				
ANR	1000185	RelationalExpression	run < 8		999966	0		<			
ANR	1000186	Identifier	run		999966	0					
ANR	1000187	PrimaryExpression	8		999966	1					
ANR	1000188	CompoundStatement		41:25:1374:1374	999966	1					
ANR	1000189	IfStatement	if ( run >= left )		999966	0					
ANR	1000190	Condition	run >= left	497:20:16883:16893	999966	0	True				
ANR	1000191	RelationalExpression	run >= left		999966	0		>=			
ANR	1000192	Identifier	run		999966	0					
ANR	1000193	Identifier	left		999966	1					
ANR	1000194	ExpressionStatement	left = 0	498:20:16916:16924	999966	1	True				
ANR	1000195	AssignmentExpression	left = 0		999966	0		=			
ANR	1000196	Identifier	left		999966	0					
ANR	1000197	PrimaryExpression	0		999966	1					
ANR	1000198	ElseStatement	else		999966	0					
ANR	1000199	ExpressionStatement	"bit += run , left -= run"	500:20:16967:16990	999966	0	True				
ANR	1000200	Expression	"bit += run , left -= run"		999966	0					
ANR	1000201	AssignmentExpression	bit += run		999966	0		+=			
ANR	1000202	Identifier	bit		999966	0					
ANR	1000203	Identifier	run		999966	1					
ANR	1000204	AssignmentExpression	left -= run		999966	1		-=			
ANR	1000205	Identifier	left		999966	0					
ANR	1000206	Identifier	run		999966	1					
ANR	1000207	ElseStatement	else		999966	0					
ANR	1000208	IfStatement	if ( ( run -= 8 ) >= left )		999966	0					
ANR	1000209	Condition	( run -= 8 ) >= left	501:23:17015:17032	999966	0	True				
ANR	1000210	RelationalExpression	( run -= 8 ) >= left		999966	0		>=			
ANR	1000211	AssignmentExpression	run -= 8		999966	0		-=			
ANR	1000212	Identifier	run		999966	0					
ANR	1000213	PrimaryExpression	8		999966	1					
ANR	1000214	Identifier	left		999966	1					
ANR	1000215	ExpressionStatement	left = 0	502:16:17051:17059	999966	1	True				
ANR	1000216	AssignmentExpression	left = 0		999966	0		=			
ANR	1000217	Identifier	left		999966	0					
ANR	1000218	PrimaryExpression	0		999966	1					
ANR	1000219	ElseStatement	else		999966	0					
ANR	1000220	CompoundStatement		48:17:1591:1591	999966	0					
ANR	1000221	ExpressionStatement	left -= run	504:16:17096:17107	999966	0	True				
ANR	1000222	AssignmentExpression	left -= run		999966	0		-=			
ANR	1000223	Identifier	left		999966	0					
ANR	1000224	Identifier	run		999966	1					
ANR	1000225	ExpressionStatement	++ p	505:16:17125:17128	999966	1	True				
ANR	1000226	UnaryExpression	++ p		999966	0					
ANR	1000227	IncDec	++		999966	0					
ANR	1000228	Identifier	p		999966	1					
ANR	1000229	WhileStatement	while ( left > 8 && * p == one )		999966	2					
ANR	1000230	Condition	left > 8 && * p == one	506:23:17153:17173	999966	0	True				
ANR	1000231	AndExpression	left > 8 && * p == one		999966	0		&&			
ANR	1000232	RelationalExpression	left > 8		999966	0		>			
ANR	1000233	Identifier	left		999966	0					
ANR	1000234	PrimaryExpression	8		999966	1					
ANR	1000235	EqualityExpression	* p == one		999966	1		==			
ANR	1000236	UnaryOperationExpression	* p		999966	0					
ANR	1000237	UnaryOperator	*		999966	0					
ANR	1000238	Identifier	p		999966	1					
ANR	1000239	Identifier	one		999966	1					
ANR	1000240	ExpressionStatement	"left -= 8 , ++ p"	507:20:17196:17210	999966	1	True				
ANR	1000241	Expression	"left -= 8 , ++ p"		999966	0					
ANR	1000242	AssignmentExpression	left -= 8		999966	0		-=			
ANR	1000243	Identifier	left		999966	0					
ANR	1000244	PrimaryExpression	8		999966	1					
ANR	1000245	UnaryExpression	++ p		999966	1					
ANR	1000246	IncDec	++		999966	0					
ANR	1000247	Identifier	p		999966	1					
ANR	1000248	ExpressionStatement	run = byte_bit_run_length_0 [ * p ^ zero ]	508:16:17228:17266	999966	3	True				
ANR	1000249	AssignmentExpression	run = byte_bit_run_length_0 [ * p ^ zero ]		999966	0		=			
ANR	1000250	Identifier	run		999966	0					
ANR	1000251	ArrayIndexing	byte_bit_run_length_0 [ * p ^ zero ]		999966	1					
ANR	1000252	Identifier	byte_bit_run_length_0		999966	0					
ANR	1000253	ExclusiveOrExpression	* p ^ zero		999966	1		^			
ANR	1000254	UnaryOperationExpression	* p		999966	0					
ANR	1000255	UnaryOperator	*		999966	0					
ANR	1000256	Identifier	p		999966	1					
ANR	1000257	Identifier	zero		999966	1					
ANR	1000258	IfStatement	if ( run >= left )		999966	4					
ANR	1000259	Condition	run >= left	509:20:17288:17298	999966	0	True				
ANR	1000260	RelationalExpression	run >= left		999966	0		>=			
ANR	1000261	Identifier	run		999966	0					
ANR	1000262	Identifier	left		999966	1					
ANR	1000263	ExpressionStatement	left = 0	510:20:17357:17365	999966	1	True				
ANR	1000264	AssignmentExpression	left = 0		999966	0		=			
ANR	1000265	Identifier	left		999966	0					
ANR	1000266	PrimaryExpression	0		999966	1					
ANR	1000267	ElseStatement	else		999966	0					
ANR	1000268	ExpressionStatement	"bit = run & 7 , left -= run"	512:20:17408:17434	999966	0	True				
ANR	1000269	Expression	"bit = run & 7 , left -= run"		999966	0					
ANR	1000270	AssignmentExpression	bit = run & 7		999966	0		=			
ANR	1000271	Identifier	bit		999966	0					
ANR	1000272	BitAndExpression	run & 7		999966	1		&			
ANR	1000273	Identifier	run		999966	0					
ANR	1000274	PrimaryExpression	7		999966	1					
ANR	1000275	AssignmentExpression	left -= run		999966	1		-=			
ANR	1000276	Identifier	left		999966	0					
ANR	1000277	Identifier	run		999966	1					
ANR	1000278	ExpressionStatement	"code = gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"	514:12:17462:17582	999966	6	True				
ANR	1000279	AssignmentExpression	"code = gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"		999966	0		=			
ANR	1000280	Identifier	code		999966	0					
ANR	1000281	CallExpression	"gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"		999966	1					
ANR	1000282	Callee	gx_device_color_fill_rectangle		999966	0					
ANR	1000283	Identifier	gx_device_color_fill_rectangle		999966	0					
ANR	1000284	ArgumentList	pdevc		999966	1					
ANR	1000285	Argument	pdevc		999966	0					
ANR	1000286	Identifier	pdevc		999966	0					
ANR	1000287	Argument	x + w - l0		999966	1					
ANR	1000288	AdditiveExpression	x + w - l0		999966	0		+			
ANR	1000289	Identifier	x		999966	0					
ANR	1000290	AdditiveExpression	w - l0		999966	1		-			
ANR	1000291	Identifier	w		999966	0					
ANR	1000292	Identifier	l0		999966	1					
ANR	1000293	Argument	y + iy		999966	2					
ANR	1000294	AdditiveExpression	y + iy		999966	0		+			
ANR	1000295	Identifier	y		999966	0					
ANR	1000296	Identifier	iy		999966	1					
ANR	1000297	Argument	l0 - left		999966	3					
ANR	1000298	AdditiveExpression	l0 - left		999966	0		-			
ANR	1000299	Identifier	l0		999966	0					
ANR	1000300	Identifier	left		999966	1					
ANR	1000301	Argument	1		999966	4					
ANR	1000302	PrimaryExpression	1		999966	0					
ANR	1000303	Argument	dev		999966	5					
ANR	1000304	Identifier	dev		999966	0					
ANR	1000305	Argument	lop		999966	6					
ANR	1000306	Identifier	lop		999966	0					
ANR	1000307	Argument	NULL		999966	7					
ANR	1000308	Identifier	NULL		999966	0					
ANR	1000309	IfStatement	if ( code < 0 )		999966	7					
ANR	1000310	Condition	code < 0	516:16:17600:17607	999966	0	True				
ANR	1000311	RelationalExpression	code < 0		999966	0		<			
ANR	1000312	Identifier	code		999966	0					
ANR	1000313	PrimaryExpression	0		999966	1					
ANR	1000314	ReturnStatement	return code ;	517:16:17626:17637	999966	1	True				
ANR	1000315	Identifier	code		999966	0					
ANR	1000316	ReturnStatement	return 0 ;	520:4:17659:17667	999966	6	True				
ANR	1000317	PrimaryExpression	0		999966	0					
ANR	1000318	ReturnType	int		999966	1					
ANR	1000319	Identifier	gx_dc_devn_fill_masked		999966	2					
ANR	1000320	ParameterList	"const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert"		999966	3					
ANR	1000321	Parameter	const gx_device_color * pdevc	453:23:15282:15310	999966	0	True				
ANR	1000322	ParameterType	const gx_device_color *		999966	0					
ANR	1000323	Identifier	pdevc		999966	1					
ANR	1000324	Parameter	const byte * data	453:54:15313:15329	999966	1	True				
ANR	1000325	ParameterType	const byte *		999966	0					
ANR	1000326	Identifier	data		999966	1					
ANR	1000327	Parameter	int data_x	454:8:15340:15349	999966	2	True				
ANR	1000328	ParameterType	int		999966	0					
ANR	1000329	Identifier	data_x		999966	1					
ANR	1000330	Parameter	int raster	454:20:15352:15361	999966	3	True				
ANR	1000331	ParameterType	int		999966	0					
ANR	1000332	Identifier	raster		999966	1					
ANR	1000333	Parameter	gx_bitmap_id id	454:32:15364:15378	999966	4	True				
ANR	1000334	ParameterType	gx_bitmap_id		999966	0					
ANR	1000335	Identifier	id		999966	1					
ANR	1000336	Parameter	int x	454:49:15381:15385	999966	5	True				
ANR	1000337	ParameterType	int		999966	0					
ANR	1000338	Identifier	x		999966	1					
ANR	1000339	Parameter	int y	454:56:15388:15392	999966	6	True				
ANR	1000340	ParameterType	int		999966	0					
ANR	1000341	Identifier	y		999966	1					
ANR	1000342	Parameter	int w	454:63:15395:15399	999966	7	True				
ANR	1000343	ParameterType	int		999966	0					
ANR	1000344	Identifier	w		999966	1					
ANR	1000345	Parameter	int h	454:70:15402:15406	999966	8	True				
ANR	1000346	ParameterType	int		999966	0					
ANR	1000347	Identifier	h		999966	1					
ANR	1000348	Parameter	gx_device * dev	455:19:15428:15442	999966	9	True				
ANR	1000349	ParameterType	gx_device *		999966	0					
ANR	1000350	Identifier	dev		999966	1					
ANR	1000351	Parameter	gs_logical_operation_t lop	455:36:15445:15470	999966	10	True				
ANR	1000352	ParameterType	gs_logical_operation_t		999966	0					
ANR	1000353	Identifier	lop		999966	1					
ANR	1000354	Parameter	bool invert	455:64:15473:15483	999966	11	True				
ANR	1000355	ParameterType	bool		999966	0					
ANR	1000356	Identifier	invert		999966	1					
ANR	1000357	CFGEntryNode	ENTRY		999966		True				
ANR	1000358	CFGExitNode	EXIT		999966		True				
ANR	1000359	Symbol	code		999966						
ANR	1000360	Symbol	* byte_bit_run_length		999966						
ANR	1000361	Symbol	data		999966						
ANR	1000362	Symbol	l0		999966						
ANR	1000363	Symbol	pdevc		999966						
ANR	1000364	Symbol	* bit		999966						
ANR	1000365	Symbol	run		999966						
ANR	1000366	Symbol	lop		999966						
ANR	1000367	Symbol	bit		999966						
ANR	1000368	Symbol	zero		999966						
ANR	1000369	Symbol	* one		999966						
ANR	1000370	Symbol	data_x		999966						
ANR	1000371	Symbol	lbit		999966						
ANR	1000372	Symbol	dev		999966						
ANR	1000373	Symbol	byte_bit_run_length_0		999966						
ANR	1000374	Symbol	id		999966						
ANR	1000375	Symbol	row		999966						
ANR	1000376	Symbol	* * p		999966						
ANR	1000377	Symbol	* * bit		999966						
ANR	1000378	Symbol	gx_device_color_fill_rectangle		999966						
ANR	1000379	Symbol	NULL		999966						
ANR	1000380	Symbol	invert		999966						
ANR	1000381	Symbol	one		999966						
ANR	1000382	Symbol	raster		999966						
ANR	1000383	Symbol	h		999966						
ANR	1000384	Symbol	iy		999966						
ANR	1000385	Symbol	p		999966						
ANR	1000386	Symbol	left		999966						
ANR	1000387	Symbol	w		999966						
ANR	1000388	Symbol	x		999966						
ANR	1000389	Symbol	byte_bit_run_length		999966						
ANR	1000390	Symbol	y		999966						
ANR	1000391	Symbol	* byte_bit_run_length_0		999966						
ANR	1000392	Symbol	* zero		999966						
ANR	1000393	Symbol	* p		999966						
ANR	1000394	Symbol	* * byte_bit_run_length		999966						
ANR	1000395	Function	gx_dc_devn_equal	523:0:17672:18118							
ANR	1000396	FunctionDef	"gx_dc_devn_equal (const gx_device_color * pdevc1 , const gx_device_color * pdevc2)"		1000395	0					
ANR	1000397	CompoundStatement		525:0:17765:18118	1000395	0					
ANR	1000398	IdentifierDeclStatement	int k ;	526:4:17771:17776	1000395	0	True				
ANR	1000399	IdentifierDecl	k		1000395	0					
ANR	1000400	IdentifierDeclType	int		1000395	0					
ANR	1000401	Identifier	k		1000395	1					
ANR	1000402	IfStatement	if ( pdevc1 -> type == gx_dc_type_devn && pdevc2 -> type == gx_dc_type_devn )		1000395	1					
ANR	1000403	Condition	pdevc1 -> type == gx_dc_type_devn && pdevc2 -> type == gx_dc_type_devn	528:8:17787:17852	1000395	0	True				
ANR	1000404	AndExpression	pdevc1 -> type == gx_dc_type_devn && pdevc2 -> type == gx_dc_type_devn		1000395	0		&&			
ANR	1000405	EqualityExpression	pdevc1 -> type == gx_dc_type_devn		1000395	0		==			
ANR	1000406	PtrMemberAccess	pdevc1 -> type		1000395	0					
ANR	1000407	Identifier	pdevc1		1000395	0					
ANR	1000408	Identifier	type		1000395	1					
ANR	1000409	Identifier	gx_dc_type_devn		1000395	1					
ANR	1000410	EqualityExpression	pdevc2 -> type == gx_dc_type_devn		1000395	1		==			
ANR	1000411	PtrMemberAccess	pdevc2 -> type		1000395	0					
ANR	1000412	Identifier	pdevc2		1000395	0					
ANR	1000413	Identifier	type		1000395	1					
ANR	1000414	Identifier	gx_dc_type_devn		1000395	1					
ANR	1000415	CompoundStatement		4:76:89:89	1000395	1					
ANR	1000416	ForStatement	for ( k = 0 ; k < GX_DEVICE_COLOR_MAX_COMPONENTS ; k ++ )		1000395	0					
ANR	1000417	ForInit	k = 0 ;	529:13:17870:17875	1000395	0	True				
ANR	1000418	AssignmentExpression	k = 0		1000395	0		=			
ANR	1000419	Identifier	k		1000395	0					
ANR	1000420	PrimaryExpression	0		1000395	1					
ANR	1000421	Condition	k < GX_DEVICE_COLOR_MAX_COMPONENTS	529:20:17877:17910	1000395	1	True				
ANR	1000422	RelationalExpression	k < GX_DEVICE_COLOR_MAX_COMPONENTS		1000395	0		<			
ANR	1000423	Identifier	k		1000395	0					
ANR	1000424	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		1000395	1					
ANR	1000425	PostIncDecOperationExpression	k ++	529:56:17913:17915	1000395	2	True				
ANR	1000426	Identifier	k		1000395	0					
ANR	1000427	IncDec	++		1000395	1					
ANR	1000428	CompoundStatement		5:61:152:152	1000395	3					
ANR	1000429	IfStatement	if ( pdevc1 -> colors . devn . values [ k ] != pdevc2 -> colors . devn . values [ k ] )		1000395	0					
ANR	1000430	Condition	pdevc1 -> colors . devn . values [ k ] != pdevc2 -> colors . devn . values [ k ]	530:16:17936:17997	1000395	0	True				
ANR	1000431	EqualityExpression	pdevc1 -> colors . devn . values [ k ] != pdevc2 -> colors . devn . values [ k ]		1000395	0		!=			
ANR	1000432	ArrayIndexing	pdevc1 -> colors . devn . values [ k ]		1000395	0					
ANR	1000433	MemberAccess	pdevc1 -> colors . devn . values		1000395	0					
ANR	1000434	MemberAccess	pdevc1 -> colors . devn		1000395	0					
ANR	1000435	PtrMemberAccess	pdevc1 -> colors		1000395	0					
ANR	1000436	Identifier	pdevc1		1000395	0					
ANR	1000437	Identifier	colors		1000395	1					
ANR	1000438	Identifier	devn		1000395	1					
ANR	1000439	Identifier	values		1000395	1					
ANR	1000440	Identifier	k		1000395	1					
ANR	1000441	ArrayIndexing	pdevc2 -> colors . devn . values [ k ]		1000395	1					
ANR	1000442	MemberAccess	pdevc2 -> colors . devn . values		1000395	0					
ANR	1000443	MemberAccess	pdevc2 -> colors . devn		1000395	0					
ANR	1000444	PtrMemberAccess	pdevc2 -> colors		1000395	0					
ANR	1000445	Identifier	pdevc2		1000395	0					
ANR	1000446	Identifier	colors		1000395	1					
ANR	1000447	Identifier	devn		1000395	1					
ANR	1000448	Identifier	values		1000395	1					
ANR	1000449	Identifier	k		1000395	1					
ANR	1000450	CompoundStatement		6:80:234:234	1000395	1					
ANR	1000451	ReturnStatement	return false ;	531:16:18018:18030	1000395	0	True				
ANR	1000452	Identifier	false		1000395	0					
ANR	1000453	ReturnStatement	return true ;	534:8:18064:18075	1000395	1	True				
ANR	1000454	Identifier	true		1000395	0					
ANR	1000455	ElseStatement	else		1000395	0					
ANR	1000456	CompoundStatement		11:11:322:322	1000395	0					
ANR	1000457	ReturnStatement	return false ;	536:8:18098:18110	1000395	0	True				
ANR	1000458	Identifier	false		1000395	0					
ANR	1000459	ReturnType	static bool		1000395	1					
ANR	1000460	Identifier	gx_dc_devn_equal		1000395	2					
ANR	1000461	ParameterList	"const gx_device_color * pdevc1 , const gx_device_color * pdevc2"		1000395	3					
ANR	1000462	Parameter	const gx_device_color * pdevc1	524:17:17701:17730	1000395	0	True				
ANR	1000463	ParameterType	const gx_device_color *		1000395	0					
ANR	1000464	Identifier	pdevc1		1000395	1					
ANR	1000465	Parameter	const gx_device_color * pdevc2	524:49:17733:17762	1000395	1	True				
ANR	1000466	ParameterType	const gx_device_color *		1000395	0					
ANR	1000467	Identifier	pdevc2		1000395	1					
ANR	1000468	CFGEntryNode	ENTRY		1000395		True				
ANR	1000469	CFGExitNode	EXIT		1000395		True				
ANR	1000470	Symbol	* pdevc1		1000395						
ANR	1000471	Symbol	* pdevc2		1000395						
ANR	1000472	Symbol	* pdevc1 -> colors . devn		1000395						
ANR	1000473	Symbol	gx_dc_type_devn		1000395						
ANR	1000474	Symbol	* pdevc2 -> colors		1000395						
ANR	1000475	Symbol	pdevc1 -> colors . devn		1000395						
ANR	1000476	Symbol	pdevc2 -> colors . devn . values		1000395						
ANR	1000477	Symbol	pdevc2		1000395						
ANR	1000478	Symbol	pdevc1 -> colors		1000395						
ANR	1000479	Symbol	pdevc1		1000395						
ANR	1000480	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		1000395						
ANR	1000481	Symbol	* * pdevc1		1000395						
ANR	1000482	Symbol	pdevc2 -> type		1000395						
ANR	1000483	Symbol	pdevc1 -> colors . devn . values		1000395						
ANR	1000484	Symbol	* * pdevc2		1000395						
ANR	1000485	Symbol	pdevc2 -> colors . devn		1000395						
ANR	1000486	Symbol	pdevc1 -> type		1000395						
ANR	1000487	Symbol	false		1000395						
ANR	1000488	Symbol	* pdevc2 -> colors . devn . values		1000395						
ANR	1000489	Symbol	k		1000395						
ANR	1000490	Symbol	* k		1000395						
ANR	1000491	Symbol	* pdevc1 -> colors . devn . values		1000395						
ANR	1000492	Symbol	true		1000395						
ANR	1000493	Symbol	* pdevc1 -> colors		1000395						
ANR	1000494	Symbol	pdevc2 -> colors		1000395						
ANR	1000495	Symbol	* pdevc2 -> colors . devn		1000395						
ANR	1000496	Function	gx_devn_write_color	547:0:18364:19941							
ANR	1000497	FunctionDef	"gx_devn_write_color (const gx_device_color * pdevc , const gx_device * dev , byte * pdata , uint * psize)"		1000496	0					
ANR	1000498	CompoundStatement		553:0:18522:19941	1000496	0					
ANR	1000499	IdentifierDeclStatement	"int num_bytes1 , num_bytes_temp , num_bytes ;"	554:4:18528:18585	1000496	0	True				
ANR	1000500	IdentifierDecl	num_bytes1		1000496	0					
ANR	1000501	IdentifierDeclType	int		1000496	0					
ANR	1000502	Identifier	num_bytes1		1000496	1					
ANR	1000503	IdentifierDecl	num_bytes_temp		1000496	1					
ANR	1000504	IdentifierDeclType	int		1000496	0					
ANR	1000505	Identifier	num_bytes_temp		1000496	1					
ANR	1000506	IdentifierDecl	num_bytes		1000496	2					
ANR	1000507	IdentifierDeclType	int		1000496	0					
ANR	1000508	Identifier	num_bytes		1000496	1					
ANR	1000509	IdentifierDeclStatement	gx_color_index mask_temp ;	555:4:18591:18620	1000496	1	True				
ANR	1000510	IdentifierDecl	mask_temp		1000496	0					
ANR	1000511	IdentifierDeclType	gx_color_index		1000496	0					
ANR	1000512	Identifier	mask_temp		1000496	1					
ANR	1000513	IdentifierDeclStatement	int count = 0 ;	556:4:18626:18655	1000496	2	True				
ANR	1000514	IdentifierDecl	count = 0		1000496	0					
ANR	1000515	IdentifierDeclType	int		1000496	0					
ANR	1000516	Identifier	count		1000496	1					
ANR	1000517	AssignmentExpression	count = 0		1000496	2		=			
ANR	1000518	Identifier	count		1000496	0					
ANR	1000519	PrimaryExpression	0		1000496	1					
ANR	1000520	IdentifierDeclStatement	uchar i ;	557:4:18661:18682	1000496	3	True				
ANR	1000521	IdentifierDecl	i		1000496	0					
ANR	1000522	IdentifierDeclType	uchar		1000496	0					
ANR	1000523	Identifier	i		1000496	1					
ANR	1000524	Statement	gx_device_clist_writer	558:4:18688:18709	1000496	4	True				
ANR	1000525	Statement	*	558:26:18710:18710	1000496	5	True				
ANR	1000526	Statement	const	558:28:18712:18716	1000496	6	True				
ANR	1000527	ExpressionStatement	cdev = & ( ( gx_device_clist * ) dev ) -> writer	558:34:18718:18758	1000496	7	True				
ANR	1000528	AssignmentExpression	cdev = & ( ( gx_device_clist * ) dev ) -> writer		1000496	0		=			
ANR	1000529	Identifier	cdev		1000496	0					
ANR	1000530	UnaryOperationExpression	& ( ( gx_device_clist * ) dev ) -> writer		1000496	1					
ANR	1000531	UnaryOperator	&		1000496	0					
ANR	1000532	PtrMemberAccess	( ( gx_device_clist * ) dev ) -> writer		1000496	1					
ANR	1000533	CastExpression	( gx_device_clist * ) dev		1000496	0					
ANR	1000534	CastTarget	gx_device_clist *		1000496	0					
ANR	1000535	Identifier	dev		1000496	1					
ANR	1000536	Identifier	writer		1000496	1					
ANR	1000537	IdentifierDeclStatement	uchar ncomps = cdev -> clist_color_info . num_components ;	559:4:18764:18816	1000496	8	True				
ANR	1000538	IdentifierDecl	ncomps = cdev -> clist_color_info . num_components		1000496	0					
ANR	1000539	IdentifierDeclType	uchar		1000496	0					
ANR	1000540	Identifier	ncomps		1000496	1					
ANR	1000541	AssignmentExpression	ncomps = cdev -> clist_color_info . num_components		1000496	2		=			
ANR	1000542	Identifier	ncomps		1000496	0					
ANR	1000543	MemberAccess	cdev -> clist_color_info . num_components		1000496	1					
ANR	1000544	PtrMemberAccess	cdev -> clist_color_info		1000496	0					
ANR	1000545	Identifier	cdev		1000496	0					
ANR	1000546	Identifier	clist_color_info		1000496	1					
ANR	1000547	Identifier	num_components		1000496	1					
ANR	1000548	IdentifierDeclStatement	"gx_color_index mask = 0x1 , comp_bits = 0 ;"	560:4:18873:18914	1000496	9	True				
ANR	1000549	IdentifierDecl	mask = 0x1		1000496	0					
ANR	1000550	IdentifierDeclType	gx_color_index		1000496	0					
ANR	1000551	Identifier	mask		1000496	1					
ANR	1000552	AssignmentExpression	mask = 0x1		1000496	2		=			
ANR	1000553	Identifier	mask		1000496	0					
ANR	1000554	PrimaryExpression	0x1		1000496	1					
ANR	1000555	IdentifierDecl	comp_bits = 0		1000496	1					
ANR	1000556	IdentifierDeclType	gx_color_index		1000496	0					
ANR	1000557	Identifier	comp_bits		1000496	1					
ANR	1000558	AssignmentExpression	comp_bits = 0		1000496	2		=			
ANR	1000559	Identifier	comp_bits		1000496	0					
ANR	1000560	PrimaryExpression	0		1000496	1					
ANR	1000561	ForStatement	"for ( i = 0 ; i < ncomps ; i ++ , mask <<= 1 )"		1000496	10					
ANR	1000562	ForInit	i = 0 ;	563:9:18977:18982	1000496	0	True				
ANR	1000563	AssignmentExpression	i = 0		1000496	0		=			
ANR	1000564	Identifier	i		1000496	0					
ANR	1000565	PrimaryExpression	0		1000496	1					
ANR	1000566	Condition	i < ncomps	563:16:18984:18993	1000496	1	True				
ANR	1000567	RelationalExpression	i < ncomps		1000496	0		<			
ANR	1000568	Identifier	i		1000496	0					
ANR	1000569	Identifier	ncomps		1000496	1					
ANR	1000570	Expression	"i ++ , mask <<= 1"	563:28:18996:19010	1000496	2	True				
ANR	1000571	PostIncDecOperationExpression	i ++		1000496	0					
ANR	1000572	Identifier	i		1000496	0					
ANR	1000573	IncDec	++		1000496	1					
ANR	1000574	AssignmentExpression	mask <<= 1		1000496	1		<<=			
ANR	1000575	Identifier	mask		1000496	0					
ANR	1000576	PrimaryExpression	1		1000496	1					
ANR	1000577	CompoundStatement		11:45:490:490	1000496	3					
ANR	1000578	IfStatement	if ( pdevc -> colors . devn . values [ i ] != 0 )		1000496	0					
ANR	1000579	Condition	pdevc -> colors . devn . values [ i ] != 0	564:12:19027:19059	1000496	0	True				
ANR	1000580	EqualityExpression	pdevc -> colors . devn . values [ i ] != 0		1000496	0		!=			
ANR	1000581	ArrayIndexing	pdevc -> colors . devn . values [ i ]		1000496	0					
ANR	1000582	MemberAccess	pdevc -> colors . devn . values		1000496	0					
ANR	1000583	MemberAccess	pdevc -> colors . devn		1000496	0					
ANR	1000584	PtrMemberAccess	pdevc -> colors		1000496	0					
ANR	1000585	Identifier	pdevc		1000496	0					
ANR	1000586	Identifier	colors		1000496	1					
ANR	1000587	Identifier	devn		1000496	1					
ANR	1000588	Identifier	values		1000496	1					
ANR	1000589	Identifier	i		1000496	1					
ANR	1000590	PrimaryExpression	0		1000496	1					
ANR	1000591	CompoundStatement		12:47:539:539	1000496	1					
ANR	1000592	ExpressionStatement	comp_bits |= mask	565:12:19076:19093	1000496	0	True				
ANR	1000593	AssignmentExpression	comp_bits |= mask		1000496	0		|=			
ANR	1000594	Identifier	comp_bits		1000496	0					
ANR	1000595	Identifier	mask		1000496	1					
ANR	1000596	ExpressionStatement	count ++	566:12:19107:19114	1000496	1	True				
ANR	1000597	PostIncDecOperationExpression	count ++		1000496	0					
ANR	1000598	Identifier	count		1000496	0					
ANR	1000599	IncDec	++		1000496	1					
ANR	1000600	ExpressionStatement	mask = comp_bits	569:4:19136:19152	1000496	11	True				
ANR	1000601	AssignmentExpression	mask = comp_bits		1000496	0		=			
ANR	1000602	Identifier	mask		1000496	0					
ANR	1000603	Identifier	comp_bits		1000496	1					
ANR	1000604	ExpressionStatement	num_bytes1 = sizeof ( gx_color_index )	571:4:19159:19194	1000496	12	True				
ANR	1000605	AssignmentExpression	num_bytes1 = sizeof ( gx_color_index )		1000496	0		=			
ANR	1000606	Identifier	num_bytes1		1000496	0					
ANR	1000607	SizeofExpression	sizeof ( gx_color_index )		1000496	1					
ANR	1000608	Sizeof	sizeof		1000496	0					
ANR	1000609	SizeofOperand	gx_color_index		1000496	1					
ANR	1000610	ExpressionStatement	num_bytes = num_bytes1 + count * 2	572:4:19200:19234	1000496	13	True				
ANR	1000611	AssignmentExpression	num_bytes = num_bytes1 + count * 2		1000496	0		=			
ANR	1000612	Identifier	num_bytes		1000496	0					
ANR	1000613	AdditiveExpression	num_bytes1 + count * 2		1000496	1		+			
ANR	1000614	Identifier	num_bytes1		1000496	0					
ANR	1000615	MultiplicativeExpression	count * 2		1000496	1		*			
ANR	1000616	Identifier	count		1000496	0					
ANR	1000617	PrimaryExpression	2		1000496	1					
ANR	1000618	ExpressionStatement	num_bytes_temp = num_bytes1	573:4:19240:19267	1000496	14	True				
ANR	1000619	AssignmentExpression	num_bytes_temp = num_bytes1		1000496	0		=			
ANR	1000620	Identifier	num_bytes_temp		1000496	0					
ANR	1000621	Identifier	num_bytes1		1000496	1					
ANR	1000622	IfStatement	if ( * psize < num_bytes )		1000496	15					
ANR	1000623	Condition	* psize < num_bytes	576:8:19313:19330	1000496	0	True				
ANR	1000624	RelationalExpression	* psize < num_bytes		1000496	0		<			
ANR	1000625	UnaryOperationExpression	* psize		1000496	0					
ANR	1000626	UnaryOperator	*		1000496	0					
ANR	1000627	Identifier	psize		1000496	1					
ANR	1000628	Identifier	num_bytes		1000496	1					
ANR	1000629	CompoundStatement		24:28:810:810	1000496	1					
ANR	1000630	ExpressionStatement	* psize = num_bytes	577:8:19343:19361	1000496	0	True				
ANR	1000631	AssignmentExpression	* psize = num_bytes		1000496	0		=			
ANR	1000632	UnaryOperationExpression	* psize		1000496	0					
ANR	1000633	UnaryOperator	*		1000496	0					
ANR	1000634	Identifier	psize		1000496	1					
ANR	1000635	Identifier	num_bytes		1000496	1					
ANR	1000636	ExpressionStatement	return_error ( gs_error_rangecheck )	578:8:19371:19404	1000496	1	True				
ANR	1000637	CallExpression	return_error ( gs_error_rangecheck )		1000496	0					
ANR	1000638	Callee	return_error		1000496	0					
ANR	1000639	Identifier	return_error		1000496	0					
ANR	1000640	ArgumentList	gs_error_rangecheck		1000496	1					
ANR	1000641	Argument	gs_error_rangecheck		1000496	0					
ANR	1000642	Identifier	gs_error_rangecheck		1000496	0					
ANR	1000643	ExpressionStatement	* psize = num_bytes	580:4:19416:19434	1000496	16	True				
ANR	1000644	AssignmentExpression	* psize = num_bytes		1000496	0		=			
ANR	1000645	UnaryOperationExpression	* psize		1000496	0					
ANR	1000646	UnaryOperator	*		1000496	0					
ANR	1000647	Identifier	psize		1000496	1					
ANR	1000648	Identifier	num_bytes		1000496	1					
ANR	1000649	ExpressionStatement	mask_temp = mask	582:4:19469:19485	1000496	17	True				
ANR	1000650	AssignmentExpression	mask_temp = mask		1000496	0		=			
ANR	1000651	Identifier	mask_temp		1000496	0					
ANR	1000652	Identifier	mask		1000496	1					
ANR	1000653	WhileStatement	while ( -- num_bytes1 >= 0 )		1000496	18					
ANR	1000654	Condition	-- num_bytes1 >= 0	583:11:19498:19514	1000496	0	True				
ANR	1000655	RelationalExpression	-- num_bytes1 >= 0		1000496	0		>=			
ANR	1000656	UnaryExpression	-- num_bytes1		1000496	0					
ANR	1000657	IncDec	--		1000496	0					
ANR	1000658	Identifier	num_bytes1		1000496	1					
ANR	1000659	PrimaryExpression	0		1000496	1					
ANR	1000660	CompoundStatement		31:30:994:994	1000496	1					
ANR	1000661	ExpressionStatement	pdata [ num_bytes1 ] = mask_temp & 0xff	584:8:19527:19563	1000496	0	True				
ANR	1000662	AssignmentExpression	pdata [ num_bytes1 ] = mask_temp & 0xff		1000496	0		=			
ANR	1000663	ArrayIndexing	pdata [ num_bytes1 ]		1000496	0					
ANR	1000664	Identifier	pdata		1000496	0					
ANR	1000665	Identifier	num_bytes1		1000496	1					
ANR	1000666	BitAndExpression	mask_temp & 0xff		1000496	1		&			
ANR	1000667	Identifier	mask_temp		1000496	0					
ANR	1000668	PrimaryExpression	0xff		1000496	1					
ANR	1000669	ExpressionStatement	mask_temp >>= 8	585:8:19573:19588	1000496	1	True				
ANR	1000670	AssignmentExpression	mask_temp >>= 8		1000496	0		>>=			
ANR	1000671	Identifier	mask_temp		1000496	0					
ANR	1000672	PrimaryExpression	8		1000496	1					
ANR	1000673	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		1000496	19					
ANR	1000674	ForInit	i = 0 ;	588:9:19628:19633	1000496	0	True				
ANR	1000675	AssignmentExpression	i = 0		1000496	0		=			
ANR	1000676	Identifier	i		1000496	0					
ANR	1000677	PrimaryExpression	0		1000496	1					
ANR	1000678	Condition	i < ncomps	588:16:19635:19644	1000496	1	True				
ANR	1000679	RelationalExpression	i < ncomps		1000496	0		<			
ANR	1000680	Identifier	i		1000496	0					
ANR	1000681	Identifier	ncomps		1000496	1					
ANR	1000682	PostIncDecOperationExpression	i ++	588:28:19647:19649	1000496	2	True				
ANR	1000683	Identifier	i		1000496	0					
ANR	1000684	IncDec	++		1000496	1					
ANR	1000685	CompoundStatement		36:33:1129:1129	1000496	3					
ANR	1000686	IfStatement	if ( mask & 1 )		1000496	0					
ANR	1000687	Condition	mask & 1	589:12:19666:19673	1000496	0	True				
ANR	1000688	BitAndExpression	mask & 1		1000496	0		&			
ANR	1000689	Identifier	mask		1000496	0					
ANR	1000690	PrimaryExpression	1		1000496	1					
ANR	1000691	CompoundStatement		37:22:1153:1153	1000496	1					
ANR	1000692	ExpressionStatement	pdata [ num_bytes_temp ] = pdevc -> colors . devn . values [ i ] & 0xff	590:12:19690:19749	1000496	0	True				
ANR	1000693	AssignmentExpression	pdata [ num_bytes_temp ] = pdevc -> colors . devn . values [ i ] & 0xff		1000496	0		=			
ANR	1000694	ArrayIndexing	pdata [ num_bytes_temp ]		1000496	0					
ANR	1000695	Identifier	pdata		1000496	0					
ANR	1000696	Identifier	num_bytes_temp		1000496	1					
ANR	1000697	BitAndExpression	pdevc -> colors . devn . values [ i ] & 0xff		1000496	1		&			
ANR	1000698	ArrayIndexing	pdevc -> colors . devn . values [ i ]		1000496	0					
ANR	1000699	MemberAccess	pdevc -> colors . devn . values		1000496	0					
ANR	1000700	MemberAccess	pdevc -> colors . devn		1000496	0					
ANR	1000701	PtrMemberAccess	pdevc -> colors		1000496	0					
ANR	1000702	Identifier	pdevc		1000496	0					
ANR	1000703	Identifier	colors		1000496	1					
ANR	1000704	Identifier	devn		1000496	1					
ANR	1000705	Identifier	values		1000496	1					
ANR	1000706	Identifier	i		1000496	1					
ANR	1000707	PrimaryExpression	0xff		1000496	1					
ANR	1000708	ExpressionStatement	num_bytes_temp ++	591:12:19763:19779	1000496	1	True				
ANR	1000709	PostIncDecOperationExpression	num_bytes_temp ++		1000496	0					
ANR	1000710	Identifier	num_bytes_temp		1000496	0					
ANR	1000711	IncDec	++		1000496	1					
ANR	1000712	ExpressionStatement	pdata [ num_bytes_temp ] = ( pdevc -> colors . devn . values [ i ] >> 8 ) & 0xff	592:12:19793:19859	1000496	2	True				
ANR	1000713	AssignmentExpression	pdata [ num_bytes_temp ] = ( pdevc -> colors . devn . values [ i ] >> 8 ) & 0xff		1000496	0		=			
ANR	1000714	ArrayIndexing	pdata [ num_bytes_temp ]		1000496	0					
ANR	1000715	Identifier	pdata		1000496	0					
ANR	1000716	Identifier	num_bytes_temp		1000496	1					
ANR	1000717	BitAndExpression	( pdevc -> colors . devn . values [ i ] >> 8 ) & 0xff		1000496	1		&			
ANR	1000718	ShiftExpression	pdevc -> colors . devn . values [ i ] >> 8		1000496	0		>>			
ANR	1000719	ArrayIndexing	pdevc -> colors . devn . values [ i ]		1000496	0					
ANR	1000720	MemberAccess	pdevc -> colors . devn . values		1000496	0					
ANR	1000721	MemberAccess	pdevc -> colors . devn		1000496	0					
ANR	1000722	PtrMemberAccess	pdevc -> colors		1000496	0					
ANR	1000723	Identifier	pdevc		1000496	0					
ANR	1000724	Identifier	colors		1000496	1					
ANR	1000725	Identifier	devn		1000496	1					
ANR	1000726	Identifier	values		1000496	1					
ANR	1000727	Identifier	i		1000496	1					
ANR	1000728	PrimaryExpression	8		1000496	1					
ANR	1000729	PrimaryExpression	0xff		1000496	1					
ANR	1000730	ExpressionStatement	num_bytes_temp ++	593:12:19873:19889	1000496	3	True				
ANR	1000731	PostIncDecOperationExpression	num_bytes_temp ++		1000496	0					
ANR	1000732	Identifier	num_bytes_temp		1000496	0					
ANR	1000733	IncDec	++		1000496	1					
ANR	1000734	ExpressionStatement	mask >>= 1	595:8:19909:19919	1000496	1	True				
ANR	1000735	AssignmentExpression	mask >>= 1		1000496	0		>>=			
ANR	1000736	Identifier	mask		1000496	0					
ANR	1000737	PrimaryExpression	1		1000496	1					
ANR	1000738	ReturnStatement	return 0 ;	597:4:19931:19939	1000496	20	True				
ANR	1000739	PrimaryExpression	0		1000496	0					
ANR	1000740	ReturnType	static int		1000496	1					
ANR	1000741	Identifier	gx_devn_write_color		1000496	2					
ANR	1000742	ParameterList	"const gx_device_color * pdevc , const gx_device * dev , byte * pdata , uint * psize"		1000496	3					
ANR	1000743	Parameter	const gx_device_color * pdevc	549:4:18400:18427	1000496	0	True				
ANR	1000744	ParameterType	const gx_device_color *		1000496	0					
ANR	1000745	Identifier	pdevc		1000496	1					
ANR	1000746	Parameter	const gx_device * dev	550:4:18434:18456	1000496	1	True				
ANR	1000747	ParameterType	const gx_device *		1000496	0					
ANR	1000748	Identifier	dev		1000496	1					
ANR	1000749	Parameter	byte * pdata	551:4:18463:18487	1000496	2	True				
ANR	1000750	ParameterType	byte *		1000496	0					
ANR	1000751	Identifier	pdata		1000496	1					
ANR	1000752	Parameter	uint * psize	552:4:18494:18518	1000496	3	True				
ANR	1000753	ParameterType	uint *		1000496	0					
ANR	1000754	Identifier	psize		1000496	1					
ANR	1000755	CFGEntryNode	ENTRY		1000496		True				
ANR	1000756	CFGExitNode	EXIT		1000496		True				
ANR	1000757	Symbol	num_bytes1		1000496						
ANR	1000758	Symbol	pdata		1000496						
ANR	1000759	Symbol	* pdevc -> colors		1000496						
ANR	1000760	Symbol	pdevc -> colors . devn . values		1000496						
ANR	1000761	Symbol	gs_error_rangecheck		1000496						
ANR	1000762	Symbol	pdevc		1000496						
ANR	1000763	Symbol	pdevc -> colors . devn		1000496						
ANR	1000764	Symbol	cdev -> clist_color_info		1000496						
ANR	1000765	Symbol	ncomps		1000496						
ANR	1000766	Symbol	* num_bytes1		1000496						
ANR	1000767	Symbol	psize		1000496						
ANR	1000768	Symbol	* pdevc		1000496						
ANR	1000769	Symbol	dev		1000496						
ANR	1000770	Symbol	* cdev		1000496						
ANR	1000771	Symbol	pdevc -> colors		1000496						
ANR	1000772	Symbol	& ( ( gx_device_clist * ) dev ) -> writer		1000496						
ANR	1000773	Symbol	comp_bits		1000496						
ANR	1000774	Symbol	* pdata		1000496						
ANR	1000775	Symbol	mask		1000496						
ANR	1000776	Symbol	num_bytes		1000496						
ANR	1000777	Symbol	* pdevc -> colors . devn . values		1000496						
ANR	1000778	Symbol	count		1000496						
ANR	1000779	Symbol	i		1000496						
ANR	1000780	Symbol	* * pdevc		1000496						
ANR	1000781	Symbol	mask_temp		1000496						
ANR	1000782	Symbol	num_bytes_temp		1000496						
ANR	1000783	Symbol	* i		1000496						
ANR	1000784	Symbol	* pdevc -> colors . devn		1000496						
ANR	1000785	Symbol	* num_bytes_temp		1000496						
ANR	1000786	Symbol	* psize		1000496						
ANR	1000787	Symbol	cdev		1000496						
ANR	1000788	Symbol	cdev -> clist_color_info . num_components		1000496						
ANR	1000789	Function	gx_dc_devn_write	631:0:20963:21716							
ANR	1000790	FunctionDef	"gx_dc_devn_write (const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * pdata , uint * psize)"		1000789	0					
ANR	1000791	CompoundStatement		639:0:21262:21716	1000789	0					
ANR	1000792	ReturnStatement	"return gx_devn_write_color ( pdevc , dev , pdata , psize ) ;"	646:4:21662:21714	1000789	0	True				
ANR	1000793	CallExpression	"gx_devn_write_color ( pdevc , dev , pdata , psize )"		1000789	0					
ANR	1000794	Callee	gx_devn_write_color		1000789	0					
ANR	1000795	Identifier	gx_devn_write_color		1000789	0					
ANR	1000796	ArgumentList	pdevc		1000789	1					
ANR	1000797	Argument	pdevc		1000789	0					
ANR	1000798	Identifier	pdevc		1000789	0					
ANR	1000799	Argument	dev		1000789	1					
ANR	1000800	Identifier	dev		1000789	0					
ANR	1000801	Argument	pdata		1000789	2					
ANR	1000802	Identifier	pdata		1000789	0					
ANR	1000803	Argument	psize		1000789	3					
ANR	1000804	Identifier	psize		1000789	0					
ANR	1000805	ReturnType	int		1000789	1					
ANR	1000806	Identifier	gx_dc_devn_write		1000789	2					
ANR	1000807	ParameterList	"const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * pdata , uint * psize"		1000789	3					
ANR	1000808	Parameter	const gx_device_color * pdevc	633:4:20989:21025	1000789	0	True				
ANR	1000809	ParameterType	const gx_device_color *		1000789	0					
ANR	1000810	Identifier	pdevc		1000789	1					
ANR	1000811	Parameter	const gx_device_color_saved * psdc	634:4:21032:21067	1000789	1	True				
ANR	1000812	ParameterType	const gx_device_color_saved *		1000789	0					
ANR	1000813	Identifier	psdc		1000789	1					
ANR	1000814	Parameter	const gx_device * dev	635:4:21094:21128	1000789	2	True				
ANR	1000815	ParameterType	const gx_device *		1000789	0					
ANR	1000816	Identifier	dev		1000789	1					
ANR	1000817	Parameter	int64_t offset	636:4:21135:21154	1000789	3	True				
ANR	1000818	ParameterType	int64_t		1000789	0					
ANR	1000819	Identifier	offset		1000789	1					
ANR	1000820	Parameter	byte * pdata	637:4:21179:21215	1000789	4	True				
ANR	1000821	ParameterType	byte *		1000789	0					
ANR	1000822	Identifier	pdata		1000789	1					
ANR	1000823	Parameter	uint * psize	638:4:21222:21258	1000789	5	True				
ANR	1000824	ParameterType	uint *		1000789	0					
ANR	1000825	Identifier	psize		1000789	1					
ANR	1000826	CFGEntryNode	ENTRY		1000789		True				
ANR	1000827	CFGExitNode	EXIT		1000789		True				
ANR	1000828	Symbol	psize		1000789						
ANR	1000829	Symbol	pdata		1000789						
ANR	1000830	Symbol	dev		1000789						
ANR	1000831	Symbol	offset		1000789						
ANR	1000832	Symbol	gx_devn_write_color		1000789						
ANR	1000833	Symbol	psdc		1000789						
ANR	1000834	Symbol	pdevc		1000789						
ANR	1000835	Function	gx_devn_read_color	668:0:22267:23209							
ANR	1000836	FunctionDef	"gx_devn_read_color (ushort values [ ] , const gx_device * dev , const byte * pdata , int size)"		1000835	0					
ANR	1000837	CompoundStatement		674:0:22423:23209	1000835	0					
ANR	1000838	IdentifierDeclStatement	gx_color_index mask = 0 ;	675:4:22429:22457	1000835	0	True				
ANR	1000839	IdentifierDecl	mask = 0		1000835	0					
ANR	1000840	IdentifierDeclType	gx_color_index		1000835	0					
ANR	1000841	Identifier	mask		1000835	1					
ANR	1000842	AssignmentExpression	mask = 0		1000835	2		=			
ANR	1000843	Identifier	mask		1000835	0					
ANR	1000844	PrimaryExpression	0		1000835	1					
ANR	1000845	IdentifierDeclStatement	uchar i ;	676:4:22463:22486	1000835	1	True				
ANR	1000846	IdentifierDecl	i		1000835	0					
ANR	1000847	IdentifierDeclType	uchar		1000835	0					
ANR	1000848	Identifier	i		1000835	1					
ANR	1000849	IdentifierDeclStatement	uchar ncomps = dev -> color_info . num_components ;	677:4:22492:22551	1000835	2	True				
ANR	1000850	IdentifierDecl	ncomps = dev -> color_info . num_components		1000835	0					
ANR	1000851	IdentifierDeclType	uchar		1000835	0					
ANR	1000852	Identifier	ncomps		1000835	1					
ANR	1000853	AssignmentExpression	ncomps = dev -> color_info . num_components		1000835	2		=			
ANR	1000854	Identifier	ncomps		1000835	0					
ANR	1000855	MemberAccess	dev -> color_info . num_components		1000835	1					
ANR	1000856	PtrMemberAccess	dev -> color_info		1000835	0					
ANR	1000857	Identifier	dev		1000835	0					
ANR	1000858	Identifier	color_info		1000835	1					
ANR	1000859	Identifier	num_components		1000835	1					
ANR	1000860	IdentifierDeclStatement	int pos ;	678:4:22557:22580	1000835	3	True				
ANR	1000861	IdentifierDecl	pos		1000835	0					
ANR	1000862	IdentifierDeclType	int		1000835	0					
ANR	1000863	Identifier	pos		1000835	1					
ANR	1000864	IdentifierDeclStatement	int num_bytes ;	679:4:22586:22615	1000835	4	True				
ANR	1000865	IdentifierDecl	num_bytes		1000835	0					
ANR	1000866	IdentifierDeclType	int		1000835	0					
ANR	1000867	Identifier	num_bytes		1000835	1					
ANR	1000868	IfStatement	if ( size < 1 )		1000835	5					
ANR	1000869	Condition	size < 1	682:8:22677:22684	1000835	0	True				
ANR	1000870	RelationalExpression	size < 1		1000835	0		<			
ANR	1000871	Identifier	size		1000835	0					
ANR	1000872	PrimaryExpression	1		1000835	1					
ANR	1000873	ExpressionStatement	return_error ( gs_error_rangecheck )	683:8:22695:22728	1000835	1	True				
ANR	1000874	CallExpression	return_error ( gs_error_rangecheck )		1000835	0					
ANR	1000875	Callee	return_error		1000835	0					
ANR	1000876	Identifier	return_error		1000835	0					
ANR	1000877	ArgumentList	gs_error_rangecheck		1000835	1					
ANR	1000878	Argument	gs_error_rangecheck		1000835	0					
ANR	1000879	Identifier	gs_error_rangecheck		1000835	0					
ANR	1000880	ForStatement	for ( i = 0 ; i < sizeof ( gx_color_index ) ; i ++ )		1000835	6					
ANR	1000881	ForInit	i = 0 ;	686:9:22770:22775	1000835	0	True				
ANR	1000882	AssignmentExpression	i = 0		1000835	0		=			
ANR	1000883	Identifier	i		1000835	0					
ANR	1000884	PrimaryExpression	0		1000835	1					
ANR	1000885	Condition	i < sizeof ( gx_color_index )	686:16:22777:22802	1000835	1	True				
ANR	1000886	RelationalExpression	i < sizeof ( gx_color_index )		1000835	0		<			
ANR	1000887	Identifier	i		1000835	0					
ANR	1000888	SizeofExpression	sizeof ( gx_color_index )		1000835	1					
ANR	1000889	Sizeof	sizeof		1000835	0					
ANR	1000890	SizeofOperand	gx_color_index		1000835	1					
ANR	1000891	PostIncDecOperationExpression	i ++	686:44:22805:22807	1000835	2	True				
ANR	1000892	Identifier	i		1000835	0					
ANR	1000893	IncDec	++		1000835	1					
ANR	1000894	ExpressionStatement	mask = ( mask << 8 ) | pdata [ i ]	687:8:22818:22847	1000835	3	True				
ANR	1000895	AssignmentExpression	mask = ( mask << 8 ) | pdata [ i ]		1000835	0		=			
ANR	1000896	Identifier	mask		1000835	0					
ANR	1000897	InclusiveOrExpression	( mask << 8 ) | pdata [ i ]		1000835	1		|			
ANR	1000898	ShiftExpression	mask << 8		1000835	0		<<			
ANR	1000899	Identifier	mask		1000835	0					
ANR	1000900	PrimaryExpression	8		1000835	1					
ANR	1000901	ArrayIndexing	pdata [ i ]		1000835	1					
ANR	1000902	Identifier	pdata		1000835	0					
ANR	1000903	Identifier	i		1000835	1					
ANR	1000904	ExpressionStatement	pos = i	688:4:22853:22860	1000835	7	True				
ANR	1000905	AssignmentExpression	pos = i		1000835	0		=			
ANR	1000906	Identifier	pos		1000835	0					
ANR	1000907	Identifier	i		1000835	1					
ANR	1000908	ExpressionStatement	num_bytes = i	689:4:22866:22879	1000835	8	True				
ANR	1000909	AssignmentExpression	num_bytes = i		1000835	0		=			
ANR	1000910	Identifier	num_bytes		1000835	0					
ANR	1000911	Identifier	i		1000835	1					
ANR	1000912	ForStatement	for ( i = 0 ; i < ncomps ; i ++ )		1000835	9					
ANR	1000913	ForInit	i = 0 ;	691:9:22913:22918	1000835	0	True				
ANR	1000914	AssignmentExpression	i = 0		1000835	0		=			
ANR	1000915	Identifier	i		1000835	0					
ANR	1000916	PrimaryExpression	0		1000835	1					
ANR	1000917	Condition	i < ncomps	691:16:22920:22929	1000835	1	True				
ANR	1000918	RelationalExpression	i < ncomps		1000835	0		<			
ANR	1000919	Identifier	i		1000835	0					
ANR	1000920	Identifier	ncomps		1000835	1					
ANR	1000921	PostIncDecOperationExpression	i ++	691:28:22932:22934	1000835	2	True				
ANR	1000922	Identifier	i		1000835	0					
ANR	1000923	IncDec	++		1000835	1					
ANR	1000924	CompoundStatement		18:33:513:513	1000835	3					
ANR	1000925	IfStatement	if ( mask & 1 )		1000835	0					
ANR	1000926	Condition	mask & 1	692:12:22951:22958	1000835	0	True				
ANR	1000927	BitAndExpression	mask & 1		1000835	0		&			
ANR	1000928	Identifier	mask		1000835	0					
ANR	1000929	PrimaryExpression	1		1000835	1					
ANR	1000930	CompoundStatement		19:22:537:537	1000835	1					
ANR	1000931	ExpressionStatement	values [ i ] = pdata [ pos ]	693:12:22975:22997	1000835	0	True				
ANR	1000932	AssignmentExpression	values [ i ] = pdata [ pos ]		1000835	0		=			
ANR	1000933	ArrayIndexing	values [ i ]		1000835	0					
ANR	1000934	Identifier	values		1000835	0					
ANR	1000935	Identifier	i		1000835	1					
ANR	1000936	ArrayIndexing	pdata [ pos ]		1000835	1					
ANR	1000937	Identifier	pdata		1000835	0					
ANR	1000938	Identifier	pos		1000835	1					
ANR	1000939	ExpressionStatement	pos ++	694:12:23011:23016	1000835	1	True				
ANR	1000940	PostIncDecOperationExpression	pos ++		1000835	0					
ANR	1000941	Identifier	pos		1000835	0					
ANR	1000942	IncDec	++		1000835	1					
ANR	1000943	ExpressionStatement	values [ i ] += ( pdata [ pos ] << 8 )	695:12:23030:23058	1000835	2	True				
ANR	1000944	AssignmentExpression	values [ i ] += ( pdata [ pos ] << 8 )		1000835	0		+=			
ANR	1000945	ArrayIndexing	values [ i ]		1000835	0					
ANR	1000946	Identifier	values		1000835	0					
ANR	1000947	Identifier	i		1000835	1					
ANR	1000948	ShiftExpression	pdata [ pos ] << 8		1000835	1		<<			
ANR	1000949	ArrayIndexing	pdata [ pos ]		1000835	0					
ANR	1000950	Identifier	pdata		1000835	0					
ANR	1000951	Identifier	pos		1000835	1					
ANR	1000952	PrimaryExpression	8		1000835	1					
ANR	1000953	ExpressionStatement	pos ++	696:12:23072:23077	1000835	3	True				
ANR	1000954	PostIncDecOperationExpression	pos ++		1000835	0					
ANR	1000955	Identifier	pos		1000835	0					
ANR	1000956	IncDec	++		1000835	1					
ANR	1000957	ExpressionStatement	num_bytes += 2	697:12:23091:23105	1000835	4	True				
ANR	1000958	AssignmentExpression	num_bytes += 2		1000835	0		+=			
ANR	1000959	Identifier	num_bytes		1000835	0					
ANR	1000960	PrimaryExpression	2		1000835	1					
ANR	1000961	ElseStatement	else		1000835	0					
ANR	1000962	CompoundStatement		25:15:698:698	1000835	0					
ANR	1000963	ExpressionStatement	values [ i ] = 0	699:12:23136:23149	1000835	0	True				
ANR	1000964	AssignmentExpression	values [ i ] = 0		1000835	0		=			
ANR	1000965	ArrayIndexing	values [ i ]		1000835	0					
ANR	1000966	Identifier	values		1000835	0					
ANR	1000967	Identifier	i		1000835	1					
ANR	1000968	PrimaryExpression	0		1000835	1					
ANR	1000969	ExpressionStatement	mask >>= 1	701:8:23169:23179	1000835	1	True				
ANR	1000970	AssignmentExpression	mask >>= 1		1000835	0		>>=			
ANR	1000971	Identifier	mask		1000835	0					
ANR	1000972	PrimaryExpression	1		1000835	1					
ANR	1000973	ReturnStatement	return num_bytes ;	703:4:23191:23207	1000835	10	True				
ANR	1000974	Identifier	num_bytes		1000835	0					
ANR	1000975	ReturnType	static int		1000835	1					
ANR	1000976	Identifier	gx_devn_read_color		1000835	2					
ANR	1000977	ParameterList	"ushort values [ ] , const gx_device * dev , const byte * pdata , int size"		1000835	3					
ANR	1000978	Parameter	ushort values [ ]	670:4:22302:22329	1000835	0	True				
ANR	1000979	ParameterType	ushort [ ]		1000835	0					
ANR	1000980	Identifier	values		1000835	1					
ANR	1000981	Parameter	const gx_device * dev	671:4:22336:22358	1000835	1	True				
ANR	1000982	ParameterType	const gx_device *		1000835	0					
ANR	1000983	Identifier	dev		1000835	1					
ANR	1000984	Parameter	const byte * pdata	672:4:22365:22389	1000835	2	True				
ANR	1000985	ParameterType	const byte *		1000835	0					
ANR	1000986	Identifier	pdata		1000835	1					
ANR	1000987	Parameter	int size	673:4:22396:22419	1000835	3	True				
ANR	1000988	ParameterType	int		1000835	0					
ANR	1000989	Identifier	size		1000835	1					
ANR	1000990	CFGEntryNode	ENTRY		1000835		True				
ANR	1000991	CFGExitNode	EXIT		1000835		True				
ANR	1000992	Symbol	* dev		1000835						
ANR	1000993	Symbol	num_bytes		1000835						
ANR	1000994	Symbol	pdata		1000835						
ANR	1000995	Symbol	dev -> color_info . num_components		1000835						
ANR	1000996	Symbol	gs_error_rangecheck		1000835						
ANR	1000997	Symbol	* values		1000835						
ANR	1000998	Symbol	values		1000835						
ANR	1000999	Symbol	i		1000835						
ANR	1001000	Symbol	ncomps		1000835						
ANR	1001001	Symbol	dev -> color_info		1000835						
ANR	1001002	Symbol	* i		1000835						
ANR	1001003	Symbol	dev		1000835						
ANR	1001004	Symbol	size		1000835						
ANR	1001005	Symbol	pos		1000835						
ANR	1001006	Symbol	* pdata		1000835						
ANR	1001007	Symbol	* pos		1000835						
ANR	1001008	Symbol	mask		1000835						
ANR	1001009	Function	gx_dc_devn_read	735:0:24152:24674							
ANR	1001010	FunctionDef	"gx_dc_devn_read (gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem)"		1001009	0					
ANR	1001011	CompoundStatement		745:0:24555:24674	1001009	0					
ANR	1001012	ExpressionStatement	pdevc -> type = gx_dc_type_devn	746:4:24561:24590	1001009	0	True				
ANR	1001013	AssignmentExpression	pdevc -> type = gx_dc_type_devn		1001009	0		=			
ANR	1001014	PtrMemberAccess	pdevc -> type		1001009	0					
ANR	1001015	Identifier	pdevc		1001009	0					
ANR	1001016	Identifier	type		1001009	1					
ANR	1001017	Identifier	gx_dc_type_devn		1001009	1					
ANR	1001018	ReturnStatement	"return gx_devn_read_color ( & ( pdevc -> colors . devn . values [ 0 ] ) , dev , pdata , size ) ;"	747:4:24596:24672	1001009	1	True				
ANR	1001019	CallExpression	"gx_devn_read_color ( & ( pdevc -> colors . devn . values [ 0 ] ) , dev , pdata , size )"		1001009	0					
ANR	1001020	Callee	gx_devn_read_color		1001009	0					
ANR	1001021	Identifier	gx_devn_read_color		1001009	0					
ANR	1001022	ArgumentList	& ( pdevc -> colors . devn . values [ 0 ] )		1001009	1					
ANR	1001023	Argument	& ( pdevc -> colors . devn . values [ 0 ] )		1001009	0					
ANR	1001024	UnaryOperationExpression	& ( pdevc -> colors . devn . values [ 0 ] )		1001009	0					
ANR	1001025	UnaryOperator	&		1001009	0					
ANR	1001026	ArrayIndexing	pdevc -> colors . devn . values [ 0 ]		1001009	1					
ANR	1001027	MemberAccess	pdevc -> colors . devn . values		1001009	0					
ANR	1001028	MemberAccess	pdevc -> colors . devn		1001009	0					
ANR	1001029	PtrMemberAccess	pdevc -> colors		1001009	0					
ANR	1001030	Identifier	pdevc		1001009	0					
ANR	1001031	Identifier	colors		1001009	1					
ANR	1001032	Identifier	devn		1001009	1					
ANR	1001033	Identifier	values		1001009	1					
ANR	1001034	PrimaryExpression	0		1001009	1					
ANR	1001035	Argument	dev		1001009	1					
ANR	1001036	Identifier	dev		1001009	0					
ANR	1001037	Argument	pdata		1001009	2					
ANR	1001038	Identifier	pdata		1001009	0					
ANR	1001039	Argument	size		1001009	3					
ANR	1001040	Identifier	size		1001009	0					
ANR	1001041	ReturnType	static int		1001009	1					
ANR	1001042	Identifier	gx_dc_devn_read		1001009	2					
ANR	1001043	ParameterList	"gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem"		1001009	3					
ANR	1001044	Parameter	gx_device_color * pdevc	737:4:24184:24212	1001009	0	True				
ANR	1001045	ParameterType	gx_device_color *		1001009	0					
ANR	1001046	Identifier	pdevc		1001009	1					
ANR	1001047	Parameter	const gs_gstate * pgs	738:4:24219:24246	1001009	1	True				
ANR	1001048	ParameterType	const gs_gstate *		1001009	0					
ANR	1001049	Identifier	pgs		1001009	1					
ANR	1001050	Parameter	const gx_device_color * prior_devc	739:4:24282:24315	1001009	2	True				
ANR	1001051	ParameterType	const gx_device_color *		1001009	0					
ANR	1001052	Identifier	prior_devc		1001009	1					
ANR	1001053	Parameter	const gx_device * dev	740:4:24344:24370	1001009	3	True				
ANR	1001054	ParameterType	const gx_device *		1001009	0					
ANR	1001055	Identifier	dev		1001009	1					
ANR	1001056	Parameter	int64_t offset	741:4:24377:24395	1001009	4	True				
ANR	1001057	ParameterType	int64_t		1001009	0					
ANR	1001058	Identifier	offset		1001009	1					
ANR	1001059	Parameter	const byte * pdata	742:4:24428:24456	1001009	5	True				
ANR	1001060	ParameterType	const byte *		1001009	0					
ANR	1001061	Identifier	pdata		1001009	1					
ANR	1001062	Parameter	uint size	743:4:24463:24490	1001009	6	True				
ANR	1001063	ParameterType	uint		1001009	0					
ANR	1001064	Identifier	size		1001009	1					
ANR	1001065	Parameter	gs_memory_t * mem	744:4:24497:24523	1001009	7	True				
ANR	1001066	ParameterType	gs_memory_t *		1001009	0					
ANR	1001067	Identifier	mem		1001009	1					
ANR	1001068	CFGEntryNode	ENTRY		1001009		True				
ANR	1001069	CFGExitNode	EXIT		1001009		True				
ANR	1001070	Symbol	pdevc -> type		1001009						
ANR	1001071	Symbol	pdata		1001009						
ANR	1001072	Symbol	pdevc -> colors . devn . values		1001009						
ANR	1001073	Symbol	offset		1001009						
ANR	1001074	Symbol	pdevc		1001009						
ANR	1001075	Symbol	pdevc -> colors . devn		1001009						
ANR	1001076	Symbol	gx_devn_read_color		1001009						
ANR	1001077	Symbol	gx_dc_type_devn		1001009						
ANR	1001078	Symbol	* pdevc		1001009						
ANR	1001079	Symbol	dev		1001009						
ANR	1001080	Symbol	size		1001009						
ANR	1001081	Symbol	mem		1001009						
ANR	1001082	Symbol	pdevc -> colors		1001009						
ANR	1001083	Symbol	pgs		1001009						
ANR	1001084	Symbol	prior_devc		1001009						
ANR	1001085	Function	gx_dc_devn_get_nonzero_comps	754:0:24940:25553							
ANR	1001086	FunctionDef	"gx_dc_devn_get_nonzero_comps (const gx_device_color * pdevc , const gx_device * dev , gx_color_index * pcomp_bits)"		1001085	0					
ANR	1001087	CompoundStatement		759:0:25083:25553	1001085	0					
ANR	1001088	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	760:4:25089:25147	1001085	0	True				
ANR	1001089	IdentifierDecl	i		1001085	0					
ANR	1001090	IdentifierDeclType	uchar		1001085	0					
ANR	1001091	Identifier	i		1001085	1					
ANR	1001092	IdentifierDecl	ncomps = dev -> color_info . num_components		1001085	1					
ANR	1001093	IdentifierDeclType	uchar		1001085	0					
ANR	1001094	Identifier	ncomps		1001085	1					
ANR	1001095	AssignmentExpression	ncomps = dev -> color_info . num_components		1001085	2		=			
ANR	1001096	Identifier	ncomps		1001085	0					
ANR	1001097	MemberAccess	dev -> color_info . num_components		1001085	1					
ANR	1001098	PtrMemberAccess	dev -> color_info		1001085	0					
ANR	1001099	Identifier	dev		1001085	0					
ANR	1001100	Identifier	color_info		1001085	1					
ANR	1001101	Identifier	num_components		1001085	1					
ANR	1001102	IdentifierDeclStatement	"gx_color_index mask = 0x1 , comp_bits = 0 ;"	761:4:25153:25194	1001085	1	True				
ANR	1001103	IdentifierDecl	mask = 0x1		1001085	0					
ANR	1001104	IdentifierDeclType	gx_color_index		1001085	0					
ANR	1001105	Identifier	mask		1001085	1					
ANR	1001106	AssignmentExpression	mask = 0x1		1001085	2		=			
ANR	1001107	Identifier	mask		1001085	0					
ANR	1001108	PrimaryExpression	0x1		1001085	1					
ANR	1001109	IdentifierDecl	comp_bits = 0		1001085	1					
ANR	1001110	IdentifierDeclType	gx_color_index		1001085	0					
ANR	1001111	Identifier	comp_bits		1001085	1					
ANR	1001112	AssignmentExpression	comp_bits = 0		1001085	2		=			
ANR	1001113	Identifier	comp_bits		1001085	0					
ANR	1001114	PrimaryExpression	0		1001085	1					
ANR	1001115	IdentifierDeclStatement	int count = 0 ;	762:4:25200:25225	1001085	2	True				
ANR	1001116	IdentifierDecl	count = 0		1001085	0					
ANR	1001117	IdentifierDeclType	int		1001085	0					
ANR	1001118	Identifier	count		1001085	1					
ANR	1001119	AssignmentExpression	count = 0		1001085	2		=			
ANR	1001120	Identifier	count		1001085	0					
ANR	1001121	PrimaryExpression	0		1001085	1					
ANR	1001122	IdentifierDeclStatement	ushort white_value = ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE ) ? 0 : 1 ;	763:4:25231:25328	1001085	3	True				
ANR	1001123	IdentifierDecl	white_value = ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE ) ? 0 : 1		1001085	0					
ANR	1001124	IdentifierDeclType	ushort		1001085	0					
ANR	1001125	Identifier	white_value		1001085	1					
ANR	1001126	AssignmentExpression	white_value = ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE ) ? 0 : 1		1001085	2		=			
ANR	1001127	Identifier	white_value		1001085	0					
ANR	1001128	ConditionalExpression	( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE ) ? 0 : 1		1001085	1					
ANR	1001129	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		1001085	0					
ANR	1001130	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		1001085	0		==			
ANR	1001131	MemberAccess	dev -> color_info . polarity		1001085	0					
ANR	1001132	PtrMemberAccess	dev -> color_info		1001085	0					
ANR	1001133	Identifier	dev		1001085	0					
ANR	1001134	Identifier	color_info		1001085	1					
ANR	1001135	Identifier	polarity		1001085	1					
ANR	1001136	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		1001085	1					
ANR	1001137	PrimaryExpression	0		1001085	1					
ANR	1001138	PrimaryExpression	1		1001085	2					
ANR	1001139	ForStatement	"for ( i = 0 ; i < ncomps ; i ++ , mask <<= 1 )"		1001085	4					
ANR	1001140	ForInit	i = 0 ;	765:9:25340:25345	1001085	0	True				
ANR	1001141	AssignmentExpression	i = 0		1001085	0		=			
ANR	1001142	Identifier	i		1001085	0					
ANR	1001143	PrimaryExpression	0		1001085	1					
ANR	1001144	Condition	i < ncomps	765:16:25347:25356	1001085	1	True				
ANR	1001145	RelationalExpression	i < ncomps		1001085	0		<			
ANR	1001146	Identifier	i		1001085	0					
ANR	1001147	Identifier	ncomps		1001085	1					
ANR	1001148	Expression	"i ++ , mask <<= 1"	765:28:25359:25373	1001085	2	True				
ANR	1001149	PostIncDecOperationExpression	i ++		1001085	0					
ANR	1001150	Identifier	i		1001085	0					
ANR	1001151	IncDec	++		1001085	1					
ANR	1001152	AssignmentExpression	mask <<= 1		1001085	1		<<=			
ANR	1001153	Identifier	mask		1001085	0					
ANR	1001154	PrimaryExpression	1		1001085	1					
ANR	1001155	CompoundStatement		7:45:292:292	1001085	3					
ANR	1001156	IfStatement	if ( pdevc -> colors . devn . values [ i ] != white_value )		1001085	0					
ANR	1001157	Condition	pdevc -> colors . devn . values [ i ] != white_value	766:12:25390:25432	1001085	0	True				
ANR	1001158	EqualityExpression	pdevc -> colors . devn . values [ i ] != white_value		1001085	0		!=			
ANR	1001159	ArrayIndexing	pdevc -> colors . devn . values [ i ]		1001085	0					
ANR	1001160	MemberAccess	pdevc -> colors . devn . values		1001085	0					
ANR	1001161	MemberAccess	pdevc -> colors . devn		1001085	0					
ANR	1001162	PtrMemberAccess	pdevc -> colors		1001085	0					
ANR	1001163	Identifier	pdevc		1001085	0					
ANR	1001164	Identifier	colors		1001085	1					
ANR	1001165	Identifier	devn		1001085	1					
ANR	1001166	Identifier	values		1001085	1					
ANR	1001167	Identifier	i		1001085	1					
ANR	1001168	Identifier	white_value		1001085	1					
ANR	1001169	CompoundStatement		8:57:351:351	1001085	1					
ANR	1001170	ExpressionStatement	comp_bits |= mask	767:12:25449:25466	1001085	0	True				
ANR	1001171	AssignmentExpression	comp_bits |= mask		1001085	0		|=			
ANR	1001172	Identifier	comp_bits		1001085	0					
ANR	1001173	Identifier	mask		1001085	1					
ANR	1001174	ExpressionStatement	count ++	768:12:25480:25487	1001085	1	True				
ANR	1001175	PostIncDecOperationExpression	count ++		1001085	0					
ANR	1001176	Identifier	count		1001085	0					
ANR	1001177	IncDec	++		1001085	1					
ANR	1001178	ExpressionStatement	* pcomp_bits = comp_bits	771:4:25509:25532	1001085	5	True				
ANR	1001179	AssignmentExpression	* pcomp_bits = comp_bits		1001085	0		=			
ANR	1001180	UnaryOperationExpression	* pcomp_bits		1001085	0					
ANR	1001181	UnaryOperator	*		1001085	0					
ANR	1001182	Identifier	pcomp_bits		1001085	1					
ANR	1001183	Identifier	comp_bits		1001085	1					
ANR	1001184	ReturnStatement	return count ;	773:4:25539:25551	1001085	6	True				
ANR	1001185	Identifier	count		1001085	0					
ANR	1001186	ReturnType	int		1001085	1					
ANR	1001187	Identifier	gx_dc_devn_get_nonzero_comps		1001085	2					
ANR	1001188	ParameterList	"const gx_device_color * pdevc , const gx_device * dev , gx_color_index * pcomp_bits"		1001085	3					
ANR	1001189	Parameter	const gx_device_color * pdevc	756:4:24978:25006	1001085	0	True				
ANR	1001190	ParameterType	const gx_device_color *		1001085	0					
ANR	1001191	Identifier	pdevc		1001085	1					
ANR	1001192	Parameter	const gx_device * dev	757:4:25013:25039	1001085	1	True				
ANR	1001193	ParameterType	const gx_device *		1001085	0					
ANR	1001194	Identifier	dev		1001085	1					
ANR	1001195	Parameter	gx_color_index * pcomp_bits	758:4:25046:25079	1001085	2	True				
ANR	1001196	ParameterType	gx_color_index *		1001085	0					
ANR	1001197	Identifier	pcomp_bits		1001085	1					
ANR	1001198	CFGEntryNode	ENTRY		1001085		True				
ANR	1001199	CFGExitNode	EXIT		1001085		True				
ANR	1001200	Symbol	* dev		1001085						
ANR	1001201	Symbol	* pdevc -> colors . devn . values		1001085						
ANR	1001202	Symbol	pdevc -> colors . devn . values		1001085						
ANR	1001203	Symbol	* pdevc -> colors		1001085						
ANR	1001204	Symbol	dev -> color_info . num_components		1001085						
ANR	1001205	Symbol	white_value		1001085						
ANR	1001206	Symbol	pdevc		1001085						
ANR	1001207	Symbol	pdevc -> colors . devn		1001085						
ANR	1001208	Symbol	count		1001085						
ANR	1001209	Symbol	i		1001085						
ANR	1001210	Symbol	ncomps		1001085						
ANR	1001211	Symbol	* * pdevc		1001085						
ANR	1001212	Symbol	dev -> color_info		1001085						
ANR	1001213	Symbol	pcomp_bits		1001085						
ANR	1001214	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		1001085						
ANR	1001215	Symbol	* pdevc		1001085						
ANR	1001216	Symbol	* i		1001085						
ANR	1001217	Symbol	dev		1001085						
ANR	1001218	Symbol	dev -> color_info . polarity		1001085						
ANR	1001219	Symbol	pdevc -> colors		1001085						
ANR	1001220	Symbol	* pcomp_bits		1001085						
ANR	1001221	Symbol	* pdevc -> colors . devn		1001085						
ANR	1001222	Symbol	comp_bits		1001085						
ANR	1001223	Symbol	mask		1001085						
ANR	1001224	Function	gx_dc_pure_save_dc	778:0:25588:25756							
ANR	1001225	FunctionDef	"gx_dc_pure_save_dc (const gx_device_color * pdevc , gx_device_color_saved * psdc)"		1001224	0					
ANR	1001226	CompoundStatement		780:0:25680:25756	1001224	0					
ANR	1001227	ExpressionStatement	psdc -> type = pdevc -> type	781:4:25686:25710	1001224	0	True				
ANR	1001228	AssignmentExpression	psdc -> type = pdevc -> type		1001224	0		=			
ANR	1001229	PtrMemberAccess	psdc -> type		1001224	0					
ANR	1001230	Identifier	psdc		1001224	0					
ANR	1001231	Identifier	type		1001224	1					
ANR	1001232	PtrMemberAccess	pdevc -> type		1001224	1					
ANR	1001233	Identifier	pdevc		1001224	0					
ANR	1001234	Identifier	type		1001224	1					
ANR	1001235	ExpressionStatement	psdc -> colors . pure = pdevc -> colors . pure	782:4:25716:25754	1001224	1	True				
ANR	1001236	AssignmentExpression	psdc -> colors . pure = pdevc -> colors . pure		1001224	0		=			
ANR	1001237	MemberAccess	psdc -> colors . pure		1001224	0					
ANR	1001238	PtrMemberAccess	psdc -> colors		1001224	0					
ANR	1001239	Identifier	psdc		1001224	0					
ANR	1001240	Identifier	colors		1001224	1					
ANR	1001241	Identifier	pure		1001224	1					
ANR	1001242	MemberAccess	pdevc -> colors . pure		1001224	1					
ANR	1001243	PtrMemberAccess	pdevc -> colors		1001224	0					
ANR	1001244	Identifier	pdevc		1001224	0					
ANR	1001245	Identifier	colors		1001224	1					
ANR	1001246	Identifier	pure		1001224	1					
ANR	1001247	ReturnType	static void		1001224	1					
ANR	1001248	Identifier	gx_dc_pure_save_dc		1001224	2					
ANR	1001249	ParameterList	"const gx_device_color * pdevc , gx_device_color_saved * psdc"		1001224	3					
ANR	1001250	Parameter	const gx_device_color * pdevc	779:19:25619:25647	1001224	0	True				
ANR	1001251	ParameterType	const gx_device_color *		1001224	0					
ANR	1001252	Identifier	pdevc		1001224	1					
ANR	1001253	Parameter	gx_device_color_saved * psdc	779:50:25650:25677	1001224	1	True				
ANR	1001254	ParameterType	gx_device_color_saved *		1001224	0					
ANR	1001255	Identifier	psdc		1001224	1					
ANR	1001256	CFGEntryNode	ENTRY		1001224		True				
ANR	1001257	CFGExitNode	EXIT		1001224		True				
ANR	1001258	Symbol	pdevc -> type		1001224						
ANR	1001259	Symbol	psdc -> colors . pure		1001224						
ANR	1001260	Symbol	* pdevc		1001224						
ANR	1001261	Symbol	pdevc -> colors . pure		1001224						
ANR	1001262	Symbol	psdc -> type		1001224						
ANR	1001263	Symbol	psdc		1001224						
ANR	1001264	Symbol	pdevc		1001224						
ANR	1001265	Symbol	pdevc -> colors		1001224						
ANR	1001266	Symbol	* psdc		1001224						
ANR	1001267	Symbol	psdc -> colors		1001224						
ANR	1001268	Function	gx_dc_pure_load	785:0:25759:25930							
ANR	1001269	FunctionDef	"gx_dc_pure_load (gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select)"		1001268	0					
ANR	1001270	CompoundStatement		788:0:25914:25930	1001268	0					
ANR	1001271	ReturnStatement	return 0 ;	789:4:25920:25928	1001268	0	True				
ANR	1001272	PrimaryExpression	0		1001268	0					
ANR	1001273	ReturnType	static int		1001268	1					
ANR	1001274	Identifier	gx_dc_pure_load		1001268	2					
ANR	1001275	ParameterList	"gx_device_color * pdevc , const gs_gstate * ignore_pgs , gx_device * ignore_dev , gs_color_select_t ignore_select"		1001268	3					
ANR	1001276	Parameter	gx_device_color * pdevc	786:16:25786:25808	1001268	0	True				
ANR	1001277	ParameterType	gx_device_color *		1001268	0					
ANR	1001278	Identifier	pdevc		1001268	1					
ANR	1001279	Parameter	const gs_gstate * ignore_pgs	786:41:25811:25838	1001268	1	True				
ANR	1001280	ParameterType	const gs_gstate *		1001268	0					
ANR	1001281	Identifier	ignore_pgs		1001268	1					
ANR	1001282	Parameter	gx_device * ignore_dev	787:16:25857:25878	1001268	2	True				
ANR	1001283	ParameterType	gx_device *		1001268	0					
ANR	1001284	Identifier	ignore_dev		1001268	1					
ANR	1001285	Parameter	gs_color_select_t ignore_select	787:40:25881:25911	1001268	3	True				
ANR	1001286	ParameterType	gs_color_select_t		1001268	0					
ANR	1001287	Identifier	ignore_select		1001268	1					
ANR	1001288	CFGEntryNode	ENTRY		1001268		True				
ANR	1001289	CFGExitNode	EXIT		1001268		True				
ANR	1001290	Symbol	pdevc		1001268						
ANR	1001291	Symbol	ignore_dev		1001268						
ANR	1001292	Symbol	ignore_select		1001268						
ANR	1001293	Symbol	ignore_pgs		1001268						
ANR	1001294	Function	gx_dc_pure_fill_rectangle	794:0:26032:27269							
ANR	1001295	FunctionDef	"gx_dc_pure_fill_rectangle (const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source)"		1001294	0					
ANR	1001296	CompoundStatement		798:0:26249:27269	1001294	0					
ANR	1001297	IfStatement	if ( source == NULL && lop_no_S_is_T ( lop ) )		1001294	0					
ANR	1001298	Condition	source == NULL && lop_no_S_is_T ( lop )	799:8:26259:26294	1001294	0	True				
ANR	1001299	AndExpression	source == NULL && lop_no_S_is_T ( lop )		1001294	0		&&			
ANR	1001300	EqualityExpression	source == NULL		1001294	0		==			
ANR	1001301	Identifier	source		1001294	0					
ANR	1001302	Identifier	NULL		1001294	1					
ANR	1001303	CallExpression	lop_no_S_is_T ( lop )		1001294	1					
ANR	1001304	Callee	lop_no_S_is_T		1001294	0					
ANR	1001305	Identifier	lop_no_S_is_T		1001294	0					
ANR	1001306	ArgumentList	lop		1001294	1					
ANR	1001307	Argument	lop		1001294	0					
ANR	1001308	Identifier	lop		1001294	0					
ANR	1001309	ReturnStatement	"return ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , w , h , pdevc -> colors . pure ) ;"	800:8:26305:26431	1001294	1	True				
ANR	1001310	CallExpression	"( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , w , h , pdevc -> colors . pure )"		1001294	0					
ANR	1001311	Callee	"* dev_proc ( dev , fill_rectangle )"		1001294	0					
ANR	1001312	UnaryOperationExpression	"* dev_proc ( dev , fill_rectangle )"		1001294	0					
ANR	1001313	UnaryOperator	*		1001294	0					
ANR	1001314	CallExpression	"dev_proc ( dev , fill_rectangle )"		1001294	1					
ANR	1001315	Callee	dev_proc		1001294	0					
ANR	1001316	Identifier	dev_proc		1001294	0					
ANR	1001317	ArgumentList	dev		1001294	1					
ANR	1001318	Argument	dev		1001294	0					
ANR	1001319	Identifier	dev		1001294	0					
ANR	1001320	Argument	fill_rectangle		1001294	1					
ANR	1001321	Identifier	fill_rectangle		1001294	0					
ANR	1001322	ArgumentList	dev		1001294	1					
ANR	1001323	Argument	dev		1001294	0					
ANR	1001324	Identifier	dev		1001294	0					
ANR	1001325	Argument	x		1001294	1					
ANR	1001326	Identifier	x		1001294	0					
ANR	1001327	Argument	y		1001294	2					
ANR	1001328	Identifier	y		1001294	0					
ANR	1001329	Argument	w		1001294	3					
ANR	1001330	Identifier	w		1001294	0					
ANR	1001331	Argument	h		1001294	4					
ANR	1001332	Identifier	h		1001294	0					
ANR	1001333	Argument	pdevc -> colors . pure		1001294	5					
ANR	1001334	MemberAccess	pdevc -> colors . pure		1001294	0					
ANR	1001335	PtrMemberAccess	pdevc -> colors		1001294	0					
ANR	1001336	Identifier	pdevc		1001294	0					
ANR	1001337	Identifier	colors		1001294	1					
ANR	1001338	Identifier	pure		1001294	1					
ANR	1001339	CompoundStatement		7:8:231:256	1001294	1					
ANR	1001340	IdentifierDeclStatement	gx_color_index colors [ 2 ] ;	803:8:26447:26471	1001294	0	True				
ANR	1001341	IdentifierDecl	colors [ 2 ]		1001294	0					
ANR	1001342	IdentifierDeclType	gx_color_index [ 2 ]		1001294	0					
ANR	1001343	Identifier	colors		1001294	1					
ANR	1001344	PrimaryExpression	2		1001294	2					
ANR	1001345	IdentifierDeclStatement	gx_rop_source_t no_source ;	804:8:26481:26506	1001294	1	True				
ANR	1001346	IdentifierDecl	no_source		1001294	0					
ANR	1001347	IdentifierDeclType	gx_rop_source_t		1001294	0					
ANR	1001348	Identifier	no_source		1001294	1					
ANR	1001349	ExpressionStatement	colors [ 0 ] = colors [ 1 ] = pdevc -> colors . pure	806:8:26517:26559	1001294	2	True				
ANR	1001350	AssignmentExpression	colors [ 0 ] = colors [ 1 ] = pdevc -> colors . pure		1001294	0		=			
ANR	1001351	ArrayIndexing	colors [ 0 ]		1001294	0					
ANR	1001352	Identifier	colors		1001294	0					
ANR	1001353	PrimaryExpression	0		1001294	1					
ANR	1001354	AssignmentExpression	colors [ 1 ] = pdevc -> colors . pure		1001294	1		=			
ANR	1001355	ArrayIndexing	colors [ 1 ]		1001294	0					
ANR	1001356	Identifier	colors		1001294	0					
ANR	1001357	PrimaryExpression	1		1001294	1					
ANR	1001358	MemberAccess	pdevc -> colors . pure		1001294	1					
ANR	1001359	PtrMemberAccess	pdevc -> colors		1001294	0					
ANR	1001360	Identifier	pdevc		1001294	0					
ANR	1001361	Identifier	colors		1001294	1					
ANR	1001362	Identifier	pure		1001294	1					
ANR	1001363	IfStatement	if ( source == NULL )		1001294	3					
ANR	1001364	Condition	source == NULL	807:12:26573:26586	1001294	0	True				
ANR	1001365	EqualityExpression	source == NULL		1001294	0		==			
ANR	1001366	Identifier	source		1001294	0					
ANR	1001367	Identifier	NULL		1001294	1					
ANR	1001368	ExpressionStatement	"set_rop_no_source ( source , no_source , dev )"	808:12:26601:26642	1001294	1	True				
ANR	1001369	CallExpression	"set_rop_no_source ( source , no_source , dev )"		1001294	0					
ANR	1001370	Callee	set_rop_no_source		1001294	0					
ANR	1001371	Identifier	set_rop_no_source		1001294	0					
ANR	1001372	ArgumentList	source		1001294	1					
ANR	1001373	Argument	source		1001294	0					
ANR	1001374	Identifier	source		1001294	0					
ANR	1001375	Argument	no_source		1001294	1					
ANR	1001376	Identifier	no_source		1001294	0					
ANR	1001377	Argument	dev		1001294	2					
ANR	1001378	Identifier	dev		1001294	0					
ANR	1001379	IfStatement	if ( source -> planar_height == 0 )		1001294	4					
ANR	1001380	Condition	source -> planar_height == 0	809:12:26656:26681	1001294	0	True				
ANR	1001381	EqualityExpression	source -> planar_height == 0		1001294	0		==			
ANR	1001382	PtrMemberAccess	source -> planar_height		1001294	0					
ANR	1001383	Identifier	source		1001294	0					
ANR	1001384	Identifier	planar_height		1001294	1					
ANR	1001385	PrimaryExpression	0		1001294	1					
ANR	1001386	ReturnStatement	"return ( * dev_proc ( dev , strip_copy_rop ) ) ( dev , source -> sdata , source -> sourcex , source -> sraster , source -> id , ( source -> use_scolors ? source -> scolors : NULL ) , NULL , colors , x , y , w , h , 0 , 0 , lop ) ;"	810:12:26696:26953	1001294	1	True				
ANR	1001387	CallExpression	"( * dev_proc ( dev , strip_copy_rop ) ) ( dev , source -> sdata , source -> sourcex , source -> sraster , source -> id , ( source -> use_scolors ? source -> scolors : NULL ) , NULL , colors , x , y , w , h , 0 , 0 , lop )"		1001294	0					
ANR	1001388	Callee	"* dev_proc ( dev , strip_copy_rop )"		1001294	0					
ANR	1001389	UnaryOperationExpression	"* dev_proc ( dev , strip_copy_rop )"		1001294	0					
ANR	1001390	UnaryOperator	*		1001294	0					
ANR	1001391	CallExpression	"dev_proc ( dev , strip_copy_rop )"		1001294	1					
ANR	1001392	Callee	dev_proc		1001294	0					
ANR	1001393	Identifier	dev_proc		1001294	0					
ANR	1001394	ArgumentList	dev		1001294	1					
ANR	1001395	Argument	dev		1001294	0					
ANR	1001396	Identifier	dev		1001294	0					
ANR	1001397	Argument	strip_copy_rop		1001294	1					
ANR	1001398	Identifier	strip_copy_rop		1001294	0					
ANR	1001399	ArgumentList	dev		1001294	1					
ANR	1001400	Argument	dev		1001294	0					
ANR	1001401	Identifier	dev		1001294	0					
ANR	1001402	Argument	source -> sdata		1001294	1					
ANR	1001403	PtrMemberAccess	source -> sdata		1001294	0					
ANR	1001404	Identifier	source		1001294	0					
ANR	1001405	Identifier	sdata		1001294	1					
ANR	1001406	Argument	source -> sourcex		1001294	2					
ANR	1001407	PtrMemberAccess	source -> sourcex		1001294	0					
ANR	1001408	Identifier	source		1001294	0					
ANR	1001409	Identifier	sourcex		1001294	1					
ANR	1001410	Argument	source -> sraster		1001294	3					
ANR	1001411	PtrMemberAccess	source -> sraster		1001294	0					
ANR	1001412	Identifier	source		1001294	0					
ANR	1001413	Identifier	sraster		1001294	1					
ANR	1001414	Argument	source -> id		1001294	4					
ANR	1001415	PtrMemberAccess	source -> id		1001294	0					
ANR	1001416	Identifier	source		1001294	0					
ANR	1001417	Identifier	id		1001294	1					
ANR	1001418	Argument	source -> use_scolors ? source -> scolors : NULL		1001294	5					
ANR	1001419	ConditionalExpression	source -> use_scolors ? source -> scolors : NULL		1001294	0					
ANR	1001420	Condition	source -> use_scolors		1001294	0					
ANR	1001421	PtrMemberAccess	source -> use_scolors		1001294	0					
ANR	1001422	Identifier	source		1001294	0					
ANR	1001423	Identifier	use_scolors		1001294	1					
ANR	1001424	PtrMemberAccess	source -> scolors		1001294	1					
ANR	1001425	Identifier	source		1001294	0					
ANR	1001426	Identifier	scolors		1001294	1					
ANR	1001427	Identifier	NULL		1001294	2					
ANR	1001428	Argument	NULL		1001294	6					
ANR	1001429	Identifier	NULL		1001294	0					
ANR	1001430	Argument	colors		1001294	7					
ANR	1001431	Identifier	colors		1001294	0					
ANR	1001432	Argument	x		1001294	8					
ANR	1001433	Identifier	x		1001294	0					
ANR	1001434	Argument	y		1001294	9					
ANR	1001435	Identifier	y		1001294	0					
ANR	1001436	Argument	w		1001294	10					
ANR	1001437	Identifier	w		1001294	0					
ANR	1001438	Argument	h		1001294	11					
ANR	1001439	Identifier	h		1001294	0					
ANR	1001440	Argument	0		1001294	12					
ANR	1001441	PrimaryExpression	0		1001294	0					
ANR	1001442	Argument	0		1001294	13					
ANR	1001443	PrimaryExpression	0		1001294	0					
ANR	1001444	Argument	lop		1001294	14					
ANR	1001445	Identifier	lop		1001294	0					
ANR	1001446	ElseStatement	else		1001294	0					
ANR	1001447	ReturnStatement	"return ( * dev_proc ( dev , strip_copy_rop2 ) ) ( dev , source -> sdata , source -> sourcex , source -> sraster , source -> id , ( source -> use_scolors ? source -> scolors : NULL ) , NULL , colors , x , y , w , h , 0 , 0 , lop , source -> planar_height ) ;"	815:12:26980:27261	1001294	0	True				
ANR	1001448	CallExpression	"( * dev_proc ( dev , strip_copy_rop2 ) ) ( dev , source -> sdata , source -> sourcex , source -> sraster , source -> id , ( source -> use_scolors ? source -> scolors : NULL ) , NULL , colors , x , y , w , h , 0 , 0 , lop , source -> planar_height )"		1001294	0					
ANR	1001449	Callee	"* dev_proc ( dev , strip_copy_rop2 )"		1001294	0					
ANR	1001450	UnaryOperationExpression	"* dev_proc ( dev , strip_copy_rop2 )"		1001294	0					
ANR	1001451	UnaryOperator	*		1001294	0					
ANR	1001452	CallExpression	"dev_proc ( dev , strip_copy_rop2 )"		1001294	1					
ANR	1001453	Callee	dev_proc		1001294	0					
ANR	1001454	Identifier	dev_proc		1001294	0					
ANR	1001455	ArgumentList	dev		1001294	1					
ANR	1001456	Argument	dev		1001294	0					
ANR	1001457	Identifier	dev		1001294	0					
ANR	1001458	Argument	strip_copy_rop2		1001294	1					
ANR	1001459	Identifier	strip_copy_rop2		1001294	0					
ANR	1001460	ArgumentList	dev		1001294	1					
ANR	1001461	Argument	dev		1001294	0					
ANR	1001462	Identifier	dev		1001294	0					
ANR	1001463	Argument	source -> sdata		1001294	1					
ANR	1001464	PtrMemberAccess	source -> sdata		1001294	0					
ANR	1001465	Identifier	source		1001294	0					
ANR	1001466	Identifier	sdata		1001294	1					
ANR	1001467	Argument	source -> sourcex		1001294	2					
ANR	1001468	PtrMemberAccess	source -> sourcex		1001294	0					
ANR	1001469	Identifier	source		1001294	0					
ANR	1001470	Identifier	sourcex		1001294	1					
ANR	1001471	Argument	source -> sraster		1001294	3					
ANR	1001472	PtrMemberAccess	source -> sraster		1001294	0					
ANR	1001473	Identifier	source		1001294	0					
ANR	1001474	Identifier	sraster		1001294	1					
ANR	1001475	Argument	source -> id		1001294	4					
ANR	1001476	PtrMemberAccess	source -> id		1001294	0					
ANR	1001477	Identifier	source		1001294	0					
ANR	1001478	Identifier	id		1001294	1					
ANR	1001479	Argument	source -> use_scolors ? source -> scolors : NULL		1001294	5					
ANR	1001480	ConditionalExpression	source -> use_scolors ? source -> scolors : NULL		1001294	0					
ANR	1001481	Condition	source -> use_scolors		1001294	0					
ANR	1001482	PtrMemberAccess	source -> use_scolors		1001294	0					
ANR	1001483	Identifier	source		1001294	0					
ANR	1001484	Identifier	use_scolors		1001294	1					
ANR	1001485	PtrMemberAccess	source -> scolors		1001294	1					
ANR	1001486	Identifier	source		1001294	0					
ANR	1001487	Identifier	scolors		1001294	1					
ANR	1001488	Identifier	NULL		1001294	2					
ANR	1001489	Argument	NULL		1001294	6					
ANR	1001490	Identifier	NULL		1001294	0					
ANR	1001491	Argument	colors		1001294	7					
ANR	1001492	Identifier	colors		1001294	0					
ANR	1001493	Argument	x		1001294	8					
ANR	1001494	Identifier	x		1001294	0					
ANR	1001495	Argument	y		1001294	9					
ANR	1001496	Identifier	y		1001294	0					
ANR	1001497	Argument	w		1001294	10					
ANR	1001498	Identifier	w		1001294	0					
ANR	1001499	Argument	h		1001294	11					
ANR	1001500	Identifier	h		1001294	0					
ANR	1001501	Argument	0		1001294	12					
ANR	1001502	PrimaryExpression	0		1001294	0					
ANR	1001503	Argument	0		1001294	13					
ANR	1001504	PrimaryExpression	0		1001294	0					
ANR	1001505	Argument	lop		1001294	14					
ANR	1001506	Identifier	lop		1001294	0					
ANR	1001507	Argument	source -> planar_height		1001294	15					
ANR	1001508	PtrMemberAccess	source -> planar_height		1001294	0					
ANR	1001509	Identifier	source		1001294	0					
ANR	1001510	Identifier	planar_height		1001294	1					
ANR	1001511	ReturnType	static int		1001294	1					
ANR	1001512	Identifier	gx_dc_pure_fill_rectangle		1001294	2					
ANR	1001513	ParameterList	"const gx_device_color * pdevc , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , const gx_rop_source_t * source"		1001294	3					
ANR	1001514	Parameter	const gx_device_color * pdevc	795:26:26069:26097	1001294	0	True				
ANR	1001515	ParameterType	const gx_device_color *		1001294	0					
ANR	1001516	Identifier	pdevc		1001294	1					
ANR	1001517	Parameter	int x	795:57:26100:26104	1001294	1	True				
ANR	1001518	ParameterType	int		1001294	0					
ANR	1001519	Identifier	x		1001294	1					
ANR	1001520	Parameter	int y	795:64:26107:26111	1001294	2	True				
ANR	1001521	ParameterType	int		1001294	0					
ANR	1001522	Identifier	y		1001294	1					
ANR	1001523	Parameter	int w	796:18:26132:26136	1001294	3	True				
ANR	1001524	ParameterType	int		1001294	0					
ANR	1001525	Identifier	w		1001294	1					
ANR	1001526	Parameter	int h	796:25:26139:26143	1001294	4	True				
ANR	1001527	ParameterType	int		1001294	0					
ANR	1001528	Identifier	h		1001294	1					
ANR	1001529	Parameter	gx_device * dev	796:32:26146:26160	1001294	5	True				
ANR	1001530	ParameterType	gx_device *		1001294	0					
ANR	1001531	Identifier	dev		1001294	1					
ANR	1001532	Parameter	gs_logical_operation_t lop	796:49:26163:26188	1001294	6	True				
ANR	1001533	ParameterType	gs_logical_operation_t		1001294	0					
ANR	1001534	Identifier	lop		1001294	1					
ANR	1001535	Parameter	const gx_rop_source_t * source	797:26:26217:26246	1001294	7	True				
ANR	1001536	ParameterType	const gx_rop_source_t *		1001294	0					
ANR	1001537	Identifier	source		1001294	1					
ANR	1001538	CFGEntryNode	ENTRY		1001294		True				
ANR	1001539	CFGExitNode	EXIT		1001294		True				
ANR	1001540	Symbol	pdevc -> colors . pure		1001294						
ANR	1001541	Symbol	* dev_proc		1001294						
ANR	1001542	Symbol	pdevc		1001294						
ANR	1001543	Symbol	source		1001294						
ANR	1001544	Symbol	"* dev_proc ( dev , fill_rectangle )"		1001294						
ANR	1001545	Symbol	lop		1001294						
ANR	1001546	Symbol	"* dev_proc ( dev , strip_copy_rop2 )"		1001294						
ANR	1001547	Symbol	colors		1001294						
ANR	1001548	Symbol	* colors		1001294						
ANR	1001549	Symbol	lop_no_S_is_T		1001294						
ANR	1001550	Symbol	* pdevc		1001294						
ANR	1001551	Symbol	no_source		1001294						
ANR	1001552	Symbol	dev		1001294						
ANR	1001553	Symbol	dev_proc		1001294						
ANR	1001554	Symbol	pdevc -> colors		1001294						
ANR	1001555	Symbol	* source		1001294						
ANR	1001556	Symbol	"* dev_proc ( dev , strip_copy_rop )"		1001294						
ANR	1001557	Symbol	strip_copy_rop		1001294						
ANR	1001558	Symbol	source -> planar_height		1001294						
ANR	1001559	Symbol	NULL		1001294						
ANR	1001560	Symbol	source -> scolors		1001294						
ANR	1001561	Symbol	h		1001294						
ANR	1001562	Symbol	fill_rectangle		1001294						
ANR	1001563	Symbol	source -> use_scolors		1001294						
ANR	1001564	Symbol	strip_copy_rop2		1001294						
ANR	1001565	Symbol	source -> sraster		1001294						
ANR	1001566	Symbol	source -> sdata		1001294						
ANR	1001567	Symbol	w		1001294						
ANR	1001568	Symbol	x		1001294						
ANR	1001569	Symbol	y		1001294						
ANR	1001570	Symbol	source -> id		1001294						
ANR	1001571	Symbol	source -> sourcex		1001294						
ANR	1001572	Function	gx_dc_pure_fill_masked	824:0:27382:28686							
ANR	1001573	FunctionDef	"gx_dc_pure_fill_masked (const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert)"		1001572	0					
ANR	1001574	CompoundStatement		828:0:27620:28686	1001572	0					
ANR	1001575	IfStatement	if ( lop_no_S_is_T ( lop ) )		1001572	0					
ANR	1001576	Condition	lop_no_S_is_T ( lop )	829:8:27630:27647	1001572	0	True				
ANR	1001577	CallExpression	lop_no_S_is_T ( lop )		1001572	0					
ANR	1001578	Callee	lop_no_S_is_T		1001572	0					
ANR	1001579	Identifier	lop_no_S_is_T		1001572	0					
ANR	1001580	ArgumentList	lop		1001572	1					
ANR	1001581	Argument	lop		1001572	0					
ANR	1001582	Identifier	lop		1001572	0					
ANR	1001583	CompoundStatement		3:8:39:68	1001572	1					
ANR	1001584	IdentifierDeclStatement	"gx_color_index color0 , color1 ;"	830:8:27660:27689	1001572	0	True				
ANR	1001585	IdentifierDecl	color0		1001572	0					
ANR	1001586	IdentifierDeclType	gx_color_index		1001572	0					
ANR	1001587	Identifier	color0		1001572	1					
ANR	1001588	IdentifierDecl	color1		1001572	1					
ANR	1001589	IdentifierDeclType	gx_color_index		1001572	0					
ANR	1001590	Identifier	color1		1001572	1					
ANR	1001591	IfStatement	if ( invert )		1001572	1					
ANR	1001592	Condition	invert	832:12:27704:27709	1001572	0	True				
ANR	1001593	Identifier	invert		1001572	0					
ANR	1001594	ExpressionStatement	"color0 = pdevc -> colors . pure , color1 = gx_no_color_index"	833:12:27724:27779	1001572	1	True				
ANR	1001595	Expression	"color0 = pdevc -> colors . pure , color1 = gx_no_color_index"		1001572	0					
ANR	1001596	AssignmentExpression	color0 = pdevc -> colors . pure		1001572	0		=			
ANR	1001597	Identifier	color0		1001572	0					
ANR	1001598	MemberAccess	pdevc -> colors . pure		1001572	1					
ANR	1001599	PtrMemberAccess	pdevc -> colors		1001572	0					
ANR	1001600	Identifier	pdevc		1001572	0					
ANR	1001601	Identifier	colors		1001572	1					
ANR	1001602	Identifier	pure		1001572	1					
ANR	1001603	AssignmentExpression	color1 = gx_no_color_index		1001572	1		=			
ANR	1001604	Identifier	color1		1001572	0					
ANR	1001605	Identifier	gx_no_color_index		1001572	1					
ANR	1001606	ElseStatement	else		1001572	0					
ANR	1001607	ExpressionStatement	"color1 = pdevc -> colors . pure , color0 = gx_no_color_index"	835:12:27806:27861	1001572	0	True				
ANR	1001608	Expression	"color1 = pdevc -> colors . pure , color0 = gx_no_color_index"		1001572	0					
ANR	1001609	AssignmentExpression	color1 = pdevc -> colors . pure		1001572	0		=			
ANR	1001610	Identifier	color1		1001572	0					
ANR	1001611	MemberAccess	pdevc -> colors . pure		1001572	1					
ANR	1001612	PtrMemberAccess	pdevc -> colors		1001572	0					
ANR	1001613	Identifier	pdevc		1001572	0					
ANR	1001614	Identifier	colors		1001572	1					
ANR	1001615	Identifier	pure		1001572	1					
ANR	1001616	AssignmentExpression	color0 = gx_no_color_index		1001572	1		=			
ANR	1001617	Identifier	color0		1001572	0					
ANR	1001618	Identifier	gx_no_color_index		1001572	1					
ANR	1001619	ReturnStatement	"return ( * dev_proc ( dev , copy_mono ) ) ( dev , data , data_x , raster , id , x , y , w , h , color0 , color1 ) ;"	836:8:27871:27977	1001572	2	True				
ANR	1001620	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , data , data_x , raster , id , x , y , w , h , color0 , color1 )"		1001572	0					
ANR	1001621	Callee	"* dev_proc ( dev , copy_mono )"		1001572	0					
ANR	1001622	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		1001572	0					
ANR	1001623	UnaryOperator	*		1001572	0					
ANR	1001624	CallExpression	"dev_proc ( dev , copy_mono )"		1001572	1					
ANR	1001625	Callee	dev_proc		1001572	0					
ANR	1001626	Identifier	dev_proc		1001572	0					
ANR	1001627	ArgumentList	dev		1001572	1					
ANR	1001628	Argument	dev		1001572	0					
ANR	1001629	Identifier	dev		1001572	0					
ANR	1001630	Argument	copy_mono		1001572	1					
ANR	1001631	Identifier	copy_mono		1001572	0					
ANR	1001632	ArgumentList	dev		1001572	1					
ANR	1001633	Argument	dev		1001572	0					
ANR	1001634	Identifier	dev		1001572	0					
ANR	1001635	Argument	data		1001572	1					
ANR	1001636	Identifier	data		1001572	0					
ANR	1001637	Argument	data_x		1001572	2					
ANR	1001638	Identifier	data_x		1001572	0					
ANR	1001639	Argument	raster		1001572	3					
ANR	1001640	Identifier	raster		1001572	0					
ANR	1001641	Argument	id		1001572	4					
ANR	1001642	Identifier	id		1001572	0					
ANR	1001643	Argument	x		1001572	5					
ANR	1001644	Identifier	x		1001572	0					
ANR	1001645	Argument	y		1001572	6					
ANR	1001646	Identifier	y		1001572	0					
ANR	1001647	Argument	w		1001572	7					
ANR	1001648	Identifier	w		1001572	0					
ANR	1001649	Argument	h		1001572	8					
ANR	1001650	Identifier	h		1001572	0					
ANR	1001651	Argument	color0		1001572	9					
ANR	1001652	Identifier	color0		1001572	0					
ANR	1001653	Argument	color1		1001572	10					
ANR	1001654	Identifier	color1		1001572	0					
ANR	1001655	CompoundStatement		13:8:409:434	1001572	1					
ANR	1001656	IdentifierDeclStatement	gx_color_index scolors [ 2 ] ;	839:8:27995:28020	1001572	0	True				
ANR	1001657	IdentifierDecl	scolors [ 2 ]		1001572	0					
ANR	1001658	IdentifierDeclType	gx_color_index [ 2 ]		1001572	0					
ANR	1001659	Identifier	scolors		1001572	1					
ANR	1001660	PrimaryExpression	2		1001572	2					
ANR	1001661	IdentifierDeclStatement	gx_color_index tcolors [ 2 ] ;	840:8:28030:28055	1001572	1	True				
ANR	1001662	IdentifierDecl	tcolors [ 2 ]		1001572	0					
ANR	1001663	IdentifierDeclType	gx_color_index [ 2 ]		1001572	0					
ANR	1001664	Identifier	tcolors		1001572	1					
ANR	1001665	PrimaryExpression	2		1001572	2					
ANR	1001666	IfStatement	if ( lop != lop_default )		1001572	2					
ANR	1001667	Condition	lop != lop_default	842:13:28071:28088	1001572	0	True				
ANR	1001668	EqualityExpression	lop != lop_default		1001572	0		!=			
ANR	1001669	Identifier	lop		1001572	0					
ANR	1001670	Identifier	lop_default		1001572	1					
ANR	1001671	CompoundStatement		15:34:471:471	1001572	1					
ANR	1001672	ExpressionStatement	scolors [ 0 ] = gx_device_white ( dev )	843:12:28106:28139	1001572	0	True				
ANR	1001673	AssignmentExpression	scolors [ 0 ] = gx_device_white ( dev )		1001572	0		=			
ANR	1001674	ArrayIndexing	scolors [ 0 ]		1001572	0					
ANR	1001675	Identifier	scolors		1001572	0					
ANR	1001676	PrimaryExpression	0		1001572	1					
ANR	1001677	CallExpression	gx_device_white ( dev )		1001572	1					
ANR	1001678	Callee	gx_device_white		1001572	0					
ANR	1001679	Identifier	gx_device_white		1001572	0					
ANR	1001680	ArgumentList	dev		1001572	1					
ANR	1001681	Argument	dev		1001572	0					
ANR	1001682	Identifier	dev		1001572	0					
ANR	1001683	ExpressionStatement	scolors [ 1 ] = gx_device_black ( dev )	844:12:28153:28186	1001572	1	True				
ANR	1001684	AssignmentExpression	scolors [ 1 ] = gx_device_black ( dev )		1001572	0		=			
ANR	1001685	ArrayIndexing	scolors [ 1 ]		1001572	0					
ANR	1001686	Identifier	scolors		1001572	0					
ANR	1001687	PrimaryExpression	1		1001572	1					
ANR	1001688	CallExpression	gx_device_black ( dev )		1001572	1					
ANR	1001689	Callee	gx_device_black		1001572	0					
ANR	1001690	Identifier	gx_device_black		1001572	0					
ANR	1001691	ArgumentList	dev		1001572	1					
ANR	1001692	Argument	dev		1001572	0					
ANR	1001693	Identifier	dev		1001572	0					
ANR	1001694	ElseStatement	else		1001572	0					
ANR	1001695	CompoundStatement		18:15:582:582	1001572	0					
ANR	1001696	ExpressionStatement	scolors [ 0 ] = gx_device_black ( dev )	846:12:28217:28250	1001572	0	True				
ANR	1001697	AssignmentExpression	scolors [ 0 ] = gx_device_black ( dev )		1001572	0		=			
ANR	1001698	ArrayIndexing	scolors [ 0 ]		1001572	0					
ANR	1001699	Identifier	scolors		1001572	0					
ANR	1001700	PrimaryExpression	0		1001572	1					
ANR	1001701	CallExpression	gx_device_black ( dev )		1001572	1					
ANR	1001702	Callee	gx_device_black		1001572	0					
ANR	1001703	Identifier	gx_device_black		1001572	0					
ANR	1001704	ArgumentList	dev		1001572	1					
ANR	1001705	Argument	dev		1001572	0					
ANR	1001706	Identifier	dev		1001572	0					
ANR	1001707	ExpressionStatement	scolors [ 1 ] = gx_device_white ( dev )	847:12:28264:28297	1001572	1	True				
ANR	1001708	AssignmentExpression	scolors [ 1 ] = gx_device_white ( dev )		1001572	0		=			
ANR	1001709	ArrayIndexing	scolors [ 1 ]		1001572	0					
ANR	1001710	Identifier	scolors		1001572	0					
ANR	1001711	PrimaryExpression	1		1001572	1					
ANR	1001712	CallExpression	gx_device_white ( dev )		1001572	1					
ANR	1001713	Callee	gx_device_white		1001572	0					
ANR	1001714	Identifier	gx_device_white		1001572	0					
ANR	1001715	ArgumentList	dev		1001572	1					
ANR	1001716	Argument	dev		1001572	0					
ANR	1001717	Identifier	dev		1001572	0					
ANR	1001718	ExpressionStatement	tcolors [ 0 ] = tcolors [ 1 ] = pdevc -> colors . pure	849:8:28317:28361	1001572	3	True				
ANR	1001719	AssignmentExpression	tcolors [ 0 ] = tcolors [ 1 ] = pdevc -> colors . pure		1001572	0		=			
ANR	1001720	ArrayIndexing	tcolors [ 0 ]		1001572	0					
ANR	1001721	Identifier	tcolors		1001572	0					
ANR	1001722	PrimaryExpression	0		1001572	1					
ANR	1001723	AssignmentExpression	tcolors [ 1 ] = pdevc -> colors . pure		1001572	1		=			
ANR	1001724	ArrayIndexing	tcolors [ 1 ]		1001572	0					
ANR	1001725	Identifier	tcolors		1001572	0					
ANR	1001726	PrimaryExpression	1		1001572	1					
ANR	1001727	MemberAccess	pdevc -> colors . pure		1001572	1					
ANR	1001728	PtrMemberAccess	pdevc -> colors		1001572	0					
ANR	1001729	Identifier	pdevc		1001572	0					
ANR	1001730	Identifier	colors		1001572	1					
ANR	1001731	Identifier	pure		1001572	1					
ANR	1001732	IfStatement	if ( invert )		1001572	4					
ANR	1001733	Condition	invert	851:12:28376:28381	1001572	0	True				
ANR	1001734	Identifier	invert		1001572	0					
ANR	1001735	ExpressionStatement	lop = rop3_invert_S ( lop )	852:12:28396:28420	1001572	1	True				
ANR	1001736	AssignmentExpression	lop = rop3_invert_S ( lop )		1001572	0		=			
ANR	1001737	Identifier	lop		1001572	0					
ANR	1001738	CallExpression	rop3_invert_S ( lop )		1001572	1					
ANR	1001739	Callee	rop3_invert_S		1001572	0					
ANR	1001740	Identifier	rop3_invert_S		1001572	0					
ANR	1001741	ArgumentList	lop		1001572	1					
ANR	1001742	Argument	lop		1001572	0					
ANR	1001743	Identifier	lop		1001572	0					
ANR	1001744	IfStatement	if ( ! rop3_uses_S ( lop ) )		1001572	5					
ANR	1001745	Condition	! rop3_uses_S ( lop )	854:12:28435:28451	1001572	0	True				
ANR	1001746	UnaryOperationExpression	! rop3_uses_S ( lop )		1001572	0					
ANR	1001747	UnaryOperator	!		1001572	0					
ANR	1001748	CallExpression	rop3_uses_S ( lop )		1001572	1					
ANR	1001749	Callee	rop3_uses_S		1001572	0					
ANR	1001750	Identifier	rop3_uses_S		1001572	0					
ANR	1001751	ArgumentList	lop		1001572	1					
ANR	1001752	Argument	lop		1001572	0					
ANR	1001753	Identifier	lop		1001572	0					
ANR	1001754	ExpressionStatement	lop |= rop3_S	855:12:28466:28479	1001572	1	True				
ANR	1001755	AssignmentExpression	lop |= rop3_S		1001572	0		|=			
ANR	1001756	Identifier	lop		1001572	0					
ANR	1001757	Identifier	rop3_S		1001572	1					
ANR	1001758	ReturnStatement	"return ( * dev_proc ( dev , strip_copy_rop ) ) ( dev , data , data_x , raster , id , scolors , NULL , tcolors , x , y , w , h , 0 , 0 , lop | lop_S_transparent ) ;"	857:8:28502:28678	1001572	6	True				
ANR	1001759	CallExpression	"( * dev_proc ( dev , strip_copy_rop ) ) ( dev , data , data_x , raster , id , scolors , NULL , tcolors , x , y , w , h , 0 , 0 , lop | lop_S_transparent )"		1001572	0					
ANR	1001760	Callee	"* dev_proc ( dev , strip_copy_rop )"		1001572	0					
ANR	1001761	UnaryOperationExpression	"* dev_proc ( dev , strip_copy_rop )"		1001572	0					
ANR	1001762	UnaryOperator	*		1001572	0					
ANR	1001763	CallExpression	"dev_proc ( dev , strip_copy_rop )"		1001572	1					
ANR	1001764	Callee	dev_proc		1001572	0					
ANR	1001765	Identifier	dev_proc		1001572	0					
ANR	1001766	ArgumentList	dev		1001572	1					
ANR	1001767	Argument	dev		1001572	0					
ANR	1001768	Identifier	dev		1001572	0					
ANR	1001769	Argument	strip_copy_rop		1001572	1					
ANR	1001770	Identifier	strip_copy_rop		1001572	0					
ANR	1001771	ArgumentList	dev		1001572	1					
ANR	1001772	Argument	dev		1001572	0					
ANR	1001773	Identifier	dev		1001572	0					
ANR	1001774	Argument	data		1001572	1					
ANR	1001775	Identifier	data		1001572	0					
ANR	1001776	Argument	data_x		1001572	2					
ANR	1001777	Identifier	data_x		1001572	0					
ANR	1001778	Argument	raster		1001572	3					
ANR	1001779	Identifier	raster		1001572	0					
ANR	1001780	Argument	id		1001572	4					
ANR	1001781	Identifier	id		1001572	0					
ANR	1001782	Argument	scolors		1001572	5					
ANR	1001783	Identifier	scolors		1001572	0					
ANR	1001784	Argument	NULL		1001572	6					
ANR	1001785	Identifier	NULL		1001572	0					
ANR	1001786	Argument	tcolors		1001572	7					
ANR	1001787	Identifier	tcolors		1001572	0					
ANR	1001788	Argument	x		1001572	8					
ANR	1001789	Identifier	x		1001572	0					
ANR	1001790	Argument	y		1001572	9					
ANR	1001791	Identifier	y		1001572	0					
ANR	1001792	Argument	w		1001572	10					
ANR	1001793	Identifier	w		1001572	0					
ANR	1001794	Argument	h		1001572	11					
ANR	1001795	Identifier	h		1001572	0					
ANR	1001796	Argument	0		1001572	12					
ANR	1001797	PrimaryExpression	0		1001572	0					
ANR	1001798	Argument	0		1001572	13					
ANR	1001799	PrimaryExpression	0		1001572	0					
ANR	1001800	Argument	lop | lop_S_transparent		1001572	14					
ANR	1001801	InclusiveOrExpression	lop | lop_S_transparent		1001572	0		|			
ANR	1001802	Identifier	lop		1001572	0					
ANR	1001803	Identifier	lop_S_transparent		1001572	1					
ANR	1001804	ReturnType	static int		1001572	1					
ANR	1001805	Identifier	gx_dc_pure_fill_masked		1001572	2					
ANR	1001806	ParameterList	"const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert"		1001572	3					
ANR	1001807	Parameter	const gx_device_color * pdevc	825:23:27416:27444	1001572	0	True				
ANR	1001808	ParameterType	const gx_device_color *		1001572	0					
ANR	1001809	Identifier	pdevc		1001572	1					
ANR	1001810	Parameter	const byte * data	825:54:27447:27463	1001572	1	True				
ANR	1001811	ParameterType	const byte *		1001572	0					
ANR	1001812	Identifier	data		1001572	1					
ANR	1001813	Parameter	int data_x	826:8:27474:27483	1001572	2	True				
ANR	1001814	ParameterType	int		1001572	0					
ANR	1001815	Identifier	data_x		1001572	1					
ANR	1001816	Parameter	int raster	826:20:27486:27495	1001572	3	True				
ANR	1001817	ParameterType	int		1001572	0					
ANR	1001818	Identifier	raster		1001572	1					
ANR	1001819	Parameter	gx_bitmap_id id	826:32:27498:27512	1001572	4	True				
ANR	1001820	ParameterType	gx_bitmap_id		1001572	0					
ANR	1001821	Identifier	id		1001572	1					
ANR	1001822	Parameter	int x	826:49:27515:27519	1001572	5	True				
ANR	1001823	ParameterType	int		1001572	0					
ANR	1001824	Identifier	x		1001572	1					
ANR	1001825	Parameter	int y	826:56:27522:27526	1001572	6	True				
ANR	1001826	ParameterType	int		1001572	0					
ANR	1001827	Identifier	y		1001572	1					
ANR	1001828	Parameter	int w	826:63:27529:27533	1001572	7	True				
ANR	1001829	ParameterType	int		1001572	0					
ANR	1001830	Identifier	w		1001572	1					
ANR	1001831	Parameter	int h	826:70:27536:27540	1001572	8	True				
ANR	1001832	ParameterType	int		1001572	0					
ANR	1001833	Identifier	h		1001572	1					
ANR	1001834	Parameter	gx_device * dev	827:19:27562:27576	1001572	9	True				
ANR	1001835	ParameterType	gx_device *		1001572	0					
ANR	1001836	Identifier	dev		1001572	1					
ANR	1001837	Parameter	gs_logical_operation_t lop	827:36:27579:27604	1001572	10	True				
ANR	1001838	ParameterType	gs_logical_operation_t		1001572	0					
ANR	1001839	Identifier	lop		1001572	1					
ANR	1001840	Parameter	bool invert	827:64:27607:27617	1001572	11	True				
ANR	1001841	ParameterType	bool		1001572	0					
ANR	1001842	Identifier	invert		1001572	1					
ANR	1001843	CFGEntryNode	ENTRY		1001572		True				
ANR	1001844	CFGExitNode	EXIT		1001572		True				
ANR	1001845	Symbol	pdevc -> colors . pure		1001572						
ANR	1001846	Symbol	data		1001572						
ANR	1001847	Symbol	* dev_proc		1001572						
ANR	1001848	Symbol	pdevc		1001572						
ANR	1001849	Symbol	scolors		1001572						
ANR	1001850	Symbol	lop		1001572						
ANR	1001851	Symbol	rop3_S		1001572						
ANR	1001852	Symbol	lop_S_transparent		1001572						
ANR	1001853	Symbol	color1		1001572						
ANR	1001854	Symbol	data_x		1001572						
ANR	1001855	Symbol	lop_no_S_is_T		1001572						
ANR	1001856	Symbol	* pdevc		1001572						
ANR	1001857	Symbol	color0		1001572						
ANR	1001858	Symbol	gx_no_color_index		1001572						
ANR	1001859	Symbol	dev		1001572						
ANR	1001860	Symbol	dev_proc		1001572						
ANR	1001861	Symbol	copy_mono		1001572						
ANR	1001862	Symbol	pdevc -> colors		1001572						
ANR	1001863	Symbol	rop3_invert_S		1001572						
ANR	1001864	Symbol	"* dev_proc ( dev , strip_copy_rop )"		1001572						
ANR	1001865	Symbol	id		1001572						
ANR	1001866	Symbol	strip_copy_rop		1001572						
ANR	1001867	Symbol	* tcolors		1001572						
ANR	1001868	Symbol	gx_device_white		1001572						
ANR	1001869	Symbol	gx_device_black		1001572						
ANR	1001870	Symbol	NULL		1001572						
ANR	1001871	Symbol	invert		1001572						
ANR	1001872	Symbol	* scolors		1001572						
ANR	1001873	Symbol	raster		1001572						
ANR	1001874	Symbol	h		1001572						
ANR	1001875	Symbol	lop_default		1001572						
ANR	1001876	Symbol	rop3_uses_S		1001572						
ANR	1001877	Symbol	tcolors		1001572						
ANR	1001878	Symbol	w		1001572						
ANR	1001879	Symbol	x		1001572						
ANR	1001880	Symbol	y		1001572						
ANR	1001881	Symbol	"* dev_proc ( dev , copy_mono )"		1001572						
ANR	1001882	Function	gx_dc_pure_equal	864:0:28689:28889							
ANR	1001883	FunctionDef	"gx_dc_pure_equal (const gx_device_color * pdevc1 , const gx_device_color * pdevc2)"		1001882	0					
ANR	1001884	CompoundStatement		866:0:28782:28889	1001882	0					
ANR	1001885	ReturnStatement	return pdevc2 -> type == pdevc1 -> type && gx_dc_pure_color ( pdevc1 ) == gx_dc_pure_color ( pdevc2 ) ;	867:4:28788:28887	1001882	0	True				
ANR	1001886	AndExpression	pdevc2 -> type == pdevc1 -> type && gx_dc_pure_color ( pdevc1 ) == gx_dc_pure_color ( pdevc2 )		1001882	0		&&			
ANR	1001887	EqualityExpression	pdevc2 -> type == pdevc1 -> type		1001882	0		==			
ANR	1001888	PtrMemberAccess	pdevc2 -> type		1001882	0					
ANR	1001889	Identifier	pdevc2		1001882	0					
ANR	1001890	Identifier	type		1001882	1					
ANR	1001891	PtrMemberAccess	pdevc1 -> type		1001882	1					
ANR	1001892	Identifier	pdevc1		1001882	0					
ANR	1001893	Identifier	type		1001882	1					
ANR	1001894	EqualityExpression	gx_dc_pure_color ( pdevc1 ) == gx_dc_pure_color ( pdevc2 )		1001882	1		==			
ANR	1001895	CallExpression	gx_dc_pure_color ( pdevc1 )		1001882	0					
ANR	1001896	Callee	gx_dc_pure_color		1001882	0					
ANR	1001897	Identifier	gx_dc_pure_color		1001882	0					
ANR	1001898	ArgumentList	pdevc1		1001882	1					
ANR	1001899	Argument	pdevc1		1001882	0					
ANR	1001900	Identifier	pdevc1		1001882	0					
ANR	1001901	CallExpression	gx_dc_pure_color ( pdevc2 )		1001882	1					
ANR	1001902	Callee	gx_dc_pure_color		1001882	0					
ANR	1001903	Identifier	gx_dc_pure_color		1001882	0					
ANR	1001904	ArgumentList	pdevc2		1001882	1					
ANR	1001905	Argument	pdevc2		1001882	0					
ANR	1001906	Identifier	pdevc2		1001882	0					
ANR	1001907	ReturnType	static bool		1001882	1					
ANR	1001908	Identifier	gx_dc_pure_equal		1001882	2					
ANR	1001909	ParameterList	"const gx_device_color * pdevc1 , const gx_device_color * pdevc2"		1001882	3					
ANR	1001910	Parameter	const gx_device_color * pdevc1	865:17:28718:28747	1001882	0	True				
ANR	1001911	ParameterType	const gx_device_color *		1001882	0					
ANR	1001912	Identifier	pdevc1		1001882	1					
ANR	1001913	Parameter	const gx_device_color * pdevc2	865:49:28750:28779	1001882	1	True				
ANR	1001914	ParameterType	const gx_device_color *		1001882	0					
ANR	1001915	Identifier	pdevc2		1001882	1					
ANR	1001916	CFGEntryNode	ENTRY		1001882		True				
ANR	1001917	CFGExitNode	EXIT		1001882		True				
ANR	1001918	Symbol	gx_dc_pure_color		1001882						
ANR	1001919	Symbol	* pdevc1		1001882						
ANR	1001920	Symbol	pdevc2 -> type		1001882						
ANR	1001921	Symbol	* pdevc2		1001882						
ANR	1001922	Symbol	pdevc1 -> type		1001882						
ANR	1001923	Symbol	pdevc2		1001882						
ANR	1001924	Symbol	pdevc1		1001882						
ANR	1001925	Function	gx_dc_pure_write	902:0:29908:30494							
ANR	1001926	FunctionDef	"gx_dc_pure_write (const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * pdata , uint * psize)"		1001925	0					
ANR	1001927	CompoundStatement		910:0:30214:30494	1001925	0					
ANR	1001928	IfStatement	if ( psdc != 0 && psdc -> type == pdevc -> type && psdc -> colors . pure == pdevc -> colors . pure )		1001925	0					
ANR	1001929	Condition	psdc != 0 && psdc -> type == pdevc -> type && psdc -> colors . pure == pdevc -> colors . pure	911:9:30225:30365	1001925	0	True				
ANR	1001930	AndExpression	psdc != 0 && psdc -> type == pdevc -> type && psdc -> colors . pure == pdevc -> colors . pure		1001925	0		&&			
ANR	1001931	EqualityExpression	psdc != 0		1001925	0		!=			
ANR	1001932	Identifier	psdc		1001925	0					
ANR	1001933	PrimaryExpression	0		1001925	1					
ANR	1001934	AndExpression	psdc -> type == pdevc -> type && psdc -> colors . pure == pdevc -> colors . pure		1001925	1		&&			
ANR	1001935	EqualityExpression	psdc -> type == pdevc -> type		1001925	0		==			
ANR	1001936	PtrMemberAccess	psdc -> type		1001925	0					
ANR	1001937	Identifier	psdc		1001925	0					
ANR	1001938	Identifier	type		1001925	1					
ANR	1001939	PtrMemberAccess	pdevc -> type		1001925	1					
ANR	1001940	Identifier	pdevc		1001925	0					
ANR	1001941	Identifier	type		1001925	1					
ANR	1001942	EqualityExpression	psdc -> colors . pure == pdevc -> colors . pure		1001925	1		==			
ANR	1001943	MemberAccess	psdc -> colors . pure		1001925	0					
ANR	1001944	PtrMemberAccess	psdc -> colors		1001925	0					
ANR	1001945	Identifier	psdc		1001925	0					
ANR	1001946	Identifier	colors		1001925	1					
ANR	1001947	Identifier	pure		1001925	1					
ANR	1001948	MemberAccess	pdevc -> colors . pure		1001925	1					
ANR	1001949	PtrMemberAccess	pdevc -> colors		1001925	0					
ANR	1001950	Identifier	pdevc		1001925	0					
ANR	1001951	Identifier	colors		1001925	1					
ANR	1001952	Identifier	pure		1001925	1					
ANR	1001953	CompoundStatement		4:52:155:155	1001925	1					
ANR	1001954	ExpressionStatement	* psize = 0	914:8:30380:30390	1001925	0	True				
ANR	1001955	AssignmentExpression	* psize = 0		1001925	0		=			
ANR	1001956	UnaryOperationExpression	* psize		1001925	0					
ANR	1001957	UnaryOperator	*		1001925	0					
ANR	1001958	Identifier	psize		1001925	1					
ANR	1001959	PrimaryExpression	0		1001925	1					
ANR	1001960	ReturnStatement	return 1 ;	915:8:30400:30408	1001925	1	True				
ANR	1001961	PrimaryExpression	1		1001925	0					
ANR	1001962	ElseStatement	else		1001925	0					
ANR	1001963	ReturnStatement	"return gx_dc_write_color ( pdevc -> colors . pure , dev , pdata , psize ) ;"	917:8:30429:30492	1001925	0	True				
ANR	1001964	CallExpression	"gx_dc_write_color ( pdevc -> colors . pure , dev , pdata , psize )"		1001925	0					
ANR	1001965	Callee	gx_dc_write_color		1001925	0					
ANR	1001966	Identifier	gx_dc_write_color		1001925	0					
ANR	1001967	ArgumentList	pdevc -> colors . pure		1001925	1					
ANR	1001968	Argument	pdevc -> colors . pure		1001925	0					
ANR	1001969	MemberAccess	pdevc -> colors . pure		1001925	0					
ANR	1001970	PtrMemberAccess	pdevc -> colors		1001925	0					
ANR	1001971	Identifier	pdevc		1001925	0					
ANR	1001972	Identifier	colors		1001925	1					
ANR	1001973	Identifier	pure		1001925	1					
ANR	1001974	Argument	dev		1001925	1					
ANR	1001975	Identifier	dev		1001925	0					
ANR	1001976	Argument	pdata		1001925	2					
ANR	1001977	Identifier	pdata		1001925	0					
ANR	1001978	Argument	psize		1001925	3					
ANR	1001979	Identifier	psize		1001925	0					
ANR	1001980	ReturnType	static int		1001925	1					
ANR	1001981	Identifier	gx_dc_pure_write		1001925	2					
ANR	1001982	ParameterList	"const gx_device_color * pdevc , const gx_device_color_saved * psdc , const gx_device * dev , int64_t offset , byte * pdata , uint * psize"		1001925	3					
ANR	1001983	Parameter	const gx_device_color * pdevc	904:4:29941:29977	1001925	0	True				
ANR	1001984	ParameterType	const gx_device_color *		1001925	0					
ANR	1001985	Identifier	pdevc		1001925	1					
ANR	1001986	Parameter	const gx_device_color_saved * psdc	905:4:29984:30019	1001925	1	True				
ANR	1001987	ParameterType	const gx_device_color_saved *		1001925	0					
ANR	1001988	Identifier	psdc		1001925	1					
ANR	1001989	Parameter	const gx_device * dev	906:4:30046:30080	1001925	2	True				
ANR	1001990	ParameterType	const gx_device *		1001925	0					
ANR	1001991	Identifier	dev		1001925	1					
ANR	1001992	Parameter	int64_t offset	907:4:30087:30106	1001925	3	True				
ANR	1001993	ParameterType	int64_t		1001925	0					
ANR	1001994	Identifier	offset		1001925	1					
ANR	1001995	Parameter	byte * pdata	908:4:30131:30167	1001925	4	True				
ANR	1001996	ParameterType	byte *		1001925	0					
ANR	1001997	Identifier	pdata		1001925	1					
ANR	1001998	Parameter	uint * psize	909:4:30174:30210	1001925	5	True				
ANR	1001999	ParameterType	uint *		1001925	0					
ANR	1002000	Identifier	psize		1001925	1					
ANR	1002001	CFGEntryNode	ENTRY		1001925		True				
ANR	1002002	CFGExitNode	EXIT		1001925		True				
ANR	1002003	Symbol	pdevc -> type		1001925						
ANR	1002004	Symbol	pdevc -> colors . pure		1001925						
ANR	1002005	Symbol	pdata		1001925						
ANR	1002006	Symbol	offset		1001925						
ANR	1002007	Symbol	gx_dc_write_color		1001925						
ANR	1002008	Symbol	pdevc		1001925						
ANR	1002009	Symbol	psize		1001925						
ANR	1002010	Symbol	psdc -> colors . pure		1001925						
ANR	1002011	Symbol	* pdevc		1001925						
ANR	1002012	Symbol	dev		1001925						
ANR	1002013	Symbol	psdc -> type		1001925						
ANR	1002014	Symbol	psdc		1001925						
ANR	1002015	Symbol	pdevc -> colors		1001925						
ANR	1002016	Symbol	* psdc		1001925						
ANR	1002017	Symbol	* psize		1001925						
ANR	1002018	Symbol	psdc -> colors		1001925						
ANR	1002019	Function	gx_dc_pure_read	949:0:31434:31942							
ANR	1002020	FunctionDef	"gx_dc_pure_read (gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem)"		1002019	0					
ANR	1002021	CompoundStatement		959:0:31837:31942	1002019	0					
ANR	1002022	ExpressionStatement	pdevc -> type = gx_dc_type_pure	960:4:31843:31872	1002019	0	True				
ANR	1002023	AssignmentExpression	pdevc -> type = gx_dc_type_pure		1002019	0		=			
ANR	1002024	PtrMemberAccess	pdevc -> type		1002019	0					
ANR	1002025	Identifier	pdevc		1002019	0					
ANR	1002026	Identifier	type		1002019	1					
ANR	1002027	Identifier	gx_dc_type_pure		1002019	1					
ANR	1002028	ReturnStatement	"return gx_dc_read_color ( & pdevc -> colors . pure , dev , pdata , size ) ;"	961:4:31878:31940	1002019	1	True				
ANR	1002029	CallExpression	"gx_dc_read_color ( & pdevc -> colors . pure , dev , pdata , size )"		1002019	0					
ANR	1002030	Callee	gx_dc_read_color		1002019	0					
ANR	1002031	Identifier	gx_dc_read_color		1002019	0					
ANR	1002032	ArgumentList	& pdevc -> colors . pure		1002019	1					
ANR	1002033	Argument	& pdevc -> colors . pure		1002019	0					
ANR	1002034	UnaryOperationExpression	& pdevc -> colors . pure		1002019	0					
ANR	1002035	UnaryOperator	&		1002019	0					
ANR	1002036	MemberAccess	pdevc -> colors . pure		1002019	1					
ANR	1002037	PtrMemberAccess	pdevc -> colors		1002019	0					
ANR	1002038	Identifier	pdevc		1002019	0					
ANR	1002039	Identifier	colors		1002019	1					
ANR	1002040	Identifier	pure		1002019	1					
ANR	1002041	Argument	dev		1002019	1					
ANR	1002042	Identifier	dev		1002019	0					
ANR	1002043	Argument	pdata		1002019	2					
ANR	1002044	Identifier	pdata		1002019	0					
ANR	1002045	Argument	size		1002019	3					
ANR	1002046	Identifier	size		1002019	0					
ANR	1002047	ReturnType	static int		1002019	1					
ANR	1002048	Identifier	gx_dc_pure_read		1002019	2					
ANR	1002049	ParameterList	"gx_device_color * pdevc , const gs_gstate * pgs , const gx_device_color * prior_devc , const gx_device * dev , int64_t offset , const byte * pdata , uint size , gs_memory_t * mem"		1002019	3					
ANR	1002050	Parameter	gx_device_color * pdevc	951:4:31466:31494	1002019	0	True				
ANR	1002051	ParameterType	gx_device_color *		1002019	0					
ANR	1002052	Identifier	pdevc		1002019	1					
ANR	1002053	Parameter	const gs_gstate * pgs	952:4:31501:31528	1002019	1	True				
ANR	1002054	ParameterType	const gs_gstate *		1002019	0					
ANR	1002055	Identifier	pgs		1002019	1					
ANR	1002056	Parameter	const gx_device_color * prior_devc	953:4:31564:31597	1002019	2	True				
ANR	1002057	ParameterType	const gx_device_color *		1002019	0					
ANR	1002058	Identifier	prior_devc		1002019	1					
ANR	1002059	Parameter	const gx_device * dev	954:4:31626:31652	1002019	3	True				
ANR	1002060	ParameterType	const gx_device *		1002019	0					
ANR	1002061	Identifier	dev		1002019	1					
ANR	1002062	Parameter	int64_t offset	955:4:31659:31677	1002019	4	True				
ANR	1002063	ParameterType	int64_t		1002019	0					
ANR	1002064	Identifier	offset		1002019	1					
ANR	1002065	Parameter	const byte * pdata	956:4:31710:31738	1002019	5	True				
ANR	1002066	ParameterType	const byte *		1002019	0					
ANR	1002067	Identifier	pdata		1002019	1					
ANR	1002068	Parameter	uint size	957:4:31745:31772	1002019	6	True				
ANR	1002069	ParameterType	uint		1002019	0					
ANR	1002070	Identifier	size		1002019	1					
ANR	1002071	Parameter	gs_memory_t * mem	958:4:31779:31805	1002019	7	True				
ANR	1002072	ParameterType	gs_memory_t *		1002019	0					
ANR	1002073	Identifier	mem		1002019	1					
ANR	1002074	CFGEntryNode	ENTRY		1002019		True				
ANR	1002075	CFGExitNode	EXIT		1002019		True				
ANR	1002076	Symbol	pdevc -> type		1002019						
ANR	1002077	Symbol	pdata		1002019						
ANR	1002078	Symbol	offset		1002019						
ANR	1002079	Symbol	pdevc		1002019						
ANR	1002080	Symbol	gx_dc_type_pure		1002019						
ANR	1002081	Symbol	* pdevc		1002019						
ANR	1002082	Symbol	dev		1002019						
ANR	1002083	Symbol	size		1002019						
ANR	1002084	Symbol	mem		1002019						
ANR	1002085	Symbol	pdevc -> colors		1002019						
ANR	1002086	Symbol	& pdevc -> colors . pure		1002019						
ANR	1002087	Symbol	gx_dc_read_color		1002019						
ANR	1002088	Symbol	pgs		1002019						
ANR	1002089	Symbol	& pdevc -> colors		1002019						
ANR	1002090	Symbol	prior_devc		1002019						
ANR	1002091	Function	gx_dc_pure_get_nonzero_comps	964:0:31945:32704							
ANR	1002092	FunctionDef	"gx_dc_pure_get_nonzero_comps (const gx_device_color * pdevc , const gx_device * dev , gx_color_index * pcomp_bits)"		1002091	0					
ANR	1002093	CompoundStatement		969:0:32088:32704	1002091	0					
ANR	1002094	IdentifierDeclStatement	int code ;	970:4:32094:32122	1002091	0	True				
ANR	1002095	IdentifierDecl	code		1002091	0					
ANR	1002096	IdentifierDeclType	int		1002091	0					
ANR	1002097	Identifier	code		1002091	1					
ANR	1002098	IdentifierDeclStatement	gx_color_value cvals [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	971:4:32128:32189	1002091	1	True				
ANR	1002099	IdentifierDecl	cvals [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1002091	0					
ANR	1002100	IdentifierDeclType	gx_color_value [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		1002091	0					
ANR	1002101	Identifier	cvals		1002091	1					
ANR	1002102	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		1002091	2					
ANR	1002103	ExpressionStatement	"code = dev_proc ( dev , decode_color ) ( ( gx_device * ) dev , pdevc -> colors . pure , cvals )"	973:4:32196:32359	1002091	2	True				
ANR	1002104	AssignmentExpression	"code = dev_proc ( dev , decode_color ) ( ( gx_device * ) dev , pdevc -> colors . pure , cvals )"		1002091	0		=			
ANR	1002105	Identifier	code		1002091	0					
ANR	1002106	CallExpression	"dev_proc ( dev , decode_color ) ( ( gx_device * ) dev , pdevc -> colors . pure , cvals )"		1002091	1					
ANR	1002107	Callee	"dev_proc ( dev , decode_color )"		1002091	0					
ANR	1002108	CallExpression	"dev_proc ( dev , decode_color )"		1002091	0					
ANR	1002109	Callee	dev_proc		1002091	0					
ANR	1002110	Identifier	dev_proc		1002091	0					
ANR	1002111	ArgumentList	dev		1002091	1					
ANR	1002112	Argument	dev		1002091	0					
ANR	1002113	Identifier	dev		1002091	0					
ANR	1002114	Argument	decode_color		1002091	1					
ANR	1002115	Identifier	decode_color		1002091	0					
ANR	1002116	ArgumentList	( gx_device * ) dev		1002091	1					
ANR	1002117	Argument	( gx_device * ) dev		1002091	0					
ANR	1002118	CastExpression	( gx_device * ) dev		1002091	0					
ANR	1002119	CastTarget	gx_device *		1002091	0					
ANR	1002120	Identifier	dev		1002091	1					
ANR	1002121	Argument	pdevc -> colors . pure		1002091	1					
ANR	1002122	MemberAccess	pdevc -> colors . pure		1002091	0					
ANR	1002123	PtrMemberAccess	pdevc -> colors		1002091	0					
ANR	1002124	Identifier	pdevc		1002091	0					
ANR	1002125	Identifier	colors		1002091	1					
ANR	1002126	Identifier	pure		1002091	1					
ANR	1002127	Argument	cvals		1002091	2					
ANR	1002128	Identifier	cvals		1002091	0					
ANR	1002129	IfStatement	if ( code >= 0 )		1002091	3					
ANR	1002130	Condition	code >= 0	976:8:32369:32377	1002091	0	True				
ANR	1002131	RelationalExpression	code >= 0		1002091	0		>=			
ANR	1002132	Identifier	code		1002091	0					
ANR	1002133	PrimaryExpression	0		1002091	1					
ANR	1002134	CompoundStatement		10:8:369:410	1002091	1					
ANR	1002135	IdentifierDeclStatement	"uchar i , ncomps = dev -> color_info . num_components ;"	977:8:32390:32448	1002091	0	True				
ANR	1002136	IdentifierDecl	i		1002091	0					
ANR	1002137	IdentifierDeclType	uchar		1002091	0					
ANR	1002138	Identifier	i		1002091	1					
ANR	1002139	IdentifierDecl	ncomps = dev -> color_info . num_components		1002091	1					
ANR	1002140	IdentifierDeclType	uchar		1002091	0					
ANR	1002141	Identifier	ncomps		1002091	1					
ANR	1002142	AssignmentExpression	ncomps = dev -> color_info . num_components		1002091	2		=			
ANR	1002143	Identifier	ncomps		1002091	0					
ANR	1002144	MemberAccess	dev -> color_info . num_components		1002091	1					
ANR	1002145	PtrMemberAccess	dev -> color_info		1002091	0					
ANR	1002146	Identifier	dev		1002091	0					
ANR	1002147	Identifier	color_info		1002091	1					
ANR	1002148	Identifier	num_components		1002091	1					
ANR	1002149	IdentifierDeclStatement	"gx_color_index mask = 0x1 , comp_bits = 0 ;"	978:8:32458:32499	1002091	1	True				
ANR	1002150	IdentifierDecl	mask = 0x1		1002091	0					
ANR	1002151	IdentifierDeclType	gx_color_index		1002091	0					
ANR	1002152	Identifier	mask		1002091	1					
ANR	1002153	AssignmentExpression	mask = 0x1		1002091	2		=			
ANR	1002154	Identifier	mask		1002091	0					
ANR	1002155	PrimaryExpression	0x1		1002091	1					
ANR	1002156	IdentifierDecl	comp_bits = 0		1002091	1					
ANR	1002157	IdentifierDeclType	gx_color_index		1002091	0					
ANR	1002158	Identifier	comp_bits		1002091	1					
ANR	1002159	AssignmentExpression	comp_bits = 0		1002091	2		=			
ANR	1002160	Identifier	comp_bits		1002091	0					
ANR	1002161	PrimaryExpression	0		1002091	1					
ANR	1002162	ForStatement	"for ( i = 0 ; i < ncomps ; i ++ , mask <<= 1 )"		1002091	2					
ANR	1002163	ForInit	i = 0 ;	980:13:32515:32520	1002091	0	True				
ANR	1002164	AssignmentExpression	i = 0		1002091	0		=			
ANR	1002165	Identifier	i		1002091	0					
ANR	1002166	PrimaryExpression	0		1002091	1					
ANR	1002167	Condition	i < ncomps	980:20:32522:32531	1002091	1	True				
ANR	1002168	RelationalExpression	i < ncomps		1002091	0		<			
ANR	1002169	Identifier	i		1002091	0					
ANR	1002170	Identifier	ncomps		1002091	1					
ANR	1002171	Expression	"i ++ , mask <<= 1"	980:32:32534:32548	1002091	2	True				
ANR	1002172	PostIncDecOperationExpression	i ++		1002091	0					
ANR	1002173	Identifier	i		1002091	0					
ANR	1002174	IncDec	++		1002091	1					
ANR	1002175	AssignmentExpression	mask <<= 1		1002091	1		<<=			
ANR	1002176	Identifier	mask		1002091	0					
ANR	1002177	PrimaryExpression	1		1002091	1					
ANR	1002178	CompoundStatement		12:49:462:462	1002091	3					
ANR	1002179	IfStatement	if ( cvals [ i ] != 0 )		1002091	0					
ANR	1002180	Condition	cvals [ i ] != 0	981:16:32569:32581	1002091	0	True				
ANR	1002181	EqualityExpression	cvals [ i ] != 0		1002091	0		!=			
ANR	1002182	ArrayIndexing	cvals [ i ]		1002091	0					
ANR	1002183	Identifier	cvals		1002091	0					
ANR	1002184	Identifier	i		1002091	1					
ANR	1002185	PrimaryExpression	0		1002091	1					
ANR	1002186	ExpressionStatement	comp_bits |= mask	982:16:32600:32617	1002091	1	True				
ANR	1002187	AssignmentExpression	comp_bits |= mask		1002091	0		|=			
ANR	1002188	Identifier	comp_bits		1002091	0					
ANR	1002189	Identifier	mask		1002091	1					
ANR	1002190	ExpressionStatement	* pcomp_bits = comp_bits	984:8:32637:32660	1002091	3	True				
ANR	1002191	AssignmentExpression	* pcomp_bits = comp_bits		1002091	0		=			
ANR	1002192	UnaryOperationExpression	* pcomp_bits		1002091	0					
ANR	1002193	UnaryOperator	*		1002091	0					
ANR	1002194	Identifier	pcomp_bits		1002091	1					
ANR	1002195	Identifier	comp_bits		1002091	1					
ANR	1002196	ExpressionStatement	code = 0	985:8:32670:32678	1002091	4	True				
ANR	1002197	AssignmentExpression	code = 0		1002091	0		=			
ANR	1002198	Identifier	code		1002091	0					
ANR	1002199	PrimaryExpression	0		1002091	1					
ANR	1002200	ReturnStatement	return code ;	988:4:32691:32702	1002091	4	True				
ANR	1002201	Identifier	code		1002091	0					
ANR	1002202	ReturnType	int		1002091	1					
ANR	1002203	Identifier	gx_dc_pure_get_nonzero_comps		1002091	2					
ANR	1002204	ParameterList	"const gx_device_color * pdevc , const gx_device * dev , gx_color_index * pcomp_bits"		1002091	3					
ANR	1002205	Parameter	const gx_device_color * pdevc	966:4:31983:32011	1002091	0	True				
ANR	1002206	ParameterType	const gx_device_color *		1002091	0					
ANR	1002207	Identifier	pdevc		1002091	1					
ANR	1002208	Parameter	const gx_device * dev	967:4:32018:32044	1002091	1	True				
ANR	1002209	ParameterType	const gx_device *		1002091	0					
ANR	1002210	Identifier	dev		1002091	1					
ANR	1002211	Parameter	gx_color_index * pcomp_bits	968:4:32051:32084	1002091	2	True				
ANR	1002212	ParameterType	gx_color_index *		1002091	0					
ANR	1002213	Identifier	pcomp_bits		1002091	1					
ANR	1002214	CFGEntryNode	ENTRY		1002091		True				
ANR	1002215	CFGExitNode	EXIT		1002091		True				
ANR	1002216	Symbol	* dev		1002091						
ANR	1002217	Symbol	pdevc -> colors . pure		1002091						
ANR	1002218	Symbol	code		1002091						
ANR	1002219	Symbol	dev -> color_info . num_components		1002091						
ANR	1002220	Symbol	pdevc		1002091						
ANR	1002221	Symbol	i		1002091						
ANR	1002222	Symbol	ncomps		1002091						
ANR	1002223	Symbol	dev -> color_info		1002091						
ANR	1002224	Symbol	pcomp_bits		1002091						
ANR	1002225	Symbol	* pdevc		1002091						
ANR	1002226	Symbol	decode_color		1002091						
ANR	1002227	Symbol	* i		1002091						
ANR	1002228	Symbol	dev		1002091						
ANR	1002229	Symbol	* cvals		1002091						
ANR	1002230	Symbol	dev_proc		1002091						
ANR	1002231	Symbol	pdevc -> colors		1002091						
ANR	1002232	Symbol	* pcomp_bits		1002091						
ANR	1002233	Symbol	comp_bits		1002091						
ANR	1002234	Symbol	cvals		1002091						
ANR	1002235	Symbol	mask		1002091						
ANR	1002236	Function	gx_complete_halftone	993:0:32758:33206							
ANR	1002237	FunctionDef	"gx_complete_halftone (gx_device_color * pdevc , int num_comps , gx_device_halftone * pdht)"		1002236	0					
ANR	1002238	CompoundStatement		995:0:32849:33206	1002236	0					
ANR	1002239	IdentifierDeclStatement	"int i , mask = 0 ;"	996:4:32855:32870	1002236	0	True				
ANR	1002240	IdentifierDecl	i		1002236	0					
ANR	1002241	IdentifierDeclType	int		1002236	0					
ANR	1002242	Identifier	i		1002236	1					
ANR	1002243	IdentifierDecl	mask = 0		1002236	1					
ANR	1002244	IdentifierDeclType	int		1002236	0					
ANR	1002245	Identifier	mask		1002236	1					
ANR	1002246	AssignmentExpression	mask = 0		1002236	2		=			
ANR	1002247	Identifier	mask		1002236	0					
ANR	1002248	PrimaryExpression	0		1002236	1					
ANR	1002249	ExpressionStatement	pdevc -> type = gx_dc_type_ht_colored	998:4:32877:32912	1002236	1	True				
ANR	1002250	AssignmentExpression	pdevc -> type = gx_dc_type_ht_colored		1002236	0		=			
ANR	1002251	PtrMemberAccess	pdevc -> type		1002236	0					
ANR	1002252	Identifier	pdevc		1002236	0					
ANR	1002253	Identifier	type		1002236	1					
ANR	1002254	Identifier	gx_dc_type_ht_colored		1002236	1					
ANR	1002255	ExpressionStatement	pdevc -> colors . colored . c_ht = pdht	999:4:32918:32951	1002236	2	True				
ANR	1002256	AssignmentExpression	pdevc -> colors . colored . c_ht = pdht		1002236	0		=			
ANR	1002257	MemberAccess	pdevc -> colors . colored . c_ht		1002236	0					
ANR	1002258	MemberAccess	pdevc -> colors . colored		1002236	0					
ANR	1002259	PtrMemberAccess	pdevc -> colors		1002236	0					
ANR	1002260	Identifier	pdevc		1002236	0					
ANR	1002261	Identifier	colors		1002236	1					
ANR	1002262	Identifier	colored		1002236	1					
ANR	1002263	Identifier	c_ht		1002236	1					
ANR	1002264	Identifier	pdht		1002236	1					
ANR	1002265	ExpressionStatement	pdevc -> colors . colored . num_components = num_comps	1000:4:32957:33005	1002236	3	True				
ANR	1002266	AssignmentExpression	pdevc -> colors . colored . num_components = num_comps		1002236	0		=			
ANR	1002267	MemberAccess	pdevc -> colors . colored . num_components		1002236	0					
ANR	1002268	MemberAccess	pdevc -> colors . colored		1002236	0					
ANR	1002269	PtrMemberAccess	pdevc -> colors		1002236	0					
ANR	1002270	Identifier	pdevc		1002236	0					
ANR	1002271	Identifier	colors		1002236	1					
ANR	1002272	Identifier	colored		1002236	1					
ANR	1002273	Identifier	num_components		1002236	1					
ANR	1002274	Identifier	num_comps		1002236	1					
ANR	1002275	ExpressionStatement	pdevc -> colors . colored . alpha = max_ushort	1001:4:33011:33051	1002236	4	True				
ANR	1002276	AssignmentExpression	pdevc -> colors . colored . alpha = max_ushort		1002236	0		=			
ANR	1002277	MemberAccess	pdevc -> colors . colored . alpha		1002236	0					
ANR	1002278	MemberAccess	pdevc -> colors . colored		1002236	0					
ANR	1002279	PtrMemberAccess	pdevc -> colors		1002236	0					
ANR	1002280	Identifier	pdevc		1002236	0					
ANR	1002281	Identifier	colors		1002236	1					
ANR	1002282	Identifier	colored		1002236	1					
ANR	1002283	Identifier	alpha		1002236	1					
ANR	1002284	Identifier	max_ushort		1002236	1					
ANR	1002285	ForStatement	for ( i = 0 ; i < num_comps ; i ++ )		1002236	5					
ANR	1002286	ForInit	i = 0 ;	1002:9:33062:33067	1002236	0	True				
ANR	1002287	AssignmentExpression	i = 0		1002236	0		=			
ANR	1002288	Identifier	i		1002236	0					
ANR	1002289	PrimaryExpression	0		1002236	1					
ANR	1002290	Condition	i < num_comps	1002:16:33069:33081	1002236	1	True				
ANR	1002291	RelationalExpression	i < num_comps		1002236	0		<			
ANR	1002292	Identifier	i		1002236	0					
ANR	1002293	Identifier	num_comps		1002236	1					
ANR	1002294	PostIncDecOperationExpression	i ++	1002:31:33084:33086	1002236	2	True				
ANR	1002295	Identifier	i		1002236	0					
ANR	1002296	IncDec	++		1002236	1					
ANR	1002297	ExpressionStatement	mask |= ( ( pdevc -> colors . colored . c_level [ i ] != 0 ? 1 : 0 ) << i )	1003:8:33097:33159	1002236	3	True				
ANR	1002298	AssignmentExpression	mask |= ( ( pdevc -> colors . colored . c_level [ i ] != 0 ? 1 : 0 ) << i )		1002236	0		|=			
ANR	1002299	Identifier	mask		1002236	0					
ANR	1002300	ShiftExpression	( pdevc -> colors . colored . c_level [ i ] != 0 ? 1 : 0 ) << i		1002236	1		<<			
ANR	1002301	ConditionalExpression	pdevc -> colors . colored . c_level [ i ] != 0 ? 1 : 0		1002236	0					
ANR	1002302	Condition	pdevc -> colors . colored . c_level [ i ] != 0		1002236	0					
ANR	1002303	EqualityExpression	pdevc -> colors . colored . c_level [ i ] != 0		1002236	0		!=			
ANR	1002304	ArrayIndexing	pdevc -> colors . colored . c_level [ i ]		1002236	0					
ANR	1002305	MemberAccess	pdevc -> colors . colored . c_level		1002236	0					
ANR	1002306	MemberAccess	pdevc -> colors . colored		1002236	0					
ANR	1002307	PtrMemberAccess	pdevc -> colors		1002236	0					
ANR	1002308	Identifier	pdevc		1002236	0					
ANR	1002309	Identifier	colors		1002236	1					
ANR	1002310	Identifier	colored		1002236	1					
ANR	1002311	Identifier	c_level		1002236	1					
ANR	1002312	Identifier	i		1002236	1					
ANR	1002313	PrimaryExpression	0		1002236	1					
ANR	1002314	PrimaryExpression	1		1002236	1					
ANR	1002315	PrimaryExpression	0		1002236	2					
ANR	1002316	Identifier	i		1002236	1					
ANR	1002317	ExpressionStatement	pdevc -> colors . colored . plane_mask = mask	1004:4:33165:33204	1002236	6	True				
ANR	1002318	AssignmentExpression	pdevc -> colors . colored . plane_mask = mask		1002236	0		=			
ANR	1002319	MemberAccess	pdevc -> colors . colored . plane_mask		1002236	0					
ANR	1002320	MemberAccess	pdevc -> colors . colored		1002236	0					
ANR	1002321	PtrMemberAccess	pdevc -> colors		1002236	0					
ANR	1002322	Identifier	pdevc		1002236	0					
ANR	1002323	Identifier	colors		1002236	1					
ANR	1002324	Identifier	colored		1002236	1					
ANR	1002325	Identifier	plane_mask		1002236	1					
ANR	1002326	Identifier	mask		1002236	1					
ANR	1002327	ReturnType	void		1002236	1					
ANR	1002328	Identifier	gx_complete_halftone		1002236	2					
ANR	1002329	ParameterList	"gx_device_color * pdevc , int num_comps , gx_device_halftone * pdht"		1002236	3					
ANR	1002330	Parameter	gx_device_color * pdevc	994:21:32784:32805	1002236	0	True				
ANR	1002331	ParameterType	gx_device_color *		1002236	0					
ANR	1002332	Identifier	pdevc		1002236	1					
ANR	1002333	Parameter	int num_comps	994:45:32808:32820	1002236	1	True				
ANR	1002334	ParameterType	int		1002236	0					
ANR	1002335	Identifier	num_comps		1002236	1					
ANR	1002336	Parameter	gx_device_halftone * pdht	994:60:32823:32846	1002236	2	True				
ANR	1002337	ParameterType	gx_device_halftone *		1002236	0					
ANR	1002338	Identifier	pdht		1002236	1					
ANR	1002339	CFGEntryNode	ENTRY		1002236		True				
ANR	1002340	CFGExitNode	EXIT		1002236		True				
ANR	1002341	Symbol	pdevc -> type		1002236						
ANR	1002342	Symbol	* pdevc -> colors		1002236						
ANR	1002343	Symbol	pdevc		1002236						
ANR	1002344	Symbol	pdevc -> colors . colored . num_components		1002236						
ANR	1002345	Symbol	i		1002236						
ANR	1002346	Symbol	pdevc -> colors . colored . plane_mask		1002236						
ANR	1002347	Symbol	* * pdevc		1002236						
ANR	1002348	Symbol	pdevc -> colors . colored . alpha		1002236						
ANR	1002349	Symbol	pdevc -> colors . colored . c_ht		1002236						
ANR	1002350	Symbol	* pdevc -> colors . colored . c_level		1002236						
ANR	1002351	Symbol	* pdevc		1002236						
ANR	1002352	Symbol	* i		1002236						
ANR	1002353	Symbol	pdht		1002236						
ANR	1002354	Symbol	num_comps		1002236						
ANR	1002355	Symbol	pdevc -> colors		1002236						
ANR	1002356	Symbol	pdevc -> colors . colored . c_level		1002236						
ANR	1002357	Symbol	pdevc -> colors . colored		1002236						
ANR	1002358	Symbol	gx_dc_type_ht_colored		1002236						
ANR	1002359	Symbol	* pdevc -> colors . colored		1002236						
ANR	1002360	Symbol	max_ushort		1002236						
ANR	1002361	Symbol	mask		1002236						
ANR	1002362	Function	gx_dc_default_fill_masked	1010:0:33322:35739							
ANR	1002363	FunctionDef	"gx_dc_default_fill_masked (const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert)"		1002362	0					
ANR	1002364	CompoundStatement		1014:0:33556:35739	1002362	0					
ANR	1002365	IdentifierDeclStatement	int lbit = data_x & 7 ;	1015:4:33562:33583	1002362	0	True				
ANR	1002366	IdentifierDecl	lbit = data_x & 7		1002362	0					
ANR	1002367	IdentifierDeclType	int		1002362	0					
ANR	1002368	Identifier	lbit		1002362	1					
ANR	1002369	AssignmentExpression	lbit = data_x & 7		1002362	2		=			
ANR	1002370	Identifier	lbit		1002362	0					
ANR	1002371	BitAndExpression	data_x & 7		1002362	1		&			
ANR	1002372	Identifier	data_x		1002362	0					
ANR	1002373	PrimaryExpression	7		1002362	1					
ANR	1002374	IdentifierDeclStatement	const byte * row = data + ( data_x >> 3 ) ;	1016:4:33589:33627	1002362	1	True				
ANR	1002375	IdentifierDecl	* row = data + ( data_x >> 3 )		1002362	0					
ANR	1002376	IdentifierDeclType	const byte *		1002362	0					
ANR	1002377	Identifier	row		1002362	1					
ANR	1002378	AssignmentExpression	* row = data + ( data_x >> 3 )		1002362	2		=			
ANR	1002379	Identifier	row		1002362	0					
ANR	1002380	AdditiveExpression	data + ( data_x >> 3 )		1002362	1		+			
ANR	1002381	Identifier	data		1002362	0					
ANR	1002382	ShiftExpression	data_x >> 3		1002362	1		>>			
ANR	1002383	Identifier	data_x		1002362	0					
ANR	1002384	PrimaryExpression	3		1002362	1					
ANR	1002385	IdentifierDeclStatement	uint one = ( invert ? 0 : 0xff ) ;	1017:4:33633:33663	1002362	2	True				
ANR	1002386	IdentifierDecl	one = ( invert ? 0 : 0xff )		1002362	0					
ANR	1002387	IdentifierDeclType	uint		1002362	0					
ANR	1002388	Identifier	one		1002362	1					
ANR	1002389	AssignmentExpression	one = ( invert ? 0 : 0xff )		1002362	2		=			
ANR	1002390	Identifier	one		1002362	0					
ANR	1002391	ConditionalExpression	invert ? 0 : 0xff		1002362	1					
ANR	1002392	Condition	invert		1002362	0					
ANR	1002393	Identifier	invert		1002362	0					
ANR	1002394	PrimaryExpression	0		1002362	1					
ANR	1002395	PrimaryExpression	0xff		1002362	2					
ANR	1002396	IdentifierDeclStatement	uint zero = one ^ 0xff ;	1018:4:33669:33691	1002362	3	True				
ANR	1002397	IdentifierDecl	zero = one ^ 0xff		1002362	0					
ANR	1002398	IdentifierDeclType	uint		1002362	0					
ANR	1002399	Identifier	zero		1002362	1					
ANR	1002400	AssignmentExpression	zero = one ^ 0xff		1002362	2		=			
ANR	1002401	Identifier	zero		1002362	0					
ANR	1002402	ExclusiveOrExpression	one ^ 0xff		1002362	1		^			
ANR	1002403	Identifier	one		1002362	0					
ANR	1002404	PrimaryExpression	0xff		1002362	1					
ANR	1002405	IdentifierDeclStatement	int iy ;	1019:4:33697:33703	1002362	4	True				
ANR	1002406	IdentifierDecl	iy		1002362	0					
ANR	1002407	IdentifierDeclType	int		1002362	0					
ANR	1002408	Identifier	iy		1002362	1					
ANR	1002409	ForStatement	"for ( iy = 0 ; iy < h ; ++ iy , row += raster )"		1002362	5					
ANR	1002410	ForInit	iy = 0 ;	1021:9:33715:33721	1002362	0	True				
ANR	1002411	AssignmentExpression	iy = 0		1002362	0		=			
ANR	1002412	Identifier	iy		1002362	0					
ANR	1002413	PrimaryExpression	0		1002362	1					
ANR	1002414	Condition	iy < h	1021:17:33723:33728	1002362	1	True				
ANR	1002415	RelationalExpression	iy < h		1002362	0		<			
ANR	1002416	Identifier	iy		1002362	0					
ANR	1002417	Identifier	h		1002362	1					
ANR	1002418	Expression	"++ iy , row += raster"	1021:25:33731:33749	1002362	2	True				
ANR	1002419	UnaryExpression	++ iy		1002362	0					
ANR	1002420	IncDec	++		1002362	0					
ANR	1002421	Identifier	iy		1002362	1					
ANR	1002422	AssignmentExpression	row += raster		1002362	1		+=			
ANR	1002423	Identifier	row		1002362	0					
ANR	1002424	Identifier	raster		1002362	1					
ANR	1002425	CompoundStatement		12:8:280:286	1002362	3					
ANR	1002426	IdentifierDeclStatement	const byte * p = row ;	1022:8:33762:33781	1002362	0	True				
ANR	1002427	IdentifierDecl	* p = row		1002362	0					
ANR	1002428	IdentifierDeclType	const byte *		1002362	0					
ANR	1002429	Identifier	p		1002362	1					
ANR	1002430	AssignmentExpression	* p = row		1002362	2		=			
ANR	1002431	Identifier	row		1002362	0					
ANR	1002432	Identifier	row		1002362	1					
ANR	1002433	IdentifierDeclStatement	int bit = lbit ;	1023:8:33791:33805	1002362	1	True				
ANR	1002434	IdentifierDecl	bit = lbit		1002362	0					
ANR	1002435	IdentifierDeclType	int		1002362	0					
ANR	1002436	Identifier	bit		1002362	1					
ANR	1002437	AssignmentExpression	bit = lbit		1002362	2		=			
ANR	1002438	Identifier	lbit		1002362	0					
ANR	1002439	Identifier	lbit		1002362	1					
ANR	1002440	IdentifierDeclStatement	int left = w ;	1024:8:33815:33827	1002362	2	True				
ANR	1002441	IdentifierDecl	left = w		1002362	0					
ANR	1002442	IdentifierDeclType	int		1002362	0					
ANR	1002443	Identifier	left		1002362	1					
ANR	1002444	AssignmentExpression	left = w		1002362	2		=			
ANR	1002445	Identifier	w		1002362	0					
ANR	1002446	Identifier	w		1002362	1					
ANR	1002447	IdentifierDeclStatement	int l0 ;	1025:8:33837:33843	1002362	3	True				
ANR	1002448	IdentifierDecl	l0		1002362	0					
ANR	1002449	IdentifierDeclType	int		1002362	0					
ANR	1002450	Identifier	l0		1002362	1					
ANR	1002451	WhileStatement	while ( left )		1002362	4					
ANR	1002452	Condition	left	1027:15:33861:33864	1002362	0	True				
ANR	1002453	Identifier	left		1002362	0					
ANR	1002454	CompoundStatement		15:12:324:337	1002362	1					
ANR	1002455	IdentifierDeclStatement	"int run , code ;"	1028:12:33881:33894	1002362	0	True				
ANR	1002456	IdentifierDecl	run		1002362	0					
ANR	1002457	IdentifierDeclType	int		1002362	0					
ANR	1002458	Identifier	run		1002362	1					
ANR	1002459	IdentifierDecl	code		1002362	1					
ANR	1002460	IdentifierDeclType	int		1002362	0					
ANR	1002461	Identifier	code		1002362	1					
ANR	1002462	ExpressionStatement	run = byte_bit_run_length [ bit ] [ * p ^ one ]	1031:12:33948:33988	1002362	1	True				
ANR	1002463	AssignmentExpression	run = byte_bit_run_length [ bit ] [ * p ^ one ]		1002362	0		=			
ANR	1002464	Identifier	run		1002362	0					
ANR	1002465	ArrayIndexing	byte_bit_run_length [ bit ] [ * p ^ one ]		1002362	1					
ANR	1002466	ArrayIndexing	byte_bit_run_length [ bit ]		1002362	0					
ANR	1002467	Identifier	byte_bit_run_length		1002362	0					
ANR	1002468	Identifier	bit		1002362	1					
ANR	1002469	ExclusiveOrExpression	* p ^ one		1002362	1		^			
ANR	1002470	UnaryOperationExpression	* p		1002362	0					
ANR	1002471	UnaryOperator	*		1002362	0					
ANR	1002472	Identifier	p		1002362	1					
ANR	1002473	Identifier	one		1002362	1					
ANR	1002474	IfStatement	if ( run )		1002362	2					
ANR	1002475	Condition	run	1032:16:34006:34008	1002362	0	True				
ANR	1002476	Identifier	run		1002362	0					
ANR	1002477	CompoundStatement		19:21:454:454	1002362	1					
ANR	1002478	IfStatement	if ( run < 8 )		1002362	0					
ANR	1002479	Condition	run < 8	1033:20:34033:34039	1002362	0	True				
ANR	1002480	RelationalExpression	run < 8		1002362	0		<			
ANR	1002481	Identifier	run		1002362	0					
ANR	1002482	PrimaryExpression	8		1002362	1					
ANR	1002483	CompoundStatement		20:29:485:485	1002362	1					
ANR	1002484	IfStatement	if ( run >= left )		1002362	0					
ANR	1002485	Condition	run >= left	1034:24:34068:34078	1002362	0	True				
ANR	1002486	RelationalExpression	run >= left		1002362	0		>=			
ANR	1002487	Identifier	run		1002362	0					
ANR	1002488	Identifier	left		1002362	1					
ANR	1002489	BreakStatement	break ;	1035:24:34105:34110	1002362	1	True				
ANR	1002490	ExpressionStatement	"bit += run , left -= run"	1036:20:34164:34187	1002362	1	True				
ANR	1002491	Expression	"bit += run , left -= run"		1002362	0					
ANR	1002492	AssignmentExpression	bit += run		1002362	0		+=			
ANR	1002493	Identifier	bit		1002362	0					
ANR	1002494	Identifier	run		1002362	1					
ANR	1002495	AssignmentExpression	left -= run		1002362	1		-=			
ANR	1002496	Identifier	left		1002362	0					
ANR	1002497	Identifier	run		1002362	1					
ANR	1002498	ElseStatement	else		1002362	0					
ANR	1002499	IfStatement	if ( ( run -= 8 ) >= left )		1002362	0					
ANR	1002500	Condition	( run -= 8 ) >= left	1037:27:34216:34233	1002362	0	True				
ANR	1002501	RelationalExpression	( run -= 8 ) >= left		1002362	0		>=			
ANR	1002502	AssignmentExpression	run -= 8		1002362	0		-=			
ANR	1002503	Identifier	run		1002362	0					
ANR	1002504	PrimaryExpression	8		1002362	1					
ANR	1002505	Identifier	left		1002362	1					
ANR	1002506	BreakStatement	break ;	1038:20:34256:34261	1002362	1	True				
ANR	1002507	ElseStatement	else		1002362	0					
ANR	1002508	CompoundStatement		26:21:759:759	1002362	0					
ANR	1002509	ExpressionStatement	left -= run	1040:20:34338:34349	1002362	0	True				
ANR	1002510	AssignmentExpression	left -= run		1002362	0		-=			
ANR	1002511	Identifier	left		1002362	0					
ANR	1002512	Identifier	run		1002362	1					
ANR	1002513	ExpressionStatement	++ p	1041:20:34371:34374	1002362	1	True				
ANR	1002514	UnaryExpression	++ p		1002362	0					
ANR	1002515	IncDec	++		1002362	0					
ANR	1002516	Identifier	p		1002362	1					
ANR	1002517	WhileStatement	while ( left > 8 && * p == zero )		1002362	2					
ANR	1002518	Condition	left > 8 && * p == zero	1042:27:34403:34424	1002362	0	True				
ANR	1002519	AndExpression	left > 8 && * p == zero		1002362	0		&&			
ANR	1002520	RelationalExpression	left > 8		1002362	0		>			
ANR	1002521	Identifier	left		1002362	0					
ANR	1002522	PrimaryExpression	8		1002362	1					
ANR	1002523	EqualityExpression	* p == zero		1002362	1		==			
ANR	1002524	UnaryOperationExpression	* p		1002362	0					
ANR	1002525	UnaryOperator	*		1002362	0					
ANR	1002526	Identifier	p		1002362	1					
ANR	1002527	Identifier	zero		1002362	1					
ANR	1002528	ExpressionStatement	"left -= 8 , ++ p"	1043:24:34451:34465	1002362	1	True				
ANR	1002529	Expression	"left -= 8 , ++ p"		1002362	0					
ANR	1002530	AssignmentExpression	left -= 8		1002362	0		-=			
ANR	1002531	Identifier	left		1002362	0					
ANR	1002532	PrimaryExpression	8		1002362	1					
ANR	1002533	UnaryExpression	++ p		1002362	1					
ANR	1002534	IncDec	++		1002362	0					
ANR	1002535	Identifier	p		1002362	1					
ANR	1002536	ExpressionStatement	run = byte_bit_run_length_0 [ * p ^ one ]	1044:20:34487:34524	1002362	3	True				
ANR	1002537	AssignmentExpression	run = byte_bit_run_length_0 [ * p ^ one ]		1002362	0		=			
ANR	1002538	Identifier	run		1002362	0					
ANR	1002539	ArrayIndexing	byte_bit_run_length_0 [ * p ^ one ]		1002362	1					
ANR	1002540	Identifier	byte_bit_run_length_0		1002362	0					
ANR	1002541	ExclusiveOrExpression	* p ^ one		1002362	1		^			
ANR	1002542	UnaryOperationExpression	* p		1002362	0					
ANR	1002543	UnaryOperator	*		1002362	0					
ANR	1002544	Identifier	p		1002362	1					
ANR	1002545	Identifier	one		1002362	1					
ANR	1002546	IfStatement	if ( run >= left )		1002362	4					
ANR	1002547	Condition	run >= left	1045:24:34550:34560	1002362	0	True				
ANR	1002548	RelationalExpression	run >= left		1002362	0		>=			
ANR	1002549	Identifier	run		1002362	0					
ANR	1002550	Identifier	left		1002362	1					
ANR	1002551	BreakStatement	break ;	1046:24:34623:34628	1002362	1	True				
ANR	1002552	ElseStatement	else		1002362	0					
ANR	1002553	ExpressionStatement	"bit = run & 7 , left -= run"	1048:24:34711:34737	1002362	0	True				
ANR	1002554	Expression	"bit = run & 7 , left -= run"		1002362	0					
ANR	1002555	AssignmentExpression	bit = run & 7		1002362	0		=			
ANR	1002556	Identifier	bit		1002362	0					
ANR	1002557	BitAndExpression	run & 7		1002362	1		&			
ANR	1002558	Identifier	run		1002362	0					
ANR	1002559	PrimaryExpression	7		1002362	1					
ANR	1002560	AssignmentExpression	left -= run		1002362	1		-=			
ANR	1002561	Identifier	left		1002362	0					
ANR	1002562	Identifier	run		1002362	1					
ANR	1002563	ExpressionStatement	l0 = left	1051:12:34783:34792	1002362	3	True				
ANR	1002564	AssignmentExpression	l0 = left		1002362	0		=			
ANR	1002565	Identifier	l0		1002362	0					
ANR	1002566	Identifier	left		1002362	1					
ANR	1002567	ExpressionStatement	run = byte_bit_run_length [ bit ] [ * p ^ zero ]	1053:12:34863:34904	1002362	4	True				
ANR	1002568	AssignmentExpression	run = byte_bit_run_length [ bit ] [ * p ^ zero ]		1002362	0		=			
ANR	1002569	Identifier	run		1002362	0					
ANR	1002570	ArrayIndexing	byte_bit_run_length [ bit ] [ * p ^ zero ]		1002362	1					
ANR	1002571	ArrayIndexing	byte_bit_run_length [ bit ]		1002362	0					
ANR	1002572	Identifier	byte_bit_run_length		1002362	0					
ANR	1002573	Identifier	bit		1002362	1					
ANR	1002574	ExclusiveOrExpression	* p ^ zero		1002362	1		^			
ANR	1002575	UnaryOperationExpression	* p		1002362	0					
ANR	1002576	UnaryOperator	*		1002362	0					
ANR	1002577	Identifier	p		1002362	1					
ANR	1002578	Identifier	zero		1002362	1					
ANR	1002579	IfStatement	if ( run < 8 )		1002362	5					
ANR	1002580	Condition	run < 8	1054:16:34922:34928	1002362	0	True				
ANR	1002581	RelationalExpression	run < 8		1002362	0		<			
ANR	1002582	Identifier	run		1002362	0					
ANR	1002583	PrimaryExpression	8		1002362	1					
ANR	1002584	CompoundStatement		41:25:1374:1374	1002362	1					
ANR	1002585	IfStatement	if ( run >= left )		1002362	0					
ANR	1002586	Condition	run >= left	1055:20:34953:34963	1002362	0	True				
ANR	1002587	RelationalExpression	run >= left		1002362	0		>=			
ANR	1002588	Identifier	run		1002362	0					
ANR	1002589	Identifier	left		1002362	1					
ANR	1002590	ExpressionStatement	left = 0	1056:20:34986:34994	1002362	1	True				
ANR	1002591	AssignmentExpression	left = 0		1002362	0		=			
ANR	1002592	Identifier	left		1002362	0					
ANR	1002593	PrimaryExpression	0		1002362	1					
ANR	1002594	ElseStatement	else		1002362	0					
ANR	1002595	ExpressionStatement	"bit += run , left -= run"	1058:20:35037:35060	1002362	0	True				
ANR	1002596	Expression	"bit += run , left -= run"		1002362	0					
ANR	1002597	AssignmentExpression	bit += run		1002362	0		+=			
ANR	1002598	Identifier	bit		1002362	0					
ANR	1002599	Identifier	run		1002362	1					
ANR	1002600	AssignmentExpression	left -= run		1002362	1		-=			
ANR	1002601	Identifier	left		1002362	0					
ANR	1002602	Identifier	run		1002362	1					
ANR	1002603	ElseStatement	else		1002362	0					
ANR	1002604	IfStatement	if ( ( run -= 8 ) >= left )		1002362	0					
ANR	1002605	Condition	( run -= 8 ) >= left	1059:23:35085:35102	1002362	0	True				
ANR	1002606	RelationalExpression	( run -= 8 ) >= left		1002362	0		>=			
ANR	1002607	AssignmentExpression	run -= 8		1002362	0		-=			
ANR	1002608	Identifier	run		1002362	0					
ANR	1002609	PrimaryExpression	8		1002362	1					
ANR	1002610	Identifier	left		1002362	1					
ANR	1002611	ExpressionStatement	left = 0	1060:16:35121:35129	1002362	1	True				
ANR	1002612	AssignmentExpression	left = 0		1002362	0		=			
ANR	1002613	Identifier	left		1002362	0					
ANR	1002614	PrimaryExpression	0		1002362	1					
ANR	1002615	ElseStatement	else		1002362	0					
ANR	1002616	CompoundStatement		48:17:1591:1591	1002362	0					
ANR	1002617	ExpressionStatement	left -= run	1062:16:35166:35177	1002362	0	True				
ANR	1002618	AssignmentExpression	left -= run		1002362	0		-=			
ANR	1002619	Identifier	left		1002362	0					
ANR	1002620	Identifier	run		1002362	1					
ANR	1002621	ExpressionStatement	++ p	1063:16:35195:35198	1002362	1	True				
ANR	1002622	UnaryExpression	++ p		1002362	0					
ANR	1002623	IncDec	++		1002362	0					
ANR	1002624	Identifier	p		1002362	1					
ANR	1002625	WhileStatement	while ( left > 8 && * p == one )		1002362	2					
ANR	1002626	Condition	left > 8 && * p == one	1064:23:35223:35243	1002362	0	True				
ANR	1002627	AndExpression	left > 8 && * p == one		1002362	0		&&			
ANR	1002628	RelationalExpression	left > 8		1002362	0		>			
ANR	1002629	Identifier	left		1002362	0					
ANR	1002630	PrimaryExpression	8		1002362	1					
ANR	1002631	EqualityExpression	* p == one		1002362	1		==			
ANR	1002632	UnaryOperationExpression	* p		1002362	0					
ANR	1002633	UnaryOperator	*		1002362	0					
ANR	1002634	Identifier	p		1002362	1					
ANR	1002635	Identifier	one		1002362	1					
ANR	1002636	ExpressionStatement	"left -= 8 , ++ p"	1065:20:35266:35280	1002362	1	True				
ANR	1002637	Expression	"left -= 8 , ++ p"		1002362	0					
ANR	1002638	AssignmentExpression	left -= 8		1002362	0		-=			
ANR	1002639	Identifier	left		1002362	0					
ANR	1002640	PrimaryExpression	8		1002362	1					
ANR	1002641	UnaryExpression	++ p		1002362	1					
ANR	1002642	IncDec	++		1002362	0					
ANR	1002643	Identifier	p		1002362	1					
ANR	1002644	ExpressionStatement	run = byte_bit_run_length_0 [ * p ^ zero ]	1066:16:35298:35336	1002362	3	True				
ANR	1002645	AssignmentExpression	run = byte_bit_run_length_0 [ * p ^ zero ]		1002362	0		=			
ANR	1002646	Identifier	run		1002362	0					
ANR	1002647	ArrayIndexing	byte_bit_run_length_0 [ * p ^ zero ]		1002362	1					
ANR	1002648	Identifier	byte_bit_run_length_0		1002362	0					
ANR	1002649	ExclusiveOrExpression	* p ^ zero		1002362	1		^			
ANR	1002650	UnaryOperationExpression	* p		1002362	0					
ANR	1002651	UnaryOperator	*		1002362	0					
ANR	1002652	Identifier	p		1002362	1					
ANR	1002653	Identifier	zero		1002362	1					
ANR	1002654	IfStatement	if ( run >= left )		1002362	4					
ANR	1002655	Condition	run >= left	1067:20:35358:35368	1002362	0	True				
ANR	1002656	RelationalExpression	run >= left		1002362	0		>=			
ANR	1002657	Identifier	run		1002362	0					
ANR	1002658	Identifier	left		1002362	1					
ANR	1002659	ExpressionStatement	left = 0	1068:20:35427:35435	1002362	1	True				
ANR	1002660	AssignmentExpression	left = 0		1002362	0		=			
ANR	1002661	Identifier	left		1002362	0					
ANR	1002662	PrimaryExpression	0		1002362	1					
ANR	1002663	ElseStatement	else		1002362	0					
ANR	1002664	ExpressionStatement	"bit = run & 7 , left -= run"	1070:20:35478:35504	1002362	0	True				
ANR	1002665	Expression	"bit = run & 7 , left -= run"		1002362	0					
ANR	1002666	AssignmentExpression	bit = run & 7		1002362	0		=			
ANR	1002667	Identifier	bit		1002362	0					
ANR	1002668	BitAndExpression	run & 7		1002362	1		&			
ANR	1002669	Identifier	run		1002362	0					
ANR	1002670	PrimaryExpression	7		1002362	1					
ANR	1002671	AssignmentExpression	left -= run		1002362	1		-=			
ANR	1002672	Identifier	left		1002362	0					
ANR	1002673	Identifier	run		1002362	1					
ANR	1002674	ExpressionStatement	"code = gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"	1072:12:35532:35652	1002362	6	True				
ANR	1002675	AssignmentExpression	"code = gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"		1002362	0		=			
ANR	1002676	Identifier	code		1002362	0					
ANR	1002677	CallExpression	"gx_device_color_fill_rectangle ( pdevc , x + w - l0 , y + iy , l0 - left , 1 , dev , lop , NULL )"		1002362	1					
ANR	1002678	Callee	gx_device_color_fill_rectangle		1002362	0					
ANR	1002679	Identifier	gx_device_color_fill_rectangle		1002362	0					
ANR	1002680	ArgumentList	pdevc		1002362	1					
ANR	1002681	Argument	pdevc		1002362	0					
ANR	1002682	Identifier	pdevc		1002362	0					
ANR	1002683	Argument	x + w - l0		1002362	1					
ANR	1002684	AdditiveExpression	x + w - l0		1002362	0		+			
ANR	1002685	Identifier	x		1002362	0					
ANR	1002686	AdditiveExpression	w - l0		1002362	1		-			
ANR	1002687	Identifier	w		1002362	0					
ANR	1002688	Identifier	l0		1002362	1					
ANR	1002689	Argument	y + iy		1002362	2					
ANR	1002690	AdditiveExpression	y + iy		1002362	0		+			
ANR	1002691	Identifier	y		1002362	0					
ANR	1002692	Identifier	iy		1002362	1					
ANR	1002693	Argument	l0 - left		1002362	3					
ANR	1002694	AdditiveExpression	l0 - left		1002362	0		-			
ANR	1002695	Identifier	l0		1002362	0					
ANR	1002696	Identifier	left		1002362	1					
ANR	1002697	Argument	1		1002362	4					
ANR	1002698	PrimaryExpression	1		1002362	0					
ANR	1002699	Argument	dev		1002362	5					
ANR	1002700	Identifier	dev		1002362	0					
ANR	1002701	Argument	lop		1002362	6					
ANR	1002702	Identifier	lop		1002362	0					
ANR	1002703	Argument	NULL		1002362	7					
ANR	1002704	Identifier	NULL		1002362	0					
ANR	1002705	IfStatement	if ( code < 0 )		1002362	7					
ANR	1002706	Condition	code < 0	1074:16:35670:35677	1002362	0	True				
ANR	1002707	RelationalExpression	code < 0		1002362	0		<			
ANR	1002708	Identifier	code		1002362	0					
ANR	1002709	PrimaryExpression	0		1002362	1					
ANR	1002710	ReturnStatement	return code ;	1075:16:35696:35707	1002362	1	True				
ANR	1002711	Identifier	code		1002362	0					
ANR	1002712	ReturnStatement	return 0 ;	1078:4:35729:35737	1002362	6	True				
ANR	1002713	PrimaryExpression	0		1002362	0					
ANR	1002714	ReturnType	int		1002362	1					
ANR	1002715	Identifier	gx_dc_default_fill_masked		1002362	2					
ANR	1002716	ParameterList	"const gx_device_color * pdevc , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_device * dev , gs_logical_operation_t lop , bool invert"		1002362	3					
ANR	1002717	Parameter	const gx_device_color * pdevc	1011:26:33352:33380	1002362	0	True				
ANR	1002718	ParameterType	const gx_device_color *		1002362	0					
ANR	1002719	Identifier	pdevc		1002362	1					
ANR	1002720	Parameter	const byte * data	1011:57:33383:33399	1002362	1	True				
ANR	1002721	ParameterType	const byte *		1002362	0					
ANR	1002722	Identifier	data		1002362	1					
ANR	1002723	Parameter	int data_x	1012:8:33410:33419	1002362	2	True				
ANR	1002724	ParameterType	int		1002362	0					
ANR	1002725	Identifier	data_x		1002362	1					
ANR	1002726	Parameter	int raster	1012:20:33422:33431	1002362	3	True				
ANR	1002727	ParameterType	int		1002362	0					
ANR	1002728	Identifier	raster		1002362	1					
ANR	1002729	Parameter	gx_bitmap_id id	1012:32:33434:33448	1002362	4	True				
ANR	1002730	ParameterType	gx_bitmap_id		1002362	0					
ANR	1002731	Identifier	id		1002362	1					
ANR	1002732	Parameter	int x	1012:49:33451:33455	1002362	5	True				
ANR	1002733	ParameterType	int		1002362	0					
ANR	1002734	Identifier	x		1002362	1					
ANR	1002735	Parameter	int y	1012:56:33458:33462	1002362	6	True				
ANR	1002736	ParameterType	int		1002362	0					
ANR	1002737	Identifier	y		1002362	1					
ANR	1002738	Parameter	int w	1012:63:33465:33469	1002362	7	True				
ANR	1002739	ParameterType	int		1002362	0					
ANR	1002740	Identifier	w		1002362	1					
ANR	1002741	Parameter	int h	1012:70:33472:33476	1002362	8	True				
ANR	1002742	ParameterType	int		1002362	0					
ANR	1002743	Identifier	h		1002362	1					
ANR	1002744	Parameter	gx_device * dev	1013:19:33498:33512	1002362	9	True				
ANR	1002745	ParameterType	gx_device *		1002362	0					
ANR	1002746	Identifier	dev		1002362	1					
ANR	1002747	Parameter	gs_logical_operation_t lop	1013:36:33515:33540	1002362	10	True				
ANR	1002748	ParameterType	gs_logical_operation_t		1002362	0					
ANR	1002749	Identifier	lop		1002362	1					
ANR	1002750	Parameter	bool invert	1013:64:33543:33553	1002362	11	True				
ANR	1002751	ParameterType	bool		1002362	0					
ANR	1002752	Identifier	invert		1002362	1					
ANR	1002753	CFGEntryNode	ENTRY		1002362		True				
ANR	1002754	CFGExitNode	EXIT		1002362		True				
ANR	1002755	Symbol	code		1002362						
ANR	1002756	Symbol	* byte_bit_run_length		1002362						
ANR	1002757	Symbol	data		1002362						
ANR	1002758	Symbol	l0		1002362						
ANR	1002759	Symbol	pdevc		1002362						
ANR	1002760	Symbol	* bit		1002362						
ANR	1002761	Symbol	run		1002362						
ANR	1002762	Symbol	lop		1002362						
ANR	1002763	Symbol	bit		1002362						
ANR	1002764	Symbol	zero		1002362						
ANR	1002765	Symbol	* one		1002362						
ANR	1002766	Symbol	data_x		1002362						
ANR	1002767	Symbol	lbit		1002362						
ANR	1002768	Symbol	dev		1002362						
ANR	1002769	Symbol	byte_bit_run_length_0		1002362						
ANR	1002770	Symbol	id		1002362						
ANR	1002771	Symbol	row		1002362						
ANR	1002772	Symbol	* * p		1002362						
ANR	1002773	Symbol	* * bit		1002362						
ANR	1002774	Symbol	gx_device_color_fill_rectangle		1002362						
ANR	1002775	Symbol	NULL		1002362						
ANR	1002776	Symbol	invert		1002362						
ANR	1002777	Symbol	one		1002362						
ANR	1002778	Symbol	raster		1002362						
ANR	1002779	Symbol	h		1002362						
ANR	1002780	Symbol	iy		1002362						
ANR	1002781	Symbol	p		1002362						
ANR	1002782	Symbol	left		1002362						
ANR	1002783	Symbol	w		1002362						
ANR	1002784	Symbol	x		1002362						
ANR	1002785	Symbol	byte_bit_run_length		1002362						
ANR	1002786	Symbol	y		1002362						
ANR	1002787	Symbol	* byte_bit_run_length_0		1002362						
ANR	1002788	Symbol	* zero		1002362						
ANR	1002789	Symbol	* p		1002362						
ANR	1002790	Symbol	* * byte_bit_run_length		1002362						
ANR	1002791	Function	gx_dc_write_color	1111:0:36769:37610							
ANR	1002792	FunctionDef	"gx_dc_write_color (gx_color_index color , const gx_device * dev , byte * pdata , uint * psize)"		1002791	0					
ANR	1002793	CompoundStatement		1117:0:36915:37610	1002791	0					
ANR	1002794	IdentifierDeclStatement	int num_bytes ;	1118:4:36921:36950	1002791	0	True				
ANR	1002795	IdentifierDecl	num_bytes		1002791	0					
ANR	1002796	IdentifierDeclType	int		1002791	0					
ANR	1002797	Identifier	num_bytes		1002791	1					
ANR	1002798	IfStatement	if ( color == gx_no_color_index )		1002791	1					
ANR	1002799	Condition	color == gx_no_color_index	1121:8:37040:37065	1002791	0	True				
ANR	1002800	EqualityExpression	color == gx_no_color_index		1002791	0		==			
ANR	1002801	Identifier	color		1002791	0					
ANR	1002802	Identifier	gx_no_color_index		1002791	1					
ANR	1002803	CompoundStatement		5:36:152:152	1002791	1					
ANR	1002804	ExpressionStatement	num_bytes = 1	1122:8:37078:37091	1002791	0	True				
ANR	1002805	AssignmentExpression	num_bytes = 1		1002791	0		=			
ANR	1002806	Identifier	num_bytes		1002791	0					
ANR	1002807	PrimaryExpression	1		1002791	1					
ANR	1002808	ElseStatement	else		1002791	0					
ANR	1002809	CompoundStatement		7:11:188:188	1002791	0					
ANR	1002810	ExpressionStatement	num_bytes = sizeof ( gx_color_index ) + 1	1124:8:37114:37152	1002791	0	True				
ANR	1002811	AssignmentExpression	num_bytes = sizeof ( gx_color_index ) + 1		1002791	0		=			
ANR	1002812	Identifier	num_bytes		1002791	0					
ANR	1002813	AdditiveExpression	sizeof ( gx_color_index ) + 1		1002791	1		+			
ANR	1002814	SizeofExpression	sizeof ( gx_color_index )		1002791	0					
ANR	1002815	Sizeof	sizeof		1002791	0					
ANR	1002816	SizeofOperand	gx_color_index		1002791	1					
ANR	1002817	PrimaryExpression	1		1002791	1					
ANR	1002818	IfStatement	if ( * psize < num_bytes )		1002791	2					
ANR	1002819	Condition	* psize < num_bytes	1128:8:37204:37221	1002791	0	True				
ANR	1002820	RelationalExpression	* psize < num_bytes		1002791	0		<			
ANR	1002821	UnaryOperationExpression	* psize		1002791	0					
ANR	1002822	UnaryOperator	*		1002791	0					
ANR	1002823	Identifier	psize		1002791	1					
ANR	1002824	Identifier	num_bytes		1002791	1					
ANR	1002825	CompoundStatement		12:28:308:308	1002791	1					
ANR	1002826	ExpressionStatement	* psize = num_bytes	1129:8:37234:37252	1002791	0	True				
ANR	1002827	AssignmentExpression	* psize = num_bytes		1002791	0		=			
ANR	1002828	UnaryOperationExpression	* psize		1002791	0					
ANR	1002829	UnaryOperator	*		1002791	0					
ANR	1002830	Identifier	psize		1002791	1					
ANR	1002831	Identifier	num_bytes		1002791	1					
ANR	1002832	ExpressionStatement	return_error ( gs_error_rangecheck )	1130:8:37262:37295	1002791	1	True				
ANR	1002833	CallExpression	return_error ( gs_error_rangecheck )		1002791	0					
ANR	1002834	Callee	return_error		1002791	0					
ANR	1002835	Identifier	return_error		1002791	0					
ANR	1002836	ArgumentList	gs_error_rangecheck		1002791	1					
ANR	1002837	Argument	gs_error_rangecheck		1002791	0					
ANR	1002838	Identifier	gs_error_rangecheck		1002791	0					
ANR	1002839	ExpressionStatement	* psize = num_bytes	1132:4:37307:37325	1002791	3	True				
ANR	1002840	AssignmentExpression	* psize = num_bytes		1002791	0		=			
ANR	1002841	UnaryOperationExpression	* psize		1002791	0					
ANR	1002842	UnaryOperator	*		1002791	0					
ANR	1002843	Identifier	psize		1002791	1					
ANR	1002844	Identifier	num_bytes		1002791	1					
ANR	1002845	IfStatement	if ( color == gx_no_color_index )		1002791	4					
ANR	1002846	Condition	color == gx_no_color_index	1135:8:37389:37414	1002791	0	True				
ANR	1002847	EqualityExpression	color == gx_no_color_index		1002791	0		==			
ANR	1002848	Identifier	color		1002791	0					
ANR	1002849	Identifier	gx_no_color_index		1002791	1					
ANR	1002850	CompoundStatement		19:36:501:501	1002791	1					
ANR	1002851	ExpressionStatement	* psize = 1	1136:8:37427:37437	1002791	0	True				
ANR	1002852	AssignmentExpression	* psize = 1		1002791	0		=			
ANR	1002853	UnaryOperationExpression	* psize		1002791	0					
ANR	1002854	UnaryOperator	*		1002791	0					
ANR	1002855	Identifier	psize		1002791	1					
ANR	1002856	PrimaryExpression	1		1002791	1					
ANR	1002857	ExpressionStatement	* pdata = 0xff	1137:8:37447:37460	1002791	1	True				
ANR	1002858	AssignmentExpression	* pdata = 0xff		1002791	0		=			
ANR	1002859	UnaryOperationExpression	* pdata		1002791	0					
ANR	1002860	UnaryOperator	*		1002791	0					
ANR	1002861	Identifier	pdata		1002791	1					
ANR	1002862	PrimaryExpression	0xff		1002791	1					
ANR	1002863	ElseStatement	else		1002791	0					
ANR	1002864	CompoundStatement		22:11:557:557	1002791	0					
ANR	1002865	WhileStatement	while ( -- num_bytes >= 0 )		1002791	0					
ANR	1002866	Condition	-- num_bytes >= 0	1139:15:37490:37505	1002791	0	True				
ANR	1002867	RelationalExpression	-- num_bytes >= 0		1002791	0		>=			
ANR	1002868	UnaryExpression	-- num_bytes		1002791	0					
ANR	1002869	IncDec	--		1002791	0					
ANR	1002870	Identifier	num_bytes		1002791	1					
ANR	1002871	PrimaryExpression	0		1002791	1					
ANR	1002872	CompoundStatement		23:33:592:592	1002791	1					
ANR	1002873	ExpressionStatement	pdata [ num_bytes ] = color & 0xff	1140:12:37522:37553	1002791	0	True				
ANR	1002874	AssignmentExpression	pdata [ num_bytes ] = color & 0xff		1002791	0		=			
ANR	1002875	ArrayIndexing	pdata [ num_bytes ]		1002791	0					
ANR	1002876	Identifier	pdata		1002791	0					
ANR	1002877	Identifier	num_bytes		1002791	1					
ANR	1002878	BitAndExpression	color & 0xff		1002791	1		&			
ANR	1002879	Identifier	color		1002791	0					
ANR	1002880	PrimaryExpression	0xff		1002791	1					
ANR	1002881	ExpressionStatement	color >>= 8	1141:12:37567:37578	1002791	1	True				
ANR	1002882	AssignmentExpression	color >>= 8		1002791	0		>>=			
ANR	1002883	Identifier	color		1002791	0					
ANR	1002884	PrimaryExpression	8		1002791	1					
ANR	1002885	ReturnStatement	return 0 ;	1144:4:37600:37608	1002791	5	True				
ANR	1002886	PrimaryExpression	0		1002791	0					
ANR	1002887	ReturnType	int		1002791	1					
ANR	1002888	Identifier	gx_dc_write_color		1002791	2					
ANR	1002889	ParameterList	"gx_color_index color , const gx_device * dev , byte * pdata , uint * psize"		1002791	3					
ANR	1002890	Parameter	gx_color_index color	1113:4:36796:36820	1002791	0	True				
ANR	1002891	ParameterType	gx_color_index		1002791	0					
ANR	1002892	Identifier	color		1002791	1					
ANR	1002893	Parameter	const gx_device * dev	1114:4:36827:36849	1002791	1	True				
ANR	1002894	ParameterType	const gx_device *		1002791	0					
ANR	1002895	Identifier	dev		1002791	1					
ANR	1002896	Parameter	byte * pdata	1115:4:36856:36880	1002791	2	True				
ANR	1002897	ParameterType	byte *		1002791	0					
ANR	1002898	Identifier	pdata		1002791	1					
ANR	1002899	Parameter	uint * psize	1116:4:36887:36911	1002791	3	True				
ANR	1002900	ParameterType	uint *		1002791	0					
ANR	1002901	Identifier	psize		1002791	1					
ANR	1002902	CFGEntryNode	ENTRY		1002791		True				
ANR	1002903	CFGExitNode	EXIT		1002791		True				
ANR	1002904	Symbol	num_bytes		1002791						
ANR	1002905	Symbol	psize		1002791						
ANR	1002906	Symbol	pdata		1002791						
ANR	1002907	Symbol	gx_no_color_index		1002791						
ANR	1002908	Symbol	color		1002791						
ANR	1002909	Symbol	dev		1002791						
ANR	1002910	Symbol	gs_error_rangecheck		1002791						
ANR	1002911	Symbol	* num_bytes		1002791						
ANR	1002912	Symbol	* psize		1002791						
ANR	1002913	Symbol	* pdata		1002791						
ANR	1002914	Function	gx_dc_read_color	1166:0:38160:38923							
ANR	1002915	FunctionDef	"gx_dc_read_color (gx_color_index * pcolor , const gx_device * dev , const byte * pdata , int size)"		1002914	0					
ANR	1002916	CompoundStatement		1172:0:38305:38923	1002914	0					
ANR	1002917	IdentifierDeclStatement	gx_color_index color = 0 ;	1173:4:38311:38340	1002914	0	True				
ANR	1002918	IdentifierDecl	color = 0		1002914	0					
ANR	1002919	IdentifierDeclType	gx_color_index		1002914	0					
ANR	1002920	Identifier	color		1002914	1					
ANR	1002921	AssignmentExpression	color = 0		1002914	2		=			
ANR	1002922	Identifier	color		1002914	0					
ANR	1002923	PrimaryExpression	0		1002914	1					
ANR	1002924	IdentifierDeclStatement	"int i , num_bytes ;"	1174:4:38346:38378	1002914	1	True				
ANR	1002925	IdentifierDecl	i		1002914	0					
ANR	1002926	IdentifierDeclType	int		1002914	0					
ANR	1002927	Identifier	i		1002914	1					
ANR	1002928	IdentifierDecl	num_bytes		1002914	1					
ANR	1002929	IdentifierDeclType	int		1002914	0					
ANR	1002930	Identifier	num_bytes		1002914	1					
ANR	1002931	IfStatement	if ( size < 1 || ( pdata [ 0 ] != 0xff && size < sizeof ( gx_color_index ) ) )		1002914	2					
ANR	1002932	Condition	size < 1 || ( pdata [ 0 ] != 0xff && size < sizeof ( gx_color_index ) )	1177:8:38440:38502	1002914	0	True				
ANR	1002933	OrExpression	size < 1 || ( pdata [ 0 ] != 0xff && size < sizeof ( gx_color_index ) )		1002914	0		||			
ANR	1002934	RelationalExpression	size < 1		1002914	0		<			
ANR	1002935	Identifier	size		1002914	0					
ANR	1002936	PrimaryExpression	1		1002914	1					
ANR	1002937	AndExpression	pdata [ 0 ] != 0xff && size < sizeof ( gx_color_index )		1002914	1		&&			
ANR	1002938	EqualityExpression	pdata [ 0 ] != 0xff		1002914	0		!=			
ANR	1002939	ArrayIndexing	pdata [ 0 ]		1002914	0					
ANR	1002940	Identifier	pdata		1002914	0					
ANR	1002941	PrimaryExpression	0		1002914	1					
ANR	1002942	PrimaryExpression	0xff		1002914	1					
ANR	1002943	RelationalExpression	size < sizeof ( gx_color_index )		1002914	1		<			
ANR	1002944	Identifier	size		1002914	0					
ANR	1002945	SizeofExpression	sizeof ( gx_color_index )		1002914	1					
ANR	1002946	Sizeof	sizeof		1002914	0					
ANR	1002947	SizeofOperand	gx_color_index		1002914	1					
ANR	1002948	ExpressionStatement	return_error ( gs_error_rangecheck )	1178:8:38513:38546	1002914	1	True				
ANR	1002949	CallExpression	return_error ( gs_error_rangecheck )		1002914	0					
ANR	1002950	Callee	return_error		1002914	0					
ANR	1002951	Identifier	return_error		1002914	0					
ANR	1002952	ArgumentList	gs_error_rangecheck		1002914	1					
ANR	1002953	Argument	gs_error_rangecheck		1002914	0					
ANR	1002954	Identifier	gs_error_rangecheck		1002914	0					
ANR	1002955	IfStatement	if ( pdata [ 0 ] == 0xff )		1002914	3					
ANR	1002956	Condition	pdata [ 0 ] == 0xff	1181:8:38594:38609	1002914	0	True				
ANR	1002957	EqualityExpression	pdata [ 0 ] == 0xff		1002914	0		==			
ANR	1002958	ArrayIndexing	pdata [ 0 ]		1002914	0					
ANR	1002959	Identifier	pdata		1002914	0					
ANR	1002960	PrimaryExpression	0		1002914	1					
ANR	1002961	PrimaryExpression	0xff		1002914	1					
ANR	1002962	CompoundStatement		10:26:306:306	1002914	1					
ANR	1002963	ExpressionStatement	* pcolor = gx_no_color_index	1182:8:38622:38649	1002914	0	True				
ANR	1002964	AssignmentExpression	* pcolor = gx_no_color_index		1002914	0		=			
ANR	1002965	UnaryOperationExpression	* pcolor		1002914	0					
ANR	1002966	UnaryOperator	*		1002914	0					
ANR	1002967	Identifier	pcolor		1002914	1					
ANR	1002968	Identifier	gx_no_color_index		1002914	1					
ANR	1002969	ReturnStatement	return 1 ;	1183:8:38659:38667	1002914	1	True				
ANR	1002970	PrimaryExpression	1		1002914	0					
ANR	1002971	ElseStatement	else		1002914	0					
ANR	1002972	CompoundStatement		13:11:374:374	1002914	0					
ANR	1002973	ExpressionStatement	num_bytes = sizeof ( gx_color_index ) + 1	1185:8:38690:38728	1002914	0	True				
ANR	1002974	AssignmentExpression	num_bytes = sizeof ( gx_color_index ) + 1		1002914	0		=			
ANR	1002975	Identifier	num_bytes		1002914	0					
ANR	1002976	AdditiveExpression	sizeof ( gx_color_index ) + 1		1002914	1		+			
ANR	1002977	SizeofExpression	sizeof ( gx_color_index )		1002914	0					
ANR	1002978	Sizeof	sizeof		1002914	0					
ANR	1002979	SizeofOperand	gx_color_index		1002914	1					
ANR	1002980	PrimaryExpression	1		1002914	1					
ANR	1002981	ForStatement	for ( i = 0 ; i < num_bytes ; i ++ )		1002914	4					
ANR	1002982	ForInit	i = 0 ;	1189:9:38812:38817	1002914	0	True				
ANR	1002983	AssignmentExpression	i = 0		1002914	0		=			
ANR	1002984	Identifier	i		1002914	0					
ANR	1002985	PrimaryExpression	0		1002914	1					
ANR	1002986	Condition	i < num_bytes	1189:16:38819:38831	1002914	1	True				
ANR	1002987	RelationalExpression	i < num_bytes		1002914	0		<			
ANR	1002988	Identifier	i		1002914	0					
ANR	1002989	Identifier	num_bytes		1002914	1					
ANR	1002990	PostIncDecOperationExpression	i ++	1189:31:38834:38836	1002914	2	True				
ANR	1002991	Identifier	i		1002914	0					
ANR	1002992	IncDec	++		1002914	1					
ANR	1002993	ExpressionStatement	color = ( color << 8 ) | pdata [ i ]	1190:8:38847:38878	1002914	3	True				
ANR	1002994	AssignmentExpression	color = ( color << 8 ) | pdata [ i ]		1002914	0		=			
ANR	1002995	Identifier	color		1002914	0					
ANR	1002996	InclusiveOrExpression	( color << 8 ) | pdata [ i ]		1002914	1		|			
ANR	1002997	ShiftExpression	color << 8		1002914	0		<<			
ANR	1002998	Identifier	color		1002914	0					
ANR	1002999	PrimaryExpression	8		1002914	1					
ANR	1003000	ArrayIndexing	pdata [ i ]		1002914	1					
ANR	1003001	Identifier	pdata		1002914	0					
ANR	1003002	Identifier	i		1002914	1					
ANR	1003003	ExpressionStatement	* pcolor = color	1191:4:38884:38899	1002914	5	True				
ANR	1003004	AssignmentExpression	* pcolor = color		1002914	0		=			
ANR	1003005	UnaryOperationExpression	* pcolor		1002914	0					
ANR	1003006	UnaryOperator	*		1002914	0					
ANR	1003007	Identifier	pcolor		1002914	1					
ANR	1003008	Identifier	color		1002914	1					
ANR	1003009	ReturnStatement	return num_bytes ;	1192:4:38905:38921	1002914	6	True				
ANR	1003010	Identifier	num_bytes		1002914	0					
ANR	1003011	ReturnType	int		1002914	1					
ANR	1003012	Identifier	gx_dc_read_color		1002914	2					
ANR	1003013	ParameterList	"gx_color_index * pcolor , const gx_device * dev , const byte * pdata , int size"		1002914	3					
ANR	1003014	Parameter	gx_color_index * pcolor	1168:4:38186:38211	1002914	0	True				
ANR	1003015	ParameterType	gx_color_index *		1002914	0					
ANR	1003016	Identifier	pcolor		1002914	1					
ANR	1003017	Parameter	const gx_device * dev	1169:4:38218:38240	1002914	1	True				
ANR	1003018	ParameterType	const gx_device *		1002914	0					
ANR	1003019	Identifier	dev		1002914	1					
ANR	1003020	Parameter	const byte * pdata	1170:4:38247:38271	1002914	2	True				
ANR	1003021	ParameterType	const byte *		1002914	0					
ANR	1003022	Identifier	pdata		1002914	1					
ANR	1003023	Parameter	int size	1171:4:38278:38301	1002914	3	True				
ANR	1003024	ParameterType	int		1002914	0					
ANR	1003025	Identifier	size		1002914	1					
ANR	1003026	CFGEntryNode	ENTRY		1002914		True				
ANR	1003027	CFGExitNode	EXIT		1002914		True				
ANR	1003028	Symbol	num_bytes		1002914						
ANR	1003029	Symbol	pdata		1002914						
ANR	1003030	Symbol	gx_no_color_index		1002914						
ANR	1003031	Symbol	* i		1002914						
ANR	1003032	Symbol	dev		1002914						
ANR	1003033	Symbol	size		1002914						
ANR	1003034	Symbol	color		1002914						
ANR	1003035	Symbol	gs_error_rangecheck		1002914						
ANR	1003036	Symbol	pcolor		1002914						
ANR	1003037	Symbol	* pcolor		1002914						
ANR	1003038	Symbol	i		1002914						
ANR	1003039	Symbol	* pdata		1002914						
