command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10023185	File	data/converged/CVE-2018-16863_ghostpdl/tiff_contrib_iptcutil_iptcutil.c								
ANR	10023186	ClassDef	_tag_spec	28:8:403:467							
ANR	10023187	DeclStmt									
ANR	10023188	Decl							short	short	id
ANR	10023189	DeclStmt									
ANR	10023190	Decl							char	char *	name
ANR	10023191	DeclStmt									
ANR	10023192	Decl							_tag_spec	_tag_spec	tag_spec
ANR	10023193	DeclStmt									
ANR	10023194	Decl							tag_spec	tag_spec [ ]	tags
ANR	10023195	Function	formatString	96:0:1993:2539							
ANR	10023196	FunctionDef	"formatString (FILE * ofile , const char * s , int len)"		10023195	0					
ANR	10023197	CompoundStatement		97:0:2048:2539	10023195	0					
ANR	10023198	ExpressionStatement	"putc ( '""' , ofile )"	98:2:2052:2068	10023195	0	True				
ANR	10023199	CallExpression	"putc ( '""' , ofile )"		10023195	0					
ANR	10023200	Callee	putc		10023195	0					
ANR	10023201	Identifier	putc		10023195	0					
ANR	10023202	ArgumentList	"'""'"		10023195	1					
ANR	10023203	Argument	"'""'"		10023195	0					
ANR	10023204	PrimaryExpression	"'""'"		10023195	0					
ANR	10023205	Argument	ofile		10023195	1					
ANR	10023206	Identifier	ofile		10023195	0					
ANR	10023207	ForStatement	"for ( ; len > 0 ; -- len , ++ s )"		10023195	1					
ANR	10023208	Condition	len > 0	99:9:2079:2085	10023195	0	True				
ANR	10023209	RelationalExpression	len > 0		10023195	0		>			
ANR	10023210	Identifier	len		10023195	0					
ANR	10023211	PrimaryExpression	0		10023195	1					
ANR	10023212	Expression	"-- len , ++ s"	99:18:2088:2097	10023195	1	True				
ANR	10023213	UnaryExpression	-- len		10023195	0					
ANR	10023214	IncDec	--		10023195	0					
ANR	10023215	Identifier	len		10023195	1					
ANR	10023216	UnaryExpression	++ s		10023195	1					
ANR	10023217	IncDec	++		10023195	0					
ANR	10023218	Identifier	s		10023195	1					
ANR	10023219	CompoundStatement		4:4:57:67	10023195	2					
ANR	10023220	IdentifierDeclStatement	int c = * s ;	100:4:2106:2116	10023195	0	True				
ANR	10023221	IdentifierDecl	c = * s		10023195	0					
ANR	10023222	IdentifierDeclType	int		10023195	0					
ANR	10023223	Identifier	c		10023195	1					
ANR	10023224	AssignmentExpression	c = * s		10023195	2		=			
ANR	10023225	Identifier	c		10023195	0					
ANR	10023226	UnaryOperationExpression	* s		10023195	1					
ANR	10023227	UnaryOperator	*		10023195	0					
ANR	10023228	Identifier	s		10023195	1					
ANR	10023229	SwitchStatement	switch ( c )		10023195	1					
ANR	10023230	Condition	c	101:12:2130:2130	10023195	0	True				
ANR	10023231	Identifier	c		10023195	0					
ANR	10023232	CompoundStatement		5:15:84:84	10023195	1					
ANR	10023233	Label	case '&' :	102:4:2139:2147	10023195	0	True				
ANR	10023234	ExpressionStatement	"fputs ( ""&amp;"" , ofile )"	103:6:2155:2176	10023195	1	True				
ANR	10023235	CallExpression	"fputs ( ""&amp;"" , ofile )"		10023195	0					
ANR	10023236	Callee	fputs		10023195	0					
ANR	10023237	Identifier	fputs		10023195	0					
ANR	10023238	ArgumentList	"""&amp;"""		10023195	1					
ANR	10023239	Argument	"""&amp;"""		10023195	0					
ANR	10023240	PrimaryExpression	"""&amp;"""		10023195	0					
ANR	10023241	Argument	ofile		10023195	1					
ANR	10023242	Identifier	ofile		10023195	0					
ANR	10023243	BreakStatement	break ;	104:6:2184:2189	10023195	2	True				
ANR	10023244	Label	case '<' :	106:4:2215:2223	10023195	3	True				
ANR	10023245	ExpressionStatement	"fputs ( ""&lt;"" , ofile )"	107:6:2231:2251	10023195	4	True				
ANR	10023246	CallExpression	"fputs ( ""&lt;"" , ofile )"		10023195	0					
ANR	10023247	Callee	fputs		10023195	0					
ANR	10023248	Identifier	fputs		10023195	0					
ANR	10023249	ArgumentList	"""&lt;"""		10023195	1					
ANR	10023250	Argument	"""&lt;"""		10023195	0					
ANR	10023251	PrimaryExpression	"""&lt;"""		10023195	0					
ANR	10023252	Argument	ofile		10023195	1					
ANR	10023253	Identifier	ofile		10023195	0					
ANR	10023254	BreakStatement	break ;	108:6:2259:2264	10023195	5	True				
ANR	10023255	Label	case '>' :	109:4:2270:2278	10023195	6	True				
ANR	10023256	ExpressionStatement	"fputs ( ""&gt;"" , ofile )"	110:6:2286:2306	10023195	7	True				
ANR	10023257	CallExpression	"fputs ( ""&gt;"" , ofile )"		10023195	0					
ANR	10023258	Callee	fputs		10023195	0					
ANR	10023259	Identifier	fputs		10023195	0					
ANR	10023260	ArgumentList	"""&gt;"""		10023195	1					
ANR	10023261	Argument	"""&gt;"""		10023195	0					
ANR	10023262	PrimaryExpression	"""&gt;"""		10023195	0					
ANR	10023263	Argument	ofile		10023195	1					
ANR	10023264	Identifier	ofile		10023195	0					
ANR	10023265	BreakStatement	break ;	111:6:2314:2319	10023195	8	True				
ANR	10023266	Label	"case '""' :"	113:4:2332:2340	10023195	9	True				
ANR	10023267	ExpressionStatement	"fputs ( ""&quot;"" , ofile )"	114:6:2348:2370	10023195	10	True				
ANR	10023268	CallExpression	"fputs ( ""&quot;"" , ofile )"		10023195	0					
ANR	10023269	Callee	fputs		10023195	0					
ANR	10023270	Identifier	fputs		10023195	0					
ANR	10023271	ArgumentList	"""&quot;"""		10023195	1					
ANR	10023272	Argument	"""&quot;"""		10023195	0					
ANR	10023273	PrimaryExpression	"""&quot;"""		10023195	0					
ANR	10023274	Argument	ofile		10023195	1					
ANR	10023275	Identifier	ofile		10023195	0					
ANR	10023276	BreakStatement	break ;	115:6:2378:2383	10023195	11	True				
ANR	10023277	Label	default :	116:4:2389:2396	10023195	12	True				
ANR	10023278	Identifier	default		10023195	0					
ANR	10023279	IfStatement	if ( iscntrl ( c ) )		10023195	13					
ANR	10023280	Condition	iscntrl ( c )	117:10:2408:2417	10023195	0	True				
ANR	10023281	CallExpression	iscntrl ( c )		10023195	0					
ANR	10023282	Callee	iscntrl		10023195	0					
ANR	10023283	Identifier	iscntrl		10023195	0					
ANR	10023284	ArgumentList	c		10023195	1					
ANR	10023285	Argument	c		10023195	0					
ANR	10023286	Identifier	c		10023195	0					
ANR	10023287	ExpressionStatement	"fprintf ( ofile , ""&#%d;"" , c )"	118:8:2428:2454	10023195	1	True				
ANR	10023288	CallExpression	"fprintf ( ofile , ""&#%d;"" , c )"		10023195	0					
ANR	10023289	Callee	fprintf		10023195	0					
ANR	10023290	Identifier	fprintf		10023195	0					
ANR	10023291	ArgumentList	ofile		10023195	1					
ANR	10023292	Argument	ofile		10023195	0					
ANR	10023293	Identifier	ofile		10023195	0					
ANR	10023294	Argument	"""&#%d;"""		10023195	1					
ANR	10023295	PrimaryExpression	"""&#%d;"""		10023195	0					
ANR	10023296	Argument	c		10023195	2					
ANR	10023297	Identifier	c		10023195	0					
ANR	10023298	ElseStatement	else		10023195	0					
ANR	10023299	ExpressionStatement	"putc ( * s , ofile )"	120:8:2475:2490	10023195	0	True				
ANR	10023300	CallExpression	"putc ( * s , ofile )"		10023195	0					
ANR	10023301	Callee	putc		10023195	0					
ANR	10023302	Identifier	putc		10023195	0					
ANR	10023303	ArgumentList	* s		10023195	1					
ANR	10023304	Argument	* s		10023195	0					
ANR	10023305	UnaryOperationExpression	* s		10023195	0					
ANR	10023306	UnaryOperator	*		10023195	0					
ANR	10023307	Identifier	s		10023195	1					
ANR	10023308	Argument	ofile		10023195	1					
ANR	10023309	Identifier	ofile		10023195	0					
ANR	10023310	BreakStatement	break ;	121:6:2498:2503	10023195	14	True				
ANR	10023311	ExpressionStatement	"fputs ( ""\\""\\n"" , ofile )"	124:2:2517:2537	10023195	2	True				
ANR	10023312	CallExpression	"fputs ( ""\\""\\n"" , ofile )"		10023195	0					
ANR	10023313	Callee	fputs		10023195	0					
ANR	10023314	Identifier	fputs		10023195	0					
ANR	10023315	ArgumentList	"""\\""\\n"""		10023195	1					
ANR	10023316	Argument	"""\\""\\n"""		10023195	0					
ANR	10023317	PrimaryExpression	"""\\""\\n"""		10023195	0					
ANR	10023318	Argument	ofile		10023195	1					
ANR	10023319	Identifier	ofile		10023195	0					
ANR	10023320	ReturnType	void		10023195	1					
ANR	10023321	Identifier	formatString		10023195	2					
ANR	10023322	ParameterList	"FILE * ofile , const char * s , int len"		10023195	3					
ANR	10023323	Parameter	FILE * ofile	96:18:2011:2021	10023195	0	True				
ANR	10023324	ParameterType	FILE *		10023195	0					
ANR	10023325	Identifier	ofile		10023195	1					
ANR	10023326	Parameter	const char * s	96:31:2024:2036	10023195	1	True				
ANR	10023327	ParameterType	const char *		10023195	0					
ANR	10023328	Identifier	s		10023195	1					
ANR	10023329	Parameter	int len	96:46:2039:2045	10023195	2	True				
ANR	10023330	ParameterType	int		10023195	0					
ANR	10023331	Identifier	len		10023195	1					
ANR	10023332	CFGEntryNode	ENTRY		10023195		True				
ANR	10023333	CFGExitNode	EXIT		10023195		True				
ANR	10023334	Symbol	s		10023195						
ANR	10023335	Symbol	c		10023195						
ANR	10023336	Symbol	len		10023195						
ANR	10023337	Symbol	ofile		10023195						
ANR	10023338	Symbol	iscntrl		10023195						
ANR	10023339	Symbol	* s		10023195						
ANR	10023340	ClassDef	_html_code	127:8:2550:2630							
ANR	10023341	DeclStmt									
ANR	10023342	Decl							short	short	len
ANR	10023343	DeclStmt									
ANR	10023344	Decl							const char	const char *	code
ANR	10023345	Decl							const char	const char	val
ANR	10023346	DeclStmt									
ANR	10023347	Decl							_html_code	_html_code	html_code
ANR	10023348	DeclStmt									
ANR	10023349	Decl							html_code	html_code [ ]	html_codes
ANR	10023350	Function	convertHTMLcodes	150:0:2934:3820							
ANR	10023351	FunctionDef	"convertHTMLcodes (char * s , int len)"		10023350	0					
ANR	10023352	CompoundStatement		151:0:2973:3820	10023350	0					
ANR	10023353	IfStatement	if ( len <= 0 || s == ( char * ) NULL || * s == '\\0' )		10023350	0					
ANR	10023354	Condition	len <= 0 || s == ( char * ) NULL || * s == '\\0'	152:6:2981:3017	10023350	0	True				
ANR	10023355	OrExpression	len <= 0 || s == ( char * ) NULL || * s == '\\0'		10023350	0		||			
ANR	10023356	RelationalExpression	len <= 0		10023350	0		<=			
ANR	10023357	Identifier	len		10023350	0					
ANR	10023358	PrimaryExpression	0		10023350	1					
ANR	10023359	OrExpression	s == ( char * ) NULL || * s == '\\0'		10023350	1		||			
ANR	10023360	EqualityExpression	s == ( char * ) NULL		10023350	0		==			
ANR	10023361	Identifier	s		10023350	0					
ANR	10023362	CastExpression	( char * ) NULL		10023350	1					
ANR	10023363	CastTarget	char *		10023350	0					
ANR	10023364	Identifier	NULL		10023350	1					
ANR	10023365	EqualityExpression	* s == '\\0'		10023350	1		==			
ANR	10023366	UnaryOperationExpression	* s		10023350	0					
ANR	10023367	UnaryOperator	*		10023350	0					
ANR	10023368	Identifier	s		10023350	1					
ANR	10023369	PrimaryExpression	'\\0'		10023350	1					
ANR	10023370	ReturnStatement	return 0 ;	153:4:3024:3032	10023350	1	True				
ANR	10023371	PrimaryExpression	0		10023350	0					
ANR	10023372	IfStatement	if ( s [ 1 ] == '#' )		10023350	1					
ANR	10023373	Condition	s [ 1 ] == '#'	155:6:3041:3051	10023350	0	True				
ANR	10023374	EqualityExpression	s [ 1 ] == '#'		10023350	0		==			
ANR	10023375	ArrayIndexing	s [ 1 ]		10023350	0					
ANR	10023376	Identifier	s		10023350	0					
ANR	10023377	PrimaryExpression	1		10023350	1					
ANR	10023378	PrimaryExpression	'#'		10023350	1					
ANR	10023379	CompoundStatement		7:6:92:102	10023350	1					
ANR	10023380	IdentifierDeclStatement	"int val , o ;"	157:6:3066:3076	10023350	0	True				
ANR	10023381	IdentifierDecl	val		10023350	0					
ANR	10023382	IdentifierDeclType	int		10023350	0					
ANR	10023383	Identifier	val		10023350	1					
ANR	10023384	IdentifierDecl	o		10023350	1					
ANR	10023385	IdentifierDeclType	int		10023350	0					
ANR	10023386	Identifier	o		10023350	1					
ANR	10023387	IfStatement	"if ( sscanf ( s , ""&#%d;"" , & val ) == 1 )"		10023350	1					
ANR	10023388	Condition	"sscanf ( s , ""&#%d;"" , & val ) == 1"	159:10:3089:3115	10023350	0	True				
ANR	10023389	EqualityExpression	"sscanf ( s , ""&#%d;"" , & val ) == 1"		10023350	0		==			
ANR	10023390	CallExpression	"sscanf ( s , ""&#%d;"" , & val )"		10023350	0					
ANR	10023391	Callee	sscanf		10023350	0					
ANR	10023392	Identifier	sscanf		10023350	0					
ANR	10023393	ArgumentList	s		10023350	1					
ANR	10023394	Argument	s		10023350	0					
ANR	10023395	Identifier	s		10023350	0					
ANR	10023396	Argument	"""&#%d;"""		10023350	1					
ANR	10023397	PrimaryExpression	"""&#%d;"""		10023350	0					
ANR	10023398	Argument	& val		10023350	2					
ANR	10023399	UnaryOperationExpression	& val		10023350	0					
ANR	10023400	UnaryOperator	&		10023350	0					
ANR	10023401	Identifier	val		10023350	1					
ANR	10023402	PrimaryExpression	1		10023350	1					
ANR	10023403	CompoundStatement		10:8:152:152	10023350	1					
ANR	10023404	ExpressionStatement	o = 3	161:10:3138:3143	10023350	0	True				
ANR	10023405	AssignmentExpression	o = 3		10023350	0		=			
ANR	10023406	Identifier	o		10023350	0					
ANR	10023407	PrimaryExpression	3		10023350	1					
ANR	10023408	WhileStatement	while ( s [ o ] != ';' )		10023350	1					
ANR	10023409	Condition	s [ o ] != ';'	162:17:3162:3172	10023350	0	True				
ANR	10023410	EqualityExpression	s [ o ] != ';'		10023350	0		!=			
ANR	10023411	ArrayIndexing	s [ o ]		10023350	0					
ANR	10023412	Identifier	s		10023350	0					
ANR	10023413	Identifier	o		10023350	1					
ANR	10023414	PrimaryExpression	';'		10023350	1					
ANR	10023415	CompoundStatement		13:12:213:213	10023350	1					
ANR	10023416	ExpressionStatement	o ++	164:14:3203:3206	10023350	0	True				
ANR	10023417	PostIncDecOperationExpression	o ++		10023350	0					
ANR	10023418	Identifier	o		10023350	0					
ANR	10023419	IncDec	++		10023350	1					
ANR	10023420	IfStatement	if ( o > 5 )		10023350	1					
ANR	10023421	Condition	o > 5	165:18:3226:3230	10023350	0	True				
ANR	10023422	RelationalExpression	o > 5		10023350	0		>			
ANR	10023423	Identifier	o		10023350	0					
ANR	10023424	PrimaryExpression	5		10023350	1					
ANR	10023425	BreakStatement	break ;	166:16:3249:3254	10023350	1	True				
ANR	10023426	IfStatement	if ( o < 5 )		10023350	2					
ANR	10023427	Condition	o < 5	168:14:3284:3288	10023350	0	True				
ANR	10023428	RelationalExpression	o < 5		10023350	0		<			
ANR	10023429	Identifier	o		10023350	0					
ANR	10023430	PrimaryExpression	5		10023350	1					
ANR	10023431	ExpressionStatement	"strcpy ( s + 1 , s + 1 + o )"	169:12:3303:3321	10023350	1	True				
ANR	10023432	CallExpression	"strcpy ( s + 1 , s + 1 + o )"		10023350	0					
ANR	10023433	Callee	strcpy		10023350	0					
ANR	10023434	Identifier	strcpy		10023350	0					
ANR	10023435	ArgumentList	s + 1		10023350	1					
ANR	10023436	Argument	s + 1		10023350	0					
ANR	10023437	AdditiveExpression	s + 1		10023350	0		+			
ANR	10023438	Identifier	s		10023350	0					
ANR	10023439	PrimaryExpression	1		10023350	1					
ANR	10023440	Argument	s + 1 + o		10023350	1					
ANR	10023441	AdditiveExpression	s + 1 + o		10023350	0		+			
ANR	10023442	Identifier	s		10023350	0					
ANR	10023443	AdditiveExpression	1 + o		10023350	1		+			
ANR	10023444	PrimaryExpression	1		10023350	0					
ANR	10023445	Identifier	o		10023350	1					
ANR	10023446	ExpressionStatement	* s = val	170:10:3333:3341	10023350	3	True				
ANR	10023447	AssignmentExpression	* s = val		10023350	0		=			
ANR	10023448	UnaryOperationExpression	* s		10023350	0					
ANR	10023449	UnaryOperator	*		10023350	0					
ANR	10023450	Identifier	s		10023350	1					
ANR	10023451	Identifier	val		10023350	1					
ANR	10023452	ReturnStatement	return o ;	171:10:3353:3361	10023350	4	True				
ANR	10023453	Identifier	o		10023350	0					
ANR	10023454	ElseStatement	else		10023350	0					
ANR	10023455	CompoundStatement		26:6:424:493	10023350	0					
ANR	10023456	IdentifierDeclStatement	"int i , codes = sizeof ( html_codes ) / sizeof ( html_code ) ;"	176:6:3398:3467	10023350	0	True				
ANR	10023457	IdentifierDecl	i		10023350	0					
ANR	10023458	IdentifierDeclType	int		10023350	0					
ANR	10023459	Identifier	i		10023350	1					
ANR	10023460	IdentifierDecl	codes = sizeof ( html_codes ) / sizeof ( html_code )		10023350	1					
ANR	10023461	IdentifierDeclType	int		10023350	0					
ANR	10023462	Identifier	codes		10023350	1					
ANR	10023463	AssignmentExpression	codes = sizeof ( html_codes ) / sizeof ( html_code )		10023350	2		=			
ANR	10023464	Identifier	codes		10023350	0					
ANR	10023465	MultiplicativeExpression	sizeof ( html_codes ) / sizeof ( html_code )		10023350	1		/			
ANR	10023466	SizeofExpression	sizeof ( html_codes )		10023350	0					
ANR	10023467	Sizeof	sizeof		10023350	0					
ANR	10023468	SizeofOperand	html_codes		10023350	1					
ANR	10023469	SizeofExpression	sizeof ( html_code )		10023350	1					
ANR	10023470	Sizeof	sizeof		10023350	0					
ANR	10023471	SizeofOperand	html_code		10023350	1					
ANR	10023472	ForStatement	for ( i = 0 ; i < codes ; i ++ )		10023350	1					
ANR	10023473	ForInit	i = 0 ;	180:11:3481:3484	10023350	0	True				
ANR	10023474	AssignmentExpression	i = 0		10023350	0		=			
ANR	10023475	Identifier	i		10023350	0					
ANR	10023476	PrimaryExpression	0		10023350	1					
ANR	10023477	Condition	i < codes	180:16:3486:3494	10023350	1	True				
ANR	10023478	RelationalExpression	i < codes		10023350	0		<			
ANR	10023479	Identifier	i		10023350	0					
ANR	10023480	Identifier	codes		10023350	1					
ANR	10023481	PostIncDecOperationExpression	i ++	180:27:3497:3499	10023350	2	True				
ANR	10023482	Identifier	i		10023350	0					
ANR	10023483	IncDec	++		10023350	1					
ANR	10023484	CompoundStatement		31:8:536:536	10023350	3					
ANR	10023485	IfStatement	if ( html_codes [ i ] . len <= len )		10023350	0					
ANR	10023486	Condition	html_codes [ i ] . len <= len	182:14:3526:3549	10023350	0	True				
ANR	10023487	RelationalExpression	html_codes [ i ] . len <= len		10023350	0		<=			
ANR	10023488	MemberAccess	html_codes [ i ] . len		10023350	0					
ANR	10023489	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023490	Identifier	html_codes		10023350	0					
ANR	10023491	Identifier	i		10023350	1					
ANR	10023492	Identifier	len		10023350	1					
ANR	10023493	Identifier	len		10023350	1					
ANR	10023494	IfStatement	"if ( STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0 )"		10023350	1					
ANR	10023495	Condition	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0"	183:16:3568:3622	10023350	0	True				
ANR	10023496	EqualityExpression	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len ) == 0"		10023350	0		==			
ANR	10023497	CallExpression	"STRNICMP ( s , html_codes [ i ] . code , html_codes [ i ] . len )"		10023350	0					
ANR	10023498	Callee	STRNICMP		10023350	0					
ANR	10023499	Identifier	STRNICMP		10023350	0					
ANR	10023500	ArgumentList	s		10023350	1					
ANR	10023501	Argument	s		10023350	0					
ANR	10023502	Identifier	s		10023350	0					
ANR	10023503	Argument	html_codes [ i ] . code		10023350	1					
ANR	10023504	MemberAccess	html_codes [ i ] . code		10023350	0					
ANR	10023505	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023506	Identifier	html_codes		10023350	0					
ANR	10023507	Identifier	i		10023350	1					
ANR	10023508	Identifier	code		10023350	1					
ANR	10023509	Argument	html_codes [ i ] . len		10023350	2					
ANR	10023510	MemberAccess	html_codes [ i ] . len		10023350	0					
ANR	10023511	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023512	Identifier	html_codes		10023350	0					
ANR	10023513	Identifier	i		10023350	1					
ANR	10023514	Identifier	len		10023350	1					
ANR	10023515	PrimaryExpression	0		10023350	1					
ANR	10023516	CompoundStatement		34:14:665:665	10023350	1					
ANR	10023517	ExpressionStatement	"strcpy ( s + 1 , s + html_codes [ i ] . len )"	185:16:3657:3689	10023350	0	True				
ANR	10023518	CallExpression	"strcpy ( s + 1 , s + html_codes [ i ] . len )"		10023350	0					
ANR	10023519	Callee	strcpy		10023350	0					
ANR	10023520	Identifier	strcpy		10023350	0					
ANR	10023521	ArgumentList	s + 1		10023350	1					
ANR	10023522	Argument	s + 1		10023350	0					
ANR	10023523	AdditiveExpression	s + 1		10023350	0		+			
ANR	10023524	Identifier	s		10023350	0					
ANR	10023525	PrimaryExpression	1		10023350	1					
ANR	10023526	Argument	s + html_codes [ i ] . len		10023350	1					
ANR	10023527	AdditiveExpression	s + html_codes [ i ] . len		10023350	0		+			
ANR	10023528	Identifier	s		10023350	0					
ANR	10023529	MemberAccess	html_codes [ i ] . len		10023350	1					
ANR	10023530	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023531	Identifier	html_codes		10023350	0					
ANR	10023532	Identifier	i		10023350	1					
ANR	10023533	Identifier	len		10023350	1					
ANR	10023534	ExpressionStatement	* s = html_codes [ i ] . val	186:16:3707:3729	10023350	1	True				
ANR	10023535	AssignmentExpression	* s = html_codes [ i ] . val		10023350	0		=			
ANR	10023536	UnaryOperationExpression	* s		10023350	0					
ANR	10023537	UnaryOperator	*		10023350	0					
ANR	10023538	Identifier	s		10023350	1					
ANR	10023539	MemberAccess	html_codes [ i ] . val		10023350	1					
ANR	10023540	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023541	Identifier	html_codes		10023350	0					
ANR	10023542	Identifier	i		10023350	1					
ANR	10023543	Identifier	val		10023350	1					
ANR	10023544	ReturnStatement	return html_codes [ i ] . len - 1 ;	187:16:3747:3773	10023350	2	True				
ANR	10023545	AdditiveExpression	html_codes [ i ] . len - 1		10023350	0		-			
ANR	10023546	MemberAccess	html_codes [ i ] . len		10023350	0					
ANR	10023547	ArrayIndexing	html_codes [ i ]		10023350	0					
ANR	10023548	Identifier	html_codes		10023350	0					
ANR	10023549	Identifier	i		10023350	1					
ANR	10023550	Identifier	len		10023350	1					
ANR	10023551	PrimaryExpression	1		10023350	1					
ANR	10023552	ReturnStatement	return 0 ;	192:2:3810:3818	10023350	2	True				
ANR	10023553	PrimaryExpression	0		10023350	0					
ANR	10023554	ReturnType	int		10023350	1					
ANR	10023555	Identifier	convertHTMLcodes		10023350	2					
ANR	10023556	ParameterList	"char * s , int len"		10023350	3					
ANR	10023557	Parameter	char * s	150:21:2955:2961	10023350	0	True				
ANR	10023558	ParameterType	char *		10023350	0					
ANR	10023559	Identifier	s		10023350	1					
ANR	10023560	Parameter	int len	150:30:2964:2970	10023350	1	True				
ANR	10023561	ParameterType	int		10023350	0					
ANR	10023562	Identifier	len		10023350	1					
ANR	10023563	CFGEntryNode	ENTRY		10023350		True				
ANR	10023564	CFGExitNode	EXIT		10023350		True				
ANR	10023565	Symbol	val		10023350						
ANR	10023566	Symbol	& val		10023350						
ANR	10023567	Symbol	codes		10023350						
ANR	10023568	Symbol	html_codes [ i ] . code		10023350						
ANR	10023569	Symbol	NULL		10023350						
ANR	10023570	Symbol	i		10023350						
ANR	10023571	Symbol	html_codes [ i ] . val		10023350						
ANR	10023572	Symbol	html_codes		10023350						
ANR	10023573	Symbol	o		10023350						
ANR	10023574	Symbol	* html_codes		10023350						
ANR	10023575	Symbol	s		10023350						
ANR	10023576	Symbol	* i		10023350						
ANR	10023577	Symbol	len		10023350						
ANR	10023578	Symbol	sscanf		10023350						
ANR	10023579	Symbol	html_codes [ i ] . len		10023350						
ANR	10023580	Symbol	* o		10023350						
ANR	10023581	Symbol	* s		10023350						
ANR	10023582	Symbol	STRNICMP		10023350						
ANR	10023583	Function	formatIPTC	195:0:3823:6894							
ANR	10023584	FunctionDef	"formatIPTC (FILE * ifile , FILE * ofile)"		10023583	0					
ANR	10023585	CompoundStatement		196:0:3864:6894	10023583	0					
ANR	10023586	IdentifierDeclStatement	"unsigned int foundiptc , tagsfound ;"	197:2:3868:3909	10023583	0	True				
ANR	10023587	IdentifierDecl	foundiptc		10023583	0					
ANR	10023588	IdentifierDeclType	unsigned int		10023583	0					
ANR	10023589	Identifier	foundiptc		10023583	1					
ANR	10023590	IdentifierDecl	tagsfound		10023583	1					
ANR	10023591	IdentifierDeclType	unsigned int		10023583	0					
ANR	10023592	Identifier	tagsfound		10023583	1					
ANR	10023593	IdentifierDeclStatement	"char * readable , * str ;"	201:2:3914:3942	10023583	1	True				
ANR	10023594	IdentifierDecl	* readable		10023583	0					
ANR	10023595	IdentifierDeclType	char *		10023583	0					
ANR	10023596	Identifier	readable		10023583	1					
ANR	10023597	IdentifierDecl	* str		10023583	1					
ANR	10023598	IdentifierDeclType	char *		10023583	0					
ANR	10023599	Identifier	str		10023583	1					
ANR	10023600	IdentifierDeclStatement	"long tagindx , taglen ;"	205:2:3947:3975	10023583	2	True				
ANR	10023601	IdentifierDecl	tagindx		10023583	0					
ANR	10023602	IdentifierDeclType	long		10023583	0					
ANR	10023603	Identifier	tagindx		10023583	1					
ANR	10023604	IdentifierDecl	taglen		10023583	1					
ANR	10023605	IdentifierDeclType	long		10023583	0					
ANR	10023606	Identifier	taglen		10023583	1					
ANR	10023607	IdentifierDeclStatement	"int i , tagcount = sizeof ( tags ) / sizeof ( tag_spec ) ;"	209:2:3980:4037	10023583	3	True				
ANR	10023608	IdentifierDecl	i		10023583	0					
ANR	10023609	IdentifierDeclType	int		10023583	0					
ANR	10023610	Identifier	i		10023583	1					
ANR	10023611	IdentifierDecl	tagcount = sizeof ( tags ) / sizeof ( tag_spec )		10023583	1					
ANR	10023612	IdentifierDeclType	int		10023583	0					
ANR	10023613	Identifier	tagcount		10023583	1					
ANR	10023614	AssignmentExpression	tagcount = sizeof ( tags ) / sizeof ( tag_spec )		10023583	2		=			
ANR	10023615	Identifier	tagcount		10023583	0					
ANR	10023616	MultiplicativeExpression	sizeof ( tags ) / sizeof ( tag_spec )		10023583	1		/			
ANR	10023617	SizeofExpression	sizeof ( tags )		10023583	0					
ANR	10023618	Sizeof	sizeof		10023583	0					
ANR	10023619	SizeofOperand	tags		10023583	1					
ANR	10023620	SizeofExpression	sizeof ( tag_spec )		10023583	1					
ANR	10023621	Sizeof	sizeof		10023583	0					
ANR	10023622	SizeofOperand	tag_spec		10023583	1					
ANR	10023623	IdentifierDeclStatement	"int c , dataset , recnum ;"	213:2:4042:4076	10023583	4	True				
ANR	10023624	IdentifierDecl	c		10023583	0					
ANR	10023625	IdentifierDeclType	int		10023583	0					
ANR	10023626	Identifier	c		10023583	1					
ANR	10023627	IdentifierDecl	dataset		10023583	1					
ANR	10023628	IdentifierDeclType	int		10023583	0					
ANR	10023629	Identifier	dataset		10023583	1					
ANR	10023630	IdentifierDecl	recnum		10023583	2					
ANR	10023631	IdentifierDeclType	int		10023583	0					
ANR	10023632	Identifier	recnum		10023583	1					
ANR	10023633	ExpressionStatement	foundiptc = 0	218:2:4081:4094	10023583	5	True				
ANR	10023634	AssignmentExpression	foundiptc = 0		10023583	0		=			
ANR	10023635	Identifier	foundiptc		10023583	0					
ANR	10023636	PrimaryExpression	0		10023583	1					
ANR	10023637	ExpressionStatement	tagsfound = 0	219:2:4126:4139	10023583	6	True				
ANR	10023638	AssignmentExpression	tagsfound = 0		10023583	0		=			
ANR	10023639	Identifier	tagsfound		10023583	0					
ANR	10023640	PrimaryExpression	0		10023583	1					
ANR	10023641	ExpressionStatement	c = getc ( ifile )	221:2:4171:4186	10023583	7	True				
ANR	10023642	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10023643	Identifier	c		10023583	0					
ANR	10023644	CallExpression	getc ( ifile )		10023583	1					
ANR	10023645	Callee	getc		10023583	0					
ANR	10023646	Identifier	getc		10023583	0					
ANR	10023647	ArgumentList	ifile		10023583	1					
ANR	10023648	Argument	ifile		10023583	0					
ANR	10023649	Identifier	ifile		10023583	0					
ANR	10023650	WhileStatement	while ( c != EOF )		10023583	8					
ANR	10023651	Condition	c != EOF	222:9:4197:4204	10023583	0	True				
ANR	10023652	EqualityExpression	c != EOF		10023583	0		!=			
ANR	10023653	Identifier	c		10023583	0					
ANR	10023654	Identifier	EOF		10023583	1					
ANR	10023655	CompoundStatement		28:4:346:346	10023583	1					
ANR	10023656	IfStatement	if ( c == 0x1c )		10023583	0					
ANR	10023657	Condition	c == 0x1c	224:10:4223:4231	10023583	0	True				
ANR	10023658	EqualityExpression	c == 0x1c		10023583	0		==			
ANR	10023659	Identifier	c		10023583	0					
ANR	10023660	PrimaryExpression	0x1c		10023583	1					
ANR	10023661	ExpressionStatement	foundiptc = 1	225:8:4242:4255	10023583	1	True				
ANR	10023662	AssignmentExpression	foundiptc = 1		10023583	0		=			
ANR	10023663	Identifier	foundiptc		10023583	0					
ANR	10023664	PrimaryExpression	1		10023583	1					
ANR	10023665	ElseStatement	else		10023583	0					
ANR	10023666	CompoundStatement		32:8:411:411	10023583	0					
ANR	10023667	IfStatement	if ( foundiptc )		10023583	0					
ANR	10023668	Condition	foundiptc	228:14:4292:4300	10023583	0	True				
ANR	10023669	Identifier	foundiptc		10023583	0					
ANR	10023670	CompoundStatement		34:12:450:450	10023583	1					
ANR	10023671	ReturnStatement	return - 1 ;	230:14:4331:4340	10023583	0	True				
ANR	10023672	UnaryOperationExpression	- 1		10023583	0					
ANR	10023673	UnaryOperator	-		10023583	0					
ANR	10023674	PrimaryExpression	1		10023583	1					
ANR	10023675	ElseStatement	else		10023583	0					
ANR	10023676	CompoundStatement		38:12:518:518	10023583	0					
ANR	10023677	ExpressionStatement	c = getc ( ifile )	234:14:4399:4414	10023583	0	True				
ANR	10023678	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10023679	Identifier	c		10023583	0					
ANR	10023680	CallExpression	getc ( ifile )		10023583	1					
ANR	10023681	Callee	getc		10023583	0					
ANR	10023682	Identifier	getc		10023583	0					
ANR	10023683	ArgumentList	ifile		10023583	1					
ANR	10023684	Argument	ifile		10023583	0					
ANR	10023685	Identifier	ifile		10023583	0					
ANR	10023686	ContinueStatement	continue ;	235:14:4430:4438	10023583	1	True				
ANR	10023687	ExpressionStatement	dataset = getc ( ifile )	240:6:4553:4574	10023583	1	True				
ANR	10023688	AssignmentExpression	dataset = getc ( ifile )		10023583	0		=			
ANR	10023689	Identifier	dataset		10023583	0					
ANR	10023690	CallExpression	getc ( ifile )		10023583	1					
ANR	10023691	Callee	getc		10023583	0					
ANR	10023692	Identifier	getc		10023583	0					
ANR	10023693	ArgumentList	ifile		10023583	1					
ANR	10023694	Argument	ifile		10023583	0					
ANR	10023695	Identifier	ifile		10023583	0					
ANR	10023696	IfStatement	if ( ( char ) dataset == EOF )		10023583	2					
ANR	10023697	Condition	( char ) dataset == EOF	241:10:4586:4606	10023583	0	True				
ANR	10023698	EqualityExpression	( char ) dataset == EOF		10023583	0		==			
ANR	10023699	CastExpression	( char ) dataset		10023583	0					
ANR	10023700	CastTarget	char		10023583	0					
ANR	10023701	Identifier	dataset		10023583	1					
ANR	10023702	Identifier	EOF		10023583	1					
ANR	10023703	ReturnStatement	return - 1 ;	242:8:4617:4626	10023583	1	True				
ANR	10023704	UnaryOperationExpression	- 1		10023583	0					
ANR	10023705	UnaryOperator	-		10023583	0					
ANR	10023706	PrimaryExpression	1		10023583	1					
ANR	10023707	ExpressionStatement	recnum = getc ( ifile )	243:6:4634:4654	10023583	3	True				
ANR	10023708	AssignmentExpression	recnum = getc ( ifile )		10023583	0		=			
ANR	10023709	Identifier	recnum		10023583	0					
ANR	10023710	CallExpression	getc ( ifile )		10023583	1					
ANR	10023711	Callee	getc		10023583	0					
ANR	10023712	Identifier	getc		10023583	0					
ANR	10023713	ArgumentList	ifile		10023583	1					
ANR	10023714	Argument	ifile		10023583	0					
ANR	10023715	Identifier	ifile		10023583	0					
ANR	10023716	IfStatement	if ( ( char ) recnum == EOF )		10023583	4					
ANR	10023717	Condition	( char ) recnum == EOF	244:10:4666:4685	10023583	0	True				
ANR	10023718	EqualityExpression	( char ) recnum == EOF		10023583	0		==			
ANR	10023719	CastExpression	( char ) recnum		10023583	0					
ANR	10023720	CastTarget	char		10023583	0					
ANR	10023721	Identifier	recnum		10023583	1					
ANR	10023722	Identifier	EOF		10023583	1					
ANR	10023723	ReturnStatement	return - 1 ;	245:8:4696:4705	10023583	1	True				
ANR	10023724	UnaryOperationExpression	- 1		10023583	0					
ANR	10023725	UnaryOperator	-		10023583	0					
ANR	10023726	PrimaryExpression	1		10023583	1					
ANR	10023727	ForStatement	for ( i = 0 ; i < tagcount ; i ++ )		10023583	5					
ANR	10023728	ForInit	i = 0 ;	247:11:4793:4796	10023583	0	True				
ANR	10023729	AssignmentExpression	i = 0		10023583	0		=			
ANR	10023730	Identifier	i		10023583	0					
ANR	10023731	PrimaryExpression	0		10023583	1					
ANR	10023732	Condition	i < tagcount	247:16:4798:4808	10023583	1	True				
ANR	10023733	RelationalExpression	i < tagcount		10023583	0		<			
ANR	10023734	Identifier	i		10023583	0					
ANR	10023735	Identifier	tagcount		10023583	1					
ANR	10023736	PostIncDecOperationExpression	i ++	247:29:4811:4813	10023583	2	True				
ANR	10023737	Identifier	i		10023583	0					
ANR	10023738	IncDec	++		10023583	1					
ANR	10023739	CompoundStatement		53:8:959:959	10023583	3					
ANR	10023740	IfStatement	if ( tags [ i ] . id == recnum )		10023583	0					
ANR	10023741	Condition	tags [ i ] . id == recnum	249:14:4840:4859	10023583	0	True				
ANR	10023742	EqualityExpression	tags [ i ] . id == recnum		10023583	0		==			
ANR	10023743	MemberAccess	tags [ i ] . id		10023583	0					
ANR	10023744	ArrayIndexing	tags [ i ]		10023583	0					
ANR	10023745	Identifier	tags		10023583	0					
ANR	10023746	Identifier	i		10023583	1					
ANR	10023747	Identifier	id		10023583	1					
ANR	10023748	Identifier	recnum		10023583	1					
ANR	10023749	BreakStatement	break ;	250:12:4874:4879	10023583	1	True				
ANR	10023750	IfStatement	if ( i < tagcount )		10023583	6					
ANR	10023751	Condition	i < tagcount	252:10:4901:4912	10023583	0	True				
ANR	10023752	RelationalExpression	i < tagcount		10023583	0		<			
ANR	10023753	Identifier	i		10023583	0					
ANR	10023754	Identifier	tagcount		10023583	1					
ANR	10023755	ExpressionStatement	readable = tags [ i ] . name	253:8:4923:4946	10023583	1	True				
ANR	10023756	AssignmentExpression	readable = tags [ i ] . name		10023583	0		=			
ANR	10023757	Identifier	readable		10023583	0					
ANR	10023758	MemberAccess	tags [ i ] . name		10023583	1					
ANR	10023759	ArrayIndexing	tags [ i ]		10023583	0					
ANR	10023760	Identifier	tags		10023583	0					
ANR	10023761	Identifier	i		10023583	1					
ANR	10023762	Identifier	name		10023583	1					
ANR	10023763	ElseStatement	else		10023583	0					
ANR	10023764	ExpressionStatement	"readable = """""	255:8:4967:4980	10023583	0	True				
ANR	10023765	AssignmentExpression	"readable = """""		10023583	0		=			
ANR	10023766	Identifier	readable		10023583	0					
ANR	10023767	PrimaryExpression	""""""		10023583	1					
ANR	10023768	ExpressionStatement	c = getc ( ifile )	258:6:5073:5088	10023583	7	True				
ANR	10023769	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10023770	Identifier	c		10023583	0					
ANR	10023771	CallExpression	getc ( ifile )		10023583	1					
ANR	10023772	Callee	getc		10023583	0					
ANR	10023773	Identifier	getc		10023583	0					
ANR	10023774	ArgumentList	ifile		10023583	1					
ANR	10023775	Argument	ifile		10023583	0					
ANR	10023776	Identifier	ifile		10023583	0					
ANR	10023777	IfStatement	if ( c == EOF )		10023583	8					
ANR	10023778	Condition	c == EOF	259:10:5100:5107	10023583	0	True				
ANR	10023779	EqualityExpression	c == EOF		10023583	0		==			
ANR	10023780	Identifier	c		10023583	0					
ANR	10023781	Identifier	EOF		10023583	1					
ANR	10023782	ReturnStatement	return 0 ;	260:8:5118:5126	10023583	1	True				
ANR	10023783	PrimaryExpression	0		10023583	0					
ANR	10023784	IfStatement	if ( c & ( unsigned char ) 0x80 )		10023583	9					
ANR	10023785	Condition	c & ( unsigned char ) 0x80	261:10:5138:5161	10023583	0	True				
ANR	10023786	BitAndExpression	c & ( unsigned char ) 0x80		10023583	0		&			
ANR	10023787	Identifier	c		10023583	0					
ANR	10023788	CastExpression	( unsigned char ) 0x80		10023583	1					
ANR	10023789	CastTarget	unsigned char		10023583	0					
ANR	10023790	PrimaryExpression	0x80		10023583	1					
ANR	10023791	CompoundStatement		68:10:1319:1354	10023583	1					
ANR	10023792	IdentifierDeclStatement	unsigned char buffer [ 4 ] ;	263:10:5184:5219	10023583	0	True				
ANR	10023793	IdentifierDecl	buffer [ 4 ]		10023583	0					
ANR	10023794	IdentifierDeclType	unsigned char [ 4 ]		10023583	0					
ANR	10023795	Identifier	buffer		10023583	1					
ANR	10023796	PrimaryExpression	4		10023583	2					
ANR	10023797	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10023583	1					
ANR	10023798	ForInit	i = 0 ;	266:15:5237:5240	10023583	0	True				
ANR	10023799	AssignmentExpression	i = 0		10023583	0		=			
ANR	10023800	Identifier	i		10023583	0					
ANR	10023801	PrimaryExpression	0		10023583	1					
ANR	10023802	Condition	i < 4	266:20:5242:5244	10023583	1	True				
ANR	10023803	RelationalExpression	i < 4		10023583	0		<			
ANR	10023804	Identifier	i		10023583	0					
ANR	10023805	PrimaryExpression	4		10023583	1					
ANR	10023806	PostIncDecOperationExpression	i ++	266:25:5247:5249	10023583	2	True				
ANR	10023807	Identifier	i		10023583	0					
ANR	10023808	IncDec	++		10023583	1					
ANR	10023809	CompoundStatement		72:12:1399:1399	10023583	3					
ANR	10023810	ExpressionStatement	c = getc ( ifile )	268:14:5280:5295	10023583	0	True				
ANR	10023811	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10023812	Identifier	c		10023583	0					
ANR	10023813	CallExpression	getc ( ifile )		10023583	1					
ANR	10023814	Callee	getc		10023583	0					
ANR	10023815	Identifier	getc		10023583	0					
ANR	10023816	ArgumentList	ifile		10023583	1					
ANR	10023817	Argument	ifile		10023583	0					
ANR	10023818	Identifier	ifile		10023583	0					
ANR	10023819	IfStatement	if ( c == EOF )		10023583	1					
ANR	10023820	Condition	c == EOF	269:18:5315:5322	10023583	0	True				
ANR	10023821	EqualityExpression	c == EOF		10023583	0		==			
ANR	10023822	Identifier	c		10023583	0					
ANR	10023823	Identifier	EOF		10023583	1					
ANR	10023824	ReturnStatement	return - 1 ;	270:16:5341:5350	10023583	1	True				
ANR	10023825	UnaryOperationExpression	- 1		10023583	0					
ANR	10023826	UnaryOperator	-		10023583	0					
ANR	10023827	PrimaryExpression	1		10023583	1					
ANR	10023828	ExpressionStatement	buffer [ i ] = c	271:14:5366:5379	10023583	2	True				
ANR	10023829	AssignmentExpression	buffer [ i ] = c		10023583	0		=			
ANR	10023830	ArrayIndexing	buffer [ i ]		10023583	0					
ANR	10023831	Identifier	buffer		10023583	0					
ANR	10023832	Identifier	i		10023583	1					
ANR	10023833	Identifier	c		10023583	1					
ANR	10023834	ExpressionStatement	taglen = ( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )	273:10:5405:5566	10023583	2	True				
ANR	10023835	AssignmentExpression	taglen = ( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		10023583	0		=			
ANR	10023836	Identifier	taglen		10023583	0					
ANR	10023837	InclusiveOrExpression	( ( ( long ) buffer [ 0 ] ) << 24 ) | ( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		10023583	1		|			
ANR	10023838	ShiftExpression	( ( long ) buffer [ 0 ] ) << 24		10023583	0		<<			
ANR	10023839	CastExpression	( long ) buffer [ 0 ]		10023583	0					
ANR	10023840	CastTarget	long		10023583	0					
ANR	10023841	ArrayIndexing	buffer [ 0 ]		10023583	1					
ANR	10023842	Identifier	buffer		10023583	0					
ANR	10023843	PrimaryExpression	0		10023583	1					
ANR	10023844	PrimaryExpression	24		10023583	1					
ANR	10023845	InclusiveOrExpression	( ( ( long ) buffer [ 1 ] ) << 16 ) | ( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		10023583	1		|			
ANR	10023846	ShiftExpression	( ( long ) buffer [ 1 ] ) << 16		10023583	0		<<			
ANR	10023847	CastExpression	( long ) buffer [ 1 ]		10023583	0					
ANR	10023848	CastTarget	long		10023583	0					
ANR	10023849	ArrayIndexing	buffer [ 1 ]		10023583	1					
ANR	10023850	Identifier	buffer		10023583	0					
ANR	10023851	PrimaryExpression	1		10023583	1					
ANR	10023852	PrimaryExpression	16		10023583	1					
ANR	10023853	InclusiveOrExpression	( ( ( long ) buffer [ 2 ] ) << 8 ) | ( ( ( long ) buffer [ 3 ] ) )		10023583	1		|			
ANR	10023854	ShiftExpression	( ( long ) buffer [ 2 ] ) << 8		10023583	0		<<			
ANR	10023855	CastExpression	( long ) buffer [ 2 ]		10023583	0					
ANR	10023856	CastTarget	long		10023583	0					
ANR	10023857	ArrayIndexing	buffer [ 2 ]		10023583	1					
ANR	10023858	Identifier	buffer		10023583	0					
ANR	10023859	PrimaryExpression	2		10023583	1					
ANR	10023860	PrimaryExpression	8		10023583	1					
ANR	10023861	CastExpression	( long ) buffer [ 3 ]		10023583	1					
ANR	10023862	CastTarget	long		10023583	0					
ANR	10023863	ArrayIndexing	buffer [ 3 ]		10023583	1					
ANR	10023864	Identifier	buffer		10023583	0					
ANR	10023865	PrimaryExpression	3		10023583	1					
ANR	10023866	ElseStatement	else		10023583	0					
ANR	10023867	CompoundStatement		85:10:1744:1765	10023583	0					
ANR	10023868	IdentifierDeclStatement	int x = c ;	280:10:5609:5630	10023583	0	True				
ANR	10023869	IdentifierDecl	x = c		10023583	0					
ANR	10023870	IdentifierDeclType	int		10023583	0					
ANR	10023871	Identifier	x		10023583	1					
ANR	10023872	AssignmentExpression	x = c		10023583	2		=			
ANR	10023873	Identifier	c		10023583	0					
ANR	10023874	Identifier	c		10023583	1					
ANR	10023875	ExpressionStatement	taglen = x << 8	283:10:5643:5658	10023583	1	True				
ANR	10023876	AssignmentExpression	taglen = x << 8		10023583	0		=			
ANR	10023877	Identifier	taglen		10023583	0					
ANR	10023878	ShiftExpression	x << 8		10023583	1		<<			
ANR	10023879	Identifier	x		10023583	0					
ANR	10023880	PrimaryExpression	8		10023583	1					
ANR	10023881	ExpressionStatement	x = getc ( ifile )	284:10:5670:5685	10023583	2	True				
ANR	10023882	AssignmentExpression	x = getc ( ifile )		10023583	0		=			
ANR	10023883	Identifier	x		10023583	0					
ANR	10023884	CallExpression	getc ( ifile )		10023583	1					
ANR	10023885	Callee	getc		10023583	0					
ANR	10023886	Identifier	getc		10023583	0					
ANR	10023887	ArgumentList	ifile		10023583	1					
ANR	10023888	Argument	ifile		10023583	0					
ANR	10023889	Identifier	ifile		10023583	0					
ANR	10023890	IfStatement	if ( x == EOF )		10023583	3					
ANR	10023891	Condition	x == EOF	285:14:5701:5708	10023583	0	True				
ANR	10023892	EqualityExpression	x == EOF		10023583	0		==			
ANR	10023893	Identifier	x		10023583	0					
ANR	10023894	Identifier	EOF		10023583	1					
ANR	10023895	ReturnStatement	return - 1 ;	286:12:5723:5732	10023583	1	True				
ANR	10023896	UnaryOperationExpression	- 1		10023583	0					
ANR	10023897	UnaryOperator	-		10023583	0					
ANR	10023898	PrimaryExpression	1		10023583	1					
ANR	10023899	ExpressionStatement	taglen |= ( long ) x	287:10:5744:5762	10023583	4	True				
ANR	10023900	AssignmentExpression	taglen |= ( long ) x		10023583	0		|=			
ANR	10023901	Identifier	taglen		10023583	0					
ANR	10023902	CastExpression	( long ) x		10023583	1					
ANR	10023903	CastTarget	long		10023583	0					
ANR	10023904	Identifier	x		10023583	1					
ANR	10023905	IfStatement	if ( ( taglen <= 0 ) || ( taglen > 1048576 ) )		10023583	10					
ANR	10023906	Condition	( taglen <= 0 ) || ( taglen > 1048576 )	290:10:5823:5857	10023583	0	True				
ANR	10023907	OrExpression	( taglen <= 0 ) || ( taglen > 1048576 )		10023583	0		||			
ANR	10023908	RelationalExpression	taglen <= 0		10023583	0		<=			
ANR	10023909	Identifier	taglen		10023583	0					
ANR	10023910	PrimaryExpression	0		10023583	1					
ANR	10023911	RelationalExpression	taglen > 1048576		10023583	1		>			
ANR	10023912	Identifier	taglen		10023583	0					
ANR	10023913	PrimaryExpression	1048576		10023583	1					
ANR	10023914	CompoundStatement		96:8:2003:2003	10023583	1					
ANR	10023915	ExpressionStatement	"printf ( ""Inappropriate IPTC tag length %ld\\n"" , taglen )"	292:10:5880:5932	10023583	0	True				
ANR	10023916	CallExpression	"printf ( ""Inappropriate IPTC tag length %ld\\n"" , taglen )"		10023583	0					
ANR	10023917	Callee	printf		10023583	0					
ANR	10023918	Identifier	printf		10023583	0					
ANR	10023919	ArgumentList	"""Inappropriate IPTC tag length %ld\\n"""		10023583	1					
ANR	10023920	Argument	"""Inappropriate IPTC tag length %ld\\n"""		10023583	0					
ANR	10023921	PrimaryExpression	"""Inappropriate IPTC tag length %ld\\n"""		10023583	0					
ANR	10023922	Argument	taglen		10023583	1					
ANR	10023923	Identifier	taglen		10023583	0					
ANR	10023924	ReturnStatement	return - 1 ;	293:10:5944:5953	10023583	1	True				
ANR	10023925	UnaryOperationExpression	- 1		10023583	0					
ANR	10023926	UnaryOperator	-		10023583	0					
ANR	10023927	PrimaryExpression	1		10023583	1					
ANR	10023928	ExpressionStatement	str = ( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )	296:6:6052:6100	10023583	11	True				
ANR	10023929	AssignmentExpression	str = ( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )		10023583	0		=			
ANR	10023930	Identifier	str		10023583	0					
ANR	10023931	CastExpression	( char * ) malloc ( ( unsigned int ) ( taglen + 1 ) )		10023583	1					
ANR	10023932	CastTarget	char *		10023583	0					
ANR	10023933	CallExpression	malloc ( ( unsigned int ) ( taglen + 1 ) )		10023583	1					
ANR	10023934	Callee	malloc		10023583	0					
ANR	10023935	Identifier	malloc		10023583	0					
ANR	10023936	ArgumentList	( unsigned int ) ( taglen + 1 )		10023583	1					
ANR	10023937	Argument	( unsigned int ) ( taglen + 1 )		10023583	0					
ANR	10023938	CastExpression	( unsigned int ) ( taglen + 1 )		10023583	0					
ANR	10023939	CastTarget	unsigned int		10023583	0					
ANR	10023940	AdditiveExpression	taglen + 1		10023583	1		+			
ANR	10023941	Identifier	taglen		10023583	0					
ANR	10023942	PrimaryExpression	1		10023583	1					
ANR	10023943	IfStatement	if ( str == ( char * ) NULL )		10023583	12					
ANR	10023944	Condition	str == ( char * ) NULL	297:10:6112:6131	10023583	0	True				
ANR	10023945	EqualityExpression	str == ( char * ) NULL		10023583	0		==			
ANR	10023946	Identifier	str		10023583	0					
ANR	10023947	CastExpression	( char * ) NULL		10023583	1					
ANR	10023948	CastTarget	char *		10023583	0					
ANR	10023949	Identifier	NULL		10023583	1					
ANR	10023950	CompoundStatement		103:8:2277:2277	10023583	1					
ANR	10023951	ExpressionStatement	"printf ( ""Memory allocation failed"" )"	299:10:6154:6188	10023583	0	True				
ANR	10023952	CallExpression	"printf ( ""Memory allocation failed"" )"		10023583	0					
ANR	10023953	Callee	printf		10023583	0					
ANR	10023954	Identifier	printf		10023583	0					
ANR	10023955	ArgumentList	"""Memory allocation failed"""		10023583	1					
ANR	10023956	Argument	"""Memory allocation failed"""		10023583	0					
ANR	10023957	PrimaryExpression	"""Memory allocation failed"""		10023583	0					
ANR	10023958	ReturnStatement	return 0 ;	300:10:6200:6208	10023583	1	True				
ANR	10023959	PrimaryExpression	0		10023583	0					
ANR	10023960	ForStatement	for ( tagindx = 0 ; tagindx < taglen ; tagindx ++ )		10023583	13					
ANR	10023961	ForInit	tagindx = 0 ;	302:11:6231:6240	10023583	0	True				
ANR	10023962	AssignmentExpression	tagindx = 0		10023583	0		=			
ANR	10023963	Identifier	tagindx		10023583	0					
ANR	10023964	PrimaryExpression	0		10023583	1					
ANR	10023965	Condition	tagindx < taglen	302:22:6242:6255	10023583	1	True				
ANR	10023966	RelationalExpression	tagindx < taglen		10023583	0		<			
ANR	10023967	Identifier	tagindx		10023583	0					
ANR	10023968	Identifier	taglen		10023583	1					
ANR	10023969	PostIncDecOperationExpression	tagindx ++	302:38:6258:6266	10023583	2	True				
ANR	10023970	Identifier	tagindx		10023583	0					
ANR	10023971	IncDec	++		10023583	1					
ANR	10023972	CompoundStatement		108:8:2412:2412	10023583	3					
ANR	10023973	ExpressionStatement	c = getc ( ifile )	304:10:6289:6304	10023583	0	True				
ANR	10023974	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10023975	Identifier	c		10023583	0					
ANR	10023976	CallExpression	getc ( ifile )		10023583	1					
ANR	10023977	Callee	getc		10023583	0					
ANR	10023978	Identifier	getc		10023583	0					
ANR	10023979	ArgumentList	ifile		10023583	1					
ANR	10023980	Argument	ifile		10023583	0					
ANR	10023981	Identifier	ifile		10023583	0					
ANR	10023982	IfStatement	if ( c == EOF )		10023583	1					
ANR	10023983	Condition	c == EOF	305:14:6320:6327	10023583	0	True				
ANR	10023984	EqualityExpression	c == EOF		10023583	0		==			
ANR	10023985	Identifier	c		10023583	0					
ANR	10023986	Identifier	EOF		10023583	1					
ANR	10023987	CompoundStatement		111:12:2477:2477	10023583	1					
ANR	10023988	ExpressionStatement	free ( str )	307:14:6358:6367	10023583	0	True				
ANR	10023989	CallExpression	free ( str )		10023583	0					
ANR	10023990	Callee	free		10023583	0					
ANR	10023991	Identifier	free		10023583	0					
ANR	10023992	ArgumentList	str		10023583	1					
ANR	10023993	Argument	str		10023583	0					
ANR	10023994	Identifier	str		10023583	0					
ANR	10023995	ReturnStatement	return - 1 ;	308:14:6383:6392	10023583	1	True				
ANR	10023996	UnaryOperationExpression	- 1		10023583	0					
ANR	10023997	UnaryOperator	-		10023583	0					
ANR	10023998	PrimaryExpression	1		10023583	1					
ANR	10023999	ExpressionStatement	str [ tagindx ] = c	310:10:6418:6434	10023583	2	True				
ANR	10024000	AssignmentExpression	str [ tagindx ] = c		10023583	0		=			
ANR	10024001	ArrayIndexing	str [ tagindx ]		10023583	0					
ANR	10024002	Identifier	str		10023583	0					
ANR	10024003	Identifier	tagindx		10023583	1					
ANR	10024004	Identifier	c		10023583	1					
ANR	10024005	ExpressionStatement	str [ taglen ] = 0	312:6:6452:6469	10023583	14	True				
ANR	10024006	AssignmentExpression	str [ taglen ] = 0		10023583	0		=			
ANR	10024007	ArrayIndexing	str [ taglen ]		10023583	0					
ANR	10024008	Identifier	str		10023583	0					
ANR	10024009	Identifier	taglen		10023583	1					
ANR	10024010	PrimaryExpression	0		10023583	1					
ANR	10024011	IfStatement	if ( strlen ( readable ) > 0 )		10023583	15					
ANR	10024012	Condition	strlen ( readable ) > 0	315:10:6561:6580	10023583	0	True				
ANR	10024013	RelationalExpression	strlen ( readable ) > 0		10023583	0		>			
ANR	10024014	CallExpression	strlen ( readable )		10023583	0					
ANR	10024015	Callee	strlen		10023583	0					
ANR	10024016	Identifier	strlen		10023583	0					
ANR	10024017	ArgumentList	readable		10023583	1					
ANR	10024018	Argument	readable		10023583	0					
ANR	10024019	Identifier	readable		10023583	0					
ANR	10024020	PrimaryExpression	0		10023583	1					
ANR	10024021	ExpressionStatement	"fprintf ( ofile , ""%d#%d#%s="" , ( unsigned int ) dataset , ( unsigned int ) recnum , readable )"	316:8:6591:6673	10023583	1	True				
ANR	10024022	CallExpression	"fprintf ( ofile , ""%d#%d#%s="" , ( unsigned int ) dataset , ( unsigned int ) recnum , readable )"		10023583	0					
ANR	10024023	Callee	fprintf		10023583	0					
ANR	10024024	Identifier	fprintf		10023583	0					
ANR	10024025	ArgumentList	ofile		10023583	1					
ANR	10024026	Argument	ofile		10023583	0					
ANR	10024027	Identifier	ofile		10023583	0					
ANR	10024028	Argument	"""%d#%d#%s="""		10023583	1					
ANR	10024029	PrimaryExpression	"""%d#%d#%s="""		10023583	0					
ANR	10024030	Argument	( unsigned int ) dataset		10023583	2					
ANR	10024031	CastExpression	( unsigned int ) dataset		10023583	0					
ANR	10024032	CastTarget	unsigned int		10023583	0					
ANR	10024033	Identifier	dataset		10023583	1					
ANR	10024034	Argument	( unsigned int ) recnum		10023583	3					
ANR	10024035	CastExpression	( unsigned int ) recnum		10023583	0					
ANR	10024036	CastTarget	unsigned int		10023583	0					
ANR	10024037	Identifier	recnum		10023583	1					
ANR	10024038	Argument	readable		10023583	4					
ANR	10024039	Identifier	readable		10023583	0					
ANR	10024040	ElseStatement	else		10023583	0					
ANR	10024041	ExpressionStatement	"fprintf ( ofile , ""%d#%d="" , ( unsigned int ) dataset , ( unsigned int ) recnum )"	318:8:6694:6763	10023583	0	True				
ANR	10024042	CallExpression	"fprintf ( ofile , ""%d#%d="" , ( unsigned int ) dataset , ( unsigned int ) recnum )"		10023583	0					
ANR	10024043	Callee	fprintf		10023583	0					
ANR	10024044	Identifier	fprintf		10023583	0					
ANR	10024045	ArgumentList	ofile		10023583	1					
ANR	10024046	Argument	ofile		10023583	0					
ANR	10024047	Identifier	ofile		10023583	0					
ANR	10024048	Argument	"""%d#%d="""		10023583	1					
ANR	10024049	PrimaryExpression	"""%d#%d="""		10023583	0					
ANR	10024050	Argument	( unsigned int ) dataset		10023583	2					
ANR	10024051	CastExpression	( unsigned int ) dataset		10023583	0					
ANR	10024052	CastTarget	unsigned int		10023583	0					
ANR	10024053	Identifier	dataset		10023583	1					
ANR	10024054	Argument	( unsigned int ) recnum		10023583	3					
ANR	10024055	CastExpression	( unsigned int ) recnum		10023583	0					
ANR	10024056	CastTarget	unsigned int		10023583	0					
ANR	10024057	Identifier	recnum		10023583	1					
ANR	10024058	ExpressionStatement	"formatString ( ofile , str , taglen )"	319:6:6771:6805	10023583	16	True				
ANR	10024059	CallExpression	"formatString ( ofile , str , taglen )"		10023583	0					
ANR	10024060	Callee	formatString		10023583	0					
ANR	10024061	Identifier	formatString		10023583	0					
ANR	10024062	ArgumentList	ofile		10023583	1					
ANR	10024063	Argument	ofile		10023583	0					
ANR	10024064	Identifier	ofile		10023583	0					
ANR	10024065	Argument	str		10023583	1					
ANR	10024066	Identifier	str		10023583	0					
ANR	10024067	Argument	taglen		10023583	2					
ANR	10024068	Identifier	taglen		10023583	0					
ANR	10024069	ExpressionStatement	free ( str )	320:6:6813:6822	10023583	17	True				
ANR	10024070	CallExpression	free ( str )		10023583	0					
ANR	10024071	Callee	free		10023583	0					
ANR	10024072	Identifier	free		10023583	0					
ANR	10024073	ArgumentList	str		10023583	1					
ANR	10024074	Argument	str		10023583	0					
ANR	10024075	Identifier	str		10023583	0					
ANR	10024076	ExpressionStatement	tagsfound ++	322:6:6831:6842	10023583	18	True				
ANR	10024077	PostIncDecOperationExpression	tagsfound ++		10023583	0					
ANR	10024078	Identifier	tagsfound		10023583	0					
ANR	10024079	IncDec	++		10023583	1					
ANR	10024080	ExpressionStatement	c = getc ( ifile )	324:6:6851:6866	10023583	19	True				
ANR	10024081	AssignmentExpression	c = getc ( ifile )		10023583	0		=			
ANR	10024082	Identifier	c		10023583	0					
ANR	10024083	CallExpression	getc ( ifile )		10023583	1					
ANR	10024084	Callee	getc		10023583	0					
ANR	10024085	Identifier	getc		10023583	0					
ANR	10024086	ArgumentList	ifile		10023583	1					
ANR	10024087	Argument	ifile		10023583	0					
ANR	10024088	Identifier	ifile		10023583	0					
ANR	10024089	ReturnStatement	return tagsfound ;	326:2:6876:6892	10023583	9	True				
ANR	10024090	Identifier	tagsfound		10023583	0					
ANR	10024091	ReturnType	int		10023583	1					
ANR	10024092	Identifier	formatIPTC		10023583	2					
ANR	10024093	ParameterList	"FILE * ifile , FILE * ofile"		10023583	3					
ANR	10024094	Parameter	FILE * ifile	195:15:3838:3848	10023583	0	True				
ANR	10024095	ParameterType	FILE *		10023583	0					
ANR	10024096	Identifier	ifile		10023583	1					
ANR	10024097	Parameter	FILE * ofile	195:28:3851:3861	10023583	1	True				
ANR	10024098	ParameterType	FILE *		10023583	0					
ANR	10024099	Identifier	ofile		10023583	1					
ANR	10024100	CFGEntryNode	ENTRY		10023583		True				
ANR	10024101	CFGExitNode	EXIT		10023583		True				
ANR	10024102	Symbol	taglen		10023583						
ANR	10024103	Symbol	* taglen		10023583						
ANR	10024104	Symbol	* tagindx		10023583						
ANR	10024105	Symbol	tagsfound		10023583						
ANR	10024106	Symbol	strlen		10023583						
ANR	10024107	Symbol	ifile		10023583						
ANR	10024108	Symbol	tagcount		10023583						
ANR	10024109	Symbol	buffer		10023583						
ANR	10024110	Symbol	* str		10023583						
ANR	10024111	Symbol	EOF		10023583						
ANR	10024112	Symbol	foundiptc		10023583						
ANR	10024113	Symbol	readable		10023583						
ANR	10024114	Symbol	malloc		10023583						
ANR	10024115	Symbol	* buffer		10023583						
ANR	10024116	Symbol	c		10023583						
ANR	10024117	Symbol	NULL		10023583						
ANR	10024118	Symbol	tagindx		10023583						
ANR	10024119	Symbol	ofile		10023583						
ANR	10024120	Symbol	i		10023583						
ANR	10024121	Symbol	* tags		10023583						
ANR	10024122	Symbol	tags		10023583						
ANR	10024123	Symbol	str		10023583						
ANR	10024124	Symbol	recnum		10023583						
ANR	10024125	Symbol	* i		10023583						
ANR	10024126	Symbol	tags [ i ] . id		10023583						
ANR	10024127	Symbol	tags [ i ] . name		10023583						
ANR	10024128	Symbol	x		10023583						
ANR	10024129	Symbol	dataset		10023583						
ANR	10024130	Symbol	getc		10023583						
ANR	10024131	DeclStmt									
ANR	10024132	Decl							int	"int ( unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted )"	tokenizer
ANR	10024133	Function	super_fgets	333:0:7053:7807							
ANR	10024134	FunctionDef	"super_fgets (char * b , int * blen , FILE * file)"		10024133	0					
ANR	10024135	CompoundStatement		334:0:7103:7807	10024133	0					
ANR	10024136	IdentifierDeclStatement	"int c , len ;"	335:2:7107:7125	10024133	0	True				
ANR	10024137	IdentifierDecl	c		10024133	0					
ANR	10024138	IdentifierDeclType	int		10024133	0					
ANR	10024139	Identifier	c		10024133	1					
ANR	10024140	IdentifierDecl	len		10024133	1					
ANR	10024141	IdentifierDeclType	int		10024133	0					
ANR	10024142	Identifier	len		10024133	1					
ANR	10024143	IdentifierDeclStatement	char * q ;	339:2:7130:7141	10024133	1	True				
ANR	10024144	IdentifierDecl	* q		10024133	0					
ANR	10024145	IdentifierDeclType	char *		10024133	0					
ANR	10024146	Identifier	q		10024133	1					
ANR	10024147	ExpressionStatement	len = * blen	342:2:7146:7155	10024133	2	True				
ANR	10024148	AssignmentExpression	len = * blen		10024133	0		=			
ANR	10024149	Identifier	len		10024133	0					
ANR	10024150	UnaryOperationExpression	* blen		10024133	1					
ANR	10024151	UnaryOperator	*		10024133	0					
ANR	10024152	Identifier	blen		10024133	1					
ANR	10024153	ForStatement	for ( q = b ; ; q ++ )		10024133	3					
ANR	10024154	ForInit	q = b ;	343:7:7164:7167	10024133	0	True				
ANR	10024155	AssignmentExpression	q = b		10024133	0		=			
ANR	10024156	Identifier	q		10024133	0					
ANR	10024157	Identifier	b		10024133	1					
ANR	10024158	PostIncDecOperationExpression	q ++	343:14:7171:7173	10024133	1	True				
ANR	10024159	Identifier	q		10024133	0					
ANR	10024160	IncDec	++		10024133	1					
ANR	10024161	CompoundStatement		11:4:76:76	10024133	2					
ANR	10024162	ExpressionStatement	c = fgetc ( file )	345:6:7188:7201	10024133	0	True				
ANR	10024163	AssignmentExpression	c = fgetc ( file )		10024133	0		=			
ANR	10024164	Identifier	c		10024133	0					
ANR	10024165	CallExpression	fgetc ( file )		10024133	1					
ANR	10024166	Callee	fgetc		10024133	0					
ANR	10024167	Identifier	fgetc		10024133	0					
ANR	10024168	ArgumentList	file		10024133	1					
ANR	10024169	Argument	file		10024133	0					
ANR	10024170	Identifier	file		10024133	0					
ANR	10024171	IfStatement	if ( c == EOF || c == '\\n' )		10024133	1					
ANR	10024172	Condition	c == EOF || c == '\\n'	346:10:7213:7233	10024133	0	True				
ANR	10024173	OrExpression	c == EOF || c == '\\n'		10024133	0		||			
ANR	10024174	EqualityExpression	c == EOF		10024133	0		==			
ANR	10024175	Identifier	c		10024133	0					
ANR	10024176	Identifier	EOF		10024133	1					
ANR	10024177	EqualityExpression	c == '\\n'		10024133	1		==			
ANR	10024178	Identifier	c		10024133	0					
ANR	10024179	PrimaryExpression	'\\n'		10024133	1					
ANR	10024180	BreakStatement	break ;	347:8:7244:7249	10024133	1	True				
ANR	10024181	IfStatement	if ( ( ( long ) q - ( long ) b + 1 ) >= ( long ) len )		10024133	2					
ANR	10024182	Condition	( ( long ) q - ( long ) b + 1 ) >= ( long ) len	348:10:7261:7298	10024133	0	True				
ANR	10024183	RelationalExpression	( ( long ) q - ( long ) b + 1 ) >= ( long ) len		10024133	0		>=			
ANR	10024184	AdditiveExpression	( long ) q - ( long ) b + 1		10024133	0		-			
ANR	10024185	CastExpression	( long ) q		10024133	0					
ANR	10024186	CastTarget	long		10024133	0					
ANR	10024187	Identifier	q		10024133	1					
ANR	10024188	AdditiveExpression	( long ) b + 1		10024133	1		+			
ANR	10024189	CastExpression	( long ) b		10024133	0					
ANR	10024190	CastTarget	long		10024133	0					
ANR	10024191	Identifier	b		10024133	1					
ANR	10024192	PrimaryExpression	1		10024133	1					
ANR	10024193	CastExpression	( long ) len		10024133	1					
ANR	10024194	CastTarget	long		10024133	0					
ANR	10024195	Identifier	len		10024133	1					
ANR	10024196	CompoundStatement		17:10:217:238	10024133	1					
ANR	10024197	IdentifierDeclStatement	long tlen ;	350:10:7321:7342	10024133	0	True				
ANR	10024198	IdentifierDecl	tlen		10024133	0					
ANR	10024199	IdentifierDeclType	long		10024133	0					
ANR	10024200	Identifier	tlen		10024133	1					
ANR	10024201	ExpressionStatement	tlen = ( long ) q - ( long ) b	353:10:7355:7375	10024133	1	True				
ANR	10024202	AssignmentExpression	tlen = ( long ) q - ( long ) b		10024133	0		=			
ANR	10024203	Identifier	tlen		10024133	0					
ANR	10024204	AdditiveExpression	( long ) q - ( long ) b		10024133	1		-			
ANR	10024205	CastExpression	( long ) q		10024133	0					
ANR	10024206	CastTarget	long		10024133	0					
ANR	10024207	Identifier	q		10024133	1					
ANR	10024208	CastExpression	( long ) b		10024133	1					
ANR	10024209	CastTarget	long		10024133	0					
ANR	10024210	Identifier	b		10024133	1					
ANR	10024211	ExpressionStatement	len <<= 1	354:10:7387:7394	10024133	2	True				
ANR	10024212	AssignmentExpression	len <<= 1		10024133	0		<<=			
ANR	10024213	Identifier	len		10024133	0					
ANR	10024214	PrimaryExpression	1		10024133	1					
ANR	10024215	ExpressionStatement	"b = ( char * ) realloc ( ( char * ) b , ( len + 2 ) )"	355:10:7406:7444	10024133	3	True				
ANR	10024216	AssignmentExpression	"b = ( char * ) realloc ( ( char * ) b , ( len + 2 ) )"		10024133	0		=			
ANR	10024217	Identifier	b		10024133	0					
ANR	10024218	CastExpression	"( char * ) realloc ( ( char * ) b , ( len + 2 ) )"		10024133	1					
ANR	10024219	CastTarget	char *		10024133	0					
ANR	10024220	CallExpression	"realloc ( ( char * ) b , ( len + 2 ) )"		10024133	1					
ANR	10024221	Callee	realloc		10024133	0					
ANR	10024222	Identifier	realloc		10024133	0					
ANR	10024223	ArgumentList	( char * ) b		10024133	1					
ANR	10024224	Argument	( char * ) b		10024133	0					
ANR	10024225	CastExpression	( char * ) b		10024133	0					
ANR	10024226	CastTarget	char *		10024133	0					
ANR	10024227	Identifier	b		10024133	1					
ANR	10024228	Argument	len + 2		10024133	1					
ANR	10024229	AdditiveExpression	len + 2		10024133	0		+			
ANR	10024230	Identifier	len		10024133	0					
ANR	10024231	PrimaryExpression	2		10024133	1					
ANR	10024232	IfStatement	if ( ( char * ) b == ( char * ) NULL )		10024133	4					
ANR	10024233	Condition	( char * ) b == ( char * ) NULL	356:14:7460:7486	10024133	0	True				
ANR	10024234	EqualityExpression	( char * ) b == ( char * ) NULL		10024133	0		==			
ANR	10024235	CastExpression	( char * ) b		10024133	0					
ANR	10024236	CastTarget	char *		10024133	0					
ANR	10024237	Identifier	b		10024133	1					
ANR	10024238	CastExpression	( char * ) NULL		10024133	1					
ANR	10024239	CastTarget	char *		10024133	0					
ANR	10024240	Identifier	NULL		10024133	1					
ANR	10024241	BreakStatement	break ;	357:12:7501:7506	10024133	1	True				
ANR	10024242	ExpressionStatement	q = b + tlen	358:10:7518:7526	10024133	5	True				
ANR	10024243	AssignmentExpression	q = b + tlen		10024133	0		=			
ANR	10024244	Identifier	q		10024133	0					
ANR	10024245	AdditiveExpression	b + tlen		10024133	1		+			
ANR	10024246	Identifier	b		10024133	0					
ANR	10024247	Identifier	tlen		10024133	1					
ANR	10024248	ExpressionStatement	* q = ( unsigned char ) c	360:6:7544:7564	10024133	3	True				
ANR	10024249	AssignmentExpression	* q = ( unsigned char ) c		10024133	0		=			
ANR	10024250	UnaryOperationExpression	* q		10024133	0					
ANR	10024251	UnaryOperator	*		10024133	0					
ANR	10024252	Identifier	q		10024133	1					
ANR	10024253	CastExpression	( unsigned char ) c		10024133	1					
ANR	10024254	CastTarget	unsigned char		10024133	0					
ANR	10024255	Identifier	c		10024133	1					
ANR	10024256	ExpressionStatement	* blen = 0	362:2:7574:7581	10024133	4	True				
ANR	10024257	AssignmentExpression	* blen = 0		10024133	0		=			
ANR	10024258	UnaryOperationExpression	* blen		10024133	0					
ANR	10024259	UnaryOperator	*		10024133	0					
ANR	10024260	Identifier	blen		10024133	1					
ANR	10024261	PrimaryExpression	0		10024133	1					
ANR	10024262	IfStatement	if ( ( unsigned char * ) b != ( unsigned char * ) NULL )		10024133	5					
ANR	10024263	Condition	( unsigned char * ) b != ( unsigned char * ) NULL	363:6:7589:7632	10024133	0	True				
ANR	10024264	EqualityExpression	( unsigned char * ) b != ( unsigned char * ) NULL		10024133	0		!=			
ANR	10024265	CastExpression	( unsigned char * ) b		10024133	0					
ANR	10024266	CastTarget	unsigned char *		10024133	0					
ANR	10024267	Identifier	b		10024133	1					
ANR	10024268	CastExpression	( unsigned char * ) NULL		10024133	1					
ANR	10024269	CastTarget	unsigned char *		10024133	0					
ANR	10024270	Identifier	NULL		10024133	1					
ANR	10024271	CompoundStatement		32:6:543:559	10024133	1					
ANR	10024272	IdentifierDeclStatement	int tlen ;	365:6:7647:7663	10024133	0	True				
ANR	10024273	IdentifierDecl	tlen		10024133	0					
ANR	10024274	IdentifierDeclType	int		10024133	0					
ANR	10024275	Identifier	tlen		10024133	1					
ANR	10024276	ExpressionStatement	tlen = ( long ) q - ( long ) b	368:6:7672:7694	10024133	1	True				
ANR	10024277	AssignmentExpression	tlen = ( long ) q - ( long ) b		10024133	0		=			
ANR	10024278	Identifier	tlen		10024133	0					
ANR	10024279	AdditiveExpression	( long ) q - ( long ) b		10024133	1		-			
ANR	10024280	CastExpression	( long ) q		10024133	0					
ANR	10024281	CastTarget	long		10024133	0					
ANR	10024282	Identifier	q		10024133	1					
ANR	10024283	CastExpression	( long ) b		10024133	1					
ANR	10024284	CastTarget	long		10024133	0					
ANR	10024285	Identifier	b		10024133	1					
ANR	10024286	IfStatement	if ( tlen == 0 )		10024133	2					
ANR	10024287	Condition	tlen == 0	369:10:7706:7714	10024133	0	True				
ANR	10024288	EqualityExpression	tlen == 0		10024133	0		==			
ANR	10024289	Identifier	tlen		10024133	0					
ANR	10024290	PrimaryExpression	0		10024133	1					
ANR	10024291	ReturnStatement	return ( char * ) NULL ;	370:8:7725:7745	10024133	1	True				
ANR	10024292	CastExpression	( char * ) NULL		10024133	0					
ANR	10024293	CastTarget	char *		10024133	0					
ANR	10024294	Identifier	NULL		10024133	1					
ANR	10024295	ExpressionStatement	b [ tlen ] = '\\0'	371:6:7753:7767	10024133	3	True				
ANR	10024296	AssignmentExpression	b [ tlen ] = '\\0'		10024133	0		=			
ANR	10024297	ArrayIndexing	b [ tlen ]		10024133	0					
ANR	10024298	Identifier	b		10024133	0					
ANR	10024299	Identifier	tlen		10024133	1					
ANR	10024300	PrimaryExpression	'\\0'		10024133	1					
ANR	10024301	ExpressionStatement	* blen = ++ tlen	372:6:7775:7787	10024133	4	True				
ANR	10024302	AssignmentExpression	* blen = ++ tlen		10024133	0		=			
ANR	10024303	UnaryOperationExpression	* blen		10024133	0					
ANR	10024304	UnaryOperator	*		10024133	0					
ANR	10024305	Identifier	blen		10024133	1					
ANR	10024306	UnaryExpression	++ tlen		10024133	1					
ANR	10024307	IncDec	++		10024133	0					
ANR	10024308	Identifier	tlen		10024133	1					
ANR	10024309	ReturnStatement	return b ;	374:2:7797:7805	10024133	6	True				
ANR	10024310	Identifier	b		10024133	0					
ANR	10024311	ReturnType	char *		10024133	1					
ANR	10024312	Identifier	super_fgets		10024133	2					
ANR	10024313	ParameterList	"char * b , int * blen , FILE * file"		10024133	3					
ANR	10024314	Parameter	char * b	333:18:7071:7077	10024133	0	True				
ANR	10024315	ParameterType	char *		10024133	0					
ANR	10024316	Identifier	b		10024133	1					
ANR	10024317	Parameter	int * blen	333:27:7080:7088	10024133	1	True				
ANR	10024318	ParameterType	int *		10024133	0					
ANR	10024319	Identifier	blen		10024133	1					
ANR	10024320	Parameter	FILE * file	333:38:7091:7100	10024133	2	True				
ANR	10024321	ParameterType	FILE *		10024133	0					
ANR	10024322	Identifier	file		10024133	1					
ANR	10024323	CFGEntryNode	ENTRY		10024133		True				
ANR	10024324	CFGExitNode	EXIT		10024133		True				
ANR	10024325	InfiniteForNode	true		10024133		True				
ANR	10024326	Symbol	b		10024133						
ANR	10024327	Symbol	c		10024133						
ANR	10024328	Symbol	NULL		10024133						
ANR	10024329	Symbol	realloc		10024133						
ANR	10024330	Symbol	* b		10024133						
ANR	10024331	Symbol	q		10024133						
ANR	10024332	Symbol	file		10024133						
ANR	10024333	Symbol	* tlen		10024133						
ANR	10024334	Symbol	len		10024133						
ANR	10024335	Symbol	* blen		10024133						
ANR	10024336	Symbol	tlen		10024133						
ANR	10024337	Symbol	* q		10024133						
ANR	10024338	Symbol	blen		10024133						
ANR	10024339	Symbol	EOF		10024133						
ANR	10024340	Symbol	fgetc		10024133						
ANR	10024341	Function	main	379:0:7834:13061							
ANR	10024342	FunctionDef	"main (int argc , char * argv [ ])"		10024341	0					
ANR	10024343	CompoundStatement		380:0:7867:13061	10024341	0					
ANR	10024344	IdentifierDeclStatement	"int i , mode ;"	387:2:7956:7975	10024341	0	True				
ANR	10024345	IdentifierDecl	i		10024341	0					
ANR	10024346	IdentifierDeclType	int		10024341	0					
ANR	10024347	Identifier	i		10024341	1					
ANR	10024348	IdentifierDecl	mode		10024341	1					
ANR	10024349	IdentifierDeclType	int		10024341	0					
ANR	10024350	Identifier	mode		10024341	1					
ANR	10024351	IdentifierDeclStatement	"FILE * ifile = stdin , * ofile = stdout ;"	391:2:8012:8056	10024341	1	True				
ANR	10024352	IdentifierDecl	* ifile = stdin		10024341	0					
ANR	10024353	IdentifierDeclType	FILE *		10024341	0					
ANR	10024354	Identifier	ifile		10024341	1					
ANR	10024355	AssignmentExpression	* ifile = stdin		10024341	2		=			
ANR	10024356	Identifier	stdin		10024341	0					
ANR	10024357	Identifier	stdin		10024341	1					
ANR	10024358	IdentifierDecl	* ofile = stdout		10024341	1					
ANR	10024359	IdentifierDeclType	FILE *		10024341	0					
ANR	10024360	Identifier	ofile		10024341	1					
ANR	10024361	AssignmentExpression	* ofile = stdout		10024341	2		=			
ANR	10024362	Identifier	stdout		10024341	0					
ANR	10024363	Identifier	stdout		10024341	1					
ANR	10024364	IdentifierDeclStatement	"char c , * usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"" ;"	395:2:8061:8146	10024341	2	True				
ANR	10024365	IdentifierDecl	c		10024341	0					
ANR	10024366	IdentifierDeclType	char		10024341	0					
ANR	10024367	Identifier	c		10024341	1					
ANR	10024368	IdentifierDecl	"* usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		10024341	1					
ANR	10024369	IdentifierDeclType	char *		10024341	0					
ANR	10024370	Identifier	usage		10024341	1					
ANR	10024371	AssignmentExpression	"* usage = ""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		10024341	2		=			
ANR	10024372	Identifier	usage		10024341	0					
ANR	10024373	PrimaryExpression	"""usage: iptcutil -t | -b [-i file] [-o file] <input >output"""		10024341	1					
ANR	10024374	IfStatement	if ( argc < 2 )		10024341	3					
ANR	10024375	Condition	argc < 2	399:6:8155:8162	10024341	0	True				
ANR	10024376	RelationalExpression	argc < 2		10024341	0		<			
ANR	10024377	Identifier	argc		10024341	0					
ANR	10024378	PrimaryExpression	2		10024341	1					
ANR	10024379	CompoundStatement		21:4:302:302	10024341	1					
ANR	10024380	ExpressionStatement	puts ( usage )	401:6:8178:8189	10024341	0	True				
ANR	10024381	CallExpression	puts ( usage )		10024341	0					
ANR	10024382	Callee	puts		10024341	0					
ANR	10024383	Identifier	puts		10024341	0					
ANR	10024384	ArgumentList	usage		10024341	1					
ANR	10024385	Argument	usage		10024341	0					
ANR	10024386	Identifier	usage		10024341	0					
ANR	10024387	ReturnStatement	return 1 ;	402:6:8197:8205	10024341	1	True				
ANR	10024388	PrimaryExpression	1		10024341	0					
ANR	10024389	ExpressionStatement	mode = 0	405:2:8216:8224	10024341	4	True				
ANR	10024390	AssignmentExpression	mode = 0		10024341	0		=			
ANR	10024391	Identifier	mode		10024341	0					
ANR	10024392	PrimaryExpression	0		10024341	1					
ANR	10024393	ForStatement	for ( i = 1 ; i < argc ; i ++ )		10024341	5					
ANR	10024394	ForInit	i = 1 ;	409:7:8295:8298	10024341	0	True				
ANR	10024395	AssignmentExpression	i = 1		10024341	0		=			
ANR	10024396	Identifier	i		10024341	0					
ANR	10024397	PrimaryExpression	1		10024341	1					
ANR	10024398	Condition	i < argc	409:12:8300:8305	10024341	1	True				
ANR	10024399	RelationalExpression	i < argc		10024341	0		<			
ANR	10024400	Identifier	i		10024341	0					
ANR	10024401	Identifier	argc		10024341	1					
ANR	10024402	PostIncDecOperationExpression	i ++	409:20:8308:8310	10024341	2	True				
ANR	10024403	Identifier	i		10024341	0					
ANR	10024404	IncDec	++		10024341	1					
ANR	10024405	CompoundStatement		31:4:449:449	10024341	3					
ANR	10024406	ExpressionStatement	c = argv [ i ] [ 0 ]	411:6:8325:8339	10024341	0	True				
ANR	10024407	AssignmentExpression	c = argv [ i ] [ 0 ]		10024341	0		=			
ANR	10024408	Identifier	c		10024341	0					
ANR	10024409	ArrayIndexing	argv [ i ] [ 0 ]		10024341	1					
ANR	10024410	ArrayIndexing	argv [ i ]		10024341	0					
ANR	10024411	Identifier	argv		10024341	0					
ANR	10024412	Identifier	i		10024341	1					
ANR	10024413	PrimaryExpression	0		10024341	1					
ANR	10024414	IfStatement	if ( c == '-' || c == '/' )		10024341	1					
ANR	10024415	Condition	c == '-' || c == '/'	412:10:8351:8370	10024341	0	True				
ANR	10024416	OrExpression	c == '-' || c == '/'		10024341	0		||			
ANR	10024417	EqualityExpression	c == '-'		10024341	0		==			
ANR	10024418	Identifier	c		10024341	0					
ANR	10024419	PrimaryExpression	'-'		10024341	1					
ANR	10024420	EqualityExpression	c == '/'		10024341	1		==			
ANR	10024421	Identifier	c		10024341	0					
ANR	10024422	PrimaryExpression	'/'		10024341	1					
ANR	10024423	CompoundStatement		34:8:513:513	10024341	1					
ANR	10024424	ExpressionStatement	c = argv [ i ] [ 1 ]	414:10:8393:8407	10024341	0	True				
ANR	10024425	AssignmentExpression	c = argv [ i ] [ 1 ]		10024341	0		=			
ANR	10024426	Identifier	c		10024341	0					
ANR	10024427	ArrayIndexing	argv [ i ] [ 1 ]		10024341	1					
ANR	10024428	ArrayIndexing	argv [ i ]		10024341	0					
ANR	10024429	Identifier	argv		10024341	0					
ANR	10024430	Identifier	i		10024341	1					
ANR	10024431	PrimaryExpression	1		10024341	1					
ANR	10024432	SwitchStatement	switch ( c )		10024341	1					
ANR	10024433	Condition	c	415:18:8427:8427	10024341	0	True				
ANR	10024434	Identifier	c		10024341	0					
ANR	10024435	CompoundStatement		37:12:575:575	10024341	1					
ANR	10024436	Label	case 't' :	417:12:8457:8465	10024341	0	True				
ANR	10024437	ExpressionStatement	mode = 1	418:14:8481:8489	10024341	1	True				
ANR	10024438	AssignmentExpression	mode = 1		10024341	0		=			
ANR	10024439	Identifier	mode		10024341	0					
ANR	10024440	PrimaryExpression	1		10024341	1					
ANR	10024441	ExpressionStatement	"_setmode ( _fileno ( ofile ) , _O_BINARY )"	421:14:8567:8606	10024341	2	True				
ANR	10024442	CallExpression	"_setmode ( _fileno ( ofile ) , _O_BINARY )"		10024341	0					
ANR	10024443	Callee	_setmode		10024341	0					
ANR	10024444	Identifier	_setmode		10024341	0					
ANR	10024445	ArgumentList	_fileno ( ofile )		10024341	1					
ANR	10024446	Argument	_fileno ( ofile )		10024341	0					
ANR	10024447	CallExpression	_fileno ( ofile )		10024341	0					
ANR	10024448	Callee	_fileno		10024341	0					
ANR	10024449	Identifier	_fileno		10024341	0					
ANR	10024450	ArgumentList	ofile		10024341	1					
ANR	10024451	Argument	ofile		10024341	0					
ANR	10024452	Identifier	ofile		10024341	0					
ANR	10024453	Argument	_O_BINARY		10024341	1					
ANR	10024454	Identifier	_O_BINARY		10024341	0					
ANR	10024455	BreakStatement	break ;	423:14:8629:8634	10024341	3	True				
ANR	10024456	Label	case 'b' :	424:12:8648:8656	10024341	4	True				
ANR	10024457	ExpressionStatement	mode = 0	425:14:8672:8680	10024341	5	True				
ANR	10024458	AssignmentExpression	mode = 0		10024341	0		=			
ANR	10024459	Identifier	mode		10024341	0					
ANR	10024460	PrimaryExpression	0		10024341	1					
ANR	10024461	ExpressionStatement	"_setmode ( _fileno ( ifile ) , _O_BINARY )"	428:14:8757:8796	10024341	6	True				
ANR	10024462	CallExpression	"_setmode ( _fileno ( ifile ) , _O_BINARY )"		10024341	0					
ANR	10024463	Callee	_setmode		10024341	0					
ANR	10024464	Identifier	_setmode		10024341	0					
ANR	10024465	ArgumentList	_fileno ( ifile )		10024341	1					
ANR	10024466	Argument	_fileno ( ifile )		10024341	0					
ANR	10024467	CallExpression	_fileno ( ifile )		10024341	0					
ANR	10024468	Callee	_fileno		10024341	0					
ANR	10024469	Identifier	_fileno		10024341	0					
ANR	10024470	ArgumentList	ifile		10024341	1					
ANR	10024471	Argument	ifile		10024341	0					
ANR	10024472	Identifier	ifile		10024341	0					
ANR	10024473	Argument	_O_BINARY		10024341	1					
ANR	10024474	Identifier	_O_BINARY		10024341	0					
ANR	10024475	BreakStatement	break ;	430:14:8819:8824	10024341	7	True				
ANR	10024476	Label	case 'i' :	431:12:8838:8846	10024341	8	True				
ANR	10024477	IfStatement	if ( mode == 0 )		10024341	9					
ANR	10024478	Condition	mode == 0	432:18:8866:8874	10024341	0	True				
ANR	10024479	EqualityExpression	mode == 0		10024341	0		==			
ANR	10024480	Identifier	mode		10024341	0					
ANR	10024481	PrimaryExpression	0		10024341	1					
ANR	10024482	ExpressionStatement	"ifile = fopen ( argv [ ++ i ] , ""rb"" )"	433:16:8893:8923	10024341	1	True				
ANR	10024483	AssignmentExpression	"ifile = fopen ( argv [ ++ i ] , ""rb"" )"		10024341	0		=			
ANR	10024484	Identifier	ifile		10024341	0					
ANR	10024485	CallExpression	"fopen ( argv [ ++ i ] , ""rb"" )"		10024341	1					
ANR	10024486	Callee	fopen		10024341	0					
ANR	10024487	Identifier	fopen		10024341	0					
ANR	10024488	ArgumentList	argv [ ++ i ]		10024341	1					
ANR	10024489	Argument	argv [ ++ i ]		10024341	0					
ANR	10024490	ArrayIndexing	argv [ ++ i ]		10024341	0					
ANR	10024491	Identifier	argv		10024341	0					
ANR	10024492	UnaryExpression	++ i		10024341	1					
ANR	10024493	IncDec	++		10024341	0					
ANR	10024494	Identifier	i		10024341	1					
ANR	10024495	Argument	"""rb"""		10024341	1					
ANR	10024496	PrimaryExpression	"""rb"""		10024341	0					
ANR	10024497	ElseStatement	else		10024341	0					
ANR	10024498	ExpressionStatement	"ifile = fopen ( argv [ ++ i ] , ""rt"" )"	435:16:8960:8990	10024341	0	True				
ANR	10024499	AssignmentExpression	"ifile = fopen ( argv [ ++ i ] , ""rt"" )"		10024341	0		=			
ANR	10024500	Identifier	ifile		10024341	0					
ANR	10024501	CallExpression	"fopen ( argv [ ++ i ] , ""rt"" )"		10024341	1					
ANR	10024502	Callee	fopen		10024341	0					
ANR	10024503	Identifier	fopen		10024341	0					
ANR	10024504	ArgumentList	argv [ ++ i ]		10024341	1					
ANR	10024505	Argument	argv [ ++ i ]		10024341	0					
ANR	10024506	ArrayIndexing	argv [ ++ i ]		10024341	0					
ANR	10024507	Identifier	argv		10024341	0					
ANR	10024508	UnaryExpression	++ i		10024341	1					
ANR	10024509	IncDec	++		10024341	0					
ANR	10024510	Identifier	i		10024341	1					
ANR	10024511	Argument	"""rt"""		10024341	1					
ANR	10024512	PrimaryExpression	"""rt"""		10024341	0					
ANR	10024513	IfStatement	if ( ifile == ( FILE * ) NULL )		10024341	10					
ANR	10024514	Condition	ifile == ( FILE * ) NULL	436:18:9010:9030	10024341	0	True				
ANR	10024515	EqualityExpression	ifile == ( FILE * ) NULL		10024341	0		==			
ANR	10024516	Identifier	ifile		10024341	0					
ANR	10024517	CastExpression	( FILE * ) NULL		10024341	1					
ANR	10024518	CastTarget	FILE *		10024341	0					
ANR	10024519	Identifier	NULL		10024341	1					
ANR	10024520	CompoundStatement		58:16:1181:1181	10024341	1					
ANR	10024521	ExpressionStatement	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"	438:18:9069:9108	10024341	0	True				
ANR	10024522	CallExpression	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"		10024341	0					
ANR	10024523	Callee	printf		10024341	0					
ANR	10024524	Identifier	printf		10024341	0					
ANR	10024525	ArgumentList	"""Unable to open: %s\\n"""		10024341	1					
ANR	10024526	Argument	"""Unable to open: %s\\n"""		10024341	0					
ANR	10024527	PrimaryExpression	"""Unable to open: %s\\n"""		10024341	0					
ANR	10024528	Argument	argv [ i ]		10024341	1					
ANR	10024529	ArrayIndexing	argv [ i ]		10024341	0					
ANR	10024530	Identifier	argv		10024341	0					
ANR	10024531	Identifier	i		10024341	1					
ANR	10024532	ReturnStatement	return 1 ;	439:18:9128:9136	10024341	1	True				
ANR	10024533	PrimaryExpression	1		10024341	0					
ANR	10024534	BreakStatement	break ;	441:14:9170:9175	10024341	11	True				
ANR	10024535	Label	case 'o' :	442:12:9189:9197	10024341	12	True				
ANR	10024536	IfStatement	if ( mode == 0 )		10024341	13					
ANR	10024537	Condition	mode == 0	443:18:9217:9225	10024341	0	True				
ANR	10024538	EqualityExpression	mode == 0		10024341	0		==			
ANR	10024539	Identifier	mode		10024341	0					
ANR	10024540	PrimaryExpression	0		10024341	1					
ANR	10024541	ExpressionStatement	"ofile = fopen ( argv [ ++ i ] , ""wt"" )"	444:16:9244:9274	10024341	1	True				
ANR	10024542	AssignmentExpression	"ofile = fopen ( argv [ ++ i ] , ""wt"" )"		10024341	0		=			
ANR	10024543	Identifier	ofile		10024341	0					
ANR	10024544	CallExpression	"fopen ( argv [ ++ i ] , ""wt"" )"		10024341	1					
ANR	10024545	Callee	fopen		10024341	0					
ANR	10024546	Identifier	fopen		10024341	0					
ANR	10024547	ArgumentList	argv [ ++ i ]		10024341	1					
ANR	10024548	Argument	argv [ ++ i ]		10024341	0					
ANR	10024549	ArrayIndexing	argv [ ++ i ]		10024341	0					
ANR	10024550	Identifier	argv		10024341	0					
ANR	10024551	UnaryExpression	++ i		10024341	1					
ANR	10024552	IncDec	++		10024341	0					
ANR	10024553	Identifier	i		10024341	1					
ANR	10024554	Argument	"""wt"""		10024341	1					
ANR	10024555	PrimaryExpression	"""wt"""		10024341	0					
ANR	10024556	ElseStatement	else		10024341	0					
ANR	10024557	ExpressionStatement	"ofile = fopen ( argv [ ++ i ] , ""wb"" )"	446:16:9311:9341	10024341	0	True				
ANR	10024558	AssignmentExpression	"ofile = fopen ( argv [ ++ i ] , ""wb"" )"		10024341	0		=			
ANR	10024559	Identifier	ofile		10024341	0					
ANR	10024560	CallExpression	"fopen ( argv [ ++ i ] , ""wb"" )"		10024341	1					
ANR	10024561	Callee	fopen		10024341	0					
ANR	10024562	Identifier	fopen		10024341	0					
ANR	10024563	ArgumentList	argv [ ++ i ]		10024341	1					
ANR	10024564	Argument	argv [ ++ i ]		10024341	0					
ANR	10024565	ArrayIndexing	argv [ ++ i ]		10024341	0					
ANR	10024566	Identifier	argv		10024341	0					
ANR	10024567	UnaryExpression	++ i		10024341	1					
ANR	10024568	IncDec	++		10024341	0					
ANR	10024569	Identifier	i		10024341	1					
ANR	10024570	Argument	"""wb"""		10024341	1					
ANR	10024571	PrimaryExpression	"""wb"""		10024341	0					
ANR	10024572	IfStatement	if ( ofile == ( FILE * ) NULL )		10024341	14					
ANR	10024573	Condition	ofile == ( FILE * ) NULL	447:18:9361:9381	10024341	0	True				
ANR	10024574	EqualityExpression	ofile == ( FILE * ) NULL		10024341	0		==			
ANR	10024575	Identifier	ofile		10024341	0					
ANR	10024576	CastExpression	( FILE * ) NULL		10024341	1					
ANR	10024577	CastTarget	FILE *		10024341	0					
ANR	10024578	Identifier	NULL		10024341	1					
ANR	10024579	CompoundStatement		69:16:1532:1532	10024341	1					
ANR	10024580	ExpressionStatement	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"	449:18:9420:9459	10024341	0	True				
ANR	10024581	CallExpression	"printf ( ""Unable to open: %s\\n"" , argv [ i ] )"		10024341	0					
ANR	10024582	Callee	printf		10024341	0					
ANR	10024583	Identifier	printf		10024341	0					
ANR	10024584	ArgumentList	"""Unable to open: %s\\n"""		10024341	1					
ANR	10024585	Argument	"""Unable to open: %s\\n"""		10024341	0					
ANR	10024586	PrimaryExpression	"""Unable to open: %s\\n"""		10024341	0					
ANR	10024587	Argument	argv [ i ]		10024341	1					
ANR	10024588	ArrayIndexing	argv [ i ]		10024341	0					
ANR	10024589	Identifier	argv		10024341	0					
ANR	10024590	Identifier	i		10024341	1					
ANR	10024591	ReturnStatement	return 1 ;	450:18:9479:9487	10024341	1	True				
ANR	10024592	PrimaryExpression	1		10024341	0					
ANR	10024593	BreakStatement	break ;	452:14:9521:9526	10024341	15	True				
ANR	10024594	Label	default :	453:12:9540:9547	10024341	16	True				
ANR	10024595	Identifier	default		10024341	0					
ANR	10024596	ExpressionStatement	"printf ( ""Unknown option: %s\\n"" , argv [ i ] )"	454:14:9563:9602	10024341	17	True				
ANR	10024597	CallExpression	"printf ( ""Unknown option: %s\\n"" , argv [ i ] )"		10024341	0					
ANR	10024598	Callee	printf		10024341	0					
ANR	10024599	Identifier	printf		10024341	0					
ANR	10024600	ArgumentList	"""Unknown option: %s\\n"""		10024341	1					
ANR	10024601	Argument	"""Unknown option: %s\\n"""		10024341	0					
ANR	10024602	PrimaryExpression	"""Unknown option: %s\\n"""		10024341	0					
ANR	10024603	Argument	argv [ i ]		10024341	1					
ANR	10024604	ArrayIndexing	argv [ i ]		10024341	0					
ANR	10024605	Identifier	argv		10024341	0					
ANR	10024606	Identifier	i		10024341	1					
ANR	10024607	ReturnStatement	return 1 ;	455:14:9618:9626	10024341	18	True				
ANR	10024608	PrimaryExpression	1		10024341	0					
ANR	10024609	ElseStatement	else		10024341	0					
ANR	10024610	CompoundStatement		80:8:1803:1803	10024341	0					
ANR	10024611	ExpressionStatement	puts ( usage )	460:10:9683:9694	10024341	0	True				
ANR	10024612	CallExpression	puts ( usage )		10024341	0					
ANR	10024613	Callee	puts		10024341	0					
ANR	10024614	Identifier	puts		10024341	0					
ANR	10024615	ArgumentList	usage		10024341	1					
ANR	10024616	Argument	usage		10024341	0					
ANR	10024617	Identifier	usage		10024341	0					
ANR	10024618	ReturnStatement	return 1 ;	461:10:9706:9714	10024341	1	True				
ANR	10024619	PrimaryExpression	1		10024341	0					
ANR	10024620	IfStatement	if ( mode == 0 )		10024341	6					
ANR	10024621	Condition	mode == 0	465:6:9739:9747	10024341	0	True				
ANR	10024622	EqualityExpression	mode == 0		10024341	0		==			
ANR	10024623	Identifier	mode		10024341	0					
ANR	10024624	PrimaryExpression	0		10024341	1					
ANR	10024625	ExpressionStatement	"formatIPTC ( ifile , ofile )"	466:4:9784:9808	10024341	1	True				
ANR	10024626	CallExpression	"formatIPTC ( ifile , ofile )"		10024341	0					
ANR	10024627	Callee	formatIPTC		10024341	0					
ANR	10024628	Identifier	formatIPTC		10024341	0					
ANR	10024629	ArgumentList	ifile		10024341	1					
ANR	10024630	Argument	ifile		10024341	0					
ANR	10024631	Identifier	ifile		10024341	0					
ANR	10024632	Argument	ofile		10024341	1					
ANR	10024633	Identifier	ofile		10024341	0					
ANR	10024634	IfStatement	if ( mode == 1 )		10024341	7					
ANR	10024635	Condition	mode == 1	468:6:9817:9825	10024341	0	True				
ANR	10024636	EqualityExpression	mode == 1		10024341	0		==			
ANR	10024637	Identifier	mode		10024341	0					
ANR	10024638	PrimaryExpression	1		10024341	1					
ANR	10024639	CompoundStatement		106:6:2203:2235	10024341	1					
ANR	10024640	IdentifierDeclStatement	"char brkused , quoted , * line , * token , * newstr ;"	470:6:9876:9960	10024341	0	True				
ANR	10024641	IdentifierDecl	brkused		10024341	0					
ANR	10024642	IdentifierDeclType	char		10024341	0					
ANR	10024643	Identifier	brkused		10024341	1					
ANR	10024644	IdentifierDecl	quoted		10024341	1					
ANR	10024645	IdentifierDeclType	char		10024341	0					
ANR	10024646	Identifier	quoted		10024341	1					
ANR	10024647	IdentifierDecl	* line		10024341	2					
ANR	10024648	IdentifierDeclType	char *		10024341	0					
ANR	10024649	Identifier	line		10024341	1					
ANR	10024650	IdentifierDecl	* token		10024341	3					
ANR	10024651	IdentifierDeclType	char *		10024341	0					
ANR	10024652	Identifier	token		10024341	1					
ANR	10024653	IdentifierDecl	* newstr		10024341	4					
ANR	10024654	IdentifierDeclType	char *		10024341	0					
ANR	10024655	Identifier	newstr		10024341	1					
ANR	10024656	IdentifierDeclStatement	"int state , next ;"	477:6:9969:10000	10024341	1	True				
ANR	10024657	IdentifierDecl	state		10024341	0					
ANR	10024658	IdentifierDeclType	int		10024341	0					
ANR	10024659	Identifier	state		10024341	1					
ANR	10024660	IdentifierDecl	next		10024341	1					
ANR	10024661	IdentifierDeclType	int		10024341	0					
ANR	10024662	Identifier	next		10024341	1					
ANR	10024663	IdentifierDeclStatement	"unsigned char recnum = 0 , dataset = 0 ;"	481:6:10009:10062	10024341	2	True				
ANR	10024664	IdentifierDecl	recnum = 0		10024341	0					
ANR	10024665	IdentifierDeclType	unsigned char		10024341	0					
ANR	10024666	Identifier	recnum		10024341	1					
ANR	10024667	AssignmentExpression	recnum = 0		10024341	2		=			
ANR	10024668	Identifier	recnum		10024341	0					
ANR	10024669	PrimaryExpression	0		10024341	1					
ANR	10024670	IdentifierDecl	dataset = 0		10024341	1					
ANR	10024671	IdentifierDeclType	unsigned char		10024341	0					
ANR	10024672	Identifier	dataset		10024341	1					
ANR	10024673	AssignmentExpression	dataset = 0		10024341	2		=			
ANR	10024674	Identifier	dataset		10024341	0					
ANR	10024675	PrimaryExpression	0		10024341	1					
ANR	10024676	IdentifierDeclStatement	int inputlen = BUFFER_SZ ;	485:6:10071:10103	10024341	3	True				
ANR	10024677	IdentifierDecl	inputlen = BUFFER_SZ		10024341	0					
ANR	10024678	IdentifierDeclType	int		10024341	0					
ANR	10024679	Identifier	inputlen		10024341	1					
ANR	10024680	AssignmentExpression	inputlen = BUFFER_SZ		10024341	2		=			
ANR	10024681	Identifier	BUFFER_SZ		10024341	0					
ANR	10024682	Identifier	BUFFER_SZ		10024341	1					
ANR	10024683	ExpressionStatement	line = ( char * ) malloc ( inputlen )	488:6:10112:10144	10024341	4	True				
ANR	10024684	AssignmentExpression	line = ( char * ) malloc ( inputlen )		10024341	0		=			
ANR	10024685	Identifier	line		10024341	0					
ANR	10024686	CastExpression	( char * ) malloc ( inputlen )		10024341	1					
ANR	10024687	CastTarget	char *		10024341	0					
ANR	10024688	CallExpression	malloc ( inputlen )		10024341	1					
ANR	10024689	Callee	malloc		10024341	0					
ANR	10024690	Identifier	malloc		10024341	0					
ANR	10024691	ArgumentList	inputlen		10024341	1					
ANR	10024692	Argument	inputlen		10024341	0					
ANR	10024693	Identifier	inputlen		10024341	0					
ANR	10024694	ExpressionStatement	token = ( char * ) NULL	489:6:10157:10177	10024341	5	True				
ANR	10024695	AssignmentExpression	token = ( char * ) NULL		10024341	0		=			
ANR	10024696	Identifier	token		10024341	0					
ANR	10024697	CastExpression	( char * ) NULL		10024341	1					
ANR	10024698	CastTarget	char *		10024341	0					
ANR	10024699	Identifier	NULL		10024341	1					
ANR	10024700	WhileStatement	"while ( ( line = super_fgets ( line , & inputlen , ifile ) ) != NULL )"		10024341	6					
ANR	10024701	Condition	"( line = super_fgets ( line , & inputlen , ifile ) ) != NULL"	490:12:10191:10238	10024341	0	True				
ANR	10024702	EqualityExpression	"( line = super_fgets ( line , & inputlen , ifile ) ) != NULL"		10024341	0		!=			
ANR	10024703	AssignmentExpression	"line = super_fgets ( line , & inputlen , ifile )"		10024341	0		=			
ANR	10024704	Identifier	line		10024341	0					
ANR	10024705	CallExpression	"super_fgets ( line , & inputlen , ifile )"		10024341	1					
ANR	10024706	Callee	super_fgets		10024341	0					
ANR	10024707	Identifier	super_fgets		10024341	0					
ANR	10024708	ArgumentList	line		10024341	1					
ANR	10024709	Argument	line		10024341	0					
ANR	10024710	Identifier	line		10024341	0					
ANR	10024711	Argument	& inputlen		10024341	1					
ANR	10024712	UnaryOperationExpression	& inputlen		10024341	0					
ANR	10024713	UnaryOperator	&		10024341	0					
ANR	10024714	Identifier	inputlen		10024341	1					
ANR	10024715	Argument	ifile		10024341	2					
ANR	10024716	Identifier	ifile		10024341	0					
ANR	10024717	Identifier	NULL		10024341	1					
ANR	10024718	CompoundStatement		112:8:2381:2381	10024341	1					
ANR	10024719	ExpressionStatement	state = 0	492:10:10261:10268	10024341	0	True				
ANR	10024720	AssignmentExpression	state = 0		10024341	0		=			
ANR	10024721	Identifier	state		10024341	0					
ANR	10024722	PrimaryExpression	0		10024341	1					
ANR	10024723	ExpressionStatement	next = 0	493:10:10280:10286	10024341	1	True				
ANR	10024724	AssignmentExpression	next = 0		10024341	0		=			
ANR	10024725	Identifier	next		10024341	0					
ANR	10024726	PrimaryExpression	0		10024341	1					
ANR	10024727	ExpressionStatement	token = ( char * ) malloc ( inputlen )	495:10:10299:10332	10024341	2	True				
ANR	10024728	AssignmentExpression	token = ( char * ) malloc ( inputlen )		10024341	0		=			
ANR	10024729	Identifier	token		10024341	0					
ANR	10024730	CastExpression	( char * ) malloc ( inputlen )		10024341	1					
ANR	10024731	CastTarget	char *		10024341	0					
ANR	10024732	CallExpression	malloc ( inputlen )		10024341	1					
ANR	10024733	Callee	malloc		10024341	0					
ANR	10024734	Identifier	malloc		10024341	0					
ANR	10024735	ArgumentList	inputlen		10024341	1					
ANR	10024736	Argument	inputlen		10024341	0					
ANR	10024737	Identifier	inputlen		10024341	0					
ANR	10024738	ExpressionStatement	newstr = ( char * ) malloc ( inputlen )	496:10:10349:10383	10024341	3	True				
ANR	10024739	AssignmentExpression	newstr = ( char * ) malloc ( inputlen )		10024341	0		=			
ANR	10024740	Identifier	newstr		10024341	0					
ANR	10024741	CastExpression	( char * ) malloc ( inputlen )		10024341	1					
ANR	10024742	CastTarget	char *		10024341	0					
ANR	10024743	CallExpression	malloc ( inputlen )		10024341	1					
ANR	10024744	Callee	malloc		10024341	0					
ANR	10024745	Identifier	malloc		10024341	0					
ANR	10024746	ArgumentList	inputlen		10024341	1					
ANR	10024747	Argument	inputlen		10024341	0					
ANR	10024748	Identifier	inputlen		10024341	0					
ANR	10024749	WhileStatement	"while ( tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0 )"		10024341	4					
ANR	10024750	Condition	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0"	497:16:10406:10511	10024341	0	True				
ANR	10024751	EqualityExpression	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted ) == 0"		10024341	0		==			
ANR	10024752	CallExpression	"tokenizer ( 0 , token , inputlen , line , """" , ""="" , ""\\"""" , 0 , & brkused , & next , & quoted )"		10024341	0					
ANR	10024753	Callee	tokenizer		10024341	0					
ANR	10024754	Identifier	tokenizer		10024341	0					
ANR	10024755	ArgumentList	0		10024341	1					
ANR	10024756	Argument	0		10024341	0					
ANR	10024757	PrimaryExpression	0		10024341	0					
ANR	10024758	Argument	token		10024341	1					
ANR	10024759	Identifier	token		10024341	0					
ANR	10024760	Argument	inputlen		10024341	2					
ANR	10024761	Identifier	inputlen		10024341	0					
ANR	10024762	Argument	line		10024341	3					
ANR	10024763	Identifier	line		10024341	0					
ANR	10024764	Argument	""""""		10024341	4					
ANR	10024765	PrimaryExpression	""""""		10024341	0					
ANR	10024766	Argument	"""="""		10024341	5					
ANR	10024767	PrimaryExpression	"""="""		10024341	0					
ANR	10024768	Argument	"""\\"""""		10024341	6					
ANR	10024769	PrimaryExpression	"""\\"""""		10024341	0					
ANR	10024770	Argument	0		10024341	7					
ANR	10024771	PrimaryExpression	0		10024341	0					
ANR	10024772	Argument	& brkused		10024341	8					
ANR	10024773	UnaryOperationExpression	& brkused		10024341	0					
ANR	10024774	UnaryOperator	&		10024341	0					
ANR	10024775	Identifier	brkused		10024341	1					
ANR	10024776	Argument	& next		10024341	9					
ANR	10024777	UnaryOperationExpression	& next		10024341	0					
ANR	10024778	UnaryOperator	&		10024341	0					
ANR	10024779	Identifier	next		10024341	1					
ANR	10024780	Argument	& quoted		10024341	10					
ANR	10024781	UnaryOperationExpression	& quoted		10024341	0					
ANR	10024782	UnaryOperator	&		10024341	0					
ANR	10024783	Identifier	quoted		10024341	1					
ANR	10024784	PrimaryExpression	0		10024341	1					
ANR	10024785	CompoundStatement		120:12:2658:2658	10024341	1					
ANR	10024786	IfStatement	if ( state == 0 )		10024341	0					
ANR	10024787	Condition	state == 0	500:18:10546:10555	10024341	0	True				
ANR	10024788	EqualityExpression	state == 0		10024341	0		==			
ANR	10024789	Identifier	state		10024341	0					
ANR	10024790	PrimaryExpression	0		10024341	1					
ANR	10024791	CompoundStatement		127:18:2820:2880	10024341	1					
ANR	10024792	IdentifierDeclStatement	"int state , next ;"	502:18:10612:10667	10024341	0	True				
ANR	10024793	IdentifierDecl	state		10024341	0					
ANR	10024794	IdentifierDeclType	int		10024341	0					
ANR	10024795	Identifier	state		10024341	1					
ANR	10024796	IdentifierDecl	next		10024341	1					
ANR	10024797	IdentifierDeclType	int		10024341	0					
ANR	10024798	Identifier	next		10024341	1					
ANR	10024799	IdentifierDeclStatement	"char brkused , quoted ;"	506:18:10688:10748	10024341	1	True				
ANR	10024800	IdentifierDecl	brkused		10024341	0					
ANR	10024801	IdentifierDeclType	char		10024341	0					
ANR	10024802	Identifier	brkused		10024341	1					
ANR	10024803	IdentifierDecl	quoted		10024341	1					
ANR	10024804	IdentifierDeclType	char		10024341	0					
ANR	10024805	Identifier	quoted		10024341	1					
ANR	10024806	ExpressionStatement	state = 0	510:18:10769:10776	10024341	2	True				
ANR	10024807	AssignmentExpression	state = 0		10024341	0		=			
ANR	10024808	Identifier	state		10024341	0					
ANR	10024809	PrimaryExpression	0		10024341	1					
ANR	10024810	ExpressionStatement	next = 0	511:18:10796:10802	10024341	3	True				
ANR	10024811	AssignmentExpression	next = 0		10024341	0		=			
ANR	10024812	Identifier	next		10024341	0					
ANR	10024813	PrimaryExpression	0		10024341	1					
ANR	10024814	WhileStatement	"while ( tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0 )"		10024341	4					
ANR	10024815	Condition	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0"	512:24:10828:10943	10024341	0	True				
ANR	10024816	EqualityExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted ) == 0"		10024341	0		==			
ANR	10024817	CallExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""#"" , """" , 0 , & brkused , & next , & quoted )"		10024341	0					
ANR	10024818	Callee	tokenizer		10024341	0					
ANR	10024819	Identifier	tokenizer		10024341	0					
ANR	10024820	ArgumentList	0		10024341	1					
ANR	10024821	Argument	0		10024341	0					
ANR	10024822	PrimaryExpression	0		10024341	0					
ANR	10024823	Argument	newstr		10024341	1					
ANR	10024824	Identifier	newstr		10024341	0					
ANR	10024825	Argument	inputlen		10024341	2					
ANR	10024826	Identifier	inputlen		10024341	0					
ANR	10024827	Argument	token		10024341	3					
ANR	10024828	Identifier	token		10024341	0					
ANR	10024829	Argument	""""""		10024341	4					
ANR	10024830	PrimaryExpression	""""""		10024341	0					
ANR	10024831	Argument	"""#"""		10024341	5					
ANR	10024832	PrimaryExpression	"""#"""		10024341	0					
ANR	10024833	Argument	""""""		10024341	6					
ANR	10024834	PrimaryExpression	""""""		10024341	0					
ANR	10024835	Argument	0		10024341	7					
ANR	10024836	PrimaryExpression	0		10024341	0					
ANR	10024837	Argument	& brkused		10024341	8					
ANR	10024838	UnaryOperationExpression	& brkused		10024341	0					
ANR	10024839	UnaryOperator	&		10024341	0					
ANR	10024840	Identifier	brkused		10024341	1					
ANR	10024841	Argument	& next		10024341	9					
ANR	10024842	UnaryOperationExpression	& next		10024341	0					
ANR	10024843	UnaryOperator	&		10024341	0					
ANR	10024844	Identifier	next		10024341	1					
ANR	10024845	Argument	& quoted		10024341	10					
ANR	10024846	UnaryOperationExpression	& quoted		10024341	0					
ANR	10024847	UnaryOperator	&		10024341	0					
ANR	10024848	Identifier	quoted		10024341	1					
ANR	10024849	PrimaryExpression	0		10024341	1					
ANR	10024850	CompoundStatement		135:20:3098:3098	10024341	1					
ANR	10024851	IfStatement	if ( state == 0 )		10024341	0					
ANR	10024852	Condition	state == 0	515:26:10994:11003	10024341	0	True				
ANR	10024853	EqualityExpression	state == 0		10024341	0		==			
ANR	10024854	Identifier	state		10024341	0					
ANR	10024855	PrimaryExpression	0		10024341	1					
ANR	10024856	ExpressionStatement	dataset = ( unsigned char ) atoi ( newstr )	516:24:11030:11068	10024341	1	True				
ANR	10024857	AssignmentExpression	dataset = ( unsigned char ) atoi ( newstr )		10024341	0		=			
ANR	10024858	Identifier	dataset		10024341	0					
ANR	10024859	CastExpression	( unsigned char ) atoi ( newstr )		10024341	1					
ANR	10024860	CastTarget	unsigned char		10024341	0					
ANR	10024861	CallExpression	atoi ( newstr )		10024341	1					
ANR	10024862	Callee	atoi		10024341	0					
ANR	10024863	Identifier	atoi		10024341	0					
ANR	10024864	ArgumentList	newstr		10024341	1					
ANR	10024865	Argument	newstr		10024341	0					
ANR	10024866	Identifier	newstr		10024341	0					
ANR	10024867	ElseStatement	else		10024341	0					
ANR	10024868	IfStatement	if ( state == 1 )		10024341	0					
ANR	10024869	Condition	state == 1	518:28:11125:11134	10024341	0	True				
ANR	10024870	EqualityExpression	state == 1		10024341	0		==			
ANR	10024871	Identifier	state		10024341	0					
ANR	10024872	PrimaryExpression	1		10024341	1					
ANR	10024873	ExpressionStatement	recnum = ( unsigned char ) atoi ( newstr )	519:26:11163:11200	10024341	1	True				
ANR	10024874	AssignmentExpression	recnum = ( unsigned char ) atoi ( newstr )		10024341	0		=			
ANR	10024875	Identifier	recnum		10024341	0					
ANR	10024876	CastExpression	( unsigned char ) atoi ( newstr )		10024341	1					
ANR	10024877	CastTarget	unsigned char		10024341	0					
ANR	10024878	CallExpression	atoi ( newstr )		10024341	1					
ANR	10024879	Callee	atoi		10024341	0					
ANR	10024880	Identifier	atoi		10024341	0					
ANR	10024881	ArgumentList	newstr		10024341	1					
ANR	10024882	Argument	newstr		10024341	0					
ANR	10024883	Identifier	newstr		10024341	0					
ANR	10024884	ExpressionStatement	state ++	520:22:11224:11231	10024341	1	True				
ANR	10024885	PostIncDecOperationExpression	state ++		10024341	0					
ANR	10024886	Identifier	state		10024341	0					
ANR	10024887	IncDec	++		10024341	1					
ANR	10024888	ElseStatement	else		10024341	0					
ANR	10024889	IfStatement	if ( state == 1 )		10024341	0					
ANR	10024890	Condition	state == 1	524:20:11312:11321	10024341	0	True				
ANR	10024891	EqualityExpression	state == 1		10024341	0		==			
ANR	10024892	Identifier	state		10024341	0					
ANR	10024893	PrimaryExpression	1		10024341	1					
ANR	10024894	CompoundStatement		153:20:3611:3675	10024341	1					
ANR	10024895	IdentifierDeclStatement	int next ;	526:20:11364:11394	10024341	0	True				
ANR	10024896	IdentifierDecl	next		10024341	0					
ANR	10024897	IdentifierDeclType	int		10024341	0					
ANR	10024898	Identifier	next		10024341	1					
ANR	10024899	IdentifierDeclStatement	unsigned long len ;	529:20:11417:11456	10024341	1	True				
ANR	10024900	IdentifierDecl	len		10024341	0					
ANR	10024901	IdentifierDeclType	unsigned long		10024341	0					
ANR	10024902	Identifier	len		10024341	1					
ANR	10024903	IdentifierDeclStatement	"char brkused , quoted ;"	532:20:11479:11543	10024341	2	True				
ANR	10024904	IdentifierDecl	brkused		10024341	0					
ANR	10024905	IdentifierDeclType	char		10024341	0					
ANR	10024906	Identifier	brkused		10024341	1					
ANR	10024907	IdentifierDecl	quoted		10024341	1					
ANR	10024908	IdentifierDeclType	char		10024341	0					
ANR	10024909	Identifier	quoted		10024341	1					
ANR	10024910	ExpressionStatement	next = 0	536:20:11566:11572	10024341	3	True				
ANR	10024911	AssignmentExpression	next = 0		10024341	0		=			
ANR	10024912	Identifier	next		10024341	0					
ANR	10024913	PrimaryExpression	0		10024341	1					
ANR	10024914	ExpressionStatement	len = strlen ( token )	537:20:11594:11613	10024341	4	True				
ANR	10024915	AssignmentExpression	len = strlen ( token )		10024341	0		=			
ANR	10024916	Identifier	len		10024341	0					
ANR	10024917	CallExpression	strlen ( token )		10024341	1					
ANR	10024918	Callee	strlen		10024341	0					
ANR	10024919	Identifier	strlen		10024341	0					
ANR	10024920	ArgumentList	token		10024341	1					
ANR	10024921	Argument	token		10024341	0					
ANR	10024922	Identifier	token		10024341	0					
ANR	10024923	WhileStatement	"while ( tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0 )"		10024341	5					
ANR	10024924	Condition	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0"	538:26:11641:11758	10024341	0	True				
ANR	10024925	EqualityExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted ) == 0"		10024341	0		==			
ANR	10024926	CallExpression	"tokenizer ( 0 , newstr , inputlen , token , """" , ""&"" , """" , 0 , & brkused , & next , & quoted )"		10024341	0					
ANR	10024927	Callee	tokenizer		10024341	0					
ANR	10024928	Identifier	tokenizer		10024341	0					
ANR	10024929	ArgumentList	0		10024341	1					
ANR	10024930	Argument	0		10024341	0					
ANR	10024931	PrimaryExpression	0		10024341	0					
ANR	10024932	Argument	newstr		10024341	1					
ANR	10024933	Identifier	newstr		10024341	0					
ANR	10024934	Argument	inputlen		10024341	2					
ANR	10024935	Identifier	inputlen		10024341	0					
ANR	10024936	Argument	token		10024341	3					
ANR	10024937	Identifier	token		10024341	0					
ANR	10024938	Argument	""""""		10024341	4					
ANR	10024939	PrimaryExpression	""""""		10024341	0					
ANR	10024940	Argument	"""&"""		10024341	5					
ANR	10024941	PrimaryExpression	"""&"""		10024341	0					
ANR	10024942	Argument	""""""		10024341	6					
ANR	10024943	PrimaryExpression	""""""		10024341	0					
ANR	10024944	Argument	0		10024341	7					
ANR	10024945	PrimaryExpression	0		10024341	0					
ANR	10024946	Argument	& brkused		10024341	8					
ANR	10024947	UnaryOperationExpression	& brkused		10024341	0					
ANR	10024948	UnaryOperator	&		10024341	0					
ANR	10024949	Identifier	brkused		10024341	1					
ANR	10024950	Argument	& next		10024341	9					
ANR	10024951	UnaryOperationExpression	& next		10024341	0					
ANR	10024952	UnaryOperator	&		10024341	0					
ANR	10024953	Identifier	next		10024341	1					
ANR	10024954	Argument	& quoted		10024341	10					
ANR	10024955	UnaryOperationExpression	& quoted		10024341	0					
ANR	10024956	UnaryOperator	&		10024341	0					
ANR	10024957	Identifier	quoted		10024341	1					
ANR	10024958	PrimaryExpression	0		10024341	1					
ANR	10024959	CompoundStatement		161:22:3915:3915	10024341	1					
ANR	10024960	IfStatement	if ( brkused && next > 0 )		10024341	0					
ANR	10024961	Condition	brkused && next > 0	541:28:11813:11831	10024341	0	True				
ANR	10024962	AndExpression	brkused && next > 0		10024341	0		&&			
ANR	10024963	Identifier	brkused		10024341	0					
ANR	10024964	RelationalExpression	next > 0		10024341	1		>			
ANR	10024965	Identifier	next		10024341	0					
ANR	10024966	PrimaryExpression	0		10024341	1					
ANR	10024967	CompoundStatement		164:28:4022:4076	10024341	1					
ANR	10024968	IdentifierDeclStatement	char * s = & token [ next - 1 ] ;	543:28:11890:11944	10024341	0	True				
ANR	10024969	IdentifierDecl	* s = & token [ next - 1 ]		10024341	0					
ANR	10024970	IdentifierDeclType	char *		10024341	0					
ANR	10024971	Identifier	s		10024341	1					
ANR	10024972	AssignmentExpression	* s = & token [ next - 1 ]		10024341	2		=			
ANR	10024973	Identifier	s		10024341	0					
ANR	10024974	UnaryOperationExpression	& token [ next - 1 ]		10024341	1					
ANR	10024975	UnaryOperator	&		10024341	0					
ANR	10024976	ArrayIndexing	token [ next - 1 ]		10024341	1					
ANR	10024977	Identifier	token		10024341	0					
ANR	10024978	AdditiveExpression	next - 1		10024341	1		-			
ANR	10024979	Identifier	next		10024341	0					
ANR	10024980	PrimaryExpression	1		10024341	1					
ANR	10024981	ExpressionStatement	"len -= convertHTMLcodes ( s , strlen ( s ) )"	546:28:11975:12012	10024341	1	True				
ANR	10024982	AssignmentExpression	"len -= convertHTMLcodes ( s , strlen ( s ) )"		10024341	0		-=			
ANR	10024983	Identifier	len		10024341	0					
ANR	10024984	CallExpression	"convertHTMLcodes ( s , strlen ( s ) )"		10024341	1					
ANR	10024985	Callee	convertHTMLcodes		10024341	0					
ANR	10024986	Identifier	convertHTMLcodes		10024341	0					
ANR	10024987	ArgumentList	s		10024341	1					
ANR	10024988	Argument	s		10024341	0					
ANR	10024989	Identifier	s		10024341	0					
ANR	10024990	Argument	strlen ( s )		10024341	1					
ANR	10024991	CallExpression	strlen ( s )		10024341	0					
ANR	10024992	Callee	strlen		10024341	0					
ANR	10024993	Identifier	strlen		10024341	0					
ANR	10024994	ArgumentList	s		10024341	1					
ANR	10024995	Argument	s		10024341	0					
ANR	10024996	Identifier	s		10024341	0					
ANR	10024997	ExpressionStatement	"fputc ( 0x1c , ofile )"	550:20:12087:12105	10024341	6	True				
ANR	10024998	CallExpression	"fputc ( 0x1c , ofile )"		10024341	0					
ANR	10024999	Callee	fputc		10024341	0					
ANR	10025000	Identifier	fputc		10024341	0					
ANR	10025001	ArgumentList	0x1c		10024341	1					
ANR	10025002	Argument	0x1c		10024341	0					
ANR	10025003	PrimaryExpression	0x1c		10024341	0					
ANR	10025004	Argument	ofile		10024341	1					
ANR	10025005	Identifier	ofile		10024341	0					
ANR	10025006	ExpressionStatement	"fputc ( dataset , ofile )"	551:20:12127:12148	10024341	7	True				
ANR	10025007	CallExpression	"fputc ( dataset , ofile )"		10024341	0					
ANR	10025008	Callee	fputc		10024341	0					
ANR	10025009	Identifier	fputc		10024341	0					
ANR	10025010	ArgumentList	dataset		10024341	1					
ANR	10025011	Argument	dataset		10024341	0					
ANR	10025012	Identifier	dataset		10024341	0					
ANR	10025013	Argument	ofile		10024341	1					
ANR	10025014	Identifier	ofile		10024341	0					
ANR	10025015	ExpressionStatement	"fputc ( recnum , ofile )"	552:20:12170:12190	10024341	8	True				
ANR	10025016	CallExpression	"fputc ( recnum , ofile )"		10024341	0					
ANR	10025017	Callee	fputc		10024341	0					
ANR	10025018	Identifier	fputc		10024341	0					
ANR	10025019	ArgumentList	recnum		10024341	1					
ANR	10025020	Argument	recnum		10024341	0					
ANR	10025021	Identifier	recnum		10024341	0					
ANR	10025022	Argument	ofile		10024341	1					
ANR	10025023	Identifier	ofile		10024341	0					
ANR	10025024	IfStatement	if ( len < 0x10000 )		10024341	9					
ANR	10025025	Condition	len < 0x10000	553:24:12216:12228	10024341	0	True				
ANR	10025026	RelationalExpression	len < 0x10000		10024341	0		<			
ANR	10025027	Identifier	len		10024341	0					
ANR	10025028	PrimaryExpression	0x10000		10024341	1					
ANR	10025029	CompoundStatement		175:22:4385:4385	10024341	1					
ANR	10025030	ExpressionStatement	"fputc ( ( len >> 8 ) & 255 , ofile )"	555:24:12279:12309	10024341	0	True				
ANR	10025031	CallExpression	"fputc ( ( len >> 8 ) & 255 , ofile )"		10024341	0					
ANR	10025032	Callee	fputc		10024341	0					
ANR	10025033	Identifier	fputc		10024341	0					
ANR	10025034	ArgumentList	( len >> 8 ) & 255		10024341	1					
ANR	10025035	Argument	( len >> 8 ) & 255		10024341	0					
ANR	10025036	BitAndExpression	( len >> 8 ) & 255		10024341	0		&			
ANR	10025037	ShiftExpression	len >> 8		10024341	0		>>			
ANR	10025038	Identifier	len		10024341	0					
ANR	10025039	PrimaryExpression	8		10024341	1					
ANR	10025040	PrimaryExpression	255		10024341	1					
ANR	10025041	Argument	ofile		10024341	1					
ANR	10025042	Identifier	ofile		10024341	0					
ANR	10025043	ExpressionStatement	"fputc ( len & 255 , ofile )"	556:24:12335:12358	10024341	1	True				
ANR	10025044	CallExpression	"fputc ( len & 255 , ofile )"		10024341	0					
ANR	10025045	Callee	fputc		10024341	0					
ANR	10025046	Identifier	fputc		10024341	0					
ANR	10025047	ArgumentList	len & 255		10024341	1					
ANR	10025048	Argument	len & 255		10024341	0					
ANR	10025049	BitAndExpression	len & 255		10024341	0		&			
ANR	10025050	Identifier	len		10024341	0					
ANR	10025051	PrimaryExpression	255		10024341	1					
ANR	10025052	Argument	ofile		10024341	1					
ANR	10025053	Identifier	ofile		10024341	0					
ANR	10025054	ElseStatement	else		10024341	0					
ANR	10025055	CompoundStatement		180:22:4563:4563	10024341	0					
ANR	10025056	ExpressionStatement	"fputc ( ( ( len >> 24 ) & 255 ) | 0x80 , ofile )"	560:24:12457:12497	10024341	0	True				
ANR	10025057	CallExpression	"fputc ( ( ( len >> 24 ) & 255 ) | 0x80 , ofile )"		10024341	0					
ANR	10025058	Callee	fputc		10024341	0					
ANR	10025059	Identifier	fputc		10024341	0					
ANR	10025060	ArgumentList	( ( len >> 24 ) & 255 ) | 0x80		10024341	1					
ANR	10025061	Argument	( ( len >> 24 ) & 255 ) | 0x80		10024341	0					
ANR	10025062	InclusiveOrExpression	( ( len >> 24 ) & 255 ) | 0x80		10024341	0		|			
ANR	10025063	BitAndExpression	( len >> 24 ) & 255		10024341	0		&			
ANR	10025064	ShiftExpression	len >> 24		10024341	0		>>			
ANR	10025065	Identifier	len		10024341	0					
ANR	10025066	PrimaryExpression	24		10024341	1					
ANR	10025067	PrimaryExpression	255		10024341	1					
ANR	10025068	PrimaryExpression	0x80		10024341	1					
ANR	10025069	Argument	ofile		10024341	1					
ANR	10025070	Identifier	ofile		10024341	0					
ANR	10025071	ExpressionStatement	"fputc ( ( len >> 16 ) & 255 , ofile )"	561:24:12523:12554	10024341	1	True				
ANR	10025072	CallExpression	"fputc ( ( len >> 16 ) & 255 , ofile )"		10024341	0					
ANR	10025073	Callee	fputc		10024341	0					
ANR	10025074	Identifier	fputc		10024341	0					
ANR	10025075	ArgumentList	( len >> 16 ) & 255		10024341	1					
ANR	10025076	Argument	( len >> 16 ) & 255		10024341	0					
ANR	10025077	BitAndExpression	( len >> 16 ) & 255		10024341	0		&			
ANR	10025078	ShiftExpression	len >> 16		10024341	0		>>			
ANR	10025079	Identifier	len		10024341	0					
ANR	10025080	PrimaryExpression	16		10024341	1					
ANR	10025081	PrimaryExpression	255		10024341	1					
ANR	10025082	Argument	ofile		10024341	1					
ANR	10025083	Identifier	ofile		10024341	0					
ANR	10025084	ExpressionStatement	"fputc ( ( len >> 8 ) & 255 , ofile )"	562:24:12580:12610	10024341	2	True				
ANR	10025085	CallExpression	"fputc ( ( len >> 8 ) & 255 , ofile )"		10024341	0					
ANR	10025086	Callee	fputc		10024341	0					
ANR	10025087	Identifier	fputc		10024341	0					
ANR	10025088	ArgumentList	( len >> 8 ) & 255		10024341	1					
ANR	10025089	Argument	( len >> 8 ) & 255		10024341	0					
ANR	10025090	BitAndExpression	( len >> 8 ) & 255		10024341	0		&			
ANR	10025091	ShiftExpression	len >> 8		10024341	0		>>			
ANR	10025092	Identifier	len		10024341	0					
ANR	10025093	PrimaryExpression	8		10024341	1					
ANR	10025094	PrimaryExpression	255		10024341	1					
ANR	10025095	Argument	ofile		10024341	1					
ANR	10025096	Identifier	ofile		10024341	0					
ANR	10025097	ExpressionStatement	"fputc ( len & 255 , ofile )"	563:24:12636:12659	10024341	3	True				
ANR	10025098	CallExpression	"fputc ( len & 255 , ofile )"		10024341	0					
ANR	10025099	Callee	fputc		10024341	0					
ANR	10025100	Identifier	fputc		10024341	0					
ANR	10025101	ArgumentList	len & 255		10024341	1					
ANR	10025102	Argument	len & 255		10024341	0					
ANR	10025103	BitAndExpression	len & 255		10024341	0		&			
ANR	10025104	Identifier	len		10024341	0					
ANR	10025105	PrimaryExpression	255		10024341	1					
ANR	10025106	Argument	ofile		10024341	1					
ANR	10025107	Identifier	ofile		10024341	0					
ANR	10025108	ExpressionStatement	next = 0	565:20:12705:12711	10024341	10	True				
ANR	10025109	AssignmentExpression	next = 0		10024341	0		=			
ANR	10025110	Identifier	next		10024341	0					
ANR	10025111	PrimaryExpression	0		10024341	1					
ANR	10025112	WhileStatement	while ( len -- )		10024341	11					
ANR	10025113	Condition	len --	566:27:12740:12744	10024341	0	True				
ANR	10025114	PostIncDecOperationExpression	len --		10024341	0					
ANR	10025115	Identifier	len		10024341	0					
ANR	10025116	IncDec	--		10024341	1					
ANR	10025117	ExpressionStatement	"fputc ( token [ next ++ ] , ofile )"	567:22:12769:12796	10024341	1	True				
ANR	10025118	CallExpression	"fputc ( token [ next ++ ] , ofile )"		10024341	0					
ANR	10025119	Callee	fputc		10024341	0					
ANR	10025120	Identifier	fputc		10024341	0					
ANR	10025121	ArgumentList	token [ next ++ ]		10024341	1					
ANR	10025122	Argument	token [ next ++ ]		10024341	0					
ANR	10025123	ArrayIndexing	token [ next ++ ]		10024341	0					
ANR	10025124	Identifier	token		10024341	0					
ANR	10025125	PostIncDecOperationExpression	next ++		10024341	1					
ANR	10025126	Identifier	next		10024341	0					
ANR	10025127	IncDec	++		10024341	1					
ANR	10025128	Argument	ofile		10024341	1					
ANR	10025129	Identifier	ofile		10024341	0					
ANR	10025130	ExpressionStatement	state ++	569:14:12832:12839	10024341	1	True				
ANR	10025131	PostIncDecOperationExpression	state ++		10024341	0					
ANR	10025132	Identifier	state		10024341	0					
ANR	10025133	IncDec	++		10024341	1					
ANR	10025134	ExpressionStatement	free ( token )	571:10:12865:12876	10024341	5	True				
ANR	10025135	CallExpression	free ( token )		10024341	0					
ANR	10025136	Callee	free		10024341	0					
ANR	10025137	Identifier	free		10024341	0					
ANR	10025138	ArgumentList	token		10024341	1					
ANR	10025139	Argument	token		10024341	0					
ANR	10025140	Identifier	token		10024341	0					
ANR	10025141	ExpressionStatement	token = ( char * ) NULL	572:10:12888:12908	10024341	6	True				
ANR	10025142	AssignmentExpression	token = ( char * ) NULL		10024341	0		=			
ANR	10025143	Identifier	token		10024341	0					
ANR	10025144	CastExpression	( char * ) NULL		10024341	1					
ANR	10025145	CastTarget	char *		10024341	0					
ANR	10025146	Identifier	NULL		10024341	1					
ANR	10025147	ExpressionStatement	free ( newstr )	573:10:12920:12932	10024341	7	True				
ANR	10025148	CallExpression	free ( newstr )		10024341	0					
ANR	10025149	Callee	free		10024341	0					
ANR	10025150	Identifier	free		10024341	0					
ANR	10025151	ArgumentList	newstr		10024341	1					
ANR	10025152	Argument	newstr		10024341	0					
ANR	10025153	Identifier	newstr		10024341	0					
ANR	10025154	ExpressionStatement	newstr = ( char * ) NULL	574:10:12944:12965	10024341	8	True				
ANR	10025155	AssignmentExpression	newstr = ( char * ) NULL		10024341	0		=			
ANR	10025156	Identifier	newstr		10024341	0					
ANR	10025157	CastExpression	( char * ) NULL		10024341	1					
ANR	10025158	CastTarget	char *		10024341	0					
ANR	10025159	Identifier	NULL		10024341	1					
ANR	10025160	ExpressionStatement	free ( line )	576:6:12983:12993	10024341	7	True				
ANR	10025161	CallExpression	free ( line )		10024341	0					
ANR	10025162	Callee	free		10024341	0					
ANR	10025163	Identifier	free		10024341	0					
ANR	10025164	ArgumentList	line		10024341	1					
ANR	10025165	Argument	line		10024341	0					
ANR	10025166	Identifier	line		10024341	0					
ANR	10025167	ExpressionStatement	fclose ( ifile )	578:6:13002:13017	10024341	8	True				
ANR	10025168	CallExpression	fclose ( ifile )		10024341	0					
ANR	10025169	Callee	fclose		10024341	0					
ANR	10025170	Identifier	fclose		10024341	0					
ANR	10025171	ArgumentList	ifile		10024341	1					
ANR	10025172	Argument	ifile		10024341	0					
ANR	10025173	Identifier	ifile		10024341	0					
ANR	10025174	ExpressionStatement	fclose ( ofile )	579:6:13025:13040	10024341	9	True				
ANR	10025175	CallExpression	fclose ( ofile )		10024341	0					
ANR	10025176	Callee	fclose		10024341	0					
ANR	10025177	Identifier	fclose		10024341	0					
ANR	10025178	ArgumentList	ofile		10024341	1					
ANR	10025179	Argument	ofile		10024341	0					
ANR	10025180	Identifier	ofile		10024341	0					
ANR	10025181	ReturnStatement	return 0 ;	582:2:13051:13059	10024341	8	True				
ANR	10025182	PrimaryExpression	0		10024341	0					
ANR	10025183	ReturnType	int		10024341	1					
ANR	10025184	Identifier	main		10024341	2					
ANR	10025185	ParameterList	"int argc , char * argv [ ]"		10024341	3					
ANR	10025186	Parameter	int argc	379:9:7843:7850	10024341	0	True				
ANR	10025187	ParameterType	int		10024341	0					
ANR	10025188	Identifier	argc		10024341	1					
ANR	10025189	Parameter	char * argv [ ]	379:19:7853:7864	10024341	1	True				
ANR	10025190	ParameterType	char * [ ]		10024341	0					
ANR	10025191	Identifier	argv		10024341	1					
ANR	10025192	CFGEntryNode	ENTRY		10024341		True				
ANR	10025193	CFGExitNode	EXIT		10024341		True				
ANR	10025194	Symbol	next		10024341						
ANR	10025195	Symbol	stdin		10024341						
ANR	10025196	Symbol	stdout		10024341						
ANR	10025197	Symbol	BUFFER_SZ		10024341						
ANR	10025198	Symbol	inputlen		10024341						
ANR	10025199	Symbol	line		10024341						
ANR	10025200	Symbol	& inputlen		10024341						
ANR	10025201	Symbol	usage		10024341						
ANR	10025202	Symbol	* argv		10024341						
ANR	10025203	Symbol	_O_BINARY		10024341						
ANR	10025204	Symbol	argv		10024341						
ANR	10025205	Symbol	& brkused		10024341						
ANR	10025206	Symbol	& quoted		10024341						
ANR	10025207	Symbol	mode		10024341						
ANR	10025208	Symbol	quoted		10024341						
ANR	10025209	Symbol	strlen		10024341						
ANR	10025210	Symbol	ifile		10024341						
ANR	10025211	Symbol	len		10024341						
ANR	10025212	Symbol	* * argv		10024341						
ANR	10025213	Symbol	state		10024341						
ANR	10025214	Symbol	brkused		10024341						
ANR	10025215	Symbol	argc		10024341						
ANR	10025216	Symbol	atoi		10024341						
ANR	10025217	Symbol	fopen		10024341						
ANR	10025218	Symbol	malloc		10024341						
ANR	10025219	Symbol	* * i		10024341						
ANR	10025220	Symbol	c		10024341						
ANR	10025221	Symbol	NULL		10024341						
ANR	10025222	Symbol	& next		10024341						
ANR	10025223	Symbol	convertHTMLcodes		10024341						
ANR	10025224	Symbol	_fileno		10024341						
ANR	10025225	Symbol	ofile		10024341						
ANR	10025226	Symbol	i		10024341						
ANR	10025227	Symbol	newstr		10024341						
ANR	10025228	Symbol	token		10024341						
ANR	10025229	Symbol	tokenizer		10024341						
ANR	10025230	Symbol	recnum		10024341						
ANR	10025231	Symbol	* i		10024341						
ANR	10025232	Symbol	s		10024341						
ANR	10025233	Symbol	* token		10024341						
ANR	10025234	Symbol	super_fgets		10024341						
ANR	10025235	Symbol	dataset		10024341						
ANR	10025236	DeclStmt									
ANR	10025237	Decl							int	int	_p_state
ANR	10025238	DeclStmt									
ANR	10025239	Decl							unsigned	unsigned	_p_flag
ANR	10025240	DeclStmt									
ANR	10025241	Decl							char	char	_p_curquote
ANR	10025242	DeclStmt									
ANR	10025243	Decl							int	int	_p_tokpos
ANR	10025244	Function	sindex	782:0:19048:19246							
ANR	10025245	FunctionDef	"sindex (char ch , char * string)"		10025244	0					
ANR	10025246	CompoundStatement		783:0:19081:19246	10025244	0					
ANR	10025247	IdentifierDeclStatement	char * cp ;	784:2:19085:19093	10025244	0	True				
ANR	10025248	IdentifierDecl	* cp		10025244	0					
ANR	10025249	IdentifierDeclType	char *		10025244	0					
ANR	10025250	Identifier	cp		10025244	1					
ANR	10025251	ForStatement	for ( cp = string ; * cp ; ++ cp )		10025244	1					
ANR	10025252	ForInit	cp = string ;	785:6:19101:19110	10025244	0	True				
ANR	10025253	AssignmentExpression	cp = string		10025244	0		=			
ANR	10025254	Identifier	cp		10025244	0					
ANR	10025255	Identifier	string		10025244	1					
ANR	10025256	Condition	* cp	785:16:19111:19113	10025244	1	True				
ANR	10025257	UnaryOperationExpression	* cp		10025244	0					
ANR	10025258	UnaryOperator	*		10025244	0					
ANR	10025259	Identifier	cp		10025244	1					
ANR	10025260	UnaryExpression	++ cp	785:20:19115:19118	10025244	2	True				
ANR	10025261	IncDec	++		10025244	0					
ANR	10025262	Identifier	cp		10025244	1					
ANR	10025263	IfStatement	if ( ch == * cp )		10025244	3					
ANR	10025264	Condition	ch == * cp	786:7:19128:19134	10025244	0	True				
ANR	10025265	EqualityExpression	ch == * cp		10025244	0		==			
ANR	10025266	Identifier	ch		10025244	0					
ANR	10025267	UnaryOperationExpression	* cp		10025244	1					
ANR	10025268	UnaryOperator	*		10025244	0					
ANR	10025269	Identifier	cp		10025244	1					
ANR	10025270	ReturnStatement	return ( int ) ( cp - string ) ;	787:6:19143:19166	10025244	1	True				
ANR	10025271	CastExpression	( int ) ( cp - string )		10025244	0					
ANR	10025272	CastTarget	int		10025244	0					
ANR	10025273	AdditiveExpression	cp - string		10025244	1		-			
ANR	10025274	Identifier	cp		10025244	0					
ANR	10025275	Identifier	string		10025244	1					
ANR	10025276	ReturnStatement	return - 1 ;	788:2:19204:19213	10025244	2	True				
ANR	10025277	UnaryOperationExpression	- 1		10025244	0					
ANR	10025278	UnaryOperator	-		10025244	0					
ANR	10025279	PrimaryExpression	1		10025244	1					
ANR	10025280	ReturnType	int		10025244	1					
ANR	10025281	Identifier	sindex		10025244	2					
ANR	10025282	ParameterList	"char ch , char * string"		10025244	3					
ANR	10025283	Parameter	char ch	782:11:19059:19065	10025244	0	True				
ANR	10025284	ParameterType	char		10025244	0					
ANR	10025285	Identifier	ch		10025244	1					
ANR	10025286	Parameter	char * string	782:19:19067:19078	10025244	1	True				
ANR	10025287	ParameterType	char *		10025244	0					
ANR	10025288	Identifier	string		10025244	1					
ANR	10025289	CFGEntryNode	ENTRY		10025244		True				
ANR	10025290	CFGExitNode	EXIT		10025244		True				
ANR	10025291	Symbol	* cp		10025244						
ANR	10025292	Symbol	string		10025244						
ANR	10025293	Symbol	ch		10025244						
ANR	10025294	Symbol	cp		10025244						
ANR	10025295	Function	chstore	793:0:19326:19846							
ANR	10025296	FunctionDef	"chstore (char * string , int max , char ch)"		10025295	0					
ANR	10025297	CompoundStatement		794:0:19369:19846	10025295	0					
ANR	10025298	IdentifierDeclStatement	char c ;	795:2:19373:19379	10025295	0	True				
ANR	10025299	IdentifierDecl	c		10025295	0					
ANR	10025300	IdentifierDeclType	char		10025295	0					
ANR	10025301	Identifier	c		10025295	1					
ANR	10025302	IfStatement	if ( _p_tokpos >= 0 && _p_tokpos < max - 1 )		10025295	1					
ANR	10025303	Condition	_p_tokpos >= 0 && _p_tokpos < max - 1	796:5:19386:19414	10025295	0	True				
ANR	10025304	AndExpression	_p_tokpos >= 0 && _p_tokpos < max - 1		10025295	0		&&			
ANR	10025305	RelationalExpression	_p_tokpos >= 0		10025295	0		>=			
ANR	10025306	Identifier	_p_tokpos		10025295	0					
ANR	10025307	PrimaryExpression	0		10025295	1					
ANR	10025308	RelationalExpression	_p_tokpos < max - 1		10025295	1		<			
ANR	10025309	Identifier	_p_tokpos		10025295	0					
ANR	10025310	AdditiveExpression	max - 1		10025295	1		-			
ANR	10025311	Identifier	max		10025295	0					
ANR	10025312	PrimaryExpression	1		10025295	1					
ANR	10025313	CompoundStatement		4:4:51:51	10025295	1					
ANR	10025314	IfStatement	if ( _p_state == IN_QUOTE )		10025295	0					
ANR	10025315	Condition	_p_state == IN_QUOTE	798:9:19432:19449	10025295	0	True				
ANR	10025316	EqualityExpression	_p_state == IN_QUOTE		10025295	0		==			
ANR	10025317	Identifier	_p_state		10025295	0					
ANR	10025318	Identifier	IN_QUOTE		10025295	1					
ANR	10025319	ExpressionStatement	c = ch	799:8:19460:19464	10025295	1	True				
ANR	10025320	AssignmentExpression	c = ch		10025295	0		=			
ANR	10025321	Identifier	c		10025295	0					
ANR	10025322	Identifier	ch		10025295	1					
ANR	10025323	ElseStatement	else		10025295	0					
ANR	10025324	SwitchStatement	switch ( _p_flag & 3 )		10025295	0					
ANR	10025325	Condition	_p_flag & 3	801:15:19492:19500	10025295	0	True				
ANR	10025326	BitAndExpression	_p_flag & 3		10025295	0		&			
ANR	10025327	Identifier	_p_flag		10025295	0					
ANR	10025328	PrimaryExpression	3		10025295	1					
ANR	10025329	CompoundStatement		9:10:143:143	10025295	1					
ANR	10025330	Label	case 1 :	803:10:19525:19531	10025295	0	True				
ANR	10025331	ExpressionStatement	c = toupper ( ( int ) ch )	804:12:19573:19592	10025295	1	True				
ANR	10025332	AssignmentExpression	c = toupper ( ( int ) ch )		10025295	0		=			
ANR	10025333	Identifier	c		10025295	0					
ANR	10025334	CallExpression	toupper ( ( int ) ch )		10025295	1					
ANR	10025335	Callee	toupper		10025295	0					
ANR	10025336	Identifier	toupper		10025295	0					
ANR	10025337	ArgumentList	( int ) ch		10025295	1					
ANR	10025338	Argument	( int ) ch		10025295	0					
ANR	10025339	CastExpression	( int ) ch		10025295	0					
ANR	10025340	CastTarget	int		10025295	0					
ANR	10025341	Identifier	ch		10025295	1					
ANR	10025342	BreakStatement	break ;	805:12:19606:19611	10025295	2	True				
ANR	10025343	Label	case 2 :	807:10:19624:19630	10025295	3	True				
ANR	10025344	ExpressionStatement	c = tolower ( ( int ) ch )	808:12:19672:19691	10025295	4	True				
ANR	10025345	AssignmentExpression	c = tolower ( ( int ) ch )		10025295	0		=			
ANR	10025346	Identifier	c		10025295	0					
ANR	10025347	CallExpression	tolower ( ( int ) ch )		10025295	1					
ANR	10025348	Callee	tolower		10025295	0					
ANR	10025349	Identifier	tolower		10025295	0					
ANR	10025350	ArgumentList	( int ) ch		10025295	1					
ANR	10025351	Argument	( int ) ch		10025295	0					
ANR	10025352	CastExpression	( int ) ch		10025295	0					
ANR	10025353	CastTarget	int		10025295	0					
ANR	10025354	Identifier	ch		10025295	1					
ANR	10025355	BreakStatement	break ;	809:12:19705:19710	10025295	5	True				
ANR	10025356	Label	default :	811:10:19723:19730	10025295	6	True				
ANR	10025357	Identifier	default		10025295	0					
ANR	10025358	ExpressionStatement	c = ch	812:12:19764:19768	10025295	7	True				
ANR	10025359	AssignmentExpression	c = ch		10025295	0		=			
ANR	10025360	Identifier	c		10025295	0					
ANR	10025361	Identifier	ch		10025295	1					
ANR	10025362	BreakStatement	break ;	813:12:19782:19787	10025295	8	True				
ANR	10025363	ExpressionStatement	string [ _p_tokpos ++ ] = c	815:6:19807:19828	10025295	1	True				
ANR	10025364	AssignmentExpression	string [ _p_tokpos ++ ] = c		10025295	0		=			
ANR	10025365	ArrayIndexing	string [ _p_tokpos ++ ]		10025295	0					
ANR	10025366	Identifier	string		10025295	0					
ANR	10025367	PostIncDecOperationExpression	_p_tokpos ++		10025295	1					
ANR	10025368	Identifier	_p_tokpos		10025295	0					
ANR	10025369	IncDec	++		10025295	1					
ANR	10025370	Identifier	c		10025295	1					
ANR	10025371	ReturnStatement	return ;	817:2:19838:19844	10025295	2	True				
ANR	10025372	ReturnType	void		10025295	1					
ANR	10025373	Identifier	chstore		10025295	2					
ANR	10025374	ParameterList	"char * string , int max , char ch"		10025295	3					
ANR	10025375	Parameter	char * string	793:13:19339:19350	10025295	0	True				
ANR	10025376	ParameterType	char *		10025295	0					
ANR	10025377	Identifier	string		10025295	1					
ANR	10025378	Parameter	int max	793:26:19352:19358	10025295	1	True				
ANR	10025379	ParameterType	int		10025295	0					
ANR	10025380	Identifier	max		10025295	1					
ANR	10025381	Parameter	char ch	793:34:19360:19366	10025295	2	True				
ANR	10025382	ParameterType	char		10025295	0					
ANR	10025383	Identifier	ch		10025295	1					
ANR	10025384	CFGEntryNode	ENTRY		10025295		True				
ANR	10025385	CFGExitNode	EXIT		10025295		True				
ANR	10025386	Symbol	c		10025295						
ANR	10025387	Symbol	_p_state		10025295						
ANR	10025388	Symbol	_p_flag		10025295						
ANR	10025389	Symbol	string		10025295						
ANR	10025390	Symbol	tolower		10025295						
ANR	10025391	Symbol	max		10025295						
ANR	10025392	Symbol	ch		10025295						
ANR	10025393	Symbol	toupper		10025295						
ANR	10025394	Symbol	IN_QUOTE		10025295						
ANR	10025395	Symbol	* string		10025295						
ANR	10025396	Symbol	_p_tokpos		10025295						
ANR	10025397	Function	tokenizer	820:0:19849:22987							
ANR	10025398	FunctionDef	"tokenizer (unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted)"		10025397	0					
ANR	10025399	CompoundStatement		823:0:20031:22987	10025397	0					
ANR	10025400	IdentifierDeclStatement	int qp ;	824:2:20035:20041	10025397	0	True				
ANR	10025401	IdentifierDecl	qp		10025397	0					
ANR	10025402	IdentifierDeclType	int		10025397	0					
ANR	10025403	Identifier	qp		10025397	1					
ANR	10025404	IdentifierDeclStatement	"char c , nc ;"	825:2:20045:20054	10025397	1	True				
ANR	10025405	IdentifierDecl	c		10025397	0					
ANR	10025406	IdentifierDeclType	char		10025397	0					
ANR	10025407	Identifier	c		10025397	1					
ANR	10025408	IdentifierDecl	nc		10025397	1					
ANR	10025409	IdentifierDeclType	char		10025397	0					
ANR	10025410	Identifier	nc		10025397	1					
ANR	10025411	ExpressionStatement	* brkused = 0	827:2:20059:20069	10025397	2	True				
ANR	10025412	AssignmentExpression	* brkused = 0		10025397	0		=			
ANR	10025413	UnaryOperationExpression	* brkused		10025397	0					
ANR	10025414	UnaryOperator	*		10025397	0					
ANR	10025415	Identifier	brkused		10025397	1					
ANR	10025416	PrimaryExpression	0		10025397	1					
ANR	10025417	ExpressionStatement	* quoted = 0	828:2:20099:20108	10025397	3	True				
ANR	10025418	AssignmentExpression	* quoted = 0		10025397	0		=			
ANR	10025419	UnaryOperationExpression	* quoted		10025397	0					
ANR	10025420	UnaryOperator	*		10025397	0					
ANR	10025421	Identifier	quoted		10025397	1					
ANR	10025422	PrimaryExpression	0		10025397	1					
ANR	10025423	IfStatement	if ( ! line [ * next ] )		10025397	4					
ANR	10025424	Condition	! line [ * next ]	830:5:20142:20153	10025397	0	True				
ANR	10025425	UnaryOperationExpression	! line [ * next ]		10025397	0					
ANR	10025426	UnaryOperator	!		10025397	0					
ANR	10025427	ArrayIndexing	line [ * next ]		10025397	1					
ANR	10025428	Identifier	line		10025397	0					
ANR	10025429	UnaryOperationExpression	* next		10025397	1					
ANR	10025430	UnaryOperator	*		10025397	0					
ANR	10025431	Identifier	next		10025397	1					
ANR	10025432	ReturnStatement	return 1 ;	831:4:20205:20213	10025397	1	True				
ANR	10025433	PrimaryExpression	1		10025397	0					
ANR	10025434	ExpressionStatement	_p_state = IN_WHITE	833:2:20218:20235	10025397	5	True				
ANR	10025435	AssignmentExpression	_p_state = IN_WHITE		10025397	0		=			
ANR	10025436	Identifier	_p_state		10025397	0					
ANR	10025437	Identifier	IN_WHITE		10025397	1					
ANR	10025438	ExpressionStatement	_p_curquote = 0	834:2:20264:20277	10025397	6	True				
ANR	10025439	AssignmentExpression	_p_curquote = 0		10025397	0		=			
ANR	10025440	Identifier	_p_curquote		10025397	0					
ANR	10025441	PrimaryExpression	0		10025397	1					
ANR	10025442	ExpressionStatement	_p_flag = inflag	835:2:20321:20335	10025397	7	True				
ANR	10025443	AssignmentExpression	_p_flag = inflag		10025397	0		=			
ANR	10025444	Identifier	_p_flag		10025397	0					
ANR	10025445	Identifier	inflag		10025397	1					
ANR	10025446	ForStatement	for ( _p_tokpos = 0 ; ( c = line [ * next ] ) ; ++ ( * next ) )		10025397	8					
ANR	10025447	ForInit	_p_tokpos = 0 ;	837:6:20369:20380	10025397	0	True				
ANR	10025448	AssignmentExpression	_p_tokpos = 0		10025397	0		=			
ANR	10025449	Identifier	_p_tokpos		10025397	0					
ANR	10025450	PrimaryExpression	0		10025397	1					
ANR	10025451	Condition	c = line [ * next ]	837:18:20381:20395	10025397	1	True				
ANR	10025452	AssignmentExpression	c = line [ * next ]		10025397	0		=			
ANR	10025453	Identifier	c		10025397	0					
ANR	10025454	ArrayIndexing	line [ * next ]		10025397	1					
ANR	10025455	Identifier	line		10025397	0					
ANR	10025456	UnaryOperationExpression	* next		10025397	1					
ANR	10025457	UnaryOperator	*		10025397	0					
ANR	10025458	Identifier	next		10025397	1					
ANR	10025459	UnaryExpression	++ ( * next )	837:34:20397:20405	10025397	2	True				
ANR	10025460	IncDec	++		10025397	0					
ANR	10025461	UnaryOperationExpression	* next		10025397	1					
ANR	10025462	UnaryOperator	*		10025397	0					
ANR	10025463	Identifier	next		10025397	1					
ANR	10025464	CompoundStatement		16:4:396:396	10025397	3					
ANR	10025465	IfStatement	"if ( ( qp = sindex ( c , brkchar ) ) >= 0 )"		10025397	0					
ANR	10025466	Condition	"( qp = sindex ( c , brkchar ) ) >= 0"	839:9:20439:20463	10025397	0	True				
ANR	10025467	RelationalExpression	"( qp = sindex ( c , brkchar ) ) >= 0"		10025397	0		>=			
ANR	10025468	AssignmentExpression	"qp = sindex ( c , brkchar )"		10025397	0		=			
ANR	10025469	Identifier	qp		10025397	0					
ANR	10025470	CallExpression	"sindex ( c , brkchar )"		10025397	1					
ANR	10025471	Callee	sindex		10025397	0					
ANR	10025472	Identifier	sindex		10025397	0					
ANR	10025473	ArgumentList	c		10025397	1					
ANR	10025474	Argument	c		10025397	0					
ANR	10025475	Identifier	c		10025397	0					
ANR	10025476	Argument	brkchar		10025397	1					
ANR	10025477	Identifier	brkchar		10025397	0					
ANR	10025478	PrimaryExpression	0		10025397	1					
ANR	10025479	CompoundStatement		18:8:455:455	10025397	1					
ANR	10025480	SwitchStatement	switch ( _p_state )		10025397	0					
ANR	10025481	Condition	_p_state	841:17:20506:20513	10025397	0	True				
ANR	10025482	Identifier	_p_state		10025397	0					
ANR	10025483	CompoundStatement		20:12:496:496	10025397	1					
ANR	10025484	Label	case IN_WHITE :	843:5:20535:20548	10025397	0	True				
ANR	10025485	Identifier	IN_WHITE		10025397	0					
ANR	10025486	Label	case IN_TOKEN :	844:5:20590:20603	10025397	1	True				
ANR	10025487	Identifier	IN_TOKEN		10025397	0					
ANR	10025488	Label	case IN_OZONE :	845:5:20635:20648	10025397	2	True				
ANR	10025489	Identifier	IN_OZONE		10025397	0					
ANR	10025490	ExpressionStatement	++ ( * next )	846:7:20672:20681	10025397	3	True				
ANR	10025491	UnaryExpression	++ ( * next )		10025397	0					
ANR	10025492	IncDec	++		10025397	0					
ANR	10025493	UnaryOperationExpression	* next		10025397	1					
ANR	10025494	UnaryOperator	*		10025397	0					
ANR	10025495	Identifier	next		10025397	1					
ANR	10025496	ExpressionStatement	* brkused = brkchar [ qp ]	847:7:20690:20710	10025397	4	True				
ANR	10025497	AssignmentExpression	* brkused = brkchar [ qp ]		10025397	0		=			
ANR	10025498	UnaryOperationExpression	* brkused		10025397	0					
ANR	10025499	UnaryOperator	*		10025397	0					
ANR	10025500	Identifier	brkused		10025397	1					
ANR	10025501	ArrayIndexing	brkchar [ qp ]		10025397	1					
ANR	10025502	Identifier	brkchar		10025397	0					
ANR	10025503	Identifier	qp		10025397	1					
ANR	10025504	GotoStatement	goto byebye ;	848:7:20719:20730	10025397	5	True				
ANR	10025505	Identifier	byebye		10025397	0					
ANR	10025506	Label	case IN_QUOTE :	850:5:20738:20751	10025397	6	True				
ANR	10025507	Identifier	IN_QUOTE		10025397	0					
ANR	10025508	ExpressionStatement	"chstore ( token , tokmax , c )"	851:7:20784:20807	10025397	7	True				
ANR	10025509	CallExpression	"chstore ( token , tokmax , c )"		10025397	0					
ANR	10025510	Callee	chstore		10025397	0					
ANR	10025511	Identifier	chstore		10025397	0					
ANR	10025512	ArgumentList	token		10025397	1					
ANR	10025513	Argument	token		10025397	0					
ANR	10025514	Identifier	token		10025397	0					
ANR	10025515	Argument	tokmax		10025397	1					
ANR	10025516	Identifier	tokmax		10025397	0					
ANR	10025517	Argument	c		10025397	2					
ANR	10025518	Identifier	c		10025397	0					
ANR	10025519	BreakStatement	break ;	852:7:20816:20821	10025397	8	True				
ANR	10025520	ElseStatement	else		10025397	0					
ANR	10025521	IfStatement	"if ( ( qp = sindex ( c , quote ) ) >= 0 )"		10025397	0					
ANR	10025522	Condition	"( qp = sindex ( c , quote ) ) >= 0"	855:14:20861:20883	10025397	0	True				
ANR	10025523	RelationalExpression	"( qp = sindex ( c , quote ) ) >= 0"		10025397	0		>=			
ANR	10025524	AssignmentExpression	"qp = sindex ( c , quote )"		10025397	0		=			
ANR	10025525	Identifier	qp		10025397	0					
ANR	10025526	CallExpression	"sindex ( c , quote )"		10025397	1					
ANR	10025527	Callee	sindex		10025397	0					
ANR	10025528	Identifier	sindex		10025397	0					
ANR	10025529	ArgumentList	c		10025397	1					
ANR	10025530	Argument	c		10025397	0					
ANR	10025531	Identifier	c		10025397	0					
ANR	10025532	Argument	quote		10025397	1					
ANR	10025533	Identifier	quote		10025397	0					
ANR	10025534	PrimaryExpression	0		10025397	1					
ANR	10025535	CompoundStatement		34:8:875:875	10025397	1					
ANR	10025536	SwitchStatement	switch ( _p_state )		10025397	0					
ANR	10025537	Condition	_p_state	857:17:20926:20933	10025397	0	True				
ANR	10025538	Identifier	_p_state		10025397	0					
ANR	10025539	CompoundStatement		36:12:916:916	10025397	1					
ANR	10025540	Label	case IN_WHITE :	859:5:20955:20968	10025397	0	True				
ANR	10025541	Identifier	IN_WHITE		10025397	0					
ANR	10025542	ExpressionStatement	_p_state = IN_QUOTE	860:7:21005:21022	10025397	1	True				
ANR	10025543	AssignmentExpression	_p_state = IN_QUOTE		10025397	0		=			
ANR	10025544	Identifier	_p_state		10025397	0					
ANR	10025545	Identifier	IN_QUOTE		10025397	1					
ANR	10025546	ExpressionStatement	_p_curquote = quote [ qp ]	861:7:21053:21074	10025397	2	True				
ANR	10025547	AssignmentExpression	_p_curquote = quote [ qp ]		10025397	0		=			
ANR	10025548	Identifier	_p_curquote		10025397	0					
ANR	10025549	ArrayIndexing	quote [ qp ]		10025397	1					
ANR	10025550	Identifier	quote		10025397	0					
ANR	10025551	Identifier	qp		10025397	1					
ANR	10025552	ExpressionStatement	* quoted = 1	862:7:21105:21114	10025397	3	True				
ANR	10025553	AssignmentExpression	* quoted = 1		10025397	0		=			
ANR	10025554	UnaryOperationExpression	* quoted		10025397	0					
ANR	10025555	UnaryOperator	*		10025397	0					
ANR	10025556	Identifier	quoted		10025397	1					
ANR	10025557	PrimaryExpression	1		10025397	1					
ANR	10025558	BreakStatement	break ;	863:7:21175:21180	10025397	4	True				
ANR	10025559	Label	case IN_QUOTE :	865:5:21188:21201	10025397	5	True				
ANR	10025560	Identifier	IN_QUOTE		10025397	0					
ANR	10025561	IfStatement	if ( quote [ qp ] == _p_curquote )		10025397	6					
ANR	10025562	Condition	quote [ qp ] == _p_curquote	866:10:21213:21234	10025397	0	True				
ANR	10025563	EqualityExpression	quote [ qp ] == _p_curquote		10025397	0		==			
ANR	10025564	ArrayIndexing	quote [ qp ]		10025397	0					
ANR	10025565	Identifier	quote		10025397	0					
ANR	10025566	Identifier	qp		10025397	1					
ANR	10025567	Identifier	_p_curquote		10025397	1					
ANR	10025568	CompoundStatement		45:16:1256:1256	10025397	1					
ANR	10025569	ExpressionStatement	_p_state = IN_OZONE	868:18:21308:21325	10025397	0	True				
ANR	10025570	AssignmentExpression	_p_state = IN_OZONE		10025397	0		=			
ANR	10025571	Identifier	_p_state		10025397	0					
ANR	10025572	Identifier	IN_OZONE		10025397	1					
ANR	10025573	ExpressionStatement	_p_curquote = 0	869:18:21345:21358	10025397	1	True				
ANR	10025574	AssignmentExpression	_p_curquote = 0		10025397	0		=			
ANR	10025575	Identifier	_p_curquote		10025397	0					
ANR	10025576	PrimaryExpression	0		10025397	1					
ANR	10025577	ElseStatement	else		10025397	0					
ANR	10025578	ExpressionStatement	"chstore ( token , tokmax , c )"	872:9:21399:21422	10025397	0	True				
ANR	10025579	CallExpression	"chstore ( token , tokmax , c )"		10025397	0					
ANR	10025580	Callee	chstore		10025397	0					
ANR	10025581	Identifier	chstore		10025397	0					
ANR	10025582	ArgumentList	token		10025397	1					
ANR	10025583	Argument	token		10025397	0					
ANR	10025584	Identifier	token		10025397	0					
ANR	10025585	Argument	tokmax		10025397	1					
ANR	10025586	Identifier	tokmax		10025397	0					
ANR	10025587	Argument	c		10025397	2					
ANR	10025588	Identifier	c		10025397	0					
ANR	10025589	BreakStatement	break ;	873:7:21459:21464	10025397	7	True				
ANR	10025590	Label	case IN_TOKEN :	875:5:21472:21485	10025397	8	True				
ANR	10025591	Identifier	IN_TOKEN		10025397	0					
ANR	10025592	Label	case IN_OZONE :	876:5:21492:21505	10025397	9	True				
ANR	10025593	Identifier	IN_OZONE		10025397	0					
ANR	10025594	ExpressionStatement	* brkused = c	877:7:21514:21524	10025397	10	True				
ANR	10025595	AssignmentExpression	* brkused = c		10025397	0		=			
ANR	10025596	UnaryOperationExpression	* brkused		10025397	0					
ANR	10025597	UnaryOperator	*		10025397	0					
ANR	10025598	Identifier	brkused		10025397	1					
ANR	10025599	Identifier	c		10025397	1					
ANR	10025600	GotoStatement	goto byebye ;	878:7:21564:21575	10025397	11	True				
ANR	10025601	Identifier	byebye		10025397	0					
ANR	10025602	ElseStatement	else		10025397	0					
ANR	10025603	IfStatement	"if ( ( qp = sindex ( c , white ) ) >= 0 )"		10025397	0					
ANR	10025604	Condition	"( qp = sindex ( c , white ) ) >= 0"	881:14:21615:21637	10025397	0	True				
ANR	10025605	RelationalExpression	"( qp = sindex ( c , white ) ) >= 0"		10025397	0		>=			
ANR	10025606	AssignmentExpression	"qp = sindex ( c , white )"		10025397	0		=			
ANR	10025607	Identifier	qp		10025397	0					
ANR	10025608	CallExpression	"sindex ( c , white )"		10025397	1					
ANR	10025609	Callee	sindex		10025397	0					
ANR	10025610	Identifier	sindex		10025397	0					
ANR	10025611	ArgumentList	c		10025397	1					
ANR	10025612	Argument	c		10025397	0					
ANR	10025613	Identifier	c		10025397	0					
ANR	10025614	Argument	white		10025397	1					
ANR	10025615	Identifier	white		10025397	0					
ANR	10025616	PrimaryExpression	0		10025397	1					
ANR	10025617	CompoundStatement		60:8:1628:1628	10025397	1					
ANR	10025618	SwitchStatement	switch ( _p_state )		10025397	0					
ANR	10025619	Condition	_p_state	883:17:21679:21686	10025397	0	True				
ANR	10025620	Identifier	_p_state		10025397	0					
ANR	10025621	CompoundStatement		62:12:1669:1669	10025397	1					
ANR	10025622	Label	case IN_WHITE :	885:5:21708:21721	10025397	0	True				
ANR	10025623	Identifier	IN_WHITE		10025397	0					
ANR	10025624	Label	case IN_OZONE :	886:5:21728:21741	10025397	1	True				
ANR	10025625	Identifier	IN_OZONE		10025397	0					
ANR	10025626	BreakStatement	break ;	887:7:21750:21755	10025397	2	True				
ANR	10025627	Label	case IN_TOKEN :	889:5:21781:21794	10025397	3	True				
ANR	10025628	Identifier	IN_TOKEN		10025397	0					
ANR	10025629	ExpressionStatement	_p_state = IN_OZONE	890:7:21803:21820	10025397	4	True				
ANR	10025630	AssignmentExpression	_p_state = IN_OZONE		10025397	0		=			
ANR	10025631	Identifier	_p_state		10025397	0					
ANR	10025632	Identifier	IN_OZONE		10025397	1					
ANR	10025633	BreakStatement	break ;	891:7:21829:21834	10025397	5	True				
ANR	10025634	Label	case IN_QUOTE :	893:5:21842:21855	10025397	6	True				
ANR	10025635	Identifier	IN_QUOTE		10025397	0					
ANR	10025636	ExpressionStatement	"chstore ( token , tokmax , c )"	894:7:21864:21887	10025397	7	True				
ANR	10025637	CallExpression	"chstore ( token , tokmax , c )"		10025397	0					
ANR	10025638	Callee	chstore		10025397	0					
ANR	10025639	Identifier	chstore		10025397	0					
ANR	10025640	ArgumentList	token		10025397	1					
ANR	10025641	Argument	token		10025397	0					
ANR	10025642	Identifier	token		10025397	0					
ANR	10025643	Argument	tokmax		10025397	1					
ANR	10025644	Identifier	tokmax		10025397	0					
ANR	10025645	Argument	c		10025397	2					
ANR	10025646	Identifier	c		10025397	0					
ANR	10025647	BreakStatement	break ;	895:7:21918:21923	10025397	8	True				
ANR	10025648	ElseStatement	else		10025397	0					
ANR	10025649	IfStatement	if ( c == eschar )		10025397	0					
ANR	10025650	Condition	c == eschar	898:14:21963:21971	10025397	0	True				
ANR	10025651	EqualityExpression	c == eschar		10025397	0		==			
ANR	10025652	Identifier	c		10025397	0					
ANR	10025653	Identifier	eschar		10025397	1					
ANR	10025654	CompoundStatement		77:8:1964:1964	10025397	1					
ANR	10025655	ExpressionStatement	nc = line [ ( * next ) + 1 ]	900:10:22008:22026	10025397	0	True				
ANR	10025656	AssignmentExpression	nc = line [ ( * next ) + 1 ]		10025397	0		=			
ANR	10025657	Identifier	nc		10025397	0					
ANR	10025658	ArrayIndexing	line [ ( * next ) + 1 ]		10025397	1					
ANR	10025659	Identifier	line		10025397	0					
ANR	10025660	AdditiveExpression	( * next ) + 1		10025397	1		+			
ANR	10025661	UnaryOperationExpression	* next		10025397	0					
ANR	10025662	UnaryOperator	*		10025397	0					
ANR	10025663	Identifier	next		10025397	1					
ANR	10025664	PrimaryExpression	1		10025397	1					
ANR	10025665	IfStatement	if ( nc == 0 )		10025397	1					
ANR	10025666	Condition	nc == 0	901:13:22041:22045	10025397	0	True				
ANR	10025667	EqualityExpression	nc == 0		10025397	0		==			
ANR	10025668	Identifier	nc		10025397	0					
ANR	10025669	PrimaryExpression	0		10025397	1					
ANR	10025670	CompoundStatement		80:12:2048:2048	10025397	1					
ANR	10025671	ExpressionStatement	* brkused = 0	903:14:22096:22106	10025397	0	True				
ANR	10025672	AssignmentExpression	* brkused = 0		10025397	0		=			
ANR	10025673	UnaryOperationExpression	* brkused		10025397	0					
ANR	10025674	UnaryOperator	*		10025397	0					
ANR	10025675	Identifier	brkused		10025397	1					
ANR	10025676	PrimaryExpression	0		10025397	1					
ANR	10025677	ExpressionStatement	"chstore ( token , tokmax , c )"	904:14:22122:22145	10025397	1	True				
ANR	10025678	CallExpression	"chstore ( token , tokmax , c )"		10025397	0					
ANR	10025679	Callee	chstore		10025397	0					
ANR	10025680	Identifier	chstore		10025397	0					
ANR	10025681	ArgumentList	token		10025397	1					
ANR	10025682	Argument	token		10025397	0					
ANR	10025683	Identifier	token		10025397	0					
ANR	10025684	Argument	tokmax		10025397	1					
ANR	10025685	Identifier	tokmax		10025397	0					
ANR	10025686	Argument	c		10025397	2					
ANR	10025687	Identifier	c		10025397	0					
ANR	10025688	ExpressionStatement	++ ( * next )	905:14:22161:22170	10025397	2	True				
ANR	10025689	UnaryExpression	++ ( * next )		10025397	0					
ANR	10025690	IncDec	++		10025397	0					
ANR	10025691	UnaryOperationExpression	* next		10025397	1					
ANR	10025692	UnaryOperator	*		10025397	0					
ANR	10025693	Identifier	next		10025397	1					
ANR	10025694	GotoStatement	goto byebye ;	906:14:22186:22197	10025397	3	True				
ANR	10025695	Identifier	byebye		10025397	0					
ANR	10025696	SwitchStatement	switch ( _p_state )		10025397	2					
ANR	10025697	Condition	_p_state	908:17:22230:22237	10025397	0	True				
ANR	10025698	Identifier	_p_state		10025397	0					
ANR	10025699	CompoundStatement		87:12:2220:2220	10025397	1					
ANR	10025700	Label	case IN_WHITE :	910:5:22259:22272	10025397	0	True				
ANR	10025701	Identifier	IN_WHITE		10025397	0					
ANR	10025702	ExpressionStatement	-- ( * next )	911:7:22281:22290	10025397	1	True				
ANR	10025703	UnaryExpression	-- ( * next )		10025397	0					
ANR	10025704	IncDec	--		10025397	0					
ANR	10025705	UnaryOperationExpression	* next		10025397	1					
ANR	10025706	UnaryOperator	*		10025397	0					
ANR	10025707	Identifier	next		10025397	1					
ANR	10025708	ExpressionStatement	_p_state = IN_TOKEN	912:7:22299:22316	10025397	2	True				
ANR	10025709	AssignmentExpression	_p_state = IN_TOKEN		10025397	0		=			
ANR	10025710	Identifier	_p_state		10025397	0					
ANR	10025711	Identifier	IN_TOKEN		10025397	1					
ANR	10025712	BreakStatement	break ;	913:7:22325:22330	10025397	3	True				
ANR	10025713	Label	case IN_TOKEN :	915:5:22338:22351	10025397	4	True				
ANR	10025714	Identifier	IN_TOKEN		10025397	0					
ANR	10025715	Label	case IN_QUOTE :	916:5:22358:22371	10025397	5	True				
ANR	10025716	Identifier	IN_QUOTE		10025397	0					
ANR	10025717	ExpressionStatement	++ ( * next )	917:7:22380:22389	10025397	6	True				
ANR	10025718	UnaryExpression	++ ( * next )		10025397	0					
ANR	10025719	IncDec	++		10025397	0					
ANR	10025720	UnaryOperationExpression	* next		10025397	1					
ANR	10025721	UnaryOperator	*		10025397	0					
ANR	10025722	Identifier	next		10025397	1					
ANR	10025723	ExpressionStatement	"chstore ( token , tokmax , nc )"	918:7:22398:22422	10025397	7	True				
ANR	10025724	CallExpression	"chstore ( token , tokmax , nc )"		10025397	0					
ANR	10025725	Callee	chstore		10025397	0					
ANR	10025726	Identifier	chstore		10025397	0					
ANR	10025727	ArgumentList	token		10025397	1					
ANR	10025728	Argument	token		10025397	0					
ANR	10025729	Identifier	token		10025397	0					
ANR	10025730	Argument	tokmax		10025397	1					
ANR	10025731	Identifier	tokmax		10025397	0					
ANR	10025732	Argument	nc		10025397	2					
ANR	10025733	Identifier	nc		10025397	0					
ANR	10025734	BreakStatement	break ;	919:7:22431:22436	10025397	8	True				
ANR	10025735	Label	case IN_OZONE :	921:5:22444:22457	10025397	9	True				
ANR	10025736	Identifier	IN_OZONE		10025397	0					
ANR	10025737	GotoStatement	goto byebye ;	922:7:22466:22477	10025397	10	True				
ANR	10025738	Identifier	byebye		10025397	0					
ANR	10025739	ElseStatement	else		10025397	0					
ANR	10025740	CompoundStatement		104:8:2535:2535	10025397	0					
ANR	10025741	SwitchStatement	switch ( _p_state )		10025397	0					
ANR	10025742	Condition	_p_state	927:17:22586:22593	10025397	0	True				
ANR	10025743	Identifier	_p_state		10025397	0					
ANR	10025744	CompoundStatement		106:12:2576:2576	10025397	1					
ANR	10025745	Label	case IN_WHITE :	929:5:22615:22628	10025397	0	True				
ANR	10025746	Identifier	IN_WHITE		10025397	0					
ANR	10025747	ExpressionStatement	_p_state = IN_TOKEN	930:7:22637:22654	10025397	1	True				
ANR	10025748	AssignmentExpression	_p_state = IN_TOKEN		10025397	0		=			
ANR	10025749	Identifier	_p_state		10025397	0					
ANR	10025750	Identifier	IN_TOKEN		10025397	1					
ANR	10025751	Label	case IN_TOKEN :	932:5:22682:22695	10025397	2	True				
ANR	10025752	Identifier	IN_TOKEN		10025397	0					
ANR	10025753	Label	case IN_QUOTE :	933:5:22726:22739	10025397	3	True				
ANR	10025754	Identifier	IN_QUOTE		10025397	0					
ANR	10025755	ExpressionStatement	"chstore ( token , tokmax , c )"	934:7:22772:22795	10025397	4	True				
ANR	10025756	CallExpression	"chstore ( token , tokmax , c )"		10025397	0					
ANR	10025757	Callee	chstore		10025397	0					
ANR	10025758	Identifier	chstore		10025397	0					
ANR	10025759	ArgumentList	token		10025397	1					
ANR	10025760	Argument	token		10025397	0					
ANR	10025761	Identifier	token		10025397	0					
ANR	10025762	Argument	tokmax		10025397	1					
ANR	10025763	Identifier	tokmax		10025397	0					
ANR	10025764	Argument	c		10025397	2					
ANR	10025765	Identifier	c		10025397	0					
ANR	10025766	BreakStatement	break ;	935:7:22804:22809	10025397	5	True				
ANR	10025767	Label	case IN_OZONE :	937:5:22817:22830	10025397	6	True				
ANR	10025768	Identifier	IN_OZONE		10025397	0					
ANR	10025769	GotoStatement	goto byebye ;	938:7:22839:22850	10025397	7	True				
ANR	10025770	Identifier	byebye		10025397	0					
ANR	10025771	Label	byebye :	943:1:22908:22914	10025397	9	True				
ANR	10025772	Identifier	byebye		10025397	0					
ANR	10025773	ExpressionStatement	token [ _p_tokpos ] = 0	944:2:22918:22936	10025397	10	True				
ANR	10025774	AssignmentExpression	token [ _p_tokpos ] = 0		10025397	0		=			
ANR	10025775	ArrayIndexing	token [ _p_tokpos ]		10025397	0					
ANR	10025776	Identifier	token		10025397	0					
ANR	10025777	Identifier	_p_tokpos		10025397	1					
ANR	10025778	PrimaryExpression	0		10025397	1					
ANR	10025779	ReturnStatement	return 0 ;	946:2:22977:22985	10025397	11	True				
ANR	10025780	PrimaryExpression	0		10025397	0					
ANR	10025781	ReturnType	int		10025397	1					
ANR	10025782	Identifier	tokenizer		10025397	2					
ANR	10025783	ParameterList	"unsigned inflag , char * token , int tokmax , char * line , char * white , char * brkchar , char * quote , char eschar , char * brkused , int * next , char * quoted"		10025397	3					
ANR	10025784	Parameter	unsigned inflag	820:14:19863:19877	10025397	0	True				
ANR	10025785	ParameterType	unsigned		10025397	0					
ANR	10025786	Identifier	inflag		10025397	1					
ANR	10025787	Parameter	char * token	820:30:19879:19889	10025397	1	True				
ANR	10025788	ParameterType	char *		10025397	0					
ANR	10025789	Identifier	token		10025397	1					
ANR	10025790	Parameter	int tokmax	820:42:19891:19900	10025397	2	True				
ANR	10025791	ParameterType	int		10025397	0					
ANR	10025792	Identifier	tokmax		10025397	1					
ANR	10025793	Parameter	char * line	820:53:19902:19911	10025397	3	True				
ANR	10025794	ParameterType	char *		10025397	0					
ANR	10025795	Identifier	line		10025397	1					
ANR	10025796	Parameter	char * white	821:14:19928:19938	10025397	4	True				
ANR	10025797	ParameterType	char *		10025397	0					
ANR	10025798	Identifier	white		10025397	1					
ANR	10025799	Parameter	char * brkchar	821:26:19940:19952	10025397	5	True				
ANR	10025800	ParameterType	char *		10025397	0					
ANR	10025801	Identifier	brkchar		10025397	1					
ANR	10025802	Parameter	char * quote	821:40:19954:19964	10025397	6	True				
ANR	10025803	ParameterType	char *		10025397	0					
ANR	10025804	Identifier	quote		10025397	1					
ANR	10025805	Parameter	char eschar	821:52:19966:19976	10025397	7	True				
ANR	10025806	ParameterType	char		10025397	0					
ANR	10025807	Identifier	eschar		10025397	1					
ANR	10025808	Parameter	char * brkused	821:64:19978:19990	10025397	8	True				
ANR	10025809	ParameterType	char *		10025397	0					
ANR	10025810	Identifier	brkused		10025397	1					
ANR	10025811	Parameter	int * next	822:14:20007:20015	10025397	9	True				
ANR	10025812	ParameterType	int *		10025397	0					
ANR	10025813	Identifier	next		10025397	1					
ANR	10025814	Parameter	char * quoted	822:24:20017:20028	10025397	10	True				
ANR	10025815	ParameterType	char *		10025397	0					
ANR	10025816	Identifier	quoted		10025397	1					
ANR	10025817	CFGEntryNode	ENTRY		10025397		True				
ANR	10025818	CFGExitNode	EXIT		10025397		True				
ANR	10025819	Symbol	next		10025397						
ANR	10025820	Symbol	_p_flag		10025397						
ANR	10025821	Symbol	IN_TOKEN		10025397						
ANR	10025822	Symbol	* * next		10025397						
ANR	10025823	Symbol	line		10025397						
ANR	10025824	Symbol	* qp		10025397						
ANR	10025825	Symbol	* brkused		10025397						
ANR	10025826	Symbol	sindex		10025397						
ANR	10025827	Symbol	* line		10025397						
ANR	10025828	Symbol	* next		10025397						
ANR	10025829	Symbol	IN_WHITE		10025397						
ANR	10025830	Symbol	_p_tokpos		10025397						
ANR	10025831	Symbol	brkchar		10025397						
ANR	10025832	Symbol	quoted		10025397						
ANR	10025833	Symbol	* _p_tokpos		10025397						
ANR	10025834	Symbol	quote		10025397						
ANR	10025835	Symbol	tokmax		10025397						
ANR	10025836	Symbol	white		10025397						
ANR	10025837	Symbol	* quote		10025397						
ANR	10025838	Symbol	IN_QUOTE		10025397						
ANR	10025839	Symbol	eschar		10025397						
ANR	10025840	Symbol	IN_OZONE		10025397						
ANR	10025841	Symbol	brkused		10025397						
ANR	10025842	Symbol	qp		10025397						
ANR	10025843	Symbol	_p_curquote		10025397						
ANR	10025844	Symbol	c		10025397						
ANR	10025845	Symbol	* brkchar		10025397						
ANR	10025846	Symbol	token		10025397						
ANR	10025847	Symbol	* quoted		10025397						
ANR	10025848	Symbol	_p_state		10025397						
ANR	10025849	Symbol	* token		10025397						
ANR	10025850	Symbol	nc		10025397						
ANR	10025851	Symbol	inflag		10025397						
