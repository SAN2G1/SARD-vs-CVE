command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8062569	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcmacros.c								
ANR	8062570	Function	pcl_dump_current_macro	28:0:828:1125							
ANR	8062571	FunctionDef	"pcl_dump_current_macro (pcl_state_t * pcs , const char * msg)"		8062570	0					
ANR	8062572	CompoundStatement		30:0:899:1125	8062570	0					
ANR	8062573	IdentifierDeclStatement	int i ;	31:4:905:910	8062570	0	True				
ANR	8062574	IdentifierDecl	i		8062570	0					
ANR	8062575	IdentifierDeclType	int		8062570	0					
ANR	8062576	Identifier	i		8062570	1					
ANR	8062577	ExpressionStatement	"dmputs ( pcs -> memory , msg )"	33:4:917:941	8062570	1	True				
ANR	8062578	CallExpression	"dmputs ( pcs -> memory , msg )"		8062570	0					
ANR	8062579	Callee	dmputs		8062570	0					
ANR	8062580	Identifier	dmputs		8062570	0					
ANR	8062581	ArgumentList	pcs -> memory		8062570	1					
ANR	8062582	Argument	pcs -> memory		8062570	0					
ANR	8062583	PtrMemberAccess	pcs -> memory		8062570	0					
ANR	8062584	Identifier	pcs		8062570	0					
ANR	8062585	Identifier	memory		8062570	1					
ANR	8062586	Argument	msg		8062570	1					
ANR	8062587	Identifier	msg		8062570	0					
ANR	8062588	ExpressionStatement	"dmputs ( pcs -> memory , "" "" )"	34:4:947:971	8062570	2	True				
ANR	8062589	CallExpression	"dmputs ( pcs -> memory , "" "" )"		8062570	0					
ANR	8062590	Callee	dmputs		8062570	0					
ANR	8062591	Identifier	dmputs		8062570	0					
ANR	8062592	ArgumentList	pcs -> memory		8062570	1					
ANR	8062593	Argument	pcs -> memory		8062570	0					
ANR	8062594	PtrMemberAccess	pcs -> memory		8062570	0					
ANR	8062595	Identifier	pcs		8062570	0					
ANR	8062596	Identifier	memory		8062570	1					
ANR	8062597	Argument	""" """		8062570	1					
ANR	8062598	PrimaryExpression	""" """		8062570	0					
ANR	8062599	ForStatement	for ( i = 0 ; i < current_macro_id_size ; i ++ )		8062570	3					
ANR	8062600	ForInit	i = 0 ;	35:9:982:987	8062570	0	True				
ANR	8062601	AssignmentExpression	i = 0		8062570	0		=			
ANR	8062602	Identifier	i		8062570	0					
ANR	8062603	PrimaryExpression	0		8062570	1					
ANR	8062604	Condition	i < current_macro_id_size	35:16:989:1013	8062570	1	True				
ANR	8062605	RelationalExpression	i < current_macro_id_size		8062570	0		<			
ANR	8062606	Identifier	i		8062570	0					
ANR	8062607	Identifier	current_macro_id_size		8062570	1					
ANR	8062608	PostIncDecOperationExpression	i ++	35:43:1016:1018	8062570	2	True				
ANR	8062609	Identifier	i		8062570	0					
ANR	8062610	IncDec	++		8062570	1					
ANR	8062611	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""%02x"" , current_macro_id [ i ] )"	36:8:1029:1080	8062570	3	True				
ANR	8062612	CallExpression	"dmprintf1 ( pcs -> memory , ""%02x"" , current_macro_id [ i ] )"		8062570	0					
ANR	8062613	Callee	dmprintf1		8062570	0					
ANR	8062614	Identifier	dmprintf1		8062570	0					
ANR	8062615	ArgumentList	pcs -> memory		8062570	1					
ANR	8062616	Argument	pcs -> memory		8062570	0					
ANR	8062617	PtrMemberAccess	pcs -> memory		8062570	0					
ANR	8062618	Identifier	pcs		8062570	0					
ANR	8062619	Identifier	memory		8062570	1					
ANR	8062620	Argument	"""%02x"""		8062570	1					
ANR	8062621	PrimaryExpression	"""%02x"""		8062570	0					
ANR	8062622	Argument	current_macro_id [ i ]		8062570	2					
ANR	8062623	ArrayIndexing	current_macro_id [ i ]		8062570	0					
ANR	8062624	Identifier	current_macro_id		8062570	0					
ANR	8062625	Identifier	i		8062570	1					
ANR	8062626	ExpressionStatement	"dmputs ( pcs -> memory , ""\\n"" )"	37:4:1086:1111	8062570	4	True				
ANR	8062627	CallExpression	"dmputs ( pcs -> memory , ""\\n"" )"		8062570	0					
ANR	8062628	Callee	dmputs		8062570	0					
ANR	8062629	Identifier	dmputs		8062570	0					
ANR	8062630	ArgumentList	pcs -> memory		8062570	1					
ANR	8062631	Argument	pcs -> memory		8062570	0					
ANR	8062632	PtrMemberAccess	pcs -> memory		8062570	0					
ANR	8062633	Identifier	pcs		8062570	0					
ANR	8062634	Identifier	memory		8062570	1					
ANR	8062635	Argument	"""\\n"""		8062570	1					
ANR	8062636	PrimaryExpression	"""\\n"""		8062570	0					
ANR	8062637	ReturnStatement	return ;	38:4:1117:1123	8062570	5	True				
ANR	8062638	ReturnType	static void		8062570	1					
ANR	8062639	Identifier	pcl_dump_current_macro		8062570	2					
ANR	8062640	ParameterList	"pcl_state_t * pcs , const char * msg"		8062570	3					
ANR	8062641	Parameter	pcl_state_t * pcs	29:23:863:879	8062570	0	True				
ANR	8062642	ParameterType	pcl_state_t *		8062570	0					
ANR	8062643	Identifier	pcs		8062570	1					
ANR	8062644	Parameter	const char * msg	29:42:882:896	8062570	1	True				
ANR	8062645	ParameterType	const char *		8062570	0					
ANR	8062646	Identifier	msg		8062570	1					
ANR	8062647	CFGEntryNode	ENTRY		8062570		True				
ANR	8062648	CFGExitNode	EXIT		8062570		True				
ANR	8062649	Symbol	msg		8062570						
ANR	8062650	Symbol	pcs		8062570						
ANR	8062651	Symbol	current_macro_id_size		8062570						
ANR	8062652	Symbol	* i		8062570						
ANR	8062653	Symbol	i		8062570						
ANR	8062654	Symbol	pcs -> memory		8062570						
ANR	8062655	Symbol	* pcs		8062570						
ANR	8062656	Symbol	* current_macro_id		8062570						
ANR	8062657	Symbol	current_macro_id		8062570						
ANR	8062658	Function	do_copies	44:0:1268:1570							
ANR	8062659	FunctionDef	"do_copies (pcl_state_t * psaved , pcl_state_t * pcs , pcl_copy_operation_t copy)"		8062658	0					
ANR	8062660	CompoundStatement		46:0:1357:1570	8062658	0					
ANR	8062661	IdentifierDeclStatement	const pcl_init_t * * init = pcl_init_table ;	47:4:1363:1403	8062658	0	True				
ANR	8062662	IdentifierDecl	* * init = pcl_init_table		8062658	0					
ANR	8062663	IdentifierDeclType	const pcl_init_t * *		8062658	0					
ANR	8062664	Identifier	init		8062658	1					
ANR	8062665	AssignmentExpression	* * init = pcl_init_table		8062658	2		=			
ANR	8062666	Identifier	pcl_init_table		8062658	0					
ANR	8062667	Identifier	pcl_init_table		8062658	1					
ANR	8062668	IdentifierDeclStatement	int code = 0 ;	48:4:1409:1421	8062658	1	True				
ANR	8062669	IdentifierDecl	code = 0		8062658	0					
ANR	8062670	IdentifierDeclType	int		8062658	0					
ANR	8062671	Identifier	code		8062658	1					
ANR	8062672	AssignmentExpression	code = 0		8062658	2		=			
ANR	8062673	Identifier	code		8062658	0					
ANR	8062674	PrimaryExpression	0		8062658	1					
ANR	8062675	ForStatement	for ( ; * init && code >= 0 ; ++ init )		8062658	2					
ANR	8062676	Condition	* init && code >= 0	50:11:1435:1452	8062658	0	True				
ANR	8062677	AndExpression	* init && code >= 0		8062658	0		&&			
ANR	8062678	UnaryOperationExpression	* init		8062658	0					
ANR	8062679	UnaryOperator	*		8062658	0					
ANR	8062680	Identifier	init		8062658	1					
ANR	8062681	RelationalExpression	code >= 0		8062658	1		>=			
ANR	8062682	Identifier	code		8062658	0					
ANR	8062683	PrimaryExpression	0		8062658	1					
ANR	8062684	UnaryExpression	++ init	50:31:1455:1460	8062658	1	True				
ANR	8062685	IncDec	++		8062658	0					
ANR	8062686	Identifier	init		8062658	1					
ANR	8062687	IfStatement	if ( ( * init ) -> do_copy )		8062658	2					
ANR	8062688	Condition	( * init ) -> do_copy	51:12:1475:1490	8062658	0	True				
ANR	8062689	PtrMemberAccess	( * init ) -> do_copy		8062658	0					
ANR	8062690	UnaryOperationExpression	* init		8062658	0					
ANR	8062691	UnaryOperator	*		8062658	0					
ANR	8062692	Identifier	init		8062658	1					
ANR	8062693	Identifier	do_copy		8062658	1					
ANR	8062694	ExpressionStatement	"code = ( * ( * init ) -> do_copy ) ( psaved , pcs , copy )"	52:12:1505:1551	8062658	1	True				
ANR	8062695	AssignmentExpression	"code = ( * ( * init ) -> do_copy ) ( psaved , pcs , copy )"		8062658	0		=			
ANR	8062696	Identifier	code		8062658	0					
ANR	8062697	CallExpression	"( * ( * init ) -> do_copy ) ( psaved , pcs , copy )"		8062658	1					
ANR	8062698	Callee	* ( * init ) -> do_copy		8062658	0					
ANR	8062699	UnaryOperationExpression	* ( * init ) -> do_copy		8062658	0					
ANR	8062700	UnaryOperator	*		8062658	0					
ANR	8062701	PtrMemberAccess	( * init ) -> do_copy		8062658	1					
ANR	8062702	UnaryOperationExpression	* init		8062658	0					
ANR	8062703	UnaryOperator	*		8062658	0					
ANR	8062704	Identifier	init		8062658	1					
ANR	8062705	Identifier	do_copy		8062658	1					
ANR	8062706	ArgumentList	psaved		8062658	1					
ANR	8062707	Argument	psaved		8062658	0					
ANR	8062708	Identifier	psaved		8062658	0					
ANR	8062709	Argument	pcs		8062658	1					
ANR	8062710	Identifier	pcs		8062658	0					
ANR	8062711	Argument	copy		8062658	2					
ANR	8062712	Identifier	copy		8062658	0					
ANR	8062713	ReturnStatement	return code ;	53:4:1557:1568	8062658	3	True				
ANR	8062714	Identifier	code		8062658	0					
ANR	8062715	ReturnType	static int		8062658	1					
ANR	8062716	Identifier	do_copies		8062658	2					
ANR	8062717	ParameterList	"pcl_state_t * psaved , pcl_state_t * pcs , pcl_copy_operation_t copy"		8062658	3					
ANR	8062718	Parameter	pcl_state_t * psaved	45:10:1289:1308	8062658	0	True				
ANR	8062719	ParameterType	pcl_state_t *		8062658	0					
ANR	8062720	Identifier	psaved		8062658	1					
ANR	8062721	Parameter	pcl_state_t * pcs	45:32:1311:1327	8062658	1	True				
ANR	8062722	ParameterType	pcl_state_t *		8062658	0					
ANR	8062723	Identifier	pcs		8062658	1					
ANR	8062724	Parameter	pcl_copy_operation_t copy	45:51:1330:1354	8062658	2	True				
ANR	8062725	ParameterType	pcl_copy_operation_t		8062658	0					
ANR	8062726	Identifier	copy		8062658	1					
ANR	8062727	CFGEntryNode	ENTRY		8062658		True				
ANR	8062728	CFGExitNode	EXIT		8062658		True				
ANR	8062729	Symbol	pcl_init_table		8062658						
ANR	8062730	Symbol	pcs		8062658						
ANR	8062731	Symbol	init		8062658						
ANR	8062732	Symbol	* * * init		8062658						
ANR	8062733	Symbol	code		8062658						
ANR	8062734	Symbol	( * init ) -> do_copy		8062658						
ANR	8062735	Symbol	* * init		8062658						
ANR	8062736	Symbol	psaved		8062658						
ANR	8062737	Symbol	* init		8062658						
ANR	8062738	Symbol	copy		8062658						
ANR	8062739	Symbol	* ( * init ) -> do_copy		8062658						
ANR	8062740	Function	pcl_execute_macro	55:0:1572:2958							
ANR	8062741	FunctionDef	"pcl_execute_macro (const pcl_macro_t * pmac , pcl_state_t * pcs , pcl_copy_operation_t before , pcl_reset_type_t reset , pcl_copy_operation_t after)"		8062740	0					
ANR	8062742	CompoundStatement		59:0:1756:2958	8062740	0					
ANR	8062743	IdentifierDeclStatement	pcl_parser_state_t state ;	60:4:1762:1786	8062740	0	True				
ANR	8062744	IdentifierDecl	state		8062740	0					
ANR	8062745	IdentifierDeclType	pcl_parser_state_t		8062740	0					
ANR	8062746	Identifier	state		8062740	1					
ANR	8062747	IdentifierDeclStatement	hpgl_parser_state_t gstate ;	61:4:1792:1818	8062740	1	True				
ANR	8062748	IdentifierDecl	gstate		8062740	0					
ANR	8062749	IdentifierDeclType	hpgl_parser_state_t		8062740	0					
ANR	8062750	Identifier	gstate		8062740	1					
ANR	8062751	IdentifierDeclStatement	pcl_state_t saved ;	62:4:1824:1841	8062740	2	True				
ANR	8062752	IdentifierDecl	saved		8062740	0					
ANR	8062753	IdentifierDeclType	pcl_state_t		8062740	0					
ANR	8062754	Identifier	saved		8062740	1					
ANR	8062755	IdentifierDeclStatement	stream_cursor_read r ;	63:4:1847:1867	8062740	3	True				
ANR	8062756	IdentifierDecl	r		8062740	0					
ANR	8062757	IdentifierDeclType	stream_cursor_read		8062740	0					
ANR	8062758	Identifier	r		8062740	1					
ANR	8062759	IdentifierDeclStatement	int code ;	64:4:1873:1881	8062740	4	True				
ANR	8062760	IdentifierDecl	code		8062740	0					
ANR	8062761	IdentifierDeclType	int		8062740	0					
ANR	8062762	Identifier	code		8062740	1					
ANR	8062763	IfStatement	if ( gs_debug_c ( 'i' ) )		8062740	5					
ANR	8062764	Condition	gs_debug_c ( 'i' )	67:8:1905:1919	8062740	0	True				
ANR	8062765	CallExpression	gs_debug_c ( 'i' )		8062740	0					
ANR	8062766	Callee	gs_debug_c		8062740	0					
ANR	8062767	Identifier	gs_debug_c		8062740	0					
ANR	8062768	ArgumentList	'i'		8062740	1					
ANR	8062769	Argument	'i'		8062740	0					
ANR	8062770	PrimaryExpression	'i'		8062740	0					
ANR	8062771	CompoundStatement		9:25:165:165	8062740	1					
ANR	8062772	ExpressionStatement	"pcl_dump_current_macro ( pcs , ""Starting macro execution"" )"	68:8:1932:1987	8062740	0	True				
ANR	8062773	CallExpression	"pcl_dump_current_macro ( pcs , ""Starting macro execution"" )"		8062740	0					
ANR	8062774	Callee	pcl_dump_current_macro		8062740	0					
ANR	8062775	Identifier	pcl_dump_current_macro		8062740	0					
ANR	8062776	ArgumentList	pcs		8062740	1					
ANR	8062777	Argument	pcs		8062740	0					
ANR	8062778	Identifier	pcs		8062740	0					
ANR	8062779	Argument	"""Starting macro execution"""		8062740	1					
ANR	8062780	PrimaryExpression	"""Starting macro execution"""		8062740	0					
ANR	8062781	IfStatement	if ( before )		8062740	6					
ANR	8062782	Condition	before	72:8:2011:2016	8062740	0	True				
ANR	8062783	Identifier	before		8062740	0					
ANR	8062784	CompoundStatement		14:16:262:262	8062740	1					
ANR	8062785	ExpressionStatement	"memcpy ( & saved , pcs , sizeof ( * pcs ) )"	73:8:2029:2062	8062740	0	True				
ANR	8062786	CallExpression	"memcpy ( & saved , pcs , sizeof ( * pcs ) )"		8062740	0					
ANR	8062787	Callee	memcpy		8062740	0					
ANR	8062788	Identifier	memcpy		8062740	0					
ANR	8062789	ArgumentList	& saved		8062740	1					
ANR	8062790	Argument	& saved		8062740	0					
ANR	8062791	UnaryOperationExpression	& saved		8062740	0					
ANR	8062792	UnaryOperator	&		8062740	0					
ANR	8062793	Identifier	saved		8062740	1					
ANR	8062794	Argument	pcs		8062740	1					
ANR	8062795	Identifier	pcs		8062740	0					
ANR	8062796	Argument	sizeof ( * pcs )		8062740	2					
ANR	8062797	SizeofExpression	sizeof ( * pcs )		8062740	0					
ANR	8062798	Sizeof	sizeof		8062740	0					
ANR	8062799	UnaryOperationExpression	* pcs		8062740	1					
ANR	8062800	UnaryOperator	*		8062740	0					
ANR	8062801	Identifier	pcs		8062740	1					
ANR	8062802	ExpressionStatement	"code = do_copies ( & saved , pcs , before )"	74:8:2072:2109	8062740	1	True				
ANR	8062803	AssignmentExpression	"code = do_copies ( & saved , pcs , before )"		8062740	0		=			
ANR	8062804	Identifier	code		8062740	0					
ANR	8062805	CallExpression	"do_copies ( & saved , pcs , before )"		8062740	1					
ANR	8062806	Callee	do_copies		8062740	0					
ANR	8062807	Identifier	do_copies		8062740	0					
ANR	8062808	ArgumentList	& saved		8062740	1					
ANR	8062809	Argument	& saved		8062740	0					
ANR	8062810	UnaryOperationExpression	& saved		8062740	0					
ANR	8062811	UnaryOperator	&		8062740	0					
ANR	8062812	Identifier	saved		8062740	1					
ANR	8062813	Argument	pcs		8062740	1					
ANR	8062814	Identifier	pcs		8062740	0					
ANR	8062815	Argument	before		8062740	2					
ANR	8062816	Identifier	before		8062740	0					
ANR	8062817	IfStatement	if ( code < 0 )		8062740	2					
ANR	8062818	Condition	code < 0	75:12:2123:2130	8062740	0	True				
ANR	8062819	RelationalExpression	code < 0		8062740	0		<			
ANR	8062820	Identifier	code		8062740	0					
ANR	8062821	PrimaryExpression	0		8062740	1					
ANR	8062822	ReturnStatement	return code ;	76:12:2145:2156	8062740	1	True				
ANR	8062823	Identifier	code		8062740	0					
ANR	8062824	ExpressionStatement	pcs -> saved = & saved	77:8:2166:2185	8062740	3	True				
ANR	8062825	AssignmentExpression	pcs -> saved = & saved		8062740	0		=			
ANR	8062826	PtrMemberAccess	pcs -> saved		8062740	0					
ANR	8062827	Identifier	pcs		8062740	0					
ANR	8062828	Identifier	saved		8062740	1					
ANR	8062829	UnaryOperationExpression	& saved		8062740	1					
ANR	8062830	UnaryOperator	&		8062740	0					
ANR	8062831	Identifier	saved		8062740	1					
ANR	8062832	IfStatement	if ( reset )		8062740	7					
ANR	8062833	Condition	reset	79:8:2201:2205	8062740	0	True				
ANR	8062834	Identifier	reset		8062740	0					
ANR	8062835	CompoundStatement		21:15:451:451	8062740	1					
ANR	8062836	ExpressionStatement	"code = pcl_do_resets ( pcs , reset )"	80:8:2218:2250	8062740	0	True				
ANR	8062837	AssignmentExpression	"code = pcl_do_resets ( pcs , reset )"		8062740	0		=			
ANR	8062838	Identifier	code		8062740	0					
ANR	8062839	CallExpression	"pcl_do_resets ( pcs , reset )"		8062740	1					
ANR	8062840	Callee	pcl_do_resets		8062740	0					
ANR	8062841	Identifier	pcl_do_resets		8062740	0					
ANR	8062842	ArgumentList	pcs		8062740	1					
ANR	8062843	Argument	pcs		8062740	0					
ANR	8062844	Identifier	pcs		8062740	0					
ANR	8062845	Argument	reset		8062740	1					
ANR	8062846	Identifier	reset		8062740	0					
ANR	8062847	IfStatement	if ( code < 0 )		8062740	1					
ANR	8062848	Condition	code < 0	81:12:2264:2271	8062740	0	True				
ANR	8062849	RelationalExpression	code < 0		8062740	0		<			
ANR	8062850	Identifier	code		8062740	0					
ANR	8062851	PrimaryExpression	0		8062740	1					
ANR	8062852	ReturnStatement	return code ;	82:12:2286:2297	8062740	1	True				
ANR	8062853	Identifier	code		8062740	0					
ANR	8062854	ExpressionStatement	state . definitions = pcs -> pcl_commands	84:4:2309:2346	8062740	8	True				
ANR	8062855	AssignmentExpression	state . definitions = pcs -> pcl_commands		8062740	0		=			
ANR	8062856	MemberAccess	state . definitions		8062740	0					
ANR	8062857	Identifier	state		8062740	0					
ANR	8062858	Identifier	definitions		8062740	1					
ANR	8062859	PtrMemberAccess	pcs -> pcl_commands		8062740	1					
ANR	8062860	Identifier	pcs		8062740	0					
ANR	8062861	Identifier	pcl_commands		8062740	1					
ANR	8062862	ExpressionStatement	state . hpgl_parser_state = & gstate	85:4:2352:2385	8062740	9	True				
ANR	8062863	AssignmentExpression	state . hpgl_parser_state = & gstate		8062740	0		=			
ANR	8062864	MemberAccess	state . hpgl_parser_state		8062740	0					
ANR	8062865	Identifier	state		8062740	0					
ANR	8062866	Identifier	hpgl_parser_state		8062740	1					
ANR	8062867	UnaryOperationExpression	& gstate		8062740	1					
ANR	8062868	UnaryOperator	&		8062740	0					
ANR	8062869	Identifier	gstate		8062740	1					
ANR	8062870	ExpressionStatement	pcl_process_init ( & state )	86:4:2391:2415	8062740	10	True				
ANR	8062871	CallExpression	pcl_process_init ( & state )		8062740	0					
ANR	8062872	Callee	pcl_process_init		8062740	0					
ANR	8062873	Identifier	pcl_process_init		8062740	0					
ANR	8062874	ArgumentList	& state		8062740	1					
ANR	8062875	Argument	& state		8062740	0					
ANR	8062876	UnaryOperationExpression	& state		8062740	0					
ANR	8062877	UnaryOperator	&		8062740	0					
ANR	8062878	Identifier	state		8062740	1					
ANR	8062879	ExpressionStatement	r . ptr = ( const byte * ) ( pmac + 1 ) - 1	87:4:2421:2457	8062740	11	True				
ANR	8062880	AssignmentExpression	r . ptr = ( const byte * ) ( pmac + 1 ) - 1		8062740	0		=			
ANR	8062881	MemberAccess	r . ptr		8062740	0					
ANR	8062882	Identifier	r		8062740	0					
ANR	8062883	Identifier	ptr		8062740	1					
ANR	8062884	AdditiveExpression	( const byte * ) ( pmac + 1 ) - 1		8062740	1		-			
ANR	8062885	CastExpression	( const byte * ) ( pmac + 1 )		8062740	0					
ANR	8062886	CastTarget	const byte *		8062740	0					
ANR	8062887	AdditiveExpression	pmac + 1		8062740	1		+			
ANR	8062888	Identifier	pmac		8062740	0					
ANR	8062889	PrimaryExpression	1		8062740	1					
ANR	8062890	PrimaryExpression	1		8062740	1					
ANR	8062891	ExpressionStatement	"r . limit = ( const byte * ) pmac + ( gs_object_size ( pcs -> memory , pmac ) - 1 )"	88:4:2463:2533	8062740	12	True				
ANR	8062892	AssignmentExpression	"r . limit = ( const byte * ) pmac + ( gs_object_size ( pcs -> memory , pmac ) - 1 )"		8062740	0		=			
ANR	8062893	MemberAccess	r . limit		8062740	0					
ANR	8062894	Identifier	r		8062740	0					
ANR	8062895	Identifier	limit		8062740	1					
ANR	8062896	AdditiveExpression	"( const byte * ) pmac + ( gs_object_size ( pcs -> memory , pmac ) - 1 )"		8062740	1		+			
ANR	8062897	CastExpression	( const byte * ) pmac		8062740	0					
ANR	8062898	CastTarget	const byte *		8062740	0					
ANR	8062899	Identifier	pmac		8062740	1					
ANR	8062900	AdditiveExpression	"gs_object_size ( pcs -> memory , pmac ) - 1"		8062740	1		-			
ANR	8062901	CallExpression	"gs_object_size ( pcs -> memory , pmac )"		8062740	0					
ANR	8062902	Callee	gs_object_size		8062740	0					
ANR	8062903	Identifier	gs_object_size		8062740	0					
ANR	8062904	ArgumentList	pcs -> memory		8062740	1					
ANR	8062905	Argument	pcs -> memory		8062740	0					
ANR	8062906	PtrMemberAccess	pcs -> memory		8062740	0					
ANR	8062907	Identifier	pcs		8062740	0					
ANR	8062908	Identifier	memory		8062740	1					
ANR	8062909	Argument	pmac		8062740	1					
ANR	8062910	Identifier	pmac		8062740	0					
ANR	8062911	PrimaryExpression	1		8062740	1					
ANR	8062912	ExpressionStatement	pcs -> macro_level ++	89:4:2539:2557	8062740	13	True				
ANR	8062913	PostIncDecOperationExpression	pcs -> macro_level ++		8062740	0					
ANR	8062914	PtrMemberAccess	pcs -> macro_level		8062740	0					
ANR	8062915	Identifier	pcs		8062740	0					
ANR	8062916	Identifier	macro_level		8062740	1					
ANR	8062917	IncDec	++		8062740	1					
ANR	8062918	ExpressionStatement	"code = pcl_process ( & state , pcs , & r )"	90:4:2563:2598	8062740	14	True				
ANR	8062919	AssignmentExpression	"code = pcl_process ( & state , pcs , & r )"		8062740	0		=			
ANR	8062920	Identifier	code		8062740	0					
ANR	8062921	CallExpression	"pcl_process ( & state , pcs , & r )"		8062740	1					
ANR	8062922	Callee	pcl_process		8062740	0					
ANR	8062923	Identifier	pcl_process		8062740	0					
ANR	8062924	ArgumentList	& state		8062740	1					
ANR	8062925	Argument	& state		8062740	0					
ANR	8062926	UnaryOperationExpression	& state		8062740	0					
ANR	8062927	UnaryOperator	&		8062740	0					
ANR	8062928	Identifier	state		8062740	1					
ANR	8062929	Argument	pcs		8062740	1					
ANR	8062930	Identifier	pcs		8062740	0					
ANR	8062931	Argument	& r		8062740	2					
ANR	8062932	UnaryOperationExpression	& r		8062740	0					
ANR	8062933	UnaryOperator	&		8062740	0					
ANR	8062934	Identifier	r		8062740	1					
ANR	8062935	IfStatement	if ( code < 0 )		8062740	15					
ANR	8062936	Condition	code < 0	91:8:2608:2615	8062740	0	True				
ANR	8062937	RelationalExpression	code < 0		8062740	0		<			
ANR	8062938	Identifier	code		8062740	0					
ANR	8062939	PrimaryExpression	0		8062740	1					
ANR	8062940	ReturnStatement	return code ;	92:8:2626:2637	8062740	1	True				
ANR	8062941	Identifier	code		8062740	0					
ANR	8062942	ExpressionStatement	pcs -> macro_level --	93:4:2643:2661	8062740	16	True				
ANR	8062943	PostIncDecOperationExpression	pcs -> macro_level --		8062740	0					
ANR	8062944	PtrMemberAccess	pcs -> macro_level		8062740	0					
ANR	8062945	Identifier	pcs		8062740	0					
ANR	8062946	Identifier	macro_level		8062740	1					
ANR	8062947	IncDec	--		8062740	1					
ANR	8062948	IfStatement	if ( after )		8062740	17					
ANR	8062949	Condition	after	94:8:2671:2675	8062740	0	True				
ANR	8062950	Identifier	after		8062740	0					
ANR	8062951	CompoundStatement		36:15:921:921	8062740	1					
ANR	8062952	ExpressionStatement	"code = do_copies ( & saved , pcs , after )"	95:8:2688:2724	8062740	0	True				
ANR	8062953	AssignmentExpression	"code = do_copies ( & saved , pcs , after )"		8062740	0		=			
ANR	8062954	Identifier	code		8062740	0					
ANR	8062955	CallExpression	"do_copies ( & saved , pcs , after )"		8062740	1					
ANR	8062956	Callee	do_copies		8062740	0					
ANR	8062957	Identifier	do_copies		8062740	0					
ANR	8062958	ArgumentList	& saved		8062740	1					
ANR	8062959	Argument	& saved		8062740	0					
ANR	8062960	UnaryOperationExpression	& saved		8062740	0					
ANR	8062961	UnaryOperator	&		8062740	0					
ANR	8062962	Identifier	saved		8062740	1					
ANR	8062963	Argument	pcs		8062740	1					
ANR	8062964	Identifier	pcs		8062740	0					
ANR	8062965	Argument	after		8062740	2					
ANR	8062966	Identifier	after		8062740	0					
ANR	8062967	IfStatement	if ( code < 0 )		8062740	1					
ANR	8062968	Condition	code < 0	96:12:2738:2745	8062740	0	True				
ANR	8062969	RelationalExpression	code < 0		8062740	0		<			
ANR	8062970	Identifier	code		8062740	0					
ANR	8062971	PrimaryExpression	0		8062740	1					
ANR	8062972	ReturnStatement	return code ;	97:12:2760:2771	8062740	1	True				
ANR	8062973	Identifier	code		8062740	0					
ANR	8062974	ExpressionStatement	"memcpy ( pcs , & saved , sizeof ( * pcs ) )"	98:8:2781:2814	8062740	2	True				
ANR	8062975	CallExpression	"memcpy ( pcs , & saved , sizeof ( * pcs ) )"		8062740	0					
ANR	8062976	Callee	memcpy		8062740	0					
ANR	8062977	Identifier	memcpy		8062740	0					
ANR	8062978	ArgumentList	pcs		8062740	1					
ANR	8062979	Argument	pcs		8062740	0					
ANR	8062980	Identifier	pcs		8062740	0					
ANR	8062981	Argument	& saved		8062740	1					
ANR	8062982	UnaryOperationExpression	& saved		8062740	0					
ANR	8062983	UnaryOperator	&		8062740	0					
ANR	8062984	Identifier	saved		8062740	1					
ANR	8062985	Argument	sizeof ( * pcs )		8062740	2					
ANR	8062986	SizeofExpression	sizeof ( * pcs )		8062740	0					
ANR	8062987	Sizeof	sizeof		8062740	0					
ANR	8062988	UnaryOperationExpression	* pcs		8062740	1					
ANR	8062989	UnaryOperator	*		8062740	0					
ANR	8062990	Identifier	pcs		8062740	1					
ANR	8062991	IfStatement	if ( gs_debug_c ( 'i' ) )		8062740	18					
ANR	8062992	Condition	gs_debug_c ( 'i' )	101:8:2843:2857	8062740	0	True				
ANR	8062993	CallExpression	gs_debug_c ( 'i' )		8062740	0					
ANR	8062994	Callee	gs_debug_c		8062740	0					
ANR	8062995	Identifier	gs_debug_c		8062740	0					
ANR	8062996	ArgumentList	'i'		8062740	1					
ANR	8062997	Argument	'i'		8062740	0					
ANR	8062998	PrimaryExpression	'i'		8062740	0					
ANR	8062999	CompoundStatement		43:25:1103:1103	8062740	1					
ANR	8063000	ExpressionStatement	"pcl_dump_current_macro ( pcs , ""Finished macro execution"" )"	102:8:2870:2925	8062740	0	True				
ANR	8063001	CallExpression	"pcl_dump_current_macro ( pcs , ""Finished macro execution"" )"		8062740	0					
ANR	8063002	Callee	pcl_dump_current_macro		8062740	0					
ANR	8063003	Identifier	pcl_dump_current_macro		8062740	0					
ANR	8063004	ArgumentList	pcs		8062740	1					
ANR	8063005	Argument	pcs		8062740	0					
ANR	8063006	Identifier	pcs		8062740	0					
ANR	8063007	Argument	"""Finished macro execution"""		8062740	1					
ANR	8063008	PrimaryExpression	"""Finished macro execution"""		8062740	0					
ANR	8063009	ReturnStatement	return code ;	106:4:2945:2956	8062740	19	True				
ANR	8063010	Identifier	code		8062740	0					
ANR	8063011	ReturnType	int		8062740	1					
ANR	8063012	Identifier	pcl_execute_macro		8062740	2					
ANR	8063013	ParameterList	"const pcl_macro_t * pmac , pcl_state_t * pcs , pcl_copy_operation_t before , pcl_reset_type_t reset , pcl_copy_operation_t after"		8062740	3					
ANR	8063014	Parameter	const pcl_macro_t * pmac	56:18:1594:1617	8062740	0	True				
ANR	8063015	ParameterType	const pcl_macro_t *		8062740	0					
ANR	8063016	Identifier	pmac		8062740	1					
ANR	8063017	Parameter	pcl_state_t * pcs	56:44:1620:1636	8062740	1	True				
ANR	8063018	ParameterType	pcl_state_t *		8062740	0					
ANR	8063019	Identifier	pcs		8062740	1					
ANR	8063020	Parameter	pcl_copy_operation_t before	57:18:1657:1683	8062740	2	True				
ANR	8063021	ParameterType	pcl_copy_operation_t		8062740	0					
ANR	8063022	Identifier	before		8062740	1					
ANR	8063023	Parameter	pcl_reset_type_t reset	57:47:1686:1707	8062740	3	True				
ANR	8063024	ParameterType	pcl_reset_type_t		8062740	0					
ANR	8063025	Identifier	reset		8062740	1					
ANR	8063026	Parameter	pcl_copy_operation_t after	58:18:1728:1753	8062740	4	True				
ANR	8063027	ParameterType	pcl_copy_operation_t		8062740	0					
ANR	8063028	Identifier	after		8062740	1					
ANR	8063029	CFGEntryNode	ENTRY		8062740		True				
ANR	8063030	CFGExitNode	EXIT		8062740		True				
ANR	8063031	Symbol	code		8062740						
ANR	8063032	Symbol	pcs -> macro_level		8062740						
ANR	8063033	Symbol	before		8062740						
ANR	8063034	Symbol	saved		8062740						
ANR	8063035	Symbol	& gstate		8062740						
ANR	8063036	Symbol	& state		8062740						
ANR	8063037	Symbol	gstate		8062740						
ANR	8063038	Symbol	& saved		8062740						
ANR	8063039	Symbol	do_copies		8062740						
ANR	8063040	Symbol	* pcs		8062740						
ANR	8063041	Symbol	gs_object_size		8062740						
ANR	8063042	Symbol	pcl_do_resets		8062740						
ANR	8063043	Symbol	state . hpgl_parser_state		8062740						
ANR	8063044	Symbol	gs_debug_c		8062740						
ANR	8063045	Symbol	pcs -> memory		8062740						
ANR	8063046	Symbol	after		8062740						
ANR	8063047	Symbol	state		8062740						
ANR	8063048	Symbol	pcs		8062740						
ANR	8063049	Symbol	r . limit		8062740						
ANR	8063050	Symbol	pmac		8062740						
ANR	8063051	Symbol	pcs -> saved		8062740						
ANR	8063052	Symbol	r		8062740						
ANR	8063053	Symbol	pcs -> pcl_commands		8062740						
ANR	8063054	Symbol	r . ptr		8062740						
ANR	8063055	Symbol	& r		8062740						
ANR	8063056	Symbol	reset		8062740						
ANR	8063057	Symbol	pcl_process		8062740						
ANR	8063058	Symbol	state . definitions		8062740						
ANR	8063059	ClassDef	<unnamed>	112:0:3054:3165							
ANR	8063060	Function	pcl_macro_control	120:0:3169:8687							
ANR	8063061	FunctionDef	"pcl_macro_control (pcl_args_t * pargs , pcl_state_t * pcs)"		8063060	0					
ANR	8063062	CompoundStatement		122:0:3284:8687	8063060	0					
ANR	8063063	IdentifierDeclStatement	int i = int_arg ( pargs ) ;	123:4:3290:3312	8063060	0	True				
ANR	8063064	IdentifierDecl	i = int_arg ( pargs )		8063060	0					
ANR	8063065	IdentifierDeclType	int		8063060	0					
ANR	8063066	Identifier	i		8063060	1					
ANR	8063067	AssignmentExpression	i = int_arg ( pargs )		8063060	2		=			
ANR	8063068	Identifier	i		8063060	0					
ANR	8063069	CallExpression	int_arg ( pargs )		8063060	1					
ANR	8063070	Callee	int_arg		8063060	0					
ANR	8063071	Identifier	int_arg		8063060	0					
ANR	8063072	ArgumentList	pargs		8063060	1					
ANR	8063073	Argument	pargs		8063060	0					
ANR	8063074	Identifier	pargs		8063060	0					
ANR	8063075	IdentifierDeclStatement	gs_const_string key ;	124:4:3318:3337	8063060	1	True				
ANR	8063076	IdentifierDecl	key		8063060	0					
ANR	8063077	IdentifierDeclType	gs_const_string		8063060	0					
ANR	8063078	Identifier	key		8063060	1					
ANR	8063079	IdentifierDeclStatement	void * value ;	125:4:3343:3354	8063060	2	True				
ANR	8063080	IdentifierDecl	* value		8063060	0					
ANR	8063081	IdentifierDeclType	void *		8063060	0					
ANR	8063082	Identifier	value		8063060	1					
ANR	8063083	IdentifierDeclStatement	pl_dict_enum_t denum ;	126:4:3360:3380	8063060	3	True				
ANR	8063084	IdentifierDecl	denum		8063060	0					
ANR	8063085	IdentifierDeclType	pl_dict_enum_t		8063060	0					
ANR	8063086	Identifier	denum		8063060	1					
ANR	8063087	IfStatement	if ( i == macro_end_definition )		8063060	4					
ANR	8063088	Condition	i == macro_end_definition	128:8:3391:3415	8063060	0	True				
ANR	8063089	EqualityExpression	i == macro_end_definition		8063060	0		==			
ANR	8063090	Identifier	i		8063060	0					
ANR	8063091	Identifier	macro_end_definition		8063060	1					
ANR	8063092	CompoundStatement		7:35:133:133	8063060	1					
ANR	8063093	IfStatement	if ( pcs -> defining_macro )		8063060	0					
ANR	8063094	Condition	pcs -> defining_macro	129:12:3432:3450	8063060	0	True				
ANR	8063095	PtrMemberAccess	pcs -> defining_macro		8063060	0					
ANR	8063096	Identifier	pcs		8063060	0					
ANR	8063097	Identifier	defining_macro		8063060	1					
ANR	8063098	CompoundStatement		10:12:320:328	8063060	1					
ANR	8063099	IdentifierDeclStatement	int code ;	131:12:3605:3613	8063060	0	True				
ANR	8063100	IdentifierDecl	code		8063060	0					
ANR	8063101	IdentifierDeclType	int		8063060	0					
ANR	8063102	Identifier	code		8063060	1					
ANR	8063103	ExpressionStatement	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , pcs -> macro_definition )"	133:12:3628:3755	8063060	1	True				
ANR	8063104	AssignmentExpression	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , pcs -> macro_definition )"		8063060	0		=			
ANR	8063105	Identifier	code		8063060	0					
ANR	8063106	CallExpression	"pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , pcs -> macro_definition )"		8063060	1					
ANR	8063107	Callee	pl_dict_put		8063060	0					
ANR	8063108	Identifier	pl_dict_put		8063060	0					
ANR	8063109	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063110	Argument	& pcs -> macros		8063060	0					
ANR	8063111	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063112	UnaryOperator	&		8063060	0					
ANR	8063113	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063114	Identifier	pcs		8063060	0					
ANR	8063115	Identifier	macros		8063060	1					
ANR	8063116	Argument	current_macro_id		8063060	1					
ANR	8063117	Identifier	current_macro_id		8063060	0					
ANR	8063118	Argument	current_macro_id_size		8063060	2					
ANR	8063119	Identifier	current_macro_id_size		8063060	0					
ANR	8063120	Argument	pcs -> macro_definition		8063060	3					
ANR	8063121	PtrMemberAccess	pcs -> macro_definition		8063060	0					
ANR	8063122	Identifier	pcs		8063060	0					
ANR	8063123	Identifier	macro_definition		8063060	1					
ANR	8063124	ExpressionStatement	pcs -> defining_macro = false	135:12:3769:3796	8063060	2	True				
ANR	8063125	AssignmentExpression	pcs -> defining_macro = false		8063060	0		=			
ANR	8063126	PtrMemberAccess	pcs -> defining_macro		8063060	0					
ANR	8063127	Identifier	pcs		8063060	0					
ANR	8063128	Identifier	defining_macro		8063060	1					
ANR	8063129	Identifier	false		8063060	1					
ANR	8063130	ExpressionStatement	pcs -> macro_definition = 0	136:12:3810:3835	8063060	3	True				
ANR	8063131	AssignmentExpression	pcs -> macro_definition = 0		8063060	0		=			
ANR	8063132	PtrMemberAccess	pcs -> macro_definition		8063060	0					
ANR	8063133	Identifier	pcs		8063060	0					
ANR	8063134	Identifier	macro_definition		8063060	1					
ANR	8063135	PrimaryExpression	0		8063060	1					
ANR	8063136	IfStatement	if ( gs_debug_c ( 'i' ) )		8063060	4					
ANR	8063137	Condition	gs_debug_c ( 'i' )	138:16:3866:3880	8063060	0	True				
ANR	8063138	CallExpression	gs_debug_c ( 'i' )		8063060	0					
ANR	8063139	Callee	gs_debug_c		8063060	0					
ANR	8063140	Identifier	gs_debug_c		8063060	0					
ANR	8063141	ArgumentList	'i'		8063060	1					
ANR	8063142	Argument	'i'		8063060	0					
ANR	8063143	PrimaryExpression	'i'		8063060	0					
ANR	8063144	CompoundStatement		17:33:598:598	8063060	1					
ANR	8063145	ExpressionStatement	"pcl_dump_current_macro ( pcs , ""[i] Ending Macro"" )"	139:16:3901:3948	8063060	0	True				
ANR	8063146	CallExpression	"pcl_dump_current_macro ( pcs , ""[i] Ending Macro"" )"		8063060	0					
ANR	8063147	Callee	pcl_dump_current_macro		8063060	0					
ANR	8063148	Identifier	pcl_dump_current_macro		8063060	0					
ANR	8063149	ArgumentList	pcs		8063060	1					
ANR	8063150	Argument	pcs		8063060	0					
ANR	8063151	Identifier	pcs		8063060	0					
ANR	8063152	Argument	"""[i] Ending Macro"""		8063060	1					
ANR	8063153	PrimaryExpression	"""[i] Ending Macro"""		8063060	0					
ANR	8063154	ReturnStatement	return code ;	142:12:3983:3994	8063060	5	True				
ANR	8063155	Identifier	code		8063060	0					
ANR	8063156	ElseStatement	else		8063060	0					
ANR	8063157	IfStatement	if ( pcs -> defining_macro )		8063060	0					
ANR	8063158	Condition	pcs -> defining_macro	144:15:4021:4039	8063060	0	True				
ANR	8063159	PtrMemberAccess	pcs -> defining_macro		8063060	0					
ANR	8063160	Identifier	pcs		8063060	0					
ANR	8063161	Identifier	defining_macro		8063060	1					
ANR	8063162	ReturnStatement	return 0 ;	145:8:4050:4058	8063060	1	True				
ANR	8063163	PrimaryExpression	0		8063060	0					
ANR	8063164	ElseStatement	else		8063060	0					
ANR	8063165	IfStatement	if ( i == macro_execute || i == macro_call )		8063060	0					
ANR	8063166	Condition	i == macro_execute || i == macro_call	146:13:4130:4166	8063060	0	True				
ANR	8063167	OrExpression	i == macro_execute || i == macro_call		8063060	0		||			
ANR	8063168	EqualityExpression	i == macro_execute		8063060	0		==			
ANR	8063169	Identifier	i		8063060	0					
ANR	8063170	Identifier	macro_execute		8063060	1					
ANR	8063171	EqualityExpression	i == macro_call		8063060	1		==			
ANR	8063172	Identifier	i		8063060	0					
ANR	8063173	Identifier	macro_call		8063060	1					
ANR	8063174	CompoundStatement		25:52:884:884	8063060	1					
ANR	8063175	IfStatement	if ( pcs -> macro_level > 2 )		8063060	0					
ANR	8063176	Condition	pcs -> macro_level > 2	150:12:4479:4498	8063060	0	True				
ANR	8063177	RelationalExpression	pcs -> macro_level > 2		8063060	0		>			
ANR	8063178	PtrMemberAccess	pcs -> macro_level		8063060	0					
ANR	8063179	Identifier	pcs		8063060	0					
ANR	8063180	Identifier	macro_level		8063060	1					
ANR	8063181	PrimaryExpression	2		8063060	1					
ANR	8063182	ReturnStatement	return 0 ;	151:12:4513:4521	8063060	1	True				
ANR	8063183	PrimaryExpression	0		8063060	0					
ANR	8063184	ElseStatement	else		8063060	0					
ANR	8063185	IfStatement	if ( pcs -> macro_level )		8063060	0					
ANR	8063186	Condition	pcs -> macro_level	152:15:4538:4553	8063060	0	True				
ANR	8063187	PtrMemberAccess	pcs -> macro_level		8063060	0					
ANR	8063188	Identifier	pcs		8063060	0					
ANR	8063189	Identifier	macro_level		8063060	1					
ANR	8063190	ReturnStatement	return e_Range ;	153:8:4564:4578	8063060	1	True				
ANR	8063191	Identifier	e_Range		8063060	0					
ANR	8063192	SwitchStatement	switch ( i )		8063060	5					
ANR	8063193	Condition	i	154:12:4648:4648	8063060	0	True				
ANR	8063194	Identifier	i		8063060	0					
ANR	8063195	CompoundStatement		33:15:1366:1366	8063060	1					
ANR	8063196	Label	case 0 :	155:8:4661:4667	8063060	0	True				
ANR	8063197	CompoundStatement		36:16:1465:1482	8063060	1					
ANR	8063198	IdentifierDeclStatement	pcl_macro_t * pmac ;	157:16:4750:4767	8063060	0	True				
ANR	8063199	IdentifierDecl	* pmac		8063060	0					
ANR	8063200	IdentifierDeclType	pcl_macro_t *		8063060	0					
ANR	8063201	Identifier	pmac		8063060	1					
ANR	8063202	ExpressionStatement	"pmac = ( pcl_macro_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_macro_t ) , ""begin macro definition"" )"	159:16:4786:4938	8063060	1	True				
ANR	8063203	AssignmentExpression	"pmac = ( pcl_macro_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_macro_t ) , ""begin macro definition"" )"		8063060	0		=			
ANR	8063204	Identifier	pmac		8063060	0					
ANR	8063205	CastExpression	"( pcl_macro_t * ) gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_macro_t ) , ""begin macro definition"" )"		8063060	1					
ANR	8063206	CastTarget	pcl_macro_t *		8063060	0					
ANR	8063207	CallExpression	"gs_alloc_bytes ( pcs -> memory , sizeof ( pcl_macro_t ) , ""begin macro definition"" )"		8063060	1					
ANR	8063208	Callee	gs_alloc_bytes		8063060	0					
ANR	8063209	Identifier	gs_alloc_bytes		8063060	0					
ANR	8063210	ArgumentList	pcs -> memory		8063060	1					
ANR	8063211	Argument	pcs -> memory		8063060	0					
ANR	8063212	PtrMemberAccess	pcs -> memory		8063060	0					
ANR	8063213	Identifier	pcs		8063060	0					
ANR	8063214	Identifier	memory		8063060	1					
ANR	8063215	Argument	sizeof ( pcl_macro_t )		8063060	1					
ANR	8063216	SizeofExpression	sizeof ( pcl_macro_t )		8063060	0					
ANR	8063217	Sizeof	sizeof		8063060	0					
ANR	8063218	SizeofOperand	pcl_macro_t		8063060	1					
ANR	8063219	Argument	"""begin macro definition"""		8063060	2					
ANR	8063220	PrimaryExpression	"""begin macro definition"""		8063060	0					
ANR	8063221	IfStatement	if ( pmac == 0 )		8063060	2					
ANR	8063222	Condition	pmac == 0	162:20:4960:4968	8063060	0	True				
ANR	8063223	EqualityExpression	pmac == 0		8063060	0		==			
ANR	8063224	Identifier	pmac		8063060	0					
ANR	8063225	PrimaryExpression	0		8063060	1					
ANR	8063226	ExpressionStatement	return_error ( e_Memory )	163:20:4991:5013	8063060	1	True				
ANR	8063227	CallExpression	return_error ( e_Memory )		8063060	0					
ANR	8063228	Callee	return_error		8063060	0					
ANR	8063229	Identifier	return_error		8063060	0					
ANR	8063230	ArgumentList	e_Memory		8063060	1					
ANR	8063231	Argument	e_Memory		8063060	0					
ANR	8063232	Identifier	e_Memory		8063060	0					
ANR	8063233	ExpressionStatement	pmac -> storage = pcds_temporary	164:16:5031:5061	8063060	3	True				
ANR	8063234	AssignmentExpression	pmac -> storage = pcds_temporary		8063060	0		=			
ANR	8063235	PtrMemberAccess	pmac -> storage		8063060	0					
ANR	8063236	Identifier	pmac		8063060	0					
ANR	8063237	Identifier	storage		8063060	1					
ANR	8063238	Identifier	pcds_temporary		8063060	1					
ANR	8063239	ExpressionStatement	pcs -> macro_definition = ( byte * ) pmac	165:16:5079:5116	8063060	4	True				
ANR	8063240	AssignmentExpression	pcs -> macro_definition = ( byte * ) pmac		8063060	0		=			
ANR	8063241	PtrMemberAccess	pcs -> macro_definition		8063060	0					
ANR	8063242	Identifier	pcs		8063060	0					
ANR	8063243	Identifier	macro_definition		8063060	1					
ANR	8063244	CastExpression	( byte * ) pmac		8063060	1					
ANR	8063245	CastTarget	byte *		8063060	0					
ANR	8063246	Identifier	pmac		8063060	1					
ANR	8063247	ExpressionStatement	pcs -> defining_macro = true	166:16:5134:5160	8063060	5	True				
ANR	8063248	AssignmentExpression	pcs -> defining_macro = true		8063060	0		=			
ANR	8063249	PtrMemberAccess	pcs -> defining_macro		8063060	0					
ANR	8063250	Identifier	pcs		8063060	0					
ANR	8063251	Identifier	defining_macro		8063060	1					
ANR	8063252	Identifier	true		8063060	1					
ANR	8063253	IfStatement	if ( gs_debug_c ( 'i' ) )		8063060	6					
ANR	8063254	Condition	gs_debug_c ( 'i' )	168:20:5195:5209	8063060	0	True				
ANR	8063255	CallExpression	gs_debug_c ( 'i' )		8063060	0					
ANR	8063256	Callee	gs_debug_c		8063060	0					
ANR	8063257	Identifier	gs_debug_c		8063060	0					
ANR	8063258	ArgumentList	'i'		8063060	1					
ANR	8063259	Argument	'i'		8063060	0					
ANR	8063260	PrimaryExpression	'i'		8063060	0					
ANR	8063261	CompoundStatement		47:37:1927:1927	8063060	1					
ANR	8063262	ExpressionStatement	"pcl_dump_current_macro ( pcs , ""[i] Starting Macro"" )"	169:20:5234:5283	8063060	0	True				
ANR	8063263	CallExpression	"pcl_dump_current_macro ( pcs , ""[i] Starting Macro"" )"		8063060	0					
ANR	8063264	Callee	pcl_dump_current_macro		8063060	0					
ANR	8063265	Identifier	pcl_dump_current_macro		8063060	0					
ANR	8063266	ArgumentList	pcs		8063060	1					
ANR	8063267	Argument	pcs		8063060	0					
ANR	8063268	Identifier	pcs		8063060	0					
ANR	8063269	Argument	"""[i] Starting Macro"""		8063060	1					
ANR	8063270	PrimaryExpression	"""[i] Starting Macro"""		8063060	0					
ANR	8063271	ReturnStatement	return 0 ;	172:16:5326:5334	8063060	7	True				
ANR	8063272	PrimaryExpression	0		8063060	0					
ANR	8063273	Label	case macro_end_definition :	174:8:5358:5383	8063060	2	True				
ANR	8063274	Identifier	macro_end_definition		8063060	0					
ANR	8063275	CompoundStatement		54:12:2124:2124	8063060	3					
ANR	8063276	ReturnStatement	return e_Range ;	176:16:5508:5522	8063060	0	True				
ANR	8063277	Identifier	e_Range		8063060	0					
ANR	8063278	Label	case macro_execute :	178:8:5546:5564	8063060	4	True				
ANR	8063279	Identifier	macro_execute		8063060	0					
ANR	8063280	CompoundStatement		59:16:2366:2377	8063060	5					
ANR	8063281	IdentifierDeclStatement	void * value ;	180:16:5651:5662	8063060	0	True				
ANR	8063282	IdentifierDecl	* value		8063060	0					
ANR	8063283	IdentifierDeclType	void *		8063060	0					
ANR	8063284	Identifier	value		8063060	1					
ANR	8063285	IfStatement	"if ( ! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value ) )"		8063060	1					
ANR	8063286	Condition	"! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"	182:20:5685:5802	8063060	0	True				
ANR	8063287	UnaryOperationExpression	"! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	0					
ANR	8063288	UnaryOperator	!		8063060	0					
ANR	8063289	CallExpression	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	1					
ANR	8063290	Callee	pl_dict_find		8063060	0					
ANR	8063291	Identifier	pl_dict_find		8063060	0					
ANR	8063292	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063293	Argument	& pcs -> macros		8063060	0					
ANR	8063294	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063295	UnaryOperator	&		8063060	0					
ANR	8063296	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063297	Identifier	pcs		8063060	0					
ANR	8063298	Identifier	macros		8063060	1					
ANR	8063299	Argument	current_macro_id		8063060	1					
ANR	8063300	Identifier	current_macro_id		8063060	0					
ANR	8063301	Argument	current_macro_id_size		8063060	2					
ANR	8063302	Identifier	current_macro_id_size		8063060	0					
ANR	8063303	Argument	& value		8063060	3					
ANR	8063304	UnaryOperationExpression	& value		8063060	0					
ANR	8063305	UnaryOperator	&		8063060	0					
ANR	8063306	Identifier	value		8063060	1					
ANR	8063307	ReturnStatement	return 0 ;	186:20:5846:5854	8063060	1	True				
ANR	8063308	PrimaryExpression	0		8063060	0					
ANR	8063309	ReturnStatement	"return pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_none , pcl_reset_none , pcl_copy_none ) ;"	187:16:5872:6057	8063060	2	True				
ANR	8063310	CallExpression	"pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_none , pcl_reset_none , pcl_copy_none )"		8063060	0					
ANR	8063311	Callee	pcl_execute_macro		8063060	0					
ANR	8063312	Identifier	pcl_execute_macro		8063060	0					
ANR	8063313	ArgumentList	( const pcl_macro_t * ) value		8063060	1					
ANR	8063314	Argument	( const pcl_macro_t * ) value		8063060	0					
ANR	8063315	CastExpression	( const pcl_macro_t * ) value		8063060	0					
ANR	8063316	CastTarget	const pcl_macro_t *		8063060	0					
ANR	8063317	Identifier	value		8063060	1					
ANR	8063318	Argument	pcs		8063060	1					
ANR	8063319	Identifier	pcs		8063060	0					
ANR	8063320	Argument	pcl_copy_none		8063060	2					
ANR	8063321	Identifier	pcl_copy_none		8063060	0					
ANR	8063322	Argument	pcl_reset_none		8063060	3					
ANR	8063323	Identifier	pcl_reset_none		8063060	0					
ANR	8063324	Argument	pcl_copy_none		8063060	4					
ANR	8063325	Identifier	pcl_copy_none		8063060	0					
ANR	8063326	Label	case macro_call :	191:8:6081:6096	8063060	6	True				
ANR	8063327	Identifier	macro_call		8063060	0					
ANR	8063328	CompoundStatement		72:16:2932:2943	8063060	7					
ANR	8063329	IdentifierDeclStatement	void * value ;	193:16:6217:6228	8063060	0	True				
ANR	8063330	IdentifierDecl	* value		8063060	0					
ANR	8063331	IdentifierDeclType	void *		8063060	0					
ANR	8063332	Identifier	value		8063060	1					
ANR	8063333	IfStatement	"if ( ! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value ) )"		8063060	1					
ANR	8063334	Condition	"! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"	195:20:6251:6368	8063060	0	True				
ANR	8063335	UnaryOperationExpression	"! pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	0					
ANR	8063336	UnaryOperator	!		8063060	0					
ANR	8063337	CallExpression	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	1					
ANR	8063338	Callee	pl_dict_find		8063060	0					
ANR	8063339	Identifier	pl_dict_find		8063060	0					
ANR	8063340	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063341	Argument	& pcs -> macros		8063060	0					
ANR	8063342	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063343	UnaryOperator	&		8063060	0					
ANR	8063344	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063345	Identifier	pcs		8063060	0					
ANR	8063346	Identifier	macros		8063060	1					
ANR	8063347	Argument	current_macro_id		8063060	1					
ANR	8063348	Identifier	current_macro_id		8063060	0					
ANR	8063349	Argument	current_macro_id_size		8063060	2					
ANR	8063350	Identifier	current_macro_id_size		8063060	0					
ANR	8063351	Argument	& value		8063060	3					
ANR	8063352	UnaryOperationExpression	& value		8063060	0					
ANR	8063353	UnaryOperator	&		8063060	0					
ANR	8063354	Identifier	value		8063060	1					
ANR	8063355	ReturnStatement	return 0 ;	199:20:6412:6420	8063060	1	True				
ANR	8063356	PrimaryExpression	0		8063060	0					
ANR	8063357	ReturnStatement	"return pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_before_call , pcl_reset_none , pcl_copy_after_call ) ;"	200:16:6438:6636	8063060	2	True				
ANR	8063358	CallExpression	"pcl_execute_macro ( ( const pcl_macro_t * ) value , pcs , pcl_copy_before_call , pcl_reset_none , pcl_copy_after_call )"		8063060	0					
ANR	8063359	Callee	pcl_execute_macro		8063060	0					
ANR	8063360	Identifier	pcl_execute_macro		8063060	0					
ANR	8063361	ArgumentList	( const pcl_macro_t * ) value		8063060	1					
ANR	8063362	Argument	( const pcl_macro_t * ) value		8063060	0					
ANR	8063363	CastExpression	( const pcl_macro_t * ) value		8063060	0					
ANR	8063364	CastTarget	const pcl_macro_t *		8063060	0					
ANR	8063365	Identifier	value		8063060	1					
ANR	8063366	Argument	pcs		8063060	1					
ANR	8063367	Identifier	pcs		8063060	0					
ANR	8063368	Argument	pcl_copy_before_call		8063060	2					
ANR	8063369	Identifier	pcl_copy_before_call		8063060	0					
ANR	8063370	Argument	pcl_reset_none		8063060	3					
ANR	8063371	Identifier	pcl_reset_none		8063060	0					
ANR	8063372	Argument	pcl_copy_after_call		8063060	4					
ANR	8063373	Identifier	pcl_copy_after_call		8063060	0					
ANR	8063374	Label	case 4 :	204:8:6660:6666	8063060	8	True				
ANR	8063375	CompoundStatement		84:12:3395:3395	8063060	9					
ANR	8063376	ExpressionStatement	pcs -> overlay_macro_id = pcs -> macro_id	206:16:6762:6799	8063060	0	True				
ANR	8063377	AssignmentExpression	pcs -> overlay_macro_id = pcs -> macro_id		8063060	0		=			
ANR	8063378	PtrMemberAccess	pcs -> overlay_macro_id		8063060	0					
ANR	8063379	Identifier	pcs		8063060	0					
ANR	8063380	Identifier	overlay_macro_id		8063060	1					
ANR	8063381	PtrMemberAccess	pcs -> macro_id		8063060	1					
ANR	8063382	Identifier	pcs		8063060	0					
ANR	8063383	Identifier	macro_id		8063060	1					
ANR	8063384	ExpressionStatement	pcs -> overlay_enabled = true	207:16:6817:6844	8063060	1	True				
ANR	8063385	AssignmentExpression	pcs -> overlay_enabled = true		8063060	0		=			
ANR	8063386	PtrMemberAccess	pcs -> overlay_enabled		8063060	0					
ANR	8063387	Identifier	pcs		8063060	0					
ANR	8063388	Identifier	overlay_enabled		8063060	1					
ANR	8063389	Identifier	true		8063060	1					
ANR	8063390	ReturnStatement	return 0 ;	208:16:6862:6870	8063060	2	True				
ANR	8063391	PrimaryExpression	0		8063060	0					
ANR	8063392	Label	case 5 :	210:8:6894:6900	8063060	10	True				
ANR	8063393	CompoundStatement		90:12:3629:3629	8063060	11					
ANR	8063394	ExpressionStatement	pcs -> overlay_enabled = false	212:16:6982:7010	8063060	0	True				
ANR	8063395	AssignmentExpression	pcs -> overlay_enabled = false		8063060	0		=			
ANR	8063396	PtrMemberAccess	pcs -> overlay_enabled		8063060	0					
ANR	8063397	Identifier	pcs		8063060	0					
ANR	8063398	Identifier	overlay_enabled		8063060	1					
ANR	8063399	Identifier	false		8063060	1					
ANR	8063400	ReturnStatement	return 0 ;	213:16:7028:7036	8063060	1	True				
ANR	8063401	PrimaryExpression	0		8063060	0					
ANR	8063402	Label	case 6 :	215:8:7060:7066	8063060	12	True				
ANR	8063403	CompoundStatement		95:12:3795:3795	8063060	13					
ANR	8063404	ExpressionStatement	pl_dict_release ( & pcs -> macros )	217:16:7141:7170	8063060	0	True				
ANR	8063405	CallExpression	pl_dict_release ( & pcs -> macros )		8063060	0					
ANR	8063406	Callee	pl_dict_release		8063060	0					
ANR	8063407	Identifier	pl_dict_release		8063060	0					
ANR	8063408	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063409	Argument	& pcs -> macros		8063060	0					
ANR	8063410	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063411	UnaryOperator	&		8063060	0					
ANR	8063412	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063413	Identifier	pcs		8063060	0					
ANR	8063414	Identifier	macros		8063060	1					
ANR	8063415	ReturnStatement	return 0 ;	218:16:7188:7196	8063060	1	True				
ANR	8063416	PrimaryExpression	0		8063060	0					
ANR	8063417	Label	case macro_delete_temporary :	220:8:7220:7247	8063060	14	True				
ANR	8063418	Identifier	macro_delete_temporary		8063060	0					
ANR	8063419	CompoundStatement		100:12:3986:3986	8063060	15					
ANR	8063420	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> macros , & denum , false )"	222:16:7338:7391	8063060	0	True				
ANR	8063421	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> macros , & denum , false )"		8063060	0					
ANR	8063422	Callee	pl_dict_enum_stack_begin		8063060	0					
ANR	8063423	Identifier	pl_dict_enum_stack_begin		8063060	0					
ANR	8063424	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063425	Argument	& pcs -> macros		8063060	0					
ANR	8063426	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063427	UnaryOperator	&		8063060	0					
ANR	8063428	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063429	Identifier	pcs		8063060	0					
ANR	8063430	Identifier	macros		8063060	1					
ANR	8063431	Argument	& denum		8063060	1					
ANR	8063432	UnaryOperationExpression	& denum		8063060	0					
ANR	8063433	UnaryOperator	&		8063060	0					
ANR	8063434	Identifier	denum		8063060	1					
ANR	8063435	Argument	false		8063060	2					
ANR	8063436	Identifier	false		8063060	0					
ANR	8063437	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8063060	1					
ANR	8063438	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	223:23:7416:7454	8063060	0	True				
ANR	8063439	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8063060	0					
ANR	8063440	Callee	pl_dict_enum_next		8063060	0					
ANR	8063441	Identifier	pl_dict_enum_next		8063060	0					
ANR	8063442	ArgumentList	& denum		8063060	1					
ANR	8063443	Argument	& denum		8063060	0					
ANR	8063444	UnaryOperationExpression	& denum		8063060	0					
ANR	8063445	UnaryOperator	&		8063060	0					
ANR	8063446	Identifier	denum		8063060	1					
ANR	8063447	Argument	& key		8063060	1					
ANR	8063448	UnaryOperationExpression	& key		8063060	0					
ANR	8063449	UnaryOperator	&		8063060	0					
ANR	8063450	Identifier	key		8063060	1					
ANR	8063451	Argument	& value		8063060	2					
ANR	8063452	UnaryOperationExpression	& value		8063060	0					
ANR	8063453	UnaryOperator	&		8063060	0					
ANR	8063454	Identifier	value		8063060	1					
ANR	8063455	IfStatement	if ( ( ( pcl_macro_t * ) value ) -> storage == pcds_temporary )		8063060	1					
ANR	8063456	Condition	( ( pcl_macro_t * ) value ) -> storage == pcds_temporary	224:24:7481:7530	8063060	0	True				
ANR	8063457	EqualityExpression	( ( pcl_macro_t * ) value ) -> storage == pcds_temporary		8063060	0		==			
ANR	8063458	PtrMemberAccess	( ( pcl_macro_t * ) value ) -> storage		8063060	0					
ANR	8063459	CastExpression	( pcl_macro_t * ) value		8063060	0					
ANR	8063460	CastTarget	pcl_macro_t *		8063060	0					
ANR	8063461	Identifier	value		8063060	1					
ANR	8063462	Identifier	storage		8063060	1					
ANR	8063463	Identifier	pcds_temporary		8063060	1					
ANR	8063464	ExpressionStatement	"pl_dict_undef_purge_synonyms ( & pcs -> macros , key . data , key . size )"	225:24:7557:7672	8063060	1	True				
ANR	8063465	CallExpression	"pl_dict_undef_purge_synonyms ( & pcs -> macros , key . data , key . size )"		8063060	0					
ANR	8063466	Callee	pl_dict_undef_purge_synonyms		8063060	0					
ANR	8063467	Identifier	pl_dict_undef_purge_synonyms		8063060	0					
ANR	8063468	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063469	Argument	& pcs -> macros		8063060	0					
ANR	8063470	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063471	UnaryOperator	&		8063060	0					
ANR	8063472	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063473	Identifier	pcs		8063060	0					
ANR	8063474	Identifier	macros		8063060	1					
ANR	8063475	Argument	key . data		8063060	1					
ANR	8063476	MemberAccess	key . data		8063060	0					
ANR	8063477	Identifier	key		8063060	0					
ANR	8063478	Identifier	data		8063060	1					
ANR	8063479	Argument	key . size		8063060	2					
ANR	8063480	MemberAccess	key . size		8063060	0					
ANR	8063481	Identifier	key		8063060	0					
ANR	8063482	Identifier	size		8063060	1					
ANR	8063483	ReturnStatement	return 0 ;	227:16:7690:7698	8063060	2	True				
ANR	8063484	PrimaryExpression	0		8063060	0					
ANR	8063485	Label	case 8 :	229:8:7722:7728	8063060	16	True				
ANR	8063486	CompoundStatement		109:12:4457:4457	8063060	17					
ANR	8063487	ExpressionStatement	"pl_dict_undef_purge_synonyms ( & pcs -> macros , current_macro_id , current_macro_id_size )"	231:16:7803:7931	8063060	0	True				
ANR	8063488	CallExpression	"pl_dict_undef_purge_synonyms ( & pcs -> macros , current_macro_id , current_macro_id_size )"		8063060	0					
ANR	8063489	Callee	pl_dict_undef_purge_synonyms		8063060	0					
ANR	8063490	Identifier	pl_dict_undef_purge_synonyms		8063060	0					
ANR	8063491	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063492	Argument	& pcs -> macros		8063060	0					
ANR	8063493	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063494	UnaryOperator	&		8063060	0					
ANR	8063495	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063496	Identifier	pcs		8063060	0					
ANR	8063497	Identifier	macros		8063060	1					
ANR	8063498	Argument	current_macro_id		8063060	1					
ANR	8063499	Identifier	current_macro_id		8063060	0					
ANR	8063500	Argument	current_macro_id_size		8063060	2					
ANR	8063501	Identifier	current_macro_id_size		8063060	0					
ANR	8063502	ReturnStatement	return 0 ;	233:16:7949:7957	8063060	1	True				
ANR	8063503	PrimaryExpression	0		8063060	0					
ANR	8063504	Label	case 9 :	235:8:7981:7987	8063060	18	True				
ANR	8063505	CompoundStatement		115:12:4716:4716	8063060	19					
ANR	8063506	IfStatement	"if ( pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value ) )"		8063060	0					
ANR	8063507	Condition	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"	237:20:8074:8190	8063060	0	True				
ANR	8063508	CallExpression	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	0					
ANR	8063509	Callee	pl_dict_find		8063060	0					
ANR	8063510	Identifier	pl_dict_find		8063060	0					
ANR	8063511	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063512	Argument	& pcs -> macros		8063060	0					
ANR	8063513	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063514	UnaryOperator	&		8063060	0					
ANR	8063515	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063516	Identifier	pcs		8063060	0					
ANR	8063517	Identifier	macros		8063060	1					
ANR	8063518	Argument	current_macro_id		8063060	1					
ANR	8063519	Identifier	current_macro_id		8063060	0					
ANR	8063520	Argument	current_macro_id_size		8063060	2					
ANR	8063521	Identifier	current_macro_id_size		8063060	0					
ANR	8063522	Argument	& value		8063060	3					
ANR	8063523	UnaryOperationExpression	& value		8063060	0					
ANR	8063524	UnaryOperator	&		8063060	0					
ANR	8063525	Identifier	value		8063060	1					
ANR	8063526	ExpressionStatement	( ( pcl_macro_t * ) value ) -> storage = pcds_temporary	240:20:8213:8262	8063060	1	True				
ANR	8063527	AssignmentExpression	( ( pcl_macro_t * ) value ) -> storage = pcds_temporary		8063060	0		=			
ANR	8063528	PtrMemberAccess	( ( pcl_macro_t * ) value ) -> storage		8063060	0					
ANR	8063529	CastExpression	( pcl_macro_t * ) value		8063060	0					
ANR	8063530	CastTarget	pcl_macro_t *		8063060	0					
ANR	8063531	Identifier	value		8063060	1					
ANR	8063532	Identifier	storage		8063060	1					
ANR	8063533	Identifier	pcds_temporary		8063060	1					
ANR	8063534	ReturnStatement	return 0 ;	241:16:8280:8288	8063060	1	True				
ANR	8063535	PrimaryExpression	0		8063060	0					
ANR	8063536	Label	case 10 :	243:8:8312:8319	8063060	20	True				
ANR	8063537	CompoundStatement		123:12:5048:5048	8063060	21					
ANR	8063538	IfStatement	"if ( pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value ) )"		8063060	0					
ANR	8063539	Condition	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"	245:20:8406:8522	8063060	0	True				
ANR	8063540	CallExpression	"pl_dict_find ( & pcs -> macros , current_macro_id , current_macro_id_size , & value )"		8063060	0					
ANR	8063541	Callee	pl_dict_find		8063060	0					
ANR	8063542	Identifier	pl_dict_find		8063060	0					
ANR	8063543	ArgumentList	& pcs -> macros		8063060	1					
ANR	8063544	Argument	& pcs -> macros		8063060	0					
ANR	8063545	UnaryOperationExpression	& pcs -> macros		8063060	0					
ANR	8063546	UnaryOperator	&		8063060	0					
ANR	8063547	PtrMemberAccess	pcs -> macros		8063060	1					
ANR	8063548	Identifier	pcs		8063060	0					
ANR	8063549	Identifier	macros		8063060	1					
ANR	8063550	Argument	current_macro_id		8063060	1					
ANR	8063551	Identifier	current_macro_id		8063060	0					
ANR	8063552	Argument	current_macro_id_size		8063060	2					
ANR	8063553	Identifier	current_macro_id_size		8063060	0					
ANR	8063554	Argument	& value		8063060	3					
ANR	8063555	UnaryOperationExpression	& value		8063060	0					
ANR	8063556	UnaryOperator	&		8063060	0					
ANR	8063557	Identifier	value		8063060	1					
ANR	8063558	ExpressionStatement	( ( pcl_macro_t * ) value ) -> storage = pcds_permanent	248:20:8545:8594	8063060	1	True				
ANR	8063559	AssignmentExpression	( ( pcl_macro_t * ) value ) -> storage = pcds_permanent		8063060	0		=			
ANR	8063560	PtrMemberAccess	( ( pcl_macro_t * ) value ) -> storage		8063060	0					
ANR	8063561	CastExpression	( pcl_macro_t * ) value		8063060	0					
ANR	8063562	CastTarget	pcl_macro_t *		8063060	0					
ANR	8063563	Identifier	value		8063060	1					
ANR	8063564	Identifier	storage		8063060	1					
ANR	8063565	Identifier	pcds_permanent		8063060	1					
ANR	8063566	ReturnStatement	return 0 ;	249:16:8612:8620	8063060	1	True				
ANR	8063567	PrimaryExpression	0		8063060	0					
ANR	8063568	Label	default :	251:8:8644:8651	8063060	22	True				
ANR	8063569	Identifier	default		8063060	0					
ANR	8063570	ReturnStatement	return e_Range ;	252:12:8665:8679	8063060	23	True				
ANR	8063571	Identifier	e_Range		8063060	0					
ANR	8063572	ReturnType	static int		8063060	1					
ANR	8063573	Identifier	pcl_macro_control		8063060	2					
ANR	8063574	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8063060	3					
ANR	8063575	Parameter	pcl_args_t * pargs	121:18:3245:3262	8063060	0	True				
ANR	8063576	ParameterType	pcl_args_t *		8063060	0					
ANR	8063577	Identifier	pargs		8063060	1					
ANR	8063578	Parameter	pcl_state_t * pcs	121:38:3265:3281	8063060	1	True				
ANR	8063579	ParameterType	pcl_state_t *		8063060	0					
ANR	8063580	Identifier	pcs		8063060	1					
ANR	8063581	CFGEntryNode	ENTRY		8063060		True				
ANR	8063582	CFGExitNode	EXIT		8063060		True				
ANR	8063583	Symbol	pmac -> storage		8063060						
ANR	8063584	Symbol	macro_end_definition		8063060						
ANR	8063585	Symbol	& key		8063060						
ANR	8063586	Symbol	code		8063060						
ANR	8063587	Symbol	& value		8063060						
ANR	8063588	Symbol	pcl_execute_macro		8063060						
ANR	8063589	Symbol	pcs -> macro_level		8063060						
ANR	8063590	Symbol	* pcs		8063060						
ANR	8063591	Symbol	key . size		8063060						
ANR	8063592	Symbol	pcs -> defining_macro		8063060						
ANR	8063593	Symbol	macro_call		8063060						
ANR	8063594	Symbol	pcl_copy_before_call		8063060						
ANR	8063595	Symbol	macro_execute		8063060						
ANR	8063596	Symbol	pcl_copy_after_call		8063060						
ANR	8063597	Symbol	& denum		8063060						
ANR	8063598	Symbol	pargs		8063060						
ANR	8063599	Symbol	denum		8063060						
ANR	8063600	Symbol	e_Memory		8063060						
ANR	8063601	Symbol	pcs -> macro_id		8063060						
ANR	8063602	Symbol	gs_debug_c		8063060						
ANR	8063603	Symbol	pcs -> memory		8063060						
ANR	8063604	Symbol	pcs -> overlay_macro_id		8063060						
ANR	8063605	Symbol	pcl_reset_none		8063060						
ANR	8063606	Symbol	pcs -> macro_definition		8063060						
ANR	8063607	Symbol	pcds_permanent		8063060						
ANR	8063608	Symbol	value		8063060						
ANR	8063609	Symbol	key		8063060						
ANR	8063610	Symbol	e_Range		8063060						
ANR	8063611	Symbol	pcs		8063060						
ANR	8063612	Symbol	gs_alloc_bytes		8063060						
ANR	8063613	Symbol	pcl_copy_none		8063060						
ANR	8063614	Symbol	& pcs -> macros		8063060						
ANR	8063615	Symbol	key . data		8063060						
ANR	8063616	Symbol	false		8063060						
ANR	8063617	Symbol	i		8063060						
ANR	8063618	Symbol	pmac		8063060						
ANR	8063619	Symbol	pl_dict_find		8063060						
ANR	8063620	Symbol	pl_dict_enum_next		8063060						
ANR	8063621	Symbol	current_macro_id		8063060						
ANR	8063622	Symbol	current_macro_id_size		8063060						
ANR	8063623	Symbol	pcds_temporary		8063060						
ANR	8063624	Symbol	( ( pcl_macro_t * ) value ) -> storage		8063060						
ANR	8063625	Symbol	int_arg		8063060						
ANR	8063626	Symbol	* pmac		8063060						
ANR	8063627	Symbol	* value		8063060						
ANR	8063628	Symbol	true		8063060						
ANR	8063629	Symbol	pl_dict_put		8063060						
ANR	8063630	Symbol	pcs -> overlay_enabled		8063060						
ANR	8063631	Function	pcl_assign_macro_id	256:0:8690:8924							
ANR	8063632	FunctionDef	"pcl_assign_macro_id (pcl_args_t * pargs , pcl_state_t * pcs)"		8063631	0					
ANR	8063633	CompoundStatement		258:0:8802:8924	8063631	0					
ANR	8063634	IdentifierDeclStatement	uint id = uint_arg ( pargs ) ;	259:4:8808:8833	8063631	0	True				
ANR	8063635	IdentifierDecl	id = uint_arg ( pargs )		8063631	0					
ANR	8063636	IdentifierDeclType	uint		8063631	0					
ANR	8063637	Identifier	id		8063631	1					
ANR	8063638	AssignmentExpression	id = uint_arg ( pargs )		8063631	2		=			
ANR	8063639	Identifier	id		8063631	0					
ANR	8063640	CallExpression	uint_arg ( pargs )		8063631	1					
ANR	8063641	Callee	uint_arg		8063631	0					
ANR	8063642	Identifier	uint_arg		8063631	0					
ANR	8063643	ArgumentList	pargs		8063631	1					
ANR	8063644	Argument	pargs		8063631	0					
ANR	8063645	Identifier	pargs		8063631	0					
ANR	8063646	ExpressionStatement	"id_set_value ( pcs -> macro_id , id )"	261:4:8840:8871	8063631	1	True				
ANR	8063647	CallExpression	"id_set_value ( pcs -> macro_id , id )"		8063631	0					
ANR	8063648	Callee	id_set_value		8063631	0					
ANR	8063649	Identifier	id_set_value		8063631	0					
ANR	8063650	ArgumentList	pcs -> macro_id		8063631	1					
ANR	8063651	Argument	pcs -> macro_id		8063631	0					
ANR	8063652	PtrMemberAccess	pcs -> macro_id		8063631	0					
ANR	8063653	Identifier	pcs		8063631	0					
ANR	8063654	Identifier	macro_id		8063631	1					
ANR	8063655	Argument	id		8063631	1					
ANR	8063656	Identifier	id		8063631	0					
ANR	8063657	ExpressionStatement	pcs -> macro_id_type = numeric_id	262:4:8877:8908	8063631	2	True				
ANR	8063658	AssignmentExpression	pcs -> macro_id_type = numeric_id		8063631	0		=			
ANR	8063659	PtrMemberAccess	pcs -> macro_id_type		8063631	0					
ANR	8063660	Identifier	pcs		8063631	0					
ANR	8063661	Identifier	macro_id_type		8063631	1					
ANR	8063662	Identifier	numeric_id		8063631	1					
ANR	8063663	ReturnStatement	return 0 ;	263:4:8914:8922	8063631	3	True				
ANR	8063664	PrimaryExpression	0		8063631	0					
ANR	8063665	ReturnType	static int		8063631	1					
ANR	8063666	Identifier	pcl_assign_macro_id		8063631	2					
ANR	8063667	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8063631	3					
ANR	8063668	Parameter	pcl_args_t * pargs	257:20:8763:8780	8063631	0	True				
ANR	8063669	ParameterType	pcl_args_t *		8063631	0					
ANR	8063670	Identifier	pargs		8063631	1					
ANR	8063671	Parameter	pcl_state_t * pcs	257:40:8783:8799	8063631	1	True				
ANR	8063672	ParameterType	pcl_state_t *		8063631	0					
ANR	8063673	Identifier	pcs		8063631	1					
ANR	8063674	CFGEntryNode	ENTRY		8063631		True				
ANR	8063675	CFGExitNode	EXIT		8063631		True				
ANR	8063676	Symbol	pcs		8063631						
ANR	8063677	Symbol	numeric_id		8063631						
ANR	8063678	Symbol	pargs		8063631						
ANR	8063679	Symbol	pcs -> macro_id		8063631						
ANR	8063680	Symbol	pcs -> macro_id_type		8063631						
ANR	8063681	Symbol	* pcs		8063631						
ANR	8063682	Symbol	id		8063631						
ANR	8063683	Symbol	uint_arg		8063631						
ANR	8063684	Function	pcmacros_do_registration	267:0:8948:9466							
ANR	8063685	FunctionDef	"pcmacros_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8063684	0					
ANR	8063686	CompoundStatement		270:0:9067:9466	8063684	0					
ANR	8063687	Statement	DEFINE_CLASS	271:4:9127:9138	8063684	0	True				
ANR	8063688	Statement	(	271:16:9139:9139	8063684	1	True				
ANR	8063689	Statement	'&'	271:17:9140:9142	8063684	2	True				
ANR	8063690	Statement	)	271:20:9143:9143	8063684	3	True				
ANR	8063691	CompoundStatement		2:22:77:77	8063684	4					
ANR	8063692	Statement	'f'	272:4:9151:9153	8063684	0	True				
ANR	8063693	Statement	","	272:7:9154:9154	8063684	1	True				
ANR	8063694	Statement	'X'	272:9:9156:9158	8063684	2	True				
ANR	8063695	Statement	","	272:12:9159:9159	8063684	3	True				
ANR	8063696	Statement	PCL_COMMAND	273:12:9173:9183	8063684	4	True				
ANR	8063697	Statement	(	273:23:9184:9184	8063684	5	True				
ANR	8063698	Statement	"""Macro Control"""	273:24:9185:9199	8063684	6	True				
ANR	8063699	Statement	","	273:39:9200:9200	8063684	7	True				
ANR	8063700	Statement	pcl_macro_control	273:41:9202:9218	8063684	8	True				
ANR	8063701	Statement	","	273:58:9219:9219	8063684	9	True				
ANR	8063702	Statement	pca_neg_error	274:28:9249:9261	8063684	10	True				
ANR	8063703	Statement	|	274:42:9263:9263	8063684	11	True				
ANR	8063704	Statement	pca_big_error	274:44:9265:9277	8063684	12	True				
ANR	8063705	Statement	|	274:58:9279:9279	8063684	13	True				
ANR	8063706	Statement	pca_in_macro	274:60:9281:9292	8063684	14	True				
ANR	8063707	Statement	)	274:72:9293:9293	8063684	15	True				
ANR	8063708	Statement	","	274:74:9295:9295	8063684	5	True				
ANR	8063709	CompoundStatement		5:76:229:229	8063684	6					
ANR	8063710	Statement	'f'	275:4:9303:9305	8063684	0	True				
ANR	8063711	Statement	","	275:7:9306:9306	8063684	1	True				
ANR	8063712	Statement	'Y'	275:9:9308:9310	8063684	2	True				
ANR	8063713	Statement	","	275:12:9311:9311	8063684	3	True				
ANR	8063714	Statement	PCL_COMMAND	276:12:9325:9335	8063684	4	True				
ANR	8063715	Statement	(	276:23:9336:9336	8063684	5	True				
ANR	8063716	Statement	"""Assign Macro ID"""	276:24:9337:9353	8063684	6	True				
ANR	8063717	Statement	","	276:41:9354:9354	8063684	7	True				
ANR	8063718	Statement	pcl_assign_macro_id	276:43:9356:9374	8063684	8	True				
ANR	8063719	Statement	","	276:62:9375:9375	8063684	9	True				
ANR	8063720	Statement	pca_neg_error	277:28:9405:9417	8063684	10	True				
ANR	8063721	Statement	|	277:42:9419:9419	8063684	11	True				
ANR	8063722	Statement	pca_big_error	277:44:9421:9433	8063684	12	True				
ANR	8063723	Statement	)	277:57:9434:9434	8063684	13	True				
ANR	8063724	Statement	","	277:59:9436:9436	8063684	7	True				
ANR	8063725	Statement	END_CLASS	278:8:9446:9454	8063684	8	True				
ANR	8063726	ReturnStatement	return 0 ;	278:18:9456:9464	8063684	9	True				
ANR	8063727	PrimaryExpression	0		8063684	0					
ANR	8063728	ReturnType	static int		8063684	1					
ANR	8063729	Identifier	pcmacros_do_registration		8063684	2					
ANR	8063730	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8063684	3					
ANR	8063731	Parameter	pcl_parser_state_t * pcl_parser_state	268:25:8984:9020	8063684	0	True				
ANR	8063732	ParameterType	pcl_parser_state_t *		8063684	0					
ANR	8063733	Identifier	pcl_parser_state		8063684	1					
ANR	8063734	Parameter	gs_memory_t * mem	269:25:9048:9064	8063684	1	True				
ANR	8063735	ParameterType	gs_memory_t *		8063684	0					
ANR	8063736	Identifier	mem		8063684	1					
ANR	8063737	CFGEntryNode	ENTRY		8063684		True				
ANR	8063738	CFGExitNode	EXIT		8063684		True				
ANR	8063739	Symbol	mem		8063684						
ANR	8063740	Symbol	pcl_parser_state		8063684						
ANR	8063741	Function	pcmacros_do_reset	280:0:9468:10642							
ANR	8063742	FunctionDef	"pcmacros_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8063741	0					
ANR	8063743	CompoundStatement		282:0:9539:10642	8063741	0					
ANR	8063744	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer ) )		8063741	0					
ANR	8063745	Condition	type & ( pcl_reset_initial | pcl_reset_printer )	283:8:9549:9594	8063741	0	True				
ANR	8063746	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8063741	0		&			
ANR	8063747	Identifier	type		8063741	0					
ANR	8063748	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8063741	1		|			
ANR	8063749	Identifier	pcl_reset_initial		8063741	0					
ANR	8063750	Identifier	pcl_reset_printer		8063741	1					
ANR	8063751	CompoundStatement		3:8:67:79	8063741	1					
ANR	8063752	IdentifierDeclStatement	int code = 0 ;	284:8:9607:9619	8063741	0	True				
ANR	8063753	IdentifierDecl	code = 0		8063741	0					
ANR	8063754	IdentifierDeclType	int		8063741	0					
ANR	8063755	Identifier	code		8063741	1					
ANR	8063756	AssignmentExpression	code = 0		8063741	2		=			
ANR	8063757	Identifier	code		8063741	0					
ANR	8063758	PrimaryExpression	0		8063741	1					
ANR	8063759	ExpressionStatement	pcs -> overlay_enabled = false	286:8:9630:9658	8063741	1	True				
ANR	8063760	AssignmentExpression	pcs -> overlay_enabled = false		8063741	0		=			
ANR	8063761	PtrMemberAccess	pcs -> overlay_enabled		8063741	0					
ANR	8063762	Identifier	pcs		8063741	0					
ANR	8063763	Identifier	overlay_enabled		8063741	1					
ANR	8063764	Identifier	false		8063741	1					
ANR	8063765	ExpressionStatement	pcs -> macro_level = 0	287:8:9668:9688	8063741	2	True				
ANR	8063766	AssignmentExpression	pcs -> macro_level = 0		8063741	0		=			
ANR	8063767	PtrMemberAccess	pcs -> macro_level		8063741	0					
ANR	8063768	Identifier	pcs		8063741	0					
ANR	8063769	Identifier	macro_level		8063741	1					
ANR	8063770	PrimaryExpression	0		8063741	1					
ANR	8063771	ExpressionStatement	pcs -> defining_macro = false	288:8:9698:9725	8063741	3	True				
ANR	8063772	AssignmentExpression	pcs -> defining_macro = false		8063741	0		=			
ANR	8063773	PtrMemberAccess	pcs -> defining_macro		8063741	0					
ANR	8063774	Identifier	pcs		8063741	0					
ANR	8063775	Identifier	defining_macro		8063741	1					
ANR	8063776	Identifier	false		8063741	1					
ANR	8063777	ExpressionStatement	pcs -> saved = 0	289:8:9735:9749	8063741	4	True				
ANR	8063778	AssignmentExpression	pcs -> saved = 0		8063741	0		=			
ANR	8063779	PtrMemberAccess	pcs -> saved		8063741	0					
ANR	8063780	Identifier	pcs		8063741	0					
ANR	8063781	Identifier	saved		8063741	1					
ANR	8063782	PrimaryExpression	0		8063741	1					
ANR	8063783	ExpressionStatement	pcs -> macro_definition = 0	290:8:9759:9784	8063741	5	True				
ANR	8063784	AssignmentExpression	pcs -> macro_definition = 0		8063741	0		=			
ANR	8063785	PtrMemberAccess	pcs -> macro_definition		8063741	0					
ANR	8063786	Identifier	pcs		8063741	0					
ANR	8063787	Identifier	macro_definition		8063741	1					
ANR	8063788	PrimaryExpression	0		8063741	1					
ANR	8063789	IfStatement	if ( type & pcl_reset_initial )		8063741	6					
ANR	8063790	Condition	type & pcl_reset_initial	292:12:9799:9822	8063741	0	True				
ANR	8063791	BitAndExpression	type & pcl_reset_initial		8063741	0		&			
ANR	8063792	Identifier	type		8063741	0					
ANR	8063793	Identifier	pcl_reset_initial		8063741	1					
ANR	8063794	ExpressionStatement	"pl_dict_init ( & pcs -> macros , pcs -> memory , NULL )"	293:12:9837:9882	8063741	1	True				
ANR	8063795	CallExpression	"pl_dict_init ( & pcs -> macros , pcs -> memory , NULL )"		8063741	0					
ANR	8063796	Callee	pl_dict_init		8063741	0					
ANR	8063797	Identifier	pl_dict_init		8063741	0					
ANR	8063798	ArgumentList	& pcs -> macros		8063741	1					
ANR	8063799	Argument	& pcs -> macros		8063741	0					
ANR	8063800	UnaryOperationExpression	& pcs -> macros		8063741	0					
ANR	8063801	UnaryOperator	&		8063741	0					
ANR	8063802	PtrMemberAccess	pcs -> macros		8063741	1					
ANR	8063803	Identifier	pcs		8063741	0					
ANR	8063804	Identifier	macros		8063741	1					
ANR	8063805	Argument	pcs -> memory		8063741	1					
ANR	8063806	PtrMemberAccess	pcs -> memory		8063741	0					
ANR	8063807	Identifier	pcs		8063741	0					
ANR	8063808	Identifier	memory		8063741	1					
ANR	8063809	Argument	NULL		8063741	2					
ANR	8063810	Identifier	NULL		8063741	0					
ANR	8063811	ElseStatement	else		8063741	0					
ANR	8063812	CompoundStatement		14:12:371:386	8063741	0					
ANR	8063813	IdentifierDeclStatement	pcl_args_t args ;	295:12:9911:9926	8063741	0	True				
ANR	8063814	IdentifierDecl	args		8063741	0					
ANR	8063815	IdentifierDeclType	pcl_args_t		8063741	0					
ANR	8063816	Identifier	args		8063741	1					
ANR	8063817	ExpressionStatement	"arg_set_uint ( & args , macro_delete_temporary )"	297:12:9941:9984	8063741	1	True				
ANR	8063818	CallExpression	"arg_set_uint ( & args , macro_delete_temporary )"		8063741	0					
ANR	8063819	Callee	arg_set_uint		8063741	0					
ANR	8063820	Identifier	arg_set_uint		8063741	0					
ANR	8063821	ArgumentList	& args		8063741	1					
ANR	8063822	Argument	& args		8063741	0					
ANR	8063823	UnaryOperationExpression	& args		8063741	0					
ANR	8063824	UnaryOperator	&		8063741	0					
ANR	8063825	Identifier	args		8063741	1					
ANR	8063826	Argument	macro_delete_temporary		8063741	1					
ANR	8063827	Identifier	macro_delete_temporary		8063741	0					
ANR	8063828	ExpressionStatement	"code = pcl_macro_control ( & args , pcs )"	298:12:9998:10034	8063741	2	True				
ANR	8063829	AssignmentExpression	"code = pcl_macro_control ( & args , pcs )"		8063741	0		=			
ANR	8063830	Identifier	code		8063741	0					
ANR	8063831	CallExpression	"pcl_macro_control ( & args , pcs )"		8063741	1					
ANR	8063832	Callee	pcl_macro_control		8063741	0					
ANR	8063833	Identifier	pcl_macro_control		8063741	0					
ANR	8063834	ArgumentList	& args		8063741	1					
ANR	8063835	Argument	& args		8063741	0					
ANR	8063836	UnaryOperationExpression	& args		8063741	0					
ANR	8063837	UnaryOperator	&		8063741	0					
ANR	8063838	Identifier	args		8063741	1					
ANR	8063839	Argument	pcs		8063741	1					
ANR	8063840	Identifier	pcs		8063741	0					
ANR	8063841	IfStatement	if ( pcs -> alpha_macro_id . id != 0 )		8063741	3					
ANR	8063842	Condition	pcs -> alpha_macro_id . id != 0	299:16:10052:10078	8063741	0	True				
ANR	8063843	EqualityExpression	pcs -> alpha_macro_id . id != 0		8063741	0		!=			
ANR	8063844	MemberAccess	pcs -> alpha_macro_id . id		8063741	0					
ANR	8063845	PtrMemberAccess	pcs -> alpha_macro_id		8063741	0					
ANR	8063846	Identifier	pcs		8063741	0					
ANR	8063847	Identifier	alpha_macro_id		8063741	1					
ANR	8063848	Identifier	id		8063741	1					
ANR	8063849	PrimaryExpression	0		8063741	1					
ANR	8063850	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcmacros_do_reset"" )"	300:16:10097:10200	8063741	1	True				
ANR	8063851	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcmacros_do_reset"" )"		8063741	0					
ANR	8063852	Callee	gs_free_object		8063741	0					
ANR	8063853	Identifier	gs_free_object		8063741	0					
ANR	8063854	ArgumentList	pcs -> memory		8063741	1					
ANR	8063855	Argument	pcs -> memory		8063741	0					
ANR	8063856	PtrMemberAccess	pcs -> memory		8063741	0					
ANR	8063857	Identifier	pcs		8063741	0					
ANR	8063858	Identifier	memory		8063741	1					
ANR	8063859	Argument	pcs -> alpha_macro_id . id		8063741	1					
ANR	8063860	MemberAccess	pcs -> alpha_macro_id . id		8063741	0					
ANR	8063861	PtrMemberAccess	pcs -> alpha_macro_id		8063741	0					
ANR	8063862	Identifier	pcs		8063741	0					
ANR	8063863	Identifier	alpha_macro_id		8063741	1					
ANR	8063864	Identifier	id		8063741	1					
ANR	8063865	Argument	"""pcmacros_do_reset"""		8063741	2					
ANR	8063866	PrimaryExpression	"""pcmacros_do_reset"""		8063741	0					
ANR	8063867	IfStatement	if ( code < 0 )		8063741	4					
ANR	8063868	Condition	code < 0	302:16:10218:10225	8063741	0	True				
ANR	8063869	RelationalExpression	code < 0		8063741	0		<			
ANR	8063870	Identifier	code		8063741	0					
ANR	8063871	PrimaryExpression	0		8063741	1					
ANR	8063872	ReturnStatement	return code ;	303:16:10244:10255	8063741	1	True				
ANR	8063873	Identifier	code		8063741	0					
ANR	8063874	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay | pcl_reset_permanent ) )		8063741	1					
ANR	8063875	Condition	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay | pcl_reset_permanent )	307:8:10282:10386	8063741	0	True				
ANR	8063876	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay | pcl_reset_permanent )		8063741	0		&			
ANR	8063877	Identifier	type		8063741	0					
ANR	8063878	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay | pcl_reset_permanent		8063741	1		|			
ANR	8063879	Identifier	pcl_reset_initial		8063741	0					
ANR	8063880	InclusiveOrExpression	pcl_reset_printer | pcl_reset_overlay | pcl_reset_permanent		8063741	1		|			
ANR	8063881	Identifier	pcl_reset_printer		8063741	0					
ANR	8063882	InclusiveOrExpression	pcl_reset_overlay | pcl_reset_permanent		8063741	1		|			
ANR	8063883	Identifier	pcl_reset_overlay		8063741	0					
ANR	8063884	Identifier	pcl_reset_permanent		8063741	1					
ANR	8063885	CompoundStatement		28:31:849:849	8063741	1					
ANR	8063886	ExpressionStatement	pcs -> alpha_macro_id . size = 0	310:8:10399:10427	8063741	0	True				
ANR	8063887	AssignmentExpression	pcs -> alpha_macro_id . size = 0		8063741	0		=			
ANR	8063888	MemberAccess	pcs -> alpha_macro_id . size		8063741	0					
ANR	8063889	PtrMemberAccess	pcs -> alpha_macro_id		8063741	0					
ANR	8063890	Identifier	pcs		8063741	0					
ANR	8063891	Identifier	alpha_macro_id		8063741	1					
ANR	8063892	Identifier	size		8063741	1					
ANR	8063893	PrimaryExpression	0		8063741	1					
ANR	8063894	ExpressionStatement	pcs -> macro_id_type = numeric_id	311:8:10437:10468	8063741	1	True				
ANR	8063895	AssignmentExpression	pcs -> macro_id_type = numeric_id		8063741	0		=			
ANR	8063896	PtrMemberAccess	pcs -> macro_id_type		8063741	0					
ANR	8063897	Identifier	pcs		8063741	0					
ANR	8063898	Identifier	macro_id_type		8063741	1					
ANR	8063899	Identifier	numeric_id		8063741	1					
ANR	8063900	ExpressionStatement	"id_set_value ( pcs -> macro_id , 0 )"	312:8:10478:10508	8063741	2	True				
ANR	8063901	CallExpression	"id_set_value ( pcs -> macro_id , 0 )"		8063741	0					
ANR	8063902	Callee	id_set_value		8063741	0					
ANR	8063903	Identifier	id_set_value		8063741	0					
ANR	8063904	ArgumentList	pcs -> macro_id		8063741	1					
ANR	8063905	Argument	pcs -> macro_id		8063741	0					
ANR	8063906	PtrMemberAccess	pcs -> macro_id		8063741	0					
ANR	8063907	Identifier	pcs		8063741	0					
ANR	8063908	Identifier	macro_id		8063741	1					
ANR	8063909	Argument	0		8063741	1					
ANR	8063910	PrimaryExpression	0		8063741	0					
ANR	8063911	ExpressionStatement	pcs -> alpha_macro_id . id = 0	313:8:10518:10544	8063741	3	True				
ANR	8063912	AssignmentExpression	pcs -> alpha_macro_id . id = 0		8063741	0		=			
ANR	8063913	MemberAccess	pcs -> alpha_macro_id . id		8063741	0					
ANR	8063914	PtrMemberAccess	pcs -> alpha_macro_id		8063741	0					
ANR	8063915	Identifier	pcs		8063741	0					
ANR	8063916	Identifier	alpha_macro_id		8063741	1					
ANR	8063917	Identifier	id		8063741	1					
ANR	8063918	PrimaryExpression	0		8063741	1					
ANR	8063919	IfStatement	if ( type & pcl_reset_permanent )		8063741	2					
ANR	8063920	Condition	type & pcl_reset_permanent	315:8:10560:10585	8063741	0	True				
ANR	8063921	BitAndExpression	type & pcl_reset_permanent		8063741	0		&			
ANR	8063922	Identifier	type		8063741	0					
ANR	8063923	Identifier	pcl_reset_permanent		8063741	1					
ANR	8063924	ExpressionStatement	pl_dict_release ( & pcs -> macros )	316:8:10596:10625	8063741	1	True				
ANR	8063925	CallExpression	pl_dict_release ( & pcs -> macros )		8063741	0					
ANR	8063926	Callee	pl_dict_release		8063741	0					
ANR	8063927	Identifier	pl_dict_release		8063741	0					
ANR	8063928	ArgumentList	& pcs -> macros		8063741	1					
ANR	8063929	Argument	& pcs -> macros		8063741	0					
ANR	8063930	UnaryOperationExpression	& pcs -> macros		8063741	0					
ANR	8063931	UnaryOperator	&		8063741	0					
ANR	8063932	PtrMemberAccess	pcs -> macros		8063741	1					
ANR	8063933	Identifier	pcs		8063741	0					
ANR	8063934	Identifier	macros		8063741	1					
ANR	8063935	ReturnStatement	return 0 ;	318:4:10632:10640	8063741	3	True				
ANR	8063936	PrimaryExpression	0		8063741	0					
ANR	8063937	ReturnType	static int		8063741	1					
ANR	8063938	Identifier	pcmacros_do_reset		8063741	2					
ANR	8063939	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8063741	3					
ANR	8063940	Parameter	pcl_state_t * pcs	281:18:9497:9513	8063741	0	True				
ANR	8063941	ParameterType	pcl_state_t *		8063741	0					
ANR	8063942	Identifier	pcs		8063741	1					
ANR	8063943	Parameter	pcl_reset_type_t type	281:37:9516:9536	8063741	1	True				
ANR	8063944	ParameterType	pcl_reset_type_t		8063741	0					
ANR	8063945	Identifier	type		8063741	1					
ANR	8063946	CFGEntryNode	ENTRY		8063741		True				
ANR	8063947	CFGExitNode	EXIT		8063741		True				
ANR	8063948	Symbol	code		8063741						
ANR	8063949	Symbol	pcs -> macro_level		8063741						
ANR	8063950	Symbol	numeric_id		8063741						
ANR	8063951	Symbol	pcl_reset_printer		8063741						
ANR	8063952	Symbol	pcs -> macro_id_type		8063741						
ANR	8063953	Symbol	* pcs		8063741						
ANR	8063954	Symbol	type		8063741						
ANR	8063955	Symbol	pcl_macro_control		8063741						
ANR	8063956	Symbol	pcs -> defining_macro		8063741						
ANR	8063957	Symbol	pcs -> macro_id		8063741						
ANR	8063958	Symbol	pcs -> memory		8063741						
ANR	8063959	Symbol	pcs -> alpha_macro_id . id		8063741						
ANR	8063960	Symbol	pcs -> macro_definition		8063741						
ANR	8063961	Symbol	pcl_reset_initial		8063741						
ANR	8063962	Symbol	& args		8063741						
ANR	8063963	Symbol	pcs		8063741						
ANR	8063964	Symbol	NULL		8063741						
ANR	8063965	Symbol	& pcs -> macros		8063741						
ANR	8063966	Symbol	false		8063741						
ANR	8063967	Symbol	pcs -> alpha_macro_id		8063741						
ANR	8063968	Symbol	macro_delete_temporary		8063741						
ANR	8063969	Symbol	args		8063741						
ANR	8063970	Symbol	pcs -> saved		8063741						
ANR	8063971	Symbol	pcs -> alpha_macro_id . size		8063741						
ANR	8063972	Symbol	pcl_reset_overlay		8063741						
ANR	8063973	Symbol	pcl_reset_permanent		8063741						
ANR	8063974	Symbol	pcs -> overlay_enabled		8063741						
ANR	8063975	Function	pcmacros_do_copy	320:0:10644:10910							
ANR	8063976	FunctionDef	"pcmacros_do_copy (pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation)"		8063975	0					
ANR	8063977	CompoundStatement		323:0:10768:10910	8063975	0					
ANR	8063978	IfStatement	if ( operation & pcl_copy_after )		8063975	0					
ANR	8063979	Condition	operation & pcl_copy_after	324:8:10778:10803	8063975	0	True				
ANR	8063980	BitAndExpression	operation & pcl_copy_after		8063975	0		&			
ANR	8063981	Identifier	operation		8063975	0					
ANR	8063982	Identifier	pcl_copy_after		8063975	1					
ANR	8063983	CompoundStatement		2:36:37:37	8063975	1					
ANR	8063984	ExpressionStatement	psaved -> macros = pcs -> macros	325:8:10860:10888	8063975	0	True				
ANR	8063985	AssignmentExpression	psaved -> macros = pcs -> macros		8063975	0		=			
ANR	8063986	PtrMemberAccess	psaved -> macros		8063975	0					
ANR	8063987	Identifier	psaved		8063975	0					
ANR	8063988	Identifier	macros		8063975	1					
ANR	8063989	PtrMemberAccess	pcs -> macros		8063975	1					
ANR	8063990	Identifier	pcs		8063975	0					
ANR	8063991	Identifier	macros		8063975	1					
ANR	8063992	ReturnStatement	return 0 ;	327:4:10900:10908	8063975	1	True				
ANR	8063993	PrimaryExpression	0		8063975	0					
ANR	8063994	ReturnType	static int		8063975	1					
ANR	8063995	Identifier	pcmacros_do_copy		8063975	2					
ANR	8063996	ParameterList	"pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation"		8063975	3					
ANR	8063997	Parameter	pcl_state_t * psaved	321:17:10672:10691	8063975	0	True				
ANR	8063998	ParameterType	pcl_state_t *		8063975	0					
ANR	8063999	Identifier	psaved		8063975	1					
ANR	8064000	Parameter	const pcl_state_t * pcs	321:39:10694:10716	8063975	1	True				
ANR	8064001	ParameterType	const pcl_state_t *		8063975	0					
ANR	8064002	Identifier	pcs		8063975	1					
ANR	8064003	Parameter	pcl_copy_operation_t operation	322:17:10736:10765	8063975	2	True				
ANR	8064004	ParameterType	pcl_copy_operation_t		8063975	0					
ANR	8064005	Identifier	operation		8063975	1					
ANR	8064006	CFGEntryNode	ENTRY		8063975		True				
ANR	8064007	CFGExitNode	EXIT		8063975		True				
ANR	8064008	Symbol	pcs		8063975						
ANR	8064009	Symbol	* psaved		8063975						
ANR	8064010	Symbol	psaved -> macros		8063975						
ANR	8064011	Symbol	psaved		8063975						
ANR	8064012	Symbol	pcl_copy_after		8063975						
ANR	8064013	Symbol	* pcs		8063975						
ANR	8064014	Symbol	pcs -> macros		8063975						
ANR	8064015	Symbol	operation		8063975						
ANR	8064016	DeclStmt									
ANR	8064017	Decl							const pcl_init_t	const pcl_init_t	pcmacros_init
