command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1344412	File	data/converged/CVE-2018-16863_ghostpdl/base_pack_ps.c								
ANR	1344413	DeclStmt									
ANR	1344414	Decl							bool	"bool ( FILE * in , char * str , int len )"	readline
ANR	1344415	DeclStmt									
ANR	1344416	Decl							int	"int ( const char * inputline , char * outputline , char * comment )"	pack_postscript_line
ANR	1344417	DeclStmt									
ANR	1344418	Decl							void	"void ( const char * outfilename , const char * arrayname )"	usage
ANR	1344419	DeclStmt									
ANR	1344420	Decl							int	"int ( int argc , char * argv [ ] )"	main
ANR	1344421	Function	readline	63:0:2194:2881							
ANR	1344422	FunctionDef	"readline (FILE * in , char * str , int len)"		1344421	0					
ANR	1344423	CompoundStatement		65:0:2246:2881	1344421	0					
ANR	1344424	IdentifierDeclStatement	"int i = 0 , c = getc ( in ) ;"	71:4:2423:2446	1344421	0	True				
ANR	1344425	IdentifierDecl	i = 0		1344421	0					
ANR	1344426	IdentifierDeclType	int		1344421	0					
ANR	1344427	Identifier	i		1344421	1					
ANR	1344428	AssignmentExpression	i = 0		1344421	2		=			
ANR	1344429	Identifier	i		1344421	0					
ANR	1344430	PrimaryExpression	0		1344421	1					
ANR	1344431	IdentifierDecl	c = getc ( in )		1344421	1					
ANR	1344432	IdentifierDeclType	int		1344421	0					
ANR	1344433	Identifier	c		1344421	1					
ANR	1344434	AssignmentExpression	c = getc ( in )		1344421	2		=			
ANR	1344435	Identifier	c		1344421	0					
ANR	1344436	CallExpression	getc ( in )		1344421	1					
ANR	1344437	Callee	getc		1344421	0					
ANR	1344438	Identifier	getc		1344421	0					
ANR	1344439	ArgumentList	in		1344421	1					
ANR	1344440	Argument	in		1344421	0					
ANR	1344441	Identifier	in		1344421	0					
ANR	1344442	IfStatement	if ( c < 0 )		1344421	1					
ANR	1344443	Condition	c < 0	73:8:2457:2461	1344421	0	True				
ANR	1344444	RelationalExpression	c < 0		1344421	0		<			
ANR	1344445	Identifier	c		1344421	0					
ANR	1344446	PrimaryExpression	0		1344421	1					
ANR	1344447	CompoundStatement		9:15:217:217	1344421	1					
ANR	1344448	ReturnStatement	return false ;	74:8:2474:2486	1344421	0	True				
ANR	1344449	Identifier	false		1344421	0					
ANR	1344450	WhileStatement	while ( i < len - 1 )		1344421	2					
ANR	1344451	Condition	i < len - 1	76:11:2505:2515	1344421	0	True				
ANR	1344452	RelationalExpression	i < len - 1		1344421	0		<			
ANR	1344453	Identifier	i		1344421	0					
ANR	1344454	AdditiveExpression	len - 1		1344421	1		-			
ANR	1344455	Identifier	len		1344421	0					
ANR	1344456	PrimaryExpression	1		1344421	1					
ANR	1344457	CompoundStatement		12:24:271:271	1344421	1					
ANR	1344458	IfStatement	if ( c < 0 || c == 10 )		1344421	0					
ANR	1344459	Condition	c < 0 || c == 10	77:12:2532:2547	1344421	0	True				
ANR	1344460	OrExpression	c < 0 || c == 10		1344421	0		||			
ANR	1344461	RelationalExpression	c < 0		1344421	0		<			
ANR	1344462	Identifier	c		1344421	0					
ANR	1344463	PrimaryExpression	0		1344421	1					
ANR	1344464	EqualityExpression	c == 10		1344421	1		==			
ANR	1344465	Identifier	c		1344421	0					
ANR	1344466	PrimaryExpression	10		1344421	1					
ANR	1344467	CompoundStatement		13:30:303:303	1344421	1					
ANR	1344468	BreakStatement	break ;	78:12:2583:2588	1344421	0	True				
ANR	1344469	IfStatement	if ( c == 13 )		1344421	1					
ANR	1344470	Condition	c == 13	80:12:2612:2618	1344421	0	True				
ANR	1344471	EqualityExpression	c == 13		1344421	0		==			
ANR	1344472	Identifier	c		1344421	0					
ANR	1344473	PrimaryExpression	13		1344421	1					
ANR	1344474	CompoundStatement		16:21:374:374	1344421	1					
ANR	1344475	ExpressionStatement	c = getc ( in )	81:12:2654:2666	1344421	0	True				
ANR	1344476	AssignmentExpression	c = getc ( in )		1344421	0		=			
ANR	1344477	Identifier	c		1344421	0					
ANR	1344478	CallExpression	getc ( in )		1344421	1					
ANR	1344479	Callee	getc		1344421	0					
ANR	1344480	Identifier	getc		1344421	0					
ANR	1344481	ArgumentList	in		1344421	1					
ANR	1344482	Argument	in		1344421	0					
ANR	1344483	Identifier	in		1344421	0					
ANR	1344484	IfStatement	if ( c != 10 && c >= 0 )		1344421	1					
ANR	1344485	Condition	c != 10 && c >= 0	82:16:2684:2700	1344421	0	True				
ANR	1344486	AndExpression	c != 10 && c >= 0		1344421	0		&&			
ANR	1344487	EqualityExpression	c != 10		1344421	0		!=			
ANR	1344488	Identifier	c		1344421	0					
ANR	1344489	PrimaryExpression	10		1344421	1					
ANR	1344490	RelationalExpression	c >= 0		1344421	1		>=			
ANR	1344491	Identifier	c		1344421	0					
ANR	1344492	PrimaryExpression	0		1344421	1					
ANR	1344493	CompoundStatement		18:35:456:456	1344421	1					
ANR	1344494	ExpressionStatement	"ungetc ( c , in )"	83:16:2740:2753	1344421	0	True				
ANR	1344495	CallExpression	"ungetc ( c , in )"		1344421	0					
ANR	1344496	Callee	ungetc		1344421	0					
ANR	1344497	Identifier	ungetc		1344421	0					
ANR	1344498	ArgumentList	c		1344421	1					
ANR	1344499	Argument	c		1344421	0					
ANR	1344500	Identifier	c		1344421	0					
ANR	1344501	Argument	in		1344421	1					
ANR	1344502	Identifier	in		1344421	0					
ANR	1344503	BreakStatement	break ;	85:12:2781:2786	1344421	2	True				
ANR	1344504	ExpressionStatement	str [ i ++ ] = c	87:8:2806:2818	1344421	2	True				
ANR	1344505	AssignmentExpression	str [ i ++ ] = c		1344421	0		=			
ANR	1344506	ArrayIndexing	str [ i ++ ]		1344421	0					
ANR	1344507	Identifier	str		1344421	0					
ANR	1344508	PostIncDecOperationExpression	i ++		1344421	1					
ANR	1344509	Identifier	i		1344421	0					
ANR	1344510	IncDec	++		1344421	1					
ANR	1344511	Identifier	c		1344421	1					
ANR	1344512	ExpressionStatement	c = getc ( in )	88:8:2828:2840	1344421	3	True				
ANR	1344513	AssignmentExpression	c = getc ( in )		1344421	0		=			
ANR	1344514	Identifier	c		1344421	0					
ANR	1344515	CallExpression	getc ( in )		1344421	1					
ANR	1344516	Callee	getc		1344421	0					
ANR	1344517	Identifier	getc		1344421	0					
ANR	1344518	ArgumentList	in		1344421	1					
ANR	1344519	Argument	in		1344421	0					
ANR	1344520	Identifier	in		1344421	0					
ANR	1344521	ExpressionStatement	str [ i ] = 0	90:4:2852:2862	1344421	3	True				
ANR	1344522	AssignmentExpression	str [ i ] = 0		1344421	0		=			
ANR	1344523	ArrayIndexing	str [ i ]		1344421	0					
ANR	1344524	Identifier	str		1344421	0					
ANR	1344525	Identifier	i		1344421	1					
ANR	1344526	PrimaryExpression	0		1344421	1					
ANR	1344527	ReturnStatement	return true ;	91:4:2868:2879	1344421	4	True				
ANR	1344528	Identifier	true		1344421	0					
ANR	1344529	ReturnType	static bool		1344421	1					
ANR	1344530	Identifier	readline		1344421	2					
ANR	1344531	ParameterList	"FILE * in , char * str , int len"		1344421	3					
ANR	1344532	Parameter	FILE * in	64:9:2215:2223	1344421	0	True				
ANR	1344533	ParameterType	FILE *		1344421	0					
ANR	1344534	Identifier	in		1344421	1					
ANR	1344535	Parameter	char * str	64:20:2226:2234	1344421	1	True				
ANR	1344536	ParameterType	char *		1344421	0					
ANR	1344537	Identifier	str		1344421	1					
ANR	1344538	Parameter	int len	64:31:2237:2243	1344421	2	True				
ANR	1344539	ParameterType	int		1344421	0					
ANR	1344540	Identifier	len		1344421	1					
ANR	1344541	CFGEntryNode	ENTRY		1344421		True				
ANR	1344542	CFGExitNode	EXIT		1344421		True				
ANR	1344543	Symbol	str		1344421						
ANR	1344544	Symbol	c		1344421						
ANR	1344545	Symbol	* i		1344421						
ANR	1344546	Symbol	len		1344421						
ANR	1344547	Symbol	in		1344421						
ANR	1344548	Symbol	false		1344421						
ANR	1344549	Symbol	true		1344421						
ANR	1344550	Symbol	i		1344421						
ANR	1344551	Symbol	* str		1344421						
ANR	1344552	Symbol	getc		1344421						
ANR	1344553	Function	pack_postscript_line	119:0:4213:7830							
ANR	1344554	FunctionDef	"pack_postscript_line (const char * inputline , char * outputline , char * comment)"		1344553	0					
ANR	1344555	CompoundStatement		121:0:4301:7830	1344553	0					
ANR	1344556	IdentifierDeclStatement	const char * str = inputline ;	122:4:4307:4334	1344553	0	True				
ANR	1344557	IdentifierDecl	* str = inputline		1344553	0					
ANR	1344558	IdentifierDeclType	const char *		1344553	0					
ANR	1344559	Identifier	str		1344553	1					
ANR	1344560	AssignmentExpression	* str = inputline		1344553	2		=			
ANR	1344561	Identifier	inputline		1344553	0					
ANR	1344562	Identifier	inputline		1344553	1					
ANR	1344563	IdentifierDeclStatement	const char * from ;	123:4:4340:4356	1344553	1	True				
ANR	1344564	IdentifierDecl	* from		1344553	0					
ANR	1344565	IdentifierDeclType	const char *		1344553	0					
ANR	1344566	Identifier	from		1344553	1					
ANR	1344567	IdentifierDeclStatement	char * to ;	124:4:4362:4370	1344553	2	True				
ANR	1344568	IdentifierDecl	* to		1344553	0					
ANR	1344569	IdentifierDeclType	char *		1344553	0					
ANR	1344570	Identifier	to		1344553	1					
ANR	1344571	IdentifierDeclStatement	int in_string = 0 ;	125:4:4376:4393	1344553	3	True				
ANR	1344572	IdentifierDecl	in_string = 0		1344553	0					
ANR	1344573	IdentifierDeclType	int		1344553	0					
ANR	1344574	Identifier	in_string		1344553	1					
ANR	1344575	AssignmentExpression	in_string = 0		1344553	2		=			
ANR	1344576	Identifier	in_string		1344553	0					
ANR	1344577	PrimaryExpression	0		1344553	1					
ANR	1344578	ExpressionStatement	outputline [ 0 ] = '\\0'	128:4:4436:4456	1344553	4	True				
ANR	1344579	AssignmentExpression	outputline [ 0 ] = '\\0'		1344553	0		=			
ANR	1344580	ArrayIndexing	outputline [ 0 ]		1344553	0					
ANR	1344581	Identifier	outputline		1344553	0					
ANR	1344582	PrimaryExpression	0		1344553	1					
ANR	1344583	PrimaryExpression	'\\0'		1344553	1					
ANR	1344584	ExpressionStatement	comment [ 0 ] = '\\0'	129:4:4462:4479	1344553	5	True				
ANR	1344585	AssignmentExpression	comment [ 0 ] = '\\0'		1344553	0		=			
ANR	1344586	ArrayIndexing	comment [ 0 ]		1344553	0					
ANR	1344587	Identifier	comment		1344553	0					
ANR	1344588	PrimaryExpression	0		1344553	1					
ANR	1344589	PrimaryExpression	'\\0'		1344553	1					
ANR	1344590	WhileStatement	while ( * str == ' ' || * str == '\\t' )		1344553	6					
ANR	1344591	Condition	* str == ' ' || * str == '\\t'	131:11:4493:4519	1344553	0	True				
ANR	1344592	OrExpression	* str == ' ' || * str == '\\t'		1344553	0		||			
ANR	1344593	EqualityExpression	* str == ' '		1344553	0		==			
ANR	1344594	UnaryOperationExpression	* str		1344553	0					
ANR	1344595	UnaryOperator	*		1344553	0					
ANR	1344596	Identifier	str		1344553	1					
ANR	1344597	PrimaryExpression	' '		1344553	1					
ANR	1344598	EqualityExpression	* str == '\\t'		1344553	1		==			
ANR	1344599	UnaryOperationExpression	* str		1344553	0					
ANR	1344600	UnaryOperator	*		1344553	0					
ANR	1344601	Identifier	str		1344553	1					
ANR	1344602	PrimaryExpression	'\\t'		1344553	1					
ANR	1344603	CompoundStatement		11:40:220:220	1344553	1					
ANR	1344604	ExpressionStatement	++ str	132:8:4569:4574	1344553	0	True				
ANR	1344605	UnaryExpression	++ str		1344553	0					
ANR	1344606	IncDec	++		1344553	0					
ANR	1344607	Identifier	str		1344553	1					
ANR	1344608	IfStatement	if ( * str == 0 )		1344553	7					
ANR	1344609	Condition	* str == 0	134:8:4590:4598	1344553	0	True				
ANR	1344610	EqualityExpression	* str == 0		1344553	0		==			
ANR	1344611	UnaryOperationExpression	* str		1344553	0					
ANR	1344612	UnaryOperator	*		1344553	0					
ANR	1344613	Identifier	str		1344553	1					
ANR	1344614	PrimaryExpression	0		1344553	1					
ANR	1344615	CompoundStatement		14:19:299:299	1344553	1					
ANR	1344616	ReturnStatement	return 0 ;	135:8:4638:4646	1344553	0	True				
ANR	1344617	PrimaryExpression	0		1344553	0					
ANR	1344618	IfStatement	"if ( ! strncmp ( str , ""%END"" , 4 ) )"		1344553	8					
ANR	1344619	Condition	"! strncmp ( str , ""%END"" , 4 )"	137:8:4662:4685	1344553	0	True				
ANR	1344620	UnaryOperationExpression	"! strncmp ( str , ""%END"" , 4 )"		1344553	0					
ANR	1344621	UnaryOperator	!		1344553	0					
ANR	1344622	CallExpression	"strncmp ( str , ""%END"" , 4 )"		1344553	1					
ANR	1344623	Callee	strncmp		1344553	0					
ANR	1344624	Identifier	strncmp		1344553	0					
ANR	1344625	ArgumentList	str		1344553	1					
ANR	1344626	Argument	str		1344553	0					
ANR	1344627	Identifier	str		1344553	0					
ANR	1344628	Argument	"""%END"""		1344553	1					
ANR	1344629	PrimaryExpression	"""%END"""		1344553	0					
ANR	1344630	Argument	4		1344553	2					
ANR	1344631	PrimaryExpression	4		1344553	0					
ANR	1344632	CompoundStatement		17:34:386:386	1344553	1					
ANR	1344633	ExpressionStatement	"strcpy ( outputline , str )"	138:8:4730:4753	1344553	0	True				
ANR	1344634	CallExpression	"strcpy ( outputline , str )"		1344553	0					
ANR	1344635	Callee	strcpy		1344553	0					
ANR	1344636	Identifier	strcpy		1344553	0					
ANR	1344637	ArgumentList	outputline		1344553	1					
ANR	1344638	Argument	outputline		1344553	0					
ANR	1344639	Identifier	outputline		1344553	0					
ANR	1344640	Argument	str		1344553	1					
ANR	1344641	Identifier	str		1344553	0					
ANR	1344642	ExpressionStatement	"strcpy ( comment , str )"	139:8:4763:4783	1344553	1	True				
ANR	1344643	CallExpression	"strcpy ( comment , str )"		1344553	0					
ANR	1344644	Callee	strcpy		1344553	0					
ANR	1344645	Identifier	strcpy		1344553	0					
ANR	1344646	ArgumentList	comment		1344553	1					
ANR	1344647	Argument	comment		1344553	0					
ANR	1344648	Identifier	comment		1344553	0					
ANR	1344649	Argument	str		1344553	1					
ANR	1344650	Identifier	str		1344553	0					
ANR	1344651	ReturnStatement	return strlen ( outputline ) ;	140:8:4793:4818	1344553	2	True				
ANR	1344652	CallExpression	strlen ( outputline )		1344553	0					
ANR	1344653	Callee	strlen		1344553	0					
ANR	1344654	Identifier	strlen		1344553	0					
ANR	1344655	ArgumentList	outputline		1344553	1					
ANR	1344656	Argument	outputline		1344553	0					
ANR	1344657	Identifier	outputline		1344553	0					
ANR	1344658	ForStatement	"for ( from = str , to = outputline ; ( * to = * from ) != 0 ; ++ from , ++ to )"		1344553	9					
ANR	1344659	ForInit	"from = str , to = outputline ;"	150:9:5068:5095	1344553	0	True				
ANR	1344660	Expression	"from = str , to = outputline"		1344553	0					
ANR	1344661	AssignmentExpression	from = str		1344553	0		=			
ANR	1344662	Identifier	from		1344553	0					
ANR	1344663	Identifier	str		1344553	1					
ANR	1344664	AssignmentExpression	to = outputline		1344553	1		=			
ANR	1344665	Identifier	to		1344553	0					
ANR	1344666	Identifier	outputline		1344553	1					
ANR	1344667	Condition	( * to = * from ) != 0	150:38:5097:5114	1344553	1	True				
ANR	1344668	EqualityExpression	( * to = * from ) != 0		1344553	0		!=			
ANR	1344669	AssignmentExpression	* to = * from		1344553	0		=			
ANR	1344670	UnaryOperationExpression	* to		1344553	0					
ANR	1344671	UnaryOperator	*		1344553	0					
ANR	1344672	Identifier	to		1344553	1					
ANR	1344673	UnaryOperationExpression	* from		1344553	1					
ANR	1344674	UnaryOperator	*		1344553	0					
ANR	1344675	Identifier	from		1344553	1					
ANR	1344676	PrimaryExpression	0		1344553	1					
ANR	1344677	Expression	"++ from , ++ to"	150:58:5117:5128	1344553	2	True				
ANR	1344678	UnaryExpression	++ from		1344553	0					
ANR	1344679	IncDec	++		1344553	0					
ANR	1344680	Identifier	from		1344553	1					
ANR	1344681	UnaryExpression	++ to		1344553	1					
ANR	1344682	IncDec	++		1344553	0					
ANR	1344683	Identifier	to		1344553	1					
ANR	1344684	CompoundStatement		30:72:829:829	1344553	3					
ANR	1344685	SwitchStatement	switch ( * from )		1344553	0					
ANR	1344686	Condition	* from	151:16:5149:5153	1344553	0	True				
ANR	1344687	UnaryOperationExpression	* from		1344553	0					
ANR	1344688	UnaryOperator	*		1344553	0					
ANR	1344689	Identifier	from		1344553	1					
ANR	1344690	CompoundStatement		31:23:854:854	1344553	1					
ANR	1344691	Label	case '%' :	152:12:5170:5178	1344553	0	True				
ANR	1344692	IfStatement	if ( ! in_string )		1344553	1					
ANR	1344693	Condition	! in_string	153:20:5200:5209	1344553	0	True				
ANR	1344694	UnaryOperationExpression	! in_string		1344553	0					
ANR	1344695	UnaryOperator	!		1344553	0					
ANR	1344696	Identifier	in_string		1344553	1					
ANR	1344697	CompoundStatement		33:32:910:910	1344553	1					
ANR	1344698	WhileStatement	while ( * from && ( ( * from == ' ' ) || ( * from == '\\t' ) ) )		1344553	0					
ANR	1344699	Condition	* from && ( ( * from == ' ' ) || ( * from == '\\t' ) )	155:27:5310:5377	1344553	0	True				
ANR	1344700	AndExpression	* from && ( ( * from == ' ' ) || ( * from == '\\t' ) )		1344553	0		&&			
ANR	1344701	UnaryOperationExpression	* from		1344553	0					
ANR	1344702	UnaryOperator	*		1344553	0					
ANR	1344703	Identifier	from		1344553	1					
ANR	1344704	OrExpression	( * from == ' ' ) || ( * from == '\\t' )		1344553	1		||			
ANR	1344705	EqualityExpression	* from == ' '		1344553	0		==			
ANR	1344706	UnaryOperationExpression	* from		1344553	0					
ANR	1344707	UnaryOperator	*		1344553	0					
ANR	1344708	Identifier	from		1344553	1					
ANR	1344709	PrimaryExpression	' '		1344553	1					
ANR	1344710	EqualityExpression	* from == '\\t'		1344553	1		==			
ANR	1344711	UnaryOperationExpression	* from		1344553	0					
ANR	1344712	UnaryOperator	*		1344553	0					
ANR	1344713	Identifier	from		1344553	1					
ANR	1344714	PrimaryExpression	'\\t'		1344553	1					
ANR	1344715	CompoundStatement		35:97:1078:1078	1344553	1					
ANR	1344716	ExpressionStatement	from ++	156:24:5406:5412	1344553	0	True				
ANR	1344717	PostIncDecOperationExpression	from ++		1344553	0					
ANR	1344718	Identifier	from		1344553	0					
ANR	1344719	IncDec	++		1344553	1					
ANR	1344720	ExpressionStatement	"strcpy ( comment , from )"	158:20:5456:5477	1344553	1	True				
ANR	1344721	CallExpression	"strcpy ( comment , from )"		1344553	0					
ANR	1344722	Callee	strcpy		1344553	0					
ANR	1344723	Identifier	strcpy		1344553	0					
ANR	1344724	ArgumentList	comment		1344553	1					
ANR	1344725	Argument	comment		1344553	0					
ANR	1344726	Identifier	comment		1344553	0					
ANR	1344727	Argument	from		1344553	1					
ANR	1344728	Identifier	from		1344553	0					
ANR	1344729	BreakStatement	break ;	159:20:5499:5504	1344553	2	True				
ANR	1344730	ContinueStatement	continue ;	161:16:5540:5548	1344553	2	True				
ANR	1344731	Label	case ' ' :	162:12:5562:5570	1344553	3	True				
ANR	1344732	Label	case '\\t' :	163:12:5584:5593	1344553	4	True				
ANR	1344733	IfStatement	"if ( to > outputline && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] ) )"		1344553	5					
ANR	1344734	Condition	"to > outputline && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"	164:20:5615:5674	1344553	0	True				
ANR	1344735	AndExpression	"to > outputline && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1344553	0		&&			
ANR	1344736	RelationalExpression	to > outputline		1344553	0		>			
ANR	1344737	Identifier	to		1344553	0					
ANR	1344738	Identifier	outputline		1344553	1					
ANR	1344739	AndExpression	"! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1344553	1		&&			
ANR	1344740	UnaryOperationExpression	! in_string		1344553	0					
ANR	1344741	UnaryOperator	!		1344553	0					
ANR	1344742	Identifier	in_string		1344553	1					
ANR	1344743	CallExpression	"strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1344553	1					
ANR	1344744	Callee	strchr		1344553	0					
ANR	1344745	Identifier	strchr		1344553	0					
ANR	1344746	ArgumentList	""" \\t>[]{})"""		1344553	1					
ANR	1344747	Argument	""" \\t>[]{})"""		1344553	0					
ANR	1344748	PrimaryExpression	""" \\t>[]{})"""		1344553	0					
ANR	1344749	Argument	to [ - 1 ]		1344553	1					
ANR	1344750	ArrayIndexing	to [ - 1 ]		1344553	0					
ANR	1344751	Identifier	to		1344553	0					
ANR	1344752	UnaryOperationExpression	- 1		1344553	1					
ANR	1344753	UnaryOperator	-		1344553	0					
ANR	1344754	PrimaryExpression	1		1344553	1					
ANR	1344755	CompoundStatement		44:82:1375:1375	1344553	1					
ANR	1344756	ExpressionStatement	-- to	165:20:5699:5703	1344553	0	True				
ANR	1344757	UnaryExpression	-- to		1344553	0					
ANR	1344758	IncDec	--		1344553	0					
ANR	1344759	Identifier	to		1344553	1					
ANR	1344760	ContinueStatement	continue ;	167:16:5739:5747	1344553	6	True				
ANR	1344761	Label	case '(' :	168:12:5761:5769	1344553	7	True				
ANR	1344762	Label	case '<' :	169:12:5783:5791	1344553	8	True				
ANR	1344763	Label	case '/' :	170:12:5805:5813	1344553	9	True				
ANR	1344764	Label	case '[' :	171:12:5827:5835	1344553	10	True				
ANR	1344765	Label	case ']' :	172:12:5849:5857	1344553	11	True				
ANR	1344766	Label	case '{' :	173:12:5871:5879	1344553	12	True				
ANR	1344767	Label	case '}' :	174:12:5893:5901	1344553	13	True				
ANR	1344768	IfStatement	"if ( to > outputline && ! in_string && strchr ( "" \\t"" , to [ - 1 ] ) )"		1344553	14					
ANR	1344769	Condition	"to > outputline && ! in_string && strchr ( "" \\t"" , to [ - 1 ] )"	175:20:5923:5976	1344553	0	True				
ANR	1344770	AndExpression	"to > outputline && ! in_string && strchr ( "" \\t"" , to [ - 1 ] )"		1344553	0		&&			
ANR	1344771	RelationalExpression	to > outputline		1344553	0		>			
ANR	1344772	Identifier	to		1344553	0					
ANR	1344773	Identifier	outputline		1344553	1					
ANR	1344774	AndExpression	"! in_string && strchr ( "" \\t"" , to [ - 1 ] )"		1344553	1		&&			
ANR	1344775	UnaryOperationExpression	! in_string		1344553	0					
ANR	1344776	UnaryOperator	!		1344553	0					
ANR	1344777	Identifier	in_string		1344553	1					
ANR	1344778	CallExpression	"strchr ( "" \\t"" , to [ - 1 ] )"		1344553	1					
ANR	1344779	Callee	strchr		1344553	0					
ANR	1344780	Identifier	strchr		1344553	0					
ANR	1344781	ArgumentList	""" \\t"""		1344553	1					
ANR	1344782	Argument	""" \\t"""		1344553	0					
ANR	1344783	PrimaryExpression	""" \\t"""		1344553	0					
ANR	1344784	Argument	to [ - 1 ]		1344553	1					
ANR	1344785	ArrayIndexing	to [ - 1 ]		1344553	0					
ANR	1344786	Identifier	to		1344553	0					
ANR	1344787	UnaryOperationExpression	- 1		1344553	1					
ANR	1344788	UnaryOperator	-		1344553	0					
ANR	1344789	PrimaryExpression	1		1344553	1					
ANR	1344790	CompoundStatement		55:76:1677:1677	1344553	1					
ANR	1344791	ExpressionStatement	* -- to = * from	176:20:6001:6014	1344553	0	True				
ANR	1344792	AssignmentExpression	* -- to = * from		1344553	0		=			
ANR	1344793	UnaryOperationExpression	* -- to		1344553	0					
ANR	1344794	UnaryOperator	*		1344553	0					
ANR	1344795	UnaryExpression	-- to		1344553	1					
ANR	1344796	IncDec	--		1344553	0					
ANR	1344797	Identifier	to		1344553	1					
ANR	1344798	UnaryOperationExpression	* from		1344553	1					
ANR	1344799	UnaryOperator	*		1344553	0					
ANR	1344800	Identifier	from		1344553	1					
ANR	1344801	IfStatement	if ( * from == '(' )		1344553	15					
ANR	1344802	Condition	* from == '('	178:20:6054:6065	1344553	0	True				
ANR	1344803	EqualityExpression	* from == '('		1344553	0		==			
ANR	1344804	UnaryOperationExpression	* from		1344553	0					
ANR	1344805	UnaryOperator	*		1344553	0					
ANR	1344806	Identifier	from		1344553	1					
ANR	1344807	PrimaryExpression	'('		1344553	1					
ANR	1344808	CompoundStatement		58:34:1766:1766	1344553	1					
ANR	1344809	ExpressionStatement	++ in_string	179:20:6090:6101	1344553	0	True				
ANR	1344810	UnaryExpression	++ in_string		1344553	0					
ANR	1344811	IncDec	++		1344553	0					
ANR	1344812	Identifier	in_string		1344553	1					
ANR	1344813	ContinueStatement	continue ;	181:16:6137:6145	1344553	16	True				
ANR	1344814	Label	case ')' :	182:12:6159:6167	1344553	17	True				
ANR	1344815	ExpressionStatement	-- in_string	183:16:6185:6196	1344553	18	True				
ANR	1344816	UnaryExpression	-- in_string		1344553	0					
ANR	1344817	IncDec	--		1344553	0					
ANR	1344818	Identifier	in_string		1344553	1					
ANR	1344819	ContinueStatement	continue ;	184:16:6214:6222	1344553	19	True				
ANR	1344820	Label	"case '\\""' :"	185:12:6236:6245	1344553	20	True				
ANR	1344821	ExpressionStatement	* to = '\\\\'	187:16:6399:6409	1344553	21	True				
ANR	1344822	AssignmentExpression	* to = '\\\\'		1344553	0		=			
ANR	1344823	UnaryOperationExpression	* to		1344553	0					
ANR	1344824	UnaryOperator	*		1344553	0					
ANR	1344825	Identifier	to		1344553	1					
ANR	1344826	PrimaryExpression	'\\\\'		1344553	1					
ANR	1344827	ExpressionStatement	* ++ to = * from	188:16:6427:6440	1344553	22	True				
ANR	1344828	AssignmentExpression	* ++ to = * from		1344553	0		=			
ANR	1344829	UnaryOperationExpression	* ++ to		1344553	0					
ANR	1344830	UnaryOperator	*		1344553	0					
ANR	1344831	UnaryExpression	++ to		1344553	1					
ANR	1344832	IncDec	++		1344553	0					
ANR	1344833	Identifier	to		1344553	1					
ANR	1344834	UnaryOperationExpression	* from		1344553	1					
ANR	1344835	UnaryOperator	*		1344553	0					
ANR	1344836	Identifier	from		1344553	1					
ANR	1344837	ContinueStatement	continue ;	189:16:6458:6466	1344553	23	True				
ANR	1344838	Label	case '\\\\' :	190:12:6480:6489	1344553	24	True				
ANR	1344839	ExpressionStatement	* ++ to = '\\\\'	192:16:6640:6652	1344553	25	True				
ANR	1344840	AssignmentExpression	* ++ to = '\\\\'		1344553	0		=			
ANR	1344841	UnaryOperationExpression	* ++ to		1344553	0					
ANR	1344842	UnaryOperator	*		1344553	0					
ANR	1344843	UnaryExpression	++ to		1344553	1					
ANR	1344844	IncDec	++		1344553	0					
ANR	1344845	Identifier	to		1344553	1					
ANR	1344846	PrimaryExpression	'\\\\'		1344553	1					
ANR	1344847	IfStatement	if ( from [ 1 ] == '\\\\' )		1344553	26					
ANR	1344848	Condition	from [ 1 ] == '\\\\'	194:20:6675:6689	1344553	0	True				
ANR	1344849	EqualityExpression	from [ 1 ] == '\\\\'		1344553	0		==			
ANR	1344850	ArrayIndexing	from [ 1 ]		1344553	0					
ANR	1344851	Identifier	from		1344553	0					
ANR	1344852	PrimaryExpression	1		1344553	1					
ANR	1344853	PrimaryExpression	'\\\\'		1344553	1					
ANR	1344854	CompoundStatement		74:37:2390:2390	1344553	1					
ANR	1344855	ExpressionStatement	* ++ to = '\\\\'	195:20:6714:6726	1344553	0	True				
ANR	1344856	AssignmentExpression	* ++ to = '\\\\'		1344553	0		=			
ANR	1344857	UnaryOperationExpression	* ++ to		1344553	0					
ANR	1344858	UnaryOperator	*		1344553	0					
ANR	1344859	UnaryExpression	++ to		1344553	1					
ANR	1344860	IncDec	++		1344553	0					
ANR	1344861	Identifier	to		1344553	1					
ANR	1344862	PrimaryExpression	'\\\\'		1344553	1					
ANR	1344863	ExpressionStatement	* ++ to = * ++ from	196:20:6820:6835	1344553	1	True				
ANR	1344864	AssignmentExpression	* ++ to = * ++ from		1344553	0		=			
ANR	1344865	UnaryOperationExpression	* ++ to		1344553	0					
ANR	1344866	UnaryOperator	*		1344553	0					
ANR	1344867	UnaryExpression	++ to		1344553	1					
ANR	1344868	IncDec	++		1344553	0					
ANR	1344869	Identifier	to		1344553	1					
ANR	1344870	UnaryOperationExpression	* ++ from		1344553	1					
ANR	1344871	UnaryOperator	*		1344553	0					
ANR	1344872	UnaryExpression	++ from		1344553	1					
ANR	1344873	IncDec	++		1344553	0					
ANR	1344874	Identifier	from		1344553	1					
ANR	1344875	ElseStatement	else		1344553	0					
ANR	1344876	IfStatement	if ( from [ 1 ] == '(' || from [ 1 ] == ')' )		1344553	0					
ANR	1344877	Condition	from [ 1 ] == '(' || from [ 1 ] == ')'	198:25:6880:6911	1344553	0	True				
ANR	1344878	OrExpression	from [ 1 ] == '(' || from [ 1 ] == ')'		1344553	0		||			
ANR	1344879	EqualityExpression	from [ 1 ] == '('		1344553	0		==			
ANR	1344880	ArrayIndexing	from [ 1 ]		1344553	0					
ANR	1344881	Identifier	from		1344553	0					
ANR	1344882	PrimaryExpression	1		1344553	1					
ANR	1344883	PrimaryExpression	'('		1344553	1					
ANR	1344884	EqualityExpression	from [ 1 ] == ')'		1344553	1		==			
ANR	1344885	ArrayIndexing	from [ 1 ]		1344553	0					
ANR	1344886	Identifier	from		1344553	0					
ANR	1344887	PrimaryExpression	1		1344553	1					
ANR	1344888	PrimaryExpression	')'		1344553	1					
ANR	1344889	CompoundStatement		78:59:2612:2612	1344553	1					
ANR	1344890	ExpressionStatement	* ++ to = * ++ from	199:20:6936:6951	1344553	0	True				
ANR	1344891	AssignmentExpression	* ++ to = * ++ from		1344553	0		=			
ANR	1344892	UnaryOperationExpression	* ++ to		1344553	0					
ANR	1344893	UnaryOperator	*		1344553	0					
ANR	1344894	UnaryExpression	++ to		1344553	1					
ANR	1344895	IncDec	++		1344553	0					
ANR	1344896	Identifier	to		1344553	1					
ANR	1344897	UnaryOperationExpression	* ++ from		1344553	1					
ANR	1344898	UnaryOperator	*		1344553	0					
ANR	1344899	UnaryExpression	++ from		1344553	1					
ANR	1344900	IncDec	++		1344553	0					
ANR	1344901	Identifier	from		1344553	1					
ANR	1344902	ContinueStatement	continue ;	201:16:7019:7027	1344553	27	True				
ANR	1344903	Label	default :	202:12:7041:7048	1344553	28	True				
ANR	1344904	Identifier	default		1344553	0					
ANR	1344905	ContinueStatement	continue ;	203:16:7066:7074	1344553	29	True				
ANR	1344906	BreakStatement	break ;	205:8:7094:7099	1344553	1	True				
ANR	1344907	WhileStatement	while ( to > outputline && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' ) )		1344553	10					
ANR	1344908	Condition	to > outputline && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' )	209:11:7172:7223	1344553	0	True				
ANR	1344909	AndExpression	to > outputline && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' )		1344553	0		&&			
ANR	1344910	RelationalExpression	to > outputline		1344553	0		>			
ANR	1344911	Identifier	to		1344553	0					
ANR	1344912	Identifier	outputline		1344553	1					
ANR	1344913	OrExpression	to [ - 1 ] == ' ' || to [ - 1 ] == '\\t'		1344553	1		||			
ANR	1344914	EqualityExpression	to [ - 1 ] == ' '		1344553	0		==			
ANR	1344915	ArrayIndexing	to [ - 1 ]		1344553	0					
ANR	1344916	Identifier	to		1344553	0					
ANR	1344917	UnaryOperationExpression	- 1		1344553	1					
ANR	1344918	UnaryOperator	-		1344553	0					
ANR	1344919	PrimaryExpression	1		1344553	1					
ANR	1344920	PrimaryExpression	' '		1344553	1					
ANR	1344921	EqualityExpression	to [ - 1 ] == '\\t'		1344553	1		==			
ANR	1344922	ArrayIndexing	to [ - 1 ]		1344553	0					
ANR	1344923	Identifier	to		1344553	0					
ANR	1344924	UnaryOperationExpression	- 1		1344553	1					
ANR	1344925	UnaryOperator	-		1344553	0					
ANR	1344926	PrimaryExpression	1		1344553	1					
ANR	1344927	PrimaryExpression	'\\t'		1344553	1					
ANR	1344928	CompoundStatement		89:65:2924:2924	1344553	1					
ANR	1344929	ExpressionStatement	-- to	210:8:7236:7240	1344553	0	True				
ANR	1344930	UnaryExpression	-- to		1344553	0					
ANR	1344931	IncDec	--		1344553	0					
ANR	1344932	Identifier	to		1344553	1					
ANR	1344933	ExpressionStatement	* to = 0	212:4:7252:7259	1344553	11	True				
ANR	1344934	AssignmentExpression	* to = 0		1344553	0		=			
ANR	1344935	UnaryOperationExpression	* to		1344553	0					
ANR	1344936	UnaryOperator	*		1344553	0					
ANR	1344937	Identifier	to		1344553	1					
ANR	1344938	PrimaryExpression	0		1344553	1					
ANR	1344939	IfStatement	if ( strlen ( comment ) > 0 )		1344553	12					
ANR	1344940	Condition	strlen ( comment ) > 0	215:8:7324:7342	1344553	0	True				
ANR	1344941	RelationalExpression	strlen ( comment ) > 0		1344553	0		>			
ANR	1344942	CallExpression	strlen ( comment )		1344553	0					
ANR	1344943	Callee	strlen		1344553	0					
ANR	1344944	Identifier	strlen		1344553	0					
ANR	1344945	ArgumentList	comment		1344553	1					
ANR	1344946	Argument	comment		1344553	0					
ANR	1344947	Identifier	comment		1344553	0					
ANR	1344948	PrimaryExpression	0		1344553	1					
ANR	1344949	CompoundStatement		97:8:3096:3133	1344553	1					
ANR	1344950	IdentifierDeclStatement	int comment_len = strlen ( comment ) ;	216:8:7355:7388	1344553	0	True				
ANR	1344951	IdentifierDecl	comment_len = strlen ( comment )		1344553	0					
ANR	1344952	IdentifierDeclType	int		1344553	0					
ANR	1344953	Identifier	comment_len		1344553	1					
ANR	1344954	AssignmentExpression	comment_len = strlen ( comment )		1344553	2		=			
ANR	1344955	Identifier	comment_len		1344553	0					
ANR	1344956	CallExpression	strlen ( comment )		1344553	1					
ANR	1344957	Callee	strlen		1344553	0					
ANR	1344958	Identifier	strlen		1344553	0					
ANR	1344959	ArgumentList	comment		1344553	1					
ANR	1344960	Argument	comment		1344553	0					
ANR	1344961	Identifier	comment		1344553	0					
ANR	1344962	IdentifierDeclStatement	char * ptr = comment + comment_len - 1 ;	217:8:7398:7435	1344553	1	True				
ANR	1344963	IdentifierDecl	* ptr = comment + comment_len - 1		1344553	0					
ANR	1344964	IdentifierDeclType	char *		1344553	0					
ANR	1344965	Identifier	ptr		1344553	1					
ANR	1344966	AssignmentExpression	* ptr = comment + comment_len - 1		1344553	2		=			
ANR	1344967	Identifier	ptr		1344553	0					
ANR	1344968	AdditiveExpression	comment + comment_len - 1		1344553	1		+			
ANR	1344969	Identifier	comment		1344553	0					
ANR	1344970	AdditiveExpression	comment_len - 1		1344553	1		-			
ANR	1344971	Identifier	comment_len		1344553	0					
ANR	1344972	PrimaryExpression	1		1344553	1					
ANR	1344973	WhileStatement	while ( ( * ptr == ' ' ) || ( * ptr == '\\t' ) )		1344553	2					
ANR	1344974	Condition	( * ptr == ' ' ) || ( * ptr == '\\t' )	219:15:7453:7483	1344553	0	True				
ANR	1344975	OrExpression	( * ptr == ' ' ) || ( * ptr == '\\t' )		1344553	0		||			
ANR	1344976	EqualityExpression	* ptr == ' '		1344553	0		==			
ANR	1344977	UnaryOperationExpression	* ptr		1344553	0					
ANR	1344978	UnaryOperator	*		1344553	0					
ANR	1344979	Identifier	ptr		1344553	1					
ANR	1344980	PrimaryExpression	' '		1344553	1					
ANR	1344981	EqualityExpression	* ptr == '\\t'		1344553	1		==			
ANR	1344982	UnaryOperationExpression	* ptr		1344553	0					
ANR	1344983	UnaryOperator	*		1344553	0					
ANR	1344984	Identifier	ptr		1344553	1					
ANR	1344985	PrimaryExpression	'\\t'		1344553	1					
ANR	1344986	CompoundStatement		99:48:3184:3184	1344553	1					
ANR	1344987	ExpressionStatement	* ( ptr -- ) = '\\0'	220:12:7500:7515	1344553	0	True				
ANR	1344988	AssignmentExpression	* ( ptr -- ) = '\\0'		1344553	0		=			
ANR	1344989	UnaryOperationExpression	* ( ptr -- )		1344553	0					
ANR	1344990	UnaryOperator	*		1344553	0					
ANR	1344991	PostIncDecOperationExpression	ptr --		1344553	1					
ANR	1344992	Identifier	ptr		1344553	0					
ANR	1344993	IncDec	--		1344553	1					
ANR	1344994	PrimaryExpression	'\\0'		1344553	1					
ANR	1344995	IfStatement	if ( ( strlen ( comment ) == 1 ) && ( strlen ( outputline ) != 0 ) )		1344553	3					
ANR	1344996	Condition	( strlen ( comment ) == 1 ) && ( strlen ( outputline ) != 0 )	224:12:7642:7693	1344553	0	True				
ANR	1344997	AndExpression	( strlen ( comment ) == 1 ) && ( strlen ( outputline ) != 0 )		1344553	0		&&			
ANR	1344998	EqualityExpression	strlen ( comment ) == 1		1344553	0		==			
ANR	1344999	CallExpression	strlen ( comment )		1344553	0					
ANR	1345000	Callee	strlen		1344553	0					
ANR	1345001	Identifier	strlen		1344553	0					
ANR	1345002	ArgumentList	comment		1344553	1					
ANR	1345003	Argument	comment		1344553	0					
ANR	1345004	Identifier	comment		1344553	0					
ANR	1345005	PrimaryExpression	1		1344553	1					
ANR	1345006	EqualityExpression	strlen ( outputline ) != 0		1344553	1		!=			
ANR	1345007	CallExpression	strlen ( outputline )		1344553	0					
ANR	1345008	Callee	strlen		1344553	0					
ANR	1345009	Identifier	strlen		1344553	0					
ANR	1345010	ArgumentList	outputline		1344553	1					
ANR	1345011	Argument	outputline		1344553	0					
ANR	1345012	Identifier	outputline		1344553	0					
ANR	1345013	PrimaryExpression	0		1344553	1					
ANR	1345014	CompoundStatement		104:66:3394:3394	1344553	1					
ANR	1345015	ExpressionStatement	comment [ 0 ] = '\\0'	225:12:7710:7728	1344553	0	True				
ANR	1345016	AssignmentExpression	comment [ 0 ] = '\\0'		1344553	0		=			
ANR	1345017	ArrayIndexing	comment [ 0 ]		1344553	0					
ANR	1345018	Identifier	comment		1344553	0					
ANR	1345019	PrimaryExpression	0		1344553	1					
ANR	1345020	PrimaryExpression	'\\0'		1344553	1					
ANR	1345021	ReturnStatement	return strlen ( outputline ) ;	230:4:7803:7828	1344553	13	True				
ANR	1345022	CallExpression	strlen ( outputline )		1344553	0					
ANR	1345023	Callee	strlen		1344553	0					
ANR	1345024	Identifier	strlen		1344553	0					
ANR	1345025	ArgumentList	outputline		1344553	1					
ANR	1345026	Argument	outputline		1344553	0					
ANR	1345027	Identifier	outputline		1344553	0					
ANR	1345028	ReturnType	static int		1344553	1					
ANR	1345029	Identifier	pack_postscript_line		1344553	2					
ANR	1345030	ParameterList	"const char * inputline , char * outputline , char * comment"		1344553	3					
ANR	1345031	Parameter	const char * inputline	120:21:4245:4265	1344553	0	True				
ANR	1345032	ParameterType	const char *		1344553	0					
ANR	1345033	Identifier	inputline		1344553	1					
ANR	1345034	Parameter	char * outputline	120:44:4268:4283	1344553	1	True				
ANR	1345035	ParameterType	char *		1344553	0					
ANR	1345036	Identifier	outputline		1344553	1					
ANR	1345037	Parameter	char * comment	120:62:4286:4298	1344553	2	True				
ANR	1345038	ParameterType	char *		1344553	0					
ANR	1345039	Identifier	comment		1344553	1					
ANR	1345040	CFGEntryNode	ENTRY		1344553		True				
ANR	1345041	CFGExitNode	EXIT		1344553		True				
ANR	1345042	Symbol	* to		1344553						
ANR	1345043	Symbol	outputline		1344553						
ANR	1345044	Symbol	strchr		1344553						
ANR	1345045	Symbol	* -- to		1344553						
ANR	1345046	Symbol	* ++ from		1344553						
ANR	1345047	Symbol	* comment		1344553						
ANR	1345048	Symbol	ptr		1344553						
ANR	1345049	Symbol	str		1344553						
ANR	1345050	Symbol	strncmp		1344553						
ANR	1345051	Symbol	strlen		1344553						
ANR	1345052	Symbol	in_string		1344553						
ANR	1345053	Symbol	* outputline		1344553						
ANR	1345054	Symbol	comment_len		1344553						
ANR	1345055	Symbol	* ( ptr -- )		1344553						
ANR	1345056	Symbol	inputline		1344553						
ANR	1345057	Symbol	* ++ to		1344553						
ANR	1345058	Symbol	* ptr		1344553						
ANR	1345059	Symbol	comment		1344553						
ANR	1345060	Symbol	from		1344553						
ANR	1345061	Symbol	to		1344553						
ANR	1345062	Symbol	* str		1344553						
ANR	1345063	Symbol	* from		1344553						
ANR	1345064	Function	usage	233:0:7833:8385							
ANR	1345065	FunctionDef	"usage (const char * outfilename , const char * arrayname)"		1345064	0					
ANR	1345066	CompoundStatement		235:0:7899:8385	1345064	0					
ANR	1345067	ExpressionStatement	"printf ( ""\\n"" )"	236:4:7905:7917	1345064	0	True				
ANR	1345068	CallExpression	"printf ( ""\\n"" )"		1345064	0					
ANR	1345069	Callee	printf		1345064	0					
ANR	1345070	Identifier	printf		1345064	0					
ANR	1345071	ArgumentList	"""\\n"""		1345064	1					
ANR	1345072	Argument	"""\\n"""		1345064	0					
ANR	1345073	PrimaryExpression	"""\\n"""		1345064	0					
ANR	1345074	ExpressionStatement	"printf ( ""    Usage: pack_ps [-o outfile] [-n name] [-c] ps_file\\n"" )"	237:4:7923:7989	1345064	1	True				
ANR	1345075	CallExpression	"printf ( ""    Usage: pack_ps [-o outfile] [-n name] [-c] ps_file\\n"" )"		1345064	0					
ANR	1345076	Callee	printf		1345064	0					
ANR	1345077	Identifier	printf		1345064	0					
ANR	1345078	ArgumentList	"""    Usage: pack_ps [-o outfile] [-n name] [-c] ps_file\\n"""		1345064	1					
ANR	1345079	Argument	"""    Usage: pack_ps [-o outfile] [-n name] [-c] ps_file\\n"""		1345064	0					
ANR	1345080	PrimaryExpression	"""    Usage: pack_ps [-o outfile] [-n name] [-c] ps_file\\n"""		1345064	0					
ANR	1345081	ExpressionStatement	"printf ( ""\\n"" )"	238:4:7995:8007	1345064	2	True				
ANR	1345082	CallExpression	"printf ( ""\\n"" )"		1345064	0					
ANR	1345083	Callee	printf		1345064	0					
ANR	1345084	Identifier	printf		1345064	0					
ANR	1345085	ArgumentList	"""\\n"""		1345064	1					
ANR	1345086	Argument	"""\\n"""		1345064	0					
ANR	1345087	PrimaryExpression	"""\\n"""		1345064	0					
ANR	1345088	ExpressionStatement	"printf ( ""        options (must precede ps_file to be processed):\\n"" )"	239:4:8013:8080	1345064	3	True				
ANR	1345089	CallExpression	"printf ( ""        options (must precede ps_file to be processed):\\n"" )"		1345064	0					
ANR	1345090	Callee	printf		1345064	0					
ANR	1345091	Identifier	printf		1345064	0					
ANR	1345092	ArgumentList	"""        options (must precede ps_file to be processed):\\n"""		1345064	1					
ANR	1345093	Argument	"""        options (must precede ps_file to be processed):\\n"""		1345064	0					
ANR	1345094	PrimaryExpression	"""        options (must precede ps_file to be processed):\\n"""		1345064	0					
ANR	1345095	ExpressionStatement	"printf ( ""            -o outfile       default: %s - output file name\\n"" , outfilename )"	240:4:8086:8170	1345064	4	True				
ANR	1345096	CallExpression	"printf ( ""            -o outfile       default: %s - output file name\\n"" , outfilename )"		1345064	0					
ANR	1345097	Callee	printf		1345064	0					
ANR	1345098	Identifier	printf		1345064	0					
ANR	1345099	ArgumentList	"""            -o outfile       default: %s - output file name\\n"""		1345064	1					
ANR	1345100	Argument	"""            -o outfile       default: %s - output file name\\n"""		1345064	0					
ANR	1345101	PrimaryExpression	"""            -o outfile       default: %s - output file name\\n"""		1345064	0					
ANR	1345102	Argument	outfilename		1345064	1					
ANR	1345103	Identifier	outfilename		1345064	0					
ANR	1345104	ExpressionStatement	"printf ( ""            -n array_name    default: %s - name of the array inside the generated C file.\\n"" , arrayname )"	241:4:8176:8288	1345064	5	True				
ANR	1345105	CallExpression	"printf ( ""            -n array_name    default: %s - name of the array inside the generated C file.\\n"" , arrayname )"		1345064	0					
ANR	1345106	Callee	printf		1345064	0					
ANR	1345107	Identifier	printf		1345064	0					
ANR	1345108	ArgumentList	"""            -n array_name    default: %s - name of the array inside the generated C file.\\n"""		1345064	1					
ANR	1345109	Argument	"""            -n array_name    default: %s - name of the array inside the generated C file.\\n"""		1345064	0					
ANR	1345110	PrimaryExpression	"""            -n array_name    default: %s - name of the array inside the generated C file.\\n"""		1345064	0					
ANR	1345111	Argument	arrayname		1345064	1					
ANR	1345112	Identifier	arrayname		1345064	0					
ANR	1345113	ExpressionStatement	"printf ( ""            -c               output PostScript header comments as C comments.\\n"" )"	242:4:8294:8383	1345064	6	True				
ANR	1345114	CallExpression	"printf ( ""            -c               output PostScript header comments as C comments.\\n"" )"		1345064	0					
ANR	1345115	Callee	printf		1345064	0					
ANR	1345116	Identifier	printf		1345064	0					
ANR	1345117	ArgumentList	"""            -c               output PostScript header comments as C comments.\\n"""		1345064	1					
ANR	1345118	Argument	"""            -c               output PostScript header comments as C comments.\\n"""		1345064	0					
ANR	1345119	PrimaryExpression	"""            -c               output PostScript header comments as C comments.\\n"""		1345064	0					
ANR	1345120	ReturnType	static void		1345064	1					
ANR	1345121	Identifier	usage		1345064	2					
ANR	1345122	ParameterList	"const char * outfilename , const char * arrayname"		1345064	3					
ANR	1345123	Parameter	const char * outfilename	234:6:7851:7873	1345064	0	True				
ANR	1345124	ParameterType	const char *		1345064	0					
ANR	1345125	Identifier	outfilename		1345064	1					
ANR	1345126	Parameter	const char * arrayname	234:31:7876:7896	1345064	1	True				
ANR	1345127	ParameterType	const char *		1345064	0					
ANR	1345128	Identifier	arrayname		1345064	1					
ANR	1345129	CFGEntryNode	ENTRY		1345064		True				
ANR	1345130	CFGExitNode	EXIT		1345064		True				
ANR	1345131	Symbol	outfilename		1345064						
ANR	1345132	Symbol	arrayname		1345064						
ANR	1345133	Function	main	245:0:8388:14978							
ANR	1345134	FunctionDef	"main (int argc , char * argv [ ])"		1345133	0					
ANR	1345135	CompoundStatement		247:0:8421:14978	1345133	0					
ANR	1345136	IdentifierDeclStatement	const char * outfilename = OUTFILE_NAME_DEFAULT ;	248:4:8427:8473	1345133	0	True				
ANR	1345137	IdentifierDecl	* outfilename = OUTFILE_NAME_DEFAULT		1345133	0					
ANR	1345138	IdentifierDeclType	const char *		1345133	0					
ANR	1345139	Identifier	outfilename		1345133	1					
ANR	1345140	AssignmentExpression	* outfilename = OUTFILE_NAME_DEFAULT		1345133	2		=			
ANR	1345141	Identifier	OUTFILE_NAME_DEFAULT		1345133	0					
ANR	1345142	Identifier	OUTFILE_NAME_DEFAULT		1345133	1					
ANR	1345143	IdentifierDeclStatement	const char * arrayname = ARRAY_NAME_DEFAULT ;	249:4:8479:8521	1345133	1	True				
ANR	1345144	IdentifierDecl	* arrayname = ARRAY_NAME_DEFAULT		1345133	0					
ANR	1345145	IdentifierDeclType	const char *		1345133	0					
ANR	1345146	Identifier	arrayname		1345133	1					
ANR	1345147	AssignmentExpression	* arrayname = ARRAY_NAME_DEFAULT		1345133	2		=			
ANR	1345148	Identifier	ARRAY_NAME_DEFAULT		1345133	0					
ANR	1345149	Identifier	ARRAY_NAME_DEFAULT		1345133	1					
ANR	1345150	IdentifierDeclStatement	const char * infilename = NULL ;	250:4:8527:8556	1345133	2	True				
ANR	1345151	IdentifierDecl	* infilename = NULL		1345133	0					
ANR	1345152	IdentifierDeclType	const char *		1345133	0					
ANR	1345153	Identifier	infilename		1345133	1					
ANR	1345154	AssignmentExpression	* infilename = NULL		1345133	2		=			
ANR	1345155	Identifier	NULL		1345133	0					
ANR	1345156	Identifier	NULL		1345133	1					
ANR	1345157	IdentifierDeclStatement	bool output_comments = false ;	251:4:8562:8590	1345133	3	True				
ANR	1345158	IdentifierDecl	output_comments = false		1345133	0					
ANR	1345159	IdentifierDeclType	bool		1345133	0					
ANR	1345160	Identifier	output_comments		1345133	1					
ANR	1345161	AssignmentExpression	output_comments = false		1345133	2		=			
ANR	1345162	Identifier	false		1345133	0					
ANR	1345163	Identifier	false		1345133	1					
ANR	1345164	IdentifierDeclStatement	FILE * infile ;	252:4:8596:8608	1345133	4	True				
ANR	1345165	IdentifierDecl	* infile		1345133	0					
ANR	1345166	IdentifierDeclType	FILE *		1345133	0					
ANR	1345167	Identifier	infile		1345133	1					
ANR	1345168	IdentifierDeclStatement	FILE * outfile ;	253:4:8614:8627	1345133	5	True				
ANR	1345169	IdentifierDecl	* outfile		1345133	0					
ANR	1345170	IdentifierDeclType	FILE *		1345133	0					
ANR	1345171	Identifier	outfile		1345133	1					
ANR	1345172	IdentifierDeclStatement	int atarg = 1 ;	255:4:8634:8647	1345133	6	True				
ANR	1345173	IdentifierDecl	atarg = 1		1345133	0					
ANR	1345174	IdentifierDeclType	int		1345133	0					
ANR	1345175	Identifier	atarg		1345133	1					
ANR	1345176	AssignmentExpression	atarg = 1		1345133	2		=			
ANR	1345177	Identifier	atarg		1345133	0					
ANR	1345178	PrimaryExpression	1		1345133	1					
ANR	1345179	IdentifierDeclStatement	int total_input_length = 0 ;	256:4:8653:8679	1345133	7	True				
ANR	1345180	IdentifierDecl	total_input_length = 0		1345133	0					
ANR	1345181	IdentifierDeclType	int		1345133	0					
ANR	1345182	Identifier	total_input_length		1345133	1					
ANR	1345183	AssignmentExpression	total_input_length = 0		1345133	2		=			
ANR	1345184	Identifier	total_input_length		1345133	0					
ANR	1345185	PrimaryExpression	0		1345133	1					
ANR	1345186	IdentifierDeclStatement	int total_output_length = 0 ;	257:4:8685:8712	1345133	8	True				
ANR	1345187	IdentifierDecl	total_output_length = 0		1345133	0					
ANR	1345188	IdentifierDeclType	int		1345133	0					
ANR	1345189	Identifier	total_output_length		1345133	1					
ANR	1345190	AssignmentExpression	total_output_length = 0		1345133	2		=			
ANR	1345191	Identifier	total_output_length		1345133	0					
ANR	1345192	PrimaryExpression	0		1345133	1					
ANR	1345193	IdentifierDeclStatement	int total_code_lines = 0 ;	258:4:8718:8742	1345133	9	True				
ANR	1345194	IdentifierDecl	total_code_lines = 0		1345133	0					
ANR	1345195	IdentifierDeclType	int		1345133	0					
ANR	1345196	Identifier	total_code_lines		1345133	1					
ANR	1345197	AssignmentExpression	total_code_lines = 0		1345133	2		=			
ANR	1345198	Identifier	total_code_lines		1345133	0					
ANR	1345199	PrimaryExpression	0		1345133	1					
ANR	1345200	IdentifierDeclStatement	int total_comment_header_lines = 0 ;	259:4:8748:8782	1345133	10	True				
ANR	1345201	IdentifierDecl	total_comment_header_lines = 0		1345133	0					
ANR	1345202	IdentifierDeclType	int		1345133	0					
ANR	1345203	Identifier	total_comment_header_lines		1345133	1					
ANR	1345204	AssignmentExpression	total_comment_header_lines = 0		1345133	2		=			
ANR	1345205	Identifier	total_comment_header_lines		1345133	0					
ANR	1345206	PrimaryExpression	0		1345133	1					
ANR	1345207	IdentifierDeclStatement	int pdfr_debug_start_count = 0 ;	261:4:8815:8845	1345133	11	True				
ANR	1345208	IdentifierDecl	pdfr_debug_start_count = 0		1345133	0					
ANR	1345209	IdentifierDeclType	int		1345133	0					
ANR	1345210	Identifier	pdfr_debug_start_count		1345133	1					
ANR	1345211	AssignmentExpression	pdfr_debug_start_count = 0		1345133	2		=			
ANR	1345212	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345213	PrimaryExpression	0		1345133	1					
ANR	1345214	IdentifierDeclStatement	int pdfr_debug_end_count = 0 ;	262:4:8851:8879	1345133	12	True				
ANR	1345215	IdentifierDecl	pdfr_debug_end_count = 0		1345133	0					
ANR	1345216	IdentifierDeclType	int		1345133	0					
ANR	1345217	Identifier	pdfr_debug_end_count		1345133	1					
ANR	1345218	AssignmentExpression	pdfr_debug_end_count = 0		1345133	2		=			
ANR	1345219	Identifier	pdfr_debug_end_count		1345133	0					
ANR	1345220	PrimaryExpression	0		1345133	1					
ANR	1345221	IdentifierDeclStatement	bool skip_this_line = false ;	263:4:8885:8912	1345133	13	True				
ANR	1345222	IdentifierDecl	skip_this_line = false		1345133	0					
ANR	1345223	IdentifierDeclType	bool		1345133	0					
ANR	1345224	Identifier	skip_this_line		1345133	1					
ANR	1345225	AssignmentExpression	skip_this_line = false		1345133	2		=			
ANR	1345226	Identifier	false		1345133	0					
ANR	1345227	Identifier	false		1345133	1					
ANR	1345228	IdentifierDeclStatement	time_t buildtime = 0 ;	265:4:8925:8945	1345133	14	True				
ANR	1345229	IdentifierDecl	buildtime = 0		1345133	0					
ANR	1345230	IdentifierDeclType	time_t		1345133	0					
ANR	1345231	Identifier	buildtime		1345133	1					
ANR	1345232	AssignmentExpression	buildtime = 0		1345133	2		=			
ANR	1345233	Identifier	buildtime		1345133	0					
ANR	1345234	PrimaryExpression	0		1345133	1					
ANR	1345235	IdentifierDeclStatement	char * env_source_date_epoch ;	266:4:8951:8978	1345133	15	True				
ANR	1345236	IdentifierDecl	* env_source_date_epoch		1345133	0					
ANR	1345237	IdentifierDeclType	char *		1345133	0					
ANR	1345238	Identifier	env_source_date_epoch		1345133	1					
ANR	1345239	Statement	define	268:1:8982:8987	1345133	16	True				
ANR	1345240	Statement	INPUT_LINE_LENGTH_MAX	268:8:8989:9009	1345133	17	True				
ANR	1345241	Statement	4096	268:30:9011:9014	1345133	18	True				
ANR	1345242	IdentifierDeclStatement	char inputline [ INPUT_LINE_LENGTH_MAX ] ;	269:4:9020:9057	1345133	19	True				
ANR	1345243	IdentifierDecl	inputline [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345244	IdentifierDeclType	char [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345245	Identifier	inputline		1345133	1					
ANR	1345246	Identifier	INPUT_LINE_LENGTH_MAX		1345133	2					
ANR	1345247	IfStatement	if ( argc < 2 )		1345133	20					
ANR	1345248	Condition	argc < 2	272:8:9124:9131	1345133	0	True				
ANR	1345249	RelationalExpression	argc < 2		1345133	0		<			
ANR	1345250	Identifier	argc		1345133	0					
ANR	1345251	PrimaryExpression	2		1345133	1					
ANR	1345252	CompoundStatement		26:18:712:712	1345133	1					
ANR	1345253	ExpressionStatement	"usage ( outfilename , arrayname )"	273:8:9144:9173	1345133	0	True				
ANR	1345254	CallExpression	"usage ( outfilename , arrayname )"		1345133	0					
ANR	1345255	Callee	usage		1345133	0					
ANR	1345256	Identifier	usage		1345133	0					
ANR	1345257	ArgumentList	outfilename		1345133	1					
ANR	1345258	Argument	outfilename		1345133	0					
ANR	1345259	Identifier	outfilename		1345133	0					
ANR	1345260	Argument	arrayname		1345133	1					
ANR	1345261	Identifier	arrayname		1345133	0					
ANR	1345262	ExpressionStatement	exit ( 1 )	274:8:9183:9190	1345133	1	True				
ANR	1345263	CallExpression	exit ( 1 )		1345133	0					
ANR	1345264	Callee	exit		1345133	0					
ANR	1345265	Identifier	exit		1345133	0					
ANR	1345266	ArgumentList	1		1345133	1					
ANR	1345267	Argument	1		1345133	0					
ANR	1345268	PrimaryExpression	1		1345133	0					
ANR	1345269	WhileStatement	while ( atarg < argc )		1345133	21					
ANR	1345270	Condition	atarg < argc	278:11:9259:9270	1345133	0	True				
ANR	1345271	RelationalExpression	atarg < argc		1345133	0		<			
ANR	1345272	Identifier	atarg		1345133	0					
ANR	1345273	Identifier	argc		1345133	1					
ANR	1345274	CompoundStatement		32:25:851:851	1345133	1					
ANR	1345275	IfStatement	if ( argv [ atarg ] [ 0 ] != '-' )		1345133	0					
ANR	1345276	Condition	argv [ atarg ] [ 0 ] != '-'	279:12:9287:9307	1345133	0	True				
ANR	1345277	EqualityExpression	argv [ atarg ] [ 0 ] != '-'		1345133	0		!=			
ANR	1345278	ArrayIndexing	argv [ atarg ] [ 0 ]		1345133	0					
ANR	1345279	ArrayIndexing	argv [ atarg ]		1345133	0					
ANR	1345280	Identifier	argv		1345133	0					
ANR	1345281	Identifier	atarg		1345133	1					
ANR	1345282	PrimaryExpression	0		1345133	1					
ANR	1345283	PrimaryExpression	'-'		1345133	1					
ANR	1345284	CompoundStatement		33:35:888:888	1345133	1					
ANR	1345285	BreakStatement	break ;	281:12:9368:9373	1345133	0	True				
ANR	1345286	SwitchStatement	switch ( argv [ atarg ] [ 1 ] )		1345133	1					
ANR	1345287	Condition	argv [ atarg ] [ 1 ]	283:16:9401:9414	1345133	0	True				
ANR	1345288	ArrayIndexing	argv [ atarg ] [ 1 ]		1345133	0					
ANR	1345289	ArrayIndexing	argv [ atarg ]		1345133	0					
ANR	1345290	Identifier	argv		1345133	0					
ANR	1345291	Identifier	atarg		1345133	1					
ANR	1345292	PrimaryExpression	1		1345133	1					
ANR	1345293	CompoundStatement		37:32:995:995	1345133	1					
ANR	1345294	Label	case 'o' :	284:8:9427:9436	1345133	0	True				
ANR	1345295	IfStatement	if ( ++ atarg >= argc )		1345133	1					
ANR	1345296	Condition	++ atarg >= argc	286:16:9518:9532	1345133	0	True				
ANR	1345297	RelationalExpression	++ atarg >= argc		1345133	0		>=			
ANR	1345298	UnaryExpression	++ atarg		1345133	0					
ANR	1345299	IncDec	++		1345133	0					
ANR	1345300	Identifier	atarg		1345133	1					
ANR	1345301	Identifier	argc		1345133	1					
ANR	1345302	CompoundStatement		40:33:1113:1113	1345133	1					
ANR	1345303	ExpressionStatement	"usage ( outfilename , arrayname )"	287:16:9553:9582	1345133	0	True				
ANR	1345304	CallExpression	"usage ( outfilename , arrayname )"		1345133	0					
ANR	1345305	Callee	usage		1345133	0					
ANR	1345306	Identifier	usage		1345133	0					
ANR	1345307	ArgumentList	outfilename		1345133	1					
ANR	1345308	Argument	outfilename		1345133	0					
ANR	1345309	Identifier	outfilename		1345133	0					
ANR	1345310	Argument	arrayname		1345133	1					
ANR	1345311	Identifier	arrayname		1345133	0					
ANR	1345312	ExpressionStatement	exit ( 0 )	288:16:9600:9607	1345133	1	True				
ANR	1345313	CallExpression	exit ( 0 )		1345133	0					
ANR	1345314	Callee	exit		1345133	0					
ANR	1345315	Identifier	exit		1345133	0					
ANR	1345316	ArgumentList	0		1345133	1					
ANR	1345317	Argument	0		1345133	0					
ANR	1345318	PrimaryExpression	0		1345133	0					
ANR	1345319	ExpressionStatement	outfilename = argv [ atarg ++ ]	290:12:9635:9662	1345133	2	True				
ANR	1345320	AssignmentExpression	outfilename = argv [ atarg ++ ]		1345133	0		=			
ANR	1345321	Identifier	outfilename		1345133	0					
ANR	1345322	ArrayIndexing	argv [ atarg ++ ]		1345133	1					
ANR	1345323	Identifier	argv		1345133	0					
ANR	1345324	PostIncDecOperationExpression	atarg ++		1345133	1					
ANR	1345325	Identifier	atarg		1345133	0					
ANR	1345326	IncDec	++		1345133	1					
ANR	1345327	BreakStatement	break ;	291:12:9676:9681	1345133	3	True				
ANR	1345328	Label	case 'n' :	293:8:9692:9701	1345133	4	True				
ANR	1345329	IfStatement	if ( ++ atarg >= argc )		1345133	5					
ANR	1345330	Condition	++ atarg >= argc	295:16:9801:9815	1345133	0	True				
ANR	1345331	RelationalExpression	++ atarg >= argc		1345133	0		>=			
ANR	1345332	UnaryExpression	++ atarg		1345133	0					
ANR	1345333	IncDec	++		1345133	0					
ANR	1345334	Identifier	atarg		1345133	1					
ANR	1345335	Identifier	argc		1345133	1					
ANR	1345336	CompoundStatement		49:33:1396:1396	1345133	1					
ANR	1345337	ExpressionStatement	"usage ( outfilename , arrayname )"	296:16:9836:9865	1345133	0	True				
ANR	1345338	CallExpression	"usage ( outfilename , arrayname )"		1345133	0					
ANR	1345339	Callee	usage		1345133	0					
ANR	1345340	Identifier	usage		1345133	0					
ANR	1345341	ArgumentList	outfilename		1345133	1					
ANR	1345342	Argument	outfilename		1345133	0					
ANR	1345343	Identifier	outfilename		1345133	0					
ANR	1345344	Argument	arrayname		1345133	1					
ANR	1345345	Identifier	arrayname		1345133	0					
ANR	1345346	ExpressionStatement	exit ( 0 )	297:16:9883:9890	1345133	1	True				
ANR	1345347	CallExpression	exit ( 0 )		1345133	0					
ANR	1345348	Callee	exit		1345133	0					
ANR	1345349	Identifier	exit		1345133	0					
ANR	1345350	ArgumentList	0		1345133	1					
ANR	1345351	Argument	0		1345133	0					
ANR	1345352	PrimaryExpression	0		1345133	0					
ANR	1345353	ExpressionStatement	arrayname = argv [ atarg ++ ]	299:12:9918:9943	1345133	6	True				
ANR	1345354	AssignmentExpression	arrayname = argv [ atarg ++ ]		1345133	0		=			
ANR	1345355	Identifier	arrayname		1345133	0					
ANR	1345356	ArrayIndexing	argv [ atarg ++ ]		1345133	1					
ANR	1345357	Identifier	argv		1345133	0					
ANR	1345358	PostIncDecOperationExpression	atarg ++		1345133	1					
ANR	1345359	Identifier	atarg		1345133	0					
ANR	1345360	IncDec	++		1345133	1					
ANR	1345361	BreakStatement	break ;	300:12:9957:9962	1345133	7	True				
ANR	1345362	Label	case 'c' :	302:8:9973:9982	1345133	8	True				
ANR	1345363	ExpressionStatement	output_comments = true	304:12:10075:10097	1345133	9	True				
ANR	1345364	AssignmentExpression	output_comments = true		1345133	0		=			
ANR	1345365	Identifier	output_comments		1345133	0					
ANR	1345366	Identifier	true		1345133	1					
ANR	1345367	ExpressionStatement	atarg ++	305:12:10111:10118	1345133	10	True				
ANR	1345368	PostIncDecOperationExpression	atarg ++		1345133	0					
ANR	1345369	Identifier	atarg		1345133	0					
ANR	1345370	IncDec	++		1345133	1					
ANR	1345371	BreakStatement	break ;	306:12:10132:10137	1345133	11	True				
ANR	1345372	IfStatement	if ( atarg >= argc )		1345133	22					
ANR	1345373	Condition	atarg >= argc	311:8:10227:10239	1345133	0	True				
ANR	1345374	RelationalExpression	atarg >= argc		1345133	0		>=			
ANR	1345375	Identifier	atarg		1345133	0					
ANR	1345376	Identifier	argc		1345133	1					
ANR	1345377	CompoundStatement		65:23:1820:1820	1345133	1					
ANR	1345378	ExpressionStatement	"usage ( outfilename , arrayname )"	312:8:10252:10281	1345133	0	True				
ANR	1345379	CallExpression	"usage ( outfilename , arrayname )"		1345133	0					
ANR	1345380	Callee	usage		1345133	0					
ANR	1345381	Identifier	usage		1345133	0					
ANR	1345382	ArgumentList	outfilename		1345133	1					
ANR	1345383	Argument	outfilename		1345133	0					
ANR	1345384	Identifier	outfilename		1345133	0					
ANR	1345385	Argument	arrayname		1345133	1					
ANR	1345386	Identifier	arrayname		1345133	0					
ANR	1345387	ExpressionStatement	exit ( - 1 )	313:8:10291:10299	1345133	1	True				
ANR	1345388	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345389	Callee	exit		1345133	0					
ANR	1345390	Identifier	exit		1345133	0					
ANR	1345391	ArgumentList	- 1		1345133	1					
ANR	1345392	Argument	- 1		1345133	0					
ANR	1345393	UnaryOperationExpression	- 1		1345133	0					
ANR	1345394	UnaryOperator	-		1345133	0					
ANR	1345395	PrimaryExpression	1		1345133	1					
ANR	1345396	ExpressionStatement	infilename = argv [ atarg ]	315:4:10311:10335	1345133	23	True				
ANR	1345397	AssignmentExpression	infilename = argv [ atarg ]		1345133	0		=			
ANR	1345398	Identifier	infilename		1345133	0					
ANR	1345399	ArrayIndexing	argv [ atarg ]		1345133	1					
ANR	1345400	Identifier	argv		1345133	0					
ANR	1345401	Identifier	atarg		1345133	1					
ANR	1345402	ExpressionStatement	"printf ( ""%s:\\n"" , argv [ 0 ] )"	317:4:10342:10366	1345133	24	True				
ANR	1345403	CallExpression	"printf ( ""%s:\\n"" , argv [ 0 ] )"		1345133	0					
ANR	1345404	Callee	printf		1345133	0					
ANR	1345405	Identifier	printf		1345133	0					
ANR	1345406	ArgumentList	"""%s:\\n"""		1345133	1					
ANR	1345407	Argument	"""%s:\\n"""		1345133	0					
ANR	1345408	PrimaryExpression	"""%s:\\n"""		1345133	0					
ANR	1345409	Argument	argv [ 0 ]		1345133	1					
ANR	1345410	ArrayIndexing	argv [ 0 ]		1345133	0					
ANR	1345411	Identifier	argv		1345133	0					
ANR	1345412	PrimaryExpression	0		1345133	1					
ANR	1345413	ExpressionStatement	"printf ( ""  Input file:  %s\\n"" , infilename )"	318:4:10372:10413	1345133	25	True				
ANR	1345414	CallExpression	"printf ( ""  Input file:  %s\\n"" , infilename )"		1345133	0					
ANR	1345415	Callee	printf		1345133	0					
ANR	1345416	Identifier	printf		1345133	0					
ANR	1345417	ArgumentList	"""  Input file:  %s\\n"""		1345133	1					
ANR	1345418	Argument	"""  Input file:  %s\\n"""		1345133	0					
ANR	1345419	PrimaryExpression	"""  Input file:  %s\\n"""		1345133	0					
ANR	1345420	Argument	infilename		1345133	1					
ANR	1345421	Identifier	infilename		1345133	0					
ANR	1345422	ExpressionStatement	"printf ( ""  Output file: %s\\n"" , outfilename )"	319:4:10419:10461	1345133	26	True				
ANR	1345423	CallExpression	"printf ( ""  Output file: %s\\n"" , outfilename )"		1345133	0					
ANR	1345424	Callee	printf		1345133	0					
ANR	1345425	Identifier	printf		1345133	0					
ANR	1345426	ArgumentList	"""  Output file: %s\\n"""		1345133	1					
ANR	1345427	Argument	"""  Output file: %s\\n"""		1345133	0					
ANR	1345428	PrimaryExpression	"""  Output file: %s\\n"""		1345133	0					
ANR	1345429	Argument	outfilename		1345133	1					
ANR	1345430	Identifier	outfilename		1345133	0					
ANR	1345431	ExpressionStatement	"printf ( ""  Array name:  %s\\n"" , arrayname )"	320:4:10467:10507	1345133	27	True				
ANR	1345432	CallExpression	"printf ( ""  Array name:  %s\\n"" , arrayname )"		1345133	0					
ANR	1345433	Callee	printf		1345133	0					
ANR	1345434	Identifier	printf		1345133	0					
ANR	1345435	ArgumentList	"""  Array name:  %s\\n"""		1345133	1					
ANR	1345436	Argument	"""  Array name:  %s\\n"""		1345133	0					
ANR	1345437	PrimaryExpression	"""  Array name:  %s\\n"""		1345133	0					
ANR	1345438	Argument	arrayname		1345133	1					
ANR	1345439	Identifier	arrayname		1345133	0					
ANR	1345440	ExpressionStatement	"infile = fopen ( infilename , ""r"" )"	322:4:10514:10545	1345133	28	True				
ANR	1345441	AssignmentExpression	"infile = fopen ( infilename , ""r"" )"		1345133	0		=			
ANR	1345442	Identifier	infile		1345133	0					
ANR	1345443	CallExpression	"fopen ( infilename , ""r"" )"		1345133	1					
ANR	1345444	Callee	fopen		1345133	0					
ANR	1345445	Identifier	fopen		1345133	0					
ANR	1345446	ArgumentList	infilename		1345133	1					
ANR	1345447	Argument	infilename		1345133	0					
ANR	1345448	Identifier	infilename		1345133	0					
ANR	1345449	Argument	"""r"""		1345133	1					
ANR	1345450	PrimaryExpression	"""r"""		1345133	0					
ANR	1345451	IfStatement	if ( infile == NULL )		1345133	29					
ANR	1345452	Condition	infile == NULL	323:8:10555:10568	1345133	0	True				
ANR	1345453	EqualityExpression	infile == NULL		1345133	0		==			
ANR	1345454	Identifier	infile		1345133	0					
ANR	1345455	Identifier	NULL		1345133	1					
ANR	1345456	CompoundStatement		77:24:2149:2149	1345133	1					
ANR	1345457	ExpressionStatement	"printf ( ""Unable to open input file \\""%s\\""\\n"" , infilename )"	324:8:10581:10637	1345133	0	True				
ANR	1345458	CallExpression	"printf ( ""Unable to open input file \\""%s\\""\\n"" , infilename )"		1345133	0					
ANR	1345459	Callee	printf		1345133	0					
ANR	1345460	Identifier	printf		1345133	0					
ANR	1345461	ArgumentList	"""Unable to open input file \\""%s\\""\\n"""		1345133	1					
ANR	1345462	Argument	"""Unable to open input file \\""%s\\""\\n"""		1345133	0					
ANR	1345463	PrimaryExpression	"""Unable to open input file \\""%s\\""\\n"""		1345133	0					
ANR	1345464	Argument	infilename		1345133	1					
ANR	1345465	Identifier	infilename		1345133	0					
ANR	1345466	ExpressionStatement	exit ( - 1 )	325:8:10647:10655	1345133	1	True				
ANR	1345467	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345468	Callee	exit		1345133	0					
ANR	1345469	Identifier	exit		1345133	0					
ANR	1345470	ArgumentList	- 1		1345133	1					
ANR	1345471	Argument	- 1		1345133	0					
ANR	1345472	UnaryOperationExpression	- 1		1345133	0					
ANR	1345473	UnaryOperator	-		1345133	0					
ANR	1345474	PrimaryExpression	1		1345133	1					
ANR	1345475	ExpressionStatement	"outfile = fopen ( outfilename , ""w"" )"	327:4:10667:10700	1345133	30	True				
ANR	1345476	AssignmentExpression	"outfile = fopen ( outfilename , ""w"" )"		1345133	0		=			
ANR	1345477	Identifier	outfile		1345133	0					
ANR	1345478	CallExpression	"fopen ( outfilename , ""w"" )"		1345133	1					
ANR	1345479	Callee	fopen		1345133	0					
ANR	1345480	Identifier	fopen		1345133	0					
ANR	1345481	ArgumentList	outfilename		1345133	1					
ANR	1345482	Argument	outfilename		1345133	0					
ANR	1345483	Identifier	outfilename		1345133	0					
ANR	1345484	Argument	"""w"""		1345133	1					
ANR	1345485	PrimaryExpression	"""w"""		1345133	0					
ANR	1345486	IfStatement	if ( outfile == NULL )		1345133	31					
ANR	1345487	Condition	outfile == NULL	328:8:10710:10724	1345133	0	True				
ANR	1345488	EqualityExpression	outfile == NULL		1345133	0		==			
ANR	1345489	Identifier	outfile		1345133	0					
ANR	1345490	Identifier	NULL		1345133	1					
ANR	1345491	CompoundStatement		82:25:2305:2305	1345133	1					
ANR	1345492	ExpressionStatement	fclose ( infile )	329:8:10737:10751	1345133	0	True				
ANR	1345493	CallExpression	fclose ( infile )		1345133	0					
ANR	1345494	Callee	fclose		1345133	0					
ANR	1345495	Identifier	fclose		1345133	0					
ANR	1345496	ArgumentList	infile		1345133	1					
ANR	1345497	Argument	infile		1345133	0					
ANR	1345498	Identifier	infile		1345133	0					
ANR	1345499	ExpressionStatement	"printf ( ""Unable to open output file \\""%s\\""\\n"" , outfilename )"	330:8:10761:10819	1345133	1	True				
ANR	1345500	CallExpression	"printf ( ""Unable to open output file \\""%s\\""\\n"" , outfilename )"		1345133	0					
ANR	1345501	Callee	printf		1345133	0					
ANR	1345502	Identifier	printf		1345133	0					
ANR	1345503	ArgumentList	"""Unable to open output file \\""%s\\""\\n"""		1345133	1					
ANR	1345504	Argument	"""Unable to open output file \\""%s\\""\\n"""		1345133	0					
ANR	1345505	PrimaryExpression	"""Unable to open output file \\""%s\\""\\n"""		1345133	0					
ANR	1345506	Argument	outfilename		1345133	1					
ANR	1345507	Identifier	outfilename		1345133	0					
ANR	1345508	ExpressionStatement	exit ( - 1 )	331:8:10829:10837	1345133	2	True				
ANR	1345509	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345510	Callee	exit		1345133	0					
ANR	1345511	Identifier	exit		1345133	0					
ANR	1345512	ArgumentList	- 1		1345133	1					
ANR	1345513	Argument	- 1		1345133	0					
ANR	1345514	UnaryOperationExpression	- 1		1345133	0					
ANR	1345515	UnaryOperator	-		1345133	0					
ANR	1345516	PrimaryExpression	1		1345133	1					
ANR	1345517	IfStatement	"if ( ( env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" ) ) )"		1345133	32					
ANR	1345518	Condition	"env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" )"	335:8:10928:10980	1345133	0	True				
ANR	1345519	AssignmentExpression	"env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" )"		1345133	0		=			
ANR	1345520	Identifier	env_source_date_epoch		1345133	0					
ANR	1345521	CallExpression	"getenv ( ""SOURCE_DATE_EPOCH"" )"		1345133	1					
ANR	1345522	Callee	getenv		1345133	0					
ANR	1345523	Identifier	getenv		1345133	0					
ANR	1345524	ArgumentList	"""SOURCE_DATE_EPOCH"""		1345133	1					
ANR	1345525	Argument	"""SOURCE_DATE_EPOCH"""		1345133	0					
ANR	1345526	PrimaryExpression	"""SOURCE_DATE_EPOCH"""		1345133	0					
ANR	1345527	CompoundStatement		89:63:2561:2561	1345133	1					
ANR	1345528	ExpressionStatement	"buildtime = strtoul ( env_source_date_epoch , NULL , 10 )"	336:8:10993:11045	1345133	0	True				
ANR	1345529	AssignmentExpression	"buildtime = strtoul ( env_source_date_epoch , NULL , 10 )"		1345133	0		=			
ANR	1345530	Identifier	buildtime		1345133	0					
ANR	1345531	CallExpression	"strtoul ( env_source_date_epoch , NULL , 10 )"		1345133	1					
ANR	1345532	Callee	strtoul		1345133	0					
ANR	1345533	Identifier	strtoul		1345133	0					
ANR	1345534	ArgumentList	env_source_date_epoch		1345133	1					
ANR	1345535	Argument	env_source_date_epoch		1345133	0					
ANR	1345536	Identifier	env_source_date_epoch		1345133	0					
ANR	1345537	Argument	NULL		1345133	1					
ANR	1345538	Identifier	NULL		1345133	0					
ANR	1345539	Argument	10		1345133	2					
ANR	1345540	PrimaryExpression	10		1345133	0					
ANR	1345541	IfStatement	if ( ! buildtime )		1345133	33					
ANR	1345542	Condition	! buildtime	338:8:11061:11070	1345133	0	True				
ANR	1345543	UnaryOperationExpression	! buildtime		1345133	0					
ANR	1345544	UnaryOperator	!		1345133	0					
ANR	1345545	Identifier	buildtime		1345133	1					
ANR	1345546	CompoundStatement		92:20:2651:2651	1345133	1					
ANR	1345547	ExpressionStatement	buildtime = time ( NULL )	339:8:11083:11105	1345133	0	True				
ANR	1345548	AssignmentExpression	buildtime = time ( NULL )		1345133	0		=			
ANR	1345549	Identifier	buildtime		1345133	0					
ANR	1345550	CallExpression	time ( NULL )		1345133	1					
ANR	1345551	Callee	time		1345133	0					
ANR	1345552	Identifier	time		1345133	0					
ANR	1345553	ArgumentList	NULL		1345133	1					
ANR	1345554	Argument	NULL		1345133	0					
ANR	1345555	Identifier	NULL		1345133	0					
ANR	1345556	ExpressionStatement	"fprintf ( outfile , ""/* Auto-generated from PostScript file \\""%s\\"" at time %ld */\\n"" , infilename , buildtime )"	341:4:11117:11221	1345133	34	True				
ANR	1345557	CallExpression	"fprintf ( outfile , ""/* Auto-generated from PostScript file \\""%s\\"" at time %ld */\\n"" , infilename , buildtime )"		1345133	0					
ANR	1345558	Callee	fprintf		1345133	0					
ANR	1345559	Identifier	fprintf		1345133	0					
ANR	1345560	ArgumentList	outfile		1345133	1					
ANR	1345561	Argument	outfile		1345133	0					
ANR	1345562	Identifier	outfile		1345133	0					
ANR	1345563	Argument	"""/* Auto-generated from PostScript file \\""%s\\"" at time %ld */\\n"""		1345133	1					
ANR	1345564	PrimaryExpression	"""/* Auto-generated from PostScript file \\""%s\\"" at time %ld */\\n"""		1345133	0					
ANR	1345565	Argument	infilename		1345133	2					
ANR	1345566	Identifier	infilename		1345133	0					
ANR	1345567	Argument	buildtime		1345133	3					
ANR	1345568	Identifier	buildtime		1345133	0					
ANR	1345569	WhileStatement	"while ( readline ( infile , inputline , INPUT_LINE_LENGTH_MAX ) )"		1345133	35					
ANR	1345570	Condition	"readline ( infile , inputline , INPUT_LINE_LENGTH_MAX )"	343:11:11235:11284	1345133	0	True				
ANR	1345571	CallExpression	"readline ( infile , inputline , INPUT_LINE_LENGTH_MAX )"		1345133	0					
ANR	1345572	Callee	readline		1345133	0					
ANR	1345573	Identifier	readline		1345133	0					
ANR	1345574	ArgumentList	infile		1345133	1					
ANR	1345575	Argument	infile		1345133	0					
ANR	1345576	Identifier	infile		1345133	0					
ANR	1345577	Argument	inputline		1345133	1					
ANR	1345578	Identifier	inputline		1345133	0					
ANR	1345579	Argument	INPUT_LINE_LENGTH_MAX		1345133	2					
ANR	1345580	Identifier	INPUT_LINE_LENGTH_MAX		1345133	0					
ANR	1345581	CompoundStatement		103:8:3092:3124	1345133	1					
ANR	1345582	IdentifierDeclStatement	char packedline [ INPUT_LINE_LENGTH_MAX ] ;	345:8:11298:11336	1345133	0	True				
ANR	1345583	IdentifierDecl	packedline [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345584	IdentifierDeclType	char [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345585	Identifier	packedline		1345133	1					
ANR	1345586	Identifier	INPUT_LINE_LENGTH_MAX		1345133	2					
ANR	1345587	IdentifierDeclStatement	char comment [ INPUT_LINE_LENGTH_MAX ] ;	346:8:11346:11381	1345133	1	True				
ANR	1345588	IdentifierDecl	comment [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345589	IdentifierDeclType	char [ INPUT_LINE_LENGTH_MAX ]		1345133	0					
ANR	1345590	Identifier	comment		1345133	1					
ANR	1345591	Identifier	INPUT_LINE_LENGTH_MAX		1345133	2					
ANR	1345592	IdentifierDeclStatement	int unpackedlen = strlen ( inputline ) ;	347:8:11391:11426	1345133	2	True				
ANR	1345593	IdentifierDecl	unpackedlen = strlen ( inputline )		1345133	0					
ANR	1345594	IdentifierDeclType	int		1345133	0					
ANR	1345595	Identifier	unpackedlen		1345133	1					
ANR	1345596	AssignmentExpression	unpackedlen = strlen ( inputline )		1345133	2		=			
ANR	1345597	Identifier	unpackedlen		1345133	0					
ANR	1345598	CallExpression	strlen ( inputline )		1345133	1					
ANR	1345599	Callee	strlen		1345133	0					
ANR	1345600	Identifier	strlen		1345133	0					
ANR	1345601	ArgumentList	inputline		1345133	1					
ANR	1345602	Argument	inputline		1345133	0					
ANR	1345603	Identifier	inputline		1345133	0					
ANR	1345604	IdentifierDeclStatement	"int packedlen = pack_postscript_line ( inputline , packedline , comment ) ;"	348:8:11436:11504	1345133	3	True				
ANR	1345605	IdentifierDecl	"packedlen = pack_postscript_line ( inputline , packedline , comment )"		1345133	0					
ANR	1345606	IdentifierDeclType	int		1345133	0					
ANR	1345607	Identifier	packedlen		1345133	1					
ANR	1345608	AssignmentExpression	"packedlen = pack_postscript_line ( inputline , packedline , comment )"		1345133	2		=			
ANR	1345609	Identifier	packedlen		1345133	0					
ANR	1345610	CallExpression	"pack_postscript_line ( inputline , packedline , comment )"		1345133	1					
ANR	1345611	Callee	pack_postscript_line		1345133	0					
ANR	1345612	Identifier	pack_postscript_line		1345133	0					
ANR	1345613	ArgumentList	inputline		1345133	1					
ANR	1345614	Argument	inputline		1345133	0					
ANR	1345615	Identifier	inputline		1345133	0					
ANR	1345616	Argument	packedline		1345133	1					
ANR	1345617	Identifier	packedline		1345133	0					
ANR	1345618	Argument	comment		1345133	2					
ANR	1345619	Identifier	comment		1345133	0					
ANR	1345620	IdentifierDeclStatement	int commentlen = strlen ( comment ) ;	349:8:11514:11546	1345133	4	True				
ANR	1345621	IdentifierDecl	commentlen = strlen ( comment )		1345133	0					
ANR	1345622	IdentifierDeclType	int		1345133	0					
ANR	1345623	Identifier	commentlen		1345133	1					
ANR	1345624	AssignmentExpression	commentlen = strlen ( comment )		1345133	2		=			
ANR	1345625	Identifier	commentlen		1345133	0					
ANR	1345626	CallExpression	strlen ( comment )		1345133	1					
ANR	1345627	Callee	strlen		1345133	0					
ANR	1345628	Identifier	strlen		1345133	0					
ANR	1345629	ArgumentList	comment		1345133	1					
ANR	1345630	Argument	comment		1345133	0					
ANR	1345631	Identifier	comment		1345133	0					
ANR	1345632	ExpressionStatement	skip_this_line = false	352:8:11584:11606	1345133	5	True				
ANR	1345633	AssignmentExpression	skip_this_line = false		1345133	0		=			
ANR	1345634	Identifier	skip_this_line		1345133	0					
ANR	1345635	Identifier	false		1345133	1					
ANR	1345636	IfStatement	"if ( ! strncmp ( packedline , PDFR_DEBUG_START_PREFIX , strlen ( PDFR_DEBUG_START_PREFIX ) ) )"		1345133	6					
ANR	1345637	Condition	"! strncmp ( packedline , PDFR_DEBUG_START_PREFIX , strlen ( PDFR_DEBUG_START_PREFIX ) )"	353:12:11620:11697	1345133	0	True				
ANR	1345638	UnaryOperationExpression	"! strncmp ( packedline , PDFR_DEBUG_START_PREFIX , strlen ( PDFR_DEBUG_START_PREFIX ) )"		1345133	0					
ANR	1345639	UnaryOperator	!		1345133	0					
ANR	1345640	CallExpression	"strncmp ( packedline , PDFR_DEBUG_START_PREFIX , strlen ( PDFR_DEBUG_START_PREFIX ) )"		1345133	1					
ANR	1345641	Callee	strncmp		1345133	0					
ANR	1345642	Identifier	strncmp		1345133	0					
ANR	1345643	ArgumentList	packedline		1345133	1					
ANR	1345644	Argument	packedline		1345133	0					
ANR	1345645	Identifier	packedline		1345133	0					
ANR	1345646	Argument	PDFR_DEBUG_START_PREFIX		1345133	1					
ANR	1345647	Identifier	PDFR_DEBUG_START_PREFIX		1345133	0					
ANR	1345648	Argument	strlen ( PDFR_DEBUG_START_PREFIX )		1345133	2					
ANR	1345649	CallExpression	strlen ( PDFR_DEBUG_START_PREFIX )		1345133	0					
ANR	1345650	Callee	strlen		1345133	0					
ANR	1345651	Identifier	strlen		1345133	0					
ANR	1345652	ArgumentList	PDFR_DEBUG_START_PREFIX		1345133	1					
ANR	1345653	Argument	PDFR_DEBUG_START_PREFIX		1345133	0					
ANR	1345654	Identifier	PDFR_DEBUG_START_PREFIX		1345133	0					
ANR	1345655	CompoundStatement		107:92:3278:3278	1345133	1					
ANR	1345656	ExpressionStatement	pdfr_debug_start_count ++	355:12:11767:11791	1345133	0	True				
ANR	1345657	PostIncDecOperationExpression	pdfr_debug_start_count ++		1345133	0					
ANR	1345658	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345659	IncDec	++		1345133	1					
ANR	1345660	IfStatement	if ( pdfr_debug_start_count != pdfr_debug_end_count + 1 )		1345133	1					
ANR	1345661	Condition	pdfr_debug_start_count != pdfr_debug_end_count + 1	356:16:11809:11856	1345133	0	True				
ANR	1345662	EqualityExpression	pdfr_debug_start_count != pdfr_debug_end_count + 1		1345133	0		!=			
ANR	1345663	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345664	AdditiveExpression	pdfr_debug_end_count + 1		1345133	1		+			
ANR	1345665	Identifier	pdfr_debug_end_count		1345133	0					
ANR	1345666	PrimaryExpression	1		1345133	1					
ANR	1345667	CompoundStatement		110:66:3437:3437	1345133	1					
ANR	1345668	ExpressionStatement	"printf ( ""ERROR: missing PDFR_DEBUG terminating comment for call %d.\\n"" , pdfr_debug_start_count )"	357:16:11877:11972	1345133	0	True				
ANR	1345669	CallExpression	"printf ( ""ERROR: missing PDFR_DEBUG terminating comment for call %d.\\n"" , pdfr_debug_start_count )"		1345133	0					
ANR	1345670	Callee	printf		1345133	0					
ANR	1345671	Identifier	printf		1345133	0					
ANR	1345672	ArgumentList	"""ERROR: missing PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	1					
ANR	1345673	Argument	"""ERROR: missing PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	0					
ANR	1345674	PrimaryExpression	"""ERROR: missing PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	0					
ANR	1345675	Argument	pdfr_debug_start_count		1345133	1					
ANR	1345676	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345677	ExpressionStatement	fclose ( infile )	358:16:11990:12004	1345133	1	True				
ANR	1345678	CallExpression	fclose ( infile )		1345133	0					
ANR	1345679	Callee	fclose		1345133	0					
ANR	1345680	Identifier	fclose		1345133	0					
ANR	1345681	ArgumentList	infile		1345133	1					
ANR	1345682	Argument	infile		1345133	0					
ANR	1345683	Identifier	infile		1345133	0					
ANR	1345684	ExpressionStatement	fclose ( outfile )	359:16:12022:12037	1345133	2	True				
ANR	1345685	CallExpression	fclose ( outfile )		1345133	0					
ANR	1345686	Callee	fclose		1345133	0					
ANR	1345687	Identifier	fclose		1345133	0					
ANR	1345688	ArgumentList	outfile		1345133	1					
ANR	1345689	Argument	outfile		1345133	0					
ANR	1345690	Identifier	outfile		1345133	0					
ANR	1345691	ExpressionStatement	exit ( - 1 )	360:16:12055:12063	1345133	3	True				
ANR	1345692	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345693	Callee	exit		1345133	0					
ANR	1345694	Identifier	exit		1345133	0					
ANR	1345695	ArgumentList	- 1		1345133	1					
ANR	1345696	Argument	- 1		1345133	0					
ANR	1345697	UnaryOperationExpression	- 1		1345133	0					
ANR	1345698	UnaryOperator	-		1345133	0					
ANR	1345699	PrimaryExpression	1		1345133	1					
ANR	1345700	IfStatement	if ( pdfr_debug_start_count != pdfr_debug_end_count )		1345133	7					
ANR	1345701	Condition	pdfr_debug_start_count != pdfr_debug_end_count	367:12:12310:12355	1345133	0	True				
ANR	1345702	EqualityExpression	pdfr_debug_start_count != pdfr_debug_end_count		1345133	0		!=			
ANR	1345703	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345704	Identifier	pdfr_debug_end_count		1345133	1					
ANR	1345705	CompoundStatement		121:60:3936:3936	1345133	1					
ANR	1345706	ExpressionStatement	skip_this_line = true	368:12:12372:12393	1345133	0	True				
ANR	1345707	AssignmentExpression	skip_this_line = true		1345133	0		=			
ANR	1345708	Identifier	skip_this_line		1345133	0					
ANR	1345709	Identifier	true		1345133	1					
ANR	1345710	IfStatement	"if ( ( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_1 , strlen ( PDFR_DEBUG_END_COMMENT_1 ) ) ) || ( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_2 , strlen ( PDFR_DEBUG_END_COMMENT_2 ) ) ) )"		1345133	8					
ANR	1345711	Condition	"( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_1 , strlen ( PDFR_DEBUG_END_COMMENT_1 ) ) ) || ( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_2 , strlen ( PDFR_DEBUG_END_COMMENT_2 ) ) )"	371:12:12418:12591	1345133	0	True				
ANR	1345712	OrExpression	"( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_1 , strlen ( PDFR_DEBUG_END_COMMENT_1 ) ) ) || ( ! strncmp ( comment , PDFR_DEBUG_END_COMMENT_2 , strlen ( PDFR_DEBUG_END_COMMENT_2 ) ) )"		1345133	0		||			
ANR	1345713	UnaryOperationExpression	"! strncmp ( comment , PDFR_DEBUG_END_COMMENT_1 , strlen ( PDFR_DEBUG_END_COMMENT_1 ) )"		1345133	0					
ANR	1345714	UnaryOperator	!		1345133	0					
ANR	1345715	CallExpression	"strncmp ( comment , PDFR_DEBUG_END_COMMENT_1 , strlen ( PDFR_DEBUG_END_COMMENT_1 ) )"		1345133	1					
ANR	1345716	Callee	strncmp		1345133	0					
ANR	1345717	Identifier	strncmp		1345133	0					
ANR	1345718	ArgumentList	comment		1345133	1					
ANR	1345719	Argument	comment		1345133	0					
ANR	1345720	Identifier	comment		1345133	0					
ANR	1345721	Argument	PDFR_DEBUG_END_COMMENT_1		1345133	1					
ANR	1345722	Identifier	PDFR_DEBUG_END_COMMENT_1		1345133	0					
ANR	1345723	Argument	strlen ( PDFR_DEBUG_END_COMMENT_1 )		1345133	2					
ANR	1345724	CallExpression	strlen ( PDFR_DEBUG_END_COMMENT_1 )		1345133	0					
ANR	1345725	Callee	strlen		1345133	0					
ANR	1345726	Identifier	strlen		1345133	0					
ANR	1345727	ArgumentList	PDFR_DEBUG_END_COMMENT_1		1345133	1					
ANR	1345728	Argument	PDFR_DEBUG_END_COMMENT_1		1345133	0					
ANR	1345729	Identifier	PDFR_DEBUG_END_COMMENT_1		1345133	0					
ANR	1345730	UnaryOperationExpression	"! strncmp ( comment , PDFR_DEBUG_END_COMMENT_2 , strlen ( PDFR_DEBUG_END_COMMENT_2 ) )"		1345133	1					
ANR	1345731	UnaryOperator	!		1345133	0					
ANR	1345732	CallExpression	"strncmp ( comment , PDFR_DEBUG_END_COMMENT_2 , strlen ( PDFR_DEBUG_END_COMMENT_2 ) )"		1345133	1					
ANR	1345733	Callee	strncmp		1345133	0					
ANR	1345734	Identifier	strncmp		1345133	0					
ANR	1345735	ArgumentList	comment		1345133	1					
ANR	1345736	Argument	comment		1345133	0					
ANR	1345737	Identifier	comment		1345133	0					
ANR	1345738	Argument	PDFR_DEBUG_END_COMMENT_2		1345133	1					
ANR	1345739	Identifier	PDFR_DEBUG_END_COMMENT_2		1345133	0					
ANR	1345740	Argument	strlen ( PDFR_DEBUG_END_COMMENT_2 )		1345133	2					
ANR	1345741	CallExpression	strlen ( PDFR_DEBUG_END_COMMENT_2 )		1345133	0					
ANR	1345742	Callee	strlen		1345133	0					
ANR	1345743	Identifier	strlen		1345133	0					
ANR	1345744	ArgumentList	PDFR_DEBUG_END_COMMENT_2		1345133	1					
ANR	1345745	Argument	PDFR_DEBUG_END_COMMENT_2		1345133	0					
ANR	1345746	Identifier	PDFR_DEBUG_END_COMMENT_2		1345133	0					
ANR	1345747	CompoundStatement		126:93:4172:4172	1345133	1					
ANR	1345748	ExpressionStatement	pdfr_debug_end_count ++	375:12:12660:12682	1345133	0	True				
ANR	1345749	PostIncDecOperationExpression	pdfr_debug_end_count ++		1345133	0					
ANR	1345750	Identifier	pdfr_debug_end_count		1345133	0					
ANR	1345751	IncDec	++		1345133	1					
ANR	1345752	IfStatement	if ( pdfr_debug_start_count != pdfr_debug_end_count )		1345133	1					
ANR	1345753	Condition	pdfr_debug_start_count != pdfr_debug_end_count	376:16:12700:12745	1345133	0	True				
ANR	1345754	EqualityExpression	pdfr_debug_start_count != pdfr_debug_end_count		1345133	0		!=			
ANR	1345755	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345756	Identifier	pdfr_debug_end_count		1345133	1					
ANR	1345757	CompoundStatement		130:64:4326:4326	1345133	1					
ANR	1345758	ExpressionStatement	"printf ( ""ERROR: extra PDFR_DEBUG terminating comment for call %d.\\n"" , pdfr_debug_start_count + 1 )"	377:16:12766:12861	1345133	0	True				
ANR	1345759	CallExpression	"printf ( ""ERROR: extra PDFR_DEBUG terminating comment for call %d.\\n"" , pdfr_debug_start_count + 1 )"		1345133	0					
ANR	1345760	Callee	printf		1345133	0					
ANR	1345761	Identifier	printf		1345133	0					
ANR	1345762	ArgumentList	"""ERROR: extra PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	1					
ANR	1345763	Argument	"""ERROR: extra PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	0					
ANR	1345764	PrimaryExpression	"""ERROR: extra PDFR_DEBUG terminating comment for call %d.\\n"""		1345133	0					
ANR	1345765	Argument	pdfr_debug_start_count + 1		1345133	1					
ANR	1345766	AdditiveExpression	pdfr_debug_start_count + 1		1345133	0		+			
ANR	1345767	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345768	PrimaryExpression	1		1345133	1					
ANR	1345769	ExpressionStatement	fclose ( infile )	378:16:12879:12893	1345133	1	True				
ANR	1345770	CallExpression	fclose ( infile )		1345133	0					
ANR	1345771	Callee	fclose		1345133	0					
ANR	1345772	Identifier	fclose		1345133	0					
ANR	1345773	ArgumentList	infile		1345133	1					
ANR	1345774	Argument	infile		1345133	0					
ANR	1345775	Identifier	infile		1345133	0					
ANR	1345776	ExpressionStatement	fclose ( outfile )	379:16:12911:12926	1345133	2	True				
ANR	1345777	CallExpression	fclose ( outfile )		1345133	0					
ANR	1345778	Callee	fclose		1345133	0					
ANR	1345779	Identifier	fclose		1345133	0					
ANR	1345780	ArgumentList	outfile		1345133	1					
ANR	1345781	Argument	outfile		1345133	0					
ANR	1345782	Identifier	outfile		1345133	0					
ANR	1345783	ExpressionStatement	exit ( - 1 )	380:16:12944:12952	1345133	3	True				
ANR	1345784	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345785	Callee	exit		1345133	0					
ANR	1345786	Identifier	exit		1345133	0					
ANR	1345787	ArgumentList	- 1		1345133	1					
ANR	1345788	Argument	- 1		1345133	0					
ANR	1345789	UnaryOperationExpression	- 1		1345133	0					
ANR	1345790	UnaryOperator	-		1345133	0					
ANR	1345791	PrimaryExpression	1		1345133	1					
ANR	1345792	IfStatement	if ( skip_this_line )		1345133	9					
ANR	1345793	Condition	skip_this_line	384:12:12991:13004	1345133	0	True				
ANR	1345794	Identifier	skip_this_line		1345133	0					
ANR	1345795	CompoundStatement		138:28:4585:4585	1345133	1					
ANR	1345796	ContinueStatement	continue ;	385:12:13021:13029	1345133	0	True				
ANR	1345797	IfStatement	if ( packedlen > 0 )		1345133	10					
ANR	1345798	Condition	packedlen > 0	388:12:13060:13072	1345133	0	True				
ANR	1345799	RelationalExpression	packedlen > 0		1345133	0		>			
ANR	1345800	Identifier	packedlen		1345133	0					
ANR	1345801	PrimaryExpression	0		1345133	1					
ANR	1345802	CompoundStatement		142:27:4653:4653	1345133	1					
ANR	1345803	ExpressionStatement	total_code_lines ++	389:12:13089:13107	1345133	0	True				
ANR	1345804	PostIncDecOperationExpression	total_code_lines ++		1345133	0					
ANR	1345805	Identifier	total_code_lines		1345133	0					
ANR	1345806	IncDec	++		1345133	1					
ANR	1345807	ExpressionStatement	total_input_length += unpackedlen	392:8:13128:13161	1345133	11	True				
ANR	1345808	AssignmentExpression	total_input_length += unpackedlen		1345133	0		+=			
ANR	1345809	Identifier	total_input_length		1345133	0					
ANR	1345810	Identifier	unpackedlen		1345133	1					
ANR	1345811	ExpressionStatement	total_output_length += packedlen	393:8:13171:13203	1345133	12	True				
ANR	1345812	AssignmentExpression	total_output_length += packedlen		1345133	0		+=			
ANR	1345813	Identifier	total_output_length		1345133	0					
ANR	1345814	Identifier	packedlen		1345133	1					
ANR	1345815	IfStatement	if ( output_comments )		1345133	13					
ANR	1345816	Condition	output_comments	396:12:13290:13304	1345133	0	True				
ANR	1345817	Identifier	output_comments		1345133	0					
ANR	1345818	CompoundStatement		150:29:4885:4885	1345133	1					
ANR	1345819	IfStatement	if ( ( total_code_lines == 0 ) && ( commentlen > 0 ) )		1345133	0					
ANR	1345820	Condition	( total_code_lines == 0 ) && ( commentlen > 0 )	397:16:13325:13367	1345133	0	True				
ANR	1345821	AndExpression	( total_code_lines == 0 ) && ( commentlen > 0 )		1345133	0		&&			
ANR	1345822	EqualityExpression	total_code_lines == 0		1345133	0		==			
ANR	1345823	Identifier	total_code_lines		1345133	0					
ANR	1345824	PrimaryExpression	0		1345133	1					
ANR	1345825	RelationalExpression	commentlen > 0		1345133	1		>			
ANR	1345826	Identifier	commentlen		1345133	0					
ANR	1345827	PrimaryExpression	0		1345133	1					
ANR	1345828	CompoundStatement		151:61:4948:4948	1345133	1					
ANR	1345829	ExpressionStatement	total_comment_header_lines ++	398:16:13388:13416	1345133	0	True				
ANR	1345830	PostIncDecOperationExpression	total_comment_header_lines ++		1345133	0					
ANR	1345831	Identifier	total_comment_header_lines		1345133	0					
ANR	1345832	IncDec	++		1345133	1					
ANR	1345833	IfStatement	if ( total_comment_header_lines == 1 )		1345133	1					
ANR	1345834	Condition	total_comment_header_lines == 1	400:20:13439:13469	1345133	0	True				
ANR	1345835	EqualityExpression	total_comment_header_lines == 1		1345133	0		==			
ANR	1345836	Identifier	total_comment_header_lines		1345133	0					
ANR	1345837	PrimaryExpression	1		1345133	1					
ANR	1345838	CompoundStatement		154:53:5050:5050	1345133	1					
ANR	1345839	ExpressionStatement	"fprintf ( outfile , ""/* %s\\n"" , comment )"	401:20:13494:13530	1345133	0	True				
ANR	1345840	CallExpression	"fprintf ( outfile , ""/* %s\\n"" , comment )"		1345133	0					
ANR	1345841	Callee	fprintf		1345133	0					
ANR	1345842	Identifier	fprintf		1345133	0					
ANR	1345843	ArgumentList	outfile		1345133	1					
ANR	1345844	Argument	outfile		1345133	0					
ANR	1345845	Identifier	outfile		1345133	0					
ANR	1345846	Argument	"""/* %s\\n"""		1345133	1					
ANR	1345847	PrimaryExpression	"""/* %s\\n"""		1345133	0					
ANR	1345848	Argument	comment		1345133	2					
ANR	1345849	Identifier	comment		1345133	0					
ANR	1345850	ElseStatement	else		1345133	0					
ANR	1345851	CompoundStatement		157:21:5149:5149	1345133	0					
ANR	1345852	ExpressionStatement	"fprintf ( outfile , "" * %s\\n"" , comment )"	404:20:13593:13629	1345133	0	True				
ANR	1345853	CallExpression	"fprintf ( outfile , "" * %s\\n"" , comment )"		1345133	0					
ANR	1345854	Callee	fprintf		1345133	0					
ANR	1345855	Identifier	fprintf		1345133	0					
ANR	1345856	ArgumentList	outfile		1345133	1					
ANR	1345857	Argument	outfile		1345133	0					
ANR	1345858	Identifier	outfile		1345133	0					
ANR	1345859	Argument	""" * %s\\n"""		1345133	1					
ANR	1345860	PrimaryExpression	""" * %s\\n"""		1345133	0					
ANR	1345861	Argument	comment		1345133	2					
ANR	1345862	Identifier	comment		1345133	0					
ANR	1345863	ElseStatement	else		1345133	0					
ANR	1345864	IfStatement	if ( ( total_code_lines == 1 ) && ( total_comment_header_lines > 0 ) && ( packedlen > 0 ) )		1345133	0					
ANR	1345865	Condition	( total_code_lines == 1 ) && ( total_comment_header_lines > 0 ) && ( packedlen > 0 )	407:21:13684:13761	1345133	0	True				
ANR	1345866	AndExpression	( total_code_lines == 1 ) && ( total_comment_header_lines > 0 ) && ( packedlen > 0 )		1345133	0		&&			
ANR	1345867	EqualityExpression	total_code_lines == 1		1345133	0		==			
ANR	1345868	Identifier	total_code_lines		1345133	0					
ANR	1345869	PrimaryExpression	1		1345133	1					
ANR	1345870	AndExpression	( total_comment_header_lines > 0 ) && ( packedlen > 0 )		1345133	1		&&			
ANR	1345871	RelationalExpression	total_comment_header_lines > 0		1345133	0		>			
ANR	1345872	Identifier	total_comment_header_lines		1345133	0					
ANR	1345873	PrimaryExpression	0		1345133	1					
ANR	1345874	RelationalExpression	packedlen > 0		1345133	1		>			
ANR	1345875	Identifier	packedlen		1345133	0					
ANR	1345876	PrimaryExpression	0		1345133	1					
ANR	1345877	CompoundStatement		161:101:5342:5342	1345133	1					
ANR	1345878	ExpressionStatement	"fprintf ( outfile , "" */\\n"" )"	408:16:13782:13807	1345133	0	True				
ANR	1345879	CallExpression	"fprintf ( outfile , "" */\\n"" )"		1345133	0					
ANR	1345880	Callee	fprintf		1345133	0					
ANR	1345881	Identifier	fprintf		1345133	0					
ANR	1345882	ArgumentList	outfile		1345133	1					
ANR	1345883	Argument	outfile		1345133	0					
ANR	1345884	Identifier	outfile		1345133	0					
ANR	1345885	Argument	""" */\\n"""		1345133	1					
ANR	1345886	PrimaryExpression	""" */\\n"""		1345133	0					
ANR	1345887	IfStatement	if ( packedlen > 0 )		1345133	14					
ANR	1345888	Condition	packedlen > 0	412:12:13846:13858	1345133	0	True				
ANR	1345889	RelationalExpression	packedlen > 0		1345133	0		>			
ANR	1345890	Identifier	packedlen		1345133	0					
ANR	1345891	PrimaryExpression	0		1345133	1					
ANR	1345892	CompoundStatement		166:27:5439:5439	1345133	1					
ANR	1345893	IfStatement	if ( total_code_lines == 1 )		1345133	0					
ANR	1345894	Condition	total_code_lines == 1	413:16:13879:13899	1345133	0	True				
ANR	1345895	EqualityExpression	total_code_lines == 1		1345133	0		==			
ANR	1345896	Identifier	total_code_lines		1345133	0					
ANR	1345897	PrimaryExpression	1		1345133	1					
ANR	1345898	CompoundStatement		167:39:5480:5480	1345133	1					
ANR	1345899	ExpressionStatement	"fprintf ( outfile , ""const char *%s [] = {\\n"" , arrayname )"	414:16:13920:13973	1345133	0	True				
ANR	1345900	CallExpression	"fprintf ( outfile , ""const char *%s [] = {\\n"" , arrayname )"		1345133	0					
ANR	1345901	Callee	fprintf		1345133	0					
ANR	1345902	Identifier	fprintf		1345133	0					
ANR	1345903	ArgumentList	outfile		1345133	1					
ANR	1345904	Argument	outfile		1345133	0					
ANR	1345905	Identifier	outfile		1345133	0					
ANR	1345906	Argument	"""const char *%s [] = {\\n"""		1345133	1					
ANR	1345907	PrimaryExpression	"""const char *%s [] = {\\n"""		1345133	0					
ANR	1345908	Argument	arrayname		1345133	2					
ANR	1345909	Identifier	arrayname		1345133	0					
ANR	1345910	ExpressionStatement	"fprintf ( outfile , ""\\""%s\\\\n\\"",\\n"" , packedline )"	417:12:14052:14096	1345133	1	True				
ANR	1345911	CallExpression	"fprintf ( outfile , ""\\""%s\\\\n\\"",\\n"" , packedline )"		1345133	0					
ANR	1345912	Callee	fprintf		1345133	0					
ANR	1345913	Identifier	fprintf		1345133	0					
ANR	1345914	ArgumentList	outfile		1345133	1					
ANR	1345915	Argument	outfile		1345133	0					
ANR	1345916	Identifier	outfile		1345133	0					
ANR	1345917	Argument	"""\\""%s\\\\n\\"",\\n"""		1345133	1					
ANR	1345918	PrimaryExpression	"""\\""%s\\\\n\\"",\\n"""		1345133	0					
ANR	1345919	Argument	packedline		1345133	2					
ANR	1345920	Identifier	packedline		1345133	0					
ANR	1345921	IfStatement	if ( total_code_lines > 0 )		1345133	36					
ANR	1345922	Condition	total_code_lines > 0	420:8:14122:14141	1345133	0	True				
ANR	1345923	RelationalExpression	total_code_lines > 0		1345133	0		>			
ANR	1345924	Identifier	total_code_lines		1345133	0					
ANR	1345925	PrimaryExpression	0		1345133	1					
ANR	1345926	CompoundStatement		174:30:5722:5722	1345133	1					
ANR	1345927	ExpressionStatement	"fprintf ( outfile , ""0x00\\n"" )"	421:8:14154:14180	1345133	0	True				
ANR	1345928	CallExpression	"fprintf ( outfile , ""0x00\\n"" )"		1345133	0					
ANR	1345929	Callee	fprintf		1345133	0					
ANR	1345930	Identifier	fprintf		1345133	0					
ANR	1345931	ArgumentList	outfile		1345133	1					
ANR	1345932	Argument	outfile		1345133	0					
ANR	1345933	Identifier	outfile		1345133	0					
ANR	1345934	Argument	"""0x00\\n"""		1345133	1					
ANR	1345935	PrimaryExpression	"""0x00\\n"""		1345133	0					
ANR	1345936	ExpressionStatement	"fprintf ( outfile , ""};\\n"" )"	422:8:14190:14214	1345133	1	True				
ANR	1345937	CallExpression	"fprintf ( outfile , ""};\\n"" )"		1345133	0					
ANR	1345938	Callee	fprintf		1345133	0					
ANR	1345939	Identifier	fprintf		1345133	0					
ANR	1345940	ArgumentList	outfile		1345133	1					
ANR	1345941	Argument	outfile		1345133	0					
ANR	1345942	Identifier	outfile		1345133	0					
ANR	1345943	Argument	"""};\\n"""		1345133	1					
ANR	1345944	PrimaryExpression	"""};\\n"""		1345133	0					
ANR	1345945	IfStatement	if ( pdfr_debug_start_count != pdfr_debug_end_count )		1345133	37					
ANR	1345946	Condition	pdfr_debug_start_count != pdfr_debug_end_count	427:8:14319:14364	1345133	0	True				
ANR	1345947	EqualityExpression	pdfr_debug_start_count != pdfr_debug_end_count		1345133	0		!=			
ANR	1345948	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1345949	Identifier	pdfr_debug_end_count		1345133	1					
ANR	1345950	CompoundStatement		181:56:5945:5945	1345133	1					
ANR	1345951	ExpressionStatement	"printf ( ""ERROR: missing final PDFR_DEBUG terminating comment.\\n"" )"	428:8:14377:14442	1345133	0	True				
ANR	1345952	CallExpression	"printf ( ""ERROR: missing final PDFR_DEBUG terminating comment.\\n"" )"		1345133	0					
ANR	1345953	Callee	printf		1345133	0					
ANR	1345954	Identifier	printf		1345133	0					
ANR	1345955	ArgumentList	"""ERROR: missing final PDFR_DEBUG terminating comment.\\n"""		1345133	1					
ANR	1345956	Argument	"""ERROR: missing final PDFR_DEBUG terminating comment.\\n"""		1345133	0					
ANR	1345957	PrimaryExpression	"""ERROR: missing final PDFR_DEBUG terminating comment.\\n"""		1345133	0					
ANR	1345958	ExpressionStatement	fclose ( infile )	429:8:14452:14466	1345133	1	True				
ANR	1345959	CallExpression	fclose ( infile )		1345133	0					
ANR	1345960	Callee	fclose		1345133	0					
ANR	1345961	Identifier	fclose		1345133	0					
ANR	1345962	ArgumentList	infile		1345133	1					
ANR	1345963	Argument	infile		1345133	0					
ANR	1345964	Identifier	infile		1345133	0					
ANR	1345965	ExpressionStatement	fclose ( outfile )	430:8:14476:14491	1345133	2	True				
ANR	1345966	CallExpression	fclose ( outfile )		1345133	0					
ANR	1345967	Callee	fclose		1345133	0					
ANR	1345968	Identifier	fclose		1345133	0					
ANR	1345969	ArgumentList	outfile		1345133	1					
ANR	1345970	Argument	outfile		1345133	0					
ANR	1345971	Identifier	outfile		1345133	0					
ANR	1345972	ExpressionStatement	exit ( - 1 )	431:8:14501:14509	1345133	3	True				
ANR	1345973	CallExpression	exit ( - 1 )		1345133	0					
ANR	1345974	Callee	exit		1345133	0					
ANR	1345975	Identifier	exit		1345133	0					
ANR	1345976	ArgumentList	- 1		1345133	1					
ANR	1345977	Argument	- 1		1345133	0					
ANR	1345978	UnaryOperationExpression	- 1		1345133	0					
ANR	1345979	UnaryOperator	-		1345133	0					
ANR	1345980	PrimaryExpression	1		1345133	1					
ANR	1345981	ExpressionStatement	"printf ( ""  Processed %d lines of PostScript data.\\n"" , total_code_lines )"	436:4:14570:14640	1345133	38	True				
ANR	1345982	CallExpression	"printf ( ""  Processed %d lines of PostScript data.\\n"" , total_code_lines )"		1345133	0					
ANR	1345983	Callee	printf		1345133	0					
ANR	1345984	Identifier	printf		1345133	0					
ANR	1345985	ArgumentList	"""  Processed %d lines of PostScript data.\\n"""		1345133	1					
ANR	1345986	Argument	"""  Processed %d lines of PostScript data.\\n"""		1345133	0					
ANR	1345987	PrimaryExpression	"""  Processed %d lines of PostScript data.\\n"""		1345133	0					
ANR	1345988	Argument	total_code_lines		1345133	1					
ANR	1345989	Identifier	total_code_lines		1345133	0					
ANR	1345990	ExpressionStatement	"printf ( ""  %d bytes of PostScript data packed down to %d bytes.\\n"" , total_input_length , total_output_length )"	437:4:14647:14754	1345133	39	True				
ANR	1345991	CallExpression	"printf ( ""  %d bytes of PostScript data packed down to %d bytes.\\n"" , total_input_length , total_output_length )"		1345133	0					
ANR	1345992	Callee	printf		1345133	0					
ANR	1345993	Identifier	printf		1345133	0					
ANR	1345994	ArgumentList	"""  %d bytes of PostScript data packed down to %d bytes.\\n"""		1345133	1					
ANR	1345995	Argument	"""  %d bytes of PostScript data packed down to %d bytes.\\n"""		1345133	0					
ANR	1345996	PrimaryExpression	"""  %d bytes of PostScript data packed down to %d bytes.\\n"""		1345133	0					
ANR	1345997	Argument	total_input_length		1345133	1					
ANR	1345998	Identifier	total_input_length		1345133	0					
ANR	1345999	Argument	total_output_length		1345133	2					
ANR	1346000	Identifier	total_output_length		1345133	0					
ANR	1346001	ExpressionStatement	"printf ( ""  %d PDFR_DEBUG calls removed from the code.\\n"" , pdfr_debug_start_count )"	439:4:14787:14867	1345133	40	True				
ANR	1346002	CallExpression	"printf ( ""  %d PDFR_DEBUG calls removed from the code.\\n"" , pdfr_debug_start_count )"		1345133	0					
ANR	1346003	Callee	printf		1345133	0					
ANR	1346004	Identifier	printf		1345133	0					
ANR	1346005	ArgumentList	"""  %d PDFR_DEBUG calls removed from the code.\\n"""		1345133	1					
ANR	1346006	Argument	"""  %d PDFR_DEBUG calls removed from the code.\\n"""		1345133	0					
ANR	1346007	PrimaryExpression	"""  %d PDFR_DEBUG calls removed from the code.\\n"""		1345133	0					
ANR	1346008	Argument	pdfr_debug_start_count		1345133	1					
ANR	1346009	Identifier	pdfr_debug_start_count		1345133	0					
ANR	1346010	ExpressionStatement	fclose ( infile )	443:4:14926:14940	1345133	41	True				
ANR	1346011	CallExpression	fclose ( infile )		1345133	0					
ANR	1346012	Callee	fclose		1345133	0					
ANR	1346013	Identifier	fclose		1345133	0					
ANR	1346014	ArgumentList	infile		1345133	1					
ANR	1346015	Argument	infile		1345133	0					
ANR	1346016	Identifier	infile		1345133	0					
ANR	1346017	ExpressionStatement	fclose ( outfile )	444:4:14946:14961	1345133	42	True				
ANR	1346018	CallExpression	fclose ( outfile )		1345133	0					
ANR	1346019	Callee	fclose		1345133	0					
ANR	1346020	Identifier	fclose		1345133	0					
ANR	1346021	ArgumentList	outfile		1345133	1					
ANR	1346022	Argument	outfile		1345133	0					
ANR	1346023	Identifier	outfile		1345133	0					
ANR	1346024	ReturnStatement	return 0 ;	446:4:14968:14976	1345133	43	True				
ANR	1346025	PrimaryExpression	0		1345133	0					
ANR	1346026	ReturnType	int		1345133	1					
ANR	1346027	Identifier	main		1345133	2					
ANR	1346028	ParameterList	"int argc , char * argv [ ]"		1345133	3					
ANR	1346029	Parameter	int argc	246:5:8397:8404	1345133	0	True				
ANR	1346030	ParameterType	int		1345133	0					
ANR	1346031	Identifier	argc		1345133	1					
ANR	1346032	Parameter	char * argv [ ]	246:15:8407:8418	1345133	1	True				
ANR	1346033	ParameterType	char * [ ]		1345133	0					
ANR	1346034	Identifier	argv		1345133	1					
ANR	1346035	CFGEntryNode	ENTRY		1345133		True				
ANR	1346036	CFGExitNode	EXIT		1345133		True				
ANR	1346037	Symbol	packedline		1345133						
ANR	1346038	Symbol	OUTFILE_NAME_DEFAULT		1345133						
ANR	1346039	Symbol	total_code_lines		1345133						
ANR	1346040	Symbol	outfile		1345133						
ANR	1346041	Symbol	total_output_length		1345133						
ANR	1346042	Symbol	PDFR_DEBUG_END_COMMENT_2		1345133						
ANR	1346043	Symbol	PDFR_DEBUG_END_COMMENT_1		1345133						
ANR	1346044	Symbol	pdfr_debug_end_count		1345133						
ANR	1346045	Symbol	* argv		1345133						
ANR	1346046	Symbol	infile		1345133						
ANR	1346047	Symbol	total_comment_header_lines		1345133						
ANR	1346048	Symbol	argv		1345133						
ANR	1346049	Symbol	atarg		1345133						
ANR	1346050	Symbol	commentlen		1345133						
ANR	1346051	Symbol	unpackedlen		1345133						
ANR	1346052	Symbol	strlen		1345133						
ANR	1346053	Symbol	strncmp		1345133						
ANR	1346054	Symbol	output_comments		1345133						
ANR	1346055	Symbol	skip_this_line		1345133						
ANR	1346056	Symbol	infilename		1345133						
ANR	1346057	Symbol	strtoul		1345133						
ANR	1346058	Symbol	* * argv		1345133						
ANR	1346059	Symbol	* * atarg		1345133						
ANR	1346060	Symbol	getenv		1345133						
ANR	1346061	Symbol	readline		1345133						
ANR	1346062	Symbol	pack_postscript_line		1345133						
ANR	1346063	Symbol	argc		1345133						
ANR	1346064	Symbol	* atarg		1345133						
ANR	1346065	Symbol	fopen		1345133						
ANR	1346066	Symbol	NULL		1345133						
ANR	1346067	Symbol	PDFR_DEBUG_START_PREFIX		1345133						
ANR	1346068	Symbol	outfilename		1345133						
ANR	1346069	Symbol	false		1345133						
ANR	1346070	Symbol	total_input_length		1345133						
ANR	1346071	Symbol	env_source_date_epoch		1345133						
ANR	1346072	Symbol	pdfr_debug_start_count		1345133						
ANR	1346073	Symbol	ARRAY_NAME_DEFAULT		1345133						
ANR	1346074	Symbol	buildtime		1345133						
ANR	1346075	Symbol	INPUT_LINE_LENGTH_MAX		1345133						
ANR	1346076	Symbol	inputline		1345133						
ANR	1346077	Symbol	true		1345133						
ANR	1346078	Symbol	arrayname		1345133						
ANR	1346079	Symbol	comment		1345133						
ANR	1346080	Symbol	time		1345133						
ANR	1346081	Symbol	packedlen		1345133						
