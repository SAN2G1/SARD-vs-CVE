command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6668123	File	data/converged/CVE-2018-16863_ghostpdl/jpeg_jquant2.c								
ANR	6668124	DeclStmt									
ANR	6668125	Decl							UINT16	UINT16	histcell
ANR	6668126	DeclStmt									
ANR	6668127	Decl							histcell FAR	histcell FAR *	histptr
ANR	6668128	DeclStmt									
ANR	6668129	Decl							histcell	histcell [ HIST_C2_ELEMS ]	hist1d
ANR	6668130	DeclStmt									
ANR	6668131	Decl							hist1d FAR	hist1d FAR *	hist2d
ANR	6668132	DeclStmt									
ANR	6668133	Decl							hist2d	hist2d *	hist3d
ANR	6668134	DeclStmt									
ANR	6668135	Decl							INT16	INT16	FSERROR
ANR	6668136	DeclStmt									
ANR	6668137	Decl							int	int	LOCFSERROR
ANR	6668138	DeclStmt									
ANR	6668139	Decl							INT32	INT32	FSERROR
ANR	6668140	DeclStmt									
ANR	6668141	Decl							INT32	INT32	LOCFSERROR
ANR	6668142	DeclStmt									
ANR	6668143	Decl							FSERROR FAR	FSERROR FAR *	FSERRPTR
ANR	6668144	ClassDef	<unnamed>	194:8:8560:9236							
ANR	6668145	DeclStmt									
ANR	6668146	Decl							struct jpeg_color_quantizer	struct jpeg_color_quantizer	pub
ANR	6668147	DeclStmt									
ANR	6668148	Decl							JSAMPARRAY	JSAMPARRAY	sv_colormap
ANR	6668149	DeclStmt									
ANR	6668150	Decl							int	int	desired
ANR	6668151	DeclStmt									
ANR	6668152	Decl							hist3d	hist3d	histogram
ANR	6668153	DeclStmt									
ANR	6668154	Decl							boolean	boolean	needs_zeroed
ANR	6668155	DeclStmt									
ANR	6668156	Decl							FSERRPTR	FSERRPTR	fserrors
ANR	6668157	DeclStmt									
ANR	6668158	Decl							boolean	boolean	on_odd_row
ANR	6668159	DeclStmt									
ANR	6668160	Decl							int	int *	error_limiter
ANR	6668161	DeclStmt									
ANR	6668162	Decl									my_cquantizer
ANR	6668163	DeclStmt									
ANR	6668164	Decl							my_cquantizer	my_cquantizer *	my_cquantize_ptr
ANR	6668165	Function	prescan_quantize	225:0:9623:10404							
ANR	6668166	FunctionDef	"prescan_quantize (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6668165	0					
ANR	6668167	CompoundStatement		227:0:9728:10404	6668165	0					
ANR	6668168	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	228:2:9732:9796	6668165	0	True				
ANR	6668169	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6668165	0					
ANR	6668170	IdentifierDeclType	my_cquantize_ptr		6668165	0					
ANR	6668171	Identifier	cquantize		6668165	1					
ANR	6668172	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6668165	2		=			
ANR	6668173	Identifier	cquantize		6668165	0					
ANR	6668174	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6668165	1					
ANR	6668175	CastTarget	my_cquantize_ptr		6668165	0					
ANR	6668176	PtrMemberAccess	cinfo -> cquantize		6668165	1					
ANR	6668177	Identifier	cinfo		6668165	0					
ANR	6668178	Identifier	cquantize		6668165	1					
ANR	6668179	Statement	register	229:2:9800:9807	6668165	1	True				
ANR	6668180	IdentifierDeclStatement	JSAMPROW ptr ;	229:11:9809:9821	6668165	2	True				
ANR	6668181	IdentifierDecl	ptr		6668165	0					
ANR	6668182	IdentifierDeclType	JSAMPROW		6668165	0					
ANR	6668183	Identifier	ptr		6668165	1					
ANR	6668184	Statement	register	230:2:9825:9832	6668165	3	True				
ANR	6668185	IdentifierDeclStatement	histptr histp ;	230:11:9834:9847	6668165	4	True				
ANR	6668186	IdentifierDecl	histp		6668165	0					
ANR	6668187	IdentifierDeclType	histptr		6668165	0					
ANR	6668188	Identifier	histp		6668165	1					
ANR	6668189	Statement	register	231:2:9851:9858	6668165	5	True				
ANR	6668190	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	231:11:9860:9899	6668165	6	True				
ANR	6668191	IdentifierDecl	histogram = cquantize -> histogram		6668165	0					
ANR	6668192	IdentifierDeclType	hist3d		6668165	0					
ANR	6668193	Identifier	histogram		6668165	1					
ANR	6668194	AssignmentExpression	histogram = cquantize -> histogram		6668165	2		=			
ANR	6668195	Identifier	histogram		6668165	0					
ANR	6668196	PtrMemberAccess	cquantize -> histogram		6668165	1					
ANR	6668197	Identifier	cquantize		6668165	0					
ANR	6668198	Identifier	histogram		6668165	1					
ANR	6668199	IdentifierDeclStatement	int row ;	232:2:9903:9910	6668165	7	True				
ANR	6668200	IdentifierDecl	row		6668165	0					
ANR	6668201	IdentifierDeclType	int		6668165	0					
ANR	6668202	Identifier	row		6668165	1					
ANR	6668203	IdentifierDeclStatement	JDIMENSION col ;	233:2:9914:9928	6668165	8	True				
ANR	6668204	IdentifierDecl	col		6668165	0					
ANR	6668205	IdentifierDeclType	JDIMENSION		6668165	0					
ANR	6668206	Identifier	col		6668165	1					
ANR	6668207	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	234:2:9932:9970	6668165	9	True				
ANR	6668208	IdentifierDecl	width = cinfo -> output_width		6668165	0					
ANR	6668209	IdentifierDeclType	JDIMENSION		6668165	0					
ANR	6668210	Identifier	width		6668165	1					
ANR	6668211	AssignmentExpression	width = cinfo -> output_width		6668165	2		=			
ANR	6668212	Identifier	width		6668165	0					
ANR	6668213	PtrMemberAccess	cinfo -> output_width		6668165	1					
ANR	6668214	Identifier	cinfo		6668165	0					
ANR	6668215	Identifier	output_width		6668165	1					
ANR	6668216	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6668165	10					
ANR	6668217	ForInit	row = 0 ;	236:7:9980:9987	6668165	0	True				
ANR	6668218	AssignmentExpression	row = 0		6668165	0		=			
ANR	6668219	Identifier	row		6668165	0					
ANR	6668220	PrimaryExpression	0		6668165	1					
ANR	6668221	Condition	row < num_rows	236:16:9989:10002	6668165	1	True				
ANR	6668222	RelationalExpression	row < num_rows		6668165	0		<			
ANR	6668223	Identifier	row		6668165	0					
ANR	6668224	Identifier	num_rows		6668165	1					
ANR	6668225	PostIncDecOperationExpression	row ++	236:32:10005:10009	6668165	2	True				
ANR	6668226	Identifier	row		6668165	0					
ANR	6668227	IncDec	++		6668165	1					
ANR	6668228	CompoundStatement		10:39:283:283	6668165	3					
ANR	6668229	ExpressionStatement	ptr = input_buf [ row ]	237:4:10018:10038	6668165	0	True				
ANR	6668230	AssignmentExpression	ptr = input_buf [ row ]		6668165	0		=			
ANR	6668231	Identifier	ptr		6668165	0					
ANR	6668232	ArrayIndexing	input_buf [ row ]		6668165	1					
ANR	6668233	Identifier	input_buf		6668165	0					
ANR	6668234	Identifier	row		6668165	1					
ANR	6668235	ForStatement	for ( col = width ; col > 0 ; col -- )		6668165	1					
ANR	6668236	ForInit	col = width ;	238:9:10049:10060	6668165	0	True				
ANR	6668237	AssignmentExpression	col = width		6668165	0		=			
ANR	6668238	Identifier	col		6668165	0					
ANR	6668239	Identifier	width		6668165	1					
ANR	6668240	Condition	col > 0	238:22:10062:10068	6668165	1	True				
ANR	6668241	RelationalExpression	col > 0		6668165	0		>			
ANR	6668242	Identifier	col		6668165	0					
ANR	6668243	PrimaryExpression	0		6668165	1					
ANR	6668244	PostIncDecOperationExpression	col --	238:31:10071:10075	6668165	2	True				
ANR	6668245	Identifier	col		6668165	0					
ANR	6668246	IncDec	--		6668165	1					
ANR	6668247	CompoundStatement		12:38:349:349	6668165	3					
ANR	6668248	ExpressionStatement	histp = & histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]	240:6:10143:10268	6668165	0	True				
ANR	6668249	AssignmentExpression	histp = & histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6668165	0		=			
ANR	6668250	Identifier	histp		6668165	0					
ANR	6668251	UnaryOperationExpression	& histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6668165	1					
ANR	6668252	UnaryOperator	&		6668165	0					
ANR	6668253	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ] [ GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT ]		6668165	1					
ANR	6668254	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ] [ GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT ]		6668165	0					
ANR	6668255	ArrayIndexing	histogram [ GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT ]		6668165	0					
ANR	6668256	Identifier	histogram		6668165	0					
ANR	6668257	ShiftExpression	GETJSAMPLE ( ptr [ 0 ] ) >> C0_SHIFT		6668165	1		>>			
ANR	6668258	CallExpression	GETJSAMPLE ( ptr [ 0 ] )		6668165	0					
ANR	6668259	Callee	GETJSAMPLE		6668165	0					
ANR	6668260	Identifier	GETJSAMPLE		6668165	0					
ANR	6668261	ArgumentList	ptr [ 0 ]		6668165	1					
ANR	6668262	Argument	ptr [ 0 ]		6668165	0					
ANR	6668263	ArrayIndexing	ptr [ 0 ]		6668165	0					
ANR	6668264	Identifier	ptr		6668165	0					
ANR	6668265	PrimaryExpression	0		6668165	1					
ANR	6668266	Identifier	C0_SHIFT		6668165	1					
ANR	6668267	ShiftExpression	GETJSAMPLE ( ptr [ 1 ] ) >> C1_SHIFT		6668165	1		>>			
ANR	6668268	CallExpression	GETJSAMPLE ( ptr [ 1 ] )		6668165	0					
ANR	6668269	Callee	GETJSAMPLE		6668165	0					
ANR	6668270	Identifier	GETJSAMPLE		6668165	0					
ANR	6668271	ArgumentList	ptr [ 1 ]		6668165	1					
ANR	6668272	Argument	ptr [ 1 ]		6668165	0					
ANR	6668273	ArrayIndexing	ptr [ 1 ]		6668165	0					
ANR	6668274	Identifier	ptr		6668165	0					
ANR	6668275	PrimaryExpression	1		6668165	1					
ANR	6668276	Identifier	C1_SHIFT		6668165	1					
ANR	6668277	ShiftExpression	GETJSAMPLE ( ptr [ 2 ] ) >> C2_SHIFT		6668165	1		>>			
ANR	6668278	CallExpression	GETJSAMPLE ( ptr [ 2 ] )		6668165	0					
ANR	6668279	Callee	GETJSAMPLE		6668165	0					
ANR	6668280	Identifier	GETJSAMPLE		6668165	0					
ANR	6668281	ArgumentList	ptr [ 2 ]		6668165	1					
ANR	6668282	Argument	ptr [ 2 ]		6668165	0					
ANR	6668283	ArrayIndexing	ptr [ 2 ]		6668165	0					
ANR	6668284	Identifier	ptr		6668165	0					
ANR	6668285	PrimaryExpression	2		6668165	1					
ANR	6668286	Identifier	C2_SHIFT		6668165	1					
ANR	6668287	IfStatement	if ( ++ ( * histp ) <= 0 )		6668165	1					
ANR	6668288	Condition	++ ( * histp ) <= 0	244:10:10348:10362	6668165	0	True				
ANR	6668289	RelationalExpression	++ ( * histp ) <= 0		6668165	0		<=			
ANR	6668290	UnaryExpression	++ ( * histp )		6668165	0					
ANR	6668291	IncDec	++		6668165	0					
ANR	6668292	UnaryOperationExpression	* histp		6668165	1					
ANR	6668293	UnaryOperator	*		6668165	0					
ANR	6668294	Identifier	histp		6668165	1					
ANR	6668295	PrimaryExpression	0		6668165	1					
ANR	6668296	ExpressionStatement	( * histp ) --	245:1:10366:10376	6668165	1	True				
ANR	6668297	PostIncDecOperationExpression	( * histp ) --		6668165	0					
ANR	6668298	UnaryOperationExpression	* histp		6668165	0					
ANR	6668299	UnaryOperator	*		6668165	0					
ANR	6668300	Identifier	histp		6668165	1					
ANR	6668301	IncDec	--		6668165	1					
ANR	6668302	ExpressionStatement	ptr += 3	246:6:10384:10392	6668165	2	True				
ANR	6668303	AssignmentExpression	ptr += 3		6668165	0		+=			
ANR	6668304	Identifier	ptr		6668165	0					
ANR	6668305	PrimaryExpression	3		6668165	1					
ANR	6668306	Identifier	prescan_quantize		6668165	1					
ANR	6668307	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6668165	2					
ANR	6668308	Parameter	j_decompress_ptr cinfo	225:18:9641:9662	6668165	0	True				
ANR	6668309	ParameterType	j_decompress_ptr		6668165	0					
ANR	6668310	Identifier	cinfo		6668165	1					
ANR	6668311	Parameter	JSAMPARRAY input_buf	225:42:9665:9684	6668165	1	True				
ANR	6668312	ParameterType	JSAMPARRAY		6668165	0					
ANR	6668313	Identifier	input_buf		6668165	1					
ANR	6668314	Parameter	JSAMPARRAY output_buf	226:4:9691:9711	6668165	2	True				
ANR	6668315	ParameterType	JSAMPARRAY		6668165	0					
ANR	6668316	Identifier	output_buf		6668165	1					
ANR	6668317	Parameter	int num_rows	226:27:9714:9725	6668165	3	True				
ANR	6668318	ParameterType	int		6668165	0					
ANR	6668319	Identifier	num_rows		6668165	1					
ANR	6668320	CFGEntryNode	ENTRY		6668165		True				
ANR	6668321	CFGExitNode	EXIT		6668165		True				
ANR	6668322	Symbol	col		6668165						
ANR	6668323	Symbol	* * histogram		6668165						
ANR	6668324	Symbol	* row		6668165						
ANR	6668325	Symbol	C2_SHIFT		6668165						
ANR	6668326	Symbol	cquantize		6668165						
ANR	6668327	Symbol	* cquantize		6668165						
ANR	6668328	Symbol	cinfo -> output_width		6668165						
ANR	6668329	Symbol	* C1_SHIFT		6668165						
ANR	6668330	Symbol	cquantize -> histogram		6668165						
ANR	6668331	Symbol	* histp		6668165						
ANR	6668332	Symbol	num_rows		6668165						
ANR	6668333	Symbol	* ptr		6668165						
ANR	6668334	Symbol	C0_SHIFT		6668165						
ANR	6668335	Symbol	row		6668165						
ANR	6668336	Symbol	* cinfo		6668165						
ANR	6668337	Symbol	output_buf		6668165						
ANR	6668338	Symbol	* GETJSAMPLE		6668165						
ANR	6668339	Symbol	* C0_SHIFT		6668165						
ANR	6668340	Symbol	* * C0_SHIFT		6668165						
ANR	6668341	Symbol	GETJSAMPLE		6668165						
ANR	6668342	Symbol	histp		6668165						
ANR	6668343	Symbol	* histogram		6668165						
ANR	6668344	Symbol	ptr		6668165						
ANR	6668345	Symbol	histogram		6668165						
ANR	6668346	Symbol	cinfo -> cquantize		6668165						
ANR	6668347	Symbol	* * GETJSAMPLE		6668165						
ANR	6668348	Symbol	cinfo		6668165						
ANR	6668349	Symbol	width		6668165						
ANR	6668350	Symbol	input_buf		6668165						
ANR	6668351	Symbol	* input_buf		6668165						
ANR	6668352	Symbol	C1_SHIFT		6668165						
ANR	6668353	ClassDef	<unnamed>	259:8:10671:10964							
ANR	6668354	DeclStmt									
ANR	6668355	Decl							int	int	c0min
ANR	6668356	Decl							int	int	c0max
ANR	6668357	DeclStmt									
ANR	6668358	Decl							int	int	c1min
ANR	6668359	Decl							int	int	c1max
ANR	6668360	DeclStmt									
ANR	6668361	Decl							int	int	c2min
ANR	6668362	Decl							int	int	c2max
ANR	6668363	DeclStmt									
ANR	6668364	Decl							INT32	INT32	volume
ANR	6668365	DeclStmt									
ANR	6668366	Decl							long	long	colorcount
ANR	6668367	DeclStmt									
ANR	6668368	Decl									box
ANR	6668369	DeclStmt									
ANR	6668370	Decl							box	box *	boxptr
ANR	6668371	Function	find_biggest_color_pop	274:0:11005:11459							
ANR	6668372	FunctionDef	"find_biggest_color_pop (boxptr boxlist , int numboxes)"		6668371	0					
ANR	6668373	CompoundStatement		277:0:11172:11459	6668371	0					
ANR	6668374	Statement	register	278:2:11176:11183	6668371	0	True				
ANR	6668375	IdentifierDeclStatement	boxptr boxp ;	278:11:11185:11196	6668371	1	True				
ANR	6668376	IdentifierDecl	boxp		6668371	0					
ANR	6668377	IdentifierDeclType	boxptr		6668371	0					
ANR	6668378	Identifier	boxp		6668371	1					
ANR	6668379	Statement	register	279:2:11200:11207	6668371	2	True				
ANR	6668380	IdentifierDeclStatement	int i ;	279:11:11209:11214	6668371	3	True				
ANR	6668381	IdentifierDecl	i		6668371	0					
ANR	6668382	IdentifierDeclType	int		6668371	0					
ANR	6668383	Identifier	i		6668371	1					
ANR	6668384	Statement	register	280:2:11218:11225	6668371	4	True				
ANR	6668385	IdentifierDeclStatement	long maxc = 0 ;	280:11:11227:11240	6668371	5	True				
ANR	6668386	IdentifierDecl	maxc = 0		6668371	0					
ANR	6668387	IdentifierDeclType	long		6668371	0					
ANR	6668388	Identifier	maxc		6668371	1					
ANR	6668389	AssignmentExpression	maxc = 0		6668371	2		=			
ANR	6668390	Identifier	maxc		6668371	0					
ANR	6668391	PrimaryExpression	0		6668371	1					
ANR	6668392	IdentifierDeclStatement	boxptr which = NULL ;	281:2:11244:11263	6668371	6	True				
ANR	6668393	IdentifierDecl	which = NULL		6668371	0					
ANR	6668394	IdentifierDeclType	boxptr		6668371	0					
ANR	6668395	Identifier	which		6668371	1					
ANR	6668396	AssignmentExpression	which = NULL		6668371	2		=			
ANR	6668397	Identifier	NULL		6668371	0					
ANR	6668398	Identifier	NULL		6668371	1					
ANR	6668399	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		6668371	7					
ANR	6668400	ForInit	"i = 0 , boxp = boxlist ;"	283:7:11275:11296	6668371	0	True				
ANR	6668401	Expression	"i = 0 , boxp = boxlist"		6668371	0					
ANR	6668402	AssignmentExpression	i = 0		6668371	0		=			
ANR	6668403	Identifier	i		6668371	0					
ANR	6668404	PrimaryExpression	0		6668371	1					
ANR	6668405	AssignmentExpression	boxp = boxlist		6668371	1		=			
ANR	6668406	Identifier	boxp		6668371	0					
ANR	6668407	Identifier	boxlist		6668371	1					
ANR	6668408	Condition	i < numboxes	283:30:11298:11309	6668371	1	True				
ANR	6668409	RelationalExpression	i < numboxes		6668371	0		<			
ANR	6668410	Identifier	i		6668371	0					
ANR	6668411	Identifier	numboxes		6668371	1					
ANR	6668412	Expression	"i ++ , boxp ++"	283:44:11312:11322	6668371	2	True				
ANR	6668413	PostIncDecOperationExpression	i ++		6668371	0					
ANR	6668414	Identifier	i		6668371	0					
ANR	6668415	IncDec	++		6668371	1					
ANR	6668416	PostIncDecOperationExpression	boxp ++		6668371	1					
ANR	6668417	Identifier	boxp		6668371	0					
ANR	6668418	IncDec	++		6668371	1					
ANR	6668419	CompoundStatement		7:57:152:152	6668371	3					
ANR	6668420	IfStatement	if ( boxp -> colorcount > maxc && boxp -> volume > 0 )		6668371	0					
ANR	6668421	Condition	boxp -> colorcount > maxc && boxp -> volume > 0	284:8:11335:11377	6668371	0	True				
ANR	6668422	AndExpression	boxp -> colorcount > maxc && boxp -> volume > 0		6668371	0		&&			
ANR	6668423	RelationalExpression	boxp -> colorcount > maxc		6668371	0		>			
ANR	6668424	PtrMemberAccess	boxp -> colorcount		6668371	0					
ANR	6668425	Identifier	boxp		6668371	0					
ANR	6668426	Identifier	colorcount		6668371	1					
ANR	6668427	Identifier	maxc		6668371	1					
ANR	6668428	RelationalExpression	boxp -> volume > 0		6668371	1		>			
ANR	6668429	PtrMemberAccess	boxp -> volume		6668371	0					
ANR	6668430	Identifier	boxp		6668371	0					
ANR	6668431	Identifier	volume		6668371	1					
ANR	6668432	PrimaryExpression	0		6668371	1					
ANR	6668433	CompoundStatement		8:53:207:207	6668371	1					
ANR	6668434	ExpressionStatement	which = boxp	285:6:11388:11400	6668371	0	True				
ANR	6668435	AssignmentExpression	which = boxp		6668371	0		=			
ANR	6668436	Identifier	which		6668371	0					
ANR	6668437	Identifier	boxp		6668371	1					
ANR	6668438	ExpressionStatement	maxc = boxp -> colorcount	286:6:11408:11431	6668371	1	True				
ANR	6668439	AssignmentExpression	maxc = boxp -> colorcount		6668371	0		=			
ANR	6668440	Identifier	maxc		6668371	0					
ANR	6668441	PtrMemberAccess	boxp -> colorcount		6668371	1					
ANR	6668442	Identifier	boxp		6668371	0					
ANR	6668443	Identifier	colorcount		6668371	1					
ANR	6668444	ReturnStatement	return which ;	289:2:11445:11457	6668371	8	True				
ANR	6668445	Identifier	which		6668371	0					
ANR	6668446	Identifier	find_biggest_color_pop		6668371	1					
ANR	6668447	ParameterList	"boxptr boxlist , int numboxes"		6668371	2					
ANR	6668448	Parameter	boxptr boxlist	274:24:11029:11042	6668371	0	True				
ANR	6668449	ParameterType	boxptr		6668371	0					
ANR	6668450	Identifier	boxlist		6668371	1					
ANR	6668451	Parameter	int numboxes	274:40:11045:11056	6668371	1	True				
ANR	6668452	ParameterType	int		6668371	0					
ANR	6668453	Identifier	numboxes		6668371	1					
ANR	6668454	CFGEntryNode	ENTRY		6668371		True				
ANR	6668455	CFGExitNode	EXIT		6668371		True				
ANR	6668456	Symbol	numboxes		6668371						
ANR	6668457	Symbol	which		6668371						
ANR	6668458	Symbol	boxp -> colorcount		6668371						
ANR	6668459	Symbol	boxlist		6668371						
ANR	6668460	Symbol	NULL		6668371						
ANR	6668461	Symbol	boxp -> volume		6668371						
ANR	6668462	Symbol	* boxp		6668371						
ANR	6668463	Symbol	i		6668371						
ANR	6668464	Symbol	boxp		6668371						
ANR	6668465	Symbol	maxc		6668371						
ANR	6668466	Function	find_biggest_volume	294:0:11477:11900							
ANR	6668467	FunctionDef	"find_biggest_volume (boxptr boxlist , int numboxes)"		6668466	0					
ANR	6668468	CompoundStatement		297:0:11640:11900	6668466	0					
ANR	6668469	Statement	register	298:2:11644:11651	6668466	0	True				
ANR	6668470	IdentifierDeclStatement	boxptr boxp ;	298:11:11653:11664	6668466	1	True				
ANR	6668471	IdentifierDecl	boxp		6668466	0					
ANR	6668472	IdentifierDeclType	boxptr		6668466	0					
ANR	6668473	Identifier	boxp		6668466	1					
ANR	6668474	Statement	register	299:2:11668:11675	6668466	2	True				
ANR	6668475	IdentifierDeclStatement	int i ;	299:11:11677:11682	6668466	3	True				
ANR	6668476	IdentifierDecl	i		6668466	0					
ANR	6668477	IdentifierDeclType	int		6668466	0					
ANR	6668478	Identifier	i		6668466	1					
ANR	6668479	Statement	register	300:2:11686:11693	6668466	4	True				
ANR	6668480	IdentifierDeclStatement	INT32 maxv = 0 ;	300:11:11695:11709	6668466	5	True				
ANR	6668481	IdentifierDecl	maxv = 0		6668466	0					
ANR	6668482	IdentifierDeclType	INT32		6668466	0					
ANR	6668483	Identifier	maxv		6668466	1					
ANR	6668484	AssignmentExpression	maxv = 0		6668466	2		=			
ANR	6668485	Identifier	maxv		6668466	0					
ANR	6668486	PrimaryExpression	0		6668466	1					
ANR	6668487	IdentifierDeclStatement	boxptr which = NULL ;	301:2:11713:11732	6668466	6	True				
ANR	6668488	IdentifierDecl	which = NULL		6668466	0					
ANR	6668489	IdentifierDeclType	boxptr		6668466	0					
ANR	6668490	Identifier	which		6668466	1					
ANR	6668491	AssignmentExpression	which = NULL		6668466	2		=			
ANR	6668492	Identifier	NULL		6668466	0					
ANR	6668493	Identifier	NULL		6668466	1					
ANR	6668494	ForStatement	"for ( i = 0 , boxp = boxlist ; i < numboxes ; i ++ , boxp ++ )"		6668466	7					
ANR	6668495	ForInit	"i = 0 , boxp = boxlist ;"	303:7:11744:11765	6668466	0	True				
ANR	6668496	Expression	"i = 0 , boxp = boxlist"		6668466	0					
ANR	6668497	AssignmentExpression	i = 0		6668466	0		=			
ANR	6668498	Identifier	i		6668466	0					
ANR	6668499	PrimaryExpression	0		6668466	1					
ANR	6668500	AssignmentExpression	boxp = boxlist		6668466	1		=			
ANR	6668501	Identifier	boxp		6668466	0					
ANR	6668502	Identifier	boxlist		6668466	1					
ANR	6668503	Condition	i < numboxes	303:30:11767:11778	6668466	1	True				
ANR	6668504	RelationalExpression	i < numboxes		6668466	0		<			
ANR	6668505	Identifier	i		6668466	0					
ANR	6668506	Identifier	numboxes		6668466	1					
ANR	6668507	Expression	"i ++ , boxp ++"	303:44:11781:11791	6668466	2	True				
ANR	6668508	PostIncDecOperationExpression	i ++		6668466	0					
ANR	6668509	Identifier	i		6668466	0					
ANR	6668510	IncDec	++		6668466	1					
ANR	6668511	PostIncDecOperationExpression	boxp ++		6668466	1					
ANR	6668512	Identifier	boxp		6668466	0					
ANR	6668513	IncDec	++		6668466	1					
ANR	6668514	CompoundStatement		7:57:153:153	6668466	3					
ANR	6668515	IfStatement	if ( boxp -> volume > maxv )		6668466	0					
ANR	6668516	Condition	boxp -> volume > maxv	304:8:11804:11822	6668466	0	True				
ANR	6668517	RelationalExpression	boxp -> volume > maxv		6668466	0		>			
ANR	6668518	PtrMemberAccess	boxp -> volume		6668466	0					
ANR	6668519	Identifier	boxp		6668466	0					
ANR	6668520	Identifier	volume		6668466	1					
ANR	6668521	Identifier	maxv		6668466	1					
ANR	6668522	CompoundStatement		8:29:184:184	6668466	1					
ANR	6668523	ExpressionStatement	which = boxp	305:6:11833:11845	6668466	0	True				
ANR	6668524	AssignmentExpression	which = boxp		6668466	0		=			
ANR	6668525	Identifier	which		6668466	0					
ANR	6668526	Identifier	boxp		6668466	1					
ANR	6668527	ExpressionStatement	maxv = boxp -> volume	306:6:11853:11872	6668466	1	True				
ANR	6668528	AssignmentExpression	maxv = boxp -> volume		6668466	0		=			
ANR	6668529	Identifier	maxv		6668466	0					
ANR	6668530	PtrMemberAccess	boxp -> volume		6668466	1					
ANR	6668531	Identifier	boxp		6668466	0					
ANR	6668532	Identifier	volume		6668466	1					
ANR	6668533	ReturnStatement	return which ;	309:2:11886:11898	6668466	8	True				
ANR	6668534	Identifier	which		6668466	0					
ANR	6668535	Identifier	find_biggest_volume		6668466	1					
ANR	6668536	ParameterList	"boxptr boxlist , int numboxes"		6668466	2					
ANR	6668537	Parameter	boxptr boxlist	294:21:11498:11511	6668466	0	True				
ANR	6668538	ParameterType	boxptr		6668466	0					
ANR	6668539	Identifier	boxlist		6668466	1					
ANR	6668540	Parameter	int numboxes	294:37:11514:11525	6668466	1	True				
ANR	6668541	ParameterType	int		6668466	0					
ANR	6668542	Identifier	numboxes		6668466	1					
ANR	6668543	CFGEntryNode	ENTRY		6668466		True				
ANR	6668544	CFGExitNode	EXIT		6668466		True				
ANR	6668545	Symbol	numboxes		6668466						
ANR	6668546	Symbol	which		6668466						
ANR	6668547	Symbol	maxv		6668466						
ANR	6668548	Symbol	boxlist		6668466						
ANR	6668549	Symbol	NULL		6668466						
ANR	6668550	Symbol	boxp -> volume		6668466						
ANR	6668551	Symbol	* boxp		6668466						
ANR	6668552	Symbol	i		6668466						
ANR	6668553	Symbol	boxp		6668466						
ANR	6668554	Function	update_box	314:0:11916:15163							
ANR	6668555	FunctionDef	"update_box (j_decompress_ptr cinfo , boxptr boxp)"		6668554	0					
ANR	6668556	CompoundStatement		317:0:12086:15163	6668554	0					
ANR	6668557	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	318:2:12090:12154	6668554	0	True				
ANR	6668558	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6668554	0					
ANR	6668559	IdentifierDeclType	my_cquantize_ptr		6668554	0					
ANR	6668560	Identifier	cquantize		6668554	1					
ANR	6668561	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6668554	2		=			
ANR	6668562	Identifier	cquantize		6668554	0					
ANR	6668563	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6668554	1					
ANR	6668564	CastTarget	my_cquantize_ptr		6668554	0					
ANR	6668565	PtrMemberAccess	cinfo -> cquantize		6668554	1					
ANR	6668566	Identifier	cinfo		6668554	0					
ANR	6668567	Identifier	cquantize		6668554	1					
ANR	6668568	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	319:2:12158:12197	6668554	1	True				
ANR	6668569	IdentifierDecl	histogram = cquantize -> histogram		6668554	0					
ANR	6668570	IdentifierDeclType	hist3d		6668554	0					
ANR	6668571	Identifier	histogram		6668554	1					
ANR	6668572	AssignmentExpression	histogram = cquantize -> histogram		6668554	2		=			
ANR	6668573	Identifier	histogram		6668554	0					
ANR	6668574	PtrMemberAccess	cquantize -> histogram		6668554	1					
ANR	6668575	Identifier	cquantize		6668554	0					
ANR	6668576	Identifier	histogram		6668554	1					
ANR	6668577	IdentifierDeclStatement	histptr histp ;	320:2:12201:12214	6668554	2	True				
ANR	6668578	IdentifierDecl	histp		6668554	0					
ANR	6668579	IdentifierDeclType	histptr		6668554	0					
ANR	6668580	Identifier	histp		6668554	1					
ANR	6668581	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	321:2:12218:12230	6668554	3	True				
ANR	6668582	IdentifierDecl	c0		6668554	0					
ANR	6668583	IdentifierDeclType	int		6668554	0					
ANR	6668584	Identifier	c0		6668554	1					
ANR	6668585	IdentifierDecl	c1		6668554	1					
ANR	6668586	IdentifierDeclType	int		6668554	0					
ANR	6668587	Identifier	c1		6668554	1					
ANR	6668588	IdentifierDecl	c2		6668554	2					
ANR	6668589	IdentifierDeclType	int		6668554	0					
ANR	6668590	Identifier	c2		6668554	1					
ANR	6668591	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	322:2:12234:12273	6668554	4	True				
ANR	6668592	IdentifierDecl	c0min		6668554	0					
ANR	6668593	IdentifierDeclType	int		6668554	0					
ANR	6668594	Identifier	c0min		6668554	1					
ANR	6668595	IdentifierDecl	c0max		6668554	1					
ANR	6668596	IdentifierDeclType	int		6668554	0					
ANR	6668597	Identifier	c0max		6668554	1					
ANR	6668598	IdentifierDecl	c1min		6668554	2					
ANR	6668599	IdentifierDeclType	int		6668554	0					
ANR	6668600	Identifier	c1min		6668554	1					
ANR	6668601	IdentifierDecl	c1max		6668554	3					
ANR	6668602	IdentifierDeclType	int		6668554	0					
ANR	6668603	Identifier	c1max		6668554	1					
ANR	6668604	IdentifierDecl	c2min		6668554	4					
ANR	6668605	IdentifierDeclType	int		6668554	0					
ANR	6668606	Identifier	c2min		6668554	1					
ANR	6668607	IdentifierDecl	c2max		6668554	5					
ANR	6668608	IdentifierDeclType	int		6668554	0					
ANR	6668609	Identifier	c2max		6668554	1					
ANR	6668610	IdentifierDeclStatement	"INT32 dist0 , dist1 , dist2 ;"	323:2:12277:12300	6668554	5	True				
ANR	6668611	IdentifierDecl	dist0		6668554	0					
ANR	6668612	IdentifierDeclType	INT32		6668554	0					
ANR	6668613	Identifier	dist0		6668554	1					
ANR	6668614	IdentifierDecl	dist1		6668554	1					
ANR	6668615	IdentifierDeclType	INT32		6668554	0					
ANR	6668616	Identifier	dist1		6668554	1					
ANR	6668617	IdentifierDecl	dist2		6668554	2					
ANR	6668618	IdentifierDeclType	INT32		6668554	0					
ANR	6668619	Identifier	dist2		6668554	1					
ANR	6668620	IdentifierDeclStatement	long ccount ;	324:2:12304:12315	6668554	6	True				
ANR	6668621	IdentifierDecl	ccount		6668554	0					
ANR	6668622	IdentifierDeclType	long		6668554	0					
ANR	6668623	Identifier	ccount		6668554	1					
ANR	6668624	ExpressionStatement	c0min = boxp -> c0min	326:2:12322:12341	6668554	7	True				
ANR	6668625	AssignmentExpression	c0min = boxp -> c0min		6668554	0		=			
ANR	6668626	Identifier	c0min		6668554	0					
ANR	6668627	PtrMemberAccess	boxp -> c0min		6668554	1					
ANR	6668628	Identifier	boxp		6668554	0					
ANR	6668629	Identifier	c0min		6668554	1					
ANR	6668630	ExpressionStatement	c0max = boxp -> c0max	326:24:12344:12363	6668554	8	True				
ANR	6668631	AssignmentExpression	c0max = boxp -> c0max		6668554	0		=			
ANR	6668632	Identifier	c0max		6668554	0					
ANR	6668633	PtrMemberAccess	boxp -> c0max		6668554	1					
ANR	6668634	Identifier	boxp		6668554	0					
ANR	6668635	Identifier	c0max		6668554	1					
ANR	6668636	ExpressionStatement	c1min = boxp -> c1min	327:2:12367:12386	6668554	9	True				
ANR	6668637	AssignmentExpression	c1min = boxp -> c1min		6668554	0		=			
ANR	6668638	Identifier	c1min		6668554	0					
ANR	6668639	PtrMemberAccess	boxp -> c1min		6668554	1					
ANR	6668640	Identifier	boxp		6668554	0					
ANR	6668641	Identifier	c1min		6668554	1					
ANR	6668642	ExpressionStatement	c1max = boxp -> c1max	327:24:12389:12408	6668554	10	True				
ANR	6668643	AssignmentExpression	c1max = boxp -> c1max		6668554	0		=			
ANR	6668644	Identifier	c1max		6668554	0					
ANR	6668645	PtrMemberAccess	boxp -> c1max		6668554	1					
ANR	6668646	Identifier	boxp		6668554	0					
ANR	6668647	Identifier	c1max		6668554	1					
ANR	6668648	ExpressionStatement	c2min = boxp -> c2min	328:2:12412:12431	6668554	11	True				
ANR	6668649	AssignmentExpression	c2min = boxp -> c2min		6668554	0		=			
ANR	6668650	Identifier	c2min		6668554	0					
ANR	6668651	PtrMemberAccess	boxp -> c2min		6668554	1					
ANR	6668652	Identifier	boxp		6668554	0					
ANR	6668653	Identifier	c2min		6668554	1					
ANR	6668654	ExpressionStatement	c2max = boxp -> c2max	328:24:12434:12453	6668554	12	True				
ANR	6668655	AssignmentExpression	c2max = boxp -> c2max		6668554	0		=			
ANR	6668656	Identifier	c2max		6668554	0					
ANR	6668657	PtrMemberAccess	boxp -> c2max		6668554	1					
ANR	6668658	Identifier	boxp		6668554	0					
ANR	6668659	Identifier	c2max		6668554	1					
ANR	6668660	IfStatement	if ( c0max > c0min )		6668554	13					
ANR	6668661	Condition	c0max > c0min	330:6:12464:12476	6668554	0	True				
ANR	6668662	RelationalExpression	c0max > c0min		6668554	0		>			
ANR	6668663	Identifier	c0max		6668554	0					
ANR	6668664	Identifier	c0min		6668554	1					
ANR	6668665	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	1					
ANR	6668666	ForInit	c0 = c0min ;	331:9:12488:12498	6668554	0	True				
ANR	6668667	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6668668	Identifier	c0		6668554	0					
ANR	6668669	Identifier	c0min		6668554	1					
ANR	6668670	Condition	c0 <= c0max	331:21:12500:12510	6668554	1	True				
ANR	6668671	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6668672	Identifier	c0		6668554	0					
ANR	6668673	Identifier	c0max		6668554	1					
ANR	6668674	PostIncDecOperationExpression	c0 ++	331:34:12513:12516	6668554	2	True				
ANR	6668675	Identifier	c0		6668554	0					
ANR	6668676	IncDec	++		6668554	1					
ANR	6668677	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6668554	3					
ANR	6668678	ForInit	c1 = c1min ;	332:11:12530:12540	6668554	0	True				
ANR	6668679	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6668680	Identifier	c1		6668554	0					
ANR	6668681	Identifier	c1min		6668554	1					
ANR	6668682	Condition	c1 <= c1max	332:23:12542:12552	6668554	1	True				
ANR	6668683	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6668684	Identifier	c1		6668554	0					
ANR	6668685	Identifier	c1max		6668554	1					
ANR	6668686	PostIncDecOperationExpression	c1 ++	332:36:12555:12558	6668554	2	True				
ANR	6668687	Identifier	c1		6668554	0					
ANR	6668688	IncDec	++		6668554	1					
ANR	6668689	CompoundStatement		16:42:474:474	6668554	3					
ANR	6668690	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	333:1:12564:12598	6668554	0	True				
ANR	6668691	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6668554	0		=			
ANR	6668692	Identifier	histp		6668554	0					
ANR	6668693	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668694	UnaryOperator	&		6668554	0					
ANR	6668695	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668696	ArrayIndexing	histogram [ c0 ] [ c1 ]		6668554	0					
ANR	6668697	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6668698	Identifier	histogram		6668554	0					
ANR	6668699	Identifier	c0		6668554	1					
ANR	6668700	Identifier	c1		6668554	1					
ANR	6668701	Identifier	c2min		6668554	1					
ANR	6668702	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6668554	1					
ANR	6668703	ForInit	c2 = c2min ;	334:6:12606:12616	6668554	0	True				
ANR	6668704	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6668705	Identifier	c2		6668554	0					
ANR	6668706	Identifier	c2min		6668554	1					
ANR	6668707	Condition	c2 <= c2max	334:18:12618:12628	6668554	1	True				
ANR	6668708	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6668709	Identifier	c2		6668554	0					
ANR	6668710	Identifier	c2max		6668554	1					
ANR	6668711	PostIncDecOperationExpression	c2 ++	334:31:12631:12634	6668554	2	True				
ANR	6668712	Identifier	c2		6668554	0					
ANR	6668713	IncDec	++		6668554	1					
ANR	6668714	IfStatement	if ( * histp ++ != 0 )		6668554	3					
ANR	6668715	Condition	* histp ++ != 0	335:7:12644:12656	6668554	0	True				
ANR	6668716	EqualityExpression	* histp ++ != 0		6668554	0		!=			
ANR	6668717	UnaryOperationExpression	* histp ++		6668554	0					
ANR	6668718	UnaryOperator	*		6668554	0					
ANR	6668719	PostIncDecOperationExpression	histp ++		6668554	1					
ANR	6668720	Identifier	histp		6668554	0					
ANR	6668721	IncDec	++		6668554	1					
ANR	6668722	PrimaryExpression	0		6668554	1					
ANR	6668723	CompoundStatement		19:22:572:572	6668554	1					
ANR	6668724	ExpressionStatement	boxp -> c0min = c0min = c0	336:5:12666:12690	6668554	0	True				
ANR	6668725	AssignmentExpression	boxp -> c0min = c0min = c0		6668554	0		=			
ANR	6668726	PtrMemberAccess	boxp -> c0min		6668554	0					
ANR	6668727	Identifier	boxp		6668554	0					
ANR	6668728	Identifier	c0min		6668554	1					
ANR	6668729	AssignmentExpression	c0min = c0		6668554	1		=			
ANR	6668730	Identifier	c0min		6668554	0					
ANR	6668731	Identifier	c0		6668554	1					
ANR	6668732	GotoStatement	goto have_c0min ;	337:5:12697:12712	6668554	1	True				
ANR	6668733	Identifier	have_c0min		6668554	0					
ANR	6668734	Label	have_c0min :	340:1:12728:12738	6668554	14	True				
ANR	6668735	Identifier	have_c0min		6668554	0					
ANR	6668736	IfStatement	if ( c0max > c0min )		6668554	15					
ANR	6668737	Condition	c0max > c0min	341:6:12746:12758	6668554	0	True				
ANR	6668738	RelationalExpression	c0max > c0min		6668554	0		>			
ANR	6668739	Identifier	c0max		6668554	0					
ANR	6668740	Identifier	c0min		6668554	1					
ANR	6668741	ForStatement	for ( c0 = c0max ; c0 >= c0min ; c0 -- )		6668554	1					
ANR	6668742	ForInit	c0 = c0max ;	342:9:12770:12780	6668554	0	True				
ANR	6668743	AssignmentExpression	c0 = c0max		6668554	0		=			
ANR	6668744	Identifier	c0		6668554	0					
ANR	6668745	Identifier	c0max		6668554	1					
ANR	6668746	Condition	c0 >= c0min	342:21:12782:12792	6668554	1	True				
ANR	6668747	RelationalExpression	c0 >= c0min		6668554	0		>=			
ANR	6668748	Identifier	c0		6668554	0					
ANR	6668749	Identifier	c0min		6668554	1					
ANR	6668750	PostIncDecOperationExpression	c0 --	342:34:12795:12798	6668554	2	True				
ANR	6668751	Identifier	c0		6668554	0					
ANR	6668752	IncDec	--		6668554	1					
ANR	6668753	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6668554	3					
ANR	6668754	ForInit	c1 = c1min ;	343:11:12812:12822	6668554	0	True				
ANR	6668755	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6668756	Identifier	c1		6668554	0					
ANR	6668757	Identifier	c1min		6668554	1					
ANR	6668758	Condition	c1 <= c1max	343:23:12824:12834	6668554	1	True				
ANR	6668759	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6668760	Identifier	c1		6668554	0					
ANR	6668761	Identifier	c1max		6668554	1					
ANR	6668762	PostIncDecOperationExpression	c1 ++	343:36:12837:12840	6668554	2	True				
ANR	6668763	Identifier	c1		6668554	0					
ANR	6668764	IncDec	++		6668554	1					
ANR	6668765	CompoundStatement		27:42:756:756	6668554	3					
ANR	6668766	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	344:1:12846:12880	6668554	0	True				
ANR	6668767	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6668554	0		=			
ANR	6668768	Identifier	histp		6668554	0					
ANR	6668769	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668770	UnaryOperator	&		6668554	0					
ANR	6668771	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668772	ArrayIndexing	histogram [ c0 ] [ c1 ]		6668554	0					
ANR	6668773	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6668774	Identifier	histogram		6668554	0					
ANR	6668775	Identifier	c0		6668554	1					
ANR	6668776	Identifier	c1		6668554	1					
ANR	6668777	Identifier	c2min		6668554	1					
ANR	6668778	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6668554	1					
ANR	6668779	ForInit	c2 = c2min ;	345:6:12888:12898	6668554	0	True				
ANR	6668780	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6668781	Identifier	c2		6668554	0					
ANR	6668782	Identifier	c2min		6668554	1					
ANR	6668783	Condition	c2 <= c2max	345:18:12900:12910	6668554	1	True				
ANR	6668784	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6668785	Identifier	c2		6668554	0					
ANR	6668786	Identifier	c2max		6668554	1					
ANR	6668787	PostIncDecOperationExpression	c2 ++	345:31:12913:12916	6668554	2	True				
ANR	6668788	Identifier	c2		6668554	0					
ANR	6668789	IncDec	++		6668554	1					
ANR	6668790	IfStatement	if ( * histp ++ != 0 )		6668554	3					
ANR	6668791	Condition	* histp ++ != 0	346:7:12926:12938	6668554	0	True				
ANR	6668792	EqualityExpression	* histp ++ != 0		6668554	0		!=			
ANR	6668793	UnaryOperationExpression	* histp ++		6668554	0					
ANR	6668794	UnaryOperator	*		6668554	0					
ANR	6668795	PostIncDecOperationExpression	histp ++		6668554	1					
ANR	6668796	Identifier	histp		6668554	0					
ANR	6668797	IncDec	++		6668554	1					
ANR	6668798	PrimaryExpression	0		6668554	1					
ANR	6668799	CompoundStatement		30:22:854:854	6668554	1					
ANR	6668800	ExpressionStatement	boxp -> c0max = c0max = c0	347:5:12948:12972	6668554	0	True				
ANR	6668801	AssignmentExpression	boxp -> c0max = c0max = c0		6668554	0		=			
ANR	6668802	PtrMemberAccess	boxp -> c0max		6668554	0					
ANR	6668803	Identifier	boxp		6668554	0					
ANR	6668804	Identifier	c0max		6668554	1					
ANR	6668805	AssignmentExpression	c0max = c0		6668554	1		=			
ANR	6668806	Identifier	c0max		6668554	0					
ANR	6668807	Identifier	c0		6668554	1					
ANR	6668808	GotoStatement	goto have_c0max ;	348:5:12979:12994	6668554	1	True				
ANR	6668809	Identifier	have_c0max		6668554	0					
ANR	6668810	Label	have_c0max :	351:1:13010:13020	6668554	16	True				
ANR	6668811	Identifier	have_c0max		6668554	0					
ANR	6668812	IfStatement	if ( c1max > c1min )		6668554	17					
ANR	6668813	Condition	c1max > c1min	352:6:13028:13040	6668554	0	True				
ANR	6668814	RelationalExpression	c1max > c1min		6668554	0		>			
ANR	6668815	Identifier	c1max		6668554	0					
ANR	6668816	Identifier	c1min		6668554	1					
ANR	6668817	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6668554	1					
ANR	6668818	ForInit	c1 = c1min ;	353:9:13052:13062	6668554	0	True				
ANR	6668819	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6668820	Identifier	c1		6668554	0					
ANR	6668821	Identifier	c1min		6668554	1					
ANR	6668822	Condition	c1 <= c1max	353:21:13064:13074	6668554	1	True				
ANR	6668823	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6668824	Identifier	c1		6668554	0					
ANR	6668825	Identifier	c1max		6668554	1					
ANR	6668826	PostIncDecOperationExpression	c1 ++	353:34:13077:13080	6668554	2	True				
ANR	6668827	Identifier	c1		6668554	0					
ANR	6668828	IncDec	++		6668554	1					
ANR	6668829	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	3					
ANR	6668830	ForInit	c0 = c0min ;	354:11:13094:13104	6668554	0	True				
ANR	6668831	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6668832	Identifier	c0		6668554	0					
ANR	6668833	Identifier	c0min		6668554	1					
ANR	6668834	Condition	c0 <= c0max	354:23:13106:13116	6668554	1	True				
ANR	6668835	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6668836	Identifier	c0		6668554	0					
ANR	6668837	Identifier	c0max		6668554	1					
ANR	6668838	PostIncDecOperationExpression	c0 ++	354:36:13119:13122	6668554	2	True				
ANR	6668839	Identifier	c0		6668554	0					
ANR	6668840	IncDec	++		6668554	1					
ANR	6668841	CompoundStatement		38:42:1038:1038	6668554	3					
ANR	6668842	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	355:1:13128:13162	6668554	0	True				
ANR	6668843	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6668554	0		=			
ANR	6668844	Identifier	histp		6668554	0					
ANR	6668845	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668846	UnaryOperator	&		6668554	0					
ANR	6668847	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668848	ArrayIndexing	histogram [ c0 ] [ c1 ]		6668554	0					
ANR	6668849	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6668850	Identifier	histogram		6668554	0					
ANR	6668851	Identifier	c0		6668554	1					
ANR	6668852	Identifier	c1		6668554	1					
ANR	6668853	Identifier	c2min		6668554	1					
ANR	6668854	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6668554	1					
ANR	6668855	ForInit	c2 = c2min ;	356:6:13170:13180	6668554	0	True				
ANR	6668856	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6668857	Identifier	c2		6668554	0					
ANR	6668858	Identifier	c2min		6668554	1					
ANR	6668859	Condition	c2 <= c2max	356:18:13182:13192	6668554	1	True				
ANR	6668860	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6668861	Identifier	c2		6668554	0					
ANR	6668862	Identifier	c2max		6668554	1					
ANR	6668863	PostIncDecOperationExpression	c2 ++	356:31:13195:13198	6668554	2	True				
ANR	6668864	Identifier	c2		6668554	0					
ANR	6668865	IncDec	++		6668554	1					
ANR	6668866	IfStatement	if ( * histp ++ != 0 )		6668554	3					
ANR	6668867	Condition	* histp ++ != 0	357:7:13208:13220	6668554	0	True				
ANR	6668868	EqualityExpression	* histp ++ != 0		6668554	0		!=			
ANR	6668869	UnaryOperationExpression	* histp ++		6668554	0					
ANR	6668870	UnaryOperator	*		6668554	0					
ANR	6668871	PostIncDecOperationExpression	histp ++		6668554	1					
ANR	6668872	Identifier	histp		6668554	0					
ANR	6668873	IncDec	++		6668554	1					
ANR	6668874	PrimaryExpression	0		6668554	1					
ANR	6668875	CompoundStatement		41:22:1136:1136	6668554	1					
ANR	6668876	ExpressionStatement	boxp -> c1min = c1min = c1	358:5:13230:13254	6668554	0	True				
ANR	6668877	AssignmentExpression	boxp -> c1min = c1min = c1		6668554	0		=			
ANR	6668878	PtrMemberAccess	boxp -> c1min		6668554	0					
ANR	6668879	Identifier	boxp		6668554	0					
ANR	6668880	Identifier	c1min		6668554	1					
ANR	6668881	AssignmentExpression	c1min = c1		6668554	1		=			
ANR	6668882	Identifier	c1min		6668554	0					
ANR	6668883	Identifier	c1		6668554	1					
ANR	6668884	GotoStatement	goto have_c1min ;	359:5:13261:13276	6668554	1	True				
ANR	6668885	Identifier	have_c1min		6668554	0					
ANR	6668886	Label	have_c1min :	362:1:13292:13302	6668554	18	True				
ANR	6668887	Identifier	have_c1min		6668554	0					
ANR	6668888	IfStatement	if ( c1max > c1min )		6668554	19					
ANR	6668889	Condition	c1max > c1min	363:6:13310:13322	6668554	0	True				
ANR	6668890	RelationalExpression	c1max > c1min		6668554	0		>			
ANR	6668891	Identifier	c1max		6668554	0					
ANR	6668892	Identifier	c1min		6668554	1					
ANR	6668893	ForStatement	for ( c1 = c1max ; c1 >= c1min ; c1 -- )		6668554	1					
ANR	6668894	ForInit	c1 = c1max ;	364:9:13334:13344	6668554	0	True				
ANR	6668895	AssignmentExpression	c1 = c1max		6668554	0		=			
ANR	6668896	Identifier	c1		6668554	0					
ANR	6668897	Identifier	c1max		6668554	1					
ANR	6668898	Condition	c1 >= c1min	364:21:13346:13356	6668554	1	True				
ANR	6668899	RelationalExpression	c1 >= c1min		6668554	0		>=			
ANR	6668900	Identifier	c1		6668554	0					
ANR	6668901	Identifier	c1min		6668554	1					
ANR	6668902	PostIncDecOperationExpression	c1 --	364:34:13359:13362	6668554	2	True				
ANR	6668903	Identifier	c1		6668554	0					
ANR	6668904	IncDec	--		6668554	1					
ANR	6668905	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	3					
ANR	6668906	ForInit	c0 = c0min ;	365:11:13376:13386	6668554	0	True				
ANR	6668907	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6668908	Identifier	c0		6668554	0					
ANR	6668909	Identifier	c0min		6668554	1					
ANR	6668910	Condition	c0 <= c0max	365:23:13388:13398	6668554	1	True				
ANR	6668911	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6668912	Identifier	c0		6668554	0					
ANR	6668913	Identifier	c0max		6668554	1					
ANR	6668914	PostIncDecOperationExpression	c0 ++	365:36:13401:13404	6668554	2	True				
ANR	6668915	Identifier	c0		6668554	0					
ANR	6668916	IncDec	++		6668554	1					
ANR	6668917	CompoundStatement		49:42:1320:1320	6668554	3					
ANR	6668918	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	366:1:13410:13444	6668554	0	True				
ANR	6668919	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6668554	0		=			
ANR	6668920	Identifier	histp		6668554	0					
ANR	6668921	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668922	UnaryOperator	&		6668554	0					
ANR	6668923	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6668924	ArrayIndexing	histogram [ c0 ] [ c1 ]		6668554	0					
ANR	6668925	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6668926	Identifier	histogram		6668554	0					
ANR	6668927	Identifier	c0		6668554	1					
ANR	6668928	Identifier	c1		6668554	1					
ANR	6668929	Identifier	c2min		6668554	1					
ANR	6668930	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6668554	1					
ANR	6668931	ForInit	c2 = c2min ;	367:6:13452:13462	6668554	0	True				
ANR	6668932	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6668933	Identifier	c2		6668554	0					
ANR	6668934	Identifier	c2min		6668554	1					
ANR	6668935	Condition	c2 <= c2max	367:18:13464:13474	6668554	1	True				
ANR	6668936	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6668937	Identifier	c2		6668554	0					
ANR	6668938	Identifier	c2max		6668554	1					
ANR	6668939	PostIncDecOperationExpression	c2 ++	367:31:13477:13480	6668554	2	True				
ANR	6668940	Identifier	c2		6668554	0					
ANR	6668941	IncDec	++		6668554	1					
ANR	6668942	IfStatement	if ( * histp ++ != 0 )		6668554	3					
ANR	6668943	Condition	* histp ++ != 0	368:7:13490:13502	6668554	0	True				
ANR	6668944	EqualityExpression	* histp ++ != 0		6668554	0		!=			
ANR	6668945	UnaryOperationExpression	* histp ++		6668554	0					
ANR	6668946	UnaryOperator	*		6668554	0					
ANR	6668947	PostIncDecOperationExpression	histp ++		6668554	1					
ANR	6668948	Identifier	histp		6668554	0					
ANR	6668949	IncDec	++		6668554	1					
ANR	6668950	PrimaryExpression	0		6668554	1					
ANR	6668951	CompoundStatement		52:22:1418:1418	6668554	1					
ANR	6668952	ExpressionStatement	boxp -> c1max = c1max = c1	369:5:13512:13536	6668554	0	True				
ANR	6668953	AssignmentExpression	boxp -> c1max = c1max = c1		6668554	0		=			
ANR	6668954	PtrMemberAccess	boxp -> c1max		6668554	0					
ANR	6668955	Identifier	boxp		6668554	0					
ANR	6668956	Identifier	c1max		6668554	1					
ANR	6668957	AssignmentExpression	c1max = c1		6668554	1		=			
ANR	6668958	Identifier	c1max		6668554	0					
ANR	6668959	Identifier	c1		6668554	1					
ANR	6668960	GotoStatement	goto have_c1max ;	370:5:13543:13558	6668554	1	True				
ANR	6668961	Identifier	have_c1max		6668554	0					
ANR	6668962	Label	have_c1max :	373:1:13574:13584	6668554	20	True				
ANR	6668963	Identifier	have_c1max		6668554	0					
ANR	6668964	IfStatement	if ( c2max > c2min )		6668554	21					
ANR	6668965	Condition	c2max > c2min	374:6:13592:13604	6668554	0	True				
ANR	6668966	RelationalExpression	c2max > c2min		6668554	0		>			
ANR	6668967	Identifier	c2max		6668554	0					
ANR	6668968	Identifier	c2min		6668554	1					
ANR	6668969	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6668554	1					
ANR	6668970	ForInit	c2 = c2min ;	375:9:13616:13626	6668554	0	True				
ANR	6668971	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6668972	Identifier	c2		6668554	0					
ANR	6668973	Identifier	c2min		6668554	1					
ANR	6668974	Condition	c2 <= c2max	375:21:13628:13638	6668554	1	True				
ANR	6668975	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6668976	Identifier	c2		6668554	0					
ANR	6668977	Identifier	c2max		6668554	1					
ANR	6668978	PostIncDecOperationExpression	c2 ++	375:34:13641:13644	6668554	2	True				
ANR	6668979	Identifier	c2		6668554	0					
ANR	6668980	IncDec	++		6668554	1					
ANR	6668981	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	3					
ANR	6668982	ForInit	c0 = c0min ;	376:11:13658:13668	6668554	0	True				
ANR	6668983	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6668984	Identifier	c0		6668554	0					
ANR	6668985	Identifier	c0min		6668554	1					
ANR	6668986	Condition	c0 <= c0max	376:23:13670:13680	6668554	1	True				
ANR	6668987	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6668988	Identifier	c0		6668554	0					
ANR	6668989	Identifier	c0max		6668554	1					
ANR	6668990	PostIncDecOperationExpression	c0 ++	376:36:13683:13686	6668554	2	True				
ANR	6668991	Identifier	c0		6668554	0					
ANR	6668992	IncDec	++		6668554	1					
ANR	6668993	CompoundStatement		60:42:1602:1602	6668554	3					
ANR	6668994	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	377:1:13692:13726	6668554	0	True				
ANR	6668995	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		6668554	0		=			
ANR	6668996	Identifier	histp		6668554	0					
ANR	6668997	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		6668554	1					
ANR	6668998	UnaryOperator	&		6668554	0					
ANR	6668999	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		6668554	1					
ANR	6669000	ArrayIndexing	histogram [ c0 ] [ c1min ]		6668554	0					
ANR	6669001	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6669002	Identifier	histogram		6668554	0					
ANR	6669003	Identifier	c0		6668554	1					
ANR	6669004	Identifier	c1min		6668554	1					
ANR	6669005	Identifier	c2		6668554	1					
ANR	6669006	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		6668554	1					
ANR	6669007	ForInit	c1 = c1min ;	378:6:13734:13744	6668554	0	True				
ANR	6669008	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6669009	Identifier	c1		6668554	0					
ANR	6669010	Identifier	c1min		6668554	1					
ANR	6669011	Condition	c1 <= c1max	378:18:13746:13756	6668554	1	True				
ANR	6669012	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6669013	Identifier	c1		6668554	0					
ANR	6669014	Identifier	c1max		6668554	1					
ANR	6669015	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	378:31:13759:13786	6668554	2	True				
ANR	6669016	PostIncDecOperationExpression	c1 ++		6668554	0					
ANR	6669017	Identifier	c1		6668554	0					
ANR	6669018	IncDec	++		6668554	1					
ANR	6669019	AssignmentExpression	histp += HIST_C2_ELEMS		6668554	1		+=			
ANR	6669020	Identifier	histp		6668554	0					
ANR	6669021	Identifier	HIST_C2_ELEMS		6668554	1					
ANR	6669022	IfStatement	if ( * histp != 0 )		6668554	3					
ANR	6669023	Condition	* histp != 0	379:7:13796:13806	6668554	0	True				
ANR	6669024	EqualityExpression	* histp != 0		6668554	0		!=			
ANR	6669025	UnaryOperationExpression	* histp		6668554	0					
ANR	6669026	UnaryOperator	*		6668554	0					
ANR	6669027	Identifier	histp		6668554	1					
ANR	6669028	PrimaryExpression	0		6668554	1					
ANR	6669029	CompoundStatement		63:20:1722:1722	6668554	1					
ANR	6669030	ExpressionStatement	boxp -> c2min = c2min = c2	380:5:13816:13840	6668554	0	True				
ANR	6669031	AssignmentExpression	boxp -> c2min = c2min = c2		6668554	0		=			
ANR	6669032	PtrMemberAccess	boxp -> c2min		6668554	0					
ANR	6669033	Identifier	boxp		6668554	0					
ANR	6669034	Identifier	c2min		6668554	1					
ANR	6669035	AssignmentExpression	c2min = c2		6668554	1		=			
ANR	6669036	Identifier	c2min		6668554	0					
ANR	6669037	Identifier	c2		6668554	1					
ANR	6669038	GotoStatement	goto have_c2min ;	381:5:13847:13862	6668554	1	True				
ANR	6669039	Identifier	have_c2min		6668554	0					
ANR	6669040	Label	have_c2min :	384:1:13878:13888	6668554	22	True				
ANR	6669041	Identifier	have_c2min		6668554	0					
ANR	6669042	IfStatement	if ( c2max > c2min )		6668554	23					
ANR	6669043	Condition	c2max > c2min	385:6:13896:13908	6668554	0	True				
ANR	6669044	RelationalExpression	c2max > c2min		6668554	0		>			
ANR	6669045	Identifier	c2max		6668554	0					
ANR	6669046	Identifier	c2min		6668554	1					
ANR	6669047	ForStatement	for ( c2 = c2max ; c2 >= c2min ; c2 -- )		6668554	1					
ANR	6669048	ForInit	c2 = c2max ;	386:9:13920:13930	6668554	0	True				
ANR	6669049	AssignmentExpression	c2 = c2max		6668554	0		=			
ANR	6669050	Identifier	c2		6668554	0					
ANR	6669051	Identifier	c2max		6668554	1					
ANR	6669052	Condition	c2 >= c2min	386:21:13932:13942	6668554	1	True				
ANR	6669053	RelationalExpression	c2 >= c2min		6668554	0		>=			
ANR	6669054	Identifier	c2		6668554	0					
ANR	6669055	Identifier	c2min		6668554	1					
ANR	6669056	PostIncDecOperationExpression	c2 --	386:34:13945:13948	6668554	2	True				
ANR	6669057	Identifier	c2		6668554	0					
ANR	6669058	IncDec	--		6668554	1					
ANR	6669059	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	3					
ANR	6669060	ForInit	c0 = c0min ;	387:11:13962:13972	6668554	0	True				
ANR	6669061	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6669062	Identifier	c0		6668554	0					
ANR	6669063	Identifier	c0min		6668554	1					
ANR	6669064	Condition	c0 <= c0max	387:23:13974:13984	6668554	1	True				
ANR	6669065	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6669066	Identifier	c0		6668554	0					
ANR	6669067	Identifier	c0max		6668554	1					
ANR	6669068	PostIncDecOperationExpression	c0 ++	387:36:13987:13990	6668554	2	True				
ANR	6669069	Identifier	c0		6668554	0					
ANR	6669070	IncDec	++		6668554	1					
ANR	6669071	CompoundStatement		71:42:1906:1906	6668554	3					
ANR	6669072	ExpressionStatement	histp = & histogram [ c0 ] [ c1min ] [ c2 ]	388:1:13996:14030	6668554	0	True				
ANR	6669073	AssignmentExpression	histp = & histogram [ c0 ] [ c1min ] [ c2 ]		6668554	0		=			
ANR	6669074	Identifier	histp		6668554	0					
ANR	6669075	UnaryOperationExpression	& histogram [ c0 ] [ c1min ] [ c2 ]		6668554	1					
ANR	6669076	UnaryOperator	&		6668554	0					
ANR	6669077	ArrayIndexing	histogram [ c0 ] [ c1min ] [ c2 ]		6668554	1					
ANR	6669078	ArrayIndexing	histogram [ c0 ] [ c1min ]		6668554	0					
ANR	6669079	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6669080	Identifier	histogram		6668554	0					
ANR	6669081	Identifier	c0		6668554	1					
ANR	6669082	Identifier	c1min		6668554	1					
ANR	6669083	Identifier	c2		6668554	1					
ANR	6669084	ForStatement	"for ( c1 = c1min ; c1 <= c1max ; c1 ++ , histp += HIST_C2_ELEMS )"		6668554	1					
ANR	6669085	ForInit	c1 = c1min ;	389:6:14038:14048	6668554	0	True				
ANR	6669086	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6669087	Identifier	c1		6668554	0					
ANR	6669088	Identifier	c1min		6668554	1					
ANR	6669089	Condition	c1 <= c1max	389:18:14050:14060	6668554	1	True				
ANR	6669090	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6669091	Identifier	c1		6668554	0					
ANR	6669092	Identifier	c1max		6668554	1					
ANR	6669093	Expression	"c1 ++ , histp += HIST_C2_ELEMS"	389:31:14063:14090	6668554	2	True				
ANR	6669094	PostIncDecOperationExpression	c1 ++		6668554	0					
ANR	6669095	Identifier	c1		6668554	0					
ANR	6669096	IncDec	++		6668554	1					
ANR	6669097	AssignmentExpression	histp += HIST_C2_ELEMS		6668554	1		+=			
ANR	6669098	Identifier	histp		6668554	0					
ANR	6669099	Identifier	HIST_C2_ELEMS		6668554	1					
ANR	6669100	IfStatement	if ( * histp != 0 )		6668554	3					
ANR	6669101	Condition	* histp != 0	390:7:14100:14110	6668554	0	True				
ANR	6669102	EqualityExpression	* histp != 0		6668554	0		!=			
ANR	6669103	UnaryOperationExpression	* histp		6668554	0					
ANR	6669104	UnaryOperator	*		6668554	0					
ANR	6669105	Identifier	histp		6668554	1					
ANR	6669106	PrimaryExpression	0		6668554	1					
ANR	6669107	CompoundStatement		74:20:2026:2026	6668554	1					
ANR	6669108	ExpressionStatement	boxp -> c2max = c2max = c2	391:5:14120:14144	6668554	0	True				
ANR	6669109	AssignmentExpression	boxp -> c2max = c2max = c2		6668554	0		=			
ANR	6669110	PtrMemberAccess	boxp -> c2max		6668554	0					
ANR	6669111	Identifier	boxp		6668554	0					
ANR	6669112	Identifier	c2max		6668554	1					
ANR	6669113	AssignmentExpression	c2max = c2		6668554	1		=			
ANR	6669114	Identifier	c2max		6668554	0					
ANR	6669115	Identifier	c2		6668554	1					
ANR	6669116	GotoStatement	goto have_c2max ;	392:5:14151:14166	6668554	1	True				
ANR	6669117	Identifier	have_c2max		6668554	0					
ANR	6669118	Label	have_c2max :	395:1:14182:14192	6668554	24	True				
ANR	6669119	Identifier	have_c2max		6668554	0					
ANR	6669120	ExpressionStatement	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE	405:2:14626:14674	6668554	25	True				
ANR	6669121	AssignmentExpression	dist0 = ( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		6668554	0		=			
ANR	6669122	Identifier	dist0		6668554	0					
ANR	6669123	MultiplicativeExpression	( ( c0max - c0min ) << C0_SHIFT ) * C0_SCALE		6668554	1		*			
ANR	6669124	ShiftExpression	( c0max - c0min ) << C0_SHIFT		6668554	0		<<			
ANR	6669125	AdditiveExpression	c0max - c0min		6668554	0		-			
ANR	6669126	Identifier	c0max		6668554	0					
ANR	6669127	Identifier	c0min		6668554	1					
ANR	6669128	Identifier	C0_SHIFT		6668554	1					
ANR	6669129	Identifier	C0_SCALE		6668554	1					
ANR	6669130	ExpressionStatement	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE	406:2:14678:14726	6668554	26	True				
ANR	6669131	AssignmentExpression	dist1 = ( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		6668554	0		=			
ANR	6669132	Identifier	dist1		6668554	0					
ANR	6669133	MultiplicativeExpression	( ( c1max - c1min ) << C1_SHIFT ) * C1_SCALE		6668554	1		*			
ANR	6669134	ShiftExpression	( c1max - c1min ) << C1_SHIFT		6668554	0		<<			
ANR	6669135	AdditiveExpression	c1max - c1min		6668554	0		-			
ANR	6669136	Identifier	c1max		6668554	0					
ANR	6669137	Identifier	c1min		6668554	1					
ANR	6669138	Identifier	C1_SHIFT		6668554	1					
ANR	6669139	Identifier	C1_SCALE		6668554	1					
ANR	6669140	ExpressionStatement	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE	407:2:14730:14778	6668554	27	True				
ANR	6669141	AssignmentExpression	dist2 = ( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		6668554	0		=			
ANR	6669142	Identifier	dist2		6668554	0					
ANR	6669143	MultiplicativeExpression	( ( c2max - c2min ) << C2_SHIFT ) * C2_SCALE		6668554	1		*			
ANR	6669144	ShiftExpression	( c2max - c2min ) << C2_SHIFT		6668554	0		<<			
ANR	6669145	AdditiveExpression	c2max - c2min		6668554	0		-			
ANR	6669146	Identifier	c2max		6668554	0					
ANR	6669147	Identifier	c2min		6668554	1					
ANR	6669148	Identifier	C2_SHIFT		6668554	1					
ANR	6669149	Identifier	C2_SCALE		6668554	1					
ANR	6669150	ExpressionStatement	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2	408:2:14782:14836	6668554	28	True				
ANR	6669151	AssignmentExpression	boxp -> volume = dist0 * dist0 + dist1 * dist1 + dist2 * dist2		6668554	0		=			
ANR	6669152	PtrMemberAccess	boxp -> volume		6668554	0					
ANR	6669153	Identifier	boxp		6668554	0					
ANR	6669154	Identifier	volume		6668554	1					
ANR	6669155	AdditiveExpression	dist0 * dist0 + dist1 * dist1 + dist2 * dist2		6668554	1		+			
ANR	6669156	MultiplicativeExpression	dist0 * dist0		6668554	0		*			
ANR	6669157	Identifier	dist0		6668554	0					
ANR	6669158	Identifier	dist0		6668554	1					
ANR	6669159	AdditiveExpression	dist1 * dist1 + dist2 * dist2		6668554	1		+			
ANR	6669160	MultiplicativeExpression	dist1 * dist1		6668554	0		*			
ANR	6669161	Identifier	dist1		6668554	0					
ANR	6669162	Identifier	dist1		6668554	1					
ANR	6669163	MultiplicativeExpression	dist2 * dist2		6668554	1		*			
ANR	6669164	Identifier	dist2		6668554	0					
ANR	6669165	Identifier	dist2		6668554	1					
ANR	6669166	ExpressionStatement	ccount = 0	411:2:14907:14917	6668554	29	True				
ANR	6669167	AssignmentExpression	ccount = 0		6668554	0		=			
ANR	6669168	Identifier	ccount		6668554	0					
ANR	6669169	PrimaryExpression	0		6668554	1					
ANR	6669170	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6668554	30					
ANR	6669171	ForInit	c0 = c0min ;	412:7:14926:14936	6668554	0	True				
ANR	6669172	AssignmentExpression	c0 = c0min		6668554	0		=			
ANR	6669173	Identifier	c0		6668554	0					
ANR	6669174	Identifier	c0min		6668554	1					
ANR	6669175	Condition	c0 <= c0max	412:19:14938:14948	6668554	1	True				
ANR	6669176	RelationalExpression	c0 <= c0max		6668554	0		<=			
ANR	6669177	Identifier	c0		6668554	0					
ANR	6669178	Identifier	c0max		6668554	1					
ANR	6669179	PostIncDecOperationExpression	c0 ++	412:32:14951:14954	6668554	2	True				
ANR	6669180	Identifier	c0		6668554	0					
ANR	6669181	IncDec	++		6668554	1					
ANR	6669182	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6668554	3					
ANR	6669183	ForInit	c1 = c1min ;	413:9:14966:14976	6668554	0	True				
ANR	6669184	AssignmentExpression	c1 = c1min		6668554	0		=			
ANR	6669185	Identifier	c1		6668554	0					
ANR	6669186	Identifier	c1min		6668554	1					
ANR	6669187	Condition	c1 <= c1max	413:21:14978:14988	6668554	1	True				
ANR	6669188	RelationalExpression	c1 <= c1max		6668554	0		<=			
ANR	6669189	Identifier	c1		6668554	0					
ANR	6669190	Identifier	c1max		6668554	1					
ANR	6669191	PostIncDecOperationExpression	c1 ++	413:34:14991:14994	6668554	2	True				
ANR	6669192	Identifier	c1		6668554	0					
ANR	6669193	IncDec	++		6668554	1					
ANR	6669194	CompoundStatement		97:40:2910:2910	6668554	3					
ANR	6669195	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	414:6:15005:15039	6668554	0	True				
ANR	6669196	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6668554	0		=			
ANR	6669197	Identifier	histp		6668554	0					
ANR	6669198	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6669199	UnaryOperator	&		6668554	0					
ANR	6669200	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6668554	1					
ANR	6669201	ArrayIndexing	histogram [ c0 ] [ c1 ]		6668554	0					
ANR	6669202	ArrayIndexing	histogram [ c0 ]		6668554	0					
ANR	6669203	Identifier	histogram		6668554	0					
ANR	6669204	Identifier	c0		6668554	1					
ANR	6669205	Identifier	c1		6668554	1					
ANR	6669206	Identifier	c2min		6668554	1					
ANR	6669207	ForStatement	"for ( c2 = c2min ; c2 <= c2max ; c2 ++ , histp ++ )"		6668554	1					
ANR	6669208	ForInit	c2 = c2min ;	415:11:15052:15062	6668554	0	True				
ANR	6669209	AssignmentExpression	c2 = c2min		6668554	0		=			
ANR	6669210	Identifier	c2		6668554	0					
ANR	6669211	Identifier	c2min		6668554	1					
ANR	6669212	Condition	c2 <= c2max	415:23:15064:15074	6668554	1	True				
ANR	6669213	RelationalExpression	c2 <= c2max		6668554	0		<=			
ANR	6669214	Identifier	c2		6668554	0					
ANR	6669215	Identifier	c2max		6668554	1					
ANR	6669216	Expression	"c2 ++ , histp ++"	415:36:15077:15089	6668554	2	True				
ANR	6669217	PostIncDecOperationExpression	c2 ++		6668554	0					
ANR	6669218	Identifier	c2		6668554	0					
ANR	6669219	IncDec	++		6668554	1					
ANR	6669220	PostIncDecOperationExpression	histp ++		6668554	1					
ANR	6669221	Identifier	histp		6668554	0					
ANR	6669222	IncDec	++		6668554	1					
ANR	6669223	IfStatement	if ( * histp != 0 )		6668554	3					
ANR	6669224	Condition	* histp != 0	416:5:15097:15107	6668554	0	True				
ANR	6669225	EqualityExpression	* histp != 0		6668554	0		!=			
ANR	6669226	UnaryOperationExpression	* histp		6668554	0					
ANR	6669227	UnaryOperator	*		6668554	0					
ANR	6669228	Identifier	histp		6668554	1					
ANR	6669229	PrimaryExpression	0		6668554	1					
ANR	6669230	CompoundStatement		100:18:3023:3023	6668554	1					
ANR	6669231	ExpressionStatement	ccount ++	417:3:15115:15123	6668554	0	True				
ANR	6669232	PostIncDecOperationExpression	ccount ++		6668554	0					
ANR	6669233	Identifier	ccount		6668554	0					
ANR	6669234	IncDec	++		6668554	1					
ANR	6669235	ExpressionStatement	boxp -> colorcount = ccount	420:2:15136:15161	6668554	31	True				
ANR	6669236	AssignmentExpression	boxp -> colorcount = ccount		6668554	0		=			
ANR	6669237	PtrMemberAccess	boxp -> colorcount		6668554	0					
ANR	6669238	Identifier	boxp		6668554	0					
ANR	6669239	Identifier	colorcount		6668554	1					
ANR	6669240	Identifier	ccount		6668554	1					
ANR	6669241	Identifier	update_box		6668554	1					
ANR	6669242	ParameterList	"j_decompress_ptr cinfo , boxptr boxp"		6668554	2					
ANR	6669243	Parameter	j_decompress_ptr cinfo	314:12:11928:11949	6668554	0	True				
ANR	6669244	ParameterType	j_decompress_ptr		6668554	0					
ANR	6669245	Identifier	cinfo		6668554	1					
ANR	6669246	Parameter	boxptr boxp	314:36:11952:11962	6668554	1	True				
ANR	6669247	ParameterType	boxptr		6668554	0					
ANR	6669248	Identifier	boxp		6668554	1					
ANR	6669249	CFGEntryNode	ENTRY		6668554		True				
ANR	6669250	CFGExitNode	EXIT		6668554		True				
ANR	6669251	Symbol	* * histogram		6668554						
ANR	6669252	Symbol	C2_SHIFT		6668554						
ANR	6669253	Symbol	* c1min		6668554						
ANR	6669254	Symbol	c2min		6668554						
ANR	6669255	Symbol	C2_SCALE		6668554						
ANR	6669256	Symbol	cquantize		6668554						
ANR	6669257	Symbol	* cquantize		6668554						
ANR	6669258	Symbol	boxp -> c1max		6668554						
ANR	6669259	Symbol	cquantize -> histogram		6668554						
ANR	6669260	Symbol	c0min		6668554						
ANR	6669261	Symbol	boxp -> colorcount		6668554						
ANR	6669262	Symbol	* histp		6668554						
ANR	6669263	Symbol	C0_SHIFT		6668554						
ANR	6669264	Symbol	ccount		6668554						
ANR	6669265	Symbol	* * c0		6668554						
ANR	6669266	Symbol	c0max		6668554						
ANR	6669267	Symbol	* cinfo		6668554						
ANR	6669268	Symbol	c2max		6668554						
ANR	6669269	Symbol	boxp -> c0min		6668554						
ANR	6669270	Symbol	boxp -> c2min		6668554						
ANR	6669271	Symbol	C0_SCALE		6668554						
ANR	6669272	Symbol	histp		6668554						
ANR	6669273	Symbol	* boxp		6668554						
ANR	6669274	Symbol	* histogram		6668554						
ANR	6669275	Symbol	HIST_C2_ELEMS		6668554						
ANR	6669276	Symbol	boxp		6668554						
ANR	6669277	Symbol	boxp -> c0max		6668554						
ANR	6669278	Symbol	c0		6668554						
ANR	6669279	Symbol	c1		6668554						
ANR	6669280	Symbol	c2		6668554						
ANR	6669281	Symbol	c1min		6668554						
ANR	6669282	Symbol	histogram		6668554						
ANR	6669283	Symbol	* c0		6668554						
ANR	6669284	Symbol	boxp -> c2max		6668554						
ANR	6669285	Symbol	cinfo -> cquantize		6668554						
ANR	6669286	Symbol	C1_SCALE		6668554						
ANR	6669287	Symbol	cinfo		6668554						
ANR	6669288	Symbol	boxp -> volume		6668554						
ANR	6669289	Symbol	* c1		6668554						
ANR	6669290	Symbol	dist0		6668554						
ANR	6669291	Symbol	dist1		6668554						
ANR	6669292	Symbol	c1max		6668554						
ANR	6669293	Symbol	dist2		6668554						
ANR	6669294	Symbol	* histp ++		6668554						
ANR	6669295	Symbol	C1_SHIFT		6668554						
ANR	6669296	Symbol	boxp -> c1min		6668554						
ANR	6669297	Function	median_cut	425:0:15178:17532							
ANR	6669298	FunctionDef	"median_cut (j_decompress_ptr cinfo , boxptr boxlist , int numboxes , int desired_colors)"		6669297	0					
ANR	6669299	CompoundStatement		428:0:15346:17532	6669297	0					
ANR	6669300	IdentifierDeclStatement	"int n , lb ;"	429:2:15350:15358	6669297	0	True				
ANR	6669301	IdentifierDecl	n		6669297	0					
ANR	6669302	IdentifierDeclType	int		6669297	0					
ANR	6669303	Identifier	n		6669297	1					
ANR	6669304	IdentifierDecl	lb		6669297	1					
ANR	6669305	IdentifierDeclType	int		6669297	0					
ANR	6669306	Identifier	lb		6669297	1					
ANR	6669307	IdentifierDeclStatement	"int c0 , c1 , c2 , cmax ;"	430:2:15362:15379	6669297	1	True				
ANR	6669308	IdentifierDecl	c0		6669297	0					
ANR	6669309	IdentifierDeclType	int		6669297	0					
ANR	6669310	Identifier	c0		6669297	1					
ANR	6669311	IdentifierDecl	c1		6669297	1					
ANR	6669312	IdentifierDeclType	int		6669297	0					
ANR	6669313	Identifier	c1		6669297	1					
ANR	6669314	IdentifierDecl	c2		6669297	2					
ANR	6669315	IdentifierDeclType	int		6669297	0					
ANR	6669316	Identifier	c2		6669297	1					
ANR	6669317	IdentifierDecl	cmax		6669297	3					
ANR	6669318	IdentifierDeclType	int		6669297	0					
ANR	6669319	Identifier	cmax		6669297	1					
ANR	6669320	Statement	register	431:2:15383:15390	6669297	2	True				
ANR	6669321	IdentifierDeclStatement	"boxptr b1 , b2 ;"	431:11:15392:15404	6669297	3	True				
ANR	6669322	IdentifierDecl	b1		6669297	0					
ANR	6669323	IdentifierDeclType	boxptr		6669297	0					
ANR	6669324	Identifier	b1		6669297	1					
ANR	6669325	IdentifierDecl	b2		6669297	1					
ANR	6669326	IdentifierDeclType	boxptr		6669297	0					
ANR	6669327	Identifier	b2		6669297	1					
ANR	6669328	WhileStatement	while ( numboxes < desired_colors )		6669297	4					
ANR	6669329	Condition	numboxes < desired_colors	433:9:15416:15440	6669297	0	True				
ANR	6669330	RelationalExpression	numboxes < desired_colors		6669297	0		<			
ANR	6669331	Identifier	numboxes		6669297	0					
ANR	6669332	Identifier	desired_colors		6669297	1					
ANR	6669333	CompoundStatement		6:36:96:96	6669297	1					
ANR	6669334	IfStatement	if ( numboxes * 2 <= desired_colors )		6669297	0					
ANR	6669335	Condition	numboxes * 2 <= desired_colors	437:8:15561:15588	6669297	0	True				
ANR	6669336	RelationalExpression	numboxes * 2 <= desired_colors		6669297	0		<=			
ANR	6669337	MultiplicativeExpression	numboxes * 2		6669297	0		*			
ANR	6669338	Identifier	numboxes		6669297	0					
ANR	6669339	PrimaryExpression	2		6669297	1					
ANR	6669340	Identifier	desired_colors		6669297	1					
ANR	6669341	CompoundStatement		10:38:244:244	6669297	1					
ANR	6669342	ExpressionStatement	"b1 = find_biggest_color_pop ( boxlist , numboxes )"	438:6:15599:15645	6669297	0	True				
ANR	6669343	AssignmentExpression	"b1 = find_biggest_color_pop ( boxlist , numboxes )"		6669297	0		=			
ANR	6669344	Identifier	b1		6669297	0					
ANR	6669345	CallExpression	"find_biggest_color_pop ( boxlist , numboxes )"		6669297	1					
ANR	6669346	Callee	find_biggest_color_pop		6669297	0					
ANR	6669347	Identifier	find_biggest_color_pop		6669297	0					
ANR	6669348	ArgumentList	boxlist		6669297	1					
ANR	6669349	Argument	boxlist		6669297	0					
ANR	6669350	Identifier	boxlist		6669297	0					
ANR	6669351	Argument	numboxes		6669297	1					
ANR	6669352	Identifier	numboxes		6669297	0					
ANR	6669353	ElseStatement	else		6669297	0					
ANR	6669354	CompoundStatement		12:11:311:311	6669297	0					
ANR	6669355	ExpressionStatement	"b1 = find_biggest_volume ( boxlist , numboxes )"	440:6:15666:15709	6669297	0	True				
ANR	6669356	AssignmentExpression	"b1 = find_biggest_volume ( boxlist , numboxes )"		6669297	0		=			
ANR	6669357	Identifier	b1		6669297	0					
ANR	6669358	CallExpression	"find_biggest_volume ( boxlist , numboxes )"		6669297	1					
ANR	6669359	Callee	find_biggest_volume		6669297	0					
ANR	6669360	Identifier	find_biggest_volume		6669297	0					
ANR	6669361	ArgumentList	boxlist		6669297	1					
ANR	6669362	Argument	boxlist		6669297	0					
ANR	6669363	Identifier	boxlist		6669297	0					
ANR	6669364	Argument	numboxes		6669297	1					
ANR	6669365	Identifier	numboxes		6669297	0					
ANR	6669366	IfStatement	if ( b1 == NULL )		6669297	1					
ANR	6669367	Condition	b1 == NULL	442:8:15725:15734	6669297	0	True				
ANR	6669368	EqualityExpression	b1 == NULL		6669297	0		==			
ANR	6669369	Identifier	b1		6669297	0					
ANR	6669370	Identifier	NULL		6669297	1					
ANR	6669371	BreakStatement	break ;	443:6:15776:15781	6669297	1	True				
ANR	6669372	ExpressionStatement	b2 = & boxlist [ numboxes ]	444:4:15787:15810	6669297	2	True				
ANR	6669373	AssignmentExpression	b2 = & boxlist [ numboxes ]		6669297	0		=			
ANR	6669374	Identifier	b2		6669297	0					
ANR	6669375	UnaryOperationExpression	& boxlist [ numboxes ]		6669297	1					
ANR	6669376	UnaryOperator	&		6669297	0					
ANR	6669377	ArrayIndexing	boxlist [ numboxes ]		6669297	1					
ANR	6669378	Identifier	boxlist		6669297	0					
ANR	6669379	Identifier	numboxes		6669297	1					
ANR	6669380	ExpressionStatement	b2 -> c0max = b1 -> c0max	446:4:15892:15913	6669297	3	True				
ANR	6669381	AssignmentExpression	b2 -> c0max = b1 -> c0max		6669297	0		=			
ANR	6669382	PtrMemberAccess	b2 -> c0max		6669297	0					
ANR	6669383	Identifier	b2		6669297	0					
ANR	6669384	Identifier	c0max		6669297	1					
ANR	6669385	PtrMemberAccess	b1 -> c0max		6669297	1					
ANR	6669386	Identifier	b1		6669297	0					
ANR	6669387	Identifier	c0max		6669297	1					
ANR	6669388	ExpressionStatement	b2 -> c1max = b1 -> c1max	446:27:15915:15936	6669297	4	True				
ANR	6669389	AssignmentExpression	b2 -> c1max = b1 -> c1max		6669297	0		=			
ANR	6669390	PtrMemberAccess	b2 -> c1max		6669297	0					
ANR	6669391	Identifier	b2		6669297	0					
ANR	6669392	Identifier	c1max		6669297	1					
ANR	6669393	PtrMemberAccess	b1 -> c1max		6669297	1					
ANR	6669394	Identifier	b1		6669297	0					
ANR	6669395	Identifier	c1max		6669297	1					
ANR	6669396	ExpressionStatement	b2 -> c2max = b1 -> c2max	446:50:15938:15959	6669297	5	True				
ANR	6669397	AssignmentExpression	b2 -> c2max = b1 -> c2max		6669297	0		=			
ANR	6669398	PtrMemberAccess	b2 -> c2max		6669297	0					
ANR	6669399	Identifier	b2		6669297	0					
ANR	6669400	Identifier	c2max		6669297	1					
ANR	6669401	PtrMemberAccess	b1 -> c2max		6669297	1					
ANR	6669402	Identifier	b1		6669297	0					
ANR	6669403	Identifier	c2max		6669297	1					
ANR	6669404	ExpressionStatement	b2 -> c0min = b1 -> c0min	447:4:15965:15986	6669297	6	True				
ANR	6669405	AssignmentExpression	b2 -> c0min = b1 -> c0min		6669297	0		=			
ANR	6669406	PtrMemberAccess	b2 -> c0min		6669297	0					
ANR	6669407	Identifier	b2		6669297	0					
ANR	6669408	Identifier	c0min		6669297	1					
ANR	6669409	PtrMemberAccess	b1 -> c0min		6669297	1					
ANR	6669410	Identifier	b1		6669297	0					
ANR	6669411	Identifier	c0min		6669297	1					
ANR	6669412	ExpressionStatement	b2 -> c1min = b1 -> c1min	447:27:15988:16009	6669297	7	True				
ANR	6669413	AssignmentExpression	b2 -> c1min = b1 -> c1min		6669297	0		=			
ANR	6669414	PtrMemberAccess	b2 -> c1min		6669297	0					
ANR	6669415	Identifier	b2		6669297	0					
ANR	6669416	Identifier	c1min		6669297	1					
ANR	6669417	PtrMemberAccess	b1 -> c1min		6669297	1					
ANR	6669418	Identifier	b1		6669297	0					
ANR	6669419	Identifier	c1min		6669297	1					
ANR	6669420	ExpressionStatement	b2 -> c2min = b1 -> c2min	447:50:16011:16032	6669297	8	True				
ANR	6669421	AssignmentExpression	b2 -> c2min = b1 -> c2min		6669297	0		=			
ANR	6669422	PtrMemberAccess	b2 -> c2min		6669297	0					
ANR	6669423	Identifier	b2		6669297	0					
ANR	6669424	Identifier	c2min		6669297	1					
ANR	6669425	PtrMemberAccess	b1 -> c2min		6669297	1					
ANR	6669426	Identifier	b1		6669297	0					
ANR	6669427	Identifier	c2min		6669297	1					
ANR	6669428	ExpressionStatement	c0 = ( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE	452:4:16195:16248	6669297	9	True				
ANR	6669429	AssignmentExpression	c0 = ( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE		6669297	0		=			
ANR	6669430	Identifier	c0		6669297	0					
ANR	6669431	MultiplicativeExpression	( ( b1 -> c0max - b1 -> c0min ) << C0_SHIFT ) * C0_SCALE		6669297	1		*			
ANR	6669432	ShiftExpression	( b1 -> c0max - b1 -> c0min ) << C0_SHIFT		6669297	0		<<			
ANR	6669433	AdditiveExpression	b1 -> c0max - b1 -> c0min		6669297	0		-			
ANR	6669434	PtrMemberAccess	b1 -> c0max		6669297	0					
ANR	6669435	Identifier	b1		6669297	0					
ANR	6669436	Identifier	c0max		6669297	1					
ANR	6669437	PtrMemberAccess	b1 -> c0min		6669297	1					
ANR	6669438	Identifier	b1		6669297	0					
ANR	6669439	Identifier	c0min		6669297	1					
ANR	6669440	Identifier	C0_SHIFT		6669297	1					
ANR	6669441	Identifier	C0_SCALE		6669297	1					
ANR	6669442	ExpressionStatement	c1 = ( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE	453:4:16254:16307	6669297	10	True				
ANR	6669443	AssignmentExpression	c1 = ( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE		6669297	0		=			
ANR	6669444	Identifier	c1		6669297	0					
ANR	6669445	MultiplicativeExpression	( ( b1 -> c1max - b1 -> c1min ) << C1_SHIFT ) * C1_SCALE		6669297	1		*			
ANR	6669446	ShiftExpression	( b1 -> c1max - b1 -> c1min ) << C1_SHIFT		6669297	0		<<			
ANR	6669447	AdditiveExpression	b1 -> c1max - b1 -> c1min		6669297	0		-			
ANR	6669448	PtrMemberAccess	b1 -> c1max		6669297	0					
ANR	6669449	Identifier	b1		6669297	0					
ANR	6669450	Identifier	c1max		6669297	1					
ANR	6669451	PtrMemberAccess	b1 -> c1min		6669297	1					
ANR	6669452	Identifier	b1		6669297	0					
ANR	6669453	Identifier	c1min		6669297	1					
ANR	6669454	Identifier	C1_SHIFT		6669297	1					
ANR	6669455	Identifier	C1_SCALE		6669297	1					
ANR	6669456	ExpressionStatement	c2 = ( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE	454:4:16313:16366	6669297	11	True				
ANR	6669457	AssignmentExpression	c2 = ( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE		6669297	0		=			
ANR	6669458	Identifier	c2		6669297	0					
ANR	6669459	MultiplicativeExpression	( ( b1 -> c2max - b1 -> c2min ) << C2_SHIFT ) * C2_SCALE		6669297	1		*			
ANR	6669460	ShiftExpression	( b1 -> c2max - b1 -> c2min ) << C2_SHIFT		6669297	0		<<			
ANR	6669461	AdditiveExpression	b1 -> c2max - b1 -> c2min		6669297	0		-			
ANR	6669462	PtrMemberAccess	b1 -> c2max		6669297	0					
ANR	6669463	Identifier	b1		6669297	0					
ANR	6669464	Identifier	c2max		6669297	1					
ANR	6669465	PtrMemberAccess	b1 -> c2min		6669297	1					
ANR	6669466	Identifier	b1		6669297	0					
ANR	6669467	Identifier	c2min		6669297	1					
ANR	6669468	Identifier	C2_SHIFT		6669297	1					
ANR	6669469	Identifier	C2_SCALE		6669297	1					
ANR	6669470	ExpressionStatement	cmax = c1	459:4:16546:16555	6669297	12	True				
ANR	6669471	AssignmentExpression	cmax = c1		6669297	0		=			
ANR	6669472	Identifier	cmax		6669297	0					
ANR	6669473	Identifier	c1		6669297	1					
ANR	6669474	ExpressionStatement	n = 1	459:15:16557:16562	6669297	13	True				
ANR	6669475	AssignmentExpression	n = 1		6669297	0		=			
ANR	6669476	Identifier	n		6669297	0					
ANR	6669477	PrimaryExpression	1		6669297	1					
ANR	6669478	IfStatement	if ( c0 > cmax )		6669297	14					
ANR	6669479	Condition	c0 > cmax	460:8:16572:16580	6669297	0	True				
ANR	6669480	RelationalExpression	c0 > cmax		6669297	0		>			
ANR	6669481	Identifier	c0		6669297	0					
ANR	6669482	Identifier	cmax		6669297	1					
ANR	6669483	CompoundStatement		33:19:1236:1236	6669297	1					
ANR	6669484	ExpressionStatement	cmax = c0	460:21:16585:16594	6669297	0	True				
ANR	6669485	AssignmentExpression	cmax = c0		6669297	0		=			
ANR	6669486	Identifier	cmax		6669297	0					
ANR	6669487	Identifier	c0		6669297	1					
ANR	6669488	ExpressionStatement	n = 0	460:32:16596:16601	6669297	1	True				
ANR	6669489	AssignmentExpression	n = 0		6669297	0		=			
ANR	6669490	Identifier	n		6669297	0					
ANR	6669491	PrimaryExpression	0		6669297	1					
ANR	6669492	IfStatement	if ( c2 > cmax )		6669297	15					
ANR	6669493	Condition	c2 > cmax	461:8:16613:16621	6669297	0	True				
ANR	6669494	RelationalExpression	c2 > cmax		6669297	0		>			
ANR	6669495	Identifier	c2		6669297	0					
ANR	6669496	Identifier	cmax		6669297	1					
ANR	6669497	CompoundStatement		34:19:1277:1277	6669297	1					
ANR	6669498	ExpressionStatement	n = 2	461:21:16626:16631	6669297	0	True				
ANR	6669499	AssignmentExpression	n = 2		6669297	0		=			
ANR	6669500	Identifier	n		6669297	0					
ANR	6669501	PrimaryExpression	2		6669297	1					
ANR	6669502	SwitchStatement	switch ( n )		6669297	16					
ANR	6669503	Condition	n	473:12:17062:17062	6669297	0	True				
ANR	6669504	Identifier	n		6669297	0					
ANR	6669505	CompoundStatement		46:15:1718:1718	6669297	1					
ANR	6669506	Label	case 0 :	474:4:17071:17077	6669297	0	True				
ANR	6669507	ExpressionStatement	lb = ( b1 -> c0max + b1 -> c0min ) / 2	475:6:17085:17117	6669297	1	True				
ANR	6669508	AssignmentExpression	lb = ( b1 -> c0max + b1 -> c0min ) / 2		6669297	0		=			
ANR	6669509	Identifier	lb		6669297	0					
ANR	6669510	MultiplicativeExpression	( b1 -> c0max + b1 -> c0min ) / 2		6669297	1		/			
ANR	6669511	AdditiveExpression	b1 -> c0max + b1 -> c0min		6669297	0		+			
ANR	6669512	PtrMemberAccess	b1 -> c0max		6669297	0					
ANR	6669513	Identifier	b1		6669297	0					
ANR	6669514	Identifier	c0max		6669297	1					
ANR	6669515	PtrMemberAccess	b1 -> c0min		6669297	1					
ANR	6669516	Identifier	b1		6669297	0					
ANR	6669517	Identifier	c0min		6669297	1					
ANR	6669518	PrimaryExpression	2		6669297	1					
ANR	6669519	ExpressionStatement	b1 -> c0max = lb	476:6:17125:17139	6669297	2	True				
ANR	6669520	AssignmentExpression	b1 -> c0max = lb		6669297	0		=			
ANR	6669521	PtrMemberAccess	b1 -> c0max		6669297	0					
ANR	6669522	Identifier	b1		6669297	0					
ANR	6669523	Identifier	c0max		6669297	1					
ANR	6669524	Identifier	lb		6669297	1					
ANR	6669525	ExpressionStatement	b2 -> c0min = lb + 1	477:6:17147:17163	6669297	3	True				
ANR	6669526	AssignmentExpression	b2 -> c0min = lb + 1		6669297	0		=			
ANR	6669527	PtrMemberAccess	b2 -> c0min		6669297	0					
ANR	6669528	Identifier	b2		6669297	0					
ANR	6669529	Identifier	c0min		6669297	1					
ANR	6669530	AdditiveExpression	lb + 1		6669297	1		+			
ANR	6669531	Identifier	lb		6669297	0					
ANR	6669532	PrimaryExpression	1		6669297	1					
ANR	6669533	BreakStatement	break ;	478:6:17171:17176	6669297	4	True				
ANR	6669534	Label	case 1 :	479:4:17182:17188	6669297	5	True				
ANR	6669535	ExpressionStatement	lb = ( b1 -> c1max + b1 -> c1min ) / 2	480:6:17196:17228	6669297	6	True				
ANR	6669536	AssignmentExpression	lb = ( b1 -> c1max + b1 -> c1min ) / 2		6669297	0		=			
ANR	6669537	Identifier	lb		6669297	0					
ANR	6669538	MultiplicativeExpression	( b1 -> c1max + b1 -> c1min ) / 2		6669297	1		/			
ANR	6669539	AdditiveExpression	b1 -> c1max + b1 -> c1min		6669297	0		+			
ANR	6669540	PtrMemberAccess	b1 -> c1max		6669297	0					
ANR	6669541	Identifier	b1		6669297	0					
ANR	6669542	Identifier	c1max		6669297	1					
ANR	6669543	PtrMemberAccess	b1 -> c1min		6669297	1					
ANR	6669544	Identifier	b1		6669297	0					
ANR	6669545	Identifier	c1min		6669297	1					
ANR	6669546	PrimaryExpression	2		6669297	1					
ANR	6669547	ExpressionStatement	b1 -> c1max = lb	481:6:17236:17250	6669297	7	True				
ANR	6669548	AssignmentExpression	b1 -> c1max = lb		6669297	0		=			
ANR	6669549	PtrMemberAccess	b1 -> c1max		6669297	0					
ANR	6669550	Identifier	b1		6669297	0					
ANR	6669551	Identifier	c1max		6669297	1					
ANR	6669552	Identifier	lb		6669297	1					
ANR	6669553	ExpressionStatement	b2 -> c1min = lb + 1	482:6:17258:17274	6669297	8	True				
ANR	6669554	AssignmentExpression	b2 -> c1min = lb + 1		6669297	0		=			
ANR	6669555	PtrMemberAccess	b2 -> c1min		6669297	0					
ANR	6669556	Identifier	b2		6669297	0					
ANR	6669557	Identifier	c1min		6669297	1					
ANR	6669558	AdditiveExpression	lb + 1		6669297	1		+			
ANR	6669559	Identifier	lb		6669297	0					
ANR	6669560	PrimaryExpression	1		6669297	1					
ANR	6669561	BreakStatement	break ;	483:6:17282:17287	6669297	9	True				
ANR	6669562	Label	case 2 :	484:4:17293:17299	6669297	10	True				
ANR	6669563	ExpressionStatement	lb = ( b1 -> c2max + b1 -> c2min ) / 2	485:6:17307:17339	6669297	11	True				
ANR	6669564	AssignmentExpression	lb = ( b1 -> c2max + b1 -> c2min ) / 2		6669297	0		=			
ANR	6669565	Identifier	lb		6669297	0					
ANR	6669566	MultiplicativeExpression	( b1 -> c2max + b1 -> c2min ) / 2		6669297	1		/			
ANR	6669567	AdditiveExpression	b1 -> c2max + b1 -> c2min		6669297	0		+			
ANR	6669568	PtrMemberAccess	b1 -> c2max		6669297	0					
ANR	6669569	Identifier	b1		6669297	0					
ANR	6669570	Identifier	c2max		6669297	1					
ANR	6669571	PtrMemberAccess	b1 -> c2min		6669297	1					
ANR	6669572	Identifier	b1		6669297	0					
ANR	6669573	Identifier	c2min		6669297	1					
ANR	6669574	PrimaryExpression	2		6669297	1					
ANR	6669575	ExpressionStatement	b1 -> c2max = lb	486:6:17347:17361	6669297	12	True				
ANR	6669576	AssignmentExpression	b1 -> c2max = lb		6669297	0		=			
ANR	6669577	PtrMemberAccess	b1 -> c2max		6669297	0					
ANR	6669578	Identifier	b1		6669297	0					
ANR	6669579	Identifier	c2max		6669297	1					
ANR	6669580	Identifier	lb		6669297	1					
ANR	6669581	ExpressionStatement	b2 -> c2min = lb + 1	487:6:17369:17385	6669297	13	True				
ANR	6669582	AssignmentExpression	b2 -> c2min = lb + 1		6669297	0		=			
ANR	6669583	PtrMemberAccess	b2 -> c2min		6669297	0					
ANR	6669584	Identifier	b2		6669297	0					
ANR	6669585	Identifier	c2min		6669297	1					
ANR	6669586	AdditiveExpression	lb + 1		6669297	1		+			
ANR	6669587	Identifier	lb		6669297	0					
ANR	6669588	PrimaryExpression	1		6669297	1					
ANR	6669589	BreakStatement	break ;	488:6:17393:17398	6669297	14	True				
ANR	6669590	ExpressionStatement	"update_box ( cinfo , b1 )"	491:4:17443:17464	6669297	17	True				
ANR	6669591	CallExpression	"update_box ( cinfo , b1 )"		6669297	0					
ANR	6669592	Callee	update_box		6669297	0					
ANR	6669593	Identifier	update_box		6669297	0					
ANR	6669594	ArgumentList	cinfo		6669297	1					
ANR	6669595	Argument	cinfo		6669297	0					
ANR	6669596	Identifier	cinfo		6669297	0					
ANR	6669597	Argument	b1		6669297	1					
ANR	6669598	Identifier	b1		6669297	0					
ANR	6669599	ExpressionStatement	"update_box ( cinfo , b2 )"	492:4:17470:17491	6669297	18	True				
ANR	6669600	CallExpression	"update_box ( cinfo , b2 )"		6669297	0					
ANR	6669601	Callee	update_box		6669297	0					
ANR	6669602	Identifier	update_box		6669297	0					
ANR	6669603	ArgumentList	cinfo		6669297	1					
ANR	6669604	Argument	cinfo		6669297	0					
ANR	6669605	Identifier	cinfo		6669297	0					
ANR	6669606	Argument	b2		6669297	1					
ANR	6669607	Identifier	b2		6669297	0					
ANR	6669608	ExpressionStatement	numboxes ++	493:4:17497:17507	6669297	19	True				
ANR	6669609	PostIncDecOperationExpression	numboxes ++		6669297	0					
ANR	6669610	Identifier	numboxes		6669297	0					
ANR	6669611	IncDec	++		6669297	1					
ANR	6669612	ReturnStatement	return numboxes ;	495:2:17515:17530	6669297	5	True				
ANR	6669613	Identifier	numboxes		6669297	0					
ANR	6669614	Identifier	median_cut		6669297	1					
ANR	6669615	ParameterList	"j_decompress_ptr cinfo , boxptr boxlist , int numboxes , int desired_colors"		6669297	2					
ANR	6669616	Parameter	j_decompress_ptr cinfo	425:12:15190:15211	6669297	0	True				
ANR	6669617	ParameterType	j_decompress_ptr		6669297	0					
ANR	6669618	Identifier	cinfo		6669297	1					
ANR	6669619	Parameter	boxptr boxlist	425:36:15214:15227	6669297	1	True				
ANR	6669620	ParameterType	boxptr		6669297	0					
ANR	6669621	Identifier	boxlist		6669297	1					
ANR	6669622	Parameter	int numboxes	425:52:15230:15241	6669297	2	True				
ANR	6669623	ParameterType	int		6669297	0					
ANR	6669624	Identifier	numboxes		6669297	1					
ANR	6669625	Parameter	int desired_colors	426:5:15249:15266	6669297	3	True				
ANR	6669626	ParameterType	int		6669297	0					
ANR	6669627	Identifier	desired_colors		6669297	1					
ANR	6669628	CFGEntryNode	ENTRY		6669297		True				
ANR	6669629	CFGExitNode	EXIT		6669297		True				
ANR	6669630	Symbol	b1 -> c1min		6669297						
ANR	6669631	Symbol	C2_SHIFT		6669297						
ANR	6669632	Symbol	b2 -> c2max		6669297						
ANR	6669633	Symbol	b2 -> c0min		6669297						
ANR	6669634	Symbol	C2_SCALE		6669297						
ANR	6669635	Symbol	cmax		6669297						
ANR	6669636	Symbol	b1		6669297						
ANR	6669637	Symbol	b2		6669297						
ANR	6669638	Symbol	b2 -> c2min		6669297						
ANR	6669639	Symbol	* b2		6669297						
ANR	6669640	Symbol	* b1		6669297						
ANR	6669641	Symbol	b2 -> c0max		6669297						
ANR	6669642	Symbol	C0_SHIFT		6669297						
ANR	6669643	Symbol	b1 -> c1max		6669297						
ANR	6669644	Symbol	C0_SCALE		6669297						
ANR	6669645	Symbol	numboxes		6669297						
ANR	6669646	Symbol	b1 -> c0min		6669297						
ANR	6669647	Symbol	NULL		6669297						
ANR	6669648	Symbol	b1 -> c2min		6669297						
ANR	6669649	Symbol	b2 -> c1min		6669297						
ANR	6669650	Symbol	c0		6669297						
ANR	6669651	Symbol	n		6669297						
ANR	6669652	Symbol	c1		6669297						
ANR	6669653	Symbol	c2		6669297						
ANR	6669654	Symbol	b1 -> c2max		6669297						
ANR	6669655	Symbol	desired_colors		6669297						
ANR	6669656	Symbol	boxlist		6669297						
ANR	6669657	Symbol	C1_SCALE		6669297						
ANR	6669658	Symbol	cinfo		6669297						
ANR	6669659	Symbol	lb		6669297						
ANR	6669660	Symbol	find_biggest_color_pop		6669297						
ANR	6669661	Symbol	b2 -> c1max		6669297						
ANR	6669662	Symbol	find_biggest_volume		6669297						
ANR	6669663	Symbol	b1 -> c0max		6669297						
ANR	6669664	Symbol	C1_SHIFT		6669297						
ANR	6669665	Function	compute_color	500:0:17548:18880							
ANR	6669666	FunctionDef	"compute_color (j_decompress_ptr cinfo , boxptr boxp , int icolor)"		6669665	0					
ANR	6669667	CompoundStatement		502:0:17685:18880	6669665	0					
ANR	6669668	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	505:2:17811:17875	6669665	0	True				
ANR	6669669	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6669665	0					
ANR	6669670	IdentifierDeclType	my_cquantize_ptr		6669665	0					
ANR	6669671	Identifier	cquantize		6669665	1					
ANR	6669672	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6669665	2		=			
ANR	6669673	Identifier	cquantize		6669665	0					
ANR	6669674	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6669665	1					
ANR	6669675	CastTarget	my_cquantize_ptr		6669665	0					
ANR	6669676	PtrMemberAccess	cinfo -> cquantize		6669665	1					
ANR	6669677	Identifier	cinfo		6669665	0					
ANR	6669678	Identifier	cquantize		6669665	1					
ANR	6669679	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	506:2:17879:17918	6669665	1	True				
ANR	6669680	IdentifierDecl	histogram = cquantize -> histogram		6669665	0					
ANR	6669681	IdentifierDeclType	hist3d		6669665	0					
ANR	6669682	Identifier	histogram		6669665	1					
ANR	6669683	AssignmentExpression	histogram = cquantize -> histogram		6669665	2		=			
ANR	6669684	Identifier	histogram		6669665	0					
ANR	6669685	PtrMemberAccess	cquantize -> histogram		6669665	1					
ANR	6669686	Identifier	cquantize		6669665	0					
ANR	6669687	Identifier	histogram		6669665	1					
ANR	6669688	IdentifierDeclStatement	histptr histp ;	507:2:17922:17935	6669665	2	True				
ANR	6669689	IdentifierDecl	histp		6669665	0					
ANR	6669690	IdentifierDeclType	histptr		6669665	0					
ANR	6669691	Identifier	histp		6669665	1					
ANR	6669692	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	508:2:17939:17951	6669665	3	True				
ANR	6669693	IdentifierDecl	c0		6669665	0					
ANR	6669694	IdentifierDeclType	int		6669665	0					
ANR	6669695	Identifier	c0		6669665	1					
ANR	6669696	IdentifierDecl	c1		6669665	1					
ANR	6669697	IdentifierDeclType	int		6669665	0					
ANR	6669698	Identifier	c1		6669665	1					
ANR	6669699	IdentifierDecl	c2		6669665	2					
ANR	6669700	IdentifierDeclType	int		6669665	0					
ANR	6669701	Identifier	c2		6669665	1					
ANR	6669702	IdentifierDeclStatement	"int c0min , c0max , c1min , c1max , c2min , c2max ;"	509:2:17955:17994	6669665	4	True				
ANR	6669703	IdentifierDecl	c0min		6669665	0					
ANR	6669704	IdentifierDeclType	int		6669665	0					
ANR	6669705	Identifier	c0min		6669665	1					
ANR	6669706	IdentifierDecl	c0max		6669665	1					
ANR	6669707	IdentifierDeclType	int		6669665	0					
ANR	6669708	Identifier	c0max		6669665	1					
ANR	6669709	IdentifierDecl	c1min		6669665	2					
ANR	6669710	IdentifierDeclType	int		6669665	0					
ANR	6669711	Identifier	c1min		6669665	1					
ANR	6669712	IdentifierDecl	c1max		6669665	3					
ANR	6669713	IdentifierDeclType	int		6669665	0					
ANR	6669714	Identifier	c1max		6669665	1					
ANR	6669715	IdentifierDecl	c2min		6669665	4					
ANR	6669716	IdentifierDeclType	int		6669665	0					
ANR	6669717	Identifier	c2min		6669665	1					
ANR	6669718	IdentifierDecl	c2max		6669665	5					
ANR	6669719	IdentifierDeclType	int		6669665	0					
ANR	6669720	Identifier	c2max		6669665	1					
ANR	6669721	IdentifierDeclStatement	long count ;	510:2:17998:18008	6669665	5	True				
ANR	6669722	IdentifierDecl	count		6669665	0					
ANR	6669723	IdentifierDeclType	long		6669665	0					
ANR	6669724	Identifier	count		6669665	1					
ANR	6669725	IdentifierDeclStatement	long total = 0 ;	511:2:18012:18026	6669665	6	True				
ANR	6669726	IdentifierDecl	total = 0		6669665	0					
ANR	6669727	IdentifierDeclType	long		6669665	0					
ANR	6669728	Identifier	total		6669665	1					
ANR	6669729	AssignmentExpression	total = 0		6669665	2		=			
ANR	6669730	Identifier	total		6669665	0					
ANR	6669731	PrimaryExpression	0		6669665	1					
ANR	6669732	IdentifierDeclStatement	long c0total = 0 ;	512:2:18030:18046	6669665	7	True				
ANR	6669733	IdentifierDecl	c0total = 0		6669665	0					
ANR	6669734	IdentifierDeclType	long		6669665	0					
ANR	6669735	Identifier	c0total		6669665	1					
ANR	6669736	AssignmentExpression	c0total = 0		6669665	2		=			
ANR	6669737	Identifier	c0total		6669665	0					
ANR	6669738	PrimaryExpression	0		6669665	1					
ANR	6669739	IdentifierDeclStatement	long c1total = 0 ;	513:2:18050:18066	6669665	8	True				
ANR	6669740	IdentifierDecl	c1total = 0		6669665	0					
ANR	6669741	IdentifierDeclType	long		6669665	0					
ANR	6669742	Identifier	c1total		6669665	1					
ANR	6669743	AssignmentExpression	c1total = 0		6669665	2		=			
ANR	6669744	Identifier	c1total		6669665	0					
ANR	6669745	PrimaryExpression	0		6669665	1					
ANR	6669746	IdentifierDeclStatement	long c2total = 0 ;	514:2:18070:18086	6669665	9	True				
ANR	6669747	IdentifierDecl	c2total = 0		6669665	0					
ANR	6669748	IdentifierDeclType	long		6669665	0					
ANR	6669749	Identifier	c2total		6669665	1					
ANR	6669750	AssignmentExpression	c2total = 0		6669665	2		=			
ANR	6669751	Identifier	c2total		6669665	0					
ANR	6669752	PrimaryExpression	0		6669665	1					
ANR	6669753	ExpressionStatement	c0min = boxp -> c0min	516:2:18093:18112	6669665	10	True				
ANR	6669754	AssignmentExpression	c0min = boxp -> c0min		6669665	0		=			
ANR	6669755	Identifier	c0min		6669665	0					
ANR	6669756	PtrMemberAccess	boxp -> c0min		6669665	1					
ANR	6669757	Identifier	boxp		6669665	0					
ANR	6669758	Identifier	c0min		6669665	1					
ANR	6669759	ExpressionStatement	c0max = boxp -> c0max	516:24:18115:18134	6669665	11	True				
ANR	6669760	AssignmentExpression	c0max = boxp -> c0max		6669665	0		=			
ANR	6669761	Identifier	c0max		6669665	0					
ANR	6669762	PtrMemberAccess	boxp -> c0max		6669665	1					
ANR	6669763	Identifier	boxp		6669665	0					
ANR	6669764	Identifier	c0max		6669665	1					
ANR	6669765	ExpressionStatement	c1min = boxp -> c1min	517:2:18138:18157	6669665	12	True				
ANR	6669766	AssignmentExpression	c1min = boxp -> c1min		6669665	0		=			
ANR	6669767	Identifier	c1min		6669665	0					
ANR	6669768	PtrMemberAccess	boxp -> c1min		6669665	1					
ANR	6669769	Identifier	boxp		6669665	0					
ANR	6669770	Identifier	c1min		6669665	1					
ANR	6669771	ExpressionStatement	c1max = boxp -> c1max	517:24:18160:18179	6669665	13	True				
ANR	6669772	AssignmentExpression	c1max = boxp -> c1max		6669665	0		=			
ANR	6669773	Identifier	c1max		6669665	0					
ANR	6669774	PtrMemberAccess	boxp -> c1max		6669665	1					
ANR	6669775	Identifier	boxp		6669665	0					
ANR	6669776	Identifier	c1max		6669665	1					
ANR	6669777	ExpressionStatement	c2min = boxp -> c2min	518:2:18183:18202	6669665	14	True				
ANR	6669778	AssignmentExpression	c2min = boxp -> c2min		6669665	0		=			
ANR	6669779	Identifier	c2min		6669665	0					
ANR	6669780	PtrMemberAccess	boxp -> c2min		6669665	1					
ANR	6669781	Identifier	boxp		6669665	0					
ANR	6669782	Identifier	c2min		6669665	1					
ANR	6669783	ExpressionStatement	c2max = boxp -> c2max	518:24:18205:18224	6669665	15	True				
ANR	6669784	AssignmentExpression	c2max = boxp -> c2max		6669665	0		=			
ANR	6669785	Identifier	c2max		6669665	0					
ANR	6669786	PtrMemberAccess	boxp -> c2max		6669665	1					
ANR	6669787	Identifier	boxp		6669665	0					
ANR	6669788	Identifier	c2max		6669665	1					
ANR	6669789	ForStatement	for ( c0 = c0min ; c0 <= c0max ; c0 ++ )		6669665	16					
ANR	6669790	ForInit	c0 = c0min ;	520:7:18236:18246	6669665	0	True				
ANR	6669791	AssignmentExpression	c0 = c0min		6669665	0		=			
ANR	6669792	Identifier	c0		6669665	0					
ANR	6669793	Identifier	c0min		6669665	1					
ANR	6669794	Condition	c0 <= c0max	520:19:18248:18258	6669665	1	True				
ANR	6669795	RelationalExpression	c0 <= c0max		6669665	0		<=			
ANR	6669796	Identifier	c0		6669665	0					
ANR	6669797	Identifier	c0max		6669665	1					
ANR	6669798	PostIncDecOperationExpression	c0 ++	520:32:18261:18264	6669665	2	True				
ANR	6669799	Identifier	c0		6669665	0					
ANR	6669800	IncDec	++		6669665	1					
ANR	6669801	ForStatement	for ( c1 = c1min ; c1 <= c1max ; c1 ++ )		6669665	3					
ANR	6669802	ForInit	c1 = c1min ;	521:9:18276:18286	6669665	0	True				
ANR	6669803	AssignmentExpression	c1 = c1min		6669665	0		=			
ANR	6669804	Identifier	c1		6669665	0					
ANR	6669805	Identifier	c1min		6669665	1					
ANR	6669806	Condition	c1 <= c1max	521:21:18288:18298	6669665	1	True				
ANR	6669807	RelationalExpression	c1 <= c1max		6669665	0		<=			
ANR	6669808	Identifier	c1		6669665	0					
ANR	6669809	Identifier	c1max		6669665	1					
ANR	6669810	PostIncDecOperationExpression	c1 ++	521:34:18301:18304	6669665	2	True				
ANR	6669811	Identifier	c1		6669665	0					
ANR	6669812	IncDec	++		6669665	1					
ANR	6669813	CompoundStatement		20:40:621:621	6669665	3					
ANR	6669814	ExpressionStatement	histp = & histogram [ c0 ] [ c1 ] [ c2min ]	522:6:18315:18349	6669665	0	True				
ANR	6669815	AssignmentExpression	histp = & histogram [ c0 ] [ c1 ] [ c2min ]		6669665	0		=			
ANR	6669816	Identifier	histp		6669665	0					
ANR	6669817	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2min ]		6669665	1					
ANR	6669818	UnaryOperator	&		6669665	0					
ANR	6669819	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2min ]		6669665	1					
ANR	6669820	ArrayIndexing	histogram [ c0 ] [ c1 ]		6669665	0					
ANR	6669821	ArrayIndexing	histogram [ c0 ]		6669665	0					
ANR	6669822	Identifier	histogram		6669665	0					
ANR	6669823	Identifier	c0		6669665	1					
ANR	6669824	Identifier	c1		6669665	1					
ANR	6669825	Identifier	c2min		6669665	1					
ANR	6669826	ForStatement	for ( c2 = c2min ; c2 <= c2max ; c2 ++ )		6669665	1					
ANR	6669827	ForInit	c2 = c2min ;	523:11:18362:18372	6669665	0	True				
ANR	6669828	AssignmentExpression	c2 = c2min		6669665	0		=			
ANR	6669829	Identifier	c2		6669665	0					
ANR	6669830	Identifier	c2min		6669665	1					
ANR	6669831	Condition	c2 <= c2max	523:23:18374:18384	6669665	1	True				
ANR	6669832	RelationalExpression	c2 <= c2max		6669665	0		<=			
ANR	6669833	Identifier	c2		6669665	0					
ANR	6669834	Identifier	c2max		6669665	1					
ANR	6669835	PostIncDecOperationExpression	c2 ++	523:36:18387:18390	6669665	2	True				
ANR	6669836	Identifier	c2		6669665	0					
ANR	6669837	IncDec	++		6669665	1					
ANR	6669838	CompoundStatement		22:42:707:707	6669665	3					
ANR	6669839	IfStatement	if ( ( count = * histp ++ ) != 0 )		6669665	0					
ANR	6669840	Condition	( count = * histp ++ ) != 0	524:5:18400:18422	6669665	0	True				
ANR	6669841	EqualityExpression	( count = * histp ++ ) != 0		6669665	0		!=			
ANR	6669842	AssignmentExpression	count = * histp ++		6669665	0		=			
ANR	6669843	Identifier	count		6669665	0					
ANR	6669844	UnaryOperationExpression	* histp ++		6669665	1					
ANR	6669845	UnaryOperator	*		6669665	0					
ANR	6669846	PostIncDecOperationExpression	histp ++		6669665	1					
ANR	6669847	Identifier	histp		6669665	0					
ANR	6669848	IncDec	++		6669665	1					
ANR	6669849	PrimaryExpression	0		6669665	1					
ANR	6669850	CompoundStatement		23:30:739:739	6669665	1					
ANR	6669851	ExpressionStatement	total += count	525:3:18430:18444	6669665	0	True				
ANR	6669852	AssignmentExpression	total += count		6669665	0		+=			
ANR	6669853	Identifier	total		6669665	0					
ANR	6669854	Identifier	count		6669665	1					
ANR	6669855	ExpressionStatement	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count	526:3:18449:18507	6669665	1	True				
ANR	6669856	AssignmentExpression	c0total += ( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		6669665	0		+=			
ANR	6669857	Identifier	c0total		6669665	0					
ANR	6669858	MultiplicativeExpression	( ( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 ) ) * count		6669665	1		*			
ANR	6669859	AdditiveExpression	( c0 << C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6669665	0		+			
ANR	6669860	ShiftExpression	c0 << C0_SHIFT		6669665	0		<<			
ANR	6669861	Identifier	c0		6669665	0					
ANR	6669862	Identifier	C0_SHIFT		6669665	1					
ANR	6669863	ShiftExpression	( 1 << C0_SHIFT ) >> 1		6669665	1		>>			
ANR	6669864	ShiftExpression	1 << C0_SHIFT		6669665	0		<<			
ANR	6669865	PrimaryExpression	1		6669665	0					
ANR	6669866	Identifier	C0_SHIFT		6669665	1					
ANR	6669867	PrimaryExpression	1		6669665	1					
ANR	6669868	Identifier	count		6669665	1					
ANR	6669869	ExpressionStatement	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count	527:3:18512:18570	6669665	2	True				
ANR	6669870	AssignmentExpression	c1total += ( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		6669665	0		+=			
ANR	6669871	Identifier	c1total		6669665	0					
ANR	6669872	MultiplicativeExpression	( ( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 ) ) * count		6669665	1		*			
ANR	6669873	AdditiveExpression	( c1 << C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6669665	0		+			
ANR	6669874	ShiftExpression	c1 << C1_SHIFT		6669665	0		<<			
ANR	6669875	Identifier	c1		6669665	0					
ANR	6669876	Identifier	C1_SHIFT		6669665	1					
ANR	6669877	ShiftExpression	( 1 << C1_SHIFT ) >> 1		6669665	1		>>			
ANR	6669878	ShiftExpression	1 << C1_SHIFT		6669665	0		<<			
ANR	6669879	PrimaryExpression	1		6669665	0					
ANR	6669880	Identifier	C1_SHIFT		6669665	1					
ANR	6669881	PrimaryExpression	1		6669665	1					
ANR	6669882	Identifier	count		6669665	1					
ANR	6669883	ExpressionStatement	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count	528:3:18575:18633	6669665	3	True				
ANR	6669884	AssignmentExpression	c2total += ( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		6669665	0		+=			
ANR	6669885	Identifier	c2total		6669665	0					
ANR	6669886	MultiplicativeExpression	( ( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 ) ) * count		6669665	1		*			
ANR	6669887	AdditiveExpression	( c2 << C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6669665	0		+			
ANR	6669888	ShiftExpression	c2 << C2_SHIFT		6669665	0		<<			
ANR	6669889	Identifier	c2		6669665	0					
ANR	6669890	Identifier	C2_SHIFT		6669665	1					
ANR	6669891	ShiftExpression	( 1 << C2_SHIFT ) >> 1		6669665	1		>>			
ANR	6669892	ShiftExpression	1 << C2_SHIFT		6669665	0		<<			
ANR	6669893	PrimaryExpression	1		6669665	0					
ANR	6669894	Identifier	C2_SHIFT		6669665	1					
ANR	6669895	PrimaryExpression	1		6669665	1					
ANR	6669896	Identifier	count		6669665	1					
ANR	6669897	ExpressionStatement	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )	533:2:18657:18728	6669665	17	True				
ANR	6669898	AssignmentExpression	cinfo -> colormap [ 0 ] [ icolor ] = ( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		6669665	0		=			
ANR	6669899	ArrayIndexing	cinfo -> colormap [ 0 ] [ icolor ]		6669665	0					
ANR	6669900	ArrayIndexing	cinfo -> colormap [ 0 ]		6669665	0					
ANR	6669901	PtrMemberAccess	cinfo -> colormap		6669665	0					
ANR	6669902	Identifier	cinfo		6669665	0					
ANR	6669903	Identifier	colormap		6669665	1					
ANR	6669904	PrimaryExpression	0		6669665	1					
ANR	6669905	Identifier	icolor		6669665	1					
ANR	6669906	CastExpression	( JSAMPLE ) ( ( c0total + ( total >> 1 ) ) / total )		6669665	1					
ANR	6669907	CastTarget	JSAMPLE		6669665	0					
ANR	6669908	MultiplicativeExpression	( c0total + ( total >> 1 ) ) / total		6669665	1		/			
ANR	6669909	AdditiveExpression	c0total + ( total >> 1 )		6669665	0		+			
ANR	6669910	Identifier	c0total		6669665	0					
ANR	6669911	ShiftExpression	total >> 1		6669665	1		>>			
ANR	6669912	Identifier	total		6669665	0					
ANR	6669913	PrimaryExpression	1		6669665	1					
ANR	6669914	Identifier	total		6669665	1					
ANR	6669915	ExpressionStatement	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )	534:2:18732:18803	6669665	18	True				
ANR	6669916	AssignmentExpression	cinfo -> colormap [ 1 ] [ icolor ] = ( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		6669665	0		=			
ANR	6669917	ArrayIndexing	cinfo -> colormap [ 1 ] [ icolor ]		6669665	0					
ANR	6669918	ArrayIndexing	cinfo -> colormap [ 1 ]		6669665	0					
ANR	6669919	PtrMemberAccess	cinfo -> colormap		6669665	0					
ANR	6669920	Identifier	cinfo		6669665	0					
ANR	6669921	Identifier	colormap		6669665	1					
ANR	6669922	PrimaryExpression	1		6669665	1					
ANR	6669923	Identifier	icolor		6669665	1					
ANR	6669924	CastExpression	( JSAMPLE ) ( ( c1total + ( total >> 1 ) ) / total )		6669665	1					
ANR	6669925	CastTarget	JSAMPLE		6669665	0					
ANR	6669926	MultiplicativeExpression	( c1total + ( total >> 1 ) ) / total		6669665	1		/			
ANR	6669927	AdditiveExpression	c1total + ( total >> 1 )		6669665	0		+			
ANR	6669928	Identifier	c1total		6669665	0					
ANR	6669929	ShiftExpression	total >> 1		6669665	1		>>			
ANR	6669930	Identifier	total		6669665	0					
ANR	6669931	PrimaryExpression	1		6669665	1					
ANR	6669932	Identifier	total		6669665	1					
ANR	6669933	ExpressionStatement	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )	535:2:18807:18878	6669665	19	True				
ANR	6669934	AssignmentExpression	cinfo -> colormap [ 2 ] [ icolor ] = ( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		6669665	0		=			
ANR	6669935	ArrayIndexing	cinfo -> colormap [ 2 ] [ icolor ]		6669665	0					
ANR	6669936	ArrayIndexing	cinfo -> colormap [ 2 ]		6669665	0					
ANR	6669937	PtrMemberAccess	cinfo -> colormap		6669665	0					
ANR	6669938	Identifier	cinfo		6669665	0					
ANR	6669939	Identifier	colormap		6669665	1					
ANR	6669940	PrimaryExpression	2		6669665	1					
ANR	6669941	Identifier	icolor		6669665	1					
ANR	6669942	CastExpression	( JSAMPLE ) ( ( c2total + ( total >> 1 ) ) / total )		6669665	1					
ANR	6669943	CastTarget	JSAMPLE		6669665	0					
ANR	6669944	MultiplicativeExpression	( c2total + ( total >> 1 ) ) / total		6669665	1		/			
ANR	6669945	AdditiveExpression	c2total + ( total >> 1 )		6669665	0		+			
ANR	6669946	Identifier	c2total		6669665	0					
ANR	6669947	ShiftExpression	total >> 1		6669665	1		>>			
ANR	6669948	Identifier	total		6669665	0					
ANR	6669949	PrimaryExpression	1		6669665	1					
ANR	6669950	Identifier	total		6669665	1					
ANR	6669951	Identifier	compute_color		6669665	1					
ANR	6669952	ParameterList	"j_decompress_ptr cinfo , boxptr boxp , int icolor"		6669665	2					
ANR	6669953	Parameter	j_decompress_ptr cinfo	500:15:17563:17584	6669665	0	True				
ANR	6669954	ParameterType	j_decompress_ptr		6669665	0					
ANR	6669955	Identifier	cinfo		6669665	1					
ANR	6669956	Parameter	boxptr boxp	500:39:17587:17597	6669665	1	True				
ANR	6669957	ParameterType	boxptr		6669665	0					
ANR	6669958	Identifier	boxp		6669665	1					
ANR	6669959	Parameter	int icolor	500:52:17600:17609	6669665	2	True				
ANR	6669960	ParameterType	int		6669665	0					
ANR	6669961	Identifier	icolor		6669665	1					
ANR	6669962	CFGEntryNode	ENTRY		6669665		True				
ANR	6669963	CFGExitNode	EXIT		6669665		True				
ANR	6669964	Symbol	* * cinfo		6669665						
ANR	6669965	Symbol	* * histogram		6669665						
ANR	6669966	Symbol	C2_SHIFT		6669665						
ANR	6669967	Symbol	c2total		6669665						
ANR	6669968	Symbol	c2min		6669665						
ANR	6669969	Symbol	cquantize		6669665						
ANR	6669970	Symbol	* cquantize		6669665						
ANR	6669971	Symbol	* cinfo -> colormap		6669665						
ANR	6669972	Symbol	boxp -> c1max		6669665						
ANR	6669973	Symbol	icolor		6669665						
ANR	6669974	Symbol	cquantize -> histogram		6669665						
ANR	6669975	Symbol	c0min		6669665						
ANR	6669976	Symbol	total		6669665						
ANR	6669977	Symbol	C0_SHIFT		6669665						
ANR	6669978	Symbol	* * c0		6669665						
ANR	6669979	Symbol	* icolor		6669665						
ANR	6669980	Symbol	c0max		6669665						
ANR	6669981	Symbol	* cinfo		6669665						
ANR	6669982	Symbol	c2max		6669665						
ANR	6669983	Symbol	boxp -> c0min		6669665						
ANR	6669984	Symbol	boxp -> c2min		6669665						
ANR	6669985	Symbol	histp		6669665						
ANR	6669986	Symbol	cinfo -> colormap		6669665						
ANR	6669987	Symbol	* boxp		6669665						
ANR	6669988	Symbol	count		6669665						
ANR	6669989	Symbol	* histogram		6669665						
ANR	6669990	Symbol	boxp		6669665						
ANR	6669991	Symbol	c1total		6669665						
ANR	6669992	Symbol	boxp -> c0max		6669665						
ANR	6669993	Symbol	c0		6669665						
ANR	6669994	Symbol	c1		6669665						
ANR	6669995	Symbol	c2		6669665						
ANR	6669996	Symbol	c1min		6669665						
ANR	6669997	Symbol	* * cinfo -> colormap		6669665						
ANR	6669998	Symbol	histogram		6669665						
ANR	6669999	Symbol	* c0		6669665						
ANR	6670000	Symbol	boxp -> c2max		6669665						
ANR	6670001	Symbol	cinfo -> cquantize		6669665						
ANR	6670002	Symbol	cinfo		6669665						
ANR	6670003	Symbol	* c1		6669665						
ANR	6670004	Symbol	* * * cinfo		6669665						
ANR	6670005	Symbol	c1max		6669665						
ANR	6670006	Symbol	* histp ++		6669665						
ANR	6670007	Symbol	C1_SHIFT		6669665						
ANR	6670008	Symbol	c0total		6669665						
ANR	6670009	Symbol	boxp -> c1min		6669665						
ANR	6670010	Function	select_colors	540:0:18896:19937							
ANR	6670011	FunctionDef	"select_colors (j_decompress_ptr cinfo , int desired_colors)"		6670010	0					
ANR	6670012	CompoundStatement		542:0:18996:19937	6670010	0					
ANR	6670013	IdentifierDeclStatement	boxptr boxlist ;	543:2:19000:19014	6670010	0	True				
ANR	6670014	IdentifierDecl	boxlist		6670010	0					
ANR	6670015	IdentifierDeclType	boxptr		6670010	0					
ANR	6670016	Identifier	boxlist		6670010	1					
ANR	6670017	IdentifierDeclStatement	int numboxes ;	544:2:19018:19030	6670010	1	True				
ANR	6670018	IdentifierDecl	numboxes		6670010	0					
ANR	6670019	IdentifierDeclType	int		6670010	0					
ANR	6670020	Identifier	numboxes		6670010	1					
ANR	6670021	IdentifierDeclStatement	int i ;	545:2:19034:19039	6670010	2	True				
ANR	6670022	IdentifierDecl	i		6670010	0					
ANR	6670023	IdentifierDeclType	int		6670010	0					
ANR	6670024	Identifier	i		6670010	1					
ANR	6670025	ExpressionStatement	"boxlist = ( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"	548:2:19084:19199	6670010	3	True				
ANR	6670026	AssignmentExpression	"boxlist = ( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6670010	0		=			
ANR	6670027	Identifier	boxlist		6670010	0					
ANR	6670028	CastExpression	"( boxptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6670010	1					
ANR	6670029	CastTarget	boxptr		6670010	0					
ANR	6670030	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , desired_colors * SIZEOF ( box ) )"		6670010	1					
ANR	6670031	Callee	* cinfo -> mem -> alloc_small		6670010	0					
ANR	6670032	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6670010	0					
ANR	6670033	UnaryOperator	*		6670010	0					
ANR	6670034	PtrMemberAccess	cinfo -> mem -> alloc_small		6670010	1					
ANR	6670035	PtrMemberAccess	cinfo -> mem		6670010	0					
ANR	6670036	Identifier	cinfo		6670010	0					
ANR	6670037	Identifier	mem		6670010	1					
ANR	6670038	Identifier	alloc_small		6670010	1					
ANR	6670039	ArgumentList	( j_common_ptr ) cinfo		6670010	1					
ANR	6670040	Argument	( j_common_ptr ) cinfo		6670010	0					
ANR	6670041	CastExpression	( j_common_ptr ) cinfo		6670010	0					
ANR	6670042	CastTarget	j_common_ptr		6670010	0					
ANR	6670043	Identifier	cinfo		6670010	1					
ANR	6670044	Argument	JPOOL_IMAGE		6670010	1					
ANR	6670045	Identifier	JPOOL_IMAGE		6670010	0					
ANR	6670046	Argument	desired_colors * SIZEOF ( box )		6670010	2					
ANR	6670047	MultiplicativeExpression	desired_colors * SIZEOF ( box )		6670010	0		*			
ANR	6670048	Identifier	desired_colors		6670010	0					
ANR	6670049	CallExpression	SIZEOF ( box )		6670010	1					
ANR	6670050	Callee	SIZEOF		6670010	0					
ANR	6670051	Identifier	SIZEOF		6670010	0					
ANR	6670052	ArgumentList	box		6670010	1					
ANR	6670053	Argument	box		6670010	0					
ANR	6670054	Identifier	box		6670010	0					
ANR	6670055	ExpressionStatement	numboxes = 1	551:2:19253:19265	6670010	4	True				
ANR	6670056	AssignmentExpression	numboxes = 1		6670010	0		=			
ANR	6670057	Identifier	numboxes		6670010	0					
ANR	6670058	PrimaryExpression	1		6670010	1					
ANR	6670059	ExpressionStatement	boxlist [ 0 ] . c0min = 0	552:2:19269:19289	6670010	5	True				
ANR	6670060	AssignmentExpression	boxlist [ 0 ] . c0min = 0		6670010	0		=			
ANR	6670061	MemberAccess	boxlist [ 0 ] . c0min		6670010	0					
ANR	6670062	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670063	Identifier	boxlist		6670010	0					
ANR	6670064	PrimaryExpression	0		6670010	1					
ANR	6670065	Identifier	c0min		6670010	1					
ANR	6670066	PrimaryExpression	0		6670010	1					
ANR	6670067	ExpressionStatement	boxlist [ 0 ] . c0max = MAXJSAMPLE >> C0_SHIFT	553:2:19293:19334	6670010	6	True				
ANR	6670068	AssignmentExpression	boxlist [ 0 ] . c0max = MAXJSAMPLE >> C0_SHIFT		6670010	0		=			
ANR	6670069	MemberAccess	boxlist [ 0 ] . c0max		6670010	0					
ANR	6670070	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670071	Identifier	boxlist		6670010	0					
ANR	6670072	PrimaryExpression	0		6670010	1					
ANR	6670073	Identifier	c0max		6670010	1					
ANR	6670074	ShiftExpression	MAXJSAMPLE >> C0_SHIFT		6670010	1		>>			
ANR	6670075	Identifier	MAXJSAMPLE		6670010	0					
ANR	6670076	Identifier	C0_SHIFT		6670010	1					
ANR	6670077	ExpressionStatement	boxlist [ 0 ] . c1min = 0	554:2:19338:19358	6670010	7	True				
ANR	6670078	AssignmentExpression	boxlist [ 0 ] . c1min = 0		6670010	0		=			
ANR	6670079	MemberAccess	boxlist [ 0 ] . c1min		6670010	0					
ANR	6670080	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670081	Identifier	boxlist		6670010	0					
ANR	6670082	PrimaryExpression	0		6670010	1					
ANR	6670083	Identifier	c1min		6670010	1					
ANR	6670084	PrimaryExpression	0		6670010	1					
ANR	6670085	ExpressionStatement	boxlist [ 0 ] . c1max = MAXJSAMPLE >> C1_SHIFT	555:2:19362:19403	6670010	8	True				
ANR	6670086	AssignmentExpression	boxlist [ 0 ] . c1max = MAXJSAMPLE >> C1_SHIFT		6670010	0		=			
ANR	6670087	MemberAccess	boxlist [ 0 ] . c1max		6670010	0					
ANR	6670088	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670089	Identifier	boxlist		6670010	0					
ANR	6670090	PrimaryExpression	0		6670010	1					
ANR	6670091	Identifier	c1max		6670010	1					
ANR	6670092	ShiftExpression	MAXJSAMPLE >> C1_SHIFT		6670010	1		>>			
ANR	6670093	Identifier	MAXJSAMPLE		6670010	0					
ANR	6670094	Identifier	C1_SHIFT		6670010	1					
ANR	6670095	ExpressionStatement	boxlist [ 0 ] . c2min = 0	556:2:19407:19427	6670010	9	True				
ANR	6670096	AssignmentExpression	boxlist [ 0 ] . c2min = 0		6670010	0		=			
ANR	6670097	MemberAccess	boxlist [ 0 ] . c2min		6670010	0					
ANR	6670098	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670099	Identifier	boxlist		6670010	0					
ANR	6670100	PrimaryExpression	0		6670010	1					
ANR	6670101	Identifier	c2min		6670010	1					
ANR	6670102	PrimaryExpression	0		6670010	1					
ANR	6670103	ExpressionStatement	boxlist [ 0 ] . c2max = MAXJSAMPLE >> C2_SHIFT	557:2:19431:19472	6670010	10	True				
ANR	6670104	AssignmentExpression	boxlist [ 0 ] . c2max = MAXJSAMPLE >> C2_SHIFT		6670010	0		=			
ANR	6670105	MemberAccess	boxlist [ 0 ] . c2max		6670010	0					
ANR	6670106	ArrayIndexing	boxlist [ 0 ]		6670010	0					
ANR	6670107	Identifier	boxlist		6670010	0					
ANR	6670108	PrimaryExpression	0		6670010	1					
ANR	6670109	Identifier	c2max		6670010	1					
ANR	6670110	ShiftExpression	MAXJSAMPLE >> C2_SHIFT		6670010	1		>>			
ANR	6670111	Identifier	MAXJSAMPLE		6670010	0					
ANR	6670112	Identifier	C2_SHIFT		6670010	1					
ANR	6670113	ExpressionStatement	"update_box ( cinfo , & boxlist [ 0 ] )"	559:2:19541:19572	6670010	11	True				
ANR	6670114	CallExpression	"update_box ( cinfo , & boxlist [ 0 ] )"		6670010	0					
ANR	6670115	Callee	update_box		6670010	0					
ANR	6670116	Identifier	update_box		6670010	0					
ANR	6670117	ArgumentList	cinfo		6670010	1					
ANR	6670118	Argument	cinfo		6670010	0					
ANR	6670119	Identifier	cinfo		6670010	0					
ANR	6670120	Argument	& boxlist [ 0 ]		6670010	1					
ANR	6670121	UnaryOperationExpression	& boxlist [ 0 ]		6670010	0					
ANR	6670122	UnaryOperator	&		6670010	0					
ANR	6670123	ArrayIndexing	boxlist [ 0 ]		6670010	1					
ANR	6670124	Identifier	boxlist		6670010	0					
ANR	6670125	PrimaryExpression	0		6670010	1					
ANR	6670126	ExpressionStatement	"numboxes = median_cut ( cinfo , boxlist , numboxes , desired_colors )"	561:2:19629:19692	6670010	12	True				
ANR	6670127	AssignmentExpression	"numboxes = median_cut ( cinfo , boxlist , numboxes , desired_colors )"		6670010	0		=			
ANR	6670128	Identifier	numboxes		6670010	0					
ANR	6670129	CallExpression	"median_cut ( cinfo , boxlist , numboxes , desired_colors )"		6670010	1					
ANR	6670130	Callee	median_cut		6670010	0					
ANR	6670131	Identifier	median_cut		6670010	0					
ANR	6670132	ArgumentList	cinfo		6670010	1					
ANR	6670133	Argument	cinfo		6670010	0					
ANR	6670134	Identifier	cinfo		6670010	0					
ANR	6670135	Argument	boxlist		6670010	1					
ANR	6670136	Identifier	boxlist		6670010	0					
ANR	6670137	Argument	numboxes		6670010	2					
ANR	6670138	Identifier	numboxes		6670010	0					
ANR	6670139	Argument	desired_colors		6670010	3					
ANR	6670140	Identifier	desired_colors		6670010	0					
ANR	6670141	ForStatement	for ( i = 0 ; i < numboxes ; i ++ )		6670010	13					
ANR	6670142	ForInit	i = 0 ;	563:7:19770:19775	6670010	0	True				
ANR	6670143	AssignmentExpression	i = 0		6670010	0		=			
ANR	6670144	Identifier	i		6670010	0					
ANR	6670145	PrimaryExpression	0		6670010	1					
ANR	6670146	Condition	i < numboxes	563:14:19777:19788	6670010	1	True				
ANR	6670147	RelationalExpression	i < numboxes		6670010	0		<			
ANR	6670148	Identifier	i		6670010	0					
ANR	6670149	Identifier	numboxes		6670010	1					
ANR	6670150	PostIncDecOperationExpression	i ++	563:28:19791:19793	6670010	2	True				
ANR	6670151	Identifier	i		6670010	0					
ANR	6670152	IncDec	++		6670010	1					
ANR	6670153	ExpressionStatement	"compute_color ( cinfo , & boxlist [ i ] , i )"	564:4:19800:19837	6670010	3	True				
ANR	6670154	CallExpression	"compute_color ( cinfo , & boxlist [ i ] , i )"		6670010	0					
ANR	6670155	Callee	compute_color		6670010	0					
ANR	6670156	Identifier	compute_color		6670010	0					
ANR	6670157	ArgumentList	cinfo		6670010	1					
ANR	6670158	Argument	cinfo		6670010	0					
ANR	6670159	Identifier	cinfo		6670010	0					
ANR	6670160	Argument	& boxlist [ i ]		6670010	1					
ANR	6670161	UnaryOperationExpression	& boxlist [ i ]		6670010	0					
ANR	6670162	UnaryOperator	&		6670010	0					
ANR	6670163	ArrayIndexing	boxlist [ i ]		6670010	1					
ANR	6670164	Identifier	boxlist		6670010	0					
ANR	6670165	Identifier	i		6670010	1					
ANR	6670166	Argument	i		6670010	2					
ANR	6670167	Identifier	i		6670010	0					
ANR	6670168	ExpressionStatement	cinfo -> actual_number_of_colors = numboxes	565:2:19841:19882	6670010	14	True				
ANR	6670169	AssignmentExpression	cinfo -> actual_number_of_colors = numboxes		6670010	0		=			
ANR	6670170	PtrMemberAccess	cinfo -> actual_number_of_colors		6670010	0					
ANR	6670171	Identifier	cinfo		6670010	0					
ANR	6670172	Identifier	actual_number_of_colors		6670010	1					
ANR	6670173	Identifier	numboxes		6670010	1					
ANR	6670174	ExpressionStatement	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_SELECTED , numboxes )"	566:2:19886:19935	6670010	15	True				
ANR	6670175	CallExpression	"TRACEMS1 ( cinfo , 1 , JTRC_QUANT_SELECTED , numboxes )"		6670010	0					
ANR	6670176	Callee	TRACEMS1		6670010	0					
ANR	6670177	Identifier	TRACEMS1		6670010	0					
ANR	6670178	ArgumentList	cinfo		6670010	1					
ANR	6670179	Argument	cinfo		6670010	0					
ANR	6670180	Identifier	cinfo		6670010	0					
ANR	6670181	Argument	1		6670010	1					
ANR	6670182	PrimaryExpression	1		6670010	0					
ANR	6670183	Argument	JTRC_QUANT_SELECTED		6670010	2					
ANR	6670184	Identifier	JTRC_QUANT_SELECTED		6670010	0					
ANR	6670185	Argument	numboxes		6670010	3					
ANR	6670186	Identifier	numboxes		6670010	0					
ANR	6670187	Identifier	select_colors		6670010	1					
ANR	6670188	ParameterList	"j_decompress_ptr cinfo , int desired_colors"		6670010	2					
ANR	6670189	Parameter	j_decompress_ptr cinfo	540:15:18911:18932	6670010	0	True				
ANR	6670190	ParameterType	j_decompress_ptr		6670010	0					
ANR	6670191	Identifier	cinfo		6670010	1					
ANR	6670192	Parameter	int desired_colors	540:39:18935:18952	6670010	1	True				
ANR	6670193	ParameterType	int		6670010	0					
ANR	6670194	Identifier	desired_colors		6670010	1					
ANR	6670195	CFGEntryNode	ENTRY		6670010		True				
ANR	6670196	CFGExitNode	EXIT		6670010		True				
ANR	6670197	Symbol	* * cinfo		6670010						
ANR	6670198	Symbol	C2_SHIFT		6670010						
ANR	6670199	Symbol	SIZEOF		6670010						
ANR	6670200	Symbol	* boxlist		6670010						
ANR	6670201	Symbol	box		6670010						
ANR	6670202	Symbol	boxlist [ 0 ] . c1max		6670010						
ANR	6670203	Symbol	* cinfo -> mem		6670010						
ANR	6670204	Symbol	cinfo -> mem		6670010						
ANR	6670205	Symbol	* cinfo -> mem -> alloc_small		6670010						
ANR	6670206	Symbol	C0_SHIFT		6670010						
ANR	6670207	Symbol	boxlist [ 0 ] . c1min		6670010						
ANR	6670208	Symbol	* cinfo		6670010						
ANR	6670209	Symbol	numboxes		6670010						
ANR	6670210	Symbol	* * cinfo -> mem		6670010						
ANR	6670211	Symbol	median_cut		6670010						
ANR	6670212	Symbol	cinfo -> mem -> alloc_small		6670010						
ANR	6670213	Symbol	i		6670010						
ANR	6670214	Symbol	JPOOL_IMAGE		6670010						
ANR	6670215	Symbol	boxlist [ 0 ] . c2max		6670010						
ANR	6670216	Symbol	boxlist [ 0 ] . c0max		6670010						
ANR	6670217	Symbol	desired_colors		6670010						
ANR	6670218	Symbol	boxlist		6670010						
ANR	6670219	Symbol	cinfo -> actual_number_of_colors		6670010						
ANR	6670220	Symbol	cinfo		6670010						
ANR	6670221	Symbol	MAXJSAMPLE		6670010						
ANR	6670222	Symbol	* * * cinfo		6670010						
ANR	6670223	Symbol	JTRC_QUANT_SELECTED		6670010						
ANR	6670224	Symbol	boxlist [ 0 ] . c2min		6670010						
ANR	6670225	Symbol	boxlist [ 0 ] . c0min		6670010						
ANR	6670226	Symbol	C1_SHIFT		6670010						
ANR	6670227	Function	find_nearby_colors	647:0:24236:28627							
ANR	6670228	FunctionDef	"find_nearby_colors (j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , JSAMPLE colorlist [ ])"		6670227	0					
ANR	6670229	CompoundStatement		657:0:24797:28627	6670227	0					
ANR	6670230	IdentifierDeclStatement	int numcolors = cinfo -> actual_number_of_colors ;	658:2:24801:24847	6670227	0	True				
ANR	6670231	IdentifierDecl	numcolors = cinfo -> actual_number_of_colors		6670227	0					
ANR	6670232	IdentifierDeclType	int		6670227	0					
ANR	6670233	Identifier	numcolors		6670227	1					
ANR	6670234	AssignmentExpression	numcolors = cinfo -> actual_number_of_colors		6670227	2		=			
ANR	6670235	Identifier	numcolors		6670227	0					
ANR	6670236	PtrMemberAccess	cinfo -> actual_number_of_colors		6670227	1					
ANR	6670237	Identifier	cinfo		6670227	0					
ANR	6670238	Identifier	actual_number_of_colors		6670227	1					
ANR	6670239	IdentifierDeclStatement	"int maxc0 , maxc1 , maxc2 ;"	659:2:24851:24874	6670227	1	True				
ANR	6670240	IdentifierDecl	maxc0		6670227	0					
ANR	6670241	IdentifierDeclType	int		6670227	0					
ANR	6670242	Identifier	maxc0		6670227	1					
ANR	6670243	IdentifierDecl	maxc1		6670227	1					
ANR	6670244	IdentifierDeclType	int		6670227	0					
ANR	6670245	Identifier	maxc1		6670227	1					
ANR	6670246	IdentifierDecl	maxc2		6670227	2					
ANR	6670247	IdentifierDeclType	int		6670227	0					
ANR	6670248	Identifier	maxc2		6670227	1					
ANR	6670249	IdentifierDeclStatement	"int centerc0 , centerc1 , centerc2 ;"	660:2:24878:24910	6670227	2	True				
ANR	6670250	IdentifierDecl	centerc0		6670227	0					
ANR	6670251	IdentifierDeclType	int		6670227	0					
ANR	6670252	Identifier	centerc0		6670227	1					
ANR	6670253	IdentifierDecl	centerc1		6670227	1					
ANR	6670254	IdentifierDeclType	int		6670227	0					
ANR	6670255	Identifier	centerc1		6670227	1					
ANR	6670256	IdentifierDecl	centerc2		6670227	2					
ANR	6670257	IdentifierDeclType	int		6670227	0					
ANR	6670258	Identifier	centerc2		6670227	1					
ANR	6670259	IdentifierDeclStatement	"int i , x , ncolors ;"	661:2:24914:24931	6670227	3	True				
ANR	6670260	IdentifierDecl	i		6670227	0					
ANR	6670261	IdentifierDeclType	int		6670227	0					
ANR	6670262	Identifier	i		6670227	1					
ANR	6670263	IdentifierDecl	x		6670227	1					
ANR	6670264	IdentifierDeclType	int		6670227	0					
ANR	6670265	Identifier	x		6670227	1					
ANR	6670266	IdentifierDecl	ncolors		6670227	2					
ANR	6670267	IdentifierDeclType	int		6670227	0					
ANR	6670268	Identifier	ncolors		6670227	1					
ANR	6670269	IdentifierDeclStatement	"INT32 minmaxdist , min_dist , max_dist , tdist ;"	662:2:24935:24978	6670227	4	True				
ANR	6670270	IdentifierDecl	minmaxdist		6670227	0					
ANR	6670271	IdentifierDeclType	INT32		6670227	0					
ANR	6670272	Identifier	minmaxdist		6670227	1					
ANR	6670273	IdentifierDecl	min_dist		6670227	1					
ANR	6670274	IdentifierDeclType	INT32		6670227	0					
ANR	6670275	Identifier	min_dist		6670227	1					
ANR	6670276	IdentifierDecl	max_dist		6670227	2					
ANR	6670277	IdentifierDeclType	INT32		6670227	0					
ANR	6670278	Identifier	max_dist		6670227	1					
ANR	6670279	IdentifierDecl	tdist		6670227	3					
ANR	6670280	IdentifierDeclType	INT32		6670227	0					
ANR	6670281	Identifier	tdist		6670227	1					
ANR	6670282	IdentifierDeclStatement	INT32 mindist [ MAXNUMCOLORS ] ;	663:2:24982:25009	6670227	5	True				
ANR	6670283	IdentifierDecl	mindist [ MAXNUMCOLORS ]		6670227	0					
ANR	6670284	IdentifierDeclType	INT32 [ MAXNUMCOLORS ]		6670227	0					
ANR	6670285	Identifier	mindist		6670227	1					
ANR	6670286	Identifier	MAXNUMCOLORS		6670227	2					
ANR	6670287	ExpressionStatement	maxc0 = minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )	671:2:25429:25484	6670227	6	True				
ANR	6670288	AssignmentExpression	maxc0 = minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )		6670227	0		=			
ANR	6670289	Identifier	maxc0		6670227	0					
ANR	6670290	AdditiveExpression	minc0 + ( ( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT ) )		6670227	1		+			
ANR	6670291	Identifier	minc0		6670227	0					
ANR	6670292	AdditiveExpression	( 1 << BOX_C0_SHIFT ) - ( 1 << C0_SHIFT )		6670227	1		-			
ANR	6670293	ShiftExpression	1 << BOX_C0_SHIFT		6670227	0		<<			
ANR	6670294	PrimaryExpression	1		6670227	0					
ANR	6670295	Identifier	BOX_C0_SHIFT		6670227	1					
ANR	6670296	ShiftExpression	1 << C0_SHIFT		6670227	1		<<			
ANR	6670297	PrimaryExpression	1		6670227	0					
ANR	6670298	Identifier	C0_SHIFT		6670227	1					
ANR	6670299	ExpressionStatement	centerc0 = ( minc0 + maxc0 ) >> 1	672:2:25488:25519	6670227	7	True				
ANR	6670300	AssignmentExpression	centerc0 = ( minc0 + maxc0 ) >> 1		6670227	0		=			
ANR	6670301	Identifier	centerc0		6670227	0					
ANR	6670302	ShiftExpression	( minc0 + maxc0 ) >> 1		6670227	1		>>			
ANR	6670303	AdditiveExpression	minc0 + maxc0		6670227	0		+			
ANR	6670304	Identifier	minc0		6670227	0					
ANR	6670305	Identifier	maxc0		6670227	1					
ANR	6670306	PrimaryExpression	1		6670227	1					
ANR	6670307	ExpressionStatement	maxc1 = minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )	673:2:25523:25578	6670227	8	True				
ANR	6670308	AssignmentExpression	maxc1 = minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )		6670227	0		=			
ANR	6670309	Identifier	maxc1		6670227	0					
ANR	6670310	AdditiveExpression	minc1 + ( ( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT ) )		6670227	1		+			
ANR	6670311	Identifier	minc1		6670227	0					
ANR	6670312	AdditiveExpression	( 1 << BOX_C1_SHIFT ) - ( 1 << C1_SHIFT )		6670227	1		-			
ANR	6670313	ShiftExpression	1 << BOX_C1_SHIFT		6670227	0		<<			
ANR	6670314	PrimaryExpression	1		6670227	0					
ANR	6670315	Identifier	BOX_C1_SHIFT		6670227	1					
ANR	6670316	ShiftExpression	1 << C1_SHIFT		6670227	1		<<			
ANR	6670317	PrimaryExpression	1		6670227	0					
ANR	6670318	Identifier	C1_SHIFT		6670227	1					
ANR	6670319	ExpressionStatement	centerc1 = ( minc1 + maxc1 ) >> 1	674:2:25582:25613	6670227	9	True				
ANR	6670320	AssignmentExpression	centerc1 = ( minc1 + maxc1 ) >> 1		6670227	0		=			
ANR	6670321	Identifier	centerc1		6670227	0					
ANR	6670322	ShiftExpression	( minc1 + maxc1 ) >> 1		6670227	1		>>			
ANR	6670323	AdditiveExpression	minc1 + maxc1		6670227	0		+			
ANR	6670324	Identifier	minc1		6670227	0					
ANR	6670325	Identifier	maxc1		6670227	1					
ANR	6670326	PrimaryExpression	1		6670227	1					
ANR	6670327	ExpressionStatement	maxc2 = minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )	675:2:25617:25672	6670227	10	True				
ANR	6670328	AssignmentExpression	maxc2 = minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )		6670227	0		=			
ANR	6670329	Identifier	maxc2		6670227	0					
ANR	6670330	AdditiveExpression	minc2 + ( ( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT ) )		6670227	1		+			
ANR	6670331	Identifier	minc2		6670227	0					
ANR	6670332	AdditiveExpression	( 1 << BOX_C2_SHIFT ) - ( 1 << C2_SHIFT )		6670227	1		-			
ANR	6670333	ShiftExpression	1 << BOX_C2_SHIFT		6670227	0		<<			
ANR	6670334	PrimaryExpression	1		6670227	0					
ANR	6670335	Identifier	BOX_C2_SHIFT		6670227	1					
ANR	6670336	ShiftExpression	1 << C2_SHIFT		6670227	1		<<			
ANR	6670337	PrimaryExpression	1		6670227	0					
ANR	6670338	Identifier	C2_SHIFT		6670227	1					
ANR	6670339	ExpressionStatement	centerc2 = ( minc2 + maxc2 ) >> 1	676:2:25676:25707	6670227	11	True				
ANR	6670340	AssignmentExpression	centerc2 = ( minc2 + maxc2 ) >> 1		6670227	0		=			
ANR	6670341	Identifier	centerc2		6670227	0					
ANR	6670342	ShiftExpression	( minc2 + maxc2 ) >> 1		6670227	1		>>			
ANR	6670343	AdditiveExpression	minc2 + maxc2		6670227	0		+			
ANR	6670344	Identifier	minc2		6670227	0					
ANR	6670345	Identifier	maxc2		6670227	1					
ANR	6670346	PrimaryExpression	1		6670227	1					
ANR	6670347	ExpressionStatement	minmaxdist = 0x7FFFFFFFL	686:2:26138:26162	6670227	12	True				
ANR	6670348	AssignmentExpression	minmaxdist = 0x7FFFFFFFL		6670227	0		=			
ANR	6670349	Identifier	minmaxdist		6670227	0					
ANR	6670350	PrimaryExpression	0x7FFFFFFFL		6670227	1					
ANR	6670351	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6670227	13					
ANR	6670352	ForInit	i = 0 ;	688:7:26172:26177	6670227	0	True				
ANR	6670353	AssignmentExpression	i = 0		6670227	0		=			
ANR	6670354	Identifier	i		6670227	0					
ANR	6670355	PrimaryExpression	0		6670227	1					
ANR	6670356	Condition	i < numcolors	688:14:26179:26191	6670227	1	True				
ANR	6670357	RelationalExpression	i < numcolors		6670227	0		<			
ANR	6670358	Identifier	i		6670227	0					
ANR	6670359	Identifier	numcolors		6670227	1					
ANR	6670360	PostIncDecOperationExpression	i ++	688:29:26194:26196	6670227	2	True				
ANR	6670361	Identifier	i		6670227	0					
ANR	6670362	IncDec	++		6670227	1					
ANR	6670363	CompoundStatement		32:34:1401:1401	6670227	3					
ANR	6670364	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )	690:4:26283:26320	6670227	0	True				
ANR	6670365	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )		6670227	0		=			
ANR	6670366	Identifier	x		6670227	0					
ANR	6670367	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 0 ] [ i ] )		6670227	1					
ANR	6670368	Callee	GETJSAMPLE		6670227	0					
ANR	6670369	Identifier	GETJSAMPLE		6670227	0					
ANR	6670370	ArgumentList	cinfo -> colormap [ 0 ] [ i ]		6670227	1					
ANR	6670371	Argument	cinfo -> colormap [ 0 ] [ i ]		6670227	0					
ANR	6670372	ArrayIndexing	cinfo -> colormap [ 0 ] [ i ]		6670227	0					
ANR	6670373	ArrayIndexing	cinfo -> colormap [ 0 ]		6670227	0					
ANR	6670374	PtrMemberAccess	cinfo -> colormap		6670227	0					
ANR	6670375	Identifier	cinfo		6670227	0					
ANR	6670376	Identifier	colormap		6670227	1					
ANR	6670377	PrimaryExpression	0		6670227	1					
ANR	6670378	Identifier	i		6670227	1					
ANR	6670379	IfStatement	if ( x < minc0 )		6670227	1					
ANR	6670380	Condition	x < minc0	691:8:26330:26338	6670227	0	True				
ANR	6670381	RelationalExpression	x < minc0		6670227	0		<			
ANR	6670382	Identifier	x		6670227	0					
ANR	6670383	Identifier	minc0		6670227	1					
ANR	6670384	CompoundStatement		35:19:1543:1543	6670227	1					
ANR	6670385	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	692:6:26349:26379	6670227	0	True				
ANR	6670386	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6670227	0		=			
ANR	6670387	Identifier	tdist		6670227	0					
ANR	6670388	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6670227	1		*			
ANR	6670389	AdditiveExpression	x - minc0		6670227	0		-			
ANR	6670390	Identifier	x		6670227	0					
ANR	6670391	Identifier	minc0		6670227	1					
ANR	6670392	Identifier	C0_SCALE		6670227	1					
ANR	6670393	ExpressionStatement	min_dist = tdist * tdist	693:6:26387:26409	6670227	1	True				
ANR	6670394	AssignmentExpression	min_dist = tdist * tdist		6670227	0		=			
ANR	6670395	Identifier	min_dist		6670227	0					
ANR	6670396	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670397	Identifier	tdist		6670227	0					
ANR	6670398	Identifier	tdist		6670227	1					
ANR	6670399	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	694:6:26417:26447	6670227	2	True				
ANR	6670400	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6670227	0		=			
ANR	6670401	Identifier	tdist		6670227	0					
ANR	6670402	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6670227	1		*			
ANR	6670403	AdditiveExpression	x - maxc0		6670227	0		-			
ANR	6670404	Identifier	x		6670227	0					
ANR	6670405	Identifier	maxc0		6670227	1					
ANR	6670406	Identifier	C0_SCALE		6670227	1					
ANR	6670407	ExpressionStatement	max_dist = tdist * tdist	695:6:26455:26477	6670227	3	True				
ANR	6670408	AssignmentExpression	max_dist = tdist * tdist		6670227	0		=			
ANR	6670409	Identifier	max_dist		6670227	0					
ANR	6670410	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670411	Identifier	tdist		6670227	0					
ANR	6670412	Identifier	tdist		6670227	1					
ANR	6670413	ElseStatement	else		6670227	0					
ANR	6670414	IfStatement	if ( x > maxc0 )		6670227	0					
ANR	6670415	Condition	x > maxc0	696:15:26494:26502	6670227	0	True				
ANR	6670416	RelationalExpression	x > maxc0		6670227	0		>			
ANR	6670417	Identifier	x		6670227	0					
ANR	6670418	Identifier	maxc0		6670227	1					
ANR	6670419	CompoundStatement		40:26:1707:1707	6670227	1					
ANR	6670420	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	697:6:26513:26543	6670227	0	True				
ANR	6670421	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6670227	0		=			
ANR	6670422	Identifier	tdist		6670227	0					
ANR	6670423	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6670227	1		*			
ANR	6670424	AdditiveExpression	x - maxc0		6670227	0		-			
ANR	6670425	Identifier	x		6670227	0					
ANR	6670426	Identifier	maxc0		6670227	1					
ANR	6670427	Identifier	C0_SCALE		6670227	1					
ANR	6670428	ExpressionStatement	min_dist = tdist * tdist	698:6:26551:26573	6670227	1	True				
ANR	6670429	AssignmentExpression	min_dist = tdist * tdist		6670227	0		=			
ANR	6670430	Identifier	min_dist		6670227	0					
ANR	6670431	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670432	Identifier	tdist		6670227	0					
ANR	6670433	Identifier	tdist		6670227	1					
ANR	6670434	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	699:6:26581:26611	6670227	2	True				
ANR	6670435	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6670227	0		=			
ANR	6670436	Identifier	tdist		6670227	0					
ANR	6670437	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6670227	1		*			
ANR	6670438	AdditiveExpression	x - minc0		6670227	0		-			
ANR	6670439	Identifier	x		6670227	0					
ANR	6670440	Identifier	minc0		6670227	1					
ANR	6670441	Identifier	C0_SCALE		6670227	1					
ANR	6670442	ExpressionStatement	max_dist = tdist * tdist	700:6:26619:26641	6670227	3	True				
ANR	6670443	AssignmentExpression	max_dist = tdist * tdist		6670227	0		=			
ANR	6670444	Identifier	max_dist		6670227	0					
ANR	6670445	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670446	Identifier	tdist		6670227	0					
ANR	6670447	Identifier	tdist		6670227	1					
ANR	6670448	ElseStatement	else		6670227	0					
ANR	6670449	CompoundStatement		45:11:1856:1856	6670227	0					
ANR	6670450	ExpressionStatement	min_dist = 0	703:6:26723:26735	6670227	0	True				
ANR	6670451	AssignmentExpression	min_dist = 0		6670227	0		=			
ANR	6670452	Identifier	min_dist		6670227	0					
ANR	6670453	PrimaryExpression	0		6670227	1					
ANR	6670454	IfStatement	if ( x <= centerc0 )		6670227	1					
ANR	6670455	Condition	x <= centerc0	704:10:26747:26759	6670227	0	True				
ANR	6670456	RelationalExpression	x <= centerc0		6670227	0		<=			
ANR	6670457	Identifier	x		6670227	0					
ANR	6670458	Identifier	centerc0		6670227	1					
ANR	6670459	CompoundStatement		48:25:1964:1964	6670227	1					
ANR	6670460	ExpressionStatement	tdist = ( x - maxc0 ) * C0_SCALE	705:1:26765:26795	6670227	0	True				
ANR	6670461	AssignmentExpression	tdist = ( x - maxc0 ) * C0_SCALE		6670227	0		=			
ANR	6670462	Identifier	tdist		6670227	0					
ANR	6670463	MultiplicativeExpression	( x - maxc0 ) * C0_SCALE		6670227	1		*			
ANR	6670464	AdditiveExpression	x - maxc0		6670227	0		-			
ANR	6670465	Identifier	x		6670227	0					
ANR	6670466	Identifier	maxc0		6670227	1					
ANR	6670467	Identifier	C0_SCALE		6670227	1					
ANR	6670468	ExpressionStatement	max_dist = tdist * tdist	706:1:26798:26820	6670227	1	True				
ANR	6670469	AssignmentExpression	max_dist = tdist * tdist		6670227	0		=			
ANR	6670470	Identifier	max_dist		6670227	0					
ANR	6670471	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670472	Identifier	tdist		6670227	0					
ANR	6670473	Identifier	tdist		6670227	1					
ANR	6670474	ElseStatement	else		6670227	0					
ANR	6670475	CompoundStatement		51:13:2037:2037	6670227	0					
ANR	6670476	ExpressionStatement	tdist = ( x - minc0 ) * C0_SCALE	708:1:26838:26868	6670227	0	True				
ANR	6670477	AssignmentExpression	tdist = ( x - minc0 ) * C0_SCALE		6670227	0		=			
ANR	6670478	Identifier	tdist		6670227	0					
ANR	6670479	MultiplicativeExpression	( x - minc0 ) * C0_SCALE		6670227	1		*			
ANR	6670480	AdditiveExpression	x - minc0		6670227	0		-			
ANR	6670481	Identifier	x		6670227	0					
ANR	6670482	Identifier	minc0		6670227	1					
ANR	6670483	Identifier	C0_SCALE		6670227	1					
ANR	6670484	ExpressionStatement	max_dist = tdist * tdist	709:1:26871:26893	6670227	1	True				
ANR	6670485	AssignmentExpression	max_dist = tdist * tdist		6670227	0		=			
ANR	6670486	Identifier	max_dist		6670227	0					
ANR	6670487	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670488	Identifier	tdist		6670227	0					
ANR	6670489	Identifier	tdist		6670227	1					
ANR	6670490	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )	713:4:26914:26951	6670227	2	True				
ANR	6670491	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )		6670227	0		=			
ANR	6670492	Identifier	x		6670227	0					
ANR	6670493	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 1 ] [ i ] )		6670227	1					
ANR	6670494	Callee	GETJSAMPLE		6670227	0					
ANR	6670495	Identifier	GETJSAMPLE		6670227	0					
ANR	6670496	ArgumentList	cinfo -> colormap [ 1 ] [ i ]		6670227	1					
ANR	6670497	Argument	cinfo -> colormap [ 1 ] [ i ]		6670227	0					
ANR	6670498	ArrayIndexing	cinfo -> colormap [ 1 ] [ i ]		6670227	0					
ANR	6670499	ArrayIndexing	cinfo -> colormap [ 1 ]		6670227	0					
ANR	6670500	PtrMemberAccess	cinfo -> colormap		6670227	0					
ANR	6670501	Identifier	cinfo		6670227	0					
ANR	6670502	Identifier	colormap		6670227	1					
ANR	6670503	PrimaryExpression	1		6670227	1					
ANR	6670504	Identifier	i		6670227	1					
ANR	6670505	IfStatement	if ( x < minc1 )		6670227	3					
ANR	6670506	Condition	x < minc1	714:8:26961:26969	6670227	0	True				
ANR	6670507	RelationalExpression	x < minc1		6670227	0		<			
ANR	6670508	Identifier	x		6670227	0					
ANR	6670509	Identifier	minc1		6670227	1					
ANR	6670510	CompoundStatement		58:19:2174:2174	6670227	1					
ANR	6670511	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	715:6:26980:27010	6670227	0	True				
ANR	6670512	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6670227	0		=			
ANR	6670513	Identifier	tdist		6670227	0					
ANR	6670514	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6670227	1		*			
ANR	6670515	AdditiveExpression	x - minc1		6670227	0		-			
ANR	6670516	Identifier	x		6670227	0					
ANR	6670517	Identifier	minc1		6670227	1					
ANR	6670518	Identifier	C1_SCALE		6670227	1					
ANR	6670519	ExpressionStatement	min_dist += tdist * tdist	716:6:27018:27041	6670227	1	True				
ANR	6670520	AssignmentExpression	min_dist += tdist * tdist		6670227	0		+=			
ANR	6670521	Identifier	min_dist		6670227	0					
ANR	6670522	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670523	Identifier	tdist		6670227	0					
ANR	6670524	Identifier	tdist		6670227	1					
ANR	6670525	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	717:6:27049:27079	6670227	2	True				
ANR	6670526	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6670227	0		=			
ANR	6670527	Identifier	tdist		6670227	0					
ANR	6670528	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6670227	1		*			
ANR	6670529	AdditiveExpression	x - maxc1		6670227	0		-			
ANR	6670530	Identifier	x		6670227	0					
ANR	6670531	Identifier	maxc1		6670227	1					
ANR	6670532	Identifier	C1_SCALE		6670227	1					
ANR	6670533	ExpressionStatement	max_dist += tdist * tdist	718:6:27087:27110	6670227	3	True				
ANR	6670534	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670535	Identifier	max_dist		6670227	0					
ANR	6670536	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670537	Identifier	tdist		6670227	0					
ANR	6670538	Identifier	tdist		6670227	1					
ANR	6670539	ElseStatement	else		6670227	0					
ANR	6670540	IfStatement	if ( x > maxc1 )		6670227	0					
ANR	6670541	Condition	x > maxc1	719:15:27127:27135	6670227	0	True				
ANR	6670542	RelationalExpression	x > maxc1		6670227	0		>			
ANR	6670543	Identifier	x		6670227	0					
ANR	6670544	Identifier	maxc1		6670227	1					
ANR	6670545	CompoundStatement		63:26:2340:2340	6670227	1					
ANR	6670546	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	720:6:27146:27176	6670227	0	True				
ANR	6670547	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6670227	0		=			
ANR	6670548	Identifier	tdist		6670227	0					
ANR	6670549	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6670227	1		*			
ANR	6670550	AdditiveExpression	x - maxc1		6670227	0		-			
ANR	6670551	Identifier	x		6670227	0					
ANR	6670552	Identifier	maxc1		6670227	1					
ANR	6670553	Identifier	C1_SCALE		6670227	1					
ANR	6670554	ExpressionStatement	min_dist += tdist * tdist	721:6:27184:27207	6670227	1	True				
ANR	6670555	AssignmentExpression	min_dist += tdist * tdist		6670227	0		+=			
ANR	6670556	Identifier	min_dist		6670227	0					
ANR	6670557	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670558	Identifier	tdist		6670227	0					
ANR	6670559	Identifier	tdist		6670227	1					
ANR	6670560	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	722:6:27215:27245	6670227	2	True				
ANR	6670561	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6670227	0		=			
ANR	6670562	Identifier	tdist		6670227	0					
ANR	6670563	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6670227	1		*			
ANR	6670564	AdditiveExpression	x - minc1		6670227	0		-			
ANR	6670565	Identifier	x		6670227	0					
ANR	6670566	Identifier	minc1		6670227	1					
ANR	6670567	Identifier	C1_SCALE		6670227	1					
ANR	6670568	ExpressionStatement	max_dist += tdist * tdist	723:6:27253:27276	6670227	3	True				
ANR	6670569	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670570	Identifier	max_dist		6670227	0					
ANR	6670571	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670572	Identifier	tdist		6670227	0					
ANR	6670573	Identifier	tdist		6670227	1					
ANR	6670574	ElseStatement	else		6670227	0					
ANR	6670575	CompoundStatement		68:11:2491:2491	6670227	0					
ANR	6670576	IfStatement	if ( x <= centerc1 )		6670227	0					
ANR	6670577	Condition	x <= centerc1	726:10:27362:27374	6670227	0	True				
ANR	6670578	RelationalExpression	x <= centerc1		6670227	0		<=			
ANR	6670579	Identifier	x		6670227	0					
ANR	6670580	Identifier	centerc1		6670227	1					
ANR	6670581	CompoundStatement		70:25:2579:2579	6670227	1					
ANR	6670582	ExpressionStatement	tdist = ( x - maxc1 ) * C1_SCALE	727:1:27380:27410	6670227	0	True				
ANR	6670583	AssignmentExpression	tdist = ( x - maxc1 ) * C1_SCALE		6670227	0		=			
ANR	6670584	Identifier	tdist		6670227	0					
ANR	6670585	MultiplicativeExpression	( x - maxc1 ) * C1_SCALE		6670227	1		*			
ANR	6670586	AdditiveExpression	x - maxc1		6670227	0		-			
ANR	6670587	Identifier	x		6670227	0					
ANR	6670588	Identifier	maxc1		6670227	1					
ANR	6670589	Identifier	C1_SCALE		6670227	1					
ANR	6670590	ExpressionStatement	max_dist += tdist * tdist	728:1:27413:27436	6670227	1	True				
ANR	6670591	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670592	Identifier	max_dist		6670227	0					
ANR	6670593	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670594	Identifier	tdist		6670227	0					
ANR	6670595	Identifier	tdist		6670227	1					
ANR	6670596	ElseStatement	else		6670227	0					
ANR	6670597	CompoundStatement		73:13:2653:2653	6670227	0					
ANR	6670598	ExpressionStatement	tdist = ( x - minc1 ) * C1_SCALE	730:1:27454:27484	6670227	0	True				
ANR	6670599	AssignmentExpression	tdist = ( x - minc1 ) * C1_SCALE		6670227	0		=			
ANR	6670600	Identifier	tdist		6670227	0					
ANR	6670601	MultiplicativeExpression	( x - minc1 ) * C1_SCALE		6670227	1		*			
ANR	6670602	AdditiveExpression	x - minc1		6670227	0		-			
ANR	6670603	Identifier	x		6670227	0					
ANR	6670604	Identifier	minc1		6670227	1					
ANR	6670605	Identifier	C1_SCALE		6670227	1					
ANR	6670606	ExpressionStatement	max_dist += tdist * tdist	731:1:27487:27510	6670227	1	True				
ANR	6670607	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670608	Identifier	max_dist		6670227	0					
ANR	6670609	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670610	Identifier	tdist		6670227	0					
ANR	6670611	Identifier	tdist		6670227	1					
ANR	6670612	ExpressionStatement	x = GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )	735:4:27531:27568	6670227	4	True				
ANR	6670613	AssignmentExpression	x = GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )		6670227	0		=			
ANR	6670614	Identifier	x		6670227	0					
ANR	6670615	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 2 ] [ i ] )		6670227	1					
ANR	6670616	Callee	GETJSAMPLE		6670227	0					
ANR	6670617	Identifier	GETJSAMPLE		6670227	0					
ANR	6670618	ArgumentList	cinfo -> colormap [ 2 ] [ i ]		6670227	1					
ANR	6670619	Argument	cinfo -> colormap [ 2 ] [ i ]		6670227	0					
ANR	6670620	ArrayIndexing	cinfo -> colormap [ 2 ] [ i ]		6670227	0					
ANR	6670621	ArrayIndexing	cinfo -> colormap [ 2 ]		6670227	0					
ANR	6670622	PtrMemberAccess	cinfo -> colormap		6670227	0					
ANR	6670623	Identifier	cinfo		6670227	0					
ANR	6670624	Identifier	colormap		6670227	1					
ANR	6670625	PrimaryExpression	2		6670227	1					
ANR	6670626	Identifier	i		6670227	1					
ANR	6670627	IfStatement	if ( x < minc2 )		6670227	5					
ANR	6670628	Condition	x < minc2	736:8:27578:27586	6670227	0	True				
ANR	6670629	RelationalExpression	x < minc2		6670227	0		<			
ANR	6670630	Identifier	x		6670227	0					
ANR	6670631	Identifier	minc2		6670227	1					
ANR	6670632	CompoundStatement		80:19:2791:2791	6670227	1					
ANR	6670633	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	737:6:27597:27627	6670227	0	True				
ANR	6670634	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6670227	0		=			
ANR	6670635	Identifier	tdist		6670227	0					
ANR	6670636	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6670227	1		*			
ANR	6670637	AdditiveExpression	x - minc2		6670227	0		-			
ANR	6670638	Identifier	x		6670227	0					
ANR	6670639	Identifier	minc2		6670227	1					
ANR	6670640	Identifier	C2_SCALE		6670227	1					
ANR	6670641	ExpressionStatement	min_dist += tdist * tdist	738:6:27635:27658	6670227	1	True				
ANR	6670642	AssignmentExpression	min_dist += tdist * tdist		6670227	0		+=			
ANR	6670643	Identifier	min_dist		6670227	0					
ANR	6670644	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670645	Identifier	tdist		6670227	0					
ANR	6670646	Identifier	tdist		6670227	1					
ANR	6670647	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	739:6:27666:27696	6670227	2	True				
ANR	6670648	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6670227	0		=			
ANR	6670649	Identifier	tdist		6670227	0					
ANR	6670650	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6670227	1		*			
ANR	6670651	AdditiveExpression	x - maxc2		6670227	0		-			
ANR	6670652	Identifier	x		6670227	0					
ANR	6670653	Identifier	maxc2		6670227	1					
ANR	6670654	Identifier	C2_SCALE		6670227	1					
ANR	6670655	ExpressionStatement	max_dist += tdist * tdist	740:6:27704:27727	6670227	3	True				
ANR	6670656	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670657	Identifier	max_dist		6670227	0					
ANR	6670658	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670659	Identifier	tdist		6670227	0					
ANR	6670660	Identifier	tdist		6670227	1					
ANR	6670661	ElseStatement	else		6670227	0					
ANR	6670662	IfStatement	if ( x > maxc2 )		6670227	0					
ANR	6670663	Condition	x > maxc2	741:15:27744:27752	6670227	0	True				
ANR	6670664	RelationalExpression	x > maxc2		6670227	0		>			
ANR	6670665	Identifier	x		6670227	0					
ANR	6670666	Identifier	maxc2		6670227	1					
ANR	6670667	CompoundStatement		85:26:2957:2957	6670227	1					
ANR	6670668	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	742:6:27763:27793	6670227	0	True				
ANR	6670669	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6670227	0		=			
ANR	6670670	Identifier	tdist		6670227	0					
ANR	6670671	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6670227	1		*			
ANR	6670672	AdditiveExpression	x - maxc2		6670227	0		-			
ANR	6670673	Identifier	x		6670227	0					
ANR	6670674	Identifier	maxc2		6670227	1					
ANR	6670675	Identifier	C2_SCALE		6670227	1					
ANR	6670676	ExpressionStatement	min_dist += tdist * tdist	743:6:27801:27824	6670227	1	True				
ANR	6670677	AssignmentExpression	min_dist += tdist * tdist		6670227	0		+=			
ANR	6670678	Identifier	min_dist		6670227	0					
ANR	6670679	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670680	Identifier	tdist		6670227	0					
ANR	6670681	Identifier	tdist		6670227	1					
ANR	6670682	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	744:6:27832:27862	6670227	2	True				
ANR	6670683	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6670227	0		=			
ANR	6670684	Identifier	tdist		6670227	0					
ANR	6670685	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6670227	1		*			
ANR	6670686	AdditiveExpression	x - minc2		6670227	0		-			
ANR	6670687	Identifier	x		6670227	0					
ANR	6670688	Identifier	minc2		6670227	1					
ANR	6670689	Identifier	C2_SCALE		6670227	1					
ANR	6670690	ExpressionStatement	max_dist += tdist * tdist	745:6:27870:27893	6670227	3	True				
ANR	6670691	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670692	Identifier	max_dist		6670227	0					
ANR	6670693	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670694	Identifier	tdist		6670227	0					
ANR	6670695	Identifier	tdist		6670227	1					
ANR	6670696	ElseStatement	else		6670227	0					
ANR	6670697	CompoundStatement		90:11:3108:3108	6670227	0					
ANR	6670698	IfStatement	if ( x <= centerc2 )		6670227	0					
ANR	6670699	Condition	x <= centerc2	748:10:27979:27991	6670227	0	True				
ANR	6670700	RelationalExpression	x <= centerc2		6670227	0		<=			
ANR	6670701	Identifier	x		6670227	0					
ANR	6670702	Identifier	centerc2		6670227	1					
ANR	6670703	CompoundStatement		92:25:3196:3196	6670227	1					
ANR	6670704	ExpressionStatement	tdist = ( x - maxc2 ) * C2_SCALE	749:1:27997:28027	6670227	0	True				
ANR	6670705	AssignmentExpression	tdist = ( x - maxc2 ) * C2_SCALE		6670227	0		=			
ANR	6670706	Identifier	tdist		6670227	0					
ANR	6670707	MultiplicativeExpression	( x - maxc2 ) * C2_SCALE		6670227	1		*			
ANR	6670708	AdditiveExpression	x - maxc2		6670227	0		-			
ANR	6670709	Identifier	x		6670227	0					
ANR	6670710	Identifier	maxc2		6670227	1					
ANR	6670711	Identifier	C2_SCALE		6670227	1					
ANR	6670712	ExpressionStatement	max_dist += tdist * tdist	750:1:28030:28053	6670227	1	True				
ANR	6670713	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670714	Identifier	max_dist		6670227	0					
ANR	6670715	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670716	Identifier	tdist		6670227	0					
ANR	6670717	Identifier	tdist		6670227	1					
ANR	6670718	ElseStatement	else		6670227	0					
ANR	6670719	CompoundStatement		95:13:3270:3270	6670227	0					
ANR	6670720	ExpressionStatement	tdist = ( x - minc2 ) * C2_SCALE	752:1:28071:28101	6670227	0	True				
ANR	6670721	AssignmentExpression	tdist = ( x - minc2 ) * C2_SCALE		6670227	0		=			
ANR	6670722	Identifier	tdist		6670227	0					
ANR	6670723	MultiplicativeExpression	( x - minc2 ) * C2_SCALE		6670227	1		*			
ANR	6670724	AdditiveExpression	x - minc2		6670227	0		-			
ANR	6670725	Identifier	x		6670227	0					
ANR	6670726	Identifier	minc2		6670227	1					
ANR	6670727	Identifier	C2_SCALE		6670227	1					
ANR	6670728	ExpressionStatement	max_dist += tdist * tdist	753:1:28104:28127	6670227	1	True				
ANR	6670729	AssignmentExpression	max_dist += tdist * tdist		6670227	0		+=			
ANR	6670730	Identifier	max_dist		6670227	0					
ANR	6670731	MultiplicativeExpression	tdist * tdist		6670227	1		*			
ANR	6670732	Identifier	tdist		6670227	0					
ANR	6670733	Identifier	tdist		6670227	1					
ANR	6670734	ExpressionStatement	mindist [ i ] = min_dist	757:4:28148:28169	6670227	6	True				
ANR	6670735	AssignmentExpression	mindist [ i ] = min_dist		6670227	0		=			
ANR	6670736	ArrayIndexing	mindist [ i ]		6670227	0					
ANR	6670737	Identifier	mindist		6670227	0					
ANR	6670738	Identifier	i		6670227	1					
ANR	6670739	Identifier	min_dist		6670227	1					
ANR	6670740	IfStatement	if ( max_dist < minmaxdist )		6670227	7					
ANR	6670741	Condition	max_dist < minmaxdist	758:8:28207:28227	6670227	0	True				
ANR	6670742	RelationalExpression	max_dist < minmaxdist		6670227	0		<			
ANR	6670743	Identifier	max_dist		6670227	0					
ANR	6670744	Identifier	minmaxdist		6670227	1					
ANR	6670745	ExpressionStatement	minmaxdist = max_dist	759:6:28236:28257	6670227	1	True				
ANR	6670746	AssignmentExpression	minmaxdist = max_dist		6670227	0		=			
ANR	6670747	Identifier	minmaxdist		6670227	0					
ANR	6670748	Identifier	max_dist		6670227	1					
ANR	6670749	ExpressionStatement	ncolors = 0	766:2:28480:28491	6670227	14	True				
ANR	6670750	AssignmentExpression	ncolors = 0		6670227	0		=			
ANR	6670751	Identifier	ncolors		6670227	0					
ANR	6670752	PrimaryExpression	0		6670227	1					
ANR	6670753	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6670227	15					
ANR	6670754	ForInit	i = 0 ;	767:7:28500:28505	6670227	0	True				
ANR	6670755	AssignmentExpression	i = 0		6670227	0		=			
ANR	6670756	Identifier	i		6670227	0					
ANR	6670757	PrimaryExpression	0		6670227	1					
ANR	6670758	Condition	i < numcolors	767:14:28507:28519	6670227	1	True				
ANR	6670759	RelationalExpression	i < numcolors		6670227	0		<			
ANR	6670760	Identifier	i		6670227	0					
ANR	6670761	Identifier	numcolors		6670227	1					
ANR	6670762	PostIncDecOperationExpression	i ++	767:29:28522:28524	6670227	2	True				
ANR	6670763	Identifier	i		6670227	0					
ANR	6670764	IncDec	++		6670227	1					
ANR	6670765	CompoundStatement		111:34:3729:3729	6670227	3					
ANR	6670766	IfStatement	if ( mindist [ i ] <= minmaxdist )		6670227	0					
ANR	6670767	Condition	mindist [ i ] <= minmaxdist	768:8:28537:28560	6670227	0	True				
ANR	6670768	RelationalExpression	mindist [ i ] <= minmaxdist		6670227	0		<=			
ANR	6670769	ArrayIndexing	mindist [ i ]		6670227	0					
ANR	6670770	Identifier	mindist		6670227	0					
ANR	6670771	Identifier	i		6670227	1					
ANR	6670772	Identifier	minmaxdist		6670227	1					
ANR	6670773	ExpressionStatement	colorlist [ ncolors ++ ] = ( JSAMPLE ) i	769:6:28569:28603	6670227	1	True				
ANR	6670774	AssignmentExpression	colorlist [ ncolors ++ ] = ( JSAMPLE ) i		6670227	0		=			
ANR	6670775	ArrayIndexing	colorlist [ ncolors ++ ]		6670227	0					
ANR	6670776	Identifier	colorlist		6670227	0					
ANR	6670777	PostIncDecOperationExpression	ncolors ++		6670227	1					
ANR	6670778	Identifier	ncolors		6670227	0					
ANR	6670779	IncDec	++		6670227	1					
ANR	6670780	CastExpression	( JSAMPLE ) i		6670227	1					
ANR	6670781	CastTarget	JSAMPLE		6670227	0					
ANR	6670782	Identifier	i		6670227	1					
ANR	6670783	ReturnStatement	return ncolors ;	771:2:28611:28625	6670227	16	True				
ANR	6670784	Identifier	ncolors		6670227	0					
ANR	6670785	Identifier	find_nearby_colors		6670227	1					
ANR	6670786	ParameterList	"j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , JSAMPLE colorlist [ ]"		6670227	2					
ANR	6670787	Parameter	j_decompress_ptr cinfo	647:20:24256:24277	6670227	0	True				
ANR	6670788	ParameterType	j_decompress_ptr		6670227	0					
ANR	6670789	Identifier	cinfo		6670227	1					
ANR	6670790	Parameter	int minc0	647:44:24280:24288	6670227	1	True				
ANR	6670791	ParameterType	int		6670227	0					
ANR	6670792	Identifier	minc0		6670227	1					
ANR	6670793	Parameter	int minc1	647:55:24291:24299	6670227	2	True				
ANR	6670794	ParameterType	int		6670227	0					
ANR	6670795	Identifier	minc1		6670227	1					
ANR	6670796	Parameter	int minc2	647:66:24302:24310	6670227	3	True				
ANR	6670797	ParameterType	int		6670227	0					
ANR	6670798	Identifier	minc2		6670227	1					
ANR	6670799	Parameter	JSAMPLE colorlist [ ]	648:6:24319:24337	6670227	4	True				
ANR	6670800	ParameterType	JSAMPLE [ ]		6670227	0					
ANR	6670801	Identifier	colorlist		6670227	1					
ANR	6670802	CFGEntryNode	ENTRY		6670227		True				
ANR	6670803	CFGExitNode	EXIT		6670227		True				
ANR	6670804	Symbol	* * cinfo		6670227						
ANR	6670805	Symbol	C2_SHIFT		6670227						
ANR	6670806	Symbol	mindist		6670227						
ANR	6670807	Symbol	C2_SCALE		6670227						
ANR	6670808	Symbol	tdist		6670227						
ANR	6670809	Symbol	* cinfo -> colormap		6670227						
ANR	6670810	Symbol	minc0		6670227						
ANR	6670811	Symbol	* mindist		6670227						
ANR	6670812	Symbol	BOX_C1_SHIFT		6670227						
ANR	6670813	Symbol	minmaxdist		6670227						
ANR	6670814	Symbol	C0_SHIFT		6670227						
ANR	6670815	Symbol	* colorlist		6670227						
ANR	6670816	Symbol	colorlist		6670227						
ANR	6670817	Symbol	* cinfo		6670227						
ANR	6670818	Symbol	min_dist		6670227						
ANR	6670819	Symbol	C0_SCALE		6670227						
ANR	6670820	Symbol	numcolors		6670227						
ANR	6670821	Symbol	GETJSAMPLE		6670227						
ANR	6670822	Symbol	cinfo -> colormap		6670227						
ANR	6670823	Symbol	i		6670227						
ANR	6670824	Symbol	BOX_C0_SHIFT		6670227						
ANR	6670825	Symbol	max_dist		6670227						
ANR	6670826	Symbol	* * cinfo -> colormap		6670227						
ANR	6670827	Symbol	minc2		6670227						
ANR	6670828	Symbol	minc1		6670227						
ANR	6670829	Symbol	centerc1		6670227						
ANR	6670830	Symbol	ncolors		6670227						
ANR	6670831	Symbol	cinfo -> actual_number_of_colors		6670227						
ANR	6670832	Symbol	centerc0		6670227						
ANR	6670833	Symbol	* i		6670227						
ANR	6670834	Symbol	C1_SCALE		6670227						
ANR	6670835	Symbol	cinfo		6670227						
ANR	6670836	Symbol	centerc2		6670227						
ANR	6670837	Symbol	* * * cinfo		6670227						
ANR	6670838	Symbol	x		6670227						
ANR	6670839	Symbol	maxc0		6670227						
ANR	6670840	Symbol	BOX_C2_SHIFT		6670227						
ANR	6670841	Symbol	maxc2		6670227						
ANR	6670842	Symbol	C1_SHIFT		6670227						
ANR	6670843	Symbol	maxc1		6670227						
ANR	6670844	Function	find_best_colors	776:0:28643:31543							
ANR	6670845	FunctionDef	"find_best_colors (j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , int numcolors , JSAMPLE colorlist [ ] , JSAMPLE bestcolor [ ])"		6670844	0					
ANR	6670846	CompoundStatement		784:0:29139:31543	6670844	0					
ANR	6670847	IdentifierDeclStatement	"int ic0 , ic1 , ic2 ;"	785:2:29143:29160	6670844	0	True				
ANR	6670848	IdentifierDecl	ic0		6670844	0					
ANR	6670849	IdentifierDeclType	int		6670844	0					
ANR	6670850	Identifier	ic0		6670844	1					
ANR	6670851	IdentifierDecl	ic1		6670844	1					
ANR	6670852	IdentifierDeclType	int		6670844	0					
ANR	6670853	Identifier	ic1		6670844	1					
ANR	6670854	IdentifierDecl	ic2		6670844	2					
ANR	6670855	IdentifierDeclType	int		6670844	0					
ANR	6670856	Identifier	ic2		6670844	1					
ANR	6670857	IdentifierDeclStatement	"int i , icolor ;"	786:2:29164:29177	6670844	1	True				
ANR	6670858	IdentifierDecl	i		6670844	0					
ANR	6670859	IdentifierDeclType	int		6670844	0					
ANR	6670860	Identifier	i		6670844	1					
ANR	6670861	IdentifierDecl	icolor		6670844	1					
ANR	6670862	IdentifierDeclType	int		6670844	0					
ANR	6670863	Identifier	icolor		6670844	1					
ANR	6670864	Statement	register	787:2:29181:29188	6670844	2	True				
ANR	6670865	IdentifierDeclStatement	INT32 * bptr ;	787:11:29190:29202	6670844	3	True				
ANR	6670866	IdentifierDecl	* bptr		6670844	0					
ANR	6670867	IdentifierDeclType	INT32 *		6670844	0					
ANR	6670868	Identifier	bptr		6670844	1					
ANR	6670869	IdentifierDeclStatement	JSAMPLE * cptr ;	788:2:29242:29256	6670844	4	True				
ANR	6670870	IdentifierDecl	* cptr		6670844	0					
ANR	6670871	IdentifierDeclType	JSAMPLE *		6670844	0					
ANR	6670872	Identifier	cptr		6670844	1					
ANR	6670873	IdentifierDeclStatement	"INT32 dist0 , dist1 ;"	789:2:29298:29316	6670844	5	True				
ANR	6670874	IdentifierDecl	dist0		6670844	0					
ANR	6670875	IdentifierDeclType	INT32		6670844	0					
ANR	6670876	Identifier	dist0		6670844	1					
ANR	6670877	IdentifierDecl	dist1		6670844	1					
ANR	6670878	IdentifierDeclType	INT32		6670844	0					
ANR	6670879	Identifier	dist1		6670844	1					
ANR	6670880	Statement	register	790:2:29351:29358	6670844	6	True				
ANR	6670881	IdentifierDeclStatement	INT32 dist2 ;	790:11:29360:29371	6670844	7	True				
ANR	6670882	IdentifierDecl	dist2		6670844	0					
ANR	6670883	IdentifierDeclType	INT32		6670844	0					
ANR	6670884	Identifier	dist2		6670844	1					
ANR	6670885	IdentifierDeclStatement	"INT32 xx0 , xx1 ;"	791:2:29413:29427	6670844	8	True				
ANR	6670886	IdentifierDecl	xx0		6670844	0					
ANR	6670887	IdentifierDeclType	INT32		6670844	0					
ANR	6670888	Identifier	xx0		6670844	1					
ANR	6670889	IdentifierDecl	xx1		6670844	1					
ANR	6670890	IdentifierDeclType	INT32		6670844	0					
ANR	6670891	Identifier	xx1		6670844	1					
ANR	6670892	Statement	register	792:2:29458:29465	6670844	9	True				
ANR	6670893	IdentifierDeclStatement	INT32 xx2 ;	792:11:29467:29476	6670844	10	True				
ANR	6670894	IdentifierDecl	xx2		6670844	0					
ANR	6670895	IdentifierDeclType	INT32		6670844	0					
ANR	6670896	Identifier	xx2		6670844	1					
ANR	6670897	IdentifierDeclStatement	"INT32 inc0 , inc1 , inc2 ;"	793:2:29480:29502	6670844	11	True				
ANR	6670898	IdentifierDecl	inc0		6670844	0					
ANR	6670899	IdentifierDeclType	INT32		6670844	0					
ANR	6670900	Identifier	inc0		6670844	1					
ANR	6670901	IdentifierDecl	inc1		6670844	1					
ANR	6670902	IdentifierDeclType	INT32		6670844	0					
ANR	6670903	Identifier	inc1		6670844	1					
ANR	6670904	IdentifierDecl	inc2		6670844	2					
ANR	6670905	IdentifierDeclType	INT32		6670844	0					
ANR	6670906	Identifier	inc2		6670844	1					
ANR	6670907	IdentifierDeclStatement	INT32 bestdist [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ] ;	795:2:29622:29680	6670844	12	True				
ANR	6670908	IdentifierDecl	bestdist [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6670844	0					
ANR	6670909	IdentifierDeclType	INT32 [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6670844	0					
ANR	6670910	Identifier	bestdist		6670844	1					
ANR	6670911	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6670844	2		*			
ANR	6670912	Identifier	BOX_C0_ELEMS		6670844	0					
ANR	6670913	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6670844	1		*			
ANR	6670914	Identifier	BOX_C1_ELEMS		6670844	0					
ANR	6670915	Identifier	BOX_C2_ELEMS		6670844	1					
ANR	6670916	ExpressionStatement	bptr = bestdist	798:2:29750:29765	6670844	13	True				
ANR	6670917	AssignmentExpression	bptr = bestdist		6670844	0		=			
ANR	6670918	Identifier	bptr		6670844	0					
ANR	6670919	Identifier	bestdist		6670844	1					
ANR	6670920	ForStatement	for ( i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1 ; i >= 0 ; i -- )		6670844	14					
ANR	6670921	ForInit	i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1 ;	799:7:29774:29818	6670844	0	True				
ANR	6670922	AssignmentExpression	i = BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1		6670844	0		=			
ANR	6670923	Identifier	i		6670844	0					
ANR	6670924	AdditiveExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS - 1		6670844	1		-			
ANR	6670925	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6670844	0		*			
ANR	6670926	Identifier	BOX_C0_ELEMS		6670844	0					
ANR	6670927	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6670844	1		*			
ANR	6670928	Identifier	BOX_C1_ELEMS		6670844	0					
ANR	6670929	Identifier	BOX_C2_ELEMS		6670844	1					
ANR	6670930	PrimaryExpression	1		6670844	1					
ANR	6670931	Condition	i >= 0	799:53:29820:29825	6670844	1	True				
ANR	6670932	RelationalExpression	i >= 0		6670844	0		>=			
ANR	6670933	Identifier	i		6670844	0					
ANR	6670934	PrimaryExpression	0		6670844	1					
ANR	6670935	PostIncDecOperationExpression	i --	799:61:29828:29830	6670844	2	True				
ANR	6670936	Identifier	i		6670844	0					
ANR	6670937	IncDec	--		6670844	1					
ANR	6670938	ExpressionStatement	* bptr ++ = 0x7FFFFFFFL	800:4:29837:29858	6670844	3	True				
ANR	6670939	AssignmentExpression	* bptr ++ = 0x7FFFFFFFL		6670844	0		=			
ANR	6670940	UnaryOperationExpression	* bptr ++		6670844	0					
ANR	6670941	UnaryOperator	*		6670844	0					
ANR	6670942	PostIncDecOperationExpression	bptr ++		6670844	1					
ANR	6670943	Identifier	bptr		6670844	0					
ANR	6670944	IncDec	++		6670844	1					
ANR	6670945	PrimaryExpression	0x7FFFFFFFL		6670844	1					
ANR	6670946	Statement	define	808:1:30134:30139	6670844	15	True				
ANR	6670947	Statement	STEP_C0	808:8:30141:30147	6670844	16	True				
ANR	6670948	Statement	(	808:17:30150:30150	6670844	17	True				
ANR	6670949	Statement	(	808:18:30151:30151	6670844	18	True				
ANR	6670950	Statement	1	808:19:30152:30152	6670844	19	True				
ANR	6670951	Statement	<<	808:21:30154:30155	6670844	20	True				
ANR	6670952	Statement	C0_SHIFT	808:24:30157:30164	6670844	21	True				
ANR	6670953	Statement	)	808:32:30165:30165	6670844	22	True				
ANR	6670954	Statement	*	808:34:30167:30167	6670844	23	True				
ANR	6670955	Statement	C0_SCALE	808:36:30169:30176	6670844	24	True				
ANR	6670956	Statement	)	808:44:30177:30177	6670844	25	True				
ANR	6670957	Statement	define	809:1:30180:30185	6670844	26	True				
ANR	6670958	Statement	STEP_C1	809:8:30187:30193	6670844	27	True				
ANR	6670959	Statement	(	809:17:30196:30196	6670844	28	True				
ANR	6670960	Statement	(	809:18:30197:30197	6670844	29	True				
ANR	6670961	Statement	1	809:19:30198:30198	6670844	30	True				
ANR	6670962	Statement	<<	809:21:30200:30201	6670844	31	True				
ANR	6670963	Statement	C1_SHIFT	809:24:30203:30210	6670844	32	True				
ANR	6670964	Statement	)	809:32:30211:30211	6670844	33	True				
ANR	6670965	Statement	*	809:34:30213:30213	6670844	34	True				
ANR	6670966	Statement	C1_SCALE	809:36:30215:30222	6670844	35	True				
ANR	6670967	Statement	)	809:44:30223:30223	6670844	36	True				
ANR	6670968	Statement	define	810:1:30226:30231	6670844	37	True				
ANR	6670969	Statement	STEP_C2	810:8:30233:30239	6670844	38	True				
ANR	6670970	Statement	(	810:17:30242:30242	6670844	39	True				
ANR	6670971	Statement	(	810:18:30243:30243	6670844	40	True				
ANR	6670972	Statement	1	810:19:30244:30244	6670844	41	True				
ANR	6670973	Statement	<<	810:21:30246:30247	6670844	42	True				
ANR	6670974	Statement	C2_SHIFT	810:24:30249:30256	6670844	43	True				
ANR	6670975	Statement	)	810:32:30257:30257	6670844	44	True				
ANR	6670976	Statement	*	810:34:30259:30259	6670844	45	True				
ANR	6670977	Statement	C2_SCALE	810:36:30261:30268	6670844	46	True				
ANR	6670978	Statement	)	810:44:30269:30269	6670844	47	True				
ANR	6670979	ForStatement	for ( i = 0 ; i < numcolors ; i ++ )		6670844	48					
ANR	6670980	ForInit	i = 0 ;	812:7:30281:30286	6670844	0	True				
ANR	6670981	AssignmentExpression	i = 0		6670844	0		=			
ANR	6670982	Identifier	i		6670844	0					
ANR	6670983	PrimaryExpression	0		6670844	1					
ANR	6670984	Condition	i < numcolors	812:14:30288:30300	6670844	1	True				
ANR	6670985	RelationalExpression	i < numcolors		6670844	0		<			
ANR	6670986	Identifier	i		6670844	0					
ANR	6670987	Identifier	numcolors		6670844	1					
ANR	6670988	PostIncDecOperationExpression	i ++	812:29:30303:30305	6670844	2	True				
ANR	6670989	Identifier	i		6670844	0					
ANR	6670990	IncDec	++		6670844	1					
ANR	6670991	CompoundStatement		29:34:1168:1168	6670844	3					
ANR	6670992	ExpressionStatement	icolor = GETJSAMPLE ( colorlist [ i ] )	813:4:30314:30347	6670844	0	True				
ANR	6670993	AssignmentExpression	icolor = GETJSAMPLE ( colorlist [ i ] )		6670844	0		=			
ANR	6670994	Identifier	icolor		6670844	0					
ANR	6670995	CallExpression	GETJSAMPLE ( colorlist [ i ] )		6670844	1					
ANR	6670996	Callee	GETJSAMPLE		6670844	0					
ANR	6670997	Identifier	GETJSAMPLE		6670844	0					
ANR	6670998	ArgumentList	colorlist [ i ]		6670844	1					
ANR	6670999	Argument	colorlist [ i ]		6670844	0					
ANR	6671000	ArrayIndexing	colorlist [ i ]		6670844	0					
ANR	6671001	Identifier	colorlist		6670844	0					
ANR	6671002	Identifier	i		6670844	1					
ANR	6671003	ExpressionStatement	inc0 = ( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE	815:4:30423:30489	6670844	1	True				
ANR	6671004	AssignmentExpression	inc0 = ( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE		6670844	0		=			
ANR	6671005	Identifier	inc0		6670844	0					
ANR	6671006	MultiplicativeExpression	( minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] ) ) * C0_SCALE		6670844	1		*			
ANR	6671007	AdditiveExpression	minc0 - GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] )		6670844	0		-			
ANR	6671008	Identifier	minc0		6670844	0					
ANR	6671009	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 0 ] [ icolor ] )		6670844	1					
ANR	6671010	Callee	GETJSAMPLE		6670844	0					
ANR	6671011	Identifier	GETJSAMPLE		6670844	0					
ANR	6671012	ArgumentList	cinfo -> colormap [ 0 ] [ icolor ]		6670844	1					
ANR	6671013	Argument	cinfo -> colormap [ 0 ] [ icolor ]		6670844	0					
ANR	6671014	ArrayIndexing	cinfo -> colormap [ 0 ] [ icolor ]		6670844	0					
ANR	6671015	ArrayIndexing	cinfo -> colormap [ 0 ]		6670844	0					
ANR	6671016	PtrMemberAccess	cinfo -> colormap		6670844	0					
ANR	6671017	Identifier	cinfo		6670844	0					
ANR	6671018	Identifier	colormap		6670844	1					
ANR	6671019	PrimaryExpression	0		6670844	1					
ANR	6671020	Identifier	icolor		6670844	1					
ANR	6671021	Identifier	C0_SCALE		6670844	1					
ANR	6671022	ExpressionStatement	dist0 = inc0 * inc0	816:4:30495:30512	6670844	2	True				
ANR	6671023	AssignmentExpression	dist0 = inc0 * inc0		6670844	0		=			
ANR	6671024	Identifier	dist0		6670844	0					
ANR	6671025	MultiplicativeExpression	inc0 * inc0		6670844	1		*			
ANR	6671026	Identifier	inc0		6670844	0					
ANR	6671027	Identifier	inc0		6670844	1					
ANR	6671028	ExpressionStatement	inc1 = ( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE	817:4:30518:30584	6670844	3	True				
ANR	6671029	AssignmentExpression	inc1 = ( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE		6670844	0		=			
ANR	6671030	Identifier	inc1		6670844	0					
ANR	6671031	MultiplicativeExpression	( minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] ) ) * C1_SCALE		6670844	1		*			
ANR	6671032	AdditiveExpression	minc1 - GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] )		6670844	0		-			
ANR	6671033	Identifier	minc1		6670844	0					
ANR	6671034	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 1 ] [ icolor ] )		6670844	1					
ANR	6671035	Callee	GETJSAMPLE		6670844	0					
ANR	6671036	Identifier	GETJSAMPLE		6670844	0					
ANR	6671037	ArgumentList	cinfo -> colormap [ 1 ] [ icolor ]		6670844	1					
ANR	6671038	Argument	cinfo -> colormap [ 1 ] [ icolor ]		6670844	0					
ANR	6671039	ArrayIndexing	cinfo -> colormap [ 1 ] [ icolor ]		6670844	0					
ANR	6671040	ArrayIndexing	cinfo -> colormap [ 1 ]		6670844	0					
ANR	6671041	PtrMemberAccess	cinfo -> colormap		6670844	0					
ANR	6671042	Identifier	cinfo		6670844	0					
ANR	6671043	Identifier	colormap		6670844	1					
ANR	6671044	PrimaryExpression	1		6670844	1					
ANR	6671045	Identifier	icolor		6670844	1					
ANR	6671046	Identifier	C1_SCALE		6670844	1					
ANR	6671047	ExpressionStatement	dist0 += inc1 * inc1	818:4:30590:30608	6670844	4	True				
ANR	6671048	AssignmentExpression	dist0 += inc1 * inc1		6670844	0		+=			
ANR	6671049	Identifier	dist0		6670844	0					
ANR	6671050	MultiplicativeExpression	inc1 * inc1		6670844	1		*			
ANR	6671051	Identifier	inc1		6670844	0					
ANR	6671052	Identifier	inc1		6670844	1					
ANR	6671053	ExpressionStatement	inc2 = ( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE	819:4:30614:30680	6670844	5	True				
ANR	6671054	AssignmentExpression	inc2 = ( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE		6670844	0		=			
ANR	6671055	Identifier	inc2		6670844	0					
ANR	6671056	MultiplicativeExpression	( minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] ) ) * C2_SCALE		6670844	1		*			
ANR	6671057	AdditiveExpression	minc2 - GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] )		6670844	0		-			
ANR	6671058	Identifier	minc2		6670844	0					
ANR	6671059	CallExpression	GETJSAMPLE ( cinfo -> colormap [ 2 ] [ icolor ] )		6670844	1					
ANR	6671060	Callee	GETJSAMPLE		6670844	0					
ANR	6671061	Identifier	GETJSAMPLE		6670844	0					
ANR	6671062	ArgumentList	cinfo -> colormap [ 2 ] [ icolor ]		6670844	1					
ANR	6671063	Argument	cinfo -> colormap [ 2 ] [ icolor ]		6670844	0					
ANR	6671064	ArrayIndexing	cinfo -> colormap [ 2 ] [ icolor ]		6670844	0					
ANR	6671065	ArrayIndexing	cinfo -> colormap [ 2 ]		6670844	0					
ANR	6671066	PtrMemberAccess	cinfo -> colormap		6670844	0					
ANR	6671067	Identifier	cinfo		6670844	0					
ANR	6671068	Identifier	colormap		6670844	1					
ANR	6671069	PrimaryExpression	2		6670844	1					
ANR	6671070	Identifier	icolor		6670844	1					
ANR	6671071	Identifier	C2_SCALE		6670844	1					
ANR	6671072	ExpressionStatement	dist0 += inc2 * inc2	820:4:30686:30704	6670844	6	True				
ANR	6671073	AssignmentExpression	dist0 += inc2 * inc2		6670844	0		+=			
ANR	6671074	Identifier	dist0		6670844	0					
ANR	6671075	MultiplicativeExpression	inc2 * inc2		6670844	1		*			
ANR	6671076	Identifier	inc2		6670844	0					
ANR	6671077	Identifier	inc2		6670844	1					
ANR	6671078	ExpressionStatement	inc0 = inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0	822:4:30759:30806	6670844	7	True				
ANR	6671079	AssignmentExpression	inc0 = inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0		6670844	0		=			
ANR	6671080	Identifier	inc0		6670844	0					
ANR	6671081	AdditiveExpression	inc0 * ( 2 * STEP_C0 ) + STEP_C0 * STEP_C0		6670844	1		+			
ANR	6671082	MultiplicativeExpression	inc0 * ( 2 * STEP_C0 )		6670844	0		*			
ANR	6671083	Identifier	inc0		6670844	0					
ANR	6671084	MultiplicativeExpression	2 * STEP_C0		6670844	1		*			
ANR	6671085	PrimaryExpression	2		6670844	0					
ANR	6671086	Identifier	STEP_C0		6670844	1					
ANR	6671087	MultiplicativeExpression	STEP_C0 * STEP_C0		6670844	1		*			
ANR	6671088	Identifier	STEP_C0		6670844	0					
ANR	6671089	Identifier	STEP_C0		6670844	1					
ANR	6671090	ExpressionStatement	inc1 = inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1	823:4:30812:30859	6670844	8	True				
ANR	6671091	AssignmentExpression	inc1 = inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1		6670844	0		=			
ANR	6671092	Identifier	inc1		6670844	0					
ANR	6671093	AdditiveExpression	inc1 * ( 2 * STEP_C1 ) + STEP_C1 * STEP_C1		6670844	1		+			
ANR	6671094	MultiplicativeExpression	inc1 * ( 2 * STEP_C1 )		6670844	0		*			
ANR	6671095	Identifier	inc1		6670844	0					
ANR	6671096	MultiplicativeExpression	2 * STEP_C1		6670844	1		*			
ANR	6671097	PrimaryExpression	2		6670844	0					
ANR	6671098	Identifier	STEP_C1		6670844	1					
ANR	6671099	MultiplicativeExpression	STEP_C1 * STEP_C1		6670844	1		*			
ANR	6671100	Identifier	STEP_C1		6670844	0					
ANR	6671101	Identifier	STEP_C1		6670844	1					
ANR	6671102	ExpressionStatement	inc2 = inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2	824:4:30865:30912	6670844	9	True				
ANR	6671103	AssignmentExpression	inc2 = inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2		6670844	0		=			
ANR	6671104	Identifier	inc2		6670844	0					
ANR	6671105	AdditiveExpression	inc2 * ( 2 * STEP_C2 ) + STEP_C2 * STEP_C2		6670844	1		+			
ANR	6671106	MultiplicativeExpression	inc2 * ( 2 * STEP_C2 )		6670844	0		*			
ANR	6671107	Identifier	inc2		6670844	0					
ANR	6671108	MultiplicativeExpression	2 * STEP_C2		6670844	1		*			
ANR	6671109	PrimaryExpression	2		6670844	0					
ANR	6671110	Identifier	STEP_C2		6670844	1					
ANR	6671111	MultiplicativeExpression	STEP_C2 * STEP_C2		6670844	1		*			
ANR	6671112	Identifier	STEP_C2		6670844	0					
ANR	6671113	Identifier	STEP_C2		6670844	1					
ANR	6671114	ExpressionStatement	bptr = bestdist	826:4:30996:31011	6670844	10	True				
ANR	6671115	AssignmentExpression	bptr = bestdist		6670844	0		=			
ANR	6671116	Identifier	bptr		6670844	0					
ANR	6671117	Identifier	bestdist		6670844	1					
ANR	6671118	ExpressionStatement	cptr = bestcolor	827:4:31017:31033	6670844	11	True				
ANR	6671119	AssignmentExpression	cptr = bestcolor		6670844	0		=			
ANR	6671120	Identifier	cptr		6670844	0					
ANR	6671121	Identifier	bestcolor		6670844	1					
ANR	6671122	ExpressionStatement	xx0 = inc0	828:4:31039:31049	6670844	12	True				
ANR	6671123	AssignmentExpression	xx0 = inc0		6670844	0		=			
ANR	6671124	Identifier	xx0		6670844	0					
ANR	6671125	Identifier	inc0		6670844	1					
ANR	6671126	ForStatement	for ( ic0 = BOX_C0_ELEMS - 1 ; ic0 >= 0 ; ic0 -- )		6670844	13					
ANR	6671127	ForInit	ic0 = BOX_C0_ELEMS - 1 ;	829:9:31060:31080	6670844	0	True				
ANR	6671128	AssignmentExpression	ic0 = BOX_C0_ELEMS - 1		6670844	0		=			
ANR	6671129	Identifier	ic0		6670844	0					
ANR	6671130	AdditiveExpression	BOX_C0_ELEMS - 1		6670844	1		-			
ANR	6671131	Identifier	BOX_C0_ELEMS		6670844	0					
ANR	6671132	PrimaryExpression	1		6670844	1					
ANR	6671133	Condition	ic0 >= 0	829:31:31082:31089	6670844	1	True				
ANR	6671134	RelationalExpression	ic0 >= 0		6670844	0		>=			
ANR	6671135	Identifier	ic0		6670844	0					
ANR	6671136	PrimaryExpression	0		6670844	1					
ANR	6671137	PostIncDecOperationExpression	ic0 --	829:41:31092:31096	6670844	2	True				
ANR	6671138	Identifier	ic0		6670844	0					
ANR	6671139	IncDec	--		6670844	1					
ANR	6671140	CompoundStatement		46:48:1959:1959	6670844	3					
ANR	6671141	ExpressionStatement	dist1 = dist0	830:6:31107:31120	6670844	0	True				
ANR	6671142	AssignmentExpression	dist1 = dist0		6670844	0		=			
ANR	6671143	Identifier	dist1		6670844	0					
ANR	6671144	Identifier	dist0		6670844	1					
ANR	6671145	ExpressionStatement	xx1 = inc1	831:6:31128:31138	6670844	1	True				
ANR	6671146	AssignmentExpression	xx1 = inc1		6670844	0		=			
ANR	6671147	Identifier	xx1		6670844	0					
ANR	6671148	Identifier	inc1		6670844	1					
ANR	6671149	ForStatement	for ( ic1 = BOX_C1_ELEMS - 1 ; ic1 >= 0 ; ic1 -- )		6670844	2					
ANR	6671150	ForInit	ic1 = BOX_C1_ELEMS - 1 ;	832:11:31151:31171	6670844	0	True				
ANR	6671151	AssignmentExpression	ic1 = BOX_C1_ELEMS - 1		6670844	0		=			
ANR	6671152	Identifier	ic1		6670844	0					
ANR	6671153	AdditiveExpression	BOX_C1_ELEMS - 1		6670844	1		-			
ANR	6671154	Identifier	BOX_C1_ELEMS		6670844	0					
ANR	6671155	PrimaryExpression	1		6670844	1					
ANR	6671156	Condition	ic1 >= 0	832:33:31173:31180	6670844	1	True				
ANR	6671157	RelationalExpression	ic1 >= 0		6670844	0		>=			
ANR	6671158	Identifier	ic1		6670844	0					
ANR	6671159	PrimaryExpression	0		6670844	1					
ANR	6671160	PostIncDecOperationExpression	ic1 --	832:43:31183:31187	6670844	2	True				
ANR	6671161	Identifier	ic1		6670844	0					
ANR	6671162	IncDec	--		6670844	1					
ANR	6671163	CompoundStatement		49:50:2050:2050	6670844	3					
ANR	6671164	ExpressionStatement	dist2 = dist1	833:1:31193:31206	6670844	0	True				
ANR	6671165	AssignmentExpression	dist2 = dist1		6670844	0		=			
ANR	6671166	Identifier	dist2		6670844	0					
ANR	6671167	Identifier	dist1		6670844	1					
ANR	6671168	ExpressionStatement	xx2 = inc2	834:1:31209:31219	6670844	1	True				
ANR	6671169	AssignmentExpression	xx2 = inc2		6670844	0		=			
ANR	6671170	Identifier	xx2		6670844	0					
ANR	6671171	Identifier	inc2		6670844	1					
ANR	6671172	ForStatement	for ( ic2 = BOX_C2_ELEMS - 1 ; ic2 >= 0 ; ic2 -- )		6670844	2					
ANR	6671173	ForInit	ic2 = BOX_C2_ELEMS - 1 ;	835:6:31227:31247	6670844	0	True				
ANR	6671174	AssignmentExpression	ic2 = BOX_C2_ELEMS - 1		6670844	0		=			
ANR	6671175	Identifier	ic2		6670844	0					
ANR	6671176	AdditiveExpression	BOX_C2_ELEMS - 1		6670844	1		-			
ANR	6671177	Identifier	BOX_C2_ELEMS		6670844	0					
ANR	6671178	PrimaryExpression	1		6670844	1					
ANR	6671179	Condition	ic2 >= 0	835:28:31249:31256	6670844	1	True				
ANR	6671180	RelationalExpression	ic2 >= 0		6670844	0		>=			
ANR	6671181	Identifier	ic2		6670844	0					
ANR	6671182	PrimaryExpression	0		6670844	1					
ANR	6671183	PostIncDecOperationExpression	ic2 --	835:38:31259:31263	6670844	2	True				
ANR	6671184	Identifier	ic2		6670844	0					
ANR	6671185	IncDec	--		6670844	1					
ANR	6671186	CompoundStatement		52:45:2126:2126	6670844	3					
ANR	6671187	IfStatement	if ( dist2 < * bptr )		6670844	0					
ANR	6671188	Condition	dist2 < * bptr	836:7:31275:31287	6670844	0	True				
ANR	6671189	RelationalExpression	dist2 < * bptr		6670844	0		<			
ANR	6671190	Identifier	dist2		6670844	0					
ANR	6671191	UnaryOperationExpression	* bptr		6670844	1					
ANR	6671192	UnaryOperator	*		6670844	0					
ANR	6671193	Identifier	bptr		6670844	1					
ANR	6671194	CompoundStatement		53:22:2150:2150	6670844	1					
ANR	6671195	ExpressionStatement	* bptr = dist2	837:5:31297:31310	6670844	0	True				
ANR	6671196	AssignmentExpression	* bptr = dist2		6670844	0		=			
ANR	6671197	UnaryOperationExpression	* bptr		6670844	0					
ANR	6671198	UnaryOperator	*		6670844	0					
ANR	6671199	Identifier	bptr		6670844	1					
ANR	6671200	Identifier	dist2		6670844	1					
ANR	6671201	ExpressionStatement	* cptr = ( JSAMPLE ) icolor	838:5:31317:31341	6670844	1	True				
ANR	6671202	AssignmentExpression	* cptr = ( JSAMPLE ) icolor		6670844	0		=			
ANR	6671203	UnaryOperationExpression	* cptr		6670844	0					
ANR	6671204	UnaryOperator	*		6670844	0					
ANR	6671205	Identifier	cptr		6670844	1					
ANR	6671206	CastExpression	( JSAMPLE ) icolor		6670844	1					
ANR	6671207	CastTarget	JSAMPLE		6670844	0					
ANR	6671208	Identifier	icolor		6670844	1					
ANR	6671209	ExpressionStatement	dist2 += xx2	840:3:31351:31363	6670844	1	True				
ANR	6671210	AssignmentExpression	dist2 += xx2		6670844	0		+=			
ANR	6671211	Identifier	dist2		6670844	0					
ANR	6671212	Identifier	xx2		6670844	1					
ANR	6671213	ExpressionStatement	xx2 += 2 * STEP_C2 * STEP_C2	841:3:31368:31396	6670844	2	True				
ANR	6671214	AssignmentExpression	xx2 += 2 * STEP_C2 * STEP_C2		6670844	0		+=			
ANR	6671215	Identifier	xx2		6670844	0					
ANR	6671216	MultiplicativeExpression	2 * STEP_C2 * STEP_C2		6670844	1		*			
ANR	6671217	PrimaryExpression	2		6670844	0					
ANR	6671218	MultiplicativeExpression	STEP_C2 * STEP_C2		6670844	1		*			
ANR	6671219	Identifier	STEP_C2		6670844	0					
ANR	6671220	Identifier	STEP_C2		6670844	1					
ANR	6671221	ExpressionStatement	bptr ++	842:3:31401:31407	6670844	3	True				
ANR	6671222	PostIncDecOperationExpression	bptr ++		6670844	0					
ANR	6671223	Identifier	bptr		6670844	0					
ANR	6671224	IncDec	++		6670844	1					
ANR	6671225	ExpressionStatement	cptr ++	843:3:31412:31418	6670844	4	True				
ANR	6671226	PostIncDecOperationExpression	cptr ++		6670844	0					
ANR	6671227	Identifier	cptr		6670844	0					
ANR	6671228	IncDec	++		6670844	1					
ANR	6671229	ExpressionStatement	dist1 += xx1	845:1:31424:31436	6670844	3	True				
ANR	6671230	AssignmentExpression	dist1 += xx1		6670844	0		+=			
ANR	6671231	Identifier	dist1		6670844	0					
ANR	6671232	Identifier	xx1		6670844	1					
ANR	6671233	ExpressionStatement	xx1 += 2 * STEP_C1 * STEP_C1	846:1:31439:31467	6670844	4	True				
ANR	6671234	AssignmentExpression	xx1 += 2 * STEP_C1 * STEP_C1		6670844	0		+=			
ANR	6671235	Identifier	xx1		6670844	0					
ANR	6671236	MultiplicativeExpression	2 * STEP_C1 * STEP_C1		6670844	1		*			
ANR	6671237	PrimaryExpression	2		6670844	0					
ANR	6671238	MultiplicativeExpression	STEP_C1 * STEP_C1		6670844	1		*			
ANR	6671239	Identifier	STEP_C1		6670844	0					
ANR	6671240	Identifier	STEP_C1		6670844	1					
ANR	6671241	ExpressionStatement	dist0 += xx0	848:6:31483:31495	6670844	3	True				
ANR	6671242	AssignmentExpression	dist0 += xx0		6670844	0		+=			
ANR	6671243	Identifier	dist0		6670844	0					
ANR	6671244	Identifier	xx0		6670844	1					
ANR	6671245	ExpressionStatement	xx0 += 2 * STEP_C0 * STEP_C0	849:6:31503:31531	6670844	4	True				
ANR	6671246	AssignmentExpression	xx0 += 2 * STEP_C0 * STEP_C0		6670844	0		+=			
ANR	6671247	Identifier	xx0		6670844	0					
ANR	6671248	MultiplicativeExpression	2 * STEP_C0 * STEP_C0		6670844	1		*			
ANR	6671249	PrimaryExpression	2		6670844	0					
ANR	6671250	MultiplicativeExpression	STEP_C0 * STEP_C0		6670844	1		*			
ANR	6671251	Identifier	STEP_C0		6670844	0					
ANR	6671252	Identifier	STEP_C0		6670844	1					
ANR	6671253	Identifier	find_best_colors		6670844	1					
ANR	6671254	ParameterList	"j_decompress_ptr cinfo , int minc0 , int minc1 , int minc2 , int numcolors , JSAMPLE colorlist [ ] , JSAMPLE bestcolor [ ]"		6670844	2					
ANR	6671255	Parameter	j_decompress_ptr cinfo	776:18:28661:28682	6670844	0	True				
ANR	6671256	ParameterType	j_decompress_ptr		6670844	0					
ANR	6671257	Identifier	cinfo		6670844	1					
ANR	6671258	Parameter	int minc0	776:42:28685:28693	6670844	1	True				
ANR	6671259	ParameterType	int		6670844	0					
ANR	6671260	Identifier	minc0		6670844	1					
ANR	6671261	Parameter	int minc1	776:53:28696:28704	6670844	2	True				
ANR	6671262	ParameterType	int		6670844	0					
ANR	6671263	Identifier	minc1		6670844	1					
ANR	6671264	Parameter	int minc2	776:64:28707:28715	6670844	3	True				
ANR	6671265	ParameterType	int		6670844	0					
ANR	6671266	Identifier	minc2		6670844	1					
ANR	6671267	Parameter	int numcolors	777:4:28722:28734	6670844	4	True				
ANR	6671268	ParameterType	int		6670844	0					
ANR	6671269	Identifier	numcolors		6670844	1					
ANR	6671270	Parameter	JSAMPLE colorlist [ ]	777:19:28737:28755	6670844	5	True				
ANR	6671271	ParameterType	JSAMPLE [ ]		6670844	0					
ANR	6671272	Identifier	colorlist		6670844	1					
ANR	6671273	Parameter	JSAMPLE bestcolor [ ]	777:40:28758:28776	6670844	6	True				
ANR	6671274	ParameterType	JSAMPLE [ ]		6670844	0					
ANR	6671275	Identifier	bestcolor		6670844	1					
ANR	6671276	CFGEntryNode	ENTRY		6670844		True				
ANR	6671277	CFGExitNode	EXIT		6670844		True				
ANR	6671278	Symbol	* * cinfo		6670844						
ANR	6671279	Symbol	cptr		6670844						
ANR	6671280	Symbol	* bptr ++		6670844						
ANR	6671281	Symbol	C2_SCALE		6670844						
ANR	6671282	Symbol	* cinfo -> colormap		6670844						
ANR	6671283	Symbol	STEP_C2		6670844						
ANR	6671284	Symbol	minc0		6670844						
ANR	6671285	Symbol	icolor		6670844						
ANR	6671286	Symbol	STEP_C0		6670844						
ANR	6671287	Symbol	STEP_C1		6670844						
ANR	6671288	Symbol	ic1		6670844						
ANR	6671289	Symbol	ic0		6670844						
ANR	6671290	Symbol	BOX_C1_ELEMS		6670844						
ANR	6671291	Symbol	ic2		6670844						
ANR	6671292	Symbol	* colorlist		6670844						
ANR	6671293	Symbol	colorlist		6670844						
ANR	6671294	Symbol	* icolor		6670844						
ANR	6671295	Symbol	bestdist		6670844						
ANR	6671296	Symbol	* cinfo		6670844						
ANR	6671297	Symbol	* bptr		6670844						
ANR	6671298	Symbol	C0_SCALE		6670844						
ANR	6671299	Symbol	numcolors		6670844						
ANR	6671300	Symbol	bptr		6670844						
ANR	6671301	Symbol	inc1		6670844						
ANR	6671302	Symbol	inc0		6670844						
ANR	6671303	Symbol	GETJSAMPLE		6670844						
ANR	6671304	Symbol	inc2		6670844						
ANR	6671305	Symbol	cinfo -> colormap		6670844						
ANR	6671306	Symbol	i		6670844						
ANR	6671307	Symbol	BOX_C0_ELEMS		6670844						
ANR	6671308	Symbol	* * cinfo -> colormap		6670844						
ANR	6671309	Symbol	minc2		6670844						
ANR	6671310	Symbol	bestcolor		6670844						
ANR	6671311	Symbol	xx1		6670844						
ANR	6671312	Symbol	minc1		6670844						
ANR	6671313	Symbol	xx0		6670844						
ANR	6671314	Symbol	xx2		6670844						
ANR	6671315	Symbol	* i		6670844						
ANR	6671316	Symbol	C1_SCALE		6670844						
ANR	6671317	Symbol	cinfo		6670844						
ANR	6671318	Symbol	* * * cinfo		6670844						
ANR	6671319	Symbol	dist0		6670844						
ANR	6671320	Symbol	dist1		6670844						
ANR	6671321	Symbol	* cptr		6670844						
ANR	6671322	Symbol	dist2		6670844						
ANR	6671323	Symbol	BOX_C2_ELEMS		6670844						
ANR	6671324	Function	fill_inverse_cmap	856:0:31559:33727							
ANR	6671325	FunctionDef	"fill_inverse_cmap (j_decompress_ptr cinfo , int c0 , int c1 , int c2)"		6671324	0					
ANR	6671326	CompoundStatement		860:0:31816:33727	6671324	0					
ANR	6671327	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	861:2:31820:31884	6671324	0	True				
ANR	6671328	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671324	0					
ANR	6671329	IdentifierDeclType	my_cquantize_ptr		6671324	0					
ANR	6671330	Identifier	cquantize		6671324	1					
ANR	6671331	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671324	2		=			
ANR	6671332	Identifier	cquantize		6671324	0					
ANR	6671333	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6671324	1					
ANR	6671334	CastTarget	my_cquantize_ptr		6671324	0					
ANR	6671335	PtrMemberAccess	cinfo -> cquantize		6671324	1					
ANR	6671336	Identifier	cinfo		6671324	0					
ANR	6671337	Identifier	cquantize		6671324	1					
ANR	6671338	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	862:2:31888:31927	6671324	1	True				
ANR	6671339	IdentifierDecl	histogram = cquantize -> histogram		6671324	0					
ANR	6671340	IdentifierDeclType	hist3d		6671324	0					
ANR	6671341	Identifier	histogram		6671324	1					
ANR	6671342	AssignmentExpression	histogram = cquantize -> histogram		6671324	2		=			
ANR	6671343	Identifier	histogram		6671324	0					
ANR	6671344	PtrMemberAccess	cquantize -> histogram		6671324	1					
ANR	6671345	Identifier	cquantize		6671324	0					
ANR	6671346	Identifier	histogram		6671324	1					
ANR	6671347	IdentifierDeclStatement	"int minc0 , minc1 , minc2 ;"	863:2:31931:31954	6671324	2	True				
ANR	6671348	IdentifierDecl	minc0		6671324	0					
ANR	6671349	IdentifierDeclType	int		6671324	0					
ANR	6671350	Identifier	minc0		6671324	1					
ANR	6671351	IdentifierDecl	minc1		6671324	1					
ANR	6671352	IdentifierDeclType	int		6671324	0					
ANR	6671353	Identifier	minc1		6671324	1					
ANR	6671354	IdentifierDecl	minc2		6671324	2					
ANR	6671355	IdentifierDeclType	int		6671324	0					
ANR	6671356	Identifier	minc2		6671324	1					
ANR	6671357	IdentifierDeclStatement	"int ic0 , ic1 , ic2 ;"	864:2:31996:32013	6671324	3	True				
ANR	6671358	IdentifierDecl	ic0		6671324	0					
ANR	6671359	IdentifierDeclType	int		6671324	0					
ANR	6671360	Identifier	ic0		6671324	1					
ANR	6671361	IdentifierDecl	ic1		6671324	1					
ANR	6671362	IdentifierDeclType	int		6671324	0					
ANR	6671363	Identifier	ic1		6671324	1					
ANR	6671364	IdentifierDecl	ic2		6671324	2					
ANR	6671365	IdentifierDeclType	int		6671324	0					
ANR	6671366	Identifier	ic2		6671324	1					
ANR	6671367	Statement	register	865:2:32017:32024	6671324	4	True				
ANR	6671368	IdentifierDeclStatement	JSAMPLE * cptr ;	865:11:32026:32040	6671324	5	True				
ANR	6671369	IdentifierDecl	* cptr		6671324	0					
ANR	6671370	IdentifierDeclType	JSAMPLE *		6671324	0					
ANR	6671371	Identifier	cptr		6671324	1					
ANR	6671372	Statement	register	866:2:32081:32088	6671324	6	True				
ANR	6671373	IdentifierDeclStatement	histptr cachep ;	866:11:32090:32104	6671324	7	True				
ANR	6671374	IdentifierDecl	cachep		6671324	0					
ANR	6671375	IdentifierDeclType	histptr		6671324	0					
ANR	6671376	Identifier	cachep		6671324	1					
ANR	6671377	IdentifierDeclStatement	JSAMPLE colorlist [ MAXNUMCOLORS ] ;	868:2:32201:32232	6671324	8	True				
ANR	6671378	IdentifierDecl	colorlist [ MAXNUMCOLORS ]		6671324	0					
ANR	6671379	IdentifierDeclType	JSAMPLE [ MAXNUMCOLORS ]		6671324	0					
ANR	6671380	Identifier	colorlist		6671324	1					
ANR	6671381	Identifier	MAXNUMCOLORS		6671324	2					
ANR	6671382	IdentifierDeclStatement	int numcolors ;	869:2:32236:32249	6671324	9	True				
ANR	6671383	IdentifierDecl	numcolors		6671324	0					
ANR	6671384	IdentifierDeclType	int		6671324	0					
ANR	6671385	Identifier	numcolors		6671324	1					
ANR	6671386	IdentifierDeclStatement	JSAMPLE bestcolor [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ] ;	871:2:32363:32424	6671324	10	True				
ANR	6671387	IdentifierDecl	bestcolor [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6671324	0					
ANR	6671388	IdentifierDeclType	JSAMPLE [ BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS ]		6671324	0					
ANR	6671389	Identifier	bestcolor		6671324	1					
ANR	6671390	MultiplicativeExpression	BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS		6671324	2		*			
ANR	6671391	Identifier	BOX_C0_ELEMS		6671324	0					
ANR	6671392	MultiplicativeExpression	BOX_C1_ELEMS * BOX_C2_ELEMS		6671324	1		*			
ANR	6671393	Identifier	BOX_C1_ELEMS		6671324	0					
ANR	6671394	Identifier	BOX_C2_ELEMS		6671324	1					
ANR	6671395	ExpressionStatement	c0 >>= BOX_C0_LOG	874:2:32479:32496	6671324	11	True				
ANR	6671396	AssignmentExpression	c0 >>= BOX_C0_LOG		6671324	0		>>=			
ANR	6671397	Identifier	c0		6671324	0					
ANR	6671398	Identifier	BOX_C0_LOG		6671324	1					
ANR	6671399	ExpressionStatement	c1 >>= BOX_C1_LOG	875:2:32500:32517	6671324	12	True				
ANR	6671400	AssignmentExpression	c1 >>= BOX_C1_LOG		6671324	0		>>=			
ANR	6671401	Identifier	c1		6671324	0					
ANR	6671402	Identifier	BOX_C1_LOG		6671324	1					
ANR	6671403	ExpressionStatement	c2 >>= BOX_C2_LOG	876:2:32521:32538	6671324	13	True				
ANR	6671404	AssignmentExpression	c2 >>= BOX_C2_LOG		6671324	0		>>=			
ANR	6671405	Identifier	c2		6671324	0					
ANR	6671406	Identifier	BOX_C2_LOG		6671324	1					
ANR	6671407	ExpressionStatement	minc0 = ( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )	882:2:32756:32809	6671324	14	True				
ANR	6671408	AssignmentExpression	minc0 = ( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6671324	0		=			
ANR	6671409	Identifier	minc0		6671324	0					
ANR	6671410	AdditiveExpression	( c0 << BOX_C0_SHIFT ) + ( ( 1 << C0_SHIFT ) >> 1 )		6671324	1		+			
ANR	6671411	ShiftExpression	c0 << BOX_C0_SHIFT		6671324	0		<<			
ANR	6671412	Identifier	c0		6671324	0					
ANR	6671413	Identifier	BOX_C0_SHIFT		6671324	1					
ANR	6671414	ShiftExpression	( 1 << C0_SHIFT ) >> 1		6671324	1		>>			
ANR	6671415	ShiftExpression	1 << C0_SHIFT		6671324	0		<<			
ANR	6671416	PrimaryExpression	1		6671324	0					
ANR	6671417	Identifier	C0_SHIFT		6671324	1					
ANR	6671418	PrimaryExpression	1		6671324	1					
ANR	6671419	ExpressionStatement	minc1 = ( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )	883:2:32813:32866	6671324	15	True				
ANR	6671420	AssignmentExpression	minc1 = ( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6671324	0		=			
ANR	6671421	Identifier	minc1		6671324	0					
ANR	6671422	AdditiveExpression	( c1 << BOX_C1_SHIFT ) + ( ( 1 << C1_SHIFT ) >> 1 )		6671324	1		+			
ANR	6671423	ShiftExpression	c1 << BOX_C1_SHIFT		6671324	0		<<			
ANR	6671424	Identifier	c1		6671324	0					
ANR	6671425	Identifier	BOX_C1_SHIFT		6671324	1					
ANR	6671426	ShiftExpression	( 1 << C1_SHIFT ) >> 1		6671324	1		>>			
ANR	6671427	ShiftExpression	1 << C1_SHIFT		6671324	0		<<			
ANR	6671428	PrimaryExpression	1		6671324	0					
ANR	6671429	Identifier	C1_SHIFT		6671324	1					
ANR	6671430	PrimaryExpression	1		6671324	1					
ANR	6671431	ExpressionStatement	minc2 = ( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )	884:2:32870:32923	6671324	16	True				
ANR	6671432	AssignmentExpression	minc2 = ( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6671324	0		=			
ANR	6671433	Identifier	minc2		6671324	0					
ANR	6671434	AdditiveExpression	( c2 << BOX_C2_SHIFT ) + ( ( 1 << C2_SHIFT ) >> 1 )		6671324	1		+			
ANR	6671435	ShiftExpression	c2 << BOX_C2_SHIFT		6671324	0		<<			
ANR	6671436	Identifier	c2		6671324	0					
ANR	6671437	Identifier	BOX_C2_SHIFT		6671324	1					
ANR	6671438	ShiftExpression	( 1 << C2_SHIFT ) >> 1		6671324	1		>>			
ANR	6671439	ShiftExpression	1 << C2_SHIFT		6671324	0		<<			
ANR	6671440	PrimaryExpression	1		6671324	0					
ANR	6671441	Identifier	C2_SHIFT		6671324	1					
ANR	6671442	PrimaryExpression	1		6671324	1					
ANR	6671443	ExpressionStatement	"numcolors = find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"	889:2:33067:33136	6671324	17	True				
ANR	6671444	AssignmentExpression	"numcolors = find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"		6671324	0		=			
ANR	6671445	Identifier	numcolors		6671324	0					
ANR	6671446	CallExpression	"find_nearby_colors ( cinfo , minc0 , minc1 , minc2 , colorlist )"		6671324	1					
ANR	6671447	Callee	find_nearby_colors		6671324	0					
ANR	6671448	Identifier	find_nearby_colors		6671324	0					
ANR	6671449	ArgumentList	cinfo		6671324	1					
ANR	6671450	Argument	cinfo		6671324	0					
ANR	6671451	Identifier	cinfo		6671324	0					
ANR	6671452	Argument	minc0		6671324	1					
ANR	6671453	Identifier	minc0		6671324	0					
ANR	6671454	Argument	minc1		6671324	2					
ANR	6671455	Identifier	minc1		6671324	0					
ANR	6671456	Argument	minc2		6671324	3					
ANR	6671457	Identifier	minc2		6671324	0					
ANR	6671458	Argument	colorlist		6671324	4					
ANR	6671459	Identifier	colorlist		6671324	0					
ANR	6671460	ExpressionStatement	"find_best_colors ( cinfo , minc0 , minc1 , minc2 , numcolors , colorlist , bestcolor )"	892:2:33188:33270	6671324	18	True				
ANR	6671461	CallExpression	"find_best_colors ( cinfo , minc0 , minc1 , minc2 , numcolors , colorlist , bestcolor )"		6671324	0					
ANR	6671462	Callee	find_best_colors		6671324	0					
ANR	6671463	Identifier	find_best_colors		6671324	0					
ANR	6671464	ArgumentList	cinfo		6671324	1					
ANR	6671465	Argument	cinfo		6671324	0					
ANR	6671466	Identifier	cinfo		6671324	0					
ANR	6671467	Argument	minc0		6671324	1					
ANR	6671468	Identifier	minc0		6671324	0					
ANR	6671469	Argument	minc1		6671324	2					
ANR	6671470	Identifier	minc1		6671324	0					
ANR	6671471	Argument	minc2		6671324	3					
ANR	6671472	Identifier	minc2		6671324	0					
ANR	6671473	Argument	numcolors		6671324	4					
ANR	6671474	Identifier	numcolors		6671324	0					
ANR	6671475	Argument	colorlist		6671324	5					
ANR	6671476	Identifier	colorlist		6671324	0					
ANR	6671477	Argument	bestcolor		6671324	6					
ANR	6671478	Identifier	bestcolor		6671324	0					
ANR	6671479	ExpressionStatement	c0 <<= BOX_C0_LOG	896:2:33344:33361	6671324	19	True				
ANR	6671480	AssignmentExpression	c0 <<= BOX_C0_LOG		6671324	0		<<=			
ANR	6671481	Identifier	c0		6671324	0					
ANR	6671482	Identifier	BOX_C0_LOG		6671324	1					
ANR	6671483	ExpressionStatement	c1 <<= BOX_C1_LOG	897:2:33409:33426	6671324	20	True				
ANR	6671484	AssignmentExpression	c1 <<= BOX_C1_LOG		6671324	0		<<=			
ANR	6671485	Identifier	c1		6671324	0					
ANR	6671486	Identifier	BOX_C1_LOG		6671324	1					
ANR	6671487	ExpressionStatement	c2 <<= BOX_C2_LOG	898:2:33430:33447	6671324	21	True				
ANR	6671488	AssignmentExpression	c2 <<= BOX_C2_LOG		6671324	0		<<=			
ANR	6671489	Identifier	c2		6671324	0					
ANR	6671490	Identifier	BOX_C2_LOG		6671324	1					
ANR	6671491	ExpressionStatement	cptr = bestcolor	899:2:33451:33467	6671324	22	True				
ANR	6671492	AssignmentExpression	cptr = bestcolor		6671324	0		=			
ANR	6671493	Identifier	cptr		6671324	0					
ANR	6671494	Identifier	bestcolor		6671324	1					
ANR	6671495	ForStatement	for ( ic0 = 0 ; ic0 < BOX_C0_ELEMS ; ic0 ++ )		6671324	23					
ANR	6671496	ForInit	ic0 = 0 ;	900:7:33476:33483	6671324	0	True				
ANR	6671497	AssignmentExpression	ic0 = 0		6671324	0		=			
ANR	6671498	Identifier	ic0		6671324	0					
ANR	6671499	PrimaryExpression	0		6671324	1					
ANR	6671500	Condition	ic0 < BOX_C0_ELEMS	900:16:33485:33502	6671324	1	True				
ANR	6671501	RelationalExpression	ic0 < BOX_C0_ELEMS		6671324	0		<			
ANR	6671502	Identifier	ic0		6671324	0					
ANR	6671503	Identifier	BOX_C0_ELEMS		6671324	1					
ANR	6671504	PostIncDecOperationExpression	ic0 ++	900:36:33505:33509	6671324	2	True				
ANR	6671505	Identifier	ic0		6671324	0					
ANR	6671506	IncDec	++		6671324	1					
ANR	6671507	CompoundStatement		41:43:1695:1695	6671324	3					
ANR	6671508	ForStatement	for ( ic1 = 0 ; ic1 < BOX_C1_ELEMS ; ic1 ++ )		6671324	0					
ANR	6671509	ForInit	ic1 = 0 ;	901:9:33523:33530	6671324	0	True				
ANR	6671510	AssignmentExpression	ic1 = 0		6671324	0		=			
ANR	6671511	Identifier	ic1		6671324	0					
ANR	6671512	PrimaryExpression	0		6671324	1					
ANR	6671513	Condition	ic1 < BOX_C1_ELEMS	901:18:33532:33549	6671324	1	True				
ANR	6671514	RelationalExpression	ic1 < BOX_C1_ELEMS		6671324	0		<			
ANR	6671515	Identifier	ic1		6671324	0					
ANR	6671516	Identifier	BOX_C1_ELEMS		6671324	1					
ANR	6671517	PostIncDecOperationExpression	ic1 ++	901:38:33552:33556	6671324	2	True				
ANR	6671518	Identifier	ic1		6671324	0					
ANR	6671519	IncDec	++		6671324	1					
ANR	6671520	CompoundStatement		42:45:1742:1742	6671324	3					
ANR	6671521	ExpressionStatement	cachep = & histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]	902:6:33567:33607	6671324	0	True				
ANR	6671522	AssignmentExpression	cachep = & histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6671324	0		=			
ANR	6671523	Identifier	cachep		6671324	0					
ANR	6671524	UnaryOperationExpression	& histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6671324	1					
ANR	6671525	UnaryOperator	&		6671324	0					
ANR	6671526	ArrayIndexing	histogram [ c0 + ic0 ] [ c1 + ic1 ] [ c2 ]		6671324	1					
ANR	6671527	ArrayIndexing	histogram [ c0 + ic0 ] [ c1 + ic1 ]		6671324	0					
ANR	6671528	ArrayIndexing	histogram [ c0 + ic0 ]		6671324	0					
ANR	6671529	Identifier	histogram		6671324	0					
ANR	6671530	AdditiveExpression	c0 + ic0		6671324	1		+			
ANR	6671531	Identifier	c0		6671324	0					
ANR	6671532	Identifier	ic0		6671324	1					
ANR	6671533	AdditiveExpression	c1 + ic1		6671324	1		+			
ANR	6671534	Identifier	c1		6671324	0					
ANR	6671535	Identifier	ic1		6671324	1					
ANR	6671536	Identifier	c2		6671324	1					
ANR	6671537	ForStatement	for ( ic2 = 0 ; ic2 < BOX_C2_ELEMS ; ic2 ++ )		6671324	1					
ANR	6671538	ForInit	ic2 = 0 ;	903:11:33620:33627	6671324	0	True				
ANR	6671539	AssignmentExpression	ic2 = 0		6671324	0		=			
ANR	6671540	Identifier	ic2		6671324	0					
ANR	6671541	PrimaryExpression	0		6671324	1					
ANR	6671542	Condition	ic2 < BOX_C2_ELEMS	903:20:33629:33646	6671324	1	True				
ANR	6671543	RelationalExpression	ic2 < BOX_C2_ELEMS		6671324	0		<			
ANR	6671544	Identifier	ic2		6671324	0					
ANR	6671545	Identifier	BOX_C2_ELEMS		6671324	1					
ANR	6671546	PostIncDecOperationExpression	ic2 ++	903:40:33649:33653	6671324	2	True				
ANR	6671547	Identifier	ic2		6671324	0					
ANR	6671548	IncDec	++		6671324	1					
ANR	6671549	CompoundStatement		44:47:1839:1839	6671324	3					
ANR	6671550	ExpressionStatement	* cachep ++ = ( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )	904:1:33659:33707	6671324	0	True				
ANR	6671551	AssignmentExpression	* cachep ++ = ( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )		6671324	0		=			
ANR	6671552	UnaryOperationExpression	* cachep ++		6671324	0					
ANR	6671553	UnaryOperator	*		6671324	0					
ANR	6671554	PostIncDecOperationExpression	cachep ++		6671324	1					
ANR	6671555	Identifier	cachep		6671324	0					
ANR	6671556	IncDec	++		6671324	1					
ANR	6671557	CastExpression	( histcell ) ( GETJSAMPLE ( * cptr ++ ) + 1 )		6671324	1					
ANR	6671558	CastTarget	histcell		6671324	0					
ANR	6671559	AdditiveExpression	GETJSAMPLE ( * cptr ++ ) + 1		6671324	1		+			
ANR	6671560	CallExpression	GETJSAMPLE ( * cptr ++ )		6671324	0					
ANR	6671561	Callee	GETJSAMPLE		6671324	0					
ANR	6671562	Identifier	GETJSAMPLE		6671324	0					
ANR	6671563	ArgumentList	* cptr ++		6671324	1					
ANR	6671564	Argument	* cptr ++		6671324	0					
ANR	6671565	UnaryOperationExpression	* cptr ++		6671324	0					
ANR	6671566	UnaryOperator	*		6671324	0					
ANR	6671567	PostIncDecOperationExpression	cptr ++		6671324	1					
ANR	6671568	Identifier	cptr		6671324	0					
ANR	6671569	IncDec	++		6671324	1					
ANR	6671570	PrimaryExpression	1		6671324	1					
ANR	6671571	Identifier	fill_inverse_cmap		6671324	1					
ANR	6671572	ParameterList	"j_decompress_ptr cinfo , int c0 , int c1 , int c2"		6671324	2					
ANR	6671573	Parameter	j_decompress_ptr cinfo	856:19:31578:31599	6671324	0	True				
ANR	6671574	ParameterType	j_decompress_ptr		6671324	0					
ANR	6671575	Identifier	cinfo		6671324	1					
ANR	6671576	Parameter	int c0	856:43:31602:31607	6671324	1	True				
ANR	6671577	ParameterType	int		6671324	0					
ANR	6671578	Identifier	c0		6671324	1					
ANR	6671579	Parameter	int c1	856:51:31610:31615	6671324	2	True				
ANR	6671580	ParameterType	int		6671324	0					
ANR	6671581	Identifier	c1		6671324	1					
ANR	6671582	Parameter	int c2	856:59:31618:31623	6671324	3	True				
ANR	6671583	ParameterType	int		6671324	0					
ANR	6671584	Identifier	c2		6671324	1					
ANR	6671585	CFGEntryNode	ENTRY		6671324		True				
ANR	6671586	CFGExitNode	EXIT		6671324		True				
ANR	6671587	Symbol	* * histogram		6671324						
ANR	6671588	Symbol	C2_SHIFT		6671324						
ANR	6671589	Symbol	cptr		6671324						
ANR	6671590	Symbol	cquantize		6671324						
ANR	6671591	Symbol	* cquantize		6671324						
ANR	6671592	Symbol	BOX_C0_LOG		6671324						
ANR	6671593	Symbol	minc0		6671324						
ANR	6671594	Symbol	cquantize -> histogram		6671324						
ANR	6671595	Symbol	ic1		6671324						
ANR	6671596	Symbol	BOX_C1_SHIFT		6671324						
ANR	6671597	Symbol	ic0		6671324						
ANR	6671598	Symbol	BOX_C1_ELEMS		6671324						
ANR	6671599	Symbol	ic2		6671324						
ANR	6671600	Symbol	C0_SHIFT		6671324						
ANR	6671601	Symbol	cachep		6671324						
ANR	6671602	Symbol	* * c0		6671324						
ANR	6671603	Symbol	colorlist		6671324						
ANR	6671604	Symbol	* cinfo		6671324						
ANR	6671605	Symbol	BOX_C1_LOG		6671324						
ANR	6671606	Symbol	numcolors		6671324						
ANR	6671607	Symbol	find_nearby_colors		6671324						
ANR	6671608	Symbol	* cptr ++		6671324						
ANR	6671609	Symbol	* cachep ++		6671324						
ANR	6671610	Symbol	GETJSAMPLE		6671324						
ANR	6671611	Symbol	BOX_C0_SHIFT		6671324						
ANR	6671612	Symbol	* histogram		6671324						
ANR	6671613	Symbol	* * ic0		6671324						
ANR	6671614	Symbol	BOX_C0_ELEMS		6671324						
ANR	6671615	Symbol	c0		6671324						
ANR	6671616	Symbol	c1		6671324						
ANR	6671617	Symbol	BOX_C2_LOG		6671324						
ANR	6671618	Symbol	c2		6671324						
ANR	6671619	Symbol	histogram		6671324						
ANR	6671620	Symbol	minc2		6671324						
ANR	6671621	Symbol	bestcolor		6671324						
ANR	6671622	Symbol	* c0		6671324						
ANR	6671623	Symbol	minc1		6671324						
ANR	6671624	Symbol	cinfo -> cquantize		6671324						
ANR	6671625	Symbol	cinfo		6671324						
ANR	6671626	Symbol	* c1		6671324						
ANR	6671627	Symbol	BOX_C2_SHIFT		6671324						
ANR	6671628	Symbol	C1_SHIFT		6671324						
ANR	6671629	Symbol	* ic1		6671324						
ANR	6671630	Symbol	BOX_C2_ELEMS		6671324						
ANR	6671631	Symbol	* ic0		6671324						
ANR	6671632	Function	pass2_no_dither	916:0:33824:34889							
ANR	6671633	FunctionDef	"pass2_no_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6671632	0					
ANR	6671634	CompoundStatement		919:0:33968:34889	6671632	0					
ANR	6671635	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	920:2:33972:34036	6671632	0	True				
ANR	6671636	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671632	0					
ANR	6671637	IdentifierDeclType	my_cquantize_ptr		6671632	0					
ANR	6671638	Identifier	cquantize		6671632	1					
ANR	6671639	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671632	2		=			
ANR	6671640	Identifier	cquantize		6671632	0					
ANR	6671641	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6671632	1					
ANR	6671642	CastTarget	my_cquantize_ptr		6671632	0					
ANR	6671643	PtrMemberAccess	cinfo -> cquantize		6671632	1					
ANR	6671644	Identifier	cinfo		6671632	0					
ANR	6671645	Identifier	cquantize		6671632	1					
ANR	6671646	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	921:2:34040:34079	6671632	1	True				
ANR	6671647	IdentifierDecl	histogram = cquantize -> histogram		6671632	0					
ANR	6671648	IdentifierDeclType	hist3d		6671632	0					
ANR	6671649	Identifier	histogram		6671632	1					
ANR	6671650	AssignmentExpression	histogram = cquantize -> histogram		6671632	2		=			
ANR	6671651	Identifier	histogram		6671632	0					
ANR	6671652	PtrMemberAccess	cquantize -> histogram		6671632	1					
ANR	6671653	Identifier	cquantize		6671632	0					
ANR	6671654	Identifier	histogram		6671632	1					
ANR	6671655	Statement	register	922:2:34083:34090	6671632	2	True				
ANR	6671656	IdentifierDeclStatement	"JSAMPROW inptr , outptr ;"	922:11:34092:34114	6671632	3	True				
ANR	6671657	IdentifierDecl	inptr		6671632	0					
ANR	6671658	IdentifierDeclType	JSAMPROW		6671632	0					
ANR	6671659	Identifier	inptr		6671632	1					
ANR	6671660	IdentifierDecl	outptr		6671632	1					
ANR	6671661	IdentifierDeclType	JSAMPROW		6671632	0					
ANR	6671662	Identifier	outptr		6671632	1					
ANR	6671663	Statement	register	923:2:34118:34125	6671632	4	True				
ANR	6671664	IdentifierDeclStatement	histptr cachep ;	923:11:34127:34141	6671632	5	True				
ANR	6671665	IdentifierDecl	cachep		6671632	0					
ANR	6671666	IdentifierDeclType	histptr		6671632	0					
ANR	6671667	Identifier	cachep		6671632	1					
ANR	6671668	Statement	register	924:2:34145:34152	6671632	6	True				
ANR	6671669	IdentifierDeclStatement	"int c0 , c1 , c2 ;"	924:11:34154:34168	6671632	7	True				
ANR	6671670	IdentifierDecl	c0		6671632	0					
ANR	6671671	IdentifierDeclType	int		6671632	0					
ANR	6671672	Identifier	c0		6671632	1					
ANR	6671673	IdentifierDecl	c1		6671632	1					
ANR	6671674	IdentifierDeclType	int		6671632	0					
ANR	6671675	Identifier	c1		6671632	1					
ANR	6671676	IdentifierDecl	c2		6671632	2					
ANR	6671677	IdentifierDeclType	int		6671632	0					
ANR	6671678	Identifier	c2		6671632	1					
ANR	6671679	IdentifierDeclStatement	int row ;	925:2:34172:34179	6671632	8	True				
ANR	6671680	IdentifierDecl	row		6671632	0					
ANR	6671681	IdentifierDeclType	int		6671632	0					
ANR	6671682	Identifier	row		6671632	1					
ANR	6671683	IdentifierDeclStatement	JDIMENSION col ;	926:2:34183:34197	6671632	9	True				
ANR	6671684	IdentifierDecl	col		6671632	0					
ANR	6671685	IdentifierDeclType	JDIMENSION		6671632	0					
ANR	6671686	Identifier	col		6671632	1					
ANR	6671687	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	927:2:34201:34239	6671632	10	True				
ANR	6671688	IdentifierDecl	width = cinfo -> output_width		6671632	0					
ANR	6671689	IdentifierDeclType	JDIMENSION		6671632	0					
ANR	6671690	Identifier	width		6671632	1					
ANR	6671691	AssignmentExpression	width = cinfo -> output_width		6671632	2		=			
ANR	6671692	Identifier	width		6671632	0					
ANR	6671693	PtrMemberAccess	cinfo -> output_width		6671632	1					
ANR	6671694	Identifier	cinfo		6671632	0					
ANR	6671695	Identifier	output_width		6671632	1					
ANR	6671696	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6671632	11					
ANR	6671697	ForInit	row = 0 ;	929:7:34249:34256	6671632	0	True				
ANR	6671698	AssignmentExpression	row = 0		6671632	0		=			
ANR	6671699	Identifier	row		6671632	0					
ANR	6671700	PrimaryExpression	0		6671632	1					
ANR	6671701	Condition	row < num_rows	929:16:34258:34271	6671632	1	True				
ANR	6671702	RelationalExpression	row < num_rows		6671632	0		<			
ANR	6671703	Identifier	row		6671632	0					
ANR	6671704	Identifier	num_rows		6671632	1					
ANR	6671705	PostIncDecOperationExpression	row ++	929:32:34274:34278	6671632	2	True				
ANR	6671706	Identifier	row		6671632	0					
ANR	6671707	IncDec	++		6671632	1					
ANR	6671708	CompoundStatement		11:39:312:312	6671632	3					
ANR	6671709	ExpressionStatement	inptr = input_buf [ row ]	930:4:34287:34309	6671632	0	True				
ANR	6671710	AssignmentExpression	inptr = input_buf [ row ]		6671632	0		=			
ANR	6671711	Identifier	inptr		6671632	0					
ANR	6671712	ArrayIndexing	input_buf [ row ]		6671632	1					
ANR	6671713	Identifier	input_buf		6671632	0					
ANR	6671714	Identifier	row		6671632	1					
ANR	6671715	ExpressionStatement	outptr = output_buf [ row ]	931:4:34315:34339	6671632	1	True				
ANR	6671716	AssignmentExpression	outptr = output_buf [ row ]		6671632	0		=			
ANR	6671717	Identifier	outptr		6671632	0					
ANR	6671718	ArrayIndexing	output_buf [ row ]		6671632	1					
ANR	6671719	Identifier	output_buf		6671632	0					
ANR	6671720	Identifier	row		6671632	1					
ANR	6671721	ForStatement	for ( col = width ; col > 0 ; col -- )		6671632	2					
ANR	6671722	ForInit	col = width ;	932:9:34350:34361	6671632	0	True				
ANR	6671723	AssignmentExpression	col = width		6671632	0		=			
ANR	6671724	Identifier	col		6671632	0					
ANR	6671725	Identifier	width		6671632	1					
ANR	6671726	Condition	col > 0	932:22:34363:34369	6671632	1	True				
ANR	6671727	RelationalExpression	col > 0		6671632	0		>			
ANR	6671728	Identifier	col		6671632	0					
ANR	6671729	PrimaryExpression	0		6671632	1					
ANR	6671730	PostIncDecOperationExpression	col --	932:31:34372:34376	6671632	2	True				
ANR	6671731	Identifier	col		6671632	0					
ANR	6671732	IncDec	--		6671632	1					
ANR	6671733	CompoundStatement		14:38:410:410	6671632	3					
ANR	6671734	ExpressionStatement	c0 = GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT	934:6:34440:34477	6671632	0	True				
ANR	6671735	AssignmentExpression	c0 = GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT		6671632	0		=			
ANR	6671736	Identifier	c0		6671632	0					
ANR	6671737	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C0_SHIFT		6671632	1		>>			
ANR	6671738	CallExpression	GETJSAMPLE ( * inptr ++ )		6671632	0					
ANR	6671739	Callee	GETJSAMPLE		6671632	0					
ANR	6671740	Identifier	GETJSAMPLE		6671632	0					
ANR	6671741	ArgumentList	* inptr ++		6671632	1					
ANR	6671742	Argument	* inptr ++		6671632	0					
ANR	6671743	UnaryOperationExpression	* inptr ++		6671632	0					
ANR	6671744	UnaryOperator	*		6671632	0					
ANR	6671745	PostIncDecOperationExpression	inptr ++		6671632	1					
ANR	6671746	Identifier	inptr		6671632	0					
ANR	6671747	IncDec	++		6671632	1					
ANR	6671748	Identifier	C0_SHIFT		6671632	1					
ANR	6671749	ExpressionStatement	c1 = GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT	935:6:34485:34522	6671632	1	True				
ANR	6671750	AssignmentExpression	c1 = GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT		6671632	0		=			
ANR	6671751	Identifier	c1		6671632	0					
ANR	6671752	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C1_SHIFT		6671632	1		>>			
ANR	6671753	CallExpression	GETJSAMPLE ( * inptr ++ )		6671632	0					
ANR	6671754	Callee	GETJSAMPLE		6671632	0					
ANR	6671755	Identifier	GETJSAMPLE		6671632	0					
ANR	6671756	ArgumentList	* inptr ++		6671632	1					
ANR	6671757	Argument	* inptr ++		6671632	0					
ANR	6671758	UnaryOperationExpression	* inptr ++		6671632	0					
ANR	6671759	UnaryOperator	*		6671632	0					
ANR	6671760	PostIncDecOperationExpression	inptr ++		6671632	1					
ANR	6671761	Identifier	inptr		6671632	0					
ANR	6671762	IncDec	++		6671632	1					
ANR	6671763	Identifier	C1_SHIFT		6671632	1					
ANR	6671764	ExpressionStatement	c2 = GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT	936:6:34530:34567	6671632	2	True				
ANR	6671765	AssignmentExpression	c2 = GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT		6671632	0		=			
ANR	6671766	Identifier	c2		6671632	0					
ANR	6671767	ShiftExpression	GETJSAMPLE ( * inptr ++ ) >> C2_SHIFT		6671632	1		>>			
ANR	6671768	CallExpression	GETJSAMPLE ( * inptr ++ )		6671632	0					
ANR	6671769	Callee	GETJSAMPLE		6671632	0					
ANR	6671770	Identifier	GETJSAMPLE		6671632	0					
ANR	6671771	ArgumentList	* inptr ++		6671632	1					
ANR	6671772	Argument	* inptr ++		6671632	0					
ANR	6671773	UnaryOperationExpression	* inptr ++		6671632	0					
ANR	6671774	UnaryOperator	*		6671632	0					
ANR	6671775	PostIncDecOperationExpression	inptr ++		6671632	1					
ANR	6671776	Identifier	inptr		6671632	0					
ANR	6671777	IncDec	++		6671632	1					
ANR	6671778	Identifier	C2_SHIFT		6671632	1					
ANR	6671779	ExpressionStatement	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]	937:6:34575:34607	6671632	3	True				
ANR	6671780	AssignmentExpression	cachep = & histogram [ c0 ] [ c1 ] [ c2 ]		6671632	0		=			
ANR	6671781	Identifier	cachep		6671632	0					
ANR	6671782	UnaryOperationExpression	& histogram [ c0 ] [ c1 ] [ c2 ]		6671632	1					
ANR	6671783	UnaryOperator	&		6671632	0					
ANR	6671784	ArrayIndexing	histogram [ c0 ] [ c1 ] [ c2 ]		6671632	1					
ANR	6671785	ArrayIndexing	histogram [ c0 ] [ c1 ]		6671632	0					
ANR	6671786	ArrayIndexing	histogram [ c0 ]		6671632	0					
ANR	6671787	Identifier	histogram		6671632	0					
ANR	6671788	Identifier	c0		6671632	1					
ANR	6671789	Identifier	c1		6671632	1					
ANR	6671790	Identifier	c2		6671632	1					
ANR	6671791	IfStatement	if ( * cachep == 0 )		6671632	4					
ANR	6671792	Condition	* cachep == 0	940:10:34731:34742	6671632	0	True				
ANR	6671793	EqualityExpression	* cachep == 0		6671632	0		==			
ANR	6671794	UnaryOperationExpression	* cachep		6671632	0					
ANR	6671795	UnaryOperator	*		6671632	0					
ANR	6671796	Identifier	cachep		6671632	1					
ANR	6671797	PrimaryExpression	0		6671632	1					
ANR	6671798	ExpressionStatement	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"	941:1:34746:34780	6671632	1	True				
ANR	6671799	CallExpression	"fill_inverse_cmap ( cinfo , c0 , c1 , c2 )"		6671632	0					
ANR	6671800	Callee	fill_inverse_cmap		6671632	0					
ANR	6671801	Identifier	fill_inverse_cmap		6671632	0					
ANR	6671802	ArgumentList	cinfo		6671632	1					
ANR	6671803	Argument	cinfo		6671632	0					
ANR	6671804	Identifier	cinfo		6671632	0					
ANR	6671805	Argument	c0		6671632	1					
ANR	6671806	Identifier	c0		6671632	0					
ANR	6671807	Argument	c1		6671632	2					
ANR	6671808	Identifier	c1		6671632	0					
ANR	6671809	Argument	c2		6671632	3					
ANR	6671810	Identifier	c2		6671632	0					
ANR	6671811	ExpressionStatement	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )	943:6:34842:34877	6671632	5	True				
ANR	6671812	AssignmentExpression	* outptr ++ = ( JSAMPLE ) ( * cachep - 1 )		6671632	0		=			
ANR	6671813	UnaryOperationExpression	* outptr ++		6671632	0					
ANR	6671814	UnaryOperator	*		6671632	0					
ANR	6671815	PostIncDecOperationExpression	outptr ++		6671632	1					
ANR	6671816	Identifier	outptr		6671632	0					
ANR	6671817	IncDec	++		6671632	1					
ANR	6671818	CastExpression	( JSAMPLE ) ( * cachep - 1 )		6671632	1					
ANR	6671819	CastTarget	JSAMPLE		6671632	0					
ANR	6671820	AdditiveExpression	* cachep - 1		6671632	1		-			
ANR	6671821	UnaryOperationExpression	* cachep		6671632	0					
ANR	6671822	UnaryOperator	*		6671632	0					
ANR	6671823	Identifier	cachep		6671632	1					
ANR	6671824	PrimaryExpression	1		6671632	1					
ANR	6671825	Identifier	pass2_no_dither		6671632	1					
ANR	6671826	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6671632	2					
ANR	6671827	Parameter	j_decompress_ptr cinfo	916:17:33841:33862	6671632	0	True				
ANR	6671828	ParameterType	j_decompress_ptr		6671632	0					
ANR	6671829	Identifier	cinfo		6671632	1					
ANR	6671830	Parameter	JSAMPARRAY input_buf	917:3:33868:33887	6671632	1	True				
ANR	6671831	ParameterType	JSAMPARRAY		6671632	0					
ANR	6671832	Identifier	input_buf		6671632	1					
ANR	6671833	Parameter	JSAMPARRAY output_buf	917:25:33890:33910	6671632	2	True				
ANR	6671834	ParameterType	JSAMPARRAY		6671632	0					
ANR	6671835	Identifier	output_buf		6671632	1					
ANR	6671836	Parameter	int num_rows	917:48:33913:33924	6671632	3	True				
ANR	6671837	ParameterType	int		6671632	0					
ANR	6671838	Identifier	num_rows		6671632	1					
ANR	6671839	CFGEntryNode	ENTRY		6671632		True				
ANR	6671840	CFGExitNode	EXIT		6671632		True				
ANR	6671841	Symbol	col		6671632						
ANR	6671842	Symbol	* * histogram		6671632						
ANR	6671843	Symbol	* row		6671632						
ANR	6671844	Symbol	C2_SHIFT		6671632						
ANR	6671845	Symbol	* cachep		6671632						
ANR	6671846	Symbol	cquantize		6671632						
ANR	6671847	Symbol	* cquantize		6671632						
ANR	6671848	Symbol	cinfo -> output_width		6671632						
ANR	6671849	Symbol	cquantize -> histogram		6671632						
ANR	6671850	Symbol	inptr		6671632						
ANR	6671851	Symbol	num_rows		6671632						
ANR	6671852	Symbol	C0_SHIFT		6671632						
ANR	6671853	Symbol	cachep		6671632						
ANR	6671854	Symbol	row		6671632						
ANR	6671855	Symbol	* * c0		6671632						
ANR	6671856	Symbol	* cinfo		6671632						
ANR	6671857	Symbol	output_buf		6671632						
ANR	6671858	Symbol	GETJSAMPLE		6671632						
ANR	6671859	Symbol	* histogram		6671632						
ANR	6671860	Symbol	c0		6671632						
ANR	6671861	Symbol	c1		6671632						
ANR	6671862	Symbol	c2		6671632						
ANR	6671863	Symbol	histogram		6671632						
ANR	6671864	Symbol	* c0		6671632						
ANR	6671865	Symbol	outptr		6671632						
ANR	6671866	Symbol	cinfo -> cquantize		6671632						
ANR	6671867	Symbol	* inptr ++		6671632						
ANR	6671868	Symbol	cinfo		6671632						
ANR	6671869	Symbol	* c1		6671632						
ANR	6671870	Symbol	width		6671632						
ANR	6671871	Symbol	* output_buf		6671632						
ANR	6671872	Symbol	* outptr ++		6671632						
ANR	6671873	Symbol	input_buf		6671632						
ANR	6671874	Symbol	* input_buf		6671632						
ANR	6671875	Symbol	C1_SHIFT		6671632						
ANR	6671876	Function	pass2_fs_dither	950:0:34909:40846							
ANR	6671877	FunctionDef	"pass2_fs_dither (j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows)"		6671876	0					
ANR	6671878	CompoundStatement		953:0:35066:40846	6671876	0					
ANR	6671879	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	954:2:35070:35134	6671876	0	True				
ANR	6671880	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671876	0					
ANR	6671881	IdentifierDeclType	my_cquantize_ptr		6671876	0					
ANR	6671882	Identifier	cquantize		6671876	1					
ANR	6671883	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6671876	2		=			
ANR	6671884	Identifier	cquantize		6671876	0					
ANR	6671885	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6671876	1					
ANR	6671886	CastTarget	my_cquantize_ptr		6671876	0					
ANR	6671887	PtrMemberAccess	cinfo -> cquantize		6671876	1					
ANR	6671888	Identifier	cinfo		6671876	0					
ANR	6671889	Identifier	cquantize		6671876	1					
ANR	6671890	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	955:2:35138:35177	6671876	1	True				
ANR	6671891	IdentifierDecl	histogram = cquantize -> histogram		6671876	0					
ANR	6671892	IdentifierDeclType	hist3d		6671876	0					
ANR	6671893	Identifier	histogram		6671876	1					
ANR	6671894	AssignmentExpression	histogram = cquantize -> histogram		6671876	2		=			
ANR	6671895	Identifier	histogram		6671876	0					
ANR	6671896	PtrMemberAccess	cquantize -> histogram		6671876	1					
ANR	6671897	Identifier	cquantize		6671876	0					
ANR	6671898	Identifier	histogram		6671876	1					
ANR	6671899	Statement	register	956:2:35181:35188	6671876	2	True				
ANR	6671900	IdentifierDeclStatement	"LOCFSERROR cur0 , cur1 , cur2 ;"	956:11:35190:35217	6671876	3	True				
ANR	6671901	IdentifierDecl	cur0		6671876	0					
ANR	6671902	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671903	Identifier	cur0		6671876	1					
ANR	6671904	IdentifierDecl	cur1		6671876	1					
ANR	6671905	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671906	Identifier	cur1		6671876	1					
ANR	6671907	IdentifierDecl	cur2		6671876	2					
ANR	6671908	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671909	Identifier	cur2		6671876	1					
ANR	6671910	IdentifierDeclStatement	"LOCFSERROR belowerr0 , belowerr1 , belowerr2 ;"	957:2:35256:35298	6671876	4	True				
ANR	6671911	IdentifierDecl	belowerr0		6671876	0					
ANR	6671912	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671913	Identifier	belowerr0		6671876	1					
ANR	6671914	IdentifierDecl	belowerr1		6671876	1					
ANR	6671915	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671916	Identifier	belowerr1		6671876	1					
ANR	6671917	IdentifierDecl	belowerr2		6671876	2					
ANR	6671918	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671919	Identifier	belowerr2		6671876	1					
ANR	6671920	IdentifierDeclStatement	"LOCFSERROR bpreverr0 , bpreverr1 , bpreverr2 ;"	958:2:35334:35376	6671876	5	True				
ANR	6671921	IdentifierDecl	bpreverr0		6671876	0					
ANR	6671922	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671923	Identifier	bpreverr0		6671876	1					
ANR	6671924	IdentifierDecl	bpreverr1		6671876	1					
ANR	6671925	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671926	Identifier	bpreverr1		6671876	1					
ANR	6671927	IdentifierDecl	bpreverr2		6671876	2					
ANR	6671928	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6671929	Identifier	bpreverr2		6671876	1					
ANR	6671930	Statement	register	959:2:35411:35418	6671876	6	True				
ANR	6671931	IdentifierDeclStatement	FSERRPTR errorptr ;	959:11:35420:35437	6671876	7	True				
ANR	6671932	IdentifierDecl	errorptr		6671876	0					
ANR	6671933	IdentifierDeclType	FSERRPTR		6671876	0					
ANR	6671934	Identifier	errorptr		6671876	1					
ANR	6671935	IdentifierDeclStatement	JSAMPROW inptr ;	960:2:35486:35500	6671876	8	True				
ANR	6671936	IdentifierDecl	inptr		6671876	0					
ANR	6671937	IdentifierDeclType	JSAMPROW		6671876	0					
ANR	6671938	Identifier	inptr		6671876	1					
ANR	6671939	IdentifierDeclStatement	JSAMPROW outptr ;	961:2:35534:35549	6671876	9	True				
ANR	6671940	IdentifierDecl	outptr		6671876	0					
ANR	6671941	IdentifierDeclType	JSAMPROW		6671876	0					
ANR	6671942	Identifier	outptr		6671876	1					
ANR	6671943	IdentifierDeclStatement	histptr cachep ;	962:2:35584:35598	6671876	10	True				
ANR	6671944	IdentifierDecl	cachep		6671876	0					
ANR	6671945	IdentifierDeclType	histptr		6671876	0					
ANR	6671946	Identifier	cachep		6671876	1					
ANR	6671947	IdentifierDeclStatement	int dir ;	963:2:35602:35609	6671876	11	True				
ANR	6671948	IdentifierDecl	dir		6671876	0					
ANR	6671949	IdentifierDeclType	int		6671876	0					
ANR	6671950	Identifier	dir		6671876	1					
ANR	6671951	IdentifierDeclStatement	int dir3 ;	964:2:35653:35661	6671876	12	True				
ANR	6671952	IdentifierDecl	dir3		6671876	0					
ANR	6671953	IdentifierDeclType	int		6671876	0					
ANR	6671954	Identifier	dir3		6671876	1					
ANR	6671955	IdentifierDeclStatement	int row ;	965:2:35711:35718	6671876	13	True				
ANR	6671956	IdentifierDecl	row		6671876	0					
ANR	6671957	IdentifierDeclType	int		6671876	0					
ANR	6671958	Identifier	row		6671876	1					
ANR	6671959	IdentifierDeclStatement	JDIMENSION col ;	966:2:35722:35736	6671876	14	True				
ANR	6671960	IdentifierDecl	col		6671876	0					
ANR	6671961	IdentifierDeclType	JDIMENSION		6671876	0					
ANR	6671962	Identifier	col		6671876	1					
ANR	6671963	IdentifierDeclStatement	JDIMENSION width = cinfo -> output_width ;	967:2:35740:35778	6671876	15	True				
ANR	6671964	IdentifierDecl	width = cinfo -> output_width		6671876	0					
ANR	6671965	IdentifierDeclType	JDIMENSION		6671876	0					
ANR	6671966	Identifier	width		6671876	1					
ANR	6671967	AssignmentExpression	width = cinfo -> output_width		6671876	2		=			
ANR	6671968	Identifier	width		6671876	0					
ANR	6671969	PtrMemberAccess	cinfo -> output_width		6671876	1					
ANR	6671970	Identifier	cinfo		6671876	0					
ANR	6671971	Identifier	output_width		6671876	1					
ANR	6671972	IdentifierDeclStatement	JSAMPLE * range_limit = cinfo -> sample_range_limit ;	968:2:35782:35830	6671876	16	True				
ANR	6671973	IdentifierDecl	* range_limit = cinfo -> sample_range_limit		6671876	0					
ANR	6671974	IdentifierDeclType	JSAMPLE *		6671876	0					
ANR	6671975	Identifier	range_limit		6671876	1					
ANR	6671976	AssignmentExpression	* range_limit = cinfo -> sample_range_limit		6671876	2		=			
ANR	6671977	Identifier	range_limit		6671876	0					
ANR	6671978	PtrMemberAccess	cinfo -> sample_range_limit		6671876	1					
ANR	6671979	Identifier	cinfo		6671876	0					
ANR	6671980	Identifier	sample_range_limit		6671876	1					
ANR	6671981	IdentifierDeclStatement	int * error_limit = cquantize -> error_limiter ;	969:2:35834:35877	6671876	17	True				
ANR	6671982	IdentifierDecl	* error_limit = cquantize -> error_limiter		6671876	0					
ANR	6671983	IdentifierDeclType	int *		6671876	0					
ANR	6671984	Identifier	error_limit		6671876	1					
ANR	6671985	AssignmentExpression	* error_limit = cquantize -> error_limiter		6671876	2		=			
ANR	6671986	Identifier	error_limit		6671876	0					
ANR	6671987	PtrMemberAccess	cquantize -> error_limiter		6671876	1					
ANR	6671988	Identifier	cquantize		6671876	0					
ANR	6671989	Identifier	error_limiter		6671876	1					
ANR	6671990	IdentifierDeclStatement	JSAMPROW colormap0 = cinfo -> colormap [ 0 ] ;	970:2:35881:35920	6671876	18	True				
ANR	6671991	IdentifierDecl	colormap0 = cinfo -> colormap [ 0 ]		6671876	0					
ANR	6671992	IdentifierDeclType	JSAMPROW		6671876	0					
ANR	6671993	Identifier	colormap0		6671876	1					
ANR	6671994	AssignmentExpression	colormap0 = cinfo -> colormap [ 0 ]		6671876	2		=			
ANR	6671995	Identifier	colormap0		6671876	0					
ANR	6671996	ArrayIndexing	cinfo -> colormap [ 0 ]		6671876	1					
ANR	6671997	PtrMemberAccess	cinfo -> colormap		6671876	0					
ANR	6671998	Identifier	cinfo		6671876	0					
ANR	6671999	Identifier	colormap		6671876	1					
ANR	6672000	PrimaryExpression	0		6671876	1					
ANR	6672001	IdentifierDeclStatement	JSAMPROW colormap1 = cinfo -> colormap [ 1 ] ;	971:2:35924:35963	6671876	19	True				
ANR	6672002	IdentifierDecl	colormap1 = cinfo -> colormap [ 1 ]		6671876	0					
ANR	6672003	IdentifierDeclType	JSAMPROW		6671876	0					
ANR	6672004	Identifier	colormap1		6671876	1					
ANR	6672005	AssignmentExpression	colormap1 = cinfo -> colormap [ 1 ]		6671876	2		=			
ANR	6672006	Identifier	colormap1		6671876	0					
ANR	6672007	ArrayIndexing	cinfo -> colormap [ 1 ]		6671876	1					
ANR	6672008	PtrMemberAccess	cinfo -> colormap		6671876	0					
ANR	6672009	Identifier	cinfo		6671876	0					
ANR	6672010	Identifier	colormap		6671876	1					
ANR	6672011	PrimaryExpression	1		6671876	1					
ANR	6672012	IdentifierDeclStatement	JSAMPROW colormap2 = cinfo -> colormap [ 2 ] ;	972:2:35967:36006	6671876	20	True				
ANR	6672013	IdentifierDecl	colormap2 = cinfo -> colormap [ 2 ]		6671876	0					
ANR	6672014	IdentifierDeclType	JSAMPROW		6671876	0					
ANR	6672015	Identifier	colormap2		6671876	1					
ANR	6672016	AssignmentExpression	colormap2 = cinfo -> colormap [ 2 ]		6671876	2		=			
ANR	6672017	Identifier	colormap2		6671876	0					
ANR	6672018	ArrayIndexing	cinfo -> colormap [ 2 ]		6671876	1					
ANR	6672019	PtrMemberAccess	cinfo -> colormap		6671876	0					
ANR	6672020	Identifier	cinfo		6671876	0					
ANR	6672021	Identifier	colormap		6671876	1					
ANR	6672022	PrimaryExpression	2		6671876	1					
ANR	6672023	Statement	SHIFT_TEMPS	973:2:36010:36020	6671876	21	True				
ANR	6672024	ForStatement	for ( row = 0 ; row < num_rows ; row ++ )		6671876	22					
ANR	6672025	ForInit	row = 0 ;	975:7:36030:36037	6671876	0	True				
ANR	6672026	AssignmentExpression	row = 0		6671876	0		=			
ANR	6672027	Identifier	row		6671876	0					
ANR	6672028	PrimaryExpression	0		6671876	1					
ANR	6672029	Condition	row < num_rows	975:16:36039:36052	6671876	1	True				
ANR	6672030	RelationalExpression	row < num_rows		6671876	0		<			
ANR	6672031	Identifier	row		6671876	0					
ANR	6672032	Identifier	num_rows		6671876	1					
ANR	6672033	PostIncDecOperationExpression	row ++	975:32:36055:36059	6671876	2	True				
ANR	6672034	Identifier	row		6671876	0					
ANR	6672035	IncDec	++		6671876	1					
ANR	6672036	CompoundStatement		23:39:995:995	6671876	3					
ANR	6672037	ExpressionStatement	inptr = input_buf [ row ]	976:4:36068:36090	6671876	0	True				
ANR	6672038	AssignmentExpression	inptr = input_buf [ row ]		6671876	0		=			
ANR	6672039	Identifier	inptr		6671876	0					
ANR	6672040	ArrayIndexing	input_buf [ row ]		6671876	1					
ANR	6672041	Identifier	input_buf		6671876	0					
ANR	6672042	Identifier	row		6671876	1					
ANR	6672043	ExpressionStatement	outptr = output_buf [ row ]	977:4:36096:36120	6671876	1	True				
ANR	6672044	AssignmentExpression	outptr = output_buf [ row ]		6671876	0		=			
ANR	6672045	Identifier	outptr		6671876	0					
ANR	6672046	ArrayIndexing	output_buf [ row ]		6671876	1					
ANR	6672047	Identifier	output_buf		6671876	0					
ANR	6672048	Identifier	row		6671876	1					
ANR	6672049	IfStatement	if ( cquantize -> on_odd_row )		6671876	2					
ANR	6672050	Condition	cquantize -> on_odd_row	978:8:36130:36150	6671876	0	True				
ANR	6672051	PtrMemberAccess	cquantize -> on_odd_row		6671876	0					
ANR	6672052	Identifier	cquantize		6671876	0					
ANR	6672053	Identifier	on_odd_row		6671876	1					
ANR	6672054	CompoundStatement		26:31:1086:1086	6671876	1					
ANR	6672055	ExpressionStatement	inptr += ( width - 1 ) * 3	980:6:36204:36226	6671876	0	True				
ANR	6672056	AssignmentExpression	inptr += ( width - 1 ) * 3		6671876	0		+=			
ANR	6672057	Identifier	inptr		6671876	0					
ANR	6672058	MultiplicativeExpression	( width - 1 ) * 3		6671876	1		*			
ANR	6672059	AdditiveExpression	width - 1		6671876	0		-			
ANR	6672060	Identifier	width		6671876	0					
ANR	6672061	PrimaryExpression	1		6671876	1					
ANR	6672062	PrimaryExpression	3		6671876	1					
ANR	6672063	ExpressionStatement	outptr += width - 1	981:6:36268:36285	6671876	1	True				
ANR	6672064	AssignmentExpression	outptr += width - 1		6671876	0		+=			
ANR	6672065	Identifier	outptr		6671876	0					
ANR	6672066	AdditiveExpression	width - 1		6671876	1		-			
ANR	6672067	Identifier	width		6671876	0					
ANR	6672068	PrimaryExpression	1		6671876	1					
ANR	6672069	ExpressionStatement	dir = - 1	982:6:36293:36301	6671876	2	True				
ANR	6672070	AssignmentExpression	dir = - 1		6671876	0		=			
ANR	6672071	Identifier	dir		6671876	0					
ANR	6672072	UnaryOperationExpression	- 1		6671876	1					
ANR	6672073	UnaryOperator	-		6671876	0					
ANR	6672074	PrimaryExpression	1		6671876	1					
ANR	6672075	ExpressionStatement	dir3 = - 3	983:6:36309:36318	6671876	3	True				
ANR	6672076	AssignmentExpression	dir3 = - 3		6671876	0		=			
ANR	6672077	Identifier	dir3		6671876	0					
ANR	6672078	UnaryOperationExpression	- 3		6671876	1					
ANR	6672079	UnaryOperator	-		6671876	0					
ANR	6672080	PrimaryExpression	3		6671876	1					
ANR	6672081	ExpressionStatement	errorptr = cquantize -> fserrors + ( width + 1 ) * 3	984:6:36326:36370	6671876	4	True				
ANR	6672082	AssignmentExpression	errorptr = cquantize -> fserrors + ( width + 1 ) * 3		6671876	0		=			
ANR	6672083	Identifier	errorptr		6671876	0					
ANR	6672084	AdditiveExpression	cquantize -> fserrors + ( width + 1 ) * 3		6671876	1		+			
ANR	6672085	PtrMemberAccess	cquantize -> fserrors		6671876	0					
ANR	6672086	Identifier	cquantize		6671876	0					
ANR	6672087	Identifier	fserrors		6671876	1					
ANR	6672088	MultiplicativeExpression	( width + 1 ) * 3		6671876	1		*			
ANR	6672089	AdditiveExpression	width + 1		6671876	0		+			
ANR	6672090	Identifier	width		6671876	0					
ANR	6672091	PrimaryExpression	1		6671876	1					
ANR	6672092	PrimaryExpression	3		6671876	1					
ANR	6672093	ExpressionStatement	cquantize -> on_odd_row = FALSE	985:6:36411:36440	6671876	5	True				
ANR	6672094	AssignmentExpression	cquantize -> on_odd_row = FALSE		6671876	0		=			
ANR	6672095	PtrMemberAccess	cquantize -> on_odd_row		6671876	0					
ANR	6672096	Identifier	cquantize		6671876	0					
ANR	6672097	Identifier	on_odd_row		6671876	1					
ANR	6672098	Identifier	FALSE		6671876	1					
ANR	6672099	ElseStatement	else		6671876	0					
ANR	6672100	CompoundStatement		34:11:1411:1411	6671876	0					
ANR	6672101	ExpressionStatement	dir = 1	988:6:36529:36536	6671876	0	True				
ANR	6672102	AssignmentExpression	dir = 1		6671876	0		=			
ANR	6672103	Identifier	dir		6671876	0					
ANR	6672104	PrimaryExpression	1		6671876	1					
ANR	6672105	ExpressionStatement	dir3 = 3	989:6:36544:36552	6671876	1	True				
ANR	6672106	AssignmentExpression	dir3 = 3		6671876	0		=			
ANR	6672107	Identifier	dir3		6671876	0					
ANR	6672108	PrimaryExpression	3		6671876	1					
ANR	6672109	ExpressionStatement	errorptr = cquantize -> fserrors	990:6:36560:36590	6671876	2	True				
ANR	6672110	AssignmentExpression	errorptr = cquantize -> fserrors		6671876	0		=			
ANR	6672111	Identifier	errorptr		6671876	0					
ANR	6672112	PtrMemberAccess	cquantize -> fserrors		6671876	1					
ANR	6672113	Identifier	cquantize		6671876	0					
ANR	6672114	Identifier	fserrors		6671876	1					
ANR	6672115	ExpressionStatement	cquantize -> on_odd_row = TRUE	991:6:36638:36666	6671876	3	True				
ANR	6672116	AssignmentExpression	cquantize -> on_odd_row = TRUE		6671876	0		=			
ANR	6672117	PtrMemberAccess	cquantize -> on_odd_row		6671876	0					
ANR	6672118	Identifier	cquantize		6671876	0					
ANR	6672119	Identifier	on_odd_row		6671876	1					
ANR	6672120	Identifier	TRUE		6671876	1					
ANR	6672121	ExpressionStatement	cur0 = cur1 = cur2 = 0	994:4:36779:36801	6671876	3	True				
ANR	6672122	AssignmentExpression	cur0 = cur1 = cur2 = 0		6671876	0		=			
ANR	6672123	Identifier	cur0		6671876	0					
ANR	6672124	AssignmentExpression	cur1 = cur2 = 0		6671876	1		=			
ANR	6672125	Identifier	cur1		6671876	0					
ANR	6672126	AssignmentExpression	cur2 = 0		6671876	1		=			
ANR	6672127	Identifier	cur2		6671876	0					
ANR	6672128	PrimaryExpression	0		6671876	1					
ANR	6672129	ExpressionStatement	belowerr0 = belowerr1 = belowerr2 = 0	996:4:36858:36895	6671876	4	True				
ANR	6672130	AssignmentExpression	belowerr0 = belowerr1 = belowerr2 = 0		6671876	0		=			
ANR	6672131	Identifier	belowerr0		6671876	0					
ANR	6672132	AssignmentExpression	belowerr1 = belowerr2 = 0		6671876	1		=			
ANR	6672133	Identifier	belowerr1		6671876	0					
ANR	6672134	AssignmentExpression	belowerr2 = 0		6671876	1		=			
ANR	6672135	Identifier	belowerr2		6671876	0					
ANR	6672136	PrimaryExpression	0		6671876	1					
ANR	6672137	ExpressionStatement	bpreverr0 = bpreverr1 = bpreverr2 = 0	997:4:36901:36938	6671876	5	True				
ANR	6672138	AssignmentExpression	bpreverr0 = bpreverr1 = bpreverr2 = 0		6671876	0		=			
ANR	6672139	Identifier	bpreverr0		6671876	0					
ANR	6672140	AssignmentExpression	bpreverr1 = bpreverr2 = 0		6671876	1		=			
ANR	6672141	Identifier	bpreverr1		6671876	0					
ANR	6672142	AssignmentExpression	bpreverr2 = 0		6671876	1		=			
ANR	6672143	Identifier	bpreverr2		6671876	0					
ANR	6672144	PrimaryExpression	0		6671876	1					
ANR	6672145	ForStatement	for ( col = width ; col > 0 ; col -- )		6671876	6					
ANR	6672146	ForInit	col = width ;	999:9:36950:36961	6671876	0	True				
ANR	6672147	AssignmentExpression	col = width		6671876	0		=			
ANR	6672148	Identifier	col		6671876	0					
ANR	6672149	Identifier	width		6671876	1					
ANR	6672150	Condition	col > 0	999:22:36963:36969	6671876	1	True				
ANR	6672151	RelationalExpression	col > 0		6671876	0		>			
ANR	6672152	Identifier	col		6671876	0					
ANR	6672153	PrimaryExpression	0		6671876	1					
ANR	6672154	PostIncDecOperationExpression	col --	999:31:36972:36976	6671876	2	True				
ANR	6672155	Identifier	col		6671876	0					
ANR	6672156	IncDec	--		6671876	1					
ANR	6672157	CompoundStatement		47:38:1912:1912	6671876	3					
ANR	6672158	ExpressionStatement	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"	1008:6:37471:37521	6671876	0	True				
ANR	6672159	AssignmentExpression	"cur0 = RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		6671876	0		=			
ANR	6672160	Identifier	cur0		6671876	0					
ANR	6672161	CallExpression	"RIGHT_SHIFT ( cur0 + errorptr [ dir3 + 0 ] + 8 , 4 )"		6671876	1					
ANR	6672162	Callee	RIGHT_SHIFT		6671876	0					
ANR	6672163	Identifier	RIGHT_SHIFT		6671876	0					
ANR	6672164	ArgumentList	cur0 + errorptr [ dir3 + 0 ] + 8		6671876	1					
ANR	6672165	Argument	cur0 + errorptr [ dir3 + 0 ] + 8		6671876	0					
ANR	6672166	AdditiveExpression	cur0 + errorptr [ dir3 + 0 ] + 8		6671876	0		+			
ANR	6672167	Identifier	cur0		6671876	0					
ANR	6672168	AdditiveExpression	errorptr [ dir3 + 0 ] + 8		6671876	1		+			
ANR	6672169	ArrayIndexing	errorptr [ dir3 + 0 ]		6671876	0					
ANR	6672170	Identifier	errorptr		6671876	0					
ANR	6672171	AdditiveExpression	dir3 + 0		6671876	1		+			
ANR	6672172	Identifier	dir3		6671876	0					
ANR	6672173	PrimaryExpression	0		6671876	1					
ANR	6672174	PrimaryExpression	8		6671876	1					
ANR	6672175	Argument	4		6671876	1					
ANR	6672176	PrimaryExpression	4		6671876	0					
ANR	6672177	ExpressionStatement	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"	1009:6:37529:37579	6671876	1	True				
ANR	6672178	AssignmentExpression	"cur1 = RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		6671876	0		=			
ANR	6672179	Identifier	cur1		6671876	0					
ANR	6672180	CallExpression	"RIGHT_SHIFT ( cur1 + errorptr [ dir3 + 1 ] + 8 , 4 )"		6671876	1					
ANR	6672181	Callee	RIGHT_SHIFT		6671876	0					
ANR	6672182	Identifier	RIGHT_SHIFT		6671876	0					
ANR	6672183	ArgumentList	cur1 + errorptr [ dir3 + 1 ] + 8		6671876	1					
ANR	6672184	Argument	cur1 + errorptr [ dir3 + 1 ] + 8		6671876	0					
ANR	6672185	AdditiveExpression	cur1 + errorptr [ dir3 + 1 ] + 8		6671876	0		+			
ANR	6672186	Identifier	cur1		6671876	0					
ANR	6672187	AdditiveExpression	errorptr [ dir3 + 1 ] + 8		6671876	1		+			
ANR	6672188	ArrayIndexing	errorptr [ dir3 + 1 ]		6671876	0					
ANR	6672189	Identifier	errorptr		6671876	0					
ANR	6672190	AdditiveExpression	dir3 + 1		6671876	1		+			
ANR	6672191	Identifier	dir3		6671876	0					
ANR	6672192	PrimaryExpression	1		6671876	1					
ANR	6672193	PrimaryExpression	8		6671876	1					
ANR	6672194	Argument	4		6671876	1					
ANR	6672195	PrimaryExpression	4		6671876	0					
ANR	6672196	ExpressionStatement	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"	1010:6:37587:37637	6671876	2	True				
ANR	6672197	AssignmentExpression	"cur2 = RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		6671876	0		=			
ANR	6672198	Identifier	cur2		6671876	0					
ANR	6672199	CallExpression	"RIGHT_SHIFT ( cur2 + errorptr [ dir3 + 2 ] + 8 , 4 )"		6671876	1					
ANR	6672200	Callee	RIGHT_SHIFT		6671876	0					
ANR	6672201	Identifier	RIGHT_SHIFT		6671876	0					
ANR	6672202	ArgumentList	cur2 + errorptr [ dir3 + 2 ] + 8		6671876	1					
ANR	6672203	Argument	cur2 + errorptr [ dir3 + 2 ] + 8		6671876	0					
ANR	6672204	AdditiveExpression	cur2 + errorptr [ dir3 + 2 ] + 8		6671876	0		+			
ANR	6672205	Identifier	cur2		6671876	0					
ANR	6672206	AdditiveExpression	errorptr [ dir3 + 2 ] + 8		6671876	1		+			
ANR	6672207	ArrayIndexing	errorptr [ dir3 + 2 ]		6671876	0					
ANR	6672208	Identifier	errorptr		6671876	0					
ANR	6672209	AdditiveExpression	dir3 + 2		6671876	1		+			
ANR	6672210	Identifier	dir3		6671876	0					
ANR	6672211	PrimaryExpression	2		6671876	1					
ANR	6672212	PrimaryExpression	8		6671876	1					
ANR	6672213	Argument	4		6671876	1					
ANR	6672214	PrimaryExpression	4		6671876	0					
ANR	6672215	ExpressionStatement	cur0 = error_limit [ cur0 ]	1014:6:37788:37812	6671876	3	True				
ANR	6672216	AssignmentExpression	cur0 = error_limit [ cur0 ]		6671876	0		=			
ANR	6672217	Identifier	cur0		6671876	0					
ANR	6672218	ArrayIndexing	error_limit [ cur0 ]		6671876	1					
ANR	6672219	Identifier	error_limit		6671876	0					
ANR	6672220	Identifier	cur0		6671876	1					
ANR	6672221	ExpressionStatement	cur1 = error_limit [ cur1 ]	1015:6:37820:37844	6671876	4	True				
ANR	6672222	AssignmentExpression	cur1 = error_limit [ cur1 ]		6671876	0		=			
ANR	6672223	Identifier	cur1		6671876	0					
ANR	6672224	ArrayIndexing	error_limit [ cur1 ]		6671876	1					
ANR	6672225	Identifier	error_limit		6671876	0					
ANR	6672226	Identifier	cur1		6671876	1					
ANR	6672227	ExpressionStatement	cur2 = error_limit [ cur2 ]	1016:6:37852:37876	6671876	5	True				
ANR	6672228	AssignmentExpression	cur2 = error_limit [ cur2 ]		6671876	0		=			
ANR	6672229	Identifier	cur2		6671876	0					
ANR	6672230	ArrayIndexing	error_limit [ cur2 ]		6671876	1					
ANR	6672231	Identifier	error_limit		6671876	0					
ANR	6672232	Identifier	cur2		6671876	1					
ANR	6672233	ExpressionStatement	cur0 += GETJSAMPLE ( inptr [ 0 ] )	1021:6:38101:38129	6671876	6	True				
ANR	6672234	AssignmentExpression	cur0 += GETJSAMPLE ( inptr [ 0 ] )		6671876	0		+=			
ANR	6672235	Identifier	cur0		6671876	0					
ANR	6672236	CallExpression	GETJSAMPLE ( inptr [ 0 ] )		6671876	1					
ANR	6672237	Callee	GETJSAMPLE		6671876	0					
ANR	6672238	Identifier	GETJSAMPLE		6671876	0					
ANR	6672239	ArgumentList	inptr [ 0 ]		6671876	1					
ANR	6672240	Argument	inptr [ 0 ]		6671876	0					
ANR	6672241	ArrayIndexing	inptr [ 0 ]		6671876	0					
ANR	6672242	Identifier	inptr		6671876	0					
ANR	6672243	PrimaryExpression	0		6671876	1					
ANR	6672244	ExpressionStatement	cur1 += GETJSAMPLE ( inptr [ 1 ] )	1022:6:38137:38165	6671876	7	True				
ANR	6672245	AssignmentExpression	cur1 += GETJSAMPLE ( inptr [ 1 ] )		6671876	0		+=			
ANR	6672246	Identifier	cur1		6671876	0					
ANR	6672247	CallExpression	GETJSAMPLE ( inptr [ 1 ] )		6671876	1					
ANR	6672248	Callee	GETJSAMPLE		6671876	0					
ANR	6672249	Identifier	GETJSAMPLE		6671876	0					
ANR	6672250	ArgumentList	inptr [ 1 ]		6671876	1					
ANR	6672251	Argument	inptr [ 1 ]		6671876	0					
ANR	6672252	ArrayIndexing	inptr [ 1 ]		6671876	0					
ANR	6672253	Identifier	inptr		6671876	0					
ANR	6672254	PrimaryExpression	1		6671876	1					
ANR	6672255	ExpressionStatement	cur2 += GETJSAMPLE ( inptr [ 2 ] )	1023:6:38173:38201	6671876	8	True				
ANR	6672256	AssignmentExpression	cur2 += GETJSAMPLE ( inptr [ 2 ] )		6671876	0		+=			
ANR	6672257	Identifier	cur2		6671876	0					
ANR	6672258	CallExpression	GETJSAMPLE ( inptr [ 2 ] )		6671876	1					
ANR	6672259	Callee	GETJSAMPLE		6671876	0					
ANR	6672260	Identifier	GETJSAMPLE		6671876	0					
ANR	6672261	ArgumentList	inptr [ 2 ]		6671876	1					
ANR	6672262	Argument	inptr [ 2 ]		6671876	0					
ANR	6672263	ArrayIndexing	inptr [ 2 ]		6671876	0					
ANR	6672264	Identifier	inptr		6671876	0					
ANR	6672265	PrimaryExpression	2		6671876	1					
ANR	6672266	ExpressionStatement	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )	1024:6:38209:38245	6671876	9	True				
ANR	6672267	AssignmentExpression	cur0 = GETJSAMPLE ( range_limit [ cur0 ] )		6671876	0		=			
ANR	6672268	Identifier	cur0		6671876	0					
ANR	6672269	CallExpression	GETJSAMPLE ( range_limit [ cur0 ] )		6671876	1					
ANR	6672270	Callee	GETJSAMPLE		6671876	0					
ANR	6672271	Identifier	GETJSAMPLE		6671876	0					
ANR	6672272	ArgumentList	range_limit [ cur0 ]		6671876	1					
ANR	6672273	Argument	range_limit [ cur0 ]		6671876	0					
ANR	6672274	ArrayIndexing	range_limit [ cur0 ]		6671876	0					
ANR	6672275	Identifier	range_limit		6671876	0					
ANR	6672276	Identifier	cur0		6671876	1					
ANR	6672277	ExpressionStatement	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )	1025:6:38253:38289	6671876	10	True				
ANR	6672278	AssignmentExpression	cur1 = GETJSAMPLE ( range_limit [ cur1 ] )		6671876	0		=			
ANR	6672279	Identifier	cur1		6671876	0					
ANR	6672280	CallExpression	GETJSAMPLE ( range_limit [ cur1 ] )		6671876	1					
ANR	6672281	Callee	GETJSAMPLE		6671876	0					
ANR	6672282	Identifier	GETJSAMPLE		6671876	0					
ANR	6672283	ArgumentList	range_limit [ cur1 ]		6671876	1					
ANR	6672284	Argument	range_limit [ cur1 ]		6671876	0					
ANR	6672285	ArrayIndexing	range_limit [ cur1 ]		6671876	0					
ANR	6672286	Identifier	range_limit		6671876	0					
ANR	6672287	Identifier	cur1		6671876	1					
ANR	6672288	ExpressionStatement	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )	1026:6:38297:38333	6671876	11	True				
ANR	6672289	AssignmentExpression	cur2 = GETJSAMPLE ( range_limit [ cur2 ] )		6671876	0		=			
ANR	6672290	Identifier	cur2		6671876	0					
ANR	6672291	CallExpression	GETJSAMPLE ( range_limit [ cur2 ] )		6671876	1					
ANR	6672292	Callee	GETJSAMPLE		6671876	0					
ANR	6672293	Identifier	GETJSAMPLE		6671876	0					
ANR	6672294	ArgumentList	range_limit [ cur2 ]		6671876	1					
ANR	6672295	Argument	range_limit [ cur2 ]		6671876	0					
ANR	6672296	ArrayIndexing	range_limit [ cur2 ]		6671876	0					
ANR	6672297	Identifier	range_limit		6671876	0					
ANR	6672298	Identifier	cur2		6671876	1					
ANR	6672299	ExpressionStatement	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]	1028:6:38400:38468	6671876	12	True				
ANR	6672300	AssignmentExpression	cachep = & histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6671876	0		=			
ANR	6672301	Identifier	cachep		6671876	0					
ANR	6672302	UnaryOperationExpression	& histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6671876	1					
ANR	6672303	UnaryOperator	&		6671876	0					
ANR	6672304	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ] [ cur2 >> C2_SHIFT ]		6671876	1					
ANR	6672305	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ] [ cur1 >> C1_SHIFT ]		6671876	0					
ANR	6672306	ArrayIndexing	histogram [ cur0 >> C0_SHIFT ]		6671876	0					
ANR	6672307	Identifier	histogram		6671876	0					
ANR	6672308	ShiftExpression	cur0 >> C0_SHIFT		6671876	1		>>			
ANR	6672309	Identifier	cur0		6671876	0					
ANR	6672310	Identifier	C0_SHIFT		6671876	1					
ANR	6672311	ShiftExpression	cur1 >> C1_SHIFT		6671876	1		>>			
ANR	6672312	Identifier	cur1		6671876	0					
ANR	6672313	Identifier	C1_SHIFT		6671876	1					
ANR	6672314	ShiftExpression	cur2 >> C2_SHIFT		6671876	1		>>			
ANR	6672315	Identifier	cur2		6671876	0					
ANR	6672316	Identifier	C2_SHIFT		6671876	1					
ANR	6672317	IfStatement	if ( * cachep == 0 )		6671876	13					
ANR	6672318	Condition	* cachep == 0	1031:10:38592:38603	6671876	0	True				
ANR	6672319	EqualityExpression	* cachep == 0		6671876	0		==			
ANR	6672320	UnaryOperationExpression	* cachep		6671876	0					
ANR	6672321	UnaryOperator	*		6671876	0					
ANR	6672322	Identifier	cachep		6671876	1					
ANR	6672323	PrimaryExpression	0		6671876	1					
ANR	6672324	ExpressionStatement	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"	1032:1:38607:38677	6671876	1	True				
ANR	6672325	CallExpression	"fill_inverse_cmap ( cinfo , cur0 >> C0_SHIFT , cur1 >> C1_SHIFT , cur2 >> C2_SHIFT )"		6671876	0					
ANR	6672326	Callee	fill_inverse_cmap		6671876	0					
ANR	6672327	Identifier	fill_inverse_cmap		6671876	0					
ANR	6672328	ArgumentList	cinfo		6671876	1					
ANR	6672329	Argument	cinfo		6671876	0					
ANR	6672330	Identifier	cinfo		6671876	0					
ANR	6672331	Argument	cur0 >> C0_SHIFT		6671876	1					
ANR	6672332	ShiftExpression	cur0 >> C0_SHIFT		6671876	0		>>			
ANR	6672333	Identifier	cur0		6671876	0					
ANR	6672334	Identifier	C0_SHIFT		6671876	1					
ANR	6672335	Argument	cur1 >> C1_SHIFT		6671876	2					
ANR	6672336	ShiftExpression	cur1 >> C1_SHIFT		6671876	0		>>			
ANR	6672337	Identifier	cur1		6671876	0					
ANR	6672338	Identifier	C1_SHIFT		6671876	1					
ANR	6672339	Argument	cur2 >> C2_SHIFT		6671876	3					
ANR	6672340	ShiftExpression	cur2 >> C2_SHIFT		6671876	0		>>			
ANR	6672341	Identifier	cur2		6671876	0					
ANR	6672342	Identifier	C2_SHIFT		6671876	1					
ANR	6672343	CompoundStatement		82:17:3683:3708	6671876	14					
ANR	6672344	Statement	register	1034:8:38741:38748	6671876	0	True				
ANR	6672345	IdentifierDeclStatement	int pixcode = * cachep - 1 ;	1034:17:38750:38775	6671876	1	True				
ANR	6672346	IdentifierDecl	pixcode = * cachep - 1		6671876	0					
ANR	6672347	IdentifierDeclType	int		6671876	0					
ANR	6672348	Identifier	pixcode		6671876	1					
ANR	6672349	AssignmentExpression	pixcode = * cachep - 1		6671876	2		=			
ANR	6672350	Identifier	pixcode		6671876	0					
ANR	6672351	AdditiveExpression	* cachep - 1		6671876	1		-			
ANR	6672352	UnaryOperationExpression	* cachep		6671876	0					
ANR	6672353	UnaryOperator	*		6671876	0					
ANR	6672354	Identifier	cachep		6671876	1					
ANR	6672355	PrimaryExpression	1		6671876	1					
ANR	6672356	ExpressionStatement	* outptr = ( JSAMPLE ) pixcode	1035:1:38778:38805	6671876	2	True				
ANR	6672357	AssignmentExpression	* outptr = ( JSAMPLE ) pixcode		6671876	0		=			
ANR	6672358	UnaryOperationExpression	* outptr		6671876	0					
ANR	6672359	UnaryOperator	*		6671876	0					
ANR	6672360	Identifier	outptr		6671876	1					
ANR	6672361	CastExpression	( JSAMPLE ) pixcode		6671876	1					
ANR	6672362	CastTarget	JSAMPLE		6671876	0					
ANR	6672363	Identifier	pixcode		6671876	1					
ANR	6672364	ExpressionStatement	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )	1037:1:38859:38897	6671876	3	True				
ANR	6672365	AssignmentExpression	cur0 -= GETJSAMPLE ( colormap0 [ pixcode ] )		6671876	0		-=			
ANR	6672366	Identifier	cur0		6671876	0					
ANR	6672367	CallExpression	GETJSAMPLE ( colormap0 [ pixcode ] )		6671876	1					
ANR	6672368	Callee	GETJSAMPLE		6671876	0					
ANR	6672369	Identifier	GETJSAMPLE		6671876	0					
ANR	6672370	ArgumentList	colormap0 [ pixcode ]		6671876	1					
ANR	6672371	Argument	colormap0 [ pixcode ]		6671876	0					
ANR	6672372	ArrayIndexing	colormap0 [ pixcode ]		6671876	0					
ANR	6672373	Identifier	colormap0		6671876	0					
ANR	6672374	Identifier	pixcode		6671876	1					
ANR	6672375	ExpressionStatement	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )	1038:1:38900:38938	6671876	4	True				
ANR	6672376	AssignmentExpression	cur1 -= GETJSAMPLE ( colormap1 [ pixcode ] )		6671876	0		-=			
ANR	6672377	Identifier	cur1		6671876	0					
ANR	6672378	CallExpression	GETJSAMPLE ( colormap1 [ pixcode ] )		6671876	1					
ANR	6672379	Callee	GETJSAMPLE		6671876	0					
ANR	6672380	Identifier	GETJSAMPLE		6671876	0					
ANR	6672381	ArgumentList	colormap1 [ pixcode ]		6671876	1					
ANR	6672382	Argument	colormap1 [ pixcode ]		6671876	0					
ANR	6672383	ArrayIndexing	colormap1 [ pixcode ]		6671876	0					
ANR	6672384	Identifier	colormap1		6671876	0					
ANR	6672385	Identifier	pixcode		6671876	1					
ANR	6672386	ExpressionStatement	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )	1039:1:38941:38979	6671876	5	True				
ANR	6672387	AssignmentExpression	cur2 -= GETJSAMPLE ( colormap2 [ pixcode ] )		6671876	0		-=			
ANR	6672388	Identifier	cur2		6671876	0					
ANR	6672389	CallExpression	GETJSAMPLE ( colormap2 [ pixcode ] )		6671876	1					
ANR	6672390	Callee	GETJSAMPLE		6671876	0					
ANR	6672391	Identifier	GETJSAMPLE		6671876	0					
ANR	6672392	ArgumentList	colormap2 [ pixcode ]		6671876	1					
ANR	6672393	Argument	colormap2 [ pixcode ]		6671876	0					
ANR	6672394	ArrayIndexing	colormap2 [ pixcode ]		6671876	0					
ANR	6672395	Identifier	colormap2		6671876	0					
ANR	6672396	Identifier	pixcode		6671876	1					
ANR	6672397	CompoundStatement		93:17:4138:4164	6671876	15					
ANR	6672398	Statement	register	1045:8:39196:39203	6671876	0	True				
ANR	6672399	IdentifierDeclStatement	"LOCFSERROR bnexterr , delta ;"	1045:17:39205:39231	6671876	1	True				
ANR	6672400	IdentifierDecl	bnexterr		6671876	0					
ANR	6672401	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6672402	Identifier	bnexterr		6671876	1					
ANR	6672403	IdentifierDecl	delta		6671876	1					
ANR	6672404	IdentifierDeclType	LOCFSERROR		6671876	0					
ANR	6672405	Identifier	delta		6671876	1					
ANR	6672406	ExpressionStatement	bnexterr = cur0	1047:1:39235:39250	6671876	2	True				
ANR	6672407	AssignmentExpression	bnexterr = cur0		6671876	0		=			
ANR	6672408	Identifier	bnexterr		6671876	0					
ANR	6672409	Identifier	cur0		6671876	1					
ANR	6672410	ExpressionStatement	delta = cur0 * 2	1048:1:39279:39295	6671876	3	True				
ANR	6672411	AssignmentExpression	delta = cur0 * 2		6671876	0		=			
ANR	6672412	Identifier	delta		6671876	0					
ANR	6672413	MultiplicativeExpression	cur0 * 2		6671876	1		*			
ANR	6672414	Identifier	cur0		6671876	0					
ANR	6672415	PrimaryExpression	2		6671876	1					
ANR	6672416	ExpressionStatement	cur0 += delta	1049:1:39298:39311	6671876	4	True				
ANR	6672417	AssignmentExpression	cur0 += delta		6671876	0		+=			
ANR	6672418	Identifier	cur0		6671876	0					
ANR	6672419	Identifier	delta		6671876	1					
ANR	6672420	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )	1050:1:39336:39378	6671876	5	True				
ANR	6672421	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) ( bpreverr0 + cur0 )		6671876	0		=			
ANR	6672422	ArrayIndexing	errorptr [ 0 ]		6671876	0					
ANR	6672423	Identifier	errorptr		6671876	0					
ANR	6672424	PrimaryExpression	0		6671876	1					
ANR	6672425	CastExpression	( FSERROR ) ( bpreverr0 + cur0 )		6671876	1					
ANR	6672426	CastTarget	FSERROR		6671876	0					
ANR	6672427	AdditiveExpression	bpreverr0 + cur0		6671876	1		+			
ANR	6672428	Identifier	bpreverr0		6671876	0					
ANR	6672429	Identifier	cur0		6671876	1					
ANR	6672430	ExpressionStatement	cur0 += delta	1051:1:39381:39394	6671876	6	True				
ANR	6672431	AssignmentExpression	cur0 += delta		6671876	0		+=			
ANR	6672432	Identifier	cur0		6671876	0					
ANR	6672433	Identifier	delta		6671876	1					
ANR	6672434	ExpressionStatement	bpreverr0 = belowerr0 + cur0	1052:1:39419:39447	6671876	7	True				
ANR	6672435	AssignmentExpression	bpreverr0 = belowerr0 + cur0		6671876	0		=			
ANR	6672436	Identifier	bpreverr0		6671876	0					
ANR	6672437	AdditiveExpression	belowerr0 + cur0		6671876	1		+			
ANR	6672438	Identifier	belowerr0		6671876	0					
ANR	6672439	Identifier	cur0		6671876	1					
ANR	6672440	ExpressionStatement	belowerr0 = bnexterr	1053:1:39450:39470	6671876	8	True				
ANR	6672441	AssignmentExpression	belowerr0 = bnexterr		6671876	0		=			
ANR	6672442	Identifier	belowerr0		6671876	0					
ANR	6672443	Identifier	bnexterr		6671876	1					
ANR	6672444	ExpressionStatement	cur0 += delta	1054:1:39473:39486	6671876	9	True				
ANR	6672445	AssignmentExpression	cur0 += delta		6671876	0		+=			
ANR	6672446	Identifier	cur0		6671876	0					
ANR	6672447	Identifier	delta		6671876	1					
ANR	6672448	ExpressionStatement	bnexterr = cur1	1055:1:39511:39526	6671876	10	True				
ANR	6672449	AssignmentExpression	bnexterr = cur1		6671876	0		=			
ANR	6672450	Identifier	bnexterr		6671876	0					
ANR	6672451	Identifier	cur1		6671876	1					
ANR	6672452	ExpressionStatement	delta = cur1 * 2	1056:1:39555:39571	6671876	11	True				
ANR	6672453	AssignmentExpression	delta = cur1 * 2		6671876	0		=			
ANR	6672454	Identifier	delta		6671876	0					
ANR	6672455	MultiplicativeExpression	cur1 * 2		6671876	1		*			
ANR	6672456	Identifier	cur1		6671876	0					
ANR	6672457	PrimaryExpression	2		6671876	1					
ANR	6672458	ExpressionStatement	cur1 += delta	1057:1:39574:39587	6671876	12	True				
ANR	6672459	AssignmentExpression	cur1 += delta		6671876	0		+=			
ANR	6672460	Identifier	cur1		6671876	0					
ANR	6672461	Identifier	delta		6671876	1					
ANR	6672462	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )	1058:1:39612:39654	6671876	13	True				
ANR	6672463	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) ( bpreverr1 + cur1 )		6671876	0		=			
ANR	6672464	ArrayIndexing	errorptr [ 1 ]		6671876	0					
ANR	6672465	Identifier	errorptr		6671876	0					
ANR	6672466	PrimaryExpression	1		6671876	1					
ANR	6672467	CastExpression	( FSERROR ) ( bpreverr1 + cur1 )		6671876	1					
ANR	6672468	CastTarget	FSERROR		6671876	0					
ANR	6672469	AdditiveExpression	bpreverr1 + cur1		6671876	1		+			
ANR	6672470	Identifier	bpreverr1		6671876	0					
ANR	6672471	Identifier	cur1		6671876	1					
ANR	6672472	ExpressionStatement	cur1 += delta	1059:1:39657:39670	6671876	14	True				
ANR	6672473	AssignmentExpression	cur1 += delta		6671876	0		+=			
ANR	6672474	Identifier	cur1		6671876	0					
ANR	6672475	Identifier	delta		6671876	1					
ANR	6672476	ExpressionStatement	bpreverr1 = belowerr1 + cur1	1060:1:39695:39723	6671876	15	True				
ANR	6672477	AssignmentExpression	bpreverr1 = belowerr1 + cur1		6671876	0		=			
ANR	6672478	Identifier	bpreverr1		6671876	0					
ANR	6672479	AdditiveExpression	belowerr1 + cur1		6671876	1		+			
ANR	6672480	Identifier	belowerr1		6671876	0					
ANR	6672481	Identifier	cur1		6671876	1					
ANR	6672482	ExpressionStatement	belowerr1 = bnexterr	1061:1:39726:39746	6671876	16	True				
ANR	6672483	AssignmentExpression	belowerr1 = bnexterr		6671876	0		=			
ANR	6672484	Identifier	belowerr1		6671876	0					
ANR	6672485	Identifier	bnexterr		6671876	1					
ANR	6672486	ExpressionStatement	cur1 += delta	1062:1:39749:39762	6671876	17	True				
ANR	6672487	AssignmentExpression	cur1 += delta		6671876	0		+=			
ANR	6672488	Identifier	cur1		6671876	0					
ANR	6672489	Identifier	delta		6671876	1					
ANR	6672490	ExpressionStatement	bnexterr = cur2	1063:1:39787:39802	6671876	18	True				
ANR	6672491	AssignmentExpression	bnexterr = cur2		6671876	0		=			
ANR	6672492	Identifier	bnexterr		6671876	0					
ANR	6672493	Identifier	cur2		6671876	1					
ANR	6672494	ExpressionStatement	delta = cur2 * 2	1064:1:39831:39847	6671876	19	True				
ANR	6672495	AssignmentExpression	delta = cur2 * 2		6671876	0		=			
ANR	6672496	Identifier	delta		6671876	0					
ANR	6672497	MultiplicativeExpression	cur2 * 2		6671876	1		*			
ANR	6672498	Identifier	cur2		6671876	0					
ANR	6672499	PrimaryExpression	2		6671876	1					
ANR	6672500	ExpressionStatement	cur2 += delta	1065:1:39850:39863	6671876	20	True				
ANR	6672501	AssignmentExpression	cur2 += delta		6671876	0		+=			
ANR	6672502	Identifier	cur2		6671876	0					
ANR	6672503	Identifier	delta		6671876	1					
ANR	6672504	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )	1066:1:39888:39930	6671876	21	True				
ANR	6672505	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) ( bpreverr2 + cur2 )		6671876	0		=			
ANR	6672506	ArrayIndexing	errorptr [ 2 ]		6671876	0					
ANR	6672507	Identifier	errorptr		6671876	0					
ANR	6672508	PrimaryExpression	2		6671876	1					
ANR	6672509	CastExpression	( FSERROR ) ( bpreverr2 + cur2 )		6671876	1					
ANR	6672510	CastTarget	FSERROR		6671876	0					
ANR	6672511	AdditiveExpression	bpreverr2 + cur2		6671876	1		+			
ANR	6672512	Identifier	bpreverr2		6671876	0					
ANR	6672513	Identifier	cur2		6671876	1					
ANR	6672514	ExpressionStatement	cur2 += delta	1067:1:39933:39946	6671876	22	True				
ANR	6672515	AssignmentExpression	cur2 += delta		6671876	0		+=			
ANR	6672516	Identifier	cur2		6671876	0					
ANR	6672517	Identifier	delta		6671876	1					
ANR	6672518	ExpressionStatement	bpreverr2 = belowerr2 + cur2	1068:1:39971:39999	6671876	23	True				
ANR	6672519	AssignmentExpression	bpreverr2 = belowerr2 + cur2		6671876	0		=			
ANR	6672520	Identifier	bpreverr2		6671876	0					
ANR	6672521	AdditiveExpression	belowerr2 + cur2		6671876	1		+			
ANR	6672522	Identifier	belowerr2		6671876	0					
ANR	6672523	Identifier	cur2		6671876	1					
ANR	6672524	ExpressionStatement	belowerr2 = bnexterr	1069:1:40002:40022	6671876	24	True				
ANR	6672525	AssignmentExpression	belowerr2 = bnexterr		6671876	0		=			
ANR	6672526	Identifier	belowerr2		6671876	0					
ANR	6672527	Identifier	bnexterr		6671876	1					
ANR	6672528	ExpressionStatement	cur2 += delta	1070:1:40025:40038	6671876	25	True				
ANR	6672529	AssignmentExpression	cur2 += delta		6671876	0		+=			
ANR	6672530	Identifier	cur2		6671876	0					
ANR	6672531	Identifier	delta		6671876	1					
ANR	6672532	ExpressionStatement	inptr += dir3	1076:6:40315:40328	6671876	16	True				
ANR	6672533	AssignmentExpression	inptr += dir3		6671876	0		+=			
ANR	6672534	Identifier	inptr		6671876	0					
ANR	6672535	Identifier	dir3		6671876	1					
ANR	6672536	ExpressionStatement	outptr += dir	1077:6:40381:40394	6671876	17	True				
ANR	6672537	AssignmentExpression	outptr += dir		6671876	0		+=			
ANR	6672538	Identifier	outptr		6671876	0					
ANR	6672539	Identifier	dir		6671876	1					
ANR	6672540	ExpressionStatement	errorptr += dir3	1078:6:40402:40418	6671876	18	True				
ANR	6672541	AssignmentExpression	errorptr += dir3		6671876	0		+=			
ANR	6672542	Identifier	errorptr		6671876	0					
ANR	6672543	Identifier	dir3		6671876	1					
ANR	6672544	ExpressionStatement	errorptr [ 0 ] = ( FSERROR ) bpreverr0	1084:4:40695:40728	6671876	7	True				
ANR	6672545	AssignmentExpression	errorptr [ 0 ] = ( FSERROR ) bpreverr0		6671876	0		=			
ANR	6672546	ArrayIndexing	errorptr [ 0 ]		6671876	0					
ANR	6672547	Identifier	errorptr		6671876	0					
ANR	6672548	PrimaryExpression	0		6671876	1					
ANR	6672549	CastExpression	( FSERROR ) bpreverr0		6671876	1					
ANR	6672550	CastTarget	FSERROR		6671876	0					
ANR	6672551	Identifier	bpreverr0		6671876	1					
ANR	6672552	ExpressionStatement	errorptr [ 1 ] = ( FSERROR ) bpreverr1	1085:4:40768:40801	6671876	8	True				
ANR	6672553	AssignmentExpression	errorptr [ 1 ] = ( FSERROR ) bpreverr1		6671876	0		=			
ANR	6672554	ArrayIndexing	errorptr [ 1 ]		6671876	0					
ANR	6672555	Identifier	errorptr		6671876	0					
ANR	6672556	PrimaryExpression	1		6671876	1					
ANR	6672557	CastExpression	( FSERROR ) bpreverr1		6671876	1					
ANR	6672558	CastTarget	FSERROR		6671876	0					
ANR	6672559	Identifier	bpreverr1		6671876	1					
ANR	6672560	ExpressionStatement	errorptr [ 2 ] = ( FSERROR ) bpreverr2	1086:4:40807:40840	6671876	9	True				
ANR	6672561	AssignmentExpression	errorptr [ 2 ] = ( FSERROR ) bpreverr2		6671876	0		=			
ANR	6672562	ArrayIndexing	errorptr [ 2 ]		6671876	0					
ANR	6672563	Identifier	errorptr		6671876	0					
ANR	6672564	PrimaryExpression	2		6671876	1					
ANR	6672565	CastExpression	( FSERROR ) bpreverr2		6671876	1					
ANR	6672566	CastTarget	FSERROR		6671876	0					
ANR	6672567	Identifier	bpreverr2		6671876	1					
ANR	6672568	Identifier	pass2_fs_dither		6671876	1					
ANR	6672569	ParameterList	"j_decompress_ptr cinfo , JSAMPARRAY input_buf , JSAMPARRAY output_buf , int num_rows"		6671876	2					
ANR	6672570	Parameter	j_decompress_ptr cinfo	950:17:34926:34947	6671876	0	True				
ANR	6672571	ParameterType	j_decompress_ptr		6671876	0					
ANR	6672572	Identifier	cinfo		6671876	1					
ANR	6672573	Parameter	JSAMPARRAY input_buf	951:3:34953:34972	6671876	1	True				
ANR	6672574	ParameterType	JSAMPARRAY		6671876	0					
ANR	6672575	Identifier	input_buf		6671876	1					
ANR	6672576	Parameter	JSAMPARRAY output_buf	951:25:34975:34995	6671876	2	True				
ANR	6672577	ParameterType	JSAMPARRAY		6671876	0					
ANR	6672578	Identifier	output_buf		6671876	1					
ANR	6672579	Parameter	int num_rows	951:48:34998:35009	6671876	3	True				
ANR	6672580	ParameterType	int		6671876	0					
ANR	6672581	Identifier	num_rows		6671876	1					
ANR	6672582	CFGEntryNode	ENTRY		6671876		True				
ANR	6672583	CFGExitNode	EXIT		6671876		True				
ANR	6672584	Symbol	col		6671876						
ANR	6672585	Symbol	RIGHT_SHIFT		6671876						
ANR	6672586	Symbol	* row		6671876						
ANR	6672587	Symbol	* pixcode		6671876						
ANR	6672588	Symbol	delta		6671876						
ANR	6672589	Symbol	* * cur0		6671876						
ANR	6672590	Symbol	* cquantize		6671876						
ANR	6672591	Symbol	dir		6671876						
ANR	6672592	Symbol	* C1_SHIFT		6671876						
ANR	6672593	Symbol	cquantize -> histogram		6671876						
ANR	6672594	Symbol	* colormap0		6671876						
ANR	6672595	Symbol	* colormap2		6671876						
ANR	6672596	Symbol	* colormap1		6671876						
ANR	6672597	Symbol	error_limit		6671876						
ANR	6672598	Symbol	cquantize -> fserrors		6671876						
ANR	6672599	Symbol	num_rows		6671876						
ANR	6672600	Symbol	C0_SHIFT		6671876						
ANR	6672601	Symbol	* cinfo		6671876						
ANR	6672602	Symbol	output_buf		6671876						
ANR	6672603	Symbol	* C0_SHIFT		6671876						
ANR	6672604	Symbol	colormap2		6671876						
ANR	6672605	Symbol	colormap1		6671876						
ANR	6672606	Symbol	cinfo -> colormap		6671876						
ANR	6672607	Symbol	TRUE		6671876						
ANR	6672608	Symbol	colormap0		6671876						
ANR	6672609	Symbol	histogram		6671876						
ANR	6672610	Symbol	cinfo		6671876						
ANR	6672611	Symbol	* cur2		6671876						
ANR	6672612	Symbol	* range_limit		6671876						
ANR	6672613	Symbol	* output_buf		6671876						
ANR	6672614	Symbol	* cur1		6671876						
ANR	6672615	Symbol	* cur0		6671876						
ANR	6672616	Symbol	bnexterr		6671876						
ANR	6672617	Symbol	pixcode		6671876						
ANR	6672618	Symbol	input_buf		6671876						
ANR	6672619	Symbol	* * cinfo		6671876						
ANR	6672620	Symbol	cinfo -> sample_range_limit		6671876						
ANR	6672621	Symbol	* * histogram		6671876						
ANR	6672622	Symbol	bpreverr0		6671876						
ANR	6672623	Symbol	C2_SHIFT		6671876						
ANR	6672624	Symbol	bpreverr1		6671876						
ANR	6672625	Symbol	bpreverr2		6671876						
ANR	6672626	Symbol	cquantize -> error_limiter		6671876						
ANR	6672627	Symbol	* error_limit		6671876						
ANR	6672628	Symbol	* cachep		6671876						
ANR	6672629	Symbol	cquantize		6671876						
ANR	6672630	Symbol	belowerr0		6671876						
ANR	6672631	Symbol	* cinfo -> colormap		6671876						
ANR	6672632	Symbol	belowerr1		6671876						
ANR	6672633	Symbol	cinfo -> output_width		6671876						
ANR	6672634	Symbol	* errorptr		6671876						
ANR	6672635	Symbol	belowerr2		6671876						
ANR	6672636	Symbol	errorptr		6671876						
ANR	6672637	Symbol	inptr		6671876						
ANR	6672638	Symbol	cachep		6671876						
ANR	6672639	Symbol	row		6671876						
ANR	6672640	Symbol	cur2		6671876						
ANR	6672641	Symbol	cur0		6671876						
ANR	6672642	Symbol	cur1		6671876						
ANR	6672643	Symbol	* outptr		6671876						
ANR	6672644	Symbol	* dir3		6671876						
ANR	6672645	Symbol	* * C0_SHIFT		6671876						
ANR	6672646	Symbol	GETJSAMPLE		6671876						
ANR	6672647	Symbol	dir3		6671876						
ANR	6672648	Symbol	* histogram		6671876						
ANR	6672649	Symbol	* inptr		6671876						
ANR	6672650	Symbol	outptr		6671876						
ANR	6672651	Symbol	cinfo -> cquantize		6671876						
ANR	6672652	Symbol	width		6671876						
ANR	6672653	Symbol	range_limit		6671876						
ANR	6672654	Symbol	cquantize -> on_odd_row		6671876						
ANR	6672655	Symbol	FALSE		6671876						
ANR	6672656	Symbol	* input_buf		6671876						
ANR	6672657	Symbol	C1_SHIFT		6671876						
ANR	6672658	Function	init_error_limit	1109:0:41864:42780							
ANR	6672659	FunctionDef	init_error_limit (j_decompress_ptr cinfo)		6672658	0					
ANR	6672660	CompoundStatement		1111:0:41957:42780	6672658	0					
ANR	6672661	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1112:2:41961:42025	6672658	0	True				
ANR	6672662	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672658	0					
ANR	6672663	IdentifierDeclType	my_cquantize_ptr		6672658	0					
ANR	6672664	Identifier	cquantize		6672658	1					
ANR	6672665	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672658	2		=			
ANR	6672666	Identifier	cquantize		6672658	0					
ANR	6672667	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6672658	1					
ANR	6672668	CastTarget	my_cquantize_ptr		6672658	0					
ANR	6672669	PtrMemberAccess	cinfo -> cquantize		6672658	1					
ANR	6672670	Identifier	cinfo		6672658	0					
ANR	6672671	Identifier	cquantize		6672658	1					
ANR	6672672	IdentifierDeclStatement	int * table ;	1113:2:42029:42040	6672658	1	True				
ANR	6672673	IdentifierDecl	* table		6672658	0					
ANR	6672674	IdentifierDeclType	int *		6672658	0					
ANR	6672675	Identifier	table		6672658	1					
ANR	6672676	IdentifierDeclStatement	"int in , out ;"	1114:2:42044:42055	6672658	2	True				
ANR	6672677	IdentifierDecl	in		6672658	0					
ANR	6672678	IdentifierDeclType	int		6672658	0					
ANR	6672679	Identifier	in		6672658	1					
ANR	6672680	IdentifierDecl	out		6672658	1					
ANR	6672681	IdentifierDeclType	int		6672658	0					
ANR	6672682	Identifier	out		6672658	1					
ANR	6672683	ExpressionStatement	"table = ( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"	1116:2:42060:42174	6672658	3	True				
ANR	6672684	AssignmentExpression	"table = ( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6672658	0		=			
ANR	6672685	Identifier	table		6672658	0					
ANR	6672686	CastExpression	"( int * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6672658	1					
ANR	6672687	CastTarget	int *		6672658	0					
ANR	6672688	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int ) )"		6672658	1					
ANR	6672689	Callee	* cinfo -> mem -> alloc_small		6672658	0					
ANR	6672690	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6672658	0					
ANR	6672691	UnaryOperator	*		6672658	0					
ANR	6672692	PtrMemberAccess	cinfo -> mem -> alloc_small		6672658	1					
ANR	6672693	PtrMemberAccess	cinfo -> mem		6672658	0					
ANR	6672694	Identifier	cinfo		6672658	0					
ANR	6672695	Identifier	mem		6672658	1					
ANR	6672696	Identifier	alloc_small		6672658	1					
ANR	6672697	ArgumentList	( j_common_ptr ) cinfo		6672658	1					
ANR	6672698	Argument	( j_common_ptr ) cinfo		6672658	0					
ANR	6672699	CastExpression	( j_common_ptr ) cinfo		6672658	0					
ANR	6672700	CastTarget	j_common_ptr		6672658	0					
ANR	6672701	Identifier	cinfo		6672658	1					
ANR	6672702	Argument	JPOOL_IMAGE		6672658	1					
ANR	6672703	Identifier	JPOOL_IMAGE		6672658	0					
ANR	6672704	Argument	( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int )		6672658	2					
ANR	6672705	MultiplicativeExpression	( MAXJSAMPLE * 2 + 1 ) * SIZEOF ( int )		6672658	0		*			
ANR	6672706	AdditiveExpression	MAXJSAMPLE * 2 + 1		6672658	0		+			
ANR	6672707	MultiplicativeExpression	MAXJSAMPLE * 2		6672658	0		*			
ANR	6672708	Identifier	MAXJSAMPLE		6672658	0					
ANR	6672709	PrimaryExpression	2		6672658	1					
ANR	6672710	PrimaryExpression	1		6672658	1					
ANR	6672711	CallExpression	SIZEOF ( int )		6672658	1					
ANR	6672712	Callee	SIZEOF		6672658	0					
ANR	6672713	Identifier	SIZEOF		6672658	0					
ANR	6672714	ArgumentList	int		6672658	1					
ANR	6672715	Argument	int		6672658	0					
ANR	6672716	Identifier	int		6672658	0					
ANR	6672717	ExpressionStatement	table += MAXJSAMPLE	1118:2:42178:42197	6672658	4	True				
ANR	6672718	AssignmentExpression	table += MAXJSAMPLE		6672658	0		+=			
ANR	6672719	Identifier	table		6672658	0					
ANR	6672720	Identifier	MAXJSAMPLE		6672658	1					
ANR	6672721	ExpressionStatement	cquantize -> error_limiter = table	1119:2:42248:42280	6672658	5	True				
ANR	6672722	AssignmentExpression	cquantize -> error_limiter = table		6672658	0		=			
ANR	6672723	PtrMemberAccess	cquantize -> error_limiter		6672658	0					
ANR	6672724	Identifier	cquantize		6672658	0					
ANR	6672725	Identifier	error_limiter		6672658	1					
ANR	6672726	Identifier	table		6672658	1					
ANR	6672727	Statement	define	1121:1:42284:42289	6672658	6	True				
ANR	6672728	Statement	STEPSIZE	1121:8:42291:42298	6672658	7	True				
ANR	6672729	Statement	(	1121:17:42300:42300	6672658	8	True				
ANR	6672730	Statement	(	1121:18:42301:42301	6672658	9	True				
ANR	6672731	Statement	MAXJSAMPLE	1121:19:42302:42311	6672658	10	True				
ANR	6672732	Statement	+	1121:29:42312:42312	6672658	11	True				
ANR	6672733	Statement	1	1121:30:42313:42313	6672658	12	True				
ANR	6672734	Statement	)	1121:31:42314:42314	6672658	13	True				
ANR	6672735	Statement	/	1121:32:42315:42315	6672658	14	True				
ANR	6672736	Statement	16	1121:33:42316:42317	6672658	15	True				
ANR	6672737	Statement	)	1121:35:42318:42318	6672658	16	True				
ANR	6672738	ExpressionStatement	out = 0	1123:2:42368:42375	6672658	17	True				
ANR	6672739	AssignmentExpression	out = 0		6672658	0		=			
ANR	6672740	Identifier	out		6672658	0					
ANR	6672741	PrimaryExpression	0		6672658	1					
ANR	6672742	ForStatement	"for ( in = 0 ; in < STEPSIZE ; in ++ , out ++ )"		6672658	18					
ANR	6672743	ForInit	in = 0 ;	1124:7:42384:42390	6672658	0	True				
ANR	6672744	AssignmentExpression	in = 0		6672658	0		=			
ANR	6672745	Identifier	in		6672658	0					
ANR	6672746	PrimaryExpression	0		6672658	1					
ANR	6672747	Condition	in < STEPSIZE	1124:15:42392:42404	6672658	1	True				
ANR	6672748	RelationalExpression	in < STEPSIZE		6672658	0		<			
ANR	6672749	Identifier	in		6672658	0					
ANR	6672750	Identifier	STEPSIZE		6672658	1					
ANR	6672751	Expression	"in ++ , out ++"	1124:30:42407:42417	6672658	2	True				
ANR	6672752	PostIncDecOperationExpression	in ++		6672658	0					
ANR	6672753	Identifier	in		6672658	0					
ANR	6672754	IncDec	++		6672658	1					
ANR	6672755	PostIncDecOperationExpression	out ++		6672658	1					
ANR	6672756	Identifier	out		6672658	0					
ANR	6672757	IncDec	++		6672658	1					
ANR	6672758	CompoundStatement		14:43:462:462	6672658	3					
ANR	6672759	ExpressionStatement	table [ in ] = out	1125:4:42426:42441	6672658	0	True				
ANR	6672760	AssignmentExpression	table [ in ] = out		6672658	0		=			
ANR	6672761	ArrayIndexing	table [ in ]		6672658	0					
ANR	6672762	Identifier	table		6672658	0					
ANR	6672763	Identifier	in		6672658	1					
ANR	6672764	Identifier	out		6672658	1					
ANR	6672765	ExpressionStatement	table [ - in ] = - out	1125:21:42443:42460	6672658	1	True				
ANR	6672766	AssignmentExpression	table [ - in ] = - out		6672658	0		=			
ANR	6672767	ArrayIndexing	table [ - in ]		6672658	0					
ANR	6672768	Identifier	table		6672658	0					
ANR	6672769	UnaryOperationExpression	- in		6672658	1					
ANR	6672770	UnaryOperator	-		6672658	0					
ANR	6672771	Identifier	in		6672658	1					
ANR	6672772	UnaryOperationExpression	- out		6672658	1					
ANR	6672773	UnaryOperator	-		6672658	0					
ANR	6672774	Identifier	out		6672658	1					
ANR	6672775	ForStatement	"for ( ; in < STEPSIZE * 3 ; in ++ , out += ( in & 1 ) ? 0 : 1 )"		6672658	19					
ANR	6672776	Condition	in < STEPSIZE * 3	1128:9:42523:42537	6672658	0	True				
ANR	6672777	RelationalExpression	in < STEPSIZE * 3		6672658	0		<			
ANR	6672778	Identifier	in		6672658	0					
ANR	6672779	MultiplicativeExpression	STEPSIZE * 3		6672658	1		*			
ANR	6672780	Identifier	STEPSIZE		6672658	0					
ANR	6672781	PrimaryExpression	3		6672658	1					
ANR	6672782	Expression	"in ++ , out += ( in & 1 ) ? 0 : 1"	1128:26:42540:42566	6672658	1	True				
ANR	6672783	PostIncDecOperationExpression	in ++		6672658	0					
ANR	6672784	Identifier	in		6672658	0					
ANR	6672785	IncDec	++		6672658	1					
ANR	6672786	AssignmentExpression	out += ( in & 1 ) ? 0 : 1		6672658	1		+=			
ANR	6672787	Identifier	out		6672658	0					
ANR	6672788	ConditionalExpression	( in & 1 ) ? 0 : 1		6672658	1					
ANR	6672789	Condition	in & 1		6672658	0					
ANR	6672790	BitAndExpression	in & 1		6672658	0		&			
ANR	6672791	Identifier	in		6672658	0					
ANR	6672792	PrimaryExpression	1		6672658	1					
ANR	6672793	PrimaryExpression	0		6672658	1					
ANR	6672794	PrimaryExpression	1		6672658	2					
ANR	6672795	CompoundStatement		18:55:611:611	6672658	2					
ANR	6672796	ExpressionStatement	table [ in ] = out	1129:4:42575:42590	6672658	0	True				
ANR	6672797	AssignmentExpression	table [ in ] = out		6672658	0		=			
ANR	6672798	ArrayIndexing	table [ in ]		6672658	0					
ANR	6672799	Identifier	table		6672658	0					
ANR	6672800	Identifier	in		6672658	1					
ANR	6672801	Identifier	out		6672658	1					
ANR	6672802	ExpressionStatement	table [ - in ] = - out	1129:21:42592:42609	6672658	1	True				
ANR	6672803	AssignmentExpression	table [ - in ] = - out		6672658	0		=			
ANR	6672804	ArrayIndexing	table [ - in ]		6672658	0					
ANR	6672805	Identifier	table		6672658	0					
ANR	6672806	UnaryOperationExpression	- in		6672658	1					
ANR	6672807	UnaryOperator	-		6672658	0					
ANR	6672808	Identifier	in		6672658	1					
ANR	6672809	UnaryOperationExpression	- out		6672658	1					
ANR	6672810	UnaryOperator	-		6672658	0					
ANR	6672811	Identifier	out		6672658	1					
ANR	6672812	ForStatement	for ( ; in <= MAXJSAMPLE ; in ++ )		6672658	20					
ANR	6672813	Condition	in <= MAXJSAMPLE	1132:9:42694:42709	6672658	0	True				
ANR	6672814	RelationalExpression	in <= MAXJSAMPLE		6672658	0		<=			
ANR	6672815	Identifier	in		6672658	0					
ANR	6672816	Identifier	MAXJSAMPLE		6672658	1					
ANR	6672817	PostIncDecOperationExpression	in ++	1132:27:42712:42715	6672658	1	True				
ANR	6672818	Identifier	in		6672658	0					
ANR	6672819	IncDec	++		6672658	1					
ANR	6672820	CompoundStatement		22:33:760:760	6672658	2					
ANR	6672821	ExpressionStatement	table [ in ] = out	1133:4:42724:42739	6672658	0	True				
ANR	6672822	AssignmentExpression	table [ in ] = out		6672658	0		=			
ANR	6672823	ArrayIndexing	table [ in ]		6672658	0					
ANR	6672824	Identifier	table		6672658	0					
ANR	6672825	Identifier	in		6672658	1					
ANR	6672826	Identifier	out		6672658	1					
ANR	6672827	ExpressionStatement	table [ - in ] = - out	1133:21:42741:42758	6672658	1	True				
ANR	6672828	AssignmentExpression	table [ - in ] = - out		6672658	0		=			
ANR	6672829	ArrayIndexing	table [ - in ]		6672658	0					
ANR	6672830	Identifier	table		6672658	0					
ANR	6672831	UnaryOperationExpression	- in		6672658	1					
ANR	6672832	UnaryOperator	-		6672658	0					
ANR	6672833	Identifier	in		6672658	1					
ANR	6672834	UnaryOperationExpression	- out		6672658	1					
ANR	6672835	UnaryOperator	-		6672658	0					
ANR	6672836	Identifier	out		6672658	1					
ANR	6672837	Statement	undef	1135:1:42765:42769	6672658	21	True				
ANR	6672838	Statement	STEPSIZE	1135:7:42771:42778	6672658	22	True				
ANR	6672839	Identifier	init_error_limit		6672658	1					
ANR	6672840	ParameterList	j_decompress_ptr cinfo		6672658	2					
ANR	6672841	Parameter	j_decompress_ptr cinfo	1109:18:41882:41903	6672658	0	True				
ANR	6672842	ParameterType	j_decompress_ptr		6672658	0					
ANR	6672843	Identifier	cinfo		6672658	1					
ANR	6672844	CFGEntryNode	ENTRY		6672658		True				
ANR	6672845	CFGExitNode	EXIT		6672658		True				
ANR	6672846	Symbol	* * cinfo		6672658						
ANR	6672847	Symbol	* * cinfo -> mem		6672658						
ANR	6672848	Symbol	in		6672658						
ANR	6672849	Symbol	cinfo -> mem -> alloc_small		6672658						
ANR	6672850	Symbol	SIZEOF		6672658						
ANR	6672851	Symbol	* in		6672658						
ANR	6672852	Symbol	cquantize -> error_limiter		6672658						
ANR	6672853	Symbol	* table		6672658						
ANR	6672854	Symbol	JPOOL_IMAGE		6672658						
ANR	6672855	Symbol	cquantize		6672658						
ANR	6672856	Symbol	* cquantize		6672658						
ANR	6672857	Symbol	int		6672658						
ANR	6672858	Symbol	out		6672658						
ANR	6672859	Symbol	* cinfo -> mem		6672658						
ANR	6672860	Symbol	cinfo -> cquantize		6672658						
ANR	6672861	Symbol	STEPSIZE		6672658						
ANR	6672862	Symbol	cinfo		6672658						
ANR	6672863	Symbol	cinfo -> mem		6672658						
ANR	6672864	Symbol	MAXJSAMPLE		6672658						
ANR	6672865	Symbol	* * * cinfo		6672658						
ANR	6672866	Symbol	* cinfo -> mem -> alloc_small		6672658						
ANR	6672867	Symbol	* cinfo		6672658						
ANR	6672868	Symbol	table		6672658						
ANR	6672869	Function	finish_pass1	1144:0:42846:43200							
ANR	6672870	FunctionDef	finish_pass1 (j_decompress_ptr cinfo)		6672869	0					
ANR	6672871	CompoundStatement		1145:0:42884:43200	6672869	0					
ANR	6672872	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1146:2:42888:42952	6672869	0	True				
ANR	6672873	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672869	0					
ANR	6672874	IdentifierDeclType	my_cquantize_ptr		6672869	0					
ANR	6672875	Identifier	cquantize		6672869	1					
ANR	6672876	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672869	2		=			
ANR	6672877	Identifier	cquantize		6672869	0					
ANR	6672878	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6672869	1					
ANR	6672879	CastTarget	my_cquantize_ptr		6672869	0					
ANR	6672880	PtrMemberAccess	cinfo -> cquantize		6672869	1					
ANR	6672881	Identifier	cinfo		6672869	0					
ANR	6672882	Identifier	cquantize		6672869	1					
ANR	6672883	ExpressionStatement	cinfo -> colormap = cquantize -> sv_colormap	1149:2:43026:43066	6672869	1	True				
ANR	6672884	AssignmentExpression	cinfo -> colormap = cquantize -> sv_colormap		6672869	0		=			
ANR	6672885	PtrMemberAccess	cinfo -> colormap		6672869	0					
ANR	6672886	Identifier	cinfo		6672869	0					
ANR	6672887	Identifier	colormap		6672869	1					
ANR	6672888	PtrMemberAccess	cquantize -> sv_colormap		6672869	1					
ANR	6672889	Identifier	cquantize		6672869	0					
ANR	6672890	Identifier	sv_colormap		6672869	1					
ANR	6672891	ExpressionStatement	"select_colors ( cinfo , cquantize -> desired )"	1150:2:43070:43110	6672869	2	True				
ANR	6672892	CallExpression	"select_colors ( cinfo , cquantize -> desired )"		6672869	0					
ANR	6672893	Callee	select_colors		6672869	0					
ANR	6672894	Identifier	select_colors		6672869	0					
ANR	6672895	ArgumentList	cinfo		6672869	1					
ANR	6672896	Argument	cinfo		6672869	0					
ANR	6672897	Identifier	cinfo		6672869	0					
ANR	6672898	Argument	cquantize -> desired		6672869	1					
ANR	6672899	PtrMemberAccess	cquantize -> desired		6672869	0					
ANR	6672900	Identifier	cquantize		6672869	0					
ANR	6672901	Identifier	desired		6672869	1					
ANR	6672902	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1152:2:43168:43198	6672869	3	True				
ANR	6672903	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6672869	0		=			
ANR	6672904	PtrMemberAccess	cquantize -> needs_zeroed		6672869	0					
ANR	6672905	Identifier	cquantize		6672869	0					
ANR	6672906	Identifier	needs_zeroed		6672869	1					
ANR	6672907	Identifier	TRUE		6672869	1					
ANR	6672908	Identifier	finish_pass1		6672869	1					
ANR	6672909	ParameterList	j_decompress_ptr cinfo		6672869	2					
ANR	6672910	Parameter	j_decompress_ptr cinfo	1144:14:42860:42881	6672869	0	True				
ANR	6672911	ParameterType	j_decompress_ptr		6672869	0					
ANR	6672912	Identifier	cinfo		6672869	1					
ANR	6672913	CFGEntryNode	ENTRY		6672869		True				
ANR	6672914	CFGExitNode	EXIT		6672869		True				
ANR	6672915	Symbol	cinfo -> cquantize		6672869						
ANR	6672916	Symbol	cquantize -> sv_colormap		6672869						
ANR	6672917	Symbol	cquantize -> desired		6672869						
ANR	6672918	Symbol	cinfo		6672869						
ANR	6672919	Symbol	cinfo -> colormap		6672869						
ANR	6672920	Symbol	cquantize -> needs_zeroed		6672869						
ANR	6672921	Symbol	TRUE		6672869						
ANR	6672922	Symbol	cquantize		6672869						
ANR	6672923	Symbol	* cquantize		6672869						
ANR	6672924	Symbol	* cinfo		6672869						
ANR	6672925	Function	finish_pass2	1157:0:43220:43276							
ANR	6672926	FunctionDef	finish_pass2 (j_decompress_ptr cinfo)		6672925	0					
ANR	6672927	CompoundStatement		1158:0:43258:43276	6672925	0					
ANR	6672928	Identifier	finish_pass2		6672925	1					
ANR	6672929	ParameterList	j_decompress_ptr cinfo		6672925	2					
ANR	6672930	Parameter	j_decompress_ptr cinfo	1157:14:43234:43255	6672925	0	True				
ANR	6672931	ParameterType	j_decompress_ptr		6672925	0					
ANR	6672932	Identifier	cinfo		6672925	1					
ANR	6672933	CFGEntryNode	ENTRY		6672925		True				
ANR	6672934	CFGExitNode	EXIT		6672925		True				
ANR	6672935	Symbol	cinfo		6672925						
ANR	6672936	Function	start_pass_2_quant	1168:0:43344:45369							
ANR	6672937	FunctionDef	"start_pass_2_quant (j_decompress_ptr cinfo , boolean is_pre_scan)"		6672936	0					
ANR	6672938	CompoundStatement		1169:0:43409:45369	6672936	0					
ANR	6672939	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1170:2:43413:43477	6672936	0	True				
ANR	6672940	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672936	0					
ANR	6672941	IdentifierDeclType	my_cquantize_ptr		6672936	0					
ANR	6672942	Identifier	cquantize		6672936	1					
ANR	6672943	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6672936	2		=			
ANR	6672944	Identifier	cquantize		6672936	0					
ANR	6672945	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6672936	1					
ANR	6672946	CastTarget	my_cquantize_ptr		6672936	0					
ANR	6672947	PtrMemberAccess	cinfo -> cquantize		6672936	1					
ANR	6672948	Identifier	cinfo		6672936	0					
ANR	6672949	Identifier	cquantize		6672936	1					
ANR	6672950	IdentifierDeclStatement	hist3d histogram = cquantize -> histogram ;	1171:2:43481:43520	6672936	1	True				
ANR	6672951	IdentifierDecl	histogram = cquantize -> histogram		6672936	0					
ANR	6672952	IdentifierDeclType	hist3d		6672936	0					
ANR	6672953	Identifier	histogram		6672936	1					
ANR	6672954	AssignmentExpression	histogram = cquantize -> histogram		6672936	2		=			
ANR	6672955	Identifier	histogram		6672936	0					
ANR	6672956	PtrMemberAccess	cquantize -> histogram		6672936	1					
ANR	6672957	Identifier	cquantize		6672936	0					
ANR	6672958	Identifier	histogram		6672936	1					
ANR	6672959	IdentifierDeclStatement	int i ;	1172:2:43524:43529	6672936	2	True				
ANR	6672960	IdentifierDecl	i		6672936	0					
ANR	6672961	IdentifierDeclType	int		6672936	0					
ANR	6672962	Identifier	i		6672936	1					
ANR	6672963	IfStatement	if ( cinfo -> dither_mode != JDITHER_NONE )		6672936	3					
ANR	6672964	Condition	cinfo -> dither_mode != JDITHER_NONE	1176:6:43650:43683	6672936	0	True				
ANR	6672965	EqualityExpression	cinfo -> dither_mode != JDITHER_NONE		6672936	0		!=			
ANR	6672966	PtrMemberAccess	cinfo -> dither_mode		6672936	0					
ANR	6672967	Identifier	cinfo		6672936	0					
ANR	6672968	Identifier	dither_mode		6672936	1					
ANR	6672969	Identifier	JDITHER_NONE		6672936	1					
ANR	6672970	ExpressionStatement	cinfo -> dither_mode = JDITHER_FS	1177:4:43690:43721	6672936	1	True				
ANR	6672971	AssignmentExpression	cinfo -> dither_mode = JDITHER_FS		6672936	0		=			
ANR	6672972	PtrMemberAccess	cinfo -> dither_mode		6672936	0					
ANR	6672973	Identifier	cinfo		6672936	0					
ANR	6672974	Identifier	dither_mode		6672936	1					
ANR	6672975	Identifier	JDITHER_FS		6672936	1					
ANR	6672976	IfStatement	if ( is_pre_scan )		6672936	4					
ANR	6672977	Condition	is_pre_scan	1179:6:43730:43740	6672936	0	True				
ANR	6672978	Identifier	is_pre_scan		6672936	0					
ANR	6672979	CompoundStatement		11:19:333:333	6672936	1					
ANR	6672980	ExpressionStatement	cquantize -> pub . color_quantize = prescan_quantize	1181:4:43782:43830	6672936	0	True				
ANR	6672981	AssignmentExpression	cquantize -> pub . color_quantize = prescan_quantize		6672936	0		=			
ANR	6672982	MemberAccess	cquantize -> pub . color_quantize		6672936	0					
ANR	6672983	PtrMemberAccess	cquantize -> pub		6672936	0					
ANR	6672984	Identifier	cquantize		6672936	0					
ANR	6672985	Identifier	pub		6672936	1					
ANR	6672986	Identifier	color_quantize		6672936	1					
ANR	6672987	Identifier	prescan_quantize		6672936	1					
ANR	6672988	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass1	1182:4:43836:43877	6672936	1	True				
ANR	6672989	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass1		6672936	0		=			
ANR	6672990	MemberAccess	cquantize -> pub . finish_pass		6672936	0					
ANR	6672991	PtrMemberAccess	cquantize -> pub		6672936	0					
ANR	6672992	Identifier	cquantize		6672936	0					
ANR	6672993	Identifier	pub		6672936	1					
ANR	6672994	Identifier	finish_pass		6672936	1					
ANR	6672995	Identifier	finish_pass1		6672936	1					
ANR	6672996	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1183:4:43883:43913	6672936	2	True				
ANR	6672997	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6672936	0		=			
ANR	6672998	PtrMemberAccess	cquantize -> needs_zeroed		6672936	0					
ANR	6672999	Identifier	cquantize		6672936	0					
ANR	6673000	Identifier	needs_zeroed		6672936	1					
ANR	6673001	Identifier	TRUE		6672936	1					
ANR	6673002	ElseStatement	else		6672936	0					
ANR	6673003	CompoundStatement		16:9:542:542	6672936	0					
ANR	6673004	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6672936	0					
ANR	6673005	Condition	cinfo -> dither_mode == JDITHER_FS	1186:8:43995:44026	6672936	0	True				
ANR	6673006	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6672936	0		==			
ANR	6673007	PtrMemberAccess	cinfo -> dither_mode		6672936	0					
ANR	6673008	Identifier	cinfo		6672936	0					
ANR	6673009	Identifier	dither_mode		6672936	1					
ANR	6673010	Identifier	JDITHER_FS		6672936	1					
ANR	6673011	ExpressionStatement	cquantize -> pub . color_quantize = pass2_fs_dither	1187:6:44035:44082	6672936	1	True				
ANR	6673012	AssignmentExpression	cquantize -> pub . color_quantize = pass2_fs_dither		6672936	0		=			
ANR	6673013	MemberAccess	cquantize -> pub . color_quantize		6672936	0					
ANR	6673014	PtrMemberAccess	cquantize -> pub		6672936	0					
ANR	6673015	Identifier	cquantize		6672936	0					
ANR	6673016	Identifier	pub		6672936	1					
ANR	6673017	Identifier	color_quantize		6672936	1					
ANR	6673018	Identifier	pass2_fs_dither		6672936	1					
ANR	6673019	ElseStatement	else		6672936	0					
ANR	6673020	ExpressionStatement	cquantize -> pub . color_quantize = pass2_no_dither	1189:6:44099:44146	6672936	0	True				
ANR	6673021	AssignmentExpression	cquantize -> pub . color_quantize = pass2_no_dither		6672936	0		=			
ANR	6673022	MemberAccess	cquantize -> pub . color_quantize		6672936	0					
ANR	6673023	PtrMemberAccess	cquantize -> pub		6672936	0					
ANR	6673024	Identifier	cquantize		6672936	0					
ANR	6673025	Identifier	pub		6672936	1					
ANR	6673026	Identifier	color_quantize		6672936	1					
ANR	6673027	Identifier	pass2_no_dither		6672936	1					
ANR	6673028	ExpressionStatement	cquantize -> pub . finish_pass = finish_pass2	1190:4:44152:44193	6672936	1	True				
ANR	6673029	AssignmentExpression	cquantize -> pub . finish_pass = finish_pass2		6672936	0		=			
ANR	6673030	MemberAccess	cquantize -> pub . finish_pass		6672936	0					
ANR	6673031	PtrMemberAccess	cquantize -> pub		6672936	0					
ANR	6673032	Identifier	cquantize		6672936	0					
ANR	6673033	Identifier	pub		6672936	1					
ANR	6673034	Identifier	finish_pass		6672936	1					
ANR	6673035	Identifier	finish_pass2		6672936	1					
ANR	6673036	ExpressionStatement	i = cinfo -> actual_number_of_colors	1193:4:44246:44280	6672936	2	True				
ANR	6673037	AssignmentExpression	i = cinfo -> actual_number_of_colors		6672936	0		=			
ANR	6673038	Identifier	i		6672936	0					
ANR	6673039	PtrMemberAccess	cinfo -> actual_number_of_colors		6672936	1					
ANR	6673040	Identifier	cinfo		6672936	0					
ANR	6673041	Identifier	actual_number_of_colors		6672936	1					
ANR	6673042	IfStatement	if ( i < 1 )		6672936	3					
ANR	6673043	Condition	i < 1	1194:8:44290:44294	6672936	0	True				
ANR	6673044	RelationalExpression	i < 1		6672936	0		<			
ANR	6673045	Identifier	i		6672936	0					
ANR	6673046	PrimaryExpression	1		6672936	1					
ANR	6673047	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"	1195:6:44303:44344	6672936	1	True				
ANR	6673048	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 1 )"		6672936	0					
ANR	6673049	Callee	ERREXIT1		6672936	0					
ANR	6673050	Identifier	ERREXIT1		6672936	0					
ANR	6673051	ArgumentList	cinfo		6672936	1					
ANR	6673052	Argument	cinfo		6672936	0					
ANR	6673053	Identifier	cinfo		6672936	0					
ANR	6673054	Argument	JERR_QUANT_FEW_COLORS		6672936	1					
ANR	6673055	Identifier	JERR_QUANT_FEW_COLORS		6672936	0					
ANR	6673056	Argument	1		6672936	2					
ANR	6673057	PrimaryExpression	1		6672936	0					
ANR	6673058	IfStatement	if ( i > MAXNUMCOLORS )		6672936	4					
ANR	6673059	Condition	i > MAXNUMCOLORS	1196:8:44354:44369	6672936	0	True				
ANR	6673060	RelationalExpression	i > MAXNUMCOLORS		6672936	0		>			
ANR	6673061	Identifier	i		6672936	0					
ANR	6673062	Identifier	MAXNUMCOLORS		6672936	1					
ANR	6673063	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"	1197:6:44378:44431	6672936	1	True				
ANR	6673064	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"		6672936	0					
ANR	6673065	Callee	ERREXIT1		6672936	0					
ANR	6673066	Identifier	ERREXIT1		6672936	0					
ANR	6673067	ArgumentList	cinfo		6672936	1					
ANR	6673068	Argument	cinfo		6672936	0					
ANR	6673069	Identifier	cinfo		6672936	0					
ANR	6673070	Argument	JERR_QUANT_MANY_COLORS		6672936	1					
ANR	6673071	Identifier	JERR_QUANT_MANY_COLORS		6672936	0					
ANR	6673072	Argument	MAXNUMCOLORS		6672936	2					
ANR	6673073	Identifier	MAXNUMCOLORS		6672936	0					
ANR	6673074	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6672936	5					
ANR	6673075	Condition	cinfo -> dither_mode == JDITHER_FS	1199:8:44442:44473	6672936	0	True				
ANR	6673076	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6672936	0		==			
ANR	6673077	PtrMemberAccess	cinfo -> dither_mode		6672936	0					
ANR	6673078	Identifier	cinfo		6672936	0					
ANR	6673079	Identifier	dither_mode		6672936	1					
ANR	6673080	Identifier	JDITHER_FS		6672936	1					
ANR	6673081	CompoundStatement		32:6:1074:1160	6672936	1					
ANR	6673082	IdentifierDeclStatement	size_t arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) ;	1200:6:44484:44570	6672936	0	True				
ANR	6673083	IdentifierDecl	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6672936	0					
ANR	6673084	IdentifierDeclType	size_t		6672936	0					
ANR	6673085	Identifier	arraysize		6672936	1					
ANR	6673086	AssignmentExpression	arraysize = ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6672936	2		=			
ANR	6673087	Identifier	arraysize		6672936	0					
ANR	6673088	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6672936	1					
ANR	6673089	CastTarget	size_t		6672936	0					
ANR	6673090	MultiplicativeExpression	( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) )		6672936	1		*			
ANR	6673091	AdditiveExpression	cinfo -> output_width + 2		6672936	0		+			
ANR	6673092	PtrMemberAccess	cinfo -> output_width		6672936	0					
ANR	6673093	Identifier	cinfo		6672936	0					
ANR	6673094	Identifier	output_width		6672936	1					
ANR	6673095	PrimaryExpression	2		6672936	1					
ANR	6673096	MultiplicativeExpression	3 * SIZEOF ( FSERROR )		6672936	1		*			
ANR	6673097	PrimaryExpression	3		6672936	0					
ANR	6673098	CallExpression	SIZEOF ( FSERROR )		6672936	1					
ANR	6673099	Callee	SIZEOF		6672936	0					
ANR	6673100	Identifier	SIZEOF		6672936	0					
ANR	6673101	ArgumentList	FSERROR		6672936	1					
ANR	6673102	Argument	FSERROR		6672936	0					
ANR	6673103	Identifier	FSERROR		6672936	0					
ANR	6673104	IfStatement	if ( cquantize -> fserrors == NULL )		6672936	1					
ANR	6673105	Condition	cquantize -> fserrors == NULL	1203:10:44651:44677	6672936	0	True				
ANR	6673106	EqualityExpression	cquantize -> fserrors == NULL		6672936	0		==			
ANR	6673107	PtrMemberAccess	cquantize -> fserrors		6672936	0					
ANR	6673108	Identifier	cquantize		6672936	0					
ANR	6673109	Identifier	fserrors		6672936	1					
ANR	6673110	Identifier	NULL		6672936	1					
ANR	6673111	ExpressionStatement	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"	1204:1:44681:44790	6672936	1	True				
ANR	6673112	AssignmentExpression	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6672936	0		=			
ANR	6673113	PtrMemberAccess	cquantize -> fserrors		6672936	0					
ANR	6673114	Identifier	cquantize		6672936	0					
ANR	6673115	Identifier	fserrors		6672936	1					
ANR	6673116	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6672936	1					
ANR	6673117	CastTarget	FSERRPTR		6672936	0					
ANR	6673118	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , arraysize )"		6672936	1					
ANR	6673119	Callee	* cinfo -> mem -> alloc_large		6672936	0					
ANR	6673120	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6672936	0					
ANR	6673121	UnaryOperator	*		6672936	0					
ANR	6673122	PtrMemberAccess	cinfo -> mem -> alloc_large		6672936	1					
ANR	6673123	PtrMemberAccess	cinfo -> mem		6672936	0					
ANR	6673124	Identifier	cinfo		6672936	0					
ANR	6673125	Identifier	mem		6672936	1					
ANR	6673126	Identifier	alloc_large		6672936	1					
ANR	6673127	ArgumentList	( j_common_ptr ) cinfo		6672936	1					
ANR	6673128	Argument	( j_common_ptr ) cinfo		6672936	0					
ANR	6673129	CastExpression	( j_common_ptr ) cinfo		6672936	0					
ANR	6673130	CastTarget	j_common_ptr		6672936	0					
ANR	6673131	Identifier	cinfo		6672936	1					
ANR	6673132	Argument	JPOOL_IMAGE		6672936	1					
ANR	6673133	Identifier	JPOOL_IMAGE		6672936	0					
ANR	6673134	Argument	arraysize		6672936	2					
ANR	6673135	Identifier	arraysize		6672936	0					
ANR	6673136	ExpressionStatement	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors , arraysize )"	1207:6:44852:44905	6672936	2	True				
ANR	6673137	CallExpression	"FMEMZERO ( ( void FAR * ) cquantize -> fserrors , arraysize )"		6672936	0					
ANR	6673138	Callee	FMEMZERO		6672936	0					
ANR	6673139	Identifier	FMEMZERO		6672936	0					
ANR	6673140	ArgumentList	( void FAR * ) cquantize -> fserrors		6672936	1					
ANR	6673141	Argument	( void FAR * ) cquantize -> fserrors		6672936	0					
ANR	6673142	CastExpression	( void FAR * ) cquantize -> fserrors		6672936	0					
ANR	6673143	CastTarget	void FAR *		6672936	0					
ANR	6673144	PtrMemberAccess	cquantize -> fserrors		6672936	1					
ANR	6673145	Identifier	cquantize		6672936	0					
ANR	6673146	Identifier	fserrors		6672936	1					
ANR	6673147	Argument	arraysize		6672936	1					
ANR	6673148	Identifier	arraysize		6672936	0					
ANR	6673149	IfStatement	if ( cquantize -> error_limiter == NULL )		6672936	3					
ANR	6673150	Condition	cquantize -> error_limiter == NULL	1209:10:44978:45009	6672936	0	True				
ANR	6673151	EqualityExpression	cquantize -> error_limiter == NULL		6672936	0		==			
ANR	6673152	PtrMemberAccess	cquantize -> error_limiter		6672936	0					
ANR	6673153	Identifier	cquantize		6672936	0					
ANR	6673154	Identifier	error_limiter		6672936	1					
ANR	6673155	Identifier	NULL		6672936	1					
ANR	6673156	ExpressionStatement	init_error_limit ( cinfo )	1210:1:45013:45036	6672936	1	True				
ANR	6673157	CallExpression	init_error_limit ( cinfo )		6672936	0					
ANR	6673158	Callee	init_error_limit		6672936	0					
ANR	6673159	Identifier	init_error_limit		6672936	0					
ANR	6673160	ArgumentList	cinfo		6672936	1					
ANR	6673161	Argument	cinfo		6672936	0					
ANR	6673162	Identifier	cinfo		6672936	0					
ANR	6673163	ExpressionStatement	cquantize -> on_odd_row = FALSE	1211:6:45044:45073	6672936	4	True				
ANR	6673164	AssignmentExpression	cquantize -> on_odd_row = FALSE		6672936	0		=			
ANR	6673165	PtrMemberAccess	cquantize -> on_odd_row		6672936	0					
ANR	6673166	Identifier	cquantize		6672936	0					
ANR	6673167	Identifier	on_odd_row		6672936	1					
ANR	6673168	Identifier	FALSE		6672936	1					
ANR	6673169	IfStatement	if ( cquantize -> needs_zeroed )		6672936	5					
ANR	6673170	Condition	cquantize -> needs_zeroed	1216:6:45154:45176	6672936	0	True				
ANR	6673171	PtrMemberAccess	cquantize -> needs_zeroed		6672936	0					
ANR	6673172	Identifier	cquantize		6672936	0					
ANR	6673173	Identifier	needs_zeroed		6672936	1					
ANR	6673174	CompoundStatement		48:31:1769:1769	6672936	1					
ANR	6673175	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		6672936	0					
ANR	6673176	ForInit	i = 0 ;	1217:9:45190:45195	6672936	0	True				
ANR	6673177	AssignmentExpression	i = 0		6672936	0		=			
ANR	6673178	Identifier	i		6672936	0					
ANR	6673179	PrimaryExpression	0		6672936	1					
ANR	6673180	Condition	i < HIST_C0_ELEMS	1217:16:45197:45213	6672936	1	True				
ANR	6673181	RelationalExpression	i < HIST_C0_ELEMS		6672936	0		<			
ANR	6673182	Identifier	i		6672936	0					
ANR	6673183	Identifier	HIST_C0_ELEMS		6672936	1					
ANR	6673184	PostIncDecOperationExpression	i ++	1217:35:45216:45218	6672936	2	True				
ANR	6673185	Identifier	i		6672936	0					
ANR	6673186	IncDec	++		6672936	1					
ANR	6673187	CompoundStatement		49:40:1811:1811	6672936	3					
ANR	6673188	ExpressionStatement	"FMEMZERO ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"	1218:6:45229:45320	6672936	0	True				
ANR	6673189	CallExpression	"FMEMZERO ( ( void FAR * ) histogram [ i ] , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6672936	0					
ANR	6673190	Callee	FMEMZERO		6672936	0					
ANR	6673191	Identifier	FMEMZERO		6672936	0					
ANR	6673192	ArgumentList	( void FAR * ) histogram [ i ]		6672936	1					
ANR	6673193	Argument	( void FAR * ) histogram [ i ]		6672936	0					
ANR	6673194	CastExpression	( void FAR * ) histogram [ i ]		6672936	0					
ANR	6673195	CastTarget	void FAR *		6672936	0					
ANR	6673196	ArrayIndexing	histogram [ i ]		6672936	1					
ANR	6673197	Identifier	histogram		6672936	0					
ANR	6673198	Identifier	i		6672936	1					
ANR	6673199	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6672936	1					
ANR	6673200	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6672936	0		*			
ANR	6673201	Identifier	HIST_C1_ELEMS		6672936	0					
ANR	6673202	MultiplicativeExpression	HIST_C2_ELEMS * SIZEOF ( histcell )		6672936	1		*			
ANR	6673203	Identifier	HIST_C2_ELEMS		6672936	0					
ANR	6673204	CallExpression	SIZEOF ( histcell )		6672936	1					
ANR	6673205	Callee	SIZEOF		6672936	0					
ANR	6673206	Identifier	SIZEOF		6672936	0					
ANR	6673207	ArgumentList	histcell		6672936	1					
ANR	6673208	Argument	histcell		6672936	0					
ANR	6673209	Identifier	histcell		6672936	0					
ANR	6673210	ExpressionStatement	cquantize -> needs_zeroed = FALSE	1221:4:45332:45363	6672936	1	True				
ANR	6673211	AssignmentExpression	cquantize -> needs_zeroed = FALSE		6672936	0		=			
ANR	6673212	PtrMemberAccess	cquantize -> needs_zeroed		6672936	0					
ANR	6673213	Identifier	cquantize		6672936	0					
ANR	6673214	Identifier	needs_zeroed		6672936	1					
ANR	6673215	Identifier	FALSE		6672936	1					
ANR	6673216	Identifier	start_pass_2_quant		6672936	1					
ANR	6673217	ParameterList	"j_decompress_ptr cinfo , boolean is_pre_scan"		6672936	2					
ANR	6673218	Parameter	j_decompress_ptr cinfo	1168:20:43364:43385	6672936	0	True				
ANR	6673219	ParameterType	j_decompress_ptr		6672936	0					
ANR	6673220	Identifier	cinfo		6672936	1					
ANR	6673221	Parameter	boolean is_pre_scan	1168:44:43388:43406	6672936	1	True				
ANR	6673222	ParameterType	boolean		6672936	0					
ANR	6673223	Identifier	is_pre_scan		6672936	1					
ANR	6673224	CFGEntryNode	ENTRY		6672936		True				
ANR	6673225	CFGExitNode	EXIT		6672936		True				
ANR	6673226	Symbol	JDITHER_FS		6672936						
ANR	6673227	Symbol	JDITHER_NONE		6672936						
ANR	6673228	Symbol	is_pre_scan		6672936						
ANR	6673229	Symbol	* cquantize		6672936						
ANR	6673230	Symbol	cquantize -> histogram		6672936						
ANR	6673231	Symbol	JERR_QUANT_MANY_COLORS		6672936						
ANR	6673232	Symbol	cquantize -> fserrors		6672936						
ANR	6673233	Symbol	cinfo -> mem -> alloc_large		6672936						
ANR	6673234	Symbol	* cinfo		6672936						
ANR	6673235	Symbol	NULL		6672936						
ANR	6673236	Symbol	TRUE		6672936						
ANR	6673237	Symbol	HIST_C2_ELEMS		6672936						
ANR	6673238	Symbol	histogram		6672936						
ANR	6673239	Symbol	cinfo -> dither_mode		6672936						
ANR	6673240	Symbol	FSERROR		6672936						
ANR	6673241	Symbol	cinfo -> actual_number_of_colors		6672936						
ANR	6673242	Symbol	histcell		6672936						
ANR	6673243	Symbol	cquantize -> pub . finish_pass		6672936						
ANR	6673244	Symbol	cinfo		6672936						
ANR	6673245	Symbol	* * * cinfo		6672936						
ANR	6673246	Symbol	pass2_fs_dither		6672936						
ANR	6673247	Symbol	* * cinfo		6672936						
ANR	6673248	Symbol	HIST_C1_ELEMS		6672936						
ANR	6673249	Symbol	cquantize -> pub		6672936						
ANR	6673250	Symbol	* cinfo -> mem -> alloc_large		6672936						
ANR	6673251	Symbol	arraysize		6672936						
ANR	6673252	Symbol	cquantize -> needs_zeroed		6672936						
ANR	6673253	Symbol	SIZEOF		6672936						
ANR	6673254	Symbol	cquantize -> error_limiter		6672936						
ANR	6673255	Symbol	cquantize		6672936						
ANR	6673256	Symbol	finish_pass2		6672936						
ANR	6673257	Symbol	finish_pass1		6672936						
ANR	6673258	Symbol	cinfo -> output_width		6672936						
ANR	6673259	Symbol	* cinfo -> mem		6672936						
ANR	6673260	Symbol	cinfo -> mem		6672936						
ANR	6673261	Symbol	JERR_QUANT_FEW_COLORS		6672936						
ANR	6673262	Symbol	pass2_no_dither		6672936						
ANR	6673263	Symbol	* * cinfo -> mem		6672936						
ANR	6673264	Symbol	HIST_C0_ELEMS		6672936						
ANR	6673265	Symbol	i		6672936						
ANR	6673266	Symbol	prescan_quantize		6672936						
ANR	6673267	Symbol	* histogram		6672936						
ANR	6673268	Symbol	JPOOL_IMAGE		6672936						
ANR	6673269	Symbol	cinfo -> cquantize		6672936						
ANR	6673270	Symbol	cquantize -> pub . color_quantize		6672936						
ANR	6673271	Symbol	* i		6672936						
ANR	6673272	Symbol	cquantize -> on_odd_row		6672936						
ANR	6673273	Symbol	FALSE		6672936						
ANR	6673274	Symbol	MAXNUMCOLORS		6672936						
ANR	6673275	Function	new_color_map_2_quant	1231:0:45457:45645							
ANR	6673276	FunctionDef	new_color_map_2_quant (j_decompress_ptr cinfo)		6673275	0					
ANR	6673277	CompoundStatement		1232:0:45504:45645	6673275	0					
ANR	6673278	IdentifierDeclStatement	my_cquantize_ptr cquantize = ( my_cquantize_ptr ) cinfo -> cquantize ;	1233:2:45508:45572	6673275	0	True				
ANR	6673279	IdentifierDecl	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6673275	0					
ANR	6673280	IdentifierDeclType	my_cquantize_ptr		6673275	0					
ANR	6673281	Identifier	cquantize		6673275	1					
ANR	6673282	AssignmentExpression	cquantize = ( my_cquantize_ptr ) cinfo -> cquantize		6673275	2		=			
ANR	6673283	Identifier	cquantize		6673275	0					
ANR	6673284	CastExpression	( my_cquantize_ptr ) cinfo -> cquantize		6673275	1					
ANR	6673285	CastTarget	my_cquantize_ptr		6673275	0					
ANR	6673286	PtrMemberAccess	cinfo -> cquantize		6673275	1					
ANR	6673287	Identifier	cinfo		6673275	0					
ANR	6673288	Identifier	cquantize		6673275	1					
ANR	6673289	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1236:2:45613:45643	6673275	1	True				
ANR	6673290	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6673275	0		=			
ANR	6673291	PtrMemberAccess	cquantize -> needs_zeroed		6673275	0					
ANR	6673292	Identifier	cquantize		6673275	0					
ANR	6673293	Identifier	needs_zeroed		6673275	1					
ANR	6673294	Identifier	TRUE		6673275	1					
ANR	6673295	Identifier	new_color_map_2_quant		6673275	1					
ANR	6673296	ParameterList	j_decompress_ptr cinfo		6673275	2					
ANR	6673297	Parameter	j_decompress_ptr cinfo	1231:23:45480:45501	6673275	0	True				
ANR	6673298	ParameterType	j_decompress_ptr		6673275	0					
ANR	6673299	Identifier	cinfo		6673275	1					
ANR	6673300	CFGEntryNode	ENTRY		6673275		True				
ANR	6673301	CFGExitNode	EXIT		6673275		True				
ANR	6673302	Symbol	cinfo -> cquantize		6673275						
ANR	6673303	Symbol	cinfo		6673275						
ANR	6673304	Symbol	cquantize -> needs_zeroed		6673275						
ANR	6673305	Symbol	TRUE		6673275						
ANR	6673306	Symbol	cquantize		6673275						
ANR	6673307	Symbol	* cquantize		6673275						
ANR	6673308	Symbol	* cinfo		6673275						
ANR	6673309	Function	jinit_2pass_quantizer	1245:0:45734:48433							
ANR	6673310	FunctionDef	jinit_2pass_quantizer (j_decompress_ptr cinfo)		6673309	0					
ANR	6673311	CompoundStatement		1246:0:45781:48433	6673309	0					
ANR	6673312	IdentifierDeclStatement	my_cquantize_ptr cquantize ;	1247:2:45785:45811	6673309	0	True				
ANR	6673313	IdentifierDecl	cquantize		6673309	0					
ANR	6673314	IdentifierDeclType	my_cquantize_ptr		6673309	0					
ANR	6673315	Identifier	cquantize		6673309	1					
ANR	6673316	IdentifierDeclStatement	int i ;	1248:2:45815:45820	6673309	1	True				
ANR	6673317	IdentifierDecl	i		6673309	0					
ANR	6673318	IdentifierDeclType	int		6673309	0					
ANR	6673319	Identifier	i		6673309	1					
ANR	6673320	ExpressionStatement	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"	1250:2:45825:45949	6673309	2	True				
ANR	6673321	AssignmentExpression	"cquantize = ( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6673309	0		=			
ANR	6673322	Identifier	cquantize		6673309	0					
ANR	6673323	CastExpression	"( my_cquantize_ptr ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6673309	1					
ANR	6673324	CastTarget	my_cquantize_ptr		6673309	0					
ANR	6673325	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , SIZEOF ( my_cquantizer ) )"		6673309	1					
ANR	6673326	Callee	* cinfo -> mem -> alloc_small		6673309	0					
ANR	6673327	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6673309	0					
ANR	6673328	UnaryOperator	*		6673309	0					
ANR	6673329	PtrMemberAccess	cinfo -> mem -> alloc_small		6673309	1					
ANR	6673330	PtrMemberAccess	cinfo -> mem		6673309	0					
ANR	6673331	Identifier	cinfo		6673309	0					
ANR	6673332	Identifier	mem		6673309	1					
ANR	6673333	Identifier	alloc_small		6673309	1					
ANR	6673334	ArgumentList	( j_common_ptr ) cinfo		6673309	1					
ANR	6673335	Argument	( j_common_ptr ) cinfo		6673309	0					
ANR	6673336	CastExpression	( j_common_ptr ) cinfo		6673309	0					
ANR	6673337	CastTarget	j_common_ptr		6673309	0					
ANR	6673338	Identifier	cinfo		6673309	1					
ANR	6673339	Argument	JPOOL_IMAGE		6673309	1					
ANR	6673340	Identifier	JPOOL_IMAGE		6673309	0					
ANR	6673341	Argument	SIZEOF ( my_cquantizer )		6673309	2					
ANR	6673342	CallExpression	SIZEOF ( my_cquantizer )		6673309	0					
ANR	6673343	Callee	SIZEOF		6673309	0					
ANR	6673344	Identifier	SIZEOF		6673309	0					
ANR	6673345	ArgumentList	my_cquantizer		6673309	1					
ANR	6673346	Argument	my_cquantizer		6673309	0					
ANR	6673347	Identifier	my_cquantizer		6673309	0					
ANR	6673348	ExpressionStatement	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize	1253:2:45953:46013	6673309	3	True				
ANR	6673349	AssignmentExpression	cinfo -> cquantize = ( struct jpeg_color_quantizer * ) cquantize		6673309	0		=			
ANR	6673350	PtrMemberAccess	cinfo -> cquantize		6673309	0					
ANR	6673351	Identifier	cinfo		6673309	0					
ANR	6673352	Identifier	cquantize		6673309	1					
ANR	6673353	CastExpression	( struct jpeg_color_quantizer * ) cquantize		6673309	1					
ANR	6673354	CastTarget	struct jpeg_color_quantizer *		6673309	0					
ANR	6673355	Identifier	cquantize		6673309	1					
ANR	6673356	ExpressionStatement	cquantize -> pub . start_pass = start_pass_2_quant	1254:2:46017:46063	6673309	4	True				
ANR	6673357	AssignmentExpression	cquantize -> pub . start_pass = start_pass_2_quant		6673309	0		=			
ANR	6673358	MemberAccess	cquantize -> pub . start_pass		6673309	0					
ANR	6673359	PtrMemberAccess	cquantize -> pub		6673309	0					
ANR	6673360	Identifier	cquantize		6673309	0					
ANR	6673361	Identifier	pub		6673309	1					
ANR	6673362	Identifier	start_pass		6673309	1					
ANR	6673363	Identifier	start_pass_2_quant		6673309	1					
ANR	6673364	ExpressionStatement	cquantize -> pub . new_color_map = new_color_map_2_quant	1255:2:46067:46119	6673309	5	True				
ANR	6673365	AssignmentExpression	cquantize -> pub . new_color_map = new_color_map_2_quant		6673309	0		=			
ANR	6673366	MemberAccess	cquantize -> pub . new_color_map		6673309	0					
ANR	6673367	PtrMemberAccess	cquantize -> pub		6673309	0					
ANR	6673368	Identifier	cquantize		6673309	0					
ANR	6673369	Identifier	pub		6673309	1					
ANR	6673370	Identifier	new_color_map		6673309	1					
ANR	6673371	Identifier	new_color_map_2_quant		6673309	1					
ANR	6673372	ExpressionStatement	cquantize -> fserrors = NULL	1256:2:46123:46149	6673309	6	True				
ANR	6673373	AssignmentExpression	cquantize -> fserrors = NULL		6673309	0		=			
ANR	6673374	PtrMemberAccess	cquantize -> fserrors		6673309	0					
ANR	6673375	Identifier	cquantize		6673309	0					
ANR	6673376	Identifier	fserrors		6673309	1					
ANR	6673377	Identifier	NULL		6673309	1					
ANR	6673378	ExpressionStatement	cquantize -> error_limiter = NULL	1257:2:46194:46225	6673309	7	True				
ANR	6673379	AssignmentExpression	cquantize -> error_limiter = NULL		6673309	0		=			
ANR	6673380	PtrMemberAccess	cquantize -> error_limiter		6673309	0					
ANR	6673381	Identifier	cquantize		6673309	0					
ANR	6673382	Identifier	error_limiter		6673309	1					
ANR	6673383	Identifier	NULL		6673309	1					
ANR	6673384	IfStatement	if ( cinfo -> out_color_components != 3 )		6673309	8					
ANR	6673385	Condition	cinfo -> out_color_components != 3	1260:6:46298:46329	6673309	0	True				
ANR	6673386	EqualityExpression	cinfo -> out_color_components != 3		6673309	0		!=			
ANR	6673387	PtrMemberAccess	cinfo -> out_color_components		6673309	0					
ANR	6673388	Identifier	cinfo		6673309	0					
ANR	6673389	Identifier	out_color_components		6673309	1					
ANR	6673390	PrimaryExpression	3		6673309	1					
ANR	6673391	ExpressionStatement	"ERREXIT ( cinfo , JERR_NOTIMPL )"	1261:4:46336:46364	6673309	1	True				
ANR	6673392	CallExpression	"ERREXIT ( cinfo , JERR_NOTIMPL )"		6673309	0					
ANR	6673393	Callee	ERREXIT		6673309	0					
ANR	6673394	Identifier	ERREXIT		6673309	0					
ANR	6673395	ArgumentList	cinfo		6673309	1					
ANR	6673396	Argument	cinfo		6673309	0					
ANR	6673397	Identifier	cinfo		6673309	0					
ANR	6673398	Argument	JERR_NOTIMPL		6673309	1					
ANR	6673399	Identifier	JERR_NOTIMPL		6673309	0					
ANR	6673400	ExpressionStatement	"cquantize -> histogram = ( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"	1264:2:46425:46555	6673309	9	True				
ANR	6673401	AssignmentExpression	"cquantize -> histogram = ( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6673309	0		=			
ANR	6673402	PtrMemberAccess	cquantize -> histogram		6673309	0					
ANR	6673403	Identifier	cquantize		6673309	0					
ANR	6673404	Identifier	histogram		6673309	1					
ANR	6673405	CastExpression	"( hist3d ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6673309	1					
ANR	6673406	CastTarget	hist3d		6673309	0					
ANR	6673407	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C0_ELEMS * SIZEOF ( hist2d ) )"		6673309	1					
ANR	6673408	Callee	* cinfo -> mem -> alloc_small		6673309	0					
ANR	6673409	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6673309	0					
ANR	6673410	UnaryOperator	*		6673309	0					
ANR	6673411	PtrMemberAccess	cinfo -> mem -> alloc_small		6673309	1					
ANR	6673412	PtrMemberAccess	cinfo -> mem		6673309	0					
ANR	6673413	Identifier	cinfo		6673309	0					
ANR	6673414	Identifier	mem		6673309	1					
ANR	6673415	Identifier	alloc_small		6673309	1					
ANR	6673416	ArgumentList	( j_common_ptr ) cinfo		6673309	1					
ANR	6673417	Argument	( j_common_ptr ) cinfo		6673309	0					
ANR	6673418	CastExpression	( j_common_ptr ) cinfo		6673309	0					
ANR	6673419	CastTarget	j_common_ptr		6673309	0					
ANR	6673420	Identifier	cinfo		6673309	1					
ANR	6673421	Argument	JPOOL_IMAGE		6673309	1					
ANR	6673422	Identifier	JPOOL_IMAGE		6673309	0					
ANR	6673423	Argument	HIST_C0_ELEMS * SIZEOF ( hist2d )		6673309	2					
ANR	6673424	MultiplicativeExpression	HIST_C0_ELEMS * SIZEOF ( hist2d )		6673309	0		*			
ANR	6673425	Identifier	HIST_C0_ELEMS		6673309	0					
ANR	6673426	CallExpression	SIZEOF ( hist2d )		6673309	1					
ANR	6673427	Callee	SIZEOF		6673309	0					
ANR	6673428	Identifier	SIZEOF		6673309	0					
ANR	6673429	ArgumentList	hist2d		6673309	1					
ANR	6673430	Argument	hist2d		6673309	0					
ANR	6673431	Identifier	hist2d		6673309	0					
ANR	6673432	ForStatement	for ( i = 0 ; i < HIST_C0_ELEMS ; i ++ )		6673309	10					
ANR	6673433	ForInit	i = 0 ;	1266:7:46564:46569	6673309	0	True				
ANR	6673434	AssignmentExpression	i = 0		6673309	0		=			
ANR	6673435	Identifier	i		6673309	0					
ANR	6673436	PrimaryExpression	0		6673309	1					
ANR	6673437	Condition	i < HIST_C0_ELEMS	1266:14:46571:46587	6673309	1	True				
ANR	6673438	RelationalExpression	i < HIST_C0_ELEMS		6673309	0		<			
ANR	6673439	Identifier	i		6673309	0					
ANR	6673440	Identifier	HIST_C0_ELEMS		6673309	1					
ANR	6673441	PostIncDecOperationExpression	i ++	1266:33:46590:46592	6673309	2	True				
ANR	6673442	Identifier	i		6673309	0					
ANR	6673443	IncDec	++		6673309	1					
ANR	6673444	CompoundStatement		21:38:813:813	6673309	3					
ANR	6673445	ExpressionStatement	"cquantize -> histogram [ i ] = ( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"	1267:4:46601:46759	6673309	0	True				
ANR	6673446	AssignmentExpression	"cquantize -> histogram [ i ] = ( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6673309	0		=			
ANR	6673447	ArrayIndexing	cquantize -> histogram [ i ]		6673309	0					
ANR	6673448	PtrMemberAccess	cquantize -> histogram		6673309	0					
ANR	6673449	Identifier	cquantize		6673309	0					
ANR	6673450	Identifier	histogram		6673309	1					
ANR	6673451	Identifier	i		6673309	1					
ANR	6673452	CastExpression	"( hist2d ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6673309	1					
ANR	6673453	CastTarget	hist2d		6673309	0					
ANR	6673454	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell ) )"		6673309	1					
ANR	6673455	Callee	* cinfo -> mem -> alloc_large		6673309	0					
ANR	6673456	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6673309	0					
ANR	6673457	UnaryOperator	*		6673309	0					
ANR	6673458	PtrMemberAccess	cinfo -> mem -> alloc_large		6673309	1					
ANR	6673459	PtrMemberAccess	cinfo -> mem		6673309	0					
ANR	6673460	Identifier	cinfo		6673309	0					
ANR	6673461	Identifier	mem		6673309	1					
ANR	6673462	Identifier	alloc_large		6673309	1					
ANR	6673463	ArgumentList	( j_common_ptr ) cinfo		6673309	1					
ANR	6673464	Argument	( j_common_ptr ) cinfo		6673309	0					
ANR	6673465	CastExpression	( j_common_ptr ) cinfo		6673309	0					
ANR	6673466	CastTarget	j_common_ptr		6673309	0					
ANR	6673467	Identifier	cinfo		6673309	1					
ANR	6673468	Argument	JPOOL_IMAGE		6673309	1					
ANR	6673469	Identifier	JPOOL_IMAGE		6673309	0					
ANR	6673470	Argument	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6673309	2					
ANR	6673471	MultiplicativeExpression	HIST_C1_ELEMS * HIST_C2_ELEMS * SIZEOF ( histcell )		6673309	0		*			
ANR	6673472	Identifier	HIST_C1_ELEMS		6673309	0					
ANR	6673473	MultiplicativeExpression	HIST_C2_ELEMS * SIZEOF ( histcell )		6673309	1		*			
ANR	6673474	Identifier	HIST_C2_ELEMS		6673309	0					
ANR	6673475	CallExpression	SIZEOF ( histcell )		6673309	1					
ANR	6673476	Callee	SIZEOF		6673309	0					
ANR	6673477	Identifier	SIZEOF		6673309	0					
ANR	6673478	ArgumentList	histcell		6673309	1					
ANR	6673479	Argument	histcell		6673309	0					
ANR	6673480	Identifier	histcell		6673309	0					
ANR	6673481	ExpressionStatement	cquantize -> needs_zeroed = TRUE	1271:2:46767:46797	6673309	11	True				
ANR	6673482	AssignmentExpression	cquantize -> needs_zeroed = TRUE		6673309	0		=			
ANR	6673483	PtrMemberAccess	cquantize -> needs_zeroed		6673309	0					
ANR	6673484	Identifier	cquantize		6673309	0					
ANR	6673485	Identifier	needs_zeroed		6673309	1					
ANR	6673486	Identifier	TRUE		6673309	1					
ANR	6673487	IfStatement	if ( cinfo -> enable_2pass_quant )		6673309	12					
ANR	6673488	Condition	cinfo -> enable_2pass_quant	1277:6:47011:47035	6673309	0	True				
ANR	6673489	PtrMemberAccess	cinfo -> enable_2pass_quant		6673309	0					
ANR	6673490	Identifier	cinfo		6673309	0					
ANR	6673491	Identifier	enable_2pass_quant		6673309	1					
ANR	6673492	CompoundStatement		34:4:1308:1353	6673309	1					
ANR	6673493	IdentifierDeclStatement	int desired = cinfo -> desired_number_of_colors ;	1279:4:47090:47135	6673309	0	True				
ANR	6673494	IdentifierDecl	desired = cinfo -> desired_number_of_colors		6673309	0					
ANR	6673495	IdentifierDeclType	int		6673309	0					
ANR	6673496	Identifier	desired		6673309	1					
ANR	6673497	AssignmentExpression	desired = cinfo -> desired_number_of_colors		6673309	2		=			
ANR	6673498	Identifier	desired		6673309	0					
ANR	6673499	PtrMemberAccess	cinfo -> desired_number_of_colors		6673309	1					
ANR	6673500	Identifier	cinfo		6673309	0					
ANR	6673501	Identifier	desired_number_of_colors		6673309	1					
ANR	6673502	IfStatement	if ( desired < 8 )		6673309	1					
ANR	6673503	Condition	desired < 8	1281:8:47220:47230	6673309	0	True				
ANR	6673504	RelationalExpression	desired < 8		6673309	0		<			
ANR	6673505	Identifier	desired		6673309	0					
ANR	6673506	PrimaryExpression	8		6673309	1					
ANR	6673507	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 8 )"	1282:6:47239:47280	6673309	1	True				
ANR	6673508	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_FEW_COLORS , 8 )"		6673309	0					
ANR	6673509	Callee	ERREXIT1		6673309	0					
ANR	6673510	Identifier	ERREXIT1		6673309	0					
ANR	6673511	ArgumentList	cinfo		6673309	1					
ANR	6673512	Argument	cinfo		6673309	0					
ANR	6673513	Identifier	cinfo		6673309	0					
ANR	6673514	Argument	JERR_QUANT_FEW_COLORS		6673309	1					
ANR	6673515	Identifier	JERR_QUANT_FEW_COLORS		6673309	0					
ANR	6673516	Argument	8		6673309	2					
ANR	6673517	PrimaryExpression	8		6673309	0					
ANR	6673518	IfStatement	if ( desired > MAXNUMCOLORS )		6673309	2					
ANR	6673519	Condition	desired > MAXNUMCOLORS	1284:8:47358:47379	6673309	0	True				
ANR	6673520	RelationalExpression	desired > MAXNUMCOLORS		6673309	0		>			
ANR	6673521	Identifier	desired		6673309	0					
ANR	6673522	Identifier	MAXNUMCOLORS		6673309	1					
ANR	6673523	ExpressionStatement	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"	1285:6:47388:47441	6673309	1	True				
ANR	6673524	CallExpression	"ERREXIT1 ( cinfo , JERR_QUANT_MANY_COLORS , MAXNUMCOLORS )"		6673309	0					
ANR	6673525	Callee	ERREXIT1		6673309	0					
ANR	6673526	Identifier	ERREXIT1		6673309	0					
ANR	6673527	ArgumentList	cinfo		6673309	1					
ANR	6673528	Argument	cinfo		6673309	0					
ANR	6673529	Identifier	cinfo		6673309	0					
ANR	6673530	Argument	JERR_QUANT_MANY_COLORS		6673309	1					
ANR	6673531	Identifier	JERR_QUANT_MANY_COLORS		6673309	0					
ANR	6673532	Argument	MAXNUMCOLORS		6673309	2					
ANR	6673533	Identifier	MAXNUMCOLORS		6673309	0					
ANR	6673534	ExpressionStatement	"cquantize -> sv_colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"	1286:4:47447:47578	6673309	3	True				
ANR	6673535	AssignmentExpression	"cquantize -> sv_colormap = ( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"		6673309	0		=			
ANR	6673536	PtrMemberAccess	cquantize -> sv_colormap		6673309	0					
ANR	6673537	Identifier	cquantize		6673309	0					
ANR	6673538	Identifier	sv_colormap		6673309	1					
ANR	6673539	CallExpression	"( * cinfo -> mem -> alloc_sarray ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( JDIMENSION ) desired , ( JDIMENSION ) 3 )"		6673309	1					
ANR	6673540	Callee	* cinfo -> mem -> alloc_sarray		6673309	0					
ANR	6673541	UnaryOperationExpression	* cinfo -> mem -> alloc_sarray		6673309	0					
ANR	6673542	UnaryOperator	*		6673309	0					
ANR	6673543	PtrMemberAccess	cinfo -> mem -> alloc_sarray		6673309	1					
ANR	6673544	PtrMemberAccess	cinfo -> mem		6673309	0					
ANR	6673545	Identifier	cinfo		6673309	0					
ANR	6673546	Identifier	mem		6673309	1					
ANR	6673547	Identifier	alloc_sarray		6673309	1					
ANR	6673548	ArgumentList	( j_common_ptr ) cinfo		6673309	1					
ANR	6673549	Argument	( j_common_ptr ) cinfo		6673309	0					
ANR	6673550	CastExpression	( j_common_ptr ) cinfo		6673309	0					
ANR	6673551	CastTarget	j_common_ptr		6673309	0					
ANR	6673552	Identifier	cinfo		6673309	1					
ANR	6673553	Argument	JPOOL_IMAGE		6673309	1					
ANR	6673554	Identifier	JPOOL_IMAGE		6673309	0					
ANR	6673555	Argument	( JDIMENSION ) desired		6673309	2					
ANR	6673556	CastExpression	( JDIMENSION ) desired		6673309	0					
ANR	6673557	CastTarget	JDIMENSION		6673309	0					
ANR	6673558	Identifier	desired		6673309	1					
ANR	6673559	Argument	( JDIMENSION ) 3		6673309	3					
ANR	6673560	CastExpression	( JDIMENSION ) 3		6673309	0					
ANR	6673561	CastTarget	JDIMENSION		6673309	0					
ANR	6673562	PrimaryExpression	3		6673309	1					
ANR	6673563	ExpressionStatement	cquantize -> desired = desired	1288:4:47584:47612	6673309	4	True				
ANR	6673564	AssignmentExpression	cquantize -> desired = desired		6673309	0		=			
ANR	6673565	PtrMemberAccess	cquantize -> desired		6673309	0					
ANR	6673566	Identifier	cquantize		6673309	0					
ANR	6673567	Identifier	desired		6673309	1					
ANR	6673568	Identifier	desired		6673309	1					
ANR	6673569	ElseStatement	else		6673309	0					
ANR	6673570	ExpressionStatement	cquantize -> sv_colormap = NULL	1290:4:47627:47656	6673309	0	True				
ANR	6673571	AssignmentExpression	cquantize -> sv_colormap = NULL		6673309	0		=			
ANR	6673572	PtrMemberAccess	cquantize -> sv_colormap		6673309	0					
ANR	6673573	Identifier	cquantize		6673309	0					
ANR	6673574	Identifier	sv_colormap		6673309	1					
ANR	6673575	Identifier	NULL		6673309	1					
ANR	6673576	IfStatement	if ( cinfo -> dither_mode != JDITHER_NONE )		6673309	13					
ANR	6673577	Condition	cinfo -> dither_mode != JDITHER_NONE	1294:6:47777:47810	6673309	0	True				
ANR	6673578	EqualityExpression	cinfo -> dither_mode != JDITHER_NONE		6673309	0		!=			
ANR	6673579	PtrMemberAccess	cinfo -> dither_mode		6673309	0					
ANR	6673580	Identifier	cinfo		6673309	0					
ANR	6673581	Identifier	dither_mode		6673309	1					
ANR	6673582	Identifier	JDITHER_NONE		6673309	1					
ANR	6673583	ExpressionStatement	cinfo -> dither_mode = JDITHER_FS	1295:4:47817:47848	6673309	1	True				
ANR	6673584	AssignmentExpression	cinfo -> dither_mode = JDITHER_FS		6673309	0		=			
ANR	6673585	PtrMemberAccess	cinfo -> dither_mode		6673309	0					
ANR	6673586	Identifier	cinfo		6673309	0					
ANR	6673587	Identifier	dither_mode		6673309	1					
ANR	6673588	Identifier	JDITHER_FS		6673309	1					
ANR	6673589	IfStatement	if ( cinfo -> dither_mode == JDITHER_FS )		6673309	14					
ANR	6673590	Condition	cinfo -> dither_mode == JDITHER_FS	1302:6:48127:48158	6673309	0	True				
ANR	6673591	EqualityExpression	cinfo -> dither_mode == JDITHER_FS		6673309	0		==			
ANR	6673592	PtrMemberAccess	cinfo -> dither_mode		6673309	0					
ANR	6673593	Identifier	cinfo		6673309	0					
ANR	6673594	Identifier	dither_mode		6673309	1					
ANR	6673595	Identifier	JDITHER_FS		6673309	1					
ANR	6673596	CompoundStatement		57:40:2379:2379	6673309	1					
ANR	6673597	ExpressionStatement	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"	1303:4:48167:48337	6673309	0	True				
ANR	6673598	AssignmentExpression	"cquantize -> fserrors = ( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6673309	0		=			
ANR	6673599	PtrMemberAccess	cquantize -> fserrors		6673309	0					
ANR	6673600	Identifier	cquantize		6673309	0					
ANR	6673601	Identifier	fserrors		6673309	1					
ANR	6673602	CastExpression	"( FSERRPTR ) ( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6673309	1					
ANR	6673603	CastTarget	FSERRPTR		6673309	0					
ANR	6673604	CallExpression	"( * cinfo -> mem -> alloc_large ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , ( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) ) )"		6673309	1					
ANR	6673605	Callee	* cinfo -> mem -> alloc_large		6673309	0					
ANR	6673606	UnaryOperationExpression	* cinfo -> mem -> alloc_large		6673309	0					
ANR	6673607	UnaryOperator	*		6673309	0					
ANR	6673608	PtrMemberAccess	cinfo -> mem -> alloc_large		6673309	1					
ANR	6673609	PtrMemberAccess	cinfo -> mem		6673309	0					
ANR	6673610	Identifier	cinfo		6673309	0					
ANR	6673611	Identifier	mem		6673309	1					
ANR	6673612	Identifier	alloc_large		6673309	1					
ANR	6673613	ArgumentList	( j_common_ptr ) cinfo		6673309	1					
ANR	6673614	Argument	( j_common_ptr ) cinfo		6673309	0					
ANR	6673615	CastExpression	( j_common_ptr ) cinfo		6673309	0					
ANR	6673616	CastTarget	j_common_ptr		6673309	0					
ANR	6673617	Identifier	cinfo		6673309	1					
ANR	6673618	Argument	JPOOL_IMAGE		6673309	1					
ANR	6673619	Identifier	JPOOL_IMAGE		6673309	0					
ANR	6673620	Argument	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6673309	2					
ANR	6673621	CastExpression	( size_t ) ( ( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) ) )		6673309	0					
ANR	6673622	CastTarget	size_t		6673309	0					
ANR	6673623	MultiplicativeExpression	( cinfo -> output_width + 2 ) * ( 3 * SIZEOF ( FSERROR ) )		6673309	1		*			
ANR	6673624	AdditiveExpression	cinfo -> output_width + 2		6673309	0		+			
ANR	6673625	PtrMemberAccess	cinfo -> output_width		6673309	0					
ANR	6673626	Identifier	cinfo		6673309	0					
ANR	6673627	Identifier	output_width		6673309	1					
ANR	6673628	PrimaryExpression	2		6673309	1					
ANR	6673629	MultiplicativeExpression	3 * SIZEOF ( FSERROR )		6673309	1		*			
ANR	6673630	PrimaryExpression	3		6673309	0					
ANR	6673631	CallExpression	SIZEOF ( FSERROR )		6673309	1					
ANR	6673632	Callee	SIZEOF		6673309	0					
ANR	6673633	Identifier	SIZEOF		6673309	0					
ANR	6673634	ArgumentList	FSERROR		6673309	1					
ANR	6673635	Argument	FSERROR		6673309	0					
ANR	6673636	Identifier	FSERROR		6673309	0					
ANR	6673637	ExpressionStatement	init_error_limit ( cinfo )	1307:4:48404:48427	6673309	1	True				
ANR	6673638	CallExpression	init_error_limit ( cinfo )		6673309	0					
ANR	6673639	Callee	init_error_limit		6673309	0					
ANR	6673640	Identifier	init_error_limit		6673309	0					
ANR	6673641	ArgumentList	cinfo		6673309	1					
ANR	6673642	Argument	cinfo		6673309	0					
ANR	6673643	Identifier	cinfo		6673309	0					
ANR	6673644	Identifier	jinit_2pass_quantizer		6673309	1					
ANR	6673645	ParameterList	j_decompress_ptr cinfo		6673309	2					
ANR	6673646	Parameter	j_decompress_ptr cinfo	1245:23:45757:45778	6673309	0	True				
ANR	6673647	ParameterType	j_decompress_ptr		6673309	0					
ANR	6673648	Identifier	cinfo		6673309	1					
ANR	6673649	CFGEntryNode	ENTRY		6673309		True				
ANR	6673650	CFGExitNode	EXIT		6673309		True				
ANR	6673651	Symbol	JDITHER_FS		6673309						
ANR	6673652	Symbol	JDITHER_NONE		6673309						
ANR	6673653	Symbol	* cquantize		6673309						
ANR	6673654	Symbol	cquantize -> pub . start_pass		6673309						
ANR	6673655	Symbol	cquantize -> histogram		6673309						
ANR	6673656	Symbol	cquantize -> sv_colormap		6673309						
ANR	6673657	Symbol	JERR_QUANT_MANY_COLORS		6673309						
ANR	6673658	Symbol	cquantize -> fserrors		6673309						
ANR	6673659	Symbol	cinfo -> out_color_components		6673309						
ANR	6673660	Symbol	cinfo -> mem -> alloc_large		6673309						
ANR	6673661	Symbol	* cinfo		6673309						
ANR	6673662	Symbol	NULL		6673309						
ANR	6673663	Symbol	cinfo -> mem -> alloc_sarray		6673309						
ANR	6673664	Symbol	HIST_C2_ELEMS		6673309						
ANR	6673665	Symbol	TRUE		6673309						
ANR	6673666	Symbol	cinfo -> dither_mode		6673309						
ANR	6673667	Symbol	cinfo -> desired_number_of_colors		6673309						
ANR	6673668	Symbol	FSERROR		6673309						
ANR	6673669	Symbol	histcell		6673309						
ANR	6673670	Symbol	* cquantize -> histogram		6673309						
ANR	6673671	Symbol	cinfo		6673309						
ANR	6673672	Symbol	* * * cinfo		6673309						
ANR	6673673	Symbol	cquantize -> pub . new_color_map		6673309						
ANR	6673674	Symbol	* * cinfo		6673309						
ANR	6673675	Symbol	HIST_C1_ELEMS		6673309						
ANR	6673676	Symbol	cquantize -> pub		6673309						
ANR	6673677	Symbol	* cinfo -> mem -> alloc_large		6673309						
ANR	6673678	Symbol	cquantize -> desired		6673309						
ANR	6673679	Symbol	cinfo -> enable_2pass_quant		6673309						
ANR	6673680	Symbol	SIZEOF		6673309						
ANR	6673681	Symbol	cquantize -> needs_zeroed		6673309						
ANR	6673682	Symbol	* cinfo -> mem -> alloc_sarray		6673309						
ANR	6673683	Symbol	new_color_map_2_quant		6673309						
ANR	6673684	Symbol	cquantize -> error_limiter		6673309						
ANR	6673685	Symbol	cquantize		6673309						
ANR	6673686	Symbol	start_pass_2_quant		6673309						
ANR	6673687	Symbol	cinfo -> output_width		6673309						
ANR	6673688	Symbol	* cinfo -> mem		6673309						
ANR	6673689	Symbol	desired		6673309						
ANR	6673690	Symbol	cinfo -> mem		6673309						
ANR	6673691	Symbol	JERR_QUANT_FEW_COLORS		6673309						
ANR	6673692	Symbol	* cinfo -> mem -> alloc_small		6673309						
ANR	6673693	Symbol	* * cinfo -> mem		6673309						
ANR	6673694	Symbol	hist2d		6673309						
ANR	6673695	Symbol	HIST_C0_ELEMS		6673309						
ANR	6673696	Symbol	cinfo -> mem -> alloc_small		6673309						
ANR	6673697	Symbol	i		6673309						
ANR	6673698	Symbol	JPOOL_IMAGE		6673309						
ANR	6673699	Symbol	* * cquantize		6673309						
ANR	6673700	Symbol	cinfo -> cquantize		6673309						
ANR	6673701	Symbol	* i		6673309						
ANR	6673702	Symbol	JERR_NOTIMPL		6673309						
ANR	6673703	Symbol	my_cquantizer		6673309						
ANR	6673704	Symbol	MAXNUMCOLORS		6673309						
