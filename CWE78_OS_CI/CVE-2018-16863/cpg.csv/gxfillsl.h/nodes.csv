command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5608731	File	data/converged/CVE-2018-16863_ghostpdl/gxfillsl.h								
ANR	5608732	Function	TEMPLATE_spot_into_scanlines	28:0:969:8576							
ANR	5608733	FunctionDef	"TEMPLATE_spot_into_scanlines (line_list * ll , fixed band_mask)"		5608732	0					
ANR	5608734	CompoundStatement		30:0:1042:8576	5608732	0					
ANR	5608735	IdentifierDeclStatement	const fill_options fo = * ll -> fo ;	31:4:1048:1079	5608732	0	True				
ANR	5608736	IdentifierDecl	fo = * ll -> fo		5608732	0					
ANR	5608737	IdentifierDeclType	const fill_options		5608732	0					
ANR	5608738	Identifier	fo		5608732	1					
ANR	5608739	AssignmentExpression	fo = * ll -> fo		5608732	2		=			
ANR	5608740	Identifier	fo		5608732	0					
ANR	5608741	UnaryOperationExpression	* ll -> fo		5608732	1					
ANR	5608742	UnaryOperator	*		5608732	0					
ANR	5608743	PtrMemberAccess	ll -> fo		5608732	1					
ANR	5608744	Identifier	ll		5608732	0					
ANR	5608745	Identifier	fo		5608732	1					
ANR	5608746	IdentifierDeclStatement	active_line * yll = ll -> y_list ;	32:4:1085:1114	5608732	1	True				
ANR	5608747	IdentifierDecl	* yll = ll -> y_list		5608732	0					
ANR	5608748	IdentifierDeclType	active_line *		5608732	0					
ANR	5608749	Identifier	yll		5608732	1					
ANR	5608750	AssignmentExpression	* yll = ll -> y_list		5608732	2		=			
ANR	5608751	Identifier	yll		5608732	0					
ANR	5608752	PtrMemberAccess	ll -> y_list		5608732	1					
ANR	5608753	Identifier	ll		5608732	0					
ANR	5608754	Identifier	y_list		5608732	1					
ANR	5608755	IdentifierDeclStatement	fixed y_limit = fo . ymax ;	33:4:1120:1143	5608732	2	True				
ANR	5608756	IdentifierDecl	y_limit = fo . ymax		5608732	0					
ANR	5608757	IdentifierDeclType	fixed		5608732	0					
ANR	5608758	Identifier	y_limit		5608732	1					
ANR	5608759	AssignmentExpression	y_limit = fo . ymax		5608732	2		=			
ANR	5608760	Identifier	y_limit		5608732	0					
ANR	5608761	MemberAccess	fo . ymax		5608732	1					
ANR	5608762	Identifier	fo		5608732	0					
ANR	5608763	Identifier	ymax		5608732	1					
ANR	5608764	IdentifierDeclStatement	fixed y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above ) ;	43:4:1614:1738	5608732	3	True				
ANR	5608765	IdentifierDecl	y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above )		5608732	0					
ANR	5608766	IdentifierDeclType	fixed		5608732	0					
ANR	5608767	Identifier	y_frac_min		5608732	1					
ANR	5608768	AssignmentExpression	y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above )		5608732	2		=			
ANR	5608769	Identifier	y_frac_min		5608732	0					
ANR	5608770	ConditionalExpression	fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above		5608732	1					
ANR	5608771	Condition	fo . adjust_above == fixed_0		5608732	0					
ANR	5608772	EqualityExpression	fo . adjust_above == fixed_0		5608732	0		==			
ANR	5608773	MemberAccess	fo . adjust_above		5608732	0					
ANR	5608774	Identifier	fo		5608732	0					
ANR	5608775	Identifier	adjust_above		5608732	1					
ANR	5608776	Identifier	fixed_0		5608732	1					
ANR	5608777	Identifier	fixed_half		5608732	1					
ANR	5608778	AdditiveExpression	fixed_half + fixed_epsilon - fo . adjust_above		5608732	2		+			
ANR	5608779	Identifier	fixed_half		5608732	0					
ANR	5608780	AdditiveExpression	fixed_epsilon - fo . adjust_above		5608732	1		-			
ANR	5608781	Identifier	fixed_epsilon		5608732	0					
ANR	5608782	MemberAccess	fo . adjust_above		5608732	1					
ANR	5608783	Identifier	fo		5608732	0					
ANR	5608784	Identifier	adjust_above		5608732	1					
ANR	5608785	IdentifierDeclStatement	fixed y_frac_max = fixed_half + fo . adjust_below ;	46:4:1744:1799	5608732	4	True				
ANR	5608786	IdentifierDecl	y_frac_max = fixed_half + fo . adjust_below		5608732	0					
ANR	5608787	IdentifierDeclType	fixed		5608732	0					
ANR	5608788	Identifier	y_frac_max		5608732	1					
ANR	5608789	AssignmentExpression	y_frac_max = fixed_half + fo . adjust_below		5608732	2		=			
ANR	5608790	Identifier	y_frac_max		5608732	0					
ANR	5608791	AdditiveExpression	fixed_half + fo . adjust_below		5608732	1		+			
ANR	5608792	Identifier	fixed_half		5608732	0					
ANR	5608793	MemberAccess	fo . adjust_below		5608732	1					
ANR	5608794	Identifier	fo		5608732	0					
ANR	5608795	Identifier	adjust_below		5608732	1					
ANR	5608796	IdentifierDeclStatement	int y0 = fixed2int ( min_fixed ) ;	48:4:1805:1834	5608732	5	True				
ANR	5608797	IdentifierDecl	y0 = fixed2int ( min_fixed )		5608732	0					
ANR	5608798	IdentifierDeclType	int		5608732	0					
ANR	5608799	Identifier	y0		5608732	1					
ANR	5608800	AssignmentExpression	y0 = fixed2int ( min_fixed )		5608732	2		=			
ANR	5608801	Identifier	y0		5608732	0					
ANR	5608802	CallExpression	fixed2int ( min_fixed )		5608732	1					
ANR	5608803	Callee	fixed2int		5608732	0					
ANR	5608804	Identifier	fixed2int		5608732	0					
ANR	5608805	ArgumentList	min_fixed		5608732	1					
ANR	5608806	Argument	min_fixed		5608732	0					
ANR	5608807	Identifier	min_fixed		5608732	0					
ANR	5608808	IdentifierDeclStatement	fixed y_bot = min_fixed ;	49:4:1840:1863	5608732	6	True				
ANR	5608809	IdentifierDecl	y_bot = min_fixed		5608732	0					
ANR	5608810	IdentifierDeclType	fixed		5608732	0					
ANR	5608811	Identifier	y_bot		5608732	1					
ANR	5608812	AssignmentExpression	y_bot = min_fixed		5608732	2		=			
ANR	5608813	Identifier	min_fixed		5608732	0					
ANR	5608814	Identifier	min_fixed		5608732	1					
ANR	5608815	IdentifierDeclStatement	fixed y_top = min_fixed ;	50:4:1911:1934	5608732	7	True				
ANR	5608816	IdentifierDecl	y_top = min_fixed		5608732	0					
ANR	5608817	IdentifierDeclType	fixed		5608732	0					
ANR	5608818	Identifier	y_top		5608732	1					
ANR	5608819	AssignmentExpression	y_top = min_fixed		5608732	2		=			
ANR	5608820	Identifier	min_fixed		5608732	0					
ANR	5608821	Identifier	min_fixed		5608732	1					
ANR	5608822	IdentifierDeclStatement	fixed y = min_fixed ;	51:4:1982:2001	5608732	8	True				
ANR	5608823	IdentifierDecl	y = min_fixed		5608732	0					
ANR	5608824	IdentifierDeclType	fixed		5608732	0					
ANR	5608825	Identifier	y		5608732	1					
ANR	5608826	AssignmentExpression	y = min_fixed		5608732	2		=			
ANR	5608827	Identifier	min_fixed		5608732	0					
ANR	5608828	Identifier	min_fixed		5608732	1					
ANR	5608829	IdentifierDeclStatement	coord_range_list_t rlist ;	52:4:2007:2031	5608732	9	True				
ANR	5608830	IdentifierDecl	rlist		5608732	0					
ANR	5608831	IdentifierDeclType	coord_range_list_t		5608732	0					
ANR	5608832	Identifier	rlist		5608732	1					
ANR	5608833	IdentifierDeclStatement	coord_range_t rlocal [ MAX_LOCAL_ACTIVE ] ;	53:4:2037:2075	5608732	10	True				
ANR	5608834	IdentifierDecl	rlocal [ MAX_LOCAL_ACTIVE ]		5608732	0					
ANR	5608835	IdentifierDeclType	coord_range_t [ MAX_LOCAL_ACTIVE ]		5608732	0					
ANR	5608836	Identifier	rlocal		5608732	1					
ANR	5608837	Identifier	MAX_LOCAL_ACTIVE		5608732	2					
ANR	5608838	IdentifierDeclStatement	int code = 0 ;	54:4:2081:2093	5608732	11	True				
ANR	5608839	IdentifierDecl	code = 0		5608732	0					
ANR	5608840	IdentifierDeclType	int		5608732	0					
ANR	5608841	Identifier	code		5608732	1					
ANR	5608842	AssignmentExpression	code = 0		5608732	2		=			
ANR	5608843	Identifier	code		5608732	0					
ANR	5608844	PrimaryExpression	0		5608732	1					
ANR	5608845	IfStatement	if ( yll == 0 )		5608732	12					
ANR	5608846	Condition	yll == 0	56:8:2104:2111	5608732	0	True				
ANR	5608847	EqualityExpression	yll == 0		5608732	0		==			
ANR	5608848	Identifier	yll		5608732	0					
ANR	5608849	PrimaryExpression	0		5608732	1					
ANR	5608850	ReturnStatement	return 0 ;	57:8:2140:2148	5608732	1	True				
ANR	5608851	PrimaryExpression	0		5608732	0					
ANR	5608852	ExpressionStatement	"range_list_init ( & rlist , rlocal , countof ( rlocal ) , ll -> memory )"	58:4:2154:2214	5608732	13	True				
ANR	5608853	CallExpression	"range_list_init ( & rlist , rlocal , countof ( rlocal ) , ll -> memory )"		5608732	0					
ANR	5608854	Callee	range_list_init		5608732	0					
ANR	5608855	Identifier	range_list_init		5608732	0					
ANR	5608856	ArgumentList	& rlist		5608732	1					
ANR	5608857	Argument	& rlist		5608732	0					
ANR	5608858	UnaryOperationExpression	& rlist		5608732	0					
ANR	5608859	UnaryOperator	&		5608732	0					
ANR	5608860	Identifier	rlist		5608732	1					
ANR	5608861	Argument	rlocal		5608732	1					
ANR	5608862	Identifier	rlocal		5608732	0					
ANR	5608863	Argument	countof ( rlocal )		5608732	2					
ANR	5608864	CallExpression	countof ( rlocal )		5608732	0					
ANR	5608865	Callee	countof		5608732	0					
ANR	5608866	Identifier	countof		5608732	0					
ANR	5608867	ArgumentList	rlocal		5608732	1					
ANR	5608868	Argument	rlocal		5608732	0					
ANR	5608869	Identifier	rlocal		5608732	0					
ANR	5608870	Argument	ll -> memory		5608732	3					
ANR	5608871	PtrMemberAccess	ll -> memory		5608732	0					
ANR	5608872	Identifier	ll		5608732	0					
ANR	5608873	Identifier	memory		5608732	1					
ANR	5608874	ExpressionStatement	ll -> x_list = 0	59:4:2220:2234	5608732	14	True				
ANR	5608875	AssignmentExpression	ll -> x_list = 0		5608732	0		=			
ANR	5608876	PtrMemberAccess	ll -> x_list		5608732	0					
ANR	5608877	Identifier	ll		5608732	0					
ANR	5608878	Identifier	x_list		5608732	1					
ANR	5608879	PrimaryExpression	0		5608732	1					
ANR	5608880	ExpressionStatement	ll -> x_head . x_current = min_fixed	60:4:2240:2272	5608732	15	True				
ANR	5608881	AssignmentExpression	ll -> x_head . x_current = min_fixed		5608732	0		=			
ANR	5608882	MemberAccess	ll -> x_head . x_current		5608732	0					
ANR	5608883	PtrMemberAccess	ll -> x_head		5608732	0					
ANR	5608884	Identifier	ll		5608732	0					
ANR	5608885	Identifier	x_head		5608732	1					
ANR	5608886	Identifier	x_current		5608732	1					
ANR	5608887	Identifier	min_fixed		5608732	1					
ANR	5608888	DoStatement	do		5608732	16					
ANR	5608889	CompoundStatement		35:8:1322:1335	5608732	0					
ANR	5608890	IdentifierDeclStatement	"active_line * alp , * nlp ;"	62:8:2316:2338	5608732	0	True				
ANR	5608891	IdentifierDecl	* alp		5608732	0					
ANR	5608892	IdentifierDeclType	active_line *		5608732	0					
ANR	5608893	Identifier	alp		5608732	1					
ANR	5608894	IdentifierDecl	* nlp		5608732	1					
ANR	5608895	IdentifierDeclType	active_line *		5608732	0					
ANR	5608896	Identifier	nlp		5608732	1					
ANR	5608897	IdentifierDeclStatement	fixed x ;	63:8:2348:2355	5608732	1	True				
ANR	5608898	IdentifierDecl	x		5608732	0					
ANR	5608899	IdentifierDeclType	fixed		5608732	0					
ANR	5608900	Identifier	x		5608732	1					
ANR	5608901	IdentifierDeclStatement	bool new_band ;	64:8:2365:2378	5608732	2	True				
ANR	5608902	IdentifierDecl	new_band		5608732	0					
ANR	5608903	IdentifierDeclType	bool		5608732	0					
ANR	5608904	Identifier	new_band		5608732	1					
ANR	5608905	ExpressionStatement	INCR ( iter )	66:8:2389:2399	5608732	3	True				
ANR	5608906	CallExpression	INCR ( iter )		5608732	0					
ANR	5608907	Callee	INCR		5608732	0					
ANR	5608908	Identifier	INCR		5608732	0					
ANR	5608909	ArgumentList	iter		5608732	1					
ANR	5608910	Argument	iter		5608732	0					
ANR	5608911	Identifier	iter		5608732	0					
ANR	5608912	ExpressionStatement	"code = move_al_by_y ( ll , y )"	68:8:2410:2436	5608732	4	True				
ANR	5608913	AssignmentExpression	"code = move_al_by_y ( ll , y )"		5608732	0		=			
ANR	5608914	Identifier	code		5608732	0					
ANR	5608915	CallExpression	"move_al_by_y ( ll , y )"		5608732	1					
ANR	5608916	Callee	move_al_by_y		5608732	0					
ANR	5608917	Identifier	move_al_by_y		5608732	0					
ANR	5608918	ArgumentList	ll		5608732	1					
ANR	5608919	Argument	ll		5608732	0					
ANR	5608920	Identifier	ll		5608732	0					
ANR	5608921	Argument	y		5608732	1					
ANR	5608922	Identifier	y		5608732	0					
ANR	5608923	IfStatement	if ( code < 0 )		5608732	5					
ANR	5608924	Condition	code < 0	69:12:2480:2487	5608732	0	True				
ANR	5608925	RelationalExpression	code < 0		5608732	0		<			
ANR	5608926	Identifier	code		5608732	0					
ANR	5608927	PrimaryExpression	0		5608732	1					
ANR	5608928	ReturnStatement	return code ;	70:12:2502:2513	5608732	1	True				
ANR	5608929	Identifier	code		5608732	0					
ANR	5608930	IfStatement	if ( ll -> x_list == 0 )		5608732	6					
ANR	5608931	Condition	ll -> x_list == 0	76:12:2657:2671	5608732	0	True				
ANR	5608932	EqualityExpression	ll -> x_list == 0		5608732	0		==			
ANR	5608933	PtrMemberAccess	ll -> x_list		5608732	0					
ANR	5608934	Identifier	ll		5608732	0					
ANR	5608935	Identifier	x_list		5608732	1					
ANR	5608936	PrimaryExpression	0		5608732	1					
ANR	5608937	ExpressionStatement	y = ( yll == 0 ? ll -> y_break : yll -> start . y )	77:12:2686:2729	5608732	1	True				
ANR	5608938	AssignmentExpression	y = ( yll == 0 ? ll -> y_break : yll -> start . y )		5608732	0		=			
ANR	5608939	Identifier	y		5608732	0					
ANR	5608940	ConditionalExpression	yll == 0 ? ll -> y_break : yll -> start . y		5608732	1					
ANR	5608941	Condition	yll == 0		5608732	0					
ANR	5608942	EqualityExpression	yll == 0		5608732	0		==			
ANR	5608943	Identifier	yll		5608732	0					
ANR	5608944	PrimaryExpression	0		5608732	1					
ANR	5608945	PtrMemberAccess	ll -> y_break		5608732	1					
ANR	5608946	Identifier	ll		5608732	0					
ANR	5608947	Identifier	y_break		5608732	1					
ANR	5608948	MemberAccess	yll -> start . y		5608732	2					
ANR	5608949	PtrMemberAccess	yll -> start		5608732	0					
ANR	5608950	Identifier	yll		5608732	0					
ANR	5608951	Identifier	start		5608732	1					
ANR	5608952	Identifier	y		5608732	1					
ANR	5608953	ElseStatement	else		5608732	0					
ANR	5608954	CompoundStatement		49:13:1701:1701	5608732	0					
ANR	5608955	ExpressionStatement	y = y_bot + fixed_1	79:12:2758:2777	5608732	0	True				
ANR	5608956	AssignmentExpression	y = y_bot + fixed_1		5608732	0		=			
ANR	5608957	Identifier	y		5608732	0					
ANR	5608958	AdditiveExpression	y_bot + fixed_1		5608732	1		+			
ANR	5608959	Identifier	y_bot		5608732	0					
ANR	5608960	Identifier	fixed_1		5608732	1					
ANR	5608961	IfStatement	if ( yll != 0 )		5608732	1					
ANR	5608962	Condition	yll != 0	80:16:2795:2802	5608732	0	True				
ANR	5608963	EqualityExpression	yll != 0		5608732	0		!=			
ANR	5608964	Identifier	yll		5608732	0					
ANR	5608965	PrimaryExpression	0		5608732	1					
ANR	5608966	ExpressionStatement	"y = min ( y , yll -> start . y )"	81:16:2821:2845	5608732	1	True				
ANR	5608967	AssignmentExpression	"y = min ( y , yll -> start . y )"		5608732	0		=			
ANR	5608968	Identifier	y		5608732	0					
ANR	5608969	CallExpression	"min ( y , yll -> start . y )"		5608732	1					
ANR	5608970	Callee	min		5608732	0					
ANR	5608971	Identifier	min		5608732	0					
ANR	5608972	ArgumentList	y		5608732	1					
ANR	5608973	Argument	y		5608732	0					
ANR	5608974	Identifier	y		5608732	0					
ANR	5608975	Argument	yll -> start . y		5608732	1					
ANR	5608976	MemberAccess	yll -> start . y		5608732	0					
ANR	5608977	PtrMemberAccess	yll -> start		5608732	0					
ANR	5608978	Identifier	yll		5608732	0					
ANR	5608979	Identifier	start		5608732	1					
ANR	5608980	Identifier	y		5608732	1					
ANR	5608981	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		5608732	2					
ANR	5608982	ForInit	alp = ll -> x_list ;	82:17:2864:2880	5608732	0	True				
ANR	5608983	AssignmentExpression	alp = ll -> x_list		5608732	0		=			
ANR	5608984	Identifier	alp		5608732	0					
ANR	5608985	PtrMemberAccess	ll -> x_list		5608732	1					
ANR	5608986	Identifier	ll		5608732	0					
ANR	5608987	Identifier	x_list		5608732	1					
ANR	5608988	Condition	alp != 0	82:35:2882:2889	5608732	1	True				
ANR	5608989	EqualityExpression	alp != 0		5608732	0		!=			
ANR	5608990	Identifier	alp		5608732	0					
ANR	5608991	PrimaryExpression	0		5608732	1					
ANR	5608992	AssignmentExpression	alp = alp -> next	82:45:2892:2906	5608732	2	True	=			
ANR	5608993	Identifier	alp		5608732	0					
ANR	5608994	PtrMemberAccess	alp -> next		5608732	1					
ANR	5608995	Identifier	alp		5608732	0					
ANR	5608996	Identifier	next		5608732	1					
ANR	5608997	CompoundStatement		54:16:1884:1922	5608732	3					
ANR	5608998	IdentifierDeclStatement	"fixed yy = max ( alp -> fi . y3 , alp -> fi . y0 ) ;"	83:16:2927:2965	5608732	0	True				
ANR	5608999	IdentifierDecl	"yy = max ( alp -> fi . y3 , alp -> fi . y0 )"		5608732	0					
ANR	5609000	IdentifierDeclType	fixed		5608732	0					
ANR	5609001	Identifier	yy		5608732	1					
ANR	5609002	AssignmentExpression	"yy = max ( alp -> fi . y3 , alp -> fi . y0 )"		5608732	2		=			
ANR	5609003	Identifier	yy		5608732	0					
ANR	5609004	CallExpression	"max ( alp -> fi . y3 , alp -> fi . y0 )"		5608732	1					
ANR	5609005	Callee	max		5608732	0					
ANR	5609006	Identifier	max		5608732	0					
ANR	5609007	ArgumentList	alp -> fi . y3		5608732	1					
ANR	5609008	Argument	alp -> fi . y3		5608732	0					
ANR	5609009	MemberAccess	alp -> fi . y3		5608732	0					
ANR	5609010	PtrMemberAccess	alp -> fi		5608732	0					
ANR	5609011	Identifier	alp		5608732	0					
ANR	5609012	Identifier	fi		5608732	1					
ANR	5609013	Identifier	y3		5608732	1					
ANR	5609014	Argument	alp -> fi . y0		5608732	1					
ANR	5609015	MemberAccess	alp -> fi . y0		5608732	0					
ANR	5609016	PtrMemberAccess	alp -> fi		5608732	0					
ANR	5609017	Identifier	alp		5608732	0					
ANR	5609018	Identifier	fi		5608732	1					
ANR	5609019	Identifier	y0		5608732	1					
ANR	5609020	ExpressionStatement	"yy = max ( yy , alp -> end . y )"	85:16:2984:3008	5608732	1	True				
ANR	5609021	AssignmentExpression	"yy = max ( yy , alp -> end . y )"		5608732	0		=			
ANR	5609022	Identifier	yy		5608732	0					
ANR	5609023	CallExpression	"max ( yy , alp -> end . y )"		5608732	1					
ANR	5609024	Callee	max		5608732	0					
ANR	5609025	Identifier	max		5608732	0					
ANR	5609026	ArgumentList	yy		5608732	1					
ANR	5609027	Argument	yy		5608732	0					
ANR	5609028	Identifier	yy		5608732	0					
ANR	5609029	Argument	alp -> end . y		5608732	1					
ANR	5609030	MemberAccess	alp -> end . y		5608732	0					
ANR	5609031	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609032	Identifier	alp		5608732	0					
ANR	5609033	Identifier	end		5608732	1					
ANR	5609034	Identifier	y		5608732	1					
ANR	5609035	ExpressionStatement	"y = min ( y , yy )"	86:16:3080:3094	5608732	2	True				
ANR	5609036	AssignmentExpression	"y = min ( y , yy )"		5608732	0		=			
ANR	5609037	Identifier	y		5608732	0					
ANR	5609038	CallExpression	"min ( y , yy )"		5608732	1					
ANR	5609039	Callee	min		5608732	0					
ANR	5609040	Identifier	min		5608732	0					
ANR	5609041	ArgumentList	y		5608732	1					
ANR	5609042	Argument	y		5608732	0					
ANR	5609043	Identifier	y		5608732	0					
ANR	5609044	Argument	yy		5608732	1					
ANR	5609045	Identifier	yy		5608732	0					
ANR	5609046	WhileStatement	while ( yll != 0 && yll -> start . y == y )		5608732	7					
ANR	5609047	Condition	yll != 0 && yll -> start . y == y	92:15:3193:3221	5608732	0	True				
ANR	5609048	AndExpression	yll != 0 && yll -> start . y == y		5608732	0		&&			
ANR	5609049	EqualityExpression	yll != 0		5608732	0		!=			
ANR	5609050	Identifier	yll		5608732	0					
ANR	5609051	PrimaryExpression	0		5608732	1					
ANR	5609052	EqualityExpression	yll -> start . y == y		5608732	1		==			
ANR	5609053	MemberAccess	yll -> start . y		5608732	0					
ANR	5609054	PtrMemberAccess	yll -> start		5608732	0					
ANR	5609055	Identifier	yll		5608732	0					
ANR	5609056	Identifier	start		5608732	1					
ANR	5609057	Identifier	y		5608732	1					
ANR	5609058	Identifier	y		5608732	1					
ANR	5609059	CompoundStatement		64:12:2195:2225	5608732	1					
ANR	5609060	IdentifierDeclStatement	active_line * ynext = yll -> next ;	93:12:3238:3268	5608732	0	True				
ANR	5609061	IdentifierDecl	* ynext = yll -> next		5608732	0					
ANR	5609062	IdentifierDeclType	active_line *		5608732	0					
ANR	5609063	Identifier	ynext		5608732	1					
ANR	5609064	AssignmentExpression	* ynext = yll -> next		5608732	2		=			
ANR	5609065	Identifier	ynext		5608732	0					
ANR	5609066	PtrMemberAccess	yll -> next		5608732	1					
ANR	5609067	Identifier	yll		5608732	0					
ANR	5609068	Identifier	next		5608732	1					
ANR	5609069	IfStatement	if ( yll -> direction == DIR_HORIZONTAL )		5608732	1					
ANR	5609070	Condition	yll -> direction == DIR_HORIZONTAL	95:16:3324:3355	5608732	0	True				
ANR	5609071	EqualityExpression	yll -> direction == DIR_HORIZONTAL		5608732	0		==			
ANR	5609072	PtrMemberAccess	yll -> direction		5608732	0					
ANR	5609073	Identifier	yll		5608732	0					
ANR	5609074	Identifier	direction		5608732	1					
ANR	5609075	Identifier	DIR_HORIZONTAL		5608732	1					
ANR	5609076	CompoundStatement		66:50:2315:2315	5608732	1					
ANR	5609077	ExpressionStatement	"insert_h_new ( yll , ll )"	96:16:3376:3397	5608732	0	True				
ANR	5609078	CallExpression	"insert_h_new ( yll , ll )"		5608732	0					
ANR	5609079	Callee	insert_h_new		5608732	0					
ANR	5609080	Identifier	insert_h_new		5608732	0					
ANR	5609081	ArgumentList	yll		5608732	1					
ANR	5609082	Argument	yll		5608732	0					
ANR	5609083	Identifier	yll		5608732	0					
ANR	5609084	Argument	ll		5608732	1					
ANR	5609085	Identifier	ll		5608732	0					
ANR	5609086	ElseStatement	else		5608732	0					
ANR	5609087	ExpressionStatement	"insert_x_new ( yll , ll )"	98:16:3434:3455	5608732	0	True				
ANR	5609088	CallExpression	"insert_x_new ( yll , ll )"		5608732	0					
ANR	5609089	Callee	insert_x_new		5608732	0					
ANR	5609090	Identifier	insert_x_new		5608732	0					
ANR	5609091	ArgumentList	yll		5608732	1					
ANR	5609092	Argument	yll		5608732	0					
ANR	5609093	Identifier	yll		5608732	0					
ANR	5609094	Argument	ll		5608732	1					
ANR	5609095	Identifier	ll		5608732	0					
ANR	5609096	ExpressionStatement	yll = ynext	99:12:3469:3480	5608732	2	True				
ANR	5609097	AssignmentExpression	yll = ynext		5608732	0		=			
ANR	5609098	Identifier	yll		5608732	0					
ANR	5609099	Identifier	ynext		5608732	1					
ANR	5609100	ExpressionStatement	x = min_fixed	104:8:3542:3555	5608732	8	True				
ANR	5609101	AssignmentExpression	x = min_fixed		5608732	0		=			
ANR	5609102	Identifier	x		5608732	0					
ANR	5609103	Identifier	min_fixed		5608732	1					
ANR	5609104	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = nlp )		5608732	9					
ANR	5609105	ForInit	alp = ll -> x_list ;	105:13:3570:3586	5608732	0	True				
ANR	5609106	AssignmentExpression	alp = ll -> x_list		5608732	0		=			
ANR	5609107	Identifier	alp		5608732	0					
ANR	5609108	PtrMemberAccess	ll -> x_list		5608732	1					
ANR	5609109	Identifier	ll		5608732	0					
ANR	5609110	Identifier	x_list		5608732	1					
ANR	5609111	Condition	alp != 0	105:31:3588:3595	5608732	1	True				
ANR	5609112	EqualityExpression	alp != 0		5608732	0		!=			
ANR	5609113	Identifier	alp		5608732	0					
ANR	5609114	PrimaryExpression	0		5608732	1					
ANR	5609115	AssignmentExpression	alp = nlp	105:41:3598:3606	5608732	2	True	=			
ANR	5609116	Identifier	alp		5608732	0					
ANR	5609117	Identifier	nlp		5608732	1					
ANR	5609118	CompoundStatement		77:12:2580:2588	5608732	3					
ANR	5609119	IdentifierDeclStatement	fixed nx ;	106:12:3623:3631	5608732	0	True				
ANR	5609120	IdentifierDecl	nx		5608732	0					
ANR	5609121	IdentifierDeclType	fixed		5608732	0					
ANR	5609122	Identifier	nx		5608732	1					
ANR	5609123	ExpressionStatement	nlp = alp -> next	108:12:3646:3661	5608732	1	True				
ANR	5609124	AssignmentExpression	nlp = alp -> next		5608732	0		=			
ANR	5609125	Identifier	nlp		5608732	0					
ANR	5609126	PtrMemberAccess	alp -> next		5608732	1					
ANR	5609127	Identifier	alp		5608732	0					
ANR	5609128	Identifier	next		5608732	1					
ANR	5609129	Label	e :	109:10:3673:3674	5608732	2	True				
ANR	5609130	Identifier	e		5608732	0					
ANR	5609131	IfStatement	if ( alp -> end . y <= y || alp -> start . y == alp -> end . y )		5608732	3					
ANR	5609132	Condition	alp -> end . y <= y || alp -> start . y == alp -> end . y	109:16:3679:3723	5608732	0	True				
ANR	5609133	OrExpression	alp -> end . y <= y || alp -> start . y == alp -> end . y		5608732	0		||			
ANR	5609134	RelationalExpression	alp -> end . y <= y		5608732	0		<=			
ANR	5609135	MemberAccess	alp -> end . y		5608732	0					
ANR	5609136	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609137	Identifier	alp		5608732	0					
ANR	5609138	Identifier	end		5608732	1					
ANR	5609139	Identifier	y		5608732	1					
ANR	5609140	Identifier	y		5608732	1					
ANR	5609141	EqualityExpression	alp -> start . y == alp -> end . y		5608732	1		==			
ANR	5609142	MemberAccess	alp -> start . y		5608732	0					
ANR	5609143	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609144	Identifier	alp		5608732	0					
ANR	5609145	Identifier	start		5608732	1					
ANR	5609146	Identifier	y		5608732	1					
ANR	5609147	MemberAccess	alp -> end . y		5608732	1					
ANR	5609148	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609149	Identifier	alp		5608732	0					
ANR	5609150	Identifier	end		5608732	1					
ANR	5609151	Identifier	y		5608732	1					
ANR	5609152	CompoundStatement		80:63:2683:2683	5608732	1					
ANR	5609153	IfStatement	"if ( end_x_line ( alp , ll , true ) )"		5608732	0					
ANR	5609154	Condition	"end_x_line ( alp , ll , true )"	110:20:3748:3772	5608732	0	True				
ANR	5609155	CallExpression	"end_x_line ( alp , ll , true )"		5608732	0					
ANR	5609156	Callee	end_x_line		5608732	0					
ANR	5609157	Identifier	end_x_line		5608732	0					
ANR	5609158	ArgumentList	alp		5608732	1					
ANR	5609159	Argument	alp		5608732	0					
ANR	5609160	Identifier	alp		5608732	0					
ANR	5609161	Argument	ll		5608732	1					
ANR	5609162	Identifier	ll		5608732	0					
ANR	5609163	Argument	true		5608732	2					
ANR	5609164	Identifier	true		5608732	0					
ANR	5609165	ContinueStatement	continue ;	111:20:3795:3803	5608732	1	True				
ANR	5609166	IfStatement	if ( alp -> more_flattened )		5608732	1					
ANR	5609167	Condition	alp -> more_flattened	112:20:3825:3843	5608732	0	True				
ANR	5609168	PtrMemberAccess	alp -> more_flattened		5608732	0					
ANR	5609169	Identifier	alp		5608732	0					
ANR	5609170	Identifier	more_flattened		5608732	1					
ANR	5609171	IfStatement	if ( alp -> end . y <= y || alp -> start . y == alp -> end . y )		5608732	1					
ANR	5609172	Condition	alp -> end . y <= y || alp -> start . y == alp -> end . y	113:24:3870:3914	5608732	0	True				
ANR	5609173	OrExpression	alp -> end . y <= y || alp -> start . y == alp -> end . y		5608732	0		||			
ANR	5609174	RelationalExpression	alp -> end . y <= y		5608732	0		<=			
ANR	5609175	MemberAccess	alp -> end . y		5608732	0					
ANR	5609176	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609177	Identifier	alp		5608732	0					
ANR	5609178	Identifier	end		5608732	1					
ANR	5609179	Identifier	y		5608732	1					
ANR	5609180	Identifier	y		5608732	1					
ANR	5609181	EqualityExpression	alp -> start . y == alp -> end . y		5608732	1		==			
ANR	5609182	MemberAccess	alp -> start . y		5608732	0					
ANR	5609183	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609184	Identifier	alp		5608732	0					
ANR	5609185	Identifier	start		5608732	1					
ANR	5609186	Identifier	y		5608732	1					
ANR	5609187	MemberAccess	alp -> end . y		5608732	1					
ANR	5609188	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609189	Identifier	alp		5608732	0					
ANR	5609190	Identifier	end		5608732	1					
ANR	5609191	Identifier	y		5608732	1					
ANR	5609192	CompoundStatement		84:71:2874:2874	5608732	1					
ANR	5609193	ExpressionStatement	"code = step_al ( alp , true )"	114:24:3943:3968	5608732	0	True				
ANR	5609194	AssignmentExpression	"code = step_al ( alp , true )"		5608732	0		=			
ANR	5609195	Identifier	code		5608732	0					
ANR	5609196	CallExpression	"step_al ( alp , true )"		5608732	1					
ANR	5609197	Callee	step_al		5608732	0					
ANR	5609198	Identifier	step_al		5608732	0					
ANR	5609199	ArgumentList	alp		5608732	1					
ANR	5609200	Argument	alp		5608732	0					
ANR	5609201	Identifier	alp		5608732	0					
ANR	5609202	Argument	true		5608732	1					
ANR	5609203	Identifier	true		5608732	0					
ANR	5609204	IfStatement	if ( code < 0 )		5608732	1					
ANR	5609205	Condition	code < 0	115:28:3998:4005	5608732	0	True				
ANR	5609206	RelationalExpression	code < 0		5608732	0		<			
ANR	5609207	Identifier	code		5608732	0					
ANR	5609208	PrimaryExpression	0		5608732	1					
ANR	5609209	ReturnStatement	return code ;	116:28:4036:4047	5608732	1	True				
ANR	5609210	Identifier	code		5608732	0					
ANR	5609211	GotoStatement	goto e ;	118:16:4087:4093	5608732	2	True				
ANR	5609212	Identifier	e		5608732	0					
ANR	5609213	ExpressionStatement	"nx = alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"	120:12:4121:4197	5608732	4	True				
ANR	5609214	AssignmentExpression	"nx = alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"		5608732	0		=			
ANR	5609215	Identifier	nx		5608732	0					
ANR	5609216	AssignmentExpression	"alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"		5608732	1		=			
ANR	5609217	PtrMemberAccess	alp -> x_current		5608732	0					
ANR	5609218	Identifier	alp		5608732	0					
ANR	5609219	Identifier	x_current		5608732	1					
ANR	5609220	ConditionalExpression	"alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y )"		5608732	1					
ANR	5609221	Condition	alp -> start . y >= y		5608732	0					
ANR	5609222	RelationalExpression	alp -> start . y >= y		5608732	0		>=			
ANR	5609223	MemberAccess	alp -> start . y		5608732	0					
ANR	5609224	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609225	Identifier	alp		5608732	0					
ANR	5609226	Identifier	start		5608732	1					
ANR	5609227	Identifier	y		5608732	1					
ANR	5609228	Identifier	y		5608732	1					
ANR	5609229	MemberAccess	alp -> start . x		5608732	1					
ANR	5609230	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609231	Identifier	alp		5608732	0					
ANR	5609232	Identifier	start		5608732	1					
ANR	5609233	Identifier	x		5608732	1					
ANR	5609234	CallExpression	"AL_X_AT_Y ( alp , y )"		5608732	2					
ANR	5609235	Callee	AL_X_AT_Y		5608732	0					
ANR	5609236	Identifier	AL_X_AT_Y		5608732	0					
ANR	5609237	ArgumentList	alp		5608732	1					
ANR	5609238	Argument	alp		5608732	0					
ANR	5609239	Identifier	alp		5608732	0					
ANR	5609240	Argument	y		5608732	1					
ANR	5609241	Identifier	y		5608732	0					
ANR	5609242	IfStatement	if ( nx < x )		5608732	5					
ANR	5609243	Condition	nx < x	121:16:4215:4220	5608732	0	True				
ANR	5609244	RelationalExpression	nx < x		5608732	0		<			
ANR	5609245	Identifier	nx		5608732	0					
ANR	5609246	Identifier	x		5608732	1					
ANR	5609247	CompoundStatement		94:16:3257:3279	5608732	1					
ANR	5609248	IdentifierDeclStatement	active_line * ilp = alp ;	123:16:4300:4322	5608732	0	True				
ANR	5609249	IdentifierDecl	* ilp = alp		5608732	0					
ANR	5609250	IdentifierDeclType	active_line *		5608732	0					
ANR	5609251	Identifier	ilp		5608732	1					
ANR	5609252	AssignmentExpression	* ilp = alp		5608732	2		=			
ANR	5609253	Identifier	alp		5608732	0					
ANR	5609254	Identifier	alp		5608732	1					
ANR	5609255	WhileStatement	while ( nx < ( ilp = ilp -> prev ) -> x_current )		5608732	1					
ANR	5609256	Condition	nx < ( ilp = ilp -> prev ) -> x_current	125:23:4348:4380	5608732	0	True				
ANR	5609257	RelationalExpression	nx < ( ilp = ilp -> prev ) -> x_current		5608732	0		<			
ANR	5609258	Identifier	nx		5608732	0					
ANR	5609259	PtrMemberAccess	( ilp = ilp -> prev ) -> x_current		5608732	1					
ANR	5609260	AssignmentExpression	ilp = ilp -> prev		5608732	0		=			
ANR	5609261	Identifier	ilp		5608732	0					
ANR	5609262	PtrMemberAccess	ilp -> prev		5608732	1					
ANR	5609263	Identifier	ilp		5608732	0					
ANR	5609264	Identifier	prev		5608732	1					
ANR	5609265	Identifier	x_current		5608732	1					
ANR	5609266	ExpressionStatement	DO_NOTHING	126:20:4403:4413	5608732	1	True				
ANR	5609267	Identifier	DO_NOTHING		5608732	0					
ANR	5609268	ExpressionStatement	alp -> prev -> next = alp -> next	128:16:4498:4525	5608732	2	True				
ANR	5609269	AssignmentExpression	alp -> prev -> next = alp -> next		5608732	0		=			
ANR	5609270	PtrMemberAccess	alp -> prev -> next		5608732	0					
ANR	5609271	PtrMemberAccess	alp -> prev		5608732	0					
ANR	5609272	Identifier	alp		5608732	0					
ANR	5609273	Identifier	prev		5608732	1					
ANR	5609274	Identifier	next		5608732	1					
ANR	5609275	PtrMemberAccess	alp -> next		5608732	1					
ANR	5609276	Identifier	alp		5608732	0					
ANR	5609277	Identifier	next		5608732	1					
ANR	5609278	IfStatement	if ( alp -> next )		5608732	3					
ANR	5609279	Condition	alp -> next	129:20:4547:4555	5608732	0	True				
ANR	5609280	PtrMemberAccess	alp -> next		5608732	0					
ANR	5609281	Identifier	alp		5608732	0					
ANR	5609282	Identifier	next		5608732	1					
ANR	5609283	ExpressionStatement	alp -> next -> prev = alp -> prev	130:20:4578:4605	5608732	1	True				
ANR	5609284	AssignmentExpression	alp -> next -> prev = alp -> prev		5608732	0		=			
ANR	5609285	PtrMemberAccess	alp -> next -> prev		5608732	0					
ANR	5609286	PtrMemberAccess	alp -> next		5608732	0					
ANR	5609287	Identifier	alp		5608732	0					
ANR	5609288	Identifier	next		5608732	1					
ANR	5609289	Identifier	prev		5608732	1					
ANR	5609290	PtrMemberAccess	alp -> prev		5608732	1					
ANR	5609291	Identifier	alp		5608732	0					
ANR	5609292	Identifier	prev		5608732	1					
ANR	5609293	IfStatement	if ( ilp -> next )		5608732	4					
ANR	5609294	Condition	ilp -> next	131:20:4627:4635	5608732	0	True				
ANR	5609295	PtrMemberAccess	ilp -> next		5608732	0					
ANR	5609296	Identifier	ilp		5608732	0					
ANR	5609297	Identifier	next		5608732	1					
ANR	5609298	ExpressionStatement	ilp -> next -> prev = alp	132:20:4658:4679	5608732	1	True				
ANR	5609299	AssignmentExpression	ilp -> next -> prev = alp		5608732	0		=			
ANR	5609300	PtrMemberAccess	ilp -> next -> prev		5608732	0					
ANR	5609301	PtrMemberAccess	ilp -> next		5608732	0					
ANR	5609302	Identifier	ilp		5608732	0					
ANR	5609303	Identifier	next		5608732	1					
ANR	5609304	Identifier	prev		5608732	1					
ANR	5609305	Identifier	alp		5608732	1					
ANR	5609306	ExpressionStatement	alp -> next = ilp -> next	133:16:4697:4718	5608732	5	True				
ANR	5609307	AssignmentExpression	alp -> next = ilp -> next		5608732	0		=			
ANR	5609308	PtrMemberAccess	alp -> next		5608732	0					
ANR	5609309	Identifier	alp		5608732	0					
ANR	5609310	Identifier	next		5608732	1					
ANR	5609311	PtrMemberAccess	ilp -> next		5608732	1					
ANR	5609312	Identifier	ilp		5608732	0					
ANR	5609313	Identifier	next		5608732	1					
ANR	5609314	ExpressionStatement	ilp -> next = alp	134:16:4736:4751	5608732	6	True				
ANR	5609315	AssignmentExpression	ilp -> next = alp		5608732	0		=			
ANR	5609316	PtrMemberAccess	ilp -> next		5608732	0					
ANR	5609317	Identifier	ilp		5608732	0					
ANR	5609318	Identifier	next		5608732	1					
ANR	5609319	Identifier	alp		5608732	1					
ANR	5609320	ExpressionStatement	alp -> prev = ilp	135:16:4769:4784	5608732	7	True				
ANR	5609321	AssignmentExpression	alp -> prev = ilp		5608732	0		=			
ANR	5609322	PtrMemberAccess	alp -> prev		5608732	0					
ANR	5609323	Identifier	alp		5608732	0					
ANR	5609324	Identifier	prev		5608732	1					
ANR	5609325	Identifier	ilp		5608732	1					
ANR	5609326	ContinueStatement	continue ;	136:16:4802:4810	5608732	8	True				
ANR	5609327	ExpressionStatement	x = nx	138:12:4838:4844	5608732	6	True				
ANR	5609328	AssignmentExpression	x = nx		5608732	0		=			
ANR	5609329	Identifier	x		5608732	0					
ANR	5609330	Identifier	nx		5608732	1					
ANR	5609331	IfStatement	if ( y > y_top || y >= y_limit )		5608732	10					
ANR	5609332	Condition	y > y_top || y >= y_limit	141:12:4869:4893	5608732	0	True				
ANR	5609333	OrExpression	y > y_top || y >= y_limit		5608732	0		||			
ANR	5609334	RelationalExpression	y > y_top		5608732	0		>			
ANR	5609335	Identifier	y		5608732	0					
ANR	5609336	Identifier	y_top		5608732	1					
ANR	5609337	RelationalExpression	y >= y_limit		5608732	1		>=			
ANR	5609338	Identifier	y		5608732	0					
ANR	5609339	Identifier	y_limit		5608732	1					
ANR	5609340	CompoundStatement		114:12:3937:3961	5608732	1					
ANR	5609341	IdentifierDeclStatement	const coord_range_t * pcr ;	143:12:4980:5004	5608732	0	True				
ANR	5609342	IdentifierDecl	* pcr		5608732	0					
ANR	5609343	IdentifierDeclType	const coord_range_t *		5608732	0					
ANR	5609344	Identifier	pcr		5608732	1					
ANR	5609345	ForStatement	for ( pcr = rlist . first . next ; pcr != & rlist . last ; pcr = pcr -> next )		5608732	1					
ANR	5609346	ForInit	pcr = rlist . first . next ;	147:17:5067:5089	5608732	0	True				
ANR	5609347	AssignmentExpression	pcr = rlist . first . next		5608732	0		=			
ANR	5609348	Identifier	pcr		5608732	0					
ANR	5609349	MemberAccess	rlist . first . next		5608732	1					
ANR	5609350	MemberAccess	rlist . first		5608732	0					
ANR	5609351	Identifier	rlist		5608732	0					
ANR	5609352	Identifier	first		5608732	1					
ANR	5609353	Identifier	next		5608732	1					
ANR	5609354	Condition	pcr != & rlist . last	147:41:5091:5108	5608732	1	True				
ANR	5609355	EqualityExpression	pcr != & rlist . last		5608732	0		!=			
ANR	5609356	Identifier	pcr		5608732	0					
ANR	5609357	UnaryOperationExpression	& rlist . last		5608732	1					
ANR	5609358	UnaryOperator	&		5608732	0					
ANR	5609359	MemberAccess	rlist . last		5608732	1					
ANR	5609360	Identifier	rlist		5608732	0					
ANR	5609361	Identifier	last		5608732	1					
ANR	5609362	AssignmentExpression	pcr = pcr -> next	148:17:5128:5142	5608732	2	True	=			
ANR	5609363	Identifier	pcr		5608732	0					
ANR	5609364	PtrMemberAccess	pcr -> next		5608732	1					
ANR	5609365	Identifier	pcr		5608732	0					
ANR	5609366	Identifier	next		5608732	1					
ANR	5609367	CompoundStatement		121:16:4138:4172	5608732	3					
ANR	5609368	IdentifierDeclStatement	"int x0 = pcr -> rmin , x1 = pcr -> rmax ;"	150:16:5181:5215	5608732	0	True				
ANR	5609369	IdentifierDecl	x0 = pcr -> rmin		5608732	0					
ANR	5609370	IdentifierDeclType	int		5608732	0					
ANR	5609371	Identifier	x0		5608732	1					
ANR	5609372	AssignmentExpression	x0 = pcr -> rmin		5608732	2		=			
ANR	5609373	Identifier	x0		5608732	0					
ANR	5609374	PtrMemberAccess	pcr -> rmin		5608732	1					
ANR	5609375	Identifier	pcr		5608732	0					
ANR	5609376	Identifier	rmin		5608732	1					
ANR	5609377	IdentifierDecl	x1 = pcr -> rmax		5608732	1					
ANR	5609378	IdentifierDeclType	int		5608732	0					
ANR	5609379	Identifier	x1		5608732	1					
ANR	5609380	AssignmentExpression	x1 = pcr -> rmax		5608732	2		=			
ANR	5609381	Identifier	x1		5608732	0					
ANR	5609382	PtrMemberAccess	pcr -> rmax		5608732	1					
ANR	5609383	Identifier	pcr		5608732	0					
ANR	5609384	Identifier	rmax		5608732	1					
ANR	5609385	ExpressionStatement	"if_debug4m ( 'Q' , ll -> memory , ""[Qr]draw 0x%lx: [%d,%d),%d\\n"" , ( ulong ) pcr , x0 , x1 , y0 )"	152:16:5234:5344	5608732	1	True				
ANR	5609386	CallExpression	"if_debug4m ( 'Q' , ll -> memory , ""[Qr]draw 0x%lx: [%d,%d),%d\\n"" , ( ulong ) pcr , x0 , x1 , y0 )"		5608732	0					
ANR	5609387	Callee	if_debug4m		5608732	0					
ANR	5609388	Identifier	if_debug4m		5608732	0					
ANR	5609389	ArgumentList	'Q'		5608732	1					
ANR	5609390	Argument	'Q'		5608732	0					
ANR	5609391	PrimaryExpression	'Q'		5608732	0					
ANR	5609392	Argument	ll -> memory		5608732	1					
ANR	5609393	PtrMemberAccess	ll -> memory		5608732	0					
ANR	5609394	Identifier	ll		5608732	0					
ANR	5609395	Identifier	memory		5608732	1					
ANR	5609396	Argument	"""[Qr]draw 0x%lx: [%d,%d),%d\\n"""		5608732	2					
ANR	5609397	PrimaryExpression	"""[Qr]draw 0x%lx: [%d,%d),%d\\n"""		5608732	0					
ANR	5609398	Argument	( ulong ) pcr		5608732	3					
ANR	5609399	CastExpression	( ulong ) pcr		5608732	0					
ANR	5609400	CastTarget	ulong		5608732	0					
ANR	5609401	Identifier	pcr		5608732	1					
ANR	5609402	Argument	x0		5608732	4					
ANR	5609403	Identifier	x0		5608732	0					
ANR	5609404	Argument	x1		5608732	5					
ANR	5609405	Identifier	x1		5608732	0					
ANR	5609406	Argument	y0		5608732	6					
ANR	5609407	Identifier	y0		5608732	0					
ANR	5609408	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"	154:16:5362:5420	5608732	2	True				
ANR	5609409	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"		5608732	0		=			
ANR	5609410	Identifier	code		5608732	0					
ANR	5609411	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"		5608732	1					
ANR	5609412	Callee	LOOP_FILL_RECTANGLE_DIRECT		5608732	0					
ANR	5609413	Identifier	LOOP_FILL_RECTANGLE_DIRECT		5608732	0					
ANR	5609414	ArgumentList	& fo		5608732	1					
ANR	5609415	Argument	& fo		5608732	0					
ANR	5609416	UnaryOperationExpression	& fo		5608732	0					
ANR	5609417	UnaryOperator	&		5608732	0					
ANR	5609418	Identifier	fo		5608732	1					
ANR	5609419	Argument	x0		5608732	1					
ANR	5609420	Identifier	x0		5608732	0					
ANR	5609421	Argument	y0		5608732	2					
ANR	5609422	Identifier	y0		5608732	0					
ANR	5609423	Argument	x1 - x0		5608732	3					
ANR	5609424	AdditiveExpression	x1 - x0		5608732	0		-			
ANR	5609425	Identifier	x1		5608732	0					
ANR	5609426	Identifier	x0		5608732	1					
ANR	5609427	Argument	1		5608732	4					
ANR	5609428	PrimaryExpression	1		5608732	0					
ANR	5609429	ExpressionStatement	"if_debug3m ( 'F' , ll -> memory , ""[F]drawing [%d:%d),%d\\n"" , x0 , x1 , y0 )"	155:16:5438:5504	5608732	3	True				
ANR	5609430	CallExpression	"if_debug3m ( 'F' , ll -> memory , ""[F]drawing [%d:%d),%d\\n"" , x0 , x1 , y0 )"		5608732	0					
ANR	5609431	Callee	if_debug3m		5608732	0					
ANR	5609432	Identifier	if_debug3m		5608732	0					
ANR	5609433	ArgumentList	'F'		5608732	1					
ANR	5609434	Argument	'F'		5608732	0					
ANR	5609435	PrimaryExpression	'F'		5608732	0					
ANR	5609436	Argument	ll -> memory		5608732	1					
ANR	5609437	PtrMemberAccess	ll -> memory		5608732	0					
ANR	5609438	Identifier	ll		5608732	0					
ANR	5609439	Identifier	memory		5608732	1					
ANR	5609440	Argument	"""[F]drawing [%d:%d),%d\\n"""		5608732	2					
ANR	5609441	PrimaryExpression	"""[F]drawing [%d:%d),%d\\n"""		5608732	0					
ANR	5609442	Argument	x0		5608732	3					
ANR	5609443	Identifier	x0		5608732	0					
ANR	5609444	Argument	x1		5608732	4					
ANR	5609445	Identifier	x1		5608732	0					
ANR	5609446	Argument	y0		5608732	5					
ANR	5609447	Identifier	y0		5608732	0					
ANR	5609448	IfStatement	if ( code < 0 )		5608732	4					
ANR	5609449	Condition	code < 0	156:20:5526:5533	5608732	0	True				
ANR	5609450	RelationalExpression	code < 0		5608732	0		<			
ANR	5609451	Identifier	code		5608732	0					
ANR	5609452	PrimaryExpression	0		5608732	1					
ANR	5609453	GotoStatement	goto done ;	157:20:5556:5565	5608732	1	True				
ANR	5609454	Identifier	done		5608732	0					
ANR	5609455	ExpressionStatement	range_list_reset ( & rlist )	159:12:5593:5617	5608732	2	True				
ANR	5609456	CallExpression	range_list_reset ( & rlist )		5608732	0					
ANR	5609457	Callee	range_list_reset		5608732	0					
ANR	5609458	Identifier	range_list_reset		5608732	0					
ANR	5609459	ArgumentList	& rlist		5608732	1					
ANR	5609460	Argument	& rlist		5608732	0					
ANR	5609461	UnaryOperationExpression	& rlist		5608732	0					
ANR	5609462	UnaryOperator	&		5608732	0					
ANR	5609463	Identifier	rlist		5608732	1					
ANR	5609464	IfStatement	if ( y >= y_limit )		5608732	3					
ANR	5609465	Condition	y >= y_limit	163:16:5698:5709	5608732	0	True				
ANR	5609466	RelationalExpression	y >= y_limit		5608732	0		>=			
ANR	5609467	Identifier	y		5608732	0					
ANR	5609468	Identifier	y_limit		5608732	1					
ANR	5609469	BreakStatement	break ;	164:16:5728:5733	5608732	1	True				
ANR	5609470	ExpressionStatement	y0 = fixed2int ( y )	168:12:5792:5809	5608732	4	True				
ANR	5609471	AssignmentExpression	y0 = fixed2int ( y )		5608732	0		=			
ANR	5609472	Identifier	y0		5608732	0					
ANR	5609473	CallExpression	fixed2int ( y )		5608732	1					
ANR	5609474	Callee	fixed2int		5608732	0					
ANR	5609475	Identifier	fixed2int		5608732	0					
ANR	5609476	ArgumentList	y		5608732	1					
ANR	5609477	Argument	y		5608732	0					
ANR	5609478	Identifier	y		5608732	0					
ANR	5609479	IfStatement	if ( fixed_fraction ( y ) < y_frac_min )		5608732	5					
ANR	5609480	Condition	fixed_fraction ( y ) < y_frac_min	169:16:5827:5856	5608732	0	True				
ANR	5609481	RelationalExpression	fixed_fraction ( y ) < y_frac_min		5608732	0		<			
ANR	5609482	CallExpression	fixed_fraction ( y )		5608732	0					
ANR	5609483	Callee	fixed_fraction		5608732	0					
ANR	5609484	Identifier	fixed_fraction		5608732	0					
ANR	5609485	ArgumentList	y		5608732	1					
ANR	5609486	Argument	y		5608732	0					
ANR	5609487	Identifier	y		5608732	0					
ANR	5609488	Identifier	y_frac_min		5608732	1					
ANR	5609489	ExpressionStatement	-- y0	170:16:5875:5879	5608732	1	True				
ANR	5609490	UnaryExpression	-- y0		5608732	0					
ANR	5609491	IncDec	--		5608732	0					
ANR	5609492	Identifier	y0		5608732	1					
ANR	5609493	ExpressionStatement	y_bot = int2fixed ( y0 ) + y_frac_min	171:12:5893:5927	5608732	6	True				
ANR	5609494	AssignmentExpression	y_bot = int2fixed ( y0 ) + y_frac_min		5608732	0		=			
ANR	5609495	Identifier	y_bot		5608732	0					
ANR	5609496	AdditiveExpression	int2fixed ( y0 ) + y_frac_min		5608732	1		+			
ANR	5609497	CallExpression	int2fixed ( y0 )		5608732	0					
ANR	5609498	Callee	int2fixed		5608732	0					
ANR	5609499	Identifier	int2fixed		5608732	0					
ANR	5609500	ArgumentList	y0		5608732	1					
ANR	5609501	Argument	y0		5608732	0					
ANR	5609502	Identifier	y0		5608732	0					
ANR	5609503	Identifier	y_frac_min		5608732	1					
ANR	5609504	ExpressionStatement	y_top = int2fixed ( y0 ) + y_frac_max	172:12:5941:5975	5608732	7	True				
ANR	5609505	AssignmentExpression	y_top = int2fixed ( y0 ) + y_frac_max		5608732	0		=			
ANR	5609506	Identifier	y_top		5608732	0					
ANR	5609507	AdditiveExpression	int2fixed ( y0 ) + y_frac_max		5608732	1		+			
ANR	5609508	CallExpression	int2fixed ( y0 )		5608732	0					
ANR	5609509	Callee	int2fixed		5608732	0					
ANR	5609510	Identifier	int2fixed		5608732	0					
ANR	5609511	ArgumentList	y0		5608732	1					
ANR	5609512	Argument	y0		5608732	0					
ANR	5609513	Identifier	y0		5608732	0					
ANR	5609514	Identifier	y_frac_max		5608732	1					
ANR	5609515	ExpressionStatement	new_band = true	173:12:5989:6004	5608732	8	True				
ANR	5609516	AssignmentExpression	new_band = true		5608732	0		=			
ANR	5609517	Identifier	new_band		5608732	0					
ANR	5609518	Identifier	true		5608732	1					
ANR	5609519	ElseStatement	else		5608732	0					
ANR	5609520	ExpressionStatement	new_band = false	175:12:6033:6049	5608732	0	True				
ANR	5609521	AssignmentExpression	new_band = false		5608732	0		=			
ANR	5609522	Identifier	new_band		5608732	0					
ANR	5609523	Identifier	false		5608732	1					
ANR	5609524	IfStatement	if ( y <= y_top )		5608732	11					
ANR	5609525	Condition	y <= y_top	177:12:6064:6073	5608732	0	True				
ANR	5609526	RelationalExpression	y <= y_top		5608732	0		<=			
ANR	5609527	Identifier	y		5608732	0					
ANR	5609528	Identifier	y_top		5608732	1					
ANR	5609529	CompoundStatement		155:12:5336:5347	5608732	1					
ANR	5609530	IdentifierDeclStatement	fixed y_min ;	184:12:6379:6390	5608732	0	True				
ANR	5609531	IdentifierDecl	y_min		5608732	0					
ANR	5609532	IdentifierDeclType	fixed		5608732	0					
ANR	5609533	Identifier	y_min		5608732	1					
ANR	5609534	IfStatement	if ( new_band )		5608732	1					
ANR	5609535	Condition	new_band	186:16:6409:6416	5608732	0	True				
ANR	5609536	Identifier	new_band		5608732	0					
ANR	5609537	CompoundStatement		158:16:5394:5408	5608732	1					
ANR	5609538	IdentifierDeclStatement	int inside = 0 ;	187:16:6437:6451	5608732	0	True				
ANR	5609539	IdentifierDecl	inside = 0		5608732	0					
ANR	5609540	IdentifierDeclType	int		5608732	0					
ANR	5609541	Identifier	inside		5608732	1					
ANR	5609542	AssignmentExpression	inside = 0		5608732	2		=			
ANR	5609543	Identifier	inside		5608732	0					
ANR	5609544	PrimaryExpression	0		5608732	1					
ANR	5609545	ExpressionStatement	INCR ( band )	189:16:6470:6480	5608732	1	True				
ANR	5609546	CallExpression	INCR ( band )		5608732	0					
ANR	5609547	Callee	INCR		5608732	0					
ANR	5609548	Identifier	INCR		5608732	0					
ANR	5609549	ArgumentList	band		5608732	1					
ANR	5609550	Argument	band		5608732	0					
ANR	5609551	Identifier	band		5608732	0					
ANR	5609552	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		5608732	2					
ANR	5609553	ForInit	alp = ll -> x_list ;	190:21:6503:6519	5608732	0	True				
ANR	5609554	AssignmentExpression	alp = ll -> x_list		5608732	0		=			
ANR	5609555	Identifier	alp		5608732	0					
ANR	5609556	PtrMemberAccess	ll -> x_list		5608732	1					
ANR	5609557	Identifier	ll		5608732	0					
ANR	5609558	Identifier	x_list		5608732	1					
ANR	5609559	Condition	alp != 0	190:39:6521:6528	5608732	1	True				
ANR	5609560	EqualityExpression	alp != 0		5608732	0		!=			
ANR	5609561	Identifier	alp		5608732	0					
ANR	5609562	PrimaryExpression	0		5608732	1					
ANR	5609563	AssignmentExpression	alp = alp -> next	190:49:6531:6545	5608732	2	True	=			
ANR	5609564	Identifier	alp		5608732	0					
ANR	5609565	PtrMemberAccess	alp -> next		5608732	1					
ANR	5609566	Identifier	alp		5608732	0					
ANR	5609567	Identifier	next		5608732	1					
ANR	5609568	CompoundStatement		162:20:5527:5587	5608732	3					
ANR	5609569	IdentifierDeclStatement	int x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left ) ;	191:20:6570:6630	5608732	0	True				
ANR	5609570	IdentifierDecl	x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left )		5608732	0					
ANR	5609571	IdentifierDeclType	int		5608732	0					
ANR	5609572	Identifier	x0		5608732	1					
ANR	5609573	AssignmentExpression	x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left )		5608732	2		=			
ANR	5609574	Identifier	x0		5608732	0					
ANR	5609575	CallExpression	fixed2int_pixround ( alp -> x_current - fo . adjust_left )		5608732	1					
ANR	5609576	Callee	fixed2int_pixround		5608732	0					
ANR	5609577	Identifier	fixed2int_pixround		5608732	0					
ANR	5609578	ArgumentList	alp -> x_current - fo . adjust_left		5608732	1					
ANR	5609579	Argument	alp -> x_current - fo . adjust_left		5608732	0					
ANR	5609580	AdditiveExpression	alp -> x_current - fo . adjust_left		5608732	0		-			
ANR	5609581	PtrMemberAccess	alp -> x_current		5608732	0					
ANR	5609582	Identifier	alp		5608732	0					
ANR	5609583	Identifier	x_current		5608732	1					
ANR	5609584	MemberAccess	fo . adjust_left		5608732	1					
ANR	5609585	Identifier	fo		5608732	0					
ANR	5609586	Identifier	adjust_left		5608732	1					
ANR	5609587	ForStatement	for ( ; ; )		5608732	1					
ANR	5609588	CompoundStatement		164:29:5619:5619	5608732	0					
ANR	5609589	ExpressionStatement	"print_al ( ll -> memory , ""step"" , alp )"	195:24:6748:6781	5608732	0	True				
ANR	5609590	CallExpression	"print_al ( ll -> memory , ""step"" , alp )"		5608732	0					
ANR	5609591	Callee	print_al		5608732	0					
ANR	5609592	Identifier	print_al		5608732	0					
ANR	5609593	ArgumentList	ll -> memory		5608732	1					
ANR	5609594	Argument	ll -> memory		5608732	0					
ANR	5609595	PtrMemberAccess	ll -> memory		5608732	0					
ANR	5609596	Identifier	ll		5608732	0					
ANR	5609597	Identifier	memory		5608732	1					
ANR	5609598	Argument	"""step"""		5608732	1					
ANR	5609599	PrimaryExpression	"""step"""		5608732	0					
ANR	5609600	Argument	alp		5608732	2					
ANR	5609601	Identifier	alp		5608732	0					
ANR	5609602	ExpressionStatement	INCR ( band_step )	196:24:6807:6822	5608732	1	True				
ANR	5609603	CallExpression	INCR ( band_step )		5608732	0					
ANR	5609604	Callee	INCR		5608732	0					
ANR	5609605	Identifier	INCR		5608732	0					
ANR	5609606	ArgumentList	band_step		5608732	1					
ANR	5609607	Argument	band_step		5608732	0					
ANR	5609608	Identifier	band_step		5608732	0					
ANR	5609609	ExpressionStatement	inside += alp -> direction	197:24:6848:6872	5608732	2	True				
ANR	5609610	AssignmentExpression	inside += alp -> direction		5608732	0		+=			
ANR	5609611	Identifier	inside		5608732	0					
ANR	5609612	PtrMemberAccess	alp -> direction		5608732	1					
ANR	5609613	Identifier	alp		5608732	0					
ANR	5609614	Identifier	direction		5608732	1					
ANR	5609615	IfStatement	"if ( ! INSIDE_PATH_P ( inside , fo . rule ) )"		5608732	3					
ANR	5609616	Condition	"! INSIDE_PATH_P ( inside , fo . rule )"	198:28:6902:6932	5608732	0	True				
ANR	5609617	UnaryOperationExpression	"! INSIDE_PATH_P ( inside , fo . rule )"		5608732	0					
ANR	5609618	UnaryOperator	!		5608732	0					
ANR	5609619	CallExpression	"INSIDE_PATH_P ( inside , fo . rule )"		5608732	1					
ANR	5609620	Callee	INSIDE_PATH_P		5608732	0					
ANR	5609621	Identifier	INSIDE_PATH_P		5608732	0					
ANR	5609622	ArgumentList	inside		5608732	1					
ANR	5609623	Argument	inside		5608732	0					
ANR	5609624	Identifier	inside		5608732	0					
ANR	5609625	Argument	fo . rule		5608732	1					
ANR	5609626	MemberAccess	fo . rule		5608732	0					
ANR	5609627	Identifier	fo		5608732	0					
ANR	5609628	Identifier	rule		5608732	1					
ANR	5609629	BreakStatement	break ;	199:28:6963:6968	5608732	1	True				
ANR	5609630	IfStatement	if ( ( alp = alp -> next ) == 0 )		5608732	4					
ANR	5609631	Condition	( alp = alp -> next ) == 0	206:28:7319:7340	5608732	0	True				
ANR	5609632	EqualityExpression	( alp = alp -> next ) == 0		5608732	0		==			
ANR	5609633	AssignmentExpression	alp = alp -> next		5608732	0		=			
ANR	5609634	Identifier	alp		5608732	0					
ANR	5609635	PtrMemberAccess	alp -> next		5608732	1					
ANR	5609636	Identifier	alp		5608732	0					
ANR	5609637	Identifier	next		5608732	1					
ANR	5609638	PrimaryExpression	0		5608732	1					
ANR	5609639	GotoStatement	goto out ;	207:28:7371:7379	5608732	1	True				
ANR	5609640	Identifier	out		5608732	0					
ANR	5609641	ExpressionStatement	"code = range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"	210:20:7506:7694	5608732	2	True				
ANR	5609642	AssignmentExpression	"code = range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"		5608732	0		=			
ANR	5609643	Identifier	code		5608732	0					
ANR	5609644	CallExpression	"range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"		5608732	1					
ANR	5609645	Callee	range_list_add		5608732	0					
ANR	5609646	Identifier	range_list_add		5608732	0					
ANR	5609647	ArgumentList	& rlist		5608732	1					
ANR	5609648	Argument	& rlist		5608732	0					
ANR	5609649	UnaryOperationExpression	& rlist		5608732	0					
ANR	5609650	UnaryOperator	&		5608732	0					
ANR	5609651	Identifier	rlist		5608732	1					
ANR	5609652	Argument	x0		5608732	1					
ANR	5609653	Identifier	x0		5608732	0					
ANR	5609654	Argument	fixed2int_rounded ( alp -> x_current + fo . adjust_right )		5608732	2					
ANR	5609655	CallExpression	fixed2int_rounded ( alp -> x_current + fo . adjust_right )		5608732	0					
ANR	5609656	Callee	fixed2int_rounded		5608732	0					
ANR	5609657	Identifier	fixed2int_rounded		5608732	0					
ANR	5609658	ArgumentList	alp -> x_current + fo . adjust_right		5608732	1					
ANR	5609659	Argument	alp -> x_current + fo . adjust_right		5608732	0					
ANR	5609660	AdditiveExpression	alp -> x_current + fo . adjust_right		5608732	0		+			
ANR	5609661	PtrMemberAccess	alp -> x_current		5608732	0					
ANR	5609662	Identifier	alp		5608732	0					
ANR	5609663	Identifier	x_current		5608732	1					
ANR	5609664	MemberAccess	fo . adjust_right		5608732	1					
ANR	5609665	Identifier	fo		5608732	0					
ANR	5609666	Identifier	adjust_right		5608732	1					
ANR	5609667	IfStatement	if ( code < 0 )		5608732	3					
ANR	5609668	Condition	code < 0	213:24:7720:7727	5608732	0	True				
ANR	5609669	RelationalExpression	code < 0		5608732	0		<			
ANR	5609670	Identifier	code		5608732	0					
ANR	5609671	PrimaryExpression	0		5608732	1					
ANR	5609672	GotoStatement	goto done ;	214:24:7754:7763	5608732	1	True				
ANR	5609673	Identifier	done		5608732	0					
ANR	5609674	Label	out :	216:12:7795:7798	5608732	3	True				
ANR	5609675	Identifier	out		5608732	0					
ANR	5609676	ExpressionStatement	y_min = min_fixed	217:16:7816:7833	5608732	4	True				
ANR	5609677	AssignmentExpression	y_min = min_fixed		5608732	0		=			
ANR	5609678	Identifier	y_min		5608732	0					
ANR	5609679	Identifier	min_fixed		5608732	1					
ANR	5609680	ElseStatement	else		5608732	0					
ANR	5609681	ExpressionStatement	y_min = y	219:16:7870:7879	5608732	0	True				
ANR	5609682	AssignmentExpression	y_min = y		5608732	0		=			
ANR	5609683	Identifier	y_min		5608732	0					
ANR	5609684	Identifier	y		5608732	1					
ANR	5609685	ForStatement	for ( alp = ll -> h_list0 ; alp != NULL ; alp = alp -> next )		5608732	2					
ANR	5609686	ForInit	alp = ll -> h_list0 ;	223:17:7946:7963	5608732	0	True				
ANR	5609687	AssignmentExpression	alp = ll -> h_list0		5608732	0		=			
ANR	5609688	Identifier	alp		5608732	0					
ANR	5609689	PtrMemberAccess	ll -> h_list0		5608732	1					
ANR	5609690	Identifier	ll		5608732	0					
ANR	5609691	Identifier	h_list0		5608732	1					
ANR	5609692	Condition	alp != NULL	223:36:7965:7975	5608732	1	True				
ANR	5609693	EqualityExpression	alp != NULL		5608732	0		!=			
ANR	5609694	Identifier	alp		5608732	0					
ANR	5609695	Identifier	NULL		5608732	1					
ANR	5609696	AssignmentExpression	alp = alp -> next	223:49:7978:7992	5608732	2	True	=			
ANR	5609697	Identifier	alp		5608732	0					
ANR	5609698	PtrMemberAccess	alp -> next		5608732	1					
ANR	5609699	Identifier	alp		5608732	0					
ANR	5609700	Identifier	next		5608732	1					
ANR	5609701	CompoundStatement		196:16:7028:7068	5608732	3					
ANR	5609702	IdentifierDeclStatement	"fixed x0 = min ( alp -> start . x , alp -> end . x ) ;"	224:16:8013:8053	5608732	0	True				
ANR	5609703	IdentifierDecl	"x0 = min ( alp -> start . x , alp -> end . x )"		5608732	0					
ANR	5609704	IdentifierDeclType	fixed		5608732	0					
ANR	5609705	Identifier	x0		5608732	1					
ANR	5609706	AssignmentExpression	"x0 = min ( alp -> start . x , alp -> end . x )"		5608732	2		=			
ANR	5609707	Identifier	x0		5608732	0					
ANR	5609708	CallExpression	"min ( alp -> start . x , alp -> end . x )"		5608732	1					
ANR	5609709	Callee	min		5608732	0					
ANR	5609710	Identifier	min		5608732	0					
ANR	5609711	ArgumentList	alp -> start . x		5608732	1					
ANR	5609712	Argument	alp -> start . x		5608732	0					
ANR	5609713	MemberAccess	alp -> start . x		5608732	0					
ANR	5609714	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609715	Identifier	alp		5608732	0					
ANR	5609716	Identifier	start		5608732	1					
ANR	5609717	Identifier	x		5608732	1					
ANR	5609718	Argument	alp -> end . x		5608732	1					
ANR	5609719	MemberAccess	alp -> end . x		5608732	0					
ANR	5609720	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609721	Identifier	alp		5608732	0					
ANR	5609722	Identifier	end		5608732	1					
ANR	5609723	Identifier	x		5608732	1					
ANR	5609724	IdentifierDeclStatement	"fixed x1 = max ( alp -> start . x , alp -> end . x ) ;"	225:16:8071:8111	5608732	1	True				
ANR	5609725	IdentifierDecl	"x1 = max ( alp -> start . x , alp -> end . x )"		5608732	0					
ANR	5609726	IdentifierDeclType	fixed		5608732	0					
ANR	5609727	Identifier	x1		5608732	1					
ANR	5609728	AssignmentExpression	"x1 = max ( alp -> start . x , alp -> end . x )"		5608732	2		=			
ANR	5609729	Identifier	x1		5608732	0					
ANR	5609730	CallExpression	"max ( alp -> start . x , alp -> end . x )"		5608732	1					
ANR	5609731	Callee	max		5608732	0					
ANR	5609732	Identifier	max		5608732	0					
ANR	5609733	ArgumentList	alp -> start . x		5608732	1					
ANR	5609734	Argument	alp -> start . x		5608732	0					
ANR	5609735	MemberAccess	alp -> start . x		5608732	0					
ANR	5609736	PtrMemberAccess	alp -> start		5608732	0					
ANR	5609737	Identifier	alp		5608732	0					
ANR	5609738	Identifier	start		5608732	1					
ANR	5609739	Identifier	x		5608732	1					
ANR	5609740	Argument	alp -> end . x		5608732	1					
ANR	5609741	MemberAccess	alp -> end . x		5608732	0					
ANR	5609742	PtrMemberAccess	alp -> end		5608732	0					
ANR	5609743	Identifier	alp		5608732	0					
ANR	5609744	Identifier	end		5608732	1					
ANR	5609745	Identifier	x		5608732	1					
ANR	5609746	ExpressionStatement	"code = range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"	227:16:8130:8286	5608732	2	True				
ANR	5609747	AssignmentExpression	"code = range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"		5608732	0		=			
ANR	5609748	Identifier	code		5608732	0					
ANR	5609749	CallExpression	"range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"		5608732	1					
ANR	5609750	Callee	range_list_add		5608732	0					
ANR	5609751	Identifier	range_list_add		5608732	0					
ANR	5609752	ArgumentList	& rlist		5608732	1					
ANR	5609753	Argument	& rlist		5608732	0					
ANR	5609754	UnaryOperationExpression	& rlist		5608732	0					
ANR	5609755	UnaryOperator	&		5608732	0					
ANR	5609756	Identifier	rlist		5608732	1					
ANR	5609757	Argument	fixed2int_rounded ( x0 - fo . adjust_left )		5608732	1					
ANR	5609758	CallExpression	fixed2int_rounded ( x0 - fo . adjust_left )		5608732	0					
ANR	5609759	Callee	fixed2int_rounded		5608732	0					
ANR	5609760	Identifier	fixed2int_rounded		5608732	0					
ANR	5609761	ArgumentList	x0 - fo . adjust_left		5608732	1					
ANR	5609762	Argument	x0 - fo . adjust_left		5608732	0					
ANR	5609763	AdditiveExpression	x0 - fo . adjust_left		5608732	0		-			
ANR	5609764	Identifier	x0		5608732	0					
ANR	5609765	MemberAccess	fo . adjust_left		5608732	1					
ANR	5609766	Identifier	fo		5608732	0					
ANR	5609767	Identifier	adjust_left		5608732	1					
ANR	5609768	Argument	fixed2int_rounded ( x1 + fo . adjust_right )		5608732	2					
ANR	5609769	CallExpression	fixed2int_rounded ( x1 + fo . adjust_right )		5608732	0					
ANR	5609770	Callee	fixed2int_rounded		5608732	0					
ANR	5609771	Identifier	fixed2int_rounded		5608732	0					
ANR	5609772	ArgumentList	x1 + fo . adjust_right		5608732	1					
ANR	5609773	Argument	x1 + fo . adjust_right		5608732	0					
ANR	5609774	AdditiveExpression	x1 + fo . adjust_right		5608732	0		+			
ANR	5609775	Identifier	x1		5608732	0					
ANR	5609776	MemberAccess	fo . adjust_right		5608732	1					
ANR	5609777	Identifier	fo		5608732	0					
ANR	5609778	Identifier	adjust_right		5608732	1					
ANR	5609779	IfStatement	if ( code < 0 )		5608732	3					
ANR	5609780	Condition	code < 0	229:20:8308:8315	5608732	0	True				
ANR	5609781	RelationalExpression	code < 0		5608732	0		<			
ANR	5609782	Identifier	code		5608732	0					
ANR	5609783	PrimaryExpression	0		5608732	1					
ANR	5609784	GotoStatement	goto done ;	230:20:8338:8347	5608732	1	True				
ANR	5609785	Identifier	done		5608732	0					
ANR	5609786	ExpressionStatement	"code = merge_ranges ( & rlist , ll , y_min , y_top )"	233:12:8376:8421	5608732	3	True				
ANR	5609787	AssignmentExpression	"code = merge_ranges ( & rlist , ll , y_min , y_top )"		5608732	0		=			
ANR	5609788	Identifier	code		5608732	0					
ANR	5609789	CallExpression	"merge_ranges ( & rlist , ll , y_min , y_top )"		5608732	1					
ANR	5609790	Callee	merge_ranges		5608732	0					
ANR	5609791	Identifier	merge_ranges		5608732	0					
ANR	5609792	ArgumentList	& rlist		5608732	1					
ANR	5609793	Argument	& rlist		5608732	0					
ANR	5609794	UnaryOperationExpression	& rlist		5608732	0					
ANR	5609795	UnaryOperator	&		5608732	0					
ANR	5609796	Identifier	rlist		5608732	1					
ANR	5609797	Argument	ll		5608732	1					
ANR	5609798	Identifier	ll		5608732	0					
ANR	5609799	Argument	y_min		5608732	2					
ANR	5609800	Identifier	y_min		5608732	0					
ANR	5609801	Argument	y_top		5608732	3					
ANR	5609802	Identifier	y_top		5608732	0					
ANR	5609803	ExpressionStatement	ll -> h_list0 = NULL	235:8:8478:8496	5608732	12	True				
ANR	5609804	AssignmentExpression	ll -> h_list0 = NULL		5608732	0		=			
ANR	5609805	PtrMemberAccess	ll -> h_list0		5608732	0					
ANR	5609806	Identifier	ll		5608732	0					
ANR	5609807	Identifier	h_list0		5608732	1					
ANR	5609808	Identifier	NULL		5608732	1					
ANR	5609809	Condition	code >= 0	236:13:8511:8519	5608732	1	True				
ANR	5609810	RelationalExpression	code >= 0		5608732	0		>=			
ANR	5609811	Identifier	code		5608732	0					
ANR	5609812	PrimaryExpression	0		5608732	1					
ANR	5609813	Label	done :	237:1:8524:8528	5608732	17	True				
ANR	5609814	Identifier	done		5608732	0					
ANR	5609815	ExpressionStatement	range_list_free ( & rlist )	238:4:8534:8557	5608732	18	True				
ANR	5609816	CallExpression	range_list_free ( & rlist )		5608732	0					
ANR	5609817	Callee	range_list_free		5608732	0					
ANR	5609818	Identifier	range_list_free		5608732	0					
ANR	5609819	ArgumentList	& rlist		5608732	1					
ANR	5609820	Argument	& rlist		5608732	0					
ANR	5609821	UnaryOperationExpression	& rlist		5608732	0					
ANR	5609822	UnaryOperator	&		5608732	0					
ANR	5609823	Identifier	rlist		5608732	1					
ANR	5609824	ReturnStatement	return code ;	239:4:8563:8574	5608732	19	True				
ANR	5609825	Identifier	code		5608732	0					
ANR	5609826	ReturnType	static int		5608732	1					
ANR	5609827	Identifier	TEMPLATE_spot_into_scanlines		5608732	2					
ANR	5609828	ParameterList	"line_list * ll , fixed band_mask"		5608732	3					
ANR	5609829	Parameter	line_list * ll	29:30:1010:1022	5608732	0	True				
ANR	5609830	ParameterType	line_list *		5608732	0					
ANR	5609831	Identifier	ll		5608732	1					
ANR	5609832	Parameter	fixed band_mask	29:45:1025:1039	5608732	1	True				
ANR	5609833	ParameterType	fixed		5608732	0					
ANR	5609834	Identifier	band_mask		5608732	1					
ANR	5609835	CFGEntryNode	ENTRY		5608732		True				
ANR	5609836	CFGExitNode	EXIT		5608732		True				
ANR	5609837	InfiniteForNode	true		5608732		True				
ANR	5609838	Symbol	ll -> memory		5608732						
ANR	5609839	Symbol	min_fixed		5608732						
ANR	5609840	Symbol	band_step		5608732						
ANR	5609841	Symbol	ll -> y_break		5608732						
ANR	5609842	Symbol	& fo		5608732						
ANR	5609843	Symbol	& rlist . last		5608732						
ANR	5609844	Symbol	alp -> next -> prev		5608732						
ANR	5609845	Symbol	range_list_add		5608732						
ANR	5609846	Symbol	LOOP_FILL_RECTANGLE_DIRECT		5608732						
ANR	5609847	Symbol	( ilp = ilp -> prev ) -> x_current		5608732						
ANR	5609848	Symbol	band		5608732						
ANR	5609849	Symbol	fo . ymax		5608732						
ANR	5609850	Symbol	fixed2int_rounded		5608732						
ANR	5609851	Symbol	yy		5608732						
ANR	5609852	Symbol	* ll		5608732						
ANR	5609853	Symbol	rlist . first		5608732						
ANR	5609854	Symbol	iter		5608732						
ANR	5609855	Symbol	fixed2int_pixround		5608732						
ANR	5609856	Symbol	ynext		5608732						
ANR	5609857	Symbol	countof		5608732						
ANR	5609858	Symbol	alp -> prev		5608732						
ANR	5609859	Symbol	band_mask		5608732						
ANR	5609860	Symbol	alp -> start . y		5608732						
ANR	5609861	Symbol	alp -> fi . y0		5608732						
ANR	5609862	Symbol	alp -> start . x		5608732						
ANR	5609863	Symbol	alp -> fi . y3		5608732						
ANR	5609864	Symbol	yll -> direction		5608732						
ANR	5609865	Symbol	* alp -> next		5608732						
ANR	5609866	Symbol	pcr -> rmin		5608732						
ANR	5609867	Symbol	AL_X_AT_Y		5608732						
ANR	5609868	Symbol	alp -> x_current		5608732						
ANR	5609869	Symbol	min		5608732						
ANR	5609870	Symbol	* ilp -> next		5608732						
ANR	5609871	Symbol	y_top		5608732						
ANR	5609872	Symbol	y_min		5608732						
ANR	5609873	Symbol	step_al		5608732						
ANR	5609874	Symbol	y_limit		5608732						
ANR	5609875	Symbol	new_band		5608732						
ANR	5609876	Symbol	max		5608732						
ANR	5609877	Symbol	rlist		5608732						
ANR	5609878	Symbol	alp -> prev -> next		5608732						
ANR	5609879	Symbol	fixed_fraction		5608732						
ANR	5609880	Symbol	nlp		5608732						
ANR	5609881	Symbol	alp -> next		5608732						
ANR	5609882	Symbol	alp -> end . y		5608732						
ANR	5609883	Symbol	alp -> end . x		5608732						
ANR	5609884	Symbol	int2fixed		5608732						
ANR	5609885	Symbol	ll -> x_head . x_current		5608732						
ANR	5609886	Symbol	x		5608732						
ANR	5609887	Symbol	* alp -> prev		5608732						
ANR	5609888	Symbol	INSIDE_PATH_P		5608732						
ANR	5609889	Symbol	y		5608732						
ANR	5609890	Symbol	fo . adjust_below		5608732						
ANR	5609891	Symbol	ll		5608732						
ANR	5609892	Symbol	* * ilp		5608732						
ANR	5609893	Symbol	alp -> end		5608732						
ANR	5609894	Symbol	ll -> y_list		5608732						
ANR	5609895	Symbol	* pcr		5608732						
ANR	5609896	Symbol	inside		5608732						
ANR	5609897	Symbol	pcr -> next		5608732						
ANR	5609898	Symbol	fixed2int		5608732						
ANR	5609899	Symbol	alp -> fi		5608732						
ANR	5609900	Symbol	move_al_by_y		5608732						
ANR	5609901	Symbol	ll -> x_list		5608732						
ANR	5609902	Symbol	fixed_1		5608732						
ANR	5609903	Symbol	ilp -> next		5608732						
ANR	5609904	Symbol	fixed_0		5608732						
ANR	5609905	Symbol	rlocal		5608732						
ANR	5609906	Symbol	fixed_epsilon		5608732						
ANR	5609907	Symbol	yll -> start . y		5608732						
ANR	5609908	Symbol	DIR_HORIZONTAL		5608732						
ANR	5609909	Symbol	* yll		5608732						
ANR	5609910	Symbol	NULL		5608732						
ANR	5609911	Symbol	alp		5608732						
ANR	5609912	Symbol	ll -> fo		5608732						
ANR	5609913	Symbol	ilp		5608732						
ANR	5609914	Symbol	fo . adjust_right		5608732						
ANR	5609915	Symbol	fo . adjust_left		5608732						
ANR	5609916	Symbol	alp -> more_flattened		5608732						
ANR	5609917	Symbol	ilp -> next -> prev		5608732						
ANR	5609918	Symbol	yll		5608732						
ANR	5609919	Symbol	true		5608732						
ANR	5609920	Symbol	x0		5608732						
ANR	5609921	Symbol	alp -> start		5608732						
ANR	5609922	Symbol	x1		5608732						
ANR	5609923	Symbol	fo . rule		5608732						
ANR	5609924	Symbol	alp -> direction		5608732						
ANR	5609925	Symbol	* ll -> fo		5608732						
ANR	5609926	Symbol	code		5608732						
ANR	5609927	Symbol	yll -> start		5608732						
ANR	5609928	Symbol	end_x_line		5608732						
ANR	5609929	Symbol	fo		5608732						
ANR	5609930	Symbol	merge_ranges		5608732						
ANR	5609931	Symbol	nx		5608732						
ANR	5609932	Symbol	yll -> next		5608732						
ANR	5609933	Symbol	fo . adjust_above		5608732						
ANR	5609934	Symbol	pcr -> rmax		5608732						
ANR	5609935	Symbol	ll -> x_head		5608732						
ANR	5609936	Symbol	y_bot		5608732						
ANR	5609937	Symbol	ilp -> prev		5608732						
ANR	5609938	Symbol	ll -> h_list0		5608732						
ANR	5609939	Symbol	y0		5608732						
ANR	5609940	Symbol	& rlist		5608732						
ANR	5609941	Symbol	fixed_half		5608732						
ANR	5609942	Symbol	pcr		5608732						
ANR	5609943	Symbol	y_frac_max		5608732						
ANR	5609944	Symbol	* ilp		5608732						
ANR	5609945	Symbol	false		5608732						
ANR	5609946	Symbol	* * ll		5608732						
ANR	5609947	Symbol	* alp		5608732						
ANR	5609948	Symbol	rlist . first . next		5608732						
ANR	5609949	Symbol	y_frac_min		5608732						
ANR	5609950	Symbol	* * alp		5608732						
