command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3162564	File	data/converged/CVE-2018-16863_ghostpdl/expat_tests_benchmark_benchmark.c								
ANR	3162565	Function	usage	51:0:1870:2015							
ANR	3162566	FunctionDef	"usage (const char * prog , int rc)"		3162565	0					
ANR	3162567	CompoundStatement		53:0:1914:2015	3162565	0					
ANR	3162568	ExpressionStatement	"fprintf ( stderr , ""usage: %s [-n] filename bufferSize nr_of_loops\\n"" , prog )"	54:2:1918:2001	3162565	0	True				
ANR	3162569	CallExpression	"fprintf ( stderr , ""usage: %s [-n] filename bufferSize nr_of_loops\\n"" , prog )"		3162565	0					
ANR	3162570	Callee	fprintf		3162565	0					
ANR	3162571	Identifier	fprintf		3162565	0					
ANR	3162572	ArgumentList	stderr		3162565	1					
ANR	3162573	Argument	stderr		3162565	0					
ANR	3162574	Identifier	stderr		3162565	0					
ANR	3162575	Argument	"""usage: %s [-n] filename bufferSize nr_of_loops\\n"""		3162565	1					
ANR	3162576	PrimaryExpression	"""usage: %s [-n] filename bufferSize nr_of_loops\\n"""		3162565	0					
ANR	3162577	Argument	prog		3162565	2					
ANR	3162578	Identifier	prog		3162565	0					
ANR	3162579	ExpressionStatement	exit ( rc )	56:2:2005:2013	3162565	1	True				
ANR	3162580	CallExpression	exit ( rc )		3162565	0					
ANR	3162581	Callee	exit		3162565	0					
ANR	3162582	Identifier	exit		3162565	0					
ANR	3162583	ArgumentList	rc		3162565	1					
ANR	3162584	Argument	rc		3162565	0					
ANR	3162585	Identifier	rc		3162565	0					
ANR	3162586	ReturnType	static void		3162565	1					
ANR	3162587	Identifier	usage		3162565	2					
ANR	3162588	ParameterList	"const char * prog , int rc"		3162565	3					
ANR	3162589	Parameter	const char * prog	52:6:1888:1903	3162565	0	True				
ANR	3162590	ParameterType	const char *		3162565	0					
ANR	3162591	Identifier	prog		3162565	1					
ANR	3162592	Parameter	int rc	52:24:1906:1911	3162565	1	True				
ANR	3162593	ParameterType	int		3162565	0					
ANR	3162594	Identifier	rc		3162565	1					
ANR	3162595	CFGEntryNode	ENTRY		3162565		True				
ANR	3162596	CFGExitNode	EXIT		3162565		True				
ANR	3162597	Symbol	rc		3162565						
ANR	3162598	Symbol	stderr		3162565						
ANR	3162599	Symbol	prog		3162565						
ANR	3162600	Function	main	59:0:2018:4422							
ANR	3162601	FunctionDef	"main (int argc , char * argv [ ])"		3162600	0					
ANR	3162602	CompoundStatement		60:0:2053:4422	3162600	0					
ANR	3162603	IdentifierDeclStatement	XML_Parser parser ;	61:2:2057:2075	3162600	0	True				
ANR	3162604	IdentifierDecl	parser		3162600	0					
ANR	3162605	IdentifierDeclType	XML_Parser		3162600	0					
ANR	3162606	Identifier	parser		3162600	1					
ANR	3162607	IdentifierDeclStatement	"char * XMLBuf , * XMLBufEnd , * XMLBufPtr ;"	62:2:2079:2122	3162600	1	True				
ANR	3162608	IdentifierDecl	* XMLBuf		3162600	0					
ANR	3162609	IdentifierDeclType	char *		3162600	0					
ANR	3162610	Identifier	XMLBuf		3162600	1					
ANR	3162611	IdentifierDecl	* XMLBufEnd		3162600	1					
ANR	3162612	IdentifierDeclType	char *		3162600	0					
ANR	3162613	Identifier	XMLBufEnd		3162600	1					
ANR	3162614	IdentifierDecl	* XMLBufPtr		3162600	2					
ANR	3162615	IdentifierDeclType	char *		3162600	0					
ANR	3162616	Identifier	XMLBufPtr		3162600	1					
ANR	3162617	IdentifierDeclStatement	FILE * fd ;	63:2:2126:2141	3162600	2	True				
ANR	3162618	IdentifierDecl	* fd		3162600	0					
ANR	3162619	IdentifierDeclType	FILE *		3162600	0					
ANR	3162620	Identifier	fd		3162600	1					
ANR	3162621	IdentifierDeclStatement	struct stat fileAttr ;	64:2:2145:2165	3162600	3	True				
ANR	3162622	IdentifierDecl	fileAttr		3162600	0					
ANR	3162623	IdentifierDeclType	struct stat		3162600	0					
ANR	3162624	Identifier	fileAttr		3162600	1					
ANR	3162625	IdentifierDeclStatement	"int nrOfLoops , bufferSize , fileSize , i , isFinal ;"	65:2:2169:2224	3162600	4	True				
ANR	3162626	IdentifierDecl	nrOfLoops		3162600	0					
ANR	3162627	IdentifierDeclType	int		3162600	0					
ANR	3162628	Identifier	nrOfLoops		3162600	1					
ANR	3162629	IdentifierDecl	bufferSize		3162600	1					
ANR	3162630	IdentifierDeclType	int		3162600	0					
ANR	3162631	Identifier	bufferSize		3162600	1					
ANR	3162632	IdentifierDecl	fileSize		3162600	2					
ANR	3162633	IdentifierDeclType	int		3162600	0					
ANR	3162634	Identifier	fileSize		3162600	1					
ANR	3162635	IdentifierDecl	i		3162600	3					
ANR	3162636	IdentifierDeclType	int		3162600	0					
ANR	3162637	Identifier	i		3162600	1					
ANR	3162638	IdentifierDecl	isFinal		3162600	4					
ANR	3162639	IdentifierDeclType	int		3162600	0					
ANR	3162640	Identifier	isFinal		3162600	1					
ANR	3162641	IdentifierDeclStatement	"int j = 0 , ns = 0 ;"	66:2:2228:2253	3162600	5	True				
ANR	3162642	IdentifierDecl	j = 0		3162600	0					
ANR	3162643	IdentifierDeclType	int		3162600	0					
ANR	3162644	Identifier	j		3162600	1					
ANR	3162645	AssignmentExpression	j = 0		3162600	2		=			
ANR	3162646	Identifier	j		3162600	0					
ANR	3162647	PrimaryExpression	0		3162600	1					
ANR	3162648	IdentifierDecl	ns = 0		3162600	1					
ANR	3162649	IdentifierDeclType	int		3162600	0					
ANR	3162650	Identifier	ns		3162600	1					
ANR	3162651	AssignmentExpression	ns = 0		3162600	2		=			
ANR	3162652	Identifier	ns		3162600	0					
ANR	3162653	PrimaryExpression	0		3162600	1					
ANR	3162654	IdentifierDeclStatement	"clock_t tstart , tend ;"	67:2:2257:2281	3162600	6	True				
ANR	3162655	IdentifierDecl	tstart		3162600	0					
ANR	3162656	IdentifierDeclType	clock_t		3162600	0					
ANR	3162657	Identifier	tstart		3162600	1					
ANR	3162658	IdentifierDecl	tend		3162600	1					
ANR	3162659	IdentifierDeclType	clock_t		3162600	0					
ANR	3162660	Identifier	tend		3162600	1					
ANR	3162661	IdentifierDeclStatement	double cpuTime = 0.0 ;	68:2:2285:2310	3162600	7	True				
ANR	3162662	IdentifierDecl	cpuTime = 0.0		3162600	0					
ANR	3162663	IdentifierDeclType	double		3162600	0					
ANR	3162664	Identifier	cpuTime		3162600	1					
ANR	3162665	AssignmentExpression	cpuTime = 0.0		3162600	2		=			
ANR	3162666	Identifier	cpuTime		3162600	0					
ANR	3162667	PrimaryExpression	0.0		3162600	1					
ANR	3162668	IfStatement	if ( argc > 1 )		3162600	8					
ANR	3162669	Condition	argc > 1	70:6:2319:2326	3162600	0	True				
ANR	3162670	RelationalExpression	argc > 1		3162600	0		>			
ANR	3162671	Identifier	argc		3162600	0					
ANR	3162672	PrimaryExpression	1		3162600	1					
ANR	3162673	CompoundStatement		11:16:275:275	3162600	1					
ANR	3162674	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		3162600	0					
ANR	3162675	Condition	argv [ 1 ] [ 0 ] == '-'	71:8:2339:2355	3162600	0	True				
ANR	3162676	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		3162600	0		==			
ANR	3162677	ArrayIndexing	argv [ 1 ] [ 0 ]		3162600	0					
ANR	3162678	ArrayIndexing	argv [ 1 ]		3162600	0					
ANR	3162679	Identifier	argv		3162600	0					
ANR	3162680	PrimaryExpression	1		3162600	1					
ANR	3162681	PrimaryExpression	0		3162600	1					
ANR	3162682	PrimaryExpression	'-'		3162600	1					
ANR	3162683	CompoundStatement		12:27:304:304	3162600	1					
ANR	3162684	IfStatement	if ( argv [ 1 ] [ 1 ] == 'n' && argv [ 1 ] [ 2 ] == '\\0' )		3162600	0					
ANR	3162685	Condition	argv [ 1 ] [ 1 ] == 'n' && argv [ 1 ] [ 2 ] == '\\0'	72:10:2370:2408	3162600	0	True				
ANR	3162686	AndExpression	argv [ 1 ] [ 1 ] == 'n' && argv [ 1 ] [ 2 ] == '\\0'		3162600	0		&&			
ANR	3162687	EqualityExpression	argv [ 1 ] [ 1 ] == 'n'		3162600	0		==			
ANR	3162688	ArrayIndexing	argv [ 1 ] [ 1 ]		3162600	0					
ANR	3162689	ArrayIndexing	argv [ 1 ]		3162600	0					
ANR	3162690	Identifier	argv		3162600	0					
ANR	3162691	PrimaryExpression	1		3162600	1					
ANR	3162692	PrimaryExpression	1		3162600	1					
ANR	3162693	PrimaryExpression	'n'		3162600	1					
ANR	3162694	EqualityExpression	argv [ 1 ] [ 2 ] == '\\0'		3162600	1		==			
ANR	3162695	ArrayIndexing	argv [ 1 ] [ 2 ]		3162600	0					
ANR	3162696	ArrayIndexing	argv [ 1 ]		3162600	0					
ANR	3162697	Identifier	argv		3162600	0					
ANR	3162698	PrimaryExpression	1		3162600	1					
ANR	3162699	PrimaryExpression	2		3162600	1					
ANR	3162700	PrimaryExpression	'\\0'		3162600	1					
ANR	3162701	CompoundStatement		13:51:357:357	3162600	1					
ANR	3162702	ExpressionStatement	ns = 1	73:8:2421:2427	3162600	0	True				
ANR	3162703	AssignmentExpression	ns = 1		3162600	0		=			
ANR	3162704	Identifier	ns		3162600	0					
ANR	3162705	PrimaryExpression	1		3162600	1					
ANR	3162706	ExpressionStatement	j = 1	74:8:2437:2442	3162600	1	True				
ANR	3162707	AssignmentExpression	j = 1		3162600	0		=			
ANR	3162708	Identifier	j		3162600	0					
ANR	3162709	PrimaryExpression	1		3162600	1					
ANR	3162710	ElseStatement	else		3162600	0					
ANR	3162711	ExpressionStatement	"usage ( argv [ 0 ] , 1 )"	77:8:2471:2488	3162600	0	True				
ANR	3162712	CallExpression	"usage ( argv [ 0 ] , 1 )"		3162600	0					
ANR	3162713	Callee	usage		3162600	0					
ANR	3162714	Identifier	usage		3162600	0					
ANR	3162715	ArgumentList	argv [ 0 ]		3162600	1					
ANR	3162716	Argument	argv [ 0 ]		3162600	0					
ANR	3162717	ArrayIndexing	argv [ 0 ]		3162600	0					
ANR	3162718	Identifier	argv		3162600	0					
ANR	3162719	PrimaryExpression	0		3162600	1					
ANR	3162720	Argument	1		3162600	1					
ANR	3162721	PrimaryExpression	1		3162600	0					
ANR	3162722	IfStatement	if ( argc != j + 4 )		3162600	9					
ANR	3162723	Condition	argc != j + 4	81:6:2507:2519	3162600	0	True				
ANR	3162724	EqualityExpression	argc != j + 4		3162600	0		!=			
ANR	3162725	Identifier	argc		3162600	0					
ANR	3162726	AdditiveExpression	j + 4		3162600	1		+			
ANR	3162727	Identifier	j		3162600	0					
ANR	3162728	PrimaryExpression	4		3162600	1					
ANR	3162729	ExpressionStatement	"usage ( argv [ 0 ] , 1 )"	82:4:2526:2543	3162600	1	True				
ANR	3162730	CallExpression	"usage ( argv [ 0 ] , 1 )"		3162600	0					
ANR	3162731	Callee	usage		3162600	0					
ANR	3162732	Identifier	usage		3162600	0					
ANR	3162733	ArgumentList	argv [ 0 ]		3162600	1					
ANR	3162734	Argument	argv [ 0 ]		3162600	0					
ANR	3162735	ArrayIndexing	argv [ 0 ]		3162600	0					
ANR	3162736	Identifier	argv		3162600	0					
ANR	3162737	PrimaryExpression	0		3162600	1					
ANR	3162738	Argument	1		3162600	1					
ANR	3162739	PrimaryExpression	1		3162600	0					
ANR	3162740	IfStatement	"if ( stat ( argv [ j + 1 ] , & fileAttr ) != 0 )"		3162600	10					
ANR	3162741	Condition	"stat ( argv [ j + 1 ] , & fileAttr ) != 0"	84:6:2552:2585	3162600	0	True				
ANR	3162742	EqualityExpression	"stat ( argv [ j + 1 ] , & fileAttr ) != 0"		3162600	0		!=			
ANR	3162743	CallExpression	"stat ( argv [ j + 1 ] , & fileAttr )"		3162600	0					
ANR	3162744	Callee	stat		3162600	0					
ANR	3162745	Identifier	stat		3162600	0					
ANR	3162746	ArgumentList	argv [ j + 1 ]		3162600	1					
ANR	3162747	Argument	argv [ j + 1 ]		3162600	0					
ANR	3162748	ArrayIndexing	argv [ j + 1 ]		3162600	0					
ANR	3162749	Identifier	argv		3162600	0					
ANR	3162750	AdditiveExpression	j + 1		3162600	1		+			
ANR	3162751	Identifier	j		3162600	0					
ANR	3162752	PrimaryExpression	1		3162600	1					
ANR	3162753	Argument	& fileAttr		3162600	1					
ANR	3162754	UnaryOperationExpression	& fileAttr		3162600	0					
ANR	3162755	UnaryOperator	&		3162600	0					
ANR	3162756	Identifier	fileAttr		3162600	1					
ANR	3162757	PrimaryExpression	0		3162600	1					
ANR	3162758	CompoundStatement		25:42:534:534	3162600	1					
ANR	3162759	ExpressionStatement	"fprintf ( stderr , ""could not access file '%s'\\n"" , argv [ j + 1 ] )"	85:4:2594:2655	3162600	0	True				
ANR	3162760	CallExpression	"fprintf ( stderr , ""could not access file '%s'\\n"" , argv [ j + 1 ] )"		3162600	0					
ANR	3162761	Callee	fprintf		3162600	0					
ANR	3162762	Identifier	fprintf		3162600	0					
ANR	3162763	ArgumentList	stderr		3162600	1					
ANR	3162764	Argument	stderr		3162600	0					
ANR	3162765	Identifier	stderr		3162600	0					
ANR	3162766	Argument	"""could not access file '%s'\\n"""		3162600	1					
ANR	3162767	PrimaryExpression	"""could not access file '%s'\\n"""		3162600	0					
ANR	3162768	Argument	argv [ j + 1 ]		3162600	2					
ANR	3162769	ArrayIndexing	argv [ j + 1 ]		3162600	0					
ANR	3162770	Identifier	argv		3162600	0					
ANR	3162771	AdditiveExpression	j + 1		3162600	1		+			
ANR	3162772	Identifier	j		3162600	0					
ANR	3162773	PrimaryExpression	1		3162600	1					
ANR	3162774	ReturnStatement	return 2 ;	86:4:2661:2669	3162600	1	True				
ANR	3162775	PrimaryExpression	2		3162600	0					
ANR	3162776	ExpressionStatement	"fd = fopen ( argv [ j + 1 ] , ""r"" )"	89:2:2680:2709	3162600	11	True				
ANR	3162777	AssignmentExpression	"fd = fopen ( argv [ j + 1 ] , ""r"" )"		3162600	0		=			
ANR	3162778	Identifier	fd		3162600	0					
ANR	3162779	CallExpression	"fopen ( argv [ j + 1 ] , ""r"" )"		3162600	1					
ANR	3162780	Callee	fopen		3162600	0					
ANR	3162781	Identifier	fopen		3162600	0					
ANR	3162782	ArgumentList	argv [ j + 1 ]		3162600	1					
ANR	3162783	Argument	argv [ j + 1 ]		3162600	0					
ANR	3162784	ArrayIndexing	argv [ j + 1 ]		3162600	0					
ANR	3162785	Identifier	argv		3162600	0					
ANR	3162786	AdditiveExpression	j + 1		3162600	1		+			
ANR	3162787	Identifier	j		3162600	0					
ANR	3162788	PrimaryExpression	1		3162600	1					
ANR	3162789	Argument	"""r"""		3162600	1					
ANR	3162790	PrimaryExpression	"""r"""		3162600	0					
ANR	3162791	IfStatement	if ( ! fd )		3162600	12					
ANR	3162792	Condition	! fd	90:6:2717:2719	3162600	0	True				
ANR	3162793	UnaryOperationExpression	! fd		3162600	0					
ANR	3162794	UnaryOperator	!		3162600	0					
ANR	3162795	Identifier	fd		3162600	1					
ANR	3162796	CompoundStatement		31:11:668:668	3162600	1					
ANR	3162797	ExpressionStatement	"fprintf ( stderr , ""could not open file '%s'\\n"" , argv [ j + 1 ] )"	91:4:2728:2787	3162600	0	True				
ANR	3162798	CallExpression	"fprintf ( stderr , ""could not open file '%s'\\n"" , argv [ j + 1 ] )"		3162600	0					
ANR	3162799	Callee	fprintf		3162600	0					
ANR	3162800	Identifier	fprintf		3162600	0					
ANR	3162801	ArgumentList	stderr		3162600	1					
ANR	3162802	Argument	stderr		3162600	0					
ANR	3162803	Identifier	stderr		3162600	0					
ANR	3162804	Argument	"""could not open file '%s'\\n"""		3162600	1					
ANR	3162805	PrimaryExpression	"""could not open file '%s'\\n"""		3162600	0					
ANR	3162806	Argument	argv [ j + 1 ]		3162600	2					
ANR	3162807	ArrayIndexing	argv [ j + 1 ]		3162600	0					
ANR	3162808	Identifier	argv		3162600	0					
ANR	3162809	AdditiveExpression	j + 1		3162600	1		+			
ANR	3162810	Identifier	j		3162600	0					
ANR	3162811	PrimaryExpression	1		3162600	1					
ANR	3162812	ExpressionStatement	exit ( 2 )	92:4:2793:2800	3162600	1	True				
ANR	3162813	CallExpression	exit ( 2 )		3162600	0					
ANR	3162814	Callee	exit		3162600	0					
ANR	3162815	Identifier	exit		3162600	0					
ANR	3162816	ArgumentList	2		3162600	1					
ANR	3162817	Argument	2		3162600	0					
ANR	3162818	PrimaryExpression	2		3162600	0					
ANR	3162819	ExpressionStatement	bufferSize = atoi ( argv [ j + 2 ] )	95:2:2811:2842	3162600	13	True				
ANR	3162820	AssignmentExpression	bufferSize = atoi ( argv [ j + 2 ] )		3162600	0		=			
ANR	3162821	Identifier	bufferSize		3162600	0					
ANR	3162822	CallExpression	atoi ( argv [ j + 2 ] )		3162600	1					
ANR	3162823	Callee	atoi		3162600	0					
ANR	3162824	Identifier	atoi		3162600	0					
ANR	3162825	ArgumentList	argv [ j + 2 ]		3162600	1					
ANR	3162826	Argument	argv [ j + 2 ]		3162600	0					
ANR	3162827	ArrayIndexing	argv [ j + 2 ]		3162600	0					
ANR	3162828	Identifier	argv		3162600	0					
ANR	3162829	AdditiveExpression	j + 2		3162600	1		+			
ANR	3162830	Identifier	j		3162600	0					
ANR	3162831	PrimaryExpression	2		3162600	1					
ANR	3162832	ExpressionStatement	nrOfLoops = atoi ( argv [ j + 3 ] )	96:2:2846:2876	3162600	14	True				
ANR	3162833	AssignmentExpression	nrOfLoops = atoi ( argv [ j + 3 ] )		3162600	0		=			
ANR	3162834	Identifier	nrOfLoops		3162600	0					
ANR	3162835	CallExpression	atoi ( argv [ j + 3 ] )		3162600	1					
ANR	3162836	Callee	atoi		3162600	0					
ANR	3162837	Identifier	atoi		3162600	0					
ANR	3162838	ArgumentList	argv [ j + 3 ]		3162600	1					
ANR	3162839	Argument	argv [ j + 3 ]		3162600	0					
ANR	3162840	ArrayIndexing	argv [ j + 3 ]		3162600	0					
ANR	3162841	Identifier	argv		3162600	0					
ANR	3162842	AdditiveExpression	j + 3		3162600	1		+			
ANR	3162843	Identifier	j		3162600	0					
ANR	3162844	PrimaryExpression	3		3162600	1					
ANR	3162845	IfStatement	if ( bufferSize <= 0 || nrOfLoops <= 0 )		3162600	15					
ANR	3162846	Condition	bufferSize <= 0 || nrOfLoops <= 0	97:6:2884:2916	3162600	0	True				
ANR	3162847	OrExpression	bufferSize <= 0 || nrOfLoops <= 0		3162600	0		||			
ANR	3162848	RelationalExpression	bufferSize <= 0		3162600	0		<=			
ANR	3162849	Identifier	bufferSize		3162600	0					
ANR	3162850	PrimaryExpression	0		3162600	1					
ANR	3162851	RelationalExpression	nrOfLoops <= 0		3162600	1		<=			
ANR	3162852	Identifier	nrOfLoops		3162600	0					
ANR	3162853	PrimaryExpression	0		3162600	1					
ANR	3162854	CompoundStatement		38:41:865:865	3162600	1					
ANR	3162855	ExpressionStatement	"fprintf ( stderr , ""buffer size and nr of loops must be greater than zero.\\n"" )"	98:4:2925:3015	3162600	0	True				
ANR	3162856	CallExpression	"fprintf ( stderr , ""buffer size and nr of loops must be greater than zero.\\n"" )"		3162600	0					
ANR	3162857	Callee	fprintf		3162600	0					
ANR	3162858	Identifier	fprintf		3162600	0					
ANR	3162859	ArgumentList	stderr		3162600	1					
ANR	3162860	Argument	stderr		3162600	0					
ANR	3162861	Identifier	stderr		3162600	0					
ANR	3162862	Argument	"""buffer size and nr of loops must be greater than zero.\\n"""		3162600	1					
ANR	3162863	PrimaryExpression	"""buffer size and nr of loops must be greater than zero.\\n"""		3162600	0					
ANR	3162864	ExpressionStatement	exit ( 3 )	100:4:3021:3028	3162600	1	True				
ANR	3162865	CallExpression	exit ( 3 )		3162600	0					
ANR	3162866	Callee	exit		3162600	0					
ANR	3162867	Identifier	exit		3162600	0					
ANR	3162868	ArgumentList	3		3162600	1					
ANR	3162869	Argument	3		3162600	0					
ANR	3162870	PrimaryExpression	3		3162600	0					
ANR	3162871	ExpressionStatement	XMLBuf = malloc ( fileAttr . st_size )	103:2:3037:3071	3162600	16	True				
ANR	3162872	AssignmentExpression	XMLBuf = malloc ( fileAttr . st_size )		3162600	0		=			
ANR	3162873	Identifier	XMLBuf		3162600	0					
ANR	3162874	CallExpression	malloc ( fileAttr . st_size )		3162600	1					
ANR	3162875	Callee	malloc		3162600	0					
ANR	3162876	Identifier	malloc		3162600	0					
ANR	3162877	ArgumentList	fileAttr . st_size		3162600	1					
ANR	3162878	Argument	fileAttr . st_size		3162600	0					
ANR	3162879	MemberAccess	fileAttr . st_size		3162600	0					
ANR	3162880	Identifier	fileAttr		3162600	0					
ANR	3162881	Identifier	st_size		3162600	1					
ANR	3162882	ExpressionStatement	"fileSize = fread ( XMLBuf , sizeof ( char ) , fileAttr . st_size , fd )"	104:2:3075:3137	3162600	17	True				
ANR	3162883	AssignmentExpression	"fileSize = fread ( XMLBuf , sizeof ( char ) , fileAttr . st_size , fd )"		3162600	0		=			
ANR	3162884	Identifier	fileSize		3162600	0					
ANR	3162885	CallExpression	"fread ( XMLBuf , sizeof ( char ) , fileAttr . st_size , fd )"		3162600	1					
ANR	3162886	Callee	fread		3162600	0					
ANR	3162887	Identifier	fread		3162600	0					
ANR	3162888	ArgumentList	XMLBuf		3162600	1					
ANR	3162889	Argument	XMLBuf		3162600	0					
ANR	3162890	Identifier	XMLBuf		3162600	0					
ANR	3162891	Argument	sizeof ( char )		3162600	1					
ANR	3162892	SizeofExpression	sizeof ( char )		3162600	0					
ANR	3162893	Sizeof	sizeof		3162600	0					
ANR	3162894	SizeofOperand	char		3162600	1					
ANR	3162895	Argument	fileAttr . st_size		3162600	2					
ANR	3162896	MemberAccess	fileAttr . st_size		3162600	0					
ANR	3162897	Identifier	fileAttr		3162600	0					
ANR	3162898	Identifier	st_size		3162600	1					
ANR	3162899	Argument	fd		3162600	3					
ANR	3162900	Identifier	fd		3162600	0					
ANR	3162901	ExpressionStatement	fclose ( fd )	105:2:3141:3152	3162600	18	True				
ANR	3162902	CallExpression	fclose ( fd )		3162600	0					
ANR	3162903	Callee	fclose		3162600	0					
ANR	3162904	Identifier	fclose		3162600	0					
ANR	3162905	ArgumentList	fd		3162600	1					
ANR	3162906	Argument	fd		3162600	0					
ANR	3162907	Identifier	fd		3162600	0					
ANR	3162908	IfStatement	if ( ns )		3162600	19					
ANR	3162909	Condition	ns	107:6:3163:3164	3162600	0	True				
ANR	3162910	Identifier	ns		3162600	0					
ANR	3162911	ExpressionStatement	"parser = XML_ParserCreateNS ( NULL , '!' )"	108:4:3171:3209	3162600	1	True				
ANR	3162912	AssignmentExpression	"parser = XML_ParserCreateNS ( NULL , '!' )"		3162600	0		=			
ANR	3162913	Identifier	parser		3162600	0					
ANR	3162914	CallExpression	"XML_ParserCreateNS ( NULL , '!' )"		3162600	1					
ANR	3162915	Callee	XML_ParserCreateNS		3162600	0					
ANR	3162916	Identifier	XML_ParserCreateNS		3162600	0					
ANR	3162917	ArgumentList	NULL		3162600	1					
ANR	3162918	Argument	NULL		3162600	0					
ANR	3162919	Identifier	NULL		3162600	0					
ANR	3162920	Argument	'!'		3162600	1					
ANR	3162921	PrimaryExpression	'!'		3162600	0					
ANR	3162922	ElseStatement	else		3162600	0					
ANR	3162923	ExpressionStatement	parser = XML_ParserCreate ( NULL )	110:4:3222:3253	3162600	0	True				
ANR	3162924	AssignmentExpression	parser = XML_ParserCreate ( NULL )		3162600	0		=			
ANR	3162925	Identifier	parser		3162600	0					
ANR	3162926	CallExpression	XML_ParserCreate ( NULL )		3162600	1					
ANR	3162927	Callee	XML_ParserCreate		3162600	0					
ANR	3162928	Identifier	XML_ParserCreate		3162600	0					
ANR	3162929	ArgumentList	NULL		3162600	1					
ANR	3162930	Argument	NULL		3162600	0					
ANR	3162931	Identifier	NULL		3162600	0					
ANR	3162932	ExpressionStatement	i = 0	112:2:3258:3263	3162600	20	True				
ANR	3162933	AssignmentExpression	i = 0		3162600	0		=			
ANR	3162934	Identifier	i		3162600	0					
ANR	3162935	PrimaryExpression	0		3162600	1					
ANR	3162936	ExpressionStatement	XMLBufEnd = XMLBuf + fileSize	113:2:3267:3296	3162600	21	True				
ANR	3162937	AssignmentExpression	XMLBufEnd = XMLBuf + fileSize		3162600	0		=			
ANR	3162938	Identifier	XMLBufEnd		3162600	0					
ANR	3162939	AdditiveExpression	XMLBuf + fileSize		3162600	1		+			
ANR	3162940	Identifier	XMLBuf		3162600	0					
ANR	3162941	Identifier	fileSize		3162600	1					
ANR	3162942	WhileStatement	while ( i < nrOfLoops )		3162600	22					
ANR	3162943	Condition	i < nrOfLoops	114:9:3307:3319	3162600	0	True				
ANR	3162944	RelationalExpression	i < nrOfLoops		3162600	0		<			
ANR	3162945	Identifier	i		3162600	0					
ANR	3162946	Identifier	nrOfLoops		3162600	1					
ANR	3162947	CompoundStatement		55:24:1268:1268	3162600	1					
ANR	3162948	ExpressionStatement	XMLBufPtr = XMLBuf	115:4:3328:3346	3162600	0	True				
ANR	3162949	AssignmentExpression	XMLBufPtr = XMLBuf		3162600	0		=			
ANR	3162950	Identifier	XMLBufPtr		3162600	0					
ANR	3162951	Identifier	XMLBuf		3162600	1					
ANR	3162952	ExpressionStatement	isFinal = 0	116:4:3352:3363	3162600	1	True				
ANR	3162953	AssignmentExpression	isFinal = 0		3162600	0		=			
ANR	3162954	Identifier	isFinal		3162600	0					
ANR	3162955	PrimaryExpression	0		3162600	1					
ANR	3162956	ExpressionStatement	tstart = clock ( )	117:4:3369:3385	3162600	2	True				
ANR	3162957	AssignmentExpression	tstart = clock ( )		3162600	0		=			
ANR	3162958	Identifier	tstart		3162600	0					
ANR	3162959	CallExpression	clock ( )		3162600	1					
ANR	3162960	Callee	clock		3162600	0					
ANR	3162961	Identifier	clock		3162600	0					
ANR	3162962	ArgumentList			3162600	1					
ANR	3162963	DoStatement	do		3162600	3					
ANR	3162964	CompoundStatement		60:6:1348:1391	3162600	0					
ANR	3162965	IdentifierDeclStatement	int parseBufferSize = XMLBufEnd - XMLBufPtr ;	119:6:3402:3445	3162600	0	True				
ANR	3162966	IdentifierDecl	parseBufferSize = XMLBufEnd - XMLBufPtr		3162600	0					
ANR	3162967	IdentifierDeclType	int		3162600	0					
ANR	3162968	Identifier	parseBufferSize		3162600	1					
ANR	3162969	AssignmentExpression	parseBufferSize = XMLBufEnd - XMLBufPtr		3162600	2		=			
ANR	3162970	Identifier	parseBufferSize		3162600	0					
ANR	3162971	AdditiveExpression	XMLBufEnd - XMLBufPtr		3162600	1		-			
ANR	3162972	Identifier	XMLBufEnd		3162600	0					
ANR	3162973	Identifier	XMLBufPtr		3162600	1					
ANR	3162974	IfStatement	if ( parseBufferSize <= bufferSize )		3162600	1					
ANR	3162975	Condition	parseBufferSize <= bufferSize	120:10:3457:3485	3162600	0	True				
ANR	3162976	RelationalExpression	parseBufferSize <= bufferSize		3162600	0		<=			
ANR	3162977	Identifier	parseBufferSize		3162600	0					
ANR	3162978	Identifier	bufferSize		3162600	1					
ANR	3162979	ExpressionStatement	isFinal = 1	121:8:3496:3507	3162600	1	True				
ANR	3162980	AssignmentExpression	isFinal = 1		3162600	0		=			
ANR	3162981	Identifier	isFinal		3162600	0					
ANR	3162982	PrimaryExpression	1		3162600	1					
ANR	3162983	ElseStatement	else		3162600	0					
ANR	3162984	ExpressionStatement	parseBufferSize = bufferSize	123:8:3528:3556	3162600	0	True				
ANR	3162985	AssignmentExpression	parseBufferSize = bufferSize		3162600	0		=			
ANR	3162986	Identifier	parseBufferSize		3162600	0					
ANR	3162987	Identifier	bufferSize		3162600	1					
ANR	3162988	IfStatement	"if ( ! XML_Parse ( parser , XMLBufPtr , parseBufferSize , isFinal ) )"		3162600	2					
ANR	3162989	Condition	"! XML_Parse ( parser , XMLBufPtr , parseBufferSize , isFinal )"	124:10:3568:3623	3162600	0	True				
ANR	3162990	UnaryOperationExpression	"! XML_Parse ( parser , XMLBufPtr , parseBufferSize , isFinal )"		3162600	0					
ANR	3162991	UnaryOperator	!		3162600	0					
ANR	3162992	CallExpression	"XML_Parse ( parser , XMLBufPtr , parseBufferSize , isFinal )"		3162600	1					
ANR	3162993	Callee	XML_Parse		3162600	0					
ANR	3162994	Identifier	XML_Parse		3162600	0					
ANR	3162995	ArgumentList	parser		3162600	1					
ANR	3162996	Argument	parser		3162600	0					
ANR	3162997	Identifier	parser		3162600	0					
ANR	3162998	Argument	XMLBufPtr		3162600	1					
ANR	3162999	Identifier	XMLBufPtr		3162600	0					
ANR	3163000	Argument	parseBufferSize		3162600	2					
ANR	3163001	Identifier	parseBufferSize		3162600	0					
ANR	3163002	Argument	isFinal		3162600	3					
ANR	3163003	Identifier	isFinal		3162600	0					
ANR	3163004	CompoundStatement		65:68:1572:1572	3162600	1					
ANR	3163005	Statement	fprintf	125:8:3636:3642	3162600	0	True				
ANR	3163006	Statement	(	125:16:3644:3644	3162600	1	True				
ANR	3163007	Statement	stderr	125:17:3645:3650	3162600	2	True				
ANR	3163008	Statement	","	125:23:3651:3651	3162600	3	True				
ANR	3163009	Statement	"""error '%"""	126:17:3670:3679	3162600	4	True				
ANR	3163010	Statement	XML_FMT_STR	126:28:3681:3691	3162600	5	True				
ANR	3163011	Statement	"""' at line %"""	126:40:3693:3705	3162600	6	True				
ANR	3163012	Statement	XML_FMT_INT_MOD	126:54:3707:3721	3162600	7	True				
ANR	3163013	Statement	"""u character %"""	127:21:3748:3762	3162600	8	True				
ANR	3163014	Statement	XML_FMT_INT_MOD	127:37:3764:3778	3162600	9	True				
ANR	3163015	Statement	"""u\\n"""	127:53:3780:3784	3162600	10	True				
ANR	3163016	Statement	","	127:58:3785:3785	3162600	11	True				
ANR	3163017	Statement	XML_ErrorString	128:17:3804:3818	3162600	12	True				
ANR	3163018	Statement	(	128:33:3820:3820	3162600	13	True				
ANR	3163019	Statement	XML_GetErrorCode	128:34:3821:3836	3162600	14	True				
ANR	3163020	Statement	(	128:51:3838:3838	3162600	15	True				
ANR	3163021	Statement	parser	128:52:3839:3844	3162600	16	True				
ANR	3163022	Statement	)	128:58:3845:3845	3162600	17	True				
ANR	3163023	Statement	)	128:59:3846:3846	3162600	18	True				
ANR	3163024	Statement	","	128:60:3847:3847	3162600	19	True				
ANR	3163025	Statement	XML_GetCurrentLineNumber	129:17:3866:3889	3162600	20	True				
ANR	3163026	Statement	(	129:42:3891:3891	3162600	21	True				
ANR	3163027	Statement	parser	129:43:3892:3897	3162600	22	True				
ANR	3163028	Statement	)	129:49:3898:3898	3162600	23	True				
ANR	3163029	Statement	","	129:50:3899:3899	3162600	24	True				
ANR	3163030	Statement	XML_GetCurrentColumnNumber	130:17:3918:3943	3162600	25	True				
ANR	3163031	Statement	(	130:44:3945:3945	3162600	26	True				
ANR	3163032	Statement	parser	130:45:3946:3951	3162600	27	True				
ANR	3163033	Statement	)	130:51:3952:3952	3162600	28	True				
ANR	3163034	Statement	)	130:52:3953:3953	3162600	29	True				
ANR	3163035	ExpressionStatement		130:53:3954:3954	3162600	30	True				
ANR	3163036	ExpressionStatement	free ( XMLBuf )	131:8:3964:3977	3162600	31	True				
ANR	3163037	CallExpression	free ( XMLBuf )		3162600	0					
ANR	3163038	Callee	free		3162600	0					
ANR	3163039	Identifier	free		3162600	0					
ANR	3163040	ArgumentList	XMLBuf		3162600	1					
ANR	3163041	Argument	XMLBuf		3162600	0					
ANR	3163042	Identifier	XMLBuf		3162600	0					
ANR	3163043	ExpressionStatement	XML_ParserFree ( parser )	132:8:3987:4010	3162600	32	True				
ANR	3163044	CallExpression	XML_ParserFree ( parser )		3162600	0					
ANR	3163045	Callee	XML_ParserFree		3162600	0					
ANR	3163046	Identifier	XML_ParserFree		3162600	0					
ANR	3163047	ArgumentList	parser		3162600	1					
ANR	3163048	Argument	parser		3162600	0					
ANR	3163049	Identifier	parser		3162600	0					
ANR	3163050	ExpressionStatement	exit ( 4 )	133:8:4020:4028	3162600	33	True				
ANR	3163051	CallExpression	exit ( 4 )		3162600	0					
ANR	3163052	Callee	exit		3162600	0					
ANR	3163053	Identifier	exit		3162600	0					
ANR	3163054	ArgumentList	4		3162600	1					
ANR	3163055	Argument	4		3162600	0					
ANR	3163056	PrimaryExpression	4		3162600	0					
ANR	3163057	ExpressionStatement	XMLBufPtr += bufferSize	135:6:4044:4067	3162600	3	True				
ANR	3163058	AssignmentExpression	XMLBufPtr += bufferSize		3162600	0		+=			
ANR	3163059	Identifier	XMLBufPtr		3162600	0					
ANR	3163060	Identifier	bufferSize		3162600	1					
ANR	3163061	Condition	! isFinal	136:13:4082:4089	3162600	1	True				
ANR	3163062	UnaryOperationExpression	! isFinal		3162600	0					
ANR	3163063	UnaryOperator	!		3162600	0					
ANR	3163064	Identifier	isFinal		3162600	1					
ANR	3163065	ExpressionStatement	tend = clock ( )	137:4:4097:4111	3162600	4	True				
ANR	3163066	AssignmentExpression	tend = clock ( )		3162600	0		=			
ANR	3163067	Identifier	tend		3162600	0					
ANR	3163068	CallExpression	clock ( )		3162600	1					
ANR	3163069	Callee	clock		3162600	0					
ANR	3163070	Identifier	clock		3162600	0					
ANR	3163071	ArgumentList			3162600	1					
ANR	3163072	ExpressionStatement	cpuTime += ( ( double ) ( tend - tstart ) ) / CLOCKS_PER_SEC	138:4:4117:4171	3162600	5	True				
ANR	3163073	AssignmentExpression	cpuTime += ( ( double ) ( tend - tstart ) ) / CLOCKS_PER_SEC		3162600	0		+=			
ANR	3163074	Identifier	cpuTime		3162600	0					
ANR	3163075	MultiplicativeExpression	( ( double ) ( tend - tstart ) ) / CLOCKS_PER_SEC		3162600	1		/			
ANR	3163076	CastExpression	( double ) ( tend - tstart )		3162600	0					
ANR	3163077	CastTarget	double		3162600	0					
ANR	3163078	AdditiveExpression	tend - tstart		3162600	1		-			
ANR	3163079	Identifier	tend		3162600	0					
ANR	3163080	Identifier	tstart		3162600	1					
ANR	3163081	Identifier	CLOCKS_PER_SEC		3162600	1					
ANR	3163082	ExpressionStatement	"XML_ParserReset ( parser , NULL )"	139:4:4177:4206	3162600	6	True				
ANR	3163083	CallExpression	"XML_ParserReset ( parser , NULL )"		3162600	0					
ANR	3163084	Callee	XML_ParserReset		3162600	0					
ANR	3163085	Identifier	XML_ParserReset		3162600	0					
ANR	3163086	ArgumentList	parser		3162600	1					
ANR	3163087	Argument	parser		3162600	0					
ANR	3163088	Identifier	parser		3162600	0					
ANR	3163089	Argument	NULL		3162600	1					
ANR	3163090	Identifier	NULL		3162600	0					
ANR	3163091	ExpressionStatement	i ++	140:4:4212:4215	3162600	7	True				
ANR	3163092	PostIncDecOperationExpression	i ++		3162600	0					
ANR	3163093	Identifier	i		3162600	0					
ANR	3163094	IncDec	++		3162600	1					
ANR	3163095	ExpressionStatement	XML_ParserFree ( parser )	143:2:4224:4247	3162600	23	True				
ANR	3163096	CallExpression	XML_ParserFree ( parser )		3162600	0					
ANR	3163097	Callee	XML_ParserFree		3162600	0					
ANR	3163098	Identifier	XML_ParserFree		3162600	0					
ANR	3163099	ArgumentList	parser		3162600	1					
ANR	3163100	Argument	parser		3162600	0					
ANR	3163101	Identifier	parser		3162600	0					
ANR	3163102	ExpressionStatement	free ( XMLBuf )	144:2:4251:4264	3162600	24	True				
ANR	3163103	CallExpression	free ( XMLBuf )		3162600	0					
ANR	3163104	Callee	free		3162600	0					
ANR	3163105	Identifier	free		3162600	0					
ANR	3163106	ArgumentList	XMLBuf		3162600	1					
ANR	3163107	Argument	XMLBuf		3162600	0					
ANR	3163108	Identifier	XMLBuf		3162600	0					
ANR	3163109	ExpressionStatement	"printf ( ""%d loops, with buffer size %d. Average time per loop: %f\\n"" , nrOfLoops , bufferSize , cpuTime / ( double ) nrOfLoops )"	146:2:4275:4408	3162600	25	True				
ANR	3163110	CallExpression	"printf ( ""%d loops, with buffer size %d. Average time per loop: %f\\n"" , nrOfLoops , bufferSize , cpuTime / ( double ) nrOfLoops )"		3162600	0					
ANR	3163111	Callee	printf		3162600	0					
ANR	3163112	Identifier	printf		3162600	0					
ANR	3163113	ArgumentList	"""%d loops, with buffer size %d. Average time per loop: %f\\n"""		3162600	1					
ANR	3163114	Argument	"""%d loops, with buffer size %d. Average time per loop: %f\\n"""		3162600	0					
ANR	3163115	PrimaryExpression	"""%d loops, with buffer size %d. Average time per loop: %f\\n"""		3162600	0					
ANR	3163116	Argument	nrOfLoops		3162600	1					
ANR	3163117	Identifier	nrOfLoops		3162600	0					
ANR	3163118	Argument	bufferSize		3162600	2					
ANR	3163119	Identifier	bufferSize		3162600	0					
ANR	3163120	Argument	cpuTime / ( double ) nrOfLoops		3162600	3					
ANR	3163121	MultiplicativeExpression	cpuTime / ( double ) nrOfLoops		3162600	0		/			
ANR	3163122	Identifier	cpuTime		3162600	0					
ANR	3163123	CastExpression	( double ) nrOfLoops		3162600	1					
ANR	3163124	CastTarget	double		3162600	0					
ANR	3163125	Identifier	nrOfLoops		3162600	1					
ANR	3163126	ReturnStatement	return 0 ;	148:2:4412:4420	3162600	26	True				
ANR	3163127	PrimaryExpression	0		3162600	0					
ANR	3163128	ReturnType	int		3162600	1					
ANR	3163129	Identifier	main		3162600	2					
ANR	3163130	ParameterList	"int argc , char * argv [ ]"		3162600	3					
ANR	3163131	Parameter	int argc	59:10:2028:2035	3162600	0	True				
ANR	3163132	ParameterType	int		3162600	0					
ANR	3163133	Identifier	argc		3162600	1					
ANR	3163134	Parameter	char * argv [ ]	59:20:2038:2049	3162600	1	True				
ANR	3163135	ParameterType	char * [ ]		3162600	0					
ANR	3163136	Identifier	argv		3162600	1					
ANR	3163137	CFGEntryNode	ENTRY		3162600		True				
ANR	3163138	CFGExitNode	EXIT		3162600		True				
ANR	3163139	Symbol	XML_Parse		3162600						
ANR	3163140	Symbol	fileAttr . st_size		3162600						
ANR	3163141	Symbol	ns		3162600						
ANR	3163142	Symbol	XMLBufPtr		3162600						
ANR	3163143	Symbol	* argv		3162600						
ANR	3163144	Symbol	argv		3162600						
ANR	3163145	Symbol	tend		3162600						
ANR	3163146	Symbol	tstart		3162600						
ANR	3163147	Symbol	& fileAttr		3162600						
ANR	3163148	Symbol	cpuTime		3162600						
ANR	3163149	Symbol	CLOCKS_PER_SEC		3162600						
ANR	3163150	Symbol	* * argv		3162600						
ANR	3163151	Symbol	isFinal		3162600						
ANR	3163152	Symbol	argc		3162600						
ANR	3163153	Symbol	atoi		3162600						
ANR	3163154	Symbol	fopen		3162600						
ANR	3163155	Symbol	malloc		3162600						
ANR	3163156	Symbol	stat		3162600						
ANR	3163157	Symbol	NULL		3162600						
ANR	3163158	Symbol	XMLBufEnd		3162600						
ANR	3163159	Symbol	i		3162600						
ANR	3163160	Symbol	j		3162600						
ANR	3163161	Symbol	clock		3162600						
ANR	3163162	Symbol	stderr		3162600						
ANR	3163163	Symbol	fileAttr		3162600						
ANR	3163164	Symbol	parseBufferSize		3162600						
ANR	3163165	Symbol	fread		3162600						
ANR	3163166	Symbol	parser		3162600						
ANR	3163167	Symbol	* j		3162600						
ANR	3163168	Symbol	fileSize		3162600						
ANR	3163169	Symbol	XMLBuf		3162600						
ANR	3163170	Symbol	XML_ParserCreateNS		3162600						
ANR	3163171	Symbol	XML_ParserCreate		3162600						
ANR	3163172	Symbol	fd		3162600						
ANR	3163173	Symbol	bufferSize		3162600						
ANR	3163174	Symbol	nrOfLoops		3162600						
