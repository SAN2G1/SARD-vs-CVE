command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11219009	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_fitblk.c								
ANR	11219010	Function	quit	59:14:2912:3042							
ANR	11219011	FunctionDef	quit (char * why)		11219010	0					
ANR	11219012	CompoundStatement		63:0:2979:3042	11219010	0					
ANR	11219013	ExpressionStatement	"fprintf ( stderr , ""fitblk abort: %s\\n"" , why )"	64:4:2985:3027	11219010	0	True				
ANR	11219014	CallExpression	"fprintf ( stderr , ""fitblk abort: %s\\n"" , why )"		11219010	0					
ANR	11219015	Callee	fprintf		11219010	0					
ANR	11219016	Identifier	fprintf		11219010	0					
ANR	11219017	ArgumentList	stderr		11219010	1					
ANR	11219018	Argument	stderr		11219010	0					
ANR	11219019	Identifier	stderr		11219010	0					
ANR	11219020	Argument	"""fitblk abort: %s\\n"""		11219010	1					
ANR	11219021	PrimaryExpression	"""fitblk abort: %s\\n"""		11219010	0					
ANR	11219022	Argument	why		11219010	2					
ANR	11219023	Identifier	why		11219010	0					
ANR	11219024	ExpressionStatement	exit ( 1 )	65:4:3033:3040	11219010	1	True				
ANR	11219025	CallExpression	exit ( 1 )		11219010	0					
ANR	11219026	Callee	exit		11219010	0					
ANR	11219027	Identifier	exit		11219010	0					
ANR	11219028	ArgumentList	1		11219010	1					
ANR	11219029	Argument	1		11219010	0					
ANR	11219030	PrimaryExpression	1		11219010	0					
ANR	11219031	ReturnType	static local void		11219010	1					
ANR	11219032	Identifier	quit		11219010	2					
ANR	11219033	ParameterList	char * why		11219010	3					
ANR	11219034	Parameter	char * why	62:16:2968:2976	11219010	0	True				
ANR	11219035	ParameterType	char *		11219010	0					
ANR	11219036	Identifier	why		11219010	1					
ANR	11219037	CFGEntryNode	ENTRY		11219010		True				
ANR	11219038	CFGExitNode	EXIT		11219010		True				
ANR	11219039	Symbol	why		11219010						
ANR	11219040	Symbol	stderr		11219010						
ANR	11219041	Function	partcompress	73:0:3289:3755							
ANR	11219042	FunctionDef	"partcompress (FILE * in , z_streamp def)"		11219041	0					
ANR	11219043	CompoundStatement		74:0:3337:3755	11219041	0					
ANR	11219044	IdentifierDeclStatement	"int ret , flush ;"	75:4:3343:3357	11219041	0	True				
ANR	11219045	IdentifierDecl	ret		11219041	0					
ANR	11219046	IdentifierDeclType	int		11219041	0					
ANR	11219047	Identifier	ret		11219041	1					
ANR	11219048	IdentifierDecl	flush		11219041	1					
ANR	11219049	IdentifierDeclType	int		11219041	0					
ANR	11219050	Identifier	flush		11219041	1					
ANR	11219051	IdentifierDeclStatement	unsigned char raw [ RAWLEN ] ;	76:4:3363:3388	11219041	1	True				
ANR	11219052	IdentifierDecl	raw [ RAWLEN ]		11219041	0					
ANR	11219053	IdentifierDeclType	unsigned char [ RAWLEN ]		11219041	0					
ANR	11219054	Identifier	raw		11219041	1					
ANR	11219055	Identifier	RAWLEN		11219041	2					
ANR	11219056	ExpressionStatement	flush = Z_NO_FLUSH	78:4:3395:3413	11219041	2	True				
ANR	11219057	AssignmentExpression	flush = Z_NO_FLUSH		11219041	0		=			
ANR	11219058	Identifier	flush		11219041	0					
ANR	11219059	Identifier	Z_NO_FLUSH		11219041	1					
ANR	11219060	DoStatement	do		11219041	3					
ANR	11219061	CompoundStatement		6:7:84:84	11219041	0					
ANR	11219062	ExpressionStatement	"def -> avail_in = fread ( raw , 1 , RAWLEN , in )"	80:8:3432:3473	11219041	0	True				
ANR	11219063	AssignmentExpression	"def -> avail_in = fread ( raw , 1 , RAWLEN , in )"		11219041	0		=			
ANR	11219064	PtrMemberAccess	def -> avail_in		11219041	0					
ANR	11219065	Identifier	def		11219041	0					
ANR	11219066	Identifier	avail_in		11219041	1					
ANR	11219067	CallExpression	"fread ( raw , 1 , RAWLEN , in )"		11219041	1					
ANR	11219068	Callee	fread		11219041	0					
ANR	11219069	Identifier	fread		11219041	0					
ANR	11219070	ArgumentList	raw		11219041	1					
ANR	11219071	Argument	raw		11219041	0					
ANR	11219072	Identifier	raw		11219041	0					
ANR	11219073	Argument	1		11219041	1					
ANR	11219074	PrimaryExpression	1		11219041	0					
ANR	11219075	Argument	RAWLEN		11219041	2					
ANR	11219076	Identifier	RAWLEN		11219041	0					
ANR	11219077	Argument	in		11219041	3					
ANR	11219078	Identifier	in		11219041	0					
ANR	11219079	IfStatement	if ( ferror ( in ) )		11219041	1					
ANR	11219080	Condition	ferror ( in )	81:12:3487:3496	11219041	0	True				
ANR	11219081	CallExpression	ferror ( in )		11219041	0					
ANR	11219082	Callee	ferror		11219041	0					
ANR	11219083	Identifier	ferror		11219041	0					
ANR	11219084	ArgumentList	in		11219041	1					
ANR	11219085	Argument	in		11219041	0					
ANR	11219086	Identifier	in		11219041	0					
ANR	11219087	ReturnStatement	return Z_ERRNO ;	82:12:3511:3525	11219041	1	True				
ANR	11219088	Identifier	Z_ERRNO		11219041	0					
ANR	11219089	ExpressionStatement	def -> next_in = raw	83:8:3535:3553	11219041	2	True				
ANR	11219090	AssignmentExpression	def -> next_in = raw		11219041	0		=			
ANR	11219091	PtrMemberAccess	def -> next_in		11219041	0					
ANR	11219092	Identifier	def		11219041	0					
ANR	11219093	Identifier	next_in		11219041	1					
ANR	11219094	Identifier	raw		11219041	1					
ANR	11219095	IfStatement	if ( feof ( in ) )		11219041	3					
ANR	11219096	Condition	feof ( in )	84:12:3567:3574	11219041	0	True				
ANR	11219097	CallExpression	feof ( in )		11219041	0					
ANR	11219098	Callee	feof		11219041	0					
ANR	11219099	Identifier	feof		11219041	0					
ANR	11219100	ArgumentList	in		11219041	1					
ANR	11219101	Argument	in		11219041	0					
ANR	11219102	Identifier	in		11219041	0					
ANR	11219103	ExpressionStatement	flush = Z_FINISH	85:12:3589:3605	11219041	1	True				
ANR	11219104	AssignmentExpression	flush = Z_FINISH		11219041	0		=			
ANR	11219105	Identifier	flush		11219041	0					
ANR	11219106	Identifier	Z_FINISH		11219041	1					
ANR	11219107	ExpressionStatement	"ret = deflate ( def , flush )"	86:8:3615:3640	11219041	4	True				
ANR	11219108	AssignmentExpression	"ret = deflate ( def , flush )"		11219041	0		=			
ANR	11219109	Identifier	ret		11219041	0					
ANR	11219110	CallExpression	"deflate ( def , flush )"		11219041	1					
ANR	11219111	Callee	deflate		11219041	0					
ANR	11219112	Identifier	deflate		11219041	0					
ANR	11219113	ArgumentList	def		11219041	1					
ANR	11219114	Argument	def		11219041	0					
ANR	11219115	Identifier	def		11219041	0					
ANR	11219116	Argument	flush		11219041	1					
ANR	11219117	Identifier	flush		11219041	0					
ANR	11219118	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	87:8:3650:3679	11219041	5	True				
ANR	11219119	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219041	0					
ANR	11219120	Callee	assert		11219041	0					
ANR	11219121	Identifier	assert		11219041	0					
ANR	11219122	ArgumentList	ret != Z_STREAM_ERROR		11219041	1					
ANR	11219123	Argument	ret != Z_STREAM_ERROR		11219041	0					
ANR	11219124	EqualityExpression	ret != Z_STREAM_ERROR		11219041	0		!=			
ANR	11219125	Identifier	ret		11219041	0					
ANR	11219126	Identifier	Z_STREAM_ERROR		11219041	1					
ANR	11219127	Condition	def -> avail_out != 0 && flush == Z_NO_FLUSH	88:13:3694:3735	11219041	1	True				
ANR	11219128	AndExpression	def -> avail_out != 0 && flush == Z_NO_FLUSH		11219041	0		&&			
ANR	11219129	EqualityExpression	def -> avail_out != 0		11219041	0		!=			
ANR	11219130	PtrMemberAccess	def -> avail_out		11219041	0					
ANR	11219131	Identifier	def		11219041	0					
ANR	11219132	Identifier	avail_out		11219041	1					
ANR	11219133	PrimaryExpression	0		11219041	1					
ANR	11219134	EqualityExpression	flush == Z_NO_FLUSH		11219041	1		==			
ANR	11219135	Identifier	flush		11219041	0					
ANR	11219136	Identifier	Z_NO_FLUSH		11219041	1					
ANR	11219137	ReturnStatement	return ret ;	89:4:3743:3753	11219041	4	True				
ANR	11219138	Identifier	ret		11219041	0					
ANR	11219139	ReturnType	local int		11219041	1					
ANR	11219140	Identifier	partcompress		11219041	2					
ANR	11219141	ParameterList	"FILE * in , z_streamp def"		11219041	3					
ANR	11219142	Parameter	FILE * in	73:23:3312:3319	11219041	0	True				
ANR	11219143	ParameterType	FILE *		11219041	0					
ANR	11219144	Identifier	in		11219041	1					
ANR	11219145	Parameter	z_streamp def	73:33:3322:3334	11219041	1	True				
ANR	11219146	ParameterType	z_streamp		11219041	0					
ANR	11219147	Identifier	def		11219041	1					
ANR	11219148	CFGEntryNode	ENTRY		11219041		True				
ANR	11219149	CFGExitNode	EXIT		11219041		True				
ANR	11219150	Symbol	ret		11219041						
ANR	11219151	Symbol	Z_ERRNO		11219041						
ANR	11219152	Symbol	Z_STREAM_ERROR		11219041						
ANR	11219153	Symbol	def		11219041						
ANR	11219154	Symbol	in		11219041						
ANR	11219155	Symbol	RAWLEN		11219041						
ANR	11219156	Symbol	raw		11219041						
ANR	11219157	Symbol	fread		11219041						
ANR	11219158	Symbol	Z_FINISH		11219041						
ANR	11219159	Symbol	* def		11219041						
ANR	11219160	Symbol	ferror		11219041						
ANR	11219161	Symbol	def -> next_in		11219041						
ANR	11219162	Symbol	Z_NO_FLUSH		11219041						
ANR	11219163	Symbol	def -> avail_in		11219041						
ANR	11219164	Symbol	deflate		11219041						
ANR	11219165	Symbol	flush		11219041						
ANR	11219166	Symbol	feof		11219041						
ANR	11219167	Symbol	def -> avail_out		11219041						
ANR	11219168	Function	recompress	96:0:4024:4799							
ANR	11219169	FunctionDef	"recompress (z_streamp inf , z_streamp def)"		11219168	0					
ANR	11219170	CompoundStatement		97:0:4075:4799	11219168	0					
ANR	11219171	IdentifierDeclStatement	"int ret , flush ;"	98:4:4081:4095	11219168	0	True				
ANR	11219172	IdentifierDecl	ret		11219168	0					
ANR	11219173	IdentifierDeclType	int		11219168	0					
ANR	11219174	Identifier	ret		11219168	1					
ANR	11219175	IdentifierDecl	flush		11219168	1					
ANR	11219176	IdentifierDeclType	int		11219168	0					
ANR	11219177	Identifier	flush		11219168	1					
ANR	11219178	IdentifierDeclStatement	unsigned char raw [ RAWLEN ] ;	99:4:4101:4126	11219168	1	True				
ANR	11219179	IdentifierDecl	raw [ RAWLEN ]		11219168	0					
ANR	11219180	IdentifierDeclType	unsigned char [ RAWLEN ]		11219168	0					
ANR	11219181	Identifier	raw		11219168	1					
ANR	11219182	Identifier	RAWLEN		11219168	2					
ANR	11219183	ExpressionStatement	flush = Z_NO_FLUSH	101:4:4133:4151	11219168	2	True				
ANR	11219184	AssignmentExpression	flush = Z_NO_FLUSH		11219168	0		=			
ANR	11219185	Identifier	flush		11219168	0					
ANR	11219186	Identifier	Z_NO_FLUSH		11219168	1					
ANR	11219187	DoStatement	do		11219168	3					
ANR	11219188	CompoundStatement		6:7:84:84	11219168	0					
ANR	11219189	ExpressionStatement	inf -> avail_out = RAWLEN	104:8:4195:4218	11219168	0	True				
ANR	11219190	AssignmentExpression	inf -> avail_out = RAWLEN		11219168	0		=			
ANR	11219191	PtrMemberAccess	inf -> avail_out		11219168	0					
ANR	11219192	Identifier	inf		11219168	0					
ANR	11219193	Identifier	avail_out		11219168	1					
ANR	11219194	Identifier	RAWLEN		11219168	1					
ANR	11219195	ExpressionStatement	inf -> next_out = raw	105:8:4228:4247	11219168	1	True				
ANR	11219196	AssignmentExpression	inf -> next_out = raw		11219168	0		=			
ANR	11219197	PtrMemberAccess	inf -> next_out		11219168	0					
ANR	11219198	Identifier	inf		11219168	0					
ANR	11219199	Identifier	next_out		11219168	1					
ANR	11219200	Identifier	raw		11219168	1					
ANR	11219201	ExpressionStatement	"ret = inflate ( inf , Z_NO_FLUSH )"	106:8:4257:4287	11219168	2	True				
ANR	11219202	AssignmentExpression	"ret = inflate ( inf , Z_NO_FLUSH )"		11219168	0		=			
ANR	11219203	Identifier	ret		11219168	0					
ANR	11219204	CallExpression	"inflate ( inf , Z_NO_FLUSH )"		11219168	1					
ANR	11219205	Callee	inflate		11219168	0					
ANR	11219206	Identifier	inflate		11219168	0					
ANR	11219207	ArgumentList	inf		11219168	1					
ANR	11219208	Argument	inf		11219168	0					
ANR	11219209	Identifier	inf		11219168	0					
ANR	11219210	Argument	Z_NO_FLUSH		11219168	1					
ANR	11219211	Identifier	Z_NO_FLUSH		11219168	0					
ANR	11219212	ExpressionStatement	assert ( ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT )	107:8:4297:4386	11219168	3	True				
ANR	11219213	CallExpression	assert ( ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT )		11219168	0					
ANR	11219214	Callee	assert		11219168	0					
ANR	11219215	Identifier	assert		11219168	0					
ANR	11219216	ArgumentList	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		11219168	1					
ANR	11219217	Argument	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		11219168	0					
ANR	11219218	AndExpression	ret != Z_STREAM_ERROR && ret != Z_DATA_ERROR && ret != Z_NEED_DICT		11219168	0		&&			
ANR	11219219	EqualityExpression	ret != Z_STREAM_ERROR		11219168	0		!=			
ANR	11219220	Identifier	ret		11219168	0					
ANR	11219221	Identifier	Z_STREAM_ERROR		11219168	1					
ANR	11219222	AndExpression	ret != Z_DATA_ERROR && ret != Z_NEED_DICT		11219168	1		&&			
ANR	11219223	EqualityExpression	ret != Z_DATA_ERROR		11219168	0		!=			
ANR	11219224	Identifier	ret		11219168	0					
ANR	11219225	Identifier	Z_DATA_ERROR		11219168	1					
ANR	11219226	EqualityExpression	ret != Z_NEED_DICT		11219168	1		!=			
ANR	11219227	Identifier	ret		11219168	0					
ANR	11219228	Identifier	Z_NEED_DICT		11219168	1					
ANR	11219229	IfStatement	if ( ret == Z_MEM_ERROR )		11219168	4					
ANR	11219230	Condition	ret == Z_MEM_ERROR	109:12:4400:4417	11219168	0	True				
ANR	11219231	EqualityExpression	ret == Z_MEM_ERROR		11219168	0		==			
ANR	11219232	Identifier	ret		11219168	0					
ANR	11219233	Identifier	Z_MEM_ERROR		11219168	1					
ANR	11219234	ReturnStatement	return ret ;	110:12:4432:4442	11219168	1	True				
ANR	11219235	Identifier	ret		11219168	0					
ANR	11219236	ExpressionStatement	def -> avail_in = RAWLEN - inf -> avail_out	113:8:4519:4558	11219168	5	True				
ANR	11219237	AssignmentExpression	def -> avail_in = RAWLEN - inf -> avail_out		11219168	0		=			
ANR	11219238	PtrMemberAccess	def -> avail_in		11219168	0					
ANR	11219239	Identifier	def		11219168	0					
ANR	11219240	Identifier	avail_in		11219168	1					
ANR	11219241	AdditiveExpression	RAWLEN - inf -> avail_out		11219168	1		-			
ANR	11219242	Identifier	RAWLEN		11219168	0					
ANR	11219243	PtrMemberAccess	inf -> avail_out		11219168	1					
ANR	11219244	Identifier	inf		11219168	0					
ANR	11219245	Identifier	avail_out		11219168	1					
ANR	11219246	ExpressionStatement	def -> next_in = raw	114:8:4568:4586	11219168	6	True				
ANR	11219247	AssignmentExpression	def -> next_in = raw		11219168	0		=			
ANR	11219248	PtrMemberAccess	def -> next_in		11219168	0					
ANR	11219249	Identifier	def		11219168	0					
ANR	11219250	Identifier	next_in		11219168	1					
ANR	11219251	Identifier	raw		11219168	1					
ANR	11219252	IfStatement	if ( inf -> avail_out != 0 )		11219168	7					
ANR	11219253	Condition	inf -> avail_out != 0	115:12:4600:4618	11219168	0	True				
ANR	11219254	EqualityExpression	inf -> avail_out != 0		11219168	0		!=			
ANR	11219255	PtrMemberAccess	inf -> avail_out		11219168	0					
ANR	11219256	Identifier	inf		11219168	0					
ANR	11219257	Identifier	avail_out		11219168	1					
ANR	11219258	PrimaryExpression	0		11219168	1					
ANR	11219259	ExpressionStatement	flush = Z_FINISH	116:12:4633:4649	11219168	1	True				
ANR	11219260	AssignmentExpression	flush = Z_FINISH		11219168	0		=			
ANR	11219261	Identifier	flush		11219168	0					
ANR	11219262	Identifier	Z_FINISH		11219168	1					
ANR	11219263	ExpressionStatement	"ret = deflate ( def , flush )"	117:8:4659:4684	11219168	8	True				
ANR	11219264	AssignmentExpression	"ret = deflate ( def , flush )"		11219168	0		=			
ANR	11219265	Identifier	ret		11219168	0					
ANR	11219266	CallExpression	"deflate ( def , flush )"		11219168	1					
ANR	11219267	Callee	deflate		11219168	0					
ANR	11219268	Identifier	deflate		11219168	0					
ANR	11219269	ArgumentList	def		11219168	1					
ANR	11219270	Argument	def		11219168	0					
ANR	11219271	Identifier	def		11219168	0					
ANR	11219272	Argument	flush		11219168	1					
ANR	11219273	Identifier	flush		11219168	0					
ANR	11219274	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	118:8:4694:4723	11219168	9	True				
ANR	11219275	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219168	0					
ANR	11219276	Callee	assert		11219168	0					
ANR	11219277	Identifier	assert		11219168	0					
ANR	11219278	ArgumentList	ret != Z_STREAM_ERROR		11219168	1					
ANR	11219279	Argument	ret != Z_STREAM_ERROR		11219168	0					
ANR	11219280	EqualityExpression	ret != Z_STREAM_ERROR		11219168	0		!=			
ANR	11219281	Identifier	ret		11219168	0					
ANR	11219282	Identifier	Z_STREAM_ERROR		11219168	1					
ANR	11219283	Condition	ret != Z_STREAM_END && def -> avail_out != 0	119:13:4738:4779	11219168	1	True				
ANR	11219284	AndExpression	ret != Z_STREAM_END && def -> avail_out != 0		11219168	0		&&			
ANR	11219285	EqualityExpression	ret != Z_STREAM_END		11219168	0		!=			
ANR	11219286	Identifier	ret		11219168	0					
ANR	11219287	Identifier	Z_STREAM_END		11219168	1					
ANR	11219288	EqualityExpression	def -> avail_out != 0		11219168	1		!=			
ANR	11219289	PtrMemberAccess	def -> avail_out		11219168	0					
ANR	11219290	Identifier	def		11219168	0					
ANR	11219291	Identifier	avail_out		11219168	1					
ANR	11219292	PrimaryExpression	0		11219168	1					
ANR	11219293	ReturnStatement	return ret ;	120:4:4787:4797	11219168	4	True				
ANR	11219294	Identifier	ret		11219168	0					
ANR	11219295	ReturnType	local int		11219168	1					
ANR	11219296	Identifier	recompress		11219168	2					
ANR	11219297	ParameterList	"z_streamp inf , z_streamp def"		11219168	3					
ANR	11219298	Parameter	z_streamp inf	96:21:4045:4057	11219168	0	True				
ANR	11219299	ParameterType	z_streamp		11219168	0					
ANR	11219300	Identifier	inf		11219168	1					
ANR	11219301	Parameter	z_streamp def	96:36:4060:4072	11219168	1	True				
ANR	11219302	ParameterType	z_streamp		11219168	0					
ANR	11219303	Identifier	def		11219168	1					
ANR	11219304	CFGEntryNode	ENTRY		11219168		True				
ANR	11219305	CFGExitNode	EXIT		11219168		True				
ANR	11219306	Symbol	inf		11219168						
ANR	11219307	Symbol	ret		11219168						
ANR	11219308	Symbol	Z_STREAM_ERROR		11219168						
ANR	11219309	Symbol	Z_DATA_ERROR		11219168						
ANR	11219310	Symbol	def		11219168						
ANR	11219311	Symbol	Z_MEM_ERROR		11219168						
ANR	11219312	Symbol	RAWLEN		11219168						
ANR	11219313	Symbol	raw		11219168						
ANR	11219314	Symbol	inf -> avail_out		11219168						
ANR	11219315	Symbol	Z_FINISH		11219168						
ANR	11219316	Symbol	* def		11219168						
ANR	11219317	Symbol	def -> next_in		11219168						
ANR	11219318	Symbol	Z_NO_FLUSH		11219168						
ANR	11219319	Symbol	def -> avail_in		11219168						
ANR	11219320	Symbol	deflate		11219168						
ANR	11219321	Symbol	flush		11219168						
ANR	11219322	Symbol	* inf		11219168						
ANR	11219323	Symbol	inflate		11219168						
ANR	11219324	Symbol	Z_STREAM_END		11219168						
ANR	11219325	Symbol	inf -> next_out		11219168						
ANR	11219326	Symbol	def -> avail_out		11219168						
ANR	11219327	Symbol	Z_NEED_DICT		11219168						
ANR	11219328	Function	main	127:0:4991:8592							
ANR	11219329	FunctionDef	"main (int argc , char * * argv)"		11219328	0					
ANR	11219330	CompoundStatement		128:0:5023:8592	11219328	0					
ANR	11219331	IdentifierDeclStatement	int ret ;	129:4:5029:5036	11219328	0	True				
ANR	11219332	IdentifierDecl	ret		11219328	0					
ANR	11219333	IdentifierDeclType	int		11219328	0					
ANR	11219334	Identifier	ret		11219328	1					
ANR	11219335	IdentifierDeclStatement	unsigned size ;	130:4:5075:5088	11219328	1	True				
ANR	11219336	IdentifierDecl	size		11219328	0					
ANR	11219337	IdentifierDeclType	unsigned		11219328	0					
ANR	11219338	Identifier	size		11219328	1					
ANR	11219339	IdentifierDeclStatement	unsigned have ;	131:4:5143:5156	11219328	2	True				
ANR	11219340	IdentifierDecl	have		11219328	0					
ANR	11219341	IdentifierDeclType	unsigned		11219328	0					
ANR	11219342	Identifier	have		11219328	1					
ANR	11219343	IdentifierDeclStatement	unsigned char * blk ;	132:4:5209:5227	11219328	3	True				
ANR	11219344	IdentifierDecl	* blk		11219328	0					
ANR	11219345	IdentifierDeclType	unsigned char *		11219328	0					
ANR	11219346	Identifier	blk		11219328	1					
ANR	11219347	IdentifierDeclStatement	unsigned char * tmp ;	133:4:5273:5291	11219328	4	True				
ANR	11219348	IdentifierDecl	* tmp		11219328	0					
ANR	11219349	IdentifierDeclType	unsigned char *		11219328	0					
ANR	11219350	Identifier	tmp		11219328	1					
ANR	11219351	IdentifierDeclStatement	"z_stream def , inf ;"	134:4:5336:5353	11219328	5	True				
ANR	11219352	IdentifierDecl	def		11219328	0					
ANR	11219353	IdentifierDeclType	z_stream		11219328	0					
ANR	11219354	Identifier	def		11219328	1					
ANR	11219355	IdentifierDecl	inf		11219328	1					
ANR	11219356	IdentifierDeclType	z_stream		11219328	0					
ANR	11219357	Identifier	inf		11219328	1					
ANR	11219358	IfStatement	if ( argc != 2 )		11219328	6					
ANR	11219359	Condition	argc != 2	137:8:5443:5451	11219328	0	True				
ANR	11219360	EqualityExpression	argc != 2		11219328	0		!=			
ANR	11219361	Identifier	argc		11219328	0					
ANR	11219362	PrimaryExpression	2		11219328	1					
ANR	11219363	ExpressionStatement	"quit ( ""need one argument: size of output block"" )"	138:8:5462:5509	11219328	1	True				
ANR	11219364	CallExpression	"quit ( ""need one argument: size of output block"" )"		11219328	0					
ANR	11219365	Callee	quit		11219328	0					
ANR	11219366	Identifier	quit		11219328	0					
ANR	11219367	ArgumentList	"""need one argument: size of output block"""		11219328	1					
ANR	11219368	Argument	"""need one argument: size of output block"""		11219328	0					
ANR	11219369	PrimaryExpression	"""need one argument: size of output block"""		11219328	0					
ANR	11219370	ExpressionStatement	"ret = strtol ( argv [ 1 ] , argv + 1 , 10 )"	139:4:5515:5550	11219328	7	True				
ANR	11219371	AssignmentExpression	"ret = strtol ( argv [ 1 ] , argv + 1 , 10 )"		11219328	0		=			
ANR	11219372	Identifier	ret		11219328	0					
ANR	11219373	CallExpression	"strtol ( argv [ 1 ] , argv + 1 , 10 )"		11219328	1					
ANR	11219374	Callee	strtol		11219328	0					
ANR	11219375	Identifier	strtol		11219328	0					
ANR	11219376	ArgumentList	argv [ 1 ]		11219328	1					
ANR	11219377	Argument	argv [ 1 ]		11219328	0					
ANR	11219378	ArrayIndexing	argv [ 1 ]		11219328	0					
ANR	11219379	Identifier	argv		11219328	0					
ANR	11219380	PrimaryExpression	1		11219328	1					
ANR	11219381	Argument	argv + 1		11219328	1					
ANR	11219382	AdditiveExpression	argv + 1		11219328	0		+			
ANR	11219383	Identifier	argv		11219328	0					
ANR	11219384	PrimaryExpression	1		11219328	1					
ANR	11219385	Argument	10		11219328	2					
ANR	11219386	PrimaryExpression	10		11219328	0					
ANR	11219387	IfStatement	if ( argv [ 1 ] [ 0 ] != 0 )		11219328	8					
ANR	11219388	Condition	argv [ 1 ] [ 0 ] != 0	140:8:5560:5574	11219328	0	True				
ANR	11219389	EqualityExpression	argv [ 1 ] [ 0 ] != 0		11219328	0		!=			
ANR	11219390	ArrayIndexing	argv [ 1 ] [ 0 ]		11219328	0					
ANR	11219391	ArrayIndexing	argv [ 1 ]		11219328	0					
ANR	11219392	Identifier	argv		11219328	0					
ANR	11219393	PrimaryExpression	1		11219328	1					
ANR	11219394	PrimaryExpression	0		11219328	1					
ANR	11219395	PrimaryExpression	0		11219328	1					
ANR	11219396	ExpressionStatement	"quit ( ""argument must be a number"" )"	141:8:5585:5618	11219328	1	True				
ANR	11219397	CallExpression	"quit ( ""argument must be a number"" )"		11219328	0					
ANR	11219398	Callee	quit		11219328	0					
ANR	11219399	Identifier	quit		11219328	0					
ANR	11219400	ArgumentList	"""argument must be a number"""		11219328	1					
ANR	11219401	Argument	"""argument must be a number"""		11219328	0					
ANR	11219402	PrimaryExpression	"""argument must be a number"""		11219328	0					
ANR	11219403	IfStatement	if ( ret < 8 )		11219328	9					
ANR	11219404	Condition	ret < 8	142:8:5628:5634	11219328	0	True				
ANR	11219405	RelationalExpression	ret < 8		11219328	0		<			
ANR	11219406	Identifier	ret		11219328	0					
ANR	11219407	PrimaryExpression	8		11219328	1					
ANR	11219408	ExpressionStatement	"quit ( ""need positive size of 8 or greater"" )"	143:8:5692:5734	11219328	1	True				
ANR	11219409	CallExpression	"quit ( ""need positive size of 8 or greater"" )"		11219328	0					
ANR	11219410	Callee	quit		11219328	0					
ANR	11219411	Identifier	quit		11219328	0					
ANR	11219412	ArgumentList	"""need positive size of 8 or greater"""		11219328	1					
ANR	11219413	Argument	"""need positive size of 8 or greater"""		11219328	0					
ANR	11219414	PrimaryExpression	"""need positive size of 8 or greater"""		11219328	0					
ANR	11219415	ExpressionStatement	size = ( unsigned ) ret	144:4:5740:5760	11219328	10	True				
ANR	11219416	AssignmentExpression	size = ( unsigned ) ret		11219328	0		=			
ANR	11219417	Identifier	size		11219328	0					
ANR	11219418	CastExpression	( unsigned ) ret		11219328	1					
ANR	11219419	CastTarget	unsigned		11219328	0					
ANR	11219420	Identifier	ret		11219328	1					
ANR	11219421	ExpressionStatement	blk = malloc ( size + EXCESS )	147:4:5828:5855	11219328	11	True				
ANR	11219422	AssignmentExpression	blk = malloc ( size + EXCESS )		11219328	0		=			
ANR	11219423	Identifier	blk		11219328	0					
ANR	11219424	CallExpression	malloc ( size + EXCESS )		11219328	1					
ANR	11219425	Callee	malloc		11219328	0					
ANR	11219426	Identifier	malloc		11219328	0					
ANR	11219427	ArgumentList	size + EXCESS		11219328	1					
ANR	11219428	Argument	size + EXCESS		11219328	0					
ANR	11219429	AdditiveExpression	size + EXCESS		11219328	0		+			
ANR	11219430	Identifier	size		11219328	0					
ANR	11219431	Identifier	EXCESS		11219328	1					
ANR	11219432	ExpressionStatement	def . zalloc = Z_NULL	148:4:5861:5880	11219328	12	True				
ANR	11219433	AssignmentExpression	def . zalloc = Z_NULL		11219328	0		=			
ANR	11219434	MemberAccess	def . zalloc		11219328	0					
ANR	11219435	Identifier	def		11219328	0					
ANR	11219436	Identifier	zalloc		11219328	1					
ANR	11219437	Identifier	Z_NULL		11219328	1					
ANR	11219438	ExpressionStatement	def . zfree = Z_NULL	149:4:5886:5904	11219328	13	True				
ANR	11219439	AssignmentExpression	def . zfree = Z_NULL		11219328	0		=			
ANR	11219440	MemberAccess	def . zfree		11219328	0					
ANR	11219441	Identifier	def		11219328	0					
ANR	11219442	Identifier	zfree		11219328	1					
ANR	11219443	Identifier	Z_NULL		11219328	1					
ANR	11219444	ExpressionStatement	def . opaque = Z_NULL	150:4:5910:5929	11219328	14	True				
ANR	11219445	AssignmentExpression	def . opaque = Z_NULL		11219328	0		=			
ANR	11219446	MemberAccess	def . opaque		11219328	0					
ANR	11219447	Identifier	def		11219328	0					
ANR	11219448	Identifier	opaque		11219328	1					
ANR	11219449	Identifier	Z_NULL		11219328	1					
ANR	11219450	ExpressionStatement	"ret = deflateInit ( & def , Z_DEFAULT_COMPRESSION )"	151:4:5935:5981	11219328	15	True				
ANR	11219451	AssignmentExpression	"ret = deflateInit ( & def , Z_DEFAULT_COMPRESSION )"		11219328	0		=			
ANR	11219452	Identifier	ret		11219328	0					
ANR	11219453	CallExpression	"deflateInit ( & def , Z_DEFAULT_COMPRESSION )"		11219328	1					
ANR	11219454	Callee	deflateInit		11219328	0					
ANR	11219455	Identifier	deflateInit		11219328	0					
ANR	11219456	ArgumentList	& def		11219328	1					
ANR	11219457	Argument	& def		11219328	0					
ANR	11219458	UnaryOperationExpression	& def		11219328	0					
ANR	11219459	UnaryOperator	&		11219328	0					
ANR	11219460	Identifier	def		11219328	1					
ANR	11219461	Argument	Z_DEFAULT_COMPRESSION		11219328	1					
ANR	11219462	Identifier	Z_DEFAULT_COMPRESSION		11219328	0					
ANR	11219463	IfStatement	if ( ret != Z_OK || blk == NULL )		11219328	16					
ANR	11219464	Condition	ret != Z_OK || blk == NULL	152:8:5991:6016	11219328	0	True				
ANR	11219465	OrExpression	ret != Z_OK || blk == NULL		11219328	0		||			
ANR	11219466	EqualityExpression	ret != Z_OK		11219328	0		!=			
ANR	11219467	Identifier	ret		11219328	0					
ANR	11219468	Identifier	Z_OK		11219328	1					
ANR	11219469	EqualityExpression	blk == NULL		11219328	1		==			
ANR	11219470	Identifier	blk		11219328	0					
ANR	11219471	Identifier	NULL		11219328	1					
ANR	11219472	ExpressionStatement	"quit ( ""out of memory"" )"	153:8:6027:6048	11219328	1	True				
ANR	11219473	CallExpression	"quit ( ""out of memory"" )"		11219328	0					
ANR	11219474	Callee	quit		11219328	0					
ANR	11219475	Identifier	quit		11219328	0					
ANR	11219476	ArgumentList	"""out of memory"""		11219328	1					
ANR	11219477	Argument	"""out of memory"""		11219328	0					
ANR	11219478	PrimaryExpression	"""out of memory"""		11219328	0					
ANR	11219479	ExpressionStatement	def . avail_out = size + EXCESS	156:4:6121:6150	11219328	17	True				
ANR	11219480	AssignmentExpression	def . avail_out = size + EXCESS		11219328	0		=			
ANR	11219481	MemberAccess	def . avail_out		11219328	0					
ANR	11219482	Identifier	def		11219328	0					
ANR	11219483	Identifier	avail_out		11219328	1					
ANR	11219484	AdditiveExpression	size + EXCESS		11219328	1		+			
ANR	11219485	Identifier	size		11219328	0					
ANR	11219486	Identifier	EXCESS		11219328	1					
ANR	11219487	ExpressionStatement	def . next_out = blk	157:4:6156:6174	11219328	18	True				
ANR	11219488	AssignmentExpression	def . next_out = blk		11219328	0		=			
ANR	11219489	MemberAccess	def . next_out		11219328	0					
ANR	11219490	Identifier	def		11219328	0					
ANR	11219491	Identifier	next_out		11219328	1					
ANR	11219492	Identifier	blk		11219328	1					
ANR	11219493	ExpressionStatement	"ret = partcompress ( stdin , & def )"	158:4:6180:6211	11219328	19	True				
ANR	11219494	AssignmentExpression	"ret = partcompress ( stdin , & def )"		11219328	0		=			
ANR	11219495	Identifier	ret		11219328	0					
ANR	11219496	CallExpression	"partcompress ( stdin , & def )"		11219328	1					
ANR	11219497	Callee	partcompress		11219328	0					
ANR	11219498	Identifier	partcompress		11219328	0					
ANR	11219499	ArgumentList	stdin		11219328	1					
ANR	11219500	Argument	stdin		11219328	0					
ANR	11219501	Identifier	stdin		11219328	0					
ANR	11219502	Argument	& def		11219328	1					
ANR	11219503	UnaryOperationExpression	& def		11219328	0					
ANR	11219504	UnaryOperator	&		11219328	0					
ANR	11219505	Identifier	def		11219328	1					
ANR	11219506	IfStatement	if ( ret == Z_ERRNO )		11219328	20					
ANR	11219507	Condition	ret == Z_ERRNO	159:8:6221:6234	11219328	0	True				
ANR	11219508	EqualityExpression	ret == Z_ERRNO		11219328	0		==			
ANR	11219509	Identifier	ret		11219328	0					
ANR	11219510	Identifier	Z_ERRNO		11219328	1					
ANR	11219511	ExpressionStatement	"quit ( ""error reading input"" )"	160:8:6245:6272	11219328	1	True				
ANR	11219512	CallExpression	"quit ( ""error reading input"" )"		11219328	0					
ANR	11219513	Callee	quit		11219328	0					
ANR	11219514	Identifier	quit		11219328	0					
ANR	11219515	ArgumentList	"""error reading input"""		11219328	1					
ANR	11219516	Argument	"""error reading input"""		11219328	0					
ANR	11219517	PrimaryExpression	"""error reading input"""		11219328	0					
ANR	11219518	IfStatement	if ( ret == Z_STREAM_END && def . avail_out >= EXCESS )		11219328	21					
ANR	11219519	Condition	ret == Z_STREAM_END && def . avail_out >= EXCESS	163:8:6347:6392	11219328	0	True				
ANR	11219520	AndExpression	ret == Z_STREAM_END && def . avail_out >= EXCESS		11219328	0		&&			
ANR	11219521	EqualityExpression	ret == Z_STREAM_END		11219328	0		==			
ANR	11219522	Identifier	ret		11219328	0					
ANR	11219523	Identifier	Z_STREAM_END		11219328	1					
ANR	11219524	RelationalExpression	def . avail_out >= EXCESS		11219328	1		>=			
ANR	11219525	MemberAccess	def . avail_out		11219328	0					
ANR	11219526	Identifier	def		11219328	0					
ANR	11219527	Identifier	avail_out		11219328	1					
ANR	11219528	Identifier	EXCESS		11219328	1					
ANR	11219529	CompoundStatement		36:56:1371:1371	11219328	1					
ANR	11219530	ExpressionStatement	have = size + EXCESS - def . avail_out	165:8:6441:6477	11219328	0	True				
ANR	11219531	AssignmentExpression	have = size + EXCESS - def . avail_out		11219328	0		=			
ANR	11219532	Identifier	have		11219328	0					
ANR	11219533	AdditiveExpression	size + EXCESS - def . avail_out		11219328	1		+			
ANR	11219534	Identifier	size		11219328	0					
ANR	11219535	AdditiveExpression	EXCESS - def . avail_out		11219328	1		-			
ANR	11219536	Identifier	EXCESS		11219328	0					
ANR	11219537	MemberAccess	def . avail_out		11219328	1					
ANR	11219538	Identifier	def		11219328	0					
ANR	11219539	Identifier	avail_out		11219328	1					
ANR	11219540	IfStatement	"if ( fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout ) )"		11219328	1					
ANR	11219541	Condition	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"	166:12:6491:6544	11219328	0	True				
ANR	11219542	OrExpression	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"		11219328	0		||			
ANR	11219543	EqualityExpression	"fwrite ( blk , 1 , have , stdout ) != have"		11219328	0		!=			
ANR	11219544	CallExpression	"fwrite ( blk , 1 , have , stdout )"		11219328	0					
ANR	11219545	Callee	fwrite		11219328	0					
ANR	11219546	Identifier	fwrite		11219328	0					
ANR	11219547	ArgumentList	blk		11219328	1					
ANR	11219548	Argument	blk		11219328	0					
ANR	11219549	Identifier	blk		11219328	0					
ANR	11219550	Argument	1		11219328	1					
ANR	11219551	PrimaryExpression	1		11219328	0					
ANR	11219552	Argument	have		11219328	2					
ANR	11219553	Identifier	have		11219328	0					
ANR	11219554	Argument	stdout		11219328	3					
ANR	11219555	Identifier	stdout		11219328	0					
ANR	11219556	Identifier	have		11219328	1					
ANR	11219557	CallExpression	ferror ( stdout )		11219328	1					
ANR	11219558	Callee	ferror		11219328	0					
ANR	11219559	Identifier	ferror		11219328	0					
ANR	11219560	ArgumentList	stdout		11219328	1					
ANR	11219561	Argument	stdout		11219328	0					
ANR	11219562	Identifier	stdout		11219328	0					
ANR	11219563	ExpressionStatement	"quit ( ""error writing output"" )"	167:12:6559:6587	11219328	1	True				
ANR	11219564	CallExpression	"quit ( ""error writing output"" )"		11219328	0					
ANR	11219565	Callee	quit		11219328	0					
ANR	11219566	Identifier	quit		11219328	0					
ANR	11219567	ArgumentList	"""error writing output"""		11219328	1					
ANR	11219568	Argument	"""error writing output"""		11219328	0					
ANR	11219569	PrimaryExpression	"""error writing output"""		11219328	0					
ANR	11219570	ExpressionStatement	ret = deflateEnd ( & def )	170:8:6649:6671	11219328	2	True				
ANR	11219571	AssignmentExpression	ret = deflateEnd ( & def )		11219328	0		=			
ANR	11219572	Identifier	ret		11219328	0					
ANR	11219573	CallExpression	deflateEnd ( & def )		11219328	1					
ANR	11219574	Callee	deflateEnd		11219328	0					
ANR	11219575	Identifier	deflateEnd		11219328	0					
ANR	11219576	ArgumentList	& def		11219328	1					
ANR	11219577	Argument	& def		11219328	0					
ANR	11219578	UnaryOperationExpression	& def		11219328	0					
ANR	11219579	UnaryOperator	&		11219328	0					
ANR	11219580	Identifier	def		11219328	1					
ANR	11219581	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	171:8:6681:6710	11219328	3	True				
ANR	11219582	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219583	Callee	assert		11219328	0					
ANR	11219584	Identifier	assert		11219328	0					
ANR	11219585	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219586	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219587	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219588	Identifier	ret		11219328	0					
ANR	11219589	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219590	ExpressionStatement	free ( blk )	172:8:6720:6729	11219328	4	True				
ANR	11219591	CallExpression	free ( blk )		11219328	0					
ANR	11219592	Callee	free		11219328	0					
ANR	11219593	Identifier	free		11219328	0					
ANR	11219594	ArgumentList	blk		11219328	1					
ANR	11219595	Argument	blk		11219328	0					
ANR	11219596	Identifier	blk		11219328	0					
ANR	11219597	ExpressionStatement	"fprintf ( stderr , ""%u bytes unused out of %u requested (all input)\\n"" , size - have , size )"	173:8:6739:6858	11219328	5	True				
ANR	11219598	CallExpression	"fprintf ( stderr , ""%u bytes unused out of %u requested (all input)\\n"" , size - have , size )"		11219328	0					
ANR	11219599	Callee	fprintf		11219328	0					
ANR	11219600	Identifier	fprintf		11219328	0					
ANR	11219601	ArgumentList	stderr		11219328	1					
ANR	11219602	Argument	stderr		11219328	0					
ANR	11219603	Identifier	stderr		11219328	0					
ANR	11219604	Argument	"""%u bytes unused out of %u requested (all input)\\n"""		11219328	1					
ANR	11219605	PrimaryExpression	"""%u bytes unused out of %u requested (all input)\\n"""		11219328	0					
ANR	11219606	Argument	size - have		11219328	2					
ANR	11219607	AdditiveExpression	size - have		11219328	0		-			
ANR	11219608	Identifier	size		11219328	0					
ANR	11219609	Identifier	have		11219328	1					
ANR	11219610	Argument	size		11219328	3					
ANR	11219611	Identifier	size		11219328	0					
ANR	11219612	ReturnStatement	return 0 ;	176:8:6868:6876	11219328	6	True				
ANR	11219613	PrimaryExpression	0		11219328	0					
ANR	11219614	ExpressionStatement	inf . zalloc = Z_NULL	180:4:6945:6964	11219328	22	True				
ANR	11219615	AssignmentExpression	inf . zalloc = Z_NULL		11219328	0		=			
ANR	11219616	MemberAccess	inf . zalloc		11219328	0					
ANR	11219617	Identifier	inf		11219328	0					
ANR	11219618	Identifier	zalloc		11219328	1					
ANR	11219619	Identifier	Z_NULL		11219328	1					
ANR	11219620	ExpressionStatement	inf . zfree = Z_NULL	181:4:6970:6988	11219328	23	True				
ANR	11219621	AssignmentExpression	inf . zfree = Z_NULL		11219328	0		=			
ANR	11219622	MemberAccess	inf . zfree		11219328	0					
ANR	11219623	Identifier	inf		11219328	0					
ANR	11219624	Identifier	zfree		11219328	1					
ANR	11219625	Identifier	Z_NULL		11219328	1					
ANR	11219626	ExpressionStatement	inf . opaque = Z_NULL	182:4:6994:7013	11219328	24	True				
ANR	11219627	AssignmentExpression	inf . opaque = Z_NULL		11219328	0		=			
ANR	11219628	MemberAccess	inf . opaque		11219328	0					
ANR	11219629	Identifier	inf		11219328	0					
ANR	11219630	Identifier	opaque		11219328	1					
ANR	11219631	Identifier	Z_NULL		11219328	1					
ANR	11219632	ExpressionStatement	inf . avail_in = 0	183:4:7019:7035	11219328	25	True				
ANR	11219633	AssignmentExpression	inf . avail_in = 0		11219328	0		=			
ANR	11219634	MemberAccess	inf . avail_in		11219328	0					
ANR	11219635	Identifier	inf		11219328	0					
ANR	11219636	Identifier	avail_in		11219328	1					
ANR	11219637	PrimaryExpression	0		11219328	1					
ANR	11219638	ExpressionStatement	inf . next_in = Z_NULL	184:4:7041:7061	11219328	26	True				
ANR	11219639	AssignmentExpression	inf . next_in = Z_NULL		11219328	0		=			
ANR	11219640	MemberAccess	inf . next_in		11219328	0					
ANR	11219641	Identifier	inf		11219328	0					
ANR	11219642	Identifier	next_in		11219328	1					
ANR	11219643	Identifier	Z_NULL		11219328	1					
ANR	11219644	ExpressionStatement	ret = inflateInit ( & inf )	185:4:7067:7090	11219328	27	True				
ANR	11219645	AssignmentExpression	ret = inflateInit ( & inf )		11219328	0		=			
ANR	11219646	Identifier	ret		11219328	0					
ANR	11219647	CallExpression	inflateInit ( & inf )		11219328	1					
ANR	11219648	Callee	inflateInit		11219328	0					
ANR	11219649	Identifier	inflateInit		11219328	0					
ANR	11219650	ArgumentList	& inf		11219328	1					
ANR	11219651	Argument	& inf		11219328	0					
ANR	11219652	UnaryOperationExpression	& inf		11219328	0					
ANR	11219653	UnaryOperator	&		11219328	0					
ANR	11219654	Identifier	inf		11219328	1					
ANR	11219655	ExpressionStatement	tmp = malloc ( size + EXCESS )	186:4:7096:7123	11219328	28	True				
ANR	11219656	AssignmentExpression	tmp = malloc ( size + EXCESS )		11219328	0		=			
ANR	11219657	Identifier	tmp		11219328	0					
ANR	11219658	CallExpression	malloc ( size + EXCESS )		11219328	1					
ANR	11219659	Callee	malloc		11219328	0					
ANR	11219660	Identifier	malloc		11219328	0					
ANR	11219661	ArgumentList	size + EXCESS		11219328	1					
ANR	11219662	Argument	size + EXCESS		11219328	0					
ANR	11219663	AdditiveExpression	size + EXCESS		11219328	0		+			
ANR	11219664	Identifier	size		11219328	0					
ANR	11219665	Identifier	EXCESS		11219328	1					
ANR	11219666	IfStatement	if ( ret != Z_OK || tmp == NULL )		11219328	29					
ANR	11219667	Condition	ret != Z_OK || tmp == NULL	187:8:7133:7158	11219328	0	True				
ANR	11219668	OrExpression	ret != Z_OK || tmp == NULL		11219328	0		||			
ANR	11219669	EqualityExpression	ret != Z_OK		11219328	0		!=			
ANR	11219670	Identifier	ret		11219328	0					
ANR	11219671	Identifier	Z_OK		11219328	1					
ANR	11219672	EqualityExpression	tmp == NULL		11219328	1		==			
ANR	11219673	Identifier	tmp		11219328	0					
ANR	11219674	Identifier	NULL		11219328	1					
ANR	11219675	ExpressionStatement	"quit ( ""out of memory"" )"	188:8:7169:7190	11219328	1	True				
ANR	11219676	CallExpression	"quit ( ""out of memory"" )"		11219328	0					
ANR	11219677	Callee	quit		11219328	0					
ANR	11219678	Identifier	quit		11219328	0					
ANR	11219679	ArgumentList	"""out of memory"""		11219328	1					
ANR	11219680	Argument	"""out of memory"""		11219328	0					
ANR	11219681	PrimaryExpression	"""out of memory"""		11219328	0					
ANR	11219682	ExpressionStatement	ret = deflateReset ( & def )	189:4:7196:7220	11219328	30	True				
ANR	11219683	AssignmentExpression	ret = deflateReset ( & def )		11219328	0		=			
ANR	11219684	Identifier	ret		11219328	0					
ANR	11219685	CallExpression	deflateReset ( & def )		11219328	1					
ANR	11219686	Callee	deflateReset		11219328	0					
ANR	11219687	Identifier	deflateReset		11219328	0					
ANR	11219688	ArgumentList	& def		11219328	1					
ANR	11219689	Argument	& def		11219328	0					
ANR	11219690	UnaryOperationExpression	& def		11219328	0					
ANR	11219691	UnaryOperator	&		11219328	0					
ANR	11219692	Identifier	def		11219328	1					
ANR	11219693	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	190:4:7226:7255	11219328	31	True				
ANR	11219694	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219695	Callee	assert		11219328	0					
ANR	11219696	Identifier	assert		11219328	0					
ANR	11219697	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219698	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219699	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219700	Identifier	ret		11219328	0					
ANR	11219701	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219702	ExpressionStatement	inf . avail_in = size + EXCESS	193:4:7321:7349	11219328	32	True				
ANR	11219703	AssignmentExpression	inf . avail_in = size + EXCESS		11219328	0		=			
ANR	11219704	MemberAccess	inf . avail_in		11219328	0					
ANR	11219705	Identifier	inf		11219328	0					
ANR	11219706	Identifier	avail_in		11219328	1					
ANR	11219707	AdditiveExpression	size + EXCESS		11219328	1		+			
ANR	11219708	Identifier	size		11219328	0					
ANR	11219709	Identifier	EXCESS		11219328	1					
ANR	11219710	ExpressionStatement	inf . next_in = blk	194:4:7355:7372	11219328	33	True				
ANR	11219711	AssignmentExpression	inf . next_in = blk		11219328	0		=			
ANR	11219712	MemberAccess	inf . next_in		11219328	0					
ANR	11219713	Identifier	inf		11219328	0					
ANR	11219714	Identifier	next_in		11219328	1					
ANR	11219715	Identifier	blk		11219328	1					
ANR	11219716	ExpressionStatement	def . avail_out = size + EXCESS	195:4:7378:7407	11219328	34	True				
ANR	11219717	AssignmentExpression	def . avail_out = size + EXCESS		11219328	0		=			
ANR	11219718	MemberAccess	def . avail_out		11219328	0					
ANR	11219719	Identifier	def		11219328	0					
ANR	11219720	Identifier	avail_out		11219328	1					
ANR	11219721	AdditiveExpression	size + EXCESS		11219328	1		+			
ANR	11219722	Identifier	size		11219328	0					
ANR	11219723	Identifier	EXCESS		11219328	1					
ANR	11219724	ExpressionStatement	def . next_out = tmp	196:4:7413:7431	11219328	35	True				
ANR	11219725	AssignmentExpression	def . next_out = tmp		11219328	0		=			
ANR	11219726	MemberAccess	def . next_out		11219328	0					
ANR	11219727	Identifier	def		11219328	0					
ANR	11219728	Identifier	next_out		11219328	1					
ANR	11219729	Identifier	tmp		11219328	1					
ANR	11219730	ExpressionStatement	"ret = recompress ( & inf , & def )"	197:4:7437:7465	11219328	36	True				
ANR	11219731	AssignmentExpression	"ret = recompress ( & inf , & def )"		11219328	0		=			
ANR	11219732	Identifier	ret		11219328	0					
ANR	11219733	CallExpression	"recompress ( & inf , & def )"		11219328	1					
ANR	11219734	Callee	recompress		11219328	0					
ANR	11219735	Identifier	recompress		11219328	0					
ANR	11219736	ArgumentList	& inf		11219328	1					
ANR	11219737	Argument	& inf		11219328	0					
ANR	11219738	UnaryOperationExpression	& inf		11219328	0					
ANR	11219739	UnaryOperator	&		11219328	0					
ANR	11219740	Identifier	inf		11219328	1					
ANR	11219741	Argument	& def		11219328	1					
ANR	11219742	UnaryOperationExpression	& def		11219328	0					
ANR	11219743	UnaryOperator	&		11219328	0					
ANR	11219744	Identifier	def		11219328	1					
ANR	11219745	IfStatement	if ( ret == Z_MEM_ERROR )		11219328	37					
ANR	11219746	Condition	ret == Z_MEM_ERROR	198:8:7475:7492	11219328	0	True				
ANR	11219747	EqualityExpression	ret == Z_MEM_ERROR		11219328	0		==			
ANR	11219748	Identifier	ret		11219328	0					
ANR	11219749	Identifier	Z_MEM_ERROR		11219328	1					
ANR	11219750	ExpressionStatement	"quit ( ""out of memory"" )"	199:8:7503:7524	11219328	1	True				
ANR	11219751	CallExpression	"quit ( ""out of memory"" )"		11219328	0					
ANR	11219752	Callee	quit		11219328	0					
ANR	11219753	Identifier	quit		11219328	0					
ANR	11219754	ArgumentList	"""out of memory"""		11219328	1					
ANR	11219755	Argument	"""out of memory"""		11219328	0					
ANR	11219756	PrimaryExpression	"""out of memory"""		11219328	0					
ANR	11219757	ExpressionStatement	ret = inflateReset ( & inf )	202:4:7571:7595	11219328	38	True				
ANR	11219758	AssignmentExpression	ret = inflateReset ( & inf )		11219328	0		=			
ANR	11219759	Identifier	ret		11219328	0					
ANR	11219760	CallExpression	inflateReset ( & inf )		11219328	1					
ANR	11219761	Callee	inflateReset		11219328	0					
ANR	11219762	Identifier	inflateReset		11219328	0					
ANR	11219763	ArgumentList	& inf		11219328	1					
ANR	11219764	Argument	& inf		11219328	0					
ANR	11219765	UnaryOperationExpression	& inf		11219328	0					
ANR	11219766	UnaryOperator	&		11219328	0					
ANR	11219767	Identifier	inf		11219328	1					
ANR	11219768	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	203:4:7601:7630	11219328	39	True				
ANR	11219769	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219770	Callee	assert		11219328	0					
ANR	11219771	Identifier	assert		11219328	0					
ANR	11219772	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219773	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219774	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219775	Identifier	ret		11219328	0					
ANR	11219776	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219777	ExpressionStatement	ret = deflateReset ( & def )	204:4:7636:7660	11219328	40	True				
ANR	11219778	AssignmentExpression	ret = deflateReset ( & def )		11219328	0		=			
ANR	11219779	Identifier	ret		11219328	0					
ANR	11219780	CallExpression	deflateReset ( & def )		11219328	1					
ANR	11219781	Callee	deflateReset		11219328	0					
ANR	11219782	Identifier	deflateReset		11219328	0					
ANR	11219783	ArgumentList	& def		11219328	1					
ANR	11219784	Argument	& def		11219328	0					
ANR	11219785	UnaryOperationExpression	& def		11219328	0					
ANR	11219786	UnaryOperator	&		11219328	0					
ANR	11219787	Identifier	def		11219328	1					
ANR	11219788	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	205:4:7666:7695	11219328	41	True				
ANR	11219789	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219790	Callee	assert		11219328	0					
ANR	11219791	Identifier	assert		11219328	0					
ANR	11219792	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219793	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219794	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219795	Identifier	ret		11219328	0					
ANR	11219796	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219797	ExpressionStatement	inf . avail_in = size - MARGIN	208:4:7766:7794	11219328	42	True				
ANR	11219798	AssignmentExpression	inf . avail_in = size - MARGIN		11219328	0		=			
ANR	11219799	MemberAccess	inf . avail_in		11219328	0					
ANR	11219800	Identifier	inf		11219328	0					
ANR	11219801	Identifier	avail_in		11219328	1					
ANR	11219802	AdditiveExpression	size - MARGIN		11219328	1		-			
ANR	11219803	Identifier	size		11219328	0					
ANR	11219804	Identifier	MARGIN		11219328	1					
ANR	11219805	ExpressionStatement	inf . next_in = tmp	209:4:7836:7853	11219328	43	True				
ANR	11219806	AssignmentExpression	inf . next_in = tmp		11219328	0		=			
ANR	11219807	MemberAccess	inf . next_in		11219328	0					
ANR	11219808	Identifier	inf		11219328	0					
ANR	11219809	Identifier	next_in		11219328	1					
ANR	11219810	Identifier	tmp		11219328	1					
ANR	11219811	ExpressionStatement	def . avail_out = size	210:4:7859:7879	11219328	44	True				
ANR	11219812	AssignmentExpression	def . avail_out = size		11219328	0		=			
ANR	11219813	MemberAccess	def . avail_out		11219328	0					
ANR	11219814	Identifier	def		11219328	0					
ANR	11219815	Identifier	avail_out		11219328	1					
ANR	11219816	Identifier	size		11219328	1					
ANR	11219817	ExpressionStatement	def . next_out = blk	211:4:7885:7903	11219328	45	True				
ANR	11219818	AssignmentExpression	def . next_out = blk		11219328	0		=			
ANR	11219819	MemberAccess	def . next_out		11219328	0					
ANR	11219820	Identifier	def		11219328	0					
ANR	11219821	Identifier	next_out		11219328	1					
ANR	11219822	Identifier	blk		11219328	1					
ANR	11219823	ExpressionStatement	"ret = recompress ( & inf , & def )"	212:4:7909:7937	11219328	46	True				
ANR	11219824	AssignmentExpression	"ret = recompress ( & inf , & def )"		11219328	0		=			
ANR	11219825	Identifier	ret		11219328	0					
ANR	11219826	CallExpression	"recompress ( & inf , & def )"		11219328	1					
ANR	11219827	Callee	recompress		11219328	0					
ANR	11219828	Identifier	recompress		11219328	0					
ANR	11219829	ArgumentList	& inf		11219328	1					
ANR	11219830	Argument	& inf		11219328	0					
ANR	11219831	UnaryOperationExpression	& inf		11219328	0					
ANR	11219832	UnaryOperator	&		11219328	0					
ANR	11219833	Identifier	inf		11219328	1					
ANR	11219834	Argument	& def		11219328	1					
ANR	11219835	UnaryOperationExpression	& def		11219328	0					
ANR	11219836	UnaryOperator	&		11219328	0					
ANR	11219837	Identifier	def		11219328	1					
ANR	11219838	IfStatement	if ( ret == Z_MEM_ERROR )		11219328	47					
ANR	11219839	Condition	ret == Z_MEM_ERROR	213:8:7947:7964	11219328	0	True				
ANR	11219840	EqualityExpression	ret == Z_MEM_ERROR		11219328	0		==			
ANR	11219841	Identifier	ret		11219328	0					
ANR	11219842	Identifier	Z_MEM_ERROR		11219328	1					
ANR	11219843	ExpressionStatement	"quit ( ""out of memory"" )"	214:8:7975:7996	11219328	1	True				
ANR	11219844	CallExpression	"quit ( ""out of memory"" )"		11219328	0					
ANR	11219845	Callee	quit		11219328	0					
ANR	11219846	Identifier	quit		11219328	0					
ANR	11219847	ArgumentList	"""out of memory"""		11219328	1					
ANR	11219848	Argument	"""out of memory"""		11219328	0					
ANR	11219849	PrimaryExpression	"""out of memory"""		11219328	0					
ANR	11219850	ExpressionStatement	assert ( ret == Z_STREAM_END )	215:4:8002:8029	11219328	48	True				
ANR	11219851	CallExpression	assert ( ret == Z_STREAM_END )		11219328	0					
ANR	11219852	Callee	assert		11219328	0					
ANR	11219853	Identifier	assert		11219328	0					
ANR	11219854	ArgumentList	ret == Z_STREAM_END		11219328	1					
ANR	11219855	Argument	ret == Z_STREAM_END		11219328	0					
ANR	11219856	EqualityExpression	ret == Z_STREAM_END		11219328	0		==			
ANR	11219857	Identifier	ret		11219328	0					
ANR	11219858	Identifier	Z_STREAM_END		11219328	1					
ANR	11219859	ExpressionStatement	have = size - def . avail_out	218:4:8112:8139	11219328	49	True				
ANR	11219860	AssignmentExpression	have = size - def . avail_out		11219328	0		=			
ANR	11219861	Identifier	have		11219328	0					
ANR	11219862	AdditiveExpression	size - def . avail_out		11219328	1		-			
ANR	11219863	Identifier	size		11219328	0					
ANR	11219864	MemberAccess	def . avail_out		11219328	1					
ANR	11219865	Identifier	def		11219328	0					
ANR	11219866	Identifier	avail_out		11219328	1					
ANR	11219867	IfStatement	"if ( fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout ) )"		11219328	50					
ANR	11219868	Condition	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"	219:8:8149:8202	11219328	0	True				
ANR	11219869	OrExpression	"fwrite ( blk , 1 , have , stdout ) != have || ferror ( stdout )"		11219328	0		||			
ANR	11219870	EqualityExpression	"fwrite ( blk , 1 , have , stdout ) != have"		11219328	0		!=			
ANR	11219871	CallExpression	"fwrite ( blk , 1 , have , stdout )"		11219328	0					
ANR	11219872	Callee	fwrite		11219328	0					
ANR	11219873	Identifier	fwrite		11219328	0					
ANR	11219874	ArgumentList	blk		11219328	1					
ANR	11219875	Argument	blk		11219328	0					
ANR	11219876	Identifier	blk		11219328	0					
ANR	11219877	Argument	1		11219328	1					
ANR	11219878	PrimaryExpression	1		11219328	0					
ANR	11219879	Argument	have		11219328	2					
ANR	11219880	Identifier	have		11219328	0					
ANR	11219881	Argument	stdout		11219328	3					
ANR	11219882	Identifier	stdout		11219328	0					
ANR	11219883	Identifier	have		11219328	1					
ANR	11219884	CallExpression	ferror ( stdout )		11219328	1					
ANR	11219885	Callee	ferror		11219328	0					
ANR	11219886	Identifier	ferror		11219328	0					
ANR	11219887	ArgumentList	stdout		11219328	1					
ANR	11219888	Argument	stdout		11219328	0					
ANR	11219889	Identifier	stdout		11219328	0					
ANR	11219890	ExpressionStatement	"quit ( ""error writing output"" )"	220:8:8213:8241	11219328	1	True				
ANR	11219891	CallExpression	"quit ( ""error writing output"" )"		11219328	0					
ANR	11219892	Callee	quit		11219328	0					
ANR	11219893	Identifier	quit		11219328	0					
ANR	11219894	ArgumentList	"""error writing output"""		11219328	1					
ANR	11219895	Argument	"""error writing output"""		11219328	0					
ANR	11219896	PrimaryExpression	"""error writing output"""		11219328	0					
ANR	11219897	ExpressionStatement	free ( tmp )	223:4:8295:8304	11219328	51	True				
ANR	11219898	CallExpression	free ( tmp )		11219328	0					
ANR	11219899	Callee	free		11219328	0					
ANR	11219900	Identifier	free		11219328	0					
ANR	11219901	ArgumentList	tmp		11219328	1					
ANR	11219902	Argument	tmp		11219328	0					
ANR	11219903	Identifier	tmp		11219328	0					
ANR	11219904	ExpressionStatement	ret = inflateEnd ( & inf )	224:4:8310:8332	11219328	52	True				
ANR	11219905	AssignmentExpression	ret = inflateEnd ( & inf )		11219328	0		=			
ANR	11219906	Identifier	ret		11219328	0					
ANR	11219907	CallExpression	inflateEnd ( & inf )		11219328	1					
ANR	11219908	Callee	inflateEnd		11219328	0					
ANR	11219909	Identifier	inflateEnd		11219328	0					
ANR	11219910	ArgumentList	& inf		11219328	1					
ANR	11219911	Argument	& inf		11219328	0					
ANR	11219912	UnaryOperationExpression	& inf		11219328	0					
ANR	11219913	UnaryOperator	&		11219328	0					
ANR	11219914	Identifier	inf		11219328	1					
ANR	11219915	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	225:4:8338:8367	11219328	53	True				
ANR	11219916	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219917	Callee	assert		11219328	0					
ANR	11219918	Identifier	assert		11219328	0					
ANR	11219919	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219920	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219921	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219922	Identifier	ret		11219328	0					
ANR	11219923	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219924	ExpressionStatement	ret = deflateEnd ( & def )	226:4:8373:8395	11219328	54	True				
ANR	11219925	AssignmentExpression	ret = deflateEnd ( & def )		11219328	0		=			
ANR	11219926	Identifier	ret		11219328	0					
ANR	11219927	CallExpression	deflateEnd ( & def )		11219328	1					
ANR	11219928	Callee	deflateEnd		11219328	0					
ANR	11219929	Identifier	deflateEnd		11219328	0					
ANR	11219930	ArgumentList	& def		11219328	1					
ANR	11219931	Argument	& def		11219328	0					
ANR	11219932	UnaryOperationExpression	& def		11219328	0					
ANR	11219933	UnaryOperator	&		11219328	0					
ANR	11219934	Identifier	def		11219328	1					
ANR	11219935	ExpressionStatement	assert ( ret != Z_STREAM_ERROR )	227:4:8401:8430	11219328	55	True				
ANR	11219936	CallExpression	assert ( ret != Z_STREAM_ERROR )		11219328	0					
ANR	11219937	Callee	assert		11219328	0					
ANR	11219938	Identifier	assert		11219328	0					
ANR	11219939	ArgumentList	ret != Z_STREAM_ERROR		11219328	1					
ANR	11219940	Argument	ret != Z_STREAM_ERROR		11219328	0					
ANR	11219941	EqualityExpression	ret != Z_STREAM_ERROR		11219328	0		!=			
ANR	11219942	Identifier	ret		11219328	0					
ANR	11219943	Identifier	Z_STREAM_ERROR		11219328	1					
ANR	11219944	ExpressionStatement	free ( blk )	228:4:8436:8445	11219328	56	True				
ANR	11219945	CallExpression	free ( blk )		11219328	0					
ANR	11219946	Callee	free		11219328	0					
ANR	11219947	Identifier	free		11219328	0					
ANR	11219948	ArgumentList	blk		11219328	1					
ANR	11219949	Argument	blk		11219328	0					
ANR	11219950	Identifier	blk		11219328	0					
ANR	11219951	ExpressionStatement	"fprintf ( stderr , ""%u bytes unused out of %u requested (%lu input)\\n"" , size - have , size , def . total_in )"	229:4:8451:8576	11219328	57	True				
ANR	11219952	CallExpression	"fprintf ( stderr , ""%u bytes unused out of %u requested (%lu input)\\n"" , size - have , size , def . total_in )"		11219328	0					
ANR	11219953	Callee	fprintf		11219328	0					
ANR	11219954	Identifier	fprintf		11219328	0					
ANR	11219955	ArgumentList	stderr		11219328	1					
ANR	11219956	Argument	stderr		11219328	0					
ANR	11219957	Identifier	stderr		11219328	0					
ANR	11219958	Argument	"""%u bytes unused out of %u requested (%lu input)\\n"""		11219328	1					
ANR	11219959	PrimaryExpression	"""%u bytes unused out of %u requested (%lu input)\\n"""		11219328	0					
ANR	11219960	Argument	size - have		11219328	2					
ANR	11219961	AdditiveExpression	size - have		11219328	0		-			
ANR	11219962	Identifier	size		11219328	0					
ANR	11219963	Identifier	have		11219328	1					
ANR	11219964	Argument	size		11219328	3					
ANR	11219965	Identifier	size		11219328	0					
ANR	11219966	Argument	def . total_in		11219328	4					
ANR	11219967	MemberAccess	def . total_in		11219328	0					
ANR	11219968	Identifier	def		11219328	0					
ANR	11219969	Identifier	total_in		11219328	1					
ANR	11219970	ReturnStatement	return 0 ;	232:4:8582:8590	11219328	58	True				
ANR	11219971	PrimaryExpression	0		11219328	0					
ANR	11219972	ReturnType	int		11219328	1					
ANR	11219973	Identifier	main		11219328	2					
ANR	11219974	ParameterList	"int argc , char * * argv"		11219328	3					
ANR	11219975	Parameter	int argc	127:9:5000:5007	11219328	0	True				
ANR	11219976	ParameterType	int		11219328	0					
ANR	11219977	Identifier	argc		11219328	1					
ANR	11219978	Parameter	char * * argv	127:19:5010:5020	11219328	1	True				
ANR	11219979	ParameterType	char * *		11219328	0					
ANR	11219980	Identifier	argv		11219328	1					
ANR	11219981	CFGEntryNode	ENTRY		11219328		True				
ANR	11219982	CFGExitNode	EXIT		11219328		True				
ANR	11219983	Symbol	Z_STREAM_ERROR		11219328						
ANR	11219984	Symbol	stdin		11219328						
ANR	11219985	Symbol	def		11219328						
ANR	11219986	Symbol	stdout		11219328						
ANR	11219987	Symbol	Z_MEM_ERROR		11219328						
ANR	11219988	Symbol	* argv		11219328						
ANR	11219989	Symbol	partcompress		11219328						
ANR	11219990	Symbol	def . zalloc		11219328						
ANR	11219991	Symbol	deflateEnd		11219328						
ANR	11219992	Symbol	inf . avail_in		11219328						
ANR	11219993	Symbol	inf . zfree		11219328						
ANR	11219994	Symbol	tmp		11219328						
ANR	11219995	Symbol	deflateReset		11219328						
ANR	11219996	Symbol	Z_STREAM_END		11219328						
ANR	11219997	Symbol	* * argv		11219328						
ANR	11219998	Symbol	ret		11219328						
ANR	11219999	Symbol	Z_ERRNO		11219328						
ANR	11220000	Symbol	NULL		11219328						
ANR	11220001	Symbol	inflateEnd		11219328						
ANR	11220002	Symbol	deflateInit		11219328						
ANR	11220003	Symbol	& def		11219328						
ANR	11220004	Symbol	stderr		11219328						
ANR	11220005	Symbol	ferror		11219328						
ANR	11220006	Symbol	MARGIN		11219328						
ANR	11220007	Symbol	size		11219328						
ANR	11220008	Symbol	Z_NULL		11219328						
ANR	11220009	Symbol	EXCESS		11219328						
ANR	11220010	Symbol	inf . opaque		11219328						
ANR	11220011	Symbol	& inf		11219328						
ANR	11220012	Symbol	def . zfree		11219328						
ANR	11220013	Symbol	inflateInit		11219328						
ANR	11220014	Symbol	Z_OK		11219328						
ANR	11220015	Symbol	argv		11219328						
ANR	11220016	Symbol	strtol		11219328						
ANR	11220017	Symbol	def . avail_out		11219328						
ANR	11220018	Symbol	have		11219328						
ANR	11220019	Symbol	argc		11219328						
ANR	11220020	Symbol	blk		11219328						
ANR	11220021	Symbol	inf		11219328						
ANR	11220022	Symbol	malloc		11219328						
ANR	11220023	Symbol	def . opaque		11219328						
ANR	11220024	Symbol	inf . zalloc		11219328						
ANR	11220025	Symbol	def . total_in		11219328						
ANR	11220026	Symbol	fwrite		11219328						
ANR	11220027	Symbol	inf . next_in		11219328						
ANR	11220028	Symbol	recompress		11219328						
ANR	11220029	Symbol	Z_DEFAULT_COMPRESSION		11219328						
ANR	11220030	Symbol	def . next_out		11219328						
ANR	11220031	Symbol	inflateReset		11219328						
