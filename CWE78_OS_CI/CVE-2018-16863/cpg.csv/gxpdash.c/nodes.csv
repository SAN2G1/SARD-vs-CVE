command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5765228	File	data/converged/CVE-2018-16863_ghostpdl/gxpdash.c								
ANR	5765229	DeclStmt									
ANR	5765230	Decl							int	"int ( const subpath * , gx_path * , const gs_gstate * , const gx_dash_params * )"	subpath_expand_dashes
ANR	5765231	Function	gx_path_add_dash_expansion	34:0:1093:1616							
ANR	5765232	FunctionDef	"gx_path_add_dash_expansion (const gx_path * ppath_old , gx_path * ppath , const gs_gstate * pgs)"		5765231	0					
ANR	5765233	CompoundStatement		37:0:1218:1616	5765231	0					
ANR	5765234	IdentifierDeclStatement	const subpath * psub ;	38:4:1224:1243	5765231	0	True				
ANR	5765235	IdentifierDecl	* psub		5765231	0					
ANR	5765236	IdentifierDeclType	const subpath *		5765231	0					
ANR	5765237	Identifier	psub		5765231	1					
ANR	5765238	IdentifierDeclStatement	const gx_dash_params * dash = & gs_currentlineparams ( pgs ) -> dash ;	39:4:1249:1310	5765231	1	True				
ANR	5765239	IdentifierDecl	* dash = & gs_currentlineparams ( pgs ) -> dash		5765231	0					
ANR	5765240	IdentifierDeclType	const gx_dash_params *		5765231	0					
ANR	5765241	Identifier	dash		5765231	1					
ANR	5765242	AssignmentExpression	* dash = & gs_currentlineparams ( pgs ) -> dash		5765231	2		=			
ANR	5765243	Identifier	dash		5765231	0					
ANR	5765244	UnaryOperationExpression	& gs_currentlineparams ( pgs ) -> dash		5765231	1					
ANR	5765245	UnaryOperator	&		5765231	0					
ANR	5765246	PtrMemberAccess	gs_currentlineparams ( pgs ) -> dash		5765231	1					
ANR	5765247	CallExpression	gs_currentlineparams ( pgs )		5765231	0					
ANR	5765248	Callee	gs_currentlineparams		5765231	0					
ANR	5765249	Identifier	gs_currentlineparams		5765231	0					
ANR	5765250	ArgumentList	pgs		5765231	1					
ANR	5765251	Argument	pgs		5765231	0					
ANR	5765252	Identifier	pgs		5765231	0					
ANR	5765253	Identifier	dash		5765231	1					
ANR	5765254	IdentifierDeclStatement	int code = 0 ;	40:4:1316:1328	5765231	2	True				
ANR	5765255	IdentifierDecl	code = 0		5765231	0					
ANR	5765256	IdentifierDeclType	int		5765231	0					
ANR	5765257	Identifier	code		5765231	1					
ANR	5765258	AssignmentExpression	code = 0		5765231	2		=			
ANR	5765259	Identifier	code		5765231	0					
ANR	5765260	PrimaryExpression	0		5765231	1					
ANR	5765261	IfStatement	if ( dash -> pattern_size == 0 )		5765231	3					
ANR	5765262	Condition	dash -> pattern_size == 0	42:8:1339:1361	5765231	0	True				
ANR	5765263	EqualityExpression	dash -> pattern_size == 0		5765231	0		==			
ANR	5765264	PtrMemberAccess	dash -> pattern_size		5765231	0					
ANR	5765265	Identifier	dash		5765231	0					
ANR	5765266	Identifier	pattern_size		5765231	1					
ANR	5765267	PrimaryExpression	0		5765231	1					
ANR	5765268	ReturnStatement	"return gx_path_copy ( ppath_old , ppath ) ;"	43:8:1372:1409	5765231	1	True				
ANR	5765269	CallExpression	"gx_path_copy ( ppath_old , ppath )"		5765231	0					
ANR	5765270	Callee	gx_path_copy		5765231	0					
ANR	5765271	Identifier	gx_path_copy		5765231	0					
ANR	5765272	ArgumentList	ppath_old		5765231	1					
ANR	5765273	Argument	ppath_old		5765231	0					
ANR	5765274	Identifier	ppath_old		5765231	0					
ANR	5765275	Argument	ppath		5765231	1					
ANR	5765276	Identifier	ppath		5765231	0					
ANR	5765277	ForStatement	for ( psub = ppath_old -> first_subpath ; psub != 0 && code >= 0 ; psub = ( const subpath * ) psub -> last -> next )		5765231	4					
ANR	5765278	ForInit	psub = ppath_old -> first_subpath ;	44:9:1420:1451	5765231	0	True				
ANR	5765279	AssignmentExpression	psub = ppath_old -> first_subpath		5765231	0		=			
ANR	5765280	Identifier	psub		5765231	0					
ANR	5765281	PtrMemberAccess	ppath_old -> first_subpath		5765231	1					
ANR	5765282	Identifier	ppath_old		5765231	0					
ANR	5765283	Identifier	first_subpath		5765231	1					
ANR	5765284	Condition	psub != 0 && code >= 0	44:42:1453:1474	5765231	1	True				
ANR	5765285	AndExpression	psub != 0 && code >= 0		5765231	0		&&			
ANR	5765286	EqualityExpression	psub != 0		5765231	0		!=			
ANR	5765287	Identifier	psub		5765231	0					
ANR	5765288	PrimaryExpression	0		5765231	1					
ANR	5765289	RelationalExpression	code >= 0		5765231	1		>=			
ANR	5765290	Identifier	code		5765231	0					
ANR	5765291	PrimaryExpression	0		5765231	1					
ANR	5765292	AssignmentExpression	psub = ( const subpath * ) psub -> last -> next	45:9:1486:1525	5765231	2	True	=			
ANR	5765293	Identifier	psub		5765231	0					
ANR	5765294	CastExpression	( const subpath * ) psub -> last -> next		5765231	1					
ANR	5765295	CastTarget	const subpath *		5765231	0					
ANR	5765296	PtrMemberAccess	psub -> last -> next		5765231	1					
ANR	5765297	PtrMemberAccess	psub -> last		5765231	0					
ANR	5765298	Identifier	psub		5765231	0					
ANR	5765299	Identifier	last		5765231	1					
ANR	5765300	Identifier	next		5765231	1					
ANR	5765301	ExpressionStatement	"code = subpath_expand_dashes ( psub , ppath , pgs , dash )"	47:8:1545:1597	5765231	3	True				
ANR	5765302	AssignmentExpression	"code = subpath_expand_dashes ( psub , ppath , pgs , dash )"		5765231	0		=			
ANR	5765303	Identifier	code		5765231	0					
ANR	5765304	CallExpression	"subpath_expand_dashes ( psub , ppath , pgs , dash )"		5765231	1					
ANR	5765305	Callee	subpath_expand_dashes		5765231	0					
ANR	5765306	Identifier	subpath_expand_dashes		5765231	0					
ANR	5765307	ArgumentList	psub		5765231	1					
ANR	5765308	Argument	psub		5765231	0					
ANR	5765309	Identifier	psub		5765231	0					
ANR	5765310	Argument	ppath		5765231	1					
ANR	5765311	Identifier	ppath		5765231	0					
ANR	5765312	Argument	pgs		5765231	2					
ANR	5765313	Identifier	pgs		5765231	0					
ANR	5765314	Argument	dash		5765231	3					
ANR	5765315	Identifier	dash		5765231	0					
ANR	5765316	ReturnStatement	return code ;	48:4:1603:1614	5765231	5	True				
ANR	5765317	Identifier	code		5765231	0					
ANR	5765318	ReturnType	int		5765231	1					
ANR	5765319	Identifier	gx_path_add_dash_expansion		5765231	2					
ANR	5765320	ParameterList	"const gx_path * ppath_old , gx_path * ppath , const gs_gstate * pgs"		5765231	3					
ANR	5765321	Parameter	const gx_path * ppath_old	35:27:1124:1148	5765231	0	True				
ANR	5765322	ParameterType	const gx_path *		5765231	0					
ANR	5765323	Identifier	ppath_old		5765231	1					
ANR	5765324	Parameter	gx_path * ppath	35:54:1151:1165	5765231	1	True				
ANR	5765325	ParameterType	gx_path *		5765231	0					
ANR	5765326	Identifier	ppath		5765231	1					
ANR	5765327	Parameter	const gs_gstate * pgs	36:27:1195:1215	5765231	2	True				
ANR	5765328	ParameterType	const gs_gstate *		5765231	0					
ANR	5765329	Identifier	pgs		5765231	1					
ANR	5765330	CFGEntryNode	ENTRY		5765231		True				
ANR	5765331	CFGExitNode	EXIT		5765231		True				
ANR	5765332	Symbol	psub -> last		5765231						
ANR	5765333	Symbol	code		5765231						
ANR	5765334	Symbol	ppath_old -> first_subpath		5765231						
ANR	5765335	Symbol	psub		5765231						
ANR	5765336	Symbol	gx_path_copy		5765231						
ANR	5765337	Symbol	* psub		5765231						
ANR	5765338	Symbol	* * psub		5765231						
ANR	5765339	Symbol	ppath		5765231						
ANR	5765340	Symbol	* psub -> last		5765231						
ANR	5765341	Symbol	dash -> pattern_size		5765231						
ANR	5765342	Symbol	ppath_old		5765231						
ANR	5765343	Symbol	gs_currentlineparams		5765231						
ANR	5765344	Symbol	* dash		5765231						
ANR	5765345	Symbol	* ppath_old		5765231						
ANR	5765346	Symbol	dash		5765231						
ANR	5765347	Symbol	& gs_currentlineparams ( pgs ) -> dash		5765231						
ANR	5765348	Symbol	subpath_expand_dashes		5765231						
ANR	5765349	Symbol	pgs		5765231						
ANR	5765350	Symbol	psub -> last -> next		5765231						
ANR	5765351	Function	subpath_expand_dashes	51:0:1619:11180							
ANR	5765352	FunctionDef	"subpath_expand_dashes (const subpath * psub , gx_path * ppath , const gs_gstate * pgs , const gx_dash_params * dash)"		5765351	0					
ANR	5765353	CompoundStatement		54:0:1762:11180	5765351	0					
ANR	5765354	IdentifierDeclStatement	const float * pattern = dash -> pattern ;	55:4:1768:1804	5765351	0	True				
ANR	5765355	IdentifierDecl	* pattern = dash -> pattern		5765351	0					
ANR	5765356	IdentifierDeclType	const float *		5765351	0					
ANR	5765357	Identifier	pattern		5765351	1					
ANR	5765358	AssignmentExpression	* pattern = dash -> pattern		5765351	2		=			
ANR	5765359	Identifier	pattern		5765351	0					
ANR	5765360	PtrMemberAccess	dash -> pattern		5765351	1					
ANR	5765361	Identifier	dash		5765351	0					
ANR	5765362	Identifier	pattern		5765351	1					
ANR	5765363	IdentifierDeclStatement	"int count , index ;"	56:4:1810:1826	5765351	1	True				
ANR	5765364	IdentifierDecl	count		5765351	0					
ANR	5765365	IdentifierDeclType	int		5765351	0					
ANR	5765366	Identifier	count		5765351	1					
ANR	5765367	IdentifierDecl	index		5765351	1					
ANR	5765368	IdentifierDeclType	int		5765351	0					
ANR	5765369	Identifier	index		5765351	1					
ANR	5765370	IdentifierDeclStatement	bool ink_on ;	57:4:1832:1843	5765351	2	True				
ANR	5765371	IdentifierDecl	ink_on		5765351	0					
ANR	5765372	IdentifierDeclType	bool		5765351	0					
ANR	5765373	Identifier	ink_on		5765351	1					
ANR	5765374	IdentifierDeclStatement	double elt_length ;	58:4:1849:1866	5765351	3	True				
ANR	5765375	IdentifierDecl	elt_length		5765351	0					
ANR	5765376	IdentifierDeclType	double		5765351	0					
ANR	5765377	Identifier	elt_length		5765351	1					
ANR	5765378	IdentifierDeclStatement	"fixed x0 = psub -> pt . x , y0 = psub -> pt . y ;"	59:4:1872:1910	5765351	4	True				
ANR	5765379	IdentifierDecl	x0 = psub -> pt . x		5765351	0					
ANR	5765380	IdentifierDeclType	fixed		5765351	0					
ANR	5765381	Identifier	x0		5765351	1					
ANR	5765382	AssignmentExpression	x0 = psub -> pt . x		5765351	2		=			
ANR	5765383	Identifier	x0		5765351	0					
ANR	5765384	MemberAccess	psub -> pt . x		5765351	1					
ANR	5765385	PtrMemberAccess	psub -> pt		5765351	0					
ANR	5765386	Identifier	psub		5765351	0					
ANR	5765387	Identifier	pt		5765351	1					
ANR	5765388	Identifier	x		5765351	1					
ANR	5765389	IdentifierDecl	y0 = psub -> pt . y		5765351	1					
ANR	5765390	IdentifierDeclType	fixed		5765351	0					
ANR	5765391	Identifier	y0		5765351	1					
ANR	5765392	AssignmentExpression	y0 = psub -> pt . y		5765351	2		=			
ANR	5765393	Identifier	y0		5765351	0					
ANR	5765394	MemberAccess	psub -> pt . y		5765351	1					
ANR	5765395	PtrMemberAccess	psub -> pt		5765351	0					
ANR	5765396	Identifier	psub		5765351	0					
ANR	5765397	Identifier	pt		5765351	1					
ANR	5765398	Identifier	y		5765351	1					
ANR	5765399	IdentifierDeclStatement	"fixed x , y ;"	60:4:1916:1926	5765351	5	True				
ANR	5765400	IdentifierDecl	x		5765351	0					
ANR	5765401	IdentifierDeclType	fixed		5765351	0					
ANR	5765402	Identifier	x		5765351	1					
ANR	5765403	IdentifierDecl	y		5765351	1					
ANR	5765404	IdentifierDeclType	fixed		5765351	0					
ANR	5765405	Identifier	y		5765351	1					
ANR	5765406	IdentifierDeclStatement	const segment * pseg ;	61:4:1932:1951	5765351	6	True				
ANR	5765407	IdentifierDecl	* pseg		5765351	0					
ANR	5765408	IdentifierDeclType	const segment *		5765351	0					
ANR	5765409	Identifier	pseg		5765351	1					
ANR	5765410	IdentifierDeclStatement	int wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 ) ;	62:4:1957:2015	5765351	7	True				
ANR	5765411	IdentifierDecl	wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 )		5765351	0					
ANR	5765412	IdentifierDeclType	int		5765351	0					
ANR	5765413	Identifier	wrap		5765351	1					
ANR	5765414	AssignmentExpression	wrap = ( dash -> init_ink_on && psub -> is_closed ? - 1 : 0 )		5765351	2		=			
ANR	5765415	Identifier	wrap		5765351	0					
ANR	5765416	ConditionalExpression	dash -> init_ink_on && psub -> is_closed ? - 1 : 0		5765351	1					
ANR	5765417	Condition	dash -> init_ink_on && psub -> is_closed		5765351	0					
ANR	5765418	AndExpression	dash -> init_ink_on && psub -> is_closed		5765351	0		&&			
ANR	5765419	PtrMemberAccess	dash -> init_ink_on		5765351	0					
ANR	5765420	Identifier	dash		5765351	0					
ANR	5765421	Identifier	init_ink_on		5765351	1					
ANR	5765422	PtrMemberAccess	psub -> is_closed		5765351	1					
ANR	5765423	Identifier	psub		5765351	0					
ANR	5765424	Identifier	is_closed		5765351	1					
ANR	5765425	UnaryOperationExpression	- 1		5765351	1					
ANR	5765426	UnaryOperator	-		5765351	0					
ANR	5765427	PrimaryExpression	1		5765351	1					
ANR	5765428	PrimaryExpression	0		5765351	2					
ANR	5765429	IdentifierDeclStatement	int drawing = wrap ;	63:4:2021:2039	5765351	8	True				
ANR	5765430	IdentifierDecl	drawing = wrap		5765351	0					
ANR	5765431	IdentifierDeclType	int		5765351	0					
ANR	5765432	Identifier	drawing		5765351	1					
ANR	5765433	AssignmentExpression	drawing = wrap		5765351	2		=			
ANR	5765434	Identifier	wrap		5765351	0					
ANR	5765435	Identifier	wrap		5765351	1					
ANR	5765436	IdentifierDeclStatement	segment_notes notes = ~sn_not_first ;	64:4:2045:2080	5765351	9	True				
ANR	5765437	IdentifierDecl	notes = ~sn_not_first		5765351	0					
ANR	5765438	IdentifierDeclType	segment_notes		5765351	0					
ANR	5765439	Identifier	notes		5765351	1					
ANR	5765440	AssignmentExpression	notes = ~sn_not_first		5765351	2		=			
ANR	5765441	Identifier	~sn_not_first		5765351	0					
ANR	5765442	Identifier	~sn_not_first		5765351	1					
ANR	5765443	IdentifierDeclStatement	const gx_line_params * pgs_lp = gs_currentlineparams_inline ( pgs ) ;	65:4:2086:2149	5765351	10	True				
ANR	5765444	IdentifierDecl	* pgs_lp = gs_currentlineparams_inline ( pgs )		5765351	0					
ANR	5765445	IdentifierDeclType	const gx_line_params *		5765351	0					
ANR	5765446	Identifier	pgs_lp		5765351	1					
ANR	5765447	AssignmentExpression	* pgs_lp = gs_currentlineparams_inline ( pgs )		5765351	2		=			
ANR	5765448	Identifier	pgs_lp		5765351	0					
ANR	5765449	CallExpression	gs_currentlineparams_inline ( pgs )		5765351	1					
ANR	5765450	Callee	gs_currentlineparams_inline		5765351	0					
ANR	5765451	Identifier	gs_currentlineparams_inline		5765351	0					
ANR	5765452	ArgumentList	pgs		5765351	1					
ANR	5765453	Argument	pgs		5765351	0					
ANR	5765454	Identifier	pgs		5765351	0					
ANR	5765455	IdentifierDeclStatement	bool zero_length = true ;	66:4:2155:2178	5765351	11	True				
ANR	5765456	IdentifierDecl	zero_length = true		5765351	0					
ANR	5765457	IdentifierDeclType	bool		5765351	0					
ANR	5765458	Identifier	zero_length		5765351	1					
ANR	5765459	AssignmentExpression	zero_length = true		5765351	2		=			
ANR	5765460	Identifier	true		5765351	0					
ANR	5765461	Identifier	true		5765351	1					
ANR	5765462	IdentifierDeclStatement	int code ;	67:4:2184:2192	5765351	12	True				
ANR	5765463	IdentifierDecl	code		5765351	0					
ANR	5765464	IdentifierDeclType	int		5765351	0					
ANR	5765465	Identifier	code		5765351	1					
ANR	5765466	IdentifierDeclStatement	gs_line_cap cap ;	68:4:2198:2213	5765351	13	True				
ANR	5765467	IdentifierDecl	cap		5765351	0					
ANR	5765468	IdentifierDeclType	gs_line_cap		5765351	0					
ANR	5765469	Identifier	cap		5765351	1					
ANR	5765470	IdentifierDeclStatement	"segment_notes start_notes , end_notes ;"	69:4:2219:2255	5765351	14	True				
ANR	5765471	IdentifierDecl	start_notes		5765351	0					
ANR	5765472	IdentifierDeclType	segment_notes		5765351	0					
ANR	5765473	Identifier	start_notes		5765351	1					
ANR	5765474	IdentifierDecl	end_notes		5765351	1					
ANR	5765475	IdentifierDeclType	segment_notes		5765351	0					
ANR	5765476	Identifier	end_notes		5765351	1					
ANR	5765477	IfStatement	if ( wrap )		5765351	15					
ANR	5765478	Condition	wrap	71:8:2266:2269	5765351	0	True				
ANR	5765479	Identifier	wrap		5765351	0					
ANR	5765480	CompoundStatement		18:14:509:509	5765351	1					
ANR	5765481	ExpressionStatement	cap = pgs_lp -> dash_cap	73:8:2356:2386	5765351	0	True				
ANR	5765482	AssignmentExpression	cap = pgs_lp -> dash_cap		5765351	0		=			
ANR	5765483	Identifier	cap		5765351	0					
ANR	5765484	PtrMemberAccess	pgs_lp -> dash_cap		5765351	1					
ANR	5765485	Identifier	pgs_lp		5765351	0					
ANR	5765486	Identifier	dash_cap		5765351	1					
ANR	5765487	ExpressionStatement	start_notes = sn_dash_head	74:8:2396:2422	5765351	1	True				
ANR	5765488	AssignmentExpression	start_notes = sn_dash_head		5765351	0		=			
ANR	5765489	Identifier	start_notes		5765351	0					
ANR	5765490	Identifier	sn_dash_head		5765351	1					
ANR	5765491	ElseStatement	else		5765351	0					
ANR	5765492	CompoundStatement		22:11:672:672	5765351	0					
ANR	5765493	ExpressionStatement	cap = pgs_lp -> start_cap	77:8:2497:2528	5765351	0	True				
ANR	5765494	AssignmentExpression	cap = pgs_lp -> start_cap		5765351	0		=			
ANR	5765495	Identifier	cap		5765351	0					
ANR	5765496	PtrMemberAccess	pgs_lp -> start_cap		5765351	1					
ANR	5765497	Identifier	pgs_lp		5765351	0					
ANR	5765498	Identifier	start_cap		5765351	1					
ANR	5765499	ExpressionStatement	start_notes = 0	78:8:2538:2553	5765351	1	True				
ANR	5765500	AssignmentExpression	start_notes = 0		5765351	0		=			
ANR	5765501	Identifier	start_notes		5765351	0					
ANR	5765502	PrimaryExpression	0		5765351	1					
ANR	5765503	IfStatement	"if ( ( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0 )"		5765351	16					
ANR	5765504	Condition	"( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0"	81:8:2570:2614	5765351	0	True				
ANR	5765505	RelationalExpression	"( code = gx_path_add_point ( ppath , x0 , y0 ) ) < 0"		5765351	0		<			
ANR	5765506	AssignmentExpression	"code = gx_path_add_point ( ppath , x0 , y0 )"		5765351	0		=			
ANR	5765507	Identifier	code		5765351	0					
ANR	5765508	CallExpression	"gx_path_add_point ( ppath , x0 , y0 )"		5765351	1					
ANR	5765509	Callee	gx_path_add_point		5765351	0					
ANR	5765510	Identifier	gx_path_add_point		5765351	0					
ANR	5765511	ArgumentList	ppath		5765351	1					
ANR	5765512	Argument	ppath		5765351	0					
ANR	5765513	Identifier	ppath		5765351	0					
ANR	5765514	Argument	x0		5765351	1					
ANR	5765515	Identifier	x0		5765351	0					
ANR	5765516	Argument	y0		5765351	2					
ANR	5765517	Identifier	y0		5765351	0					
ANR	5765518	PrimaryExpression	0		5765351	1					
ANR	5765519	ReturnStatement	return code ;	82:8:2625:2636	5765351	1	True				
ANR	5765520	Identifier	code		5765351	0					
ANR	5765521	Label	top :	89:2:2938:2941	5765351	17	True				
ANR	5765522	Identifier	top		5765351	0					
ANR	5765523	ExpressionStatement	count = dash -> pattern_size	89:6:2942:2968	5765351	18	True				
ANR	5765524	AssignmentExpression	count = dash -> pattern_size		5765351	0		=			
ANR	5765525	Identifier	count		5765351	0					
ANR	5765526	PtrMemberAccess	dash -> pattern_size		5765351	1					
ANR	5765527	Identifier	dash		5765351	0					
ANR	5765528	Identifier	pattern_size		5765351	1					
ANR	5765529	ExpressionStatement	ink_on = dash -> init_ink_on	90:4:2974:3000	5765351	19	True				
ANR	5765530	AssignmentExpression	ink_on = dash -> init_ink_on		5765351	0		=			
ANR	5765531	Identifier	ink_on		5765351	0					
ANR	5765532	PtrMemberAccess	dash -> init_ink_on		5765351	1					
ANR	5765533	Identifier	dash		5765351	0					
ANR	5765534	Identifier	init_ink_on		5765351	1					
ANR	5765535	ExpressionStatement	index = dash -> init_index	91:4:3006:3030	5765351	20	True				
ANR	5765536	AssignmentExpression	index = dash -> init_index		5765351	0		=			
ANR	5765537	Identifier	index		5765351	0					
ANR	5765538	PtrMemberAccess	dash -> init_index		5765351	1					
ANR	5765539	Identifier	dash		5765351	0					
ANR	5765540	Identifier	init_index		5765351	1					
ANR	5765541	ExpressionStatement	elt_length = dash -> init_dist_left	92:4:3036:3069	5765351	21	True				
ANR	5765542	AssignmentExpression	elt_length = dash -> init_dist_left		5765351	0		=			
ANR	5765543	Identifier	elt_length		5765351	0					
ANR	5765544	PtrMemberAccess	dash -> init_dist_left		5765351	1					
ANR	5765545	Identifier	dash		5765351	0					
ANR	5765546	Identifier	init_dist_left		5765351	1					
ANR	5765547	ExpressionStatement	"x = x0 , y = y0"	93:4:3075:3089	5765351	22	True				
ANR	5765548	Expression	"x = x0 , y = y0"		5765351	0					
ANR	5765549	AssignmentExpression	x = x0		5765351	0		=			
ANR	5765550	Identifier	x		5765351	0					
ANR	5765551	Identifier	x0		5765351	1					
ANR	5765552	AssignmentExpression	y = y0		5765351	1		=			
ANR	5765553	Identifier	y		5765351	0					
ANR	5765554	Identifier	y0		5765351	1					
ANR	5765555	ExpressionStatement	pseg = ( const segment * ) psub	94:4:3095:3123	5765351	23	True				
ANR	5765556	AssignmentExpression	pseg = ( const segment * ) psub		5765351	0		=			
ANR	5765557	Identifier	pseg		5765351	0					
ANR	5765558	CastExpression	( const segment * ) psub		5765351	1					
ANR	5765559	CastTarget	const segment *		5765351	0					
ANR	5765560	Identifier	psub		5765351	1					
ANR	5765561	WhileStatement	while ( ( pseg = pseg -> next ) != 0 && pseg -> type != s_start )		5765351	24					
ANR	5765562	Condition	( pseg = pseg -> next ) != 0 && pseg -> type != s_start	95:11:3136:3184	5765351	0	True				
ANR	5765563	AndExpression	( pseg = pseg -> next ) != 0 && pseg -> type != s_start		5765351	0		&&			
ANR	5765564	EqualityExpression	( pseg = pseg -> next ) != 0		5765351	0		!=			
ANR	5765565	AssignmentExpression	pseg = pseg -> next		5765351	0		=			
ANR	5765566	Identifier	pseg		5765351	0					
ANR	5765567	PtrMemberAccess	pseg -> next		5765351	1					
ANR	5765568	Identifier	pseg		5765351	0					
ANR	5765569	Identifier	next		5765351	1					
ANR	5765570	PrimaryExpression	0		5765351	1					
ANR	5765571	EqualityExpression	pseg -> type != s_start		5765351	1		!=			
ANR	5765572	PtrMemberAccess	pseg -> type		5765351	0					
ANR	5765573	Identifier	pseg		5765351	0					
ANR	5765574	Identifier	type		5765351	1					
ANR	5765575	Identifier	s_start		5765351	1					
ANR	5765576	CompoundStatement		48:8:1602:1631	5765351	1					
ANR	5765577	IdentifierDeclStatement	"fixed sx = pseg -> pt . x , sy = pseg -> pt . y ;"	96:8:3197:3235	5765351	0	True				
ANR	5765578	IdentifierDecl	sx = pseg -> pt . x		5765351	0					
ANR	5765579	IdentifierDeclType	fixed		5765351	0					
ANR	5765580	Identifier	sx		5765351	1					
ANR	5765581	AssignmentExpression	sx = pseg -> pt . x		5765351	2		=			
ANR	5765582	Identifier	sx		5765351	0					
ANR	5765583	MemberAccess	pseg -> pt . x		5765351	1					
ANR	5765584	PtrMemberAccess	pseg -> pt		5765351	0					
ANR	5765585	Identifier	pseg		5765351	0					
ANR	5765586	Identifier	pt		5765351	1					
ANR	5765587	Identifier	x		5765351	1					
ANR	5765588	IdentifierDecl	sy = pseg -> pt . y		5765351	1					
ANR	5765589	IdentifierDeclType	fixed		5765351	0					
ANR	5765590	Identifier	sy		5765351	1					
ANR	5765591	AssignmentExpression	sy = pseg -> pt . y		5765351	2		=			
ANR	5765592	Identifier	sy		5765351	0					
ANR	5765593	MemberAccess	pseg -> pt . y		5765351	1					
ANR	5765594	PtrMemberAccess	pseg -> pt		5765351	0					
ANR	5765595	Identifier	pseg		5765351	0					
ANR	5765596	Identifier	pt		5765351	1					
ANR	5765597	Identifier	y		5765351	1					
ANR	5765598	IdentifierDeclStatement	"fixed udx = sx - x , udy = sy - y ;"	97:8:3245:3277	5765351	1	True				
ANR	5765599	IdentifierDecl	udx = sx - x		5765351	0					
ANR	5765600	IdentifierDeclType	fixed		5765351	0					
ANR	5765601	Identifier	udx		5765351	1					
ANR	5765602	AssignmentExpression	udx = sx - x		5765351	2		=			
ANR	5765603	Identifier	udx		5765351	0					
ANR	5765604	AdditiveExpression	sx - x		5765351	1		-			
ANR	5765605	Identifier	sx		5765351	0					
ANR	5765606	Identifier	x		5765351	1					
ANR	5765607	IdentifierDecl	udy = sy - y		5765351	1					
ANR	5765608	IdentifierDeclType	fixed		5765351	0					
ANR	5765609	Identifier	udy		5765351	1					
ANR	5765610	AssignmentExpression	udy = sy - y		5765351	2		=			
ANR	5765611	Identifier	udy		5765351	0					
ANR	5765612	AdditiveExpression	sy - y		5765351	1		-			
ANR	5765613	Identifier	sy		5765351	0					
ANR	5765614	Identifier	y		5765351	1					
ANR	5765615	IdentifierDeclStatement	"double length , dx , dy ;"	98:8:3287:3308	5765351	2	True				
ANR	5765616	IdentifierDecl	length		5765351	0					
ANR	5765617	IdentifierDeclType	double		5765351	0					
ANR	5765618	Identifier	length		5765351	1					
ANR	5765619	IdentifierDecl	dx		5765351	1					
ANR	5765620	IdentifierDeclType	double		5765351	0					
ANR	5765621	Identifier	dx		5765351	1					
ANR	5765622	IdentifierDecl	dy		5765351	2					
ANR	5765623	IdentifierDeclType	double		5765351	0					
ANR	5765624	Identifier	dy		5765351	1					
ANR	5765625	IdentifierDeclStatement	double scale = 1 ;	99:8:3318:3334	5765351	3	True				
ANR	5765626	IdentifierDecl	scale = 1		5765351	0					
ANR	5765627	IdentifierDeclType	double		5765351	0					
ANR	5765628	Identifier	scale		5765351	1					
ANR	5765629	AssignmentExpression	scale = 1		5765351	2		=			
ANR	5765630	Identifier	scale		5765351	0					
ANR	5765631	PrimaryExpression	1		5765351	1					
ANR	5765632	IdentifierDeclStatement	double left ;	100:8:3344:3355	5765351	4	True				
ANR	5765633	IdentifierDecl	left		5765351	0					
ANR	5765634	IdentifierDeclType	double		5765351	0					
ANR	5765635	Identifier	left		5765351	1					
ANR	5765636	IdentifierDeclStatement	int gap = pseg -> type == s_gap ;	101:8:3365:3394	5765351	5	True				
ANR	5765637	IdentifierDecl	gap = pseg -> type == s_gap		5765351	0					
ANR	5765638	IdentifierDeclType	int		5765351	0					
ANR	5765639	Identifier	gap		5765351	1					
ANR	5765640	AssignmentExpression	gap = pseg -> type == s_gap		5765351	2		=			
ANR	5765641	Identifier	gap		5765351	0					
ANR	5765642	EqualityExpression	pseg -> type == s_gap		5765351	1		==			
ANR	5765643	PtrMemberAccess	pseg -> type		5765351	0					
ANR	5765644	Identifier	pseg		5765351	0					
ANR	5765645	Identifier	type		5765351	1					
ANR	5765646	Identifier	s_gap		5765351	1					
ANR	5765647	IfStatement	if ( ! ( udx | udy ) )		5765351	6					
ANR	5765648	Condition	! ( udx | udy )	103:12:3409:3420	5765351	0	True				
ANR	5765649	UnaryOperationExpression	! ( udx | udy )		5765351	0					
ANR	5765650	UnaryOperator	!		5765351	0					
ANR	5765651	InclusiveOrExpression	udx | udy		5765351	1		|			
ANR	5765652	Identifier	udx		5765351	0					
ANR	5765653	Identifier	udy		5765351	1					
ANR	5765654	CompoundStatement		50:26:1660:1660	5765351	1					
ANR	5765655	IfStatement	if ( pgs_lp -> dot_length == 0 && cap != gs_cap_round )		5765351	0					
ANR	5765656	Condition	pgs_lp -> dot_length == 0 && cap != gs_cap_round	104:16:3458:3519	5765351	0	True				
ANR	5765657	AndExpression	pgs_lp -> dot_length == 0 && cap != gs_cap_round		5765351	0		&&			
ANR	5765658	EqualityExpression	pgs_lp -> dot_length == 0		5765351	0		==			
ANR	5765659	PtrMemberAccess	pgs_lp -> dot_length		5765351	0					
ANR	5765660	Identifier	pgs_lp		5765351	0					
ANR	5765661	Identifier	dot_length		5765351	1					
ANR	5765662	PrimaryExpression	0		5765351	1					
ANR	5765663	EqualityExpression	cap != gs_cap_round		5765351	1		!=			
ANR	5765664	Identifier	cap		5765351	0					
ANR	5765665	Identifier	gs_cap_round		5765351	1					
ANR	5765666	CompoundStatement		52:37:1759:1759	5765351	1					
ANR	5765667	IfStatement	if ( zero_length || pseg -> type != s_line_close )		5765351	0					
ANR	5765668	Condition	zero_length || pseg -> type != s_line_close	110:20:3831:3871	5765351	0	True				
ANR	5765669	OrExpression	zero_length || pseg -> type != s_line_close		5765351	0		||			
ANR	5765670	Identifier	zero_length		5765351	0					
ANR	5765671	EqualityExpression	pseg -> type != s_line_close		5765351	1		!=			
ANR	5765672	PtrMemberAccess	pseg -> type		5765351	0					
ANR	5765673	Identifier	pseg		5765351	0					
ANR	5765674	Identifier	type		5765351	1					
ANR	5765675	Identifier	s_line_close		5765351	1					
ANR	5765676	ContinueStatement	continue ;	111:20:3894:3902	5765351	1	True				
ANR	5765677	ExpressionStatement	"dx = 0 , dy = 0 , length = 0"	113:12:3930:3956	5765351	1	True				
ANR	5765678	Expression	"dx = 0 , dy = 0 , length = 0"		5765351	0					
ANR	5765679	AssignmentExpression	dx = 0		5765351	0		=			
ANR	5765680	Identifier	dx		5765351	0					
ANR	5765681	PrimaryExpression	0		5765351	1					
ANR	5765682	Expression	"dy = 0 , length = 0"		5765351	1					
ANR	5765683	AssignmentExpression	dy = 0		5765351	0		=			
ANR	5765684	Identifier	dy		5765351	0					
ANR	5765685	PrimaryExpression	0		5765351	1					
ANR	5765686	AssignmentExpression	length = 0		5765351	1		=			
ANR	5765687	Identifier	length		5765351	0					
ANR	5765688	PrimaryExpression	0		5765351	1					
ANR	5765689	ElseStatement	else		5765351	0					
ANR	5765690	CompoundStatement		62:12:2224:2234	5765351	0					
ANR	5765691	IdentifierDeclStatement	gs_point d ;	115:12:3987:3997	5765351	0	True				
ANR	5765692	IdentifierDecl	d		5765351	0					
ANR	5765693	IdentifierDeclType	gs_point		5765351	0					
ANR	5765694	Identifier	d		5765351	1					
ANR	5765695	ExpressionStatement	zero_length = false	117:12:4012:4031	5765351	1	True				
ANR	5765696	AssignmentExpression	zero_length = false		5765351	0		=			
ANR	5765697	Identifier	zero_length		5765351	0					
ANR	5765698	Identifier	false		5765351	1					
ANR	5765699	ExpressionStatement	"dx = udx , dy = udy"	118:12:4045:4063	5765351	2	True				
ANR	5765700	Expression	"dx = udx , dy = udy"		5765351	0					
ANR	5765701	AssignmentExpression	dx = udx		5765351	0		=			
ANR	5765702	Identifier	dx		5765351	0					
ANR	5765703	Identifier	udx		5765351	1					
ANR	5765704	AssignmentExpression	dy = udy		5765351	1		=			
ANR	5765705	Identifier	dy		5765351	0					
ANR	5765706	Identifier	udy		5765351	1					
ANR	5765707	ExpressionStatement	"code = gs_gstate_idtransform ( pgs , dx , dy , & d )"	119:12:4099:4144	5765351	3	True				
ANR	5765708	AssignmentExpression	"code = gs_gstate_idtransform ( pgs , dx , dy , & d )"		5765351	0		=			
ANR	5765709	Identifier	code		5765351	0					
ANR	5765710	CallExpression	"gs_gstate_idtransform ( pgs , dx , dy , & d )"		5765351	1					
ANR	5765711	Callee	gs_gstate_idtransform		5765351	0					
ANR	5765712	Identifier	gs_gstate_idtransform		5765351	0					
ANR	5765713	ArgumentList	pgs		5765351	1					
ANR	5765714	Argument	pgs		5765351	0					
ANR	5765715	Identifier	pgs		5765351	0					
ANR	5765716	Argument	dx		5765351	1					
ANR	5765717	Identifier	dx		5765351	0					
ANR	5765718	Argument	dy		5765351	2					
ANR	5765719	Identifier	dy		5765351	0					
ANR	5765720	Argument	& d		5765351	3					
ANR	5765721	UnaryOperationExpression	& d		5765351	0					
ANR	5765722	UnaryOperator	&		5765351	0					
ANR	5765723	Identifier	d		5765351	1					
ANR	5765724	IfStatement	if ( code < 0 )		5765351	4					
ANR	5765725	Condition	code < 0	120:16:4162:4169	5765351	0	True				
ANR	5765726	RelationalExpression	code < 0		5765351	0		<			
ANR	5765727	Identifier	code		5765351	0					
ANR	5765728	PrimaryExpression	0		5765351	1					
ANR	5765729	CompoundStatement		67:26:2409:2409	5765351	1					
ANR	5765730	ExpressionStatement	d . x = 0	121:16:4190:4197	5765351	0	True				
ANR	5765731	AssignmentExpression	d . x = 0		5765351	0		=			
ANR	5765732	MemberAccess	d . x		5765351	0					
ANR	5765733	Identifier	d		5765351	0					
ANR	5765734	Identifier	x		5765351	1					
ANR	5765735	PrimaryExpression	0		5765351	1					
ANR	5765736	ExpressionStatement	d . y = 0	121:25:4199:4206	5765351	1	True				
ANR	5765737	AssignmentExpression	d . y = 0		5765351	0		=			
ANR	5765738	MemberAccess	d . y		5765351	0					
ANR	5765739	Identifier	d		5765351	0					
ANR	5765740	Identifier	y		5765351	1					
ANR	5765741	PrimaryExpression	0		5765351	1					
ANR	5765742	ExpressionStatement	code = 0	123:16:4264:4272	5765351	2	True				
ANR	5765743	AssignmentExpression	code = 0		5765351	0		=			
ANR	5765744	Identifier	code		5765351	0					
ANR	5765745	PrimaryExpression	0		5765351	1					
ANR	5765746	ExpressionStatement	"length = hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"	125:12:4300:4342	5765351	5	True				
ANR	5765747	AssignmentExpression	"length = hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"		5765351	0		=			
ANR	5765748	Identifier	length		5765351	0					
ANR	5765749	MultiplicativeExpression	"hypot ( d . x , d . y ) * ( 1.0 / fixed_1 )"		5765351	1		*			
ANR	5765750	CallExpression	"hypot ( d . x , d . y )"		5765351	0					
ANR	5765751	Callee	hypot		5765351	0					
ANR	5765752	Identifier	hypot		5765351	0					
ANR	5765753	ArgumentList	d . x		5765351	1					
ANR	5765754	Argument	d . x		5765351	0					
ANR	5765755	MemberAccess	d . x		5765351	0					
ANR	5765756	Identifier	d		5765351	0					
ANR	5765757	Identifier	x		5765351	1					
ANR	5765758	Argument	d . y		5765351	1					
ANR	5765759	MemberAccess	d . y		5765351	0					
ANR	5765760	Identifier	d		5765351	0					
ANR	5765761	Identifier	y		5765351	1					
ANR	5765762	MultiplicativeExpression	1.0 / fixed_1		5765351	1		/			
ANR	5765763	PrimaryExpression	1.0		5765351	0					
ANR	5765764	Identifier	fixed_1		5765351	1					
ANR	5765765	IfStatement	if ( gs_gstate_currentdashadapt ( pgs ) )		5765351	6					
ANR	5765766	Condition	gs_gstate_currentdashadapt ( pgs )	126:16:4360:4390	5765351	0	True				
ANR	5765767	CallExpression	gs_gstate_currentdashadapt ( pgs )		5765351	0					
ANR	5765768	Callee	gs_gstate_currentdashadapt		5765351	0					
ANR	5765769	Identifier	gs_gstate_currentdashadapt		5765351	0					
ANR	5765770	ArgumentList	pgs		5765351	1					
ANR	5765771	Argument	pgs		5765351	0					
ANR	5765772	Identifier	pgs		5765351	0					
ANR	5765773	CompoundStatement		74:16:2648:2691	5765351	1					
ANR	5765774	IdentifierDeclStatement	double reps = length / dash -> pattern_length ;	127:16:4411:4454	5765351	0	True				
ANR	5765775	IdentifierDecl	reps = length / dash -> pattern_length		5765351	0					
ANR	5765776	IdentifierDeclType	double		5765351	0					
ANR	5765777	Identifier	reps		5765351	1					
ANR	5765778	AssignmentExpression	reps = length / dash -> pattern_length		5765351	2		=			
ANR	5765779	Identifier	reps		5765351	0					
ANR	5765780	MultiplicativeExpression	length / dash -> pattern_length		5765351	1		/			
ANR	5765781	Identifier	length		5765351	0					
ANR	5765782	PtrMemberAccess	dash -> pattern_length		5765351	1					
ANR	5765783	Identifier	dash		5765351	0					
ANR	5765784	Identifier	pattern_length		5765351	1					
ANR	5765785	ExpressionStatement	scale = reps / ceil ( reps )	129:16:4473:4498	5765351	1	True				
ANR	5765786	AssignmentExpression	scale = reps / ceil ( reps )		5765351	0		=			
ANR	5765787	Identifier	scale		5765351	0					
ANR	5765788	MultiplicativeExpression	reps / ceil ( reps )		5765351	1		/			
ANR	5765789	Identifier	reps		5765351	0					
ANR	5765790	CallExpression	ceil ( reps )		5765351	1					
ANR	5765791	Callee	ceil		5765351	0					
ANR	5765792	Identifier	ceil		5765351	0					
ANR	5765793	ArgumentList	reps		5765351	1					
ANR	5765794	Argument	reps		5765351	0					
ANR	5765795	Identifier	reps		5765351	0					
ANR	5765796	ExpressionStatement	count = dash -> pattern_size	133:16:4677:4703	5765351	2	True				
ANR	5765797	AssignmentExpression	count = dash -> pattern_size		5765351	0		=			
ANR	5765798	Identifier	count		5765351	0					
ANR	5765799	PtrMemberAccess	dash -> pattern_size		5765351	1					
ANR	5765800	Identifier	dash		5765351	0					
ANR	5765801	Identifier	pattern_size		5765351	1					
ANR	5765802	ExpressionStatement	ink_on = dash -> init_ink_on	134:16:4721:4747	5765351	3	True				
ANR	5765803	AssignmentExpression	ink_on = dash -> init_ink_on		5765351	0		=			
ANR	5765804	Identifier	ink_on		5765351	0					
ANR	5765805	PtrMemberAccess	dash -> init_ink_on		5765351	1					
ANR	5765806	Identifier	dash		5765351	0					
ANR	5765807	Identifier	init_ink_on		5765351	1					
ANR	5765808	ExpressionStatement	index = dash -> init_index	135:16:4765:4789	5765351	4	True				
ANR	5765809	AssignmentExpression	index = dash -> init_index		5765351	0		=			
ANR	5765810	Identifier	index		5765351	0					
ANR	5765811	PtrMemberAccess	dash -> init_index		5765351	1					
ANR	5765812	Identifier	dash		5765351	0					
ANR	5765813	Identifier	init_index		5765351	1					
ANR	5765814	ExpressionStatement	elt_length = dash -> init_dist_left * scale	136:16:4807:4848	5765351	5	True				
ANR	5765815	AssignmentExpression	elt_length = dash -> init_dist_left * scale		5765351	0		=			
ANR	5765816	Identifier	elt_length		5765351	0					
ANR	5765817	MultiplicativeExpression	dash -> init_dist_left * scale		5765351	1		*			
ANR	5765818	PtrMemberAccess	dash -> init_dist_left		5765351	0					
ANR	5765819	Identifier	dash		5765351	0					
ANR	5765820	Identifier	init_dist_left		5765351	1					
ANR	5765821	Identifier	scale		5765351	1					
ANR	5765822	ExpressionStatement	left = length	139:8:4882:4895	5765351	7	True				
ANR	5765823	AssignmentExpression	left = length		5765351	0		=			
ANR	5765824	Identifier	left		5765351	0					
ANR	5765825	Identifier	length		5765351	1					
ANR	5765826	WhileStatement	while ( left > elt_length )		5765351	8					
ANR	5765827	Condition	left > elt_length	140:15:4912:4928	5765351	0	True				
ANR	5765828	RelationalExpression	left > elt_length		5765351	0		>			
ANR	5765829	Identifier	left		5765351	0					
ANR	5765830	Identifier	elt_length		5765351	1					
ANR	5765831	CompoundStatement		92:12:3400:3417	5765351	1					
ANR	5765832	IdentifierDeclStatement	double fraction = elt_length / length ;	141:12:4985:5022	5765351	0	True				
ANR	5765833	IdentifierDecl	fraction = elt_length / length		5765351	0					
ANR	5765834	IdentifierDeclType	double		5765351	0					
ANR	5765835	Identifier	fraction		5765351	1					
ANR	5765836	AssignmentExpression	fraction = elt_length / length		5765351	2		=			
ANR	5765837	Identifier	fraction		5765351	0					
ANR	5765838	MultiplicativeExpression	elt_length / length		5765351	1		/			
ANR	5765839	Identifier	elt_length		5765351	0					
ANR	5765840	Identifier	length		5765351	1					
ANR	5765841	IdentifierDeclStatement	fixed fx = ( fixed ) ( dx * fraction ) ;	142:12:5036:5070	5765351	1	True				
ANR	5765842	IdentifierDecl	fx = ( fixed ) ( dx * fraction )		5765351	0					
ANR	5765843	IdentifierDeclType	fixed		5765351	0					
ANR	5765844	Identifier	fx		5765351	1					
ANR	5765845	AssignmentExpression	fx = ( fixed ) ( dx * fraction )		5765351	2		=			
ANR	5765846	Identifier	fx		5765351	0					
ANR	5765847	CastExpression	( fixed ) ( dx * fraction )		5765351	1					
ANR	5765848	CastTarget	fixed		5765351	0					
ANR	5765849	MultiplicativeExpression	dx * fraction		5765351	1		*			
ANR	5765850	Identifier	dx		5765351	0					
ANR	5765851	Identifier	fraction		5765351	1					
ANR	5765852	IdentifierDeclStatement	fixed fy = ( fixed ) ( dy * fraction ) ;	143:12:5084:5118	5765351	2	True				
ANR	5765853	IdentifierDecl	fy = ( fixed ) ( dy * fraction )		5765351	0					
ANR	5765854	IdentifierDeclType	fixed		5765351	0					
ANR	5765855	Identifier	fy		5765351	1					
ANR	5765856	AssignmentExpression	fy = ( fixed ) ( dy * fraction )		5765351	2		=			
ANR	5765857	Identifier	fy		5765351	0					
ANR	5765858	CastExpression	( fixed ) ( dy * fraction )		5765351	1					
ANR	5765859	CastTarget	fixed		5765351	0					
ANR	5765860	MultiplicativeExpression	dy * fraction		5765351	1		*			
ANR	5765861	Identifier	dy		5765351	0					
ANR	5765862	Identifier	fraction		5765351	1					
ANR	5765863	IdentifierDeclStatement	fixed nx = x + fx ;	144:12:5132:5149	5765351	3	True				
ANR	5765864	IdentifierDecl	nx = x + fx		5765351	0					
ANR	5765865	IdentifierDeclType	fixed		5765351	0					
ANR	5765866	Identifier	nx		5765351	1					
ANR	5765867	AssignmentExpression	nx = x + fx		5765351	2		=			
ANR	5765868	Identifier	nx		5765351	0					
ANR	5765869	AdditiveExpression	x + fx		5765351	1		+			
ANR	5765870	Identifier	x		5765351	0					
ANR	5765871	Identifier	fx		5765351	1					
ANR	5765872	IdentifierDeclStatement	fixed ny = y + fy ;	145:12:5163:5180	5765351	4	True				
ANR	5765873	IdentifierDecl	ny = y + fy		5765351	0					
ANR	5765874	IdentifierDeclType	fixed		5765351	0					
ANR	5765875	Identifier	ny		5765351	1					
ANR	5765876	AssignmentExpression	ny = y + fy		5765351	2		=			
ANR	5765877	Identifier	ny		5765351	0					
ANR	5765878	AdditiveExpression	y + fy		5765351	1		+			
ANR	5765879	Identifier	y		5765351	0					
ANR	5765880	Identifier	fy		5765351	1					
ANR	5765881	IfStatement	if ( ink_on && ! gap )		5765351	5					
ANR	5765882	Condition	ink_on && ! gap	147:16:5199:5212	5765351	0	True				
ANR	5765883	AndExpression	ink_on && ! gap		5765351	0		&&			
ANR	5765884	Identifier	ink_on		5765351	0					
ANR	5765885	UnaryOperationExpression	! gap		5765351	1					
ANR	5765886	UnaryOperator	!		5765351	0					
ANR	5765887	Identifier	gap		5765351	1					
ANR	5765888	CompoundStatement		94:32:3452:3452	5765351	1					
ANR	5765889	IfStatement	if ( drawing >= 0 )		5765351	0					
ANR	5765890	Condition	drawing >= 0	148:20:5237:5248	5765351	0	True				
ANR	5765891	RelationalExpression	drawing >= 0		5765351	0		>=			
ANR	5765892	Identifier	drawing		5765351	0					
ANR	5765893	PrimaryExpression	0		5765351	1					
ANR	5765894	CompoundStatement		95:34:3488:3488	5765351	1					
ANR	5765895	IfStatement	if ( left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half )		5765351	0					
ANR	5765896	Condition	left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half	149:24:5277:5336	5765351	0	True				
ANR	5765897	AndExpression	left >= elt_length && any_abs ( fx ) + any_abs ( fy ) < fixed_half		5765351	0		&&			
ANR	5765898	RelationalExpression	left >= elt_length		5765351	0		>=			
ANR	5765899	Identifier	left		5765351	0					
ANR	5765900	Identifier	elt_length		5765351	1					
ANR	5765901	RelationalExpression	any_abs ( fx ) + any_abs ( fy ) < fixed_half		5765351	1		<			
ANR	5765902	AdditiveExpression	any_abs ( fx ) + any_abs ( fy )		5765351	0		+			
ANR	5765903	CallExpression	any_abs ( fx )		5765351	0					
ANR	5765904	Callee	any_abs		5765351	0					
ANR	5765905	Identifier	any_abs		5765351	0					
ANR	5765906	ArgumentList	fx		5765351	1					
ANR	5765907	Argument	fx		5765351	0					
ANR	5765908	Identifier	fx		5765351	0					
ANR	5765909	CallExpression	any_abs ( fy )		5765351	1					
ANR	5765910	Callee	any_abs		5765351	0					
ANR	5765911	Identifier	any_abs		5765351	0					
ANR	5765912	ArgumentList	fy		5765351	1					
ANR	5765913	Argument	fy		5765351	0					
ANR	5765914	Identifier	fy		5765351	0					
ANR	5765915	Identifier	fixed_half		5765351	1					
ANR	5765916	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"	150:24:5363:5633	5765351	1	True				
ANR	5765917	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		5765351	0		=			
ANR	5765918	Identifier	code		5765351	0					
ANR	5765919	CallExpression	"gx_path_add_dash_notes ( ppath , nx , ny , udx , udy , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		5765351	1					
ANR	5765920	Callee	gx_path_add_dash_notes		5765351	0					
ANR	5765921	Identifier	gx_path_add_dash_notes		5765351	0					
ANR	5765922	ArgumentList	ppath		5765351	1					
ANR	5765923	Argument	ppath		5765351	0					
ANR	5765924	Identifier	ppath		5765351	0					
ANR	5765925	Argument	nx		5765351	1					
ANR	5765926	Identifier	nx		5765351	0					
ANR	5765927	Argument	ny		5765351	2					
ANR	5765928	Identifier	ny		5765351	0					
ANR	5765929	Argument	udx		5765351	3					
ANR	5765930	Identifier	udx		5765351	0					
ANR	5765931	Argument	udy		5765351	4					
ANR	5765932	Identifier	udy		5765351	0					
ANR	5765933	Argument	( notes & pseg -> notes ) | start_notes | sn_dash_tail		5765351	5					
ANR	5765934	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | sn_dash_tail		5765351	0		|			
ANR	5765935	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5765936	Identifier	notes		5765351	0					
ANR	5765937	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5765938	Identifier	pseg		5765351	0					
ANR	5765939	Identifier	notes		5765351	1					
ANR	5765940	InclusiveOrExpression	start_notes | sn_dash_tail		5765351	1		|			
ANR	5765941	Identifier	start_notes		5765351	0					
ANR	5765942	Identifier	sn_dash_tail		5765351	1					
ANR	5765943	ElseStatement	else		5765351	0					
ANR	5765944	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"	155:24:5684:5944	5765351	0	True				
ANR	5765945	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		5765351	0		=			
ANR	5765946	Identifier	code		5765351	0					
ANR	5765947	CallExpression	"gx_path_add_line_notes ( ppath , nx , ny , ( ( notes & pseg -> notes ) | start_notes | sn_dash_tail ) )"		5765351	1					
ANR	5765948	Callee	gx_path_add_line_notes		5765351	0					
ANR	5765949	Identifier	gx_path_add_line_notes		5765351	0					
ANR	5765950	ArgumentList	ppath		5765351	1					
ANR	5765951	Argument	ppath		5765351	0					
ANR	5765952	Identifier	ppath		5765351	0					
ANR	5765953	Argument	nx		5765351	1					
ANR	5765954	Identifier	nx		5765351	0					
ANR	5765955	Argument	ny		5765351	2					
ANR	5765956	Identifier	ny		5765351	0					
ANR	5765957	Argument	( notes & pseg -> notes ) | start_notes | sn_dash_tail		5765351	3					
ANR	5765958	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | sn_dash_tail		5765351	0		|			
ANR	5765959	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5765960	Identifier	notes		5765351	0					
ANR	5765961	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5765962	Identifier	pseg		5765351	0					
ANR	5765963	Identifier	notes		5765351	1					
ANR	5765964	InclusiveOrExpression	start_notes | sn_dash_tail		5765351	1		|			
ANR	5765965	Identifier	start_notes		5765351	0					
ANR	5765966	Identifier	sn_dash_tail		5765351	1					
ANR	5765967	ExpressionStatement	notes |= sn_not_first	160:16:5980:6001	5765351	1	True				
ANR	5765968	AssignmentExpression	notes |= sn_not_first		5765351	0		|=			
ANR	5765969	Identifier	notes		5765351	0					
ANR	5765970	Identifier	sn_not_first		5765351	1					
ANR	5765971	ElseStatement	else		5765351	0					
ANR	5765972	CompoundStatement		108:19:4259:4259	5765351	0					
ANR	5765973	IfStatement	if ( drawing > 0 )		5765351	0					
ANR	5765974	Condition	drawing > 0	162:20:6044:6054	5765351	0	True				
ANR	5765975	RelationalExpression	drawing > 0		5765351	0		>			
ANR	5765976	Identifier	drawing		5765351	0					
ANR	5765977	PrimaryExpression	0		5765351	1					
ANR	5765978	ReturnStatement	return 0 ;	163:20:6088:6096	5765351	1	True				
ANR	5765979	PrimaryExpression	0		5765351	0					
ANR	5765980	ExpressionStatement	"code = gx_path_add_point ( ppath , nx , ny )"	164:16:6114:6153	5765351	1	True				
ANR	5765981	AssignmentExpression	"code = gx_path_add_point ( ppath , nx , ny )"		5765351	0		=			
ANR	5765982	Identifier	code		5765351	0					
ANR	5765983	CallExpression	"gx_path_add_point ( ppath , nx , ny )"		5765351	1					
ANR	5765984	Callee	gx_path_add_point		5765351	0					
ANR	5765985	Identifier	gx_path_add_point		5765351	0					
ANR	5765986	ArgumentList	ppath		5765351	1					
ANR	5765987	Argument	ppath		5765351	0					
ANR	5765988	Identifier	ppath		5765351	0					
ANR	5765989	Argument	nx		5765351	1					
ANR	5765990	Identifier	nx		5765351	0					
ANR	5765991	Argument	ny		5765351	2					
ANR	5765992	Identifier	ny		5765351	0					
ANR	5765993	ExpressionStatement	notes &= ~sn_not_first	165:16:6171:6193	5765351	2	True				
ANR	5765994	AssignmentExpression	notes &= ~sn_not_first		5765351	0		&=			
ANR	5765995	Identifier	notes		5765351	0					
ANR	5765996	Identifier	~sn_not_first		5765351	1					
ANR	5765997	ExpressionStatement	drawing = 0	166:16:6211:6222	5765351	3	True				
ANR	5765998	AssignmentExpression	drawing = 0		5765351	0		=			
ANR	5765999	Identifier	drawing		5765351	0					
ANR	5766000	PrimaryExpression	0		5765351	1					
ANR	5766001	IfStatement	if ( code < 0 )		5765351	6					
ANR	5766002	Condition	code < 0	168:16:6254:6261	5765351	0	True				
ANR	5766003	RelationalExpression	code < 0		5765351	0		<			
ANR	5766004	Identifier	code		5765351	0					
ANR	5766005	PrimaryExpression	0		5765351	1					
ANR	5766006	ReturnStatement	return code ;	169:16:6280:6291	5765351	1	True				
ANR	5766007	Identifier	code		5765351	0					
ANR	5766008	ExpressionStatement	left -= elt_length	170:12:6305:6323	5765351	7	True				
ANR	5766009	AssignmentExpression	left -= elt_length		5765351	0		-=			
ANR	5766010	Identifier	left		5765351	0					
ANR	5766011	Identifier	elt_length		5765351	1					
ANR	5766012	ExpressionStatement	ink_on = ! ink_on	171:12:6337:6353	5765351	8	True				
ANR	5766013	AssignmentExpression	ink_on = ! ink_on		5765351	0		=			
ANR	5766014	Identifier	ink_on		5765351	0					
ANR	5766015	UnaryOperationExpression	! ink_on		5765351	1					
ANR	5766016	UnaryOperator	!		5765351	0					
ANR	5766017	Identifier	ink_on		5765351	1					
ANR	5766018	ExpressionStatement	start_notes = sn_dash_head	172:12:6367:6393	5765351	9	True				
ANR	5766019	AssignmentExpression	start_notes = sn_dash_head		5765351	0		=			
ANR	5766020	Identifier	start_notes		5765351	0					
ANR	5766021	Identifier	sn_dash_head		5765351	1					
ANR	5766022	IfStatement	if ( ++ index == count )		5765351	10					
ANR	5766023	Condition	++ index == count	173:16:6411:6426	5765351	0	True				
ANR	5766024	EqualityExpression	++ index == count		5765351	0		==			
ANR	5766025	UnaryExpression	++ index		5765351	0					
ANR	5766026	IncDec	++		5765351	0					
ANR	5766027	Identifier	index		5765351	1					
ANR	5766028	Identifier	count		5765351	1					
ANR	5766029	ExpressionStatement	index = 0	174:16:6445:6454	5765351	1	True				
ANR	5766030	AssignmentExpression	index = 0		5765351	0		=			
ANR	5766031	Identifier	index		5765351	0					
ANR	5766032	PrimaryExpression	0		5765351	1					
ANR	5766033	ExpressionStatement	elt_length = pattern [ index ] * scale	175:12:6468:6503	5765351	11	True				
ANR	5766034	AssignmentExpression	elt_length = pattern [ index ] * scale		5765351	0		=			
ANR	5766035	Identifier	elt_length		5765351	0					
ANR	5766036	MultiplicativeExpression	pattern [ index ] * scale		5765351	1		*			
ANR	5766037	ArrayIndexing	pattern [ index ]		5765351	0					
ANR	5766038	Identifier	pattern		5765351	0					
ANR	5766039	Identifier	index		5765351	1					
ANR	5766040	Identifier	scale		5765351	1					
ANR	5766041	ExpressionStatement	"x = nx , y = ny"	176:12:6517:6531	5765351	12	True				
ANR	5766042	Expression	"x = nx , y = ny"		5765351	0					
ANR	5766043	AssignmentExpression	x = nx		5765351	0		=			
ANR	5766044	Identifier	x		5765351	0					
ANR	5766045	Identifier	nx		5765351	1					
ANR	5766046	AssignmentExpression	y = ny		5765351	1		=			
ANR	5766047	Identifier	y		5765351	0					
ANR	5766048	Identifier	ny		5765351	1					
ANR	5766049	ExpressionStatement	elt_length -= left	178:8:6551:6569	5765351	9	True				
ANR	5766050	AssignmentExpression	elt_length -= left		5765351	0		-=			
ANR	5766051	Identifier	elt_length		5765351	0					
ANR	5766052	Identifier	left		5765351	1					
ANR	5766053	IfStatement	if ( wrap )		5765351	10					
ANR	5766054	Condition	wrap	180:12:6632:6635	5765351	0	True				
ANR	5766055	Identifier	wrap		5765351	0					
ANR	5766056	CompoundStatement		127:18:4875:4875	5765351	1					
ANR	5766057	ExpressionStatement	end_notes = sn_dash_tail	182:12:6724:6748	5765351	0	True				
ANR	5766058	AssignmentExpression	end_notes = sn_dash_tail		5765351	0		=			
ANR	5766059	Identifier	end_notes		5765351	0					
ANR	5766060	Identifier	sn_dash_tail		5765351	1					
ANR	5766061	ElseStatement	else		5765351	0					
ANR	5766062	CompoundStatement		134:12:5213:5246	5765351	0					
ANR	5766063	IdentifierDeclStatement	const segment * pseg2 = pseg -> next ;	187:12:6976:7009	5765351	0	True				
ANR	5766064	IdentifierDecl	* pseg2 = pseg -> next		5765351	0					
ANR	5766065	IdentifierDeclType	const segment *		5765351	0					
ANR	5766066	Identifier	pseg2		5765351	1					
ANR	5766067	AssignmentExpression	* pseg2 = pseg -> next		5765351	2		=			
ANR	5766068	Identifier	pseg2		5765351	0					
ANR	5766069	PtrMemberAccess	pseg -> next		5765351	1					
ANR	5766070	Identifier	pseg		5765351	0					
ANR	5766071	Identifier	next		5765351	1					
ANR	5766072	ExpressionStatement	end_notes = 0	189:12:7024:7037	5765351	1	True				
ANR	5766073	AssignmentExpression	end_notes = 0		5765351	0		=			
ANR	5766074	Identifier	end_notes		5765351	0					
ANR	5766075	PrimaryExpression	0		5765351	1					
ANR	5766076	WhileStatement	while ( pseg2 != 0 && pseg2 -> type != s_start )		5765351	2					
ANR	5766077	Condition	pseg2 != 0 && pseg2 -> type != s_start	190:19:7058:7093	5765351	0	True				
ANR	5766078	AndExpression	pseg2 != 0 && pseg2 -> type != s_start		5765351	0		&&			
ANR	5766079	EqualityExpression	pseg2 != 0		5765351	0		!=			
ANR	5766080	Identifier	pseg2		5765351	0					
ANR	5766081	PrimaryExpression	0		5765351	1					
ANR	5766082	EqualityExpression	pseg2 -> type != s_start		5765351	1		!=			
ANR	5766083	PtrMemberAccess	pseg2 -> type		5765351	0					
ANR	5766084	Identifier	pseg2		5765351	0					
ANR	5766085	Identifier	type		5765351	1					
ANR	5766086	Identifier	s_start		5765351	1					
ANR	5766087	CompoundStatement		138:12:5345:5345	5765351	1					
ANR	5766088	IfStatement	if ( ( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy ) )		5765351	0					
ANR	5766089	Condition	( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy )	192:20:7130:7171	5765351	0	True				
ANR	5766090	OrExpression	( pseg2 -> pt . x != sx ) || ( pseg2 -> pt . x != sy )		5765351	0		||			
ANR	5766091	EqualityExpression	pseg2 -> pt . x != sx		5765351	0		!=			
ANR	5766092	MemberAccess	pseg2 -> pt . x		5765351	0					
ANR	5766093	PtrMemberAccess	pseg2 -> pt		5765351	0					
ANR	5766094	Identifier	pseg2		5765351	0					
ANR	5766095	Identifier	pt		5765351	1					
ANR	5766096	Identifier	x		5765351	1					
ANR	5766097	Identifier	sx		5765351	1					
ANR	5766098	EqualityExpression	pseg2 -> pt . x != sy		5765351	1		!=			
ANR	5766099	MemberAccess	pseg2 -> pt . x		5765351	0					
ANR	5766100	PtrMemberAccess	pseg2 -> pt		5765351	0					
ANR	5766101	Identifier	pseg2		5765351	0					
ANR	5766102	Identifier	pt		5765351	1					
ANR	5766103	Identifier	x		5765351	1					
ANR	5766104	Identifier	sy		5765351	1					
ANR	5766105	CompoundStatement		139:64:5411:5411	5765351	1					
ANR	5766106	ExpressionStatement	end_notes = sn_dash_tail	194:20:7261:7285	5765351	0	True				
ANR	5766107	AssignmentExpression	end_notes = sn_dash_tail		5765351	0		=			
ANR	5766108	Identifier	end_notes		5765351	0					
ANR	5766109	Identifier	sn_dash_tail		5765351	1					
ANR	5766110	BreakStatement	break ;	195:20:7307:7312	5765351	1	True				
ANR	5766111	ExpressionStatement	pseg2 = pseg2 -> next	197:16:7348:7367	5765351	1	True				
ANR	5766112	AssignmentExpression	pseg2 = pseg2 -> next		5765351	0		=			
ANR	5766113	Identifier	pseg2		5765351	0					
ANR	5766114	PtrMemberAccess	pseg2 -> next		5765351	1					
ANR	5766115	Identifier	pseg2		5765351	0					
ANR	5766116	Identifier	next		5765351	1					
ANR	5766117	Label	on :	200:6:7399:7401	5765351	11	True				
ANR	5766118	Identifier	on		5765351	0					
ANR	5766119	IfStatement	if ( ink_on && ! gap )		5765351	12					
ANR	5766120	Condition	ink_on && ! gap	200:13:7406:7419	5765351	0	True				
ANR	5766121	AndExpression	ink_on && ! gap		5765351	0		&&			
ANR	5766122	Identifier	ink_on		5765351	0					
ANR	5766123	UnaryOperationExpression	! gap		5765351	1					
ANR	5766124	UnaryOperator	!		5765351	0					
ANR	5766125	Identifier	gap		5765351	1					
ANR	5766126	CompoundStatement		147:29:5659:5659	5765351	1					
ANR	5766127	IfStatement	if ( drawing >= 0 )		5765351	0					
ANR	5766128	Condition	drawing >= 0	201:16:7440:7451	5765351	0	True				
ANR	5766129	RelationalExpression	drawing >= 0		5765351	0		>=			
ANR	5766130	Identifier	drawing		5765351	0					
ANR	5766131	PrimaryExpression	0		5765351	1					
ANR	5766132	CompoundStatement		148:30:5691:5691	5765351	1					
ANR	5766133	IfStatement	if ( pseg -> type == s_line_close && drawing > 0 )		5765351	0					
ANR	5766134	Condition	pseg -> type == s_line_close && drawing > 0	202:20:7476:7516	5765351	0	True				
ANR	5766135	AndExpression	pseg -> type == s_line_close && drawing > 0		5765351	0		&&			
ANR	5766136	EqualityExpression	pseg -> type == s_line_close		5765351	0		==			
ANR	5766137	PtrMemberAccess	pseg -> type		5765351	0					
ANR	5766138	Identifier	pseg		5765351	0					
ANR	5766139	Identifier	type		5765351	1					
ANR	5766140	Identifier	s_line_close		5765351	1					
ANR	5766141	RelationalExpression	drawing > 0		5765351	1		>			
ANR	5766142	Identifier	drawing		5765351	0					
ANR	5766143	PrimaryExpression	0		5765351	1					
ANR	5766144	ExpressionStatement	"code = gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	203:20:7539:7797	5765351	1	True				
ANR	5766145	AssignmentExpression	"code = gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	0		=			
ANR	5766146	Identifier	code		5765351	0					
ANR	5766147	CallExpression	"gx_path_close_subpath_notes ( ppath , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	1					
ANR	5766148	Callee	gx_path_close_subpath_notes		5765351	0					
ANR	5766149	Identifier	gx_path_close_subpath_notes		5765351	0					
ANR	5766150	ArgumentList	ppath		5765351	1					
ANR	5766151	Argument	ppath		5765351	0					
ANR	5766152	Identifier	ppath		5765351	0					
ANR	5766153	Argument	( notes & pseg -> notes ) | start_notes | end_notes		5765351	1					
ANR	5766154	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		5765351	0		|			
ANR	5766155	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5766156	Identifier	notes		5765351	0					
ANR	5766157	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5766158	Identifier	pseg		5765351	0					
ANR	5766159	Identifier	notes		5765351	1					
ANR	5766160	InclusiveOrExpression	start_notes | end_notes		5765351	1		|			
ANR	5766161	Identifier	start_notes		5765351	0					
ANR	5766162	Identifier	end_notes		5765351	1					
ANR	5766163	ElseStatement	else		5765351	0					
ANR	5766164	IfStatement	if ( ( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy ) )		5765351	0					
ANR	5766165	Condition	( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy )	207:25:7824:7911	5765351	0	True				
ANR	5766166	AndExpression	( any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half ) && ( udx | udy )		5765351	0		&&			
ANR	5766167	RelationalExpression	any_abs ( sx - x ) + any_abs ( sy - y ) < fixed_half		5765351	0		<			
ANR	5766168	AdditiveExpression	any_abs ( sx - x ) + any_abs ( sy - y )		5765351	0		+			
ANR	5766169	CallExpression	any_abs ( sx - x )		5765351	0					
ANR	5766170	Callee	any_abs		5765351	0					
ANR	5766171	Identifier	any_abs		5765351	0					
ANR	5766172	ArgumentList	sx - x		5765351	1					
ANR	5766173	Argument	sx - x		5765351	0					
ANR	5766174	AdditiveExpression	sx - x		5765351	0		-			
ANR	5766175	Identifier	sx		5765351	0					
ANR	5766176	Identifier	x		5765351	1					
ANR	5766177	CallExpression	any_abs ( sy - y )		5765351	1					
ANR	5766178	Callee	any_abs		5765351	0					
ANR	5766179	Identifier	any_abs		5765351	0					
ANR	5766180	ArgumentList	sy - y		5765351	1					
ANR	5766181	Argument	sy - y		5765351	0					
ANR	5766182	AdditiveExpression	sy - y		5765351	0		-			
ANR	5766183	Identifier	sy		5765351	0					
ANR	5766184	Identifier	y		5765351	1					
ANR	5766185	Identifier	fixed_half		5765351	1					
ANR	5766186	InclusiveOrExpression	udx | udy		5765351	1		|			
ANR	5766187	Identifier	udx		5765351	0					
ANR	5766188	Identifier	udy		5765351	1					
ANR	5766189	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	214:20:8310:8515	5765351	1	True				
ANR	5766190	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	0		=			
ANR	5766191	Identifier	code		5765351	0					
ANR	5766192	CallExpression	"gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	1					
ANR	5766193	Callee	gx_path_add_dash_notes		5765351	0					
ANR	5766194	Identifier	gx_path_add_dash_notes		5765351	0					
ANR	5766195	ArgumentList	ppath		5765351	1					
ANR	5766196	Argument	ppath		5765351	0					
ANR	5766197	Identifier	ppath		5765351	0					
ANR	5766198	Argument	sx		5765351	1					
ANR	5766199	Identifier	sx		5765351	0					
ANR	5766200	Argument	sy		5765351	2					
ANR	5766201	Identifier	sy		5765351	0					
ANR	5766202	Argument	udx		5765351	3					
ANR	5766203	Identifier	udx		5765351	0					
ANR	5766204	Argument	udy		5765351	4					
ANR	5766205	Identifier	udy		5765351	0					
ANR	5766206	Argument	( notes & pseg -> notes ) | start_notes | end_notes		5765351	5					
ANR	5766207	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		5765351	0		|			
ANR	5766208	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5766209	Identifier	notes		5765351	0					
ANR	5766210	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5766211	Identifier	pseg		5765351	0					
ANR	5766212	Identifier	notes		5765351	1					
ANR	5766213	InclusiveOrExpression	start_notes | end_notes		5765351	1		|			
ANR	5766214	Identifier	start_notes		5765351	0					
ANR	5766215	Identifier	end_notes		5765351	1					
ANR	5766216	ElseStatement	else		5765351	0					
ANR	5766217	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	218:20:8558:8753	5765351	0	True				
ANR	5766218	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	0		=			
ANR	5766219	Identifier	code		5765351	0					
ANR	5766220	CallExpression	"gx_path_add_line_notes ( ppath , sx , sy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	1					
ANR	5766221	Callee	gx_path_add_line_notes		5765351	0					
ANR	5766222	Identifier	gx_path_add_line_notes		5765351	0					
ANR	5766223	ArgumentList	ppath		5765351	1					
ANR	5766224	Argument	ppath		5765351	0					
ANR	5766225	Identifier	ppath		5765351	0					
ANR	5766226	Argument	sx		5765351	1					
ANR	5766227	Identifier	sx		5765351	0					
ANR	5766228	Argument	sy		5765351	2					
ANR	5766229	Identifier	sy		5765351	0					
ANR	5766230	Argument	( notes & pseg -> notes ) | start_notes | end_notes		5765351	3					
ANR	5766231	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		5765351	0		|			
ANR	5766232	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5766233	Identifier	notes		5765351	0					
ANR	5766234	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5766235	Identifier	pseg		5765351	0					
ANR	5766236	Identifier	notes		5765351	1					
ANR	5766237	InclusiveOrExpression	start_notes | end_notes		5765351	1		|			
ANR	5766238	Identifier	start_notes		5765351	0					
ANR	5766239	Identifier	end_notes		5765351	1					
ANR	5766240	ExpressionStatement	notes |= sn_not_first	221:16:8771:8792	5765351	1	True				
ANR	5766241	AssignmentExpression	notes |= sn_not_first		5765351	0		|=			
ANR	5766242	Identifier	notes		5765351	0					
ANR	5766243	Identifier	sn_not_first		5765351	1					
ANR	5766244	ElseStatement	else		5765351	0					
ANR	5766245	CompoundStatement		170:15:7060:7060	5765351	0					
ANR	5766246	ExpressionStatement	"code = gx_path_add_point ( ppath , sx , sy )"	224:12:8837:8876	5765351	0	True				
ANR	5766247	AssignmentExpression	"code = gx_path_add_point ( ppath , sx , sy )"		5765351	0		=			
ANR	5766248	Identifier	code		5765351	0					
ANR	5766249	CallExpression	"gx_path_add_point ( ppath , sx , sy )"		5765351	1					
ANR	5766250	Callee	gx_path_add_point		5765351	0					
ANR	5766251	Identifier	gx_path_add_point		5765351	0					
ANR	5766252	ArgumentList	ppath		5765351	1					
ANR	5766253	Argument	ppath		5765351	0					
ANR	5766254	Identifier	ppath		5765351	0					
ANR	5766255	Argument	sx		5765351	1					
ANR	5766256	Identifier	sx		5765351	0					
ANR	5766257	Argument	sy		5765351	2					
ANR	5766258	Identifier	sy		5765351	0					
ANR	5766259	ExpressionStatement	notes &= ~sn_not_first	225:12:8890:8912	5765351	1	True				
ANR	5766260	AssignmentExpression	notes &= ~sn_not_first		5765351	0		&=			
ANR	5766261	Identifier	notes		5765351	0					
ANR	5766262	Identifier	~sn_not_first		5765351	1					
ANR	5766263	IfStatement	if ( elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 ) )		5765351	2					
ANR	5766264	Condition	elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 )	226:16:8930:9135	5765351	0	True				
ANR	5766265	AndExpression	elt_length < fixed2float ( fixed_epsilon ) && ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0 )		5765351	0		&&			
ANR	5766266	RelationalExpression	elt_length < fixed2float ( fixed_epsilon )		5765351	0		<			
ANR	5766267	Identifier	elt_length		5765351	0					
ANR	5766268	CallExpression	fixed2float ( fixed_epsilon )		5765351	1					
ANR	5766269	Callee	fixed2float		5765351	0					
ANR	5766270	Identifier	fixed2float		5765351	0					
ANR	5766271	ArgumentList	fixed_epsilon		5765351	1					
ANR	5766272	Argument	fixed_epsilon		5765351	0					
ANR	5766273	Identifier	fixed_epsilon		5765351	0					
ANR	5766274	OrExpression	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0		5765351	1		||			
ANR	5766275	EqualityExpression	pseg -> next == 0		5765351	0		==			
ANR	5766276	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766277	Identifier	pseg		5765351	0					
ANR	5766278	Identifier	next		5765351	1					
ANR	5766279	PrimaryExpression	0		5765351	1					
ANR	5766280	OrExpression	pseg -> next -> type == s_start || pseg -> next -> type == s_gap || elt_length == 0		5765351	1		||			
ANR	5766281	EqualityExpression	pseg -> next -> type == s_start		5765351	0		==			
ANR	5766282	PtrMemberAccess	pseg -> next -> type		5765351	0					
ANR	5766283	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766284	Identifier	pseg		5765351	0					
ANR	5766285	Identifier	next		5765351	1					
ANR	5766286	Identifier	type		5765351	1					
ANR	5766287	Identifier	s_start		5765351	1					
ANR	5766288	OrExpression	pseg -> next -> type == s_gap || elt_length == 0		5765351	1		||			
ANR	5766289	EqualityExpression	pseg -> next -> type == s_gap		5765351	0		==			
ANR	5766290	PtrMemberAccess	pseg -> next -> type		5765351	0					
ANR	5766291	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766292	Identifier	pseg		5765351	0					
ANR	5766293	Identifier	next		5765351	1					
ANR	5766294	Identifier	type		5765351	1					
ANR	5766295	Identifier	s_gap		5765351	1					
ANR	5766296	EqualityExpression	elt_length == 0		5765351	1		==			
ANR	5766297	Identifier	elt_length		5765351	0					
ANR	5766298	PrimaryExpression	0		5765351	1					
ANR	5766299	CompoundStatement		185:16:7712:7730	5765351	1					
ANR	5766300	IdentifierDeclStatement	double elt_length1 ;	238:16:9475:9493	5765351	0	True				
ANR	5766301	IdentifierDecl	elt_length1		5765351	0					
ANR	5766302	IdentifierDeclType	double		5765351	0					
ANR	5766303	Identifier	elt_length1		5765351	1					
ANR	5766304	IfStatement	if ( code < 0 )		5765351	1					
ANR	5766305	Condition	code < 0	240:20:9516:9523	5765351	0	True				
ANR	5766306	RelationalExpression	code < 0		5765351	0		<			
ANR	5766307	Identifier	code		5765351	0					
ANR	5766308	PrimaryExpression	0		5765351	1					
ANR	5766309	ReturnStatement	return code ;	241:20:9546:9557	5765351	1	True				
ANR	5766310	Identifier	code		5765351	0					
ANR	5766311	IfStatement	if ( ++ index == count )		5765351	2					
ANR	5766312	Condition	++ index == count	242:20:9579:9594	5765351	0	True				
ANR	5766313	EqualityExpression	++ index == count		5765351	0		==			
ANR	5766314	UnaryExpression	++ index		5765351	0					
ANR	5766315	IncDec	++		5765351	0					
ANR	5766316	Identifier	index		5765351	1					
ANR	5766317	Identifier	count		5765351	1					
ANR	5766318	ExpressionStatement	index = 0	243:20:9617:9626	5765351	1	True				
ANR	5766319	AssignmentExpression	index = 0		5765351	0		=			
ANR	5766320	Identifier	index		5765351	0					
ANR	5766321	PrimaryExpression	0		5765351	1					
ANR	5766322	ExpressionStatement	elt_length1 = pattern [ index ] * scale	244:16:9644:9680	5765351	3	True				
ANR	5766323	AssignmentExpression	elt_length1 = pattern [ index ] * scale		5765351	0		=			
ANR	5766324	Identifier	elt_length1		5765351	0					
ANR	5766325	MultiplicativeExpression	pattern [ index ] * scale		5765351	1		*			
ANR	5766326	ArrayIndexing	pattern [ index ]		5765351	0					
ANR	5766327	Identifier	pattern		5765351	0					
ANR	5766328	Identifier	index		5765351	1					
ANR	5766329	Identifier	scale		5765351	1					
ANR	5766330	IfStatement	if ( pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap )		5765351	4					
ANR	5766331	Condition	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap	245:20:9702:9816	5765351	0	True				
ANR	5766332	OrExpression	pseg -> next == 0 || pseg -> next -> type == s_start || pseg -> next -> type == s_gap		5765351	0		||			
ANR	5766333	EqualityExpression	pseg -> next == 0		5765351	0		==			
ANR	5766334	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766335	Identifier	pseg		5765351	0					
ANR	5766336	Identifier	next		5765351	1					
ANR	5766337	PrimaryExpression	0		5765351	1					
ANR	5766338	OrExpression	pseg -> next -> type == s_start || pseg -> next -> type == s_gap		5765351	1		||			
ANR	5766339	EqualityExpression	pseg -> next -> type == s_start		5765351	0		==			
ANR	5766340	PtrMemberAccess	pseg -> next -> type		5765351	0					
ANR	5766341	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766342	Identifier	pseg		5765351	0					
ANR	5766343	Identifier	next		5765351	1					
ANR	5766344	Identifier	type		5765351	1					
ANR	5766345	Identifier	s_start		5765351	1					
ANR	5766346	EqualityExpression	pseg -> next -> type == s_gap		5765351	1		==			
ANR	5766347	PtrMemberAccess	pseg -> next -> type		5765351	0					
ANR	5766348	PtrMemberAccess	pseg -> next		5765351	0					
ANR	5766349	Identifier	pseg		5765351	0					
ANR	5766350	Identifier	next		5765351	1					
ANR	5766351	Identifier	type		5765351	1					
ANR	5766352	Identifier	s_gap		5765351	1					
ANR	5766353	CompoundStatement		194:47:8056:8056	5765351	1					
ANR	5766354	ExpressionStatement	elt_length = elt_length1	248:20:9841:9865	5765351	0	True				
ANR	5766355	AssignmentExpression	elt_length = elt_length1		5765351	0		=			
ANR	5766356	Identifier	elt_length		5765351	0					
ANR	5766357	Identifier	elt_length1		5765351	1					
ANR	5766358	ExpressionStatement	left = 0	249:20:9887:9895	5765351	1	True				
ANR	5766359	AssignmentExpression	left = 0		5765351	0		=			
ANR	5766360	Identifier	left		5765351	0					
ANR	5766361	PrimaryExpression	0		5765351	1					
ANR	5766362	ExpressionStatement	ink_on = true	250:20:9917:9930	5765351	2	True				
ANR	5766363	AssignmentExpression	ink_on = true		5765351	0		=			
ANR	5766364	Identifier	ink_on		5765351	0					
ANR	5766365	Identifier	true		5765351	1					
ANR	5766366	GotoStatement	goto on ;	251:20:9952:9959	5765351	3	True				
ANR	5766367	Identifier	on		5765351	0					
ANR	5766368	IfStatement	if ( elt_length1 == 0 )		5765351	5					
ANR	5766369	Condition	elt_length1 == 0	256:20:10164:10179	5765351	0	True				
ANR	5766370	EqualityExpression	elt_length1 == 0		5765351	0		==			
ANR	5766371	Identifier	elt_length1		5765351	0					
ANR	5766372	PrimaryExpression	0		5765351	1					
ANR	5766373	CompoundStatement		203:38:8419:8419	5765351	1					
ANR	5766374	ExpressionStatement	left = 0	257:20:10204:10212	5765351	0	True				
ANR	5766375	AssignmentExpression	left = 0		5765351	0		=			
ANR	5766376	Identifier	left		5765351	0					
ANR	5766377	PrimaryExpression	0		5765351	1					
ANR	5766378	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"	258:20:10234:10438	5765351	1	True				
ANR	5766379	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	0		=			
ANR	5766380	Identifier	code		5765351	0					
ANR	5766381	CallExpression	"gx_path_add_dash_notes ( ppath , sx , sy , udx , udy , ( ( notes & pseg -> notes ) | start_notes | end_notes ) )"		5765351	1					
ANR	5766382	Callee	gx_path_add_dash_notes		5765351	0					
ANR	5766383	Identifier	gx_path_add_dash_notes		5765351	0					
ANR	5766384	ArgumentList	ppath		5765351	1					
ANR	5766385	Argument	ppath		5765351	0					
ANR	5766386	Identifier	ppath		5765351	0					
ANR	5766387	Argument	sx		5765351	1					
ANR	5766388	Identifier	sx		5765351	0					
ANR	5766389	Argument	sy		5765351	2					
ANR	5766390	Identifier	sy		5765351	0					
ANR	5766391	Argument	udx		5765351	3					
ANR	5766392	Identifier	udx		5765351	0					
ANR	5766393	Argument	udy		5765351	4					
ANR	5766394	Identifier	udy		5765351	0					
ANR	5766395	Argument	( notes & pseg -> notes ) | start_notes | end_notes		5765351	5					
ANR	5766396	InclusiveOrExpression	( notes & pseg -> notes ) | start_notes | end_notes		5765351	0		|			
ANR	5766397	BitAndExpression	notes & pseg -> notes		5765351	0		&			
ANR	5766398	Identifier	notes		5765351	0					
ANR	5766399	PtrMemberAccess	pseg -> notes		5765351	1					
ANR	5766400	Identifier	pseg		5765351	0					
ANR	5766401	Identifier	notes		5765351	1					
ANR	5766402	InclusiveOrExpression	start_notes | end_notes		5765351	1		|			
ANR	5766403	Identifier	start_notes		5765351	0					
ANR	5766404	Identifier	end_notes		5765351	1					
ANR	5766405	IfStatement	if ( ++ index == count )		5765351	2					
ANR	5766406	Condition	++ index == count	261:24:10464:10479	5765351	0	True				
ANR	5766407	EqualityExpression	++ index == count		5765351	0		==			
ANR	5766408	UnaryExpression	++ index		5765351	0					
ANR	5766409	IncDec	++		5765351	0					
ANR	5766410	Identifier	index		5765351	1					
ANR	5766411	Identifier	count		5765351	1					
ANR	5766412	ExpressionStatement	index = 0	262:24:10506:10515	5765351	1	True				
ANR	5766413	AssignmentExpression	index = 0		5765351	0		=			
ANR	5766414	Identifier	index		5765351	0					
ANR	5766415	PrimaryExpression	0		5765351	1					
ANR	5766416	ExpressionStatement	elt_length = pattern [ index ] * scale	263:20:10537:10572	5765351	3	True				
ANR	5766417	AssignmentExpression	elt_length = pattern [ index ] * scale		5765351	0		=			
ANR	5766418	Identifier	elt_length		5765351	0					
ANR	5766419	MultiplicativeExpression	pattern [ index ] * scale		5765351	1		*			
ANR	5766420	ArrayIndexing	pattern [ index ]		5765351	0					
ANR	5766421	Identifier	pattern		5765351	0					
ANR	5766422	Identifier	index		5765351	1					
ANR	5766423	Identifier	scale		5765351	1					
ANR	5766424	ExpressionStatement	ink_on = false	264:20:10594:10608	5765351	4	True				
ANR	5766425	AssignmentExpression	ink_on = false		5765351	0		=			
ANR	5766426	Identifier	ink_on		5765351	0					
ANR	5766427	Identifier	false		5765351	1					
ANR	5766428	ElseStatement	else		5765351	0					
ANR	5766429	IfStatement	if ( -- index == 0 )		5765351	0					
ANR	5766430	Condition	-- index == 0	265:27:10637:10648	5765351	0	True				
ANR	5766431	EqualityExpression	-- index == 0		5765351	0		==			
ANR	5766432	UnaryExpression	-- index		5765351	0					
ANR	5766433	IncDec	--		5765351	0					
ANR	5766434	Identifier	index		5765351	1					
ANR	5766435	PrimaryExpression	0		5765351	1					
ANR	5766436	CompoundStatement		212:41:8888:8888	5765351	1					
ANR	5766437	ExpressionStatement	index = count - 1	267:20:10717:10734	5765351	0	True				
ANR	5766438	AssignmentExpression	index = count - 1		5765351	0		=			
ANR	5766439	Identifier	index		5765351	0					
ANR	5766440	AdditiveExpression	count - 1		5765351	1		-			
ANR	5766441	Identifier	count		5765351	0					
ANR	5766442	PrimaryExpression	1		5765351	1					
ANR	5766443	IfStatement	if ( drawing > 0 )		5765351	3					
ANR	5766444	Condition	drawing > 0	270:16:10784:10794	5765351	0	True				
ANR	5766445	RelationalExpression	drawing > 0		5765351	0		>			
ANR	5766446	Identifier	drawing		5765351	0					
ANR	5766447	PrimaryExpression	0		5765351	1					
ANR	5766448	ReturnStatement	return code ;	271:16:10824:10835	5765351	1	True				
ANR	5766449	Identifier	code		5765351	0					
ANR	5766450	ExpressionStatement	drawing = 0	272:12:10849:10860	5765351	4	True				
ANR	5766451	AssignmentExpression	drawing = 0		5765351	0		=			
ANR	5766452	Identifier	drawing		5765351	0					
ANR	5766453	PrimaryExpression	0		5765351	1					
ANR	5766454	IfStatement	if ( code < 0 )		5765351	13					
ANR	5766455	Condition	code < 0	274:12:10884:10891	5765351	0	True				
ANR	5766456	RelationalExpression	code < 0		5765351	0		<			
ANR	5766457	Identifier	code		5765351	0					
ANR	5766458	PrimaryExpression	0		5765351	1					
ANR	5766459	ReturnStatement	return code ;	275:12:10906:10917	5765351	1	True				
ANR	5766460	Identifier	code		5765351	0					
ANR	5766461	ExpressionStatement	"x = sx , y = sy"	276:8:10927:10941	5765351	14	True				
ANR	5766462	Expression	"x = sx , y = sy"		5765351	0					
ANR	5766463	AssignmentExpression	x = sx		5765351	0		=			
ANR	5766464	Identifier	x		5765351	0					
ANR	5766465	Identifier	sx		5765351	1					
ANR	5766466	AssignmentExpression	y = sy		5765351	1		=			
ANR	5766467	Identifier	y		5765351	0					
ANR	5766468	Identifier	sy		5765351	1					
ANR	5766469	ExpressionStatement	cap = pgs_lp -> dash_cap	277:8:10951:10973	5765351	15	True				
ANR	5766470	AssignmentExpression	cap = pgs_lp -> dash_cap		5765351	0		=			
ANR	5766471	Identifier	cap		5765351	0					
ANR	5766472	PtrMemberAccess	pgs_lp -> dash_cap		5765351	1					
ANR	5766473	Identifier	pgs_lp		5765351	0					
ANR	5766474	Identifier	dash_cap		5765351	1					
ANR	5766475	IfStatement	if ( wrap && drawing <= 0 )		5765351	25					
ANR	5766476	Condition	wrap && drawing <= 0	280:8:11021:11040	5765351	0	True				
ANR	5766477	AndExpression	wrap && drawing <= 0		5765351	0		&&			
ANR	5766478	Identifier	wrap		5765351	0					
ANR	5766479	RelationalExpression	drawing <= 0		5765351	1		<=			
ANR	5766480	Identifier	drawing		5765351	0					
ANR	5766481	PrimaryExpression	0		5765351	1					
ANR	5766482	CompoundStatement		227:30:9280:9280	5765351	1					
ANR	5766483	ExpressionStatement	drawing = 1	282:8:11129:11140	5765351	0	True				
ANR	5766484	AssignmentExpression	drawing = 1		5765351	0		=			
ANR	5766485	Identifier	drawing		5765351	0					
ANR	5766486	PrimaryExpression	1		5765351	1					
ANR	5766487	GotoStatement	goto top ;	283:8:11150:11158	5765351	1	True				
ANR	5766488	Identifier	top		5765351	0					
ANR	5766489	ReturnStatement	return 0 ;	285:4:11170:11178	5765351	26	True				
ANR	5766490	PrimaryExpression	0		5765351	0					
ANR	5766491	ReturnType	static int		5765351	1					
ANR	5766492	Identifier	subpath_expand_dashes		5765351	2					
ANR	5766493	ParameterList	"const subpath * psub , gx_path * ppath , const gs_gstate * pgs , const gx_dash_params * dash"		5765351	3					
ANR	5766494	Parameter	const subpath * psub	52:22:1652:1671	5765351	0	True				
ANR	5766495	ParameterType	const subpath *		5765351	0					
ANR	5766496	Identifier	psub		5765351	1					
ANR	5766497	Parameter	gx_path * ppath	52:44:1674:1688	5765351	1	True				
ANR	5766498	ParameterType	gx_path *		5765351	0					
ANR	5766499	Identifier	ppath		5765351	1					
ANR	5766500	Parameter	const gs_gstate * pgs	53:19:1710:1730	5765351	2	True				
ANR	5766501	ParameterType	const gs_gstate *		5765351	0					
ANR	5766502	Identifier	pgs		5765351	1					
ANR	5766503	Parameter	const gx_dash_params * dash	53:42:1733:1759	5765351	3	True				
ANR	5766504	ParameterType	const gx_dash_params *		5765351	0					
ANR	5766505	Identifier	dash		5765351	1					
ANR	5766506	CFGEntryNode	ENTRY		5765351		True				
ANR	5766507	CFGExitNode	EXIT		5765351		True				
ANR	5766508	Symbol	* index		5765351						
ANR	5766509	Symbol	dash -> init_index		5765351						
ANR	5766510	Symbol	dash -> init_dist_left		5765351						
ANR	5766511	Symbol	gx_path_add_dash_notes		5765351						
ANR	5766512	Symbol	gx_path_close_subpath_notes		5765351						
ANR	5766513	Symbol	drawing		5765351						
ANR	5766514	Symbol	s_line_close		5765351						
ANR	5766515	Symbol	index		5765351						
ANR	5766516	Symbol	gs_gstate_currentdashadapt		5765351						
ANR	5766517	Symbol	ceil		5765351						
ANR	5766518	Symbol	gx_path_add_point		5765351						
ANR	5766519	Symbol	pseg2 -> pt		5765351						
ANR	5766520	Symbol	psub -> is_closed		5765351						
ANR	5766521	Symbol	left		5765351						
ANR	5766522	Symbol	sn_dash_head		5765351						
ANR	5766523	Symbol	reps		5765351						
ANR	5766524	Symbol	* pgs_lp		5765351						
ANR	5766525	Symbol	pattern		5765351						
ANR	5766526	Symbol	pseg2 -> pt . x		5765351						
ANR	5766527	Symbol	sn_dash_tail		5765351						
ANR	5766528	Symbol	start_notes		5765351						
ANR	5766529	Symbol	pseg -> pt		5765351						
ANR	5766530	Symbol	end_notes		5765351						
ANR	5766531	Symbol	dash -> init_ink_on		5765351						
ANR	5766532	Symbol	pseg -> type		5765351						
ANR	5766533	Symbol	* dash		5765351						
ANR	5766534	Symbol	hypot		5765351						
ANR	5766535	Symbol	any_abs		5765351						
ANR	5766536	Symbol	pgs		5765351						
ANR	5766537	Symbol	psub -> pt . y		5765351						
ANR	5766538	Symbol	psub -> pt . x		5765351						
ANR	5766539	Symbol	d		5765351						
ANR	5766540	Symbol	sx		5765351						
ANR	5766541	Symbol	sy		5765351						
ANR	5766542	Symbol	pseg2 -> next		5765351						
ANR	5766543	Symbol	fraction		5765351						
ANR	5766544	Symbol	pgs_lp -> start_cap		5765351						
ANR	5766545	Symbol	pseg -> next -> type		5765351						
ANR	5766546	Symbol	x		5765351						
ANR	5766547	Symbol	y		5765351						
ANR	5766548	Symbol	wrap		5765351						
ANR	5766549	Symbol	notes		5765351						
ANR	5766550	Symbol	s_start		5765351						
ANR	5766551	Symbol	* * pseg		5765351						
ANR	5766552	Symbol	s_gap		5765351						
ANR	5766553	Symbol	pseg2		5765351						
ANR	5766554	Symbol	pseg -> next		5765351						
ANR	5766555	Symbol	dx		5765351						
ANR	5766556	Symbol	fixed_1		5765351						
ANR	5766557	Symbol	dy		5765351						
ANR	5766558	Symbol	gs_currentlineparams_inline		5765351						
ANR	5766559	Symbol	fixed_epsilon		5765351						
ANR	5766560	Symbol	psub -> pt		5765351						
ANR	5766561	Symbol	gs_gstate_idtransform		5765351						
ANR	5766562	Symbol	* pattern		5765351						
ANR	5766563	Symbol	* psub		5765351						
ANR	5766564	Symbol	gx_path_add_line_notes		5765351						
ANR	5766565	Symbol	count		5765351						
ANR	5766566	Symbol	pseg -> pt . x		5765351						
ANR	5766567	Symbol	pseg -> pt . y		5765351						
ANR	5766568	Symbol	dash -> pattern_size		5765351						
ANR	5766569	Symbol	ink_on		5765351						
ANR	5766570	Symbol	* pseg2		5765351						
ANR	5766571	Symbol	x0		5765351						
ANR	5766572	Symbol	pgs_lp		5765351						
ANR	5766573	Symbol	true		5765351						
ANR	5766574	Symbol	* pseg		5765351						
ANR	5766575	Symbol	dash -> pattern		5765351						
ANR	5766576	Symbol	dash		5765351						
ANR	5766577	Symbol	pseg2 -> type		5765351						
ANR	5766578	Symbol	dash -> pattern_length		5765351						
ANR	5766579	Symbol	code		5765351						
ANR	5766580	Symbol	pseg -> notes		5765351						
ANR	5766581	Symbol	~sn_not_first		5765351						
ANR	5766582	Symbol	udx		5765351						
ANR	5766583	Symbol	scale		5765351						
ANR	5766584	Symbol	nx		5765351						
ANR	5766585	Symbol	ppath		5765351						
ANR	5766586	Symbol	udy		5765351						
ANR	5766587	Symbol	ny		5765351						
ANR	5766588	Symbol	pgs_lp -> dash_cap		5765351						
ANR	5766589	Symbol	zero_length		5765351						
ANR	5766590	Symbol	pseg		5765351						
ANR	5766591	Symbol	fx		5765351						
ANR	5766592	Symbol	cap		5765351						
ANR	5766593	Symbol	fy		5765351						
ANR	5766594	Symbol	y0		5765351						
ANR	5766595	Symbol	gap		5765351						
ANR	5766596	Symbol	fixed_half		5765351						
ANR	5766597	Symbol	d . x		5765351						
ANR	5766598	Symbol	d . y		5765351						
ANR	5766599	Symbol	gs_cap_round		5765351						
ANR	5766600	Symbol	psub		5765351						
ANR	5766601	Symbol	fixed2float		5765351						
ANR	5766602	Symbol	* pseg -> next		5765351						
ANR	5766603	Symbol	elt_length		5765351						
ANR	5766604	Symbol	pgs_lp -> dot_length		5765351						
ANR	5766605	Symbol	length		5765351						
ANR	5766606	Symbol	false		5765351						
ANR	5766607	Symbol	& d		5765351						
ANR	5766608	Symbol	elt_length1		5765351						
ANR	5766609	Symbol	sn_not_first		5765351						
