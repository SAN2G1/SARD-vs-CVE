command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4910118	File	data/converged/CVE-2018-16863_ghostpdl/genconf.c								
ANR	4910119	DeclStmt									
ANR	4910120	Decl							long long int	long long int	mem_alloc_count
ANR	4910121	DeclStmt									
ANR	4910122	Decl							struct mem_hdr	struct mem_hdr	memhdr
ANR	4910123	ClassDef	mem_hdr	251:0:8149:8220							
ANR	4910124	DeclStmt									
ANR	4910125	Decl							size_t	size_t	s
ANR	4910126	DeclStmt									
ANR	4910127	Decl							long long int	long long int	count
ANR	4910128	DeclStmt									
ANR	4910129	Decl							memhdr	memhdr *	next
ANR	4910130	DeclStmt									
ANR	4910131	Decl							memhdr	memhdr	memhdr_lst
ANR	4910132	DeclStmt									
ANR	4910133	Decl							memhdr	memhdr *	memhdr_tail
ANR	4910134	ClassDef	string_item_s	264:8:8420:8556							
ANR	4910135	DeclStmt									
ANR	4910136	Decl							const char	const char *	str
ANR	4910137	DeclStmt									
ANR	4910138	Decl							int	int	file_index
ANR	4910139	DeclStmt									
ANR	4910140	Decl							int	int	index
ANR	4910141	DeclStmt									
ANR	4910142	Decl							string_item_s	string_item_s	string_item_t
ANR	4910143	ClassDef	<unnamed>	271:8:8612:8793							
ANR	4910144	DeclStmt									
ANR	4910145	Decl									uniq_mode_t
ANR	4910146	ClassDef	string_list_s	276:8:8803:9074							
ANR	4910147	DeclStmt									
ANR	4910148	Decl							const char	const char *	list_name
ANR	4910149	DeclStmt									
ANR	4910150	Decl							int	int	max_count
ANR	4910151	DeclStmt									
ANR	4910152	Decl							uniq_mode_t	uniq_mode_t	mode
ANR	4910153	DeclStmt									
ANR	4910154	Decl							int	int	count
ANR	4910155	DeclStmt									
ANR	4910156	Decl							string_item_t	string_item_t *	items
ANR	4910157	DeclStmt									
ANR	4910158	Decl							string_list_s	string_list_s	string_list_t
ANR	4910159	ClassDef	string_pattern_s	288:8:9131:9251							
ANR	4910160	DeclStmt									
ANR	4910161	Decl							bool	bool	upper_case
ANR	4910162	DeclStmt									
ANR	4910163	Decl							bool	bool	drop_extn
ANR	4910164	DeclStmt									
ANR	4910165	Decl							char	char [ MAX_PATTERN + 1 ]	pattern
ANR	4910166	DeclStmt									
ANR	4910167	Decl							string_pattern_s	string_pattern_s	string_pattern_t
ANR	4910168	ClassDef	config_s	293:8:9261:10151							
ANR	4910169	DeclStmt									
ANR	4910170	Decl							int	int	debug
ANR	4910171	DeclStmt									
ANR	4910172	Decl							const char	const char *	name_prefix
ANR	4910173	DeclStmt									
ANR	4910174	Decl							const char	const char *	file_prefix
ANR	4910175	DeclStmt									
ANR	4910176	Decl							string_list_t	string_list_t	file_names
ANR	4910177	DeclStmt									
ANR	4910178	Decl							string_list_t	string_list_t	file_contents
ANR	4910179	DeclStmt									
ANR	4910180	Decl							string_list_t	string_list_t	replaces
ANR	4910181	ClassDef	ru_	302:4:9502:10051							
ANR	4910182	ClassDef	nu_	303:8:9522:9958							
ANR	4910183	DeclStmt									
ANR	4910184	Decl							string_list_t	string_list_t	sorted_resources
ANR	4910185	DeclStmt									
ANR	4910186	Decl							string_list_t	string_list_t	resources
ANR	4910187	DeclStmt									
ANR	4910188	Decl							string_list_t	string_list_t	devs
ANR	4910189	DeclStmt									
ANR	4910190	Decl							string_list_t	string_list_t	compositors
ANR	4910191	DeclStmt									
ANR	4910192	Decl							string_list_t	string_list_t	fonts
ANR	4910193	DeclStmt									
ANR	4910194	Decl							string_list_t	string_list_t	libs
ANR	4910195	DeclStmt									
ANR	4910196	Decl							string_list_t	string_list_t	libpaths
ANR	4910197	DeclStmt									
ANR	4910198	Decl							string_list_t	string_list_t	links
ANR	4910199	DeclStmt									
ANR	4910200	Decl							string_list_t	string_list_t	objs
ANR	4910201	DeclStmt									
ANR	4910202	Decl							nu_	nu_	named
ANR	4910203	DeclStmt									
ANR	4910204	Decl							string_list_t	string_list_t [ NUM_RESOURCE_LISTS ]	indexed
ANR	4910205	DeclStmt									
ANR	4910206	Decl							ru_	ru_	lists
ANR	4910207	DeclStmt									
ANR	4910208	Decl							string_pattern_t	string_pattern_t	lib_p
ANR	4910209	DeclStmt									
ANR	4910210	Decl							string_pattern_t	string_pattern_t	libpath_p
ANR	4910211	DeclStmt									
ANR	4910212	Decl							string_pattern_t	string_pattern_t	obj_p
ANR	4910213	DeclStmt									
ANR	4910214	Decl							config_s	config_s	config_t
ANR	4910215	DeclStmt									
ANR	4910216	Decl							const config_t	const config_t	init_config
ANR	4910217	DeclStmt									
ANR	4910218	Decl							const string_list_t	const string_list_t [ ]	init_config_lists
ANR	4910219	DeclStmt									
ANR	4910220	Decl							void	"void * ( void * , size_t , size_t , const char * label )"	mrealloc
ANR	4910221	DeclStmt									
ANR	4910222	Decl							void	"void * ( size_t s , const char * label )"	mmalloc
ANR	4910223	DeclStmt									
ANR	4910224	Decl							void	"void * ( size_t nmemb , size_t size , const char * label )"	mcalloc
ANR	4910225	DeclStmt									
ANR	4910226	Decl							void	"void ( void * om , const char * label )"	mfree
ANR	4910227	DeclStmt									
ANR	4910228	Decl							int	int ( string_list_t * )	alloc_list
ANR	4910229	DeclStmt									
ANR	4910230	Decl							void	void ( string_list_t * list )	free_list
ANR	4910231	DeclStmt									
ANR	4910232	Decl							void	void ( char * )	dev_file_name
ANR	4910233	DeclStmt									
ANR	4910234	Decl							int	int ( config_t * )	process_replaces
ANR	4910235	DeclStmt									
ANR	4910236	Decl							int	"int ( config_t * , const char * )"	read_dev
ANR	4910237	DeclStmt									
ANR	4910238	Decl							int	"int ( char * , int , const char * * )"	read_token
ANR	4910239	DeclStmt									
ANR	4910240	Decl							int	"int ( config_t * , char * , const char * , int )"	add_entry
ANR	4910241	DeclStmt									
ANR	4910242	Decl							string_item_t	"string_item_t * ( string_list_t * , const char * , int )"	add_item
ANR	4910243	DeclStmt									
ANR	4910244	Decl							void	"void ( string_list_t * , bool )"	sort_uniq
ANR	4910245	DeclStmt									
ANR	4910246	Decl							void	"void ( FILE * , const string_list_t * , const char * )"	write_list
ANR	4910247	DeclStmt									
ANR	4910248	Decl							void	"void ( FILE * , const string_list_t * , const string_pattern_t * )"	write_list_pattern
ANR	4910249	DeclStmt									
ANR	4910250	Decl							bool	"bool ( char * , char [ MAX_STR ] , const config_t * )"	var_expand
ANR	4910251	DeclStmt									
ANR	4910252	Decl							void	"void ( const char * , const char * , string_list_t * , bool )"	add_definition
ANR	4910253	DeclStmt									
ANR	4910254	Decl							string_item_t	"string_item_t * ( const char * , const string_list_t * )"	lookup
ANR	4910255	DeclStmt									
ANR	4910256	Decl							void	void ( string_list_t * sl )	validate_list
ANR	4910257	DeclStmt									
ANR	4910258	Decl							void	void ( config_t * conf )	validate_lists
ANR	4910259	DeclStmt									
ANR	4910260	Decl							void	void ( void )	validate_memory
ANR	4910261	Function	main	373:0:11937:18998							
ANR	4910262	FunctionDef	"main (int argc , char * argv [ ])"		4910261	0					
ANR	4910263	CompoundStatement		375:0:11970:18998	4910261	0					
ANR	4910264	IdentifierDeclStatement	config_t conf ;	376:4:11976:11989	4910261	0	True				
ANR	4910265	IdentifierDecl	conf		4910261	0					
ANR	4910266	IdentifierDeclType	config_t		4910261	0					
ANR	4910267	Identifier	conf		4910261	1					
ANR	4910268	IdentifierDeclStatement	char escape = '&' ;	377:4:11995:12012	4910261	1	True				
ANR	4910269	IdentifierDecl	escape = '&'		4910261	0					
ANR	4910270	IdentifierDeclType	char		4910261	0					
ANR	4910271	Identifier	escape		4910261	1					
ANR	4910272	AssignmentExpression	escape = '&'		4910261	2		=			
ANR	4910273	Identifier	escape		4910261	0					
ANR	4910274	PrimaryExpression	'&'		4910261	1					
ANR	4910275	IdentifierDeclStatement	int i ;	378:4:12018:12023	4910261	2	True				
ANR	4910276	IdentifierDecl	i		4910261	0					
ANR	4910277	IdentifierDeclType	int		4910261	0					
ANR	4910278	Identifier	i		4910261	1					
ANR	4910279	ExpressionStatement	conf = init_config	381:4:12063:12081	4910261	3	True				
ANR	4910280	AssignmentExpression	conf = init_config		4910261	0		=			
ANR	4910281	Identifier	conf		4910261	0					
ANR	4910282	Identifier	init_config		4910261	1					
ANR	4910283	ExpressionStatement	"memcpy ( conf . lists . indexed , init_config_lists , sizeof ( conf . lists . indexed ) )"	382:4:12087:12171	4910261	4	True				
ANR	4910284	CallExpression	"memcpy ( conf . lists . indexed , init_config_lists , sizeof ( conf . lists . indexed ) )"		4910261	0					
ANR	4910285	Callee	memcpy		4910261	0					
ANR	4910286	Identifier	memcpy		4910261	0					
ANR	4910287	ArgumentList	conf . lists . indexed		4910261	1					
ANR	4910288	Argument	conf . lists . indexed		4910261	0					
ANR	4910289	MemberAccess	conf . lists . indexed		4910261	0					
ANR	4910290	MemberAccess	conf . lists		4910261	0					
ANR	4910291	Identifier	conf		4910261	0					
ANR	4910292	Identifier	lists		4910261	1					
ANR	4910293	Identifier	indexed		4910261	1					
ANR	4910294	Argument	init_config_lists		4910261	1					
ANR	4910295	Identifier	init_config_lists		4910261	0					
ANR	4910296	Argument	sizeof ( conf . lists . indexed )		4910261	2					
ANR	4910297	SizeofExpression	sizeof ( conf . lists . indexed )		4910261	0					
ANR	4910298	Sizeof	sizeof		4910261	0					
ANR	4910299	MemberAccess	conf . lists . indexed		4910261	1					
ANR	4910300	MemberAccess	conf . lists		4910261	0					
ANR	4910301	Identifier	conf		4910261	0					
ANR	4910302	Identifier	lists		4910261	1					
ANR	4910303	Identifier	indexed		4910261	1					
ANR	4910304	ExpressionStatement	alloc_list ( & conf . file_names )	384:4:12177:12205	4910261	5	True				
ANR	4910305	CallExpression	alloc_list ( & conf . file_names )		4910261	0					
ANR	4910306	Callee	alloc_list		4910261	0					
ANR	4910307	Identifier	alloc_list		4910261	0					
ANR	4910308	ArgumentList	& conf . file_names		4910261	1					
ANR	4910309	Argument	& conf . file_names		4910261	0					
ANR	4910310	UnaryOperationExpression	& conf . file_names		4910261	0					
ANR	4910311	UnaryOperator	&		4910261	0					
ANR	4910312	MemberAccess	conf . file_names		4910261	1					
ANR	4910313	Identifier	conf		4910261	0					
ANR	4910314	Identifier	file_names		4910261	1					
ANR	4910315	ExpressionStatement	alloc_list ( & conf . file_contents )	385:4:12211:12242	4910261	6	True				
ANR	4910316	CallExpression	alloc_list ( & conf . file_contents )		4910261	0					
ANR	4910317	Callee	alloc_list		4910261	0					
ANR	4910318	Identifier	alloc_list		4910261	0					
ANR	4910319	ArgumentList	& conf . file_contents		4910261	1					
ANR	4910320	Argument	& conf . file_contents		4910261	0					
ANR	4910321	UnaryOperationExpression	& conf . file_contents		4910261	0					
ANR	4910322	UnaryOperator	&		4910261	0					
ANR	4910323	MemberAccess	conf . file_contents		4910261	1					
ANR	4910324	Identifier	conf		4910261	0					
ANR	4910325	Identifier	file_contents		4910261	1					
ANR	4910326	ExpressionStatement	alloc_list ( & conf . replaces )	386:4:12248:12274	4910261	7	True				
ANR	4910327	CallExpression	alloc_list ( & conf . replaces )		4910261	0					
ANR	4910328	Callee	alloc_list		4910261	0					
ANR	4910329	Identifier	alloc_list		4910261	0					
ANR	4910330	ArgumentList	& conf . replaces		4910261	1					
ANR	4910331	Argument	& conf . replaces		4910261	0					
ANR	4910332	UnaryOperationExpression	& conf . replaces		4910261	0					
ANR	4910333	UnaryOperator	&		4910261	0					
ANR	4910334	MemberAccess	conf . replaces		4910261	1					
ANR	4910335	Identifier	conf		4910261	0					
ANR	4910336	Identifier	replaces		4910261	1					
ANR	4910337	ForStatement	for ( i = 0 ; i < NUM_RESOURCE_LISTS ; ++ i )		4910261	8					
ANR	4910338	ForInit	i = 0 ;	387:9:12285:12290	4910261	0	True				
ANR	4910339	AssignmentExpression	i = 0		4910261	0		=			
ANR	4910340	Identifier	i		4910261	0					
ANR	4910341	PrimaryExpression	0		4910261	1					
ANR	4910342	Condition	i < NUM_RESOURCE_LISTS	387:16:12292:12313	4910261	1	True				
ANR	4910343	RelationalExpression	i < NUM_RESOURCE_LISTS		4910261	0		<			
ANR	4910344	Identifier	i		4910261	0					
ANR	4910345	Identifier	NUM_RESOURCE_LISTS		4910261	1					
ANR	4910346	UnaryExpression	++ i	387:40:12316:12318	4910261	2	True				
ANR	4910347	IncDec	++		4910261	0					
ANR	4910348	Identifier	i		4910261	1					
ANR	4910349	ExpressionStatement	alloc_list ( & conf . lists . indexed [ i ] )	388:8:12329:12363	4910261	3	True				
ANR	4910350	CallExpression	alloc_list ( & conf . lists . indexed [ i ] )		4910261	0					
ANR	4910351	Callee	alloc_list		4910261	0					
ANR	4910352	Identifier	alloc_list		4910261	0					
ANR	4910353	ArgumentList	& conf . lists . indexed [ i ]		4910261	1					
ANR	4910354	Argument	& conf . lists . indexed [ i ]		4910261	0					
ANR	4910355	UnaryOperationExpression	& conf . lists . indexed [ i ]		4910261	0					
ANR	4910356	UnaryOperator	&		4910261	0					
ANR	4910357	ArrayIndexing	conf . lists . indexed [ i ]		4910261	1					
ANR	4910358	MemberAccess	conf . lists . indexed		4910261	0					
ANR	4910359	MemberAccess	conf . lists		4910261	0					
ANR	4910360	Identifier	conf		4910261	0					
ANR	4910361	Identifier	lists		4910261	1					
ANR	4910362	Identifier	indexed		4910261	1					
ANR	4910363	Identifier	i		4910261	1					
ANR	4910364	ExpressionStatement	conf . lib_p . upper_case = false	391:4:12401:12430	4910261	9	True				
ANR	4910365	AssignmentExpression	conf . lib_p . upper_case = false		4910261	0		=			
ANR	4910366	MemberAccess	conf . lib_p . upper_case		4910261	0					
ANR	4910367	MemberAccess	conf . lib_p		4910261	0					
ANR	4910368	Identifier	conf		4910261	0					
ANR	4910369	Identifier	lib_p		4910261	1					
ANR	4910370	Identifier	upper_case		4910261	1					
ANR	4910371	Identifier	false		4910261	1					
ANR	4910372	ExpressionStatement	conf . lib_p . drop_extn = false	392:4:12436:12464	4910261	10	True				
ANR	4910373	AssignmentExpression	conf . lib_p . drop_extn = false		4910261	0		=			
ANR	4910374	MemberAccess	conf . lib_p . drop_extn		4910261	0					
ANR	4910375	MemberAccess	conf . lib_p		4910261	0					
ANR	4910376	Identifier	conf		4910261	0					
ANR	4910377	Identifier	lib_p		4910261	1					
ANR	4910378	Identifier	drop_extn		4910261	1					
ANR	4910379	Identifier	false		4910261	1					
ANR	4910380	ExpressionStatement	"strcpy ( conf . lib_p . pattern , ""%s\\n"" )"	393:4:12470:12504	4910261	11	True				
ANR	4910381	CallExpression	"strcpy ( conf . lib_p . pattern , ""%s\\n"" )"		4910261	0					
ANR	4910382	Callee	strcpy		4910261	0					
ANR	4910383	Identifier	strcpy		4910261	0					
ANR	4910384	ArgumentList	conf . lib_p . pattern		4910261	1					
ANR	4910385	Argument	conf . lib_p . pattern		4910261	0					
ANR	4910386	MemberAccess	conf . lib_p . pattern		4910261	0					
ANR	4910387	MemberAccess	conf . lib_p		4910261	0					
ANR	4910388	Identifier	conf		4910261	0					
ANR	4910389	Identifier	lib_p		4910261	1					
ANR	4910390	Identifier	pattern		4910261	1					
ANR	4910391	Argument	"""%s\\n"""		4910261	1					
ANR	4910392	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4910393	ExpressionStatement	conf . libpath_p = conf . lib_p	394:4:12510:12537	4910261	12	True				
ANR	4910394	AssignmentExpression	conf . libpath_p = conf . lib_p		4910261	0		=			
ANR	4910395	MemberAccess	conf . libpath_p		4910261	0					
ANR	4910396	Identifier	conf		4910261	0					
ANR	4910397	Identifier	libpath_p		4910261	1					
ANR	4910398	MemberAccess	conf . lib_p		4910261	1					
ANR	4910399	Identifier	conf		4910261	0					
ANR	4910400	Identifier	lib_p		4910261	1					
ANR	4910401	ExpressionStatement	conf . obj_p = conf . lib_p	395:4:12543:12566	4910261	13	True				
ANR	4910402	AssignmentExpression	conf . obj_p = conf . lib_p		4910261	0		=			
ANR	4910403	MemberAccess	conf . obj_p		4910261	0					
ANR	4910404	Identifier	conf		4910261	0					
ANR	4910405	Identifier	obj_p		4910261	1					
ANR	4910406	MemberAccess	conf . lib_p		4910261	1					
ANR	4910407	Identifier	conf		4910261	0					
ANR	4910408	Identifier	lib_p		4910261	1					
ANR	4910409	ForStatement	for ( i = 1 ; i < argc ; i ++ )		4910261	14					
ANR	4910410	ForInit	i = 1 ;	398:9:12620:12625	4910261	0	True				
ANR	4910411	AssignmentExpression	i = 1		4910261	0		=			
ANR	4910412	Identifier	i		4910261	0					
ANR	4910413	PrimaryExpression	1		4910261	1					
ANR	4910414	Condition	i < argc	398:16:12627:12634	4910261	1	True				
ANR	4910415	RelationalExpression	i < argc		4910261	0		<			
ANR	4910416	Identifier	i		4910261	0					
ANR	4910417	Identifier	argc		4910261	1					
ANR	4910418	PostIncDecOperationExpression	i ++	398:26:12637:12639	4910261	2	True				
ANR	4910419	Identifier	i		4910261	0					
ANR	4910420	IncDec	++		4910261	1					
ANR	4910421	CompoundStatement		27:8:735:755	4910261	3					
ANR	4910422	IdentifierDeclStatement	const char * arg = argv [ i ] ;	399:8:12652:12677	4910261	0	True				
ANR	4910423	IdentifierDecl	* arg = argv [ i ]		4910261	0					
ANR	4910424	IdentifierDeclType	const char *		4910261	0					
ANR	4910425	Identifier	arg		4910261	1					
ANR	4910426	AssignmentExpression	* arg = argv [ i ]		4910261	2		=			
ANR	4910427	Identifier	arg		4910261	0					
ANR	4910428	ArrayIndexing	argv [ i ]		4910261	1					
ANR	4910429	Identifier	argv		4910261	0					
ANR	4910430	Identifier	i		4910261	1					
ANR	4910431	IdentifierDeclStatement	FILE * out ;	400:8:12687:12696	4910261	1	True				
ANR	4910432	IdentifierDecl	* out		4910261	0					
ANR	4910433	IdentifierDeclType	FILE *		4910261	0					
ANR	4910434	Identifier	out		4910261	1					
ANR	4910435	IdentifierDeclStatement	"int lib = 0 , obj = 0 ;"	401:8:12706:12726	4910261	2	True				
ANR	4910436	IdentifierDecl	lib = 0		4910261	0					
ANR	4910437	IdentifierDeclType	int		4910261	0					
ANR	4910438	Identifier	lib		4910261	1					
ANR	4910439	AssignmentExpression	lib = 0		4910261	2		=			
ANR	4910440	Identifier	lib		4910261	0					
ANR	4910441	PrimaryExpression	0		4910261	1					
ANR	4910442	IdentifierDecl	obj = 0		4910261	1					
ANR	4910443	IdentifierDeclType	int		4910261	0					
ANR	4910444	Identifier	obj		4910261	1					
ANR	4910445	AssignmentExpression	obj = 0		4910261	2		=			
ANR	4910446	Identifier	obj		4910261	0					
ANR	4910447	PrimaryExpression	0		4910261	1					
ANR	4910448	IfStatement	if ( * arg != '-' )		4910261	3					
ANR	4910449	Condition	* arg != '-'	403:12:12741:12751	4910261	0	True				
ANR	4910450	EqualityExpression	* arg != '-'		4910261	0		!=			
ANR	4910451	UnaryOperationExpression	* arg		4910261	0					
ANR	4910452	UnaryOperator	*		4910261	0					
ANR	4910453	Identifier	arg		4910261	1					
ANR	4910454	PrimaryExpression	'-'		4910261	1					
ANR	4910455	CompoundStatement		29:25:783:783	4910261	1					
ANR	4910456	ExpressionStatement	"read_dev ( & conf , arg )"	404:12:12768:12788	4910261	0	True				
ANR	4910457	CallExpression	"read_dev ( & conf , arg )"		4910261	0					
ANR	4910458	Callee	read_dev		4910261	0					
ANR	4910459	Identifier	read_dev		4910261	0					
ANR	4910460	ArgumentList	& conf		4910261	1					
ANR	4910461	Argument	& conf		4910261	0					
ANR	4910462	UnaryOperationExpression	& conf		4910261	0					
ANR	4910463	UnaryOperator	&		4910261	0					
ANR	4910464	Identifier	conf		4910261	1					
ANR	4910465	Argument	arg		4910261	1					
ANR	4910466	Identifier	arg		4910261	0					
ANR	4910467	ContinueStatement	continue ;	405:12:12802:12810	4910261	1	True				
ANR	4910468	IfStatement	if ( i == argc - 1 )		4910261	4					
ANR	4910469	Condition	i == argc - 1	407:12:12834:12846	4910261	0	True				
ANR	4910470	EqualityExpression	i == argc - 1		4910261	0		==			
ANR	4910471	Identifier	i		4910261	0					
ANR	4910472	AdditiveExpression	argc - 1		4910261	1		-			
ANR	4910473	Identifier	argc		4910261	0					
ANR	4910474	PrimaryExpression	1		4910261	1					
ANR	4910475	CompoundStatement		33:27:878:878	4910261	1					
ANR	4910476	ExpressionStatement	"fprintf ( stderr , ""Missing argument after %s.\\n"" , arg )"	408:12:12863:12935	4910261	0	True				
ANR	4910477	CallExpression	"fprintf ( stderr , ""Missing argument after %s.\\n"" , arg )"		4910261	0					
ANR	4910478	Callee	fprintf		4910261	0					
ANR	4910479	Identifier	fprintf		4910261	0					
ANR	4910480	ArgumentList	stderr		4910261	1					
ANR	4910481	Argument	stderr		4910261	0					
ANR	4910482	Identifier	stderr		4910261	0					
ANR	4910483	Argument	"""Missing argument after %s.\\n"""		4910261	1					
ANR	4910484	PrimaryExpression	"""Missing argument after %s.\\n"""		4910261	0					
ANR	4910485	Argument	arg		4910261	2					
ANR	4910486	Identifier	arg		4910261	0					
ANR	4910487	ExpressionStatement	exit ( 1 )	410:12:12949:12956	4910261	1	True				
ANR	4910488	CallExpression	exit ( 1 )		4910261	0					
ANR	4910489	Callee	exit		4910261	0					
ANR	4910490	Identifier	exit		4910261	0					
ANR	4910491	ArgumentList	1		4910261	1					
ANR	4910492	Argument	1		4910261	0					
ANR	4910493	PrimaryExpression	1		4910261	0					
ANR	4910494	SwitchStatement	switch ( arg [ 1 ] )		4910261	5					
ANR	4910495	Condition	arg [ 1 ]	412:16:12984:12989	4910261	0	True				
ANR	4910496	ArrayIndexing	arg [ 1 ]		4910261	0					
ANR	4910497	Identifier	arg		4910261	0					
ANR	4910498	PrimaryExpression	1		4910261	1					
ANR	4910499	CompoundStatement		38:24:1021:1021	4910261	1					
ANR	4910500	Label	case 'C' :	413:12:13006:13014	4910261	0	True				
ANR	4910501	ExpressionStatement	conf . file_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ] )	414:16:13078:13166	4910261	1	True				
ANR	4910502	AssignmentExpression	conf . file_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ] )		4910261	0		=			
ANR	4910503	MemberAccess	conf . file_prefix		4910261	0					
ANR	4910504	Identifier	conf		4910261	0					
ANR	4910505	Identifier	file_prefix		4910261	1					
ANR	4910506	ConditionalExpression	argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ]		4910261	1					
ANR	4910507	Condition	argv [ i + 1 ] [ 0 ] == '-'		4910261	0					
ANR	4910508	EqualityExpression	argv [ i + 1 ] [ 0 ] == '-'		4910261	0		==			
ANR	4910509	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4910261	0					
ANR	4910510	ArrayIndexing	argv [ i + 1 ]		4910261	0					
ANR	4910511	Identifier	argv		4910261	0					
ANR	4910512	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910513	Identifier	i		4910261	0					
ANR	4910514	PrimaryExpression	1		4910261	1					
ANR	4910515	PrimaryExpression	0		4910261	1					
ANR	4910516	PrimaryExpression	'-'		4910261	1					
ANR	4910517	Identifier	empty_str		4910261	1					
ANR	4910518	ArrayIndexing	argv [ i + 1 ]		4910261	2					
ANR	4910519	Identifier	argv		4910261	0					
ANR	4910520	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910521	Identifier	i		4910261	0					
ANR	4910522	PrimaryExpression	1		4910261	1					
ANR	4910523	ExpressionStatement	++ i	416:16:13184:13187	4910261	2	True				
ANR	4910524	UnaryExpression	++ i		4910261	0					
ANR	4910525	IncDec	++		4910261	0					
ANR	4910526	Identifier	i		4910261	1					
ANR	4910527	ContinueStatement	continue ;	417:16:13205:13213	4910261	3	True				
ANR	4910528	Label	case 'e' :	418:12:13227:13235	4910261	4	True				
ANR	4910529	ExpressionStatement	escape = argv [ i + 1 ] [ 0 ]	419:16:13253:13276	4910261	5	True				
ANR	4910530	AssignmentExpression	escape = argv [ i + 1 ] [ 0 ]		4910261	0		=			
ANR	4910531	Identifier	escape		4910261	0					
ANR	4910532	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4910261	1					
ANR	4910533	ArrayIndexing	argv [ i + 1 ]		4910261	0					
ANR	4910534	Identifier	argv		4910261	0					
ANR	4910535	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910536	Identifier	i		4910261	0					
ANR	4910537	PrimaryExpression	1		4910261	1					
ANR	4910538	PrimaryExpression	0		4910261	1					
ANR	4910539	ExpressionStatement	++ i	420:16:13294:13297	4910261	6	True				
ANR	4910540	UnaryExpression	++ i		4910261	0					
ANR	4910541	IncDec	++		4910261	0					
ANR	4910542	Identifier	i		4910261	1					
ANR	4910543	ContinueStatement	continue ;	421:16:13315:13323	4910261	7	True				
ANR	4910544	Label	case 'n' :	422:12:13337:13345	4910261	8	True				
ANR	4910545	ExpressionStatement	conf . name_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ] )	423:16:13363:13451	4910261	9	True				
ANR	4910546	AssignmentExpression	conf . name_prefix = ( argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ] )		4910261	0		=			
ANR	4910547	MemberAccess	conf . name_prefix		4910261	0					
ANR	4910548	Identifier	conf		4910261	0					
ANR	4910549	Identifier	name_prefix		4910261	1					
ANR	4910550	ConditionalExpression	argv [ i + 1 ] [ 0 ] == '-' ? empty_str : argv [ i + 1 ]		4910261	1					
ANR	4910551	Condition	argv [ i + 1 ] [ 0 ] == '-'		4910261	0					
ANR	4910552	EqualityExpression	argv [ i + 1 ] [ 0 ] == '-'		4910261	0		==			
ANR	4910553	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4910261	0					
ANR	4910554	ArrayIndexing	argv [ i + 1 ]		4910261	0					
ANR	4910555	Identifier	argv		4910261	0					
ANR	4910556	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910557	Identifier	i		4910261	0					
ANR	4910558	PrimaryExpression	1		4910261	1					
ANR	4910559	PrimaryExpression	0		4910261	1					
ANR	4910560	PrimaryExpression	'-'		4910261	1					
ANR	4910561	Identifier	empty_str		4910261	1					
ANR	4910562	ArrayIndexing	argv [ i + 1 ]		4910261	2					
ANR	4910563	Identifier	argv		4910261	0					
ANR	4910564	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910565	Identifier	i		4910261	0					
ANR	4910566	PrimaryExpression	1		4910261	1					
ANR	4910567	ExpressionStatement	++ i	425:16:13469:13472	4910261	10	True				
ANR	4910568	UnaryExpression	++ i		4910261	0					
ANR	4910569	IncDec	++		4910261	0					
ANR	4910570	Identifier	i		4910261	1					
ANR	4910571	ContinueStatement	continue ;	426:16:13490:13498	4910261	11	True				
ANR	4910572	Label	case 'p' :	427:12:13512:13520	4910261	12	True				
ANR	4910573	CompoundStatement		55:20:1589:1610	4910261	13					
ANR	4910574	IdentifierDeclStatement	string_pattern_t * pat ;	429:20:13560:13581	4910261	0	True				
ANR	4910575	IdentifierDecl	* pat		4910261	0					
ANR	4910576	IdentifierDeclType	string_pattern_t *		4910261	0					
ANR	4910577	Identifier	pat		4910261	1					
ANR	4910578	SwitchStatement	switch ( * ( arg += 2 ) )		4910261	1					
ANR	4910579	Condition	* ( arg += 2 )	431:28:13612:13622	4910261	0	True				
ANR	4910580	UnaryOperationExpression	* ( arg += 2 )		4910261	0					
ANR	4910581	UnaryOperator	*		4910261	0					
ANR	4910582	AssignmentExpression	arg += 2		4910261	1		+=			
ANR	4910583	Identifier	arg		4910261	0					
ANR	4910584	PrimaryExpression	2		4910261	1					
ANR	4910585	CompoundStatement		57:41:1654:1654	4910261	1					
ANR	4910586	Label	case 'l' :	432:24:13651:13659	4910261	0	True				
ANR	4910587	ExpressionStatement	pat = & conf . lib_p	433:28:13689:13706	4910261	1	True				
ANR	4910588	AssignmentExpression	pat = & conf . lib_p		4910261	0		=			
ANR	4910589	Identifier	pat		4910261	0					
ANR	4910590	UnaryOperationExpression	& conf . lib_p		4910261	1					
ANR	4910591	UnaryOperator	&		4910261	0					
ANR	4910592	MemberAccess	conf . lib_p		4910261	1					
ANR	4910593	Identifier	conf		4910261	0					
ANR	4910594	Identifier	lib_p		4910261	1					
ANR	4910595	BreakStatement	break ;	434:28:13736:13741	4910261	2	True				
ANR	4910596	Label	case 'L' :	435:24:13767:13775	4910261	3	True				
ANR	4910597	ExpressionStatement	pat = & conf . libpath_p	436:28:13805:13826	4910261	4	True				
ANR	4910598	AssignmentExpression	pat = & conf . libpath_p		4910261	0		=			
ANR	4910599	Identifier	pat		4910261	0					
ANR	4910600	UnaryOperationExpression	& conf . libpath_p		4910261	1					
ANR	4910601	UnaryOperator	&		4910261	0					
ANR	4910602	MemberAccess	conf . libpath_p		4910261	1					
ANR	4910603	Identifier	conf		4910261	0					
ANR	4910604	Identifier	libpath_p		4910261	1					
ANR	4910605	BreakStatement	break ;	437:28:13856:13861	4910261	5	True				
ANR	4910606	Label	default :	438:24:13887:13894	4910261	6	True				
ANR	4910607	Identifier	default		4910261	0					
ANR	4910608	ExpressionStatement	pat = & conf . obj_p	439:28:13924:13941	4910261	7	True				
ANR	4910609	AssignmentExpression	pat = & conf . obj_p		4910261	0		=			
ANR	4910610	Identifier	pat		4910261	0					
ANR	4910611	UnaryOperationExpression	& conf . obj_p		4910261	1					
ANR	4910612	UnaryOperator	&		4910261	0					
ANR	4910613	MemberAccess	conf . obj_p		4910261	1					
ANR	4910614	Identifier	conf		4910261	0					
ANR	4910615	Identifier	obj_p		4910261	1					
ANR	4910616	ExpressionStatement	arg --	440:28:13971:13976	4910261	8	True				
ANR	4910617	PostIncDecOperationExpression	arg --		4910261	0					
ANR	4910618	Identifier	arg		4910261	0					
ANR	4910619	IncDec	--		4910261	1					
ANR	4910620	ExpressionStatement	pat -> upper_case = false	442:20:14020:14043	4910261	2	True				
ANR	4910621	AssignmentExpression	pat -> upper_case = false		4910261	0		=			
ANR	4910622	PtrMemberAccess	pat -> upper_case		4910261	0					
ANR	4910623	Identifier	pat		4910261	0					
ANR	4910624	Identifier	upper_case		4910261	1					
ANR	4910625	Identifier	false		4910261	1					
ANR	4910626	ExpressionStatement	pat -> drop_extn = false	443:20:14065:14087	4910261	3	True				
ANR	4910627	AssignmentExpression	pat -> drop_extn = false		4910261	0		=			
ANR	4910628	PtrMemberAccess	pat -> drop_extn		4910261	0					
ANR	4910629	Identifier	pat		4910261	0					
ANR	4910630	Identifier	drop_extn		4910261	1					
ANR	4910631	Identifier	false		4910261	1					
ANR	4910632	IfStatement	if ( argv [ i + 1 ] [ 0 ] == '-' )		4910261	4					
ANR	4910633	Condition	argv [ i + 1 ] [ 0 ] == '-'	444:24:14113:14133	4910261	0	True				
ANR	4910634	EqualityExpression	argv [ i + 1 ] [ 0 ] == '-'		4910261	0		==			
ANR	4910635	ArrayIndexing	argv [ i + 1 ] [ 0 ]		4910261	0					
ANR	4910636	ArrayIndexing	argv [ i + 1 ]		4910261	0					
ANR	4910637	Identifier	argv		4910261	0					
ANR	4910638	AdditiveExpression	i + 1		4910261	1		+			
ANR	4910639	Identifier	i		4910261	0					
ANR	4910640	PrimaryExpression	1		4910261	1					
ANR	4910641	PrimaryExpression	0		4910261	1					
ANR	4910642	PrimaryExpression	'-'		4910261	1					
ANR	4910643	ExpressionStatement	"strcpy ( pat -> pattern , ""%s\\n"" )"	445:24:14160:14188	4910261	1	True				
ANR	4910644	CallExpression	"strcpy ( pat -> pattern , ""%s\\n"" )"		4910261	0					
ANR	4910645	Callee	strcpy		4910261	0					
ANR	4910646	Identifier	strcpy		4910261	0					
ANR	4910647	ArgumentList	pat -> pattern		4910261	1					
ANR	4910648	Argument	pat -> pattern		4910261	0					
ANR	4910649	PtrMemberAccess	pat -> pattern		4910261	0					
ANR	4910650	Identifier	pat		4910261	0					
ANR	4910651	Identifier	pattern		4910261	1					
ANR	4910652	Argument	"""%s\\n"""		4910261	1					
ANR	4910653	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4910654	ElseStatement	else		4910261	0					
ANR	4910655	CompoundStatement		73:24:2270:2281	4910261	0					
ANR	4910656	IdentifierDeclStatement	"char * p , * q ;"	447:24:14241:14252	4910261	0	True				
ANR	4910657	IdentifierDecl	* p		4910261	0					
ANR	4910658	IdentifierDeclType	char *		4910261	0					
ANR	4910659	Identifier	p		4910261	1					
ANR	4910660	IdentifierDecl	* q		4910261	1					
ANR	4910661	IdentifierDeclType	char *		4910261	0					
ANR	4910662	Identifier	q		4910261	1					
ANR	4910663	ForStatement	"for ( p = pat -> pattern , q = argv [ ++ i ] ; ( * p ++ = * q ++ ) != 0 ; )"		4910261	1					
ANR	4910664	ForInit	"p = pat -> pattern , q = argv [ ++ i ] ;"	449:29:14284:14315	4910261	0	True				
ANR	4910665	Expression	"p = pat -> pattern , q = argv [ ++ i ]"		4910261	0					
ANR	4910666	AssignmentExpression	p = pat -> pattern		4910261	0		=			
ANR	4910667	Identifier	p		4910261	0					
ANR	4910668	PtrMemberAccess	pat -> pattern		4910261	1					
ANR	4910669	Identifier	pat		4910261	0					
ANR	4910670	Identifier	pattern		4910261	1					
ANR	4910671	AssignmentExpression	q = argv [ ++ i ]		4910261	1		=			
ANR	4910672	Identifier	q		4910261	0					
ANR	4910673	ArrayIndexing	argv [ ++ i ]		4910261	1					
ANR	4910674	Identifier	argv		4910261	0					
ANR	4910675	UnaryExpression	++ i		4910261	1					
ANR	4910676	IncDec	++		4910261	0					
ANR	4910677	Identifier	i		4910261	1					
ANR	4910678	Condition	( * p ++ = * q ++ ) != 0	450:29:14346:14363	4910261	1	True				
ANR	4910679	EqualityExpression	( * p ++ = * q ++ ) != 0		4910261	0		!=			
ANR	4910680	AssignmentExpression	* p ++ = * q ++		4910261	0		=			
ANR	4910681	UnaryOperationExpression	* p ++		4910261	0					
ANR	4910682	UnaryOperator	*		4910261	0					
ANR	4910683	PostIncDecOperationExpression	p ++		4910261	1					
ANR	4910684	Identifier	p		4910261	0					
ANR	4910685	IncDec	++		4910261	1					
ANR	4910686	UnaryOperationExpression	* q ++		4910261	1					
ANR	4910687	UnaryOperator	*		4910261	0					
ANR	4910688	PostIncDecOperationExpression	q ++		4910261	1					
ANR	4910689	Identifier	q		4910261	0					
ANR	4910690	IncDec	++		4910261	1					
ANR	4910691	PrimaryExpression	0		4910261	1					
ANR	4910692	IfStatement	if ( p [ - 1 ] == escape )		4910261	2					
ANR	4910693	Condition	p [ - 1 ] == escape	452:32:14428:14442	4910261	0	True				
ANR	4910694	EqualityExpression	p [ - 1 ] == escape		4910261	0		==			
ANR	4910695	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910696	Identifier	p		4910261	0					
ANR	4910697	UnaryOperationExpression	- 1		4910261	1					
ANR	4910698	UnaryOperator	-		4910261	0					
ANR	4910699	PrimaryExpression	1		4910261	1					
ANR	4910700	Identifier	escape		4910261	1					
ANR	4910701	SwitchStatement	switch ( * q )		4910261	1					
ANR	4910702	Condition	* q	453:40:14485:14486	4910261	0	True				
ANR	4910703	UnaryOperationExpression	* q		4910261	0					
ANR	4910704	UnaryOperator	*		4910261	0					
ANR	4910705	Identifier	q		4910261	1					
ANR	4910706	CompoundStatement		79:44:2518:2518	4910261	1					
ANR	4910707	Label	case 'p' :	454:36:14527:14535	4910261	0	True				
ANR	4910708	ExpressionStatement	p [ - 1 ] = '%'	455:40:14577:14588	4910261	1	True				
ANR	4910709	AssignmentExpression	p [ - 1 ] = '%'		4910261	0		=			
ANR	4910710	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910711	Identifier	p		4910261	0					
ANR	4910712	UnaryOperationExpression	- 1		4910261	1					
ANR	4910713	UnaryOperator	-		4910261	0					
ANR	4910714	PrimaryExpression	1		4910261	1					
ANR	4910715	PrimaryExpression	'%'		4910261	1					
ANR	4910716	ExpressionStatement	q ++	455:53:14590:14593	4910261	2	True				
ANR	4910717	PostIncDecOperationExpression	q ++		4910261	0					
ANR	4910718	Identifier	q		4910261	0					
ANR	4910719	IncDec	++		4910261	1					
ANR	4910720	BreakStatement	break ;	455:58:14595:14600	4910261	3	True				
ANR	4910721	Label	case 's' :	456:36:14638:14646	4910261	4	True				
ANR	4910722	ExpressionStatement	p [ - 1 ] = ' '	457:40:14688:14699	4910261	5	True				
ANR	4910723	AssignmentExpression	p [ - 1 ] = ' '		4910261	0		=			
ANR	4910724	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910725	Identifier	p		4910261	0					
ANR	4910726	UnaryOperationExpression	- 1		4910261	1					
ANR	4910727	UnaryOperator	-		4910261	0					
ANR	4910728	PrimaryExpression	1		4910261	1					
ANR	4910729	PrimaryExpression	' '		4910261	1					
ANR	4910730	ExpressionStatement	q ++	457:53:14701:14704	4910261	6	True				
ANR	4910731	PostIncDecOperationExpression	q ++		4910261	0					
ANR	4910732	Identifier	q		4910261	0					
ANR	4910733	IncDec	++		4910261	1					
ANR	4910734	BreakStatement	break ;	457:58:14706:14711	4910261	7	True				
ANR	4910735	Label	case '-' :	458:36:14749:14757	4910261	8	True				
ANR	4910736	ExpressionStatement	p [ - 1 ] = '-'	459:40:14799:14810	4910261	9	True				
ANR	4910737	AssignmentExpression	p [ - 1 ] = '-'		4910261	0		=			
ANR	4910738	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910739	Identifier	p		4910261	0					
ANR	4910740	UnaryOperationExpression	- 1		4910261	1					
ANR	4910741	UnaryOperator	-		4910261	0					
ANR	4910742	PrimaryExpression	1		4910261	1					
ANR	4910743	PrimaryExpression	'-'		4910261	1					
ANR	4910744	ExpressionStatement	q ++	459:53:14812:14815	4910261	10	True				
ANR	4910745	PostIncDecOperationExpression	q ++		4910261	0					
ANR	4910746	Identifier	q		4910261	0					
ANR	4910747	IncDec	++		4910261	1					
ANR	4910748	BreakStatement	break ;	459:58:14817:14822	4910261	11	True				
ANR	4910749	Label	default :	460:36:14860:14867	4910261	12	True				
ANR	4910750	Identifier	default		4910261	0					
ANR	4910751	IfStatement	if ( * q == escape )		4910261	13					
ANR	4910752	Condition	* q == escape	461:44:14913:14924	4910261	0	True				
ANR	4910753	EqualityExpression	* q == escape		4910261	0		==			
ANR	4910754	UnaryOperationExpression	* q		4910261	0					
ANR	4910755	UnaryOperator	*		4910261	0					
ANR	4910756	Identifier	q		4910261	1					
ANR	4910757	Identifier	escape		4910261	1					
ANR	4910758	CompoundStatement		87:58:2956:2956	4910261	1					
ANR	4910759	ExpressionStatement	p [ - 1 ] = '\\\\'	462:44:14973:14985	4910261	0	True				
ANR	4910760	AssignmentExpression	p [ - 1 ] = '\\\\'		4910261	0		=			
ANR	4910761	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910762	Identifier	p		4910261	0					
ANR	4910763	UnaryOperationExpression	- 1		4910261	1					
ANR	4910764	UnaryOperator	-		4910261	0					
ANR	4910765	PrimaryExpression	1		4910261	1					
ANR	4910766	PrimaryExpression	'\\\\'		4910261	1					
ANR	4910767	ExpressionStatement	q ++	462:58:14987:14990	4910261	1	True				
ANR	4910768	PostIncDecOperationExpression	q ++		4910261	0					
ANR	4910769	Identifier	q		4910261	0					
ANR	4910770	IncDec	++		4910261	1					
ANR	4910771	BreakStatement	break ;	462:63:14992:14997	4910261	2	True				
ANR	4910772	ExpressionStatement	"fprintf ( stderr , ""%c not followed by p|s|%c|-: &%c\\n"" , escape , escape , * q )"	464:40:15081:15244	4910261	14	True				
ANR	4910773	CallExpression	"fprintf ( stderr , ""%c not followed by p|s|%c|-: &%c\\n"" , escape , escape , * q )"		4910261	0					
ANR	4910774	Callee	fprintf		4910261	0					
ANR	4910775	Identifier	fprintf		4910261	0					
ANR	4910776	ArgumentList	stderr		4910261	1					
ANR	4910777	Argument	stderr		4910261	0					
ANR	4910778	Identifier	stderr		4910261	0					
ANR	4910779	Argument	"""%c not followed by p|s|%c|-: &%c\\n"""		4910261	1					
ANR	4910780	PrimaryExpression	"""%c not followed by p|s|%c|-: &%c\\n"""		4910261	0					
ANR	4910781	Argument	escape		4910261	2					
ANR	4910782	Identifier	escape		4910261	0					
ANR	4910783	Argument	escape		4910261	3					
ANR	4910784	Identifier	escape		4910261	0					
ANR	4910785	Argument	* q		4910261	4					
ANR	4910786	UnaryOperationExpression	* q		4910261	0					
ANR	4910787	UnaryOperator	*		4910261	0					
ANR	4910788	Identifier	q		4910261	1					
ANR	4910789	ExpressionStatement	exit ( 1 )	467:40:15286:15293	4910261	15	True				
ANR	4910790	CallExpression	exit ( 1 )		4910261	0					
ANR	4910791	Callee	exit		4910261	0					
ANR	4910792	Identifier	exit		4910261	0					
ANR	4910793	ArgumentList	1		4910261	1					
ANR	4910794	Argument	1		4910261	0					
ANR	4910795	PrimaryExpression	1		4910261	0					
ANR	4910796	ExpressionStatement	p [ - 1 ] = '\\n'	469:24:15353:15365	4910261	2	True				
ANR	4910797	AssignmentExpression	p [ - 1 ] = '\\n'		4910261	0		=			
ANR	4910798	ArrayIndexing	p [ - 1 ]		4910261	0					
ANR	4910799	Identifier	p		4910261	0					
ANR	4910800	UnaryOperationExpression	- 1		4910261	1					
ANR	4910801	UnaryOperator	-		4910261	0					
ANR	4910802	PrimaryExpression	1		4910261	1					
ANR	4910803	PrimaryExpression	'\\n'		4910261	1					
ANR	4910804	ExpressionStatement	* p = 0	470:24:15391:15397	4910261	3	True				
ANR	4910805	AssignmentExpression	* p = 0		4910261	0		=			
ANR	4910806	UnaryOperationExpression	* p		4910261	0					
ANR	4910807	UnaryOperator	*		4910261	0					
ANR	4910808	Identifier	p		4910261	1					
ANR	4910809	PrimaryExpression	0		4910261	1					
ANR	4910810	ForStatement	for ( ; ; )		4910261	5					
ANR	4910811	CompoundStatement		98:29:3479:3479	4910261	0					
ANR	4910812	SwitchStatement	switch ( * ++ arg )		4910261	0					
ANR	4910813	Condition	* ++ arg	473:32:15484:15489	4910261	0	True				
ANR	4910814	UnaryOperationExpression	* ++ arg		4910261	0					
ANR	4910815	UnaryOperator	*		4910261	0					
ANR	4910816	UnaryExpression	++ arg		4910261	1					
ANR	4910817	IncDec	++		4910261	0					
ANR	4910818	Identifier	arg		4910261	1					
ANR	4910819	CompoundStatement		99:40:3521:3521	4910261	1					
ANR	4910820	Label	case 'u' :	474:28:15522:15530	4910261	0	True				
ANR	4910821	ExpressionStatement	pat -> upper_case = true	475:32:15564:15586	4910261	1	True				
ANR	4910822	AssignmentExpression	pat -> upper_case = true		4910261	0		=			
ANR	4910823	PtrMemberAccess	pat -> upper_case		4910261	0					
ANR	4910824	Identifier	pat		4910261	0					
ANR	4910825	Identifier	upper_case		4910261	1					
ANR	4910826	Identifier	true		4910261	1					
ANR	4910827	BreakStatement	break ;	476:32:15620:15625	4910261	2	True				
ANR	4910828	Label	case 'e' :	477:28:15655:15663	4910261	3	True				
ANR	4910829	ExpressionStatement	pat -> drop_extn = true	478:32:15697:15718	4910261	4	True				
ANR	4910830	AssignmentExpression	pat -> drop_extn = true		4910261	0		=			
ANR	4910831	PtrMemberAccess	pat -> drop_extn		4910261	0					
ANR	4910832	Identifier	pat		4910261	0					
ANR	4910833	Identifier	drop_extn		4910261	1					
ANR	4910834	Identifier	true		4910261	1					
ANR	4910835	BreakStatement	break ;	479:32:15752:15757	4910261	5	True				
ANR	4910836	Label	case 0 :	480:28:15787:15793	4910261	6	True				
ANR	4910837	GotoStatement	goto pbreak ;	481:32:15827:15838	4910261	7	True				
ANR	4910838	Identifier	pbreak		4910261	0					
ANR	4910839	Label	default :	482:28:15868:15875	4910261	8	True				
ANR	4910840	Identifier	default		4910261	0					
ANR	4910841	ExpressionStatement	"fprintf ( stderr , ""Unknown switch %s.\\n"" , arg )"	483:32:15909:15953	4910261	9	True				
ANR	4910842	CallExpression	"fprintf ( stderr , ""Unknown switch %s.\\n"" , arg )"		4910261	0					
ANR	4910843	Callee	fprintf		4910261	0					
ANR	4910844	Identifier	fprintf		4910261	0					
ANR	4910845	ArgumentList	stderr		4910261	1					
ANR	4910846	Argument	stderr		4910261	0					
ANR	4910847	Identifier	stderr		4910261	0					
ANR	4910848	Argument	"""Unknown switch %s.\\n"""		4910261	1					
ANR	4910849	PrimaryExpression	"""Unknown switch %s.\\n"""		4910261	0					
ANR	4910850	Argument	arg		4910261	2					
ANR	4910851	Identifier	arg		4910261	0					
ANR	4910852	ExpressionStatement	exit ( 1 )	484:32:15987:15994	4910261	10	True				
ANR	4910853	CallExpression	exit ( 1 )		4910261	0					
ANR	4910854	Callee	exit		4910261	0					
ANR	4910855	Identifier	exit		4910261	0					
ANR	4910856	ArgumentList	1		4910261	1					
ANR	4910857	Argument	1		4910261	0					
ANR	4910858	PrimaryExpression	1		4910261	0					
ANR	4910859	Label	pbreak :	487:18:16062:16068	4910261	6	True				
ANR	4910860	Identifier	pbreak		4910261	0					
ANR	4910861	IfStatement	if ( pat == & conf . obj_p )		4910261	7					
ANR	4910862	Condition	pat == & conf . obj_p	487:29:16073:16090	4910261	0	True				
ANR	4910863	EqualityExpression	pat == & conf . obj_p		4910261	0		==			
ANR	4910864	Identifier	pat		4910261	0					
ANR	4910865	UnaryOperationExpression	& conf . obj_p		4910261	1					
ANR	4910866	UnaryOperator	&		4910261	0					
ANR	4910867	MemberAccess	conf . obj_p		4910261	1					
ANR	4910868	Identifier	conf		4910261	0					
ANR	4910869	Identifier	obj_p		4910261	1					
ANR	4910870	CompoundStatement		113:49:4122:4122	4910261	1					
ANR	4910871	ExpressionStatement	conf . lib_p = * pat	488:24:16119:16136	4910261	0	True				
ANR	4910872	AssignmentExpression	conf . lib_p = * pat		4910261	0		=			
ANR	4910873	MemberAccess	conf . lib_p		4910261	0					
ANR	4910874	Identifier	conf		4910261	0					
ANR	4910875	Identifier	lib_p		4910261	1					
ANR	4910876	UnaryOperationExpression	* pat		4910261	1					
ANR	4910877	UnaryOperator	*		4910261	0					
ANR	4910878	Identifier	pat		4910261	1					
ANR	4910879	ExpressionStatement	conf . libpath_p = * pat	489:24:16162:16183	4910261	1	True				
ANR	4910880	AssignmentExpression	conf . libpath_p = * pat		4910261	0		=			
ANR	4910881	MemberAccess	conf . libpath_p		4910261	0					
ANR	4910882	Identifier	conf		4910261	0					
ANR	4910883	Identifier	libpath_p		4910261	1					
ANR	4910884	UnaryOperationExpression	* pat		4910261	1					
ANR	4910885	UnaryOperator	*		4910261	0					
ANR	4910886	Identifier	pat		4910261	1					
ANR	4910887	ContinueStatement	continue ;	491:20:16227:16235	4910261	8	True				
ANR	4910888	Label	case 'Z' :	493:12:16267:16275	4910261	14	True				
ANR	4910889	ExpressionStatement	conf . debug = 1	494:16:16293:16307	4910261	15	True				
ANR	4910890	AssignmentExpression	conf . debug = 1		4910261	0		=			
ANR	4910891	MemberAccess	conf . debug		4910261	0					
ANR	4910892	Identifier	conf		4910261	0					
ANR	4910893	Identifier	debug		4910261	1					
ANR	4910894	PrimaryExpression	1		4910261	1					
ANR	4910895	ContinueStatement	continue ;	495:16:16325:16333	4910261	16	True				
ANR	4910896	ExpressionStatement	"out = fopen ( argv [ ++ i ] , ""w"" )"	498:8:16391:16418	4910261	6	True				
ANR	4910897	AssignmentExpression	"out = fopen ( argv [ ++ i ] , ""w"" )"		4910261	0		=			
ANR	4910898	Identifier	out		4910261	0					
ANR	4910899	CallExpression	"fopen ( argv [ ++ i ] , ""w"" )"		4910261	1					
ANR	4910900	Callee	fopen		4910261	0					
ANR	4910901	Identifier	fopen		4910261	0					
ANR	4910902	ArgumentList	argv [ ++ i ]		4910261	1					
ANR	4910903	Argument	argv [ ++ i ]		4910261	0					
ANR	4910904	ArrayIndexing	argv [ ++ i ]		4910261	0					
ANR	4910905	Identifier	argv		4910261	0					
ANR	4910906	UnaryExpression	++ i		4910261	1					
ANR	4910907	IncDec	++		4910261	0					
ANR	4910908	Identifier	i		4910261	1					
ANR	4910909	Argument	"""w"""		4910261	1					
ANR	4910910	PrimaryExpression	"""w"""		4910261	0					
ANR	4910911	IfStatement	if ( out == 0 )		4910261	7					
ANR	4910912	Condition	out == 0	499:12:16432:16439	4910261	0	True				
ANR	4910913	EqualityExpression	out == 0		4910261	0		==			
ANR	4910914	Identifier	out		4910261	0					
ANR	4910915	PrimaryExpression	0		4910261	1					
ANR	4910916	CompoundStatement		125:22:4471:4471	4910261	1					
ANR	4910917	ExpressionStatement	"fprintf ( stderr , ""Can't open %s for output.\\n"" , argv [ i ] )"	500:12:16456:16531	4910261	0	True				
ANR	4910918	CallExpression	"fprintf ( stderr , ""Can't open %s for output.\\n"" , argv [ i ] )"		4910261	0					
ANR	4910919	Callee	fprintf		4910261	0					
ANR	4910920	Identifier	fprintf		4910261	0					
ANR	4910921	ArgumentList	stderr		4910261	1					
ANR	4910922	Argument	stderr		4910261	0					
ANR	4910923	Identifier	stderr		4910261	0					
ANR	4910924	Argument	"""Can't open %s for output.\\n"""		4910261	1					
ANR	4910925	PrimaryExpression	"""Can't open %s for output.\\n"""		4910261	0					
ANR	4910926	Argument	argv [ i ]		4910261	2					
ANR	4910927	ArrayIndexing	argv [ i ]		4910261	0					
ANR	4910928	Identifier	argv		4910261	0					
ANR	4910929	Identifier	i		4910261	1					
ANR	4910930	ExpressionStatement	exit ( 1 )	502:12:16545:16552	4910261	1	True				
ANR	4910931	CallExpression	exit ( 1 )		4910261	0					
ANR	4910932	Callee	exit		4910261	0					
ANR	4910933	Identifier	exit		4910261	0					
ANR	4910934	ArgumentList	1		4910261	1					
ANR	4910935	Argument	1		4910261	0					
ANR	4910936	PrimaryExpression	1		4910261	0					
ANR	4910937	SwitchStatement	switch ( arg [ 1 ] )		4910261	8					
ANR	4910938	Condition	arg [ 1 ]	504:16:16580:16585	4910261	0	True				
ANR	4910939	ArrayIndexing	arg [ 1 ]		4910261	0					
ANR	4910940	Identifier	arg		4910261	0					
ANR	4910941	PrimaryExpression	1		4910261	1					
ANR	4910942	CompoundStatement		130:24:4617:4617	4910261	1					
ANR	4910943	Label	case 'f' :	505:12:16602:16610	4910261	0	True				
ANR	4910944	ExpressionStatement	process_replaces ( & conf )	506:16:16628:16651	4910261	1	True				
ANR	4910945	CallExpression	process_replaces ( & conf )		4910261	0					
ANR	4910946	Callee	process_replaces		4910261	0					
ANR	4910947	Identifier	process_replaces		4910261	0					
ANR	4910948	ArgumentList	& conf		4910261	1					
ANR	4910949	Argument	& conf		4910261	0					
ANR	4910950	UnaryOperationExpression	& conf		4910261	0					
ANR	4910951	UnaryOperator	&		4910261	0					
ANR	4910952	Identifier	conf		4910261	1					
ANR	4910953	ExpressionStatement	"fputs ( ""/* This file was generated automatically by genconf.c. */\\n"" , out )"	507:16:16669:16742	4910261	2	True				
ANR	4910954	CallExpression	"fputs ( ""/* This file was generated automatically by genconf.c. */\\n"" , out )"		4910261	0					
ANR	4910955	Callee	fputs		4910261	0					
ANR	4910956	Identifier	fputs		4910261	0					
ANR	4910957	ArgumentList	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	1					
ANR	4910958	Argument	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	0					
ANR	4910959	PrimaryExpression	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	0					
ANR	4910960	Argument	out		4910261	1					
ANR	4910961	Identifier	out		4910261	0					
ANR	4910962	ExpressionStatement	"fputs ( ""/* For documentation, see gsconfig.c. */\\n"" , out )"	508:16:16760:16816	4910261	3	True				
ANR	4910963	CallExpression	"fputs ( ""/* For documentation, see gsconfig.c. */\\n"" , out )"		4910261	0					
ANR	4910964	Callee	fputs		4910261	0					
ANR	4910965	Identifier	fputs		4910261	0					
ANR	4910966	ArgumentList	"""/* For documentation, see gsconfig.c. */\\n"""		4910261	1					
ANR	4910967	Argument	"""/* For documentation, see gsconfig.c. */\\n"""		4910261	0					
ANR	4910968	PrimaryExpression	"""/* For documentation, see gsconfig.c. */\\n"""		4910261	0					
ANR	4910969	Argument	out		4910261	1					
ANR	4910970	Identifier	out		4910261	0					
ANR	4910971	CompoundStatement		136:20:4885:4914	4910261	4					
ANR	4910972	IdentifierDeclStatement	char templat [ MAX_TEMPLAT + 1 ] ;	510:20:16856:16885	4910261	0	True				
ANR	4910973	IdentifierDecl	templat [ MAX_TEMPLAT + 1 ]		4910261	0					
ANR	4910974	IdentifierDeclType	char [ MAX_TEMPLAT + 1 ]		4910261	0					
ANR	4910975	Identifier	templat		4910261	1					
ANR	4910976	AdditiveExpression	MAX_TEMPLAT + 1		4910261	2		+			
ANR	4910977	Identifier	MAX_TEMPLAT		4910261	0					
ANR	4910978	PrimaryExpression	1		4910261	1					
ANR	4910979	ExpressionStatement	"sprintf ( templat , ""font_(\\""0.font_%%s\\"",%sf_%%s,zf_%%s)\\n"" , conf . name_prefix )"	512:20:16908:17040	4910261	1	True				
ANR	4910980	CallExpression	"sprintf ( templat , ""font_(\\""0.font_%%s\\"",%sf_%%s,zf_%%s)\\n"" , conf . name_prefix )"		4910261	0					
ANR	4910981	Callee	sprintf		4910261	0					
ANR	4910982	Identifier	sprintf		4910261	0					
ANR	4910983	ArgumentList	templat		4910261	1					
ANR	4910984	Argument	templat		4910261	0					
ANR	4910985	Identifier	templat		4910261	0					
ANR	4910986	Argument	"""font_(\\""0.font_%%s\\"",%sf_%%s,zf_%%s)\\n"""		4910261	1					
ANR	4910987	PrimaryExpression	"""font_(\\""0.font_%%s\\"",%sf_%%s,zf_%%s)\\n"""		4910261	0					
ANR	4910988	Argument	conf . name_prefix		4910261	2					
ANR	4910989	MemberAccess	conf . name_prefix		4910261	0					
ANR	4910990	Identifier	conf		4910261	0					
ANR	4910991	Identifier	name_prefix		4910261	1					
ANR	4910992	ExpressionStatement	"write_list ( out , & conf . lists . named . fonts , templat )"	515:20:17062:17111	4910261	2	True				
ANR	4910993	CallExpression	"write_list ( out , & conf . lists . named . fonts , templat )"		4910261	0					
ANR	4910994	Callee	write_list		4910261	0					
ANR	4910995	Identifier	write_list		4910261	0					
ANR	4910996	ArgumentList	out		4910261	1					
ANR	4910997	Argument	out		4910261	0					
ANR	4910998	Identifier	out		4910261	0					
ANR	4910999	Argument	& conf . lists . named . fonts		4910261	1					
ANR	4911000	UnaryOperationExpression	& conf . lists . named . fonts		4910261	0					
ANR	4911001	UnaryOperator	&		4910261	0					
ANR	4911002	MemberAccess	conf . lists . named . fonts		4910261	1					
ANR	4911003	MemberAccess	conf . lists . named		4910261	0					
ANR	4911004	MemberAccess	conf . lists		4910261	0					
ANR	4911005	Identifier	conf		4910261	0					
ANR	4911006	Identifier	lists		4910261	1					
ANR	4911007	Identifier	named		4910261	1					
ANR	4911008	Identifier	fonts		4910261	1					
ANR	4911009	Argument	templat		4910261	2					
ANR	4911010	Identifier	templat		4910261	0					
ANR	4911011	BreakStatement	break ;	517:16:17147:17152	4910261	5	True				
ANR	4911012	Label	case 'h' :	518:12:17166:17174	4910261	6	True				
ANR	4911013	ExpressionStatement	process_replaces ( & conf )	519:16:17192:17215	4910261	7	True				
ANR	4911014	CallExpression	process_replaces ( & conf )		4910261	0					
ANR	4911015	Callee	process_replaces		4910261	0					
ANR	4911016	Identifier	process_replaces		4910261	0					
ANR	4911017	ArgumentList	& conf		4910261	1					
ANR	4911018	Argument	& conf		4910261	0					
ANR	4911019	UnaryOperationExpression	& conf		4910261	0					
ANR	4911020	UnaryOperator	&		4910261	0					
ANR	4911021	Identifier	conf		4910261	1					
ANR	4911022	ExpressionStatement	"fputs ( ""/* This file was generated automatically by genconf.c. */\\n"" , out )"	520:16:17233:17306	4910261	8	True				
ANR	4911023	CallExpression	"fputs ( ""/* This file was generated automatically by genconf.c. */\\n"" , out )"		4910261	0					
ANR	4911024	Callee	fputs		4910261	0					
ANR	4911025	Identifier	fputs		4910261	0					
ANR	4911026	ArgumentList	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	1					
ANR	4911027	Argument	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	0					
ANR	4911028	PrimaryExpression	"""/* This file was generated automatically by genconf.c. */\\n"""		4910261	0					
ANR	4911029	Argument	out		4910261	1					
ANR	4911030	Identifier	out		4910261	0					
ANR	4911031	ExpressionStatement	"write_list ( out , & conf . lists . named . compositors , ""%s\\n"" )"	521:16:17324:17378	4910261	9	True				
ANR	4911032	CallExpression	"write_list ( out , & conf . lists . named . compositors , ""%s\\n"" )"		4910261	0					
ANR	4911033	Callee	write_list		4910261	0					
ANR	4911034	Identifier	write_list		4910261	0					
ANR	4911035	ArgumentList	out		4910261	1					
ANR	4911036	Argument	out		4910261	0					
ANR	4911037	Identifier	out		4910261	0					
ANR	4911038	Argument	& conf . lists . named . compositors		4910261	1					
ANR	4911039	UnaryOperationExpression	& conf . lists . named . compositors		4910261	0					
ANR	4911040	UnaryOperator	&		4910261	0					
ANR	4911041	MemberAccess	conf . lists . named . compositors		4910261	1					
ANR	4911042	MemberAccess	conf . lists . named		4910261	0					
ANR	4911043	MemberAccess	conf . lists		4910261	0					
ANR	4911044	Identifier	conf		4910261	0					
ANR	4911045	Identifier	lists		4910261	1					
ANR	4911046	Identifier	named		4910261	1					
ANR	4911047	Identifier	compositors		4910261	1					
ANR	4911048	Argument	"""%s\\n"""		4910261	2					
ANR	4911049	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4911050	ExpressionStatement	"write_list ( out , & conf . lists . named . devs , ""%s\\n"" )"	522:16:17396:17443	4910261	10	True				
ANR	4911051	CallExpression	"write_list ( out , & conf . lists . named . devs , ""%s\\n"" )"		4910261	0					
ANR	4911052	Callee	write_list		4910261	0					
ANR	4911053	Identifier	write_list		4910261	0					
ANR	4911054	ArgumentList	out		4910261	1					
ANR	4911055	Argument	out		4910261	0					
ANR	4911056	Identifier	out		4910261	0					
ANR	4911057	Argument	& conf . lists . named . devs		4910261	1					
ANR	4911058	UnaryOperationExpression	& conf . lists . named . devs		4910261	0					
ANR	4911059	UnaryOperator	&		4910261	0					
ANR	4911060	MemberAccess	conf . lists . named . devs		4910261	1					
ANR	4911061	MemberAccess	conf . lists . named		4910261	0					
ANR	4911062	MemberAccess	conf . lists		4910261	0					
ANR	4911063	Identifier	conf		4910261	0					
ANR	4911064	Identifier	lists		4910261	1					
ANR	4911065	Identifier	named		4910261	1					
ANR	4911066	Identifier	devs		4910261	1					
ANR	4911067	Argument	"""%s\\n"""		4910261	2					
ANR	4911068	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4911069	ExpressionStatement	"sort_uniq ( & conf . lists . named . resources , true )"	523:16:17461:17505	4910261	11	True				
ANR	4911070	CallExpression	"sort_uniq ( & conf . lists . named . resources , true )"		4910261	0					
ANR	4911071	Callee	sort_uniq		4910261	0					
ANR	4911072	Identifier	sort_uniq		4910261	0					
ANR	4911073	ArgumentList	& conf . lists . named . resources		4910261	1					
ANR	4911074	Argument	& conf . lists . named . resources		4910261	0					
ANR	4911075	UnaryOperationExpression	& conf . lists . named . resources		4910261	0					
ANR	4911076	UnaryOperator	&		4910261	0					
ANR	4911077	MemberAccess	conf . lists . named . resources		4910261	1					
ANR	4911078	MemberAccess	conf . lists . named		4910261	0					
ANR	4911079	MemberAccess	conf . lists		4910261	0					
ANR	4911080	Identifier	conf		4910261	0					
ANR	4911081	Identifier	lists		4910261	1					
ANR	4911082	Identifier	named		4910261	1					
ANR	4911083	Identifier	resources		4910261	1					
ANR	4911084	Argument	true		4910261	1					
ANR	4911085	Identifier	true		4910261	0					
ANR	4911086	ExpressionStatement	"write_list ( out , & conf . lists . named . resources , ""%s\\n"" )"	524:16:17523:17575	4910261	12	True				
ANR	4911087	CallExpression	"write_list ( out , & conf . lists . named . resources , ""%s\\n"" )"		4910261	0					
ANR	4911088	Callee	write_list		4910261	0					
ANR	4911089	Identifier	write_list		4910261	0					
ANR	4911090	ArgumentList	out		4910261	1					
ANR	4911091	Argument	out		4910261	0					
ANR	4911092	Identifier	out		4910261	0					
ANR	4911093	Argument	& conf . lists . named . resources		4910261	1					
ANR	4911094	UnaryOperationExpression	& conf . lists . named . resources		4910261	0					
ANR	4911095	UnaryOperator	&		4910261	0					
ANR	4911096	MemberAccess	conf . lists . named . resources		4910261	1					
ANR	4911097	MemberAccess	conf . lists . named		4910261	0					
ANR	4911098	MemberAccess	conf . lists		4910261	0					
ANR	4911099	Identifier	conf		4910261	0					
ANR	4911100	Identifier	lists		4910261	1					
ANR	4911101	Identifier	named		4910261	1					
ANR	4911102	Identifier	resources		4910261	1					
ANR	4911103	Argument	"""%s\\n"""		4910261	2					
ANR	4911104	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4911105	ExpressionStatement	"sort_uniq ( & conf . lists . named . sorted_resources , false )"	525:16:17593:17645	4910261	13	True				
ANR	4911106	CallExpression	"sort_uniq ( & conf . lists . named . sorted_resources , false )"		4910261	0					
ANR	4911107	Callee	sort_uniq		4910261	0					
ANR	4911108	Identifier	sort_uniq		4910261	0					
ANR	4911109	ArgumentList	& conf . lists . named . sorted_resources		4910261	1					
ANR	4911110	Argument	& conf . lists . named . sorted_resources		4910261	0					
ANR	4911111	UnaryOperationExpression	& conf . lists . named . sorted_resources		4910261	0					
ANR	4911112	UnaryOperator	&		4910261	0					
ANR	4911113	MemberAccess	conf . lists . named . sorted_resources		4910261	1					
ANR	4911114	MemberAccess	conf . lists . named		4910261	0					
ANR	4911115	MemberAccess	conf . lists		4910261	0					
ANR	4911116	Identifier	conf		4910261	0					
ANR	4911117	Identifier	lists		4910261	1					
ANR	4911118	Identifier	named		4910261	1					
ANR	4911119	Identifier	sorted_resources		4910261	1					
ANR	4911120	Argument	false		4910261	1					
ANR	4911121	Identifier	false		4910261	0					
ANR	4911122	ExpressionStatement	"write_list ( out , & conf . lists . named . sorted_resources , ""%s\\n"" )"	526:16:17663:17722	4910261	14	True				
ANR	4911123	CallExpression	"write_list ( out , & conf . lists . named . sorted_resources , ""%s\\n"" )"		4910261	0					
ANR	4911124	Callee	write_list		4910261	0					
ANR	4911125	Identifier	write_list		4910261	0					
ANR	4911126	ArgumentList	out		4910261	1					
ANR	4911127	Argument	out		4910261	0					
ANR	4911128	Identifier	out		4910261	0					
ANR	4911129	Argument	& conf . lists . named . sorted_resources		4910261	1					
ANR	4911130	UnaryOperationExpression	& conf . lists . named . sorted_resources		4910261	0					
ANR	4911131	UnaryOperator	&		4910261	0					
ANR	4911132	MemberAccess	conf . lists . named . sorted_resources		4910261	1					
ANR	4911133	MemberAccess	conf . lists . named		4910261	0					
ANR	4911134	MemberAccess	conf . lists		4910261	0					
ANR	4911135	Identifier	conf		4910261	0					
ANR	4911136	Identifier	lists		4910261	1					
ANR	4911137	Identifier	named		4910261	1					
ANR	4911138	Identifier	sorted_resources		4910261	1					
ANR	4911139	Argument	"""%s\\n"""		4910261	2					
ANR	4911140	PrimaryExpression	"""%s\\n"""		4910261	0					
ANR	4911141	BreakStatement	break ;	527:16:17740:17745	4910261	15	True				
ANR	4911142	Label	case 'l' :	528:12:17759:17767	4910261	16	True				
ANR	4911143	ExpressionStatement	lib = 1	529:16:17785:17792	4910261	17	True				
ANR	4911144	AssignmentExpression	lib = 1		4910261	0		=			
ANR	4911145	Identifier	lib		4910261	0					
ANR	4911146	PrimaryExpression	1		4910261	1					
ANR	4911147	ExpressionStatement	obj = arg [ 2 ] == 'o'	530:16:17810:17829	4910261	18	True				
ANR	4911148	AssignmentExpression	obj = arg [ 2 ] == 'o'		4910261	0		=			
ANR	4911149	Identifier	obj		4910261	0					
ANR	4911150	EqualityExpression	arg [ 2 ] == 'o'		4910261	1		==			
ANR	4911151	ArrayIndexing	arg [ 2 ]		4910261	0					
ANR	4911152	Identifier	arg		4910261	0					
ANR	4911153	PrimaryExpression	2		4910261	1					
ANR	4911154	PrimaryExpression	'o'		4910261	1					
ANR	4911155	GotoStatement	goto lo ;	531:16:17847:17854	4910261	19	True				
ANR	4911156	Identifier	lo		4910261	0					
ANR	4911157	Label	case 'o' :	532:12:17868:17876	4910261	20	True				
ANR	4911158	ExpressionStatement	obj = 1	533:16:17894:17901	4910261	21	True				
ANR	4911159	AssignmentExpression	obj = 1		4910261	0		=			
ANR	4911160	Identifier	obj		4910261	0					
ANR	4911161	PrimaryExpression	1		4910261	1					
ANR	4911162	ExpressionStatement	lib = arg [ 2 ] == 'l'	534:16:17919:17938	4910261	22	True				
ANR	4911163	AssignmentExpression	lib = arg [ 2 ] == 'l'		4910261	0		=			
ANR	4911164	Identifier	lib		4910261	0					
ANR	4911165	EqualityExpression	arg [ 2 ] == 'l'		4910261	1		==			
ANR	4911166	ArrayIndexing	arg [ 2 ]		4910261	0					
ANR	4911167	Identifier	arg		4910261	0					
ANR	4911168	PrimaryExpression	2		4910261	1					
ANR	4911169	PrimaryExpression	'l'		4910261	1					
ANR	4911170	Label	lo :	535:14:17954:17956	4910261	23	True				
ANR	4911171	Identifier	lo		4910261	0					
ANR	4911172	ExpressionStatement	process_replaces ( & conf )	535:17:17957:17980	4910261	24	True				
ANR	4911173	CallExpression	process_replaces ( & conf )		4910261	0					
ANR	4911174	Callee	process_replaces		4910261	0					
ANR	4911175	Identifier	process_replaces		4910261	0					
ANR	4911176	ArgumentList	& conf		4910261	1					
ANR	4911177	Argument	& conf		4910261	0					
ANR	4911178	UnaryOperationExpression	& conf		4910261	0					
ANR	4911179	UnaryOperator	&		4910261	0					
ANR	4911180	Identifier	conf		4910261	1					
ANR	4911181	IfStatement	if ( obj )		4910261	25					
ANR	4911182	Condition	obj	536:20:18002:18004	4910261	0	True				
ANR	4911183	Identifier	obj		4910261	0					
ANR	4911184	CompoundStatement		162:25:6036:6036	4910261	1					
ANR	4911185	ExpressionStatement	"sort_uniq ( & conf . lists . named . objs , true )"	537:20:18029:18068	4910261	0	True				
ANR	4911186	CallExpression	"sort_uniq ( & conf . lists . named . objs , true )"		4910261	0					
ANR	4911187	Callee	sort_uniq		4910261	0					
ANR	4911188	Identifier	sort_uniq		4910261	0					
ANR	4911189	ArgumentList	& conf . lists . named . objs		4910261	1					
ANR	4911190	Argument	& conf . lists . named . objs		4910261	0					
ANR	4911191	UnaryOperationExpression	& conf . lists . named . objs		4910261	0					
ANR	4911192	UnaryOperator	&		4910261	0					
ANR	4911193	MemberAccess	conf . lists . named . objs		4910261	1					
ANR	4911194	MemberAccess	conf . lists . named		4910261	0					
ANR	4911195	MemberAccess	conf . lists		4910261	0					
ANR	4911196	Identifier	conf		4910261	0					
ANR	4911197	Identifier	lists		4910261	1					
ANR	4911198	Identifier	named		4910261	1					
ANR	4911199	Identifier	objs		4910261	1					
ANR	4911200	Argument	true		4910261	1					
ANR	4911201	Identifier	true		4910261	0					
ANR	4911202	ExpressionStatement	"write_list_pattern ( out , & conf . lists . named . objs , & conf . obj_p )"	538:20:18090:18150	4910261	1	True				
ANR	4911203	CallExpression	"write_list_pattern ( out , & conf . lists . named . objs , & conf . obj_p )"		4910261	0					
ANR	4911204	Callee	write_list_pattern		4910261	0					
ANR	4911205	Identifier	write_list_pattern		4910261	0					
ANR	4911206	ArgumentList	out		4910261	1					
ANR	4911207	Argument	out		4910261	0					
ANR	4911208	Identifier	out		4910261	0					
ANR	4911209	Argument	& conf . lists . named . objs		4910261	1					
ANR	4911210	UnaryOperationExpression	& conf . lists . named . objs		4910261	0					
ANR	4911211	UnaryOperator	&		4910261	0					
ANR	4911212	MemberAccess	conf . lists . named . objs		4910261	1					
ANR	4911213	MemberAccess	conf . lists . named		4910261	0					
ANR	4911214	MemberAccess	conf . lists		4910261	0					
ANR	4911215	Identifier	conf		4910261	0					
ANR	4911216	Identifier	lists		4910261	1					
ANR	4911217	Identifier	named		4910261	1					
ANR	4911218	Identifier	objs		4910261	1					
ANR	4911219	Argument	& conf . obj_p		4910261	2					
ANR	4911220	UnaryOperationExpression	& conf . obj_p		4910261	0					
ANR	4911221	UnaryOperator	&		4910261	0					
ANR	4911222	MemberAccess	conf . obj_p		4910261	1					
ANR	4911223	Identifier	conf		4910261	0					
ANR	4911224	Identifier	obj_p		4910261	1					
ANR	4911225	IfStatement	if ( lib )		4910261	26					
ANR	4911226	Condition	lib	540:20:18190:18192	4910261	0	True				
ANR	4911227	Identifier	lib		4910261	0					
ANR	4911228	CompoundStatement		166:25:6224:6224	4910261	1					
ANR	4911229	ExpressionStatement	"sort_uniq ( & conf . lists . named . libs , true )"	541:20:18217:18256	4910261	0	True				
ANR	4911230	CallExpression	"sort_uniq ( & conf . lists . named . libs , true )"		4910261	0					
ANR	4911231	Callee	sort_uniq		4910261	0					
ANR	4911232	Identifier	sort_uniq		4910261	0					
ANR	4911233	ArgumentList	& conf . lists . named . libs		4910261	1					
ANR	4911234	Argument	& conf . lists . named . libs		4910261	0					
ANR	4911235	UnaryOperationExpression	& conf . lists . named . libs		4910261	0					
ANR	4911236	UnaryOperator	&		4910261	0					
ANR	4911237	MemberAccess	conf . lists . named . libs		4910261	1					
ANR	4911238	MemberAccess	conf . lists . named		4910261	0					
ANR	4911239	MemberAccess	conf . lists		4910261	0					
ANR	4911240	Identifier	conf		4910261	0					
ANR	4911241	Identifier	lists		4910261	1					
ANR	4911242	Identifier	named		4910261	1					
ANR	4911243	Identifier	libs		4910261	1					
ANR	4911244	Argument	true		4910261	1					
ANR	4911245	Identifier	true		4910261	0					
ANR	4911246	ExpressionStatement	"sort_uniq ( & conf . lists . named . links , true )"	542:20:18278:18318	4910261	1	True				
ANR	4911247	CallExpression	"sort_uniq ( & conf . lists . named . links , true )"		4910261	0					
ANR	4911248	Callee	sort_uniq		4910261	0					
ANR	4911249	Identifier	sort_uniq		4910261	0					
ANR	4911250	ArgumentList	& conf . lists . named . links		4910261	1					
ANR	4911251	Argument	& conf . lists . named . links		4910261	0					
ANR	4911252	UnaryOperationExpression	& conf . lists . named . links		4910261	0					
ANR	4911253	UnaryOperator	&		4910261	0					
ANR	4911254	MemberAccess	conf . lists . named . links		4910261	1					
ANR	4911255	MemberAccess	conf . lists . named		4910261	0					
ANR	4911256	MemberAccess	conf . lists		4910261	0					
ANR	4911257	Identifier	conf		4910261	0					
ANR	4911258	Identifier	lists		4910261	1					
ANR	4911259	Identifier	named		4910261	1					
ANR	4911260	Identifier	links		4910261	1					
ANR	4911261	Argument	true		4910261	1					
ANR	4911262	Identifier	true		4910261	0					
ANR	4911263	ExpressionStatement	"write_list_pattern ( out , & conf . lists . named . libpaths , & conf . libpath_p )"	543:20:18340:18408	4910261	2	True				
ANR	4911264	CallExpression	"write_list_pattern ( out , & conf . lists . named . libpaths , & conf . libpath_p )"		4910261	0					
ANR	4911265	Callee	write_list_pattern		4910261	0					
ANR	4911266	Identifier	write_list_pattern		4910261	0					
ANR	4911267	ArgumentList	out		4910261	1					
ANR	4911268	Argument	out		4910261	0					
ANR	4911269	Identifier	out		4910261	0					
ANR	4911270	Argument	& conf . lists . named . libpaths		4910261	1					
ANR	4911271	UnaryOperationExpression	& conf . lists . named . libpaths		4910261	0					
ANR	4911272	UnaryOperator	&		4910261	0					
ANR	4911273	MemberAccess	conf . lists . named . libpaths		4910261	1					
ANR	4911274	MemberAccess	conf . lists . named		4910261	0					
ANR	4911275	MemberAccess	conf . lists		4910261	0					
ANR	4911276	Identifier	conf		4910261	0					
ANR	4911277	Identifier	lists		4910261	1					
ANR	4911278	Identifier	named		4910261	1					
ANR	4911279	Identifier	libpaths		4910261	1					
ANR	4911280	Argument	& conf . libpath_p		4910261	2					
ANR	4911281	UnaryOperationExpression	& conf . libpath_p		4910261	0					
ANR	4911282	UnaryOperator	&		4910261	0					
ANR	4911283	MemberAccess	conf . libpath_p		4910261	1					
ANR	4911284	Identifier	conf		4910261	0					
ANR	4911285	Identifier	libpath_p		4910261	1					
ANR	4911286	ExpressionStatement	"write_list_pattern ( out , & conf . lists . named . links , & conf . obj_p )"	544:20:18430:18491	4910261	3	True				
ANR	4911287	CallExpression	"write_list_pattern ( out , & conf . lists . named . links , & conf . obj_p )"		4910261	0					
ANR	4911288	Callee	write_list_pattern		4910261	0					
ANR	4911289	Identifier	write_list_pattern		4910261	0					
ANR	4911290	ArgumentList	out		4910261	1					
ANR	4911291	Argument	out		4910261	0					
ANR	4911292	Identifier	out		4910261	0					
ANR	4911293	Argument	& conf . lists . named . links		4910261	1					
ANR	4911294	UnaryOperationExpression	& conf . lists . named . links		4910261	0					
ANR	4911295	UnaryOperator	&		4910261	0					
ANR	4911296	MemberAccess	conf . lists . named . links		4910261	1					
ANR	4911297	MemberAccess	conf . lists . named		4910261	0					
ANR	4911298	MemberAccess	conf . lists		4910261	0					
ANR	4911299	Identifier	conf		4910261	0					
ANR	4911300	Identifier	lists		4910261	1					
ANR	4911301	Identifier	named		4910261	1					
ANR	4911302	Identifier	links		4910261	1					
ANR	4911303	Argument	& conf . obj_p		4910261	2					
ANR	4911304	UnaryOperationExpression	& conf . obj_p		4910261	0					
ANR	4911305	UnaryOperator	&		4910261	0					
ANR	4911306	MemberAccess	conf . obj_p		4910261	1					
ANR	4911307	Identifier	conf		4910261	0					
ANR	4911308	Identifier	obj_p		4910261	1					
ANR	4911309	ExpressionStatement	"write_list_pattern ( out , & conf . lists . named . libs , & conf . lib_p )"	545:20:18513:18573	4910261	4	True				
ANR	4911310	CallExpression	"write_list_pattern ( out , & conf . lists . named . libs , & conf . lib_p )"		4910261	0					
ANR	4911311	Callee	write_list_pattern		4910261	0					
ANR	4911312	Identifier	write_list_pattern		4910261	0					
ANR	4911313	ArgumentList	out		4910261	1					
ANR	4911314	Argument	out		4910261	0					
ANR	4911315	Identifier	out		4910261	0					
ANR	4911316	Argument	& conf . lists . named . libs		4910261	1					
ANR	4911317	UnaryOperationExpression	& conf . lists . named . libs		4910261	0					
ANR	4911318	UnaryOperator	&		4910261	0					
ANR	4911319	MemberAccess	conf . lists . named . libs		4910261	1					
ANR	4911320	MemberAccess	conf . lists . named		4910261	0					
ANR	4911321	MemberAccess	conf . lists		4910261	0					
ANR	4911322	Identifier	conf		4910261	0					
ANR	4911323	Identifier	lists		4910261	1					
ANR	4911324	Identifier	named		4910261	1					
ANR	4911325	Identifier	libs		4910261	1					
ANR	4911326	Argument	& conf . lib_p		4910261	2					
ANR	4911327	UnaryOperationExpression	& conf . lib_p		4910261	0					
ANR	4911328	UnaryOperator	&		4910261	0					
ANR	4911329	MemberAccess	conf . lib_p		4910261	1					
ANR	4911330	Identifier	conf		4910261	0					
ANR	4911331	Identifier	lib_p		4910261	1					
ANR	4911332	BreakStatement	break ;	547:16:18609:18614	4910261	27	True				
ANR	4911333	Label	default :	548:12:18628:18635	4910261	28	True				
ANR	4911334	Identifier	default		4910261	0					
ANR	4911335	ExpressionStatement	fclose ( out )	549:16:18653:18664	4910261	29	True				
ANR	4911336	CallExpression	fclose ( out )		4910261	0					
ANR	4911337	Callee	fclose		4910261	0					
ANR	4911338	Identifier	fclose		4910261	0					
ANR	4911339	ArgumentList	out		4910261	1					
ANR	4911340	Argument	out		4910261	0					
ANR	4911341	Identifier	out		4910261	0					
ANR	4911342	ExpressionStatement	"fprintf ( stderr , ""Unknown switch %s.\\n"" , argv [ i ] )"	550:16:18682:18730	4910261	30	True				
ANR	4911343	CallExpression	"fprintf ( stderr , ""Unknown switch %s.\\n"" , argv [ i ] )"		4910261	0					
ANR	4911344	Callee	fprintf		4910261	0					
ANR	4911345	Identifier	fprintf		4910261	0					
ANR	4911346	ArgumentList	stderr		4910261	1					
ANR	4911347	Argument	stderr		4910261	0					
ANR	4911348	Identifier	stderr		4910261	0					
ANR	4911349	Argument	"""Unknown switch %s.\\n"""		4910261	1					
ANR	4911350	PrimaryExpression	"""Unknown switch %s.\\n"""		4910261	0					
ANR	4911351	Argument	argv [ i ]		4910261	2					
ANR	4911352	ArrayIndexing	argv [ i ]		4910261	0					
ANR	4911353	Identifier	argv		4910261	0					
ANR	4911354	Identifier	i		4910261	1					
ANR	4911355	ExpressionStatement	exit ( 1 )	551:16:18748:18755	4910261	31	True				
ANR	4911356	CallExpression	exit ( 1 )		4910261	0					
ANR	4911357	Callee	exit		4910261	0					
ANR	4911358	Identifier	exit		4910261	0					
ANR	4911359	ArgumentList	1		4910261	1					
ANR	4911360	Argument	1		4910261	0					
ANR	4911361	PrimaryExpression	1		4910261	0					
ANR	4911362	ExpressionStatement	fclose ( out )	553:8:18775:18786	4910261	9	True				
ANR	4911363	CallExpression	fclose ( out )		4910261	0					
ANR	4911364	Callee	fclose		4910261	0					
ANR	4911365	Identifier	fclose		4910261	0					
ANR	4911366	ArgumentList	out		4910261	1					
ANR	4911367	Argument	out		4910261	0					
ANR	4911368	Identifier	out		4910261	0					
ANR	4911369	ExpressionStatement	free_list ( & conf . file_names )	556:4:18799:18826	4910261	15	True				
ANR	4911370	CallExpression	free_list ( & conf . file_names )		4910261	0					
ANR	4911371	Callee	free_list		4910261	0					
ANR	4911372	Identifier	free_list		4910261	0					
ANR	4911373	ArgumentList	& conf . file_names		4910261	1					
ANR	4911374	Argument	& conf . file_names		4910261	0					
ANR	4911375	UnaryOperationExpression	& conf . file_names		4910261	0					
ANR	4911376	UnaryOperator	&		4910261	0					
ANR	4911377	MemberAccess	conf . file_names		4910261	1					
ANR	4911378	Identifier	conf		4910261	0					
ANR	4911379	Identifier	file_names		4910261	1					
ANR	4911380	ExpressionStatement	free_list ( & conf . file_contents )	557:4:18832:18862	4910261	16	True				
ANR	4911381	CallExpression	free_list ( & conf . file_contents )		4910261	0					
ANR	4911382	Callee	free_list		4910261	0					
ANR	4911383	Identifier	free_list		4910261	0					
ANR	4911384	ArgumentList	& conf . file_contents		4910261	1					
ANR	4911385	Argument	& conf . file_contents		4910261	0					
ANR	4911386	UnaryOperationExpression	& conf . file_contents		4910261	0					
ANR	4911387	UnaryOperator	&		4910261	0					
ANR	4911388	MemberAccess	conf . file_contents		4910261	1					
ANR	4911389	Identifier	conf		4910261	0					
ANR	4911390	Identifier	file_contents		4910261	1					
ANR	4911391	ExpressionStatement	free_list ( & conf . replaces )	558:4:18868:18893	4910261	17	True				
ANR	4911392	CallExpression	free_list ( & conf . replaces )		4910261	0					
ANR	4911393	Callee	free_list		4910261	0					
ANR	4911394	Identifier	free_list		4910261	0					
ANR	4911395	ArgumentList	& conf . replaces		4910261	1					
ANR	4911396	Argument	& conf . replaces		4910261	0					
ANR	4911397	UnaryOperationExpression	& conf . replaces		4910261	0					
ANR	4911398	UnaryOperator	&		4910261	0					
ANR	4911399	MemberAccess	conf . replaces		4910261	1					
ANR	4911400	Identifier	conf		4910261	0					
ANR	4911401	Identifier	replaces		4910261	1					
ANR	4911402	ForStatement	for ( i = 0 ; i < NUM_RESOURCE_LISTS ; ++ i )		4910261	18					
ANR	4911403	ForInit	i = 0 ;	559:9:18904:18909	4910261	0	True				
ANR	4911404	AssignmentExpression	i = 0		4910261	0		=			
ANR	4911405	Identifier	i		4910261	0					
ANR	4911406	PrimaryExpression	0		4910261	1					
ANR	4911407	Condition	i < NUM_RESOURCE_LISTS	559:16:18911:18932	4910261	1	True				
ANR	4911408	RelationalExpression	i < NUM_RESOURCE_LISTS		4910261	0		<			
ANR	4911409	Identifier	i		4910261	0					
ANR	4911410	Identifier	NUM_RESOURCE_LISTS		4910261	1					
ANR	4911411	UnaryExpression	++ i	559:40:18935:18937	4910261	2	True				
ANR	4911412	IncDec	++		4910261	0					
ANR	4911413	Identifier	i		4910261	1					
ANR	4911414	ExpressionStatement	free_list ( & conf . lists . indexed [ i ] )	560:8:18948:18981	4910261	3	True				
ANR	4911415	CallExpression	free_list ( & conf . lists . indexed [ i ] )		4910261	0					
ANR	4911416	Callee	free_list		4910261	0					
ANR	4911417	Identifier	free_list		4910261	0					
ANR	4911418	ArgumentList	& conf . lists . indexed [ i ]		4910261	1					
ANR	4911419	Argument	& conf . lists . indexed [ i ]		4910261	0					
ANR	4911420	UnaryOperationExpression	& conf . lists . indexed [ i ]		4910261	0					
ANR	4911421	UnaryOperator	&		4910261	0					
ANR	4911422	ArrayIndexing	conf . lists . indexed [ i ]		4910261	1					
ANR	4911423	MemberAccess	conf . lists . indexed		4910261	0					
ANR	4911424	MemberAccess	conf . lists		4910261	0					
ANR	4911425	Identifier	conf		4910261	0					
ANR	4911426	Identifier	lists		4910261	1					
ANR	4911427	Identifier	indexed		4910261	1					
ANR	4911428	Identifier	i		4910261	1					
ANR	4911429	ReturnStatement	return 0 ;	562:4:18988:18996	4910261	19	True				
ANR	4911430	PrimaryExpression	0		4910261	0					
ANR	4911431	ReturnType	int		4910261	1					
ANR	4911432	Identifier	main		4910261	2					
ANR	4911433	ParameterList	"int argc , char * argv [ ]"		4910261	3					
ANR	4911434	Parameter	int argc	374:5:11946:11953	4910261	0	True				
ANR	4911435	ParameterType	int		4910261	0					
ANR	4911436	Identifier	argc		4910261	1					
ANR	4911437	Parameter	char * argv [ ]	374:15:11956:11967	4910261	1	True				
ANR	4911438	ParameterType	char * [ ]		4910261	0					
ANR	4911439	Identifier	argv		4910261	1					
ANR	4911440	CFGEntryNode	ENTRY		4910261		True				
ANR	4911441	CFGExitNode	EXIT		4910261		True				
ANR	4911442	InfiniteForNode	true		4910261		True				
ANR	4911443	Symbol	& conf . file_contents		4910261						
ANR	4911444	Symbol	pat -> pattern		4910261						
ANR	4911445	Symbol	lib		4910261						
ANR	4911446	Symbol	* q ++		4910261						
ANR	4911447	Symbol	conf		4910261						
ANR	4911448	Symbol	* argv		4910261						
ANR	4911449	Symbol	& conf . lists . named . sorted_resources		4910261						
ANR	4911450	Symbol	& conf . lists . named . links		4910261						
ANR	4911451	Symbol	& conf . obj_p		4910261						
ANR	4911452	Symbol	conf . lib_p . upper_case		4910261						
ANR	4911453	Symbol	& conf . libpath_p		4910261						
ANR	4911454	Symbol	pat -> upper_case		4910261						
ANR	4911455	Symbol	pat -> drop_extn		4910261						
ANR	4911456	Symbol	& conf		4910261						
ANR	4911457	Symbol	& conf . lists . named . fonts		4910261						
ANR	4911458	Symbol	NUM_RESOURCE_LISTS		4910261						
ANR	4911459	Symbol	* * argv		4910261						
ANR	4911460	Symbol	conf . debug		4910261						
ANR	4911461	Symbol	& conf . lists . named . libpaths		4910261						
ANR	4911462	Symbol	conf . obj_p		4910261						
ANR	4911463	Symbol	* * i		4910261						
ANR	4911464	Symbol	pat		4910261						
ANR	4911465	Symbol	templat		4910261						
ANR	4911466	Symbol	stderr		4910261						
ANR	4911467	Symbol	& conf . lists . named . objs		4910261						
ANR	4911468	Symbol	true		4910261						
ANR	4911469	Symbol	conf . lists . named		4910261						
ANR	4911470	Symbol	conf . lib_p		4910261						
ANR	4911471	Symbol	& conf . lib_p		4910261						
ANR	4911472	Symbol	conf . libpath_p		4910261						
ANR	4911473	Symbol	* arg		4910261						
ANR	4911474	Symbol	init_config_lists		4910261						
ANR	4911475	Symbol	* ++ arg		4910261						
ANR	4911476	Symbol	argv		4910261						
ANR	4911477	Symbol	* pat		4910261						
ANR	4911478	Symbol	conf . lists . indexed		4910261						
ANR	4911479	Symbol	& conf . lists . named . libs		4910261						
ANR	4911480	Symbol	& conf . replaces		4910261						
ANR	4911481	Symbol	out		4910261						
ANR	4911482	Symbol	* ( arg += 2 )		4910261						
ANR	4911483	Symbol	& conf . lists . named . compositors		4910261						
ANR	4911484	Symbol	conf . lists		4910261						
ANR	4911485	Symbol	arg		4910261						
ANR	4911486	Symbol	conf . file_prefix		4910261						
ANR	4911487	Symbol	& conf . lists . named . devs		4910261						
ANR	4911488	Symbol	escape		4910261						
ANR	4911489	Symbol	empty_str		4910261						
ANR	4911490	Symbol	conf . lib_p . pattern		4910261						
ANR	4911491	Symbol	& conf . lists		4910261						
ANR	4911492	Symbol	argc		4910261						
ANR	4911493	Symbol	fopen		4910261						
ANR	4911494	Symbol	conf . name_prefix		4910261						
ANR	4911495	Symbol	& conf . lists . named . resources		4910261						
ANR	4911496	Symbol	& conf . lists . named		4910261						
ANR	4911497	Symbol	* p ++		4910261						
ANR	4911498	Symbol	false		4910261						
ANR	4911499	Symbol	i		4910261						
ANR	4911500	Symbol	p		4910261						
ANR	4911501	Symbol	q		4910261						
ANR	4911502	Symbol	* i		4910261						
ANR	4911503	Symbol	init_config		4910261						
ANR	4911504	Symbol	obj		4910261						
ANR	4911505	Symbol	& conf . file_names		4910261						
ANR	4911506	Symbol	* p		4910261						
ANR	4911507	Symbol	* q		4910261						
ANR	4911508	Symbol	conf . lib_p . drop_extn		4910261						
ANR	4911509	Function	mmalloc	565:0:19001:19397							
ANR	4911510	FunctionDef	"mmalloc (size_t s , const char * label)"		4911509	0					
ANR	4911511	CompoundStatement		567:0:19052:19397	4911509	0					
ANR	4911512	IdentifierDeclStatement	char * m ;	569:2:19081:19088	4911509	0	True				
ANR	4911513	IdentifierDecl	* m		4911509	0					
ANR	4911514	IdentifierDeclType	char *		4911509	0					
ANR	4911515	Identifier	m		4911509	1					
ANR	4911516	IdentifierDeclStatement	memhdr * h ;	570:2:19092:19101	4911509	1	True				
ANR	4911517	IdentifierDecl	* h		4911509	0					
ANR	4911518	IdentifierDeclType	memhdr *		4911509	0					
ANR	4911519	Identifier	h		4911509	1					
ANR	4911520	ExpressionStatement	s += SIZEOF_MEMHDR_ALIGNED	572:2:19106:19133	4911509	2	True				
ANR	4911521	AssignmentExpression	s += SIZEOF_MEMHDR_ALIGNED		4911509	0		+=			
ANR	4911522	Identifier	s		4911509	0					
ANR	4911523	Identifier	SIZEOF_MEMHDR_ALIGNED		4911509	1					
ANR	4911524	ExpressionStatement	m = malloc ( s )	574:2:19138:19151	4911509	3	True				
ANR	4911525	AssignmentExpression	m = malloc ( s )		4911509	0		=			
ANR	4911526	Identifier	m		4911509	0					
ANR	4911527	CallExpression	malloc ( s )		4911509	1					
ANR	4911528	Callee	malloc		4911509	0					
ANR	4911529	Identifier	malloc		4911509	0					
ANR	4911530	ArgumentList	s		4911509	1					
ANR	4911531	Argument	s		4911509	0					
ANR	4911532	Identifier	s		4911509	0					
ANR	4911533	IfStatement	if ( ! m )		4911509	4					
ANR	4911534	Condition	! m	575:6:19159:19160	4911509	0	True				
ANR	4911535	UnaryOperationExpression	! m		4911509	0					
ANR	4911536	UnaryOperator	!		4911509	0					
ANR	4911537	Identifier	m		4911509	1					
ANR	4911538	ReturnStatement	return m ;	575:10:19163:19171	4911509	1	True				
ANR	4911539	Identifier	m		4911509	0					
ANR	4911540	ExpressionStatement	h = ( memhdr * ) m	576:2:19175:19190	4911509	5	True				
ANR	4911541	AssignmentExpression	h = ( memhdr * ) m		4911509	0		=			
ANR	4911542	Identifier	h		4911509	0					
ANR	4911543	CastExpression	( memhdr * ) m		4911509	1					
ANR	4911544	CastTarget	memhdr *		4911509	0					
ANR	4911545	Identifier	m		4911509	1					
ANR	4911546	ExpressionStatement	h -> s = s	577:2:19194:19202	4911509	6	True				
ANR	4911547	AssignmentExpression	h -> s = s		4911509	0		=			
ANR	4911548	PtrMemberAccess	h -> s		4911509	0					
ANR	4911549	Identifier	h		4911509	0					
ANR	4911550	Identifier	s		4911509	1					
ANR	4911551	Identifier	s		4911509	1					
ANR	4911552	ExpressionStatement	h -> next = NULL	578:2:19206:19220	4911509	7	True				
ANR	4911553	AssignmentExpression	h -> next = NULL		4911509	0		=			
ANR	4911554	PtrMemberAccess	h -> next		4911509	0					
ANR	4911555	Identifier	h		4911509	0					
ANR	4911556	Identifier	next		4911509	1					
ANR	4911557	Identifier	NULL		4911509	1					
ANR	4911558	ExpressionStatement	h -> count = mem_alloc_count ++	579:2:19224:19252	4911509	8	True				
ANR	4911559	AssignmentExpression	h -> count = mem_alloc_count ++		4911509	0		=			
ANR	4911560	PtrMemberAccess	h -> count		4911509	0					
ANR	4911561	Identifier	h		4911509	0					
ANR	4911562	Identifier	count		4911509	1					
ANR	4911563	PostIncDecOperationExpression	mem_alloc_count ++		4911509	1					
ANR	4911564	Identifier	mem_alloc_count		4911509	0					
ANR	4911565	IncDec	++		4911509	1					
ANR	4911566	ExpressionStatement	memhdr_tail -> next = h	580:2:19256:19277	4911509	9	True				
ANR	4911567	AssignmentExpression	memhdr_tail -> next = h		4911509	0		=			
ANR	4911568	PtrMemberAccess	memhdr_tail -> next		4911509	0					
ANR	4911569	Identifier	memhdr_tail		4911509	0					
ANR	4911570	Identifier	next		4911509	1					
ANR	4911571	Identifier	h		4911509	1					
ANR	4911572	ExpressionStatement	memhdr_tail = h	581:2:19281:19296	4911509	10	True				
ANR	4911573	AssignmentExpression	memhdr_tail = h		4911509	0		=			
ANR	4911574	Identifier	memhdr_tail		4911509	0					
ANR	4911575	Identifier	h		4911509	1					
ANR	4911576	ExpressionStatement	m += SIZEOF_MEMHDR_ALIGNED	582:2:19300:19326	4911509	11	True				
ANR	4911577	AssignmentExpression	m += SIZEOF_MEMHDR_ALIGNED		4911509	0		+=			
ANR	4911578	Identifier	m		4911509	0					
ANR	4911579	Identifier	SIZEOF_MEMHDR_ALIGNED		4911509	1					
ANR	4911580	ReturnStatement	return ( void * ) m ;	584:2:19331:19347	4911509	12	True				
ANR	4911581	CastExpression	( void * ) m		4911509	0					
ANR	4911582	CastTarget	void *		4911509	0					
ANR	4911583	Identifier	m		4911509	1					
ANR	4911584	ReturnType	static void *		4911509	1					
ANR	4911585	Identifier	mmalloc		4911509	2					
ANR	4911586	ParameterList	"size_t s , const char * label"		4911509	3					
ANR	4911587	Parameter	size_t s	566:8:19023:19030	4911509	0	True				
ANR	4911588	ParameterType	size_t		4911509	0					
ANR	4911589	Identifier	s		4911509	1					
ANR	4911590	Parameter	const char * label	566:18:19033:19049	4911509	1	True				
ANR	4911591	ParameterType	const char *		4911509	0					
ANR	4911592	Identifier	label		4911509	1					
ANR	4911593	CFGEntryNode	ENTRY		4911509		True				
ANR	4911594	CFGExitNode	EXIT		4911509		True				
ANR	4911595	Symbol	malloc		4911509						
ANR	4911596	Symbol	NULL		4911509						
ANR	4911597	Symbol	h -> next		4911509						
ANR	4911598	Symbol	h -> count		4911509						
ANR	4911599	Symbol	h		4911509						
ANR	4911600	Symbol	label		4911509						
ANR	4911601	Symbol	* memhdr_tail		4911509						
ANR	4911602	Symbol	h -> s		4911509						
ANR	4911603	Symbol	m		4911509						
ANR	4911604	Symbol	SIZEOF_MEMHDR_ALIGNED		4911509						
ANR	4911605	Symbol	mem_alloc_count		4911509						
ANR	4911606	Symbol	memhdr_tail		4911509						
ANR	4911607	Symbol	* h		4911509						
ANR	4911608	Symbol	s		4911509						
ANR	4911609	Symbol	memhdr_tail -> next		4911509						
ANR	4911610	Function	mcalloc	591:0:19400:19672							
ANR	4911611	FunctionDef	"mcalloc (size_t nmemb , size_t size , const char * label)"		4911610	0					
ANR	4911612	CompoundStatement		593:0:19468:19672	4911610	0					
ANR	4911613	IdentifierDeclStatement	char * m ;	595:2:19497:19504	4911610	0	True				
ANR	4911614	IdentifierDecl	* m		4911610	0					
ANR	4911615	IdentifierDeclType	char *		4911610	0					
ANR	4911616	Identifier	m		4911610	1					
ANR	4911617	ExpressionStatement	"m = mmalloc ( nmemb * size , label )"	596:2:19508:19540	4911610	1	True				
ANR	4911618	AssignmentExpression	"m = mmalloc ( nmemb * size , label )"		4911610	0		=			
ANR	4911619	Identifier	m		4911610	0					
ANR	4911620	CallExpression	"mmalloc ( nmemb * size , label )"		4911610	1					
ANR	4911621	Callee	mmalloc		4911610	0					
ANR	4911622	Identifier	mmalloc		4911610	0					
ANR	4911623	ArgumentList	nmemb * size		4911610	1					
ANR	4911624	Argument	nmemb * size		4911610	0					
ANR	4911625	MultiplicativeExpression	nmemb * size		4911610	0		*			
ANR	4911626	Identifier	nmemb		4911610	0					
ANR	4911627	Identifier	size		4911610	1					
ANR	4911628	Argument	label		4911610	1					
ANR	4911629	Identifier	label		4911610	0					
ANR	4911630	IfStatement	if ( m )		4911610	2					
ANR	4911631	Condition	m	597:6:19548:19548	4911610	0	True				
ANR	4911632	Identifier	m		4911610	0					
ANR	4911633	CompoundStatement		5:9:82:82	4911610	1					
ANR	4911634	ExpressionStatement	"memset ( m , 0x00 , nmemb * size )"	598:4:19557:19586	4911610	0	True				
ANR	4911635	CallExpression	"memset ( m , 0x00 , nmemb * size )"		4911610	0					
ANR	4911636	Callee	memset		4911610	0					
ANR	4911637	Identifier	memset		4911610	0					
ANR	4911638	ArgumentList	m		4911610	1					
ANR	4911639	Argument	m		4911610	0					
ANR	4911640	Identifier	m		4911610	0					
ANR	4911641	Argument	0x00		4911610	1					
ANR	4911642	PrimaryExpression	0x00		4911610	0					
ANR	4911643	Argument	nmemb * size		4911610	2					
ANR	4911644	MultiplicativeExpression	nmemb * size		4911610	0		*			
ANR	4911645	Identifier	nmemb		4911610	0					
ANR	4911646	Identifier	size		4911610	1					
ANR	4911647	ReturnStatement	return ( void * ) m ;	601:2:19595:19611	4911610	3	True				
ANR	4911648	CastExpression	( void * ) m		4911610	0					
ANR	4911649	CastTarget	void *		4911610	0					
ANR	4911650	Identifier	m		4911610	1					
ANR	4911651	ReturnType	static void *		4911610	1					
ANR	4911652	Identifier	mcalloc		4911610	2					
ANR	4911653	ParameterList	"size_t nmemb , size_t size , const char * label"		4911610	3					
ANR	4911654	Parameter	size_t nmemb	592:8:19422:19433	4911610	0	True				
ANR	4911655	ParameterType	size_t		4911610	0					
ANR	4911656	Identifier	nmemb		4911610	1					
ANR	4911657	Parameter	size_t size	592:22:19436:19446	4911610	1	True				
ANR	4911658	ParameterType	size_t		4911610	0					
ANR	4911659	Identifier	size		4911610	1					
ANR	4911660	Parameter	const char * label	592:35:19449:19465	4911610	2	True				
ANR	4911661	ParameterType	const char *		4911610	0					
ANR	4911662	Identifier	label		4911610	1					
ANR	4911663	CFGEntryNode	ENTRY		4911610		True				
ANR	4911664	CFGExitNode	EXIT		4911610		True				
ANR	4911665	Symbol	size		4911610						
ANR	4911666	Symbol	mmalloc		4911610						
ANR	4911667	Symbol	nmemb		4911610						
ANR	4911668	Symbol	label		4911610						
ANR	4911669	Symbol	m		4911610						
ANR	4911670	Function	mfree	608:0:19675:20135							
ANR	4911671	FunctionDef	"mfree (void * om , const char * label)"		4911670	0					
ANR	4911672	CompoundStatement		610:0:19723:20135	4911670	0					
ANR	4911673	IdentifierDeclStatement	char * m = om ;	612:2:19752:19764	4911670	0	True				
ANR	4911674	IdentifierDecl	* m = om		4911670	0					
ANR	4911675	IdentifierDeclType	char *		4911670	0					
ANR	4911676	Identifier	m		4911670	1					
ANR	4911677	AssignmentExpression	* m = om		4911670	2		=			
ANR	4911678	Identifier	om		4911670	0					
ANR	4911679	Identifier	om		4911670	1					
ANR	4911680	IdentifierDeclStatement	"memhdr * h , * hcur , * hprev ;"	613:2:19768:19792	4911670	1	True				
ANR	4911681	IdentifierDecl	* h		4911670	0					
ANR	4911682	IdentifierDeclType	memhdr *		4911670	0					
ANR	4911683	Identifier	h		4911670	1					
ANR	4911684	IdentifierDecl	* hcur		4911670	1					
ANR	4911685	IdentifierDeclType	memhdr *		4911670	0					
ANR	4911686	Identifier	hcur		4911670	1					
ANR	4911687	IdentifierDecl	* hprev		4911670	2					
ANR	4911688	IdentifierDeclType	memhdr *		4911670	0					
ANR	4911689	Identifier	hprev		4911670	1					
ANR	4911690	IfStatement	if ( ! m )		4911670	2					
ANR	4911691	Condition	! m	615:6:19801:19802	4911670	0	True				
ANR	4911692	UnaryOperationExpression	! m		4911670	0					
ANR	4911693	UnaryOperator	!		4911670	0					
ANR	4911694	Identifier	m		4911670	1					
ANR	4911695	ReturnStatement	return ;	615:10:19805:19811	4911670	1	True				
ANR	4911696	ExpressionStatement	h = ( memhdr * ) ( m - SIZEOF_MEMHDR_ALIGNED )	617:2:19816:19857	4911670	3	True				
ANR	4911697	AssignmentExpression	h = ( memhdr * ) ( m - SIZEOF_MEMHDR_ALIGNED )		4911670	0		=			
ANR	4911698	Identifier	h		4911670	0					
ANR	4911699	CastExpression	( memhdr * ) ( m - SIZEOF_MEMHDR_ALIGNED )		4911670	1					
ANR	4911700	CastTarget	memhdr *		4911670	0					
ANR	4911701	AdditiveExpression	m - SIZEOF_MEMHDR_ALIGNED		4911670	1		-			
ANR	4911702	Identifier	m		4911670	0					
ANR	4911703	Identifier	SIZEOF_MEMHDR_ALIGNED		4911670	1					
ANR	4911704	ExpressionStatement	hcur = memhdr_lst . next	618:2:19861:19883	4911670	4	True				
ANR	4911705	AssignmentExpression	hcur = memhdr_lst . next		4911670	0		=			
ANR	4911706	Identifier	hcur		4911670	0					
ANR	4911707	MemberAccess	memhdr_lst . next		4911670	1					
ANR	4911708	Identifier	memhdr_lst		4911670	0					
ANR	4911709	Identifier	next		4911670	1					
ANR	4911710	ExpressionStatement	hprev = & memhdr_lst	619:2:19887:19906	4911670	5	True				
ANR	4911711	AssignmentExpression	hprev = & memhdr_lst		4911670	0		=			
ANR	4911712	Identifier	hprev		4911670	0					
ANR	4911713	UnaryOperationExpression	& memhdr_lst		4911670	1					
ANR	4911714	UnaryOperator	&		4911670	0					
ANR	4911715	Identifier	memhdr_lst		4911670	1					
ANR	4911716	WhileStatement	while ( hcur && hcur != h )		4911670	6					
ANR	4911717	Condition	hcur && hcur != h	620:9:19917:19933	4911670	0	True				
ANR	4911718	AndExpression	hcur && hcur != h		4911670	0		&&			
ANR	4911719	Identifier	hcur		4911670	0					
ANR	4911720	EqualityExpression	hcur != h		4911670	1		!=			
ANR	4911721	Identifier	hcur		4911670	0					
ANR	4911722	Identifier	h		4911670	1					
ANR	4911723	CompoundStatement		11:28:212:212	4911670	1					
ANR	4911724	ExpressionStatement	hprev = hcur	621:4:19942:19954	4911670	0	True				
ANR	4911725	AssignmentExpression	hprev = hcur		4911670	0		=			
ANR	4911726	Identifier	hprev		4911670	0					
ANR	4911727	Identifier	hcur		4911670	1					
ANR	4911728	ExpressionStatement	hcur = hprev -> next	622:4:19960:19978	4911670	1	True				
ANR	4911729	AssignmentExpression	hcur = hprev -> next		4911670	0		=			
ANR	4911730	Identifier	hcur		4911670	0					
ANR	4911731	PtrMemberAccess	hprev -> next		4911670	1					
ANR	4911732	Identifier	hprev		4911670	0					
ANR	4911733	Identifier	next		4911670	1					
ANR	4911734	IfStatement	if ( hcur == h )		4911670	7					
ANR	4911735	Condition	hcur == h	624:6:19990:19998	4911670	0	True				
ANR	4911736	EqualityExpression	hcur == h		4911670	0		==			
ANR	4911737	Identifier	hcur		4911670	0					
ANR	4911738	Identifier	h		4911670	1					
ANR	4911739	CompoundStatement		15:17:277:277	4911670	1					
ANR	4911740	ExpressionStatement	hprev -> next = h -> next	625:4:20007:20028	4911670	0	True				
ANR	4911741	AssignmentExpression	hprev -> next = h -> next		4911670	0		=			
ANR	4911742	PtrMemberAccess	hprev -> next		4911670	0					
ANR	4911743	Identifier	hprev		4911670	0					
ANR	4911744	Identifier	next		4911670	1					
ANR	4911745	PtrMemberAccess	h -> next		4911670	1					
ANR	4911746	Identifier	h		4911670	0					
ANR	4911747	Identifier	next		4911670	1					
ANR	4911748	IfStatement	if ( h == memhdr_tail )		4911670	8					
ANR	4911749	Condition	h == memhdr_tail	627:6:20040:20055	4911670	0	True				
ANR	4911750	EqualityExpression	h == memhdr_tail		4911670	0		==			
ANR	4911751	Identifier	h		4911670	0					
ANR	4911752	Identifier	memhdr_tail		4911670	1					
ANR	4911753	ExpressionStatement	memhdr_tail = hprev	628:4:20062:20081	4911670	1	True				
ANR	4911754	AssignmentExpression	memhdr_tail = hprev		4911670	0		=			
ANR	4911755	Identifier	memhdr_tail		4911670	0					
ANR	4911756	Identifier	hprev		4911670	1					
ANR	4911757	ExpressionStatement	free ( h )	630:2:20086:20093	4911670	9	True				
ANR	4911758	CallExpression	free ( h )		4911670	0					
ANR	4911759	Callee	free		4911670	0					
ANR	4911760	Identifier	free		4911670	0					
ANR	4911761	ArgumentList	h		4911670	1					
ANR	4911762	Argument	h		4911670	0					
ANR	4911763	Identifier	h		4911670	0					
ANR	4911764	ReturnType	static void		4911670	1					
ANR	4911765	Identifier	mfree		4911670	2					
ANR	4911766	ParameterList	"void * om , const char * label"		4911670	3					
ANR	4911767	Parameter	void * om	609:7:19694:19701	4911670	0	True				
ANR	4911768	ParameterType	void *		4911670	0					
ANR	4911769	Identifier	om		4911670	1					
ANR	4911770	Parameter	const char * label	609:17:19704:19720	4911670	1	True				
ANR	4911771	ParameterType	const char *		4911670	0					
ANR	4911772	Identifier	label		4911670	1					
ANR	4911773	CFGEntryNode	ENTRY		4911670		True				
ANR	4911774	CFGExitNode	EXIT		4911670		True				
ANR	4911775	Symbol	h -> next		4911670						
ANR	4911776	Symbol	hcur		4911670						
ANR	4911777	Symbol	h		4911670						
ANR	4911778	Symbol	memhdr_lst		4911670						
ANR	4911779	Symbol	label		4911670						
ANR	4911780	Symbol	* hprev		4911670						
ANR	4911781	Symbol	m		4911670						
ANR	4911782	Symbol	SIZEOF_MEMHDR_ALIGNED		4911670						
ANR	4911783	Symbol	hprev -> next		4911670						
ANR	4911784	Symbol	& memhdr_lst		4911670						
ANR	4911785	Symbol	memhdr_tail		4911670						
ANR	4911786	Symbol	* h		4911670						
ANR	4911787	Symbol	hprev		4911670						
ANR	4911788	Symbol	memhdr_lst . next		4911670						
ANR	4911789	Symbol	om		4911670						
ANR	4911790	Function	mrealloc	637:0:20138:20601							
ANR	4911791	FunctionDef	"mrealloc (void * old_ptr , size_t old_size , size_t new_size , const char * label)"		4911790	0					
ANR	4911792	CompoundStatement		639:0:20229:20601	4911790	0					
ANR	4911793	IdentifierDeclStatement	"void * new_ptr = mmalloc ( new_size , label ) ;"	640:4:20235:20275	4911790	0	True				
ANR	4911794	IdentifierDecl	"* new_ptr = mmalloc ( new_size , label )"		4911790	0					
ANR	4911795	IdentifierDeclType	void *		4911790	0					
ANR	4911796	Identifier	new_ptr		4911790	1					
ANR	4911797	AssignmentExpression	"* new_ptr = mmalloc ( new_size , label )"		4911790	2		=			
ANR	4911798	Identifier	new_ptr		4911790	0					
ANR	4911799	CallExpression	"mmalloc ( new_size , label )"		4911790	1					
ANR	4911800	Callee	mmalloc		4911790	0					
ANR	4911801	Identifier	mmalloc		4911790	0					
ANR	4911802	ArgumentList	new_size		4911790	1					
ANR	4911803	Argument	new_size		4911790	0					
ANR	4911804	Identifier	new_size		4911790	0					
ANR	4911805	Argument	label		4911790	1					
ANR	4911806	Identifier	label		4911790	0					
ANR	4911807	IfStatement	if ( new_ptr == NULL )		4911790	1					
ANR	4911808	Condition	new_ptr == NULL	642:8:20286:20300	4911790	0	True				
ANR	4911809	EqualityExpression	new_ptr == NULL		4911790	0		==			
ANR	4911810	Identifier	new_ptr		4911790	0					
ANR	4911811	Identifier	NULL		4911790	1					
ANR	4911812	ReturnStatement	return NULL ;	643:8:20311:20322	4911790	1	True				
ANR	4911813	Identifier	NULL		4911790	0					
ANR	4911814	ExpressionStatement	"memset ( new_ptr , 0x00 , new_size )"	644:4:20328:20359	4911790	2	True				
ANR	4911815	CallExpression	"memset ( new_ptr , 0x00 , new_size )"		4911790	0					
ANR	4911816	Callee	memset		4911790	0					
ANR	4911817	Identifier	memset		4911790	0					
ANR	4911818	ArgumentList	new_ptr		4911790	1					
ANR	4911819	Argument	new_ptr		4911790	0					
ANR	4911820	Identifier	new_ptr		4911790	0					
ANR	4911821	Argument	0x00		4911790	1					
ANR	4911822	PrimaryExpression	0x00		4911790	0					
ANR	4911823	Argument	new_size		4911790	2					
ANR	4911824	Identifier	new_size		4911790	0					
ANR	4911825	IfStatement	if ( old_ptr )		4911790	3					
ANR	4911826	Condition	old_ptr	647:8:20470:20476	4911790	0	True				
ANR	4911827	Identifier	old_ptr		4911790	0					
ANR	4911828	CompoundStatement		9:17:249:249	4911790	1					
ANR	4911829	ExpressionStatement	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"	648:8:20489:20538	4911790	0	True				
ANR	4911830	CallExpression	"memcpy ( new_ptr , old_ptr , min ( old_size , new_size ) )"		4911790	0					
ANR	4911831	Callee	memcpy		4911790	0					
ANR	4911832	Identifier	memcpy		4911790	0					
ANR	4911833	ArgumentList	new_ptr		4911790	1					
ANR	4911834	Argument	new_ptr		4911790	0					
ANR	4911835	Identifier	new_ptr		4911790	0					
ANR	4911836	Argument	old_ptr		4911790	1					
ANR	4911837	Identifier	old_ptr		4911790	0					
ANR	4911838	Argument	"min ( old_size , new_size )"		4911790	2					
ANR	4911839	CallExpression	"min ( old_size , new_size )"		4911790	0					
ANR	4911840	Callee	min		4911790	0					
ANR	4911841	Identifier	min		4911790	0					
ANR	4911842	ArgumentList	old_size		4911790	1					
ANR	4911843	Argument	old_size		4911790	0					
ANR	4911844	Identifier	old_size		4911790	0					
ANR	4911845	Argument	new_size		4911790	1					
ANR	4911846	Identifier	new_size		4911790	0					
ANR	4911847	ExpressionStatement	"mfree ( old_ptr , ""realloc"" )"	649:8:20548:20573	4911790	1	True				
ANR	4911848	CallExpression	"mfree ( old_ptr , ""realloc"" )"		4911790	0					
ANR	4911849	Callee	mfree		4911790	0					
ANR	4911850	Identifier	mfree		4911790	0					
ANR	4911851	ArgumentList	old_ptr		4911790	1					
ANR	4911852	Argument	old_ptr		4911790	0					
ANR	4911853	Identifier	old_ptr		4911790	0					
ANR	4911854	Argument	"""realloc"""		4911790	1					
ANR	4911855	PrimaryExpression	"""realloc"""		4911790	0					
ANR	4911856	ReturnStatement	return new_ptr ;	651:4:20585:20599	4911790	4	True				
ANR	4911857	Identifier	new_ptr		4911790	0					
ANR	4911858	ReturnType	static void *		4911790	1					
ANR	4911859	Identifier	mrealloc		4911790	2					
ANR	4911860	ParameterList	"void * old_ptr , size_t old_size , size_t new_size , const char * label"		4911790	3					
ANR	4911861	Parameter	void * old_ptr	638:9:20161:20173	4911790	0	True				
ANR	4911862	ParameterType	void *		4911790	0					
ANR	4911863	Identifier	old_ptr		4911790	1					
ANR	4911864	Parameter	size_t old_size	638:24:20176:20190	4911790	1	True				
ANR	4911865	ParameterType	size_t		4911790	0					
ANR	4911866	Identifier	old_size		4911790	1					
ANR	4911867	Parameter	size_t new_size	638:41:20193:20207	4911790	2	True				
ANR	4911868	ParameterType	size_t		4911790	0					
ANR	4911869	Identifier	new_size		4911790	1					
ANR	4911870	Parameter	const char * label	638:58:20210:20226	4911790	3	True				
ANR	4911871	ParameterType	const char *		4911790	0					
ANR	4911872	Identifier	label		4911790	1					
ANR	4911873	CFGEntryNode	ENTRY		4911790		True				
ANR	4911874	CFGExitNode	EXIT		4911790		True				
ANR	4911875	Symbol	old_size		4911790						
ANR	4911876	Symbol	NULL		4911790						
ANR	4911877	Symbol	min		4911790						
ANR	4911878	Symbol	mmalloc		4911790						
ANR	4911879	Symbol	new_size		4911790						
ANR	4911880	Symbol	old_ptr		4911790						
ANR	4911881	Symbol	label		4911790						
ANR	4911882	Symbol	new_ptr		4911790						
ANR	4911883	Function	alloc_list	655:0:20649:20877							
ANR	4911884	FunctionDef	alloc_list (string_list_t * list)		4911883	0					
ANR	4911885	CompoundStatement		657:0:20686:20877	4911883	0					
ANR	4911886	ExpressionStatement	list -> count = 0	658:4:20692:20707	4911883	0	True				
ANR	4911887	AssignmentExpression	list -> count = 0		4911883	0		=			
ANR	4911888	PtrMemberAccess	list -> count		4911883	0					
ANR	4911889	Identifier	list		4911883	0					
ANR	4911890	Identifier	count		4911883	1					
ANR	4911891	PrimaryExpression	0		4911883	1					
ANR	4911892	ExpressionStatement	"list -> items = ( string_item_t * ) mcalloc ( list -> max_count , sizeof ( string_item_t ) , ""alloc_list(items->items)"" )"	659:4:20713:20828	4911883	1	True				
ANR	4911893	AssignmentExpression	"list -> items = ( string_item_t * ) mcalloc ( list -> max_count , sizeof ( string_item_t ) , ""alloc_list(items->items)"" )"		4911883	0		=			
ANR	4911894	PtrMemberAccess	list -> items		4911883	0					
ANR	4911895	Identifier	list		4911883	0					
ANR	4911896	Identifier	items		4911883	1					
ANR	4911897	CastExpression	"( string_item_t * ) mcalloc ( list -> max_count , sizeof ( string_item_t ) , ""alloc_list(items->items)"" )"		4911883	1					
ANR	4911898	CastTarget	string_item_t *		4911883	0					
ANR	4911899	CallExpression	"mcalloc ( list -> max_count , sizeof ( string_item_t ) , ""alloc_list(items->items)"" )"		4911883	1					
ANR	4911900	Callee	mcalloc		4911883	0					
ANR	4911901	Identifier	mcalloc		4911883	0					
ANR	4911902	ArgumentList	list -> max_count		4911883	1					
ANR	4911903	Argument	list -> max_count		4911883	0					
ANR	4911904	PtrMemberAccess	list -> max_count		4911883	0					
ANR	4911905	Identifier	list		4911883	0					
ANR	4911906	Identifier	max_count		4911883	1					
ANR	4911907	Argument	sizeof ( string_item_t )		4911883	1					
ANR	4911908	SizeofExpression	sizeof ( string_item_t )		4911883	0					
ANR	4911909	Sizeof	sizeof		4911883	0					
ANR	4911910	SizeofOperand	string_item_t		4911883	1					
ANR	4911911	Argument	"""alloc_list(items->items)"""		4911883	2					
ANR	4911912	PrimaryExpression	"""alloc_list(items->items)"""		4911883	0					
ANR	4911913	ExpressionStatement	assert ( list -> items != NULL )	661:4:20834:20861	4911883	2	True				
ANR	4911914	CallExpression	assert ( list -> items != NULL )		4911883	0					
ANR	4911915	Callee	assert		4911883	0					
ANR	4911916	Identifier	assert		4911883	0					
ANR	4911917	ArgumentList	list -> items != NULL		4911883	1					
ANR	4911918	Argument	list -> items != NULL		4911883	0					
ANR	4911919	EqualityExpression	list -> items != NULL		4911883	0		!=			
ANR	4911920	PtrMemberAccess	list -> items		4911883	0					
ANR	4911921	Identifier	list		4911883	0					
ANR	4911922	Identifier	items		4911883	1					
ANR	4911923	Identifier	NULL		4911883	1					
ANR	4911924	ReturnStatement	return 0 ;	662:4:20867:20875	4911883	3	True				
ANR	4911925	PrimaryExpression	0		4911883	0					
ANR	4911926	ReturnType	int		4911883	1					
ANR	4911927	Identifier	alloc_list		4911883	2					
ANR	4911928	ParameterList	string_list_t * list		4911883	3					
ANR	4911929	Parameter	string_list_t * list	656:11:20664:20683	4911883	0	True				
ANR	4911930	ParameterType	string_list_t *		4911883	0					
ANR	4911931	Identifier	list		4911883	1					
ANR	4911932	CFGEntryNode	ENTRY		4911883		True				
ANR	4911933	CFGExitNode	EXIT		4911883		True				
ANR	4911934	Symbol	NULL		4911883						
ANR	4911935	Symbol	* list		4911883						
ANR	4911936	Symbol	list -> items		4911883						
ANR	4911937	Symbol	list -> max_count		4911883						
ANR	4911938	Symbol	list		4911883						
ANR	4911939	Symbol	list -> count		4911883						
ANR	4911940	Symbol	mcalloc		4911883						
ANR	4911941	Function	free_list	665:0:20880:21254							
ANR	4911942	FunctionDef	free_list (string_list_t * list)		4911941	0					
ANR	4911943	CompoundStatement		667:0:20917:21254	4911941	0					
ANR	4911944	IdentifierDeclStatement	int i ;	668:4:20923:20928	4911941	0	True				
ANR	4911945	IdentifierDecl	i		4911941	0					
ANR	4911946	IdentifierDeclType	int		4911941	0					
ANR	4911947	Identifier	i		4911941	1					
ANR	4911948	ForStatement	for ( i = 0 ; i < list -> max_count ; i ++ )		4911941	1					
ANR	4911949	ForInit	i = 0 ;	670:9:20940:20945	4911941	0	True				
ANR	4911950	AssignmentExpression	i = 0		4911941	0		=			
ANR	4911951	Identifier	i		4911941	0					
ANR	4911952	PrimaryExpression	0		4911941	1					
ANR	4911953	Condition	i < list -> max_count	670:16:20947:20965	4911941	1	True				
ANR	4911954	RelationalExpression	i < list -> max_count		4911941	0		<			
ANR	4911955	Identifier	i		4911941	0					
ANR	4911956	PtrMemberAccess	list -> max_count		4911941	1					
ANR	4911957	Identifier	list		4911941	0					
ANR	4911958	Identifier	max_count		4911941	1					
ANR	4911959	PostIncDecOperationExpression	i ++	670:37:20968:20970	4911941	2	True				
ANR	4911960	Identifier	i		4911941	0					
ANR	4911961	IncDec	++		4911941	1					
ANR	4911962	CompoundStatement		4:42:55:55	4911941	3					
ANR	4911963	IfStatement	if ( list -> items [ i ] . str != empty_str )		4911941	0					
ANR	4911964	Condition	list -> items [ i ] . str != empty_str	671:12:20987:21017	4911941	0	True				
ANR	4911965	EqualityExpression	list -> items [ i ] . str != empty_str		4911941	0		!=			
ANR	4911966	MemberAccess	list -> items [ i ] . str		4911941	0					
ANR	4911967	ArrayIndexing	list -> items [ i ]		4911941	0					
ANR	4911968	PtrMemberAccess	list -> items		4911941	0					
ANR	4911969	Identifier	list		4911941	0					
ANR	4911970	Identifier	items		4911941	1					
ANR	4911971	Identifier	i		4911941	1					
ANR	4911972	Identifier	str		4911941	1					
ANR	4911973	Identifier	empty_str		4911941	1					
ANR	4911974	CompoundStatement		5:45:102:102	4911941	1					
ANR	4911975	ExpressionStatement	"mfree ( ( void * ) list -> items [ i ] . str , ""free_list(list->items[i].str)"" )"	672:12:21034:21100	4911941	0	True				
ANR	4911976	CallExpression	"mfree ( ( void * ) list -> items [ i ] . str , ""free_list(list->items[i].str)"" )"		4911941	0					
ANR	4911977	Callee	mfree		4911941	0					
ANR	4911978	Identifier	mfree		4911941	0					
ANR	4911979	ArgumentList	( void * ) list -> items [ i ] . str		4911941	1					
ANR	4911980	Argument	( void * ) list -> items [ i ] . str		4911941	0					
ANR	4911981	CastExpression	( void * ) list -> items [ i ] . str		4911941	0					
ANR	4911982	CastTarget	void *		4911941	0					
ANR	4911983	MemberAccess	list -> items [ i ] . str		4911941	1					
ANR	4911984	ArrayIndexing	list -> items [ i ]		4911941	0					
ANR	4911985	PtrMemberAccess	list -> items		4911941	0					
ANR	4911986	Identifier	list		4911941	0					
ANR	4911987	Identifier	items		4911941	1					
ANR	4911988	Identifier	i		4911941	1					
ANR	4911989	Identifier	str		4911941	1					
ANR	4911990	Argument	"""free_list(list->items[i].str)"""		4911941	1					
ANR	4911991	PrimaryExpression	"""free_list(list->items[i].str)"""		4911941	0					
ANR	4911992	ExpressionStatement	list -> items [ i ] . str = empty_str	674:8:21120:21150	4911941	1	True				
ANR	4911993	AssignmentExpression	list -> items [ i ] . str = empty_str		4911941	0		=			
ANR	4911994	MemberAccess	list -> items [ i ] . str		4911941	0					
ANR	4911995	ArrayIndexing	list -> items [ i ]		4911941	0					
ANR	4911996	PtrMemberAccess	list -> items		4911941	0					
ANR	4911997	Identifier	list		4911941	0					
ANR	4911998	Identifier	items		4911941	1					
ANR	4911999	Identifier	i		4911941	1					
ANR	4912000	Identifier	str		4911941	1					
ANR	4912001	Identifier	empty_str		4911941	1					
ANR	4912002	ExpressionStatement	list -> count = 0	677:4:21163:21178	4911941	2	True				
ANR	4912003	AssignmentExpression	list -> count = 0		4911941	0		=			
ANR	4912004	PtrMemberAccess	list -> count		4911941	0					
ANR	4912005	Identifier	list		4911941	0					
ANR	4912006	Identifier	count		4911941	1					
ANR	4912007	PrimaryExpression	0		4911941	1					
ANR	4912008	ExpressionStatement	"mfree ( list -> items , ""free_list(list->items)"" )"	678:4:21184:21228	4911941	3	True				
ANR	4912009	CallExpression	"mfree ( list -> items , ""free_list(list->items)"" )"		4911941	0					
ANR	4912010	Callee	mfree		4911941	0					
ANR	4912011	Identifier	mfree		4911941	0					
ANR	4912012	ArgumentList	list -> items		4911941	1					
ANR	4912013	Argument	list -> items		4911941	0					
ANR	4912014	PtrMemberAccess	list -> items		4911941	0					
ANR	4912015	Identifier	list		4911941	0					
ANR	4912016	Identifier	items		4911941	1					
ANR	4912017	Argument	"""free_list(list->items)"""		4911941	1					
ANR	4912018	PrimaryExpression	"""free_list(list->items)"""		4911941	0					
ANR	4912019	ExpressionStatement	list -> items = NULL	679:4:21234:21252	4911941	4	True				
ANR	4912020	AssignmentExpression	list -> items = NULL		4911941	0		=			
ANR	4912021	PtrMemberAccess	list -> items		4911941	0					
ANR	4912022	Identifier	list		4911941	0					
ANR	4912023	Identifier	items		4911941	1					
ANR	4912024	Identifier	NULL		4911941	1					
ANR	4912025	ReturnType	void		4911941	1					
ANR	4912026	Identifier	free_list		4911941	2					
ANR	4912027	ParameterList	string_list_t * list		4911941	3					
ANR	4912028	Parameter	string_list_t * list	666:10:20895:20914	4911941	0	True				
ANR	4912029	ParameterType	string_list_t *		4911941	0					
ANR	4912030	Identifier	list		4911941	1					
ANR	4912031	CFGEntryNode	ENTRY		4911941		True				
ANR	4912032	CFGExitNode	EXIT		4911941		True				
ANR	4912033	Symbol	* list -> items		4911941						
ANR	4912034	Symbol	list -> items [ i ] . str		4911941						
ANR	4912035	Symbol	* * list		4911941						
ANR	4912036	Symbol	* i		4911941						
ANR	4912037	Symbol	NULL		4911941						
ANR	4912038	Symbol	* list		4911941						
ANR	4912039	Symbol	list -> items		4911941						
ANR	4912040	Symbol	i		4911941						
ANR	4912041	Symbol	list -> max_count		4911941						
ANR	4912042	Symbol	list		4911941						
ANR	4912043	Symbol	list -> count		4911941						
ANR	4912044	Symbol	empty_str		4911941						
ANR	4912045	Function	dev_file_name	683:0:21315:21455							
ANR	4912046	FunctionDef	dev_file_name (char * str)		4912045	0					
ANR	4912047	CompoundStatement		685:0:21345:21455	4912045	0					
ANR	4912048	IdentifierDeclStatement	int len = strlen ( str ) ;	686:4:21351:21372	4912045	0	True				
ANR	4912049	IdentifierDecl	len = strlen ( str )		4912045	0					
ANR	4912050	IdentifierDeclType	int		4912045	0					
ANR	4912051	Identifier	len		4912045	1					
ANR	4912052	AssignmentExpression	len = strlen ( str )		4912045	2		=			
ANR	4912053	Identifier	len		4912045	0					
ANR	4912054	CallExpression	strlen ( str )		4912045	1					
ANR	4912055	Callee	strlen		4912045	0					
ANR	4912056	Identifier	strlen		4912045	0					
ANR	4912057	ArgumentList	str		4912045	1					
ANR	4912058	Argument	str		4912045	0					
ANR	4912059	Identifier	str		4912045	0					
ANR	4912060	IfStatement	"if ( len <= 4 || strcmp ( "".dev"" , str + len - 4 ) )"		4912045	1					
ANR	4912061	Condition	"len <= 4 || strcmp ( "".dev"" , str + len - 4 )"	688:8:21383:21423	4912045	0	True				
ANR	4912062	OrExpression	"len <= 4 || strcmp ( "".dev"" , str + len - 4 )"		4912045	0		||			
ANR	4912063	RelationalExpression	len <= 4		4912045	0		<=			
ANR	4912064	Identifier	len		4912045	0					
ANR	4912065	PrimaryExpression	4		4912045	1					
ANR	4912066	CallExpression	"strcmp ( "".dev"" , str + len - 4 )"		4912045	1					
ANR	4912067	Callee	strcmp		4912045	0					
ANR	4912068	Identifier	strcmp		4912045	0					
ANR	4912069	ArgumentList	""".dev"""		4912045	1					
ANR	4912070	Argument	""".dev"""		4912045	0					
ANR	4912071	PrimaryExpression	""".dev"""		4912045	0					
ANR	4912072	Argument	str + len - 4		4912045	1					
ANR	4912073	AdditiveExpression	str + len - 4		4912045	0		+			
ANR	4912074	Identifier	str		4912045	0					
ANR	4912075	AdditiveExpression	len - 4		4912045	1		-			
ANR	4912076	Identifier	len		4912045	0					
ANR	4912077	PrimaryExpression	4		4912045	1					
ANR	4912078	ExpressionStatement	"strcat ( str , "".dev"" )"	689:8:21434:21453	4912045	1	True				
ANR	4912079	CallExpression	"strcat ( str , "".dev"" )"		4912045	0					
ANR	4912080	Callee	strcat		4912045	0					
ANR	4912081	Identifier	strcat		4912045	0					
ANR	4912082	ArgumentList	str		4912045	1					
ANR	4912083	Argument	str		4912045	0					
ANR	4912084	Identifier	str		4912045	0					
ANR	4912085	Argument	""".dev"""		4912045	1					
ANR	4912086	PrimaryExpression	""".dev"""		4912045	0					
ANR	4912087	ReturnType	void		4912045	1					
ANR	4912088	Identifier	dev_file_name		4912045	2					
ANR	4912089	ParameterList	char * str		4912045	3					
ANR	4912090	Parameter	char * str	684:14:21334:21342	4912045	0	True				
ANR	4912091	ParameterType	char *		4912045	0					
ANR	4912092	Identifier	str		4912045	1					
ANR	4912093	CFGEntryNode	ENTRY		4912045		True				
ANR	4912094	CFGExitNode	EXIT		4912045		True				
ANR	4912095	Symbol	str		4912045						
ANR	4912096	Symbol	strcmp		4912045						
ANR	4912097	Symbol	strlen		4912045						
ANR	4912098	Symbol	len		4912045						
ANR	4912099	Function	process_replaces	693:0:21521:24075							
ANR	4912100	FunctionDef	process_replaces (config_t * pconf)		4912099	0					
ANR	4912101	CompoundStatement		695:0:21560:24075	4912099	0					
ANR	4912102	IdentifierDeclStatement	char bufname [ MAX_STR + 1 ] ;	696:4:21566:21591	4912099	0	True				
ANR	4912103	IdentifierDecl	bufname [ MAX_STR + 1 ]		4912099	0					
ANR	4912104	IdentifierDeclType	char [ MAX_STR + 1 ]		4912099	0					
ANR	4912105	Identifier	bufname		4912099	1					
ANR	4912106	AdditiveExpression	MAX_STR + 1		4912099	2		+			
ANR	4912107	Identifier	MAX_STR		4912099	0					
ANR	4912108	PrimaryExpression	1		4912099	1					
ANR	4912109	IdentifierDeclStatement	int i ;	697:4:21597:21602	4912099	1	True				
ANR	4912110	IdentifierDecl	i		4912099	0					
ANR	4912111	IdentifierDeclType	int		4912099	0					
ANR	4912112	Identifier	i		4912099	1					
ANR	4912113	ForStatement	for ( i = 0 ; i < pconf -> replaces . count ; ++ i )		4912099	2					
ANR	4912114	ForInit	i = 0 ;	699:9:21614:21619	4912099	0	True				
ANR	4912115	AssignmentExpression	i = 0		4912099	0		=			
ANR	4912116	Identifier	i		4912099	0					
ANR	4912117	PrimaryExpression	0		4912099	1					
ANR	4912118	Condition	i < pconf -> replaces . count	699:16:21621:21645	4912099	1	True				
ANR	4912119	RelationalExpression	i < pconf -> replaces . count		4912099	0		<			
ANR	4912120	Identifier	i		4912099	0					
ANR	4912121	MemberAccess	pconf -> replaces . count		4912099	1					
ANR	4912122	PtrMemberAccess	pconf -> replaces		4912099	0					
ANR	4912123	Identifier	pconf		4912099	0					
ANR	4912124	Identifier	replaces		4912099	1					
ANR	4912125	Identifier	count		4912099	1					
ANR	4912126	UnaryExpression	++ i	699:43:21648:21650	4912099	2	True				
ANR	4912127	IncDec	++		4912099	0					
ANR	4912128	Identifier	i		4912099	1					
ANR	4912129	CompoundStatement		6:8:102:107	4912099	3					
ANR	4912130	IdentifierDeclStatement	int j ;	700:8:21663:21668	4912099	0	True				
ANR	4912131	IdentifierDecl	j		4912099	0					
ANR	4912132	IdentifierDeclType	int		4912099	0					
ANR	4912133	Identifier	j		4912099	1					
ANR	4912134	ExpressionStatement	"strncpy ( bufname , pconf -> replaces . items [ i ] . str , MAX_STR )"	702:8:21679:21734	4912099	1	True				
ANR	4912135	CallExpression	"strncpy ( bufname , pconf -> replaces . items [ i ] . str , MAX_STR )"		4912099	0					
ANR	4912136	Callee	strncpy		4912099	0					
ANR	4912137	Identifier	strncpy		4912099	0					
ANR	4912138	ArgumentList	bufname		4912099	1					
ANR	4912139	Argument	bufname		4912099	0					
ANR	4912140	Identifier	bufname		4912099	0					
ANR	4912141	Argument	pconf -> replaces . items [ i ] . str		4912099	1					
ANR	4912142	MemberAccess	pconf -> replaces . items [ i ] . str		4912099	0					
ANR	4912143	ArrayIndexing	pconf -> replaces . items [ i ]		4912099	0					
ANR	4912144	MemberAccess	pconf -> replaces . items		4912099	0					
ANR	4912145	PtrMemberAccess	pconf -> replaces		4912099	0					
ANR	4912146	Identifier	pconf		4912099	0					
ANR	4912147	Identifier	replaces		4912099	1					
ANR	4912148	Identifier	items		4912099	1					
ANR	4912149	Identifier	i		4912099	1					
ANR	4912150	Identifier	str		4912099	1					
ANR	4912151	Argument	MAX_STR		4912099	2					
ANR	4912152	Identifier	MAX_STR		4912099	0					
ANR	4912153	ExpressionStatement	dev_file_name ( bufname )	704:8:21803:21825	4912099	2	True				
ANR	4912154	CallExpression	dev_file_name ( bufname )		4912099	0					
ANR	4912155	Callee	dev_file_name		4912099	0					
ANR	4912156	Identifier	dev_file_name		4912099	0					
ANR	4912157	ArgumentList	bufname		4912099	1					
ANR	4912158	Argument	bufname		4912099	0					
ANR	4912159	Identifier	bufname		4912099	0					
ANR	4912160	ForStatement	for ( j = 0 ; j < pconf -> file_names . count ; ++ j )		4912099	3					
ANR	4912161	ForInit	j = 0 ;	705:13:21840:21845	4912099	0	True				
ANR	4912162	AssignmentExpression	j = 0		4912099	0		=			
ANR	4912163	Identifier	j		4912099	0					
ANR	4912164	PrimaryExpression	0		4912099	1					
ANR	4912165	Condition	j < pconf -> file_names . count	705:20:21847:21873	4912099	1	True				
ANR	4912166	RelationalExpression	j < pconf -> file_names . count		4912099	0		<			
ANR	4912167	Identifier	j		4912099	0					
ANR	4912168	MemberAccess	pconf -> file_names . count		4912099	1					
ANR	4912169	PtrMemberAccess	pconf -> file_names		4912099	0					
ANR	4912170	Identifier	pconf		4912099	0					
ANR	4912171	Identifier	file_names		4912099	1					
ANR	4912172	Identifier	count		4912099	1					
ANR	4912173	UnaryExpression	++ j	705:49:21876:21878	4912099	2	True				
ANR	4912174	IncDec	++		4912099	0					
ANR	4912175	Identifier	j		4912099	1					
ANR	4912176	CompoundStatement		12:12:334:384	4912099	3					
ANR	4912177	IdentifierDeclStatement	const char * fname = pconf -> file_names . items [ j ] . str ;	706:12:21895:21945	4912099	0	True				
ANR	4912178	IdentifierDecl	* fname = pconf -> file_names . items [ j ] . str		4912099	0					
ANR	4912179	IdentifierDeclType	const char *		4912099	0					
ANR	4912180	Identifier	fname		4912099	1					
ANR	4912181	AssignmentExpression	* fname = pconf -> file_names . items [ j ] . str		4912099	2		=			
ANR	4912182	Identifier	fname		4912099	0					
ANR	4912183	MemberAccess	pconf -> file_names . items [ j ] . str		4912099	1					
ANR	4912184	ArrayIndexing	pconf -> file_names . items [ j ]		4912099	0					
ANR	4912185	MemberAccess	pconf -> file_names . items		4912099	0					
ANR	4912186	PtrMemberAccess	pconf -> file_names		4912099	0					
ANR	4912187	Identifier	pconf		4912099	0					
ANR	4912188	Identifier	file_names		4912099	1					
ANR	4912189	Identifier	items		4912099	1					
ANR	4912190	Identifier	j		4912099	1					
ANR	4912191	Identifier	str		4912099	1					
ANR	4912192	IfStatement	"if ( ! strcmp ( fname , bufname ) )"		4912099	1					
ANR	4912193	Condition	"! strcmp ( fname , bufname )"	708:16:21964:21986	4912099	0	True				
ANR	4912194	UnaryOperationExpression	"! strcmp ( fname , bufname )"		4912099	0					
ANR	4912195	UnaryOperator	!		4912099	0					
ANR	4912196	CallExpression	"strcmp ( fname , bufname )"		4912099	1					
ANR	4912197	Callee	strcmp		4912099	0					
ANR	4912198	Identifier	strcmp		4912099	0					
ANR	4912199	ArgumentList	fname		4912099	1					
ANR	4912200	Argument	fname		4912099	0					
ANR	4912201	Identifier	fname		4912099	0					
ANR	4912202	Argument	bufname		4912099	1					
ANR	4912203	Identifier	bufname		4912099	0					
ANR	4912204	CompoundStatement		14:41:428:428	4912099	1					
ANR	4912205	IfStatement	if ( pconf -> debug )		4912099	0					
ANR	4912206	Condition	pconf -> debug	709:20:22011:22022	4912099	0	True				
ANR	4912207	PtrMemberAccess	pconf -> debug		4912099	0					
ANR	4912208	Identifier	pconf		4912099	0					
ANR	4912209	Identifier	debug		4912099	1					
ANR	4912210	ExpressionStatement	"printf ( ""Replacing file %s.\\n"" , fname )"	710:20:22045:22082	4912099	1	True				
ANR	4912211	CallExpression	"printf ( ""Replacing file %s.\\n"" , fname )"		4912099	0					
ANR	4912212	Callee	printf		4912099	0					
ANR	4912213	Identifier	printf		4912099	0					
ANR	4912214	ArgumentList	"""Replacing file %s.\\n"""		4912099	1					
ANR	4912215	Argument	"""Replacing file %s.\\n"""		4912099	0					
ANR	4912216	PrimaryExpression	"""Replacing file %s.\\n"""		4912099	0					
ANR	4912217	Argument	fname		4912099	1					
ANR	4912218	Identifier	fname		4912099	0					
ANR	4912219	CompoundStatement		19:20:631:637	4912099	1					
ANR	4912220	IdentifierDeclStatement	int rn ;	713:20:22192:22198	4912099	0	True				
ANR	4912221	IdentifierDecl	rn		4912099	0					
ANR	4912222	IdentifierDeclType	int		4912099	0					
ANR	4912223	Identifier	rn		4912099	1					
ANR	4912224	ForStatement	for ( rn = 0 ; rn < NUM_RESOURCE_LISTS ; ++ rn )		4912099	1					
ANR	4912225	ForInit	rn = 0 ;	715:25:22226:22232	4912099	0	True				
ANR	4912226	AssignmentExpression	rn = 0		4912099	0		=			
ANR	4912227	Identifier	rn		4912099	0					
ANR	4912228	PrimaryExpression	0		4912099	1					
ANR	4912229	Condition	rn < NUM_RESOURCE_LISTS	715:33:22234:22256	4912099	1	True				
ANR	4912230	RelationalExpression	rn < NUM_RESOURCE_LISTS		4912099	0		<			
ANR	4912231	Identifier	rn		4912099	0					
ANR	4912232	Identifier	NUM_RESOURCE_LISTS		4912099	1					
ANR	4912233	UnaryExpression	++ rn	715:58:22259:22262	4912099	2	True				
ANR	4912234	IncDec	++		4912099	0					
ANR	4912235	Identifier	rn		4912099	1					
ANR	4912236	CompoundStatement		24:24:877:883	4912099	3					
ANR	4912237	IdentifierDeclStatement	string_item_t * items = pconf -> lists . indexed [ rn ] . items ;	716:24:22291:22344	4912099	0	True				
ANR	4912238	IdentifierDecl	* items = pconf -> lists . indexed [ rn ] . items		4912099	0					
ANR	4912239	IdentifierDeclType	string_item_t *		4912099	0					
ANR	4912240	Identifier	items		4912099	1					
ANR	4912241	AssignmentExpression	* items = pconf -> lists . indexed [ rn ] . items		4912099	2		=			
ANR	4912242	Identifier	items		4912099	0					
ANR	4912243	MemberAccess	pconf -> lists . indexed [ rn ] . items		4912099	1					
ANR	4912244	ArrayIndexing	pconf -> lists . indexed [ rn ]		4912099	0					
ANR	4912245	MemberAccess	pconf -> lists . indexed		4912099	0					
ANR	4912246	PtrMemberAccess	pconf -> lists		4912099	0					
ANR	4912247	Identifier	pconf		4912099	0					
ANR	4912248	Identifier	lists		4912099	1					
ANR	4912249	Identifier	indexed		4912099	1					
ANR	4912250	Identifier	rn		4912099	1					
ANR	4912251	Identifier	items		4912099	1					
ANR	4912252	IdentifierDeclStatement	int count = pconf -> lists . indexed [ rn ] . count ;	717:24:22370:22412	4912099	1	True				
ANR	4912253	IdentifierDecl	count = pconf -> lists . indexed [ rn ] . count		4912099	0					
ANR	4912254	IdentifierDeclType	int		4912099	0					
ANR	4912255	Identifier	count		4912099	1					
ANR	4912256	AssignmentExpression	count = pconf -> lists . indexed [ rn ] . count		4912099	2		=			
ANR	4912257	Identifier	count		4912099	0					
ANR	4912258	MemberAccess	pconf -> lists . indexed [ rn ] . count		4912099	1					
ANR	4912259	ArrayIndexing	pconf -> lists . indexed [ rn ]		4912099	0					
ANR	4912260	MemberAccess	pconf -> lists . indexed		4912099	0					
ANR	4912261	PtrMemberAccess	pconf -> lists		4912099	0					
ANR	4912262	Identifier	pconf		4912099	0					
ANR	4912263	Identifier	lists		4912099	1					
ANR	4912264	Identifier	indexed		4912099	1					
ANR	4912265	Identifier	rn		4912099	1					
ANR	4912266	Identifier	count		4912099	1					
ANR	4912267	IdentifierDeclStatement	int tn ;	718:24:22438:22444	4912099	2	True				
ANR	4912268	IdentifierDecl	tn		4912099	0					
ANR	4912269	IdentifierDeclType	int		4912099	0					
ANR	4912270	Identifier	tn		4912099	1					
ANR	4912271	ForStatement	for ( tn = 0 ; tn < count ; ++ tn )		4912099	3					
ANR	4912272	ForInit	tn = 0 ;	720:29:22476:22482	4912099	0	True				
ANR	4912273	AssignmentExpression	tn = 0		4912099	0		=			
ANR	4912274	Identifier	tn		4912099	0					
ANR	4912275	PrimaryExpression	0		4912099	1					
ANR	4912276	Condition	tn < count	720:37:22484:22493	4912099	1	True				
ANR	4912277	RelationalExpression	tn < count		4912099	0		<			
ANR	4912278	Identifier	tn		4912099	0					
ANR	4912279	Identifier	count		4912099	1					
ANR	4912280	UnaryExpression	++ tn	720:49:22496:22499	4912099	2	True				
ANR	4912281	IncDec	++		4912099	0					
ANR	4912282	Identifier	tn		4912099	1					
ANR	4912283	CompoundStatement		26:55:941:941	4912099	3					
ANR	4912284	IfStatement	if ( items [ tn ] . file_index == j )		4912099	0					
ANR	4912285	Condition	items [ tn ] . file_index == j	721:32:22536:22560	4912099	0	True				
ANR	4912286	EqualityExpression	items [ tn ] . file_index == j		4912099	0		==			
ANR	4912287	MemberAccess	items [ tn ] . file_index		4912099	0					
ANR	4912288	ArrayIndexing	items [ tn ]		4912099	0					
ANR	4912289	Identifier	items		4912099	0					
ANR	4912290	Identifier	tn		4912099	1					
ANR	4912291	Identifier	file_index		4912099	1					
ANR	4912292	Identifier	j		4912099	1					
ANR	4912293	CompoundStatement		27:59:1002:1002	4912099	1					
ANR	4912294	IfStatement	if ( pconf -> debug )		4912099	0					
ANR	4912295	Condition	pconf -> debug	728:36:22952:22963	4912099	0	True				
ANR	4912296	PtrMemberAccess	pconf -> debug		4912099	0					
ANR	4912297	Identifier	pconf		4912099	0					
ANR	4912298	Identifier	debug		4912099	1					
ANR	4912299	ExpressionStatement	"printf ( ""Replacing %s %s.\\n"" , pconf -> lists . indexed [ rn ] . list_name , items [ tn ] . str )"	729:36:23002:23165	4912099	1	True				
ANR	4912300	CallExpression	"printf ( ""Replacing %s %s.\\n"" , pconf -> lists . indexed [ rn ] . list_name , items [ tn ] . str )"		4912099	0					
ANR	4912301	Callee	printf		4912099	0					
ANR	4912302	Identifier	printf		4912099	0					
ANR	4912303	ArgumentList	"""Replacing %s %s.\\n"""		4912099	1					
ANR	4912304	Argument	"""Replacing %s %s.\\n"""		4912099	0					
ANR	4912305	PrimaryExpression	"""Replacing %s %s.\\n"""		4912099	0					
ANR	4912306	Argument	pconf -> lists . indexed [ rn ] . list_name		4912099	1					
ANR	4912307	MemberAccess	pconf -> lists . indexed [ rn ] . list_name		4912099	0					
ANR	4912308	ArrayIndexing	pconf -> lists . indexed [ rn ]		4912099	0					
ANR	4912309	MemberAccess	pconf -> lists . indexed		4912099	0					
ANR	4912310	PtrMemberAccess	pconf -> lists		4912099	0					
ANR	4912311	Identifier	pconf		4912099	0					
ANR	4912312	Identifier	lists		4912099	1					
ANR	4912313	Identifier	indexed		4912099	1					
ANR	4912314	Identifier	rn		4912099	1					
ANR	4912315	Identifier	list_name		4912099	1					
ANR	4912316	Argument	items [ tn ] . str		4912099	2					
ANR	4912317	MemberAccess	items [ tn ] . str		4912099	0					
ANR	4912318	ArrayIndexing	items [ tn ]		4912099	0					
ANR	4912319	Identifier	items		4912099	0					
ANR	4912320	Identifier	tn		4912099	1					
ANR	4912321	Identifier	str		4912099	1					
ANR	4912322	IfStatement	if ( items [ tn ] . str && items [ tn ] . str != empty_str )		4912099	1					
ANR	4912323	Condition	items [ tn ] . str && items [ tn ] . str != empty_str	732:36:23203:23245	4912099	0	True				
ANR	4912324	AndExpression	items [ tn ] . str && items [ tn ] . str != empty_str		4912099	0		&&			
ANR	4912325	MemberAccess	items [ tn ] . str		4912099	0					
ANR	4912326	ArrayIndexing	items [ tn ]		4912099	0					
ANR	4912327	Identifier	items		4912099	0					
ANR	4912328	Identifier	tn		4912099	1					
ANR	4912329	Identifier	str		4912099	1					
ANR	4912330	EqualityExpression	items [ tn ] . str != empty_str		4912099	1		!=			
ANR	4912331	MemberAccess	items [ tn ] . str		4912099	0					
ANR	4912332	ArrayIndexing	items [ tn ]		4912099	0					
ANR	4912333	Identifier	items		4912099	0					
ANR	4912334	Identifier	tn		4912099	1					
ANR	4912335	Identifier	str		4912099	1					
ANR	4912336	Identifier	empty_str		4912099	1					
ANR	4912337	CompoundStatement		38:81:1687:1687	4912099	1					
ANR	4912338	ExpressionStatement	"mfree ( ( void * ) items [ tn ] . str , ""process_replaces(items[tn].str)"" )"	733:36:23286:23349	4912099	0	True				
ANR	4912339	CallExpression	"mfree ( ( void * ) items [ tn ] . str , ""process_replaces(items[tn].str)"" )"		4912099	0					
ANR	4912340	Callee	mfree		4912099	0					
ANR	4912341	Identifier	mfree		4912099	0					
ANR	4912342	ArgumentList	( void * ) items [ tn ] . str		4912099	1					
ANR	4912343	Argument	( void * ) items [ tn ] . str		4912099	0					
ANR	4912344	CastExpression	( void * ) items [ tn ] . str		4912099	0					
ANR	4912345	CastTarget	void *		4912099	0					
ANR	4912346	MemberAccess	items [ tn ] . str		4912099	1					
ANR	4912347	ArrayIndexing	items [ tn ]		4912099	0					
ANR	4912348	Identifier	items		4912099	0					
ANR	4912349	Identifier	tn		4912099	1					
ANR	4912350	Identifier	str		4912099	1					
ANR	4912351	Argument	"""process_replaces(items[tn].str)"""		4912099	1					
ANR	4912352	PrimaryExpression	"""process_replaces(items[tn].str)"""		4912099	0					
ANR	4912353	ExpressionStatement	items [ tn -- ] = items [ -- count ]	735:32:23417:23445	4912099	2	True				
ANR	4912354	AssignmentExpression	items [ tn -- ] = items [ -- count ]		4912099	0		=			
ANR	4912355	ArrayIndexing	items [ tn -- ]		4912099	0					
ANR	4912356	Identifier	items		4912099	0					
ANR	4912357	PostIncDecOperationExpression	tn --		4912099	1					
ANR	4912358	Identifier	tn		4912099	0					
ANR	4912359	IncDec	--		4912099	1					
ANR	4912360	ArrayIndexing	items [ -- count ]		4912099	1					
ANR	4912361	Identifier	items		4912099	0					
ANR	4912362	UnaryExpression	-- count		4912099	1					
ANR	4912363	IncDec	--		4912099	0					
ANR	4912364	Identifier	count		4912099	1					
ANR	4912365	ExpressionStatement	items [ count ] . str = empty_str	736:32:23479:23507	4912099	3	True				
ANR	4912366	AssignmentExpression	items [ count ] . str = empty_str		4912099	0		=			
ANR	4912367	MemberAccess	items [ count ] . str		4912099	0					
ANR	4912368	ArrayIndexing	items [ count ]		4912099	0					
ANR	4912369	Identifier	items		4912099	0					
ANR	4912370	Identifier	count		4912099	1					
ANR	4912371	Identifier	str		4912099	1					
ANR	4912372	Identifier	empty_str		4912099	1					
ANR	4912373	ExpressionStatement	pconf -> lists . indexed [ rn ] . count = count	739:24:23589:23627	4912099	4	True				
ANR	4912374	AssignmentExpression	pconf -> lists . indexed [ rn ] . count = count		4912099	0		=			
ANR	4912375	MemberAccess	pconf -> lists . indexed [ rn ] . count		4912099	0					
ANR	4912376	ArrayIndexing	pconf -> lists . indexed [ rn ]		4912099	0					
ANR	4912377	MemberAccess	pconf -> lists . indexed		4912099	0					
ANR	4912378	PtrMemberAccess	pconf -> lists		4912099	0					
ANR	4912379	Identifier	pconf		4912099	0					
ANR	4912380	Identifier	lists		4912099	1					
ANR	4912381	Identifier	indexed		4912099	1					
ANR	4912382	Identifier	rn		4912099	1					
ANR	4912383	Identifier	count		4912099	1					
ANR	4912384	Identifier	count		4912099	1					
ANR	4912385	IfStatement	if ( pconf -> file_names . items [ j ] . str != empty_str )		4912099	2					
ANR	4912386	Condition	pconf -> file_names . items [ j ] . str != empty_str	742:20:23689:23731	4912099	0	True				
ANR	4912387	EqualityExpression	pconf -> file_names . items [ j ] . str != empty_str		4912099	0		!=			
ANR	4912388	MemberAccess	pconf -> file_names . items [ j ] . str		4912099	0					
ANR	4912389	ArrayIndexing	pconf -> file_names . items [ j ]		4912099	0					
ANR	4912390	MemberAccess	pconf -> file_names . items		4912099	0					
ANR	4912391	PtrMemberAccess	pconf -> file_names		4912099	0					
ANR	4912392	Identifier	pconf		4912099	0					
ANR	4912393	Identifier	file_names		4912099	1					
ANR	4912394	Identifier	items		4912099	1					
ANR	4912395	Identifier	j		4912099	1					
ANR	4912396	Identifier	str		4912099	1					
ANR	4912397	Identifier	empty_str		4912099	1					
ANR	4912398	CompoundStatement		48:65:2173:2173	4912099	1					
ANR	4912399	ExpressionStatement	"mfree ( ( void * ) pconf -> file_names . items [ j ] . str , ""process_replaces(pconf->file_names.items[j].str)"" )"	743:20:23756:23853	4912099	0	True				
ANR	4912400	CallExpression	"mfree ( ( void * ) pconf -> file_names . items [ j ] . str , ""process_replaces(pconf->file_names.items[j].str)"" )"		4912099	0					
ANR	4912401	Callee	mfree		4912099	0					
ANR	4912402	Identifier	mfree		4912099	0					
ANR	4912403	ArgumentList	( void * ) pconf -> file_names . items [ j ] . str		4912099	1					
ANR	4912404	Argument	( void * ) pconf -> file_names . items [ j ] . str		4912099	0					
ANR	4912405	CastExpression	( void * ) pconf -> file_names . items [ j ] . str		4912099	0					
ANR	4912406	CastTarget	void *		4912099	0					
ANR	4912407	MemberAccess	pconf -> file_names . items [ j ] . str		4912099	1					
ANR	4912408	ArrayIndexing	pconf -> file_names . items [ j ]		4912099	0					
ANR	4912409	MemberAccess	pconf -> file_names . items		4912099	0					
ANR	4912410	PtrMemberAccess	pconf -> file_names		4912099	0					
ANR	4912411	Identifier	pconf		4912099	0					
ANR	4912412	Identifier	file_names		4912099	1					
ANR	4912413	Identifier	items		4912099	1					
ANR	4912414	Identifier	j		4912099	1					
ANR	4912415	Identifier	str		4912099	1					
ANR	4912416	Argument	"""process_replaces(pconf->file_names.items[j].str)"""		4912099	1					
ANR	4912417	PrimaryExpression	"""process_replaces(pconf->file_names.items[j].str)"""		4912099	0					
ANR	4912418	ExpressionStatement	pconf -> file_names . items [ j ] . str = empty_str	745:16:23889:23931	4912099	3	True				
ANR	4912419	AssignmentExpression	pconf -> file_names . items [ j ] . str = empty_str		4912099	0		=			
ANR	4912420	MemberAccess	pconf -> file_names . items [ j ] . str		4912099	0					
ANR	4912421	ArrayIndexing	pconf -> file_names . items [ j ]		4912099	0					
ANR	4912422	MemberAccess	pconf -> file_names . items		4912099	0					
ANR	4912423	PtrMemberAccess	pconf -> file_names		4912099	0					
ANR	4912424	Identifier	pconf		4912099	0					
ANR	4912425	Identifier	file_names		4912099	1					
ANR	4912426	Identifier	items		4912099	1					
ANR	4912427	Identifier	j		4912099	1					
ANR	4912428	Identifier	str		4912099	1					
ANR	4912429	Identifier	empty_str		4912099	1					
ANR	4912430	BreakStatement	break ;	746:16:23949:23954	4912099	4	True				
ANR	4912431	ExpressionStatement	pconf -> replaces . count = 0	751:4:24034:24059	4912099	3	True				
ANR	4912432	AssignmentExpression	pconf -> replaces . count = 0		4912099	0		=			
ANR	4912433	MemberAccess	pconf -> replaces . count		4912099	0					
ANR	4912434	PtrMemberAccess	pconf -> replaces		4912099	0					
ANR	4912435	Identifier	pconf		4912099	0					
ANR	4912436	Identifier	replaces		4912099	1					
ANR	4912437	Identifier	count		4912099	1					
ANR	4912438	PrimaryExpression	0		4912099	1					
ANR	4912439	ReturnStatement	return 0 ;	752:4:24065:24073	4912099	4	True				
ANR	4912440	PrimaryExpression	0		4912099	0					
ANR	4912441	ReturnType	int		4912099	1					
ANR	4912442	Identifier	process_replaces		4912099	2					
ANR	4912443	ParameterList	config_t * pconf		4912099	3					
ANR	4912444	Parameter	config_t * pconf	694:17:21542:21557	4912099	0	True				
ANR	4912445	ParameterType	config_t *		4912099	0					
ANR	4912446	Identifier	pconf		4912099	1					
ANR	4912447	CFGEntryNode	ENTRY		4912099		True				
ANR	4912448	CFGExitNode	EXIT		4912099		True				
ANR	4912449	Symbol	pconf -> debug		4912099						
ANR	4912450	Symbol	pconf -> lists . indexed [ rn ] . list_name		4912099						
ANR	4912451	Symbol	pconf -> replaces . count		4912099						
ANR	4912452	Symbol	pconf -> file_names . items [ j ] . str		4912099						
ANR	4912453	Symbol	pconf		4912099						
ANR	4912454	Symbol	* count		4912099						
ANR	4912455	Symbol	* items		4912099						
ANR	4912456	Symbol	pconf -> lists		4912099						
ANR	4912457	Symbol	NUM_RESOURCE_LISTS		4912099						
ANR	4912458	Symbol	pconf -> file_names		4912099						
ANR	4912459	Symbol	empty_str		4912099						
ANR	4912460	Symbol	strcmp		4912099						
ANR	4912461	Symbol	pconf -> lists . indexed		4912099						
ANR	4912462	Symbol	fname		4912099						
ANR	4912463	Symbol	* rn		4912099						
ANR	4912464	Symbol	* tn		4912099						
ANR	4912465	Symbol	bufname		4912099						
ANR	4912466	Symbol	* pconf -> lists . indexed		4912099						
ANR	4912467	Symbol	* pconf		4912099						
ANR	4912468	Symbol	count		4912099						
ANR	4912469	Symbol	items [ tn ] . file_index		4912099						
ANR	4912470	Symbol	i		4912099						
ANR	4912471	Symbol	* pconf -> lists		4912099						
ANR	4912472	Symbol	items [ count ] . str		4912099						
ANR	4912473	Symbol	j		4912099						
ANR	4912474	Symbol	items [ tn ] . str		4912099						
ANR	4912475	Symbol	* pconf -> replaces		4912099						
ANR	4912476	Symbol	pconf -> file_names . count		4912099						
ANR	4912477	Symbol	* * pconf		4912099						
ANR	4912478	Symbol	* i		4912099						
ANR	4912479	Symbol	* j		4912099						
ANR	4912480	Symbol	pconf -> replaces		4912099						
ANR	4912481	Symbol	pconf -> file_names . items		4912099						
ANR	4912482	Symbol	pconf -> lists . indexed [ rn ] . items		4912099						
ANR	4912483	Symbol	MAX_STR		4912099						
ANR	4912484	Symbol	* pconf -> file_names		4912099						
ANR	4912485	Symbol	tn		4912099						
ANR	4912486	Symbol	pconf -> replaces . items [ i ] . str		4912099						
ANR	4912487	Symbol	rn		4912099						
ANR	4912488	Symbol	* pconf -> file_names . items		4912099						
ANR	4912489	Symbol	items		4912099						
ANR	4912490	Symbol	pconf -> replaces . items		4912099						
ANR	4912491	Symbol	* pconf -> replaces . items		4912099						
ANR	4912492	Symbol	pconf -> lists . indexed [ rn ] . count		4912099						
ANR	4912493	Function	read_file	761:0:24316:26451							
ANR	4912494	FunctionDef	"read_file (config_t * pconf , const char * fname)"		4912493	0					
ANR	4912495	CompoundStatement		763:0:24386:26451	4912493	0					
ANR	4912496	IdentifierDeclStatement	"char * cname = mmalloc ( strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1 , ""read_file(cname)"" ) ;"	764:4:24392:24481	4912493	0	True				
ANR	4912497	IdentifierDecl	"* cname = mmalloc ( strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1 , ""read_file(cname)"" )"		4912493	0					
ANR	4912498	IdentifierDeclType	char *		4912493	0					
ANR	4912499	Identifier	cname		4912493	1					
ANR	4912500	AssignmentExpression	"* cname = mmalloc ( strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1 , ""read_file(cname)"" )"		4912493	2		=			
ANR	4912501	Identifier	cname		4912493	0					
ANR	4912502	CallExpression	"mmalloc ( strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1 , ""read_file(cname)"" )"		4912493	1					
ANR	4912503	Callee	mmalloc		4912493	0					
ANR	4912504	Identifier	mmalloc		4912493	0					
ANR	4912505	ArgumentList	strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1		4912493	1					
ANR	4912506	Argument	strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1		4912493	0					
ANR	4912507	AdditiveExpression	strlen ( fname ) + strlen ( pconf -> file_prefix ) + 1		4912493	0		+			
ANR	4912508	CallExpression	strlen ( fname )		4912493	0					
ANR	4912509	Callee	strlen		4912493	0					
ANR	4912510	Identifier	strlen		4912493	0					
ANR	4912511	ArgumentList	fname		4912493	1					
ANR	4912512	Argument	fname		4912493	0					
ANR	4912513	Identifier	fname		4912493	0					
ANR	4912514	AdditiveExpression	strlen ( pconf -> file_prefix ) + 1		4912493	1		+			
ANR	4912515	CallExpression	strlen ( pconf -> file_prefix )		4912493	0					
ANR	4912516	Callee	strlen		4912493	0					
ANR	4912517	Identifier	strlen		4912493	0					
ANR	4912518	ArgumentList	pconf -> file_prefix		4912493	1					
ANR	4912519	Argument	pconf -> file_prefix		4912493	0					
ANR	4912520	PtrMemberAccess	pconf -> file_prefix		4912493	0					
ANR	4912521	Identifier	pconf		4912493	0					
ANR	4912522	Identifier	file_prefix		4912493	1					
ANR	4912523	PrimaryExpression	1		4912493	1					
ANR	4912524	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912525	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912526	IdentifierDeclStatement	int i ;	765:4:24487:24492	4912493	1	True				
ANR	4912527	IdentifierDecl	i		4912493	0					
ANR	4912528	IdentifierDeclType	int		4912493	0					
ANR	4912529	Identifier	i		4912493	1					
ANR	4912530	IdentifierDeclStatement	FILE * in ;	766:4:24498:24506	4912493	2	True				
ANR	4912531	IdentifierDecl	* in		4912493	0					
ANR	4912532	IdentifierDeclType	FILE *		4912493	0					
ANR	4912533	Identifier	in		4912493	1					
ANR	4912534	IdentifierDeclStatement	"int end , nread ;"	767:4:24512:24526	4912493	3	True				
ANR	4912535	IdentifierDecl	end		4912493	0					
ANR	4912536	IdentifierDeclType	int		4912493	0					
ANR	4912537	Identifier	end		4912493	1					
ANR	4912538	IdentifierDecl	nread		4912493	1					
ANR	4912539	IdentifierDeclType	int		4912493	0					
ANR	4912540	Identifier	nread		4912493	1					
ANR	4912541	IdentifierDeclStatement	char * cont ;	768:4:24532:24542	4912493	4	True				
ANR	4912542	IdentifierDecl	* cont		4912493	0					
ANR	4912543	IdentifierDeclType	char *		4912493	0					
ANR	4912544	Identifier	cont		4912493	1					
ANR	4912545	IdentifierDeclStatement	string_item_t * item ;	769:4:24548:24567	4912493	5	True				
ANR	4912546	IdentifierDecl	* item		4912493	0					
ANR	4912547	IdentifierDeclType	string_item_t *		4912493	0					
ANR	4912548	Identifier	item		4912493	1					
ANR	4912549	IfStatement	if ( cname == 0 )		4912493	6					
ANR	4912550	Condition	cname == 0	771:8:24578:24587	4912493	0	True				
ANR	4912551	EqualityExpression	cname == 0		4912493	0		==			
ANR	4912552	Identifier	cname		4912493	0					
ANR	4912553	PrimaryExpression	0		4912493	1					
ANR	4912554	CompoundStatement		9:20:203:203	4912493	1					
ANR	4912555	ExpressionStatement	"fprintf ( stderr , ""Can't allocate space for file name %s%s.\\n"" , pconf -> file_prefix , fname )"	772:8:24600:24704	4912493	0	True				
ANR	4912556	CallExpression	"fprintf ( stderr , ""Can't allocate space for file name %s%s.\\n"" , pconf -> file_prefix , fname )"		4912493	0					
ANR	4912557	Callee	fprintf		4912493	0					
ANR	4912558	Identifier	fprintf		4912493	0					
ANR	4912559	ArgumentList	stderr		4912493	1					
ANR	4912560	Argument	stderr		4912493	0					
ANR	4912561	Identifier	stderr		4912493	0					
ANR	4912562	Argument	"""Can't allocate space for file name %s%s.\\n"""		4912493	1					
ANR	4912563	PrimaryExpression	"""Can't allocate space for file name %s%s.\\n"""		4912493	0					
ANR	4912564	Argument	pconf -> file_prefix		4912493	2					
ANR	4912565	PtrMemberAccess	pconf -> file_prefix		4912493	0					
ANR	4912566	Identifier	pconf		4912493	0					
ANR	4912567	Identifier	file_prefix		4912493	1					
ANR	4912568	Argument	fname		4912493	3					
ANR	4912569	Identifier	fname		4912493	0					
ANR	4912570	ExpressionStatement	exit ( 1 )	774:8:24714:24721	4912493	1	True				
ANR	4912571	CallExpression	exit ( 1 )		4912493	0					
ANR	4912572	Callee	exit		4912493	0					
ANR	4912573	Identifier	exit		4912493	0					
ANR	4912574	ArgumentList	1		4912493	1					
ANR	4912575	Argument	1		4912493	0					
ANR	4912576	PrimaryExpression	1		4912493	0					
ANR	4912577	ExpressionStatement	"strcpy ( cname , pconf -> file_prefix )"	776:4:24733:24766	4912493	7	True				
ANR	4912578	CallExpression	"strcpy ( cname , pconf -> file_prefix )"		4912493	0					
ANR	4912579	Callee	strcpy		4912493	0					
ANR	4912580	Identifier	strcpy		4912493	0					
ANR	4912581	ArgumentList	cname		4912493	1					
ANR	4912582	Argument	cname		4912493	0					
ANR	4912583	Identifier	cname		4912493	0					
ANR	4912584	Argument	pconf -> file_prefix		4912493	1					
ANR	4912585	PtrMemberAccess	pconf -> file_prefix		4912493	0					
ANR	4912586	Identifier	pconf		4912493	0					
ANR	4912587	Identifier	file_prefix		4912493	1					
ANR	4912588	ExpressionStatement	"strcat ( cname , fname )"	777:4:24772:24792	4912493	8	True				
ANR	4912589	CallExpression	"strcat ( cname , fname )"		4912493	0					
ANR	4912590	Callee	strcat		4912493	0					
ANR	4912591	Identifier	strcat		4912493	0					
ANR	4912592	ArgumentList	cname		4912493	1					
ANR	4912593	Argument	cname		4912493	0					
ANR	4912594	Identifier	cname		4912493	0					
ANR	4912595	Argument	fname		4912493	1					
ANR	4912596	Identifier	fname		4912493	0					
ANR	4912597	ForStatement	for ( i = 0 ; i < pconf -> file_names . count ; ++ i )		4912493	9					
ANR	4912598	ForInit	i = 0 ;	778:9:24803:24808	4912493	0	True				
ANR	4912599	AssignmentExpression	i = 0		4912493	0		=			
ANR	4912600	Identifier	i		4912493	0					
ANR	4912601	PrimaryExpression	0		4912493	1					
ANR	4912602	Condition	i < pconf -> file_names . count	778:16:24810:24836	4912493	1	True				
ANR	4912603	RelationalExpression	i < pconf -> file_names . count		4912493	0		<			
ANR	4912604	Identifier	i		4912493	0					
ANR	4912605	MemberAccess	pconf -> file_names . count		4912493	1					
ANR	4912606	PtrMemberAccess	pconf -> file_names		4912493	0					
ANR	4912607	Identifier	pconf		4912493	0					
ANR	4912608	Identifier	file_names		4912493	1					
ANR	4912609	Identifier	count		4912493	1					
ANR	4912610	UnaryExpression	++ i	778:45:24839:24841	4912493	2	True				
ANR	4912611	IncDec	++		4912493	0					
ANR	4912612	Identifier	i		4912493	1					
ANR	4912613	IfStatement	"if ( ! strcmp ( pconf -> file_names . items [ i ] . str , cname ) )"		4912493	3					
ANR	4912614	Condition	"! strcmp ( pconf -> file_names . items [ i ] . str , cname )"	779:12:24856:24901	4912493	0	True				
ANR	4912615	UnaryOperationExpression	"! strcmp ( pconf -> file_names . items [ i ] . str , cname )"		4912493	0					
ANR	4912616	UnaryOperator	!		4912493	0					
ANR	4912617	CallExpression	"strcmp ( pconf -> file_names . items [ i ] . str , cname )"		4912493	1					
ANR	4912618	Callee	strcmp		4912493	0					
ANR	4912619	Identifier	strcmp		4912493	0					
ANR	4912620	ArgumentList	pconf -> file_names . items [ i ] . str		4912493	1					
ANR	4912621	Argument	pconf -> file_names . items [ i ] . str		4912493	0					
ANR	4912622	MemberAccess	pconf -> file_names . items [ i ] . str		4912493	0					
ANR	4912623	ArrayIndexing	pconf -> file_names . items [ i ]		4912493	0					
ANR	4912624	MemberAccess	pconf -> file_names . items		4912493	0					
ANR	4912625	PtrMemberAccess	pconf -> file_names		4912493	0					
ANR	4912626	Identifier	pconf		4912493	0					
ANR	4912627	Identifier	file_names		4912493	1					
ANR	4912628	Identifier	items		4912493	1					
ANR	4912629	Identifier	i		4912493	1					
ANR	4912630	Identifier	str		4912493	1					
ANR	4912631	Argument	cname		4912493	1					
ANR	4912632	Identifier	cname		4912493	0					
ANR	4912633	CompoundStatement		17:60:517:517	4912493	1					
ANR	4912634	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	780:12:24918:24950	4912493	0	True				
ANR	4912635	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912636	Callee	mfree		4912493	0					
ANR	4912637	Identifier	mfree		4912493	0					
ANR	4912638	ArgumentList	cname		4912493	1					
ANR	4912639	Argument	cname		4912493	0					
ANR	4912640	Identifier	cname		4912493	0					
ANR	4912641	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912642	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912643	ReturnStatement	return & pconf -> file_contents . items [ i ] ;	781:12:24964:25001	4912493	1	True				
ANR	4912644	UnaryOperationExpression	& pconf -> file_contents . items [ i ]		4912493	0					
ANR	4912645	UnaryOperator	&		4912493	0					
ANR	4912646	ArrayIndexing	pconf -> file_contents . items [ i ]		4912493	1					
ANR	4912647	MemberAccess	pconf -> file_contents . items		4912493	0					
ANR	4912648	PtrMemberAccess	pconf -> file_contents		4912493	0					
ANR	4912649	Identifier	pconf		4912493	0					
ANR	4912650	Identifier	file_contents		4912493	1					
ANR	4912651	Identifier	items		4912493	1					
ANR	4912652	Identifier	i		4912493	1					
ANR	4912653	ExpressionStatement	"in = fopen ( cname , ""rb"" )"	785:4:25144:25167	4912493	10	True				
ANR	4912654	AssignmentExpression	"in = fopen ( cname , ""rb"" )"		4912493	0		=			
ANR	4912655	Identifier	in		4912493	0					
ANR	4912656	CallExpression	"fopen ( cname , ""rb"" )"		4912493	1					
ANR	4912657	Callee	fopen		4912493	0					
ANR	4912658	Identifier	fopen		4912493	0					
ANR	4912659	ArgumentList	cname		4912493	1					
ANR	4912660	Argument	cname		4912493	0					
ANR	4912661	Identifier	cname		4912493	0					
ANR	4912662	Argument	"""rb"""		4912493	1					
ANR	4912663	PrimaryExpression	"""rb"""		4912493	0					
ANR	4912664	IfStatement	if ( in == 0 )		4912493	11					
ANR	4912665	Condition	in == 0	786:8:25177:25183	4912493	0	True				
ANR	4912666	EqualityExpression	in == 0		4912493	0		==			
ANR	4912667	Identifier	in		4912493	0					
ANR	4912668	PrimaryExpression	0		4912493	1					
ANR	4912669	CompoundStatement		24:17:799:799	4912493	1					
ANR	4912670	ExpressionStatement	"in = fopen ( cname , ""r"" )"	787:8:25196:25218	4912493	0	True				
ANR	4912671	AssignmentExpression	"in = fopen ( cname , ""r"" )"		4912493	0		=			
ANR	4912672	Identifier	in		4912493	0					
ANR	4912673	CallExpression	"fopen ( cname , ""r"" )"		4912493	1					
ANR	4912674	Callee	fopen		4912493	0					
ANR	4912675	Identifier	fopen		4912493	0					
ANR	4912676	ArgumentList	cname		4912493	1					
ANR	4912677	Argument	cname		4912493	0					
ANR	4912678	Identifier	cname		4912493	0					
ANR	4912679	Argument	"""r"""		4912493	1					
ANR	4912680	PrimaryExpression	"""r"""		4912493	0					
ANR	4912681	IfStatement	if ( in == 0 )		4912493	1					
ANR	4912682	Condition	in == 0	788:12:25232:25238	4912493	0	True				
ANR	4912683	EqualityExpression	in == 0		4912493	0		==			
ANR	4912684	Identifier	in		4912493	0					
ANR	4912685	PrimaryExpression	0		4912493	1					
ANR	4912686	CompoundStatement		26:21:854:854	4912493	1					
ANR	4912687	ExpressionStatement	"fprintf ( stderr , ""Can't read %s.\\n"" , cname )"	789:12:25255:25297	4912493	0	True				
ANR	4912688	CallExpression	"fprintf ( stderr , ""Can't read %s.\\n"" , cname )"		4912493	0					
ANR	4912689	Callee	fprintf		4912493	0					
ANR	4912690	Identifier	fprintf		4912493	0					
ANR	4912691	ArgumentList	stderr		4912493	1					
ANR	4912692	Argument	stderr		4912493	0					
ANR	4912693	Identifier	stderr		4912493	0					
ANR	4912694	Argument	"""Can't read %s.\\n"""		4912493	1					
ANR	4912695	PrimaryExpression	"""Can't read %s.\\n"""		4912493	0					
ANR	4912696	Argument	cname		4912493	2					
ANR	4912697	Identifier	cname		4912493	0					
ANR	4912698	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	790:12:25311:25343	4912493	1	True				
ANR	4912699	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912700	Callee	mfree		4912493	0					
ANR	4912701	Identifier	mfree		4912493	0					
ANR	4912702	ArgumentList	cname		4912493	1					
ANR	4912703	Argument	cname		4912493	0					
ANR	4912704	Identifier	cname		4912493	0					
ANR	4912705	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912706	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912707	ExpressionStatement	exit ( 1 )	791:12:25357:25364	4912493	2	True				
ANR	4912708	CallExpression	exit ( 1 )		4912493	0					
ANR	4912709	Callee	exit		4912493	0					
ANR	4912710	Identifier	exit		4912493	0					
ANR	4912711	ArgumentList	1		4912493	1					
ANR	4912712	Argument	1		4912493	0					
ANR	4912713	PrimaryExpression	1		4912493	0					
ANR	4912714	ExpressionStatement	"fseek ( in , 0L , 2 )"	794:4:25386:25417	4912493	12	True				
ANR	4912715	CallExpression	"fseek ( in , 0L , 2 )"		4912493	0					
ANR	4912716	Callee	fseek		4912493	0					
ANR	4912717	Identifier	fseek		4912493	0					
ANR	4912718	ArgumentList	in		4912493	1					
ANR	4912719	Argument	in		4912493	0					
ANR	4912720	Identifier	in		4912493	0					
ANR	4912721	Argument	0L		4912493	1					
ANR	4912722	PrimaryExpression	0L		4912493	0					
ANR	4912723	Argument	2		4912493	2					
ANR	4912724	PrimaryExpression	2		4912493	0					
ANR	4912725	ExpressionStatement	end = ftell ( in )	795:4:25423:25438	4912493	13	True				
ANR	4912726	AssignmentExpression	end = ftell ( in )		4912493	0		=			
ANR	4912727	Identifier	end		4912493	0					
ANR	4912728	CallExpression	ftell ( in )		4912493	1					
ANR	4912729	Callee	ftell		4912493	0					
ANR	4912730	Identifier	ftell		4912493	0					
ANR	4912731	ArgumentList	in		4912493	1					
ANR	4912732	Argument	in		4912493	0					
ANR	4912733	Identifier	in		4912493	0					
ANR	4912734	IfStatement	if ( end < 0 )		4912493	14					
ANR	4912735	Condition	end < 0	796:8:25448:25454	4912493	0	True				
ANR	4912736	RelationalExpression	end < 0		4912493	0		<			
ANR	4912737	Identifier	end		4912493	0					
ANR	4912738	PrimaryExpression	0		4912493	1					
ANR	4912739	CompoundStatement		34:17:1070:1070	4912493	1					
ANR	4912740	ExpressionStatement	fclose ( in )	797:8:25467:25477	4912493	0	True				
ANR	4912741	CallExpression	fclose ( in )		4912493	0					
ANR	4912742	Callee	fclose		4912493	0					
ANR	4912743	Identifier	fclose		4912493	0					
ANR	4912744	ArgumentList	in		4912493	1					
ANR	4912745	Argument	in		4912493	0					
ANR	4912746	Identifier	in		4912493	0					
ANR	4912747	ExpressionStatement	"fprintf ( stderr , ""Error reading file: %s.\\n"" , cname )"	798:8:25487:25538	4912493	1	True				
ANR	4912748	CallExpression	"fprintf ( stderr , ""Error reading file: %s.\\n"" , cname )"		4912493	0					
ANR	4912749	Callee	fprintf		4912493	0					
ANR	4912750	Identifier	fprintf		4912493	0					
ANR	4912751	ArgumentList	stderr		4912493	1					
ANR	4912752	Argument	stderr		4912493	0					
ANR	4912753	Identifier	stderr		4912493	0					
ANR	4912754	Argument	"""Error reading file: %s.\\n"""		4912493	1					
ANR	4912755	PrimaryExpression	"""Error reading file: %s.\\n"""		4912493	0					
ANR	4912756	Argument	cname		4912493	2					
ANR	4912757	Identifier	cname		4912493	0					
ANR	4912758	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	799:8:25548:25580	4912493	2	True				
ANR	4912759	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912760	Callee	mfree		4912493	0					
ANR	4912761	Identifier	mfree		4912493	0					
ANR	4912762	ArgumentList	cname		4912493	1					
ANR	4912763	Argument	cname		4912493	0					
ANR	4912764	Identifier	cname		4912493	0					
ANR	4912765	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912766	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912767	ExpressionStatement	exit ( 1 )	800:8:25590:25597	4912493	3	True				
ANR	4912768	CallExpression	exit ( 1 )		4912493	0					
ANR	4912769	Callee	exit		4912493	0					
ANR	4912770	Identifier	exit		4912493	0					
ANR	4912771	ArgumentList	1		4912493	1					
ANR	4912772	Argument	1		4912493	0					
ANR	4912773	PrimaryExpression	1		4912493	0					
ANR	4912774	ExpressionStatement	"cont = mmalloc ( end + 1 , ""read_file(cont)"" )"	802:4:25609:25651	4912493	15	True				
ANR	4912775	AssignmentExpression	"cont = mmalloc ( end + 1 , ""read_file(cont)"" )"		4912493	0		=			
ANR	4912776	Identifier	cont		4912493	0					
ANR	4912777	CallExpression	"mmalloc ( end + 1 , ""read_file(cont)"" )"		4912493	1					
ANR	4912778	Callee	mmalloc		4912493	0					
ANR	4912779	Identifier	mmalloc		4912493	0					
ANR	4912780	ArgumentList	end + 1		4912493	1					
ANR	4912781	Argument	end + 1		4912493	0					
ANR	4912782	AdditiveExpression	end + 1		4912493	0		+			
ANR	4912783	Identifier	end		4912493	0					
ANR	4912784	PrimaryExpression	1		4912493	1					
ANR	4912785	Argument	"""read_file(cont)"""		4912493	1					
ANR	4912786	PrimaryExpression	"""read_file(cont)"""		4912493	0					
ANR	4912787	IfStatement	if ( cont == 0 )		4912493	16					
ANR	4912788	Condition	cont == 0	803:8:25661:25669	4912493	0	True				
ANR	4912789	EqualityExpression	cont == 0		4912493	0		==			
ANR	4912790	Identifier	cont		4912493	0					
ANR	4912791	PrimaryExpression	0		4912493	1					
ANR	4912792	CompoundStatement		41:19:1285:1285	4912493	1					
ANR	4912793	ExpressionStatement	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , end + 1 , cname )"	804:8:25682:25770	4912493	0	True				
ANR	4912794	CallExpression	"fprintf ( stderr , ""Can't allocate %d bytes to read %s.\\n"" , end + 1 , cname )"		4912493	0					
ANR	4912795	Callee	fprintf		4912493	0					
ANR	4912796	Identifier	fprintf		4912493	0					
ANR	4912797	ArgumentList	stderr		4912493	1					
ANR	4912798	Argument	stderr		4912493	0					
ANR	4912799	Identifier	stderr		4912493	0					
ANR	4912800	Argument	"""Can't allocate %d bytes to read %s.\\n"""		4912493	1					
ANR	4912801	PrimaryExpression	"""Can't allocate %d bytes to read %s.\\n"""		4912493	0					
ANR	4912802	Argument	end + 1		4912493	2					
ANR	4912803	AdditiveExpression	end + 1		4912493	0		+			
ANR	4912804	Identifier	end		4912493	0					
ANR	4912805	PrimaryExpression	1		4912493	1					
ANR	4912806	Argument	cname		4912493	3					
ANR	4912807	Identifier	cname		4912493	0					
ANR	4912808	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	806:8:25780:25812	4912493	1	True				
ANR	4912809	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912810	Callee	mfree		4912493	0					
ANR	4912811	Identifier	mfree		4912493	0					
ANR	4912812	ArgumentList	cname		4912493	1					
ANR	4912813	Argument	cname		4912493	0					
ANR	4912814	Identifier	cname		4912493	0					
ANR	4912815	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912816	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912817	ExpressionStatement	exit ( 1 )	807:8:25822:25829	4912493	2	True				
ANR	4912818	CallExpression	exit ( 1 )		4912493	0					
ANR	4912819	Callee	exit		4912493	0					
ANR	4912820	Identifier	exit		4912493	0					
ANR	4912821	ArgumentList	1		4912493	1					
ANR	4912822	Argument	1		4912493	0					
ANR	4912823	PrimaryExpression	1		4912493	0					
ANR	4912824	ExpressionStatement	rewind ( in )	809:4:25841:25851	4912493	17	True				
ANR	4912825	CallExpression	rewind ( in )		4912493	0					
ANR	4912826	Callee	rewind		4912493	0					
ANR	4912827	Identifier	rewind		4912493	0					
ANR	4912828	ArgumentList	in		4912493	1					
ANR	4912829	Argument	in		4912493	0					
ANR	4912830	Identifier	in		4912493	0					
ANR	4912831	ExpressionStatement	"nread = fread ( cont , 1 , end , in )"	810:4:25857:25888	4912493	18	True				
ANR	4912832	AssignmentExpression	"nread = fread ( cont , 1 , end , in )"		4912493	0		=			
ANR	4912833	Identifier	nread		4912493	0					
ANR	4912834	CallExpression	"fread ( cont , 1 , end , in )"		4912493	1					
ANR	4912835	Callee	fread		4912493	0					
ANR	4912836	Identifier	fread		4912493	0					
ANR	4912837	ArgumentList	cont		4912493	1					
ANR	4912838	Argument	cont		4912493	0					
ANR	4912839	Identifier	cont		4912493	0					
ANR	4912840	Argument	1		4912493	1					
ANR	4912841	PrimaryExpression	1		4912493	0					
ANR	4912842	Argument	end		4912493	2					
ANR	4912843	Identifier	end		4912493	0					
ANR	4912844	Argument	in		4912493	3					
ANR	4912845	Identifier	in		4912493	0					
ANR	4912846	IfStatement	if ( nread < 0 )		4912493	19					
ANR	4912847	Condition	nread < 0	811:8:25898:25906	4912493	0	True				
ANR	4912848	RelationalExpression	nread < 0		4912493	0		<			
ANR	4912849	Identifier	nread		4912493	0					
ANR	4912850	PrimaryExpression	0		4912493	1					
ANR	4912851	CompoundStatement		49:19:1522:1522	4912493	1					
ANR	4912852	ExpressionStatement	fclose ( in )	812:8:25919:25929	4912493	0	True				
ANR	4912853	CallExpression	fclose ( in )		4912493	0					
ANR	4912854	Callee	fclose		4912493	0					
ANR	4912855	Identifier	fclose		4912493	0					
ANR	4912856	ArgumentList	in		4912493	1					
ANR	4912857	Argument	in		4912493	0					
ANR	4912858	Identifier	in		4912493	0					
ANR	4912859	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	813:8:25939:25971	4912493	1	True				
ANR	4912860	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912861	Callee	mfree		4912493	0					
ANR	4912862	Identifier	mfree		4912493	0					
ANR	4912863	ArgumentList	cname		4912493	1					
ANR	4912864	Argument	cname		4912493	0					
ANR	4912865	Identifier	cname		4912493	0					
ANR	4912866	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912867	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912868	ExpressionStatement	"mfree ( cont , ""read_file(cont)"" )"	814:8:25981:26011	4912493	2	True				
ANR	4912869	CallExpression	"mfree ( cont , ""read_file(cont)"" )"		4912493	0					
ANR	4912870	Callee	mfree		4912493	0					
ANR	4912871	Identifier	mfree		4912493	0					
ANR	4912872	ArgumentList	cont		4912493	1					
ANR	4912873	Argument	cont		4912493	0					
ANR	4912874	Identifier	cont		4912493	0					
ANR	4912875	Argument	"""read_file(cont)"""		4912493	1					
ANR	4912876	PrimaryExpression	"""read_file(cont)"""		4912493	0					
ANR	4912877	ExpressionStatement	"fprintf ( stderr , ""Error reading file: %s.\\n"" , cname )"	815:8:26021:26072	4912493	3	True				
ANR	4912878	CallExpression	"fprintf ( stderr , ""Error reading file: %s.\\n"" , cname )"		4912493	0					
ANR	4912879	Callee	fprintf		4912493	0					
ANR	4912880	Identifier	fprintf		4912493	0					
ANR	4912881	ArgumentList	stderr		4912493	1					
ANR	4912882	Argument	stderr		4912493	0					
ANR	4912883	Identifier	stderr		4912493	0					
ANR	4912884	Argument	"""Error reading file: %s.\\n"""		4912493	1					
ANR	4912885	PrimaryExpression	"""Error reading file: %s.\\n"""		4912493	0					
ANR	4912886	Argument	cname		4912493	2					
ANR	4912887	Identifier	cname		4912493	0					
ANR	4912888	ExpressionStatement	exit ( 1 )	816:8:26082:26089	4912493	4	True				
ANR	4912889	CallExpression	exit ( 1 )		4912493	0					
ANR	4912890	Callee	exit		4912493	0					
ANR	4912891	Identifier	exit		4912493	0					
ANR	4912892	ArgumentList	1		4912493	1					
ANR	4912893	Argument	1		4912493	0					
ANR	4912894	PrimaryExpression	1		4912493	0					
ANR	4912895	ExpressionStatement	fclose ( in )	818:4:26101:26111	4912493	20	True				
ANR	4912896	CallExpression	fclose ( in )		4912493	0					
ANR	4912897	Callee	fclose		4912493	0					
ANR	4912898	Identifier	fclose		4912493	0					
ANR	4912899	ArgumentList	in		4912493	1					
ANR	4912900	Argument	in		4912493	0					
ANR	4912901	Identifier	in		4912493	0					
ANR	4912902	ExpressionStatement	cont [ nread ] = 0	819:4:26117:26132	4912493	21	True				
ANR	4912903	AssignmentExpression	cont [ nread ] = 0		4912493	0		=			
ANR	4912904	ArrayIndexing	cont [ nread ]		4912493	0					
ANR	4912905	Identifier	cont		4912493	0					
ANR	4912906	Identifier	nread		4912493	1					
ANR	4912907	PrimaryExpression	0		4912493	1					
ANR	4912908	IfStatement	if ( pconf -> debug )		4912493	22					
ANR	4912909	Condition	pconf -> debug	820:8:26142:26153	4912493	0	True				
ANR	4912910	PtrMemberAccess	pconf -> debug		4912493	0					
ANR	4912911	Identifier	pconf		4912493	0					
ANR	4912912	Identifier	debug		4912493	1					
ANR	4912913	ExpressionStatement	"printf ( ""File %s = %d bytes.\\n"" , cname , nread )"	821:8:26164:26209	4912493	1	True				
ANR	4912914	CallExpression	"printf ( ""File %s = %d bytes.\\n"" , cname , nread )"		4912493	0					
ANR	4912915	Callee	printf		4912493	0					
ANR	4912916	Identifier	printf		4912493	0					
ANR	4912917	ArgumentList	"""File %s = %d bytes.\\n"""		4912493	1					
ANR	4912918	Argument	"""File %s = %d bytes.\\n"""		4912493	0					
ANR	4912919	PrimaryExpression	"""File %s = %d bytes.\\n"""		4912493	0					
ANR	4912920	Argument	cname		4912493	1					
ANR	4912921	Identifier	cname		4912493	0					
ANR	4912922	Argument	nread		4912493	2					
ANR	4912923	Identifier	nread		4912493	0					
ANR	4912924	ExpressionStatement	"add_item ( & pconf -> file_names , cname , - 1 )"	822:4:26215:26254	4912493	23	True				
ANR	4912925	CallExpression	"add_item ( & pconf -> file_names , cname , - 1 )"		4912493	0					
ANR	4912926	Callee	add_item		4912493	0					
ANR	4912927	Identifier	add_item		4912493	0					
ANR	4912928	ArgumentList	& pconf -> file_names		4912493	1					
ANR	4912929	Argument	& pconf -> file_names		4912493	0					
ANR	4912930	UnaryOperationExpression	& pconf -> file_names		4912493	0					
ANR	4912931	UnaryOperator	&		4912493	0					
ANR	4912932	PtrMemberAccess	pconf -> file_names		4912493	1					
ANR	4912933	Identifier	pconf		4912493	0					
ANR	4912934	Identifier	file_names		4912493	1					
ANR	4912935	Argument	cname		4912493	1					
ANR	4912936	Identifier	cname		4912493	0					
ANR	4912937	Argument	- 1		4912493	2					
ANR	4912938	UnaryOperationExpression	- 1		4912493	0					
ANR	4912939	UnaryOperator	-		4912493	0					
ANR	4912940	PrimaryExpression	1		4912493	1					
ANR	4912941	ExpressionStatement	"item = add_item ( & pconf -> file_contents , cont , - 1 )"	823:4:26260:26308	4912493	24	True				
ANR	4912942	AssignmentExpression	"item = add_item ( & pconf -> file_contents , cont , - 1 )"		4912493	0		=			
ANR	4912943	Identifier	item		4912493	0					
ANR	4912944	CallExpression	"add_item ( & pconf -> file_contents , cont , - 1 )"		4912493	1					
ANR	4912945	Callee	add_item		4912493	0					
ANR	4912946	Identifier	add_item		4912493	0					
ANR	4912947	ArgumentList	& pconf -> file_contents		4912493	1					
ANR	4912948	Argument	& pconf -> file_contents		4912493	0					
ANR	4912949	UnaryOperationExpression	& pconf -> file_contents		4912493	0					
ANR	4912950	UnaryOperator	&		4912493	0					
ANR	4912951	PtrMemberAccess	pconf -> file_contents		4912493	1					
ANR	4912952	Identifier	pconf		4912493	0					
ANR	4912953	Identifier	file_contents		4912493	1					
ANR	4912954	Argument	cont		4912493	1					
ANR	4912955	Identifier	cont		4912493	0					
ANR	4912956	Argument	- 1		4912493	2					
ANR	4912957	UnaryOperationExpression	- 1		4912493	0					
ANR	4912958	UnaryOperator	-		4912493	0					
ANR	4912959	PrimaryExpression	1		4912493	1					
ANR	4912960	ExpressionStatement	item -> index = 0	824:4:26314:26329	4912493	25	True				
ANR	4912961	AssignmentExpression	item -> index = 0		4912493	0		=			
ANR	4912962	PtrMemberAccess	item -> index		4912493	0					
ANR	4912963	Identifier	item		4912493	0					
ANR	4912964	Identifier	index		4912493	1					
ANR	4912965	PrimaryExpression	0		4912493	1					
ANR	4912966	ExpressionStatement	"mfree ( cname , ""read_file(cname)"" )"	825:4:26364:26396	4912493	26	True				
ANR	4912967	CallExpression	"mfree ( cname , ""read_file(cname)"" )"		4912493	0					
ANR	4912968	Callee	mfree		4912493	0					
ANR	4912969	Identifier	mfree		4912493	0					
ANR	4912970	ArgumentList	cname		4912493	1					
ANR	4912971	Argument	cname		4912493	0					
ANR	4912972	Identifier	cname		4912493	0					
ANR	4912973	Argument	"""read_file(cname)"""		4912493	1					
ANR	4912974	PrimaryExpression	"""read_file(cname)"""		4912493	0					
ANR	4912975	ExpressionStatement	"mfree ( cont , ""read_file(cont)"" )"	826:4:26402:26432	4912493	27	True				
ANR	4912976	CallExpression	"mfree ( cont , ""read_file(cont)"" )"		4912493	0					
ANR	4912977	Callee	mfree		4912493	0					
ANR	4912978	Identifier	mfree		4912493	0					
ANR	4912979	ArgumentList	cont		4912493	1					
ANR	4912980	Argument	cont		4912493	0					
ANR	4912981	Identifier	cont		4912493	0					
ANR	4912982	Argument	"""read_file(cont)"""		4912493	1					
ANR	4912983	PrimaryExpression	"""read_file(cont)"""		4912493	0					
ANR	4912984	ReturnStatement	return item ;	827:4:26438:26449	4912493	28	True				
ANR	4912985	Identifier	item		4912493	0					
ANR	4912986	ReturnType	static string_item_t *		4912493	1					
ANR	4912987	Identifier	read_file		4912493	2					
ANR	4912988	ParameterList	"config_t * pconf , const char * fname"		4912493	3					
ANR	4912989	Parameter	config_t * pconf	762:10:24349:24364	4912493	0	True				
ANR	4912990	ParameterType	config_t *		4912493	0					
ANR	4912991	Identifier	pconf		4912493	1					
ANR	4912992	Parameter	const char * fname	762:28:24367:24383	4912493	1	True				
ANR	4912993	ParameterType	const char *		4912493	0					
ANR	4912994	Identifier	fname		4912493	1					
ANR	4912995	CFGEntryNode	ENTRY		4912493		True				
ANR	4912996	CFGExitNode	EXIT		4912493		True				
ANR	4912997	Symbol	pconf -> file_contents . items		4912493						
ANR	4912998	Symbol	pconf -> debug		4912493						
ANR	4912999	Symbol	mmalloc		4912493						
ANR	4913000	Symbol	ftell		4912493						
ANR	4913001	Symbol	nread		4912493						
ANR	4913002	Symbol	cname		4912493						
ANR	4913003	Symbol	& pconf -> file_names		4912493						
ANR	4913004	Symbol	pconf		4912493						
ANR	4913005	Symbol	pconf -> file_names . items [ i ] . str		4912493						
ANR	4913006	Symbol	strlen		4912493						
ANR	4913007	Symbol	* item		4912493						
ANR	4913008	Symbol	pconf -> file_contents		4912493						
ANR	4913009	Symbol	end		4912493						
ANR	4913010	Symbol	cont		4912493						
ANR	4913011	Symbol	pconf -> file_names		4912493						
ANR	4913012	Symbol	strcmp		4912493						
ANR	4913013	Symbol	add_item		4912493						
ANR	4913014	Symbol	fname		4912493						
ANR	4913015	Symbol	fopen		4912493						
ANR	4913016	Symbol	item		4912493						
ANR	4913017	Symbol	& pconf -> file_contents		4912493						
ANR	4913018	Symbol	in		4912493						
ANR	4913019	Symbol	* pconf		4912493						
ANR	4913020	Symbol	item -> index		4912493						
ANR	4913021	Symbol	i		4912493						
ANR	4913022	Symbol	* nread		4912493						
ANR	4913023	Symbol	stderr		4912493						
ANR	4913024	Symbol	fread		4912493						
ANR	4913025	Symbol	pconf -> file_names . count		4912493						
ANR	4913026	Symbol	* * pconf		4912493						
ANR	4913027	Symbol	pconf -> file_prefix		4912493						
ANR	4913028	Symbol	* i		4912493						
ANR	4913029	Symbol	* cont		4912493						
ANR	4913030	Symbol	pconf -> file_names . items		4912493						
ANR	4913031	Symbol	* pconf -> file_names		4912493						
ANR	4913032	Symbol	* pconf -> file_names . items		4912493						
ANR	4913033	Function	read_dev	831:0:26531:28001							
ANR	4913034	FunctionDef	"read_dev (config_t * pconf , const char * arg)"		4913033	0					
ANR	4913035	CompoundStatement		833:0:26579:28001	4913033	0					
ANR	4913036	IdentifierDeclStatement	string_item_t * item ;	834:4:26585:26604	4913033	0	True				
ANR	4913037	IdentifierDecl	* item		4913033	0					
ANR	4913038	IdentifierDeclType	string_item_t *		4913033	0					
ANR	4913039	Identifier	item		4913033	1					
ANR	4913040	IdentifierDeclStatement	const char * in ;	835:4:26610:26624	4913033	1	True				
ANR	4913041	IdentifierDecl	* in		4913033	0					
ANR	4913042	IdentifierDeclType	const char *		4913033	0					
ANR	4913043	Identifier	in		4913033	1					
ANR	4913044	Statement	define	837:1:26628:26633	4913033	2	True				
ANR	4913045	Statement	MAX_TOKEN	837:8:26635:26643	4913033	3	True				
ANR	4913046	Statement	4096	837:18:26645:26648	4913033	4	True				
ANR	4913047	IdentifierDeclStatement	char * token ;	838:4:26654:26665	4913033	5	True				
ANR	4913048	IdentifierDecl	* token		4913033	0					
ANR	4913049	IdentifierDeclType	char *		4913033	0					
ANR	4913050	Identifier	token		4913033	1					
ANR	4913051	IdentifierDeclStatement	char * category ;	839:4:26725:26739	4913033	6	True				
ANR	4913052	IdentifierDecl	* category		4913033	0					
ANR	4913053	IdentifierDeclType	char *		4913033	0					
ANR	4913054	Identifier	category		4913033	1					
ANR	4913055	IdentifierDeclStatement	int file_index ;	840:4:26767:26781	4913033	7	True				
ANR	4913056	IdentifierDecl	file_index		4913033	0					
ANR	4913057	IdentifierDeclType	int		4913033	0					
ANR	4913058	Identifier	file_index		4913033	1					
ANR	4913059	IdentifierDeclStatement	int len ;	841:4:26787:26794	4913033	8	True				
ANR	4913060	IdentifierDecl	len		4913033	0					
ANR	4913061	IdentifierDeclType	int		4913033	0					
ANR	4913062	Identifier	len		4913033	1					
ANR	4913063	IfStatement	if ( pconf -> debug )		4913033	9					
ANR	4913064	Condition	pconf -> debug	843:8:26805:26816	4913033	0	True				
ANR	4913065	PtrMemberAccess	pconf -> debug		4913033	0					
ANR	4913066	Identifier	pconf		4913033	0					
ANR	4913067	Identifier	debug		4913033	1					
ANR	4913068	ExpressionStatement	"printf ( ""Reading %s;\\n"" , arg )"	844:8:26827:26855	4913033	1	True				
ANR	4913069	CallExpression	"printf ( ""Reading %s;\\n"" , arg )"		4913033	0					
ANR	4913070	Callee	printf		4913033	0					
ANR	4913071	Identifier	printf		4913033	0					
ANR	4913072	ArgumentList	"""Reading %s;\\n"""		4913033	1					
ANR	4913073	Argument	"""Reading %s;\\n"""		4913033	0					
ANR	4913074	PrimaryExpression	"""Reading %s;\\n"""		4913033	0					
ANR	4913075	Argument	arg		4913033	1					
ANR	4913076	Identifier	arg		4913033	0					
ANR	4913077	ExpressionStatement	"item = read_file ( pconf , arg )"	845:4:26861:26889	4913033	10	True				
ANR	4913078	AssignmentExpression	"item = read_file ( pconf , arg )"		4913033	0		=			
ANR	4913079	Identifier	item		4913033	0					
ANR	4913080	CallExpression	"read_file ( pconf , arg )"		4913033	1					
ANR	4913081	Callee	read_file		4913033	0					
ANR	4913082	Identifier	read_file		4913033	0					
ANR	4913083	ArgumentList	pconf		4913033	1					
ANR	4913084	Argument	pconf		4913033	0					
ANR	4913085	Identifier	pconf		4913033	0					
ANR	4913086	Argument	arg		4913033	1					
ANR	4913087	Identifier	arg		4913033	0					
ANR	4913088	IfStatement	if ( item -> index == uniq_first )		4913033	11					
ANR	4913089	Condition	item -> index == uniq_first	846:8:26899:26923	4913033	0	True				
ANR	4913090	EqualityExpression	item -> index == uniq_first		4913033	0		==			
ANR	4913091	PtrMemberAccess	item -> index		4913033	0					
ANR	4913092	Identifier	item		4913033	0					
ANR	4913093	Identifier	index		4913033	1					
ANR	4913094	Identifier	uniq_first		4913033	1					
ANR	4913095	CompoundStatement		14:35:346:346	4913033	1					
ANR	4913096	IfStatement	if ( pconf -> debug )		4913033	0					
ANR	4913097	Condition	pconf -> debug	847:12:26981:26992	4913033	0	True				
ANR	4913098	PtrMemberAccess	pconf -> debug		4913033	0					
ANR	4913099	Identifier	pconf		4913033	0					
ANR	4913100	Identifier	debug		4913033	1					
ANR	4913101	ExpressionStatement	"printf ( ""Skipping duplicate file.\\n"" )"	848:12:27007:27043	4913033	1	True				
ANR	4913102	CallExpression	"printf ( ""Skipping duplicate file.\\n"" )"		4913033	0					
ANR	4913103	Callee	printf		4913033	0					
ANR	4913104	Identifier	printf		4913033	0					
ANR	4913105	ArgumentList	"""Skipping duplicate file.\\n"""		4913033	1					
ANR	4913106	Argument	"""Skipping duplicate file.\\n"""		4913033	0					
ANR	4913107	PrimaryExpression	"""Skipping duplicate file.\\n"""		4913033	0					
ANR	4913108	ReturnStatement	return uniq_first ;	849:8:27053:27070	4913033	1	True				
ANR	4913109	Identifier	uniq_first		4913033	0					
ANR	4913110	ExpressionStatement	in = item -> str	851:4:27082:27096	4913033	12	True				
ANR	4913111	AssignmentExpression	in = item -> str		4913033	0		=			
ANR	4913112	Identifier	in		4913033	0					
ANR	4913113	PtrMemberAccess	item -> str		4913033	1					
ANR	4913114	Identifier	item		4913033	0					
ANR	4913115	Identifier	str		4913033	1					
ANR	4913116	ExpressionStatement	"token = mmalloc ( MAX_TOKEN + 1 , ""read_dev(token)"" )"	852:4:27102:27151	4913033	13	True				
ANR	4913117	AssignmentExpression	"token = mmalloc ( MAX_TOKEN + 1 , ""read_dev(token)"" )"		4913033	0		=			
ANR	4913118	Identifier	token		4913033	0					
ANR	4913119	CallExpression	"mmalloc ( MAX_TOKEN + 1 , ""read_dev(token)"" )"		4913033	1					
ANR	4913120	Callee	mmalloc		4913033	0					
ANR	4913121	Identifier	mmalloc		4913033	0					
ANR	4913122	ArgumentList	MAX_TOKEN + 1		4913033	1					
ANR	4913123	Argument	MAX_TOKEN + 1		4913033	0					
ANR	4913124	AdditiveExpression	MAX_TOKEN + 1		4913033	0		+			
ANR	4913125	Identifier	MAX_TOKEN		4913033	0					
ANR	4913126	PrimaryExpression	1		4913033	1					
ANR	4913127	Argument	"""read_dev(token)"""		4913033	1					
ANR	4913128	PrimaryExpression	"""read_dev(token)"""		4913033	0					
ANR	4913129	ExpressionStatement	"category = mmalloc ( MAX_TOKEN + 1 , ""read_dev(category)"" )"	853:4:27157:27212	4913033	14	True				
ANR	4913130	AssignmentExpression	"category = mmalloc ( MAX_TOKEN + 1 , ""read_dev(category)"" )"		4913033	0		=			
ANR	4913131	Identifier	category		4913033	0					
ANR	4913132	CallExpression	"mmalloc ( MAX_TOKEN + 1 , ""read_dev(category)"" )"		4913033	1					
ANR	4913133	Callee	mmalloc		4913033	0					
ANR	4913134	Identifier	mmalloc		4913033	0					
ANR	4913135	ArgumentList	MAX_TOKEN + 1		4913033	1					
ANR	4913136	Argument	MAX_TOKEN + 1		4913033	0					
ANR	4913137	AdditiveExpression	MAX_TOKEN + 1		4913033	0		+			
ANR	4913138	Identifier	MAX_TOKEN		4913033	0					
ANR	4913139	PrimaryExpression	1		4913033	1					
ANR	4913140	Argument	"""read_dev(category)"""		4913033	1					
ANR	4913141	PrimaryExpression	"""read_dev(category)"""		4913033	0					
ANR	4913142	ExpressionStatement	file_index = item - pconf -> file_contents . items	854:4:27218:27264	4913033	15	True				
ANR	4913143	AssignmentExpression	file_index = item - pconf -> file_contents . items		4913033	0		=			
ANR	4913144	Identifier	file_index		4913033	0					
ANR	4913145	AdditiveExpression	item - pconf -> file_contents . items		4913033	1		-			
ANR	4913146	Identifier	item		4913033	0					
ANR	4913147	MemberAccess	pconf -> file_contents . items		4913033	1					
ANR	4913148	PtrMemberAccess	pconf -> file_contents		4913033	0					
ANR	4913149	Identifier	pconf		4913033	0					
ANR	4913150	Identifier	file_contents		4913033	1					
ANR	4913151	Identifier	items		4913033	1					
ANR	4913152	ExpressionStatement	"strcpy ( category , ""obj"" )"	855:4:27270:27293	4913033	16	True				
ANR	4913153	CallExpression	"strcpy ( category , ""obj"" )"		4913033	0					
ANR	4913154	Callee	strcpy		4913033	0					
ANR	4913155	Identifier	strcpy		4913033	0					
ANR	4913156	ArgumentList	category		4913033	1					
ANR	4913157	Argument	category		4913033	0					
ANR	4913158	Identifier	category		4913033	0					
ANR	4913159	Argument	"""obj"""		4913033	1					
ANR	4913160	PrimaryExpression	"""obj"""		4913033	0					
ANR	4913161	WhileStatement	"while ( ( len = read_token ( token , MAX_TOKEN , & in ) ) > 0 )"		4913033	17					
ANR	4913162	Condition	"( len = read_token ( token , MAX_TOKEN , & in ) ) > 0"	856:11:27306:27350	4913033	0	True				
ANR	4913163	RelationalExpression	"( len = read_token ( token , MAX_TOKEN , & in ) ) > 0"		4913033	0		>			
ANR	4913164	AssignmentExpression	"len = read_token ( token , MAX_TOKEN , & in )"		4913033	0		=			
ANR	4913165	Identifier	len		4913033	0					
ANR	4913166	CallExpression	"read_token ( token , MAX_TOKEN , & in )"		4913033	1					
ANR	4913167	Callee	read_token		4913033	0					
ANR	4913168	Identifier	read_token		4913033	0					
ANR	4913169	ArgumentList	token		4913033	1					
ANR	4913170	Argument	token		4913033	0					
ANR	4913171	Identifier	token		4913033	0					
ANR	4913172	Argument	MAX_TOKEN		4913033	1					
ANR	4913173	Identifier	MAX_TOKEN		4913033	0					
ANR	4913174	Argument	& in		4913033	2					
ANR	4913175	UnaryOperationExpression	& in		4913033	0					
ANR	4913176	UnaryOperator	&		4913033	0					
ANR	4913177	Identifier	in		4913033	1					
ANR	4913178	PrimaryExpression	0		4913033	1					
ANR	4913179	CompoundStatement		25:8:783:838	4913033	1					
ANR	4913180	IdentifierDeclStatement	"int ind = add_entry ( pconf , category , token , file_index ) ;"	857:8:27363:27418	4913033	0	True				
ANR	4913181	IdentifierDecl	"ind = add_entry ( pconf , category , token , file_index )"		4913033	0					
ANR	4913182	IdentifierDeclType	int		4913033	0					
ANR	4913183	Identifier	ind		4913033	1					
ANR	4913184	AssignmentExpression	"ind = add_entry ( pconf , category , token , file_index )"		4913033	2		=			
ANR	4913185	Identifier	ind		4913033	0					
ANR	4913186	CallExpression	"add_entry ( pconf , category , token , file_index )"		4913033	1					
ANR	4913187	Callee	add_entry		4913033	0					
ANR	4913188	Identifier	add_entry		4913033	0					
ANR	4913189	ArgumentList	pconf		4913033	1					
ANR	4913190	Argument	pconf		4913033	0					
ANR	4913191	Identifier	pconf		4913033	0					
ANR	4913192	Argument	category		4913033	1					
ANR	4913193	Identifier	category		4913033	0					
ANR	4913194	Argument	token		4913033	2					
ANR	4913195	Identifier	token		4913033	0					
ANR	4913196	Argument	file_index		4913033	3					
ANR	4913197	Identifier	file_index		4913033	0					
ANR	4913198	ExpressionStatement	"item = read_file ( pconf , arg )"	863:8:27656:27684	4913033	1	True				
ANR	4913199	AssignmentExpression	"item = read_file ( pconf , arg )"		4913033	0		=			
ANR	4913200	Identifier	item		4913033	0					
ANR	4913201	CallExpression	"read_file ( pconf , arg )"		4913033	1					
ANR	4913202	Callee	read_file		4913033	0					
ANR	4913203	Identifier	read_file		4913033	0					
ANR	4913204	ArgumentList	pconf		4913033	1					
ANR	4913205	Argument	pconf		4913033	0					
ANR	4913206	Identifier	pconf		4913033	0					
ANR	4913207	Argument	arg		4913033	1					
ANR	4913208	Identifier	arg		4913033	0					
ANR	4913209	ExpressionStatement	item -> index |= ind	864:8:27694:27712	4913033	2	True				
ANR	4913210	AssignmentExpression	item -> index |= ind		4913033	0		|=			
ANR	4913211	PtrMemberAccess	item -> index		4913033	0					
ANR	4913212	Identifier	item		4913033	0					
ANR	4913213	Identifier	index		4913033	1					
ANR	4913214	Identifier	ind		4913033	1					
ANR	4913215	ExpressionStatement	"mfree ( category , ""read_dev(category)"" )"	866:4:27724:27761	4913033	18	True				
ANR	4913216	CallExpression	"mfree ( category , ""read_dev(category)"" )"		4913033	0					
ANR	4913217	Callee	mfree		4913033	0					
ANR	4913218	Identifier	mfree		4913033	0					
ANR	4913219	ArgumentList	category		4913033	1					
ANR	4913220	Argument	category		4913033	0					
ANR	4913221	Identifier	category		4913033	0					
ANR	4913222	Argument	"""read_dev(category)"""		4913033	1					
ANR	4913223	PrimaryExpression	"""read_dev(category)"""		4913033	0					
ANR	4913224	Statement	undef	867:1:27764:27768	4913033	19	True				
ANR	4913225	Statement	MAX_TOKEN	867:7:27770:27778	4913033	20	True				
ANR	4913226	IfStatement	if ( len < 0 )		4913033	21					
ANR	4913227	Condition	len < 0	868:8:27788:27794	4913033	0	True				
ANR	4913228	RelationalExpression	len < 0		4913033	0		<			
ANR	4913229	Identifier	len		4913033	0					
ANR	4913230	PrimaryExpression	0		4913033	1					
ANR	4913231	CompoundStatement		36:17:1217:1217	4913033	1					
ANR	4913232	ExpressionStatement	"fprintf ( stderr , ""Token too long: %s.\\n"" , token )"	869:8:27807:27854	4913033	0	True				
ANR	4913233	CallExpression	"fprintf ( stderr , ""Token too long: %s.\\n"" , token )"		4913033	0					
ANR	4913234	Callee	fprintf		4913033	0					
ANR	4913235	Identifier	fprintf		4913033	0					
ANR	4913236	ArgumentList	stderr		4913033	1					
ANR	4913237	Argument	stderr		4913033	0					
ANR	4913238	Identifier	stderr		4913033	0					
ANR	4913239	Argument	"""Token too long: %s.\\n"""		4913033	1					
ANR	4913240	PrimaryExpression	"""Token too long: %s.\\n"""		4913033	0					
ANR	4913241	Argument	token		4913033	2					
ANR	4913242	Identifier	token		4913033	0					
ANR	4913243	ExpressionStatement	exit ( 1 )	870:8:27864:27871	4913033	1	True				
ANR	4913244	CallExpression	exit ( 1 )		4913033	0					
ANR	4913245	Callee	exit		4913033	0					
ANR	4913246	Identifier	exit		4913033	0					
ANR	4913247	ArgumentList	1		4913033	1					
ANR	4913248	Argument	1		4913033	0					
ANR	4913249	PrimaryExpression	1		4913033	0					
ANR	4913250	IfStatement	if ( pconf -> debug )		4913033	22					
ANR	4913251	Condition	pconf -> debug	872:8:27887:27898	4913033	0	True				
ANR	4913252	PtrMemberAccess	pconf -> debug		4913033	0					
ANR	4913253	Identifier	pconf		4913033	0					
ANR	4913254	Identifier	debug		4913033	1					
ANR	4913255	ExpressionStatement	"printf ( ""Finished %s.\\n"" , arg )"	873:8:27909:27938	4913033	1	True				
ANR	4913256	CallExpression	"printf ( ""Finished %s.\\n"" , arg )"		4913033	0					
ANR	4913257	Callee	printf		4913033	0					
ANR	4913258	Identifier	printf		4913033	0					
ANR	4913259	ArgumentList	"""Finished %s.\\n"""		4913033	1					
ANR	4913260	Argument	"""Finished %s.\\n"""		4913033	0					
ANR	4913261	PrimaryExpression	"""Finished %s.\\n"""		4913033	0					
ANR	4913262	Argument	arg		4913033	1					
ANR	4913263	Identifier	arg		4913033	0					
ANR	4913264	ExpressionStatement	"mfree ( token , ""read_dev(token)"" )"	874:4:27944:27975	4913033	23	True				
ANR	4913265	CallExpression	"mfree ( token , ""read_dev(token)"" )"		4913033	0					
ANR	4913266	Callee	mfree		4913033	0					
ANR	4913267	Identifier	mfree		4913033	0					
ANR	4913268	ArgumentList	token		4913033	1					
ANR	4913269	Argument	token		4913033	0					
ANR	4913270	Identifier	token		4913033	0					
ANR	4913271	Argument	"""read_dev(token)"""		4913033	1					
ANR	4913272	PrimaryExpression	"""read_dev(token)"""		4913033	0					
ANR	4913273	ReturnStatement	return item -> index ;	875:4:27981:27999	4913033	24	True				
ANR	4913274	PtrMemberAccess	item -> index		4913033	0					
ANR	4913275	Identifier	item		4913033	0					
ANR	4913276	Identifier	index		4913033	1					
ANR	4913277	ReturnType	int		4913033	1					
ANR	4913278	Identifier	read_dev		4913033	2					
ANR	4913279	ParameterList	"config_t * pconf , const char * arg"		4913033	3					
ANR	4913280	Parameter	config_t * pconf	832:9:26544:26559	4913033	0	True				
ANR	4913281	ParameterType	config_t *		4913033	0					
ANR	4913282	Identifier	pconf		4913033	1					
ANR	4913283	Parameter	const char * arg	832:27:26562:26576	4913033	1	True				
ANR	4913284	ParameterType	const char *		4913033	0					
ANR	4913285	Identifier	arg		4913033	1					
ANR	4913286	CFGEntryNode	ENTRY		4913033		True				
ANR	4913287	CFGExitNode	EXIT		4913033		True				
ANR	4913288	Symbol	pconf -> file_contents . items		4913033						
ANR	4913289	Symbol	item		4913033						
ANR	4913290	Symbol	pconf -> debug		4913033						
ANR	4913291	Symbol	mmalloc		4913033						
ANR	4913292	Symbol	in		4913033						
ANR	4913293	Symbol	add_entry		4913033						
ANR	4913294	Symbol	* pconf		4913033						
ANR	4913295	Symbol	item -> index		4913033						
ANR	4913296	Symbol	pconf		4913033						
ANR	4913297	Symbol	stderr		4913033						
ANR	4913298	Symbol	uniq_first		4913033						
ANR	4913299	Symbol	& in		4913033						
ANR	4913300	Symbol	token		4913033						
ANR	4913301	Symbol	file_index		4913033						
ANR	4913302	Symbol	item -> str		4913033						
ANR	4913303	Symbol	len		4913033						
ANR	4913304	Symbol	* item		4913033						
ANR	4913305	Symbol	arg		4913033						
ANR	4913306	Symbol	pconf -> file_contents		4913033						
ANR	4913307	Symbol	read_token		4913033						
ANR	4913308	Symbol	MAX_TOKEN		4913033						
ANR	4913309	Symbol	category		4913033						
ANR	4913310	Symbol	read_file		4913033						
ANR	4913311	Symbol	ind		4913033						
ANR	4913312	Function	read_token	879:0:28075:28523							
ANR	4913313	FunctionDef	"read_token (char * token , int max_len , const char * * pin)"		4913312	0					
ANR	4913314	CompoundStatement		881:0:28134:28523	4913312	0					
ANR	4913315	IdentifierDeclStatement	const char * in = * pin ;	882:4:28140:28161	4913312	0	True				
ANR	4913316	IdentifierDecl	* in = * pin		4913312	0					
ANR	4913317	IdentifierDeclType	const char *		4913312	0					
ANR	4913318	Identifier	in		4913312	1					
ANR	4913319	AssignmentExpression	* in = * pin		4913312	2		=			
ANR	4913320	Identifier	in		4913312	0					
ANR	4913321	UnaryOperationExpression	* pin		4913312	1					
ANR	4913322	UnaryOperator	*		4913312	0					
ANR	4913323	Identifier	pin		4913312	1					
ANR	4913324	IdentifierDeclStatement	int len = 0 ;	883:4:28167:28178	4913312	1	True				
ANR	4913325	IdentifierDecl	len = 0		4913312	0					
ANR	4913326	IdentifierDeclType	int		4913312	0					
ANR	4913327	Identifier	len		4913312	1					
ANR	4913328	AssignmentExpression	len = 0		4913312	2		=			
ANR	4913329	Identifier	len		4913312	0					
ANR	4913330	PrimaryExpression	0		4913312	1					
ANR	4913331	WhileStatement	while ( len < max_len )		4913312	2					
ANR	4913332	Condition	len < max_len	885:11:28192:28204	4913312	0	True				
ANR	4913333	RelationalExpression	len < max_len		4913312	0		<			
ANR	4913334	Identifier	len		4913312	0					
ANR	4913335	Identifier	max_len		4913312	1					
ANR	4913336	CompoundStatement		6:8:82:95	4913312	1					
ANR	4913337	IdentifierDeclStatement	char ch = * in ;	886:8:28217:28230	4913312	0	True				
ANR	4913338	IdentifierDecl	ch = * in		4913312	0					
ANR	4913339	IdentifierDeclType	char		4913312	0					
ANR	4913340	Identifier	ch		4913312	1					
ANR	4913341	AssignmentExpression	ch = * in		4913312	2		=			
ANR	4913342	Identifier	ch		4913312	0					
ANR	4913343	UnaryOperationExpression	* in		4913312	1					
ANR	4913344	UnaryOperator	*		4913312	0					
ANR	4913345	Identifier	in		4913312	1					
ANR	4913346	IfStatement	if ( ch == 0 )		4913312	1					
ANR	4913347	Condition	ch == 0	888:12:28245:28251	4913312	0	True				
ANR	4913348	EqualityExpression	ch == 0		4913312	0		==			
ANR	4913349	Identifier	ch		4913312	0					
ANR	4913350	PrimaryExpression	0		4913312	1					
ANR	4913351	BreakStatement	break ;	889:12:28266:28271	4913312	1	True				
ANR	4913352	ExpressionStatement	++ in	890:8:28281:28285	4913312	2	True				
ANR	4913353	UnaryExpression	++ in		4913312	0					
ANR	4913354	IncDec	++		4913312	0					
ANR	4913355	Identifier	in		4913312	1					
ANR	4913356	IfStatement	if ( isspace ( ch ) )		4913312	3					
ANR	4913357	Condition	isspace ( ch )	891:12:28299:28309	4913312	0	True				
ANR	4913358	CallExpression	isspace ( ch )		4913312	0					
ANR	4913359	Callee	isspace		4913312	0					
ANR	4913360	Identifier	isspace		4913312	0					
ANR	4913361	ArgumentList	ch		4913312	1					
ANR	4913362	Argument	ch		4913312	0					
ANR	4913363	Identifier	ch		4913312	0					
ANR	4913364	CompoundStatement		11:25:177:177	4913312	1					
ANR	4913365	IfStatement	if ( len > 0 )		4913312	0					
ANR	4913366	Condition	len > 0	892:16:28330:28336	4913312	0	True				
ANR	4913367	RelationalExpression	len > 0		4913312	0		>			
ANR	4913368	Identifier	len		4913312	0					
ANR	4913369	PrimaryExpression	0		4913312	1					
ANR	4913370	BreakStatement	break ;	893:16:28355:28360	4913312	1	True				
ANR	4913371	ContinueStatement	continue ;	894:12:28374:28382	4913312	1	True				
ANR	4913372	ExpressionStatement	token [ len ++ ] = ch	896:8:28402:28419	4913312	4	True				
ANR	4913373	AssignmentExpression	token [ len ++ ] = ch		4913312	0		=			
ANR	4913374	ArrayIndexing	token [ len ++ ]		4913312	0					
ANR	4913375	Identifier	token		4913312	0					
ANR	4913376	PostIncDecOperationExpression	len ++		4913312	1					
ANR	4913377	Identifier	len		4913312	0					
ANR	4913378	IncDec	++		4913312	1					
ANR	4913379	Identifier	ch		4913312	1					
ANR	4913380	ExpressionStatement	token [ len ] = 0	898:4:28431:28445	4913312	3	True				
ANR	4913381	AssignmentExpression	token [ len ] = 0		4913312	0		=			
ANR	4913382	ArrayIndexing	token [ len ]		4913312	0					
ANR	4913383	Identifier	token		4913312	0					
ANR	4913384	Identifier	len		4913312	1					
ANR	4913385	PrimaryExpression	0		4913312	1					
ANR	4913386	ExpressionStatement	* pin = in	899:4:28451:28460	4913312	4	True				
ANR	4913387	AssignmentExpression	* pin = in		4913312	0		=			
ANR	4913388	UnaryOperationExpression	* pin		4913312	0					
ANR	4913389	UnaryOperator	*		4913312	0					
ANR	4913390	Identifier	pin		4913312	1					
ANR	4913391	Identifier	in		4913312	1					
ANR	4913392	ReturnStatement	return ( len >= max_len ? - 1 : len ) ;	900:4:28466:28521	4913312	5	True				
ANR	4913393	ConditionalExpression	len >= max_len ? - 1 : len		4913312	0					
ANR	4913394	Condition	len >= max_len		4913312	0					
ANR	4913395	RelationalExpression	len >= max_len		4913312	0		>=			
ANR	4913396	Identifier	len		4913312	0					
ANR	4913397	Identifier	max_len		4913312	1					
ANR	4913398	UnaryOperationExpression	- 1		4913312	1					
ANR	4913399	UnaryOperator	-		4913312	0					
ANR	4913400	PrimaryExpression	1		4913312	1					
ANR	4913401	Identifier	len		4913312	2					
ANR	4913402	ReturnType	int		4913312	1					
ANR	4913403	Identifier	read_token		4913312	2					
ANR	4913404	ParameterList	"char * token , int max_len , const char * * pin"		4913312	3					
ANR	4913405	Parameter	char * token	880:11:28090:28100	4913312	0	True				
ANR	4913406	ParameterType	char *		4913312	0					
ANR	4913407	Identifier	token		4913312	1					
ANR	4913408	Parameter	int max_len	880:24:28103:28113	4913312	1	True				
ANR	4913409	ParameterType	int		4913312	0					
ANR	4913410	Identifier	max_len		4913312	1					
ANR	4913411	Parameter	const char * * pin	880:37:28116:28131	4913312	2	True				
ANR	4913412	ParameterType	const char * *		4913312	0					
ANR	4913413	Identifier	pin		4913312	1					
ANR	4913414	CFGEntryNode	ENTRY		4913312		True				
ANR	4913415	CFGExitNode	EXIT		4913312		True				
ANR	4913416	Symbol	pin		4913312						
ANR	4913417	Symbol	len		4913312						
ANR	4913418	Symbol	* token		4913312						
ANR	4913419	Symbol	in		4913312						
ANR	4913420	Symbol	ch		4913312						
ANR	4913421	Symbol	* in		4913312						
ANR	4913422	Symbol	isspace		4913312						
ANR	4913423	Symbol	token		4913312						
ANR	4913424	Symbol	max_len		4913312						
ANR	4913425	Symbol	* pin		4913312						
ANR	4913426	Symbol	* len		4913312						
ANR	4913427	Function	add_entry	904:0:28590:33422							
ANR	4913428	FunctionDef	"add_entry (config_t * pconf , char * category , const char * item , int file_index)"		4913427	0					
ANR	4913429	CompoundStatement		906:0:28672:33422	4913427	0					
ANR	4913430	IfStatement	if ( item [ 0 ] == '-' && islower ( item [ 1 ] ) )		4913427	0					
ANR	4913431	Condition	item [ 0 ] == '-' && islower ( item [ 1 ] )	907:8:28682:28715	4913427	0	True				
ANR	4913432	AndExpression	item [ 0 ] == '-' && islower ( item [ 1 ] )		4913427	0		&&			
ANR	4913433	EqualityExpression	item [ 0 ] == '-'		4913427	0		==			
ANR	4913434	ArrayIndexing	item [ 0 ]		4913427	0					
ANR	4913435	Identifier	item		4913427	0					
ANR	4913436	PrimaryExpression	0		4913427	1					
ANR	4913437	PrimaryExpression	'-'		4913427	1					
ANR	4913438	CallExpression	islower ( item [ 1 ] )		4913427	1					
ANR	4913439	Callee	islower		4913427	0					
ANR	4913440	Identifier	islower		4913427	0					
ANR	4913441	ArgumentList	item [ 1 ]		4913427	1					
ANR	4913442	Argument	item [ 1 ]		4913427	0					
ANR	4913443	ArrayIndexing	item [ 1 ]		4913427	0					
ANR	4913444	Identifier	item		4913427	0					
ANR	4913445	PrimaryExpression	1		4913427	1					
ANR	4913446	CompoundStatement		2:44:45:45	4913427	1					
ANR	4913447	ExpressionStatement	"strcpy ( category , item + 1 )"	908:8:28747:28773	4913427	0	True				
ANR	4913448	CallExpression	"strcpy ( category , item + 1 )"		4913427	0					
ANR	4913449	Callee	strcpy		4913427	0					
ANR	4913450	Identifier	strcpy		4913427	0					
ANR	4913451	ArgumentList	category		4913427	1					
ANR	4913452	Argument	category		4913427	0					
ANR	4913453	Identifier	category		4913427	0					
ANR	4913454	Argument	item + 1		4913427	1					
ANR	4913455	AdditiveExpression	item + 1		4913427	0		+			
ANR	4913456	Identifier	item		4913427	0					
ANR	4913457	PrimaryExpression	1		4913427	1					
ANR	4913458	ReturnStatement	return 0 ;	909:8:28783:28791	4913427	1	True				
ANR	4913459	PrimaryExpression	0		4913427	0					
ANR	4913460	ElseStatement	else		4913427	0					
ANR	4913461	CompoundStatement		9:8:268:319	4913427	0					
ANR	4913462	IdentifierDeclStatement	char str [ MAX_STR ] ;	911:8:28846:28863	4913427	0	True				
ANR	4913463	IdentifierDecl	str [ MAX_STR ]		4913427	0					
ANR	4913464	IdentifierDeclType	char [ MAX_STR ]		4913427	0					
ANR	4913465	Identifier	str		4913427	1					
ANR	4913466	Identifier	MAX_STR		4913427	2					
ANR	4913467	IdentifierDeclStatement	char templat [ MAX_TEMPLAT + 1 ] ;	912:8:28873:28902	4913427	1	True				
ANR	4913468	IdentifierDecl	templat [ MAX_TEMPLAT + 1 ]		4913427	0					
ANR	4913469	IdentifierDeclType	char [ MAX_TEMPLAT + 1 ]		4913427	0					
ANR	4913470	Identifier	templat		4913427	1					
ANR	4913471	AdditiveExpression	MAX_TEMPLAT + 1		4913427	2		+			
ANR	4913472	Identifier	MAX_TEMPLAT		4913427	0					
ANR	4913473	PrimaryExpression	1		4913427	1					
ANR	4913474	IdentifierDeclStatement	const char * pat = 0 ;	913:8:28912:28931	4913427	2	True				
ANR	4913475	IdentifierDecl	* pat = 0		4913427	0					
ANR	4913476	IdentifierDeclType	const char *		4913427	0					
ANR	4913477	Identifier	pat		4913427	1					
ANR	4913478	AssignmentExpression	* pat = 0		4913427	2		=			
ANR	4913479	Identifier	pat		4913427	0					
ANR	4913480	PrimaryExpression	0		4913427	1					
ANR	4913481	IdentifierDeclStatement	string_list_t * list = & pconf -> lists . named . resources ;	914:8:28941:28992	4913427	3	True				
ANR	4913482	IdentifierDecl	* list = & pconf -> lists . named . resources		4913427	0					
ANR	4913483	IdentifierDeclType	string_list_t *		4913427	0					
ANR	4913484	Identifier	list		4913427	1					
ANR	4913485	AssignmentExpression	* list = & pconf -> lists . named . resources		4913427	2		=			
ANR	4913486	Identifier	list		4913427	0					
ANR	4913487	UnaryOperationExpression	& pconf -> lists . named . resources		4913427	1					
ANR	4913488	UnaryOperator	&		4913427	0					
ANR	4913489	MemberAccess	pconf -> lists . named . resources		4913427	1					
ANR	4913490	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913491	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913492	Identifier	pconf		4913427	0					
ANR	4913493	Identifier	lists		4913427	1					
ANR	4913494	Identifier	named		4913427	1					
ANR	4913495	Identifier	resources		4913427	1					
ANR	4913496	IfStatement	if ( pconf -> debug )		4913427	4					
ANR	4913497	Condition	pconf -> debug	916:12:29007:29018	4913427	0	True				
ANR	4913498	PtrMemberAccess	pconf -> debug		4913427	0					
ANR	4913499	Identifier	pconf		4913427	0					
ANR	4913500	Identifier	debug		4913427	1					
ANR	4913501	ExpressionStatement	"printf ( ""Adding %s %s;\\n"" , category , item )"	917:12:29033:29074	4913427	1	True				
ANR	4913502	CallExpression	"printf ( ""Adding %s %s;\\n"" , category , item )"		4913427	0					
ANR	4913503	Callee	printf		4913427	0					
ANR	4913504	Identifier	printf		4913427	0					
ANR	4913505	ArgumentList	"""Adding %s %s;\\n"""		4913427	1					
ANR	4913506	Argument	"""Adding %s %s;\\n"""		4913427	0					
ANR	4913507	PrimaryExpression	"""Adding %s %s;\\n"""		4913427	0					
ANR	4913508	Argument	category		4913427	1					
ANR	4913509	Identifier	category		4913427	0					
ANR	4913510	Argument	item		4913427	2					
ANR	4913511	Identifier	item		4913427	0					
ANR	4913512	SwitchStatement	switch ( category [ 0 ] )		4913427	5					
ANR	4913513	Condition	category [ 0 ]	919:16:29161:29171	4913427	0	True				
ANR	4913514	ArrayIndexing	category [ 0 ]		4913427	0					
ANR	4913515	Identifier	category		4913427	0					
ANR	4913516	PrimaryExpression	0		4913427	1					
ANR	4913517	CompoundStatement		14:29:501:501	4913427	1					
ANR	4913518	Statement	define	920:1:29177:29182	4913427	0	True				
ANR	4913519	Statement	IS_CAT	920:8:29184:29189	4913427	1	True				
ANR	4913520	Statement	(	920:14:29190:29190	4913427	2	True				
ANR	4913521	Statement	str	920:15:29191:29193	4913427	3	True				
ANR	4913522	Statement	)	920:18:29194:29194	4913427	4	True				
ANR	4913523	Statement	!	920:20:29196:29196	4913427	5	True				
ANR	4913524	Statement	strcmp	920:21:29197:29202	4913427	6	True				
ANR	4913525	Statement	(	920:27:29203:29203	4913427	7	True				
ANR	4913526	Statement	category	920:28:29204:29211	4913427	8	True				
ANR	4913527	Statement	","	920:36:29212:29212	4913427	9	True				
ANR	4913528	Statement	str	920:38:29214:29216	4913427	10	True				
ANR	4913529	Statement	)	920:41:29217:29217	4913427	11	True				
ANR	4913530	Label	case 'c' :	921:12:29231:29239	4913427	12	True				
ANR	4913531	IfStatement	"if ( ! IS_CAT ( ""comp"" ) )"		4913427	13					
ANR	4913532	Condition	"! IS_CAT ( ""comp"" )"	922:20:29261:29275	4913427	0	True				
ANR	4913533	UnaryOperationExpression	"! IS_CAT ( ""comp"" )"		4913427	0					
ANR	4913534	UnaryOperator	!		4913427	0					
ANR	4913535	CallExpression	"IS_CAT ( ""comp"" )"		4913427	1					
ANR	4913536	Callee	IS_CAT		4913427	0					
ANR	4913537	Identifier	IS_CAT		4913427	0					
ANR	4913538	ArgumentList	"""comp"""		4913427	1					
ANR	4913539	Argument	"""comp"""		4913427	0					
ANR	4913540	PrimaryExpression	"""comp"""		4913427	0					
ANR	4913541	GotoStatement	goto err ;	923:20:29298:29306	4913427	1	True				
ANR	4913542	Identifier	err		4913427	0					
ANR	4913543	ExpressionStatement	"pat = ""compositor_(%scomposite_%%s_type)"""	924:16:29324:29365	4913427	14	True				
ANR	4913544	AssignmentExpression	"pat = ""compositor_(%scomposite_%%s_type)"""		4913427	0		=			
ANR	4913545	Identifier	pat		4913427	0					
ANR	4913546	PrimaryExpression	"""compositor_(%scomposite_%%s_type)"""		4913427	1					
ANR	4913547	ExpressionStatement	list = & pconf -> lists . named . compositors	925:16:29383:29421	4913427	15	True				
ANR	4913548	AssignmentExpression	list = & pconf -> lists . named . compositors		4913427	0		=			
ANR	4913549	Identifier	list		4913427	0					
ANR	4913550	UnaryOperationExpression	& pconf -> lists . named . compositors		4913427	1					
ANR	4913551	UnaryOperator	&		4913427	0					
ANR	4913552	MemberAccess	pconf -> lists . named . compositors		4913427	1					
ANR	4913553	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913554	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913555	Identifier	pconf		4913427	0					
ANR	4913556	Identifier	lists		4913427	1					
ANR	4913557	Identifier	named		4913427	1					
ANR	4913558	Identifier	compositors		4913427	1					
ANR	4913559	GotoStatement	goto pre ;	926:16:29439:29447	4913427	16	True				
ANR	4913560	Identifier	pre		4913427	0					
ANR	4913561	Label	case 'd' :	927:12:29461:29469	4913427	17	True				
ANR	4913562	IfStatement	"if ( IS_CAT ( ""dev"" ) )"		4913427	18					
ANR	4913563	Condition	"IS_CAT ( ""dev"" )"	928:20:29491:29503	4913427	0	True				
ANR	4913564	CallExpression	"IS_CAT ( ""dev"" )"		4913427	0					
ANR	4913565	Callee	IS_CAT		4913427	0					
ANR	4913566	Identifier	IS_CAT		4913427	0					
ANR	4913567	ArgumentList	"""dev"""		4913427	1					
ANR	4913568	Argument	"""dev"""		4913427	0					
ANR	4913569	PrimaryExpression	"""dev"""		4913427	0					
ANR	4913570	ExpressionStatement	"pat = ""device_(%s%%s_device)"""	929:20:29526:29555	4913427	1	True				
ANR	4913571	AssignmentExpression	"pat = ""device_(%s%%s_device)"""		4913427	0		=			
ANR	4913572	Identifier	pat		4913427	0					
ANR	4913573	PrimaryExpression	"""device_(%s%%s_device)"""		4913427	1					
ANR	4913574	ElseStatement	else		4913427	0					
ANR	4913575	IfStatement	"if ( IS_CAT ( ""dev2"" ) )"		4913427	0					
ANR	4913576	Condition	"IS_CAT ( ""dev2"" )"	930:25:29582:29595	4913427	0	True				
ANR	4913577	CallExpression	"IS_CAT ( ""dev2"" )"		4913427	0					
ANR	4913578	Callee	IS_CAT		4913427	0					
ANR	4913579	Identifier	IS_CAT		4913427	0					
ANR	4913580	ArgumentList	"""dev2"""		4913427	1					
ANR	4913581	Argument	"""dev2"""		4913427	0					
ANR	4913582	PrimaryExpression	"""dev2"""		4913427	0					
ANR	4913583	ExpressionStatement	"pat = ""device2_(%s%%s_device)"""	931:20:29618:29648	4913427	1	True				
ANR	4913584	AssignmentExpression	"pat = ""device2_(%s%%s_device)"""		4913427	0		=			
ANR	4913585	Identifier	pat		4913427	0					
ANR	4913586	PrimaryExpression	"""device2_(%s%%s_device)"""		4913427	1					
ANR	4913587	ElseStatement	else		4913427	0					
ANR	4913588	GotoStatement	goto err ;	933:20:29691:29699	4913427	0	True				
ANR	4913589	Identifier	err		4913427	0					
ANR	4913590	ExpressionStatement	list = & pconf -> lists . named . devs	934:16:29717:29748	4913427	19	True				
ANR	4913591	AssignmentExpression	list = & pconf -> lists . named . devs		4913427	0		=			
ANR	4913592	Identifier	list		4913427	0					
ANR	4913593	UnaryOperationExpression	& pconf -> lists . named . devs		4913427	1					
ANR	4913594	UnaryOperator	&		4913427	0					
ANR	4913595	MemberAccess	pconf -> lists . named . devs		4913427	1					
ANR	4913596	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913597	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913598	Identifier	pconf		4913427	0					
ANR	4913599	Identifier	lists		4913427	1					
ANR	4913600	Identifier	named		4913427	1					
ANR	4913601	Identifier	devs		4913427	1					
ANR	4913602	Label	pre :	935:0:29750:29753	4913427	20	True				
ANR	4913603	Identifier	pre		4913427	0					
ANR	4913604	ExpressionStatement	"sprintf ( templat , pat , pconf -> name_prefix )"	935:6:29756:29797	4913427	21	True				
ANR	4913605	CallExpression	"sprintf ( templat , pat , pconf -> name_prefix )"		4913427	0					
ANR	4913606	Callee	sprintf		4913427	0					
ANR	4913607	Identifier	sprintf		4913427	0					
ANR	4913608	ArgumentList	templat		4913427	1					
ANR	4913609	Argument	templat		4913427	0					
ANR	4913610	Identifier	templat		4913427	0					
ANR	4913611	Argument	pat		4913427	1					
ANR	4913612	Identifier	pat		4913427	0					
ANR	4913613	Argument	pconf -> name_prefix		4913427	2					
ANR	4913614	PtrMemberAccess	pconf -> name_prefix		4913427	0					
ANR	4913615	Identifier	pconf		4913427	0					
ANR	4913616	Identifier	name_prefix		4913427	1					
ANR	4913617	ExpressionStatement	pat = templat	936:16:29815:29828	4913427	22	True				
ANR	4913618	AssignmentExpression	pat = templat		4913427	0		=			
ANR	4913619	Identifier	pat		4913427	0					
ANR	4913620	Identifier	templat		4913427	1					
ANR	4913621	BreakStatement	break ;	937:16:29846:29851	4913427	23	True				
ANR	4913622	Label	case 'e' :	938:12:29865:29873	4913427	24	True				
ANR	4913623	IfStatement	"if ( IS_CAT ( ""emulator"" ) )"		4913427	25					
ANR	4913624	Condition	"IS_CAT ( ""emulator"" )"	939:20:29895:29912	4913427	0	True				
ANR	4913625	CallExpression	"IS_CAT ( ""emulator"" )"		4913427	0					
ANR	4913626	Callee	IS_CAT		4913427	0					
ANR	4913627	Identifier	IS_CAT		4913427	0					
ANR	4913628	ArgumentList	"""emulator"""		4913427	1					
ANR	4913629	Argument	"""emulator"""		4913427	0					
ANR	4913630	PrimaryExpression	"""emulator"""		4913427	0					
ANR	4913631	CompoundStatement		34:40:1242:1242	4913427	1					
ANR	4913632	ExpressionStatement	"sprintf ( str , ""emulator_(\\""%s\\"",%u)"" , item , ( uint ) strlen ( item ) )"	940:20:29937:30027	4913427	0	True				
ANR	4913633	CallExpression	"sprintf ( str , ""emulator_(\\""%s\\"",%u)"" , item , ( uint ) strlen ( item ) )"		4913427	0					
ANR	4913634	Callee	sprintf		4913427	0					
ANR	4913635	Identifier	sprintf		4913427	0					
ANR	4913636	ArgumentList	str		4913427	1					
ANR	4913637	Argument	str		4913427	0					
ANR	4913638	Identifier	str		4913427	0					
ANR	4913639	Argument	"""emulator_(\\""%s\\"",%u)"""		4913427	1					
ANR	4913640	PrimaryExpression	"""emulator_(\\""%s\\"",%u)"""		4913427	0					
ANR	4913641	Argument	item		4913427	2					
ANR	4913642	Identifier	item		4913427	0					
ANR	4913643	Argument	( uint ) strlen ( item )		4913427	3					
ANR	4913644	CastExpression	( uint ) strlen ( item )		4913427	0					
ANR	4913645	CastTarget	uint		4913427	0					
ANR	4913646	CallExpression	strlen ( item )		4913427	1					
ANR	4913647	Callee	strlen		4913427	0					
ANR	4913648	Identifier	strlen		4913427	0					
ANR	4913649	ArgumentList	item		4913427	1					
ANR	4913650	Argument	item		4913427	0					
ANR	4913651	Identifier	item		4913427	0					
ANR	4913652	ExpressionStatement	item = str	942:20:30049:30059	4913427	1	True				
ANR	4913653	AssignmentExpression	item = str		4913427	0		=			
ANR	4913654	Identifier	item		4913427	0					
ANR	4913655	Identifier	str		4913427	1					
ANR	4913656	BreakStatement	break ;	943:20:30081:30086	4913427	2	True				
ANR	4913657	GotoStatement	goto err ;	945:16:30122:30130	4913427	26	True				
ANR	4913658	Identifier	err		4913427	0					
ANR	4913659	Label	case 'f' :	946:12:30144:30152	4913427	27	True				
ANR	4913660	IfStatement	"if ( IS_CAT ( ""font"" ) )"		4913427	28					
ANR	4913661	Condition	"IS_CAT ( ""font"" )"	947:20:30174:30187	4913427	0	True				
ANR	4913662	CallExpression	"IS_CAT ( ""font"" )"		4913427	0					
ANR	4913663	Callee	IS_CAT		4913427	0					
ANR	4913664	Identifier	IS_CAT		4913427	0					
ANR	4913665	ArgumentList	"""font"""		4913427	1					
ANR	4913666	Argument	"""font"""		4913427	0					
ANR	4913667	PrimaryExpression	"""font"""		4913427	0					
ANR	4913668	CompoundStatement		42:36:1517:1517	4913427	1					
ANR	4913669	ExpressionStatement	list = & pconf -> lists . named . fonts	948:20:30212:30244	4913427	0	True				
ANR	4913670	AssignmentExpression	list = & pconf -> lists . named . fonts		4913427	0		=			
ANR	4913671	Identifier	list		4913427	0					
ANR	4913672	UnaryOperationExpression	& pconf -> lists . named . fonts		4913427	1					
ANR	4913673	UnaryOperator	&		4913427	0					
ANR	4913674	MemberAccess	pconf -> lists . named . fonts		4913427	1					
ANR	4913675	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913676	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913677	Identifier	pconf		4913427	0					
ANR	4913678	Identifier	lists		4913427	1					
ANR	4913679	Identifier	named		4913427	1					
ANR	4913680	Identifier	fonts		4913427	1					
ANR	4913681	BreakStatement	break ;	949:20:30266:30271	4913427	1	True				
ANR	4913682	ElseStatement	else		4913427	0					
ANR	4913683	IfStatement	"if ( IS_CAT ( ""functiontype"" ) )"		4913427	0					
ANR	4913684	Condition	"IS_CAT ( ""functiontype"" )"	950:27:30300:30321	4913427	0	True				
ANR	4913685	CallExpression	"IS_CAT ( ""functiontype"" )"		4913427	0					
ANR	4913686	Callee	IS_CAT		4913427	0					
ANR	4913687	Identifier	IS_CAT		4913427	0					
ANR	4913688	ArgumentList	"""functiontype"""		4913427	1					
ANR	4913689	Argument	"""functiontype"""		4913427	0					
ANR	4913690	PrimaryExpression	"""functiontype"""		4913427	0					
ANR	4913691	CompoundStatement		45:51:1651:1651	4913427	1					
ANR	4913692	ExpressionStatement	"pat = ""function_type_(%%s,%sbuild_function_%%s)"""	951:20:30346:30394	4913427	0	True				
ANR	4913693	AssignmentExpression	"pat = ""function_type_(%%s,%sbuild_function_%%s)"""		4913427	0		=			
ANR	4913694	Identifier	pat		4913427	0					
ANR	4913695	PrimaryExpression	"""function_type_(%%s,%sbuild_function_%%s)"""		4913427	1					
ANR	4913696	ElseStatement	else		4913427	0					
ANR	4913697	IfStatement	"if ( IS_CAT ( ""fapi"" ) )"		4913427	0					
ANR	4913698	Condition	"IS_CAT ( ""fapi"" )"	952:27:30423:30436	4913427	0	True				
ANR	4913699	CallExpression	"IS_CAT ( ""fapi"" )"		4913427	0					
ANR	4913700	Callee	IS_CAT		4913427	0					
ANR	4913701	Identifier	IS_CAT		4913427	0					
ANR	4913702	ArgumentList	"""fapi"""		4913427	1					
ANR	4913703	Argument	"""fapi"""		4913427	0					
ANR	4913704	PrimaryExpression	"""fapi"""		4913427	0					
ANR	4913705	CompoundStatement		47:43:1766:1766	4913427	1					
ANR	4913706	ExpressionStatement	"pat = ""fapi_(%s%%s_init)"""	953:20:30461:30486	4913427	0	True				
ANR	4913707	AssignmentExpression	"pat = ""fapi_(%s%%s_init)"""		4913427	0		=			
ANR	4913708	Identifier	pat		4913427	0					
ANR	4913709	PrimaryExpression	"""fapi_(%s%%s_init)"""		4913427	1					
ANR	4913710	ElseStatement	else		4913427	0					
ANR	4913711	GotoStatement	goto err ;	955:20:30531:30539	4913427	0	True				
ANR	4913712	Identifier	err		4913427	0					
ANR	4913713	GotoStatement	goto pre ;	956:16:30557:30565	4913427	29	True				
ANR	4913714	Identifier	pre		4913427	0					
ANR	4913715	Label	case 'h' :	957:12:30579:30587	4913427	30	True				
ANR	4913716	IfStatement	"if ( IS_CAT ( ""halftone"" ) )"		4913427	31					
ANR	4913717	Condition	"IS_CAT ( ""halftone"" )"	958:20:30609:30626	4913427	0	True				
ANR	4913718	CallExpression	"IS_CAT ( ""halftone"" )"		4913427	0					
ANR	4913719	Callee	IS_CAT		4913427	0					
ANR	4913720	Identifier	IS_CAT		4913427	0					
ANR	4913721	ArgumentList	"""halftone"""		4913427	1					
ANR	4913722	Argument	"""halftone"""		4913427	0					
ANR	4913723	PrimaryExpression	"""halftone"""		4913427	0					
ANR	4913724	CompoundStatement		53:40:1956:1956	4913427	1					
ANR	4913725	ExpressionStatement	"pat = ""halftone_(%sdht_%%s)"""	959:20:30651:30679	4913427	0	True				
ANR	4913726	AssignmentExpression	"pat = ""halftone_(%sdht_%%s)"""		4913427	0		=			
ANR	4913727	Identifier	pat		4913427	0					
ANR	4913728	PrimaryExpression	"""halftone_(%sdht_%%s)"""		4913427	1					
ANR	4913729	ElseStatement	else		4913427	0					
ANR	4913730	GotoStatement	goto err ;	961:20:30724:30732	4913427	0	True				
ANR	4913731	Identifier	err		4913427	0					
ANR	4913732	GotoStatement	goto pre ;	962:16:30750:30758	4913427	32	True				
ANR	4913733	Identifier	pre		4913427	0					
ANR	4913734	Label	case 'i' :	963:12:30772:30780	4913427	33	True				
ANR	4913735	IfStatement	"if ( IS_CAT ( ""imageclass"" ) )"		4913427	34					
ANR	4913736	Condition	"IS_CAT ( ""imageclass"" )"	964:20:30802:30821	4913427	0	True				
ANR	4913737	CallExpression	"IS_CAT ( ""imageclass"" )"		4913427	0					
ANR	4913738	Callee	IS_CAT		4913427	0					
ANR	4913739	Identifier	IS_CAT		4913427	0					
ANR	4913740	ArgumentList	"""imageclass"""		4913427	1					
ANR	4913741	Argument	"""imageclass"""		4913427	0					
ANR	4913742	PrimaryExpression	"""imageclass"""		4913427	0					
ANR	4913743	CompoundStatement		59:42:2151:2151	4913427	1					
ANR	4913744	ExpressionStatement	list = & pconf -> lists . named . sorted_resources	965:20:30846:30889	4913427	0	True				
ANR	4913745	AssignmentExpression	list = & pconf -> lists . named . sorted_resources		4913427	0		=			
ANR	4913746	Identifier	list		4913427	0					
ANR	4913747	UnaryOperationExpression	& pconf -> lists . named . sorted_resources		4913427	1					
ANR	4913748	UnaryOperator	&		4913427	0					
ANR	4913749	MemberAccess	pconf -> lists . named . sorted_resources		4913427	1					
ANR	4913750	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913751	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913752	Identifier	pconf		4913427	0					
ANR	4913753	Identifier	lists		4913427	1					
ANR	4913754	Identifier	named		4913427	1					
ANR	4913755	Identifier	sorted_resources		4913427	1					
ANR	4913756	ExpressionStatement	"pat = ""image_class_(%simage_class_%%s)"""	966:20:30911:30950	4913427	1	True				
ANR	4913757	AssignmentExpression	"pat = ""image_class_(%simage_class_%%s)"""		4913427	0		=			
ANR	4913758	Identifier	pat		4913427	0					
ANR	4913759	PrimaryExpression	"""image_class_(%simage_class_%%s)"""		4913427	1					
ANR	4913760	ElseStatement	else		4913427	0					
ANR	4913761	IfStatement	"if ( IS_CAT ( ""imagetype"" ) )"		4913427	0					
ANR	4913762	Condition	"IS_CAT ( ""imagetype"" )"	967:27:30979:30997	4913427	0	True				
ANR	4913763	CallExpression	"IS_CAT ( ""imagetype"" )"		4913427	0					
ANR	4913764	Callee	IS_CAT		4913427	0					
ANR	4913765	Identifier	IS_CAT		4913427	0					
ANR	4913766	ArgumentList	"""imagetype"""		4913427	1					
ANR	4913767	Argument	"""imagetype"""		4913427	0					
ANR	4913768	PrimaryExpression	"""imagetype"""		4913427	0					
ANR	4913769	CompoundStatement		62:48:2327:2327	4913427	1					
ANR	4913770	ExpressionStatement	"pat = ""image_type_(%%s,%simage_type_%%s)"""	968:20:31022:31063	4913427	0	True				
ANR	4913771	AssignmentExpression	"pat = ""image_type_(%%s,%simage_type_%%s)"""		4913427	0		=			
ANR	4913772	Identifier	pat		4913427	0					
ANR	4913773	PrimaryExpression	"""image_type_(%%s,%simage_type_%%s)"""		4913427	1					
ANR	4913774	ElseStatement	else		4913427	0					
ANR	4913775	IfStatement	"if ( IS_CAT ( ""include"" ) )"		4913427	0					
ANR	4913776	Condition	"IS_CAT ( ""include"" )"	969:27:31092:31108	4913427	0	True				
ANR	4913777	CallExpression	"IS_CAT ( ""include"" )"		4913427	0					
ANR	4913778	Callee	IS_CAT		4913427	0					
ANR	4913779	Identifier	IS_CAT		4913427	0					
ANR	4913780	ArgumentList	"""include"""		4913427	1					
ANR	4913781	Argument	"""include"""		4913427	0					
ANR	4913782	PrimaryExpression	"""include"""		4913427	0					
ANR	4913783	CompoundStatement		64:46:2438:2438	4913427	1					
ANR	4913784	ExpressionStatement	"strcpy ( str , item )"	970:20:31133:31150	4913427	0	True				
ANR	4913785	CallExpression	"strcpy ( str , item )"		4913427	0					
ANR	4913786	Callee	strcpy		4913427	0					
ANR	4913787	Identifier	strcpy		4913427	0					
ANR	4913788	ArgumentList	str		4913427	1					
ANR	4913789	Argument	str		4913427	0					
ANR	4913790	Identifier	str		4913427	0					
ANR	4913791	Argument	item		4913427	1					
ANR	4913792	Identifier	item		4913427	0					
ANR	4913793	ExpressionStatement	dev_file_name ( str )	971:20:31172:31190	4913427	1	True				
ANR	4913794	CallExpression	dev_file_name ( str )		4913427	0					
ANR	4913795	Callee	dev_file_name		4913427	0					
ANR	4913796	Identifier	dev_file_name		4913427	0					
ANR	4913797	ArgumentList	str		4913427	1					
ANR	4913798	Argument	str		4913427	0					
ANR	4913799	Identifier	str		4913427	0					
ANR	4913800	ReturnStatement	"return read_dev ( pconf , str ) ;"	972:20:31212:31239	4913427	2	True				
ANR	4913801	CallExpression	"read_dev ( pconf , str )"		4913427	0					
ANR	4913802	Callee	read_dev		4913427	0					
ANR	4913803	Identifier	read_dev		4913427	0					
ANR	4913804	ArgumentList	pconf		4913427	1					
ANR	4913805	Argument	pconf		4913427	0					
ANR	4913806	Identifier	pconf		4913427	0					
ANR	4913807	Argument	str		4913427	1					
ANR	4913808	Identifier	str		4913427	0					
ANR	4913809	ElseStatement	else		4913427	0					
ANR	4913810	IfStatement	"if ( IS_CAT ( ""init"" ) )"		4913427	0					
ANR	4913811	Condition	"IS_CAT ( ""init"" )"	973:27:31268:31281	4913427	0	True				
ANR	4913812	CallExpression	"IS_CAT ( ""init"" )"		4913427	0					
ANR	4913813	Callee	IS_CAT		4913427	0					
ANR	4913814	Identifier	IS_CAT		4913427	0					
ANR	4913815	ArgumentList	"""init"""		4913427	1					
ANR	4913816	Argument	"""init"""		4913427	0					
ANR	4913817	PrimaryExpression	"""init"""		4913427	0					
ANR	4913818	CompoundStatement		68:43:2611:2611	4913427	1					
ANR	4913819	ExpressionStatement	"pat = ""init_(%s%%s_init)"""	974:20:31306:31331	4913427	0	True				
ANR	4913820	AssignmentExpression	"pat = ""init_(%s%%s_init)"""		4913427	0		=			
ANR	4913821	Identifier	pat		4913427	0					
ANR	4913822	PrimaryExpression	"""init_(%s%%s_init)"""		4913427	1					
ANR	4913823	ElseStatement	else		4913427	0					
ANR	4913824	IfStatement	"if ( IS_CAT ( ""iodev"" ) )"		4913427	0					
ANR	4913825	Condition	"IS_CAT ( ""iodev"" )"	975:27:31360:31374	4913427	0	True				
ANR	4913826	CallExpression	"IS_CAT ( ""iodev"" )"		4913427	0					
ANR	4913827	Callee	IS_CAT		4913427	0					
ANR	4913828	Identifier	IS_CAT		4913427	0					
ANR	4913829	ArgumentList	"""iodev"""		4913427	1					
ANR	4913830	Argument	"""iodev"""		4913427	0					
ANR	4913831	PrimaryExpression	"""iodev"""		4913427	0					
ANR	4913832	CompoundStatement		70:44:2704:2704	4913427	1					
ANR	4913833	ExpressionStatement	"pat = ""io_device_(%siodev_%%s)"""	976:20:31399:31430	4913427	0	True				
ANR	4913834	AssignmentExpression	"pat = ""io_device_(%siodev_%%s)"""		4913427	0		=			
ANR	4913835	Identifier	pat		4913427	0					
ANR	4913836	PrimaryExpression	"""io_device_(%siodev_%%s)"""		4913427	1					
ANR	4913837	ElseStatement	else		4913427	0					
ANR	4913838	GotoStatement	goto err ;	978:20:31475:31483	4913427	0	True				
ANR	4913839	Identifier	err		4913427	0					
ANR	4913840	GotoStatement	goto pre ;	979:16:31501:31509	4913427	35	True				
ANR	4913841	Identifier	pre		4913427	0					
ANR	4913842	Label	case 'l' :	980:12:31523:31531	4913427	36	True				
ANR	4913843	IfStatement	"if ( IS_CAT ( ""lib"" ) )"		4913427	37					
ANR	4913844	Condition	"IS_CAT ( ""lib"" )"	981:20:31553:31565	4913427	0	True				
ANR	4913845	CallExpression	"IS_CAT ( ""lib"" )"		4913427	0					
ANR	4913846	Callee	IS_CAT		4913427	0					
ANR	4913847	Identifier	IS_CAT		4913427	0					
ANR	4913848	ArgumentList	"""lib"""		4913427	1					
ANR	4913849	Argument	"""lib"""		4913427	0					
ANR	4913850	PrimaryExpression	"""lib"""		4913427	0					
ANR	4913851	CompoundStatement		76:35:2895:2895	4913427	1					
ANR	4913852	ExpressionStatement	list = & pconf -> lists . named . libs	982:20:31590:31621	4913427	0	True				
ANR	4913853	AssignmentExpression	list = & pconf -> lists . named . libs		4913427	0		=			
ANR	4913854	Identifier	list		4913427	0					
ANR	4913855	UnaryOperationExpression	& pconf -> lists . named . libs		4913427	1					
ANR	4913856	UnaryOperator	&		4913427	0					
ANR	4913857	MemberAccess	pconf -> lists . named . libs		4913427	1					
ANR	4913858	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913859	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913860	Identifier	pconf		4913427	0					
ANR	4913861	Identifier	lists		4913427	1					
ANR	4913862	Identifier	named		4913427	1					
ANR	4913863	Identifier	libs		4913427	1					
ANR	4913864	BreakStatement	break ;	983:20:31643:31648	4913427	1	True				
ANR	4913865	ElseStatement	else		4913427	0					
ANR	4913866	IfStatement	"if ( IS_CAT ( ""libpath"" ) )"		4913427	0					
ANR	4913867	Condition	"IS_CAT ( ""libpath"" )"	984:27:31677:31693	4913427	0	True				
ANR	4913868	CallExpression	"IS_CAT ( ""libpath"" )"		4913427	0					
ANR	4913869	Callee	IS_CAT		4913427	0					
ANR	4913870	Identifier	IS_CAT		4913427	0					
ANR	4913871	ArgumentList	"""libpath"""		4913427	1					
ANR	4913872	Argument	"""libpath"""		4913427	0					
ANR	4913873	PrimaryExpression	"""libpath"""		4913427	0					
ANR	4913874	CompoundStatement		79:46:3023:3023	4913427	1					
ANR	4913875	ExpressionStatement	list = & pconf -> lists . named . libpaths	985:20:31718:31753	4913427	0	True				
ANR	4913876	AssignmentExpression	list = & pconf -> lists . named . libpaths		4913427	0		=			
ANR	4913877	Identifier	list		4913427	0					
ANR	4913878	UnaryOperationExpression	& pconf -> lists . named . libpaths		4913427	1					
ANR	4913879	UnaryOperator	&		4913427	0					
ANR	4913880	MemberAccess	pconf -> lists . named . libpaths		4913427	1					
ANR	4913881	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913882	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913883	Identifier	pconf		4913427	0					
ANR	4913884	Identifier	lists		4913427	1					
ANR	4913885	Identifier	named		4913427	1					
ANR	4913886	Identifier	libpaths		4913427	1					
ANR	4913887	BreakStatement	break ;	986:20:31775:31780	4913427	1	True				
ANR	4913888	ElseStatement	else		4913427	0					
ANR	4913889	IfStatement	"if ( IS_CAT ( ""link"" ) )"		4913427	0					
ANR	4913890	Condition	"IS_CAT ( ""link"" )"	987:27:31809:31822	4913427	0	True				
ANR	4913891	CallExpression	"IS_CAT ( ""link"" )"		4913427	0					
ANR	4913892	Callee	IS_CAT		4913427	0					
ANR	4913893	Identifier	IS_CAT		4913427	0					
ANR	4913894	ArgumentList	"""link"""		4913427	1					
ANR	4913895	Argument	"""link"""		4913427	0					
ANR	4913896	PrimaryExpression	"""link"""		4913427	0					
ANR	4913897	CompoundStatement		82:43:3152:3152	4913427	1					
ANR	4913898	ExpressionStatement	list = & pconf -> lists . named . links	988:20:31847:31879	4913427	0	True				
ANR	4913899	AssignmentExpression	list = & pconf -> lists . named . links		4913427	0		=			
ANR	4913900	Identifier	list		4913427	0					
ANR	4913901	UnaryOperationExpression	& pconf -> lists . named . links		4913427	1					
ANR	4913902	UnaryOperator	&		4913427	0					
ANR	4913903	MemberAccess	pconf -> lists . named . links		4913427	1					
ANR	4913904	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913905	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913906	Identifier	pconf		4913427	0					
ANR	4913907	Identifier	lists		4913427	1					
ANR	4913908	Identifier	named		4913427	1					
ANR	4913909	Identifier	links		4913427	1					
ANR	4913910	BreakStatement	break ;	989:20:31901:31906	4913427	1	True				
ANR	4913911	GotoStatement	goto err ;	991:16:31942:31950	4913427	38	True				
ANR	4913912	Identifier	err		4913427	0					
ANR	4913913	Label	case 'o' :	992:12:31964:31972	4913427	39	True				
ANR	4913914	IfStatement	"if ( IS_CAT ( ""obj"" ) )"		4913427	40					
ANR	4913915	Condition	"IS_CAT ( ""obj"" )"	993:20:31994:32006	4913427	0	True				
ANR	4913916	CallExpression	"IS_CAT ( ""obj"" )"		4913427	0					
ANR	4913917	Callee	IS_CAT		4913427	0					
ANR	4913918	Identifier	IS_CAT		4913427	0					
ANR	4913919	ArgumentList	"""obj"""		4913427	1					
ANR	4913920	Argument	"""obj"""		4913427	0					
ANR	4913921	PrimaryExpression	"""obj"""		4913427	0					
ANR	4913922	CompoundStatement		88:35:3336:3336	4913427	1					
ANR	4913923	ExpressionStatement	list = & pconf -> lists . named . objs	994:20:32031:32062	4913427	0	True				
ANR	4913924	AssignmentExpression	list = & pconf -> lists . named . objs		4913427	0		=			
ANR	4913925	Identifier	list		4913427	0					
ANR	4913926	UnaryOperationExpression	& pconf -> lists . named . objs		4913427	1					
ANR	4913927	UnaryOperator	&		4913427	0					
ANR	4913928	MemberAccess	pconf -> lists . named . objs		4913427	1					
ANR	4913929	MemberAccess	pconf -> lists . named		4913427	0					
ANR	4913930	PtrMemberAccess	pconf -> lists		4913427	0					
ANR	4913931	Identifier	pconf		4913427	0					
ANR	4913932	Identifier	lists		4913427	1					
ANR	4913933	Identifier	named		4913427	1					
ANR	4913934	Identifier	objs		4913427	1					
ANR	4913935	ExpressionStatement	"strncpy ( templat , pconf -> file_prefix , MAX_TEMPLAT )"	995:20:32084:32133	4913427	1	True				
ANR	4913936	CallExpression	"strncpy ( templat , pconf -> file_prefix , MAX_TEMPLAT )"		4913427	0					
ANR	4913937	Callee	strncpy		4913427	0					
ANR	4913938	Identifier	strncpy		4913427	0					
ANR	4913939	ArgumentList	templat		4913427	1					
ANR	4913940	Argument	templat		4913427	0					
ANR	4913941	Identifier	templat		4913427	0					
ANR	4913942	Argument	pconf -> file_prefix		4913427	1					
ANR	4913943	PtrMemberAccess	pconf -> file_prefix		4913427	0					
ANR	4913944	Identifier	pconf		4913427	0					
ANR	4913945	Identifier	file_prefix		4913427	1					
ANR	4913946	Argument	MAX_TEMPLAT		4913427	2					
ANR	4913947	Identifier	MAX_TEMPLAT		4913427	0					
ANR	4913948	ExpressionStatement	"strcat ( templat , ""%s"" )"	996:20:32155:32176	4913427	2	True				
ANR	4913949	CallExpression	"strcat ( templat , ""%s"" )"		4913427	0					
ANR	4913950	Callee	strcat		4913427	0					
ANR	4913951	Identifier	strcat		4913427	0					
ANR	4913952	ArgumentList	templat		4913427	1					
ANR	4913953	Argument	templat		4913427	0					
ANR	4913954	Identifier	templat		4913427	0					
ANR	4913955	Argument	"""%s"""		4913427	1					
ANR	4913956	PrimaryExpression	"""%s"""		4913427	0					
ANR	4913957	ExpressionStatement	pat = templat	997:20:32198:32211	4913427	3	True				
ANR	4913958	AssignmentExpression	pat = templat		4913427	0		=			
ANR	4913959	Identifier	pat		4913427	0					
ANR	4913960	Identifier	templat		4913427	1					
ANR	4913961	BreakStatement	break ;	998:20:32233:32238	4913427	4	True				
ANR	4913962	IfStatement	"if ( IS_CAT ( ""oper"" ) )"		4913427	41					
ANR	4913963	Condition	"IS_CAT ( ""oper"" )"	1000:20:32278:32291	4913427	0	True				
ANR	4913964	CallExpression	"IS_CAT ( ""oper"" )"		4913427	0					
ANR	4913965	Callee	IS_CAT		4913427	0					
ANR	4913966	Identifier	IS_CAT		4913427	0					
ANR	4913967	ArgumentList	"""oper"""		4913427	1					
ANR	4913968	Argument	"""oper"""		4913427	0					
ANR	4913969	PrimaryExpression	"""oper"""		4913427	0					
ANR	4913970	CompoundStatement		95:36:3621:3621	4913427	1					
ANR	4913971	ExpressionStatement	"pat = ""oper_(%s_op_defs)"""	1001:20:32316:32341	4913427	0	True				
ANR	4913972	AssignmentExpression	"pat = ""oper_(%s_op_defs)"""		4913427	0		=			
ANR	4913973	Identifier	pat		4913427	0					
ANR	4913974	PrimaryExpression	"""oper_(%s_op_defs)"""		4913427	1					
ANR	4913975	BreakStatement	break ;	1002:20:32363:32368	4913427	1	True				
ANR	4913976	GotoStatement	goto err ;	1004:16:32404:32412	4913427	42	True				
ANR	4913977	Identifier	err		4913427	0					
ANR	4913978	Label	case 'p' :	1005:12:32426:32434	4913427	43	True				
ANR	4913979	IfStatement	"if ( IS_CAT ( ""ps"" ) )"		4913427	44					
ANR	4913980	Condition	"IS_CAT ( ""ps"" )"	1006:20:32456:32467	4913427	0	True				
ANR	4913981	CallExpression	"IS_CAT ( ""ps"" )"		4913427	0					
ANR	4913982	Callee	IS_CAT		4913427	0					
ANR	4913983	Identifier	IS_CAT		4913427	0					
ANR	4913984	ArgumentList	"""ps"""		4913427	1					
ANR	4913985	Argument	"""ps"""		4913427	0					
ANR	4913986	PrimaryExpression	"""ps"""		4913427	0					
ANR	4913987	CompoundStatement		101:34:3797:3797	4913427	1					
ANR	4913988	ExpressionStatement	"sprintf ( str , ""psfile_(\\""%s.ps\\"",%u)"" , item , ( uint ) ( strlen ( item ) + 3 ) )"	1007:20:32492:32589	4913427	0	True				
ANR	4913989	CallExpression	"sprintf ( str , ""psfile_(\\""%s.ps\\"",%u)"" , item , ( uint ) ( strlen ( item ) + 3 ) )"		4913427	0					
ANR	4913990	Callee	sprintf		4913427	0					
ANR	4913991	Identifier	sprintf		4913427	0					
ANR	4913992	ArgumentList	str		4913427	1					
ANR	4913993	Argument	str		4913427	0					
ANR	4913994	Identifier	str		4913427	0					
ANR	4913995	Argument	"""psfile_(\\""%s.ps\\"",%u)"""		4913427	1					
ANR	4913996	PrimaryExpression	"""psfile_(\\""%s.ps\\"",%u)"""		4913427	0					
ANR	4913997	Argument	item		4913427	2					
ANR	4913998	Identifier	item		4913427	0					
ANR	4913999	Argument	( uint ) ( strlen ( item ) + 3 )		4913427	3					
ANR	4914000	CastExpression	( uint ) ( strlen ( item ) + 3 )		4913427	0					
ANR	4914001	CastTarget	uint		4913427	0					
ANR	4914002	AdditiveExpression	strlen ( item ) + 3		4913427	1		+			
ANR	4914003	CallExpression	strlen ( item )		4913427	0					
ANR	4914004	Callee	strlen		4913427	0					
ANR	4914005	Identifier	strlen		4913427	0					
ANR	4914006	ArgumentList	item		4913427	1					
ANR	4914007	Argument	item		4913427	0					
ANR	4914008	Identifier	item		4913427	0					
ANR	4914009	PrimaryExpression	3		4913427	1					
ANR	4914010	ExpressionStatement	item = str	1009:20:32611:32621	4913427	1	True				
ANR	4914011	AssignmentExpression	item = str		4913427	0		=			
ANR	4914012	Identifier	item		4913427	0					
ANR	4914013	Identifier	str		4913427	1					
ANR	4914014	BreakStatement	break ;	1010:20:32643:32648	4913427	2	True				
ANR	4914015	ElseStatement	else		4913427	0					
ANR	4914016	IfStatement	"if ( IS_CAT ( ""plugin"" ) )"		4913427	0					
ANR	4914017	Condition	"IS_CAT ( ""plugin"" )"	1011:27:32677:32692	4913427	0	True				
ANR	4914018	CallExpression	"IS_CAT ( ""plugin"" )"		4913427	0					
ANR	4914019	Callee	IS_CAT		4913427	0					
ANR	4914020	Identifier	IS_CAT		4913427	0					
ANR	4914021	ArgumentList	"""plugin"""		4913427	1					
ANR	4914022	Argument	"""plugin"""		4913427	0					
ANR	4914023	PrimaryExpression	"""plugin"""		4913427	0					
ANR	4914024	CompoundStatement		106:45:4022:4022	4913427	1					
ANR	4914025	ExpressionStatement	"pat = ""plugin_(%s%%s_instantiate)"""	1012:20:32717:32751	4913427	0	True				
ANR	4914026	AssignmentExpression	"pat = ""plugin_(%s%%s_instantiate)"""		4913427	0		=			
ANR	4914027	Identifier	pat		4913427	0					
ANR	4914028	PrimaryExpression	"""plugin_(%s%%s_instantiate)"""		4913427	1					
ANR	4914029	GotoStatement	goto pre ;	1013:20:32773:32781	4913427	1	True				
ANR	4914030	Identifier	pre		4913427	0					
ANR	4914031	GotoStatement	goto err ;	1015:16:32817:32825	4913427	45	True				
ANR	4914032	Identifier	err		4913427	0					
ANR	4914033	Label	case 'r' :	1016:12:32839:32847	4913427	46	True				
ANR	4914034	IfStatement	"if ( IS_CAT ( ""replace"" ) )"		4913427	47					
ANR	4914035	Condition	"IS_CAT ( ""replace"" )"	1017:20:32869:32885	4913427	0	True				
ANR	4914036	CallExpression	"IS_CAT ( ""replace"" )"		4913427	0					
ANR	4914037	Callee	IS_CAT		4913427	0					
ANR	4914038	Identifier	IS_CAT		4913427	0					
ANR	4914039	ArgumentList	"""replace"""		4913427	1					
ANR	4914040	Argument	"""replace"""		4913427	0					
ANR	4914041	PrimaryExpression	"""replace"""		4913427	0					
ANR	4914042	CompoundStatement		112:39:4215:4215	4913427	1					
ANR	4914043	ExpressionStatement	list = & pconf -> replaces	1018:20:32910:32933	4913427	0	True				
ANR	4914044	AssignmentExpression	list = & pconf -> replaces		4913427	0		=			
ANR	4914045	Identifier	list		4913427	0					
ANR	4914046	UnaryOperationExpression	& pconf -> replaces		4913427	1					
ANR	4914047	UnaryOperator	&		4913427	0					
ANR	4914048	PtrMemberAccess	pconf -> replaces		4913427	1					
ANR	4914049	Identifier	pconf		4913427	0					
ANR	4914050	Identifier	replaces		4913427	1					
ANR	4914051	BreakStatement	break ;	1019:20:32955:32960	4913427	1	True				
ANR	4914052	GotoStatement	goto err ;	1021:16:32996:33004	4913427	48	True				
ANR	4914053	Identifier	err		4913427	0					
ANR	4914054	Statement	undef	1022:1:33007:33011	4913427	49	True				
ANR	4914055	Statement	IS_CAT	1022:7:33013:33018	4913427	50	True				
ANR	4914056	Label	default :	1023:12:33032:33039	4913427	51	True				
ANR	4914057	Identifier	default		4913427	0					
ANR	4914058	Label	err :	1024:0:33041:33044	4913427	52	True				
ANR	4914059	Identifier	err		4913427	0					
ANR	4914060	ExpressionStatement	"fprintf ( stderr , ""Definition not recognized: %s %s.\\n"" , category , item )"	1024:6:33047:33141	4913427	53	True				
ANR	4914061	CallExpression	"fprintf ( stderr , ""Definition not recognized: %s %s.\\n"" , category , item )"		4913427	0					
ANR	4914062	Callee	fprintf		4913427	0					
ANR	4914063	Identifier	fprintf		4913427	0					
ANR	4914064	ArgumentList	stderr		4913427	1					
ANR	4914065	Argument	stderr		4913427	0					
ANR	4914066	Identifier	stderr		4913427	0					
ANR	4914067	Argument	"""Definition not recognized: %s %s.\\n"""		4913427	1					
ANR	4914068	PrimaryExpression	"""Definition not recognized: %s %s.\\n"""		4913427	0					
ANR	4914069	Argument	category		4913427	2					
ANR	4914070	Identifier	category		4913427	0					
ANR	4914071	Argument	item		4913427	3					
ANR	4914072	Identifier	item		4913427	0					
ANR	4914073	ExpressionStatement	exit ( 1 )	1026:16:33159:33166	4913427	54	True				
ANR	4914074	CallExpression	exit ( 1 )		4913427	0					
ANR	4914075	Callee	exit		4913427	0					
ANR	4914076	Identifier	exit		4913427	0					
ANR	4914077	ArgumentList	1		4913427	1					
ANR	4914078	Argument	1		4913427	0					
ANR	4914079	PrimaryExpression	1		4913427	0					
ANR	4914080	IfStatement	if ( pat )		4913427	6					
ANR	4914081	Condition	pat	1028:12:33190:33192	4913427	0	True				
ANR	4914082	Identifier	pat		4913427	0					
ANR	4914083	CompoundStatement		123:17:4522:4522	4913427	1					
ANR	4914084	ExpressionStatement	"sprintf ( str , pat , item , item )"	1029:12:33209:33238	4913427	0	True				
ANR	4914085	CallExpression	"sprintf ( str , pat , item , item )"		4913427	0					
ANR	4914086	Callee	sprintf		4913427	0					
ANR	4914087	Identifier	sprintf		4913427	0					
ANR	4914088	ArgumentList	str		4913427	1					
ANR	4914089	Argument	str		4913427	0					
ANR	4914090	Identifier	str		4913427	0					
ANR	4914091	Argument	pat		4913427	1					
ANR	4914092	Identifier	pat		4913427	0					
ANR	4914093	Argument	item		4913427	2					
ANR	4914094	Identifier	item		4913427	0					
ANR	4914095	Argument	item		4913427	3					
ANR	4914096	Identifier	item		4913427	0					
ANR	4914097	ExpressionStatement	assert ( strlen ( str ) < MAX_STR )	1030:12:33252:33281	4913427	1	True				
ANR	4914098	CallExpression	assert ( strlen ( str ) < MAX_STR )		4913427	0					
ANR	4914099	Callee	assert		4913427	0					
ANR	4914100	Identifier	assert		4913427	0					
ANR	4914101	ArgumentList	strlen ( str ) < MAX_STR		4913427	1					
ANR	4914102	Argument	strlen ( str ) < MAX_STR		4913427	0					
ANR	4914103	RelationalExpression	strlen ( str ) < MAX_STR		4913427	0		<			
ANR	4914104	CallExpression	strlen ( str )		4913427	0					
ANR	4914105	Callee	strlen		4913427	0					
ANR	4914106	Identifier	strlen		4913427	0					
ANR	4914107	ArgumentList	str		4913427	1					
ANR	4914108	Argument	str		4913427	0					
ANR	4914109	Identifier	str		4913427	0					
ANR	4914110	Identifier	MAX_STR		4913427	1					
ANR	4914111	ExpressionStatement	"add_item ( list , str , file_index )"	1031:12:33295:33326	4913427	2	True				
ANR	4914112	CallExpression	"add_item ( list , str , file_index )"		4913427	0					
ANR	4914113	Callee	add_item		4913427	0					
ANR	4914114	Identifier	add_item		4913427	0					
ANR	4914115	ArgumentList	list		4913427	1					
ANR	4914116	Argument	list		4913427	0					
ANR	4914117	Identifier	list		4913427	0					
ANR	4914118	Argument	str		4913427	1					
ANR	4914119	Identifier	str		4913427	0					
ANR	4914120	Argument	file_index		4913427	2					
ANR	4914121	Identifier	file_index		4913427	0					
ANR	4914122	ElseStatement	else		4913427	0					
ANR	4914123	ExpressionStatement	"add_item ( list , item , file_index )"	1033:12:33355:33387	4913427	0	True				
ANR	4914124	CallExpression	"add_item ( list , item , file_index )"		4913427	0					
ANR	4914125	Callee	add_item		4913427	0					
ANR	4914126	Identifier	add_item		4913427	0					
ANR	4914127	ArgumentList	list		4913427	1					
ANR	4914128	Argument	list		4913427	0					
ANR	4914129	Identifier	list		4913427	0					
ANR	4914130	Argument	item		4913427	1					
ANR	4914131	Identifier	item		4913427	0					
ANR	4914132	Argument	file_index		4913427	2					
ANR	4914133	Identifier	file_index		4913427	0					
ANR	4914134	ReturnStatement	return list -> mode ;	1034:8:33397:33414	4913427	7	True				
ANR	4914135	PtrMemberAccess	list -> mode		4913427	0					
ANR	4914136	Identifier	list		4913427	0					
ANR	4914137	Identifier	mode		4913427	1					
ANR	4914138	ReturnType	int		4913427	1					
ANR	4914139	Identifier	add_entry		4913427	2					
ANR	4914140	ParameterList	"config_t * pconf , char * category , const char * item , int file_index"		4913427	3					
ANR	4914141	Parameter	config_t * pconf	905:10:28604:28619	4913427	0	True				
ANR	4914142	ParameterType	config_t *		4913427	0					
ANR	4914143	Identifier	pconf		4913427	1					
ANR	4914144	Parameter	char * category	905:28:28622:28635	4913427	1	True				
ANR	4914145	ParameterType	char *		4913427	0					
ANR	4914146	Identifier	category		4913427	1					
ANR	4914147	Parameter	const char * item	905:44:28638:28653	4913427	2	True				
ANR	4914148	ParameterType	const char *		4913427	0					
ANR	4914149	Identifier	item		4913427	1					
ANR	4914150	Parameter	int file_index	905:62:28656:28669	4913427	3	True				
ANR	4914151	ParameterType	int		4913427	0					
ANR	4914152	Identifier	file_index		4913427	1					
ANR	4914153	CFGEntryNode	ENTRY		4913427		True				
ANR	4914154	CFGExitNode	EXIT		4913427		True				
ANR	4914155	Symbol	MAX_TEMPLAT		4913427						
ANR	4914156	Symbol	pconf -> debug		4913427						
ANR	4914157	Symbol	& pconf -> lists . named . compositors		4913427						
ANR	4914158	Symbol	islower		4913427						
ANR	4914159	Symbol	& pconf -> lists . named		4913427						
ANR	4914160	Symbol	& pconf -> lists . named . libs		4913427						
ANR	4914161	Symbol	& pconf -> lists . named . links		4913427						
ANR	4914162	Symbol	pconf		4913427						
ANR	4914163	Symbol	& pconf -> lists . named . resources		4913427						
ANR	4914164	Symbol	file_index		4913427						
ANR	4914165	Symbol	strlen		4913427						
ANR	4914166	Symbol	* item		4913427						
ANR	4914167	Symbol	& pconf -> lists		4913427						
ANR	4914168	Symbol	pconf -> lists		4913427						
ANR	4914169	Symbol	& pconf -> lists . named . objs		4913427						
ANR	4914170	Symbol	& pconf -> lists . named . libpaths		4913427						
ANR	4914171	Symbol	pconf -> name_prefix		4913427						
ANR	4914172	Symbol	item		4913427						
ANR	4914173	Symbol	pat		4913427						
ANR	4914174	Symbol	read_dev		4913427						
ANR	4914175	Symbol	* pconf		4913427						
ANR	4914176	Symbol	* category		4913427						
ANR	4914177	Symbol	& pconf -> lists . named . sorted_resources		4913427						
ANR	4914178	Symbol	templat		4913427						
ANR	4914179	Symbol	list		4913427						
ANR	4914180	Symbol	stderr		4913427						
ANR	4914181	Symbol	IS_CAT		4913427						
ANR	4914182	Symbol	& pconf -> lists . named . fonts		4913427						
ANR	4914183	Symbol	list -> mode		4913427						
ANR	4914184	Symbol	str		4913427						
ANR	4914185	Symbol	pconf -> file_prefix		4913427						
ANR	4914186	Symbol	* list		4913427						
ANR	4914187	Symbol	& pconf -> replaces		4913427						
ANR	4914188	Symbol	MAX_STR		4913427						
ANR	4914189	Symbol	& pconf -> lists . named . devs		4913427						
ANR	4914190	Symbol	category		4913427						
ANR	4914191	Symbol	pconf -> lists . named		4913427						
ANR	4914192	Function	add_item	1039:0:33454:34377							
ANR	4914193	FunctionDef	"add_item (string_list_t * list , const char * str , int file_index)"		4914192	0					
ANR	4914194	CompoundStatement		1041:0:33534:34377	4914192	0					
ANR	4914195	IdentifierDeclStatement	"char * rstr = mmalloc ( strlen ( str ) + 1 , ""add_item(rstr)"" ) ;"	1042:4:33540:33595	4914192	0	True				
ANR	4914196	IdentifierDecl	"* rstr = mmalloc ( strlen ( str ) + 1 , ""add_item(rstr)"" )"		4914192	0					
ANR	4914197	IdentifierDeclType	char *		4914192	0					
ANR	4914198	Identifier	rstr		4914192	1					
ANR	4914199	AssignmentExpression	"* rstr = mmalloc ( strlen ( str ) + 1 , ""add_item(rstr)"" )"		4914192	2		=			
ANR	4914200	Identifier	rstr		4914192	0					
ANR	4914201	CallExpression	"mmalloc ( strlen ( str ) + 1 , ""add_item(rstr)"" )"		4914192	1					
ANR	4914202	Callee	mmalloc		4914192	0					
ANR	4914203	Identifier	mmalloc		4914192	0					
ANR	4914204	ArgumentList	strlen ( str ) + 1		4914192	1					
ANR	4914205	Argument	strlen ( str ) + 1		4914192	0					
ANR	4914206	AdditiveExpression	strlen ( str ) + 1		4914192	0		+			
ANR	4914207	CallExpression	strlen ( str )		4914192	0					
ANR	4914208	Callee	strlen		4914192	0					
ANR	4914209	Identifier	strlen		4914192	0					
ANR	4914210	ArgumentList	str		4914192	1					
ANR	4914211	Argument	str		4914192	0					
ANR	4914212	Identifier	str		4914192	0					
ANR	4914213	PrimaryExpression	1		4914192	1					
ANR	4914214	Argument	"""add_item(rstr)"""		4914192	1					
ANR	4914215	PrimaryExpression	"""add_item(rstr)"""		4914192	0					
ANR	4914216	IdentifierDeclStatement	int count = list -> count ;	1043:4:33601:33624	4914192	1	True				
ANR	4914217	IdentifierDecl	count = list -> count		4914192	0					
ANR	4914218	IdentifierDeclType	int		4914192	0					
ANR	4914219	Identifier	count		4914192	1					
ANR	4914220	AssignmentExpression	count = list -> count		4914192	2		=			
ANR	4914221	Identifier	count		4914192	0					
ANR	4914222	PtrMemberAccess	list -> count		4914192	1					
ANR	4914223	Identifier	list		4914192	0					
ANR	4914224	Identifier	count		4914192	1					
ANR	4914225	IdentifierDeclStatement	string_item_t * item ;	1044:4:33630:33649	4914192	2	True				
ANR	4914226	IdentifierDecl	* item		4914192	0					
ANR	4914227	IdentifierDeclType	string_item_t *		4914192	0					
ANR	4914228	Identifier	item		4914192	1					
ANR	4914229	IfStatement	if ( count >= list -> max_count )		4914192	3					
ANR	4914230	Condition	count >= list -> max_count	1046:8:33660:33683	4914192	0	True				
ANR	4914231	RelationalExpression	count >= list -> max_count		4914192	0		>=			
ANR	4914232	Identifier	count		4914192	0					
ANR	4914233	PtrMemberAccess	list -> max_count		4914192	1					
ANR	4914234	Identifier	list		4914192	0					
ANR	4914235	Identifier	max_count		4914192	1					
ANR	4914236	CompoundStatement		6:34:151:151	4914192	1					
ANR	4914237	ExpressionStatement	list -> max_count <<= 1	1047:8:33696:33717	4914192	0	True				
ANR	4914238	AssignmentExpression	list -> max_count <<= 1		4914192	0		<<=			
ANR	4914239	PtrMemberAccess	list -> max_count		4914192	0					
ANR	4914240	Identifier	list		4914192	0					
ANR	4914241	Identifier	max_count		4914192	1					
ANR	4914242	PrimaryExpression	1		4914192	1					
ANR	4914243	IfStatement	if ( list -> max_count < 20 )		4914192	1					
ANR	4914244	Condition	list -> max_count < 20	1048:12:33731:33750	4914192	0	True				
ANR	4914245	RelationalExpression	list -> max_count < 20		4914192	0		<			
ANR	4914246	PtrMemberAccess	list -> max_count		4914192	0					
ANR	4914247	Identifier	list		4914192	0					
ANR	4914248	Identifier	max_count		4914192	1					
ANR	4914249	PrimaryExpression	20		4914192	1					
ANR	4914250	ExpressionStatement	list -> max_count = 20	1049:12:33765:33785	4914192	1	True				
ANR	4914251	AssignmentExpression	list -> max_count = 20		4914192	0		=			
ANR	4914252	PtrMemberAccess	list -> max_count		4914192	0					
ANR	4914253	Identifier	list		4914192	0					
ANR	4914254	Identifier	max_count		4914192	1					
ANR	4914255	PrimaryExpression	20		4914192	1					
ANR	4914256	ExpressionStatement	"list -> items = ( string_item_t * ) mrealloc ( list -> items , ( list -> max_count >> 1 ) * sizeof ( string_item_t ) , list -> max_count * sizeof ( string_item_t ) , ""add_item(list->items)"" )"	1050:8:33795:34159	4914192	2	True				
ANR	4914257	AssignmentExpression	"list -> items = ( string_item_t * ) mrealloc ( list -> items , ( list -> max_count >> 1 ) * sizeof ( string_item_t ) , list -> max_count * sizeof ( string_item_t ) , ""add_item(list->items)"" )"		4914192	0		=			
ANR	4914258	PtrMemberAccess	list -> items		4914192	0					
ANR	4914259	Identifier	list		4914192	0					
ANR	4914260	Identifier	items		4914192	1					
ANR	4914261	CastExpression	"( string_item_t * ) mrealloc ( list -> items , ( list -> max_count >> 1 ) * sizeof ( string_item_t ) , list -> max_count * sizeof ( string_item_t ) , ""add_item(list->items)"" )"		4914192	1					
ANR	4914262	CastTarget	string_item_t *		4914192	0					
ANR	4914263	CallExpression	"mrealloc ( list -> items , ( list -> max_count >> 1 ) * sizeof ( string_item_t ) , list -> max_count * sizeof ( string_item_t ) , ""add_item(list->items)"" )"		4914192	1					
ANR	4914264	Callee	mrealloc		4914192	0					
ANR	4914265	Identifier	mrealloc		4914192	0					
ANR	4914266	ArgumentList	list -> items		4914192	1					
ANR	4914267	Argument	list -> items		4914192	0					
ANR	4914268	PtrMemberAccess	list -> items		4914192	0					
ANR	4914269	Identifier	list		4914192	0					
ANR	4914270	Identifier	items		4914192	1					
ANR	4914271	Argument	( list -> max_count >> 1 ) * sizeof ( string_item_t )		4914192	1					
ANR	4914272	MultiplicativeExpression	( list -> max_count >> 1 ) * sizeof ( string_item_t )		4914192	0		*			
ANR	4914273	ShiftExpression	list -> max_count >> 1		4914192	0		>>			
ANR	4914274	PtrMemberAccess	list -> max_count		4914192	0					
ANR	4914275	Identifier	list		4914192	0					
ANR	4914276	Identifier	max_count		4914192	1					
ANR	4914277	PrimaryExpression	1		4914192	1					
ANR	4914278	SizeofExpression	sizeof ( string_item_t )		4914192	1					
ANR	4914279	Sizeof	sizeof		4914192	0					
ANR	4914280	SizeofOperand	string_item_t		4914192	1					
ANR	4914281	Argument	list -> max_count * sizeof ( string_item_t )		4914192	2					
ANR	4914282	MultiplicativeExpression	list -> max_count * sizeof ( string_item_t )		4914192	0		*			
ANR	4914283	PtrMemberAccess	list -> max_count		4914192	0					
ANR	4914284	Identifier	list		4914192	0					
ANR	4914285	Identifier	max_count		4914192	1					
ANR	4914286	SizeofExpression	sizeof ( string_item_t )		4914192	1					
ANR	4914287	Sizeof	sizeof		4914192	0					
ANR	4914288	SizeofOperand	string_item_t		4914192	1					
ANR	4914289	Argument	"""add_item(list->items)"""		4914192	3					
ANR	4914290	PrimaryExpression	"""add_item(list->items)"""		4914192	0					
ANR	4914291	ExpressionStatement	assert ( list -> items != NULL )	1057:8:34169:34196	4914192	3	True				
ANR	4914292	CallExpression	assert ( list -> items != NULL )		4914192	0					
ANR	4914293	Callee	assert		4914192	0					
ANR	4914294	Identifier	assert		4914192	0					
ANR	4914295	ArgumentList	list -> items != NULL		4914192	1					
ANR	4914296	Argument	list -> items != NULL		4914192	0					
ANR	4914297	EqualityExpression	list -> items != NULL		4914192	0		!=			
ANR	4914298	PtrMemberAccess	list -> items		4914192	0					
ANR	4914299	Identifier	list		4914192	0					
ANR	4914300	Identifier	items		4914192	1					
ANR	4914301	Identifier	NULL		4914192	1					
ANR	4914302	ExpressionStatement	item = & list -> items [ count ]	1059:4:34208:34234	4914192	4	True				
ANR	4914303	AssignmentExpression	item = & list -> items [ count ]		4914192	0		=			
ANR	4914304	Identifier	item		4914192	0					
ANR	4914305	UnaryOperationExpression	& list -> items [ count ]		4914192	1					
ANR	4914306	UnaryOperator	&		4914192	0					
ANR	4914307	ArrayIndexing	list -> items [ count ]		4914192	1					
ANR	4914308	PtrMemberAccess	list -> items		4914192	0					
ANR	4914309	Identifier	list		4914192	0					
ANR	4914310	Identifier	items		4914192	1					
ANR	4914311	Identifier	count		4914192	1					
ANR	4914312	ExpressionStatement	item -> str = rstr	1060:4:34240:34256	4914192	5	True				
ANR	4914313	AssignmentExpression	item -> str = rstr		4914192	0		=			
ANR	4914314	PtrMemberAccess	item -> str		4914192	0					
ANR	4914315	Identifier	item		4914192	0					
ANR	4914316	Identifier	str		4914192	1					
ANR	4914317	Identifier	rstr		4914192	1					
ANR	4914318	ExpressionStatement	item -> index = count	1061:4:34262:34281	4914192	6	True				
ANR	4914319	AssignmentExpression	item -> index = count		4914192	0		=			
ANR	4914320	PtrMemberAccess	item -> index		4914192	0					
ANR	4914321	Identifier	item		4914192	0					
ANR	4914322	Identifier	index		4914192	1					
ANR	4914323	Identifier	count		4914192	1					
ANR	4914324	ExpressionStatement	item -> file_index = file_index	1062:4:34287:34316	4914192	7	True				
ANR	4914325	AssignmentExpression	item -> file_index = file_index		4914192	0		=			
ANR	4914326	PtrMemberAccess	item -> file_index		4914192	0					
ANR	4914327	Identifier	item		4914192	0					
ANR	4914328	Identifier	file_index		4914192	1					
ANR	4914329	Identifier	file_index		4914192	1					
ANR	4914330	ExpressionStatement	"strcpy ( rstr , str )"	1063:4:34322:34339	4914192	8	True				
ANR	4914331	CallExpression	"strcpy ( rstr , str )"		4914192	0					
ANR	4914332	Callee	strcpy		4914192	0					
ANR	4914333	Identifier	strcpy		4914192	0					
ANR	4914334	ArgumentList	rstr		4914192	1					
ANR	4914335	Argument	rstr		4914192	0					
ANR	4914336	Identifier	rstr		4914192	0					
ANR	4914337	Argument	str		4914192	1					
ANR	4914338	Identifier	str		4914192	0					
ANR	4914339	ExpressionStatement	list -> count ++	1064:4:34345:34358	4914192	9	True				
ANR	4914340	PostIncDecOperationExpression	list -> count ++		4914192	0					
ANR	4914341	PtrMemberAccess	list -> count		4914192	0					
ANR	4914342	Identifier	list		4914192	0					
ANR	4914343	Identifier	count		4914192	1					
ANR	4914344	IncDec	++		4914192	1					
ANR	4914345	ReturnStatement	return item ;	1065:4:34364:34375	4914192	10	True				
ANR	4914346	Identifier	item		4914192	0					
ANR	4914347	ReturnType	string_item_t *		4914192	1					
ANR	4914348	Identifier	add_item		4914192	2					
ANR	4914349	ParameterList	"string_list_t * list , const char * str , int file_index"		4914192	3					
ANR	4914350	Parameter	string_list_t * list	1040:9:33479:33498	4914192	0	True				
ANR	4914351	ParameterType	string_list_t *		4914192	0					
ANR	4914352	Identifier	list		4914192	1					
ANR	4914353	Parameter	const char * str	1040:31:33501:33515	4914192	1	True				
ANR	4914354	ParameterType	const char *		4914192	0					
ANR	4914355	Identifier	str		4914192	1					
ANR	4914356	Parameter	int file_index	1040:48:33518:33531	4914192	2	True				
ANR	4914357	ParameterType	int		4914192	0					
ANR	4914358	Identifier	file_index		4914192	1					
ANR	4914359	CFGEntryNode	ENTRY		4914192		True				
ANR	4914360	CFGExitNode	EXIT		4914192		True				
ANR	4914361	Symbol	item		4914192						
ANR	4914362	Symbol	NULL		4914192						
ANR	4914363	Symbol	mmalloc		4914192						
ANR	4914364	Symbol	item -> index		4914192						
ANR	4914365	Symbol	count		4914192						
ANR	4914366	Symbol	rstr		4914192						
ANR	4914367	Symbol	list		4914192						
ANR	4914368	Symbol	list -> count		4914192						
ANR	4914369	Symbol	file_index		4914192						
ANR	4914370	Symbol	str		4914192						
ANR	4914371	Symbol	item -> str		4914192						
ANR	4914372	Symbol	strlen		4914192						
ANR	4914373	Symbol	item -> file_index		4914192						
ANR	4914374	Symbol	* list		4914192						
ANR	4914375	Symbol	list -> items		4914192						
ANR	4914376	Symbol	* item		4914192						
ANR	4914377	Symbol	list -> max_count		4914192						
ANR	4914378	Symbol	mrealloc		4914192						
ANR	4914379	Function	cmp_index	1073:0:34546:34818							
ANR	4914380	FunctionDef	"cmp_index (const void * p1 , const void * p2)"		4914379	0					
ANR	4914381	CompoundStatement		1075:0:34599:34818	4914379	0					
ANR	4914382	Statement	const	1076:4:34605:34609	4914379	0	True				
ANR	4914383	Statement	string_item_t	1076:10:34611:34623	4914379	1	True				
ANR	4914384	Statement	*	1076:24:34625:34625	4914379	2	True				
ANR	4914385	Statement	const	1076:25:34626:34630	4914379	3	True				
ANR	4914386	ExpressionStatement	psi1 = ( const string_item_t * ) p1	1076:31:34632:34664	4914379	4	True				
ANR	4914387	AssignmentExpression	psi1 = ( const string_item_t * ) p1		4914379	0		=			
ANR	4914388	Identifier	psi1		4914379	0					
ANR	4914389	CastExpression	( const string_item_t * ) p1		4914379	1					
ANR	4914390	CastTarget	const string_item_t *		4914379	0					
ANR	4914391	Identifier	p1		4914379	1					
ANR	4914392	Statement	const	1077:4:34670:34674	4914379	5	True				
ANR	4914393	Statement	string_item_t	1077:10:34676:34688	4914379	6	True				
ANR	4914394	Statement	*	1077:24:34690:34690	4914379	7	True				
ANR	4914395	Statement	const	1077:25:34691:34695	4914379	8	True				
ANR	4914396	ExpressionStatement	psi2 = ( const string_item_t * ) p2	1077:31:34697:34729	4914379	9	True				
ANR	4914397	AssignmentExpression	psi2 = ( const string_item_t * ) p2		4914379	0		=			
ANR	4914398	Identifier	psi2		4914379	0					
ANR	4914399	CastExpression	( const string_item_t * ) p2		4914379	1					
ANR	4914400	CastTarget	const string_item_t *		4914379	0					
ANR	4914401	Identifier	p2		4914379	1					
ANR	4914402	IdentifierDeclStatement	int cmp = psi1 -> index - psi2 -> index ;	1078:4:34735:34770	4914379	10	True				
ANR	4914403	IdentifierDecl	cmp = psi1 -> index - psi2 -> index		4914379	0					
ANR	4914404	IdentifierDeclType	int		4914379	0					
ANR	4914405	Identifier	cmp		4914379	1					
ANR	4914406	AssignmentExpression	cmp = psi1 -> index - psi2 -> index		4914379	2		=			
ANR	4914407	Identifier	cmp		4914379	0					
ANR	4914408	AdditiveExpression	psi1 -> index - psi2 -> index		4914379	1		-			
ANR	4914409	PtrMemberAccess	psi1 -> index		4914379	0					
ANR	4914410	Identifier	psi1		4914379	0					
ANR	4914411	Identifier	index		4914379	1					
ANR	4914412	PtrMemberAccess	psi2 -> index		4914379	1					
ANR	4914413	Identifier	psi2		4914379	0					
ANR	4914414	Identifier	index		4914379	1					
ANR	4914415	ReturnStatement	return ( cmp < 0 ? - 1 : cmp > 0 ? 1 : 0 ) ;	1080:4:34777:34816	4914379	11	True				
ANR	4914416	ConditionalExpression	cmp < 0 ? - 1 : cmp > 0 ? 1 : 0		4914379	0					
ANR	4914417	Condition	cmp < 0		4914379	0					
ANR	4914418	RelationalExpression	cmp < 0		4914379	0		<			
ANR	4914419	Identifier	cmp		4914379	0					
ANR	4914420	PrimaryExpression	0		4914379	1					
ANR	4914421	UnaryOperationExpression	- 1		4914379	1					
ANR	4914422	UnaryOperator	-		4914379	0					
ANR	4914423	PrimaryExpression	1		4914379	1					
ANR	4914424	ConditionalExpression	cmp > 0 ? 1 : 0		4914379	2					
ANR	4914425	Condition	cmp > 0		4914379	0					
ANR	4914426	RelationalExpression	cmp > 0		4914379	0		>			
ANR	4914427	Identifier	cmp		4914379	0					
ANR	4914428	PrimaryExpression	0		4914379	1					
ANR	4914429	PrimaryExpression	1		4914379	1					
ANR	4914430	PrimaryExpression	0		4914379	2					
ANR	4914431	ReturnType	static int		4914379	1					
ANR	4914432	Identifier	cmp_index		4914379	2					
ANR	4914433	ParameterList	"const void * p1 , const void * p2"		4914379	3					
ANR	4914434	Parameter	const void * p1	1074:10:34567:34580	4914379	0	True				
ANR	4914435	ParameterType	const void *		4914379	0					
ANR	4914436	Identifier	p1		4914379	1					
ANR	4914437	Parameter	const void * p2	1074:26:34583:34596	4914379	1	True				
ANR	4914438	ParameterType	const void *		4914379	0					
ANR	4914439	Identifier	p2		4914379	1					
ANR	4914440	CFGEntryNode	ENTRY		4914379		True				
ANR	4914441	CFGExitNode	EXIT		4914379		True				
ANR	4914442	Symbol	p1		4914379						
ANR	4914443	Symbol	* psi2		4914379						
ANR	4914444	Symbol	p2		4914379						
ANR	4914445	Symbol	* psi1		4914379						
ANR	4914446	Symbol	cmp		4914379						
ANR	4914447	Symbol	psi2 -> index		4914379						
ANR	4914448	Symbol	psi2		4914379						
ANR	4914449	Symbol	psi1		4914379						
ANR	4914450	Symbol	psi1 -> index		4914379						
ANR	4914451	Function	cmp_str	1082:0:34820:35045							
ANR	4914452	FunctionDef	"cmp_str (const void * p1 , const void * p2)"		4914451	0					
ANR	4914453	CompoundStatement		1084:0:34871:35045	4914451	0					
ANR	4914454	Statement	const	1085:4:34877:34881	4914451	0	True				
ANR	4914455	Statement	string_item_t	1085:10:34883:34895	4914451	1	True				
ANR	4914456	Statement	*	1085:24:34897:34897	4914451	2	True				
ANR	4914457	Statement	const	1085:25:34898:34902	4914451	3	True				
ANR	4914458	ExpressionStatement	psi1 = ( const string_item_t * ) p1	1085:31:34904:34936	4914451	4	True				
ANR	4914459	AssignmentExpression	psi1 = ( const string_item_t * ) p1		4914451	0		=			
ANR	4914460	Identifier	psi1		4914451	0					
ANR	4914461	CastExpression	( const string_item_t * ) p1		4914451	1					
ANR	4914462	CastTarget	const string_item_t *		4914451	0					
ANR	4914463	Identifier	p1		4914451	1					
ANR	4914464	Statement	const	1086:4:34942:34946	4914451	5	True				
ANR	4914465	Statement	string_item_t	1086:10:34948:34960	4914451	6	True				
ANR	4914466	Statement	*	1086:24:34962:34962	4914451	7	True				
ANR	4914467	Statement	const	1086:25:34963:34967	4914451	8	True				
ANR	4914468	ExpressionStatement	psi2 = ( const string_item_t * ) p2	1086:31:34969:35001	4914451	9	True				
ANR	4914469	AssignmentExpression	psi2 = ( const string_item_t * ) p2		4914451	0		=			
ANR	4914470	Identifier	psi2		4914451	0					
ANR	4914471	CastExpression	( const string_item_t * ) p2		4914451	1					
ANR	4914472	CastTarget	const string_item_t *		4914451	0					
ANR	4914473	Identifier	p2		4914451	1					
ANR	4914474	ReturnStatement	"return strcmp ( psi1 -> str , psi2 -> str ) ;"	1088:4:35008:35043	4914451	10	True				
ANR	4914475	CallExpression	"strcmp ( psi1 -> str , psi2 -> str )"		4914451	0					
ANR	4914476	Callee	strcmp		4914451	0					
ANR	4914477	Identifier	strcmp		4914451	0					
ANR	4914478	ArgumentList	psi1 -> str		4914451	1					
ANR	4914479	Argument	psi1 -> str		4914451	0					
ANR	4914480	PtrMemberAccess	psi1 -> str		4914451	0					
ANR	4914481	Identifier	psi1		4914451	0					
ANR	4914482	Identifier	str		4914451	1					
ANR	4914483	Argument	psi2 -> str		4914451	1					
ANR	4914484	PtrMemberAccess	psi2 -> str		4914451	0					
ANR	4914485	Identifier	psi2		4914451	0					
ANR	4914486	Identifier	str		4914451	1					
ANR	4914487	ReturnType	static int		4914451	1					
ANR	4914488	Identifier	cmp_str		4914451	2					
ANR	4914489	ParameterList	"const void * p1 , const void * p2"		4914451	3					
ANR	4914490	Parameter	const void * p1	1083:8:34839:34852	4914451	0	True				
ANR	4914491	ParameterType	const void *		4914451	0					
ANR	4914492	Identifier	p1		4914451	1					
ANR	4914493	Parameter	const void * p2	1083:24:34855:34868	4914451	1	True				
ANR	4914494	ParameterType	const void *		4914451	0					
ANR	4914495	Identifier	p2		4914451	1					
ANR	4914496	CFGEntryNode	ENTRY		4914451		True				
ANR	4914497	CFGExitNode	EXIT		4914451		True				
ANR	4914498	Symbol	strcmp		4914451						
ANR	4914499	Symbol	p1		4914451						
ANR	4914500	Symbol	* psi2		4914451						
ANR	4914501	Symbol	p2		4914451						
ANR	4914502	Symbol	* psi1		4914451						
ANR	4914503	Symbol	psi2 -> str		4914451						
ANR	4914504	Symbol	psi1 -> str		4914451						
ANR	4914505	Symbol	psi2		4914451						
ANR	4914506	Symbol	psi1		4914451						
ANR	4914507	Function	sort_uniq	1090:0:35047:36232							
ANR	4914508	FunctionDef	"sort_uniq (string_list_t * list , bool by_index)"		4914507	0					
ANR	4914509	CompoundStatement		1092:0:35099:36232	4914507	0					
ANR	4914510	IdentifierDeclStatement	string_item_t * strlist = list -> items ;	1093:4:35105:35141	4914507	0	True				
ANR	4914511	IdentifierDecl	* strlist = list -> items		4914507	0					
ANR	4914512	IdentifierDeclType	string_item_t *		4914507	0					
ANR	4914513	Identifier	strlist		4914507	1					
ANR	4914514	AssignmentExpression	* strlist = list -> items		4914507	2		=			
ANR	4914515	Identifier	strlist		4914507	0					
ANR	4914516	PtrMemberAccess	list -> items		4914507	1					
ANR	4914517	Identifier	list		4914507	0					
ANR	4914518	Identifier	items		4914507	1					
ANR	4914519	IdentifierDeclStatement	int count = list -> count ;	1094:4:35147:35170	4914507	1	True				
ANR	4914520	IdentifierDecl	count = list -> count		4914507	0					
ANR	4914521	IdentifierDeclType	int		4914507	0					
ANR	4914522	Identifier	count		4914507	1					
ANR	4914523	AssignmentExpression	count = list -> count		4914507	2		=			
ANR	4914524	Identifier	count		4914507	0					
ANR	4914525	PtrMemberAccess	list -> count		4914507	1					
ANR	4914526	Identifier	list		4914507	0					
ANR	4914527	Identifier	count		4914507	1					
ANR	4914528	IdentifierDeclStatement	string_item_t * from ;	1095:4:35176:35195	4914507	2	True				
ANR	4914529	IdentifierDecl	* from		4914507	0					
ANR	4914530	IdentifierDeclType	string_item_t *		4914507	0					
ANR	4914531	Identifier	from		4914507	1					
ANR	4914532	IdentifierDeclStatement	string_item_t * to ;	1096:4:35201:35218	4914507	3	True				
ANR	4914533	IdentifierDecl	* to		4914507	0					
ANR	4914534	IdentifierDeclType	string_item_t *		4914507	0					
ANR	4914535	Identifier	to		4914507	1					
ANR	4914536	IdentifierDeclStatement	int i ;	1097:4:35224:35229	4914507	4	True				
ANR	4914537	IdentifierDecl	i		4914507	0					
ANR	4914538	IdentifierDeclType	int		4914507	0					
ANR	4914539	Identifier	i		4914507	1					
ANR	4914540	IdentifierDeclStatement	char * str ;	1098:4:35235:35244	4914507	5	True				
ANR	4914541	IdentifierDecl	* str		4914507	0					
ANR	4914542	IdentifierDeclType	char *		4914507	0					
ANR	4914543	Identifier	str		4914507	1					
ANR	4914544	IdentifierDeclStatement	bool last = list -> mode == uniq_last ;	1099:4:35250:35285	4914507	6	True				
ANR	4914545	IdentifierDecl	last = list -> mode == uniq_last		4914507	0					
ANR	4914546	IdentifierDeclType	bool		4914507	0					
ANR	4914547	Identifier	last		4914507	1					
ANR	4914548	AssignmentExpression	last = list -> mode == uniq_last		4914507	2		=			
ANR	4914549	Identifier	last		4914507	0					
ANR	4914550	EqualityExpression	list -> mode == uniq_last		4914507	1		==			
ANR	4914551	PtrMemberAccess	list -> mode		4914507	0					
ANR	4914552	Identifier	list		4914507	0					
ANR	4914553	Identifier	mode		4914507	1					
ANR	4914554	Identifier	uniq_last		4914507	1					
ANR	4914555	IfStatement	if ( count == 0 )		4914507	7					
ANR	4914556	Condition	count == 0	1101:8:35296:35305	4914507	0	True				
ANR	4914557	EqualityExpression	count == 0		4914507	0		==			
ANR	4914558	Identifier	count		4914507	0					
ANR	4914559	PrimaryExpression	0		4914507	1					
ANR	4914560	ReturnStatement	return ;	1102:8:35316:35322	4914507	1	True				
ANR	4914561	ExpressionStatement	"qsort ( ( char * ) strlist , count , sizeof ( string_item_t ) , cmp_str )"	1103:4:35328:35389	4914507	8	True				
ANR	4914562	CallExpression	"qsort ( ( char * ) strlist , count , sizeof ( string_item_t ) , cmp_str )"		4914507	0					
ANR	4914563	Callee	qsort		4914507	0					
ANR	4914564	Identifier	qsort		4914507	0					
ANR	4914565	ArgumentList	( char * ) strlist		4914507	1					
ANR	4914566	Argument	( char * ) strlist		4914507	0					
ANR	4914567	CastExpression	( char * ) strlist		4914507	0					
ANR	4914568	CastTarget	char *		4914507	0					
ANR	4914569	Identifier	strlist		4914507	1					
ANR	4914570	Argument	count		4914507	1					
ANR	4914571	Identifier	count		4914507	0					
ANR	4914572	Argument	sizeof ( string_item_t )		4914507	2					
ANR	4914573	SizeofExpression	sizeof ( string_item_t )		4914507	0					
ANR	4914574	Sizeof	sizeof		4914507	0					
ANR	4914575	SizeofOperand	string_item_t		4914507	1					
ANR	4914576	Argument	cmp_str		4914507	3					
ANR	4914577	Identifier	cmp_str		4914507	0					
ANR	4914578	ForStatement	"for ( from = to = strlist + 1 , i = 1 ; i < count ; from ++ , i ++ )"		4914507	9					
ANR	4914579	ForInit	"from = to = strlist + 1 , i = 1 ;"	1104:9:35400:35430	4914507	0	True				
ANR	4914580	Expression	"from = to = strlist + 1 , i = 1"		4914507	0					
ANR	4914581	AssignmentExpression	from = to = strlist + 1		4914507	0		=			
ANR	4914582	Identifier	from		4914507	0					
ANR	4914583	AssignmentExpression	to = strlist + 1		4914507	1		=			
ANR	4914584	Identifier	to		4914507	0					
ANR	4914585	AdditiveExpression	strlist + 1		4914507	1		+			
ANR	4914586	Identifier	strlist		4914507	0					
ANR	4914587	PrimaryExpression	1		4914507	1					
ANR	4914588	AssignmentExpression	i = 1		4914507	1		=			
ANR	4914589	Identifier	i		4914507	0					
ANR	4914590	PrimaryExpression	1		4914507	1					
ANR	4914591	Condition	i < count	1104:41:35432:35440	4914507	1	True				
ANR	4914592	RelationalExpression	i < count		4914507	0		<			
ANR	4914593	Identifier	i		4914507	0					
ANR	4914594	Identifier	count		4914507	1					
ANR	4914595	Expression	"from ++ , i ++"	1104:52:35443:35453	4914507	2	True				
ANR	4914596	PostIncDecOperationExpression	from ++		4914507	0					
ANR	4914597	Identifier	from		4914507	0					
ANR	4914598	IncDec	++		4914507	1					
ANR	4914599	PostIncDecOperationExpression	i ++		4914507	1					
ANR	4914600	Identifier	i		4914507	0					
ANR	4914601	IncDec	++		4914507	1					
ANR	4914602	CompoundStatement		13:65:356:356	4914507	3					
ANR	4914603	IfStatement	"if ( strcmp ( from -> str , to [ - 1 ] . str ) )"		4914507	0					
ANR	4914604	Condition	"strcmp ( from -> str , to [ - 1 ] . str )"	1105:12:35470:35498	4914507	0	True				
ANR	4914605	CallExpression	"strcmp ( from -> str , to [ - 1 ] . str )"		4914507	0					
ANR	4914606	Callee	strcmp		4914507	0					
ANR	4914607	Identifier	strcmp		4914507	0					
ANR	4914608	ArgumentList	from -> str		4914507	1					
ANR	4914609	Argument	from -> str		4914507	0					
ANR	4914610	PtrMemberAccess	from -> str		4914507	0					
ANR	4914611	Identifier	from		4914507	0					
ANR	4914612	Identifier	str		4914507	1					
ANR	4914613	Argument	to [ - 1 ] . str		4914507	1					
ANR	4914614	MemberAccess	to [ - 1 ] . str		4914507	0					
ANR	4914615	ArrayIndexing	to [ - 1 ]		4914507	0					
ANR	4914616	Identifier	to		4914507	0					
ANR	4914617	UnaryOperationExpression	- 1		4914507	1					
ANR	4914618	UnaryOperator	-		4914507	0					
ANR	4914619	PrimaryExpression	1		4914507	1					
ANR	4914620	Identifier	str		4914507	1					
ANR	4914621	CompoundStatement		14:43:401:401	4914507	1					
ANR	4914622	IfStatement	if ( to != from )		4914507	0					
ANR	4914623	Condition	to != from	1106:16:35519:35528	4914507	0	True				
ANR	4914624	EqualityExpression	to != from		4914507	0		!=			
ANR	4914625	Identifier	to		4914507	0					
ANR	4914626	Identifier	from		4914507	1					
ANR	4914627	CompoundStatement		15:28:431:431	4914507	1					
ANR	4914628	ExpressionStatement	str = ( char * ) to -> str	1107:16:35549:35570	4914507	0	True				
ANR	4914629	AssignmentExpression	str = ( char * ) to -> str		4914507	0		=			
ANR	4914630	Identifier	str		4914507	0					
ANR	4914631	CastExpression	( char * ) to -> str		4914507	1					
ANR	4914632	CastTarget	char *		4914507	0					
ANR	4914633	PtrMemberAccess	to -> str		4914507	1					
ANR	4914634	Identifier	to		4914507	0					
ANR	4914635	Identifier	str		4914507	1					
ANR	4914636	ExpressionStatement	* to = * from	1108:16:35588:35599	4914507	1	True				
ANR	4914637	AssignmentExpression	* to = * from		4914507	0		=			
ANR	4914638	UnaryOperationExpression	* to		4914507	0					
ANR	4914639	UnaryOperator	*		4914507	0					
ANR	4914640	Identifier	to		4914507	1					
ANR	4914641	UnaryOperationExpression	* from		4914507	1					
ANR	4914642	UnaryOperator	*		4914507	0					
ANR	4914643	Identifier	from		4914507	1					
ANR	4914644	IfStatement	if ( str != empty_str )		4914507	2					
ANR	4914645	Condition	str != empty_str	1109:20:35621:35636	4914507	0	True				
ANR	4914646	EqualityExpression	str != empty_str		4914507	0		!=			
ANR	4914647	Identifier	str		4914507	0					
ANR	4914648	Identifier	empty_str		4914507	1					
ANR	4914649	ExpressionStatement	"mfree ( str , ""sort_uniq(to->str)"" )"	1109:38:35639:35671	4914507	1	True				
ANR	4914650	CallExpression	"mfree ( str , ""sort_uniq(to->str)"" )"		4914507	0					
ANR	4914651	Callee	mfree		4914507	0					
ANR	4914652	Identifier	mfree		4914507	0					
ANR	4914653	ArgumentList	str		4914507	1					
ANR	4914654	Argument	str		4914507	0					
ANR	4914655	Identifier	str		4914507	0					
ANR	4914656	Argument	"""sort_uniq(to->str)"""		4914507	1					
ANR	4914657	PrimaryExpression	"""sort_uniq(to->str)"""		4914507	0					
ANR	4914658	ExpressionStatement	from -> str = empty_str	1110:16:35689:35710	4914507	3	True				
ANR	4914659	AssignmentExpression	from -> str = empty_str		4914507	0		=			
ANR	4914660	PtrMemberAccess	from -> str		4914507	0					
ANR	4914661	Identifier	from		4914507	0					
ANR	4914662	Identifier	str		4914507	1					
ANR	4914663	Identifier	empty_str		4914507	1					
ANR	4914664	ExpressionStatement	to ++	1112:12:35738:35742	4914507	1	True				
ANR	4914665	PostIncDecOperationExpression	to ++		4914507	0					
ANR	4914666	Identifier	to		4914507	0					
ANR	4914667	IncDec	++		4914507	1					
ANR	4914668	ElseStatement	else		4914507	0					
ANR	4914669	IfStatement	if ( ( last ? from -> index > to [ - 1 ] . index : from -> index < to [ - 1 ] . index ) )		4914507	0					
ANR	4914670	Condition	last ? from -> index > to [ - 1 ] . index : from -> index < to [ - 1 ] . index	1114:17:35771:35834	4914507	0	True				
ANR	4914671	ConditionalExpression	last ? from -> index > to [ - 1 ] . index : from -> index < to [ - 1 ] . index		4914507	0					
ANR	4914672	Condition	last		4914507	0					
ANR	4914673	Identifier	last		4914507	0					
ANR	4914674	RelationalExpression	from -> index > to [ - 1 ] . index		4914507	1		>			
ANR	4914675	PtrMemberAccess	from -> index		4914507	0					
ANR	4914676	Identifier	from		4914507	0					
ANR	4914677	Identifier	index		4914507	1					
ANR	4914678	MemberAccess	to [ - 1 ] . index		4914507	1					
ANR	4914679	ArrayIndexing	to [ - 1 ]		4914507	0					
ANR	4914680	Identifier	to		4914507	0					
ANR	4914681	UnaryOperationExpression	- 1		4914507	1					
ANR	4914682	UnaryOperator	-		4914507	0					
ANR	4914683	PrimaryExpression	1		4914507	1					
ANR	4914684	Identifier	index		4914507	1					
ANR	4914685	RelationalExpression	from -> index < to [ - 1 ] . index		4914507	2		<			
ANR	4914686	PtrMemberAccess	from -> index		4914507	0					
ANR	4914687	Identifier	from		4914507	0					
ANR	4914688	Identifier	index		4914507	1					
ANR	4914689	MemberAccess	to [ - 1 ] . index		4914507	1					
ANR	4914690	ArrayIndexing	to [ - 1 ]		4914507	0					
ANR	4914691	Identifier	to		4914507	0					
ANR	4914692	UnaryOperationExpression	- 1		4914507	1					
ANR	4914693	UnaryOperator	-		4914507	0					
ANR	4914694	PrimaryExpression	1		4914507	1					
ANR	4914695	Identifier	index		4914507	1					
ANR	4914696	CompoundStatement		23:83:737:737	4914507	1					
ANR	4914697	IfStatement	if ( & to [ - 1 ] != from )		4914507	0					
ANR	4914698	Condition	& to [ - 1 ] != from	1115:16:35855:35869	4914507	0	True				
ANR	4914699	EqualityExpression	& to [ - 1 ] != from		4914507	0		!=			
ANR	4914700	UnaryOperationExpression	& to [ - 1 ]		4914507	0					
ANR	4914701	UnaryOperator	&		4914507	0					
ANR	4914702	ArrayIndexing	to [ - 1 ]		4914507	1					
ANR	4914703	Identifier	to		4914507	0					
ANR	4914704	UnaryOperationExpression	- 1		4914507	1					
ANR	4914705	UnaryOperator	-		4914507	0					
ANR	4914706	PrimaryExpression	1		4914507	1					
ANR	4914707	Identifier	from		4914507	1					
ANR	4914708	CompoundStatement		24:33:772:772	4914507	1					
ANR	4914709	ExpressionStatement	str = ( char * ) to [ - 1 ] . str	1116:16:35890:35914	4914507	0	True				
ANR	4914710	AssignmentExpression	str = ( char * ) to [ - 1 ] . str		4914507	0		=			
ANR	4914711	Identifier	str		4914507	0					
ANR	4914712	CastExpression	( char * ) to [ - 1 ] . str		4914507	1					
ANR	4914713	CastTarget	char *		4914507	0					
ANR	4914714	MemberAccess	to [ - 1 ] . str		4914507	1					
ANR	4914715	ArrayIndexing	to [ - 1 ]		4914507	0					
ANR	4914716	Identifier	to		4914507	0					
ANR	4914717	UnaryOperationExpression	- 1		4914507	1					
ANR	4914718	UnaryOperator	-		4914507	0					
ANR	4914719	PrimaryExpression	1		4914507	1					
ANR	4914720	Identifier	str		4914507	1					
ANR	4914721	ExpressionStatement	to [ - 1 ] = * from	1117:16:35932:35946	4914507	1	True				
ANR	4914722	AssignmentExpression	to [ - 1 ] = * from		4914507	0		=			
ANR	4914723	ArrayIndexing	to [ - 1 ]		4914507	0					
ANR	4914724	Identifier	to		4914507	0					
ANR	4914725	UnaryOperationExpression	- 1		4914507	1					
ANR	4914726	UnaryOperator	-		4914507	0					
ANR	4914727	PrimaryExpression	1		4914507	1					
ANR	4914728	UnaryOperationExpression	* from		4914507	1					
ANR	4914729	UnaryOperator	*		4914507	0					
ANR	4914730	Identifier	from		4914507	1					
ANR	4914731	IfStatement	if ( str != empty_str )		4914507	2					
ANR	4914732	Condition	str != empty_str	1118:20:35968:35983	4914507	0	True				
ANR	4914733	EqualityExpression	str != empty_str		4914507	0		!=			
ANR	4914734	Identifier	str		4914507	0					
ANR	4914735	Identifier	empty_str		4914507	1					
ANR	4914736	ExpressionStatement	"mfree ( str , ""sort_uniq(to->str)"" )"	1118:38:35986:36018	4914507	1	True				
ANR	4914737	CallExpression	"mfree ( str , ""sort_uniq(to->str)"" )"		4914507	0					
ANR	4914738	Callee	mfree		4914507	0					
ANR	4914739	Identifier	mfree		4914507	0					
ANR	4914740	ArgumentList	str		4914507	1					
ANR	4914741	Argument	str		4914507	0					
ANR	4914742	Identifier	str		4914507	0					
ANR	4914743	Argument	"""sort_uniq(to->str)"""		4914507	1					
ANR	4914744	PrimaryExpression	"""sort_uniq(to->str)"""		4914507	0					
ANR	4914745	ExpressionStatement	from -> str = empty_str	1119:16:36036:36057	4914507	3	True				
ANR	4914746	AssignmentExpression	from -> str = empty_str		4914507	0		=			
ANR	4914747	PtrMemberAccess	from -> str		4914507	0					
ANR	4914748	Identifier	from		4914507	0					
ANR	4914749	Identifier	str		4914507	1					
ANR	4914750	Identifier	empty_str		4914507	1					
ANR	4914751	ExpressionStatement	count = to - strlist	1123:4:36093:36113	4914507	10	True				
ANR	4914752	AssignmentExpression	count = to - strlist		4914507	0		=			
ANR	4914753	Identifier	count		4914507	0					
ANR	4914754	AdditiveExpression	to - strlist		4914507	1		-			
ANR	4914755	Identifier	to		4914507	0					
ANR	4914756	Identifier	strlist		4914507	1					
ANR	4914757	ExpressionStatement	list -> count = count	1124:4:36119:36138	4914507	11	True				
ANR	4914758	AssignmentExpression	list -> count = count		4914507	0		=			
ANR	4914759	PtrMemberAccess	list -> count		4914507	0					
ANR	4914760	Identifier	list		4914507	0					
ANR	4914761	Identifier	count		4914507	1					
ANR	4914762	Identifier	count		4914507	1					
ANR	4914763	IfStatement	if ( by_index )		4914507	12					
ANR	4914764	Condition	by_index	1126:8:36149:36156	4914507	0	True				
ANR	4914765	Identifier	by_index		4914507	0					
ANR	4914766	ExpressionStatement	"qsort ( ( char * ) strlist , count , sizeof ( string_item_t ) , cmp_index )"	1127:8:36167:36230	4914507	1	True				
ANR	4914767	CallExpression	"qsort ( ( char * ) strlist , count , sizeof ( string_item_t ) , cmp_index )"		4914507	0					
ANR	4914768	Callee	qsort		4914507	0					
ANR	4914769	Identifier	qsort		4914507	0					
ANR	4914770	ArgumentList	( char * ) strlist		4914507	1					
ANR	4914771	Argument	( char * ) strlist		4914507	0					
ANR	4914772	CastExpression	( char * ) strlist		4914507	0					
ANR	4914773	CastTarget	char *		4914507	0					
ANR	4914774	Identifier	strlist		4914507	1					
ANR	4914775	Argument	count		4914507	1					
ANR	4914776	Identifier	count		4914507	0					
ANR	4914777	Argument	sizeof ( string_item_t )		4914507	2					
ANR	4914778	SizeofExpression	sizeof ( string_item_t )		4914507	0					
ANR	4914779	Sizeof	sizeof		4914507	0					
ANR	4914780	SizeofOperand	string_item_t		4914507	1					
ANR	4914781	Argument	cmp_index		4914507	3					
ANR	4914782	Identifier	cmp_index		4914507	0					
ANR	4914783	ReturnType	void		4914507	1					
ANR	4914784	Identifier	sort_uniq		4914507	2					
ANR	4914785	ParameterList	"string_list_t * list , bool by_index"		4914507	3					
ANR	4914786	Parameter	string_list_t * list	1091:10:35062:35081	4914507	0	True				
ANR	4914787	ParameterType	string_list_t *		4914507	0					
ANR	4914788	Identifier	list		4914507	1					
ANR	4914789	Parameter	bool by_index	1091:32:35084:35096	4914507	1	True				
ANR	4914790	ParameterType	bool		4914507	0					
ANR	4914791	Identifier	by_index		4914507	1					
ANR	4914792	CFGEntryNode	ENTRY		4914507		True				
ANR	4914793	CFGExitNode	EXIT		4914507		True				
ANR	4914794	Symbol	to [ - 1 ] . str		4914507						
ANR	4914795	Symbol	to [ - 1 ] . index		4914507						
ANR	4914796	Symbol	from -> str		4914507						
ANR	4914797	Symbol	strlist		4914507						
ANR	4914798	Symbol	cmp_str		4914507						
ANR	4914799	Symbol	from		4914507						
ANR	4914800	Symbol	empty_str		4914507						
ANR	4914801	Symbol	strcmp		4914507						
ANR	4914802	Symbol	* to		4914507						
ANR	4914803	Symbol	uniq_last		4914507						
ANR	4914804	Symbol	from -> index		4914507						
ANR	4914805	Symbol	last		4914507						
ANR	4914806	Symbol	count		4914507						
ANR	4914807	Symbol	i		4914507						
ANR	4914808	Symbol	list		4914507						
ANR	4914809	Symbol	list -> count		4914507						
ANR	4914810	Symbol	list -> mode		4914507						
ANR	4914811	Symbol	str		4914507						
ANR	4914812	Symbol	cmp_index		4914507						
ANR	4914813	Symbol	* list		4914507						
ANR	4914814	Symbol	by_index		4914507						
ANR	4914815	Symbol	list -> items		4914507						
ANR	4914816	Symbol	to -> str		4914507						
ANR	4914817	Symbol	to		4914507						
ANR	4914818	Symbol	* from		4914507						
ANR	4914819	Function	write_list	1131:0:36283:36527							
ANR	4914820	FunctionDef	"write_list (FILE * out , const string_list_t * list , const char * pstr)"		4914819	0					
ANR	4914821	CompoundStatement		1133:0:36357:36527	4914819	0					
ANR	4914822	IdentifierDeclStatement	string_pattern_t pat ;	1134:4:36363:36383	4914819	0	True				
ANR	4914823	IdentifierDecl	pat		4914819	0					
ANR	4914824	IdentifierDeclType	string_pattern_t		4914819	0					
ANR	4914825	Identifier	pat		4914819	1					
ANR	4914826	ExpressionStatement	pat . upper_case = false	1136:4:36390:36412	4914819	1	True				
ANR	4914827	AssignmentExpression	pat . upper_case = false		4914819	0		=			
ANR	4914828	MemberAccess	pat . upper_case		4914819	0					
ANR	4914829	Identifier	pat		4914819	0					
ANR	4914830	Identifier	upper_case		4914819	1					
ANR	4914831	Identifier	false		4914819	1					
ANR	4914832	ExpressionStatement	pat . drop_extn = false	1137:4:36418:36439	4914819	2	True				
ANR	4914833	AssignmentExpression	pat . drop_extn = false		4914819	0		=			
ANR	4914834	MemberAccess	pat . drop_extn		4914819	0					
ANR	4914835	Identifier	pat		4914819	0					
ANR	4914836	Identifier	drop_extn		4914819	1					
ANR	4914837	Identifier	false		4914819	1					
ANR	4914838	ExpressionStatement	"strncpy ( pat . pattern , pstr , MAX_PATTERN )"	1138:4:36445:36484	4914819	3	True				
ANR	4914839	CallExpression	"strncpy ( pat . pattern , pstr , MAX_PATTERN )"		4914819	0					
ANR	4914840	Callee	strncpy		4914819	0					
ANR	4914841	Identifier	strncpy		4914819	0					
ANR	4914842	ArgumentList	pat . pattern		4914819	1					
ANR	4914843	Argument	pat . pattern		4914819	0					
ANR	4914844	MemberAccess	pat . pattern		4914819	0					
ANR	4914845	Identifier	pat		4914819	0					
ANR	4914846	Identifier	pattern		4914819	1					
ANR	4914847	Argument	pstr		4914819	1					
ANR	4914848	Identifier	pstr		4914819	0					
ANR	4914849	Argument	MAX_PATTERN		4914819	2					
ANR	4914850	Identifier	MAX_PATTERN		4914819	0					
ANR	4914851	ExpressionStatement	"write_list_pattern ( out , list , & pat )"	1139:4:36490:36525	4914819	4	True				
ANR	4914852	CallExpression	"write_list_pattern ( out , list , & pat )"		4914819	0					
ANR	4914853	Callee	write_list_pattern		4914819	0					
ANR	4914854	Identifier	write_list_pattern		4914819	0					
ANR	4914855	ArgumentList	out		4914819	1					
ANR	4914856	Argument	out		4914819	0					
ANR	4914857	Identifier	out		4914819	0					
ANR	4914858	Argument	list		4914819	1					
ANR	4914859	Identifier	list		4914819	0					
ANR	4914860	Argument	& pat		4914819	2					
ANR	4914861	UnaryOperationExpression	& pat		4914819	0					
ANR	4914862	UnaryOperator	&		4914819	0					
ANR	4914863	Identifier	pat		4914819	1					
ANR	4914864	ReturnType	void		4914819	1					
ANR	4914865	Identifier	write_list		4914819	2					
ANR	4914866	ParameterList	"FILE * out , const string_list_t * list , const char * pstr"		4914819	3					
ANR	4914867	Parameter	FILE * out	1132:11:36299:36308	4914819	0	True				
ANR	4914868	ParameterType	FILE *		4914819	0					
ANR	4914869	Identifier	out		4914819	1					
ANR	4914870	Parameter	const string_list_t * list	1132:23:36311:36336	4914819	1	True				
ANR	4914871	ParameterType	const string_list_t *		4914819	0					
ANR	4914872	Identifier	list		4914819	1					
ANR	4914873	Parameter	const char * pstr	1132:51:36339:36354	4914819	2	True				
ANR	4914874	ParameterType	const char *		4914819	0					
ANR	4914875	Identifier	pstr		4914819	1					
ANR	4914876	CFGEntryNode	ENTRY		4914819		True				
ANR	4914877	CFGExitNode	EXIT		4914819		True				
ANR	4914878	Symbol	pat		4914819						
ANR	4914879	Symbol	pstr		4914819						
ANR	4914880	Symbol	false		4914819						
ANR	4914881	Symbol	list		4914819						
ANR	4914882	Symbol	MAX_PATTERN		4914819						
ANR	4914883	Symbol	pat . pattern		4914819						
ANR	4914884	Symbol	pat . upper_case		4914819						
ANR	4914885	Symbol	pat . drop_extn		4914819						
ANR	4914886	Symbol	& pat		4914819						
ANR	4914887	Symbol	out		4914819						
ANR	4914888	Function	write_list_pattern	1141:0:36529:38471							
ANR	4914889	FunctionDef	"write_list_pattern (FILE * out , const string_list_t * list , const string_pattern_t * pat)"		4914888	0					
ANR	4914890	CompoundStatement		1144:0:36642:38471	4914888	0					
ANR	4914891	IdentifierDeclStatement	int i ;	1145:4:36648:36653	4914888	0	True				
ANR	4914892	IdentifierDecl	i		4914888	0					
ANR	4914893	IdentifierDeclType	int		4914888	0					
ANR	4914894	Identifier	i		4914888	1					
ANR	4914895	IdentifierDeclStatement	char macname [ MAX_PATTERN + 1 ] ;	1146:4:36659:36688	4914888	1	True				
ANR	4914896	IdentifierDecl	macname [ MAX_PATTERN + 1 ]		4914888	0					
ANR	4914897	IdentifierDeclType	char [ MAX_PATTERN + 1 ]		4914888	0					
ANR	4914898	Identifier	macname		4914888	1					
ANR	4914899	AdditiveExpression	MAX_PATTERN + 1		4914888	2		+			
ANR	4914900	Identifier	MAX_PATTERN		4914888	0					
ANR	4914901	PrimaryExpression	1		4914888	1					
ANR	4914902	IdentifierDeclStatement	int plen = strlen ( pat -> pattern ) ;	1147:4:36694:36725	4914888	2	True				
ANR	4914903	IdentifierDecl	plen = strlen ( pat -> pattern )		4914888	0					
ANR	4914904	IdentifierDeclType	int		4914888	0					
ANR	4914905	Identifier	plen		4914888	1					
ANR	4914906	AssignmentExpression	plen = strlen ( pat -> pattern )		4914888	2		=			
ANR	4914907	Identifier	plen		4914888	0					
ANR	4914908	CallExpression	strlen ( pat -> pattern )		4914888	1					
ANR	4914909	Callee	strlen		4914888	0					
ANR	4914910	Identifier	strlen		4914888	0					
ANR	4914911	ArgumentList	pat -> pattern		4914888	1					
ANR	4914912	Argument	pat -> pattern		4914888	0					
ANR	4914913	PtrMemberAccess	pat -> pattern		4914888	0					
ANR	4914914	Identifier	pat		4914888	0					
ANR	4914915	Identifier	pattern		4914888	1					
ANR	4914916	ExpressionStatement	* macname = 0	1149:4:36732:36744	4914888	3	True				
ANR	4914917	AssignmentExpression	* macname = 0		4914888	0		=			
ANR	4914918	UnaryOperationExpression	* macname		4914888	0					
ANR	4914919	UnaryOperator	*		4914888	0					
ANR	4914920	Identifier	macname		4914888	1					
ANR	4914921	PrimaryExpression	0		4914888	1					
ANR	4914922	ForStatement	for ( i = 0 ; i < list -> count ; i ++ )		4914888	4					
ANR	4914923	ForInit	i = 0 ;	1150:9:36755:36760	4914888	0	True				
ANR	4914924	AssignmentExpression	i = 0		4914888	0		=			
ANR	4914925	Identifier	i		4914888	0					
ANR	4914926	PrimaryExpression	0		4914888	1					
ANR	4914927	Condition	i < list -> count	1150:16:36762:36776	4914888	1	True				
ANR	4914928	RelationalExpression	i < list -> count		4914888	0		<			
ANR	4914929	Identifier	i		4914888	0					
ANR	4914930	PtrMemberAccess	list -> count		4914888	1					
ANR	4914931	Identifier	list		4914888	0					
ANR	4914932	Identifier	count		4914888	1					
ANR	4914933	PostIncDecOperationExpression	i ++	1150:33:36779:36781	4914888	2	True				
ANR	4914934	Identifier	i		4914888	0					
ANR	4914935	IncDec	++		4914888	1					
ANR	4914936	CompoundStatement		13:8:398:409	4914888	3					
ANR	4914937	IdentifierDeclStatement	const char * lstr = list -> items [ i ] . str ;	1151:8:36794:36831	4914888	0	True				
ANR	4914938	IdentifierDecl	* lstr = list -> items [ i ] . str		4914888	0					
ANR	4914939	IdentifierDeclType	const char *		4914888	0					
ANR	4914940	Identifier	lstr		4914888	1					
ANR	4914941	AssignmentExpression	* lstr = list -> items [ i ] . str		4914888	2		=			
ANR	4914942	Identifier	lstr		4914888	0					
ANR	4914943	MemberAccess	list -> items [ i ] . str		4914888	1					
ANR	4914944	ArrayIndexing	list -> items [ i ]		4914888	0					
ANR	4914945	PtrMemberAccess	list -> items		4914888	0					
ANR	4914946	Identifier	list		4914888	0					
ANR	4914947	Identifier	items		4914888	1					
ANR	4914948	Identifier	i		4914888	1					
ANR	4914949	Identifier	str		4914888	1					
ANR	4914950	IdentifierDeclStatement	int len = strlen ( lstr ) ;	1152:8:36841:36863	4914888	1	True				
ANR	4914951	IdentifierDecl	len = strlen ( lstr )		4914888	0					
ANR	4914952	IdentifierDeclType	int		4914888	0					
ANR	4914953	Identifier	len		4914888	1					
ANR	4914954	AssignmentExpression	len = strlen ( lstr )		4914888	2		=			
ANR	4914955	Identifier	len		4914888	0					
ANR	4914956	CallExpression	strlen ( lstr )		4914888	1					
ANR	4914957	Callee	strlen		4914888	0					
ANR	4914958	Identifier	strlen		4914888	0					
ANR	4914959	ArgumentList	lstr		4914888	1					
ANR	4914960	Argument	lstr		4914888	0					
ANR	4914961	Identifier	lstr		4914888	0					
ANR	4914962	IdentifierDeclStatement	"char * str = mmalloc ( len + 1 , ""write_list_pattern(str)"" ) ;"	1153:8:36873:36928	4914888	2	True				
ANR	4914963	IdentifierDecl	"* str = mmalloc ( len + 1 , ""write_list_pattern(str)"" )"		4914888	0					
ANR	4914964	IdentifierDeclType	char *		4914888	0					
ANR	4914965	Identifier	str		4914888	1					
ANR	4914966	AssignmentExpression	"* str = mmalloc ( len + 1 , ""write_list_pattern(str)"" )"		4914888	2		=			
ANR	4914967	Identifier	str		4914888	0					
ANR	4914968	CallExpression	"mmalloc ( len + 1 , ""write_list_pattern(str)"" )"		4914888	1					
ANR	4914969	Callee	mmalloc		4914888	0					
ANR	4914970	Identifier	mmalloc		4914888	0					
ANR	4914971	ArgumentList	len + 1		4914888	1					
ANR	4914972	Argument	len + 1		4914888	0					
ANR	4914973	AdditiveExpression	len + 1		4914888	0		+			
ANR	4914974	Identifier	len		4914888	0					
ANR	4914975	PrimaryExpression	1		4914888	1					
ANR	4914976	Argument	"""write_list_pattern(str)"""		4914888	1					
ANR	4914977	PrimaryExpression	"""write_list_pattern(str)"""		4914888	0					
ANR	4914978	IdentifierDeclStatement	int xlen = plen + len * 3 ;	1154:8:36938:36963	4914888	3	True				
ANR	4914979	IdentifierDecl	xlen = plen + len * 3		4914888	0					
ANR	4914980	IdentifierDeclType	int		4914888	0					
ANR	4914981	Identifier	xlen		4914888	1					
ANR	4914982	AssignmentExpression	xlen = plen + len * 3		4914888	2		=			
ANR	4914983	Identifier	xlen		4914888	0					
ANR	4914984	AdditiveExpression	plen + len * 3		4914888	1		+			
ANR	4914985	Identifier	plen		4914888	0					
ANR	4914986	MultiplicativeExpression	len * 3		4914888	1		*			
ANR	4914987	Identifier	len		4914888	0					
ANR	4914988	PrimaryExpression	3		4914888	1					
ANR	4914989	IdentifierDeclStatement	"char * xstr = mmalloc ( xlen + 1 , ""write_list_pattern(xstr)"" ) ;"	1155:8:36973:37031	4914888	4	True				
ANR	4914990	IdentifierDecl	"* xstr = mmalloc ( xlen + 1 , ""write_list_pattern(xstr)"" )"		4914888	0					
ANR	4914991	IdentifierDeclType	char *		4914888	0					
ANR	4914992	Identifier	xstr		4914888	1					
ANR	4914993	AssignmentExpression	"* xstr = mmalloc ( xlen + 1 , ""write_list_pattern(xstr)"" )"		4914888	2		=			
ANR	4914994	Identifier	xstr		4914888	0					
ANR	4914995	CallExpression	"mmalloc ( xlen + 1 , ""write_list_pattern(xstr)"" )"		4914888	1					
ANR	4914996	Callee	mmalloc		4914888	0					
ANR	4914997	Identifier	mmalloc		4914888	0					
ANR	4914998	ArgumentList	xlen + 1		4914888	1					
ANR	4914999	Argument	xlen + 1		4914888	0					
ANR	4915000	AdditiveExpression	xlen + 1		4914888	0		+			
ANR	4915001	Identifier	xlen		4914888	0					
ANR	4915002	PrimaryExpression	1		4914888	1					
ANR	4915003	Argument	"""write_list_pattern(xstr)"""		4914888	1					
ANR	4915004	PrimaryExpression	"""write_list_pattern(xstr)"""		4914888	0					
ANR	4915005	IdentifierDeclStatement	char * alist ;	1156:8:37041:37052	4914888	5	True				
ANR	4915006	IdentifierDecl	* alist		4914888	0					
ANR	4915007	IdentifierDeclType	char *		4914888	0					
ANR	4915008	Identifier	alist		4914888	1					
ANR	4915009	ExpressionStatement	"strcpy ( str , lstr )"	1158:8:37063:37080	4914888	6	True				
ANR	4915010	CallExpression	"strcpy ( str , lstr )"		4914888	0					
ANR	4915011	Callee	strcpy		4914888	0					
ANR	4915012	Identifier	strcpy		4914888	0					
ANR	4915013	ArgumentList	str		4914888	1					
ANR	4915014	Argument	str		4914888	0					
ANR	4915015	Identifier	str		4914888	0					
ANR	4915016	Argument	lstr		4914888	1					
ANR	4915017	Identifier	lstr		4914888	0					
ANR	4915018	IfStatement	if ( pat -> drop_extn )		4914888	7					
ANR	4915019	Condition	pat -> drop_extn	1159:12:37094:37107	4914888	0	True				
ANR	4915020	PtrMemberAccess	pat -> drop_extn		4914888	0					
ANR	4915021	Identifier	pat		4914888	0					
ANR	4915022	Identifier	drop_extn		4914888	1					
ANR	4915023	CompoundStatement		17:12:481:502	4914888	1					
ANR	4915024	IdentifierDeclStatement	char * dot = str + len ;	1160:12:37124:37145	4914888	0	True				
ANR	4915025	IdentifierDecl	* dot = str + len		4914888	0					
ANR	4915026	IdentifierDeclType	char *		4914888	0					
ANR	4915027	Identifier	dot		4914888	1					
ANR	4915028	AssignmentExpression	* dot = str + len		4914888	2		=			
ANR	4915029	Identifier	dot		4914888	0					
ANR	4915030	AdditiveExpression	str + len		4914888	1		+			
ANR	4915031	Identifier	str		4914888	0					
ANR	4915032	Identifier	len		4914888	1					
ANR	4915033	WhileStatement	while ( dot > str && * dot != '.' )		4914888	1					
ANR	4915034	Condition	dot > str && * dot != '.'	1162:19:37167:37190	4914888	0	True				
ANR	4915035	AndExpression	dot > str && * dot != '.'		4914888	0		&&			
ANR	4915036	RelationalExpression	dot > str		4914888	0		>			
ANR	4915037	Identifier	dot		4914888	0					
ANR	4915038	Identifier	str		4914888	1					
ANR	4915039	EqualityExpression	* dot != '.'		4914888	1		!=			
ANR	4915040	UnaryOperationExpression	* dot		4914888	0					
ANR	4915041	UnaryOperator	*		4914888	0					
ANR	4915042	Identifier	dot		4914888	1					
ANR	4915043	PrimaryExpression	'.'		4914888	1					
ANR	4915044	ExpressionStatement	dot --	1163:16:37209:37214	4914888	1	True				
ANR	4915045	PostIncDecOperationExpression	dot --		4914888	0					
ANR	4915046	Identifier	dot		4914888	0					
ANR	4915047	IncDec	--		4914888	1					
ANR	4915048	IfStatement	if ( dot > str )		4914888	2					
ANR	4915049	Condition	dot > str	1164:16:37232:37240	4914888	0	True				
ANR	4915050	RelationalExpression	dot > str		4914888	0		>			
ANR	4915051	Identifier	dot		4914888	0					
ANR	4915052	Identifier	str		4914888	1					
ANR	4915053	ExpressionStatement	"* dot = 0 , len = dot - str"	1165:16:37259:37284	4914888	1	True				
ANR	4915054	Expression	"* dot = 0 , len = dot - str"		4914888	0					
ANR	4915055	AssignmentExpression	* dot = 0		4914888	0		=			
ANR	4915056	UnaryOperationExpression	* dot		4914888	0					
ANR	4915057	UnaryOperator	*		4914888	0					
ANR	4915058	Identifier	dot		4914888	1					
ANR	4915059	PrimaryExpression	0		4914888	1					
ANR	4915060	AssignmentExpression	len = dot - str		4914888	1		=			
ANR	4915061	Identifier	len		4914888	0					
ANR	4915062	AdditiveExpression	dot - str		4914888	1		-			
ANR	4915063	Identifier	dot		4914888	0					
ANR	4915064	Identifier	str		4914888	1					
ANR	4915065	IfStatement	if ( pat -> upper_case )		4914888	8					
ANR	4915066	Condition	pat -> upper_case	1167:12:37308:37322	4914888	0	True				
ANR	4915067	PtrMemberAccess	pat -> upper_case		4914888	0					
ANR	4915068	Identifier	pat		4914888	0					
ANR	4915069	Identifier	upper_case		4914888	1					
ANR	4915070	CompoundStatement		25:12:696:711	4914888	1					
ANR	4915071	IdentifierDeclStatement	char * ptr = str ;	1168:12:37339:37354	4914888	0	True				
ANR	4915072	IdentifierDecl	* ptr = str		4914888	0					
ANR	4915073	IdentifierDeclType	char *		4914888	0					
ANR	4915074	Identifier	ptr		4914888	1					
ANR	4915075	AssignmentExpression	* ptr = str		4914888	2		=			
ANR	4915076	Identifier	str		4914888	0					
ANR	4915077	Identifier	str		4914888	1					
ANR	4915078	ForStatement	for ( ; * ptr ; ptr ++ )		4914888	1					
ANR	4915079	Condition	* ptr	1170:19:37376:37379	4914888	0	True				
ANR	4915080	UnaryOperationExpression	* ptr		4914888	0					
ANR	4915081	UnaryOperator	*		4914888	0					
ANR	4915082	Identifier	ptr		4914888	1					
ANR	4915083	PostIncDecOperationExpression	ptr ++	1170:25:37382:37386	4914888	1	True				
ANR	4915084	Identifier	ptr		4914888	0					
ANR	4915085	IncDec	++		4914888	1					
ANR	4915086	IfStatement	if ( islower ( * ptr ) )		4914888	2					
ANR	4915087	Condition	islower ( * ptr )	1171:20:37409:37421	4914888	0	True				
ANR	4915088	CallExpression	islower ( * ptr )		4914888	0					
ANR	4915089	Callee	islower		4914888	0					
ANR	4915090	Identifier	islower		4914888	0					
ANR	4915091	ArgumentList	* ptr		4914888	1					
ANR	4915092	Argument	* ptr		4914888	0					
ANR	4915093	UnaryOperationExpression	* ptr		4914888	0					
ANR	4915094	UnaryOperator	*		4914888	0					
ANR	4915095	Identifier	ptr		4914888	1					
ANR	4915096	ExpressionStatement	* ptr = toupper ( * ptr )	1172:20:37444:37464	4914888	1	True				
ANR	4915097	AssignmentExpression	* ptr = toupper ( * ptr )		4914888	0		=			
ANR	4915098	UnaryOperationExpression	* ptr		4914888	0					
ANR	4915099	UnaryOperator	*		4914888	0					
ANR	4915100	Identifier	ptr		4914888	1					
ANR	4915101	CallExpression	toupper ( * ptr )		4914888	1					
ANR	4915102	Callee	toupper		4914888	0					
ANR	4915103	Identifier	toupper		4914888	0					
ANR	4915104	ArgumentList	* ptr		4914888	1					
ANR	4915105	Argument	* ptr		4914888	0					
ANR	4915106	UnaryOperationExpression	* ptr		4914888	0					
ANR	4915107	UnaryOperator	*		4914888	0					
ANR	4915108	Identifier	ptr		4914888	1					
ANR	4915109	ExpressionStatement	"sprintf ( xstr , pat -> pattern , str , str , str )"	1176:8:37613:37655	4914888	9	True				
ANR	4915110	CallExpression	"sprintf ( xstr , pat -> pattern , str , str , str )"		4914888	0					
ANR	4915111	Callee	sprintf		4914888	0					
ANR	4915112	Identifier	sprintf		4914888	0					
ANR	4915113	ArgumentList	xstr		4914888	1					
ANR	4915114	Argument	xstr		4914888	0					
ANR	4915115	Identifier	xstr		4914888	0					
ANR	4915116	Argument	pat -> pattern		4914888	1					
ANR	4915117	PtrMemberAccess	pat -> pattern		4914888	0					
ANR	4915118	Identifier	pat		4914888	0					
ANR	4915119	Identifier	pattern		4914888	1					
ANR	4915120	Argument	str		4914888	2					
ANR	4915121	Identifier	str		4914888	0					
ANR	4915122	Argument	str		4914888	3					
ANR	4915123	Identifier	str		4914888	0					
ANR	4915124	Argument	str		4914888	4					
ANR	4915125	Identifier	str		4914888	0					
ANR	4915126	ExpressionStatement	"alist = strchr ( xstr , '(' )"	1179:8:37781:37806	4914888	10	True				
ANR	4915127	AssignmentExpression	"alist = strchr ( xstr , '(' )"		4914888	0		=			
ANR	4915128	Identifier	alist		4914888	0					
ANR	4915129	CallExpression	"strchr ( xstr , '(' )"		4914888	1					
ANR	4915130	Callee	strchr		4914888	0					
ANR	4915131	Identifier	strchr		4914888	0					
ANR	4915132	ArgumentList	xstr		4914888	1					
ANR	4915133	Argument	xstr		4914888	0					
ANR	4915134	Identifier	xstr		4914888	0					
ANR	4915135	Argument	'('		4914888	1					
ANR	4915136	PrimaryExpression	'('		4914888	0					
ANR	4915137	IfStatement	if ( alist != 0 && alist != xstr && alist [ - 1 ] == '_' )		4914888	11					
ANR	4915138	Condition	alist != 0 && alist != xstr && alist [ - 1 ] == '_'	1180:12:37820:37866	4914888	0	True				
ANR	4915139	AndExpression	alist != 0 && alist != xstr && alist [ - 1 ] == '_'		4914888	0		&&			
ANR	4915140	EqualityExpression	alist != 0		4914888	0		!=			
ANR	4915141	Identifier	alist		4914888	0					
ANR	4915142	PrimaryExpression	0		4914888	1					
ANR	4915143	AndExpression	alist != xstr && alist [ - 1 ] == '_'		4914888	1		&&			
ANR	4915144	EqualityExpression	alist != xstr		4914888	0		!=			
ANR	4915145	Identifier	alist		4914888	0					
ANR	4915146	Identifier	xstr		4914888	1					
ANR	4915147	EqualityExpression	alist [ - 1 ] == '_'		4914888	1		==			
ANR	4915148	ArrayIndexing	alist [ - 1 ]		4914888	0					
ANR	4915149	Identifier	alist		4914888	0					
ANR	4915150	UnaryOperationExpression	- 1		4914888	1					
ANR	4915151	UnaryOperator	-		4914888	0					
ANR	4915152	PrimaryExpression	1		4914888	1					
ANR	4915153	PrimaryExpression	'_'		4914888	1					
ANR	4915154	CompoundStatement		37:61:1226:1226	4914888	1					
ANR	4915155	ExpressionStatement	* alist = 0	1181:12:37883:37893	4914888	0	True				
ANR	4915156	AssignmentExpression	* alist = 0		4914888	0		=			
ANR	4915157	UnaryOperationExpression	* alist		4914888	0					
ANR	4915158	UnaryOperator	*		4914888	0					
ANR	4915159	Identifier	alist		4914888	1					
ANR	4915160	PrimaryExpression	0		4914888	1					
ANR	4915161	IfStatement	"if ( strcmp ( xstr , macname ) )"		4914888	1					
ANR	4915162	Condition	"strcmp ( xstr , macname )"	1182:16:37911:37931	4914888	0	True				
ANR	4915163	CallExpression	"strcmp ( xstr , macname )"		4914888	0					
ANR	4915164	Callee	strcmp		4914888	0					
ANR	4915165	Identifier	strcmp		4914888	0					
ANR	4915166	ArgumentList	xstr		4914888	1					
ANR	4915167	Argument	xstr		4914888	0					
ANR	4915168	Identifier	xstr		4914888	0					
ANR	4915169	Argument	macname		4914888	1					
ANR	4915170	Identifier	macname		4914888	0					
ANR	4915171	CompoundStatement		39:39:1291:1291	4914888	1					
ANR	4915172	IfStatement	if ( * macname )		4914888	0					
ANR	4915173	Condition	* macname	1183:20:37956:37963	4914888	0	True				
ANR	4915174	UnaryOperationExpression	* macname		4914888	0					
ANR	4915175	UnaryOperator	*		4914888	0					
ANR	4915176	Identifier	macname		4914888	1					
ANR	4915177	ExpressionStatement	"fputs ( ""#endif\\n"" , out )"	1184:20:37986:38008	4914888	1	True				
ANR	4915178	CallExpression	"fputs ( ""#endif\\n"" , out )"		4914888	0					
ANR	4915179	Callee	fputs		4914888	0					
ANR	4915180	Identifier	fputs		4914888	0					
ANR	4915181	ArgumentList	"""#endif\\n"""		4914888	1					
ANR	4915182	Argument	"""#endif\\n"""		4914888	0					
ANR	4915183	PrimaryExpression	"""#endif\\n"""		4914888	0					
ANR	4915184	Argument	out		4914888	1					
ANR	4915185	Identifier	out		4914888	0					
ANR	4915186	ExpressionStatement	"fprintf ( out , ""#ifdef %s\\n"" , xstr )"	1185:16:38026:38059	4914888	1	True				
ANR	4915187	CallExpression	"fprintf ( out , ""#ifdef %s\\n"" , xstr )"		4914888	0					
ANR	4915188	Callee	fprintf		4914888	0					
ANR	4915189	Identifier	fprintf		4914888	0					
ANR	4915190	ArgumentList	out		4914888	1					
ANR	4915191	Argument	out		4914888	0					
ANR	4915192	Identifier	out		4914888	0					
ANR	4915193	Argument	"""#ifdef %s\\n"""		4914888	1					
ANR	4915194	PrimaryExpression	"""#ifdef %s\\n"""		4914888	0					
ANR	4915195	Argument	xstr		4914888	2					
ANR	4915196	Identifier	xstr		4914888	0					
ANR	4915197	ExpressionStatement	"strncpy ( macname , xstr , MAX_PATTERN )"	1186:16:38077:38112	4914888	2	True				
ANR	4915198	CallExpression	"strncpy ( macname , xstr , MAX_PATTERN )"		4914888	0					
ANR	4915199	Callee	strncpy		4914888	0					
ANR	4915200	Identifier	strncpy		4914888	0					
ANR	4915201	ArgumentList	macname		4914888	1					
ANR	4915202	Argument	macname		4914888	0					
ANR	4915203	Identifier	macname		4914888	0					
ANR	4915204	Argument	xstr		4914888	1					
ANR	4915205	Identifier	xstr		4914888	0					
ANR	4915206	Argument	MAX_PATTERN		4914888	2					
ANR	4915207	Identifier	MAX_PATTERN		4914888	0					
ANR	4915208	ExpressionStatement	* alist = '('	1188:12:38140:38152	4914888	2	True				
ANR	4915209	AssignmentExpression	* alist = '('		4914888	0		=			
ANR	4915210	UnaryOperationExpression	* alist		4914888	0					
ANR	4915211	UnaryOperator	*		4914888	0					
ANR	4915212	Identifier	alist		4914888	1					
ANR	4915213	PrimaryExpression	'('		4914888	1					
ANR	4915214	ElseStatement	else		4914888	0					
ANR	4915215	CompoundStatement		46:15:1526:1526	4914888	0					
ANR	4915216	IfStatement	if ( * macname )		4914888	0					
ANR	4915217	Condition	* macname	1190:16:38187:38194	4914888	0	True				
ANR	4915218	UnaryOperationExpression	* macname		4914888	0					
ANR	4915219	UnaryOperator	*		4914888	0					
ANR	4915220	Identifier	macname		4914888	1					
ANR	4915221	CompoundStatement		47:26:1554:1554	4914888	1					
ANR	4915222	ExpressionStatement	"fputs ( ""#endif\\n"" , out )"	1191:16:38215:38237	4914888	0	True				
ANR	4915223	CallExpression	"fputs ( ""#endif\\n"" , out )"		4914888	0					
ANR	4915224	Callee	fputs		4914888	0					
ANR	4915225	Identifier	fputs		4914888	0					
ANR	4915226	ArgumentList	"""#endif\\n"""		4914888	1					
ANR	4915227	Argument	"""#endif\\n"""		4914888	0					
ANR	4915228	PrimaryExpression	"""#endif\\n"""		4914888	0					
ANR	4915229	Argument	out		4914888	1					
ANR	4915230	Identifier	out		4914888	0					
ANR	4915231	ExpressionStatement	* macname = 0	1192:16:38255:38267	4914888	1	True				
ANR	4915232	AssignmentExpression	* macname = 0		4914888	0		=			
ANR	4915233	UnaryOperationExpression	* macname		4914888	0					
ANR	4915234	UnaryOperator	*		4914888	0					
ANR	4915235	Identifier	macname		4914888	1					
ANR	4915236	PrimaryExpression	0		4914888	1					
ANR	4915237	ExpressionStatement	"fputs ( xstr , out )"	1195:8:38301:38317	4914888	12	True				
ANR	4915238	CallExpression	"fputs ( xstr , out )"		4914888	0					
ANR	4915239	Callee	fputs		4914888	0					
ANR	4915240	Identifier	fputs		4914888	0					
ANR	4915241	ArgumentList	xstr		4914888	1					
ANR	4915242	Argument	xstr		4914888	0					
ANR	4915243	Identifier	xstr		4914888	0					
ANR	4915244	Argument	out		4914888	1					
ANR	4915245	Identifier	out		4914888	0					
ANR	4915246	ExpressionStatement	"mfree ( xstr , ""write_list_pattern(xstr)"" )"	1196:8:38327:38366	4914888	13	True				
ANR	4915247	CallExpression	"mfree ( xstr , ""write_list_pattern(xstr)"" )"		4914888	0					
ANR	4915248	Callee	mfree		4914888	0					
ANR	4915249	Identifier	mfree		4914888	0					
ANR	4915250	ArgumentList	xstr		4914888	1					
ANR	4915251	Argument	xstr		4914888	0					
ANR	4915252	Identifier	xstr		4914888	0					
ANR	4915253	Argument	"""write_list_pattern(xstr)"""		4914888	1					
ANR	4915254	PrimaryExpression	"""write_list_pattern(xstr)"""		4914888	0					
ANR	4915255	ExpressionStatement	"mfree ( str , ""write_list_pattern(str)"" )"	1197:8:38376:38413	4914888	14	True				
ANR	4915256	CallExpression	"mfree ( str , ""write_list_pattern(str)"" )"		4914888	0					
ANR	4915257	Callee	mfree		4914888	0					
ANR	4915258	Identifier	mfree		4914888	0					
ANR	4915259	ArgumentList	str		4914888	1					
ANR	4915260	Argument	str		4914888	0					
ANR	4915261	Identifier	str		4914888	0					
ANR	4915262	Argument	"""write_list_pattern(str)"""		4914888	1					
ANR	4915263	PrimaryExpression	"""write_list_pattern(str)"""		4914888	0					
ANR	4915264	IfStatement	if ( * macname )		4914888	5					
ANR	4915265	Condition	* macname	1199:8:38429:38436	4914888	0	True				
ANR	4915266	UnaryOperationExpression	* macname		4914888	0					
ANR	4915267	UnaryOperator	*		4914888	0					
ANR	4915268	Identifier	macname		4914888	1					
ANR	4915269	ExpressionStatement	"fputs ( ""#endif\\n"" , out )"	1200:8:38447:38469	4914888	1	True				
ANR	4915270	CallExpression	"fputs ( ""#endif\\n"" , out )"		4914888	0					
ANR	4915271	Callee	fputs		4914888	0					
ANR	4915272	Identifier	fputs		4914888	0					
ANR	4915273	ArgumentList	"""#endif\\n"""		4914888	1					
ANR	4915274	Argument	"""#endif\\n"""		4914888	0					
ANR	4915275	PrimaryExpression	"""#endif\\n"""		4914888	0					
ANR	4915276	Argument	out		4914888	1					
ANR	4915277	Identifier	out		4914888	0					
ANR	4915278	ReturnType	void		4914888	1					
ANR	4915279	Identifier	write_list_pattern		4914888	2					
ANR	4915280	ParameterList	"FILE * out , const string_list_t * list , const string_pattern_t * pat"		4914888	3					
ANR	4915281	Parameter	FILE * out	1142:19:36553:36562	4914888	0	True				
ANR	4915282	ParameterType	FILE *		4914888	0					
ANR	4915283	Identifier	out		4914888	1					
ANR	4915284	Parameter	const string_list_t * list	1142:31:36565:36590	4914888	1	True				
ANR	4915285	ParameterType	const string_list_t *		4914888	0					
ANR	4915286	Identifier	list		4914888	1					
ANR	4915287	Parameter	const string_pattern_t * pat	1143:19:36612:36639	4914888	2	True				
ANR	4915288	ParameterType	const string_pattern_t *		4914888	0					
ANR	4915289	Identifier	pat		4914888	1					
ANR	4915290	CFGEntryNode	ENTRY		4914888		True				
ANR	4915291	CFGExitNode	EXIT		4914888		True				
ANR	4915292	Symbol	* list -> items		4914888						
ANR	4915293	Symbol	xstr		4914888						
ANR	4915294	Symbol	pat -> pattern		4914888						
ANR	4915295	Symbol	mmalloc		4914888						
ANR	4915296	Symbol	islower		4914888						
ANR	4915297	Symbol	dot		4914888						
ANR	4915298	Symbol	strchr		4914888						
ANR	4915299	Symbol	* dot		4914888						
ANR	4915300	Symbol	* pat		4914888						
ANR	4915301	Symbol	out		4914888						
ANR	4915302	Symbol	strlen		4914888						
ANR	4915303	Symbol	plen		4914888						
ANR	4915304	Symbol	* * list		4914888						
ANR	4915305	Symbol	pat -> upper_case		4914888						
ANR	4915306	Symbol	len		4914888						
ANR	4915307	Symbol	pat -> drop_extn		4914888						
ANR	4915308	Symbol	* ptr		4914888						
ANR	4915309	Symbol	MAX_PATTERN		4914888						
ANR	4915310	Symbol	strcmp		4914888						
ANR	4915311	Symbol	list -> items [ i ] . str		4914888						
ANR	4915312	Symbol	pat		4914888						
ANR	4915313	Symbol	* alist		4914888						
ANR	4915314	Symbol	xlen		4914888						
ANR	4915315	Symbol	toupper		4914888						
ANR	4915316	Symbol	i		4914888						
ANR	4915317	Symbol	macname		4914888						
ANR	4915318	Symbol	list		4914888						
ANR	4915319	Symbol	list -> count		4914888						
ANR	4915320	Symbol	ptr		4914888						
ANR	4915321	Symbol	str		4914888						
ANR	4915322	Symbol	* i		4914888						
ANR	4915323	Symbol	* list		4914888						
ANR	4915324	Symbol	list -> items		4914888						
ANR	4915325	Symbol	alist		4914888						
ANR	4915326	Symbol	* macname		4914888						
ANR	4915327	Symbol	lstr		4914888						
ANR	4915328	Function	validate_list	1204:0:38499:38837							
ANR	4915329	FunctionDef	validate_list (string_list_t * sl)		4915328	0					
ANR	4915330	CompoundStatement		1206:0:38537:38837	4915328	0					
ANR	4915331	IdentifierDeclStatement	"int i , j ;"	1207:2:38541:38549	4915328	0	True				
ANR	4915332	IdentifierDecl	i		4915328	0					
ANR	4915333	IdentifierDeclType	int		4915328	0					
ANR	4915334	Identifier	i		4915328	1					
ANR	4915335	IdentifierDecl	j		4915328	1					
ANR	4915336	IdentifierDeclType	int		4915328	0					
ANR	4915337	Identifier	j		4915328	1					
ANR	4915338	ForStatement	for ( i = 0 ; i < sl -> max_count ; i ++ )		4915328	1					
ANR	4915339	ForInit	i = 0 ;	1208:7:38558:38563	4915328	0	True				
ANR	4915340	AssignmentExpression	i = 0		4915328	0		=			
ANR	4915341	Identifier	i		4915328	0					
ANR	4915342	PrimaryExpression	0		4915328	1					
ANR	4915343	Condition	i < sl -> max_count	1208:14:38565:38581	4915328	1	True				
ANR	4915344	RelationalExpression	i < sl -> max_count		4915328	0		<			
ANR	4915345	Identifier	i		4915328	0					
ANR	4915346	PtrMemberAccess	sl -> max_count		4915328	1					
ANR	4915347	Identifier	sl		4915328	0					
ANR	4915348	Identifier	max_count		4915328	1					
ANR	4915349	PostIncDecOperationExpression	i ++	1208:33:38584:38586	4915328	2	True				
ANR	4915350	Identifier	i		4915328	0					
ANR	4915351	IncDec	++		4915328	1					
ANR	4915352	CompoundStatement		3:38:51:51	4915328	3					
ANR	4915353	IfStatement	if ( sl -> items [ i ] . str && sl -> items [ i ] . str != empty_str )		4915328	0					
ANR	4915354	Condition	sl -> items [ i ] . str && sl -> items [ i ] . str != empty_str	1209:8:38599:38647	4915328	0	True				
ANR	4915355	AndExpression	sl -> items [ i ] . str && sl -> items [ i ] . str != empty_str		4915328	0		&&			
ANR	4915356	MemberAccess	sl -> items [ i ] . str		4915328	0					
ANR	4915357	ArrayIndexing	sl -> items [ i ]		4915328	0					
ANR	4915358	PtrMemberAccess	sl -> items		4915328	0					
ANR	4915359	Identifier	sl		4915328	0					
ANR	4915360	Identifier	items		4915328	1					
ANR	4915361	Identifier	i		4915328	1					
ANR	4915362	Identifier	str		4915328	1					
ANR	4915363	EqualityExpression	sl -> items [ i ] . str != empty_str		4915328	1		!=			
ANR	4915364	MemberAccess	sl -> items [ i ] . str		4915328	0					
ANR	4915365	ArrayIndexing	sl -> items [ i ]		4915328	0					
ANR	4915366	PtrMemberAccess	sl -> items		4915328	0					
ANR	4915367	Identifier	sl		4915328	0					
ANR	4915368	Identifier	items		4915328	1					
ANR	4915369	Identifier	i		4915328	1					
ANR	4915370	Identifier	str		4915328	1					
ANR	4915371	Identifier	empty_str		4915328	1					
ANR	4915372	CompoundStatement		4:59:112:112	4915328	1					
ANR	4915373	ForStatement	for ( j = i + 1 ; j < sl -> count ; j ++ )		4915328	0					
ANR	4915374	ForInit	j = i + 1 ;	1210:11:38663:38672	4915328	0	True				
ANR	4915375	AssignmentExpression	j = i + 1		4915328	0		=			
ANR	4915376	Identifier	j		4915328	0					
ANR	4915377	AdditiveExpression	i + 1		4915328	1		+			
ANR	4915378	Identifier	i		4915328	0					
ANR	4915379	PrimaryExpression	1		4915328	1					
ANR	4915380	Condition	j < sl -> count	1210:22:38674:38686	4915328	1	True				
ANR	4915381	RelationalExpression	j < sl -> count		4915328	0		<			
ANR	4915382	Identifier	j		4915328	0					
ANR	4915383	PtrMemberAccess	sl -> count		4915328	1					
ANR	4915384	Identifier	sl		4915328	0					
ANR	4915385	Identifier	count		4915328	1					
ANR	4915386	PostIncDecOperationExpression	j ++	1210:37:38689:38691	4915328	2	True				
ANR	4915387	Identifier	j		4915328	0					
ANR	4915388	IncDec	++		4915328	1					
ANR	4915389	CompoundStatement		5:41:155:155	4915328	3					
ANR	4915390	IfStatement	if ( sl -> items [ i ] . str == sl -> items [ j ] . str )		4915328	0					
ANR	4915391	Condition	sl -> items [ i ] . str == sl -> items [ j ] . str	1211:12:38707:38742	4915328	0	True				
ANR	4915392	EqualityExpression	sl -> items [ i ] . str == sl -> items [ j ] . str		4915328	0		==			
ANR	4915393	MemberAccess	sl -> items [ i ] . str		4915328	0					
ANR	4915394	ArrayIndexing	sl -> items [ i ]		4915328	0					
ANR	4915395	PtrMemberAccess	sl -> items		4915328	0					
ANR	4915396	Identifier	sl		4915328	0					
ANR	4915397	Identifier	items		4915328	1					
ANR	4915398	Identifier	i		4915328	1					
ANR	4915399	Identifier	str		4915328	1					
ANR	4915400	MemberAccess	sl -> items [ j ] . str		4915328	1					
ANR	4915401	ArrayIndexing	sl -> items [ j ]		4915328	0					
ANR	4915402	PtrMemberAccess	sl -> items		4915328	0					
ANR	4915403	Identifier	sl		4915328	0					
ANR	4915404	Identifier	items		4915328	1					
ANR	4915405	Identifier	j		4915328	1					
ANR	4915406	Identifier	str		4915328	1					
ANR	4915407	CompoundStatement		6:50:207:207	4915328	1					
ANR	4915408	ExpressionStatement	"printf ( ""Duplicate found: %s\\n"" , sl -> items [ j ] . str )"	1212:10:38757:38806	4915328	0	True				
ANR	4915409	CallExpression	"printf ( ""Duplicate found: %s\\n"" , sl -> items [ j ] . str )"		4915328	0					
ANR	4915410	Callee	printf		4915328	0					
ANR	4915411	Identifier	printf		4915328	0					
ANR	4915412	ArgumentList	"""Duplicate found: %s\\n"""		4915328	1					
ANR	4915413	Argument	"""Duplicate found: %s\\n"""		4915328	0					
ANR	4915414	PrimaryExpression	"""Duplicate found: %s\\n"""		4915328	0					
ANR	4915415	Argument	sl -> items [ j ] . str		4915328	1					
ANR	4915416	MemberAccess	sl -> items [ j ] . str		4915328	0					
ANR	4915417	ArrayIndexing	sl -> items [ j ]		4915328	0					
ANR	4915418	PtrMemberAccess	sl -> items		4915328	0					
ANR	4915419	Identifier	sl		4915328	0					
ANR	4915420	Identifier	items		4915328	1					
ANR	4915421	Identifier	j		4915328	1					
ANR	4915422	Identifier	str		4915328	1					
ANR	4915423	ReturnType	void		4915328	1					
ANR	4915424	Identifier	validate_list		4915328	2					
ANR	4915425	ParameterList	string_list_t * sl		4915328	3					
ANR	4915426	Parameter	string_list_t * sl	1205:14:38518:38534	4915328	0	True				
ANR	4915427	ParameterType	string_list_t *		4915328	0					
ANR	4915428	Identifier	sl		4915328	1					
ANR	4915429	CFGEntryNode	ENTRY		4915328		True				
ANR	4915430	CFGExitNode	EXIT		4915328		True				
ANR	4915431	Symbol	* * sl		4915328						
ANR	4915432	Symbol	i		4915328						
ANR	4915433	Symbol	j		4915328						
ANR	4915434	Symbol	* sl -> items		4915328						
ANR	4915435	Symbol	sl -> items		4915328						
ANR	4915436	Symbol	* i		4915328						
ANR	4915437	Symbol	* j		4915328						
ANR	4915438	Symbol	sl -> items [ i ] . str		4915328						
ANR	4915439	Symbol	sl -> count		4915328						
ANR	4915440	Symbol	sl		4915328						
ANR	4915441	Symbol	* sl		4915328						
ANR	4915442	Symbol	sl -> items [ j ] . str		4915328						
ANR	4915443	Symbol	empty_str		4915328						
ANR	4915444	Symbol	sl -> max_count		4915328						
ANR	4915445	Function	validate_lists	1220:0:38840:39159							
ANR	4915446	FunctionDef	validate_lists (config_t * conf)		4915445	0					
ANR	4915447	CompoundStatement		1222:0:38876:39159	4915445	0					
ANR	4915448	IdentifierDeclStatement	int i ;	1223:2:38880:38885	4915445	0	True				
ANR	4915449	IdentifierDecl	i		4915445	0					
ANR	4915450	IdentifierDeclType	int		4915445	0					
ANR	4915451	Identifier	i		4915445	1					
ANR	4915452	ExpressionStatement	"printf ( ""Validating lists....\\n"" )"	1224:2:38889:38921	4915445	1	True				
ANR	4915453	CallExpression	"printf ( ""Validating lists....\\n"" )"		4915445	0					
ANR	4915454	Callee	printf		4915445	0					
ANR	4915455	Identifier	printf		4915445	0					
ANR	4915456	ArgumentList	"""Validating lists....\\n"""		4915445	1					
ANR	4915457	Argument	"""Validating lists....\\n"""		4915445	0					
ANR	4915458	PrimaryExpression	"""Validating lists....\\n"""		4915445	0					
ANR	4915459	ExpressionStatement	validate_list ( & conf -> file_names )	1225:2:38925:38957	4915445	2	True				
ANR	4915460	CallExpression	validate_list ( & conf -> file_names )		4915445	0					
ANR	4915461	Callee	validate_list		4915445	0					
ANR	4915462	Identifier	validate_list		4915445	0					
ANR	4915463	ArgumentList	& conf -> file_names		4915445	1					
ANR	4915464	Argument	& conf -> file_names		4915445	0					
ANR	4915465	UnaryOperationExpression	& conf -> file_names		4915445	0					
ANR	4915466	UnaryOperator	&		4915445	0					
ANR	4915467	PtrMemberAccess	conf -> file_names		4915445	1					
ANR	4915468	Identifier	conf		4915445	0					
ANR	4915469	Identifier	file_names		4915445	1					
ANR	4915470	ExpressionStatement	validate_list ( & conf -> file_contents )	1226:2:38961:38996	4915445	3	True				
ANR	4915471	CallExpression	validate_list ( & conf -> file_contents )		4915445	0					
ANR	4915472	Callee	validate_list		4915445	0					
ANR	4915473	Identifier	validate_list		4915445	0					
ANR	4915474	ArgumentList	& conf -> file_contents		4915445	1					
ANR	4915475	Argument	& conf -> file_contents		4915445	0					
ANR	4915476	UnaryOperationExpression	& conf -> file_contents		4915445	0					
ANR	4915477	UnaryOperator	&		4915445	0					
ANR	4915478	PtrMemberAccess	conf -> file_contents		4915445	1					
ANR	4915479	Identifier	conf		4915445	0					
ANR	4915480	Identifier	file_contents		4915445	1					
ANR	4915481	ExpressionStatement	validate_list ( & conf -> replaces )	1227:2:39000:39030	4915445	4	True				
ANR	4915482	CallExpression	validate_list ( & conf -> replaces )		4915445	0					
ANR	4915483	Callee	validate_list		4915445	0					
ANR	4915484	Identifier	validate_list		4915445	0					
ANR	4915485	ArgumentList	& conf -> replaces		4915445	1					
ANR	4915486	Argument	& conf -> replaces		4915445	0					
ANR	4915487	UnaryOperationExpression	& conf -> replaces		4915445	0					
ANR	4915488	UnaryOperator	&		4915445	0					
ANR	4915489	PtrMemberAccess	conf -> replaces		4915445	1					
ANR	4915490	Identifier	conf		4915445	0					
ANR	4915491	Identifier	replaces		4915445	1					
ANR	4915492	ForStatement	for ( i = 0 ; i < NUM_RESOURCE_LISTS ; ++ i )		4915445	5					
ANR	4915493	ForInit	i = 0 ;	1228:7:39039:39044	4915445	0	True				
ANR	4915494	AssignmentExpression	i = 0		4915445	0		=			
ANR	4915495	Identifier	i		4915445	0					
ANR	4915496	PrimaryExpression	0		4915445	1					
ANR	4915497	Condition	i < NUM_RESOURCE_LISTS	1228:14:39046:39067	4915445	1	True				
ANR	4915498	RelationalExpression	i < NUM_RESOURCE_LISTS		4915445	0		<			
ANR	4915499	Identifier	i		4915445	0					
ANR	4915500	Identifier	NUM_RESOURCE_LISTS		4915445	1					
ANR	4915501	UnaryExpression	++ i	1228:38:39070:39072	4915445	2	True				
ANR	4915502	IncDec	++		4915445	0					
ANR	4915503	Identifier	i		4915445	1					
ANR	4915504	ExpressionStatement	validate_list ( & conf -> lists . indexed [ i ] )	1229:6:39081:39119	4915445	3	True				
ANR	4915505	CallExpression	validate_list ( & conf -> lists . indexed [ i ] )		4915445	0					
ANR	4915506	Callee	validate_list		4915445	0					
ANR	4915507	Identifier	validate_list		4915445	0					
ANR	4915508	ArgumentList	& conf -> lists . indexed [ i ]		4915445	1					
ANR	4915509	Argument	& conf -> lists . indexed [ i ]		4915445	0					
ANR	4915510	UnaryOperationExpression	& conf -> lists . indexed [ i ]		4915445	0					
ANR	4915511	UnaryOperator	&		4915445	0					
ANR	4915512	ArrayIndexing	conf -> lists . indexed [ i ]		4915445	1					
ANR	4915513	MemberAccess	conf -> lists . indexed		4915445	0					
ANR	4915514	PtrMemberAccess	conf -> lists		4915445	0					
ANR	4915515	Identifier	conf		4915445	0					
ANR	4915516	Identifier	lists		4915445	1					
ANR	4915517	Identifier	indexed		4915445	1					
ANR	4915518	Identifier	i		4915445	1					
ANR	4915519	ExpressionStatement	"printf ( ""Done validating lists\\n"" )"	1231:2:39124:39157	4915445	6	True				
ANR	4915520	CallExpression	"printf ( ""Done validating lists\\n"" )"		4915445	0					
ANR	4915521	Callee	printf		4915445	0					
ANR	4915522	Identifier	printf		4915445	0					
ANR	4915523	ArgumentList	"""Done validating lists\\n"""		4915445	1					
ANR	4915524	Argument	"""Done validating lists\\n"""		4915445	0					
ANR	4915525	PrimaryExpression	"""Done validating lists\\n"""		4915445	0					
ANR	4915526	ReturnType	void		4915445	1					
ANR	4915527	Identifier	validate_lists		4915445	2					
ANR	4915528	ParameterList	config_t * conf		4915445	3					
ANR	4915529	Parameter	config_t * conf	1221:15:38860:38873	4915445	0	True				
ANR	4915530	ParameterType	config_t *		4915445	0					
ANR	4915531	Identifier	conf		4915445	1					
ANR	4915532	CFGEntryNode	ENTRY		4915445		True				
ANR	4915533	CFGExitNode	EXIT		4915445		True				
ANR	4915534	Symbol	conf -> lists . indexed		4915445						
ANR	4915535	Symbol	& conf -> file_contents		4915445						
ANR	4915536	Symbol	& conf -> replaces		4915445						
ANR	4915537	Symbol	* conf		4915445						
ANR	4915538	Symbol	NUM_RESOURCE_LISTS		4915445						
ANR	4915539	Symbol	i		4915445						
ANR	4915540	Symbol	conf		4915445						
ANR	4915541	Symbol	& conf -> file_names		4915445						
ANR	4915542	Symbol	conf -> lists		4915445						
ANR	4915543	Function	validate_memory	1234:0:39162:39407							
ANR	4915544	FunctionDef	validate_memory ()		4915543	0					
ANR	4915545	CompoundStatement		1235:0:39189:39407	4915543	0					
ANR	4915546	IdentifierDeclStatement	memhdr * h = memhdr_lst . next ;	1236:2:39193:39220	4915543	0	True				
ANR	4915547	IdentifierDecl	* h = memhdr_lst . next		4915543	0					
ANR	4915548	IdentifierDeclType	memhdr *		4915543	0					
ANR	4915549	Identifier	h		4915543	1					
ANR	4915550	AssignmentExpression	* h = memhdr_lst . next		4915543	2		=			
ANR	4915551	Identifier	h		4915543	0					
ANR	4915552	MemberAccess	memhdr_lst . next		4915543	1					
ANR	4915553	Identifier	memhdr_lst		4915543	0					
ANR	4915554	Identifier	next		4915543	1					
ANR	4915555	ExpressionStatement	"printf ( ""Validating memory....\\n"" )"	1237:2:39224:39257	4915543	1	True				
ANR	4915556	CallExpression	"printf ( ""Validating memory....\\n"" )"		4915543	0					
ANR	4915557	Callee	printf		4915543	0					
ANR	4915558	Identifier	printf		4915543	0					
ANR	4915559	ArgumentList	"""Validating memory....\\n"""		4915543	1					
ANR	4915560	Argument	"""Validating memory....\\n"""		4915543	0					
ANR	4915561	PrimaryExpression	"""Validating memory....\\n"""		4915543	0					
ANR	4915562	WhileStatement	while ( h )		4915543	2					
ANR	4915563	Condition	h	1239:9:39269:39269	4915543	0	True				
ANR	4915564	Identifier	h		4915543	0					
ANR	4915565	CompoundStatement		5:12:82:82	4915543	1					
ANR	4915566	ExpressionStatement	"printf ( ""hdr: 0x%llx, from allocation %lld not freed\\n"" , h , h -> count )"	1240:4:39278:39346	4915543	0	True				
ANR	4915567	CallExpression	"printf ( ""hdr: 0x%llx, from allocation %lld not freed\\n"" , h , h -> count )"		4915543	0					
ANR	4915568	Callee	printf		4915543	0					
ANR	4915569	Identifier	printf		4915543	0					
ANR	4915570	ArgumentList	"""hdr: 0x%llx, from allocation %lld not freed\\n"""		4915543	1					
ANR	4915571	Argument	"""hdr: 0x%llx, from allocation %lld not freed\\n"""		4915543	0					
ANR	4915572	PrimaryExpression	"""hdr: 0x%llx, from allocation %lld not freed\\n"""		4915543	0					
ANR	4915573	Argument	h		4915543	1					
ANR	4915574	Identifier	h		4915543	0					
ANR	4915575	Argument	h -> count		4915543	2					
ANR	4915576	PtrMemberAccess	h -> count		4915543	0					
ANR	4915577	Identifier	h		4915543	0					
ANR	4915578	Identifier	count		4915543	1					
ANR	4915579	ExpressionStatement	h = h -> next	1241:4:39352:39363	4915543	1	True				
ANR	4915580	AssignmentExpression	h = h -> next		4915543	0		=			
ANR	4915581	Identifier	h		4915543	0					
ANR	4915582	PtrMemberAccess	h -> next		4915543	1					
ANR	4915583	Identifier	h		4915543	0					
ANR	4915584	Identifier	next		4915543	1					
ANR	4915585	ExpressionStatement	"printf ( ""Done validating memory\\n"" )"	1243:2:39371:39405	4915543	3	True				
ANR	4915586	CallExpression	"printf ( ""Done validating memory\\n"" )"		4915543	0					
ANR	4915587	Callee	printf		4915543	0					
ANR	4915588	Identifier	printf		4915543	0					
ANR	4915589	ArgumentList	"""Done validating memory\\n"""		4915543	1					
ANR	4915590	Argument	"""Done validating memory\\n"""		4915543	0					
ANR	4915591	PrimaryExpression	"""Done validating memory\\n"""		4915543	0					
ANR	4915592	ReturnType	void		4915543	1					
ANR	4915593	Identifier	validate_memory		4915543	2					
ANR	4915594	ParameterList			4915543	3					
ANR	4915595	CFGEntryNode	ENTRY		4915543		True				
ANR	4915596	CFGExitNode	EXIT		4915543		True				
ANR	4915597	Symbol	* h		4915543						
ANR	4915598	Symbol	h -> next		4915543						
ANR	4915599	Symbol	h -> count		4915543						
ANR	4915600	Symbol	h		4915543						
ANR	4915601	Symbol	memhdr_lst		4915543						
ANR	4915602	Symbol	memhdr_lst . next		4915543						
