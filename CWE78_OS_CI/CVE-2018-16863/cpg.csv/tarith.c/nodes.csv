command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9634033	File	data/converged/CVE-2018-16863_ghostpdl/tarith.c								
ANR	9634034	Function	png_warning	34:1:949:1092							
ANR	9634035	FunctionDef	"png_warning (png_const_structrp png_ptr , png_const_charp msg)"		9634034	0					
ANR	9634036	CompoundStatement		37:0:1045:1092	9634034	0					
ANR	9634037	ExpressionStatement	"fprintf ( stderr , ""validation: %s\\n"" , msg )"	38:3:1050:1090	9634034	0	True				
ANR	9634038	CallExpression	"fprintf ( stderr , ""validation: %s\\n"" , msg )"		9634034	0					
ANR	9634039	Callee	fprintf		9634034	0					
ANR	9634040	Identifier	fprintf		9634034	0					
ANR	9634041	ArgumentList	stderr		9634034	1					
ANR	9634042	Argument	stderr		9634034	0					
ANR	9634043	Identifier	stderr		9634034	0					
ANR	9634044	Argument	"""validation: %s\\n"""		9634034	1					
ANR	9634045	PrimaryExpression	"""validation: %s\\n"""		9634034	0					
ANR	9634046	Argument	msg		9634034	2					
ANR	9634047	Identifier	msg		9634034	0					
ANR	9634048	ReturnType	define png_error png_warning void		9634034	1					
ANR	9634049	Identifier	png_warning		9634034	2					
ANR	9634050	ParameterList	"png_const_structrp png_ptr , png_const_charp msg"		9634034	3					
ANR	9634051	Parameter	png_const_structrp png_ptr	36:17:996:1021	9634034	0	True				
ANR	9634052	ParameterType	png_const_structrp		9634034	0					
ANR	9634053	Identifier	png_ptr		9634034	1					
ANR	9634054	Parameter	png_const_charp msg	36:45:1024:1042	9634034	1	True				
ANR	9634055	ParameterType	png_const_charp		9634034	0					
ANR	9634056	Identifier	msg		9634034	1					
ANR	9634057	CFGEntryNode	ENTRY		9634034		True				
ANR	9634058	CFGExitNode	EXIT		9634034		True				
ANR	9634059	Symbol	msg		9634034						
ANR	9634060	Symbol	stderr		9634034						
ANR	9634061	Symbol	png_ptr		9634034						
ANR	9634062	Function	png_fixed_warning	41:1:1096:1258							
ANR	9634063	FunctionDef	"png_fixed_warning (png_const_structrp png_ptr , png_const_charp msg)"		9634062	0					
ANR	9634064	CompoundStatement		44:0:1210:1258	9634062	0					
ANR	9634065	ExpressionStatement	"fprintf ( stderr , ""overflow in: %s\\n"" , msg )"	45:3:1215:1256	9634062	0	True				
ANR	9634066	CallExpression	"fprintf ( stderr , ""overflow in: %s\\n"" , msg )"		9634062	0					
ANR	9634067	Callee	fprintf		9634062	0					
ANR	9634068	Identifier	fprintf		9634062	0					
ANR	9634069	ArgumentList	stderr		9634062	1					
ANR	9634070	Argument	stderr		9634062	0					
ANR	9634071	Identifier	stderr		9634062	0					
ANR	9634072	Argument	"""overflow in: %s\\n"""		9634062	1					
ANR	9634073	PrimaryExpression	"""overflow in: %s\\n"""		9634062	0					
ANR	9634074	Argument	msg		9634062	2					
ANR	9634075	Identifier	msg		9634062	0					
ANR	9634076	ReturnType	define png_fixed_error png_fixed_warning void		9634062	1					
ANR	9634077	Identifier	png_fixed_warning		9634062	2					
ANR	9634078	ParameterList	"png_const_structrp png_ptr , png_const_charp msg"		9634062	3					
ANR	9634079	Parameter	png_const_structrp png_ptr	43:23:1161:1186	9634062	0	True				
ANR	9634080	ParameterType	png_const_structrp		9634062	0					
ANR	9634081	Identifier	png_ptr		9634062	1					
ANR	9634082	Parameter	png_const_charp msg	43:51:1189:1207	9634062	1	True				
ANR	9634083	ParameterType	png_const_charp		9634062	0					
ANR	9634084	Identifier	msg		9634062	1					
ANR	9634085	CFGEntryNode	ENTRY		9634062		True				
ANR	9634086	CFGExitNode	EXIT		9634062		True				
ANR	9634087	Symbol	msg		9634062						
ANR	9634088	Symbol	stderr		9634062						
ANR	9634089	Symbol	png_ptr		9634062						
ANR	9634090	DeclStmt									
ANR	9634091	Decl							int	int	verbose
ANR	9634092	Function	validation_ascii_to_fp	75:0:2040:8018							
ANR	9634093	FunctionDef	"validation_ascii_to_fp (int count , int argc , char * * argv)"		9634092	0					
ANR	9634094	CompoundStatement		76:0:2101:8018	9634092	0					
ANR	9634095	IdentifierDeclStatement	int showall = 0 ;	77:3:2106:2124	9634092	0	True				
ANR	9634096	IdentifierDecl	showall = 0		9634092	0					
ANR	9634097	IdentifierDeclType	int		9634092	0					
ANR	9634098	Identifier	showall		9634092	1					
ANR	9634099	AssignmentExpression	showall = 0		9634092	2		=			
ANR	9634100	Identifier	showall		9634092	0					
ANR	9634101	PrimaryExpression	0		9634092	1					
ANR	9634102	IdentifierDeclStatement	double max_error = 2 ;	78:3:2129:2147	9634092	1	True				
ANR	9634103	IdentifierDecl	max_error = 2		9634092	0					
ANR	9634104	IdentifierDeclType	double		9634092	0					
ANR	9634105	Identifier	max_error		9634092	1					
ANR	9634106	AssignmentExpression	max_error = 2		9634092	2		=			
ANR	9634107	Identifier	max_error		9634092	0					
ANR	9634108	PrimaryExpression	2		9634092	1					
ANR	9634109	IdentifierDeclStatement	double max_error_abs = 17 ;	79:3:2202:2225	9634092	2	True				
ANR	9634110	IdentifierDecl	max_error_abs = 17		9634092	0					
ANR	9634111	IdentifierDeclType	double		9634092	0					
ANR	9634112	Identifier	max_error_abs		9634092	1					
ANR	9634113	AssignmentExpression	max_error_abs = 17		9634092	2		=			
ANR	9634114	Identifier	max_error_abs		9634092	0					
ANR	9634115	PrimaryExpression	17		9634092	1					
ANR	9634116	IdentifierDeclStatement	double max = 0 ;	80:3:2267:2281	9634092	3	True				
ANR	9634117	IdentifierDecl	max = 0		9634092	0					
ANR	9634118	IdentifierDeclType	double		9634092	0					
ANR	9634119	Identifier	max		9634092	1					
ANR	9634120	AssignmentExpression	max = 0		9634092	2		=			
ANR	9634121	Identifier	max		9634092	0					
ANR	9634122	PrimaryExpression	0		9634092	1					
ANR	9634123	IdentifierDeclStatement	double max_abs = 0 ;	81:3:2286:2304	9634092	4	True				
ANR	9634124	IdentifierDecl	max_abs = 0		9634092	0					
ANR	9634125	IdentifierDeclType	double		9634092	0					
ANR	9634126	Identifier	max_abs		9634092	1					
ANR	9634127	AssignmentExpression	max_abs = 0		9634092	2		=			
ANR	9634128	Identifier	max_abs		9634092	0					
ANR	9634129	PrimaryExpression	0		9634092	1					
ANR	9634130	IdentifierDeclStatement	double test = 0 ;	82:3:2309:2324	9634092	5	True				
ANR	9634131	IdentifierDecl	test = 0		9634092	0					
ANR	9634132	IdentifierDeclType	double		9634092	0					
ANR	9634133	Identifier	test		9634092	1					
ANR	9634134	AssignmentExpression	test = 0		9634092	2		=			
ANR	9634135	Identifier	test		9634092	0					
ANR	9634136	PrimaryExpression	0		9634092	1					
ANR	9634137	IdentifierDeclStatement	int precision = 5 ;	83:3:2359:2379	9634092	6	True				
ANR	9634138	IdentifierDecl	precision = 5		9634092	0					
ANR	9634139	IdentifierDeclType	int		9634092	0					
ANR	9634140	Identifier	precision		9634092	1					
ANR	9634141	AssignmentExpression	precision = 5		9634092	2		=			
ANR	9634142	Identifier	precision		9634092	0					
ANR	9634143	PrimaryExpression	5		9634092	1					
ANR	9634144	IdentifierDeclStatement	int nonfinite = 0 ;	84:3:2384:2404	9634092	7	True				
ANR	9634145	IdentifierDecl	nonfinite = 0		9634092	0					
ANR	9634146	IdentifierDeclType	int		9634092	0					
ANR	9634147	Identifier	nonfinite		9634092	1					
ANR	9634148	AssignmentExpression	nonfinite = 0		9634092	2		=			
ANR	9634149	Identifier	nonfinite		9634092	0					
ANR	9634150	PrimaryExpression	0		9634092	1					
ANR	9634151	IdentifierDeclStatement	int finite = 0 ;	85:3:2409:2426	9634092	8	True				
ANR	9634152	IdentifierDecl	finite = 0		9634092	0					
ANR	9634153	IdentifierDeclType	int		9634092	0					
ANR	9634154	Identifier	finite		9634092	1					
ANR	9634155	AssignmentExpression	finite = 0		9634092	2		=			
ANR	9634156	Identifier	finite		9634092	0					
ANR	9634157	PrimaryExpression	0		9634092	1					
ANR	9634158	IdentifierDeclStatement	int ok = 0 ;	86:3:2431:2444	9634092	9	True				
ANR	9634159	IdentifierDecl	ok = 0		9634092	0					
ANR	9634160	IdentifierDeclType	int		9634092	0					
ANR	9634161	Identifier	ok		9634092	1					
ANR	9634162	AssignmentExpression	ok = 0		9634092	2		=			
ANR	9634163	Identifier	ok		9634092	0					
ANR	9634164	PrimaryExpression	0		9634092	1					
ANR	9634165	IdentifierDeclStatement	int failcount = 0 ;	87:3:2449:2469	9634092	10	True				
ANR	9634166	IdentifierDecl	failcount = 0		9634092	0					
ANR	9634167	IdentifierDeclType	int		9634092	0					
ANR	9634168	Identifier	failcount		9634092	1					
ANR	9634169	AssignmentExpression	failcount = 0		9634092	2		=			
ANR	9634170	Identifier	failcount		9634092	0					
ANR	9634171	PrimaryExpression	0		9634092	1					
ANR	9634172	IdentifierDeclStatement	int minorarith = 0 ;	88:3:2474:2495	9634092	11	True				
ANR	9634173	IdentifierDecl	minorarith = 0		9634092	0					
ANR	9634174	IdentifierDeclType	int		9634092	0					
ANR	9634175	Identifier	minorarith		9634092	1					
ANR	9634176	AssignmentExpression	minorarith = 0		9634092	2		=			
ANR	9634177	Identifier	minorarith		9634092	0					
ANR	9634178	PrimaryExpression	0		9634092	1					
ANR	9634179	WhileStatement	while ( -- argc > 0 )		9634092	12					
ANR	9634180	Condition	-- argc > 0	90:10:2508:2517	9634092	0	True				
ANR	9634181	RelationalExpression	-- argc > 0		9634092	0		>			
ANR	9634182	UnaryExpression	-- argc		9634092	0					
ANR	9634183	IncDec	--		9634092	0					
ANR	9634184	Identifier	argc		9634092	1					
ANR	9634185	PrimaryExpression	0		9634092	1					
ANR	9634186	IfStatement	"if ( strcmp ( * ++ argv , ""-a"" ) == 0 )"		9634092	1					
ANR	9634187	Condition	"strcmp ( * ++ argv , ""-a"" ) == 0"	91:10:2530:2555	9634092	0	True				
ANR	9634188	EqualityExpression	"strcmp ( * ++ argv , ""-a"" ) == 0"		9634092	0		==			
ANR	9634189	CallExpression	"strcmp ( * ++ argv , ""-a"" )"		9634092	0					
ANR	9634190	Callee	strcmp		9634092	0					
ANR	9634191	Identifier	strcmp		9634092	0					
ANR	9634192	ArgumentList	* ++ argv		9634092	1					
ANR	9634193	Argument	* ++ argv		9634092	0					
ANR	9634194	UnaryOperationExpression	* ++ argv		9634092	0					
ANR	9634195	UnaryOperator	*		9634092	0					
ANR	9634196	UnaryExpression	++ argv		9634092	1					
ANR	9634197	IncDec	++		9634092	0					
ANR	9634198	Identifier	argv		9634092	1					
ANR	9634199	Argument	"""-a"""		9634092	1					
ANR	9634200	PrimaryExpression	"""-a"""		9634092	0					
ANR	9634201	PrimaryExpression	0		9634092	1					
ANR	9634202	ExpressionStatement	showall = 1	92:9:2567:2578	9634092	1	True				
ANR	9634203	AssignmentExpression	showall = 1		9634092	0		=			
ANR	9634204	Identifier	showall		9634092	0					
ANR	9634205	PrimaryExpression	1		9634092	1					
ANR	9634206	ElseStatement	else		9634092	0					
ANR	9634207	IfStatement	"if ( strcmp ( * argv , ""-e"" ) == 0 && argc > 0 )"		9634092	0					
ANR	9634208	Condition	"strcmp ( * argv , ""-e"" ) == 0 && argc > 0"	93:15:2595:2630	9634092	0	True				
ANR	9634209	AndExpression	"strcmp ( * argv , ""-e"" ) == 0 && argc > 0"		9634092	0		&&			
ANR	9634210	EqualityExpression	"strcmp ( * argv , ""-e"" ) == 0"		9634092	0		==			
ANR	9634211	CallExpression	"strcmp ( * argv , ""-e"" )"		9634092	0					
ANR	9634212	Callee	strcmp		9634092	0					
ANR	9634213	Identifier	strcmp		9634092	0					
ANR	9634214	ArgumentList	* argv		9634092	1					
ANR	9634215	Argument	* argv		9634092	0					
ANR	9634216	UnaryOperationExpression	* argv		9634092	0					
ANR	9634217	UnaryOperator	*		9634092	0					
ANR	9634218	Identifier	argv		9634092	1					
ANR	9634219	Argument	"""-e"""		9634092	1					
ANR	9634220	PrimaryExpression	"""-e"""		9634092	0					
ANR	9634221	PrimaryExpression	0		9634092	1					
ANR	9634222	RelationalExpression	argc > 0		9634092	1		>			
ANR	9634223	Identifier	argc		9634092	0					
ANR	9634224	PrimaryExpression	0		9634092	1					
ANR	9634225	CompoundStatement		19:6:537:537	9634092	1					
ANR	9634226	ExpressionStatement	-- argc	95:9:2650:2656	9634092	0	True				
ANR	9634227	UnaryExpression	-- argc		9634092	0					
ANR	9634228	IncDec	--		9634092	0					
ANR	9634229	Identifier	argc		9634092	1					
ANR	9634230	ExpressionStatement	max_error = atof ( * ++ argv )	96:9:2667:2692	9634092	1	True				
ANR	9634231	AssignmentExpression	max_error = atof ( * ++ argv )		9634092	0		=			
ANR	9634232	Identifier	max_error		9634092	0					
ANR	9634233	CallExpression	atof ( * ++ argv )		9634092	1					
ANR	9634234	Callee	atof		9634092	0					
ANR	9634235	Identifier	atof		9634092	0					
ANR	9634236	ArgumentList	* ++ argv		9634092	1					
ANR	9634237	Argument	* ++ argv		9634092	0					
ANR	9634238	UnaryOperationExpression	* ++ argv		9634092	0					
ANR	9634239	UnaryOperator	*		9634092	0					
ANR	9634240	UnaryExpression	++ argv		9634092	1					
ANR	9634241	IncDec	++		9634092	0					
ANR	9634242	Identifier	argv		9634092	1					
ANR	9634243	ElseStatement	else		9634092	0					
ANR	9634244	IfStatement	"if ( strcmp ( * argv , ""-E"" ) == 0 && argc > 0 )"		9634092	0					
ANR	9634245	Condition	"strcmp ( * argv , ""-E"" ) == 0 && argc > 0"	98:15:2717:2752	9634092	0	True				
ANR	9634246	AndExpression	"strcmp ( * argv , ""-E"" ) == 0 && argc > 0"		9634092	0		&&			
ANR	9634247	EqualityExpression	"strcmp ( * argv , ""-E"" ) == 0"		9634092	0		==			
ANR	9634248	CallExpression	"strcmp ( * argv , ""-E"" )"		9634092	0					
ANR	9634249	Callee	strcmp		9634092	0					
ANR	9634250	Identifier	strcmp		9634092	0					
ANR	9634251	ArgumentList	* argv		9634092	1					
ANR	9634252	Argument	* argv		9634092	0					
ANR	9634253	UnaryOperationExpression	* argv		9634092	0					
ANR	9634254	UnaryOperator	*		9634092	0					
ANR	9634255	Identifier	argv		9634092	1					
ANR	9634256	Argument	"""-E"""		9634092	1					
ANR	9634257	PrimaryExpression	"""-E"""		9634092	0					
ANR	9634258	PrimaryExpression	0		9634092	1					
ANR	9634259	RelationalExpression	argc > 0		9634092	1		>			
ANR	9634260	Identifier	argc		9634092	0					
ANR	9634261	PrimaryExpression	0		9634092	1					
ANR	9634262	CompoundStatement		24:6:659:659	9634092	1					
ANR	9634263	ExpressionStatement	-- argc	100:9:2772:2778	9634092	0	True				
ANR	9634264	UnaryExpression	-- argc		9634092	0					
ANR	9634265	IncDec	--		9634092	0					
ANR	9634266	Identifier	argc		9634092	1					
ANR	9634267	ExpressionStatement	max_error_abs = atof ( * ++ argv )	101:9:2789:2818	9634092	1	True				
ANR	9634268	AssignmentExpression	max_error_abs = atof ( * ++ argv )		9634092	0		=			
ANR	9634269	Identifier	max_error_abs		9634092	0					
ANR	9634270	CallExpression	atof ( * ++ argv )		9634092	1					
ANR	9634271	Callee	atof		9634092	0					
ANR	9634272	Identifier	atof		9634092	0					
ANR	9634273	ArgumentList	* ++ argv		9634092	1					
ANR	9634274	Argument	* ++ argv		9634092	0					
ANR	9634275	UnaryOperationExpression	* ++ argv		9634092	0					
ANR	9634276	UnaryOperator	*		9634092	0					
ANR	9634277	UnaryExpression	++ argv		9634092	1					
ANR	9634278	IncDec	++		9634092	0					
ANR	9634279	Identifier	argv		9634092	1					
ANR	9634280	ElseStatement	else		9634092	0					
ANR	9634281	CompoundStatement		29:6:743:743	9634092	0					
ANR	9634282	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	105:9:2856:2903	9634092	0	True				
ANR	9634283	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		9634092	0					
ANR	9634284	Callee	fprintf		9634092	0					
ANR	9634285	Identifier	fprintf		9634092	0					
ANR	9634286	ArgumentList	stderr		9634092	1					
ANR	9634287	Argument	stderr		9634092	0					
ANR	9634288	Identifier	stderr		9634092	0					
ANR	9634289	Argument	"""unknown argument %s\\n"""		9634092	1					
ANR	9634290	PrimaryExpression	"""unknown argument %s\\n"""		9634092	0					
ANR	9634291	Argument	* argv		9634092	2					
ANR	9634292	UnaryOperationExpression	* argv		9634092	0					
ANR	9634293	UnaryOperator	*		9634092	0					
ANR	9634294	Identifier	argv		9634092	1					
ANR	9634295	ReturnStatement	return 1 ;	106:9:2914:2922	9634092	1	True				
ANR	9634296	PrimaryExpression	1		9634092	0					
ANR	9634297	DoStatement	do		9634092	13					
ANR	9634298	CompoundStatement		38:6:901:916	9634092	0					
ANR	9634299	IdentifierDeclStatement	png_size_t index ;	111:6:2950:2966	9634092	0	True				
ANR	9634300	IdentifierDecl	index		9634092	0					
ANR	9634301	IdentifierDeclType	png_size_t		9634092	0					
ANR	9634302	Identifier	index		9634092	1					
ANR	9634303	IdentifierDeclStatement	"int state , failed = 0 ;"	112:6:2974:2995	9634092	1	True				
ANR	9634304	IdentifierDecl	state		9634092	0					
ANR	9634305	IdentifierDeclType	int		9634092	0					
ANR	9634306	Identifier	state		9634092	1					
ANR	9634307	IdentifierDecl	failed = 0		9634092	1					
ANR	9634308	IdentifierDeclType	int		9634092	0					
ANR	9634309	Identifier	failed		9634092	1					
ANR	9634310	AssignmentExpression	failed = 0		9634092	2		=			
ANR	9634311	Identifier	failed		9634092	0					
ANR	9634312	PrimaryExpression	0		9634092	1					
ANR	9634313	IdentifierDeclStatement	char buffer [ 64 ] ;	113:6:3003:3018	9634092	2	True				
ANR	9634314	IdentifierDecl	buffer [ 64 ]		9634092	0					
ANR	9634315	IdentifierDeclType	char [ 64 ]		9634092	0					
ANR	9634316	Identifier	buffer		9634092	1					
ANR	9634317	PrimaryExpression	64		9634092	2					
ANR	9634318	IfStatement	if ( isfinite ( test ) )		9634092	3					
ANR	9634319	Condition	isfinite ( test )	115:10:3031:3044	9634092	0	True				
ANR	9634320	CallExpression	isfinite ( test )		9634092	0					
ANR	9634321	Callee	isfinite		9634092	0					
ANR	9634322	Identifier	isfinite		9634092	0					
ANR	9634323	ArgumentList	test		9634092	1					
ANR	9634324	Argument	test		9634092	0					
ANR	9634325	Identifier	test		9634092	0					
ANR	9634326	ExpressionStatement	++ finite	116:9:3056:3064	9634092	1	True				
ANR	9634327	UnaryExpression	++ finite		9634092	0					
ANR	9634328	IncDec	++		9634092	0					
ANR	9634329	Identifier	finite		9634092	1					
ANR	9634330	ElseStatement	else		9634092	0					
ANR	9634331	ExpressionStatement	++ nonfinite	118:9:3086:3097	9634092	0	True				
ANR	9634332	UnaryExpression	++ nonfinite		9634092	0					
ANR	9634333	IncDec	++		9634092	0					
ANR	9634334	Identifier	nonfinite		9634092	1					
ANR	9634335	IfStatement	if ( verbose )		9634092	4					
ANR	9634336	Condition	verbose	120:10:3110:3116	9634092	0	True				
ANR	9634337	Identifier	verbose		9634092	0					
ANR	9634338	ExpressionStatement	"fprintf ( stderr , ""%.*g %d\\n"" , DBL_DIG , test , precision )"	121:9:3128:3182	9634092	1	True				
ANR	9634339	CallExpression	"fprintf ( stderr , ""%.*g %d\\n"" , DBL_DIG , test , precision )"		9634092	0					
ANR	9634340	Callee	fprintf		9634092	0					
ANR	9634341	Identifier	fprintf		9634092	0					
ANR	9634342	ArgumentList	stderr		9634092	1					
ANR	9634343	Argument	stderr		9634092	0					
ANR	9634344	Identifier	stderr		9634092	0					
ANR	9634345	Argument	"""%.*g %d\\n"""		9634092	1					
ANR	9634346	PrimaryExpression	"""%.*g %d\\n"""		9634092	0					
ANR	9634347	Argument	DBL_DIG		9634092	2					
ANR	9634348	Identifier	DBL_DIG		9634092	0					
ANR	9634349	Argument	test		9634092	3					
ANR	9634350	Identifier	test		9634092	0					
ANR	9634351	Argument	precision		9634092	4					
ANR	9634352	Identifier	precision		9634092	0					
ANR	9634353	ExpressionStatement	"memset ( buffer , 71 , sizeof buffer )"	124:6:3257:3290	9634092	5	True				
ANR	9634354	CallExpression	"memset ( buffer , 71 , sizeof buffer )"		9634092	0					
ANR	9634355	Callee	memset		9634092	0					
ANR	9634356	Identifier	memset		9634092	0					
ANR	9634357	ArgumentList	buffer		9634092	1					
ANR	9634358	Argument	buffer		9634092	0					
ANR	9634359	Identifier	buffer		9634092	0					
ANR	9634360	Argument	71		9634092	1					
ANR	9634361	PrimaryExpression	71		9634092	0					
ANR	9634362	Argument	sizeof buffer		9634092	2					
ANR	9634363	SizeofExpression	sizeof buffer		9634092	0					
ANR	9634364	Sizeof	sizeof		9634092	0					
ANR	9634365	Identifier	buffer		9634092	1					
ANR	9634366	ExpressionStatement	"png_ascii_from_fp ( 0 , buffer , precision + 10 , test , precision )"	126:6:3299:3358	9634092	6	True				
ANR	9634367	CallExpression	"png_ascii_from_fp ( 0 , buffer , precision + 10 , test , precision )"		9634092	0					
ANR	9634368	Callee	png_ascii_from_fp		9634092	0					
ANR	9634369	Identifier	png_ascii_from_fp		9634092	0					
ANR	9634370	ArgumentList	0		9634092	1					
ANR	9634371	Argument	0		9634092	0					
ANR	9634372	PrimaryExpression	0		9634092	0					
ANR	9634373	Argument	buffer		9634092	1					
ANR	9634374	Identifier	buffer		9634092	0					
ANR	9634375	Argument	precision + 10		9634092	2					
ANR	9634376	AdditiveExpression	precision + 10		9634092	0		+			
ANR	9634377	Identifier	precision		9634092	0					
ANR	9634378	PrimaryExpression	10		9634092	1					
ANR	9634379	Argument	test		9634092	3					
ANR	9634380	Identifier	test		9634092	0					
ANR	9634381	Argument	precision		9634092	4					
ANR	9634382	Identifier	precision		9634092	0					
ANR	9634383	IfStatement	if ( buffer [ precision + 7 ] != 71 )		9634092	7					
ANR	9634384	Condition	buffer [ precision + 7 ] != 71	131:10:3491:3515	9634092	0	True				
ANR	9634385	EqualityExpression	buffer [ precision + 7 ] != 71		9634092	0		!=			
ANR	9634386	ArrayIndexing	buffer [ precision + 7 ]		9634092	0					
ANR	9634387	Identifier	buffer		9634092	0					
ANR	9634388	AdditiveExpression	precision + 7		9634092	1		+			
ANR	9634389	Identifier	precision		9634092	0					
ANR	9634390	PrimaryExpression	7		9634092	1					
ANR	9634391	PrimaryExpression	71		9634092	1					
ANR	9634392	CompoundStatement		57:6:1422:1422	9634092	1					
ANR	9634393	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s'[%lu] buffer overflow\\n"" , test , precision , buffer , ( unsigned long ) strlen ( buffer ) )"	133:9:3535:3659	9634092	0	True				
ANR	9634394	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s'[%lu] buffer overflow\\n"" , test , precision , buffer , ( unsigned long ) strlen ( buffer ) )"		9634092	0					
ANR	9634395	Callee	fprintf		9634092	0					
ANR	9634396	Identifier	fprintf		9634092	0					
ANR	9634397	ArgumentList	stderr		9634092	1					
ANR	9634398	Argument	stderr		9634092	0					
ANR	9634399	Identifier	stderr		9634092	0					
ANR	9634400	Argument	"""%g[%d] -> '%s'[%lu] buffer overflow\\n"""		9634092	1					
ANR	9634401	PrimaryExpression	"""%g[%d] -> '%s'[%lu] buffer overflow\\n"""		9634092	0					
ANR	9634402	Argument	test		9634092	2					
ANR	9634403	Identifier	test		9634092	0					
ANR	9634404	Argument	precision		9634092	3					
ANR	9634405	Identifier	precision		9634092	0					
ANR	9634406	Argument	buffer		9634092	4					
ANR	9634407	Identifier	buffer		9634092	0					
ANR	9634408	Argument	( unsigned long ) strlen ( buffer )		9634092	5					
ANR	9634409	CastExpression	( unsigned long ) strlen ( buffer )		9634092	0					
ANR	9634410	CastTarget	unsigned long		9634092	0					
ANR	9634411	CallExpression	strlen ( buffer )		9634092	1					
ANR	9634412	Callee	strlen		9634092	0					
ANR	9634413	Identifier	strlen		9634092	0					
ANR	9634414	ArgumentList	buffer		9634092	1					
ANR	9634415	Argument	buffer		9634092	0					
ANR	9634416	Identifier	buffer		9634092	0					
ANR	9634417	ExpressionStatement	failed = 1	135:9:3670:3680	9634092	1	True				
ANR	9634418	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634419	Identifier	failed		9634092	0					
ANR	9634420	PrimaryExpression	1		9634092	1					
ANR	9634421	ExpressionStatement	state = 0	141:6:3805:3814	9634092	8	True				
ANR	9634422	AssignmentExpression	state = 0		9634092	0		=			
ANR	9634423	Identifier	state		9634092	0					
ANR	9634424	PrimaryExpression	0		9634092	1					
ANR	9634425	ExpressionStatement	index = 0	142:6:3822:3831	9634092	9	True				
ANR	9634426	AssignmentExpression	index = 0		9634092	0		=			
ANR	9634427	Identifier	index		9634092	0					
ANR	9634428	PrimaryExpression	0		9634092	1					
ANR	9634429	IfStatement	if ( ! isfinite ( test ) )		9634092	10					
ANR	9634430	Condition	! isfinite ( test )	143:10:3843:3857	9634092	0	True				
ANR	9634431	UnaryOperationExpression	! isfinite ( test )		9634092	0					
ANR	9634432	UnaryOperator	!		9634092	0					
ANR	9634433	CallExpression	isfinite ( test )		9634092	1					
ANR	9634434	Callee	isfinite		9634092	0					
ANR	9634435	Identifier	isfinite		9634092	0					
ANR	9634436	ArgumentList	test		9634092	1					
ANR	9634437	Argument	test		9634092	0					
ANR	9634438	Identifier	test		9634092	0					
ANR	9634439	CompoundStatement		69:6:1764:1764	9634092	1					
ANR	9634440	IfStatement	"if ( test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" ) )"		9634092	0					
ANR	9634441	Condition	"test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" )"	146:13:3909:3994	9634092	0	True				
ANR	9634442	OrExpression	"test >= 0 && strcmp ( buffer , ""inf"" ) || test < 0 && strcmp ( buffer , ""-inf"" )"		9634092	0		||			
ANR	9634443	AndExpression	"test >= 0 && strcmp ( buffer , ""inf"" )"		9634092	0		&&			
ANR	9634444	RelationalExpression	test >= 0		9634092	0		>=			
ANR	9634445	Identifier	test		9634092	0					
ANR	9634446	PrimaryExpression	0		9634092	1					
ANR	9634447	CallExpression	"strcmp ( buffer , ""inf"" )"		9634092	1					
ANR	9634448	Callee	strcmp		9634092	0					
ANR	9634449	Identifier	strcmp		9634092	0					
ANR	9634450	ArgumentList	buffer		9634092	1					
ANR	9634451	Argument	buffer		9634092	0					
ANR	9634452	Identifier	buffer		9634092	0					
ANR	9634453	Argument	"""inf"""		9634092	1					
ANR	9634454	PrimaryExpression	"""inf"""		9634092	0					
ANR	9634455	AndExpression	"test < 0 && strcmp ( buffer , ""-inf"" )"		9634092	1		&&			
ANR	9634456	RelationalExpression	test < 0		9634092	0		<			
ANR	9634457	Identifier	test		9634092	0					
ANR	9634458	PrimaryExpression	0		9634092	1					
ANR	9634459	CallExpression	"strcmp ( buffer , ""-inf"" )"		9634092	1					
ANR	9634460	Callee	strcmp		9634092	0					
ANR	9634461	Identifier	strcmp		9634092	0					
ANR	9634462	ArgumentList	buffer		9634092	1					
ANR	9634463	Argument	buffer		9634092	0					
ANR	9634464	Identifier	buffer		9634092	0					
ANR	9634465	Argument	"""-inf"""		9634092	1					
ANR	9634466	PrimaryExpression	"""-inf"""		9634092	0					
ANR	9634467	CompoundStatement		73:9:1904:1904	9634092	1					
ANR	9634468	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but expected 'inf'\\n"" , test , precision , buffer )"	149:12:4020:4114	9634092	0	True				
ANR	9634469	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but expected 'inf'\\n"" , test , precision , buffer )"		9634092	0					
ANR	9634470	Callee	fprintf		9634092	0					
ANR	9634471	Identifier	fprintf		9634092	0					
ANR	9634472	ArgumentList	stderr		9634092	1					
ANR	9634473	Argument	stderr		9634092	0					
ANR	9634474	Identifier	stderr		9634092	0					
ANR	9634475	Argument	"""%g[%d] -> '%s' but expected 'inf'\\n"""		9634092	1					
ANR	9634476	PrimaryExpression	"""%g[%d] -> '%s' but expected 'inf'\\n"""		9634092	0					
ANR	9634477	Argument	test		9634092	2					
ANR	9634478	Identifier	test		9634092	0					
ANR	9634479	Argument	precision		9634092	3					
ANR	9634480	Identifier	precision		9634092	0					
ANR	9634481	Argument	buffer		9634092	4					
ANR	9634482	Identifier	buffer		9634092	0					
ANR	9634483	ExpressionStatement	failed = 1	151:12:4128:4138	9634092	1	True				
ANR	9634484	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634485	Identifier	failed		9634092	0					
ANR	9634486	PrimaryExpression	1		9634092	1					
ANR	9634487	ElseStatement	else		9634092	0					
ANR	9634488	IfStatement	"if ( ! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0 )"		9634092	0					
ANR	9634489	Condition	"! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0"	154:15:4174:4263	9634092	0	True				
ANR	9634490	OrExpression	"! png_check_fp_number ( buffer , precision + 10 , & state , & index ) || buffer [ index ] != 0"		9634092	0		||			
ANR	9634491	UnaryOperationExpression	"! png_check_fp_number ( buffer , precision + 10 , & state , & index )"		9634092	0					
ANR	9634492	UnaryOperator	!		9634092	0					
ANR	9634493	CallExpression	"png_check_fp_number ( buffer , precision + 10 , & state , & index )"		9634092	1					
ANR	9634494	Callee	png_check_fp_number		9634092	0					
ANR	9634495	Identifier	png_check_fp_number		9634092	0					
ANR	9634496	ArgumentList	buffer		9634092	1					
ANR	9634497	Argument	buffer		9634092	0					
ANR	9634498	Identifier	buffer		9634092	0					
ANR	9634499	Argument	precision + 10		9634092	1					
ANR	9634500	AdditiveExpression	precision + 10		9634092	0		+			
ANR	9634501	Identifier	precision		9634092	0					
ANR	9634502	PrimaryExpression	10		9634092	1					
ANR	9634503	Argument	& state		9634092	2					
ANR	9634504	UnaryOperationExpression	& state		9634092	0					
ANR	9634505	UnaryOperator	&		9634092	0					
ANR	9634506	Identifier	state		9634092	1					
ANR	9634507	Argument	& index		9634092	3					
ANR	9634508	UnaryOperationExpression	& index		9634092	0					
ANR	9634509	UnaryOperator	&		9634092	0					
ANR	9634510	Identifier	index		9634092	1					
ANR	9634511	EqualityExpression	buffer [ index ] != 0		9634092	1		!=			
ANR	9634512	ArrayIndexing	buffer [ index ]		9634092	0					
ANR	9634513	Identifier	buffer		9634092	0					
ANR	9634514	Identifier	index		9634092	1					
ANR	9634515	PrimaryExpression	0		9634092	1					
ANR	9634516	CompoundStatement		81:6:2170:2170	9634092	1					
ANR	9634517	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but has bad format ('%c')\\n"" , test , precision , buffer , buffer [ index ] )"	157:9:4283:4393	9634092	0	True				
ANR	9634518	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but has bad format ('%c')\\n"" , test , precision , buffer , buffer [ index ] )"		9634092	0					
ANR	9634519	Callee	fprintf		9634092	0					
ANR	9634520	Identifier	fprintf		9634092	0					
ANR	9634521	ArgumentList	stderr		9634092	1					
ANR	9634522	Argument	stderr		9634092	0					
ANR	9634523	Identifier	stderr		9634092	0					
ANR	9634524	Argument	"""%g[%d] -> '%s' but has bad format ('%c')\\n"""		9634092	1					
ANR	9634525	PrimaryExpression	"""%g[%d] -> '%s' but has bad format ('%c')\\n"""		9634092	0					
ANR	9634526	Argument	test		9634092	2					
ANR	9634527	Identifier	test		9634092	0					
ANR	9634528	Argument	precision		9634092	3					
ANR	9634529	Identifier	precision		9634092	0					
ANR	9634530	Argument	buffer		9634092	4					
ANR	9634531	Identifier	buffer		9634092	0					
ANR	9634532	Argument	buffer [ index ]		9634092	5					
ANR	9634533	ArrayIndexing	buffer [ index ]		9634092	0					
ANR	9634534	Identifier	buffer		9634092	0					
ANR	9634535	Identifier	index		9634092	1					
ANR	9634536	ExpressionStatement	failed = 1	159:9:4404:4414	9634092	1	True				
ANR	9634537	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634538	Identifier	failed		9634092	0					
ANR	9634539	PrimaryExpression	1		9634092	1					
ANR	9634540	ElseStatement	else		9634092	0					
ANR	9634541	IfStatement	if ( PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 ) )		9634092	0					
ANR	9634542	Condition	PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 )	161:15:4439:4478	9634092	0	True				
ANR	9634543	AndExpression	PNG_FP_IS_NEGATIVE ( state ) && ! ( test < 0 )		9634092	0		&&			
ANR	9634544	CallExpression	PNG_FP_IS_NEGATIVE ( state )		9634092	0					
ANR	9634545	Callee	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634546	Identifier	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634547	ArgumentList	state		9634092	1					
ANR	9634548	Argument	state		9634092	0					
ANR	9634549	Identifier	state		9634092	0					
ANR	9634550	UnaryOperationExpression	! ( test < 0 )		9634092	1					
ANR	9634551	UnaryOperator	!		9634092	0					
ANR	9634552	RelationalExpression	test < 0		9634092	1		<			
ANR	9634553	Identifier	test		9634092	0					
ANR	9634554	PrimaryExpression	0		9634092	1					
ANR	9634555	CompoundStatement		87:6:2385:2385	9634092	1					
ANR	9634556	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but negative value not so reported\\n"" , test , precision , buffer )"	163:9:4498:4605	9634092	0	True				
ANR	9634557	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but negative value not so reported\\n"" , test , precision , buffer )"		9634092	0					
ANR	9634558	Callee	fprintf		9634092	0					
ANR	9634559	Identifier	fprintf		9634092	0					
ANR	9634560	ArgumentList	stderr		9634092	1					
ANR	9634561	Argument	stderr		9634092	0					
ANR	9634562	Identifier	stderr		9634092	0					
ANR	9634563	Argument	"""%g[%d] -> '%s' but negative value not so reported\\n"""		9634092	1					
ANR	9634564	PrimaryExpression	"""%g[%d] -> '%s' but negative value not so reported\\n"""		9634092	0					
ANR	9634565	Argument	test		9634092	2					
ANR	9634566	Identifier	test		9634092	0					
ANR	9634567	Argument	precision		9634092	3					
ANR	9634568	Identifier	precision		9634092	0					
ANR	9634569	Argument	buffer		9634092	4					
ANR	9634570	Identifier	buffer		9634092	0					
ANR	9634571	ExpressionStatement	failed = 1	165:9:4616:4626	9634092	1	True				
ANR	9634572	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634573	Identifier	failed		9634092	0					
ANR	9634574	PrimaryExpression	1		9634092	1					
ANR	9634575	ExpressionStatement	assert ( ! PNG_FP_IS_ZERO ( state ) )	166:9:4637:4667	9634092	2	True				
ANR	9634576	CallExpression	assert ( ! PNG_FP_IS_ZERO ( state ) )		9634092	0					
ANR	9634577	Callee	assert		9634092	0					
ANR	9634578	Identifier	assert		9634092	0					
ANR	9634579	ArgumentList	! PNG_FP_IS_ZERO ( state )		9634092	1					
ANR	9634580	Argument	! PNG_FP_IS_ZERO ( state )		9634092	0					
ANR	9634581	UnaryOperationExpression	! PNG_FP_IS_ZERO ( state )		9634092	0					
ANR	9634582	UnaryOperator	!		9634092	0					
ANR	9634583	CallExpression	PNG_FP_IS_ZERO ( state )		9634092	1					
ANR	9634584	Callee	PNG_FP_IS_ZERO		9634092	0					
ANR	9634585	Identifier	PNG_FP_IS_ZERO		9634092	0					
ANR	9634586	ArgumentList	state		9634092	1					
ANR	9634587	Argument	state		9634092	0					
ANR	9634588	Identifier	state		9634092	0					
ANR	9634589	ExpressionStatement	assert ( ! PNG_FP_IS_POSITIVE ( state ) )	167:9:4678:4712	9634092	3	True				
ANR	9634590	CallExpression	assert ( ! PNG_FP_IS_POSITIVE ( state ) )		9634092	0					
ANR	9634591	Callee	assert		9634092	0					
ANR	9634592	Identifier	assert		9634092	0					
ANR	9634593	ArgumentList	! PNG_FP_IS_POSITIVE ( state )		9634092	1					
ANR	9634594	Argument	! PNG_FP_IS_POSITIVE ( state )		9634092	0					
ANR	9634595	UnaryOperationExpression	! PNG_FP_IS_POSITIVE ( state )		9634092	0					
ANR	9634596	UnaryOperator	!		9634092	0					
ANR	9634597	CallExpression	PNG_FP_IS_POSITIVE ( state )		9634092	1					
ANR	9634598	Callee	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634599	Identifier	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634600	ArgumentList	state		9634092	1					
ANR	9634601	Argument	state		9634092	0					
ANR	9634602	Identifier	state		9634092	0					
ANR	9634603	ElseStatement	else		9634092	0					
ANR	9634604	IfStatement	if ( PNG_FP_IS_ZERO ( state ) && ! ( test == 0 ) )		9634092	0					
ANR	9634605	Condition	PNG_FP_IS_ZERO ( state ) && ! ( test == 0 )	169:15:4737:4773	9634092	0	True				
ANR	9634606	AndExpression	PNG_FP_IS_ZERO ( state ) && ! ( test == 0 )		9634092	0		&&			
ANR	9634607	CallExpression	PNG_FP_IS_ZERO ( state )		9634092	0					
ANR	9634608	Callee	PNG_FP_IS_ZERO		9634092	0					
ANR	9634609	Identifier	PNG_FP_IS_ZERO		9634092	0					
ANR	9634610	ArgumentList	state		9634092	1					
ANR	9634611	Argument	state		9634092	0					
ANR	9634612	Identifier	state		9634092	0					
ANR	9634613	UnaryOperationExpression	! ( test == 0 )		9634092	1					
ANR	9634614	UnaryOperator	!		9634092	0					
ANR	9634615	EqualityExpression	test == 0		9634092	1		==			
ANR	9634616	Identifier	test		9634092	0					
ANR	9634617	PrimaryExpression	0		9634092	1					
ANR	9634618	CompoundStatement		95:6:2680:2680	9634092	1					
ANR	9634619	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but zero value not so reported\\n"" , test , precision , buffer )"	171:9:4793:4896	9634092	0	True				
ANR	9634620	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but zero value not so reported\\n"" , test , precision , buffer )"		9634092	0					
ANR	9634621	Callee	fprintf		9634092	0					
ANR	9634622	Identifier	fprintf		9634092	0					
ANR	9634623	ArgumentList	stderr		9634092	1					
ANR	9634624	Argument	stderr		9634092	0					
ANR	9634625	Identifier	stderr		9634092	0					
ANR	9634626	Argument	"""%g[%d] -> '%s' but zero value not so reported\\n"""		9634092	1					
ANR	9634627	PrimaryExpression	"""%g[%d] -> '%s' but zero value not so reported\\n"""		9634092	0					
ANR	9634628	Argument	test		9634092	2					
ANR	9634629	Identifier	test		9634092	0					
ANR	9634630	Argument	precision		9634092	3					
ANR	9634631	Identifier	precision		9634092	0					
ANR	9634632	Argument	buffer		9634092	4					
ANR	9634633	Identifier	buffer		9634092	0					
ANR	9634634	ExpressionStatement	failed = 1	173:9:4907:4917	9634092	1	True				
ANR	9634635	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634636	Identifier	failed		9634092	0					
ANR	9634637	PrimaryExpression	1		9634092	1					
ANR	9634638	ExpressionStatement	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )	174:9:4928:4962	9634092	2	True				
ANR	9634639	CallExpression	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )		9634092	0					
ANR	9634640	Callee	assert		9634092	0					
ANR	9634641	Identifier	assert		9634092	0					
ANR	9634642	ArgumentList	! PNG_FP_IS_NEGATIVE ( state )		9634092	1					
ANR	9634643	Argument	! PNG_FP_IS_NEGATIVE ( state )		9634092	0					
ANR	9634644	UnaryOperationExpression	! PNG_FP_IS_NEGATIVE ( state )		9634092	0					
ANR	9634645	UnaryOperator	!		9634092	0					
ANR	9634646	CallExpression	PNG_FP_IS_NEGATIVE ( state )		9634092	1					
ANR	9634647	Callee	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634648	Identifier	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634649	ArgumentList	state		9634092	1					
ANR	9634650	Argument	state		9634092	0					
ANR	9634651	Identifier	state		9634092	0					
ANR	9634652	ExpressionStatement	assert ( ! PNG_FP_IS_POSITIVE ( state ) )	175:9:4973:5007	9634092	3	True				
ANR	9634653	CallExpression	assert ( ! PNG_FP_IS_POSITIVE ( state ) )		9634092	0					
ANR	9634654	Callee	assert		9634092	0					
ANR	9634655	Identifier	assert		9634092	0					
ANR	9634656	ArgumentList	! PNG_FP_IS_POSITIVE ( state )		9634092	1					
ANR	9634657	Argument	! PNG_FP_IS_POSITIVE ( state )		9634092	0					
ANR	9634658	UnaryOperationExpression	! PNG_FP_IS_POSITIVE ( state )		9634092	0					
ANR	9634659	UnaryOperator	!		9634092	0					
ANR	9634660	CallExpression	PNG_FP_IS_POSITIVE ( state )		9634092	1					
ANR	9634661	Callee	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634662	Identifier	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634663	ArgumentList	state		9634092	1					
ANR	9634664	Argument	state		9634092	0					
ANR	9634665	Identifier	state		9634092	0					
ANR	9634666	ElseStatement	else		9634092	0					
ANR	9634667	IfStatement	if ( PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 ) )		9634092	0					
ANR	9634668	Condition	PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 )	177:15:5032:5071	9634092	0	True				
ANR	9634669	AndExpression	PNG_FP_IS_POSITIVE ( state ) && ! ( test > 0 )		9634092	0		&&			
ANR	9634670	CallExpression	PNG_FP_IS_POSITIVE ( state )		9634092	0					
ANR	9634671	Callee	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634672	Identifier	PNG_FP_IS_POSITIVE		9634092	0					
ANR	9634673	ArgumentList	state		9634092	1					
ANR	9634674	Argument	state		9634092	0					
ANR	9634675	Identifier	state		9634092	0					
ANR	9634676	UnaryOperationExpression	! ( test > 0 )		9634092	1					
ANR	9634677	UnaryOperator	!		9634092	0					
ANR	9634678	RelationalExpression	test > 0		9634092	1		>			
ANR	9634679	Identifier	test		9634092	0					
ANR	9634680	PrimaryExpression	0		9634092	1					
ANR	9634681	CompoundStatement		103:6:2978:2978	9634092	1					
ANR	9634682	ExpressionStatement	"fprintf ( stderr , ""%g[%d] -> '%s' but postive value not so reported\\n"" , test , precision , buffer )"	179:9:5091:5197	9634092	0	True				
ANR	9634683	CallExpression	"fprintf ( stderr , ""%g[%d] -> '%s' but postive value not so reported\\n"" , test , precision , buffer )"		9634092	0					
ANR	9634684	Callee	fprintf		9634092	0					
ANR	9634685	Identifier	fprintf		9634092	0					
ANR	9634686	ArgumentList	stderr		9634092	1					
ANR	9634687	Argument	stderr		9634092	0					
ANR	9634688	Identifier	stderr		9634092	0					
ANR	9634689	Argument	"""%g[%d] -> '%s' but postive value not so reported\\n"""		9634092	1					
ANR	9634690	PrimaryExpression	"""%g[%d] -> '%s' but postive value not so reported\\n"""		9634092	0					
ANR	9634691	Argument	test		9634092	2					
ANR	9634692	Identifier	test		9634092	0					
ANR	9634693	Argument	precision		9634092	3					
ANR	9634694	Identifier	precision		9634092	0					
ANR	9634695	Argument	buffer		9634092	4					
ANR	9634696	Identifier	buffer		9634092	0					
ANR	9634697	ExpressionStatement	failed = 1	181:9:5208:5218	9634092	1	True				
ANR	9634698	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634699	Identifier	failed		9634092	0					
ANR	9634700	PrimaryExpression	1		9634092	1					
ANR	9634701	ExpressionStatement	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )	182:9:5229:5263	9634092	2	True				
ANR	9634702	CallExpression	assert ( ! PNG_FP_IS_NEGATIVE ( state ) )		9634092	0					
ANR	9634703	Callee	assert		9634092	0					
ANR	9634704	Identifier	assert		9634092	0					
ANR	9634705	ArgumentList	! PNG_FP_IS_NEGATIVE ( state )		9634092	1					
ANR	9634706	Argument	! PNG_FP_IS_NEGATIVE ( state )		9634092	0					
ANR	9634707	UnaryOperationExpression	! PNG_FP_IS_NEGATIVE ( state )		9634092	0					
ANR	9634708	UnaryOperator	!		9634092	0					
ANR	9634709	CallExpression	PNG_FP_IS_NEGATIVE ( state )		9634092	1					
ANR	9634710	Callee	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634711	Identifier	PNG_FP_IS_NEGATIVE		9634092	0					
ANR	9634712	ArgumentList	state		9634092	1					
ANR	9634713	Argument	state		9634092	0					
ANR	9634714	Identifier	state		9634092	0					
ANR	9634715	ExpressionStatement	assert ( ! PNG_FP_IS_ZERO ( state ) )	183:9:5274:5304	9634092	3	True				
ANR	9634716	CallExpression	assert ( ! PNG_FP_IS_ZERO ( state ) )		9634092	0					
ANR	9634717	Callee	assert		9634092	0					
ANR	9634718	Identifier	assert		9634092	0					
ANR	9634719	ArgumentList	! PNG_FP_IS_ZERO ( state )		9634092	1					
ANR	9634720	Argument	! PNG_FP_IS_ZERO ( state )		9634092	0					
ANR	9634721	UnaryOperationExpression	! PNG_FP_IS_ZERO ( state )		9634092	0					
ANR	9634722	UnaryOperator	!		9634092	0					
ANR	9634723	CallExpression	PNG_FP_IS_ZERO ( state )		9634092	1					
ANR	9634724	Callee	PNG_FP_IS_ZERO		9634092	0					
ANR	9634725	Identifier	PNG_FP_IS_ZERO		9634092	0					
ANR	9634726	ArgumentList	state		9634092	1					
ANR	9634727	Argument	state		9634092	0					
ANR	9634728	Identifier	state		9634092	0					
ANR	9634729	ElseStatement	else		9634092	0					
ANR	9634730	CompoundStatement		115:9:3380:3467	9634092	0					
ANR	9634731	IdentifierDeclStatement	double out = atof ( buffer ) ;	188:9:5396:5421	9634092	0	True				
ANR	9634732	IdentifierDecl	out = atof ( buffer )		9634092	0					
ANR	9634733	IdentifierDeclType	double		9634092	0					
ANR	9634734	Identifier	out		9634092	1					
ANR	9634735	AssignmentExpression	out = atof ( buffer )		9634092	2		=			
ANR	9634736	Identifier	out		9634092	0					
ANR	9634737	CallExpression	atof ( buffer )		9634092	1					
ANR	9634738	Callee	atof		9634092	0					
ANR	9634739	Identifier	atof		9634092	0					
ANR	9634740	ArgumentList	buffer		9634092	1					
ANR	9634741	Argument	buffer		9634092	0					
ANR	9634742	Identifier	buffer		9634092	0					
ANR	9634743	IdentifierDeclStatement	double change = fabs ( ( out - test ) / test ) ;	189:9:5432:5471	9634092	1	True				
ANR	9634744	IdentifierDecl	change = fabs ( ( out - test ) / test )		9634092	0					
ANR	9634745	IdentifierDeclType	double		9634092	0					
ANR	9634746	Identifier	change		9634092	1					
ANR	9634747	AssignmentExpression	change = fabs ( ( out - test ) / test )		9634092	2		=			
ANR	9634748	Identifier	change		9634092	0					
ANR	9634749	CallExpression	fabs ( ( out - test ) / test )		9634092	1					
ANR	9634750	Callee	fabs		9634092	0					
ANR	9634751	Identifier	fabs		9634092	0					
ANR	9634752	ArgumentList	( out - test ) / test		9634092	1					
ANR	9634753	Argument	( out - test ) / test		9634092	0					
ANR	9634754	MultiplicativeExpression	( out - test ) / test		9634092	0		/			
ANR	9634755	AdditiveExpression	out - test		9634092	0		-			
ANR	9634756	Identifier	out		9634092	0					
ANR	9634757	Identifier	test		9634092	1					
ANR	9634758	Identifier	test		9634092	1					
ANR	9634759	IdentifierDeclStatement	"double allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 ) ;"	190:9:5482:5569	9634092	2	True				
ANR	9634760	IdentifierDecl	"allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		9634092	0					
ANR	9634761	IdentifierDeclType	double		9634092	0					
ANR	9634762	Identifier	allow		9634092	1					
ANR	9634763	AssignmentExpression	"allow = .5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		9634092	2		=			
ANR	9634764	Identifier	allow		9634092	0					
ANR	9634765	MultiplicativeExpression	".5 / pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		9634092	1		/			
ANR	9634766	PrimaryExpression	.5		9634092	0					
ANR	9634767	CallExpression	"pow ( 10 , ( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1 )"		9634092	1					
ANR	9634768	Callee	pow		9634092	0					
ANR	9634769	Identifier	pow		9634092	0					
ANR	9634770	ArgumentList	10		9634092	1					
ANR	9634771	Argument	10		9634092	0					
ANR	9634772	PrimaryExpression	10		9634092	0					
ANR	9634773	Argument	( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1		9634092	1					
ANR	9634774	ConditionalExpression	( precision >= DBL_DIG ) ? DBL_DIG - 1 : precision - 1		9634092	0					
ANR	9634775	Condition	precision >= DBL_DIG		9634092	0					
ANR	9634776	RelationalExpression	precision >= DBL_DIG		9634092	0		>=			
ANR	9634777	Identifier	precision		9634092	0					
ANR	9634778	Identifier	DBL_DIG		9634092	1					
ANR	9634779	AdditiveExpression	DBL_DIG - 1		9634092	1		-			
ANR	9634780	Identifier	DBL_DIG		9634092	0					
ANR	9634781	PrimaryExpression	1		9634092	1					
ANR	9634782	AdditiveExpression	precision - 1		9634092	2		-			
ANR	9634783	Identifier	precision		9634092	0					
ANR	9634784	PrimaryExpression	1		9634092	1					
ANR	9634785	IfStatement	if ( change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow ) )		9634092	3					
ANR	9634786	Condition	change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow )	200:13:6021:6100	9634092	0	True				
ANR	9634787	AndExpression	change >= allow && ( isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow )		9634092	0		&&			
ANR	9634788	RelationalExpression	change >= allow		9634092	0		>=			
ANR	9634789	Identifier	change		9634092	0					
ANR	9634790	Identifier	allow		9634092	1					
ANR	9634791	OrExpression	isfinite ( out ) || fabs ( test / DBL_MAX ) <= 1 - allow		9634092	1		||			
ANR	9634792	CallExpression	isfinite ( out )		9634092	0					
ANR	9634793	Callee	isfinite		9634092	0					
ANR	9634794	Identifier	isfinite		9634092	0					
ANR	9634795	ArgumentList	out		9634092	1					
ANR	9634796	Argument	out		9634092	0					
ANR	9634797	Identifier	out		9634092	0					
ANR	9634798	RelationalExpression	fabs ( test / DBL_MAX ) <= 1 - allow		9634092	1		<=			
ANR	9634799	CallExpression	fabs ( test / DBL_MAX )		9634092	0					
ANR	9634800	Callee	fabs		9634092	0					
ANR	9634801	Identifier	fabs		9634092	0					
ANR	9634802	ArgumentList	test / DBL_MAX		9634092	1					
ANR	9634803	Argument	test / DBL_MAX		9634092	0					
ANR	9634804	MultiplicativeExpression	test / DBL_MAX		9634092	0		/			
ANR	9634805	Identifier	test		9634092	0					
ANR	9634806	Identifier	DBL_MAX		9634092	1					
ANR	9634807	AdditiveExpression	1 - allow		9634092	1		-			
ANR	9634808	PrimaryExpression	1		9634092	0					
ANR	9634809	Identifier	allow		9634092	1					
ANR	9634810	CompoundStatement		129:12:4105:4145	9634092	1					
ANR	9634811	IdentifierDeclStatement	double percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error ;	203:12:6126:6193	9634092	0	True				
ANR	9634812	IdentifierDecl	percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error		9634092	0					
ANR	9634813	IdentifierDeclType	double		9634092	0					
ANR	9634814	Identifier	percent		9634092	1					
ANR	9634815	AssignmentExpression	percent = ( precision >= DBL_DIG ) ? max_error_abs : max_error		9634092	2		=			
ANR	9634816	Identifier	percent		9634092	0					
ANR	9634817	ConditionalExpression	( precision >= DBL_DIG ) ? max_error_abs : max_error		9634092	1					
ANR	9634818	Condition	precision >= DBL_DIG		9634092	0					
ANR	9634819	RelationalExpression	precision >= DBL_DIG		9634092	0		>=			
ANR	9634820	Identifier	precision		9634092	0					
ANR	9634821	Identifier	DBL_DIG		9634092	1					
ANR	9634822	Identifier	max_error_abs		9634092	1					
ANR	9634823	Identifier	max_error		9634092	2					
ANR	9634824	IdentifierDeclStatement	double allowp = ( change - allow ) * 100 / allow ;	204:12:6207:6247	9634092	1	True				
ANR	9634825	IdentifierDecl	allowp = ( change - allow ) * 100 / allow		9634092	0					
ANR	9634826	IdentifierDeclType	double		9634092	0					
ANR	9634827	Identifier	allowp		9634092	1					
ANR	9634828	AssignmentExpression	allowp = ( change - allow ) * 100 / allow		9634092	2		=			
ANR	9634829	Identifier	allowp		9634092	0					
ANR	9634830	MultiplicativeExpression	( change - allow ) * 100 / allow		9634092	1		*			
ANR	9634831	AdditiveExpression	change - allow		9634092	0		-			
ANR	9634832	Identifier	change		9634092	0					
ANR	9634833	Identifier	allow		9634092	1					
ANR	9634834	MultiplicativeExpression	100 / allow		9634092	1		/			
ANR	9634835	PrimaryExpression	100		9634092	0					
ANR	9634836	Identifier	allow		9634092	1					
ANR	9634837	IfStatement	if ( precision >= DBL_DIG )		9634092	2					
ANR	9634838	Condition	precision >= DBL_DIG	206:16:6266:6285	9634092	0	True				
ANR	9634839	RelationalExpression	precision >= DBL_DIG		9634092	0		>=			
ANR	9634840	Identifier	precision		9634092	0					
ANR	9634841	Identifier	DBL_DIG		9634092	1					
ANR	9634842	CompoundStatement		132:12:4198:4198	9634092	1					
ANR	9634843	IfStatement	if ( max_abs < allowp )		9634092	0					
ANR	9634844	Condition	max_abs < allowp	208:19:6321:6336	9634092	0	True				
ANR	9634845	RelationalExpression	max_abs < allowp		9634092	0		<			
ANR	9634846	Identifier	max_abs		9634092	0					
ANR	9634847	Identifier	allowp		9634092	1					
ANR	9634848	ExpressionStatement	max_abs = allowp	208:37:6339:6355	9634092	1	True				
ANR	9634849	AssignmentExpression	max_abs = allowp		9634092	0		=			
ANR	9634850	Identifier	max_abs		9634092	0					
ANR	9634851	Identifier	allowp		9634092	1					
ANR	9634852	ElseStatement	else		9634092	0					
ANR	9634853	CompoundStatement		137:12:4299:4299	9634092	0					
ANR	9634854	IfStatement	if ( max < allowp )		9634092	0					
ANR	9634855	Condition	max < allowp	213:19:6422:6433	9634092	0	True				
ANR	9634856	RelationalExpression	max < allowp		9634092	0		<			
ANR	9634857	Identifier	max		9634092	0					
ANR	9634858	Identifier	allowp		9634092	1					
ANR	9634859	ExpressionStatement	max = allowp	213:33:6436:6448	9634092	1	True				
ANR	9634860	AssignmentExpression	max = allowp		9634092	0		=			
ANR	9634861	Identifier	max		9634092	0					
ANR	9634862	Identifier	allowp		9634092	1					
ANR	9634863	IfStatement	if ( showall || allowp >= percent )		9634092	3					
ANR	9634864	Condition	showall || allowp >= percent	216:16:6481:6508	9634092	0	True				
ANR	9634865	OrExpression	showall || allowp >= percent		9634092	0		||			
ANR	9634866	Identifier	showall		9634092	0					
ANR	9634867	RelationalExpression	allowp >= percent		9634092	1		>=			
ANR	9634868	Identifier	allowp		9634092	0					
ANR	9634869	Identifier	percent		9634092	1					
ANR	9634870	CompoundStatement		142:12:4421:4421	9634092	1					
ANR	9634871	ExpressionStatement	"fprintf ( stderr , ""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"" , DBL_DIG , test , precision , buffer , DBL_DIG , out , change , allow , ( int ) round ( allowp ) )"	218:15:6540:6754	9634092	0	True				
ANR	9634872	CallExpression	"fprintf ( stderr , ""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"" , DBL_DIG , test , precision , buffer , DBL_DIG , out , change , allow , ( int ) round ( allowp ) )"		9634092	0					
ANR	9634873	Callee	fprintf		9634092	0					
ANR	9634874	Identifier	fprintf		9634092	0					
ANR	9634875	ArgumentList	stderr		9634092	1					
ANR	9634876	Argument	stderr		9634092	0					
ANR	9634877	Identifier	stderr		9634092	0					
ANR	9634878	Argument	"""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"""		9634092	1					
ANR	9634879	PrimaryExpression	"""%.*g[%d] -> '%s' -> %.*g number changed (%g > %g (%d%%))\\n"""		9634092	0					
ANR	9634880	Argument	DBL_DIG		9634092	2					
ANR	9634881	Identifier	DBL_DIG		9634092	0					
ANR	9634882	Argument	test		9634092	3					
ANR	9634883	Identifier	test		9634092	0					
ANR	9634884	Argument	precision		9634092	4					
ANR	9634885	Identifier	precision		9634092	0					
ANR	9634886	Argument	buffer		9634092	5					
ANR	9634887	Identifier	buffer		9634092	0					
ANR	9634888	Argument	DBL_DIG		9634092	6					
ANR	9634889	Identifier	DBL_DIG		9634092	0					
ANR	9634890	Argument	out		9634092	7					
ANR	9634891	Identifier	out		9634092	0					
ANR	9634892	Argument	change		9634092	8					
ANR	9634893	Identifier	change		9634092	0					
ANR	9634894	Argument	allow		9634092	9					
ANR	9634895	Identifier	allow		9634092	0					
ANR	9634896	Argument	( int ) round ( allowp )		9634092	10					
ANR	9634897	CastExpression	( int ) round ( allowp )		9634092	0					
ANR	9634898	CastTarget	int		9634092	0					
ANR	9634899	CallExpression	round ( allowp )		9634092	1					
ANR	9634900	Callee	round		9634092	0					
ANR	9634901	Identifier	round		9634092	0					
ANR	9634902	ArgumentList	allowp		9634092	1					
ANR	9634903	Argument	allowp		9634092	0					
ANR	9634904	Identifier	allowp		9634092	0					
ANR	9634905	ExpressionStatement	failed = 1	222:15:6771:6781	9634092	1	True				
ANR	9634906	AssignmentExpression	failed = 1		9634092	0		=			
ANR	9634907	Identifier	failed		9634092	0					
ANR	9634908	PrimaryExpression	1		9634092	1					
ANR	9634909	ElseStatement	else		9634092	0					
ANR	9634910	ExpressionStatement	++ minorarith	225:15:6829:6841	9634092	0	True				
ANR	9634911	UnaryExpression	++ minorarith		9634092	0					
ANR	9634912	IncDec	++		9634092	0					
ANR	9634913	Identifier	minorarith		9634092	1					
ANR	9634914	IfStatement	if ( failed )		9634092	11					
ANR	9634915	Condition	failed	229:10:6873:6878	9634092	0	True				
ANR	9634916	Identifier	failed		9634092	0					
ANR	9634917	ExpressionStatement	++ failcount	230:9:6890:6901	9634092	1	True				
ANR	9634918	UnaryExpression	++ failcount		9634092	0					
ANR	9634919	IncDec	++		9634092	0					
ANR	9634920	Identifier	failcount		9634092	1					
ANR	9634921	ElseStatement	else		9634092	0					
ANR	9634922	ExpressionStatement	++ ok	232:9:6923:6927	9634092	0	True				
ANR	9634923	UnaryExpression	++ ok		9634092	0					
ANR	9634924	IncDec	++		9634092	0					
ANR	9634925	Identifier	ok		9634092	1					
ANR	9634926	Label	skip :	234:0:6930:6934	9634092	12	True				
ANR	9634927	Identifier	skip		9634092	0					
ANR	9634928	ExpressionStatement	precision = rand ( )	236:6:6991:7009	9634092	13	True				
ANR	9634929	AssignmentExpression	precision = rand ( )		9634092	0		=			
ANR	9634930	Identifier	precision		9634092	0					
ANR	9634931	CallExpression	rand ( )		9634092	1					
ANR	9634932	Callee	rand		9634092	0					
ANR	9634933	Identifier	rand		9634092	0					
ANR	9634934	ArgumentList			9634092	1					
ANR	9634935	IfStatement	if ( precision & 1 )		9634092	14					
ANR	9634936	Condition	precision & 1	237:10:7021:7033	9634092	0	True				
ANR	9634937	BitAndExpression	precision & 1		9634092	0		&			
ANR	9634938	Identifier	precision		9634092	0					
ANR	9634939	PrimaryExpression	1		9634092	1					
ANR	9634940	ExpressionStatement	test = - test	237:25:7036:7048	9634092	1	True				
ANR	9634941	AssignmentExpression	test = - test		9634092	0		=			
ANR	9634942	Identifier	test		9634092	0					
ANR	9634943	UnaryOperationExpression	- test		9634092	1					
ANR	9634944	UnaryOperator	-		9634092	0					
ANR	9634945	Identifier	test		9634092	1					
ANR	9634946	ExpressionStatement	precision >>= 1	238:6:7056:7071	9634092	15	True				
ANR	9634947	AssignmentExpression	precision >>= 1		9634092	0		>>=			
ANR	9634948	Identifier	precision		9634092	0					
ANR	9634949	PrimaryExpression	1		9634092	1					
ANR	9634950	IfStatement	if ( test == 0 || ! isfinite ( test ) )		9634092	16					
ANR	9634951	Condition	test == 0 || ! isfinite ( test )	241:10:7121:7148	9634092	0	True				
ANR	9634952	OrExpression	test == 0 || ! isfinite ( test )		9634092	0		||			
ANR	9634953	EqualityExpression	test == 0		9634092	0		==			
ANR	9634954	Identifier	test		9634092	0					
ANR	9634955	PrimaryExpression	0		9634092	1					
ANR	9634956	UnaryOperationExpression	! isfinite ( test )		9634092	1					
ANR	9634957	UnaryOperator	!		9634092	0					
ANR	9634958	CallExpression	isfinite ( test )		9634092	1					
ANR	9634959	Callee	isfinite		9634092	0					
ANR	9634960	Identifier	isfinite		9634092	0					
ANR	9634961	ArgumentList	test		9634092	1					
ANR	9634962	Argument	test		9634092	0					
ANR	9634963	Identifier	test		9634092	0					
ANR	9634964	ExpressionStatement	test = precision + 1	242:9:7160:7178	9634092	1	True				
ANR	9634965	AssignmentExpression	test = precision + 1		9634092	0		=			
ANR	9634966	Identifier	test		9634092	0					
ANR	9634967	AdditiveExpression	precision + 1		9634092	1		+			
ANR	9634968	Identifier	precision		9634092	0					
ANR	9634969	PrimaryExpression	1		9634092	1					
ANR	9634970	ElseStatement	else		9634092	0					
ANR	9634971	CompoundStatement		172:9:5252:5259	9634092	0					
ANR	9634972	IdentifierDeclStatement	int exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP ;	246:9:7275:7343	9634092	0	True				
ANR	9634973	IdentifierDecl	exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		9634092	0					
ANR	9634974	IdentifierDeclType	int		9634092	0					
ANR	9634975	Identifier	exponent		9634092	1					
ANR	9634976	AssignmentExpression	exponent = precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		9634092	2		=			
ANR	9634977	Identifier	exponent		9634092	0					
ANR	9634978	AdditiveExpression	precision % ( DBL_MAX_EXP - DBL_MIN_EXP ) + DBL_MIN_EXP		9634092	1		+			
ANR	9634979	MultiplicativeExpression	precision % ( DBL_MAX_EXP - DBL_MIN_EXP )		9634092	0		%			
ANR	9634980	Identifier	precision		9634092	0					
ANR	9634981	AdditiveExpression	DBL_MAX_EXP - DBL_MIN_EXP		9634092	1		-			
ANR	9634982	Identifier	DBL_MAX_EXP		9634092	0					
ANR	9634983	Identifier	DBL_MIN_EXP		9634092	1					
ANR	9634984	Identifier	DBL_MIN_EXP		9634092	1					
ANR	9634985	IdentifierDeclStatement	int tmp ;	247:9:7354:7361	9634092	1	True				
ANR	9634986	IdentifierDecl	tmp		9634092	0					
ANR	9634987	IdentifierDeclType	int		9634092	0					
ANR	9634988	Identifier	tmp		9634092	1					
ANR	9634989	ExpressionStatement	"test = frexp ( test * rand ( ) , & tmp )"	248:9:7372:7405	9634092	2	True				
ANR	9634990	AssignmentExpression	"test = frexp ( test * rand ( ) , & tmp )"		9634092	0		=			
ANR	9634991	Identifier	test		9634092	0					
ANR	9634992	CallExpression	"frexp ( test * rand ( ) , & tmp )"		9634092	1					
ANR	9634993	Callee	frexp		9634092	0					
ANR	9634994	Identifier	frexp		9634092	0					
ANR	9634995	ArgumentList	test * rand ( )		9634092	1					
ANR	9634996	Argument	test * rand ( )		9634092	0					
ANR	9634997	MultiplicativeExpression	test * rand ( )		9634092	0		*			
ANR	9634998	Identifier	test		9634092	0					
ANR	9634999	CallExpression	rand ( )		9634092	1					
ANR	9635000	Callee	rand		9634092	0					
ANR	9635001	Identifier	rand		9634092	0					
ANR	9635002	ArgumentList			9634092	1					
ANR	9635003	Argument	& tmp		9634092	1					
ANR	9635004	UnaryOperationExpression	& tmp		9634092	0					
ANR	9635005	UnaryOperator	&		9634092	0					
ANR	9635006	Identifier	tmp		9634092	1					
ANR	9635007	ExpressionStatement	"test = ldexp ( test , exponent )"	249:9:7416:7444	9634092	3	True				
ANR	9635008	AssignmentExpression	"test = ldexp ( test , exponent )"		9634092	0		=			
ANR	9635009	Identifier	test		9634092	0					
ANR	9635010	CallExpression	"ldexp ( test , exponent )"		9634092	1					
ANR	9635011	Callee	ldexp		9634092	0					
ANR	9635012	Identifier	ldexp		9634092	0					
ANR	9635013	ArgumentList	test		9634092	1					
ANR	9635014	Argument	test		9634092	0					
ANR	9635015	Identifier	test		9634092	0					
ANR	9635016	Argument	exponent		9634092	1					
ANR	9635017	Identifier	exponent		9634092	0					
ANR	9635018	ExpressionStatement	precision >>= 8	250:9:7455:7470	9634092	4	True				
ANR	9635019	AssignmentExpression	precision >>= 8		9634092	0		>>=			
ANR	9635020	Identifier	precision		9634092	0					
ANR	9635021	PrimaryExpression	8		9634092	1					
ANR	9635022	ExpressionStatement	precision = ( precision & 0x1f ) + 1	256:6:7642:7676	9634092	17	True				
ANR	9635023	AssignmentExpression	precision = ( precision & 0x1f ) + 1		9634092	0		=			
ANR	9635024	Identifier	precision		9634092	0					
ANR	9635025	AdditiveExpression	( precision & 0x1f ) + 1		9634092	1		+			
ANR	9635026	BitAndExpression	precision & 0x1f		9634092	0		&			
ANR	9635027	Identifier	precision		9634092	0					
ANR	9635028	PrimaryExpression	0x1f		9634092	1					
ANR	9635029	PrimaryExpression	1		9634092	1					
ANR	9635030	Condition	-- count	258:10:7693:7699	9634092	1	True				
ANR	9635031	UnaryExpression	-- count		9634092	0					
ANR	9635032	IncDec	--		9634092	0					
ANR	9635033	Identifier	count		9634092	1					
ANR	9635034	Statement	printf	260:3:7707:7712	9634092	14	True				
ANR	9635035	Statement	(	260:9:7713:7713	9634092	15	True				
ANR	9635036	Statement	"""Tested %d finite values, %d non-finite, %d OK (%d failed) %d minor """	260:10:7714:7782	9634092	16	True				
ANR	9635037	Statement	"""arithmetic errors\\n"""	261:6:7790:7810	9634092	17	True				
ANR	9635038	Statement	","	261:27:7811:7811	9634092	18	True				
ANR	9635039	Statement	finite	261:29:7813:7818	9634092	19	True				
ANR	9635040	Statement	","	261:35:7819:7819	9634092	20	True				
ANR	9635041	Statement	nonfinite	261:37:7821:7829	9634092	21	True				
ANR	9635042	Statement	","	261:46:7830:7830	9634092	22	True				
ANR	9635043	Statement	ok	261:48:7832:7833	9634092	23	True				
ANR	9635044	Statement	","	261:50:7834:7834	9634092	24	True				
ANR	9635045	Statement	failcount	261:52:7836:7844	9634092	25	True				
ANR	9635046	Statement	","	261:61:7845:7845	9634092	26	True				
ANR	9635047	Statement	minorarith	261:63:7847:7856	9634092	27	True				
ANR	9635048	Statement	)	261:73:7857:7857	9634092	28	True				
ANR	9635049	ExpressionStatement		261:74:7858:7858	9634092	29	True				
ANR	9635050	ExpressionStatement	"printf ( "" Error with >=%d digit precision %.2f%%\\n"" , DBL_DIG , max_abs )"	262:3:7863:7932	9634092	30	True				
ANR	9635051	CallExpression	"printf ( "" Error with >=%d digit precision %.2f%%\\n"" , DBL_DIG , max_abs )"		9634092	0					
ANR	9635052	Callee	printf		9634092	0					
ANR	9635053	Identifier	printf		9634092	0					
ANR	9635054	ArgumentList	""" Error with >=%d digit precision %.2f%%\\n"""		9634092	1					
ANR	9635055	Argument	""" Error with >=%d digit precision %.2f%%\\n"""		9634092	0					
ANR	9635056	PrimaryExpression	""" Error with >=%d digit precision %.2f%%\\n"""		9634092	0					
ANR	9635057	Argument	DBL_DIG		9634092	1					
ANR	9635058	Identifier	DBL_DIG		9634092	0					
ANR	9635059	Argument	max_abs		9634092	2					
ANR	9635060	Identifier	max_abs		9634092	0					
ANR	9635061	ExpressionStatement	"printf ( "" Error with < %d digit precision %.2f%%\\n"" , DBL_DIG , max )"	263:3:7937:8002	9634092	31	True				
ANR	9635062	CallExpression	"printf ( "" Error with < %d digit precision %.2f%%\\n"" , DBL_DIG , max )"		9634092	0					
ANR	9635063	Callee	printf		9634092	0					
ANR	9635064	Identifier	printf		9634092	0					
ANR	9635065	ArgumentList	""" Error with < %d digit precision %.2f%%\\n"""		9634092	1					
ANR	9635066	Argument	""" Error with < %d digit precision %.2f%%\\n"""		9634092	0					
ANR	9635067	PrimaryExpression	""" Error with < %d digit precision %.2f%%\\n"""		9634092	0					
ANR	9635068	Argument	DBL_DIG		9634092	1					
ANR	9635069	Identifier	DBL_DIG		9634092	0					
ANR	9635070	Argument	max		9634092	2					
ANR	9635071	Identifier	max		9634092	0					
ANR	9635072	ReturnStatement	return 0 ;	265:3:8008:8016	9634092	32	True				
ANR	9635073	PrimaryExpression	0		9634092	0					
ANR	9635074	ReturnType	int		9634092	1					
ANR	9635075	Identifier	validation_ascii_to_fp		9634092	2					
ANR	9635076	ParameterList	"int count , int argc , char * * argv"		9634092	3					
ANR	9635077	Parameter	int count	75:27:2067:2075	9634092	0	True				
ANR	9635078	ParameterType	int		9634092	0					
ANR	9635079	Identifier	count		9634092	1					
ANR	9635080	Parameter	int argc	75:38:2078:2085	9634092	1	True				
ANR	9635081	ParameterType	int		9634092	0					
ANR	9635082	Identifier	argc		9634092	1					
ANR	9635083	Parameter	char * * argv	75:48:2088:2098	9634092	2	True				
ANR	9635084	ParameterType	char * *		9634092	0					
ANR	9635085	Identifier	argv		9634092	1					
ANR	9635086	CFGEntryNode	ENTRY		9634092		True				
ANR	9635087	CFGExitNode	EXIT		9634092		True				
ANR	9635088	Symbol	frexp		9634092						
ANR	9635089	Symbol	ldexp		9634092						
ANR	9635090	Symbol	precision		9634092						
ANR	9635091	Symbol	* index		9634092						
ANR	9635092	Symbol	isfinite		9634092						
ANR	9635093	Symbol	* argv		9634092						
ANR	9635094	Symbol	PNG_FP_IS_ZERO		9634092						
ANR	9635095	Symbol	PNG_FP_IS_POSITIVE		9634092						
ANR	9635096	Symbol	rand		9634092						
ANR	9635097	Symbol	strlen		9634092						
ANR	9635098	Symbol	DBL_DIG		9634092						
ANR	9635099	Symbol	tmp		9634092						
ANR	9635100	Symbol	max_error_abs		9634092						
ANR	9635101	Symbol	state		9634092						
ANR	9635102	Symbol	buffer		9634092						
ANR	9635103	Symbol	& index		9634092						
ANR	9635104	Symbol	PNG_FP_IS_NEGATIVE		9634092						
ANR	9635105	Symbol	exponent		9634092						
ANR	9635106	Symbol	strcmp		9634092						
ANR	9635107	Symbol	test		9634092						
ANR	9635108	Symbol	* precision		9634092						
ANR	9635109	Symbol	png_check_fp_number		9634092						
ANR	9635110	Symbol	finite		9634092						
ANR	9635111	Symbol	count		9634092						
ANR	9635112	Symbol	index		9634092						
ANR	9635113	Symbol	failed		9634092						
ANR	9635114	Symbol	stderr		9634092						
ANR	9635115	Symbol	max_error		9634092						
ANR	9635116	Symbol	DBL_MAX		9634092						
ANR	9635117	Symbol	minorarith		9634092						
ANR	9635118	Symbol	& tmp		9634092						
ANR	9635119	Symbol	showall		9634092						
ANR	9635120	Symbol	nonfinite		9634092						
ANR	9635121	Symbol	allow		9634092						
ANR	9635122	Symbol	max_abs		9634092						
ANR	9635123	Symbol	& state		9634092						
ANR	9635124	Symbol	failcount		9634092						
ANR	9635125	Symbol	argv		9634092						
ANR	9635126	Symbol	percent		9634092						
ANR	9635127	Symbol	out		9634092						
ANR	9635128	Symbol	pow		9634092						
ANR	9635129	Symbol	ok		9634092						
ANR	9635130	Symbol	argc		9634092						
ANR	9635131	Symbol	* buffer		9634092						
ANR	9635132	Symbol	fabs		9634092						
ANR	9635133	Symbol	max		9634092						
ANR	9635134	Symbol	atof		9634092						
ANR	9635135	Symbol	change		9634092						
ANR	9635136	Symbol	DBL_MIN_EXP		9634092						
ANR	9635137	Symbol	allowp		9634092						
ANR	9635138	Symbol	verbose		9634092						
ANR	9635139	Symbol	DBL_MAX_EXP		9634092						
ANR	9635140	Symbol	round		9634092						
ANR	9635141	Symbol	* ++ argv		9634092						
ANR	9635142	ClassDef	checkfp_state	275:8:8254:8327							
ANR	9635143	DeclStmt									
ANR	9635144	Decl							checkfp_state	checkfp_state	checkfp_state
ANR	9635145	DeclStmt									
ANR	9635146	Decl							const char	const char [ ]	none
ANR	9635147	DeclStmt									
ANR	9635148	Decl							const char	const char [ 16 ]	hexdigits
ANR	9635149	ClassDef	<unnamed>	284:13:8500:8878							
ANR	9635150	DeclStmt									
ANR	9635151	Decl							const char	const char *	start
ANR	9635152	DeclStmt									
ANR	9635153	Decl							const char	const char *	end
ANR	9635154	DeclStmt									
ANR	9635155	Decl							const char	const char *	tests
ANR	9635156	DeclStmt									
ANR	9635157	Decl								 [ states ]	state_characters
ANR	9635158	ClassDef	<unnamed>	297:8:8889:9294							
ANR	9635159	DeclStmt									
ANR	9635160	Decl							char	char [ 1024 ]	number
ANR	9635161	DeclStmt									
ANR	9635162	Decl							int	int	limit
ANR	9635163	DeclStmt									
ANR	9635164	Decl							int	int	verbose
ANR	9635165	DeclStmt									
ANR	9635166	Decl							int	int	ctimes
ANR	9635167	DeclStmt									
ANR	9635168	Decl							int	int	cmillions
ANR	9635169	DeclStmt									
ANR	9635170	Decl							int	int	cinvalid
ANR	9635171	DeclStmt									
ANR	9635172	Decl							int	int	cnoaccept
ANR	9635173	DeclStmt									
ANR	9635174	Decl									checkfp_command
ANR	9635175	ClassDef	<unnamed>	309:8:9305:9936							
ANR	9635176	DeclStmt									
ANR	9635177	Decl							int	int	cnumber
ANR	9635178	DeclStmt									
ANR	9635179	Decl							checkfp_state	checkfp_state	check_state
ANR	9635180	DeclStmt									
ANR	9635181	Decl							int	int	at_start
ANR	9635182	DeclStmt									
ANR	9635183	Decl							int	int	cdigits_in_state
ANR	9635184	DeclStmt									
ANR	9635185	Decl							int	int	limit
ANR	9635186	DeclStmt									
ANR	9635187	Decl							int	int	state
ANR	9635188	DeclStmt									
ANR	9635189	Decl							int	int	is_negative
ANR	9635190	DeclStmt									
ANR	9635191	Decl							int	int	is_zero
ANR	9635192	DeclStmt									
ANR	9635193	Decl							int	int	number_was_valid
ANR	9635194	DeclStmt									
ANR	9635195	Decl									checkfp_control
ANR	9635196	DeclStmt									
ANR	9635197	Decl							int	"int ( checkfp_command * co , checkfp_control c )"	check_all_characters
ANR	9635198	DeclStmt									
ANR	9635199	Decl							int	"int ( checkfp_command * co , checkfp_control c , const char * tests )"	check_some_characters
ANR	9635200	Function	check_one_character	328:0:10110:15369							
ANR	9635201	FunctionDef	"check_one_character (checkfp_command * co , checkfp_control c , int ch)"		9635200	0					
ANR	9635202	CompoundStatement		329:0:10189:15369	9635200	0					
ANR	9635203	IdentifierDeclStatement	png_size_t index = 0 ;	332:3:10277:10297	9635200	0	True				
ANR	9635204	IdentifierDecl	index = 0		9635200	0					
ANR	9635205	IdentifierDeclType	png_size_t		9635200	0					
ANR	9635206	Identifier	index		9635200	1					
ANR	9635207	AssignmentExpression	index = 0		9635200	2		=			
ANR	9635208	Identifier	index		9635200	0					
ANR	9635209	PrimaryExpression	0		9635200	1					
ANR	9635210	IdentifierDeclStatement	const char test = ( char ) ch ;	333:3:10302:10328	9635200	1	True				
ANR	9635211	IdentifierDecl	test = ( char ) ch		9635200	0					
ANR	9635212	IdentifierDeclType	const char		9635200	0					
ANR	9635213	Identifier	test		9635200	1					
ANR	9635214	AssignmentExpression	test = ( char ) ch		9635200	2		=			
ANR	9635215	Identifier	test		9635200	0					
ANR	9635216	CastExpression	( char ) ch		9635200	1					
ANR	9635217	CastTarget	char		9635200	0					
ANR	9635218	Identifier	ch		9635200	1					
ANR	9635219	IdentifierDeclStatement	"const int number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index ) ;"	334:3:10333:10408	9635200	2	True				
ANR	9635220	IdentifierDecl	"number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index )"		9635200	0					
ANR	9635221	IdentifierDeclType	const int		9635200	0					
ANR	9635222	Identifier	number_is_valid		9635200	1					
ANR	9635223	AssignmentExpression	"number_is_valid = png_check_fp_number ( & test , 1 , & c . state , & index )"		9635200	2		=			
ANR	9635224	Identifier	number_is_valid		9635200	0					
ANR	9635225	CallExpression	"png_check_fp_number ( & test , 1 , & c . state , & index )"		9635200	1					
ANR	9635226	Callee	png_check_fp_number		9635200	0					
ANR	9635227	Identifier	png_check_fp_number		9635200	0					
ANR	9635228	ArgumentList	& test		9635200	1					
ANR	9635229	Argument	& test		9635200	0					
ANR	9635230	UnaryOperationExpression	& test		9635200	0					
ANR	9635231	UnaryOperator	&		9635200	0					
ANR	9635232	Identifier	test		9635200	1					
ANR	9635233	Argument	1		9635200	1					
ANR	9635234	PrimaryExpression	1		9635200	0					
ANR	9635235	Argument	& c . state		9635200	2					
ANR	9635236	UnaryOperationExpression	& c . state		9635200	0					
ANR	9635237	UnaryOperator	&		9635200	0					
ANR	9635238	MemberAccess	c . state		9635200	1					
ANR	9635239	Identifier	c		9635200	0					
ANR	9635240	Identifier	state		9635200	1					
ANR	9635241	Argument	& index		9635200	3					
ANR	9635242	UnaryOperationExpression	& index		9635200	0					
ANR	9635243	UnaryOperator	&		9635200	0					
ANR	9635244	Identifier	index		9635200	1					
ANR	9635245	IdentifierDeclStatement	const int character_accepted = ( index == 1 ) ;	335:3:10413:10456	9635200	3	True				
ANR	9635246	IdentifierDecl	character_accepted = ( index == 1 )		9635200	0					
ANR	9635247	IdentifierDeclType	const int		9635200	0					
ANR	9635248	Identifier	character_accepted		9635200	1					
ANR	9635249	AssignmentExpression	character_accepted = ( index == 1 )		9635200	2		=			
ANR	9635250	Identifier	character_accepted		9635200	0					
ANR	9635251	EqualityExpression	index == 1		9635200	1		==			
ANR	9635252	Identifier	index		9635200	0					
ANR	9635253	PrimaryExpression	1		9635200	1					
ANR	9635254	IfStatement	if ( c . check_state != exponent && isdigit ( ch ) && ch != '0' )		9635200	4					
ANR	9635255	Condition	c . check_state != exponent && isdigit ( ch ) && ch != '0'	337:7:10466:10518	9635200	0	True				
ANR	9635256	AndExpression	c . check_state != exponent && isdigit ( ch ) && ch != '0'		9635200	0		&&			
ANR	9635257	EqualityExpression	c . check_state != exponent		9635200	0		!=			
ANR	9635258	MemberAccess	c . check_state		9635200	0					
ANR	9635259	Identifier	c		9635200	0					
ANR	9635260	Identifier	check_state		9635200	1					
ANR	9635261	Identifier	exponent		9635200	1					
ANR	9635262	AndExpression	isdigit ( ch ) && ch != '0'		9635200	1		&&			
ANR	9635263	CallExpression	isdigit ( ch )		9635200	0					
ANR	9635264	Callee	isdigit		9635200	0					
ANR	9635265	Identifier	isdigit		9635200	0					
ANR	9635266	ArgumentList	ch		9635200	1					
ANR	9635267	Argument	ch		9635200	0					
ANR	9635268	Identifier	ch		9635200	0					
ANR	9635269	EqualityExpression	ch != '0'		9635200	1		!=			
ANR	9635270	Identifier	ch		9635200	0					
ANR	9635271	PrimaryExpression	'0'		9635200	1					
ANR	9635272	ExpressionStatement	c . is_zero = 0	338:6:10527:10540	9635200	1	True				
ANR	9635273	AssignmentExpression	c . is_zero = 0		9635200	0		=			
ANR	9635274	MemberAccess	c . is_zero		9635200	0					
ANR	9635275	Identifier	c		9635200	0					
ANR	9635276	Identifier	is_zero		9635200	1					
ANR	9635277	PrimaryExpression	0		9635200	1					
ANR	9635278	IfStatement	if ( c . check_state == start && c . at_start && ch == '-' )		9635200	5					
ANR	9635279	Condition	c . check_state == start && c . at_start && ch == '-'	340:7:10550:10598	9635200	0	True				
ANR	9635280	AndExpression	c . check_state == start && c . at_start && ch == '-'		9635200	0		&&			
ANR	9635281	EqualityExpression	c . check_state == start		9635200	0		==			
ANR	9635282	MemberAccess	c . check_state		9635200	0					
ANR	9635283	Identifier	c		9635200	0					
ANR	9635284	Identifier	check_state		9635200	1					
ANR	9635285	Identifier	start		9635200	1					
ANR	9635286	AndExpression	c . at_start && ch == '-'		9635200	1		&&			
ANR	9635287	MemberAccess	c . at_start		9635200	0					
ANR	9635288	Identifier	c		9635200	0					
ANR	9635289	Identifier	at_start		9635200	1					
ANR	9635290	EqualityExpression	ch == '-'		9635200	1		==			
ANR	9635291	Identifier	ch		9635200	0					
ANR	9635292	PrimaryExpression	'-'		9635200	1					
ANR	9635293	ExpressionStatement	c . is_negative = 1	341:6:10607:10624	9635200	1	True				
ANR	9635294	AssignmentExpression	c . is_negative = 1		9635200	0		=			
ANR	9635295	MemberAccess	c . is_negative		9635200	0					
ANR	9635296	Identifier	c		9635200	0					
ANR	9635297	Identifier	is_negative		9635200	1					
ANR	9635298	PrimaryExpression	1		9635200	1					
ANR	9635299	IfStatement	if ( isprint ( ch ) )		9635200	6					
ANR	9635300	Condition	isprint ( ch )	343:7:10634:10644	9635200	0	True				
ANR	9635301	CallExpression	isprint ( ch )		9635200	0					
ANR	9635302	Callee	isprint		9635200	0					
ANR	9635303	Identifier	isprint		9635200	0					
ANR	9635304	ArgumentList	ch		9635200	1					
ANR	9635305	Argument	ch		9635200	0					
ANR	9635306	Identifier	ch		9635200	0					
ANR	9635307	ExpressionStatement	co -> number [ c . cnumber ++ ] = ( char ) ch	344:6:10653:10687	9635200	1	True				
ANR	9635308	AssignmentExpression	co -> number [ c . cnumber ++ ] = ( char ) ch		9635200	0		=			
ANR	9635309	ArrayIndexing	co -> number [ c . cnumber ++ ]		9635200	0					
ANR	9635310	PtrMemberAccess	co -> number		9635200	0					
ANR	9635311	Identifier	co		9635200	0					
ANR	9635312	Identifier	number		9635200	1					
ANR	9635313	PostIncDecOperationExpression	c . cnumber ++		9635200	1					
ANR	9635314	MemberAccess	c . cnumber		9635200	0					
ANR	9635315	Identifier	c		9635200	0					
ANR	9635316	Identifier	cnumber		9635200	1					
ANR	9635317	IncDec	++		9635200	1					
ANR	9635318	CastExpression	( char ) ch		9635200	1					
ANR	9635319	CastTarget	char		9635200	0					
ANR	9635320	Identifier	ch		9635200	1					
ANR	9635321	ElseStatement	else		9635200	0					
ANR	9635322	CompoundStatement		18:3:510:510	9635200	0					
ANR	9635323	ExpressionStatement	co -> number [ c . cnumber ++ ] = '<'	347:6:10708:10737	9635200	0	True				
ANR	9635324	AssignmentExpression	co -> number [ c . cnumber ++ ] = '<'		9635200	0		=			
ANR	9635325	ArrayIndexing	co -> number [ c . cnumber ++ ]		9635200	0					
ANR	9635326	PtrMemberAccess	co -> number		9635200	0					
ANR	9635327	Identifier	co		9635200	0					
ANR	9635328	Identifier	number		9635200	1					
ANR	9635329	PostIncDecOperationExpression	c . cnumber ++		9635200	1					
ANR	9635330	MemberAccess	c . cnumber		9635200	0					
ANR	9635331	Identifier	c		9635200	0					
ANR	9635332	Identifier	cnumber		9635200	1					
ANR	9635333	IncDec	++		9635200	1					
ANR	9635334	PrimaryExpression	'<'		9635200	1					
ANR	9635335	ExpressionStatement	co -> number [ c . cnumber ++ ] = hexdigits [ ( ch >> 4 ) & 0xf ]	348:6:10745:10797	9635200	1	True				
ANR	9635336	AssignmentExpression	co -> number [ c . cnumber ++ ] = hexdigits [ ( ch >> 4 ) & 0xf ]		9635200	0		=			
ANR	9635337	ArrayIndexing	co -> number [ c . cnumber ++ ]		9635200	0					
ANR	9635338	PtrMemberAccess	co -> number		9635200	0					
ANR	9635339	Identifier	co		9635200	0					
ANR	9635340	Identifier	number		9635200	1					
ANR	9635341	PostIncDecOperationExpression	c . cnumber ++		9635200	1					
ANR	9635342	MemberAccess	c . cnumber		9635200	0					
ANR	9635343	Identifier	c		9635200	0					
ANR	9635344	Identifier	cnumber		9635200	1					
ANR	9635345	IncDec	++		9635200	1					
ANR	9635346	ArrayIndexing	hexdigits [ ( ch >> 4 ) & 0xf ]		9635200	1					
ANR	9635347	Identifier	hexdigits		9635200	0					
ANR	9635348	BitAndExpression	( ch >> 4 ) & 0xf		9635200	1		&			
ANR	9635349	ShiftExpression	ch >> 4		9635200	0		>>			
ANR	9635350	Identifier	ch		9635200	0					
ANR	9635351	PrimaryExpression	4		9635200	1					
ANR	9635352	PrimaryExpression	0xf		9635200	1					
ANR	9635353	ExpressionStatement	co -> number [ c . cnumber ++ ] = hexdigits [ ch & 0xf ]	349:6:10805:10850	9635200	2	True				
ANR	9635354	AssignmentExpression	co -> number [ c . cnumber ++ ] = hexdigits [ ch & 0xf ]		9635200	0		=			
ANR	9635355	ArrayIndexing	co -> number [ c . cnumber ++ ]		9635200	0					
ANR	9635356	PtrMemberAccess	co -> number		9635200	0					
ANR	9635357	Identifier	co		9635200	0					
ANR	9635358	Identifier	number		9635200	1					
ANR	9635359	PostIncDecOperationExpression	c . cnumber ++		9635200	1					
ANR	9635360	MemberAccess	c . cnumber		9635200	0					
ANR	9635361	Identifier	c		9635200	0					
ANR	9635362	Identifier	cnumber		9635200	1					
ANR	9635363	IncDec	++		9635200	1					
ANR	9635364	ArrayIndexing	hexdigits [ ch & 0xf ]		9635200	1					
ANR	9635365	Identifier	hexdigits		9635200	0					
ANR	9635366	BitAndExpression	ch & 0xf		9635200	1		&			
ANR	9635367	Identifier	ch		9635200	0					
ANR	9635368	PrimaryExpression	0xf		9635200	1					
ANR	9635369	ExpressionStatement	co -> number [ c . cnumber ++ ] = '>'	350:6:10858:10887	9635200	3	True				
ANR	9635370	AssignmentExpression	co -> number [ c . cnumber ++ ] = '>'		9635200	0		=			
ANR	9635371	ArrayIndexing	co -> number [ c . cnumber ++ ]		9635200	0					
ANR	9635372	PtrMemberAccess	co -> number		9635200	0					
ANR	9635373	Identifier	co		9635200	0					
ANR	9635374	Identifier	number		9635200	1					
ANR	9635375	PostIncDecOperationExpression	c . cnumber ++		9635200	1					
ANR	9635376	MemberAccess	c . cnumber		9635200	0					
ANR	9635377	Identifier	c		9635200	0					
ANR	9635378	Identifier	cnumber		9635200	1					
ANR	9635379	IncDec	++		9635200	1					
ANR	9635380	PrimaryExpression	'>'		9635200	1					
ANR	9635381	ExpressionStatement	co -> number [ c . cnumber ] = 0	352:3:10897:10922	9635200	7	True				
ANR	9635382	AssignmentExpression	co -> number [ c . cnumber ] = 0		9635200	0		=			
ANR	9635383	ArrayIndexing	co -> number [ c . cnumber ]		9635200	0					
ANR	9635384	PtrMemberAccess	co -> number		9635200	0					
ANR	9635385	Identifier	co		9635200	0					
ANR	9635386	Identifier	number		9635200	1					
ANR	9635387	MemberAccess	c . cnumber		9635200	1					
ANR	9635388	Identifier	c		9635200	0					
ANR	9635389	Identifier	cnumber		9635200	1					
ANR	9635390	PrimaryExpression	0		9635200	1					
ANR	9635391	IfStatement	if ( co -> verbose > 1 )		9635200	8					
ANR	9635392	Condition	co -> verbose > 1	354:7:10932:10946	9635200	0	True				
ANR	9635393	RelationalExpression	co -> verbose > 1		9635200	0		>			
ANR	9635394	PtrMemberAccess	co -> verbose		9635200	0					
ANR	9635395	Identifier	co		9635200	0					
ANR	9635396	Identifier	verbose		9635200	1					
ANR	9635397	PrimaryExpression	1		9635200	1					
ANR	9635398	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , co -> number )"	355:6:10955:10990	9635200	1	True				
ANR	9635399	CallExpression	"fprintf ( stderr , ""%s\\n"" , co -> number )"		9635200	0					
ANR	9635400	Callee	fprintf		9635200	0					
ANR	9635401	Identifier	fprintf		9635200	0					
ANR	9635402	ArgumentList	stderr		9635200	1					
ANR	9635403	Argument	stderr		9635200	0					
ANR	9635404	Identifier	stderr		9635200	0					
ANR	9635405	Argument	"""%s\\n"""		9635200	1					
ANR	9635406	PrimaryExpression	"""%s\\n"""		9635200	0					
ANR	9635407	Argument	co -> number		9635200	2					
ANR	9635408	PtrMemberAccess	co -> number		9635200	0					
ANR	9635409	Identifier	co		9635200	0					
ANR	9635410	Identifier	number		9635200	1					
ANR	9635411	IfStatement	if ( ++ ( co -> ctimes ) == 1000000 )		9635200	9					
ANR	9635412	Condition	++ ( co -> ctimes ) == 1000000	357:7:11000:11024	9635200	0	True				
ANR	9635413	EqualityExpression	++ ( co -> ctimes ) == 1000000		9635200	0		==			
ANR	9635414	UnaryExpression	++ ( co -> ctimes )		9635200	0					
ANR	9635415	IncDec	++		9635200	0					
ANR	9635416	PtrMemberAccess	co -> ctimes		9635200	1					
ANR	9635417	Identifier	co		9635200	0					
ANR	9635418	Identifier	ctimes		9635200	1					
ANR	9635419	PrimaryExpression	1000000		9635200	1					
ANR	9635420	CompoundStatement		30:3:840:840	9635200	1					
ANR	9635421	IfStatement	if ( co -> verbose == 1 )		9635200	0					
ANR	9635422	Condition	co -> verbose == 1	359:10:11042:11057	9635200	0	True				
ANR	9635423	EqualityExpression	co -> verbose == 1		9635200	0		==			
ANR	9635424	PtrMemberAccess	co -> verbose		9635200	0					
ANR	9635425	Identifier	co		9635200	0					
ANR	9635426	Identifier	verbose		9635200	1					
ANR	9635427	PrimaryExpression	1		9635200	1					
ANR	9635428	ExpressionStatement	"fputc ( '.' , stderr )"	360:9:11069:11087	9635200	1	True				
ANR	9635429	CallExpression	"fputc ( '.' , stderr )"		9635200	0					
ANR	9635430	Callee	fputc		9635200	0					
ANR	9635431	Identifier	fputc		9635200	0					
ANR	9635432	ArgumentList	'.'		9635200	1					
ANR	9635433	Argument	'.'		9635200	0					
ANR	9635434	PrimaryExpression	'.'		9635200	0					
ANR	9635435	Argument	stderr		9635200	1					
ANR	9635436	Identifier	stderr		9635200	0					
ANR	9635437	ExpressionStatement	co -> ctimes = 0	361:6:11095:11109	9635200	1	True				
ANR	9635438	AssignmentExpression	co -> ctimes = 0		9635200	0		=			
ANR	9635439	PtrMemberAccess	co -> ctimes		9635200	0					
ANR	9635440	Identifier	co		9635200	0					
ANR	9635441	Identifier	ctimes		9635200	1					
ANR	9635442	PrimaryExpression	0		9635200	1					
ANR	9635443	ExpressionStatement	++ ( co -> cmillions )	362:6:11117:11134	9635200	2	True				
ANR	9635444	UnaryExpression	++ ( co -> cmillions )		9635200	0					
ANR	9635445	IncDec	++		9635200	0					
ANR	9635446	PtrMemberAccess	co -> cmillions		9635200	1					
ANR	9635447	Identifier	co		9635200	0					
ANR	9635448	Identifier	cmillions		9635200	1					
ANR	9635449	IfStatement	if ( ! number_is_valid )		9635200	10					
ANR	9635450	Condition	! number_is_valid	365:7:11149:11164	9635200	0	True				
ANR	9635451	UnaryOperationExpression	! number_is_valid		9635200	0					
ANR	9635452	UnaryOperator	!		9635200	0					
ANR	9635453	Identifier	number_is_valid		9635200	1					
ANR	9635454	ExpressionStatement	++ ( co -> cinvalid )	366:6:11173:11189	9635200	1	True				
ANR	9635455	UnaryExpression	++ ( co -> cinvalid )		9635200	0					
ANR	9635456	IncDec	++		9635200	0					
ANR	9635457	PtrMemberAccess	co -> cinvalid		9635200	1					
ANR	9635458	Identifier	co		9635200	0					
ANR	9635459	Identifier	cinvalid		9635200	1					
ANR	9635460	IfStatement	if ( ! character_accepted )		9635200	11					
ANR	9635461	Condition	! character_accepted	368:7:11199:11217	9635200	0	True				
ANR	9635462	UnaryOperationExpression	! character_accepted		9635200	0					
ANR	9635463	UnaryOperator	!		9635200	0					
ANR	9635464	Identifier	character_accepted		9635200	1					
ANR	9635465	ExpressionStatement	++ ( co -> cnoaccept )	369:6:11226:11243	9635200	1	True				
ANR	9635466	UnaryExpression	++ ( co -> cnoaccept )		9635200	0					
ANR	9635467	IncDec	++		9635200	0					
ANR	9635468	PtrMemberAccess	co -> cnoaccept		9635200	1					
ANR	9635469	Identifier	co		9635200	0					
ANR	9635470	Identifier	cnoaccept		9635200	1					
ANR	9635471	IfStatement	if ( index != 0 && index != 1 )		9635200	12					
ANR	9635472	Condition	index != 0 && index != 1	372:7:11318:11341	9635200	0	True				
ANR	9635473	AndExpression	index != 0 && index != 1		9635200	0		&&			
ANR	9635474	EqualityExpression	index != 0		9635200	0		!=			
ANR	9635475	Identifier	index		9635200	0					
ANR	9635476	PrimaryExpression	0		9635200	1					
ANR	9635477	EqualityExpression	index != 1		9635200	1		!=			
ANR	9635478	Identifier	index		9635200	0					
ANR	9635479	PrimaryExpression	1		9635200	1					
ANR	9635480	CompoundStatement		45:3:1157:1157	9635200	1					
ANR	9635481	ExpressionStatement	"fprintf ( stderr , ""%s: read beyond end of string (%lu)\\n"" , co -> number , ( unsigned long ) index )"	374:6:11355:11454	9635200	0	True				
ANR	9635482	CallExpression	"fprintf ( stderr , ""%s: read beyond end of string (%lu)\\n"" , co -> number , ( unsigned long ) index )"		9635200	0					
ANR	9635483	Callee	fprintf		9635200	0					
ANR	9635484	Identifier	fprintf		9635200	0					
ANR	9635485	ArgumentList	stderr		9635200	1					
ANR	9635486	Argument	stderr		9635200	0					
ANR	9635487	Identifier	stderr		9635200	0					
ANR	9635488	Argument	"""%s: read beyond end of string (%lu)\\n"""		9635200	1					
ANR	9635489	PrimaryExpression	"""%s: read beyond end of string (%lu)\\n"""		9635200	0					
ANR	9635490	Argument	co -> number		9635200	2					
ANR	9635491	PtrMemberAccess	co -> number		9635200	0					
ANR	9635492	Identifier	co		9635200	0					
ANR	9635493	Identifier	number		9635200	1					
ANR	9635494	Argument	( unsigned long ) index		9635200	3					
ANR	9635495	CastExpression	( unsigned long ) index		9635200	0					
ANR	9635496	CastTarget	unsigned long		9635200	0					
ANR	9635497	Identifier	index		9635200	1					
ANR	9635498	ReturnStatement	return 0 ;	376:6:11462:11470	9635200	1	True				
ANR	9635499	PrimaryExpression	0		9635200	0					
ANR	9635500	IfStatement	if ( PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative ) )		9635200	13					
ANR	9635501	Condition	PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative )	382:7:11605:11689	9635200	0	True				
ANR	9635502	EqualityExpression	PNG_FP_IS_NEGATIVE ( c . state ) != ( number_is_valid && ! c . is_zero && c . is_negative )		9635200	0		!=			
ANR	9635503	CallExpression	PNG_FP_IS_NEGATIVE ( c . state )		9635200	0					
ANR	9635504	Callee	PNG_FP_IS_NEGATIVE		9635200	0					
ANR	9635505	Identifier	PNG_FP_IS_NEGATIVE		9635200	0					
ANR	9635506	ArgumentList	c . state		9635200	1					
ANR	9635507	Argument	c . state		9635200	0					
ANR	9635508	MemberAccess	c . state		9635200	0					
ANR	9635509	Identifier	c		9635200	0					
ANR	9635510	Identifier	state		9635200	1					
ANR	9635511	AndExpression	number_is_valid && ! c . is_zero && c . is_negative		9635200	1		&&			
ANR	9635512	Identifier	number_is_valid		9635200	0					
ANR	9635513	AndExpression	! c . is_zero && c . is_negative		9635200	1		&&			
ANR	9635514	UnaryOperationExpression	! c . is_zero		9635200	0					
ANR	9635515	UnaryOperator	!		9635200	0					
ANR	9635516	MemberAccess	c . is_zero		9635200	1					
ANR	9635517	Identifier	c		9635200	0					
ANR	9635518	Identifier	is_zero		9635200	1					
ANR	9635519	MemberAccess	c . is_negative		9635200	1					
ANR	9635520	Identifier	c		9635200	0					
ANR	9635521	Identifier	is_negative		9635200	1					
ANR	9635522	CompoundStatement		56:3:1505:1505	9635200	1					
ANR	9635523	ExpressionStatement	"fprintf ( stderr , ""%s: negative when it is not\\n"" , co -> number )"	385:6:11703:11763	9635200	0	True				
ANR	9635524	CallExpression	"fprintf ( stderr , ""%s: negative when it is not\\n"" , co -> number )"		9635200	0					
ANR	9635525	Callee	fprintf		9635200	0					
ANR	9635526	Identifier	fprintf		9635200	0					
ANR	9635527	ArgumentList	stderr		9635200	1					
ANR	9635528	Argument	stderr		9635200	0					
ANR	9635529	Identifier	stderr		9635200	0					
ANR	9635530	Argument	"""%s: negative when it is not\\n"""		9635200	1					
ANR	9635531	PrimaryExpression	"""%s: negative when it is not\\n"""		9635200	0					
ANR	9635532	Argument	co -> number		9635200	2					
ANR	9635533	PtrMemberAccess	co -> number		9635200	0					
ANR	9635534	Identifier	co		9635200	0					
ANR	9635535	Identifier	number		9635200	1					
ANR	9635536	ReturnStatement	return 0 ;	386:6:11771:11779	9635200	1	True				
ANR	9635537	PrimaryExpression	0		9635200	0					
ANR	9635538	IfStatement	if ( PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero ) )		9635200	14					
ANR	9635539	Condition	PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero )	389:7:11794:11850	9635200	0	True				
ANR	9635540	EqualityExpression	PNG_FP_IS_ZERO ( c . state ) != ( number_is_valid && c . is_zero )		9635200	0		!=			
ANR	9635541	CallExpression	PNG_FP_IS_ZERO ( c . state )		9635200	0					
ANR	9635542	Callee	PNG_FP_IS_ZERO		9635200	0					
ANR	9635543	Identifier	PNG_FP_IS_ZERO		9635200	0					
ANR	9635544	ArgumentList	c . state		9635200	1					
ANR	9635545	Argument	c . state		9635200	0					
ANR	9635546	MemberAccess	c . state		9635200	0					
ANR	9635547	Identifier	c		9635200	0					
ANR	9635548	Identifier	state		9635200	1					
ANR	9635549	AndExpression	number_is_valid && c . is_zero		9635200	1		&&			
ANR	9635550	Identifier	number_is_valid		9635200	0					
ANR	9635551	MemberAccess	c . is_zero		9635200	1					
ANR	9635552	Identifier	c		9635200	0					
ANR	9635553	Identifier	is_zero		9635200	1					
ANR	9635554	CompoundStatement		62:3:1666:1666	9635200	1					
ANR	9635555	ExpressionStatement	"fprintf ( stderr , ""%s: zero when it is not\\n"" , co -> number )"	391:6:11864:11920	9635200	0	True				
ANR	9635556	CallExpression	"fprintf ( stderr , ""%s: zero when it is not\\n"" , co -> number )"		9635200	0					
ANR	9635557	Callee	fprintf		9635200	0					
ANR	9635558	Identifier	fprintf		9635200	0					
ANR	9635559	ArgumentList	stderr		9635200	1					
ANR	9635560	Argument	stderr		9635200	0					
ANR	9635561	Identifier	stderr		9635200	0					
ANR	9635562	Argument	"""%s: zero when it is not\\n"""		9635200	1					
ANR	9635563	PrimaryExpression	"""%s: zero when it is not\\n"""		9635200	0					
ANR	9635564	Argument	co -> number		9635200	2					
ANR	9635565	PtrMemberAccess	co -> number		9635200	0					
ANR	9635566	Identifier	co		9635200	0					
ANR	9635567	Identifier	number		9635200	1					
ANR	9635568	ReturnStatement	return 0 ;	392:6:11928:11936	9635200	1	True				
ANR	9635569	PrimaryExpression	0		9635200	0					
ANR	9635570	IfStatement	if ( PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative ) )		9635200	15					
ANR	9635571	Condition	PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative )	395:7:11951:12036	9635200	0	True				
ANR	9635572	EqualityExpression	PNG_FP_IS_POSITIVE ( c . state ) != ( number_is_valid && ! c . is_zero && ! c . is_negative )		9635200	0		!=			
ANR	9635573	CallExpression	PNG_FP_IS_POSITIVE ( c . state )		9635200	0					
ANR	9635574	Callee	PNG_FP_IS_POSITIVE		9635200	0					
ANR	9635575	Identifier	PNG_FP_IS_POSITIVE		9635200	0					
ANR	9635576	ArgumentList	c . state		9635200	1					
ANR	9635577	Argument	c . state		9635200	0					
ANR	9635578	MemberAccess	c . state		9635200	0					
ANR	9635579	Identifier	c		9635200	0					
ANR	9635580	Identifier	state		9635200	1					
ANR	9635581	AndExpression	number_is_valid && ! c . is_zero && ! c . is_negative		9635200	1		&&			
ANR	9635582	Identifier	number_is_valid		9635200	0					
ANR	9635583	AndExpression	! c . is_zero && ! c . is_negative		9635200	1		&&			
ANR	9635584	UnaryOperationExpression	! c . is_zero		9635200	0					
ANR	9635585	UnaryOperator	!		9635200	0					
ANR	9635586	MemberAccess	c . is_zero		9635200	1					
ANR	9635587	Identifier	c		9635200	0					
ANR	9635588	Identifier	is_zero		9635200	1					
ANR	9635589	UnaryOperationExpression	! c . is_negative		9635200	1					
ANR	9635590	UnaryOperator	!		9635200	0					
ANR	9635591	MemberAccess	c . is_negative		9635200	1					
ANR	9635592	Identifier	c		9635200	0					
ANR	9635593	Identifier	is_negative		9635200	1					
ANR	9635594	CompoundStatement		69:3:1852:1852	9635200	1					
ANR	9635595	ExpressionStatement	"fprintf ( stderr , ""%s: positive when it is not\\n"" , co -> number )"	398:6:12050:12110	9635200	0	True				
ANR	9635596	CallExpression	"fprintf ( stderr , ""%s: positive when it is not\\n"" , co -> number )"		9635200	0					
ANR	9635597	Callee	fprintf		9635200	0					
ANR	9635598	Identifier	fprintf		9635200	0					
ANR	9635599	ArgumentList	stderr		9635200	1					
ANR	9635600	Argument	stderr		9635200	0					
ANR	9635601	Identifier	stderr		9635200	0					
ANR	9635602	Argument	"""%s: positive when it is not\\n"""		9635200	1					
ANR	9635603	PrimaryExpression	"""%s: positive when it is not\\n"""		9635200	0					
ANR	9635604	Argument	co -> number		9635200	2					
ANR	9635605	PtrMemberAccess	co -> number		9635200	0					
ANR	9635606	Identifier	co		9635200	0					
ANR	9635607	Identifier	number		9635200	1					
ANR	9635608	ReturnStatement	return 0 ;	399:6:12118:12126	9635200	1	True				
ANR	9635609	PrimaryExpression	0		9635200	0					
ANR	9635610	IfStatement	if ( isdigit ( ch ) )		9635200	16					
ANR	9635611	Condition	isdigit ( ch )	403:7:12166:12176	9635200	0	True				
ANR	9635612	CallExpression	isdigit ( ch )		9635200	0					
ANR	9635613	Callee	isdigit		9635200	0					
ANR	9635614	Identifier	isdigit		9635200	0					
ANR	9635615	ArgumentList	ch		9635200	1					
ANR	9635616	Argument	ch		9635200	0					
ANR	9635617	Identifier	ch		9635200	0					
ANR	9635618	CompoundStatement		76:3:1992:1992	9635200	1					
ANR	9635619	IfStatement	if ( ! character_accepted )		9635200	0					
ANR	9635620	Condition	! character_accepted	405:10:12194:12212	9635200	0	True				
ANR	9635621	UnaryOperationExpression	! character_accepted		9635200	0					
ANR	9635622	UnaryOperator	!		9635200	0					
ANR	9635623	Identifier	character_accepted		9635200	1					
ANR	9635624	CompoundStatement		78:6:2031:2031	9635200	1					
ANR	9635625	ExpressionStatement	"fprintf ( stderr , ""%s: digit '%c' not accepted\\n"" , co -> number , ch )"	407:9:12232:12296	9635200	0	True				
ANR	9635626	CallExpression	"fprintf ( stderr , ""%s: digit '%c' not accepted\\n"" , co -> number , ch )"		9635200	0					
ANR	9635627	Callee	fprintf		9635200	0					
ANR	9635628	Identifier	fprintf		9635200	0					
ANR	9635629	ArgumentList	stderr		9635200	1					
ANR	9635630	Argument	stderr		9635200	0					
ANR	9635631	Identifier	stderr		9635200	0					
ANR	9635632	Argument	"""%s: digit '%c' not accepted\\n"""		9635200	1					
ANR	9635633	PrimaryExpression	"""%s: digit '%c' not accepted\\n"""		9635200	0					
ANR	9635634	Argument	co -> number		9635200	2					
ANR	9635635	PtrMemberAccess	co -> number		9635200	0					
ANR	9635636	Identifier	co		9635200	0					
ANR	9635637	Identifier	number		9635200	1					
ANR	9635638	Argument	ch		9635200	3					
ANR	9635639	Identifier	ch		9635200	0					
ANR	9635640	ReturnStatement	return 0 ;	408:9:12307:12315	9635200	1	True				
ANR	9635641	PrimaryExpression	0		9635200	0					
ANR	9635642	IfStatement	if ( ! number_is_valid )		9635200	1					
ANR	9635643	Condition	! number_is_valid	411:10:12336:12351	9635200	0	True				
ANR	9635644	UnaryOperationExpression	! number_is_valid		9635200	0					
ANR	9635645	UnaryOperator	!		9635200	0					
ANR	9635646	Identifier	number_is_valid		9635200	1					
ANR	9635647	CompoundStatement		84:6:2170:2170	9635200	1					
ANR	9635648	ExpressionStatement	"fprintf ( stderr , ""%s: saw a digit (%c) but number not valid\\n"" , co -> number , ch )"	413:9:12371:12461	9635200	0	True				
ANR	9635649	CallExpression	"fprintf ( stderr , ""%s: saw a digit (%c) but number not valid\\n"" , co -> number , ch )"		9635200	0					
ANR	9635650	Callee	fprintf		9635200	0					
ANR	9635651	Identifier	fprintf		9635200	0					
ANR	9635652	ArgumentList	stderr		9635200	1					
ANR	9635653	Argument	stderr		9635200	0					
ANR	9635654	Identifier	stderr		9635200	0					
ANR	9635655	Argument	"""%s: saw a digit (%c) but number not valid\\n"""		9635200	1					
ANR	9635656	PrimaryExpression	"""%s: saw a digit (%c) but number not valid\\n"""		9635200	0					
ANR	9635657	Argument	co -> number		9635200	2					
ANR	9635658	PtrMemberAccess	co -> number		9635200	0					
ANR	9635659	Identifier	co		9635200	0					
ANR	9635660	Identifier	number		9635200	1					
ANR	9635661	Argument	ch		9635200	3					
ANR	9635662	Identifier	ch		9635200	0					
ANR	9635663	ReturnStatement	return 0 ;	415:9:12472:12480	9635200	1	True				
ANR	9635664	PrimaryExpression	0		9635200	0					
ANR	9635665	ExpressionStatement	++ c . cdigits_in_state	418:6:12497:12517	9635200	2	True				
ANR	9635666	UnaryExpression	++ c . cdigits_in_state		9635200	0					
ANR	9635667	IncDec	++		9635200	0					
ANR	9635668	MemberAccess	c . cdigits_in_state		9635200	1					
ANR	9635669	Identifier	c		9635200	0					
ANR	9635670	Identifier	cdigits_in_state		9635200	1					
ANR	9635671	ExpressionStatement	c . at_start = 0	419:6:12525:12539	9635200	3	True				
ANR	9635672	AssignmentExpression	c . at_start = 0		9635200	0		=			
ANR	9635673	MemberAccess	c . at_start		9635200	0					
ANR	9635674	Identifier	c		9635200	0					
ANR	9635675	Identifier	at_start		9635200	1					
ANR	9635676	PrimaryExpression	0		9635200	1					
ANR	9635677	ExpressionStatement	c . number_was_valid = 1	420:6:12547:12569	9635200	4	True				
ANR	9635678	AssignmentExpression	c . number_was_valid = 1		9635200	0		=			
ANR	9635679	MemberAccess	c . number_was_valid		9635200	0					
ANR	9635680	Identifier	c		9635200	0					
ANR	9635681	Identifier	number_was_valid		9635200	1					
ANR	9635682	PrimaryExpression	1		9635200	1					
ANR	9635683	IfStatement	if ( c . cdigits_in_state < 1 )		9635200	5					
ANR	9635684	Condition	c . cdigits_in_state < 1	426:10:12765:12786	9635200	0	True				
ANR	9635685	RelationalExpression	c . cdigits_in_state < 1		9635200	0		<			
ANR	9635686	MemberAccess	c . cdigits_in_state		9635200	0					
ANR	9635687	Identifier	c		9635200	0					
ANR	9635688	Identifier	cdigits_in_state		9635200	1					
ANR	9635689	PrimaryExpression	1		9635200	1					
ANR	9635690	ReturnStatement	"return check_all_characters ( co , c ) ;"	427:9:12798:12832	9635200	1	True				
ANR	9635691	CallExpression	"check_all_characters ( co , c )"		9635200	0					
ANR	9635692	Callee	check_all_characters		9635200	0					
ANR	9635693	Identifier	check_all_characters		9635200	0					
ANR	9635694	ArgumentList	co		9635200	1					
ANR	9635695	Argument	co		9635200	0					
ANR	9635696	Identifier	co		9635200	0					
ANR	9635697	Argument	c		9635200	1					
ANR	9635698	Identifier	c		9635200	0					
ANR	9635699	ElseStatement	else		9635200	0					
ANR	9635700	ReturnStatement	"return check_some_characters ( co , c , state_characters [ c . check_state ] . tests ) ;"	430:9:12855:12941	9635200	0	True				
ANR	9635701	CallExpression	"check_some_characters ( co , c , state_characters [ c . check_state ] . tests )"		9635200	0					
ANR	9635702	Callee	check_some_characters		9635200	0					
ANR	9635703	Identifier	check_some_characters		9635200	0					
ANR	9635704	ArgumentList	co		9635200	1					
ANR	9635705	Argument	co		9635200	0					
ANR	9635706	Identifier	co		9635200	0					
ANR	9635707	Argument	c		9635200	1					
ANR	9635708	Identifier	c		9635200	0					
ANR	9635709	Argument	state_characters [ c . check_state ] . tests		9635200	2					
ANR	9635710	MemberAccess	state_characters [ c . check_state ] . tests		9635200	0					
ANR	9635711	ArrayIndexing	state_characters [ c . check_state ]		9635200	0					
ANR	9635712	Identifier	state_characters		9635200	0					
ANR	9635713	MemberAccess	c . check_state		9635200	1					
ANR	9635714	Identifier	c		9635200	0					
ANR	9635715	Identifier	check_state		9635200	1					
ANR	9635716	Identifier	tests		9635200	1					
ANR	9635717	ElseStatement	else		9635200	0					
ANR	9635718	IfStatement	if ( ( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent ) )		9635200	0					
ANR	9635719	Condition	( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )	435:12:13003:13247	9635200	0	True				
ANR	9635720	OrExpression	( ( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start ) || ( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )		9635200	0		||			
ANR	9635721	AndExpression	( ch == '+' || ch == '-' ) && c . check_state != fraction && c . at_start		9635200	0		&&			
ANR	9635722	OrExpression	ch == '+' || ch == '-'		9635200	0		||			
ANR	9635723	EqualityExpression	ch == '+'		9635200	0		==			
ANR	9635724	Identifier	ch		9635200	0					
ANR	9635725	PrimaryExpression	'+'		9635200	1					
ANR	9635726	EqualityExpression	ch == '-'		9635200	1		==			
ANR	9635727	Identifier	ch		9635200	0					
ANR	9635728	PrimaryExpression	'-'		9635200	1					
ANR	9635729	AndExpression	c . check_state != fraction && c . at_start		9635200	1		&&			
ANR	9635730	EqualityExpression	c . check_state != fraction		9635200	0		!=			
ANR	9635731	MemberAccess	c . check_state		9635200	0					
ANR	9635732	Identifier	c		9635200	0					
ANR	9635733	Identifier	check_state		9635200	1					
ANR	9635734	Identifier	fraction		9635200	1					
ANR	9635735	MemberAccess	c . at_start		9635200	1					
ANR	9635736	Identifier	c		9635200	0					
ANR	9635737	Identifier	at_start		9635200	1					
ANR	9635738	OrExpression	( ch == '.' && c . check_state == start ) || ( ( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent )		9635200	1		||			
ANR	9635739	AndExpression	ch == '.' && c . check_state == start		9635200	0		&&			
ANR	9635740	EqualityExpression	ch == '.'		9635200	0		==			
ANR	9635741	Identifier	ch		9635200	0					
ANR	9635742	PrimaryExpression	'.'		9635200	1					
ANR	9635743	EqualityExpression	c . check_state == start		9635200	1		==			
ANR	9635744	MemberAccess	c . check_state		9635200	0					
ANR	9635745	Identifier	c		9635200	0					
ANR	9635746	Identifier	check_state		9635200	1					
ANR	9635747	Identifier	start		9635200	1					
ANR	9635748	AndExpression	( ch == 'e' || ch == 'E' ) && c . number_was_valid && c . check_state != exponent		9635200	1		&&			
ANR	9635749	OrExpression	ch == 'e' || ch == 'E'		9635200	0		||			
ANR	9635750	EqualityExpression	ch == 'e'		9635200	0		==			
ANR	9635751	Identifier	ch		9635200	0					
ANR	9635752	PrimaryExpression	'e'		9635200	1					
ANR	9635753	EqualityExpression	ch == 'E'		9635200	1		==			
ANR	9635754	Identifier	ch		9635200	0					
ANR	9635755	PrimaryExpression	'E'		9635200	1					
ANR	9635756	AndExpression	c . number_was_valid && c . check_state != exponent		9635200	1		&&			
ANR	9635757	MemberAccess	c . number_was_valid		9635200	0					
ANR	9635758	Identifier	c		9635200	0					
ANR	9635759	Identifier	number_was_valid		9635200	1					
ANR	9635760	EqualityExpression	c . check_state != exponent		9635200	1		!=			
ANR	9635761	MemberAccess	c . check_state		9635200	0					
ANR	9635762	Identifier	c		9635200	0					
ANR	9635763	Identifier	check_state		9635200	1					
ANR	9635764	Identifier	exponent		9635200	1					
ANR	9635765	CompoundStatement		112:3:3063:3063	9635200	1					
ANR	9635766	IfStatement	if ( ! character_accepted )		9635200	0					
ANR	9635767	Condition	! character_accepted	441:10:13265:13283	9635200	0	True				
ANR	9635768	UnaryOperationExpression	! character_accepted		9635200	0					
ANR	9635769	UnaryOperator	!		9635200	0					
ANR	9635770	Identifier	character_accepted		9635200	1					
ANR	9635771	CompoundStatement		114:6:3102:3102	9635200	1					
ANR	9635772	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' not accepted\\n"" , co -> number , ch )"	443:9:13303:13371	9635200	0	True				
ANR	9635773	CallExpression	"fprintf ( stderr , ""%s: character '%c' not accepted\\n"" , co -> number , ch )"		9635200	0					
ANR	9635774	Callee	fprintf		9635200	0					
ANR	9635775	Identifier	fprintf		9635200	0					
ANR	9635776	ArgumentList	stderr		9635200	1					
ANR	9635777	Argument	stderr		9635200	0					
ANR	9635778	Identifier	stderr		9635200	0					
ANR	9635779	Argument	"""%s: character '%c' not accepted\\n"""		9635200	1					
ANR	9635780	PrimaryExpression	"""%s: character '%c' not accepted\\n"""		9635200	0					
ANR	9635781	Argument	co -> number		9635200	2					
ANR	9635782	PtrMemberAccess	co -> number		9635200	0					
ANR	9635783	Identifier	co		9635200	0					
ANR	9635784	Identifier	number		9635200	1					
ANR	9635785	Argument	ch		9635200	3					
ANR	9635786	Identifier	ch		9635200	0					
ANR	9635787	ReturnStatement	return 0 ;	444:9:13382:13390	9635200	1	True				
ANR	9635788	PrimaryExpression	0		9635200	0					
ANR	9635789	IfStatement	if ( number_is_valid && ( c . check_state != start || ch != '.' ) )		9635200	1					
ANR	9635790	Condition	number_is_valid && ( c . check_state != start || ch != '.' )	448:10:13490:13545	9635200	0	True				
ANR	9635791	AndExpression	number_is_valid && ( c . check_state != start || ch != '.' )		9635200	0		&&			
ANR	9635792	Identifier	number_is_valid		9635200	0					
ANR	9635793	OrExpression	c . check_state != start || ch != '.'		9635200	1		||			
ANR	9635794	EqualityExpression	c . check_state != start		9635200	0		!=			
ANR	9635795	MemberAccess	c . check_state		9635200	0					
ANR	9635796	Identifier	c		9635200	0					
ANR	9635797	Identifier	check_state		9635200	1					
ANR	9635798	Identifier	start		9635200	1					
ANR	9635799	EqualityExpression	ch != '.'		9635200	1		!=			
ANR	9635800	Identifier	ch		9635200	0					
ANR	9635801	PrimaryExpression	'.'		9635200	1					
ANR	9635802	CompoundStatement		121:6:3364:3364	9635200	1					
ANR	9635803	ExpressionStatement	"fprintf ( stderr , ""%s: saw a non-digit (%c) but number valid\\n"" , co -> number , ch )"	450:9:13565:13655	9635200	0	True				
ANR	9635804	CallExpression	"fprintf ( stderr , ""%s: saw a non-digit (%c) but number valid\\n"" , co -> number , ch )"		9635200	0					
ANR	9635805	Callee	fprintf		9635200	0					
ANR	9635806	Identifier	fprintf		9635200	0					
ANR	9635807	ArgumentList	stderr		9635200	1					
ANR	9635808	Argument	stderr		9635200	0					
ANR	9635809	Identifier	stderr		9635200	0					
ANR	9635810	Argument	"""%s: saw a non-digit (%c) but number valid\\n"""		9635200	1					
ANR	9635811	PrimaryExpression	"""%s: saw a non-digit (%c) but number valid\\n"""		9635200	0					
ANR	9635812	Argument	co -> number		9635200	2					
ANR	9635813	PtrMemberAccess	co -> number		9635200	0					
ANR	9635814	Identifier	co		9635200	0					
ANR	9635815	Identifier	number		9635200	1					
ANR	9635816	Argument	ch		9635200	3					
ANR	9635817	Identifier	ch		9635200	0					
ANR	9635818	ReturnStatement	return 0 ;	452:9:13666:13674	9635200	1	True				
ANR	9635819	PrimaryExpression	0		9635200	0					
ANR	9635820	ExpressionStatement	c . number_was_valid = number_is_valid	455:6:13691:13727	9635200	2	True				
ANR	9635821	AssignmentExpression	c . number_was_valid = number_is_valid		9635200	0		=			
ANR	9635822	MemberAccess	c . number_was_valid		9635200	0					
ANR	9635823	Identifier	c		9635200	0					
ANR	9635824	Identifier	number_was_valid		9635200	1					
ANR	9635825	Identifier	number_is_valid		9635200	1					
ANR	9635826	IfStatement	if ( c . check_state == start && ch == '.' )		9635200	3					
ANR	9635827	Condition	c . check_state == start && ch == '.'	461:10:13934:13968	9635200	0	True				
ANR	9635828	AndExpression	c . check_state == start && ch == '.'		9635200	0		&&			
ANR	9635829	EqualityExpression	c . check_state == start		9635200	0		==			
ANR	9635830	MemberAccess	c . check_state		9635200	0					
ANR	9635831	Identifier	c		9635200	0					
ANR	9635832	Identifier	check_state		9635200	1					
ANR	9635833	Identifier	start		9635200	1					
ANR	9635834	EqualityExpression	ch == '.'		9635200	1		==			
ANR	9635835	Identifier	ch		9635200	0					
ANR	9635836	PrimaryExpression	'.'		9635200	1					
ANR	9635837	CompoundStatement		134:6:3787:3787	9635200	1					
ANR	9635838	ExpressionStatement	c . check_state = fraction	463:9:13988:14012	9635200	0	True				
ANR	9635839	AssignmentExpression	c . check_state = fraction		9635200	0		=			
ANR	9635840	MemberAccess	c . check_state		9635200	0					
ANR	9635841	Identifier	c		9635200	0					
ANR	9635842	Identifier	check_state		9635200	1					
ANR	9635843	Identifier	fraction		9635200	1					
ANR	9635844	ExpressionStatement	c . at_start = ! number_is_valid	464:9:14023:14052	9635200	1	True				
ANR	9635845	AssignmentExpression	c . at_start = ! number_is_valid		9635200	0		=			
ANR	9635846	MemberAccess	c . at_start		9635200	0					
ANR	9635847	Identifier	c		9635200	0					
ANR	9635848	Identifier	at_start		9635200	1					
ANR	9635849	UnaryOperationExpression	! number_is_valid		9635200	1					
ANR	9635850	UnaryOperator	!		9635200	0					
ANR	9635851	Identifier	number_is_valid		9635200	1					
ANR	9635852	ExpressionStatement	c . cdigits_in_state = 0	465:9:14063:14085	9635200	2	True				
ANR	9635853	AssignmentExpression	c . cdigits_in_state = 0		9635200	0		=			
ANR	9635854	MemberAccess	c . cdigits_in_state		9635200	0					
ANR	9635855	Identifier	c		9635200	0					
ANR	9635856	Identifier	cdigits_in_state		9635200	1					
ANR	9635857	PrimaryExpression	0		9635200	1					
ANR	9635858	ExpressionStatement	c . limit = co -> limit	466:9:14096:14115	9635200	3	True				
ANR	9635859	AssignmentExpression	c . limit = co -> limit		9635200	0		=			
ANR	9635860	MemberAccess	c . limit		9635200	0					
ANR	9635861	Identifier	c		9635200	0					
ANR	9635862	Identifier	limit		9635200	1					
ANR	9635863	PtrMemberAccess	co -> limit		9635200	1					
ANR	9635864	Identifier	co		9635200	0					
ANR	9635865	Identifier	limit		9635200	1					
ANR	9635866	ReturnStatement	"return check_all_characters ( co , c ) ;"	467:9:14126:14160	9635200	4	True				
ANR	9635867	CallExpression	"check_all_characters ( co , c )"		9635200	0					
ANR	9635868	Callee	check_all_characters		9635200	0					
ANR	9635869	Identifier	check_all_characters		9635200	0					
ANR	9635870	ArgumentList	co		9635200	1					
ANR	9635871	Argument	co		9635200	0					
ANR	9635872	Identifier	co		9635200	0					
ANR	9635873	Argument	c		9635200	1					
ANR	9635874	Identifier	c		9635200	0					
ANR	9635875	ElseStatement	else		9635200	0					
ANR	9635876	IfStatement	if ( c . check_state < exponent && ( ch == 'e' || ch == 'E' ) )		9635200	0					
ANR	9635877	Condition	c . check_state < exponent && ( ch == 'e' || ch == 'E' )	470:15:14186:14237	9635200	0	True				
ANR	9635878	AndExpression	c . check_state < exponent && ( ch == 'e' || ch == 'E' )		9635200	0		&&			
ANR	9635879	RelationalExpression	c . check_state < exponent		9635200	0		<			
ANR	9635880	MemberAccess	c . check_state		9635200	0					
ANR	9635881	Identifier	c		9635200	0					
ANR	9635882	Identifier	check_state		9635200	1					
ANR	9635883	Identifier	exponent		9635200	1					
ANR	9635884	OrExpression	ch == 'e' || ch == 'E'		9635200	1		||			
ANR	9635885	EqualityExpression	ch == 'e'		9635200	0		==			
ANR	9635886	Identifier	ch		9635200	0					
ANR	9635887	PrimaryExpression	'e'		9635200	1					
ANR	9635888	EqualityExpression	ch == 'E'		9635200	1		==			
ANR	9635889	Identifier	ch		9635200	0					
ANR	9635890	PrimaryExpression	'E'		9635200	1					
ANR	9635891	CompoundStatement		143:6:4056:4056	9635200	1					
ANR	9635892	ExpressionStatement	c . check_state = exponent	472:9:14257:14281	9635200	0	True				
ANR	9635893	AssignmentExpression	c . check_state = exponent		9635200	0		=			
ANR	9635894	MemberAccess	c . check_state		9635200	0					
ANR	9635895	Identifier	c		9635200	0					
ANR	9635896	Identifier	check_state		9635200	1					
ANR	9635897	Identifier	exponent		9635200	1					
ANR	9635898	ExpressionStatement	c . at_start = 1	473:9:14292:14306	9635200	1	True				
ANR	9635899	AssignmentExpression	c . at_start = 1		9635200	0		=			
ANR	9635900	MemberAccess	c . at_start		9635200	0					
ANR	9635901	Identifier	c		9635200	0					
ANR	9635902	Identifier	at_start		9635200	1					
ANR	9635903	PrimaryExpression	1		9635200	1					
ANR	9635904	ExpressionStatement	c . cdigits_in_state = 0	474:9:14317:14339	9635200	2	True				
ANR	9635905	AssignmentExpression	c . cdigits_in_state = 0		9635200	0		=			
ANR	9635906	MemberAccess	c . cdigits_in_state		9635200	0					
ANR	9635907	Identifier	c		9635200	0					
ANR	9635908	Identifier	cdigits_in_state		9635200	1					
ANR	9635909	PrimaryExpression	0		9635200	1					
ANR	9635910	ExpressionStatement	c . limit = co -> limit	475:9:14350:14369	9635200	3	True				
ANR	9635911	AssignmentExpression	c . limit = co -> limit		9635200	0		=			
ANR	9635912	MemberAccess	c . limit		9635200	0					
ANR	9635913	Identifier	c		9635200	0					
ANR	9635914	Identifier	limit		9635200	1					
ANR	9635915	PtrMemberAccess	co -> limit		9635200	1					
ANR	9635916	Identifier	co		9635200	0					
ANR	9635917	Identifier	limit		9635200	1					
ANR	9635918	ReturnStatement	"return check_all_characters ( co , c ) ;"	476:9:14380:14414	9635200	4	True				
ANR	9635919	CallExpression	"check_all_characters ( co , c )"		9635200	0					
ANR	9635920	Callee	check_all_characters		9635200	0					
ANR	9635921	Identifier	check_all_characters		9635200	0					
ANR	9635922	ArgumentList	co		9635200	1					
ANR	9635923	Argument	co		9635200	0					
ANR	9635924	Identifier	co		9635200	0					
ANR	9635925	Argument	c		9635200	1					
ANR	9635926	Identifier	c		9635200	0					
ANR	9635927	ElseStatement	else		9635200	0					
ANR	9635928	CompoundStatement		153:6:4314:4314	9635200	0					
ANR	9635929	IfStatement	if ( ch != '-' && ch != '+' )		9635200	0					
ANR	9635930	Condition	ch != '-' && ch != '+'	482:13:14519:14540	9635200	0	True				
ANR	9635931	AndExpression	ch != '-' && ch != '+'		9635200	0		&&			
ANR	9635932	EqualityExpression	ch != '-'		9635200	0		!=			
ANR	9635933	Identifier	ch		9635200	0					
ANR	9635934	PrimaryExpression	'-'		9635200	1					
ANR	9635935	EqualityExpression	ch != '+'		9635200	1		!=			
ANR	9635936	Identifier	ch		9635200	0					
ANR	9635937	PrimaryExpression	'+'		9635200	1					
ANR	9635938	CompoundStatement		155:9:4362:4362	9635200	1					
ANR	9635939	ExpressionStatement	"fprintf ( stderr , ""checkfp: internal error (1)\\n"" )"	484:12:14566:14614	9635200	0	True				
ANR	9635940	CallExpression	"fprintf ( stderr , ""checkfp: internal error (1)\\n"" )"		9635200	0					
ANR	9635941	Callee	fprintf		9635200	0					
ANR	9635942	Identifier	fprintf		9635200	0					
ANR	9635943	ArgumentList	stderr		9635200	1					
ANR	9635944	Argument	stderr		9635200	0					
ANR	9635945	Identifier	stderr		9635200	0					
ANR	9635946	Argument	"""checkfp: internal error (1)\\n"""		9635200	1					
ANR	9635947	PrimaryExpression	"""checkfp: internal error (1)\\n"""		9635200	0					
ANR	9635948	ReturnStatement	return 0 ;	485:12:14628:14636	9635200	1	True				
ANR	9635949	PrimaryExpression	0		9635200	0					
ANR	9635950	ExpressionStatement	c . at_start = 0	488:9:14659:14673	9635200	1	True				
ANR	9635951	AssignmentExpression	c . at_start = 0		9635200	0		=			
ANR	9635952	MemberAccess	c . at_start		9635200	0					
ANR	9635953	Identifier	c		9635200	0					
ANR	9635954	Identifier	at_start		9635200	1					
ANR	9635955	PrimaryExpression	0		9635200	1					
ANR	9635956	ReturnStatement	"return check_all_characters ( co , c ) ;"	489:9:14684:14718	9635200	2	True				
ANR	9635957	CallExpression	"check_all_characters ( co , c )"		9635200	0					
ANR	9635958	Callee	check_all_characters		9635200	0					
ANR	9635959	Identifier	check_all_characters		9635200	0					
ANR	9635960	ArgumentList	co		9635200	1					
ANR	9635961	Argument	co		9635200	0					
ANR	9635962	Identifier	co		9635200	0					
ANR	9635963	Argument	c		9635200	1					
ANR	9635964	Identifier	c		9635200	0					
ANR	9635965	ElseStatement	else		9635200	0					
ANR	9635966	CompoundStatement		167:3:4593:4593	9635200	0					
ANR	9635967	IfStatement	if ( character_accepted )		9635200	0					
ANR	9635968	Condition	character_accepted	496:10:14795:14812	9635200	0	True				
ANR	9635969	Identifier	character_accepted		9635200	0					
ANR	9635970	CompoundStatement		169:6:4631:4631	9635200	1					
ANR	9635971	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] accepted\\n"" , co -> number , ch , ch )"	498:9:14832:14921	9635200	0	True				
ANR	9635972	CallExpression	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] accepted\\n"" , co -> number , ch , ch )"		9635200	0					
ANR	9635973	Callee	fprintf		9635200	0					
ANR	9635974	Identifier	fprintf		9635200	0					
ANR	9635975	ArgumentList	stderr		9635200	1					
ANR	9635976	Argument	stderr		9635200	0					
ANR	9635977	Identifier	stderr		9635200	0					
ANR	9635978	Argument	"""%s: character '%c' [0x%.2x] accepted\\n"""		9635200	1					
ANR	9635979	PrimaryExpression	"""%s: character '%c' [0x%.2x] accepted\\n"""		9635200	0					
ANR	9635980	Argument	co -> number		9635200	2					
ANR	9635981	PtrMemberAccess	co -> number		9635200	0					
ANR	9635982	Identifier	co		9635200	0					
ANR	9635983	Identifier	number		9635200	1					
ANR	9635984	Argument	ch		9635200	3					
ANR	9635985	Identifier	ch		9635200	0					
ANR	9635986	Argument	ch		9635200	4					
ANR	9635987	Identifier	ch		9635200	0					
ANR	9635988	ReturnStatement	return 0 ;	500:9:14932:14940	9635200	1	True				
ANR	9635989	PrimaryExpression	0		9635200	0					
ANR	9635990	IfStatement	if ( number_is_valid != c . number_was_valid )		9635200	1					
ANR	9635991	Condition	number_is_valid != c . number_was_valid	503:10:14961:14997	9635200	0	True				
ANR	9635992	EqualityExpression	number_is_valid != c . number_was_valid		9635200	0		!=			
ANR	9635993	Identifier	number_is_valid		9635200	0					
ANR	9635994	MemberAccess	c . number_was_valid		9635200	1					
ANR	9635995	Identifier	c		9635200	0					
ANR	9635996	Identifier	number_was_valid		9635200	1					
ANR	9635997	CompoundStatement		176:6:4816:4816	9635200	1					
ANR	9635998	ExpressionStatement	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] changed number validity\\n"" , co -> number , ch , ch )"	505:9:15017:15133	9635200	0	True				
ANR	9635999	CallExpression	"fprintf ( stderr , ""%s: character '%c' [0x%.2x] changed number validity\\n"" , co -> number , ch , ch )"		9635200	0					
ANR	9636000	Callee	fprintf		9635200	0					
ANR	9636001	Identifier	fprintf		9635200	0					
ANR	9636002	ArgumentList	stderr		9635200	1					
ANR	9636003	Argument	stderr		9635200	0					
ANR	9636004	Identifier	stderr		9635200	0					
ANR	9636005	Argument	"""%s: character '%c' [0x%.2x] changed number validity\\n"""		9635200	1					
ANR	9636006	PrimaryExpression	"""%s: character '%c' [0x%.2x] changed number validity\\n"""		9635200	0					
ANR	9636007	Argument	co -> number		9635200	2					
ANR	9636008	PtrMemberAccess	co -> number		9635200	0					
ANR	9636009	Identifier	co		9635200	0					
ANR	9636010	Identifier	number		9635200	1					
ANR	9636011	Argument	ch		9635200	3					
ANR	9636012	Identifier	ch		9635200	0					
ANR	9636013	Argument	ch		9635200	4					
ANR	9636014	Identifier	ch		9635200	0					
ANR	9636015	ReturnStatement	return 0 ;	508:9:15144:15152	9635200	1	True				
ANR	9636016	PrimaryExpression	0		9635200	0					
ANR	9636017	ReturnStatement	return 1 ;	517:3:15359:15367	9635200	17	True				
ANR	9636018	PrimaryExpression	1		9635200	0					
ANR	9636019	ReturnType	static int		9635200	1					
ANR	9636020	Identifier	check_one_character		9635200	2					
ANR	9636021	ParameterList	"checkfp_command * co , checkfp_control c , int ch"		9635200	3					
ANR	9636022	Parameter	checkfp_command * co	328:31:10141:10159	9635200	0	True				
ANR	9636023	ParameterType	checkfp_command *		9635200	0					
ANR	9636024	Identifier	co		9635200	1					
ANR	9636025	Parameter	checkfp_control c	328:52:10162:10178	9635200	1	True				
ANR	9636026	ParameterType	checkfp_control		9635200	0					
ANR	9636027	Identifier	c		9635200	1					
ANR	9636028	Parameter	int ch	328:71:10181:10186	9635200	2	True				
ANR	9636029	ParameterType	int		9635200	0					
ANR	9636030	Identifier	ch		9635200	1					
ANR	9636031	CFGEntryNode	ENTRY		9635200		True				
ANR	9636032	CFGExitNode	EXIT		9635200		True				
ANR	9636033	Symbol	character_accepted		9635200						
ANR	9636034	Symbol	check_some_characters		9635200						
ANR	9636035	Symbol	c . state		9635200						
ANR	9636036	Symbol	isprint		9635200						
ANR	9636037	Symbol	* ch		9635200						
ANR	9636038	Symbol	number_is_valid		9635200						
ANR	9636039	Symbol	PNG_FP_IS_ZERO		9635200						
ANR	9636040	Symbol	PNG_FP_IS_POSITIVE		9635200						
ANR	9636041	Symbol	c . cdigits_in_state		9635200						
ANR	9636042	Symbol	c . cnumber		9635200						
ANR	9636043	Symbol	co -> verbose		9635200						
ANR	9636044	Symbol	c . is_negative		9635200						
ANR	9636045	Symbol	check_all_characters		9635200						
ANR	9636046	Symbol	state_characters		9635200						
ANR	9636047	Symbol	* hexdigits		9635200						
ANR	9636048	Symbol	c . number_was_valid		9635200						
ANR	9636049	Symbol	* * co		9635200						
ANR	9636050	Symbol	& index		9635200						
ANR	9636051	Symbol	state_characters [ c . check_state ] . tests		9635200						
ANR	9636052	Symbol	& test		9635200						
ANR	9636053	Symbol	isdigit		9635200						
ANR	9636054	Symbol	c . is_zero		9635200						
ANR	9636055	Symbol	PNG_FP_IS_NEGATIVE		9635200						
ANR	9636056	Symbol	exponent		9635200						
ANR	9636057	Symbol	co -> number		9635200						
ANR	9636058	Symbol	* c . check_state		9635200						
ANR	9636059	Symbol	* c . cnumber		9635200						
ANR	9636060	Symbol	c		9635200						
ANR	9636061	Symbol	test		9635200						
ANR	9636062	Symbol	ch		9635200						
ANR	9636063	Symbol	png_check_fp_number		9635200						
ANR	9636064	Symbol	* co -> number		9635200						
ANR	9636065	Symbol	start		9635200						
ANR	9636066	Symbol	index		9635200						
ANR	9636067	Symbol	& c . state		9635200						
ANR	9636068	Symbol	& c		9635200						
ANR	9636069	Symbol	co		9635200						
ANR	9636070	Symbol	stderr		9635200						
ANR	9636071	Symbol	co -> limit		9635200						
ANR	9636072	Symbol	hexdigits		9635200						
ANR	9636073	Symbol	* c		9635200						
ANR	9636074	Symbol	fraction		9635200						
ANR	9636075	Symbol	c . at_start		9635200						
ANR	9636076	Symbol	* co		9635200						
ANR	9636077	Symbol	c . limit		9635200						
ANR	9636078	Symbol	co -> ctimes		9635200						
ANR	9636079	Symbol	* state_characters		9635200						
ANR	9636080	Symbol	c . check_state		9635200						
ANR	9636081	Function	check_all_characters	520:0:15372:15609							
ANR	9636082	FunctionDef	"check_all_characters (checkfp_command * co , checkfp_control c)"		9636081	0					
ANR	9636083	CompoundStatement		521:0:15444:15609	9636081	0					
ANR	9636084	IdentifierDeclStatement	int ch ;	522:3:15449:15455	9636081	0	True				
ANR	9636085	IdentifierDecl	ch		9636081	0					
ANR	9636086	IdentifierDeclType	int		9636081	0					
ANR	9636087	Identifier	ch		9636081	1					
ANR	9636088	IfStatement	if ( c . cnumber + 4 < sizeof co -> number )		9636081	1					
ANR	9636089	Condition	c . cnumber + 4 < sizeof co -> number	524:7:15465:15495	9636081	0	True				
ANR	9636090	RelationalExpression	c . cnumber + 4 < sizeof co -> number		9636081	0		<			
ANR	9636091	AdditiveExpression	c . cnumber + 4		9636081	0		+			
ANR	9636092	MemberAccess	c . cnumber		9636081	0					
ANR	9636093	Identifier	c		9636081	0					
ANR	9636094	Identifier	cnumber		9636081	1					
ANR	9636095	PrimaryExpression	4		9636081	1					
ANR	9636096	SizeofExpression	sizeof co -> number		9636081	1					
ANR	9636097	Sizeof	sizeof		9636081	0					
ANR	9636098	PtrMemberAccess	co -> number		9636081	1					
ANR	9636099	Identifier	co		9636081	0					
ANR	9636100	Identifier	number		9636081	1					
ANR	9636101	ForStatement	for ( ch = 0 ; ch < 256 ; ++ ch )		9636081	1					
ANR	9636102	ForInit	ch = 0 ;	524:45:15503:15507	9636081	0	True				
ANR	9636103	AssignmentExpression	ch = 0		9636081	0		=			
ANR	9636104	Identifier	ch		9636081	0					
ANR	9636105	PrimaryExpression	0		9636081	1					
ANR	9636106	Condition	ch < 256	524:51:15509:15514	9636081	1	True				
ANR	9636107	RelationalExpression	ch < 256		9636081	0		<			
ANR	9636108	Identifier	ch		9636081	0					
ANR	9636109	PrimaryExpression	256		9636081	1					
ANR	9636110	UnaryExpression	++ ch	524:59:15517:15520	9636081	2	True				
ANR	9636111	IncDec	++		9636081	0					
ANR	9636112	Identifier	ch		9636081	1					
ANR	9636113	CompoundStatement		5:3:81:81	9636081	3					
ANR	9636114	IfStatement	"if ( ! check_one_character ( co , c , ch ) )"		9636081	0					
ANR	9636115	Condition	"! check_one_character ( co , c , ch )"	526:10:15538:15568	9636081	0	True				
ANR	9636116	UnaryOperationExpression	"! check_one_character ( co , c , ch )"		9636081	0					
ANR	9636117	UnaryOperator	!		9636081	0					
ANR	9636118	CallExpression	"check_one_character ( co , c , ch )"		9636081	1					
ANR	9636119	Callee	check_one_character		9636081	0					
ANR	9636120	Identifier	check_one_character		9636081	0					
ANR	9636121	ArgumentList	co		9636081	1					
ANR	9636122	Argument	co		9636081	0					
ANR	9636123	Identifier	co		9636081	0					
ANR	9636124	Argument	c		9636081	1					
ANR	9636125	Identifier	c		9636081	0					
ANR	9636126	Argument	ch		9636081	2					
ANR	9636127	Identifier	ch		9636081	0					
ANR	9636128	ReturnStatement	return 0 ;	527:9:15580:15588	9636081	1	True				
ANR	9636129	PrimaryExpression	0		9636081	0					
ANR	9636130	ReturnStatement	return 1 ;	530:3:15599:15607	9636081	2	True				
ANR	9636131	PrimaryExpression	1		9636081	0					
ANR	9636132	ReturnType	static int		9636081	1					
ANR	9636133	Identifier	check_all_characters		9636081	2					
ANR	9636134	ParameterList	"checkfp_command * co , checkfp_control c"		9636081	3					
ANR	9636135	Parameter	checkfp_command * co	520:32:15404:15422	9636081	0	True				
ANR	9636136	ParameterType	checkfp_command *		9636081	0					
ANR	9636137	Identifier	co		9636081	1					
ANR	9636138	Parameter	checkfp_control c	520:53:15425:15441	9636081	1	True				
ANR	9636139	ParameterType	checkfp_control		9636081	0					
ANR	9636140	Identifier	c		9636081	1					
ANR	9636141	CFGEntryNode	ENTRY		9636081		True				
ANR	9636142	CFGExitNode	EXIT		9636081		True				
ANR	9636143	Symbol	* co		9636081						
ANR	9636144	Symbol	c		9636081						
ANR	9636145	Symbol	ch		9636081						
ANR	9636146	Symbol	co		9636081						
ANR	9636147	Symbol	check_one_character		9636081						
ANR	9636148	Symbol	c . cnumber		9636081						
ANR	9636149	Symbol	co -> number		9636081						
ANR	9636150	Function	check_some_characters	533:0:15612:16064							
ANR	9636151	FunctionDef	"check_some_characters (checkfp_command * co , checkfp_control c , const char * tests)"		9636150	0					
ANR	9636152	CompoundStatement		535:0:15707:16064	9636150	0					
ANR	9636153	IdentifierDeclStatement	int i ;	536:3:15712:15717	9636150	0	True				
ANR	9636154	IdentifierDecl	i		9636150	0					
ANR	9636155	IdentifierDeclType	int		9636150	0					
ANR	9636156	Identifier	i		9636150	1					
ANR	9636157	ExpressionStatement	-- ( c . limit )	538:3:15723:15734	9636150	1	True				
ANR	9636158	UnaryExpression	-- ( c . limit )		9636150	0					
ANR	9636159	IncDec	--		9636150	0					
ANR	9636160	MemberAccess	c . limit		9636150	1					
ANR	9636161	Identifier	c		9636150	0					
ANR	9636162	Identifier	limit		9636150	1					
ANR	9636163	IfStatement	if ( c . cnumber + 4 < sizeof co -> number && c . limit >= 0 )		9636150	2					
ANR	9636164	Condition	c . cnumber + 4 < sizeof co -> number && c . limit >= 0	540:7:15744:15790	9636150	0	True				
ANR	9636165	AndExpression	c . cnumber + 4 < sizeof co -> number && c . limit >= 0		9636150	0		&&			
ANR	9636166	RelationalExpression	c . cnumber + 4 < sizeof co -> number		9636150	0		<			
ANR	9636167	AdditiveExpression	c . cnumber + 4		9636150	0		+			
ANR	9636168	MemberAccess	c . cnumber		9636150	0					
ANR	9636169	Identifier	c		9636150	0					
ANR	9636170	Identifier	cnumber		9636150	1					
ANR	9636171	PrimaryExpression	4		9636150	1					
ANR	9636172	SizeofExpression	sizeof co -> number		9636150	1					
ANR	9636173	Sizeof	sizeof		9636150	0					
ANR	9636174	PtrMemberAccess	co -> number		9636150	1					
ANR	9636175	Identifier	co		9636150	0					
ANR	9636176	Identifier	number		9636150	1					
ANR	9636177	RelationalExpression	c . limit >= 0		9636150	1		>=			
ANR	9636178	MemberAccess	c . limit		9636150	0					
ANR	9636179	Identifier	c		9636150	0					
ANR	9636180	Identifier	limit		9636150	1					
ANR	9636181	PrimaryExpression	0		9636150	1					
ANR	9636182	CompoundStatement		7:3:88:88	9636150	1					
ANR	9636183	IfStatement	if ( c . limit > 0 )		9636150	0					
ANR	9636184	Condition	c . limit > 0	542:10:15808:15818	9636150	0	True				
ANR	9636185	RelationalExpression	c . limit > 0		9636150	0		>			
ANR	9636186	MemberAccess	c . limit		9636150	0					
ANR	9636187	Identifier	c		9636150	0					
ANR	9636188	Identifier	limit		9636150	1					
ANR	9636189	PrimaryExpression	0		9636150	1					
ANR	9636190	ForStatement	for ( i = 0 ; tests [ i ] ; ++ i )		9636150	1					
ANR	9636191	ForInit	i = 0 ;	542:28:15826:15829	9636150	0	True				
ANR	9636192	AssignmentExpression	i = 0		9636150	0		=			
ANR	9636193	Identifier	i		9636150	0					
ANR	9636194	PrimaryExpression	0		9636150	1					
ANR	9636195	Condition	tests [ i ]	542:33:15831:15838	9636150	1	True				
ANR	9636196	ArrayIndexing	tests [ i ]		9636150	0					
ANR	9636197	Identifier	tests		9636150	0					
ANR	9636198	Identifier	i		9636150	1					
ANR	9636199	UnaryExpression	++ i	542:43:15841:15843	9636150	2	True				
ANR	9636200	IncDec	++		9636150	0					
ANR	9636201	Identifier	i		9636150	1					
ANR	9636202	CompoundStatement		9:6:144:144	9636150	3					
ANR	9636203	IfStatement	"if ( ! check_one_character ( co , c , tests [ i ] ) )"		9636150	0					
ANR	9636204	Condition	"! check_one_character ( co , c , tests [ i ] )"	544:13:15867:15903	9636150	0	True				
ANR	9636205	UnaryOperationExpression	"! check_one_character ( co , c , tests [ i ] )"		9636150	0					
ANR	9636206	UnaryOperator	!		9636150	0					
ANR	9636207	CallExpression	"check_one_character ( co , c , tests [ i ] )"		9636150	1					
ANR	9636208	Callee	check_one_character		9636150	0					
ANR	9636209	Identifier	check_one_character		9636150	0					
ANR	9636210	ArgumentList	co		9636150	1					
ANR	9636211	Argument	co		9636150	0					
ANR	9636212	Identifier	co		9636150	0					
ANR	9636213	Argument	c		9636150	1					
ANR	9636214	Identifier	c		9636150	0					
ANR	9636215	Argument	tests [ i ]		9636150	2					
ANR	9636216	ArrayIndexing	tests [ i ]		9636150	0					
ANR	9636217	Identifier	tests		9636150	0					
ANR	9636218	Identifier	i		9636150	1					
ANR	9636219	ReturnStatement	return 0 ;	545:15:15921:15929	9636150	1	True				
ANR	9636220	PrimaryExpression	0		9636150	0					
ANR	9636221	ElseStatement	else		9636150	0					
ANR	9636222	ReturnStatement	"return check_all_characters ( co , c ) ;"	550:9:16009:16043	9636150	0	True				
ANR	9636223	CallExpression	"check_all_characters ( co , c )"		9636150	0					
ANR	9636224	Callee	check_all_characters		9636150	0					
ANR	9636225	Identifier	check_all_characters		9636150	0					
ANR	9636226	ArgumentList	co		9636150	1					
ANR	9636227	Argument	co		9636150	0					
ANR	9636228	Identifier	co		9636150	0					
ANR	9636229	Argument	c		9636150	1					
ANR	9636230	Identifier	c		9636150	0					
ANR	9636231	ReturnStatement	return 1 ;	553:3:16054:16062	9636150	3	True				
ANR	9636232	PrimaryExpression	1		9636150	0					
ANR	9636233	ReturnType	static int		9636150	1					
ANR	9636234	Identifier	check_some_characters		9636150	2					
ANR	9636235	ParameterList	"checkfp_command * co , checkfp_control c , const char * tests"		9636150	3					
ANR	9636236	Parameter	checkfp_command * co	533:33:15645:15663	9636150	0	True				
ANR	9636237	ParameterType	checkfp_command *		9636150	0					
ANR	9636238	Identifier	co		9636150	1					
ANR	9636239	Parameter	checkfp_control c	533:54:15666:15682	9636150	1	True				
ANR	9636240	ParameterType	checkfp_control		9636150	0					
ANR	9636241	Identifier	c		9636150	1					
ANR	9636242	Parameter	const char * tests	534:3:15688:15704	9636150	2	True				
ANR	9636243	ParameterType	const char *		9636150	0					
ANR	9636244	Identifier	tests		9636150	1					
ANR	9636245	CFGEntryNode	ENTRY		9636150		True				
ANR	9636246	CFGExitNode	EXIT		9636150		True				
ANR	9636247	Symbol	* co		9636150						
ANR	9636248	Symbol	c		9636150						
ANR	9636249	Symbol	tests		9636150						
ANR	9636250	Symbol	* i		9636150						
ANR	9636251	Symbol	check_all_characters		9636150						
ANR	9636252	Symbol	c . limit		9636150						
ANR	9636253	Symbol	* tests		9636150						
ANR	9636254	Symbol	i		9636150						
ANR	9636255	Symbol	co		9636150						
ANR	9636256	Symbol	check_one_character		9636150						
ANR	9636257	Symbol	c . cnumber		9636150						
ANR	9636258	Symbol	co -> number		9636150						
ANR	9636259	Function	validation_checkfp	556:0:16067:17215							
ANR	9636260	FunctionDef	"validation_checkfp (int count , int argc , char * * argv)"		9636259	0					
ANR	9636261	CompoundStatement		557:0:16124:17215	9636259	0					
ANR	9636262	IdentifierDeclStatement	int result ;	558:3:16129:16139	9636259	0	True				
ANR	9636263	IdentifierDecl	result		9636259	0					
ANR	9636264	IdentifierDeclType	int		9636259	0					
ANR	9636265	Identifier	result		9636259	1					
ANR	9636266	IdentifierDeclStatement	checkfp_command command ;	559:3:16144:16167	9636259	1	True				
ANR	9636267	IdentifierDecl	command		9636259	0					
ANR	9636268	IdentifierDeclType	checkfp_command		9636259	0					
ANR	9636269	Identifier	command		9636259	1					
ANR	9636270	IdentifierDeclStatement	checkfp_control control ;	560:3:16172:16195	9636259	2	True				
ANR	9636271	IdentifierDecl	control		9636259	0					
ANR	9636272	IdentifierDeclType	checkfp_control		9636259	0					
ANR	9636273	Identifier	control		9636259	1					
ANR	9636274	ExpressionStatement	command . number [ 0 ] = 0	562:3:16201:16222	9636259	3	True				
ANR	9636275	AssignmentExpression	command . number [ 0 ] = 0		9636259	0		=			
ANR	9636276	ArrayIndexing	command . number [ 0 ]		9636259	0					
ANR	9636277	MemberAccess	command . number		9636259	0					
ANR	9636278	Identifier	command		9636259	0					
ANR	9636279	Identifier	number		9636259	1					
ANR	9636280	PrimaryExpression	0		9636259	1					
ANR	9636281	PrimaryExpression	0		9636259	1					
ANR	9636282	ExpressionStatement	command . limit = 3	563:3:16227:16244	9636259	4	True				
ANR	9636283	AssignmentExpression	command . limit = 3		9636259	0		=			
ANR	9636284	MemberAccess	command . limit		9636259	0					
ANR	9636285	Identifier	command		9636259	0					
ANR	9636286	Identifier	limit		9636259	1					
ANR	9636287	PrimaryExpression	3		9636259	1					
ANR	9636288	ExpressionStatement	command . verbose = verbose	564:3:16249:16274	9636259	5	True				
ANR	9636289	AssignmentExpression	command . verbose = verbose		9636259	0		=			
ANR	9636290	MemberAccess	command . verbose		9636259	0					
ANR	9636291	Identifier	command		9636259	0					
ANR	9636292	Identifier	verbose		9636259	1					
ANR	9636293	Identifier	verbose		9636259	1					
ANR	9636294	ExpressionStatement	command . ctimes = 0	565:3:16279:16297	9636259	6	True				
ANR	9636295	AssignmentExpression	command . ctimes = 0		9636259	0		=			
ANR	9636296	MemberAccess	command . ctimes		9636259	0					
ANR	9636297	Identifier	command		9636259	0					
ANR	9636298	Identifier	ctimes		9636259	1					
ANR	9636299	PrimaryExpression	0		9636259	1					
ANR	9636300	ExpressionStatement	command . cmillions = 0	566:3:16302:16323	9636259	7	True				
ANR	9636301	AssignmentExpression	command . cmillions = 0		9636259	0		=			
ANR	9636302	MemberAccess	command . cmillions		9636259	0					
ANR	9636303	Identifier	command		9636259	0					
ANR	9636304	Identifier	cmillions		9636259	1					
ANR	9636305	PrimaryExpression	0		9636259	1					
ANR	9636306	ExpressionStatement	command . cinvalid = 0	567:3:16328:16348	9636259	8	True				
ANR	9636307	AssignmentExpression	command . cinvalid = 0		9636259	0		=			
ANR	9636308	MemberAccess	command . cinvalid		9636259	0					
ANR	9636309	Identifier	command		9636259	0					
ANR	9636310	Identifier	cinvalid		9636259	1					
ANR	9636311	PrimaryExpression	0		9636259	1					
ANR	9636312	ExpressionStatement	command . cnoaccept = 0	568:3:16353:16374	9636259	9	True				
ANR	9636313	AssignmentExpression	command . cnoaccept = 0		9636259	0		=			
ANR	9636314	MemberAccess	command . cnoaccept		9636259	0					
ANR	9636315	Identifier	command		9636259	0					
ANR	9636316	Identifier	cnoaccept		9636259	1					
ANR	9636317	PrimaryExpression	0		9636259	1					
ANR	9636318	WhileStatement	while ( -- argc > 0 )		9636259	10					
ANR	9636319	Condition	-- argc > 0	570:10:16387:16396	9636259	0	True				
ANR	9636320	RelationalExpression	-- argc > 0		9636259	0		>			
ANR	9636321	UnaryExpression	-- argc		9636259	0					
ANR	9636322	IncDec	--		9636259	0					
ANR	9636323	Identifier	argc		9636259	1					
ANR	9636324	PrimaryExpression	0		9636259	1					
ANR	9636325	CompoundStatement		15:3:277:277	9636259	1					
ANR	9636326	ExpressionStatement	++ argv	572:6:16410:16416	9636259	0	True				
ANR	9636327	UnaryExpression	++ argv		9636259	0					
ANR	9636328	IncDec	++		9636259	0					
ANR	9636329	Identifier	argv		9636259	1					
ANR	9636330	IfStatement	"if ( argc > 1 && strcmp ( * argv , ""-l"" ) == 0 )"		9636259	1					
ANR	9636331	Condition	"argc > 1 && strcmp ( * argv , ""-l"" ) == 0"	573:10:16428:16463	9636259	0	True				
ANR	9636332	AndExpression	"argc > 1 && strcmp ( * argv , ""-l"" ) == 0"		9636259	0		&&			
ANR	9636333	RelationalExpression	argc > 1		9636259	0		>			
ANR	9636334	Identifier	argc		9636259	0					
ANR	9636335	PrimaryExpression	1		9636259	1					
ANR	9636336	EqualityExpression	"strcmp ( * argv , ""-l"" ) == 0"		9636259	1		==			
ANR	9636337	CallExpression	"strcmp ( * argv , ""-l"" )"		9636259	0					
ANR	9636338	Callee	strcmp		9636259	0					
ANR	9636339	Identifier	strcmp		9636259	0					
ANR	9636340	ArgumentList	* argv		9636259	1					
ANR	9636341	Argument	* argv		9636259	0					
ANR	9636342	UnaryOperationExpression	* argv		9636259	0					
ANR	9636343	UnaryOperator	*		9636259	0					
ANR	9636344	Identifier	argv		9636259	1					
ANR	9636345	Argument	"""-l"""		9636259	1					
ANR	9636346	PrimaryExpression	"""-l"""		9636259	0					
ANR	9636347	PrimaryExpression	0		9636259	1					
ANR	9636348	CompoundStatement		18:6:347:347	9636259	1					
ANR	9636349	ExpressionStatement	-- argc	575:9:16483:16489	9636259	0	True				
ANR	9636350	UnaryExpression	-- argc		9636259	0					
ANR	9636351	IncDec	--		9636259	0					
ANR	9636352	Identifier	argc		9636259	1					
ANR	9636353	ExpressionStatement	command . limit = atoi ( * ++ argv )	576:9:16500:16529	9636259	1	True				
ANR	9636354	AssignmentExpression	command . limit = atoi ( * ++ argv )		9636259	0		=			
ANR	9636355	MemberAccess	command . limit		9636259	0					
ANR	9636356	Identifier	command		9636259	0					
ANR	9636357	Identifier	limit		9636259	1					
ANR	9636358	CallExpression	atoi ( * ++ argv )		9636259	1					
ANR	9636359	Callee	atoi		9636259	0					
ANR	9636360	Identifier	atoi		9636259	0					
ANR	9636361	ArgumentList	* ++ argv		9636259	1					
ANR	9636362	Argument	* ++ argv		9636259	0					
ANR	9636363	UnaryOperationExpression	* ++ argv		9636259	0					
ANR	9636364	UnaryOperator	*		9636259	0					
ANR	9636365	UnaryExpression	++ argv		9636259	1					
ANR	9636366	IncDec	++		9636259	0					
ANR	9636367	Identifier	argv		9636259	1					
ANR	9636368	ElseStatement	else		9636259	0					
ANR	9636369	CompoundStatement		24:6:432:432	9636259	0					
ANR	9636370	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	581:9:16568:16615	9636259	0	True				
ANR	9636371	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		9636259	0					
ANR	9636372	Callee	fprintf		9636259	0					
ANR	9636373	Identifier	fprintf		9636259	0					
ANR	9636374	ArgumentList	stderr		9636259	1					
ANR	9636375	Argument	stderr		9636259	0					
ANR	9636376	Identifier	stderr		9636259	0					
ANR	9636377	Argument	"""unknown argument %s\\n"""		9636259	1					
ANR	9636378	PrimaryExpression	"""unknown argument %s\\n"""		9636259	0					
ANR	9636379	Argument	* argv		9636259	2					
ANR	9636380	UnaryOperationExpression	* argv		9636259	0					
ANR	9636381	UnaryOperator	*		9636259	0					
ANR	9636382	Identifier	argv		9636259	1					
ANR	9636383	ReturnStatement	return 1 ;	582:9:16626:16634	9636259	1	True				
ANR	9636384	PrimaryExpression	1		9636259	0					
ANR	9636385	ExpressionStatement	control . cnumber = 0	586:3:16653:16672	9636259	11	True				
ANR	9636386	AssignmentExpression	control . cnumber = 0		9636259	0		=			
ANR	9636387	MemberAccess	control . cnumber		9636259	0					
ANR	9636388	Identifier	control		9636259	0					
ANR	9636389	Identifier	cnumber		9636259	1					
ANR	9636390	PrimaryExpression	0		9636259	1					
ANR	9636391	ExpressionStatement	control . check_state = start	587:3:16677:16704	9636259	12	True				
ANR	9636392	AssignmentExpression	control . check_state = start		9636259	0		=			
ANR	9636393	MemberAccess	control . check_state		9636259	0					
ANR	9636394	Identifier	control		9636259	0					
ANR	9636395	Identifier	check_state		9636259	1					
ANR	9636396	Identifier	start		9636259	1					
ANR	9636397	ExpressionStatement	control . at_start = 1	588:3:16709:16729	9636259	13	True				
ANR	9636398	AssignmentExpression	control . at_start = 1		9636259	0		=			
ANR	9636399	MemberAccess	control . at_start		9636259	0					
ANR	9636400	Identifier	control		9636259	0					
ANR	9636401	Identifier	at_start		9636259	1					
ANR	9636402	PrimaryExpression	1		9636259	1					
ANR	9636403	ExpressionStatement	control . cdigits_in_state = 0	589:3:16734:16762	9636259	14	True				
ANR	9636404	AssignmentExpression	control . cdigits_in_state = 0		9636259	0		=			
ANR	9636405	MemberAccess	control . cdigits_in_state		9636259	0					
ANR	9636406	Identifier	control		9636259	0					
ANR	9636407	Identifier	cdigits_in_state		9636259	1					
ANR	9636408	PrimaryExpression	0		9636259	1					
ANR	9636409	ExpressionStatement	control . limit = command . limit	590:3:16767:16796	9636259	15	True				
ANR	9636410	AssignmentExpression	control . limit = command . limit		9636259	0		=			
ANR	9636411	MemberAccess	control . limit		9636259	0					
ANR	9636412	Identifier	control		9636259	0					
ANR	9636413	Identifier	limit		9636259	1					
ANR	9636414	MemberAccess	command . limit		9636259	1					
ANR	9636415	Identifier	command		9636259	0					
ANR	9636416	Identifier	limit		9636259	1					
ANR	9636417	ExpressionStatement	control . state = 0	591:3:16801:16818	9636259	16	True				
ANR	9636418	AssignmentExpression	control . state = 0		9636259	0		=			
ANR	9636419	MemberAccess	control . state		9636259	0					
ANR	9636420	Identifier	control		9636259	0					
ANR	9636421	Identifier	state		9636259	1					
ANR	9636422	PrimaryExpression	0		9636259	1					
ANR	9636423	ExpressionStatement	control . is_negative = 0	592:3:16823:16846	9636259	17	True				
ANR	9636424	AssignmentExpression	control . is_negative = 0		9636259	0		=			
ANR	9636425	MemberAccess	control . is_negative		9636259	0					
ANR	9636426	Identifier	control		9636259	0					
ANR	9636427	Identifier	is_negative		9636259	1					
ANR	9636428	PrimaryExpression	0		9636259	1					
ANR	9636429	ExpressionStatement	control . is_zero = 1	593:3:16851:16870	9636259	18	True				
ANR	9636430	AssignmentExpression	control . is_zero = 1		9636259	0		=			
ANR	9636431	MemberAccess	control . is_zero		9636259	0					
ANR	9636432	Identifier	control		9636259	0					
ANR	9636433	Identifier	is_zero		9636259	1					
ANR	9636434	PrimaryExpression	1		9636259	1					
ANR	9636435	ExpressionStatement	control . number_was_valid = 0	594:3:16875:16903	9636259	19	True				
ANR	9636436	AssignmentExpression	control . number_was_valid = 0		9636259	0		=			
ANR	9636437	MemberAccess	control . number_was_valid		9636259	0					
ANR	9636438	Identifier	control		9636259	0					
ANR	9636439	Identifier	number_was_valid		9636259	1					
ANR	9636440	PrimaryExpression	0		9636259	1					
ANR	9636441	ExpressionStatement	"result = check_all_characters ( & command , control )"	596:3:16909:16957	9636259	20	True				
ANR	9636442	AssignmentExpression	"result = check_all_characters ( & command , control )"		9636259	0		=			
ANR	9636443	Identifier	result		9636259	0					
ANR	9636444	CallExpression	"check_all_characters ( & command , control )"		9636259	1					
ANR	9636445	Callee	check_all_characters		9636259	0					
ANR	9636446	Identifier	check_all_characters		9636259	0					
ANR	9636447	ArgumentList	& command		9636259	1					
ANR	9636448	Argument	& command		9636259	0					
ANR	9636449	UnaryOperationExpression	& command		9636259	0					
ANR	9636450	UnaryOperator	&		9636259	0					
ANR	9636451	Identifier	command		9636259	1					
ANR	9636452	Argument	control		9636259	1					
ANR	9636453	Identifier	control		9636259	0					
ANR	9636454	ExpressionStatement	"printf ( ""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"" , result ? ""pass"" : ""FAIL"" , command . cmillions / 1000 , command . cmillions % 1000 , command . ctimes / 1000 , command . ctimes % 1000 , command . cinvalid )"	598:3:16963:17194	9636259	21	True				
ANR	9636455	CallExpression	"printf ( ""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"" , result ? ""pass"" : ""FAIL"" , command . cmillions / 1000 , command . cmillions % 1000 , command . ctimes / 1000 , command . ctimes % 1000 , command . cinvalid )"		9636259	0					
ANR	9636456	Callee	printf		9636259	0					
ANR	9636457	Identifier	printf		9636259	0					
ANR	9636458	ArgumentList	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		9636259	1					
ANR	9636459	Argument	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		9636259	0					
ANR	9636460	PrimaryExpression	"""checkfp: %s: checked %d,%.3d,%.3d,%.3d strings (%d invalid)\\n"""		9636259	0					
ANR	9636461	Argument	"result ? ""pass"" : ""FAIL"""		9636259	1					
ANR	9636462	ConditionalExpression	"result ? ""pass"" : ""FAIL"""		9636259	0					
ANR	9636463	Condition	result		9636259	0					
ANR	9636464	Identifier	result		9636259	0					
ANR	9636465	PrimaryExpression	"""pass"""		9636259	1					
ANR	9636466	PrimaryExpression	"""FAIL"""		9636259	2					
ANR	9636467	Argument	command . cmillions / 1000		9636259	2					
ANR	9636468	MultiplicativeExpression	command . cmillions / 1000		9636259	0		/			
ANR	9636469	MemberAccess	command . cmillions		9636259	0					
ANR	9636470	Identifier	command		9636259	0					
ANR	9636471	Identifier	cmillions		9636259	1					
ANR	9636472	PrimaryExpression	1000		9636259	1					
ANR	9636473	Argument	command . cmillions % 1000		9636259	3					
ANR	9636474	MultiplicativeExpression	command . cmillions % 1000		9636259	0		%			
ANR	9636475	MemberAccess	command . cmillions		9636259	0					
ANR	9636476	Identifier	command		9636259	0					
ANR	9636477	Identifier	cmillions		9636259	1					
ANR	9636478	PrimaryExpression	1000		9636259	1					
ANR	9636479	Argument	command . ctimes / 1000		9636259	4					
ANR	9636480	MultiplicativeExpression	command . ctimes / 1000		9636259	0		/			
ANR	9636481	MemberAccess	command . ctimes		9636259	0					
ANR	9636482	Identifier	command		9636259	0					
ANR	9636483	Identifier	ctimes		9636259	1					
ANR	9636484	PrimaryExpression	1000		9636259	1					
ANR	9636485	Argument	command . ctimes % 1000		9636259	5					
ANR	9636486	MultiplicativeExpression	command . ctimes % 1000		9636259	0		%			
ANR	9636487	MemberAccess	command . ctimes		9636259	0					
ANR	9636488	Identifier	command		9636259	0					
ANR	9636489	Identifier	ctimes		9636259	1					
ANR	9636490	PrimaryExpression	1000		9636259	1					
ANR	9636491	Argument	command . cinvalid		9636259	6					
ANR	9636492	MemberAccess	command . cinvalid		9636259	0					
ANR	9636493	Identifier	command		9636259	0					
ANR	9636494	Identifier	cinvalid		9636259	1					
ANR	9636495	ReturnStatement	return result ;	603:3:17200:17213	9636259	22	True				
ANR	9636496	Identifier	result		9636259	0					
ANR	9636497	ReturnType	int		9636259	1					
ANR	9636498	Identifier	validation_checkfp		9636259	2					
ANR	9636499	ParameterList	"int count , int argc , char * * argv"		9636259	3					
ANR	9636500	Parameter	int count	556:23:16090:16098	9636259	0	True				
ANR	9636501	ParameterType	int		9636259	0					
ANR	9636502	Identifier	count		9636259	1					
ANR	9636503	Parameter	int argc	556:34:16101:16108	9636259	1	True				
ANR	9636504	ParameterType	int		9636259	0					
ANR	9636505	Identifier	argc		9636259	1					
ANR	9636506	Parameter	char * * argv	556:44:16111:16121	9636259	2	True				
ANR	9636507	ParameterType	char * *		9636259	0					
ANR	9636508	Identifier	argv		9636259	1					
ANR	9636509	CFGEntryNode	ENTRY		9636259		True				
ANR	9636510	CFGExitNode	EXIT		9636259		True				
ANR	9636511	Symbol	command . cmillions		9636259						
ANR	9636512	Symbol	command . cnoaccept		9636259						
ANR	9636513	Symbol	* argv		9636259						
ANR	9636514	Symbol	argv		9636259						
ANR	9636515	Symbol	result		9636259						
ANR	9636516	Symbol	* command		9636259						
ANR	9636517	Symbol	command . limit		9636259						
ANR	9636518	Symbol	command . verbose		9636259						
ANR	9636519	Symbol	check_all_characters		9636259						
ANR	9636520	Symbol	command . cinvalid		9636259						
ANR	9636521	Symbol	control . state		9636259						
ANR	9636522	Symbol	command . number		9636259						
ANR	9636523	Symbol	control . is_negative		9636259						
ANR	9636524	Symbol	control . number_was_valid		9636259						
ANR	9636525	Symbol	argc		9636259						
ANR	9636526	Symbol	strcmp		9636259						
ANR	9636527	Symbol	atoi		9636259						
ANR	9636528	Symbol	& command		9636259						
ANR	9636529	Symbol	control . cnumber		9636259						
ANR	9636530	Symbol	control . cdigits_in_state		9636259						
ANR	9636531	Symbol	control . limit		9636259						
ANR	9636532	Symbol	count		9636259						
ANR	9636533	Symbol	start		9636259						
ANR	9636534	Symbol	control		9636259						
ANR	9636535	Symbol	control . check_state		9636259						
ANR	9636536	Symbol	stderr		9636259						
ANR	9636537	Symbol	command		9636259						
ANR	9636538	Symbol	verbose		9636259						
ANR	9636539	Symbol	command . ctimes		9636259						
ANR	9636540	Symbol	* ++ argv		9636259						
ANR	9636541	Symbol	control . at_start		9636259						
ANR	9636542	Symbol	control . is_zero		9636259						
ANR	9636543	Symbol	* command . number		9636259						
ANR	9636544	Function	validation_muldiv	606:0:17218:20591							
ANR	9636545	FunctionDef	"validation_muldiv (int count , int argc , char * * argv)"		9636544	0					
ANR	9636546	CompoundStatement		607:0:17274:20591	9636544	0					
ANR	9636547	IdentifierDeclStatement	int tested = 0 ;	608:3:17279:17293	9636544	0	True				
ANR	9636548	IdentifierDecl	tested = 0		9636544	0					
ANR	9636549	IdentifierDeclType	int		9636544	0					
ANR	9636550	Identifier	tested		9636544	1					
ANR	9636551	AssignmentExpression	tested = 0		9636544	2		=			
ANR	9636552	Identifier	tested		9636544	0					
ANR	9636553	PrimaryExpression	0		9636544	1					
ANR	9636554	IdentifierDeclStatement	int overflow = 0 ;	609:3:17298:17314	9636544	1	True				
ANR	9636555	IdentifierDecl	overflow = 0		9636544	0					
ANR	9636556	IdentifierDeclType	int		9636544	0					
ANR	9636557	Identifier	overflow		9636544	1					
ANR	9636558	AssignmentExpression	overflow = 0		9636544	2		=			
ANR	9636559	Identifier	overflow		9636544	0					
ANR	9636560	PrimaryExpression	0		9636544	1					
ANR	9636561	IdentifierDeclStatement	int error = 0 ;	610:3:17319:17332	9636544	2	True				
ANR	9636562	IdentifierDecl	error = 0		9636544	0					
ANR	9636563	IdentifierDeclType	int		9636544	0					
ANR	9636564	Identifier	error		9636544	1					
ANR	9636565	AssignmentExpression	error = 0		9636544	2		=			
ANR	9636566	Identifier	error		9636544	0					
ANR	9636567	PrimaryExpression	0		9636544	1					
ANR	9636568	IdentifierDeclStatement	int error64 = 0 ;	611:3:17337:17352	9636544	3	True				
ANR	9636569	IdentifierDecl	error64 = 0		9636544	0					
ANR	9636570	IdentifierDeclType	int		9636544	0					
ANR	9636571	Identifier	error64		9636544	1					
ANR	9636572	AssignmentExpression	error64 = 0		9636544	2		=			
ANR	9636573	Identifier	error64		9636544	0					
ANR	9636574	PrimaryExpression	0		9636544	1					
ANR	9636575	IdentifierDeclStatement	int passed = 0 ;	612:3:17357:17371	9636544	4	True				
ANR	9636576	IdentifierDecl	passed = 0		9636544	0					
ANR	9636577	IdentifierDeclType	int		9636544	0					
ANR	9636578	Identifier	passed		9636544	1					
ANR	9636579	AssignmentExpression	passed = 0		9636544	2		=			
ANR	9636580	Identifier	passed		9636544	0					
ANR	9636581	PrimaryExpression	0		9636544	1					
ANR	9636582	IdentifierDeclStatement	int randbits = 0 ;	613:3:17376:17392	9636544	5	True				
ANR	9636583	IdentifierDecl	randbits = 0		9636544	0					
ANR	9636584	IdentifierDeclType	int		9636544	0					
ANR	9636585	Identifier	randbits		9636544	1					
ANR	9636586	AssignmentExpression	randbits = 0		9636544	2		=			
ANR	9636587	Identifier	randbits		9636544	0					
ANR	9636588	PrimaryExpression	0		9636544	1					
ANR	9636589	IdentifierDeclStatement	png_uint_32 randbuffer ;	614:3:17397:17419	9636544	6	True				
ANR	9636590	IdentifierDecl	randbuffer		9636544	0					
ANR	9636591	IdentifierDeclType	png_uint_32		9636544	0					
ANR	9636592	Identifier	randbuffer		9636544	1					
ANR	9636593	IdentifierDeclStatement	png_fixed_point a ;	615:3:17424:17441	9636544	7	True				
ANR	9636594	IdentifierDecl	a		9636544	0					
ANR	9636595	IdentifierDeclType	png_fixed_point		9636544	0					
ANR	9636596	Identifier	a		9636544	1					
ANR	9636597	IdentifierDeclStatement	"png_int_32 times , div ;"	616:3:17446:17467	9636544	8	True				
ANR	9636598	IdentifierDecl	times		9636544	0					
ANR	9636599	IdentifierDeclType	png_int_32		9636544	0					
ANR	9636600	Identifier	times		9636544	1					
ANR	9636601	IdentifierDecl	div		9636544	1					
ANR	9636602	IdentifierDeclType	png_int_32		9636544	0					
ANR	9636603	Identifier	div		9636544	1					
ANR	9636604	WhileStatement	while ( -- argc > 0 )		9636544	9					
ANR	9636605	Condition	-- argc > 0	618:10:17480:17489	9636544	0	True				
ANR	9636606	RelationalExpression	-- argc > 0		9636544	0		>			
ANR	9636607	UnaryExpression	-- argc		9636544	0					
ANR	9636608	IncDec	--		9636544	0					
ANR	9636609	Identifier	argc		9636544	1					
ANR	9636610	PrimaryExpression	0		9636544	1					
ANR	9636611	CompoundStatement		13:6:223:223	9636544	1					
ANR	9636612	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * ++ argv )"	620:9:17509:17558	9636544	0	True				
ANR	9636613	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * ++ argv )"		9636544	0					
ANR	9636614	Callee	fprintf		9636544	0					
ANR	9636615	Identifier	fprintf		9636544	0					
ANR	9636616	ArgumentList	stderr		9636544	1					
ANR	9636617	Argument	stderr		9636544	0					
ANR	9636618	Identifier	stderr		9636544	0					
ANR	9636619	Argument	"""unknown argument %s\\n"""		9636544	1					
ANR	9636620	PrimaryExpression	"""unknown argument %s\\n"""		9636544	0					
ANR	9636621	Argument	* ++ argv		9636544	2					
ANR	9636622	UnaryOperationExpression	* ++ argv		9636544	0					
ANR	9636623	UnaryOperator	*		9636544	0					
ANR	9636624	UnaryExpression	++ argv		9636544	1					
ANR	9636625	IncDec	++		9636544	0					
ANR	9636626	Identifier	argv		9636544	1					
ANR	9636627	ReturnStatement	return 1 ;	621:9:17569:17577	9636544	1	True				
ANR	9636628	PrimaryExpression	1		9636544	0					
ANR	9636629	ExpressionStatement	randbuffer = RAND_MAX	625:3:17644:17665	9636544	10	True				
ANR	9636630	AssignmentExpression	randbuffer = RAND_MAX		9636544	0		=			
ANR	9636631	Identifier	randbuffer		9636544	0					
ANR	9636632	Identifier	RAND_MAX		9636544	1					
ANR	9636633	WhileStatement	while ( randbuffer != 0 )		9636544	11					
ANR	9636634	Condition	randbuffer != 0	626:10:17677:17691	9636544	0	True				
ANR	9636635	EqualityExpression	randbuffer != 0		9636544	0		!=			
ANR	9636636	Identifier	randbuffer		9636544	0					
ANR	9636637	PrimaryExpression	0		9636544	1					
ANR	9636638	ExpressionStatement	"++ randbits , randbuffer >>= 1"	626:27:17694:17722	9636544	1	True				
ANR	9636639	Expression	"++ randbits , randbuffer >>= 1"		9636544	0					
ANR	9636640	UnaryExpression	++ randbits		9636544	0					
ANR	9636641	IncDec	++		9636544	0					
ANR	9636642	Identifier	randbits		9636544	1					
ANR	9636643	AssignmentExpression	randbuffer >>= 1		9636544	1		>>=			
ANR	9636644	Identifier	randbuffer		9636544	0					
ANR	9636645	PrimaryExpression	1		9636544	1					
ANR	9636646	ExpressionStatement	"printf ( ""Using random number generator that makes %d bits\\n"" , randbits )"	627:3:17727:17797	9636544	12	True				
ANR	9636647	CallExpression	"printf ( ""Using random number generator that makes %d bits\\n"" , randbits )"		9636544	0					
ANR	9636648	Callee	printf		9636544	0					
ANR	9636649	Identifier	printf		9636544	0					
ANR	9636650	ArgumentList	"""Using random number generator that makes %d bits\\n"""		9636544	1					
ANR	9636651	Argument	"""Using random number generator that makes %d bits\\n"""		9636544	0					
ANR	9636652	PrimaryExpression	"""Using random number generator that makes %d bits\\n"""		9636544	0					
ANR	9636653	Argument	randbits		9636544	1					
ANR	9636654	Identifier	randbits		9636544	0					
ANR	9636655	ForStatement	for ( div = 0 ; div < 32 ; div += randbits )		9636544	13					
ANR	9636656	ForInit	div = 0 ;	628:8:17807:17812	9636544	0	True				
ANR	9636657	AssignmentExpression	div = 0		9636544	0		=			
ANR	9636658	Identifier	div		9636544	0					
ANR	9636659	PrimaryExpression	0		9636544	1					
ANR	9636660	Condition	div < 32	628:15:17814:17819	9636544	1	True				
ANR	9636661	RelationalExpression	div < 32		9636544	0		<			
ANR	9636662	Identifier	div		9636544	0					
ANR	9636663	PrimaryExpression	32		9636544	1					
ANR	9636664	AssignmentExpression	div += randbits	628:23:17822:17836	9636544	2	True	+=			
ANR	9636665	Identifier	div		9636544	0					
ANR	9636666	Identifier	randbits		9636544	1					
ANR	9636667	ExpressionStatement	randbuffer = ( randbuffer << randbits ) ^ rand ( )	629:6:17845:17891	9636544	3	True				
ANR	9636668	AssignmentExpression	randbuffer = ( randbuffer << randbits ) ^ rand ( )		9636544	0		=			
ANR	9636669	Identifier	randbuffer		9636544	0					
ANR	9636670	ExclusiveOrExpression	( randbuffer << randbits ) ^ rand ( )		9636544	1		^			
ANR	9636671	ShiftExpression	randbuffer << randbits		9636544	0		<<			
ANR	9636672	Identifier	randbuffer		9636544	0					
ANR	9636673	Identifier	randbits		9636544	1					
ANR	9636674	CallExpression	rand ( )		9636544	1					
ANR	9636675	Callee	rand		9636544	0					
ANR	9636676	Identifier	rand		9636544	0					
ANR	9636677	ArgumentList			9636544	1					
ANR	9636678	ExpressionStatement	a = 0	631:3:17897:17902	9636544	14	True				
ANR	9636679	AssignmentExpression	a = 0		9636544	0		=			
ANR	9636680	Identifier	a		9636544	0					
ANR	9636681	PrimaryExpression	0		9636544	1					
ANR	9636682	ExpressionStatement	times = div = 0	632:3:17907:17922	9636544	15	True				
ANR	9636683	AssignmentExpression	times = div = 0		9636544	0		=			
ANR	9636684	Identifier	times		9636544	0					
ANR	9636685	AssignmentExpression	div = 0		9636544	1		=			
ANR	9636686	Identifier	div		9636544	0					
ANR	9636687	PrimaryExpression	0		9636544	1					
ANR	9636688	DoStatement	do		9636544	16					
ANR	9636689	CompoundStatement		36:6:946:952	9636544	0					
ANR	9636690	IdentifierDeclStatement	png_fixed_point result ;	635:6:17941:17963	9636544	0	True				
ANR	9636691	IdentifierDecl	result		9636544	0					
ANR	9636692	IdentifierDeclType	png_fixed_point		9636544	0					
ANR	9636693	Identifier	result		9636544	1					
ANR	9636694	IdentifierDeclStatement	"long long int fp , fpround ;"	640:6:18160:18185	9636544	1	True				
ANR	9636695	IdentifierDecl	fp		9636544	0					
ANR	9636696	IdentifierDeclType	long long int		9636544	0					
ANR	9636697	Identifier	fp		9636544	1					
ANR	9636698	IdentifierDecl	fpround		9636544	1					
ANR	9636699	IdentifierDeclType	long long int		9636544	0					
ANR	9636700	Identifier	fpround		9636544	1					
ANR	9636701	IdentifierDeclStatement	"unsigned long hi , lo ;"	641:6:18193:18213	9636544	2	True				
ANR	9636702	IdentifierDecl	hi		9636544	0					
ANR	9636703	IdentifierDeclType	unsigned long		9636544	0					
ANR	9636704	Identifier	hi		9636544	1					
ANR	9636705	IdentifierDecl	lo		9636544	1					
ANR	9636706	IdentifierDeclType	unsigned long		9636544	0					
ANR	9636707	Identifier	lo		9636544	1					
ANR	9636708	IdentifierDeclStatement	int ok ;	642:6:18221:18227	9636544	3	True				
ANR	9636709	IdentifierDecl	ok		9636544	0					
ANR	9636710	IdentifierDeclType	int		9636544	0					
ANR	9636711	Identifier	ok		9636544	1					
ANR	9636712	CompoundStatement		43:9:1118:1127	9636544	4					
ANR	9636713	IdentifierDeclStatement	"long u1 , u2 ;"	648:9:18371:18382	9636544	0	True				
ANR	9636714	IdentifierDecl	u1		9636544	0					
ANR	9636715	IdentifierDeclType	long		9636544	0					
ANR	9636716	Identifier	u1		9636544	1					
ANR	9636717	IdentifierDecl	u2		9636544	1					
ANR	9636718	IdentifierDeclType	long		9636544	0					
ANR	9636719	Identifier	u2		9636544	1					
ANR	9636720	IdentifierDeclStatement	int n = 0 ;	649:9:18393:18402	9636544	1	True				
ANR	9636721	IdentifierDecl	n = 0		9636544	0					
ANR	9636722	IdentifierDeclType	int		9636544	0					
ANR	9636723	Identifier	n		9636544	1					
ANR	9636724	AssignmentExpression	n = 0		9636544	2		=			
ANR	9636725	Identifier	n		9636544	0					
ANR	9636726	PrimaryExpression	0		9636544	1					
ANR	9636727	IfStatement	if ( a < 0 )		9636544	2					
ANR	9636728	Condition	a < 0	650:13:18417:18421	9636544	0	True				
ANR	9636729	RelationalExpression	a < 0		9636544	0		<			
ANR	9636730	Identifier	a		9636544	0					
ANR	9636731	PrimaryExpression	0		9636544	1					
ANR	9636732	ExpressionStatement	"u1 = - a , n = 1"	650:20:18424:18438	9636544	1	True				
ANR	9636733	Expression	"u1 = - a , n = 1"		9636544	0					
ANR	9636734	AssignmentExpression	u1 = - a		9636544	0		=			
ANR	9636735	Identifier	u1		9636544	0					
ANR	9636736	UnaryOperationExpression	- a		9636544	1					
ANR	9636737	UnaryOperator	-		9636544	0					
ANR	9636738	Identifier	a		9636544	1					
ANR	9636739	AssignmentExpression	n = 1		9636544	1		=			
ANR	9636740	Identifier	n		9636544	0					
ANR	9636741	PrimaryExpression	1		9636544	1					
ANR	9636742	ElseStatement	else		9636544	0					
ANR	9636743	ExpressionStatement	u1 = a	650:41:18445:18451	9636544	0	True				
ANR	9636744	AssignmentExpression	u1 = a		9636544	0		=			
ANR	9636745	Identifier	u1		9636544	0					
ANR	9636746	Identifier	a		9636544	1					
ANR	9636747	IfStatement	if ( times < 0 )		9636544	3					
ANR	9636748	Condition	times < 0	651:13:18466:18474	9636544	0	True				
ANR	9636749	RelationalExpression	times < 0		9636544	0		<			
ANR	9636750	Identifier	times		9636544	0					
ANR	9636751	PrimaryExpression	0		9636544	1					
ANR	9636752	ExpressionStatement	"u2 = - times , n = ! n"	651:24:18477:18496	9636544	1	True				
ANR	9636753	Expression	"u2 = - times , n = ! n"		9636544	0					
ANR	9636754	AssignmentExpression	u2 = - times		9636544	0		=			
ANR	9636755	Identifier	u2		9636544	0					
ANR	9636756	UnaryOperationExpression	- times		9636544	1					
ANR	9636757	UnaryOperator	-		9636544	0					
ANR	9636758	Identifier	times		9636544	1					
ANR	9636759	AssignmentExpression	n = ! n		9636544	1		=			
ANR	9636760	Identifier	n		9636544	0					
ANR	9636761	UnaryOperationExpression	! n		9636544	1					
ANR	9636762	UnaryOperator	!		9636544	0					
ANR	9636763	Identifier	n		9636544	1					
ANR	9636764	ElseStatement	else		9636544	0					
ANR	9636765	ExpressionStatement	u2 = times	651:50:18503:18513	9636544	0	True				
ANR	9636766	AssignmentExpression	u2 = times		9636544	0		=			
ANR	9636767	Identifier	u2		9636544	0					
ANR	9636768	Identifier	times		9636544	1					
ANR	9636769	ExpressionStatement	"png_64bit_product ( u1 , u2 , & hi , & lo )"	652:9:18524:18559	9636544	4	True				
ANR	9636770	CallExpression	"png_64bit_product ( u1 , u2 , & hi , & lo )"		9636544	0					
ANR	9636771	Callee	png_64bit_product		9636544	0					
ANR	9636772	Identifier	png_64bit_product		9636544	0					
ANR	9636773	ArgumentList	u1		9636544	1					
ANR	9636774	Argument	u1		9636544	0					
ANR	9636775	Identifier	u1		9636544	0					
ANR	9636776	Argument	u2		9636544	1					
ANR	9636777	Identifier	u2		9636544	0					
ANR	9636778	Argument	& hi		9636544	2					
ANR	9636779	UnaryOperationExpression	& hi		9636544	0					
ANR	9636780	UnaryOperator	&		9636544	0					
ANR	9636781	Identifier	hi		9636544	1					
ANR	9636782	Argument	& lo		9636544	3					
ANR	9636783	UnaryOperationExpression	& lo		9636544	0					
ANR	9636784	UnaryOperator	&		9636544	0					
ANR	9636785	Identifier	lo		9636544	1					
ANR	9636786	IfStatement	if ( n )		9636544	5					
ANR	9636787	Condition	n	653:13:18574:18574	9636544	0	True				
ANR	9636788	Identifier	n		9636544	0					
ANR	9636789	CompoundStatement		48:9:1311:1311	9636544	1					
ANR	9636790	ExpressionStatement	lo = ( ( ~lo ) + 1 ) & 0xffffffff	656:12:18628:18657	9636544	0	True				
ANR	9636791	AssignmentExpression	lo = ( ( ~lo ) + 1 ) & 0xffffffff		9636544	0		=			
ANR	9636792	Identifier	lo		9636544	0					
ANR	9636793	BitAndExpression	( ( ~lo ) + 1 ) & 0xffffffff		9636544	1		&			
ANR	9636794	CastExpression	( ~lo ) + 1		9636544	0					
ANR	9636795	CastTarget	~lo		9636544	0					
ANR	9636796	UnaryOperationExpression	+ 1		9636544	1					
ANR	9636797	UnaryOperator	+		9636544	0					
ANR	9636798	PrimaryExpression	1		9636544	1					
ANR	9636799	PrimaryExpression	0xffffffff		9636544	1					
ANR	9636800	ExpressionStatement	hi = ~hi	657:12:18671:18679	9636544	1	True				
ANR	9636801	AssignmentExpression	hi = ~hi		9636544	0		=			
ANR	9636802	Identifier	hi		9636544	0					
ANR	9636803	Identifier	~hi		9636544	1					
ANR	9636804	IfStatement	if ( lo == 0 )		9636544	2					
ANR	9636805	Condition	lo == 0	658:16:18697:18703	9636544	0	True				
ANR	9636806	EqualityExpression	lo == 0		9636544	0		==			
ANR	9636807	Identifier	lo		9636544	0					
ANR	9636808	PrimaryExpression	0		9636544	1					
ANR	9636809	ExpressionStatement	++ hi	658:25:18706:18710	9636544	1	True				
ANR	9636810	UnaryExpression	++ hi		9636544	0					
ANR	9636811	IncDec	++		9636544	0					
ANR	9636812	Identifier	hi		9636544	1					
ANR	9636813	ExpressionStatement	fp = a	662:6:18738:18744	9636544	5	True				
ANR	9636814	AssignmentExpression	fp = a		9636544	0		=			
ANR	9636815	Identifier	fp		9636544	0					
ANR	9636816	Identifier	a		9636544	1					
ANR	9636817	ExpressionStatement	fp *= times	663:6:18752:18763	9636544	6	True				
ANR	9636818	AssignmentExpression	fp *= times		9636544	0		*=			
ANR	9636819	Identifier	fp		9636544	0					
ANR	9636820	Identifier	times		9636544	1					
ANR	9636821	IfStatement	if ( ( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi )		9636544	7					
ANR	9636822	Condition	( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi	664:10:18775:18832	9636544	0	True				
ANR	9636823	OrExpression	( fp & 0xffffffff ) != lo || ( ( fp >> 32 ) & 0xffffffff ) != hi		9636544	0		||			
ANR	9636824	EqualityExpression	( fp & 0xffffffff ) != lo		9636544	0		!=			
ANR	9636825	BitAndExpression	fp & 0xffffffff		9636544	0		&			
ANR	9636826	Identifier	fp		9636544	0					
ANR	9636827	PrimaryExpression	0xffffffff		9636544	1					
ANR	9636828	Identifier	lo		9636544	1					
ANR	9636829	EqualityExpression	( ( fp >> 32 ) & 0xffffffff ) != hi		9636544	1		!=			
ANR	9636830	BitAndExpression	( fp >> 32 ) & 0xffffffff		9636544	0		&			
ANR	9636831	ShiftExpression	fp >> 32		9636544	0		>>			
ANR	9636832	Identifier	fp		9636544	0					
ANR	9636833	PrimaryExpression	32		9636544	1					
ANR	9636834	PrimaryExpression	0xffffffff		9636544	1					
ANR	9636835	Identifier	hi		9636544	1					
ANR	9636836	CompoundStatement		59:6:1566:1566	9636544	1					
ANR	9636837	ExpressionStatement	"fprintf ( stderr , ""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"" , a , times , hi , lo , fp )"	666:9:18852:18954	9636544	0	True				
ANR	9636838	CallExpression	"fprintf ( stderr , ""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"" , a , times , hi , lo , fp )"		9636544	0					
ANR	9636839	Callee	fprintf		9636544	0					
ANR	9636840	Identifier	fprintf		9636544	0					
ANR	9636841	ArgumentList	stderr		9636544	1					
ANR	9636842	Argument	stderr		9636544	0					
ANR	9636843	Identifier	stderr		9636544	0					
ANR	9636844	Argument	"""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"""		9636544	1					
ANR	9636845	PrimaryExpression	"""png_64bit_product %d * %d -> %lx|%.8lx not %llx\\n"""		9636544	0					
ANR	9636846	Argument	a		9636544	2					
ANR	9636847	Identifier	a		9636544	0					
ANR	9636848	Argument	times		9636544	3					
ANR	9636849	Identifier	times		9636544	0					
ANR	9636850	Argument	hi		9636544	4					
ANR	9636851	Identifier	hi		9636544	0					
ANR	9636852	Argument	lo		9636544	5					
ANR	9636853	Identifier	lo		9636544	0					
ANR	9636854	Argument	fp		9636544	6					
ANR	9636855	Identifier	fp		9636544	0					
ANR	9636856	ExpressionStatement	++ error64	668:9:18965:18974	9636544	1	True				
ANR	9636857	UnaryExpression	++ error64		9636544	0					
ANR	9636858	IncDec	++		9636544	0					
ANR	9636859	Identifier	error64		9636544	1					
ANR	9636860	IfStatement	if ( div != 0 )		9636544	8					
ANR	9636861	Condition	div != 0	671:10:18995:19002	9636544	0	True				
ANR	9636862	EqualityExpression	div != 0		9636544	0		!=			
ANR	9636863	Identifier	div		9636544	0					
ANR	9636864	PrimaryExpression	0		9636544	1					
ANR	9636865	CompoundStatement		66:6:1736:1736	9636544	1					
ANR	9636866	IfStatement	if ( ( fp < 0 ) != ( div < 0 ) )		9636544	0					
ANR	9636867	Condition	( fp < 0 ) != ( div < 0 )	674:13:19074:19094	9636544	0	True				
ANR	9636868	EqualityExpression	( fp < 0 ) != ( div < 0 )		9636544	0		!=			
ANR	9636869	RelationalExpression	fp < 0		9636544	0		<			
ANR	9636870	Identifier	fp		9636544	0					
ANR	9636871	PrimaryExpression	0		9636544	1					
ANR	9636872	RelationalExpression	div < 0		9636544	1		<			
ANR	9636873	Identifier	div		9636544	0					
ANR	9636874	PrimaryExpression	0		9636544	1					
ANR	9636875	ExpressionStatement	fp -= div / 2	675:11:19108:19119	9636544	1	True				
ANR	9636876	AssignmentExpression	fp -= div / 2		9636544	0		-=			
ANR	9636877	Identifier	fp		9636544	0					
ANR	9636878	MultiplicativeExpression	div / 2		9636544	1		/			
ANR	9636879	Identifier	div		9636544	0					
ANR	9636880	PrimaryExpression	2		9636544	1					
ANR	9636881	ElseStatement	else		9636544	0					
ANR	9636882	ExpressionStatement	fp += div / 2	677:11:19146:19157	9636544	0	True				
ANR	9636883	AssignmentExpression	fp += div / 2		9636544	0		+=			
ANR	9636884	Identifier	fp		9636544	0					
ANR	9636885	MultiplicativeExpression	div / 2		9636544	1		/			
ANR	9636886	Identifier	div		9636544	0					
ANR	9636887	PrimaryExpression	2		9636544	1					
ANR	9636888	ExpressionStatement	fp /= div	679:9:19169:19178	9636544	1	True				
ANR	9636889	AssignmentExpression	fp /= div		9636544	0		/=			
ANR	9636890	Identifier	fp		9636544	0					
ANR	9636891	Identifier	div		9636544	1					
ANR	9636892	ExpressionStatement	fpround = fp	680:9:19189:19201	9636544	2	True				
ANR	9636893	AssignmentExpression	fpround = fp		9636544	0		=			
ANR	9636894	Identifier	fpround		9636544	0					
ANR	9636895	Identifier	fp		9636544	1					
ANR	9636896	ExpressionStatement	ok = fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX	682:9:19255:19348	9636544	3	True				
ANR	9636897	AssignmentExpression	ok = fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		9636544	0		=			
ANR	9636898	Identifier	ok		9636544	0					
ANR	9636899	AndExpression	fpround <= PNG_UINT_31_MAX && fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		9636544	1		&&			
ANR	9636900	RelationalExpression	fpround <= PNG_UINT_31_MAX		9636544	0		<=			
ANR	9636901	Identifier	fpround		9636544	0					
ANR	9636902	Identifier	PNG_UINT_31_MAX		9636544	1					
ANR	9636903	RelationalExpression	fpround >= - 1 - ( long long int ) PNG_UINT_31_MAX		9636544	1		>=			
ANR	9636904	Identifier	fpround		9636544	0					
ANR	9636905	AdditiveExpression	- 1 - ( long long int ) PNG_UINT_31_MAX		9636544	1		-			
ANR	9636906	UnaryOperationExpression	- 1		9636544	0					
ANR	9636907	UnaryOperator	-		9636544	0					
ANR	9636908	PrimaryExpression	1		9636544	1					
ANR	9636909	CastExpression	( long long int ) PNG_UINT_31_MAX		9636544	1					
ANR	9636910	CastTarget	long long int		9636544	0					
ANR	9636911	Identifier	PNG_UINT_31_MAX		9636544	1					
ANR	9636912	IfStatement	if ( ! ok )		9636544	4					
ANR	9636913	Condition	! ok	684:13:19363:19365	9636544	0	True				
ANR	9636914	UnaryOperationExpression	! ok		9636544	0					
ANR	9636915	UnaryOperator	!		9636544	0					
ANR	9636916	Identifier	ok		9636544	1					
ANR	9636917	ExpressionStatement	++ overflow	684:18:19368:19378	9636544	1	True				
ANR	9636918	UnaryExpression	++ overflow		9636544	0					
ANR	9636919	IncDec	++		9636544	0					
ANR	9636920	Identifier	overflow		9636544	1					
ANR	9636921	ElseStatement	else		9636544	0					
ANR	9636922	ExpressionStatement	"ok = 0 , ++ overflow , fpround = fp"	687:8:19407:19453	9636544	0	True				
ANR	9636923	Expression	"ok = 0 , ++ overflow , fpround = fp"		9636544	0					
ANR	9636924	AssignmentExpression	ok = 0		9636544	0		=			
ANR	9636925	Identifier	ok		9636544	0					
ANR	9636926	PrimaryExpression	0		9636544	1					
ANR	9636927	Expression	"++ overflow , fpround = fp"		9636544	1					
ANR	9636928	UnaryExpression	++ overflow		9636544	0					
ANR	9636929	IncDec	++		9636544	0					
ANR	9636930	Identifier	overflow		9636544	1					
ANR	9636931	AssignmentExpression	fpround = fp		9636544	1		=			
ANR	9636932	Identifier	fpround		9636544	0					
ANR	9636933	Identifier	fp		9636544	1					
ANR	9636934	IfStatement	if ( verbose )		9636544	9					
ANR	9636935	Condition	verbose	689:10:19466:19472	9636544	0	True				
ANR	9636936	Identifier	verbose		9636544	0					
ANR	9636937	ExpressionStatement	"fprintf ( stderr , ""TEST %d * %d / %d -> %lld (%s)\\n"" , a , times , div , fp , ok ? ""ok"" : ""overflow"" )"	690:9:19484:19590	9636544	1	True				
ANR	9636938	CallExpression	"fprintf ( stderr , ""TEST %d * %d / %d -> %lld (%s)\\n"" , a , times , div , fp , ok ? ""ok"" : ""overflow"" )"		9636544	0					
ANR	9636939	Callee	fprintf		9636544	0					
ANR	9636940	Identifier	fprintf		9636544	0					
ANR	9636941	ArgumentList	stderr		9636544	1					
ANR	9636942	Argument	stderr		9636544	0					
ANR	9636943	Identifier	stderr		9636544	0					
ANR	9636944	Argument	"""TEST %d * %d / %d -> %lld (%s)\\n"""		9636544	1					
ANR	9636945	PrimaryExpression	"""TEST %d * %d / %d -> %lld (%s)\\n"""		9636544	0					
ANR	9636946	Argument	a		9636544	2					
ANR	9636947	Identifier	a		9636544	0					
ANR	9636948	Argument	times		9636544	3					
ANR	9636949	Identifier	times		9636544	0					
ANR	9636950	Argument	div		9636544	4					
ANR	9636951	Identifier	div		9636544	0					
ANR	9636952	Argument	fp		9636544	5					
ANR	9636953	Identifier	fp		9636544	0					
ANR	9636954	Argument	"ok ? ""ok"" : ""overflow"""		9636544	6					
ANR	9636955	ConditionalExpression	"ok ? ""ok"" : ""overflow"""		9636544	0					
ANR	9636956	Condition	ok		9636544	0					
ANR	9636957	Identifier	ok		9636544	0					
ANR	9636958	PrimaryExpression	"""ok"""		9636544	1					
ANR	9636959	PrimaryExpression	"""overflow"""		9636544	2					
ANR	9636960	ExpressionStatement	++ tested	693:6:19599:19607	9636544	10	True				
ANR	9636961	UnaryExpression	++ tested		9636544	0					
ANR	9636962	IncDec	++		9636544	0					
ANR	9636963	Identifier	tested		9636544	1					
ANR	9636964	IfStatement	"if ( png_muldiv ( & result , a , times , div ) != ok )"		9636544	11					
ANR	9636965	Condition	"png_muldiv ( & result , a , times , div ) != ok"	694:10:19619:19658	9636544	0	True				
ANR	9636966	EqualityExpression	"png_muldiv ( & result , a , times , div ) != ok"		9636544	0		!=			
ANR	9636967	CallExpression	"png_muldiv ( & result , a , times , div )"		9636544	0					
ANR	9636968	Callee	png_muldiv		9636544	0					
ANR	9636969	Identifier	png_muldiv		9636544	0					
ANR	9636970	ArgumentList	& result		9636544	1					
ANR	9636971	Argument	& result		9636544	0					
ANR	9636972	UnaryOperationExpression	& result		9636544	0					
ANR	9636973	UnaryOperator	&		9636544	0					
ANR	9636974	Identifier	result		9636544	1					
ANR	9636975	Argument	a		9636544	1					
ANR	9636976	Identifier	a		9636544	0					
ANR	9636977	Argument	times		9636544	2					
ANR	9636978	Identifier	times		9636544	0					
ANR	9636979	Argument	div		9636544	3					
ANR	9636980	Identifier	div		9636544	0					
ANR	9636981	Identifier	ok		9636544	1					
ANR	9636982	CompoundStatement		89:6:2392:2392	9636544	1					
ANR	9636983	ExpressionStatement	++ error	696:9:19678:19685	9636544	0	True				
ANR	9636984	UnaryExpression	++ error		9636544	0					
ANR	9636985	IncDec	++		9636544	0					
ANR	9636986	Identifier	error		9636544	1					
ANR	9636987	IfStatement	if ( ok )		9636544	1					
ANR	9636988	Condition	ok	697:13:19700:19701	9636544	0	True				
ANR	9636989	Identifier	ok		9636544	0					
ANR	9636990	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> overflow (expected %lld)\\n"" , a , times , div , fp )"	698:13:19717:19813	9636544	1	True				
ANR	9636991	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> overflow (expected %lld)\\n"" , a , times , div , fp )"		9636544	0					
ANR	9636992	Callee	fprintf		9636544	0					
ANR	9636993	Identifier	fprintf		9636544	0					
ANR	9636994	ArgumentList	stderr		9636544	1					
ANR	9636995	Argument	stderr		9636544	0					
ANR	9636996	Identifier	stderr		9636544	0					
ANR	9636997	Argument	"""%d * %d / %d -> overflow (expected %lld)\\n"""		9636544	1					
ANR	9636998	PrimaryExpression	"""%d * %d / %d -> overflow (expected %lld)\\n"""		9636544	0					
ANR	9636999	Argument	a		9636544	2					
ANR	9637000	Identifier	a		9636544	0					
ANR	9637001	Argument	times		9636544	3					
ANR	9637002	Identifier	times		9636544	0					
ANR	9637003	Argument	div		9636544	4					
ANR	9637004	Identifier	div		9636544	0					
ANR	9637005	Argument	fp		9636544	5					
ANR	9637006	Identifier	fp		9636544	0					
ANR	9637007	ElseStatement	else		9636544	0					
ANR	9637008	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> %d (expected overflow %lld)\\n"" , a , times , div , result , fp )"	701:13:19842:19949	9636544	0	True				
ANR	9637009	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> %d (expected overflow %lld)\\n"" , a , times , div , result , fp )"		9636544	0					
ANR	9637010	Callee	fprintf		9636544	0					
ANR	9637011	Identifier	fprintf		9636544	0					
ANR	9637012	ArgumentList	stderr		9636544	1					
ANR	9637013	Argument	stderr		9636544	0					
ANR	9637014	Identifier	stderr		9636544	0					
ANR	9637015	Argument	"""%d * %d / %d -> %d (expected overflow %lld)\\n"""		9636544	1					
ANR	9637016	PrimaryExpression	"""%d * %d / %d -> %d (expected overflow %lld)\\n"""		9636544	0					
ANR	9637017	Argument	a		9636544	2					
ANR	9637018	Identifier	a		9636544	0					
ANR	9637019	Argument	times		9636544	3					
ANR	9637020	Identifier	times		9636544	0					
ANR	9637021	Argument	div		9636544	4					
ANR	9637022	Identifier	div		9636544	0					
ANR	9637023	Argument	result		9636544	5					
ANR	9637024	Identifier	result		9636544	0					
ANR	9637025	Argument	fp		9636544	6					
ANR	9637026	Identifier	fp		9636544	0					
ANR	9637027	ElseStatement	else		9636544	0					
ANR	9637028	IfStatement	if ( ok && result != fpround )		9636544	0					
ANR	9637029	Condition	ok && result != fpround	704:15:19974:19996	9636544	0	True				
ANR	9637030	AndExpression	ok && result != fpround		9636544	0		&&			
ANR	9637031	Identifier	ok		9636544	0					
ANR	9637032	EqualityExpression	result != fpround		9636544	1		!=			
ANR	9637033	Identifier	result		9636544	0					
ANR	9637034	Identifier	fpround		9636544	1					
ANR	9637035	CompoundStatement		99:6:2730:2730	9636544	1					
ANR	9637036	ExpressionStatement	++ error	706:9:20016:20023	9636544	0	True				
ANR	9637037	UnaryExpression	++ error		9636544	0					
ANR	9637038	IncDec	++		9636544	0					
ANR	9637039	Identifier	error		9636544	1					
ANR	9637040	ExpressionStatement	"fprintf ( stderr , ""%d * %d / %d -> %d not %lld\\n"" , a , times , div , result , fp )"	707:9:20034:20121	9636544	1	True				
ANR	9637041	CallExpression	"fprintf ( stderr , ""%d * %d / %d -> %d not %lld\\n"" , a , times , div , result , fp )"		9636544	0					
ANR	9637042	Callee	fprintf		9636544	0					
ANR	9637043	Identifier	fprintf		9636544	0					
ANR	9637044	ArgumentList	stderr		9636544	1					
ANR	9637045	Argument	stderr		9636544	0					
ANR	9637046	Identifier	stderr		9636544	0					
ANR	9637047	Argument	"""%d * %d / %d -> %d not %lld\\n"""		9636544	1					
ANR	9637048	PrimaryExpression	"""%d * %d / %d -> %d not %lld\\n"""		9636544	0					
ANR	9637049	Argument	a		9636544	2					
ANR	9637050	Identifier	a		9636544	0					
ANR	9637051	Argument	times		9636544	3					
ANR	9637052	Identifier	times		9636544	0					
ANR	9637053	Argument	div		9636544	4					
ANR	9637054	Identifier	div		9636544	0					
ANR	9637055	Argument	result		9636544	5					
ANR	9637056	Identifier	result		9636544	0					
ANR	9637057	Argument	fp		9636544	6					
ANR	9637058	Identifier	fp		9636544	0					
ANR	9637059	ElseStatement	else		9636544	0					
ANR	9637060	ExpressionStatement	++ passed	711:9:20151:20159	9636544	0	True				
ANR	9637061	UnaryExpression	++ passed		9636544	0					
ANR	9637062	IncDec	++		9636544	0					
ANR	9637063	Identifier	passed		9636544	1					
ANR	9637064	ExpressionStatement	a += times	717:6:20298:20308	9636544	12	True				
ANR	9637065	AssignmentExpression	a += times		9636544	0		+=			
ANR	9637066	Identifier	a		9636544	0					
ANR	9637067	Identifier	times		9636544	1					
ANR	9637068	ExpressionStatement	times += div	718:6:20316:20328	9636544	13	True				
ANR	9637069	AssignmentExpression	times += div		9636544	0		+=			
ANR	9637070	Identifier	times		9636544	0					
ANR	9637071	Identifier	div		9636544	1					
ANR	9637072	ExpressionStatement	div = randbuffer	719:6:20336:20352	9636544	14	True				
ANR	9637073	AssignmentExpression	div = randbuffer		9636544	0		=			
ANR	9637074	Identifier	div		9636544	0					
ANR	9637075	Identifier	randbuffer		9636544	1					
ANR	9637076	ExpressionStatement	randbuffer = ( randbuffer << randbits ) ^ rand ( )	720:6:20360:20406	9636544	15	True				
ANR	9637077	AssignmentExpression	randbuffer = ( randbuffer << randbits ) ^ rand ( )		9636544	0		=			
ANR	9637078	Identifier	randbuffer		9636544	0					
ANR	9637079	ExclusiveOrExpression	( randbuffer << randbits ) ^ rand ( )		9636544	1		^			
ANR	9637080	ShiftExpression	randbuffer << randbits		9636544	0		<<			
ANR	9637081	Identifier	randbuffer		9636544	0					
ANR	9637082	Identifier	randbits		9636544	1					
ANR	9637083	CallExpression	rand ( )		9636544	1					
ANR	9637084	Callee	rand		9636544	0					
ANR	9637085	Identifier	rand		9636544	0					
ANR	9637086	ArgumentList			9636544	1					
ANR	9637087	Condition	-- count > 0	722:10:20423:20433	9636544	1	True				
ANR	9637088	RelationalExpression	-- count > 0		9636544	0		>			
ANR	9637089	UnaryExpression	-- count		9636544	0					
ANR	9637090	IncDec	--		9636544	0					
ANR	9637091	Identifier	count		9636544	1					
ANR	9637092	PrimaryExpression	0		9636544	1					
ANR	9637093	Statement	printf	724:3:20441:20446	9636544	17	True				
ANR	9637094	Statement	(	724:9:20447:20447	9636544	18	True				
ANR	9637095	Statement	"""%d tests including %d overflows, %d passed, %d failed (%d 64-bit """	724:10:20448:20514	9636544	19	True				
ANR	9637096	Statement	"""errors)\\n"""	725:6:20522:20532	9636544	20	True				
ANR	9637097	Statement	","	725:17:20533:20533	9636544	21	True				
ANR	9637098	Statement	tested	725:19:20535:20540	9636544	22	True				
ANR	9637099	Statement	","	725:25:20541:20541	9636544	23	True				
ANR	9637100	Statement	overflow	725:27:20543:20550	9636544	24	True				
ANR	9637101	Statement	","	725:35:20551:20551	9636544	25	True				
ANR	9637102	Statement	passed	725:37:20553:20558	9636544	26	True				
ANR	9637103	Statement	","	725:43:20559:20559	9636544	27	True				
ANR	9637104	Statement	error	725:45:20561:20565	9636544	28	True				
ANR	9637105	Statement	","	725:50:20566:20566	9636544	29	True				
ANR	9637106	Statement	error64	725:52:20568:20574	9636544	30	True				
ANR	9637107	Statement	)	725:59:20575:20575	9636544	31	True				
ANR	9637108	ExpressionStatement		725:60:20576:20576	9636544	32	True				
ANR	9637109	ReturnStatement	return 0 ;	726:3:20581:20589	9636544	33	True				
ANR	9637110	PrimaryExpression	0		9636544	0					
ANR	9637111	ReturnType	int		9636544	1					
ANR	9637112	Identifier	validation_muldiv		9636544	2					
ANR	9637113	ParameterList	"int count , int argc , char * * argv"		9636544	3					
ANR	9637114	Parameter	int count	606:22:17240:17248	9636544	0	True				
ANR	9637115	ParameterType	int		9636544	0					
ANR	9637116	Identifier	count		9636544	1					
ANR	9637117	Parameter	int argc	606:33:17251:17258	9636544	1	True				
ANR	9637118	ParameterType	int		9636544	0					
ANR	9637119	Identifier	argc		9636544	1					
ANR	9637120	Parameter	char * * argv	606:43:17261:17271	9636544	2	True				
ANR	9637121	ParameterType	char * *		9636544	0					
ANR	9637122	Identifier	argv		9636544	1					
ANR	9637123	CFGEntryNode	ENTRY		9636544		True				
ANR	9637124	CFGExitNode	EXIT		9636544		True				
ANR	9637125	Symbol	hi		9636544						
ANR	9637126	Symbol	lo		9636544						
ANR	9637127	Symbol	tested		9636544						
ANR	9637128	Symbol	* argv		9636544						
ANR	9637129	Symbol	fp		9636544						
ANR	9637130	Symbol	randbuffer		9636544						
ANR	9637131	Symbol	error		9636544						
ANR	9637132	Symbol	argv		9636544						
ANR	9637133	Symbol	randbits		9636544						
ANR	9637134	Symbol	div		9636544						
ANR	9637135	Symbol	rand		9636544						
ANR	9637136	Symbol	result		9636544						
ANR	9637137	Symbol	fpround		9636544						
ANR	9637138	Symbol	times		9636544						
ANR	9637139	Symbol	overflow		9636544						
ANR	9637140	Symbol	png_muldiv		9636544						
ANR	9637141	Symbol	& result		9636544						
ANR	9637142	Symbol	passed		9636544						
ANR	9637143	Symbol	ok		9636544						
ANR	9637144	Symbol	u1		9636544						
ANR	9637145	Symbol	u2		9636544						
ANR	9637146	Symbol	error64		9636544						
ANR	9637147	Symbol	argc		9636544						
ANR	9637148	Symbol	a		9636544						
ANR	9637149	Symbol	count		9636544						
ANR	9637150	Symbol	PNG_UINT_31_MAX		9636544						
ANR	9637151	Symbol	& hi		9636544						
ANR	9637152	Symbol	stderr		9636544						
ANR	9637153	Symbol	& lo		9636544						
ANR	9637154	Symbol	n		9636544						
ANR	9637155	Symbol	verbose		9636544						
ANR	9637156	Symbol	RAND_MAX		9636544						
ANR	9637157	Symbol	* ++ argv		9636544						
ANR	9637158	Symbol	~hi		9636544						
ANR	9637159	Function	png_log8bit	737:0:20920:21057							
ANR	9637160	FunctionDef	png_log8bit (unsigned x)		9637159	0					
ANR	9637161	CompoundStatement		738:0:20963:21057	9637159	0					
ANR	9637162	IfStatement	if ( x > 0 )		9637159	0					
ANR	9637163	Condition	x > 0	739:7:20972:20976	9637159	0	True				
ANR	9637164	RelationalExpression	x > 0		9637159	0		>			
ANR	9637165	Identifier	x		9637159	0					
ANR	9637166	PrimaryExpression	0		9637159	1					
ANR	9637167	ReturnStatement	return ( png_uint_32 ) floor ( .5 - log ( x / 255. ) * L2INV ) ;	740:6:20985:21032	9637159	1	True				
ANR	9637168	CastExpression	( png_uint_32 ) floor ( .5 - log ( x / 255. ) * L2INV )		9637159	0					
ANR	9637169	CastTarget	png_uint_32		9637159	0					
ANR	9637170	CallExpression	floor ( .5 - log ( x / 255. ) * L2INV )		9637159	1					
ANR	9637171	Callee	floor		9637159	0					
ANR	9637172	Identifier	floor		9637159	0					
ANR	9637173	ArgumentList	.5 - log ( x / 255. ) * L2INV		9637159	1					
ANR	9637174	Argument	.5 - log ( x / 255. ) * L2INV		9637159	0					
ANR	9637175	AdditiveExpression	.5 - log ( x / 255. ) * L2INV		9637159	0		-			
ANR	9637176	PrimaryExpression	.5		9637159	0					
ANR	9637177	MultiplicativeExpression	log ( x / 255. ) * L2INV		9637159	1		*			
ANR	9637178	CallExpression	log ( x / 255. )		9637159	0					
ANR	9637179	Callee	log		9637159	0					
ANR	9637180	Identifier	log		9637159	0					
ANR	9637181	ArgumentList	x / 255.		9637159	1					
ANR	9637182	Argument	x / 255.		9637159	0					
ANR	9637183	MultiplicativeExpression	x / 255.		9637159	0		/			
ANR	9637184	Identifier	x		9637159	0					
ANR	9637185	PrimaryExpression	255.		9637159	1					
ANR	9637186	Identifier	L2INV		9637159	1					
ANR	9637187	ReturnStatement	return 0xffffffff ;	742:3:21038:21055	9637159	1	True				
ANR	9637188	PrimaryExpression	0xffffffff		9637159	0					
ANR	9637189	ReturnType	static png_uint_32		9637159	1					
ANR	9637190	Identifier	png_log8bit		9637159	2					
ANR	9637191	ParameterList	unsigned x		9637159	3					
ANR	9637192	Parameter	unsigned x	737:31:20951:20960	9637159	0	True				
ANR	9637193	ParameterType	unsigned		9637159	0					
ANR	9637194	Identifier	x		9637159	1					
ANR	9637195	CFGEntryNode	ENTRY		9637159		True				
ANR	9637196	CFGExitNode	EXIT		9637159		True				
ANR	9637197	Symbol	log		9637159						
ANR	9637198	Symbol	x		9637159						
ANR	9637199	Symbol	floor		9637159						
ANR	9637200	Symbol	L2INV		9637159						
ANR	9637201	Function	png_log16bit	745:0:21060:21203							
ANR	9637202	FunctionDef	png_log16bit (png_uint_32 x)		9637201	0					
ANR	9637203	CompoundStatement		746:0:21107:21203	9637201	0					
ANR	9637204	IfStatement	if ( x > 0 )		9637201	0					
ANR	9637205	Condition	x > 0	747:7:21116:21120	9637201	0	True				
ANR	9637206	RelationalExpression	x > 0		9637201	0		>			
ANR	9637207	Identifier	x		9637201	0					
ANR	9637208	PrimaryExpression	0		9637201	1					
ANR	9637209	ReturnStatement	return ( png_uint_32 ) floor ( .5 - log ( x / 65535. ) * L2INV ) ;	748:6:21129:21178	9637201	1	True				
ANR	9637210	CastExpression	( png_uint_32 ) floor ( .5 - log ( x / 65535. ) * L2INV )		9637201	0					
ANR	9637211	CastTarget	png_uint_32		9637201	0					
ANR	9637212	CallExpression	floor ( .5 - log ( x / 65535. ) * L2INV )		9637201	1					
ANR	9637213	Callee	floor		9637201	0					
ANR	9637214	Identifier	floor		9637201	0					
ANR	9637215	ArgumentList	.5 - log ( x / 65535. ) * L2INV		9637201	1					
ANR	9637216	Argument	.5 - log ( x / 65535. ) * L2INV		9637201	0					
ANR	9637217	AdditiveExpression	.5 - log ( x / 65535. ) * L2INV		9637201	0		-			
ANR	9637218	PrimaryExpression	.5		9637201	0					
ANR	9637219	MultiplicativeExpression	log ( x / 65535. ) * L2INV		9637201	1		*			
ANR	9637220	CallExpression	log ( x / 65535. )		9637201	0					
ANR	9637221	Callee	log		9637201	0					
ANR	9637222	Identifier	log		9637201	0					
ANR	9637223	ArgumentList	x / 65535.		9637201	1					
ANR	9637224	Argument	x / 65535.		9637201	0					
ANR	9637225	MultiplicativeExpression	x / 65535.		9637201	0		/			
ANR	9637226	Identifier	x		9637201	0					
ANR	9637227	PrimaryExpression	65535.		9637201	1					
ANR	9637228	Identifier	L2INV		9637201	1					
ANR	9637229	ReturnStatement	return 0xffffffff ;	750:3:21184:21201	9637201	1	True				
ANR	9637230	PrimaryExpression	0xffffffff		9637201	0					
ANR	9637231	ReturnType	static png_uint_32		9637201	1					
ANR	9637232	Identifier	png_log16bit		9637201	2					
ANR	9637233	ParameterList	png_uint_32 x		9637201	3					
ANR	9637234	Parameter	png_uint_32 x	745:32:21092:21104	9637201	0	True				
ANR	9637235	ParameterType	png_uint_32		9637201	0					
ANR	9637236	Identifier	x		9637201	1					
ANR	9637237	CFGEntryNode	ENTRY		9637201		True				
ANR	9637238	CFGExitNode	EXIT		9637201		True				
ANR	9637239	Symbol	log		9637201						
ANR	9637240	Symbol	x		9637201						
ANR	9637241	Symbol	floor		9637201						
ANR	9637242	Symbol	L2INV		9637201						
ANR	9637243	Function	png_exp	753:0:21206:21314							
ANR	9637244	FunctionDef	png_exp (png_uint_32 x)		9637243	0					
ANR	9637245	CompoundStatement		754:0:21248:21314	9637243	0					
ANR	9637246	ReturnStatement	return ( png_uint_32 ) floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU ) ;	755:3:21253:21312	9637243	0	True				
ANR	9637247	CastExpression	( png_uint_32 ) floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU )		9637243	0					
ANR	9637248	CastTarget	png_uint_32		9637243	0					
ANR	9637249	CallExpression	floor ( .5 + exp ( x * - LN2 ) * 0xffffffffU )		9637243	1					
ANR	9637250	Callee	floor		9637243	0					
ANR	9637251	Identifier	floor		9637243	0					
ANR	9637252	ArgumentList	.5 + exp ( x * - LN2 ) * 0xffffffffU		9637243	1					
ANR	9637253	Argument	.5 + exp ( x * - LN2 ) * 0xffffffffU		9637243	0					
ANR	9637254	AdditiveExpression	.5 + exp ( x * - LN2 ) * 0xffffffffU		9637243	0		+			
ANR	9637255	PrimaryExpression	.5		9637243	0					
ANR	9637256	MultiplicativeExpression	exp ( x * - LN2 ) * 0xffffffffU		9637243	1		*			
ANR	9637257	CallExpression	exp ( x * - LN2 )		9637243	0					
ANR	9637258	Callee	exp		9637243	0					
ANR	9637259	Identifier	exp		9637243	0					
ANR	9637260	ArgumentList	x * - LN2		9637243	1					
ANR	9637261	Argument	x * - LN2		9637243	0					
ANR	9637262	MultiplicativeExpression	x * - LN2		9637243	0		*			
ANR	9637263	Identifier	x		9637243	0					
ANR	9637264	UnaryOperationExpression	- LN2		9637243	1					
ANR	9637265	UnaryOperator	-		9637243	0					
ANR	9637266	Identifier	LN2		9637243	1					
ANR	9637267	PrimaryExpression	0xffffffffU		9637243	1					
ANR	9637268	ReturnType	static png_uint_32		9637243	1					
ANR	9637269	Identifier	png_exp		9637243	2					
ANR	9637270	ParameterList	png_uint_32 x		9637243	3					
ANR	9637271	Parameter	png_uint_32 x	753:27:21233:21245	9637243	0	True				
ANR	9637272	ParameterType	png_uint_32		9637243	0					
ANR	9637273	Identifier	x		9637243	1					
ANR	9637274	CFGEntryNode	ENTRY		9637243		True				
ANR	9637275	CFGExitNode	EXIT		9637243		True				
ANR	9637276	Symbol	LN2		9637243						
ANR	9637277	Symbol	x		9637243						
ANR	9637278	Symbol	floor		9637243						
ANR	9637279	Symbol	exp		9637243						
ANR	9637280	Function	png_exp8bit	758:0:21317:21419							
ANR	9637281	FunctionDef	png_exp8bit (png_uint_32 log)		9637280	0					
ANR	9637282	CompoundStatement		759:0:21362:21419	9637280	0					
ANR	9637283	ReturnStatement	return ( png_byte ) floor ( .5 + exp ( log * - LN2 ) * 255 ) ;	760:3:21367:21417	9637280	0	True				
ANR	9637284	CastExpression	( png_byte ) floor ( .5 + exp ( log * - LN2 ) * 255 )		9637280	0					
ANR	9637285	CastTarget	png_byte		9637280	0					
ANR	9637286	CallExpression	floor ( .5 + exp ( log * - LN2 ) * 255 )		9637280	1					
ANR	9637287	Callee	floor		9637280	0					
ANR	9637288	Identifier	floor		9637280	0					
ANR	9637289	ArgumentList	.5 + exp ( log * - LN2 ) * 255		9637280	1					
ANR	9637290	Argument	.5 + exp ( log * - LN2 ) * 255		9637280	0					
ANR	9637291	AdditiveExpression	.5 + exp ( log * - LN2 ) * 255		9637280	0		+			
ANR	9637292	PrimaryExpression	.5		9637280	0					
ANR	9637293	MultiplicativeExpression	exp ( log * - LN2 ) * 255		9637280	1		*			
ANR	9637294	CallExpression	exp ( log * - LN2 )		9637280	0					
ANR	9637295	Callee	exp		9637280	0					
ANR	9637296	Identifier	exp		9637280	0					
ANR	9637297	ArgumentList	log * - LN2		9637280	1					
ANR	9637298	Argument	log * - LN2		9637280	0					
ANR	9637299	MultiplicativeExpression	log * - LN2		9637280	0		*			
ANR	9637300	Identifier	log		9637280	0					
ANR	9637301	UnaryOperationExpression	- LN2		9637280	1					
ANR	9637302	UnaryOperator	-		9637280	0					
ANR	9637303	Identifier	LN2		9637280	1					
ANR	9637304	PrimaryExpression	255		9637280	1					
ANR	9637305	ReturnType	static png_byte		9637280	1					
ANR	9637306	Identifier	png_exp8bit		9637280	2					
ANR	9637307	ParameterList	png_uint_32 log		9637280	3					
ANR	9637308	Parameter	png_uint_32 log	758:28:21345:21359	9637280	0	True				
ANR	9637309	ParameterType	png_uint_32		9637280	0					
ANR	9637310	Identifier	log		9637280	1					
ANR	9637311	CFGEntryNode	ENTRY		9637280		True				
ANR	9637312	CFGExitNode	EXIT		9637280		True				
ANR	9637313	Symbol	LN2		9637280						
ANR	9637314	Symbol	log		9637280						
ANR	9637315	Symbol	exp		9637280						
ANR	9637316	Symbol	floor		9637280						
ANR	9637317	Function	png_exp16bit	763:0:21422:21533							
ANR	9637318	FunctionDef	png_exp16bit (png_uint_32 log)		9637317	0					
ANR	9637319	CompoundStatement		764:0:21471:21533	9637317	0					
ANR	9637320	ReturnStatement	return ( png_uint_16 ) floor ( .5 + exp ( log * - LN2 ) * 65535 ) ;	765:3:21476:21531	9637317	0	True				
ANR	9637321	CastExpression	( png_uint_16 ) floor ( .5 + exp ( log * - LN2 ) * 65535 )		9637317	0					
ANR	9637322	CastTarget	png_uint_16		9637317	0					
ANR	9637323	CallExpression	floor ( .5 + exp ( log * - LN2 ) * 65535 )		9637317	1					
ANR	9637324	Callee	floor		9637317	0					
ANR	9637325	Identifier	floor		9637317	0					
ANR	9637326	ArgumentList	.5 + exp ( log * - LN2 ) * 65535		9637317	1					
ANR	9637327	Argument	.5 + exp ( log * - LN2 ) * 65535		9637317	0					
ANR	9637328	AdditiveExpression	.5 + exp ( log * - LN2 ) * 65535		9637317	0		+			
ANR	9637329	PrimaryExpression	.5		9637317	0					
ANR	9637330	MultiplicativeExpression	exp ( log * - LN2 ) * 65535		9637317	1		*			
ANR	9637331	CallExpression	exp ( log * - LN2 )		9637317	0					
ANR	9637332	Callee	exp		9637317	0					
ANR	9637333	Identifier	exp		9637317	0					
ANR	9637334	ArgumentList	log * - LN2		9637317	1					
ANR	9637335	Argument	log * - LN2		9637317	0					
ANR	9637336	MultiplicativeExpression	log * - LN2		9637317	0		*			
ANR	9637337	Identifier	log		9637317	0					
ANR	9637338	UnaryOperationExpression	- LN2		9637317	1					
ANR	9637339	UnaryOperator	-		9637317	0					
ANR	9637340	Identifier	LN2		9637317	1					
ANR	9637341	PrimaryExpression	65535		9637317	1					
ANR	9637342	ReturnType	static png_uint_16		9637317	1					
ANR	9637343	Identifier	png_exp16bit		9637317	2					
ANR	9637344	ParameterList	png_uint_32 log		9637317	3					
ANR	9637345	Parameter	png_uint_32 log	763:32:21454:21468	9637317	0	True				
ANR	9637346	ParameterType	png_uint_32		9637317	0					
ANR	9637347	Identifier	log		9637317	1					
ANR	9637348	CFGEntryNode	ENTRY		9637317		True				
ANR	9637349	CFGExitNode	EXIT		9637317		True				
ANR	9637350	Symbol	LN2		9637317						
ANR	9637351	Symbol	log		9637317						
ANR	9637352	Symbol	exp		9637317						
ANR	9637353	Symbol	floor		9637317						
ANR	9637354	Function	validation_gamma	769:0:21569:26476							
ANR	9637355	FunctionDef	"validation_gamma (int argc , char * * argv)"		9637354	0					
ANR	9637356	CompoundStatement		770:0:21613:26476	9637354	0					
ANR	9637357	IdentifierDeclStatement	"double gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 } ;"	771:3:21618:21694	9637354	0	True				
ANR	9637358	IdentifierDecl	"gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 }"		9637354	0					
ANR	9637359	IdentifierDeclType	double [ 9 ]		9637354	0					
ANR	9637360	Identifier	gamma		9637354	1					
ANR	9637361	PrimaryExpression	9		9637354	2					
ANR	9637362	AssignmentExpression	"gamma [ 9 ] = { 2.2 , 1.8 , 1.52 , 1.45 , 1. , 1 / 1.45 , 1 / 1.52 , 1 / 1.8 , 1 / 2.2 }"		9637354	3		=			
ANR	9637363	Identifier	gamma		9637354	0					
ANR	9637364	InitializerList	2.2		9637354	1					
ANR	9637365	PrimaryExpression	2.2		9637354	0					
ANR	9637366	PrimaryExpression	1.8		9637354	1					
ANR	9637367	PrimaryExpression	1.52		9637354	2					
ANR	9637368	PrimaryExpression	1.45		9637354	3					
ANR	9637369	PrimaryExpression	1.		9637354	4					
ANR	9637370	MultiplicativeExpression	1 / 1.45		9637354	5		/			
ANR	9637371	PrimaryExpression	1		9637354	0					
ANR	9637372	PrimaryExpression	1.45		9637354	1					
ANR	9637373	MultiplicativeExpression	1 / 1.52		9637354	6		/			
ANR	9637374	PrimaryExpression	1		9637354	0					
ANR	9637375	PrimaryExpression	1.52		9637354	1					
ANR	9637376	MultiplicativeExpression	1 / 1.8		9637354	7		/			
ANR	9637377	PrimaryExpression	1		9637354	0					
ANR	9637378	PrimaryExpression	1.8		9637354	1					
ANR	9637379	MultiplicativeExpression	1 / 2.2		9637354	8		/			
ANR	9637380	PrimaryExpression	1		9637354	0					
ANR	9637381	PrimaryExpression	2.2		9637354	1					
ANR	9637382	IdentifierDeclStatement	double maxerr ;	772:3:21699:21712	9637354	1	True				
ANR	9637383	IdentifierDecl	maxerr		9637354	0					
ANR	9637384	IdentifierDeclType	double		9637354	0					
ANR	9637385	Identifier	maxerr		9637354	1					
ANR	9637386	IdentifierDeclStatement	"int i , silent = 0 , onlygamma = 0 ;"	773:3:21717:21745	9637354	2	True				
ANR	9637387	IdentifierDecl	i		9637354	0					
ANR	9637388	IdentifierDeclType	int		9637354	0					
ANR	9637389	Identifier	i		9637354	1					
ANR	9637390	IdentifierDecl	silent = 0		9637354	1					
ANR	9637391	IdentifierDeclType	int		9637354	0					
ANR	9637392	Identifier	silent		9637354	1					
ANR	9637393	AssignmentExpression	silent = 0		9637354	2		=			
ANR	9637394	Identifier	silent		9637354	0					
ANR	9637395	PrimaryExpression	0		9637354	1					
ANR	9637396	IdentifierDecl	onlygamma = 0		9637354	2					
ANR	9637397	IdentifierDeclType	int		9637354	0					
ANR	9637398	Identifier	onlygamma		9637354	1					
ANR	9637399	AssignmentExpression	onlygamma = 0		9637354	2		=			
ANR	9637400	Identifier	onlygamma		9637354	0					
ANR	9637401	PrimaryExpression	0		9637354	1					
ANR	9637402	WhileStatement	while ( -- argc > 0 )		9637354	3					
ANR	9637403	Condition	-- argc > 0	776:10:21834:21843	9637354	0	True				
ANR	9637404	RelationalExpression	-- argc > 0		9637354	0		>			
ANR	9637405	UnaryExpression	-- argc		9637354	0					
ANR	9637406	IncDec	--		9637354	0					
ANR	9637407	Identifier	argc		9637354	1					
ANR	9637408	PrimaryExpression	0		9637354	1					
ANR	9637409	IfStatement	"if ( strcmp ( * ++ argv , ""-s"" ) == 0 )"		9637354	1					
ANR	9637410	Condition	"strcmp ( * ++ argv , ""-s"" ) == 0"	777:10:21856:21881	9637354	0	True				
ANR	9637411	EqualityExpression	"strcmp ( * ++ argv , ""-s"" ) == 0"		9637354	0		==			
ANR	9637412	CallExpression	"strcmp ( * ++ argv , ""-s"" )"		9637354	0					
ANR	9637413	Callee	strcmp		9637354	0					
ANR	9637414	Identifier	strcmp		9637354	0					
ANR	9637415	ArgumentList	* ++ argv		9637354	1					
ANR	9637416	Argument	* ++ argv		9637354	0					
ANR	9637417	UnaryOperationExpression	* ++ argv		9637354	0					
ANR	9637418	UnaryOperator	*		9637354	0					
ANR	9637419	UnaryExpression	++ argv		9637354	1					
ANR	9637420	IncDec	++		9637354	0					
ANR	9637421	Identifier	argv		9637354	1					
ANR	9637422	Argument	"""-s"""		9637354	1					
ANR	9637423	PrimaryExpression	"""-s"""		9637354	0					
ANR	9637424	PrimaryExpression	0		9637354	1					
ANR	9637425	ExpressionStatement	silent = 1	778:9:21893:21903	9637354	1	True				
ANR	9637426	AssignmentExpression	silent = 1		9637354	0		=			
ANR	9637427	Identifier	silent		9637354	0					
ANR	9637428	PrimaryExpression	1		9637354	1					
ANR	9637429	ElseStatement	else		9637354	0					
ANR	9637430	IfStatement	"if ( strcmp ( * argv , ""-g"" ) == 0 )"		9637354	0					
ANR	9637431	Condition	"strcmp ( * argv , ""-g"" ) == 0"	779:15:21920:21943	9637354	0	True				
ANR	9637432	EqualityExpression	"strcmp ( * argv , ""-g"" ) == 0"		9637354	0		==			
ANR	9637433	CallExpression	"strcmp ( * argv , ""-g"" )"		9637354	0					
ANR	9637434	Callee	strcmp		9637354	0					
ANR	9637435	Identifier	strcmp		9637354	0					
ANR	9637436	ArgumentList	* argv		9637354	1					
ANR	9637437	Argument	* argv		9637354	0					
ANR	9637438	UnaryOperationExpression	* argv		9637354	0					
ANR	9637439	UnaryOperator	*		9637354	0					
ANR	9637440	Identifier	argv		9637354	1					
ANR	9637441	Argument	"""-g"""		9637354	1					
ANR	9637442	PrimaryExpression	"""-g"""		9637354	0					
ANR	9637443	PrimaryExpression	0		9637354	1					
ANR	9637444	ExpressionStatement	onlygamma = 1	780:9:21955:21968	9637354	1	True				
ANR	9637445	AssignmentExpression	onlygamma = 1		9637354	0		=			
ANR	9637446	Identifier	onlygamma		9637354	0					
ANR	9637447	PrimaryExpression	1		9637354	1					
ANR	9637448	ElseStatement	else		9637354	0					
ANR	9637449	CompoundStatement		13:6:373:373	9637354	0					
ANR	9637450	ExpressionStatement	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"	783:9:21998:22045	9637354	0	True				
ANR	9637451	CallExpression	"fprintf ( stderr , ""unknown argument %s\\n"" , * argv )"		9637354	0					
ANR	9637452	Callee	fprintf		9637354	0					
ANR	9637453	Identifier	fprintf		9637354	0					
ANR	9637454	ArgumentList	stderr		9637354	1					
ANR	9637455	Argument	stderr		9637354	0					
ANR	9637456	Identifier	stderr		9637354	0					
ANR	9637457	Argument	"""unknown argument %s\\n"""		9637354	1					
ANR	9637458	PrimaryExpression	"""unknown argument %s\\n"""		9637354	0					
ANR	9637459	Argument	* argv		9637354	2					
ANR	9637460	UnaryOperationExpression	* argv		9637354	0					
ANR	9637461	UnaryOperator	*		9637354	0					
ANR	9637462	Identifier	argv		9637354	1					
ANR	9637463	ReturnStatement	return 1 ;	784:9:22056:22064	9637354	1	True				
ANR	9637464	PrimaryExpression	1		9637354	0					
ANR	9637465	IfStatement	if ( ! onlygamma )		9637354	4					
ANR	9637466	Condition	! onlygamma	787:7:22082:22091	9637354	0	True				
ANR	9637467	UnaryOperationExpression	! onlygamma		9637354	0					
ANR	9637468	UnaryOperator	!		9637354	0					
ANR	9637469	Identifier	onlygamma		9637354	1					
ANR	9637470	CompoundStatement		19:3:483:483	9637354	1					
ANR	9637471	ExpressionStatement	maxerr = 0	790:6:22151:22161	9637354	0	True				
ANR	9637472	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9637473	Identifier	maxerr		9637354	0					
ANR	9637474	PrimaryExpression	0		9637354	1					
ANR	9637475	ForStatement	for ( i = 0 ; i < 256 ; ++ i )		9637354	1					
ANR	9637476	ForInit	i = 0 ;	791:11:22174:22177	9637354	0	True				
ANR	9637477	AssignmentExpression	i = 0		9637354	0		=			
ANR	9637478	Identifier	i		9637354	0					
ANR	9637479	PrimaryExpression	0		9637354	1					
ANR	9637480	Condition	i < 256	791:16:22179:22183	9637354	1	True				
ANR	9637481	RelationalExpression	i < 256		9637354	0		<			
ANR	9637482	Identifier	i		9637354	0					
ANR	9637483	PrimaryExpression	256		9637354	1					
ANR	9637484	UnaryExpression	++ i	791:23:22186:22188	9637354	2	True				
ANR	9637485	IncDec	++		9637354	0					
ANR	9637486	Identifier	i		9637354	1					
ANR	9637487	CompoundStatement		25:9:648:687	9637354	3					
ANR	9637488	IdentifierDeclStatement	double correct = - log ( i / 255. ) / log ( 2. ) * 65536 ;	793:9:22208:22251	9637354	0	True				
ANR	9637489	IdentifierDecl	correct = - log ( i / 255. ) / log ( 2. ) * 65536		9637354	0					
ANR	9637490	IdentifierDeclType	double		9637354	0					
ANR	9637491	Identifier	correct		9637354	1					
ANR	9637492	AssignmentExpression	correct = - log ( i / 255. ) / log ( 2. ) * 65536		9637354	2		=			
ANR	9637493	Identifier	correct		9637354	0					
ANR	9637494	MultiplicativeExpression	- log ( i / 255. ) / log ( 2. ) * 65536		9637354	1		/			
ANR	9637495	UnaryOperationExpression	- log ( i / 255. )		9637354	0					
ANR	9637496	UnaryOperator	-		9637354	0					
ANR	9637497	CallExpression	log ( i / 255. )		9637354	1					
ANR	9637498	Callee	log		9637354	0					
ANR	9637499	Identifier	log		9637354	0					
ANR	9637500	ArgumentList	i / 255.		9637354	1					
ANR	9637501	Argument	i / 255.		9637354	0					
ANR	9637502	MultiplicativeExpression	i / 255.		9637354	0		/			
ANR	9637503	Identifier	i		9637354	0					
ANR	9637504	PrimaryExpression	255.		9637354	1					
ANR	9637505	MultiplicativeExpression	log ( 2. ) * 65536		9637354	1		*			
ANR	9637506	CallExpression	log ( 2. )		9637354	0					
ANR	9637507	Callee	log		9637354	0					
ANR	9637508	Identifier	log		9637354	0					
ANR	9637509	ArgumentList	2.		9637354	1					
ANR	9637510	Argument	2.		9637354	0					
ANR	9637511	PrimaryExpression	2.		9637354	0					
ANR	9637512	PrimaryExpression	65536		9637354	1					
ANR	9637513	IdentifierDeclStatement	double error = png_log8bit ( i ) - correct ;	794:9:22262:22301	9637354	1	True				
ANR	9637514	IdentifierDecl	error = png_log8bit ( i ) - correct		9637354	0					
ANR	9637515	IdentifierDeclType	double		9637354	0					
ANR	9637516	Identifier	error		9637354	1					
ANR	9637517	AssignmentExpression	error = png_log8bit ( i ) - correct		9637354	2		=			
ANR	9637518	Identifier	error		9637354	0					
ANR	9637519	AdditiveExpression	png_log8bit ( i ) - correct		9637354	1		-			
ANR	9637520	CallExpression	png_log8bit ( i )		9637354	0					
ANR	9637521	Callee	png_log8bit		9637354	0					
ANR	9637522	Identifier	png_log8bit		9637354	0					
ANR	9637523	ArgumentList	i		9637354	1					
ANR	9637524	Argument	i		9637354	0					
ANR	9637525	Identifier	i		9637354	0					
ANR	9637526	Identifier	correct		9637354	1					
ANR	9637527	IfStatement	if ( i != 0 && fabs ( error ) > maxerr )		9637354	2					
ANR	9637528	Condition	i != 0 && fabs ( error ) > maxerr	796:13:22317:22346	9637354	0	True				
ANR	9637529	AndExpression	i != 0 && fabs ( error ) > maxerr		9637354	0		&&			
ANR	9637530	EqualityExpression	i != 0		9637354	0		!=			
ANR	9637531	Identifier	i		9637354	0					
ANR	9637532	PrimaryExpression	0		9637354	1					
ANR	9637533	RelationalExpression	fabs ( error ) > maxerr		9637354	1		>			
ANR	9637534	CallExpression	fabs ( error )		9637354	0					
ANR	9637535	Callee	fabs		9637354	0					
ANR	9637536	Identifier	fabs		9637354	0					
ANR	9637537	ArgumentList	error		9637354	1					
ANR	9637538	Argument	error		9637354	0					
ANR	9637539	Identifier	error		9637354	0					
ANR	9637540	Identifier	maxerr		9637354	1					
ANR	9637541	ExpressionStatement	maxerr = fabs ( error )	797:12:22361:22381	9637354	1	True				
ANR	9637542	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9637543	Identifier	maxerr		9637354	0					
ANR	9637544	CallExpression	fabs ( error )		9637354	1					
ANR	9637545	Callee	fabs		9637354	0					
ANR	9637546	Identifier	fabs		9637354	0					
ANR	9637547	ArgumentList	error		9637354	1					
ANR	9637548	Argument	error		9637354	0					
ANR	9637549	Identifier	error		9637354	0					
ANR	9637550	IfStatement	if ( i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 ) )		9637354	3					
ANR	9637551	Condition	i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 )	799:13:22397:22496	9637354	0	True				
ANR	9637552	OrExpression	i == 0 && png_log8bit ( i ) != 0xffffffff || i != 0 && png_log8bit ( i ) != floor ( correct + .5 )		9637354	0		||			
ANR	9637553	AndExpression	i == 0 && png_log8bit ( i ) != 0xffffffff		9637354	0		&&			
ANR	9637554	EqualityExpression	i == 0		9637354	0		==			
ANR	9637555	Identifier	i		9637354	0					
ANR	9637556	PrimaryExpression	0		9637354	1					
ANR	9637557	EqualityExpression	png_log8bit ( i ) != 0xffffffff		9637354	1		!=			
ANR	9637558	CallExpression	png_log8bit ( i )		9637354	0					
ANR	9637559	Callee	png_log8bit		9637354	0					
ANR	9637560	Identifier	png_log8bit		9637354	0					
ANR	9637561	ArgumentList	i		9637354	1					
ANR	9637562	Argument	i		9637354	0					
ANR	9637563	Identifier	i		9637354	0					
ANR	9637564	PrimaryExpression	0xffffffff		9637354	1					
ANR	9637565	AndExpression	i != 0 && png_log8bit ( i ) != floor ( correct + .5 )		9637354	1		&&			
ANR	9637566	EqualityExpression	i != 0		9637354	0		!=			
ANR	9637567	Identifier	i		9637354	0					
ANR	9637568	PrimaryExpression	0		9637354	1					
ANR	9637569	EqualityExpression	png_log8bit ( i ) != floor ( correct + .5 )		9637354	1		!=			
ANR	9637570	CallExpression	png_log8bit ( i )		9637354	0					
ANR	9637571	Callee	png_log8bit		9637354	0					
ANR	9637572	Identifier	png_log8bit		9637354	0					
ANR	9637573	ArgumentList	i		9637354	1					
ANR	9637574	Argument	i		9637354	0					
ANR	9637575	Identifier	i		9637354	0					
ANR	9637576	CallExpression	floor ( correct + .5 )		9637354	1					
ANR	9637577	Callee	floor		9637354	0					
ANR	9637578	Identifier	floor		9637354	0					
ANR	9637579	ArgumentList	correct + .5		9637354	1					
ANR	9637580	Argument	correct + .5		9637354	0					
ANR	9637581	AdditiveExpression	correct + .5		9637354	0		+			
ANR	9637582	Identifier	correct		9637354	0					
ANR	9637583	PrimaryExpression	.5		9637354	1					
ANR	9637584	CompoundStatement		32:9:894:894	9637354	1					
ANR	9637585	ExpressionStatement	"fprintf ( stderr , ""8-bit log error: %d: got %u, expected %f\\n"" , i , png_log8bit ( i ) , correct )"	802:12:22522:22626	9637354	0	True				
ANR	9637586	CallExpression	"fprintf ( stderr , ""8-bit log error: %d: got %u, expected %f\\n"" , i , png_log8bit ( i ) , correct )"		9637354	0					
ANR	9637587	Callee	fprintf		9637354	0					
ANR	9637588	Identifier	fprintf		9637354	0					
ANR	9637589	ArgumentList	stderr		9637354	1					
ANR	9637590	Argument	stderr		9637354	0					
ANR	9637591	Identifier	stderr		9637354	0					
ANR	9637592	Argument	"""8-bit log error: %d: got %u, expected %f\\n"""		9637354	1					
ANR	9637593	PrimaryExpression	"""8-bit log error: %d: got %u, expected %f\\n"""		9637354	0					
ANR	9637594	Argument	i		9637354	2					
ANR	9637595	Identifier	i		9637354	0					
ANR	9637596	Argument	png_log8bit ( i )		9637354	3					
ANR	9637597	CallExpression	png_log8bit ( i )		9637354	0					
ANR	9637598	Callee	png_log8bit		9637354	0					
ANR	9637599	Identifier	png_log8bit		9637354	0					
ANR	9637600	ArgumentList	i		9637354	1					
ANR	9637601	Argument	i		9637354	0					
ANR	9637602	Identifier	i		9637354	0					
ANR	9637603	Argument	correct		9637354	4					
ANR	9637604	Identifier	correct		9637354	0					
ANR	9637605	IfStatement	if ( ! silent )		9637354	2					
ANR	9637606	Condition	! silent	807:10:22658:22664	9637354	0	True				
ANR	9637607	UnaryOperationExpression	! silent		9637354	0					
ANR	9637608	UnaryOperator	!		9637354	0					
ANR	9637609	Identifier	silent		9637354	1					
ANR	9637610	ExpressionStatement	"printf ( ""maximum 8-bit log error = %f\\n"" , maxerr )"	808:9:22676:22724	9637354	1	True				
ANR	9637611	CallExpression	"printf ( ""maximum 8-bit log error = %f\\n"" , maxerr )"		9637354	0					
ANR	9637612	Callee	printf		9637354	0					
ANR	9637613	Identifier	printf		9637354	0					
ANR	9637614	ArgumentList	"""maximum 8-bit log error = %f\\n"""		9637354	1					
ANR	9637615	Argument	"""maximum 8-bit log error = %f\\n"""		9637354	0					
ANR	9637616	PrimaryExpression	"""maximum 8-bit log error = %f\\n"""		9637354	0					
ANR	9637617	Argument	maxerr		9637354	1					
ANR	9637618	Identifier	maxerr		9637354	0					
ANR	9637619	ExpressionStatement	maxerr = 0	810:6:22733:22743	9637354	3	True				
ANR	9637620	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9637621	Identifier	maxerr		9637354	0					
ANR	9637622	PrimaryExpression	0		9637354	1					
ANR	9637623	ForStatement	for ( i = 0 ; i < 65536 ; ++ i )		9637354	4					
ANR	9637624	ForInit	i = 0 ;	811:11:22756:22759	9637354	0	True				
ANR	9637625	AssignmentExpression	i = 0		9637354	0		=			
ANR	9637626	Identifier	i		9637354	0					
ANR	9637627	PrimaryExpression	0		9637354	1					
ANR	9637628	Condition	i < 65536	811:16:22761:22767	9637354	1	True				
ANR	9637629	RelationalExpression	i < 65536		9637354	0		<			
ANR	9637630	Identifier	i		9637354	0					
ANR	9637631	PrimaryExpression	65536		9637354	1					
ANR	9637632	UnaryExpression	++ i	811:25:22770:22772	9637354	2	True				
ANR	9637633	IncDec	++		9637354	0					
ANR	9637634	Identifier	i		9637354	1					
ANR	9637635	CompoundStatement		45:9:1234:1274	9637354	3					
ANR	9637636	IdentifierDeclStatement	double correct = - log ( i / 65535. ) / log ( 2. ) * 65536 ;	813:9:22792:22837	9637354	0	True				
ANR	9637637	IdentifierDecl	correct = - log ( i / 65535. ) / log ( 2. ) * 65536		9637354	0					
ANR	9637638	IdentifierDeclType	double		9637354	0					
ANR	9637639	Identifier	correct		9637354	1					
ANR	9637640	AssignmentExpression	correct = - log ( i / 65535. ) / log ( 2. ) * 65536		9637354	2		=			
ANR	9637641	Identifier	correct		9637354	0					
ANR	9637642	MultiplicativeExpression	- log ( i / 65535. ) / log ( 2. ) * 65536		9637354	1		/			
ANR	9637643	UnaryOperationExpression	- log ( i / 65535. )		9637354	0					
ANR	9637644	UnaryOperator	-		9637354	0					
ANR	9637645	CallExpression	log ( i / 65535. )		9637354	1					
ANR	9637646	Callee	log		9637354	0					
ANR	9637647	Identifier	log		9637354	0					
ANR	9637648	ArgumentList	i / 65535.		9637354	1					
ANR	9637649	Argument	i / 65535.		9637354	0					
ANR	9637650	MultiplicativeExpression	i / 65535.		9637354	0		/			
ANR	9637651	Identifier	i		9637354	0					
ANR	9637652	PrimaryExpression	65535.		9637354	1					
ANR	9637653	MultiplicativeExpression	log ( 2. ) * 65536		9637354	1		*			
ANR	9637654	CallExpression	log ( 2. )		9637354	0					
ANR	9637655	Callee	log		9637354	0					
ANR	9637656	Identifier	log		9637354	0					
ANR	9637657	ArgumentList	2.		9637354	1					
ANR	9637658	Argument	2.		9637354	0					
ANR	9637659	PrimaryExpression	2.		9637354	0					
ANR	9637660	PrimaryExpression	65536		9637354	1					
ANR	9637661	IdentifierDeclStatement	double error = png_log16bit ( i ) - correct ;	814:9:22848:22888	9637354	1	True				
ANR	9637662	IdentifierDecl	error = png_log16bit ( i ) - correct		9637354	0					
ANR	9637663	IdentifierDeclType	double		9637354	0					
ANR	9637664	Identifier	error		9637354	1					
ANR	9637665	AssignmentExpression	error = png_log16bit ( i ) - correct		9637354	2		=			
ANR	9637666	Identifier	error		9637354	0					
ANR	9637667	AdditiveExpression	png_log16bit ( i ) - correct		9637354	1		-			
ANR	9637668	CallExpression	png_log16bit ( i )		9637354	0					
ANR	9637669	Callee	png_log16bit		9637354	0					
ANR	9637670	Identifier	png_log16bit		9637354	0					
ANR	9637671	ArgumentList	i		9637354	1					
ANR	9637672	Argument	i		9637354	0					
ANR	9637673	Identifier	i		9637354	0					
ANR	9637674	Identifier	correct		9637354	1					
ANR	9637675	IfStatement	if ( i != 0 && fabs ( error ) > maxerr )		9637354	2					
ANR	9637676	Condition	i != 0 && fabs ( error ) > maxerr	816:13:22904:22933	9637354	0	True				
ANR	9637677	AndExpression	i != 0 && fabs ( error ) > maxerr		9637354	0		&&			
ANR	9637678	EqualityExpression	i != 0		9637354	0		!=			
ANR	9637679	Identifier	i		9637354	0					
ANR	9637680	PrimaryExpression	0		9637354	1					
ANR	9637681	RelationalExpression	fabs ( error ) > maxerr		9637354	1		>			
ANR	9637682	CallExpression	fabs ( error )		9637354	0					
ANR	9637683	Callee	fabs		9637354	0					
ANR	9637684	Identifier	fabs		9637354	0					
ANR	9637685	ArgumentList	error		9637354	1					
ANR	9637686	Argument	error		9637354	0					
ANR	9637687	Identifier	error		9637354	0					
ANR	9637688	Identifier	maxerr		9637354	1					
ANR	9637689	ExpressionStatement	maxerr = fabs ( error )	817:12:22948:22968	9637354	1	True				
ANR	9637690	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9637691	Identifier	maxerr		9637354	0					
ANR	9637692	CallExpression	fabs ( error )		9637354	1					
ANR	9637693	Callee	fabs		9637354	0					
ANR	9637694	Identifier	fabs		9637354	0					
ANR	9637695	ArgumentList	error		9637354	1					
ANR	9637696	Argument	error		9637354	0					
ANR	9637697	Identifier	error		9637354	0					
ANR	9637698	IfStatement	if ( i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 ) )		9637354	3					
ANR	9637699	Condition	i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 )	819:13:22984:23085	9637354	0	True				
ANR	9637700	OrExpression	i == 0 && png_log16bit ( i ) != 0xffffffff || i != 0 && png_log16bit ( i ) != floor ( correct + .5 )		9637354	0		||			
ANR	9637701	AndExpression	i == 0 && png_log16bit ( i ) != 0xffffffff		9637354	0		&&			
ANR	9637702	EqualityExpression	i == 0		9637354	0		==			
ANR	9637703	Identifier	i		9637354	0					
ANR	9637704	PrimaryExpression	0		9637354	1					
ANR	9637705	EqualityExpression	png_log16bit ( i ) != 0xffffffff		9637354	1		!=			
ANR	9637706	CallExpression	png_log16bit ( i )		9637354	0					
ANR	9637707	Callee	png_log16bit		9637354	0					
ANR	9637708	Identifier	png_log16bit		9637354	0					
ANR	9637709	ArgumentList	i		9637354	1					
ANR	9637710	Argument	i		9637354	0					
ANR	9637711	Identifier	i		9637354	0					
ANR	9637712	PrimaryExpression	0xffffffff		9637354	1					
ANR	9637713	AndExpression	i != 0 && png_log16bit ( i ) != floor ( correct + .5 )		9637354	1		&&			
ANR	9637714	EqualityExpression	i != 0		9637354	0		!=			
ANR	9637715	Identifier	i		9637354	0					
ANR	9637716	PrimaryExpression	0		9637354	1					
ANR	9637717	EqualityExpression	png_log16bit ( i ) != floor ( correct + .5 )		9637354	1		!=			
ANR	9637718	CallExpression	png_log16bit ( i )		9637354	0					
ANR	9637719	Callee	png_log16bit		9637354	0					
ANR	9637720	Identifier	png_log16bit		9637354	0					
ANR	9637721	ArgumentList	i		9637354	1					
ANR	9637722	Argument	i		9637354	0					
ANR	9637723	Identifier	i		9637354	0					
ANR	9637724	CallExpression	floor ( correct + .5 )		9637354	1					
ANR	9637725	Callee	floor		9637354	0					
ANR	9637726	Identifier	floor		9637354	0					
ANR	9637727	ArgumentList	correct + .5		9637354	1					
ANR	9637728	Argument	correct + .5		9637354	0					
ANR	9637729	AdditiveExpression	correct + .5		9637354	0		+			
ANR	9637730	Identifier	correct		9637354	0					
ANR	9637731	PrimaryExpression	.5		9637354	1					
ANR	9637732	CompoundStatement		52:9:1483:1483	9637354	1					
ANR	9637733	IfStatement	if ( error > .68 )		9637354	0					
ANR	9637734	Condition	error > .68	822:16:23115:23125	9637354	0	True				
ANR	9637735	RelationalExpression	error > .68		9637354	0		>			
ANR	9637736	Identifier	error		9637354	0					
ANR	9637737	PrimaryExpression	.68		9637354	1					
ANR	9637738	CompoundStatement		54:12:1569:1569	9637354	1					
ANR	9637739	Statement	fprintf	824:15:23200:23206	9637354	0	True				
ANR	9637740	Statement	(	824:22:23207:23207	9637354	1	True				
ANR	9637741	Statement	stderr	824:23:23208:23213	9637354	2	True				
ANR	9637742	Statement	","	824:29:23214:23214	9637354	3	True				
ANR	9637743	Statement	"""16-bit log error: %d: got %u, expected %f"""	824:31:23216:23258	9637354	4	True				
ANR	9637744	Statement	""" error: %f\\n"""	825:18:23278:23291	9637354	5	True				
ANR	9637745	Statement	","	825:32:23292:23292	9637354	6	True				
ANR	9637746	Statement	i	825:34:23294:23294	9637354	7	True				
ANR	9637747	Statement	","	825:35:23295:23295	9637354	8	True				
ANR	9637748	Statement	png_log16bit	825:37:23297:23308	9637354	9	True				
ANR	9637749	Statement	(	825:49:23309:23309	9637354	10	True				
ANR	9637750	Statement	i	825:50:23310:23310	9637354	11	True				
ANR	9637751	Statement	)	825:51:23311:23311	9637354	12	True				
ANR	9637752	Statement	","	825:52:23312:23312	9637354	13	True				
ANR	9637753	Statement	correct	825:54:23314:23320	9637354	14	True				
ANR	9637754	Statement	","	825:61:23321:23321	9637354	15	True				
ANR	9637755	Statement	error	825:63:23323:23327	9637354	16	True				
ANR	9637756	Statement	)	825:68:23328:23328	9637354	17	True				
ANR	9637757	ExpressionStatement		825:69:23329:23329	9637354	18	True				
ANR	9637758	IfStatement	if ( ! silent )		9637354	5					
ANR	9637759	Condition	! silent	830:10:23375:23381	9637354	0	True				
ANR	9637760	UnaryOperationExpression	! silent		9637354	0					
ANR	9637761	UnaryOperator	!		9637354	0					
ANR	9637762	Identifier	silent		9637354	1					
ANR	9637763	ExpressionStatement	"printf ( ""maximum 16-bit log error = %f\\n"" , maxerr )"	831:9:23393:23442	9637354	1	True				
ANR	9637764	CallExpression	"printf ( ""maximum 16-bit log error = %f\\n"" , maxerr )"		9637354	0					
ANR	9637765	Callee	printf		9637354	0					
ANR	9637766	Identifier	printf		9637354	0					
ANR	9637767	ArgumentList	"""maximum 16-bit log error = %f\\n"""		9637354	1					
ANR	9637768	Argument	"""maximum 16-bit log error = %f\\n"""		9637354	0					
ANR	9637769	PrimaryExpression	"""maximum 16-bit log error = %f\\n"""		9637354	0					
ANR	9637770	Argument	maxerr		9637354	1					
ANR	9637771	Identifier	maxerr		9637354	0					
ANR	9637772	ExpressionStatement	maxerr = 0	834:6:23484:23494	9637354	6	True				
ANR	9637773	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9637774	Identifier	maxerr		9637354	0					
ANR	9637775	PrimaryExpression	0		9637354	1					
ANR	9637776	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		9637354	7					
ANR	9637777	ForInit	i = 0 ;	835:11:23507:23510	9637354	0	True				
ANR	9637778	AssignmentExpression	i = 0		9637354	0		=			
ANR	9637779	Identifier	i		9637354	0					
ANR	9637780	PrimaryExpression	0		9637354	1					
ANR	9637781	Condition	i <= 0xfffff	835:16:23512:23521	9637354	1	True				
ANR	9637782	RelationalExpression	i <= 0xfffff		9637354	0		<=			
ANR	9637783	Identifier	i		9637354	0					
ANR	9637784	PrimaryExpression	0xfffff		9637354	1					
ANR	9637785	UnaryExpression	++ i	835:28:23524:23526	9637354	2	True				
ANR	9637786	IncDec	++		9637354	0					
ANR	9637787	Identifier	i		9637354	1					
ANR	9637788	CompoundStatement		69:9:2003:2038	9637354	3					
ANR	9637789	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 ) ;	837:9:23546:23606	9637354	0	True				
ANR	9637790	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		9637354	0					
ANR	9637791	IdentifierDeclType	double		9637354	0					
ANR	9637792	Identifier	correct		9637354	1					
ANR	9637793	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		9637354	2		=			
ANR	9637794	Identifier	correct		9637354	0					
ANR	9637795	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * ( 65536. * 65536 )		9637354	1		*			
ANR	9637796	CallExpression	exp ( - i / 65536. * log ( 2. ) )		9637354	0					
ANR	9637797	Callee	exp		9637354	0					
ANR	9637798	Identifier	exp		9637354	0					
ANR	9637799	ArgumentList	- i / 65536. * log ( 2. )		9637354	1					
ANR	9637800	Argument	- i / 65536. * log ( 2. )		9637354	0					
ANR	9637801	MultiplicativeExpression	- i / 65536. * log ( 2. )		9637354	0		/			
ANR	9637802	UnaryOperationExpression	- i		9637354	0					
ANR	9637803	UnaryOperator	-		9637354	0					
ANR	9637804	Identifier	i		9637354	1					
ANR	9637805	MultiplicativeExpression	65536. * log ( 2. )		9637354	1		*			
ANR	9637806	PrimaryExpression	65536.		9637354	0					
ANR	9637807	CallExpression	log ( 2. )		9637354	1					
ANR	9637808	Callee	log		9637354	0					
ANR	9637809	Identifier	log		9637354	0					
ANR	9637810	ArgumentList	2.		9637354	1					
ANR	9637811	Argument	2.		9637354	0					
ANR	9637812	PrimaryExpression	2.		9637354	0					
ANR	9637813	MultiplicativeExpression	65536. * 65536		9637354	1		*			
ANR	9637814	PrimaryExpression	65536.		9637354	0					
ANR	9637815	PrimaryExpression	65536		9637354	1					
ANR	9637816	IdentifierDeclStatement	double error = png_exp ( i ) - correct ;	838:9:23617:23652	9637354	1	True				
ANR	9637817	IdentifierDecl	error = png_exp ( i ) - correct		9637354	0					
ANR	9637818	IdentifierDeclType	double		9637354	0					
ANR	9637819	Identifier	error		9637354	1					
ANR	9637820	AssignmentExpression	error = png_exp ( i ) - correct		9637354	2		=			
ANR	9637821	Identifier	error		9637354	0					
ANR	9637822	AdditiveExpression	png_exp ( i ) - correct		9637354	1		-			
ANR	9637823	CallExpression	png_exp ( i )		9637354	0					
ANR	9637824	Callee	png_exp		9637354	0					
ANR	9637825	Identifier	png_exp		9637354	0					
ANR	9637826	ArgumentList	i		9637354	1					
ANR	9637827	Argument	i		9637354	0					
ANR	9637828	Identifier	i		9637354	0					
ANR	9637829	Identifier	correct		9637354	1					
ANR	9637830	IfStatement	if ( fabs ( error ) > maxerr )		9637354	2					
ANR	9637831	Condition	fabs ( error ) > maxerr	840:13:23668:23687	9637354	0	True				
ANR	9637832	RelationalExpression	fabs ( error ) > maxerr		9637354	0		>			
ANR	9637833	CallExpression	fabs ( error )		9637354	0					
ANR	9637834	Callee	fabs		9637354	0					
ANR	9637835	Identifier	fabs		9637354	0					
ANR	9637836	ArgumentList	error		9637354	1					
ANR	9637837	Argument	error		9637354	0					
ANR	9637838	Identifier	error		9637354	0					
ANR	9637839	Identifier	maxerr		9637354	1					
ANR	9637840	ExpressionStatement	maxerr = fabs ( error )	841:12:23702:23722	9637354	1	True				
ANR	9637841	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9637842	Identifier	maxerr		9637354	0					
ANR	9637843	CallExpression	fabs ( error )		9637354	1					
ANR	9637844	Callee	fabs		9637354	0					
ANR	9637845	Identifier	fabs		9637354	0					
ANR	9637846	ArgumentList	error		9637354	1					
ANR	9637847	Argument	error		9637354	0					
ANR	9637848	Identifier	error		9637354	0					
ANR	9637849	IfStatement	if ( fabs ( error ) > 1883 )		9637354	3					
ANR	9637850	Condition	fabs ( error ) > 1883	842:13:23737:23754	9637354	0	True				
ANR	9637851	RelationalExpression	fabs ( error ) > 1883		9637354	0		>			
ANR	9637852	CallExpression	fabs ( error )		9637354	0					
ANR	9637853	Callee	fabs		9637354	0					
ANR	9637854	Identifier	fabs		9637354	0					
ANR	9637855	ArgumentList	error		9637354	1					
ANR	9637856	Argument	error		9637354	0					
ANR	9637857	Identifier	error		9637354	0					
ANR	9637858	PrimaryExpression	1883		9637354	1					
ANR	9637859	CompoundStatement		74:9:2173:2173	9637354	1					
ANR	9637860	Statement	fprintf	844:12:23801:23807	9637354	0	True				
ANR	9637861	Statement	(	844:19:23808:23808	9637354	1	True				
ANR	9637862	Statement	stderr	844:20:23809:23814	9637354	2	True				
ANR	9637863	Statement	","	844:26:23815:23815	9637354	3	True				
ANR	9637864	Statement	"""32-bit exp error: %d: got %u, expected %f"""	844:28:23817:23859	9637354	4	True				
ANR	9637865	Statement	""" error: %f\\n"""	845:18:23879:23892	9637354	5	True				
ANR	9637866	Statement	","	845:32:23893:23893	9637354	6	True				
ANR	9637867	Statement	i	845:34:23895:23895	9637354	7	True				
ANR	9637868	Statement	","	845:35:23896:23896	9637354	8	True				
ANR	9637869	Statement	png_exp	845:37:23898:23904	9637354	9	True				
ANR	9637870	Statement	(	845:44:23905:23905	9637354	10	True				
ANR	9637871	Statement	i	845:45:23906:23906	9637354	11	True				
ANR	9637872	Statement	)	845:46:23907:23907	9637354	12	True				
ANR	9637873	Statement	","	845:47:23908:23908	9637354	13	True				
ANR	9637874	Statement	correct	845:49:23910:23916	9637354	14	True				
ANR	9637875	Statement	","	845:56:23917:23917	9637354	15	True				
ANR	9637876	Statement	error	845:58:23919:23923	9637354	16	True				
ANR	9637877	Statement	)	845:63:23924:23924	9637354	17	True				
ANR	9637878	ExpressionStatement		845:64:23925:23925	9637354	18	True				
ANR	9637879	IfStatement	if ( ! silent )		9637354	8					
ANR	9637880	Condition	! silent	849:10:23957:23963	9637354	0	True				
ANR	9637881	UnaryOperationExpression	! silent		9637354	0					
ANR	9637882	UnaryOperator	!		9637354	0					
ANR	9637883	Identifier	silent		9637354	1					
ANR	9637884	ExpressionStatement	"printf ( ""maximum 32-bit exp error = %f\\n"" , maxerr )"	850:9:23975:24024	9637354	1	True				
ANR	9637885	CallExpression	"printf ( ""maximum 32-bit exp error = %f\\n"" , maxerr )"		9637354	0					
ANR	9637886	Callee	printf		9637354	0					
ANR	9637887	Identifier	printf		9637354	0					
ANR	9637888	ArgumentList	"""maximum 32-bit exp error = %f\\n"""		9637354	1					
ANR	9637889	Argument	"""maximum 32-bit exp error = %f\\n"""		9637354	0					
ANR	9637890	PrimaryExpression	"""maximum 32-bit exp error = %f\\n"""		9637354	0					
ANR	9637891	Argument	maxerr		9637354	1					
ANR	9637892	Identifier	maxerr		9637354	0					
ANR	9637893	ExpressionStatement	maxerr = 0	852:6:24033:24043	9637354	9	True				
ANR	9637894	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9637895	Identifier	maxerr		9637354	0					
ANR	9637896	PrimaryExpression	0		9637354	1					
ANR	9637897	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		9637354	10					
ANR	9637898	ForInit	i = 0 ;	853:11:24056:24059	9637354	0	True				
ANR	9637899	AssignmentExpression	i = 0		9637354	0		=			
ANR	9637900	Identifier	i		9637354	0					
ANR	9637901	PrimaryExpression	0		9637354	1					
ANR	9637902	Condition	i <= 0xfffff	853:16:24061:24070	9637354	1	True				
ANR	9637903	RelationalExpression	i <= 0xfffff		9637354	0		<=			
ANR	9637904	Identifier	i		9637354	0					
ANR	9637905	PrimaryExpression	0xfffff		9637354	1					
ANR	9637906	UnaryExpression	++ i	853:28:24073:24075	9637354	2	True				
ANR	9637907	IncDec	++		9637354	0					
ANR	9637908	Identifier	i		9637354	1					
ANR	9637909	CompoundStatement		87:9:2539:2578	9637354	3					
ANR	9637910	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * 255 ;	855:9:24095:24142	9637354	0	True				
ANR	9637911	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * 255		9637354	0					
ANR	9637912	IdentifierDeclType	double		9637354	0					
ANR	9637913	Identifier	correct		9637354	1					
ANR	9637914	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * 255		9637354	2		=			
ANR	9637915	Identifier	correct		9637354	0					
ANR	9637916	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * 255		9637354	1		*			
ANR	9637917	CallExpression	exp ( - i / 65536. * log ( 2. ) )		9637354	0					
ANR	9637918	Callee	exp		9637354	0					
ANR	9637919	Identifier	exp		9637354	0					
ANR	9637920	ArgumentList	- i / 65536. * log ( 2. )		9637354	1					
ANR	9637921	Argument	- i / 65536. * log ( 2. )		9637354	0					
ANR	9637922	MultiplicativeExpression	- i / 65536. * log ( 2. )		9637354	0		/			
ANR	9637923	UnaryOperationExpression	- i		9637354	0					
ANR	9637924	UnaryOperator	-		9637354	0					
ANR	9637925	Identifier	i		9637354	1					
ANR	9637926	MultiplicativeExpression	65536. * log ( 2. )		9637354	1		*			
ANR	9637927	PrimaryExpression	65536.		9637354	0					
ANR	9637928	CallExpression	log ( 2. )		9637354	1					
ANR	9637929	Callee	log		9637354	0					
ANR	9637930	Identifier	log		9637354	0					
ANR	9637931	ArgumentList	2.		9637354	1					
ANR	9637932	Argument	2.		9637354	0					
ANR	9637933	PrimaryExpression	2.		9637354	0					
ANR	9637934	PrimaryExpression	255		9637354	1					
ANR	9637935	IdentifierDeclStatement	double error = png_exp8bit ( i ) - correct ;	856:9:24153:24192	9637354	1	True				
ANR	9637936	IdentifierDecl	error = png_exp8bit ( i ) - correct		9637354	0					
ANR	9637937	IdentifierDeclType	double		9637354	0					
ANR	9637938	Identifier	error		9637354	1					
ANR	9637939	AssignmentExpression	error = png_exp8bit ( i ) - correct		9637354	2		=			
ANR	9637940	Identifier	error		9637354	0					
ANR	9637941	AdditiveExpression	png_exp8bit ( i ) - correct		9637354	1		-			
ANR	9637942	CallExpression	png_exp8bit ( i )		9637354	0					
ANR	9637943	Callee	png_exp8bit		9637354	0					
ANR	9637944	Identifier	png_exp8bit		9637354	0					
ANR	9637945	ArgumentList	i		9637354	1					
ANR	9637946	Argument	i		9637354	0					
ANR	9637947	Identifier	i		9637354	0					
ANR	9637948	Identifier	correct		9637354	1					
ANR	9637949	IfStatement	if ( fabs ( error ) > maxerr )		9637354	2					
ANR	9637950	Condition	fabs ( error ) > maxerr	858:13:24208:24227	9637354	0	True				
ANR	9637951	RelationalExpression	fabs ( error ) > maxerr		9637354	0		>			
ANR	9637952	CallExpression	fabs ( error )		9637354	0					
ANR	9637953	Callee	fabs		9637354	0					
ANR	9637954	Identifier	fabs		9637354	0					
ANR	9637955	ArgumentList	error		9637354	1					
ANR	9637956	Argument	error		9637354	0					
ANR	9637957	Identifier	error		9637354	0					
ANR	9637958	Identifier	maxerr		9637354	1					
ANR	9637959	ExpressionStatement	maxerr = fabs ( error )	859:12:24242:24262	9637354	1	True				
ANR	9637960	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9637961	Identifier	maxerr		9637354	0					
ANR	9637962	CallExpression	fabs ( error )		9637354	1					
ANR	9637963	Callee	fabs		9637354	0					
ANR	9637964	Identifier	fabs		9637354	0					
ANR	9637965	ArgumentList	error		9637354	1					
ANR	9637966	Argument	error		9637354	0					
ANR	9637967	Identifier	error		9637354	0					
ANR	9637968	IfStatement	if ( fabs ( error ) > .50002 )		9637354	3					
ANR	9637969	Condition	fabs ( error ) > .50002	860:13:24277:24296	9637354	0	True				
ANR	9637970	RelationalExpression	fabs ( error ) > .50002		9637354	0		>			
ANR	9637971	CallExpression	fabs ( error )		9637354	0					
ANR	9637972	Callee	fabs		9637354	0					
ANR	9637973	Identifier	fabs		9637354	0					
ANR	9637974	ArgumentList	error		9637354	1					
ANR	9637975	Argument	error		9637354	0					
ANR	9637976	Identifier	error		9637354	0					
ANR	9637977	PrimaryExpression	.50002		9637354	1					
ANR	9637978	CompoundStatement		92:9:2714:2714	9637354	1					
ANR	9637979	Statement	fprintf	862:12:24342:24348	9637354	0	True				
ANR	9637980	Statement	(	862:19:24349:24349	9637354	1	True				
ANR	9637981	Statement	stderr	862:20:24350:24355	9637354	2	True				
ANR	9637982	Statement	","	862:26:24356:24356	9637354	3	True				
ANR	9637983	Statement	"""8-bit exp error: %d: got %u, expected %f"""	862:28:24358:24399	9637354	4	True				
ANR	9637984	Statement	""" error: %f\\n"""	863:18:24419:24432	9637354	5	True				
ANR	9637985	Statement	","	863:32:24433:24433	9637354	6	True				
ANR	9637986	Statement	i	863:34:24435:24435	9637354	7	True				
ANR	9637987	Statement	","	863:35:24436:24436	9637354	8	True				
ANR	9637988	Statement	png_exp8bit	863:37:24438:24448	9637354	9	True				
ANR	9637989	Statement	(	863:48:24449:24449	9637354	10	True				
ANR	9637990	Statement	i	863:49:24450:24450	9637354	11	True				
ANR	9637991	Statement	)	863:50:24451:24451	9637354	12	True				
ANR	9637992	Statement	","	863:51:24452:24452	9637354	13	True				
ANR	9637993	Statement	correct	863:53:24454:24460	9637354	14	True				
ANR	9637994	Statement	","	863:60:24461:24461	9637354	15	True				
ANR	9637995	Statement	error	863:62:24463:24467	9637354	16	True				
ANR	9637996	Statement	)	863:67:24468:24468	9637354	17	True				
ANR	9637997	ExpressionStatement		863:68:24469:24469	9637354	18	True				
ANR	9637998	IfStatement	if ( ! silent )		9637354	11					
ANR	9637999	Condition	! silent	867:10:24501:24507	9637354	0	True				
ANR	9638000	UnaryOperationExpression	! silent		9637354	0					
ANR	9638001	UnaryOperator	!		9637354	0					
ANR	9638002	Identifier	silent		9637354	1					
ANR	9638003	ExpressionStatement	"printf ( ""maximum 8-bit exp error = %f\\n"" , maxerr )"	868:9:24519:24567	9637354	1	True				
ANR	9638004	CallExpression	"printf ( ""maximum 8-bit exp error = %f\\n"" , maxerr )"		9637354	0					
ANR	9638005	Callee	printf		9637354	0					
ANR	9638006	Identifier	printf		9637354	0					
ANR	9638007	ArgumentList	"""maximum 8-bit exp error = %f\\n"""		9637354	1					
ANR	9638008	Argument	"""maximum 8-bit exp error = %f\\n"""		9637354	0					
ANR	9638009	PrimaryExpression	"""maximum 8-bit exp error = %f\\n"""		9637354	0					
ANR	9638010	Argument	maxerr		9637354	1					
ANR	9638011	Identifier	maxerr		9637354	0					
ANR	9638012	ExpressionStatement	maxerr = 0	870:6:24576:24586	9637354	12	True				
ANR	9638013	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9638014	Identifier	maxerr		9637354	0					
ANR	9638015	PrimaryExpression	0		9637354	1					
ANR	9638016	ForStatement	for ( i = 0 ; i <= 0xfffff ; ++ i )		9637354	13					
ANR	9638017	ForInit	i = 0 ;	871:11:24599:24602	9637354	0	True				
ANR	9638018	AssignmentExpression	i = 0		9637354	0		=			
ANR	9638019	Identifier	i		9637354	0					
ANR	9638020	PrimaryExpression	0		9637354	1					
ANR	9638021	Condition	i <= 0xfffff	871:16:24604:24613	9637354	1	True				
ANR	9638022	RelationalExpression	i <= 0xfffff		9637354	0		<=			
ANR	9638023	Identifier	i		9637354	0					
ANR	9638024	PrimaryExpression	0xfffff		9637354	1					
ANR	9638025	UnaryExpression	++ i	871:28:24616:24618	9637354	2	True				
ANR	9638026	IncDec	++		9637354	0					
ANR	9638027	Identifier	i		9637354	1					
ANR	9638028	CompoundStatement		105:9:3084:3124	9637354	3					
ANR	9638029	IdentifierDeclStatement	double correct = exp ( - i / 65536. * log ( 2. ) ) * 65535 ;	873:9:24638:24687	9637354	0	True				
ANR	9638030	IdentifierDecl	correct = exp ( - i / 65536. * log ( 2. ) ) * 65535		9637354	0					
ANR	9638031	IdentifierDeclType	double		9637354	0					
ANR	9638032	Identifier	correct		9637354	1					
ANR	9638033	AssignmentExpression	correct = exp ( - i / 65536. * log ( 2. ) ) * 65535		9637354	2		=			
ANR	9638034	Identifier	correct		9637354	0					
ANR	9638035	MultiplicativeExpression	exp ( - i / 65536. * log ( 2. ) ) * 65535		9637354	1		*			
ANR	9638036	CallExpression	exp ( - i / 65536. * log ( 2. ) )		9637354	0					
ANR	9638037	Callee	exp		9637354	0					
ANR	9638038	Identifier	exp		9637354	0					
ANR	9638039	ArgumentList	- i / 65536. * log ( 2. )		9637354	1					
ANR	9638040	Argument	- i / 65536. * log ( 2. )		9637354	0					
ANR	9638041	MultiplicativeExpression	- i / 65536. * log ( 2. )		9637354	0		/			
ANR	9638042	UnaryOperationExpression	- i		9637354	0					
ANR	9638043	UnaryOperator	-		9637354	0					
ANR	9638044	Identifier	i		9637354	1					
ANR	9638045	MultiplicativeExpression	65536. * log ( 2. )		9637354	1		*			
ANR	9638046	PrimaryExpression	65536.		9637354	0					
ANR	9638047	CallExpression	log ( 2. )		9637354	1					
ANR	9638048	Callee	log		9637354	0					
ANR	9638049	Identifier	log		9637354	0					
ANR	9638050	ArgumentList	2.		9637354	1					
ANR	9638051	Argument	2.		9637354	0					
ANR	9638052	PrimaryExpression	2.		9637354	0					
ANR	9638053	PrimaryExpression	65535		9637354	1					
ANR	9638054	IdentifierDeclStatement	double error = png_exp16bit ( i ) - correct ;	874:9:24698:24738	9637354	1	True				
ANR	9638055	IdentifierDecl	error = png_exp16bit ( i ) - correct		9637354	0					
ANR	9638056	IdentifierDeclType	double		9637354	0					
ANR	9638057	Identifier	error		9637354	1					
ANR	9638058	AssignmentExpression	error = png_exp16bit ( i ) - correct		9637354	2		=			
ANR	9638059	Identifier	error		9637354	0					
ANR	9638060	AdditiveExpression	png_exp16bit ( i ) - correct		9637354	1		-			
ANR	9638061	CallExpression	png_exp16bit ( i )		9637354	0					
ANR	9638062	Callee	png_exp16bit		9637354	0					
ANR	9638063	Identifier	png_exp16bit		9637354	0					
ANR	9638064	ArgumentList	i		9637354	1					
ANR	9638065	Argument	i		9637354	0					
ANR	9638066	Identifier	i		9637354	0					
ANR	9638067	Identifier	correct		9637354	1					
ANR	9638068	IfStatement	if ( fabs ( error ) > maxerr )		9637354	2					
ANR	9638069	Condition	fabs ( error ) > maxerr	876:13:24754:24773	9637354	0	True				
ANR	9638070	RelationalExpression	fabs ( error ) > maxerr		9637354	0		>			
ANR	9638071	CallExpression	fabs ( error )		9637354	0					
ANR	9638072	Callee	fabs		9637354	0					
ANR	9638073	Identifier	fabs		9637354	0					
ANR	9638074	ArgumentList	error		9637354	1					
ANR	9638075	Argument	error		9637354	0					
ANR	9638076	Identifier	error		9637354	0					
ANR	9638077	Identifier	maxerr		9637354	1					
ANR	9638078	ExpressionStatement	maxerr = fabs ( error )	877:12:24788:24808	9637354	1	True				
ANR	9638079	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9638080	Identifier	maxerr		9637354	0					
ANR	9638081	CallExpression	fabs ( error )		9637354	1					
ANR	9638082	Callee	fabs		9637354	0					
ANR	9638083	Identifier	fabs		9637354	0					
ANR	9638084	ArgumentList	error		9637354	1					
ANR	9638085	Argument	error		9637354	0					
ANR	9638086	Identifier	error		9637354	0					
ANR	9638087	IfStatement	if ( fabs ( error ) > .524 )		9637354	3					
ANR	9638088	Condition	fabs ( error ) > .524	878:13:24823:24840	9637354	0	True				
ANR	9638089	RelationalExpression	fabs ( error ) > .524		9637354	0		>			
ANR	9638090	CallExpression	fabs ( error )		9637354	0					
ANR	9638091	Callee	fabs		9637354	0					
ANR	9638092	Identifier	fabs		9637354	0					
ANR	9638093	ArgumentList	error		9637354	1					
ANR	9638094	Argument	error		9637354	0					
ANR	9638095	Identifier	error		9637354	0					
ANR	9638096	PrimaryExpression	.524		9637354	1					
ANR	9638097	CompoundStatement		110:9:3258:3258	9637354	1					
ANR	9638098	Statement	fprintf	880:12:24886:24892	9637354	0	True				
ANR	9638099	Statement	(	880:19:24893:24893	9637354	1	True				
ANR	9638100	Statement	stderr	880:20:24894:24899	9637354	2	True				
ANR	9638101	Statement	","	880:26:24900:24900	9637354	3	True				
ANR	9638102	Statement	"""16-bit exp error: %d: got %u, expected %f"""	880:28:24902:24944	9637354	4	True				
ANR	9638103	Statement	""" error: %f\\n"""	881:18:24964:24977	9637354	5	True				
ANR	9638104	Statement	","	881:32:24978:24978	9637354	6	True				
ANR	9638105	Statement	i	881:34:24980:24980	9637354	7	True				
ANR	9638106	Statement	","	881:35:24981:24981	9637354	8	True				
ANR	9638107	Statement	png_exp16bit	881:37:24983:24994	9637354	9	True				
ANR	9638108	Statement	(	881:49:24995:24995	9637354	10	True				
ANR	9638109	Statement	i	881:50:24996:24996	9637354	11	True				
ANR	9638110	Statement	)	881:51:24997:24997	9637354	12	True				
ANR	9638111	Statement	","	881:52:24998:24998	9637354	13	True				
ANR	9638112	Statement	correct	881:54:25000:25006	9637354	14	True				
ANR	9638113	Statement	","	881:61:25007:25007	9637354	15	True				
ANR	9638114	Statement	error	881:63:25009:25013	9637354	16	True				
ANR	9638115	Statement	)	881:68:25014:25014	9637354	17	True				
ANR	9638116	ExpressionStatement		881:69:25015:25015	9637354	18	True				
ANR	9638117	IfStatement	if ( ! silent )		9637354	14					
ANR	9638118	Condition	! silent	885:10:25047:25053	9637354	0	True				
ANR	9638119	UnaryOperationExpression	! silent		9637354	0					
ANR	9638120	UnaryOperator	!		9637354	0					
ANR	9638121	Identifier	silent		9637354	1					
ANR	9638122	ExpressionStatement	"printf ( ""maximum 16-bit exp error = %f\\n"" , maxerr )"	886:9:25065:25114	9637354	1	True				
ANR	9638123	CallExpression	"printf ( ""maximum 16-bit exp error = %f\\n"" , maxerr )"		9637354	0					
ANR	9638124	Callee	printf		9637354	0					
ANR	9638125	Identifier	printf		9637354	0					
ANR	9638126	ArgumentList	"""maximum 16-bit exp error = %f\\n"""		9637354	1					
ANR	9638127	Argument	"""maximum 16-bit exp error = %f\\n"""		9637354	0					
ANR	9638128	PrimaryExpression	"""maximum 16-bit exp error = %f\\n"""		9637354	0					
ANR	9638129	Argument	maxerr		9637354	1					
ANR	9638130	Identifier	maxerr		9637354	0					
ANR	9638131	ForStatement	for ( i = 0 ; i < 9 ; ++ i )		9637354	5					
ANR	9638132	ForInit	i = 0 ;	890:8:25191:25194	9637354	0	True				
ANR	9638133	AssignmentExpression	i = 0		9637354	0		=			
ANR	9638134	Identifier	i		9637354	0					
ANR	9638135	PrimaryExpression	0		9637354	1					
ANR	9638136	Condition	i < 9	890:13:25196:25198	9637354	1	True				
ANR	9638137	RelationalExpression	i < 9		9637354	0		<			
ANR	9638138	Identifier	i		9637354	0					
ANR	9638139	PrimaryExpression	9		9637354	1					
ANR	9638140	UnaryExpression	++ i	890:18:25201:25203	9637354	2	True				
ANR	9638141	IncDec	++		9637354	0					
ANR	9638142	Identifier	i		9637354	1					
ANR	9638143	CompoundStatement		125:6:3648:3694	9637354	3					
ANR	9638144	IdentifierDeclStatement	unsigned j ;	892:6:25217:25227	9637354	0	True				
ANR	9638145	IdentifierDecl	j		9637354	0					
ANR	9638146	IdentifierDeclType	unsigned		9637354	0					
ANR	9638147	Identifier	j		9637354	1					
ANR	9638148	IdentifierDeclStatement	double g = gamma [ i ] ;	893:6:25235:25254	9637354	1	True				
ANR	9638149	IdentifierDecl	g = gamma [ i ]		9637354	0					
ANR	9638150	IdentifierDeclType	double		9637354	0					
ANR	9638151	Identifier	g		9637354	1					
ANR	9638152	AssignmentExpression	g = gamma [ i ]		9637354	2		=			
ANR	9638153	Identifier	g		9637354	0					
ANR	9638154	ArrayIndexing	gamma [ i ]		9637354	1					
ANR	9638155	Identifier	gamma		9637354	0					
ANR	9638156	Identifier	i		9637354	1					
ANR	9638157	IdentifierDeclStatement	png_fixed_point gfp = floor ( g * PNG_FP_1 + .5 ) ;	894:6:25262:25308	9637354	2	True				
ANR	9638158	IdentifierDecl	gfp = floor ( g * PNG_FP_1 + .5 )		9637354	0					
ANR	9638159	IdentifierDeclType	png_fixed_point		9637354	0					
ANR	9638160	Identifier	gfp		9637354	1					
ANR	9638161	AssignmentExpression	gfp = floor ( g * PNG_FP_1 + .5 )		9637354	2		=			
ANR	9638162	Identifier	gfp		9637354	0					
ANR	9638163	CallExpression	floor ( g * PNG_FP_1 + .5 )		9637354	1					
ANR	9638164	Callee	floor		9637354	0					
ANR	9638165	Identifier	floor		9637354	0					
ANR	9638166	ArgumentList	g * PNG_FP_1 + .5		9637354	1					
ANR	9638167	Argument	g * PNG_FP_1 + .5		9637354	0					
ANR	9638168	AdditiveExpression	g * PNG_FP_1 + .5		9637354	0		+			
ANR	9638169	MultiplicativeExpression	g * PNG_FP_1		9637354	0		*			
ANR	9638170	Identifier	g		9637354	0					
ANR	9638171	Identifier	PNG_FP_1		9637354	1					
ANR	9638172	PrimaryExpression	.5		9637354	1					
ANR	9638173	IfStatement	if ( ! silent )		9637354	3					
ANR	9638174	Condition	! silent	896:10:25321:25327	9637354	0	True				
ANR	9638175	UnaryOperationExpression	! silent		9637354	0					
ANR	9638176	UnaryOperator	!		9637354	0					
ANR	9638177	Identifier	silent		9637354	1					
ANR	9638178	ExpressionStatement	"printf ( ""Test gamma %f\\n"" , g )"	897:9:25339:25367	9637354	1	True				
ANR	9638179	CallExpression	"printf ( ""Test gamma %f\\n"" , g )"		9637354	0					
ANR	9638180	Callee	printf		9637354	0					
ANR	9638181	Identifier	printf		9637354	0					
ANR	9638182	ArgumentList	"""Test gamma %f\\n"""		9637354	1					
ANR	9638183	Argument	"""Test gamma %f\\n"""		9637354	0					
ANR	9638184	PrimaryExpression	"""Test gamma %f\\n"""		9637354	0					
ANR	9638185	Argument	g		9637354	1					
ANR	9638186	Identifier	g		9637354	0					
ANR	9638187	ExpressionStatement	maxerr = 0	899:6:25376:25386	9637354	4	True				
ANR	9638188	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9638189	Identifier	maxerr		9637354	0					
ANR	9638190	PrimaryExpression	0		9637354	1					
ANR	9638191	ForStatement	for ( j = 0 ; j < 256 ; ++ j )		9637354	5					
ANR	9638192	ForInit	j = 0 ;	900:11:25399:25402	9637354	0	True				
ANR	9638193	AssignmentExpression	j = 0		9637354	0		=			
ANR	9638194	Identifier	j		9637354	0					
ANR	9638195	PrimaryExpression	0		9637354	1					
ANR	9638196	Condition	j < 256	900:16:25404:25408	9637354	1	True				
ANR	9638197	RelationalExpression	j < 256		9637354	0		<			
ANR	9638198	Identifier	j		9637354	0					
ANR	9638199	PrimaryExpression	256		9637354	1					
ANR	9638200	UnaryExpression	++ j	900:23:25411:25413	9637354	2	True				
ANR	9638201	IncDec	++		9637354	0					
ANR	9638202	Identifier	j		9637354	1					
ANR	9638203	CompoundStatement		135:9:3923:3951	9637354	3					
ANR	9638204	IdentifierDeclStatement	"double correct = pow ( j / 255. , g ) * 255 ;"	902:9:25433:25470	9637354	0	True				
ANR	9638205	IdentifierDecl	"correct = pow ( j / 255. , g ) * 255"		9637354	0					
ANR	9638206	IdentifierDeclType	double		9637354	0					
ANR	9638207	Identifier	correct		9637354	1					
ANR	9638208	AssignmentExpression	"correct = pow ( j / 255. , g ) * 255"		9637354	2		=			
ANR	9638209	Identifier	correct		9637354	0					
ANR	9638210	MultiplicativeExpression	"pow ( j / 255. , g ) * 255"		9637354	1		*			
ANR	9638211	CallExpression	"pow ( j / 255. , g )"		9637354	0					
ANR	9638212	Callee	pow		9637354	0					
ANR	9638213	Identifier	pow		9637354	0					
ANR	9638214	ArgumentList	j / 255.		9637354	1					
ANR	9638215	Argument	j / 255.		9637354	0					
ANR	9638216	MultiplicativeExpression	j / 255.		9637354	0		/			
ANR	9638217	Identifier	j		9637354	0					
ANR	9638218	PrimaryExpression	255.		9637354	1					
ANR	9638219	Argument	g		9637354	1					
ANR	9638220	Identifier	g		9637354	0					
ANR	9638221	PrimaryExpression	255		9637354	1					
ANR	9638222	IdentifierDeclStatement	"png_byte out = png_gamma_8bit_correct ( j , gfp ) ;"	903:9:25481:25526	9637354	1	True				
ANR	9638223	IdentifierDecl	"out = png_gamma_8bit_correct ( j , gfp )"		9637354	0					
ANR	9638224	IdentifierDeclType	png_byte		9637354	0					
ANR	9638225	Identifier	out		9637354	1					
ANR	9638226	AssignmentExpression	"out = png_gamma_8bit_correct ( j , gfp )"		9637354	2		=			
ANR	9638227	Identifier	out		9637354	0					
ANR	9638228	CallExpression	"png_gamma_8bit_correct ( j , gfp )"		9637354	1					
ANR	9638229	Callee	png_gamma_8bit_correct		9637354	0					
ANR	9638230	Identifier	png_gamma_8bit_correct		9637354	0					
ANR	9638231	ArgumentList	j		9637354	1					
ANR	9638232	Argument	j		9637354	0					
ANR	9638233	Identifier	j		9637354	0					
ANR	9638234	Argument	gfp		9637354	1					
ANR	9638235	Identifier	gfp		9637354	0					
ANR	9638236	IdentifierDeclStatement	double error = out - correct ;	904:9:25537:25565	9637354	2	True				
ANR	9638237	IdentifierDecl	error = out - correct		9637354	0					
ANR	9638238	IdentifierDeclType	double		9637354	0					
ANR	9638239	Identifier	error		9637354	1					
ANR	9638240	AssignmentExpression	error = out - correct		9637354	2		=			
ANR	9638241	Identifier	error		9637354	0					
ANR	9638242	AdditiveExpression	out - correct		9637354	1		-			
ANR	9638243	Identifier	out		9637354	0					
ANR	9638244	Identifier	correct		9637354	1					
ANR	9638245	IfStatement	if ( fabs ( error ) > maxerr )		9637354	3					
ANR	9638246	Condition	fabs ( error ) > maxerr	906:13:25581:25600	9637354	0	True				
ANR	9638247	RelationalExpression	fabs ( error ) > maxerr		9637354	0		>			
ANR	9638248	CallExpression	fabs ( error )		9637354	0					
ANR	9638249	Callee	fabs		9637354	0					
ANR	9638250	Identifier	fabs		9637354	0					
ANR	9638251	ArgumentList	error		9637354	1					
ANR	9638252	Argument	error		9637354	0					
ANR	9638253	Identifier	error		9637354	0					
ANR	9638254	Identifier	maxerr		9637354	1					
ANR	9638255	ExpressionStatement	maxerr = fabs ( error )	907:12:25615:25635	9637354	1	True				
ANR	9638256	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9638257	Identifier	maxerr		9637354	0					
ANR	9638258	CallExpression	fabs ( error )		9637354	1					
ANR	9638259	Callee	fabs		9637354	0					
ANR	9638260	Identifier	fabs		9637354	0					
ANR	9638261	ArgumentList	error		9637354	1					
ANR	9638262	Argument	error		9637354	0					
ANR	9638263	Identifier	error		9637354	0					
ANR	9638264	IfStatement	if ( out != floor ( correct + .5 ) )		9637354	4					
ANR	9638265	Condition	out != floor ( correct + .5 )	908:13:25650:25673	9637354	0	True				
ANR	9638266	EqualityExpression	out != floor ( correct + .5 )		9637354	0		!=			
ANR	9638267	Identifier	out		9637354	0					
ANR	9638268	CallExpression	floor ( correct + .5 )		9637354	1					
ANR	9638269	Callee	floor		9637354	0					
ANR	9638270	Identifier	floor		9637354	0					
ANR	9638271	ArgumentList	correct + .5		9637354	1					
ANR	9638272	Argument	correct + .5		9637354	0					
ANR	9638273	AdditiveExpression	correct + .5		9637354	0		+			
ANR	9638274	Identifier	correct		9637354	0					
ANR	9638275	PrimaryExpression	.5		9637354	1					
ANR	9638276	CompoundStatement		140:9:4071:4071	9637354	1					
ANR	9638277	ExpressionStatement	"fprintf ( stderr , ""8bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"	910:12:25699:25803	9637354	0	True				
ANR	9638278	CallExpression	"fprintf ( stderr , ""8bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"		9637354	0					
ANR	9638279	Callee	fprintf		9637354	0					
ANR	9638280	Identifier	fprintf		9637354	0					
ANR	9638281	ArgumentList	stderr		9637354	1					
ANR	9638282	Argument	stderr		9637354	0					
ANR	9638283	Identifier	stderr		9637354	0					
ANR	9638284	Argument	"""8bit %d ^ %f: got %d expected %f error %f\\n"""		9637354	1					
ANR	9638285	PrimaryExpression	"""8bit %d ^ %f: got %d expected %f error %f\\n"""		9637354	0					
ANR	9638286	Argument	j		9637354	2					
ANR	9638287	Identifier	j		9637354	0					
ANR	9638288	Argument	g		9637354	3					
ANR	9638289	Identifier	g		9637354	0					
ANR	9638290	Argument	out		9637354	4					
ANR	9638291	Identifier	out		9637354	0					
ANR	9638292	Argument	correct		9637354	5					
ANR	9638293	Identifier	correct		9637354	0					
ANR	9638294	Argument	error		9637354	6					
ANR	9638295	Identifier	error		9637354	0					
ANR	9638296	IfStatement	if ( ! silent )		9637354	6					
ANR	9638297	Condition	! silent	915:10:25835:25841	9637354	0	True				
ANR	9638298	UnaryOperationExpression	! silent		9637354	0					
ANR	9638299	UnaryOperator	!		9637354	0					
ANR	9638300	Identifier	silent		9637354	1					
ANR	9638301	ExpressionStatement	"printf ( ""gamma %f: maximum 8-bit error %f\\n"" , g , maxerr )"	916:9:25853:25908	9637354	1	True				
ANR	9638302	CallExpression	"printf ( ""gamma %f: maximum 8-bit error %f\\n"" , g , maxerr )"		9637354	0					
ANR	9638303	Callee	printf		9637354	0					
ANR	9638304	Identifier	printf		9637354	0					
ANR	9638305	ArgumentList	"""gamma %f: maximum 8-bit error %f\\n"""		9637354	1					
ANR	9638306	Argument	"""gamma %f: maximum 8-bit error %f\\n"""		9637354	0					
ANR	9638307	PrimaryExpression	"""gamma %f: maximum 8-bit error %f\\n"""		9637354	0					
ANR	9638308	Argument	g		9637354	1					
ANR	9638309	Identifier	g		9637354	0					
ANR	9638310	Argument	maxerr		9637354	2					
ANR	9638311	Identifier	maxerr		9637354	0					
ANR	9638312	ExpressionStatement	maxerr = 0	918:6:25917:25927	9637354	7	True				
ANR	9638313	AssignmentExpression	maxerr = 0		9637354	0		=			
ANR	9638314	Identifier	maxerr		9637354	0					
ANR	9638315	PrimaryExpression	0		9637354	1					
ANR	9638316	ForStatement	for ( j = 0 ; j < 65536 ; ++ j )		9637354	8					
ANR	9638317	ForInit	j = 0 ;	919:11:25940:25943	9637354	0	True				
ANR	9638318	AssignmentExpression	j = 0		9637354	0		=			
ANR	9638319	Identifier	j		9637354	0					
ANR	9638320	PrimaryExpression	0		9637354	1					
ANR	9638321	Condition	j < 65536	919:16:25945:25951	9637354	1	True				
ANR	9638322	RelationalExpression	j < 65536		9637354	0		<			
ANR	9638323	Identifier	j		9637354	0					
ANR	9638324	PrimaryExpression	65536		9637354	1					
ANR	9638325	UnaryExpression	++ j	919:25:25954:25956	9637354	2	True				
ANR	9638326	IncDec	++		9637354	0					
ANR	9638327	Identifier	j		9637354	1					
ANR	9638328	CompoundStatement		154:9:4474:4502	9637354	3					
ANR	9638329	IdentifierDeclStatement	"double correct = pow ( j / 65535. , g ) * 65535 ;"	921:9:25976:26017	9637354	0	True				
ANR	9638330	IdentifierDecl	"correct = pow ( j / 65535. , g ) * 65535"		9637354	0					
ANR	9638331	IdentifierDeclType	double		9637354	0					
ANR	9638332	Identifier	correct		9637354	1					
ANR	9638333	AssignmentExpression	"correct = pow ( j / 65535. , g ) * 65535"		9637354	2		=			
ANR	9638334	Identifier	correct		9637354	0					
ANR	9638335	MultiplicativeExpression	"pow ( j / 65535. , g ) * 65535"		9637354	1		*			
ANR	9638336	CallExpression	"pow ( j / 65535. , g )"		9637354	0					
ANR	9638337	Callee	pow		9637354	0					
ANR	9638338	Identifier	pow		9637354	0					
ANR	9638339	ArgumentList	j / 65535.		9637354	1					
ANR	9638340	Argument	j / 65535.		9637354	0					
ANR	9638341	MultiplicativeExpression	j / 65535.		9637354	0		/			
ANR	9638342	Identifier	j		9637354	0					
ANR	9638343	PrimaryExpression	65535.		9637354	1					
ANR	9638344	Argument	g		9637354	1					
ANR	9638345	Identifier	g		9637354	0					
ANR	9638346	PrimaryExpression	65535		9637354	1					
ANR	9638347	IdentifierDeclStatement	"png_uint_16 out = png_gamma_16bit_correct ( j , gfp ) ;"	922:9:26028:26077	9637354	1	True				
ANR	9638348	IdentifierDecl	"out = png_gamma_16bit_correct ( j , gfp )"		9637354	0					
ANR	9638349	IdentifierDeclType	png_uint_16		9637354	0					
ANR	9638350	Identifier	out		9637354	1					
ANR	9638351	AssignmentExpression	"out = png_gamma_16bit_correct ( j , gfp )"		9637354	2		=			
ANR	9638352	Identifier	out		9637354	0					
ANR	9638353	CallExpression	"png_gamma_16bit_correct ( j , gfp )"		9637354	1					
ANR	9638354	Callee	png_gamma_16bit_correct		9637354	0					
ANR	9638355	Identifier	png_gamma_16bit_correct		9637354	0					
ANR	9638356	ArgumentList	j		9637354	1					
ANR	9638357	Argument	j		9637354	0					
ANR	9638358	Identifier	j		9637354	0					
ANR	9638359	Argument	gfp		9637354	1					
ANR	9638360	Identifier	gfp		9637354	0					
ANR	9638361	IdentifierDeclStatement	double error = out - correct ;	923:9:26088:26116	9637354	2	True				
ANR	9638362	IdentifierDecl	error = out - correct		9637354	0					
ANR	9638363	IdentifierDeclType	double		9637354	0					
ANR	9638364	Identifier	error		9637354	1					
ANR	9638365	AssignmentExpression	error = out - correct		9637354	2		=			
ANR	9638366	Identifier	error		9637354	0					
ANR	9638367	AdditiveExpression	out - correct		9637354	1		-			
ANR	9638368	Identifier	out		9637354	0					
ANR	9638369	Identifier	correct		9637354	1					
ANR	9638370	IfStatement	if ( fabs ( error ) > maxerr )		9637354	3					
ANR	9638371	Condition	fabs ( error ) > maxerr	925:13:26132:26151	9637354	0	True				
ANR	9638372	RelationalExpression	fabs ( error ) > maxerr		9637354	0		>			
ANR	9638373	CallExpression	fabs ( error )		9637354	0					
ANR	9638374	Callee	fabs		9637354	0					
ANR	9638375	Identifier	fabs		9637354	0					
ANR	9638376	ArgumentList	error		9637354	1					
ANR	9638377	Argument	error		9637354	0					
ANR	9638378	Identifier	error		9637354	0					
ANR	9638379	Identifier	maxerr		9637354	1					
ANR	9638380	ExpressionStatement	maxerr = fabs ( error )	926:12:26166:26186	9637354	1	True				
ANR	9638381	AssignmentExpression	maxerr = fabs ( error )		9637354	0		=			
ANR	9638382	Identifier	maxerr		9637354	0					
ANR	9638383	CallExpression	fabs ( error )		9637354	1					
ANR	9638384	Callee	fabs		9637354	0					
ANR	9638385	Identifier	fabs		9637354	0					
ANR	9638386	ArgumentList	error		9637354	1					
ANR	9638387	Argument	error		9637354	0					
ANR	9638388	Identifier	error		9637354	0					
ANR	9638389	IfStatement	if ( fabs ( error ) > 1.62 )		9637354	4					
ANR	9638390	Condition	fabs ( error ) > 1.62	927:13:26201:26218	9637354	0	True				
ANR	9638391	RelationalExpression	fabs ( error ) > 1.62		9637354	0		>			
ANR	9638392	CallExpression	fabs ( error )		9637354	0					
ANR	9638393	Callee	fabs		9637354	0					
ANR	9638394	Identifier	fabs		9637354	0					
ANR	9638395	ArgumentList	error		9637354	1					
ANR	9638396	Argument	error		9637354	0					
ANR	9638397	Identifier	error		9637354	0					
ANR	9638398	PrimaryExpression	1.62		9637354	1					
ANR	9638399	CompoundStatement		159:9:4616:4616	9637354	1					
ANR	9638400	ExpressionStatement	"fprintf ( stderr , ""16bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"	929:12:26244:26349	9637354	0	True				
ANR	9638401	CallExpression	"fprintf ( stderr , ""16bit %d ^ %f: got %d expected %f error %f\\n"" , j , g , out , correct , error )"		9637354	0					
ANR	9638402	Callee	fprintf		9637354	0					
ANR	9638403	Identifier	fprintf		9637354	0					
ANR	9638404	ArgumentList	stderr		9637354	1					
ANR	9638405	Argument	stderr		9637354	0					
ANR	9638406	Identifier	stderr		9637354	0					
ANR	9638407	Argument	"""16bit %d ^ %f: got %d expected %f error %f\\n"""		9637354	1					
ANR	9638408	PrimaryExpression	"""16bit %d ^ %f: got %d expected %f error %f\\n"""		9637354	0					
ANR	9638409	Argument	j		9637354	2					
ANR	9638410	Identifier	j		9637354	0					
ANR	9638411	Argument	g		9637354	3					
ANR	9638412	Identifier	g		9637354	0					
ANR	9638413	Argument	out		9637354	4					
ANR	9638414	Identifier	out		9637354	0					
ANR	9638415	Argument	correct		9637354	5					
ANR	9638416	Identifier	correct		9637354	0					
ANR	9638417	Argument	error		9637354	6					
ANR	9638418	Identifier	error		9637354	0					
ANR	9638419	IfStatement	if ( ! silent )		9637354	9					
ANR	9638420	Condition	! silent	934:10:26381:26387	9637354	0	True				
ANR	9638421	UnaryOperationExpression	! silent		9637354	0					
ANR	9638422	UnaryOperator	!		9637354	0					
ANR	9638423	Identifier	silent		9637354	1					
ANR	9638424	ExpressionStatement	"printf ( ""gamma %f: maximum 16-bit error %f\\n"" , g , maxerr )"	935:9:26399:26455	9637354	1	True				
ANR	9638425	CallExpression	"printf ( ""gamma %f: maximum 16-bit error %f\\n"" , g , maxerr )"		9637354	0					
ANR	9638426	Callee	printf		9637354	0					
ANR	9638427	Identifier	printf		9637354	0					
ANR	9638428	ArgumentList	"""gamma %f: maximum 16-bit error %f\\n"""		9637354	1					
ANR	9638429	Argument	"""gamma %f: maximum 16-bit error %f\\n"""		9637354	0					
ANR	9638430	PrimaryExpression	"""gamma %f: maximum 16-bit error %f\\n"""		9637354	0					
ANR	9638431	Argument	g		9637354	1					
ANR	9638432	Identifier	g		9637354	0					
ANR	9638433	Argument	maxerr		9637354	2					
ANR	9638434	Identifier	maxerr		9637354	0					
ANR	9638435	ReturnStatement	return 0 ;	938:3:26466:26474	9637354	6	True				
ANR	9638436	PrimaryExpression	0		9637354	0					
ANR	9638437	ReturnType	int		9637354	1					
ANR	9638438	Identifier	validation_gamma		9637354	2					
ANR	9638439	ParameterList	"int argc , char * * argv"		9637354	3					
ANR	9638440	Parameter	int argc	769:21:21590:21597	9637354	0	True				
ANR	9638441	ParameterType	int		9637354	0					
ANR	9638442	Identifier	argc		9637354	1					
ANR	9638443	Parameter	char * * argv	769:31:21600:21610	9637354	1	True				
ANR	9638444	ParameterType	char * *		9637354	0					
ANR	9638445	Identifier	argv		9637354	1					
ANR	9638446	CFGEntryNode	ENTRY		9637354		True				
ANR	9638447	CFGExitNode	EXIT		9637354		True				
ANR	9638448	Symbol	png_exp		9637354						
ANR	9638449	Symbol	correct		9637354						
ANR	9638450	Symbol	log		9637354						
ANR	9638451	Symbol	png_log8bit		9637354						
ANR	9638452	Symbol	png_exp8bit		9637354						
ANR	9638453	Symbol	* argv		9637354						
ANR	9638454	Symbol	png_log16bit		9637354						
ANR	9638455	Symbol	* gamma		9637354						
ANR	9638456	Symbol	error		9637354						
ANR	9638457	Symbol	argv		9637354						
ANR	9638458	Symbol	maxerr		9637354						
ANR	9638459	Symbol	out		9637354						
ANR	9638460	Symbol	pow		9637354						
ANR	9638461	Symbol	onlygamma		9637354						
ANR	9638462	Symbol	floor		9637354						
ANR	9638463	Symbol	exp		9637354						
ANR	9638464	Symbol	argc		9637354						
ANR	9638465	Symbol	strcmp		9637354						
ANR	9638466	Symbol	silent		9637354						
ANR	9638467	Symbol	fabs		9637354						
ANR	9638468	Symbol	g		9637354						
ANR	9638469	Symbol	i		9637354						
ANR	9638470	Symbol	j		9637354						
ANR	9638471	Symbol	stderr		9637354						
ANR	9638472	Symbol	gfp		9637354						
ANR	9638473	Symbol	* i		9637354						
ANR	9638474	Symbol	png_gamma_8bit_correct		9637354						
ANR	9638475	Symbol	PNG_FP_1		9637354						
ANR	9638476	Symbol	png_gamma_16bit_correct		9637354						
ANR	9638477	Symbol	* ++ argv		9637354						
ANR	9638478	Symbol	png_exp16bit		9637354						
ANR	9638479	Symbol	gamma		9637354						
ANR	9638480	Function	main	955:0:26952:28163							
ANR	9638481	FunctionDef	"main (int argc , char * * argv)"		9638480	0					
ANR	9638482	CompoundStatement		956:0:26984:28163	9638480	0					
ANR	9638483	IdentifierDeclStatement	int count = COUNT ;	957:3:26989:27006	9638480	0	True				
ANR	9638484	IdentifierDecl	count = COUNT		9638480	0					
ANR	9638485	IdentifierDeclType	int		9638480	0					
ANR	9638486	Identifier	count		9638480	1					
ANR	9638487	AssignmentExpression	count = COUNT		9638480	2		=			
ANR	9638488	Identifier	COUNT		9638480	0					
ANR	9638489	Identifier	COUNT		9638480	1					
ANR	9638490	WhileStatement	while ( argc > 1 )		9638480	1					
ANR	9638491	Condition	argc > 1	959:10:27019:27026	9638480	0	True				
ANR	9638492	RelationalExpression	argc > 1		9638480	0		>			
ANR	9638493	Identifier	argc		9638480	0					
ANR	9638494	PrimaryExpression	1		9638480	1					
ANR	9638495	CompoundStatement		5:3:47:47	9638480	1					
ANR	9638496	IfStatement	"if ( argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0 )"		9638480	0					
ANR	9638497	Condition	"argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0"	961:10:27044:27081	9638480	0	True				
ANR	9638498	AndExpression	"argc > 2 && strcmp ( argv [ 1 ] , ""-c"" ) == 0"		9638480	0		&&			
ANR	9638499	RelationalExpression	argc > 2		9638480	0		>			
ANR	9638500	Identifier	argc		9638480	0					
ANR	9638501	PrimaryExpression	2		9638480	1					
ANR	9638502	EqualityExpression	"strcmp ( argv [ 1 ] , ""-c"" ) == 0"		9638480	1		==			
ANR	9638503	CallExpression	"strcmp ( argv [ 1 ] , ""-c"" )"		9638480	0					
ANR	9638504	Callee	strcmp		9638480	0					
ANR	9638505	Identifier	strcmp		9638480	0					
ANR	9638506	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638507	Argument	argv [ 1 ]		9638480	0					
ANR	9638508	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638509	Identifier	argv		9638480	0					
ANR	9638510	PrimaryExpression	1		9638480	1					
ANR	9638511	Argument	"""-c"""		9638480	1					
ANR	9638512	PrimaryExpression	"""-c"""		9638480	0					
ANR	9638513	PrimaryExpression	0		9638480	1					
ANR	9638514	CompoundStatement		7:6:105:105	9638480	1					
ANR	9638515	ExpressionStatement	count = atoi ( argv [ 2 ] )	963:9:27101:27122	9638480	0	True				
ANR	9638516	AssignmentExpression	count = atoi ( argv [ 2 ] )		9638480	0		=			
ANR	9638517	Identifier	count		9638480	0					
ANR	9638518	CallExpression	atoi ( argv [ 2 ] )		9638480	1					
ANR	9638519	Callee	atoi		9638480	0					
ANR	9638520	Identifier	atoi		9638480	0					
ANR	9638521	ArgumentList	argv [ 2 ]		9638480	1					
ANR	9638522	Argument	argv [ 2 ]		9638480	0					
ANR	9638523	ArrayIndexing	argv [ 2 ]		9638480	0					
ANR	9638524	Identifier	argv		9638480	0					
ANR	9638525	PrimaryExpression	2		9638480	1					
ANR	9638526	ExpressionStatement	argc -= 2	964:9:27133:27142	9638480	1	True				
ANR	9638527	AssignmentExpression	argc -= 2		9638480	0		-=			
ANR	9638528	Identifier	argc		9638480	0					
ANR	9638529	PrimaryExpression	2		9638480	1					
ANR	9638530	ExpressionStatement	argv += 2	965:9:27153:27162	9638480	2	True				
ANR	9638531	AssignmentExpression	argv += 2		9638480	0		+=			
ANR	9638532	Identifier	argv		9638480	0					
ANR	9638533	PrimaryExpression	2		9638480	1					
ANR	9638534	ElseStatement	else		9638480	0					
ANR	9638535	IfStatement	"if ( strcmp ( argv [ 1 ] , ""-v"" ) == 0 )"		9638480	0					
ANR	9638536	Condition	"strcmp ( argv [ 1 ] , ""-v"" ) == 0"	968:15:27188:27213	9638480	0	True				
ANR	9638537	EqualityExpression	"strcmp ( argv [ 1 ] , ""-v"" ) == 0"		9638480	0		==			
ANR	9638538	CallExpression	"strcmp ( argv [ 1 ] , ""-v"" )"		9638480	0					
ANR	9638539	Callee	strcmp		9638480	0					
ANR	9638540	Identifier	strcmp		9638480	0					
ANR	9638541	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638542	Argument	argv [ 1 ]		9638480	0					
ANR	9638543	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638544	Identifier	argv		9638480	0					
ANR	9638545	PrimaryExpression	1		9638480	1					
ANR	9638546	Argument	"""-v"""		9638480	1					
ANR	9638547	PrimaryExpression	"""-v"""		9638480	0					
ANR	9638548	PrimaryExpression	0		9638480	1					
ANR	9638549	CompoundStatement		14:6:237:237	9638480	1					
ANR	9638550	ExpressionStatement	++ verbose	970:9:27233:27242	9638480	0	True				
ANR	9638551	UnaryExpression	++ verbose		9638480	0					
ANR	9638552	IncDec	++		9638480	0					
ANR	9638553	Identifier	verbose		9638480	1					
ANR	9638554	ExpressionStatement	-- argc	971:9:27253:27259	9638480	1	True				
ANR	9638555	UnaryExpression	-- argc		9638480	0					
ANR	9638556	IncDec	--		9638480	0					
ANR	9638557	Identifier	argc		9638480	1					
ANR	9638558	ExpressionStatement	++ argv	972:9:27270:27276	9638480	2	True				
ANR	9638559	UnaryExpression	++ argv		9638480	0					
ANR	9638560	IncDec	++		9638480	0					
ANR	9638561	Identifier	argv		9638480	1					
ANR	9638562	ElseStatement	else		9638480	0					
ANR	9638563	BreakStatement	break ;	976:9:27307:27312	9638480	0	True				
ANR	9638564	IfStatement	if ( count > 0 && argc > 1 )		9638480	2					
ANR	9638565	Condition	count > 0 && argc > 1	979:7:27327:27347	9638480	0	True				
ANR	9638566	AndExpression	count > 0 && argc > 1		9638480	0		&&			
ANR	9638567	RelationalExpression	count > 0		9638480	0		>			
ANR	9638568	Identifier	count		9638480	0					
ANR	9638569	PrimaryExpression	0		9638480	1					
ANR	9638570	RelationalExpression	argc > 1		9638480	1		>			
ANR	9638571	Identifier	argc		9638480	0					
ANR	9638572	PrimaryExpression	1		9638480	1					
ANR	9638573	CompoundStatement		25:3:368:368	9638480	1					
ANR	9638574	IfStatement	"if ( strcmp ( argv [ 1 ] , ""ascii"" ) == 0 )"		9638480	0					
ANR	9638575	Condition	"strcmp ( argv [ 1 ] , ""ascii"" ) == 0"	981:10:27365:27393	9638480	0	True				
ANR	9638576	EqualityExpression	"strcmp ( argv [ 1 ] , ""ascii"" ) == 0"		9638480	0		==			
ANR	9638577	CallExpression	"strcmp ( argv [ 1 ] , ""ascii"" )"		9638480	0					
ANR	9638578	Callee	strcmp		9638480	0					
ANR	9638579	Identifier	strcmp		9638480	0					
ANR	9638580	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638581	Argument	argv [ 1 ]		9638480	0					
ANR	9638582	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638583	Identifier	argv		9638480	0					
ANR	9638584	PrimaryExpression	1		9638480	1					
ANR	9638585	Argument	"""ascii"""		9638480	1					
ANR	9638586	PrimaryExpression	"""ascii"""		9638480	0					
ANR	9638587	PrimaryExpression	0		9638480	1					
ANR	9638588	ReturnStatement	"return validation_ascii_to_fp ( count , argc - 1 , argv + 1 ) ;"	982:9:27405:27457	9638480	1	True				
ANR	9638589	CallExpression	"validation_ascii_to_fp ( count , argc - 1 , argv + 1 )"		9638480	0					
ANR	9638590	Callee	validation_ascii_to_fp		9638480	0					
ANR	9638591	Identifier	validation_ascii_to_fp		9638480	0					
ANR	9638592	ArgumentList	count		9638480	1					
ANR	9638593	Argument	count		9638480	0					
ANR	9638594	Identifier	count		9638480	0					
ANR	9638595	Argument	argc - 1		9638480	1					
ANR	9638596	AdditiveExpression	argc - 1		9638480	0		-			
ANR	9638597	Identifier	argc		9638480	0					
ANR	9638598	PrimaryExpression	1		9638480	1					
ANR	9638599	Argument	argv + 1		9638480	2					
ANR	9638600	AdditiveExpression	argv + 1		9638480	0		+			
ANR	9638601	Identifier	argv		9638480	0					
ANR	9638602	PrimaryExpression	1		9638480	1					
ANR	9638603	ElseStatement	else		9638480	0					
ANR	9638604	IfStatement	"if ( strcmp ( argv [ 1 ] , ""checkfp"" ) == 0 )"		9638480	0					
ANR	9638605	Condition	"strcmp ( argv [ 1 ] , ""checkfp"" ) == 0"	983:15:27474:27504	9638480	0	True				
ANR	9638606	EqualityExpression	"strcmp ( argv [ 1 ] , ""checkfp"" ) == 0"		9638480	0		==			
ANR	9638607	CallExpression	"strcmp ( argv [ 1 ] , ""checkfp"" )"		9638480	0					
ANR	9638608	Callee	strcmp		9638480	0					
ANR	9638609	Identifier	strcmp		9638480	0					
ANR	9638610	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638611	Argument	argv [ 1 ]		9638480	0					
ANR	9638612	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638613	Identifier	argv		9638480	0					
ANR	9638614	PrimaryExpression	1		9638480	1					
ANR	9638615	Argument	"""checkfp"""		9638480	1					
ANR	9638616	PrimaryExpression	"""checkfp"""		9638480	0					
ANR	9638617	PrimaryExpression	0		9638480	1					
ANR	9638618	ReturnStatement	"return validation_checkfp ( count , argc - 1 , argv + 1 ) ;"	984:9:27516:27564	9638480	1	True				
ANR	9638619	CallExpression	"validation_checkfp ( count , argc - 1 , argv + 1 )"		9638480	0					
ANR	9638620	Callee	validation_checkfp		9638480	0					
ANR	9638621	Identifier	validation_checkfp		9638480	0					
ANR	9638622	ArgumentList	count		9638480	1					
ANR	9638623	Argument	count		9638480	0					
ANR	9638624	Identifier	count		9638480	0					
ANR	9638625	Argument	argc - 1		9638480	1					
ANR	9638626	AdditiveExpression	argc - 1		9638480	0		-			
ANR	9638627	Identifier	argc		9638480	0					
ANR	9638628	PrimaryExpression	1		9638480	1					
ANR	9638629	Argument	argv + 1		9638480	2					
ANR	9638630	AdditiveExpression	argv + 1		9638480	0		+			
ANR	9638631	Identifier	argv		9638480	0					
ANR	9638632	PrimaryExpression	1		9638480	1					
ANR	9638633	ElseStatement	else		9638480	0					
ANR	9638634	IfStatement	"if ( strcmp ( argv [ 1 ] , ""muldiv"" ) == 0 )"		9638480	0					
ANR	9638635	Condition	"strcmp ( argv [ 1 ] , ""muldiv"" ) == 0"	985:15:27581:27610	9638480	0	True				
ANR	9638636	EqualityExpression	"strcmp ( argv [ 1 ] , ""muldiv"" ) == 0"		9638480	0		==			
ANR	9638637	CallExpression	"strcmp ( argv [ 1 ] , ""muldiv"" )"		9638480	0					
ANR	9638638	Callee	strcmp		9638480	0					
ANR	9638639	Identifier	strcmp		9638480	0					
ANR	9638640	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638641	Argument	argv [ 1 ]		9638480	0					
ANR	9638642	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638643	Identifier	argv		9638480	0					
ANR	9638644	PrimaryExpression	1		9638480	1					
ANR	9638645	Argument	"""muldiv"""		9638480	1					
ANR	9638646	PrimaryExpression	"""muldiv"""		9638480	0					
ANR	9638647	PrimaryExpression	0		9638480	1					
ANR	9638648	ReturnStatement	"return validation_muldiv ( count , argc - 1 , argv + 1 ) ;"	986:9:27622:27669	9638480	1	True				
ANR	9638649	CallExpression	"validation_muldiv ( count , argc - 1 , argv + 1 )"		9638480	0					
ANR	9638650	Callee	validation_muldiv		9638480	0					
ANR	9638651	Identifier	validation_muldiv		9638480	0					
ANR	9638652	ArgumentList	count		9638480	1					
ANR	9638653	Argument	count		9638480	0					
ANR	9638654	Identifier	count		9638480	0					
ANR	9638655	Argument	argc - 1		9638480	1					
ANR	9638656	AdditiveExpression	argc - 1		9638480	0		-			
ANR	9638657	Identifier	argc		9638480	0					
ANR	9638658	PrimaryExpression	1		9638480	1					
ANR	9638659	Argument	argv + 1		9638480	2					
ANR	9638660	AdditiveExpression	argv + 1		9638480	0		+			
ANR	9638661	Identifier	argv		9638480	0					
ANR	9638662	PrimaryExpression	1		9638480	1					
ANR	9638663	ElseStatement	else		9638480	0					
ANR	9638664	IfStatement	"if ( strcmp ( argv [ 1 ] , ""gamma"" ) == 0 )"		9638480	0					
ANR	9638665	Condition	"strcmp ( argv [ 1 ] , ""gamma"" ) == 0"	987:15:27686:27714	9638480	0	True				
ANR	9638666	EqualityExpression	"strcmp ( argv [ 1 ] , ""gamma"" ) == 0"		9638480	0		==			
ANR	9638667	CallExpression	"strcmp ( argv [ 1 ] , ""gamma"" )"		9638480	0					
ANR	9638668	Callee	strcmp		9638480	0					
ANR	9638669	Identifier	strcmp		9638480	0					
ANR	9638670	ArgumentList	argv [ 1 ]		9638480	1					
ANR	9638671	Argument	argv [ 1 ]		9638480	0					
ANR	9638672	ArrayIndexing	argv [ 1 ]		9638480	0					
ANR	9638673	Identifier	argv		9638480	0					
ANR	9638674	PrimaryExpression	1		9638480	1					
ANR	9638675	Argument	"""gamma"""		9638480	1					
ANR	9638676	PrimaryExpression	"""gamma"""		9638480	0					
ANR	9638677	PrimaryExpression	0		9638480	1					
ANR	9638678	ReturnStatement	"return validation_gamma ( argc - 1 , argv + 1 ) ;"	988:9:27726:27765	9638480	1	True				
ANR	9638679	CallExpression	"validation_gamma ( argc - 1 , argv + 1 )"		9638480	0					
ANR	9638680	Callee	validation_gamma		9638480	0					
ANR	9638681	Identifier	validation_gamma		9638480	0					
ANR	9638682	ArgumentList	argc - 1		9638480	1					
ANR	9638683	Argument	argc - 1		9638480	0					
ANR	9638684	AdditiveExpression	argc - 1		9638480	0		-			
ANR	9638685	Identifier	argc		9638480	0					
ANR	9638686	PrimaryExpression	1		9638480	1					
ANR	9638687	Argument	argv + 1		9638480	1					
ANR	9638688	AdditiveExpression	argv + 1		9638480	0		+			
ANR	9638689	Identifier	argv		9638480	0					
ANR	9638690	PrimaryExpression	1		9638480	1					
ANR	9638691	ExpressionStatement	"fprintf ( stderr , ""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"" )"	992:3:27799:27883	9638480	3	True				
ANR	9638692	CallExpression	"fprintf ( stderr , ""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"" )"		9638480	0					
ANR	9638693	Callee	fprintf		9638480	0					
ANR	9638694	Identifier	fprintf		9638480	0					
ANR	9638695	ArgumentList	stderr		9638480	1					
ANR	9638696	Argument	stderr		9638480	0					
ANR	9638697	Identifier	stderr		9638480	0					
ANR	9638698	Argument	"""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"""		9638480	1					
ANR	9638699	PrimaryExpression	"""usage: tarith [-v] [-c count] {ascii,muldiv,gamma} [args]\\n"""		9638480	0					
ANR	9638700	ExpressionStatement	"fprintf ( stderr , "" arguments: ascii [-a (all results)] [-e error%%]\\n"" )"	994:3:27888:27958	9638480	4	True				
ANR	9638701	CallExpression	"fprintf ( stderr , "" arguments: ascii [-a (all results)] [-e error%%]\\n"" )"		9638480	0					
ANR	9638702	Callee	fprintf		9638480	0					
ANR	9638703	Identifier	fprintf		9638480	0					
ANR	9638704	ArgumentList	stderr		9638480	1					
ANR	9638705	Argument	stderr		9638480	0					
ANR	9638706	Identifier	stderr		9638480	0					
ANR	9638707	Argument	""" arguments: ascii [-a (all results)] [-e error%%]\\n"""		9638480	1					
ANR	9638708	PrimaryExpression	""" arguments: ascii [-a (all results)] [-e error%%]\\n"""		9638480	0					
ANR	9638709	ExpressionStatement	"fprintf ( stderr , ""            checkfp [-l max-number-chars]\\n"" )"	995:3:27963:28025	9638480	5	True				
ANR	9638710	CallExpression	"fprintf ( stderr , ""            checkfp [-l max-number-chars]\\n"" )"		9638480	0					
ANR	9638711	Callee	fprintf		9638480	0					
ANR	9638712	Identifier	fprintf		9638480	0					
ANR	9638713	ArgumentList	stderr		9638480	1					
ANR	9638714	Argument	stderr		9638480	0					
ANR	9638715	Identifier	stderr		9638480	0					
ANR	9638716	Argument	"""            checkfp [-l max-number-chars]\\n"""		9638480	1					
ANR	9638717	PrimaryExpression	"""            checkfp [-l max-number-chars]\\n"""		9638480	0					
ANR	9638718	ExpressionStatement	"fprintf ( stderr , ""            muldiv\\n"" )"	996:3:28030:28069	9638480	6	True				
ANR	9638719	CallExpression	"fprintf ( stderr , ""            muldiv\\n"" )"		9638480	0					
ANR	9638720	Callee	fprintf		9638480	0					
ANR	9638721	Identifier	fprintf		9638480	0					
ANR	9638722	ArgumentList	stderr		9638480	1					
ANR	9638723	Argument	stderr		9638480	0					
ANR	9638724	Identifier	stderr		9638480	0					
ANR	9638725	Argument	"""            muldiv\\n"""		9638480	1					
ANR	9638726	PrimaryExpression	"""            muldiv\\n"""		9638480	0					
ANR	9638727	ExpressionStatement	"fprintf ( stderr , ""            gamma -s (silent) -g (only gamma; no log)\\n"" )"	997:3:28074:28148	9638480	7	True				
ANR	9638728	CallExpression	"fprintf ( stderr , ""            gamma -s (silent) -g (only gamma; no log)\\n"" )"		9638480	0					
ANR	9638729	Callee	fprintf		9638480	0					
ANR	9638730	Identifier	fprintf		9638480	0					
ANR	9638731	ArgumentList	stderr		9638480	1					
ANR	9638732	Argument	stderr		9638480	0					
ANR	9638733	Identifier	stderr		9638480	0					
ANR	9638734	Argument	"""            gamma -s (silent) -g (only gamma; no log)\\n"""		9638480	1					
ANR	9638735	PrimaryExpression	"""            gamma -s (silent) -g (only gamma; no log)\\n"""		9638480	0					
ANR	9638736	ReturnStatement	return 1 ;	998:3:28153:28161	9638480	8	True				
ANR	9638737	PrimaryExpression	1		9638480	0					
ANR	9638738	ReturnType	int		9638480	1					
ANR	9638739	Identifier	main		9638480	2					
ANR	9638740	ParameterList	"int argc , char * * argv"		9638480	3					
ANR	9638741	Parameter	int argc	955:9:26961:26968	9638480	0	True				
ANR	9638742	ParameterType	int		9638480	0					
ANR	9638743	Identifier	argc		9638480	1					
ANR	9638744	Parameter	char * * argv	955:19:26971:26981	9638480	1	True				
ANR	9638745	ParameterType	char * *		9638480	0					
ANR	9638746	Identifier	argv		9638480	1					
ANR	9638747	CFGEntryNode	ENTRY		9638480		True				
ANR	9638748	CFGExitNode	EXIT		9638480		True				
ANR	9638749	Symbol	argc		9638480						
ANR	9638750	Symbol	strcmp		9638480						
ANR	9638751	Symbol	atoi		9638480						
ANR	9638752	Symbol	validation_ascii_to_fp		9638480						
ANR	9638753	Symbol	count		9638480						
ANR	9638754	Symbol	validation_gamma		9638480						
ANR	9638755	Symbol	COUNT		9638480						
ANR	9638756	Symbol	* argv		9638480						
ANR	9638757	Symbol	validation_checkfp		9638480						
ANR	9638758	Symbol	validation_muldiv		9638480						
ANR	9638759	Symbol	stderr		9638480						
ANR	9638760	Symbol	argv		9638480						
