command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5077942	File	data/converged/CVE-2018-16863_ghostpdl/gsfcmap1.c								
ANR	5077943	Function	bytes2int	27:0:821:975							
ANR	5077944	FunctionDef	"bytes2int (const byte * p , int n)"		5077943	0					
ANR	5077945	CompoundStatement		29:0:873:975	5077943	0					
ANR	5077946	IdentifierDeclStatement	ulong v = 0 ;	30:4:879:890	5077943	0	True				
ANR	5077947	IdentifierDecl	v = 0		5077943	0					
ANR	5077948	IdentifierDeclType	ulong		5077943	0					
ANR	5077949	Identifier	v		5077943	1					
ANR	5077950	AssignmentExpression	v = 0		5077943	2		=			
ANR	5077951	Identifier	v		5077943	0					
ANR	5077952	PrimaryExpression	0		5077943	1					
ANR	5077953	IdentifierDeclStatement	int i ;	31:4:896:901	5077943	1	True				
ANR	5077954	IdentifierDecl	i		5077943	0					
ANR	5077955	IdentifierDeclType	int		5077943	0					
ANR	5077956	Identifier	i		5077943	1					
ANR	5077957	ForStatement	for ( i = 0 ; i < n ; ++ i )		5077943	2					
ANR	5077958	ForInit	i = 0 ;	33:9:913:918	5077943	0	True				
ANR	5077959	AssignmentExpression	i = 0		5077943	0		=			
ANR	5077960	Identifier	i		5077943	0					
ANR	5077961	PrimaryExpression	0		5077943	1					
ANR	5077962	Condition	i < n	33:16:920:924	5077943	1	True				
ANR	5077963	RelationalExpression	i < n		5077943	0		<			
ANR	5077964	Identifier	i		5077943	0					
ANR	5077965	Identifier	n		5077943	1					
ANR	5077966	UnaryExpression	++ i	33:23:927:929	5077943	2	True				
ANR	5077967	IncDec	++		5077943	0					
ANR	5077968	Identifier	i		5077943	1					
ANR	5077969	ExpressionStatement	v = ( v << 8 ) + p [ i ]	34:8:940:959	5077943	3	True				
ANR	5077970	AssignmentExpression	v = ( v << 8 ) + p [ i ]		5077943	0		=			
ANR	5077971	Identifier	v		5077943	0					
ANR	5077972	AdditiveExpression	( v << 8 ) + p [ i ]		5077943	1		+			
ANR	5077973	ShiftExpression	v << 8		5077943	0		<<			
ANR	5077974	Identifier	v		5077943	0					
ANR	5077975	PrimaryExpression	8		5077943	1					
ANR	5077976	ArrayIndexing	p [ i ]		5077943	1					
ANR	5077977	Identifier	p		5077943	0					
ANR	5077978	Identifier	i		5077943	1					
ANR	5077979	ReturnStatement	return v ;	35:4:965:973	5077943	3	True				
ANR	5077980	Identifier	v		5077943	0					
ANR	5077981	ReturnType	static inline ulong		5077943	1					
ANR	5077982	Identifier	bytes2int		5077943	2					
ANR	5077983	ParameterList	"const byte * p , int n"		5077943	3					
ANR	5077984	Parameter	const byte * p	28:10:851:863	5077943	0	True				
ANR	5077985	ParameterType	const byte *		5077943	0					
ANR	5077986	Identifier	p		5077943	1					
ANR	5077987	Parameter	int n	28:25:866:870	5077943	1	True				
ANR	5077988	ParameterType	int		5077943	0					
ANR	5077989	Identifier	n		5077943	1					
ANR	5077990	CFGEntryNode	ENTRY		5077943		True				
ANR	5077991	CFGExitNode	EXIT		5077943		True				
ANR	5077992	Symbol	p		5077943						
ANR	5077993	Symbol	* i		5077943						
ANR	5077994	Symbol	v		5077943						
ANR	5077995	Symbol	i		5077943						
ANR	5077996	Symbol	* p		5077943						
ANR	5077997	Symbol	n		5077943						
ANR	5077998	DeclStmt									
ANR	5077999	Decl							const byte	const byte *	pv
ANR	5078000	DeclStmt									
ANR	5078001	Decl							int	int	size
ANR	5078002	DeclStmt									
ANR	5078003	Decl							int	int	k
ANR	5078004	DeclStmt									
ANR	5078005	Decl							gs_glyph	gs_glyph	glyph
ANR	5078006	DeclStmt									
ANR	5078007	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_cmap_lookup_range
ANR	5078008	Function	print_msg_str_in_range	81:0:2208:2578							
ANR	5078009	FunctionDef	"print_msg_str_in_range (const byte * str , const byte * key_lo , const byte * key_hi , int key_size)"		5078008	0					
ANR	5078010	CompoundStatement		85:0:2360:2578	5078008	0					
ANR	5078011	ExpressionStatement	"debug_print_string_hex_nomem ( str , key_size )"	86:4:2366:2409	5078008	0	True				
ANR	5078012	CallExpression	"debug_print_string_hex_nomem ( str , key_size )"		5078008	0					
ANR	5078013	Callee	debug_print_string_hex_nomem		5078008	0					
ANR	5078014	Identifier	debug_print_string_hex_nomem		5078008	0					
ANR	5078015	ArgumentList	str		5078008	1					
ANR	5078016	Argument	str		5078008	0					
ANR	5078017	Identifier	str		5078008	0					
ANR	5078018	Argument	key_size		5078008	1					
ANR	5078019	Identifier	key_size		5078008	0					
ANR	5078020	ExpressionStatement	"dlprintf ( "" in "" )"	87:4:2415:2431	5078008	1	True				
ANR	5078021	CallExpression	"dlprintf ( "" in "" )"		5078008	0					
ANR	5078022	Callee	dlprintf		5078008	0					
ANR	5078023	Identifier	dlprintf		5078008	0					
ANR	5078024	ArgumentList	""" in """		5078008	1					
ANR	5078025	Argument	""" in """		5078008	0					
ANR	5078026	PrimaryExpression	""" in """		5078008	0					
ANR	5078027	ExpressionStatement	"debug_print_string_hex_nomem ( key_lo , key_size )"	88:4:2437:2483	5078008	2	True				
ANR	5078028	CallExpression	"debug_print_string_hex_nomem ( key_lo , key_size )"		5078008	0					
ANR	5078029	Callee	debug_print_string_hex_nomem		5078008	0					
ANR	5078030	Identifier	debug_print_string_hex_nomem		5078008	0					
ANR	5078031	ArgumentList	key_lo		5078008	1					
ANR	5078032	Argument	key_lo		5078008	0					
ANR	5078033	Identifier	key_lo		5078008	0					
ANR	5078034	Argument	key_size		5078008	1					
ANR	5078035	Identifier	key_size		5078008	0					
ANR	5078036	ExpressionStatement	"dlprintf ( "" - "" )"	89:4:2489:2504	5078008	3	True				
ANR	5078037	CallExpression	"dlprintf ( "" - "" )"		5078008	0					
ANR	5078038	Callee	dlprintf		5078008	0					
ANR	5078039	Identifier	dlprintf		5078008	0					
ANR	5078040	ArgumentList	""" - """		5078008	1					
ANR	5078041	Argument	""" - """		5078008	0					
ANR	5078042	PrimaryExpression	""" - """		5078008	0					
ANR	5078043	ExpressionStatement	"debug_print_string_hex_nomem ( key_hi , key_size )"	90:4:2510:2556	5078008	4	True				
ANR	5078044	CallExpression	"debug_print_string_hex_nomem ( key_hi , key_size )"		5078008	0					
ANR	5078045	Callee	debug_print_string_hex_nomem		5078008	0					
ANR	5078046	Identifier	debug_print_string_hex_nomem		5078008	0					
ANR	5078047	ArgumentList	key_hi		5078008	1					
ANR	5078048	Argument	key_hi		5078008	0					
ANR	5078049	Identifier	key_hi		5078008	0					
ANR	5078050	Argument	key_size		5078008	1					
ANR	5078051	Identifier	key_size		5078008	0					
ANR	5078052	ExpressionStatement	"dlprintf ( ""\\n"" )"	91:4:2562:2576	5078008	5	True				
ANR	5078053	CallExpression	"dlprintf ( ""\\n"" )"		5078008	0					
ANR	5078054	Callee	dlprintf		5078008	0					
ANR	5078055	Identifier	dlprintf		5078008	0					
ANR	5078056	ArgumentList	"""\\n"""		5078008	1					
ANR	5078057	Argument	"""\\n"""		5078008	0					
ANR	5078058	PrimaryExpression	"""\\n"""		5078008	0					
ANR	5078059	ReturnType	static void		5078008	1					
ANR	5078060	Identifier	print_msg_str_in_range		5078008	2					
ANR	5078061	ParameterList	"const byte * str , const byte * key_lo , const byte * key_hi , int key_size"		5078008	3					
ANR	5078062	Parameter	const byte * str	82:23:2243:2257	5078008	0	True				
ANR	5078063	ParameterType	const byte *		5078008	0					
ANR	5078064	Identifier	str		5078008	1					
ANR	5078065	Parameter	const byte * key_lo	83:23:2283:2300	5078008	1	True				
ANR	5078066	ParameterType	const byte *		5078008	0					
ANR	5078067	Identifier	key_lo		5078008	1					
ANR	5078068	Parameter	const byte * key_hi	83:43:2303:2320	5078008	2	True				
ANR	5078069	ParameterType	const byte *		5078008	0					
ANR	5078070	Identifier	key_hi		5078008	1					
ANR	5078071	Parameter	int key_size	84:23:2346:2357	5078008	3	True				
ANR	5078072	ParameterType	int		5078008	0					
ANR	5078073	Identifier	key_size		5078008	1					
ANR	5078074	CFGEntryNode	ENTRY		5078008		True				
ANR	5078075	CFGExitNode	EXIT		5078008		True				
ANR	5078076	Symbol	str		5078008						
ANR	5078077	Symbol	key_lo		5078008						
ANR	5078078	Symbol	key_hi		5078008						
ANR	5078079	Symbol	key_size		5078008						
ANR	5078080	Function	gs_cmap_get_shortest_chr	96:0:2595:3163							
ANR	5078081	FunctionDef	"gs_cmap_get_shortest_chr (const gx_code_map_t * pcmap , uint * pfidx)"		5078080	0					
ANR	5078082	CompoundStatement		98:0:2673:3163	5078080	0					
ANR	5078083	IdentifierDeclStatement	int i ;	99:4:2679:2684	5078080	0	True				
ANR	5078084	IdentifierDecl	i		5078080	0					
ANR	5078085	IdentifierDeclType	int		5078080	0					
ANR	5078086	Identifier	i		5078080	1					
ANR	5078087	IdentifierDeclStatement	int len_shortest = MAX_CMAP_CODE_SIZE ;	100:4:2690:2727	5078080	1	True				
ANR	5078088	IdentifierDecl	len_shortest = MAX_CMAP_CODE_SIZE		5078080	0					
ANR	5078089	IdentifierDeclType	int		5078080	0					
ANR	5078090	Identifier	len_shortest		5078080	1					
ANR	5078091	AssignmentExpression	len_shortest = MAX_CMAP_CODE_SIZE		5078080	2		=			
ANR	5078092	Identifier	MAX_CMAP_CODE_SIZE		5078080	0					
ANR	5078093	Identifier	MAX_CMAP_CODE_SIZE		5078080	1					
ANR	5078094	IdentifierDeclStatement	uint fidx_shortest = 0 ;	101:4:2733:2755	5078080	2	True				
ANR	5078095	IdentifierDecl	fidx_shortest = 0		5078080	0					
ANR	5078096	IdentifierDeclType	uint		5078080	0					
ANR	5078097	Identifier	fidx_shortest		5078080	1					
ANR	5078098	AssignmentExpression	fidx_shortest = 0		5078080	2		=			
ANR	5078099	Identifier	fidx_shortest		5078080	0					
ANR	5078100	PrimaryExpression	0		5078080	1					
ANR	5078101	ForStatement	for ( i = pcmap -> num_lookup - 1 ; i >= 0 ; -- i )		5078080	3					
ANR	5078102	ForInit	i = pcmap -> num_lookup - 1 ;	103:9:2802:2827	5078080	0	True				
ANR	5078103	AssignmentExpression	i = pcmap -> num_lookup - 1		5078080	0		=			
ANR	5078104	Identifier	i		5078080	0					
ANR	5078105	AdditiveExpression	pcmap -> num_lookup - 1		5078080	1		-			
ANR	5078106	PtrMemberAccess	pcmap -> num_lookup		5078080	0					
ANR	5078107	Identifier	pcmap		5078080	0					
ANR	5078108	Identifier	num_lookup		5078080	1					
ANR	5078109	PrimaryExpression	1		5078080	1					
ANR	5078110	Condition	i >= 0	103:36:2829:2834	5078080	1	True				
ANR	5078111	RelationalExpression	i >= 0		5078080	0		>=			
ANR	5078112	Identifier	i		5078080	0					
ANR	5078113	PrimaryExpression	0		5078080	1					
ANR	5078114	UnaryExpression	-- i	103:44:2837:2839	5078080	2	True				
ANR	5078115	IncDec	--		5078080	0					
ANR	5078116	Identifier	i		5078080	1					
ANR	5078117	CompoundStatement		7:8:178:232	5078080	3					
ANR	5078118	IdentifierDeclStatement	const gx_cmap_lookup_range_t * pclr = & pcmap -> lookup [ i ] ;	104:8:2852:2906	5078080	0	True				
ANR	5078119	IdentifierDecl	* pclr = & pcmap -> lookup [ i ]		5078080	0					
ANR	5078120	IdentifierDeclType	const gx_cmap_lookup_range_t *		5078080	0					
ANR	5078121	Identifier	pclr		5078080	1					
ANR	5078122	AssignmentExpression	* pclr = & pcmap -> lookup [ i ]		5078080	2		=			
ANR	5078123	Identifier	pclr		5078080	0					
ANR	5078124	UnaryOperationExpression	& pcmap -> lookup [ i ]		5078080	1					
ANR	5078125	UnaryOperator	&		5078080	0					
ANR	5078126	ArrayIndexing	pcmap -> lookup [ i ]		5078080	1					
ANR	5078127	PtrMemberAccess	pcmap -> lookup		5078080	0					
ANR	5078128	Identifier	pcmap		5078080	0					
ANR	5078129	Identifier	lookup		5078080	1					
ANR	5078130	Identifier	i		5078080	1					
ANR	5078131	IfStatement	if ( ( pclr -> key_prefix_size + pclr -> key_size ) <= len_shortest )		5078080	1					
ANR	5078132	Condition	( pclr -> key_prefix_size + pclr -> key_size ) <= len_shortest	105:12:2920:2975	5078080	0	True				
ANR	5078133	RelationalExpression	( pclr -> key_prefix_size + pclr -> key_size ) <= len_shortest		5078080	0		<=			
ANR	5078134	AdditiveExpression	pclr -> key_prefix_size + pclr -> key_size		5078080	0		+			
ANR	5078135	PtrMemberAccess	pclr -> key_prefix_size		5078080	0					
ANR	5078136	Identifier	pclr		5078080	0					
ANR	5078137	Identifier	key_prefix_size		5078080	1					
ANR	5078138	PtrMemberAccess	pclr -> key_size		5078080	1					
ANR	5078139	Identifier	pclr		5078080	0					
ANR	5078140	Identifier	key_size		5078080	1					
ANR	5078141	Identifier	len_shortest		5078080	1					
ANR	5078142	CompoundStatement		8:70:304:304	5078080	1					
ANR	5078143	ExpressionStatement	len_shortest = ( pclr -> key_prefix_size + pclr -> key_size )	106:11:2991:3046	5078080	0	True				
ANR	5078144	AssignmentExpression	len_shortest = ( pclr -> key_prefix_size + pclr -> key_size )		5078080	0		=			
ANR	5078145	Identifier	len_shortest		5078080	0					
ANR	5078146	AdditiveExpression	pclr -> key_prefix_size + pclr -> key_size		5078080	1		+			
ANR	5078147	PtrMemberAccess	pclr -> key_prefix_size		5078080	0					
ANR	5078148	Identifier	pclr		5078080	0					
ANR	5078149	Identifier	key_prefix_size		5078080	1					
ANR	5078150	PtrMemberAccess	pclr -> key_size		5078080	1					
ANR	5078151	Identifier	pclr		5078080	0					
ANR	5078152	Identifier	key_size		5078080	1					
ANR	5078153	ExpressionStatement	fidx_shortest = pclr -> font_index	107:11:3059:3091	5078080	1	True				
ANR	5078154	AssignmentExpression	fidx_shortest = pclr -> font_index		5078080	0		=			
ANR	5078155	Identifier	fidx_shortest		5078080	0					
ANR	5078156	PtrMemberAccess	pclr -> font_index		5078080	1					
ANR	5078157	Identifier	pclr		5078080	0					
ANR	5078158	Identifier	font_index		5078080	1					
ANR	5078159	ExpressionStatement	* pfidx = fidx_shortest	111:4:3114:3136	5078080	4	True				
ANR	5078160	AssignmentExpression	* pfidx = fidx_shortest		5078080	0		=			
ANR	5078161	UnaryOperationExpression	* pfidx		5078080	0					
ANR	5078162	UnaryOperator	*		5078080	0					
ANR	5078163	Identifier	pfidx		5078080	1					
ANR	5078164	Identifier	fidx_shortest		5078080	1					
ANR	5078165	ReturnStatement	return len_shortest ;	112:4:3142:3161	5078080	5	True				
ANR	5078166	Identifier	len_shortest		5078080	0					
ANR	5078167	ReturnType	static int		5078080	1					
ANR	5078168	Identifier	gs_cmap_get_shortest_chr		5078080	2					
ANR	5078169	ParameterList	"const gx_code_map_t * pcmap , uint * pfidx"		5078080	3					
ANR	5078170	Parameter	const gx_code_map_t * pcmap	97:25:2631:2657	5078080	0	True				
ANR	5078171	ParameterType	const gx_code_map_t *		5078080	0					
ANR	5078172	Identifier	pcmap		5078080	1					
ANR	5078173	Parameter	uint * pfidx	97:54:2660:2670	5078080	1	True				
ANR	5078174	ParameterType	uint *		5078080	0					
ANR	5078175	Identifier	pfidx		5078080	1					
ANR	5078176	CFGEntryNode	ENTRY		5078080		True				
ANR	5078177	CFGExitNode	EXIT		5078080		True				
ANR	5078178	Symbol	pcmap -> num_lookup		5078080						
ANR	5078179	Symbol	MAX_CMAP_CODE_SIZE		5078080						
ANR	5078180	Symbol	len_shortest		5078080						
ANR	5078181	Symbol	pclr -> key_prefix_size		5078080						
ANR	5078182	Symbol	i		5078080						
ANR	5078183	Symbol	* pcmap		5078080						
ANR	5078184	Symbol	* pfidx		5078080						
ANR	5078185	Symbol	pclr		5078080						
ANR	5078186	Symbol	* pclr		5078080						
ANR	5078187	Symbol	pcmap		5078080						
ANR	5078188	Symbol	pclr -> font_index		5078080						
ANR	5078189	Symbol	pclr -> key_size		5078080						
ANR	5078190	Symbol	pfidx		5078080						
ANR	5078191	Symbol	fidx_shortest		5078080						
ANR	5078192	Symbol	pcmap -> lookup		5078080						
ANR	5078193	Function	gs_multidim_CID_offset	121:0:3338:4031							
ANR	5078194	FunctionDef	"gs_multidim_CID_offset (const byte * key_str , const byte * key_lo , const byte * key_hi , int key_size)"		5078193	0					
ANR	5078195	CompoundStatement		125:0:3495:4031	5078193	0					
ANR	5078196	IdentifierDeclStatement	int i ;	127:4:3502:3507	5078193	0	True				
ANR	5078197	IdentifierDecl	i		5078193	0					
ANR	5078198	IdentifierDeclType	int		5078193	0					
ANR	5078199	Identifier	i		5078193	1					
ANR	5078200	IdentifierDeclStatement	int CID_offset = 0 ;	128:4:3547:3565	5078193	1	True				
ANR	5078201	IdentifierDecl	CID_offset = 0		5078193	0					
ANR	5078202	IdentifierDeclType	int		5078193	0					
ANR	5078203	Identifier	CID_offset		5078193	1					
ANR	5078204	AssignmentExpression	CID_offset = 0		5078193	2		=			
ANR	5078205	Identifier	CID_offset		5078193	0					
ANR	5078206	PrimaryExpression	0		5078193	1					
ANR	5078207	IfStatement	if ( gs_debug_c ( 'J' ) )		5078193	2					
ANR	5078208	Condition	gs_debug_c ( 'J' )	132:8:3611:3625	5078193	0	True				
ANR	5078209	CallExpression	gs_debug_c ( 'J' )		5078193	0					
ANR	5078210	Callee	gs_debug_c		5078193	0					
ANR	5078211	Identifier	gs_debug_c		5078193	0					
ANR	5078212	ArgumentList	'J'		5078193	1					
ANR	5078213	Argument	'J'		5078193	0					
ANR	5078214	PrimaryExpression	'J'		5078193	0					
ANR	5078215	CompoundStatement		8:25:132:132	5078193	1					
ANR	5078216	ExpressionStatement	"dlprintf ( ""[J]gmCo()         calc CID_offset for 0x"" )"	133:8:3638:3690	5078193	0	True				
ANR	5078217	CallExpression	"dlprintf ( ""[J]gmCo()         calc CID_offset for 0x"" )"		5078193	0					
ANR	5078218	Callee	dlprintf		5078193	0					
ANR	5078219	Identifier	dlprintf		5078193	0					
ANR	5078220	ArgumentList	"""[J]gmCo()         calc CID_offset for 0x"""		5078193	1					
ANR	5078221	Argument	"""[J]gmCo()         calc CID_offset for 0x"""		5078193	0					
ANR	5078222	PrimaryExpression	"""[J]gmCo()         calc CID_offset for 0x"""		5078193	0					
ANR	5078223	ExpressionStatement	"print_msg_str_in_range ( key_str , key_lo , key_hi , key_size )"	134:8:3700:3757	5078193	1	True				
ANR	5078224	CallExpression	"print_msg_str_in_range ( key_str , key_lo , key_hi , key_size )"		5078193	0					
ANR	5078225	Callee	print_msg_str_in_range		5078193	0					
ANR	5078226	Identifier	print_msg_str_in_range		5078193	0					
ANR	5078227	ArgumentList	key_str		5078193	1					
ANR	5078228	Argument	key_str		5078193	0					
ANR	5078229	Identifier	key_str		5078193	0					
ANR	5078230	Argument	key_lo		5078193	1					
ANR	5078231	Identifier	key_lo		5078193	0					
ANR	5078232	Argument	key_hi		5078193	2					
ANR	5078233	Identifier	key_hi		5078193	0					
ANR	5078234	Argument	key_size		5078193	3					
ANR	5078235	Identifier	key_size		5078193	0					
ANR	5078236	ForStatement	for ( i = 0 ; i < key_size ; i ++ )		5078193	3					
ANR	5078237	ForInit	i = 0 ;	139:9:3789:3794	5078193	0	True				
ANR	5078238	AssignmentExpression	i = 0		5078193	0		=			
ANR	5078239	Identifier	i		5078193	0					
ANR	5078240	PrimaryExpression	0		5078193	1					
ANR	5078241	Condition	i < key_size	139:16:3796:3807	5078193	1	True				
ANR	5078242	RelationalExpression	i < key_size		5078193	0		<			
ANR	5078243	Identifier	i		5078193	0					
ANR	5078244	Identifier	key_size		5078193	1					
ANR	5078245	PostIncDecOperationExpression	i ++	139:30:3810:3812	5078193	2	True				
ANR	5078246	Identifier	i		5078193	0					
ANR	5078247	IncDec	++		5078193	1					
ANR	5078248	ExpressionStatement	CID_offset = CID_offset * ( key_hi [ i ] - key_lo [ i ] + 1 ) + key_str [ i ] - key_lo [ i ]	140:8:3823:3913	5078193	3	True				
ANR	5078249	AssignmentExpression	CID_offset = CID_offset * ( key_hi [ i ] - key_lo [ i ] + 1 ) + key_str [ i ] - key_lo [ i ]		5078193	0		=			
ANR	5078250	Identifier	CID_offset		5078193	0					
ANR	5078251	AdditiveExpression	CID_offset * ( key_hi [ i ] - key_lo [ i ] + 1 ) + key_str [ i ] - key_lo [ i ]		5078193	1		+			
ANR	5078252	MultiplicativeExpression	CID_offset * ( key_hi [ i ] - key_lo [ i ] + 1 )		5078193	0		*			
ANR	5078253	Identifier	CID_offset		5078193	0					
ANR	5078254	AdditiveExpression	key_hi [ i ] - key_lo [ i ] + 1		5078193	1		-			
ANR	5078255	ArrayIndexing	key_hi [ i ]		5078193	0					
ANR	5078256	Identifier	key_hi		5078193	0					
ANR	5078257	Identifier	i		5078193	1					
ANR	5078258	AdditiveExpression	key_lo [ i ] + 1		5078193	1		+			
ANR	5078259	ArrayIndexing	key_lo [ i ]		5078193	0					
ANR	5078260	Identifier	key_lo		5078193	0					
ANR	5078261	Identifier	i		5078193	1					
ANR	5078262	PrimaryExpression	1		5078193	1					
ANR	5078263	AdditiveExpression	key_str [ i ] - key_lo [ i ]		5078193	1		-			
ANR	5078264	ArrayIndexing	key_str [ i ]		5078193	0					
ANR	5078265	Identifier	key_str		5078193	0					
ANR	5078266	Identifier	i		5078193	1					
ANR	5078267	ArrayIndexing	key_lo [ i ]		5078193	1					
ANR	5078268	Identifier	key_lo		5078193	0					
ANR	5078269	Identifier	i		5078193	1					
ANR	5078270	ExpressionStatement	"if_debug1 ( 'J' , ""[J]gmCo()         CID_offset = %d\\n"" , CID_offset )"	144:4:3933:3998	5078193	4	True				
ANR	5078271	CallExpression	"if_debug1 ( 'J' , ""[J]gmCo()         CID_offset = %d\\n"" , CID_offset )"		5078193	0					
ANR	5078272	Callee	if_debug1		5078193	0					
ANR	5078273	Identifier	if_debug1		5078193	0					
ANR	5078274	ArgumentList	'J'		5078193	1					
ANR	5078275	Argument	'J'		5078193	0					
ANR	5078276	PrimaryExpression	'J'		5078193	0					
ANR	5078277	Argument	"""[J]gmCo()         CID_offset = %d\\n"""		5078193	1					
ANR	5078278	PrimaryExpression	"""[J]gmCo()         CID_offset = %d\\n"""		5078193	0					
ANR	5078279	Argument	CID_offset		5078193	2					
ANR	5078280	Identifier	CID_offset		5078193	0					
ANR	5078281	ReturnStatement	return CID_offset ;	147:4:4012:4029	5078193	5	True				
ANR	5078282	Identifier	CID_offset		5078193	0					
ANR	5078283	ReturnType	static int		5078193	1					
ANR	5078284	Identifier	gs_multidim_CID_offset		5078193	2					
ANR	5078285	ParameterList	"const byte * key_str , const byte * key_lo , const byte * key_hi , int key_size"		5078193	3					
ANR	5078286	Parameter	const byte * key_str	122:23:3372:3390	5078193	0	True				
ANR	5078287	ParameterType	const byte *		5078193	0					
ANR	5078288	Identifier	key_str		5078193	1					
ANR	5078289	Parameter	const byte * key_lo	123:24:3417:3434	5078193	1	True				
ANR	5078290	ParameterType	const byte *		5078193	0					
ANR	5078291	Identifier	key_lo		5078193	1					
ANR	5078292	Parameter	const byte * key_hi	123:44:3437:3454	5078193	2	True				
ANR	5078293	ParameterType	const byte *		5078193	0					
ANR	5078294	Identifier	key_hi		5078193	1					
ANR	5078295	Parameter	int key_size	124:24:3481:3492	5078193	3	True				
ANR	5078296	ParameterType	int		5078193	0					
ANR	5078297	Identifier	key_size		5078193	1					
ANR	5078298	CFGEntryNode	ENTRY		5078193		True				
ANR	5078299	CFGExitNode	EXIT		5078193		True				
ANR	5078300	Symbol	* key_hi		5078193						
ANR	5078301	Symbol	* key_str		5078193						
ANR	5078302	Symbol	* i		5078193						
ANR	5078303	Symbol	CID_offset		5078193						
ANR	5078304	Symbol	i		5078193						
ANR	5078305	Symbol	gs_debug_c		5078193						
ANR	5078306	Symbol	key_str		5078193						
ANR	5078307	Symbol	key_lo		5078193						
ANR	5078308	Symbol	* key_lo		5078193						
ANR	5078309	Symbol	key_hi		5078193						
ANR	5078310	Symbol	key_size		5078193						
ANR	5078311	Function	code_map_decode_next_multidim_regime	156:0:4338:11132							
ANR	5078312	FunctionDef	"code_map_decode_next_multidim_regime (const gx_code_map_t * pcmap , const gs_const_string * pstr , uint * pindex , uint * pfidx , gs_char * pchr , gs_glyph * pglyph)"		5078311	0					
ANR	5078313	CompoundStatement		161:0:4572:11132	5078311	0					
ANR	5078314	IdentifierDeclStatement	const byte * str = pstr -> data + * pindex ;	162:4:4578:4616	5078311	0	True				
ANR	5078315	IdentifierDecl	* str = pstr -> data + * pindex		5078311	0					
ANR	5078316	IdentifierDeclType	const byte *		5078311	0					
ANR	5078317	Identifier	str		5078311	1					
ANR	5078318	AssignmentExpression	* str = pstr -> data + * pindex		5078311	2		=			
ANR	5078319	Identifier	str		5078311	0					
ANR	5078320	AdditiveExpression	pstr -> data + * pindex		5078311	1		+			
ANR	5078321	PtrMemberAccess	pstr -> data		5078311	0					
ANR	5078322	Identifier	pstr		5078311	0					
ANR	5078323	Identifier	data		5078311	1					
ANR	5078324	UnaryOperationExpression	* pindex		5078311	1					
ANR	5078325	UnaryOperator	*		5078311	0					
ANR	5078326	Identifier	pindex		5078311	1					
ANR	5078327	IdentifierDeclStatement	uint ssize = pstr -> size - * pindex ;	163:4:4622:4655	5078311	1	True				
ANR	5078328	IdentifierDecl	ssize = pstr -> size - * pindex		5078311	0					
ANR	5078329	IdentifierDeclType	uint		5078311	0					
ANR	5078330	Identifier	ssize		5078311	1					
ANR	5078331	AssignmentExpression	ssize = pstr -> size - * pindex		5078311	2		=			
ANR	5078332	Identifier	ssize		5078311	0					
ANR	5078333	AdditiveExpression	pstr -> size - * pindex		5078311	1		-			
ANR	5078334	PtrMemberAccess	pstr -> size		5078311	0					
ANR	5078335	Identifier	pstr		5078311	0					
ANR	5078336	Identifier	size		5078311	1					
ANR	5078337	UnaryOperationExpression	* pindex		5078311	1					
ANR	5078338	UnaryOperator	*		5078311	0					
ANR	5078339	Identifier	pindex		5078311	1					
ANR	5078340	IdentifierDeclStatement	int i ;	170:4:4911:4916	5078311	2	True				
ANR	5078341	IdentifierDecl	i		5078311	0					
ANR	5078342	IdentifierDeclType	int		5078311	0					
ANR	5078343	Identifier	i		5078311	1					
ANR	5078344	IdentifierDeclStatement	int pm_maxlen = 0 ;	178:4:5168:5185	5078311	3	True				
ANR	5078345	IdentifierDecl	pm_maxlen = 0		5078311	0					
ANR	5078346	IdentifierDeclType	int		5078311	0					
ANR	5078347	Identifier	pm_maxlen		5078311	1					
ANR	5078348	AssignmentExpression	pm_maxlen = 0		5078311	2		=			
ANR	5078349	Identifier	pm_maxlen		5078311	0					
ANR	5078350	PrimaryExpression	0		5078311	1					
ANR	5078351	IdentifierDeclStatement	int pm_index = * pindex ;	179:4:5224:5246	5078311	4	True				
ANR	5078352	IdentifierDecl	pm_index = * pindex		5078311	0					
ANR	5078353	IdentifierDeclType	int		5078311	0					
ANR	5078354	Identifier	pm_index		5078311	1					
ANR	5078355	AssignmentExpression	pm_index = * pindex		5078311	2		=			
ANR	5078356	Identifier	pm_index		5078311	0					
ANR	5078357	UnaryOperationExpression	* pindex		5078311	1					
ANR	5078358	UnaryOperator	*		5078311	0					
ANR	5078359	Identifier	pindex		5078311	1					
ANR	5078360	IdentifierDeclStatement	uint pm_fidx = * pfidx ;	180:4:5292:5313	5078311	5	True				
ANR	5078361	IdentifierDecl	pm_fidx = * pfidx		5078311	0					
ANR	5078362	IdentifierDeclType	uint		5078311	0					
ANR	5078363	Identifier	pm_fidx		5078311	1					
ANR	5078364	AssignmentExpression	pm_fidx = * pfidx		5078311	2		=			
ANR	5078365	Identifier	pm_fidx		5078311	0					
ANR	5078366	UnaryOperationExpression	* pfidx		5078311	1					
ANR	5078367	UnaryOperator	*		5078311	0					
ANR	5078368	Identifier	pfidx		5078311	1					
ANR	5078369	IdentifierDeclStatement	gs_char pm_chr = * pchr ;	181:4:5355:5377	5078311	6	True				
ANR	5078370	IdentifierDecl	pm_chr = * pchr		5078311	0					
ANR	5078371	IdentifierDeclType	gs_char		5078311	0					
ANR	5078372	Identifier	pm_chr		5078311	1					
ANR	5078373	AssignmentExpression	pm_chr = * pchr		5078311	2		=			
ANR	5078374	Identifier	pm_chr		5078311	0					
ANR	5078375	UnaryOperationExpression	* pchr		5078311	1					
ANR	5078376	UnaryOperator	*		5078311	0					
ANR	5078377	Identifier	pchr		5078311	1					
ANR	5078378	ExpressionStatement	* pchr = '\\0'	183:4:5419:5431	5078311	7	True				
ANR	5078379	AssignmentExpression	* pchr = '\\0'		5078311	0		=			
ANR	5078380	UnaryOperationExpression	* pchr		5078311	0					
ANR	5078381	UnaryOperator	*		5078311	0					
ANR	5078382	Identifier	pchr		5078311	1					
ANR	5078383	PrimaryExpression	'\\0'		5078311	1					
ANR	5078384	IfStatement	if ( gs_debug_c ( 'J' ) )		5078311	8					
ANR	5078385	Condition	gs_debug_c ( 'J' )	187:8:5477:5491	5078311	0	True				
ANR	5078386	CallExpression	gs_debug_c ( 'J' )		5078311	0					
ANR	5078387	Callee	gs_debug_c		5078311	0					
ANR	5078388	Identifier	gs_debug_c		5078311	0					
ANR	5078389	ArgumentList	'J'		5078311	1					
ANR	5078390	Argument	'J'		5078311	0					
ANR	5078391	PrimaryExpression	'J'		5078311	0					
ANR	5078392	CompoundStatement		27:25:921:921	5078311	1					
ANR	5078393	ExpressionStatement	"dlprintf ( ""[J]CMDNmr() is called: str=("" )"	188:8:5504:5544	5078311	0	True				
ANR	5078394	CallExpression	"dlprintf ( ""[J]CMDNmr() is called: str=("" )"		5078311	0					
ANR	5078395	Callee	dlprintf		5078311	0					
ANR	5078396	Identifier	dlprintf		5078311	0					
ANR	5078397	ArgumentList	"""[J]CMDNmr() is called: str=("""		5078311	1					
ANR	5078398	Argument	"""[J]CMDNmr() is called: str=("""		5078311	0					
ANR	5078399	PrimaryExpression	"""[J]CMDNmr() is called: str=("""		5078311	0					
ANR	5078400	ExpressionStatement	"debug_print_string_hex_nomem ( str , ssize )"	189:8:5554:5594	5078311	1	True				
ANR	5078401	CallExpression	"debug_print_string_hex_nomem ( str , ssize )"		5078311	0					
ANR	5078402	Callee	debug_print_string_hex_nomem		5078311	0					
ANR	5078403	Identifier	debug_print_string_hex_nomem		5078311	0					
ANR	5078404	ArgumentList	str		5078311	1					
ANR	5078405	Argument	str		5078311	0					
ANR	5078406	Identifier	str		5078311	0					
ANR	5078407	Argument	ssize		5078311	1					
ANR	5078408	Identifier	ssize		5078311	0					
ANR	5078409	ExpressionStatement	"dlprintf3 ( "") @ 0x%lx ssize=%d, %d ranges to check\\n"" , ( ulong ) str , ssize , pcmap -> num_lookup )"	190:8:5604:5713	5078311	2	True				
ANR	5078410	CallExpression	"dlprintf3 ( "") @ 0x%lx ssize=%d, %d ranges to check\\n"" , ( ulong ) str , ssize , pcmap -> num_lookup )"		5078311	0					
ANR	5078411	Callee	dlprintf3		5078311	0					
ANR	5078412	Identifier	dlprintf3		5078311	0					
ANR	5078413	ArgumentList	""") @ 0x%lx ssize=%d, %d ranges to check\\n"""		5078311	1					
ANR	5078414	Argument	""") @ 0x%lx ssize=%d, %d ranges to check\\n"""		5078311	0					
ANR	5078415	PrimaryExpression	""") @ 0x%lx ssize=%d, %d ranges to check\\n"""		5078311	0					
ANR	5078416	Argument	( ulong ) str		5078311	1					
ANR	5078417	CastExpression	( ulong ) str		5078311	0					
ANR	5078418	CastTarget	ulong		5078311	0					
ANR	5078419	Identifier	str		5078311	1					
ANR	5078420	Argument	ssize		5078311	2					
ANR	5078421	Identifier	ssize		5078311	0					
ANR	5078422	Argument	pcmap -> num_lookup		5078311	3					
ANR	5078423	PtrMemberAccess	pcmap -> num_lookup		5078311	0					
ANR	5078424	Identifier	pcmap		5078311	0					
ANR	5078425	Identifier	num_lookup		5078311	1					
ANR	5078426	ForStatement	for ( i = pcmap -> num_lookup - 1 ; i >= 0 ; -- i )		5078311	9					
ANR	5078427	ForInit	i = pcmap -> num_lookup - 1 ;	196:9:5745:5770	5078311	0	True				
ANR	5078428	AssignmentExpression	i = pcmap -> num_lookup - 1		5078311	0		=			
ANR	5078429	Identifier	i		5078311	0					
ANR	5078430	AdditiveExpression	pcmap -> num_lookup - 1		5078311	1		-			
ANR	5078431	PtrMemberAccess	pcmap -> num_lookup		5078311	0					
ANR	5078432	Identifier	pcmap		5078311	0					
ANR	5078433	Identifier	num_lookup		5078311	1					
ANR	5078434	PrimaryExpression	1		5078311	1					
ANR	5078435	Condition	i >= 0	196:36:5772:5777	5078311	1	True				
ANR	5078436	RelationalExpression	i >= 0		5078311	0		>=			
ANR	5078437	Identifier	i		5078311	0					
ANR	5078438	PrimaryExpression	0		5078311	1					
ANR	5078439	UnaryExpression	-- i	196:44:5780:5782	5078311	2	True				
ANR	5078440	IncDec	--		5078311	0					
ANR	5078441	Identifier	i		5078311	1					
ANR	5078442	CompoundStatement		44:8:1511:1520	5078311	3					
ANR	5078443	IdentifierDeclStatement	const gx_cmap_lookup_range_t * pclr = & pcmap -> lookup [ i ] ;	200:8:5902:5956	5078311	0	True				
ANR	5078444	IdentifierDecl	* pclr = & pcmap -> lookup [ i ]		5078311	0					
ANR	5078445	IdentifierDeclType	const gx_cmap_lookup_range_t *		5078311	0					
ANR	5078446	Identifier	pclr		5078311	1					
ANR	5078447	AssignmentExpression	* pclr = & pcmap -> lookup [ i ]		5078311	2		=			
ANR	5078448	Identifier	pclr		5078311	0					
ANR	5078449	UnaryOperationExpression	& pcmap -> lookup [ i ]		5078311	1					
ANR	5078450	UnaryOperator	&		5078311	0					
ANR	5078451	ArrayIndexing	pcmap -> lookup [ i ]		5078311	1					
ANR	5078452	PtrMemberAccess	pcmap -> lookup		5078311	0					
ANR	5078453	Identifier	pcmap		5078311	0					
ANR	5078454	Identifier	lookup		5078311	1					
ANR	5078455	Identifier	i		5078311	1					
ANR	5078456	IdentifierDeclStatement	"int pre_size = pclr -> key_prefix_size , key_size = pclr -> key_size , chr_size = pre_size + key_size ;"	201:8:5966:6073	5078311	1	True				
ANR	5078457	IdentifierDecl	pre_size = pclr -> key_prefix_size		5078311	0					
ANR	5078458	IdentifierDeclType	int		5078311	0					
ANR	5078459	Identifier	pre_size		5078311	1					
ANR	5078460	AssignmentExpression	pre_size = pclr -> key_prefix_size		5078311	2		=			
ANR	5078461	Identifier	pre_size		5078311	0					
ANR	5078462	PtrMemberAccess	pclr -> key_prefix_size		5078311	1					
ANR	5078463	Identifier	pclr		5078311	0					
ANR	5078464	Identifier	key_prefix_size		5078311	1					
ANR	5078465	IdentifierDecl	key_size = pclr -> key_size		5078311	1					
ANR	5078466	IdentifierDeclType	int		5078311	0					
ANR	5078467	Identifier	key_size		5078311	1					
ANR	5078468	AssignmentExpression	key_size = pclr -> key_size		5078311	2		=			
ANR	5078469	Identifier	key_size		5078311	0					
ANR	5078470	PtrMemberAccess	pclr -> key_size		5078311	1					
ANR	5078471	Identifier	pclr		5078311	0					
ANR	5078472	Identifier	key_size		5078311	1					
ANR	5078473	IdentifierDecl	chr_size = pre_size + key_size		5078311	2					
ANR	5078474	IdentifierDeclType	int		5078311	0					
ANR	5078475	Identifier	chr_size		5078311	1					
ANR	5078476	AssignmentExpression	chr_size = pre_size + key_size		5078311	2		=			
ANR	5078477	Identifier	chr_size		5078311	0					
ANR	5078478	AdditiveExpression	pre_size + key_size		5078311	1		+			
ANR	5078479	Identifier	pre_size		5078311	0					
ANR	5078480	Identifier	key_size		5078311	1					
ANR	5078481	IdentifierDeclStatement	int j = 0 ;	204:8:6084:6093	5078311	2	True				
ANR	5078482	IdentifierDecl	j = 0		5078311	0					
ANR	5078483	IdentifierDeclType	int		5078311	0					
ANR	5078484	Identifier	j		5078311	1					
ANR	5078485	AssignmentExpression	j = 0		5078311	2		=			
ANR	5078486	Identifier	j		5078311	0					
ANR	5078487	PrimaryExpression	0		5078311	1					
ANR	5078488	IfStatement	if ( ssize < chr_size )		5078311	3					
ANR	5078489	Condition	ssize < chr_size	209:12:6280:6295	5078311	0	True				
ANR	5078490	RelationalExpression	ssize < chr_size		5078311	0		<			
ANR	5078491	Identifier	ssize		5078311	0					
ANR	5078492	Identifier	chr_size		5078311	1					
ANR	5078493	ContinueStatement	continue ;	210:12:6310:6318	5078311	1	True				
ANR	5078494	IfStatement	if ( 0 < pre_size )		5078311	4					
ANR	5078495	Condition	0 < pre_size	212:12:6333:6344	5078311	0	True				
ANR	5078496	RelationalExpression	0 < pre_size		5078311	0		<			
ANR	5078497	PrimaryExpression	0		5078311	0					
ANR	5078498	Identifier	pre_size		5078311	1					
ANR	5078499	CompoundStatement		53:12:1788:1826	5078311	1					
ANR	5078500	IdentifierDeclStatement	const byte * prefix = pclr -> key_prefix ;	213:12:6361:6399	5078311	0	True				
ANR	5078501	IdentifierDecl	* prefix = pclr -> key_prefix		5078311	0					
ANR	5078502	IdentifierDeclType	const byte *		5078311	0					
ANR	5078503	Identifier	prefix		5078311	1					
ANR	5078504	AssignmentExpression	* prefix = pclr -> key_prefix		5078311	2		=			
ANR	5078505	Identifier	prefix		5078311	0					
ANR	5078506	PtrMemberAccess	pclr -> key_prefix		5078311	1					
ANR	5078507	Identifier	pclr		5078311	0					
ANR	5078508	Identifier	key_prefix		5078311	1					
ANR	5078509	ForStatement	for ( j = 0 ; j < pre_size ; j ++ )		5078311	1					
ANR	5078510	ForInit	j = 0 ;	215:17:6466:6471	5078311	0	True				
ANR	5078511	AssignmentExpression	j = 0		5078311	0		=			
ANR	5078512	Identifier	j		5078311	0					
ANR	5078513	PrimaryExpression	0		5078311	1					
ANR	5078514	Condition	j < pre_size	215:24:6473:6484	5078311	1	True				
ANR	5078515	RelationalExpression	j < pre_size		5078311	0		<			
ANR	5078516	Identifier	j		5078311	0					
ANR	5078517	Identifier	pre_size		5078311	1					
ANR	5078518	PostIncDecOperationExpression	j ++	215:38:6487:6489	5078311	2	True				
ANR	5078519	Identifier	j		5078311	0					
ANR	5078520	IncDec	++		5078311	1					
ANR	5078521	IfStatement	if ( prefix [ j ] != str [ j ] )		5078311	3					
ANR	5078522	Condition	prefix [ j ] != str [ j ]	216:19:6511:6529	5078311	0	True				
ANR	5078523	EqualityExpression	prefix [ j ] != str [ j ]		5078311	0		!=			
ANR	5078524	ArrayIndexing	prefix [ j ]		5078311	0					
ANR	5078525	Identifier	prefix		5078311	0					
ANR	5078526	Identifier	j		5078311	1					
ANR	5078527	ArrayIndexing	str [ j ]		5078311	1					
ANR	5078528	Identifier	str		5078311	0					
ANR	5078529	Identifier	j		5078311	1					
ANR	5078530	BreakStatement	break ;	217:19:6551:6556	5078311	1	True				
ANR	5078531	IfStatement	if ( 0 == j )		5078311	2					
ANR	5078532	Condition	0 == j	219:16:6575:6580	5078311	0	True				
ANR	5078533	EqualityExpression	0 == j		5078311	0		==			
ANR	5078534	PrimaryExpression	0		5078311	0					
ANR	5078535	Identifier	j		5078311	1					
ANR	5078536	ContinueStatement	continue ;	220:16:6632:6640	5078311	1	True				
ANR	5078537	ElseStatement	else		5078311	0					
ANR	5078538	IfStatement	if ( j < pre_size )		5078311	0					
ANR	5078539	Condition	j < pre_size	221:21:6663:6674	5078311	0	True				
ANR	5078540	RelationalExpression	j < pre_size		5078311	0		<			
ANR	5078541	Identifier	j		5078311	0					
ANR	5078542	Identifier	pre_size		5078311	1					
ANR	5078543	CompoundStatement		61:35:2104:2104	5078311	1					
ANR	5078544	IfStatement	if ( gs_debug_c ( 'J' ) )		5078311	0					
ANR	5078545	Condition	gs_debug_c ( 'J' )	224:20:6765:6779	5078311	0	True				
ANR	5078546	CallExpression	gs_debug_c ( 'J' )		5078311	0					
ANR	5078547	Callee	gs_debug_c		5078311	0					
ANR	5078548	Identifier	gs_debug_c		5078311	0					
ANR	5078549	ArgumentList	'J'		5078311	1					
ANR	5078550	Argument	'J'		5078311	0					
ANR	5078551	PrimaryExpression	'J'		5078311	0					
ANR	5078552	CompoundStatement		64:37:2209:2209	5078311	1					
ANR	5078553	ExpressionStatement	"dlprintf ( ""[J]CMDNmr() partial match with prefix:"" )"	225:20:6804:6854	5078311	0	True				
ANR	5078554	CallExpression	"dlprintf ( ""[J]CMDNmr() partial match with prefix:"" )"		5078311	0					
ANR	5078555	Callee	dlprintf		5078311	0					
ANR	5078556	Identifier	dlprintf		5078311	0					
ANR	5078557	ArgumentList	"""[J]CMDNmr() partial match with prefix:"""		5078311	1					
ANR	5078558	Argument	"""[J]CMDNmr() partial match with prefix:"""		5078311	0					
ANR	5078559	PrimaryExpression	"""[J]CMDNmr() partial match with prefix:"""		5078311	0					
ANR	5078560	ExpressionStatement	"print_msg_str_in_range ( str , prefix , prefix , pre_size )"	226:20:6876:6977	5078311	1	True				
ANR	5078561	CallExpression	"print_msg_str_in_range ( str , prefix , prefix , pre_size )"		5078311	0					
ANR	5078562	Callee	print_msg_str_in_range		5078311	0					
ANR	5078563	Identifier	print_msg_str_in_range		5078311	0					
ANR	5078564	ArgumentList	str		5078311	1					
ANR	5078565	Argument	str		5078311	0					
ANR	5078566	Identifier	str		5078311	0					
ANR	5078567	Argument	prefix		5078311	1					
ANR	5078568	Identifier	prefix		5078311	0					
ANR	5078569	Argument	prefix		5078311	2					
ANR	5078570	Identifier	prefix		5078311	0					
ANR	5078571	Argument	pre_size		5078311	3					
ANR	5078572	Identifier	pre_size		5078311	0					
ANR	5078573	IfStatement	if ( pm_maxlen < j )		5078311	1					
ANR	5078574	Condition	pm_maxlen < j	231:20:7031:7043	5078311	0	True				
ANR	5078575	RelationalExpression	pm_maxlen < j		5078311	0		<			
ANR	5078576	Identifier	pm_maxlen		5078311	0					
ANR	5078577	Identifier	j		5078311	1					
ANR	5078578	CompoundStatement		71:35:2473:2473	5078311	1					
ANR	5078579	ExpressionStatement	pm_maxlen = chr_size	232:20:7068:7088	5078311	0	True				
ANR	5078580	AssignmentExpression	pm_maxlen = chr_size		5078311	0		=			
ANR	5078581	Identifier	pm_maxlen		5078311	0					
ANR	5078582	Identifier	chr_size		5078311	1					
ANR	5078583	ExpressionStatement	"pm_chr = bytes2int ( str , chr_size )"	233:20:7110:7143	5078311	1	True				
ANR	5078584	AssignmentExpression	"pm_chr = bytes2int ( str , chr_size )"		5078311	0		=			
ANR	5078585	Identifier	pm_chr		5078311	0					
ANR	5078586	CallExpression	"bytes2int ( str , chr_size )"		5078311	1					
ANR	5078587	Callee	bytes2int		5078311	0					
ANR	5078588	Identifier	bytes2int		5078311	0					
ANR	5078589	ArgumentList	str		5078311	1					
ANR	5078590	Argument	str		5078311	0					
ANR	5078591	Identifier	str		5078311	0					
ANR	5078592	Argument	chr_size		5078311	1					
ANR	5078593	Identifier	chr_size		5078311	0					
ANR	5078594	ExpressionStatement	pm_index = ( * pindex ) + chr_size	234:20:7165:7196	5078311	2	True				
ANR	5078595	AssignmentExpression	pm_index = ( * pindex ) + chr_size		5078311	0		=			
ANR	5078596	Identifier	pm_index		5078311	0					
ANR	5078597	AdditiveExpression	( * pindex ) + chr_size		5078311	1		+			
ANR	5078598	UnaryOperationExpression	* pindex		5078311	0					
ANR	5078599	UnaryOperator	*		5078311	0					
ANR	5078600	Identifier	pindex		5078311	1					
ANR	5078601	Identifier	chr_size		5078311	1					
ANR	5078602	ExpressionStatement	pm_fidx = pclr -> font_index	235:20:7218:7244	5078311	3	True				
ANR	5078603	AssignmentExpression	pm_fidx = pclr -> font_index		5078311	0		=			
ANR	5078604	Identifier	pm_fidx		5078311	0					
ANR	5078605	PtrMemberAccess	pclr -> font_index		5078311	1					
ANR	5078606	Identifier	pclr		5078311	0					
ANR	5078607	Identifier	font_index		5078311	1					
ANR	5078608	ContinueStatement	continue ;	237:16:7280:7289	5078311	2	True				
ANR	5078609	IfStatement	if ( gs_debug_c ( 'J' ) )		5078311	3					
ANR	5078610	Condition	gs_debug_c ( 'J' )	242:16:7400:7414	5078311	0	True				
ANR	5078611	CallExpression	gs_debug_c ( 'J' )		5078311	0					
ANR	5078612	Callee	gs_debug_c		5078311	0					
ANR	5078613	Identifier	gs_debug_c		5078311	0					
ANR	5078614	ArgumentList	'J'		5078311	1					
ANR	5078615	Argument	'J'		5078311	0					
ANR	5078616	PrimaryExpression	'J'		5078311	0					
ANR	5078617	CompoundStatement		82:33:2844:2844	5078311	1					
ANR	5078618	ExpressionStatement	"dlprintf ( ""[J]CMDNmr()   full match with prefix:"" )"	243:16:7435:7484	5078311	0	True				
ANR	5078619	CallExpression	"dlprintf ( ""[J]CMDNmr()   full match with prefix:"" )"		5078311	0					
ANR	5078620	Callee	dlprintf		5078311	0					
ANR	5078621	Identifier	dlprintf		5078311	0					
ANR	5078622	ArgumentList	"""[J]CMDNmr()   full match with prefix:"""		5078311	1					
ANR	5078623	Argument	"""[J]CMDNmr()   full match with prefix:"""		5078311	0					
ANR	5078624	PrimaryExpression	"""[J]CMDNmr()   full match with prefix:"""		5078311	0					
ANR	5078625	ExpressionStatement	"print_msg_str_in_range ( str , prefix , prefix , pre_size )"	244:16:7502:7555	5078311	1	True				
ANR	5078626	CallExpression	"print_msg_str_in_range ( str , prefix , prefix , pre_size )"		5078311	0					
ANR	5078627	Callee	print_msg_str_in_range		5078311	0					
ANR	5078628	Identifier	print_msg_str_in_range		5078311	0					
ANR	5078629	ArgumentList	str		5078311	1					
ANR	5078630	Argument	str		5078311	0					
ANR	5078631	Identifier	str		5078311	0					
ANR	5078632	Argument	prefix		5078311	1					
ANR	5078633	Identifier	prefix		5078311	0					
ANR	5078634	Argument	prefix		5078311	2					
ANR	5078635	Identifier	prefix		5078311	0					
ANR	5078636	Argument	pre_size		5078311	3					
ANR	5078637	Identifier	pre_size		5078311	0					
ANR	5078638	CompoundStatement		95:12:3217:3242	5078311	5					
ANR	5078639	IdentifierDeclStatement	const byte * key = pclr -> keys . data ;	252:12:7688:7721	5078311	0	True				
ANR	5078640	IdentifierDecl	* key = pclr -> keys . data		5078311	0					
ANR	5078641	IdentifierDeclType	const byte *		5078311	0					
ANR	5078642	Identifier	key		5078311	1					
ANR	5078643	AssignmentExpression	* key = pclr -> keys . data		5078311	2		=			
ANR	5078644	Identifier	key		5078311	0					
ANR	5078645	MemberAccess	pclr -> keys . data		5078311	1					
ANR	5078646	PtrMemberAccess	pclr -> keys		5078311	0					
ANR	5078647	Identifier	pclr		5078311	0					
ANR	5078648	Identifier	keys		5078311	1					
ANR	5078649	Identifier	data		5078311	1					
ANR	5078650	IdentifierDeclStatement	int step = key_size ;	253:12:7735:7754	5078311	1	True				
ANR	5078651	IdentifierDecl	step = key_size		5078311	0					
ANR	5078652	IdentifierDeclType	int		5078311	0					
ANR	5078653	Identifier	step		5078311	1					
ANR	5078654	AssignmentExpression	step = key_size		5078311	2		=			
ANR	5078655	Identifier	key_size		5078311	0					
ANR	5078656	Identifier	key_size		5078311	1					
ANR	5078657	IdentifierDeclStatement	"int k , l ;"	254:12:7768:7776	5078311	2	True				
ANR	5078658	IdentifierDecl	k		5078311	0					
ANR	5078659	IdentifierDeclType	int		5078311	0					
ANR	5078660	Identifier	k		5078311	1					
ANR	5078661	IdentifierDecl	l		5078311	1					
ANR	5078662	IdentifierDeclType	int		5078311	0					
ANR	5078663	Identifier	l		5078311	1					
ANR	5078664	IdentifierDeclStatement	const byte * pvalue = NULL ;	255:12:7790:7815	5078311	3	True				
ANR	5078665	IdentifierDecl	* pvalue = NULL		5078311	0					
ANR	5078666	IdentifierDeclType	const byte *		5078311	0					
ANR	5078667	Identifier	pvalue		5078311	1					
ANR	5078668	AssignmentExpression	* pvalue = NULL		5078311	2		=			
ANR	5078669	Identifier	NULL		5078311	0					
ANR	5078670	Identifier	NULL		5078311	1					
ANR	5078671	IfStatement	if ( pclr -> key_is_range )		5078311	4					
ANR	5078672	Condition	pclr -> key_is_range	263:16:8110:8127	5078311	0	True				
ANR	5078673	PtrMemberAccess	pclr -> key_is_range		5078311	0					
ANR	5078674	Identifier	pclr		5078311	0					
ANR	5078675	Identifier	key_is_range		5078311	1					
ANR	5078676	ExpressionStatement	step <<= 1	264:16:8146:8155	5078311	1	True				
ANR	5078677	AssignmentExpression	step <<= 1		5078311	0		<<=			
ANR	5078678	Identifier	step		5078311	0					
ANR	5078679	PrimaryExpression	1		5078311	1					
ANR	5078680	ForStatement	"for ( k = 0 ; k < pclr -> num_entries ; ++ k , key += step )"		5078311	5					
ANR	5078681	ForInit	k = 0 ;	266:17:8199:8204	5078311	0	True				
ANR	5078682	AssignmentExpression	k = 0		5078311	0		=			
ANR	5078683	Identifier	k		5078311	0					
ANR	5078684	PrimaryExpression	0		5078311	1					
ANR	5078685	Condition	k < pclr -> num_entries	266:24:8206:8226	5078311	1	True				
ANR	5078686	RelationalExpression	k < pclr -> num_entries		5078311	0		<			
ANR	5078687	Identifier	k		5078311	0					
ANR	5078688	PtrMemberAccess	pclr -> num_entries		5078311	1					
ANR	5078689	Identifier	pclr		5078311	0					
ANR	5078690	Identifier	num_entries		5078311	1					
ANR	5078691	Expression	"++ k , key += step"	266:47:8229:8244	5078311	2	True				
ANR	5078692	UnaryExpression	++ k		5078311	0					
ANR	5078693	IncDec	++		5078311	0					
ANR	5078694	Identifier	k		5078311	1					
ANR	5078695	AssignmentExpression	key += step		5078311	1		+=			
ANR	5078696	Identifier	key		5078311	0					
ANR	5078697	Identifier	step		5078311	1					
ANR	5078698	CompoundStatement		106:65:3674:3674	5078311	3					
ANR	5078699	ExpressionStatement	"if_debug0 ( 'j' , ""[j]CMDNmr()     check key:"" )"	270:16:8301:8345	5078311	0	True				
ANR	5078700	CallExpression	"if_debug0 ( 'j' , ""[j]CMDNmr()     check key:"" )"		5078311	0					
ANR	5078701	Callee	if_debug0		5078311	0					
ANR	5078702	Identifier	if_debug0		5078311	0					
ANR	5078703	ArgumentList	'j'		5078311	1					
ANR	5078704	Argument	'j'		5078311	0					
ANR	5078705	PrimaryExpression	'j'		5078311	0					
ANR	5078706	Argument	"""[j]CMDNmr()     check key:"""		5078311	1					
ANR	5078707	PrimaryExpression	"""[j]CMDNmr()     check key:"""		5078311	0					
ANR	5078708	IfStatement	if ( gs_debug_c ( 'j' ) )		5078311	1					
ANR	5078709	Condition	gs_debug_c ( 'j' )	271:20:8367:8381	5078311	0	True				
ANR	5078710	CallExpression	gs_debug_c ( 'j' )		5078311	0					
ANR	5078711	Callee	gs_debug_c		5078311	0					
ANR	5078712	Identifier	gs_debug_c		5078311	0					
ANR	5078713	ArgumentList	'j'		5078311	1					
ANR	5078714	Argument	'j'		5078311	0					
ANR	5078715	PrimaryExpression	'j'		5078311	0					
ANR	5078716	ExpressionStatement	"print_msg_str_in_range ( str + pre_size , key , key + step - key_size , key_size )"	272:20:8404:8505	5078311	1	True				
ANR	5078717	CallExpression	"print_msg_str_in_range ( str + pre_size , key , key + step - key_size , key_size )"		5078311	0					
ANR	5078718	Callee	print_msg_str_in_range		5078311	0					
ANR	5078719	Identifier	print_msg_str_in_range		5078311	0					
ANR	5078720	ArgumentList	str + pre_size		5078311	1					
ANR	5078721	Argument	str + pre_size		5078311	0					
ANR	5078722	AdditiveExpression	str + pre_size		5078311	0		+			
ANR	5078723	Identifier	str		5078311	0					
ANR	5078724	Identifier	pre_size		5078311	1					
ANR	5078725	Argument	key		5078311	1					
ANR	5078726	Identifier	key		5078311	0					
ANR	5078727	Argument	key + step - key_size		5078311	2					
ANR	5078728	AdditiveExpression	key + step - key_size		5078311	0		+			
ANR	5078729	Identifier	key		5078311	0					
ANR	5078730	AdditiveExpression	step - key_size		5078311	1		-			
ANR	5078731	Identifier	step		5078311	0					
ANR	5078732	Identifier	key_size		5078311	1					
ANR	5078733	Argument	key_size		5078311	3					
ANR	5078734	Identifier	key_size		5078311	0					
ANR	5078735	ForStatement	for ( l = 0 ; l < key_size ; l ++ )		5078311	2					
ANR	5078736	ForInit	l = 0 ;	277:21:8543:8548	5078311	0	True				
ANR	5078737	AssignmentExpression	l = 0		5078311	0		=			
ANR	5078738	Identifier	l		5078311	0					
ANR	5078739	PrimaryExpression	0		5078311	1					
ANR	5078740	Condition	l < key_size	277:28:8550:8561	5078311	1	True				
ANR	5078741	RelationalExpression	l < key_size		5078311	0		<			
ANR	5078742	Identifier	l		5078311	0					
ANR	5078743	Identifier	key_size		5078311	1					
ANR	5078744	PostIncDecOperationExpression	l ++	277:42:8564:8566	5078311	2	True				
ANR	5078745	Identifier	l		5078311	0					
ANR	5078746	IncDec	++		5078311	1					
ANR	5078747	CompoundStatement		118:20:4018:4044	5078311	3					
ANR	5078748	IdentifierDeclStatement	byte c = str [ l + pre_size ] ;	278:20:8591:8617	5078311	0	True				
ANR	5078749	IdentifierDecl	c = str [ l + pre_size ]		5078311	0					
ANR	5078750	IdentifierDeclType	byte		5078311	0					
ANR	5078751	Identifier	c		5078311	1					
ANR	5078752	AssignmentExpression	c = str [ l + pre_size ]		5078311	2		=			
ANR	5078753	Identifier	c		5078311	0					
ANR	5078754	ArrayIndexing	str [ l + pre_size ]		5078311	1					
ANR	5078755	Identifier	str		5078311	0					
ANR	5078756	AdditiveExpression	l + pre_size		5078311	1		+			
ANR	5078757	Identifier	l		5078311	0					
ANR	5078758	Identifier	pre_size		5078311	1					
ANR	5078759	IfStatement	if ( c < key [ l ] || c > key [ step - key_size + l ] )		5078311	1					
ANR	5078760	Condition	c < key [ l ] || c > key [ step - key_size + l ]	279:24:8643:8684	5078311	0	True				
ANR	5078761	OrExpression	c < key [ l ] || c > key [ step - key_size + l ]		5078311	0		||			
ANR	5078762	RelationalExpression	c < key [ l ]		5078311	0		<			
ANR	5078763	Identifier	c		5078311	0					
ANR	5078764	ArrayIndexing	key [ l ]		5078311	1					
ANR	5078765	Identifier	key		5078311	0					
ANR	5078766	Identifier	l		5078311	1					
ANR	5078767	RelationalExpression	c > key [ step - key_size + l ]		5078311	1		>			
ANR	5078768	Identifier	c		5078311	0					
ANR	5078769	ArrayIndexing	key [ step - key_size + l ]		5078311	1					
ANR	5078770	Identifier	key		5078311	0					
ANR	5078771	AdditiveExpression	step - key_size + l		5078311	1		-			
ANR	5078772	Identifier	step		5078311	0					
ANR	5078773	AdditiveExpression	key_size + l		5078311	1		+			
ANR	5078774	Identifier	key_size		5078311	0					
ANR	5078775	Identifier	l		5078311	1					
ANR	5078776	BreakStatement	break ;	280:24:8711:8716	5078311	1	True				
ANR	5078777	IfStatement	if ( pm_maxlen < pre_size + l )		5078311	3					
ANR	5078778	Condition	pm_maxlen < pre_size + l	283:20:8757:8780	5078311	0	True				
ANR	5078779	RelationalExpression	pm_maxlen < pre_size + l		5078311	0		<			
ANR	5078780	Identifier	pm_maxlen		5078311	0					
ANR	5078781	AdditiveExpression	pre_size + l		5078311	1		+			
ANR	5078782	Identifier	pre_size		5078311	0					
ANR	5078783	Identifier	l		5078311	1					
ANR	5078784	CompoundStatement		123:46:4210:4210	5078311	1					
ANR	5078785	ExpressionStatement	pm_maxlen = chr_size	284:20:8805:8825	5078311	0	True				
ANR	5078786	AssignmentExpression	pm_maxlen = chr_size		5078311	0		=			
ANR	5078787	Identifier	pm_maxlen		5078311	0					
ANR	5078788	Identifier	chr_size		5078311	1					
ANR	5078789	ExpressionStatement	"pm_chr = bytes2int ( str , chr_size )"	285:20:8847:8880	5078311	1	True				
ANR	5078790	AssignmentExpression	"pm_chr = bytes2int ( str , chr_size )"		5078311	0		=			
ANR	5078791	Identifier	pm_chr		5078311	0					
ANR	5078792	CallExpression	"bytes2int ( str , chr_size )"		5078311	1					
ANR	5078793	Callee	bytes2int		5078311	0					
ANR	5078794	Identifier	bytes2int		5078311	0					
ANR	5078795	ArgumentList	str		5078311	1					
ANR	5078796	Argument	str		5078311	0					
ANR	5078797	Identifier	str		5078311	0					
ANR	5078798	Argument	chr_size		5078311	1					
ANR	5078799	Identifier	chr_size		5078311	0					
ANR	5078800	ExpressionStatement	pm_index = ( * pindex ) + chr_size	286:20:8902:8933	5078311	2	True				
ANR	5078801	AssignmentExpression	pm_index = ( * pindex ) + chr_size		5078311	0		=			
ANR	5078802	Identifier	pm_index		5078311	0					
ANR	5078803	AdditiveExpression	( * pindex ) + chr_size		5078311	1		+			
ANR	5078804	UnaryOperationExpression	* pindex		5078311	0					
ANR	5078805	UnaryOperator	*		5078311	0					
ANR	5078806	Identifier	pindex		5078311	1					
ANR	5078807	Identifier	chr_size		5078311	1					
ANR	5078808	ExpressionStatement	pm_fidx = pclr -> font_index	287:20:8955:8981	5078311	3	True				
ANR	5078809	AssignmentExpression	pm_fidx = pclr -> font_index		5078311	0		=			
ANR	5078810	Identifier	pm_fidx		5078311	0					
ANR	5078811	PtrMemberAccess	pclr -> font_index		5078311	1					
ANR	5078812	Identifier	pclr		5078311	0					
ANR	5078813	Identifier	font_index		5078311	1					
ANR	5078814	IfStatement	if ( l == key_size )		5078311	4					
ANR	5078815	Condition	l == key_size	289:20:9021:9033	5078311	0	True				
ANR	5078816	EqualityExpression	l == key_size		5078311	0		==			
ANR	5078817	Identifier	l		5078311	0					
ANR	5078818	Identifier	key_size		5078311	1					
ANR	5078819	BreakStatement	break ;	290:24:9060:9065	5078311	1	True				
ANR	5078820	IfStatement	if ( k == pclr -> num_entries )		5078311	6					
ANR	5078821	Condition	k == pclr -> num_entries	295:16:9193:9214	5078311	0	True				
ANR	5078822	EqualityExpression	k == pclr -> num_entries		5078311	0		==			
ANR	5078823	Identifier	k		5078311	0					
ANR	5078824	PtrMemberAccess	pclr -> num_entries		5078311	1					
ANR	5078825	Identifier	pclr		5078311	0					
ANR	5078826	Identifier	num_entries		5078311	1					
ANR	5078827	ContinueStatement	continue ;	296:16:9233:9241	5078311	1	True				
ANR	5078828	ExpressionStatement	"* pchr = bytes2int ( str , chr_size )"	299:12:9311:9343	5078311	7	True				
ANR	5078829	AssignmentExpression	"* pchr = bytes2int ( str , chr_size )"		5078311	0		=			
ANR	5078830	UnaryOperationExpression	* pchr		5078311	0					
ANR	5078831	UnaryOperator	*		5078311	0					
ANR	5078832	Identifier	pchr		5078311	1					
ANR	5078833	CallExpression	"bytes2int ( str , chr_size )"		5078311	1					
ANR	5078834	Callee	bytes2int		5078311	0					
ANR	5078835	Identifier	bytes2int		5078311	0					
ANR	5078836	ArgumentList	str		5078311	1					
ANR	5078837	Argument	str		5078311	0					
ANR	5078838	Identifier	str		5078311	0					
ANR	5078839	Argument	chr_size		5078311	1					
ANR	5078840	Identifier	chr_size		5078311	0					
ANR	5078841	ExpressionStatement	* pindex += chr_size	300:12:9357:9376	5078311	8	True				
ANR	5078842	AssignmentExpression	* pindex += chr_size		5078311	0		+=			
ANR	5078843	UnaryOperationExpression	* pindex		5078311	0					
ANR	5078844	UnaryOperator	*		5078311	0					
ANR	5078845	Identifier	pindex		5078311	1					
ANR	5078846	Identifier	chr_size		5078311	1					
ANR	5078847	ExpressionStatement	* pfidx = pclr -> font_index	301:12:9390:9415	5078311	9	True				
ANR	5078848	AssignmentExpression	* pfidx = pclr -> font_index		5078311	0		=			
ANR	5078849	UnaryOperationExpression	* pfidx		5078311	0					
ANR	5078850	UnaryOperator	*		5078311	0					
ANR	5078851	Identifier	pfidx		5078311	1					
ANR	5078852	PtrMemberAccess	pclr -> font_index		5078311	1					
ANR	5078853	Identifier	pclr		5078311	0					
ANR	5078854	Identifier	font_index		5078311	1					
ANR	5078855	ExpressionStatement	pvalue = pclr -> values . data + k * pclr -> value_size	302:12:9429:9478	5078311	10	True				
ANR	5078856	AssignmentExpression	pvalue = pclr -> values . data + k * pclr -> value_size		5078311	0		=			
ANR	5078857	Identifier	pvalue		5078311	0					
ANR	5078858	AdditiveExpression	pclr -> values . data + k * pclr -> value_size		5078311	1		+			
ANR	5078859	MemberAccess	pclr -> values . data		5078311	0					
ANR	5078860	PtrMemberAccess	pclr -> values		5078311	0					
ANR	5078861	Identifier	pclr		5078311	0					
ANR	5078862	Identifier	values		5078311	1					
ANR	5078863	Identifier	data		5078311	1					
ANR	5078864	MultiplicativeExpression	k * pclr -> value_size		5078311	1		*			
ANR	5078865	Identifier	k		5078311	0					
ANR	5078866	PtrMemberAccess	pclr -> value_size		5078311	1					
ANR	5078867	Identifier	pclr		5078311	0					
ANR	5078868	Identifier	value_size		5078311	1					
ANR	5078869	IfStatement	if ( gs_debug_c ( 'J' ) )		5078311	11					
ANR	5078870	Condition	gs_debug_c ( 'J' )	306:16:9532:9546	5078311	0	True				
ANR	5078871	CallExpression	gs_debug_c ( 'J' )		5078311	0					
ANR	5078872	Callee	gs_debug_c		5078311	0					
ANR	5078873	Identifier	gs_debug_c		5078311	0					
ANR	5078874	ArgumentList	'J'		5078311	1					
ANR	5078875	Argument	'J'		5078311	0					
ANR	5078876	PrimaryExpression	'J'		5078311	0					
ANR	5078877	CompoundStatement		146:33:4976:4976	5078311	1					
ANR	5078878	ExpressionStatement	"dlprintf ( ""[J]CMDNmr()     full matched pvalue=("" )"	307:16:9567:9616	5078311	0	True				
ANR	5078879	CallExpression	"dlprintf ( ""[J]CMDNmr()     full matched pvalue=("" )"		5078311	0					
ANR	5078880	Callee	dlprintf		5078311	0					
ANR	5078881	Identifier	dlprintf		5078311	0					
ANR	5078882	ArgumentList	"""[J]CMDNmr()     full matched pvalue=("""		5078311	1					
ANR	5078883	Argument	"""[J]CMDNmr()     full matched pvalue=("""		5078311	0					
ANR	5078884	PrimaryExpression	"""[J]CMDNmr()     full matched pvalue=("""		5078311	0					
ANR	5078885	ExpressionStatement	"debug_print_string_hex_nomem ( pvalue , pclr -> value_size )"	308:16:9634:9688	5078311	1	True				
ANR	5078886	CallExpression	"debug_print_string_hex_nomem ( pvalue , pclr -> value_size )"		5078311	0					
ANR	5078887	Callee	debug_print_string_hex_nomem		5078311	0					
ANR	5078888	Identifier	debug_print_string_hex_nomem		5078311	0					
ANR	5078889	ArgumentList	pvalue		5078311	1					
ANR	5078890	Argument	pvalue		5078311	0					
ANR	5078891	Identifier	pvalue		5078311	0					
ANR	5078892	Argument	pclr -> value_size		5078311	1					
ANR	5078893	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5078894	Identifier	pclr		5078311	0					
ANR	5078895	Identifier	value_size		5078311	1					
ANR	5078896	ExpressionStatement	"dlprintf ( "")\\n"" )"	309:16:9706:9721	5078311	2	True				
ANR	5078897	CallExpression	"dlprintf ( "")\\n"" )"		5078311	0					
ANR	5078898	Callee	dlprintf		5078311	0					
ANR	5078899	Identifier	dlprintf		5078311	0					
ANR	5078900	ArgumentList	""")\\n"""		5078311	1					
ANR	5078901	Argument	""")\\n"""		5078311	0					
ANR	5078902	PrimaryExpression	""")\\n"""		5078311	0					
ANR	5078903	SwitchStatement	switch ( pclr -> value_type )		5078311	12					
ANR	5078904	Condition	pclr -> value_type	314:20:9772:9787	5078311	0	True				
ANR	5078905	PtrMemberAccess	pclr -> value_type		5078311	0					
ANR	5078906	Identifier	pclr		5078311	0					
ANR	5078907	Identifier	value_type		5078311	1					
ANR	5078908	CompoundStatement		154:38:5217:5217	5078311	1					
ANR	5078909	Label	case CODE_VALUE_CID :	315:12:9804:9823	5078311	0	True				
ANR	5078910	Identifier	CODE_VALUE_CID		5078311	0					
ANR	5078911	ExpressionStatement	"* pglyph = GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size ) + gs_multidim_CID_offset ( str + pre_size , key , key + step - key_size , key_size )"	316:16:9841:10048	5078311	1	True				
ANR	5078912	AssignmentExpression	"* pglyph = GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size ) + gs_multidim_CID_offset ( str + pre_size , key , key + step - key_size , key_size )"		5078311	0		=			
ANR	5078913	UnaryOperationExpression	* pglyph		5078311	0					
ANR	5078914	UnaryOperator	*		5078311	0					
ANR	5078915	Identifier	pglyph		5078311	1					
ANR	5078916	AdditiveExpression	"GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size ) + gs_multidim_CID_offset ( str + pre_size , key , key + step - key_size , key_size )"		5078311	1		+			
ANR	5078917	Identifier	GS_MIN_CID_GLYPH		5078311	0					
ANR	5078918	AdditiveExpression	"bytes2int ( pvalue , pclr -> value_size ) + gs_multidim_CID_offset ( str + pre_size , key , key + step - key_size , key_size )"		5078311	1		+			
ANR	5078919	CallExpression	"bytes2int ( pvalue , pclr -> value_size )"		5078311	0					
ANR	5078920	Callee	bytes2int		5078311	0					
ANR	5078921	Identifier	bytes2int		5078311	0					
ANR	5078922	ArgumentList	pvalue		5078311	1					
ANR	5078923	Argument	pvalue		5078311	0					
ANR	5078924	Identifier	pvalue		5078311	0					
ANR	5078925	Argument	pclr -> value_size		5078311	1					
ANR	5078926	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5078927	Identifier	pclr		5078311	0					
ANR	5078928	Identifier	value_size		5078311	1					
ANR	5078929	CallExpression	"gs_multidim_CID_offset ( str + pre_size , key , key + step - key_size , key_size )"		5078311	1					
ANR	5078930	Callee	gs_multidim_CID_offset		5078311	0					
ANR	5078931	Identifier	gs_multidim_CID_offset		5078311	0					
ANR	5078932	ArgumentList	str + pre_size		5078311	1					
ANR	5078933	Argument	str + pre_size		5078311	0					
ANR	5078934	AdditiveExpression	str + pre_size		5078311	0		+			
ANR	5078935	Identifier	str		5078311	0					
ANR	5078936	Identifier	pre_size		5078311	1					
ANR	5078937	Argument	key		5078311	1					
ANR	5078938	Identifier	key		5078311	0					
ANR	5078939	Argument	key + step - key_size		5078311	2					
ANR	5078940	AdditiveExpression	key + step - key_size		5078311	0		+			
ANR	5078941	Identifier	key		5078311	0					
ANR	5078942	AdditiveExpression	step - key_size		5078311	1		-			
ANR	5078943	Identifier	step		5078311	0					
ANR	5078944	Identifier	key_size		5078311	1					
ANR	5078945	Argument	key_size		5078311	3					
ANR	5078946	Identifier	key_size		5078311	0					
ANR	5078947	ReturnStatement	return 0 ;	320:16:10066:10074	5078311	2	True				
ANR	5078948	PrimaryExpression	0		5078311	0					
ANR	5078949	Label	case CODE_VALUE_NOTDEF :	321:12:10088:10110	5078311	3	True				
ANR	5078950	Identifier	CODE_VALUE_NOTDEF		5078311	0					
ANR	5078951	ExpressionStatement	"* pglyph = GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size )"	322:16:10128:10212	5078311	4	True				
ANR	5078952	AssignmentExpression	"* pglyph = GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size )"		5078311	0		=			
ANR	5078953	UnaryOperationExpression	* pglyph		5078311	0					
ANR	5078954	UnaryOperator	*		5078311	0					
ANR	5078955	Identifier	pglyph		5078311	1					
ANR	5078956	AdditiveExpression	"GS_MIN_CID_GLYPH + bytes2int ( pvalue , pclr -> value_size )"		5078311	1		+			
ANR	5078957	Identifier	GS_MIN_CID_GLYPH		5078311	0					
ANR	5078958	CallExpression	"bytes2int ( pvalue , pclr -> value_size )"		5078311	1					
ANR	5078959	Callee	bytes2int		5078311	0					
ANR	5078960	Identifier	bytes2int		5078311	0					
ANR	5078961	ArgumentList	pvalue		5078311	1					
ANR	5078962	Argument	pvalue		5078311	0					
ANR	5078963	Identifier	pvalue		5078311	0					
ANR	5078964	Argument	pclr -> value_size		5078311	1					
ANR	5078965	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5078966	Identifier	pclr		5078311	0					
ANR	5078967	Identifier	value_size		5078311	1					
ANR	5078968	ReturnStatement	return 0 ;	324:16:10230:10238	5078311	5	True				
ANR	5078969	PrimaryExpression	0		5078311	0					
ANR	5078970	Label	case CODE_VALUE_GLYPH :	325:12:10252:10273	5078311	6	True				
ANR	5078971	Identifier	CODE_VALUE_GLYPH		5078311	0					
ANR	5078972	ExpressionStatement	"* pglyph = bytes2int ( pvalue , pclr -> value_size )"	326:16:10291:10336	5078311	7	True				
ANR	5078973	AssignmentExpression	"* pglyph = bytes2int ( pvalue , pclr -> value_size )"		5078311	0		=			
ANR	5078974	UnaryOperationExpression	* pglyph		5078311	0					
ANR	5078975	UnaryOperator	*		5078311	0					
ANR	5078976	Identifier	pglyph		5078311	1					
ANR	5078977	CallExpression	"bytes2int ( pvalue , pclr -> value_size )"		5078311	1					
ANR	5078978	Callee	bytes2int		5078311	0					
ANR	5078979	Identifier	bytes2int		5078311	0					
ANR	5078980	ArgumentList	pvalue		5078311	1					
ANR	5078981	Argument	pvalue		5078311	0					
ANR	5078982	Identifier	pvalue		5078311	0					
ANR	5078983	Argument	pclr -> value_size		5078311	1					
ANR	5078984	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5078985	Identifier	pclr		5078311	0					
ANR	5078986	Identifier	value_size		5078311	1					
ANR	5078987	ReturnStatement	return 0 ;	327:16:10354:10362	5078311	8	True				
ANR	5078988	PrimaryExpression	0		5078311	0					
ANR	5078989	Label	case CODE_VALUE_CHARS :	328:12:10376:10397	5078311	9	True				
ANR	5078990	Identifier	CODE_VALUE_CHARS		5078311	0					
ANR	5078991	ExpressionStatement	"* pglyph = bytes2int ( pvalue , pclr -> value_size ) + bytes2int ( str + pre_size , key_size ) - bytes2int ( key , key_size )"	329:16:10415:10585	5078311	10	True				
ANR	5078992	AssignmentExpression	"* pglyph = bytes2int ( pvalue , pclr -> value_size ) + bytes2int ( str + pre_size , key_size ) - bytes2int ( key , key_size )"		5078311	0		=			
ANR	5078993	UnaryOperationExpression	* pglyph		5078311	0					
ANR	5078994	UnaryOperator	*		5078311	0					
ANR	5078995	Identifier	pglyph		5078311	1					
ANR	5078996	AdditiveExpression	"bytes2int ( pvalue , pclr -> value_size ) + bytes2int ( str + pre_size , key_size ) - bytes2int ( key , key_size )"		5078311	1		+			
ANR	5078997	CallExpression	"bytes2int ( pvalue , pclr -> value_size )"		5078311	0					
ANR	5078998	Callee	bytes2int		5078311	0					
ANR	5078999	Identifier	bytes2int		5078311	0					
ANR	5079000	ArgumentList	pvalue		5078311	1					
ANR	5079001	Argument	pvalue		5078311	0					
ANR	5079002	Identifier	pvalue		5078311	0					
ANR	5079003	Argument	pclr -> value_size		5078311	1					
ANR	5079004	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5079005	Identifier	pclr		5078311	0					
ANR	5079006	Identifier	value_size		5078311	1					
ANR	5079007	AdditiveExpression	"bytes2int ( str + pre_size , key_size ) - bytes2int ( key , key_size )"		5078311	1		-			
ANR	5079008	CallExpression	"bytes2int ( str + pre_size , key_size )"		5078311	0					
ANR	5079009	Callee	bytes2int		5078311	0					
ANR	5079010	Identifier	bytes2int		5078311	0					
ANR	5079011	ArgumentList	str + pre_size		5078311	1					
ANR	5079012	Argument	str + pre_size		5078311	0					
ANR	5079013	AdditiveExpression	str + pre_size		5078311	0		+			
ANR	5079014	Identifier	str		5078311	0					
ANR	5079015	Identifier	pre_size		5078311	1					
ANR	5079016	Argument	key_size		5078311	1					
ANR	5079017	Identifier	key_size		5078311	0					
ANR	5079018	CallExpression	"bytes2int ( key , key_size )"		5078311	1					
ANR	5079019	Callee	bytes2int		5078311	0					
ANR	5079020	Identifier	bytes2int		5078311	0					
ANR	5079021	ArgumentList	key		5078311	1					
ANR	5079022	Argument	key		5078311	0					
ANR	5079023	Identifier	key		5078311	0					
ANR	5079024	Argument	key_size		5078311	1					
ANR	5079025	Identifier	key_size		5078311	0					
ANR	5079026	ReturnStatement	return pclr -> value_size ;	333:16:10603:10626	5078311	11	True				
ANR	5079027	PtrMemberAccess	pclr -> value_size		5078311	0					
ANR	5079028	Identifier	pclr		5078311	0					
ANR	5079029	Identifier	value_size		5078311	1					
ANR	5079030	Label	default :	334:12:10640:10647	5078311	12	True				
ANR	5079031	Identifier	default		5078311	0					
ANR	5079032	ExpressionStatement	return_error ( gs_error_rangecheck )	335:16:10699:10732	5078311	13	True				
ANR	5079033	CallExpression	return_error ( gs_error_rangecheck )		5078311	0					
ANR	5079034	Callee	return_error		5078311	0					
ANR	5079035	Identifier	return_error		5078311	0					
ANR	5079036	ArgumentList	gs_error_rangecheck		5078311	1					
ANR	5079037	Argument	gs_error_rangecheck		5078311	0					
ANR	5079038	Identifier	gs_error_rangecheck		5078311	0					
ANR	5079039	ExpressionStatement	* pchr = pm_chr	340:4:10790:10804	5078311	10	True				
ANR	5079040	AssignmentExpression	* pchr = pm_chr		5078311	0		=			
ANR	5079041	UnaryOperationExpression	* pchr		5078311	0					
ANR	5079042	UnaryOperator	*		5078311	0					
ANR	5079043	Identifier	pchr		5078311	1					
ANR	5079044	Identifier	pm_chr		5078311	1					
ANR	5079045	ExpressionStatement	* pindex = pm_index	341:4:10810:10828	5078311	11	True				
ANR	5079046	AssignmentExpression	* pindex = pm_index		5078311	0		=			
ANR	5079047	UnaryOperationExpression	* pindex		5078311	0					
ANR	5079048	UnaryOperator	*		5078311	0					
ANR	5079049	Identifier	pindex		5078311	1					
ANR	5079050	Identifier	pm_index		5078311	1					
ANR	5079051	ExpressionStatement	* pfidx = pm_fidx	342:4:10834:10850	5078311	12	True				
ANR	5079052	AssignmentExpression	* pfidx = pm_fidx		5078311	0		=			
ANR	5079053	UnaryOperationExpression	* pfidx		5078311	0					
ANR	5079054	UnaryOperator	*		5078311	0					
ANR	5079055	Identifier	pfidx		5078311	1					
ANR	5079056	Identifier	pm_fidx		5078311	1					
ANR	5079057	ExpressionStatement	* pglyph = GS_NO_GLYPH	343:4:10856:10877	5078311	13	True				
ANR	5079058	AssignmentExpression	* pglyph = GS_NO_GLYPH		5078311	0		=			
ANR	5079059	UnaryOperationExpression	* pglyph		5078311	0					
ANR	5079060	UnaryOperator	*		5078311	0					
ANR	5079061	Identifier	pglyph		5078311	1					
ANR	5079062	Identifier	GS_NO_GLYPH		5078311	1					
ANR	5079063	IfStatement	if ( gs_debug_c ( 'J' ) )		5078311	14					
ANR	5079064	Condition	gs_debug_c ( 'J' )	347:8:10923:10937	5078311	0	True				
ANR	5079065	CallExpression	gs_debug_c ( 'J' )		5078311	0					
ANR	5079066	Callee	gs_debug_c		5078311	0					
ANR	5079067	Identifier	gs_debug_c		5078311	0					
ANR	5079068	ArgumentList	'J'		5078311	1					
ANR	5079069	Argument	'J'		5078311	0					
ANR	5079070	PrimaryExpression	'J'		5078311	0					
ANR	5079071	CompoundStatement		187:25:6367:6367	5078311	1					
ANR	5079072	ExpressionStatement	"dlprintf ( ""[J]CMDNmr()     no full match, use partial match for ("" )"	348:8:10950:11016	5078311	0	True				
ANR	5079073	CallExpression	"dlprintf ( ""[J]CMDNmr()     no full match, use partial match for ("" )"		5078311	0					
ANR	5079074	Callee	dlprintf		5078311	0					
ANR	5079075	Identifier	dlprintf		5078311	0					
ANR	5079076	ArgumentList	"""[J]CMDNmr()     no full match, use partial match for ("""		5078311	1					
ANR	5079077	Argument	"""[J]CMDNmr()     no full match, use partial match for ("""		5078311	0					
ANR	5079078	PrimaryExpression	"""[J]CMDNmr()     no full match, use partial match for ("""		5078311	0					
ANR	5079079	ExpressionStatement	"debug_print_string_hex_nomem ( str , pm_maxlen )"	349:8:11026:11070	5078311	1	True				
ANR	5079080	CallExpression	"debug_print_string_hex_nomem ( str , pm_maxlen )"		5078311	0					
ANR	5079081	Callee	debug_print_string_hex_nomem		5078311	0					
ANR	5079082	Identifier	debug_print_string_hex_nomem		5078311	0					
ANR	5079083	ArgumentList	str		5078311	1					
ANR	5079084	Argument	str		5078311	0					
ANR	5079085	Identifier	str		5078311	0					
ANR	5079086	Argument	pm_maxlen		5078311	1					
ANR	5079087	Identifier	pm_maxlen		5078311	0					
ANR	5079088	ExpressionStatement	"dlprintf ( "")\\n"" )"	350:8:11080:11095	5078311	2	True				
ANR	5079089	CallExpression	"dlprintf ( "")\\n"" )"		5078311	0					
ANR	5079090	Callee	dlprintf		5078311	0					
ANR	5079091	Identifier	dlprintf		5078311	0					
ANR	5079092	ArgumentList	""")\\n"""		5078311	1					
ANR	5079093	Argument	""")\\n"""		5078311	0					
ANR	5079094	PrimaryExpression	""")\\n"""		5078311	0					
ANR	5079095	ReturnStatement	return 0 ;	355:4:11122:11130	5078311	15	True				
ANR	5079096	PrimaryExpression	0		5078311	0					
ANR	5079097	ReturnType	static int		5078311	1					
ANR	5079098	Identifier	code_map_decode_next_multidim_regime		5078311	2					
ANR	5079099	ParameterList	"const gx_code_map_t * pcmap , const gs_const_string * pstr , uint * pindex , uint * pfidx , gs_char * pchr , gs_glyph * pglyph"		5078311	3					
ANR	5079100	Parameter	const gx_code_map_t * pcmap	157:37:4386:4412	5078311	0	True				
ANR	5079101	ParameterType	const gx_code_map_t *		5078311	0					
ANR	5079102	Identifier	pcmap		5078311	1					
ANR	5079103	Parameter	const gs_const_string * pstr	158:21:4436:4463	5078311	1	True				
ANR	5079104	ParameterType	const gs_const_string *		5078311	0					
ANR	5079105	Identifier	pstr		5078311	1					
ANR	5079106	Parameter	uint * pindex	159:21:4487:4499	5078311	2	True				
ANR	5079107	ParameterType	uint *		5078311	0					
ANR	5079108	Identifier	pindex		5078311	1					
ANR	5079109	Parameter	uint * pfidx	159:36:4502:4513	5078311	3	True				
ANR	5079110	ParameterType	uint *		5078311	0					
ANR	5079111	Identifier	pfidx		5078311	1					
ANR	5079112	Parameter	gs_char * pchr	160:21:4537:4550	5078311	4	True				
ANR	5079113	ParameterType	gs_char *		5078311	0					
ANR	5079114	Identifier	pchr		5078311	1					
ANR	5079115	Parameter	gs_glyph * pglyph	160:37:4553:4569	5078311	5	True				
ANR	5079116	ParameterType	gs_glyph *		5078311	0					
ANR	5079117	Identifier	pglyph		5078311	1					
ANR	5079118	CFGEntryNode	ENTRY		5078311		True				
ANR	5079119	CFGExitNode	EXIT		5078311		True				
ANR	5079120	Symbol	pclr -> key_prefix_size		5078311						
ANR	5079121	Symbol	gs_error_rangecheck		5078311						
ANR	5079122	Symbol	* prefix		5078311						
ANR	5079123	Symbol	prefix		5078311						
ANR	5079124	Symbol	pchr		5078311						
ANR	5079125	Symbol	* key		5078311						
ANR	5079126	Symbol	pclr		5078311						
ANR	5079127	Symbol	gs_debug_c		5078311						
ANR	5079128	Symbol	pclr -> value_type		5078311						
ANR	5079129	Symbol	GS_MIN_CID_GLYPH		5078311						
ANR	5079130	Symbol	pm_chr		5078311						
ANR	5079131	Symbol	pclr -> values		5078311						
ANR	5079132	Symbol	NULL		5078311						
ANR	5079133	Symbol	* step		5078311						
ANR	5079134	Symbol	pstr -> size		5078311						
ANR	5079135	Symbol	* pfidx		5078311						
ANR	5079136	Symbol	* pcmap		5078311						
ANR	5079137	Symbol	str		5078311						
ANR	5079138	Symbol	gs_multidim_CID_offset		5078311						
ANR	5079139	Symbol	pclr -> font_index		5078311						
ANR	5079140	Symbol	pm_index		5078311						
ANR	5079141	Symbol	pclr -> num_entries		5078311						
ANR	5079142	Symbol	pclr -> key_size		5078311						
ANR	5079143	Symbol	pm_fidx		5078311						
ANR	5079144	Symbol	* pre_size		5078311						
ANR	5079145	Symbol	key_size		5078311						
ANR	5079146	Symbol	pglyph		5078311						
ANR	5079147	Symbol	pclr -> key_is_range		5078311						
ANR	5079148	Symbol	chr_size		5078311						
ANR	5079149	Symbol	pclr -> values . data		5078311						
ANR	5079150	Symbol	* pglyph		5078311						
ANR	5079151	Symbol	pre_size		5078311						
ANR	5079152	Symbol	* pindex		5078311						
ANR	5079153	Symbol	pvalue		5078311						
ANR	5079154	Symbol	pstr -> data		5078311						
ANR	5079155	Symbol	* pclr		5078311						
ANR	5079156	Symbol	pcmap		5078311						
ANR	5079157	Symbol	* pchr		5078311						
ANR	5079158	Symbol	bytes2int		5078311						
ANR	5079159	Symbol	* pstr		5078311						
ANR	5079160	Symbol	pclr -> keys . data		5078311						
ANR	5079161	Symbol	* str		5078311						
ANR	5079162	Symbol	pfidx		5078311						
ANR	5079163	Symbol	pclr -> value_size		5078311						
ANR	5079164	Symbol	key		5078311						
ANR	5079165	Symbol	pclr -> key_prefix		5078311						
ANR	5079166	Symbol	pcmap -> num_lookup		5078311						
ANR	5079167	Symbol	pclr -> keys		5078311						
ANR	5079168	Symbol	c		5078311						
ANR	5079169	Symbol	i		5078311						
ANR	5079170	Symbol	j		5078311						
ANR	5079171	Symbol	k		5078311						
ANR	5079172	Symbol	l		5078311						
ANR	5079173	Symbol	* key_size		5078311						
ANR	5079174	Symbol	GS_NO_GLYPH		5078311						
ANR	5079175	Symbol	* j		5078311						
ANR	5079176	Symbol	pstr		5078311						
ANR	5079177	Symbol	* l		5078311						
ANR	5079178	Symbol	step		5078311						
ANR	5079179	Symbol	pindex		5078311						
ANR	5079180	Symbol	pm_maxlen		5078311						
ANR	5079181	Symbol	ssize		5078311						
ANR	5079182	Symbol	pcmap -> lookup		5078311						
ANR	5079183	Function	gs_cmap_adobe1_decode_next	366:0:11509:14911							
ANR	5079184	FunctionDef	"gs_cmap_adobe1_decode_next (const gs_cmap_t * pcmap_in , const gs_const_string * pstr , uint * pindex , uint * pfidx , gs_char * pchr , gs_glyph * pglyph)"		5079183	0					
ANR	5079185	CompoundStatement		371:0:11750:14911	5079183	0					
ANR	5079186	IdentifierDeclStatement	const gs_cmap_adobe1_t * pcmap = ( const gs_cmap_adobe1_t * ) pcmap_in ;	372:4:11756:11822	5079183	0	True				
ANR	5079187	IdentifierDecl	* pcmap = ( const gs_cmap_adobe1_t * ) pcmap_in		5079183	0					
ANR	5079188	IdentifierDeclType	const gs_cmap_adobe1_t *		5079183	0					
ANR	5079189	Identifier	pcmap		5079183	1					
ANR	5079190	AssignmentExpression	* pcmap = ( const gs_cmap_adobe1_t * ) pcmap_in		5079183	2		=			
ANR	5079191	Identifier	pcmap		5079183	0					
ANR	5079192	CastExpression	( const gs_cmap_adobe1_t * ) pcmap_in		5079183	1					
ANR	5079193	CastTarget	const gs_cmap_adobe1_t *		5079183	0					
ANR	5079194	Identifier	pcmap_in		5079183	1					
ANR	5079195	IdentifierDeclStatement	uint save_index = * pindex ;	373:4:11828:11853	5079183	1	True				
ANR	5079196	IdentifierDecl	save_index = * pindex		5079183	0					
ANR	5079197	IdentifierDeclType	uint		5079183	0					
ANR	5079198	Identifier	save_index		5079183	1					
ANR	5079199	AssignmentExpression	save_index = * pindex		5079183	2		=			
ANR	5079200	Identifier	save_index		5079183	0					
ANR	5079201	UnaryOperationExpression	* pindex		5079183	1					
ANR	5079202	UnaryOperator	*		5079183	0					
ANR	5079203	Identifier	pindex		5079183	1					
ANR	5079204	IdentifierDeclStatement	int code ;	374:4:11859:11867	5079183	2	True				
ANR	5079205	IdentifierDecl	code		5079183	0					
ANR	5079206	IdentifierDeclType	int		5079183	0					
ANR	5079207	Identifier	code		5079183	1					
ANR	5079208	IdentifierDeclStatement	uint pm_index ;	376:4:11874:11887	5079183	3	True				
ANR	5079209	IdentifierDecl	pm_index		5079183	0					
ANR	5079210	IdentifierDeclType	uint		5079183	0					
ANR	5079211	Identifier	pm_index		5079183	1					
ANR	5079212	IdentifierDeclStatement	uint pm_fidx ;	377:4:11893:11905	5079183	4	True				
ANR	5079213	IdentifierDecl	pm_fidx		5079183	0					
ANR	5079214	IdentifierDeclType	uint		5079183	0					
ANR	5079215	Identifier	pm_fidx		5079183	1					
ANR	5079216	ExpressionStatement	"if_debug0 ( 'J' , ""[J]GCDN() check def CMap\\n"" )"	380:4:11951:11995	5079183	5	True				
ANR	5079217	CallExpression	"if_debug0 ( 'J' , ""[J]GCDN() check def CMap\\n"" )"		5079183	0					
ANR	5079218	Callee	if_debug0		5079183	0					
ANR	5079219	Identifier	if_debug0		5079183	0					
ANR	5079220	ArgumentList	'J'		5079183	1					
ANR	5079221	Argument	'J'		5079183	0					
ANR	5079222	PrimaryExpression	'J'		5079183	0					
ANR	5079223	Argument	"""[J]GCDN() check def CMap\\n"""		5079183	1					
ANR	5079224	PrimaryExpression	"""[J]GCDN() check def CMap\\n"""		5079183	0					
ANR	5079225	ExpressionStatement	"code = code_map_decode_next_multidim_regime ( & pcmap -> def , pstr , pindex , pfidx , pchr , pglyph )"	381:4:12001:12100	5079183	6	True				
ANR	5079226	AssignmentExpression	"code = code_map_decode_next_multidim_regime ( & pcmap -> def , pstr , pindex , pfidx , pchr , pglyph )"		5079183	0		=			
ANR	5079227	Identifier	code		5079183	0					
ANR	5079228	CallExpression	"code_map_decode_next_multidim_regime ( & pcmap -> def , pstr , pindex , pfidx , pchr , pglyph )"		5079183	1					
ANR	5079229	Callee	code_map_decode_next_multidim_regime		5079183	0					
ANR	5079230	Identifier	code_map_decode_next_multidim_regime		5079183	0					
ANR	5079231	ArgumentList	& pcmap -> def		5079183	1					
ANR	5079232	Argument	& pcmap -> def		5079183	0					
ANR	5079233	UnaryOperationExpression	& pcmap -> def		5079183	0					
ANR	5079234	UnaryOperator	&		5079183	0					
ANR	5079235	PtrMemberAccess	pcmap -> def		5079183	1					
ANR	5079236	Identifier	pcmap		5079183	0					
ANR	5079237	Identifier	def		5079183	1					
ANR	5079238	Argument	pstr		5079183	1					
ANR	5079239	Identifier	pstr		5079183	0					
ANR	5079240	Argument	pindex		5079183	2					
ANR	5079241	Identifier	pindex		5079183	0					
ANR	5079242	Argument	pfidx		5079183	3					
ANR	5079243	Identifier	pfidx		5079183	0					
ANR	5079244	Argument	pchr		5079183	4					
ANR	5079245	Identifier	pchr		5079183	0					
ANR	5079246	Argument	pglyph		5079183	5					
ANR	5079247	Identifier	pglyph		5079183	0					
ANR	5079248	IfStatement	if ( code != 0 || * pglyph != GS_NO_GLYPH )		5079183	7					
ANR	5079249	Condition	code != 0 || * pglyph != GS_NO_GLYPH	385:8:12147:12181	5079183	0	True				
ANR	5079250	OrExpression	code != 0 || * pglyph != GS_NO_GLYPH		5079183	0		||			
ANR	5079251	EqualityExpression	code != 0		5079183	0		!=			
ANR	5079252	Identifier	code		5079183	0					
ANR	5079253	PrimaryExpression	0		5079183	1					
ANR	5079254	EqualityExpression	* pglyph != GS_NO_GLYPH		5079183	1		!=			
ANR	5079255	UnaryOperationExpression	* pglyph		5079183	0					
ANR	5079256	UnaryOperator	*		5079183	0					
ANR	5079257	Identifier	pglyph		5079183	1					
ANR	5079258	Identifier	GS_NO_GLYPH		5079183	1					
ANR	5079259	ReturnStatement	return code ;	386:8:12192:12203	5079183	1	True				
ANR	5079260	Identifier	code		5079183	0					
ANR	5079261	ExpressionStatement	pm_index = * pindex	390:4:12300:12318	5079183	8	True				
ANR	5079262	AssignmentExpression	pm_index = * pindex		5079183	0		=			
ANR	5079263	Identifier	pm_index		5079183	0					
ANR	5079264	UnaryOperationExpression	* pindex		5079183	1					
ANR	5079265	UnaryOperator	*		5079183	0					
ANR	5079266	Identifier	pindex		5079183	1					
ANR	5079267	ExpressionStatement	pm_fidx = * pfidx	391:4:12324:12340	5079183	9	True				
ANR	5079268	AssignmentExpression	pm_fidx = * pfidx		5079183	0		=			
ANR	5079269	Identifier	pm_fidx		5079183	0					
ANR	5079270	UnaryOperationExpression	* pfidx		5079183	1					
ANR	5079271	UnaryOperator	*		5079183	0					
ANR	5079272	Identifier	pfidx		5079183	1					
ANR	5079273	ExpressionStatement	"if_debug0 ( 'J' , ""[J]GCDN() check notdef CMap\\n"" )"	394:4:12375:12422	5079183	10	True				
ANR	5079274	CallExpression	"if_debug0 ( 'J' , ""[J]GCDN() check notdef CMap\\n"" )"		5079183	0					
ANR	5079275	Callee	if_debug0		5079183	0					
ANR	5079276	Identifier	if_debug0		5079183	0					
ANR	5079277	ArgumentList	'J'		5079183	1					
ANR	5079278	Argument	'J'		5079183	0					
ANR	5079279	PrimaryExpression	'J'		5079183	0					
ANR	5079280	Argument	"""[J]GCDN() check notdef CMap\\n"""		5079183	1					
ANR	5079281	PrimaryExpression	"""[J]GCDN() check notdef CMap\\n"""		5079183	0					
ANR	5079282	ExpressionStatement	* pindex = save_index	395:4:12428:12448	5079183	11	True				
ANR	5079283	AssignmentExpression	* pindex = save_index		5079183	0		=			
ANR	5079284	UnaryOperationExpression	* pindex		5079183	0					
ANR	5079285	UnaryOperator	*		5079183	0					
ANR	5079286	Identifier	pindex		5079183	1					
ANR	5079287	Identifier	save_index		5079183	1					
ANR	5079288	ExpressionStatement	"code = code_map_decode_next_multidim_regime ( & pcmap -> notdef , pstr , pindex , pfidx , pchr , pglyph )"	396:4:12454:12556	5079183	12	True				
ANR	5079289	AssignmentExpression	"code = code_map_decode_next_multidim_regime ( & pcmap -> notdef , pstr , pindex , pfidx , pchr , pglyph )"		5079183	0		=			
ANR	5079290	Identifier	code		5079183	0					
ANR	5079291	CallExpression	"code_map_decode_next_multidim_regime ( & pcmap -> notdef , pstr , pindex , pfidx , pchr , pglyph )"		5079183	1					
ANR	5079292	Callee	code_map_decode_next_multidim_regime		5079183	0					
ANR	5079293	Identifier	code_map_decode_next_multidim_regime		5079183	0					
ANR	5079294	ArgumentList	& pcmap -> notdef		5079183	1					
ANR	5079295	Argument	& pcmap -> notdef		5079183	0					
ANR	5079296	UnaryOperationExpression	& pcmap -> notdef		5079183	0					
ANR	5079297	UnaryOperator	&		5079183	0					
ANR	5079298	PtrMemberAccess	pcmap -> notdef		5079183	1					
ANR	5079299	Identifier	pcmap		5079183	0					
ANR	5079300	Identifier	notdef		5079183	1					
ANR	5079301	Argument	pstr		5079183	1					
ANR	5079302	Identifier	pstr		5079183	0					
ANR	5079303	Argument	pindex		5079183	2					
ANR	5079304	Identifier	pindex		5079183	0					
ANR	5079305	Argument	pfidx		5079183	3					
ANR	5079306	Identifier	pfidx		5079183	0					
ANR	5079307	Argument	pchr		5079183	4					
ANR	5079308	Identifier	pchr		5079183	0					
ANR	5079309	Argument	pglyph		5079183	5					
ANR	5079310	Identifier	pglyph		5079183	0					
ANR	5079311	IfStatement	if ( code != 0 || * pglyph != GS_NO_GLYPH )		5079183	13					
ANR	5079312	Condition	code != 0 || * pglyph != GS_NO_GLYPH	400:8:12613:12647	5079183	0	True				
ANR	5079313	OrExpression	code != 0 || * pglyph != GS_NO_GLYPH		5079183	0		||			
ANR	5079314	EqualityExpression	code != 0		5079183	0		!=			
ANR	5079315	Identifier	code		5079183	0					
ANR	5079316	PrimaryExpression	0		5079183	1					
ANR	5079317	EqualityExpression	* pglyph != GS_NO_GLYPH		5079183	1		!=			
ANR	5079318	UnaryOperationExpression	* pglyph		5079183	0					
ANR	5079319	UnaryOperator	*		5079183	0					
ANR	5079320	Identifier	pglyph		5079183	1					
ANR	5079321	Identifier	GS_NO_GLYPH		5079183	1					
ANR	5079322	ReturnStatement	return code ;	401:8:12658:12669	5079183	1	True				
ANR	5079323	Identifier	code		5079183	0					
ANR	5079324	IfStatement	if ( save_index < pm_index )		5079183	14					
ANR	5079325	Condition	save_index < pm_index	407:8:12808:12828	5079183	0	True				
ANR	5079326	RelationalExpression	save_index < pm_index		5079183	0		<			
ANR	5079327	Identifier	save_index		5079183	0					
ANR	5079328	Identifier	pm_index		5079183	1					
ANR	5079329	CompoundStatement		37:31:1080:1080	5079183	1					
ANR	5079330	ExpressionStatement	* pglyph = GS_MIN_CID_GLYPH	411:8:12890:12916	5079183	0	True				
ANR	5079331	AssignmentExpression	* pglyph = GS_MIN_CID_GLYPH		5079183	0		=			
ANR	5079332	UnaryOperationExpression	* pglyph		5079183	0					
ANR	5079333	UnaryOperator	*		5079183	0					
ANR	5079334	Identifier	pglyph		5079183	1					
ANR	5079335	Identifier	GS_MIN_CID_GLYPH		5079183	1					
ANR	5079336	ExpressionStatement	* pindex = pm_index	412:8:12940:12958	5079183	1	True				
ANR	5079337	AssignmentExpression	* pindex = pm_index		5079183	0		=			
ANR	5079338	UnaryOperationExpression	* pindex		5079183	0					
ANR	5079339	UnaryOperator	*		5079183	0					
ANR	5079340	Identifier	pindex		5079183	1					
ANR	5079341	Identifier	pm_index		5079183	1					
ANR	5079342	ExpressionStatement	* pfidx = pm_fidx	413:8:12968:12984	5079183	2	True				
ANR	5079343	AssignmentExpression	* pfidx = pm_fidx		5079183	0		=			
ANR	5079344	UnaryOperationExpression	* pfidx		5079183	0					
ANR	5079345	UnaryOperator	*		5079183	0					
ANR	5079346	Identifier	pfidx		5079183	1					
ANR	5079347	Identifier	pm_fidx		5079183	1					
ANR	5079348	ExpressionStatement	* pchr = '\\0'	414:8:12994:13006	5079183	3	True				
ANR	5079349	AssignmentExpression	* pchr = '\\0'		5079183	0		=			
ANR	5079350	UnaryOperationExpression	* pchr		5079183	0					
ANR	5079351	UnaryOperator	*		5079183	0					
ANR	5079352	Identifier	pchr		5079183	1					
ANR	5079353	PrimaryExpression	'\\0'		5079183	1					
ANR	5079354	ReturnStatement	return 0 ;	415:9:13017:13025	5079183	4	True				
ANR	5079355	PrimaryExpression	0		5079183	0					
ANR	5079356	ElseStatement	else		5079183	0					
ANR	5079357	CompoundStatement		59:8:1790:1874	5079183	0					
ANR	5079358	IdentifierDeclStatement	uint ssize = pstr -> size - save_index ;	428:8:13495:13531	5079183	0	True				
ANR	5079359	IdentifierDecl	ssize = pstr -> size - save_index		5079183	0					
ANR	5079360	IdentifierDeclType	uint		5079183	0					
ANR	5079361	Identifier	ssize		5079183	1					
ANR	5079362	AssignmentExpression	ssize = pstr -> size - save_index		5079183	2		=			
ANR	5079363	Identifier	ssize		5079183	0					
ANR	5079364	AdditiveExpression	pstr -> size - save_index		5079183	1		-			
ANR	5079365	PtrMemberAccess	pstr -> size		5079183	0					
ANR	5079366	Identifier	pstr		5079183	0					
ANR	5079367	Identifier	size		5079183	1					
ANR	5079368	Identifier	save_index		5079183	1					
ANR	5079369	IdentifierDeclStatement	"int chr_size_shortest = gs_cmap_get_shortest_chr ( & pcmap -> def , pfidx ) ;"	429:8:13541:13625	5079183	1	True				
ANR	5079370	IdentifierDecl	"chr_size_shortest = gs_cmap_get_shortest_chr ( & pcmap -> def , pfidx )"		5079183	0					
ANR	5079371	IdentifierDeclType	int		5079183	0					
ANR	5079372	Identifier	chr_size_shortest		5079183	1					
ANR	5079373	AssignmentExpression	"chr_size_shortest = gs_cmap_get_shortest_chr ( & pcmap -> def , pfidx )"		5079183	2		=			
ANR	5079374	Identifier	chr_size_shortest		5079183	0					
ANR	5079375	CallExpression	"gs_cmap_get_shortest_chr ( & pcmap -> def , pfidx )"		5079183	1					
ANR	5079376	Callee	gs_cmap_get_shortest_chr		5079183	0					
ANR	5079377	Identifier	gs_cmap_get_shortest_chr		5079183	0					
ANR	5079378	ArgumentList	& pcmap -> def		5079183	1					
ANR	5079379	Argument	& pcmap -> def		5079183	0					
ANR	5079380	UnaryOperationExpression	& pcmap -> def		5079183	0					
ANR	5079381	UnaryOperator	&		5079183	0					
ANR	5079382	PtrMemberAccess	pcmap -> def		5079183	1					
ANR	5079383	Identifier	pcmap		5079183	0					
ANR	5079384	Identifier	def		5079183	1					
ANR	5079385	Argument	pfidx		5079183	1					
ANR	5079386	Identifier	pfidx		5079183	0					
ANR	5079387	IfStatement	if ( chr_size_shortest <= ssize )		5079183	2					
ANR	5079388	Condition	chr_size_shortest <= ssize	432:12:13640:13665	5079183	0	True				
ANR	5079389	RelationalExpression	chr_size_shortest <= ssize		5079183	0		<=			
ANR	5079390	Identifier	chr_size_shortest		5079183	0					
ANR	5079391	Identifier	ssize		5079183	1					
ANR	5079392	CompoundStatement		62:40:1917:1917	5079183	1					
ANR	5079393	ExpressionStatement	* pglyph = GS_MIN_CID_GLYPH	433:12:13682:13708	5079183	0	True				
ANR	5079394	AssignmentExpression	* pglyph = GS_MIN_CID_GLYPH		5079183	0		=			
ANR	5079395	UnaryOperationExpression	* pglyph		5079183	0					
ANR	5079396	UnaryOperator	*		5079183	0					
ANR	5079397	Identifier	pglyph		5079183	1					
ANR	5079398	Identifier	GS_MIN_CID_GLYPH		5079183	1					
ANR	5079399	ExpressionStatement	* pindex = save_index + chr_size_shortest	434:12:13759:13799	5079183	1	True				
ANR	5079400	AssignmentExpression	* pindex = save_index + chr_size_shortest		5079183	0		=			
ANR	5079401	UnaryOperationExpression	* pindex		5079183	0					
ANR	5079402	UnaryOperator	*		5079183	0					
ANR	5079403	Identifier	pindex		5079183	1					
ANR	5079404	AdditiveExpression	save_index + chr_size_shortest		5079183	1		+			
ANR	5079405	Identifier	save_index		5079183	0					
ANR	5079406	Identifier	chr_size_shortest		5079183	1					
ANR	5079407	ExpressionStatement	* pchr = '\\0'	435:12:13813:13825	5079183	2	True				
ANR	5079408	AssignmentExpression	* pchr = '\\0'		5079183	0		=			
ANR	5079409	UnaryOperationExpression	* pchr		5079183	0					
ANR	5079410	UnaryOperator	*		5079183	0					
ANR	5079411	Identifier	pchr		5079183	1					
ANR	5079412	PrimaryExpression	'\\0'		5079183	1					
ANR	5079413	IfStatement	if ( gs_debug_c ( 'J' ) )		5079183	3					
ANR	5079414	Condition	gs_debug_c ( 'J' )	438:16:13878:13892	5079183	0	True				
ANR	5079415	CallExpression	gs_debug_c ( 'J' )		5079183	0					
ANR	5079416	Callee	gs_debug_c		5079183	0					
ANR	5079417	Identifier	gs_debug_c		5079183	0					
ANR	5079418	ArgumentList	'J'		5079183	1					
ANR	5079419	Argument	'J'		5079183	0					
ANR	5079420	PrimaryExpression	'J'		5079183	0					
ANR	5079421	CompoundStatement		69:16:2162:2203	5079183	1					
ANR	5079422	IdentifierDeclStatement	const byte * str = pstr -> data + save_index ;	439:16:13913:13954	5079183	0	True				
ANR	5079423	IdentifierDecl	* str = pstr -> data + save_index		5079183	0					
ANR	5079424	IdentifierDeclType	const byte *		5079183	0					
ANR	5079425	Identifier	str		5079183	1					
ANR	5079426	AssignmentExpression	* str = pstr -> data + save_index		5079183	2		=			
ANR	5079427	Identifier	str		5079183	0					
ANR	5079428	AdditiveExpression	pstr -> data + save_index		5079183	1		+			
ANR	5079429	PtrMemberAccess	pstr -> data		5079183	0					
ANR	5079430	Identifier	pstr		5079183	0					
ANR	5079431	Identifier	data		5079183	1					
ANR	5079432	Identifier	save_index		5079183	1					
ANR	5079433	ExpressionStatement	"dlprintf1 ( ""[J]GCDN() no partial match, skip %d byte ("" , chr_size_shortest )"	440:16:13972:14093	5079183	1	True				
ANR	5079434	CallExpression	"dlprintf1 ( ""[J]GCDN() no partial match, skip %d byte ("" , chr_size_shortest )"		5079183	0					
ANR	5079435	Callee	dlprintf1		5079183	0					
ANR	5079436	Identifier	dlprintf1		5079183	0					
ANR	5079437	ArgumentList	"""[J]GCDN() no partial match, skip %d byte ("""		5079183	1					
ANR	5079438	Argument	"""[J]GCDN() no partial match, skip %d byte ("""		5079183	0					
ANR	5079439	PrimaryExpression	"""[J]GCDN() no partial match, skip %d byte ("""		5079183	0					
ANR	5079440	Argument	chr_size_shortest		5079183	1					
ANR	5079441	Identifier	chr_size_shortest		5079183	0					
ANR	5079442	ExpressionStatement	"debug_print_string_hex_nomem ( str , chr_size_shortest )"	442:16:14111:14163	5079183	2	True				
ANR	5079443	CallExpression	"debug_print_string_hex_nomem ( str , chr_size_shortest )"		5079183	0					
ANR	5079444	Callee	debug_print_string_hex_nomem		5079183	0					
ANR	5079445	Identifier	debug_print_string_hex_nomem		5079183	0					
ANR	5079446	ArgumentList	str		5079183	1					
ANR	5079447	Argument	str		5079183	0					
ANR	5079448	Identifier	str		5079183	0					
ANR	5079449	Argument	chr_size_shortest		5079183	1					
ANR	5079450	Identifier	chr_size_shortest		5079183	0					
ANR	5079451	ExpressionStatement	"dlprintf ( "")\\n"" )"	443:16:14181:14196	5079183	3	True				
ANR	5079452	CallExpression	"dlprintf ( "")\\n"" )"		5079183	0					
ANR	5079453	Callee	dlprintf		5079183	0					
ANR	5079454	Identifier	dlprintf		5079183	0					
ANR	5079455	ArgumentList	""")\\n"""		5079183	1					
ANR	5079456	Argument	""")\\n"""		5079183	0					
ANR	5079457	PrimaryExpression	""")\\n"""		5079183	0					
ANR	5079458	ReturnStatement	return 0 ;	447:12:14238:14246	5079183	4	True				
ANR	5079459	PrimaryExpression	0		5079183	0					
ANR	5079460	ElseStatement	else		5079183	0					
ANR	5079461	CompoundStatement		79:13:2573:2573	5079183	0					
ANR	5079462	IfStatement	if ( gs_debug_c ( 'J' ) )		5079183	0					
ANR	5079463	Condition	gs_debug_c ( 'J' )	455:16:14537:14551	5079183	0	True				
ANR	5079464	CallExpression	gs_debug_c ( 'J' )		5079183	0					
ANR	5079465	Callee	gs_debug_c		5079183	0					
ANR	5079466	Identifier	gs_debug_c		5079183	0					
ANR	5079467	ArgumentList	'J'		5079183	1					
ANR	5079468	Argument	'J'		5079183	0					
ANR	5079469	PrimaryExpression	'J'		5079183	0					
ANR	5079470	CompoundStatement		85:33:2803:2803	5079183	1					
ANR	5079471	ExpressionStatement	"dlprintf2 ( ""[J]GCDN() left data in buffer (%d) is shorter than shortest defined character (%d)\\n"" , ssize , chr_size_shortest )"	456:16:14572:14713	5079183	0	True				
ANR	5079472	CallExpression	"dlprintf2 ( ""[J]GCDN() left data in buffer (%d) is shorter than shortest defined character (%d)\\n"" , ssize , chr_size_shortest )"		5079183	0					
ANR	5079473	Callee	dlprintf2		5079183	0					
ANR	5079474	Identifier	dlprintf2		5079183	0					
ANR	5079475	ArgumentList	"""[J]GCDN() left data in buffer (%d) is shorter than shortest defined character (%d)\\n"""		5079183	1					
ANR	5079476	Argument	"""[J]GCDN() left data in buffer (%d) is shorter than shortest defined character (%d)\\n"""		5079183	0					
ANR	5079477	PrimaryExpression	"""[J]GCDN() left data in buffer (%d) is shorter than shortest defined character (%d)\\n"""		5079183	0					
ANR	5079478	Argument	ssize		5079183	1					
ANR	5079479	Identifier	ssize		5079183	0					
ANR	5079480	Argument	chr_size_shortest		5079183	2					
ANR	5079481	Identifier	chr_size_shortest		5079183	0					
ANR	5079482	ExpressionStatement	* pglyph = GS_NO_GLYPH	461:12:14755:14776	5079183	1	True				
ANR	5079483	AssignmentExpression	* pglyph = GS_NO_GLYPH		5079183	0		=			
ANR	5079484	UnaryOperationExpression	* pglyph		5079183	0					
ANR	5079485	UnaryOperator	*		5079183	0					
ANR	5079486	Identifier	pglyph		5079183	1					
ANR	5079487	Identifier	GS_NO_GLYPH		5079183	1					
ANR	5079488	ExpressionStatement	* pindex += ssize	462:12:14790:14806	5079183	2	True				
ANR	5079489	AssignmentExpression	* pindex += ssize		5079183	0		+=			
ANR	5079490	UnaryOperationExpression	* pindex		5079183	0					
ANR	5079491	UnaryOperator	*		5079183	0					
ANR	5079492	Identifier	pindex		5079183	1					
ANR	5079493	Identifier	ssize		5079183	1					
ANR	5079494	ReturnStatement	return 0 ;	463:12:14820:14828	5079183	3	True				
ANR	5079495	PrimaryExpression	0		5079183	0					
ANR	5079496	ReturnType	static int		5079183	1					
ANR	5079497	Identifier	gs_cmap_adobe1_decode_next		5079183	2					
ANR	5079498	ParameterList	"const gs_cmap_t * pcmap_in , const gs_const_string * pstr , uint * pindex , uint * pfidx , gs_char * pchr , gs_glyph * pglyph"		5079183	3					
ANR	5079499	Parameter	const gs_cmap_t * pcmap_in	367:27:11547:11572	5079183	0	True				
ANR	5079500	ParameterType	const gs_cmap_t *		5079183	0					
ANR	5079501	Identifier	pcmap_in		5079183	1					
ANR	5079502	Parameter	const gs_const_string * pstr	368:27:11602:11629	5079183	1	True				
ANR	5079503	ParameterType	const gs_const_string *		5079183	0					
ANR	5079504	Identifier	pstr		5079183	1					
ANR	5079505	Parameter	uint * pindex	369:27:11659:11671	5079183	2	True				
ANR	5079506	ParameterType	uint *		5079183	0					
ANR	5079507	Identifier	pindex		5079183	1					
ANR	5079508	Parameter	uint * pfidx	369:42:11674:11685	5079183	3	True				
ANR	5079509	ParameterType	uint *		5079183	0					
ANR	5079510	Identifier	pfidx		5079183	1					
ANR	5079511	Parameter	gs_char * pchr	370:27:11715:11728	5079183	4	True				
ANR	5079512	ParameterType	gs_char *		5079183	0					
ANR	5079513	Identifier	pchr		5079183	1					
ANR	5079514	Parameter	gs_glyph * pglyph	370:43:11731:11747	5079183	5	True				
ANR	5079515	ParameterType	gs_glyph *		5079183	0					
ANR	5079516	Identifier	pglyph		5079183	1					
ANR	5079517	CFGEntryNode	ENTRY		5079183		True				
ANR	5079518	CFGExitNode	EXIT		5079183		True				
ANR	5079519	Symbol	gs_cmap_get_shortest_chr		5079183						
ANR	5079520	Symbol	pglyph		5079183						
ANR	5079521	Symbol	pcmap_in		5079183						
ANR	5079522	Symbol	code		5079183						
ANR	5079523	Symbol	* pglyph		5079183						
ANR	5079524	Symbol	pchr		5079183						
ANR	5079525	Symbol	* pindex		5079183						
ANR	5079526	Symbol	pstr -> data		5079183						
ANR	5079527	Symbol	pcmap		5079183						
ANR	5079528	Symbol	* pchr		5079183						
ANR	5079529	Symbol	* pstr		5079183						
ANR	5079530	Symbol	chr_size_shortest		5079183						
ANR	5079531	Symbol	gs_debug_c		5079183						
ANR	5079532	Symbol	pfidx		5079183						
ANR	5079533	Symbol	GS_MIN_CID_GLYPH		5079183						
ANR	5079534	Symbol	code_map_decode_next_multidim_regime		5079183						
ANR	5079535	Symbol	pstr -> size		5079183						
ANR	5079536	Symbol	* pfidx		5079183						
ANR	5079537	Symbol	str		5079183						
ANR	5079538	Symbol	pm_index		5079183						
ANR	5079539	Symbol	GS_NO_GLYPH		5079183						
ANR	5079540	Symbol	save_index		5079183						
ANR	5079541	Symbol	pstr		5079183						
ANR	5079542	Symbol	pindex		5079183						
ANR	5079543	Symbol	& pcmap -> notdef		5079183						
ANR	5079544	Symbol	pm_fidx		5079183						
ANR	5079545	Symbol	ssize		5079183						
ANR	5079546	Symbol	& pcmap -> def		5079183						
ANR	5079547	Function	adobe1_next_range	475:0:15104:15402							
ANR	5079548	FunctionDef	adobe1_next_range (gs_cmap_ranges_enum_t * penum)		5079547	0					
ANR	5079549	CompoundStatement		477:0:15163:15402	5079547	0					
ANR	5079550	Statement	const	478:4:15169:15173	5079547	0	True				
ANR	5079551	Statement	gs_cmap_adobe1_t	478:10:15175:15190	5079547	1	True				
ANR	5079552	Statement	*	478:27:15192:15192	5079547	2	True				
ANR	5079553	Statement	const	478:28:15193:15197	5079547	3	True				
ANR	5079554	ExpressionStatement	pcmap = ( const gs_cmap_adobe1_t * ) penum -> cmap	478:34:15199:15252	5079547	4	True				
ANR	5079555	AssignmentExpression	pcmap = ( const gs_cmap_adobe1_t * ) penum -> cmap		5079547	0		=			
ANR	5079556	Identifier	pcmap		5079547	0					
ANR	5079557	CastExpression	( const gs_cmap_adobe1_t * ) penum -> cmap		5079547	1					
ANR	5079558	CastTarget	const gs_cmap_adobe1_t *		5079547	0					
ANR	5079559	PtrMemberAccess	penum -> cmap		5079547	1					
ANR	5079560	Identifier	penum		5079547	0					
ANR	5079561	Identifier	cmap		5079547	1					
ANR	5079562	IfStatement	if ( penum -> index >= pcmap -> code_space . num_ranges )		5079547	5					
ANR	5079563	Condition	penum -> index >= pcmap -> code_space . num_ranges	481:8:15263:15306	5079547	0	True				
ANR	5079564	RelationalExpression	penum -> index >= pcmap -> code_space . num_ranges		5079547	0		>=			
ANR	5079565	PtrMemberAccess	penum -> index		5079547	0					
ANR	5079566	Identifier	penum		5079547	0					
ANR	5079567	Identifier	index		5079547	1					
ANR	5079568	MemberAccess	pcmap -> code_space . num_ranges		5079547	1					
ANR	5079569	PtrMemberAccess	pcmap -> code_space		5079547	0					
ANR	5079570	Identifier	pcmap		5079547	0					
ANR	5079571	Identifier	code_space		5079547	1					
ANR	5079572	Identifier	num_ranges		5079547	1					
ANR	5079573	ReturnStatement	return 1 ;	482:8:15317:15325	5079547	1	True				
ANR	5079574	PrimaryExpression	1		5079547	0					
ANR	5079575	ExpressionStatement	penum -> range = pcmap -> code_space . ranges [ penum -> index ++ ]	483:4:15331:15386	5079547	6	True				
ANR	5079576	AssignmentExpression	penum -> range = pcmap -> code_space . ranges [ penum -> index ++ ]		5079547	0		=			
ANR	5079577	PtrMemberAccess	penum -> range		5079547	0					
ANR	5079578	Identifier	penum		5079547	0					
ANR	5079579	Identifier	range		5079547	1					
ANR	5079580	ArrayIndexing	pcmap -> code_space . ranges [ penum -> index ++ ]		5079547	1					
ANR	5079581	MemberAccess	pcmap -> code_space . ranges		5079547	0					
ANR	5079582	PtrMemberAccess	pcmap -> code_space		5079547	0					
ANR	5079583	Identifier	pcmap		5079547	0					
ANR	5079584	Identifier	code_space		5079547	1					
ANR	5079585	Identifier	ranges		5079547	1					
ANR	5079586	PostIncDecOperationExpression	penum -> index ++		5079547	1					
ANR	5079587	PtrMemberAccess	penum -> index		5079547	0					
ANR	5079588	Identifier	penum		5079547	0					
ANR	5079589	Identifier	index		5079547	1					
ANR	5079590	IncDec	++		5079547	1					
ANR	5079591	ReturnStatement	return 0 ;	484:4:15392:15400	5079547	7	True				
ANR	5079592	PrimaryExpression	0		5079547	0					
ANR	5079593	ReturnType	static int		5079547	1					
ANR	5079594	Identifier	adobe1_next_range		5079547	2					
ANR	5079595	ParameterList	gs_cmap_ranges_enum_t * penum		5079547	3					
ANR	5079596	Parameter	gs_cmap_ranges_enum_t * penum	476:18:15133:15160	5079547	0	True				
ANR	5079597	ParameterType	gs_cmap_ranges_enum_t *		5079547	0					
ANR	5079598	Identifier	penum		5079547	1					
ANR	5079599	CFGEntryNode	ENTRY		5079547		True				
ANR	5079600	CFGExitNode	EXIT		5079547		True				
ANR	5079601	Symbol	* penum		5079547						
ANR	5079602	Symbol	pcmap -> code_space		5079547						
ANR	5079603	Symbol	penum -> cmap		5079547						
ANR	5079604	Symbol	* * pcmap		5079547						
ANR	5079605	Symbol	penum -> index		5079547						
ANR	5079606	Symbol	penum		5079547						
ANR	5079607	Symbol	* pcmap		5079547						
ANR	5079608	Symbol	pcmap -> code_space . ranges		5079547						
ANR	5079609	Symbol	* pcmap -> code_space . ranges		5079547						
ANR	5079610	Symbol	pcmap		5079547						
ANR	5079611	Symbol	penum -> range		5079547						
ANR	5079612	Symbol	* pcmap -> code_space		5079547						
ANR	5079613	Symbol	pcmap -> code_space . num_ranges		5079547						
ANR	5079614	DeclStmt									
ANR	5079615	Decl							const gs_cmap_ranges_enum_procs_t	const gs_cmap_ranges_enum_procs_t	adobe1_range_procs
ANR	5079616	Function	gs_cmap_adobe1_enum_ranges	489:0:15493:15650							
ANR	5079617	FunctionDef	"gs_cmap_adobe1_enum_ranges (const gs_cmap_t * pcmap , gs_cmap_ranges_enum_t * pre)"		5079616	0					
ANR	5079618	CompoundStatement		491:0:15584:15650	5079616	0					
ANR	5079619	ExpressionStatement	"gs_cmap_ranges_enum_setup ( pre , pcmap , & adobe1_range_procs )"	492:4:15590:15648	5079616	0	True				
ANR	5079620	CallExpression	"gs_cmap_ranges_enum_setup ( pre , pcmap , & adobe1_range_procs )"		5079616	0					
ANR	5079621	Callee	gs_cmap_ranges_enum_setup		5079616	0					
ANR	5079622	Identifier	gs_cmap_ranges_enum_setup		5079616	0					
ANR	5079623	ArgumentList	pre		5079616	1					
ANR	5079624	Argument	pre		5079616	0					
ANR	5079625	Identifier	pre		5079616	0					
ANR	5079626	Argument	pcmap		5079616	1					
ANR	5079627	Identifier	pcmap		5079616	0					
ANR	5079628	Argument	& adobe1_range_procs		5079616	2					
ANR	5079629	UnaryOperationExpression	& adobe1_range_procs		5079616	0					
ANR	5079630	UnaryOperator	&		5079616	0					
ANR	5079631	Identifier	adobe1_range_procs		5079616	1					
ANR	5079632	ReturnType	static void		5079616	1					
ANR	5079633	Identifier	gs_cmap_adobe1_enum_ranges		5079616	2					
ANR	5079634	ParameterList	"const gs_cmap_t * pcmap , gs_cmap_ranges_enum_t * pre"		5079616	3					
ANR	5079635	Parameter	const gs_cmap_t * pcmap	490:27:15532:15553	5079616	0	True				
ANR	5079636	ParameterType	const gs_cmap_t *		5079616	0					
ANR	5079637	Identifier	pcmap		5079616	1					
ANR	5079638	Parameter	gs_cmap_ranges_enum_t * pre	490:51:15556:15581	5079616	1	True				
ANR	5079639	ParameterType	gs_cmap_ranges_enum_t *		5079616	0					
ANR	5079640	Identifier	pre		5079616	1					
ANR	5079641	CFGEntryNode	ENTRY		5079616		True				
ANR	5079642	CFGExitNode	EXIT		5079616		True				
ANR	5079643	Symbol	pcmap		5079616						
ANR	5079644	Symbol	pre		5079616						
ANR	5079645	Symbol	& adobe1_range_procs		5079616						
ANR	5079646	Function	adobe1_next_lookup	494:0:15652:16250							
ANR	5079647	FunctionDef	"adobe1_next_lookup (gs_cmap_lookups_enum_t * penum , const gx_code_map_t * pcm)"		5079646	0					
ANR	5079648	CompoundStatement		496:0:15739:16250	5079646	0					
ANR	5079649	IdentifierDeclStatement	const gx_cmap_lookup_range_t * lookup = & pcm -> lookup [ penum -> index [ 0 ] ] ;	497:4:15745:15813	5079646	0	True				
ANR	5079650	IdentifierDecl	* lookup = & pcm -> lookup [ penum -> index [ 0 ] ]		5079646	0					
ANR	5079651	IdentifierDeclType	const gx_cmap_lookup_range_t *		5079646	0					
ANR	5079652	Identifier	lookup		5079646	1					
ANR	5079653	AssignmentExpression	* lookup = & pcm -> lookup [ penum -> index [ 0 ] ]		5079646	2		=			
ANR	5079654	Identifier	lookup		5079646	0					
ANR	5079655	UnaryOperationExpression	& pcm -> lookup [ penum -> index [ 0 ] ]		5079646	1					
ANR	5079656	UnaryOperator	&		5079646	0					
ANR	5079657	ArrayIndexing	pcm -> lookup [ penum -> index [ 0 ] ]		5079646	1					
ANR	5079658	PtrMemberAccess	pcm -> lookup		5079646	0					
ANR	5079659	Identifier	pcm		5079646	0					
ANR	5079660	Identifier	lookup		5079646	1					
ANR	5079661	ArrayIndexing	penum -> index [ 0 ]		5079646	1					
ANR	5079662	PtrMemberAccess	penum -> index		5079646	0					
ANR	5079663	Identifier	penum		5079646	0					
ANR	5079664	Identifier	index		5079646	1					
ANR	5079665	PrimaryExpression	0		5079646	1					
ANR	5079666	ExpressionStatement	penum -> entry . value . data = 0L	499:4:15820:15848	5079646	1	True				
ANR	5079667	AssignmentExpression	penum -> entry . value . data = 0L		5079646	0		=			
ANR	5079668	MemberAccess	penum -> entry . value . data		5079646	0					
ANR	5079669	MemberAccess	penum -> entry . value		5079646	0					
ANR	5079670	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079671	Identifier	penum		5079646	0					
ANR	5079672	Identifier	entry		5079646	1					
ANR	5079673	Identifier	value		5079646	1					
ANR	5079674	Identifier	data		5079646	1					
ANR	5079675	PrimaryExpression	0L		5079646	1					
ANR	5079676	IfStatement	if ( penum -> index [ 0 ] >= pcm -> num_lookup )		5079646	2					
ANR	5079677	Condition	penum -> index [ 0 ] >= pcm -> num_lookup	500:8:15858:15891	5079646	0	True				
ANR	5079678	RelationalExpression	penum -> index [ 0 ] >= pcm -> num_lookup		5079646	0		>=			
ANR	5079679	ArrayIndexing	penum -> index [ 0 ]		5079646	0					
ANR	5079680	PtrMemberAccess	penum -> index		5079646	0					
ANR	5079681	Identifier	penum		5079646	0					
ANR	5079682	Identifier	index		5079646	1					
ANR	5079683	PrimaryExpression	0		5079646	1					
ANR	5079684	PtrMemberAccess	pcm -> num_lookup		5079646	1					
ANR	5079685	Identifier	pcm		5079646	0					
ANR	5079686	Identifier	num_lookup		5079646	1					
ANR	5079687	ReturnStatement	return 1 ;	501:8:15902:15910	5079646	1	True				
ANR	5079688	PrimaryExpression	1		5079646	0					
ANR	5079689	ExpressionStatement	penum -> entry . key_size = lookup -> key_prefix_size + lookup -> key_size	502:4:15916:15982	5079646	3	True				
ANR	5079690	AssignmentExpression	penum -> entry . key_size = lookup -> key_prefix_size + lookup -> key_size		5079646	0		=			
ANR	5079691	MemberAccess	penum -> entry . key_size		5079646	0					
ANR	5079692	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079693	Identifier	penum		5079646	0					
ANR	5079694	Identifier	entry		5079646	1					
ANR	5079695	Identifier	key_size		5079646	1					
ANR	5079696	AdditiveExpression	lookup -> key_prefix_size + lookup -> key_size		5079646	1		+			
ANR	5079697	PtrMemberAccess	lookup -> key_prefix_size		5079646	0					
ANR	5079698	Identifier	lookup		5079646	0					
ANR	5079699	Identifier	key_prefix_size		5079646	1					
ANR	5079700	PtrMemberAccess	lookup -> key_size		5079646	1					
ANR	5079701	Identifier	lookup		5079646	0					
ANR	5079702	Identifier	key_size		5079646	1					
ANR	5079703	ExpressionStatement	penum -> entry . key_is_range = lookup -> key_is_range	503:4:15988:16036	5079646	4	True				
ANR	5079704	AssignmentExpression	penum -> entry . key_is_range = lookup -> key_is_range		5079646	0		=			
ANR	5079705	MemberAccess	penum -> entry . key_is_range		5079646	0					
ANR	5079706	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079707	Identifier	penum		5079646	0					
ANR	5079708	Identifier	entry		5079646	1					
ANR	5079709	Identifier	key_is_range		5079646	1					
ANR	5079710	PtrMemberAccess	lookup -> key_is_range		5079646	1					
ANR	5079711	Identifier	lookup		5079646	0					
ANR	5079712	Identifier	key_is_range		5079646	1					
ANR	5079713	ExpressionStatement	penum -> entry . value_type = lookup -> value_type	504:4:16042:16086	5079646	5	True				
ANR	5079714	AssignmentExpression	penum -> entry . value_type = lookup -> value_type		5079646	0		=			
ANR	5079715	MemberAccess	penum -> entry . value_type		5079646	0					
ANR	5079716	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079717	Identifier	penum		5079646	0					
ANR	5079718	Identifier	entry		5079646	1					
ANR	5079719	Identifier	value_type		5079646	1					
ANR	5079720	PtrMemberAccess	lookup -> value_type		5079646	1					
ANR	5079721	Identifier	lookup		5079646	0					
ANR	5079722	Identifier	value_type		5079646	1					
ANR	5079723	ExpressionStatement	penum -> entry . value . size = lookup -> value_size	505:4:16092:16136	5079646	6	True				
ANR	5079724	AssignmentExpression	penum -> entry . value . size = lookup -> value_size		5079646	0		=			
ANR	5079725	MemberAccess	penum -> entry . value . size		5079646	0					
ANR	5079726	MemberAccess	penum -> entry . value		5079646	0					
ANR	5079727	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079728	Identifier	penum		5079646	0					
ANR	5079729	Identifier	entry		5079646	1					
ANR	5079730	Identifier	value		5079646	1					
ANR	5079731	Identifier	size		5079646	1					
ANR	5079732	PtrMemberAccess	lookup -> value_size		5079646	1					
ANR	5079733	Identifier	lookup		5079646	0					
ANR	5079734	Identifier	value_size		5079646	1					
ANR	5079735	ExpressionStatement	penum -> entry . font_index = lookup -> font_index	506:4:16142:16186	5079646	7	True				
ANR	5079736	AssignmentExpression	penum -> entry . font_index = lookup -> font_index		5079646	0		=			
ANR	5079737	MemberAccess	penum -> entry . font_index		5079646	0					
ANR	5079738	PtrMemberAccess	penum -> entry		5079646	0					
ANR	5079739	Identifier	penum		5079646	0					
ANR	5079740	Identifier	entry		5079646	1					
ANR	5079741	Identifier	font_index		5079646	1					
ANR	5079742	PtrMemberAccess	lookup -> font_index		5079646	1					
ANR	5079743	Identifier	lookup		5079646	0					
ANR	5079744	Identifier	font_index		5079646	1					
ANR	5079745	ExpressionStatement	penum -> index [ 0 ] ++	507:4:16192:16209	5079646	8	True				
ANR	5079746	PostIncDecOperationExpression	penum -> index [ 0 ] ++		5079646	0					
ANR	5079747	ArrayIndexing	penum -> index [ 0 ]		5079646	0					
ANR	5079748	PtrMemberAccess	penum -> index		5079646	0					
ANR	5079749	Identifier	penum		5079646	0					
ANR	5079750	Identifier	index		5079646	1					
ANR	5079751	PrimaryExpression	0		5079646	1					
ANR	5079752	IncDec	++		5079646	1					
ANR	5079753	ExpressionStatement	penum -> index [ 1 ] = 0	508:4:16215:16234	5079646	9	True				
ANR	5079754	AssignmentExpression	penum -> index [ 1 ] = 0		5079646	0		=			
ANR	5079755	ArrayIndexing	penum -> index [ 1 ]		5079646	0					
ANR	5079756	PtrMemberAccess	penum -> index		5079646	0					
ANR	5079757	Identifier	penum		5079646	0					
ANR	5079758	Identifier	index		5079646	1					
ANR	5079759	PrimaryExpression	1		5079646	1					
ANR	5079760	PrimaryExpression	0		5079646	1					
ANR	5079761	ReturnStatement	return 0 ;	509:4:16240:16248	5079646	10	True				
ANR	5079762	PrimaryExpression	0		5079646	0					
ANR	5079763	ReturnType	static int		5079646	1					
ANR	5079764	Identifier	adobe1_next_lookup		5079646	2					
ANR	5079765	ParameterList	"gs_cmap_lookups_enum_t * penum , const gx_code_map_t * pcm"		5079646	3					
ANR	5079766	Parameter	gs_cmap_lookups_enum_t * penum	495:19:15682:15710	5079646	0	True				
ANR	5079767	ParameterType	gs_cmap_lookups_enum_t *		5079646	0					
ANR	5079768	Identifier	penum		5079646	1					
ANR	5079769	Parameter	const gx_code_map_t * pcm	495:50:15713:15736	5079646	1	True				
ANR	5079770	ParameterType	const gx_code_map_t *		5079646	0					
ANR	5079771	Identifier	pcm		5079646	1					
ANR	5079772	CFGEntryNode	ENTRY		5079646		True				
ANR	5079773	CFGExitNode	EXIT		5079646		True				
ANR	5079774	Symbol	lookup -> key_is_range		5079646						
ANR	5079775	Symbol	lookup -> value_size		5079646						
ANR	5079776	Symbol	* penum		5079646						
ANR	5079777	Symbol	lookup -> font_index		5079646						
ANR	5079778	Symbol	pcm -> lookup		5079646						
ANR	5079779	Symbol	* pcm		5079646						
ANR	5079780	Symbol	penum -> entry . key_size		5079646						
ANR	5079781	Symbol	lookup -> value_type		5079646						
ANR	5079782	Symbol	lookup -> key_prefix_size		5079646						
ANR	5079783	Symbol	penum -> entry		5079646						
ANR	5079784	Symbol	* penum -> index		5079646						
ANR	5079785	Symbol	pcm -> num_lookup		5079646						
ANR	5079786	Symbol	penum -> entry . value . size		5079646						
ANR	5079787	Symbol	pcm		5079646						
ANR	5079788	Symbol	* * penum		5079646						
ANR	5079789	Symbol	penum -> entry . key_is_range		5079646						
ANR	5079790	Symbol	lookup		5079646						
ANR	5079791	Symbol	* lookup		5079646						
ANR	5079792	Symbol	penum -> index		5079646						
ANR	5079793	Symbol	penum		5079646						
ANR	5079794	Symbol	penum -> entry . value		5079646						
ANR	5079795	Symbol	penum -> entry . font_index		5079646						
ANR	5079796	Symbol	penum -> entry . value_type		5079646						
ANR	5079797	Symbol	lookup -> key_size		5079646						
ANR	5079798	Symbol	penum -> entry . value . data		5079646						
ANR	5079799	Function	adobe1_next_lookup_def	511:0:16252:16446							
ANR	5079800	FunctionDef	"adobe1_next_lookup_def (gs_memory_t * mem , gs_cmap_lookups_enum_t * penum)"		5079799	0					
ANR	5079801	CompoundStatement		513:0:16335:16446	5079799	0					
ANR	5079802	ReturnStatement	"return adobe1_next_lookup ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def ) ;"	514:4:16341:16444	5079799	0	True				
ANR	5079803	CallExpression	"adobe1_next_lookup ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def )"		5079799	0					
ANR	5079804	Callee	adobe1_next_lookup		5079799	0					
ANR	5079805	Identifier	adobe1_next_lookup		5079799	0					
ANR	5079806	ArgumentList	penum		5079799	1					
ANR	5079807	Argument	penum		5079799	0					
ANR	5079808	Identifier	penum		5079799	0					
ANR	5079809	Argument	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5079799	1					
ANR	5079810	UnaryOperationExpression	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5079799	0					
ANR	5079811	UnaryOperator	&		5079799	0					
ANR	5079812	PtrMemberAccess	( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5079799	1					
ANR	5079813	CastExpression	( const gs_cmap_adobe1_t * ) penum -> cmap		5079799	0					
ANR	5079814	CastTarget	const gs_cmap_adobe1_t *		5079799	0					
ANR	5079815	PtrMemberAccess	penum -> cmap		5079799	1					
ANR	5079816	Identifier	penum		5079799	0					
ANR	5079817	Identifier	cmap		5079799	1					
ANR	5079818	Identifier	def		5079799	1					
ANR	5079819	ReturnType	static int		5079799	1					
ANR	5079820	Identifier	adobe1_next_lookup_def		5079799	2					
ANR	5079821	ParameterList	"gs_memory_t * mem , gs_cmap_lookups_enum_t * penum"		5079799	3					
ANR	5079822	Parameter	gs_memory_t * mem	512:23:16286:16301	5079799	0	True				
ANR	5079823	ParameterType	gs_memory_t *		5079799	0					
ANR	5079824	Identifier	mem		5079799	1					
ANR	5079825	Parameter	gs_cmap_lookups_enum_t * penum	512:41:16304:16332	5079799	1	True				
ANR	5079826	ParameterType	gs_cmap_lookups_enum_t *		5079799	0					
ANR	5079827	Identifier	penum		5079799	1					
ANR	5079828	CFGEntryNode	ENTRY		5079799		True				
ANR	5079829	CFGExitNode	EXIT		5079799		True				
ANR	5079830	Symbol	* penum		5079799						
ANR	5079831	Symbol	mem		5079799						
ANR	5079832	Symbol	penum -> cmap		5079799						
ANR	5079833	Symbol	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5079799						
ANR	5079834	Symbol	penum		5079799						
ANR	5079835	Symbol	adobe1_next_lookup		5079799						
ANR	5079836	Function	adobe1_next_lookup_notdef	517:0:16448:16648							
ANR	5079837	FunctionDef	"adobe1_next_lookup_notdef (gs_memory_t * mem , gs_cmap_lookups_enum_t * penum)"		5079836	0					
ANR	5079838	CompoundStatement		519:0:16534:16648	5079836	0					
ANR	5079839	ReturnStatement	"return adobe1_next_lookup ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef ) ;"	520:4:16540:16646	5079836	0	True				
ANR	5079840	CallExpression	"adobe1_next_lookup ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef )"		5079836	0					
ANR	5079841	Callee	adobe1_next_lookup		5079836	0					
ANR	5079842	Identifier	adobe1_next_lookup		5079836	0					
ANR	5079843	ArgumentList	penum		5079836	1					
ANR	5079844	Argument	penum		5079836	0					
ANR	5079845	Identifier	penum		5079836	0					
ANR	5079846	Argument	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5079836	1					
ANR	5079847	UnaryOperationExpression	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5079836	0					
ANR	5079848	UnaryOperator	&		5079836	0					
ANR	5079849	PtrMemberAccess	( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5079836	1					
ANR	5079850	CastExpression	( const gs_cmap_adobe1_t * ) penum -> cmap		5079836	0					
ANR	5079851	CastTarget	const gs_cmap_adobe1_t *		5079836	0					
ANR	5079852	PtrMemberAccess	penum -> cmap		5079836	1					
ANR	5079853	Identifier	penum		5079836	0					
ANR	5079854	Identifier	cmap		5079836	1					
ANR	5079855	Identifier	notdef		5079836	1					
ANR	5079856	ReturnType	static int		5079836	1					
ANR	5079857	Identifier	adobe1_next_lookup_notdef		5079836	2					
ANR	5079858	ParameterList	"gs_memory_t * mem , gs_cmap_lookups_enum_t * penum"		5079836	3					
ANR	5079859	Parameter	gs_memory_t * mem	518:26:16485:16500	5079836	0	True				
ANR	5079860	ParameterType	gs_memory_t *		5079836	0					
ANR	5079861	Identifier	mem		5079836	1					
ANR	5079862	Parameter	gs_cmap_lookups_enum_t * penum	518:44:16503:16531	5079836	1	True				
ANR	5079863	ParameterType	gs_cmap_lookups_enum_t *		5079836	0					
ANR	5079864	Identifier	penum		5079836	1					
ANR	5079865	CFGEntryNode	ENTRY		5079836		True				
ANR	5079866	CFGExitNode	EXIT		5079836		True				
ANR	5079867	Symbol	* penum		5079836						
ANR	5079868	Symbol	mem		5079836						
ANR	5079869	Symbol	penum -> cmap		5079836						
ANR	5079870	Symbol	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5079836						
ANR	5079871	Symbol	penum		5079836						
ANR	5079872	Symbol	adobe1_next_lookup		5079836						
ANR	5079873	Function	adobe1_next_entry	523:0:16650:17528							
ANR	5079874	FunctionDef	"adobe1_next_entry (gs_cmap_lookups_enum_t * penum , const gx_code_map_t * pcm)"		5079873	0					
ANR	5079875	CompoundStatement		525:0:16736:17528	5079873	0					
ANR	5079876	IdentifierDeclStatement	const gx_cmap_lookup_range_t * lookup = & pcm -> lookup [ penum -> index [ 0 ] - 1 ] ;	526:4:16742:16814	5079873	0	True				
ANR	5079877	IdentifierDecl	* lookup = & pcm -> lookup [ penum -> index [ 0 ] - 1 ]		5079873	0					
ANR	5079878	IdentifierDeclType	const gx_cmap_lookup_range_t *		5079873	0					
ANR	5079879	Identifier	lookup		5079873	1					
ANR	5079880	AssignmentExpression	* lookup = & pcm -> lookup [ penum -> index [ 0 ] - 1 ]		5079873	2		=			
ANR	5079881	Identifier	lookup		5079873	0					
ANR	5079882	UnaryOperationExpression	& pcm -> lookup [ penum -> index [ 0 ] - 1 ]		5079873	1					
ANR	5079883	UnaryOperator	&		5079873	0					
ANR	5079884	ArrayIndexing	pcm -> lookup [ penum -> index [ 0 ] - 1 ]		5079873	1					
ANR	5079885	PtrMemberAccess	pcm -> lookup		5079873	0					
ANR	5079886	Identifier	pcm		5079873	0					
ANR	5079887	Identifier	lookup		5079873	1					
ANR	5079888	AdditiveExpression	penum -> index [ 0 ] - 1		5079873	1		-			
ANR	5079889	ArrayIndexing	penum -> index [ 0 ]		5079873	0					
ANR	5079890	PtrMemberAccess	penum -> index		5079873	0					
ANR	5079891	Identifier	penum		5079873	0					
ANR	5079892	Identifier	index		5079873	1					
ANR	5079893	PrimaryExpression	0		5079873	1					
ANR	5079894	PrimaryExpression	1		5079873	1					
ANR	5079895	IdentifierDeclStatement	int psize = lookup -> key_prefix_size ;	527:4:16820:16855	5079873	1	True				
ANR	5079896	IdentifierDecl	psize = lookup -> key_prefix_size		5079873	0					
ANR	5079897	IdentifierDeclType	int		5079873	0					
ANR	5079898	Identifier	psize		5079873	1					
ANR	5079899	AssignmentExpression	psize = lookup -> key_prefix_size		5079873	2		=			
ANR	5079900	Identifier	psize		5079873	0					
ANR	5079901	PtrMemberAccess	lookup -> key_prefix_size		5079873	1					
ANR	5079902	Identifier	lookup		5079873	0					
ANR	5079903	Identifier	key_prefix_size		5079873	1					
ANR	5079904	IdentifierDeclStatement	int ksize = lookup -> key_size ;	528:4:16861:16889	5079873	2	True				
ANR	5079905	IdentifierDecl	ksize = lookup -> key_size		5079873	0					
ANR	5079906	IdentifierDeclType	int		5079873	0					
ANR	5079907	Identifier	ksize		5079873	1					
ANR	5079908	AssignmentExpression	ksize = lookup -> key_size		5079873	2		=			
ANR	5079909	Identifier	ksize		5079873	0					
ANR	5079910	PtrMemberAccess	lookup -> key_size		5079873	1					
ANR	5079911	Identifier	lookup		5079873	0					
ANR	5079912	Identifier	key_size		5079873	1					
ANR	5079913	IdentifierDeclStatement	const byte * key = lookup -> keys . data + penum -> index [ 1 ] * ksize * ( lookup -> key_is_range ? 2 : 1 ) ;	529:4:16895:17005	5079873	3	True				
ANR	5079914	IdentifierDecl	* key = lookup -> keys . data + penum -> index [ 1 ] * ksize * ( lookup -> key_is_range ? 2 : 1 )		5079873	0					
ANR	5079915	IdentifierDeclType	const byte *		5079873	0					
ANR	5079916	Identifier	key		5079873	1					
ANR	5079917	AssignmentExpression	* key = lookup -> keys . data + penum -> index [ 1 ] * ksize * ( lookup -> key_is_range ? 2 : 1 )		5079873	2		=			
ANR	5079918	Identifier	key		5079873	0					
ANR	5079919	AdditiveExpression	lookup -> keys . data + penum -> index [ 1 ] * ksize * ( lookup -> key_is_range ? 2 : 1 )		5079873	1		+			
ANR	5079920	MemberAccess	lookup -> keys . data		5079873	0					
ANR	5079921	PtrMemberAccess	lookup -> keys		5079873	0					
ANR	5079922	Identifier	lookup		5079873	0					
ANR	5079923	Identifier	keys		5079873	1					
ANR	5079924	Identifier	data		5079873	1					
ANR	5079925	MultiplicativeExpression	penum -> index [ 1 ] * ksize * ( lookup -> key_is_range ? 2 : 1 )		5079873	1		*			
ANR	5079926	ArrayIndexing	penum -> index [ 1 ]		5079873	0					
ANR	5079927	PtrMemberAccess	penum -> index		5079873	0					
ANR	5079928	Identifier	penum		5079873	0					
ANR	5079929	Identifier	index		5079873	1					
ANR	5079930	PrimaryExpression	1		5079873	1					
ANR	5079931	MultiplicativeExpression	ksize * ( lookup -> key_is_range ? 2 : 1 )		5079873	1		*			
ANR	5079932	Identifier	ksize		5079873	0					
ANR	5079933	ConditionalExpression	lookup -> key_is_range ? 2 : 1		5079873	1					
ANR	5079934	Condition	lookup -> key_is_range		5079873	0					
ANR	5079935	PtrMemberAccess	lookup -> key_is_range		5079873	0					
ANR	5079936	Identifier	lookup		5079873	0					
ANR	5079937	Identifier	key_is_range		5079873	1					
ANR	5079938	PrimaryExpression	2		5079873	1					
ANR	5079939	PrimaryExpression	1		5079873	2					
ANR	5079940	IdentifierDeclStatement	int i ;	532:4:17011:17016	5079873	4	True				
ANR	5079941	IdentifierDecl	i		5079873	0					
ANR	5079942	IdentifierDeclType	int		5079873	0					
ANR	5079943	Identifier	i		5079873	1					
ANR	5079944	IfStatement	if ( penum -> index [ 1 ] >= lookup -> num_entries )		5079873	5					
ANR	5079945	Condition	penum -> index [ 1 ] >= lookup -> num_entries	534:8:17027:17064	5079873	0	True				
ANR	5079946	RelationalExpression	penum -> index [ 1 ] >= lookup -> num_entries		5079873	0		>=			
ANR	5079947	ArrayIndexing	penum -> index [ 1 ]		5079873	0					
ANR	5079948	PtrMemberAccess	penum -> index		5079873	0					
ANR	5079949	Identifier	penum		5079873	0					
ANR	5079950	Identifier	index		5079873	1					
ANR	5079951	PrimaryExpression	1		5079873	1					
ANR	5079952	PtrMemberAccess	lookup -> num_entries		5079873	1					
ANR	5079953	Identifier	lookup		5079873	0					
ANR	5079954	Identifier	num_entries		5079873	1					
ANR	5079955	ReturnStatement	return 1 ;	535:8:17075:17083	5079873	1	True				
ANR	5079956	PrimaryExpression	1		5079873	0					
ANR	5079957	IfStatement	if ( psize + ksize > MAX_CMAP_CODE_SIZE )		5079873	6					
ANR	5079958	Condition	psize + ksize > MAX_CMAP_CODE_SIZE	536:8:17093:17126	5079873	0	True				
ANR	5079959	RelationalExpression	psize + ksize > MAX_CMAP_CODE_SIZE		5079873	0		>			
ANR	5079960	AdditiveExpression	psize + ksize		5079873	0		+			
ANR	5079961	Identifier	psize		5079873	0					
ANR	5079962	Identifier	ksize		5079873	1					
ANR	5079963	Identifier	MAX_CMAP_CODE_SIZE		5079873	1					
ANR	5079964	ExpressionStatement	return_error ( gs_error_rangecheck )	537:8:17137:17170	5079873	1	True				
ANR	5079965	CallExpression	return_error ( gs_error_rangecheck )		5079873	0					
ANR	5079966	Callee	return_error		5079873	0					
ANR	5079967	Identifier	return_error		5079873	0					
ANR	5079968	ArgumentList	gs_error_rangecheck		5079873	1					
ANR	5079969	Argument	gs_error_rangecheck		5079873	0					
ANR	5079970	Identifier	gs_error_rangecheck		5079873	0					
ANR	5079971	ForStatement	"for ( i = 0 ; i < 2 ; ++ i , key += ksize )"		5079873	7					
ANR	5079972	ForInit	i = 0 ;	538:9:17181:17186	5079873	0	True				
ANR	5079973	AssignmentExpression	i = 0		5079873	0		=			
ANR	5079974	Identifier	i		5079873	0					
ANR	5079975	PrimaryExpression	0		5079873	1					
ANR	5079976	Condition	i < 2	538:16:17188:17192	5079873	1	True				
ANR	5079977	RelationalExpression	i < 2		5079873	0		<			
ANR	5079978	Identifier	i		5079873	0					
ANR	5079979	PrimaryExpression	2		5079873	1					
ANR	5079980	Expression	"++ i , key += ksize"	538:23:17195:17211	5079873	2	True				
ANR	5079981	UnaryExpression	++ i		5079873	0					
ANR	5079982	IncDec	++		5079873	0					
ANR	5079983	Identifier	i		5079873	1					
ANR	5079984	AssignmentExpression	key += ksize		5079873	1		+=			
ANR	5079985	Identifier	key		5079873	0					
ANR	5079986	Identifier	ksize		5079873	1					
ANR	5079987	CompoundStatement		14:42:477:477	5079873	3					
ANR	5079988	ExpressionStatement	"memcpy ( penum -> entry . key [ i ] , lookup -> key_prefix , psize )"	539:8:17224:17278	5079873	0	True				
ANR	5079989	CallExpression	"memcpy ( penum -> entry . key [ i ] , lookup -> key_prefix , psize )"		5079873	0					
ANR	5079990	Callee	memcpy		5079873	0					
ANR	5079991	Identifier	memcpy		5079873	0					
ANR	5079992	ArgumentList	penum -> entry . key [ i ]		5079873	1					
ANR	5079993	Argument	penum -> entry . key [ i ]		5079873	0					
ANR	5079994	ArrayIndexing	penum -> entry . key [ i ]		5079873	0					
ANR	5079995	MemberAccess	penum -> entry . key		5079873	0					
ANR	5079996	PtrMemberAccess	penum -> entry		5079873	0					
ANR	5079997	Identifier	penum		5079873	0					
ANR	5079998	Identifier	entry		5079873	1					
ANR	5079999	Identifier	key		5079873	1					
ANR	5080000	Identifier	i		5079873	1					
ANR	5080001	Argument	lookup -> key_prefix		5079873	1					
ANR	5080002	PtrMemberAccess	lookup -> key_prefix		5079873	0					
ANR	5080003	Identifier	lookup		5079873	0					
ANR	5080004	Identifier	key_prefix		5079873	1					
ANR	5080005	Argument	psize		5079873	2					
ANR	5080006	Identifier	psize		5079873	0					
ANR	5080007	ExpressionStatement	"memcpy ( penum -> entry . key [ i ] + psize , key , ksize )"	540:8:17288:17335	5079873	1	True				
ANR	5080008	CallExpression	"memcpy ( penum -> entry . key [ i ] + psize , key , ksize )"		5079873	0					
ANR	5080009	Callee	memcpy		5079873	0					
ANR	5080010	Identifier	memcpy		5079873	0					
ANR	5080011	ArgumentList	penum -> entry . key [ i ] + psize		5079873	1					
ANR	5080012	Argument	penum -> entry . key [ i ] + psize		5079873	0					
ANR	5080013	AdditiveExpression	penum -> entry . key [ i ] + psize		5079873	0		+			
ANR	5080014	ArrayIndexing	penum -> entry . key [ i ]		5079873	0					
ANR	5080015	MemberAccess	penum -> entry . key		5079873	0					
ANR	5080016	PtrMemberAccess	penum -> entry		5079873	0					
ANR	5080017	Identifier	penum		5079873	0					
ANR	5080018	Identifier	entry		5079873	1					
ANR	5080019	Identifier	key		5079873	1					
ANR	5080020	Identifier	i		5079873	1					
ANR	5080021	Identifier	psize		5079873	1					
ANR	5080022	Argument	key		5079873	1					
ANR	5080023	Identifier	key		5079873	0					
ANR	5080024	Argument	ksize		5079873	2					
ANR	5080025	Identifier	ksize		5079873	0					
ANR	5080026	ExpressionStatement	penum -> entry . value . data = lookup -> values . data + penum -> index [ 1 ] * lookup -> value_size	542:4:17347:17439	5079873	8	True				
ANR	5080027	AssignmentExpression	penum -> entry . value . data = lookup -> values . data + penum -> index [ 1 ] * lookup -> value_size		5079873	0		=			
ANR	5080028	MemberAccess	penum -> entry . value . data		5079873	0					
ANR	5080029	MemberAccess	penum -> entry . value		5079873	0					
ANR	5080030	PtrMemberAccess	penum -> entry		5079873	0					
ANR	5080031	Identifier	penum		5079873	0					
ANR	5080032	Identifier	entry		5079873	1					
ANR	5080033	Identifier	value		5079873	1					
ANR	5080034	Identifier	data		5079873	1					
ANR	5080035	AdditiveExpression	lookup -> values . data + penum -> index [ 1 ] * lookup -> value_size		5079873	1		+			
ANR	5080036	MemberAccess	lookup -> values . data		5079873	0					
ANR	5080037	PtrMemberAccess	lookup -> values		5079873	0					
ANR	5080038	Identifier	lookup		5079873	0					
ANR	5080039	Identifier	values		5079873	1					
ANR	5080040	Identifier	data		5079873	1					
ANR	5080041	MultiplicativeExpression	penum -> index [ 1 ] * lookup -> value_size		5079873	1		*			
ANR	5080042	ArrayIndexing	penum -> index [ 1 ]		5079873	0					
ANR	5080043	PtrMemberAccess	penum -> index		5079873	0					
ANR	5080044	Identifier	penum		5079873	0					
ANR	5080045	Identifier	index		5079873	1					
ANR	5080046	PrimaryExpression	1		5079873	1					
ANR	5080047	PtrMemberAccess	lookup -> value_size		5079873	1					
ANR	5080048	Identifier	lookup		5079873	0					
ANR	5080049	Identifier	value_size		5079873	1					
ANR	5080050	ExpressionStatement	penum -> entry . value . size = lookup -> value_size	544:4:17445:17489	5079873	9	True				
ANR	5080051	AssignmentExpression	penum -> entry . value . size = lookup -> value_size		5079873	0		=			
ANR	5080052	MemberAccess	penum -> entry . value . size		5079873	0					
ANR	5080053	MemberAccess	penum -> entry . value		5079873	0					
ANR	5080054	PtrMemberAccess	penum -> entry		5079873	0					
ANR	5080055	Identifier	penum		5079873	0					
ANR	5080056	Identifier	entry		5079873	1					
ANR	5080057	Identifier	value		5079873	1					
ANR	5080058	Identifier	size		5079873	1					
ANR	5080059	PtrMemberAccess	lookup -> value_size		5079873	1					
ANR	5080060	Identifier	lookup		5079873	0					
ANR	5080061	Identifier	value_size		5079873	1					
ANR	5080062	ExpressionStatement	penum -> index [ 1 ] ++	545:4:17495:17512	5079873	10	True				
ANR	5080063	PostIncDecOperationExpression	penum -> index [ 1 ] ++		5079873	0					
ANR	5080064	ArrayIndexing	penum -> index [ 1 ]		5079873	0					
ANR	5080065	PtrMemberAccess	penum -> index		5079873	0					
ANR	5080066	Identifier	penum		5079873	0					
ANR	5080067	Identifier	index		5079873	1					
ANR	5080068	PrimaryExpression	1		5079873	1					
ANR	5080069	IncDec	++		5079873	1					
ANR	5080070	ReturnStatement	return 0 ;	546:4:17518:17526	5079873	11	True				
ANR	5080071	PrimaryExpression	0		5079873	0					
ANR	5080072	ReturnType	static int		5079873	1					
ANR	5080073	Identifier	adobe1_next_entry		5079873	2					
ANR	5080074	ParameterList	"gs_cmap_lookups_enum_t * penum , const gx_code_map_t * pcm"		5079873	3					
ANR	5080075	Parameter	gs_cmap_lookups_enum_t * penum	524:18:16679:16707	5079873	0	True				
ANR	5080076	ParameterType	gs_cmap_lookups_enum_t *		5079873	0					
ANR	5080077	Identifier	penum		5079873	1					
ANR	5080078	Parameter	const gx_code_map_t * pcm	524:49:16710:16733	5079873	1	True				
ANR	5080079	ParameterType	const gx_code_map_t *		5079873	0					
ANR	5080080	Identifier	pcm		5079873	1					
ANR	5080081	CFGEntryNode	ENTRY		5079873		True				
ANR	5080082	CFGExitNode	EXIT		5079873		True				
ANR	5080083	Symbol	lookup -> key_is_range		5079873						
ANR	5080084	Symbol	lookup -> value_size		5079873						
ANR	5080085	Symbol	* penum		5079873						
ANR	5080086	Symbol	MAX_CMAP_CODE_SIZE		5079873						
ANR	5080087	Symbol	lookup -> keys		5079873						
ANR	5080088	Symbol	pcm -> lookup		5079873						
ANR	5080089	Symbol	* pcm		5079873						
ANR	5080090	Symbol	gs_error_rangecheck		5079873						
ANR	5080091	Symbol	lookup -> key_prefix		5079873						
ANR	5080092	Symbol	lookup -> num_entries		5079873						
ANR	5080093	Symbol	lookup -> key_prefix_size		5079873						
ANR	5080094	Symbol	penum -> entry		5079873						
ANR	5080095	Symbol	lookup -> values		5079873						
ANR	5080096	Symbol	psize		5079873						
ANR	5080097	Symbol	* penum -> index		5079873						
ANR	5080098	Symbol	penum -> entry . value . size		5079873						
ANR	5080099	Symbol	pcm		5079873						
ANR	5080100	Symbol	lookup -> keys . data		5079873						
ANR	5080101	Symbol	key		5079873						
ANR	5080102	Symbol	* * penum		5079873						
ANR	5080103	Symbol	lookup		5079873						
ANR	5080104	Symbol	* lookup		5079873						
ANR	5080105	Symbol	* penum -> entry . key		5079873						
ANR	5080106	Symbol	penum -> index		5079873						
ANR	5080107	Symbol	penum		5079873						
ANR	5080108	Symbol	i		5079873						
ANR	5080109	Symbol	penum -> entry . value		5079873						
ANR	5080110	Symbol	* penum -> entry		5079873						
ANR	5080111	Symbol	* i		5079873						
ANR	5080112	Symbol	ksize		5079873						
ANR	5080113	Symbol	penum -> entry . key		5079873						
ANR	5080114	Symbol	lookup -> values . data		5079873						
ANR	5080115	Symbol	lookup -> key_size		5079873						
ANR	5080116	Symbol	penum -> entry . value . data		5079873						
ANR	5080117	Function	adobe1_next_entry_def	548:0:17530:17704							
ANR	5080118	FunctionDef	adobe1_next_entry_def (gs_cmap_lookups_enum_t * penum)		5080117	0					
ANR	5080119	CompoundStatement		550:0:17594:17704	5080117	0					
ANR	5080120	ReturnStatement	"return adobe1_next_entry ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def ) ;"	551:4:17600:17702	5080117	0	True				
ANR	5080121	CallExpression	"adobe1_next_entry ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def )"		5080117	0					
ANR	5080122	Callee	adobe1_next_entry		5080117	0					
ANR	5080123	Identifier	adobe1_next_entry		5080117	0					
ANR	5080124	ArgumentList	penum		5080117	1					
ANR	5080125	Argument	penum		5080117	0					
ANR	5080126	Identifier	penum		5080117	0					
ANR	5080127	Argument	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5080117	1					
ANR	5080128	UnaryOperationExpression	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5080117	0					
ANR	5080129	UnaryOperator	&		5080117	0					
ANR	5080130	PtrMemberAccess	( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5080117	1					
ANR	5080131	CastExpression	( const gs_cmap_adobe1_t * ) penum -> cmap		5080117	0					
ANR	5080132	CastTarget	const gs_cmap_adobe1_t *		5080117	0					
ANR	5080133	PtrMemberAccess	penum -> cmap		5080117	1					
ANR	5080134	Identifier	penum		5080117	0					
ANR	5080135	Identifier	cmap		5080117	1					
ANR	5080136	Identifier	def		5080117	1					
ANR	5080137	ReturnType	static int		5080117	1					
ANR	5080138	Identifier	adobe1_next_entry_def		5080117	2					
ANR	5080139	ParameterList	gs_cmap_lookups_enum_t * penum		5080117	3					
ANR	5080140	Parameter	gs_cmap_lookups_enum_t * penum	549:22:17563:17591	5080117	0	True				
ANR	5080141	ParameterType	gs_cmap_lookups_enum_t *		5080117	0					
ANR	5080142	Identifier	penum		5080117	1					
ANR	5080143	CFGEntryNode	ENTRY		5080117		True				
ANR	5080144	CFGExitNode	EXIT		5080117		True				
ANR	5080145	Symbol	* penum		5080117						
ANR	5080146	Symbol	adobe1_next_entry		5080117						
ANR	5080147	Symbol	penum -> cmap		5080117						
ANR	5080148	Symbol	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> def		5080117						
ANR	5080149	Symbol	penum		5080117						
ANR	5080150	Function	adobe1_next_entry_notdef	554:0:17706:17886							
ANR	5080151	FunctionDef	adobe1_next_entry_notdef (gs_cmap_lookups_enum_t * penum)		5080150	0					
ANR	5080152	CompoundStatement		556:0:17773:17886	5080150	0					
ANR	5080153	ReturnStatement	"return adobe1_next_entry ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef ) ;"	557:4:17779:17884	5080150	0	True				
ANR	5080154	CallExpression	"adobe1_next_entry ( penum , & ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef )"		5080150	0					
ANR	5080155	Callee	adobe1_next_entry		5080150	0					
ANR	5080156	Identifier	adobe1_next_entry		5080150	0					
ANR	5080157	ArgumentList	penum		5080150	1					
ANR	5080158	Argument	penum		5080150	0					
ANR	5080159	Identifier	penum		5080150	0					
ANR	5080160	Argument	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5080150	1					
ANR	5080161	UnaryOperationExpression	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5080150	0					
ANR	5080162	UnaryOperator	&		5080150	0					
ANR	5080163	PtrMemberAccess	( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5080150	1					
ANR	5080164	CastExpression	( const gs_cmap_adobe1_t * ) penum -> cmap		5080150	0					
ANR	5080165	CastTarget	const gs_cmap_adobe1_t *		5080150	0					
ANR	5080166	PtrMemberAccess	penum -> cmap		5080150	1					
ANR	5080167	Identifier	penum		5080150	0					
ANR	5080168	Identifier	cmap		5080150	1					
ANR	5080169	Identifier	notdef		5080150	1					
ANR	5080170	ReturnType	static int		5080150	1					
ANR	5080171	Identifier	adobe1_next_entry_notdef		5080150	2					
ANR	5080172	ParameterList	gs_cmap_lookups_enum_t * penum		5080150	3					
ANR	5080173	Parameter	gs_cmap_lookups_enum_t * penum	555:25:17742:17770	5080150	0	True				
ANR	5080174	ParameterType	gs_cmap_lookups_enum_t *		5080150	0					
ANR	5080175	Identifier	penum		5080150	1					
ANR	5080176	CFGEntryNode	ENTRY		5080150		True				
ANR	5080177	CFGExitNode	EXIT		5080150		True				
ANR	5080178	Symbol	* penum		5080150						
ANR	5080179	Symbol	adobe1_next_entry		5080150						
ANR	5080180	Symbol	penum -> cmap		5080150						
ANR	5080181	Symbol	& ( ( const gs_cmap_adobe1_t * ) penum -> cmap ) -> notdef		5080150						
ANR	5080182	Symbol	penum		5080150						
ANR	5080183	DeclStmt									
ANR	5080184	Decl							const gs_cmap_lookups_enum_procs_t	const gs_cmap_lookups_enum_procs_t	adobe1_lookup_def_procs
ANR	5080185	DeclStmt									
ANR	5080186	Decl							const gs_cmap_lookups_enum_procs_t	const gs_cmap_lookups_enum_procs_t	adobe1_lookup_notdef_procs
ANR	5080187	Function	gs_cmap_adobe1_enum_lookups	566:0:18143:18450							
ANR	5080188	FunctionDef	"gs_cmap_adobe1_enum_lookups (const gs_cmap_t * pcmap , int which , gs_cmap_lookups_enum_t * pre)"		5080187	0					
ANR	5080189	CompoundStatement		569:0:18275:18450	5080187	0					
ANR	5080190	ExpressionStatement	"gs_cmap_lookups_enum_setup ( pre , pcmap , ( which ? & adobe1_lookup_notdef_procs : & adobe1_lookup_def_procs ) )"	570:4:18281:18448	5080187	0	True				
ANR	5080191	CallExpression	"gs_cmap_lookups_enum_setup ( pre , pcmap , ( which ? & adobe1_lookup_notdef_procs : & adobe1_lookup_def_procs ) )"		5080187	0					
ANR	5080192	Callee	gs_cmap_lookups_enum_setup		5080187	0					
ANR	5080193	Identifier	gs_cmap_lookups_enum_setup		5080187	0					
ANR	5080194	ArgumentList	pre		5080187	1					
ANR	5080195	Argument	pre		5080187	0					
ANR	5080196	Identifier	pre		5080187	0					
ANR	5080197	Argument	pcmap		5080187	1					
ANR	5080198	Identifier	pcmap		5080187	0					
ANR	5080199	Argument	which ? & adobe1_lookup_notdef_procs : & adobe1_lookup_def_procs		5080187	2					
ANR	5080200	ConditionalExpression	which ? & adobe1_lookup_notdef_procs : & adobe1_lookup_def_procs		5080187	0					
ANR	5080201	Condition	which		5080187	0					
ANR	5080202	Identifier	which		5080187	0					
ANR	5080203	UnaryOperationExpression	& adobe1_lookup_notdef_procs		5080187	1					
ANR	5080204	UnaryOperator	&		5080187	0					
ANR	5080205	Identifier	adobe1_lookup_notdef_procs		5080187	1					
ANR	5080206	UnaryOperationExpression	& adobe1_lookup_def_procs		5080187	2					
ANR	5080207	UnaryOperator	&		5080187	0					
ANR	5080208	Identifier	adobe1_lookup_def_procs		5080187	1					
ANR	5080209	ReturnType	static void		5080187	1					
ANR	5080210	Identifier	gs_cmap_adobe1_enum_lookups		5080187	2					
ANR	5080211	ParameterList	"const gs_cmap_t * pcmap , int which , gs_cmap_lookups_enum_t * pre"		5080187	3					
ANR	5080212	Parameter	const gs_cmap_t * pcmap	567:28:18183:18204	5080187	0	True				
ANR	5080213	ParameterType	const gs_cmap_t *		5080187	0					
ANR	5080214	Identifier	pcmap		5080187	1					
ANR	5080215	Parameter	int which	567:52:18207:18215	5080187	1	True				
ANR	5080216	ParameterType	int		5080187	0					
ANR	5080217	Identifier	which		5080187	1					
ANR	5080218	Parameter	gs_cmap_lookups_enum_t * pre	568:28:18246:18272	5080187	2	True				
ANR	5080219	ParameterType	gs_cmap_lookups_enum_t *		5080187	0					
ANR	5080220	Identifier	pre		5080187	1					
ANR	5080221	CFGEntryNode	ENTRY		5080187		True				
ANR	5080222	CFGExitNode	EXIT		5080187		True				
ANR	5080223	Symbol	which		5080187						
ANR	5080224	Symbol	pcmap		5080187						
ANR	5080225	Symbol	pre		5080187						
ANR	5080226	Symbol	& adobe1_lookup_notdef_procs		5080187						
ANR	5080227	Symbol	& adobe1_lookup_def_procs		5080187						
ANR	5080228	DeclStmt									
ANR	5080229	Decl							const gs_cmap_procs_t	const gs_cmap_procs_t	cmap_adobe1_procs
ANR	5080230	Function	gs_cmap_adobe1_alloc	582:0:18634:21089							
ANR	5080231	FunctionDef	"gs_cmap_adobe1_alloc (gs_cmap_adobe1_t * * ppcmap , int wmode , const byte * map_name , uint name_size , uint num_fonts , uint num_ranges , uint num_lookups , uint keys_size , uint values_size , const gs_cid_system_info_t * pcidsi_in , gs_memory_t * mem)"		5080230	0					
ANR	5080232	CompoundStatement		588:0:18961:21089	5080230	0					
ANR	5080233	IdentifierDeclStatement	gs_cmap_t * pcmap ;	589:4:18967:18983	5080230	0	True				
ANR	5080234	IdentifierDecl	* pcmap		5080230	0					
ANR	5080235	IdentifierDeclType	gs_cmap_t *		5080230	0					
ANR	5080236	Identifier	pcmap		5080230	1					
ANR	5080237	IdentifierDeclStatement	gs_cmap_adobe1_t * pcmap1 ;	590:4:18989:19013	5080230	1	True				
ANR	5080238	IdentifierDecl	* pcmap1		5080230	0					
ANR	5080239	IdentifierDeclType	gs_cmap_adobe1_t *		5080230	0					
ANR	5080240	Identifier	pcmap1		5080230	1					
ANR	5080241	IdentifierDeclStatement	"gx_code_space_range_t * ranges = ( gx_code_space_range_t * ) gs_alloc_byte_array ( mem , num_ranges , sizeof ( gx_code_space_range_t ) , ""gs_cmap_alloc(code space ranges)"" ) ;"	591:4:19019:19216	5080230	2	True				
ANR	5080242	IdentifierDecl	"* ranges = ( gx_code_space_range_t * ) gs_alloc_byte_array ( mem , num_ranges , sizeof ( gx_code_space_range_t ) , ""gs_cmap_alloc(code space ranges)"" )"		5080230	0					
ANR	5080243	IdentifierDeclType	gx_code_space_range_t *		5080230	0					
ANR	5080244	Identifier	ranges		5080230	1					
ANR	5080245	AssignmentExpression	"* ranges = ( gx_code_space_range_t * ) gs_alloc_byte_array ( mem , num_ranges , sizeof ( gx_code_space_range_t ) , ""gs_cmap_alloc(code space ranges)"" )"		5080230	2		=			
ANR	5080246	Identifier	ranges		5080230	0					
ANR	5080247	CastExpression	"( gx_code_space_range_t * ) gs_alloc_byte_array ( mem , num_ranges , sizeof ( gx_code_space_range_t ) , ""gs_cmap_alloc(code space ranges)"" )"		5080230	1					
ANR	5080248	CastTarget	gx_code_space_range_t *		5080230	0					
ANR	5080249	CallExpression	"gs_alloc_byte_array ( mem , num_ranges , sizeof ( gx_code_space_range_t ) , ""gs_cmap_alloc(code space ranges)"" )"		5080230	1					
ANR	5080250	Callee	gs_alloc_byte_array		5080230	0					
ANR	5080251	Identifier	gs_alloc_byte_array		5080230	0					
ANR	5080252	ArgumentList	mem		5080230	1					
ANR	5080253	Argument	mem		5080230	0					
ANR	5080254	Identifier	mem		5080230	0					
ANR	5080255	Argument	num_ranges		5080230	1					
ANR	5080256	Identifier	num_ranges		5080230	0					
ANR	5080257	Argument	sizeof ( gx_code_space_range_t )		5080230	2					
ANR	5080258	SizeofExpression	sizeof ( gx_code_space_range_t )		5080230	0					
ANR	5080259	Sizeof	sizeof		5080230	0					
ANR	5080260	SizeofOperand	gx_code_space_range_t		5080230	1					
ANR	5080261	Argument	"""gs_cmap_alloc(code space ranges)"""		5080230	3					
ANR	5080262	PrimaryExpression	"""gs_cmap_alloc(code space ranges)"""		5080230	0					
ANR	5080263	IdentifierDeclStatement	"gx_cmap_lookup_range_t * lookups = ( num_lookups == 0 ? NULL : gs_alloc_struct_array ( mem , num_lookups , gx_cmap_lookup_range_t , & st_cmap_lookup_range , ""gs_cmap_alloc(lookup ranges)"" ) ) ;"	594:4:19222:19481	5080230	3	True				
ANR	5080264	IdentifierDecl	"* lookups = ( num_lookups == 0 ? NULL : gs_alloc_struct_array ( mem , num_lookups , gx_cmap_lookup_range_t , & st_cmap_lookup_range , ""gs_cmap_alloc(lookup ranges)"" ) )"		5080230	0					
ANR	5080265	IdentifierDeclType	gx_cmap_lookup_range_t *		5080230	0					
ANR	5080266	Identifier	lookups		5080230	1					
ANR	5080267	AssignmentExpression	"* lookups = ( num_lookups == 0 ? NULL : gs_alloc_struct_array ( mem , num_lookups , gx_cmap_lookup_range_t , & st_cmap_lookup_range , ""gs_cmap_alloc(lookup ranges)"" ) )"		5080230	2		=			
ANR	5080268	Identifier	lookups		5080230	0					
ANR	5080269	ConditionalExpression	"num_lookups == 0 ? NULL : gs_alloc_struct_array ( mem , num_lookups , gx_cmap_lookup_range_t , & st_cmap_lookup_range , ""gs_cmap_alloc(lookup ranges)"" )"		5080230	1					
ANR	5080270	Condition	num_lookups == 0		5080230	0					
ANR	5080271	EqualityExpression	num_lookups == 0		5080230	0		==			
ANR	5080272	Identifier	num_lookups		5080230	0					
ANR	5080273	PrimaryExpression	0		5080230	1					
ANR	5080274	Identifier	NULL		5080230	1					
ANR	5080275	CallExpression	"gs_alloc_struct_array ( mem , num_lookups , gx_cmap_lookup_range_t , & st_cmap_lookup_range , ""gs_cmap_alloc(lookup ranges)"" )"		5080230	2					
ANR	5080276	Callee	gs_alloc_struct_array		5080230	0					
ANR	5080277	Identifier	gs_alloc_struct_array		5080230	0					
ANR	5080278	ArgumentList	mem		5080230	1					
ANR	5080279	Argument	mem		5080230	0					
ANR	5080280	Identifier	mem		5080230	0					
ANR	5080281	Argument	num_lookups		5080230	1					
ANR	5080282	Identifier	num_lookups		5080230	0					
ANR	5080283	Argument	gx_cmap_lookup_range_t		5080230	2					
ANR	5080284	Identifier	gx_cmap_lookup_range_t		5080230	0					
ANR	5080285	Argument	& st_cmap_lookup_range		5080230	3					
ANR	5080286	UnaryOperationExpression	& st_cmap_lookup_range		5080230	0					
ANR	5080287	UnaryOperator	&		5080230	0					
ANR	5080288	Identifier	st_cmap_lookup_range		5080230	1					
ANR	5080289	Argument	"""gs_cmap_alloc(lookup ranges)"""		5080230	4					
ANR	5080290	PrimaryExpression	"""gs_cmap_alloc(lookup ranges)"""		5080230	0					
ANR	5080291	IdentifierDeclStatement	"byte * keys = ( keys_size == 0 ? NULL : gs_alloc_string ( mem , keys_size , ""gs_cmap_alloc(keys)"" ) ) ;"	599:4:19487:19597	5080230	4	True				
ANR	5080292	IdentifierDecl	"* keys = ( keys_size == 0 ? NULL : gs_alloc_string ( mem , keys_size , ""gs_cmap_alloc(keys)"" ) )"		5080230	0					
ANR	5080293	IdentifierDeclType	byte *		5080230	0					
ANR	5080294	Identifier	keys		5080230	1					
ANR	5080295	AssignmentExpression	"* keys = ( keys_size == 0 ? NULL : gs_alloc_string ( mem , keys_size , ""gs_cmap_alloc(keys)"" ) )"		5080230	2		=			
ANR	5080296	Identifier	keys		5080230	0					
ANR	5080297	ConditionalExpression	"keys_size == 0 ? NULL : gs_alloc_string ( mem , keys_size , ""gs_cmap_alloc(keys)"" )"		5080230	1					
ANR	5080298	Condition	keys_size == 0		5080230	0					
ANR	5080299	EqualityExpression	keys_size == 0		5080230	0		==			
ANR	5080300	Identifier	keys_size		5080230	0					
ANR	5080301	PrimaryExpression	0		5080230	1					
ANR	5080302	Identifier	NULL		5080230	1					
ANR	5080303	CallExpression	"gs_alloc_string ( mem , keys_size , ""gs_cmap_alloc(keys)"" )"		5080230	2					
ANR	5080304	Callee	gs_alloc_string		5080230	0					
ANR	5080305	Identifier	gs_alloc_string		5080230	0					
ANR	5080306	ArgumentList	mem		5080230	1					
ANR	5080307	Argument	mem		5080230	0					
ANR	5080308	Identifier	mem		5080230	0					
ANR	5080309	Argument	keys_size		5080230	1					
ANR	5080310	Identifier	keys_size		5080230	0					
ANR	5080311	Argument	"""gs_cmap_alloc(keys)"""		5080230	2					
ANR	5080312	PrimaryExpression	"""gs_cmap_alloc(keys)"""		5080230	0					
ANR	5080313	IdentifierDeclStatement	"byte * values = ( values_size == 0 ? NULL : gs_alloc_string ( mem , values_size , ""gs_cmap_alloc(values)"" ) ) ;"	602:4:19603:19721	5080230	5	True				
ANR	5080314	IdentifierDecl	"* values = ( values_size == 0 ? NULL : gs_alloc_string ( mem , values_size , ""gs_cmap_alloc(values)"" ) )"		5080230	0					
ANR	5080315	IdentifierDeclType	byte *		5080230	0					
ANR	5080316	Identifier	values		5080230	1					
ANR	5080317	AssignmentExpression	"* values = ( values_size == 0 ? NULL : gs_alloc_string ( mem , values_size , ""gs_cmap_alloc(values)"" ) )"		5080230	2		=			
ANR	5080318	Identifier	values		5080230	0					
ANR	5080319	ConditionalExpression	"values_size == 0 ? NULL : gs_alloc_string ( mem , values_size , ""gs_cmap_alloc(values)"" )"		5080230	1					
ANR	5080320	Condition	values_size == 0		5080230	0					
ANR	5080321	EqualityExpression	values_size == 0		5080230	0		==			
ANR	5080322	Identifier	values_size		5080230	0					
ANR	5080323	PrimaryExpression	0		5080230	1					
ANR	5080324	Identifier	NULL		5080230	1					
ANR	5080325	CallExpression	"gs_alloc_string ( mem , values_size , ""gs_cmap_alloc(values)"" )"		5080230	2					
ANR	5080326	Callee	gs_alloc_string		5080230	0					
ANR	5080327	Identifier	gs_alloc_string		5080230	0					
ANR	5080328	ArgumentList	mem		5080230	1					
ANR	5080329	Argument	mem		5080230	0					
ANR	5080330	Identifier	mem		5080230	0					
ANR	5080331	Argument	values_size		5080230	1					
ANR	5080332	Identifier	values_size		5080230	0					
ANR	5080333	Argument	"""gs_cmap_alloc(values)"""		5080230	2					
ANR	5080334	PrimaryExpression	"""gs_cmap_alloc(values)"""		5080230	0					
ANR	5080335	IdentifierDeclStatement	"int code = gs_cmap_alloc ( & pcmap , & st_cmap_adobe1 , wmode , map_name , name_size , pcidsi_in , num_fonts , & cmap_adobe1_procs , mem ) ;"	605:4:19727:19881	5080230	6	True				
ANR	5080336	IdentifierDecl	"code = gs_cmap_alloc ( & pcmap , & st_cmap_adobe1 , wmode , map_name , name_size , pcidsi_in , num_fonts , & cmap_adobe1_procs , mem )"		5080230	0					
ANR	5080337	IdentifierDeclType	int		5080230	0					
ANR	5080338	Identifier	code		5080230	1					
ANR	5080339	AssignmentExpression	"code = gs_cmap_alloc ( & pcmap , & st_cmap_adobe1 , wmode , map_name , name_size , pcidsi_in , num_fonts , & cmap_adobe1_procs , mem )"		5080230	2		=			
ANR	5080340	Identifier	code		5080230	0					
ANR	5080341	CallExpression	"gs_cmap_alloc ( & pcmap , & st_cmap_adobe1 , wmode , map_name , name_size , pcidsi_in , num_fonts , & cmap_adobe1_procs , mem )"		5080230	1					
ANR	5080342	Callee	gs_cmap_alloc		5080230	0					
ANR	5080343	Identifier	gs_cmap_alloc		5080230	0					
ANR	5080344	ArgumentList	& pcmap		5080230	1					
ANR	5080345	Argument	& pcmap		5080230	0					
ANR	5080346	UnaryOperationExpression	& pcmap		5080230	0					
ANR	5080347	UnaryOperator	&		5080230	0					
ANR	5080348	Identifier	pcmap		5080230	1					
ANR	5080349	Argument	& st_cmap_adobe1		5080230	1					
ANR	5080350	UnaryOperationExpression	& st_cmap_adobe1		5080230	0					
ANR	5080351	UnaryOperator	&		5080230	0					
ANR	5080352	Identifier	st_cmap_adobe1		5080230	1					
ANR	5080353	Argument	wmode		5080230	2					
ANR	5080354	Identifier	wmode		5080230	0					
ANR	5080355	Argument	map_name		5080230	3					
ANR	5080356	Identifier	map_name		5080230	0					
ANR	5080357	Argument	name_size		5080230	4					
ANR	5080358	Identifier	name_size		5080230	0					
ANR	5080359	Argument	pcidsi_in		5080230	5					
ANR	5080360	Identifier	pcidsi_in		5080230	0					
ANR	5080361	Argument	num_fonts		5080230	6					
ANR	5080362	Identifier	num_fonts		5080230	0					
ANR	5080363	Argument	& cmap_adobe1_procs		5080230	7					
ANR	5080364	UnaryOperationExpression	& cmap_adobe1_procs		5080230	0					
ANR	5080365	UnaryOperator	&		5080230	0					
ANR	5080366	Identifier	cmap_adobe1_procs		5080230	1					
ANR	5080367	Argument	mem		5080230	8					
ANR	5080368	Identifier	mem		5080230	0					
ANR	5080369	IdentifierDeclStatement	uint i ;	608:4:19887:19893	5080230	7	True				
ANR	5080370	IdentifierDecl	i		5080230	0					
ANR	5080371	IdentifierDeclType	uint		5080230	0					
ANR	5080372	Identifier	i		5080230	1					
ANR	5080373	IfStatement	if ( code < 0 || ranges == 0 || ( num_lookups != 0 && lookups == 0 ) || ( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 ) )		5080230	8					
ANR	5080374	Condition	code < 0 || ranges == 0 || ( num_lookups != 0 && lookups == 0 ) || ( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 )	610:8:19904:20042	5080230	0	True				
ANR	5080375	OrExpression	code < 0 || ranges == 0 || ( num_lookups != 0 && lookups == 0 ) || ( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 )		5080230	0		||			
ANR	5080376	RelationalExpression	code < 0		5080230	0		<			
ANR	5080377	Identifier	code		5080230	0					
ANR	5080378	PrimaryExpression	0		5080230	1					
ANR	5080379	OrExpression	ranges == 0 || ( num_lookups != 0 && lookups == 0 ) || ( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 )		5080230	1		||			
ANR	5080380	EqualityExpression	ranges == 0		5080230	0		==			
ANR	5080381	Identifier	ranges		5080230	0					
ANR	5080382	PrimaryExpression	0		5080230	1					
ANR	5080383	OrExpression	( num_lookups != 0 && lookups == 0 ) || ( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 )		5080230	1		||			
ANR	5080384	AndExpression	num_lookups != 0 && lookups == 0		5080230	0		&&			
ANR	5080385	EqualityExpression	num_lookups != 0		5080230	0		!=			
ANR	5080386	Identifier	num_lookups		5080230	0					
ANR	5080387	PrimaryExpression	0		5080230	1					
ANR	5080388	EqualityExpression	lookups == 0		5080230	1		==			
ANR	5080389	Identifier	lookups		5080230	0					
ANR	5080390	PrimaryExpression	0		5080230	1					
ANR	5080391	OrExpression	( keys_size != 0 && keys == 0 ) || ( values_size != 0 && values == 0 )		5080230	1		||			
ANR	5080392	AndExpression	keys_size != 0 && keys == 0		5080230	0		&&			
ANR	5080393	EqualityExpression	keys_size != 0		5080230	0		!=			
ANR	5080394	Identifier	keys_size		5080230	0					
ANR	5080395	PrimaryExpression	0		5080230	1					
ANR	5080396	EqualityExpression	keys == 0		5080230	1		==			
ANR	5080397	Identifier	keys		5080230	0					
ANR	5080398	PrimaryExpression	0		5080230	1					
ANR	5080399	AndExpression	values_size != 0 && values == 0		5080230	1		&&			
ANR	5080400	EqualityExpression	values_size != 0		5080230	0		!=			
ANR	5080401	Identifier	values_size		5080230	0					
ANR	5080402	PrimaryExpression	0		5080230	1					
ANR	5080403	EqualityExpression	values == 0		5080230	1		==			
ANR	5080404	Identifier	values		5080230	0					
ANR	5080405	PrimaryExpression	0		5080230	1					
ANR	5080406	CompoundStatement		24:76:1083:1083	5080230	1					
ANR	5080407	ExpressionStatement	"gs_free_string ( mem , values , values_size , ""gs_cmap_alloc(values)"" )"	612:8:20055:20120	5080230	0	True				
ANR	5080408	CallExpression	"gs_free_string ( mem , values , values_size , ""gs_cmap_alloc(values)"" )"		5080230	0					
ANR	5080409	Callee	gs_free_string		5080230	0					
ANR	5080410	Identifier	gs_free_string		5080230	0					
ANR	5080411	ArgumentList	mem		5080230	1					
ANR	5080412	Argument	mem		5080230	0					
ANR	5080413	Identifier	mem		5080230	0					
ANR	5080414	Argument	values		5080230	1					
ANR	5080415	Identifier	values		5080230	0					
ANR	5080416	Argument	values_size		5080230	2					
ANR	5080417	Identifier	values_size		5080230	0					
ANR	5080418	Argument	"""gs_cmap_alloc(values)"""		5080230	3					
ANR	5080419	PrimaryExpression	"""gs_cmap_alloc(values)"""		5080230	0					
ANR	5080420	ExpressionStatement	"gs_free_string ( mem , keys , keys_size , ""gs_cmap_alloc(keys)"" )"	613:8:20130:20189	5080230	1	True				
ANR	5080421	CallExpression	"gs_free_string ( mem , keys , keys_size , ""gs_cmap_alloc(keys)"" )"		5080230	0					
ANR	5080422	Callee	gs_free_string		5080230	0					
ANR	5080423	Identifier	gs_free_string		5080230	0					
ANR	5080424	ArgumentList	mem		5080230	1					
ANR	5080425	Argument	mem		5080230	0					
ANR	5080426	Identifier	mem		5080230	0					
ANR	5080427	Argument	keys		5080230	1					
ANR	5080428	Identifier	keys		5080230	0					
ANR	5080429	Argument	keys_size		5080230	2					
ANR	5080430	Identifier	keys_size		5080230	0					
ANR	5080431	Argument	"""gs_cmap_alloc(keys)"""		5080230	3					
ANR	5080432	PrimaryExpression	"""gs_cmap_alloc(keys)"""		5080230	0					
ANR	5080433	ExpressionStatement	"gs_free_object ( mem , lookups , ""gs_cmap_alloc(lookup ranges)"" )"	614:8:20199:20259	5080230	2	True				
ANR	5080434	CallExpression	"gs_free_object ( mem , lookups , ""gs_cmap_alloc(lookup ranges)"" )"		5080230	0					
ANR	5080435	Callee	gs_free_object		5080230	0					
ANR	5080436	Identifier	gs_free_object		5080230	0					
ANR	5080437	ArgumentList	mem		5080230	1					
ANR	5080438	Argument	mem		5080230	0					
ANR	5080439	Identifier	mem		5080230	0					
ANR	5080440	Argument	lookups		5080230	1					
ANR	5080441	Identifier	lookups		5080230	0					
ANR	5080442	Argument	"""gs_cmap_alloc(lookup ranges)"""		5080230	2					
ANR	5080443	PrimaryExpression	"""gs_cmap_alloc(lookup ranges)"""		5080230	0					
ANR	5080444	ExpressionStatement	"gs_free_object ( mem , ranges , ""gs_cmap_alloc(code space ranges)"" )"	615:8:20269:20332	5080230	3	True				
ANR	5080445	CallExpression	"gs_free_object ( mem , ranges , ""gs_cmap_alloc(code space ranges)"" )"		5080230	0					
ANR	5080446	Callee	gs_free_object		5080230	0					
ANR	5080447	Identifier	gs_free_object		5080230	0					
ANR	5080448	ArgumentList	mem		5080230	1					
ANR	5080449	Argument	mem		5080230	0					
ANR	5080450	Identifier	mem		5080230	0					
ANR	5080451	Argument	ranges		5080230	1					
ANR	5080452	Identifier	ranges		5080230	0					
ANR	5080453	Argument	"""gs_cmap_alloc(code space ranges)"""		5080230	2					
ANR	5080454	PrimaryExpression	"""gs_cmap_alloc(code space ranges)"""		5080230	0					
ANR	5080455	ExpressionStatement	return_error ( gs_error_VMerror )	616:8:20342:20372	5080230	4	True				
ANR	5080456	CallExpression	return_error ( gs_error_VMerror )		5080230	0					
ANR	5080457	Callee	return_error		5080230	0					
ANR	5080458	Identifier	return_error		5080230	0					
ANR	5080459	ArgumentList	gs_error_VMerror		5080230	1					
ANR	5080460	Argument	gs_error_VMerror		5080230	0					
ANR	5080461	Identifier	gs_error_VMerror		5080230	0					
ANR	5080462	ExpressionStatement	* ppcmap = pcmap1 = ( gs_cmap_adobe1_t * ) pcmap	618:4:20384:20428	5080230	9	True				
ANR	5080463	AssignmentExpression	* ppcmap = pcmap1 = ( gs_cmap_adobe1_t * ) pcmap		5080230	0		=			
ANR	5080464	UnaryOperationExpression	* ppcmap		5080230	0					
ANR	5080465	UnaryOperator	*		5080230	0					
ANR	5080466	Identifier	ppcmap		5080230	1					
ANR	5080467	AssignmentExpression	pcmap1 = ( gs_cmap_adobe1_t * ) pcmap		5080230	1		=			
ANR	5080468	Identifier	pcmap1		5080230	0					
ANR	5080469	CastExpression	( gs_cmap_adobe1_t * ) pcmap		5080230	1					
ANR	5080470	CastTarget	gs_cmap_adobe1_t *		5080230	0					
ANR	5080471	Identifier	pcmap		5080230	1					
ANR	5080472	ExpressionStatement	pcmap1 -> code_space . ranges = ranges	619:4:20434:20468	5080230	10	True				
ANR	5080473	AssignmentExpression	pcmap1 -> code_space . ranges = ranges		5080230	0		=			
ANR	5080474	MemberAccess	pcmap1 -> code_space . ranges		5080230	0					
ANR	5080475	PtrMemberAccess	pcmap1 -> code_space		5080230	0					
ANR	5080476	Identifier	pcmap1		5080230	0					
ANR	5080477	Identifier	code_space		5080230	1					
ANR	5080478	Identifier	ranges		5080230	1					
ANR	5080479	Identifier	ranges		5080230	1					
ANR	5080480	ExpressionStatement	pcmap1 -> code_space . num_ranges = num_ranges	620:4:20474:20516	5080230	11	True				
ANR	5080481	AssignmentExpression	pcmap1 -> code_space . num_ranges = num_ranges		5080230	0		=			
ANR	5080482	MemberAccess	pcmap1 -> code_space . num_ranges		5080230	0					
ANR	5080483	PtrMemberAccess	pcmap1 -> code_space		5080230	0					
ANR	5080484	Identifier	pcmap1		5080230	0					
ANR	5080485	Identifier	code_space		5080230	1					
ANR	5080486	Identifier	num_ranges		5080230	1					
ANR	5080487	Identifier	num_ranges		5080230	1					
ANR	5080488	IfStatement	if ( num_lookups > 0 )		5080230	12					
ANR	5080489	Condition	num_lookups > 0	621:8:20526:20540	5080230	0	True				
ANR	5080490	RelationalExpression	num_lookups > 0		5080230	0		>			
ANR	5080491	Identifier	num_lookups		5080230	0					
ANR	5080492	PrimaryExpression	0		5080230	1					
ANR	5080493	CompoundStatement		34:25:1581:1581	5080230	1					
ANR	5080494	ForStatement	for ( i = 0 ; i < num_lookups ; ++ i )		5080230	0					
ANR	5080495	ForInit	i = 0 ;	622:13:20558:20563	5080230	0	True				
ANR	5080496	AssignmentExpression	i = 0		5080230	0		=			
ANR	5080497	Identifier	i		5080230	0					
ANR	5080498	PrimaryExpression	0		5080230	1					
ANR	5080499	Condition	i < num_lookups	622:20:20565:20579	5080230	1	True				
ANR	5080500	RelationalExpression	i < num_lookups		5080230	0		<			
ANR	5080501	Identifier	i		5080230	0					
ANR	5080502	Identifier	num_lookups		5080230	1					
ANR	5080503	UnaryExpression	++ i	622:37:20582:20584	5080230	2	True				
ANR	5080504	IncDec	++		5080230	0					
ANR	5080505	Identifier	i		5080230	1					
ANR	5080506	CompoundStatement		35:42:1625:1625	5080230	3					
ANR	5080507	ExpressionStatement	"memset ( & lookups [ i ] , 0 , sizeof ( * lookups ) )"	623:12:20601:20641	5080230	0	True				
ANR	5080508	CallExpression	"memset ( & lookups [ i ] , 0 , sizeof ( * lookups ) )"		5080230	0					
ANR	5080509	Callee	memset		5080230	0					
ANR	5080510	Identifier	memset		5080230	0					
ANR	5080511	ArgumentList	& lookups [ i ]		5080230	1					
ANR	5080512	Argument	& lookups [ i ]		5080230	0					
ANR	5080513	UnaryOperationExpression	& lookups [ i ]		5080230	0					
ANR	5080514	UnaryOperator	&		5080230	0					
ANR	5080515	ArrayIndexing	lookups [ i ]		5080230	1					
ANR	5080516	Identifier	lookups		5080230	0					
ANR	5080517	Identifier	i		5080230	1					
ANR	5080518	Argument	0		5080230	1					
ANR	5080519	PrimaryExpression	0		5080230	0					
ANR	5080520	Argument	sizeof ( * lookups )		5080230	2					
ANR	5080521	SizeofExpression	sizeof ( * lookups )		5080230	0					
ANR	5080522	Sizeof	sizeof		5080230	0					
ANR	5080523	UnaryOperationExpression	* lookups		5080230	1					
ANR	5080524	UnaryOperator	*		5080230	0					
ANR	5080525	Identifier	lookups		5080230	1					
ANR	5080526	ExpressionStatement	lookups [ i ] . cmap = pcmap1	624:12:20655:20679	5080230	1	True				
ANR	5080527	AssignmentExpression	lookups [ i ] . cmap = pcmap1		5080230	0		=			
ANR	5080528	MemberAccess	lookups [ i ] . cmap		5080230	0					
ANR	5080529	ArrayIndexing	lookups [ i ]		5080230	0					
ANR	5080530	Identifier	lookups		5080230	0					
ANR	5080531	Identifier	i		5080230	1					
ANR	5080532	Identifier	cmap		5080230	1					
ANR	5080533	Identifier	pcmap1		5080230	1					
ANR	5080534	ExpressionStatement	lookups [ 0 ] . keys . data = keys	626:8:20699:20726	5080230	1	True				
ANR	5080535	AssignmentExpression	lookups [ 0 ] . keys . data = keys		5080230	0		=			
ANR	5080536	MemberAccess	lookups [ 0 ] . keys . data		5080230	0					
ANR	5080537	MemberAccess	lookups [ 0 ] . keys		5080230	0					
ANR	5080538	ArrayIndexing	lookups [ 0 ]		5080230	0					
ANR	5080539	Identifier	lookups		5080230	0					
ANR	5080540	PrimaryExpression	0		5080230	1					
ANR	5080541	Identifier	keys		5080230	1					
ANR	5080542	Identifier	data		5080230	1					
ANR	5080543	Identifier	keys		5080230	1					
ANR	5080544	ExpressionStatement	lookups [ 0 ] . keys . size = keys_size	627:8:20736:20768	5080230	2	True				
ANR	5080545	AssignmentExpression	lookups [ 0 ] . keys . size = keys_size		5080230	0		=			
ANR	5080546	MemberAccess	lookups [ 0 ] . keys . size		5080230	0					
ANR	5080547	MemberAccess	lookups [ 0 ] . keys		5080230	0					
ANR	5080548	ArrayIndexing	lookups [ 0 ]		5080230	0					
ANR	5080549	Identifier	lookups		5080230	0					
ANR	5080550	PrimaryExpression	0		5080230	1					
ANR	5080551	Identifier	keys		5080230	1					
ANR	5080552	Identifier	size		5080230	1					
ANR	5080553	Identifier	keys_size		5080230	1					
ANR	5080554	ExpressionStatement	lookups [ 0 ] . values . data = values	628:8:20778:20809	5080230	3	True				
ANR	5080555	AssignmentExpression	lookups [ 0 ] . values . data = values		5080230	0		=			
ANR	5080556	MemberAccess	lookups [ 0 ] . values . data		5080230	0					
ANR	5080557	MemberAccess	lookups [ 0 ] . values		5080230	0					
ANR	5080558	ArrayIndexing	lookups [ 0 ]		5080230	0					
ANR	5080559	Identifier	lookups		5080230	0					
ANR	5080560	PrimaryExpression	0		5080230	1					
ANR	5080561	Identifier	values		5080230	1					
ANR	5080562	Identifier	data		5080230	1					
ANR	5080563	Identifier	values		5080230	1					
ANR	5080564	ExpressionStatement	lookups [ 0 ] . values . size = values_size	629:8:20819:20855	5080230	4	True				
ANR	5080565	AssignmentExpression	lookups [ 0 ] . values . size = values_size		5080230	0		=			
ANR	5080566	MemberAccess	lookups [ 0 ] . values . size		5080230	0					
ANR	5080567	MemberAccess	lookups [ 0 ] . values		5080230	0					
ANR	5080568	ArrayIndexing	lookups [ 0 ]		5080230	0					
ANR	5080569	Identifier	lookups		5080230	0					
ANR	5080570	PrimaryExpression	0		5080230	1					
ANR	5080571	Identifier	values		5080230	1					
ANR	5080572	Identifier	size		5080230	1					
ANR	5080573	Identifier	values_size		5080230	1					
ANR	5080574	ExpressionStatement	pcmap1 -> def . lookup = lookups	631:4:20867:20895	5080230	13	True				
ANR	5080575	AssignmentExpression	pcmap1 -> def . lookup = lookups		5080230	0		=			
ANR	5080576	MemberAccess	pcmap1 -> def . lookup		5080230	0					
ANR	5080577	PtrMemberAccess	pcmap1 -> def		5080230	0					
ANR	5080578	Identifier	pcmap1		5080230	0					
ANR	5080579	Identifier	def		5080230	1					
ANR	5080580	Identifier	lookup		5080230	1					
ANR	5080581	Identifier	lookups		5080230	1					
ANR	5080582	ExpressionStatement	pcmap1 -> def . num_lookup = num_lookups	632:4:20901:20937	5080230	14	True				
ANR	5080583	AssignmentExpression	pcmap1 -> def . num_lookup = num_lookups		5080230	0		=			
ANR	5080584	MemberAccess	pcmap1 -> def . num_lookup		5080230	0					
ANR	5080585	PtrMemberAccess	pcmap1 -> def		5080230	0					
ANR	5080586	Identifier	pcmap1		5080230	0					
ANR	5080587	Identifier	def		5080230	1					
ANR	5080588	Identifier	num_lookup		5080230	1					
ANR	5080589	Identifier	num_lookups		5080230	1					
ANR	5080590	ExpressionStatement	pcmap1 -> notdef . lookup = 0	633:4:20943:20968	5080230	15	True				
ANR	5080591	AssignmentExpression	pcmap1 -> notdef . lookup = 0		5080230	0		=			
ANR	5080592	MemberAccess	pcmap1 -> notdef . lookup		5080230	0					
ANR	5080593	PtrMemberAccess	pcmap1 -> notdef		5080230	0					
ANR	5080594	Identifier	pcmap1		5080230	0					
ANR	5080595	Identifier	notdef		5080230	1					
ANR	5080596	Identifier	lookup		5080230	1					
ANR	5080597	PrimaryExpression	0		5080230	1					
ANR	5080598	ExpressionStatement	pcmap1 -> notdef . num_lookup = 0	634:4:20974:21003	5080230	16	True				
ANR	5080599	AssignmentExpression	pcmap1 -> notdef . num_lookup = 0		5080230	0		=			
ANR	5080600	MemberAccess	pcmap1 -> notdef . num_lookup		5080230	0					
ANR	5080601	PtrMemberAccess	pcmap1 -> notdef		5080230	0					
ANR	5080602	Identifier	pcmap1		5080230	0					
ANR	5080603	Identifier	notdef		5080230	1					
ANR	5080604	Identifier	num_lookup		5080230	1					
ANR	5080605	PrimaryExpression	0		5080230	1					
ANR	5080606	ReturnStatement	return 0 ;	636:4:21079:21087	5080230	17	True				
ANR	5080607	PrimaryExpression	0		5080230	0					
ANR	5080608	ReturnType	int		5080230	1					
ANR	5080609	Identifier	gs_cmap_adobe1_alloc		5080230	2					
ANR	5080610	ParameterList	"gs_cmap_adobe1_t * * ppcmap , int wmode , const byte * map_name , uint name_size , uint num_fonts , uint num_ranges , uint num_lookups , uint keys_size , uint values_size , const gs_cid_system_info_t * pcidsi_in , gs_memory_t * mem"		5080230	3					
ANR	5080611	Parameter	gs_cmap_adobe1_t * * ppcmap	583:21:18659:18683	5080230	0	True				
ANR	5080612	ParameterType	gs_cmap_adobe1_t * *		5080230	0					
ANR	5080613	Identifier	ppcmap		5080230	1					
ANR	5080614	Parameter	int wmode	583:48:18686:18694	5080230	1	True				
ANR	5080615	ParameterType	int		5080230	0					
ANR	5080616	Identifier	wmode		5080230	1					
ANR	5080617	Parameter	const byte * map_name	584:21:18718:18737	5080230	2	True				
ANR	5080618	ParameterType	const byte *		5080230	0					
ANR	5080619	Identifier	map_name		5080230	1					
ANR	5080620	Parameter	uint name_size	584:43:18740:18753	5080230	3	True				
ANR	5080621	ParameterType	uint		5080230	0					
ANR	5080622	Identifier	name_size		5080230	1					
ANR	5080623	Parameter	uint num_fonts	585:21:18777:18790	5080230	4	True				
ANR	5080624	ParameterType	uint		5080230	0					
ANR	5080625	Identifier	num_fonts		5080230	1					
ANR	5080626	Parameter	uint num_ranges	585:37:18793:18807	5080230	5	True				
ANR	5080627	ParameterType	uint		5080230	0					
ANR	5080628	Identifier	num_ranges		5080230	1					
ANR	5080629	Parameter	uint num_lookups	585:54:18810:18825	5080230	6	True				
ANR	5080630	ParameterType	uint		5080230	0					
ANR	5080631	Identifier	num_lookups		5080230	1					
ANR	5080632	Parameter	uint keys_size	586:21:18849:18862	5080230	7	True				
ANR	5080633	ParameterType	uint		5080230	0					
ANR	5080634	Identifier	keys_size		5080230	1					
ANR	5080635	Parameter	uint values_size	586:37:18865:18880	5080230	8	True				
ANR	5080636	ParameterType	uint		5080230	0					
ANR	5080637	Identifier	values_size		5080230	1					
ANR	5080638	Parameter	const gs_cid_system_info_t * pcidsi_in	587:21:18904:18940	5080230	9	True				
ANR	5080639	ParameterType	const gs_cid_system_info_t *		5080230	0					
ANR	5080640	Identifier	pcidsi_in		5080230	1					
ANR	5080641	Parameter	gs_memory_t * mem	587:60:18943:18958	5080230	10	True				
ANR	5080642	ParameterType	gs_memory_t *		5080230	0					
ANR	5080643	Identifier	mem		5080230	1					
ANR	5080644	CFGEntryNode	ENTRY		5080230		True				
ANR	5080645	CFGExitNode	EXIT		5080230		True				
ANR	5080646	Symbol	pcmap1 -> notdef		5080230						
ANR	5080647	Symbol	* pcmap1		5080230						
ANR	5080648	Symbol	lookups [ 0 ] . keys . size		5080230						
ANR	5080649	Symbol	pcmap1		5080230						
ANR	5080650	Symbol	lookups [ 0 ] . keys		5080230						
ANR	5080651	Symbol	num_ranges		5080230						
ANR	5080652	Symbol	lookups [ 0 ] . values . data		5080230						
ANR	5080653	Symbol	gs_alloc_string		5080230						
ANR	5080654	Symbol	keys_size		5080230						
ANR	5080655	Symbol	lookups [ 0 ] . values		5080230						
ANR	5080656	Symbol	gs_alloc_struct_array		5080230						
ANR	5080657	Symbol	& st_cmap_lookup_range		5080230						
ANR	5080658	Symbol	pcmap1 -> def		5080230						
ANR	5080659	Symbol	NULL		5080230						
ANR	5080660	Symbol	map_name		5080230						
ANR	5080661	Symbol	& pcmap		5080230						
ANR	5080662	Symbol	& st_cmap_adobe1		5080230						
ANR	5080663	Symbol	lookups [ i ] . cmap		5080230						
ANR	5080664	Symbol	pcmap1 -> def . lookup		5080230						
ANR	5080665	Symbol	pcmap1 -> def . num_lookup		5080230						
ANR	5080666	Symbol	pcidsi_in		5080230						
ANR	5080667	Symbol	name_size		5080230						
ANR	5080668	Symbol	gx_cmap_lookup_range_t		5080230						
ANR	5080669	Symbol	code		5080230						
ANR	5080670	Symbol	ranges		5080230						
ANR	5080671	Symbol	keys		5080230						
ANR	5080672	Symbol	values		5080230						
ANR	5080673	Symbol	pcmap1 -> code_space . ranges		5080230						
ANR	5080674	Symbol	lookups [ 0 ] . keys . data		5080230						
ANR	5080675	Symbol	num_fonts		5080230						
ANR	5080676	Symbol	pcmap		5080230						
ANR	5080677	Symbol	mem		5080230						
ANR	5080678	Symbol	wmode		5080230						
ANR	5080679	Symbol	gs_cmap_alloc		5080230						
ANR	5080680	Symbol	& cmap_adobe1_procs		5080230						
ANR	5080681	Symbol	lookups		5080230						
ANR	5080682	Symbol	num_lookups		5080230						
ANR	5080683	Symbol	i		5080230						
ANR	5080684	Symbol	ppcmap		5080230						
ANR	5080685	Symbol	pcmap1 -> code_space . num_ranges		5080230						
ANR	5080686	Symbol	gs_error_VMerror		5080230						
ANR	5080687	Symbol	pcmap1 -> notdef . num_lookup		5080230						
ANR	5080688	Symbol	* i		5080230						
ANR	5080689	Symbol	pcmap1 -> notdef . lookup		5080230						
ANR	5080690	Symbol	pcmap1 -> code_space		5080230						
ANR	5080691	Symbol	values_size		5080230						
ANR	5080692	Symbol	* lookups		5080230						
ANR	5080693	Symbol	lookups [ 0 ] . values . size		5080230						
ANR	5080694	Symbol	gs_alloc_byte_array		5080230						
ANR	5080695	Symbol	* ppcmap		5080230						
