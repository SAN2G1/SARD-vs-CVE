command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3674463	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_truetype_ttdriver.c								
ANR	3674464	Function	tt_property_set	62:2:2426:3822							
ANR	3674465	FunctionDef	"tt_property_set (FT_Module module , const char * property_name , const void * value , FT_Bool value_is_string)"		3674464	0					
ANR	3674466	CompoundStatement		67:2:2644:3822	3674464	0					
ANR	3674467	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	68:4:2650:2679	3674464	0	True				
ANR	3674468	IdentifierDecl	error = FT_Err_Ok		3674464	0					
ANR	3674469	IdentifierDeclType	FT_Error		3674464	0					
ANR	3674470	Identifier	error		3674464	1					
ANR	3674471	AssignmentExpression	error = FT_Err_Ok		3674464	2		=			
ANR	3674472	Identifier	FT_Err_Ok		3674464	0					
ANR	3674473	Identifier	FT_Err_Ok		3674464	1					
ANR	3674474	IdentifierDeclStatement	TT_Driver driver = ( TT_Driver ) module ;	69:4:2685:2722	3674464	1	True				
ANR	3674475	IdentifierDecl	driver = ( TT_Driver ) module		3674464	0					
ANR	3674476	IdentifierDeclType	TT_Driver		3674464	0					
ANR	3674477	Identifier	driver		3674464	1					
ANR	3674478	AssignmentExpression	driver = ( TT_Driver ) module		3674464	2		=			
ANR	3674479	Identifier	driver		3674464	0					
ANR	3674480	CastExpression	( TT_Driver ) module		3674464	1					
ANR	3674481	CastTarget	TT_Driver		3674464	0					
ANR	3674482	Identifier	module		3674464	1					
ANR	3674483	ExpressionStatement	FT_UNUSED ( value_is_string )	72:4:2777:2805	3674464	2	True				
ANR	3674484	CallExpression	FT_UNUSED ( value_is_string )		3674464	0					
ANR	3674485	Callee	FT_UNUSED		3674464	0					
ANR	3674486	Identifier	FT_UNUSED		3674464	0					
ANR	3674487	ArgumentList	value_is_string		3674464	1					
ANR	3674488	Argument	value_is_string		3674464	0					
ANR	3674489	Identifier	value_is_string		3674464	0					
ANR	3674490	IfStatement	"if ( ! ft_strcmp ( property_name , ""interpreter-version"" ) )"		3674464	3					
ANR	3674491	Condition	"! ft_strcmp ( property_name , ""interpreter-version"" )"	76:9:2825:2874	3674464	0	True				
ANR	3674492	UnaryOperationExpression	"! ft_strcmp ( property_name , ""interpreter-version"" )"		3674464	0					
ANR	3674493	UnaryOperator	!		3674464	0					
ANR	3674494	CallExpression	"ft_strcmp ( property_name , ""interpreter-version"" )"		3674464	1					
ANR	3674495	Callee	ft_strcmp		3674464	0					
ANR	3674496	Identifier	ft_strcmp		3674464	0					
ANR	3674497	ArgumentList	property_name		3674464	1					
ANR	3674498	Argument	property_name		3674464	0					
ANR	3674499	Identifier	property_name		3674464	0					
ANR	3674500	Argument	"""interpreter-version"""		3674464	1					
ANR	3674501	PrimaryExpression	"""interpreter-version"""		3674464	0					
ANR	3674502	CompoundStatement		12:6:245:273	3674464	1					
ANR	3674503	IdentifierDeclStatement	FT_UInt interpreter_version ;	78:6:2890:2918	3674464	0	True				
ANR	3674504	IdentifierDecl	interpreter_version		3674464	0					
ANR	3674505	IdentifierDeclType	FT_UInt		3674464	0					
ANR	3674506	Identifier	interpreter_version		3674464	1					
ANR	3674507	IfStatement	if ( value_is_string )		3674464	1					
ANR	3674508	Condition	value_is_string	82:11:2980:2994	3674464	0	True				
ANR	3674509	Identifier	value_is_string		3674464	0					
ANR	3674510	CompoundStatement		18:8:369:404	3674464	1					
ANR	3674511	IdentifierDeclStatement	const char * s = ( const char * ) value ;	84:8:3014:3049	3674464	0	True				
ANR	3674512	IdentifierDecl	* s = ( const char * ) value		3674464	0					
ANR	3674513	IdentifierDeclType	const char *		3674464	0					
ANR	3674514	Identifier	s		3674464	1					
ANR	3674515	AssignmentExpression	* s = ( const char * ) value		3674464	2		=			
ANR	3674516	Identifier	s		3674464	0					
ANR	3674517	CastExpression	( const char * ) value		3674464	1					
ANR	3674518	CastTarget	const char *		3674464	0					
ANR	3674519	Identifier	value		3674464	1					
ANR	3674520	ExpressionStatement	"interpreter_version = ( FT_UInt ) ft_strtol ( s , NULL , 10 )"	87:8:3061:3116	3674464	1	True				
ANR	3674521	AssignmentExpression	"interpreter_version = ( FT_UInt ) ft_strtol ( s , NULL , 10 )"		3674464	0		=			
ANR	3674522	Identifier	interpreter_version		3674464	0					
ANR	3674523	CastExpression	"( FT_UInt ) ft_strtol ( s , NULL , 10 )"		3674464	1					
ANR	3674524	CastTarget	FT_UInt		3674464	0					
ANR	3674525	CallExpression	"ft_strtol ( s , NULL , 10 )"		3674464	1					
ANR	3674526	Callee	ft_strtol		3674464	0					
ANR	3674527	Identifier	ft_strtol		3674464	0					
ANR	3674528	ArgumentList	s		3674464	1					
ANR	3674529	Argument	s		3674464	0					
ANR	3674530	Identifier	s		3674464	0					
ANR	3674531	Argument	NULL		3674464	1					
ANR	3674532	Identifier	NULL		3674464	0					
ANR	3674533	Argument	10		3674464	2					
ANR	3674534	PrimaryExpression	10		3674464	0					
ANR	3674535	ElseStatement	else		3674464	0					
ANR	3674536	CompoundStatement		26:8:515:545	3674464	0					
ANR	3674537	IdentifierDeclStatement	FT_UInt * iv = ( FT_UInt * ) value ;	92:8:3160:3190	3674464	0	True				
ANR	3674538	IdentifierDecl	* iv = ( FT_UInt * ) value		3674464	0					
ANR	3674539	IdentifierDeclType	FT_UInt *		3674464	0					
ANR	3674540	Identifier	iv		3674464	1					
ANR	3674541	AssignmentExpression	* iv = ( FT_UInt * ) value		3674464	2		=			
ANR	3674542	Identifier	iv		3674464	0					
ANR	3674543	CastExpression	( FT_UInt * ) value		3674464	1					
ANR	3674544	CastTarget	FT_UInt *		3674464	0					
ANR	3674545	Identifier	value		3674464	1					
ANR	3674546	ExpressionStatement	interpreter_version = * iv	95:8:3202:3227	3674464	1	True				
ANR	3674547	AssignmentExpression	interpreter_version = * iv		3674464	0		=			
ANR	3674548	Identifier	interpreter_version		3674464	0					
ANR	3674549	UnaryOperationExpression	* iv		3674464	1					
ANR	3674550	UnaryOperator	*		3674464	0					
ANR	3674551	Identifier	iv		3674464	1					
ANR	3674552	Statement	if	98:6:3244:3245	3674464	2	True				
ANR	3674553	Statement	(	98:9:3247:3247	3674464	3	True				
ANR	3674554	Statement	interpreter_version	98:11:3249:3267	3674464	4	True				
ANR	3674555	Statement	==	98:31:3269:3270	3674464	5	True				
ANR	3674556	Statement	TT_INTERPRETER_VERSION_35	98:34:3272:3296	3674464	6	True				
ANR	3674557	Statement	||	100:11:3355:3356	3674464	7	True				
ANR	3674558	Statement	interpreter_version	100:14:3358:3376	3674464	8	True				
ANR	3674559	Statement	==	100:34:3378:3379	3674464	9	True				
ANR	3674560	Statement	TT_INTERPRETER_VERSION_38	100:37:3381:3405	3674464	10	True				
ANR	3674561	Statement	||	103:11:3468:3469	3674464	11	True				
ANR	3674562	Statement	interpreter_version	103:14:3471:3489	3674464	12	True				
ANR	3674563	Statement	==	103:34:3491:3492	3674464	13	True				
ANR	3674564	Statement	TT_INTERPRETER_VERSION_40	103:37:3494:3518	3674464	14	True				
ANR	3674565	Statement	)	105:9:3536:3536	3674464	15	True				
ANR	3674566	ExpressionStatement	driver -> interpreter_version = interpreter_version	106:8:3546:3595	3674464	16	True				
ANR	3674567	AssignmentExpression	driver -> interpreter_version = interpreter_version		3674464	0		=			
ANR	3674568	PtrMemberAccess	driver -> interpreter_version		3674464	0					
ANR	3674569	Identifier	driver		3674464	0					
ANR	3674570	Identifier	interpreter_version		3674464	1					
ANR	3674571	Identifier	interpreter_version		3674464	1					
ANR	3674572	ReturnStatement	return error ;	110:6:3664:3676	3674464	17	True				
ANR	3674573	Identifier	error		3674464	0					
ANR	3674574	ElseStatement	else		3674464	0					
ANR	3674575	ExpressionStatement	error = FT_ERR ( Unimplemented_Feature )	108:8:3616:3655	3674464	0	True				
ANR	3674576	AssignmentExpression	error = FT_ERR ( Unimplemented_Feature )		3674464	0		=			
ANR	3674577	Identifier	error		3674464	0					
ANR	3674578	CallExpression	FT_ERR ( Unimplemented_Feature )		3674464	1					
ANR	3674579	Callee	FT_ERR		3674464	0					
ANR	3674580	Identifier	FT_ERR		3674464	0					
ANR	3674581	ArgumentList	Unimplemented_Feature		3674464	1					
ANR	3674582	Argument	Unimplemented_Feature		3674464	0					
ANR	3674583	Identifier	Unimplemented_Feature		3674464	0					
ANR	3674584	ExpressionStatement	"FT_TRACE0 ( ( ""tt_property_set: missing property `%s'\\n"" , property_name ) )"	113:4:3689:3777	3674464	4	True				
ANR	3674585	CallExpression	"FT_TRACE0 ( ( ""tt_property_set: missing property `%s'\\n"" , property_name ) )"		3674464	0					
ANR	3674586	Callee	FT_TRACE0		3674464	0					
ANR	3674587	Identifier	FT_TRACE0		3674464	0					
ANR	3674588	ArgumentList	"""tt_property_set: missing property `%s'\\n"" , property_name"		3674464	1					
ANR	3674589	Argument	"""tt_property_set: missing property `%s'\\n"" , property_name"		3674464	0					
ANR	3674590	Expression	"""tt_property_set: missing property `%s'\\n"" , property_name"		3674464	0					
ANR	3674591	PrimaryExpression	"""tt_property_set: missing property `%s'\\n"""		3674464	0					
ANR	3674592	Identifier	property_name		3674464	1					
ANR	3674593	ReturnStatement	return FT_THROW ( Missing_Property ) ;	115:4:3783:3818	3674464	5	True				
ANR	3674594	CallExpression	FT_THROW ( Missing_Property )		3674464	0					
ANR	3674595	Callee	FT_THROW		3674464	0					
ANR	3674596	Identifier	FT_THROW		3674464	0					
ANR	3674597	ArgumentList	Missing_Property		3674464	1					
ANR	3674598	Argument	Missing_Property		3674464	0					
ANR	3674599	Identifier	Missing_Property		3674464	0					
ANR	3674600	ReturnType	static FT_Error		3674464	1					
ANR	3674601	Identifier	tt_property_set		3674464	2					
ANR	3674602	ParameterList	"FT_Module module , const char * property_name , const void * value , FT_Bool value_is_string"		3674464	3					
ANR	3674603	Parameter	FT_Module module	63:19:2461:2479	3674464	0	True				
ANR	3674604	ParameterType	FT_Module		3674464	0					
ANR	3674605	Identifier	module		3674464	1					
ANR	3674606	Parameter	const char * property_name	64:19:2525:2550	3674464	1	True				
ANR	3674607	ParameterType	const char *		3674464	0					
ANR	3674608	Identifier	property_name		3674464	1					
ANR	3674609	Parameter	const void * value	65:19:2572:2589	3674464	2	True				
ANR	3674610	ParameterType	const void *		3674464	0					
ANR	3674611	Identifier	value		3674464	1					
ANR	3674612	Parameter	FT_Bool value_is_string	66:19:2611:2638	3674464	3	True				
ANR	3674613	ParameterType	FT_Bool		3674464	0					
ANR	3674614	Identifier	value_is_string		3674464	1					
ANR	3674615	CFGEntryNode	ENTRY		3674464		True				
ANR	3674616	CFGExitNode	EXIT		3674464		True				
ANR	3674617	Symbol	ft_strtol		3674464						
ANR	3674618	Symbol	NULL		3674464						
ANR	3674619	Symbol	FT_Err_Ok		3674464						
ANR	3674620	Symbol	value_is_string		3674464						
ANR	3674621	Symbol	module		3674464						
ANR	3674622	Symbol	interpreter_version		3674464						
ANR	3674623	Symbol	* driver		3674464						
ANR	3674624	Symbol	FT_ERR		3674464						
ANR	3674625	Symbol	error		3674464						
ANR	3674626	Symbol	iv		3674464						
ANR	3674627	Symbol	FT_THROW		3674464						
ANR	3674628	Symbol	property_name		3674464						
ANR	3674629	Symbol	* iv		3674464						
ANR	3674630	Symbol	driver -> interpreter_version		3674464						
ANR	3674631	Symbol	s		3674464						
ANR	3674632	Symbol	driver		3674464						
ANR	3674633	Symbol	Unimplemented_Feature		3674464						
ANR	3674634	Symbol	ft_strcmp		3674464						
ANR	3674635	Symbol	Missing_Property		3674464						
ANR	3674636	Symbol	value		3674464						
ANR	3674637	Function	tt_property_get	119:2:3828:4452							
ANR	3674638	FunctionDef	"tt_property_get (FT_Module module , const char * property_name , const void * value)"		3674637	0					
ANR	3674639	CompoundStatement		123:2:3997:4452	3674637	0					
ANR	3674640	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	124:4:4003:4032	3674637	0	True				
ANR	3674641	IdentifierDecl	error = FT_Err_Ok		3674637	0					
ANR	3674642	IdentifierDeclType	FT_Error		3674637	0					
ANR	3674643	Identifier	error		3674637	1					
ANR	3674644	AssignmentExpression	error = FT_Err_Ok		3674637	2		=			
ANR	3674645	Identifier	FT_Err_Ok		3674637	0					
ANR	3674646	Identifier	FT_Err_Ok		3674637	1					
ANR	3674647	IdentifierDeclStatement	TT_Driver driver = ( TT_Driver ) module ;	125:4:4038:4075	3674637	1	True				
ANR	3674648	IdentifierDecl	driver = ( TT_Driver ) module		3674637	0					
ANR	3674649	IdentifierDeclType	TT_Driver		3674637	0					
ANR	3674650	Identifier	driver		3674637	1					
ANR	3674651	AssignmentExpression	driver = ( TT_Driver ) module		3674637	2		=			
ANR	3674652	Identifier	driver		3674637	0					
ANR	3674653	CastExpression	( TT_Driver ) module		3674637	1					
ANR	3674654	CastTarget	TT_Driver		3674637	0					
ANR	3674655	Identifier	module		3674637	1					
ANR	3674656	IdentifierDeclStatement	FT_UInt interpreter_version = driver -> interpreter_version ;	127:4:4082:4140	3674637	2	True				
ANR	3674657	IdentifierDecl	interpreter_version = driver -> interpreter_version		3674637	0					
ANR	3674658	IdentifierDeclType	FT_UInt		3674637	0					
ANR	3674659	Identifier	interpreter_version		3674637	1					
ANR	3674660	AssignmentExpression	interpreter_version = driver -> interpreter_version		3674637	2		=			
ANR	3674661	Identifier	interpreter_version		3674637	0					
ANR	3674662	PtrMemberAccess	driver -> interpreter_version		3674637	1					
ANR	3674663	Identifier	driver		3674637	0					
ANR	3674664	Identifier	interpreter_version		3674637	1					
ANR	3674665	IfStatement	"if ( ! ft_strcmp ( property_name , ""interpreter-version"" ) )"		3674637	3					
ANR	3674666	Condition	"! ft_strcmp ( property_name , ""interpreter-version"" )"	130:9:4153:4202	3674637	0	True				
ANR	3674667	UnaryOperationExpression	"! ft_strcmp ( property_name , ""interpreter-version"" )"		3674637	0					
ANR	3674668	UnaryOperator	!		3674637	0					
ANR	3674669	CallExpression	"ft_strcmp ( property_name , ""interpreter-version"" )"		3674637	1					
ANR	3674670	Callee	ft_strcmp		3674637	0					
ANR	3674671	Identifier	ft_strcmp		3674637	0					
ANR	3674672	ArgumentList	property_name		3674637	1					
ANR	3674673	Argument	property_name		3674637	0					
ANR	3674674	Identifier	property_name		3674637	0					
ANR	3674675	Argument	"""interpreter-version"""		3674637	1					
ANR	3674676	PrimaryExpression	"""interpreter-version"""		3674637	0					
ANR	3674677	CompoundStatement		10:6:220:251	3674637	1					
ANR	3674678	IdentifierDeclStatement	FT_UInt * val = ( FT_UInt * ) value ;	132:6:4218:4249	3674637	0	True				
ANR	3674679	IdentifierDecl	* val = ( FT_UInt * ) value		3674637	0					
ANR	3674680	IdentifierDeclType	FT_UInt *		3674637	0					
ANR	3674681	Identifier	val		3674637	1					
ANR	3674682	AssignmentExpression	* val = ( FT_UInt * ) value		3674637	2		=			
ANR	3674683	Identifier	val		3674637	0					
ANR	3674684	CastExpression	( FT_UInt * ) value		3674637	1					
ANR	3674685	CastTarget	FT_UInt *		3674637	0					
ANR	3674686	Identifier	value		3674637	1					
ANR	3674687	ExpressionStatement	* val = interpreter_version	135:6:4259:4285	3674637	1	True				
ANR	3674688	AssignmentExpression	* val = interpreter_version		3674637	0		=			
ANR	3674689	UnaryOperationExpression	* val		3674637	0					
ANR	3674690	UnaryOperator	*		3674637	0					
ANR	3674691	Identifier	val		3674637	1					
ANR	3674692	Identifier	interpreter_version		3674637	1					
ANR	3674693	ReturnStatement	return error ;	137:6:4294:4306	3674637	2	True				
ANR	3674694	Identifier	error		3674637	0					
ANR	3674695	ExpressionStatement	"FT_TRACE0 ( ( ""tt_property_get: missing property `%s'\\n"" , property_name ) )"	140:4:4319:4407	3674637	4	True				
ANR	3674696	CallExpression	"FT_TRACE0 ( ( ""tt_property_get: missing property `%s'\\n"" , property_name ) )"		3674637	0					
ANR	3674697	Callee	FT_TRACE0		3674637	0					
ANR	3674698	Identifier	FT_TRACE0		3674637	0					
ANR	3674699	ArgumentList	"""tt_property_get: missing property `%s'\\n"" , property_name"		3674637	1					
ANR	3674700	Argument	"""tt_property_get: missing property `%s'\\n"" , property_name"		3674637	0					
ANR	3674701	Expression	"""tt_property_get: missing property `%s'\\n"" , property_name"		3674637	0					
ANR	3674702	PrimaryExpression	"""tt_property_get: missing property `%s'\\n"""		3674637	0					
ANR	3674703	Identifier	property_name		3674637	1					
ANR	3674704	ReturnStatement	return FT_THROW ( Missing_Property ) ;	142:4:4413:4448	3674637	5	True				
ANR	3674705	CallExpression	FT_THROW ( Missing_Property )		3674637	0					
ANR	3674706	Callee	FT_THROW		3674637	0					
ANR	3674707	Identifier	FT_THROW		3674637	0					
ANR	3674708	ArgumentList	Missing_Property		3674637	1					
ANR	3674709	Argument	Missing_Property		3674637	0					
ANR	3674710	Identifier	Missing_Property		3674637	0					
ANR	3674711	ReturnType	static FT_Error		3674637	1					
ANR	3674712	Identifier	tt_property_get		3674637	2					
ANR	3674713	ParameterList	"FT_Module module , const char * property_name , const void * value"		3674637	3					
ANR	3674714	Parameter	FT_Module module	120:19:3863:3881	3674637	0	True				
ANR	3674715	ParameterType	FT_Module		3674637	0					
ANR	3674716	Identifier	module		3674637	1					
ANR	3674717	Parameter	const char * property_name	121:19:3927:3952	3674637	1	True				
ANR	3674718	ParameterType	const char *		3674637	0					
ANR	3674719	Identifier	property_name		3674637	1					
ANR	3674720	Parameter	const void * value	122:19:3974:3991	3674637	2	True				
ANR	3674721	ParameterType	const void *		3674637	0					
ANR	3674722	Identifier	value		3674637	1					
ANR	3674723	CFGEntryNode	ENTRY		3674637		True				
ANR	3674724	CFGExitNode	EXIT		3674637		True				
ANR	3674725	Symbol	val		3674637						
ANR	3674726	Symbol	FT_Err_Ok		3674637						
ANR	3674727	Symbol	module		3674637						
ANR	3674728	Symbol	interpreter_version		3674637						
ANR	3674729	Symbol	* driver		3674637						
ANR	3674730	Symbol	* val		3674637						
ANR	3674731	Symbol	error		3674637						
ANR	3674732	Symbol	FT_THROW		3674637						
ANR	3674733	Symbol	property_name		3674637						
ANR	3674734	Symbol	driver -> interpreter_version		3674637						
ANR	3674735	Symbol	driver		3674637						
ANR	3674736	Symbol	ft_strcmp		3674637						
ANR	3674737	Symbol	Missing_Property		3674637						
ANR	3674738	Symbol	value		3674637						
ANR	3674739	Function	tt_get_kerning	199:2:8017:8463							
ANR	3674740	FunctionDef	"tt_get_kerning (FT_Face ttface , FT_UInt left_glyph , FT_UInt right_glyph , FT_Vector * kerning)"		3674739	0					
ANR	3674741	CompoundStatement		204:2:8221:8463	3674739	0					
ANR	3674742	IdentifierDeclStatement	TT_Face face = ( TT_Face ) ttface ;	205:4:8227:8263	3674739	0	True				
ANR	3674743	IdentifierDecl	face = ( TT_Face ) ttface		3674739	0					
ANR	3674744	IdentifierDeclType	TT_Face		3674739	0					
ANR	3674745	Identifier	face		3674739	1					
ANR	3674746	AssignmentExpression	face = ( TT_Face ) ttface		3674739	2		=			
ANR	3674747	Identifier	face		3674739	0					
ANR	3674748	CastExpression	( TT_Face ) ttface		3674739	1					
ANR	3674749	CastTarget	TT_Face		3674739	0					
ANR	3674750	Identifier	ttface		3674739	1					
ANR	3674751	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) face -> sfnt ;	206:4:8269:8314	3674739	1	True				
ANR	3674752	IdentifierDecl	sfnt = ( SFNT_Service ) face -> sfnt		3674739	0					
ANR	3674753	IdentifierDeclType	SFNT_Service		3674739	0					
ANR	3674754	Identifier	sfnt		3674739	1					
ANR	3674755	AssignmentExpression	sfnt = ( SFNT_Service ) face -> sfnt		3674739	2		=			
ANR	3674756	Identifier	sfnt		3674739	0					
ANR	3674757	CastExpression	( SFNT_Service ) face -> sfnt		3674739	1					
ANR	3674758	CastTarget	SFNT_Service		3674739	0					
ANR	3674759	PtrMemberAccess	face -> sfnt		3674739	1					
ANR	3674760	Identifier	face		3674739	0					
ANR	3674761	Identifier	sfnt		3674739	1					
ANR	3674762	ExpressionStatement	kerning -> x = 0	209:4:8322:8336	3674739	2	True				
ANR	3674763	AssignmentExpression	kerning -> x = 0		3674739	0		=			
ANR	3674764	PtrMemberAccess	kerning -> x		3674739	0					
ANR	3674765	Identifier	kerning		3674739	0					
ANR	3674766	Identifier	x		3674739	1					
ANR	3674767	PrimaryExpression	0		3674739	1					
ANR	3674768	ExpressionStatement	kerning -> y = 0	210:4:8342:8356	3674739	3	True				
ANR	3674769	AssignmentExpression	kerning -> y = 0		3674739	0		=			
ANR	3674770	PtrMemberAccess	kerning -> y		3674739	0					
ANR	3674771	Identifier	kerning		3674739	0					
ANR	3674772	Identifier	y		3674739	1					
ANR	3674773	PrimaryExpression	0		3674739	1					
ANR	3674774	IfStatement	if ( sfnt )		3674739	4					
ANR	3674775	Condition	sfnt	212:9:8368:8371	3674739	0	True				
ANR	3674776	Identifier	sfnt		3674739	0					
ANR	3674777	ExpressionStatement	"kerning -> x = sfnt -> get_kerning ( face , left_glyph , right_glyph )"	213:6:8381:8444	3674739	1	True				
ANR	3674778	AssignmentExpression	"kerning -> x = sfnt -> get_kerning ( face , left_glyph , right_glyph )"		3674739	0		=			
ANR	3674779	PtrMemberAccess	kerning -> x		3674739	0					
ANR	3674780	Identifier	kerning		3674739	0					
ANR	3674781	Identifier	x		3674739	1					
ANR	3674782	CallExpression	"sfnt -> get_kerning ( face , left_glyph , right_glyph )"		3674739	1					
ANR	3674783	Callee	sfnt -> get_kerning		3674739	0					
ANR	3674784	PtrMemberAccess	sfnt -> get_kerning		3674739	0					
ANR	3674785	Identifier	sfnt		3674739	0					
ANR	3674786	Identifier	get_kerning		3674739	1					
ANR	3674787	ArgumentList	face		3674739	1					
ANR	3674788	Argument	face		3674739	0					
ANR	3674789	Identifier	face		3674739	0					
ANR	3674790	Argument	left_glyph		3674739	1					
ANR	3674791	Identifier	left_glyph		3674739	0					
ANR	3674792	Argument	right_glyph		3674739	2					
ANR	3674793	Identifier	right_glyph		3674739	0					
ANR	3674794	ReturnStatement	return 0 ;	215:4:8451:8459	3674739	5	True				
ANR	3674795	PrimaryExpression	0		3674739	0					
ANR	3674796	ReturnType	static FT_Error		3674739	1					
ANR	3674797	Identifier	tt_get_kerning		3674739	2					
ANR	3674798	ParameterList	"FT_Face ttface , FT_UInt left_glyph , FT_UInt right_glyph , FT_Vector * kerning"		3674739	3					
ANR	3674799	Parameter	FT_Face ttface	200:18:8051:8068	3674739	0	True				
ANR	3674800	ParameterType	FT_Face		3674739	0					
ANR	3674801	Identifier	ttface		3674739	1					
ANR	3674802	Parameter	FT_UInt left_glyph	201:18:8112:8133	3674739	1	True				
ANR	3674803	ParameterType	FT_UInt		3674739	0					
ANR	3674804	Identifier	left_glyph		3674739	1					
ANR	3674805	Parameter	FT_UInt right_glyph	202:18:8154:8176	3674739	2	True				
ANR	3674806	ParameterType	FT_UInt		3674739	0					
ANR	3674807	Identifier	right_glyph		3674739	1					
ANR	3674808	Parameter	FT_Vector * kerning	203:18:8197:8215	3674739	3	True				
ANR	3674809	ParameterType	FT_Vector *		3674739	0					
ANR	3674810	Identifier	kerning		3674739	1					
ANR	3674811	CFGEntryNode	ENTRY		3674739		True				
ANR	3674812	CFGExitNode	EXIT		3674739		True				
ANR	3674813	Symbol	kerning		3674739						
ANR	3674814	Symbol	kerning -> y		3674739						
ANR	3674815	Symbol	kerning -> x		3674739						
ANR	3674816	Symbol	* sfnt		3674739						
ANR	3674817	Symbol	sfnt		3674739						
ANR	3674818	Symbol	sfnt -> get_kerning		3674739						
ANR	3674819	Symbol	* face		3674739						
ANR	3674820	Symbol	right_glyph		3674739						
ANR	3674821	Symbol	face		3674739						
ANR	3674822	Symbol	left_glyph		3674739						
ANR	3674823	Symbol	* kerning		3674739						
ANR	3674824	Symbol	ttface		3674739						
ANR	3674825	Symbol	face -> sfnt		3674739						
ANR	3674826	Function	tt_get_advances	219:2:8469:9969							
ANR	3674827	FunctionDef	"tt_get_advances (FT_Face ttface , FT_UInt start , FT_UInt count , FT_Int32 flags , FT_Fixed * advances)"		3674826	0					
ANR	3674828	CompoundStatement		225:2:8677:9969	3674826	0					
ANR	3674829	IdentifierDeclStatement	FT_UInt nn ;	226:4:8683:8694	3674826	0	True				
ANR	3674830	IdentifierDecl	nn		3674826	0					
ANR	3674831	IdentifierDeclType	FT_UInt		3674826	0					
ANR	3674832	Identifier	nn		3674826	1					
ANR	3674833	IdentifierDeclStatement	TT_Face face = ( TT_Face ) ttface ;	227:4:8700:8731	3674826	1	True				
ANR	3674834	IdentifierDecl	face = ( TT_Face ) ttface		3674826	0					
ANR	3674835	IdentifierDeclType	TT_Face		3674826	0					
ANR	3674836	Identifier	face		3674826	1					
ANR	3674837	AssignmentExpression	face = ( TT_Face ) ttface		3674826	2		=			
ANR	3674838	Identifier	face		3674826	0					
ANR	3674839	CastExpression	( TT_Face ) ttface		3674826	1					
ANR	3674840	CastTarget	TT_Face		3674826	0					
ANR	3674841	Identifier	ttface		3674826	1					
ANR	3674842	IfStatement	if ( flags & FT_LOAD_VERTICAL_LAYOUT )		3674826	2					
ANR	3674843	Condition	flags & FT_LOAD_VERTICAL_LAYOUT	232:9:8782:8812	3674826	0	True				
ANR	3674844	BitAndExpression	flags & FT_LOAD_VERTICAL_LAYOUT		3674826	0		&			
ANR	3674845	Identifier	flags		3674826	0					
ANR	3674846	Identifier	FT_LOAD_VERTICAL_LAYOUT		3674826	1					
ANR	3674847	CompoundStatement		9:4:142:142	3674826	1					
ANR	3674848	IfStatement	if ( ( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )		3674826	0					
ANR	3674849	Condition	( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )	236:11:8942:9075	3674826	0	True				
ANR	3674850	AndExpression	( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )		3674826	0		&&			
ANR	3674851	OrExpression	FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface )		3674826	0		||			
ANR	3674852	CallExpression	FT_IS_NAMED_INSTANCE ( ttface )		3674826	0					
ANR	3674853	Callee	FT_IS_NAMED_INSTANCE		3674826	0					
ANR	3674854	Identifier	FT_IS_NAMED_INSTANCE		3674826	0					
ANR	3674855	ArgumentList	ttface		3674826	1					
ANR	3674856	Argument	ttface		3674826	0					
ANR	3674857	Identifier	ttface		3674826	0					
ANR	3674858	CallExpression	FT_IS_VARIATION ( ttface )		3674826	1					
ANR	3674859	Callee	FT_IS_VARIATION		3674826	0					
ANR	3674860	Identifier	FT_IS_VARIATION		3674826	0					
ANR	3674861	ArgumentList	ttface		3674826	1					
ANR	3674862	Argument	ttface		3674826	0					
ANR	3674863	Identifier	ttface		3674826	0					
ANR	3674864	UnaryOperationExpression	! ( face -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )		3674826	1					
ANR	3674865	UnaryOperator	!		3674826	0					
ANR	3674866	BitAndExpression	face -> variation_support & TT_FACE_FLAG_VAR_VADVANCE		3674826	1		&			
ANR	3674867	PtrMemberAccess	face -> variation_support		3674826	0					
ANR	3674868	Identifier	face		3674826	0					
ANR	3674869	Identifier	variation_support		3674826	1					
ANR	3674870	Identifier	TT_FACE_FLAG_VAR_VADVANCE		3674826	1					
ANR	3674871	ReturnStatement	return FT_THROW ( Unimplemented_Feature ) ;	238:8:9094:9134	3674826	1	True				
ANR	3674872	CallExpression	FT_THROW ( Unimplemented_Feature )		3674826	0					
ANR	3674873	Callee	FT_THROW		3674826	0					
ANR	3674874	Identifier	FT_THROW		3674826	0					
ANR	3674875	ArgumentList	Unimplemented_Feature		3674826	1					
ANR	3674876	Argument	Unimplemented_Feature		3674826	0					
ANR	3674877	Identifier	Unimplemented_Feature		3674826	0					
ANR	3674878	ForStatement	for ( nn = 0 ; nn < count ; nn ++ )		3674826	1					
ANR	3674879	ForInit	nn = 0 ;	241:12:9156:9162	3674826	0	True				
ANR	3674880	AssignmentExpression	nn = 0		3674826	0		=			
ANR	3674881	Identifier	nn		3674826	0					
ANR	3674882	PrimaryExpression	0		3674826	1					
ANR	3674883	Condition	nn < count	241:20:9164:9173	3674826	1	True				
ANR	3674884	RelationalExpression	nn < count		3674826	0		<			
ANR	3674885	Identifier	nn		3674826	0					
ANR	3674886	Identifier	count		3674826	1					
ANR	3674887	PostIncDecOperationExpression	nn ++	241:32:9176:9179	3674826	2	True				
ANR	3674888	Identifier	nn		3674826	0					
ANR	3674889	IncDec	++		3674826	1					
ANR	3674890	CompoundStatement		20:8:545:558	3674826	3					
ANR	3674891	IdentifierDeclStatement	FT_Short tsb ;	243:8:9199:9213	3674826	0	True				
ANR	3674892	IdentifierDecl	tsb		3674826	0					
ANR	3674893	IdentifierDeclType	FT_Short		3674826	0					
ANR	3674894	Identifier	tsb		3674826	1					
ANR	3674895	IdentifierDeclStatement	FT_UShort ah ;	244:8:9223:9236	3674826	1	True				
ANR	3674896	IdentifierDecl	ah		3674826	0					
ANR	3674897	IdentifierDeclType	FT_UShort		3674826	0					
ANR	3674898	Identifier	ah		3674826	1					
ANR	3674899	ExpressionStatement	"TT_Get_VMetrics ( face , start + nn , 0 , & tsb , & ah )"	248:8:9322:9371	3674826	2	True				
ANR	3674900	CallExpression	"TT_Get_VMetrics ( face , start + nn , 0 , & tsb , & ah )"		3674826	0					
ANR	3674901	Callee	TT_Get_VMetrics		3674826	0					
ANR	3674902	Identifier	TT_Get_VMetrics		3674826	0					
ANR	3674903	ArgumentList	face		3674826	1					
ANR	3674904	Argument	face		3674826	0					
ANR	3674905	Identifier	face		3674826	0					
ANR	3674906	Argument	start + nn		3674826	1					
ANR	3674907	AdditiveExpression	start + nn		3674826	0		+			
ANR	3674908	Identifier	start		3674826	0					
ANR	3674909	Identifier	nn		3674826	1					
ANR	3674910	Argument	0		3674826	2					
ANR	3674911	PrimaryExpression	0		3674826	0					
ANR	3674912	Argument	& tsb		3674826	3					
ANR	3674913	UnaryOperationExpression	& tsb		3674826	0					
ANR	3674914	UnaryOperator	&		3674826	0					
ANR	3674915	Identifier	tsb		3674826	1					
ANR	3674916	Argument	& ah		3674826	4					
ANR	3674917	UnaryOperationExpression	& ah		3674826	0					
ANR	3674918	UnaryOperator	&		3674826	0					
ANR	3674919	Identifier	ah		3674826	1					
ANR	3674920	ExpressionStatement	advances [ nn ] = ah	249:8:9381:9398	3674826	3	True				
ANR	3674921	AssignmentExpression	advances [ nn ] = ah		3674826	0		=			
ANR	3674922	ArrayIndexing	advances [ nn ]		3674826	0					
ANR	3674923	Identifier	advances		3674826	0					
ANR	3674924	Identifier	nn		3674826	1					
ANR	3674925	Identifier	ah		3674826	1					
ANR	3674926	ElseStatement	else		3674826	0					
ANR	3674927	CompoundStatement		29:4:749:749	3674826	0					
ANR	3674928	IfStatement	if ( ( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )		3674826	0					
ANR	3674929	Condition	( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )	256:11:9549:9682	3674826	0	True				
ANR	3674930	AndExpression	( FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface ) ) && ! ( face -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )		3674826	0		&&			
ANR	3674931	OrExpression	FT_IS_NAMED_INSTANCE ( ttface ) || FT_IS_VARIATION ( ttface )		3674826	0		||			
ANR	3674932	CallExpression	FT_IS_NAMED_INSTANCE ( ttface )		3674826	0					
ANR	3674933	Callee	FT_IS_NAMED_INSTANCE		3674826	0					
ANR	3674934	Identifier	FT_IS_NAMED_INSTANCE		3674826	0					
ANR	3674935	ArgumentList	ttface		3674826	1					
ANR	3674936	Argument	ttface		3674826	0					
ANR	3674937	Identifier	ttface		3674826	0					
ANR	3674938	CallExpression	FT_IS_VARIATION ( ttface )		3674826	1					
ANR	3674939	Callee	FT_IS_VARIATION		3674826	0					
ANR	3674940	Identifier	FT_IS_VARIATION		3674826	0					
ANR	3674941	ArgumentList	ttface		3674826	1					
ANR	3674942	Argument	ttface		3674826	0					
ANR	3674943	Identifier	ttface		3674826	0					
ANR	3674944	UnaryOperationExpression	! ( face -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )		3674826	1					
ANR	3674945	UnaryOperator	!		3674826	0					
ANR	3674946	BitAndExpression	face -> variation_support & TT_FACE_FLAG_VAR_HADVANCE		3674826	1		&			
ANR	3674947	PtrMemberAccess	face -> variation_support		3674826	0					
ANR	3674948	Identifier	face		3674826	0					
ANR	3674949	Identifier	variation_support		3674826	1					
ANR	3674950	Identifier	TT_FACE_FLAG_VAR_HADVANCE		3674826	1					
ANR	3674951	ReturnStatement	return FT_THROW ( Unimplemented_Feature ) ;	258:8:9701:9741	3674826	1	True				
ANR	3674952	CallExpression	FT_THROW ( Unimplemented_Feature )		3674826	0					
ANR	3674953	Callee	FT_THROW		3674826	0					
ANR	3674954	Identifier	FT_THROW		3674826	0					
ANR	3674955	ArgumentList	Unimplemented_Feature		3674826	1					
ANR	3674956	Argument	Unimplemented_Feature		3674826	0					
ANR	3674957	Identifier	Unimplemented_Feature		3674826	0					
ANR	3674958	ForStatement	for ( nn = 0 ; nn < count ; nn ++ )		3674826	1					
ANR	3674959	ForInit	nn = 0 ;	261:12:9763:9769	3674826	0	True				
ANR	3674960	AssignmentExpression	nn = 0		3674826	0		=			
ANR	3674961	Identifier	nn		3674826	0					
ANR	3674962	PrimaryExpression	0		3674826	1					
ANR	3674963	Condition	nn < count	261:20:9771:9780	3674826	1	True				
ANR	3674964	RelationalExpression	nn < count		3674826	0		<			
ANR	3674965	Identifier	nn		3674826	0					
ANR	3674966	Identifier	count		3674826	1					
ANR	3674967	PostIncDecOperationExpression	nn ++	261:32:9783:9786	3674826	2	True				
ANR	3674968	Identifier	nn		3674826	0					
ANR	3674969	IncDec	++		3674826	1					
ANR	3674970	CompoundStatement		40:8:1152:1165	3674826	3					
ANR	3674971	IdentifierDeclStatement	FT_Short lsb ;	263:8:9806:9820	3674826	0	True				
ANR	3674972	IdentifierDecl	lsb		3674826	0					
ANR	3674973	IdentifierDeclType	FT_Short		3674826	0					
ANR	3674974	Identifier	lsb		3674826	1					
ANR	3674975	IdentifierDeclStatement	FT_UShort aw ;	264:8:9830:9843	3674826	1	True				
ANR	3674976	IdentifierDecl	aw		3674826	0					
ANR	3674977	IdentifierDeclType	FT_UShort		3674826	0					
ANR	3674978	Identifier	aw		3674826	1					
ANR	3674979	ExpressionStatement	"TT_Get_HMetrics ( face , start + nn , & lsb , & aw )"	267:8:9855:9901	3674826	2	True				
ANR	3674980	CallExpression	"TT_Get_HMetrics ( face , start + nn , & lsb , & aw )"		3674826	0					
ANR	3674981	Callee	TT_Get_HMetrics		3674826	0					
ANR	3674982	Identifier	TT_Get_HMetrics		3674826	0					
ANR	3674983	ArgumentList	face		3674826	1					
ANR	3674984	Argument	face		3674826	0					
ANR	3674985	Identifier	face		3674826	0					
ANR	3674986	Argument	start + nn		3674826	1					
ANR	3674987	AdditiveExpression	start + nn		3674826	0		+			
ANR	3674988	Identifier	start		3674826	0					
ANR	3674989	Identifier	nn		3674826	1					
ANR	3674990	Argument	& lsb		3674826	2					
ANR	3674991	UnaryOperationExpression	& lsb		3674826	0					
ANR	3674992	UnaryOperator	&		3674826	0					
ANR	3674993	Identifier	lsb		3674826	1					
ANR	3674994	Argument	& aw		3674826	3					
ANR	3674995	UnaryOperationExpression	& aw		3674826	0					
ANR	3674996	UnaryOperator	&		3674826	0					
ANR	3674997	Identifier	aw		3674826	1					
ANR	3674998	ExpressionStatement	advances [ nn ] = aw	268:8:9911:9928	3674826	3	True				
ANR	3674999	AssignmentExpression	advances [ nn ] = aw		3674826	0		=			
ANR	3675000	ArrayIndexing	advances [ nn ]		3674826	0					
ANR	3675001	Identifier	advances		3674826	0					
ANR	3675002	Identifier	nn		3674826	1					
ANR	3675003	Identifier	aw		3674826	1					
ANR	3675004	ReturnStatement	return FT_Err_Ok ;	272:4:9949:9965	3674826	3	True				
ANR	3675005	Identifier	FT_Err_Ok		3674826	0					
ANR	3675006	ReturnType	static FT_Error		3674826	1					
ANR	3675007	Identifier	tt_get_advances		3674826	2					
ANR	3675008	ParameterList	"FT_Face ttface , FT_UInt start , FT_UInt count , FT_Int32 flags , FT_Fixed * advances"		3674826	3					
ANR	3675009	Parameter	FT_Face ttface	220:19:8504:8520	3674826	0	True				
ANR	3675010	ParameterType	FT_Face		3674826	0					
ANR	3675011	Identifier	ttface		3674826	1					
ANR	3675012	Parameter	FT_UInt start	221:19:8542:8557	3674826	1	True				
ANR	3675013	ParameterType	FT_UInt		3674826	0					
ANR	3675014	Identifier	start		3674826	1					
ANR	3675015	Parameter	FT_UInt count	222:19:8579:8594	3674826	2	True				
ANR	3675016	ParameterType	FT_UInt		3674826	0					
ANR	3675017	Identifier	count		3674826	1					
ANR	3675018	Parameter	FT_Int32 flags	223:19:8616:8631	3674826	3	True				
ANR	3675019	ParameterType	FT_Int32		3674826	0					
ANR	3675020	Identifier	flags		3674826	1					
ANR	3675021	Parameter	FT_Fixed * advances	224:19:8653:8671	3674826	4	True				
ANR	3675022	ParameterType	FT_Fixed *		3674826	0					
ANR	3675023	Identifier	advances		3674826	1					
ANR	3675024	CFGEntryNode	ENTRY		3674826		True				
ANR	3675025	CFGExitNode	EXIT		3674826		True				
ANR	3675026	Symbol	nn		3674826						
ANR	3675027	Symbol	tsb		3674826						
ANR	3675028	Symbol	TT_FACE_FLAG_VAR_HADVANCE		3674826						
ANR	3675029	Symbol	FT_Err_Ok		3674826						
ANR	3675030	Symbol	FT_IS_VARIATION		3674826						
ANR	3675031	Symbol	flags		3674826						
ANR	3675032	Symbol	* face		3674826						
ANR	3675033	Symbol	advances		3674826						
ANR	3675034	Symbol	ttface		3674826						
ANR	3675035	Symbol	face -> variation_support		3674826						
ANR	3675036	Symbol	& aw		3674826						
ANR	3675037	Symbol	TT_FACE_FLAG_VAR_VADVANCE		3674826						
ANR	3675038	Symbol	* nn		3674826						
ANR	3675039	Symbol	* advances		3674826						
ANR	3675040	Symbol	& lsb		3674826						
ANR	3675041	Symbol	ah		3674826						
ANR	3675042	Symbol	start		3674826						
ANR	3675043	Symbol	count		3674826						
ANR	3675044	Symbol	FT_LOAD_VERTICAL_LAYOUT		3674826						
ANR	3675045	Symbol	FT_THROW		3674826						
ANR	3675046	Symbol	& tsb		3674826						
ANR	3675047	Symbol	& ah		3674826						
ANR	3675048	Symbol	face		3674826						
ANR	3675049	Symbol	Unimplemented_Feature		3674826						
ANR	3675050	Symbol	aw		3674826						
ANR	3675051	Symbol	lsb		3674826						
ANR	3675052	Symbol	FT_IS_NAMED_INSTANCE		3674826						
ANR	3675053	Function	tt_size_select	291:2:10877:11757							
ANR	3675054	FunctionDef	"tt_size_select (FT_Size size , FT_ULong strike_index)"		3675053	0					
ANR	3675055	CompoundStatement		294:2:10972:11757	3675053	0					
ANR	3675056	IdentifierDeclStatement	TT_Face ttface = ( TT_Face ) size -> face ;	295:4:10978:11016	3675053	0	True				
ANR	3675057	IdentifierDecl	ttface = ( TT_Face ) size -> face		3675053	0					
ANR	3675058	IdentifierDeclType	TT_Face		3675053	0					
ANR	3675059	Identifier	ttface		3675053	1					
ANR	3675060	AssignmentExpression	ttface = ( TT_Face ) size -> face		3675053	2		=			
ANR	3675061	Identifier	ttface		3675053	0					
ANR	3675062	CastExpression	( TT_Face ) size -> face		3675053	1					
ANR	3675063	CastTarget	TT_Face		3675053	0					
ANR	3675064	PtrMemberAccess	size -> face		3675053	1					
ANR	3675065	Identifier	size		3675053	0					
ANR	3675066	Identifier	face		3675053	1					
ANR	3675067	IdentifierDeclStatement	TT_Size ttsize = ( TT_Size ) size ;	296:4:11022:11054	3675053	1	True				
ANR	3675068	IdentifierDecl	ttsize = ( TT_Size ) size		3675053	0					
ANR	3675069	IdentifierDeclType	TT_Size		3675053	0					
ANR	3675070	Identifier	ttsize		3675053	1					
ANR	3675071	AssignmentExpression	ttsize = ( TT_Size ) size		3675053	2		=			
ANR	3675072	Identifier	ttsize		3675053	0					
ANR	3675073	CastExpression	( TT_Size ) size		3675053	1					
ANR	3675074	CastTarget	TT_Size		3675053	0					
ANR	3675075	Identifier	size		3675053	1					
ANR	3675076	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	297:4:11060:11088	3675053	2	True				
ANR	3675077	IdentifierDecl	error = FT_Err_Ok		3675053	0					
ANR	3675078	IdentifierDeclType	FT_Error		3675053	0					
ANR	3675079	Identifier	error		3675053	1					
ANR	3675080	AssignmentExpression	error = FT_Err_Ok		3675053	2		=			
ANR	3675081	Identifier	FT_Err_Ok		3675053	0					
ANR	3675082	Identifier	FT_Err_Ok		3675053	1					
ANR	3675083	ExpressionStatement	ttsize -> strike_index = strike_index	300:4:11096:11131	3675053	3	True				
ANR	3675084	AssignmentExpression	ttsize -> strike_index = strike_index		3675053	0		=			
ANR	3675085	PtrMemberAccess	ttsize -> strike_index		3675053	0					
ANR	3675086	Identifier	ttsize		3675053	0					
ANR	3675087	Identifier	strike_index		3675053	1					
ANR	3675088	Identifier	strike_index		3675053	1					
ANR	3675089	IfStatement	if ( FT_IS_SCALABLE ( size -> face ) )		3675053	4					
ANR	3675090	Condition	FT_IS_SCALABLE ( size -> face )	302:9:11143:11170	3675053	0	True				
ANR	3675091	CallExpression	FT_IS_SCALABLE ( size -> face )		3675053	0					
ANR	3675092	Callee	FT_IS_SCALABLE		3675053	0					
ANR	3675093	Identifier	FT_IS_SCALABLE		3675053	0					
ANR	3675094	ArgumentList	size -> face		3675053	1					
ANR	3675095	Argument	size -> face		3675053	0					
ANR	3675096	PtrMemberAccess	size -> face		3675053	0					
ANR	3675097	Identifier	size		3675053	0					
ANR	3675098	Identifier	face		3675053	1					
ANR	3675099	CompoundStatement		10:4:205:205	3675053	1					
ANR	3675100	ExpressionStatement	"FT_Select_Metrics ( size -> face , strike_index )"	305:6:11252:11297	3675053	0	True				
ANR	3675101	CallExpression	"FT_Select_Metrics ( size -> face , strike_index )"		3675053	0					
ANR	3675102	Callee	FT_Select_Metrics		3675053	0					
ANR	3675103	Identifier	FT_Select_Metrics		3675053	0					
ANR	3675104	ArgumentList	size -> face		3675053	1					
ANR	3675105	Argument	size -> face		3675053	0					
ANR	3675106	PtrMemberAccess	size -> face		3675053	0					
ANR	3675107	Identifier	size		3675053	0					
ANR	3675108	Identifier	face		3675053	1					
ANR	3675109	Argument	strike_index		3675053	1					
ANR	3675110	Identifier	strike_index		3675053	0					
ANR	3675111	ExpressionStatement	"tt_size_reset ( ttsize , 0 )"	307:6:11306:11332	3675053	1	True				
ANR	3675112	CallExpression	"tt_size_reset ( ttsize , 0 )"		3675053	0					
ANR	3675113	Callee	tt_size_reset		3675053	0					
ANR	3675114	Identifier	tt_size_reset		3675053	0					
ANR	3675115	ArgumentList	ttsize		3675053	1					
ANR	3675116	Argument	ttsize		3675053	0					
ANR	3675117	Identifier	ttsize		3675053	0					
ANR	3675118	Argument	0		3675053	1					
ANR	3675119	PrimaryExpression	0		3675053	0					
ANR	3675120	ElseStatement	else		3675053	0					
ANR	3675121	CompoundStatement		19:6:481:528	3675053	0					
ANR	3675122	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) ttface -> sfnt ;	311:6:11387:11446	3675053	0	True				
ANR	3675123	IdentifierDecl	sfnt = ( SFNT_Service ) ttface -> sfnt		3675053	0					
ANR	3675124	IdentifierDeclType	SFNT_Service		3675053	0					
ANR	3675125	Identifier	sfnt		3675053	1					
ANR	3675126	AssignmentExpression	sfnt = ( SFNT_Service ) ttface -> sfnt		3675053	2		=			
ANR	3675127	Identifier	sfnt		3675053	0					
ANR	3675128	CastExpression	( SFNT_Service ) ttface -> sfnt		3675053	1					
ANR	3675129	CastTarget	SFNT_Service		3675053	0					
ANR	3675130	PtrMemberAccess	ttface -> sfnt		3675053	1					
ANR	3675131	Identifier	ttface		3675053	0					
ANR	3675132	Identifier	sfnt		3675053	1					
ANR	3675133	IdentifierDeclStatement	FT_Size_Metrics * size_metrics = & size -> metrics ;	312:6:11454:11501	3675053	1	True				
ANR	3675134	IdentifierDecl	* size_metrics = & size -> metrics		3675053	0					
ANR	3675135	IdentifierDeclType	FT_Size_Metrics *		3675053	0					
ANR	3675136	Identifier	size_metrics		3675053	1					
ANR	3675137	AssignmentExpression	* size_metrics = & size -> metrics		3675053	2		=			
ANR	3675138	Identifier	size_metrics		3675053	0					
ANR	3675139	UnaryOperationExpression	& size -> metrics		3675053	1					
ANR	3675140	UnaryOperator	&		3675053	0					
ANR	3675141	PtrMemberAccess	size -> metrics		3675053	1					
ANR	3675142	Identifier	size		3675053	0					
ANR	3675143	Identifier	metrics		3675053	1					
ANR	3675144	ExpressionStatement	"error = sfnt -> load_strike_metrics ( ttface , strike_index , size_metrics )"	315:6:11511:11664	3675053	2	True				
ANR	3675145	AssignmentExpression	"error = sfnt -> load_strike_metrics ( ttface , strike_index , size_metrics )"		3675053	0		=			
ANR	3675146	Identifier	error		3675053	0					
ANR	3675147	CallExpression	"sfnt -> load_strike_metrics ( ttface , strike_index , size_metrics )"		3675053	1					
ANR	3675148	Callee	sfnt -> load_strike_metrics		3675053	0					
ANR	3675149	PtrMemberAccess	sfnt -> load_strike_metrics		3675053	0					
ANR	3675150	Identifier	sfnt		3675053	0					
ANR	3675151	Identifier	load_strike_metrics		3675053	1					
ANR	3675152	ArgumentList	ttface		3675053	1					
ANR	3675153	Argument	ttface		3675053	0					
ANR	3675154	Identifier	ttface		3675053	0					
ANR	3675155	Argument	strike_index		3675053	1					
ANR	3675156	Identifier	strike_index		3675053	0					
ANR	3675157	Argument	size_metrics		3675053	2					
ANR	3675158	Identifier	size_metrics		3675053	0					
ANR	3675159	IfStatement	if ( error )		3675053	3					
ANR	3675160	Condition	error	318:11:11677:11681	3675053	0	True				
ANR	3675161	Identifier	error		3675053	0					
ANR	3675162	ExpressionStatement	ttsize -> strike_index = 0xFFFFFFFFUL	319:8:11693:11728	3675053	1	True				
ANR	3675163	AssignmentExpression	ttsize -> strike_index = 0xFFFFFFFFUL		3675053	0		=			
ANR	3675164	PtrMemberAccess	ttsize -> strike_index		3675053	0					
ANR	3675165	Identifier	ttsize		3675053	0					
ANR	3675166	Identifier	strike_index		3675053	1					
ANR	3675167	PrimaryExpression	0xFFFFFFFFUL		3675053	1					
ANR	3675168	ReturnStatement	return error ;	322:4:11741:11753	3675053	5	True				
ANR	3675169	Identifier	error		3675053	0					
ANR	3675170	ReturnType	static FT_Error		3675053	1					
ANR	3675171	Identifier	tt_size_select		3675053	2					
ANR	3675172	ParameterList	"FT_Size size , FT_ULong strike_index"		3675053	3					
ANR	3675173	Parameter	FT_Size size	292:18:10911:10924	3675053	0	True				
ANR	3675174	ParameterType	FT_Size		3675053	0					
ANR	3675175	Identifier	size		3675053	1					
ANR	3675176	Parameter	FT_ULong strike_index	293:18:10945:10966	3675053	1	True				
ANR	3675177	ParameterType	FT_ULong		3675053	0					
ANR	3675178	Identifier	strike_index		3675053	1					
ANR	3675179	CFGEntryNode	ENTRY		3675053		True				
ANR	3675180	CFGExitNode	EXIT		3675053		True				
ANR	3675181	Symbol	FT_Err_Ok		3675053						
ANR	3675182	Symbol	size_metrics		3675053						
ANR	3675183	Symbol	ttsize		3675053						
ANR	3675184	Symbol	& size -> metrics		3675053						
ANR	3675185	Symbol	* sfnt		3675053						
ANR	3675186	Symbol	error		3675053						
ANR	3675187	Symbol	sfnt		3675053						
ANR	3675188	Symbol	FT_IS_SCALABLE		3675053						
ANR	3675189	Symbol	* ttface		3675053						
ANR	3675190	Symbol	ttface -> sfnt		3675053						
ANR	3675191	Symbol	* size		3675053						
ANR	3675192	Symbol	size		3675053						
ANR	3675193	Symbol	* ttsize		3675053						
ANR	3675194	Symbol	ttface		3675053						
ANR	3675195	Symbol	size -> face		3675053						
ANR	3675196	Symbol	sfnt -> load_strike_metrics		3675053						
ANR	3675197	Symbol	strike_index		3675053						
ANR	3675198	Symbol	ttsize -> strike_index		3675053						
ANR	3675199	Function	tt_size_request	328:2:11811:13343							
ANR	3675200	FunctionDef	"tt_size_request (FT_Size size , FT_Size_Request req)"		3675199	0					
ANR	3675201	CompoundStatement		331:2:11913:13343	3675199	0					
ANR	3675202	IdentifierDeclStatement	TT_Size ttsize = ( TT_Size ) size ;	332:4:11919:11951	3675199	0	True				
ANR	3675203	IdentifierDecl	ttsize = ( TT_Size ) size		3675199	0					
ANR	3675204	IdentifierDeclType	TT_Size		3675199	0					
ANR	3675205	Identifier	ttsize		3675199	1					
ANR	3675206	AssignmentExpression	ttsize = ( TT_Size ) size		3675199	2		=			
ANR	3675207	Identifier	ttsize		3675199	0					
ANR	3675208	CastExpression	( TT_Size ) size		3675199	1					
ANR	3675209	CastTarget	TT_Size		3675199	0					
ANR	3675210	Identifier	size		3675199	1					
ANR	3675211	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	333:4:11957:11985	3675199	1	True				
ANR	3675212	IdentifierDecl	error = FT_Err_Ok		3675199	0					
ANR	3675213	IdentifierDeclType	FT_Error		3675199	0					
ANR	3675214	Identifier	error		3675199	1					
ANR	3675215	AssignmentExpression	error = FT_Err_Ok		3675199	2		=			
ANR	3675216	Identifier	FT_Err_Ok		3675199	0					
ANR	3675217	Identifier	FT_Err_Ok		3675199	1					
ANR	3675218	IfStatement	if ( FT_HAS_FIXED_SIZES ( size -> face ) )		3675199	2					
ANR	3675219	Condition	FT_HAS_FIXED_SIZES ( size -> face )	338:9:12040:12071	3675199	0	True				
ANR	3675220	CallExpression	FT_HAS_FIXED_SIZES ( size -> face )		3675199	0					
ANR	3675221	Callee	FT_HAS_FIXED_SIZES		3675199	0					
ANR	3675222	Identifier	FT_HAS_FIXED_SIZES		3675199	0					
ANR	3675223	ArgumentList	size -> face		3675199	1					
ANR	3675224	Argument	size -> face		3675199	0					
ANR	3675225	PtrMemberAccess	size -> face		3675199	0					
ANR	3675226	Identifier	size		3675199	0					
ANR	3675227	Identifier	face		3675199	1					
ANR	3675228	CompoundStatement		12:6:280:306	3675199	1					
ANR	3675229	IdentifierDeclStatement	TT_Face ttface = ( TT_Face ) size -> face ;	340:6:12087:12129	3675199	0	True				
ANR	3675230	IdentifierDecl	ttface = ( TT_Face ) size -> face		3675199	0					
ANR	3675231	IdentifierDeclType	TT_Face		3675199	0					
ANR	3675232	Identifier	ttface		3675199	1					
ANR	3675233	AssignmentExpression	ttface = ( TT_Face ) size -> face		3675199	2		=			
ANR	3675234	Identifier	ttface		3675199	0					
ANR	3675235	CastExpression	( TT_Face ) size -> face		3675199	1					
ANR	3675236	CastTarget	TT_Face		3675199	0					
ANR	3675237	PtrMemberAccess	size -> face		3675199	1					
ANR	3675238	Identifier	size		3675199	0					
ANR	3675239	Identifier	face		3675199	1					
ANR	3675240	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) ttface -> sfnt ;	341:6:12137:12186	3675199	1	True				
ANR	3675241	IdentifierDecl	sfnt = ( SFNT_Service ) ttface -> sfnt		3675199	0					
ANR	3675242	IdentifierDeclType	SFNT_Service		3675199	0					
ANR	3675243	Identifier	sfnt		3675199	1					
ANR	3675244	AssignmentExpression	sfnt = ( SFNT_Service ) ttface -> sfnt		3675199	2		=			
ANR	3675245	Identifier	sfnt		3675199	0					
ANR	3675246	CastExpression	( SFNT_Service ) ttface -> sfnt		3675199	1					
ANR	3675247	CastTarget	SFNT_Service		3675199	0					
ANR	3675248	PtrMemberAccess	ttface -> sfnt		3675199	1					
ANR	3675249	Identifier	ttface		3675199	0					
ANR	3675250	Identifier	sfnt		3675199	1					
ANR	3675251	IdentifierDeclStatement	FT_ULong strike_index ;	342:6:12194:12220	3675199	2	True				
ANR	3675252	IdentifierDecl	strike_index		3675199	0					
ANR	3675253	IdentifierDeclType	FT_ULong		3675199	0					
ANR	3675254	Identifier	strike_index		3675199	1					
ANR	3675255	ExpressionStatement	"error = sfnt -> set_sbit_strike ( ttface , req , & strike_index )"	345:6:12230:12289	3675199	3	True				
ANR	3675256	AssignmentExpression	"error = sfnt -> set_sbit_strike ( ttface , req , & strike_index )"		3675199	0		=			
ANR	3675257	Identifier	error		3675199	0					
ANR	3675258	CallExpression	"sfnt -> set_sbit_strike ( ttface , req , & strike_index )"		3675199	1					
ANR	3675259	Callee	sfnt -> set_sbit_strike		3675199	0					
ANR	3675260	PtrMemberAccess	sfnt -> set_sbit_strike		3675199	0					
ANR	3675261	Identifier	sfnt		3675199	0					
ANR	3675262	Identifier	set_sbit_strike		3675199	1					
ANR	3675263	ArgumentList	ttface		3675199	1					
ANR	3675264	Argument	ttface		3675199	0					
ANR	3675265	Identifier	ttface		3675199	0					
ANR	3675266	Argument	req		3675199	1					
ANR	3675267	Identifier	req		3675199	0					
ANR	3675268	Argument	& strike_index		3675199	2					
ANR	3675269	UnaryOperationExpression	& strike_index		3675199	0					
ANR	3675270	UnaryOperator	&		3675199	0					
ANR	3675271	Identifier	strike_index		3675199	1					
ANR	3675272	IfStatement	if ( error )		3675199	4					
ANR	3675273	Condition	error	347:11:12303:12307	3675199	0	True				
ANR	3675274	Identifier	error		3675199	0					
ANR	3675275	ExpressionStatement	ttsize -> strike_index = 0xFFFFFFFFUL	348:8:12319:12354	3675199	1	True				
ANR	3675276	AssignmentExpression	ttsize -> strike_index = 0xFFFFFFFFUL		3675199	0		=			
ANR	3675277	PtrMemberAccess	ttsize -> strike_index		3675199	0					
ANR	3675278	Identifier	ttsize		3675199	0					
ANR	3675279	Identifier	strike_index		3675199	1					
ANR	3675280	PrimaryExpression	0xFFFFFFFFUL		3675199	1					
ANR	3675281	ElseStatement	else		3675199	0					
ANR	3675282	ReturnStatement	"return tt_size_select ( size , strike_index ) ;"	350:8:12375:12418	3675199	0	True				
ANR	3675283	CallExpression	"tt_size_select ( size , strike_index )"		3675199	0					
ANR	3675284	Callee	tt_size_select		3675199	0					
ANR	3675285	Identifier	tt_size_select		3675199	0					
ANR	3675286	ArgumentList	size		3675199	1					
ANR	3675287	Argument	size		3675199	0					
ANR	3675288	Identifier	size		3675199	0					
ANR	3675289	Argument	strike_index		3675199	1					
ANR	3675290	Identifier	strike_index		3675199	0					
ANR	3675291	ExpressionStatement	"FT_Request_Metrics ( size -> face , req )"	355:4:12479:12516	3675199	3	True				
ANR	3675292	CallExpression	"FT_Request_Metrics ( size -> face , req )"		3675199	0					
ANR	3675293	Callee	FT_Request_Metrics		3675199	0					
ANR	3675294	Identifier	FT_Request_Metrics		3675199	0					
ANR	3675295	ArgumentList	size -> face		3675199	1					
ANR	3675296	Argument	size -> face		3675199	0					
ANR	3675297	PtrMemberAccess	size -> face		3675199	0					
ANR	3675298	Identifier	size		3675199	0					
ANR	3675299	Identifier	face		3675199	1					
ANR	3675300	Argument	req		3675199	1					
ANR	3675301	Identifier	req		3675199	0					
ANR	3675302	IfStatement	if ( FT_IS_SCALABLE ( size -> face ) )		3675199	4					
ANR	3675303	Condition	FT_IS_SCALABLE ( size -> face )	357:9:12528:12555	3675199	0	True				
ANR	3675304	CallExpression	FT_IS_SCALABLE ( size -> face )		3675199	0					
ANR	3675305	Callee	FT_IS_SCALABLE		3675199	0					
ANR	3675306	Identifier	FT_IS_SCALABLE		3675199	0					
ANR	3675307	ArgumentList	size -> face		3675199	1					
ANR	3675308	Argument	size -> face		3675199	0					
ANR	3675309	PtrMemberAccess	size -> face		3675199	0					
ANR	3675310	Identifier	size		3675199	0					
ANR	3675311	Identifier	face		3675199	1					
ANR	3675312	CompoundStatement		28:4:649:649	3675199	1					
ANR	3675313	ExpressionStatement	"error = tt_size_reset ( ttsize , 0 )"	359:6:12571:12605	3675199	0	True				
ANR	3675314	AssignmentExpression	"error = tt_size_reset ( ttsize , 0 )"		3675199	0		=			
ANR	3675315	Identifier	error		3675199	0					
ANR	3675316	CallExpression	"tt_size_reset ( ttsize , 0 )"		3675199	1					
ANR	3675317	Callee	tt_size_reset		3675199	0					
ANR	3675318	Identifier	tt_size_reset		3675199	0					
ANR	3675319	ArgumentList	ttsize		3675199	1					
ANR	3675320	Argument	ttsize		3675199	0					
ANR	3675321	Identifier	ttsize		3675199	0					
ANR	3675322	Argument	0		3675199	1					
ANR	3675323	PrimaryExpression	0		3675199	0					
ANR	3675324	IfStatement	if ( ! error )		3675199	1					
ANR	3675325	Condition	! error	363:11:12724:12729	3675199	0	True				
ANR	3675326	UnaryOperationExpression	! error		3675199	0					
ANR	3675327	UnaryOperator	!		3675199	0					
ANR	3675328	Identifier	error		3675199	1					
ANR	3675329	CompoundStatement		35:8:835:1011	3675199	1					
ANR	3675330	IdentifierDeclStatement	FT_UInt resolution = ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem ? req -> horiResolution : req -> vertResolution ;	365:8:12749:12925	3675199	0	True				
ANR	3675331	IdentifierDecl	resolution = ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem ? req -> horiResolution : req -> vertResolution		3675199	0					
ANR	3675332	IdentifierDeclType	FT_UInt		3675199	0					
ANR	3675333	Identifier	resolution		3675199	1					
ANR	3675334	AssignmentExpression	resolution = ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem ? req -> horiResolution : req -> vertResolution		3675199	2		=			
ANR	3675335	Identifier	resolution		3675199	0					
ANR	3675336	ConditionalExpression	ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem ? req -> horiResolution : req -> vertResolution		3675199	1					
ANR	3675337	Condition	ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem		3675199	0					
ANR	3675338	RelationalExpression	ttsize -> metrics -> x_ppem > ttsize -> metrics -> y_ppem		3675199	0		>			
ANR	3675339	PtrMemberAccess	ttsize -> metrics -> x_ppem		3675199	0					
ANR	3675340	PtrMemberAccess	ttsize -> metrics		3675199	0					
ANR	3675341	Identifier	ttsize		3675199	0					
ANR	3675342	Identifier	metrics		3675199	1					
ANR	3675343	Identifier	x_ppem		3675199	1					
ANR	3675344	PtrMemberAccess	ttsize -> metrics -> y_ppem		3675199	1					
ANR	3675345	PtrMemberAccess	ttsize -> metrics		3675199	0					
ANR	3675346	Identifier	ttsize		3675199	0					
ANR	3675347	Identifier	metrics		3675199	1					
ANR	3675348	Identifier	y_ppem		3675199	1					
ANR	3675349	PtrMemberAccess	req -> horiResolution		3675199	1					
ANR	3675350	Identifier	req		3675199	0					
ANR	3675351	Identifier	horiResolution		3675199	1					
ANR	3675352	PtrMemberAccess	req -> vertResolution		3675199	2					
ANR	3675353	Identifier	req		3675199	0					
ANR	3675354	Identifier	vertResolution		3675199	1					
ANR	3675355	IfStatement	if ( req -> type == FT_SIZE_REQUEST_TYPE_SCALES || ! resolution )		3675199	1					
ANR	3675356	Condition	req -> type == FT_SIZE_REQUEST_TYPE_SCALES || ! resolution	372:13:13006:13073	3675199	0	True				
ANR	3675357	OrExpression	req -> type == FT_SIZE_REQUEST_TYPE_SCALES || ! resolution		3675199	0		||			
ANR	3675358	EqualityExpression	req -> type == FT_SIZE_REQUEST_TYPE_SCALES		3675199	0		==			
ANR	3675359	PtrMemberAccess	req -> type		3675199	0					
ANR	3675360	Identifier	req		3675199	0					
ANR	3675361	Identifier	type		3675199	1					
ANR	3675362	Identifier	FT_SIZE_REQUEST_TYPE_SCALES		3675199	1					
ANR	3675363	UnaryOperationExpression	! resolution		3675199	1					
ANR	3675364	UnaryOperator	!		3675199	0					
ANR	3675365	Identifier	resolution		3675199	1					
ANR	3675366	ExpressionStatement	resolution = 72	374:10:13116:13131	3675199	1	True				
ANR	3675367	AssignmentExpression	resolution = 72		3675199	0		=			
ANR	3675368	Identifier	resolution		3675199	0					
ANR	3675369	PrimaryExpression	72		3675199	1					
ANR	3675370	ExpressionStatement	"ttsize -> point_size = FT_MulDiv ( ttsize -> ttmetrics . ppem , 64 * 72 , resolution )"	376:8:13142:13299	3675199	2	True				
ANR	3675371	AssignmentExpression	"ttsize -> point_size = FT_MulDiv ( ttsize -> ttmetrics . ppem , 64 * 72 , resolution )"		3675199	0		=			
ANR	3675372	PtrMemberAccess	ttsize -> point_size		3675199	0					
ANR	3675373	Identifier	ttsize		3675199	0					
ANR	3675374	Identifier	point_size		3675199	1					
ANR	3675375	CallExpression	"FT_MulDiv ( ttsize -> ttmetrics . ppem , 64 * 72 , resolution )"		3675199	1					
ANR	3675376	Callee	FT_MulDiv		3675199	0					
ANR	3675377	Identifier	FT_MulDiv		3675199	0					
ANR	3675378	ArgumentList	ttsize -> ttmetrics . ppem		3675199	1					
ANR	3675379	Argument	ttsize -> ttmetrics . ppem		3675199	0					
ANR	3675380	MemberAccess	ttsize -> ttmetrics . ppem		3675199	0					
ANR	3675381	PtrMemberAccess	ttsize -> ttmetrics		3675199	0					
ANR	3675382	Identifier	ttsize		3675199	0					
ANR	3675383	Identifier	ttmetrics		3675199	1					
ANR	3675384	Identifier	ppem		3675199	1					
ANR	3675385	Argument	64 * 72		3675199	1					
ANR	3675386	MultiplicativeExpression	64 * 72		3675199	0		*			
ANR	3675387	PrimaryExpression	64		3675199	0					
ANR	3675388	PrimaryExpression	72		3675199	1					
ANR	3675389	Argument	resolution		3675199	2					
ANR	3675390	Identifier	resolution		3675199	0					
ANR	3675391	ReturnStatement	return error ;	383:4:13327:13339	3675199	5	True				
ANR	3675392	Identifier	error		3675199	0					
ANR	3675393	ReturnType	static FT_Error		3675199	1					
ANR	3675394	Identifier	tt_size_request		3675199	2					
ANR	3675395	ParameterList	"FT_Size size , FT_Size_Request req"		3675199	3					
ANR	3675396	Parameter	FT_Size size	329:19:11846:11866	3675199	0	True				
ANR	3675397	ParameterType	FT_Size		3675199	0					
ANR	3675398	Identifier	size		3675199	1					
ANR	3675399	Parameter	FT_Size_Request req	330:19:11888:11907	3675199	1	True				
ANR	3675400	ParameterType	FT_Size_Request		3675199	0					
ANR	3675401	Identifier	req		3675199	1					
ANR	3675402	CFGEntryNode	ENTRY		3675199		True				
ANR	3675403	CFGExitNode	EXIT		3675199		True				
ANR	3675404	Symbol	ttsize -> metrics		3675199						
ANR	3675405	Symbol	FT_Err_Ok		3675199						
ANR	3675406	Symbol	FT_HAS_FIXED_SIZES		3675199						
ANR	3675407	Symbol	* req		3675199						
ANR	3675408	Symbol	ttsize		3675199						
ANR	3675409	Symbol	error		3675199						
ANR	3675410	Symbol	resolution		3675199						
ANR	3675411	Symbol	FT_MulDiv		3675199						
ANR	3675412	Symbol	* size		3675199						
ANR	3675413	Symbol	ttface		3675199						
ANR	3675414	Symbol	* ttsize -> metrics		3675199						
ANR	3675415	Symbol	req -> horiResolution		3675199						
ANR	3675416	Symbol	ttsize -> strike_index		3675199						
ANR	3675417	Symbol	ttsize -> metrics -> y_ppem		3675199						
ANR	3675418	Symbol	req		3675199						
ANR	3675419	Symbol	ttsize -> ttmetrics		3675199						
ANR	3675420	Symbol	ttsize -> point_size		3675199						
ANR	3675421	Symbol	* sfnt		3675199						
ANR	3675422	Symbol	ttsize -> metrics -> x_ppem		3675199						
ANR	3675423	Symbol	req -> vertResolution		3675199						
ANR	3675424	Symbol	sfnt		3675199						
ANR	3675425	Symbol	req -> type		3675199						
ANR	3675426	Symbol	* ttface		3675199						
ANR	3675427	Symbol	FT_IS_SCALABLE		3675199						
ANR	3675428	Symbol	* * ttsize		3675199						
ANR	3675429	Symbol	ttface -> sfnt		3675199						
ANR	3675430	Symbol	tt_size_select		3675199						
ANR	3675431	Symbol	tt_size_reset		3675199						
ANR	3675432	Symbol	size		3675199						
ANR	3675433	Symbol	& strike_index		3675199						
ANR	3675434	Symbol	* ttsize		3675199						
ANR	3675435	Symbol	sfnt -> set_sbit_strike		3675199						
ANR	3675436	Symbol	ttsize -> ttmetrics . ppem		3675199						
ANR	3675437	Symbol	size -> face		3675199						
ANR	3675438	Symbol	strike_index		3675199						
ANR	3675439	Symbol	FT_SIZE_REQUEST_TYPE_SCALES		3675199						
ANR	3675440	Function	tt_glyph_load	413:2:15377:17213							
ANR	3675441	FunctionDef	"tt_glyph_load (FT_GlyphSlot ttslot , FT_Size ttsize , FT_UInt glyph_index , FT_Int32 load_flags)"		3675440	0					
ANR	3675442	CompoundStatement		418:2:15609:17213	3675440	0					
ANR	3675443	IdentifierDeclStatement	TT_GlyphSlot slot = ( TT_GlyphSlot ) ttslot ;	419:4:15615:15656	3675440	0	True				
ANR	3675444	IdentifierDecl	slot = ( TT_GlyphSlot ) ttslot		3675440	0					
ANR	3675445	IdentifierDeclType	TT_GlyphSlot		3675440	0					
ANR	3675446	Identifier	slot		3675440	1					
ANR	3675447	AssignmentExpression	slot = ( TT_GlyphSlot ) ttslot		3675440	2		=			
ANR	3675448	Identifier	slot		3675440	0					
ANR	3675449	CastExpression	( TT_GlyphSlot ) ttslot		3675440	1					
ANR	3675450	CastTarget	TT_GlyphSlot		3675440	0					
ANR	3675451	Identifier	ttslot		3675440	1					
ANR	3675452	IdentifierDeclStatement	TT_Size size = ( TT_Size ) ttsize ;	420:4:15662:15698	3675440	1	True				
ANR	3675453	IdentifierDecl	size = ( TT_Size ) ttsize		3675440	0					
ANR	3675454	IdentifierDeclType	TT_Size		3675440	0					
ANR	3675455	Identifier	size		3675440	1					
ANR	3675456	AssignmentExpression	size = ( TT_Size ) ttsize		3675440	2		=			
ANR	3675457	Identifier	size		3675440	0					
ANR	3675458	CastExpression	( TT_Size ) ttsize		3675440	1					
ANR	3675459	CastTarget	TT_Size		3675440	0					
ANR	3675460	Identifier	ttsize		3675440	1					
ANR	3675461	IdentifierDeclStatement	FT_Face face = ttslot -> face ;	421:4:15704:15737	3675440	2	True				
ANR	3675462	IdentifierDecl	face = ttslot -> face		3675440	0					
ANR	3675463	IdentifierDeclType	FT_Face		3675440	0					
ANR	3675464	Identifier	face		3675440	1					
ANR	3675465	AssignmentExpression	face = ttslot -> face		3675440	2		=			
ANR	3675466	Identifier	face		3675440	0					
ANR	3675467	PtrMemberAccess	ttslot -> face		3675440	1					
ANR	3675468	Identifier	ttslot		3675440	0					
ANR	3675469	Identifier	face		3675440	1					
ANR	3675470	IdentifierDeclStatement	FT_Error error ;	422:4:15743:15762	3675440	3	True				
ANR	3675471	IdentifierDecl	error		3675440	0					
ANR	3675472	IdentifierDeclType	FT_Error		3675440	0					
ANR	3675473	Identifier	error		3675440	1					
ANR	3675474	IfStatement	if ( ! slot )		3675440	4					
ANR	3675475	Condition	! slot	425:9:15775:15779	3675440	0	True				
ANR	3675476	UnaryOperationExpression	! slot		3675440	0					
ANR	3675477	UnaryOperator	!		3675440	0					
ANR	3675478	Identifier	slot		3675440	1					
ANR	3675479	ReturnStatement	return FT_THROW ( Invalid_Slot_Handle ) ;	426:6:15789:15827	3675440	1	True				
ANR	3675480	CallExpression	FT_THROW ( Invalid_Slot_Handle )		3675440	0					
ANR	3675481	Callee	FT_THROW		3675440	0					
ANR	3675482	Identifier	FT_THROW		3675440	0					
ANR	3675483	ArgumentList	Invalid_Slot_Handle		3675440	1					
ANR	3675484	Argument	Invalid_Slot_Handle		3675440	0					
ANR	3675485	Identifier	Invalid_Slot_Handle		3675440	0					
ANR	3675486	IfStatement	if ( ! size )		3675440	5					
ANR	3675487	Condition	! size	428:9:15839:15843	3675440	0	True				
ANR	3675488	UnaryOperationExpression	! size		3675440	0					
ANR	3675489	UnaryOperator	!		3675440	0					
ANR	3675490	Identifier	size		3675440	1					
ANR	3675491	ReturnStatement	return FT_THROW ( Invalid_Size_Handle ) ;	429:6:15853:15891	3675440	1	True				
ANR	3675492	CallExpression	FT_THROW ( Invalid_Size_Handle )		3675440	0					
ANR	3675493	Callee	FT_THROW		3675440	0					
ANR	3675494	Identifier	FT_THROW		3675440	0					
ANR	3675495	ArgumentList	Invalid_Size_Handle		3675440	1					
ANR	3675496	Argument	Invalid_Size_Handle		3675440	0					
ANR	3675497	Identifier	Invalid_Size_Handle		3675440	0					
ANR	3675498	IfStatement	if ( ! face )		3675440	6					
ANR	3675499	Condition	! face	431:9:15903:15907	3675440	0	True				
ANR	3675500	UnaryOperationExpression	! face		3675440	0					
ANR	3675501	UnaryOperator	!		3675440	0					
ANR	3675502	Identifier	face		3675440	1					
ANR	3675503	ReturnStatement	return FT_THROW ( Invalid_Face_Handle ) ;	432:6:15917:15955	3675440	1	True				
ANR	3675504	CallExpression	FT_THROW ( Invalid_Face_Handle )		3675440	0					
ANR	3675505	Callee	FT_THROW		3675440	0					
ANR	3675506	Identifier	FT_THROW		3675440	0					
ANR	3675507	ArgumentList	Invalid_Face_Handle		3675440	1					
ANR	3675508	Argument	Invalid_Face_Handle		3675440	0					
ANR	3675509	Identifier	Invalid_Face_Handle		3675440	0					
ANR	3675510	IfStatement	if ( glyph_index >= ( FT_UInt ) face -> num_glyphs && ! face -> internal -> incremental_interface )		3675440	7					
ANR	3675511	Condition	glyph_index >= ( FT_UInt ) face -> num_glyphs && ! face -> internal -> incremental_interface	435:9:16003:16093	3675440	0	True				
ANR	3675512	AndExpression	glyph_index >= ( FT_UInt ) face -> num_glyphs && ! face -> internal -> incremental_interface		3675440	0		&&			
ANR	3675513	RelationalExpression	glyph_index >= ( FT_UInt ) face -> num_glyphs		3675440	0		>=			
ANR	3675514	Identifier	glyph_index		3675440	0					
ANR	3675515	CastExpression	( FT_UInt ) face -> num_glyphs		3675440	1					
ANR	3675516	CastTarget	FT_UInt		3675440	0					
ANR	3675517	PtrMemberAccess	face -> num_glyphs		3675440	1					
ANR	3675518	Identifier	face		3675440	0					
ANR	3675519	Identifier	num_glyphs		3675440	1					
ANR	3675520	UnaryOperationExpression	! face -> internal -> incremental_interface		3675440	1					
ANR	3675521	UnaryOperator	!		3675440	0					
ANR	3675522	PtrMemberAccess	face -> internal -> incremental_interface		3675440	1					
ANR	3675523	PtrMemberAccess	face -> internal		3675440	0					
ANR	3675524	Identifier	face		3675440	0					
ANR	3675525	Identifier	internal		3675440	1					
ANR	3675526	Identifier	incremental_interface		3675440	1					
ANR	3675527	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	440:6:16170:16205	3675440	1	True				
ANR	3675528	CallExpression	FT_THROW ( Invalid_Argument )		3675440	0					
ANR	3675529	Callee	FT_THROW		3675440	0					
ANR	3675530	Identifier	FT_THROW		3675440	0					
ANR	3675531	ArgumentList	Invalid_Argument		3675440	1					
ANR	3675532	Argument	Invalid_Argument		3675440	0					
ANR	3675533	Identifier	Invalid_Argument		3675440	0					
ANR	3675534	IfStatement	if ( load_flags & FT_LOAD_NO_HINTING )		3675440	8					
ANR	3675535	Condition	load_flags & FT_LOAD_NO_HINTING	442:9:16217:16247	3675440	0	True				
ANR	3675536	BitAndExpression	load_flags & FT_LOAD_NO_HINTING		3675440	0		&			
ANR	3675537	Identifier	load_flags		3675440	0					
ANR	3675538	Identifier	FT_LOAD_NO_HINTING		3675440	1					
ANR	3675539	CompoundStatement		26:4:645:645	3675440	1					
ANR	3675540	IfStatement	if ( FT_IS_TRICKY ( face ) )		3675440	0					
ANR	3675541	Condition	FT_IS_TRICKY ( face )	447:11:16393:16412	3675440	0	True				
ANR	3675542	CallExpression	FT_IS_TRICKY ( face )		3675440	0					
ANR	3675543	Callee	FT_IS_TRICKY		3675440	0					
ANR	3675544	Identifier	FT_IS_TRICKY		3675440	0					
ANR	3675545	ArgumentList	face		3675440	1					
ANR	3675546	Argument	face		3675440	0					
ANR	3675547	Identifier	face		3675440	0					
ANR	3675548	ExpressionStatement	load_flags &= ~FT_LOAD_NO_HINTING	448:8:16424:16457	3675440	1	True				
ANR	3675549	AssignmentExpression	load_flags &= ~FT_LOAD_NO_HINTING		3675440	0		&=			
ANR	3675550	Identifier	load_flags		3675440	0					
ANR	3675551	Identifier	~FT_LOAD_NO_HINTING		3675440	1					
ANR	3675552	IfStatement	if ( load_flags & FT_LOAD_NO_AUTOHINT )		3675440	1					
ANR	3675553	Condition	load_flags & FT_LOAD_NO_AUTOHINT	450:11:16471:16502	3675440	0	True				
ANR	3675554	BitAndExpression	load_flags & FT_LOAD_NO_AUTOHINT		3675440	0		&			
ANR	3675555	Identifier	load_flags		3675440	0					
ANR	3675556	Identifier	FT_LOAD_NO_AUTOHINT		3675440	1					
ANR	3675557	ExpressionStatement	load_flags |= FT_LOAD_NO_HINTING	451:8:16514:16546	3675440	1	True				
ANR	3675558	AssignmentExpression	load_flags |= FT_LOAD_NO_HINTING		3675440	0		|=			
ANR	3675559	Identifier	load_flags		3675440	0					
ANR	3675560	Identifier	FT_LOAD_NO_HINTING		3675440	1					
ANR	3675561	IfStatement	if ( load_flags & ( FT_LOAD_NO_RECURSE | FT_LOAD_NO_SCALE ) )		3675440	9					
ANR	3675562	Condition	load_flags & ( FT_LOAD_NO_RECURSE | FT_LOAD_NO_SCALE )	454:9:16564:16617	3675440	0	True				
ANR	3675563	BitAndExpression	load_flags & ( FT_LOAD_NO_RECURSE | FT_LOAD_NO_SCALE )		3675440	0		&			
ANR	3675564	Identifier	load_flags		3675440	0					
ANR	3675565	InclusiveOrExpression	FT_LOAD_NO_RECURSE | FT_LOAD_NO_SCALE		3675440	1		|			
ANR	3675566	Identifier	FT_LOAD_NO_RECURSE		3675440	0					
ANR	3675567	Identifier	FT_LOAD_NO_SCALE		3675440	1					
ANR	3675568	CompoundStatement		38:4:1015:1015	3675440	1					
ANR	3675569	ExpressionStatement	load_flags |= FT_LOAD_NO_BITMAP | FT_LOAD_NO_SCALE	456:6:16633:16683	3675440	0	True				
ANR	3675570	AssignmentExpression	load_flags |= FT_LOAD_NO_BITMAP | FT_LOAD_NO_SCALE		3675440	0		|=			
ANR	3675571	Identifier	load_flags		3675440	0					
ANR	3675572	InclusiveOrExpression	FT_LOAD_NO_BITMAP | FT_LOAD_NO_SCALE		3675440	1		|			
ANR	3675573	Identifier	FT_LOAD_NO_BITMAP		3675440	0					
ANR	3675574	Identifier	FT_LOAD_NO_SCALE		3675440	1					
ANR	3675575	IfStatement	if ( ! FT_IS_TRICKY ( face ) )		3675440	1					
ANR	3675576	Condition	! FT_IS_TRICKY ( face )	458:11:16697:16717	3675440	0	True				
ANR	3675577	UnaryOperationExpression	! FT_IS_TRICKY ( face )		3675440	0					
ANR	3675578	UnaryOperator	!		3675440	0					
ANR	3675579	CallExpression	FT_IS_TRICKY ( face )		3675440	1					
ANR	3675580	Callee	FT_IS_TRICKY		3675440	0					
ANR	3675581	Identifier	FT_IS_TRICKY		3675440	0					
ANR	3675582	ArgumentList	face		3675440	1					
ANR	3675583	Argument	face		3675440	0					
ANR	3675584	Identifier	face		3675440	0					
ANR	3675585	ExpressionStatement	load_flags |= FT_LOAD_NO_HINTING	459:8:16729:16761	3675440	1	True				
ANR	3675586	AssignmentExpression	load_flags |= FT_LOAD_NO_HINTING		3675440	0		|=			
ANR	3675587	Identifier	load_flags		3675440	0					
ANR	3675588	Identifier	FT_LOAD_NO_HINTING		3675440	1					
ANR	3675589	ExpressionStatement	size -> metrics = ( load_flags & FT_LOAD_NO_HINTING ) ? & ttsize -> metrics : & size -> hinted_metrics	463:4:16840:16978	3675440	10	True				
ANR	3675590	AssignmentExpression	size -> metrics = ( load_flags & FT_LOAD_NO_HINTING ) ? & ttsize -> metrics : & size -> hinted_metrics		3675440	0		=			
ANR	3675591	PtrMemberAccess	size -> metrics		3675440	0					
ANR	3675592	Identifier	size		3675440	0					
ANR	3675593	Identifier	metrics		3675440	1					
ANR	3675594	ConditionalExpression	( load_flags & FT_LOAD_NO_HINTING ) ? & ttsize -> metrics : & size -> hinted_metrics		3675440	1					
ANR	3675595	Condition	load_flags & FT_LOAD_NO_HINTING		3675440	0					
ANR	3675596	BitAndExpression	load_flags & FT_LOAD_NO_HINTING		3675440	0		&			
ANR	3675597	Identifier	load_flags		3675440	0					
ANR	3675598	Identifier	FT_LOAD_NO_HINTING		3675440	1					
ANR	3675599	UnaryOperationExpression	& ttsize -> metrics		3675440	1					
ANR	3675600	UnaryOperator	&		3675440	0					
ANR	3675601	PtrMemberAccess	ttsize -> metrics		3675440	1					
ANR	3675602	Identifier	ttsize		3675440	0					
ANR	3675603	Identifier	metrics		3675440	1					
ANR	3675604	UnaryOperationExpression	& size -> hinted_metrics		3675440	2					
ANR	3675605	UnaryOperator	&		3675440	0					
ANR	3675606	PtrMemberAccess	size -> hinted_metrics		3675440	1					
ANR	3675607	Identifier	size		3675440	0					
ANR	3675608	Identifier	hinted_metrics		3675440	1					
ANR	3675609	ExpressionStatement	"error = TT_Load_Glyph ( size , slot , glyph_index , load_flags )"	468:4:17035:17095	3675440	11	True				
ANR	3675610	AssignmentExpression	"error = TT_Load_Glyph ( size , slot , glyph_index , load_flags )"		3675440	0		=			
ANR	3675611	Identifier	error		3675440	0					
ANR	3675612	CallExpression	"TT_Load_Glyph ( size , slot , glyph_index , load_flags )"		3675440	1					
ANR	3675613	Callee	TT_Load_Glyph		3675440	0					
ANR	3675614	Identifier	TT_Load_Glyph		3675440	0					
ANR	3675615	ArgumentList	size		3675440	1					
ANR	3675616	Argument	size		3675440	0					
ANR	3675617	Identifier	size		3675440	0					
ANR	3675618	Argument	slot		3675440	1					
ANR	3675619	Identifier	slot		3675440	0					
ANR	3675620	Argument	glyph_index		3675440	2					
ANR	3675621	Identifier	glyph_index		3675440	0					
ANR	3675622	Argument	load_flags		3675440	3					
ANR	3675623	Identifier	load_flags		3675440	0					
ANR	3675624	ReturnStatement	return error ;	473:4:17197:17209	3675440	12	True				
ANR	3675625	Identifier	error		3675440	0					
ANR	3675626	ReturnType	static FT_Error		3675440	1					
ANR	3675627	Identifier	tt_glyph_load		3675440	2					
ANR	3675628	ParameterList	"FT_GlyphSlot ttslot , FT_Size ttsize , FT_UInt glyph_index , FT_Int32 load_flags"		3675440	3					
ANR	3675629	Parameter	FT_GlyphSlot ttslot	414:17:15410:15429	3675440	0	True				
ANR	3675630	ParameterType	FT_GlyphSlot		3675440	0					
ANR	3675631	Identifier	ttslot		3675440	1					
ANR	3675632	Parameter	FT_Size ttsize	415:17:15473:15492	3675440	1	True				
ANR	3675633	ParameterType	FT_Size		3675440	0					
ANR	3675634	Identifier	ttsize		3675440	1					
ANR	3675635	Parameter	FT_UInt glyph_index	416:17:15536:15560	3675440	2	True				
ANR	3675636	ParameterType	FT_UInt		3675440	0					
ANR	3675637	Identifier	glyph_index		3675440	1					
ANR	3675638	Parameter	FT_Int32 load_flags	417:17:15580:15603	3675440	3	True				
ANR	3675639	ParameterType	FT_Int32		3675440	0					
ANR	3675640	Identifier	load_flags		3675440	1					
ANR	3675641	CFGEntryNode	ENTRY		3675440		True				
ANR	3675642	CFGExitNode	EXIT		3675440		True				
ANR	3675643	Symbol	& ttsize -> metrics		3675440						
ANR	3675644	Symbol	glyph_index		3675440						
ANR	3675645	Symbol	Invalid_Slot_Handle		3675440						
ANR	3675646	Symbol	face -> internal -> incremental_interface		3675440						
ANR	3675647	Symbol	ttsize		3675440						
ANR	3675648	Symbol	slot		3675440						
ANR	3675649	Symbol	face -> num_glyphs		3675440						
ANR	3675650	Symbol	error		3675440						
ANR	3675651	Symbol	* face		3675440						
ANR	3675652	Symbol	size -> metrics		3675440						
ANR	3675653	Symbol	* size		3675440						
ANR	3675654	Symbol	ttslot -> face		3675440						
ANR	3675655	Symbol	FT_LOAD_NO_BITMAP		3675440						
ANR	3675656	Symbol	FT_LOAD_NO_AUTOHINT		3675440						
ANR	3675657	Symbol	Invalid_Face_Handle		3675440						
ANR	3675658	Symbol	FT_LOAD_NO_HINTING		3675440						
ANR	3675659	Symbol	FT_IS_TRICKY		3675440						
ANR	3675660	Symbol	* face -> internal		3675440						
ANR	3675661	Symbol	* * face		3675440						
ANR	3675662	Symbol	FT_LOAD_NO_SCALE		3675440						
ANR	3675663	Symbol	FT_LOAD_NO_RECURSE		3675440						
ANR	3675664	Symbol	Invalid_Argument		3675440						
ANR	3675665	Symbol	TT_Load_Glyph		3675440						
ANR	3675666	Symbol	FT_THROW		3675440						
ANR	3675667	Symbol	& size -> hinted_metrics		3675440						
ANR	3675668	Symbol	face		3675440						
ANR	3675669	Symbol	ttslot		3675440						
ANR	3675670	Symbol	size		3675440						
ANR	3675671	Symbol	Invalid_Size_Handle		3675440						
ANR	3675672	Symbol	* ttslot		3675440						
ANR	3675673	Symbol	~FT_LOAD_NO_HINTING		3675440						
ANR	3675674	Symbol	load_flags		3675440						
ANR	3675675	Symbol	face -> internal		3675440						
ANR	3675676	DeclStmt									
ANR	3675677	Decl							const FT_Service_TrueTypeEngineRec	const FT_Service_TrueTypeEngineRec	tt_service_truetype_engine
ANR	3675678	Function	tt_get_interface	568:2:20930:21930							
ANR	3675679	FunctionDef	"tt_get_interface (FT_Module driver , const char * tt_interface)"		3675678	0					
ANR	3675680	CompoundStatement		570:2:21038:21930	3675678	0					
ANR	3675681	IdentifierDeclStatement	FT_Library library ;	571:4:21044:21072	3675678	0	True				
ANR	3675682	IdentifierDecl	library		3675678	0					
ANR	3675683	IdentifierDeclType	FT_Library		3675678	0					
ANR	3675684	Identifier	library		3675678	1					
ANR	3675685	IdentifierDeclStatement	FT_Module_Interface result ;	572:4:21078:21105	3675678	1	True				
ANR	3675686	IdentifierDecl	result		3675678	0					
ANR	3675687	IdentifierDeclType	FT_Module_Interface		3675678	0					
ANR	3675688	Identifier	result		3675678	1					
ANR	3675689	IdentifierDeclStatement	FT_Module sfntd ;	573:4:21111:21137	3675678	2	True				
ANR	3675690	IdentifierDecl	sfntd		3675678	0					
ANR	3675691	IdentifierDeclType	FT_Module		3675678	0					
ANR	3675692	Identifier	sfntd		3675678	1					
ANR	3675693	IdentifierDeclStatement	SFNT_Service sfnt ;	574:4:21143:21168	3675678	3	True				
ANR	3675694	IdentifierDecl	sfnt		3675678	0					
ANR	3675695	IdentifierDeclType	SFNT_Service		3675678	0					
ANR	3675696	Identifier	sfnt		3675678	1					
ANR	3675697	IfStatement	if ( ! driver )		3675678	4					
ANR	3675698	Condition	! driver	579:9:21270:21276	3675678	0	True				
ANR	3675699	UnaryOperationExpression	! driver		3675678	0					
ANR	3675700	UnaryOperator	!		3675678	0					
ANR	3675701	Identifier	driver		3675678	1					
ANR	3675702	ReturnStatement	return NULL ;	580:6:21286:21297	3675678	1	True				
ANR	3675703	Identifier	NULL		3675678	0					
ANR	3675704	ExpressionStatement	library = driver -> library	581:4:21303:21328	3675678	5	True				
ANR	3675705	AssignmentExpression	library = driver -> library		3675678	0		=			
ANR	3675706	Identifier	library		3675678	0					
ANR	3675707	PtrMemberAccess	driver -> library		3675678	1					
ANR	3675708	Identifier	driver		3675678	0					
ANR	3675709	Identifier	library		3675678	1					
ANR	3675710	IfStatement	if ( ! library )		3675678	6					
ANR	3675711	Condition	! library	582:9:21339:21346	3675678	0	True				
ANR	3675712	UnaryOperationExpression	! library		3675678	0					
ANR	3675713	UnaryOperator	!		3675678	0					
ANR	3675714	Identifier	library		3675678	1					
ANR	3675715	ReturnStatement	return NULL ;	583:6:21356:21367	3675678	1	True				
ANR	3675716	Identifier	NULL		3675678	0					
ANR	3675717	ExpressionStatement	"result = ft_service_list_lookup ( TT_SERVICES_GET , tt_interface )"	586:4:21381:21445	3675678	7	True				
ANR	3675718	AssignmentExpression	"result = ft_service_list_lookup ( TT_SERVICES_GET , tt_interface )"		3675678	0		=			
ANR	3675719	Identifier	result		3675678	0					
ANR	3675720	CallExpression	"ft_service_list_lookup ( TT_SERVICES_GET , tt_interface )"		3675678	1					
ANR	3675721	Callee	ft_service_list_lookup		3675678	0					
ANR	3675722	Identifier	ft_service_list_lookup		3675678	0					
ANR	3675723	ArgumentList	TT_SERVICES_GET		3675678	1					
ANR	3675724	Argument	TT_SERVICES_GET		3675678	0					
ANR	3675725	Identifier	TT_SERVICES_GET		3675678	0					
ANR	3675726	Argument	tt_interface		3675678	1					
ANR	3675727	Identifier	tt_interface		3675678	0					
ANR	3675728	IfStatement	if ( result )		3675678	8					
ANR	3675729	Condition	result	587:9:21456:21461	3675678	0	True				
ANR	3675730	Identifier	result		3675678	0					
ANR	3675731	ReturnStatement	return result ;	588:6:21471:21484	3675678	1	True				
ANR	3675732	Identifier	result		3675678	0					
ANR	3675733	IfStatement	if ( ! driver )		3675678	9					
ANR	3675734	Condition	! driver	591:9:21525:21531	3675678	0	True				
ANR	3675735	UnaryOperationExpression	! driver		3675678	0					
ANR	3675736	UnaryOperator	!		3675678	0					
ANR	3675737	Identifier	driver		3675678	1					
ANR	3675738	ReturnStatement	return NULL ;	592:6:21541:21552	3675678	1	True				
ANR	3675739	Identifier	NULL		3675678	0					
ANR	3675740	ExpressionStatement	library = driver -> library	593:4:21558:21583	3675678	10	True				
ANR	3675741	AssignmentExpression	library = driver -> library		3675678	0		=			
ANR	3675742	Identifier	library		3675678	0					
ANR	3675743	PtrMemberAccess	driver -> library		3675678	1					
ANR	3675744	Identifier	driver		3675678	0					
ANR	3675745	Identifier	library		3675678	1					
ANR	3675746	IfStatement	if ( ! library )		3675678	11					
ANR	3675747	Condition	! library	594:9:21594:21601	3675678	0	True				
ANR	3675748	UnaryOperationExpression	! library		3675678	0					
ANR	3675749	UnaryOperator	!		3675678	0					
ANR	3675750	Identifier	library		3675678	1					
ANR	3675751	ReturnStatement	return NULL ;	595:6:21611:21622	3675678	1	True				
ANR	3675752	Identifier	NULL		3675678	0					
ANR	3675753	ExpressionStatement	"sfntd = FT_Get_Module ( library , ""sfnt"" )"	599:4:21701:21741	3675678	12	True				
ANR	3675754	AssignmentExpression	"sfntd = FT_Get_Module ( library , ""sfnt"" )"		3675678	0		=			
ANR	3675755	Identifier	sfntd		3675678	0					
ANR	3675756	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3675678	1					
ANR	3675757	Callee	FT_Get_Module		3675678	0					
ANR	3675758	Identifier	FT_Get_Module		3675678	0					
ANR	3675759	ArgumentList	library		3675678	1					
ANR	3675760	Argument	library		3675678	0					
ANR	3675761	Identifier	library		3675678	0					
ANR	3675762	Argument	"""sfnt"""		3675678	1					
ANR	3675763	PrimaryExpression	"""sfnt"""		3675678	0					
ANR	3675764	IfStatement	if ( sfntd )		3675678	13					
ANR	3675765	Condition	sfntd	600:9:21752:21756	3675678	0	True				
ANR	3675766	Identifier	sfntd		3675678	0					
ANR	3675767	CompoundStatement		32:4:725:725	3675678	1					
ANR	3675768	ExpressionStatement	sfnt = ( SFNT_Service ) ( sfntd -> clazz -> module_interface )	602:6:21772:21827	3675678	0	True				
ANR	3675769	AssignmentExpression	sfnt = ( SFNT_Service ) ( sfntd -> clazz -> module_interface )		3675678	0		=			
ANR	3675770	Identifier	sfnt		3675678	0					
ANR	3675771	CastExpression	( SFNT_Service ) ( sfntd -> clazz -> module_interface )		3675678	1					
ANR	3675772	CastTarget	SFNT_Service		3675678	0					
ANR	3675773	PtrMemberAccess	sfntd -> clazz -> module_interface		3675678	1					
ANR	3675774	PtrMemberAccess	sfntd -> clazz		3675678	0					
ANR	3675775	Identifier	sfntd		3675678	0					
ANR	3675776	Identifier	clazz		3675678	1					
ANR	3675777	Identifier	module_interface		3675678	1					
ANR	3675778	IfStatement	if ( sfnt )		3675678	1					
ANR	3675779	Condition	sfnt	603:11:21840:21843	3675678	0	True				
ANR	3675780	Identifier	sfnt		3675678	0					
ANR	3675781	ReturnStatement	"return sfnt -> get_interface ( driver , tt_interface ) ;"	604:8:21855:21905	3675678	1	True				
ANR	3675782	CallExpression	"sfnt -> get_interface ( driver , tt_interface )"		3675678	0					
ANR	3675783	Callee	sfnt -> get_interface		3675678	0					
ANR	3675784	PtrMemberAccess	sfnt -> get_interface		3675678	0					
ANR	3675785	Identifier	sfnt		3675678	0					
ANR	3675786	Identifier	get_interface		3675678	1					
ANR	3675787	ArgumentList	driver		3675678	1					
ANR	3675788	Argument	driver		3675678	0					
ANR	3675789	Identifier	driver		3675678	0					
ANR	3675790	Argument	tt_interface		3675678	1					
ANR	3675791	Identifier	tt_interface		3675678	0					
ANR	3675792	ReturnStatement	return 0 ;	607:4:21918:21926	3675678	14	True				
ANR	3675793	PrimaryExpression	0		3675678	0					
ANR	3675794	Identifier	tt_get_interface		3675678	1					
ANR	3675795	ParameterList	"FT_Module driver , const char * tt_interface"		3675678	2					
ANR	3675796	Parameter	FT_Module driver	568:20:20948:20966	3675678	0	True				
ANR	3675797	ParameterType	FT_Module		3675678	0					
ANR	3675798	Identifier	driver		3675678	1					
ANR	3675799	Parameter	const char * tt_interface	569:20:21008:21032	3675678	1	True				
ANR	3675800	ParameterType	const char *		3675678	0					
ANR	3675801	Identifier	tt_interface		3675678	1					
ANR	3675802	CFGEntryNode	ENTRY		3675678		True				
ANR	3675803	CFGExitNode	EXIT		3675678		True				
ANR	3675804	Symbol	NULL		3675678						
ANR	3675805	Symbol	sfntd -> clazz -> module_interface		3675678						
ANR	3675806	Symbol	FT_Get_Module		3675678						
ANR	3675807	Symbol	* sfntd -> clazz		3675678						
ANR	3675808	Symbol	* driver		3675678						
ANR	3675809	Symbol	* sfnt		3675678						
ANR	3675810	Symbol	tt_interface		3675678						
ANR	3675811	Symbol	sfnt		3675678						
ANR	3675812	Symbol	TT_SERVICES_GET		3675678						
ANR	3675813	Symbol	sfnt -> get_interface		3675678						
ANR	3675814	Symbol	ft_service_list_lookup		3675678						
ANR	3675815	Symbol	sfntd		3675678						
ANR	3675816	Symbol	result		3675678						
ANR	3675817	Symbol	* sfntd		3675678						
ANR	3675818	Symbol	driver -> library		3675678						
ANR	3675819	Symbol	library		3675678						
ANR	3675820	Symbol	driver		3675678						
ANR	3675821	Symbol	* * sfntd		3675678						
ANR	3675822	Symbol	sfntd -> clazz		3675678						
