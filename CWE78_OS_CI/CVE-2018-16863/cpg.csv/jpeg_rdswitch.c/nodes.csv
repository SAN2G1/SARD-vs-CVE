command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6683127	File	data/converged/CVE-2018-16863_ghostpdl/jpeg_rdswitch.c								
ANR	6683128	Function	text_getc	23:0:794:1094							
ANR	6683129	FunctionDef	text_getc (FILE * file)		6683128	0					
ANR	6683130	CompoundStatement		26:0:944:1094	6683128	0					
ANR	6683131	Statement	register	27:2:948:955	6683128	0	True				
ANR	6683132	IdentifierDeclStatement	int ch ;	27:11:957:963	6683128	1	True				
ANR	6683133	IdentifierDecl	ch		6683128	0					
ANR	6683134	IdentifierDeclType	int		6683128	0					
ANR	6683135	Identifier	ch		6683128	1					
ANR	6683136	ExpressionStatement	ch = getc ( file )	29:2:970:985	6683128	2	True				
ANR	6683137	AssignmentExpression	ch = getc ( file )		6683128	0		=			
ANR	6683138	Identifier	ch		6683128	0					
ANR	6683139	CallExpression	getc ( file )		6683128	1					
ANR	6683140	Callee	getc		6683128	0					
ANR	6683141	Identifier	getc		6683128	0					
ANR	6683142	ArgumentList	file		6683128	1					
ANR	6683143	Argument	file		6683128	0					
ANR	6683144	Identifier	file		6683128	0					
ANR	6683145	IfStatement	if ( ch == '#' )		6683128	3					
ANR	6683146	Condition	ch == '#'	30:6:993:1001	6683128	0	True				
ANR	6683147	EqualityExpression	ch == '#'		6683128	0		==			
ANR	6683148	Identifier	ch		6683128	0					
ANR	6683149	PrimaryExpression	'#'		6683128	1					
ANR	6683150	CompoundStatement		5:17:59:59	6683128	1					
ANR	6683151	DoStatement	do		6683128	0					
ANR	6683152	CompoundStatement		6:7:68:68	6683128	0					
ANR	6683153	ExpressionStatement	ch = getc ( file )	32:6:1021:1036	6683128	0	True				
ANR	6683154	AssignmentExpression	ch = getc ( file )		6683128	0		=			
ANR	6683155	Identifier	ch		6683128	0					
ANR	6683156	CallExpression	getc ( file )		6683128	1					
ANR	6683157	Callee	getc		6683128	0					
ANR	6683158	Identifier	getc		6683128	0					
ANR	6683159	ArgumentList	file		6683128	1					
ANR	6683160	Argument	file		6683128	0					
ANR	6683161	Identifier	file		6683128	0					
ANR	6683162	Condition	ch != '\\n' && ch != EOF	33:13:1051:1073	6683128	1	True				
ANR	6683163	AndExpression	ch != '\\n' && ch != EOF		6683128	0		&&			
ANR	6683164	EqualityExpression	ch != '\\n'		6683128	0		!=			
ANR	6683165	Identifier	ch		6683128	0					
ANR	6683166	PrimaryExpression	'\\n'		6683128	1					
ANR	6683167	EqualityExpression	ch != EOF		6683128	1		!=			
ANR	6683168	Identifier	ch		6683128	0					
ANR	6683169	Identifier	EOF		6683128	1					
ANR	6683170	ReturnStatement	return ch ;	35:2:1083:1092	6683128	4	True				
ANR	6683171	Identifier	ch		6683128	0					
ANR	6683172	Identifier	text_getc		6683128	1					
ANR	6683173	ParameterList	FILE * file		6683128	2					
ANR	6683174	Parameter	FILE * file	23:11:805:815	6683128	0	True				
ANR	6683175	ParameterType	FILE *		6683128	0					
ANR	6683176	Identifier	file		6683128	1					
ANR	6683177	CFGEntryNode	ENTRY		6683128		True				
ANR	6683178	CFGExitNode	EXIT		6683128		True				
ANR	6683179	Symbol	file		6683128						
ANR	6683180	Symbol	ch		6683128						
ANR	6683181	Symbol	getc		6683128						
ANR	6683182	Symbol	EOF		6683128						
ANR	6683183	Function	read_text_integer	40:0:1113:1799							
ANR	6683184	FunctionDef	"read_text_integer (FILE * file , long * result , int * termchar)"		6683183	0					
ANR	6683185	CompoundStatement		43:0:1324:1799	6683183	0					
ANR	6683186	Statement	register	44:2:1328:1335	6683183	0	True				
ANR	6683187	IdentifierDeclStatement	int ch ;	44:11:1337:1343	6683183	1	True				
ANR	6683188	IdentifierDecl	ch		6683183	0					
ANR	6683189	IdentifierDeclType	int		6683183	0					
ANR	6683190	Identifier	ch		6683183	1					
ANR	6683191	Statement	register	45:2:1347:1354	6683183	2	True				
ANR	6683192	IdentifierDeclStatement	long val ;	45:11:1356:1364	6683183	3	True				
ANR	6683193	IdentifierDecl	val		6683183	0					
ANR	6683194	IdentifierDeclType	long		6683183	0					
ANR	6683195	Identifier	val		6683183	1					
ANR	6683196	DoStatement	do		6683183	4					
ANR	6683197	CompoundStatement		6:5:97:97	6683183	0					
ANR	6683198	ExpressionStatement	ch = text_getc ( file )	49:4:1428:1448	6683183	0	True				
ANR	6683199	AssignmentExpression	ch = text_getc ( file )		6683183	0		=			
ANR	6683200	Identifier	ch		6683183	0					
ANR	6683201	CallExpression	text_getc ( file )		6683183	1					
ANR	6683202	Callee	text_getc		6683183	0					
ANR	6683203	Identifier	text_getc		6683183	0					
ANR	6683204	ArgumentList	file		6683183	1					
ANR	6683205	Argument	file		6683183	0					
ANR	6683206	Identifier	file		6683183	0					
ANR	6683207	IfStatement	if ( ch == EOF )		6683183	1					
ANR	6683208	Condition	ch == EOF	50:8:1458:1466	6683183	0	True				
ANR	6683209	EqualityExpression	ch == EOF		6683183	0		==			
ANR	6683210	Identifier	ch		6683183	0					
ANR	6683211	Identifier	EOF		6683183	1					
ANR	6683212	CompoundStatement		8:19:144:144	6683183	1					
ANR	6683213	ExpressionStatement	* termchar = ch	51:6:1477:1491	6683183	0	True				
ANR	6683214	AssignmentExpression	* termchar = ch		6683183	0		=			
ANR	6683215	UnaryOperationExpression	* termchar		6683183	0					
ANR	6683216	UnaryOperator	*		6683183	0					
ANR	6683217	Identifier	termchar		6683183	1					
ANR	6683218	Identifier	ch		6683183	1					
ANR	6683219	ReturnStatement	return FALSE ;	52:6:1499:1511	6683183	1	True				
ANR	6683220	Identifier	FALSE		6683183	0					
ANR	6683221	Condition	isspace ( ch )	54:11:1530:1540	6683183	1	True				
ANR	6683222	CallExpression	isspace ( ch )		6683183	0					
ANR	6683223	Callee	isspace		6683183	0					
ANR	6683224	Identifier	isspace		6683183	0					
ANR	6683225	ArgumentList	ch		6683183	1					
ANR	6683226	Argument	ch		6683183	0					
ANR	6683227	Identifier	ch		6683183	0					
ANR	6683228	IfStatement	if ( ! isdigit ( ch ) )		6683183	5					
ANR	6683229	Condition	! isdigit ( ch )	56:6:1553:1565	6683183	0	True				
ANR	6683230	UnaryOperationExpression	! isdigit ( ch )		6683183	0					
ANR	6683231	UnaryOperator	!		6683183	0					
ANR	6683232	CallExpression	isdigit ( ch )		6683183	1					
ANR	6683233	Callee	isdigit		6683183	0					
ANR	6683234	Identifier	isdigit		6683183	0					
ANR	6683235	ArgumentList	ch		6683183	1					
ANR	6683236	Argument	ch		6683183	0					
ANR	6683237	Identifier	ch		6683183	0					
ANR	6683238	CompoundStatement		14:21:243:243	6683183	1					
ANR	6683239	ExpressionStatement	* termchar = ch	57:4:1574:1588	6683183	0	True				
ANR	6683240	AssignmentExpression	* termchar = ch		6683183	0		=			
ANR	6683241	UnaryOperationExpression	* termchar		6683183	0					
ANR	6683242	UnaryOperator	*		6683183	0					
ANR	6683243	Identifier	termchar		6683183	1					
ANR	6683244	Identifier	ch		6683183	1					
ANR	6683245	ReturnStatement	return FALSE ;	58:4:1594:1606	6683183	1	True				
ANR	6683246	Identifier	FALSE		6683183	0					
ANR	6683247	ExpressionStatement	val = ch - '0'	61:2:1615:1629	6683183	6	True				
ANR	6683248	AssignmentExpression	val = ch - '0'		6683183	0		=			
ANR	6683249	Identifier	val		6683183	0					
ANR	6683250	AdditiveExpression	ch - '0'		6683183	1		-			
ANR	6683251	Identifier	ch		6683183	0					
ANR	6683252	PrimaryExpression	'0'		6683183	1					
ANR	6683253	WhileStatement	while ( ( ch = text_getc ( file ) ) != EOF )		6683183	7					
ANR	6683254	Condition	( ch = text_getc ( file ) ) != EOF	62:9:1640:1668	6683183	0	True				
ANR	6683255	EqualityExpression	( ch = text_getc ( file ) ) != EOF		6683183	0		!=			
ANR	6683256	AssignmentExpression	ch = text_getc ( file )		6683183	0		=			
ANR	6683257	Identifier	ch		6683183	0					
ANR	6683258	CallExpression	text_getc ( file )		6683183	1					
ANR	6683259	Callee	text_getc		6683183	0					
ANR	6683260	Identifier	text_getc		6683183	0					
ANR	6683261	ArgumentList	file		6683183	1					
ANR	6683262	Argument	file		6683183	0					
ANR	6683263	Identifier	file		6683183	0					
ANR	6683264	Identifier	EOF		6683183	1					
ANR	6683265	CompoundStatement		20:40:346:346	6683183	1					
ANR	6683266	IfStatement	if ( ! isdigit ( ch ) )		6683183	0					
ANR	6683267	Condition	! isdigit ( ch )	63:8:1681:1693	6683183	0	True				
ANR	6683268	UnaryOperationExpression	! isdigit ( ch )		6683183	0					
ANR	6683269	UnaryOperator	!		6683183	0					
ANR	6683270	CallExpression	isdigit ( ch )		6683183	1					
ANR	6683271	Callee	isdigit		6683183	0					
ANR	6683272	Identifier	isdigit		6683183	0					
ANR	6683273	ArgumentList	ch		6683183	1					
ANR	6683274	Argument	ch		6683183	0					
ANR	6683275	Identifier	ch		6683183	0					
ANR	6683276	BreakStatement	break ;	64:6:1702:1707	6683183	1	True				
ANR	6683277	ExpressionStatement	val *= 10	65:4:1713:1722	6683183	1	True				
ANR	6683278	AssignmentExpression	val *= 10		6683183	0		*=			
ANR	6683279	Identifier	val		6683183	0					
ANR	6683280	PrimaryExpression	10		6683183	1					
ANR	6683281	ExpressionStatement	val += ch - '0'	66:4:1728:1743	6683183	2	True				
ANR	6683282	AssignmentExpression	val += ch - '0'		6683183	0		+=			
ANR	6683283	Identifier	val		6683183	0					
ANR	6683284	AdditiveExpression	ch - '0'		6683183	1		-			
ANR	6683285	Identifier	ch		6683183	0					
ANR	6683286	PrimaryExpression	'0'		6683183	1					
ANR	6683287	ExpressionStatement	* result = val	68:2:1751:1764	6683183	8	True				
ANR	6683288	AssignmentExpression	* result = val		6683183	0		=			
ANR	6683289	UnaryOperationExpression	* result		6683183	0					
ANR	6683290	UnaryOperator	*		6683183	0					
ANR	6683291	Identifier	result		6683183	1					
ANR	6683292	Identifier	val		6683183	1					
ANR	6683293	ExpressionStatement	* termchar = ch	69:2:1768:1782	6683183	9	True				
ANR	6683294	AssignmentExpression	* termchar = ch		6683183	0		=			
ANR	6683295	UnaryOperationExpression	* termchar		6683183	0					
ANR	6683296	UnaryOperator	*		6683183	0					
ANR	6683297	Identifier	termchar		6683183	1					
ANR	6683298	Identifier	ch		6683183	1					
ANR	6683299	ReturnStatement	return TRUE ;	70:2:1786:1797	6683183	10	True				
ANR	6683300	Identifier	TRUE		6683183	0					
ANR	6683301	Identifier	read_text_integer		6683183	1					
ANR	6683302	ParameterList	"FILE * file , long * result , int * termchar"		6683183	2					
ANR	6683303	Parameter	FILE * file	40:19:1132:1142	6683183	0	True				
ANR	6683304	ParameterType	FILE *		6683183	0					
ANR	6683305	Identifier	file		6683183	1					
ANR	6683306	Parameter	long * result	40:32:1145:1157	6683183	1	True				
ANR	6683307	ParameterType	long *		6683183	0					
ANR	6683308	Identifier	result		6683183	1					
ANR	6683309	Parameter	int * termchar	40:47:1160:1173	6683183	2	True				
ANR	6683310	ParameterType	int *		6683183	0					
ANR	6683311	Identifier	termchar		6683183	1					
ANR	6683312	CFGEntryNode	ENTRY		6683183		True				
ANR	6683313	CFGExitNode	EXIT		6683183		True				
ANR	6683314	Symbol	val		6683183						
ANR	6683315	Symbol	ch		6683183						
ANR	6683316	Symbol	isspace		6683183						
ANR	6683317	Symbol	TRUE		6683183						
ANR	6683318	Symbol	result		6683183						
ANR	6683319	Symbol	file		6683183						
ANR	6683320	Symbol	* result		6683183						
ANR	6683321	Symbol	termchar		6683183						
ANR	6683322	Symbol	* termchar		6683183						
ANR	6683323	Symbol	FALSE		6683183						
ANR	6683324	Symbol	text_getc		6683183						
ANR	6683325	Symbol	EOF		6683183						
ANR	6683326	Symbol	isdigit		6683183						
ANR	6683327	Function	read_quant_tables	75:0:1819:3448							
ANR	6683328	FunctionDef	"read_quant_tables (j_compress_ptr cinfo , char * filename , boolean force_baseline)"		6683327	0					
ANR	6683329	CompoundStatement		85:0:2453:3448	6683327	0					
ANR	6683330	IdentifierDeclStatement	FILE * fp ;	86:2:2457:2466	6683327	0	True				
ANR	6683331	IdentifierDecl	* fp		6683327	0					
ANR	6683332	IdentifierDeclType	FILE *		6683327	0					
ANR	6683333	Identifier	fp		6683327	1					
ANR	6683334	IdentifierDeclStatement	"int tblno , i , termchar ;"	87:2:2470:2492	6683327	1	True				
ANR	6683335	IdentifierDecl	tblno		6683327	0					
ANR	6683336	IdentifierDeclType	int		6683327	0					
ANR	6683337	Identifier	tblno		6683327	1					
ANR	6683338	IdentifierDecl	i		6683327	1					
ANR	6683339	IdentifierDeclType	int		6683327	0					
ANR	6683340	Identifier	i		6683327	1					
ANR	6683341	IdentifierDecl	termchar		6683327	2					
ANR	6683342	IdentifierDeclType	int		6683327	0					
ANR	6683343	Identifier	termchar		6683327	1					
ANR	6683344	IdentifierDeclStatement	long val ;	88:2:2496:2504	6683327	2	True				
ANR	6683345	IdentifierDecl	val		6683327	0					
ANR	6683346	IdentifierDeclType	long		6683327	0					
ANR	6683347	Identifier	val		6683327	1					
ANR	6683348	IdentifierDeclStatement	unsigned int table [ DCTSIZE2 ] ;	89:2:2508:2536	6683327	3	True				
ANR	6683349	IdentifierDecl	table [ DCTSIZE2 ]		6683327	0					
ANR	6683350	IdentifierDeclType	unsigned int [ DCTSIZE2 ]		6683327	0					
ANR	6683351	Identifier	table		6683327	1					
ANR	6683352	Identifier	DCTSIZE2		6683327	2					
ANR	6683353	IfStatement	"if ( ( fp = fopen ( filename , ""r"" ) ) == NULL )"		6683327	4					
ANR	6683354	Condition	"( fp = fopen ( filename , ""r"" ) ) == NULL"	91:6:2545:2579	6683327	0	True				
ANR	6683355	EqualityExpression	"( fp = fopen ( filename , ""r"" ) ) == NULL"		6683327	0		==			
ANR	6683356	AssignmentExpression	"fp = fopen ( filename , ""r"" )"		6683327	0		=			
ANR	6683357	Identifier	fp		6683327	0					
ANR	6683358	CallExpression	"fopen ( filename , ""r"" )"		6683327	1					
ANR	6683359	Callee	fopen		6683327	0					
ANR	6683360	Identifier	fopen		6683327	0					
ANR	6683361	ArgumentList	filename		6683327	1					
ANR	6683362	Argument	filename		6683327	0					
ANR	6683363	Identifier	filename		6683327	0					
ANR	6683364	Argument	"""r"""		6683327	1					
ANR	6683365	PrimaryExpression	"""r"""		6683327	0					
ANR	6683366	Identifier	NULL		6683327	1					
ANR	6683367	CompoundStatement		7:43:128:128	6683327	1					
ANR	6683368	ExpressionStatement	"fprintf ( stderr , ""Can't open table file %s\\n"" , filename )"	92:4:2588:2643	6683327	0	True				
ANR	6683369	CallExpression	"fprintf ( stderr , ""Can't open table file %s\\n"" , filename )"		6683327	0					
ANR	6683370	Callee	fprintf		6683327	0					
ANR	6683371	Identifier	fprintf		6683327	0					
ANR	6683372	ArgumentList	stderr		6683327	1					
ANR	6683373	Argument	stderr		6683327	0					
ANR	6683374	Identifier	stderr		6683327	0					
ANR	6683375	Argument	"""Can't open table file %s\\n"""		6683327	1					
ANR	6683376	PrimaryExpression	"""Can't open table file %s\\n"""		6683327	0					
ANR	6683377	Argument	filename		6683327	2					
ANR	6683378	Identifier	filename		6683327	0					
ANR	6683379	ReturnStatement	return FALSE ;	93:4:2649:2661	6683327	1	True				
ANR	6683380	Identifier	FALSE		6683327	0					
ANR	6683381	ExpressionStatement	tblno = 0	95:2:2669:2678	6683327	5	True				
ANR	6683382	AssignmentExpression	tblno = 0		6683327	0		=			
ANR	6683383	Identifier	tblno		6683327	0					
ANR	6683384	PrimaryExpression	0		6683327	1					
ANR	6683385	WhileStatement	"while ( read_text_integer ( fp , & val , & termchar ) )"		6683327	6					
ANR	6683386	Condition	"read_text_integer ( fp , & val , & termchar )"	97:9:2690:2727	6683327	0	True				
ANR	6683387	CallExpression	"read_text_integer ( fp , & val , & termchar )"		6683327	0					
ANR	6683388	Callee	read_text_integer		6683327	0					
ANR	6683389	Identifier	read_text_integer		6683327	0					
ANR	6683390	ArgumentList	fp		6683327	1					
ANR	6683391	Argument	fp		6683327	0					
ANR	6683392	Identifier	fp		6683327	0					
ANR	6683393	Argument	& val		6683327	1					
ANR	6683394	UnaryOperationExpression	& val		6683327	0					
ANR	6683395	UnaryOperator	&		6683327	0					
ANR	6683396	Identifier	val		6683327	1					
ANR	6683397	Argument	& termchar		6683327	2					
ANR	6683398	UnaryOperationExpression	& termchar		6683327	0					
ANR	6683399	UnaryOperator	&		6683327	0					
ANR	6683400	Identifier	termchar		6683327	1					
ANR	6683401	CompoundStatement		13:49:276:276	6683327	1					
ANR	6683402	IfStatement	if ( tblno >= NUM_QUANT_TBLS )		6683327	0					
ANR	6683403	Condition	tblno >= NUM_QUANT_TBLS	98:8:2772:2794	6683327	0	True				
ANR	6683404	RelationalExpression	tblno >= NUM_QUANT_TBLS		6683327	0		>=			
ANR	6683405	Identifier	tblno		6683327	0					
ANR	6683406	Identifier	NUM_QUANT_TBLS		6683327	1					
ANR	6683407	CompoundStatement		14:33:343:343	6683327	1					
ANR	6683408	ExpressionStatement	"fprintf ( stderr , ""Too many tables in file %s\\n"" , filename )"	99:6:2805:2862	6683327	0	True				
ANR	6683409	CallExpression	"fprintf ( stderr , ""Too many tables in file %s\\n"" , filename )"		6683327	0					
ANR	6683410	Callee	fprintf		6683327	0					
ANR	6683411	Identifier	fprintf		6683327	0					
ANR	6683412	ArgumentList	stderr		6683327	1					
ANR	6683413	Argument	stderr		6683327	0					
ANR	6683414	Identifier	stderr		6683327	0					
ANR	6683415	Argument	"""Too many tables in file %s\\n"""		6683327	1					
ANR	6683416	PrimaryExpression	"""Too many tables in file %s\\n"""		6683327	0					
ANR	6683417	Argument	filename		6683327	2					
ANR	6683418	Identifier	filename		6683327	0					
ANR	6683419	ExpressionStatement	fclose ( fp )	100:6:2870:2880	6683327	1	True				
ANR	6683420	CallExpression	fclose ( fp )		6683327	0					
ANR	6683421	Callee	fclose		6683327	0					
ANR	6683422	Identifier	fclose		6683327	0					
ANR	6683423	ArgumentList	fp		6683327	1					
ANR	6683424	Argument	fp		6683327	0					
ANR	6683425	Identifier	fp		6683327	0					
ANR	6683426	ReturnStatement	return FALSE ;	101:6:2888:2900	6683327	2	True				
ANR	6683427	Identifier	FALSE		6683327	0					
ANR	6683428	ExpressionStatement	table [ 0 ] = ( unsigned int ) val	103:4:2912:2941	6683327	1	True				
ANR	6683429	AssignmentExpression	table [ 0 ] = ( unsigned int ) val		6683327	0		=			
ANR	6683430	ArrayIndexing	table [ 0 ]		6683327	0					
ANR	6683431	Identifier	table		6683327	0					
ANR	6683432	PrimaryExpression	0		6683327	1					
ANR	6683433	CastExpression	( unsigned int ) val		6683327	1					
ANR	6683434	CastTarget	unsigned int		6683327	0					
ANR	6683435	Identifier	val		6683327	1					
ANR	6683436	ForStatement	for ( i = 1 ; i < DCTSIZE2 ; i ++ )		6683327	2					
ANR	6683437	ForInit	i = 1 ;	104:9:2952:2957	6683327	0	True				
ANR	6683438	AssignmentExpression	i = 1		6683327	0		=			
ANR	6683439	Identifier	i		6683327	0					
ANR	6683440	PrimaryExpression	1		6683327	1					
ANR	6683441	Condition	i < DCTSIZE2	104:16:2959:2970	6683327	1	True				
ANR	6683442	RelationalExpression	i < DCTSIZE2		6683327	0		<			
ANR	6683443	Identifier	i		6683327	0					
ANR	6683444	Identifier	DCTSIZE2		6683327	1					
ANR	6683445	PostIncDecOperationExpression	i ++	104:30:2973:2975	6683327	2	True				
ANR	6683446	Identifier	i		6683327	0					
ANR	6683447	IncDec	++		6683327	1					
ANR	6683448	CompoundStatement		20:35:524:524	6683327	3					
ANR	6683449	IfStatement	"if ( ! read_text_integer ( fp , & val , & termchar ) )"		6683327	0					
ANR	6683450	Condition	"! read_text_integer ( fp , & val , & termchar )"	105:10:2990:3029	6683327	0	True				
ANR	6683451	UnaryOperationExpression	"! read_text_integer ( fp , & val , & termchar )"		6683327	0					
ANR	6683452	UnaryOperator	!		6683327	0					
ANR	6683453	CallExpression	"read_text_integer ( fp , & val , & termchar )"		6683327	1					
ANR	6683454	Callee	read_text_integer		6683327	0					
ANR	6683455	Identifier	read_text_integer		6683327	0					
ANR	6683456	ArgumentList	fp		6683327	1					
ANR	6683457	Argument	fp		6683327	0					
ANR	6683458	Identifier	fp		6683327	0					
ANR	6683459	Argument	& val		6683327	1					
ANR	6683460	UnaryOperationExpression	& val		6683327	0					
ANR	6683461	UnaryOperator	&		6683327	0					
ANR	6683462	Identifier	val		6683327	1					
ANR	6683463	Argument	& termchar		6683327	2					
ANR	6683464	UnaryOperationExpression	& termchar		6683327	0					
ANR	6683465	UnaryOperator	&		6683327	0					
ANR	6683466	Identifier	termchar		6683327	1					
ANR	6683467	CompoundStatement		21:52:578:578	6683327	1					
ANR	6683468	ExpressionStatement	"fprintf ( stderr , ""Invalid table data in file %s\\n"" , filename )"	106:1:3035:3095	6683327	0	True				
ANR	6683469	CallExpression	"fprintf ( stderr , ""Invalid table data in file %s\\n"" , filename )"		6683327	0					
ANR	6683470	Callee	fprintf		6683327	0					
ANR	6683471	Identifier	fprintf		6683327	0					
ANR	6683472	ArgumentList	stderr		6683327	1					
ANR	6683473	Argument	stderr		6683327	0					
ANR	6683474	Identifier	stderr		6683327	0					
ANR	6683475	Argument	"""Invalid table data in file %s\\n"""		6683327	1					
ANR	6683476	PrimaryExpression	"""Invalid table data in file %s\\n"""		6683327	0					
ANR	6683477	Argument	filename		6683327	2					
ANR	6683478	Identifier	filename		6683327	0					
ANR	6683479	ExpressionStatement	fclose ( fp )	107:1:3098:3108	6683327	1	True				
ANR	6683480	CallExpression	fclose ( fp )		6683327	0					
ANR	6683481	Callee	fclose		6683327	0					
ANR	6683482	Identifier	fclose		6683327	0					
ANR	6683483	ArgumentList	fp		6683327	1					
ANR	6683484	Argument	fp		6683327	0					
ANR	6683485	Identifier	fp		6683327	0					
ANR	6683486	ReturnStatement	return FALSE ;	108:1:3111:3123	6683327	2	True				
ANR	6683487	Identifier	FALSE		6683327	0					
ANR	6683488	ExpressionStatement	table [ i ] = ( unsigned int ) val	110:6:3139:3168	6683327	1	True				
ANR	6683489	AssignmentExpression	table [ i ] = ( unsigned int ) val		6683327	0		=			
ANR	6683490	ArrayIndexing	table [ i ]		6683327	0					
ANR	6683491	Identifier	table		6683327	0					
ANR	6683492	Identifier	i		6683327	1					
ANR	6683493	CastExpression	( unsigned int ) val		6683327	1					
ANR	6683494	CastTarget	unsigned int		6683327	0					
ANR	6683495	Identifier	val		6683327	1					
ANR	6683496	ExpressionStatement	"jpeg_add_quant_table ( cinfo , tblno , table , cinfo -> q_scale_factor [ tblno ] , force_baseline )"	112:4:3180:3271	6683327	3	True				
ANR	6683497	CallExpression	"jpeg_add_quant_table ( cinfo , tblno , table , cinfo -> q_scale_factor [ tblno ] , force_baseline )"		6683327	0					
ANR	6683498	Callee	jpeg_add_quant_table		6683327	0					
ANR	6683499	Identifier	jpeg_add_quant_table		6683327	0					
ANR	6683500	ArgumentList	cinfo		6683327	1					
ANR	6683501	Argument	cinfo		6683327	0					
ANR	6683502	Identifier	cinfo		6683327	0					
ANR	6683503	Argument	tblno		6683327	1					
ANR	6683504	Identifier	tblno		6683327	0					
ANR	6683505	Argument	table		6683327	2					
ANR	6683506	Identifier	table		6683327	0					
ANR	6683507	Argument	cinfo -> q_scale_factor [ tblno ]		6683327	3					
ANR	6683508	ArrayIndexing	cinfo -> q_scale_factor [ tblno ]		6683327	0					
ANR	6683509	PtrMemberAccess	cinfo -> q_scale_factor		6683327	0					
ANR	6683510	Identifier	cinfo		6683327	0					
ANR	6683511	Identifier	q_scale_factor		6683327	1					
ANR	6683512	Identifier	tblno		6683327	1					
ANR	6683513	Argument	force_baseline		6683327	4					
ANR	6683514	Identifier	force_baseline		6683327	0					
ANR	6683515	ExpressionStatement	tblno ++	114:4:3277:3284	6683327	4	True				
ANR	6683516	PostIncDecOperationExpression	tblno ++		6683327	0					
ANR	6683517	Identifier	tblno		6683327	0					
ANR	6683518	IncDec	++		6683327	1					
ANR	6683519	IfStatement	if ( termchar != EOF )		6683327	7					
ANR	6683520	Condition	termchar != EOF	117:6:3297:3311	6683327	0	True				
ANR	6683521	EqualityExpression	termchar != EOF		6683327	0		!=			
ANR	6683522	Identifier	termchar		6683327	0					
ANR	6683523	Identifier	EOF		6683327	1					
ANR	6683524	CompoundStatement		33:23:860:860	6683327	1					
ANR	6683525	ExpressionStatement	"fprintf ( stderr , ""Non-numeric data in file %s\\n"" , filename )"	118:4:3320:3378	6683327	0	True				
ANR	6683526	CallExpression	"fprintf ( stderr , ""Non-numeric data in file %s\\n"" , filename )"		6683327	0					
ANR	6683527	Callee	fprintf		6683327	0					
ANR	6683528	Identifier	fprintf		6683327	0					
ANR	6683529	ArgumentList	stderr		6683327	1					
ANR	6683530	Argument	stderr		6683327	0					
ANR	6683531	Identifier	stderr		6683327	0					
ANR	6683532	Argument	"""Non-numeric data in file %s\\n"""		6683327	1					
ANR	6683533	PrimaryExpression	"""Non-numeric data in file %s\\n"""		6683327	0					
ANR	6683534	Argument	filename		6683327	2					
ANR	6683535	Identifier	filename		6683327	0					
ANR	6683536	ExpressionStatement	fclose ( fp )	119:4:3384:3394	6683327	1	True				
ANR	6683537	CallExpression	fclose ( fp )		6683327	0					
ANR	6683538	Callee	fclose		6683327	0					
ANR	6683539	Identifier	fclose		6683327	0					
ANR	6683540	ArgumentList	fp		6683327	1					
ANR	6683541	Argument	fp		6683327	0					
ANR	6683542	Identifier	fp		6683327	0					
ANR	6683543	ReturnStatement	return FALSE ;	120:4:3400:3412	6683327	2	True				
ANR	6683544	Identifier	FALSE		6683327	0					
ANR	6683545	ExpressionStatement	fclose ( fp )	123:2:3421:3431	6683327	8	True				
ANR	6683546	CallExpression	fclose ( fp )		6683327	0					
ANR	6683547	Callee	fclose		6683327	0					
ANR	6683548	Identifier	fclose		6683327	0					
ANR	6683549	ArgumentList	fp		6683327	1					
ANR	6683550	Argument	fp		6683327	0					
ANR	6683551	Identifier	fp		6683327	0					
ANR	6683552	ReturnStatement	return TRUE ;	124:2:3435:3446	6683327	9	True				
ANR	6683553	Identifier	TRUE		6683327	0					
ANR	6683554	Identifier	read_quant_tables		6683327	1					
ANR	6683555	ParameterList	"j_compress_ptr cinfo , char * filename , boolean force_baseline"		6683327	2					
ANR	6683556	Parameter	j_compress_ptr cinfo	75:19:1838:1857	6683327	0	True				
ANR	6683557	ParameterType	j_compress_ptr		6683327	0					
ANR	6683558	Identifier	cinfo		6683327	1					
ANR	6683559	Parameter	char * filename	75:41:1860:1874	6683327	1	True				
ANR	6683560	ParameterType	char *		6683327	0					
ANR	6683561	Identifier	filename		6683327	1					
ANR	6683562	Parameter	boolean force_baseline	75:58:1877:1898	6683327	2	True				
ANR	6683563	ParameterType	boolean		6683327	0					
ANR	6683564	Identifier	force_baseline		6683327	1					
ANR	6683565	CFGEntryNode	ENTRY		6683327		True				
ANR	6683566	CFGExitNode	EXIT		6683327		True				
ANR	6683567	Symbol	& val		6683327						
ANR	6683568	Symbol	* * cinfo		6683327						
ANR	6683569	Symbol	fp		6683327						
ANR	6683570	Symbol	force_baseline		6683327						
ANR	6683571	Symbol	termchar		6683327						
ANR	6683572	Symbol	* cinfo -> q_scale_factor		6683327						
ANR	6683573	Symbol	EOF		6683327						
ANR	6683574	Symbol	table		6683327						
ANR	6683575	Symbol	* cinfo		6683327						
ANR	6683576	Symbol	val		6683327						
ANR	6683577	Symbol	DCTSIZE2		6683327						
ANR	6683578	Symbol	fopen		6683327						
ANR	6683579	Symbol	NULL		6683327						
ANR	6683580	Symbol	NUM_QUANT_TBLS		6683327						
ANR	6683581	Symbol	i		6683327						
ANR	6683582	Symbol	* table		6683327						
ANR	6683583	Symbol	TRUE		6683327						
ANR	6683584	Symbol	stderr		6683327						
ANR	6683585	Symbol	tblno		6683327						
ANR	6683586	Symbol	read_text_integer		6683327						
ANR	6683587	Symbol	filename		6683327						
ANR	6683588	Symbol	* i		6683327						
ANR	6683589	Symbol	cinfo		6683327						
ANR	6683590	Symbol	& termchar		6683327						
ANR	6683591	Symbol	cinfo -> q_scale_factor		6683327						
ANR	6683592	Symbol	* tblno		6683327						
ANR	6683593	Symbol	FALSE		6683327						
ANR	6683594	Function	read_scan_integer	131:0:3503:4222							
ANR	6683595	FunctionDef	"read_scan_integer (FILE * file , long * result , int * termchar)"		6683594	0					
ANR	6683596	CompoundStatement		135:0:3705:4222	6683594	0					
ANR	6683597	Statement	register	136:2:3709:3716	6683594	0	True				
ANR	6683598	IdentifierDeclStatement	int ch ;	136:11:3718:3724	6683594	1	True				
ANR	6683599	IdentifierDecl	ch		6683594	0					
ANR	6683600	IdentifierDeclType	int		6683594	0					
ANR	6683601	Identifier	ch		6683594	1					
ANR	6683602	IfStatement	"if ( ! read_text_integer ( file , result , termchar ) )"		6683594	2					
ANR	6683603	Condition	"! read_text_integer ( file , result , termchar )"	138:6:3733:3775	6683594	0	True				
ANR	6683604	UnaryOperationExpression	"! read_text_integer ( file , result , termchar )"		6683594	0					
ANR	6683605	UnaryOperator	!		6683594	0					
ANR	6683606	CallExpression	"read_text_integer ( file , result , termchar )"		6683594	1					
ANR	6683607	Callee	read_text_integer		6683594	0					
ANR	6683608	Identifier	read_text_integer		6683594	0					
ANR	6683609	ArgumentList	file		6683594	1					
ANR	6683610	Argument	file		6683594	0					
ANR	6683611	Identifier	file		6683594	0					
ANR	6683612	Argument	result		6683594	1					
ANR	6683613	Identifier	result		6683594	0					
ANR	6683614	Argument	termchar		6683594	2					
ANR	6683615	Identifier	termchar		6683594	0					
ANR	6683616	ReturnStatement	return FALSE ;	139:4:3782:3794	6683594	1	True				
ANR	6683617	Identifier	FALSE		6683594	0					
ANR	6683618	ExpressionStatement	ch = * termchar	140:2:3798:3812	6683594	3	True				
ANR	6683619	AssignmentExpression	ch = * termchar		6683594	0		=			
ANR	6683620	Identifier	ch		6683594	0					
ANR	6683621	UnaryOperationExpression	* termchar		6683594	1					
ANR	6683622	UnaryOperator	*		6683594	0					
ANR	6683623	Identifier	termchar		6683594	1					
ANR	6683624	WhileStatement	while ( ch != EOF && isspace ( ch ) )		6683594	4					
ANR	6683625	Condition	ch != EOF && isspace ( ch )	141:9:3823:3846	6683594	0	True				
ANR	6683626	AndExpression	ch != EOF && isspace ( ch )		6683594	0		&&			
ANR	6683627	EqualityExpression	ch != EOF		6683594	0		!=			
ANR	6683628	Identifier	ch		6683594	0					
ANR	6683629	Identifier	EOF		6683594	1					
ANR	6683630	CallExpression	isspace ( ch )		6683594	1					
ANR	6683631	Callee	isspace		6683594	0					
ANR	6683632	Identifier	isspace		6683594	0					
ANR	6683633	ArgumentList	ch		6683594	1					
ANR	6683634	Argument	ch		6683594	0					
ANR	6683635	Identifier	ch		6683594	0					
ANR	6683636	ExpressionStatement	ch = text_getc ( file )	142:4:3853:3873	6683594	1	True				
ANR	6683637	AssignmentExpression	ch = text_getc ( file )		6683594	0		=			
ANR	6683638	Identifier	ch		6683594	0					
ANR	6683639	CallExpression	text_getc ( file )		6683594	1					
ANR	6683640	Callee	text_getc		6683594	0					
ANR	6683641	Identifier	text_getc		6683594	0					
ANR	6683642	ArgumentList	file		6683594	1					
ANR	6683643	Argument	file		6683594	0					
ANR	6683644	Identifier	file		6683594	0					
ANR	6683645	IfStatement	if ( isdigit ( ch ) )		6683594	5					
ANR	6683646	Condition	isdigit ( ch )	143:6:3881:3891	6683594	0	True				
ANR	6683647	CallExpression	isdigit ( ch )		6683594	0					
ANR	6683648	Callee	isdigit		6683594	0					
ANR	6683649	Identifier	isdigit		6683594	0					
ANR	6683650	ArgumentList	ch		6683594	1					
ANR	6683651	Argument	ch		6683594	0					
ANR	6683652	Identifier	ch		6683594	0					
ANR	6683653	CompoundStatement		9:19:188:188	6683594	1					
ANR	6683654	IfStatement	"if ( ungetc ( ch , file ) == EOF )"		6683594	0					
ANR	6683655	Condition	"ungetc ( ch , file ) == EOF"	144:8:3929:3951	6683594	0	True				
ANR	6683656	EqualityExpression	"ungetc ( ch , file ) == EOF"		6683594	0		==			
ANR	6683657	CallExpression	"ungetc ( ch , file )"		6683594	0					
ANR	6683658	Callee	ungetc		6683594	0					
ANR	6683659	Identifier	ungetc		6683594	0					
ANR	6683660	ArgumentList	ch		6683594	1					
ANR	6683661	Argument	ch		6683594	0					
ANR	6683662	Identifier	ch		6683594	0					
ANR	6683663	Argument	file		6683594	1					
ANR	6683664	Identifier	file		6683594	0					
ANR	6683665	Identifier	EOF		6683594	1					
ANR	6683666	ReturnStatement	return FALSE ;	145:6:3960:3972	6683594	1	True				
ANR	6683667	Identifier	FALSE		6683594	0					
ANR	6683668	ExpressionStatement	ch = ' '	146:4:3978:3986	6683594	1	True				
ANR	6683669	AssignmentExpression	ch = ' '		6683594	0		=			
ANR	6683670	Identifier	ch		6683594	0					
ANR	6683671	PrimaryExpression	' '		6683594	1					
ANR	6683672	ElseStatement	else		6683594	0					
ANR	6683673	CompoundStatement		13:9:291:291	6683594	0					
ANR	6683674	IfStatement	if ( ch != EOF && ch != ';' && ch != ':' )		6683594	0					
ANR	6683675	Condition	ch != EOF && ch != ';' && ch != ':'	151:8:4132:4166	6683594	0	True				
ANR	6683676	AndExpression	ch != EOF && ch != ';' && ch != ':'		6683594	0		&&			
ANR	6683677	EqualityExpression	ch != EOF		6683594	0		!=			
ANR	6683678	Identifier	ch		6683594	0					
ANR	6683679	Identifier	EOF		6683594	1					
ANR	6683680	AndExpression	ch != ';' && ch != ':'		6683594	1		&&			
ANR	6683681	EqualityExpression	ch != ';'		6683594	0		!=			
ANR	6683682	Identifier	ch		6683594	0					
ANR	6683683	PrimaryExpression	';'		6683594	1					
ANR	6683684	EqualityExpression	ch != ':'		6683594	1		!=			
ANR	6683685	Identifier	ch		6683594	0					
ANR	6683686	PrimaryExpression	':'		6683594	1					
ANR	6683687	ExpressionStatement	ch = ' '	152:6:4175:4183	6683594	1	True				
ANR	6683688	AssignmentExpression	ch = ' '		6683594	0		=			
ANR	6683689	Identifier	ch		6683594	0					
ANR	6683690	PrimaryExpression	' '		6683594	1					
ANR	6683691	ExpressionStatement	* termchar = ch	154:2:4191:4205	6683594	6	True				
ANR	6683692	AssignmentExpression	* termchar = ch		6683594	0		=			
ANR	6683693	UnaryOperationExpression	* termchar		6683594	0					
ANR	6683694	UnaryOperator	*		6683594	0					
ANR	6683695	Identifier	termchar		6683594	1					
ANR	6683696	Identifier	ch		6683594	1					
ANR	6683697	ReturnStatement	return TRUE ;	155:2:4209:4220	6683594	7	True				
ANR	6683698	Identifier	TRUE		6683594	0					
ANR	6683699	Identifier	read_scan_integer		6683594	1					
ANR	6683700	ParameterList	"FILE * file , long * result , int * termchar"		6683594	2					
ANR	6683701	Parameter	FILE * file	131:19:3522:3532	6683594	0	True				
ANR	6683702	ParameterType	FILE *		6683594	0					
ANR	6683703	Identifier	file		6683594	1					
ANR	6683704	Parameter	long * result	131:32:3535:3547	6683594	1	True				
ANR	6683705	ParameterType	long *		6683594	0					
ANR	6683706	Identifier	result		6683594	1					
ANR	6683707	Parameter	int * termchar	131:47:3550:3563	6683594	2	True				
ANR	6683708	ParameterType	int *		6683594	0					
ANR	6683709	Identifier	termchar		6683594	1					
ANR	6683710	CFGEntryNode	ENTRY		6683594		True				
ANR	6683711	CFGExitNode	EXIT		6683594		True				
ANR	6683712	Symbol	ungetc		6683594						
ANR	6683713	Symbol	ch		6683594						
ANR	6683714	Symbol	isspace		6683594						
ANR	6683715	Symbol	TRUE		6683594						
ANR	6683716	Symbol	result		6683594						
ANR	6683717	Symbol	read_text_integer		6683594						
ANR	6683718	Symbol	file		6683594						
ANR	6683719	Symbol	termchar		6683594						
ANR	6683720	Symbol	* termchar		6683594						
ANR	6683721	Symbol	FALSE		6683594						
ANR	6683722	Symbol	EOF		6683594						
ANR	6683723	Symbol	text_getc		6683594						
ANR	6683724	Symbol	isdigit		6683594						
ANR	6683725	Function	read_scan_script	160:0:4242:7632							
ANR	6683726	FunctionDef	"read_scan_script (j_compress_ptr cinfo , char * filename)"		6683725	0					
ANR	6683727	CompoundStatement		176:0:5164:7632	6683725	0					
ANR	6683728	IdentifierDeclStatement	FILE * fp ;	177:2:5168:5177	6683725	0	True				
ANR	6683729	IdentifierDecl	* fp		6683725	0					
ANR	6683730	IdentifierDeclType	FILE *		6683725	0					
ANR	6683731	Identifier	fp		6683725	1					
ANR	6683732	IdentifierDeclStatement	"int scanno , ncomps , termchar ;"	178:2:5181:5209	6683725	1	True				
ANR	6683733	IdentifierDecl	scanno		6683725	0					
ANR	6683734	IdentifierDeclType	int		6683725	0					
ANR	6683735	Identifier	scanno		6683725	1					
ANR	6683736	IdentifierDecl	ncomps		6683725	1					
ANR	6683737	IdentifierDeclType	int		6683725	0					
ANR	6683738	Identifier	ncomps		6683725	1					
ANR	6683739	IdentifierDecl	termchar		6683725	2					
ANR	6683740	IdentifierDeclType	int		6683725	0					
ANR	6683741	Identifier	termchar		6683725	1					
ANR	6683742	IdentifierDeclStatement	long val ;	179:2:5213:5221	6683725	2	True				
ANR	6683743	IdentifierDecl	val		6683725	0					
ANR	6683744	IdentifierDeclType	long		6683725	0					
ANR	6683745	Identifier	val		6683725	1					
ANR	6683746	IdentifierDeclStatement	jpeg_scan_info * scanptr ;	180:2:5225:5249	6683725	3	True				
ANR	6683747	IdentifierDecl	* scanptr		6683725	0					
ANR	6683748	IdentifierDeclType	jpeg_scan_info *		6683725	0					
ANR	6683749	Identifier	scanptr		6683725	1					
ANR	6683750	Statement	define	181:1:5252:5257	6683725	4	True				
ANR	6683751	Statement	MAX_SCANS	181:8:5259:5267	6683725	5	True				
ANR	6683752	Statement	100	181:19:5270:5272	6683725	6	True				
ANR	6683753	IdentifierDeclStatement	jpeg_scan_info scans [ MAX_SCANS ] ;	182:2:5305:5336	6683725	7	True				
ANR	6683754	IdentifierDecl	scans [ MAX_SCANS ]		6683725	0					
ANR	6683755	IdentifierDeclType	jpeg_scan_info [ MAX_SCANS ]		6683725	0					
ANR	6683756	Identifier	scans		6683725	1					
ANR	6683757	Identifier	MAX_SCANS		6683725	2					
ANR	6683758	IfStatement	"if ( ( fp = fopen ( filename , ""r"" ) ) == NULL )"		6683725	8					
ANR	6683759	Condition	"( fp = fopen ( filename , ""r"" ) ) == NULL"	184:6:5345:5379	6683725	0	True				
ANR	6683760	EqualityExpression	"( fp = fopen ( filename , ""r"" ) ) == NULL"		6683725	0		==			
ANR	6683761	AssignmentExpression	"fp = fopen ( filename , ""r"" )"		6683725	0		=			
ANR	6683762	Identifier	fp		6683725	0					
ANR	6683763	CallExpression	"fopen ( filename , ""r"" )"		6683725	1					
ANR	6683764	Callee	fopen		6683725	0					
ANR	6683765	Identifier	fopen		6683725	0					
ANR	6683766	ArgumentList	filename		6683725	1					
ANR	6683767	Argument	filename		6683725	0					
ANR	6683768	Identifier	filename		6683725	0					
ANR	6683769	Argument	"""r"""		6683725	1					
ANR	6683770	PrimaryExpression	"""r"""		6683725	0					
ANR	6683771	Identifier	NULL		6683725	1					
ANR	6683772	CompoundStatement		9:43:217:217	6683725	1					
ANR	6683773	ExpressionStatement	"fprintf ( stderr , ""Can't open scan definition file %s\\n"" , filename )"	185:4:5388:5453	6683725	0	True				
ANR	6683774	CallExpression	"fprintf ( stderr , ""Can't open scan definition file %s\\n"" , filename )"		6683725	0					
ANR	6683775	Callee	fprintf		6683725	0					
ANR	6683776	Identifier	fprintf		6683725	0					
ANR	6683777	ArgumentList	stderr		6683725	1					
ANR	6683778	Argument	stderr		6683725	0					
ANR	6683779	Identifier	stderr		6683725	0					
ANR	6683780	Argument	"""Can't open scan definition file %s\\n"""		6683725	1					
ANR	6683781	PrimaryExpression	"""Can't open scan definition file %s\\n"""		6683725	0					
ANR	6683782	Argument	filename		6683725	2					
ANR	6683783	Identifier	filename		6683725	0					
ANR	6683784	ReturnStatement	return FALSE ;	186:4:5459:5471	6683725	1	True				
ANR	6683785	Identifier	FALSE		6683725	0					
ANR	6683786	ExpressionStatement	scanptr = scans	188:2:5479:5494	6683725	9	True				
ANR	6683787	AssignmentExpression	scanptr = scans		6683725	0		=			
ANR	6683788	Identifier	scanptr		6683725	0					
ANR	6683789	Identifier	scans		6683725	1					
ANR	6683790	ExpressionStatement	scanno = 0	189:2:5498:5508	6683725	10	True				
ANR	6683791	AssignmentExpression	scanno = 0		6683725	0		=			
ANR	6683792	Identifier	scanno		6683725	0					
ANR	6683793	PrimaryExpression	0		6683725	1					
ANR	6683794	WhileStatement	"while ( read_scan_integer ( fp , & val , & termchar ) )"		6683725	11					
ANR	6683795	Condition	"read_scan_integer ( fp , & val , & termchar )"	191:9:5520:5557	6683725	0	True				
ANR	6683796	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6683797	Callee	read_scan_integer		6683725	0					
ANR	6683798	Identifier	read_scan_integer		6683725	0					
ANR	6683799	ArgumentList	fp		6683725	1					
ANR	6683800	Argument	fp		6683725	0					
ANR	6683801	Identifier	fp		6683725	0					
ANR	6683802	Argument	& val		6683725	1					
ANR	6683803	UnaryOperationExpression	& val		6683725	0					
ANR	6683804	UnaryOperator	&		6683725	0					
ANR	6683805	Identifier	val		6683725	1					
ANR	6683806	Argument	& termchar		6683725	2					
ANR	6683807	UnaryOperationExpression	& termchar		6683725	0					
ANR	6683808	UnaryOperator	&		6683725	0					
ANR	6683809	Identifier	termchar		6683725	1					
ANR	6683810	CompoundStatement		16:49:395:395	6683725	1					
ANR	6683811	IfStatement	if ( scanno >= MAX_SCANS )		6683725	0					
ANR	6683812	Condition	scanno >= MAX_SCANS	192:8:5570:5588	6683725	0	True				
ANR	6683813	RelationalExpression	scanno >= MAX_SCANS		6683725	0		>=			
ANR	6683814	Identifier	scanno		6683725	0					
ANR	6683815	Identifier	MAX_SCANS		6683725	1					
ANR	6683816	CompoundStatement		17:29:426:426	6683725	1					
ANR	6683817	ExpressionStatement	"fprintf ( stderr , ""Too many scans defined in file %s\\n"" , filename )"	193:6:5599:5663	6683725	0	True				
ANR	6683818	CallExpression	"fprintf ( stderr , ""Too many scans defined in file %s\\n"" , filename )"		6683725	0					
ANR	6683819	Callee	fprintf		6683725	0					
ANR	6683820	Identifier	fprintf		6683725	0					
ANR	6683821	ArgumentList	stderr		6683725	1					
ANR	6683822	Argument	stderr		6683725	0					
ANR	6683823	Identifier	stderr		6683725	0					
ANR	6683824	Argument	"""Too many scans defined in file %s\\n"""		6683725	1					
ANR	6683825	PrimaryExpression	"""Too many scans defined in file %s\\n"""		6683725	0					
ANR	6683826	Argument	filename		6683725	2					
ANR	6683827	Identifier	filename		6683725	0					
ANR	6683828	ExpressionStatement	fclose ( fp )	194:6:5671:5681	6683725	1	True				
ANR	6683829	CallExpression	fclose ( fp )		6683725	0					
ANR	6683830	Callee	fclose		6683725	0					
ANR	6683831	Identifier	fclose		6683725	0					
ANR	6683832	ArgumentList	fp		6683725	1					
ANR	6683833	Argument	fp		6683725	0					
ANR	6683834	Identifier	fp		6683725	0					
ANR	6683835	ReturnStatement	return FALSE ;	195:6:5689:5701	6683725	2	True				
ANR	6683836	Identifier	FALSE		6683725	0					
ANR	6683837	ExpressionStatement	scanptr -> component_index [ 0 ] = ( int ) val	197:4:5713:5752	6683725	1	True				
ANR	6683838	AssignmentExpression	scanptr -> component_index [ 0 ] = ( int ) val		6683725	0		=			
ANR	6683839	ArrayIndexing	scanptr -> component_index [ 0 ]		6683725	0					
ANR	6683840	PtrMemberAccess	scanptr -> component_index		6683725	0					
ANR	6683841	Identifier	scanptr		6683725	0					
ANR	6683842	Identifier	component_index		6683725	1					
ANR	6683843	PrimaryExpression	0		6683725	1					
ANR	6683844	CastExpression	( int ) val		6683725	1					
ANR	6683845	CastTarget	int		6683725	0					
ANR	6683846	Identifier	val		6683725	1					
ANR	6683847	ExpressionStatement	ncomps = 1	198:4:5758:5768	6683725	2	True				
ANR	6683848	AssignmentExpression	ncomps = 1		6683725	0		=			
ANR	6683849	Identifier	ncomps		6683725	0					
ANR	6683850	PrimaryExpression	1		6683725	1					
ANR	6683851	WhileStatement	while ( termchar == ' ' )		6683725	3					
ANR	6683852	Condition	termchar == ' '	199:11:5781:5795	6683725	0	True				
ANR	6683853	EqualityExpression	termchar == ' '		6683725	0		==			
ANR	6683854	Identifier	termchar		6683725	0					
ANR	6683855	PrimaryExpression	' '		6683725	1					
ANR	6683856	CompoundStatement		24:28:633:633	6683725	1					
ANR	6683857	IfStatement	if ( ncomps >= MAX_COMPS_IN_SCAN )		6683725	0					
ANR	6683858	Condition	ncomps >= MAX_COMPS_IN_SCAN	200:10:5810:5836	6683725	0	True				
ANR	6683859	RelationalExpression	ncomps >= MAX_COMPS_IN_SCAN		6683725	0		>=			
ANR	6683860	Identifier	ncomps		6683725	0					
ANR	6683861	Identifier	MAX_COMPS_IN_SCAN		6683725	1					
ANR	6683862	CompoundStatement		25:39:674:674	6683725	1					
ANR	6683863	ExpressionStatement	"fprintf ( stderr , ""Too many components in one scan in file %s\\n"" , filename )"	201:1:5842:5917	6683725	0	True				
ANR	6683864	CallExpression	"fprintf ( stderr , ""Too many components in one scan in file %s\\n"" , filename )"		6683725	0					
ANR	6683865	Callee	fprintf		6683725	0					
ANR	6683866	Identifier	fprintf		6683725	0					
ANR	6683867	ArgumentList	stderr		6683725	1					
ANR	6683868	Argument	stderr		6683725	0					
ANR	6683869	Identifier	stderr		6683725	0					
ANR	6683870	Argument	"""Too many components in one scan in file %s\\n"""		6683725	1					
ANR	6683871	PrimaryExpression	"""Too many components in one scan in file %s\\n"""		6683725	0					
ANR	6683872	Argument	filename		6683725	2					
ANR	6683873	Identifier	filename		6683725	0					
ANR	6683874	ExpressionStatement	fclose ( fp )	203:1:5920:5930	6683725	1	True				
ANR	6683875	CallExpression	fclose ( fp )		6683725	0					
ANR	6683876	Callee	fclose		6683725	0					
ANR	6683877	Identifier	fclose		6683725	0					
ANR	6683878	ArgumentList	fp		6683725	1					
ANR	6683879	Argument	fp		6683725	0					
ANR	6683880	Identifier	fp		6683725	0					
ANR	6683881	ReturnStatement	return FALSE ;	204:1:5933:5945	6683725	2	True				
ANR	6683882	Identifier	FALSE		6683725	0					
ANR	6683883	IfStatement	"if ( ! read_scan_integer ( fp , & val , & termchar ) )"		6683725	1					
ANR	6683884	Condition	"! read_scan_integer ( fp , & val , & termchar )"	206:10:5965:6004	6683725	0	True				
ANR	6683885	UnaryOperationExpression	"! read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6683886	UnaryOperator	!		6683725	0					
ANR	6683887	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	1					
ANR	6683888	Callee	read_scan_integer		6683725	0					
ANR	6683889	Identifier	read_scan_integer		6683725	0					
ANR	6683890	ArgumentList	fp		6683725	1					
ANR	6683891	Argument	fp		6683725	0					
ANR	6683892	Identifier	fp		6683725	0					
ANR	6683893	Argument	& val		6683725	1					
ANR	6683894	UnaryOperationExpression	& val		6683725	0					
ANR	6683895	UnaryOperator	&		6683725	0					
ANR	6683896	Identifier	val		6683725	1					
ANR	6683897	Argument	& termchar		6683725	2					
ANR	6683898	UnaryOperationExpression	& termchar		6683725	0					
ANR	6683899	UnaryOperator	&		6683725	0					
ANR	6683900	Identifier	termchar		6683725	1					
ANR	6683901	GotoStatement	goto bogus ;	207:1:6008:6018	6683725	1	True				
ANR	6683902	Identifier	bogus		6683725	0					
ANR	6683903	ExpressionStatement	scanptr -> component_index [ ncomps ] = ( int ) val	208:6:6026:6070	6683725	2	True				
ANR	6683904	AssignmentExpression	scanptr -> component_index [ ncomps ] = ( int ) val		6683725	0		=			
ANR	6683905	ArrayIndexing	scanptr -> component_index [ ncomps ]		6683725	0					
ANR	6683906	PtrMemberAccess	scanptr -> component_index		6683725	0					
ANR	6683907	Identifier	scanptr		6683725	0					
ANR	6683908	Identifier	component_index		6683725	1					
ANR	6683909	Identifier	ncomps		6683725	1					
ANR	6683910	CastExpression	( int ) val		6683725	1					
ANR	6683911	CastTarget	int		6683725	0					
ANR	6683912	Identifier	val		6683725	1					
ANR	6683913	ExpressionStatement	ncomps ++	209:6:6078:6086	6683725	3	True				
ANR	6683914	PostIncDecOperationExpression	ncomps ++		6683725	0					
ANR	6683915	Identifier	ncomps		6683725	0					
ANR	6683916	IncDec	++		6683725	1					
ANR	6683917	ExpressionStatement	scanptr -> comps_in_scan = ncomps	211:4:6098:6129	6683725	4	True				
ANR	6683918	AssignmentExpression	scanptr -> comps_in_scan = ncomps		6683725	0		=			
ANR	6683919	PtrMemberAccess	scanptr -> comps_in_scan		6683725	0					
ANR	6683920	Identifier	scanptr		6683725	0					
ANR	6683921	Identifier	comps_in_scan		6683725	1					
ANR	6683922	Identifier	ncomps		6683725	1					
ANR	6683923	IfStatement	if ( termchar == ':' )		6683725	5					
ANR	6683924	Condition	termchar == ':'	212:8:6139:6153	6683725	0	True				
ANR	6683925	EqualityExpression	termchar == ':'		6683725	0		==			
ANR	6683926	Identifier	termchar		6683725	0					
ANR	6683927	PrimaryExpression	':'		6683725	1					
ANR	6683928	CompoundStatement		37:25:991:991	6683725	1					
ANR	6683929	IfStatement	"if ( ! read_scan_integer ( fp , & val , & termchar ) || termchar != ' ' )"		6683725	0					
ANR	6683930	Condition	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"	213:10:6168:6226	6683725	0	True				
ANR	6683931	OrExpression	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"		6683725	0		||			
ANR	6683932	UnaryOperationExpression	"! read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6683933	UnaryOperator	!		6683725	0					
ANR	6683934	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	1					
ANR	6683935	Callee	read_scan_integer		6683725	0					
ANR	6683936	Identifier	read_scan_integer		6683725	0					
ANR	6683937	ArgumentList	fp		6683725	1					
ANR	6683938	Argument	fp		6683725	0					
ANR	6683939	Identifier	fp		6683725	0					
ANR	6683940	Argument	& val		6683725	1					
ANR	6683941	UnaryOperationExpression	& val		6683725	0					
ANR	6683942	UnaryOperator	&		6683725	0					
ANR	6683943	Identifier	val		6683725	1					
ANR	6683944	Argument	& termchar		6683725	2					
ANR	6683945	UnaryOperationExpression	& termchar		6683725	0					
ANR	6683946	UnaryOperator	&		6683725	0					
ANR	6683947	Identifier	termchar		6683725	1					
ANR	6683948	EqualityExpression	termchar != ' '		6683725	1		!=			
ANR	6683949	Identifier	termchar		6683725	0					
ANR	6683950	PrimaryExpression	' '		6683725	1					
ANR	6683951	GotoStatement	goto bogus ;	214:1:6230:6240	6683725	1	True				
ANR	6683952	Identifier	bogus		6683725	0					
ANR	6683953	ExpressionStatement	scanptr -> Ss = ( int ) val	215:6:6248:6271	6683725	1	True				
ANR	6683954	AssignmentExpression	scanptr -> Ss = ( int ) val		6683725	0		=			
ANR	6683955	PtrMemberAccess	scanptr -> Ss		6683725	0					
ANR	6683956	Identifier	scanptr		6683725	0					
ANR	6683957	Identifier	Ss		6683725	1					
ANR	6683958	CastExpression	( int ) val		6683725	1					
ANR	6683959	CastTarget	int		6683725	0					
ANR	6683960	Identifier	val		6683725	1					
ANR	6683961	IfStatement	"if ( ! read_scan_integer ( fp , & val , & termchar ) || termchar != ' ' )"		6683725	2					
ANR	6683962	Condition	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"	216:10:6283:6341	6683725	0	True				
ANR	6683963	OrExpression	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"		6683725	0		||			
ANR	6683964	UnaryOperationExpression	"! read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6683965	UnaryOperator	!		6683725	0					
ANR	6683966	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	1					
ANR	6683967	Callee	read_scan_integer		6683725	0					
ANR	6683968	Identifier	read_scan_integer		6683725	0					
ANR	6683969	ArgumentList	fp		6683725	1					
ANR	6683970	Argument	fp		6683725	0					
ANR	6683971	Identifier	fp		6683725	0					
ANR	6683972	Argument	& val		6683725	1					
ANR	6683973	UnaryOperationExpression	& val		6683725	0					
ANR	6683974	UnaryOperator	&		6683725	0					
ANR	6683975	Identifier	val		6683725	1					
ANR	6683976	Argument	& termchar		6683725	2					
ANR	6683977	UnaryOperationExpression	& termchar		6683725	0					
ANR	6683978	UnaryOperator	&		6683725	0					
ANR	6683979	Identifier	termchar		6683725	1					
ANR	6683980	EqualityExpression	termchar != ' '		6683725	1		!=			
ANR	6683981	Identifier	termchar		6683725	0					
ANR	6683982	PrimaryExpression	' '		6683725	1					
ANR	6683983	GotoStatement	goto bogus ;	217:1:6345:6355	6683725	1	True				
ANR	6683984	Identifier	bogus		6683725	0					
ANR	6683985	ExpressionStatement	scanptr -> Se = ( int ) val	218:6:6363:6386	6683725	3	True				
ANR	6683986	AssignmentExpression	scanptr -> Se = ( int ) val		6683725	0		=			
ANR	6683987	PtrMemberAccess	scanptr -> Se		6683725	0					
ANR	6683988	Identifier	scanptr		6683725	0					
ANR	6683989	Identifier	Se		6683725	1					
ANR	6683990	CastExpression	( int ) val		6683725	1					
ANR	6683991	CastTarget	int		6683725	0					
ANR	6683992	Identifier	val		6683725	1					
ANR	6683993	IfStatement	"if ( ! read_scan_integer ( fp , & val , & termchar ) || termchar != ' ' )"		6683725	4					
ANR	6683994	Condition	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"	219:10:6398:6456	6683725	0	True				
ANR	6683995	OrExpression	"! read_scan_integer ( fp , & val , & termchar ) || termchar != ' '"		6683725	0		||			
ANR	6683996	UnaryOperationExpression	"! read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6683997	UnaryOperator	!		6683725	0					
ANR	6683998	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	1					
ANR	6683999	Callee	read_scan_integer		6683725	0					
ANR	6684000	Identifier	read_scan_integer		6683725	0					
ANR	6684001	ArgumentList	fp		6683725	1					
ANR	6684002	Argument	fp		6683725	0					
ANR	6684003	Identifier	fp		6683725	0					
ANR	6684004	Argument	& val		6683725	1					
ANR	6684005	UnaryOperationExpression	& val		6683725	0					
ANR	6684006	UnaryOperator	&		6683725	0					
ANR	6684007	Identifier	val		6683725	1					
ANR	6684008	Argument	& termchar		6683725	2					
ANR	6684009	UnaryOperationExpression	& termchar		6683725	0					
ANR	6684010	UnaryOperator	&		6683725	0					
ANR	6684011	Identifier	termchar		6683725	1					
ANR	6684012	EqualityExpression	termchar != ' '		6683725	1		!=			
ANR	6684013	Identifier	termchar		6683725	0					
ANR	6684014	PrimaryExpression	' '		6683725	1					
ANR	6684015	GotoStatement	goto bogus ;	220:1:6460:6470	6683725	1	True				
ANR	6684016	Identifier	bogus		6683725	0					
ANR	6684017	ExpressionStatement	scanptr -> Ah = ( int ) val	221:6:6478:6501	6683725	5	True				
ANR	6684018	AssignmentExpression	scanptr -> Ah = ( int ) val		6683725	0		=			
ANR	6684019	PtrMemberAccess	scanptr -> Ah		6683725	0					
ANR	6684020	Identifier	scanptr		6683725	0					
ANR	6684021	Identifier	Ah		6683725	1					
ANR	6684022	CastExpression	( int ) val		6683725	1					
ANR	6684023	CastTarget	int		6683725	0					
ANR	6684024	Identifier	val		6683725	1					
ANR	6684025	IfStatement	"if ( ! read_scan_integer ( fp , & val , & termchar ) )"		6683725	6					
ANR	6684026	Condition	"! read_scan_integer ( fp , & val , & termchar )"	222:10:6513:6552	6683725	0	True				
ANR	6684027	UnaryOperationExpression	"! read_scan_integer ( fp , & val , & termchar )"		6683725	0					
ANR	6684028	UnaryOperator	!		6683725	0					
ANR	6684029	CallExpression	"read_scan_integer ( fp , & val , & termchar )"		6683725	1					
ANR	6684030	Callee	read_scan_integer		6683725	0					
ANR	6684031	Identifier	read_scan_integer		6683725	0					
ANR	6684032	ArgumentList	fp		6683725	1					
ANR	6684033	Argument	fp		6683725	0					
ANR	6684034	Identifier	fp		6683725	0					
ANR	6684035	Argument	& val		6683725	1					
ANR	6684036	UnaryOperationExpression	& val		6683725	0					
ANR	6684037	UnaryOperator	&		6683725	0					
ANR	6684038	Identifier	val		6683725	1					
ANR	6684039	Argument	& termchar		6683725	2					
ANR	6684040	UnaryOperationExpression	& termchar		6683725	0					
ANR	6684041	UnaryOperator	&		6683725	0					
ANR	6684042	Identifier	termchar		6683725	1					
ANR	6684043	GotoStatement	goto bogus ;	223:1:6556:6566	6683725	1	True				
ANR	6684044	Identifier	bogus		6683725	0					
ANR	6684045	ExpressionStatement	scanptr -> Al = ( int ) val	224:6:6574:6597	6683725	7	True				
ANR	6684046	AssignmentExpression	scanptr -> Al = ( int ) val		6683725	0		=			
ANR	6684047	PtrMemberAccess	scanptr -> Al		6683725	0					
ANR	6684048	Identifier	scanptr		6683725	0					
ANR	6684049	Identifier	Al		6683725	1					
ANR	6684050	CastExpression	( int ) val		6683725	1					
ANR	6684051	CastTarget	int		6683725	0					
ANR	6684052	Identifier	val		6683725	1					
ANR	6684053	ElseStatement	else		6683725	0					
ANR	6684054	CompoundStatement		50:11:1445:1445	6683725	0					
ANR	6684055	ExpressionStatement	scanptr -> Ss = 0	227:6:6661:6676	6683725	0	True				
ANR	6684056	AssignmentExpression	scanptr -> Ss = 0		6683725	0		=			
ANR	6684057	PtrMemberAccess	scanptr -> Ss		6683725	0					
ANR	6684058	Identifier	scanptr		6683725	0					
ANR	6684059	Identifier	Ss		6683725	1					
ANR	6684060	PrimaryExpression	0		6683725	1					
ANR	6684061	ExpressionStatement	scanptr -> Se = DCTSIZE2 - 1	228:6:6684:6708	6683725	1	True				
ANR	6684062	AssignmentExpression	scanptr -> Se = DCTSIZE2 - 1		6683725	0		=			
ANR	6684063	PtrMemberAccess	scanptr -> Se		6683725	0					
ANR	6684064	Identifier	scanptr		6683725	0					
ANR	6684065	Identifier	Se		6683725	1					
ANR	6684066	AdditiveExpression	DCTSIZE2 - 1		6683725	1		-			
ANR	6684067	Identifier	DCTSIZE2		6683725	0					
ANR	6684068	PrimaryExpression	1		6683725	1					
ANR	6684069	ExpressionStatement	scanptr -> Ah = 0	229:6:6716:6731	6683725	2	True				
ANR	6684070	AssignmentExpression	scanptr -> Ah = 0		6683725	0		=			
ANR	6684071	PtrMemberAccess	scanptr -> Ah		6683725	0					
ANR	6684072	Identifier	scanptr		6683725	0					
ANR	6684073	Identifier	Ah		6683725	1					
ANR	6684074	PrimaryExpression	0		6683725	1					
ANR	6684075	ExpressionStatement	scanptr -> Al = 0	230:6:6739:6754	6683725	3	True				
ANR	6684076	AssignmentExpression	scanptr -> Al = 0		6683725	0		=			
ANR	6684077	PtrMemberAccess	scanptr -> Al		6683725	0					
ANR	6684078	Identifier	scanptr		6683725	0					
ANR	6684079	Identifier	Al		6683725	1					
ANR	6684080	PrimaryExpression	0		6683725	1					
ANR	6684081	IfStatement	if ( termchar != ';' && termchar != EOF )		6683725	6					
ANR	6684082	Condition	termchar != ';' && termchar != EOF	232:8:6770:6803	6683725	0	True				
ANR	6684083	AndExpression	termchar != ';' && termchar != EOF		6683725	0		&&			
ANR	6684084	EqualityExpression	termchar != ';'		6683725	0		!=			
ANR	6684085	Identifier	termchar		6683725	0					
ANR	6684086	PrimaryExpression	';'		6683725	1					
ANR	6684087	EqualityExpression	termchar != EOF		6683725	1		!=			
ANR	6684088	Identifier	termchar		6683725	0					
ANR	6684089	Identifier	EOF		6683725	1					
ANR	6684090	CompoundStatement		57:44:1641:1641	6683725	1					
ANR	6684091	Label	bogus :	233:0:6808:6813	6683725	0	True				
ANR	6684092	Identifier	bogus		6683725	0					
ANR	6684093	ExpressionStatement	"fprintf ( stderr , ""Invalid scan entry format in file %s\\n"" , filename )"	234:6:6821:6888	6683725	1	True				
ANR	6684094	CallExpression	"fprintf ( stderr , ""Invalid scan entry format in file %s\\n"" , filename )"		6683725	0					
ANR	6684095	Callee	fprintf		6683725	0					
ANR	6684096	Identifier	fprintf		6683725	0					
ANR	6684097	ArgumentList	stderr		6683725	1					
ANR	6684098	Argument	stderr		6683725	0					
ANR	6684099	Identifier	stderr		6683725	0					
ANR	6684100	Argument	"""Invalid scan entry format in file %s\\n"""		6683725	1					
ANR	6684101	PrimaryExpression	"""Invalid scan entry format in file %s\\n"""		6683725	0					
ANR	6684102	Argument	filename		6683725	2					
ANR	6684103	Identifier	filename		6683725	0					
ANR	6684104	ExpressionStatement	fclose ( fp )	235:6:6896:6906	6683725	2	True				
ANR	6684105	CallExpression	fclose ( fp )		6683725	0					
ANR	6684106	Callee	fclose		6683725	0					
ANR	6684107	Identifier	fclose		6683725	0					
ANR	6684108	ArgumentList	fp		6683725	1					
ANR	6684109	Argument	fp		6683725	0					
ANR	6684110	Identifier	fp		6683725	0					
ANR	6684111	ReturnStatement	return FALSE ;	236:6:6914:6926	6683725	3	True				
ANR	6684112	Identifier	FALSE		6683725	0					
ANR	6684113	ExpressionStatement	"scanptr ++ , scanno ++"	238:4:6938:6957	6683725	7	True				
ANR	6684114	Expression	"scanptr ++ , scanno ++"		6683725	0					
ANR	6684115	PostIncDecOperationExpression	scanptr ++		6683725	0					
ANR	6684116	Identifier	scanptr		6683725	0					
ANR	6684117	IncDec	++		6683725	1					
ANR	6684118	PostIncDecOperationExpression	scanno ++		6683725	1					
ANR	6684119	Identifier	scanno		6683725	0					
ANR	6684120	IncDec	++		6683725	1					
ANR	6684121	IfStatement	if ( termchar != EOF )		6683725	12					
ANR	6684122	Condition	termchar != EOF	241:6:6970:6984	6683725	0	True				
ANR	6684123	EqualityExpression	termchar != EOF		6683725	0		!=			
ANR	6684124	Identifier	termchar		6683725	0					
ANR	6684125	Identifier	EOF		6683725	1					
ANR	6684126	CompoundStatement		66:23:1822:1822	6683725	1					
ANR	6684127	ExpressionStatement	"fprintf ( stderr , ""Non-numeric data in file %s\\n"" , filename )"	242:4:6993:7051	6683725	0	True				
ANR	6684128	CallExpression	"fprintf ( stderr , ""Non-numeric data in file %s\\n"" , filename )"		6683725	0					
ANR	6684129	Callee	fprintf		6683725	0					
ANR	6684130	Identifier	fprintf		6683725	0					
ANR	6684131	ArgumentList	stderr		6683725	1					
ANR	6684132	Argument	stderr		6683725	0					
ANR	6684133	Identifier	stderr		6683725	0					
ANR	6684134	Argument	"""Non-numeric data in file %s\\n"""		6683725	1					
ANR	6684135	PrimaryExpression	"""Non-numeric data in file %s\\n"""		6683725	0					
ANR	6684136	Argument	filename		6683725	2					
ANR	6684137	Identifier	filename		6683725	0					
ANR	6684138	ExpressionStatement	fclose ( fp )	243:4:7057:7067	6683725	1	True				
ANR	6684139	CallExpression	fclose ( fp )		6683725	0					
ANR	6684140	Callee	fclose		6683725	0					
ANR	6684141	Identifier	fclose		6683725	0					
ANR	6684142	ArgumentList	fp		6683725	1					
ANR	6684143	Argument	fp		6683725	0					
ANR	6684144	Identifier	fp		6683725	0					
ANR	6684145	ReturnStatement	return FALSE ;	244:4:7073:7085	6683725	2	True				
ANR	6684146	Identifier	FALSE		6683725	0					
ANR	6684147	IfStatement	if ( scanno > 0 )		6683725	13					
ANR	6684148	Condition	scanno > 0	247:6:7098:7107	6683725	0	True				
ANR	6684149	RelationalExpression	scanno > 0		6683725	0		>			
ANR	6684150	Identifier	scanno		6683725	0					
ANR	6684151	PrimaryExpression	0		6683725	1					
ANR	6684152	CompoundStatement		72:18:1945:1945	6683725	1					
ANR	6684153	ExpressionStatement	"scanptr = ( jpeg_scan_info * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , scanno * SIZEOF ( jpeg_scan_info ) )"	252:4:7335:7471	6683725	0	True				
ANR	6684154	AssignmentExpression	"scanptr = ( jpeg_scan_info * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , scanno * SIZEOF ( jpeg_scan_info ) )"		6683725	0		=			
ANR	6684155	Identifier	scanptr		6683725	0					
ANR	6684156	CastExpression	"( jpeg_scan_info * ) ( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , scanno * SIZEOF ( jpeg_scan_info ) )"		6683725	1					
ANR	6684157	CastTarget	jpeg_scan_info *		6683725	0					
ANR	6684158	CallExpression	"( * cinfo -> mem -> alloc_small ) ( ( j_common_ptr ) cinfo , JPOOL_IMAGE , scanno * SIZEOF ( jpeg_scan_info ) )"		6683725	1					
ANR	6684159	Callee	* cinfo -> mem -> alloc_small		6683725	0					
ANR	6684160	UnaryOperationExpression	* cinfo -> mem -> alloc_small		6683725	0					
ANR	6684161	UnaryOperator	*		6683725	0					
ANR	6684162	PtrMemberAccess	cinfo -> mem -> alloc_small		6683725	1					
ANR	6684163	PtrMemberAccess	cinfo -> mem		6683725	0					
ANR	6684164	Identifier	cinfo		6683725	0					
ANR	6684165	Identifier	mem		6683725	1					
ANR	6684166	Identifier	alloc_small		6683725	1					
ANR	6684167	ArgumentList	( j_common_ptr ) cinfo		6683725	1					
ANR	6684168	Argument	( j_common_ptr ) cinfo		6683725	0					
ANR	6684169	CastExpression	( j_common_ptr ) cinfo		6683725	0					
ANR	6684170	CastTarget	j_common_ptr		6683725	0					
ANR	6684171	Identifier	cinfo		6683725	1					
ANR	6684172	Argument	JPOOL_IMAGE		6683725	1					
ANR	6684173	Identifier	JPOOL_IMAGE		6683725	0					
ANR	6684174	Argument	scanno * SIZEOF ( jpeg_scan_info )		6683725	2					
ANR	6684175	MultiplicativeExpression	scanno * SIZEOF ( jpeg_scan_info )		6683725	0		*			
ANR	6684176	Identifier	scanno		6683725	0					
ANR	6684177	CallExpression	SIZEOF ( jpeg_scan_info )		6683725	1					
ANR	6684178	Callee	SIZEOF		6683725	0					
ANR	6684179	Identifier	SIZEOF		6683725	0					
ANR	6684180	ArgumentList	jpeg_scan_info		6683725	1					
ANR	6684181	Argument	jpeg_scan_info		6683725	0					
ANR	6684182	Identifier	jpeg_scan_info		6683725	0					
ANR	6684183	ExpressionStatement	"MEMCOPY ( scanptr , scans , scanno * SIZEOF ( jpeg_scan_info ) )"	255:4:7477:7533	6683725	1	True				
ANR	6684184	CallExpression	"MEMCOPY ( scanptr , scans , scanno * SIZEOF ( jpeg_scan_info ) )"		6683725	0					
ANR	6684185	Callee	MEMCOPY		6683725	0					
ANR	6684186	Identifier	MEMCOPY		6683725	0					
ANR	6684187	ArgumentList	scanptr		6683725	1					
ANR	6684188	Argument	scanptr		6683725	0					
ANR	6684189	Identifier	scanptr		6683725	0					
ANR	6684190	Argument	scans		6683725	1					
ANR	6684191	Identifier	scans		6683725	0					
ANR	6684192	Argument	scanno * SIZEOF ( jpeg_scan_info )		6683725	2					
ANR	6684193	MultiplicativeExpression	scanno * SIZEOF ( jpeg_scan_info )		6683725	0		*			
ANR	6684194	Identifier	scanno		6683725	0					
ANR	6684195	CallExpression	SIZEOF ( jpeg_scan_info )		6683725	1					
ANR	6684196	Callee	SIZEOF		6683725	0					
ANR	6684197	Identifier	SIZEOF		6683725	0					
ANR	6684198	ArgumentList	jpeg_scan_info		6683725	1					
ANR	6684199	Argument	jpeg_scan_info		6683725	0					
ANR	6684200	Identifier	jpeg_scan_info		6683725	0					
ANR	6684201	ExpressionStatement	cinfo -> scan_info = scanptr	256:4:7539:7565	6683725	2	True				
ANR	6684202	AssignmentExpression	cinfo -> scan_info = scanptr		6683725	0		=			
ANR	6684203	PtrMemberAccess	cinfo -> scan_info		6683725	0					
ANR	6684204	Identifier	cinfo		6683725	0					
ANR	6684205	Identifier	scan_info		6683725	1					
ANR	6684206	Identifier	scanptr		6683725	1					
ANR	6684207	ExpressionStatement	cinfo -> num_scans = scanno	257:4:7571:7596	6683725	3	True				
ANR	6684208	AssignmentExpression	cinfo -> num_scans = scanno		6683725	0		=			
ANR	6684209	PtrMemberAccess	cinfo -> num_scans		6683725	0					
ANR	6684210	Identifier	cinfo		6683725	0					
ANR	6684211	Identifier	num_scans		6683725	1					
ANR	6684212	Identifier	scanno		6683725	1					
ANR	6684213	ExpressionStatement	fclose ( fp )	260:2:7605:7615	6683725	14	True				
ANR	6684214	CallExpression	fclose ( fp )		6683725	0					
ANR	6684215	Callee	fclose		6683725	0					
ANR	6684216	Identifier	fclose		6683725	0					
ANR	6684217	ArgumentList	fp		6683725	1					
ANR	6684218	Argument	fp		6683725	0					
ANR	6684219	Identifier	fp		6683725	0					
ANR	6684220	ReturnStatement	return TRUE ;	261:2:7619:7630	6683725	15	True				
ANR	6684221	Identifier	TRUE		6683725	0					
ANR	6684222	Identifier	read_scan_script		6683725	1					
ANR	6684223	ParameterList	"j_compress_ptr cinfo , char * filename"		6683725	2					
ANR	6684224	Parameter	j_compress_ptr cinfo	160:18:4260:4279	6683725	0	True				
ANR	6684225	ParameterType	j_compress_ptr		6683725	0					
ANR	6684226	Identifier	cinfo		6683725	1					
ANR	6684227	Parameter	char * filename	160:40:4282:4296	6683725	1	True				
ANR	6684228	ParameterType	char *		6683725	0					
ANR	6684229	Identifier	filename		6683725	1					
ANR	6684230	CFGEntryNode	ENTRY		6683725		True				
ANR	6684231	CFGExitNode	EXIT		6683725		True				
ANR	6684232	Symbol	& val		6683725						
ANR	6684233	Symbol	* * cinfo		6683725						
ANR	6684234	Symbol	scanptr -> component_index		6683725						
ANR	6684235	Symbol	scanptr -> Se		6683725						
ANR	6684236	Symbol	cinfo -> scan_info		6683725						
ANR	6684237	Symbol	MAX_SCANS		6683725						
ANR	6684238	Symbol	SIZEOF		6683725						
ANR	6684239	Symbol	fp		6683725						
ANR	6684240	Symbol	ncomps		6683725						
ANR	6684241	Symbol	scanptr -> comps_in_scan		6683725						
ANR	6684242	Symbol	* cinfo -> mem		6683725						
ANR	6684243	Symbol	read_scan_integer		6683725						
ANR	6684244	Symbol	scans		6683725						
ANR	6684245	Symbol	cinfo -> mem		6683725						
ANR	6684246	Symbol	termchar		6683725						
ANR	6684247	Symbol	MAX_COMPS_IN_SCAN		6683725						
ANR	6684248	Symbol	* cinfo -> mem -> alloc_small		6683725						
ANR	6684249	Symbol	* ncomps		6683725						
ANR	6684250	Symbol	* scanptr		6683725						
ANR	6684251	Symbol	EOF		6683725						
ANR	6684252	Symbol	* cinfo		6683725						
ANR	6684253	Symbol	* * scanptr		6683725						
ANR	6684254	Symbol	scanno		6683725						
ANR	6684255	Symbol	val		6683725						
ANR	6684256	Symbol	DCTSIZE2		6683725						
ANR	6684257	Symbol	fopen		6683725						
ANR	6684258	Symbol	* * cinfo -> mem		6683725						
ANR	6684259	Symbol	NULL		6683725						
ANR	6684260	Symbol	cinfo -> num_scans		6683725						
ANR	6684261	Symbol	cinfo -> mem -> alloc_small		6683725						
ANR	6684262	Symbol	TRUE		6683725						
ANR	6684263	Symbol	JPOOL_IMAGE		6683725						
ANR	6684264	Symbol	jpeg_scan_info		6683725						
ANR	6684265	Symbol	stderr		6683725						
ANR	6684266	Symbol	scanptr -> Ah		6683725						
ANR	6684267	Symbol	filename		6683725						
ANR	6684268	Symbol	cinfo		6683725						
ANR	6684269	Symbol	& termchar		6683725						
ANR	6684270	Symbol	scanptr -> Ss		6683725						
ANR	6684271	Symbol	scanptr		6683725						
ANR	6684272	Symbol	* * * cinfo		6683725						
ANR	6684273	Symbol	* scanptr -> component_index		6683725						
ANR	6684274	Symbol	FALSE		6683725						
ANR	6684275	Symbol	scanptr -> Al		6683725						
ANR	6684276	Function	set_quality_ratings	268:0:7694:8673							
ANR	6684277	FunctionDef	"set_quality_ratings (j_compress_ptr cinfo , char * arg , boolean force_baseline)"		6684276	0					
ANR	6684278	CompoundStatement		273:0:7934:8673	6684276	0					
ANR	6684279	IdentifierDeclStatement	int val = 75 ;	274:2:7938:7950	6684276	0	True				
ANR	6684280	IdentifierDecl	val = 75		6684276	0					
ANR	6684281	IdentifierDeclType	int		6684276	0					
ANR	6684282	Identifier	val		6684276	1					
ANR	6684283	AssignmentExpression	val = 75		6684276	2		=			
ANR	6684284	Identifier	val		6684276	0					
ANR	6684285	PrimaryExpression	75		6684276	1					
ANR	6684286	IdentifierDeclStatement	int tblno ;	275:2:7976:7985	6684276	1	True				
ANR	6684287	IdentifierDecl	tblno		6684276	0					
ANR	6684288	IdentifierDeclType	int		6684276	0					
ANR	6684289	Identifier	tblno		6684276	1					
ANR	6684290	IdentifierDeclStatement	char ch ;	276:2:7989:7996	6684276	2	True				
ANR	6684291	IdentifierDecl	ch		6684276	0					
ANR	6684292	IdentifierDeclType	char		6684276	0					
ANR	6684293	Identifier	ch		6684276	1					
ANR	6684294	ForStatement	for ( tblno = 0 ; tblno < NUM_QUANT_TBLS ; tblno ++ )		6684276	3					
ANR	6684295	ForInit	tblno = 0 ;	278:7:8006:8015	6684276	0	True				
ANR	6684296	AssignmentExpression	tblno = 0		6684276	0		=			
ANR	6684297	Identifier	tblno		6684276	0					
ANR	6684298	PrimaryExpression	0		6684276	1					
ANR	6684299	Condition	tblno < NUM_QUANT_TBLS	278:18:8017:8038	6684276	1	True				
ANR	6684300	RelationalExpression	tblno < NUM_QUANT_TBLS		6684276	0		<			
ANR	6684301	Identifier	tblno		6684276	0					
ANR	6684302	Identifier	NUM_QUANT_TBLS		6684276	1					
ANR	6684303	PostIncDecOperationExpression	tblno ++	278:42:8041:8047	6684276	2	True				
ANR	6684304	Identifier	tblno		6684276	0					
ANR	6684305	IncDec	++		6684276	1					
ANR	6684306	CompoundStatement		6:51:115:115	6684276	3					
ANR	6684307	IfStatement	if ( * arg )		6684276	0					
ANR	6684308	Condition	* arg	279:8:8060:8063	6684276	0	True				
ANR	6684309	UnaryOperationExpression	* arg		6684276	0					
ANR	6684310	UnaryOperator	*		6684276	0					
ANR	6684311	Identifier	arg		6684276	1					
ANR	6684312	CompoundStatement		7:14:131:131	6684276	1					
ANR	6684313	ExpressionStatement	"ch = ','"	280:6:8074:8082	6684276	0	True				
ANR	6684314	AssignmentExpression	"ch = ','"		6684276	0		=			
ANR	6684315	Identifier	ch		6684276	0					
ANR	6684316	PrimaryExpression	"','"		6684276	1					
ANR	6684317	IfStatement	"if ( sscanf ( arg , ""%d%c"" , & val , & ch ) < 1 )"		6684276	1					
ANR	6684318	Condition	"sscanf ( arg , ""%d%c"" , & val , & ch ) < 1"	281:10:8136:8169	6684276	0	True				
ANR	6684319	RelationalExpression	"sscanf ( arg , ""%d%c"" , & val , & ch ) < 1"		6684276	0		<			
ANR	6684320	CallExpression	"sscanf ( arg , ""%d%c"" , & val , & ch )"		6684276	0					
ANR	6684321	Callee	sscanf		6684276	0					
ANR	6684322	Identifier	sscanf		6684276	0					
ANR	6684323	ArgumentList	arg		6684276	1					
ANR	6684324	Argument	arg		6684276	0					
ANR	6684325	Identifier	arg		6684276	0					
ANR	6684326	Argument	"""%d%c"""		6684276	1					
ANR	6684327	PrimaryExpression	"""%d%c"""		6684276	0					
ANR	6684328	Argument	& val		6684276	2					
ANR	6684329	UnaryOperationExpression	& val		6684276	0					
ANR	6684330	UnaryOperator	&		6684276	0					
ANR	6684331	Identifier	val		6684276	1					
ANR	6684332	Argument	& ch		6684276	3					
ANR	6684333	UnaryOperationExpression	& ch		6684276	0					
ANR	6684334	UnaryOperator	&		6684276	0					
ANR	6684335	Identifier	ch		6684276	1					
ANR	6684336	PrimaryExpression	1		6684276	1					
ANR	6684337	ReturnStatement	return FALSE ;	282:1:8173:8185	6684276	1	True				
ANR	6684338	Identifier	FALSE		6684276	0					
ANR	6684339	IfStatement	"if ( ch != ',' )"		6684276	2					
ANR	6684340	Condition	"ch != ','"	283:10:8197:8205	6684276	0	True				
ANR	6684341	EqualityExpression	"ch != ','"		6684276	0		!=			
ANR	6684342	Identifier	ch		6684276	0					
ANR	6684343	PrimaryExpression	"','"		6684276	1					
ANR	6684344	ReturnStatement	return FALSE ;	284:1:8229:8241	6684276	1	True				
ANR	6684345	Identifier	FALSE		6684276	0					
ANR	6684346	ExpressionStatement	cinfo -> q_scale_factor [ tblno ] = jpeg_quality_scaling ( val )	286:6:8309:8365	6684276	3	True				
ANR	6684347	AssignmentExpression	cinfo -> q_scale_factor [ tblno ] = jpeg_quality_scaling ( val )		6684276	0		=			
ANR	6684348	ArrayIndexing	cinfo -> q_scale_factor [ tblno ]		6684276	0					
ANR	6684349	PtrMemberAccess	cinfo -> q_scale_factor		6684276	0					
ANR	6684350	Identifier	cinfo		6684276	0					
ANR	6684351	Identifier	q_scale_factor		6684276	1					
ANR	6684352	Identifier	tblno		6684276	1					
ANR	6684353	CallExpression	jpeg_quality_scaling ( val )		6684276	1					
ANR	6684354	Callee	jpeg_quality_scaling		6684276	0					
ANR	6684355	Identifier	jpeg_quality_scaling		6684276	0					
ANR	6684356	ArgumentList	val		6684276	1					
ANR	6684357	Argument	val		6684276	0					
ANR	6684358	Identifier	val		6684276	0					
ANR	6684359	WhileStatement	"while ( * arg && * arg ++ != ',' )"		6684276	4					
ANR	6684360	Condition	"* arg && * arg ++ != ','"	287:13:8380:8400	6684276	0	True				
ANR	6684361	AndExpression	"* arg && * arg ++ != ','"		6684276	0		&&			
ANR	6684362	UnaryOperationExpression	* arg		6684276	0					
ANR	6684363	UnaryOperator	*		6684276	0					
ANR	6684364	Identifier	arg		6684276	1					
ANR	6684365	EqualityExpression	"* arg ++ != ','"		6684276	1		!=			
ANR	6684366	UnaryOperationExpression	* arg ++		6684276	0					
ANR	6684367	UnaryOperator	*		6684276	0					
ANR	6684368	PostIncDecOperationExpression	arg ++		6684276	1					
ANR	6684369	Identifier	arg		6684276	0					
ANR	6684370	IncDec	++		6684276	1					
ANR	6684371	PrimaryExpression	"','"		6684276	1					
ANR	6684372	ExpressionStatement		288:1:8448:8448	6684276	1	True				
ANR	6684373	ElseStatement	else		6684276	0					
ANR	6684374	CompoundStatement		17:11:526:526	6684276	0					
ANR	6684375	ExpressionStatement	cinfo -> q_scale_factor [ tblno ] = jpeg_quality_scaling ( val )	291:6:8543:8599	6684276	0	True				
ANR	6684376	AssignmentExpression	cinfo -> q_scale_factor [ tblno ] = jpeg_quality_scaling ( val )		6684276	0		=			
ANR	6684377	ArrayIndexing	cinfo -> q_scale_factor [ tblno ]		6684276	0					
ANR	6684378	PtrMemberAccess	cinfo -> q_scale_factor		6684276	0					
ANR	6684379	Identifier	cinfo		6684276	0					
ANR	6684380	Identifier	q_scale_factor		6684276	1					
ANR	6684381	Identifier	tblno		6684276	1					
ANR	6684382	CallExpression	jpeg_quality_scaling ( val )		6684276	1					
ANR	6684383	Callee	jpeg_quality_scaling		6684276	0					
ANR	6684384	Identifier	jpeg_quality_scaling		6684276	0					
ANR	6684385	ArgumentList	val		6684276	1					
ANR	6684386	Argument	val		6684276	0					
ANR	6684387	Identifier	val		6684276	0					
ANR	6684388	ExpressionStatement	"jpeg_default_qtables ( cinfo , force_baseline )"	294:2:8613:8656	6684276	4	True				
ANR	6684389	CallExpression	"jpeg_default_qtables ( cinfo , force_baseline )"		6684276	0					
ANR	6684390	Callee	jpeg_default_qtables		6684276	0					
ANR	6684391	Identifier	jpeg_default_qtables		6684276	0					
ANR	6684392	ArgumentList	cinfo		6684276	1					
ANR	6684393	Argument	cinfo		6684276	0					
ANR	6684394	Identifier	cinfo		6684276	0					
ANR	6684395	Argument	force_baseline		6684276	1					
ANR	6684396	Identifier	force_baseline		6684276	0					
ANR	6684397	ReturnStatement	return TRUE ;	295:2:8660:8671	6684276	5	True				
ANR	6684398	Identifier	TRUE		6684276	0					
ANR	6684399	Identifier	set_quality_ratings		6684276	1					
ANR	6684400	ParameterList	"j_compress_ptr cinfo , char * arg , boolean force_baseline"		6684276	2					
ANR	6684401	Parameter	j_compress_ptr cinfo	268:21:7715:7734	6684276	0	True				
ANR	6684402	ParameterType	j_compress_ptr		6684276	0					
ANR	6684403	Identifier	cinfo		6684276	1					
ANR	6684404	Parameter	char * arg	268:43:7737:7745	6684276	1	True				
ANR	6684405	ParameterType	char *		6684276	0					
ANR	6684406	Identifier	arg		6684276	1					
ANR	6684407	Parameter	boolean force_baseline	268:54:7748:7769	6684276	2	True				
ANR	6684408	ParameterType	boolean		6684276	0					
ANR	6684409	Identifier	force_baseline		6684276	1					
ANR	6684410	CFGEntryNode	ENTRY		6684276		True				
ANR	6684411	CFGExitNode	EXIT		6684276		True				
ANR	6684412	Symbol	val		6684276						
ANR	6684413	Symbol	& val		6684276						
ANR	6684414	Symbol	* * cinfo		6684276						
ANR	6684415	Symbol	ch		6684276						
ANR	6684416	Symbol	NUM_QUANT_TBLS		6684276						
ANR	6684417	Symbol	TRUE		6684276						
ANR	6684418	Symbol	& ch		6684276						
ANR	6684419	Symbol	tblno		6684276						
ANR	6684420	Symbol	force_baseline		6684276						
ANR	6684421	Symbol	* arg ++		6684276						
ANR	6684422	Symbol	cinfo		6684276						
ANR	6684423	Symbol	cinfo -> q_scale_factor		6684276						
ANR	6684424	Symbol	sscanf		6684276						
ANR	6684425	Symbol	jpeg_quality_scaling		6684276						
ANR	6684426	Symbol	arg		6684276						
ANR	6684427	Symbol	* tblno		6684276						
ANR	6684428	Symbol	FALSE		6684276						
ANR	6684429	Symbol	* cinfo -> q_scale_factor		6684276						
ANR	6684430	Symbol	* cinfo		6684276						
ANR	6684431	Symbol	* arg		6684276						
ANR	6684432	Function	set_quant_slots	300:0:8693:9661							
ANR	6684433	FunctionDef	"set_quant_slots (j_compress_ptr cinfo , char * arg)"		6684432	0					
ANR	6684434	CompoundStatement		305:0:8915:9661	6684432	0					
ANR	6684435	IdentifierDeclStatement	int val = 0 ;	306:2:8919:8930	6684432	0	True				
ANR	6684436	IdentifierDecl	val = 0		6684432	0					
ANR	6684437	IdentifierDeclType	int		6684432	0					
ANR	6684438	Identifier	val		6684432	1					
ANR	6684439	AssignmentExpression	val = 0		6684432	2		=			
ANR	6684440	Identifier	val		6684432	0					
ANR	6684441	PrimaryExpression	0		6684432	1					
ANR	6684442	IdentifierDeclStatement	int ci ;	307:2:8958:8964	6684432	1	True				
ANR	6684443	IdentifierDecl	ci		6684432	0					
ANR	6684444	IdentifierDeclType	int		6684432	0					
ANR	6684445	Identifier	ci		6684432	1					
ANR	6684446	IdentifierDeclStatement	char ch ;	308:2:8968:8975	6684432	2	True				
ANR	6684447	IdentifierDecl	ch		6684432	0					
ANR	6684448	IdentifierDeclType	char		6684432	0					
ANR	6684449	Identifier	ch		6684432	1					
ANR	6684450	ForStatement	for ( ci = 0 ; ci < MAX_COMPONENTS ; ci ++ )		6684432	3					
ANR	6684451	ForInit	ci = 0 ;	310:7:8985:8991	6684432	0	True				
ANR	6684452	AssignmentExpression	ci = 0		6684432	0		=			
ANR	6684453	Identifier	ci		6684432	0					
ANR	6684454	PrimaryExpression	0		6684432	1					
ANR	6684455	Condition	ci < MAX_COMPONENTS	310:15:8993:9011	6684432	1	True				
ANR	6684456	RelationalExpression	ci < MAX_COMPONENTS		6684432	0		<			
ANR	6684457	Identifier	ci		6684432	0					
ANR	6684458	Identifier	MAX_COMPONENTS		6684432	1					
ANR	6684459	PostIncDecOperationExpression	ci ++	310:36:9014:9017	6684432	2	True				
ANR	6684460	Identifier	ci		6684432	0					
ANR	6684461	IncDec	++		6684432	1					
ANR	6684462	CompoundStatement		6:42:104:104	6684432	3					
ANR	6684463	IfStatement	if ( * arg )		6684432	0					
ANR	6684464	Condition	* arg	311:8:9030:9033	6684432	0	True				
ANR	6684465	UnaryOperationExpression	* arg		6684432	0					
ANR	6684466	UnaryOperator	*		6684432	0					
ANR	6684467	Identifier	arg		6684432	1					
ANR	6684468	CompoundStatement		7:14:120:120	6684432	1					
ANR	6684469	ExpressionStatement	"ch = ','"	312:6:9044:9052	6684432	0	True				
ANR	6684470	AssignmentExpression	"ch = ','"		6684432	0		=			
ANR	6684471	Identifier	ch		6684432	0					
ANR	6684472	PrimaryExpression	"','"		6684432	1					
ANR	6684473	IfStatement	"if ( sscanf ( arg , ""%d%c"" , & val , & ch ) < 1 )"		6684432	1					
ANR	6684474	Condition	"sscanf ( arg , ""%d%c"" , & val , & ch ) < 1"	313:10:9106:9139	6684432	0	True				
ANR	6684475	RelationalExpression	"sscanf ( arg , ""%d%c"" , & val , & ch ) < 1"		6684432	0		<			
ANR	6684476	CallExpression	"sscanf ( arg , ""%d%c"" , & val , & ch )"		6684432	0					
ANR	6684477	Callee	sscanf		6684432	0					
ANR	6684478	Identifier	sscanf		6684432	0					
ANR	6684479	ArgumentList	arg		6684432	1					
ANR	6684480	Argument	arg		6684432	0					
ANR	6684481	Identifier	arg		6684432	0					
ANR	6684482	Argument	"""%d%c"""		6684432	1					
ANR	6684483	PrimaryExpression	"""%d%c"""		6684432	0					
ANR	6684484	Argument	& val		6684432	2					
ANR	6684485	UnaryOperationExpression	& val		6684432	0					
ANR	6684486	UnaryOperator	&		6684432	0					
ANR	6684487	Identifier	val		6684432	1					
ANR	6684488	Argument	& ch		6684432	3					
ANR	6684489	UnaryOperationExpression	& ch		6684432	0					
ANR	6684490	UnaryOperator	&		6684432	0					
ANR	6684491	Identifier	ch		6684432	1					
ANR	6684492	PrimaryExpression	1		6684432	1					
ANR	6684493	ReturnStatement	return FALSE ;	314:1:9143:9155	6684432	1	True				
ANR	6684494	Identifier	FALSE		6684432	0					
ANR	6684495	IfStatement	"if ( ch != ',' )"		6684432	2					
ANR	6684496	Condition	"ch != ','"	315:10:9167:9175	6684432	0	True				
ANR	6684497	EqualityExpression	"ch != ','"		6684432	0		!=			
ANR	6684498	Identifier	ch		6684432	0					
ANR	6684499	PrimaryExpression	"','"		6684432	1					
ANR	6684500	ReturnStatement	return FALSE ;	316:1:9199:9211	6684432	1	True				
ANR	6684501	Identifier	FALSE		6684432	0					
ANR	6684502	IfStatement	if ( val < 0 || val >= NUM_QUANT_TBLS )		6684432	3					
ANR	6684503	Condition	val < 0 || val >= NUM_QUANT_TBLS	317:10:9223:9254	6684432	0	True				
ANR	6684504	OrExpression	val < 0 || val >= NUM_QUANT_TBLS		6684432	0		||			
ANR	6684505	RelationalExpression	val < 0		6684432	0		<			
ANR	6684506	Identifier	val		6684432	0					
ANR	6684507	PrimaryExpression	0		6684432	1					
ANR	6684508	RelationalExpression	val >= NUM_QUANT_TBLS		6684432	1		>=			
ANR	6684509	Identifier	val		6684432	0					
ANR	6684510	Identifier	NUM_QUANT_TBLS		6684432	1					
ANR	6684511	CompoundStatement		13:44:341:341	6684432	1					
ANR	6684512	ExpressionStatement	"fprintf ( stderr , ""JPEG quantization tables are numbered 0..%d\\n"" , NUM_QUANT_TBLS - 1 )"	318:1:9260:9344	6684432	0	True				
ANR	6684513	CallExpression	"fprintf ( stderr , ""JPEG quantization tables are numbered 0..%d\\n"" , NUM_QUANT_TBLS - 1 )"		6684432	0					
ANR	6684514	Callee	fprintf		6684432	0					
ANR	6684515	Identifier	fprintf		6684432	0					
ANR	6684516	ArgumentList	stderr		6684432	1					
ANR	6684517	Argument	stderr		6684432	0					
ANR	6684518	Identifier	stderr		6684432	0					
ANR	6684519	Argument	"""JPEG quantization tables are numbered 0..%d\\n"""		6684432	1					
ANR	6684520	PrimaryExpression	"""JPEG quantization tables are numbered 0..%d\\n"""		6684432	0					
ANR	6684521	Argument	NUM_QUANT_TBLS - 1		6684432	2					
ANR	6684522	AdditiveExpression	NUM_QUANT_TBLS - 1		6684432	0		-			
ANR	6684523	Identifier	NUM_QUANT_TBLS		6684432	0					
ANR	6684524	PrimaryExpression	1		6684432	1					
ANR	6684525	ReturnStatement	return FALSE ;	320:1:9347:9359	6684432	1	True				
ANR	6684526	Identifier	FALSE		6684432	0					
ANR	6684527	ExpressionStatement	cinfo -> comp_info [ ci ] . quant_tbl_no = val	322:6:9375:9414	6684432	4	True				
ANR	6684528	AssignmentExpression	cinfo -> comp_info [ ci ] . quant_tbl_no = val		6684432	0		=			
ANR	6684529	MemberAccess	cinfo -> comp_info [ ci ] . quant_tbl_no		6684432	0					
ANR	6684530	ArrayIndexing	cinfo -> comp_info [ ci ]		6684432	0					
ANR	6684531	PtrMemberAccess	cinfo -> comp_info		6684432	0					
ANR	6684532	Identifier	cinfo		6684432	0					
ANR	6684533	Identifier	comp_info		6684432	1					
ANR	6684534	Identifier	ci		6684432	1					
ANR	6684535	Identifier	quant_tbl_no		6684432	1					
ANR	6684536	Identifier	val		6684432	1					
ANR	6684537	WhileStatement	"while ( * arg && * arg ++ != ',' )"		6684432	5					
ANR	6684538	Condition	"* arg && * arg ++ != ','"	323:13:9429:9449	6684432	0	True				
ANR	6684539	AndExpression	"* arg && * arg ++ != ','"		6684432	0		&&			
ANR	6684540	UnaryOperationExpression	* arg		6684432	0					
ANR	6684541	UnaryOperator	*		6684432	0					
ANR	6684542	Identifier	arg		6684432	1					
ANR	6684543	EqualityExpression	"* arg ++ != ','"		6684432	1		!=			
ANR	6684544	UnaryOperationExpression	* arg ++		6684432	0					
ANR	6684545	UnaryOperator	*		6684432	0					
ANR	6684546	PostIncDecOperationExpression	arg ++		6684432	1					
ANR	6684547	Identifier	arg		6684432	0					
ANR	6684548	IncDec	++		6684432	1					
ANR	6684549	PrimaryExpression	"','"		6684432	1					
ANR	6684550	ExpressionStatement		324:1:9497:9497	6684432	1	True				
ANR	6684551	ElseStatement	else		6684432	0					
ANR	6684552	CompoundStatement		21:11:594:594	6684432	0					
ANR	6684553	ExpressionStatement	cinfo -> comp_info [ ci ] . quant_tbl_no = val	327:6:9595:9634	6684432	0	True				
ANR	6684554	AssignmentExpression	cinfo -> comp_info [ ci ] . quant_tbl_no = val		6684432	0		=			
ANR	6684555	MemberAccess	cinfo -> comp_info [ ci ] . quant_tbl_no		6684432	0					
ANR	6684556	ArrayIndexing	cinfo -> comp_info [ ci ]		6684432	0					
ANR	6684557	PtrMemberAccess	cinfo -> comp_info		6684432	0					
ANR	6684558	Identifier	cinfo		6684432	0					
ANR	6684559	Identifier	comp_info		6684432	1					
ANR	6684560	Identifier	ci		6684432	1					
ANR	6684561	Identifier	quant_tbl_no		6684432	1					
ANR	6684562	Identifier	val		6684432	1					
ANR	6684563	ReturnStatement	return TRUE ;	330:2:9648:9659	6684432	4	True				
ANR	6684564	Identifier	TRUE		6684432	0					
ANR	6684565	Identifier	set_quant_slots		6684432	1					
ANR	6684566	ParameterList	"j_compress_ptr cinfo , char * arg"		6684432	2					
ANR	6684567	Parameter	j_compress_ptr cinfo	300:17:8710:8729	6684432	0	True				
ANR	6684568	ParameterType	j_compress_ptr		6684432	0					
ANR	6684569	Identifier	cinfo		6684432	1					
ANR	6684570	Parameter	char * arg	300:39:8732:8740	6684432	1	True				
ANR	6684571	ParameterType	char *		6684432	0					
ANR	6684572	Identifier	arg		6684432	1					
ANR	6684573	CFGEntryNode	ENTRY		6684432		True				
ANR	6684574	CFGExitNode	EXIT		6684432		True				
ANR	6684575	Symbol	val		6684432						
ANR	6684576	Symbol	& val		6684432						
ANR	6684577	Symbol	* * cinfo		6684432						
ANR	6684578	Symbol	cinfo -> comp_info [ ci ] . quant_tbl_no		6684432						
ANR	6684579	Symbol	ch		6684432						
ANR	6684580	Symbol	ci		6684432						
ANR	6684581	Symbol	NUM_QUANT_TBLS		6684432						
ANR	6684582	Symbol	TRUE		6684432						
ANR	6684583	Symbol	stderr		6684432						
ANR	6684584	Symbol	cinfo -> comp_info		6684432						
ANR	6684585	Symbol	& ch		6684432						
ANR	6684586	Symbol	* ci		6684432						
ANR	6684587	Symbol	* arg ++		6684432						
ANR	6684588	Symbol	cinfo		6684432						
ANR	6684589	Symbol	MAX_COMPONENTS		6684432						
ANR	6684590	Symbol	sscanf		6684432						
ANR	6684591	Symbol	arg		6684432						
ANR	6684592	Symbol	FALSE		6684432						
ANR	6684593	Symbol	* cinfo		6684432						
ANR	6684594	Symbol	* arg		6684432						
ANR	6684595	Symbol	* cinfo -> comp_info		6684432						
ANR	6684596	Function	set_sample_factors	335:0:9681:10803							
ANR	6684597	FunctionDef	"set_sample_factors (j_compress_ptr cinfo , char * arg)"		6684596	0					
ANR	6684598	CompoundStatement		340:0:9897:10803	6684596	0					
ANR	6684599	IdentifierDeclStatement	"int ci , val1 , val2 ;"	341:2:9901:9919	6684596	0	True				
ANR	6684600	IdentifierDecl	ci		6684596	0					
ANR	6684601	IdentifierDeclType	int		6684596	0					
ANR	6684602	Identifier	ci		6684596	1					
ANR	6684603	IdentifierDecl	val1		6684596	1					
ANR	6684604	IdentifierDeclType	int		6684596	0					
ANR	6684605	Identifier	val1		6684596	1					
ANR	6684606	IdentifierDecl	val2		6684596	2					
ANR	6684607	IdentifierDeclType	int		6684596	0					
ANR	6684608	Identifier	val2		6684596	1					
ANR	6684609	IdentifierDeclStatement	"char ch1 , ch2 ;"	342:2:9923:9936	6684596	1	True				
ANR	6684610	IdentifierDecl	ch1		6684596	0					
ANR	6684611	IdentifierDeclType	char		6684596	0					
ANR	6684612	Identifier	ch1		6684596	1					
ANR	6684613	IdentifierDecl	ch2		6684596	1					
ANR	6684614	IdentifierDeclType	char		6684596	0					
ANR	6684615	Identifier	ch2		6684596	1					
ANR	6684616	ForStatement	for ( ci = 0 ; ci < MAX_COMPONENTS ; ci ++ )		6684596	2					
ANR	6684617	ForInit	ci = 0 ;	344:7:9946:9952	6684596	0	True				
ANR	6684618	AssignmentExpression	ci = 0		6684596	0		=			
ANR	6684619	Identifier	ci		6684596	0					
ANR	6684620	PrimaryExpression	0		6684596	1					
ANR	6684621	Condition	ci < MAX_COMPONENTS	344:15:9954:9972	6684596	1	True				
ANR	6684622	RelationalExpression	ci < MAX_COMPONENTS		6684596	0		<			
ANR	6684623	Identifier	ci		6684596	0					
ANR	6684624	Identifier	MAX_COMPONENTS		6684596	1					
ANR	6684625	PostIncDecOperationExpression	ci ++	344:36:9975:9978	6684596	2	True				
ANR	6684626	Identifier	ci		6684596	0					
ANR	6684627	IncDec	++		6684596	1					
ANR	6684628	CompoundStatement		5:42:83:83	6684596	3					
ANR	6684629	IfStatement	if ( * arg )		6684596	0					
ANR	6684630	Condition	* arg	345:8:9991:9994	6684596	0	True				
ANR	6684631	UnaryOperationExpression	* arg		6684596	0					
ANR	6684632	UnaryOperator	*		6684596	0					
ANR	6684633	Identifier	arg		6684596	1					
ANR	6684634	CompoundStatement		6:14:99:99	6684596	1					
ANR	6684635	ExpressionStatement	"ch2 = ','"	346:6:10005:10014	6684596	0	True				
ANR	6684636	AssignmentExpression	"ch2 = ','"		6684596	0		=			
ANR	6684637	Identifier	ch2		6684596	0					
ANR	6684638	PrimaryExpression	"','"		6684596	1					
ANR	6684639	IfStatement	"if ( sscanf ( arg , ""%d%c%d%c"" , & val1 , & ch1 , & val2 , & ch2 ) < 3 )"		6684596	1					
ANR	6684640	Condition	"sscanf ( arg , ""%d%c%d%c"" , & val1 , & ch1 , & val2 , & ch2 ) < 3"	347:10:10067:10119	6684596	0	True				
ANR	6684641	RelationalExpression	"sscanf ( arg , ""%d%c%d%c"" , & val1 , & ch1 , & val2 , & ch2 ) < 3"		6684596	0		<			
ANR	6684642	CallExpression	"sscanf ( arg , ""%d%c%d%c"" , & val1 , & ch1 , & val2 , & ch2 )"		6684596	0					
ANR	6684643	Callee	sscanf		6684596	0					
ANR	6684644	Identifier	sscanf		6684596	0					
ANR	6684645	ArgumentList	arg		6684596	1					
ANR	6684646	Argument	arg		6684596	0					
ANR	6684647	Identifier	arg		6684596	0					
ANR	6684648	Argument	"""%d%c%d%c"""		6684596	1					
ANR	6684649	PrimaryExpression	"""%d%c%d%c"""		6684596	0					
ANR	6684650	Argument	& val1		6684596	2					
ANR	6684651	UnaryOperationExpression	& val1		6684596	0					
ANR	6684652	UnaryOperator	&		6684596	0					
ANR	6684653	Identifier	val1		6684596	1					
ANR	6684654	Argument	& ch1		6684596	3					
ANR	6684655	UnaryOperationExpression	& ch1		6684596	0					
ANR	6684656	UnaryOperator	&		6684596	0					
ANR	6684657	Identifier	ch1		6684596	1					
ANR	6684658	Argument	& val2		6684596	4					
ANR	6684659	UnaryOperationExpression	& val2		6684596	0					
ANR	6684660	UnaryOperator	&		6684596	0					
ANR	6684661	Identifier	val2		6684596	1					
ANR	6684662	Argument	& ch2		6684596	5					
ANR	6684663	UnaryOperationExpression	& ch2		6684596	0					
ANR	6684664	UnaryOperator	&		6684596	0					
ANR	6684665	Identifier	ch2		6684596	1					
ANR	6684666	PrimaryExpression	3		6684596	1					
ANR	6684667	ReturnStatement	return FALSE ;	348:1:10123:10135	6684596	1	True				
ANR	6684668	Identifier	FALSE		6684596	0					
ANR	6684669	IfStatement	"if ( ( ch1 != 'x' && ch1 != 'X' ) || ch2 != ',' )"		6684596	2					
ANR	6684670	Condition	"( ch1 != 'x' && ch1 != 'X' ) || ch2 != ','"	349:10:10147:10186	6684596	0	True				
ANR	6684671	OrExpression	"( ch1 != 'x' && ch1 != 'X' ) || ch2 != ','"		6684596	0		||			
ANR	6684672	AndExpression	ch1 != 'x' && ch1 != 'X'		6684596	0		&&			
ANR	6684673	EqualityExpression	ch1 != 'x'		6684596	0		!=			
ANR	6684674	Identifier	ch1		6684596	0					
ANR	6684675	PrimaryExpression	'x'		6684596	1					
ANR	6684676	EqualityExpression	ch1 != 'X'		6684596	1		!=			
ANR	6684677	Identifier	ch1		6684596	0					
ANR	6684678	PrimaryExpression	'X'		6684596	1					
ANR	6684679	EqualityExpression	"ch2 != ','"		6684596	1		!=			
ANR	6684680	Identifier	ch2		6684596	0					
ANR	6684681	PrimaryExpression	"','"		6684596	1					
ANR	6684682	ReturnStatement	return FALSE ;	350:1:10209:10221	6684596	1	True				
ANR	6684683	Identifier	FALSE		6684596	0					
ANR	6684684	IfStatement	if ( val1 <= 0 || val1 > MAX_SAMP_FACTOR || val2 <= 0 || val2 > MAX_SAMP_FACTOR )		6684596	3					
ANR	6684685	Condition	val1 <= 0 || val1 > MAX_SAMP_FACTOR || val2 <= 0 || val2 > MAX_SAMP_FACTOR	351:10:10233:10309	6684596	0	True				
ANR	6684686	OrExpression	val1 <= 0 || val1 > MAX_SAMP_FACTOR || val2 <= 0 || val2 > MAX_SAMP_FACTOR		6684596	0		||			
ANR	6684687	RelationalExpression	val1 <= 0		6684596	0		<=			
ANR	6684688	Identifier	val1		6684596	0					
ANR	6684689	PrimaryExpression	0		6684596	1					
ANR	6684690	OrExpression	val1 > MAX_SAMP_FACTOR || val2 <= 0 || val2 > MAX_SAMP_FACTOR		6684596	1		||			
ANR	6684691	RelationalExpression	val1 > MAX_SAMP_FACTOR		6684596	0		>			
ANR	6684692	Identifier	val1		6684596	0					
ANR	6684693	Identifier	MAX_SAMP_FACTOR		6684596	1					
ANR	6684694	OrExpression	val2 <= 0 || val2 > MAX_SAMP_FACTOR		6684596	1		||			
ANR	6684695	RelationalExpression	val2 <= 0		6684596	0		<=			
ANR	6684696	Identifier	val2		6684596	0					
ANR	6684697	PrimaryExpression	0		6684596	1					
ANR	6684698	RelationalExpression	val2 > MAX_SAMP_FACTOR		6684596	1		>			
ANR	6684699	Identifier	val2		6684596	0					
ANR	6684700	Identifier	MAX_SAMP_FACTOR		6684596	1					
ANR	6684701	CompoundStatement		13:40:414:414	6684596	1					
ANR	6684702	ExpressionStatement	"fprintf ( stderr , ""JPEG sampling factors must be 1..%d\\n"" , MAX_SAMP_FACTOR )"	353:1:10315:10388	6684596	0	True				
ANR	6684703	CallExpression	"fprintf ( stderr , ""JPEG sampling factors must be 1..%d\\n"" , MAX_SAMP_FACTOR )"		6684596	0					
ANR	6684704	Callee	fprintf		6684596	0					
ANR	6684705	Identifier	fprintf		6684596	0					
ANR	6684706	ArgumentList	stderr		6684596	1					
ANR	6684707	Argument	stderr		6684596	0					
ANR	6684708	Identifier	stderr		6684596	0					
ANR	6684709	Argument	"""JPEG sampling factors must be 1..%d\\n"""		6684596	1					
ANR	6684710	PrimaryExpression	"""JPEG sampling factors must be 1..%d\\n"""		6684596	0					
ANR	6684711	Argument	MAX_SAMP_FACTOR		6684596	2					
ANR	6684712	Identifier	MAX_SAMP_FACTOR		6684596	0					
ANR	6684713	ReturnStatement	return FALSE ;	354:1:10391:10403	6684596	1	True				
ANR	6684714	Identifier	FALSE		6684596	0					
ANR	6684715	ExpressionStatement	cinfo -> comp_info [ ci ] . h_samp_factor = val1	356:6:10419:10460	6684596	4	True				
ANR	6684716	AssignmentExpression	cinfo -> comp_info [ ci ] . h_samp_factor = val1		6684596	0		=			
ANR	6684717	MemberAccess	cinfo -> comp_info [ ci ] . h_samp_factor		6684596	0					
ANR	6684718	ArrayIndexing	cinfo -> comp_info [ ci ]		6684596	0					
ANR	6684719	PtrMemberAccess	cinfo -> comp_info		6684596	0					
ANR	6684720	Identifier	cinfo		6684596	0					
ANR	6684721	Identifier	comp_info		6684596	1					
ANR	6684722	Identifier	ci		6684596	1					
ANR	6684723	Identifier	h_samp_factor		6684596	1					
ANR	6684724	Identifier	val1		6684596	1					
ANR	6684725	ExpressionStatement	cinfo -> comp_info [ ci ] . v_samp_factor = val2	357:6:10468:10509	6684596	5	True				
ANR	6684726	AssignmentExpression	cinfo -> comp_info [ ci ] . v_samp_factor = val2		6684596	0		=			
ANR	6684727	MemberAccess	cinfo -> comp_info [ ci ] . v_samp_factor		6684596	0					
ANR	6684728	ArrayIndexing	cinfo -> comp_info [ ci ]		6684596	0					
ANR	6684729	PtrMemberAccess	cinfo -> comp_info		6684596	0					
ANR	6684730	Identifier	cinfo		6684596	0					
ANR	6684731	Identifier	comp_info		6684596	1					
ANR	6684732	Identifier	ci		6684596	1					
ANR	6684733	Identifier	v_samp_factor		6684596	1					
ANR	6684734	Identifier	val2		6684596	1					
ANR	6684735	WhileStatement	"while ( * arg && * arg ++ != ',' )"		6684596	6					
ANR	6684736	Condition	"* arg && * arg ++ != ','"	358:13:10524:10544	6684596	0	True				
ANR	6684737	AndExpression	"* arg && * arg ++ != ','"		6684596	0		&&			
ANR	6684738	UnaryOperationExpression	* arg		6684596	0					
ANR	6684739	UnaryOperator	*		6684596	0					
ANR	6684740	Identifier	arg		6684596	1					
ANR	6684741	EqualityExpression	"* arg ++ != ','"		6684596	1		!=			
ANR	6684742	UnaryOperationExpression	* arg ++		6684596	0					
ANR	6684743	UnaryOperator	*		6684596	0					
ANR	6684744	PostIncDecOperationExpression	arg ++		6684596	1					
ANR	6684745	Identifier	arg		6684596	0					
ANR	6684746	IncDec	++		6684596	1					
ANR	6684747	PrimaryExpression	"','"		6684596	1					
ANR	6684748	ExpressionStatement		359:1:10592:10592	6684596	1	True				
ANR	6684749	ElseStatement	else		6684596	0					
ANR	6684750	CompoundStatement		21:11:707:707	6684596	0					
ANR	6684751	ExpressionStatement	cinfo -> comp_info [ ci ] . h_samp_factor = 1	362:6:10692:10730	6684596	0	True				
ANR	6684752	AssignmentExpression	cinfo -> comp_info [ ci ] . h_samp_factor = 1		6684596	0		=			
ANR	6684753	MemberAccess	cinfo -> comp_info [ ci ] . h_samp_factor		6684596	0					
ANR	6684754	ArrayIndexing	cinfo -> comp_info [ ci ]		6684596	0					
ANR	6684755	PtrMemberAccess	cinfo -> comp_info		6684596	0					
ANR	6684756	Identifier	cinfo		6684596	0					
ANR	6684757	Identifier	comp_info		6684596	1					
ANR	6684758	Identifier	ci		6684596	1					
ANR	6684759	Identifier	h_samp_factor		6684596	1					
ANR	6684760	PrimaryExpression	1		6684596	1					
ANR	6684761	ExpressionStatement	cinfo -> comp_info [ ci ] . v_samp_factor = 1	363:6:10738:10776	6684596	1	True				
ANR	6684762	AssignmentExpression	cinfo -> comp_info [ ci ] . v_samp_factor = 1		6684596	0		=			
ANR	6684763	MemberAccess	cinfo -> comp_info [ ci ] . v_samp_factor		6684596	0					
ANR	6684764	ArrayIndexing	cinfo -> comp_info [ ci ]		6684596	0					
ANR	6684765	PtrMemberAccess	cinfo -> comp_info		6684596	0					
ANR	6684766	Identifier	cinfo		6684596	0					
ANR	6684767	Identifier	comp_info		6684596	1					
ANR	6684768	Identifier	ci		6684596	1					
ANR	6684769	Identifier	v_samp_factor		6684596	1					
ANR	6684770	PrimaryExpression	1		6684596	1					
ANR	6684771	ReturnStatement	return TRUE ;	366:2:10790:10801	6684596	3	True				
ANR	6684772	Identifier	TRUE		6684596	0					
ANR	6684773	Identifier	set_sample_factors		6684596	1					
ANR	6684774	ParameterList	"j_compress_ptr cinfo , char * arg"		6684596	2					
ANR	6684775	Parameter	j_compress_ptr cinfo	335:20:9701:9720	6684596	0	True				
ANR	6684776	ParameterType	j_compress_ptr		6684596	0					
ANR	6684777	Identifier	cinfo		6684596	1					
ANR	6684778	Parameter	char * arg	335:42:9723:9731	6684596	1	True				
ANR	6684779	ParameterType	char *		6684596	0					
ANR	6684780	Identifier	arg		6684596	1					
ANR	6684781	CFGEntryNode	ENTRY		6684596		True				
ANR	6684782	CFGExitNode	EXIT		6684596		True				
ANR	6684783	Symbol	* * cinfo		6684596						
ANR	6684784	Symbol	val2		6684596						
ANR	6684785	Symbol	val1		6684596						
ANR	6684786	Symbol	cinfo -> comp_info [ ci ] . h_samp_factor		6684596						
ANR	6684787	Symbol	* ci		6684596						
ANR	6684788	Symbol	cinfo -> comp_info [ ci ] . v_samp_factor		6684596						
ANR	6684789	Symbol	& ch2		6684596						
ANR	6684790	Symbol	* arg ++		6684596						
ANR	6684791	Symbol	& ch1		6684596						
ANR	6684792	Symbol	MAX_COMPONENTS		6684596						
ANR	6684793	Symbol	arg		6684596						
ANR	6684794	Symbol	* cinfo		6684596						
ANR	6684795	Symbol	* cinfo -> comp_info		6684596						
ANR	6684796	Symbol	ci		6684596						
ANR	6684797	Symbol	TRUE		6684596						
ANR	6684798	Symbol	ch2		6684596						
ANR	6684799	Symbol	stderr		6684596						
ANR	6684800	Symbol	cinfo -> comp_info		6684596						
ANR	6684801	Symbol	ch1		6684596						
ANR	6684802	Symbol	cinfo		6684596						
ANR	6684803	Symbol	sscanf		6684596						
ANR	6684804	Symbol	& val1		6684596						
ANR	6684805	Symbol	& val2		6684596						
ANR	6684806	Symbol	MAX_SAMP_FACTOR		6684596						
ANR	6684807	Symbol	FALSE		6684596						
ANR	6684808	Symbol	* arg		6684596						
