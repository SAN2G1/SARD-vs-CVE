command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1192473	File	data/converged/CVE-2018-16863_ghostpdl/base_gxpath2.c								
ANR	1192474	Function	gx_path_current_point	31:0:939:1292							
ANR	1192475	FunctionDef	"gx_path_current_point (const gx_path * ppath , gs_fixed_point * ppt)"		1192474	0					
ANR	1192476	CompoundStatement		33:0:1010:1292	1192474	0					
ANR	1192477	IfStatement	if ( ! path_position_valid ( ppath ) )		1192474	0					
ANR	1192478	Condition	! path_position_valid ( ppath )	34:8:1020:1046	1192474	0	True				
ANR	1192479	UnaryOperationExpression	! path_position_valid ( ppath )		1192474	0					
ANR	1192480	UnaryOperator	!		1192474	0					
ANR	1192481	CallExpression	path_position_valid ( ppath )		1192474	1					
ANR	1192482	Callee	path_position_valid		1192474	0					
ANR	1192483	Identifier	path_position_valid		1192474	0					
ANR	1192484	ArgumentList	ppath		1192474	1					
ANR	1192485	Argument	ppath		1192474	0					
ANR	1192486	Identifier	ppath		1192474	0					
ANR	1192487	ExpressionStatement	return_error ( gs_error_nocurrentpoint )	35:8:1057:1094	1192474	1	True				
ANR	1192488	CallExpression	return_error ( gs_error_nocurrentpoint )		1192474	0					
ANR	1192489	Callee	return_error		1192474	0					
ANR	1192490	Identifier	return_error		1192474	0					
ANR	1192491	ArgumentList	gs_error_nocurrentpoint		1192474	1					
ANR	1192492	Argument	gs_error_nocurrentpoint		1192474	0					
ANR	1192493	Identifier	gs_error_nocurrentpoint		1192474	0					
ANR	1192494	ExpressionStatement	"ppt -> x = ppath -> position . x , ppt -> y = ppath -> position . y"	38:4:1222:1276	1192474	1	True				
ANR	1192495	Expression	"ppt -> x = ppath -> position . x , ppt -> y = ppath -> position . y"		1192474	0					
ANR	1192496	AssignmentExpression	ppt -> x = ppath -> position . x		1192474	0		=			
ANR	1192497	PtrMemberAccess	ppt -> x		1192474	0					
ANR	1192498	Identifier	ppt		1192474	0					
ANR	1192499	Identifier	x		1192474	1					
ANR	1192500	MemberAccess	ppath -> position . x		1192474	1					
ANR	1192501	PtrMemberAccess	ppath -> position		1192474	0					
ANR	1192502	Identifier	ppath		1192474	0					
ANR	1192503	Identifier	position		1192474	1					
ANR	1192504	Identifier	x		1192474	1					
ANR	1192505	AssignmentExpression	ppt -> y = ppath -> position . y		1192474	1		=			
ANR	1192506	PtrMemberAccess	ppt -> y		1192474	0					
ANR	1192507	Identifier	ppt		1192474	0					
ANR	1192508	Identifier	y		1192474	1					
ANR	1192509	MemberAccess	ppath -> position . y		1192474	1					
ANR	1192510	PtrMemberAccess	ppath -> position		1192474	0					
ANR	1192511	Identifier	ppath		1192474	0					
ANR	1192512	Identifier	position		1192474	1					
ANR	1192513	Identifier	y		1192474	1					
ANR	1192514	ReturnStatement	return 0 ;	39:4:1282:1290	1192474	2	True				
ANR	1192515	PrimaryExpression	0		1192474	0					
ANR	1192516	ReturnType	int		1192474	1					
ANR	1192517	Identifier	gx_path_current_point		1192474	2					
ANR	1192518	ParameterList	"const gx_path * ppath , gs_fixed_point * ppt"		1192474	3					
ANR	1192519	Parameter	const gx_path * ppath	32:22:965:985	1192474	0	True				
ANR	1192520	ParameterType	const gx_path *		1192474	0					
ANR	1192521	Identifier	ppath		1192474	1					
ANR	1192522	Parameter	gs_fixed_point * ppt	32:45:988:1007	1192474	1	True				
ANR	1192523	ParameterType	gs_fixed_point *		1192474	0					
ANR	1192524	Identifier	ppt		1192474	1					
ANR	1192525	CFGEntryNode	ENTRY		1192474		True				
ANR	1192526	CFGExitNode	EXIT		1192474		True				
ANR	1192527	Symbol	* ppath		1192474						
ANR	1192528	Symbol	ppt		1192474						
ANR	1192529	Symbol	gs_error_nocurrentpoint		1192474						
ANR	1192530	Symbol	ppath -> position . x		1192474						
ANR	1192531	Symbol	ppath		1192474						
ANR	1192532	Symbol	path_position_valid		1192474						
ANR	1192533	Symbol	ppath -> position		1192474						
ANR	1192534	Symbol	ppt -> x		1192474						
ANR	1192535	Symbol	ppath -> position . y		1192474						
ANR	1192536	Symbol	* ppt		1192474						
ANR	1192537	Symbol	ppt -> y		1192474						
ANR	1192538	Function	gx_path_subpath_start_point	43:0:1346:1573							
ANR	1192539	FunctionDef	"gx_path_subpath_start_point (const gx_path * ppath , gs_fixed_point * ppt)"		1192538	0					
ANR	1192540	CompoundStatement		45:0:1423:1573	1192538	0					
ANR	1192541	IdentifierDeclStatement	const subpath * psub = ppath -> current_subpath ;	46:4:1429:1473	1192538	0	True				
ANR	1192542	IdentifierDecl	* psub = ppath -> current_subpath		1192538	0					
ANR	1192543	IdentifierDeclType	const subpath *		1192538	0					
ANR	1192544	Identifier	psub		1192538	1					
ANR	1192545	AssignmentExpression	* psub = ppath -> current_subpath		1192538	2		=			
ANR	1192546	Identifier	psub		1192538	0					
ANR	1192547	PtrMemberAccess	ppath -> current_subpath		1192538	1					
ANR	1192548	Identifier	ppath		1192538	0					
ANR	1192549	Identifier	current_subpath		1192538	1					
ANR	1192550	IfStatement	if ( ! psub )		1192538	1					
ANR	1192551	Condition	! psub	48:8:1484:1488	1192538	0	True				
ANR	1192552	UnaryOperationExpression	! psub		1192538	0					
ANR	1192553	UnaryOperator	!		1192538	0					
ANR	1192554	Identifier	psub		1192538	1					
ANR	1192555	ExpressionStatement	return_error ( gs_error_nocurrentpoint )	49:8:1499:1536	1192538	1	True				
ANR	1192556	CallExpression	return_error ( gs_error_nocurrentpoint )		1192538	0					
ANR	1192557	Callee	return_error		1192538	0					
ANR	1192558	Identifier	return_error		1192538	0					
ANR	1192559	ArgumentList	gs_error_nocurrentpoint		1192538	1					
ANR	1192560	Argument	gs_error_nocurrentpoint		1192538	0					
ANR	1192561	Identifier	gs_error_nocurrentpoint		1192538	0					
ANR	1192562	ExpressionStatement	* ppt = psub -> pt	50:4:1542:1557	1192538	2	True				
ANR	1192563	AssignmentExpression	* ppt = psub -> pt		1192538	0		=			
ANR	1192564	UnaryOperationExpression	* ppt		1192538	0					
ANR	1192565	UnaryOperator	*		1192538	0					
ANR	1192566	Identifier	ppt		1192538	1					
ANR	1192567	PtrMemberAccess	psub -> pt		1192538	1					
ANR	1192568	Identifier	psub		1192538	0					
ANR	1192569	Identifier	pt		1192538	1					
ANR	1192570	ReturnStatement	return 0 ;	51:4:1563:1571	1192538	3	True				
ANR	1192571	PrimaryExpression	0		1192538	0					
ANR	1192572	ReturnType	int		1192538	1					
ANR	1192573	Identifier	gx_path_subpath_start_point		1192538	2					
ANR	1192574	ParameterList	"const gx_path * ppath , gs_fixed_point * ppt"		1192538	3					
ANR	1192575	Parameter	const gx_path * ppath	44:28:1378:1398	1192538	0	True				
ANR	1192576	ParameterType	const gx_path *		1192538	0					
ANR	1192577	Identifier	ppath		1192538	1					
ANR	1192578	Parameter	gs_fixed_point * ppt	44:51:1401:1420	1192538	1	True				
ANR	1192579	ParameterType	gs_fixed_point *		1192538	0					
ANR	1192580	Identifier	ppt		1192538	1					
ANR	1192581	CFGEntryNode	ENTRY		1192538		True				
ANR	1192582	CFGExitNode	EXIT		1192538		True				
ANR	1192583	Symbol	* ppath		1192538						
ANR	1192584	Symbol	ppath -> current_subpath		1192538						
ANR	1192585	Symbol	psub		1192538						
ANR	1192586	Symbol	ppt		1192538						
ANR	1192587	Symbol	* psub		1192538						
ANR	1192588	Symbol	gs_error_nocurrentpoint		1192538						
ANR	1192589	Symbol	ppath		1192538						
ANR	1192590	Symbol	psub -> pt		1192538						
ANR	1192591	Symbol	* ppt		1192538						
ANR	1192592	Function	gx_path_bbox	58:0:1779:3878							
ANR	1192593	FunctionDef	"gx_path_bbox (gx_path * ppath , gs_fixed_rect * pbox)"		1192592	0					
ANR	1192594	CompoundStatement		60:0:1835:3878	1192592	0					
ANR	1192595	IfStatement	if ( ppath -> bbox_accurate )		1192592	0					
ANR	1192596	Condition	ppath -> bbox_accurate	61:8:1845:1864	1192592	0	True				
ANR	1192597	PtrMemberAccess	ppath -> bbox_accurate		1192592	0					
ANR	1192598	Identifier	ppath		1192592	0					
ANR	1192599	Identifier	bbox_accurate		1192592	1					
ANR	1192600	CompoundStatement		2:30:31:31	1192592	1					
ANR	1192601	ExpressionStatement	* pbox = ppath -> bbox	63:8:1928:1947	1192592	0	True				
ANR	1192602	AssignmentExpression	* pbox = ppath -> bbox		1192592	0		=			
ANR	1192603	UnaryOperationExpression	* pbox		1192592	0					
ANR	1192604	UnaryOperator	*		1192592	0					
ANR	1192605	Identifier	pbox		1192592	1					
ANR	1192606	PtrMemberAccess	ppath -> bbox		1192592	1					
ANR	1192607	Identifier	ppath		1192592	0					
ANR	1192608	Identifier	bbox		1192592	1					
ANR	1192609	ReturnStatement	return 0 ;	64:8:1957:1965	1192592	1	True				
ANR	1192610	PrimaryExpression	0		1192592	0					
ANR	1192611	IfStatement	if ( ppath -> first_subpath == 0 )		1192592	1					
ANR	1192612	Condition	ppath -> first_subpath == 0	66:8:1981:2005	1192592	0	True				
ANR	1192613	EqualityExpression	ppath -> first_subpath == 0		1192592	0		==			
ANR	1192614	PtrMemberAccess	ppath -> first_subpath		1192592	0					
ANR	1192615	Identifier	ppath		1192592	0					
ANR	1192616	Identifier	first_subpath		1192592	1					
ANR	1192617	PrimaryExpression	0		1192592	1					
ANR	1192618	CompoundStatement		9:8:245:294	1192592	1					
ANR	1192619	IdentifierDeclStatement	"int code = gx_path_current_point ( ppath , & pbox -> p ) ;"	68:8:2081:2130	1192592	0	True				
ANR	1192620	IdentifierDecl	"code = gx_path_current_point ( ppath , & pbox -> p )"		1192592	0					
ANR	1192621	IdentifierDeclType	int		1192592	0					
ANR	1192622	Identifier	code		1192592	1					
ANR	1192623	AssignmentExpression	"code = gx_path_current_point ( ppath , & pbox -> p )"		1192592	2		=			
ANR	1192624	Identifier	code		1192592	0					
ANR	1192625	CallExpression	"gx_path_current_point ( ppath , & pbox -> p )"		1192592	1					
ANR	1192626	Callee	gx_path_current_point		1192592	0					
ANR	1192627	Identifier	gx_path_current_point		1192592	0					
ANR	1192628	ArgumentList	ppath		1192592	1					
ANR	1192629	Argument	ppath		1192592	0					
ANR	1192630	Identifier	ppath		1192592	0					
ANR	1192631	Argument	& pbox -> p		1192592	1					
ANR	1192632	UnaryOperationExpression	& pbox -> p		1192592	0					
ANR	1192633	UnaryOperator	&		1192592	0					
ANR	1192634	PtrMemberAccess	pbox -> p		1192592	1					
ANR	1192635	Identifier	pbox		1192592	0					
ANR	1192636	Identifier	p		1192592	1					
ANR	1192637	IfStatement	if ( code < 0 )		1192592	1					
ANR	1192638	Condition	code < 0	70:12:2145:2152	1192592	0	True				
ANR	1192639	RelationalExpression	code < 0		1192592	0		<			
ANR	1192640	Identifier	code		1192592	0					
ANR	1192641	PrimaryExpression	0		1192592	1					
ANR	1192642	CompoundStatement		11:22:319:319	1192592	1					
ANR	1192643	ExpressionStatement	pbox -> p . x = pbox -> p . y = 0	75:12:2302:2327	1192592	0	True				
ANR	1192644	AssignmentExpression	pbox -> p . x = pbox -> p . y = 0		1192592	0		=			
ANR	1192645	MemberAccess	pbox -> p . x		1192592	0					
ANR	1192646	PtrMemberAccess	pbox -> p		1192592	0					
ANR	1192647	Identifier	pbox		1192592	0					
ANR	1192648	Identifier	p		1192592	1					
ANR	1192649	Identifier	x		1192592	1					
ANR	1192650	AssignmentExpression	pbox -> p . y = 0		1192592	1		=			
ANR	1192651	MemberAccess	pbox -> p . y		1192592	0					
ANR	1192652	PtrMemberAccess	pbox -> p		1192592	0					
ANR	1192653	Identifier	pbox		1192592	0					
ANR	1192654	Identifier	p		1192592	1					
ANR	1192655	Identifier	y		1192592	1					
ANR	1192656	PrimaryExpression	0		1192592	1					
ANR	1192657	ExpressionStatement	pbox -> q = pbox -> p	77:8:2347:2364	1192592	2	True				
ANR	1192658	AssignmentExpression	pbox -> q = pbox -> p		1192592	0		=			
ANR	1192659	PtrMemberAccess	pbox -> q		1192592	0					
ANR	1192660	Identifier	pbox		1192592	0					
ANR	1192661	Identifier	q		1192592	1					
ANR	1192662	PtrMemberAccess	pbox -> p		1192592	1					
ANR	1192663	Identifier	pbox		1192592	0					
ANR	1192664	Identifier	p		1192592	1					
ANR	1192665	ReturnStatement	return code ;	78:8:2374:2385	1192592	3	True				
ANR	1192666	Identifier	code		1192592	0					
ANR	1192667	IfStatement	if ( ppath -> box_last == ppath -> current_subpath -> last )		1192592	2					
ANR	1192668	Condition	ppath -> box_last == ppath -> current_subpath -> last	82:8:2497:2543	1192592	0	True				
ANR	1192669	EqualityExpression	ppath -> box_last == ppath -> current_subpath -> last		1192592	0		==			
ANR	1192670	PtrMemberAccess	ppath -> box_last		1192592	0					
ANR	1192671	Identifier	ppath		1192592	0					
ANR	1192672	Identifier	box_last		1192592	1					
ANR	1192673	PtrMemberAccess	ppath -> current_subpath -> last		1192592	1					
ANR	1192674	PtrMemberAccess	ppath -> current_subpath		1192592	0					
ANR	1192675	Identifier	ppath		1192592	0					
ANR	1192676	Identifier	current_subpath		1192592	1					
ANR	1192677	Identifier	last		1192592	1					
ANR	1192678	CompoundStatement		23:57:710:710	1192592	1					
ANR	1192679	ExpressionStatement	* pbox = ppath -> bbox	84:8:2588:2607	1192592	0	True				
ANR	1192680	AssignmentExpression	* pbox = ppath -> bbox		1192592	0		=			
ANR	1192681	UnaryOperationExpression	* pbox		1192592	0					
ANR	1192682	UnaryOperator	*		1192592	0					
ANR	1192683	Identifier	pbox		1192592	1					
ANR	1192684	PtrMemberAccess	ppath -> bbox		1192592	1					
ANR	1192685	Identifier	ppath		1192592	0					
ANR	1192686	Identifier	bbox		1192592	1					
ANR	1192687	ElseStatement	else		1192592	0					
ANR	1192688	CompoundStatement		28:8:824:861	1192592	0					
ANR	1192689	IdentifierDeclStatement	"fixed px , py , qx , qy ;"	86:8:2630:2650	1192592	0	True				
ANR	1192690	IdentifierDecl	px		1192592	0					
ANR	1192691	IdentifierDeclType	fixed		1192592	0					
ANR	1192692	Identifier	px		1192592	1					
ANR	1192693	IdentifierDecl	py		1192592	1					
ANR	1192694	IdentifierDeclType	fixed		1192592	0					
ANR	1192695	Identifier	py		1192592	1					
ANR	1192696	IdentifierDecl	qx		1192592	2					
ANR	1192697	IdentifierDeclType	fixed		1192592	0					
ANR	1192698	Identifier	qx		1192592	1					
ANR	1192699	IdentifierDecl	qy		1192592	3					
ANR	1192700	IdentifierDeclType	fixed		1192592	0					
ANR	1192701	Identifier	qy		1192592	1					
ANR	1192702	IdentifierDeclStatement	const segment * pseg = ppath -> box_last ;	87:8:2660:2697	1192592	1	True				
ANR	1192703	IdentifierDecl	* pseg = ppath -> box_last		1192592	0					
ANR	1192704	IdentifierDeclType	const segment *		1192592	0					
ANR	1192705	Identifier	pseg		1192592	1					
ANR	1192706	AssignmentExpression	* pseg = ppath -> box_last		1192592	2		=			
ANR	1192707	Identifier	pseg		1192592	0					
ANR	1192708	PtrMemberAccess	ppath -> box_last		1192592	1					
ANR	1192709	Identifier	ppath		1192592	0					
ANR	1192710	Identifier	box_last		1192592	1					
ANR	1192711	IfStatement	if ( pseg == 0 )		1192592	2					
ANR	1192712	Condition	pseg == 0	89:12:2712:2720	1192592	0	True				
ANR	1192713	EqualityExpression	pseg == 0		1192592	0		==			
ANR	1192714	Identifier	pseg		1192592	0					
ANR	1192715	PrimaryExpression	0		1192592	1					
ANR	1192716	CompoundStatement		30:23:887:887	1192592	1					
ANR	1192717	ExpressionStatement	pseg = ( const segment * ) ppath -> first_subpath	90:12:2764:2808	1192592	0	True				
ANR	1192718	AssignmentExpression	pseg = ( const segment * ) ppath -> first_subpath		1192592	0		=			
ANR	1192719	Identifier	pseg		1192592	0					
ANR	1192720	CastExpression	( const segment * ) ppath -> first_subpath		1192592	1					
ANR	1192721	CastTarget	const segment *		1192592	0					
ANR	1192722	PtrMemberAccess	ppath -> first_subpath		1192592	1					
ANR	1192723	Identifier	ppath		1192592	0					
ANR	1192724	Identifier	first_subpath		1192592	1					
ANR	1192725	ExpressionStatement	px = qx = pseg -> pt . x	91:12:2822:2842	1192592	1	True				
ANR	1192726	AssignmentExpression	px = qx = pseg -> pt . x		1192592	0		=			
ANR	1192727	Identifier	px		1192592	0					
ANR	1192728	AssignmentExpression	qx = pseg -> pt . x		1192592	1		=			
ANR	1192729	Identifier	qx		1192592	0					
ANR	1192730	MemberAccess	pseg -> pt . x		1192592	1					
ANR	1192731	PtrMemberAccess	pseg -> pt		1192592	0					
ANR	1192732	Identifier	pseg		1192592	0					
ANR	1192733	Identifier	pt		1192592	1					
ANR	1192734	Identifier	x		1192592	1					
ANR	1192735	ExpressionStatement	py = qy = pseg -> pt . y	92:12:2856:2876	1192592	2	True				
ANR	1192736	AssignmentExpression	py = qy = pseg -> pt . y		1192592	0		=			
ANR	1192737	Identifier	py		1192592	0					
ANR	1192738	AssignmentExpression	qy = pseg -> pt . y		1192592	1		=			
ANR	1192739	Identifier	qy		1192592	0					
ANR	1192740	MemberAccess	pseg -> pt . y		1192592	1					
ANR	1192741	PtrMemberAccess	pseg -> pt		1192592	0					
ANR	1192742	Identifier	pseg		1192592	0					
ANR	1192743	Identifier	pt		1192592	1					
ANR	1192744	Identifier	y		1192592	1					
ANR	1192745	ElseStatement	else		1192592	0					
ANR	1192746	CompoundStatement		34:15:1057:1057	1192592	0					
ANR	1192747	ExpressionStatement	"px = ppath -> bbox . p . x , py = ppath -> bbox . p . y"	94:12:2907:2949	1192592	0	True				
ANR	1192748	Expression	"px = ppath -> bbox . p . x , py = ppath -> bbox . p . y"		1192592	0					
ANR	1192749	AssignmentExpression	px = ppath -> bbox . p . x		1192592	0		=			
ANR	1192750	Identifier	px		1192592	0					
ANR	1192751	MemberAccess	ppath -> bbox . p . x		1192592	1					
ANR	1192752	MemberAccess	ppath -> bbox . p		1192592	0					
ANR	1192753	PtrMemberAccess	ppath -> bbox		1192592	0					
ANR	1192754	Identifier	ppath		1192592	0					
ANR	1192755	Identifier	bbox		1192592	1					
ANR	1192756	Identifier	p		1192592	1					
ANR	1192757	Identifier	x		1192592	1					
ANR	1192758	AssignmentExpression	py = ppath -> bbox . p . y		1192592	1		=			
ANR	1192759	Identifier	py		1192592	0					
ANR	1192760	MemberAccess	ppath -> bbox . p . y		1192592	1					
ANR	1192761	MemberAccess	ppath -> bbox . p		1192592	0					
ANR	1192762	PtrMemberAccess	ppath -> bbox		1192592	0					
ANR	1192763	Identifier	ppath		1192592	0					
ANR	1192764	Identifier	bbox		1192592	1					
ANR	1192765	Identifier	p		1192592	1					
ANR	1192766	Identifier	y		1192592	1					
ANR	1192767	ExpressionStatement	"qx = ppath -> bbox . q . x , qy = ppath -> bbox . q . y"	95:12:2963:3005	1192592	1	True				
ANR	1192768	Expression	"qx = ppath -> bbox . q . x , qy = ppath -> bbox . q . y"		1192592	0					
ANR	1192769	AssignmentExpression	qx = ppath -> bbox . q . x		1192592	0		=			
ANR	1192770	Identifier	qx		1192592	0					
ANR	1192771	MemberAccess	ppath -> bbox . q . x		1192592	1					
ANR	1192772	MemberAccess	ppath -> bbox . q		1192592	0					
ANR	1192773	PtrMemberAccess	ppath -> bbox		1192592	0					
ANR	1192774	Identifier	ppath		1192592	0					
ANR	1192775	Identifier	bbox		1192592	1					
ANR	1192776	Identifier	q		1192592	1					
ANR	1192777	Identifier	x		1192592	1					
ANR	1192778	AssignmentExpression	qy = ppath -> bbox . q . y		1192592	1		=			
ANR	1192779	Identifier	qy		1192592	0					
ANR	1192780	MemberAccess	ppath -> bbox . q . y		1192592	1					
ANR	1192781	MemberAccess	ppath -> bbox . q		1192592	0					
ANR	1192782	PtrMemberAccess	ppath -> bbox		1192592	0					
ANR	1192783	Identifier	ppath		1192592	0					
ANR	1192784	Identifier	bbox		1192592	1					
ANR	1192785	Identifier	q		1192592	1					
ANR	1192786	Identifier	y		1192592	1					
ANR	1192787	Statement	define	99:1:3082:3087	1192592	3	True				
ANR	1192788	Statement	ADJUST_BBOX	99:8:3089:3099	1192592	4	True				
ANR	1192789	Statement	(	99:19:3100:3100	1192592	5	True				
ANR	1192790	Statement	pt	99:20:3101:3102	1192592	6	True				
ANR	1192791	Statement	)	99:22:3103:3103	1192592	7	True				
ANR	1192792	IfStatement	if ( ( pt ) . x < px )		1192592	8					
ANR	1192793	Condition	( pt ) . x < px	100:6:3112:3122	1192592	0	True				
ANR	1192794	RelationalExpression	( pt ) . x < px		1192592	0		<			
ANR	1192795	MemberAccess	( pt ) . x		1192592	0					
ANR	1192796	Identifier	pt		1192592	0					
ANR	1192797	Identifier	x		1192592	1					
ANR	1192798	Identifier	px		1192592	1					
ANR	1192799	ExpressionStatement	px = ( pt ) . x	100:19:3125:3136	1192592	1	True				
ANR	1192800	AssignmentExpression	px = ( pt ) . x		1192592	0		=			
ANR	1192801	Identifier	px		1192592	0					
ANR	1192802	MemberAccess	( pt ) . x		1192592	1					
ANR	1192803	Identifier	pt		1192592	0					
ANR	1192804	Identifier	x		1192592	1					
ANR	1192805	ElseStatement	else		1192592	0					
ANR	1192806	IfStatement	if ( ( pt ) . x > qx )		1192592	0					
ANR	1192807	Condition	( pt ) . x > qx	101:11:3150:3160	1192592	0	True				
ANR	1192808	RelationalExpression	( pt ) . x > qx		1192592	0		>			
ANR	1192809	MemberAccess	( pt ) . x		1192592	0					
ANR	1192810	Identifier	pt		1192592	0					
ANR	1192811	Identifier	x		1192592	1					
ANR	1192812	Identifier	qx		1192592	1					
ANR	1192813	ExpressionStatement	qx = ( pt ) . x	101:24:3163:3174	1192592	1	True				
ANR	1192814	AssignmentExpression	qx = ( pt ) . x		1192592	0		=			
ANR	1192815	Identifier	qx		1192592	0					
ANR	1192816	MemberAccess	( pt ) . x		1192592	1					
ANR	1192817	Identifier	pt		1192592	0					
ANR	1192818	Identifier	x		1192592	1					
ANR	1192819	IfStatement	if ( ( pt ) . y < py )		1192592	9					
ANR	1192820	Condition	( pt ) . y < py	102:6:3183:3193	1192592	0	True				
ANR	1192821	RelationalExpression	( pt ) . y < py		1192592	0		<			
ANR	1192822	MemberAccess	( pt ) . y		1192592	0					
ANR	1192823	Identifier	pt		1192592	0					
ANR	1192824	Identifier	y		1192592	1					
ANR	1192825	Identifier	py		1192592	1					
ANR	1192826	ExpressionStatement	py = ( pt ) . y	102:19:3196:3207	1192592	1	True				
ANR	1192827	AssignmentExpression	py = ( pt ) . y		1192592	0		=			
ANR	1192828	Identifier	py		1192592	0					
ANR	1192829	MemberAccess	( pt ) . y		1192592	1					
ANR	1192830	Identifier	pt		1192592	0					
ANR	1192831	Identifier	y		1192592	1					
ANR	1192832	ElseStatement	else		1192592	0					
ANR	1192833	IfStatement	if ( ( pt ) . y > qy )		1192592	0					
ANR	1192834	Condition	( pt ) . y > qy	103:11:3221:3231	1192592	0	True				
ANR	1192835	RelationalExpression	( pt ) . y > qy		1192592	0		>			
ANR	1192836	MemberAccess	( pt ) . y		1192592	0					
ANR	1192837	Identifier	pt		1192592	0					
ANR	1192838	Identifier	y		1192592	1					
ANR	1192839	Identifier	qy		1192592	1					
ANR	1192840	Statement	qy	103:24:3234:3235	1192592	1	True				
ANR	1192841	Statement	=	103:27:3237:3237	1192592	10	True				
ANR	1192842	Statement	(	103:29:3239:3239	1192592	11	True				
ANR	1192843	Statement	pt	103:30:3240:3241	1192592	12	True				
ANR	1192844	Statement	)	103:32:3242:3242	1192592	13	True				
ANR	1192845	Statement	.	103:33:3243:3243	1192592	14	True				
ANR	1192846	Statement	y	103:34:3244:3244	1192592	15	True				
ANR	1192847	WhileStatement	while ( ( pseg = pseg -> next ) != 0 )		1192592	16					
ANR	1192848	Condition	( pseg = pseg -> next ) != 0	105:15:3262:3285	1192592	0	True				
ANR	1192849	EqualityExpression	( pseg = pseg -> next ) != 0		1192592	0		!=			
ANR	1192850	AssignmentExpression	pseg = pseg -> next		1192592	0		=			
ANR	1192851	Identifier	pseg		1192592	0					
ANR	1192852	PtrMemberAccess	pseg -> next		1192592	1					
ANR	1192853	Identifier	pseg		1192592	0					
ANR	1192854	Identifier	next		1192592	1					
ANR	1192855	PrimaryExpression	0		1192592	1					
ANR	1192856	CompoundStatement		46:41:1452:1452	1192592	1					
ANR	1192857	SwitchStatement	switch ( pseg -> type )		1192592	0					
ANR	1192858	Condition	pseg -> type	106:20:3310:3319	1192592	0	True				
ANR	1192859	PtrMemberAccess	pseg -> type		1192592	0					
ANR	1192860	Identifier	pseg		1192592	0					
ANR	1192861	Identifier	type		1192592	1					
ANR	1192862	CompoundStatement		47:32:1486:1486	1192592	1					
ANR	1192863	Label	case s_curve :	107:16:3340:3352	1192592	0	True				
ANR	1192864	Identifier	s_curve		1192592	0					
ANR	1192865	ExpressionStatement	ADJUST_BBOX ( ( ( const curve_segment * ) pseg ) -> p1 )	108:20:3374:3420	1192592	1	True				
ANR	1192866	CallExpression	ADJUST_BBOX ( ( ( const curve_segment * ) pseg ) -> p1 )		1192592	0					
ANR	1192867	Callee	ADJUST_BBOX		1192592	0					
ANR	1192868	Identifier	ADJUST_BBOX		1192592	0					
ANR	1192869	ArgumentList	( ( const curve_segment * ) pseg ) -> p1		1192592	1					
ANR	1192870	Argument	( ( const curve_segment * ) pseg ) -> p1		1192592	0					
ANR	1192871	PtrMemberAccess	( ( const curve_segment * ) pseg ) -> p1		1192592	0					
ANR	1192872	CastExpression	( const curve_segment * ) pseg		1192592	0					
ANR	1192873	CastTarget	const curve_segment *		1192592	0					
ANR	1192874	Identifier	pseg		1192592	1					
ANR	1192875	Identifier	p1		1192592	1					
ANR	1192876	ExpressionStatement	ADJUST_BBOX ( ( ( const curve_segment * ) pseg ) -> p2 )	109:20:3442:3488	1192592	2	True				
ANR	1192877	CallExpression	ADJUST_BBOX ( ( ( const curve_segment * ) pseg ) -> p2 )		1192592	0					
ANR	1192878	Callee	ADJUST_BBOX		1192592	0					
ANR	1192879	Identifier	ADJUST_BBOX		1192592	0					
ANR	1192880	ArgumentList	( ( const curve_segment * ) pseg ) -> p2		1192592	1					
ANR	1192881	Argument	( ( const curve_segment * ) pseg ) -> p2		1192592	0					
ANR	1192882	PtrMemberAccess	( ( const curve_segment * ) pseg ) -> p2		1192592	0					
ANR	1192883	CastExpression	( const curve_segment * ) pseg		1192592	0					
ANR	1192884	CastTarget	const curve_segment *		1192592	0					
ANR	1192885	Identifier	pseg		1192592	1					
ANR	1192886	Identifier	p2		1192592	1					
ANR	1192887	Label	default :	111:16:3546:3553	1192592	3	True				
ANR	1192888	Identifier	default		1192592	0					
ANR	1192889	ExpressionStatement	ADJUST_BBOX ( pseg -> pt )	112:20:3575:3596	1192592	4	True				
ANR	1192890	CallExpression	ADJUST_BBOX ( pseg -> pt )		1192592	0					
ANR	1192891	Callee	ADJUST_BBOX		1192592	0					
ANR	1192892	Identifier	ADJUST_BBOX		1192592	0					
ANR	1192893	ArgumentList	pseg -> pt		1192592	1					
ANR	1192894	Argument	pseg -> pt		1192592	0					
ANR	1192895	PtrMemberAccess	pseg -> pt		1192592	0					
ANR	1192896	Identifier	pseg		1192592	0					
ANR	1192897	Identifier	pt		1192592	1					
ANR	1192898	Statement	undef	115:1:3623:3627	1192592	17	True				
ANR	1192899	Statement	ADJUST_BBOX	115:7:3629:3639	1192592	18	True				
ANR	1192900	Statement	define	117:1:3643:3648	1192592	19	True				
ANR	1192901	ExpressionStatement	"STORE_BBOX ( b ) ( b ) . p . x = px , ( b ) . p . y = py , ( b ) . q . x = qx , ( b ) . q . y = qy"	117:8:3650:3721	1192592	20	True				
ANR	1192902	Expression	"STORE_BBOX ( b ) ( b ) . p . x = px , ( b ) . p . y = py , ( b ) . q . x = qx , ( b ) . q . y = qy"		1192592	0					
ANR	1192903	AssignmentExpression	STORE_BBOX ( b ) ( b ) . p . x = px		1192592	0		=			
ANR	1192904	MemberAccess	STORE_BBOX ( b ) ( b ) . p . x		1192592	0					
ANR	1192905	MemberAccess	STORE_BBOX ( b ) ( b ) . p		1192592	0					
ANR	1192906	CallExpression	STORE_BBOX ( b ) ( b )		1192592	0					
ANR	1192907	Callee	STORE_BBOX ( b )		1192592	0					
ANR	1192908	CallExpression	STORE_BBOX ( b )		1192592	0					
ANR	1192909	Callee	STORE_BBOX		1192592	0					
ANR	1192910	Identifier	STORE_BBOX		1192592	0					
ANR	1192911	ArgumentList	b		1192592	1					
ANR	1192912	Argument	b		1192592	0					
ANR	1192913	Identifier	b		1192592	0					
ANR	1192914	ArgumentList	b		1192592	1					
ANR	1192915	Argument	b		1192592	0					
ANR	1192916	Identifier	b		1192592	0					
ANR	1192917	Identifier	p		1192592	1					
ANR	1192918	Identifier	x		1192592	1					
ANR	1192919	Identifier	px		1192592	1					
ANR	1192920	Expression	"( b ) . p . y = py , ( b ) . q . x = qx , ( b ) . q . y = qy"		1192592	1					
ANR	1192921	AssignmentExpression	( b ) . p . y = py		1192592	0		=			
ANR	1192922	MemberAccess	( b ) . p . y		1192592	0					
ANR	1192923	MemberAccess	( b ) . p		1192592	0					
ANR	1192924	Identifier	b		1192592	0					
ANR	1192925	Identifier	p		1192592	1					
ANR	1192926	Identifier	y		1192592	1					
ANR	1192927	Identifier	py		1192592	1					
ANR	1192928	Expression	"( b ) . q . x = qx , ( b ) . q . y = qy"		1192592	1					
ANR	1192929	AssignmentExpression	( b ) . q . x = qx		1192592	0		=			
ANR	1192930	MemberAccess	( b ) . q . x		1192592	0					
ANR	1192931	MemberAccess	( b ) . q		1192592	0					
ANR	1192932	Identifier	b		1192592	0					
ANR	1192933	Identifier	q		1192592	1					
ANR	1192934	Identifier	x		1192592	1					
ANR	1192935	Identifier	qx		1192592	1					
ANR	1192936	AssignmentExpression	( b ) . q . y = qy		1192592	1		=			
ANR	1192937	MemberAccess	( b ) . q . y		1192592	0					
ANR	1192938	MemberAccess	( b ) . q		1192592	0					
ANR	1192939	Identifier	b		1192592	0					
ANR	1192940	Identifier	q		1192592	1					
ANR	1192941	Identifier	y		1192592	1					
ANR	1192942	Identifier	qy		1192592	1					
ANR	1192943	ExpressionStatement	STORE_BBOX ( * pbox )	119:8:3731:3748	1192592	21	True				
ANR	1192944	CallExpression	STORE_BBOX ( * pbox )		1192592	0					
ANR	1192945	Callee	STORE_BBOX		1192592	0					
ANR	1192946	Identifier	STORE_BBOX		1192592	0					
ANR	1192947	ArgumentList	* pbox		1192592	1					
ANR	1192948	Argument	* pbox		1192592	0					
ANR	1192949	UnaryOperationExpression	* pbox		1192592	0					
ANR	1192950	UnaryOperator	*		1192592	0					
ANR	1192951	Identifier	pbox		1192592	1					
ANR	1192952	ExpressionStatement	STORE_BBOX ( ppath -> bbox )	120:8:3758:3781	1192592	22	True				
ANR	1192953	CallExpression	STORE_BBOX ( ppath -> bbox )		1192592	0					
ANR	1192954	Callee	STORE_BBOX		1192592	0					
ANR	1192955	Identifier	STORE_BBOX		1192592	0					
ANR	1192956	ArgumentList	ppath -> bbox		1192592	1					
ANR	1192957	Argument	ppath -> bbox		1192592	0					
ANR	1192958	PtrMemberAccess	ppath -> bbox		1192592	0					
ANR	1192959	Identifier	ppath		1192592	0					
ANR	1192960	Identifier	bbox		1192592	1					
ANR	1192961	Statement	undef	121:1:3784:3788	1192592	23	True				
ANR	1192962	Statement	STORE_BBOX	121:7:3790:3799	1192592	24	True				
ANR	1192963	ExpressionStatement	ppath -> box_last = ppath -> current_subpath -> last	123:8:3810:3856	1192592	25	True				
ANR	1192964	AssignmentExpression	ppath -> box_last = ppath -> current_subpath -> last		1192592	0		=			
ANR	1192965	PtrMemberAccess	ppath -> box_last		1192592	0					
ANR	1192966	Identifier	ppath		1192592	0					
ANR	1192967	Identifier	box_last		1192592	1					
ANR	1192968	PtrMemberAccess	ppath -> current_subpath -> last		1192592	1					
ANR	1192969	PtrMemberAccess	ppath -> current_subpath		1192592	0					
ANR	1192970	Identifier	ppath		1192592	0					
ANR	1192971	Identifier	current_subpath		1192592	1					
ANR	1192972	Identifier	last		1192592	1					
ANR	1192973	ReturnStatement	return 0 ;	125:4:3868:3876	1192592	3	True				
ANR	1192974	PrimaryExpression	0		1192592	0					
ANR	1192975	ReturnType	int		1192592	1					
ANR	1192976	Identifier	gx_path_bbox		1192592	2					
ANR	1192977	ParameterList	"gx_path * ppath , gs_fixed_rect * pbox"		1192592	3					
ANR	1192978	Parameter	gx_path * ppath	59:13:1796:1810	1192592	0	True				
ANR	1192979	ParameterType	gx_path *		1192592	0					
ANR	1192980	Identifier	ppath		1192592	1					
ANR	1192981	Parameter	gs_fixed_rect * pbox	59:30:1813:1832	1192592	1	True				
ANR	1192982	ParameterType	gs_fixed_rect *		1192592	0					
ANR	1192983	Identifier	pbox		1192592	1					
ANR	1192984	CFGEntryNode	ENTRY		1192592		True				
ANR	1192985	CFGExitNode	EXIT		1192592		True				
ANR	1192986	Symbol	* ppath -> current_subpath		1192592						
ANR	1192987	Symbol	ppath -> current_subpath -> last		1192592						
ANR	1192988	Symbol	ppath -> current_subpath		1192592						
ANR	1192989	Symbol	pt		1192592						
ANR	1192990	Symbol	px		1192592						
ANR	1192991	Symbol	py		1192592						
ANR	1192992	Symbol	( b ) . p . y		1192592						
ANR	1192993	Symbol	ppath -> bbox		1192592						
ANR	1192994	Symbol	pseg -> next		1192592						
ANR	1192995	Symbol	* ppath		1192592						
ANR	1192996	Symbol	( pt ) . x		1192592						
ANR	1192997	Symbol	ppath -> bbox . p		1192592						
ANR	1192998	Symbol	ppath -> bbox . q		1192592						
ANR	1192999	Symbol	( pt ) . y		1192592						
ANR	1193000	Symbol	qx		1192592						
ANR	1193001	Symbol	qy		1192592						
ANR	1193002	Symbol	pseg -> pt . x		1192592						
ANR	1193003	Symbol	pseg -> pt . y		1192592						
ANR	1193004	Symbol	STORE_BBOX ( b ) ( b ) . p . x		1192592						
ANR	1193005	Symbol	* pbox		1192592						
ANR	1193006	Symbol	( b ) . p		1192592						
ANR	1193007	Symbol	* * ppath		1192592						
ANR	1193008	Symbol	( b ) . q		1192592						
ANR	1193009	Symbol	* pseg		1192592						
ANR	1193010	Symbol	code		1192592						
ANR	1193011	Symbol	( ( const curve_segment * ) pseg ) -> p2		1192592						
ANR	1193012	Symbol	( ( const curve_segment * ) pseg ) -> p1		1192592						
ANR	1193013	Symbol	ppath		1192592						
ANR	1193014	Symbol	ppath -> first_subpath		1192592						
ANR	1193015	Symbol	ppath -> bbox_accurate		1192592						
ANR	1193016	Symbol	pseg		1192592						
ANR	1193017	Symbol	pseg -> pt		1192592						
ANR	1193018	Symbol	pseg -> type		1192592						
ANR	1193019	Symbol	ppath -> bbox . q . x		1192592						
ANR	1193020	Symbol	& pbox -> p		1192592						
ANR	1193021	Symbol	ppath -> bbox . q . y		1192592						
ANR	1193022	Symbol	b		1192592						
ANR	1193023	Symbol	pbox -> p . x		1192592						
ANR	1193024	Symbol	pbox -> p . y		1192592						
ANR	1193025	Symbol	ppath -> bbox . p . x		1192592						
ANR	1193026	Symbol	ppath -> bbox . p . y		1192592						
ANR	1193027	Symbol	pbox		1192592						
ANR	1193028	Symbol	gx_path_current_point		1192592						
ANR	1193029	Symbol	STORE_BBOX ( b ) ( b ) . p		1192592						
ANR	1193030	Symbol	pbox -> q		1192592						
ANR	1193031	Symbol	pbox -> p		1192592						
ANR	1193032	Symbol	ppath -> box_last		1192592						
ANR	1193033	Symbol	( b ) . q . x		1192592						
ANR	1193034	Symbol	( b ) . q . y		1192592						
ANR	1193035	Symbol	STORE_BBOX		1192592						
ANR	1193036	Function	gx_path_bbox_set	129:0:3951:4191							
ANR	1193037	FunctionDef	"gx_path_bbox_set (gx_path * ppath , gs_fixed_rect * pbox)"		1193036	0					
ANR	1193038	CompoundStatement		131:0:4011:4191	1193036	0					
ANR	1193039	IfStatement	if ( ppath -> bbox_set )		1193036	0					
ANR	1193040	Condition	ppath -> bbox_set	132:8:4021:4035	1193036	0	True				
ANR	1193041	PtrMemberAccess	ppath -> bbox_set		1193036	0					
ANR	1193042	Identifier	ppath		1193036	0					
ANR	1193043	Identifier	bbox_set		1193036	1					
ANR	1193044	CompoundStatement		2:25:26:26	1193036	1					
ANR	1193045	ExpressionStatement	* pbox = ppath -> bbox	134:8:4099:4118	1193036	0	True				
ANR	1193046	AssignmentExpression	* pbox = ppath -> bbox		1193036	0		=			
ANR	1193047	UnaryOperationExpression	* pbox		1193036	0					
ANR	1193048	UnaryOperator	*		1193036	0					
ANR	1193049	Identifier	pbox		1193036	1					
ANR	1193050	PtrMemberAccess	ppath -> bbox		1193036	1					
ANR	1193051	Identifier	ppath		1193036	0					
ANR	1193052	Identifier	bbox		1193036	1					
ANR	1193053	ReturnStatement	return 0 ;	135:8:4128:4136	1193036	1	True				
ANR	1193054	PrimaryExpression	0		1193036	0					
ANR	1193055	ElseStatement	else		1193036	0					
ANR	1193056	ReturnStatement	"return gx_path_bbox ( ppath , pbox ) ;"	137:8:4157:4189	1193036	0	True				
ANR	1193057	CallExpression	"gx_path_bbox ( ppath , pbox )"		1193036	0					
ANR	1193058	Callee	gx_path_bbox		1193036	0					
ANR	1193059	Identifier	gx_path_bbox		1193036	0					
ANR	1193060	ArgumentList	ppath		1193036	1					
ANR	1193061	Argument	ppath		1193036	0					
ANR	1193062	Identifier	ppath		1193036	0					
ANR	1193063	Argument	pbox		1193036	1					
ANR	1193064	Identifier	pbox		1193036	0					
ANR	1193065	ReturnType	int		1193036	1					
ANR	1193066	Identifier	gx_path_bbox_set		1193036	2					
ANR	1193067	ParameterList	"gx_path * ppath , gs_fixed_rect * pbox"		1193036	3					
ANR	1193068	Parameter	gx_path * ppath	130:17:3972:3986	1193036	0	True				
ANR	1193069	ParameterType	gx_path *		1193036	0					
ANR	1193070	Identifier	ppath		1193036	1					
ANR	1193071	Parameter	gs_fixed_rect * pbox	130:34:3989:4008	1193036	1	True				
ANR	1193072	ParameterType	gs_fixed_rect *		1193036	0					
ANR	1193073	Identifier	pbox		1193036	1					
ANR	1193074	CFGEntryNode	ENTRY		1193036		True				
ANR	1193075	CFGExitNode	EXIT		1193036		True				
ANR	1193076	Symbol	* ppath		1193036						
ANR	1193077	Symbol	gx_path_bbox		1193036						
ANR	1193078	Symbol	* pbox		1193036						
ANR	1193079	Symbol	ppath -> bbox_set		1193036						
ANR	1193080	Symbol	ppath		1193036						
ANR	1193081	Symbol	pbox		1193036						
ANR	1193082	Symbol	ppath -> bbox		1193036						
ANR	1193083	Function	gx_path_has_curves	141:1:4232:4351							
ANR	1193084	FunctionDef	gx_path_has_curves (const gx_path * ppath)		1193083	0					
ANR	1193085	CompoundStatement		144:0:4304:4351	1193083	0					
ANR	1193086	ReturnStatement	return gx_path_has_curves_inline ( ppath ) ;	145:4:4310:4349	1193083	0	True				
ANR	1193087	CallExpression	gx_path_has_curves_inline ( ppath )		1193083	0					
ANR	1193088	Callee	gx_path_has_curves_inline		1193083	0					
ANR	1193089	Identifier	gx_path_has_curves_inline		1193083	0					
ANR	1193090	ArgumentList	ppath		1193083	1					
ANR	1193091	Argument	ppath		1193083	0					
ANR	1193092	Identifier	ppath		1193083	0					
ANR	1193093	ReturnType	undef gx_path_has_curves bool		1193083	1					
ANR	1193094	Identifier	gx_path_has_curves		1193083	2					
ANR	1193095	ParameterList	const gx_path * ppath		1193083	3					
ANR	1193096	Parameter	const gx_path * ppath	143:19:4281:4301	1193083	0	True				
ANR	1193097	ParameterType	const gx_path *		1193083	0					
ANR	1193098	Identifier	ppath		1193083	1					
ANR	1193099	CFGEntryNode	ENTRY		1193083		True				
ANR	1193100	CFGExitNode	EXIT		1193083		True				
ANR	1193101	Symbol	gx_path_has_curves_inline		1193083						
ANR	1193102	Symbol	ppath		1193083						
ANR	1193103	Function	gx_path_is_void	151:1:4463:4573							
ANR	1193104	FunctionDef	gx_path_is_void (const gx_path * ppath)		1193103	0					
ANR	1193105	CompoundStatement		154:0:4529:4573	1193103	0					
ANR	1193106	ReturnStatement	return gx_path_is_void_inline ( ppath ) ;	155:4:4535:4571	1193103	0	True				
ANR	1193107	CallExpression	gx_path_is_void_inline ( ppath )		1193103	0					
ANR	1193108	Callee	gx_path_is_void_inline		1193103	0					
ANR	1193109	Identifier	gx_path_is_void_inline		1193103	0					
ANR	1193110	ArgumentList	ppath		1193103	1					
ANR	1193111	Argument	ppath		1193103	0					
ANR	1193112	Identifier	ppath		1193103	0					
ANR	1193113	ReturnType	undef gx_path_is_void bool		1193103	1					
ANR	1193114	Identifier	gx_path_is_void		1193103	2					
ANR	1193115	ParameterList	const gx_path * ppath		1193103	3					
ANR	1193116	Parameter	const gx_path * ppath	153:16:4506:4526	1193103	0	True				
ANR	1193117	ParameterType	const gx_path *		1193103	0					
ANR	1193118	Identifier	ppath		1193103	1					
ANR	1193119	CFGEntryNode	ENTRY		1193103		True				
ANR	1193120	CFGExitNode	EXIT		1193103		True				
ANR	1193121	Symbol	gx_path_is_void_inline		1193103						
ANR	1193122	Symbol	ppath		1193103						
ANR	1193123	Function	gx_path_is_null	161:0:4685:4773							
ANR	1193124	FunctionDef	gx_path_is_null (const gx_path * ppath)		1193123	0					
ANR	1193125	CompoundStatement		163:0:4729:4773	1193123	0					
ANR	1193126	ReturnStatement	return gx_path_is_null_inline ( ppath ) ;	164:4:4735:4771	1193123	0	True				
ANR	1193127	CallExpression	gx_path_is_null_inline ( ppath )		1193123	0					
ANR	1193128	Callee	gx_path_is_null_inline		1193123	0					
ANR	1193129	Identifier	gx_path_is_null_inline		1193123	0					
ANR	1193130	ArgumentList	ppath		1193123	1					
ANR	1193131	Argument	ppath		1193123	0					
ANR	1193132	Identifier	ppath		1193123	0					
ANR	1193133	ReturnType	bool		1193123	1					
ANR	1193134	Identifier	gx_path_is_null		1193123	2					
ANR	1193135	ParameterList	const gx_path * ppath		1193123	3					
ANR	1193136	Parameter	const gx_path * ppath	162:16:4706:4726	1193123	0	True				
ANR	1193137	ParameterType	const gx_path *		1193123	0					
ANR	1193138	Identifier	ppath		1193123	1					
ANR	1193139	CFGEntryNode	ENTRY		1193123		True				
ANR	1193140	CFGExitNode	EXIT		1193123		True				
ANR	1193141	Symbol	gx_path_is_null_inline		1193123						
ANR	1193142	Symbol	ppath		1193123						
ANR	1193143	Function	gx_subpath_is_rectangular	177:0:5206:8823							
ANR	1193144	FunctionDef	"gx_subpath_is_rectangular (const subpath * pseg0 , gs_fixed_rect * pbox , const subpath * * ppnext)"		1193143	0					
ANR	1193145	CompoundStatement		180:0:5353:8823	1193143	0					
ANR	1193146	IdentifierDeclStatement	"const segment * pseg1 , * pseg2 , * pseg3 , * pseg4 ;"	181:4:5359:5403	1193143	0	True				
ANR	1193147	IdentifierDecl	* pseg1		1193143	0					
ANR	1193148	IdentifierDeclType	const segment *		1193143	0					
ANR	1193149	Identifier	pseg1		1193143	1					
ANR	1193150	IdentifierDecl	* pseg2		1193143	1					
ANR	1193151	IdentifierDeclType	const segment *		1193143	0					
ANR	1193152	Identifier	pseg2		1193143	1					
ANR	1193153	IdentifierDecl	* pseg3		1193143	2					
ANR	1193154	IdentifierDeclType	const segment *		1193143	0					
ANR	1193155	Identifier	pseg3		1193143	1					
ANR	1193156	IdentifierDecl	* pseg4		1193143	3					
ANR	1193157	IdentifierDeclType	const segment *		1193143	0					
ANR	1193158	Identifier	pseg4		1193143	1					
ANR	1193159	IdentifierDeclStatement	gx_path_rectangular_type type = prt_none ;	182:4:5409:5449	1193143	1	True				
ANR	1193160	IdentifierDecl	type = prt_none		1193143	0					
ANR	1193161	IdentifierDeclType	gx_path_rectangular_type		1193143	0					
ANR	1193162	Identifier	type		1193143	1					
ANR	1193163	AssignmentExpression	type = prt_none		1193143	2		=			
ANR	1193164	Identifier	prt_none		1193143	0					
ANR	1193165	Identifier	prt_none		1193143	1					
ANR	1193166	IdentifierDeclStatement	"fixed x0 = pseg0 -> pt . x , y0 = pseg0 -> pt . y ;"	183:4:5455:5495	1193143	2	True				
ANR	1193167	IdentifierDecl	x0 = pseg0 -> pt . x		1193143	0					
ANR	1193168	IdentifierDeclType	fixed		1193143	0					
ANR	1193169	Identifier	x0		1193143	1					
ANR	1193170	AssignmentExpression	x0 = pseg0 -> pt . x		1193143	2		=			
ANR	1193171	Identifier	x0		1193143	0					
ANR	1193172	MemberAccess	pseg0 -> pt . x		1193143	1					
ANR	1193173	PtrMemberAccess	pseg0 -> pt		1193143	0					
ANR	1193174	Identifier	pseg0		1193143	0					
ANR	1193175	Identifier	pt		1193143	1					
ANR	1193176	Identifier	x		1193143	1					
ANR	1193177	IdentifierDecl	y0 = pseg0 -> pt . y		1193143	1					
ANR	1193178	IdentifierDeclType	fixed		1193143	0					
ANR	1193179	Identifier	y0		1193143	1					
ANR	1193180	AssignmentExpression	y0 = pseg0 -> pt . y		1193143	2		=			
ANR	1193181	Identifier	y0		1193143	0					
ANR	1193182	MemberAccess	pseg0 -> pt . y		1193143	1					
ANR	1193183	PtrMemberAccess	pseg0 -> pt		1193143	0					
ANR	1193184	Identifier	pseg0		1193143	0					
ANR	1193185	Identifier	pt		1193143	1					
ANR	1193186	Identifier	y		1193143	1					
ANR	1193187	IdentifierDeclStatement	"fixed x1 , y1 , x2 , y2 , x3 , y3 ;"	184:4:5501:5529	1193143	3	True				
ANR	1193188	IdentifierDecl	x1		1193143	0					
ANR	1193189	IdentifierDeclType	fixed		1193143	0					
ANR	1193190	Identifier	x1		1193143	1					
ANR	1193191	IdentifierDecl	y1		1193143	1					
ANR	1193192	IdentifierDeclType	fixed		1193143	0					
ANR	1193193	Identifier	y1		1193143	1					
ANR	1193194	IdentifierDecl	x2		1193143	2					
ANR	1193195	IdentifierDeclType	fixed		1193143	0					
ANR	1193196	Identifier	x2		1193143	1					
ANR	1193197	IdentifierDecl	y2		1193143	3					
ANR	1193198	IdentifierDeclType	fixed		1193143	0					
ANR	1193199	Identifier	y2		1193143	1					
ANR	1193200	IdentifierDecl	x3		1193143	4					
ANR	1193201	IdentifierDeclType	fixed		1193143	0					
ANR	1193202	Identifier	x3		1193143	1					
ANR	1193203	IdentifierDecl	y3		1193143	5					
ANR	1193204	IdentifierDeclType	fixed		1193143	0					
ANR	1193205	Identifier	y3		1193143	1					
ANR	1193206	ExpressionStatement	pseg1 = ( const segment * ) pseg0	186:4:5536:5566	1193143	4	True				
ANR	1193207	AssignmentExpression	pseg1 = ( const segment * ) pseg0		1193143	0		=			
ANR	1193208	Identifier	pseg1		1193143	0					
ANR	1193209	CastExpression	( const segment * ) pseg0		1193143	1					
ANR	1193210	CastTarget	const segment *		1193143	0					
ANR	1193211	Identifier	pseg0		1193143	1					
ANR	1193212	DoStatement	do		1193143	5					
ANR	1193213	CompoundStatement		8:7:221:221	1193143	0					
ANR	1193214	ExpressionStatement	pseg1 = pseg1 -> next	188:8:5585:5604	1193143	0	True				
ANR	1193215	AssignmentExpression	pseg1 = pseg1 -> next		1193143	0		=			
ANR	1193216	Identifier	pseg1		1193143	0					
ANR	1193217	PtrMemberAccess	pseg1 -> next		1193143	1					
ANR	1193218	Identifier	pseg1		1193143	0					
ANR	1193219	Identifier	next		1193143	1					
ANR	1193220	IfStatement	if ( pseg1 == NULL )		1193143	1					
ANR	1193221	Condition	pseg1 == NULL	189:12:5618:5630	1193143	0	True				
ANR	1193222	EqualityExpression	pseg1 == NULL		1193143	0		==			
ANR	1193223	Identifier	pseg1		1193143	0					
ANR	1193224	Identifier	NULL		1193143	1					
ANR	1193225	ReturnStatement	return prt_none ;	190:12:5645:5660	1193143	1	True				
ANR	1193226	Identifier	prt_none		1193143	0					
ANR	1193227	ExpressionStatement	x1 = pseg1 -> pt . x	191:8:5670:5686	1193143	2	True				
ANR	1193228	AssignmentExpression	x1 = pseg1 -> pt . x		1193143	0		=			
ANR	1193229	Identifier	x1		1193143	0					
ANR	1193230	MemberAccess	pseg1 -> pt . x		1193143	1					
ANR	1193231	PtrMemberAccess	pseg1 -> pt		1193143	0					
ANR	1193232	Identifier	pseg1		1193143	0					
ANR	1193233	Identifier	pt		1193143	1					
ANR	1193234	Identifier	x		1193143	1					
ANR	1193235	ExpressionStatement	y1 = pseg1 -> pt . y	192:8:5696:5712	1193143	3	True				
ANR	1193236	AssignmentExpression	y1 = pseg1 -> pt . y		1193143	0		=			
ANR	1193237	Identifier	y1		1193143	0					
ANR	1193238	MemberAccess	pseg1 -> pt . y		1193143	1					
ANR	1193239	PtrMemberAccess	pseg1 -> pt		1193143	0					
ANR	1193240	Identifier	pseg1		1193143	0					
ANR	1193241	Identifier	pt		1193143	1					
ANR	1193242	Identifier	y		1193143	1					
ANR	1193243	IfStatement	if ( pseg1 -> type == s_curve )		1193143	4					
ANR	1193244	Condition	pseg1 -> type == s_curve	193:12:5726:5747	1193143	0	True				
ANR	1193245	EqualityExpression	pseg1 -> type == s_curve		1193143	0		==			
ANR	1193246	PtrMemberAccess	pseg1 -> type		1193143	0					
ANR	1193247	Identifier	pseg1		1193143	0					
ANR	1193248	Identifier	type		1193143	1					
ANR	1193249	Identifier	s_curve		1193143	1					
ANR	1193250	CompoundStatement		14:36:396:396	1193143	1					
ANR	1193251	IfStatement	"if ( gx_curve_is_really_point ( x0 , y0 , pseg1 ) )"		1193143	0					
ANR	1193252	Condition	"gx_curve_is_really_point ( x0 , y0 , pseg1 )"	194:16:5768:5806	1193143	0	True				
ANR	1193253	CallExpression	"gx_curve_is_really_point ( x0 , y0 , pseg1 )"		1193143	0					
ANR	1193254	Callee	gx_curve_is_really_point		1193143	0					
ANR	1193255	Identifier	gx_curve_is_really_point		1193143	0					
ANR	1193256	ArgumentList	x0		1193143	1					
ANR	1193257	Argument	x0		1193143	0					
ANR	1193258	Identifier	x0		1193143	0					
ANR	1193259	Argument	y0		1193143	1					
ANR	1193260	Identifier	y0		1193143	0					
ANR	1193261	Argument	pseg1		1193143	2					
ANR	1193262	Identifier	pseg1		1193143	0					
ANR	1193263	ContinueStatement	continue ;	195:16:5825:5833	1193143	1	True				
ANR	1193264	IfStatement	"if ( gx_curve_is_really_line ( x0 , y0 , pseg1 ) )"		1193143	1					
ANR	1193265	Condition	"gx_curve_is_really_line ( x0 , y0 , pseg1 )"	196:16:5887:5924	1193143	0	True				
ANR	1193266	CallExpression	"gx_curve_is_really_line ( x0 , y0 , pseg1 )"		1193143	0					
ANR	1193267	Callee	gx_curve_is_really_line		1193143	0					
ANR	1193268	Identifier	gx_curve_is_really_line		1193143	0					
ANR	1193269	ArgumentList	x0		1193143	1					
ANR	1193270	Argument	x0		1193143	0					
ANR	1193271	Identifier	x0		1193143	0					
ANR	1193272	Argument	y0		1193143	1					
ANR	1193273	Identifier	y0		1193143	0					
ANR	1193274	Argument	pseg1		1193143	2					
ANR	1193275	Identifier	pseg1		1193143	0					
ANR	1193276	BreakStatement	break ;	197:16:5943:5948	1193143	1	True				
ANR	1193277	ReturnStatement	return prt_none ;	198:12:5980:5995	1193143	2	True				
ANR	1193278	Identifier	prt_none		1193143	0					
ANR	1193279	ElseStatement	else		1193143	0					
ANR	1193280	IfStatement	if ( pseg1 -> type != s_line && pseg1 -> type != s_gap )		1193143	0					
ANR	1193281	Condition	pseg1 -> type != s_line && pseg1 -> type != s_gap	199:19:6016:6060	1193143	0	True				
ANR	1193282	AndExpression	pseg1 -> type != s_line && pseg1 -> type != s_gap		1193143	0		&&			
ANR	1193283	EqualityExpression	pseg1 -> type != s_line		1193143	0		!=			
ANR	1193284	PtrMemberAccess	pseg1 -> type		1193143	0					
ANR	1193285	Identifier	pseg1		1193143	0					
ANR	1193286	Identifier	type		1193143	1					
ANR	1193287	Identifier	s_line		1193143	1					
ANR	1193288	EqualityExpression	pseg1 -> type != s_gap		1193143	1		!=			
ANR	1193289	PtrMemberAccess	pseg1 -> type		1193143	0					
ANR	1193290	Identifier	pseg1		1193143	0					
ANR	1193291	Identifier	type		1193143	1					
ANR	1193292	Identifier	s_gap		1193143	1					
ANR	1193293	ReturnStatement	return prt_none ;	200:12:6075:6090	1193143	1	True				
ANR	1193294	Identifier	prt_none		1193143	0					
ANR	1193295	Condition	x1 == x0 && y1 == y0	201:13:6105:6124	1193143	1	True				
ANR	1193296	AndExpression	x1 == x0 && y1 == y0		1193143	0		&&			
ANR	1193297	EqualityExpression	x1 == x0		1193143	0		==			
ANR	1193298	Identifier	x1		1193143	0					
ANR	1193299	Identifier	x0		1193143	1					
ANR	1193300	EqualityExpression	y1 == y0		1193143	1		==			
ANR	1193301	Identifier	y1		1193143	0					
ANR	1193302	Identifier	y0		1193143	1					
ANR	1193303	ExpressionStatement	pseg2 = pseg1	203:4:6133:6146	1193143	6	True				
ANR	1193304	AssignmentExpression	pseg2 = pseg1		1193143	0		=			
ANR	1193305	Identifier	pseg2		1193143	0					
ANR	1193306	Identifier	pseg1		1193143	1					
ANR	1193307	DoStatement	do		1193143	7					
ANR	1193308	CompoundStatement		25:7:801:801	1193143	0					
ANR	1193309	ExpressionStatement	pseg2 = pseg2 -> next	205:8:6165:6184	1193143	0	True				
ANR	1193310	AssignmentExpression	pseg2 = pseg2 -> next		1193143	0		=			
ANR	1193311	Identifier	pseg2		1193143	0					
ANR	1193312	PtrMemberAccess	pseg2 -> next		1193143	1					
ANR	1193313	Identifier	pseg2		1193143	0					
ANR	1193314	Identifier	next		1193143	1					
ANR	1193315	IfStatement	if ( pseg2 == NULL )		1193143	1					
ANR	1193316	Condition	pseg2 == NULL	206:12:6198:6210	1193143	0	True				
ANR	1193317	EqualityExpression	pseg2 == NULL		1193143	0		==			
ANR	1193318	Identifier	pseg2		1193143	0					
ANR	1193319	Identifier	NULL		1193143	1					
ANR	1193320	ReturnStatement	return prt_none ;	207:12:6225:6240	1193143	1	True				
ANR	1193321	Identifier	prt_none		1193143	0					
ANR	1193322	ExpressionStatement	x2 = pseg2 -> pt . x	208:8:6250:6266	1193143	2	True				
ANR	1193323	AssignmentExpression	x2 = pseg2 -> pt . x		1193143	0		=			
ANR	1193324	Identifier	x2		1193143	0					
ANR	1193325	MemberAccess	pseg2 -> pt . x		1193143	1					
ANR	1193326	PtrMemberAccess	pseg2 -> pt		1193143	0					
ANR	1193327	Identifier	pseg2		1193143	0					
ANR	1193328	Identifier	pt		1193143	1					
ANR	1193329	Identifier	x		1193143	1					
ANR	1193330	ExpressionStatement	y2 = pseg2 -> pt . y	209:8:6276:6292	1193143	3	True				
ANR	1193331	AssignmentExpression	y2 = pseg2 -> pt . y		1193143	0		=			
ANR	1193332	Identifier	y2		1193143	0					
ANR	1193333	MemberAccess	pseg2 -> pt . y		1193143	1					
ANR	1193334	PtrMemberAccess	pseg2 -> pt		1193143	0					
ANR	1193335	Identifier	pseg2		1193143	0					
ANR	1193336	Identifier	pt		1193143	1					
ANR	1193337	Identifier	y		1193143	1					
ANR	1193338	IfStatement	if ( pseg2 -> type == s_curve )		1193143	4					
ANR	1193339	Condition	pseg2 -> type == s_curve	210:12:6306:6327	1193143	0	True				
ANR	1193340	EqualityExpression	pseg2 -> type == s_curve		1193143	0		==			
ANR	1193341	PtrMemberAccess	pseg2 -> type		1193143	0					
ANR	1193342	Identifier	pseg2		1193143	0					
ANR	1193343	Identifier	type		1193143	1					
ANR	1193344	Identifier	s_curve		1193143	1					
ANR	1193345	CompoundStatement		31:36:976:976	1193143	1					
ANR	1193346	IfStatement	"if ( gx_curve_is_really_point ( x1 , y1 , pseg2 ) )"		1193143	0					
ANR	1193347	Condition	"gx_curve_is_really_point ( x1 , y1 , pseg2 )"	211:16:6348:6386	1193143	0	True				
ANR	1193348	CallExpression	"gx_curve_is_really_point ( x1 , y1 , pseg2 )"		1193143	0					
ANR	1193349	Callee	gx_curve_is_really_point		1193143	0					
ANR	1193350	Identifier	gx_curve_is_really_point		1193143	0					
ANR	1193351	ArgumentList	x1		1193143	1					
ANR	1193352	Argument	x1		1193143	0					
ANR	1193353	Identifier	x1		1193143	0					
ANR	1193354	Argument	y1		1193143	1					
ANR	1193355	Identifier	y1		1193143	0					
ANR	1193356	Argument	pseg2		1193143	2					
ANR	1193357	Identifier	pseg2		1193143	0					
ANR	1193358	ContinueStatement	continue ;	212:16:6405:6413	1193143	1	True				
ANR	1193359	IfStatement	"if ( gx_curve_is_really_line ( x1 , y1 , pseg2 ) )"		1193143	1					
ANR	1193360	Condition	"gx_curve_is_really_line ( x1 , y1 , pseg2 )"	213:16:6467:6504	1193143	0	True				
ANR	1193361	CallExpression	"gx_curve_is_really_line ( x1 , y1 , pseg2 )"		1193143	0					
ANR	1193362	Callee	gx_curve_is_really_line		1193143	0					
ANR	1193363	Identifier	gx_curve_is_really_line		1193143	0					
ANR	1193364	ArgumentList	x1		1193143	1					
ANR	1193365	Argument	x1		1193143	0					
ANR	1193366	Identifier	x1		1193143	0					
ANR	1193367	Argument	y1		1193143	1					
ANR	1193368	Identifier	y1		1193143	0					
ANR	1193369	Argument	pseg2		1193143	2					
ANR	1193370	Identifier	pseg2		1193143	0					
ANR	1193371	BreakStatement	break ;	214:16:6523:6528	1193143	1	True				
ANR	1193372	ReturnStatement	return prt_none ;	215:12:6560:6575	1193143	2	True				
ANR	1193373	Identifier	prt_none		1193143	0					
ANR	1193374	ElseStatement	else		1193143	0					
ANR	1193375	IfStatement	if ( pseg2 -> type != s_line && pseg2 -> type != s_gap )		1193143	0					
ANR	1193376	Condition	pseg2 -> type != s_line && pseg2 -> type != s_gap	216:19:6596:6640	1193143	0	True				
ANR	1193377	AndExpression	pseg2 -> type != s_line && pseg2 -> type != s_gap		1193143	0		&&			
ANR	1193378	EqualityExpression	pseg2 -> type != s_line		1193143	0		!=			
ANR	1193379	PtrMemberAccess	pseg2 -> type		1193143	0					
ANR	1193380	Identifier	pseg2		1193143	0					
ANR	1193381	Identifier	type		1193143	1					
ANR	1193382	Identifier	s_line		1193143	1					
ANR	1193383	EqualityExpression	pseg2 -> type != s_gap		1193143	1		!=			
ANR	1193384	PtrMemberAccess	pseg2 -> type		1193143	0					
ANR	1193385	Identifier	pseg2		1193143	0					
ANR	1193386	Identifier	type		1193143	1					
ANR	1193387	Identifier	s_gap		1193143	1					
ANR	1193388	ReturnStatement	return prt_none ;	217:12:6655:6670	1193143	1	True				
ANR	1193389	Identifier	prt_none		1193143	0					
ANR	1193390	Condition	x2 == x1 && y2 == y1	218:13:6685:6704	1193143	1	True				
ANR	1193391	AndExpression	x2 == x1 && y2 == y1		1193143	0		&&			
ANR	1193392	EqualityExpression	x2 == x1		1193143	0		==			
ANR	1193393	Identifier	x2		1193143	0					
ANR	1193394	Identifier	x1		1193143	1					
ANR	1193395	EqualityExpression	y2 == y1		1193143	1		==			
ANR	1193396	Identifier	y2		1193143	0					
ANR	1193397	Identifier	y1		1193143	1					
ANR	1193398	ExpressionStatement	pseg3 = pseg2	220:4:6713:6726	1193143	8	True				
ANR	1193399	AssignmentExpression	pseg3 = pseg2		1193143	0		=			
ANR	1193400	Identifier	pseg3		1193143	0					
ANR	1193401	Identifier	pseg2		1193143	1					
ANR	1193402	DoStatement	do		1193143	9					
ANR	1193403	CompoundStatement		42:7:1381:1381	1193143	0					
ANR	1193404	ExpressionStatement	pseg3 = pseg3 -> next	222:8:6745:6764	1193143	0	True				
ANR	1193405	AssignmentExpression	pseg3 = pseg3 -> next		1193143	0		=			
ANR	1193406	Identifier	pseg3		1193143	0					
ANR	1193407	PtrMemberAccess	pseg3 -> next		1193143	1					
ANR	1193408	Identifier	pseg3		1193143	0					
ANR	1193409	Identifier	next		1193143	1					
ANR	1193410	IfStatement	if ( pseg3 == NULL )		1193143	1					
ANR	1193411	Condition	pseg3 == NULL	223:12:6778:6790	1193143	0	True				
ANR	1193412	EqualityExpression	pseg3 == NULL		1193143	0		==			
ANR	1193413	Identifier	pseg3		1193143	0					
ANR	1193414	Identifier	NULL		1193143	1					
ANR	1193415	ReturnStatement	return prt_none ;	224:12:6805:6820	1193143	1	True				
ANR	1193416	Identifier	prt_none		1193143	0					
ANR	1193417	ExpressionStatement	x3 = pseg3 -> pt . x	225:8:6830:6846	1193143	2	True				
ANR	1193418	AssignmentExpression	x3 = pseg3 -> pt . x		1193143	0		=			
ANR	1193419	Identifier	x3		1193143	0					
ANR	1193420	MemberAccess	pseg3 -> pt . x		1193143	1					
ANR	1193421	PtrMemberAccess	pseg3 -> pt		1193143	0					
ANR	1193422	Identifier	pseg3		1193143	0					
ANR	1193423	Identifier	pt		1193143	1					
ANR	1193424	Identifier	x		1193143	1					
ANR	1193425	ExpressionStatement	y3 = pseg3 -> pt . y	226:8:6856:6872	1193143	3	True				
ANR	1193426	AssignmentExpression	y3 = pseg3 -> pt . y		1193143	0		=			
ANR	1193427	Identifier	y3		1193143	0					
ANR	1193428	MemberAccess	pseg3 -> pt . y		1193143	1					
ANR	1193429	PtrMemberAccess	pseg3 -> pt		1193143	0					
ANR	1193430	Identifier	pseg3		1193143	0					
ANR	1193431	Identifier	pt		1193143	1					
ANR	1193432	Identifier	y		1193143	1					
ANR	1193433	IfStatement	if ( pseg3 -> type == s_curve )		1193143	4					
ANR	1193434	Condition	pseg3 -> type == s_curve	227:12:6886:6907	1193143	0	True				
ANR	1193435	EqualityExpression	pseg3 -> type == s_curve		1193143	0		==			
ANR	1193436	PtrMemberAccess	pseg3 -> type		1193143	0					
ANR	1193437	Identifier	pseg3		1193143	0					
ANR	1193438	Identifier	type		1193143	1					
ANR	1193439	Identifier	s_curve		1193143	1					
ANR	1193440	CompoundStatement		48:36:1556:1556	1193143	1					
ANR	1193441	IfStatement	"if ( gx_curve_is_really_point ( x2 , y2 , pseg3 ) )"		1193143	0					
ANR	1193442	Condition	"gx_curve_is_really_point ( x2 , y2 , pseg3 )"	228:16:6928:6966	1193143	0	True				
ANR	1193443	CallExpression	"gx_curve_is_really_point ( x2 , y2 , pseg3 )"		1193143	0					
ANR	1193444	Callee	gx_curve_is_really_point		1193143	0					
ANR	1193445	Identifier	gx_curve_is_really_point		1193143	0					
ANR	1193446	ArgumentList	x2		1193143	1					
ANR	1193447	Argument	x2		1193143	0					
ANR	1193448	Identifier	x2		1193143	0					
ANR	1193449	Argument	y2		1193143	1					
ANR	1193450	Identifier	y2		1193143	0					
ANR	1193451	Argument	pseg3		1193143	2					
ANR	1193452	Identifier	pseg3		1193143	0					
ANR	1193453	ContinueStatement	continue ;	229:16:6985:6993	1193143	1	True				
ANR	1193454	IfStatement	"if ( gx_curve_is_really_line ( x2 , y2 , pseg3 ) )"		1193143	1					
ANR	1193455	Condition	"gx_curve_is_really_line ( x2 , y2 , pseg3 )"	230:16:7047:7084	1193143	0	True				
ANR	1193456	CallExpression	"gx_curve_is_really_line ( x2 , y2 , pseg3 )"		1193143	0					
ANR	1193457	Callee	gx_curve_is_really_line		1193143	0					
ANR	1193458	Identifier	gx_curve_is_really_line		1193143	0					
ANR	1193459	ArgumentList	x2		1193143	1					
ANR	1193460	Argument	x2		1193143	0					
ANR	1193461	Identifier	x2		1193143	0					
ANR	1193462	Argument	y2		1193143	1					
ANR	1193463	Identifier	y2		1193143	0					
ANR	1193464	Argument	pseg3		1193143	2					
ANR	1193465	Identifier	pseg3		1193143	0					
ANR	1193466	BreakStatement	break ;	231:16:7103:7108	1193143	1	True				
ANR	1193467	ReturnStatement	return prt_none ;	232:12:7140:7155	1193143	2	True				
ANR	1193468	Identifier	prt_none		1193143	0					
ANR	1193469	ElseStatement	else		1193143	0					
ANR	1193470	IfStatement	if ( pseg3 -> type != s_line && pseg3 -> type != s_gap )		1193143	0					
ANR	1193471	Condition	pseg3 -> type != s_line && pseg3 -> type != s_gap	233:19:7176:7220	1193143	0	True				
ANR	1193472	AndExpression	pseg3 -> type != s_line && pseg3 -> type != s_gap		1193143	0		&&			
ANR	1193473	EqualityExpression	pseg3 -> type != s_line		1193143	0		!=			
ANR	1193474	PtrMemberAccess	pseg3 -> type		1193143	0					
ANR	1193475	Identifier	pseg3		1193143	0					
ANR	1193476	Identifier	type		1193143	1					
ANR	1193477	Identifier	s_line		1193143	1					
ANR	1193478	EqualityExpression	pseg3 -> type != s_gap		1193143	1		!=			
ANR	1193479	PtrMemberAccess	pseg3 -> type		1193143	0					
ANR	1193480	Identifier	pseg3		1193143	0					
ANR	1193481	Identifier	type		1193143	1					
ANR	1193482	Identifier	s_gap		1193143	1					
ANR	1193483	ReturnStatement	return prt_none ;	234:12:7235:7250	1193143	1	True				
ANR	1193484	Identifier	prt_none		1193143	0					
ANR	1193485	Condition	x3 == x2 && y3 == y2	235:13:7265:7284	1193143	1	True				
ANR	1193486	AndExpression	x3 == x2 && y3 == y2		1193143	0		&&			
ANR	1193487	EqualityExpression	x3 == x2		1193143	0		==			
ANR	1193488	Identifier	x3		1193143	0					
ANR	1193489	Identifier	x2		1193143	1					
ANR	1193490	EqualityExpression	y3 == y2		1193143	1		==			
ANR	1193491	Identifier	y3		1193143	0					
ANR	1193492	Identifier	y2		1193143	1					
ANR	1193493	ExpressionStatement	pseg4 = pseg3	237:4:7293:7306	1193143	10	True				
ANR	1193494	AssignmentExpression	pseg4 = pseg3		1193143	0		=			
ANR	1193495	Identifier	pseg4		1193143	0					
ANR	1193496	Identifier	pseg3		1193143	1					
ANR	1193497	DoStatement	do		1193143	11					
ANR	1193498	CompoundStatement		59:7:1961:1961	1193143	0					
ANR	1193499	ExpressionStatement	pseg4 = pseg4 -> next	239:8:7325:7344	1193143	0	True				
ANR	1193500	AssignmentExpression	pseg4 = pseg4 -> next		1193143	0		=			
ANR	1193501	Identifier	pseg4		1193143	0					
ANR	1193502	PtrMemberAccess	pseg4 -> next		1193143	1					
ANR	1193503	Identifier	pseg4		1193143	0					
ANR	1193504	Identifier	next		1193143	1					
ANR	1193505	IfStatement	if ( pseg4 == NULL || pseg4 -> type == s_start )		1193143	1					
ANR	1193506	Condition	pseg4 == NULL || pseg4 -> type == s_start	240:12:7358:7396	1193143	0	True				
ANR	1193507	OrExpression	pseg4 == NULL || pseg4 -> type == s_start		1193143	0		||			
ANR	1193508	EqualityExpression	pseg4 == NULL		1193143	0		==			
ANR	1193509	Identifier	pseg4		1193143	0					
ANR	1193510	Identifier	NULL		1193143	1					
ANR	1193511	EqualityExpression	pseg4 -> type == s_start		1193143	1		==			
ANR	1193512	PtrMemberAccess	pseg4 -> type		1193143	0					
ANR	1193513	Identifier	pseg4		1193143	0					
ANR	1193514	Identifier	type		1193143	1					
ANR	1193515	Identifier	s_start		1193143	1					
ANR	1193516	CompoundStatement		61:53:2045:2045	1193143	1					
ANR	1193517	ExpressionStatement	type = prt_open	241:12:7413:7428	1193143	0	True				
ANR	1193518	AssignmentExpression	type = prt_open		1193143	0		=			
ANR	1193519	Identifier	type		1193143	0					
ANR	1193520	Identifier	prt_open		1193143	1					
ANR	1193521	GotoStatement	goto type_known ;	242:12:7459:7474	1193143	1	True				
ANR	1193522	Identifier	type_known		1193143	0					
ANR	1193523	IfStatement	if ( pseg4 -> type == s_curve )		1193143	2					
ANR	1193524	Condition	pseg4 -> type == s_curve	244:12:7498:7519	1193143	0	True				
ANR	1193525	EqualityExpression	pseg4 -> type == s_curve		1193143	0		==			
ANR	1193526	PtrMemberAccess	pseg4 -> type		1193143	0					
ANR	1193527	Identifier	pseg4		1193143	0					
ANR	1193528	Identifier	type		1193143	1					
ANR	1193529	Identifier	s_curve		1193143	1					
ANR	1193530	CompoundStatement		65:36:2168:2168	1193143	1					
ANR	1193531	IfStatement	"if ( gx_curve_is_really_point ( x3 , y3 , pseg4 ) )"		1193143	0					
ANR	1193532	Condition	"gx_curve_is_really_point ( x3 , y3 , pseg4 )"	245:16:7540:7578	1193143	0	True				
ANR	1193533	CallExpression	"gx_curve_is_really_point ( x3 , y3 , pseg4 )"		1193143	0					
ANR	1193534	Callee	gx_curve_is_really_point		1193143	0					
ANR	1193535	Identifier	gx_curve_is_really_point		1193143	0					
ANR	1193536	ArgumentList	x3		1193143	1					
ANR	1193537	Argument	x3		1193143	0					
ANR	1193538	Identifier	x3		1193143	0					
ANR	1193539	Argument	y3		1193143	1					
ANR	1193540	Identifier	y3		1193143	0					
ANR	1193541	Argument	pseg4		1193143	2					
ANR	1193542	Identifier	pseg4		1193143	0					
ANR	1193543	ContinueStatement	continue ;	246:16:7597:7605	1193143	1	True				
ANR	1193544	IfStatement	"if ( gx_curve_is_really_line ( x3 , y3 , pseg4 ) )"		1193143	1					
ANR	1193545	Condition	"gx_curve_is_really_line ( x3 , y3 , pseg4 )"	247:16:7659:7696	1193143	0	True				
ANR	1193546	CallExpression	"gx_curve_is_really_line ( x3 , y3 , pseg4 )"		1193143	0					
ANR	1193547	Callee	gx_curve_is_really_line		1193143	0					
ANR	1193548	Identifier	gx_curve_is_really_line		1193143	0					
ANR	1193549	ArgumentList	x3		1193143	1					
ANR	1193550	Argument	x3		1193143	0					
ANR	1193551	Identifier	x3		1193143	0					
ANR	1193552	Argument	y3		1193143	1					
ANR	1193553	Identifier	y3		1193143	0					
ANR	1193554	Argument	pseg4		1193143	2					
ANR	1193555	Identifier	pseg4		1193143	0					
ANR	1193556	BreakStatement	break ;	248:16:7715:7720	1193143	1	True				
ANR	1193557	ReturnStatement	return prt_none ;	249:12:7752:7767	1193143	2	True				
ANR	1193558	Identifier	prt_none		1193143	0					
ANR	1193559	ElseStatement	else		1193143	0					
ANR	1193560	IfStatement	if ( pseg4 -> type == s_line_close )		1193143	0					
ANR	1193561	Condition	pseg4 -> type == s_line_close	250:19:7788:7814	1193143	0	True				
ANR	1193562	EqualityExpression	pseg4 -> type == s_line_close		1193143	0		==			
ANR	1193563	PtrMemberAccess	pseg4 -> type		1193143	0					
ANR	1193564	Identifier	pseg4		1193143	0					
ANR	1193565	Identifier	type		1193143	1					
ANR	1193566	Identifier	s_line_close		1193143	1					
ANR	1193567	CompoundStatement		71:48:2463:2463	1193143	1					
ANR	1193568	ExpressionStatement	type = prt_closed	251:12:7831:7848	1193143	0	True				
ANR	1193569	AssignmentExpression	type = prt_closed		1193143	0		=			
ANR	1193570	Identifier	type		1193143	0					
ANR	1193571	Identifier	prt_closed		1193143	1					
ANR	1193572	GotoStatement	goto type_known ;	252:12:7882:7897	1193143	1	True				
ANR	1193573	Identifier	type_known		1193143	0					
ANR	1193574	Condition	pseg4 -> pt . x == x3 && pseg4 -> pt . y == y3	254:13:7922:7959	1193143	1	True				
ANR	1193575	AndExpression	pseg4 -> pt . x == x3 && pseg4 -> pt . y == y3		1193143	0		&&			
ANR	1193576	EqualityExpression	pseg4 -> pt . x == x3		1193143	0		==			
ANR	1193577	MemberAccess	pseg4 -> pt . x		1193143	0					
ANR	1193578	PtrMemberAccess	pseg4 -> pt		1193143	0					
ANR	1193579	Identifier	pseg4		1193143	0					
ANR	1193580	Identifier	pt		1193143	1					
ANR	1193581	Identifier	x		1193143	1					
ANR	1193582	Identifier	x3		1193143	1					
ANR	1193583	EqualityExpression	pseg4 -> pt . y == y3		1193143	1		==			
ANR	1193584	MemberAccess	pseg4 -> pt . y		1193143	0					
ANR	1193585	PtrMemberAccess	pseg4 -> pt		1193143	0					
ANR	1193586	Identifier	pseg4		1193143	0					
ANR	1193587	Identifier	pt		1193143	1					
ANR	1193588	Identifier	y		1193143	1					
ANR	1193589	Identifier	y3		1193143	1					
ANR	1193590	IfStatement	if ( pseg4 -> pt . x != pseg0 -> pt . x || pseg4 -> pt . y != pseg0 -> pt . y )		1193143	12					
ANR	1193591	Condition	pseg4 -> pt . x != pseg0 -> pt . x || pseg4 -> pt . y != pseg0 -> pt . y	256:8:7972:8027	1193143	0	True				
ANR	1193592	OrExpression	pseg4 -> pt . x != pseg0 -> pt . x || pseg4 -> pt . y != pseg0 -> pt . y		1193143	0		||			
ANR	1193593	EqualityExpression	pseg4 -> pt . x != pseg0 -> pt . x		1193143	0		!=			
ANR	1193594	MemberAccess	pseg4 -> pt . x		1193143	0					
ANR	1193595	PtrMemberAccess	pseg4 -> pt		1193143	0					
ANR	1193596	Identifier	pseg4		1193143	0					
ANR	1193597	Identifier	pt		1193143	1					
ANR	1193598	Identifier	x		1193143	1					
ANR	1193599	MemberAccess	pseg0 -> pt . x		1193143	1					
ANR	1193600	PtrMemberAccess	pseg0 -> pt		1193143	0					
ANR	1193601	Identifier	pseg0		1193143	0					
ANR	1193602	Identifier	pt		1193143	1					
ANR	1193603	Identifier	x		1193143	1					
ANR	1193604	EqualityExpression	pseg4 -> pt . y != pseg0 -> pt . y		1193143	1		!=			
ANR	1193605	MemberAccess	pseg4 -> pt . y		1193143	0					
ANR	1193606	PtrMemberAccess	pseg4 -> pt		1193143	0					
ANR	1193607	Identifier	pseg4		1193143	0					
ANR	1193608	Identifier	pt		1193143	1					
ANR	1193609	Identifier	y		1193143	1					
ANR	1193610	MemberAccess	pseg0 -> pt . y		1193143	1					
ANR	1193611	PtrMemberAccess	pseg0 -> pt		1193143	0					
ANR	1193612	Identifier	pseg0		1193143	0					
ANR	1193613	Identifier	pt		1193143	1					
ANR	1193614	Identifier	y		1193143	1					
ANR	1193615	ReturnStatement	return prt_none ;	257:8:8038:8053	1193143	1	True				
ANR	1193616	Identifier	prt_none		1193143	0					
ANR	1193617	ElseStatement	else		1193143	0					
ANR	1193618	IfStatement	if ( pseg4 -> next == NULL || pseg4 -> next -> type == s_start )		1193143	0					
ANR	1193619	Condition	pseg4 -> next == NULL || pseg4 -> next -> type == s_start	258:13:8068:8118	1193143	0	True				
ANR	1193620	OrExpression	pseg4 -> next == NULL || pseg4 -> next -> type == s_start		1193143	0		||			
ANR	1193621	EqualityExpression	pseg4 -> next == NULL		1193143	0		==			
ANR	1193622	PtrMemberAccess	pseg4 -> next		1193143	0					
ANR	1193623	Identifier	pseg4		1193143	0					
ANR	1193624	Identifier	next		1193143	1					
ANR	1193625	Identifier	NULL		1193143	1					
ANR	1193626	EqualityExpression	pseg4 -> next -> type == s_start		1193143	1		==			
ANR	1193627	PtrMemberAccess	pseg4 -> next -> type		1193143	0					
ANR	1193628	PtrMemberAccess	pseg4 -> next		1193143	0					
ANR	1193629	Identifier	pseg4		1193143	0					
ANR	1193630	Identifier	next		1193143	1					
ANR	1193631	Identifier	type		1193143	1					
ANR	1193632	Identifier	s_start		1193143	1					
ANR	1193633	ExpressionStatement	type = prt_fake_closed	259:8:8129:8151	1193143	1	True				
ANR	1193634	AssignmentExpression	type = prt_fake_closed		1193143	0		=			
ANR	1193635	Identifier	type		1193143	0					
ANR	1193636	Identifier	prt_fake_closed		1193143	1					
ANR	1193637	ElseStatement	else		1193143	0					
ANR	1193638	ReturnStatement	return prt_none ;	261:8:8195:8210	1193143	0	True				
ANR	1193639	Identifier	prt_none		1193143	0					
ANR	1193640	Label	type_known :	263:0:8213:8223	1193143	13	True				
ANR	1193641	Identifier	type_known		1193143	0					
ANR	1193642	IfStatement	if ( ( x0 == x1 && y1 == y2 && x2 == x3 && y3 == y0 ) || ( x0 == x3 && y3 == y2 && x2 == x1 && y1 == y0 ) )		1193143	14					
ANR	1193643	Condition	( x0 == x1 && y1 == y2 && x2 == x3 && y3 == y0 ) || ( x0 == x3 && y3 == y2 && x2 == x1 && y1 == y0 )	265:8:8234:8337	1193143	0	True				
ANR	1193644	OrExpression	( x0 == x1 && y1 == y2 && x2 == x3 && y3 == y0 ) || ( x0 == x3 && y3 == y2 && x2 == x1 && y1 == y0 )		1193143	0		||			
ANR	1193645	AndExpression	x0 == x1 && y1 == y2 && x2 == x3 && y3 == y0		1193143	0		&&			
ANR	1193646	EqualityExpression	x0 == x1		1193143	0		==			
ANR	1193647	Identifier	x0		1193143	0					
ANR	1193648	Identifier	x1		1193143	1					
ANR	1193649	AndExpression	y1 == y2 && x2 == x3 && y3 == y0		1193143	1		&&			
ANR	1193650	EqualityExpression	y1 == y2		1193143	0		==			
ANR	1193651	Identifier	y1		1193143	0					
ANR	1193652	Identifier	y2		1193143	1					
ANR	1193653	AndExpression	x2 == x3 && y3 == y0		1193143	1		&&			
ANR	1193654	EqualityExpression	x2 == x3		1193143	0		==			
ANR	1193655	Identifier	x2		1193143	0					
ANR	1193656	Identifier	x3		1193143	1					
ANR	1193657	EqualityExpression	y3 == y0		1193143	1		==			
ANR	1193658	Identifier	y3		1193143	0					
ANR	1193659	Identifier	y0		1193143	1					
ANR	1193660	AndExpression	x0 == x3 && y3 == y2 && x2 == x1 && y1 == y0		1193143	1		&&			
ANR	1193661	EqualityExpression	x0 == x3		1193143	0		==			
ANR	1193662	Identifier	x0		1193143	0					
ANR	1193663	Identifier	x3		1193143	1					
ANR	1193664	AndExpression	y3 == y2 && x2 == x1 && y1 == y0		1193143	1		&&			
ANR	1193665	EqualityExpression	y3 == y2		1193143	0		==			
ANR	1193666	Identifier	y3		1193143	0					
ANR	1193667	Identifier	y2		1193143	1					
ANR	1193668	AndExpression	x2 == x1 && y1 == y0		1193143	1		&&			
ANR	1193669	EqualityExpression	x2 == x1		1193143	0		==			
ANR	1193670	Identifier	x2		1193143	0					
ANR	1193671	Identifier	x1		1193143	1					
ANR	1193672	EqualityExpression	y1 == y0		1193143	1		==			
ANR	1193673	Identifier	y1		1193143	0					
ANR	1193674	Identifier	y0		1193143	1					
ANR	1193675	CompoundStatement		87:56:2986:2986	1193143	1					
ANR	1193676	IfStatement	if ( x0 < x2 )		1193143	0					
ANR	1193677	Condition	x0 < x2	268:12:8415:8421	1193143	0	True				
ANR	1193678	RelationalExpression	x0 < x2		1193143	0		<			
ANR	1193679	Identifier	x0		1193143	0					
ANR	1193680	Identifier	x2		1193143	1					
ANR	1193681	ExpressionStatement	"pbox -> p . x = x0 , pbox -> q . x = x2"	269:12:8436:8466	1193143	1	True				
ANR	1193682	Expression	"pbox -> p . x = x0 , pbox -> q . x = x2"		1193143	0					
ANR	1193683	AssignmentExpression	pbox -> p . x = x0		1193143	0		=			
ANR	1193684	MemberAccess	pbox -> p . x		1193143	0					
ANR	1193685	PtrMemberAccess	pbox -> p		1193143	0					
ANR	1193686	Identifier	pbox		1193143	0					
ANR	1193687	Identifier	p		1193143	1					
ANR	1193688	Identifier	x		1193143	1					
ANR	1193689	Identifier	x0		1193143	1					
ANR	1193690	AssignmentExpression	pbox -> q . x = x2		1193143	1		=			
ANR	1193691	MemberAccess	pbox -> q . x		1193143	0					
ANR	1193692	PtrMemberAccess	pbox -> q		1193143	0					
ANR	1193693	Identifier	pbox		1193143	0					
ANR	1193694	Identifier	q		1193143	1					
ANR	1193695	Identifier	x		1193143	1					
ANR	1193696	Identifier	x2		1193143	1					
ANR	1193697	ElseStatement	else		1193143	0					
ANR	1193698	ExpressionStatement	"pbox -> p . x = x2 , pbox -> q . x = x0"	271:12:8493:8523	1193143	0	True				
ANR	1193699	Expression	"pbox -> p . x = x2 , pbox -> q . x = x0"		1193143	0					
ANR	1193700	AssignmentExpression	pbox -> p . x = x2		1193143	0		=			
ANR	1193701	MemberAccess	pbox -> p . x		1193143	0					
ANR	1193702	PtrMemberAccess	pbox -> p		1193143	0					
ANR	1193703	Identifier	pbox		1193143	0					
ANR	1193704	Identifier	p		1193143	1					
ANR	1193705	Identifier	x		1193143	1					
ANR	1193706	Identifier	x2		1193143	1					
ANR	1193707	AssignmentExpression	pbox -> q . x = x0		1193143	1		=			
ANR	1193708	MemberAccess	pbox -> q . x		1193143	0					
ANR	1193709	PtrMemberAccess	pbox -> q		1193143	0					
ANR	1193710	Identifier	pbox		1193143	0					
ANR	1193711	Identifier	q		1193143	1					
ANR	1193712	Identifier	x		1193143	1					
ANR	1193713	Identifier	x0		1193143	1					
ANR	1193714	IfStatement	if ( y0 < y2 )		1193143	1					
ANR	1193715	Condition	y0 < y2	272:12:8537:8543	1193143	0	True				
ANR	1193716	RelationalExpression	y0 < y2		1193143	0		<			
ANR	1193717	Identifier	y0		1193143	0					
ANR	1193718	Identifier	y2		1193143	1					
ANR	1193719	ExpressionStatement	"pbox -> p . y = y0 , pbox -> q . y = y2"	273:12:8558:8588	1193143	1	True				
ANR	1193720	Expression	"pbox -> p . y = y0 , pbox -> q . y = y2"		1193143	0					
ANR	1193721	AssignmentExpression	pbox -> p . y = y0		1193143	0		=			
ANR	1193722	MemberAccess	pbox -> p . y		1193143	0					
ANR	1193723	PtrMemberAccess	pbox -> p		1193143	0					
ANR	1193724	Identifier	pbox		1193143	0					
ANR	1193725	Identifier	p		1193143	1					
ANR	1193726	Identifier	y		1193143	1					
ANR	1193727	Identifier	y0		1193143	1					
ANR	1193728	AssignmentExpression	pbox -> q . y = y2		1193143	1		=			
ANR	1193729	MemberAccess	pbox -> q . y		1193143	0					
ANR	1193730	PtrMemberAccess	pbox -> q		1193143	0					
ANR	1193731	Identifier	pbox		1193143	0					
ANR	1193732	Identifier	q		1193143	1					
ANR	1193733	Identifier	y		1193143	1					
ANR	1193734	Identifier	y2		1193143	1					
ANR	1193735	ElseStatement	else		1193143	0					
ANR	1193736	ExpressionStatement	"pbox -> p . y = y2 , pbox -> q . y = y0"	275:12:8615:8645	1193143	0	True				
ANR	1193737	Expression	"pbox -> p . y = y2 , pbox -> q . y = y0"		1193143	0					
ANR	1193738	AssignmentExpression	pbox -> p . y = y2		1193143	0		=			
ANR	1193739	MemberAccess	pbox -> p . y		1193143	0					
ANR	1193740	PtrMemberAccess	pbox -> p		1193143	0					
ANR	1193741	Identifier	pbox		1193143	0					
ANR	1193742	Identifier	p		1193143	1					
ANR	1193743	Identifier	y		1193143	1					
ANR	1193744	Identifier	y2		1193143	1					
ANR	1193745	AssignmentExpression	pbox -> q . y = y0		1193143	1		=			
ANR	1193746	MemberAccess	pbox -> q . y		1193143	0					
ANR	1193747	PtrMemberAccess	pbox -> q		1193143	0					
ANR	1193748	Identifier	pbox		1193143	0					
ANR	1193749	Identifier	q		1193143	1					
ANR	1193750	Identifier	y		1193143	1					
ANR	1193751	Identifier	y0		1193143	1					
ANR	1193752	WhileStatement	while ( pseg4 != 0 && pseg4 -> type != s_start )		1193143	2					
ANR	1193753	Condition	pseg4 != 0 && pseg4 -> type != s_start	276:15:8662:8697	1193143	0	True				
ANR	1193754	AndExpression	pseg4 != 0 && pseg4 -> type != s_start		1193143	0		&&			
ANR	1193755	EqualityExpression	pseg4 != 0		1193143	0		!=			
ANR	1193756	Identifier	pseg4		1193143	0					
ANR	1193757	PrimaryExpression	0		1193143	1					
ANR	1193758	EqualityExpression	pseg4 -> type != s_start		1193143	1		!=			
ANR	1193759	PtrMemberAccess	pseg4 -> type		1193143	0					
ANR	1193760	Identifier	pseg4		1193143	0					
ANR	1193761	Identifier	type		1193143	1					
ANR	1193762	Identifier	s_start		1193143	1					
ANR	1193763	ExpressionStatement	pseg4 = pseg4 -> next	277:12:8712:8731	1193143	1	True				
ANR	1193764	AssignmentExpression	pseg4 = pseg4 -> next		1193143	0		=			
ANR	1193765	Identifier	pseg4		1193143	0					
ANR	1193766	PtrMemberAccess	pseg4 -> next		1193143	1					
ANR	1193767	Identifier	pseg4		1193143	0					
ANR	1193768	Identifier	next		1193143	1					
ANR	1193769	ExpressionStatement	* ppnext = ( const subpath * ) pseg4	278:8:8741:8773	1193143	3	True				
ANR	1193770	AssignmentExpression	* ppnext = ( const subpath * ) pseg4		1193143	0		=			
ANR	1193771	UnaryOperationExpression	* ppnext		1193143	0					
ANR	1193772	UnaryOperator	*		1193143	0					
ANR	1193773	Identifier	ppnext		1193143	1					
ANR	1193774	CastExpression	( const subpath * ) pseg4		1193143	1					
ANR	1193775	CastTarget	const subpath *		1193143	0					
ANR	1193776	Identifier	pseg4		1193143	1					
ANR	1193777	ReturnStatement	return type ;	279:8:8783:8794	1193143	4	True				
ANR	1193778	Identifier	type		1193143	0					
ANR	1193779	ReturnStatement	return prt_none ;	281:4:8806:8821	1193143	15	True				
ANR	1193780	Identifier	prt_none		1193143	0					
ANR	1193781	ReturnType	gx_path_rectangular_type		1193143	1					
ANR	1193782	Identifier	gx_subpath_is_rectangular		1193143	2					
ANR	1193783	ParameterList	"const subpath * pseg0 , gs_fixed_rect * pbox , const subpath * * ppnext"		1193143	3					
ANR	1193784	Parameter	const subpath * pseg0	178:26:5257:5277	1193143	0	True				
ANR	1193785	ParameterType	const subpath *		1193143	0					
ANR	1193786	Identifier	pseg0		1193143	1					
ANR	1193787	Parameter	gs_fixed_rect * pbox	178:49:5280:5299	1193143	1	True				
ANR	1193788	ParameterType	gs_fixed_rect *		1193143	0					
ANR	1193789	Identifier	pbox		1193143	1					
ANR	1193790	Parameter	const subpath * * ppnext	179:26:5328:5350	1193143	2	True				
ANR	1193791	ParameterType	const subpath * *		1193143	0					
ANR	1193792	Identifier	ppnext		1193143	1					
ANR	1193793	CFGEntryNode	ENTRY		1193143		True				
ANR	1193794	CFGExitNode	EXIT		1193143		True				
ANR	1193795	Symbol	s_start		1193143						
ANR	1193796	Symbol	pseg0 -> pt . y		1193143						
ANR	1193797	Symbol	pseg0 -> pt . x		1193143						
ANR	1193798	Symbol	pseg0		1193143						
ANR	1193799	Symbol	s_gap		1193143						
ANR	1193800	Symbol	pseg1		1193143						
ANR	1193801	Symbol	type		1193143						
ANR	1193802	Symbol	pseg2		1193143						
ANR	1193803	Symbol	pseg3		1193143						
ANR	1193804	Symbol	ppnext		1193143						
ANR	1193805	Symbol	pseg4		1193143						
ANR	1193806	Symbol	s_curve		1193143						
ANR	1193807	Symbol	pseg3 -> pt		1193143						
ANR	1193808	Symbol	* ppnext		1193143						
ANR	1193809	Symbol	pseg4 -> pt . x		1193143						
ANR	1193810	Symbol	pseg4 -> pt . y		1193143						
ANR	1193811	Symbol	pseg1 -> pt . y		1193143						
ANR	1193812	Symbol	pseg1 -> pt . x		1193143						
ANR	1193813	Symbol	NULL		1193143						
ANR	1193814	Symbol	* * pseg4		1193143						
ANR	1193815	Symbol	gx_curve_is_really_point		1193143						
ANR	1193816	Symbol	s_line_close		1193143						
ANR	1193817	Symbol	pseg4 -> next -> type		1193143						
ANR	1193818	Symbol	pseg4 -> type		1193143						
ANR	1193819	Symbol	pseg2 -> pt		1193143						
ANR	1193820	Symbol	pseg1 -> next		1193143						
ANR	1193821	Symbol	prt_closed		1193143						
ANR	1193822	Symbol	* pbox		1193143						
ANR	1193823	Symbol	* pseg0		1193143						
ANR	1193824	Symbol	* pseg1		1193143						
ANR	1193825	Symbol	* pseg2		1193143						
ANR	1193826	Symbol	x0		1193143						
ANR	1193827	Symbol	* pseg3		1193143						
ANR	1193828	Symbol	x1		1193143						
ANR	1193829	Symbol	* pseg4		1193143						
ANR	1193830	Symbol	x2		1193143						
ANR	1193831	Symbol	pseg3 -> next		1193143						
ANR	1193832	Symbol	x3		1193143						
ANR	1193833	Symbol	* pseg4 -> next		1193143						
ANR	1193834	Symbol	pseg2 -> type		1193143						
ANR	1193835	Symbol	pseg2 -> pt . x		1193143						
ANR	1193836	Symbol	pseg2 -> pt . y		1193143						
ANR	1193837	Symbol	prt_none		1193143						
ANR	1193838	Symbol	gx_curve_is_really_line		1193143						
ANR	1193839	Symbol	y0		1193143						
ANR	1193840	Symbol	y1		1193143						
ANR	1193841	Symbol	y2		1193143						
ANR	1193842	Symbol	y3		1193143						
ANR	1193843	Symbol	prt_open		1193143						
ANR	1193844	Symbol	pseg0 -> pt		1193143						
ANR	1193845	Symbol	pbox -> p . x		1193143						
ANR	1193846	Symbol	pbox -> p . y		1193143						
ANR	1193847	Symbol	s_line		1193143						
ANR	1193848	Symbol	pseg2 -> next		1193143						
ANR	1193849	Symbol	pbox		1193143						
ANR	1193850	Symbol	pseg1 -> type		1193143						
ANR	1193851	Symbol	pbox -> q		1193143						
ANR	1193852	Symbol	pbox -> p		1193143						
ANR	1193853	Symbol	pseg3 -> pt . x		1193143						
ANR	1193854	Symbol	pseg1 -> pt		1193143						
ANR	1193855	Symbol	pseg4 -> pt		1193143						
ANR	1193856	Symbol	pseg3 -> pt . y		1193143						
ANR	1193857	Symbol	pseg3 -> type		1193143						
ANR	1193858	Symbol	pbox -> q . y		1193143						
ANR	1193859	Symbol	prt_fake_closed		1193143						
ANR	1193860	Symbol	pseg4 -> next		1193143						
ANR	1193861	Symbol	pbox -> q . x		1193143						
ANR	1193862	Function	gx_path_is_rectangular	284:0:8883:9154							
ANR	1193863	FunctionDef	"gx_path_is_rectangular (const gx_path * ppath , gs_fixed_rect * pbox)"		1193862	0					
ANR	1193864	CompoundStatement		286:0:8976:9154	1193862	0					
ANR	1193865	IdentifierDeclStatement	const subpath * pnext ;	287:4:8982:9002	1193862	0	True				
ANR	1193866	IdentifierDecl	* pnext		1193862	0					
ANR	1193867	IdentifierDeclType	const subpath *		1193862	0					
ANR	1193868	Identifier	pnext		1193862	1					
ANR	1193869	ReturnStatement	"return ( gx_path_subpath_count ( ppath ) == 1 ? gx_subpath_is_rectangular ( ppath -> first_subpath , pbox , & pnext ) : prt_none ) ;"	289:4:9009:9152	1193862	1	True				
ANR	1193870	ConditionalExpression	"gx_path_subpath_count ( ppath ) == 1 ? gx_subpath_is_rectangular ( ppath -> first_subpath , pbox , & pnext ) : prt_none"		1193862	0					
ANR	1193871	Condition	gx_path_subpath_count ( ppath ) == 1		1193862	0					
ANR	1193872	EqualityExpression	gx_path_subpath_count ( ppath ) == 1		1193862	0		==			
ANR	1193873	CallExpression	gx_path_subpath_count ( ppath )		1193862	0					
ANR	1193874	Callee	gx_path_subpath_count		1193862	0					
ANR	1193875	Identifier	gx_path_subpath_count		1193862	0					
ANR	1193876	ArgumentList	ppath		1193862	1					
ANR	1193877	Argument	ppath		1193862	0					
ANR	1193878	Identifier	ppath		1193862	0					
ANR	1193879	PrimaryExpression	1		1193862	1					
ANR	1193880	CallExpression	"gx_subpath_is_rectangular ( ppath -> first_subpath , pbox , & pnext )"		1193862	1					
ANR	1193881	Callee	gx_subpath_is_rectangular		1193862	0					
ANR	1193882	Identifier	gx_subpath_is_rectangular		1193862	0					
ANR	1193883	ArgumentList	ppath -> first_subpath		1193862	1					
ANR	1193884	Argument	ppath -> first_subpath		1193862	0					
ANR	1193885	PtrMemberAccess	ppath -> first_subpath		1193862	0					
ANR	1193886	Identifier	ppath		1193862	0					
ANR	1193887	Identifier	first_subpath		1193862	1					
ANR	1193888	Argument	pbox		1193862	1					
ANR	1193889	Identifier	pbox		1193862	0					
ANR	1193890	Argument	& pnext		1193862	2					
ANR	1193891	UnaryOperationExpression	& pnext		1193862	0					
ANR	1193892	UnaryOperator	&		1193862	0					
ANR	1193893	Identifier	pnext		1193862	1					
ANR	1193894	Identifier	prt_none		1193862	2					
ANR	1193895	ReturnType	gx_path_rectangular_type		1193862	1					
ANR	1193896	Identifier	gx_path_is_rectangular		1193862	2					
ANR	1193897	ParameterList	"const gx_path * ppath , gs_fixed_rect * pbox"		1193862	3					
ANR	1193898	Parameter	const gx_path * ppath	285:23:8931:8951	1193862	0	True				
ANR	1193899	ParameterType	const gx_path *		1193862	0					
ANR	1193900	Identifier	ppath		1193862	1					
ANR	1193901	Parameter	gs_fixed_rect * pbox	285:46:8954:8973	1193862	1	True				
ANR	1193902	ParameterType	gs_fixed_rect *		1193862	0					
ANR	1193903	Identifier	pbox		1193862	1					
ANR	1193904	CFGEntryNode	ENTRY		1193862		True				
ANR	1193905	CFGExitNode	EXIT		1193862		True				
ANR	1193906	Symbol	* ppath		1193862						
ANR	1193907	Symbol	ppath		1193862						
ANR	1193908	Symbol	ppath -> first_subpath		1193862						
ANR	1193909	Symbol	gx_subpath_is_rectangular		1193862						
ANR	1193910	Symbol	& pnext		1193862						
ANR	1193911	Symbol	pnext		1193862						
ANR	1193912	Symbol	gx_path_subpath_count		1193862						
ANR	1193913	Symbol	pbox		1193862						
ANR	1193914	Symbol	prt_none		1193862						
ANR	1193915	Function	gx_path_translate	297:0:9259:9983							
ANR	1193916	FunctionDef	"gx_path_translate (gx_path * ppath , fixed dx , fixed dy)"		1193915	0					
ANR	1193917	CompoundStatement		299:0:9318:9983	1193915	0					
ANR	1193918	IdentifierDeclStatement	segment * pseg ;	300:4:9324:9337	1193915	0	True				
ANR	1193919	IdentifierDecl	* pseg		1193915	0					
ANR	1193920	IdentifierDeclType	segment *		1193915	0					
ANR	1193921	Identifier	pseg		1193915	1					
ANR	1193922	Statement	define	302:1:9341:9346	1193915	1	True				
ANR	1193923	Statement	update_xy	302:8:9348:9356	1193915	2	True				
ANR	1193924	Statement	(	302:17:9357:9357	1193915	3	True				
ANR	1193925	Statement	pt	302:18:9358:9359	1193915	4	True				
ANR	1193926	Statement	)	302:20:9360:9360	1193915	5	True				
ANR	1193927	Statement	pt	303:2:9365:9366	1193915	6	True				
ANR	1193928	Statement	.	303:4:9367:9367	1193915	7	True				
ANR	1193929	Statement	x	303:5:9368:9368	1193915	8	True				
ANR	1193930	Statement	+=	303:7:9370:9371	1193915	9	True				
ANR	1193931	Statement	dx	303:10:9373:9374	1193915	10	True				
ANR	1193932	Statement	","	303:12:9375:9375	1193915	11	True				
ANR	1193933	Statement	pt	303:14:9377:9378	1193915	12	True				
ANR	1193934	Statement	.	303:16:9379:9379	1193915	13	True				
ANR	1193935	Statement	y	303:17:9380:9380	1193915	14	True				
ANR	1193936	Statement	+=	303:19:9382:9383	1193915	15	True				
ANR	1193937	Statement	dy	303:22:9385:9386	1193915	16	True				
ANR	1193938	IfStatement	if ( ppath -> box_last != 0 )		1193915	17					
ANR	1193939	Condition	ppath -> box_last != 0	304:8:9396:9415	1193915	0	True				
ANR	1193940	EqualityExpression	ppath -> box_last != 0		1193915	0		!=			
ANR	1193941	PtrMemberAccess	ppath -> box_last		1193915	0					
ANR	1193942	Identifier	ppath		1193915	0					
ANR	1193943	Identifier	box_last		1193915	1					
ANR	1193944	PrimaryExpression	0		1193915	1					
ANR	1193945	CompoundStatement		6:30:99:99	1193915	1					
ANR	1193946	ExpressionStatement	update_xy ( ppath -> bbox . p )	305:8:9428:9452	1193915	0	True				
ANR	1193947	CallExpression	update_xy ( ppath -> bbox . p )		1193915	0					
ANR	1193948	Callee	update_xy		1193915	0					
ANR	1193949	Identifier	update_xy		1193915	0					
ANR	1193950	ArgumentList	ppath -> bbox . p		1193915	1					
ANR	1193951	Argument	ppath -> bbox . p		1193915	0					
ANR	1193952	MemberAccess	ppath -> bbox . p		1193915	0					
ANR	1193953	PtrMemberAccess	ppath -> bbox		1193915	0					
ANR	1193954	Identifier	ppath		1193915	0					
ANR	1193955	Identifier	bbox		1193915	1					
ANR	1193956	Identifier	p		1193915	1					
ANR	1193957	ExpressionStatement	update_xy ( ppath -> bbox . q )	306:8:9462:9486	1193915	1	True				
ANR	1193958	CallExpression	update_xy ( ppath -> bbox . q )		1193915	0					
ANR	1193959	Callee	update_xy		1193915	0					
ANR	1193960	Identifier	update_xy		1193915	0					
ANR	1193961	ArgumentList	ppath -> bbox . q		1193915	1					
ANR	1193962	Argument	ppath -> bbox . q		1193915	0					
ANR	1193963	MemberAccess	ppath -> bbox . q		1193915	0					
ANR	1193964	PtrMemberAccess	ppath -> bbox		1193915	0					
ANR	1193965	Identifier	ppath		1193915	0					
ANR	1193966	Identifier	bbox		1193915	1					
ANR	1193967	Identifier	q		1193915	1					
ANR	1193968	IfStatement	if ( path_position_valid ( ppath ) )		1193915	18					
ANR	1193969	Condition	path_position_valid ( ppath )	308:8:9502:9527	1193915	0	True				
ANR	1193970	CallExpression	path_position_valid ( ppath )		1193915	0					
ANR	1193971	Callee	path_position_valid		1193915	0					
ANR	1193972	Identifier	path_position_valid		1193915	0					
ANR	1193973	ArgumentList	ppath		1193915	1					
ANR	1193974	Argument	ppath		1193915	0					
ANR	1193975	Identifier	ppath		1193915	0					
ANR	1193976	ExpressionStatement	update_xy ( ppath -> position )	309:8:9538:9564	1193915	1	True				
ANR	1193977	CallExpression	update_xy ( ppath -> position )		1193915	0					
ANR	1193978	Callee	update_xy		1193915	0					
ANR	1193979	Identifier	update_xy		1193915	0					
ANR	1193980	ArgumentList	ppath -> position		1193915	1					
ANR	1193981	Argument	ppath -> position		1193915	0					
ANR	1193982	PtrMemberAccess	ppath -> position		1193915	0					
ANR	1193983	Identifier	ppath		1193915	0					
ANR	1193984	Identifier	position		1193915	1					
ANR	1193985	ForStatement	for ( pseg = ( segment * ) ( ppath -> first_subpath ) ; pseg != 0 ; pseg = pseg -> next )		1193915	19					
ANR	1193986	ForInit	pseg = ( segment * ) ( ppath -> first_subpath ) ;	310:9:9575:9616	1193915	0	True				
ANR	1193987	AssignmentExpression	pseg = ( segment * ) ( ppath -> first_subpath )		1193915	0		=			
ANR	1193988	Identifier	pseg		1193915	0					
ANR	1193989	CastExpression	( segment * ) ( ppath -> first_subpath )		1193915	1					
ANR	1193990	CastTarget	segment *		1193915	0					
ANR	1193991	PtrMemberAccess	ppath -> first_subpath		1193915	1					
ANR	1193992	Identifier	ppath		1193915	0					
ANR	1193993	Identifier	first_subpath		1193915	1					
ANR	1193994	Condition	pseg != 0	310:52:9618:9626	1193915	1	True				
ANR	1193995	EqualityExpression	pseg != 0		1193915	0		!=			
ANR	1193996	Identifier	pseg		1193915	0					
ANR	1193997	PrimaryExpression	0		1193915	1					
ANR	1193998	AssignmentExpression	pseg = pseg -> next	311:9:9638:9654	1193915	2	True	=			
ANR	1193999	Identifier	pseg		1193915	0					
ANR	1194000	PtrMemberAccess	pseg -> next		1193915	1					
ANR	1194001	Identifier	pseg		1193915	0					
ANR	1194002	Identifier	next		1193915	1					
ANR	1194003	SwitchStatement	switch ( pseg -> type )		1193915	3					
ANR	1194004	Condition	pseg -> type	313:16:9682:9691	1193915	0	True				
ANR	1194005	PtrMemberAccess	pseg -> type		1193915	0					
ANR	1194006	Identifier	pseg		1193915	0					
ANR	1194007	Identifier	type		1193915	1					
ANR	1194008	CompoundStatement		15:28:375:375	1193915	1					
ANR	1194009	Label	case s_curve :	314:12:9708:9720	1193915	0	True				
ANR	1194010	Identifier	s_curve		1193915	0					
ANR	1194011	Statement	define	315:1:9723:9728	1193915	1	True				
ANR	1194012	Statement	pcseg	315:8:9730:9734	1193915	2	True				
ANR	1194013	Statement	(	315:14:9736:9736	1193915	3	True				
ANR	1194014	Statement	(	315:15:9737:9737	1193915	4	True				
ANR	1194015	Statement	curve_segment	315:16:9738:9750	1193915	5	True				
ANR	1194016	Statement	*	315:30:9752:9752	1193915	6	True				
ANR	1194017	Statement	)	315:31:9753:9753	1193915	7	True				
ANR	1194018	Statement	pseg	315:32:9754:9757	1193915	8	True				
ANR	1194019	Statement	)	315:36:9758:9758	1193915	9	True				
ANR	1194020	ExpressionStatement	update_xy ( pcseg -> p1 )	316:16:9776:9796	1193915	10	True				
ANR	1194021	CallExpression	update_xy ( pcseg -> p1 )		1193915	0					
ANR	1194022	Callee	update_xy		1193915	0					
ANR	1194023	Identifier	update_xy		1193915	0					
ANR	1194024	ArgumentList	pcseg -> p1		1193915	1					
ANR	1194025	Argument	pcseg -> p1		1193915	0					
ANR	1194026	PtrMemberAccess	pcseg -> p1		1193915	0					
ANR	1194027	Identifier	pcseg		1193915	0					
ANR	1194028	Identifier	p1		1193915	1					
ANR	1194029	ExpressionStatement	update_xy ( pcseg -> p2 )	317:16:9814:9834	1193915	11	True				
ANR	1194030	CallExpression	update_xy ( pcseg -> p2 )		1193915	0					
ANR	1194031	Callee	update_xy		1193915	0					
ANR	1194032	Identifier	update_xy		1193915	0					
ANR	1194033	ArgumentList	pcseg -> p2		1193915	1					
ANR	1194034	Argument	pcseg -> p2		1193915	0					
ANR	1194035	PtrMemberAccess	pcseg -> p2		1193915	0					
ANR	1194036	Identifier	pcseg		1193915	0					
ANR	1194037	Identifier	p2		1193915	1					
ANR	1194038	Statement	undef	318:1:9837:9841	1193915	12	True				
ANR	1194039	Statement	pcseg	318:7:9843:9847	1193915	13	True				
ANR	1194040	Label	default :	320:12:9896:9903	1193915	14	True				
ANR	1194041	Identifier	default		1193915	0					
ANR	1194042	ExpressionStatement	update_xy ( pseg -> pt )	321:16:9921:9940	1193915	15	True				
ANR	1194043	CallExpression	update_xy ( pseg -> pt )		1193915	0					
ANR	1194044	Callee	update_xy		1193915	0					
ANR	1194045	Identifier	update_xy		1193915	0					
ANR	1194046	ArgumentList	pseg -> pt		1193915	1					
ANR	1194047	Argument	pseg -> pt		1193915	0					
ANR	1194048	PtrMemberAccess	pseg -> pt		1193915	0					
ANR	1194049	Identifier	pseg		1193915	0					
ANR	1194050	Identifier	pt		1193915	1					
ANR	1194051	Statement	undef	323:1:9953:9957	1193915	20	True				
ANR	1194052	Statement	update_xy	323:7:9959:9967	1193915	21	True				
ANR	1194053	ReturnStatement	return 0 ;	324:4:9973:9981	1193915	22	True				
ANR	1194054	PrimaryExpression	0		1193915	0					
ANR	1194055	ReturnType	int		1193915	1					
ANR	1194056	Identifier	gx_path_translate		1193915	2					
ANR	1194057	ParameterList	"gx_path * ppath , fixed dx , fixed dy"		1193915	3					
ANR	1194058	Parameter	gx_path * ppath	298:18:9281:9295	1193915	0	True				
ANR	1194059	ParameterType	gx_path *		1193915	0					
ANR	1194060	Identifier	ppath		1193915	1					
ANR	1194061	Parameter	fixed dx	298:35:9298:9305	1193915	1	True				
ANR	1194062	ParameterType	fixed		1193915	0					
ANR	1194063	Identifier	dx		1193915	1					
ANR	1194064	Parameter	fixed dy	298:45:9308:9315	1193915	2	True				
ANR	1194065	ParameterType	fixed		1193915	0					
ANR	1194066	Identifier	dy		1193915	1					
ANR	1194067	CFGEntryNode	ENTRY		1193915		True				
ANR	1194068	CFGExitNode	EXIT		1193915		True				
ANR	1194069	Symbol	* ppath		1193915						
ANR	1194070	Symbol	ppath -> bbox . p		1193915						
ANR	1194071	Symbol	ppath -> bbox . q		1193915						
ANR	1194072	Symbol	ppath		1193915						
ANR	1194073	Symbol	ppath -> first_subpath		1193915						
ANR	1194074	Symbol	pcseg -> p2		1193915						
ANR	1194075	Symbol	ppath -> bbox		1193915						
ANR	1194076	Symbol	pcseg -> p1		1193915						
ANR	1194077	Symbol	pseg -> next		1193915						
ANR	1194078	Symbol	pseg		1193915						
ANR	1194079	Symbol	pseg -> pt		1193915						
ANR	1194080	Symbol	dx		1193915						
ANR	1194081	Symbol	pseg -> type		1193915						
ANR	1194082	Symbol	dy		1193915						
ANR	1194083	Symbol	* pcseg		1193915						
ANR	1194084	Symbol	ppath -> box_last		1193915						
ANR	1194085	Symbol	* pseg		1193915						
ANR	1194086	Symbol	pcseg		1193915						
ANR	1194087	Symbol	path_position_valid		1193915						
ANR	1194088	Symbol	ppath -> position		1193915						
ANR	1194089	Function	gx_point_scale_exp2	332:0:10204:10737							
ANR	1194090	FunctionDef	"gx_point_scale_exp2 (gs_fixed_point * pt , int sx , int sy)"		1194089	0					
ANR	1194091	CompoundStatement		334:0:10266:10737	1194089	0					
ANR	1194092	IdentifierDeclStatement	int v ;	335:4:10272:10277	1194089	0	True				
ANR	1194093	IdentifierDecl	v		1194089	0					
ANR	1194094	IdentifierDeclType	int		1194089	0					
ANR	1194095	Identifier	v		1194089	1					
ANR	1194096	IfStatement	if ( sx > 0 )		1194089	1					
ANR	1194097	Condition	sx > 0	337:8:10288:10293	1194089	0	True				
ANR	1194098	RelationalExpression	sx > 0		1194089	0		>			
ANR	1194099	Identifier	sx		1194089	0					
ANR	1194100	PrimaryExpression	0		1194089	1					
ANR	1194101	CompoundStatement		4:16:29:29	1194089	1					
ANR	1194102	ExpressionStatement	v = ( max_int - int2fixed ( 1000 ) ) >> sx	338:8:10306:10343	1194089	0	True				
ANR	1194103	AssignmentExpression	v = ( max_int - int2fixed ( 1000 ) ) >> sx		1194089	0		=			
ANR	1194104	Identifier	v		1194089	0					
ANR	1194105	ShiftExpression	( max_int - int2fixed ( 1000 ) ) >> sx		1194089	1		>>			
ANR	1194106	AdditiveExpression	max_int - int2fixed ( 1000 )		1194089	0		-			
ANR	1194107	Identifier	max_int		1194089	0					
ANR	1194108	CallExpression	int2fixed ( 1000 )		1194089	1					
ANR	1194109	Callee	int2fixed		1194089	0					
ANR	1194110	Identifier	int2fixed		1194089	0					
ANR	1194111	ArgumentList	1000		1194089	1					
ANR	1194112	Argument	1000		1194089	0					
ANR	1194113	PrimaryExpression	1000		1194089	0					
ANR	1194114	Identifier	sx		1194089	1					
ANR	1194115	IfStatement	if ( pt -> x > v )		1194089	1					
ANR	1194116	Condition	pt -> x > v	339:12:10373:10381	1194089	0	True				
ANR	1194117	RelationalExpression	pt -> x > v		1194089	0		>			
ANR	1194118	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194119	Identifier	pt		1194089	0					
ANR	1194120	Identifier	x		1194089	1					
ANR	1194121	Identifier	v		1194089	1					
ANR	1194122	ExpressionStatement	pt -> x = v	340:12:10396:10405	1194089	1	True				
ANR	1194123	AssignmentExpression	pt -> x = v		1194089	0		=			
ANR	1194124	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194125	Identifier	pt		1194089	0					
ANR	1194126	Identifier	x		1194089	1					
ANR	1194127	Identifier	v		1194089	1					
ANR	1194128	ElseStatement	else		1194089	0					
ANR	1194129	IfStatement	if ( pt -> x < - v )		1194089	0					
ANR	1194130	Condition	pt -> x < - v	341:17:10424:10433	1194089	0	True				
ANR	1194131	RelationalExpression	pt -> x < - v		1194089	0		<			
ANR	1194132	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194133	Identifier	pt		1194089	0					
ANR	1194134	Identifier	x		1194089	1					
ANR	1194135	UnaryOperationExpression	- v		1194089	1					
ANR	1194136	UnaryOperator	-		1194089	0					
ANR	1194137	Identifier	v		1194089	1					
ANR	1194138	ExpressionStatement	pt -> x = - v	342:12:10448:10458	1194089	1	True				
ANR	1194139	AssignmentExpression	pt -> x = - v		1194089	0		=			
ANR	1194140	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194141	Identifier	pt		1194089	0					
ANR	1194142	Identifier	x		1194089	1					
ANR	1194143	UnaryOperationExpression	- v		1194089	1					
ANR	1194144	UnaryOperator	-		1194089	0					
ANR	1194145	Identifier	v		1194089	1					
ANR	1194146	ExpressionStatement	pt -> x <<= sx	343:8:10468:10480	1194089	2	True				
ANR	1194147	AssignmentExpression	pt -> x <<= sx		1194089	0		<<=			
ANR	1194148	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194149	Identifier	pt		1194089	0					
ANR	1194150	Identifier	x		1194089	1					
ANR	1194151	Identifier	sx		1194089	1					
ANR	1194152	ElseStatement	else		1194089	0					
ANR	1194153	ExpressionStatement	pt -> x >>= - sx	345:8:10501:10514	1194089	0	True				
ANR	1194154	AssignmentExpression	pt -> x >>= - sx		1194089	0		>>=			
ANR	1194155	PtrMemberAccess	pt -> x		1194089	0					
ANR	1194156	Identifier	pt		1194089	0					
ANR	1194157	Identifier	x		1194089	1					
ANR	1194158	UnaryOperationExpression	- sx		1194089	1					
ANR	1194159	UnaryOperator	-		1194089	0					
ANR	1194160	Identifier	sx		1194089	1					
ANR	1194161	IfStatement	if ( sy > 0 )		1194089	2					
ANR	1194162	Condition	sy > 0	347:8:10525:10530	1194089	0	True				
ANR	1194163	RelationalExpression	sy > 0		1194089	0		>			
ANR	1194164	Identifier	sy		1194089	0					
ANR	1194165	PrimaryExpression	0		1194089	1					
ANR	1194166	CompoundStatement		14:16:266:266	1194089	1					
ANR	1194167	ExpressionStatement	v = ( max_int - int2fixed ( 1000 ) ) >> sy	348:8:10543:10580	1194089	0	True				
ANR	1194168	AssignmentExpression	v = ( max_int - int2fixed ( 1000 ) ) >> sy		1194089	0		=			
ANR	1194169	Identifier	v		1194089	0					
ANR	1194170	ShiftExpression	( max_int - int2fixed ( 1000 ) ) >> sy		1194089	1		>>			
ANR	1194171	AdditiveExpression	max_int - int2fixed ( 1000 )		1194089	0		-			
ANR	1194172	Identifier	max_int		1194089	0					
ANR	1194173	CallExpression	int2fixed ( 1000 )		1194089	1					
ANR	1194174	Callee	int2fixed		1194089	0					
ANR	1194175	Identifier	int2fixed		1194089	0					
ANR	1194176	ArgumentList	1000		1194089	1					
ANR	1194177	Argument	1000		1194089	0					
ANR	1194178	PrimaryExpression	1000		1194089	0					
ANR	1194179	Identifier	sy		1194089	1					
ANR	1194180	IfStatement	if ( pt -> y > v )		1194089	1					
ANR	1194181	Condition	pt -> y > v	349:12:10594:10602	1194089	0	True				
ANR	1194182	RelationalExpression	pt -> y > v		1194089	0		>			
ANR	1194183	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194184	Identifier	pt		1194089	0					
ANR	1194185	Identifier	y		1194089	1					
ANR	1194186	Identifier	v		1194089	1					
ANR	1194187	ExpressionStatement	pt -> y = v	350:12:10617:10626	1194089	1	True				
ANR	1194188	AssignmentExpression	pt -> y = v		1194089	0		=			
ANR	1194189	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194190	Identifier	pt		1194089	0					
ANR	1194191	Identifier	y		1194089	1					
ANR	1194192	Identifier	v		1194089	1					
ANR	1194193	ElseStatement	else		1194089	0					
ANR	1194194	IfStatement	if ( pt -> y < - v )		1194089	0					
ANR	1194195	Condition	pt -> y < - v	351:17:10645:10654	1194089	0	True				
ANR	1194196	RelationalExpression	pt -> y < - v		1194089	0		<			
ANR	1194197	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194198	Identifier	pt		1194089	0					
ANR	1194199	Identifier	y		1194089	1					
ANR	1194200	UnaryOperationExpression	- v		1194089	1					
ANR	1194201	UnaryOperator	-		1194089	0					
ANR	1194202	Identifier	v		1194089	1					
ANR	1194203	ExpressionStatement	pt -> y = - v	352:12:10669:10679	1194089	1	True				
ANR	1194204	AssignmentExpression	pt -> y = - v		1194089	0		=			
ANR	1194205	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194206	Identifier	pt		1194089	0					
ANR	1194207	Identifier	y		1194089	1					
ANR	1194208	UnaryOperationExpression	- v		1194089	1					
ANR	1194209	UnaryOperator	-		1194089	0					
ANR	1194210	Identifier	v		1194089	1					
ANR	1194211	ExpressionStatement	pt -> y <<= sy	353:8:10689:10701	1194089	2	True				
ANR	1194212	AssignmentExpression	pt -> y <<= sy		1194089	0		<<=			
ANR	1194213	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194214	Identifier	pt		1194089	0					
ANR	1194215	Identifier	y		1194089	1					
ANR	1194216	Identifier	sy		1194089	1					
ANR	1194217	ElseStatement	else		1194089	0					
ANR	1194218	ExpressionStatement	pt -> y >>= - sy	355:8:10722:10735	1194089	0	True				
ANR	1194219	AssignmentExpression	pt -> y >>= - sy		1194089	0		>>=			
ANR	1194220	PtrMemberAccess	pt -> y		1194089	0					
ANR	1194221	Identifier	pt		1194089	0					
ANR	1194222	Identifier	y		1194089	1					
ANR	1194223	UnaryOperationExpression	- sy		1194089	1					
ANR	1194224	UnaryOperator	-		1194089	0					
ANR	1194225	Identifier	sy		1194089	1					
ANR	1194226	ReturnType	void		1194089	1					
ANR	1194227	Identifier	gx_point_scale_exp2		1194089	2					
ANR	1194228	ParameterList	"gs_fixed_point * pt , int sx , int sy"		1194089	3					
ANR	1194229	Parameter	gs_fixed_point * pt	333:20:10229:10247	1194089	0	True				
ANR	1194230	ParameterType	gs_fixed_point *		1194089	0					
ANR	1194231	Identifier	pt		1194089	1					
ANR	1194232	Parameter	int sx	333:41:10250:10255	1194089	1	True				
ANR	1194233	ParameterType	int		1194089	0					
ANR	1194234	Identifier	sx		1194089	1					
ANR	1194235	Parameter	int sy	333:49:10258:10263	1194089	2	True				
ANR	1194236	ParameterType	int		1194089	0					
ANR	1194237	Identifier	sy		1194089	1					
ANR	1194238	CFGEntryNode	ENTRY		1194089		True				
ANR	1194239	CFGExitNode	EXIT		1194089		True				
ANR	1194240	Symbol	max_int		1194089						
ANR	1194241	Symbol	pt -> x		1194089						
ANR	1194242	Symbol	pt -> y		1194089						
ANR	1194243	Symbol	pt		1194089						
ANR	1194244	Symbol	sx		1194089						
ANR	1194245	Symbol	sy		1194089						
ANR	1194246	Symbol	v		1194089						
ANR	1194247	Symbol	int2fixed		1194089						
ANR	1194248	Symbol	* pt		1194089						
ANR	1194249	Function	gx_rect_scale_exp2	357:0:10739:10883							
ANR	1194250	FunctionDef	"gx_rect_scale_exp2 (gs_fixed_rect * pr , int sx , int sy)"		1194249	0					
ANR	1194251	CompoundStatement		359:0:10799:10883	1194249	0					
ANR	1194252	ExpressionStatement	"gx_point_scale_exp2 ( & pr -> p , sx , sy )"	360:4:10805:10840	1194249	0	True				
ANR	1194253	CallExpression	"gx_point_scale_exp2 ( & pr -> p , sx , sy )"		1194249	0					
ANR	1194254	Callee	gx_point_scale_exp2		1194249	0					
ANR	1194255	Identifier	gx_point_scale_exp2		1194249	0					
ANR	1194256	ArgumentList	& pr -> p		1194249	1					
ANR	1194257	Argument	& pr -> p		1194249	0					
ANR	1194258	UnaryOperationExpression	& pr -> p		1194249	0					
ANR	1194259	UnaryOperator	&		1194249	0					
ANR	1194260	PtrMemberAccess	pr -> p		1194249	1					
ANR	1194261	Identifier	pr		1194249	0					
ANR	1194262	Identifier	p		1194249	1					
ANR	1194263	Argument	sx		1194249	1					
ANR	1194264	Identifier	sx		1194249	0					
ANR	1194265	Argument	sy		1194249	2					
ANR	1194266	Identifier	sy		1194249	0					
ANR	1194267	ExpressionStatement	"gx_point_scale_exp2 ( & pr -> q , sx , sy )"	361:4:10846:10881	1194249	1	True				
ANR	1194268	CallExpression	"gx_point_scale_exp2 ( & pr -> q , sx , sy )"		1194249	0					
ANR	1194269	Callee	gx_point_scale_exp2		1194249	0					
ANR	1194270	Identifier	gx_point_scale_exp2		1194249	0					
ANR	1194271	ArgumentList	& pr -> q		1194249	1					
ANR	1194272	Argument	& pr -> q		1194249	0					
ANR	1194273	UnaryOperationExpression	& pr -> q		1194249	0					
ANR	1194274	UnaryOperator	&		1194249	0					
ANR	1194275	PtrMemberAccess	pr -> q		1194249	1					
ANR	1194276	Identifier	pr		1194249	0					
ANR	1194277	Identifier	q		1194249	1					
ANR	1194278	Argument	sx		1194249	1					
ANR	1194279	Identifier	sx		1194249	0					
ANR	1194280	Argument	sy		1194249	2					
ANR	1194281	Identifier	sy		1194249	0					
ANR	1194282	ReturnType	void		1194249	1					
ANR	1194283	Identifier	gx_rect_scale_exp2		1194249	2					
ANR	1194284	ParameterList	"gs_fixed_rect * pr , int sx , int sy"		1194249	3					
ANR	1194285	Parameter	gs_fixed_rect * pr	358:19:10763:10780	1194249	0	True				
ANR	1194286	ParameterType	gs_fixed_rect *		1194249	0					
ANR	1194287	Identifier	pr		1194249	1					
ANR	1194288	Parameter	int sx	358:39:10783:10788	1194249	1	True				
ANR	1194289	ParameterType	int		1194249	0					
ANR	1194290	Identifier	sx		1194249	1					
ANR	1194291	Parameter	int sy	358:47:10791:10796	1194249	2	True				
ANR	1194292	ParameterType	int		1194249	0					
ANR	1194293	Identifier	sy		1194249	1					
ANR	1194294	CFGEntryNode	ENTRY		1194249		True				
ANR	1194295	CFGExitNode	EXIT		1194249		True				
ANR	1194296	Symbol	pr		1194249						
ANR	1194297	Symbol	sx		1194249						
ANR	1194298	Symbol	sy		1194249						
ANR	1194299	Symbol	& pr -> p		1194249						
ANR	1194300	Symbol	& pr -> q		1194249						
ANR	1194301	Function	gx_path_scale_exp2_shared	363:0:10885:11662							
ANR	1194302	FunctionDef	"gx_path_scale_exp2_shared (gx_path * ppath , int log2_scale_x , int log2_scale_y , bool segments_shared)"		1194301	0					
ANR	1194303	CompoundStatement		366:0:11016:11662	1194301	0					
ANR	1194304	IdentifierDeclStatement	segment * pseg ;	367:4:11022:11035	1194301	0	True				
ANR	1194305	IdentifierDecl	* pseg		1194301	0					
ANR	1194306	IdentifierDeclType	segment *		1194301	0					
ANR	1194307	Identifier	pseg		1194301	1					
ANR	1194308	ExpressionStatement	"gx_rect_scale_exp2 ( & ppath -> bbox , log2_scale_x , log2_scale_y )"	369:4:11042:11102	1194301	1	True				
ANR	1194309	CallExpression	"gx_rect_scale_exp2 ( & ppath -> bbox , log2_scale_x , log2_scale_y )"		1194301	0					
ANR	1194310	Callee	gx_rect_scale_exp2		1194301	0					
ANR	1194311	Identifier	gx_rect_scale_exp2		1194301	0					
ANR	1194312	ArgumentList	& ppath -> bbox		1194301	1					
ANR	1194313	Argument	& ppath -> bbox		1194301	0					
ANR	1194314	UnaryOperationExpression	& ppath -> bbox		1194301	0					
ANR	1194315	UnaryOperator	&		1194301	0					
ANR	1194316	PtrMemberAccess	ppath -> bbox		1194301	1					
ANR	1194317	Identifier	ppath		1194301	0					
ANR	1194318	Identifier	bbox		1194301	1					
ANR	1194319	Argument	log2_scale_x		1194301	1					
ANR	1194320	Identifier	log2_scale_x		1194301	0					
ANR	1194321	Argument	log2_scale_y		1194301	2					
ANR	1194322	Identifier	log2_scale_y		1194301	0					
ANR	1194323	Statement	define	370:1:11105:11110	1194301	2	True				
ANR	1194324	Statement	SCALE_XY	370:8:11112:11119	1194301	3	True				
ANR	1194325	Statement	(	370:16:11120:11120	1194301	4	True				
ANR	1194326	Statement	pt	370:17:11121:11122	1194301	5	True				
ANR	1194327	Statement	)	370:19:11123:11123	1194301	6	True				
ANR	1194328	Statement	gx_point_scale_exp2	370:21:11125:11143	1194301	7	True				
ANR	1194329	Statement	(	370:40:11144:11144	1194301	8	True				
ANR	1194330	Statement	&	370:41:11145:11145	1194301	9	True				
ANR	1194331	Statement	pt	370:42:11146:11147	1194301	10	True				
ANR	1194332	Statement	","	370:44:11148:11148	1194301	11	True				
ANR	1194333	Statement	log2_scale_x	370:46:11150:11161	1194301	12	True				
ANR	1194334	Statement	","	370:58:11162:11162	1194301	13	True				
ANR	1194335	Statement	log2_scale_y	370:60:11164:11175	1194301	14	True				
ANR	1194336	Statement	)	370:72:11176:11176	1194301	15	True				
ANR	1194337	ExpressionStatement	SCALE_XY ( ppath -> position )	371:4:11182:11207	1194301	16	True				
ANR	1194338	CallExpression	SCALE_XY ( ppath -> position )		1194301	0					
ANR	1194339	Callee	SCALE_XY		1194301	0					
ANR	1194340	Identifier	SCALE_XY		1194301	0					
ANR	1194341	ArgumentList	ppath -> position		1194301	1					
ANR	1194342	Argument	ppath -> position		1194301	0					
ANR	1194343	PtrMemberAccess	ppath -> position		1194301	0					
ANR	1194344	Identifier	ppath		1194301	0					
ANR	1194345	Identifier	position		1194301	1					
ANR	1194346	IfStatement	if ( ! segments_shared )		1194301	17					
ANR	1194347	Condition	! segments_shared	372:8:11217:11232	1194301	0	True				
ANR	1194348	UnaryOperationExpression	! segments_shared		1194301	0					
ANR	1194349	UnaryOperator	!		1194301	0					
ANR	1194350	Identifier	segments_shared		1194301	1					
ANR	1194351	CompoundStatement		7:26:218:218	1194301	1					
ANR	1194352	ForStatement	for ( pseg = ( segment * ) ( ppath -> first_subpath ) ; pseg != 0 ; pseg = pseg -> next )		1194301	0					
ANR	1194353	ForInit	pseg = ( segment * ) ( ppath -> first_subpath ) ;	373:13:11250:11291	1194301	0	True				
ANR	1194354	AssignmentExpression	pseg = ( segment * ) ( ppath -> first_subpath )		1194301	0		=			
ANR	1194355	Identifier	pseg		1194301	0					
ANR	1194356	CastExpression	( segment * ) ( ppath -> first_subpath )		1194301	1					
ANR	1194357	CastTarget	segment *		1194301	0					
ANR	1194358	PtrMemberAccess	ppath -> first_subpath		1194301	1					
ANR	1194359	Identifier	ppath		1194301	0					
ANR	1194360	Identifier	first_subpath		1194301	1					
ANR	1194361	Condition	pseg != 0	373:56:11293:11301	1194301	1	True				
ANR	1194362	EqualityExpression	pseg != 0		1194301	0		!=			
ANR	1194363	Identifier	pseg		1194301	0					
ANR	1194364	PrimaryExpression	0		1194301	1					
ANR	1194365	AssignmentExpression	pseg = pseg -> next	374:13:11317:11333	1194301	2	True	=			
ANR	1194366	Identifier	pseg		1194301	0					
ANR	1194367	PtrMemberAccess	pseg -> next		1194301	1					
ANR	1194368	Identifier	pseg		1194301	0					
ANR	1194369	Identifier	next		1194301	1					
ANR	1194370	SwitchStatement	switch ( pseg -> type )		1194301	3					
ANR	1194371	Condition	pseg -> type	376:20:11370:11379	1194301	0	True				
ANR	1194372	PtrMemberAccess	pseg -> type		1194301	0					
ANR	1194373	Identifier	pseg		1194301	0					
ANR	1194374	Identifier	type		1194301	1					
ANR	1194375	CompoundStatement		11:32:365:365	1194301	1					
ANR	1194376	Label	case s_curve :	377:12:11396:11408	1194301	0	True				
ANR	1194377	Identifier	s_curve		1194301	0					
ANR	1194378	ExpressionStatement	SCALE_XY ( ( ( curve_segment * ) pseg ) -> p1 )	378:16:11426:11463	1194301	1	True				
ANR	1194379	CallExpression	SCALE_XY ( ( ( curve_segment * ) pseg ) -> p1 )		1194301	0					
ANR	1194380	Callee	SCALE_XY		1194301	0					
ANR	1194381	Identifier	SCALE_XY		1194301	0					
ANR	1194382	ArgumentList	( ( curve_segment * ) pseg ) -> p1		1194301	1					
ANR	1194383	Argument	( ( curve_segment * ) pseg ) -> p1		1194301	0					
ANR	1194384	PtrMemberAccess	( ( curve_segment * ) pseg ) -> p1		1194301	0					
ANR	1194385	CastExpression	( curve_segment * ) pseg		1194301	0					
ANR	1194386	CastTarget	curve_segment *		1194301	0					
ANR	1194387	Identifier	pseg		1194301	1					
ANR	1194388	Identifier	p1		1194301	1					
ANR	1194389	ExpressionStatement	SCALE_XY ( ( ( curve_segment * ) pseg ) -> p2 )	379:16:11481:11518	1194301	2	True				
ANR	1194390	CallExpression	SCALE_XY ( ( ( curve_segment * ) pseg ) -> p2 )		1194301	0					
ANR	1194391	Callee	SCALE_XY		1194301	0					
ANR	1194392	Identifier	SCALE_XY		1194301	0					
ANR	1194393	ArgumentList	( ( curve_segment * ) pseg ) -> p2		1194301	1					
ANR	1194394	Argument	( ( curve_segment * ) pseg ) -> p2		1194301	0					
ANR	1194395	PtrMemberAccess	( ( curve_segment * ) pseg ) -> p2		1194301	0					
ANR	1194396	CastExpression	( curve_segment * ) pseg		1194301	0					
ANR	1194397	CastTarget	curve_segment *		1194301	0					
ANR	1194398	Identifier	pseg		1194301	1					
ANR	1194399	Identifier	p2		1194301	1					
ANR	1194400	Label	default :	381:12:11567:11574	1194301	3	True				
ANR	1194401	Identifier	default		1194301	0					
ANR	1194402	ExpressionStatement	SCALE_XY ( pseg -> pt )	382:16:11592:11610	1194301	4	True				
ANR	1194403	CallExpression	SCALE_XY ( pseg -> pt )		1194301	0					
ANR	1194404	Callee	SCALE_XY		1194301	0					
ANR	1194405	Identifier	SCALE_XY		1194301	0					
ANR	1194406	ArgumentList	pseg -> pt		1194301	1					
ANR	1194407	Argument	pseg -> pt		1194301	0					
ANR	1194408	PtrMemberAccess	pseg -> pt		1194301	0					
ANR	1194409	Identifier	pseg		1194301	0					
ANR	1194410	Identifier	pt		1194301	1					
ANR	1194411	Statement	undef	385:1:11633:11637	1194301	18	True				
ANR	1194412	Statement	SCALE_XY	385:7:11639:11646	1194301	19	True				
ANR	1194413	ReturnStatement	return 0 ;	386:4:11652:11660	1194301	20	True				
ANR	1194414	PrimaryExpression	0		1194301	0					
ANR	1194415	ReturnType	int		1194301	1					
ANR	1194416	Identifier	gx_path_scale_exp2_shared		1194301	2					
ANR	1194417	ParameterList	"gx_path * ppath , int log2_scale_x , int log2_scale_y , bool segments_shared"		1194301	3					
ANR	1194418	Parameter	gx_path * ppath	364:26:10915:10929	1194301	0	True				
ANR	1194419	ParameterType	gx_path *		1194301	0					
ANR	1194420	Identifier	ppath		1194301	1					
ANR	1194421	Parameter	int log2_scale_x	364:43:10932:10947	1194301	1	True				
ANR	1194422	ParameterType	int		1194301	0					
ANR	1194423	Identifier	log2_scale_x		1194301	1					
ANR	1194424	Parameter	int log2_scale_y	364:61:10950:10965	1194301	2	True				
ANR	1194425	ParameterType	int		1194301	0					
ANR	1194426	Identifier	log2_scale_y		1194301	1					
ANR	1194427	Parameter	bool segments_shared	365:26:10994:11013	1194301	3	True				
ANR	1194428	ParameterType	bool		1194301	0					
ANR	1194429	Identifier	segments_shared		1194301	1					
ANR	1194430	CFGEntryNode	ENTRY		1194301		True				
ANR	1194431	CFGExitNode	EXIT		1194301		True				
ANR	1194432	Symbol	* ppath		1194301						
ANR	1194433	Symbol	log2_scale_y		1194301						
ANR	1194434	Symbol	log2_scale_x		1194301						
ANR	1194435	Symbol	ppath		1194301						
ANR	1194436	Symbol	ppath -> first_subpath		1194301						
ANR	1194437	Symbol	pseg -> next		1194301						
ANR	1194438	Symbol	pseg		1194301						
ANR	1194439	Symbol	pseg -> pt		1194301						
ANR	1194440	Symbol	pseg -> type		1194301						
ANR	1194441	Symbol	segments_shared		1194301						
ANR	1194442	Symbol	* pseg		1194301						
ANR	1194443	Symbol	( ( curve_segment * ) pseg ) -> p2		1194301						
ANR	1194444	Symbol	( ( curve_segment * ) pseg ) -> p1		1194301						
ANR	1194445	Symbol	ppath -> position		1194301						
ANR	1194446	Symbol	& ppath -> bbox		1194301						
ANR	1194447	Function	gx_path_copy_reversed	400:0:12223:15902							
ANR	1194448	FunctionDef	"gx_path_copy_reversed (const gx_path * ppath_old , gx_path * ppath)"		1194447	0					
ANR	1194449	CompoundStatement		402:0:12293:15902	1194447	0					
ANR	1194450	IdentifierDeclStatement	const subpath * psub = ppath_old -> current_subpath ;	403:4:12299:12347	1194447	0	True				
ANR	1194451	IdentifierDecl	* psub = ppath_old -> current_subpath		1194447	0					
ANR	1194452	IdentifierDeclType	const subpath *		1194447	0					
ANR	1194453	Identifier	psub		1194447	1					
ANR	1194454	AssignmentExpression	* psub = ppath_old -> current_subpath		1194447	2		=			
ANR	1194455	Identifier	psub		1194447	0					
ANR	1194456	PtrMemberAccess	ppath_old -> current_subpath		1194447	1					
ANR	1194457	Identifier	ppath_old		1194447	0					
ANR	1194458	Identifier	current_subpath		1194447	1					
ANR	1194459	IfStatement	if ( gs_debug_c ( 'P' ) )		1194447	1					
ANR	1194460	Condition	gs_debug_c ( 'P' )	406:8:12371:12385	1194447	0	True				
ANR	1194461	CallExpression	gs_debug_c ( 'P' )		1194447	0					
ANR	1194462	Callee	gs_debug_c		1194447	0					
ANR	1194463	Identifier	gs_debug_c		1194447	0					
ANR	1194464	ArgumentList	'P'		1194447	1					
ANR	1194465	Argument	'P'		1194447	0					
ANR	1194466	PrimaryExpression	'P'		1194447	0					
ANR	1194467	ExpressionStatement	"gx_dump_path ( ppath_old , ""before reversepath"" )"	407:8:12396:12441	1194447	1	True				
ANR	1194468	CallExpression	"gx_dump_path ( ppath_old , ""before reversepath"" )"		1194447	0					
ANR	1194469	Callee	gx_dump_path		1194447	0					
ANR	1194470	Identifier	gx_dump_path		1194447	0					
ANR	1194471	ArgumentList	ppath_old		1194447	1					
ANR	1194472	Argument	ppath_old		1194447	0					
ANR	1194473	Identifier	ppath_old		1194447	0					
ANR	1194474	Argument	"""before reversepath"""		1194447	1					
ANR	1194475	PrimaryExpression	"""before reversepath"""		1194447	0					
ANR	1194476	Label	nsp :	409:1:12451:12454	1194447	2	True				
ANR	1194477	Identifier	nsp		1194447	0					
ANR	1194478	IfStatement	if ( psub )		1194447	3					
ANR	1194479	Condition	psub	410:8:12464:12467	1194447	0	True				
ANR	1194480	Identifier	psub		1194447	0					
ANR	1194481	CompoundStatement		16:8:409:417	1194447	1					
ANR	1194482	IdentifierDeclStatement	const segment * prev = psub -> last ;	411:8:12480:12512	1194447	0	True				
ANR	1194483	IdentifierDecl	* prev = psub -> last		1194447	0					
ANR	1194484	IdentifierDeclType	const segment *		1194447	0					
ANR	1194485	Identifier	prev		1194447	1					
ANR	1194486	AssignmentExpression	* prev = psub -> last		1194447	2		=			
ANR	1194487	Identifier	prev		1194447	0					
ANR	1194488	PtrMemberAccess	psub -> last		1194447	1					
ANR	1194489	Identifier	psub		1194447	0					
ANR	1194490	Identifier	last		1194447	1					
ANR	1194491	IdentifierDeclStatement	const segment * pseg ;	412:8:12522:12541	1194447	1	True				
ANR	1194492	IdentifierDecl	* pseg		1194447	0					
ANR	1194493	IdentifierDeclType	const segment *		1194447	0					
ANR	1194494	Identifier	pseg		1194447	1					
ANR	1194495	IdentifierDeclStatement	segment_notes notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes ) ;	413:8:12551:12659	1194447	2	True				
ANR	1194496	IdentifierDecl	notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes )		1194447	0					
ANR	1194497	IdentifierDeclType	segment_notes		1194447	0					
ANR	1194498	Identifier	notes		1194447	1					
ANR	1194499	AssignmentExpression	notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes )		1194447	2		=			
ANR	1194500	Identifier	notes		1194447	0					
ANR	1194501	ConditionalExpression	prev == ( const segment * ) psub ? sn_none : psub -> next -> notes		1194447	1					
ANR	1194502	Condition	prev == ( const segment * ) psub		1194447	0					
ANR	1194503	EqualityExpression	prev == ( const segment * ) psub		1194447	0		==			
ANR	1194504	Identifier	prev		1194447	0					
ANR	1194505	CastExpression	( const segment * ) psub		1194447	1					
ANR	1194506	CastTarget	const segment *		1194447	0					
ANR	1194507	Identifier	psub		1194447	1					
ANR	1194508	Identifier	sn_none		1194447	1					
ANR	1194509	PtrMemberAccess	psub -> next -> notes		1194447	2					
ANR	1194510	PtrMemberAccess	psub -> next		1194447	0					
ANR	1194511	Identifier	psub		1194447	0					
ANR	1194512	Identifier	next		1194447	1					
ANR	1194513	Identifier	notes		1194447	1					
ANR	1194514	IdentifierDeclStatement	segment_notes prev_notes ;	416:8:12669:12693	1194447	3	True				
ANR	1194515	IdentifierDecl	prev_notes		1194447	0					
ANR	1194516	IdentifierDeclType	segment_notes		1194447	0					
ANR	1194517	Identifier	prev_notes		1194447	1					
ANR	1194518	IdentifierDeclStatement	int code ;	417:8:12703:12711	1194447	4	True				
ANR	1194519	IdentifierDecl	code		1194447	0					
ANR	1194520	IdentifierDeclType	int		1194447	0					
ANR	1194521	Identifier	code		1194447	1					
ANR	1194522	IfStatement	if ( ! psub -> is_closed )		1194447	5					
ANR	1194523	Condition	! psub -> is_closed	419:12:12726:12741	1194447	0	True				
ANR	1194524	UnaryOperationExpression	! psub -> is_closed		1194447	0					
ANR	1194525	UnaryOperator	!		1194447	0					
ANR	1194526	PtrMemberAccess	psub -> is_closed		1194447	1					
ANR	1194527	Identifier	psub		1194447	0					
ANR	1194528	Identifier	is_closed		1194447	1					
ANR	1194529	CompoundStatement		18:30:450:450	1194447	1					
ANR	1194530	ExpressionStatement	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"	420:12:12758:12813	1194447	0	True				
ANR	1194531	AssignmentExpression	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194447	0		=			
ANR	1194532	Identifier	code		1194447	0					
ANR	1194533	CallExpression	"gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194447	1					
ANR	1194534	Callee	gx_path_add_point		1194447	0					
ANR	1194535	Identifier	gx_path_add_point		1194447	0					
ANR	1194536	ArgumentList	ppath		1194447	1					
ANR	1194537	Argument	ppath		1194447	0					
ANR	1194538	Identifier	ppath		1194447	0					
ANR	1194539	Argument	prev -> pt . x		1194447	1					
ANR	1194540	MemberAccess	prev -> pt . x		1194447	0					
ANR	1194541	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194542	Identifier	prev		1194447	0					
ANR	1194543	Identifier	pt		1194447	1					
ANR	1194544	Identifier	x		1194447	1					
ANR	1194545	Argument	prev -> pt . y		1194447	2					
ANR	1194546	MemberAccess	prev -> pt . y		1194447	0					
ANR	1194547	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194548	Identifier	prev		1194447	0					
ANR	1194549	Identifier	pt		1194447	1					
ANR	1194550	Identifier	y		1194447	1					
ANR	1194551	IfStatement	if ( code < 0 )		1194447	1					
ANR	1194552	Condition	code < 0	421:16:12831:12838	1194447	0	True				
ANR	1194553	RelationalExpression	code < 0		1194447	0		<			
ANR	1194554	Identifier	code		1194447	0					
ANR	1194555	PrimaryExpression	0		1194447	1					
ANR	1194556	ReturnStatement	return code ;	422:16:12857:12868	1194447	1	True				
ANR	1194557	Identifier	code		1194447	0					
ANR	1194558	DoStatement	do		1194447	6					
ANR	1194559	CompoundStatement		30:11:933:933	1194447	0					
ANR	1194560	ExpressionStatement	pseg = prev	432:12:13241:13252	1194447	0	True				
ANR	1194561	AssignmentExpression	pseg = prev		1194447	0		=			
ANR	1194562	Identifier	pseg		1194447	0					
ANR	1194563	Identifier	prev		1194447	1					
ANR	1194564	ExpressionStatement	prev_notes = notes	433:12:13266:13284	1194447	1	True				
ANR	1194565	AssignmentExpression	prev_notes = notes		1194447	0		=			
ANR	1194566	Identifier	prev_notes		1194447	0					
ANR	1194567	Identifier	notes		1194447	1					
ANR	1194568	ExpressionStatement	prev = pseg -> prev	434:12:13298:13315	1194447	2	True				
ANR	1194569	AssignmentExpression	prev = pseg -> prev		1194447	0		=			
ANR	1194570	Identifier	prev		1194447	0					
ANR	1194571	PtrMemberAccess	pseg -> prev		1194447	1					
ANR	1194572	Identifier	pseg		1194447	0					
ANR	1194573	Identifier	prev		1194447	1					
ANR	1194574	ExpressionStatement	notes = pseg -> notes	435:12:13329:13348	1194447	3	True				
ANR	1194575	AssignmentExpression	notes = pseg -> notes		1194447	0		=			
ANR	1194576	Identifier	notes		1194447	0					
ANR	1194577	PtrMemberAccess	pseg -> notes		1194447	1					
ANR	1194578	Identifier	pseg		1194447	0					
ANR	1194579	Identifier	notes		1194447	1					
ANR	1194580	ExpressionStatement	prev_notes = ( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )	436:12:13362:13444	1194447	4	True				
ANR	1194581	AssignmentExpression	prev_notes = ( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )		1194447	0		=			
ANR	1194582	Identifier	prev_notes		1194447	0					
ANR	1194583	InclusiveOrExpression	( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )		1194447	1		|			
ANR	1194584	BitAndExpression	prev_notes & sn_not_first		1194447	0		&			
ANR	1194585	Identifier	prev_notes		1194447	0					
ANR	1194586	Identifier	sn_not_first		1194447	1					
ANR	1194587	BitAndExpression	notes & ~sn_not_first		1194447	1		&			
ANR	1194588	Identifier	notes		1194447	0					
ANR	1194589	Identifier	~sn_not_first		1194447	1					
ANR	1194590	SwitchStatement	switch ( pseg -> type )		1194447	5					
ANR	1194591	Condition	pseg -> type	438:20:13466:13475	1194447	0	True				
ANR	1194592	PtrMemberAccess	pseg -> type		1194447	0					
ANR	1194593	Identifier	pseg		1194447	0					
ANR	1194594	Identifier	type		1194447	1					
ANR	1194595	CompoundStatement		37:32:1184:1184	1194447	1					
ANR	1194596	Label	case s_start :	439:16:13496:13508	1194447	0	True				
ANR	1194597	Identifier	s_start		1194447	0					
ANR	1194598	IfStatement	if ( psub -> is_closed )		1194447	1					
ANR	1194599	Condition	psub -> is_closed	441:24:13577:13591	1194447	0	True				
ANR	1194600	PtrMemberAccess	psub -> is_closed		1194447	0					
ANR	1194601	Identifier	psub		1194447	0					
ANR	1194602	Identifier	is_closed		1194447	1					
ANR	1194603	CompoundStatement		40:41:1300:1300	1194447	1					
ANR	1194604	ExpressionStatement	"code = gx_path_close_subpath_notes ( ppath , prev_notes )"	442:24:13620:13701	1194447	0	True				
ANR	1194605	AssignmentExpression	"code = gx_path_close_subpath_notes ( ppath , prev_notes )"		1194447	0		=			
ANR	1194606	Identifier	code		1194447	0					
ANR	1194607	CallExpression	"gx_path_close_subpath_notes ( ppath , prev_notes )"		1194447	1					
ANR	1194608	Callee	gx_path_close_subpath_notes		1194447	0					
ANR	1194609	Identifier	gx_path_close_subpath_notes		1194447	0					
ANR	1194610	ArgumentList	ppath		1194447	1					
ANR	1194611	Argument	ppath		1194447	0					
ANR	1194612	Identifier	ppath		1194447	0					
ANR	1194613	Argument	prev_notes		1194447	1					
ANR	1194614	Identifier	prev_notes		1194447	0					
ANR	1194615	IfStatement	if ( code < 0 )		1194447	1					
ANR	1194616	Condition	code < 0	444:28:13731:13738	1194447	0	True				
ANR	1194617	RelationalExpression	code < 0		1194447	0		<			
ANR	1194618	Identifier	code		1194447	0					
ANR	1194619	PrimaryExpression	0		1194447	1					
ANR	1194620	ReturnStatement	return code ;	445:28:13769:13780	1194447	1	True				
ANR	1194621	Identifier	code		1194447	0					
ANR	1194622	DoStatement	do		1194447	2					
ANR	1194623	CompoundStatement		46:23:1533:1533	1194447	0					
ANR	1194624	ExpressionStatement	psub = ( const subpath * ) psub -> prev	448:24:13853:13887	1194447	0	True				
ANR	1194625	AssignmentExpression	psub = ( const subpath * ) psub -> prev		1194447	0		=			
ANR	1194626	Identifier	psub		1194447	0					
ANR	1194627	CastExpression	( const subpath * ) psub -> prev		1194447	1					
ANR	1194628	CastTarget	const subpath *		1194447	0					
ANR	1194629	PtrMemberAccess	psub -> prev		1194447	1					
ANR	1194630	Identifier	psub		1194447	0					
ANR	1194631	Identifier	prev		1194447	1					
ANR	1194632	Condition	psub && psub -> type != s_start	449:29:13918:13946	1194447	1	True				
ANR	1194633	AndExpression	psub && psub -> type != s_start		1194447	0		&&			
ANR	1194634	Identifier	psub		1194447	0					
ANR	1194635	EqualityExpression	psub -> type != s_start		1194447	1		!=			
ANR	1194636	PtrMemberAccess	psub -> type		1194447	0					
ANR	1194637	Identifier	psub		1194447	0					
ANR	1194638	Identifier	type		1194447	1					
ANR	1194639	Identifier	s_start		1194447	1					
ANR	1194640	GotoStatement	goto nsp ;	450:20:13970:13978	1194447	3	True				
ANR	1194641	Identifier	nsp		1194447	0					
ANR	1194642	Label	case s_curve :	451:16:13996:14008	1194447	4	True				
ANR	1194643	Identifier	s_curve		1194447	0					
ANR	1194644	CompoundStatement		52:24:1762:1839	1194447	5					
ANR	1194645	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	453:24:14056:14133	1194447	0	True				
ANR	1194646	IdentifierDecl	* pc = ( const curve_segment * ) pseg		1194447	0					
ANR	1194647	IdentifierDeclType	const curve_segment *		1194447	0					
ANR	1194648	Identifier	pc		1194447	1					
ANR	1194649	AssignmentExpression	* pc = ( const curve_segment * ) pseg		1194447	2		=			
ANR	1194650	Identifier	pc		1194447	0					
ANR	1194651	CastExpression	( const curve_segment * ) pseg		1194447	1					
ANR	1194652	CastTarget	const curve_segment *		1194447	0					
ANR	1194653	Identifier	pseg		1194447	1					
ANR	1194654	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"	456:24:14160:14423	1194447	1	True				
ANR	1194655	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	0		=			
ANR	1194656	Identifier	code		1194447	0					
ANR	1194657	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	1					
ANR	1194658	Callee	gx_path_add_curve_notes		1194447	0					
ANR	1194659	Identifier	gx_path_add_curve_notes		1194447	0					
ANR	1194660	ArgumentList	ppath		1194447	1					
ANR	1194661	Argument	ppath		1194447	0					
ANR	1194662	Identifier	ppath		1194447	0					
ANR	1194663	Argument	pc -> p2 . x		1194447	1					
ANR	1194664	MemberAccess	pc -> p2 . x		1194447	0					
ANR	1194665	PtrMemberAccess	pc -> p2		1194447	0					
ANR	1194666	Identifier	pc		1194447	0					
ANR	1194667	Identifier	p2		1194447	1					
ANR	1194668	Identifier	x		1194447	1					
ANR	1194669	Argument	pc -> p2 . y		1194447	2					
ANR	1194670	MemberAccess	pc -> p2 . y		1194447	0					
ANR	1194671	PtrMemberAccess	pc -> p2		1194447	0					
ANR	1194672	Identifier	pc		1194447	0					
ANR	1194673	Identifier	p2		1194447	1					
ANR	1194674	Identifier	y		1194447	1					
ANR	1194675	Argument	pc -> p1 . x		1194447	3					
ANR	1194676	MemberAccess	pc -> p1 . x		1194447	0					
ANR	1194677	PtrMemberAccess	pc -> p1		1194447	0					
ANR	1194678	Identifier	pc		1194447	0					
ANR	1194679	Identifier	p1		1194447	1					
ANR	1194680	Identifier	x		1194447	1					
ANR	1194681	Argument	pc -> p1 . y		1194447	4					
ANR	1194682	MemberAccess	pc -> p1 . y		1194447	0					
ANR	1194683	PtrMemberAccess	pc -> p1		1194447	0					
ANR	1194684	Identifier	pc		1194447	0					
ANR	1194685	Identifier	p1		1194447	1					
ANR	1194686	Identifier	y		1194447	1					
ANR	1194687	Argument	prev -> pt . x		1194447	5					
ANR	1194688	MemberAccess	prev -> pt . x		1194447	0					
ANR	1194689	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194690	Identifier	prev		1194447	0					
ANR	1194691	Identifier	pt		1194447	1					
ANR	1194692	Identifier	x		1194447	1					
ANR	1194693	Argument	prev -> pt . y		1194447	6					
ANR	1194694	MemberAccess	prev -> pt . y		1194447	0					
ANR	1194695	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194696	Identifier	prev		1194447	0					
ANR	1194697	Identifier	pt		1194447	1					
ANR	1194698	Identifier	y		1194447	1					
ANR	1194699	Argument	prev_notes		1194447	7					
ANR	1194700	Identifier	prev_notes		1194447	0					
ANR	1194701	BreakStatement	break ;	460:24:14449:14454	1194447	2	True				
ANR	1194702	Label	case s_line :	462:16:14494:14505	1194447	6	True				
ANR	1194703	Identifier	s_line		1194447	0					
ANR	1194704	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"	463:20:14527:14639	1194447	7	True				
ANR	1194705	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	0		=			
ANR	1194706	Identifier	code		1194447	0					
ANR	1194707	CallExpression	"gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	1					
ANR	1194708	Callee	gx_path_add_line_notes		1194447	0					
ANR	1194709	Identifier	gx_path_add_line_notes		1194447	0					
ANR	1194710	ArgumentList	ppath		1194447	1					
ANR	1194711	Argument	ppath		1194447	0					
ANR	1194712	Identifier	ppath		1194447	0					
ANR	1194713	Argument	prev -> pt . x		1194447	1					
ANR	1194714	MemberAccess	prev -> pt . x		1194447	0					
ANR	1194715	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194716	Identifier	prev		1194447	0					
ANR	1194717	Identifier	pt		1194447	1					
ANR	1194718	Identifier	x		1194447	1					
ANR	1194719	Argument	prev -> pt . y		1194447	2					
ANR	1194720	MemberAccess	prev -> pt . y		1194447	0					
ANR	1194721	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194722	Identifier	prev		1194447	0					
ANR	1194723	Identifier	pt		1194447	1					
ANR	1194724	Identifier	y		1194447	1					
ANR	1194725	Argument	prev_notes		1194447	3					
ANR	1194726	Identifier	prev_notes		1194447	0					
ANR	1194727	BreakStatement	break ;	465:20:14661:14666	1194447	8	True				
ANR	1194728	Label	case s_gap :	466:16:14684:14694	1194447	9	True				
ANR	1194729	Identifier	s_gap		1194447	0					
ANR	1194730	ExpressionStatement	"code = gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"	467:20:14716:14827	1194447	10	True				
ANR	1194731	AssignmentExpression	"code = gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	0		=			
ANR	1194732	Identifier	code		1194447	0					
ANR	1194733	CallExpression	"gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194447	1					
ANR	1194734	Callee	gx_path_add_gap_notes		1194447	0					
ANR	1194735	Identifier	gx_path_add_gap_notes		1194447	0					
ANR	1194736	ArgumentList	ppath		1194447	1					
ANR	1194737	Argument	ppath		1194447	0					
ANR	1194738	Identifier	ppath		1194447	0					
ANR	1194739	Argument	prev -> pt . x		1194447	1					
ANR	1194740	MemberAccess	prev -> pt . x		1194447	0					
ANR	1194741	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194742	Identifier	prev		1194447	0					
ANR	1194743	Identifier	pt		1194447	1					
ANR	1194744	Identifier	x		1194447	1					
ANR	1194745	Argument	prev -> pt . y		1194447	2					
ANR	1194746	MemberAccess	prev -> pt . y		1194447	0					
ANR	1194747	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194748	Identifier	prev		1194447	0					
ANR	1194749	Identifier	pt		1194447	1					
ANR	1194750	Identifier	y		1194447	1					
ANR	1194751	Argument	prev_notes		1194447	3					
ANR	1194752	Identifier	prev_notes		1194447	0					
ANR	1194753	BreakStatement	break ;	469:20:14849:14854	1194447	11	True				
ANR	1194754	Label	case s_line_close :	470:16:14872:14889	1194447	12	True				
ANR	1194755	Identifier	s_line_close		1194447	0					
ANR	1194756	ExpressionStatement	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"	472:20:14960:15060	1194447	13	True				
ANR	1194757	AssignmentExpression	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194447	0		=			
ANR	1194758	Identifier	code		1194447	0					
ANR	1194759	CallExpression	"gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194447	1					
ANR	1194760	Callee	gx_path_add_point		1194447	0					
ANR	1194761	Identifier	gx_path_add_point		1194447	0					
ANR	1194762	ArgumentList	ppath		1194447	1					
ANR	1194763	Argument	ppath		1194447	0					
ANR	1194764	Identifier	ppath		1194447	0					
ANR	1194765	Argument	prev -> pt . x		1194447	1					
ANR	1194766	MemberAccess	prev -> pt . x		1194447	0					
ANR	1194767	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194768	Identifier	prev		1194447	0					
ANR	1194769	Identifier	pt		1194447	1					
ANR	1194770	Identifier	x		1194447	1					
ANR	1194771	Argument	prev -> pt . y		1194447	2					
ANR	1194772	MemberAccess	prev -> pt . y		1194447	0					
ANR	1194773	PtrMemberAccess	prev -> pt		1194447	0					
ANR	1194774	Identifier	prev		1194447	0					
ANR	1194775	Identifier	pt		1194447	1					
ANR	1194776	Identifier	y		1194447	1					
ANR	1194777	BreakStatement	break ;	474:20:15082:15087	1194447	14	True				
ANR	1194778	Label	default :	475:16:15105:15112	1194447	15	True				
ANR	1194779	Identifier	default		1194447	0					
ANR	1194780	ExpressionStatement	return_error ( gs_error_Fatal )	476:20:15153:15181	1194447	16	True				
ANR	1194781	CallExpression	return_error ( gs_error_Fatal )		1194447	0					
ANR	1194782	Callee	return_error		1194447	0					
ANR	1194783	Identifier	return_error		1194447	0					
ANR	1194784	ArgumentList	gs_error_Fatal		1194447	1					
ANR	1194785	Argument	gs_error_Fatal		1194447	0					
ANR	1194786	Identifier	gs_error_Fatal		1194447	0					
ANR	1194787	Condition	code >= 0	478:17:15214:15222	1194447	1	True				
ANR	1194788	RelationalExpression	code >= 0		1194447	0		>=			
ANR	1194789	Identifier	code		1194447	0					
ANR	1194790	PrimaryExpression	0		1194447	1					
ANR	1194791	ReturnStatement	return code ;	479:8:15234:15245	1194447	7	True				
ANR	1194792	Identifier	code		1194447	0					
ANR	1194793	Statement	undef	481:1:15286:15290	1194447	4	True				
ANR	1194794	Statement	sn_not_end	481:7:15292:15301	1194447	5	True				
ANR	1194795	IfStatement	if ( ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old ) )		1194447	6					
ANR	1194796	Condition	ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old )	487:8:15527:15597	1194447	0	True				
ANR	1194797	AndExpression	ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old )		1194447	0		&&			
ANR	1194798	EqualityExpression	ppath_old -> first_subpath == 0		1194447	0		==			
ANR	1194799	PtrMemberAccess	ppath_old -> first_subpath		1194447	0					
ANR	1194800	Identifier	ppath_old		1194447	0					
ANR	1194801	Identifier	first_subpath		1194447	1					
ANR	1194802	PrimaryExpression	0		1194447	1					
ANR	1194803	CallExpression	path_last_is_moveto ( ppath_old )		1194447	1					
ANR	1194804	Callee	path_last_is_moveto		1194447	0					
ANR	1194805	Identifier	path_last_is_moveto		1194447	0					
ANR	1194806	ArgumentList	ppath_old		1194447	1					
ANR	1194807	Argument	ppath_old		1194447	0					
ANR	1194808	Identifier	ppath_old		1194447	0					
ANR	1194809	CompoundStatement		89:8:3325:3443	1194447	1					
ANR	1194810	IdentifierDeclStatement	"int code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y ) ;"	490:8:15619:15737	1194447	0	True				
ANR	1194811	IdentifierDecl	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194447	0					
ANR	1194812	IdentifierDeclType	int		1194447	0					
ANR	1194813	Identifier	code		1194447	1					
ANR	1194814	AssignmentExpression	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194447	2		=			
ANR	1194815	Identifier	code		1194447	0					
ANR	1194816	CallExpression	"gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194447	1					
ANR	1194817	Callee	gx_path_add_point		1194447	0					
ANR	1194818	Identifier	gx_path_add_point		1194447	0					
ANR	1194819	ArgumentList	ppath		1194447	1					
ANR	1194820	Argument	ppath		1194447	0					
ANR	1194821	Identifier	ppath		1194447	0					
ANR	1194822	Argument	ppath_old -> position . x		1194447	1					
ANR	1194823	MemberAccess	ppath_old -> position . x		1194447	0					
ANR	1194824	PtrMemberAccess	ppath_old -> position		1194447	0					
ANR	1194825	Identifier	ppath_old		1194447	0					
ANR	1194826	Identifier	position		1194447	1					
ANR	1194827	Identifier	x		1194447	1					
ANR	1194828	Argument	ppath_old -> position . y		1194447	2					
ANR	1194829	MemberAccess	ppath_old -> position . y		1194447	0					
ANR	1194830	PtrMemberAccess	ppath_old -> position		1194447	0					
ANR	1194831	Identifier	ppath_old		1194447	0					
ANR	1194832	Identifier	position		1194447	1					
ANR	1194833	Identifier	y		1194447	1					
ANR	1194834	IfStatement	if ( code < 0 )		1194447	1					
ANR	1194835	Condition	code < 0	493:12:15752:15759	1194447	0	True				
ANR	1194836	RelationalExpression	code < 0		1194447	0		<			
ANR	1194837	Identifier	code		1194447	0					
ANR	1194838	PrimaryExpression	0		1194447	1					
ANR	1194839	ReturnStatement	return code ;	494:12:15774:15785	1194447	1	True				
ANR	1194840	Identifier	code		1194447	0					
ANR	1194841	IfStatement	if ( gs_debug_c ( 'P' ) )		1194447	7					
ANR	1194842	Condition	gs_debug_c ( 'P' )	497:8:15814:15828	1194447	0	True				
ANR	1194843	CallExpression	gs_debug_c ( 'P' )		1194447	0					
ANR	1194844	Callee	gs_debug_c		1194447	0					
ANR	1194845	Identifier	gs_debug_c		1194447	0					
ANR	1194846	ArgumentList	'P'		1194447	1					
ANR	1194847	Argument	'P'		1194447	0					
ANR	1194848	PrimaryExpression	'P'		1194447	0					
ANR	1194849	ExpressionStatement	"gx_dump_path ( ppath , ""after reversepath"" )"	498:8:15839:15879	1194447	1	True				
ANR	1194850	CallExpression	"gx_dump_path ( ppath , ""after reversepath"" )"		1194447	0					
ANR	1194851	Callee	gx_dump_path		1194447	0					
ANR	1194852	Identifier	gx_dump_path		1194447	0					
ANR	1194853	ArgumentList	ppath		1194447	1					
ANR	1194854	Argument	ppath		1194447	0					
ANR	1194855	Identifier	ppath		1194447	0					
ANR	1194856	Argument	"""after reversepath"""		1194447	1					
ANR	1194857	PrimaryExpression	"""after reversepath"""		1194447	0					
ANR	1194858	ReturnStatement	return 0 ;	500:4:15892:15900	1194447	8	True				
ANR	1194859	PrimaryExpression	0		1194447	0					
ANR	1194860	ReturnType	int		1194447	1					
ANR	1194861	Identifier	gx_path_copy_reversed		1194447	2					
ANR	1194862	ParameterList	"const gx_path * ppath_old , gx_path * ppath"		1194447	3					
ANR	1194863	Parameter	const gx_path * ppath_old	401:22:12249:12273	1194447	0	True				
ANR	1194864	ParameterType	const gx_path *		1194447	0					
ANR	1194865	Identifier	ppath_old		1194447	1					
ANR	1194866	Parameter	gx_path * ppath	401:49:12276:12290	1194447	1	True				
ANR	1194867	ParameterType	gx_path *		1194447	0					
ANR	1194868	Identifier	ppath		1194447	1					
ANR	1194869	CFGEntryNode	ENTRY		1194447		True				
ANR	1194870	CFGExitNode	EXIT		1194447		True				
ANR	1194871	Symbol	gx_path_add_gap_notes		1194447						
ANR	1194872	Symbol	notes		1194447						
ANR	1194873	Symbol	s_start		1194447						
ANR	1194874	Symbol	pc -> p1 . y		1194447						
ANR	1194875	Symbol	pc -> p1 . x		1194447						
ANR	1194876	Symbol	prev		1194447						
ANR	1194877	Symbol	sn_none		1194447						
ANR	1194878	Symbol	pc -> p2 . x		1194447						
ANR	1194879	Symbol	gx_path_close_subpath_notes		1194447						
ANR	1194880	Symbol	pc -> p2 . y		1194447						
ANR	1194881	Symbol	gs_debug_c		1194447						
ANR	1194882	Symbol	pc -> p2		1194447						
ANR	1194883	Symbol	gx_path_add_curve_notes		1194447						
ANR	1194884	Symbol	pc -> p1		1194447						
ANR	1194885	Symbol	gs_error_Fatal		1194447						
ANR	1194886	Symbol	ppath_old -> first_subpath		1194447						
ANR	1194887	Symbol	* psub		1194447						
ANR	1194888	Symbol	gx_path_add_line_notes		1194447						
ANR	1194889	Symbol	psub -> next		1194447						
ANR	1194890	Symbol	gx_path_add_point		1194447						
ANR	1194891	Symbol	ppath_old -> position		1194447						
ANR	1194892	Symbol	psub -> is_closed		1194447						
ANR	1194893	Symbol	* psub -> next		1194447						
ANR	1194894	Symbol	* pseg		1194447						
ANR	1194895	Symbol	* pc		1194447						
ANR	1194896	Symbol	* ppath_old		1194447						
ANR	1194897	Symbol	psub -> last		1194447						
ANR	1194898	Symbol	code		1194447						
ANR	1194899	Symbol	pseg -> notes		1194447						
ANR	1194900	Symbol	~sn_not_first		1194447						
ANR	1194901	Symbol	* prev		1194447						
ANR	1194902	Symbol	ppath		1194447						
ANR	1194903	Symbol	pseg		1194447						
ANR	1194904	Symbol	pseg -> type		1194447						
ANR	1194905	Symbol	prev_notes		1194447						
ANR	1194906	Symbol	ppath_old -> current_subpath		1194447						
ANR	1194907	Symbol	pseg -> prev		1194447						
ANR	1194908	Symbol	psub -> type		1194447						
ANR	1194909	Symbol	psub		1194447						
ANR	1194910	Symbol	prev -> pt		1194447						
ANR	1194911	Symbol	* * psub		1194447						
ANR	1194912	Symbol	path_last_is_moveto		1194447						
ANR	1194913	Symbol	psub -> prev		1194447						
ANR	1194914	Symbol	psub -> next -> notes		1194447						
ANR	1194915	Symbol	pc		1194447						
ANR	1194916	Symbol	ppath_old		1194447						
ANR	1194917	Symbol	prev -> pt . x		1194447						
ANR	1194918	Symbol	prev -> pt . y		1194447						
ANR	1194919	Symbol	sn_not_first		1194447						
ANR	1194920	Symbol	ppath_old -> position . x		1194447						
ANR	1194921	Symbol	ppath_old -> position . y		1194447						
ANR	1194922	Function	gx_path_append_reversed	503:0:15905:19585							
ANR	1194923	FunctionDef	"gx_path_append_reversed (const gx_path * ppath_old , gx_path * ppath)"		1194922	0					
ANR	1194924	CompoundStatement		505:0:15977:19585	1194922	0					
ANR	1194925	IdentifierDeclStatement	const subpath * psub = ppath_old -> current_subpath ;	506:4:15983:16031	1194922	0	True				
ANR	1194926	IdentifierDecl	* psub = ppath_old -> current_subpath		1194922	0					
ANR	1194927	IdentifierDeclType	const subpath *		1194922	0					
ANR	1194928	Identifier	psub		1194922	1					
ANR	1194929	AssignmentExpression	* psub = ppath_old -> current_subpath		1194922	2		=			
ANR	1194930	Identifier	psub		1194922	0					
ANR	1194931	PtrMemberAccess	ppath_old -> current_subpath		1194922	1					
ANR	1194932	Identifier	ppath_old		1194922	0					
ANR	1194933	Identifier	current_subpath		1194922	1					
ANR	1194934	IfStatement	if ( gs_debug_c ( 'P' ) )		1194922	1					
ANR	1194935	Condition	gs_debug_c ( 'P' )	509:8:16055:16069	1194922	0	True				
ANR	1194936	CallExpression	gs_debug_c ( 'P' )		1194922	0					
ANR	1194937	Callee	gs_debug_c		1194922	0					
ANR	1194938	Identifier	gs_debug_c		1194922	0					
ANR	1194939	ArgumentList	'P'		1194922	1					
ANR	1194940	Argument	'P'		1194922	0					
ANR	1194941	PrimaryExpression	'P'		1194922	0					
ANR	1194942	ExpressionStatement	"gx_dump_path ( ppath_old , ""before reversepath"" )"	510:8:16080:16125	1194922	1	True				
ANR	1194943	CallExpression	"gx_dump_path ( ppath_old , ""before reversepath"" )"		1194922	0					
ANR	1194944	Callee	gx_dump_path		1194922	0					
ANR	1194945	Identifier	gx_dump_path		1194922	0					
ANR	1194946	ArgumentList	ppath_old		1194922	1					
ANR	1194947	Argument	ppath_old		1194922	0					
ANR	1194948	Identifier	ppath_old		1194922	0					
ANR	1194949	Argument	"""before reversepath"""		1194922	1					
ANR	1194950	PrimaryExpression	"""before reversepath"""		1194922	0					
ANR	1194951	Label	nsp :	512:1:16135:16138	1194922	2	True				
ANR	1194952	Identifier	nsp		1194922	0					
ANR	1194953	IfStatement	if ( psub )		1194922	3					
ANR	1194954	Condition	psub	513:8:16148:16151	1194922	0	True				
ANR	1194955	Identifier	psub		1194922	0					
ANR	1194956	CompoundStatement		16:8:409:417	1194922	1					
ANR	1194957	IdentifierDeclStatement	const segment * prev = psub -> last ;	514:8:16164:16196	1194922	0	True				
ANR	1194958	IdentifierDecl	* prev = psub -> last		1194922	0					
ANR	1194959	IdentifierDeclType	const segment *		1194922	0					
ANR	1194960	Identifier	prev		1194922	1					
ANR	1194961	AssignmentExpression	* prev = psub -> last		1194922	2		=			
ANR	1194962	Identifier	prev		1194922	0					
ANR	1194963	PtrMemberAccess	psub -> last		1194922	1					
ANR	1194964	Identifier	psub		1194922	0					
ANR	1194965	Identifier	last		1194922	1					
ANR	1194966	IdentifierDeclStatement	const segment * pseg ;	515:8:16206:16225	1194922	1	True				
ANR	1194967	IdentifierDecl	* pseg		1194922	0					
ANR	1194968	IdentifierDeclType	const segment *		1194922	0					
ANR	1194969	Identifier	pseg		1194922	1					
ANR	1194970	IdentifierDeclStatement	segment_notes notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes ) ;	516:8:16235:16343	1194922	2	True				
ANR	1194971	IdentifierDecl	notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes )		1194922	0					
ANR	1194972	IdentifierDeclType	segment_notes		1194922	0					
ANR	1194973	Identifier	notes		1194922	1					
ANR	1194974	AssignmentExpression	notes = ( prev == ( const segment * ) psub ? sn_none : psub -> next -> notes )		1194922	2		=			
ANR	1194975	Identifier	notes		1194922	0					
ANR	1194976	ConditionalExpression	prev == ( const segment * ) psub ? sn_none : psub -> next -> notes		1194922	1					
ANR	1194977	Condition	prev == ( const segment * ) psub		1194922	0					
ANR	1194978	EqualityExpression	prev == ( const segment * ) psub		1194922	0		==			
ANR	1194979	Identifier	prev		1194922	0					
ANR	1194980	CastExpression	( const segment * ) psub		1194922	1					
ANR	1194981	CastTarget	const segment *		1194922	0					
ANR	1194982	Identifier	psub		1194922	1					
ANR	1194983	Identifier	sn_none		1194922	1					
ANR	1194984	PtrMemberAccess	psub -> next -> notes		1194922	2					
ANR	1194985	PtrMemberAccess	psub -> next		1194922	0					
ANR	1194986	Identifier	psub		1194922	0					
ANR	1194987	Identifier	next		1194922	1					
ANR	1194988	Identifier	notes		1194922	1					
ANR	1194989	IdentifierDeclStatement	segment_notes prev_notes ;	519:8:16353:16377	1194922	3	True				
ANR	1194990	IdentifierDecl	prev_notes		1194922	0					
ANR	1194991	IdentifierDeclType	segment_notes		1194922	0					
ANR	1194992	Identifier	prev_notes		1194922	1					
ANR	1194993	IdentifierDeclStatement	int code ;	520:8:16387:16395	1194922	4	True				
ANR	1194994	IdentifierDecl	code		1194922	0					
ANR	1194995	IdentifierDeclType	int		1194922	0					
ANR	1194996	Identifier	code		1194922	1					
ANR	1194997	IfStatement	if ( ! psub -> is_closed )		1194922	5					
ANR	1194998	Condition	! psub -> is_closed	522:12:16410:16425	1194922	0	True				
ANR	1194999	UnaryOperationExpression	! psub -> is_closed		1194922	0					
ANR	1195000	UnaryOperator	!		1194922	0					
ANR	1195001	PtrMemberAccess	psub -> is_closed		1194922	1					
ANR	1195002	Identifier	psub		1194922	0					
ANR	1195003	Identifier	is_closed		1194922	1					
ANR	1195004	CompoundStatement		18:30:450:450	1194922	1					
ANR	1195005	ExpressionStatement	"code = gx_path_add_line ( ppath , prev -> pt . x , prev -> pt . y )"	523:12:16442:16496	1194922	0	True				
ANR	1195006	AssignmentExpression	"code = gx_path_add_line ( ppath , prev -> pt . x , prev -> pt . y )"		1194922	0		=			
ANR	1195007	Identifier	code		1194922	0					
ANR	1195008	CallExpression	"gx_path_add_line ( ppath , prev -> pt . x , prev -> pt . y )"		1194922	1					
ANR	1195009	Callee	gx_path_add_line		1194922	0					
ANR	1195010	Identifier	gx_path_add_line		1194922	0					
ANR	1195011	ArgumentList	ppath		1194922	1					
ANR	1195012	Argument	ppath		1194922	0					
ANR	1195013	Identifier	ppath		1194922	0					
ANR	1195014	Argument	prev -> pt . x		1194922	1					
ANR	1195015	MemberAccess	prev -> pt . x		1194922	0					
ANR	1195016	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195017	Identifier	prev		1194922	0					
ANR	1195018	Identifier	pt		1194922	1					
ANR	1195019	Identifier	x		1194922	1					
ANR	1195020	Argument	prev -> pt . y		1194922	2					
ANR	1195021	MemberAccess	prev -> pt . y		1194922	0					
ANR	1195022	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195023	Identifier	prev		1194922	0					
ANR	1195024	Identifier	pt		1194922	1					
ANR	1195025	Identifier	y		1194922	1					
ANR	1195026	IfStatement	if ( code < 0 )		1194922	1					
ANR	1195027	Condition	code < 0	524:16:16514:16521	1194922	0	True				
ANR	1195028	RelationalExpression	code < 0		1194922	0		<			
ANR	1195029	Identifier	code		1194922	0					
ANR	1195030	PrimaryExpression	0		1194922	1					
ANR	1195031	ReturnStatement	return code ;	525:16:16540:16551	1194922	1	True				
ANR	1195032	Identifier	code		1194922	0					
ANR	1195033	DoStatement	do		1194922	6					
ANR	1195034	CompoundStatement		30:11:932:932	1194922	0					
ANR	1195035	ExpressionStatement	pseg = prev	535:12:16924:16935	1194922	0	True				
ANR	1195036	AssignmentExpression	pseg = prev		1194922	0		=			
ANR	1195037	Identifier	pseg		1194922	0					
ANR	1195038	Identifier	prev		1194922	1					
ANR	1195039	ExpressionStatement	prev_notes = notes	536:12:16949:16967	1194922	1	True				
ANR	1195040	AssignmentExpression	prev_notes = notes		1194922	0		=			
ANR	1195041	Identifier	prev_notes		1194922	0					
ANR	1195042	Identifier	notes		1194922	1					
ANR	1195043	ExpressionStatement	prev = pseg -> prev	537:12:16981:16998	1194922	2	True				
ANR	1195044	AssignmentExpression	prev = pseg -> prev		1194922	0		=			
ANR	1195045	Identifier	prev		1194922	0					
ANR	1195046	PtrMemberAccess	pseg -> prev		1194922	1					
ANR	1195047	Identifier	pseg		1194922	0					
ANR	1195048	Identifier	prev		1194922	1					
ANR	1195049	ExpressionStatement	notes = pseg -> notes	538:12:17012:17031	1194922	3	True				
ANR	1195050	AssignmentExpression	notes = pseg -> notes		1194922	0		=			
ANR	1195051	Identifier	notes		1194922	0					
ANR	1195052	PtrMemberAccess	pseg -> notes		1194922	1					
ANR	1195053	Identifier	pseg		1194922	0					
ANR	1195054	Identifier	notes		1194922	1					
ANR	1195055	ExpressionStatement	prev_notes = ( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )	539:12:17045:17127	1194922	4	True				
ANR	1195056	AssignmentExpression	prev_notes = ( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )		1194922	0		=			
ANR	1195057	Identifier	prev_notes		1194922	0					
ANR	1195058	InclusiveOrExpression	( prev_notes & sn_not_first ) | ( notes & ~sn_not_first )		1194922	1		|			
ANR	1195059	BitAndExpression	prev_notes & sn_not_first		1194922	0		&			
ANR	1195060	Identifier	prev_notes		1194922	0					
ANR	1195061	Identifier	sn_not_first		1194922	1					
ANR	1195062	BitAndExpression	notes & ~sn_not_first		1194922	1		&			
ANR	1195063	Identifier	notes		1194922	0					
ANR	1195064	Identifier	~sn_not_first		1194922	1					
ANR	1195065	SwitchStatement	switch ( pseg -> type )		1194922	5					
ANR	1195066	Condition	pseg -> type	541:20:17149:17158	1194922	0	True				
ANR	1195067	PtrMemberAccess	pseg -> type		1194922	0					
ANR	1195068	Identifier	pseg		1194922	0					
ANR	1195069	Identifier	type		1194922	1					
ANR	1195070	CompoundStatement		37:32:1183:1183	1194922	1					
ANR	1195071	Label	case s_start :	542:16:17179:17191	1194922	0	True				
ANR	1195072	Identifier	s_start		1194922	0					
ANR	1195073	IfStatement	if ( psub -> is_closed )		1194922	1					
ANR	1195074	Condition	psub -> is_closed	544:24:17260:17274	1194922	0	True				
ANR	1195075	PtrMemberAccess	psub -> is_closed		1194922	0					
ANR	1195076	Identifier	psub		1194922	0					
ANR	1195077	Identifier	is_closed		1194922	1					
ANR	1195078	CompoundStatement		40:41:1299:1299	1194922	1					
ANR	1195079	ExpressionStatement	"code = gx_path_close_subpath_notes ( ppath , prev_notes )"	545:24:17303:17384	1194922	0	True				
ANR	1195080	AssignmentExpression	"code = gx_path_close_subpath_notes ( ppath , prev_notes )"		1194922	0		=			
ANR	1195081	Identifier	code		1194922	0					
ANR	1195082	CallExpression	"gx_path_close_subpath_notes ( ppath , prev_notes )"		1194922	1					
ANR	1195083	Callee	gx_path_close_subpath_notes		1194922	0					
ANR	1195084	Identifier	gx_path_close_subpath_notes		1194922	0					
ANR	1195085	ArgumentList	ppath		1194922	1					
ANR	1195086	Argument	ppath		1194922	0					
ANR	1195087	Identifier	ppath		1194922	0					
ANR	1195088	Argument	prev_notes		1194922	1					
ANR	1195089	Identifier	prev_notes		1194922	0					
ANR	1195090	IfStatement	if ( code < 0 )		1194922	1					
ANR	1195091	Condition	code < 0	547:28:17414:17421	1194922	0	True				
ANR	1195092	RelationalExpression	code < 0		1194922	0		<			
ANR	1195093	Identifier	code		1194922	0					
ANR	1195094	PrimaryExpression	0		1194922	1					
ANR	1195095	ReturnStatement	return code ;	548:28:17452:17463	1194922	1	True				
ANR	1195096	Identifier	code		1194922	0					
ANR	1195097	DoStatement	do		1194922	2					
ANR	1195098	CompoundStatement		46:23:1532:1532	1194922	0					
ANR	1195099	ExpressionStatement	psub = ( const subpath * ) psub -> prev	551:24:17536:17570	1194922	0	True				
ANR	1195100	AssignmentExpression	psub = ( const subpath * ) psub -> prev		1194922	0		=			
ANR	1195101	Identifier	psub		1194922	0					
ANR	1195102	CastExpression	( const subpath * ) psub -> prev		1194922	1					
ANR	1195103	CastTarget	const subpath *		1194922	0					
ANR	1195104	PtrMemberAccess	psub -> prev		1194922	1					
ANR	1195105	Identifier	psub		1194922	0					
ANR	1195106	Identifier	prev		1194922	1					
ANR	1195107	Condition	psub && psub -> type != s_start	552:29:17601:17629	1194922	1	True				
ANR	1195108	AndExpression	psub && psub -> type != s_start		1194922	0		&&			
ANR	1195109	Identifier	psub		1194922	0					
ANR	1195110	EqualityExpression	psub -> type != s_start		1194922	1		!=			
ANR	1195111	PtrMemberAccess	psub -> type		1194922	0					
ANR	1195112	Identifier	psub		1194922	0					
ANR	1195113	Identifier	type		1194922	1					
ANR	1195114	Identifier	s_start		1194922	1					
ANR	1195115	GotoStatement	goto nsp ;	553:20:17653:17661	1194922	3	True				
ANR	1195116	Identifier	nsp		1194922	0					
ANR	1195117	Label	case s_curve :	554:16:17679:17691	1194922	4	True				
ANR	1195118	Identifier	s_curve		1194922	0					
ANR	1195119	CompoundStatement		52:24:1761:1838	1194922	5					
ANR	1195120	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	556:24:17739:17816	1194922	0	True				
ANR	1195121	IdentifierDecl	* pc = ( const curve_segment * ) pseg		1194922	0					
ANR	1195122	IdentifierDeclType	const curve_segment *		1194922	0					
ANR	1195123	Identifier	pc		1194922	1					
ANR	1195124	AssignmentExpression	* pc = ( const curve_segment * ) pseg		1194922	2		=			
ANR	1195125	Identifier	pc		1194922	0					
ANR	1195126	CastExpression	( const curve_segment * ) pseg		1194922	1					
ANR	1195127	CastTarget	const curve_segment *		1194922	0					
ANR	1195128	Identifier	pseg		1194922	1					
ANR	1195129	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"	559:24:17843:18106	1194922	1	True				
ANR	1195130	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	0		=			
ANR	1195131	Identifier	code		1194922	0					
ANR	1195132	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p2 . x , pc -> p2 . y , pc -> p1 . x , pc -> p1 . y , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	1					
ANR	1195133	Callee	gx_path_add_curve_notes		1194922	0					
ANR	1195134	Identifier	gx_path_add_curve_notes		1194922	0					
ANR	1195135	ArgumentList	ppath		1194922	1					
ANR	1195136	Argument	ppath		1194922	0					
ANR	1195137	Identifier	ppath		1194922	0					
ANR	1195138	Argument	pc -> p2 . x		1194922	1					
ANR	1195139	MemberAccess	pc -> p2 . x		1194922	0					
ANR	1195140	PtrMemberAccess	pc -> p2		1194922	0					
ANR	1195141	Identifier	pc		1194922	0					
ANR	1195142	Identifier	p2		1194922	1					
ANR	1195143	Identifier	x		1194922	1					
ANR	1195144	Argument	pc -> p2 . y		1194922	2					
ANR	1195145	MemberAccess	pc -> p2 . y		1194922	0					
ANR	1195146	PtrMemberAccess	pc -> p2		1194922	0					
ANR	1195147	Identifier	pc		1194922	0					
ANR	1195148	Identifier	p2		1194922	1					
ANR	1195149	Identifier	y		1194922	1					
ANR	1195150	Argument	pc -> p1 . x		1194922	3					
ANR	1195151	MemberAccess	pc -> p1 . x		1194922	0					
ANR	1195152	PtrMemberAccess	pc -> p1		1194922	0					
ANR	1195153	Identifier	pc		1194922	0					
ANR	1195154	Identifier	p1		1194922	1					
ANR	1195155	Identifier	x		1194922	1					
ANR	1195156	Argument	pc -> p1 . y		1194922	4					
ANR	1195157	MemberAccess	pc -> p1 . y		1194922	0					
ANR	1195158	PtrMemberAccess	pc -> p1		1194922	0					
ANR	1195159	Identifier	pc		1194922	0					
ANR	1195160	Identifier	p1		1194922	1					
ANR	1195161	Identifier	y		1194922	1					
ANR	1195162	Argument	prev -> pt . x		1194922	5					
ANR	1195163	MemberAccess	prev -> pt . x		1194922	0					
ANR	1195164	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195165	Identifier	prev		1194922	0					
ANR	1195166	Identifier	pt		1194922	1					
ANR	1195167	Identifier	x		1194922	1					
ANR	1195168	Argument	prev -> pt . y		1194922	6					
ANR	1195169	MemberAccess	prev -> pt . y		1194922	0					
ANR	1195170	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195171	Identifier	prev		1194922	0					
ANR	1195172	Identifier	pt		1194922	1					
ANR	1195173	Identifier	y		1194922	1					
ANR	1195174	Argument	prev_notes		1194922	7					
ANR	1195175	Identifier	prev_notes		1194922	0					
ANR	1195176	BreakStatement	break ;	563:24:18132:18137	1194922	2	True				
ANR	1195177	Label	case s_line :	565:16:18177:18188	1194922	6	True				
ANR	1195178	Identifier	s_line		1194922	0					
ANR	1195179	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"	566:20:18210:18322	1194922	7	True				
ANR	1195180	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	0		=			
ANR	1195181	Identifier	code		1194922	0					
ANR	1195182	CallExpression	"gx_path_add_line_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	1					
ANR	1195183	Callee	gx_path_add_line_notes		1194922	0					
ANR	1195184	Identifier	gx_path_add_line_notes		1194922	0					
ANR	1195185	ArgumentList	ppath		1194922	1					
ANR	1195186	Argument	ppath		1194922	0					
ANR	1195187	Identifier	ppath		1194922	0					
ANR	1195188	Argument	prev -> pt . x		1194922	1					
ANR	1195189	MemberAccess	prev -> pt . x		1194922	0					
ANR	1195190	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195191	Identifier	prev		1194922	0					
ANR	1195192	Identifier	pt		1194922	1					
ANR	1195193	Identifier	x		1194922	1					
ANR	1195194	Argument	prev -> pt . y		1194922	2					
ANR	1195195	MemberAccess	prev -> pt . y		1194922	0					
ANR	1195196	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195197	Identifier	prev		1194922	0					
ANR	1195198	Identifier	pt		1194922	1					
ANR	1195199	Identifier	y		1194922	1					
ANR	1195200	Argument	prev_notes		1194922	3					
ANR	1195201	Identifier	prev_notes		1194922	0					
ANR	1195202	BreakStatement	break ;	568:20:18344:18349	1194922	8	True				
ANR	1195203	Label	case s_gap :	569:16:18367:18377	1194922	9	True				
ANR	1195204	Identifier	s_gap		1194922	0					
ANR	1195205	ExpressionStatement	"code = gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"	570:20:18399:18510	1194922	10	True				
ANR	1195206	AssignmentExpression	"code = gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	0		=			
ANR	1195207	Identifier	code		1194922	0					
ANR	1195208	CallExpression	"gx_path_add_gap_notes ( ppath , prev -> pt . x , prev -> pt . y , prev_notes )"		1194922	1					
ANR	1195209	Callee	gx_path_add_gap_notes		1194922	0					
ANR	1195210	Identifier	gx_path_add_gap_notes		1194922	0					
ANR	1195211	ArgumentList	ppath		1194922	1					
ANR	1195212	Argument	ppath		1194922	0					
ANR	1195213	Identifier	ppath		1194922	0					
ANR	1195214	Argument	prev -> pt . x		1194922	1					
ANR	1195215	MemberAccess	prev -> pt . x		1194922	0					
ANR	1195216	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195217	Identifier	prev		1194922	0					
ANR	1195218	Identifier	pt		1194922	1					
ANR	1195219	Identifier	x		1194922	1					
ANR	1195220	Argument	prev -> pt . y		1194922	2					
ANR	1195221	MemberAccess	prev -> pt . y		1194922	0					
ANR	1195222	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195223	Identifier	prev		1194922	0					
ANR	1195224	Identifier	pt		1194922	1					
ANR	1195225	Identifier	y		1194922	1					
ANR	1195226	Argument	prev_notes		1194922	3					
ANR	1195227	Identifier	prev_notes		1194922	0					
ANR	1195228	BreakStatement	break ;	572:20:18532:18537	1194922	11	True				
ANR	1195229	Label	case s_line_close :	573:16:18555:18572	1194922	12	True				
ANR	1195230	Identifier	s_line_close		1194922	0					
ANR	1195231	ExpressionStatement	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"	575:20:18643:18743	1194922	13	True				
ANR	1195232	AssignmentExpression	"code = gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194922	0		=			
ANR	1195233	Identifier	code		1194922	0					
ANR	1195234	CallExpression	"gx_path_add_point ( ppath , prev -> pt . x , prev -> pt . y )"		1194922	1					
ANR	1195235	Callee	gx_path_add_point		1194922	0					
ANR	1195236	Identifier	gx_path_add_point		1194922	0					
ANR	1195237	ArgumentList	ppath		1194922	1					
ANR	1195238	Argument	ppath		1194922	0					
ANR	1195239	Identifier	ppath		1194922	0					
ANR	1195240	Argument	prev -> pt . x		1194922	1					
ANR	1195241	MemberAccess	prev -> pt . x		1194922	0					
ANR	1195242	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195243	Identifier	prev		1194922	0					
ANR	1195244	Identifier	pt		1194922	1					
ANR	1195245	Identifier	x		1194922	1					
ANR	1195246	Argument	prev -> pt . y		1194922	2					
ANR	1195247	MemberAccess	prev -> pt . y		1194922	0					
ANR	1195248	PtrMemberAccess	prev -> pt		1194922	0					
ANR	1195249	Identifier	prev		1194922	0					
ANR	1195250	Identifier	pt		1194922	1					
ANR	1195251	Identifier	y		1194922	1					
ANR	1195252	BreakStatement	break ;	577:20:18765:18770	1194922	14	True				
ANR	1195253	Label	default :	578:16:18788:18795	1194922	15	True				
ANR	1195254	Identifier	default		1194922	0					
ANR	1195255	ExpressionStatement	return_error ( gs_error_Fatal )	579:20:18836:18864	1194922	16	True				
ANR	1195256	CallExpression	return_error ( gs_error_Fatal )		1194922	0					
ANR	1195257	Callee	return_error		1194922	0					
ANR	1195258	Identifier	return_error		1194922	0					
ANR	1195259	ArgumentList	gs_error_Fatal		1194922	1					
ANR	1195260	Argument	gs_error_Fatal		1194922	0					
ANR	1195261	Identifier	gs_error_Fatal		1194922	0					
ANR	1195262	Condition	code >= 0	581:17:18897:18905	1194922	1	True				
ANR	1195263	RelationalExpression	code >= 0		1194922	0		>=			
ANR	1195264	Identifier	code		1194922	0					
ANR	1195265	PrimaryExpression	0		1194922	1					
ANR	1195266	ReturnStatement	return code ;	582:8:18917:18928	1194922	7	True				
ANR	1195267	Identifier	code		1194922	0					
ANR	1195268	Statement	undef	584:1:18969:18973	1194922	4	True				
ANR	1195269	Statement	sn_not_end	584:7:18975:18984	1194922	5	True				
ANR	1195270	IfStatement	if ( ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old ) )		1194922	6					
ANR	1195271	Condition	ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old )	590:8:19210:19280	1194922	0	True				
ANR	1195272	AndExpression	ppath_old -> first_subpath == 0 && path_last_is_moveto ( ppath_old )		1194922	0		&&			
ANR	1195273	EqualityExpression	ppath_old -> first_subpath == 0		1194922	0		==			
ANR	1195274	PtrMemberAccess	ppath_old -> first_subpath		1194922	0					
ANR	1195275	Identifier	ppath_old		1194922	0					
ANR	1195276	Identifier	first_subpath		1194922	1					
ANR	1195277	PrimaryExpression	0		1194922	1					
ANR	1195278	CallExpression	path_last_is_moveto ( ppath_old )		1194922	1					
ANR	1195279	Callee	path_last_is_moveto		1194922	0					
ANR	1195280	Identifier	path_last_is_moveto		1194922	0					
ANR	1195281	ArgumentList	ppath_old		1194922	1					
ANR	1195282	Argument	ppath_old		1194922	0					
ANR	1195283	Identifier	ppath_old		1194922	0					
ANR	1195284	CompoundStatement		89:8:3324:3442	1194922	1					
ANR	1195285	IdentifierDeclStatement	"int code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y ) ;"	593:8:19302:19420	1194922	0	True				
ANR	1195286	IdentifierDecl	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194922	0					
ANR	1195287	IdentifierDeclType	int		1194922	0					
ANR	1195288	Identifier	code		1194922	1					
ANR	1195289	AssignmentExpression	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194922	2		=			
ANR	1195290	Identifier	code		1194922	0					
ANR	1195291	CallExpression	"gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1194922	1					
ANR	1195292	Callee	gx_path_add_point		1194922	0					
ANR	1195293	Identifier	gx_path_add_point		1194922	0					
ANR	1195294	ArgumentList	ppath		1194922	1					
ANR	1195295	Argument	ppath		1194922	0					
ANR	1195296	Identifier	ppath		1194922	0					
ANR	1195297	Argument	ppath_old -> position . x		1194922	1					
ANR	1195298	MemberAccess	ppath_old -> position . x		1194922	0					
ANR	1195299	PtrMemberAccess	ppath_old -> position		1194922	0					
ANR	1195300	Identifier	ppath_old		1194922	0					
ANR	1195301	Identifier	position		1194922	1					
ANR	1195302	Identifier	x		1194922	1					
ANR	1195303	Argument	ppath_old -> position . y		1194922	2					
ANR	1195304	MemberAccess	ppath_old -> position . y		1194922	0					
ANR	1195305	PtrMemberAccess	ppath_old -> position		1194922	0					
ANR	1195306	Identifier	ppath_old		1194922	0					
ANR	1195307	Identifier	position		1194922	1					
ANR	1195308	Identifier	y		1194922	1					
ANR	1195309	IfStatement	if ( code < 0 )		1194922	1					
ANR	1195310	Condition	code < 0	596:12:19435:19442	1194922	0	True				
ANR	1195311	RelationalExpression	code < 0		1194922	0		<			
ANR	1195312	Identifier	code		1194922	0					
ANR	1195313	PrimaryExpression	0		1194922	1					
ANR	1195314	ReturnStatement	return code ;	597:12:19457:19468	1194922	1	True				
ANR	1195315	Identifier	code		1194922	0					
ANR	1195316	IfStatement	if ( gs_debug_c ( 'P' ) )		1194922	7					
ANR	1195317	Condition	gs_debug_c ( 'P' )	600:8:19497:19511	1194922	0	True				
ANR	1195318	CallExpression	gs_debug_c ( 'P' )		1194922	0					
ANR	1195319	Callee	gs_debug_c		1194922	0					
ANR	1195320	Identifier	gs_debug_c		1194922	0					
ANR	1195321	ArgumentList	'P'		1194922	1					
ANR	1195322	Argument	'P'		1194922	0					
ANR	1195323	PrimaryExpression	'P'		1194922	0					
ANR	1195324	ExpressionStatement	"gx_dump_path ( ppath , ""after reversepath"" )"	601:8:19522:19562	1194922	1	True				
ANR	1195325	CallExpression	"gx_dump_path ( ppath , ""after reversepath"" )"		1194922	0					
ANR	1195326	Callee	gx_dump_path		1194922	0					
ANR	1195327	Identifier	gx_dump_path		1194922	0					
ANR	1195328	ArgumentList	ppath		1194922	1					
ANR	1195329	Argument	ppath		1194922	0					
ANR	1195330	Identifier	ppath		1194922	0					
ANR	1195331	Argument	"""after reversepath"""		1194922	1					
ANR	1195332	PrimaryExpression	"""after reversepath"""		1194922	0					
ANR	1195333	ReturnStatement	return 0 ;	603:4:19575:19583	1194922	8	True				
ANR	1195334	PrimaryExpression	0		1194922	0					
ANR	1195335	ReturnType	int		1194922	1					
ANR	1195336	Identifier	gx_path_append_reversed		1194922	2					
ANR	1195337	ParameterList	"const gx_path * ppath_old , gx_path * ppath"		1194922	3					
ANR	1195338	Parameter	const gx_path * ppath_old	504:24:15933:15957	1194922	0	True				
ANR	1195339	ParameterType	const gx_path *		1194922	0					
ANR	1195340	Identifier	ppath_old		1194922	1					
ANR	1195341	Parameter	gx_path * ppath	504:51:15960:15974	1194922	1	True				
ANR	1195342	ParameterType	gx_path *		1194922	0					
ANR	1195343	Identifier	ppath		1194922	1					
ANR	1195344	CFGEntryNode	ENTRY		1194922		True				
ANR	1195345	CFGExitNode	EXIT		1194922		True				
ANR	1195346	Symbol	gx_path_add_gap_notes		1194922						
ANR	1195347	Symbol	notes		1194922						
ANR	1195348	Symbol	s_start		1194922						
ANR	1195349	Symbol	pc -> p1 . y		1194922						
ANR	1195350	Symbol	pc -> p1 . x		1194922						
ANR	1195351	Symbol	prev		1194922						
ANR	1195352	Symbol	sn_none		1194922						
ANR	1195353	Symbol	pc -> p2 . x		1194922						
ANR	1195354	Symbol	gx_path_close_subpath_notes		1194922						
ANR	1195355	Symbol	pc -> p2 . y		1194922						
ANR	1195356	Symbol	gs_debug_c		1194922						
ANR	1195357	Symbol	pc -> p2		1194922						
ANR	1195358	Symbol	gx_path_add_curve_notes		1194922						
ANR	1195359	Symbol	pc -> p1		1194922						
ANR	1195360	Symbol	gs_error_Fatal		1194922						
ANR	1195361	Symbol	ppath_old -> first_subpath		1194922						
ANR	1195362	Symbol	* psub		1194922						
ANR	1195363	Symbol	gx_path_add_line_notes		1194922						
ANR	1195364	Symbol	psub -> next		1194922						
ANR	1195365	Symbol	gx_path_add_point		1194922						
ANR	1195366	Symbol	ppath_old -> position		1194922						
ANR	1195367	Symbol	psub -> is_closed		1194922						
ANR	1195368	Symbol	* psub -> next		1194922						
ANR	1195369	Symbol	* pseg		1194922						
ANR	1195370	Symbol	* pc		1194922						
ANR	1195371	Symbol	* ppath_old		1194922						
ANR	1195372	Symbol	psub -> last		1194922						
ANR	1195373	Symbol	code		1194922						
ANR	1195374	Symbol	pseg -> notes		1194922						
ANR	1195375	Symbol	~sn_not_first		1194922						
ANR	1195376	Symbol	* prev		1194922						
ANR	1195377	Symbol	ppath		1194922						
ANR	1195378	Symbol	pseg		1194922						
ANR	1195379	Symbol	pseg -> type		1194922						
ANR	1195380	Symbol	prev_notes		1194922						
ANR	1195381	Symbol	ppath_old -> current_subpath		1194922						
ANR	1195382	Symbol	pseg -> prev		1194922						
ANR	1195383	Symbol	psub -> type		1194922						
ANR	1195384	Symbol	psub		1194922						
ANR	1195385	Symbol	prev -> pt		1194922						
ANR	1195386	Symbol	* * psub		1194922						
ANR	1195387	Symbol	path_last_is_moveto		1194922						
ANR	1195388	Symbol	psub -> prev		1194922						
ANR	1195389	Symbol	psub -> next -> notes		1194922						
ANR	1195390	Symbol	pc		1194922						
ANR	1195391	Symbol	ppath_old		1194922						
ANR	1195392	Symbol	prev -> pt . x		1194922						
ANR	1195393	Symbol	prev -> pt . y		1194922						
ANR	1195394	Symbol	gx_path_add_line		1194922						
ANR	1195395	Symbol	sn_not_first		1194922						
ANR	1195396	Symbol	ppath_old -> position . x		1194922						
ANR	1195397	Symbol	ppath_old -> position . y		1194922						
ANR	1195398	Function	gs_path_enum_alloc	609:0:19660:19805							
ANR	1195399	FunctionDef	"gs_path_enum_alloc (gs_memory_t * mem , client_name_t cname)"		1195398	0					
ANR	1195400	CompoundStatement		611:0:19734:19805	1195398	0					
ANR	1195401	ReturnStatement	"return gs_alloc_struct ( mem , gs_path_enum , & st_path_enum , cname ) ;"	612:4:19740:19803	1195398	0	True				
ANR	1195402	CallExpression	"gs_alloc_struct ( mem , gs_path_enum , & st_path_enum , cname )"		1195398	0					
ANR	1195403	Callee	gs_alloc_struct		1195398	0					
ANR	1195404	Identifier	gs_alloc_struct		1195398	0					
ANR	1195405	ArgumentList	mem		1195398	1					
ANR	1195406	Argument	mem		1195398	0					
ANR	1195407	Identifier	mem		1195398	0					
ANR	1195408	Argument	gs_path_enum		1195398	1					
ANR	1195409	Identifier	gs_path_enum		1195398	0					
ANR	1195410	Argument	& st_path_enum		1195398	2					
ANR	1195411	UnaryOperationExpression	& st_path_enum		1195398	0					
ANR	1195412	UnaryOperator	&		1195398	0					
ANR	1195413	Identifier	st_path_enum		1195398	1					
ANR	1195414	Argument	cname		1195398	3					
ANR	1195415	Identifier	cname		1195398	0					
ANR	1195416	ReturnType	gs_path_enum *		1195398	1					
ANR	1195417	Identifier	gs_path_enum_alloc		1195398	2					
ANR	1195418	ParameterList	"gs_memory_t * mem , client_name_t cname"		1195398	3					
ANR	1195419	Parameter	gs_memory_t * mem	610:19:19694:19710	1195398	0	True				
ANR	1195420	ParameterType	gs_memory_t *		1195398	0					
ANR	1195421	Identifier	mem		1195398	1					
ANR	1195422	Parameter	client_name_t cname	610:38:19713:19731	1195398	1	True				
ANR	1195423	ParameterType	client_name_t		1195398	0					
ANR	1195424	Identifier	cname		1195398	1					
ANR	1195425	CFGEntryNode	ENTRY		1195398		True				
ANR	1195426	CFGExitNode	EXIT		1195398		True				
ANR	1195427	Symbol	mem		1195398						
ANR	1195428	Symbol	& st_path_enum		1195398						
ANR	1195429	Symbol	gs_path_enum		1195398						
ANR	1195430	Symbol	gs_alloc_struct		1195398						
ANR	1195431	Symbol	cname		1195398						
ANR	1195432	Function	gx_path_enum_init	616:0:19840:20156							
ANR	1195433	FunctionDef	"gx_path_enum_init (gs_path_enum * penum , const gx_path * ppath)"		1195432	0					
ANR	1195434	CompoundStatement		618:0:19907:20156	1195432	0					
ANR	1195435	ExpressionStatement	penum -> memory = 0	619:4:19913:19930	1195432	0	True				
ANR	1195436	AssignmentExpression	penum -> memory = 0		1195432	0		=			
ANR	1195437	PtrMemberAccess	penum -> memory		1195432	0					
ANR	1195438	Identifier	penum		1195432	0					
ANR	1195439	Identifier	memory		1195432	1					
ANR	1195440	PrimaryExpression	0		1195432	1					
ANR	1195441	ExpressionStatement	penum -> path = ppath	620:4:19959:19978	1195432	1	True				
ANR	1195442	AssignmentExpression	penum -> path = ppath		1195432	0		=			
ANR	1195443	PtrMemberAccess	penum -> path		1195432	0					
ANR	1195444	Identifier	penum		1195432	0					
ANR	1195445	Identifier	path		1195432	1					
ANR	1195446	Identifier	ppath		1195432	1					
ANR	1195447	ExpressionStatement	penum -> copied_path = 0	621:4:19984:20006	1195432	2	True				
ANR	1195448	AssignmentExpression	penum -> copied_path = 0		1195432	0		=			
ANR	1195449	PtrMemberAccess	penum -> copied_path		1195432	0					
ANR	1195450	Identifier	penum		1195432	0					
ANR	1195451	Identifier	copied_path		1195432	1					
ANR	1195452	PrimaryExpression	0		1195432	1					
ANR	1195453	ExpressionStatement	penum -> pseg = ( const segment * ) ppath -> first_subpath	622:4:20029:20080	1195432	3	True				
ANR	1195454	AssignmentExpression	penum -> pseg = ( const segment * ) ppath -> first_subpath		1195432	0		=			
ANR	1195455	PtrMemberAccess	penum -> pseg		1195432	0					
ANR	1195456	Identifier	penum		1195432	0					
ANR	1195457	Identifier	pseg		1195432	1					
ANR	1195458	CastExpression	( const segment * ) ppath -> first_subpath		1195432	1					
ANR	1195459	CastTarget	const segment *		1195432	0					
ANR	1195460	PtrMemberAccess	ppath -> first_subpath		1195432	1					
ANR	1195461	Identifier	ppath		1195432	0					
ANR	1195462	Identifier	first_subpath		1195432	1					
ANR	1195463	ExpressionStatement	penum -> moveto_done = false	623:4:20086:20112	1195432	4	True				
ANR	1195464	AssignmentExpression	penum -> moveto_done = false		1195432	0		=			
ANR	1195465	PtrMemberAccess	penum -> moveto_done		1195432	0					
ANR	1195466	Identifier	penum		1195432	0					
ANR	1195467	Identifier	moveto_done		1195432	1					
ANR	1195468	Identifier	false		1195432	1					
ANR	1195469	ExpressionStatement	penum -> notes = sn_none	624:4:20118:20140	1195432	5	True				
ANR	1195470	AssignmentExpression	penum -> notes = sn_none		1195432	0		=			
ANR	1195471	PtrMemberAccess	penum -> notes		1195432	0					
ANR	1195472	Identifier	penum		1195432	0					
ANR	1195473	Identifier	notes		1195432	1					
ANR	1195474	Identifier	sn_none		1195432	1					
ANR	1195475	ReturnStatement	return 0 ;	625:4:20146:20154	1195432	6	True				
ANR	1195476	PrimaryExpression	0		1195432	0					
ANR	1195477	ReturnType	int		1195432	1					
ANR	1195478	Identifier	gx_path_enum_init		1195432	2					
ANR	1195479	ParameterList	"gs_path_enum * penum , const gx_path * ppath"		1195432	3					
ANR	1195480	Parameter	gs_path_enum * penum	617:18:19862:19881	1195432	0	True				
ANR	1195481	ParameterType	gs_path_enum *		1195432	0					
ANR	1195482	Identifier	penum		1195432	1					
ANR	1195483	Parameter	const gx_path * ppath	617:40:19884:19904	1195432	1	True				
ANR	1195484	ParameterType	const gx_path *		1195432	0					
ANR	1195485	Identifier	ppath		1195432	1					
ANR	1195486	CFGEntryNode	ENTRY		1195432		True				
ANR	1195487	CFGExitNode	EXIT		1195432		True				
ANR	1195488	Symbol	* ppath		1195432						
ANR	1195489	Symbol	* penum		1195432						
ANR	1195490	Symbol	penum -> memory		1195432						
ANR	1195491	Symbol	penum -> path		1195432						
ANR	1195492	Symbol	penum -> pseg		1195432						
ANR	1195493	Symbol	penum		1195432						
ANR	1195494	Symbol	false		1195432						
ANR	1195495	Symbol	ppath		1195432						
ANR	1195496	Symbol	penum -> copied_path		1195432						
ANR	1195497	Symbol	ppath -> first_subpath		1195432						
ANR	1195498	Symbol	sn_none		1195432						
ANR	1195499	Symbol	penum -> moveto_done		1195432						
ANR	1195500	Symbol	penum -> notes		1195432						
ANR	1195501	Function	gx_path_enum_next	631:0:20286:21622							
ANR	1195502	FunctionDef	"gx_path_enum_next (gs_path_enum * penum , gs_fixed_point ppts [ 3 ])"		1195501	0					
ANR	1195503	CompoundStatement		633:0:20354:21622	1195501	0					
ANR	1195504	IdentifierDeclStatement	const segment * pseg = penum -> pseg ;	634:4:20360:20393	1195501	0	True				
ANR	1195505	IdentifierDecl	* pseg = penum -> pseg		1195501	0					
ANR	1195506	IdentifierDeclType	const segment *		1195501	0					
ANR	1195507	Identifier	pseg		1195501	1					
ANR	1195508	AssignmentExpression	* pseg = penum -> pseg		1195501	2		=			
ANR	1195509	Identifier	pseg		1195501	0					
ANR	1195510	PtrMemberAccess	penum -> pseg		1195501	1					
ANR	1195511	Identifier	penum		1195501	0					
ANR	1195512	Identifier	pseg		1195501	1					
ANR	1195513	IfStatement	if ( pseg == 0 )		1195501	1					
ANR	1195514	Condition	pseg == 0	636:8:20404:20412	1195501	0	True				
ANR	1195515	EqualityExpression	pseg == 0		1195501	0		==			
ANR	1195516	Identifier	pseg		1195501	0					
ANR	1195517	PrimaryExpression	0		1195501	1					
ANR	1195518	CompoundStatement		6:8:164:198	1195501	1					
ANR	1195519	IdentifierDeclStatement	const gx_path * ppath = penum -> path ;	638:8:20519:20553	1195501	0	True				
ANR	1195520	IdentifierDecl	* ppath = penum -> path		1195501	0					
ANR	1195521	IdentifierDeclType	const gx_path *		1195501	0					
ANR	1195522	Identifier	ppath		1195501	1					
ANR	1195523	AssignmentExpression	* ppath = penum -> path		1195501	2		=			
ANR	1195524	Identifier	ppath		1195501	0					
ANR	1195525	PtrMemberAccess	penum -> path		1195501	1					
ANR	1195526	Identifier	penum		1195501	0					
ANR	1195527	Identifier	path		1195501	1					
ANR	1195528	IfStatement	if ( path_last_is_moveto ( ppath ) && ! penum -> moveto_done )		1195501	1					
ANR	1195529	Condition	path_last_is_moveto ( ppath ) && ! penum -> moveto_done	640:12:20568:20616	1195501	0	True				
ANR	1195530	AndExpression	path_last_is_moveto ( ppath ) && ! penum -> moveto_done		1195501	0		&&			
ANR	1195531	CallExpression	path_last_is_moveto ( ppath )		1195501	0					
ANR	1195532	Callee	path_last_is_moveto		1195501	0					
ANR	1195533	Identifier	path_last_is_moveto		1195501	0					
ANR	1195534	ArgumentList	ppath		1195501	1					
ANR	1195535	Argument	ppath		1195501	0					
ANR	1195536	Identifier	ppath		1195501	0					
ANR	1195537	UnaryOperationExpression	! penum -> moveto_done		1195501	1					
ANR	1195538	UnaryOperator	!		1195501	0					
ANR	1195539	PtrMemberAccess	penum -> moveto_done		1195501	1					
ANR	1195540	Identifier	penum		1195501	0					
ANR	1195541	Identifier	moveto_done		1195501	1					
ANR	1195542	CompoundStatement		8:63:264:264	1195501	1					
ANR	1195543	ExpressionStatement	penum -> moveto_done = true	641:12:20664:20689	1195501	0	True				
ANR	1195544	AssignmentExpression	penum -> moveto_done = true		1195501	0		=			
ANR	1195545	PtrMemberAccess	penum -> moveto_done		1195501	0					
ANR	1195546	Identifier	penum		1195501	0					
ANR	1195547	Identifier	moveto_done		1195501	1					
ANR	1195548	Identifier	true		1195501	1					
ANR	1195549	ExpressionStatement	penum -> notes = sn_none	642:12:20703:20725	1195501	1	True				
ANR	1195550	AssignmentExpression	penum -> notes = sn_none		1195501	0		=			
ANR	1195551	PtrMemberAccess	penum -> notes		1195501	0					
ANR	1195552	Identifier	penum		1195501	0					
ANR	1195553	Identifier	notes		1195501	1					
ANR	1195554	Identifier	sn_none		1195501	1					
ANR	1195555	ExpressionStatement	ppts [ 0 ] = ppath -> position	643:12:20739:20764	1195501	2	True				
ANR	1195556	AssignmentExpression	ppts [ 0 ] = ppath -> position		1195501	0		=			
ANR	1195557	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195558	Identifier	ppts		1195501	0					
ANR	1195559	PrimaryExpression	0		1195501	1					
ANR	1195560	PtrMemberAccess	ppath -> position		1195501	1					
ANR	1195561	Identifier	ppath		1195501	0					
ANR	1195562	Identifier	position		1195501	1					
ANR	1195563	ReturnStatement	return gs_pe_moveto ;	644:12:20778:20797	1195501	3	True				
ANR	1195564	Identifier	gs_pe_moveto		1195501	0					
ANR	1195565	ReturnStatement	return 0 ;	646:8:20817:20825	1195501	2	True				
ANR	1195566	PrimaryExpression	0		1195501	0					
ANR	1195567	ExpressionStatement	penum -> pseg = pseg -> next	648:4:20837:20861	1195501	2	True				
ANR	1195568	AssignmentExpression	penum -> pseg = pseg -> next		1195501	0		=			
ANR	1195569	PtrMemberAccess	penum -> pseg		1195501	0					
ANR	1195570	Identifier	penum		1195501	0					
ANR	1195571	Identifier	pseg		1195501	1					
ANR	1195572	PtrMemberAccess	pseg -> next		1195501	1					
ANR	1195573	Identifier	pseg		1195501	0					
ANR	1195574	Identifier	next		1195501	1					
ANR	1195575	ExpressionStatement	penum -> notes = pseg -> notes	649:4:20867:20893	1195501	3	True				
ANR	1195576	AssignmentExpression	penum -> notes = pseg -> notes		1195501	0		=			
ANR	1195577	PtrMemberAccess	penum -> notes		1195501	0					
ANR	1195578	Identifier	penum		1195501	0					
ANR	1195579	Identifier	notes		1195501	1					
ANR	1195580	PtrMemberAccess	pseg -> notes		1195501	1					
ANR	1195581	Identifier	pseg		1195501	0					
ANR	1195582	Identifier	notes		1195501	1					
ANR	1195583	SwitchStatement	switch ( pseg -> type )		1195501	4					
ANR	1195584	Condition	pseg -> type	650:12:20907:20916	1195501	0	True				
ANR	1195585	PtrMemberAccess	pseg -> type		1195501	0					
ANR	1195586	Identifier	pseg		1195501	0					
ANR	1195587	Identifier	type		1195501	1					
ANR	1195588	CompoundStatement		18:24:564:564	1195501	1					
ANR	1195589	Label	case s_start :	651:8:20929:20941	1195501	0	True				
ANR	1195590	Identifier	s_start		1195501	0					
ANR	1195591	ExpressionStatement	ppts [ 0 ] = pseg -> pt	652:12:20955:20973	1195501	1	True				
ANR	1195592	AssignmentExpression	ppts [ 0 ] = pseg -> pt		1195501	0		=			
ANR	1195593	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195594	Identifier	ppts		1195501	0					
ANR	1195595	PrimaryExpression	0		1195501	1					
ANR	1195596	PtrMemberAccess	pseg -> pt		1195501	1					
ANR	1195597	Identifier	pseg		1195501	0					
ANR	1195598	Identifier	pt		1195501	1					
ANR	1195599	ReturnStatement	return gs_pe_moveto ;	653:12:20987:21006	1195501	2	True				
ANR	1195600	Identifier	gs_pe_moveto		1195501	0					
ANR	1195601	Label	case s_line :	654:8:21016:21027	1195501	3	True				
ANR	1195602	Identifier	s_line		1195501	0					
ANR	1195603	ExpressionStatement	ppts [ 0 ] = pseg -> pt	655:12:21041:21059	1195501	4	True				
ANR	1195604	AssignmentExpression	ppts [ 0 ] = pseg -> pt		1195501	0		=			
ANR	1195605	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195606	Identifier	ppts		1195501	0					
ANR	1195607	PrimaryExpression	0		1195501	1					
ANR	1195608	PtrMemberAccess	pseg -> pt		1195501	1					
ANR	1195609	Identifier	pseg		1195501	0					
ANR	1195610	Identifier	pt		1195501	1					
ANR	1195611	ReturnStatement	return gs_pe_lineto ;	656:12:21073:21092	1195501	5	True				
ANR	1195612	Identifier	gs_pe_lineto		1195501	0					
ANR	1195613	Label	case s_gap :	657:8:21102:21112	1195501	6	True				
ANR	1195614	Identifier	s_gap		1195501	0					
ANR	1195615	ExpressionStatement	ppts [ 0 ] = pseg -> pt	658:12:21126:21144	1195501	7	True				
ANR	1195616	AssignmentExpression	ppts [ 0 ] = pseg -> pt		1195501	0		=			
ANR	1195617	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195618	Identifier	ppts		1195501	0					
ANR	1195619	PrimaryExpression	0		1195501	1					
ANR	1195620	PtrMemberAccess	pseg -> pt		1195501	1					
ANR	1195621	Identifier	pseg		1195501	0					
ANR	1195622	Identifier	pt		1195501	1					
ANR	1195623	ReturnStatement	return gs_pe_gapto ;	659:12:21158:21176	1195501	8	True				
ANR	1195624	Identifier	gs_pe_gapto		1195501	0					
ANR	1195625	Label	case s_line_close :	660:8:21186:21203	1195501	9	True				
ANR	1195626	Identifier	s_line_close		1195501	0					
ANR	1195627	ExpressionStatement	ppts [ 0 ] = pseg -> pt	661:12:21217:21235	1195501	10	True				
ANR	1195628	AssignmentExpression	ppts [ 0 ] = pseg -> pt		1195501	0		=			
ANR	1195629	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195630	Identifier	ppts		1195501	0					
ANR	1195631	PrimaryExpression	0		1195501	1					
ANR	1195632	PtrMemberAccess	pseg -> pt		1195501	1					
ANR	1195633	Identifier	pseg		1195501	0					
ANR	1195634	Identifier	pt		1195501	1					
ANR	1195635	ReturnStatement	return gs_pe_closepath ;	662:12:21249:21271	1195501	11	True				
ANR	1195636	Identifier	gs_pe_closepath		1195501	0					
ANR	1195637	Label	case s_curve :	663:8:21281:21293	1195501	12	True				
ANR	1195638	Identifier	s_curve		1195501	0					
ANR	1195639	Statement	define	664:1:21296:21301	1195501	13	True				
ANR	1195640	Statement	pcseg	664:8:21303:21307	1195501	14	True				
ANR	1195641	Statement	(	664:14:21309:21309	1195501	15	True				
ANR	1195642	Statement	(	664:15:21310:21310	1195501	16	True				
ANR	1195643	Statement	const	664:16:21311:21315	1195501	17	True				
ANR	1195644	Statement	curve_segment	664:22:21317:21329	1195501	18	True				
ANR	1195645	Statement	*	664:36:21331:21331	1195501	19	True				
ANR	1195646	Statement	)	664:37:21332:21332	1195501	20	True				
ANR	1195647	Statement	pseg	664:38:21333:21336	1195501	21	True				
ANR	1195648	Statement	)	664:42:21337:21337	1195501	22	True				
ANR	1195649	ExpressionStatement	ppts [ 0 ] = pcseg -> p1	665:12:21351:21370	1195501	23	True				
ANR	1195650	AssignmentExpression	ppts [ 0 ] = pcseg -> p1		1195501	0		=			
ANR	1195651	ArrayIndexing	ppts [ 0 ]		1195501	0					
ANR	1195652	Identifier	ppts		1195501	0					
ANR	1195653	PrimaryExpression	0		1195501	1					
ANR	1195654	PtrMemberAccess	pcseg -> p1		1195501	1					
ANR	1195655	Identifier	pcseg		1195501	0					
ANR	1195656	Identifier	p1		1195501	1					
ANR	1195657	ExpressionStatement	ppts [ 1 ] = pcseg -> p2	666:12:21384:21403	1195501	24	True				
ANR	1195658	AssignmentExpression	ppts [ 1 ] = pcseg -> p2		1195501	0		=			
ANR	1195659	ArrayIndexing	ppts [ 1 ]		1195501	0					
ANR	1195660	Identifier	ppts		1195501	0					
ANR	1195661	PrimaryExpression	1		1195501	1					
ANR	1195662	PtrMemberAccess	pcseg -> p2		1195501	1					
ANR	1195663	Identifier	pcseg		1195501	0					
ANR	1195664	Identifier	p2		1195501	1					
ANR	1195665	ExpressionStatement	ppts [ 2 ] = pseg -> pt	667:12:21417:21435	1195501	25	True				
ANR	1195666	AssignmentExpression	ppts [ 2 ] = pseg -> pt		1195501	0		=			
ANR	1195667	ArrayIndexing	ppts [ 2 ]		1195501	0					
ANR	1195668	Identifier	ppts		1195501	0					
ANR	1195669	PrimaryExpression	2		1195501	1					
ANR	1195670	PtrMemberAccess	pseg -> pt		1195501	1					
ANR	1195671	Identifier	pseg		1195501	0					
ANR	1195672	Identifier	pt		1195501	1					
ANR	1195673	ReturnStatement	return gs_pe_curveto ;	668:12:21449:21469	1195501	26	True				
ANR	1195674	Identifier	gs_pe_curveto		1195501	0					
ANR	1195675	Statement	undef	669:1:21472:21476	1195501	27	True				
ANR	1195676	Statement	pcseg	669:7:21478:21482	1195501	28	True				
ANR	1195677	Label	default :	670:8:21492:21499	1195501	29	True				
ANR	1195678	Identifier	default		1195501	0					
ANR	1195679	ExpressionStatement	"lprintf1 ( ""bad type %x in gx_path_enum_next!\\n"" , pseg -> type )"	671:12:21513:21572	1195501	30	True				
ANR	1195680	CallExpression	"lprintf1 ( ""bad type %x in gx_path_enum_next!\\n"" , pseg -> type )"		1195501	0					
ANR	1195681	Callee	lprintf1		1195501	0					
ANR	1195682	Identifier	lprintf1		1195501	0					
ANR	1195683	ArgumentList	"""bad type %x in gx_path_enum_next!\\n"""		1195501	1					
ANR	1195684	Argument	"""bad type %x in gx_path_enum_next!\\n"""		1195501	0					
ANR	1195685	PrimaryExpression	"""bad type %x in gx_path_enum_next!\\n"""		1195501	0					
ANR	1195686	Argument	pseg -> type		1195501	1					
ANR	1195687	PtrMemberAccess	pseg -> type		1195501	0					
ANR	1195688	Identifier	pseg		1195501	0					
ANR	1195689	Identifier	type		1195501	1					
ANR	1195690	ExpressionStatement	return_error ( gs_error_Fatal )	672:12:21586:21614	1195501	31	True				
ANR	1195691	CallExpression	return_error ( gs_error_Fatal )		1195501	0					
ANR	1195692	Callee	return_error		1195501	0					
ANR	1195693	Identifier	return_error		1195501	0					
ANR	1195694	ArgumentList	gs_error_Fatal		1195501	1					
ANR	1195695	Argument	gs_error_Fatal		1195501	0					
ANR	1195696	Identifier	gs_error_Fatal		1195501	0					
ANR	1195697	ReturnType	int		1195501	1					
ANR	1195698	Identifier	gx_path_enum_next		1195501	2					
ANR	1195699	ParameterList	"gs_path_enum * penum , gs_fixed_point ppts [ 3 ]"		1195501	3					
ANR	1195700	Parameter	gs_path_enum * penum	632:18:20308:20327	1195501	0	True				
ANR	1195701	ParameterType	gs_path_enum *		1195501	0					
ANR	1195702	Identifier	penum		1195501	1					
ANR	1195703	Parameter	gs_fixed_point ppts [ 3 ]	632:40:20330:20351	1195501	1	True				
ANR	1195704	ParameterType	gs_fixed_point [ 3 ]		1195501	0					
ANR	1195705	Identifier	ppts		1195501	1					
ANR	1195706	CFGEntryNode	ENTRY		1195501		True				
ANR	1195707	CFGExitNode	EXIT		1195501		True				
ANR	1195708	Symbol	* penum		1195501						
ANR	1195709	Symbol	gs_pe_closepath		1195501						
ANR	1195710	Symbol	gs_pe_moveto		1195501						
ANR	1195711	Symbol	pseg -> notes		1195501						
ANR	1195712	Symbol	penum -> pseg		1195501						
ANR	1195713	Symbol	penum -> path		1195501						
ANR	1195714	Symbol	ppts		1195501						
ANR	1195715	Symbol	ppath		1195501						
ANR	1195716	Symbol	sn_none		1195501						
ANR	1195717	Symbol	gs_pe_gapto		1195501						
ANR	1195718	Symbol	pseg -> next		1195501						
ANR	1195719	Symbol	pseg		1195501						
ANR	1195720	Symbol	pseg -> pt		1195501						
ANR	1195721	Symbol	gs_pe_lineto		1195501						
ANR	1195722	Symbol	gs_pe_curveto		1195501						
ANR	1195723	Symbol	pseg -> type		1195501						
ANR	1195724	Symbol	* ppts		1195501						
ANR	1195725	Symbol	pcseg		1195501						
ANR	1195726	Symbol	* ppath		1195501						
ANR	1195727	Symbol	gs_error_Fatal		1195501						
ANR	1195728	Symbol	penum		1195501						
ANR	1195729	Symbol	path_last_is_moveto		1195501						
ANR	1195730	Symbol	pcseg -> p2		1195501						
ANR	1195731	Symbol	pcseg -> p1		1195501						
ANR	1195732	Symbol	* pcseg		1195501						
ANR	1195733	Symbol	true		1195501						
ANR	1195734	Symbol	* pseg		1195501						
ANR	1195735	Symbol	penum -> moveto_done		1195501						
ANR	1195736	Symbol	ppath -> position		1195501						
ANR	1195737	Symbol	penum -> notes		1195501						
ANR	1195738	Function	gx_path_enum_notes	677:0:21682:21770							
ANR	1195739	FunctionDef	gx_path_enum_notes (const gs_path_enum * penum)		1195738	0					
ANR	1195740	CompoundStatement		679:0:21743:21770	1195738	0					
ANR	1195741	ReturnStatement	return penum -> notes ;	680:4:21749:21768	1195738	0	True				
ANR	1195742	PtrMemberAccess	penum -> notes		1195738	0					
ANR	1195743	Identifier	penum		1195738	0					
ANR	1195744	Identifier	notes		1195738	1					
ANR	1195745	ReturnType	segment_notes		1195738	1					
ANR	1195746	Identifier	gx_path_enum_notes		1195738	2					
ANR	1195747	ParameterList	const gs_path_enum * penum		1195738	3					
ANR	1195748	Parameter	const gs_path_enum * penum	678:19:21715:21740	1195738	0	True				
ANR	1195749	ParameterType	const gs_path_enum *		1195738	0					
ANR	1195750	Identifier	penum		1195738	1					
ANR	1195751	CFGEntryNode	ENTRY		1195738		True				
ANR	1195752	CFGExitNode	EXIT		1195738		True				
ANR	1195753	Symbol	* penum		1195738						
ANR	1195754	Symbol	penum		1195738						
ANR	1195755	Symbol	penum -> notes		1195738						
ANR	1195756	Function	gx_path_enum_backup	687:0:22012:22868							
ANR	1195757	FunctionDef	gx_path_enum_backup (gs_path_enum * penum)		1195756	0					
ANR	1195758	CompoundStatement		689:0:22059:22868	1195756	0					
ANR	1195759	IdentifierDeclStatement	const segment * pseg = penum -> pseg ;	690:4:22065:22098	1195756	0	True				
ANR	1195760	IdentifierDecl	* pseg = penum -> pseg		1195756	0					
ANR	1195761	IdentifierDeclType	const segment *		1195756	0					
ANR	1195762	Identifier	pseg		1195756	1					
ANR	1195763	AssignmentExpression	* pseg = penum -> pseg		1195756	2		=			
ANR	1195764	Identifier	pseg		1195756	0					
ANR	1195765	PtrMemberAccess	penum -> pseg		1195756	1					
ANR	1195766	Identifier	penum		1195756	0					
ANR	1195767	Identifier	pseg		1195756	1					
ANR	1195768	IfStatement	if ( pseg != 0 )		1195756	1					
ANR	1195769	Condition	pseg != 0	692:8:22109:22117	1195756	0	True				
ANR	1195770	EqualityExpression	pseg != 0		1195756	0		!=			
ANR	1195771	Identifier	pseg		1195756	0					
ANR	1195772	PrimaryExpression	0		1195756	1					
ANR	1195773	CompoundStatement		4:19:60:60	1195756	1					
ANR	1195774	IfStatement	if ( ( pseg = pseg -> prev ) == 0 )		1195756	0					
ANR	1195775	Condition	( pseg = pseg -> prev ) == 0	693:12:22134:22157	1195756	0	True				
ANR	1195776	EqualityExpression	( pseg = pseg -> prev ) == 0		1195756	0		==			
ANR	1195777	AssignmentExpression	pseg = pseg -> prev		1195756	0		=			
ANR	1195778	Identifier	pseg		1195756	0					
ANR	1195779	PtrMemberAccess	pseg -> prev		1195756	1					
ANR	1195780	Identifier	pseg		1195756	0					
ANR	1195781	Identifier	prev		1195756	1					
ANR	1195782	PrimaryExpression	0		1195756	1					
ANR	1195783	ReturnStatement	return false ;	694:12:22172:22184	1195756	1	True				
ANR	1195784	Identifier	false		1195756	0					
ANR	1195785	ExpressionStatement	penum -> pseg = pseg	695:8:22194:22212	1195756	1	True				
ANR	1195786	AssignmentExpression	penum -> pseg = pseg		1195756	0		=			
ANR	1195787	PtrMemberAccess	penum -> pseg		1195756	0					
ANR	1195788	Identifier	penum		1195756	0					
ANR	1195789	Identifier	pseg		1195756	1					
ANR	1195790	Identifier	pseg		1195756	1					
ANR	1195791	ReturnStatement	return true ;	696:8:22222:22233	1195756	2	True				
ANR	1195792	Identifier	true		1195756	0					
ANR	1195793	CompoundStatement		13:8:310:344	1195756	2					
ANR	1195794	IdentifierDeclStatement	const gx_path * ppath = penum -> path ;	701:8:22370:22404	1195756	0	True				
ANR	1195795	IdentifierDecl	* ppath = penum -> path		1195756	0					
ANR	1195796	IdentifierDeclType	const gx_path *		1195756	0					
ANR	1195797	Identifier	ppath		1195756	1					
ANR	1195798	AssignmentExpression	* ppath = penum -> path		1195756	2		=			
ANR	1195799	Identifier	ppath		1195756	0					
ANR	1195800	PtrMemberAccess	penum -> path		1195756	1					
ANR	1195801	Identifier	penum		1195756	0					
ANR	1195802	Identifier	path		1195756	1					
ANR	1195803	IfStatement	if ( path_last_is_moveto ( ppath ) && penum -> moveto_done )		1195756	1					
ANR	1195804	Condition	path_last_is_moveto ( ppath ) && penum -> moveto_done	703:12:22419:22466	1195756	0	True				
ANR	1195805	AndExpression	path_last_is_moveto ( ppath ) && penum -> moveto_done		1195756	0		&&			
ANR	1195806	CallExpression	path_last_is_moveto ( ppath )		1195756	0					
ANR	1195807	Callee	path_last_is_moveto		1195756	0					
ANR	1195808	Identifier	path_last_is_moveto		1195756	0					
ANR	1195809	ArgumentList	ppath		1195756	1					
ANR	1195810	Argument	ppath		1195756	0					
ANR	1195811	Identifier	ppath		1195756	0					
ANR	1195812	PtrMemberAccess	penum -> moveto_done		1195756	1					
ANR	1195813	Identifier	penum		1195756	0					
ANR	1195814	Identifier	moveto_done		1195756	1					
ANR	1195815	CompoundStatement		15:62:409:409	1195756	1					
ANR	1195816	ExpressionStatement	penum -> moveto_done = false	704:12:22524:22550	1195756	0	True				
ANR	1195817	AssignmentExpression	penum -> moveto_done = false		1195756	0		=			
ANR	1195818	PtrMemberAccess	penum -> moveto_done		1195756	0					
ANR	1195819	Identifier	penum		1195756	0					
ANR	1195820	Identifier	moveto_done		1195756	1					
ANR	1195821	Identifier	false		1195756	1					
ANR	1195822	ReturnStatement	return true ;	705:12:22564:22575	1195756	1	True				
ANR	1195823	Identifier	true		1195756	0					
ANR	1195824	CompoundStatement		19:12:541:585	1195756	2					
ANR	1195825	IdentifierDeclStatement	const subpath * psub = ppath -> current_subpath ;	707:12:22601:22645	1195756	0	True				
ANR	1195826	IdentifierDecl	* psub = ppath -> current_subpath		1195756	0					
ANR	1195827	IdentifierDeclType	const subpath *		1195756	0					
ANR	1195828	Identifier	psub		1195756	1					
ANR	1195829	AssignmentExpression	* psub = ppath -> current_subpath		1195756	2		=			
ANR	1195830	Identifier	psub		1195756	0					
ANR	1195831	PtrMemberAccess	ppath -> current_subpath		1195756	1					
ANR	1195832	Identifier	ppath		1195756	0					
ANR	1195833	Identifier	current_subpath		1195756	1					
ANR	1195834	IfStatement	if ( psub == 0 )		1195756	1					
ANR	1195835	Condition	psub == 0	709:16:22664:22672	1195756	0	True				
ANR	1195836	EqualityExpression	psub == 0		1195756	0		==			
ANR	1195837	Identifier	psub		1195756	0					
ANR	1195838	PrimaryExpression	0		1195756	1					
ANR	1195839	ReturnStatement	return false ;	710:16:22708:22720	1195756	1	True				
ANR	1195840	Identifier	false		1195756	0					
ANR	1195841	ExpressionStatement	penum -> pseg = psub -> last	712:12:22801:22825	1195756	2	True				
ANR	1195842	AssignmentExpression	penum -> pseg = psub -> last		1195756	0		=			
ANR	1195843	PtrMemberAccess	penum -> pseg		1195756	0					
ANR	1195844	Identifier	penum		1195756	0					
ANR	1195845	Identifier	pseg		1195756	1					
ANR	1195846	PtrMemberAccess	psub -> last		1195756	1					
ANR	1195847	Identifier	psub		1195756	0					
ANR	1195848	Identifier	last		1195756	1					
ANR	1195849	ReturnStatement	return true ;	713:12:22839:22850	1195756	3	True				
ANR	1195850	Identifier	true		1195756	0					
ANR	1195851	ReturnType	bool		1195756	1					
ANR	1195852	Identifier	gx_path_enum_backup		1195756	2					
ANR	1195853	ParameterList	gs_path_enum * penum		1195756	3					
ANR	1195854	Parameter	gs_path_enum * penum	688:20:22037:22056	1195756	0	True				
ANR	1195855	ParameterType	gs_path_enum *		1195756	0					
ANR	1195856	Identifier	penum		1195756	1					
ANR	1195857	CFGEntryNode	ENTRY		1195756		True				
ANR	1195858	CFGExitNode	EXIT		1195756		True				
ANR	1195859	Symbol	* ppath		1195756						
ANR	1195860	Symbol	* penum		1195756						
ANR	1195861	Symbol	psub -> last		1195756						
ANR	1195862	Symbol	ppath -> current_subpath		1195756						
ANR	1195863	Symbol	psub		1195756						
ANR	1195864	Symbol	* psub		1195756						
ANR	1195865	Symbol	penum -> pseg		1195756						
ANR	1195866	Symbol	penum -> path		1195756						
ANR	1195867	Symbol	penum		1195756						
ANR	1195868	Symbol	false		1195756						
ANR	1195869	Symbol	path_last_is_moveto		1195756						
ANR	1195870	Symbol	ppath		1195756						
ANR	1195871	Symbol	pseg		1195756						
ANR	1195872	Symbol	* pseg		1195756						
ANR	1195873	Symbol	true		1195756						
ANR	1195874	Symbol	penum -> moveto_done		1195756						
ANR	1195875	Symbol	pseg -> prev		1195756						
