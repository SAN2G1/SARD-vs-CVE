command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2644813	File	data/converged/CVE-2018-16863_ghostpdl/devices_rinkj_evenbetter-rll.c								
ANR	2644814	DeclStmt									
ANR	2644815	Decl							struct _eb_ctx_sse2	struct _eb_ctx_sse2	eb_ctx_sse2
ANR	2644816	DeclStmt									
ANR	2644817	Decl							struct _eb_srcbuf	struct _eb_srcbuf	eb_srcbuf
ANR	2644818	DeclStmt									
ANR	2644819	Decl							int	int ( void )	eb_test_sse2
ANR	2644820	DeclStmt									
ANR	2644821	Decl							int	"int ( eb_ctx_sse2 * ctx , unsigned char * * out , eb_srcbuf * in , int offset )"	eb_sse2_core
ANR	2644822	DeclStmt									
ANR	2644823	Decl							int	"int ( eb_ctx_sse2 * ctx , int offset )"	eb_sse2_rev_rs
ANR	2644824	DeclStmt									
ANR	2644825	Decl							int	int ( void )	eb_sse2_set_daz
ANR	2644826	DeclStmt									
ANR	2644827	Decl							void	void ( int save_mxcsr )	eb_sse2_restore_daz
ANR	2644828	ClassDef	_eb_ctx_sse2	64:0:1628:2026							
ANR	2644829	DeclStmt									
ANR	2644830	Decl							int	int	xs
ANR	2644831	DeclStmt									
ANR	2644832	Decl							int	int *	iir_line
ANR	2644833	DeclStmt									
ANR	2644834	Decl							int	int *	r_line
ANR	2644835	DeclStmt									
ANR	2644836	Decl							int	int *	a_line
ANR	2644837	DeclStmt									
ANR	2644838	Decl							int	int *	b_line
ANR	2644839	DeclStmt									
ANR	2644840	Decl							char	char *	skip_line
ANR	2644841	DeclStmt									
ANR	2644842	Decl							int	int [ 2 ]	dummy
ANR	2644843	DeclStmt									
ANR	2644844	Decl							float	float * [ 4 ]	luts
ANR	2644845	DeclStmt									
ANR	2644846	Decl							float	float [ 4 ]	e
ANR	2644847	DeclStmt									
ANR	2644848	Decl							float	float [ 4 ]	e_i_1
ANR	2644849	DeclStmt									
ANR	2644850	Decl							int	int [ 4 ]	r
ANR	2644851	DeclStmt									
ANR	2644852	Decl							int	int [ 4 ]	a
ANR	2644853	DeclStmt									
ANR	2644854	Decl							int	int [ 4 ]	b
ANR	2644855	DeclStmt									
ANR	2644856	Decl							int	int [ 4 ]	ones
ANR	2644857	DeclStmt									
ANR	2644858	Decl							int	int [ 4 ]	twos
ANR	2644859	DeclStmt									
ANR	2644860	Decl							int	int [ 4 ]	aspect2
ANR	2644861	DeclStmt									
ANR	2644862	Decl							float	float [ 4 ]	ehi
ANR	2644863	DeclStmt									
ANR	2644864	Decl							float	float [ 4 ]	elo
ANR	2644865	DeclStmt									
ANR	2644866	Decl							float	float [ 4 ]	ohi
ANR	2644867	DeclStmt									
ANR	2644868	Decl							float	float [ 4 ]	r_mul
ANR	2644869	DeclStmt									
ANR	2644870	Decl							float	float [ 4 ]	kernel
ANR	2644871	DeclStmt									
ANR	2644872	Decl							unsigned int	unsigned int [ 4 ]	seed1
ANR	2644873	DeclStmt									
ANR	2644874	Decl							unsigned int	unsigned int [ 4 ]	seed2
ANR	2644875	ClassDef	_eb_srcbuf	90:0:2030:2114							
ANR	2644876	DeclStmt									
ANR	2644877	Decl							float	float [ 64 ]	im
ANR	2644878	DeclStmt									
ANR	2644879	Decl							float	float [ 64 ]	rb
ANR	2644880	DeclStmt									
ANR	2644881	Decl							float	float [ 64 ]	rs
ANR	2644882	DeclStmt									
ANR	2644883	Decl							int	int [ 3 ]	dummy
ANR	2644884	DeclStmt									
ANR	2644885	Decl							struct _EBPlaneCtx	struct _EBPlaneCtx	EBPlaneCtx
ANR	2644886	DeclStmt									
ANR	2644887	Decl							unsigned int	unsigned int	uint32
ANR	2644888	ClassDef	_EvenBetterCtx	102:0:2195:2689							
ANR	2644889	DeclStmt									
ANR	2644890	Decl							int	int	source_width
ANR	2644891	DeclStmt									
ANR	2644892	Decl							int	int	dest_width
ANR	2644893	DeclStmt									
ANR	2644894	Decl							int	int	n_planes
ANR	2644895	DeclStmt									
ANR	2644896	Decl							int	int	levels
ANR	2644897	DeclStmt									
ANR	2644898	Decl							EBPlaneCtx	EBPlaneCtx * *	plane_ctx
ANR	2644899	DeclStmt									
ANR	2644900	Decl							int	int	aspect
ANR	2644901	DeclStmt									
ANR	2644902	Decl							int	int *	strengths
ANR	2644903	DeclStmt									
ANR	2644904	Decl							int	int	even_elo
ANR	2644905	DeclStmt									
ANR	2644906	Decl							int	int	even_ehi
ANR	2644907	DeclStmt									
ANR	2644908	Decl							int	int *	c_line
ANR	2644909	DeclStmt									
ANR	2644910	Decl							int	int	even_c1
ANR	2644911	DeclStmt									
ANR	2644912	Decl							int	int	do_shadows
ANR	2644913	DeclStmt									
ANR	2644914	Decl							uint32	uint32	seed1
ANR	2644915	DeclStmt									
ANR	2644916	Decl							uint32	uint32	seed2
ANR	2644917	DeclStmt									
ANR	2644918	Decl							FILE	FILE *	dump_file
ANR	2644919	DeclStmt									
ANR	2644920	Decl							EbDumpLevel	EbDumpLevel	dump_level
ANR	2644921	DeclStmt									
ANR	2644922	Decl							eb_ctx_sse2	eb_ctx_sse2 * *	sse2_ctx
ANR	2644923	DeclStmt									
ANR	2644924	Decl							int	int	using_vectors
ANR	2644925	DeclStmt									
ANR	2644926	Decl							eb_ctx_avec	eb_ctx_avec * *	avec_ctx
ANR	2644927	DeclStmt									
ANR	2644928	Decl							int	int	using_vectors
ANR	2644929	ClassDef	_EBPlaneCtx	133:0:2693:2952							
ANR	2644930	DeclStmt									
ANR	2644931	Decl							int	int	source_width
ANR	2644932	DeclStmt									
ANR	2644933	Decl							int	int	dest_width
ANR	2644934	DeclStmt									
ANR	2644935	Decl							int	int *	rb_line
ANR	2644936	DeclStmt									
ANR	2644937	Decl							int	int *	iir_line
ANR	2644938	DeclStmt									
ANR	2644939	Decl							int	int *	r_line
ANR	2644940	DeclStmt									
ANR	2644941	Decl							int	int *	a_line
ANR	2644942	DeclStmt									
ANR	2644943	Decl							int	int *	b_line
ANR	2644944	DeclStmt									
ANR	2644945	Decl							int	int *	r_line_sh
ANR	2644946	DeclStmt									
ANR	2644947	Decl							int	int *	a_line_sh
ANR	2644948	DeclStmt									
ANR	2644949	Decl							int	int *	b_line_sh
ANR	2644950	DeclStmt									
ANR	2644951	Decl							int	int *	lut
ANR	2644952	DeclStmt									
ANR	2644953	Decl							int	int *	rb_lut
ANR	2644954	DeclStmt									
ANR	2644955	Decl							char	char *	rs_lut
ANR	2644956	DeclStmt									
ANR	2644957	Decl							int	int *	white_count_line
ANR	2644958	Function	eb_malloc_aligned	150:0:2956:3244							
ANR	2644959	FunctionDef	"eb_malloc_aligned (int size , int align)"		2644958	0					
ANR	2644960	CompoundStatement		152:0:3002:3244	2644958	0					
ANR	2644961	IdentifierDeclStatement	void * result ;	153:2:3006:3018	2644958	0	True				
ANR	2644962	IdentifierDecl	* result		2644958	0					
ANR	2644963	IdentifierDeclType	void *		2644958	0					
ANR	2644964	Identifier	result		2644958	1					
ANR	2644965	IdentifierDeclStatement	void * alloced = malloc ( size + align ) ;	154:2:3022:3058	2644958	1	True				
ANR	2644966	IdentifierDecl	* alloced = malloc ( size + align )		2644958	0					
ANR	2644967	IdentifierDeclType	void *		2644958	0					
ANR	2644968	Identifier	alloced		2644958	1					
ANR	2644969	AssignmentExpression	* alloced = malloc ( size + align )		2644958	2		=			
ANR	2644970	Identifier	alloced		2644958	0					
ANR	2644971	CallExpression	malloc ( size + align )		2644958	1					
ANR	2644972	Callee	malloc		2644958	0					
ANR	2644973	Identifier	malloc		2644958	0					
ANR	2644974	ArgumentList	size + align		2644958	1					
ANR	2644975	Argument	size + align		2644958	0					
ANR	2644976	AdditiveExpression	size + align		2644958	0		+			
ANR	2644977	Identifier	size		2644958	0					
ANR	2644978	Identifier	align		2644958	1					
ANR	2644979	IdentifierDeclStatement	int pad ;	155:2:3062:3069	2644958	2	True				
ANR	2644980	IdentifierDecl	pad		2644958	0					
ANR	2644981	IdentifierDeclType	int		2644958	0					
ANR	2644982	Identifier	pad		2644958	1					
ANR	2644983	IfStatement	if ( alloced == 0 )		2644958	3					
ANR	2644984	Condition	alloced == 0	157:6:3078:3089	2644958	0	True				
ANR	2644985	EqualityExpression	alloced == 0		2644958	0		==			
ANR	2644986	Identifier	alloced		2644958	0					
ANR	2644987	PrimaryExpression	0		2644958	1					
ANR	2644988	ReturnStatement	return 0 ;	158:4:3096:3104	2644958	1	True				
ANR	2644989	PrimaryExpression	0		2644958	0					
ANR	2644990	ExpressionStatement	pad = ( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4	159:2:3108:3152	2644958	4	True				
ANR	2644991	AssignmentExpression	pad = ( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4		2644958	0		=			
ANR	2644992	Identifier	pad		2644958	0					
ANR	2644993	AdditiveExpression	( ( ( int ) ( size_t ) alloced + 12 ) & 15 ) + 4		2644958	1		+			
ANR	2644994	BitAndExpression	( ( int ) ( size_t ) alloced + 12 ) & 15		2644958	0		&			
ANR	2644995	AdditiveExpression	( int ) ( size_t ) alloced + 12		2644958	0		+			
ANR	2644996	CastExpression	( int ) ( size_t ) alloced		2644958	0					
ANR	2644997	CastTarget	int		2644958	0					
ANR	2644998	CastExpression	( size_t ) alloced		2644958	1					
ANR	2644999	CastTarget	size_t		2644958	0					
ANR	2645000	Identifier	alloced		2644958	1					
ANR	2645001	PrimaryExpression	12		2644958	1					
ANR	2645002	PrimaryExpression	15		2644958	1					
ANR	2645003	PrimaryExpression	4		2644958	1					
ANR	2645004	ExpressionStatement	result = ( void * ) ( pad + ( char * ) alloced )	160:2:3156:3196	2644958	5	True				
ANR	2645005	AssignmentExpression	result = ( void * ) ( pad + ( char * ) alloced )		2644958	0		=			
ANR	2645006	Identifier	result		2644958	0					
ANR	2645007	CastExpression	( void * ) ( pad + ( char * ) alloced )		2644958	1					
ANR	2645008	CastTarget	void *		2644958	0					
ANR	2645009	AdditiveExpression	pad + ( char * ) alloced		2644958	1		+			
ANR	2645010	Identifier	pad		2644958	0					
ANR	2645011	CastExpression	( char * ) alloced		2644958	1					
ANR	2645012	CastTarget	char *		2644958	0					
ANR	2645013	Identifier	alloced		2644958	1					
ANR	2645014	ExpressionStatement	( ( int * ) result ) [ - 1 ] = pad	161:2:3200:3225	2644958	6	True				
ANR	2645015	AssignmentExpression	( ( int * ) result ) [ - 1 ] = pad		2644958	0		=			
ANR	2645016	ArrayIndexing	( ( int * ) result ) [ - 1 ]		2644958	0					
ANR	2645017	CastExpression	( int * ) result		2644958	0					
ANR	2645018	CastTarget	int *		2644958	0					
ANR	2645019	Identifier	result		2644958	1					
ANR	2645020	UnaryOperationExpression	- 1		2644958	1					
ANR	2645021	UnaryOperator	-		2644958	0					
ANR	2645022	PrimaryExpression	1		2644958	1					
ANR	2645023	Identifier	pad		2644958	1					
ANR	2645024	ReturnStatement	return result ;	162:2:3229:3242	2644958	7	True				
ANR	2645025	Identifier	result		2644958	0					
ANR	2645026	ReturnType	void *		2644958	1					
ANR	2645027	Identifier	eb_malloc_aligned		2644958	2					
ANR	2645028	ParameterList	"int size , int align"		2644958	3					
ANR	2645029	Parameter	int size	151:18:2981:2988	2644958	0	True				
ANR	2645030	ParameterType	int		2644958	0					
ANR	2645031	Identifier	size		2644958	1					
ANR	2645032	Parameter	int align	151:28:2991:2999	2644958	1	True				
ANR	2645033	ParameterType	int		2644958	0					
ANR	2645034	Identifier	align		2644958	1					
ANR	2645035	CFGEntryNode	ENTRY		2644958		True				
ANR	2645036	CFGExitNode	EXIT		2644958		True				
ANR	2645037	Symbol	result		2644958						
ANR	2645038	Symbol	malloc		2644958						
ANR	2645039	Symbol	pad		2644958						
ANR	2645040	Symbol	size		2644958						
ANR	2645041	Symbol	* result		2644958						
ANR	2645042	Symbol	alloced		2644958						
ANR	2645043	Symbol	align		2644958						
ANR	2645044	Function	eb_free_aligned	165:0:3247:3331							
ANR	2645045	FunctionDef	eb_free_aligned (void * p)		2645044	0					
ANR	2645046	CompoundStatement		167:0:3277:3331	2645044	0					
ANR	2645047	IdentifierDeclStatement	int pad = ( ( int * ) p ) [ - 1 ] ;	168:2:3281:3305	2645044	0	True				
ANR	2645048	IdentifierDecl	pad = ( ( int * ) p ) [ - 1 ]		2645044	0					
ANR	2645049	IdentifierDeclType	int		2645044	0					
ANR	2645050	Identifier	pad		2645044	1					
ANR	2645051	AssignmentExpression	pad = ( ( int * ) p ) [ - 1 ]		2645044	2		=			
ANR	2645052	Identifier	pad		2645044	0					
ANR	2645053	ArrayIndexing	( ( int * ) p ) [ - 1 ]		2645044	1					
ANR	2645054	CastExpression	( int * ) p		2645044	0					
ANR	2645055	CastTarget	int *		2645044	0					
ANR	2645056	Identifier	p		2645044	1					
ANR	2645057	UnaryOperationExpression	- 1		2645044	1					
ANR	2645058	UnaryOperator	-		2645044	0					
ANR	2645059	PrimaryExpression	1		2645044	1					
ANR	2645060	ExpressionStatement	free ( ( char * ) p - pad )	169:2:3309:3329	2645044	1	True				
ANR	2645061	CallExpression	free ( ( char * ) p - pad )		2645044	0					
ANR	2645062	Callee	free		2645044	0					
ANR	2645063	Identifier	free		2645044	0					
ANR	2645064	ArgumentList	( char * ) p - pad		2645044	1					
ANR	2645065	Argument	( char * ) p - pad		2645044	0					
ANR	2645066	AdditiveExpression	( char * ) p - pad		2645044	0		-			
ANR	2645067	CastExpression	( char * ) p		2645044	0					
ANR	2645068	CastTarget	char *		2645044	0					
ANR	2645069	Identifier	p		2645044	1					
ANR	2645070	Identifier	pad		2645044	1					
ANR	2645071	ReturnType	void		2645044	1					
ANR	2645072	Identifier	eb_free_aligned		2645044	2					
ANR	2645073	ParameterList	void * p		2645044	3					
ANR	2645074	Parameter	void * p	166:16:3268:3274	2645044	0	True				
ANR	2645075	ParameterType	void *		2645044	0					
ANR	2645076	Identifier	p		2645044	1					
ANR	2645077	CFGEntryNode	ENTRY		2645044		True				
ANR	2645078	CFGExitNode	EXIT		2645044		True				
ANR	2645079	Symbol	p		2645044						
ANR	2645080	Symbol	pad		2645044						
ANR	2645081	Symbol	* p		2645044						
ANR	2645082	Function	eb_compute_rbscale	172:0:3334:3610							
ANR	2645083	FunctionDef	eb_compute_rbscale (const EvenBetterParams * params)		2645082	0					
ANR	2645084	CompoundStatement		174:0:3399:3610	2645082	0					
ANR	2645085	IdentifierDeclStatement	double rbscale = params -> rbscale ;	175:2:3403:3435	2645082	0	True				
ANR	2645086	IdentifierDecl	rbscale = params -> rbscale		2645082	0					
ANR	2645087	IdentifierDeclType	double		2645082	0					
ANR	2645088	Identifier	rbscale		2645082	1					
ANR	2645089	AssignmentExpression	rbscale = params -> rbscale		2645082	2		=			
ANR	2645090	Identifier	rbscale		2645082	0					
ANR	2645091	PtrMemberAccess	params -> rbscale		2645082	1					
ANR	2645092	Identifier	params		2645082	0					
ANR	2645093	Identifier	rbscale		2645082	1					
ANR	2645094	IfStatement	if ( rbscale == 0.0 )		2645082	1					
ANR	2645095	Condition	rbscale == 0.0	177:6:3444:3457	2645082	0	True				
ANR	2645096	EqualityExpression	rbscale == 0.0		2645082	0		==			
ANR	2645097	Identifier	rbscale		2645082	0					
ANR	2645098	PrimaryExpression	0.0		2645082	1					
ANR	2645099	CompoundStatement		5:4:64:64	2645082	1					
ANR	2645100	ExpressionStatement	rbscale = params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1	179:6:3472:3584	2645082	0	True				
ANR	2645101	AssignmentExpression	rbscale = params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		2645082	0		=			
ANR	2645102	Identifier	rbscale		2645082	0					
ANR	2645103	ConditionalExpression	params -> aspect == 1 ? 0.95 : params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		2645082	1					
ANR	2645104	Condition	params -> aspect == 1		2645082	0					
ANR	2645105	EqualityExpression	params -> aspect == 1		2645082	0		==			
ANR	2645106	PtrMemberAccess	params -> aspect		2645082	0					
ANR	2645107	Identifier	params		2645082	0					
ANR	2645108	Identifier	aspect		2645082	1					
ANR	2645109	PrimaryExpression	1		2645082	1					
ANR	2645110	PrimaryExpression	0.95		2645082	1					
ANR	2645111	ConditionalExpression	params -> aspect == 2 ? 1.8 : params -> aspect == 4 ? 3.6 : 1		2645082	2					
ANR	2645112	Condition	params -> aspect == 2		2645082	0					
ANR	2645113	EqualityExpression	params -> aspect == 2		2645082	0		==			
ANR	2645114	PtrMemberAccess	params -> aspect		2645082	0					
ANR	2645115	Identifier	params		2645082	0					
ANR	2645116	Identifier	aspect		2645082	1					
ANR	2645117	PrimaryExpression	2		2645082	1					
ANR	2645118	PrimaryExpression	1.8		2645082	1					
ANR	2645119	ConditionalExpression	params -> aspect == 4 ? 3.6 : 1		2645082	2					
ANR	2645120	Condition	params -> aspect == 4		2645082	0					
ANR	2645121	EqualityExpression	params -> aspect == 4		2645082	0		==			
ANR	2645122	PtrMemberAccess	params -> aspect		2645082	0					
ANR	2645123	Identifier	params		2645082	0					
ANR	2645124	Identifier	aspect		2645082	1					
ANR	2645125	PrimaryExpression	4		2645082	1					
ANR	2645126	PrimaryExpression	3.6		2645082	1					
ANR	2645127	PrimaryExpression	1		2645082	2					
ANR	2645128	ReturnStatement	return rbscale ;	183:2:3594:3608	2645082	2	True				
ANR	2645129	Identifier	rbscale		2645082	0					
ANR	2645130	ReturnType	static double		2645082	1					
ANR	2645131	Identifier	eb_compute_rbscale		2645082	2					
ANR	2645132	ParameterList	const EvenBetterParams * params		2645082	3					
ANR	2645133	Parameter	const EvenBetterParams * params	173:19:3367:3396	2645082	0	True				
ANR	2645134	ParameterType	const EvenBetterParams *		2645082	0					
ANR	2645135	Identifier	params		2645082	1					
ANR	2645136	CFGEntryNode	ENTRY		2645082		True				
ANR	2645137	CFGExitNode	EXIT		2645082		True				
ANR	2645138	Symbol	params		2645082						
ANR	2645139	Symbol	params -> rbscale		2645082						
ANR	2645140	Symbol	rbscale		2645082						
ANR	2645141	Symbol	* params		2645082						
ANR	2645142	Symbol	params -> aspect		2645082						
ANR	2645143	Function	eb_compute_randshift	186:0:3613:4931							
ANR	2645144	FunctionDef	"eb_compute_randshift (int nl , int rs_base , int do_shadows , int levels)"		2645143	0					
ANR	2645145	CompoundStatement		188:0:3694:4931	2645143	0					
ANR	2645146	IdentifierDeclStatement	int rs = rs_base ;	189:2:3698:3714	2645143	0	True				
ANR	2645147	IdentifierDecl	rs = rs_base		2645143	0					
ANR	2645148	IdentifierDeclType	int		2645143	0					
ANR	2645149	Identifier	rs		2645143	1					
ANR	2645150	AssignmentExpression	rs = rs_base		2645143	2		=			
ANR	2645151	Identifier	rs_base		2645143	0					
ANR	2645152	Identifier	rs_base		2645143	1					
ANR	2645153	IfStatement	if ( ( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) ) )		2645143	1					
ANR	2645154	Condition	( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) )	190:6:3722:3880	2645143	0	True				
ANR	2645155	OrExpression	( nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) ) ) || ( nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) ) )		2645143	0		||			
ANR	2645156	AndExpression	nl > ( 90 << ( EVEN_SHIFT - 10 ) ) && nl < ( 129 << ( EVEN_SHIFT - 10 ) )		2645143	0		&&			
ANR	2645157	RelationalExpression	nl > ( 90 << ( EVEN_SHIFT - 10 ) )		2645143	0		>			
ANR	2645158	Identifier	nl		2645143	0					
ANR	2645159	ShiftExpression	90 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645160	PrimaryExpression	90		2645143	0					
ANR	2645161	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645162	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645163	PrimaryExpression	10		2645143	1					
ANR	2645164	RelationalExpression	nl < ( 129 << ( EVEN_SHIFT - 10 ) )		2645143	1		<			
ANR	2645165	Identifier	nl		2645143	0					
ANR	2645166	ShiftExpression	129 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645167	PrimaryExpression	129		2645143	0					
ANR	2645168	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645169	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645170	PrimaryExpression	10		2645143	1					
ANR	2645171	AndExpression	nl > ( 162 << ( EVEN_SHIFT - 10 ) ) && nl < ( 180 << ( EVEN_SHIFT - 10 ) )		2645143	1		&&			
ANR	2645172	RelationalExpression	nl > ( 162 << ( EVEN_SHIFT - 10 ) )		2645143	0		>			
ANR	2645173	Identifier	nl		2645143	0					
ANR	2645174	ShiftExpression	162 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645175	PrimaryExpression	162		2645143	0					
ANR	2645176	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645177	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645178	PrimaryExpression	10		2645143	1					
ANR	2645179	RelationalExpression	nl < ( 180 << ( EVEN_SHIFT - 10 ) )		2645143	1		<			
ANR	2645180	Identifier	nl		2645143	0					
ANR	2645181	ShiftExpression	180 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645182	PrimaryExpression	180		2645143	0					
ANR	2645183	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645184	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645185	PrimaryExpression	10		2645143	1					
ANR	2645186	ExpressionStatement	rs --	194:4:3887:3891	2645143	1	True				
ANR	2645187	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645188	Identifier	rs		2645143	0					
ANR	2645189	IncDec	--		2645143	1					
ANR	2645190	ElseStatement	else		2645143	0					
ANR	2645191	IfStatement	if ( nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) ) )		2645143	0					
ANR	2645192	Condition	nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) )	195:11:3904:3980	2645143	0	True				
ANR	2645193	AndExpression	nl > ( 321 << ( EVEN_SHIFT - 10 ) ) && nl < ( 361 << ( EVEN_SHIFT - 10 ) )		2645143	0		&&			
ANR	2645194	RelationalExpression	nl > ( 321 << ( EVEN_SHIFT - 10 ) )		2645143	0		>			
ANR	2645195	Identifier	nl		2645143	0					
ANR	2645196	ShiftExpression	321 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645197	PrimaryExpression	321		2645143	0					
ANR	2645198	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645199	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645200	PrimaryExpression	10		2645143	1					
ANR	2645201	RelationalExpression	nl < ( 361 << ( EVEN_SHIFT - 10 ) )		2645143	1		<			
ANR	2645202	Identifier	nl		2645143	0					
ANR	2645203	ShiftExpression	361 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645204	PrimaryExpression	361		2645143	0					
ANR	2645205	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645206	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645207	PrimaryExpression	10		2645143	1					
ANR	2645208	CompoundStatement		10:4:292:292	2645143	1					
ANR	2645209	ExpressionStatement	rs --	198:6:3995:3999	2645143	0	True				
ANR	2645210	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645211	Identifier	rs		2645143	0					
ANR	2645212	IncDec	--		2645143	1					
ANR	2645213	IfStatement	if ( nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) ) )		2645143	1					
ANR	2645214	Condition	nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) )	199:10:4011:4086	2645143	0	True				
ANR	2645215	AndExpression	nl > ( 331 << ( EVEN_SHIFT - 10 ) ) && nl < ( 351 << ( EVEN_SHIFT - 10 ) )		2645143	0		&&			
ANR	2645216	RelationalExpression	nl > ( 331 << ( EVEN_SHIFT - 10 ) )		2645143	0		>			
ANR	2645217	Identifier	nl		2645143	0					
ANR	2645218	ShiftExpression	331 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645219	PrimaryExpression	331		2645143	0					
ANR	2645220	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645221	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645222	PrimaryExpression	10		2645143	1					
ANR	2645223	RelationalExpression	nl < ( 351 << ( EVEN_SHIFT - 10 ) )		2645143	1		<			
ANR	2645224	Identifier	nl		2645143	0					
ANR	2645225	ShiftExpression	351 << ( EVEN_SHIFT - 10 )		2645143	1		<<			
ANR	2645226	PrimaryExpression	351		2645143	0					
ANR	2645227	AdditiveExpression	EVEN_SHIFT - 10		2645143	1		-			
ANR	2645228	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645229	PrimaryExpression	10		2645143	1					
ANR	2645230	ExpressionStatement	rs --	201:8:4097:4101	2645143	1	True				
ANR	2645231	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645232	Identifier	rs		2645143	0					
ANR	2645233	IncDec	--		2645143	1					
ANR	2645234	ElseStatement	else		2645143	0					
ANR	2645235	IfStatement	if ( ( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) ) )		2645143	0					
ANR	2645236	Condition	( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )	203:11:4120:4264	2645143	0	True				
ANR	2645237	AndExpression	( do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT ) && nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		2645143	0		&&			
ANR	2645238	OrExpression	do_shadows || nl == ( levels - 1 ) << EVEN_SHIFT		2645143	0		||			
ANR	2645239	Identifier	do_shadows		2645143	0					
ANR	2645240	EqualityExpression	nl == ( levels - 1 ) << EVEN_SHIFT		2645143	1		==			
ANR	2645241	Identifier	nl		2645143	0					
ANR	2645242	ShiftExpression	( levels - 1 ) << EVEN_SHIFT		2645143	1		<<			
ANR	2645243	AdditiveExpression	levels - 1		2645143	0		-			
ANR	2645244	Identifier	levels		2645143	0					
ANR	2645245	PrimaryExpression	1		2645143	1					
ANR	2645246	Identifier	EVEN_SHIFT		2645143	1					
ANR	2645247	RelationalExpression	nl > ( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		2645143	1		>			
ANR	2645248	Identifier	nl		2645143	0					
ANR	2645249	AdditiveExpression	( ( levels - 1 ) << EVEN_SHIFT ) - ( 1 << ( EVEN_SHIFT - 2 ) )		2645143	1		-			
ANR	2645250	ShiftExpression	( levels - 1 ) << EVEN_SHIFT		2645143	0		<<			
ANR	2645251	AdditiveExpression	levels - 1		2645143	0		-			
ANR	2645252	Identifier	levels		2645143	0					
ANR	2645253	PrimaryExpression	1		2645143	1					
ANR	2645254	Identifier	EVEN_SHIFT		2645143	1					
ANR	2645255	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		2645143	1		<<			
ANR	2645256	PrimaryExpression	1		2645143	0					
ANR	2645257	AdditiveExpression	EVEN_SHIFT - 2		2645143	1		-			
ANR	2645258	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645259	PrimaryExpression	2		2645143	1					
ANR	2645260	CompoundStatement		20:4:576:576	2645143	1					
ANR	2645261	ElseStatement	else		2645143	0					
ANR	2645262	IfStatement	if ( ( nl > ( 3 << ( EVEN_SHIFT - 2 ) ) ) )		2645143	0					
ANR	2645263	Condition	nl > ( 3 << ( EVEN_SHIFT - 2 ) )	210:11:4342:4371	2645143	0	True				
ANR	2645264	RelationalExpression	nl > ( 3 << ( EVEN_SHIFT - 2 ) )		2645143	0		>			
ANR	2645265	Identifier	nl		2645143	0					
ANR	2645266	ShiftExpression	3 << ( EVEN_SHIFT - 2 )		2645143	1		<<			
ANR	2645267	PrimaryExpression	3		2645143	0					
ANR	2645268	AdditiveExpression	EVEN_SHIFT - 2		2645143	1		-			
ANR	2645269	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645270	PrimaryExpression	2		2645143	1					
ANR	2645271	CompoundStatement		24:4:683:683	2645143	1					
ANR	2645272	ExpressionStatement	nl -= ( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )	212:6:4386:4449	2645143	0	True				
ANR	2645273	AssignmentExpression	nl -= ( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )		2645143	0		-=			
ANR	2645274	Identifier	nl		2645143	0					
ANR	2645275	BitAndExpression	( nl + ( 1 << ( EVEN_SHIFT - 2 ) ) ) & - ( 1 << ( EVEN_SHIFT - 1 ) )		2645143	1		&			
ANR	2645276	AdditiveExpression	nl + ( 1 << ( EVEN_SHIFT - 2 ) )		2645143	0		+			
ANR	2645277	Identifier	nl		2645143	0					
ANR	2645278	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		2645143	1		<<			
ANR	2645279	PrimaryExpression	1		2645143	0					
ANR	2645280	AdditiveExpression	EVEN_SHIFT - 2		2645143	1		-			
ANR	2645281	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645282	PrimaryExpression	2		2645143	1					
ANR	2645283	UnaryOperationExpression	- ( 1 << ( EVEN_SHIFT - 1 ) )		2645143	1					
ANR	2645284	UnaryOperator	-		2645143	0					
ANR	2645285	ShiftExpression	1 << ( EVEN_SHIFT - 1 )		2645143	1		<<			
ANR	2645286	PrimaryExpression	1		2645143	0					
ANR	2645287	AdditiveExpression	EVEN_SHIFT - 1		2645143	1		-			
ANR	2645288	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645289	PrimaryExpression	1		2645143	1					
ANR	2645290	IfStatement	if ( nl < 0 )		2645143	1					
ANR	2645291	Condition	nl < 0	213:10:4461:4466	2645143	0	True				
ANR	2645292	RelationalExpression	nl < 0		2645143	0		<			
ANR	2645293	Identifier	nl		2645143	0					
ANR	2645294	PrimaryExpression	0		2645143	1					
ANR	2645295	ExpressionStatement	nl = - nl	213:18:4469:4477	2645143	1	True				
ANR	2645296	AssignmentExpression	nl = - nl		2645143	0		=			
ANR	2645297	Identifier	nl		2645143	0					
ANR	2645298	UnaryOperationExpression	- nl		2645143	1					
ANR	2645299	UnaryOperator	-		2645143	0					
ANR	2645300	Identifier	nl		2645143	1					
ANR	2645301	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 4 ) ) )		2645143	2					
ANR	2645302	Condition	nl < ( 1 << ( EVEN_SHIFT - 4 ) )	214:10:4489:4516	2645143	0	True				
ANR	2645303	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 4 ) )		2645143	0		<			
ANR	2645304	Identifier	nl		2645143	0					
ANR	2645305	ShiftExpression	1 << ( EVEN_SHIFT - 4 )		2645143	1		<<			
ANR	2645306	PrimaryExpression	1		2645143	0					
ANR	2645307	AdditiveExpression	EVEN_SHIFT - 4		2645143	1		-			
ANR	2645308	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645309	PrimaryExpression	4		2645143	1					
ANR	2645310	ExpressionStatement	rs --	214:40:4519:4523	2645143	1	True				
ANR	2645311	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645312	Identifier	rs		2645143	0					
ANR	2645313	IncDec	--		2645143	1					
ANR	2645314	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 5 ) ) )		2645143	3					
ANR	2645315	Condition	nl < ( 1 << ( EVEN_SHIFT - 5 ) )	215:10:4535:4562	2645143	0	True				
ANR	2645316	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 5 ) )		2645143	0		<			
ANR	2645317	Identifier	nl		2645143	0					
ANR	2645318	ShiftExpression	1 << ( EVEN_SHIFT - 5 )		2645143	1		<<			
ANR	2645319	PrimaryExpression	1		2645143	0					
ANR	2645320	AdditiveExpression	EVEN_SHIFT - 5		2645143	1		-			
ANR	2645321	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645322	PrimaryExpression	5		2645143	1					
ANR	2645323	ExpressionStatement	rs --	215:40:4565:4569	2645143	1	True				
ANR	2645324	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645325	Identifier	rs		2645143	0					
ANR	2645326	IncDec	--		2645143	1					
ANR	2645327	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 6 ) ) )		2645143	4					
ANR	2645328	Condition	nl < ( 1 << ( EVEN_SHIFT - 6 ) )	216:10:4581:4608	2645143	0	True				
ANR	2645329	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 6 ) )		2645143	0		<			
ANR	2645330	Identifier	nl		2645143	0					
ANR	2645331	ShiftExpression	1 << ( EVEN_SHIFT - 6 )		2645143	1		<<			
ANR	2645332	PrimaryExpression	1		2645143	0					
ANR	2645333	AdditiveExpression	EVEN_SHIFT - 6		2645143	1		-			
ANR	2645334	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645335	PrimaryExpression	6		2645143	1					
ANR	2645336	ExpressionStatement	rs --	216:40:4611:4615	2645143	1	True				
ANR	2645337	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645338	Identifier	rs		2645143	0					
ANR	2645339	IncDec	--		2645143	1					
ANR	2645340	ElseStatement	else		2645143	0					
ANR	2645341	CompoundStatement		32:4:939:939	2645143	0					
ANR	2645342	IfStatement	if ( nl < ( 3 << ( EVEN_SHIFT - 3 ) ) )		2645143	0					
ANR	2645343	Condition	nl < ( 3 << ( EVEN_SHIFT - 3 ) )	220:10:4646:4673	2645143	0	True				
ANR	2645344	RelationalExpression	nl < ( 3 << ( EVEN_SHIFT - 3 ) )		2645143	0		<			
ANR	2645345	Identifier	nl		2645143	0					
ANR	2645346	ShiftExpression	3 << ( EVEN_SHIFT - 3 )		2645143	1		<<			
ANR	2645347	PrimaryExpression	3		2645143	0					
ANR	2645348	AdditiveExpression	EVEN_SHIFT - 3		2645143	1		-			
ANR	2645349	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645350	PrimaryExpression	3		2645143	1					
ANR	2645351	ExpressionStatement	nl += 1 << ( EVEN_SHIFT - 2 )	220:40:4676:4703	2645143	1	True				
ANR	2645352	AssignmentExpression	nl += 1 << ( EVEN_SHIFT - 2 )		2645143	0		+=			
ANR	2645353	Identifier	nl		2645143	0					
ANR	2645354	ShiftExpression	1 << ( EVEN_SHIFT - 2 )		2645143	1		<<			
ANR	2645355	PrimaryExpression	1		2645143	0					
ANR	2645356	AdditiveExpression	EVEN_SHIFT - 2		2645143	1		-			
ANR	2645357	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645358	PrimaryExpression	2		2645143	1					
ANR	2645359	ExpressionStatement	nl = nl - ( 1 << ( EVEN_SHIFT - 1 ) )	221:6:4711:4744	2645143	1	True				
ANR	2645360	AssignmentExpression	nl = nl - ( 1 << ( EVEN_SHIFT - 1 ) )		2645143	0		=			
ANR	2645361	Identifier	nl		2645143	0					
ANR	2645362	AdditiveExpression	nl - ( 1 << ( EVEN_SHIFT - 1 ) )		2645143	1		-			
ANR	2645363	Identifier	nl		2645143	0					
ANR	2645364	ShiftExpression	1 << ( EVEN_SHIFT - 1 )		2645143	1		<<			
ANR	2645365	PrimaryExpression	1		2645143	0					
ANR	2645366	AdditiveExpression	EVEN_SHIFT - 1		2645143	1		-			
ANR	2645367	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645368	PrimaryExpression	1		2645143	1					
ANR	2645369	IfStatement	if ( nl < 0 )		2645143	2					
ANR	2645370	Condition	nl < 0	222:10:4756:4761	2645143	0	True				
ANR	2645371	RelationalExpression	nl < 0		2645143	0		<			
ANR	2645372	Identifier	nl		2645143	0					
ANR	2645373	PrimaryExpression	0		2645143	1					
ANR	2645374	ExpressionStatement	nl = - nl	222:18:4764:4772	2645143	1	True				
ANR	2645375	AssignmentExpression	nl = - nl		2645143	0		=			
ANR	2645376	Identifier	nl		2645143	0					
ANR	2645377	UnaryOperationExpression	- nl		2645143	1					
ANR	2645378	UnaryOperator	-		2645143	0					
ANR	2645379	Identifier	nl		2645143	1					
ANR	2645380	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 4 ) ) )		2645143	3					
ANR	2645381	Condition	nl < ( 1 << ( EVEN_SHIFT - 4 ) )	223:10:4784:4811	2645143	0	True				
ANR	2645382	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 4 ) )		2645143	0		<			
ANR	2645383	Identifier	nl		2645143	0					
ANR	2645384	ShiftExpression	1 << ( EVEN_SHIFT - 4 )		2645143	1		<<			
ANR	2645385	PrimaryExpression	1		2645143	0					
ANR	2645386	AdditiveExpression	EVEN_SHIFT - 4		2645143	1		-			
ANR	2645387	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645388	PrimaryExpression	4		2645143	1					
ANR	2645389	ExpressionStatement	rs --	223:40:4814:4818	2645143	1	True				
ANR	2645390	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645391	Identifier	rs		2645143	0					
ANR	2645392	IncDec	--		2645143	1					
ANR	2645393	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 5 ) ) )		2645143	4					
ANR	2645394	Condition	nl < ( 1 << ( EVEN_SHIFT - 5 ) )	224:10:4830:4857	2645143	0	True				
ANR	2645395	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 5 ) )		2645143	0		<			
ANR	2645396	Identifier	nl		2645143	0					
ANR	2645397	ShiftExpression	1 << ( EVEN_SHIFT - 5 )		2645143	1		<<			
ANR	2645398	PrimaryExpression	1		2645143	0					
ANR	2645399	AdditiveExpression	EVEN_SHIFT - 5		2645143	1		-			
ANR	2645400	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645401	PrimaryExpression	5		2645143	1					
ANR	2645402	ExpressionStatement	rs --	224:40:4860:4864	2645143	1	True				
ANR	2645403	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645404	Identifier	rs		2645143	0					
ANR	2645405	IncDec	--		2645143	1					
ANR	2645406	IfStatement	if ( nl < ( 1 << ( EVEN_SHIFT - 6 ) ) )		2645143	5					
ANR	2645407	Condition	nl < ( 1 << ( EVEN_SHIFT - 6 ) )	225:10:4876:4903	2645143	0	True				
ANR	2645408	RelationalExpression	nl < ( 1 << ( EVEN_SHIFT - 6 ) )		2645143	0		<			
ANR	2645409	Identifier	nl		2645143	0					
ANR	2645410	ShiftExpression	1 << ( EVEN_SHIFT - 6 )		2645143	1		<<			
ANR	2645411	PrimaryExpression	1		2645143	0					
ANR	2645412	AdditiveExpression	EVEN_SHIFT - 6		2645143	1		-			
ANR	2645413	Identifier	EVEN_SHIFT		2645143	0					
ANR	2645414	PrimaryExpression	6		2645143	1					
ANR	2645415	ExpressionStatement	rs --	225:40:4906:4910	2645143	1	True				
ANR	2645416	PostIncDecOperationExpression	rs --		2645143	0					
ANR	2645417	Identifier	rs		2645143	0					
ANR	2645418	IncDec	--		2645143	1					
ANR	2645419	ReturnStatement	return rs ;	227:2:4920:4929	2645143	2	True				
ANR	2645420	Identifier	rs		2645143	0					
ANR	2645421	ReturnType	static int		2645143	1					
ANR	2645422	Identifier	eb_compute_randshift		2645143	2					
ANR	2645423	ParameterList	"int nl , int rs_base , int do_shadows , int levels"		2645143	3					
ANR	2645424	Parameter	int nl	187:21:3645:3650	2645143	0	True				
ANR	2645425	ParameterType	int		2645143	0					
ANR	2645426	Identifier	nl		2645143	1					
ANR	2645427	Parameter	int rs_base	187:29:3653:3663	2645143	1	True				
ANR	2645428	ParameterType	int		2645143	0					
ANR	2645429	Identifier	rs_base		2645143	1					
ANR	2645430	Parameter	int do_shadows	187:42:3666:3679	2645143	2	True				
ANR	2645431	ParameterType	int		2645143	0					
ANR	2645432	Identifier	do_shadows		2645143	1					
ANR	2645433	Parameter	int levels	187:58:3682:3691	2645143	3	True				
ANR	2645434	ParameterType	int		2645143	0					
ANR	2645435	Identifier	levels		2645143	1					
ANR	2645436	CFGEntryNode	ENTRY		2645143		True				
ANR	2645437	CFGExitNode	EXIT		2645143		True				
ANR	2645438	Symbol	rs		2645143						
ANR	2645439	Symbol	EVEN_SHIFT		2645143						
ANR	2645440	Symbol	rs_base		2645143						
ANR	2645441	Symbol	do_shadows		2645143						
ANR	2645442	Symbol	nl		2645143						
ANR	2645443	Symbol	levels		2645143						
ANR	2645444	Function	eb_ctx_sse2_new	231:0:4950:7365							
ANR	2645445	FunctionDef	"eb_ctx_sse2_new (const EvenBetterParams * params , int start_plane , int end_plane)"		2645444	0					
ANR	2645446	CompoundStatement		233:0:5051:7365	2645444	0					
ANR	2645447	IdentifierDeclStatement	int xs = params -> source_width ;	234:2:5055:5084	2645444	0	True				
ANR	2645448	IdentifierDecl	xs = params -> source_width		2645444	0					
ANR	2645449	IdentifierDeclType	int		2645444	0					
ANR	2645450	Identifier	xs		2645444	1					
ANR	2645451	AssignmentExpression	xs = params -> source_width		2645444	2		=			
ANR	2645452	Identifier	xs		2645444	0					
ANR	2645453	PtrMemberAccess	params -> source_width		2645444	1					
ANR	2645454	Identifier	params		2645444	0					
ANR	2645455	Identifier	source_width		2645444	1					
ANR	2645456	IdentifierDeclStatement	int aspect2 = params -> aspect * params -> aspect ;	235:2:5088:5133	2645444	1	True				
ANR	2645457	IdentifierDecl	aspect2 = params -> aspect * params -> aspect		2645444	0					
ANR	2645458	IdentifierDeclType	int		2645444	0					
ANR	2645459	Identifier	aspect2		2645444	1					
ANR	2645460	AssignmentExpression	aspect2 = params -> aspect * params -> aspect		2645444	2		=			
ANR	2645461	Identifier	aspect2		2645444	0					
ANR	2645462	MultiplicativeExpression	params -> aspect * params -> aspect		2645444	1		*			
ANR	2645463	PtrMemberAccess	params -> aspect		2645444	0					
ANR	2645464	Identifier	params		2645444	0					
ANR	2645465	Identifier	aspect		2645444	1					
ANR	2645466	PtrMemberAccess	params -> aspect		2645444	1					
ANR	2645467	Identifier	params		2645444	0					
ANR	2645468	Identifier	aspect		2645444	1					
ANR	2645469	IdentifierDeclStatement	eb_ctx_sse2 * ctx ;	236:2:5137:5153	2645444	2	True				
ANR	2645470	IdentifierDecl	* ctx		2645444	0					
ANR	2645471	IdentifierDeclType	eb_ctx_sse2 *		2645444	0					
ANR	2645472	Identifier	ctx		2645444	1					
ANR	2645473	IdentifierDeclStatement	int i ;	237:2:5157:5162	2645444	3	True				
ANR	2645474	IdentifierDecl	i		2645444	0					
ANR	2645475	IdentifierDeclType	int		2645444	0					
ANR	2645476	Identifier	i		2645444	1					
ANR	2645477	IdentifierDeclStatement	double im_scale ;	238:2:5166:5181	2645444	4	True				
ANR	2645478	IdentifierDecl	im_scale		2645444	0					
ANR	2645479	IdentifierDeclType	double		2645444	0					
ANR	2645480	Identifier	im_scale		2645444	1					
ANR	2645481	IdentifierDeclStatement	float r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) ) ;	239:2:5185:5258	2645444	5	True				
ANR	2645482	IdentifierDecl	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2645444	0					
ANR	2645483	IdentifierDeclType	float		2645444	0					
ANR	2645484	Identifier	r_mul		2645444	1					
ANR	2645485	AssignmentExpression	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2645444	2		=			
ANR	2645486	Identifier	r_mul		2645444	0					
ANR	2645487	MultiplicativeExpression	1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2645444	1		/			
ANR	2645488	PrimaryExpression	1.0		2645444	0					
ANR	2645489	MultiplicativeExpression	params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) )		2645444	1		*			
ANR	2645490	PtrMemberAccess	params -> aspect		2645444	0					
ANR	2645491	Identifier	params		2645444	0					
ANR	2645492	Identifier	aspect		2645444	1					
ANR	2645493	ShiftExpression	1 << ( 6 - params -> even_c1_scale )		2645444	1		<<			
ANR	2645494	PrimaryExpression	1		2645444	0					
ANR	2645495	AdditiveExpression	6 - params -> even_c1_scale		2645444	1		-			
ANR	2645496	PrimaryExpression	6		2645444	0					
ANR	2645497	PtrMemberAccess	params -> even_c1_scale		2645444	1					
ANR	2645498	Identifier	params		2645444	0					
ANR	2645499	Identifier	even_c1_scale		2645444	1					
ANR	2645500	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	240:2:5262:5305	2645444	6	True				
ANR	2645501	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		2645444	0					
ANR	2645502	IdentifierDeclType	double		2645444	0					
ANR	2645503	Identifier	rbscale		2645444	1					
ANR	2645504	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		2645444	2		=			
ANR	2645505	Identifier	rbscale		2645444	0					
ANR	2645506	CallExpression	eb_compute_rbscale ( params )		2645444	1					
ANR	2645507	Callee	eb_compute_rbscale		2645444	0					
ANR	2645508	Identifier	eb_compute_rbscale		2645444	0					
ANR	2645509	ArgumentList	params		2645444	1					
ANR	2645510	Argument	params		2645444	0					
ANR	2645511	Identifier	params		2645444	0					
ANR	2645512	IdentifierDeclStatement	int rs_base ;	241:2:5309:5320	2645444	7	True				
ANR	2645513	IdentifierDecl	rs_base		2645444	0					
ANR	2645514	IdentifierDeclType	int		2645444	0					
ANR	2645515	Identifier	rs_base		2645444	1					
ANR	2645516	ExpressionStatement	"ctx = ( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"	243:2:5325:5388	2645444	8	True				
ANR	2645517	AssignmentExpression	"ctx = ( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		2645444	0		=			
ANR	2645518	Identifier	ctx		2645444	0					
ANR	2645519	CastExpression	"( eb_ctx_sse2 * ) eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		2645444	1					
ANR	2645520	CastTarget	eb_ctx_sse2 *		2645444	0					
ANR	2645521	CallExpression	"eb_malloc_aligned ( sizeof ( eb_ctx_sse2 ) , 16 )"		2645444	1					
ANR	2645522	Callee	eb_malloc_aligned		2645444	0					
ANR	2645523	Identifier	eb_malloc_aligned		2645444	0					
ANR	2645524	ArgumentList	sizeof ( eb_ctx_sse2 )		2645444	1					
ANR	2645525	Argument	sizeof ( eb_ctx_sse2 )		2645444	0					
ANR	2645526	SizeofExpression	sizeof ( eb_ctx_sse2 )		2645444	0					
ANR	2645527	Sizeof	sizeof		2645444	0					
ANR	2645528	SizeofOperand	eb_ctx_sse2		2645444	1					
ANR	2645529	Argument	16		2645444	1					
ANR	2645530	PrimaryExpression	16		2645444	0					
ANR	2645531	ExpressionStatement	ctx -> xs = xs	244:2:5392:5404	2645444	9	True				
ANR	2645532	AssignmentExpression	ctx -> xs = xs		2645444	0		=			
ANR	2645533	PtrMemberAccess	ctx -> xs		2645444	0					
ANR	2645534	Identifier	ctx		2645444	0					
ANR	2645535	Identifier	xs		2645444	1					
ANR	2645536	Identifier	xs		2645444	1					
ANR	2645537	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		2645444	10					
ANR	2645538	ForInit	i = 0 ;	245:7:5413:5418	2645444	0	True				
ANR	2645539	AssignmentExpression	i = 0		2645444	0		=			
ANR	2645540	Identifier	i		2645444	0					
ANR	2645541	PrimaryExpression	0		2645444	1					
ANR	2645542	Condition	i < 4	245:14:5420:5424	2645444	1	True				
ANR	2645543	RelationalExpression	i < 4		2645444	0		<			
ANR	2645544	Identifier	i		2645444	0					
ANR	2645545	PrimaryExpression	4		2645444	1					
ANR	2645546	PostIncDecOperationExpression	i ++	245:21:5427:5429	2645444	2	True				
ANR	2645547	Identifier	i		2645444	0					
ANR	2645548	IncDec	++		2645444	1					
ANR	2645549	CompoundStatement		14:4:384:384	2645444	3					
ANR	2645550	ExpressionStatement	ctx -> e [ i ] = 0.0	247:6:5444:5459	2645444	0	True				
ANR	2645551	AssignmentExpression	ctx -> e [ i ] = 0.0		2645444	0		=			
ANR	2645552	ArrayIndexing	ctx -> e [ i ]		2645444	0					
ANR	2645553	PtrMemberAccess	ctx -> e		2645444	0					
ANR	2645554	Identifier	ctx		2645444	0					
ANR	2645555	Identifier	e		2645444	1					
ANR	2645556	Identifier	i		2645444	1					
ANR	2645557	PrimaryExpression	0.0		2645444	1					
ANR	2645558	ExpressionStatement	ctx -> e_i_1 [ i ] = 0.0	248:6:5467:5486	2645444	1	True				
ANR	2645559	AssignmentExpression	ctx -> e_i_1 [ i ] = 0.0		2645444	0		=			
ANR	2645560	ArrayIndexing	ctx -> e_i_1 [ i ]		2645444	0					
ANR	2645561	PtrMemberAccess	ctx -> e_i_1		2645444	0					
ANR	2645562	Identifier	ctx		2645444	0					
ANR	2645563	Identifier	e_i_1		2645444	1					
ANR	2645564	Identifier	i		2645444	1					
ANR	2645565	PrimaryExpression	0.0		2645444	1					
ANR	2645566	ExpressionStatement	ctx -> r [ i ] = 0	249:6:5494:5507	2645444	2	True				
ANR	2645567	AssignmentExpression	ctx -> r [ i ] = 0		2645444	0		=			
ANR	2645568	ArrayIndexing	ctx -> r [ i ]		2645444	0					
ANR	2645569	PtrMemberAccess	ctx -> r		2645444	0					
ANR	2645570	Identifier	ctx		2645444	0					
ANR	2645571	Identifier	r		2645444	1					
ANR	2645572	Identifier	i		2645444	1					
ANR	2645573	PrimaryExpression	0		2645444	1					
ANR	2645574	ExpressionStatement	ctx -> a [ i ] = 1	250:6:5515:5528	2645444	3	True				
ANR	2645575	AssignmentExpression	ctx -> a [ i ] = 1		2645444	0		=			
ANR	2645576	ArrayIndexing	ctx -> a [ i ]		2645444	0					
ANR	2645577	PtrMemberAccess	ctx -> a		2645444	0					
ANR	2645578	Identifier	ctx		2645444	0					
ANR	2645579	Identifier	a		2645444	1					
ANR	2645580	Identifier	i		2645444	1					
ANR	2645581	PrimaryExpression	1		2645444	1					
ANR	2645582	ExpressionStatement	ctx -> b [ i ] = aspect2	251:6:5536:5555	2645444	4	True				
ANR	2645583	AssignmentExpression	ctx -> b [ i ] = aspect2		2645444	0		=			
ANR	2645584	ArrayIndexing	ctx -> b [ i ]		2645444	0					
ANR	2645585	PtrMemberAccess	ctx -> b		2645444	0					
ANR	2645586	Identifier	ctx		2645444	0					
ANR	2645587	Identifier	b		2645444	1					
ANR	2645588	Identifier	i		2645444	1					
ANR	2645589	Identifier	aspect2		2645444	1					
ANR	2645590	ExpressionStatement	ctx -> ones [ i ] = 1	252:6:5563:5579	2645444	5	True				
ANR	2645591	AssignmentExpression	ctx -> ones [ i ] = 1		2645444	0		=			
ANR	2645592	ArrayIndexing	ctx -> ones [ i ]		2645444	0					
ANR	2645593	PtrMemberAccess	ctx -> ones		2645444	0					
ANR	2645594	Identifier	ctx		2645444	0					
ANR	2645595	Identifier	ones		2645444	1					
ANR	2645596	Identifier	i		2645444	1					
ANR	2645597	PrimaryExpression	1		2645444	1					
ANR	2645598	ExpressionStatement	ctx -> twos [ i ] = 2	253:6:5587:5603	2645444	6	True				
ANR	2645599	AssignmentExpression	ctx -> twos [ i ] = 2		2645444	0		=			
ANR	2645600	ArrayIndexing	ctx -> twos [ i ]		2645444	0					
ANR	2645601	PtrMemberAccess	ctx -> twos		2645444	0					
ANR	2645602	Identifier	ctx		2645444	0					
ANR	2645603	Identifier	twos		2645444	1					
ANR	2645604	Identifier	i		2645444	1					
ANR	2645605	PrimaryExpression	2		2645444	1					
ANR	2645606	ExpressionStatement	ctx -> aspect2 [ i ] = aspect2	254:6:5611:5636	2645444	7	True				
ANR	2645607	AssignmentExpression	ctx -> aspect2 [ i ] = aspect2		2645444	0		=			
ANR	2645608	ArrayIndexing	ctx -> aspect2 [ i ]		2645444	0					
ANR	2645609	PtrMemberAccess	ctx -> aspect2		2645444	0					
ANR	2645610	Identifier	ctx		2645444	0					
ANR	2645611	Identifier	aspect2		2645444	1					
ANR	2645612	Identifier	i		2645444	1					
ANR	2645613	Identifier	aspect2		2645444	1					
ANR	2645614	ExpressionStatement	ctx -> ohi [ i ] = params -> levels - 1	255:6:5644:5676	2645444	8	True				
ANR	2645615	AssignmentExpression	ctx -> ohi [ i ] = params -> levels - 1		2645444	0		=			
ANR	2645616	ArrayIndexing	ctx -> ohi [ i ]		2645444	0					
ANR	2645617	PtrMemberAccess	ctx -> ohi		2645444	0					
ANR	2645618	Identifier	ctx		2645444	0					
ANR	2645619	Identifier	ohi		2645444	1					
ANR	2645620	Identifier	i		2645444	1					
ANR	2645621	AdditiveExpression	params -> levels - 1		2645444	1		-			
ANR	2645622	PtrMemberAccess	params -> levels		2645444	0					
ANR	2645623	Identifier	params		2645444	0					
ANR	2645624	Identifier	levels		2645444	1					
ANR	2645625	PrimaryExpression	1		2645444	1					
ANR	2645626	ExpressionStatement	ctx -> ehi [ i ] = 1.1	256:6:5684:5701	2645444	9	True				
ANR	2645627	AssignmentExpression	ctx -> ehi [ i ] = 1.1		2645444	0		=			
ANR	2645628	ArrayIndexing	ctx -> ehi [ i ]		2645444	0					
ANR	2645629	PtrMemberAccess	ctx -> ehi		2645444	0					
ANR	2645630	Identifier	ctx		2645444	0					
ANR	2645631	Identifier	ehi		2645444	1					
ANR	2645632	Identifier	i		2645444	1					
ANR	2645633	PrimaryExpression	1.1		2645444	1					
ANR	2645634	ExpressionStatement	ctx -> elo [ i ] = - 0.1	257:6:5709:5727	2645444	10	True				
ANR	2645635	AssignmentExpression	ctx -> elo [ i ] = - 0.1		2645444	0		=			
ANR	2645636	ArrayIndexing	ctx -> elo [ i ]		2645444	0					
ANR	2645637	PtrMemberAccess	ctx -> elo		2645444	0					
ANR	2645638	Identifier	ctx		2645444	0					
ANR	2645639	Identifier	elo		2645444	1					
ANR	2645640	Identifier	i		2645444	1					
ANR	2645641	UnaryOperationExpression	- 0.1		2645444	1					
ANR	2645642	UnaryOperator	-		2645444	0					
ANR	2645643	PrimaryExpression	0.1		2645444	1					
ANR	2645644	ExpressionStatement	ctx -> r_mul [ i ] = r_mul	258:6:5735:5756	2645444	11	True				
ANR	2645645	AssignmentExpression	ctx -> r_mul [ i ] = r_mul		2645444	0		=			
ANR	2645646	ArrayIndexing	ctx -> r_mul [ i ]		2645444	0					
ANR	2645647	PtrMemberAccess	ctx -> r_mul		2645444	0					
ANR	2645648	Identifier	ctx		2645444	0					
ANR	2645649	Identifier	r_mul		2645444	1					
ANR	2645650	Identifier	i		2645444	1					
ANR	2645651	Identifier	r_mul		2645444	1					
ANR	2645652	ExpressionStatement	ctx -> seed1 [ i ] = ( i << 8 ) + 0x7000	259:6:5764:5797	2645444	12	True				
ANR	2645653	AssignmentExpression	ctx -> seed1 [ i ] = ( i << 8 ) + 0x7000		2645444	0		=			
ANR	2645654	ArrayIndexing	ctx -> seed1 [ i ]		2645444	0					
ANR	2645655	PtrMemberAccess	ctx -> seed1		2645444	0					
ANR	2645656	Identifier	ctx		2645444	0					
ANR	2645657	Identifier	seed1		2645444	1					
ANR	2645658	Identifier	i		2645444	1					
ANR	2645659	AdditiveExpression	( i << 8 ) + 0x7000		2645444	1		+			
ANR	2645660	ShiftExpression	i << 8		2645444	0		<<			
ANR	2645661	Identifier	i		2645444	0					
ANR	2645662	PrimaryExpression	8		2645444	1					
ANR	2645663	PrimaryExpression	0x7000		2645444	1					
ANR	2645664	ExpressionStatement	ctx -> seed2 [ i ] = ( i << 16 ) + 0x9000	260:6:5805:5839	2645444	13	True				
ANR	2645665	AssignmentExpression	ctx -> seed2 [ i ] = ( i << 16 ) + 0x9000		2645444	0		=			
ANR	2645666	ArrayIndexing	ctx -> seed2 [ i ]		2645444	0					
ANR	2645667	PtrMemberAccess	ctx -> seed2		2645444	0					
ANR	2645668	Identifier	ctx		2645444	0					
ANR	2645669	Identifier	seed2		2645444	1					
ANR	2645670	Identifier	i		2645444	1					
ANR	2645671	AdditiveExpression	( i << 16 ) + 0x9000		2645444	1		+			
ANR	2645672	ShiftExpression	i << 16		2645444	0		<<			
ANR	2645673	Identifier	i		2645444	0					
ANR	2645674	PrimaryExpression	16		2645444	1					
ANR	2645675	PrimaryExpression	0x9000		2645444	1					
ANR	2645676	ExpressionStatement	ctx -> kernel [ 0 ] = 1.0 / 16	262:2:5849:5874	2645444	11	True				
ANR	2645677	AssignmentExpression	ctx -> kernel [ 0 ] = 1.0 / 16		2645444	0		=			
ANR	2645678	ArrayIndexing	ctx -> kernel [ 0 ]		2645444	0					
ANR	2645679	PtrMemberAccess	ctx -> kernel		2645444	0					
ANR	2645680	Identifier	ctx		2645444	0					
ANR	2645681	Identifier	kernel		2645444	1					
ANR	2645682	PrimaryExpression	0		2645444	1					
ANR	2645683	MultiplicativeExpression	1.0 / 16		2645444	1		/			
ANR	2645684	PrimaryExpression	1.0		2645444	0					
ANR	2645685	PrimaryExpression	16		2645444	1					
ANR	2645686	ExpressionStatement	ctx -> kernel [ 1 ] = 3.0 / 16	263:2:5878:5903	2645444	12	True				
ANR	2645687	AssignmentExpression	ctx -> kernel [ 1 ] = 3.0 / 16		2645444	0		=			
ANR	2645688	ArrayIndexing	ctx -> kernel [ 1 ]		2645444	0					
ANR	2645689	PtrMemberAccess	ctx -> kernel		2645444	0					
ANR	2645690	Identifier	ctx		2645444	0					
ANR	2645691	Identifier	kernel		2645444	1					
ANR	2645692	PrimaryExpression	1		2645444	1					
ANR	2645693	MultiplicativeExpression	3.0 / 16		2645444	1		/			
ANR	2645694	PrimaryExpression	3.0		2645444	0					
ANR	2645695	PrimaryExpression	16		2645444	1					
ANR	2645696	ExpressionStatement	ctx -> kernel [ 2 ] = 5.0 / 16	264:2:5907:5932	2645444	13	True				
ANR	2645697	AssignmentExpression	ctx -> kernel [ 2 ] = 5.0 / 16		2645444	0		=			
ANR	2645698	ArrayIndexing	ctx -> kernel [ 2 ]		2645444	0					
ANR	2645699	PtrMemberAccess	ctx -> kernel		2645444	0					
ANR	2645700	Identifier	ctx		2645444	0					
ANR	2645701	Identifier	kernel		2645444	1					
ANR	2645702	PrimaryExpression	2		2645444	1					
ANR	2645703	MultiplicativeExpression	5.0 / 16		2645444	1		/			
ANR	2645704	PrimaryExpression	5.0		2645444	0					
ANR	2645705	PrimaryExpression	16		2645444	1					
ANR	2645706	ExpressionStatement	ctx -> kernel [ 3 ] = 7.0 / 16	265:2:5936:5961	2645444	14	True				
ANR	2645707	AssignmentExpression	ctx -> kernel [ 3 ] = 7.0 / 16		2645444	0		=			
ANR	2645708	ArrayIndexing	ctx -> kernel [ 3 ]		2645444	0					
ANR	2645709	PtrMemberAccess	ctx -> kernel		2645444	0					
ANR	2645710	Identifier	ctx		2645444	0					
ANR	2645711	Identifier	kernel		2645444	1					
ANR	2645712	PrimaryExpression	3		2645444	1					
ANR	2645713	MultiplicativeExpression	7.0 / 16		2645444	1		/			
ANR	2645714	PrimaryExpression	7.0		2645444	0					
ANR	2645715	PrimaryExpression	16		2645444	1					
ANR	2645716	ExpressionStatement	im_scale = ( params -> levels - 1 ) * 1.0 / ( 1 << 24 )	267:2:5966:6015	2645444	15	True				
ANR	2645717	AssignmentExpression	im_scale = ( params -> levels - 1 ) * 1.0 / ( 1 << 24 )		2645444	0		=			
ANR	2645718	Identifier	im_scale		2645444	0					
ANR	2645719	MultiplicativeExpression	( params -> levels - 1 ) * 1.0 / ( 1 << 24 )		2645444	1		*			
ANR	2645720	AdditiveExpression	params -> levels - 1		2645444	0		-			
ANR	2645721	PtrMemberAccess	params -> levels		2645444	0					
ANR	2645722	Identifier	params		2645444	0					
ANR	2645723	Identifier	levels		2645444	1					
ANR	2645724	PrimaryExpression	1		2645444	1					
ANR	2645725	MultiplicativeExpression	1.0 / ( 1 << 24 )		2645444	1		/			
ANR	2645726	PrimaryExpression	1.0		2645444	0					
ANR	2645727	ShiftExpression	1 << 24		2645444	1		<<			
ANR	2645728	PrimaryExpression	1		2645444	0					
ANR	2645729	PrimaryExpression	24		2645444	1					
ANR	2645730	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	268:2:6019:6065	2645444	16	True				
ANR	2645731	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		2645444	0		=			
ANR	2645732	Identifier	rs_base		2645444	0					
ANR	2645733	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		2645444	1		-			
ANR	2645734	PrimaryExpression	35		2645444	0					
ANR	2645735	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		2645444	1		-			
ANR	2645736	Identifier	EVEN_SHIFT		2645444	0					
ANR	2645737	PtrMemberAccess	params -> rand_scale		2645444	1					
ANR	2645738	Identifier	params		2645444	0					
ANR	2645739	Identifier	rand_scale		2645444	1					
ANR	2645740	ForStatement	for ( i = start_plane ; i < end_plane ; i ++ )		2645444	17					
ANR	2645741	ForInit	i = start_plane ;	270:7:6075:6090	2645444	0	True				
ANR	2645742	AssignmentExpression	i = start_plane		2645444	0		=			
ANR	2645743	Identifier	i		2645444	0					
ANR	2645744	Identifier	start_plane		2645444	1					
ANR	2645745	Condition	i < end_plane	270:24:6092:6104	2645444	1	True				
ANR	2645746	RelationalExpression	i < end_plane		2645444	0		<			
ANR	2645747	Identifier	i		2645444	0					
ANR	2645748	Identifier	end_plane		2645444	1					
ANR	2645749	PostIncDecOperationExpression	i ++	270:39:6107:6109	2645444	2	True				
ANR	2645750	Identifier	i		2645444	0					
ANR	2645751	IncDec	++		2645444	1					
ANR	2645752	CompoundStatement		41:6:1146:1151	2645444	3					
ANR	2645753	IdentifierDeclStatement	float * lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 ) ;	272:6:6124:6190	2645444	0	True				
ANR	2645754	IdentifierDecl	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2645444	0					
ANR	2645755	IdentifierDeclType	float *		2645444	0					
ANR	2645756	Identifier	lut		2645444	1					
ANR	2645757	AssignmentExpression	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2645444	2		=			
ANR	2645758	Identifier	lut		2645444	0					
ANR	2645759	CastExpression	( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2645444	1					
ANR	2645760	CastTarget	float *		2645444	0					
ANR	2645761	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2645444	1					
ANR	2645762	Callee	malloc		2645444	0					
ANR	2645763	Identifier	malloc		2645444	0					
ANR	2645764	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2645444	1					
ANR	2645765	Argument	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2645444	0					
ANR	2645766	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2645444	0		*			
ANR	2645767	AdditiveExpression	ET_SRC_MAX + 1		2645444	0		+			
ANR	2645768	Identifier	ET_SRC_MAX		2645444	0					
ANR	2645769	PrimaryExpression	1		2645444	1					
ANR	2645770	MultiplicativeExpression	sizeof ( float ) * 3		2645444	1		*			
ANR	2645771	SizeofExpression	sizeof ( float )		2645444	0					
ANR	2645772	Sizeof	sizeof		2645444	0					
ANR	2645773	SizeofOperand	float		2645444	1					
ANR	2645774	PrimaryExpression	3		2645444	1					
ANR	2645775	IdentifierDeclStatement	int j ;	273:6:6198:6203	2645444	1	True				
ANR	2645776	IdentifierDecl	j		2645444	0					
ANR	2645777	IdentifierDeclType	int		2645444	0					
ANR	2645778	Identifier	j		2645444	1					
ANR	2645779	ExpressionStatement	ctx -> luts [ i - start_plane ] = lut	274:6:6211:6243	2645444	2	True				
ANR	2645780	AssignmentExpression	ctx -> luts [ i - start_plane ] = lut		2645444	0		=			
ANR	2645781	ArrayIndexing	ctx -> luts [ i - start_plane ]		2645444	0					
ANR	2645782	PtrMemberAccess	ctx -> luts		2645444	0					
ANR	2645783	Identifier	ctx		2645444	0					
ANR	2645784	Identifier	luts		2645444	1					
ANR	2645785	AdditiveExpression	i - start_plane		2645444	1		-			
ANR	2645786	Identifier	i		2645444	0					
ANR	2645787	Identifier	start_plane		2645444	1					
ANR	2645788	Identifier	lut		2645444	1					
ANR	2645789	ForStatement	for ( j = 0 ; j < ET_SRC_MAX + 1 ; j ++ )		2645444	3					
ANR	2645790	ForInit	j = 0 ;	276:11:6257:6262	2645444	0	True				
ANR	2645791	AssignmentExpression	j = 0		2645444	0		=			
ANR	2645792	Identifier	j		2645444	0					
ANR	2645793	PrimaryExpression	0		2645444	1					
ANR	2645794	Condition	j < ET_SRC_MAX + 1	276:18:6264:6281	2645444	1	True				
ANR	2645795	RelationalExpression	j < ET_SRC_MAX + 1		2645444	0		<			
ANR	2645796	Identifier	j		2645444	0					
ANR	2645797	AdditiveExpression	ET_SRC_MAX + 1		2645444	1		+			
ANR	2645798	Identifier	ET_SRC_MAX		2645444	0					
ANR	2645799	PrimaryExpression	1		2645444	1					
ANR	2645800	PostIncDecOperationExpression	j ++	276:38:6284:6286	2645444	2	True				
ANR	2645801	Identifier	j		2645444	0					
ANR	2645802	IncDec	++		2645444	1					
ANR	2645803	CompoundStatement		47:10:1323:1333	2645444	3					
ANR	2645804	IdentifierDeclStatement	double g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale ;	278:10:6309:6363	2645444	0	True				
ANR	2645805	IdentifierDecl	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2645444	0					
ANR	2645806	IdentifierDeclType	double		2645444	0					
ANR	2645807	Identifier	g		2645444	1					
ANR	2645808	AssignmentExpression	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2645444	2		=			
ANR	2645809	Identifier	g		2645444	0					
ANR	2645810	MultiplicativeExpression	( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2645444	1		*			
ANR	2645811	AdditiveExpression	( 1 << 24 ) - params -> luts [ i ] [ j ]		2645444	0		-			
ANR	2645812	ShiftExpression	1 << 24		2645444	0		<<			
ANR	2645813	PrimaryExpression	1		2645444	0					
ANR	2645814	PrimaryExpression	24		2645444	1					
ANR	2645815	ArrayIndexing	params -> luts [ i ] [ j ]		2645444	1					
ANR	2645816	ArrayIndexing	params -> luts [ i ]		2645444	0					
ANR	2645817	PtrMemberAccess	params -> luts		2645444	0					
ANR	2645818	Identifier	params		2645444	0					
ANR	2645819	Identifier	luts		2645444	1					
ANR	2645820	Identifier	i		2645444	1					
ANR	2645821	Identifier	j		2645444	1					
ANR	2645822	Identifier	im_scale		2645444	1					
ANR	2645823	IdentifierDeclStatement	"int nl , rs ;"	279:10:6375:6385	2645444	1	True				
ANR	2645824	IdentifierDecl	nl		2645444	0					
ANR	2645825	IdentifierDeclType	int		2645444	0					
ANR	2645826	Identifier	nl		2645444	1					
ANR	2645827	IdentifierDecl	rs		2645444	1					
ANR	2645828	IdentifierDeclType	int		2645444	0					
ANR	2645829	Identifier	rs		2645444	1					
ANR	2645830	ExpressionStatement	lut [ j * 3 ] = g	281:10:6398:6412	2645444	2	True				
ANR	2645831	AssignmentExpression	lut [ j * 3 ] = g		2645444	0		=			
ANR	2645832	ArrayIndexing	lut [ j * 3 ]		2645444	0					
ANR	2645833	Identifier	lut		2645444	0					
ANR	2645834	MultiplicativeExpression	j * 3		2645444	1		*			
ANR	2645835	Identifier	j		2645444	0					
ANR	2645836	PrimaryExpression	3		2645444	1					
ANR	2645837	Identifier	g		2645444	1					
ANR	2645838	IfStatement	if ( g == 0.0 )		2645444	3					
ANR	2645839	Condition	g == 0.0	282:14:6428:6435	2645444	0	True				
ANR	2645840	EqualityExpression	g == 0.0		2645444	0		==			
ANR	2645841	Identifier	g		2645444	0					
ANR	2645842	PrimaryExpression	0.0		2645444	1					
ANR	2645843	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5	283:12:6450:6470	2645444	1	True				
ANR	2645844	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5		2645444	0		=			
ANR	2645845	ArrayIndexing	lut [ j * 3 + 1 ]		2645444	0					
ANR	2645846	Identifier	lut		2645444	0					
ANR	2645847	AdditiveExpression	j * 3 + 1		2645444	1		+			
ANR	2645848	MultiplicativeExpression	j * 3		2645444	0		*			
ANR	2645849	Identifier	j		2645444	0					
ANR	2645850	PrimaryExpression	3		2645444	1					
ANR	2645851	PrimaryExpression	1		2645444	1					
ANR	2645852	PrimaryExpression	0.5		2645444	1					
ANR	2645853	ElseStatement	else		2645444	0					
ANR	2645854	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g	285:12:6499:6541	2645444	0	True				
ANR	2645855	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g		2645444	0		=			
ANR	2645856	ArrayIndexing	lut [ j * 3 + 1 ]		2645444	0					
ANR	2645857	Identifier	lut		2645444	0					
ANR	2645858	AdditiveExpression	j * 3 + 1		2645444	1		+			
ANR	2645859	MultiplicativeExpression	j * 3		2645444	0		*			
ANR	2645860	Identifier	j		2645444	0					
ANR	2645861	PrimaryExpression	3		2645444	1					
ANR	2645862	PrimaryExpression	1		2645444	1					
ANR	2645863	AdditiveExpression	0.5 - r_mul * rbscale / g		2645444	1		-			
ANR	2645864	PrimaryExpression	0.5		2645444	0					
ANR	2645865	MultiplicativeExpression	r_mul * rbscale / g		2645444	1		*			
ANR	2645866	Identifier	r_mul		2645444	0					
ANR	2645867	MultiplicativeExpression	rbscale / g		2645444	1		/			
ANR	2645868	Identifier	rbscale		2645444	0					
ANR	2645869	Identifier	g		2645444	1					
ANR	2645870	ExpressionStatement	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )	287:10:6554:6603	2645444	4	True				
ANR	2645871	AssignmentExpression	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		2645444	0		=			
ANR	2645872	Identifier	nl		2645444	0					
ANR	2645873	MultiplicativeExpression	( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		2645444	1		*			
ANR	2645874	AdditiveExpression	params -> levels - 1 - g		2645444	0		-			
ANR	2645875	PtrMemberAccess	params -> levels		2645444	0					
ANR	2645876	Identifier	params		2645444	0					
ANR	2645877	Identifier	levels		2645444	1					
ANR	2645878	AdditiveExpression	1 - g		2645444	1		-			
ANR	2645879	PrimaryExpression	1		2645444	0					
ANR	2645880	Identifier	g		2645444	1					
ANR	2645881	ShiftExpression	1 << EVEN_SHIFT		2645444	1		<<			
ANR	2645882	PrimaryExpression	1		2645444	0					
ANR	2645883	Identifier	EVEN_SHIFT		2645444	1					
ANR	2645884	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"	288:10:6615:6725	2645444	5	True				
ANR	2645885	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		2645444	0		=			
ANR	2645886	Identifier	rs		2645444	0					
ANR	2645887	CallExpression	"eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		2645444	1					
ANR	2645888	Callee	eb_compute_randshift		2645444	0					
ANR	2645889	Identifier	eb_compute_randshift		2645444	0					
ANR	2645890	ArgumentList	nl		2645444	1					
ANR	2645891	Argument	nl		2645444	0					
ANR	2645892	Identifier	nl		2645444	0					
ANR	2645893	Argument	rs_base		2645444	1					
ANR	2645894	Identifier	rs_base		2645444	0					
ANR	2645895	Argument	params -> do_shadows		2645444	2					
ANR	2645896	PtrMemberAccess	params -> do_shadows		2645444	0					
ANR	2645897	Identifier	params		2645444	0					
ANR	2645898	Identifier	do_shadows		2645444	1					
ANR	2645899	Argument	params -> levels		2645444	3					
ANR	2645900	PtrMemberAccess	params -> levels		2645444	0					
ANR	2645901	Identifier	params		2645444	0					
ANR	2645902	Identifier	levels		2645444	1					
ANR	2645903	ExpressionStatement	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )	291:10:6738:6790	2645444	6	True				
ANR	2645904	AssignmentExpression	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		2645444	0		=			
ANR	2645905	ArrayIndexing	lut [ j * 3 + 2 ]		2645444	0					
ANR	2645906	Identifier	lut		2645444	0					
ANR	2645907	AdditiveExpression	j * 3 + 2		2645444	1		+			
ANR	2645908	MultiplicativeExpression	j * 3		2645444	0		*			
ANR	2645909	Identifier	j		2645444	0					
ANR	2645910	PrimaryExpression	3		2645444	1					
ANR	2645911	PrimaryExpression	2		2645444	1					
ANR	2645912	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		2645444	1		/			
ANR	2645913	PrimaryExpression	1.0		2645444	0					
ANR	2645914	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs )		2645444	1		/			
ANR	2645915	ShiftExpression	1 << EVEN_SHIFT		2645444	0		<<			
ANR	2645916	PrimaryExpression	1		2645444	0					
ANR	2645917	Identifier	EVEN_SHIFT		2645444	1					
ANR	2645918	ShiftExpression	1 << rs		2645444	1		<<			
ANR	2645919	PrimaryExpression	1		2645444	0					
ANR	2645920	Identifier	rs		2645444	1					
ANR	2645921	ForStatement	for ( i = i - start_plane ; i < 4 ; i ++ )		2645444	18					
ANR	2645922	ForInit	i = i - start_plane ;	294:7:6815:6834	2645444	0	True				
ANR	2645923	AssignmentExpression	i = i - start_plane		2645444	0		=			
ANR	2645924	Identifier	i		2645444	0					
ANR	2645925	AdditiveExpression	i - start_plane		2645444	1		-			
ANR	2645926	Identifier	i		2645444	0					
ANR	2645927	Identifier	start_plane		2645444	1					
ANR	2645928	Condition	i < 4	294:28:6836:6840	2645444	1	True				
ANR	2645929	RelationalExpression	i < 4		2645444	0		<			
ANR	2645930	Identifier	i		2645444	0					
ANR	2645931	PrimaryExpression	4		2645444	1					
ANR	2645932	PostIncDecOperationExpression	i ++	294:35:6843:6845	2645444	2	True				
ANR	2645933	Identifier	i		2645444	0					
ANR	2645934	IncDec	++		2645444	1					
ANR	2645935	ExpressionStatement	ctx -> luts [ i ] = NULL	295:4:6852:6871	2645444	3	True				
ANR	2645936	AssignmentExpression	ctx -> luts [ i ] = NULL		2645444	0		=			
ANR	2645937	ArrayIndexing	ctx -> luts [ i ]		2645444	0					
ANR	2645938	PtrMemberAccess	ctx -> luts		2645444	0					
ANR	2645939	Identifier	ctx		2645444	0					
ANR	2645940	Identifier	luts		2645444	1					
ANR	2645941	Identifier	i		2645444	1					
ANR	2645942	Identifier	NULL		2645444	1					
ANR	2645943	ExpressionStatement	"ctx -> iir_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	297:2:6876:6936	2645444	19	True				
ANR	2645944	AssignmentExpression	"ctx -> iir_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	0		=			
ANR	2645945	PtrMemberAccess	ctx -> iir_line		2645444	0					
ANR	2645946	Identifier	ctx		2645444	0					
ANR	2645947	Identifier	iir_line		2645444	1					
ANR	2645948	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645949	CastTarget	int *		2645444	0					
ANR	2645950	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645951	Callee	eb_malloc_aligned		2645444	0					
ANR	2645952	Identifier	eb_malloc_aligned		2645444	0					
ANR	2645953	ArgumentList	16 * ( xs + 32 )		2645444	1					
ANR	2645954	Argument	16 * ( xs + 32 )		2645444	0					
ANR	2645955	MultiplicativeExpression	16 * ( xs + 32 )		2645444	0		*			
ANR	2645956	PrimaryExpression	16		2645444	0					
ANR	2645957	AdditiveExpression	xs + 32		2645444	1		+			
ANR	2645958	Identifier	xs		2645444	0					
ANR	2645959	PrimaryExpression	32		2645444	1					
ANR	2645960	Argument	16		2645444	1					
ANR	2645961	PrimaryExpression	16		2645444	0					
ANR	2645962	ExpressionStatement	"ctx -> a_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	298:2:6940:6998	2645444	20	True				
ANR	2645963	AssignmentExpression	"ctx -> a_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	0		=			
ANR	2645964	PtrMemberAccess	ctx -> a_line		2645444	0					
ANR	2645965	Identifier	ctx		2645444	0					
ANR	2645966	Identifier	a_line		2645444	1					
ANR	2645967	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645968	CastTarget	int *		2645444	0					
ANR	2645969	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645970	Callee	eb_malloc_aligned		2645444	0					
ANR	2645971	Identifier	eb_malloc_aligned		2645444	0					
ANR	2645972	ArgumentList	16 * ( xs + 32 )		2645444	1					
ANR	2645973	Argument	16 * ( xs + 32 )		2645444	0					
ANR	2645974	MultiplicativeExpression	16 * ( xs + 32 )		2645444	0		*			
ANR	2645975	PrimaryExpression	16		2645444	0					
ANR	2645976	AdditiveExpression	xs + 32		2645444	1		+			
ANR	2645977	Identifier	xs		2645444	0					
ANR	2645978	PrimaryExpression	32		2645444	1					
ANR	2645979	Argument	16		2645444	1					
ANR	2645980	PrimaryExpression	16		2645444	0					
ANR	2645981	ExpressionStatement	"ctx -> b_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	299:2:7002:7060	2645444	21	True				
ANR	2645982	AssignmentExpression	"ctx -> b_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	0		=			
ANR	2645983	PtrMemberAccess	ctx -> b_line		2645444	0					
ANR	2645984	Identifier	ctx		2645444	0					
ANR	2645985	Identifier	b_line		2645444	1					
ANR	2645986	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645987	CastTarget	int *		2645444	0					
ANR	2645988	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2645989	Callee	eb_malloc_aligned		2645444	0					
ANR	2645990	Identifier	eb_malloc_aligned		2645444	0					
ANR	2645991	ArgumentList	16 * ( xs + 32 )		2645444	1					
ANR	2645992	Argument	16 * ( xs + 32 )		2645444	0					
ANR	2645993	MultiplicativeExpression	16 * ( xs + 32 )		2645444	0		*			
ANR	2645994	PrimaryExpression	16		2645444	0					
ANR	2645995	AdditiveExpression	xs + 32		2645444	1		+			
ANR	2645996	Identifier	xs		2645444	0					
ANR	2645997	PrimaryExpression	32		2645444	1					
ANR	2645998	Argument	16		2645444	1					
ANR	2645999	PrimaryExpression	16		2645444	0					
ANR	2646000	ExpressionStatement	"ctx -> r_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	300:2:7064:7122	2645444	22	True				
ANR	2646001	AssignmentExpression	"ctx -> r_line = ( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	0		=			
ANR	2646002	PtrMemberAccess	ctx -> r_line		2645444	0					
ANR	2646003	Identifier	ctx		2645444	0					
ANR	2646004	Identifier	r_line		2645444	1					
ANR	2646005	CastExpression	"( int * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2646006	CastTarget	int *		2645444	0					
ANR	2646007	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2645444	1					
ANR	2646008	Callee	eb_malloc_aligned		2645444	0					
ANR	2646009	Identifier	eb_malloc_aligned		2645444	0					
ANR	2646010	ArgumentList	16 * ( xs + 32 )		2645444	1					
ANR	2646011	Argument	16 * ( xs + 32 )		2645444	0					
ANR	2646012	MultiplicativeExpression	16 * ( xs + 32 )		2645444	0		*			
ANR	2646013	PrimaryExpression	16		2645444	0					
ANR	2646014	AdditiveExpression	xs + 32		2645444	1		+			
ANR	2646015	Identifier	xs		2645444	0					
ANR	2646016	PrimaryExpression	32		2645444	1					
ANR	2646017	Argument	16		2645444	1					
ANR	2646018	PrimaryExpression	16		2645444	0					
ANR	2646019	ForStatement	for ( i = 0 ; i < ( xs + 32 ) * 4 ; i ++ )		2645444	23					
ANR	2646020	ForInit	i = 0 ;	301:7:7131:7136	2645444	0	True				
ANR	2646021	AssignmentExpression	i = 0		2645444	0		=			
ANR	2646022	Identifier	i		2645444	0					
ANR	2646023	PrimaryExpression	0		2645444	1					
ANR	2646024	Condition	i < ( xs + 32 ) * 4	301:14:7138:7154	2645444	1	True				
ANR	2646025	RelationalExpression	i < ( xs + 32 ) * 4		2645444	0		<			
ANR	2646026	Identifier	i		2645444	0					
ANR	2646027	MultiplicativeExpression	( xs + 32 ) * 4		2645444	1		*			
ANR	2646028	AdditiveExpression	xs + 32		2645444	0		+			
ANR	2646029	Identifier	xs		2645444	0					
ANR	2646030	PrimaryExpression	32		2645444	1					
ANR	2646031	PrimaryExpression	4		2645444	1					
ANR	2646032	PostIncDecOperationExpression	i ++	301:33:7157:7159	2645444	2	True				
ANR	2646033	Identifier	i		2645444	0					
ANR	2646034	IncDec	++		2645444	1					
ANR	2646035	CompoundStatement		70:4:2114:2114	2645444	3					
ANR	2646036	ExpressionStatement	( ( float * ) ctx -> iir_line ) [ i ] = 0	303:6:7174:7205	2645444	0	True				
ANR	2646037	AssignmentExpression	( ( float * ) ctx -> iir_line ) [ i ] = 0		2645444	0		=			
ANR	2646038	ArrayIndexing	( ( float * ) ctx -> iir_line ) [ i ]		2645444	0					
ANR	2646039	CastExpression	( float * ) ctx -> iir_line		2645444	0					
ANR	2646040	CastTarget	float *		2645444	0					
ANR	2646041	PtrMemberAccess	ctx -> iir_line		2645444	1					
ANR	2646042	Identifier	ctx		2645444	0					
ANR	2646043	Identifier	iir_line		2645444	1					
ANR	2646044	Identifier	i		2645444	1					
ANR	2646045	PrimaryExpression	0		2645444	1					
ANR	2646046	ExpressionStatement	ctx -> a_line [ i ] = 1	304:6:7213:7231	2645444	1	True				
ANR	2646047	AssignmentExpression	ctx -> a_line [ i ] = 1		2645444	0		=			
ANR	2646048	ArrayIndexing	ctx -> a_line [ i ]		2645444	0					
ANR	2646049	PtrMemberAccess	ctx -> a_line		2645444	0					
ANR	2646050	Identifier	ctx		2645444	0					
ANR	2646051	Identifier	a_line		2645444	1					
ANR	2646052	Identifier	i		2645444	1					
ANR	2646053	PrimaryExpression	1		2645444	1					
ANR	2646054	ExpressionStatement	ctx -> b_line [ i ] = aspect2	305:6:7239:7263	2645444	2	True				
ANR	2646055	AssignmentExpression	ctx -> b_line [ i ] = aspect2		2645444	0		=			
ANR	2646056	ArrayIndexing	ctx -> b_line [ i ]		2645444	0					
ANR	2646057	PtrMemberAccess	ctx -> b_line		2645444	0					
ANR	2646058	Identifier	ctx		2645444	0					
ANR	2646059	Identifier	b_line		2645444	1					
ANR	2646060	Identifier	i		2645444	1					
ANR	2646061	Identifier	aspect2		2645444	1					
ANR	2646062	ExpressionStatement	ctx -> r_line [ i ] = 0	306:6:7271:7289	2645444	3	True				
ANR	2646063	AssignmentExpression	ctx -> r_line [ i ] = 0		2645444	0		=			
ANR	2646064	ArrayIndexing	ctx -> r_line [ i ]		2645444	0					
ANR	2646065	PtrMemberAccess	ctx -> r_line		2645444	0					
ANR	2646066	Identifier	ctx		2645444	0					
ANR	2646067	Identifier	r_line		2645444	1					
ANR	2646068	Identifier	i		2645444	1					
ANR	2646069	PrimaryExpression	0		2645444	1					
ANR	2646070	ExpressionStatement	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )	309:2:7300:7348	2645444	24	True				
ANR	2646071	AssignmentExpression	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )		2645444	0		=			
ANR	2646072	PtrMemberAccess	ctx -> skip_line		2645444	0					
ANR	2646073	Identifier	ctx		2645444	0					
ANR	2646074	Identifier	skip_line		2645444	1					
ANR	2646075	CastExpression	( char * ) malloc ( ( xs + 15 ) & - 16 )		2645444	1					
ANR	2646076	CastTarget	char *		2645444	0					
ANR	2646077	CallExpression	malloc ( ( xs + 15 ) & - 16 )		2645444	1					
ANR	2646078	Callee	malloc		2645444	0					
ANR	2646079	Identifier	malloc		2645444	0					
ANR	2646080	ArgumentList	( xs + 15 ) & - 16		2645444	1					
ANR	2646081	Argument	( xs + 15 ) & - 16		2645444	0					
ANR	2646082	BitAndExpression	( xs + 15 ) & - 16		2645444	0		&			
ANR	2646083	AdditiveExpression	xs + 15		2645444	0		+			
ANR	2646084	Identifier	xs		2645444	0					
ANR	2646085	PrimaryExpression	15		2645444	1					
ANR	2646086	UnaryOperationExpression	- 16		2645444	1					
ANR	2646087	UnaryOperator	-		2645444	0					
ANR	2646088	PrimaryExpression	16		2645444	1					
ANR	2646089	ReturnStatement	return ctx ;	311:2:7353:7363	2645444	25	True				
ANR	2646090	Identifier	ctx		2645444	0					
ANR	2646091	ReturnType	static eb_ctx_sse2 *		2645444	1					
ANR	2646092	Identifier	eb_ctx_sse2_new		2645444	2					
ANR	2646093	ParameterList	"const EvenBetterParams * params , int start_plane , int end_plane"		2645444	3					
ANR	2646094	Parameter	const EvenBetterParams * params	232:16:4987:5016	2645444	0	True				
ANR	2646095	ParameterType	const EvenBetterParams *		2645444	0					
ANR	2646096	Identifier	params		2645444	1					
ANR	2646097	Parameter	int start_plane	232:48:5019:5033	2645444	1	True				
ANR	2646098	ParameterType	int		2645444	0					
ANR	2646099	Identifier	start_plane		2645444	1					
ANR	2646100	Parameter	int end_plane	232:65:5036:5048	2645444	2	True				
ANR	2646101	ParameterType	int		2645444	0					
ANR	2646102	Identifier	end_plane		2645444	1					
ANR	2646103	CFGEntryNode	ENTRY		2645444		True				
ANR	2646104	CFGExitNode	EXIT		2645444		True				
ANR	2646105	Symbol	r_mul		2645444						
ANR	2646106	Symbol	ET_SRC_MAX		2645444						
ANR	2646107	Symbol	* ctx -> luts		2645444						
ANR	2646108	Symbol	aspect2		2645444						
ANR	2646109	Symbol	ctx -> b		2645444						
ANR	2646110	Symbol	ctx -> e		2645444						
ANR	2646111	Symbol	lut		2645444						
ANR	2646112	Symbol	eb_compute_randshift		2645444						
ANR	2646113	Symbol	* ctx -> ones		2645444						
ANR	2646114	Symbol	* * params		2645444						
ANR	2646115	Symbol	ctx -> xs		2645444						
ANR	2646116	Symbol	ctx -> twos		2645444						
ANR	2646117	Symbol	ctx -> a		2645444						
ANR	2646118	Symbol	params -> even_c1_scale		2645444						
ANR	2646119	Symbol	* * * params		2645444						
ANR	2646120	Symbol	EVEN_SHIFT		2645444						
ANR	2646121	Symbol	ctx -> skip_line		2645444						
ANR	2646122	Symbol	ctx -> iir_line		2645444						
ANR	2646123	Symbol	* ctx -> b_line		2645444						
ANR	2646124	Symbol	ctx -> r_mul		2645444						
ANR	2646125	Symbol	ctx -> r		2645444						
ANR	2646126	Symbol	* ctx -> e_i_1		2645444						
ANR	2646127	Symbol	* * i		2645444						
ANR	2646128	Symbol	* ctx -> a_line		2645444						
ANR	2646129	Symbol	rs_base		2645444						
ANR	2646130	Symbol	* ctx -> twos		2645444						
ANR	2646131	Symbol	NULL		2645444						
ANR	2646132	Symbol	* ctx -> kernel		2645444						
ANR	2646133	Symbol	ctx		2645444						
ANR	2646134	Symbol	params		2645444						
ANR	2646135	Symbol	* ctx -> ohi		2645444						
ANR	2646136	Symbol	eb_compute_rbscale		2645444						
ANR	2646137	Symbol	* ctx -> r_mul		2645444						
ANR	2646138	Symbol	* ctx -> elo		2645444						
ANR	2646139	Symbol	params -> source_width		2645444						
ANR	2646140	Symbol	* ctx -> ehi		2645444						
ANR	2646141	Symbol	start_plane		2645444						
ANR	2646142	Symbol	* ctx -> iir_line		2645444						
ANR	2646143	Symbol	nl		2645444						
ANR	2646144	Symbol	rs		2645444						
ANR	2646145	Symbol	* params -> luts		2645444						
ANR	2646146	Symbol	params -> do_shadows		2645444						
ANR	2646147	Symbol	eb_malloc_aligned		2645444						
ANR	2646148	Symbol	* ctx -> seed2		2645444						
ANR	2646149	Symbol	* ctx -> seed1		2645444						
ANR	2646150	Symbol	params -> rand_scale		2645444						
ANR	2646151	Symbol	ctx -> b_line		2645444						
ANR	2646152	Symbol	* ctx -> r		2645444						
ANR	2646153	Symbol	ctx -> ones		2645444						
ANR	2646154	Symbol	ctx -> seed2		2645444						
ANR	2646155	Symbol	ctx -> seed1		2645444						
ANR	2646156	Symbol	end_plane		2645444						
ANR	2646157	Symbol	ctx -> ehi		2645444						
ANR	2646158	Symbol	ctx -> elo		2645444						
ANR	2646159	Symbol	* ctx -> r_line		2645444						
ANR	2646160	Symbol	ctx -> e_i_1		2645444						
ANR	2646161	Symbol	* ctx -> e		2645444						
ANR	2646162	Symbol	ctx -> ohi		2645444						
ANR	2646163	Symbol	* ctx -> b		2645444						
ANR	2646164	Symbol	rbscale		2645444						
ANR	2646165	Symbol	* ctx -> a		2645444						
ANR	2646166	Symbol	* params		2645444						
ANR	2646167	Symbol	params -> aspect		2645444						
ANR	2646168	Symbol	malloc		2645444						
ANR	2646169	Symbol	g		2645444						
ANR	2646170	Symbol	i		2645444						
ANR	2646171	Symbol	params -> luts		2645444						
ANR	2646172	Symbol	* ctx -> aspect2		2645444						
ANR	2646173	Symbol	j		2645444						
ANR	2646174	Symbol	ctx -> kernel		2645444						
ANR	2646175	Symbol	im_scale		2645444						
ANR	2646176	Symbol	ctx -> r_line		2645444						
ANR	2646177	Symbol	* ctx		2645444						
ANR	2646178	Symbol	ctx -> aspect2		2645444						
ANR	2646179	Symbol	params -> levels		2645444						
ANR	2646180	Symbol	ctx -> luts		2645444						
ANR	2646181	Symbol	* i		2645444						
ANR	2646182	Symbol	* * params -> luts		2645444						
ANR	2646183	Symbol	* j		2645444						
ANR	2646184	Symbol	* lut		2645444						
ANR	2646185	Symbol	xs		2645444						
ANR	2646186	Symbol	* * ctx		2645444						
ANR	2646187	Symbol	* start_plane		2645444						
ANR	2646188	Symbol	ctx -> a_line		2645444						
ANR	2646189	Function	eb_ctx_sse2_free	314:0:7368:7655							
ANR	2646190	FunctionDef	eb_ctx_sse2_free (eb_ctx_sse2 * ctx)		2646189	0					
ANR	2646191	CompoundStatement		316:0:7415:7655	2646189	0					
ANR	2646192	IdentifierDeclStatement	int i ;	317:2:7419:7424	2646189	0	True				
ANR	2646193	IdentifierDecl	i		2646189	0					
ANR	2646194	IdentifierDeclType	int		2646189	0					
ANR	2646195	Identifier	i		2646189	1					
ANR	2646196	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		2646189	1					
ANR	2646197	ForInit	i = 0 ;	319:7:7434:7439	2646189	0	True				
ANR	2646198	AssignmentExpression	i = 0		2646189	0		=			
ANR	2646199	Identifier	i		2646189	0					
ANR	2646200	PrimaryExpression	0		2646189	1					
ANR	2646201	Condition	i < 4	319:14:7441:7445	2646189	1	True				
ANR	2646202	RelationalExpression	i < 4		2646189	0		<			
ANR	2646203	Identifier	i		2646189	0					
ANR	2646204	PrimaryExpression	4		2646189	1					
ANR	2646205	PostIncDecOperationExpression	i ++	319:21:7448:7450	2646189	2	True				
ANR	2646206	Identifier	i		2646189	0					
ANR	2646207	IncDec	++		2646189	1					
ANR	2646208	ExpressionStatement	free ( ctx -> luts [ i ] )	320:4:7457:7475	2646189	3	True				
ANR	2646209	CallExpression	free ( ctx -> luts [ i ] )		2646189	0					
ANR	2646210	Callee	free		2646189	0					
ANR	2646211	Identifier	free		2646189	0					
ANR	2646212	ArgumentList	ctx -> luts [ i ]		2646189	1					
ANR	2646213	Argument	ctx -> luts [ i ]		2646189	0					
ANR	2646214	ArrayIndexing	ctx -> luts [ i ]		2646189	0					
ANR	2646215	PtrMemberAccess	ctx -> luts		2646189	0					
ANR	2646216	Identifier	ctx		2646189	0					
ANR	2646217	Identifier	luts		2646189	1					
ANR	2646218	Identifier	i		2646189	1					
ANR	2646219	ExpressionStatement	eb_free_aligned ( ctx -> iir_line )	321:2:7479:7509	2646189	2	True				
ANR	2646220	CallExpression	eb_free_aligned ( ctx -> iir_line )		2646189	0					
ANR	2646221	Callee	eb_free_aligned		2646189	0					
ANR	2646222	Identifier	eb_free_aligned		2646189	0					
ANR	2646223	ArgumentList	ctx -> iir_line		2646189	1					
ANR	2646224	Argument	ctx -> iir_line		2646189	0					
ANR	2646225	PtrMemberAccess	ctx -> iir_line		2646189	0					
ANR	2646226	Identifier	ctx		2646189	0					
ANR	2646227	Identifier	iir_line		2646189	1					
ANR	2646228	ExpressionStatement	eb_free_aligned ( ctx -> a_line )	322:2:7513:7541	2646189	3	True				
ANR	2646229	CallExpression	eb_free_aligned ( ctx -> a_line )		2646189	0					
ANR	2646230	Callee	eb_free_aligned		2646189	0					
ANR	2646231	Identifier	eb_free_aligned		2646189	0					
ANR	2646232	ArgumentList	ctx -> a_line		2646189	1					
ANR	2646233	Argument	ctx -> a_line		2646189	0					
ANR	2646234	PtrMemberAccess	ctx -> a_line		2646189	0					
ANR	2646235	Identifier	ctx		2646189	0					
ANR	2646236	Identifier	a_line		2646189	1					
ANR	2646237	ExpressionStatement	eb_free_aligned ( ctx -> b_line )	323:2:7545:7573	2646189	4	True				
ANR	2646238	CallExpression	eb_free_aligned ( ctx -> b_line )		2646189	0					
ANR	2646239	Callee	eb_free_aligned		2646189	0					
ANR	2646240	Identifier	eb_free_aligned		2646189	0					
ANR	2646241	ArgumentList	ctx -> b_line		2646189	1					
ANR	2646242	Argument	ctx -> b_line		2646189	0					
ANR	2646243	PtrMemberAccess	ctx -> b_line		2646189	0					
ANR	2646244	Identifier	ctx		2646189	0					
ANR	2646245	Identifier	b_line		2646189	1					
ANR	2646246	ExpressionStatement	eb_free_aligned ( ctx -> r_line )	324:2:7577:7605	2646189	5	True				
ANR	2646247	CallExpression	eb_free_aligned ( ctx -> r_line )		2646189	0					
ANR	2646248	Callee	eb_free_aligned		2646189	0					
ANR	2646249	Identifier	eb_free_aligned		2646189	0					
ANR	2646250	ArgumentList	ctx -> r_line		2646189	1					
ANR	2646251	Argument	ctx -> r_line		2646189	0					
ANR	2646252	PtrMemberAccess	ctx -> r_line		2646189	0					
ANR	2646253	Identifier	ctx		2646189	0					
ANR	2646254	Identifier	r_line		2646189	1					
ANR	2646255	ExpressionStatement	free ( ctx -> skip_line )	325:2:7609:7629	2646189	6	True				
ANR	2646256	CallExpression	free ( ctx -> skip_line )		2646189	0					
ANR	2646257	Callee	free		2646189	0					
ANR	2646258	Identifier	free		2646189	0					
ANR	2646259	ArgumentList	ctx -> skip_line		2646189	1					
ANR	2646260	Argument	ctx -> skip_line		2646189	0					
ANR	2646261	PtrMemberAccess	ctx -> skip_line		2646189	0					
ANR	2646262	Identifier	ctx		2646189	0					
ANR	2646263	Identifier	skip_line		2646189	1					
ANR	2646264	ExpressionStatement	eb_free_aligned ( ctx )	326:2:7633:7653	2646189	7	True				
ANR	2646265	CallExpression	eb_free_aligned ( ctx )		2646189	0					
ANR	2646266	Callee	eb_free_aligned		2646189	0					
ANR	2646267	Identifier	eb_free_aligned		2646189	0					
ANR	2646268	ArgumentList	ctx		2646189	1					
ANR	2646269	Argument	ctx		2646189	0					
ANR	2646270	Identifier	ctx		2646189	0					
ANR	2646271	ReturnType	static void		2646189	1					
ANR	2646272	Identifier	eb_ctx_sse2_free		2646189	2					
ANR	2646273	ParameterList	eb_ctx_sse2 * ctx		2646189	3					
ANR	2646274	Parameter	eb_ctx_sse2 * ctx	315:17:7397:7412	2646189	0	True				
ANR	2646275	ParameterType	eb_ctx_sse2 *		2646189	0					
ANR	2646276	Identifier	ctx		2646189	1					
ANR	2646277	CFGEntryNode	ENTRY		2646189		True				
ANR	2646278	CFGExitNode	EXIT		2646189		True				
ANR	2646279	Symbol	ctx -> luts		2646189						
ANR	2646280	Symbol	* i		2646189						
ANR	2646281	Symbol	ctx -> skip_line		2646189						
ANR	2646282	Symbol	ctx -> iir_line		2646189						
ANR	2646283	Symbol	ctx		2646189						
ANR	2646284	Symbol	* ctx -> luts		2646189						
ANR	2646285	Symbol	i		2646189						
ANR	2646286	Symbol	* * ctx		2646189						
ANR	2646287	Symbol	ctx -> b_line		2646189						
ANR	2646288	Symbol	ctx -> r_line		2646189						
ANR	2646289	Symbol	* ctx		2646189						
ANR	2646290	Symbol	ctx -> a_line		2646189						
ANR	2646291	Function	eb_ctx_avec_new	331:0:7681:11563							
ANR	2646292	FunctionDef	"eb_ctx_avec_new (const EvenBetterParams * params , int start_plane , int end_plane)"		2646291	0					
ANR	2646293	CompoundStatement		333:0:7782:11563	2646291	0					
ANR	2646294	IdentifierDeclStatement	int xs = params -> source_width ;	334:2:7786:7815	2646291	0	True				
ANR	2646295	IdentifierDecl	xs = params -> source_width		2646291	0					
ANR	2646296	IdentifierDeclType	int		2646291	0					
ANR	2646297	Identifier	xs		2646291	1					
ANR	2646298	AssignmentExpression	xs = params -> source_width		2646291	2		=			
ANR	2646299	Identifier	xs		2646291	0					
ANR	2646300	PtrMemberAccess	params -> source_width		2646291	1					
ANR	2646301	Identifier	params		2646291	0					
ANR	2646302	Identifier	source_width		2646291	1					
ANR	2646303	IdentifierDeclStatement	int aspect2 = params -> aspect * params -> aspect ;	335:2:7819:7864	2646291	1	True				
ANR	2646304	IdentifierDecl	aspect2 = params -> aspect * params -> aspect		2646291	0					
ANR	2646305	IdentifierDeclType	int		2646291	0					
ANR	2646306	Identifier	aspect2		2646291	1					
ANR	2646307	AssignmentExpression	aspect2 = params -> aspect * params -> aspect		2646291	2		=			
ANR	2646308	Identifier	aspect2		2646291	0					
ANR	2646309	MultiplicativeExpression	params -> aspect * params -> aspect		2646291	1		*			
ANR	2646310	PtrMemberAccess	params -> aspect		2646291	0					
ANR	2646311	Identifier	params		2646291	0					
ANR	2646312	Identifier	aspect		2646291	1					
ANR	2646313	PtrMemberAccess	params -> aspect		2646291	1					
ANR	2646314	Identifier	params		2646291	0					
ANR	2646315	Identifier	aspect		2646291	1					
ANR	2646316	IdentifierDeclStatement	eb_ctx_avec * ctx ;	336:2:7868:7884	2646291	2	True				
ANR	2646317	IdentifierDecl	* ctx		2646291	0					
ANR	2646318	IdentifierDeclType	eb_ctx_avec *		2646291	0					
ANR	2646319	Identifier	ctx		2646291	1					
ANR	2646320	IdentifierDeclStatement	int i ;	337:2:7888:7893	2646291	3	True				
ANR	2646321	IdentifierDecl	i		2646291	0					
ANR	2646322	IdentifierDeclType	int		2646291	0					
ANR	2646323	Identifier	i		2646291	1					
ANR	2646324	IdentifierDeclStatement	double im_scale ;	338:2:7897:7912	2646291	4	True				
ANR	2646325	IdentifierDecl	im_scale		2646291	0					
ANR	2646326	IdentifierDeclType	double		2646291	0					
ANR	2646327	Identifier	im_scale		2646291	1					
ANR	2646328	IdentifierDeclStatement	double k ;	339:2:7916:7924	2646291	5	True				
ANR	2646329	IdentifierDecl	k		2646291	0					
ANR	2646330	IdentifierDeclType	double		2646291	0					
ANR	2646331	Identifier	k		2646291	1					
ANR	2646332	IdentifierDeclStatement	"float imscale1 , imscale2 , rbmul , rsbase ;"	340:2:7928:7967	2646291	6	True				
ANR	2646333	IdentifierDecl	imscale1		2646291	0					
ANR	2646334	IdentifierDeclType	float		2646291	0					
ANR	2646335	Identifier	imscale1		2646291	1					
ANR	2646336	IdentifierDecl	imscale2		2646291	1					
ANR	2646337	IdentifierDeclType	float		2646291	0					
ANR	2646338	Identifier	imscale2		2646291	1					
ANR	2646339	IdentifierDecl	rbmul		2646291	2					
ANR	2646340	IdentifierDeclType	float		2646291	0					
ANR	2646341	Identifier	rbmul		2646291	1					
ANR	2646342	IdentifierDecl	rsbase		2646291	3					
ANR	2646343	IdentifierDeclType	float		2646291	0					
ANR	2646344	Identifier	rsbase		2646291	1					
ANR	2646345	IdentifierDeclStatement	float r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) ) ;	341:2:7971:8044	2646291	7	True				
ANR	2646346	IdentifierDecl	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2646291	0					
ANR	2646347	IdentifierDeclType	float		2646291	0					
ANR	2646348	Identifier	r_mul		2646291	1					
ANR	2646349	AssignmentExpression	r_mul = 1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2646291	2		=			
ANR	2646350	Identifier	r_mul		2646291	0					
ANR	2646351	MultiplicativeExpression	1.0 / ( params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) ) )		2646291	1		/			
ANR	2646352	PrimaryExpression	1.0		2646291	0					
ANR	2646353	MultiplicativeExpression	params -> aspect * ( 1 << ( 6 - params -> even_c1_scale ) )		2646291	1		*			
ANR	2646354	PtrMemberAccess	params -> aspect		2646291	0					
ANR	2646355	Identifier	params		2646291	0					
ANR	2646356	Identifier	aspect		2646291	1					
ANR	2646357	ShiftExpression	1 << ( 6 - params -> even_c1_scale )		2646291	1		<<			
ANR	2646358	PrimaryExpression	1		2646291	0					
ANR	2646359	AdditiveExpression	6 - params -> even_c1_scale		2646291	1		-			
ANR	2646360	PrimaryExpression	6		2646291	0					
ANR	2646361	PtrMemberAccess	params -> even_c1_scale		2646291	1					
ANR	2646362	Identifier	params		2646291	0					
ANR	2646363	Identifier	even_c1_scale		2646291	1					
ANR	2646364	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	342:2:8048:8091	2646291	8	True				
ANR	2646365	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		2646291	0					
ANR	2646366	IdentifierDeclType	double		2646291	0					
ANR	2646367	Identifier	rbscale		2646291	1					
ANR	2646368	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		2646291	2		=			
ANR	2646369	Identifier	rbscale		2646291	0					
ANR	2646370	CallExpression	eb_compute_rbscale ( params )		2646291	1					
ANR	2646371	Callee	eb_compute_rbscale		2646291	0					
ANR	2646372	Identifier	eb_compute_rbscale		2646291	0					
ANR	2646373	ArgumentList	params		2646291	1					
ANR	2646374	Argument	params		2646291	0					
ANR	2646375	Identifier	params		2646291	0					
ANR	2646376	Statement	vector	343:2:8095:8100	2646291	9	True				
ANR	2646377	IdentifierDeclStatement	unsigned int zero = vec_splat_u32 ( 0 ) ;	343:9:8102:8138	2646291	10	True				
ANR	2646378	IdentifierDecl	zero = vec_splat_u32 ( 0 )		2646291	0					
ANR	2646379	IdentifierDeclType	unsigned int		2646291	0					
ANR	2646380	Identifier	zero		2646291	1					
ANR	2646381	AssignmentExpression	zero = vec_splat_u32 ( 0 )		2646291	2		=			
ANR	2646382	Identifier	zero		2646291	0					
ANR	2646383	CallExpression	vec_splat_u32 ( 0 )		2646291	1					
ANR	2646384	Callee	vec_splat_u32		2646291	0					
ANR	2646385	Identifier	vec_splat_u32		2646291	0					
ANR	2646386	ArgumentList	0		2646291	1					
ANR	2646387	Argument	0		2646291	0					
ANR	2646388	PrimaryExpression	0		2646291	0					
ANR	2646389	IdentifierDeclStatement	"const vector float kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 } ;"	344:2:8142:8212	2646291	11	True				
ANR	2646390	IdentifierDecl	"kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 }"		2646291	0					
ANR	2646391	IdentifierDeclType	const vector float		2646291	0					
ANR	2646392	Identifier	kernel		2646291	1					
ANR	2646393	AssignmentExpression	"kernel = { 1.0 / 16 , 3.0 / 16 , 5.0 / 16 , 7.0 / 16 }"		2646291	2		=			
ANR	2646394	Identifier	kernel		2646291	0					
ANR	2646395	InitializerList	1.0 / 16		2646291	1					
ANR	2646396	MultiplicativeExpression	1.0 / 16		2646291	0		/			
ANR	2646397	PrimaryExpression	1.0		2646291	0					
ANR	2646398	PrimaryExpression	16		2646291	1					
ANR	2646399	MultiplicativeExpression	3.0 / 16		2646291	1		/			
ANR	2646400	PrimaryExpression	3.0		2646291	0					
ANR	2646401	PrimaryExpression	16		2646291	1					
ANR	2646402	MultiplicativeExpression	5.0 / 16		2646291	2		/			
ANR	2646403	PrimaryExpression	5.0		2646291	0					
ANR	2646404	PrimaryExpression	16		2646291	1					
ANR	2646405	MultiplicativeExpression	7.0 / 16		2646291	3		/			
ANR	2646406	PrimaryExpression	7.0		2646291	0					
ANR	2646407	PrimaryExpression	16		2646291	1					
ANR	2646408	IdentifierDeclStatement	"vector float almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 } ;"	345:2:8216:8287	2646291	12	True				
ANR	2646409	IdentifierDecl	"almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 }"		2646291	0					
ANR	2646410	IdentifierDeclType	vector float		2646291	0					
ANR	2646411	Identifier	almostone		2646291	1					
ANR	2646412	AssignmentExpression	"almostone = { 255.0 / 256 , 255.0 / 256 , 255.0 / 256 , 255.0 / 256 }"		2646291	2		=			
ANR	2646413	Identifier	almostone		2646291	0					
ANR	2646414	InitializerList	255.0 / 256		2646291	1					
ANR	2646415	MultiplicativeExpression	255.0 / 256		2646291	0		/			
ANR	2646416	PrimaryExpression	255.0		2646291	0					
ANR	2646417	PrimaryExpression	256		2646291	1					
ANR	2646418	MultiplicativeExpression	255.0 / 256		2646291	1		/			
ANR	2646419	PrimaryExpression	255.0		2646291	0					
ANR	2646420	PrimaryExpression	256		2646291	1					
ANR	2646421	MultiplicativeExpression	255.0 / 256		2646291	2		/			
ANR	2646422	PrimaryExpression	255.0		2646291	0					
ANR	2646423	PrimaryExpression	256		2646291	1					
ANR	2646424	MultiplicativeExpression	255.0 / 256		2646291	3		/			
ANR	2646425	PrimaryExpression	255.0		2646291	0					
ANR	2646426	PrimaryExpression	256		2646291	1					
ANR	2646427	IdentifierDeclStatement	int rs_base ;	346:2:8291:8302	2646291	13	True				
ANR	2646428	IdentifierDecl	rs_base		2646291	0					
ANR	2646429	IdentifierDeclType	int		2646291	0					
ANR	2646430	Identifier	rs_base		2646291	1					
ANR	2646431	ExpressionStatement	"ctx = ( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"	348:2:8307:8370	2646291	14	True				
ANR	2646432	AssignmentExpression	"ctx = ( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		2646291	0		=			
ANR	2646433	Identifier	ctx		2646291	0					
ANR	2646434	CastExpression	"( eb_ctx_avec * ) eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		2646291	1					
ANR	2646435	CastTarget	eb_ctx_avec *		2646291	0					
ANR	2646436	CallExpression	"eb_malloc_aligned ( sizeof ( eb_ctx_avec ) , 16 )"		2646291	1					
ANR	2646437	Callee	eb_malloc_aligned		2646291	0					
ANR	2646438	Identifier	eb_malloc_aligned		2646291	0					
ANR	2646439	ArgumentList	sizeof ( eb_ctx_avec )		2646291	1					
ANR	2646440	Argument	sizeof ( eb_ctx_avec )		2646291	0					
ANR	2646441	SizeofExpression	sizeof ( eb_ctx_avec )		2646291	0					
ANR	2646442	Sizeof	sizeof		2646291	0					
ANR	2646443	SizeofOperand	eb_ctx_avec		2646291	1					
ANR	2646444	Argument	16		2646291	1					
ANR	2646445	PrimaryExpression	16		2646291	0					
ANR	2646446	ExpressionStatement	ctx -> xs = xs	349:2:8374:8386	2646291	15	True				
ANR	2646447	AssignmentExpression	ctx -> xs = xs		2646291	0		=			
ANR	2646448	PtrMemberAccess	ctx -> xs		2646291	0					
ANR	2646449	Identifier	ctx		2646291	0					
ANR	2646450	Identifier	xs		2646291	1					
ANR	2646451	Identifier	xs		2646291	1					
ANR	2646452	ExpressionStatement	ctx -> e = ( vector float ) zero	351:2:8391:8419	2646291	16	True				
ANR	2646453	AssignmentExpression	ctx -> e = ( vector float ) zero		2646291	0		=			
ANR	2646454	PtrMemberAccess	ctx -> e		2646291	0					
ANR	2646455	Identifier	ctx		2646291	0					
ANR	2646456	Identifier	e		2646291	1					
ANR	2646457	CastExpression	( vector float ) zero		2646291	1					
ANR	2646458	CastTarget	vector float		2646291	0					
ANR	2646459	Identifier	zero		2646291	1					
ANR	2646460	ExpressionStatement	ctx -> e_i_1 = ( vector float ) zero	352:2:8423:8455	2646291	17	True				
ANR	2646461	AssignmentExpression	ctx -> e_i_1 = ( vector float ) zero		2646291	0		=			
ANR	2646462	PtrMemberAccess	ctx -> e_i_1		2646291	0					
ANR	2646463	Identifier	ctx		2646291	0					
ANR	2646464	Identifier	e_i_1		2646291	1					
ANR	2646465	CastExpression	( vector float ) zero		2646291	1					
ANR	2646466	CastTarget	vector float		2646291	0					
ANR	2646467	Identifier	zero		2646291	1					
ANR	2646468	ExpressionStatement	ctx -> r = zero	353:2:8459:8472	2646291	18	True				
ANR	2646469	AssignmentExpression	ctx -> r = zero		2646291	0		=			
ANR	2646470	PtrMemberAccess	ctx -> r		2646291	0					
ANR	2646471	Identifier	ctx		2646291	0					
ANR	2646472	Identifier	r		2646291	1					
ANR	2646473	Identifier	zero		2646291	1					
ANR	2646474	ExpressionStatement	ctx -> a = zero	354:2:8476:8489	2646291	19	True				
ANR	2646475	AssignmentExpression	ctx -> a = zero		2646291	0		=			
ANR	2646476	PtrMemberAccess	ctx -> a		2646291	0					
ANR	2646477	Identifier	ctx		2646291	0					
ANR	2646478	Identifier	a		2646291	1					
ANR	2646479	Identifier	zero		2646291	1					
ANR	2646480	ExpressionStatement	im_scale = ( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )	355:2:8493:8544	2646291	20	True				
ANR	2646481	AssignmentExpression	im_scale = ( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )		2646291	0		=			
ANR	2646482	Identifier	im_scale		2646291	0					
ANR	2646483	MultiplicativeExpression	( params -> levels - 1 ) * ( 1.0 / ( 1 << 24 ) )		2646291	1		*			
ANR	2646484	AdditiveExpression	params -> levels - 1		2646291	0		-			
ANR	2646485	PtrMemberAccess	params -> levels		2646291	0					
ANR	2646486	Identifier	params		2646291	0					
ANR	2646487	Identifier	levels		2646291	1					
ANR	2646488	PrimaryExpression	1		2646291	1					
ANR	2646489	MultiplicativeExpression	1.0 / ( 1 << 24 )		2646291	1		/			
ANR	2646490	PrimaryExpression	1.0		2646291	0					
ANR	2646491	ShiftExpression	1 << 24		2646291	1		<<			
ANR	2646492	PrimaryExpression	1		2646291	0					
ANR	2646493	PrimaryExpression	24		2646291	1					
ANR	2646494	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	356:2:8548:8594	2646291	21	True				
ANR	2646495	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		2646291	0		=			
ANR	2646496	Identifier	rs_base		2646291	0					
ANR	2646497	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		2646291	1		-			
ANR	2646498	PrimaryExpression	35		2646291	0					
ANR	2646499	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		2646291	1		-			
ANR	2646500	Identifier	EVEN_SHIFT		2646291	0					
ANR	2646501	PtrMemberAccess	params -> rand_scale		2646291	1					
ANR	2646502	Identifier	params		2646291	0					
ANR	2646503	Identifier	rand_scale		2646291	1					
ANR	2646504	IfStatement	if ( params -> gamma == 1.0 )		2646291	22					
ANR	2646505	Condition	params -> gamma == 1.0	358:6:8603:8622	2646291	0	True				
ANR	2646506	EqualityExpression	params -> gamma == 1.0		2646291	0		==			
ANR	2646507	PtrMemberAccess	params -> gamma		2646291	0					
ANR	2646508	Identifier	params		2646291	0					
ANR	2646509	Identifier	gamma		2646291	1					
ANR	2646510	PrimaryExpression	1.0		2646291	1					
ANR	2646511	ExpressionStatement	k = 0	359:4:8629:8634	2646291	1	True				
ANR	2646512	AssignmentExpression	k = 0		2646291	0		=			
ANR	2646513	Identifier	k		2646291	0					
ANR	2646514	PrimaryExpression	0		2646291	1					
ANR	2646515	ElseStatement	else		2646291	0					
ANR	2646516	IfStatement	if ( params -> gamma == 1.8 )		2646291	0					
ANR	2646517	Condition	params -> gamma == 1.8	360:11:8647:8666	2646291	0	True				
ANR	2646518	EqualityExpression	params -> gamma == 1.8		2646291	0		==			
ANR	2646519	PtrMemberAccess	params -> gamma		2646291	0					
ANR	2646520	Identifier	params		2646291	0					
ANR	2646521	Identifier	gamma		2646291	1					
ANR	2646522	PrimaryExpression	1.8		2646291	1					
ANR	2646523	ExpressionStatement	k = 0.835	361:4:8673:8682	2646291	1	True				
ANR	2646524	AssignmentExpression	k = 0.835		2646291	0		=			
ANR	2646525	Identifier	k		2646291	0					
ANR	2646526	PrimaryExpression	0.835		2646291	1					
ANR	2646527	ElseStatement	else		2646291	0					
ANR	2646528	IfStatement	if ( params -> gamma == 2.0 )		2646291	0					
ANR	2646529	Condition	params -> gamma == 2.0	362:11:8695:8714	2646291	0	True				
ANR	2646530	EqualityExpression	params -> gamma == 2.0		2646291	0		==			
ANR	2646531	PtrMemberAccess	params -> gamma		2646291	0					
ANR	2646532	Identifier	params		2646291	0					
ANR	2646533	Identifier	gamma		2646291	1					
ANR	2646534	PrimaryExpression	2.0		2646291	1					
ANR	2646535	ExpressionStatement	k = 1.0	363:4:8721:8728	2646291	1	True				
ANR	2646536	AssignmentExpression	k = 1.0		2646291	0		=			
ANR	2646537	Identifier	k		2646291	0					
ANR	2646538	PrimaryExpression	1.0		2646291	1					
ANR	2646539	ElseStatement	else		2646291	0					
ANR	2646540	ExpressionStatement	k = 0	366:4:8774:8779	2646291	0	True				
ANR	2646541	AssignmentExpression	k = 0		2646291	0		=			
ANR	2646542	Identifier	k		2646291	0					
ANR	2646543	PrimaryExpression	0		2646291	1					
ANR	2646544	ForStatement	for ( ; ; )		2646291	23					
ANR	2646545	CompoundStatement		38:6:1022:1047	2646291	0					
ANR	2646546	IdentifierDeclStatement	"vector float foff , f0 , f1 ;"	370:6:8805:8830	2646291	0	True				
ANR	2646547	IdentifierDecl	foff		2646291	0					
ANR	2646548	IdentifierDeclType	vector float		2646291	0					
ANR	2646549	Identifier	foff		2646291	1					
ANR	2646550	IdentifierDecl	f0		2646291	1					
ANR	2646551	IdentifierDeclType	vector float		2646291	0					
ANR	2646552	Identifier	f0		2646291	1					
ANR	2646553	IdentifierDecl	f1		2646291	2					
ANR	2646554	IdentifierDeclType	vector float		2646291	0					
ANR	2646555	Identifier	f1		2646291	1					
ANR	2646556	ExpressionStatement	imscale1 = ( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )	372:6:8839:8898	2646291	1	True				
ANR	2646557	AssignmentExpression	imscale1 = ( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )		2646291	0		=			
ANR	2646558	Identifier	imscale1		2646291	0					
ANR	2646559	MultiplicativeExpression	( 1 - k ) * ( params -> levels - 1 ) * ( 256.0 / 255.0 )		2646291	1		*			
ANR	2646560	AdditiveExpression	1 - k		2646291	0		-			
ANR	2646561	PrimaryExpression	1		2646291	0					
ANR	2646562	Identifier	k		2646291	1					
ANR	2646563	MultiplicativeExpression	( params -> levels - 1 ) * ( 256.0 / 255.0 )		2646291	1		*			
ANR	2646564	AdditiveExpression	params -> levels - 1		2646291	0		-			
ANR	2646565	PtrMemberAccess	params -> levels		2646291	0					
ANR	2646566	Identifier	params		2646291	0					
ANR	2646567	Identifier	levels		2646291	1					
ANR	2646568	PrimaryExpression	1		2646291	1					
ANR	2646569	MultiplicativeExpression	256.0 / 255.0		2646291	1		/			
ANR	2646570	PrimaryExpression	256.0		2646291	0					
ANR	2646571	PrimaryExpression	255.0		2646291	1					
ANR	2646572	ExpressionStatement	imscale2 = k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )	373:6:8906:8963	2646291	2	True				
ANR	2646573	AssignmentExpression	imscale2 = k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		2646291	0		=			
ANR	2646574	Identifier	imscale2		2646291	0					
ANR	2646575	MultiplicativeExpression	k * ( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		2646291	1		*			
ANR	2646576	Identifier	k		2646291	0					
ANR	2646577	MultiplicativeExpression	( params -> levels - 1 ) * sqrt ( 256.0 / 255.0 )		2646291	1		*			
ANR	2646578	AdditiveExpression	params -> levels - 1		2646291	0		-			
ANR	2646579	PtrMemberAccess	params -> levels		2646291	0					
ANR	2646580	Identifier	params		2646291	0					
ANR	2646581	Identifier	levels		2646291	1					
ANR	2646582	PrimaryExpression	1		2646291	1					
ANR	2646583	CallExpression	sqrt ( 256.0 / 255.0 )		2646291	1					
ANR	2646584	Callee	sqrt		2646291	0					
ANR	2646585	Identifier	sqrt		2646291	0					
ANR	2646586	ArgumentList	256.0 / 255.0		2646291	1					
ANR	2646587	Argument	256.0 / 255.0		2646291	0					
ANR	2646588	MultiplicativeExpression	256.0 / 255.0		2646291	0		/			
ANR	2646589	PrimaryExpression	256.0		2646291	0					
ANR	2646590	PrimaryExpression	255.0		2646291	1					
ANR	2646591	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		2646291	3					
ANR	2646592	ForInit	i = 0 ;	374:11:8976:8981	2646291	0	True				
ANR	2646593	AssignmentExpression	i = 0		2646291	0		=			
ANR	2646594	Identifier	i		2646291	0					
ANR	2646595	PrimaryExpression	0		2646291	1					
ANR	2646596	Condition	i < 4	374:18:8983:8987	2646291	1	True				
ANR	2646597	RelationalExpression	i < 4		2646291	0		<			
ANR	2646598	Identifier	i		2646291	0					
ANR	2646599	PrimaryExpression	4		2646291	1					
ANR	2646600	PostIncDecOperationExpression	i ++	374:25:8990:8992	2646291	2	True				
ANR	2646601	Identifier	i		2646291	0					
ANR	2646602	IncDec	++		2646291	1					
ANR	2646603	CompoundStatement		43:8:1220:1220	2646291	3					
ANR	2646604	ExpressionStatement	( ( float * ) & ctx -> imscale1 ) [ i ] = imscale1	376:10:9015:9054	2646291	0	True				
ANR	2646605	AssignmentExpression	( ( float * ) & ctx -> imscale1 ) [ i ] = imscale1		2646291	0		=			
ANR	2646606	ArrayIndexing	( ( float * ) & ctx -> imscale1 ) [ i ]		2646291	0					
ANR	2646607	CastExpression	( float * ) & ctx -> imscale1		2646291	0					
ANR	2646608	CastTarget	float *		2646291	0					
ANR	2646609	UnaryOperationExpression	& ctx -> imscale1		2646291	1					
ANR	2646610	UnaryOperator	&		2646291	0					
ANR	2646611	PtrMemberAccess	ctx -> imscale1		2646291	1					
ANR	2646612	Identifier	ctx		2646291	0					
ANR	2646613	Identifier	imscale1		2646291	1					
ANR	2646614	Identifier	i		2646291	1					
ANR	2646615	Identifier	imscale1		2646291	1					
ANR	2646616	ExpressionStatement	( ( float * ) & ctx -> imscale2 ) [ i ] = imscale2	377:10:9066:9105	2646291	1	True				
ANR	2646617	AssignmentExpression	( ( float * ) & ctx -> imscale2 ) [ i ] = imscale2		2646291	0		=			
ANR	2646618	ArrayIndexing	( ( float * ) & ctx -> imscale2 ) [ i ]		2646291	0					
ANR	2646619	CastExpression	( float * ) & ctx -> imscale2		2646291	0					
ANR	2646620	CastTarget	float *		2646291	0					
ANR	2646621	UnaryOperationExpression	& ctx -> imscale2		2646291	1					
ANR	2646622	UnaryOperator	&		2646291	0					
ANR	2646623	PtrMemberAccess	ctx -> imscale2		2646291	1					
ANR	2646624	Identifier	ctx		2646291	0					
ANR	2646625	Identifier	imscale2		2646291	1					
ANR	2646626	Identifier	i		2646291	1					
ANR	2646627	Identifier	imscale2		2646291	1					
ANR	2646628	ExpressionStatement	f0 = vec_rsqrte ( almostone )	379:6:9123:9149	2646291	4	True				
ANR	2646629	AssignmentExpression	f0 = vec_rsqrte ( almostone )		2646291	0		=			
ANR	2646630	Identifier	f0		2646291	0					
ANR	2646631	CallExpression	vec_rsqrte ( almostone )		2646291	1					
ANR	2646632	Callee	vec_rsqrte		2646291	0					
ANR	2646633	Identifier	vec_rsqrte		2646291	0					
ANR	2646634	ArgumentList	almostone		2646291	1					
ANR	2646635	Argument	almostone		2646291	0					
ANR	2646636	Identifier	almostone		2646291	0					
ANR	2646637	ExpressionStatement	"f0 = vec_madd ( f0 , almostone , ( vector float ) zero )"	380:6:9157:9205	2646291	5	True				
ANR	2646638	AssignmentExpression	"f0 = vec_madd ( f0 , almostone , ( vector float ) zero )"		2646291	0		=			
ANR	2646639	Identifier	f0		2646291	0					
ANR	2646640	CallExpression	"vec_madd ( f0 , almostone , ( vector float ) zero )"		2646291	1					
ANR	2646641	Callee	vec_madd		2646291	0					
ANR	2646642	Identifier	vec_madd		2646291	0					
ANR	2646643	ArgumentList	f0		2646291	1					
ANR	2646644	Argument	f0		2646291	0					
ANR	2646645	Identifier	f0		2646291	0					
ANR	2646646	Argument	almostone		2646291	1					
ANR	2646647	Identifier	almostone		2646291	0					
ANR	2646648	Argument	( vector float ) zero		2646291	2					
ANR	2646649	CastExpression	( vector float ) zero		2646291	0					
ANR	2646650	CastTarget	vector float		2646291	0					
ANR	2646651	Identifier	zero		2646291	1					
ANR	2646652	ExpressionStatement	"f1 = vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"	381:6:9213:9265	2646291	6	True				
ANR	2646653	AssignmentExpression	"f1 = vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"		2646291	0		=			
ANR	2646654	Identifier	f1		2646291	0					
ANR	2646655	CallExpression	"vec_madd ( f0 , ctx -> imscale2 , ( vector float ) zero )"		2646291	1					
ANR	2646656	Callee	vec_madd		2646291	0					
ANR	2646657	Identifier	vec_madd		2646291	0					
ANR	2646658	ArgumentList	f0		2646291	1					
ANR	2646659	Argument	f0		2646291	0					
ANR	2646660	Identifier	f0		2646291	0					
ANR	2646661	Argument	ctx -> imscale2		2646291	1					
ANR	2646662	PtrMemberAccess	ctx -> imscale2		2646291	0					
ANR	2646663	Identifier	ctx		2646291	0					
ANR	2646664	Identifier	imscale2		2646291	1					
ANR	2646665	Argument	( vector float ) zero		2646291	2					
ANR	2646666	CastExpression	( vector float ) zero		2646291	0					
ANR	2646667	CastTarget	vector float		2646291	0					
ANR	2646668	Identifier	zero		2646291	1					
ANR	2646669	ExpressionStatement	"foff = vec_madd ( almostone , ctx -> imscale1 , f1 )"	382:6:9273:9318	2646291	7	True				
ANR	2646670	AssignmentExpression	"foff = vec_madd ( almostone , ctx -> imscale1 , f1 )"		2646291	0		=			
ANR	2646671	Identifier	foff		2646291	0					
ANR	2646672	CallExpression	"vec_madd ( almostone , ctx -> imscale1 , f1 )"		2646291	1					
ANR	2646673	Callee	vec_madd		2646291	0					
ANR	2646674	Identifier	vec_madd		2646291	0					
ANR	2646675	ArgumentList	almostone		2646291	1					
ANR	2646676	Argument	almostone		2646291	0					
ANR	2646677	Identifier	almostone		2646291	0					
ANR	2646678	Argument	ctx -> imscale1		2646291	1					
ANR	2646679	PtrMemberAccess	ctx -> imscale1		2646291	0					
ANR	2646680	Identifier	ctx		2646291	0					
ANR	2646681	Identifier	imscale1		2646291	1					
ANR	2646682	Argument	f1		2646291	2					
ANR	2646683	Identifier	f1		2646291	0					
ANR	2646684	ExpressionStatement	"f1 = vec_nmsub ( f0 , ctx -> imscale2 , foff )"	383:6:9326:9365	2646291	8	True				
ANR	2646685	AssignmentExpression	"f1 = vec_nmsub ( f0 , ctx -> imscale2 , foff )"		2646291	0		=			
ANR	2646686	Identifier	f1		2646291	0					
ANR	2646687	CallExpression	"vec_nmsub ( f0 , ctx -> imscale2 , foff )"		2646291	1					
ANR	2646688	Callee	vec_nmsub		2646291	0					
ANR	2646689	Identifier	vec_nmsub		2646291	0					
ANR	2646690	ArgumentList	f0		2646291	1					
ANR	2646691	Argument	f0		2646291	0					
ANR	2646692	Identifier	f0		2646291	0					
ANR	2646693	Argument	ctx -> imscale2		2646291	1					
ANR	2646694	PtrMemberAccess	ctx -> imscale2		2646291	0					
ANR	2646695	Identifier	ctx		2646291	0					
ANR	2646696	Identifier	imscale2		2646291	1					
ANR	2646697	Argument	foff		2646291	2					
ANR	2646698	Identifier	foff		2646291	0					
ANR	2646699	ExpressionStatement	"f1 = vec_nmsub ( almostone , ctx -> imscale1 , f1 )"	384:6:9373:9417	2646291	9	True				
ANR	2646700	AssignmentExpression	"f1 = vec_nmsub ( almostone , ctx -> imscale1 , f1 )"		2646291	0		=			
ANR	2646701	Identifier	f1		2646291	0					
ANR	2646702	CallExpression	"vec_nmsub ( almostone , ctx -> imscale1 , f1 )"		2646291	1					
ANR	2646703	Callee	vec_nmsub		2646291	0					
ANR	2646704	Identifier	vec_nmsub		2646291	0					
ANR	2646705	ArgumentList	almostone		2646291	1					
ANR	2646706	Argument	almostone		2646291	0					
ANR	2646707	Identifier	almostone		2646291	0					
ANR	2646708	Argument	ctx -> imscale1		2646291	1					
ANR	2646709	PtrMemberAccess	ctx -> imscale1		2646291	0					
ANR	2646710	Identifier	ctx		2646291	0					
ANR	2646711	Identifier	imscale1		2646291	1					
ANR	2646712	Argument	f1		2646291	2					
ANR	2646713	Identifier	f1		2646291	0					
ANR	2646714	IfStatement	"if ( vec_all_eq ( f1 , ( vector float ) zero ) )"		2646291	10					
ANR	2646715	Condition	"vec_all_eq ( f1 , ( vector float ) zero )"	385:10:9429:9462	2646291	0	True				
ANR	2646716	CallExpression	"vec_all_eq ( f1 , ( vector float ) zero )"		2646291	0					
ANR	2646717	Callee	vec_all_eq		2646291	0					
ANR	2646718	Identifier	vec_all_eq		2646291	0					
ANR	2646719	ArgumentList	f1		2646291	1					
ANR	2646720	Argument	f1		2646291	0					
ANR	2646721	Identifier	f1		2646291	0					
ANR	2646722	Argument	( vector float ) zero		2646291	1					
ANR	2646723	CastExpression	( vector float ) zero		2646291	0					
ANR	2646724	CastTarget	vector float		2646291	0					
ANR	2646725	Identifier	zero		2646291	1					
ANR	2646726	CompoundStatement		54:8:1690:1690	2646291	1					
ANR	2646727	ExpressionStatement	ctx -> foff = foff	387:10:9485:9501	2646291	0	True				
ANR	2646728	AssignmentExpression	ctx -> foff = foff		2646291	0		=			
ANR	2646729	PtrMemberAccess	ctx -> foff		2646291	0					
ANR	2646730	Identifier	ctx		2646291	0					
ANR	2646731	Identifier	foff		2646291	1					
ANR	2646732	Identifier	foff		2646291	1					
ANR	2646733	BreakStatement	break ;	388:10:9513:9518	2646291	1	True				
ANR	2646734	ExpressionStatement	k += 1e-5	390:6:9536:9545	2646291	11	True				
ANR	2646735	AssignmentExpression	k += 1e-5		2646291	0		+=			
ANR	2646736	Identifier	k		2646291	0					
ANR	2646737	PrimaryExpression	1e-5		2646291	1					
ANR	2646738	ExpressionStatement	rbmul = - r_mul * rbscale	392:2:9555:9579	2646291	24	True				
ANR	2646739	AssignmentExpression	rbmul = - r_mul * rbscale		2646291	0		=			
ANR	2646740	Identifier	rbmul		2646291	0					
ANR	2646741	MultiplicativeExpression	- r_mul * rbscale		2646291	1		*			
ANR	2646742	UnaryOperationExpression	- r_mul		2646291	0					
ANR	2646743	UnaryOperator	-		2646291	0					
ANR	2646744	Identifier	r_mul		2646291	1					
ANR	2646745	Identifier	rbscale		2646291	1					
ANR	2646746	ExpressionStatement	rsbase = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )	393:2:9583:9632	2646291	25	True				
ANR	2646747	AssignmentExpression	rsbase = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		2646291	0		=			
ANR	2646748	Identifier	rsbase		2646291	0					
ANR	2646749	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		2646291	1		/			
ANR	2646750	PrimaryExpression	1.0		2646291	0					
ANR	2646751	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs_base )		2646291	1		/			
ANR	2646752	ShiftExpression	1 << EVEN_SHIFT		2646291	0		<<			
ANR	2646753	PrimaryExpression	1		2646291	0					
ANR	2646754	Identifier	EVEN_SHIFT		2646291	1					
ANR	2646755	ShiftExpression	1 << rs_base		2646291	1		<<			
ANR	2646756	PrimaryExpression	1		2646291	0					
ANR	2646757	Identifier	rs_base		2646291	1					
ANR	2646758	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		2646291	26					
ANR	2646759	ForInit	i = 0 ;	394:7:9641:9646	2646291	0	True				
ANR	2646760	AssignmentExpression	i = 0		2646291	0		=			
ANR	2646761	Identifier	i		2646291	0					
ANR	2646762	PrimaryExpression	0		2646291	1					
ANR	2646763	Condition	i < 4	394:14:9648:9652	2646291	1	True				
ANR	2646764	RelationalExpression	i < 4		2646291	0		<			
ANR	2646765	Identifier	i		2646291	0					
ANR	2646766	PrimaryExpression	4		2646291	1					
ANR	2646767	PostIncDecOperationExpression	i ++	394:21:9655:9657	2646291	2	True				
ANR	2646768	Identifier	i		2646291	0					
ANR	2646769	IncDec	++		2646291	1					
ANR	2646770	CompoundStatement		63:4:1881:1881	2646291	3					
ANR	2646771	ExpressionStatement	( ( int * ) & ctx -> b ) [ i ] = aspect2	396:6:9672:9701	2646291	0	True				
ANR	2646772	AssignmentExpression	( ( int * ) & ctx -> b ) [ i ] = aspect2		2646291	0		=			
ANR	2646773	ArrayIndexing	( ( int * ) & ctx -> b ) [ i ]		2646291	0					
ANR	2646774	CastExpression	( int * ) & ctx -> b		2646291	0					
ANR	2646775	CastTarget	int *		2646291	0					
ANR	2646776	UnaryOperationExpression	& ctx -> b		2646291	1					
ANR	2646777	UnaryOperator	&		2646291	0					
ANR	2646778	PtrMemberAccess	ctx -> b		2646291	1					
ANR	2646779	Identifier	ctx		2646291	0					
ANR	2646780	Identifier	b		2646291	1					
ANR	2646781	Identifier	i		2646291	1					
ANR	2646782	Identifier	aspect2		2646291	1					
ANR	2646783	ExpressionStatement	( ( int * ) & ctx -> aspect2 ) [ i ] = aspect2	397:6:9709:9744	2646291	1	True				
ANR	2646784	AssignmentExpression	( ( int * ) & ctx -> aspect2 ) [ i ] = aspect2		2646291	0		=			
ANR	2646785	ArrayIndexing	( ( int * ) & ctx -> aspect2 ) [ i ]		2646291	0					
ANR	2646786	CastExpression	( int * ) & ctx -> aspect2		2646291	0					
ANR	2646787	CastTarget	int *		2646291	0					
ANR	2646788	UnaryOperationExpression	& ctx -> aspect2		2646291	1					
ANR	2646789	UnaryOperator	&		2646291	0					
ANR	2646790	PtrMemberAccess	ctx -> aspect2		2646291	1					
ANR	2646791	Identifier	ctx		2646291	0					
ANR	2646792	Identifier	aspect2		2646291	1					
ANR	2646793	Identifier	i		2646291	1					
ANR	2646794	Identifier	aspect2		2646291	1					
ANR	2646795	ExpressionStatement	( ( int * ) & ctx -> seed1 ) [ i ] = ( i << 8 ) + 0x7000	398:6:9752:9795	2646291	2	True				
ANR	2646796	AssignmentExpression	( ( int * ) & ctx -> seed1 ) [ i ] = ( i << 8 ) + 0x7000		2646291	0		=			
ANR	2646797	ArrayIndexing	( ( int * ) & ctx -> seed1 ) [ i ]		2646291	0					
ANR	2646798	CastExpression	( int * ) & ctx -> seed1		2646291	0					
ANR	2646799	CastTarget	int *		2646291	0					
ANR	2646800	UnaryOperationExpression	& ctx -> seed1		2646291	1					
ANR	2646801	UnaryOperator	&		2646291	0					
ANR	2646802	PtrMemberAccess	ctx -> seed1		2646291	1					
ANR	2646803	Identifier	ctx		2646291	0					
ANR	2646804	Identifier	seed1		2646291	1					
ANR	2646805	Identifier	i		2646291	1					
ANR	2646806	AdditiveExpression	( i << 8 ) + 0x7000		2646291	1		+			
ANR	2646807	ShiftExpression	i << 8		2646291	0		<<			
ANR	2646808	Identifier	i		2646291	0					
ANR	2646809	PrimaryExpression	8		2646291	1					
ANR	2646810	PrimaryExpression	0x7000		2646291	1					
ANR	2646811	ExpressionStatement	( ( int * ) & ctx -> seed2 ) [ i ] = ( i << 16 ) + 0x9000	399:6:9803:9847	2646291	3	True				
ANR	2646812	AssignmentExpression	( ( int * ) & ctx -> seed2 ) [ i ] = ( i << 16 ) + 0x9000		2646291	0		=			
ANR	2646813	ArrayIndexing	( ( int * ) & ctx -> seed2 ) [ i ]		2646291	0					
ANR	2646814	CastExpression	( int * ) & ctx -> seed2		2646291	0					
ANR	2646815	CastTarget	int *		2646291	0					
ANR	2646816	UnaryOperationExpression	& ctx -> seed2		2646291	1					
ANR	2646817	UnaryOperator	&		2646291	0					
ANR	2646818	PtrMemberAccess	ctx -> seed2		2646291	1					
ANR	2646819	Identifier	ctx		2646291	0					
ANR	2646820	Identifier	seed2		2646291	1					
ANR	2646821	Identifier	i		2646291	1					
ANR	2646822	AdditiveExpression	( i << 16 ) + 0x9000		2646291	1		+			
ANR	2646823	ShiftExpression	i << 16		2646291	0		<<			
ANR	2646824	Identifier	i		2646291	0					
ANR	2646825	PrimaryExpression	16		2646291	1					
ANR	2646826	PrimaryExpression	0x9000		2646291	1					
ANR	2646827	ExpressionStatement	( ( float * ) & ctx -> ohi ) [ i ] = params -> levels - 1	400:6:9855:9899	2646291	4	True				
ANR	2646828	AssignmentExpression	( ( float * ) & ctx -> ohi ) [ i ] = params -> levels - 1		2646291	0		=			
ANR	2646829	ArrayIndexing	( ( float * ) & ctx -> ohi ) [ i ]		2646291	0					
ANR	2646830	CastExpression	( float * ) & ctx -> ohi		2646291	0					
ANR	2646831	CastTarget	float *		2646291	0					
ANR	2646832	UnaryOperationExpression	& ctx -> ohi		2646291	1					
ANR	2646833	UnaryOperator	&		2646291	0					
ANR	2646834	PtrMemberAccess	ctx -> ohi		2646291	1					
ANR	2646835	Identifier	ctx		2646291	0					
ANR	2646836	Identifier	ohi		2646291	1					
ANR	2646837	Identifier	i		2646291	1					
ANR	2646838	AdditiveExpression	params -> levels - 1		2646291	1		-			
ANR	2646839	PtrMemberAccess	params -> levels		2646291	0					
ANR	2646840	Identifier	params		2646291	0					
ANR	2646841	Identifier	levels		2646291	1					
ANR	2646842	PrimaryExpression	1		2646291	1					
ANR	2646843	ExpressionStatement	( ( float * ) & ctx -> ehi ) [ i ] = 1.1	401:6:9907:9936	2646291	5	True				
ANR	2646844	AssignmentExpression	( ( float * ) & ctx -> ehi ) [ i ] = 1.1		2646291	0		=			
ANR	2646845	ArrayIndexing	( ( float * ) & ctx -> ehi ) [ i ]		2646291	0					
ANR	2646846	CastExpression	( float * ) & ctx -> ehi		2646291	0					
ANR	2646847	CastTarget	float *		2646291	0					
ANR	2646848	UnaryOperationExpression	& ctx -> ehi		2646291	1					
ANR	2646849	UnaryOperator	&		2646291	0					
ANR	2646850	PtrMemberAccess	ctx -> ehi		2646291	1					
ANR	2646851	Identifier	ctx		2646291	0					
ANR	2646852	Identifier	ehi		2646291	1					
ANR	2646853	Identifier	i		2646291	1					
ANR	2646854	PrimaryExpression	1.1		2646291	1					
ANR	2646855	ExpressionStatement	( ( float * ) & ctx -> elo ) [ i ] = - 0.1	402:6:9944:9974	2646291	6	True				
ANR	2646856	AssignmentExpression	( ( float * ) & ctx -> elo ) [ i ] = - 0.1		2646291	0		=			
ANR	2646857	ArrayIndexing	( ( float * ) & ctx -> elo ) [ i ]		2646291	0					
ANR	2646858	CastExpression	( float * ) & ctx -> elo		2646291	0					
ANR	2646859	CastTarget	float *		2646291	0					
ANR	2646860	UnaryOperationExpression	& ctx -> elo		2646291	1					
ANR	2646861	UnaryOperator	&		2646291	0					
ANR	2646862	PtrMemberAccess	ctx -> elo		2646291	1					
ANR	2646863	Identifier	ctx		2646291	0					
ANR	2646864	Identifier	elo		2646291	1					
ANR	2646865	Identifier	i		2646291	1					
ANR	2646866	UnaryOperationExpression	- 0.1		2646291	1					
ANR	2646867	UnaryOperator	-		2646291	0					
ANR	2646868	PrimaryExpression	0.1		2646291	1					
ANR	2646869	ExpressionStatement	( ( float * ) & ctx -> r_mul ) [ i ] = r_mul	403:6:9982:10015	2646291	7	True				
ANR	2646870	AssignmentExpression	( ( float * ) & ctx -> r_mul ) [ i ] = r_mul		2646291	0		=			
ANR	2646871	ArrayIndexing	( ( float * ) & ctx -> r_mul ) [ i ]		2646291	0					
ANR	2646872	CastExpression	( float * ) & ctx -> r_mul		2646291	0					
ANR	2646873	CastTarget	float *		2646291	0					
ANR	2646874	UnaryOperationExpression	& ctx -> r_mul		2646291	1					
ANR	2646875	UnaryOperator	&		2646291	0					
ANR	2646876	PtrMemberAccess	ctx -> r_mul		2646291	1					
ANR	2646877	Identifier	ctx		2646291	0					
ANR	2646878	Identifier	r_mul		2646291	1					
ANR	2646879	Identifier	i		2646291	1					
ANR	2646880	Identifier	r_mul		2646291	1					
ANR	2646881	ExpressionStatement	( ( float * ) & ctx -> rsbase ) [ i ] = rsbase	404:6:10023:10058	2646291	8	True				
ANR	2646882	AssignmentExpression	( ( float * ) & ctx -> rsbase ) [ i ] = rsbase		2646291	0		=			
ANR	2646883	ArrayIndexing	( ( float * ) & ctx -> rsbase ) [ i ]		2646291	0					
ANR	2646884	CastExpression	( float * ) & ctx -> rsbase		2646291	0					
ANR	2646885	CastTarget	float *		2646291	0					
ANR	2646886	UnaryOperationExpression	& ctx -> rsbase		2646291	1					
ANR	2646887	UnaryOperator	&		2646291	0					
ANR	2646888	PtrMemberAccess	ctx -> rsbase		2646291	1					
ANR	2646889	Identifier	ctx		2646291	0					
ANR	2646890	Identifier	rsbase		2646291	1					
ANR	2646891	Identifier	i		2646291	1					
ANR	2646892	Identifier	rsbase		2646291	1					
ANR	2646893	ExpressionStatement	( ( float * ) & ctx -> rbmul ) [ i ] = rbmul	405:6:10066:10099	2646291	9	True				
ANR	2646894	AssignmentExpression	( ( float * ) & ctx -> rbmul ) [ i ] = rbmul		2646291	0		=			
ANR	2646895	ArrayIndexing	( ( float * ) & ctx -> rbmul ) [ i ]		2646291	0					
ANR	2646896	CastExpression	( float * ) & ctx -> rbmul		2646291	0					
ANR	2646897	CastTarget	float *		2646291	0					
ANR	2646898	UnaryOperationExpression	& ctx -> rbmul		2646291	1					
ANR	2646899	UnaryOperator	&		2646291	0					
ANR	2646900	PtrMemberAccess	ctx -> rbmul		2646291	1					
ANR	2646901	Identifier	ctx		2646291	0					
ANR	2646902	Identifier	rbmul		2646291	1					
ANR	2646903	Identifier	i		2646291	1					
ANR	2646904	Identifier	rbmul		2646291	1					
ANR	2646905	ExpressionStatement	ctx -> kernel = kernel	407:2:10109:10129	2646291	27	True				
ANR	2646906	AssignmentExpression	ctx -> kernel = kernel		2646291	0		=			
ANR	2646907	PtrMemberAccess	ctx -> kernel		2646291	0					
ANR	2646908	Identifier	ctx		2646291	0					
ANR	2646909	Identifier	kernel		2646291	1					
ANR	2646910	Identifier	kernel		2646291	1					
ANR	2646911	ExpressionStatement	rs_base = 35 - EVEN_SHIFT - params -> rand_scale	409:2:10134:10180	2646291	28	True				
ANR	2646912	AssignmentExpression	rs_base = 35 - EVEN_SHIFT - params -> rand_scale		2646291	0		=			
ANR	2646913	Identifier	rs_base		2646291	0					
ANR	2646914	AdditiveExpression	35 - EVEN_SHIFT - params -> rand_scale		2646291	1		-			
ANR	2646915	PrimaryExpression	35		2646291	0					
ANR	2646916	AdditiveExpression	EVEN_SHIFT - params -> rand_scale		2646291	1		-			
ANR	2646917	Identifier	EVEN_SHIFT		2646291	0					
ANR	2646918	PtrMemberAccess	params -> rand_scale		2646291	1					
ANR	2646919	Identifier	params		2646291	0					
ANR	2646920	Identifier	rand_scale		2646291	1					
ANR	2646921	ForStatement	for ( i = start_plane ; i < end_plane ; i ++ )		2646291	29					
ANR	2646922	ForInit	i = start_plane ;	411:7:10190:10205	2646291	0	True				
ANR	2646923	AssignmentExpression	i = start_plane		2646291	0		=			
ANR	2646924	Identifier	i		2646291	0					
ANR	2646925	Identifier	start_plane		2646291	1					
ANR	2646926	Condition	i < end_plane	411:24:10207:10219	2646291	1	True				
ANR	2646927	RelationalExpression	i < end_plane		2646291	0		<			
ANR	2646928	Identifier	i		2646291	0					
ANR	2646929	Identifier	end_plane		2646291	1					
ANR	2646930	PostIncDecOperationExpression	i ++	411:39:10222:10224	2646291	2	True				
ANR	2646931	Identifier	i		2646291	0					
ANR	2646932	IncDec	++		2646291	1					
ANR	2646933	CompoundStatement		82:6:2530:2535	2646291	3					
ANR	2646934	IdentifierDeclStatement	float * lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 ) ;	413:6:10239:10305	2646291	0	True				
ANR	2646935	IdentifierDecl	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2646291	0					
ANR	2646936	IdentifierDeclType	float *		2646291	0					
ANR	2646937	Identifier	lut		2646291	1					
ANR	2646938	AssignmentExpression	* lut = ( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2646291	2		=			
ANR	2646939	Identifier	lut		2646291	0					
ANR	2646940	CastExpression	( float * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2646291	1					
ANR	2646941	CastTarget	float *		2646291	0					
ANR	2646942	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3 )		2646291	1					
ANR	2646943	Callee	malloc		2646291	0					
ANR	2646944	Identifier	malloc		2646291	0					
ANR	2646945	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2646291	1					
ANR	2646946	Argument	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2646291	0					
ANR	2646947	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( float ) * 3		2646291	0		*			
ANR	2646948	AdditiveExpression	ET_SRC_MAX + 1		2646291	0		+			
ANR	2646949	Identifier	ET_SRC_MAX		2646291	0					
ANR	2646950	PrimaryExpression	1		2646291	1					
ANR	2646951	MultiplicativeExpression	sizeof ( float ) * 3		2646291	1		*			
ANR	2646952	SizeofExpression	sizeof ( float )		2646291	0					
ANR	2646953	Sizeof	sizeof		2646291	0					
ANR	2646954	SizeofOperand	float		2646291	1					
ANR	2646955	PrimaryExpression	3		2646291	1					
ANR	2646956	IdentifierDeclStatement	int j ;	414:6:10313:10318	2646291	1	True				
ANR	2646957	IdentifierDecl	j		2646291	0					
ANR	2646958	IdentifierDeclType	int		2646291	0					
ANR	2646959	Identifier	j		2646291	1					
ANR	2646960	ExpressionStatement	ctx -> luts [ i - start_plane ] = lut	415:6:10326:10358	2646291	2	True				
ANR	2646961	AssignmentExpression	ctx -> luts [ i - start_plane ] = lut		2646291	0		=			
ANR	2646962	ArrayIndexing	ctx -> luts [ i - start_plane ]		2646291	0					
ANR	2646963	PtrMemberAccess	ctx -> luts		2646291	0					
ANR	2646964	Identifier	ctx		2646291	0					
ANR	2646965	Identifier	luts		2646291	1					
ANR	2646966	AdditiveExpression	i - start_plane		2646291	1		-			
ANR	2646967	Identifier	i		2646291	0					
ANR	2646968	Identifier	start_plane		2646291	1					
ANR	2646969	Identifier	lut		2646291	1					
ANR	2646970	ForStatement	for ( j = 0 ; j < ET_SRC_MAX + 1 ; j ++ )		2646291	3					
ANR	2646971	ForInit	j = 0 ;	417:11:10372:10377	2646291	0	True				
ANR	2646972	AssignmentExpression	j = 0		2646291	0		=			
ANR	2646973	Identifier	j		2646291	0					
ANR	2646974	PrimaryExpression	0		2646291	1					
ANR	2646975	Condition	j < ET_SRC_MAX + 1	417:18:10379:10396	2646291	1	True				
ANR	2646976	RelationalExpression	j < ET_SRC_MAX + 1		2646291	0		<			
ANR	2646977	Identifier	j		2646291	0					
ANR	2646978	AdditiveExpression	ET_SRC_MAX + 1		2646291	1		+			
ANR	2646979	Identifier	ET_SRC_MAX		2646291	0					
ANR	2646980	PrimaryExpression	1		2646291	1					
ANR	2646981	PostIncDecOperationExpression	j ++	417:38:10399:10401	2646291	2	True				
ANR	2646982	Identifier	j		2646291	0					
ANR	2646983	IncDec	++		2646291	1					
ANR	2646984	CompoundStatement		88:10:2707:2717	2646291	3					
ANR	2646985	IdentifierDeclStatement	double g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale ;	419:10:10424:10478	2646291	0	True				
ANR	2646986	IdentifierDecl	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2646291	0					
ANR	2646987	IdentifierDeclType	double		2646291	0					
ANR	2646988	Identifier	g		2646291	1					
ANR	2646989	AssignmentExpression	g = ( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2646291	2		=			
ANR	2646990	Identifier	g		2646291	0					
ANR	2646991	MultiplicativeExpression	( ( 1 << 24 ) - params -> luts [ i ] [ j ] ) * im_scale		2646291	1		*			
ANR	2646992	AdditiveExpression	( 1 << 24 ) - params -> luts [ i ] [ j ]		2646291	0		-			
ANR	2646993	ShiftExpression	1 << 24		2646291	0		<<			
ANR	2646994	PrimaryExpression	1		2646291	0					
ANR	2646995	PrimaryExpression	24		2646291	1					
ANR	2646996	ArrayIndexing	params -> luts [ i ] [ j ]		2646291	1					
ANR	2646997	ArrayIndexing	params -> luts [ i ]		2646291	0					
ANR	2646998	PtrMemberAccess	params -> luts		2646291	0					
ANR	2646999	Identifier	params		2646291	0					
ANR	2647000	Identifier	luts		2646291	1					
ANR	2647001	Identifier	i		2646291	1					
ANR	2647002	Identifier	j		2646291	1					
ANR	2647003	Identifier	im_scale		2646291	1					
ANR	2647004	IdentifierDeclStatement	"int nl , rs ;"	420:10:10490:10500	2646291	1	True				
ANR	2647005	IdentifierDecl	nl		2646291	0					
ANR	2647006	IdentifierDeclType	int		2646291	0					
ANR	2647007	Identifier	nl		2646291	1					
ANR	2647008	IdentifierDecl	rs		2646291	1					
ANR	2647009	IdentifierDeclType	int		2646291	0					
ANR	2647010	Identifier	rs		2646291	1					
ANR	2647011	ExpressionStatement	lut [ j * 3 ] = g	422:10:10513:10527	2646291	2	True				
ANR	2647012	AssignmentExpression	lut [ j * 3 ] = g		2646291	0		=			
ANR	2647013	ArrayIndexing	lut [ j * 3 ]		2646291	0					
ANR	2647014	Identifier	lut		2646291	0					
ANR	2647015	MultiplicativeExpression	j * 3		2646291	1		*			
ANR	2647016	Identifier	j		2646291	0					
ANR	2647017	PrimaryExpression	3		2646291	1					
ANR	2647018	Identifier	g		2646291	1					
ANR	2647019	IfStatement	if ( g == 0.0 )		2646291	3					
ANR	2647020	Condition	g == 0.0	423:14:10543:10550	2646291	0	True				
ANR	2647021	EqualityExpression	g == 0.0		2646291	0		==			
ANR	2647022	Identifier	g		2646291	0					
ANR	2647023	PrimaryExpression	0.0		2646291	1					
ANR	2647024	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5	424:12:10565:10585	2646291	1	True				
ANR	2647025	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5		2646291	0		=			
ANR	2647026	ArrayIndexing	lut [ j * 3 + 1 ]		2646291	0					
ANR	2647027	Identifier	lut		2646291	0					
ANR	2647028	AdditiveExpression	j * 3 + 1		2646291	1		+			
ANR	2647029	MultiplicativeExpression	j * 3		2646291	0		*			
ANR	2647030	Identifier	j		2646291	0					
ANR	2647031	PrimaryExpression	3		2646291	1					
ANR	2647032	PrimaryExpression	1		2646291	1					
ANR	2647033	PrimaryExpression	0.5		2646291	1					
ANR	2647034	ElseStatement	else		2646291	0					
ANR	2647035	ExpressionStatement	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g	426:12:10614:10656	2646291	0	True				
ANR	2647036	AssignmentExpression	lut [ j * 3 + 1 ] = 0.5 - r_mul * rbscale / g		2646291	0		=			
ANR	2647037	ArrayIndexing	lut [ j * 3 + 1 ]		2646291	0					
ANR	2647038	Identifier	lut		2646291	0					
ANR	2647039	AdditiveExpression	j * 3 + 1		2646291	1		+			
ANR	2647040	MultiplicativeExpression	j * 3		2646291	0		*			
ANR	2647041	Identifier	j		2646291	0					
ANR	2647042	PrimaryExpression	3		2646291	1					
ANR	2647043	PrimaryExpression	1		2646291	1					
ANR	2647044	AdditiveExpression	0.5 - r_mul * rbscale / g		2646291	1		-			
ANR	2647045	PrimaryExpression	0.5		2646291	0					
ANR	2647046	MultiplicativeExpression	r_mul * rbscale / g		2646291	1		*			
ANR	2647047	Identifier	r_mul		2646291	0					
ANR	2647048	MultiplicativeExpression	rbscale / g		2646291	1		/			
ANR	2647049	Identifier	rbscale		2646291	0					
ANR	2647050	Identifier	g		2646291	1					
ANR	2647051	ExpressionStatement	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )	427:10:10668:10717	2646291	4	True				
ANR	2647052	AssignmentExpression	nl = ( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		2646291	0		=			
ANR	2647053	Identifier	nl		2646291	0					
ANR	2647054	MultiplicativeExpression	( params -> levels - 1 - g ) * ( 1 << EVEN_SHIFT )		2646291	1		*			
ANR	2647055	AdditiveExpression	params -> levels - 1 - g		2646291	0		-			
ANR	2647056	PtrMemberAccess	params -> levels		2646291	0					
ANR	2647057	Identifier	params		2646291	0					
ANR	2647058	Identifier	levels		2646291	1					
ANR	2647059	AdditiveExpression	1 - g		2646291	1		-			
ANR	2647060	PrimaryExpression	1		2646291	0					
ANR	2647061	Identifier	g		2646291	1					
ANR	2647062	ShiftExpression	1 << EVEN_SHIFT		2646291	1		<<			
ANR	2647063	PrimaryExpression	1		2646291	0					
ANR	2647064	Identifier	EVEN_SHIFT		2646291	1					
ANR	2647065	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"	428:10:10729:10839	2646291	5	True				
ANR	2647066	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		2646291	0		=			
ANR	2647067	Identifier	rs		2646291	0					
ANR	2647068	CallExpression	"eb_compute_randshift ( nl , rs_base , params -> do_shadows , params -> levels )"		2646291	1					
ANR	2647069	Callee	eb_compute_randshift		2646291	0					
ANR	2647070	Identifier	eb_compute_randshift		2646291	0					
ANR	2647071	ArgumentList	nl		2646291	1					
ANR	2647072	Argument	nl		2646291	0					
ANR	2647073	Identifier	nl		2646291	0					
ANR	2647074	Argument	rs_base		2646291	1					
ANR	2647075	Identifier	rs_base		2646291	0					
ANR	2647076	Argument	params -> do_shadows		2646291	2					
ANR	2647077	PtrMemberAccess	params -> do_shadows		2646291	0					
ANR	2647078	Identifier	params		2646291	0					
ANR	2647079	Identifier	do_shadows		2646291	1					
ANR	2647080	Argument	params -> levels		2646291	3					
ANR	2647081	PtrMemberAccess	params -> levels		2646291	0					
ANR	2647082	Identifier	params		2646291	0					
ANR	2647083	Identifier	levels		2646291	1					
ANR	2647084	ExpressionStatement	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )	431:10:10852:10904	2646291	6	True				
ANR	2647085	AssignmentExpression	lut [ j * 3 + 2 ] = 1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		2646291	0		=			
ANR	2647086	ArrayIndexing	lut [ j * 3 + 2 ]		2646291	0					
ANR	2647087	Identifier	lut		2646291	0					
ANR	2647088	AdditiveExpression	j * 3 + 2		2646291	1		+			
ANR	2647089	MultiplicativeExpression	j * 3		2646291	0		*			
ANR	2647090	Identifier	j		2646291	0					
ANR	2647091	PrimaryExpression	3		2646291	1					
ANR	2647092	PrimaryExpression	2		2646291	1					
ANR	2647093	MultiplicativeExpression	1.0 / ( 1 << EVEN_SHIFT ) / ( 1 << rs )		2646291	1		/			
ANR	2647094	PrimaryExpression	1.0		2646291	0					
ANR	2647095	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( 1 << rs )		2646291	1		/			
ANR	2647096	ShiftExpression	1 << EVEN_SHIFT		2646291	0		<<			
ANR	2647097	PrimaryExpression	1		2646291	0					
ANR	2647098	Identifier	EVEN_SHIFT		2646291	1					
ANR	2647099	ShiftExpression	1 << rs		2646291	1		<<			
ANR	2647100	PrimaryExpression	1		2646291	0					
ANR	2647101	Identifier	rs		2646291	1					
ANR	2647102	ForStatement	for ( i = i - start_plane ; i < 4 ; i ++ )		2646291	30					
ANR	2647103	ForInit	i = i - start_plane ;	434:7:10929:10948	2646291	0	True				
ANR	2647104	AssignmentExpression	i = i - start_plane		2646291	0		=			
ANR	2647105	Identifier	i		2646291	0					
ANR	2647106	AdditiveExpression	i - start_plane		2646291	1		-			
ANR	2647107	Identifier	i		2646291	0					
ANR	2647108	Identifier	start_plane		2646291	1					
ANR	2647109	Condition	i < 4	434:28:10950:10954	2646291	1	True				
ANR	2647110	RelationalExpression	i < 4		2646291	0		<			
ANR	2647111	Identifier	i		2646291	0					
ANR	2647112	PrimaryExpression	4		2646291	1					
ANR	2647113	PostIncDecOperationExpression	i ++	434:35:10957:10959	2646291	2	True				
ANR	2647114	Identifier	i		2646291	0					
ANR	2647115	IncDec	++		2646291	1					
ANR	2647116	ExpressionStatement	ctx -> luts [ i ] = NULL	435:4:10966:10985	2646291	3	True				
ANR	2647117	AssignmentExpression	ctx -> luts [ i ] = NULL		2646291	0		=			
ANR	2647118	ArrayIndexing	ctx -> luts [ i ]		2646291	0					
ANR	2647119	PtrMemberAccess	ctx -> luts		2646291	0					
ANR	2647120	Identifier	ctx		2646291	0					
ANR	2647121	Identifier	luts		2646291	1					
ANR	2647122	Identifier	i		2646291	1					
ANR	2647123	Identifier	NULL		2646291	1					
ANR	2647124	ExpressionStatement	"ctx -> iir_line = ( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	437:2:10990:11059	2646291	31	True				
ANR	2647125	AssignmentExpression	"ctx -> iir_line = ( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	0		=			
ANR	2647126	PtrMemberAccess	ctx -> iir_line		2646291	0					
ANR	2647127	Identifier	ctx		2646291	0					
ANR	2647128	Identifier	iir_line		2646291	1					
ANR	2647129	CastExpression	"( vector float * ) eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	1					
ANR	2647130	CastTarget	vector float *		2646291	0					
ANR	2647131	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	1					
ANR	2647132	Callee	eb_malloc_aligned		2646291	0					
ANR	2647133	Identifier	eb_malloc_aligned		2646291	0					
ANR	2647134	ArgumentList	16 * ( xs + 32 )		2646291	1					
ANR	2647135	Argument	16 * ( xs + 32 )		2646291	0					
ANR	2647136	MultiplicativeExpression	16 * ( xs + 32 )		2646291	0		*			
ANR	2647137	PrimaryExpression	16		2646291	0					
ANR	2647138	AdditiveExpression	xs + 32		2646291	1		+			
ANR	2647139	Identifier	xs		2646291	0					
ANR	2647140	PrimaryExpression	32		2646291	1					
ANR	2647141	Argument	16		2646291	1					
ANR	2647142	PrimaryExpression	16		2646291	0					
ANR	2647143	Statement	ctx	438:2:11063:11065	2646291	32	True				
ANR	2647144	Statement	->	438:5:11066:11067	2646291	33	True				
ANR	2647145	Statement	a_line	438:7:11068:11073	2646291	34	True				
ANR	2647146	Statement	=	438:14:11075:11075	2646291	35	True				
ANR	2647147	Statement	(	438:16:11077:11077	2646291	36	True				
ANR	2647148	Statement	vector	438:17:11078:11083	2646291	37	True				
ANR	2647149	Statement	unsigned	438:24:11085:11092	2646291	38	True				
ANR	2647150	Statement	int	438:33:11094:11096	2646291	39	True				
ANR	2647151	Statement	*	438:37:11098:11098	2646291	40	True				
ANR	2647152	Statement	)	438:38:11099:11099	2646291	41	True				
ANR	2647153	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	438:39:11100:11137	2646291	42	True				
ANR	2647154	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	0					
ANR	2647155	Callee	eb_malloc_aligned		2646291	0					
ANR	2647156	Identifier	eb_malloc_aligned		2646291	0					
ANR	2647157	ArgumentList	16 * ( xs + 32 )		2646291	1					
ANR	2647158	Argument	16 * ( xs + 32 )		2646291	0					
ANR	2647159	MultiplicativeExpression	16 * ( xs + 32 )		2646291	0		*			
ANR	2647160	PrimaryExpression	16		2646291	0					
ANR	2647161	AdditiveExpression	xs + 32		2646291	1		+			
ANR	2647162	Identifier	xs		2646291	0					
ANR	2647163	PrimaryExpression	32		2646291	1					
ANR	2647164	Argument	16		2646291	1					
ANR	2647165	PrimaryExpression	16		2646291	0					
ANR	2647166	Statement	ctx	439:2:11141:11143	2646291	43	True				
ANR	2647167	Statement	->	439:5:11144:11145	2646291	44	True				
ANR	2647168	Statement	b_line	439:7:11146:11151	2646291	45	True				
ANR	2647169	Statement	=	439:14:11153:11153	2646291	46	True				
ANR	2647170	Statement	(	439:16:11155:11155	2646291	47	True				
ANR	2647171	Statement	vector	439:17:11156:11161	2646291	48	True				
ANR	2647172	Statement	unsigned	439:24:11163:11170	2646291	49	True				
ANR	2647173	Statement	int	439:33:11172:11174	2646291	50	True				
ANR	2647174	Statement	*	439:37:11176:11176	2646291	51	True				
ANR	2647175	Statement	)	439:38:11177:11177	2646291	52	True				
ANR	2647176	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	439:39:11178:11215	2646291	53	True				
ANR	2647177	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	0					
ANR	2647178	Callee	eb_malloc_aligned		2646291	0					
ANR	2647179	Identifier	eb_malloc_aligned		2646291	0					
ANR	2647180	ArgumentList	16 * ( xs + 32 )		2646291	1					
ANR	2647181	Argument	16 * ( xs + 32 )		2646291	0					
ANR	2647182	MultiplicativeExpression	16 * ( xs + 32 )		2646291	0		*			
ANR	2647183	PrimaryExpression	16		2646291	0					
ANR	2647184	AdditiveExpression	xs + 32		2646291	1		+			
ANR	2647185	Identifier	xs		2646291	0					
ANR	2647186	PrimaryExpression	32		2646291	1					
ANR	2647187	Argument	16		2646291	1					
ANR	2647188	PrimaryExpression	16		2646291	0					
ANR	2647189	Statement	ctx	440:2:11219:11221	2646291	54	True				
ANR	2647190	Statement	->	440:5:11222:11223	2646291	55	True				
ANR	2647191	Statement	r_line	440:7:11224:11229	2646291	56	True				
ANR	2647192	Statement	=	440:14:11231:11231	2646291	57	True				
ANR	2647193	Statement	(	440:16:11233:11233	2646291	58	True				
ANR	2647194	Statement	vector	440:17:11234:11239	2646291	59	True				
ANR	2647195	Statement	unsigned	440:24:11241:11248	2646291	60	True				
ANR	2647196	Statement	int	440:33:11250:11252	2646291	61	True				
ANR	2647197	Statement	*	440:37:11254:11254	2646291	62	True				
ANR	2647198	Statement	)	440:38:11255:11255	2646291	63	True				
ANR	2647199	ExpressionStatement	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"	440:39:11256:11293	2646291	64	True				
ANR	2647200	CallExpression	"eb_malloc_aligned ( 16 * ( xs + 32 ) , 16 )"		2646291	0					
ANR	2647201	Callee	eb_malloc_aligned		2646291	0					
ANR	2647202	Identifier	eb_malloc_aligned		2646291	0					
ANR	2647203	ArgumentList	16 * ( xs + 32 )		2646291	1					
ANR	2647204	Argument	16 * ( xs + 32 )		2646291	0					
ANR	2647205	MultiplicativeExpression	16 * ( xs + 32 )		2646291	0		*			
ANR	2647206	PrimaryExpression	16		2646291	0					
ANR	2647207	AdditiveExpression	xs + 32		2646291	1		+			
ANR	2647208	Identifier	xs		2646291	0					
ANR	2647209	PrimaryExpression	32		2646291	1					
ANR	2647210	Argument	16		2646291	1					
ANR	2647211	PrimaryExpression	16		2646291	0					
ANR	2647212	ForStatement	for ( i = 0 ; i < ( xs + 32 ) * 4 ; i ++ )		2646291	65					
ANR	2647213	ForInit	i = 0 ;	441:7:11302:11307	2646291	0	True				
ANR	2647214	AssignmentExpression	i = 0		2646291	0		=			
ANR	2647215	Identifier	i		2646291	0					
ANR	2647216	PrimaryExpression	0		2646291	1					
ANR	2647217	Condition	i < ( xs + 32 ) * 4	441:14:11309:11325	2646291	1	True				
ANR	2647218	RelationalExpression	i < ( xs + 32 ) * 4		2646291	0		<			
ANR	2647219	Identifier	i		2646291	0					
ANR	2647220	MultiplicativeExpression	( xs + 32 ) * 4		2646291	1		*			
ANR	2647221	AdditiveExpression	xs + 32		2646291	0		+			
ANR	2647222	Identifier	xs		2646291	0					
ANR	2647223	PrimaryExpression	32		2646291	1					
ANR	2647224	PrimaryExpression	4		2646291	1					
ANR	2647225	PostIncDecOperationExpression	i ++	441:33:11328:11330	2646291	2	True				
ANR	2647226	Identifier	i		2646291	0					
ANR	2647227	IncDec	++		2646291	1					
ANR	2647228	CompoundStatement		110:4:3554:3554	2646291	3					
ANR	2647229	ExpressionStatement	( ( float * ) ctx -> iir_line ) [ i ] = 0	443:6:11345:11376	2646291	0	True				
ANR	2647230	AssignmentExpression	( ( float * ) ctx -> iir_line ) [ i ] = 0		2646291	0		=			
ANR	2647231	ArrayIndexing	( ( float * ) ctx -> iir_line ) [ i ]		2646291	0					
ANR	2647232	CastExpression	( float * ) ctx -> iir_line		2646291	0					
ANR	2647233	CastTarget	float *		2646291	0					
ANR	2647234	PtrMemberAccess	ctx -> iir_line		2646291	1					
ANR	2647235	Identifier	ctx		2646291	0					
ANR	2647236	Identifier	iir_line		2646291	1					
ANR	2647237	Identifier	i		2646291	1					
ANR	2647238	PrimaryExpression	0		2646291	1					
ANR	2647239	ExpressionStatement	( ( int * ) ctx -> a_line ) [ i ] = 1	444:6:11384:11411	2646291	1	True				
ANR	2647240	AssignmentExpression	( ( int * ) ctx -> a_line ) [ i ] = 1		2646291	0		=			
ANR	2647241	ArrayIndexing	( ( int * ) ctx -> a_line ) [ i ]		2646291	0					
ANR	2647242	CastExpression	( int * ) ctx -> a_line		2646291	0					
ANR	2647243	CastTarget	int *		2646291	0					
ANR	2647244	PtrMemberAccess	ctx -> a_line		2646291	1					
ANR	2647245	Identifier	ctx		2646291	0					
ANR	2647246	Identifier	a_line		2646291	1					
ANR	2647247	Identifier	i		2646291	1					
ANR	2647248	PrimaryExpression	1		2646291	1					
ANR	2647249	ExpressionStatement	( ( int * ) ctx -> b_line ) [ i ] = aspect2	445:6:11419:11452	2646291	2	True				
ANR	2647250	AssignmentExpression	( ( int * ) ctx -> b_line ) [ i ] = aspect2		2646291	0		=			
ANR	2647251	ArrayIndexing	( ( int * ) ctx -> b_line ) [ i ]		2646291	0					
ANR	2647252	CastExpression	( int * ) ctx -> b_line		2646291	0					
ANR	2647253	CastTarget	int *		2646291	0					
ANR	2647254	PtrMemberAccess	ctx -> b_line		2646291	1					
ANR	2647255	Identifier	ctx		2646291	0					
ANR	2647256	Identifier	b_line		2646291	1					
ANR	2647257	Identifier	i		2646291	1					
ANR	2647258	Identifier	aspect2		2646291	1					
ANR	2647259	ExpressionStatement	( ( int * ) ctx -> r_line ) [ i ] = 0	446:6:11460:11487	2646291	3	True				
ANR	2647260	AssignmentExpression	( ( int * ) ctx -> r_line ) [ i ] = 0		2646291	0		=			
ANR	2647261	ArrayIndexing	( ( int * ) ctx -> r_line ) [ i ]		2646291	0					
ANR	2647262	CastExpression	( int * ) ctx -> r_line		2646291	0					
ANR	2647263	CastTarget	int *		2646291	0					
ANR	2647264	PtrMemberAccess	ctx -> r_line		2646291	1					
ANR	2647265	Identifier	ctx		2646291	0					
ANR	2647266	Identifier	r_line		2646291	1					
ANR	2647267	Identifier	i		2646291	1					
ANR	2647268	PrimaryExpression	0		2646291	1					
ANR	2647269	ExpressionStatement	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )	449:2:11498:11546	2646291	66	True				
ANR	2647270	AssignmentExpression	ctx -> skip_line = ( char * ) malloc ( ( xs + 15 ) & - 16 )		2646291	0		=			
ANR	2647271	PtrMemberAccess	ctx -> skip_line		2646291	0					
ANR	2647272	Identifier	ctx		2646291	0					
ANR	2647273	Identifier	skip_line		2646291	1					
ANR	2647274	CastExpression	( char * ) malloc ( ( xs + 15 ) & - 16 )		2646291	1					
ANR	2647275	CastTarget	char *		2646291	0					
ANR	2647276	CallExpression	malloc ( ( xs + 15 ) & - 16 )		2646291	1					
ANR	2647277	Callee	malloc		2646291	0					
ANR	2647278	Identifier	malloc		2646291	0					
ANR	2647279	ArgumentList	( xs + 15 ) & - 16		2646291	1					
ANR	2647280	Argument	( xs + 15 ) & - 16		2646291	0					
ANR	2647281	BitAndExpression	( xs + 15 ) & - 16		2646291	0		&			
ANR	2647282	AdditiveExpression	xs + 15		2646291	0		+			
ANR	2647283	Identifier	xs		2646291	0					
ANR	2647284	PrimaryExpression	15		2646291	1					
ANR	2647285	UnaryOperationExpression	- 16		2646291	1					
ANR	2647286	UnaryOperator	-		2646291	0					
ANR	2647287	PrimaryExpression	16		2646291	1					
ANR	2647288	ReturnStatement	return ctx ;	451:2:11551:11561	2646291	67	True				
ANR	2647289	Identifier	ctx		2646291	0					
ANR	2647290	ReturnType	static eb_ctx_avec *		2646291	1					
ANR	2647291	Identifier	eb_ctx_avec_new		2646291	2					
ANR	2647292	ParameterList	"const EvenBetterParams * params , int start_plane , int end_plane"		2646291	3					
ANR	2647293	Parameter	const EvenBetterParams * params	332:16:7718:7747	2646291	0	True				
ANR	2647294	ParameterType	const EvenBetterParams *		2646291	0					
ANR	2647295	Identifier	params		2646291	1					
ANR	2647296	Parameter	int start_plane	332:48:7750:7764	2646291	1	True				
ANR	2647297	ParameterType	int		2646291	0					
ANR	2647298	Identifier	start_plane		2646291	1					
ANR	2647299	Parameter	int end_plane	332:65:7767:7779	2646291	2	True				
ANR	2647300	ParameterType	int		2646291	0					
ANR	2647301	Identifier	end_plane		2646291	1					
ANR	2647302	CFGEntryNode	ENTRY		2646291		True				
ANR	2647303	CFGExitNode	EXIT		2646291		True				
ANR	2647304	InfiniteForNode	true		2646291		True				
ANR	2647305	Symbol	r_mul		2646291						
ANR	2647306	Symbol	* ctx -> luts		2646291						
ANR	2647307	Symbol	aspect2		2646291						
ANR	2647308	Symbol	ctx -> b		2646291						
ANR	2647309	Symbol	ctx -> e		2646291						
ANR	2647310	Symbol	lut		2646291						
ANR	2647311	Symbol	eb_compute_randshift		2646291						
ANR	2647312	Symbol	imscale1		2646291						
ANR	2647313	Symbol	imscale2		2646291						
ANR	2647314	Symbol	ctx -> xs		2646291						
ANR	2647315	Symbol	ctx -> a		2646291						
ANR	2647316	Symbol	sqrt		2646291						
ANR	2647317	Symbol	ctx -> r		2646291						
ANR	2647318	Symbol	vec_all_eq		2646291						
ANR	2647319	Symbol	vec_madd		2646291						
ANR	2647320	Symbol	rs_base		2646291						
ANR	2647321	Symbol	ctx		2646291						
ANR	2647322	Symbol	params		2646291						
ANR	2647323	Symbol	params -> source_width		2646291						
ANR	2647324	Symbol	start_plane		2646291						
ANR	2647325	Symbol	rs		2646291						
ANR	2647326	Symbol	params -> do_shadows		2646291						
ANR	2647327	Symbol	ctx -> seed2		2646291						
ANR	2647328	Symbol	ctx -> seed1		2646291						
ANR	2647329	Symbol	& ctx -> imscale1		2646291						
ANR	2647330	Symbol	ctx -> ehi		2646291						
ANR	2647331	Symbol	* ctx -> r_line		2646291						
ANR	2647332	Symbol	& ctx -> seed2		2646291						
ANR	2647333	Symbol	& ctx -> seed1		2646291						
ANR	2647334	Symbol	ctx -> e_i_1		2646291						
ANR	2647335	Symbol	rbscale		2646291						
ANR	2647336	Symbol	* params		2646291						
ANR	2647337	Symbol	& ctx -> imscale2		2646291						
ANR	2647338	Symbol	malloc		2646291						
ANR	2647339	Symbol	kernel		2646291						
ANR	2647340	Symbol	g		2646291						
ANR	2647341	Symbol	i		2646291						
ANR	2647342	Symbol	j		2646291						
ANR	2647343	Symbol	k		2646291						
ANR	2647344	Symbol	im_scale		2646291						
ANR	2647345	Symbol	* ctx		2646291						
ANR	2647346	Symbol	vec_rsqrte		2646291						
ANR	2647347	Symbol	ctx -> aspect2		2646291						
ANR	2647348	Symbol	* * params -> luts		2646291						
ANR	2647349	Symbol	* lut		2646291						
ANR	2647350	Symbol	ctx -> foff		2646291						
ANR	2647351	Symbol	foff		2646291						
ANR	2647352	Symbol	* * ctx		2646291						
ANR	2647353	Symbol	& ctx -> ehi		2646291						
ANR	2647354	Symbol	vec_nmsub		2646291						
ANR	2647355	Symbol	ctx -> a_line		2646291						
ANR	2647356	Symbol	ET_SRC_MAX		2646291						
ANR	2647357	Symbol	f0		2646291						
ANR	2647358	Symbol	f1		2646291						
ANR	2647359	Symbol	ctx -> rbmul		2646291						
ANR	2647360	Symbol	* * params		2646291						
ANR	2647361	Symbol	params -> even_c1_scale		2646291						
ANR	2647362	Symbol	zero		2646291						
ANR	2647363	Symbol	almostone		2646291						
ANR	2647364	Symbol	* * * params		2646291						
ANR	2647365	Symbol	EVEN_SHIFT		2646291						
ANR	2647366	Symbol	ctx -> skip_line		2646291						
ANR	2647367	Symbol	& ctx -> rsbase		2646291						
ANR	2647368	Symbol	ctx -> iir_line		2646291						
ANR	2647369	Symbol	* ctx -> b_line		2646291						
ANR	2647370	Symbol	ctx -> r_mul		2646291						
ANR	2647371	Symbol	rsbase		2646291						
ANR	2647372	Symbol	* * i		2646291						
ANR	2647373	Symbol	* ctx -> a_line		2646291						
ANR	2647374	Symbol	NULL		2646291						
ANR	2647375	Symbol	ctx -> imscale1		2646291						
ANR	2647376	Symbol	ctx -> imscale2		2646291						
ANR	2647377	Symbol	vec_splat_u32		2646291						
ANR	2647378	Symbol	eb_compute_rbscale		2646291						
ANR	2647379	Symbol	params -> gamma		2646291						
ANR	2647380	Symbol	& ctx -> aspect2		2646291						
ANR	2647381	Symbol	* ctx -> iir_line		2646291						
ANR	2647382	Symbol	nl		2646291						
ANR	2647383	Symbol	& ctx -> b		2646291						
ANR	2647384	Symbol	* params -> luts		2646291						
ANR	2647385	Symbol	eb_malloc_aligned		2646291						
ANR	2647386	Symbol	ctx -> rsbase		2646291						
ANR	2647387	Symbol	params -> rand_scale		2646291						
ANR	2647388	Symbol	ctx -> b_line		2646291						
ANR	2647389	Symbol	end_plane		2646291						
ANR	2647390	Symbol	ctx -> elo		2646291						
ANR	2647391	Symbol	& ctx -> r_mul		2646291						
ANR	2647392	Symbol	ctx -> ohi		2646291						
ANR	2647393	Symbol	params -> aspect		2646291						
ANR	2647394	Symbol	rbmul		2646291						
ANR	2647395	Symbol	& ctx -> ohi		2646291						
ANR	2647396	Symbol	params -> luts		2646291						
ANR	2647397	Symbol	ctx -> kernel		2646291						
ANR	2647398	Symbol	ctx -> r_line		2646291						
ANR	2647399	Symbol	params -> levels		2646291						
ANR	2647400	Symbol	ctx -> luts		2646291						
ANR	2647401	Symbol	* i		2646291						
ANR	2647402	Symbol	* j		2646291						
ANR	2647403	Symbol	& ctx -> elo		2646291						
ANR	2647404	Symbol	& ctx -> rbmul		2646291						
ANR	2647405	Symbol	xs		2646291						
ANR	2647406	Symbol	* start_plane		2646291						
ANR	2647407	Function	eb_ctx_avec_free	454:0:11566:11853							
ANR	2647408	FunctionDef	eb_ctx_avec_free (eb_ctx_avec * ctx)		2647407	0					
ANR	2647409	CompoundStatement		456:0:11613:11853	2647407	0					
ANR	2647410	IdentifierDeclStatement	int i ;	457:2:11617:11622	2647407	0	True				
ANR	2647411	IdentifierDecl	i		2647407	0					
ANR	2647412	IdentifierDeclType	int		2647407	0					
ANR	2647413	Identifier	i		2647407	1					
ANR	2647414	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		2647407	1					
ANR	2647415	ForInit	i = 0 ;	459:7:11632:11637	2647407	0	True				
ANR	2647416	AssignmentExpression	i = 0		2647407	0		=			
ANR	2647417	Identifier	i		2647407	0					
ANR	2647418	PrimaryExpression	0		2647407	1					
ANR	2647419	Condition	i < 4	459:14:11639:11643	2647407	1	True				
ANR	2647420	RelationalExpression	i < 4		2647407	0		<			
ANR	2647421	Identifier	i		2647407	0					
ANR	2647422	PrimaryExpression	4		2647407	1					
ANR	2647423	PostIncDecOperationExpression	i ++	459:21:11646:11648	2647407	2	True				
ANR	2647424	Identifier	i		2647407	0					
ANR	2647425	IncDec	++		2647407	1					
ANR	2647426	ExpressionStatement	free ( ctx -> luts [ i ] )	460:4:11655:11673	2647407	3	True				
ANR	2647427	CallExpression	free ( ctx -> luts [ i ] )		2647407	0					
ANR	2647428	Callee	free		2647407	0					
ANR	2647429	Identifier	free		2647407	0					
ANR	2647430	ArgumentList	ctx -> luts [ i ]		2647407	1					
ANR	2647431	Argument	ctx -> luts [ i ]		2647407	0					
ANR	2647432	ArrayIndexing	ctx -> luts [ i ]		2647407	0					
ANR	2647433	PtrMemberAccess	ctx -> luts		2647407	0					
ANR	2647434	Identifier	ctx		2647407	0					
ANR	2647435	Identifier	luts		2647407	1					
ANR	2647436	Identifier	i		2647407	1					
ANR	2647437	ExpressionStatement	eb_free_aligned ( ctx -> iir_line )	461:2:11677:11707	2647407	2	True				
ANR	2647438	CallExpression	eb_free_aligned ( ctx -> iir_line )		2647407	0					
ANR	2647439	Callee	eb_free_aligned		2647407	0					
ANR	2647440	Identifier	eb_free_aligned		2647407	0					
ANR	2647441	ArgumentList	ctx -> iir_line		2647407	1					
ANR	2647442	Argument	ctx -> iir_line		2647407	0					
ANR	2647443	PtrMemberAccess	ctx -> iir_line		2647407	0					
ANR	2647444	Identifier	ctx		2647407	0					
ANR	2647445	Identifier	iir_line		2647407	1					
ANR	2647446	ExpressionStatement	eb_free_aligned ( ctx -> a_line )	462:2:11711:11739	2647407	3	True				
ANR	2647447	CallExpression	eb_free_aligned ( ctx -> a_line )		2647407	0					
ANR	2647448	Callee	eb_free_aligned		2647407	0					
ANR	2647449	Identifier	eb_free_aligned		2647407	0					
ANR	2647450	ArgumentList	ctx -> a_line		2647407	1					
ANR	2647451	Argument	ctx -> a_line		2647407	0					
ANR	2647452	PtrMemberAccess	ctx -> a_line		2647407	0					
ANR	2647453	Identifier	ctx		2647407	0					
ANR	2647454	Identifier	a_line		2647407	1					
ANR	2647455	ExpressionStatement	eb_free_aligned ( ctx -> b_line )	463:2:11743:11771	2647407	4	True				
ANR	2647456	CallExpression	eb_free_aligned ( ctx -> b_line )		2647407	0					
ANR	2647457	Callee	eb_free_aligned		2647407	0					
ANR	2647458	Identifier	eb_free_aligned		2647407	0					
ANR	2647459	ArgumentList	ctx -> b_line		2647407	1					
ANR	2647460	Argument	ctx -> b_line		2647407	0					
ANR	2647461	PtrMemberAccess	ctx -> b_line		2647407	0					
ANR	2647462	Identifier	ctx		2647407	0					
ANR	2647463	Identifier	b_line		2647407	1					
ANR	2647464	ExpressionStatement	eb_free_aligned ( ctx -> r_line )	464:2:11775:11803	2647407	5	True				
ANR	2647465	CallExpression	eb_free_aligned ( ctx -> r_line )		2647407	0					
ANR	2647466	Callee	eb_free_aligned		2647407	0					
ANR	2647467	Identifier	eb_free_aligned		2647407	0					
ANR	2647468	ArgumentList	ctx -> r_line		2647407	1					
ANR	2647469	Argument	ctx -> r_line		2647407	0					
ANR	2647470	PtrMemberAccess	ctx -> r_line		2647407	0					
ANR	2647471	Identifier	ctx		2647407	0					
ANR	2647472	Identifier	r_line		2647407	1					
ANR	2647473	ExpressionStatement	free ( ctx -> skip_line )	465:2:11807:11827	2647407	6	True				
ANR	2647474	CallExpression	free ( ctx -> skip_line )		2647407	0					
ANR	2647475	Callee	free		2647407	0					
ANR	2647476	Identifier	free		2647407	0					
ANR	2647477	ArgumentList	ctx -> skip_line		2647407	1					
ANR	2647478	Argument	ctx -> skip_line		2647407	0					
ANR	2647479	PtrMemberAccess	ctx -> skip_line		2647407	0					
ANR	2647480	Identifier	ctx		2647407	0					
ANR	2647481	Identifier	skip_line		2647407	1					
ANR	2647482	ExpressionStatement	eb_free_aligned ( ctx )	466:2:11831:11851	2647407	7	True				
ANR	2647483	CallExpression	eb_free_aligned ( ctx )		2647407	0					
ANR	2647484	Callee	eb_free_aligned		2647407	0					
ANR	2647485	Identifier	eb_free_aligned		2647407	0					
ANR	2647486	ArgumentList	ctx		2647407	1					
ANR	2647487	Argument	ctx		2647407	0					
ANR	2647488	Identifier	ctx		2647407	0					
ANR	2647489	ReturnType	static void		2647407	1					
ANR	2647490	Identifier	eb_ctx_avec_free		2647407	2					
ANR	2647491	ParameterList	eb_ctx_avec * ctx		2647407	3					
ANR	2647492	Parameter	eb_ctx_avec * ctx	455:17:11595:11610	2647407	0	True				
ANR	2647493	ParameterType	eb_ctx_avec *		2647407	0					
ANR	2647494	Identifier	ctx		2647407	1					
ANR	2647495	CFGEntryNode	ENTRY		2647407		True				
ANR	2647496	CFGExitNode	EXIT		2647407		True				
ANR	2647497	Symbol	ctx -> luts		2647407						
ANR	2647498	Symbol	* i		2647407						
ANR	2647499	Symbol	ctx -> skip_line		2647407						
ANR	2647500	Symbol	ctx -> iir_line		2647407						
ANR	2647501	Symbol	ctx		2647407						
ANR	2647502	Symbol	* ctx -> luts		2647407						
ANR	2647503	Symbol	i		2647407						
ANR	2647504	Symbol	* * ctx		2647407						
ANR	2647505	Symbol	ctx -> b_line		2647407						
ANR	2647506	Symbol	ctx -> r_line		2647407						
ANR	2647507	Symbol	* ctx		2647407						
ANR	2647508	Symbol	ctx -> a_line		2647407						
ANR	2647509	DeclStmt									
ANR	2647510	Decl							int	int	n_planes
ANR	2647511	DeclStmt									
ANR	2647512	Decl							int	int	xd
ANR	2647513	DeclStmt									
ANR	2647514	Decl							int	int	strip
ANR	2647515	DeclStmt									
ANR	2647516	Decl							eb_srcbuf	eb_srcbuf	sb_alloc
ANR	2647517	DeclStmt									
ANR	2647518	Decl							eb_srcbuf	eb_srcbuf *	srcbuf
ANR	2647519	DeclStmt									
ANR	2647520	Decl							uchar	uchar [ 32 ]	dummy_a
ANR	2647521	DeclStmt									
ANR	2647522	Decl							uchar	uchar *	dummy_dst
ANR	2647523	DeclStmt									
ANR	2647524	Decl							int	int	save_mxcsr
ANR	2647525	DeclStmt									
ANR	2647526	Decl							eb_ctx_avec	eb_ctx_avec *	ctx
ANR	2647527	DeclStmt									
ANR	2647528	Decl							eb_ctx_sse2	eb_ctx_sse2 *	ctx
ANR	2647529	DeclStmt									
ANR	2647530	Decl							uchar	uchar * [ 4 ]	destbufs
ANR	2647531	DeclStmt									
ANR	2647532	Decl							int	int [ 4 ]	count
ANR	2647533	DeclStmt									
ANR	2647534	Decl							int	int [ 4 ]	src_idx
ANR	2647535	DeclStmt									
ANR	2647536	Decl							int	int	plane_idx
ANR	2647537	Decl							int	int	last_plane
ANR	2647538	DeclStmt									
ANR	2647539	Decl							float	float [ 4 ]	im
ANR	2647540	Decl							float	float [ 4 ]	rb
ANR	2647541	Decl							float	float [ 4 ]	rs
ANR	2647542	DeclStmt									
ANR	2647543	Decl							int	int	i
ANR	2647544	DeclStmt									
ANR	2647545	Decl							int	int	j
ANR	2647546	DeclStmt									
ANR	2647547	Decl							int	int	jmax
ANR	2647548	DeclStmt									
ANR	2647549	Decl							int	int	skip
ANR	2647550	DeclStmt									
ANR	2647551	Decl							int	int	j
ANR	2647552	DeclStmt									
ANR	2647553	Decl							uchar	uchar *	dst_ptr
ANR	2647554	DeclStmt									
ANR	2647555	Decl							const float	const float *	lut
ANR	2647556	DeclStmt									
ANR	2647557	Decl							float	float	imp
ANR	2647558	DeclStmt									
ANR	2647559	Decl							float	float	rbp
ANR	2647560	DeclStmt									
ANR	2647561	Decl							float	float	rsp
ANR	2647562	DeclStmt									
ANR	2647563	Decl							const ET_Rll	const ET_Rll *	src_p
ANR	2647564	DeclStmt									
ANR	2647565	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	2647566	DeclStmt									
ANR	2647567	Decl							int	int	n_planes
ANR	2647568	DeclStmt									
ANR	2647569	Decl							int	int	xd
ANR	2647570	DeclStmt									
ANR	2647571	Decl							int	int	strip
ANR	2647572	DeclStmt									
ANR	2647573	Decl							eb_srcbuf	eb_srcbuf	sb_alloc
ANR	2647574	DeclStmt									
ANR	2647575	Decl							eb_srcbuf	eb_srcbuf *	srcbuf
ANR	2647576	DeclStmt									
ANR	2647577	Decl							uchar	uchar [ 32 ]	dummy_a
ANR	2647578	DeclStmt									
ANR	2647579	Decl							uchar	uchar *	dummy_dst
ANR	2647580	DeclStmt									
ANR	2647581	Decl							eb_ctx_avec	eb_ctx_avec *	ctx
ANR	2647582	DeclStmt									
ANR	2647583	Decl							eb_ctx_sse2	eb_ctx_sse2 *	ctx
ANR	2647584	DeclStmt									
ANR	2647585	Decl							uchar	uchar * [ 4 ]	destbufs
ANR	2647586	DeclStmt									
ANR	2647587	Decl							int	int	plane_idx
ANR	2647588	Decl							int	int	last_plane
ANR	2647589	DeclStmt									
ANR	2647590	Decl							int	int	i
ANR	2647591	DeclStmt									
ANR	2647592	Decl							int	int	noskip
ANR	2647593	DeclStmt									
ANR	2647594	Decl							uchar	uchar *	dst_ptr
ANR	2647595	DeclStmt									
ANR	2647596	Decl							int	int [ M ]	a
ANR	2647597	Decl							int	int [ M ]	b
ANR	2647598	DeclStmt									
ANR	2647599	Decl							int	int [ M ]	e_1_0
ANR	2647600	Decl							int	int [ M ]	e_m1_1
ANR	2647601	Decl							int	int [ M ]	e_0_1
ANR	2647602	Decl							int	int [ M ]	e_1_1
ANR	2647603	DeclStmt									
ANR	2647604	Decl							int	int [ M ]	iml
ANR	2647605	Decl							int	int [ M ]	rbl
ANR	2647606	DeclStmt									
ANR	2647607	Decl							int	int	i
ANR	2647608	Decl							int	int	j
ANR	2647609	DeclStmt									
ANR	2647610	Decl							int	int	im
ANR	2647611	DeclStmt									
ANR	2647612	Decl							int	int *	pa
ANR	2647613	Decl							int	int *	pb
ANR	2647614	Decl							int	int *	piir
ANR	2647615	Decl							int	int *	pr
ANR	2647616	DeclStmt									
ANR	2647617	Decl							int	int [ M ]	r
ANR	2647618	Decl							int	int	rg
ANR	2647619	DeclStmt									
ANR	2647620	Decl							int	int	xd
ANR	2647621	DeclStmt									
ANR	2647622	Decl							uint32	uint32	seed1
ANR	2647623	DeclStmt									
ANR	2647624	Decl							uint32	uint32	seed2
ANR	2647625	DeclStmt									
ANR	2647626	Decl							uint32	uint32	sum
ANR	2647627	DeclStmt									
ANR	2647628	Decl							int	int	plane_idx
ANR	2647629	DeclStmt									
ANR	2647630	Decl							int	int [ M ]	r_scratch
ANR	2647631	DeclStmt									
ANR	2647632	Decl							int	int	n_planes
ANR	2647633	DeclStmt									
ANR	2647634	Decl							int	int	levels
ANR	2647635	DeclStmt									
ANR	2647636	Decl							int	int	dith_mul
ANR	2647637	DeclStmt									
ANR	2647638	Decl							int	int	dith_mul
ANR	2647639	DeclStmt									
ANR	2647640	Decl							int	int	imo_mul
ANR	2647641	DeclStmt									
ANR	2647642	Decl							int	int	aspect2
ANR	2647643	DeclStmt									
ANR	2647644	Decl							int	int *	strengths
ANR	2647645	DeclStmt									
ANR	2647646	Decl							int	int	even_elo
ANR	2647647	DeclStmt									
ANR	2647648	Decl							int	int	even_ehi
ANR	2647649	DeclStmt									
ANR	2647650	Decl							int	int	coupling
ANR	2647651	DeclStmt									
ANR	2647652	Decl							int	int *	c_line
ANR	2647653	DeclStmt									
ANR	2647654	Decl							int	int	even_c1
ANR	2647655	DeclStmt									
ANR	2647656	Decl							int	int	rand_shift
ANR	2647657	DeclStmt									
ANR	2647658	Decl							int	int	even_rlimit
ANR	2647659	DeclStmt									
ANR	2647660	Decl							int	int [ M ]	count
ANR	2647661	Decl							int	int [ M ]	src_idx
ANR	2647662	DeclStmt									
ANR	2647663	Decl							int	int [ M ]	rs
ANR	2647664	DeclStmt									
ANR	2647665	Decl							int	int [ M ]	work_planes
ANR	2647666	DeclStmt									
ANR	2647667	Decl							int	int	n_work
ANR	2647668	DeclStmt									
ANR	2647669	Decl							int	int	work_idx
ANR	2647670	DeclStmt									
ANR	2647671	Decl							int	int	jmax
ANR	2647672	DeclStmt									
ANR	2647673	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647674	DeclStmt									
ANR	2647675	Decl							int	int *	wcl
ANR	2647676	DeclStmt									
ANR	2647677	Decl							uchar	uchar *	dst_ptr
ANR	2647678	DeclStmt									
ANR	2647679	Decl							int	int	plane_idx
ANR	2647680	DeclStmt									
ANR	2647681	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647682	DeclStmt									
ANR	2647683	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	2647684	DeclStmt									
ANR	2647685	Decl							int	int	new_r
ANR	2647686	DeclStmt									
ANR	2647687	Decl							const ET_Rll	const ET_Rll *	src_p
ANR	2647688	DeclStmt									
ANR	2647689	Decl							int	int *	lut
ANR	2647690	DeclStmt									
ANR	2647691	Decl							int	int *	rblut
ANR	2647692	DeclStmt									
ANR	2647693	Decl							char	char *	rslut
ANR	2647694	DeclStmt									
ANR	2647695	Decl							int	int	r_tmp
ANR	2647696	DeclStmt									
ANR	2647697	Decl							const int	const int	r_max
ANR	2647698	DeclStmt									
ANR	2647699	Decl							int	int	plane_idx
ANR	2647700	DeclStmt									
ANR	2647701	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647702	DeclStmt									
ANR	2647703	Decl							uchar	uchar *	dst_ptr
ANR	2647704	DeclStmt									
ANR	2647705	Decl							int	int	new_e_1_0
ANR	2647706	DeclStmt									
ANR	2647707	Decl							int	int	coupling_contribution
ANR	2647708	DeclStmt									
ANR	2647709	Decl							int	int	err
ANR	2647710	DeclStmt									
ANR	2647711	Decl							int	int	imo
ANR	2647712	DeclStmt									
ANR	2647713	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647714	DeclStmt									
ANR	2647715	Decl							int	int *	wcl
ANR	2647716	DeclStmt									
ANR	2647717	Decl							int	int	av
ANR	2647718	Decl							int	int	bv
ANR	2647719	Decl							int	int	rv
ANR	2647720	DeclStmt									
ANR	2647721	Decl							int	int	jmax
ANR	2647722	DeclStmt									
ANR	2647723	Decl							int	int [ M ]	a
ANR	2647724	Decl							int	int [ M ]	b
ANR	2647725	DeclStmt									
ANR	2647726	Decl							int	int [ M ]	a_sh
ANR	2647727	Decl							int	int [ M ]	b_sh
ANR	2647728	DeclStmt									
ANR	2647729	Decl							int	int [ M ]	e_1_0
ANR	2647730	Decl							int	int [ M ]	e_m1_1
ANR	2647731	Decl							int	int [ M ]	e_0_1
ANR	2647732	Decl							int	int [ M ]	e_1_1
ANR	2647733	DeclStmt									
ANR	2647734	Decl							int	int [ M ]	imraw
ANR	2647735	DeclStmt									
ANR	2647736	Decl							int	int [ M ]	iml
ANR	2647737	DeclStmt									
ANR	2647738	Decl							int	int	i
ANR	2647739	DeclStmt									
ANR	2647740	Decl							int	int	im
ANR	2647741	DeclStmt									
ANR	2647742	Decl							int	int *	lut
ANR	2647743	DeclStmt									
ANR	2647744	Decl							const ET_SrcPixel	const ET_SrcPixel *	ps
ANR	2647745	DeclStmt									
ANR	2647746	Decl							int	int *	pa
ANR	2647747	Decl							int	int *	pb
ANR	2647748	Decl							int	int *	piir
ANR	2647749	Decl							int	int *	pr
ANR	2647750	DeclStmt									
ANR	2647751	Decl							int	int *	pa_sh
ANR	2647752	Decl							int	int *	pb_sh
ANR	2647753	Decl							int	int *	pr_sh
ANR	2647754	DeclStmt									
ANR	2647755	Decl							int	int [ M ]	r
ANR	2647756	Decl							int	int	rb
ANR	2647757	Decl							int	int	rg
ANR	2647758	DeclStmt									
ANR	2647759	Decl							int	int [ M ]	r_sh
ANR	2647760	DeclStmt									
ANR	2647761	Decl							int	int *	rblut
ANR	2647762	DeclStmt									
ANR	2647763	Decl							int	int	xd
ANR	2647764	Decl							int	int	xrem
ANR	2647765	Decl							int	int	xs
ANR	2647766	DeclStmt									
ANR	2647767	Decl							uint32	uint32	seed1
ANR	2647768	DeclStmt									
ANR	2647769	Decl							uint32	uint32	seed2
ANR	2647770	DeclStmt									
ANR	2647771	Decl							uint32	uint32	sum
ANR	2647772	DeclStmt									
ANR	2647773	Decl							int	int	plane_idx
ANR	2647774	DeclStmt									
ANR	2647775	Decl							int	int [ M ]	r_scratch
ANR	2647776	DeclStmt									
ANR	2647777	Decl							int	int	src_idx
ANR	2647778	DeclStmt									
ANR	2647779	Decl							int	int	n_planes
ANR	2647780	DeclStmt									
ANR	2647781	Decl							int	int	levels
ANR	2647782	DeclStmt									
ANR	2647783	Decl							int	int	dith_mul
ANR	2647784	DeclStmt									
ANR	2647785	Decl							int	int	dith_mul
ANR	2647786	DeclStmt									
ANR	2647787	Decl							int	int	imo_mul
ANR	2647788	DeclStmt									
ANR	2647789	Decl							int	int	aspect2
ANR	2647790	DeclStmt									
ANR	2647791	Decl							int	int *	strengths
ANR	2647792	DeclStmt									
ANR	2647793	Decl							int	int	even_elo
ANR	2647794	DeclStmt									
ANR	2647795	Decl							int	int	even_ehi
ANR	2647796	DeclStmt									
ANR	2647797	Decl							int	int	coupling
ANR	2647798	DeclStmt									
ANR	2647799	Decl							int	int *	c_line
ANR	2647800	DeclStmt									
ANR	2647801	Decl							int	int	even_c1
ANR	2647802	DeclStmt									
ANR	2647803	Decl							int	int	rand_shift
ANR	2647804	DeclStmt									
ANR	2647805	Decl							int	int	even_rlimit
ANR	2647806	DeclStmt									
ANR	2647807	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647808	DeclStmt									
ANR	2647809	Decl							ET_SrcPixel	ET_SrcPixel	src_pixel
ANR	2647810	DeclStmt									
ANR	2647811	Decl							int	int	new_r
ANR	2647812	DeclStmt									
ANR	2647813	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647814	DeclStmt									
ANR	2647815	Decl							uchar	uchar *	dst_ptr
ANR	2647816	DeclStmt									
ANR	2647817	Decl							int	int	new_e_1_0
ANR	2647818	DeclStmt									
ANR	2647819	Decl							int	int	coupling_contribution
ANR	2647820	DeclStmt									
ANR	2647821	Decl							int	int	err
ANR	2647822	DeclStmt									
ANR	2647823	Decl							int	int	imo
ANR	2647824	DeclStmt									
ANR	2647825	Decl							EBPlaneCtx	EBPlaneCtx *	ctx
ANR	2647826	DeclStmt									
ANR	2647827	Decl							int	int	av
ANR	2647828	Decl							int	int	bv
ANR	2647829	Decl							int	int	rv
ANR	2647830	DeclStmt									
ANR	2647831	Decl							int	int	av_sh
ANR	2647832	Decl							int	int	bv_sh
ANR	2647833	Decl							int	int	rv_sh
ANR	2647834	DeclStmt									
ANR	2647835	Decl							int	int	i
ANR	2647836	DeclStmt									
ANR	2647837	Decl							int	int	i
ANR	2647838	Function	even_better_compress_rll	1389:0:37660:39039							
ANR	2647839	FunctionDef	"even_better_compress_rll (ET_Rll * dst , const ET_SrcPixel * src , int src_width , int dst_width)"		2647838	0					
ANR	2647840	CompoundStatement		1392:0:37790:39039	2647838	0					
ANR	2647841	IdentifierDeclStatement	int rll_idx ;	1393:2:37794:37805	2647838	0	True				
ANR	2647842	IdentifierDecl	rll_idx		2647838	0					
ANR	2647843	IdentifierDeclType	int		2647838	0					
ANR	2647844	Identifier	rll_idx		2647838	1					
ANR	2647845	IdentifierDeclStatement	int i ;	1394:2:37809:37814	2647838	1	True				
ANR	2647846	IdentifierDecl	i		2647838	0					
ANR	2647847	IdentifierDeclType	int		2647838	0					
ANR	2647848	Identifier	i		2647838	1					
ANR	2647849	IdentifierDeclStatement	int count ;	1395:2:37818:37827	2647838	2	True				
ANR	2647850	IdentifierDecl	count		2647838	0					
ANR	2647851	IdentifierDeclType	int		2647838	0					
ANR	2647852	Identifier	count		2647838	1					
ANR	2647853	IdentifierDeclStatement	ET_SrcPixel last_val ;	1396:2:37831:37851	2647838	3	True				
ANR	2647854	IdentifierDecl	last_val		2647838	0					
ANR	2647855	IdentifierDeclType	ET_SrcPixel		2647838	0					
ANR	2647856	Identifier	last_val		2647838	1					
ANR	2647857	IdentifierDeclStatement	int whole = dst_width / src_width ;	1397:2:37855:37888	2647838	4	True				
ANR	2647858	IdentifierDecl	whole = dst_width / src_width		2647838	0					
ANR	2647859	IdentifierDeclType	int		2647838	0					
ANR	2647860	Identifier	whole		2647838	1					
ANR	2647861	AssignmentExpression	whole = dst_width / src_width		2647838	2		=			
ANR	2647862	Identifier	whole		2647838	0					
ANR	2647863	MultiplicativeExpression	dst_width / src_width		2647838	1		/			
ANR	2647864	Identifier	dst_width		2647838	0					
ANR	2647865	Identifier	src_width		2647838	1					
ANR	2647866	IdentifierDeclStatement	int frac = dst_width % src_width ;	1398:2:37892:37924	2647838	5	True				
ANR	2647867	IdentifierDecl	frac = dst_width % src_width		2647838	0					
ANR	2647868	IdentifierDeclType	int		2647838	0					
ANR	2647869	Identifier	frac		2647838	1					
ANR	2647870	AssignmentExpression	frac = dst_width % src_width		2647838	2		=			
ANR	2647871	Identifier	frac		2647838	0					
ANR	2647872	MultiplicativeExpression	dst_width % src_width		2647838	1		%			
ANR	2647873	Identifier	dst_width		2647838	0					
ANR	2647874	Identifier	src_width		2647838	1					
ANR	2647875	IdentifierDeclStatement	int rem ;	1399:2:37928:37935	2647838	6	True				
ANR	2647876	IdentifierDecl	rem		2647838	0					
ANR	2647877	IdentifierDeclType	int		2647838	0					
ANR	2647878	Identifier	rem		2647838	1					
ANR	2647879	ExpressionStatement	rll_idx = 0	1401:2:37940:37951	2647838	7	True				
ANR	2647880	AssignmentExpression	rll_idx = 0		2647838	0		=			
ANR	2647881	Identifier	rll_idx		2647838	0					
ANR	2647882	PrimaryExpression	0		2647838	1					
ANR	2647883	ExpressionStatement	last_val = src [ 0 ]	1402:2:37955:37972	2647838	8	True				
ANR	2647884	AssignmentExpression	last_val = src [ 0 ]		2647838	0		=			
ANR	2647885	Identifier	last_val		2647838	0					
ANR	2647886	ArrayIndexing	src [ 0 ]		2647838	1					
ANR	2647887	Identifier	src		2647838	0					
ANR	2647888	PrimaryExpression	0		2647838	1					
ANR	2647889	ExpressionStatement	count = whole	1403:2:37976:37989	2647838	9	True				
ANR	2647890	AssignmentExpression	count = whole		2647838	0		=			
ANR	2647891	Identifier	count		2647838	0					
ANR	2647892	Identifier	whole		2647838	1					
ANR	2647893	IfStatement	if ( frac == 0 )		2647838	10					
ANR	2647894	Condition	frac == 0	1404:6:37997:38005	2647838	0	True				
ANR	2647895	EqualityExpression	frac == 0		2647838	0		==			
ANR	2647896	Identifier	frac		2647838	0					
ANR	2647897	PrimaryExpression	0		2647838	1					
ANR	2647898	CompoundStatement		14:4:221:221	2647838	1					
ANR	2647899	ForStatement	for ( i = 1 ; i < src_width ; i ++ )		2647838	0					
ANR	2647900	ForInit	i = 1 ;	1406:11:38025:38030	2647838	0	True				
ANR	2647901	AssignmentExpression	i = 1		2647838	0		=			
ANR	2647902	Identifier	i		2647838	0					
ANR	2647903	PrimaryExpression	1		2647838	1					
ANR	2647904	Condition	i < src_width	1406:18:38032:38044	2647838	1	True				
ANR	2647905	RelationalExpression	i < src_width		2647838	0		<			
ANR	2647906	Identifier	i		2647838	0					
ANR	2647907	Identifier	src_width		2647838	1					
ANR	2647908	PostIncDecOperationExpression	i ++	1406:33:38047:38049	2647838	2	True				
ANR	2647909	Identifier	i		2647838	0					
ANR	2647910	IncDec	++		2647838	1					
ANR	2647911	CompoundStatement		17:10:281:305	2647838	3					
ANR	2647912	IdentifierDeclStatement	ET_SrcPixel val = src [ i ] ;	1408:10:38072:38096	2647838	0	True				
ANR	2647913	IdentifierDecl	val = src [ i ]		2647838	0					
ANR	2647914	IdentifierDeclType	ET_SrcPixel		2647838	0					
ANR	2647915	Identifier	val		2647838	1					
ANR	2647916	AssignmentExpression	val = src [ i ]		2647838	2		=			
ANR	2647917	Identifier	val		2647838	0					
ANR	2647918	ArrayIndexing	src [ i ]		2647838	1					
ANR	2647919	Identifier	src		2647838	0					
ANR	2647920	Identifier	i		2647838	1					
ANR	2647921	IfStatement	if ( count > 0xffff - whole || val != last_val )		2647838	1					
ANR	2647922	Condition	count > 0xffff - whole || val != last_val	1410:14:38113:38153	2647838	0	True				
ANR	2647923	OrExpression	count > 0xffff - whole || val != last_val		2647838	0		||			
ANR	2647924	RelationalExpression	count > 0xffff - whole		2647838	0		>			
ANR	2647925	Identifier	count		2647838	0					
ANR	2647926	AdditiveExpression	0xffff - whole		2647838	1		-			
ANR	2647927	PrimaryExpression	0xffff		2647838	0					
ANR	2647928	Identifier	whole		2647838	1					
ANR	2647929	EqualityExpression	val != last_val		2647838	1		!=			
ANR	2647930	Identifier	val		2647838	0					
ANR	2647931	Identifier	last_val		2647838	1					
ANR	2647932	CompoundStatement		20:12:377:377	2647838	1					
ANR	2647933	ExpressionStatement	dst [ rll_idx ] . length = count	1412:14:38184:38211	2647838	0	True				
ANR	2647934	AssignmentExpression	dst [ rll_idx ] . length = count		2647838	0		=			
ANR	2647935	MemberAccess	dst [ rll_idx ] . length		2647838	0					
ANR	2647936	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2647937	Identifier	dst		2647838	0					
ANR	2647938	Identifier	rll_idx		2647838	1					
ANR	2647939	Identifier	length		2647838	1					
ANR	2647940	Identifier	count		2647838	1					
ANR	2647941	ExpressionStatement	dst [ rll_idx ] . value = last_val	1413:14:38227:38256	2647838	1	True				
ANR	2647942	AssignmentExpression	dst [ rll_idx ] . value = last_val		2647838	0		=			
ANR	2647943	MemberAccess	dst [ rll_idx ] . value		2647838	0					
ANR	2647944	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2647945	Identifier	dst		2647838	0					
ANR	2647946	Identifier	rll_idx		2647838	1					
ANR	2647947	Identifier	value		2647838	1					
ANR	2647948	Identifier	last_val		2647838	1					
ANR	2647949	ExpressionStatement	rll_idx ++	1414:14:38272:38281	2647838	2	True				
ANR	2647950	PostIncDecOperationExpression	rll_idx ++		2647838	0					
ANR	2647951	Identifier	rll_idx		2647838	0					
ANR	2647952	IncDec	++		2647838	1					
ANR	2647953	ExpressionStatement	last_val = val	1415:14:38297:38311	2647838	3	True				
ANR	2647954	AssignmentExpression	last_val = val		2647838	0		=			
ANR	2647955	Identifier	last_val		2647838	0					
ANR	2647956	Identifier	val		2647838	1					
ANR	2647957	ExpressionStatement	count = 0	1416:14:38327:38336	2647838	4	True				
ANR	2647958	AssignmentExpression	count = 0		2647838	0		=			
ANR	2647959	Identifier	count		2647838	0					
ANR	2647960	PrimaryExpression	0		2647838	1					
ANR	2647961	ExpressionStatement	count += whole	1418:10:38362:38376	2647838	2	True				
ANR	2647962	AssignmentExpression	count += whole		2647838	0		+=			
ANR	2647963	Identifier	count		2647838	0					
ANR	2647964	Identifier	whole		2647838	1					
ANR	2647965	ElseStatement	else		2647838	0					
ANR	2647966	CompoundStatement		31:4:614:614	2647838	0					
ANR	2647967	ExpressionStatement	rem = frac	1423:6:38413:38423	2647838	0	True				
ANR	2647968	AssignmentExpression	rem = frac		2647838	0		=			
ANR	2647969	Identifier	rem		2647838	0					
ANR	2647970	Identifier	frac		2647838	1					
ANR	2647971	ForStatement	for ( i = 1 ; i < src_width ; i ++ )		2647838	1					
ANR	2647972	ForInit	i = 1 ;	1424:11:38436:38441	2647838	0	True				
ANR	2647973	AssignmentExpression	i = 1		2647838	0		=			
ANR	2647974	Identifier	i		2647838	0					
ANR	2647975	PrimaryExpression	1		2647838	1					
ANR	2647976	Condition	i < src_width	1424:18:38443:38455	2647838	1	True				
ANR	2647977	RelationalExpression	i < src_width		2647838	0		<			
ANR	2647978	Identifier	i		2647838	0					
ANR	2647979	Identifier	src_width		2647838	1					
ANR	2647980	PostIncDecOperationExpression	i ++	1424:33:38458:38460	2647838	2	True				
ANR	2647981	Identifier	i		2647838	0					
ANR	2647982	IncDec	++		2647838	1					
ANR	2647983	CompoundStatement		35:10:692:716	2647838	3					
ANR	2647984	IdentifierDeclStatement	ET_SrcPixel val = src [ i ] ;	1426:10:38483:38507	2647838	0	True				
ANR	2647985	IdentifierDecl	val = src [ i ]		2647838	0					
ANR	2647986	IdentifierDeclType	ET_SrcPixel		2647838	0					
ANR	2647987	Identifier	val		2647838	1					
ANR	2647988	AssignmentExpression	val = src [ i ]		2647838	2		=			
ANR	2647989	Identifier	val		2647838	0					
ANR	2647990	ArrayIndexing	src [ i ]		2647838	1					
ANR	2647991	Identifier	src		2647838	0					
ANR	2647992	Identifier	i		2647838	1					
ANR	2647993	IfStatement	if ( count >= 0xffff - whole || val != last_val )		2647838	1					
ANR	2647994	Condition	count >= 0xffff - whole || val != last_val	1428:14:38524:38565	2647838	0	True				
ANR	2647995	OrExpression	count >= 0xffff - whole || val != last_val		2647838	0		||			
ANR	2647996	RelationalExpression	count >= 0xffff - whole		2647838	0		>=			
ANR	2647997	Identifier	count		2647838	0					
ANR	2647998	AdditiveExpression	0xffff - whole		2647838	1		-			
ANR	2647999	PrimaryExpression	0xffff		2647838	0					
ANR	2648000	Identifier	whole		2647838	1					
ANR	2648001	EqualityExpression	val != last_val		2647838	1		!=			
ANR	2648002	Identifier	val		2647838	0					
ANR	2648003	Identifier	last_val		2647838	1					
ANR	2648004	CompoundStatement		38:12:789:789	2647838	1					
ANR	2648005	ExpressionStatement	dst [ rll_idx ] . length = count	1430:14:38596:38623	2647838	0	True				
ANR	2648006	AssignmentExpression	dst [ rll_idx ] . length = count		2647838	0		=			
ANR	2648007	MemberAccess	dst [ rll_idx ] . length		2647838	0					
ANR	2648008	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2648009	Identifier	dst		2647838	0					
ANR	2648010	Identifier	rll_idx		2647838	1					
ANR	2648011	Identifier	length		2647838	1					
ANR	2648012	Identifier	count		2647838	1					
ANR	2648013	ExpressionStatement	dst [ rll_idx ] . value = last_val	1431:14:38639:38668	2647838	1	True				
ANR	2648014	AssignmentExpression	dst [ rll_idx ] . value = last_val		2647838	0		=			
ANR	2648015	MemberAccess	dst [ rll_idx ] . value		2647838	0					
ANR	2648016	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2648017	Identifier	dst		2647838	0					
ANR	2648018	Identifier	rll_idx		2647838	1					
ANR	2648019	Identifier	value		2647838	1					
ANR	2648020	Identifier	last_val		2647838	1					
ANR	2648021	ExpressionStatement	rll_idx ++	1432:14:38684:38693	2647838	2	True				
ANR	2648022	PostIncDecOperationExpression	rll_idx ++		2647838	0					
ANR	2648023	Identifier	rll_idx		2647838	0					
ANR	2648024	IncDec	++		2647838	1					
ANR	2648025	ExpressionStatement	last_val = val	1433:14:38709:38723	2647838	3	True				
ANR	2648026	AssignmentExpression	last_val = val		2647838	0		=			
ANR	2648027	Identifier	last_val		2647838	0					
ANR	2648028	Identifier	val		2647838	1					
ANR	2648029	ExpressionStatement	count = 0	1434:14:38739:38748	2647838	4	True				
ANR	2648030	AssignmentExpression	count = 0		2647838	0		=			
ANR	2648031	Identifier	count		2647838	0					
ANR	2648032	PrimaryExpression	0		2647838	1					
ANR	2648033	ExpressionStatement	count += whole	1436:10:38774:38788	2647838	2	True				
ANR	2648034	AssignmentExpression	count += whole		2647838	0		+=			
ANR	2648035	Identifier	count		2647838	0					
ANR	2648036	Identifier	whole		2647838	1					
ANR	2648037	ExpressionStatement	rem += frac	1437:10:38800:38811	2647838	3	True				
ANR	2648038	AssignmentExpression	rem += frac		2647838	0		+=			
ANR	2648039	Identifier	rem		2647838	0					
ANR	2648040	Identifier	frac		2647838	1					
ANR	2648041	IfStatement	if ( rem >= src_width )		2647838	4					
ANR	2648042	Condition	rem >= src_width	1438:14:38827:38842	2647838	0	True				
ANR	2648043	RelationalExpression	rem >= src_width		2647838	0		>=			
ANR	2648044	Identifier	rem		2647838	0					
ANR	2648045	Identifier	src_width		2647838	1					
ANR	2648046	CompoundStatement		48:12:1066:1066	2647838	1					
ANR	2648047	ExpressionStatement	count ++	1440:14:38873:38880	2647838	0	True				
ANR	2648048	PostIncDecOperationExpression	count ++		2647838	0					
ANR	2648049	Identifier	count		2647838	0					
ANR	2648050	IncDec	++		2647838	1					
ANR	2648051	ExpressionStatement	rem -= src_width	1441:14:38896:38912	2647838	1	True				
ANR	2648052	AssignmentExpression	rem -= src_width		2647838	0		-=			
ANR	2648053	Identifier	rem		2647838	0					
ANR	2648054	Identifier	src_width		2647838	1					
ANR	2648055	ExpressionStatement	dst [ rll_idx ] . length = count	1445:2:38946:38973	2647838	11	True				
ANR	2648056	AssignmentExpression	dst [ rll_idx ] . length = count		2647838	0		=			
ANR	2648057	MemberAccess	dst [ rll_idx ] . length		2647838	0					
ANR	2648058	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2648059	Identifier	dst		2647838	0					
ANR	2648060	Identifier	rll_idx		2647838	1					
ANR	2648061	Identifier	length		2647838	1					
ANR	2648062	Identifier	count		2647838	1					
ANR	2648063	ExpressionStatement	dst [ rll_idx ] . value = last_val	1446:2:38977:39006	2647838	12	True				
ANR	2648064	AssignmentExpression	dst [ rll_idx ] . value = last_val		2647838	0		=			
ANR	2648065	MemberAccess	dst [ rll_idx ] . value		2647838	0					
ANR	2648066	ArrayIndexing	dst [ rll_idx ]		2647838	0					
ANR	2648067	Identifier	dst		2647838	0					
ANR	2648068	Identifier	rll_idx		2647838	1					
ANR	2648069	Identifier	value		2647838	1					
ANR	2648070	Identifier	last_val		2647838	1					
ANR	2648071	ExpressionStatement	rll_idx ++	1447:2:39010:39019	2647838	13	True				
ANR	2648072	PostIncDecOperationExpression	rll_idx ++		2647838	0					
ANR	2648073	Identifier	rll_idx		2647838	0					
ANR	2648074	IncDec	++		2647838	1					
ANR	2648075	ReturnStatement	return rll_idx ;	1448:2:39023:39037	2647838	14	True				
ANR	2648076	Identifier	rll_idx		2647838	0					
ANR	2648077	ReturnType	static int		2647838	1					
ANR	2648078	Identifier	even_better_compress_rll		2647838	2					
ANR	2648079	ParameterList	"ET_Rll * dst , const ET_SrcPixel * src , int src_width , int dst_width"		2647838	3					
ANR	2648080	Parameter	ET_Rll * dst	1390:26:37697:37707	2647838	0	True				
ANR	2648081	ParameterType	ET_Rll *		2647838	0					
ANR	2648082	Identifier	dst		2647838	1					
ANR	2648083	Parameter	const ET_SrcPixel * src	1390:39:37710:37731	2647838	1	True				
ANR	2648084	ParameterType	const ET_SrcPixel *		2647838	0					
ANR	2648085	Identifier	src		2647838	1					
ANR	2648086	Parameter	int src_width	1391:26:37760:37772	2647838	2	True				
ANR	2648087	ParameterType	int		2647838	0					
ANR	2648088	Identifier	src_width		2647838	1					
ANR	2648089	Parameter	int dst_width	1391:41:37775:37787	2647838	3	True				
ANR	2648090	ParameterType	int		2647838	0					
ANR	2648091	Identifier	dst_width		2647838	1					
ANR	2648092	CFGEntryNode	ENTRY		2647838		True				
ANR	2648093	CFGExitNode	EXIT		2647838		True				
ANR	2648094	Symbol	rll_idx		2647838						
ANR	2648095	Symbol	val		2647838						
ANR	2648096	Symbol	dst_width		2647838						
ANR	2648097	Symbol	dst		2647838						
ANR	2648098	Symbol	src		2647838						
ANR	2648099	Symbol	dst [ rll_idx ] . length		2647838						
ANR	2648100	Symbol	count		2647838						
ANR	2648101	Symbol	i		2647838						
ANR	2648102	Symbol	whole		2647838						
ANR	2648103	Symbol	* rll_idx		2647838						
ANR	2648104	Symbol	src_width		2647838						
ANR	2648105	Symbol	* src		2647838						
ANR	2648106	Symbol	dst [ rll_idx ] . value		2647838						
ANR	2648107	Symbol	last_val		2647838						
ANR	2648108	Symbol	* dst		2647838						
ANR	2648109	Symbol	* i		2647838						
ANR	2648110	Symbol	rem		2647838						
ANR	2648111	Symbol	frac		2647838						
ANR	2648112	DeclStmt									
ANR	2648113	Decl							ET_Rll	ET_Rll * [ M ]	rll_buf
ANR	2648114	DeclStmt									
ANR	2648115	Decl							int	int	i
ANR	2648116	DeclStmt									
ANR	2648117	Decl							int	int	source_width
ANR	2648118	DeclStmt									
ANR	2648119	Decl							int	int	dest_width
ANR	2648120	Function	even_better_plane_free	1493:0:40165:40442							
ANR	2648121	FunctionDef	even_better_plane_free (EBPlaneCtx * ctx)		2648120	0					
ANR	2648122	CompoundStatement		1495:0:40218:40442	2648120	0					
ANR	2648123	ExpressionStatement	free ( ctx -> rb_line )	1496:2:40222:40241	2648120	0	True				
ANR	2648124	CallExpression	free ( ctx -> rb_line )		2648120	0					
ANR	2648125	Callee	free		2648120	0					
ANR	2648126	Identifier	free		2648120	0					
ANR	2648127	ArgumentList	ctx -> rb_line		2648120	1					
ANR	2648128	Argument	ctx -> rb_line		2648120	0					
ANR	2648129	PtrMemberAccess	ctx -> rb_line		2648120	0					
ANR	2648130	Identifier	ctx		2648120	0					
ANR	2648131	Identifier	rb_line		2648120	1					
ANR	2648132	ExpressionStatement	free ( ctx -> iir_line )	1497:2:40245:40265	2648120	1	True				
ANR	2648133	CallExpression	free ( ctx -> iir_line )		2648120	0					
ANR	2648134	Callee	free		2648120	0					
ANR	2648135	Identifier	free		2648120	0					
ANR	2648136	ArgumentList	ctx -> iir_line		2648120	1					
ANR	2648137	Argument	ctx -> iir_line		2648120	0					
ANR	2648138	PtrMemberAccess	ctx -> iir_line		2648120	0					
ANR	2648139	Identifier	ctx		2648120	0					
ANR	2648140	Identifier	iir_line		2648120	1					
ANR	2648141	ExpressionStatement	free ( ctx -> r_line )	1498:2:40269:40287	2648120	2	True				
ANR	2648142	CallExpression	free ( ctx -> r_line )		2648120	0					
ANR	2648143	Callee	free		2648120	0					
ANR	2648144	Identifier	free		2648120	0					
ANR	2648145	ArgumentList	ctx -> r_line		2648120	1					
ANR	2648146	Argument	ctx -> r_line		2648120	0					
ANR	2648147	PtrMemberAccess	ctx -> r_line		2648120	0					
ANR	2648148	Identifier	ctx		2648120	0					
ANR	2648149	Identifier	r_line		2648120	1					
ANR	2648150	ExpressionStatement	free ( ctx -> a_line )	1499:2:40291:40309	2648120	3	True				
ANR	2648151	CallExpression	free ( ctx -> a_line )		2648120	0					
ANR	2648152	Callee	free		2648120	0					
ANR	2648153	Identifier	free		2648120	0					
ANR	2648154	ArgumentList	ctx -> a_line		2648120	1					
ANR	2648155	Argument	ctx -> a_line		2648120	0					
ANR	2648156	PtrMemberAccess	ctx -> a_line		2648120	0					
ANR	2648157	Identifier	ctx		2648120	0					
ANR	2648158	Identifier	a_line		2648120	1					
ANR	2648159	ExpressionStatement	free ( ctx -> b_line )	1500:2:40313:40331	2648120	4	True				
ANR	2648160	CallExpression	free ( ctx -> b_line )		2648120	0					
ANR	2648161	Callee	free		2648120	0					
ANR	2648162	Identifier	free		2648120	0					
ANR	2648163	ArgumentList	ctx -> b_line		2648120	1					
ANR	2648164	Argument	ctx -> b_line		2648120	0					
ANR	2648165	PtrMemberAccess	ctx -> b_line		2648120	0					
ANR	2648166	Identifier	ctx		2648120	0					
ANR	2648167	Identifier	b_line		2648120	1					
ANR	2648168	ExpressionStatement	free ( ctx -> lut )	1501:2:40335:40350	2648120	5	True				
ANR	2648169	CallExpression	free ( ctx -> lut )		2648120	0					
ANR	2648170	Callee	free		2648120	0					
ANR	2648171	Identifier	free		2648120	0					
ANR	2648172	ArgumentList	ctx -> lut		2648120	1					
ANR	2648173	Argument	ctx -> lut		2648120	0					
ANR	2648174	PtrMemberAccess	ctx -> lut		2648120	0					
ANR	2648175	Identifier	ctx		2648120	0					
ANR	2648176	Identifier	lut		2648120	1					
ANR	2648177	ExpressionStatement	free ( ctx -> rb_lut )	1502:2:40354:40372	2648120	6	True				
ANR	2648178	CallExpression	free ( ctx -> rb_lut )		2648120	0					
ANR	2648179	Callee	free		2648120	0					
ANR	2648180	Identifier	free		2648120	0					
ANR	2648181	ArgumentList	ctx -> rb_lut		2648120	1					
ANR	2648182	Argument	ctx -> rb_lut		2648120	0					
ANR	2648183	PtrMemberAccess	ctx -> rb_lut		2648120	0					
ANR	2648184	Identifier	ctx		2648120	0					
ANR	2648185	Identifier	rb_lut		2648120	1					
ANR	2648186	ExpressionStatement	free ( ctx -> rs_lut )	1503:2:40376:40394	2648120	7	True				
ANR	2648187	CallExpression	free ( ctx -> rs_lut )		2648120	0					
ANR	2648188	Callee	free		2648120	0					
ANR	2648189	Identifier	free		2648120	0					
ANR	2648190	ArgumentList	ctx -> rs_lut		2648120	1					
ANR	2648191	Argument	ctx -> rs_lut		2648120	0					
ANR	2648192	PtrMemberAccess	ctx -> rs_lut		2648120	0					
ANR	2648193	Identifier	ctx		2648120	0					
ANR	2648194	Identifier	rs_lut		2648120	1					
ANR	2648195	ExpressionStatement	free ( ctx -> white_count_line )	1504:2:40398:40426	2648120	8	True				
ANR	2648196	CallExpression	free ( ctx -> white_count_line )		2648120	0					
ANR	2648197	Callee	free		2648120	0					
ANR	2648198	Identifier	free		2648120	0					
ANR	2648199	ArgumentList	ctx -> white_count_line		2648120	1					
ANR	2648200	Argument	ctx -> white_count_line		2648120	0					
ANR	2648201	PtrMemberAccess	ctx -> white_count_line		2648120	0					
ANR	2648202	Identifier	ctx		2648120	0					
ANR	2648203	Identifier	white_count_line		2648120	1					
ANR	2648204	ExpressionStatement	free ( ctx )	1505:2:40430:40440	2648120	9	True				
ANR	2648205	CallExpression	free ( ctx )		2648120	0					
ANR	2648206	Callee	free		2648120	0					
ANR	2648207	Identifier	free		2648120	0					
ANR	2648208	ArgumentList	ctx		2648120	1					
ANR	2648209	Argument	ctx		2648120	0					
ANR	2648210	Identifier	ctx		2648120	0					
ANR	2648211	ReturnType	static void		2648120	1					
ANR	2648212	Identifier	even_better_plane_free		2648120	2					
ANR	2648213	ParameterList	EBPlaneCtx * ctx		2648120	3					
ANR	2648214	Parameter	EBPlaneCtx * ctx	1494:24:40201:40215	2648120	0	True				
ANR	2648215	ParameterType	EBPlaneCtx *		2648120	0					
ANR	2648216	Identifier	ctx		2648120	1					
ANR	2648217	CFGEntryNode	ENTRY		2648120		True				
ANR	2648218	CFGExitNode	EXIT		2648120		True				
ANR	2648219	Symbol	ctx -> rb_line		2648120						
ANR	2648220	Symbol	ctx -> iir_line		2648120						
ANR	2648221	Symbol	ctx -> lut		2648120						
ANR	2648222	Symbol	ctx		2648120						
ANR	2648223	Symbol	ctx -> b_line		2648120						
ANR	2648224	Symbol	ctx -> rb_lut		2648120						
ANR	2648225	Symbol	ctx -> r_line		2648120						
ANR	2648226	Symbol	ctx -> rs_lut		2648120						
ANR	2648227	Symbol	* ctx		2648120						
ANR	2648228	Symbol	ctx -> white_count_line		2648120						
ANR	2648229	Symbol	ctx -> a_line		2648120						
ANR	2648230	Function	even_log2	1508:0:40445:40553							
ANR	2648231	FunctionDef	even_log2 (int x)		2648230	0					
ANR	2648232	CompoundStatement		1510:0:40474:40553	2648230	0					
ANR	2648233	IdentifierDeclStatement	int y = 0 ;	1511:2:40478:40487	2648230	0	True				
ANR	2648234	IdentifierDecl	y = 0		2648230	0					
ANR	2648235	IdentifierDeclType	int		2648230	0					
ANR	2648236	Identifier	y		2648230	1					
ANR	2648237	AssignmentExpression	y = 0		2648230	2		=			
ANR	2648238	Identifier	y		2648230	0					
ANR	2648239	PrimaryExpression	0		2648230	1					
ANR	2648240	IdentifierDeclStatement	int z ;	1512:2:40491:40496	2648230	1	True				
ANR	2648241	IdentifierDecl	z		2648230	0					
ANR	2648242	IdentifierDeclType	int		2648230	0					
ANR	2648243	Identifier	z		2648230	1					
ANR	2648244	ForStatement	for ( z = x ; z > 1 ; z = z >> 1 )		2648230	2					
ANR	2648245	ForInit	z = x ;	1514:7:40506:40511	2648230	0	True				
ANR	2648246	AssignmentExpression	z = x		2648230	0		=			
ANR	2648247	Identifier	z		2648230	0					
ANR	2648248	Identifier	x		2648230	1					
ANR	2648249	Condition	z > 1	1514:14:40513:40517	2648230	1	True				
ANR	2648250	RelationalExpression	z > 1		2648230	0		>			
ANR	2648251	Identifier	z		2648230	0					
ANR	2648252	PrimaryExpression	1		2648230	1					
ANR	2648253	AssignmentExpression	z = z >> 1	1514:21:40520:40529	2648230	2	True	=			
ANR	2648254	Identifier	z		2648230	0					
ANR	2648255	ShiftExpression	z >> 1		2648230	1		>>			
ANR	2648256	Identifier	z		2648230	0					
ANR	2648257	PrimaryExpression	1		2648230	1					
ANR	2648258	ExpressionStatement	y ++	1515:4:40536:40539	2648230	3	True				
ANR	2648259	PostIncDecOperationExpression	y ++		2648230	0					
ANR	2648260	Identifier	y		2648230	0					
ANR	2648261	IncDec	++		2648230	1					
ANR	2648262	ReturnStatement	return y ;	1516:2:40543:40551	2648230	3	True				
ANR	2648263	Identifier	y		2648230	0					
ANR	2648264	ReturnType	static int		2648230	1					
ANR	2648265	Identifier	even_log2		2648230	2					
ANR	2648266	ParameterList	int x		2648230	3					
ANR	2648267	Parameter	int x	1509:11:40467:40471	2648230	0	True				
ANR	2648268	ParameterType	int		2648230	0					
ANR	2648269	Identifier	x		2648230	1					
ANR	2648270	CFGEntryNode	ENTRY		2648230		True				
ANR	2648271	CFGExitNode	EXIT		2648230		True				
ANR	2648272	Symbol	x		2648230						
ANR	2648273	Symbol	y		2648230						
ANR	2648274	Symbol	z		2648230						
ANR	2648275	Function	even_better_plane_new	1536:0:41170:44590							
ANR	2648276	FunctionDef	"even_better_plane_new (const EvenBetterParams * params , EvenBetterCtx * ebc , int plane_idx)"		2648275	0					
ANR	2648277	CompoundStatement		1539:0:41303:44590	2648275	0					
ANR	2648278	IdentifierDeclStatement	int source_width = params -> source_width ;	1540:2:41307:41346	2648275	0	True				
ANR	2648279	IdentifierDecl	source_width = params -> source_width		2648275	0					
ANR	2648280	IdentifierDeclType	int		2648275	0					
ANR	2648281	Identifier	source_width		2648275	1					
ANR	2648282	AssignmentExpression	source_width = params -> source_width		2648275	2		=			
ANR	2648283	Identifier	source_width		2648275	0					
ANR	2648284	PtrMemberAccess	params -> source_width		2648275	1					
ANR	2648285	Identifier	params		2648275	0					
ANR	2648286	Identifier	source_width		2648275	1					
ANR	2648287	IdentifierDeclStatement	int dest_width = params -> dest_width ;	1541:2:41350:41385	2648275	1	True				
ANR	2648288	IdentifierDecl	dest_width = params -> dest_width		2648275	0					
ANR	2648289	IdentifierDeclType	int		2648275	0					
ANR	2648290	Identifier	dest_width		2648275	1					
ANR	2648291	AssignmentExpression	dest_width = params -> dest_width		2648275	2		=			
ANR	2648292	Identifier	dest_width		2648275	0					
ANR	2648293	PtrMemberAccess	params -> dest_width		2648275	1					
ANR	2648294	Identifier	params		2648275	0					
ANR	2648295	Identifier	dest_width		2648275	1					
ANR	2648296	IdentifierDeclStatement	int * lut = params -> luts [ plane_idx ] ;	1542:2:41389:41423	2648275	2	True				
ANR	2648297	IdentifierDecl	* lut = params -> luts [ plane_idx ]		2648275	0					
ANR	2648298	IdentifierDeclType	int *		2648275	0					
ANR	2648299	Identifier	lut		2648275	1					
ANR	2648300	AssignmentExpression	* lut = params -> luts [ plane_idx ]		2648275	2		=			
ANR	2648301	Identifier	lut		2648275	0					
ANR	2648302	ArrayIndexing	params -> luts [ plane_idx ]		2648275	1					
ANR	2648303	PtrMemberAccess	params -> luts		2648275	0					
ANR	2648304	Identifier	params		2648275	0					
ANR	2648305	Identifier	luts		2648275	1					
ANR	2648306	Identifier	plane_idx		2648275	1					
ANR	2648307	IdentifierDeclStatement	EBPlaneCtx * result ;	1543:2:41427:41445	2648275	3	True				
ANR	2648308	IdentifierDecl	* result		2648275	0					
ANR	2648309	IdentifierDeclType	EBPlaneCtx *		2648275	0					
ANR	2648310	Identifier	result		2648275	1					
ANR	2648311	IdentifierDeclStatement	int i ;	1544:2:41449:41454	2648275	4	True				
ANR	2648312	IdentifierDecl	i		2648275	0					
ANR	2648313	IdentifierDeclType	int		2648275	0					
ANR	2648314	Identifier	i		2648275	1					
ANR	2648315	IdentifierDeclStatement	int * new_lut ;	1545:2:41458:41470	2648275	5	True				
ANR	2648316	IdentifierDecl	* new_lut		2648275	0					
ANR	2648317	IdentifierDeclType	int *		2648275	0					
ANR	2648318	Identifier	new_lut		2648275	1					
ANR	2648319	IdentifierDeclStatement	int * rb_lut ;	1546:2:41474:41485	2648275	6	True				
ANR	2648320	IdentifierDecl	* rb_lut		2648275	0					
ANR	2648321	IdentifierDeclType	int *		2648275	0					
ANR	2648322	Identifier	rb_lut		2648275	1					
ANR	2648323	IdentifierDeclStatement	char * rs_lut ;	1547:2:41489:41501	2648275	7	True				
ANR	2648324	IdentifierDecl	* rs_lut		2648275	0					
ANR	2648325	IdentifierDeclType	char *		2648275	0					
ANR	2648326	Identifier	rs_lut		2648275	1					
ANR	2648327	IdentifierDeclStatement	double rbscale = eb_compute_rbscale ( params ) ;	1548:2:41505:41548	2648275	8	True				
ANR	2648328	IdentifierDecl	rbscale = eb_compute_rbscale ( params )		2648275	0					
ANR	2648329	IdentifierDeclType	double		2648275	0					
ANR	2648330	Identifier	rbscale		2648275	1					
ANR	2648331	AssignmentExpression	rbscale = eb_compute_rbscale ( params )		2648275	2		=			
ANR	2648332	Identifier	rbscale		2648275	0					
ANR	2648333	CallExpression	eb_compute_rbscale ( params )		2648275	1					
ANR	2648334	Callee	eb_compute_rbscale		2648275	0					
ANR	2648335	Identifier	eb_compute_rbscale		2648275	0					
ANR	2648336	ArgumentList	params		2648275	1					
ANR	2648337	Argument	params		2648275	0					
ANR	2648338	Identifier	params		2648275	0					
ANR	2648339	IdentifierDeclStatement	int even_c1 = ebc -> even_c1 ;	1549:2:41552:41578	2648275	9	True				
ANR	2648340	IdentifierDecl	even_c1 = ebc -> even_c1		2648275	0					
ANR	2648341	IdentifierDeclType	int		2648275	0					
ANR	2648342	Identifier	even_c1		2648275	1					
ANR	2648343	AssignmentExpression	even_c1 = ebc -> even_c1		2648275	2		=			
ANR	2648344	Identifier	even_c1		2648275	0					
ANR	2648345	PtrMemberAccess	ebc -> even_c1		2648275	1					
ANR	2648346	Identifier	ebc		2648275	0					
ANR	2648347	Identifier	even_c1		2648275	1					
ANR	2648348	IdentifierDeclStatement	int even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 ) ;	1550:2:41582:41632	2648275	10	True				
ANR	2648349	IdentifierDecl	even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 )		2648275	0					
ANR	2648350	IdentifierDeclType	int		2648275	0					
ANR	2648351	Identifier	even_rlimit		2648275	1					
ANR	2648352	AssignmentExpression	even_rlimit = 1 << ( 30 - EVEN_SHIFT + even_c1 )		2648275	2		=			
ANR	2648353	Identifier	even_rlimit		2648275	0					
ANR	2648354	ShiftExpression	1 << ( 30 - EVEN_SHIFT + even_c1 )		2648275	1		<<			
ANR	2648355	PrimaryExpression	1		2648275	0					
ANR	2648356	AdditiveExpression	30 - EVEN_SHIFT + even_c1		2648275	1		-			
ANR	2648357	PrimaryExpression	30		2648275	0					
ANR	2648358	AdditiveExpression	EVEN_SHIFT + even_c1		2648275	1		+			
ANR	2648359	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648360	Identifier	even_c1		2648275	1					
ANR	2648361	IdentifierDeclStatement	int do_shadows = params -> do_shadows ;	1551:2:41636:41671	2648275	11	True				
ANR	2648362	IdentifierDecl	do_shadows = params -> do_shadows		2648275	0					
ANR	2648363	IdentifierDeclType	int		2648275	0					
ANR	2648364	Identifier	do_shadows		2648275	1					
ANR	2648365	AssignmentExpression	do_shadows = params -> do_shadows		2648275	2		=			
ANR	2648366	Identifier	do_shadows		2648275	0					
ANR	2648367	PtrMemberAccess	params -> do_shadows		2648275	1					
ANR	2648368	Identifier	params		2648275	0					
ANR	2648369	Identifier	do_shadows		2648275	1					
ANR	2648370	IdentifierDeclStatement	int log2_levels ;	1552:2:41675:41690	2648275	12	True				
ANR	2648371	IdentifierDecl	log2_levels		2648275	0					
ANR	2648372	IdentifierDeclType	int		2648275	0					
ANR	2648373	Identifier	log2_levels		2648275	1					
ANR	2648374	IdentifierDeclStatement	int rs_base ;	1553:2:41694:41705	2648275	13	True				
ANR	2648375	IdentifierDecl	rs_base		2648275	0					
ANR	2648376	IdentifierDeclType	int		2648275	0					
ANR	2648377	Identifier	rs_base		2648275	1					
ANR	2648378	ExpressionStatement	result = ( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )	1555:2:41710:41760	2648275	14	True				
ANR	2648379	AssignmentExpression	result = ( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )		2648275	0		=			
ANR	2648380	Identifier	result		2648275	0					
ANR	2648381	CastExpression	( EBPlaneCtx * ) malloc ( sizeof ( EBPlaneCtx ) )		2648275	1					
ANR	2648382	CastTarget	EBPlaneCtx *		2648275	0					
ANR	2648383	CallExpression	malloc ( sizeof ( EBPlaneCtx ) )		2648275	1					
ANR	2648384	Callee	malloc		2648275	0					
ANR	2648385	Identifier	malloc		2648275	0					
ANR	2648386	ArgumentList	sizeof ( EBPlaneCtx )		2648275	1					
ANR	2648387	Argument	sizeof ( EBPlaneCtx )		2648275	0					
ANR	2648388	SizeofExpression	sizeof ( EBPlaneCtx )		2648275	0					
ANR	2648389	Sizeof	sizeof		2648275	0					
ANR	2648390	SizeofOperand	EBPlaneCtx		2648275	1					
ANR	2648391	ExpressionStatement	result -> source_width = source_width	1557:2:41765:41800	2648275	15	True				
ANR	2648392	AssignmentExpression	result -> source_width = source_width		2648275	0		=			
ANR	2648393	PtrMemberAccess	result -> source_width		2648275	0					
ANR	2648394	Identifier	result		2648275	0					
ANR	2648395	Identifier	source_width		2648275	1					
ANR	2648396	Identifier	source_width		2648275	1					
ANR	2648397	ExpressionStatement	result -> dest_width = dest_width	1558:2:41804:41835	2648275	16	True				
ANR	2648398	AssignmentExpression	result -> dest_width = dest_width		2648275	0		=			
ANR	2648399	PtrMemberAccess	result -> dest_width		2648275	0					
ANR	2648400	Identifier	result		2648275	0					
ANR	2648401	Identifier	dest_width		2648275	1					
ANR	2648402	Identifier	dest_width		2648275	1					
ANR	2648403	ExpressionStatement	new_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1560:2:41840:41896	2648275	17	True				
ANR	2648404	AssignmentExpression	new_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	0		=			
ANR	2648405	Identifier	new_lut		2648275	0					
ANR	2648406	CastExpression	( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648407	CastTarget	int *		2648275	0					
ANR	2648408	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648409	Callee	malloc		2648275	0					
ANR	2648410	Identifier	malloc		2648275	0					
ANR	2648411	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	1					
ANR	2648412	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0					
ANR	2648413	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0		*			
ANR	2648414	AdditiveExpression	ET_SRC_MAX + 1		2648275	0		+			
ANR	2648415	Identifier	ET_SRC_MAX		2648275	0					
ANR	2648416	PrimaryExpression	1		2648275	1					
ANR	2648417	SizeofExpression	sizeof ( int )		2648275	1					
ANR	2648418	Sizeof	sizeof		2648275	0					
ANR	2648419	SizeofOperand	int		2648275	1					
ANR	2648420	ForStatement	for ( i = 0 ; i < ET_SRC_MAX + 1 ; i ++ )		2648275	18					
ANR	2648421	ForInit	i = 0 ;	1561:7:41905:41910	2648275	0	True				
ANR	2648422	AssignmentExpression	i = 0		2648275	0		=			
ANR	2648423	Identifier	i		2648275	0					
ANR	2648424	PrimaryExpression	0		2648275	1					
ANR	2648425	Condition	i < ET_SRC_MAX + 1	1561:14:41912:41929	2648275	1	True				
ANR	2648426	RelationalExpression	i < ET_SRC_MAX + 1		2648275	0		<			
ANR	2648427	Identifier	i		2648275	0					
ANR	2648428	AdditiveExpression	ET_SRC_MAX + 1		2648275	1		+			
ANR	2648429	Identifier	ET_SRC_MAX		2648275	0					
ANR	2648430	PrimaryExpression	1		2648275	1					
ANR	2648431	PostIncDecOperationExpression	i ++	1561:34:41932:41934	2648275	2	True				
ANR	2648432	Identifier	i		2648275	0					
ANR	2648433	IncDec	++		2648275	1					
ANR	2648434	CompoundStatement		25:6:645:652	2648275	3					
ANR	2648435	IdentifierDeclStatement	int nli ;	1563:6:41949:41956	2648275	0	True				
ANR	2648436	IdentifierDecl	nli		2648275	0					
ANR	2648437	IdentifierDeclType	int		2648275	0					
ANR	2648438	Identifier	nli		2648275	1					
ANR	2648439	IfStatement	if ( lut == NULL )		2648275	1					
ANR	2648440	Condition	lut == NULL	1565:10:41969:41979	2648275	0	True				
ANR	2648441	EqualityExpression	lut == NULL		2648275	0		==			
ANR	2648442	Identifier	lut		2648275	0					
ANR	2648443	Identifier	NULL		2648275	1					
ANR	2648444	CompoundStatement		28:8:686:686	2648275	1					
ANR	2648445	ExpressionStatement	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )	1568:10:42024:42073	2648275	0	True				
ANR	2648446	AssignmentExpression	nli = ( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )		2648275	0		=			
ANR	2648447	Identifier	nli		2648275	0					
ANR	2648448	ShiftExpression	( i * 65793 + ( i >> 7 ) ) >> ( 24 - EVEN_SHIFT )		2648275	1		>>			
ANR	2648449	AdditiveExpression	i * 65793 + ( i >> 7 )		2648275	0		+			
ANR	2648450	MultiplicativeExpression	i * 65793		2648275	0		*			
ANR	2648451	Identifier	i		2648275	0					
ANR	2648452	PrimaryExpression	65793		2648275	1					
ANR	2648453	ShiftExpression	i >> 7		2648275	1		>>			
ANR	2648454	Identifier	i		2648275	0					
ANR	2648455	PrimaryExpression	7		2648275	1					
ANR	2648456	AdditiveExpression	24 - EVEN_SHIFT		2648275	1		-			
ANR	2648457	PrimaryExpression	24		2648275	0					
ANR	2648458	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648459	ElseStatement	else		2648275	0					
ANR	2648460	ExpressionStatement	nli = lut [ i ] >> ( 24 - EVEN_SHIFT )	1574:8:42188:42221	2648275	0	True				
ANR	2648461	AssignmentExpression	nli = lut [ i ] >> ( 24 - EVEN_SHIFT )		2648275	0		=			
ANR	2648462	Identifier	nli		2648275	0					
ANR	2648463	ShiftExpression	lut [ i ] >> ( 24 - EVEN_SHIFT )		2648275	1		>>			
ANR	2648464	ArrayIndexing	lut [ i ]		2648275	0					
ANR	2648465	Identifier	lut		2648275	0					
ANR	2648466	Identifier	i		2648275	1					
ANR	2648467	AdditiveExpression	24 - EVEN_SHIFT		2648275	1		-			
ANR	2648468	PrimaryExpression	24		2648275	0					
ANR	2648469	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648470	ExpressionStatement	new_lut [ i ] = ( 1 << EVEN_SHIFT ) - nli	1575:6:42229:42265	2648275	2	True				
ANR	2648471	AssignmentExpression	new_lut [ i ] = ( 1 << EVEN_SHIFT ) - nli		2648275	0		=			
ANR	2648472	ArrayIndexing	new_lut [ i ]		2648275	0					
ANR	2648473	Identifier	new_lut		2648275	0					
ANR	2648474	Identifier	i		2648275	1					
ANR	2648475	AdditiveExpression	( 1 << EVEN_SHIFT ) - nli		2648275	1		-			
ANR	2648476	ShiftExpression	1 << EVEN_SHIFT		2648275	0		<<			
ANR	2648477	PrimaryExpression	1		2648275	0					
ANR	2648478	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648479	Identifier	nli		2648275	1					
ANR	2648480	ExpressionStatement	rb_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1578:2:42276:42331	2648275	19	True				
ANR	2648481	AssignmentExpression	rb_lut = ( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	0		=			
ANR	2648482	Identifier	rb_lut		2648275	0					
ANR	2648483	CastExpression	( int * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648484	CastTarget	int *		2648275	0					
ANR	2648485	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648486	Callee	malloc		2648275	0					
ANR	2648487	Identifier	malloc		2648275	0					
ANR	2648488	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	1					
ANR	2648489	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0					
ANR	2648490	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0		*			
ANR	2648491	AdditiveExpression	ET_SRC_MAX + 1		2648275	0		+			
ANR	2648492	Identifier	ET_SRC_MAX		2648275	0					
ANR	2648493	PrimaryExpression	1		2648275	1					
ANR	2648494	SizeofExpression	sizeof ( int )		2648275	1					
ANR	2648495	Sizeof	sizeof		2648275	0					
ANR	2648496	SizeofOperand	int		2648275	1					
ANR	2648497	ExpressionStatement	rs_lut = ( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )	1579:2:42335:42391	2648275	20	True				
ANR	2648498	AssignmentExpression	rs_lut = ( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	0		=			
ANR	2648499	Identifier	rs_lut		2648275	0					
ANR	2648500	CastExpression	( char * ) malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648501	CastTarget	char *		2648275	0					
ANR	2648502	CallExpression	malloc ( ( ET_SRC_MAX + 1 ) * sizeof ( int ) )		2648275	1					
ANR	2648503	Callee	malloc		2648275	0					
ANR	2648504	Identifier	malloc		2648275	0					
ANR	2648505	ArgumentList	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	1					
ANR	2648506	Argument	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0					
ANR	2648507	MultiplicativeExpression	( ET_SRC_MAX + 1 ) * sizeof ( int )		2648275	0		*			
ANR	2648508	AdditiveExpression	ET_SRC_MAX + 1		2648275	0		+			
ANR	2648509	Identifier	ET_SRC_MAX		2648275	0					
ANR	2648510	PrimaryExpression	1		2648275	1					
ANR	2648511	SizeofExpression	sizeof ( int )		2648275	1					
ANR	2648512	Sizeof	sizeof		2648275	0					
ANR	2648513	SizeofOperand	int		2648275	1					
ANR	2648514	ExpressionStatement	log2_levels = even_log2 ( params -> levels )	1581:2:42396:42436	2648275	21	True				
ANR	2648515	AssignmentExpression	log2_levels = even_log2 ( params -> levels )		2648275	0		=			
ANR	2648516	Identifier	log2_levels		2648275	0					
ANR	2648517	CallExpression	even_log2 ( params -> levels )		2648275	1					
ANR	2648518	Callee	even_log2		2648275	0					
ANR	2648519	Identifier	even_log2		2648275	0					
ANR	2648520	ArgumentList	params -> levels		2648275	1					
ANR	2648521	Argument	params -> levels		2648275	0					
ANR	2648522	PtrMemberAccess	params -> levels		2648275	0					
ANR	2648523	Identifier	params		2648275	0					
ANR	2648524	Identifier	levels		2648275	1					
ANR	2648525	ExpressionStatement	rs_base = 35 - EVEN_SHIFT + log2_levels - params -> rand_scale	1582:2:42440:42500	2648275	22	True				
ANR	2648526	AssignmentExpression	rs_base = 35 - EVEN_SHIFT + log2_levels - params -> rand_scale		2648275	0		=			
ANR	2648527	Identifier	rs_base		2648275	0					
ANR	2648528	AdditiveExpression	35 - EVEN_SHIFT + log2_levels - params -> rand_scale		2648275	1		-			
ANR	2648529	PrimaryExpression	35		2648275	0					
ANR	2648530	AdditiveExpression	EVEN_SHIFT + log2_levels - params -> rand_scale		2648275	1		+			
ANR	2648531	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648532	AdditiveExpression	log2_levels - params -> rand_scale		2648275	1		-			
ANR	2648533	Identifier	log2_levels		2648275	0					
ANR	2648534	PtrMemberAccess	params -> rand_scale		2648275	1					
ANR	2648535	Identifier	params		2648275	0					
ANR	2648536	Identifier	rand_scale		2648275	1					
ANR	2648537	ForStatement	for ( i = 0 ; i <= ET_SRC_MAX ; i ++ )		2648275	23					
ANR	2648538	ForInit	i = 0 ;	1584:7:42510:42515	2648275	0	True				
ANR	2648539	AssignmentExpression	i = 0		2648275	0		=			
ANR	2648540	Identifier	i		2648275	0					
ANR	2648541	PrimaryExpression	0		2648275	1					
ANR	2648542	Condition	i <= ET_SRC_MAX	1584:14:42517:42531	2648275	1	True				
ANR	2648543	RelationalExpression	i <= ET_SRC_MAX		2648275	0		<=			
ANR	2648544	Identifier	i		2648275	0					
ANR	2648545	Identifier	ET_SRC_MAX		2648275	1					
ANR	2648546	PostIncDecOperationExpression	i ++	1584:31:42534:42536	2648275	2	True				
ANR	2648547	Identifier	i		2648275	0					
ANR	2648548	IncDec	++		2648275	1					
ANR	2648549	CompoundStatement		50:6:1314:1320	2648275	3					
ANR	2648550	IdentifierDeclStatement	double rb ;	1586:6:42551:42560	2648275	0	True				
ANR	2648551	IdentifierDecl	rb		2648275	0					
ANR	2648552	IdentifierDeclType	double		2648275	0					
ANR	2648553	Identifier	rb		2648275	1					
ANR	2648554	IdentifierDeclStatement	int nl = new_lut [ i ] * ( params -> levels - 1 ) ;	1587:6:42568:42610	2648275	1	True				
ANR	2648555	IdentifierDecl	nl = new_lut [ i ] * ( params -> levels - 1 )		2648275	0					
ANR	2648556	IdentifierDeclType	int		2648275	0					
ANR	2648557	Identifier	nl		2648275	1					
ANR	2648558	AssignmentExpression	nl = new_lut [ i ] * ( params -> levels - 1 )		2648275	2		=			
ANR	2648559	Identifier	nl		2648275	0					
ANR	2648560	MultiplicativeExpression	new_lut [ i ] * ( params -> levels - 1 )		2648275	1		*			
ANR	2648561	ArrayIndexing	new_lut [ i ]		2648275	0					
ANR	2648562	Identifier	new_lut		2648275	0					
ANR	2648563	Identifier	i		2648275	1					
ANR	2648564	AdditiveExpression	params -> levels - 1		2648275	1		-			
ANR	2648565	PtrMemberAccess	params -> levels		2648275	0					
ANR	2648566	Identifier	params		2648275	0					
ANR	2648567	Identifier	levels		2648275	1					
ANR	2648568	PrimaryExpression	1		2648275	1					
ANR	2648569	IdentifierDeclStatement	int rs ;	1588:6:42618:42624	2648275	2	True				
ANR	2648570	IdentifierDecl	rs		2648275	0					
ANR	2648571	IdentifierDeclType	int		2648275	0					
ANR	2648572	Identifier	rs		2648275	1					
ANR	2648573	IfStatement	if ( nl == 0 )		2648275	3					
ANR	2648574	Condition	nl == 0	1590:10:42637:42643	2648275	0	True				
ANR	2648575	EqualityExpression	nl == 0		2648275	0		==			
ANR	2648576	Identifier	nl		2648275	0					
ANR	2648577	PrimaryExpression	0		2648275	1					
ANR	2648578	ExpressionStatement	rb = 0	1591:8:42654:42660	2648275	1	True				
ANR	2648579	AssignmentExpression	rb = 0		2648275	0		=			
ANR	2648580	Identifier	rb		2648275	0					
ANR	2648581	PrimaryExpression	0		2648275	1					
ANR	2648582	ElseStatement	else		2648275	0					
ANR	2648583	CompoundStatement		55:8:1377:1377	2648275	0					
ANR	2648584	ExpressionStatement	rb = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl	1594:10:42693:42748	2648275	0	True				
ANR	2648585	AssignmentExpression	rb = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		2648275	0		=			
ANR	2648586	Identifier	rb		2648275	0					
ANR	2648587	MultiplicativeExpression	( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		2648275	1		/			
ANR	2648588	MultiplicativeExpression	rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) )		2648275	0		*			
ANR	2648589	Identifier	rbscale		2648275	0					
ANR	2648590	ShiftExpression	1 << ( 2 * EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648591	PrimaryExpression	1		2648275	0					
ANR	2648592	AdditiveExpression	2 * EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648593	MultiplicativeExpression	2 * EVEN_SHIFT		2648275	0		*			
ANR	2648594	PrimaryExpression	2		2648275	0					
ANR	2648595	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648596	Identifier	even_c1		2648275	1					
ANR	2648597	Identifier	nl		2648275	1					
ANR	2648598	IfStatement	if ( rb > even_rlimit << ( EVEN_SHIFT - even_c1 ) )		2648275	1					
ANR	2648599	Condition	rb > even_rlimit << ( EVEN_SHIFT - even_c1 )	1595:14:42764:42805	2648275	0	True				
ANR	2648600	RelationalExpression	rb > even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	0		>			
ANR	2648601	Identifier	rb		2648275	0					
ANR	2648602	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648603	Identifier	even_rlimit		2648275	0					
ANR	2648604	AdditiveExpression	EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648605	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648606	Identifier	even_c1		2648275	1					
ANR	2648607	ExpressionStatement	rb = even_rlimit << ( EVEN_SHIFT - even_c1 )	1596:12:42820:42862	2648275	1	True				
ANR	2648608	AssignmentExpression	rb = even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	0		=			
ANR	2648609	Identifier	rb		2648275	0					
ANR	2648610	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648611	Identifier	even_rlimit		2648275	0					
ANR	2648612	AdditiveExpression	EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648613	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648614	Identifier	even_c1		2648275	1					
ANR	2648615	ExpressionStatement	"rs = eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"	1599:6:42881:42947	2648275	4	True				
ANR	2648616	AssignmentExpression	"rs = eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"		2648275	0		=			
ANR	2648617	Identifier	rs		2648275	0					
ANR	2648618	CallExpression	"eb_compute_randshift ( nl , rs_base , do_shadows , params -> levels )"		2648275	1					
ANR	2648619	Callee	eb_compute_randshift		2648275	0					
ANR	2648620	Identifier	eb_compute_randshift		2648275	0					
ANR	2648621	ArgumentList	nl		2648275	1					
ANR	2648622	Argument	nl		2648275	0					
ANR	2648623	Identifier	nl		2648275	0					
ANR	2648624	Argument	rs_base		2648275	1					
ANR	2648625	Identifier	rs_base		2648275	0					
ANR	2648626	Argument	do_shadows		2648275	2					
ANR	2648627	Identifier	do_shadows		2648275	0					
ANR	2648628	Argument	params -> levels		2648275	3					
ANR	2648629	PtrMemberAccess	params -> levels		2648275	0					
ANR	2648630	Identifier	params		2648275	0					
ANR	2648631	Identifier	levels		2648275	1					
ANR	2648632	ExpressionStatement	rs_lut [ i ] = rs	1600:6:42955:42969	2648275	5	True				
ANR	2648633	AssignmentExpression	rs_lut [ i ] = rs		2648275	0		=			
ANR	2648634	ArrayIndexing	rs_lut [ i ]		2648275	0					
ANR	2648635	Identifier	rs_lut		2648275	0					
ANR	2648636	Identifier	i		2648275	1					
ANR	2648637	Identifier	rs		2648275	1					
ANR	2648638	IfStatement	if ( params -> do_shadows )		2648275	6					
ANR	2648639	Condition	params -> do_shadows	1602:10:42982:42999	2648275	0	True				
ANR	2648640	PtrMemberAccess	params -> do_shadows		2648275	0					
ANR	2648641	Identifier	params		2648275	0					
ANR	2648642	Identifier	do_shadows		2648275	1					
ANR	2648643	CompoundStatement		65:8:1706:1706	2648275	1					
ANR	2648644	ExpressionStatement	nl = ( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )	1604:10:43022:43082	2648275	0	True				
ANR	2648645	AssignmentExpression	nl = ( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )		2648275	0		=			
ANR	2648646	Identifier	nl		2648275	0					
ANR	2648647	MultiplicativeExpression	( ( 1 << EVEN_SHIFT ) - new_lut [ i ] ) * ( params -> levels - 1 )		2648275	1		*			
ANR	2648648	AdditiveExpression	( 1 << EVEN_SHIFT ) - new_lut [ i ]		2648275	0		-			
ANR	2648649	ShiftExpression	1 << EVEN_SHIFT		2648275	0		<<			
ANR	2648650	PrimaryExpression	1		2648275	0					
ANR	2648651	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648652	ArrayIndexing	new_lut [ i ]		2648275	1					
ANR	2648653	Identifier	new_lut		2648275	0					
ANR	2648654	Identifier	i		2648275	1					
ANR	2648655	AdditiveExpression	params -> levels - 1		2648275	1		-			
ANR	2648656	PtrMemberAccess	params -> levels		2648275	0					
ANR	2648657	Identifier	params		2648275	0					
ANR	2648658	Identifier	levels		2648275	1					
ANR	2648659	PrimaryExpression	1		2648275	1					
ANR	2648660	IfStatement	if ( nl == 0 )		2648275	1					
ANR	2648661	Condition	nl == 0	1606:14:43099:43105	2648275	0	True				
ANR	2648662	EqualityExpression	nl == 0		2648275	0		==			
ANR	2648663	Identifier	nl		2648275	0					
ANR	2648664	PrimaryExpression	0		2648275	1					
ANR	2648665	ExpressionStatement	rb = 0	1607:12:43120:43126	2648275	1	True				
ANR	2648666	AssignmentExpression	rb = 0		2648275	0		=			
ANR	2648667	Identifier	rb		2648275	0					
ANR	2648668	PrimaryExpression	0		2648275	1					
ANR	2648669	ElseStatement	else		2648275	0					
ANR	2648670	CompoundStatement		72:14:1867:1876	2648275	0					
ANR	2648671	IdentifierDeclStatement	int rb_sh ;	1610:14:43171:43180	2648275	0	True				
ANR	2648672	IdentifierDecl	rb_sh		2648275	0					
ANR	2648673	IdentifierDeclType	int		2648275	0					
ANR	2648674	Identifier	rb_sh		2648275	1					
ANR	2648675	ExpressionStatement	rb_sh = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl	1611:14:43196:43254	2648275	1	True				
ANR	2648676	AssignmentExpression	rb_sh = ( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		2648275	0		=			
ANR	2648677	Identifier	rb_sh		2648275	0					
ANR	2648678	MultiplicativeExpression	( rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) ) ) / nl		2648275	1		/			
ANR	2648679	MultiplicativeExpression	rbscale * ( 1 << ( 2 * EVEN_SHIFT - even_c1 ) )		2648275	0		*			
ANR	2648680	Identifier	rbscale		2648275	0					
ANR	2648681	ShiftExpression	1 << ( 2 * EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648682	PrimaryExpression	1		2648275	0					
ANR	2648683	AdditiveExpression	2 * EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648684	MultiplicativeExpression	2 * EVEN_SHIFT		2648275	0		*			
ANR	2648685	PrimaryExpression	2		2648275	0					
ANR	2648686	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648687	Identifier	even_c1		2648275	1					
ANR	2648688	Identifier	nl		2648275	1					
ANR	2648689	IfStatement	if ( rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 ) )		2648275	2					
ANR	2648690	Condition	rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 )	1612:18:43274:43318	2648275	0	True				
ANR	2648691	RelationalExpression	rb_sh > even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	0		>			
ANR	2648692	Identifier	rb_sh		2648275	0					
ANR	2648693	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648694	Identifier	even_rlimit		2648275	0					
ANR	2648695	AdditiveExpression	EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648696	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648697	Identifier	even_c1		2648275	1					
ANR	2648698	ExpressionStatement	rb_sh = even_rlimit << ( EVEN_SHIFT - even_c1 )	1613:16:43337:43382	2648275	1	True				
ANR	2648699	AssignmentExpression	rb_sh = even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	0		=			
ANR	2648700	Identifier	rb_sh		2648275	0					
ANR	2648701	ShiftExpression	even_rlimit << ( EVEN_SHIFT - even_c1 )		2648275	1		<<			
ANR	2648702	Identifier	even_rlimit		2648275	0					
ANR	2648703	AdditiveExpression	EVEN_SHIFT - even_c1		2648275	1		-			
ANR	2648704	Identifier	EVEN_SHIFT		2648275	0					
ANR	2648705	Identifier	even_c1		2648275	1					
ANR	2648706	ExpressionStatement	rb -= rb_sh	1614:14:43398:43409	2648275	3	True				
ANR	2648707	AssignmentExpression	rb -= rb_sh		2648275	0		-=			
ANR	2648708	Identifier	rb		2648275	0					
ANR	2648709	Identifier	rb_sh		2648275	1					
ANR	2648710	ExpressionStatement	rb_lut [ i ] = rb	1617:6:43441:43455	2648275	7	True				
ANR	2648711	AssignmentExpression	rb_lut [ i ] = rb		2648275	0		=			
ANR	2648712	ArrayIndexing	rb_lut [ i ]		2648275	0					
ANR	2648713	Identifier	rb_lut		2648275	0					
ANR	2648714	Identifier	i		2648275	1					
ANR	2648715	Identifier	rb		2648275	1					
ANR	2648716	ExpressionStatement	result -> lut = new_lut	1621:2:43467:43488	2648275	24	True				
ANR	2648717	AssignmentExpression	result -> lut = new_lut		2648275	0		=			
ANR	2648718	PtrMemberAccess	result -> lut		2648275	0					
ANR	2648719	Identifier	result		2648275	0					
ANR	2648720	Identifier	lut		2648275	1					
ANR	2648721	Identifier	new_lut		2648275	1					
ANR	2648722	ExpressionStatement	result -> rb_lut = rb_lut	1622:2:43492:43515	2648275	25	True				
ANR	2648723	AssignmentExpression	result -> rb_lut = rb_lut		2648275	0		=			
ANR	2648724	PtrMemberAccess	result -> rb_lut		2648275	0					
ANR	2648725	Identifier	result		2648275	0					
ANR	2648726	Identifier	rb_lut		2648275	1					
ANR	2648727	Identifier	rb_lut		2648275	1					
ANR	2648728	ExpressionStatement	result -> rs_lut = rs_lut	1623:2:43519:43542	2648275	26	True				
ANR	2648729	AssignmentExpression	result -> rs_lut = rs_lut		2648275	0		=			
ANR	2648730	PtrMemberAccess	result -> rs_lut		2648275	0					
ANR	2648731	Identifier	result		2648275	0					
ANR	2648732	Identifier	rs_lut		2648275	1					
ANR	2648733	Identifier	rs_lut		2648275	1					
ANR	2648734	ExpressionStatement	"result -> rb_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1625:2:43547:43604	2648275	27	True				
ANR	2648735	AssignmentExpression	"result -> rb_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648736	PtrMemberAccess	result -> rb_line		2648275	0					
ANR	2648737	Identifier	result		2648275	0					
ANR	2648738	Identifier	rb_line		2648275	1					
ANR	2648739	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648740	CastTarget	int *		2648275	0					
ANR	2648741	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648742	Callee	calloc		2648275	0					
ANR	2648743	Identifier	calloc		2648275	0					
ANR	2648744	ArgumentList	dest_width		2648275	1					
ANR	2648745	Argument	dest_width		2648275	0					
ANR	2648746	Identifier	dest_width		2648275	0					
ANR	2648747	Argument	sizeof ( int )		2648275	1					
ANR	2648748	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648749	Sizeof	sizeof		2648275	0					
ANR	2648750	SizeofOperand	int		2648275	1					
ANR	2648751	ExpressionStatement	"result -> iir_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1626:2:43608:43666	2648275	28	True				
ANR	2648752	AssignmentExpression	"result -> iir_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648753	PtrMemberAccess	result -> iir_line		2648275	0					
ANR	2648754	Identifier	result		2648275	0					
ANR	2648755	Identifier	iir_line		2648275	1					
ANR	2648756	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648757	CastTarget	int *		2648275	0					
ANR	2648758	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648759	Callee	calloc		2648275	0					
ANR	2648760	Identifier	calloc		2648275	0					
ANR	2648761	ArgumentList	dest_width		2648275	1					
ANR	2648762	Argument	dest_width		2648275	0					
ANR	2648763	Identifier	dest_width		2648275	0					
ANR	2648764	Argument	sizeof ( int )		2648275	1					
ANR	2648765	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648766	Sizeof	sizeof		2648275	0					
ANR	2648767	SizeofOperand	int		2648275	1					
ANR	2648768	ExpressionStatement	"result -> r_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1627:2:43670:43726	2648275	29	True				
ANR	2648769	AssignmentExpression	"result -> r_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648770	PtrMemberAccess	result -> r_line		2648275	0					
ANR	2648771	Identifier	result		2648275	0					
ANR	2648772	Identifier	r_line		2648275	1					
ANR	2648773	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648774	CastTarget	int *		2648275	0					
ANR	2648775	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648776	Callee	calloc		2648275	0					
ANR	2648777	Identifier	calloc		2648275	0					
ANR	2648778	ArgumentList	dest_width		2648275	1					
ANR	2648779	Argument	dest_width		2648275	0					
ANR	2648780	Identifier	dest_width		2648275	0					
ANR	2648781	Argument	sizeof ( int )		2648275	1					
ANR	2648782	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648783	Sizeof	sizeof		2648275	0					
ANR	2648784	SizeofOperand	int		2648275	1					
ANR	2648785	ExpressionStatement	"result -> a_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1628:2:43730:43786	2648275	30	True				
ANR	2648786	AssignmentExpression	"result -> a_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648787	PtrMemberAccess	result -> a_line		2648275	0					
ANR	2648788	Identifier	result		2648275	0					
ANR	2648789	Identifier	a_line		2648275	1					
ANR	2648790	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648791	CastTarget	int *		2648275	0					
ANR	2648792	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648793	Callee	calloc		2648275	0					
ANR	2648794	Identifier	calloc		2648275	0					
ANR	2648795	ArgumentList	dest_width		2648275	1					
ANR	2648796	Argument	dest_width		2648275	0					
ANR	2648797	Identifier	dest_width		2648275	0					
ANR	2648798	Argument	sizeof ( int )		2648275	1					
ANR	2648799	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648800	Sizeof	sizeof		2648275	0					
ANR	2648801	SizeofOperand	int		2648275	1					
ANR	2648802	ExpressionStatement	"result -> b_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1629:2:43790:43846	2648275	31	True				
ANR	2648803	AssignmentExpression	"result -> b_line = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648804	PtrMemberAccess	result -> b_line		2648275	0					
ANR	2648805	Identifier	result		2648275	0					
ANR	2648806	Identifier	b_line		2648275	1					
ANR	2648807	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648808	CastTarget	int *		2648275	0					
ANR	2648809	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648810	Callee	calloc		2648275	0					
ANR	2648811	Identifier	calloc		2648275	0					
ANR	2648812	ArgumentList	dest_width		2648275	1					
ANR	2648813	Argument	dest_width		2648275	0					
ANR	2648814	Identifier	dest_width		2648275	0					
ANR	2648815	Argument	sizeof ( int )		2648275	1					
ANR	2648816	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648817	Sizeof	sizeof		2648275	0					
ANR	2648818	SizeofOperand	int		2648275	1					
ANR	2648819	ExpressionStatement	"result -> white_count_line = ( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"	1630:2:43850:43928	2648275	32	True				
ANR	2648820	AssignmentExpression	"result -> white_count_line = ( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		2648275	0		=			
ANR	2648821	PtrMemberAccess	result -> white_count_line		2648275	0					
ANR	2648822	Identifier	result		2648275	0					
ANR	2648823	Identifier	white_count_line		2648275	1					
ANR	2648824	CastExpression	"( int * ) calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		2648275	1					
ANR	2648825	CastTarget	int *		2648275	0					
ANR	2648826	CallExpression	"calloc ( ( dest_width + 15 ) >> 4 , sizeof ( int ) )"		2648275	1					
ANR	2648827	Callee	calloc		2648275	0					
ANR	2648828	Identifier	calloc		2648275	0					
ANR	2648829	ArgumentList	( dest_width + 15 ) >> 4		2648275	1					
ANR	2648830	Argument	( dest_width + 15 ) >> 4		2648275	0					
ANR	2648831	ShiftExpression	( dest_width + 15 ) >> 4		2648275	0		>>			
ANR	2648832	AdditiveExpression	dest_width + 15		2648275	0		+			
ANR	2648833	Identifier	dest_width		2648275	0					
ANR	2648834	PrimaryExpression	15		2648275	1					
ANR	2648835	PrimaryExpression	4		2648275	1					
ANR	2648836	Argument	sizeof ( int )		2648275	1					
ANR	2648837	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648838	Sizeof	sizeof		2648275	0					
ANR	2648839	SizeofOperand	int		2648275	1					
ANR	2648840	IfStatement	if ( do_shadows )		2648275	33					
ANR	2648841	Condition	do_shadows	1631:6:43936:43945	2648275	0	True				
ANR	2648842	Identifier	do_shadows		2648275	0					
ANR	2648843	CompoundStatement		94:4:2648:2648	2648275	1					
ANR	2648844	ExpressionStatement	"result -> r_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1633:6:43960:44019	2648275	0	True				
ANR	2648845	AssignmentExpression	"result -> r_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648846	PtrMemberAccess	result -> r_line_sh		2648275	0					
ANR	2648847	Identifier	result		2648275	0					
ANR	2648848	Identifier	r_line_sh		2648275	1					
ANR	2648849	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648850	CastTarget	int *		2648275	0					
ANR	2648851	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648852	Callee	calloc		2648275	0					
ANR	2648853	Identifier	calloc		2648275	0					
ANR	2648854	ArgumentList	dest_width		2648275	1					
ANR	2648855	Argument	dest_width		2648275	0					
ANR	2648856	Identifier	dest_width		2648275	0					
ANR	2648857	Argument	sizeof ( int )		2648275	1					
ANR	2648858	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648859	Sizeof	sizeof		2648275	0					
ANR	2648860	SizeofOperand	int		2648275	1					
ANR	2648861	ExpressionStatement	"result -> a_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1634:6:44027:44086	2648275	1	True				
ANR	2648862	AssignmentExpression	"result -> a_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648863	PtrMemberAccess	result -> a_line_sh		2648275	0					
ANR	2648864	Identifier	result		2648275	0					
ANR	2648865	Identifier	a_line_sh		2648275	1					
ANR	2648866	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648867	CastTarget	int *		2648275	0					
ANR	2648868	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648869	Callee	calloc		2648275	0					
ANR	2648870	Identifier	calloc		2648275	0					
ANR	2648871	ArgumentList	dest_width		2648275	1					
ANR	2648872	Argument	dest_width		2648275	0					
ANR	2648873	Identifier	dest_width		2648275	0					
ANR	2648874	Argument	sizeof ( int )		2648275	1					
ANR	2648875	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648876	Sizeof	sizeof		2648275	0					
ANR	2648877	SizeofOperand	int		2648275	1					
ANR	2648878	ExpressionStatement	"result -> b_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"	1635:6:44094:44153	2648275	2	True				
ANR	2648879	AssignmentExpression	"result -> b_line_sh = ( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	0		=			
ANR	2648880	PtrMemberAccess	result -> b_line_sh		2648275	0					
ANR	2648881	Identifier	result		2648275	0					
ANR	2648882	Identifier	b_line_sh		2648275	1					
ANR	2648883	CastExpression	"( int * ) calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648884	CastTarget	int *		2648275	0					
ANR	2648885	CallExpression	"calloc ( dest_width , sizeof ( int ) )"		2648275	1					
ANR	2648886	Callee	calloc		2648275	0					
ANR	2648887	Identifier	calloc		2648275	0					
ANR	2648888	ArgumentList	dest_width		2648275	1					
ANR	2648889	Argument	dest_width		2648275	0					
ANR	2648890	Identifier	dest_width		2648275	0					
ANR	2648891	Argument	sizeof ( int )		2648275	1					
ANR	2648892	SizeofExpression	sizeof ( int )		2648275	0					
ANR	2648893	Sizeof	sizeof		2648275	0					
ANR	2648894	SizeofOperand	int		2648275	1					
ANR	2648895	ElseStatement	else		2648275	0					
ANR	2648896	CompoundStatement		100:4:2868:2868	2648275	0					
ANR	2648897	ExpressionStatement	result -> r_line_sh = NULL	1639:6:44180:44204	2648275	0	True				
ANR	2648898	AssignmentExpression	result -> r_line_sh = NULL		2648275	0		=			
ANR	2648899	PtrMemberAccess	result -> r_line_sh		2648275	0					
ANR	2648900	Identifier	result		2648275	0					
ANR	2648901	Identifier	r_line_sh		2648275	1					
ANR	2648902	Identifier	NULL		2648275	1					
ANR	2648903	ExpressionStatement	result -> a_line_sh = NULL	1640:6:44212:44236	2648275	1	True				
ANR	2648904	AssignmentExpression	result -> a_line_sh = NULL		2648275	0		=			
ANR	2648905	PtrMemberAccess	result -> a_line_sh		2648275	0					
ANR	2648906	Identifier	result		2648275	0					
ANR	2648907	Identifier	a_line_sh		2648275	1					
ANR	2648908	Identifier	NULL		2648275	1					
ANR	2648909	ExpressionStatement	result -> b_line_sh = NULL	1641:6:44244:44268	2648275	2	True				
ANR	2648910	AssignmentExpression	result -> b_line_sh = NULL		2648275	0		=			
ANR	2648911	PtrMemberAccess	result -> b_line_sh		2648275	0					
ANR	2648912	Identifier	result		2648275	0					
ANR	2648913	Identifier	b_line_sh		2648275	1					
ANR	2648914	Identifier	NULL		2648275	1					
ANR	2648915	ForStatement	for ( i = 0 ; i < dest_width ; i ++ )		2648275	34					
ANR	2648916	ForInit	i = 0 ;	1643:7:44283:44288	2648275	0	True				
ANR	2648917	AssignmentExpression	i = 0		2648275	0		=			
ANR	2648918	Identifier	i		2648275	0					
ANR	2648919	PrimaryExpression	0		2648275	1					
ANR	2648920	Condition	i < dest_width	1643:14:44290:44303	2648275	1	True				
ANR	2648921	RelationalExpression	i < dest_width		2648275	0		<			
ANR	2648922	Identifier	i		2648275	0					
ANR	2648923	Identifier	dest_width		2648275	1					
ANR	2648924	PostIncDecOperationExpression	i ++	1643:30:44306:44308	2648275	2	True				
ANR	2648925	Identifier	i		2648275	0					
ANR	2648926	IncDec	++		2648275	1					
ANR	2648927	CompoundStatement		106:4:3011:3011	2648275	3					
ANR	2648928	ExpressionStatement	result -> a_line [ i ] = 1	1645:6:44323:44344	2648275	0	True				
ANR	2648929	AssignmentExpression	result -> a_line [ i ] = 1		2648275	0		=			
ANR	2648930	ArrayIndexing	result -> a_line [ i ]		2648275	0					
ANR	2648931	PtrMemberAccess	result -> a_line		2648275	0					
ANR	2648932	Identifier	result		2648275	0					
ANR	2648933	Identifier	a_line		2648275	1					
ANR	2648934	Identifier	i		2648275	1					
ANR	2648935	PrimaryExpression	1		2648275	1					
ANR	2648936	ExpressionStatement	result -> b_line [ i ] = 1	1646:6:44352:44373	2648275	1	True				
ANR	2648937	AssignmentExpression	result -> b_line [ i ] = 1		2648275	0		=			
ANR	2648938	ArrayIndexing	result -> b_line [ i ]		2648275	0					
ANR	2648939	PtrMemberAccess	result -> b_line		2648275	0					
ANR	2648940	Identifier	result		2648275	0					
ANR	2648941	Identifier	b_line		2648275	1					
ANR	2648942	Identifier	i		2648275	1					
ANR	2648943	PrimaryExpression	1		2648275	1					
ANR	2648944	ExpressionStatement	result -> iir_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )	1647:6:44381:44450	2648275	2	True				
ANR	2648945	AssignmentExpression	result -> iir_line [ i ] = - ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )		2648275	0		=			
ANR	2648946	ArrayIndexing	result -> iir_line [ i ]		2648275	0					
ANR	2648947	PtrMemberAccess	result -> iir_line		2648275	0					
ANR	2648948	Identifier	result		2648275	0					
ANR	2648949	Identifier	iir_line		2648275	1					
ANR	2648950	Identifier	i		2648275	1					
ANR	2648951	ShiftExpression	- ( ( rand ( ) & 0x7fff ) << 6 ) >> ( 24 - EVEN_SHIFT )		2648275	1		>>			
ANR	2648952	UnaryOperationExpression	- ( ( rand ( ) & 0x7fff ) << 6 )		2648275	0					
ANR	2648953	UnaryOperator	-		2648275	0					
ANR	2648954	ShiftExpression	( rand ( ) & 0x7fff ) << 6		2648275	1		<<			
ANR	2648955	BitAndExpression	rand ( ) & 0x7fff		2648275	0		&			
ANR	2648956	CallExpression	rand ( )		2648275	0					
ANR	2648957	Callee	rand		2648275	0					
ANR	2648958	Identifier	rand		2648275	0					
ANR	2648959	ArgumentList			2648275	1					
ANR	2648960	PrimaryExpression	0x7fff		2648275	1					
ANR	2648961	PrimaryExpression	6		2648275	1					
ANR	2648962	AdditiveExpression	24 - EVEN_SHIFT		2648275	1		-			
ANR	2648963	PrimaryExpression	24		2648275	0					
ANR	2648964	Identifier	EVEN_SHIFT		2648275	1					
ANR	2648965	IfStatement	if ( do_shadows )		2648275	3					
ANR	2648966	Condition	do_shadows	1648:10:44462:44471	2648275	0	True				
ANR	2648967	Identifier	do_shadows		2648275	0					
ANR	2648968	CompoundStatement		111:8:3178:3178	2648275	1					
ANR	2648969	ExpressionStatement	result -> a_line_sh [ i ] = 1	1650:10:44494:44518	2648275	0	True				
ANR	2648970	AssignmentExpression	result -> a_line_sh [ i ] = 1		2648275	0		=			
ANR	2648971	ArrayIndexing	result -> a_line_sh [ i ]		2648275	0					
ANR	2648972	PtrMemberAccess	result -> a_line_sh		2648275	0					
ANR	2648973	Identifier	result		2648275	0					
ANR	2648974	Identifier	a_line_sh		2648275	1					
ANR	2648975	Identifier	i		2648275	1					
ANR	2648976	PrimaryExpression	1		2648275	1					
ANR	2648977	ExpressionStatement	result -> b_line_sh [ i ] = 1	1651:10:44530:44554	2648275	1	True				
ANR	2648978	AssignmentExpression	result -> b_line_sh [ i ] = 1		2648275	0		=			
ANR	2648979	ArrayIndexing	result -> b_line_sh [ i ]		2648275	0					
ANR	2648980	PtrMemberAccess	result -> b_line_sh		2648275	0					
ANR	2648981	Identifier	result		2648275	0					
ANR	2648982	Identifier	b_line_sh		2648275	1					
ANR	2648983	Identifier	i		2648275	1					
ANR	2648984	PrimaryExpression	1		2648275	1					
ANR	2648985	ReturnStatement	return result ;	1655:2:44575:44588	2648275	35	True				
ANR	2648986	Identifier	result		2648275	0					
ANR	2648987	ReturnType	static EBPlaneCtx *		2648275	1					
ANR	2648988	Identifier	even_better_plane_new		2648275	2					
ANR	2648989	ParameterList	"const EvenBetterParams * params , EvenBetterCtx * ebc , int plane_idx"		2648275	3					
ANR	2648990	Parameter	const EvenBetterParams * params	1537:23:41213:41242	2648275	0	True				
ANR	2648991	ParameterType	const EvenBetterParams *		2648275	0					
ANR	2648992	Identifier	params		2648275	1					
ANR	2648993	Parameter	EvenBetterCtx * ebc	1537:55:41245:41262	2648275	1	True				
ANR	2648994	ParameterType	EvenBetterCtx *		2648275	0					
ANR	2648995	Identifier	ebc		2648275	1					
ANR	2648996	Parameter	int plane_idx	1538:23:41288:41300	2648275	2	True				
ANR	2648997	ParameterType	int		2648275	0					
ANR	2648998	Identifier	plane_idx		2648275	1					
ANR	2648999	CFGEntryNode	ENTRY		2648275		True				
ANR	2649000	CFGExitNode	EXIT		2648275		True				
ANR	2649001	Symbol	even_c1		2648275						
ANR	2649002	Symbol	* rs_lut		2648275						
ANR	2649003	Symbol	rs_lut		2648275						
ANR	2649004	Symbol	* result -> b_line		2648275						
ANR	2649005	Symbol	ET_SRC_MAX		2648275						
ANR	2649006	Symbol	result -> source_width		2648275						
ANR	2649007	Symbol	lut		2648275						
ANR	2649008	Symbol	eb_compute_randshift		2648275						
ANR	2649009	Symbol	result -> a_line		2648275						
ANR	2649010	Symbol	* * params		2648275						
ANR	2649011	Symbol	result -> r_line_sh		2648275						
ANR	2649012	Symbol	rand		2648275						
ANR	2649013	Symbol	EVEN_SHIFT		2648275						
ANR	2649014	Symbol	* result -> iir_line		2648275						
ANR	2649015	Symbol	* result -> a_line		2648275						
ANR	2649016	Symbol	* new_lut		2648275						
ANR	2649017	Symbol	params -> dest_width		2648275						
ANR	2649018	Symbol	rs_base		2648275						
ANR	2649019	Symbol	NULL		2648275						
ANR	2649020	Symbol	* * result		2648275						
ANR	2649021	Symbol	params		2648275						
ANR	2649022	Symbol	eb_compute_rbscale		2648275						
ANR	2649023	Symbol	* ebc		2648275						
ANR	2649024	Symbol	rb		2648275						
ANR	2649025	Symbol	rb_sh		2648275						
ANR	2649026	Symbol	even_log2		2648275						
ANR	2649027	Symbol	result -> rs_lut		2648275						
ANR	2649028	Symbol	* plane_idx		2648275						
ANR	2649029	Symbol	result -> rb_lut		2648275						
ANR	2649030	Symbol	result -> white_count_line		2648275						
ANR	2649031	Symbol	log2_levels		2648275						
ANR	2649032	Symbol	result -> dest_width		2648275						
ANR	2649033	Symbol	params -> source_width		2648275						
ANR	2649034	Symbol	result -> r_line		2648275						
ANR	2649035	Symbol	result -> a_line_sh		2648275						
ANR	2649036	Symbol	nl		2648275						
ANR	2649037	Symbol	even_rlimit		2648275						
ANR	2649038	Symbol	rs		2648275						
ANR	2649039	Symbol	* params -> luts		2648275						
ANR	2649040	Symbol	params -> do_shadows		2648275						
ANR	2649041	Symbol	plane_idx		2648275						
ANR	2649042	Symbol	do_shadows		2648275						
ANR	2649043	Symbol	params -> rand_scale		2648275						
ANR	2649044	Symbol	calloc		2648275						
ANR	2649045	Symbol	result		2648275						
ANR	2649046	Symbol	result -> lut		2648275						
ANR	2649047	Symbol	* result		2648275						
ANR	2649048	Symbol	result -> rb_line		2648275						
ANR	2649049	Symbol	rbscale		2648275						
ANR	2649050	Symbol	* params		2648275						
ANR	2649051	Symbol	* result -> a_line_sh		2648275						
ANR	2649052	Symbol	malloc		2648275						
ANR	2649053	Symbol	* rb_lut		2648275						
ANR	2649054	Symbol	* result -> b_line_sh		2648275						
ANR	2649055	Symbol	rb_lut		2648275						
ANR	2649056	Symbol	ebc		2648275						
ANR	2649057	Symbol	source_width		2648275						
ANR	2649058	Symbol	result -> b_line_sh		2648275						
ANR	2649059	Symbol	params -> luts		2648275						
ANR	2649060	Symbol	i		2648275						
ANR	2649061	Symbol	nli		2648275						
ANR	2649062	Symbol	new_lut		2648275						
ANR	2649063	Symbol	dest_width		2648275						
ANR	2649064	Symbol	params -> levels		2648275						
ANR	2649065	Symbol	* i		2648275						
ANR	2649066	Symbol	* lut		2648275						
ANR	2649067	Symbol	result -> iir_line		2648275						
ANR	2649068	Symbol	result -> b_line		2648275						
ANR	2649069	Symbol	ebc -> even_c1		2648275						
ANR	2649070	Function	even_better_new	1658:0:44593:47783							
ANR	2649071	FunctionDef	even_better_new (const EvenBetterParams * params)		2649070	0					
ANR	2649072	CompoundStatement		1660:0:44658:47783	2649070	0					
ANR	2649073	IdentifierDeclStatement	EvenBetterCtx * result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) ) ;	1661:2:44662:44733	2649070	0	True				
ANR	2649074	IdentifierDecl	* result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		2649070	0					
ANR	2649075	IdentifierDeclType	EvenBetterCtx *		2649070	0					
ANR	2649076	Identifier	result		2649070	1					
ANR	2649077	AssignmentExpression	* result = ( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		2649070	2		=			
ANR	2649078	Identifier	result		2649070	0					
ANR	2649079	CastExpression	( EvenBetterCtx * ) malloc ( sizeof ( EvenBetterCtx ) )		2649070	1					
ANR	2649080	CastTarget	EvenBetterCtx *		2649070	0					
ANR	2649081	CallExpression	malloc ( sizeof ( EvenBetterCtx ) )		2649070	1					
ANR	2649082	Callee	malloc		2649070	0					
ANR	2649083	Identifier	malloc		2649070	0					
ANR	2649084	ArgumentList	sizeof ( EvenBetterCtx )		2649070	1					
ANR	2649085	Argument	sizeof ( EvenBetterCtx )		2649070	0					
ANR	2649086	SizeofExpression	sizeof ( EvenBetterCtx )		2649070	0					
ANR	2649087	Sizeof	sizeof		2649070	0					
ANR	2649088	SizeofOperand	EvenBetterCtx		2649070	1					
ANR	2649089	IdentifierDeclStatement	int n_planes = params -> n_planes ;	1662:2:44737:44768	2649070	1	True				
ANR	2649090	IdentifierDecl	n_planes = params -> n_planes		2649070	0					
ANR	2649091	IdentifierDeclType	int		2649070	0					
ANR	2649092	Identifier	n_planes		2649070	1					
ANR	2649093	AssignmentExpression	n_planes = params -> n_planes		2649070	2		=			
ANR	2649094	Identifier	n_planes		2649070	0					
ANR	2649095	PtrMemberAccess	params -> n_planes		2649070	1					
ANR	2649096	Identifier	params		2649070	0					
ANR	2649097	Identifier	n_planes		2649070	1					
ANR	2649098	IdentifierDeclStatement	int i ;	1663:2:44772:44777	2649070	2	True				
ANR	2649099	IdentifierDecl	i		2649070	0					
ANR	2649100	IdentifierDeclType	int		2649070	0					
ANR	2649101	Identifier	i		2649070	1					
ANR	2649102	IdentifierDeclStatement	"int log2_levels , log2_aspect ;"	1664:2:44781:44809	2649070	3	True				
ANR	2649103	IdentifierDecl	log2_levels		2649070	0					
ANR	2649104	IdentifierDeclType	int		2649070	0					
ANR	2649105	Identifier	log2_levels		2649070	1					
ANR	2649106	IdentifierDecl	log2_aspect		2649070	1					
ANR	2649107	IdentifierDeclType	int		2649070	0					
ANR	2649108	Identifier	log2_aspect		2649070	1					
ANR	2649109	IdentifierDeclStatement	int using_vectors = 0 ;	1665:2:44813:44834	2649070	4	True				
ANR	2649110	IdentifierDecl	using_vectors = 0		2649070	0					
ANR	2649111	IdentifierDeclType	int		2649070	0					
ANR	2649112	Identifier	using_vectors		2649070	1					
ANR	2649113	AssignmentExpression	using_vectors = 0		2649070	2		=			
ANR	2649114	Identifier	using_vectors		2649070	0					
ANR	2649115	PrimaryExpression	0		2649070	1					
ANR	2649116	IfStatement	if ( params -> dump_file )		2649070	5					
ANR	2649117	Condition	params -> dump_file	1667:6:44843:44859	2649070	0	True				
ANR	2649118	PtrMemberAccess	params -> dump_file		2649070	0					
ANR	2649119	Identifier	params		2649070	0					
ANR	2649120	Identifier	dump_file		2649070	1					
ANR	2649121	CompoundStatement		10:6:215:228	2649070	1					
ANR	2649122	IdentifierDeclStatement	int header [ 5 ] ;	1669:6:44874:44887	2649070	0	True				
ANR	2649123	IdentifierDecl	header [ 5 ]		2649070	0					
ANR	2649124	IdentifierDeclType	int [ 5 ]		2649070	0					
ANR	2649125	Identifier	header		2649070	1					
ANR	2649126	PrimaryExpression	5		2649070	2					
ANR	2649127	ExpressionStatement	header [ 0 ] = 0x70644245	1671:6:44896:44918	2649070	1	True				
ANR	2649128	AssignmentExpression	header [ 0 ] = 0x70644245		2649070	0		=			
ANR	2649129	ArrayIndexing	header [ 0 ]		2649070	0					
ANR	2649130	Identifier	header		2649070	0					
ANR	2649131	PrimaryExpression	0		2649070	1					
ANR	2649132	PrimaryExpression	0x70644245		2649070	1					
ANR	2649133	ExpressionStatement	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101	1672:6:44926:44967	2649070	2	True				
ANR	2649134	AssignmentExpression	header [ 1 ] = 'M' * 0x1010000 + 'I' * 0x101		2649070	0		=			
ANR	2649135	ArrayIndexing	header [ 1 ]		2649070	0					
ANR	2649136	Identifier	header		2649070	0					
ANR	2649137	PrimaryExpression	1		2649070	1					
ANR	2649138	AdditiveExpression	'M' * 0x1010000 + 'I' * 0x101		2649070	1		+			
ANR	2649139	MultiplicativeExpression	'M' * 0x1010000		2649070	0		*			
ANR	2649140	PrimaryExpression	'M'		2649070	0					
ANR	2649141	PrimaryExpression	0x1010000		2649070	1					
ANR	2649142	MultiplicativeExpression	'I' * 0x101		2649070	1		*			
ANR	2649143	PrimaryExpression	'I'		2649070	0					
ANR	2649144	PrimaryExpression	0x101		2649070	1					
ANR	2649145	ExpressionStatement	header [ 2 ] = EVENBETTER_VERSION	1673:6:44975:45005	2649070	3	True				
ANR	2649146	AssignmentExpression	header [ 2 ] = EVENBETTER_VERSION		2649070	0		=			
ANR	2649147	ArrayIndexing	header [ 2 ]		2649070	0					
ANR	2649148	Identifier	header		2649070	0					
ANR	2649149	PrimaryExpression	2		2649070	1					
ANR	2649150	Identifier	EVENBETTER_VERSION		2649070	1					
ANR	2649151	ExpressionStatement	header [ 3 ] = ET_SRC_MAX	1674:6:45013:45035	2649070	4	True				
ANR	2649152	AssignmentExpression	header [ 3 ] = ET_SRC_MAX		2649070	0		=			
ANR	2649153	ArrayIndexing	header [ 3 ]		2649070	0					
ANR	2649154	Identifier	header		2649070	0					
ANR	2649155	PrimaryExpression	3		2649070	1					
ANR	2649156	Identifier	ET_SRC_MAX		2649070	1					
ANR	2649157	ExpressionStatement	header [ 4 ] = sizeof ( ET_SrcPixel )	1675:6:45043:45074	2649070	5	True				
ANR	2649158	AssignmentExpression	header [ 4 ] = sizeof ( ET_SrcPixel )		2649070	0		=			
ANR	2649159	ArrayIndexing	header [ 4 ]		2649070	0					
ANR	2649160	Identifier	header		2649070	0					
ANR	2649161	PrimaryExpression	4		2649070	1					
ANR	2649162	SizeofExpression	sizeof ( ET_SrcPixel )		2649070	1					
ANR	2649163	Sizeof	sizeof		2649070	0					
ANR	2649164	SizeofOperand	ET_SrcPixel		2649070	1					
ANR	2649165	ExpressionStatement	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"	1676:6:45082:45179	2649070	6	True				
ANR	2649166	CallExpression	"fwrite ( header , sizeof ( int ) , sizeof ( header ) / sizeof ( header [ 0 ] ) , params -> dump_file )"		2649070	0					
ANR	2649167	Callee	fwrite		2649070	0					
ANR	2649168	Identifier	fwrite		2649070	0					
ANR	2649169	ArgumentList	header		2649070	1					
ANR	2649170	Argument	header		2649070	0					
ANR	2649171	Identifier	header		2649070	0					
ANR	2649172	Argument	sizeof ( int )		2649070	1					
ANR	2649173	SizeofExpression	sizeof ( int )		2649070	0					
ANR	2649174	Sizeof	sizeof		2649070	0					
ANR	2649175	SizeofOperand	int		2649070	1					
ANR	2649176	Argument	sizeof ( header ) / sizeof ( header [ 0 ] )		2649070	2					
ANR	2649177	MultiplicativeExpression	sizeof ( header ) / sizeof ( header [ 0 ] )		2649070	0		/			
ANR	2649178	SizeofExpression	sizeof ( header )		2649070	0					
ANR	2649179	Sizeof	sizeof		2649070	0					
ANR	2649180	SizeofOperand	header		2649070	1					
ANR	2649181	SizeofExpression	sizeof ( header [ 0 ] )		2649070	1					
ANR	2649182	Sizeof	sizeof		2649070	0					
ANR	2649183	ArrayIndexing	header [ 0 ]		2649070	1					
ANR	2649184	Identifier	header		2649070	0					
ANR	2649185	PrimaryExpression	0		2649070	1					
ANR	2649186	Argument	params -> dump_file		2649070	3					
ANR	2649187	PtrMemberAccess	params -> dump_file		2649070	0					
ANR	2649188	Identifier	params		2649070	0					
ANR	2649189	Identifier	dump_file		2649070	1					
ANR	2649190	IfStatement	if ( params -> dump_level >= EB_DUMP_PARAMS )		2649070	7					
ANR	2649191	Condition	params -> dump_level >= EB_DUMP_PARAMS	1678:10:45191:45226	2649070	0	True				
ANR	2649192	RelationalExpression	params -> dump_level >= EB_DUMP_PARAMS		2649070	0		>=			
ANR	2649193	PtrMemberAccess	params -> dump_level		2649070	0					
ANR	2649194	Identifier	params		2649070	0					
ANR	2649195	Identifier	dump_level		2649070	1					
ANR	2649196	Identifier	EB_DUMP_PARAMS		2649070	1					
ANR	2649197	CompoundStatement		20:8:578:578	2649070	1					
ANR	2649198	ExpressionStatement	"fwrite ( params , 1 , sizeof ( EvenBetterParams ) , params -> dump_file )"	1681:10:45250:45313	2649070	0	True				
ANR	2649199	CallExpression	"fwrite ( params , 1 , sizeof ( EvenBetterParams ) , params -> dump_file )"		2649070	0					
ANR	2649200	Callee	fwrite		2649070	0					
ANR	2649201	Identifier	fwrite		2649070	0					
ANR	2649202	ArgumentList	params		2649070	1					
ANR	2649203	Argument	params		2649070	0					
ANR	2649204	Identifier	params		2649070	0					
ANR	2649205	Argument	1		2649070	1					
ANR	2649206	PrimaryExpression	1		2649070	0					
ANR	2649207	Argument	sizeof ( EvenBetterParams )		2649070	2					
ANR	2649208	SizeofExpression	sizeof ( EvenBetterParams )		2649070	0					
ANR	2649209	Sizeof	sizeof		2649070	0					
ANR	2649210	SizeofOperand	EvenBetterParams		2649070	1					
ANR	2649211	Argument	params -> dump_file		2649070	3					
ANR	2649212	PtrMemberAccess	params -> dump_file		2649070	0					
ANR	2649213	Identifier	params		2649070	0					
ANR	2649214	Identifier	dump_file		2649070	1					
ANR	2649215	IfStatement	if ( params -> dump_level >= EB_DUMP_LUTS )		2649070	8					
ANR	2649216	Condition	params -> dump_level >= EB_DUMP_LUTS	1683:10:45335:45368	2649070	0	True				
ANR	2649217	RelationalExpression	params -> dump_level >= EB_DUMP_LUTS		2649070	0		>=			
ANR	2649218	PtrMemberAccess	params -> dump_level		2649070	0					
ANR	2649219	Identifier	params		2649070	0					
ANR	2649220	Identifier	dump_level		2649070	1					
ANR	2649221	Identifier	EB_DUMP_LUTS		2649070	1					
ANR	2649222	CompoundStatement		26:10:732:737	2649070	1					
ANR	2649223	IdentifierDeclStatement	int i ;	1685:10:45391:45396	2649070	0	True				
ANR	2649224	IdentifierDecl	i		2649070	0					
ANR	2649225	IdentifierDeclType	int		2649070	0					
ANR	2649226	Identifier	i		2649070	1					
ANR	2649227	ForStatement	for ( i = 0 ; i < params -> n_planes ; i ++ )		2649070	1					
ANR	2649228	ForInit	i = 0 ;	1686:15:45413:45418	2649070	0	True				
ANR	2649229	AssignmentExpression	i = 0		2649070	0		=			
ANR	2649230	Identifier	i		2649070	0					
ANR	2649231	PrimaryExpression	0		2649070	1					
ANR	2649232	Condition	i < params -> n_planes	1686:22:45420:45439	2649070	1	True				
ANR	2649233	RelationalExpression	i < params -> n_planes		2649070	0		<			
ANR	2649234	Identifier	i		2649070	0					
ANR	2649235	PtrMemberAccess	params -> n_planes		2649070	1					
ANR	2649236	Identifier	params		2649070	0					
ANR	2649237	Identifier	n_planes		2649070	1					
ANR	2649238	PostIncDecOperationExpression	i ++	1686:44:45442:45444	2649070	2	True				
ANR	2649239	Identifier	i		2649070	0					
ANR	2649240	IncDec	++		2649070	1					
ANR	2649241	ExpressionStatement	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ET_SRC_MAX + 1 , params -> dump_file )"	1687:12:45459:45551	2649070	3	True				
ANR	2649242	CallExpression	"fwrite ( params -> luts [ i ] , sizeof ( int ) , ET_SRC_MAX + 1 , params -> dump_file )"		2649070	0					
ANR	2649243	Callee	fwrite		2649070	0					
ANR	2649244	Identifier	fwrite		2649070	0					
ANR	2649245	ArgumentList	params -> luts [ i ]		2649070	1					
ANR	2649246	Argument	params -> luts [ i ]		2649070	0					
ANR	2649247	ArrayIndexing	params -> luts [ i ]		2649070	0					
ANR	2649248	PtrMemberAccess	params -> luts		2649070	0					
ANR	2649249	Identifier	params		2649070	0					
ANR	2649250	Identifier	luts		2649070	1					
ANR	2649251	Identifier	i		2649070	1					
ANR	2649252	Argument	sizeof ( int )		2649070	1					
ANR	2649253	SizeofExpression	sizeof ( int )		2649070	0					
ANR	2649254	Sizeof	sizeof		2649070	0					
ANR	2649255	SizeofOperand	int		2649070	1					
ANR	2649256	Argument	ET_SRC_MAX + 1		2649070	2					
ANR	2649257	AdditiveExpression	ET_SRC_MAX + 1		2649070	0		+			
ANR	2649258	Identifier	ET_SRC_MAX		2649070	0					
ANR	2649259	PrimaryExpression	1		2649070	1					
ANR	2649260	Argument	params -> dump_file		2649070	3					
ANR	2649261	PtrMemberAccess	params -> dump_file		2649070	0					
ANR	2649262	Identifier	params		2649070	0					
ANR	2649263	Identifier	dump_file		2649070	1					
ANR	2649264	ExpressionStatement	result -> source_width = params -> source_width	1692:2:45572:45615	2649070	6	True				
ANR	2649265	AssignmentExpression	result -> source_width = params -> source_width		2649070	0		=			
ANR	2649266	PtrMemberAccess	result -> source_width		2649070	0					
ANR	2649267	Identifier	result		2649070	0					
ANR	2649268	Identifier	source_width		2649070	1					
ANR	2649269	PtrMemberAccess	params -> source_width		2649070	1					
ANR	2649270	Identifier	params		2649070	0					
ANR	2649271	Identifier	source_width		2649070	1					
ANR	2649272	ExpressionStatement	result -> dest_width = params -> dest_width	1693:2:45619:45658	2649070	7	True				
ANR	2649273	AssignmentExpression	result -> dest_width = params -> dest_width		2649070	0		=			
ANR	2649274	PtrMemberAccess	result -> dest_width		2649070	0					
ANR	2649275	Identifier	result		2649070	0					
ANR	2649276	Identifier	dest_width		2649070	1					
ANR	2649277	PtrMemberAccess	params -> dest_width		2649070	1					
ANR	2649278	Identifier	params		2649070	0					
ANR	2649279	Identifier	dest_width		2649070	1					
ANR	2649280	ExpressionStatement	result -> n_planes = n_planes	1694:2:45662:45689	2649070	8	True				
ANR	2649281	AssignmentExpression	result -> n_planes = n_planes		2649070	0		=			
ANR	2649282	PtrMemberAccess	result -> n_planes		2649070	0					
ANR	2649283	Identifier	result		2649070	0					
ANR	2649284	Identifier	n_planes		2649070	1					
ANR	2649285	Identifier	n_planes		2649070	1					
ANR	2649286	ExpressionStatement	result -> levels = params -> levels	1695:2:45693:45724	2649070	9	True				
ANR	2649287	AssignmentExpression	result -> levels = params -> levels		2649070	0		=			
ANR	2649288	PtrMemberAccess	result -> levels		2649070	0					
ANR	2649289	Identifier	result		2649070	0					
ANR	2649290	Identifier	levels		2649070	1					
ANR	2649291	PtrMemberAccess	params -> levels		2649070	1					
ANR	2649292	Identifier	params		2649070	0					
ANR	2649293	Identifier	levels		2649070	1					
ANR	2649294	ExpressionStatement	result -> aspect = params -> aspect	1697:2:45729:45760	2649070	10	True				
ANR	2649295	AssignmentExpression	result -> aspect = params -> aspect		2649070	0		=			
ANR	2649296	PtrMemberAccess	result -> aspect		2649070	0					
ANR	2649297	Identifier	result		2649070	0					
ANR	2649298	Identifier	aspect		2649070	1					
ANR	2649299	PtrMemberAccess	params -> aspect		2649070	1					
ANR	2649300	Identifier	params		2649070	0					
ANR	2649301	Identifier	aspect		2649070	1					
ANR	2649302	ExpressionStatement	result -> even_ehi = 0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )	1699:2:45765:45830	2649070	11	True				
ANR	2649303	AssignmentExpression	result -> even_ehi = 0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		2649070	0		=			
ANR	2649304	PtrMemberAccess	result -> even_ehi		2649070	0					
ANR	2649305	Identifier	result		2649070	0					
ANR	2649306	Identifier	even_ehi		2649070	1					
ANR	2649307	MultiplicativeExpression	0.6 * ( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		2649070	1		*			
ANR	2649308	PrimaryExpression	0.6		2649070	0					
ANR	2649309	MultiplicativeExpression	( 1 << EVEN_SHIFT ) / ( params -> levels - 1 )		2649070	1		/			
ANR	2649310	ShiftExpression	1 << EVEN_SHIFT		2649070	0		<<			
ANR	2649311	PrimaryExpression	1		2649070	0					
ANR	2649312	Identifier	EVEN_SHIFT		2649070	1					
ANR	2649313	AdditiveExpression	params -> levels - 1		2649070	1		-			
ANR	2649314	PtrMemberAccess	params -> levels		2649070	0					
ANR	2649315	Identifier	params		2649070	0					
ANR	2649316	Identifier	levels		2649070	1					
ANR	2649317	PrimaryExpression	1		2649070	1					
ANR	2649318	ExpressionStatement	result -> even_elo = - result -> even_ehi	1700:2:45834:45870	2649070	12	True				
ANR	2649319	AssignmentExpression	result -> even_elo = - result -> even_ehi		2649070	0		=			
ANR	2649320	PtrMemberAccess	result -> even_elo		2649070	0					
ANR	2649321	Identifier	result		2649070	0					
ANR	2649322	Identifier	even_elo		2649070	1					
ANR	2649323	UnaryOperationExpression	- result -> even_ehi		2649070	1					
ANR	2649324	UnaryOperator	-		2649070	0					
ANR	2649325	PtrMemberAccess	result -> even_ehi		2649070	1					
ANR	2649326	Identifier	result		2649070	0					
ANR	2649327	Identifier	even_ehi		2649070	1					
ANR	2649328	ExpressionStatement	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )	1702:2:45875:45933	2649070	13	True				
ANR	2649329	AssignmentExpression	result -> strengths = ( int * ) malloc ( sizeof ( int ) * n_planes )		2649070	0		=			
ANR	2649330	PtrMemberAccess	result -> strengths		2649070	0					
ANR	2649331	Identifier	result		2649070	0					
ANR	2649332	Identifier	strengths		2649070	1					
ANR	2649333	CastExpression	( int * ) malloc ( sizeof ( int ) * n_planes )		2649070	1					
ANR	2649334	CastTarget	int *		2649070	0					
ANR	2649335	CallExpression	malloc ( sizeof ( int ) * n_planes )		2649070	1					
ANR	2649336	Callee	malloc		2649070	0					
ANR	2649337	Identifier	malloc		2649070	0					
ANR	2649338	ArgumentList	sizeof ( int ) * n_planes		2649070	1					
ANR	2649339	Argument	sizeof ( int ) * n_planes		2649070	0					
ANR	2649340	MultiplicativeExpression	sizeof ( int ) * n_planes		2649070	0		*			
ANR	2649341	SizeofExpression	sizeof ( int )		2649070	0					
ANR	2649342	Sizeof	sizeof		2649070	0					
ANR	2649343	SizeofOperand	int		2649070	1					
ANR	2649344	Identifier	n_planes		2649070	1					
ANR	2649345	ExpressionStatement	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"	1703:2:45937:46016	2649070	14	True				
ANR	2649346	CallExpression	"memcpy ( result -> strengths , params -> strengths , sizeof ( int ) * n_planes )"		2649070	0					
ANR	2649347	Callee	memcpy		2649070	0					
ANR	2649348	Identifier	memcpy		2649070	0					
ANR	2649349	ArgumentList	result -> strengths		2649070	1					
ANR	2649350	Argument	result -> strengths		2649070	0					
ANR	2649351	PtrMemberAccess	result -> strengths		2649070	0					
ANR	2649352	Identifier	result		2649070	0					
ANR	2649353	Identifier	strengths		2649070	1					
ANR	2649354	Argument	params -> strengths		2649070	1					
ANR	2649355	PtrMemberAccess	params -> strengths		2649070	0					
ANR	2649356	Identifier	params		2649070	0					
ANR	2649357	Identifier	strengths		2649070	1					
ANR	2649358	Argument	sizeof ( int ) * n_planes		2649070	2					
ANR	2649359	MultiplicativeExpression	sizeof ( int ) * n_planes		2649070	0		*			
ANR	2649360	SizeofExpression	sizeof ( int )		2649070	0					
ANR	2649361	Sizeof	sizeof		2649070	0					
ANR	2649362	SizeofOperand	int		2649070	1					
ANR	2649363	Identifier	n_planes		2649070	1					
ANR	2649364	ExpressionStatement	log2_levels = even_log2 ( params -> levels )	1706:2:46021:46061	2649070	15	True				
ANR	2649365	AssignmentExpression	log2_levels = even_log2 ( params -> levels )		2649070	0		=			
ANR	2649366	Identifier	log2_levels		2649070	0					
ANR	2649367	CallExpression	even_log2 ( params -> levels )		2649070	1					
ANR	2649368	Callee	even_log2		2649070	0					
ANR	2649369	Identifier	even_log2		2649070	0					
ANR	2649370	ArgumentList	params -> levels		2649070	1					
ANR	2649371	Argument	params -> levels		2649070	0					
ANR	2649372	PtrMemberAccess	params -> levels		2649070	0					
ANR	2649373	Identifier	params		2649070	0					
ANR	2649374	Identifier	levels		2649070	1					
ANR	2649375	ExpressionStatement	log2_aspect = even_log2 ( params -> aspect )	1707:2:46065:46105	2649070	16	True				
ANR	2649376	AssignmentExpression	log2_aspect = even_log2 ( params -> aspect )		2649070	0		=			
ANR	2649377	Identifier	log2_aspect		2649070	0					
ANR	2649378	CallExpression	even_log2 ( params -> aspect )		2649070	1					
ANR	2649379	Callee	even_log2		2649070	0					
ANR	2649380	Identifier	even_log2		2649070	0					
ANR	2649381	ArgumentList	params -> aspect		2649070	1					
ANR	2649382	Argument	params -> aspect		2649070	0					
ANR	2649383	PtrMemberAccess	params -> aspect		2649070	0					
ANR	2649384	Identifier	params		2649070	0					
ANR	2649385	Identifier	aspect		2649070	1					
ANR	2649386	ExpressionStatement	result -> even_c1 = 6 + log2_aspect + log2_levels - params -> even_c1_scale	1708:2:46109:46180	2649070	17	True				
ANR	2649387	AssignmentExpression	result -> even_c1 = 6 + log2_aspect + log2_levels - params -> even_c1_scale		2649070	0		=			
ANR	2649388	PtrMemberAccess	result -> even_c1		2649070	0					
ANR	2649389	Identifier	result		2649070	0					
ANR	2649390	Identifier	even_c1		2649070	1					
ANR	2649391	AdditiveExpression	6 + log2_aspect + log2_levels - params -> even_c1_scale		2649070	1		+			
ANR	2649392	PrimaryExpression	6		2649070	0					
ANR	2649393	AdditiveExpression	log2_aspect + log2_levels - params -> even_c1_scale		2649070	1		+			
ANR	2649394	Identifier	log2_aspect		2649070	0					
ANR	2649395	AdditiveExpression	log2_levels - params -> even_c1_scale		2649070	1		-			
ANR	2649396	Identifier	log2_levels		2649070	0					
ANR	2649397	PtrMemberAccess	params -> even_c1_scale		2649070	1					
ANR	2649398	Identifier	params		2649070	0					
ANR	2649399	Identifier	even_c1_scale		2649070	1					
ANR	2649400	ExpressionStatement	result -> do_shadows = params -> do_shadows	1709:2:46184:46223	2649070	18	True				
ANR	2649401	AssignmentExpression	result -> do_shadows = params -> do_shadows		2649070	0		=			
ANR	2649402	PtrMemberAccess	result -> do_shadows		2649070	0					
ANR	2649403	Identifier	result		2649070	0					
ANR	2649404	Identifier	do_shadows		2649070	1					
ANR	2649405	PtrMemberAccess	params -> do_shadows		2649070	1					
ANR	2649406	Identifier	params		2649070	0					
ANR	2649407	Identifier	do_shadows		2649070	1					
ANR	2649408	ExpressionStatement	"result -> c_line = ( int * ) calloc ( params -> dest_width , sizeof ( int ) )"	1711:2:46228:46292	2649070	19	True				
ANR	2649409	AssignmentExpression	"result -> c_line = ( int * ) calloc ( params -> dest_width , sizeof ( int ) )"		2649070	0		=			
ANR	2649410	PtrMemberAccess	result -> c_line		2649070	0					
ANR	2649411	Identifier	result		2649070	0					
ANR	2649412	Identifier	c_line		2649070	1					
ANR	2649413	CastExpression	"( int * ) calloc ( params -> dest_width , sizeof ( int ) )"		2649070	1					
ANR	2649414	CastTarget	int *		2649070	0					
ANR	2649415	CallExpression	"calloc ( params -> dest_width , sizeof ( int ) )"		2649070	1					
ANR	2649416	Callee	calloc		2649070	0					
ANR	2649417	Identifier	calloc		2649070	0					
ANR	2649418	ArgumentList	params -> dest_width		2649070	1					
ANR	2649419	Argument	params -> dest_width		2649070	0					
ANR	2649420	PtrMemberAccess	params -> dest_width		2649070	0					
ANR	2649421	Identifier	params		2649070	0					
ANR	2649422	Identifier	dest_width		2649070	1					
ANR	2649423	Argument	sizeof ( int )		2649070	1					
ANR	2649424	SizeofExpression	sizeof ( int )		2649070	0					
ANR	2649425	Sizeof	sizeof		2649070	0					
ANR	2649426	SizeofOperand	int		2649070	1					
ANR	2649427	ExpressionStatement	result -> seed1 = 0x5324879f	1713:2:46297:46323	2649070	20	True				
ANR	2649428	AssignmentExpression	result -> seed1 = 0x5324879f		2649070	0		=			
ANR	2649429	PtrMemberAccess	result -> seed1		2649070	0					
ANR	2649430	Identifier	result		2649070	0					
ANR	2649431	Identifier	seed1		2649070	1					
ANR	2649432	PrimaryExpression	0x5324879f		2649070	1					
ANR	2649433	ExpressionStatement	result -> seed2 = 0xb78d0945	1714:2:46327:46353	2649070	21	True				
ANR	2649434	AssignmentExpression	result -> seed2 = 0xb78d0945		2649070	0		=			
ANR	2649435	PtrMemberAccess	result -> seed2		2649070	0					
ANR	2649436	Identifier	result		2649070	0					
ANR	2649437	Identifier	seed2		2649070	1					
ANR	2649438	PrimaryExpression	0xb78d0945		2649070	1					
ANR	2649439	ExpressionStatement	result -> dump_file = params -> dump_file	1716:2:46358:46395	2649070	22	True				
ANR	2649440	AssignmentExpression	result -> dump_file = params -> dump_file		2649070	0		=			
ANR	2649441	PtrMemberAccess	result -> dump_file		2649070	0					
ANR	2649442	Identifier	result		2649070	0					
ANR	2649443	Identifier	dump_file		2649070	1					
ANR	2649444	PtrMemberAccess	params -> dump_file		2649070	1					
ANR	2649445	Identifier	params		2649070	0					
ANR	2649446	Identifier	dump_file		2649070	1					
ANR	2649447	ExpressionStatement	result -> dump_level = params -> dump_level	1717:2:46399:46438	2649070	23	True				
ANR	2649448	AssignmentExpression	result -> dump_level = params -> dump_level		2649070	0		=			
ANR	2649449	PtrMemberAccess	result -> dump_level		2649070	0					
ANR	2649450	Identifier	result		2649070	0					
ANR	2649451	Identifier	dump_level		2649070	1					
ANR	2649452	PtrMemberAccess	params -> dump_level		2649070	1					
ANR	2649453	Identifier	params		2649070	0					
ANR	2649454	Identifier	dump_level		2649070	1					
ANR	2649455	ExpressionStatement	using_vectors = eb_test_sse2 ( )	1720:2:46459:46489	2649070	24	True				
ANR	2649456	AssignmentExpression	using_vectors = eb_test_sse2 ( )		2649070	0		=			
ANR	2649457	Identifier	using_vectors		2649070	0					
ANR	2649458	CallExpression	eb_test_sse2 ( )		2649070	1					
ANR	2649459	Callee	eb_test_sse2		2649070	0					
ANR	2649460	Identifier	eb_test_sse2		2649070	0					
ANR	2649461	ArgumentList			2649070	1					
ANR	2649462	ExpressionStatement	using_vectors = 1	1723:2:46516:46533	2649070	25	True				
ANR	2649463	AssignmentExpression	using_vectors = 1		2649070	0		=			
ANR	2649464	Identifier	using_vectors		2649070	0					
ANR	2649465	PrimaryExpression	1		2649070	1					
ANR	2649466	IfStatement	if ( sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0 )		2649070	26					
ANR	2649467	Condition	sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0	1726:6:46594:46656	2649070	0	True				
ANR	2649468	AndExpression	sizeof ( ET_SrcPixel ) == 1 && using_vectors && params -> gamma != 0		2649070	0		&&			
ANR	2649469	EqualityExpression	sizeof ( ET_SrcPixel ) == 1		2649070	0		==			
ANR	2649470	SizeofExpression	sizeof ( ET_SrcPixel )		2649070	0					
ANR	2649471	Sizeof	sizeof		2649070	0					
ANR	2649472	SizeofOperand	ET_SrcPixel		2649070	1					
ANR	2649473	PrimaryExpression	1		2649070	1					
ANR	2649474	AndExpression	using_vectors && params -> gamma != 0		2649070	1		&&			
ANR	2649475	Identifier	using_vectors		2649070	0					
ANR	2649476	EqualityExpression	params -> gamma != 0		2649070	1		!=			
ANR	2649477	PtrMemberAccess	params -> gamma		2649070	0					
ANR	2649478	Identifier	params		2649070	0					
ANR	2649479	Identifier	gamma		2649070	1					
ANR	2649480	PrimaryExpression	0		2649070	1					
ANR	2649481	ExpressionStatement	using_vectors = 2	1727:4:46663:46680	2649070	1	True				
ANR	2649482	AssignmentExpression	using_vectors = 2		2649070	0		=			
ANR	2649483	Identifier	using_vectors		2649070	0					
ANR	2649484	PrimaryExpression	2		2649070	1					
ANR	2649485	ExpressionStatement	result -> using_vectors = using_vectors	1732:2:46711:46748	2649070	27	True				
ANR	2649486	AssignmentExpression	result -> using_vectors = using_vectors		2649070	0		=			
ANR	2649487	PtrMemberAccess	result -> using_vectors		2649070	0					
ANR	2649488	Identifier	result		2649070	0					
ANR	2649489	Identifier	using_vectors		2649070	1					
ANR	2649490	Identifier	using_vectors		2649070	1					
ANR	2649491	IfStatement	if ( using_vectors )		2649070	28					
ANR	2649492	Condition	using_vectors	1734:6:46763:46775	2649070	0	True				
ANR	2649493	Identifier	using_vectors		2649070	0					
ANR	2649494	CompoundStatement		76:4:2123:2123	2649070	1					
ANR	2649495	ExpressionStatement	result -> sse2_ctx = ( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )	1737:6:46806:46942	2649070	0	True				
ANR	2649496	AssignmentExpression	result -> sse2_ctx = ( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	0		=			
ANR	2649497	PtrMemberAccess	result -> sse2_ctx		2649070	0					
ANR	2649498	Identifier	result		2649070	0					
ANR	2649499	Identifier	sse2_ctx		2649070	1					
ANR	2649500	CastExpression	( eb_ctx_sse2 * * ) malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	1					
ANR	2649501	CastTarget	eb_ctx_sse2 * *		2649070	0					
ANR	2649502	CallExpression	malloc ( sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	1					
ANR	2649503	Callee	malloc		2649070	0					
ANR	2649504	Identifier	malloc		2649070	0					
ANR	2649505	ArgumentList	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		2649070	1					
ANR	2649506	Argument	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		2649070	0					
ANR	2649507	MultiplicativeExpression	sizeof ( eb_ctx_sse2 * ) * ( ( n_planes + 3 ) >> 2 )		2649070	0		*			
ANR	2649508	SizeofExpression	sizeof ( eb_ctx_sse2 * )		2649070	0					
ANR	2649509	Sizeof	sizeof		2649070	0					
ANR	2649510	SizeofOperand	eb_ctx_sse2 *		2649070	1					
ANR	2649511	ShiftExpression	( n_planes + 3 ) >> 2		2649070	1		>>			
ANR	2649512	AdditiveExpression	n_planes + 3		2649070	0		+			
ANR	2649513	Identifier	n_planes		2649070	0					
ANR	2649514	PrimaryExpression	3		2649070	1					
ANR	2649515	PrimaryExpression	2		2649070	1					
ANR	2649516	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		2649070	1					
ANR	2649517	ForInit	i = 0 ;	1739:11:46955:46960	2649070	0	True				
ANR	2649518	AssignmentExpression	i = 0		2649070	0		=			
ANR	2649519	Identifier	i		2649070	0					
ANR	2649520	PrimaryExpression	0		2649070	1					
ANR	2649521	Condition	i < n_planes	1739:18:46962:46973	2649070	1	True				
ANR	2649522	RelationalExpression	i < n_planes		2649070	0		<			
ANR	2649523	Identifier	i		2649070	0					
ANR	2649524	Identifier	n_planes		2649070	1					
ANR	2649525	AssignmentExpression	i += 4	1739:32:46976:46981	2649070	2	True	+=			
ANR	2649526	Identifier	i		2649070	0					
ANR	2649527	PrimaryExpression	4		2649070	1					
ANR	2649528	CompoundStatement		82:10:2345:2396	2649070	3					
ANR	2649529	IdentifierDeclStatement	int end_plane = i + 4 < n_planes ? i + 4 : n_planes ;	1741:10:47004:47055	2649070	0	True				
ANR	2649530	IdentifierDecl	end_plane = i + 4 < n_planes ? i + 4 : n_planes		2649070	0					
ANR	2649531	IdentifierDeclType	int		2649070	0					
ANR	2649532	Identifier	end_plane		2649070	1					
ANR	2649533	AssignmentExpression	end_plane = i + 4 < n_planes ? i + 4 : n_planes		2649070	2		=			
ANR	2649534	Identifier	end_plane		2649070	0					
ANR	2649535	ConditionalExpression	i + 4 < n_planes ? i + 4 : n_planes		2649070	1					
ANR	2649536	Condition	i + 4 < n_planes		2649070	0					
ANR	2649537	RelationalExpression	i + 4 < n_planes		2649070	0		<			
ANR	2649538	AdditiveExpression	i + 4		2649070	0		+			
ANR	2649539	Identifier	i		2649070	0					
ANR	2649540	PrimaryExpression	4		2649070	1					
ANR	2649541	Identifier	n_planes		2649070	1					
ANR	2649542	AdditiveExpression	i + 4		2649070	1		+			
ANR	2649543	Identifier	i		2649070	0					
ANR	2649544	PrimaryExpression	4		2649070	1					
ANR	2649545	Identifier	n_planes		2649070	2					
ANR	2649546	ExpressionStatement	"result -> sse2_ctx [ i >> 2 ] = eb_ctx_sse2_new ( params , i , end_plane )"	1742:10:47067:47131	2649070	1	True				
ANR	2649547	AssignmentExpression	"result -> sse2_ctx [ i >> 2 ] = eb_ctx_sse2_new ( params , i , end_plane )"		2649070	0		=			
ANR	2649548	ArrayIndexing	result -> sse2_ctx [ i >> 2 ]		2649070	0					
ANR	2649549	PtrMemberAccess	result -> sse2_ctx		2649070	0					
ANR	2649550	Identifier	result		2649070	0					
ANR	2649551	Identifier	sse2_ctx		2649070	1					
ANR	2649552	ShiftExpression	i >> 2		2649070	1		>>			
ANR	2649553	Identifier	i		2649070	0					
ANR	2649554	PrimaryExpression	2		2649070	1					
ANR	2649555	CallExpression	"eb_ctx_sse2_new ( params , i , end_plane )"		2649070	1					
ANR	2649556	Callee	eb_ctx_sse2_new		2649070	0					
ANR	2649557	Identifier	eb_ctx_sse2_new		2649070	0					
ANR	2649558	ArgumentList	params		2649070	1					
ANR	2649559	Argument	params		2649070	0					
ANR	2649560	Identifier	params		2649070	0					
ANR	2649561	Argument	i		2649070	1					
ANR	2649562	Identifier	i		2649070	0					
ANR	2649563	Argument	end_plane		2649070	2					
ANR	2649564	Identifier	end_plane		2649070	0					
ANR	2649565	ExpressionStatement	result -> avec_ctx = ( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )	1746:6:47172:47308	2649070	2	True				
ANR	2649566	AssignmentExpression	result -> avec_ctx = ( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	0		=			
ANR	2649567	PtrMemberAccess	result -> avec_ctx		2649070	0					
ANR	2649568	Identifier	result		2649070	0					
ANR	2649569	Identifier	avec_ctx		2649070	1					
ANR	2649570	CastExpression	( eb_ctx_avec * * ) malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	1					
ANR	2649571	CastTarget	eb_ctx_avec * *		2649070	0					
ANR	2649572	CallExpression	malloc ( sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 ) )		2649070	1					
ANR	2649573	Callee	malloc		2649070	0					
ANR	2649574	Identifier	malloc		2649070	0					
ANR	2649575	ArgumentList	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		2649070	1					
ANR	2649576	Argument	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		2649070	0					
ANR	2649577	MultiplicativeExpression	sizeof ( eb_ctx_avec * ) * ( ( n_planes + 3 ) >> 2 )		2649070	0		*			
ANR	2649578	SizeofExpression	sizeof ( eb_ctx_avec * )		2649070	0					
ANR	2649579	Sizeof	sizeof		2649070	0					
ANR	2649580	SizeofOperand	eb_ctx_avec *		2649070	1					
ANR	2649581	ShiftExpression	( n_planes + 3 ) >> 2		2649070	1		>>			
ANR	2649582	AdditiveExpression	n_planes + 3		2649070	0		+			
ANR	2649583	Identifier	n_planes		2649070	0					
ANR	2649584	PrimaryExpression	3		2649070	1					
ANR	2649585	PrimaryExpression	2		2649070	1					
ANR	2649586	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		2649070	3					
ANR	2649587	ForInit	i = 0 ;	1748:11:47321:47326	2649070	0	True				
ANR	2649588	AssignmentExpression	i = 0		2649070	0		=			
ANR	2649589	Identifier	i		2649070	0					
ANR	2649590	PrimaryExpression	0		2649070	1					
ANR	2649591	Condition	i < n_planes	1748:18:47328:47339	2649070	1	True				
ANR	2649592	RelationalExpression	i < n_planes		2649070	0		<			
ANR	2649593	Identifier	i		2649070	0					
ANR	2649594	Identifier	n_planes		2649070	1					
ANR	2649595	AssignmentExpression	i += 4	1748:32:47342:47347	2649070	2	True	+=			
ANR	2649596	Identifier	i		2649070	0					
ANR	2649597	PrimaryExpression	4		2649070	1					
ANR	2649598	CompoundStatement		91:10:2711:2762	2649070	3					
ANR	2649599	IdentifierDeclStatement	int end_plane = i + 4 < n_planes ? i + 4 : n_planes ;	1750:10:47370:47421	2649070	0	True				
ANR	2649600	IdentifierDecl	end_plane = i + 4 < n_planes ? i + 4 : n_planes		2649070	0					
ANR	2649601	IdentifierDeclType	int		2649070	0					
ANR	2649602	Identifier	end_plane		2649070	1					
ANR	2649603	AssignmentExpression	end_plane = i + 4 < n_planes ? i + 4 : n_planes		2649070	2		=			
ANR	2649604	Identifier	end_plane		2649070	0					
ANR	2649605	ConditionalExpression	i + 4 < n_planes ? i + 4 : n_planes		2649070	1					
ANR	2649606	Condition	i + 4 < n_planes		2649070	0					
ANR	2649607	RelationalExpression	i + 4 < n_planes		2649070	0		<			
ANR	2649608	AdditiveExpression	i + 4		2649070	0		+			
ANR	2649609	Identifier	i		2649070	0					
ANR	2649610	PrimaryExpression	4		2649070	1					
ANR	2649611	Identifier	n_planes		2649070	1					
ANR	2649612	AdditiveExpression	i + 4		2649070	1		+			
ANR	2649613	Identifier	i		2649070	0					
ANR	2649614	PrimaryExpression	4		2649070	1					
ANR	2649615	Identifier	n_planes		2649070	2					
ANR	2649616	ExpressionStatement	"result -> avec_ctx [ i >> 2 ] = eb_ctx_avec_new ( params , i , end_plane )"	1751:10:47433:47497	2649070	1	True				
ANR	2649617	AssignmentExpression	"result -> avec_ctx [ i >> 2 ] = eb_ctx_avec_new ( params , i , end_plane )"		2649070	0		=			
ANR	2649618	ArrayIndexing	result -> avec_ctx [ i >> 2 ]		2649070	0					
ANR	2649619	PtrMemberAccess	result -> avec_ctx		2649070	0					
ANR	2649620	Identifier	result		2649070	0					
ANR	2649621	Identifier	avec_ctx		2649070	1					
ANR	2649622	ShiftExpression	i >> 2		2649070	1		>>			
ANR	2649623	Identifier	i		2649070	0					
ANR	2649624	PrimaryExpression	2		2649070	1					
ANR	2649625	CallExpression	"eb_ctx_avec_new ( params , i , end_plane )"		2649070	1					
ANR	2649626	Callee	eb_ctx_avec_new		2649070	0					
ANR	2649627	Identifier	eb_ctx_avec_new		2649070	0					
ANR	2649628	ArgumentList	params		2649070	1					
ANR	2649629	Argument	params		2649070	0					
ANR	2649630	Identifier	params		2649070	0					
ANR	2649631	Argument	i		2649070	1					
ANR	2649632	Identifier	i		2649070	0					
ANR	2649633	Argument	end_plane		2649070	2					
ANR	2649634	Identifier	end_plane		2649070	0					
ANR	2649635	ExpressionStatement	result -> plane_ctx = NULL	1754:6:47522:47546	2649070	4	True				
ANR	2649636	AssignmentExpression	result -> plane_ctx = NULL		2649070	0		=			
ANR	2649637	PtrMemberAccess	result -> plane_ctx		2649070	0					
ANR	2649638	Identifier	result		2649070	0					
ANR	2649639	Identifier	plane_ctx		2649070	1					
ANR	2649640	Identifier	NULL		2649070	1					
ANR	2649641	ElseStatement	else		2649070	0					
ANR	2649642	CompoundStatement		98:4:2906:2906	2649070	0					
ANR	2649643	ExpressionStatement	result -> plane_ctx = ( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )	1758:6:47573:47647	2649070	0	True				
ANR	2649644	AssignmentExpression	result -> plane_ctx = ( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		2649070	0		=			
ANR	2649645	PtrMemberAccess	result -> plane_ctx		2649070	0					
ANR	2649646	Identifier	result		2649070	0					
ANR	2649647	Identifier	plane_ctx		2649070	1					
ANR	2649648	CastExpression	( EBPlaneCtx * * ) malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		2649070	1					
ANR	2649649	CastTarget	EBPlaneCtx * *		2649070	0					
ANR	2649650	CallExpression	malloc ( sizeof ( EBPlaneCtx * ) * n_planes )		2649070	1					
ANR	2649651	Callee	malloc		2649070	0					
ANR	2649652	Identifier	malloc		2649070	0					
ANR	2649653	ArgumentList	sizeof ( EBPlaneCtx * ) * n_planes		2649070	1					
ANR	2649654	Argument	sizeof ( EBPlaneCtx * ) * n_planes		2649070	0					
ANR	2649655	MultiplicativeExpression	sizeof ( EBPlaneCtx * ) * n_planes		2649070	0		*			
ANR	2649656	SizeofExpression	sizeof ( EBPlaneCtx * )		2649070	0					
ANR	2649657	Sizeof	sizeof		2649070	0					
ANR	2649658	SizeofOperand	EBPlaneCtx *		2649070	1					
ANR	2649659	Identifier	n_planes		2649070	1					
ANR	2649660	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		2649070	1					
ANR	2649661	ForInit	i = 0 ;	1759:11:47660:47665	2649070	0	True				
ANR	2649662	AssignmentExpression	i = 0		2649070	0		=			
ANR	2649663	Identifier	i		2649070	0					
ANR	2649664	PrimaryExpression	0		2649070	1					
ANR	2649665	Condition	i < n_planes	1759:18:47667:47678	2649070	1	True				
ANR	2649666	RelationalExpression	i < n_planes		2649070	0		<			
ANR	2649667	Identifier	i		2649070	0					
ANR	2649668	Identifier	n_planes		2649070	1					
ANR	2649669	PostIncDecOperationExpression	i ++	1759:32:47681:47683	2649070	2	True				
ANR	2649670	Identifier	i		2649070	0					
ANR	2649671	IncDec	++		2649070	1					
ANR	2649672	ExpressionStatement	"result -> plane_ctx [ i ] = even_better_plane_new ( params , result , i )"	1760:8:47694:47758	2649070	3	True				
ANR	2649673	AssignmentExpression	"result -> plane_ctx [ i ] = even_better_plane_new ( params , result , i )"		2649070	0		=			
ANR	2649674	ArrayIndexing	result -> plane_ctx [ i ]		2649070	0					
ANR	2649675	PtrMemberAccess	result -> plane_ctx		2649070	0					
ANR	2649676	Identifier	result		2649070	0					
ANR	2649677	Identifier	plane_ctx		2649070	1					
ANR	2649678	Identifier	i		2649070	1					
ANR	2649679	CallExpression	"even_better_plane_new ( params , result , i )"		2649070	1					
ANR	2649680	Callee	even_better_plane_new		2649070	0					
ANR	2649681	Identifier	even_better_plane_new		2649070	0					
ANR	2649682	ArgumentList	params		2649070	1					
ANR	2649683	Argument	params		2649070	0					
ANR	2649684	Identifier	params		2649070	0					
ANR	2649685	Argument	result		2649070	1					
ANR	2649686	Identifier	result		2649070	0					
ANR	2649687	Argument	i		2649070	2					
ANR	2649688	Identifier	i		2649070	0					
ANR	2649689	ReturnStatement	return result ;	1762:2:47768:47781	2649070	29	True				
ANR	2649690	Identifier	result		2649070	0					
ANR	2649691	ReturnType	EvenBetterCtx *		2649070	1					
ANR	2649692	Identifier	even_better_new		2649070	2					
ANR	2649693	ParameterList	const EvenBetterParams * params		2649070	3					
ANR	2649694	Parameter	const EvenBetterParams * params	1659:17:44626:44655	2649070	0	True				
ANR	2649695	ParameterType	const EvenBetterParams *		2649070	0					
ANR	2649696	Identifier	params		2649070	1					
ANR	2649697	CFGEntryNode	ENTRY		2649070		True				
ANR	2649698	CFGExitNode	EXIT		2649070		True				
ANR	2649699	Symbol	* result -> avec_ctx		2649070						
ANR	2649700	Symbol	result -> dump_file		2649070						
ANR	2649701	Symbol	ET_SRC_MAX		2649070						
ANR	2649702	Symbol	result -> source_width		2649070						
ANR	2649703	Symbol	* * params		2649070						
ANR	2649704	Symbol	result -> even_elo		2649070						
ANR	2649705	Symbol	result -> even_ehi		2649070						
ANR	2649706	Symbol	params -> even_c1_scale		2649070						
ANR	2649707	Symbol	using_vectors		2649070						
ANR	2649708	Symbol	EVEN_SHIFT		2649070						
ANR	2649709	Symbol	result -> dump_level		2649070						
ANR	2649710	Symbol	result -> sse2_ctx		2649070						
ANR	2649711	Symbol	log2_aspect		2649070						
ANR	2649712	Symbol	params -> dest_width		2649070						
ANR	2649713	Symbol	result -> c_line		2649070						
ANR	2649714	Symbol	NULL		2649070						
ANR	2649715	Symbol	params -> dump_level		2649070						
ANR	2649716	Symbol	params -> strengths		2649070						
ANR	2649717	Symbol	* * result		2649070						
ANR	2649718	Symbol	params		2649070						
ANR	2649719	Symbol	* header		2649070						
ANR	2649720	Symbol	eb_ctx_sse2_new		2649070						
ANR	2649721	Symbol	EB_DUMP_PARAMS		2649070						
ANR	2649722	Symbol	even_log2		2649070						
ANR	2649723	Symbol	result -> do_shadows		2649070						
ANR	2649724	Symbol	eb_test_sse2		2649070						
ANR	2649725	Symbol	params -> gamma		2649070						
ANR	2649726	Symbol	log2_levels		2649070						
ANR	2649727	Symbol	result -> dest_width		2649070						
ANR	2649728	Symbol	params -> dump_file		2649070						
ANR	2649729	Symbol	header		2649070						
ANR	2649730	Symbol	params -> source_width		2649070						
ANR	2649731	Symbol	params -> n_planes		2649070						
ANR	2649732	Symbol	EB_DUMP_LUTS		2649070						
ANR	2649733	Symbol	* params -> luts		2649070						
ANR	2649734	Symbol	params -> do_shadows		2649070						
ANR	2649735	Symbol	eb_ctx_avec_new		2649070						
ANR	2649736	Symbol	even_better_plane_new		2649070						
ANR	2649737	Symbol	result -> levels		2649070						
ANR	2649738	Symbol	calloc		2649070						
ANR	2649739	Symbol	result -> using_vectors		2649070						
ANR	2649740	Symbol	result -> strengths		2649070						
ANR	2649741	Symbol	result		2649070						
ANR	2649742	Symbol	end_plane		2649070						
ANR	2649743	Symbol	* result -> plane_ctx		2649070						
ANR	2649744	Symbol	* result		2649070						
ANR	2649745	Symbol	result -> aspect		2649070						
ANR	2649746	Symbol	* result -> sse2_ctx		2649070						
ANR	2649747	Symbol	result -> seed2		2649070						
ANR	2649748	Symbol	result -> seed1		2649070						
ANR	2649749	Symbol	* params		2649070						
ANR	2649750	Symbol	params -> aspect		2649070						
ANR	2649751	Symbol	malloc		2649070						
ANR	2649752	Symbol	result -> avec_ctx		2649070						
ANR	2649753	Symbol	n_planes		2649070						
ANR	2649754	Symbol	i		2649070						
ANR	2649755	Symbol	params -> luts		2649070						
ANR	2649756	Symbol	EVENBETTER_VERSION		2649070						
ANR	2649757	Symbol	params -> levels		2649070						
ANR	2649758	Symbol	* i		2649070						
ANR	2649759	Symbol	result -> even_c1		2649070						
ANR	2649760	Symbol	result -> plane_ctx		2649070						
ANR	2649761	Symbol	result -> n_planes		2649070						
ANR	2649762	Function	even_better_free	1771:0:47911:48589							
ANR	2649763	FunctionDef	even_better_free (EvenBetterCtx * ctx)		2649762	0					
ANR	2649764	CompoundStatement		1773:0:47954:48589	2649762	0					
ANR	2649765	IdentifierDeclStatement	int i ;	1774:2:47958:47963	2649762	0	True				
ANR	2649766	IdentifierDecl	i		2649762	0					
ANR	2649767	IdentifierDeclType	int		2649762	0					
ANR	2649768	Identifier	i		2649762	1					
ANR	2649769	IdentifierDeclStatement	int n_planes = ctx -> n_planes ;	1775:2:47967:47995	2649762	1	True				
ANR	2649770	IdentifierDecl	n_planes = ctx -> n_planes		2649762	0					
ANR	2649771	IdentifierDeclType	int		2649762	0					
ANR	2649772	Identifier	n_planes		2649762	1					
ANR	2649773	AssignmentExpression	n_planes = ctx -> n_planes		2649762	2		=			
ANR	2649774	Identifier	n_planes		2649762	0					
ANR	2649775	PtrMemberAccess	ctx -> n_planes		2649762	1					
ANR	2649776	Identifier	ctx		2649762	0					
ANR	2649777	Identifier	n_planes		2649762	1					
ANR	2649778	IfStatement	if ( ctx -> dump_file )		2649762	2					
ANR	2649779	Condition	ctx -> dump_file	1777:6:48004:48017	2649762	0	True				
ANR	2649780	PtrMemberAccess	ctx -> dump_file		2649762	0					
ANR	2649781	Identifier	ctx		2649762	0					
ANR	2649782	Identifier	dump_file		2649762	1					
ANR	2649783	ExpressionStatement	fclose ( ctx -> dump_file )	1778:4:48024:48047	2649762	1	True				
ANR	2649784	CallExpression	fclose ( ctx -> dump_file )		2649762	0					
ANR	2649785	Callee	fclose		2649762	0					
ANR	2649786	Identifier	fclose		2649762	0					
ANR	2649787	ArgumentList	ctx -> dump_file		2649762	1					
ANR	2649788	Argument	ctx -> dump_file		2649762	0					
ANR	2649789	PtrMemberAccess	ctx -> dump_file		2649762	0					
ANR	2649790	Identifier	ctx		2649762	0					
ANR	2649791	Identifier	dump_file		2649762	1					
ANR	2649792	IfStatement	if ( ctx -> using_vectors )		2649762	3					
ANR	2649793	Condition	ctx -> using_vectors	1781:6:48074:48091	2649762	0	True				
ANR	2649794	PtrMemberAccess	ctx -> using_vectors		2649762	0					
ANR	2649795	Identifier	ctx		2649762	0					
ANR	2649796	Identifier	using_vectors		2649762	1					
ANR	2649797	CompoundStatement		10:4:143:143	2649762	1					
ANR	2649798	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		2649762	0					
ANR	2649799	ForInit	i = 0 ;	1784:11:48127:48132	2649762	0	True				
ANR	2649800	AssignmentExpression	i = 0		2649762	0		=			
ANR	2649801	Identifier	i		2649762	0					
ANR	2649802	PrimaryExpression	0		2649762	1					
ANR	2649803	Condition	i < n_planes	1784:18:48134:48145	2649762	1	True				
ANR	2649804	RelationalExpression	i < n_planes		2649762	0		<			
ANR	2649805	Identifier	i		2649762	0					
ANR	2649806	Identifier	n_planes		2649762	1					
ANR	2649807	AssignmentExpression	i += 4	1784:32:48148:48153	2649762	2	True	+=			
ANR	2649808	Identifier	i		2649762	0					
ANR	2649809	PrimaryExpression	4		2649762	1					
ANR	2649810	ExpressionStatement	eb_ctx_sse2_free ( ctx -> sse2_ctx [ i >> 2 ] )	1785:8:48164:48203	2649762	3	True				
ANR	2649811	CallExpression	eb_ctx_sse2_free ( ctx -> sse2_ctx [ i >> 2 ] )		2649762	0					
ANR	2649812	Callee	eb_ctx_sse2_free		2649762	0					
ANR	2649813	Identifier	eb_ctx_sse2_free		2649762	0					
ANR	2649814	ArgumentList	ctx -> sse2_ctx [ i >> 2 ]		2649762	1					
ANR	2649815	Argument	ctx -> sse2_ctx [ i >> 2 ]		2649762	0					
ANR	2649816	ArrayIndexing	ctx -> sse2_ctx [ i >> 2 ]		2649762	0					
ANR	2649817	PtrMemberAccess	ctx -> sse2_ctx		2649762	0					
ANR	2649818	Identifier	ctx		2649762	0					
ANR	2649819	Identifier	sse2_ctx		2649762	1					
ANR	2649820	ShiftExpression	i >> 2		2649762	1		>>			
ANR	2649821	Identifier	i		2649762	0					
ANR	2649822	PrimaryExpression	2		2649762	1					
ANR	2649823	ExpressionStatement	free ( ctx -> sse2_ctx )	1786:6:48211:48230	2649762	1	True				
ANR	2649824	CallExpression	free ( ctx -> sse2_ctx )		2649762	0					
ANR	2649825	Callee	free		2649762	0					
ANR	2649826	Identifier	free		2649762	0					
ANR	2649827	ArgumentList	ctx -> sse2_ctx		2649762	1					
ANR	2649828	Argument	ctx -> sse2_ctx		2649762	0					
ANR	2649829	PtrMemberAccess	ctx -> sse2_ctx		2649762	0					
ANR	2649830	Identifier	ctx		2649762	0					
ANR	2649831	Identifier	sse2_ctx		2649762	1					
ANR	2649832	ForStatement	for ( i = 0 ; i < n_planes ; i += 4 )		2649762	2					
ANR	2649833	ForInit	i = 0 ;	1789:11:48266:48271	2649762	0	True				
ANR	2649834	AssignmentExpression	i = 0		2649762	0		=			
ANR	2649835	Identifier	i		2649762	0					
ANR	2649836	PrimaryExpression	0		2649762	1					
ANR	2649837	Condition	i < n_planes	1789:18:48273:48284	2649762	1	True				
ANR	2649838	RelationalExpression	i < n_planes		2649762	0		<			
ANR	2649839	Identifier	i		2649762	0					
ANR	2649840	Identifier	n_planes		2649762	1					
ANR	2649841	AssignmentExpression	i += 4	1789:32:48287:48292	2649762	2	True	+=			
ANR	2649842	Identifier	i		2649762	0					
ANR	2649843	PrimaryExpression	4		2649762	1					
ANR	2649844	ExpressionStatement	eb_ctx_avec_free ( ctx -> avec_ctx [ i >> 2 ] )	1790:8:48303:48342	2649762	3	True				
ANR	2649845	CallExpression	eb_ctx_avec_free ( ctx -> avec_ctx [ i >> 2 ] )		2649762	0					
ANR	2649846	Callee	eb_ctx_avec_free		2649762	0					
ANR	2649847	Identifier	eb_ctx_avec_free		2649762	0					
ANR	2649848	ArgumentList	ctx -> avec_ctx [ i >> 2 ]		2649762	1					
ANR	2649849	Argument	ctx -> avec_ctx [ i >> 2 ]		2649762	0					
ANR	2649850	ArrayIndexing	ctx -> avec_ctx [ i >> 2 ]		2649762	0					
ANR	2649851	PtrMemberAccess	ctx -> avec_ctx		2649762	0					
ANR	2649852	Identifier	ctx		2649762	0					
ANR	2649853	Identifier	avec_ctx		2649762	1					
ANR	2649854	ShiftExpression	i >> 2		2649762	1		>>			
ANR	2649855	Identifier	i		2649762	0					
ANR	2649856	PrimaryExpression	2		2649762	1					
ANR	2649857	ExpressionStatement	free ( ctx -> avec_ctx )	1791:6:48350:48369	2649762	3	True				
ANR	2649858	CallExpression	free ( ctx -> avec_ctx )		2649762	0					
ANR	2649859	Callee	free		2649762	0					
ANR	2649860	Identifier	free		2649762	0					
ANR	2649861	ArgumentList	ctx -> avec_ctx		2649762	1					
ANR	2649862	Argument	ctx -> avec_ctx		2649762	0					
ANR	2649863	PtrMemberAccess	ctx -> avec_ctx		2649762	0					
ANR	2649864	Identifier	ctx		2649762	0					
ANR	2649865	Identifier	avec_ctx		2649762	1					
ANR	2649866	ElseStatement	else		2649762	0					
ANR	2649867	CompoundStatement		24:4:447:447	2649762	0					
ANR	2649868	ForStatement	for ( i = 0 ; i < n_planes ; i ++ )		2649762	0					
ANR	2649869	ForInit	i = 0 ;	1797:11:48415:48420	2649762	0	True				
ANR	2649870	AssignmentExpression	i = 0		2649762	0		=			
ANR	2649871	Identifier	i		2649762	0					
ANR	2649872	PrimaryExpression	0		2649762	1					
ANR	2649873	Condition	i < n_planes	1797:18:48422:48433	2649762	1	True				
ANR	2649874	RelationalExpression	i < n_planes		2649762	0		<			
ANR	2649875	Identifier	i		2649762	0					
ANR	2649876	Identifier	n_planes		2649762	1					
ANR	2649877	PostIncDecOperationExpression	i ++	1797:32:48436:48438	2649762	2	True				
ANR	2649878	Identifier	i		2649762	0					
ANR	2649879	IncDec	++		2649762	1					
ANR	2649880	ExpressionStatement	even_better_plane_free ( ctx -> plane_ctx [ i ] )	1798:8:48449:48491	2649762	3	True				
ANR	2649881	CallExpression	even_better_plane_free ( ctx -> plane_ctx [ i ] )		2649762	0					
ANR	2649882	Callee	even_better_plane_free		2649762	0					
ANR	2649883	Identifier	even_better_plane_free		2649762	0					
ANR	2649884	ArgumentList	ctx -> plane_ctx [ i ]		2649762	1					
ANR	2649885	Argument	ctx -> plane_ctx [ i ]		2649762	0					
ANR	2649886	ArrayIndexing	ctx -> plane_ctx [ i ]		2649762	0					
ANR	2649887	PtrMemberAccess	ctx -> plane_ctx		2649762	0					
ANR	2649888	Identifier	ctx		2649762	0					
ANR	2649889	Identifier	plane_ctx		2649762	1					
ANR	2649890	Identifier	i		2649762	1					
ANR	2649891	ExpressionStatement	free ( ctx -> plane_ctx )	1799:6:48499:48519	2649762	1	True				
ANR	2649892	CallExpression	free ( ctx -> plane_ctx )		2649762	0					
ANR	2649893	Callee	free		2649762	0					
ANR	2649894	Identifier	free		2649762	0					
ANR	2649895	ArgumentList	ctx -> plane_ctx		2649762	1					
ANR	2649896	Argument	ctx -> plane_ctx		2649762	0					
ANR	2649897	PtrMemberAccess	ctx -> plane_ctx		2649762	0					
ANR	2649898	Identifier	ctx		2649762	0					
ANR	2649899	Identifier	plane_ctx		2649762	1					
ANR	2649900	ExpressionStatement	free ( ctx -> strengths )	1801:2:48529:48550	2649762	4	True				
ANR	2649901	CallExpression	free ( ctx -> strengths )		2649762	0					
ANR	2649902	Callee	free		2649762	0					
ANR	2649903	Identifier	free		2649762	0					
ANR	2649904	ArgumentList	ctx -> strengths		2649762	1					
ANR	2649905	Argument	ctx -> strengths		2649762	0					
ANR	2649906	PtrMemberAccess	ctx -> strengths		2649762	0					
ANR	2649907	Identifier	ctx		2649762	0					
ANR	2649908	Identifier	strengths		2649762	1					
ANR	2649909	ExpressionStatement	free ( ctx -> c_line )	1802:2:48554:48572	2649762	5	True				
ANR	2649910	CallExpression	free ( ctx -> c_line )		2649762	0					
ANR	2649911	Callee	free		2649762	0					
ANR	2649912	Identifier	free		2649762	0					
ANR	2649913	ArgumentList	ctx -> c_line		2649762	1					
ANR	2649914	Argument	ctx -> c_line		2649762	0					
ANR	2649915	PtrMemberAccess	ctx -> c_line		2649762	0					
ANR	2649916	Identifier	ctx		2649762	0					
ANR	2649917	Identifier	c_line		2649762	1					
ANR	2649918	ExpressionStatement	free ( ctx )	1804:2:48577:48587	2649762	6	True				
ANR	2649919	CallExpression	free ( ctx )		2649762	0					
ANR	2649920	Callee	free		2649762	0					
ANR	2649921	Identifier	free		2649762	0					
ANR	2649922	ArgumentList	ctx		2649762	1					
ANR	2649923	Argument	ctx		2649762	0					
ANR	2649924	Identifier	ctx		2649762	0					
ANR	2649925	ReturnType	void		2649762	1					
ANR	2649926	Identifier	even_better_free		2649762	2					
ANR	2649927	ParameterList	EvenBetterCtx * ctx		2649762	3					
ANR	2649928	Parameter	EvenBetterCtx * ctx	1772:18:47934:47951	2649762	0	True				
ANR	2649929	ParameterType	EvenBetterCtx *		2649762	0					
ANR	2649930	Identifier	ctx		2649762	1					
ANR	2649931	CFGEntryNode	ENTRY		2649762		True				
ANR	2649932	CFGExitNode	EXIT		2649762		True				
ANR	2649933	Symbol	ctx -> strengths		2649762						
ANR	2649934	Symbol	ctx		2649762						
ANR	2649935	Symbol	n_planes		2649762						
ANR	2649936	Symbol	ctx -> c_line		2649762						
ANR	2649937	Symbol	i		2649762						
ANR	2649938	Symbol	ctx -> n_planes		2649762						
ANR	2649939	Symbol	* ctx -> sse2_ctx		2649762						
ANR	2649940	Symbol	* ctx		2649762						
ANR	2649941	Symbol	ctx -> using_vectors		2649762						
ANR	2649942	Symbol	* i		2649762						
ANR	2649943	Symbol	* ctx -> avec_ctx		2649762						
ANR	2649944	Symbol	ctx -> sse2_ctx		2649762						
ANR	2649945	Symbol	ctx -> plane_ctx		2649762						
ANR	2649946	Symbol	* * ctx		2649762						
ANR	2649947	Symbol	* ctx -> plane_ctx		2649762						
ANR	2649948	Symbol	ctx -> dump_file		2649762						
ANR	2649949	Symbol	ctx -> avec_ctx		2649762						
