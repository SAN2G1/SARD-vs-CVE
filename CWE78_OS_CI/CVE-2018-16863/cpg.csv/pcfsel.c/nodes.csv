command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8016004	File	data/converged/CVE-2018-16863_ghostpdl/pcfsel.c								
ANR	8016005	DeclStmt									
ANR	8016006	Decl							extern int	extern int ( int )	abs
ANR	8016007	ClassDef	<unnamed>	36:8:1163:1458							
ANR	8016008	DeclStmt									
ANR	8016009	Decl									score_index_t
ANR	8016010	DeclStmt									
ANR	8016011	Decl							int	int [ score_limit ]	match_score_t
ANR	8016012	Function	dmprint_cc	71:0:1750:1962							
ANR	8016013	FunctionDef	"dmprint_cc (const gs_memory_t * mem , const byte * pcc)"		8016012	0					
ANR	8016014	CompoundStatement		73:0:1816:1962	8016012	0					
ANR	8016015	ExpressionStatement	"dmprintf8 ( mem , ""cc=%02x %02x %02x %02x %02x %02x %02x %02x"" , pcc [ 0 ] , pcc [ 1 ] , pcc [ 2 ] , pcc [ 3 ] , pcc [ 4 ] , pcc [ 5 ] , pcc [ 6 ] , pcc [ 7 ] )"	74:4:1822:1960	8016012	0	True				
ANR	8016016	CallExpression	"dmprintf8 ( mem , ""cc=%02x %02x %02x %02x %02x %02x %02x %02x"" , pcc [ 0 ] , pcc [ 1 ] , pcc [ 2 ] , pcc [ 3 ] , pcc [ 4 ] , pcc [ 5 ] , pcc [ 6 ] , pcc [ 7 ] )"		8016012	0					
ANR	8016017	Callee	dmprintf8		8016012	0					
ANR	8016018	Identifier	dmprintf8		8016012	0					
ANR	8016019	ArgumentList	mem		8016012	1					
ANR	8016020	Argument	mem		8016012	0					
ANR	8016021	Identifier	mem		8016012	0					
ANR	8016022	Argument	"""cc=%02x %02x %02x %02x %02x %02x %02x %02x"""		8016012	1					
ANR	8016023	PrimaryExpression	"""cc=%02x %02x %02x %02x %02x %02x %02x %02x"""		8016012	0					
ANR	8016024	Argument	pcc [ 0 ]		8016012	2					
ANR	8016025	ArrayIndexing	pcc [ 0 ]		8016012	0					
ANR	8016026	Identifier	pcc		8016012	0					
ANR	8016027	PrimaryExpression	0		8016012	1					
ANR	8016028	Argument	pcc [ 1 ]		8016012	3					
ANR	8016029	ArrayIndexing	pcc [ 1 ]		8016012	0					
ANR	8016030	Identifier	pcc		8016012	0					
ANR	8016031	PrimaryExpression	1		8016012	1					
ANR	8016032	Argument	pcc [ 2 ]		8016012	4					
ANR	8016033	ArrayIndexing	pcc [ 2 ]		8016012	0					
ANR	8016034	Identifier	pcc		8016012	0					
ANR	8016035	PrimaryExpression	2		8016012	1					
ANR	8016036	Argument	pcc [ 3 ]		8016012	5					
ANR	8016037	ArrayIndexing	pcc [ 3 ]		8016012	0					
ANR	8016038	Identifier	pcc		8016012	0					
ANR	8016039	PrimaryExpression	3		8016012	1					
ANR	8016040	Argument	pcc [ 4 ]		8016012	6					
ANR	8016041	ArrayIndexing	pcc [ 4 ]		8016012	0					
ANR	8016042	Identifier	pcc		8016012	0					
ANR	8016043	PrimaryExpression	4		8016012	1					
ANR	8016044	Argument	pcc [ 5 ]		8016012	7					
ANR	8016045	ArrayIndexing	pcc [ 5 ]		8016012	0					
ANR	8016046	Identifier	pcc		8016012	0					
ANR	8016047	PrimaryExpression	5		8016012	1					
ANR	8016048	Argument	pcc [ 6 ]		8016012	8					
ANR	8016049	ArrayIndexing	pcc [ 6 ]		8016012	0					
ANR	8016050	Identifier	pcc		8016012	0					
ANR	8016051	PrimaryExpression	6		8016012	1					
ANR	8016052	Argument	pcc [ 7 ]		8016012	9					
ANR	8016053	ArrayIndexing	pcc [ 7 ]		8016012	0					
ANR	8016054	Identifier	pcc		8016012	0					
ANR	8016055	PrimaryExpression	7		8016012	1					
ANR	8016056	ReturnType	static void		8016012	1					
ANR	8016057	Identifier	dmprint_cc		8016012	2					
ANR	8016058	ParameterList	"const gs_memory_t * mem , const byte * pcc"		8016012	3					
ANR	8016059	Parameter	const gs_memory_t * mem	72:11:1773:1795	8016012	0	True				
ANR	8016060	ParameterType	const gs_memory_t *		8016012	0					
ANR	8016061	Identifier	mem		8016012	1					
ANR	8016062	Parameter	const byte * pcc	72:36:1798:1813	8016012	1	True				
ANR	8016063	ParameterType	const byte *		8016012	0					
ANR	8016064	Identifier	pcc		8016012	1					
ANR	8016065	CFGEntryNode	ENTRY		8016012		True				
ANR	8016066	CFGExitNode	EXIT		8016012		True				
ANR	8016067	Symbol	pcc		8016012						
ANR	8016068	Symbol	mem		8016012						
ANR	8016069	Symbol	* pcc		8016012						
ANR	8016070	Function	dmprint_font_params_t	78:0:1965:2409							
ANR	8016071	FunctionDef	"dmprint_font_params_t (const gs_memory_t * mem , const pl_font_params_t * pfp)"		8016070	0					
ANR	8016072	CompoundStatement		80:0:2054:2409	8016070	0					
ANR	8016073	ExpressionStatement	"dmprintf8 ( mem , ""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"" , pfp -> symbol_set , ( pfp -> proportional_spacing ? ""prop."" : ""fixed"" ) , pl_fp_pitch_cp ( pfp ) / 100.0 , pfp -> height_4ths / 4 , pfp -> style , pfp -> stroke_weight , pfp -> typeface_family , ( 0x07FF & pfp -> typeface_family ) )"	81:4:2060:2407	8016070	0	True				
ANR	8016074	CallExpression	"dmprintf8 ( mem , ""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"" , pfp -> symbol_set , ( pfp -> proportional_spacing ? ""prop."" : ""fixed"" ) , pl_fp_pitch_cp ( pfp ) / 100.0 , pfp -> height_4ths / 4 , pfp -> style , pfp -> stroke_weight , pfp -> typeface_family , ( 0x07FF & pfp -> typeface_family ) )"		8016070	0					
ANR	8016075	Callee	dmprintf8		8016070	0					
ANR	8016076	Identifier	dmprintf8		8016070	0					
ANR	8016077	ArgumentList	mem		8016070	1					
ANR	8016078	Argument	mem		8016070	0					
ANR	8016079	Identifier	mem		8016070	0					
ANR	8016080	Argument	"""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"""		8016070	1					
ANR	8016081	PrimaryExpression	"""symset=%u %s pitch=%g ht=%u style=%u wt=%d face=%u:%u\\n"""		8016070	0					
ANR	8016082	Argument	pfp -> symbol_set		8016070	2					
ANR	8016083	PtrMemberAccess	pfp -> symbol_set		8016070	0					
ANR	8016084	Identifier	pfp		8016070	0					
ANR	8016085	Identifier	symbol_set		8016070	1					
ANR	8016086	Argument	"pfp -> proportional_spacing ? ""prop."" : ""fixed"""		8016070	3					
ANR	8016087	ConditionalExpression	"pfp -> proportional_spacing ? ""prop."" : ""fixed"""		8016070	0					
ANR	8016088	Condition	pfp -> proportional_spacing		8016070	0					
ANR	8016089	PtrMemberAccess	pfp -> proportional_spacing		8016070	0					
ANR	8016090	Identifier	pfp		8016070	0					
ANR	8016091	Identifier	proportional_spacing		8016070	1					
ANR	8016092	PrimaryExpression	"""prop."""		8016070	1					
ANR	8016093	PrimaryExpression	"""fixed"""		8016070	2					
ANR	8016094	Argument	pl_fp_pitch_cp ( pfp ) / 100.0		8016070	4					
ANR	8016095	MultiplicativeExpression	pl_fp_pitch_cp ( pfp ) / 100.0		8016070	0		/			
ANR	8016096	CallExpression	pl_fp_pitch_cp ( pfp )		8016070	0					
ANR	8016097	Callee	pl_fp_pitch_cp		8016070	0					
ANR	8016098	Identifier	pl_fp_pitch_cp		8016070	0					
ANR	8016099	ArgumentList	pfp		8016070	1					
ANR	8016100	Argument	pfp		8016070	0					
ANR	8016101	Identifier	pfp		8016070	0					
ANR	8016102	PrimaryExpression	100.0		8016070	1					
ANR	8016103	Argument	pfp -> height_4ths / 4		8016070	5					
ANR	8016104	MultiplicativeExpression	pfp -> height_4ths / 4		8016070	0		/			
ANR	8016105	PtrMemberAccess	pfp -> height_4ths		8016070	0					
ANR	8016106	Identifier	pfp		8016070	0					
ANR	8016107	Identifier	height_4ths		8016070	1					
ANR	8016108	PrimaryExpression	4		8016070	1					
ANR	8016109	Argument	pfp -> style		8016070	6					
ANR	8016110	PtrMemberAccess	pfp -> style		8016070	0					
ANR	8016111	Identifier	pfp		8016070	0					
ANR	8016112	Identifier	style		8016070	1					
ANR	8016113	Argument	pfp -> stroke_weight		8016070	7					
ANR	8016114	PtrMemberAccess	pfp -> stroke_weight		8016070	0					
ANR	8016115	Identifier	pfp		8016070	0					
ANR	8016116	Identifier	stroke_weight		8016070	1					
ANR	8016117	Argument	pfp -> typeface_family		8016070	8					
ANR	8016118	PtrMemberAccess	pfp -> typeface_family		8016070	0					
ANR	8016119	Identifier	pfp		8016070	0					
ANR	8016120	Identifier	typeface_family		8016070	1					
ANR	8016121	Argument	0x07FF & pfp -> typeface_family		8016070	9					
ANR	8016122	BitAndExpression	0x07FF & pfp -> typeface_family		8016070	0		&			
ANR	8016123	PrimaryExpression	0x07FF		8016070	0					
ANR	8016124	PtrMemberAccess	pfp -> typeface_family		8016070	1					
ANR	8016125	Identifier	pfp		8016070	0					
ANR	8016126	Identifier	typeface_family		8016070	1					
ANR	8016127	ReturnType	static void		8016070	1					
ANR	8016128	Identifier	dmprint_font_params_t		8016070	2					
ANR	8016129	ParameterList	"const gs_memory_t * mem , const pl_font_params_t * pfp"		8016070	3					
ANR	8016130	Parameter	const gs_memory_t * mem	79:22:1999:2021	8016070	0	True				
ANR	8016131	ParameterType	const gs_memory_t *		8016070	0					
ANR	8016132	Identifier	mem		8016070	1					
ANR	8016133	Parameter	const pl_font_params_t * pfp	79:47:2024:2051	8016070	1	True				
ANR	8016134	ParameterType	const pl_font_params_t *		8016070	0					
ANR	8016135	Identifier	pfp		8016070	1					
ANR	8016136	CFGEntryNode	ENTRY		8016070		True				
ANR	8016137	CFGExitNode	EXIT		8016070		True				
ANR	8016138	Symbol	mem		8016070						
ANR	8016139	Symbol	* pfp		8016070						
ANR	8016140	Symbol	pfp -> typeface_family		8016070						
ANR	8016141	Symbol	pl_fp_pitch_cp		8016070						
ANR	8016142	Symbol	pfp -> proportional_spacing		8016070						
ANR	8016143	Symbol	pfp -> symbol_set		8016070						
ANR	8016144	Symbol	pfp		8016070						
ANR	8016145	Symbol	pfp -> stroke_weight		8016070						
ANR	8016146	Symbol	pfp -> style		8016070						
ANR	8016147	Symbol	pfp -> height_4ths		8016070						
ANR	8016148	Function	dmprint_ufst_font_name	91:0:2435:3273							
ANR	8016149	FunctionDef	"dmprint_ufst_font_name (const gs_memory_t * mem , const pl_font_t * pfont)"		8016148	0					
ANR	8016150	CompoundStatement		93:0:2520:3273	8016148	0					
ANR	8016151	Statement	define	94:1:2523:2528	8016148	0	True				
ANR	8016152	Statement	fontnames	94:8:2530:2538	8016148	1	True				
ANR	8016153	Statement	(	94:17:2539:2539	8016148	2	True				
ANR	8016154	Statement	agfascreenfontname	94:18:2540:2557	8016148	3	True				
ANR	8016155	Statement	","	94:36:2558:2558	8016148	4	True				
ANR	8016156	Statement	agfaname	94:38:2560:2567	8016148	5	True				
ANR	8016157	Statement	","	94:46:2568:2568	8016148	6	True				
ANR	8016158	Statement	urwname	94:48:2570:2576	8016148	7	True				
ANR	8016159	Statement	)	94:55:2577:2577	8016148	8	True				
ANR	8016160	Statement	agfaname	94:57:2579:2586	8016148	9	True				
ANR	8016161	Statement	include	95:1:2589:2595	8016148	10	True				
ANR	8016162	Statement	"""plftable.h"""	95:9:2597:2608	8016148	11	True				
ANR	8016163	IdentifierDeclStatement	int i ;	96:4:2614:2619	8016148	12	True				
ANR	8016164	IdentifierDecl	i		8016148	0					
ANR	8016165	IdentifierDeclType	int		8016148	0					
ANR	8016166	Identifier	i		8016148	1					
ANR	8016167	IdentifierDeclStatement	bool found = false ;	97:4:2625:2643	8016148	13	True				
ANR	8016168	IdentifierDecl	found = false		8016148	0					
ANR	8016169	IdentifierDeclType	bool		8016148	0					
ANR	8016170	Identifier	found		8016148	1					
ANR	8016171	AssignmentExpression	found = false		8016148	2		=			
ANR	8016172	Identifier	false		8016148	0					
ANR	8016173	Identifier	false		8016148	1					
ANR	8016174	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	98:4:2649:2692	8016148	14	True				
ANR	8016175	CastExpression	( void ) pl_built_in_resident_font_table_count		8016148	0					
ANR	8016176	CastTarget	void		8016148	0					
ANR	8016177	Identifier	pl_built_in_resident_font_table_count		8016148	1					
ANR	8016178	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8016148	15					
ANR	8016179	ForInit	i = 0 ;	100:9:2704:2709	8016148	0	True				
ANR	8016180	AssignmentExpression	i = 0		8016148	0		=			
ANR	8016181	Identifier	i		8016148	0					
ANR	8016182	PrimaryExpression	0		8016148	1					
ANR	8016183	Condition	strlen ( resident_table [ i ] . full_font_name )	100:16:2711:2750	8016148	1	True				
ANR	8016184	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8016148	0					
ANR	8016185	Callee	strlen		8016148	0					
ANR	8016186	Identifier	strlen		8016148	0					
ANR	8016187	ArgumentList	resident_table [ i ] . full_font_name		8016148	1					
ANR	8016188	Argument	resident_table [ i ] . full_font_name		8016148	0					
ANR	8016189	MemberAccess	resident_table [ i ] . full_font_name		8016148	0					
ANR	8016190	ArrayIndexing	resident_table [ i ]		8016148	0					
ANR	8016191	Identifier	resident_table		8016148	0					
ANR	8016192	Identifier	i		8016148	1					
ANR	8016193	Identifier	full_font_name		8016148	1					
ANR	8016194	PostIncDecOperationExpression	i ++	100:58:2753:2755	8016148	2	True				
ANR	8016195	Identifier	i		8016148	0					
ANR	8016196	IncDec	++		8016148	1					
ANR	8016197	CompoundStatement		8:63:237:237	8016148	3					
ANR	8016198	IfStatement	"if ( ! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) ) )"		8016148	0					
ANR	8016199	Condition	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"	101:12:2772:2864	8016148	0	True				
ANR	8016200	UnaryOperationExpression	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8016148	0					
ANR	8016201	UnaryOperator	!		8016148	0					
ANR	8016202	CallExpression	"memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8016148	1					
ANR	8016203	Callee	memcmp		8016148	0					
ANR	8016204	Identifier	memcmp		8016148	0					
ANR	8016205	ArgumentList	& resident_table [ i ] . params		8016148	1					
ANR	8016206	Argument	& resident_table [ i ] . params		8016148	0					
ANR	8016207	UnaryOperationExpression	& resident_table [ i ] . params		8016148	0					
ANR	8016208	UnaryOperator	&		8016148	0					
ANR	8016209	MemberAccess	resident_table [ i ] . params		8016148	1					
ANR	8016210	ArrayIndexing	resident_table [ i ]		8016148	0					
ANR	8016211	Identifier	resident_table		8016148	0					
ANR	8016212	Identifier	i		8016148	1					
ANR	8016213	Identifier	params		8016148	1					
ANR	8016214	Argument	& pfont -> params		8016148	1					
ANR	8016215	UnaryOperationExpression	& pfont -> params		8016148	0					
ANR	8016216	UnaryOperator	&		8016148	0					
ANR	8016217	PtrMemberAccess	pfont -> params		8016148	1					
ANR	8016218	Identifier	pfont		8016148	0					
ANR	8016219	Identifier	params		8016148	1					
ANR	8016220	Argument	sizeof ( pfont -> params )		8016148	2					
ANR	8016221	SizeofExpression	sizeof ( pfont -> params )		8016148	0					
ANR	8016222	Sizeof	sizeof		8016148	0					
ANR	8016223	PtrMemberAccess	pfont -> params		8016148	1					
ANR	8016224	Identifier	pfont		8016148	0					
ANR	8016225	Identifier	params		8016148	1					
ANR	8016226	CompoundStatement		10:60:346:346	8016148	1					
ANR	8016227	ExpressionStatement	found = true	104:12:2882:2894	8016148	0	True				
ANR	8016228	AssignmentExpression	found = true		8016148	0		=			
ANR	8016229	Identifier	found		8016148	0					
ANR	8016230	Identifier	true		8016148	1					
ANR	8016231	BreakStatement	break ;	105:12:2908:2913	8016148	1	True				
ANR	8016232	IfStatement	if ( found )		8016148	16					
ANR	8016233	Condition	found	108:8:2939:2943	8016148	0	True				
ANR	8016234	Identifier	found		8016148	0					
ANR	8016235	CompoundStatement		16:15:425:425	8016148	1					
ANR	8016236	ExpressionStatement	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"	109:8:2956:3011	8016148	0	True				
ANR	8016237	CallExpression	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"		8016148	0					
ANR	8016238	Callee	dmprintf1		8016148	0					
ANR	8016239	Identifier	dmprintf1		8016148	0					
ANR	8016240	ArgumentList	mem		8016148	1					
ANR	8016241	Argument	mem		8016148	0					
ANR	8016242	Identifier	mem		8016148	0					
ANR	8016243	Argument	"""%s """		8016148	1					
ANR	8016244	PrimaryExpression	"""%s """		8016148	0					
ANR	8016245	Argument	resident_table [ i ] . full_font_name		8016148	2					
ANR	8016246	MemberAccess	resident_table [ i ] . full_font_name		8016148	0					
ANR	8016247	ArrayIndexing	resident_table [ i ]		8016148	0					
ANR	8016248	Identifier	resident_table		8016148	0					
ANR	8016249	Identifier	i		8016148	1					
ANR	8016250	Identifier	full_font_name		8016148	1					
ANR	8016251	ElseStatement	else		8016148	0					
ANR	8016252	CompoundStatement		18:11:503:503	8016148	0					
ANR	8016253	IfStatement	if ( pfont -> storage == pcds_internal )		8016148	0					
ANR	8016254	Condition	pfont -> storage == pcds_internal	111:12:3038:3068	8016148	0	True				
ANR	8016255	EqualityExpression	pfont -> storage == pcds_internal		8016148	0		==			
ANR	8016256	PtrMemberAccess	pfont -> storage		8016148	0					
ANR	8016257	Identifier	pfont		8016148	0					
ANR	8016258	Identifier	storage		8016148	1					
ANR	8016259	Identifier	pcds_internal		8016148	1					
ANR	8016260	CompoundStatement		19:45:550:550	8016148	1					
ANR	8016261	ExpressionStatement	"dmprintf ( mem , ""internal font not found in resident table"" )"	112:12:3085:3143	8016148	0	True				
ANR	8016262	CallExpression	"dmprintf ( mem , ""internal font not found in resident table"" )"		8016148	0					
ANR	8016263	Callee	dmprintf		8016148	0					
ANR	8016264	Identifier	dmprintf		8016148	0					
ANR	8016265	ArgumentList	mem		8016148	1					
ANR	8016266	Argument	mem		8016148	0					
ANR	8016267	Identifier	mem		8016148	0					
ANR	8016268	Argument	"""internal font not found in resident table"""		8016148	1					
ANR	8016269	PrimaryExpression	"""internal font not found in resident table"""		8016148	0					
ANR	8016270	ExpressionStatement	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"	113:12:3157:3197	8016148	1	True				
ANR	8016271	CallExpression	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"		8016148	0					
ANR	8016272	Callee	dmprintf1		8016148	0					
ANR	8016273	Identifier	dmprintf1		8016148	0					
ANR	8016274	ArgumentList	mem		8016148	1					
ANR	8016275	Argument	mem		8016148	0					
ANR	8016276	Identifier	mem		8016148	0					
ANR	8016277	Argument	"""%s\\n"""		8016148	1					
ANR	8016278	PrimaryExpression	"""%s\\n"""		8016148	0					
ANR	8016279	Argument	pfont -> font_file		8016148	2					
ANR	8016280	PtrMemberAccess	pfont -> font_file		8016148	0					
ANR	8016281	Identifier	pfont		8016148	0					
ANR	8016282	Identifier	font_file		8016148	1					
ANR	8016283	ExpressionStatement	"dmprintf ( mem , ""external font "" )"	115:8:3217:3248	8016148	1	True				
ANR	8016284	CallExpression	"dmprintf ( mem , ""external font "" )"		8016148	0					
ANR	8016285	Callee	dmprintf		8016148	0					
ANR	8016286	Identifier	dmprintf		8016148	0					
ANR	8016287	ArgumentList	mem		8016148	1					
ANR	8016288	Argument	mem		8016148	0					
ANR	8016289	Identifier	mem		8016148	0					
ANR	8016290	Argument	"""external font """		8016148	1					
ANR	8016291	PrimaryExpression	"""external font """		8016148	0					
ANR	8016292	Statement	undef	117:1:3257:3261	8016148	17	True				
ANR	8016293	Statement	fontnames	117:7:3263:3271	8016148	18	True				
ANR	8016294	ReturnType	static void		8016148	1					
ANR	8016295	Identifier	dmprint_ufst_font_name		8016148	2					
ANR	8016296	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8016148	3					
ANR	8016297	Parameter	const gs_memory_t * mem	92:23:2470:2492	8016148	0	True				
ANR	8016298	ParameterType	const gs_memory_t *		8016148	0					
ANR	8016299	Identifier	mem		8016148	1					
ANR	8016300	Parameter	const pl_font_t * pfont	92:48:2495:2517	8016148	1	True				
ANR	8016301	ParameterType	const pl_font_t *		8016148	0					
ANR	8016302	Identifier	pfont		8016148	1					
ANR	8016303	CFGEntryNode	ENTRY		8016148		True				
ANR	8016304	CFGExitNode	EXIT		8016148		True				
ANR	8016305	Symbol	pcds_internal		8016148						
ANR	8016306	Symbol	pfont		8016148						
ANR	8016307	Symbol	pfont -> params		8016148						
ANR	8016308	Symbol	false		8016148						
ANR	8016309	Symbol	i		8016148						
ANR	8016310	Symbol	* resident_table		8016148						
ANR	8016311	Symbol	& resident_table [ i ] . params		8016148						
ANR	8016312	Symbol	resident_table [ i ] . full_font_name		8016148						
ANR	8016313	Symbol	strlen		8016148						
ANR	8016314	Symbol	* pfont		8016148						
ANR	8016315	Symbol	found		8016148						
ANR	8016316	Symbol	* i		8016148						
ANR	8016317	Symbol	memcmp		8016148						
ANR	8016318	Symbol	mem		8016148						
ANR	8016319	Symbol	pfont -> storage		8016148						
ANR	8016320	Symbol	true		8016148						
ANR	8016321	Symbol	pfont -> font_file		8016148						
ANR	8016322	Symbol	& pfont -> params		8016148						
ANR	8016323	Symbol	resident_table		8016148						
ANR	8016324	Function	dmprint_font_name	120:0:3276:4108							
ANR	8016325	FunctionDef	"dmprint_font_name (const gs_memory_t * mem , const pl_font_t * pfont)"		8016324	0					
ANR	8016326	CompoundStatement		122:0:3356:4108	8016324	0					
ANR	8016327	Statement	define	123:1:3359:3364	8016324	0	True				
ANR	8016328	Statement	fontnames	123:8:3366:3374	8016324	1	True				
ANR	8016329	Statement	(	123:17:3375:3375	8016324	2	True				
ANR	8016330	Statement	agfascreenfontname	123:18:3376:3393	8016324	3	True				
ANR	8016331	Statement	","	123:36:3394:3394	8016324	4	True				
ANR	8016332	Statement	agfaname	123:38:3396:3403	8016324	5	True				
ANR	8016333	Statement	","	123:46:3404:3404	8016324	6	True				
ANR	8016334	Statement	urwname	123:48:3406:3412	8016324	7	True				
ANR	8016335	Statement	)	123:55:3413:3413	8016324	8	True				
ANR	8016336	Statement	urwname	123:57:3415:3421	8016324	9	True				
ANR	8016337	Statement	include	124:1:3424:3430	8016324	10	True				
ANR	8016338	Statement	"""plftable.h"""	124:9:3432:3443	8016324	11	True				
ANR	8016339	IdentifierDeclStatement	int i ;	125:4:3449:3454	8016324	12	True				
ANR	8016340	IdentifierDecl	i		8016324	0					
ANR	8016341	IdentifierDeclType	int		8016324	0					
ANR	8016342	Identifier	i		8016324	1					
ANR	8016343	IdentifierDeclStatement	bool found = false ;	126:4:3460:3478	8016324	13	True				
ANR	8016344	IdentifierDecl	found = false		8016324	0					
ANR	8016345	IdentifierDeclType	bool		8016324	0					
ANR	8016346	Identifier	found		8016324	1					
ANR	8016347	AssignmentExpression	found = false		8016324	2		=			
ANR	8016348	Identifier	false		8016324	0					
ANR	8016349	Identifier	false		8016324	1					
ANR	8016350	ExpressionStatement	( void ) pl_built_in_resident_font_table_count	127:4:3484:3527	8016324	14	True				
ANR	8016351	CastExpression	( void ) pl_built_in_resident_font_table_count		8016324	0					
ANR	8016352	CastTarget	void		8016324	0					
ANR	8016353	Identifier	pl_built_in_resident_font_table_count		8016324	1					
ANR	8016354	ForStatement	for ( i = 0 ; strlen ( resident_table [ i ] . full_font_name ) ; i ++ )		8016324	15					
ANR	8016355	ForInit	i = 0 ;	129:9:3539:3544	8016324	0	True				
ANR	8016356	AssignmentExpression	i = 0		8016324	0		=			
ANR	8016357	Identifier	i		8016324	0					
ANR	8016358	PrimaryExpression	0		8016324	1					
ANR	8016359	Condition	strlen ( resident_table [ i ] . full_font_name )	129:16:3546:3585	8016324	1	True				
ANR	8016360	CallExpression	strlen ( resident_table [ i ] . full_font_name )		8016324	0					
ANR	8016361	Callee	strlen		8016324	0					
ANR	8016362	Identifier	strlen		8016324	0					
ANR	8016363	ArgumentList	resident_table [ i ] . full_font_name		8016324	1					
ANR	8016364	Argument	resident_table [ i ] . full_font_name		8016324	0					
ANR	8016365	MemberAccess	resident_table [ i ] . full_font_name		8016324	0					
ANR	8016366	ArrayIndexing	resident_table [ i ]		8016324	0					
ANR	8016367	Identifier	resident_table		8016324	0					
ANR	8016368	Identifier	i		8016324	1					
ANR	8016369	Identifier	full_font_name		8016324	1					
ANR	8016370	PostIncDecOperationExpression	i ++	129:58:3588:3590	8016324	2	True				
ANR	8016371	Identifier	i		8016324	0					
ANR	8016372	IncDec	++		8016324	1					
ANR	8016373	CompoundStatement		8:63:236:236	8016324	3					
ANR	8016374	IfStatement	"if ( ! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) ) )"		8016324	0					
ANR	8016375	Condition	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"	130:12:3607:3699	8016324	0	True				
ANR	8016376	UnaryOperationExpression	"! memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8016324	0					
ANR	8016377	UnaryOperator	!		8016324	0					
ANR	8016378	CallExpression	"memcmp ( & resident_table [ i ] . params , & pfont -> params , sizeof ( pfont -> params ) )"		8016324	1					
ANR	8016379	Callee	memcmp		8016324	0					
ANR	8016380	Identifier	memcmp		8016324	0					
ANR	8016381	ArgumentList	& resident_table [ i ] . params		8016324	1					
ANR	8016382	Argument	& resident_table [ i ] . params		8016324	0					
ANR	8016383	UnaryOperationExpression	& resident_table [ i ] . params		8016324	0					
ANR	8016384	UnaryOperator	&		8016324	0					
ANR	8016385	MemberAccess	resident_table [ i ] . params		8016324	1					
ANR	8016386	ArrayIndexing	resident_table [ i ]		8016324	0					
ANR	8016387	Identifier	resident_table		8016324	0					
ANR	8016388	Identifier	i		8016324	1					
ANR	8016389	Identifier	params		8016324	1					
ANR	8016390	Argument	& pfont -> params		8016324	1					
ANR	8016391	UnaryOperationExpression	& pfont -> params		8016324	0					
ANR	8016392	UnaryOperator	&		8016324	0					
ANR	8016393	PtrMemberAccess	pfont -> params		8016324	1					
ANR	8016394	Identifier	pfont		8016324	0					
ANR	8016395	Identifier	params		8016324	1					
ANR	8016396	Argument	sizeof ( pfont -> params )		8016324	2					
ANR	8016397	SizeofExpression	sizeof ( pfont -> params )		8016324	0					
ANR	8016398	Sizeof	sizeof		8016324	0					
ANR	8016399	PtrMemberAccess	pfont -> params		8016324	1					
ANR	8016400	Identifier	pfont		8016324	0					
ANR	8016401	Identifier	params		8016324	1					
ANR	8016402	CompoundStatement		10:60:345:345	8016324	1					
ANR	8016403	ExpressionStatement	found = true	133:12:3717:3729	8016324	0	True				
ANR	8016404	AssignmentExpression	found = true		8016324	0		=			
ANR	8016405	Identifier	found		8016324	0					
ANR	8016406	Identifier	true		8016324	1					
ANR	8016407	BreakStatement	break ;	134:12:3743:3748	8016324	1	True				
ANR	8016408	IfStatement	if ( found )		8016324	16					
ANR	8016409	Condition	found	137:8:3774:3778	8016324	0	True				
ANR	8016410	Identifier	found		8016324	0					
ANR	8016411	CompoundStatement		16:15:424:424	8016324	1					
ANR	8016412	ExpressionStatement	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"	138:8:3791:3846	8016324	0	True				
ANR	8016413	CallExpression	"dmprintf1 ( mem , ""%s "" , resident_table [ i ] . full_font_name )"		8016324	0					
ANR	8016414	Callee	dmprintf1		8016324	0					
ANR	8016415	Identifier	dmprintf1		8016324	0					
ANR	8016416	ArgumentList	mem		8016324	1					
ANR	8016417	Argument	mem		8016324	0					
ANR	8016418	Identifier	mem		8016324	0					
ANR	8016419	Argument	"""%s """		8016324	1					
ANR	8016420	PrimaryExpression	"""%s """		8016324	0					
ANR	8016421	Argument	resident_table [ i ] . full_font_name		8016324	2					
ANR	8016422	MemberAccess	resident_table [ i ] . full_font_name		8016324	0					
ANR	8016423	ArrayIndexing	resident_table [ i ]		8016324	0					
ANR	8016424	Identifier	resident_table		8016324	0					
ANR	8016425	Identifier	i		8016324	1					
ANR	8016426	Identifier	full_font_name		8016324	1					
ANR	8016427	ElseStatement	else		8016324	0					
ANR	8016428	CompoundStatement		18:11:502:502	8016324	0					
ANR	8016429	IfStatement	if ( pfont -> storage == pcds_internal )		8016324	0					
ANR	8016430	Condition	pfont -> storage == pcds_internal	140:12:3873:3903	8016324	0	True				
ANR	8016431	EqualityExpression	pfont -> storage == pcds_internal		8016324	0		==			
ANR	8016432	PtrMemberAccess	pfont -> storage		8016324	0					
ANR	8016433	Identifier	pfont		8016324	0					
ANR	8016434	Identifier	storage		8016324	1					
ANR	8016435	Identifier	pcds_internal		8016324	1					
ANR	8016436	CompoundStatement		19:45:549:549	8016324	1					
ANR	8016437	ExpressionStatement	"dmprintf ( mem , ""internal font not found in resident table"" )"	141:12:3920:3978	8016324	0	True				
ANR	8016438	CallExpression	"dmprintf ( mem , ""internal font not found in resident table"" )"		8016324	0					
ANR	8016439	Callee	dmprintf		8016324	0					
ANR	8016440	Identifier	dmprintf		8016324	0					
ANR	8016441	ArgumentList	mem		8016324	1					
ANR	8016442	Argument	mem		8016324	0					
ANR	8016443	Identifier	mem		8016324	0					
ANR	8016444	Argument	"""internal font not found in resident table"""		8016324	1					
ANR	8016445	PrimaryExpression	"""internal font not found in resident table"""		8016324	0					
ANR	8016446	ExpressionStatement	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"	142:12:3992:4032	8016324	1	True				
ANR	8016447	CallExpression	"dmprintf1 ( mem , ""%s\\n"" , pfont -> font_file )"		8016324	0					
ANR	8016448	Callee	dmprintf1		8016324	0					
ANR	8016449	Identifier	dmprintf1		8016324	0					
ANR	8016450	ArgumentList	mem		8016324	1					
ANR	8016451	Argument	mem		8016324	0					
ANR	8016452	Identifier	mem		8016324	0					
ANR	8016453	Argument	"""%s\\n"""		8016324	1					
ANR	8016454	PrimaryExpression	"""%s\\n"""		8016324	0					
ANR	8016455	Argument	pfont -> font_file		8016324	2					
ANR	8016456	PtrMemberAccess	pfont -> font_file		8016324	0					
ANR	8016457	Identifier	pfont		8016324	0					
ANR	8016458	Identifier	font_file		8016324	1					
ANR	8016459	ExpressionStatement	"dmprintf ( mem , ""external font "" )"	144:8:4052:4083	8016324	1	True				
ANR	8016460	CallExpression	"dmprintf ( mem , ""external font "" )"		8016324	0					
ANR	8016461	Callee	dmprintf		8016324	0					
ANR	8016462	Identifier	dmprintf		8016324	0					
ANR	8016463	ArgumentList	mem		8016324	1					
ANR	8016464	Argument	mem		8016324	0					
ANR	8016465	Identifier	mem		8016324	0					
ANR	8016466	Argument	"""external font """		8016324	1					
ANR	8016467	PrimaryExpression	"""external font """		8016324	0					
ANR	8016468	Statement	undef	146:1:4092:4096	8016324	17	True				
ANR	8016469	Statement	fontnames	146:7:4098:4106	8016324	18	True				
ANR	8016470	ReturnType	static void		8016324	1					
ANR	8016471	Identifier	dmprint_font_name		8016324	2					
ANR	8016472	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8016324	3					
ANR	8016473	Parameter	const gs_memory_t * mem	121:18:3306:3328	8016324	0	True				
ANR	8016474	ParameterType	const gs_memory_t *		8016324	0					
ANR	8016475	Identifier	mem		8016324	1					
ANR	8016476	Parameter	const pl_font_t * pfont	121:43:3331:3353	8016324	1	True				
ANR	8016477	ParameterType	const pl_font_t *		8016324	0					
ANR	8016478	Identifier	pfont		8016324	1					
ANR	8016479	CFGEntryNode	ENTRY		8016324		True				
ANR	8016480	CFGExitNode	EXIT		8016324		True				
ANR	8016481	Symbol	pcds_internal		8016324						
ANR	8016482	Symbol	pfont		8016324						
ANR	8016483	Symbol	pfont -> params		8016324						
ANR	8016484	Symbol	false		8016324						
ANR	8016485	Symbol	i		8016324						
ANR	8016486	Symbol	* resident_table		8016324						
ANR	8016487	Symbol	& resident_table [ i ] . params		8016324						
ANR	8016488	Symbol	resident_table [ i ] . full_font_name		8016324						
ANR	8016489	Symbol	strlen		8016324						
ANR	8016490	Symbol	* pfont		8016324						
ANR	8016491	Symbol	found		8016324						
ANR	8016492	Symbol	* i		8016324						
ANR	8016493	Symbol	memcmp		8016324						
ANR	8016494	Symbol	mem		8016324						
ANR	8016495	Symbol	pfont -> storage		8016324						
ANR	8016496	Symbol	true		8016324						
ANR	8016497	Symbol	pfont -> font_file		8016324						
ANR	8016498	Symbol	& pfont -> params		8016324						
ANR	8016499	Symbol	resident_table		8016324						
ANR	8016500	Function	dmprint_font_t	149:0:4111:4591							
ANR	8016501	FunctionDef	"dmprint_font_t (const gs_memory_t * mem , const pl_font_t * pfont)"		8016500	0					
ANR	8016502	CompoundStatement		151:0:4188:4591	8016500	0					
ANR	8016503	IfStatement	if ( pfont -> scaling_technology == plfst_MicroType )		8016500	0					
ANR	8016504	Condition	pfont -> scaling_technology == plfst_MicroType	152:8:4198:4241	8016500	0	True				
ANR	8016505	EqualityExpression	pfont -> scaling_technology == plfst_MicroType		8016500	0		==			
ANR	8016506	PtrMemberAccess	pfont -> scaling_technology		8016500	0					
ANR	8016507	Identifier	pfont		8016500	0					
ANR	8016508	Identifier	scaling_technology		8016500	1					
ANR	8016509	Identifier	plfst_MicroType		8016500	1					
ANR	8016510	ExpressionStatement	"dmprint_ufst_font_name ( mem , pfont )"	153:8:4252:4286	8016500	1	True				
ANR	8016511	CallExpression	"dmprint_ufst_font_name ( mem , pfont )"		8016500	0					
ANR	8016512	Callee	dmprint_ufst_font_name		8016500	0					
ANR	8016513	Identifier	dmprint_ufst_font_name		8016500	0					
ANR	8016514	ArgumentList	mem		8016500	1					
ANR	8016515	Argument	mem		8016500	0					
ANR	8016516	Identifier	mem		8016500	0					
ANR	8016517	Argument	pfont		8016500	1					
ANR	8016518	Identifier	pfont		8016500	0					
ANR	8016519	ElseStatement	else		8016500	0					
ANR	8016520	ExpressionStatement	"dmprint_font_name ( mem , pfont )"	155:8:4305:4334	8016500	0	True				
ANR	8016521	CallExpression	"dmprint_font_name ( mem , pfont )"		8016500	0					
ANR	8016522	Callee	dmprint_font_name		8016500	0					
ANR	8016523	Identifier	dmprint_font_name		8016500	0					
ANR	8016524	ArgumentList	mem		8016500	1					
ANR	8016525	Argument	mem		8016500	0					
ANR	8016526	Identifier	mem		8016500	0					
ANR	8016527	Argument	pfont		8016500	1					
ANR	8016528	Identifier	pfont		8016500	0					
ANR	8016529	ExpressionStatement	"dmprintf3 ( mem , ""storage=%d scaling=%d type=%d "" , pfont -> storage , pfont -> scaling_technology , pfont -> font_type )"	157:4:4341:4464	8016500	1	True				
ANR	8016530	CallExpression	"dmprintf3 ( mem , ""storage=%d scaling=%d type=%d "" , pfont -> storage , pfont -> scaling_technology , pfont -> font_type )"		8016500	0					
ANR	8016531	Callee	dmprintf3		8016500	0					
ANR	8016532	Identifier	dmprintf3		8016500	0					
ANR	8016533	ArgumentList	mem		8016500	1					
ANR	8016534	Argument	mem		8016500	0					
ANR	8016535	Identifier	mem		8016500	0					
ANR	8016536	Argument	"""storage=%d scaling=%d type=%d """		8016500	1					
ANR	8016537	PrimaryExpression	"""storage=%d scaling=%d type=%d """		8016500	0					
ANR	8016538	Argument	pfont -> storage		8016500	2					
ANR	8016539	PtrMemberAccess	pfont -> storage		8016500	0					
ANR	8016540	Identifier	pfont		8016500	0					
ANR	8016541	Identifier	storage		8016500	1					
ANR	8016542	Argument	pfont -> scaling_technology		8016500	3					
ANR	8016543	PtrMemberAccess	pfont -> scaling_technology		8016500	0					
ANR	8016544	Identifier	pfont		8016500	0					
ANR	8016545	Identifier	scaling_technology		8016500	1					
ANR	8016546	Argument	pfont -> font_type		8016500	4					
ANR	8016547	PtrMemberAccess	pfont -> font_type		8016500	0					
ANR	8016548	Identifier	pfont		8016500	0					
ANR	8016549	Identifier	font_type		8016500	1					
ANR	8016550	ExpressionStatement	"dmprint_cc ( mem , pfont -> character_complement )"	159:4:4470:4514	8016500	2	True				
ANR	8016551	CallExpression	"dmprint_cc ( mem , pfont -> character_complement )"		8016500	0					
ANR	8016552	Callee	dmprint_cc		8016500	0					
ANR	8016553	Identifier	dmprint_cc		8016500	0					
ANR	8016554	ArgumentList	mem		8016500	1					
ANR	8016555	Argument	mem		8016500	0					
ANR	8016556	Identifier	mem		8016500	0					
ANR	8016557	Argument	pfont -> character_complement		8016500	1					
ANR	8016558	PtrMemberAccess	pfont -> character_complement		8016500	0					
ANR	8016559	Identifier	pfont		8016500	0					
ANR	8016560	Identifier	character_complement		8016500	1					
ANR	8016561	ExpressionStatement	"dmputs ( mem , "";\\n   "" )"	160:4:4520:4541	8016500	3	True				
ANR	8016562	CallExpression	"dmputs ( mem , "";\\n   "" )"		8016500	0					
ANR	8016563	Callee	dmputs		8016500	0					
ANR	8016564	Identifier	dmputs		8016500	0					
ANR	8016565	ArgumentList	mem		8016500	1					
ANR	8016566	Argument	mem		8016500	0					
ANR	8016567	Identifier	mem		8016500	0					
ANR	8016568	Argument	""";\\n   """		8016500	1					
ANR	8016569	PrimaryExpression	""";\\n   """		8016500	0					
ANR	8016570	ExpressionStatement	"dmprint_font_params_t ( mem , & pfont -> params )"	161:4:4547:4589	8016500	4	True				
ANR	8016571	CallExpression	"dmprint_font_params_t ( mem , & pfont -> params )"		8016500	0					
ANR	8016572	Callee	dmprint_font_params_t		8016500	0					
ANR	8016573	Identifier	dmprint_font_params_t		8016500	0					
ANR	8016574	ArgumentList	mem		8016500	1					
ANR	8016575	Argument	mem		8016500	0					
ANR	8016576	Identifier	mem		8016500	0					
ANR	8016577	Argument	& pfont -> params		8016500	1					
ANR	8016578	UnaryOperationExpression	& pfont -> params		8016500	0					
ANR	8016579	UnaryOperator	&		8016500	0					
ANR	8016580	PtrMemberAccess	pfont -> params		8016500	1					
ANR	8016581	Identifier	pfont		8016500	0					
ANR	8016582	Identifier	params		8016500	1					
ANR	8016583	ReturnType	static void		8016500	1					
ANR	8016584	Identifier	dmprint_font_t		8016500	2					
ANR	8016585	ParameterList	"const gs_memory_t * mem , const pl_font_t * pfont"		8016500	3					
ANR	8016586	Parameter	const gs_memory_t * mem	150:15:4138:4160	8016500	0	True				
ANR	8016587	ParameterType	const gs_memory_t *		8016500	0					
ANR	8016588	Identifier	mem		8016500	1					
ANR	8016589	Parameter	const pl_font_t * pfont	150:40:4163:4185	8016500	1	True				
ANR	8016590	ParameterType	const pl_font_t *		8016500	0					
ANR	8016591	Identifier	pfont		8016500	1					
ANR	8016592	CFGEntryNode	ENTRY		8016500		True				
ANR	8016593	CFGExitNode	EXIT		8016500		True				
ANR	8016594	Symbol	pfont -> scaling_technology		8016500						
ANR	8016595	Symbol	* pfont		8016500						
ANR	8016596	Symbol	plfst_MicroType		8016500						
ANR	8016597	Symbol	mem		8016500						
ANR	8016598	Symbol	pfont		8016500						
ANR	8016599	Symbol	pfont -> storage		8016500						
ANR	8016600	Symbol	pfont -> font_type		8016500						
ANR	8016601	Symbol	pfont -> character_complement		8016500						
ANR	8016602	Symbol	& pfont -> params		8016500						
ANR	8016603	Function	dmprint_font_map	164:0:4594:4949							
ANR	8016604	FunctionDef	"dmprint_font_map (const gs_memory_t * mem , const pl_symbol_map_t * pmap)"		8016603	0					
ANR	8016605	CompoundStatement		166:0:4678:4949	8016603	0					
ANR	8016606	IfStatement	if ( pmap != 0 )		8016603	0					
ANR	8016607	Condition	pmap != 0	167:8:4688:4696	8016603	0	True				
ANR	8016608	EqualityExpression	pmap != 0		8016603	0		!=			
ANR	8016609	Identifier	pmap		8016603	0					
ANR	8016610	PrimaryExpression	0		8016603	1					
ANR	8016611	ExpressionStatement	"dmprintf3 ( mem , ""selected symbol set id:%d type:%d format:%s\\n"" , pl_get_uint16 ( pmap -> id ) , pmap -> type , ( pmap -> format == 1 ? ""MSL"" : ""Unicode"" ) )"	168:8:4707:4884	8016603	1	True				
ANR	8016612	CallExpression	"dmprintf3 ( mem , ""selected symbol set id:%d type:%d format:%s\\n"" , pl_get_uint16 ( pmap -> id ) , pmap -> type , ( pmap -> format == 1 ? ""MSL"" : ""Unicode"" ) )"		8016603	0					
ANR	8016613	Callee	dmprintf3		8016603	0					
ANR	8016614	Identifier	dmprintf3		8016603	0					
ANR	8016615	ArgumentList	mem		8016603	1					
ANR	8016616	Argument	mem		8016603	0					
ANR	8016617	Identifier	mem		8016603	0					
ANR	8016618	Argument	"""selected symbol set id:%d type:%d format:%s\\n"""		8016603	1					
ANR	8016619	PrimaryExpression	"""selected symbol set id:%d type:%d format:%s\\n"""		8016603	0					
ANR	8016620	Argument	pl_get_uint16 ( pmap -> id )		8016603	2					
ANR	8016621	CallExpression	pl_get_uint16 ( pmap -> id )		8016603	0					
ANR	8016622	Callee	pl_get_uint16		8016603	0					
ANR	8016623	Identifier	pl_get_uint16		8016603	0					
ANR	8016624	ArgumentList	pmap -> id		8016603	1					
ANR	8016625	Argument	pmap -> id		8016603	0					
ANR	8016626	PtrMemberAccess	pmap -> id		8016603	0					
ANR	8016627	Identifier	pmap		8016603	0					
ANR	8016628	Identifier	id		8016603	1					
ANR	8016629	Argument	pmap -> type		8016603	3					
ANR	8016630	PtrMemberAccess	pmap -> type		8016603	0					
ANR	8016631	Identifier	pmap		8016603	0					
ANR	8016632	Identifier	type		8016603	1					
ANR	8016633	Argument	"pmap -> format == 1 ? ""MSL"" : ""Unicode"""		8016603	4					
ANR	8016634	ConditionalExpression	"pmap -> format == 1 ? ""MSL"" : ""Unicode"""		8016603	0					
ANR	8016635	Condition	pmap -> format == 1		8016603	0					
ANR	8016636	EqualityExpression	pmap -> format == 1		8016603	0		==			
ANR	8016637	PtrMemberAccess	pmap -> format		8016603	0					
ANR	8016638	Identifier	pmap		8016603	0					
ANR	8016639	Identifier	format		8016603	1					
ANR	8016640	PrimaryExpression	1		8016603	1					
ANR	8016641	PrimaryExpression	"""MSL"""		8016603	1					
ANR	8016642	PrimaryExpression	"""Unicode"""		8016603	2					
ANR	8016643	ElseStatement	else		8016603	0					
ANR	8016644	ExpressionStatement	"dmprintf ( mem , ""selected symbol set NULL\\n"" )"	172:8:4903:4946	8016603	0	True				
ANR	8016645	CallExpression	"dmprintf ( mem , ""selected symbol set NULL\\n"" )"		8016603	0					
ANR	8016646	Callee	dmprintf		8016603	0					
ANR	8016647	Identifier	dmprintf		8016603	0					
ANR	8016648	ArgumentList	mem		8016603	1					
ANR	8016649	Argument	mem		8016603	0					
ANR	8016650	Identifier	mem		8016603	0					
ANR	8016651	Argument	"""selected symbol set NULL\\n"""		8016603	1					
ANR	8016652	PrimaryExpression	"""selected symbol set NULL\\n"""		8016603	0					
ANR	8016653	ReturnType	static void		8016603	1					
ANR	8016654	Identifier	dmprint_font_map		8016603	2					
ANR	8016655	ParameterList	"const gs_memory_t * mem , const pl_symbol_map_t * pmap"		8016603	3					
ANR	8016656	Parameter	const gs_memory_t * mem	165:17:4623:4645	8016603	0	True				
ANR	8016657	ParameterType	const gs_memory_t *		8016603	0					
ANR	8016658	Identifier	mem		8016603	1					
ANR	8016659	Parameter	const pl_symbol_map_t * pmap	165:42:4648:4675	8016603	1	True				
ANR	8016660	ParameterType	const pl_symbol_map_t *		8016603	0					
ANR	8016661	Identifier	pmap		8016603	1					
ANR	8016662	CFGEntryNode	ENTRY		8016603		True				
ANR	8016663	CFGExitNode	EXIT		8016603		True				
ANR	8016664	Symbol	* pmap		8016603						
ANR	8016665	Symbol	pl_get_uint16		8016603						
ANR	8016666	Symbol	mem		8016603						
ANR	8016667	Symbol	pmap -> id		8016603						
ANR	8016668	Symbol	pmap -> type		8016603						
ANR	8016669	Symbol	pmap -> format		8016603						
ANR	8016670	Symbol	pmap		8016603						
ANR	8016671	Function	dmprintf_font_scoring	176:0:4952:5407							
ANR	8016672	FunctionDef	"dmprintf_font_scoring (const gs_memory_t * mem , const char * type , const pl_font_t * pfont , pl_symbol_map_t * pmap , match_score_t score)"		8016671	0					
ANR	8016673	CompoundStatement		180:0:5143:5407	8016671	0					
ANR	8016674	IdentifierDeclStatement	int i ;	181:4:5149:5154	8016671	0	True				
ANR	8016675	IdentifierDecl	i		8016671	0					
ANR	8016676	IdentifierDeclType	int		8016671	0					
ANR	8016677	Identifier	i		8016671	1					
ANR	8016678	ExpressionStatement	"dmprintf1 ( mem , ""%s: "" , type )"	183:4:5161:5189	8016671	1	True				
ANR	8016679	CallExpression	"dmprintf1 ( mem , ""%s: "" , type )"		8016671	0					
ANR	8016680	Callee	dmprintf1		8016671	0					
ANR	8016681	Identifier	dmprintf1		8016671	0					
ANR	8016682	ArgumentList	mem		8016671	1					
ANR	8016683	Argument	mem		8016671	0					
ANR	8016684	Identifier	mem		8016671	0					
ANR	8016685	Argument	"""%s: """		8016671	1					
ANR	8016686	PrimaryExpression	"""%s: """		8016671	0					
ANR	8016687	Argument	type		8016671	2					
ANR	8016688	Identifier	type		8016671	0					
ANR	8016689	ExpressionStatement	"dmprint_font_t ( mem , pfont )"	184:4:5195:5221	8016671	2	True				
ANR	8016690	CallExpression	"dmprint_font_t ( mem , pfont )"		8016671	0					
ANR	8016691	Callee	dmprint_font_t		8016671	0					
ANR	8016692	Identifier	dmprint_font_t		8016671	0					
ANR	8016693	ArgumentList	mem		8016671	1					
ANR	8016694	Argument	mem		8016671	0					
ANR	8016695	Identifier	mem		8016671	0					
ANR	8016696	Argument	pfont		8016671	1					
ANR	8016697	Identifier	pfont		8016671	0					
ANR	8016698	ExpressionStatement	"dmprint_font_map ( mem , pmap )"	185:4:5227:5254	8016671	3	True				
ANR	8016699	CallExpression	"dmprint_font_map ( mem , pmap )"		8016671	0					
ANR	8016700	Callee	dmprint_font_map		8016671	0					
ANR	8016701	Identifier	dmprint_font_map		8016671	0					
ANR	8016702	ArgumentList	mem		8016671	1					
ANR	8016703	Argument	mem		8016671	0					
ANR	8016704	Identifier	mem		8016671	0					
ANR	8016705	Argument	pmap		8016671	1					
ANR	8016706	Identifier	pmap		8016671	0					
ANR	8016707	ExpressionStatement	"dmputs ( mem , ""   score:"" )"	186:4:5260:5284	8016671	4	True				
ANR	8016708	CallExpression	"dmputs ( mem , ""   score:"" )"		8016671	0					
ANR	8016709	Callee	dmputs		8016671	0					
ANR	8016710	Identifier	dmputs		8016671	0					
ANR	8016711	ArgumentList	mem		8016671	1					
ANR	8016712	Argument	mem		8016671	0					
ANR	8016713	Identifier	mem		8016671	0					
ANR	8016714	Argument	"""   score:"""		8016671	1					
ANR	8016715	PrimaryExpression	"""   score:"""		8016671	0					
ANR	8016716	ForStatement	for ( i = 0 ; i < score_limit ; ++ i )		8016671	5					
ANR	8016717	ForInit	i = 0 ;	187:9:5295:5300	8016671	0	True				
ANR	8016718	AssignmentExpression	i = 0		8016671	0		=			
ANR	8016719	Identifier	i		8016671	0					
ANR	8016720	PrimaryExpression	0		8016671	1					
ANR	8016721	Condition	i < score_limit	187:16:5302:5316	8016671	1	True				
ANR	8016722	RelationalExpression	i < score_limit		8016671	0		<			
ANR	8016723	Identifier	i		8016671	0					
ANR	8016724	Identifier	score_limit		8016671	1					
ANR	8016725	UnaryExpression	++ i	187:33:5319:5321	8016671	2	True				
ANR	8016726	IncDec	++		8016671	0					
ANR	8016727	Identifier	i		8016671	1					
ANR	8016728	ExpressionStatement	"dmprintf2 ( mem , "" %s: %d"" , score_name [ i ] , score [ i ] )"	188:8:5332:5382	8016671	3	True				
ANR	8016729	CallExpression	"dmprintf2 ( mem , "" %s: %d"" , score_name [ i ] , score [ i ] )"		8016671	0					
ANR	8016730	Callee	dmprintf2		8016671	0					
ANR	8016731	Identifier	dmprintf2		8016671	0					
ANR	8016732	ArgumentList	mem		8016671	1					
ANR	8016733	Argument	mem		8016671	0					
ANR	8016734	Identifier	mem		8016671	0					
ANR	8016735	Argument	""" %s: %d"""		8016671	1					
ANR	8016736	PrimaryExpression	""" %s: %d"""		8016671	0					
ANR	8016737	Argument	score_name [ i ]		8016671	2					
ANR	8016738	ArrayIndexing	score_name [ i ]		8016671	0					
ANR	8016739	Identifier	score_name		8016671	0					
ANR	8016740	Identifier	i		8016671	1					
ANR	8016741	Argument	score [ i ]		8016671	3					
ANR	8016742	ArrayIndexing	score [ i ]		8016671	0					
ANR	8016743	Identifier	score		8016671	0					
ANR	8016744	Identifier	i		8016671	1					
ANR	8016745	ExpressionStatement	"dmputs ( mem , ""\\n"" )"	189:4:5388:5405	8016671	6	True				
ANR	8016746	CallExpression	"dmputs ( mem , ""\\n"" )"		8016671	0					
ANR	8016747	Callee	dmputs		8016671	0					
ANR	8016748	Identifier	dmputs		8016671	0					
ANR	8016749	ArgumentList	mem		8016671	1					
ANR	8016750	Argument	mem		8016671	0					
ANR	8016751	Identifier	mem		8016671	0					
ANR	8016752	Argument	"""\\n"""		8016671	1					
ANR	8016753	PrimaryExpression	"""\\n"""		8016671	0					
ANR	8016754	ReturnType	static void		8016671	1					
ANR	8016755	Identifier	dmprintf_font_scoring		8016671	2					
ANR	8016756	ParameterList	"const gs_memory_t * mem , const char * type , const pl_font_t * pfont , pl_symbol_map_t * pmap , match_score_t score"		8016671	3					
ANR	8016757	Parameter	const gs_memory_t * mem	177:22:4986:5008	8016671	0	True				
ANR	8016758	ParameterType	const gs_memory_t *		8016671	0					
ANR	8016759	Identifier	mem		8016671	1					
ANR	8016760	Parameter	const char * type	177:47:5011:5026	8016671	1	True				
ANR	8016761	ParameterType	const char *		8016671	0					
ANR	8016762	Identifier	type		8016671	1					
ANR	8016763	Parameter	const pl_font_t * pfont	178:22:5051:5073	8016671	2	True				
ANR	8016764	ParameterType	const pl_font_t *		8016671	0					
ANR	8016765	Identifier	pfont		8016671	1					
ANR	8016766	Parameter	pl_symbol_map_t * pmap	178:47:5076:5097	8016671	3	True				
ANR	8016767	ParameterType	pl_symbol_map_t *		8016671	0					
ANR	8016768	Identifier	pmap		8016671	1					
ANR	8016769	Parameter	match_score_t score	179:22:5122:5140	8016671	4	True				
ANR	8016770	ParameterType	match_score_t		8016671	0					
ANR	8016771	Identifier	score		8016671	1					
ANR	8016772	CFGEntryNode	ENTRY		8016671		True				
ANR	8016773	CFGExitNode	EXIT		8016671		True				
ANR	8016774	Symbol	score		8016671						
ANR	8016775	Symbol	* i		8016671						
ANR	8016776	Symbol	mem		8016671						
ANR	8016777	Symbol	score_limit		8016671						
ANR	8016778	Symbol	pfont		8016671						
ANR	8016779	Symbol	pmap		8016671						
ANR	8016780	Symbol	* score		8016671						
ANR	8016781	Symbol	i		8016671						
ANR	8016782	Symbol	type		8016671						
ANR	8016783	Symbol	score_name		8016671						
ANR	8016784	Symbol	* score_name		8016671						
ANR	8016785	Function	check_support	200:0:5796:7533							
ANR	8016786	FunctionDef	"check_support (const pcl_state_t * pcs , uint symbol_set , const pl_font_t * fp , pl_symbol_map_t * * mapp , bool id_selection)"		8016785	0					
ANR	8016787	CompoundStatement		203:0:5943:7533	8016785	0					
ANR	8016788	IdentifierDeclStatement	pl_glyph_vocabulary_t gv ;	204:4:5949:5973	8016785	0	True				
ANR	8016789	IdentifierDecl	gv		8016785	0					
ANR	8016790	IdentifierDeclType	pl_glyph_vocabulary_t		8016785	0					
ANR	8016791	Identifier	gv		8016785	1					
ANR	8016792	IdentifierDeclStatement	byte id [ 2 ] ;	205:4:5979:5989	8016785	1	True				
ANR	8016793	IdentifierDecl	id [ 2 ]		8016785	0					
ANR	8016794	IdentifierDeclType	byte [ 2 ]		8016785	0					
ANR	8016795	Identifier	id		8016785	1					
ANR	8016796	PrimaryExpression	2		8016785	2					
ANR	8016797	ExpressionStatement	id [ 0 ] = symbol_set >> 8	207:4:5996:6019	8016785	2	True				
ANR	8016798	AssignmentExpression	id [ 0 ] = symbol_set >> 8		8016785	0		=			
ANR	8016799	ArrayIndexing	id [ 0 ]		8016785	0					
ANR	8016800	Identifier	id		8016785	0					
ANR	8016801	PrimaryExpression	0		8016785	1					
ANR	8016802	ShiftExpression	symbol_set >> 8		8016785	1		>>			
ANR	8016803	Identifier	symbol_set		8016785	0					
ANR	8016804	PrimaryExpression	8		8016785	1					
ANR	8016805	ExpressionStatement	id [ 1 ] = symbol_set	208:4:6025:6043	8016785	3	True				
ANR	8016806	AssignmentExpression	id [ 1 ] = symbol_set		8016785	0		=			
ANR	8016807	ArrayIndexing	id [ 1 ]		8016785	0					
ANR	8016808	Identifier	id		8016785	0					
ANR	8016809	PrimaryExpression	1		8016785	1					
ANR	8016810	Identifier	symbol_set		8016785	1					
ANR	8016811	ExpressionStatement	gv = pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )	213:4:6214:6313	8016785	4	True				
ANR	8016812	AssignmentExpression	gv = pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )		8016785	0		=			
ANR	8016813	Identifier	gv		8016785	0					
ANR	8016814	ConditionalExpression	pl_font_is_bound ( fp ) ? plgv_Unicode : pl_complement_to_vocab ( fp -> character_complement )		8016785	1					
ANR	8016815	Condition	pl_font_is_bound ( fp )		8016785	0					
ANR	8016816	CallExpression	pl_font_is_bound ( fp )		8016785	0					
ANR	8016817	Callee	pl_font_is_bound		8016785	0					
ANR	8016818	Identifier	pl_font_is_bound		8016785	0					
ANR	8016819	ArgumentList	fp		8016785	1					
ANR	8016820	Argument	fp		8016785	0					
ANR	8016821	Identifier	fp		8016785	0					
ANR	8016822	Identifier	plgv_Unicode		8016785	1					
ANR	8016823	CallExpression	pl_complement_to_vocab ( fp -> character_complement )		8016785	2					
ANR	8016824	Callee	pl_complement_to_vocab		8016785	0					
ANR	8016825	Identifier	pl_complement_to_vocab		8016785	0					
ANR	8016826	ArgumentList	fp -> character_complement		8016785	1					
ANR	8016827	Argument	fp -> character_complement		8016785	0					
ANR	8016828	PtrMemberAccess	fp -> character_complement		8016785	0					
ANR	8016829	Identifier	fp		8016785	0					
ANR	8016830	Identifier	character_complement		8016785	1					
ANR	8016831	ExpressionStatement	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"	216:4:6320:6389	8016785	5	True				
ANR	8016832	AssignmentExpression	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8016785	0		=			
ANR	8016833	UnaryOperationExpression	* mapp		8016785	0					
ANR	8016834	UnaryOperator	*		8016785	0					
ANR	8016835	Identifier	mapp		8016785	1					
ANR	8016836	CallExpression	"pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8016785	1					
ANR	8016837	Callee	pcl_find_symbol_map		8016785	0					
ANR	8016838	Identifier	pcl_find_symbol_map		8016785	0					
ANR	8016839	ArgumentList	pcs		8016785	1					
ANR	8016840	Argument	pcs		8016785	0					
ANR	8016841	Identifier	pcs		8016785	0					
ANR	8016842	Argument	id		8016785	1					
ANR	8016843	Identifier	id		8016785	0					
ANR	8016844	Argument	gv		8016785	2					
ANR	8016845	Identifier	gv		8016785	0					
ANR	8016846	Argument	fp -> font_type == plft_16bit		8016785	3					
ANR	8016847	EqualityExpression	fp -> font_type == plft_16bit		8016785	0		==			
ANR	8016848	PtrMemberAccess	fp -> font_type		8016785	0					
ANR	8016849	Identifier	fp		8016785	0					
ANR	8016850	Identifier	font_type		8016785	1					
ANR	8016851	Identifier	plft_16bit		8016785	1					
ANR	8016852	IfStatement	if ( pl_font_is_bound ( fp ) )		8016785	6					
ANR	8016853	Condition	pl_font_is_bound ( fp )	218:8:6400:6419	8016785	0	True				
ANR	8016854	CallExpression	pl_font_is_bound ( fp )		8016785	0					
ANR	8016855	Callee	pl_font_is_bound		8016785	0					
ANR	8016856	Identifier	pl_font_is_bound		8016785	0					
ANR	8016857	ArgumentList	fp		8016785	1					
ANR	8016858	Argument	fp		8016785	0					
ANR	8016859	Identifier	fp		8016785	0					
ANR	8016860	ReturnStatement	return fp -> params . symbol_set == symbol_set ? 2 : 0 ;	219:8:6430:6480	8016785	1	True				
ANR	8016861	ConditionalExpression	fp -> params . symbol_set == symbol_set ? 2 : 0		8016785	0					
ANR	8016862	Condition	fp -> params . symbol_set == symbol_set		8016785	0					
ANR	8016863	EqualityExpression	fp -> params . symbol_set == symbol_set		8016785	0		==			
ANR	8016864	MemberAccess	fp -> params . symbol_set		8016785	0					
ANR	8016865	PtrMemberAccess	fp -> params		8016785	0					
ANR	8016866	Identifier	fp		8016785	0					
ANR	8016867	Identifier	params		8016785	1					
ANR	8016868	Identifier	symbol_set		8016785	1					
ANR	8016869	Identifier	symbol_set		8016785	1					
ANR	8016870	PrimaryExpression	2		8016785	1					
ANR	8016871	PrimaryExpression	0		8016785	2					
ANR	8016872	IfStatement	if ( * mapp == 0 )		8016785	7					
ANR	8016873	Condition	* mapp == 0	221:8:6491:6500	8016785	0	True				
ANR	8016874	EqualityExpression	* mapp == 0		8016785	0		==			
ANR	8016875	UnaryOperationExpression	* mapp		8016785	0					
ANR	8016876	UnaryOperator	*		8016785	0					
ANR	8016877	Identifier	mapp		8016785	1					
ANR	8016878	PrimaryExpression	0		8016785	1					
ANR	8016879	CompoundStatement		19:20:559:559	8016785	1					
ANR	8016880	IfStatement	if ( id_selection || pl_wide_encoding ( symbol_set ) )		8016785	0					
ANR	8016881	Condition	id_selection || pl_wide_encoding ( symbol_set )	225:12:6678:6721	8016785	0	True				
ANR	8016882	OrExpression	id_selection || pl_wide_encoding ( symbol_set )		8016785	0		||			
ANR	8016883	Identifier	id_selection		8016785	0					
ANR	8016884	CallExpression	pl_wide_encoding ( symbol_set )		8016785	1					
ANR	8016885	Callee	pl_wide_encoding		8016785	0					
ANR	8016886	Identifier	pl_wide_encoding		8016785	0					
ANR	8016887	ArgumentList	symbol_set		8016785	1					
ANR	8016888	Argument	symbol_set		8016785	0					
ANR	8016889	Identifier	symbol_set		8016785	0					
ANR	8016890	ReturnStatement	return 2 ;	226:12:6736:6744	8016785	1	True				
ANR	8016891	PrimaryExpression	2		8016785	0					
ANR	8016892	ElseStatement	else		8016785	0					
ANR	8016893	CompoundStatement		25:13:815:815	8016785	0					
ANR	8016894	IfStatement	if ( ! pl_font_is_bound ( fp ) )		8016785	0					
ANR	8016895	Condition	! pl_font_is_bound ( fp )	233:16:7004:7024	8016785	0	True				
ANR	8016896	UnaryOperationExpression	! pl_font_is_bound ( fp )		8016785	0					
ANR	8016897	UnaryOperator	!		8016785	0					
ANR	8016898	CallExpression	pl_font_is_bound ( fp )		8016785	1					
ANR	8016899	Callee	pl_font_is_bound		8016785	0					
ANR	8016900	Identifier	pl_font_is_bound		8016785	0					
ANR	8016901	ArgumentList	fp		8016785	1					
ANR	8016902	Argument	fp		8016785	0					
ANR	8016903	Identifier	fp		8016785	0					
ANR	8016904	CompoundStatement		31:39:1083:1083	8016785	1					
ANR	8016905	ExpressionStatement	id [ 0 ] = 0x01	234:16:7045:7057	8016785	0	True				
ANR	8016906	AssignmentExpression	id [ 0 ] = 0x01		8016785	0		=			
ANR	8016907	ArrayIndexing	id [ 0 ]		8016785	0					
ANR	8016908	Identifier	id		8016785	0					
ANR	8016909	PrimaryExpression	0		8016785	1					
ANR	8016910	PrimaryExpression	0x01		8016785	1					
ANR	8016911	ExpressionStatement	id [ 1 ] = 0x15	235:16:7075:7087	8016785	1	True				
ANR	8016912	AssignmentExpression	id [ 1 ] = 0x15		8016785	0		=			
ANR	8016913	ArrayIndexing	id [ 1 ]		8016785	0					
ANR	8016914	Identifier	id		8016785	0					
ANR	8016915	PrimaryExpression	1		8016785	1					
ANR	8016916	PrimaryExpression	0x15		8016785	1					
ANR	8016917	ExpressionStatement	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"	236:16:7105:7234	8016785	2	True				
ANR	8016918	AssignmentExpression	"* mapp = pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8016785	0		=			
ANR	8016919	UnaryOperationExpression	* mapp		8016785	0					
ANR	8016920	UnaryOperator	*		8016785	0					
ANR	8016921	Identifier	mapp		8016785	1					
ANR	8016922	CallExpression	"pcl_find_symbol_map ( pcs , id , gv , fp -> font_type == plft_16bit )"		8016785	1					
ANR	8016923	Callee	pcl_find_symbol_map		8016785	0					
ANR	8016924	Identifier	pcl_find_symbol_map		8016785	0					
ANR	8016925	ArgumentList	pcs		8016785	1					
ANR	8016926	Argument	pcs		8016785	0					
ANR	8016927	Identifier	pcs		8016785	0					
ANR	8016928	Argument	id		8016785	1					
ANR	8016929	Identifier	id		8016785	0					
ANR	8016930	Argument	gv		8016785	2					
ANR	8016931	Identifier	gv		8016785	0					
ANR	8016932	Argument	fp -> font_type == plft_16bit		8016785	3					
ANR	8016933	EqualityExpression	fp -> font_type == plft_16bit		8016785	0		==			
ANR	8016934	PtrMemberAccess	fp -> font_type		8016785	0					
ANR	8016935	Identifier	fp		8016785	0					
ANR	8016936	Identifier	font_type		8016785	1					
ANR	8016937	Identifier	plft_16bit		8016785	1					
ANR	8016938	ReturnStatement	return 1 ;	239:16:7252:7260	8016785	3	True				
ANR	8016939	PrimaryExpression	1		8016785	0					
ANR	8016940	ReturnStatement	return 0 ;	241:12:7288:7296	8016785	1	True				
ANR	8016941	PrimaryExpression	0		8016785	0					
ANR	8016942	IfStatement	"if ( pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement ) )"		8016785	8					
ANR	8016943	Condition	"pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement )"	245:8:7345:7460	8016785	0	True				
ANR	8016944	CallExpression	"pcl_check_symbol_support ( ( * mapp ) -> character_requirements , fp -> character_complement )"		8016785	0					
ANR	8016945	Callee	pcl_check_symbol_support		8016785	0					
ANR	8016946	Identifier	pcl_check_symbol_support		8016785	0					
ANR	8016947	ArgumentList	( * mapp ) -> character_requirements		8016785	1					
ANR	8016948	Argument	( * mapp ) -> character_requirements		8016785	0					
ANR	8016949	PtrMemberAccess	( * mapp ) -> character_requirements		8016785	0					
ANR	8016950	UnaryOperationExpression	* mapp		8016785	0					
ANR	8016951	UnaryOperator	*		8016785	0					
ANR	8016952	Identifier	mapp		8016785	1					
ANR	8016953	Identifier	character_requirements		8016785	1					
ANR	8016954	Argument	fp -> character_complement		8016785	1					
ANR	8016955	PtrMemberAccess	fp -> character_complement		8016785	0					
ANR	8016956	Identifier	fp		8016785	0					
ANR	8016957	Identifier	character_complement		8016785	1					
ANR	8016958	ReturnStatement	return 2 ;	247:8:7471:7479	8016785	1	True				
ANR	8016959	PrimaryExpression	2		8016785	0					
ANR	8016960	ElseStatement	else		8016785	0					
ANR	8016961	ReturnStatement	return 1 ;	249:8:7523:7531	8016785	0	True				
ANR	8016962	PrimaryExpression	1		8016785	0					
ANR	8016963	ReturnType	static int		8016785	1					
ANR	8016964	Identifier	check_support		8016785	2					
ANR	8016965	ParameterList	"const pcl_state_t * pcs , uint symbol_set , const pl_font_t * fp , pl_symbol_map_t * * mapp , bool id_selection"		8016785	3					
ANR	8016966	Parameter	const pcl_state_t * pcs	201:14:5821:5843	8016785	0	True				
ANR	8016967	ParameterType	const pcl_state_t *		8016785	0					
ANR	8016968	Identifier	pcs		8016785	1					
ANR	8016969	Parameter	uint symbol_set	201:39:5846:5860	8016785	1	True				
ANR	8016970	ParameterType	uint		8016785	0					
ANR	8016971	Identifier	symbol_set		8016785	1					
ANR	8016972	Parameter	const pl_font_t * fp	201:56:5863:5882	8016785	2	True				
ANR	8016973	ParameterType	const pl_font_t *		8016785	0					
ANR	8016974	Identifier	fp		8016785	1					
ANR	8016975	Parameter	pl_symbol_map_t * * mapp	202:14:5899:5921	8016785	3	True				
ANR	8016976	ParameterType	pl_symbol_map_t * *		8016785	0					
ANR	8016977	Identifier	mapp		8016785	1					
ANR	8016978	Parameter	bool id_selection	202:39:5924:5940	8016785	4	True				
ANR	8016979	ParameterType	bool		8016785	0					
ANR	8016980	Identifier	id_selection		8016785	1					
ANR	8016981	CFGEntryNode	ENTRY		8016785		True				
ANR	8016982	CFGExitNode	EXIT		8016785		True				
ANR	8016983	Symbol	plft_16bit		8016785						
ANR	8016984	Symbol	pcl_find_symbol_map		8016785						
ANR	8016985	Symbol	( * mapp ) -> character_requirements		8016785						
ANR	8016986	Symbol	pcs		8016785						
ANR	8016987	Symbol	* id		8016785						
ANR	8016988	Symbol	id_selection		8016785						
ANR	8016989	Symbol	mapp		8016785						
ANR	8016990	Symbol	fp -> font_type		8016785						
ANR	8016991	Symbol	fp		8016785						
ANR	8016992	Symbol	* mapp		8016785						
ANR	8016993	Symbol	gv		8016785						
ANR	8016994	Symbol	pl_font_is_bound		8016785						
ANR	8016995	Symbol	plgv_Unicode		8016785						
ANR	8016996	Symbol	pl_complement_to_vocab		8016785						
ANR	8016997	Symbol	* fp		8016785						
ANR	8016998	Symbol	pl_wide_encoding		8016785						
ANR	8016999	Symbol	pcl_check_symbol_support		8016785						
ANR	8017000	Symbol	fp -> character_complement		8016785						
ANR	8017001	Symbol	fp -> params . symbol_set		8016785						
ANR	8017002	Symbol	fp -> params		8016785						
ANR	8017003	Symbol	symbol_set		8016785						
ANR	8017004	Symbol	* * mapp		8016785						
ANR	8017005	Symbol	id		8016785						
ANR	8017006	Function	font_is_scalable_selection_wise	259:0:7831:7995							
ANR	8017007	FunctionDef	font_is_scalable_selection_wise (const pl_font_t * fp)		8017006	0					
ANR	8017008	CompoundStatement		261:0:7897:7995	8017006	0					
ANR	8017009	IfStatement	if ( INTERNAL_LPFONT )		8017006	0					
ANR	8017010	Condition	INTERNAL_LPFONT	262:8:7907:7921	8017006	0	True				
ANR	8017011	Identifier	INTERNAL_LPFONT		8017006	0					
ANR	8017012	ReturnStatement	return false ;	263:8:7932:7944	8017006	1	True				
ANR	8017013	Identifier	false		8017006	0					
ANR	8017014	ElseStatement	else		8017006	0					
ANR	8017015	ReturnStatement	return pl_font_is_scalable ( fp ) ;	265:8:7963:7993	8017006	0	True				
ANR	8017016	CallExpression	pl_font_is_scalable ( fp )		8017006	0					
ANR	8017017	Callee	pl_font_is_scalable		8017006	0					
ANR	8017018	Identifier	pl_font_is_scalable		8017006	0					
ANR	8017019	ArgumentList	fp		8017006	1					
ANR	8017020	Argument	fp		8017006	0					
ANR	8017021	Identifier	fp		8017006	0					
ANR	8017022	ReturnType	static bool		8017006	1					
ANR	8017023	Identifier	font_is_scalable_selection_wise		8017006	2					
ANR	8017024	ParameterList	const pl_font_t * fp		8017006	3					
ANR	8017025	Parameter	const pl_font_t * fp	260:32:7875:7894	8017006	0	True				
ANR	8017026	ParameterType	const pl_font_t *		8017006	0					
ANR	8017027	Identifier	fp		8017006	1					
ANR	8017028	CFGEntryNode	ENTRY		8017006		True				
ANR	8017029	CFGExitNode	EXIT		8017006		True				
ANR	8017030	Symbol	pl_font_is_scalable		8017006						
ANR	8017031	Symbol	false		8017006						
ANR	8017032	Symbol	fp		8017006						
ANR	8017033	Symbol	INTERNAL_LPFONT		8017006						
ANR	8017034	Function	score_match	270:0:8134:14734							
ANR	8017035	FunctionDef	"score_match (const pcl_state_t * pcs , const pcl_font_selection_t * pfs , const pl_font_t * fp , pl_symbol_map_t * * mapp , match_score_t score)"		8017034	0					
ANR	8017036	CompoundStatement		274:0:8309:14734	8017034	0					
ANR	8017037	IdentifierDeclStatement	int tscore ;	275:4:8315:8325	8017034	0	True				
ANR	8017038	IdentifierDecl	tscore		8017034	0					
ANR	8017039	IdentifierDeclType	int		8017034	0					
ANR	8017040	Identifier	tscore		8017034	1					
ANR	8017041	ExpressionStatement	"score [ score_symbol_set ] = check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"	279:4:8441:8534	8017034	1	True				
ANR	8017042	AssignmentExpression	"score [ score_symbol_set ] = check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"		8017034	0		=			
ANR	8017043	ArrayIndexing	score [ score_symbol_set ]		8017034	0					
ANR	8017044	Identifier	score		8017034	0					
ANR	8017045	Identifier	score_symbol_set		8017034	1					
ANR	8017046	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , fp , mapp , false )"		8017034	1					
ANR	8017047	Callee	check_support		8017034	0					
ANR	8017048	Identifier	check_support		8017034	0					
ANR	8017049	ArgumentList	pcs		8017034	1					
ANR	8017050	Argument	pcs		8017034	0					
ANR	8017051	Identifier	pcs		8017034	0					
ANR	8017052	Argument	pfs -> params . symbol_set		8017034	1					
ANR	8017053	MemberAccess	pfs -> params . symbol_set		8017034	0					
ANR	8017054	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017055	Identifier	pfs		8017034	0					
ANR	8017056	Identifier	params		8017034	1					
ANR	8017057	Identifier	symbol_set		8017034	1					
ANR	8017058	Argument	fp		8017034	2					
ANR	8017059	Identifier	fp		8017034	0					
ANR	8017060	Argument	mapp		8017034	3					
ANR	8017061	Identifier	mapp		8017034	0					
ANR	8017062	Argument	false		8017034	4					
ANR	8017063	Identifier	false		8017034	0					
ANR	8017064	ExpressionStatement	score [ score_spacing ] = pfs -> params . proportional_spacing == fp -> params . proportional_spacing	282:4:8563:8661	8017034	2	True				
ANR	8017065	AssignmentExpression	score [ score_spacing ] = pfs -> params . proportional_spacing == fp -> params . proportional_spacing		8017034	0		=			
ANR	8017066	ArrayIndexing	score [ score_spacing ]		8017034	0					
ANR	8017067	Identifier	score		8017034	0					
ANR	8017068	Identifier	score_spacing		8017034	1					
ANR	8017069	EqualityExpression	pfs -> params . proportional_spacing == fp -> params . proportional_spacing		8017034	1		==			
ANR	8017070	MemberAccess	pfs -> params . proportional_spacing		8017034	0					
ANR	8017071	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017072	Identifier	pfs		8017034	0					
ANR	8017073	Identifier	params		8017034	1					
ANR	8017074	Identifier	proportional_spacing		8017034	1					
ANR	8017075	MemberAccess	fp -> params . proportional_spacing		8017034	1					
ANR	8017076	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017077	Identifier	fp		8017034	0					
ANR	8017078	Identifier	params		8017034	1					
ANR	8017079	Identifier	proportional_spacing		8017034	1					
ANR	8017080	IfStatement	if ( pfs -> params . proportional_spacing )		8017034	3					
ANR	8017081	Condition	pfs -> params . proportional_spacing	289:8:8903:8934	8017034	0	True				
ANR	8017082	MemberAccess	pfs -> params . proportional_spacing		8017034	0					
ANR	8017083	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017084	Identifier	pfs		8017034	0					
ANR	8017085	Identifier	params		8017034	1					
ANR	8017086	Identifier	proportional_spacing		8017034	1					
ANR	8017087	ExpressionStatement	score [ score_pitch ] = 0	290:8:8945:8967	8017034	1	True				
ANR	8017088	AssignmentExpression	score [ score_pitch ] = 0		8017034	0		=			
ANR	8017089	ArrayIndexing	score [ score_pitch ]		8017034	0					
ANR	8017090	Identifier	score		8017034	0					
ANR	8017091	Identifier	score_pitch		8017034	1					
ANR	8017092	PrimaryExpression	0		8017034	1					
ANR	8017093	ElseStatement	else		8017034	0					
ANR	8017094	CompoundStatement		18:9:701:701	8017034	0					
ANR	8017095	IfStatement	if ( fp -> params . proportional_spacing )		8017034	0					
ANR	8017096	Condition	fp -> params . proportional_spacing	292:12:9074:9104	8017034	0	True				
ANR	8017097	MemberAccess	fp -> params . proportional_spacing		8017034	0					
ANR	8017098	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017099	Identifier	fp		8017034	0					
ANR	8017100	Identifier	params		8017034	1					
ANR	8017101	Identifier	proportional_spacing		8017034	1					
ANR	8017102	ExpressionStatement	score [ score_pitch ] = 0	294:12:9171:9193	8017034	1	True				
ANR	8017103	AssignmentExpression	score [ score_pitch ] = 0		8017034	0		=			
ANR	8017104	ArrayIndexing	score [ score_pitch ]		8017034	0					
ANR	8017105	Identifier	score		8017034	0					
ANR	8017106	Identifier	score_pitch		8017034	1					
ANR	8017107	PrimaryExpression	0		8017034	1					
ANR	8017108	ElseStatement	else		8017034	0					
ANR	8017109	CompoundStatement		23:12:912:1041	8017034	0					
ANR	8017110	IdentifierDeclStatement	int delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) ) ;	296:12:9222:9351	8017034	0	True				
ANR	8017111	IdentifierDecl	delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8017034	0					
ANR	8017112	IdentifierDeclType	int		8017034	0					
ANR	8017113	Identifier	delta		8017034	1					
ANR	8017114	AssignmentExpression	delta = ( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8017034	2		=			
ANR	8017115	Identifier	delta		8017034	0					
ANR	8017116	CastExpression	( int ) ( pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params ) )		8017034	1					
ANR	8017117	CastTarget	int		8017034	0					
ANR	8017118	AdditiveExpression	pl_fp_pitch_per_inch_x100 ( & fp -> params ) - pl_fp_pitch_per_inch_x100 ( & pfs -> params )		8017034	1		-			
ANR	8017119	CallExpression	pl_fp_pitch_per_inch_x100 ( & fp -> params )		8017034	0					
ANR	8017120	Callee	pl_fp_pitch_per_inch_x100		8017034	0					
ANR	8017121	Identifier	pl_fp_pitch_per_inch_x100		8017034	0					
ANR	8017122	ArgumentList	& fp -> params		8017034	1					
ANR	8017123	Argument	& fp -> params		8017034	0					
ANR	8017124	UnaryOperationExpression	& fp -> params		8017034	0					
ANR	8017125	UnaryOperator	&		8017034	0					
ANR	8017126	PtrMemberAccess	fp -> params		8017034	1					
ANR	8017127	Identifier	fp		8017034	0					
ANR	8017128	Identifier	params		8017034	1					
ANR	8017129	CallExpression	pl_fp_pitch_per_inch_x100 ( & pfs -> params )		8017034	1					
ANR	8017130	Callee	pl_fp_pitch_per_inch_x100		8017034	0					
ANR	8017131	Identifier	pl_fp_pitch_per_inch_x100		8017034	0					
ANR	8017132	ArgumentList	& pfs -> params		8017034	1					
ANR	8017133	Argument	& pfs -> params		8017034	0					
ANR	8017134	UnaryOperationExpression	& pfs -> params		8017034	0					
ANR	8017135	UnaryOperator	&		8017034	0					
ANR	8017136	PtrMemberAccess	pfs -> params		8017034	1					
ANR	8017137	Identifier	pfs		8017034	0					
ANR	8017138	Identifier	params		8017034	1					
ANR	8017139	IfStatement	if ( font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 ) )		8017034	1					
ANR	8017140	Condition	font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 )	301:16:9496:9552	8017034	0	True				
ANR	8017141	OrExpression	font_is_scalable_selection_wise ( fp ) || ( abs ( delta ) <= 10 )		8017034	0		||			
ANR	8017142	CallExpression	font_is_scalable_selection_wise ( fp )		8017034	0					
ANR	8017143	Callee	font_is_scalable_selection_wise		8017034	0					
ANR	8017144	Identifier	font_is_scalable_selection_wise		8017034	0					
ANR	8017145	ArgumentList	fp		8017034	1					
ANR	8017146	Argument	fp		8017034	0					
ANR	8017147	Identifier	fp		8017034	0					
ANR	8017148	RelationalExpression	abs ( delta ) <= 10		8017034	1		<=			
ANR	8017149	CallExpression	abs ( delta )		8017034	0					
ANR	8017150	Callee	abs		8017034	0					
ANR	8017151	Identifier	abs		8017034	0					
ANR	8017152	ArgumentList	delta		8017034	1					
ANR	8017153	Argument	delta		8017034	0					
ANR	8017154	Identifier	delta		8017034	0					
ANR	8017155	PrimaryExpression	10		8017034	1					
ANR	8017156	ExpressionStatement	score [ score_pitch ] = 0x2000000	302:16:9571:9601	8017034	1	True				
ANR	8017157	AssignmentExpression	score [ score_pitch ] = 0x2000000		8017034	0		=			
ANR	8017158	ArrayIndexing	score [ score_pitch ]		8017034	0					
ANR	8017159	Identifier	score		8017034	0					
ANR	8017160	Identifier	score_pitch		8017034	1					
ANR	8017161	PrimaryExpression	0x2000000		8017034	1					
ANR	8017162	ElseStatement	else		8017034	0					
ANR	8017163	IfStatement	if ( delta > 0 )		8017034	0					
ANR	8017164	Condition	delta > 0	303:21:9624:9632	8017034	0	True				
ANR	8017165	RelationalExpression	delta > 0		8017034	0		>			
ANR	8017166	Identifier	delta		8017034	0					
ANR	8017167	PrimaryExpression	0		8017034	1					
ANR	8017168	ExpressionStatement	score [ score_pitch ] = 0x2000000 - delta	304:16:9651:9689	8017034	1	True				
ANR	8017169	AssignmentExpression	score [ score_pitch ] = 0x2000000 - delta		8017034	0		=			
ANR	8017170	ArrayIndexing	score [ score_pitch ]		8017034	0					
ANR	8017171	Identifier	score		8017034	0					
ANR	8017172	Identifier	score_pitch		8017034	1					
ANR	8017173	AdditiveExpression	0x2000000 - delta		8017034	1		-			
ANR	8017174	PrimaryExpression	0x2000000		8017034	0					
ANR	8017175	Identifier	delta		8017034	1					
ANR	8017176	ElseStatement	else		8017034	0					
ANR	8017177	ExpressionStatement	score [ score_pitch ] = 0x1000000 + delta	306:16:9724:9762	8017034	0	True				
ANR	8017178	AssignmentExpression	score [ score_pitch ] = 0x1000000 + delta		8017034	0		=			
ANR	8017179	ArrayIndexing	score [ score_pitch ]		8017034	0					
ANR	8017180	Identifier	score		8017034	0					
ANR	8017181	Identifier	score_pitch		8017034	1					
ANR	8017182	AdditiveExpression	0x1000000 + delta		8017034	1		+			
ANR	8017183	PrimaryExpression	0x1000000		8017034	0					
ANR	8017184	Identifier	delta		8017034	1					
ANR	8017185	IfStatement	if ( font_is_scalable_selection_wise ( fp ) )		8017034	4					
ANR	8017186	Condition	font_is_scalable_selection_wise ( fp )	313:8:9983:10017	8017034	0	True				
ANR	8017187	CallExpression	font_is_scalable_selection_wise ( fp )		8017034	0					
ANR	8017188	Callee	font_is_scalable_selection_wise		8017034	0					
ANR	8017189	Identifier	font_is_scalable_selection_wise		8017034	0					
ANR	8017190	ArgumentList	fp		8017034	1					
ANR	8017191	Argument	fp		8017034	0					
ANR	8017192	Identifier	fp		8017034	0					
ANR	8017193	ExpressionStatement	score [ score_height ] = 0x1000000	314:8:10028:10059	8017034	1	True				
ANR	8017194	AssignmentExpression	score [ score_height ] = 0x1000000		8017034	0		=			
ANR	8017195	ArrayIndexing	score [ score_height ]		8017034	0					
ANR	8017196	Identifier	score		8017034	0					
ANR	8017197	Identifier	score_height		8017034	1					
ANR	8017198	PrimaryExpression	0x1000000		8017034	1					
ANR	8017199	ElseStatement	else		8017034	0					
ANR	8017200	CompoundStatement		43:8:1770:1835	8017034	0					
ANR	8017201	IdentifierDeclStatement	int delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths ) ;	316:8:10080:10145	8017034	0	True				
ANR	8017202	IdentifierDecl	delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8017034	0					
ANR	8017203	IdentifierDeclType	int		8017034	0					
ANR	8017204	Identifier	delta		8017034	1					
ANR	8017205	AssignmentExpression	delta = abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8017034	2		=			
ANR	8017206	Identifier	delta		8017034	0					
ANR	8017207	CallExpression	abs ( pfs -> params . height_4ths - fp -> params . height_4ths )		8017034	1					
ANR	8017208	Callee	abs		8017034	0					
ANR	8017209	Identifier	abs		8017034	0					
ANR	8017210	ArgumentList	pfs -> params . height_4ths - fp -> params . height_4ths		8017034	1					
ANR	8017211	Argument	pfs -> params . height_4ths - fp -> params . height_4ths		8017034	0					
ANR	8017212	AdditiveExpression	pfs -> params . height_4ths - fp -> params . height_4ths		8017034	0		-			
ANR	8017213	MemberAccess	pfs -> params . height_4ths		8017034	0					
ANR	8017214	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017215	Identifier	pfs		8017034	0					
ANR	8017216	Identifier	params		8017034	1					
ANR	8017217	Identifier	height_4ths		8017034	1					
ANR	8017218	MemberAccess	fp -> params . height_4ths		8017034	1					
ANR	8017219	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017220	Identifier	fp		8017034	0					
ANR	8017221	Identifier	params		8017034	1					
ANR	8017222	Identifier	height_4ths		8017034	1					
ANR	8017223	IfStatement	if ( delta <= 1 )		8017034	1					
ANR	8017224	Condition	delta <= 1	319:12:10229:10238	8017034	0	True				
ANR	8017225	RelationalExpression	delta <= 1		8017034	0		<=			
ANR	8017226	Identifier	delta		8017034	0					
ANR	8017227	PrimaryExpression	1		8017034	1					
ANR	8017228	ExpressionStatement	delta = 0	320:12:10253:10262	8017034	1	True				
ANR	8017229	AssignmentExpression	delta = 0		8017034	0		=			
ANR	8017230	Identifier	delta		8017034	0					
ANR	8017231	PrimaryExpression	0		8017034	1					
ANR	8017232	ExpressionStatement	score [ score_height ] = 0x1000000 - delta	321:8:10272:10311	8017034	2	True				
ANR	8017233	AssignmentExpression	score [ score_height ] = 0x1000000 - delta		8017034	0		=			
ANR	8017234	ArrayIndexing	score [ score_height ]		8017034	0					
ANR	8017235	Identifier	score		8017034	0					
ANR	8017236	Identifier	score_height		8017034	1					
ANR	8017237	AdditiveExpression	0x1000000 - delta		8017034	1		-			
ANR	8017238	PrimaryExpression	0x1000000		8017034	0					
ANR	8017239	Identifier	delta		8017034	1					
ANR	8017240	IfStatement	if ( ( pfs -> params . style & 31 ) == fp -> params . style )		8017034	5					
ANR	8017241	Condition	( pfs -> params . style & 31 ) == fp -> params . style	325:8:10349:10392	8017034	0	True				
ANR	8017242	EqualityExpression	( pfs -> params . style & 31 ) == fp -> params . style		8017034	0		==			
ANR	8017243	BitAndExpression	pfs -> params . style & 31		8017034	0		&			
ANR	8017244	MemberAccess	pfs -> params . style		8017034	0					
ANR	8017245	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017246	Identifier	pfs		8017034	0					
ANR	8017247	Identifier	params		8017034	1					
ANR	8017248	Identifier	style		8017034	1					
ANR	8017249	PrimaryExpression	31		8017034	1					
ANR	8017250	MemberAccess	fp -> params . style		8017034	1					
ANR	8017251	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017252	Identifier	fp		8017034	0					
ANR	8017253	Identifier	params		8017034	1					
ANR	8017254	Identifier	style		8017034	1					
ANR	8017255	ExpressionStatement	score [ score_style ] = 2	326:8:10403:10425	8017034	1	True				
ANR	8017256	AssignmentExpression	score [ score_style ] = 2		8017034	0		=			
ANR	8017257	ArrayIndexing	score [ score_style ]		8017034	0					
ANR	8017258	Identifier	score		8017034	0					
ANR	8017259	Identifier	score_style		8017034	1					
ANR	8017260	PrimaryExpression	2		8017034	1					
ANR	8017261	ElseStatement	else		8017034	0					
ANR	8017262	IfStatement	if ( fp -> params . style == 0 && pfs -> params . style != 0 )		8017034	0					
ANR	8017263	Condition	fp -> params . style == 0 && pfs -> params . style != 0	327:13:10440:10486	8017034	0	True				
ANR	8017264	AndExpression	fp -> params . style == 0 && pfs -> params . style != 0		8017034	0		&&			
ANR	8017265	EqualityExpression	fp -> params . style == 0		8017034	0		==			
ANR	8017266	MemberAccess	fp -> params . style		8017034	0					
ANR	8017267	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017268	Identifier	fp		8017034	0					
ANR	8017269	Identifier	params		8017034	1					
ANR	8017270	Identifier	style		8017034	1					
ANR	8017271	PrimaryExpression	0		8017034	1					
ANR	8017272	EqualityExpression	pfs -> params . style != 0		8017034	1		!=			
ANR	8017273	MemberAccess	pfs -> params . style		8017034	0					
ANR	8017274	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017275	Identifier	pfs		8017034	0					
ANR	8017276	Identifier	params		8017034	1					
ANR	8017277	Identifier	style		8017034	1					
ANR	8017278	PrimaryExpression	0		8017034	1					
ANR	8017279	ExpressionStatement	score [ score_style ] = 1	328:8:10497:10519	8017034	1	True				
ANR	8017280	AssignmentExpression	score [ score_style ] = 1		8017034	0		=			
ANR	8017281	ArrayIndexing	score [ score_style ]		8017034	0					
ANR	8017282	Identifier	score		8017034	0					
ANR	8017283	Identifier	score_style		8017034	1					
ANR	8017284	PrimaryExpression	1		8017034	1					
ANR	8017285	ElseStatement	else		8017034	0					
ANR	8017286	ExpressionStatement	score [ score_style ] = 0	330:8:10581:10603	8017034	0	True				
ANR	8017287	AssignmentExpression	score [ score_style ] = 0		8017034	0		=			
ANR	8017288	ArrayIndexing	score [ score_style ]		8017034	0					
ANR	8017289	Identifier	score		8017034	0					
ANR	8017290	Identifier	score_style		8017034	1					
ANR	8017291	PrimaryExpression	0		8017034	1					
ANR	8017292	CompoundStatement		68:8:2832:2853	8017034	6					
ANR	8017293	IdentifierDeclStatement	int fwt = fp -> params . stroke_weight ;	339:8:11053:11087	8017034	0	True				
ANR	8017294	IdentifierDecl	fwt = fp -> params . stroke_weight		8017034	0					
ANR	8017295	IdentifierDeclType	int		8017034	0					
ANR	8017296	Identifier	fwt		8017034	1					
ANR	8017297	AssignmentExpression	fwt = fp -> params . stroke_weight		8017034	2		=			
ANR	8017298	Identifier	fwt		8017034	0					
ANR	8017299	MemberAccess	fp -> params . stroke_weight		8017034	1					
ANR	8017300	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017301	Identifier	fp		8017034	0					
ANR	8017302	Identifier	params		8017034	1					
ANR	8017303	Identifier	stroke_weight		8017034	1					
ANR	8017304	IdentifierDeclStatement	int pwt = pfs -> params . stroke_weight ;	340:8:11097:11132	8017034	1	True				
ANR	8017305	IdentifierDecl	pwt = pfs -> params . stroke_weight		8017034	0					
ANR	8017306	IdentifierDeclType	int		8017034	0					
ANR	8017307	Identifier	pwt		8017034	1					
ANR	8017308	AssignmentExpression	pwt = pfs -> params . stroke_weight		8017034	2		=			
ANR	8017309	Identifier	pwt		8017034	0					
ANR	8017310	MemberAccess	pfs -> params . stroke_weight		8017034	1					
ANR	8017311	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017312	Identifier	pfs		8017034	0					
ANR	8017313	Identifier	params		8017034	1					
ANR	8017314	Identifier	stroke_weight		8017034	1					
ANR	8017315	IdentifierDeclStatement	int delta = pwt - fwt ;	341:8:11142:11163	8017034	2	True				
ANR	8017316	IdentifierDecl	delta = pwt - fwt		8017034	0					
ANR	8017317	IdentifierDeclType	int		8017034	0					
ANR	8017318	Identifier	delta		8017034	1					
ANR	8017319	AssignmentExpression	delta = pwt - fwt		8017034	2		=			
ANR	8017320	Identifier	delta		8017034	0					
ANR	8017321	AdditiveExpression	pwt - fwt		8017034	1		-			
ANR	8017322	Identifier	pwt		8017034	0					
ANR	8017323	Identifier	fwt		8017034	1					
ANR	8017324	IfStatement	if ( pwt >= 0 )		8017034	3					
ANR	8017325	Condition	pwt >= 0	344:12:11237:11244	8017034	0	True				
ANR	8017326	RelationalExpression	pwt >= 0		8017034	0		>=			
ANR	8017327	Identifier	pwt		8017034	0					
ANR	8017328	PrimaryExpression	0		8017034	1					
ANR	8017329	IfStatement	if ( fwt >= pwt )		8017034	1					
ANR	8017330	Condition	fwt >= pwt	345:16:11263:11272	8017034	0	True				
ANR	8017331	RelationalExpression	fwt >= pwt		8017034	0		>=			
ANR	8017332	Identifier	fwt		8017034	0					
ANR	8017333	Identifier	pwt		8017034	1					
ANR	8017334	ExpressionStatement	tscore = 21 + delta	346:16:11291:11310	8017034	1	True				
ANR	8017335	AssignmentExpression	tscore = 21 + delta		8017034	0		=			
ANR	8017336	Identifier	tscore		8017034	0					
ANR	8017337	AdditiveExpression	21 + delta		8017034	1		+			
ANR	8017338	PrimaryExpression	21		8017034	0					
ANR	8017339	Identifier	delta		8017034	1					
ANR	8017340	ElseStatement	else		8017034	0					
ANR	8017341	ExpressionStatement	tscore = 14 - delta	348:16:11345:11364	8017034	0	True				
ANR	8017342	AssignmentExpression	tscore = 14 - delta		8017034	0		=			
ANR	8017343	Identifier	tscore		8017034	0					
ANR	8017344	AdditiveExpression	14 - delta		8017034	1		-			
ANR	8017345	PrimaryExpression	14		8017034	0					
ANR	8017346	Identifier	delta		8017034	1					
ANR	8017347	ElseStatement	else		8017034	0					
ANR	8017348	IfStatement	if ( fwt <= pwt )		8017034	0					
ANR	8017349	Condition	fwt <= pwt	349:17:11383:11392	8017034	0	True				
ANR	8017350	RelationalExpression	fwt <= pwt		8017034	0		<=			
ANR	8017351	Identifier	fwt		8017034	0					
ANR	8017352	Identifier	pwt		8017034	1					
ANR	8017353	ExpressionStatement	tscore = 21 - delta	350:12:11407:11426	8017034	1	True				
ANR	8017354	AssignmentExpression	tscore = 21 - delta		8017034	0		=			
ANR	8017355	Identifier	tscore		8017034	0					
ANR	8017356	AdditiveExpression	21 - delta		8017034	1		-			
ANR	8017357	PrimaryExpression	21		8017034	0					
ANR	8017358	Identifier	delta		8017034	1					
ANR	8017359	ElseStatement	else		8017034	0					
ANR	8017360	ExpressionStatement	tscore = 14 + delta	352:12:11453:11472	8017034	0	True				
ANR	8017361	AssignmentExpression	tscore = 14 + delta		8017034	0		=			
ANR	8017362	Identifier	tscore		8017034	0					
ANR	8017363	AdditiveExpression	14 + delta		8017034	1		+			
ANR	8017364	PrimaryExpression	14		8017034	0					
ANR	8017365	Identifier	delta		8017034	1					
ANR	8017366	ExpressionStatement	score [ score_weight ] = tscore	353:8:11482:11510	8017034	4	True				
ANR	8017367	AssignmentExpression	score [ score_weight ] = tscore		8017034	0		=			
ANR	8017368	ArrayIndexing	score [ score_weight ]		8017034	0					
ANR	8017369	Identifier	score		8017034	0					
ANR	8017370	Identifier	score_weight		8017034	1					
ANR	8017371	Identifier	tscore		8017034	1					
ANR	8017372	IfStatement	if ( score [ score_style ] == 0 )		8017034	5					
ANR	8017373	Condition	score [ score_style ] == 0	367:12:12175:12197	8017034	0	True				
ANR	8017374	EqualityExpression	score [ score_style ] == 0		8017034	0		==			
ANR	8017375	ArrayIndexing	score [ score_style ]		8017034	0					
ANR	8017376	Identifier	score		8017034	0					
ANR	8017377	Identifier	score_style		8017034	1					
ANR	8017378	PrimaryExpression	0		8017034	1					
ANR	8017379	ExpressionStatement	score [ score_weight ] = 0	368:12:12212:12235	8017034	1	True				
ANR	8017380	AssignmentExpression	score [ score_weight ] = 0		8017034	0		=			
ANR	8017381	ArrayIndexing	score [ score_weight ]		8017034	0					
ANR	8017382	Identifier	score		8017034	0					
ANR	8017383	Identifier	score_weight		8017034	1					
ANR	8017384	PrimaryExpression	0		8017034	1					
ANR	8017385	CompoundStatement		100:8:3979:4047	8017034	7					
ANR	8017386	IdentifierDeclStatement	uint diff = pfs -> params . typeface_family - fp -> params . typeface_family ;	373:8:12289:12357	8017034	0	True				
ANR	8017387	IdentifierDecl	diff = pfs -> params . typeface_family - fp -> params . typeface_family		8017034	0					
ANR	8017388	IdentifierDeclType	uint		8017034	0					
ANR	8017389	Identifier	diff		8017034	1					
ANR	8017390	AssignmentExpression	diff = pfs -> params . typeface_family - fp -> params . typeface_family		8017034	2		=			
ANR	8017391	Identifier	diff		8017034	0					
ANR	8017392	AdditiveExpression	pfs -> params . typeface_family - fp -> params . typeface_family		8017034	1		-			
ANR	8017393	MemberAccess	pfs -> params . typeface_family		8017034	0					
ANR	8017394	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017395	Identifier	pfs		8017034	0					
ANR	8017396	Identifier	params		8017034	1					
ANR	8017397	Identifier	typeface_family		8017034	1					
ANR	8017398	MemberAccess	fp -> params . typeface_family		8017034	1					
ANR	8017399	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017400	Identifier	fp		8017034	0					
ANR	8017401	Identifier	params		8017034	1					
ANR	8017402	Identifier	typeface_family		8017034	1					
ANR	8017403	IfStatement	if ( diff == 0 )		8017034	1					
ANR	8017404	Condition	diff == 0	375:12:12372:12380	8017034	0	True				
ANR	8017405	EqualityExpression	diff == 0		8017034	0		==			
ANR	8017406	Identifier	diff		8017034	0					
ANR	8017407	PrimaryExpression	0		8017034	1					
ANR	8017408	ExpressionStatement	score [ score_typeface ] = 2	376:12:12395:12420	8017034	1	True				
ANR	8017409	AssignmentExpression	score [ score_typeface ] = 2		8017034	0		=			
ANR	8017410	ArrayIndexing	score [ score_typeface ]		8017034	0					
ANR	8017411	Identifier	score		8017034	0					
ANR	8017412	Identifier	score_typeface		8017034	1					
ANR	8017413	PrimaryExpression	2		8017034	1					
ANR	8017414	ElseStatement	else		8017034	0					
ANR	8017415	CompoundStatement		104:13:4125:4125	8017034	0					
ANR	8017416	ExpressionStatement	diff = ( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )	378:12:12449:12564	8017034	0	True				
ANR	8017417	AssignmentExpression	diff = ( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )		8017034	0		=			
ANR	8017418	Identifier	diff		8017034	0					
ANR	8017419	AdditiveExpression	( pfs -> params . typeface_family & 0xfff ) - ( fp -> params . typeface_family & 0xfff )		8017034	1		-			
ANR	8017420	BitAndExpression	pfs -> params . typeface_family & 0xfff		8017034	0		&			
ANR	8017421	MemberAccess	pfs -> params . typeface_family		8017034	0					
ANR	8017422	PtrMemberAccess	pfs -> params		8017034	0					
ANR	8017423	Identifier	pfs		8017034	0					
ANR	8017424	Identifier	params		8017034	1					
ANR	8017425	Identifier	typeface_family		8017034	1					
ANR	8017426	PrimaryExpression	0xfff		8017034	1					
ANR	8017427	BitAndExpression	fp -> params . typeface_family & 0xfff		8017034	1		&			
ANR	8017428	MemberAccess	fp -> params . typeface_family		8017034	0					
ANR	8017429	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017430	Identifier	fp		8017034	0					
ANR	8017431	Identifier	params		8017034	1					
ANR	8017432	Identifier	typeface_family		8017034	1					
ANR	8017433	PrimaryExpression	0xfff		8017034	1					
ANR	8017434	IfStatement	if ( diff == 0 )		8017034	1					
ANR	8017435	Condition	diff == 0	381:16:12582:12590	8017034	0	True				
ANR	8017436	EqualityExpression	diff == 0		8017034	0		==			
ANR	8017437	Identifier	diff		8017034	0					
ANR	8017438	PrimaryExpression	0		8017034	1					
ANR	8017439	ExpressionStatement	score [ score_typeface ] = 1	382:16:12609:12634	8017034	1	True				
ANR	8017440	AssignmentExpression	score [ score_typeface ] = 1		8017034	0		=			
ANR	8017441	ArrayIndexing	score [ score_typeface ]		8017034	0					
ANR	8017442	Identifier	score		8017034	0					
ANR	8017443	Identifier	score_typeface		8017034	1					
ANR	8017444	PrimaryExpression	1		8017034	1					
ANR	8017445	ElseStatement	else		8017034	0					
ANR	8017446	ExpressionStatement	score [ score_typeface ] = 0	384:16:12669:12694	8017034	0	True				
ANR	8017447	AssignmentExpression	score [ score_typeface ] = 0		8017034	0		=			
ANR	8017448	ArrayIndexing	score [ score_typeface ]		8017034	0					
ANR	8017449	Identifier	score		8017034	0					
ANR	8017450	Identifier	score_typeface		8017034	1					
ANR	8017451	PrimaryExpression	0		8017034	1					
ANR	8017452	IfStatement	if ( fp -> storage & pcds_downloaded )		8017034	8					
ANR	8017453	Condition	fp -> storage & pcds_downloaded	396:8:13194:13222	8017034	0	True				
ANR	8017454	BitAndExpression	fp -> storage & pcds_downloaded		8017034	0		&			
ANR	8017455	PtrMemberAccess	fp -> storage		8017034	0					
ANR	8017456	Identifier	fp		8017034	0					
ANR	8017457	Identifier	storage		8017034	1					
ANR	8017458	Identifier	pcds_downloaded		8017034	1					
ANR	8017459	ExpressionStatement	tscore = 1 << ( pcds_cartridge_max + 1 )	397:8:13233:13271	8017034	1	True				
ANR	8017460	AssignmentExpression	tscore = 1 << ( pcds_cartridge_max + 1 )		8017034	0		=			
ANR	8017461	Identifier	tscore		8017034	0					
ANR	8017462	ShiftExpression	1 << ( pcds_cartridge_max + 1 )		8017034	1		<<			
ANR	8017463	PrimaryExpression	1		8017034	0					
ANR	8017464	AdditiveExpression	pcds_cartridge_max + 1		8017034	1		+			
ANR	8017465	Identifier	pcds_cartridge_max		8017034	0					
ANR	8017466	PrimaryExpression	1		8017034	1					
ANR	8017467	ElseStatement	else		8017034	0					
ANR	8017468	IfStatement	if ( fp -> storage & pcds_all_cartridges )		8017034	0					
ANR	8017469	Condition	fp -> storage & pcds_all_cartridges	398:13:13286:13318	8017034	0	True				
ANR	8017470	BitAndExpression	fp -> storage & pcds_all_cartridges		8017034	0		&			
ANR	8017471	PtrMemberAccess	fp -> storage		8017034	0					
ANR	8017472	Identifier	fp		8017034	0					
ANR	8017473	Identifier	storage		8017034	1					
ANR	8017474	Identifier	pcds_all_cartridges		8017034	1					
ANR	8017475	ExpressionStatement	tscore = ( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )	399:8:13329:13415	8017034	1	True				
ANR	8017476	AssignmentExpression	tscore = ( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )		8017034	0		=			
ANR	8017477	Identifier	tscore		8017034	0					
ANR	8017478	ShiftExpression	( fp -> storage & pcds_all_cartridges ) >> ( pcds_cartridge_shift - 1 )		8017034	1		>>			
ANR	8017479	BitAndExpression	fp -> storage & pcds_all_cartridges		8017034	0		&			
ANR	8017480	PtrMemberAccess	fp -> storage		8017034	0					
ANR	8017481	Identifier	fp		8017034	0					
ANR	8017482	Identifier	storage		8017034	1					
ANR	8017483	Identifier	pcds_all_cartridges		8017034	1					
ANR	8017484	AdditiveExpression	pcds_cartridge_shift - 1		8017034	1		-			
ANR	8017485	Identifier	pcds_cartridge_shift		8017034	0					
ANR	8017486	PrimaryExpression	1		8017034	1					
ANR	8017487	ElseStatement	else		8017034	0					
ANR	8017488	ExpressionStatement	tscore = ( fp -> storage & pcds_all_simms ) ? 1 : 0	403:8:13491:13538	8017034	0	True				
ANR	8017489	AssignmentExpression	tscore = ( fp -> storage & pcds_all_simms ) ? 1 : 0		8017034	0		=			
ANR	8017490	Identifier	tscore		8017034	0					
ANR	8017491	ConditionalExpression	( fp -> storage & pcds_all_simms ) ? 1 : 0		8017034	1					
ANR	8017492	Condition	fp -> storage & pcds_all_simms		8017034	0					
ANR	8017493	BitAndExpression	fp -> storage & pcds_all_simms		8017034	0		&			
ANR	8017494	PtrMemberAccess	fp -> storage		8017034	0					
ANR	8017495	Identifier	fp		8017034	0					
ANR	8017496	Identifier	storage		8017034	1					
ANR	8017497	Identifier	pcds_all_simms		8017034	1					
ANR	8017498	PrimaryExpression	1		8017034	1					
ANR	8017499	PrimaryExpression	0		8017034	2					
ANR	8017500	ExpressionStatement	score [ score_location ] = tscore	404:4:13544:13574	8017034	9	True				
ANR	8017501	AssignmentExpression	score [ score_location ] = tscore		8017034	0		=			
ANR	8017502	ArrayIndexing	score [ score_location ]		8017034	0					
ANR	8017503	Identifier	score		8017034	0					
ANR	8017504	Identifier	score_location		8017034	1					
ANR	8017505	Identifier	tscore		8017034	1					
ANR	8017506	IfStatement	if ( fp -> scaling_technology != plfst_bitmap )		8017034	10					
ANR	8017507	Condition	fp -> scaling_technology != plfst_bitmap	407:8:13611:13648	8017034	0	True				
ANR	8017508	EqualityExpression	fp -> scaling_technology != plfst_bitmap		8017034	0		!=			
ANR	8017509	PtrMemberAccess	fp -> scaling_technology		8017034	0					
ANR	8017510	Identifier	fp		8017034	0					
ANR	8017511	Identifier	scaling_technology		8017034	1					
ANR	8017512	Identifier	plfst_bitmap		8017034	1					
ANR	8017513	ExpressionStatement	score [ score_orientation ] = 1	408:8:13659:13687	8017034	1	True				
ANR	8017514	AssignmentExpression	score [ score_orientation ] = 1		8017034	0		=			
ANR	8017515	ArrayIndexing	score [ score_orientation ]		8017034	0					
ANR	8017516	Identifier	score		8017034	0					
ANR	8017517	Identifier	score_orientation		8017034	1					
ANR	8017518	PrimaryExpression	1		8017034	1					
ANR	8017519	ElseStatement	else		8017034	0					
ANR	8017520	CompoundStatement		137:8:5398:5457	8017034	0					
ANR	8017521	IdentifierDeclStatement	pcl_font_header_t * fhp = ( pcl_font_header_t * ) ( fp -> header ) ;	410:8:13708:13767	8017034	0	True				
ANR	8017522	IdentifierDecl	* fhp = ( pcl_font_header_t * ) ( fp -> header )		8017034	0					
ANR	8017523	IdentifierDeclType	pcl_font_header_t *		8017034	0					
ANR	8017524	Identifier	fhp		8017034	1					
ANR	8017525	AssignmentExpression	* fhp = ( pcl_font_header_t * ) ( fp -> header )		8017034	2		=			
ANR	8017526	Identifier	fhp		8017034	0					
ANR	8017527	CastExpression	( pcl_font_header_t * ) ( fp -> header )		8017034	1					
ANR	8017528	CastTarget	pcl_font_header_t *		8017034	0					
ANR	8017529	PtrMemberAccess	fp -> header		8017034	1					
ANR	8017530	Identifier	fp		8017034	0					
ANR	8017531	Identifier	header		8017034	1					
ANR	8017532	ExpressionStatement	score [ score_orientation ] = fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0	412:8:13778:13871	8017034	1	True				
ANR	8017533	AssignmentExpression	score [ score_orientation ] = fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0		8017034	0		=			
ANR	8017534	ArrayIndexing	score [ score_orientation ]		8017034	0					
ANR	8017535	Identifier	score		8017034	0					
ANR	8017536	Identifier	score_orientation		8017034	1					
ANR	8017537	ConditionalExpression	fhp ? fhp -> Orientation == pcs -> xfm_state . lp_orient : 0		8017034	1					
ANR	8017538	Condition	fhp		8017034	0					
ANR	8017539	Identifier	fhp		8017034	0					
ANR	8017540	EqualityExpression	fhp -> Orientation == pcs -> xfm_state . lp_orient		8017034	1		==			
ANR	8017541	PtrMemberAccess	fhp -> Orientation		8017034	0					
ANR	8017542	Identifier	fhp		8017034	0					
ANR	8017543	Identifier	Orientation		8017034	1					
ANR	8017544	MemberAccess	pcs -> xfm_state . lp_orient		8017034	1					
ANR	8017545	PtrMemberAccess	pcs -> xfm_state		8017034	0					
ANR	8017546	Identifier	pcs		8017034	0					
ANR	8017547	Identifier	xfm_state		8017034	1					
ANR	8017548	Identifier	lp_orient		8017034	1					
ANR	8017549	PrimaryExpression	0		8017034	2					
ANR	8017550	IfStatement	if ( INTERNAL_LPFONT )		8017034	11					
ANR	8017551	Condition	INTERNAL_LPFONT	424:8:14195:14209	8017034	0	True				
ANR	8017552	Identifier	INTERNAL_LPFONT		8017034	0					
ANR	8017553	ExpressionStatement	score [ score_fontnumber ] = 0x100000 - fp -> params . typeface_family	425:8:14220:14283	8017034	1	True				
ANR	8017554	AssignmentExpression	score [ score_fontnumber ] = 0x100000 - fp -> params . typeface_family		8017034	0		=			
ANR	8017555	ArrayIndexing	score [ score_fontnumber ]		8017034	0					
ANR	8017556	Identifier	score		8017034	0					
ANR	8017557	Identifier	score_fontnumber		8017034	1					
ANR	8017558	AdditiveExpression	0x100000 - fp -> params . typeface_family		8017034	1		-			
ANR	8017559	PrimaryExpression	0x100000		8017034	0					
ANR	8017560	MemberAccess	fp -> params . typeface_family		8017034	1					
ANR	8017561	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017562	Identifier	fp		8017034	0					
ANR	8017563	Identifier	params		8017034	1					
ANR	8017564	Identifier	typeface_family		8017034	1					
ANR	8017565	ElseStatement	else		8017034	0					
ANR	8017566	ExpressionStatement	score [ score_fontnumber ] = 0x200000 - fp -> params . typeface_family	427:8:14302:14365	8017034	0	True				
ANR	8017567	AssignmentExpression	score [ score_fontnumber ] = 0x200000 - fp -> params . typeface_family		8017034	0		=			
ANR	8017568	ArrayIndexing	score [ score_fontnumber ]		8017034	0					
ANR	8017569	Identifier	score		8017034	0					
ANR	8017570	Identifier	score_fontnumber		8017034	1					
ANR	8017571	AdditiveExpression	0x200000 - fp -> params . typeface_family		8017034	1		-			
ANR	8017572	PrimaryExpression	0x200000		8017034	0					
ANR	8017573	MemberAccess	fp -> params . typeface_family		8017034	1					
ANR	8017574	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017575	Identifier	fp		8017034	0					
ANR	8017576	Identifier	params		8017034	1					
ANR	8017577	Identifier	typeface_family		8017034	1					
ANR	8017578	ExpressionStatement	score [ score_pjl_fontnumber ] = - fp -> params . pjl_font_number	435:4:14552:14609	8017034	12	True				
ANR	8017579	AssignmentExpression	score [ score_pjl_fontnumber ] = - fp -> params . pjl_font_number		8017034	0		=			
ANR	8017580	ArrayIndexing	score [ score_pjl_fontnumber ]		8017034	0					
ANR	8017581	Identifier	score		8017034	0					
ANR	8017582	Identifier	score_pjl_fontnumber		8017034	1					
ANR	8017583	UnaryOperationExpression	- fp -> params . pjl_font_number		8017034	1					
ANR	8017584	UnaryOperator	-		8017034	0					
ANR	8017585	MemberAccess	fp -> params . pjl_font_number		8017034	1					
ANR	8017586	PtrMemberAccess	fp -> params		8017034	0					
ANR	8017587	Identifier	fp		8017034	0					
ANR	8017588	Identifier	params		8017034	1					
ANR	8017589	Identifier	pjl_font_number		8017034	1					
ANR	8017590	IfStatement	if ( gs_debug_c ( '=' ) )		8017034	13					
ANR	8017591	Condition	gs_debug_c ( '=' )	438:8:14633:14647	8017034	0	True				
ANR	8017592	CallExpression	gs_debug_c ( '=' )		8017034	0					
ANR	8017593	Callee	gs_debug_c		8017034	0					
ANR	8017594	Identifier	gs_debug_c		8017034	0					
ANR	8017595	ArgumentList	'='		8017034	1					
ANR	8017596	Argument	'='		8017034	0					
ANR	8017597	PrimaryExpression	'='		8017034	0					
ANR	8017598	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""candidate"" , fp , * mapp , score )"	439:8:14658:14723	8017034	1	True				
ANR	8017599	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""candidate"" , fp , * mapp , score )"		8017034	0					
ANR	8017600	Callee	dmprintf_font_scoring		8017034	0					
ANR	8017601	Identifier	dmprintf_font_scoring		8017034	0					
ANR	8017602	ArgumentList	pcs -> memory		8017034	1					
ANR	8017603	Argument	pcs -> memory		8017034	0					
ANR	8017604	PtrMemberAccess	pcs -> memory		8017034	0					
ANR	8017605	Identifier	pcs		8017034	0					
ANR	8017606	Identifier	memory		8017034	1					
ANR	8017607	Argument	"""candidate"""		8017034	1					
ANR	8017608	PrimaryExpression	"""candidate"""		8017034	0					
ANR	8017609	Argument	fp		8017034	2					
ANR	8017610	Identifier	fp		8017034	0					
ANR	8017611	Argument	* mapp		8017034	3					
ANR	8017612	UnaryOperationExpression	* mapp		8017034	0					
ANR	8017613	UnaryOperator	*		8017034	0					
ANR	8017614	Identifier	mapp		8017034	1					
ANR	8017615	Argument	score		8017034	4					
ANR	8017616	Identifier	score		8017034	0					
ANR	8017617	ReturnType	static void		8017034	1					
ANR	8017618	Identifier	score_match		8017034	2					
ANR	8017619	ParameterList	"const pcl_state_t * pcs , const pcl_font_selection_t * pfs , const pl_font_t * fp , pl_symbol_map_t * * mapp , match_score_t score"		8017034	3					
ANR	8017620	Parameter	const pcl_state_t * pcs	271:12:8158:8180	8017034	0	True				
ANR	8017621	ParameterType	const pcl_state_t *		8017034	0					
ANR	8017622	Identifier	pcs		8017034	1					
ANR	8017623	Parameter	const pcl_font_selection_t * pfs	271:37:8183:8214	8017034	1	True				
ANR	8017624	ParameterType	const pcl_font_selection_t *		8017034	0					
ANR	8017625	Identifier	pfs		8017034	1					
ANR	8017626	Parameter	const pl_font_t * fp	272:12:8229:8248	8017034	2	True				
ANR	8017627	ParameterType	const pl_font_t *		8017034	0					
ANR	8017628	Identifier	fp		8017034	1					
ANR	8017629	Parameter	pl_symbol_map_t * * mapp	272:34:8251:8273	8017034	3	True				
ANR	8017630	ParameterType	pl_symbol_map_t * *		8017034	0					
ANR	8017631	Identifier	mapp		8017034	1					
ANR	8017632	Parameter	match_score_t score	273:12:8288:8306	8017034	4	True				
ANR	8017633	ParameterType	match_score_t		8017034	0					
ANR	8017634	Identifier	score		8017034	1					
ANR	8017635	CFGEntryNode	ENTRY		8017034		True				
ANR	8017636	CFGExitNode	EXIT		8017034		True				
ANR	8017637	Symbol	* score_fontnumber		8017034						
ANR	8017638	Symbol	delta		8017034						
ANR	8017639	Symbol	* pcs		8017034						
ANR	8017640	Symbol	* score_style		8017034						
ANR	8017641	Symbol	check_support		8017034						
ANR	8017642	Symbol	* score_weight		8017034						
ANR	8017643	Symbol	score		8017034						
ANR	8017644	Symbol	score_fontnumber		8017034						
ANR	8017645	Symbol	fp -> params . typeface_family		8017034						
ANR	8017646	Symbol	* fp		8017034						
ANR	8017647	Symbol	pcds_all_cartridges		8017034						
ANR	8017648	Symbol	pfs -> params . symbol_set		8017034						
ANR	8017649	Symbol	fp -> header		8017034						
ANR	8017650	Symbol	gs_debug_c		8017034						
ANR	8017651	Symbol	pcs -> memory		8017034						
ANR	8017652	Symbol	score_spacing		8017034						
ANR	8017653	Symbol	score_location		8017034						
ANR	8017654	Symbol	INTERNAL_LPFONT		8017034						
ANR	8017655	Symbol	mapp		8017034						
ANR	8017656	Symbol	* pfs		8017034						
ANR	8017657	Symbol	pcds_all_simms		8017034						
ANR	8017658	Symbol	* fhp		8017034						
ANR	8017659	Symbol	diff		8017034						
ANR	8017660	Symbol	score_pitch		8017034						
ANR	8017661	Symbol	score_symbol_set		8017034						
ANR	8017662	Symbol	* score_orientation		8017034						
ANR	8017663	Symbol	pfs -> params		8017034						
ANR	8017664	Symbol	fp -> params . pjl_font_number		8017034						
ANR	8017665	Symbol	pfs -> params . style		8017034						
ANR	8017666	Symbol	score_pjl_fontnumber		8017034						
ANR	8017667	Symbol	pfs		8017034						
ANR	8017668	Symbol	fp -> scaling_technology		8017034						
ANR	8017669	Symbol	fwt		8017034						
ANR	8017670	Symbol	* score_typeface		8017034						
ANR	8017671	Symbol	fp -> params . height_4ths		8017034						
ANR	8017672	Symbol	plfst_bitmap		8017034						
ANR	8017673	Symbol	pcds_cartridge_max		8017034						
ANR	8017674	Symbol	fp		8017034						
ANR	8017675	Symbol	pcds_cartridge_shift		8017034						
ANR	8017676	Symbol	* score_pitch		8017034						
ANR	8017677	Symbol	pwt		8017034						
ANR	8017678	Symbol	score_orientation		8017034						
ANR	8017679	Symbol	fp -> params . proportional_spacing		8017034						
ANR	8017680	Symbol	* score_location		8017034						
ANR	8017681	Symbol	pcs -> xfm_state . lp_orient		8017034						
ANR	8017682	Symbol	pfs -> params . proportional_spacing		8017034						
ANR	8017683	Symbol	font_is_scalable_selection_wise		8017034						
ANR	8017684	Symbol	pcs -> xfm_state		8017034						
ANR	8017685	Symbol	fp -> params . stroke_weight		8017034						
ANR	8017686	Symbol	score_style		8017034						
ANR	8017687	Symbol	fhp -> Orientation		8017034						
ANR	8017688	Symbol	* score_symbol_set		8017034						
ANR	8017689	Symbol	pfs -> params . height_4ths		8017034						
ANR	8017690	Symbol	pfs -> params . typeface_family		8017034						
ANR	8017691	Symbol	fp -> params . style		8017034						
ANR	8017692	Symbol	pcs		8017034						
ANR	8017693	Symbol	score_weight		8017034						
ANR	8017694	Symbol	* score_spacing		8017034						
ANR	8017695	Symbol	score_typeface		8017034						
ANR	8017696	Symbol	false		8017034						
ANR	8017697	Symbol	& pfs -> params		8017034						
ANR	8017698	Symbol	& fp -> params		8017034						
ANR	8017699	Symbol	tscore		8017034						
ANR	8017700	Symbol	* mapp		8017034						
ANR	8017701	Symbol	pcds_downloaded		8017034						
ANR	8017702	Symbol	fhp		8017034						
ANR	8017703	Symbol	* score_pjl_fontnumber		8017034						
ANR	8017704	Symbol	abs		8017034						
ANR	8017705	Symbol	pl_fp_pitch_per_inch_x100		8017034						
ANR	8017706	Symbol	fp -> storage		8017034						
ANR	8017707	Symbol	* score		8017034						
ANR	8017708	Symbol	fp -> params		8017034						
ANR	8017709	Symbol	* score_height		8017034						
ANR	8017710	Symbol	pfs -> params . stroke_weight		8017034						
ANR	8017711	Symbol	score_height		8017034						
ANR	8017712	Function	pcl_reselect_font	448:0:14848:18163							
ANR	8017713	FunctionDef	"pcl_reselect_font (pcl_font_selection_t * pfs , const pcl_state_t * pcs , bool internal_only)"		8017712	0					
ANR	8017714	CompoundStatement		451:0:14961:18163	8017712	0					
ANR	8017715	IfStatement	if ( pfs -> font == 0 || pfs -> font -> pfont == 0 )		8017712	0					
ANR	8017716	Condition	pfs -> font == 0 || pfs -> font -> pfont == 0	452:8:14971:15009	8017712	0	True				
ANR	8017717	OrExpression	pfs -> font == 0 || pfs -> font -> pfont == 0		8017712	0		||			
ANR	8017718	EqualityExpression	pfs -> font == 0		8017712	0		==			
ANR	8017719	PtrMemberAccess	pfs -> font		8017712	0					
ANR	8017720	Identifier	pfs		8017712	0					
ANR	8017721	Identifier	font		8017712	1					
ANR	8017722	PrimaryExpression	0		8017712	1					
ANR	8017723	EqualityExpression	pfs -> font -> pfont == 0		8017712	1		==			
ANR	8017724	PtrMemberAccess	pfs -> font -> pfont		8017712	0					
ANR	8017725	PtrMemberAccess	pfs -> font		8017712	0					
ANR	8017726	Identifier	pfs		8017712	0					
ANR	8017727	Identifier	font		8017712	1					
ANR	8017728	Identifier	pfont		8017712	1					
ANR	8017729	PrimaryExpression	0		8017712	1					
ANR	8017730	CompoundStatement		10:8:282:297	8017712	1					
ANR	8017731	IdentifierDeclStatement	pl_dict_enum_t dictp ;	453:8:15022:15042	8017712	0	True				
ANR	8017732	IdentifierDecl	dictp		8017712	0					
ANR	8017733	IdentifierDeclType	pl_dict_enum_t		8017712	0					
ANR	8017734	Identifier	dictp		8017712	1					
ANR	8017735	IdentifierDeclStatement	gs_const_string key ;	454:8:15052:15071	8017712	1	True				
ANR	8017736	IdentifierDecl	key		8017712	0					
ANR	8017737	IdentifierDeclType	gs_const_string		8017712	0					
ANR	8017738	Identifier	key		8017712	1					
ANR	8017739	IdentifierDeclStatement	void * value ;	455:8:15081:15092	8017712	2	True				
ANR	8017740	IdentifierDecl	* value		8017712	0					
ANR	8017741	IdentifierDeclType	void *		8017712	0					
ANR	8017742	Identifier	value		8017712	1					
ANR	8017743	IdentifierDeclStatement	pl_font_t * best_font = 0 ;	456:8:15102:15126	8017712	3	True				
ANR	8017744	IdentifierDecl	* best_font = 0		8017712	0					
ANR	8017745	IdentifierDeclType	pl_font_t *		8017712	0					
ANR	8017746	Identifier	best_font		8017712	1					
ANR	8017747	AssignmentExpression	* best_font = 0		8017712	2		=			
ANR	8017748	Identifier	best_font		8017712	0					
ANR	8017749	PrimaryExpression	0		8017712	1					
ANR	8017750	IdentifierDeclStatement	pl_symbol_map_t * best_map = 0 ;	457:8:15136:15165	8017712	4	True				
ANR	8017751	IdentifierDecl	* best_map = 0		8017712	0					
ANR	8017752	IdentifierDeclType	pl_symbol_map_t *		8017712	0					
ANR	8017753	Identifier	best_map		8017712	1					
ANR	8017754	AssignmentExpression	* best_map = 0		8017712	2		=			
ANR	8017755	Identifier	best_map		8017712	0					
ANR	8017756	PrimaryExpression	0		8017712	1					
ANR	8017757	IdentifierDeclStatement	pl_symbol_map_t * mapp = 0 ;	458:8:15175:15200	8017712	5	True				
ANR	8017758	IdentifierDecl	* mapp = 0		8017712	0					
ANR	8017759	IdentifierDeclType	pl_symbol_map_t *		8017712	0					
ANR	8017760	Identifier	mapp		8017712	1					
ANR	8017761	AssignmentExpression	* mapp = 0		8017712	2		=			
ANR	8017762	Identifier	mapp		8017712	0					
ANR	8017763	PrimaryExpression	0		8017712	1					
ANR	8017764	IdentifierDeclStatement	match_score_t best_match ;	459:8:15210:15234	8017712	6	True				
ANR	8017765	IdentifierDecl	best_match		8017712	0					
ANR	8017766	IdentifierDeclType	match_score_t		8017712	0					
ANR	8017767	Identifier	best_match		8017712	1					
ANR	8017768	IdentifierDeclStatement	score_index_t i ;	460:8:15244:15259	8017712	7	True				
ANR	8017769	IdentifierDecl	i		8017712	0					
ANR	8017770	IdentifierDeclType	score_index_t		8017712	0					
ANR	8017771	Identifier	i		8017712	1					
ANR	8017772	IfStatement	if ( gs_debug_c ( '=' ) )		8017712	8					
ANR	8017773	Condition	gs_debug_c ( '=' )	463:12:15287:15301	8017712	0	True				
ANR	8017774	CallExpression	gs_debug_c ( '=' )		8017712	0					
ANR	8017775	Callee	gs_debug_c		8017712	0					
ANR	8017776	Identifier	gs_debug_c		8017712	0					
ANR	8017777	ArgumentList	'='		8017712	1					
ANR	8017778	Argument	'='		8017712	0					
ANR	8017779	PrimaryExpression	'='		8017712	0					
ANR	8017780	CompoundStatement		13:29:342:342	8017712	1					
ANR	8017781	ExpressionStatement	"dmputs ( pcs -> memory , ""[=]request: "" )"	464:12:15318:15353	8017712	0	True				
ANR	8017782	CallExpression	"dmputs ( pcs -> memory , ""[=]request: "" )"		8017712	0					
ANR	8017783	Callee	dmputs		8017712	0					
ANR	8017784	Identifier	dmputs		8017712	0					
ANR	8017785	ArgumentList	pcs -> memory		8017712	1					
ANR	8017786	Argument	pcs -> memory		8017712	0					
ANR	8017787	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8017788	Identifier	pcs		8017712	0					
ANR	8017789	Identifier	memory		8017712	1					
ANR	8017790	Argument	"""[=]request: """		8017712	1					
ANR	8017791	PrimaryExpression	"""[=]request: """		8017712	0					
ANR	8017792	ExpressionStatement	"dmprint_font_params_t ( pcs -> memory , & pfs -> params )"	465:12:15367:15415	8017712	1	True				
ANR	8017793	CallExpression	"dmprint_font_params_t ( pcs -> memory , & pfs -> params )"		8017712	0					
ANR	8017794	Callee	dmprint_font_params_t		8017712	0					
ANR	8017795	Identifier	dmprint_font_params_t		8017712	0					
ANR	8017796	ArgumentList	pcs -> memory		8017712	1					
ANR	8017797	Argument	pcs -> memory		8017712	0					
ANR	8017798	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8017799	Identifier	pcs		8017712	0					
ANR	8017800	Identifier	memory		8017712	1					
ANR	8017801	Argument	& pfs -> params		8017712	1					
ANR	8017802	UnaryOperationExpression	& pfs -> params		8017712	0					
ANR	8017803	UnaryOperator	&		8017712	0					
ANR	8017804	PtrMemberAccess	pfs -> params		8017712	1					
ANR	8017805	Identifier	pfs		8017712	0					
ANR	8017806	Identifier	params		8017712	1					
ANR	8017807	IfStatement	if ( ( int ) pfs -> selected_id >= 0 )		8017712	9					
ANR	8017808	Condition	( int ) pfs -> selected_id >= 0	472:12:15690:15715	8017712	0	True				
ANR	8017809	RelationalExpression	( int ) pfs -> selected_id >= 0		8017712	0		>=			
ANR	8017810	CastExpression	( int ) pfs -> selected_id		8017712	0					
ANR	8017811	CastTarget	int		8017712	0					
ANR	8017812	PtrMemberAccess	pfs -> selected_id		8017712	1					
ANR	8017813	Identifier	pfs		8017712	0					
ANR	8017814	Identifier	selected_id		8017712	1					
ANR	8017815	PrimaryExpression	0		8017712	1					
ANR	8017816	CompoundStatement		24:12:798:809	8017712	1					
ANR	8017817	IdentifierDeclStatement	byte id_key [ 2 ] ;	473:12:15732:15746	8017712	0	True				
ANR	8017818	IdentifierDecl	id_key [ 2 ]		8017712	0					
ANR	8017819	IdentifierDeclType	byte [ 2 ]		8017712	0					
ANR	8017820	Identifier	id_key		8017712	1					
ANR	8017821	PrimaryExpression	2		8017712	2					
ANR	8017822	IdentifierDeclStatement	void * value ;	474:12:15760:15771	8017712	1	True				
ANR	8017823	IdentifierDecl	* value		8017712	0					
ANR	8017824	IdentifierDeclType	void *		8017712	0					
ANR	8017825	Identifier	value		8017712	1					
ANR	8017826	ExpressionStatement	id_key [ 0 ] = pfs -> selected_id >> 8	476:12:15786:15819	8017712	2	True				
ANR	8017827	AssignmentExpression	id_key [ 0 ] = pfs -> selected_id >> 8		8017712	0		=			
ANR	8017828	ArrayIndexing	id_key [ 0 ]		8017712	0					
ANR	8017829	Identifier	id_key		8017712	0					
ANR	8017830	PrimaryExpression	0		8017712	1					
ANR	8017831	ShiftExpression	pfs -> selected_id >> 8		8017712	1		>>			
ANR	8017832	PtrMemberAccess	pfs -> selected_id		8017712	0					
ANR	8017833	Identifier	pfs		8017712	0					
ANR	8017834	Identifier	selected_id		8017712	1					
ANR	8017835	PrimaryExpression	8		8017712	1					
ANR	8017836	ExpressionStatement	id_key [ 1 ] = ( byte ) ( pfs -> selected_id )	477:12:15833:15870	8017712	3	True				
ANR	8017837	AssignmentExpression	id_key [ 1 ] = ( byte ) ( pfs -> selected_id )		8017712	0		=			
ANR	8017838	ArrayIndexing	id_key [ 1 ]		8017712	0					
ANR	8017839	Identifier	id_key		8017712	0					
ANR	8017840	PrimaryExpression	1		8017712	1					
ANR	8017841	CastExpression	( byte ) ( pfs -> selected_id )		8017712	1					
ANR	8017842	CastTarget	byte		8017712	0					
ANR	8017843	PtrMemberAccess	pfs -> selected_id		8017712	1					
ANR	8017844	Identifier	pfs		8017712	0					
ANR	8017845	Identifier	selected_id		8017712	1					
ANR	8017846	IfStatement	"if ( pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value ) )"		8017712	4					
ANR	8017847	Condition	"pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value )"	478:16:15888:15968	8017712	0	True				
ANR	8017848	CallExpression	"pl_dict_find ( ( pl_dict_t * ) & pcs -> soft_fonts , id_key , 2 , & value )"		8017712	0					
ANR	8017849	Callee	pl_dict_find		8017712	0					
ANR	8017850	Identifier	pl_dict_find		8017712	0					
ANR	8017851	ArgumentList	( pl_dict_t * ) & pcs -> soft_fonts		8017712	1					
ANR	8017852	Argument	( pl_dict_t * ) & pcs -> soft_fonts		8017712	0					
ANR	8017853	CastExpression	( pl_dict_t * ) & pcs -> soft_fonts		8017712	0					
ANR	8017854	CastTarget	pl_dict_t *		8017712	0					
ANR	8017855	UnaryOperationExpression	& pcs -> soft_fonts		8017712	1					
ANR	8017856	UnaryOperator	&		8017712	0					
ANR	8017857	PtrMemberAccess	pcs -> soft_fonts		8017712	1					
ANR	8017858	Identifier	pcs		8017712	0					
ANR	8017859	Identifier	soft_fonts		8017712	1					
ANR	8017860	Argument	id_key		8017712	1					
ANR	8017861	Identifier	id_key		8017712	0					
ANR	8017862	Argument	2		8017712	2					
ANR	8017863	PrimaryExpression	2		8017712	0					
ANR	8017864	Argument	& value		8017712	3					
ANR	8017865	UnaryOperationExpression	& value		8017712	0					
ANR	8017866	UnaryOperator	&		8017712	0					
ANR	8017867	Identifier	value		8017712	1					
ANR	8017868	CompoundStatement		29:70:1009:1009	8017712	1					
ANR	8017869	ExpressionStatement	pfs -> font = ( pl_font_t * ) value	481:16:15990:16021	8017712	0	True				
ANR	8017870	AssignmentExpression	pfs -> font = ( pl_font_t * ) value		8017712	0		=			
ANR	8017871	PtrMemberAccess	pfs -> font		8017712	0					
ANR	8017872	Identifier	pfs		8017712	0					
ANR	8017873	Identifier	font		8017712	1					
ANR	8017874	CastExpression	( pl_font_t * ) value		8017712	1					
ANR	8017875	CastTarget	pl_font_t *		8017712	0					
ANR	8017876	Identifier	value		8017712	1					
ANR	8017877	ExpressionStatement	"( void ) check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"	482:16:16039:16151	8017712	1	True				
ANR	8017878	CastExpression	"( void ) check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"		8017712	0					
ANR	8017879	CastTarget	void		8017712	0					
ANR	8017880	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , pfs -> font , & pfs -> map , true )"		8017712	1					
ANR	8017881	Callee	check_support		8017712	0					
ANR	8017882	Identifier	check_support		8017712	0					
ANR	8017883	ArgumentList	pcs		8017712	1					
ANR	8017884	Argument	pcs		8017712	0					
ANR	8017885	Identifier	pcs		8017712	0					
ANR	8017886	Argument	pfs -> params . symbol_set		8017712	1					
ANR	8017887	MemberAccess	pfs -> params . symbol_set		8017712	0					
ANR	8017888	PtrMemberAccess	pfs -> params		8017712	0					
ANR	8017889	Identifier	pfs		8017712	0					
ANR	8017890	Identifier	params		8017712	1					
ANR	8017891	Identifier	symbol_set		8017712	1					
ANR	8017892	Argument	pfs -> font		8017712	2					
ANR	8017893	PtrMemberAccess	pfs -> font		8017712	0					
ANR	8017894	Identifier	pfs		8017712	0					
ANR	8017895	Identifier	font		8017712	1					
ANR	8017896	Argument	& pfs -> map		8017712	3					
ANR	8017897	UnaryOperationExpression	& pfs -> map		8017712	0					
ANR	8017898	UnaryOperator	&		8017712	0					
ANR	8017899	PtrMemberAccess	pfs -> map		8017712	1					
ANR	8017900	Identifier	pfs		8017712	0					
ANR	8017901	Identifier	map		8017712	1					
ANR	8017902	Argument	true		8017712	4					
ANR	8017903	Identifier	true		8017712	0					
ANR	8017904	ReturnStatement	return 0 ;	484:16:16169:16177	8017712	2	True				
ANR	8017905	PrimaryExpression	0		8017712	0					
ANR	8017906	ForStatement	for ( i = ( score_index_t ) 0 ; i < score_limit ; i ++ )		8017712	10					
ANR	8017907	ForInit	i = ( score_index_t ) 0 ;	488:13:16288:16309	8017712	0	True				
ANR	8017908	AssignmentExpression	i = ( score_index_t ) 0		8017712	0		=			
ANR	8017909	Identifier	i		8017712	0					
ANR	8017910	CastExpression	( score_index_t ) 0		8017712	1					
ANR	8017911	CastTarget	score_index_t		8017712	0					
ANR	8017912	PrimaryExpression	0		8017712	1					
ANR	8017913	Condition	i < score_limit	488:36:16311:16325	8017712	1	True				
ANR	8017914	RelationalExpression	i < score_limit		8017712	0		<			
ANR	8017915	Identifier	i		8017712	0					
ANR	8017916	Identifier	score_limit		8017712	1					
ANR	8017917	PostIncDecOperationExpression	i ++	488:53:16328:16330	8017712	2	True				
ANR	8017918	Identifier	i		8017712	0					
ANR	8017919	IncDec	++		8017712	1					
ANR	8017920	ExpressionStatement	best_match [ i ] = - 1	489:12:16345:16363	8017712	3	True				
ANR	8017921	AssignmentExpression	best_match [ i ] = - 1		8017712	0		=			
ANR	8017922	ArrayIndexing	best_match [ i ]		8017712	0					
ANR	8017923	Identifier	best_match		8017712	0					
ANR	8017924	Identifier	i		8017712	1					
ANR	8017925	UnaryOperationExpression	- 1		8017712	1					
ANR	8017926	UnaryOperator	-		8017712	0					
ANR	8017927	PrimaryExpression	1		8017712	1					
ANR	8017928	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & dictp )"	491:8:16374:16418	8017712	11	True				
ANR	8017929	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & dictp )"		8017712	0					
ANR	8017930	Callee	pl_dict_enum_begin		8017712	0					
ANR	8017931	Identifier	pl_dict_enum_begin		8017712	0					
ANR	8017932	ArgumentList	& pcs -> soft_fonts		8017712	1					
ANR	8017933	Argument	& pcs -> soft_fonts		8017712	0					
ANR	8017934	UnaryOperationExpression	& pcs -> soft_fonts		8017712	0					
ANR	8017935	UnaryOperator	&		8017712	0					
ANR	8017936	PtrMemberAccess	pcs -> soft_fonts		8017712	1					
ANR	8017937	Identifier	pcs		8017712	0					
ANR	8017938	Identifier	soft_fonts		8017712	1					
ANR	8017939	Argument	& dictp		8017712	1					
ANR	8017940	UnaryOperationExpression	& dictp		8017712	0					
ANR	8017941	UnaryOperator	&		8017712	0					
ANR	8017942	Identifier	dictp		8017712	1					
ANR	8017943	WhileStatement	"while ( pl_dict_enum_next ( & dictp , & key , & value ) )"		8017712	12					
ANR	8017944	Condition	"pl_dict_enum_next ( & dictp , & key , & value )"	492:15:16435:16473	8017712	0	True				
ANR	8017945	CallExpression	"pl_dict_enum_next ( & dictp , & key , & value )"		8017712	0					
ANR	8017946	Callee	pl_dict_enum_next		8017712	0					
ANR	8017947	Identifier	pl_dict_enum_next		8017712	0					
ANR	8017948	ArgumentList	& dictp		8017712	1					
ANR	8017949	Argument	& dictp		8017712	0					
ANR	8017950	UnaryOperationExpression	& dictp		8017712	0					
ANR	8017951	UnaryOperator	&		8017712	0					
ANR	8017952	Identifier	dictp		8017712	1					
ANR	8017953	Argument	& key		8017712	1					
ANR	8017954	UnaryOperationExpression	& key		8017712	0					
ANR	8017955	UnaryOperator	&		8017712	0					
ANR	8017956	Identifier	key		8017712	1					
ANR	8017957	Argument	& value		8017712	2					
ANR	8017958	UnaryOperationExpression	& value		8017712	0					
ANR	8017959	UnaryOperator	&		8017712	0					
ANR	8017960	Identifier	value		8017712	1					
ANR	8017961	CompoundStatement		44:12:1577:1596	8017712	1					
ANR	8017962	IdentifierDeclStatement	pl_font_t * fp = ( pl_font_t * ) value ;	493:12:16490:16525	8017712	0	True				
ANR	8017963	IdentifierDecl	* fp = ( pl_font_t * ) value		8017712	0					
ANR	8017964	IdentifierDeclType	pl_font_t *		8017712	0					
ANR	8017965	Identifier	fp		8017712	1					
ANR	8017966	AssignmentExpression	* fp = ( pl_font_t * ) value		8017712	2		=			
ANR	8017967	Identifier	fp		8017712	0					
ANR	8017968	CastExpression	( pl_font_t * ) value		8017712	1					
ANR	8017969	CastTarget	pl_font_t *		8017712	0					
ANR	8017970	Identifier	value		8017712	1					
ANR	8017971	IdentifierDeclStatement	match_score_t match ;	494:12:16539:16558	8017712	1	True				
ANR	8017972	IdentifierDecl	match		8017712	0					
ANR	8017973	IdentifierDeclType	match_score_t		8017712	0					
ANR	8017974	Identifier	match		8017712	1					
ANR	8017975	IfStatement	if ( ( internal_only ) && fp -> storage != pcds_internal )		8017712	2					
ANR	8017976	Condition	( internal_only ) && fp -> storage != pcds_internal	496:16:16577:16623	8017712	0	True				
ANR	8017977	AndExpression	( internal_only ) && fp -> storage != pcds_internal		8017712	0		&&			
ANR	8017978	Identifier	internal_only		8017712	0					
ANR	8017979	EqualityExpression	fp -> storage != pcds_internal		8017712	1		!=			
ANR	8017980	PtrMemberAccess	fp -> storage		8017712	0					
ANR	8017981	Identifier	fp		8017712	0					
ANR	8017982	Identifier	storage		8017712	1					
ANR	8017983	Identifier	pcds_internal		8017712	1					
ANR	8017984	ContinueStatement	continue ;	497:16:16642:16650	8017712	1	True				
ANR	8017985	ExpressionStatement	"score_match ( pcs , pfs , fp , & mapp , match )"	499:12:16665:16704	8017712	3	True				
ANR	8017986	CallExpression	"score_match ( pcs , pfs , fp , & mapp , match )"		8017712	0					
ANR	8017987	Callee	score_match		8017712	0					
ANR	8017988	Identifier	score_match		8017712	0					
ANR	8017989	ArgumentList	pcs		8017712	1					
ANR	8017990	Argument	pcs		8017712	0					
ANR	8017991	Identifier	pcs		8017712	0					
ANR	8017992	Argument	pfs		8017712	1					
ANR	8017993	Identifier	pfs		8017712	0					
ANR	8017994	Argument	fp		8017712	2					
ANR	8017995	Identifier	fp		8017712	0					
ANR	8017996	Argument	& mapp		8017712	3					
ANR	8017997	UnaryOperationExpression	& mapp		8017712	0					
ANR	8017998	UnaryOperator	&		8017712	0					
ANR	8017999	Identifier	mapp		8017712	1					
ANR	8018000	Argument	match		8017712	4					
ANR	8018001	Identifier	match		8017712	0					
ANR	8018002	IfStatement	if ( gs_debug_c ( '=' ) )		8017712	4					
ANR	8018003	Condition	gs_debug_c ( '=' )	501:16:16735:16749	8017712	0	True				
ANR	8018004	CallExpression	gs_debug_c ( '=' )		8017712	0					
ANR	8018005	Callee	gs_debug_c		8017712	0					
ANR	8018006	Identifier	gs_debug_c		8017712	0					
ANR	8018007	ArgumentList	'='		8017712	1					
ANR	8018008	Argument	'='		8017712	0					
ANR	8018009	PrimaryExpression	'='		8017712	0					
ANR	8018010	CompoundStatement		51:33:1790:1790	8017712	1					
ANR	8018011	IfStatement	if ( best_match [ 0 ] != - 1 )		8017712	0					
ANR	8018012	Condition	best_match [ 0 ] != - 1	502:20:16774:16792	8017712	0	True				
ANR	8018013	EqualityExpression	best_match [ 0 ] != - 1		8017712	0		!=			
ANR	8018014	ArrayIndexing	best_match [ 0 ]		8017712	0					
ANR	8018015	Identifier	best_match		8017712	0					
ANR	8018016	PrimaryExpression	0		8017712	1					
ANR	8018017	UnaryOperationExpression	- 1		8017712	1					
ANR	8018018	UnaryOperator	-		8017712	0					
ANR	8018019	PrimaryExpression	1		8017712	1					
ANR	8018020	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""best"" , best_font , mapp , best_match )"	503:20:16842:16955	8017712	1	True				
ANR	8018021	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""best"" , best_font , mapp , best_match )"		8017712	0					
ANR	8018022	Callee	dmprintf_font_scoring		8017712	0					
ANR	8018023	Identifier	dmprintf_font_scoring		8017712	0					
ANR	8018024	ArgumentList	pcs -> memory		8017712	1					
ANR	8018025	Argument	pcs -> memory		8017712	0					
ANR	8018026	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8018027	Identifier	pcs		8017712	0					
ANR	8018028	Identifier	memory		8017712	1					
ANR	8018029	Argument	"""best"""		8017712	1					
ANR	8018030	PrimaryExpression	"""best"""		8017712	0					
ANR	8018031	Argument	best_font		8017712	2					
ANR	8018032	Identifier	best_font		8017712	0					
ANR	8018033	Argument	mapp		8017712	3					
ANR	8018034	Identifier	mapp		8017712	0					
ANR	8018035	Argument	best_match		8017712	4					
ANR	8018036	Identifier	best_match		8017712	0					
ANR	8018037	ForStatement	for ( i = ( score_index_t ) 0 ; i < score_limit ; i ++ )		8017712	5					
ANR	8018038	ForInit	i = ( score_index_t ) 0 ;	507:17:16995:17016	8017712	0	True				
ANR	8018039	AssignmentExpression	i = ( score_index_t ) 0		8017712	0		=			
ANR	8018040	Identifier	i		8017712	0					
ANR	8018041	CastExpression	( score_index_t ) 0		8017712	1					
ANR	8018042	CastTarget	score_index_t		8017712	0					
ANR	8018043	PrimaryExpression	0		8017712	1					
ANR	8018044	Condition	i < score_limit	507:40:17018:17032	8017712	1	True				
ANR	8018045	RelationalExpression	i < score_limit		8017712	0		<			
ANR	8018046	Identifier	i		8017712	0					
ANR	8018047	Identifier	score_limit		8017712	1					
ANR	8018048	PostIncDecOperationExpression	i ++	507:57:17035:17037	8017712	2	True				
ANR	8018049	Identifier	i		8017712	0					
ANR	8018050	IncDec	++		8017712	1					
ANR	8018051	IfStatement	if ( match [ i ] != best_match [ i ] )		8017712	3					
ANR	8018052	Condition	match [ i ] != best_match [ i ]	508:20:17060:17084	8017712	0	True				
ANR	8018053	EqualityExpression	match [ i ] != best_match [ i ]		8017712	0		!=			
ANR	8018054	ArrayIndexing	match [ i ]		8017712	0					
ANR	8018055	Identifier	match		8017712	0					
ANR	8018056	Identifier	i		8017712	1					
ANR	8018057	ArrayIndexing	best_match [ i ]		8017712	1					
ANR	8018058	Identifier	best_match		8017712	0					
ANR	8018059	Identifier	i		8017712	1					
ANR	8018060	CompoundStatement		58:47:2125:2125	8017712	1					
ANR	8018061	IfStatement	if ( match [ i ] > best_match [ i ] )		8017712	0					
ANR	8018062	Condition	match [ i ] > best_match [ i ]	509:24:17113:17136	8017712	0	True				
ANR	8018063	RelationalExpression	match [ i ] > best_match [ i ]		8017712	0		>			
ANR	8018064	ArrayIndexing	match [ i ]		8017712	0					
ANR	8018065	Identifier	match		8017712	0					
ANR	8018066	Identifier	i		8017712	1					
ANR	8018067	ArrayIndexing	best_match [ i ]		8017712	1					
ANR	8018068	Identifier	best_match		8017712	0					
ANR	8018069	Identifier	i		8017712	1					
ANR	8018070	CompoundStatement		59:50:2177:2177	8017712	1					
ANR	8018071	ExpressionStatement	best_font = fp	510:24:17165:17179	8017712	0	True				
ANR	8018072	AssignmentExpression	best_font = fp		8017712	0		=			
ANR	8018073	Identifier	best_font		8017712	0					
ANR	8018074	Identifier	fp		8017712	1					
ANR	8018075	ExpressionStatement	best_map = mapp	511:24:17205:17220	8017712	1	True				
ANR	8018076	AssignmentExpression	best_map = mapp		8017712	0		=			
ANR	8018077	Identifier	best_map		8017712	0					
ANR	8018078	Identifier	mapp		8017712	1					
ANR	8018079	ExpressionStatement	"memcpy ( ( void * ) best_match , ( void * ) match , sizeof ( match ) )"	512:24:17246:17333	8017712	2	True				
ANR	8018080	CallExpression	"memcpy ( ( void * ) best_match , ( void * ) match , sizeof ( match ) )"		8017712	0					
ANR	8018081	Callee	memcpy		8017712	0					
ANR	8018082	Identifier	memcpy		8017712	0					
ANR	8018083	ArgumentList	( void * ) best_match		8017712	1					
ANR	8018084	Argument	( void * ) best_match		8017712	0					
ANR	8018085	CastExpression	( void * ) best_match		8017712	0					
ANR	8018086	CastTarget	void *		8017712	0					
ANR	8018087	Identifier	best_match		8017712	1					
ANR	8018088	Argument	( void * ) match		8017712	1					
ANR	8018089	CastExpression	( void * ) match		8017712	0					
ANR	8018090	CastTarget	void *		8017712	0					
ANR	8018091	Identifier	match		8017712	1					
ANR	8018092	Argument	sizeof ( match )		8017712	2					
ANR	8018093	SizeofExpression	sizeof ( match )		8017712	0					
ANR	8018094	Sizeof	sizeof		8017712	0					
ANR	8018095	SizeofOperand	match		8017712	1					
ANR	8018096	IfStatement	if ( gs_debug_c ( '=' ) )		8017712	3					
ANR	8018097	Condition	gs_debug_c ( '=' )	515:28:17376:17390	8017712	0	True				
ANR	8018098	CallExpression	gs_debug_c ( '=' )		8017712	0					
ANR	8018099	Callee	gs_debug_c		8017712	0					
ANR	8018100	Identifier	gs_debug_c		8017712	0					
ANR	8018101	ArgumentList	'='		8017712	1					
ANR	8018102	Argument	'='		8017712	0					
ANR	8018103	PrimaryExpression	'='		8017712	0					
ANR	8018104	CompoundStatement		65:45:2431:2431	8017712	1					
ANR	8018105	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""usurper"" , fp , mapp , best_match )"	516:28:17423:17540	8017712	0	True				
ANR	8018106	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""usurper"" , fp , mapp , best_match )"		8017712	0					
ANR	8018107	Callee	dmprintf_font_scoring		8017712	0					
ANR	8018108	Identifier	dmprintf_font_scoring		8017712	0					
ANR	8018109	ArgumentList	pcs -> memory		8017712	1					
ANR	8018110	Argument	pcs -> memory		8017712	0					
ANR	8018111	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8018112	Identifier	pcs		8017712	0					
ANR	8018113	Identifier	memory		8017712	1					
ANR	8018114	Argument	"""usurper"""		8017712	1					
ANR	8018115	PrimaryExpression	"""usurper"""		8017712	0					
ANR	8018116	Argument	fp		8017712	2					
ANR	8018117	Identifier	fp		8017712	0					
ANR	8018118	Argument	mapp		8017712	3					
ANR	8018119	Identifier	mapp		8017712	0					
ANR	8018120	Argument	best_match		8017712	4					
ANR	8018121	Identifier	best_match		8017712	0					
ANR	8018122	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""   better %s***)\\n"" , score_name [ i ] )"	518:28:17570:17667	8017712	1	True				
ANR	8018123	CallExpression	"dmprintf1 ( pcs -> memory , ""   better %s***)\\n"" , score_name [ i ] )"		8017712	0					
ANR	8018124	Callee	dmprintf1		8017712	0					
ANR	8018125	Identifier	dmprintf1		8017712	0					
ANR	8018126	ArgumentList	pcs -> memory		8017712	1					
ANR	8018127	Argument	pcs -> memory		8017712	0					
ANR	8018128	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8018129	Identifier	pcs		8017712	0					
ANR	8018130	Identifier	memory		8017712	1					
ANR	8018131	Argument	"""   better %s***)\\n"""		8017712	1					
ANR	8018132	PrimaryExpression	"""   better %s***)\\n"""		8017712	0					
ANR	8018133	Argument	score_name [ i ]		8017712	2					
ANR	8018134	ArrayIndexing	score_name [ i ]		8017712	0					
ANR	8018135	Identifier	score_name		8017712	0					
ANR	8018136	Identifier	i		8017712	1					
ANR	8018137	BreakStatement	break ;	525:20:17746:17751	8017712	1	True				
ANR	8018138	IfStatement	if ( best_font == 0 )		8017712	13					
ANR	8018139	Condition	best_font == 0	528:12:17793:17806	8017712	0	True				
ANR	8018140	EqualityExpression	best_font == 0		8017712	0		==			
ANR	8018141	Identifier	best_font		8017712	0					
ANR	8018142	PrimaryExpression	0		8017712	1					
ANR	8018143	ReturnStatement	return gs_throw_code ( gs_error_Fatal ) ;	529:12:17821:17857	8017712	1	True				
ANR	8018144	CallExpression	gs_throw_code ( gs_error_Fatal )		8017712	0					
ANR	8018145	Callee	gs_throw_code		8017712	0					
ANR	8018146	Identifier	gs_throw_code		8017712	0					
ANR	8018147	ArgumentList	gs_error_Fatal		8017712	1					
ANR	8018148	Argument	gs_error_Fatal		8017712	0					
ANR	8018149	Identifier	gs_error_Fatal		8017712	0					
ANR	8018150	IfStatement	if ( gs_debug_c ( '=' ) )		8017712	14					
ANR	8018151	Condition	gs_debug_c ( '=' )	531:12:17884:17898	8017712	0	True				
ANR	8018152	CallExpression	gs_debug_c ( '=' )		8017712	0					
ANR	8018153	Callee	gs_debug_c		8017712	0					
ANR	8018154	Identifier	gs_debug_c		8017712	0					
ANR	8018155	ArgumentList	'='		8017712	1					
ANR	8018156	Argument	'='		8017712	0					
ANR	8018157	PrimaryExpression	'='		8017712	0					
ANR	8018158	CompoundStatement		81:29:2939:2939	8017712	1					
ANR	8018159	ExpressionStatement	"dmprintf_font_scoring ( pcs -> memory , ""champion"" , best_font , mapp , best_match )"	532:12:17915:18024	8017712	0	True				
ANR	8018160	CallExpression	"dmprintf_font_scoring ( pcs -> memory , ""champion"" , best_font , mapp , best_match )"		8017712	0					
ANR	8018161	Callee	dmprintf_font_scoring		8017712	0					
ANR	8018162	Identifier	dmprintf_font_scoring		8017712	0					
ANR	8018163	ArgumentList	pcs -> memory		8017712	1					
ANR	8018164	Argument	pcs -> memory		8017712	0					
ANR	8018165	PtrMemberAccess	pcs -> memory		8017712	0					
ANR	8018166	Identifier	pcs		8017712	0					
ANR	8018167	Identifier	memory		8017712	1					
ANR	8018168	Argument	"""champion"""		8017712	1					
ANR	8018169	PrimaryExpression	"""champion"""		8017712	0					
ANR	8018170	Argument	best_font		8017712	2					
ANR	8018171	Identifier	best_font		8017712	0					
ANR	8018172	Argument	mapp		8017712	3					
ANR	8018173	Identifier	mapp		8017712	0					
ANR	8018174	Argument	best_match		8017712	4					
ANR	8018175	Identifier	best_match		8017712	0					
ANR	8018176	ExpressionStatement	pfs -> font = best_font	537:8:18052:18073	8017712	15	True				
ANR	8018177	AssignmentExpression	pfs -> font = best_font		8017712	0		=			
ANR	8018178	PtrMemberAccess	pfs -> font		8017712	0					
ANR	8018179	Identifier	pfs		8017712	0					
ANR	8018180	Identifier	font		8017712	1					
ANR	8018181	Identifier	best_font		8017712	1					
ANR	8018182	ExpressionStatement	pfs -> map = best_map	538:8:18083:18102	8017712	16	True				
ANR	8018183	AssignmentExpression	pfs -> map = best_map		8017712	0		=			
ANR	8018184	PtrMemberAccess	pfs -> map		8017712	0					
ANR	8018185	Identifier	pfs		8017712	0					
ANR	8018186	Identifier	map		8017712	1					
ANR	8018187	Identifier	best_map		8017712	1					
ANR	8018188	ExpressionStatement	pfs -> selected_id = ( uint ) - 1	539:8:18112:18141	8017712	17	True				
ANR	8018189	AssignmentExpression	pfs -> selected_id = ( uint ) - 1		8017712	0		=			
ANR	8018190	PtrMemberAccess	pfs -> selected_id		8017712	0					
ANR	8018191	Identifier	pfs		8017712	0					
ANR	8018192	Identifier	selected_id		8017712	1					
ANR	8018193	CastExpression	( uint ) - 1		8017712	1					
ANR	8018194	CastTarget	uint		8017712	0					
ANR	8018195	UnaryOperationExpression	- 1		8017712	1					
ANR	8018196	UnaryOperator	-		8017712	0					
ANR	8018197	PrimaryExpression	1		8017712	1					
ANR	8018198	ReturnStatement	return 0 ;	541:4:18153:18161	8017712	1	True				
ANR	8018199	PrimaryExpression	0		8017712	0					
ANR	8018200	ReturnType	int		8017712	1					
ANR	8018201	Identifier	pcl_reselect_font		8017712	2					
ANR	8018202	ParameterList	"pcl_font_selection_t * pfs , const pcl_state_t * pcs , bool internal_only"		8017712	3					
ANR	8018203	Parameter	pcl_font_selection_t * pfs	449:18:14870:14895	8017712	0	True				
ANR	8018204	ParameterType	pcl_font_selection_t *		8017712	0					
ANR	8018205	Identifier	pfs		8017712	1					
ANR	8018206	Parameter	const pcl_state_t * pcs	449:46:14898:14920	8017712	1	True				
ANR	8018207	ParameterType	const pcl_state_t *		8017712	0					
ANR	8018208	Identifier	pcs		8017712	1					
ANR	8018209	Parameter	bool internal_only	450:18:14941:14958	8017712	2	True				
ANR	8018210	ParameterType	bool		8017712	0					
ANR	8018211	Identifier	internal_only		8017712	1					
ANR	8018212	CFGEntryNode	ENTRY		8017712		True				
ANR	8018213	CFGExitNode	EXIT		8017712		True				
ANR	8018214	Symbol	& mapp		8017712						
ANR	8018215	Symbol	* match		8017712						
ANR	8018216	Symbol	pfs -> font -> pfont		8017712						
ANR	8018217	Symbol	& key		8017712						
ANR	8018218	Symbol	& value		8017712						
ANR	8018219	Symbol	dictp		8017712						
ANR	8018220	Symbol	* pcs		8017712						
ANR	8018221	Symbol	fp		8017712						
ANR	8018222	Symbol	best_match		8017712						
ANR	8018223	Symbol	* * pfs		8017712						
ANR	8018224	Symbol	gs_throw_code		8017712						
ANR	8018225	Symbol	* fp		8017712						
ANR	8018226	Symbol	best_map		8017712						
ANR	8018227	Symbol	pfs -> params . symbol_set		8017712						
ANR	8018228	Symbol	pfs -> selected_id		8017712						
ANR	8018229	Symbol	& pcs -> soft_fonts		8017712						
ANR	8018230	Symbol	pfs -> font		8017712						
ANR	8018231	Symbol	best_font		8017712						
ANR	8018232	Symbol	gs_debug_c		8017712						
ANR	8018233	Symbol	pcs -> memory		8017712						
ANR	8018234	Symbol	value		8017712						
ANR	8018235	Symbol	key		8017712						
ANR	8018236	Symbol	gs_error_Fatal		8017712						
ANR	8018237	Symbol	pcs		8017712						
ANR	8018238	Symbol	id_key		8017712						
ANR	8018239	Symbol	* id_key		8017712						
ANR	8018240	Symbol	score_limit		8017712						
ANR	8018241	Symbol	pcds_internal		8017712						
ANR	8018242	Symbol	* pfs -> font		8017712						
ANR	8018243	Symbol	* pfs		8017712						
ANR	8018244	Symbol	mapp		8017712						
ANR	8018245	Symbol	& pfs -> map		8017712						
ANR	8018246	Symbol	match		8017712						
ANR	8018247	Symbol	pfs -> map		8017712						
ANR	8018248	Symbol	i		8017712						
ANR	8018249	Symbol	& pfs -> params		8017712						
ANR	8018250	Symbol	pl_dict_find		8017712						
ANR	8018251	Symbol	pl_dict_enum_next		8017712						
ANR	8018252	Symbol	* score_name		8017712						
ANR	8018253	Symbol	internal_only		8017712						
ANR	8018254	Symbol	* i		8017712						
ANR	8018255	Symbol	pfs -> params		8017712						
ANR	8018256	Symbol	fp -> storage		8017712						
ANR	8018257	Symbol	true		8017712						
ANR	8018258	Symbol	& dictp		8017712						
ANR	8018259	Symbol	pfs		8017712						
ANR	8018260	Symbol	* best_match		8017712						
ANR	8018261	Symbol	score_name		8017712						
ANR	8018262	Function	pcl_set_id_parameters	545:0:18214:19536							
ANR	8018263	FunctionDef	"pcl_set_id_parameters (const pcl_state_t * pcs , pcl_font_selection_t * pfs , pl_font_t * fp , uint id)"		8018262	0					
ANR	8018264	CompoundStatement		548:0:18341:19536	8018262	0					
ANR	8018265	ExpressionStatement	pfs -> font = fp	551:4:18480:18494	8018262	0	True				
ANR	8018266	AssignmentExpression	pfs -> font = fp		8018262	0		=			
ANR	8018267	PtrMemberAccess	pfs -> font		8018262	0					
ANR	8018268	Identifier	pfs		8018262	0					
ANR	8018269	Identifier	font		8018262	1					
ANR	8018270	Identifier	fp		8018262	1					
ANR	8018271	ExpressionStatement	pfs -> selected_id = id	552:4:18500:18521	8018262	1	True				
ANR	8018272	AssignmentExpression	pfs -> selected_id = id		8018262	0		=			
ANR	8018273	PtrMemberAccess	pfs -> selected_id		8018262	0					
ANR	8018274	Identifier	pfs		8018262	0					
ANR	8018275	Identifier	selected_id		8018262	1					
ANR	8018276	Identifier	id		8018262	1					
ANR	8018277	ExpressionStatement	pfs -> map = 0	553:4:18527:18539	8018262	2	True				
ANR	8018278	AssignmentExpression	pfs -> map = 0		8018262	0		=			
ANR	8018279	PtrMemberAccess	pfs -> map		8018262	0					
ANR	8018280	Identifier	pfs		8018262	0					
ANR	8018281	Identifier	map		8018262	1					
ANR	8018282	PrimaryExpression	0		8018262	1					
ANR	8018283	IfStatement	if ( pl_font_is_bound ( fp ) )		8018262	3					
ANR	8018284	Condition	pl_font_is_bound ( fp )	554:8:18549:18568	8018262	0	True				
ANR	8018285	CallExpression	pl_font_is_bound ( fp )		8018262	0					
ANR	8018286	Callee	pl_font_is_bound		8018262	0					
ANR	8018287	Identifier	pl_font_is_bound		8018262	0					
ANR	8018288	ArgumentList	fp		8018262	1					
ANR	8018289	Argument	fp		8018262	0					
ANR	8018290	Identifier	fp		8018262	0					
ANR	8018291	ExpressionStatement	pfs -> params . symbol_set = fp -> params . symbol_set	555:8:18579:18625	8018262	1	True				
ANR	8018292	AssignmentExpression	pfs -> params . symbol_set = fp -> params . symbol_set		8018262	0		=			
ANR	8018293	MemberAccess	pfs -> params . symbol_set		8018262	0					
ANR	8018294	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018295	Identifier	pfs		8018262	0					
ANR	8018296	Identifier	params		8018262	1					
ANR	8018297	Identifier	symbol_set		8018262	1					
ANR	8018298	MemberAccess	fp -> params . symbol_set		8018262	1					
ANR	8018299	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018300	Identifier	fp		8018262	0					
ANR	8018301	Identifier	params		8018262	1					
ANR	8018302	Identifier	symbol_set		8018262	1					
ANR	8018303	IfStatement	"if ( check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true ) )"		8018262	4					
ANR	8018304	Condition	"check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true )"	557:8:18636:18698	8018262	0	True				
ANR	8018305	CallExpression	"check_support ( pcs , pfs -> params . symbol_set , fp , & pfs -> map , true )"		8018262	0					
ANR	8018306	Callee	check_support		8018262	0					
ANR	8018307	Identifier	check_support		8018262	0					
ANR	8018308	ArgumentList	pcs		8018262	1					
ANR	8018309	Argument	pcs		8018262	0					
ANR	8018310	Identifier	pcs		8018262	0					
ANR	8018311	Argument	pfs -> params . symbol_set		8018262	1					
ANR	8018312	MemberAccess	pfs -> params . symbol_set		8018262	0					
ANR	8018313	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018314	Identifier	pfs		8018262	0					
ANR	8018315	Identifier	params		8018262	1					
ANR	8018316	Identifier	symbol_set		8018262	1					
ANR	8018317	Argument	fp		8018262	2					
ANR	8018318	Identifier	fp		8018262	0					
ANR	8018319	Argument	& pfs -> map		8018262	3					
ANR	8018320	UnaryOperationExpression	& pfs -> map		8018262	0					
ANR	8018321	UnaryOperator	&		8018262	0					
ANR	8018322	PtrMemberAccess	pfs -> map		8018262	1					
ANR	8018323	Identifier	pfs		8018262	0					
ANR	8018324	Identifier	map		8018262	1					
ANR	8018325	Argument	true		8018262	4					
ANR	8018326	Identifier	true		8018262	0					
ANR	8018327	ExpressionStatement	DO_NOTHING	558:8:18709:18719	8018262	1	True				
ANR	8018328	Identifier	DO_NOTHING		8018262	0					
ANR	8018329	ElseStatement	else		8018262	0					
ANR	8018330	IfStatement	"if ( check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true ) )"		8018262	0					
ANR	8018331	Condition	"check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true )"	559:13:18734:18830	8018262	0	True				
ANR	8018332	CallExpression	"check_support ( pcs , pcs -> default_symbol_set_value , fp , & pfs -> map , true )"		8018262	0					
ANR	8018333	Callee	check_support		8018262	0					
ANR	8018334	Identifier	check_support		8018262	0					
ANR	8018335	ArgumentList	pcs		8018262	1					
ANR	8018336	Argument	pcs		8018262	0					
ANR	8018337	Identifier	pcs		8018262	0					
ANR	8018338	Argument	pcs -> default_symbol_set_value		8018262	1					
ANR	8018339	PtrMemberAccess	pcs -> default_symbol_set_value		8018262	0					
ANR	8018340	Identifier	pcs		8018262	0					
ANR	8018341	Identifier	default_symbol_set_value		8018262	1					
ANR	8018342	Argument	fp		8018262	2					
ANR	8018343	Identifier	fp		8018262	0					
ANR	8018344	Argument	& pfs -> map		8018262	3					
ANR	8018345	UnaryOperationExpression	& pfs -> map		8018262	0					
ANR	8018346	UnaryOperator	&		8018262	0					
ANR	8018347	PtrMemberAccess	pfs -> map		8018262	1					
ANR	8018348	Identifier	pfs		8018262	0					
ANR	8018349	Identifier	map		8018262	1					
ANR	8018350	Argument	true		8018262	4					
ANR	8018351	Identifier	true		8018262	0					
ANR	8018352	ExpressionStatement	DO_NOTHING	562:8:18850:18860	8018262	1	True				
ANR	8018353	Identifier	DO_NOTHING		8018262	0					
ANR	8018354	ElseStatement	else		8018262	0					
ANR	8018355	CompoundStatement		16:9:529:529	8018262	0					
ANR	8018356	ExpressionStatement	pfs -> params . proportional_spacing = fp -> params . proportional_spacing	568:4:19085:19151	8018262	5	True				
ANR	8018357	AssignmentExpression	pfs -> params . proportional_spacing = fp -> params . proportional_spacing		8018262	0		=			
ANR	8018358	MemberAccess	pfs -> params . proportional_spacing		8018262	0					
ANR	8018359	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018360	Identifier	pfs		8018262	0					
ANR	8018361	Identifier	params		8018262	1					
ANR	8018362	Identifier	proportional_spacing		8018262	1					
ANR	8018363	MemberAccess	fp -> params . proportional_spacing		8018262	1					
ANR	8018364	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018365	Identifier	fp		8018262	0					
ANR	8018366	Identifier	params		8018262	1					
ANR	8018367	Identifier	proportional_spacing		8018262	1					
ANR	8018368	IfStatement	if ( ! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp ) )		8018262	6					
ANR	8018369	Condition	! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp )	569:8:19161:19221	8018262	0	True				
ANR	8018370	AndExpression	! pfs -> params . proportional_spacing && ! pl_font_is_scalable ( fp )		8018262	0		&&			
ANR	8018371	UnaryOperationExpression	! pfs -> params . proportional_spacing		8018262	0					
ANR	8018372	UnaryOperator	!		8018262	0					
ANR	8018373	MemberAccess	pfs -> params . proportional_spacing		8018262	1					
ANR	8018374	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018375	Identifier	pfs		8018262	0					
ANR	8018376	Identifier	params		8018262	1					
ANR	8018377	Identifier	proportional_spacing		8018262	1					
ANR	8018378	UnaryOperationExpression	! pl_font_is_scalable ( fp )		8018262	1					
ANR	8018379	UnaryOperator	!		8018262	0					
ANR	8018380	CallExpression	pl_font_is_scalable ( fp )		8018262	1					
ANR	8018381	Callee	pl_font_is_scalable		8018262	0					
ANR	8018382	Identifier	pl_font_is_scalable		8018262	0					
ANR	8018383	ArgumentList	fp		8018262	1					
ANR	8018384	Argument	fp		8018262	0					
ANR	8018385	Identifier	fp		8018262	0					
ANR	8018386	ExpressionStatement	pfs -> params . pitch = fp -> params . pitch	570:8:19232:19268	8018262	1	True				
ANR	8018387	AssignmentExpression	pfs -> params . pitch = fp -> params . pitch		8018262	0		=			
ANR	8018388	MemberAccess	pfs -> params . pitch		8018262	0					
ANR	8018389	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018390	Identifier	pfs		8018262	0					
ANR	8018391	Identifier	params		8018262	1					
ANR	8018392	Identifier	pitch		8018262	1					
ANR	8018393	MemberAccess	fp -> params . pitch		8018262	1					
ANR	8018394	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018395	Identifier	fp		8018262	0					
ANR	8018396	Identifier	params		8018262	1					
ANR	8018397	Identifier	pitch		8018262	1					
ANR	8018398	IfStatement	if ( ! pl_font_is_scalable ( fp ) )		8018262	7					
ANR	8018399	Condition	! pl_font_is_scalable ( fp )	571:8:19278:19301	8018262	0	True				
ANR	8018400	UnaryOperationExpression	! pl_font_is_scalable ( fp )		8018262	0					
ANR	8018401	UnaryOperator	!		8018262	0					
ANR	8018402	CallExpression	pl_font_is_scalable ( fp )		8018262	1					
ANR	8018403	Callee	pl_font_is_scalable		8018262	0					
ANR	8018404	Identifier	pl_font_is_scalable		8018262	0					
ANR	8018405	ArgumentList	fp		8018262	1					
ANR	8018406	Argument	fp		8018262	0					
ANR	8018407	Identifier	fp		8018262	0					
ANR	8018408	ExpressionStatement	pfs -> params . height_4ths = fp -> params . height_4ths	572:8:19312:19360	8018262	1	True				
ANR	8018409	AssignmentExpression	pfs -> params . height_4ths = fp -> params . height_4ths		8018262	0		=			
ANR	8018410	MemberAccess	pfs -> params . height_4ths		8018262	0					
ANR	8018411	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018412	Identifier	pfs		8018262	0					
ANR	8018413	Identifier	params		8018262	1					
ANR	8018414	Identifier	height_4ths		8018262	1					
ANR	8018415	MemberAccess	fp -> params . height_4ths		8018262	1					
ANR	8018416	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018417	Identifier	fp		8018262	0					
ANR	8018418	Identifier	params		8018262	1					
ANR	8018419	Identifier	height_4ths		8018262	1					
ANR	8018420	ExpressionStatement	pfs -> params . style = fp -> params . style	573:4:19366:19402	8018262	8	True				
ANR	8018421	AssignmentExpression	pfs -> params . style = fp -> params . style		8018262	0		=			
ANR	8018422	MemberAccess	pfs -> params . style		8018262	0					
ANR	8018423	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018424	Identifier	pfs		8018262	0					
ANR	8018425	Identifier	params		8018262	1					
ANR	8018426	Identifier	style		8018262	1					
ANR	8018427	MemberAccess	fp -> params . style		8018262	1					
ANR	8018428	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018429	Identifier	fp		8018262	0					
ANR	8018430	Identifier	params		8018262	1					
ANR	8018431	Identifier	style		8018262	1					
ANR	8018432	ExpressionStatement	pfs -> params . stroke_weight = fp -> params . stroke_weight	574:4:19408:19460	8018262	9	True				
ANR	8018433	AssignmentExpression	pfs -> params . stroke_weight = fp -> params . stroke_weight		8018262	0		=			
ANR	8018434	MemberAccess	pfs -> params . stroke_weight		8018262	0					
ANR	8018435	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018436	Identifier	pfs		8018262	0					
ANR	8018437	Identifier	params		8018262	1					
ANR	8018438	Identifier	stroke_weight		8018262	1					
ANR	8018439	MemberAccess	fp -> params . stroke_weight		8018262	1					
ANR	8018440	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018441	Identifier	fp		8018262	0					
ANR	8018442	Identifier	params		8018262	1					
ANR	8018443	Identifier	stroke_weight		8018262	1					
ANR	8018444	ExpressionStatement	pfs -> params . typeface_family = fp -> params . typeface_family	575:4:19466:19522	8018262	10	True				
ANR	8018445	AssignmentExpression	pfs -> params . typeface_family = fp -> params . typeface_family		8018262	0		=			
ANR	8018446	MemberAccess	pfs -> params . typeface_family		8018262	0					
ANR	8018447	PtrMemberAccess	pfs -> params		8018262	0					
ANR	8018448	Identifier	pfs		8018262	0					
ANR	8018449	Identifier	params		8018262	1					
ANR	8018450	Identifier	typeface_family		8018262	1					
ANR	8018451	MemberAccess	fp -> params . typeface_family		8018262	1					
ANR	8018452	PtrMemberAccess	fp -> params		8018262	0					
ANR	8018453	Identifier	fp		8018262	0					
ANR	8018454	Identifier	params		8018262	1					
ANR	8018455	Identifier	typeface_family		8018262	1					
ANR	8018456	ReturnStatement	return ;	576:4:19528:19534	8018262	11	True				
ANR	8018457	ReturnType	void		8018262	1					
ANR	8018458	Identifier	pcl_set_id_parameters		8018262	2					
ANR	8018459	ParameterList	"const pcl_state_t * pcs , pcl_font_selection_t * pfs , pl_font_t * fp , uint id"		8018262	3					
ANR	8018460	Parameter	const pcl_state_t * pcs	546:22:18241:18263	8018262	0	True				
ANR	8018461	ParameterType	const pcl_state_t *		8018262	0					
ANR	8018462	Identifier	pcs		8018262	1					
ANR	8018463	Parameter	pcl_font_selection_t * pfs	547:22:18288:18313	8018262	1	True				
ANR	8018464	ParameterType	pcl_font_selection_t *		8018262	0					
ANR	8018465	Identifier	pfs		8018262	1					
ANR	8018466	Parameter	pl_font_t * fp	547:50:18316:18329	8018262	2	True				
ANR	8018467	ParameterType	pl_font_t *		8018262	0					
ANR	8018468	Identifier	fp		8018262	1					
ANR	8018469	Parameter	uint id	547:66:18332:18338	8018262	3	True				
ANR	8018470	ParameterType	uint		8018262	0					
ANR	8018471	Identifier	id		8018262	1					
ANR	8018472	CFGEntryNode	ENTRY		8018262		True				
ANR	8018473	CFGExitNode	EXIT		8018262		True				
ANR	8018474	Symbol	pcs -> default_symbol_set_value		8018262						
ANR	8018475	Symbol	pl_font_is_scalable		8018262						
ANR	8018476	Symbol	fp -> params . height_4ths		8018262						
ANR	8018477	Symbol	fp		8018262						
ANR	8018478	Symbol	* pcs		8018262						
ANR	8018479	Symbol	check_support		8018262						
ANR	8018480	Symbol	fp -> params . proportional_spacing		8018262						
ANR	8018481	Symbol	pl_font_is_bound		8018262						
ANR	8018482	Symbol	pfs -> params . proportional_spacing		8018262						
ANR	8018483	Symbol	fp -> params . stroke_weight		8018262						
ANR	8018484	Symbol	fp -> params . typeface_family		8018262						
ANR	8018485	Symbol	* fp		8018262						
ANR	8018486	Symbol	pfs -> params . symbol_set		8018262						
ANR	8018487	Symbol	pfs -> selected_id		8018262						
ANR	8018488	Symbol	pfs -> font		8018262						
ANR	8018489	Symbol	fp -> params . symbol_set		8018262						
ANR	8018490	Symbol	pfs -> params . pitch		8018262						
ANR	8018491	Symbol	id		8018262						
ANR	8018492	Symbol	pfs -> params . height_4ths		8018262						
ANR	8018493	Symbol	pfs -> params . typeface_family		8018262						
ANR	8018494	Symbol	fp -> params . style		8018262						
ANR	8018495	Symbol	pcs		8018262						
ANR	8018496	Symbol	fp -> params . pitch		8018262						
ANR	8018497	Symbol	* pfs		8018262						
ANR	8018498	Symbol	& pfs -> map		8018262						
ANR	8018499	Symbol	pfs -> map		8018262						
ANR	8018500	Symbol	pfs -> params		8018262						
ANR	8018501	Symbol	true		8018262						
ANR	8018502	Symbol	fp -> params		8018262						
ANR	8018503	Symbol	pfs -> params . style		8018262						
ANR	8018504	Symbol	pfs -> params . stroke_weight		8018262						
ANR	8018505	Symbol	pfs		8018262						
ANR	8018506	Function	pcl_select_font_by_id	581:0:19668:20063							
ANR	8018507	FunctionDef	"pcl_select_font_by_id (pcl_font_selection_t * pfs , uint id , pcl_state_t * pcs)"		8018506	0					
ANR	8018508	CompoundStatement		583:0:19750:20063	8018506	0					
ANR	8018509	IdentifierDeclStatement	byte id_key [ 2 ] ;	584:4:19756:19770	8018506	0	True				
ANR	8018510	IdentifierDecl	id_key [ 2 ]		8018506	0					
ANR	8018511	IdentifierDeclType	byte [ 2 ]		8018506	0					
ANR	8018512	Identifier	id_key		8018506	1					
ANR	8018513	PrimaryExpression	2		8018506	2					
ANR	8018514	IdentifierDeclStatement	void * value ;	585:4:19776:19787	8018506	1	True				
ANR	8018515	IdentifierDecl	* value		8018506	0					
ANR	8018516	IdentifierDeclType	void *		8018506	0					
ANR	8018517	Identifier	value		8018506	1					
ANR	8018518	IdentifierDeclStatement	pl_font_t * fp ;	586:4:19793:19806	8018506	2	True				
ANR	8018519	IdentifierDecl	* fp		8018506	0					
ANR	8018520	IdentifierDeclType	pl_font_t *		8018506	0					
ANR	8018521	Identifier	fp		8018506	1					
ANR	8018522	ExpressionStatement	id_key [ 0 ] = id >> 8	588:4:19813:19832	8018506	3	True				
ANR	8018523	AssignmentExpression	id_key [ 0 ] = id >> 8		8018506	0		=			
ANR	8018524	ArrayIndexing	id_key [ 0 ]		8018506	0					
ANR	8018525	Identifier	id_key		8018506	0					
ANR	8018526	PrimaryExpression	0		8018506	1					
ANR	8018527	ShiftExpression	id >> 8		8018506	1		>>			
ANR	8018528	Identifier	id		8018506	0					
ANR	8018529	PrimaryExpression	8		8018506	1					
ANR	8018530	ExpressionStatement	id_key [ 1 ] = ( byte ) id	589:4:19838:19859	8018506	4	True				
ANR	8018531	AssignmentExpression	id_key [ 1 ] = ( byte ) id		8018506	0		=			
ANR	8018532	ArrayIndexing	id_key [ 1 ]		8018506	0					
ANR	8018533	Identifier	id_key		8018506	0					
ANR	8018534	PrimaryExpression	1		8018506	1					
ANR	8018535	CastExpression	( byte ) id		8018506	1					
ANR	8018536	CastTarget	byte		8018506	0					
ANR	8018537	Identifier	id		8018506	1					
ANR	8018538	IfStatement	"if ( ! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value ) )"		8018506	5					
ANR	8018539	Condition	"! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"	590:8:19869:19918	8018506	0	True				
ANR	8018540	UnaryOperationExpression	"! pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"		8018506	0					
ANR	8018541	UnaryOperator	!		8018506	0					
ANR	8018542	CallExpression	"pl_dict_find ( & pcs -> soft_fonts , id_key , 2 , & value )"		8018506	1					
ANR	8018543	Callee	pl_dict_find		8018506	0					
ANR	8018544	Identifier	pl_dict_find		8018506	0					
ANR	8018545	ArgumentList	& pcs -> soft_fonts		8018506	1					
ANR	8018546	Argument	& pcs -> soft_fonts		8018506	0					
ANR	8018547	UnaryOperationExpression	& pcs -> soft_fonts		8018506	0					
ANR	8018548	UnaryOperator	&		8018506	0					
ANR	8018549	PtrMemberAccess	pcs -> soft_fonts		8018506	1					
ANR	8018550	Identifier	pcs		8018506	0					
ANR	8018551	Identifier	soft_fonts		8018506	1					
ANR	8018552	Argument	id_key		8018506	1					
ANR	8018553	Identifier	id_key		8018506	0					
ANR	8018554	Argument	2		8018506	2					
ANR	8018555	PrimaryExpression	2		8018506	0					
ANR	8018556	Argument	& value		8018506	3					
ANR	8018557	UnaryOperationExpression	& value		8018506	0					
ANR	8018558	UnaryOperator	&		8018506	0					
ANR	8018559	Identifier	value		8018506	1					
ANR	8018560	ReturnStatement	return 1 ;	591:8:19929:19937	8018506	1	True				
ANR	8018561	PrimaryExpression	1		8018506	0					
ANR	8018562	ExpressionStatement	fp = ( pl_font_t * ) value	592:4:19978:20002	8018506	6	True				
ANR	8018563	AssignmentExpression	fp = ( pl_font_t * ) value		8018506	0		=			
ANR	8018564	Identifier	fp		8018506	0					
ANR	8018565	CastExpression	( pl_font_t * ) value		8018506	1					
ANR	8018566	CastTarget	pl_font_t *		8018506	0					
ANR	8018567	Identifier	value		8018506	1					
ANR	8018568	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , fp , id )"	593:4:20008:20047	8018506	7	True				
ANR	8018569	CallExpression	"pcl_set_id_parameters ( pcs , pfs , fp , id )"		8018506	0					
ANR	8018570	Callee	pcl_set_id_parameters		8018506	0					
ANR	8018571	Identifier	pcl_set_id_parameters		8018506	0					
ANR	8018572	ArgumentList	pcs		8018506	1					
ANR	8018573	Argument	pcs		8018506	0					
ANR	8018574	Identifier	pcs		8018506	0					
ANR	8018575	Argument	pfs		8018506	1					
ANR	8018576	Identifier	pfs		8018506	0					
ANR	8018577	Argument	fp		8018506	2					
ANR	8018578	Identifier	fp		8018506	0					
ANR	8018579	Argument	id		8018506	3					
ANR	8018580	Identifier	id		8018506	0					
ANR	8018581	ReturnStatement	return 0 ;	594:4:20053:20061	8018506	8	True				
ANR	8018582	PrimaryExpression	0		8018506	0					
ANR	8018583	ReturnType	int		8018506	1					
ANR	8018584	Identifier	pcl_select_font_by_id		8018506	2					
ANR	8018585	ParameterList	"pcl_font_selection_t * pfs , uint id , pcl_state_t * pcs"		8018506	3					
ANR	8018586	Parameter	pcl_font_selection_t * pfs	582:22:19694:19719	8018506	0	True				
ANR	8018587	ParameterType	pcl_font_selection_t *		8018506	0					
ANR	8018588	Identifier	pfs		8018506	1					
ANR	8018589	Parameter	uint id	582:50:19722:19728	8018506	1	True				
ANR	8018590	ParameterType	uint		8018506	0					
ANR	8018591	Identifier	id		8018506	1					
ANR	8018592	Parameter	pcl_state_t * pcs	582:59:19731:19747	8018506	2	True				
ANR	8018593	ParameterType	pcl_state_t *		8018506	0					
ANR	8018594	Identifier	pcs		8018506	1					
ANR	8018595	CFGEntryNode	ENTRY		8018506		True				
ANR	8018596	CFGExitNode	EXIT		8018506		True				
ANR	8018597	Symbol	pcs		8018506						
ANR	8018598	Symbol	id_key		8018506						
ANR	8018599	Symbol	* id_key		8018506						
ANR	8018600	Symbol	& value		8018506						
ANR	8018601	Symbol	& pcs -> soft_fonts		8018506						
ANR	8018602	Symbol	fp		8018506						
ANR	8018603	Symbol	id		8018506						
ANR	8018604	Symbol	pfs		8018506						
ANR	8018605	Symbol	value		8018506						
ANR	8018606	Symbol	pl_dict_find		8018506						
