command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	659656	File	data/converged/CVE-2018-16863_ghostpdl/base_gsiodev.c								
ANR	659657	DeclStmt									
ANR	659658	Decl							const gx_io_device	const gx_io_device	gs_iodev_os
ANR	659659	Function	gs_iodev_init	61:0:1997:3798							
ANR	659660	FunctionDef	gs_iodev_init (gs_memory_t * mem)		659659	0					
ANR	659661	CompoundStatement		63:0:2034:3798	659659	0					
ANR	659662	Statement	gx_io_device	64:4:2088:2099	659659	0	True				
ANR	659663	Statement	*	64:17:2101:2101	659659	1	True				
ANR	659664	Statement	*	64:18:2102:2102	659659	2	True				
ANR	659665	Statement	table	64:19:2103:2107	659659	3	True				
ANR	659666	Statement	=	64:25:2109:2109	659659	4	True				
ANR	659667	Statement	gs_alloc_struct_array_immovable	65:8:2119:2149	659659	5	True				
ANR	659668	Statement	(	65:39:2150:2150	659659	6	True				
ANR	659669	Statement	mem	65:40:2151:2153	659659	7	True				
ANR	659670	Statement	","	65:43:2154:2154	659659	8	True				
ANR	659671	Statement	gx_io_device_table_count	65:45:2156:2179	659659	9	True				
ANR	659672	Statement	+	65:70:2181:2181	659659	10	True				
ANR	659673	Statement	NUM_RUNTIME_IODEVS	65:72:2183:2200	659659	11	True				
ANR	659674	Statement	","	65:90:2201:2201	659659	12	True				
ANR	659675	Statement	gx_io_device	66:30:2233:2244	659659	13	True				
ANR	659676	Statement	*	66:43:2246:2246	659659	14	True				
ANR	659677	Statement	","	66:44:2247:2247	659659	15	True				
ANR	659678	Statement	&	66:46:2249:2249	659659	16	True				
ANR	659679	Statement	st_io_device_ptr_element	66:47:2250:2273	659659	17	True				
ANR	659680	Statement	","	66:71:2274:2274	659659	18	True				
ANR	659681	Statement	"""gs_iodev_init(table)"""	67:30:2306:2327	659659	19	True				
ANR	659682	Statement	)	67:52:2328:2328	659659	20	True				
ANR	659683	ExpressionStatement		67:53:2329:2329	659659	21	True				
ANR	659684	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	68:4:2335:2393	659659	22	True				
ANR	659685	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		659659	0					
ANR	659686	IdentifierDeclType	gs_lib_ctx_t *		659659	0					
ANR	659687	Identifier	libctx		659659	1					
ANR	659688	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		659659	2		=			
ANR	659689	Identifier	libctx		659659	0					
ANR	659690	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		659659	1					
ANR	659691	Callee	gs_lib_ctx_get_interp_instance		659659	0					
ANR	659692	Identifier	gs_lib_ctx_get_interp_instance		659659	0					
ANR	659693	ArgumentList	mem		659659	1					
ANR	659694	Argument	mem		659659	0					
ANR	659695	Identifier	mem		659659	0					
ANR	659696	IdentifierDeclStatement	"int i , j ;"	69:4:2399:2407	659659	23	True				
ANR	659697	IdentifierDecl	i		659659	0					
ANR	659698	IdentifierDeclType	int		659659	0					
ANR	659699	Identifier	i		659659	1					
ANR	659700	IdentifierDecl	j		659659	1					
ANR	659701	IdentifierDeclType	int		659659	0					
ANR	659702	Identifier	j		659659	1					
ANR	659703	IdentifierDeclStatement	int code = 0 ;	70:4:2413:2425	659659	24	True				
ANR	659704	IdentifierDecl	code = 0		659659	0					
ANR	659705	IdentifierDeclType	int		659659	0					
ANR	659706	Identifier	code		659659	1					
ANR	659707	AssignmentExpression	code = 0		659659	2		=			
ANR	659708	Identifier	code		659659	0					
ANR	659709	PrimaryExpression	0		659659	1					
ANR	659710	IfStatement	if ( ( table == NULL ) || ( libctx == NULL ) )		659659	25					
ANR	659711	Condition	( table == NULL ) || ( libctx == NULL )	72:8:2436:2470	659659	0	True				
ANR	659712	OrExpression	( table == NULL ) || ( libctx == NULL )		659659	0		||			
ANR	659713	EqualityExpression	table == NULL		659659	0		==			
ANR	659714	Identifier	table		659659	0					
ANR	659715	Identifier	NULL		659659	1					
ANR	659716	EqualityExpression	libctx == NULL		659659	1		==			
ANR	659717	Identifier	libctx		659659	0					
ANR	659718	Identifier	NULL		659659	1					
ANR	659719	ExpressionStatement	return_error ( gs_error_VMerror )	73:8:2481:2511	659659	1	True				
ANR	659720	CallExpression	return_error ( gs_error_VMerror )		659659	0					
ANR	659721	Callee	return_error		659659	0					
ANR	659722	Identifier	return_error		659659	0					
ANR	659723	ArgumentList	gs_error_VMerror		659659	1					
ANR	659724	Argument	gs_error_VMerror		659659	0					
ANR	659725	Identifier	gs_error_VMerror		659659	0					
ANR	659726	ExpressionStatement	libctx -> io_device_table_size = gx_io_device_table_count + NUM_RUNTIME_IODEVS	75:4:2518:2594	659659	26	True				
ANR	659727	AssignmentExpression	libctx -> io_device_table_size = gx_io_device_table_count + NUM_RUNTIME_IODEVS		659659	0		=			
ANR	659728	PtrMemberAccess	libctx -> io_device_table_size		659659	0					
ANR	659729	Identifier	libctx		659659	0					
ANR	659730	Identifier	io_device_table_size		659659	1					
ANR	659731	AdditiveExpression	gx_io_device_table_count + NUM_RUNTIME_IODEVS		659659	1		+			
ANR	659732	Identifier	gx_io_device_table_count		659659	0					
ANR	659733	Identifier	NUM_RUNTIME_IODEVS		659659	1					
ANR	659734	ExpressionStatement	libctx -> io_device_table_count = 0	76:4:2600:2633	659659	27	True				
ANR	659735	AssignmentExpression	libctx -> io_device_table_count = 0		659659	0		=			
ANR	659736	PtrMemberAccess	libctx -> io_device_table_count		659659	0					
ANR	659737	Identifier	libctx		659659	0					
ANR	659738	Identifier	io_device_table_count		659659	1					
ANR	659739	PrimaryExpression	0		659659	1					
ANR	659740	ExpressionStatement	libctx -> io_device_table = table	77:4:2639:2670	659659	28	True				
ANR	659741	AssignmentExpression	libctx -> io_device_table = table		659659	0		=			
ANR	659742	PtrMemberAccess	libctx -> io_device_table		659659	0					
ANR	659743	Identifier	libctx		659659	0					
ANR	659744	Identifier	io_device_table		659659	1					
ANR	659745	Identifier	table		659659	1					
ANR	659746	ForStatement	for ( i = 0 ; i < gx_io_device_table_count ; ++ i )		659659	29					
ANR	659747	ForInit	i = 0 ;	79:9:2682:2687	659659	0	True				
ANR	659748	AssignmentExpression	i = 0		659659	0		=			
ANR	659749	Identifier	i		659659	0					
ANR	659750	PrimaryExpression	0		659659	1					
ANR	659751	Condition	i < gx_io_device_table_count	79:16:2689:2716	659659	1	True				
ANR	659752	RelationalExpression	i < gx_io_device_table_count		659659	0		<			
ANR	659753	Identifier	i		659659	0					
ANR	659754	Identifier	gx_io_device_table_count		659659	1					
ANR	659755	UnaryExpression	++ i	79:46:2719:2721	659659	2	True				
ANR	659756	IncDec	++		659659	0					
ANR	659757	Identifier	i		659659	1					
ANR	659758	CompoundStatement		18:8:699:844	659659	3					
ANR	659759	IdentifierDeclStatement	"gx_io_device * iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" ) ;"	80:8:2734:2879	659659	0	True				
ANR	659760	IdentifierDecl	"* iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		659659	0					
ANR	659761	IdentifierDeclType	gx_io_device *		659659	0					
ANR	659762	Identifier	iodev		659659	1					
ANR	659763	AssignmentExpression	"* iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		659659	2		=			
ANR	659764	Identifier	iodev		659659	0					
ANR	659765	CallExpression	"gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		659659	1					
ANR	659766	Callee	gs_alloc_struct_immovable		659659	0					
ANR	659767	Identifier	gs_alloc_struct_immovable		659659	0					
ANR	659768	ArgumentList	mem		659659	1					
ANR	659769	Argument	mem		659659	0					
ANR	659770	Identifier	mem		659659	0					
ANR	659771	Argument	gx_io_device		659659	1					
ANR	659772	Identifier	gx_io_device		659659	0					
ANR	659773	Argument	& st_io_device		659659	2					
ANR	659774	UnaryOperationExpression	& st_io_device		659659	0					
ANR	659775	UnaryOperator	&		659659	0					
ANR	659776	Identifier	st_io_device		659659	1					
ANR	659777	Argument	"""gs_iodev_init(iodev)"""		659659	3					
ANR	659778	PrimaryExpression	"""gs_iodev_init(iodev)"""		659659	0					
ANR	659779	IfStatement	if ( iodev == 0 )		659659	1					
ANR	659780	Condition	iodev == 0	84:12:2894:2903	659659	0	True				
ANR	659781	EqualityExpression	iodev == 0		659659	0		==			
ANR	659782	Identifier	iodev		659659	0					
ANR	659783	PrimaryExpression	0		659659	1					
ANR	659784	GotoStatement	goto fail ;	85:12:2918:2927	659659	1	True				
ANR	659785	Identifier	fail		659659	0					
ANR	659786	ExpressionStatement	table [ i ] = iodev	86:8:2937:2953	659659	2	True				
ANR	659787	AssignmentExpression	table [ i ] = iodev		659659	0		=			
ANR	659788	ArrayIndexing	table [ i ]		659659	0					
ANR	659789	Identifier	table		659659	0					
ANR	659790	Identifier	i		659659	1					
ANR	659791	Identifier	iodev		659659	1					
ANR	659792	ExpressionStatement	"memcpy ( table [ i ] , gx_io_device_table [ i ] , sizeof ( gx_io_device ) )"	87:8:2963:3024	659659	3	True				
ANR	659793	CallExpression	"memcpy ( table [ i ] , gx_io_device_table [ i ] , sizeof ( gx_io_device ) )"		659659	0					
ANR	659794	Callee	memcpy		659659	0					
ANR	659795	Identifier	memcpy		659659	0					
ANR	659796	ArgumentList	table [ i ]		659659	1					
ANR	659797	Argument	table [ i ]		659659	0					
ANR	659798	ArrayIndexing	table [ i ]		659659	0					
ANR	659799	Identifier	table		659659	0					
ANR	659800	Identifier	i		659659	1					
ANR	659801	Argument	gx_io_device_table [ i ]		659659	1					
ANR	659802	ArrayIndexing	gx_io_device_table [ i ]		659659	0					
ANR	659803	Identifier	gx_io_device_table		659659	0					
ANR	659804	Identifier	i		659659	1					
ANR	659805	Argument	sizeof ( gx_io_device )		659659	2					
ANR	659806	SizeofExpression	sizeof ( gx_io_device )		659659	0					
ANR	659807	Sizeof	sizeof		659659	0					
ANR	659808	SizeofOperand	gx_io_device		659659	1					
ANR	659809	ExpressionStatement	libctx -> io_device_table_count ++	88:8:3034:3065	659659	4	True				
ANR	659810	PostIncDecOperationExpression	libctx -> io_device_table_count ++		659659	0					
ANR	659811	PtrMemberAccess	libctx -> io_device_table_count		659659	0					
ANR	659812	Identifier	libctx		659659	0					
ANR	659813	Identifier	io_device_table_count		659659	1					
ANR	659814	IncDec	++		659659	1					
ANR	659815	ForStatement	for ( ; i < gx_io_device_table_count + NUM_RUNTIME_IODEVS ; i ++ )		659659	30					
ANR	659816	Condition	i < gx_io_device_table_count + NUM_RUNTIME_IODEVS	90:10:3083:3131	659659	0	True				
ANR	659817	RelationalExpression	i < gx_io_device_table_count + NUM_RUNTIME_IODEVS		659659	0		<			
ANR	659818	Identifier	i		659659	0					
ANR	659819	AdditiveExpression	gx_io_device_table_count + NUM_RUNTIME_IODEVS		659659	1		+			
ANR	659820	Identifier	gx_io_device_table_count		659659	0					
ANR	659821	Identifier	NUM_RUNTIME_IODEVS		659659	1					
ANR	659822	PostIncDecOperationExpression	i ++	90:61:3134:3136	659659	1	True				
ANR	659823	Identifier	i		659659	0					
ANR	659824	IncDec	++		659659	1					
ANR	659825	CompoundStatement		28:66:1104:1104	659659	2					
ANR	659826	ExpressionStatement	table [ i ] = NULL	91:8:3149:3164	659659	0	True				
ANR	659827	AssignmentExpression	table [ i ] = NULL		659659	0		=			
ANR	659828	ArrayIndexing	table [ i ]		659659	0					
ANR	659829	Identifier	table		659659	0					
ANR	659830	Identifier	i		659659	1					
ANR	659831	Identifier	NULL		659659	1					
ANR	659832	ExpressionStatement	"code = gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"	94:4:3177:3375	659659	31	True				
ANR	659833	AssignmentExpression	"code = gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"		659659	0		=			
ANR	659834	Identifier	code		659659	0					
ANR	659835	CallExpression	"gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"		659659	1					
ANR	659836	Callee	gs_register_struct_root		659659	0					
ANR	659837	Identifier	gs_register_struct_root		659659	0					
ANR	659838	ArgumentList	mem		659659	1					
ANR	659839	Argument	mem		659659	0					
ANR	659840	Identifier	mem		659659	0					
ANR	659841	Argument	mem -> gs_lib_ctx -> io_device_table_root		659659	1					
ANR	659842	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_root		659659	0					
ANR	659843	PtrMemberAccess	mem -> gs_lib_ctx		659659	0					
ANR	659844	Identifier	mem		659659	0					
ANR	659845	Identifier	gs_lib_ctx		659659	1					
ANR	659846	Identifier	io_device_table_root		659659	1					
ANR	659847	Argument	( void * * ) & libctx -> io_device_table		659659	2					
ANR	659848	CastExpression	( void * * ) & libctx -> io_device_table		659659	0					
ANR	659849	CastTarget	void * *		659659	0					
ANR	659850	UnaryOperationExpression	& libctx -> io_device_table		659659	1					
ANR	659851	UnaryOperator	&		659659	0					
ANR	659852	PtrMemberAccess	libctx -> io_device_table		659659	1					
ANR	659853	Identifier	libctx		659659	0					
ANR	659854	Identifier	io_device_table		659659	1					
ANR	659855	Argument	"""io_device_table"""		659659	3					
ANR	659856	PrimaryExpression	"""io_device_table"""		659659	0					
ANR	659857	IfStatement	if ( code < 0 )		659659	32					
ANR	659858	Condition	code < 0	97:8:3385:3392	659659	0	True				
ANR	659859	RelationalExpression	code < 0		659659	0		<			
ANR	659860	Identifier	code		659659	0					
ANR	659861	PrimaryExpression	0		659659	1					
ANR	659862	GotoStatement	goto fail ;	98:8:3403:3412	659659	1	True				
ANR	659863	Identifier	fail		659659	0					
ANR	659864	ForStatement	for ( j = 0 ; j < gx_io_device_table_count ; ++ j )		659659	33					
ANR	659865	ForInit	j = 0 ;	100:9:3483:3488	659659	0	True				
ANR	659866	AssignmentExpression	j = 0		659659	0		=			
ANR	659867	Identifier	j		659659	0					
ANR	659868	PrimaryExpression	0		659659	1					
ANR	659869	Condition	j < gx_io_device_table_count	100:16:3490:3517	659659	1	True				
ANR	659870	RelationalExpression	j < gx_io_device_table_count		659659	0		<			
ANR	659871	Identifier	j		659659	0					
ANR	659872	Identifier	gx_io_device_table_count		659659	1					
ANR	659873	UnaryExpression	++ j	100:46:3520:3522	659659	2	True				
ANR	659874	IncDec	++		659659	0					
ANR	659875	Identifier	j		659659	1					
ANR	659876	IfStatement	"if ( ( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0 )"		659659	3					
ANR	659877	Condition	"( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0"	101:12:3537:3586	659659	0	True				
ANR	659878	RelationalExpression	"( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0"		659659	0		<			
ANR	659879	AssignmentExpression	"code = ( table [ j ] -> procs . init ) ( table [ j ] , mem )"		659659	0		=			
ANR	659880	Identifier	code		659659	0					
ANR	659881	CallExpression	"( table [ j ] -> procs . init ) ( table [ j ] , mem )"		659659	1					
ANR	659882	Callee	table [ j ] -> procs . init		659659	0					
ANR	659883	MemberAccess	table [ j ] -> procs . init		659659	0					
ANR	659884	PtrMemberAccess	table [ j ] -> procs		659659	0					
ANR	659885	ArrayIndexing	table [ j ]		659659	0					
ANR	659886	Identifier	table		659659	0					
ANR	659887	Identifier	j		659659	1					
ANR	659888	Identifier	procs		659659	1					
ANR	659889	Identifier	init		659659	1					
ANR	659890	ArgumentList	table [ j ]		659659	1					
ANR	659891	Argument	table [ j ]		659659	0					
ANR	659892	ArrayIndexing	table [ j ]		659659	0					
ANR	659893	Identifier	table		659659	0					
ANR	659894	Identifier	j		659659	1					
ANR	659895	Argument	mem		659659	1					
ANR	659896	Identifier	mem		659659	0					
ANR	659897	PrimaryExpression	0		659659	1					
ANR	659898	GotoStatement	goto f2 ;	102:12:3601:3608	659659	1	True				
ANR	659899	Identifier	f2		659659	0					
ANR	659900	ReturnStatement	return 0 ;	103:4:3614:3622	659659	34	True				
ANR	659901	PrimaryExpression	0		659659	0					
ANR	659902	Label	f2 :	104:1:3625:3627	659659	35	True				
ANR	659903	Identifier	f2		659659	0					
ANR	659904	Label	fail :	107:1:3728:3732	659659	36	True				
ANR	659905	Identifier	fail		659659	0					
ANR	659906	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_VMerror ) ) ;	108:4:3738:3796	659659	37	True				
ANR	659907	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_VMerror )		659659	0					
ANR	659908	Condition	code < 0		659659	0					
ANR	659909	RelationalExpression	code < 0		659659	0		<			
ANR	659910	Identifier	code		659659	0					
ANR	659911	PrimaryExpression	0		659659	1					
ANR	659912	Identifier	code		659659	1					
ANR	659913	CallExpression	gs_note_error ( gs_error_VMerror )		659659	2					
ANR	659914	Callee	gs_note_error		659659	0					
ANR	659915	Identifier	gs_note_error		659659	0					
ANR	659916	ArgumentList	gs_error_VMerror		659659	1					
ANR	659917	Argument	gs_error_VMerror		659659	0					
ANR	659918	Identifier	gs_error_VMerror		659659	0					
ANR	659919	ReturnType	int		659659	1					
ANR	659920	Identifier	gs_iodev_init		659659	2					
ANR	659921	ParameterList	gs_memory_t * mem		659659	3					
ANR	659922	Parameter	gs_memory_t * mem	62:14:2015:2031	659659	0	True				
ANR	659923	ParameterType	gs_memory_t *		659659	0					
ANR	659924	Identifier	mem		659659	1					
ANR	659925	CFGEntryNode	ENTRY		659659		True				
ANR	659926	CFGExitNode	EXIT		659659		True				
ANR	659927	Symbol	* libctx		659659						
ANR	659928	Symbol	libctx		659659						
ANR	659929	Symbol	code		659659						
ANR	659930	Symbol	& libctx -> io_device_table		659659						
ANR	659931	Symbol	gs_alloc_struct_immovable		659659						
ANR	659932	Symbol	libctx -> io_device_table_count		659659						
ANR	659933	Symbol	NUM_RUNTIME_IODEVS		659659						
ANR	659934	Symbol	gx_io_device_table		659659						
ANR	659935	Symbol	libctx -> io_device_table		659659						
ANR	659936	Symbol	mem		659659						
ANR	659937	Symbol	iodev		659659						
ANR	659938	Symbol	mem -> gs_lib_ctx -> io_device_table_root		659659						
ANR	659939	Symbol	gs_lib_ctx_get_interp_instance		659659						
ANR	659940	Symbol	table		659659						
ANR	659941	Symbol	gs_register_struct_root		659659						
ANR	659942	Symbol	& st_io_device		659659						
ANR	659943	Symbol	gx_io_device_table_count		659659						
ANR	659944	Symbol	* * j		659659						
ANR	659945	Symbol	NULL		659659						
ANR	659946	Symbol	table [ j ] -> procs . init		659659						
ANR	659947	Symbol	i		659659						
ANR	659948	Symbol	* table		659659						
ANR	659949	Symbol	* * mem		659659						
ANR	659950	Symbol	j		659659						
ANR	659951	Symbol	libctx -> io_device_table_size		659659						
ANR	659952	Symbol	* gx_io_device_table		659659						
ANR	659953	Symbol	gs_error_VMerror		659659						
ANR	659954	Symbol	* * table		659659						
ANR	659955	Symbol	gs_note_error		659659						
ANR	659956	Symbol	* i		659659						
ANR	659957	Symbol	table [ j ] -> procs		659659						
ANR	659958	Symbol	* j		659659						
ANR	659959	Symbol	* mem -> gs_lib_ctx		659659						
ANR	659960	Symbol	gx_io_device		659659						
ANR	659961	Symbol	mem -> gs_lib_ctx		659659						
ANR	659962	Symbol	* mem		659659						
ANR	659963	Function	gs_iodev_finit	111:0:3801:4081							
ANR	659964	FunctionDef	gs_iodev_finit (gs_memory_t * mem)		659963	0					
ANR	659965	CompoundStatement		113:0:3840:4081	659963	0					
ANR	659966	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	114:4:3846:3904	659963	0	True				
ANR	659967	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		659963	0					
ANR	659968	IdentifierDeclType	gs_lib_ctx_t *		659963	0					
ANR	659969	Identifier	libctx		659963	1					
ANR	659970	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		659963	2		=			
ANR	659971	Identifier	libctx		659963	0					
ANR	659972	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		659963	1					
ANR	659973	Callee	gs_lib_ctx_get_interp_instance		659963	0					
ANR	659974	Identifier	gs_lib_ctx_get_interp_instance		659963	0					
ANR	659975	ArgumentList	mem		659963	1					
ANR	659976	Argument	mem		659963	0					
ANR	659977	Identifier	mem		659963	0					
ANR	659978	IfStatement	if ( libctx && libctx -> io_device_table )		659963	1					
ANR	659979	Condition	libctx && libctx -> io_device_table	115:8:3914:3946	659963	0	True				
ANR	659980	AndExpression	libctx && libctx -> io_device_table		659963	0		&&			
ANR	659981	Identifier	libctx		659963	0					
ANR	659982	PtrMemberAccess	libctx -> io_device_table		659963	1					
ANR	659983	Identifier	libctx		659963	0					
ANR	659984	Identifier	io_device_table		659963	1					
ANR	659985	CompoundStatement		3:43:108:108	659963	1					
ANR	659986	ExpressionStatement	"gs_free_object ( mem , libctx -> io_device_table , ""gs_iodev_finit"" )"	116:8:3959:4021	659963	0	True				
ANR	659987	CallExpression	"gs_free_object ( mem , libctx -> io_device_table , ""gs_iodev_finit"" )"		659963	0					
ANR	659988	Callee	gs_free_object		659963	0					
ANR	659989	Identifier	gs_free_object		659963	0					
ANR	659990	ArgumentList	mem		659963	1					
ANR	659991	Argument	mem		659963	0					
ANR	659992	Identifier	mem		659963	0					
ANR	659993	Argument	libctx -> io_device_table		659963	1					
ANR	659994	PtrMemberAccess	libctx -> io_device_table		659963	0					
ANR	659995	Identifier	libctx		659963	0					
ANR	659996	Identifier	io_device_table		659963	1					
ANR	659997	Argument	"""gs_iodev_finit"""		659963	2					
ANR	659998	PrimaryExpression	"""gs_iodev_finit"""		659963	0					
ANR	659999	ExpressionStatement	libctx -> io_device_table = NULL	117:8:4031:4061	659963	1	True				
ANR	660000	AssignmentExpression	libctx -> io_device_table = NULL		659963	0		=			
ANR	660001	PtrMemberAccess	libctx -> io_device_table		659963	0					
ANR	660002	Identifier	libctx		659963	0					
ANR	660003	Identifier	io_device_table		659963	1					
ANR	660004	Identifier	NULL		659963	1					
ANR	660005	ReturnStatement	return ;	119:4:4073:4079	659963	2	True				
ANR	660006	ReturnType	void		659963	1					
ANR	660007	Identifier	gs_iodev_finit		659963	2					
ANR	660008	ParameterList	gs_memory_t * mem		659963	3					
ANR	660009	Parameter	gs_memory_t * mem	112:15:3821:3837	659963	0	True				
ANR	660010	ParameterType	gs_memory_t *		659963	0					
ANR	660011	Identifier	mem		659963	1					
ANR	660012	CFGEntryNode	ENTRY		659963		True				
ANR	660013	CFGExitNode	EXIT		659963		True				
ANR	660014	Symbol	libctx -> io_device_table		659963						
ANR	660015	Symbol	* libctx		659963						
ANR	660016	Symbol	libctx		659963						
ANR	660017	Symbol	NULL		659963						
ANR	660018	Symbol	mem		659963						
ANR	660019	Symbol	gs_lib_ctx_get_interp_instance		659963						
ANR	660020	Function	gs_iodev_register_dev	125:0:4140:5399							
ANR	660021	FunctionDef	"gs_iodev_register_dev (gs_memory_t * mem , const gx_io_device * newiodev)"		660020	0					
ANR	660022	CompoundStatement		127:0:4215:5399	660020	0					
ANR	660023	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	128:4:4221:4279	660020	0	True				
ANR	660024	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		660020	0					
ANR	660025	IdentifierDeclType	gs_lib_ctx_t *		660020	0					
ANR	660026	Identifier	libctx		660020	1					
ANR	660027	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		660020	2		=			
ANR	660028	Identifier	libctx		660020	0					
ANR	660029	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		660020	1					
ANR	660030	Callee	gs_lib_ctx_get_interp_instance		660020	0					
ANR	660031	Identifier	gs_lib_ctx_get_interp_instance		660020	0					
ANR	660032	ArgumentList	mem		660020	1					
ANR	660033	Argument	mem		660020	0					
ANR	660034	Identifier	mem		660020	0					
ANR	660035	IdentifierDeclStatement	gx_io_device * * table = libctx -> io_device_table ;	129:4:4285:4331	660020	1	True				
ANR	660036	IdentifierDecl	* * table = libctx -> io_device_table		660020	0					
ANR	660037	IdentifierDeclType	gx_io_device * *		660020	0					
ANR	660038	Identifier	table		660020	1					
ANR	660039	AssignmentExpression	* * table = libctx -> io_device_table		660020	2		=			
ANR	660040	Identifier	table		660020	0					
ANR	660041	PtrMemberAccess	libctx -> io_device_table		660020	1					
ANR	660042	Identifier	libctx		660020	0					
ANR	660043	Identifier	io_device_table		660020	1					
ANR	660044	IdentifierDeclStatement	int code = 0 ;	130:4:4337:4349	660020	2	True				
ANR	660045	IdentifierDecl	code = 0		660020	0					
ANR	660046	IdentifierDeclType	int		660020	0					
ANR	660047	Identifier	code		660020	1					
ANR	660048	AssignmentExpression	code = 0		660020	2		=			
ANR	660049	Identifier	code		660020	0					
ANR	660050	PrimaryExpression	0		660020	1					
ANR	660051	IdentifierDeclStatement	gx_io_device * iodev ;	131:4:4355:4374	660020	3	True				
ANR	660052	IdentifierDecl	* iodev		660020	0					
ANR	660053	IdentifierDeclType	gx_io_device *		660020	0					
ANR	660054	Identifier	iodev		660020	1					
ANR	660055	IdentifierDeclStatement	int i ;	132:4:4380:4385	660020	4	True				
ANR	660056	IdentifierDecl	i		660020	0					
ANR	660057	IdentifierDeclType	int		660020	0					
ANR	660058	Identifier	i		660020	1					
ANR	660059	IfStatement	if ( libctx -> io_device_table_count >= libctx -> io_device_table_size )		660020	5					
ANR	660060	Condition	libctx -> io_device_table_count >= libctx -> io_device_table_size	134:8:4396:4456	660020	0	True				
ANR	660061	RelationalExpression	libctx -> io_device_table_count >= libctx -> io_device_table_size		660020	0		>=			
ANR	660062	PtrMemberAccess	libctx -> io_device_table_count		660020	0					
ANR	660063	Identifier	libctx		660020	0					
ANR	660064	Identifier	io_device_table_count		660020	1					
ANR	660065	PtrMemberAccess	libctx -> io_device_table_size		660020	1					
ANR	660066	Identifier	libctx		660020	0					
ANR	660067	Identifier	io_device_table_size		660020	1					
ANR	660068	CompoundStatement		8:71:243:243	660020	1					
ANR	660069	ExpressionStatement	return_error ( gs_error_limitcheck )	136:8:4562:4595	660020	0	True				
ANR	660070	CallExpression	return_error ( gs_error_limitcheck )		660020	0					
ANR	660071	Callee	return_error		660020	0					
ANR	660072	Identifier	return_error		660020	0					
ANR	660073	ArgumentList	gs_error_limitcheck		660020	1					
ANR	660074	Argument	gs_error_limitcheck		660020	0					
ANR	660075	Identifier	gs_error_limitcheck		660020	0					
ANR	660076	ExpressionStatement	"iodev = gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"	139:4:4608:4725	660020	6	True				
ANR	660077	AssignmentExpression	"iodev = gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"		660020	0		=			
ANR	660078	Identifier	iodev		660020	0					
ANR	660079	CallExpression	"gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"		660020	1					
ANR	660080	Callee	gs_alloc_struct		660020	0					
ANR	660081	Identifier	gs_alloc_struct		660020	0					
ANR	660082	ArgumentList	mem		660020	1					
ANR	660083	Argument	mem		660020	0					
ANR	660084	Identifier	mem		660020	0					
ANR	660085	Argument	gx_io_device		660020	1					
ANR	660086	Identifier	gx_io_device		660020	0					
ANR	660087	Argument	& st_io_device		660020	2					
ANR	660088	UnaryOperationExpression	& st_io_device		660020	0					
ANR	660089	UnaryOperator	&		660020	0					
ANR	660090	Identifier	st_io_device		660020	1					
ANR	660091	Argument	"""gs_iodev_register_dev(iodev)"""		660020	3					
ANR	660092	PrimaryExpression	"""gs_iodev_register_dev(iodev)"""		660020	0					
ANR	660093	IfStatement	if ( iodev == 0 )		660020	7					
ANR	660094	Condition	iodev == 0	142:8:4736:4745	660020	0	True				
ANR	660095	EqualityExpression	iodev == 0		660020	0		==			
ANR	660096	Identifier	iodev		660020	0					
ANR	660097	PrimaryExpression	0		660020	1					
ANR	660098	CompoundStatement		16:20:532:532	660020	1					
ANR	660099	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	143:8:4758:4796	660020	0	True				
ANR	660100	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		660020	0		=			
ANR	660101	Identifier	code		660020	0					
ANR	660102	CallExpression	gs_note_error ( gs_error_VMerror )		660020	1					
ANR	660103	Callee	gs_note_error		660020	0					
ANR	660104	Identifier	gs_note_error		660020	0					
ANR	660105	ArgumentList	gs_error_VMerror		660020	1					
ANR	660106	Argument	gs_error_VMerror		660020	0					
ANR	660107	Identifier	gs_error_VMerror		660020	0					
ANR	660108	GotoStatement	goto fail ;	144:8:4806:4815	660020	1	True				
ANR	660109	Identifier	fail		660020	0					
ANR	660110	ExpressionStatement	table [ libctx -> io_device_table_count ] = iodev	146:4:4827:4871	660020	8	True				
ANR	660111	AssignmentExpression	table [ libctx -> io_device_table_count ] = iodev		660020	0		=			
ANR	660112	ArrayIndexing	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660113	Identifier	table		660020	0					
ANR	660114	PtrMemberAccess	libctx -> io_device_table_count		660020	1					
ANR	660115	Identifier	libctx		660020	0					
ANR	660116	Identifier	io_device_table_count		660020	1					
ANR	660117	Identifier	iodev		660020	1					
ANR	660118	ExpressionStatement	"memcpy ( table [ libctx -> io_device_table_count ] , newiodev , sizeof ( gx_io_device ) )"	147:4:4877:4953	660020	9	True				
ANR	660119	CallExpression	"memcpy ( table [ libctx -> io_device_table_count ] , newiodev , sizeof ( gx_io_device ) )"		660020	0					
ANR	660120	Callee	memcpy		660020	0					
ANR	660121	Identifier	memcpy		660020	0					
ANR	660122	ArgumentList	table [ libctx -> io_device_table_count ]		660020	1					
ANR	660123	Argument	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660124	ArrayIndexing	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660125	Identifier	table		660020	0					
ANR	660126	PtrMemberAccess	libctx -> io_device_table_count		660020	1					
ANR	660127	Identifier	libctx		660020	0					
ANR	660128	Identifier	io_device_table_count		660020	1					
ANR	660129	Argument	newiodev		660020	1					
ANR	660130	Identifier	newiodev		660020	0					
ANR	660131	Argument	sizeof ( gx_io_device )		660020	2					
ANR	660132	SizeofExpression	sizeof ( gx_io_device )		660020	0					
ANR	660133	Sizeof	sizeof		660020	0					
ANR	660134	SizeofOperand	gx_io_device		660020	1					
ANR	660135	IfStatement	"if ( ( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0 )"		660020	10					
ANR	660136	Condition	"( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0"	149:8:4964:5069	660020	0	True				
ANR	660137	RelationalExpression	"( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0"		660020	0		<			
ANR	660138	AssignmentExpression	"code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem )"		660020	0		=			
ANR	660139	Identifier	code		660020	0					
ANR	660140	CallExpression	"( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem )"		660020	1					
ANR	660141	Callee	table [ libctx -> io_device_table_count ] -> procs . init		660020	0					
ANR	660142	MemberAccess	table [ libctx -> io_device_table_count ] -> procs . init		660020	0					
ANR	660143	PtrMemberAccess	table [ libctx -> io_device_table_count ] -> procs		660020	0					
ANR	660144	ArrayIndexing	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660145	Identifier	table		660020	0					
ANR	660146	PtrMemberAccess	libctx -> io_device_table_count		660020	1					
ANR	660147	Identifier	libctx		660020	0					
ANR	660148	Identifier	io_device_table_count		660020	1					
ANR	660149	Identifier	procs		660020	1					
ANR	660150	Identifier	init		660020	1					
ANR	660151	ArgumentList	table [ libctx -> io_device_table_count ]		660020	1					
ANR	660152	Argument	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660153	ArrayIndexing	table [ libctx -> io_device_table_count ]		660020	0					
ANR	660154	Identifier	table		660020	0					
ANR	660155	PtrMemberAccess	libctx -> io_device_table_count		660020	1					
ANR	660156	Identifier	libctx		660020	0					
ANR	660157	Identifier	io_device_table_count		660020	1					
ANR	660158	Argument	mem		660020	1					
ANR	660159	Identifier	mem		660020	0					
ANR	660160	PrimaryExpression	0		660020	1					
ANR	660161	GotoStatement	goto fail2 ;	150:8:5080:5090	660020	1	True				
ANR	660162	Identifier	fail2		660020	0					
ANR	660163	ExpressionStatement	libctx -> io_device_table_count ++	151:4:5096:5127	660020	11	True				
ANR	660164	PostIncDecOperationExpression	libctx -> io_device_table_count ++		660020	0					
ANR	660165	PtrMemberAccess	libctx -> io_device_table_count		660020	0					
ANR	660166	Identifier	libctx		660020	0					
ANR	660167	Identifier	io_device_table_count		660020	1					
ANR	660168	IncDec	++		660020	1					
ANR	660169	ReturnStatement	return ( code ) ;	153:4:5134:5146	660020	12	True				
ANR	660170	Identifier	code		660020	0					
ANR	660171	Label	fail2 :	154:2:5150:5155	660020	13	True				
ANR	660172	Identifier	fail2		660020	0					
ANR	660173	ForStatement	for ( i = libctx -> io_device_table_count ; i > 0 ; -- i )		660020	14					
ANR	660174	ForInit	i = libctx -> io_device_table_count ;	155:9:5166:5199	660020	0	True				
ANR	660175	AssignmentExpression	i = libctx -> io_device_table_count		660020	0		=			
ANR	660176	Identifier	i		660020	0					
ANR	660177	PtrMemberAccess	libctx -> io_device_table_count		660020	1					
ANR	660178	Identifier	libctx		660020	0					
ANR	660179	Identifier	io_device_table_count		660020	1					
ANR	660180	Condition	i > 0	155:44:5201:5205	660020	1	True				
ANR	660181	RelationalExpression	i > 0		660020	0		>			
ANR	660182	Identifier	i		660020	0					
ANR	660183	PrimaryExpression	0		660020	1					
ANR	660184	UnaryExpression	-- i	155:51:5208:5210	660020	2	True				
ANR	660185	IncDec	--		660020	0					
ANR	660186	Identifier	i		660020	1					
ANR	660187	ExpressionStatement	"gs_free_object ( mem , table [ i - 1 ] , ""gs_iodev_init(iodev)"" )"	156:8:5221:5278	660020	3	True				
ANR	660188	CallExpression	"gs_free_object ( mem , table [ i - 1 ] , ""gs_iodev_init(iodev)"" )"		660020	0					
ANR	660189	Callee	gs_free_object		660020	0					
ANR	660190	Identifier	gs_free_object		660020	0					
ANR	660191	ArgumentList	mem		660020	1					
ANR	660192	Argument	mem		660020	0					
ANR	660193	Identifier	mem		660020	0					
ANR	660194	Argument	table [ i - 1 ]		660020	1					
ANR	660195	ArrayIndexing	table [ i - 1 ]		660020	0					
ANR	660196	Identifier	table		660020	0					
ANR	660197	AdditiveExpression	i - 1		660020	1		-			
ANR	660198	Identifier	i		660020	0					
ANR	660199	PrimaryExpression	1		660020	1					
ANR	660200	Argument	"""gs_iodev_init(iodev)"""		660020	2					
ANR	660201	PrimaryExpression	"""gs_iodev_init(iodev)"""		660020	0					
ANR	660202	ExpressionStatement	"gs_free_object ( mem , table , ""gs_iodev_init(table)"" )"	157:4:5284:5334	660020	15	True				
ANR	660203	CallExpression	"gs_free_object ( mem , table , ""gs_iodev_init(table)"" )"		660020	0					
ANR	660204	Callee	gs_free_object		660020	0					
ANR	660205	Identifier	gs_free_object		660020	0					
ANR	660206	ArgumentList	mem		660020	1					
ANR	660207	Argument	mem		660020	0					
ANR	660208	Identifier	mem		660020	0					
ANR	660209	Argument	table		660020	1					
ANR	660210	Identifier	table		660020	0					
ANR	660211	Argument	"""gs_iodev_init(table)"""		660020	2					
ANR	660212	PrimaryExpression	"""gs_iodev_init(table)"""		660020	0					
ANR	660213	ExpressionStatement	libctx -> io_device_table = NULL	158:4:5340:5370	660020	16	True				
ANR	660214	AssignmentExpression	libctx -> io_device_table = NULL		660020	0		=			
ANR	660215	PtrMemberAccess	libctx -> io_device_table		660020	0					
ANR	660216	Identifier	libctx		660020	0					
ANR	660217	Identifier	io_device_table		660020	1					
ANR	660218	Identifier	NULL		660020	1					
ANR	660219	Label	fail :	160:2:5375:5379	660020	17	True				
ANR	660220	Identifier	fail		660020	0					
ANR	660221	ReturnStatement	return ( code ) ;	161:4:5385:5397	660020	18	True				
ANR	660222	Identifier	code		660020	0					
ANR	660223	ReturnType	int		660020	1					
ANR	660224	Identifier	gs_iodev_register_dev		660020	2					
ANR	660225	ParameterList	"gs_memory_t * mem , const gx_io_device * newiodev"		660020	3					
ANR	660226	Parameter	gs_memory_t * mem	126:22:4166:4182	660020	0	True				
ANR	660227	ParameterType	gs_memory_t *		660020	0					
ANR	660228	Identifier	mem		660020	1					
ANR	660229	Parameter	const gx_io_device * newiodev	126:41:4185:4212	660020	1	True				
ANR	660230	ParameterType	const gx_io_device *		660020	0					
ANR	660231	Identifier	newiodev		660020	1					
ANR	660232	CFGEntryNode	ENTRY		660020		True				
ANR	660233	CFGExitNode	EXIT		660020		True				
ANR	660234	Symbol	* libctx		660020						
ANR	660235	Symbol	libctx		660020						
ANR	660236	Symbol	code		660020						
ANR	660237	Symbol	table [ libctx -> io_device_table_count ] -> procs . init		660020						
ANR	660238	Symbol	gs_alloc_struct		660020						
ANR	660239	Symbol	libctx -> io_device_table_count		660020						
ANR	660240	Symbol	libctx -> io_device_table		660020						
ANR	660241	Symbol	mem		660020						
ANR	660242	Symbol	iodev		660020						
ANR	660243	Symbol	gs_error_limitcheck		660020						
ANR	660244	Symbol	gs_lib_ctx_get_interp_instance		660020						
ANR	660245	Symbol	table		660020						
ANR	660246	Symbol	& st_io_device		660020						
ANR	660247	Symbol	* libctx -> io_device_table_count		660020						
ANR	660248	Symbol	NULL		660020						
ANR	660249	Symbol	i		660020						
ANR	660250	Symbol	* table		660020						
ANR	660251	Symbol	* * * libctx		660020						
ANR	660252	Symbol	newiodev		660020						
ANR	660253	Symbol	libctx -> io_device_table_size		660020						
ANR	660254	Symbol	gs_error_VMerror		660020						
ANR	660255	Symbol	gs_note_error		660020						
ANR	660256	Symbol	* * table		660020						
ANR	660257	Symbol	* i		660020						
ANR	660258	Symbol	* * libctx		660020						
ANR	660259	Symbol	gx_io_device		660020						
ANR	660260	Symbol	* * libctx -> io_device_table_count		660020						
ANR	660261	Symbol	table [ libctx -> io_device_table_count ] -> procs		660020						
ANR	660262	Function	gs_iodev_finalize	164:0:5402:6102							
ANR	660263	FunctionDef	"gs_iodev_finalize (const gs_memory_t * cmem , void * vptr)"		660262	0					
ANR	660264	CompoundStatement		166:0:5469:6102	660262	0					
ANR	660265	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) cmem ;	168:4:5518:5556	660262	0	True				
ANR	660266	IdentifierDecl	* mem = ( gs_memory_t * ) cmem		660262	0					
ANR	660267	IdentifierDeclType	gs_memory_t *		660262	0					
ANR	660268	Identifier	mem		660262	1					
ANR	660269	AssignmentExpression	* mem = ( gs_memory_t * ) cmem		660262	2		=			
ANR	660270	Identifier	mem		660262	0					
ANR	660271	CastExpression	( gs_memory_t * ) cmem		660262	1					
ANR	660272	CastTarget	gs_memory_t *		660262	0					
ANR	660273	Identifier	cmem		660262	1					
ANR	660274	IfStatement	if ( mem -> gs_lib_ctx -> io_device_table == vptr )		660262	1					
ANR	660275	Condition	mem -> gs_lib_ctx -> io_device_table == vptr	169:8:5566:5605	660262	0	True				
ANR	660276	EqualityExpression	mem -> gs_lib_ctx -> io_device_table == vptr		660262	0		==			
ANR	660277	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660262	0					
ANR	660278	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660279	Identifier	mem		660262	0					
ANR	660280	Identifier	gs_lib_ctx		660262	1					
ANR	660281	Identifier	io_device_table		660262	1					
ANR	660282	Identifier	vptr		660262	1					
ANR	660283	CompoundStatement		5:8:148:203	660262	1					
ANR	660284	IdentifierDeclStatement	gx_io_device * * table = mem -> gs_lib_ctx -> io_device_table ;	170:8:5618:5673	660262	0	True				
ANR	660285	IdentifierDecl	* * table = mem -> gs_lib_ctx -> io_device_table		660262	0					
ANR	660286	IdentifierDeclType	gx_io_device * *		660262	0					
ANR	660287	Identifier	table		660262	1					
ANR	660288	AssignmentExpression	* * table = mem -> gs_lib_ctx -> io_device_table		660262	2		=			
ANR	660289	Identifier	table		660262	0					
ANR	660290	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660262	1					
ANR	660291	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660292	Identifier	mem		660262	0					
ANR	660293	Identifier	gs_lib_ctx		660262	1					
ANR	660294	Identifier	io_device_table		660262	1					
ANR	660295	WhileStatement	while ( mem -> gs_lib_ctx -> io_device_table_count -- > 0 )		660262	1					
ANR	660296	Condition	mem -> gs_lib_ctx -> io_device_table_count -- > 0	171:15:5690:5733	660262	0	True				
ANR	660297	RelationalExpression	mem -> gs_lib_ctx -> io_device_table_count -- > 0		660262	0		>			
ANR	660298	PostIncDecOperationExpression	mem -> gs_lib_ctx -> io_device_table_count --		660262	0					
ANR	660299	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660262	0					
ANR	660300	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660301	Identifier	mem		660262	0					
ANR	660302	Identifier	gs_lib_ctx		660262	1					
ANR	660303	Identifier	io_device_table_count		660262	1					
ANR	660304	IncDec	--		660262	1					
ANR	660305	PrimaryExpression	0		660262	1					
ANR	660306	CompoundStatement		6:61:266:266	660262	1					
ANR	660307	ExpressionStatement	"gs_free_object ( mem , table [ mem -> gs_lib_ctx -> io_device_table_count ] , ""gs_iodev_finalize"" )"	172:12:5750:5865	660262	0	True				
ANR	660308	CallExpression	"gs_free_object ( mem , table [ mem -> gs_lib_ctx -> io_device_table_count ] , ""gs_iodev_finalize"" )"		660262	0					
ANR	660309	Callee	gs_free_object		660262	0					
ANR	660310	Identifier	gs_free_object		660262	0					
ANR	660311	ArgumentList	mem		660262	1					
ANR	660312	Argument	mem		660262	0					
ANR	660313	Identifier	mem		660262	0					
ANR	660314	Argument	table [ mem -> gs_lib_ctx -> io_device_table_count ]		660262	1					
ANR	660315	ArrayIndexing	table [ mem -> gs_lib_ctx -> io_device_table_count ]		660262	0					
ANR	660316	Identifier	table		660262	0					
ANR	660317	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660262	1					
ANR	660318	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660319	Identifier	mem		660262	0					
ANR	660320	Identifier	gs_lib_ctx		660262	1					
ANR	660321	Identifier	io_device_table_count		660262	1					
ANR	660322	Argument	"""gs_iodev_finalize"""		660262	2					
ANR	660323	PrimaryExpression	"""gs_iodev_finalize"""		660262	0					
ANR	660324	ExpressionStatement	table [ mem -> gs_lib_ctx -> io_device_table_count ] = NULL	175:12:5879:5931	660262	1	True				
ANR	660325	AssignmentExpression	table [ mem -> gs_lib_ctx -> io_device_table_count ] = NULL		660262	0		=			
ANR	660326	ArrayIndexing	table [ mem -> gs_lib_ctx -> io_device_table_count ]		660262	0					
ANR	660327	Identifier	table		660262	0					
ANR	660328	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660262	1					
ANR	660329	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660330	Identifier	mem		660262	0					
ANR	660331	Identifier	gs_lib_ctx		660262	1					
ANR	660332	Identifier	io_device_table_count		660262	1					
ANR	660333	Identifier	NULL		660262	1					
ANR	660334	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table = NULL	177:8:5951:5990	660262	2	True				
ANR	660335	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table = NULL		660262	0		=			
ANR	660336	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660262	0					
ANR	660337	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660338	Identifier	mem		660262	0					
ANR	660339	Identifier	gs_lib_ctx		660262	1					
ANR	660340	Identifier	io_device_table		660262	1					
ANR	660341	Identifier	NULL		660262	1					
ANR	660342	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table_size = mem -> gs_lib_ctx -> io_device_table_count = 0	178:8:6000:6094	660262	3	True				
ANR	660343	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table_size = mem -> gs_lib_ctx -> io_device_table_count = 0		660262	0		=			
ANR	660344	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_size		660262	0					
ANR	660345	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660346	Identifier	mem		660262	0					
ANR	660347	Identifier	gs_lib_ctx		660262	1					
ANR	660348	Identifier	io_device_table_size		660262	1					
ANR	660349	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table_count = 0		660262	1		=			
ANR	660350	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660262	0					
ANR	660351	PtrMemberAccess	mem -> gs_lib_ctx		660262	0					
ANR	660352	Identifier	mem		660262	0					
ANR	660353	Identifier	gs_lib_ctx		660262	1					
ANR	660354	Identifier	io_device_table_count		660262	1					
ANR	660355	PrimaryExpression	0		660262	1					
ANR	660356	ReturnType	static void		660262	1					
ANR	660357	Identifier	gs_iodev_finalize		660262	2					
ANR	660358	ParameterList	"const gs_memory_t * cmem , void * vptr"		660262	3					
ANR	660359	Parameter	const gs_memory_t * cmem	165:18:5432:5454	660262	0	True				
ANR	660360	ParameterType	const gs_memory_t *		660262	0					
ANR	660361	Identifier	cmem		660262	1					
ANR	660362	Parameter	void * vptr	165:43:5457:5466	660262	1	True				
ANR	660363	ParameterType	void *		660262	0					
ANR	660364	Identifier	vptr		660262	1					
ANR	660365	CFGEntryNode	ENTRY		660262		True				
ANR	660366	CFGExitNode	EXIT		660262		True				
ANR	660367	Symbol	NULL		660262						
ANR	660368	Symbol	mem -> gs_lib_ctx -> io_device_table_size		660262						
ANR	660369	Symbol	* * mem		660262						
ANR	660370	Symbol	* table		660262						
ANR	660371	Symbol	mem -> gs_lib_ctx -> io_device_table		660262						
ANR	660372	Symbol	vptr		660262						
ANR	660373	Symbol	mem -> gs_lib_ctx -> io_device_table_count		660262						
ANR	660374	Symbol	* * * mem		660262						
ANR	660375	Symbol	mem		660262						
ANR	660376	Symbol	* * mem -> gs_lib_ctx		660262						
ANR	660377	Symbol	* mem -> gs_lib_ctx		660262						
ANR	660378	Symbol	cmem		660262						
ANR	660379	Symbol	mem -> gs_lib_ctx		660262						
ANR	660380	Symbol	table		660262						
ANR	660381	Symbol	* mem -> gs_lib_ctx -> io_device_table_count		660262						
ANR	660382	Symbol	* mem		660262						
ANR	660383	Function	io_device_finalize	183:0:6105:6634							
ANR	660384	FunctionDef	"io_device_finalize (const gs_memory_t * cmem , void * vptr)"		660383	0					
ANR	660385	CompoundStatement		185:0:6166:6634	660383	0					
ANR	660386	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) cmem ;	187:4:6215:6253	660383	0	True				
ANR	660387	IdentifierDecl	* mem = ( gs_memory_t * ) cmem		660383	0					
ANR	660388	IdentifierDeclType	gs_memory_t *		660383	0					
ANR	660389	Identifier	mem		660383	1					
ANR	660390	AssignmentExpression	* mem = ( gs_memory_t * ) cmem		660383	2		=			
ANR	660391	Identifier	mem		660383	0					
ANR	660392	CastExpression	( gs_memory_t * ) cmem		660383	1					
ANR	660393	CastTarget	gs_memory_t *		660383	0					
ANR	660394	Identifier	cmem		660383	1					
ANR	660395	IfStatement	if ( mem -> gs_lib_ctx -> io_device_table_count > 0 )		660383	1					
ANR	660396	Condition	mem -> gs_lib_ctx -> io_device_table_count > 0	188:8:6263:6304	660383	0	True				
ANR	660397	RelationalExpression	mem -> gs_lib_ctx -> io_device_table_count > 0		660383	0		>			
ANR	660398	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660383	0					
ANR	660399	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660400	Identifier	mem		660383	0					
ANR	660401	Identifier	gs_lib_ctx		660383	1					
ANR	660402	Identifier	io_device_table_count		660383	1					
ANR	660403	PrimaryExpression	0		660383	1					
ANR	660404	CompoundStatement		5:8:150:155	660383	1					
ANR	660405	IdentifierDeclStatement	int i ;	189:8:6317:6322	660383	0	True				
ANR	660406	IdentifierDecl	i		660383	0					
ANR	660407	IdentifierDeclType	int		660383	0					
ANR	660408	Identifier	i		660383	1					
ANR	660409	ForStatement	for ( i = 0 ; i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr ; i ++ )		660383	1					
ANR	660410	ForInit	i = 0 ;	190:13:6337:6342	660383	0	True				
ANR	660411	AssignmentExpression	i = 0		660383	0		=			
ANR	660412	Identifier	i		660383	0					
ANR	660413	PrimaryExpression	0		660383	1					
ANR	660414	Condition	i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr	190:20:6344:6443	660383	1	True				
ANR	660415	AndExpression	i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr		660383	0		&&			
ANR	660416	RelationalExpression	i < mem -> gs_lib_ctx -> io_device_table_count		660383	0		<			
ANR	660417	Identifier	i		660383	0					
ANR	660418	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		660383	1					
ANR	660419	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660420	Identifier	mem		660383	0					
ANR	660421	Identifier	gs_lib_ctx		660383	1					
ANR	660422	Identifier	io_device_table_count		660383	1					
ANR	660423	EqualityExpression	mem -> gs_lib_ctx -> io_device_table [ i ] != vptr		660383	1		!=			
ANR	660424	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	0					
ANR	660425	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660383	0					
ANR	660426	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660427	Identifier	mem		660383	0					
ANR	660428	Identifier	gs_lib_ctx		660383	1					
ANR	660429	Identifier	io_device_table		660383	1					
ANR	660430	Identifier	i		660383	1					
ANR	660431	Identifier	vptr		660383	1					
ANR	660432	PostIncDecOperationExpression	i ++	191:59:6446:6448	660383	2	True				
ANR	660433	Identifier	i		660383	0					
ANR	660434	IncDec	++		660383	1					
ANR	660435	ExpressionStatement		192:8:6459:6459	660383	3	True				
ANR	660436	ExpressionStatement	"( mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit ) ( mem -> gs_lib_ctx -> io_device_table [ i ] , mem )"	194:8:6470:6562	660383	2	True				
ANR	660437	CallExpression	"( mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit ) ( mem -> gs_lib_ctx -> io_device_table [ i ] , mem )"		660383	0					
ANR	660438	Callee	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit		660383	0					
ANR	660439	MemberAccess	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit		660383	0					
ANR	660440	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs		660383	0					
ANR	660441	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	0					
ANR	660442	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660383	0					
ANR	660443	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660444	Identifier	mem		660383	0					
ANR	660445	Identifier	gs_lib_ctx		660383	1					
ANR	660446	Identifier	io_device_table		660383	1					
ANR	660447	Identifier	i		660383	1					
ANR	660448	Identifier	procs		660383	1					
ANR	660449	Identifier	finit		660383	1					
ANR	660450	ArgumentList	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	1					
ANR	660451	Argument	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	0					
ANR	660452	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	0					
ANR	660453	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660383	0					
ANR	660454	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660455	Identifier	mem		660383	0					
ANR	660456	Identifier	gs_lib_ctx		660383	1					
ANR	660457	Identifier	io_device_table		660383	1					
ANR	660458	Identifier	i		660383	1					
ANR	660459	Argument	mem		660383	1					
ANR	660460	Identifier	mem		660383	0					
ANR	660461	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table [ i ] = NULL	195:8:6572:6614	660383	3	True				
ANR	660462	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table [ i ] = NULL		660383	0		=			
ANR	660463	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		660383	0					
ANR	660464	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		660383	0					
ANR	660465	PtrMemberAccess	mem -> gs_lib_ctx		660383	0					
ANR	660466	Identifier	mem		660383	0					
ANR	660467	Identifier	gs_lib_ctx		660383	1					
ANR	660468	Identifier	io_device_table		660383	1					
ANR	660469	Identifier	i		660383	1					
ANR	660470	Identifier	NULL		660383	1					
ANR	660471	ReturnStatement	return ;	197:4:6626:6632	660383	2	True				
ANR	660472	ReturnType	void		660383	1					
ANR	660473	Identifier	io_device_finalize		660383	2					
ANR	660474	ParameterList	"const gs_memory_t * cmem , void * vptr"		660383	3					
ANR	660475	Parameter	const gs_memory_t * cmem	184:19:6129:6151	660383	0	True				
ANR	660476	ParameterType	const gs_memory_t *		660383	0					
ANR	660477	Identifier	cmem		660383	1					
ANR	660478	Parameter	void * vptr	184:44:6154:6163	660383	1	True				
ANR	660479	ParameterType	void *		660383	0					
ANR	660480	Identifier	vptr		660383	1					
ANR	660481	CFGEntryNode	ENTRY		660383		True				
ANR	660482	CFGExitNode	EXIT		660383		True				
ANR	660483	Symbol	* * i		660383						
ANR	660484	Symbol	NULL		660383						
ANR	660485	Symbol	* mem -> gs_lib_ctx -> io_device_table		660383						
ANR	660486	Symbol	* * mem		660383						
ANR	660487	Symbol	i		660383						
ANR	660488	Symbol	* * * * mem		660383						
ANR	660489	Symbol	mem -> gs_lib_ctx -> io_device_table		660383						
ANR	660490	Symbol	vptr		660383						
ANR	660491	Symbol	mem -> gs_lib_ctx -> io_device_table_count		660383						
ANR	660492	Symbol	* * * mem		660383						
ANR	660493	Symbol	* i		660383						
ANR	660494	Symbol	mem		660383						
ANR	660495	Symbol	* * mem -> gs_lib_ctx		660383						
ANR	660496	Symbol	* * mem -> gs_lib_ctx -> io_device_table		660383						
ANR	660497	Symbol	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs		660383						
ANR	660498	Symbol	* mem -> gs_lib_ctx		660383						
ANR	660499	Symbol	cmem		660383						
ANR	660500	Symbol	mem -> gs_lib_ctx		660383						
ANR	660501	Symbol	* * * mem -> gs_lib_ctx		660383						
ANR	660502	Symbol	* mem		660383						
ANR	660503	Function	iodev_no_init	202:0:6702:6777							
ANR	660504	FunctionDef	"iodev_no_init (gx_io_device * iodev , gs_memory_t * mem)"		660503	0					
ANR	660505	CompoundStatement		204:0:6761:6777	660503	0					
ANR	660506	ReturnStatement	return 0 ;	205:4:6767:6775	660503	0	True				
ANR	660507	PrimaryExpression	0		660503	0					
ANR	660508	ReturnType	int		660503	1					
ANR	660509	Identifier	iodev_no_init		660503	2					
ANR	660510	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		660503	3					
ANR	660511	Parameter	gx_io_device * iodev	203:14:6720:6739	660503	0	True				
ANR	660512	ParameterType	gx_io_device *		660503	0					
ANR	660513	Identifier	iodev		660503	1					
ANR	660514	Parameter	gs_memory_t * mem	203:36:6742:6758	660503	1	True				
ANR	660515	ParameterType	gs_memory_t *		660503	0					
ANR	660516	Identifier	mem		660503	1					
ANR	660517	CFGEntryNode	ENTRY		660503		True				
ANR	660518	CFGExitNode	EXIT		660503		True				
ANR	660519	Symbol	iodev		660503						
ANR	660520	Symbol	mem		660503						
ANR	660521	Function	iodev_no_finit	208:0:6780:6855							
ANR	660522	FunctionDef	"iodev_no_finit (gx_io_device * iodev , gs_memory_t * mem)"		660521	0					
ANR	660523	CompoundStatement		210:0:6841:6855	660521	0					
ANR	660524	ReturnStatement	return ;	211:4:6847:6853	660521	0	True				
ANR	660525	ReturnType	void		660521	1					
ANR	660526	Identifier	iodev_no_finit		660521	2					
ANR	660527	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		660521	3					
ANR	660528	Parameter	gx_io_device * iodev	209:15:6800:6819	660521	0	True				
ANR	660529	ParameterType	gx_io_device *		660521	0					
ANR	660530	Identifier	iodev		660521	1					
ANR	660531	Parameter	gs_memory_t * mem	209:37:6822:6838	660521	1	True				
ANR	660532	ParameterType	gs_memory_t *		660521	0					
ANR	660533	Identifier	mem		660521	1					
ANR	660534	CFGEntryNode	ENTRY		660521		True				
ANR	660535	CFGExitNode	EXIT		660521		True				
ANR	660536	Symbol	iodev		660521						
ANR	660537	Symbol	mem		660521						
ANR	660538	Function	iodev_no_open_device	214:0:6858:7027							
ANR	660539	FunctionDef	"iodev_no_open_device (gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem)"		660538	0					
ANR	660540	CompoundStatement		217:0:6979:7027	660538	0					
ANR	660541	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	218:4:6985:7025	660538	0	True				
ANR	660542	CallExpression	return_error ( gs_error_invalidfileaccess )		660538	0					
ANR	660543	Callee	return_error		660538	0					
ANR	660544	Identifier	return_error		660538	0					
ANR	660545	ArgumentList	gs_error_invalidfileaccess		660538	1					
ANR	660546	Argument	gs_error_invalidfileaccess		660538	0					
ANR	660547	Identifier	gs_error_invalidfileaccess		660538	0					
ANR	660548	ReturnType	int		660538	1					
ANR	660549	Identifier	iodev_no_open_device		660538	2					
ANR	660550	ParameterList	"gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem"		660538	3					
ANR	660551	Parameter	gx_io_device * iodev	215:21:6883:6902	660538	0	True				
ANR	660552	ParameterType	gx_io_device *		660538	0					
ANR	660553	Identifier	iodev		660538	1					
ANR	660554	Parameter	const char * access	215:43:6905:6922	660538	1	True				
ANR	660555	ParameterType	const char *		660538	0					
ANR	660556	Identifier	access		660538	1					
ANR	660557	Parameter	stream * * ps	215:63:6925:6936	660538	2	True				
ANR	660558	ParameterType	stream * *		660538	0					
ANR	660559	Identifier	ps		660538	1					
ANR	660560	Parameter	gs_memory_t * mem	216:21:6960:6976	660538	3	True				
ANR	660561	ParameterType	gs_memory_t *		660538	0					
ANR	660562	Identifier	mem		660538	1					
ANR	660563	CFGEntryNode	ENTRY		660538		True				
ANR	660564	CFGExitNode	EXIT		660538		True				
ANR	660565	Symbol	access		660538						
ANR	660566	Symbol	ps		660538						
ANR	660567	Symbol	iodev		660538						
ANR	660568	Symbol	mem		660538						
ANR	660569	Symbol	gs_error_invalidfileaccess		660538						
ANR	660570	Function	iodev_no_open_file	221:0:7030:7228							
ANR	660571	FunctionDef	"iodev_no_open_file (gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem)"		660570	0					
ANR	660572	CompoundStatement		224:0:7180:7228	660570	0					
ANR	660573	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	225:4:7186:7226	660570	0	True				
ANR	660574	CallExpression	return_error ( gs_error_invalidfileaccess )		660570	0					
ANR	660575	Callee	return_error		660570	0					
ANR	660576	Identifier	return_error		660570	0					
ANR	660577	ArgumentList	gs_error_invalidfileaccess		660570	1					
ANR	660578	Argument	gs_error_invalidfileaccess		660570	0					
ANR	660579	Identifier	gs_error_invalidfileaccess		660570	0					
ANR	660580	ReturnType	int		660570	1					
ANR	660581	Identifier	iodev_no_open_file		660570	2					
ANR	660582	ParameterList	"gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem"		660570	3					
ANR	660583	Parameter	gx_io_device * iodev	222:19:7053:7072	660570	0	True				
ANR	660584	ParameterType	gx_io_device *		660570	0					
ANR	660585	Identifier	iodev		660570	1					
ANR	660586	Parameter	const char * fname	222:41:7075:7091	660570	1	True				
ANR	660587	ParameterType	const char *		660570	0					
ANR	660588	Identifier	fname		660570	1					
ANR	660589	Parameter	uint namelen	222:60:7094:7105	660570	2	True				
ANR	660590	ParameterType	uint		660570	0					
ANR	660591	Identifier	namelen		660570	1					
ANR	660592	Parameter	const char * access	223:19:7127:7144	660570	3	True				
ANR	660593	ParameterType	const char *		660570	0					
ANR	660594	Identifier	access		660570	1					
ANR	660595	Parameter	stream * * ps	223:39:7147:7158	660570	4	True				
ANR	660596	ParameterType	stream * *		660570	0					
ANR	660597	Identifier	ps		660570	1					
ANR	660598	Parameter	gs_memory_t * mem	223:53:7161:7177	660570	5	True				
ANR	660599	ParameterType	gs_memory_t *		660570	0					
ANR	660600	Identifier	mem		660570	1					
ANR	660601	CFGEntryNode	ENTRY		660570		True				
ANR	660602	CFGExitNode	EXIT		660570		True				
ANR	660603	Symbol	fname		660570						
ANR	660604	Symbol	access		660570						
ANR	660605	Symbol	ps		660570						
ANR	660606	Symbol	iodev		660570						
ANR	660607	Symbol	mem		660570						
ANR	660608	Symbol	namelen		660570						
ANR	660609	Symbol	gs_error_invalidfileaccess		660570						
ANR	660610	Function	iodev_no_fopen	228:0:7231:7418							
ANR	660611	FunctionDef	"iodev_no_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		660610	0					
ANR	660612	CompoundStatement		231:0:7370:7418	660610	0					
ANR	660613	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	232:4:7376:7416	660610	0	True				
ANR	660614	CallExpression	return_error ( gs_error_invalidfileaccess )		660610	0					
ANR	660615	Callee	return_error		660610	0					
ANR	660616	Identifier	return_error		660610	0					
ANR	660617	ArgumentList	gs_error_invalidfileaccess		660610	1					
ANR	660618	Argument	gs_error_invalidfileaccess		660610	0					
ANR	660619	Identifier	gs_error_invalidfileaccess		660610	0					
ANR	660620	ReturnType	int		660610	1					
ANR	660621	Identifier	iodev_no_fopen		660610	2					
ANR	660622	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		660610	3					
ANR	660623	Parameter	gx_io_device * iodev	229:15:7250:7269	660610	0	True				
ANR	660624	ParameterType	gx_io_device *		660610	0					
ANR	660625	Identifier	iodev		660610	1					
ANR	660626	Parameter	const char * fname	229:37:7272:7288	660610	1	True				
ANR	660627	ParameterType	const char *		660610	0					
ANR	660628	Identifier	fname		660610	1					
ANR	660629	Parameter	const char * access	229:56:7291:7308	660610	2	True				
ANR	660630	ParameterType	const char *		660610	0					
ANR	660631	Identifier	access		660610	1					
ANR	660632	Parameter	FILE * * pfile	230:15:7326:7338	660610	3	True				
ANR	660633	ParameterType	FILE * *		660610	0					
ANR	660634	Identifier	pfile		660610	1					
ANR	660635	Parameter	char * rfname	230:30:7341:7352	660610	4	True				
ANR	660636	ParameterType	char *		660610	0					
ANR	660637	Identifier	rfname		660610	1					
ANR	660638	Parameter	uint rnamelen	230:44:7355:7367	660610	5	True				
ANR	660639	ParameterType	uint		660610	0					
ANR	660640	Identifier	rnamelen		660610	1					
ANR	660641	CFGEntryNode	ENTRY		660610		True				
ANR	660642	CFGExitNode	EXIT		660610		True				
ANR	660643	Symbol	fname		660610						
ANR	660644	Symbol	rnamelen		660610						
ANR	660645	Symbol	access		660610						
ANR	660646	Symbol	iodev		660610						
ANR	660647	Symbol	pfile		660610						
ANR	660648	Symbol	rfname		660610						
ANR	660649	Symbol	gs_error_invalidfileaccess		660610						
ANR	660650	Function	iodev_no_fclose	235:0:7421:7514							
ANR	660651	FunctionDef	"iodev_no_fclose (gx_io_device * iodev , FILE * file)"		660650	0					
ANR	660652	CompoundStatement		237:0:7476:7514	660650	0					
ANR	660653	ExpressionStatement	return_error ( gs_error_ioerror )	238:4:7482:7512	660650	0	True				
ANR	660654	CallExpression	return_error ( gs_error_ioerror )		660650	0					
ANR	660655	Callee	return_error		660650	0					
ANR	660656	Identifier	return_error		660650	0					
ANR	660657	ArgumentList	gs_error_ioerror		660650	1					
ANR	660658	Argument	gs_error_ioerror		660650	0					
ANR	660659	Identifier	gs_error_ioerror		660650	0					
ANR	660660	ReturnType	int		660650	1					
ANR	660661	Identifier	iodev_no_fclose		660650	2					
ANR	660662	ParameterList	"gx_io_device * iodev , FILE * file"		660650	3					
ANR	660663	Parameter	gx_io_device * iodev	236:16:7441:7460	660650	0	True				
ANR	660664	ParameterType	gx_io_device *		660650	0					
ANR	660665	Identifier	iodev		660650	1					
ANR	660666	Parameter	FILE * file	236:38:7463:7473	660650	1	True				
ANR	660667	ParameterType	FILE *		660650	0					
ANR	660668	Identifier	file		660650	1					
ANR	660669	CFGEntryNode	ENTRY		660650		True				
ANR	660670	CFGExitNode	EXIT		660650		True				
ANR	660671	Symbol	file		660650						
ANR	660672	Symbol	iodev		660650						
ANR	660673	Symbol	gs_error_ioerror		660650						
ANR	660674	Function	iodev_no_delete_file	241:0:7517:7631							
ANR	660675	FunctionDef	"iodev_no_delete_file (gx_io_device * iodev , const char * fname)"		660674	0					
ANR	660676	CompoundStatement		243:0:7583:7631	660674	0					
ANR	660677	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	244:4:7589:7629	660674	0	True				
ANR	660678	CallExpression	return_error ( gs_error_invalidfileaccess )		660674	0					
ANR	660679	Callee	return_error		660674	0					
ANR	660680	Identifier	return_error		660674	0					
ANR	660681	ArgumentList	gs_error_invalidfileaccess		660674	1					
ANR	660682	Argument	gs_error_invalidfileaccess		660674	0					
ANR	660683	Identifier	gs_error_invalidfileaccess		660674	0					
ANR	660684	ReturnType	int		660674	1					
ANR	660685	Identifier	iodev_no_delete_file		660674	2					
ANR	660686	ParameterList	"gx_io_device * iodev , const char * fname"		660674	3					
ANR	660687	Parameter	gx_io_device * iodev	242:21:7542:7561	660674	0	True				
ANR	660688	ParameterType	gx_io_device *		660674	0					
ANR	660689	Identifier	iodev		660674	1					
ANR	660690	Parameter	const char * fname	242:43:7564:7580	660674	1	True				
ANR	660691	ParameterType	const char *		660674	0					
ANR	660692	Identifier	fname		660674	1					
ANR	660693	CFGEntryNode	ENTRY		660674		True				
ANR	660694	CFGExitNode	EXIT		660674		True				
ANR	660695	Symbol	fname		660674						
ANR	660696	Symbol	iodev		660674						
ANR	660697	Symbol	gs_error_invalidfileaccess		660674						
ANR	660698	Function	iodev_no_rename_file	247:0:7634:7763							
ANR	660699	FunctionDef	"iodev_no_rename_file (gx_io_device * iodev , const char * from , const char * to)"		660698	0					
ANR	660700	CompoundStatement		249:0:7715:7763	660698	0					
ANR	660701	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	250:4:7721:7761	660698	0	True				
ANR	660702	CallExpression	return_error ( gs_error_invalidfileaccess )		660698	0					
ANR	660703	Callee	return_error		660698	0					
ANR	660704	Identifier	return_error		660698	0					
ANR	660705	ArgumentList	gs_error_invalidfileaccess		660698	1					
ANR	660706	Argument	gs_error_invalidfileaccess		660698	0					
ANR	660707	Identifier	gs_error_invalidfileaccess		660698	0					
ANR	660708	ReturnType	int		660698	1					
ANR	660709	Identifier	iodev_no_rename_file		660698	2					
ANR	660710	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		660698	3					
ANR	660711	Parameter	gx_io_device * iodev	248:21:7659:7678	660698	0	True				
ANR	660712	ParameterType	gx_io_device *		660698	0					
ANR	660713	Identifier	iodev		660698	1					
ANR	660714	Parameter	const char * from	248:43:7681:7696	660698	1	True				
ANR	660715	ParameterType	const char *		660698	0					
ANR	660716	Identifier	from		660698	1					
ANR	660717	Parameter	const char * to	248:61:7699:7712	660698	2	True				
ANR	660718	ParameterType	const char *		660698	0					
ANR	660719	Identifier	to		660698	1					
ANR	660720	CFGEntryNode	ENTRY		660698		True				
ANR	660721	CFGExitNode	EXIT		660698		True				
ANR	660722	Symbol	iodev		660698						
ANR	660723	Symbol	from		660698						
ANR	660724	Symbol	to		660698						
ANR	660725	Symbol	gs_error_invalidfileaccess		660698						
ANR	660726	Function	iodev_no_file_status	253:0:7766:7900							
ANR	660727	FunctionDef	"iodev_no_file_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		660726	0					
ANR	660728	CompoundStatement		255:0:7852:7900	660726	0					
ANR	660729	ExpressionStatement	return_error ( gs_error_undefinedfilename )	256:4:7858:7898	660726	0	True				
ANR	660730	CallExpression	return_error ( gs_error_undefinedfilename )		660726	0					
ANR	660731	Callee	return_error		660726	0					
ANR	660732	Identifier	return_error		660726	0					
ANR	660733	ArgumentList	gs_error_undefinedfilename		660726	1					
ANR	660734	Argument	gs_error_undefinedfilename		660726	0					
ANR	660735	Identifier	gs_error_undefinedfilename		660726	0					
ANR	660736	ReturnType	int		660726	1					
ANR	660737	Identifier	iodev_no_file_status		660726	2					
ANR	660738	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		660726	3					
ANR	660739	Parameter	gx_io_device * iodev	254:21:7791:7810	660726	0	True				
ANR	660740	ParameterType	gx_io_device *		660726	0					
ANR	660741	Identifier	iodev		660726	1					
ANR	660742	Parameter	const char * fname	254:43:7813:7829	660726	1	True				
ANR	660743	ParameterType	const char *		660726	0					
ANR	660744	Identifier	fname		660726	1					
ANR	660745	Parameter	struct stat * pstat	254:62:7832:7849	660726	2	True				
ANR	660746	ParameterType	struct stat *		660726	0					
ANR	660747	Identifier	pstat		660726	1					
ANR	660748	CFGEntryNode	ENTRY		660726		True				
ANR	660749	CFGExitNode	EXIT		660726		True				
ANR	660750	Symbol	fname		660726						
ANR	660751	Symbol	iodev		660726						
ANR	660752	Symbol	pstat		660726						
ANR	660753	Symbol	gs_error_undefinedfilename		660726						
ANR	660754	Function	iodev_no_enumerate_files	259:0:7903:8058							
ANR	660755	FunctionDef	"iodev_no_enumerate_files (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * memory)"		660754	0					
ANR	660756	CompoundStatement		262:0:8039:8058	660754	0					
ANR	660757	ReturnStatement	return NULL ;	263:4:8045:8056	660754	0	True				
ANR	660758	Identifier	NULL		660754	0					
ANR	660759	ReturnType	file_enum *		660754	1					
ANR	660760	Identifier	iodev_no_enumerate_files		660754	2					
ANR	660761	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * memory"		660754	3					
ANR	660762	Parameter	gx_io_device * iodev	260:25:7940:7959	660754	0	True				
ANR	660763	ParameterType	gx_io_device *		660754	0					
ANR	660764	Identifier	iodev		660754	1					
ANR	660765	Parameter	const char * pat	260:47:7962:7976	660754	1	True				
ANR	660766	ParameterType	const char *		660754	0					
ANR	660767	Identifier	pat		660754	1					
ANR	660768	Parameter	uint patlen	260:64:7979:7989	660754	2	True				
ANR	660769	ParameterType	uint		660754	0					
ANR	660770	Identifier	patlen		660754	1					
ANR	660771	Parameter	gs_memory_t * memory	261:25:8017:8036	660754	3	True				
ANR	660772	ParameterType	gs_memory_t *		660754	0					
ANR	660773	Identifier	memory		660754	1					
ANR	660774	CFGEntryNode	ENTRY		660754		True				
ANR	660775	CFGExitNode	EXIT		660754		True				
ANR	660776	Symbol	pat		660754						
ANR	660777	Symbol	memory		660754						
ANR	660778	Symbol	NULL		660754						
ANR	660779	Symbol	iodev		660754						
ANR	660780	Symbol	patlen		660754						
ANR	660781	Function	iodev_no_get_params	266:0:8061:8146							
ANR	660782	FunctionDef	"iodev_no_get_params (gx_io_device * iodev , gs_param_list * plist)"		660781	0					
ANR	660783	CompoundStatement		268:0:8130:8146	660781	0					
ANR	660784	ReturnStatement	return 0 ;	269:4:8136:8144	660781	0	True				
ANR	660785	PrimaryExpression	0		660781	0					
ANR	660786	ReturnType	int		660781	1					
ANR	660787	Identifier	iodev_no_get_params		660781	2					
ANR	660788	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		660781	3					
ANR	660789	Parameter	gx_io_device * iodev	267:20:8085:8104	660781	0	True				
ANR	660790	ParameterType	gx_io_device *		660781	0					
ANR	660791	Identifier	iodev		660781	1					
ANR	660792	Parameter	gs_param_list * plist	267:42:8107:8127	660781	1	True				
ANR	660793	ParameterType	gs_param_list *		660781	0					
ANR	660794	Identifier	plist		660781	1					
ANR	660795	CFGEntryNode	ENTRY		660781		True				
ANR	660796	CFGExitNode	EXIT		660781		True				
ANR	660797	Symbol	plist		660781						
ANR	660798	Symbol	iodev		660781						
ANR	660799	Function	iodev_no_put_params	272:0:8149:8252							
ANR	660800	FunctionDef	"iodev_no_put_params (gx_io_device * iodev , gs_param_list * plist)"		660799	0					
ANR	660801	CompoundStatement		274:0:8218:8252	660799	0					
ANR	660802	ReturnStatement	return param_commit ( plist ) ;	275:4:8224:8250	660799	0	True				
ANR	660803	CallExpression	param_commit ( plist )		660799	0					
ANR	660804	Callee	param_commit		660799	0					
ANR	660805	Identifier	param_commit		660799	0					
ANR	660806	ArgumentList	plist		660799	1					
ANR	660807	Argument	plist		660799	0					
ANR	660808	Identifier	plist		660799	0					
ANR	660809	ReturnType	int		660799	1					
ANR	660810	Identifier	iodev_no_put_params		660799	2					
ANR	660811	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		660799	3					
ANR	660812	Parameter	gx_io_device * iodev	273:20:8173:8192	660799	0	True				
ANR	660813	ParameterType	gx_io_device *		660799	0					
ANR	660814	Identifier	iodev		660799	1					
ANR	660815	Parameter	gs_param_list * plist	273:42:8195:8215	660799	1	True				
ANR	660816	ParameterType	gs_param_list *		660799	0					
ANR	660817	Identifier	plist		660799	1					
ANR	660818	CFGEntryNode	ENTRY		660799		True				
ANR	660819	CFGExitNode	EXIT		660799		True				
ANR	660820	Symbol	plist		660799						
ANR	660821	Symbol	iodev		660799						
ANR	660822	Symbol	param_commit		660799						
ANR	660823	Function	iodev_os_gp_fopen	281:0:8328:8690							
ANR	660824	FunctionDef	"iodev_os_gp_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		660823	0					
ANR	660825	CompoundStatement		284:0:8470:8690	660823	0					
ANR	660826	ExpressionStatement	errno = 0	285:4:8476:8485	660823	0	True				
ANR	660827	AssignmentExpression	errno = 0		660823	0		=			
ANR	660828	Identifier	errno		660823	0					
ANR	660829	PrimaryExpression	0		660823	1					
ANR	660830	ExpressionStatement	"* pfile = gp_fopen ( fname , access )"	286:4:8491:8523	660823	1	True				
ANR	660831	AssignmentExpression	"* pfile = gp_fopen ( fname , access )"		660823	0		=			
ANR	660832	UnaryOperationExpression	* pfile		660823	0					
ANR	660833	UnaryOperator	*		660823	0					
ANR	660834	Identifier	pfile		660823	1					
ANR	660835	CallExpression	"gp_fopen ( fname , access )"		660823	1					
ANR	660836	Callee	gp_fopen		660823	0					
ANR	660837	Identifier	gp_fopen		660823	0					
ANR	660838	ArgumentList	fname		660823	1					
ANR	660839	Argument	fname		660823	0					
ANR	660840	Identifier	fname		660823	0					
ANR	660841	Argument	access		660823	1					
ANR	660842	Identifier	access		660823	0					
ANR	660843	IfStatement	if ( * pfile == NULL )		660823	2					
ANR	660844	Condition	* pfile == NULL	287:8:8533:8546	660823	0	True				
ANR	660845	EqualityExpression	* pfile == NULL		660823	0		==			
ANR	660846	UnaryOperationExpression	* pfile		660823	0					
ANR	660847	UnaryOperator	*		660823	0					
ANR	660848	Identifier	pfile		660823	1					
ANR	660849	Identifier	NULL		660823	1					
ANR	660850	ExpressionStatement	return_error ( gs_fopen_errno_to_code ( errno ) )	288:8:8557:8600	660823	1	True				
ANR	660851	CallExpression	return_error ( gs_fopen_errno_to_code ( errno ) )		660823	0					
ANR	660852	Callee	return_error		660823	0					
ANR	660853	Identifier	return_error		660823	0					
ANR	660854	ArgumentList	gs_fopen_errno_to_code ( errno )		660823	1					
ANR	660855	Argument	gs_fopen_errno_to_code ( errno )		660823	0					
ANR	660856	CallExpression	gs_fopen_errno_to_code ( errno )		660823	0					
ANR	660857	Callee	gs_fopen_errno_to_code		660823	0					
ANR	660858	Identifier	gs_fopen_errno_to_code		660823	0					
ANR	660859	ArgumentList	errno		660823	1					
ANR	660860	Argument	errno		660823	0					
ANR	660861	Identifier	errno		660823	0					
ANR	660862	IfStatement	if ( rfname != NULL && rfname != fname )		660823	3					
ANR	660863	Condition	rfname != NULL && rfname != fname	289:8:8610:8642	660823	0	True				
ANR	660864	AndExpression	rfname != NULL && rfname != fname		660823	0		&&			
ANR	660865	EqualityExpression	rfname != NULL		660823	0		!=			
ANR	660866	Identifier	rfname		660823	0					
ANR	660867	Identifier	NULL		660823	1					
ANR	660868	EqualityExpression	rfname != fname		660823	1		!=			
ANR	660869	Identifier	rfname		660823	0					
ANR	660870	Identifier	fname		660823	1					
ANR	660871	ExpressionStatement	"strcpy ( rfname , fname )"	290:8:8653:8674	660823	1	True				
ANR	660872	CallExpression	"strcpy ( rfname , fname )"		660823	0					
ANR	660873	Callee	strcpy		660823	0					
ANR	660874	Identifier	strcpy		660823	0					
ANR	660875	ArgumentList	rfname		660823	1					
ANR	660876	Argument	rfname		660823	0					
ANR	660877	Identifier	rfname		660823	0					
ANR	660878	Argument	fname		660823	1					
ANR	660879	Identifier	fname		660823	0					
ANR	660880	ReturnStatement	return 0 ;	291:4:8680:8688	660823	4	True				
ANR	660881	PrimaryExpression	0		660823	0					
ANR	660882	ReturnType	int		660823	1					
ANR	660883	Identifier	iodev_os_gp_fopen		660823	2					
ANR	660884	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		660823	3					
ANR	660885	Parameter	gx_io_device * iodev	282:18:8350:8369	660823	0	True				
ANR	660886	ParameterType	gx_io_device *		660823	0					
ANR	660887	Identifier	iodev		660823	1					
ANR	660888	Parameter	const char * fname	282:40:8372:8388	660823	1	True				
ANR	660889	ParameterType	const char *		660823	0					
ANR	660890	Identifier	fname		660823	1					
ANR	660891	Parameter	const char * access	282:59:8391:8408	660823	2	True				
ANR	660892	ParameterType	const char *		660823	0					
ANR	660893	Identifier	access		660823	1					
ANR	660894	Parameter	FILE * * pfile	283:15:8426:8438	660823	3	True				
ANR	660895	ParameterType	FILE * *		660823	0					
ANR	660896	Identifier	pfile		660823	1					
ANR	660897	Parameter	char * rfname	283:30:8441:8452	660823	4	True				
ANR	660898	ParameterType	char *		660823	0					
ANR	660899	Identifier	rfname		660823	1					
ANR	660900	Parameter	uint rnamelen	283:44:8455:8467	660823	5	True				
ANR	660901	ParameterType	uint		660823	0					
ANR	660902	Identifier	rnamelen		660823	1					
ANR	660903	CFGEntryNode	ENTRY		660823		True				
ANR	660904	CFGExitNode	EXIT		660823		True				
ANR	660905	Symbol	fname		660823						
ANR	660906	Symbol	rnamelen		660823						
ANR	660907	Symbol	errno		660823						
ANR	660908	Symbol	access		660823						
ANR	660909	Symbol	NULL		660823						
ANR	660910	Symbol	iodev		660823						
ANR	660911	Symbol	pfile		660823						
ANR	660912	Symbol	rfname		660823						
ANR	660913	Symbol	gs_fopen_errno_to_code		660823						
ANR	660914	Symbol	gp_fopen		660823						
ANR	660915	Symbol	* pfile		660823						
ANR	660916	Function	iodev_os_fclose	295:0:8741:8830							
ANR	660917	FunctionDef	"iodev_os_fclose (gx_io_device * iodev , FILE * file)"		660916	0					
ANR	660918	CompoundStatement		297:0:8796:8830	660916	0					
ANR	660919	ExpressionStatement	fclose ( file )	298:4:8802:8814	660916	0	True				
ANR	660920	CallExpression	fclose ( file )		660916	0					
ANR	660921	Callee	fclose		660916	0					
ANR	660922	Identifier	fclose		660916	0					
ANR	660923	ArgumentList	file		660916	1					
ANR	660924	Argument	file		660916	0					
ANR	660925	Identifier	file		660916	0					
ANR	660926	ReturnStatement	return 0 ;	299:4:8820:8828	660916	1	True				
ANR	660927	PrimaryExpression	0		660916	0					
ANR	660928	ReturnType	int		660916	1					
ANR	660929	Identifier	iodev_os_fclose		660916	2					
ANR	660930	ParameterList	"gx_io_device * iodev , FILE * file"		660916	3					
ANR	660931	Parameter	gx_io_device * iodev	296:16:8761:8780	660916	0	True				
ANR	660932	ParameterType	gx_io_device *		660916	0					
ANR	660933	Identifier	iodev		660916	1					
ANR	660934	Parameter	FILE * file	296:38:8783:8793	660916	1	True				
ANR	660935	ParameterType	FILE *		660916	0					
ANR	660936	Identifier	file		660916	1					
ANR	660937	CFGEntryNode	ENTRY		660916		True				
ANR	660938	CFGExitNode	EXIT		660916		True				
ANR	660939	Symbol	file		660916						
ANR	660940	Symbol	iodev		660916						
ANR	660941	Function	os_delete	302:0:8833:8953							
ANR	660942	FunctionDef	"os_delete (gx_io_device * iodev , const char * fname)"		660941	0					
ANR	660943	CompoundStatement		304:0:8895:8953	660941	0					
ANR	660944	ReturnStatement	return ( unlink ( fname ) == 0 ? 0 : gs_error_ioerror ) ;	305:4:8901:8951	660941	0	True				
ANR	660945	ConditionalExpression	unlink ( fname ) == 0 ? 0 : gs_error_ioerror		660941	0					
ANR	660946	Condition	unlink ( fname ) == 0		660941	0					
ANR	660947	EqualityExpression	unlink ( fname ) == 0		660941	0		==			
ANR	660948	CallExpression	unlink ( fname )		660941	0					
ANR	660949	Callee	unlink		660941	0					
ANR	660950	Identifier	unlink		660941	0					
ANR	660951	ArgumentList	fname		660941	1					
ANR	660952	Argument	fname		660941	0					
ANR	660953	Identifier	fname		660941	0					
ANR	660954	PrimaryExpression	0		660941	1					
ANR	660955	PrimaryExpression	0		660941	1					
ANR	660956	Identifier	gs_error_ioerror		660941	2					
ANR	660957	ReturnType	static int		660941	1					
ANR	660958	Identifier	os_delete		660941	2					
ANR	660959	ParameterList	"gx_io_device * iodev , const char * fname"		660941	3					
ANR	660960	Parameter	gx_io_device * iodev	303:10:8854:8873	660941	0	True				
ANR	660961	ParameterType	gx_io_device *		660941	0					
ANR	660962	Identifier	iodev		660941	1					
ANR	660963	Parameter	const char * fname	303:32:8876:8892	660941	1	True				
ANR	660964	ParameterType	const char *		660941	0					
ANR	660965	Identifier	fname		660941	1					
ANR	660966	CFGEntryNode	ENTRY		660941		True				
ANR	660967	CFGExitNode	EXIT		660941		True				
ANR	660968	Symbol	fname		660941						
ANR	660969	Symbol	iodev		660941						
ANR	660970	Symbol	unlink		660941						
ANR	660971	Symbol	gs_error_ioerror		660941						
ANR	660972	Function	os_rename	308:0:8956:9094							
ANR	660973	FunctionDef	"os_rename (gx_io_device * iodev , const char * from , const char * to)"		660972	0					
ANR	660974	CompoundStatement		310:0:9033:9094	660972	0					
ANR	660975	ReturnStatement	"return ( rename ( from , to ) == 0 ? 0 : gs_error_ioerror ) ;"	311:4:9039:9092	660972	0	True				
ANR	660976	ConditionalExpression	"rename ( from , to ) == 0 ? 0 : gs_error_ioerror"		660972	0					
ANR	660977	Condition	"rename ( from , to ) == 0"		660972	0					
ANR	660978	EqualityExpression	"rename ( from , to ) == 0"		660972	0		==			
ANR	660979	CallExpression	"rename ( from , to )"		660972	0					
ANR	660980	Callee	rename		660972	0					
ANR	660981	Identifier	rename		660972	0					
ANR	660982	ArgumentList	from		660972	1					
ANR	660983	Argument	from		660972	0					
ANR	660984	Identifier	from		660972	0					
ANR	660985	Argument	to		660972	1					
ANR	660986	Identifier	to		660972	0					
ANR	660987	PrimaryExpression	0		660972	1					
ANR	660988	PrimaryExpression	0		660972	1					
ANR	660989	Identifier	gs_error_ioerror		660972	2					
ANR	660990	ReturnType	static int		660972	1					
ANR	660991	Identifier	os_rename		660972	2					
ANR	660992	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		660972	3					
ANR	660993	Parameter	gx_io_device * iodev	309:10:8977:8996	660972	0	True				
ANR	660994	ParameterType	gx_io_device *		660972	0					
ANR	660995	Identifier	iodev		660972	1					
ANR	660996	Parameter	const char * from	309:32:8999:9014	660972	1	True				
ANR	660997	ParameterType	const char *		660972	0					
ANR	660998	Identifier	from		660972	1					
ANR	660999	Parameter	const char * to	309:50:9017:9030	660972	2	True				
ANR	661000	ParameterType	const char *		660972	0					
ANR	661001	Identifier	to		660972	1					
ANR	661002	CFGEntryNode	ENTRY		660972		True				
ANR	661003	CFGExitNode	EXIT		660972		True				
ANR	661004	Symbol	iodev		660972						
ANR	661005	Symbol	rename		660972						
ANR	661006	Symbol	gs_error_ioerror		660972						
ANR	661007	Symbol	from		660972						
ANR	661008	Symbol	to		660972						
ANR	661009	Function	os_status	314:0:9097:9387							
ANR	661010	FunctionDef	"os_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		661009	0					
ANR	661011	CompoundStatement		316:0:9179:9387	661009	0					
ANR	661012	ReturnStatement	"return ( gp_stat ( ( char * ) fname , pstat ) < 0 ? gs_error_undefinedfilename : 0 ) ;"	318:4:9310:9385	661009	0	True				
ANR	661013	ConditionalExpression	"gp_stat ( ( char * ) fname , pstat ) < 0 ? gs_error_undefinedfilename : 0"		661009	0					
ANR	661014	Condition	"gp_stat ( ( char * ) fname , pstat ) < 0"		661009	0					
ANR	661015	RelationalExpression	"gp_stat ( ( char * ) fname , pstat ) < 0"		661009	0		<			
ANR	661016	CallExpression	"gp_stat ( ( char * ) fname , pstat )"		661009	0					
ANR	661017	Callee	gp_stat		661009	0					
ANR	661018	Identifier	gp_stat		661009	0					
ANR	661019	ArgumentList	( char * ) fname		661009	1					
ANR	661020	Argument	( char * ) fname		661009	0					
ANR	661021	CastExpression	( char * ) fname		661009	0					
ANR	661022	CastTarget	char *		661009	0					
ANR	661023	Identifier	fname		661009	1					
ANR	661024	Argument	pstat		661009	1					
ANR	661025	Identifier	pstat		661009	0					
ANR	661026	PrimaryExpression	0		661009	1					
ANR	661027	Identifier	gs_error_undefinedfilename		661009	1					
ANR	661028	PrimaryExpression	0		661009	2					
ANR	661029	ReturnType	static int		661009	1					
ANR	661030	Identifier	os_status		661009	2					
ANR	661031	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		661009	3					
ANR	661032	Parameter	gx_io_device * iodev	315:10:9118:9137	661009	0	True				
ANR	661033	ParameterType	gx_io_device *		661009	0					
ANR	661034	Identifier	iodev		661009	1					
ANR	661035	Parameter	const char * fname	315:32:9140:9156	661009	1	True				
ANR	661036	ParameterType	const char *		661009	0					
ANR	661037	Identifier	fname		661009	1					
ANR	661038	Parameter	struct stat * pstat	315:51:9159:9176	661009	2	True				
ANR	661039	ParameterType	struct stat *		661009	0					
ANR	661040	Identifier	pstat		661009	1					
ANR	661041	CFGEntryNode	ENTRY		661009		True				
ANR	661042	CFGExitNode	EXIT		661009		True				
ANR	661043	Symbol	fname		661009						
ANR	661044	Symbol	iodev		661009						
ANR	661045	Symbol	pstat		661009						
ANR	661046	Symbol	gs_error_undefinedfilename		661009						
ANR	661047	Symbol	gp_stat		661009						
ANR	661048	Function	os_enumerate	321:0:9390:9562							
ANR	661049	FunctionDef	"os_enumerate (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		661048	0					
ANR	661050	CompoundStatement		324:0:9506:9562	661048	0					
ANR	661051	ReturnStatement	"return gp_enumerate_files_init ( pat , patlen , mem ) ;"	325:4:9512:9560	661048	0	True				
ANR	661052	CallExpression	"gp_enumerate_files_init ( pat , patlen , mem )"		661048	0					
ANR	661053	Callee	gp_enumerate_files_init		661048	0					
ANR	661054	Identifier	gp_enumerate_files_init		661048	0					
ANR	661055	ArgumentList	pat		661048	1					
ANR	661056	Argument	pat		661048	0					
ANR	661057	Identifier	pat		661048	0					
ANR	661058	Argument	patlen		661048	1					
ANR	661059	Identifier	patlen		661048	0					
ANR	661060	Argument	mem		661048	2					
ANR	661061	Identifier	mem		661048	0					
ANR	661062	ReturnType	static file_enum *		661048	1					
ANR	661063	Identifier	os_enumerate		661048	2					
ANR	661064	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		661048	3					
ANR	661065	Parameter	gx_io_device * iodev	322:13:9422:9441	661048	0	True				
ANR	661066	ParameterType	gx_io_device *		661048	0					
ANR	661067	Identifier	iodev		661048	1					
ANR	661068	Parameter	const char * pat	322:35:9444:9458	661048	1	True				
ANR	661069	ParameterType	const char *		661048	0					
ANR	661070	Identifier	pat		661048	1					
ANR	661071	Parameter	uint patlen	322:52:9461:9471	661048	2	True				
ANR	661072	ParameterType	uint		661048	0					
ANR	661073	Identifier	patlen		661048	1					
ANR	661074	Parameter	gs_memory_t * mem	323:13:9487:9503	661048	3	True				
ANR	661075	ParameterType	gs_memory_t *		661048	0					
ANR	661076	Identifier	mem		661048	1					
ANR	661077	CFGEntryNode	ENTRY		661048		True				
ANR	661078	CFGExitNode	EXIT		661048		True				
ANR	661079	Symbol	gp_enumerate_files_init		661048						
ANR	661080	Symbol	pat		661048						
ANR	661081	Symbol	iodev		661048						
ANR	661082	Symbol	mem		661048						
ANR	661083	Symbol	patlen		661048						
ANR	661084	Function	os_get_params	328:0:9565:10787							
ANR	661085	FunctionDef	"os_get_params (gx_io_device * iodev , gs_param_list * plist)"		661084	0					
ANR	661086	CompoundStatement		330:0:9635:10787	661084	0					
ANR	661087	IdentifierDeclStatement	int code ;	331:4:9641:9649	661084	0	True				
ANR	661088	IdentifierDecl	code		661084	0					
ANR	661089	IdentifierDeclType	int		661084	0					
ANR	661090	Identifier	code		661084	1					
ANR	661091	IdentifierDeclStatement	"int i0 = 0 , i2 = 2 ;"	332:4:9655:9673	661084	1	True				
ANR	661092	IdentifierDecl	i0 = 0		661084	0					
ANR	661093	IdentifierDeclType	int		661084	0					
ANR	661094	Identifier	i0		661084	1					
ANR	661095	AssignmentExpression	i0 = 0		661084	2		=			
ANR	661096	Identifier	i0		661084	0					
ANR	661097	PrimaryExpression	0		661084	1					
ANR	661098	IdentifierDecl	i2 = 2		661084	1					
ANR	661099	IdentifierDeclType	int		661084	0					
ANR	661100	Identifier	i2		661084	1					
ANR	661101	AssignmentExpression	i2 = 2		661084	2		=			
ANR	661102	Identifier	i2		661084	0					
ANR	661103	PrimaryExpression	2		661084	1					
ANR	661104	IdentifierDeclStatement	"bool btrue = true , bfalse = false ;"	333:4:9679:9712	661084	2	True				
ANR	661105	IdentifierDecl	btrue = true		661084	0					
ANR	661106	IdentifierDeclType	bool		661084	0					
ANR	661107	Identifier	btrue		661084	1					
ANR	661108	AssignmentExpression	btrue = true		661084	2		=			
ANR	661109	Identifier	true		661084	0					
ANR	661110	Identifier	true		661084	1					
ANR	661111	IdentifierDecl	bfalse = false		661084	1					
ANR	661112	IdentifierDeclType	bool		661084	0					
ANR	661113	Identifier	bfalse		661084	1					
ANR	661114	AssignmentExpression	bfalse = false		661084	2		=			
ANR	661115	Identifier	false		661084	0					
ANR	661116	Identifier	false		661084	1					
ANR	661117	IdentifierDeclStatement	int BlockSize ;	334:4:9718:9731	661084	3	True				
ANR	661118	IdentifierDecl	BlockSize		661084	0					
ANR	661119	IdentifierDeclType	int		661084	0					
ANR	661120	Identifier	BlockSize		661084	1					
ANR	661121	IdentifierDeclStatement	"long Free , LogicalSize ;"	335:4:9737:9759	661084	4	True				
ANR	661122	IdentifierDecl	Free		661084	0					
ANR	661123	IdentifierDeclType	long		661084	0					
ANR	661124	Identifier	Free		661084	1					
ANR	661125	IdentifierDecl	LogicalSize		661084	1					
ANR	661126	IdentifierDeclType	long		661084	0					
ANR	661127	Identifier	LogicalSize		661084	1					
ANR	661128	ExpressionStatement	BlockSize = 1024	341:4:9910:9926	661084	5	True				
ANR	661129	AssignmentExpression	BlockSize = 1024		661084	0		=			
ANR	661130	Identifier	BlockSize		661084	0					
ANR	661131	PrimaryExpression	1024		661084	1					
ANR	661132	ExpressionStatement	LogicalSize = 2000000000 / BlockSize	342:4:9932:9968	661084	6	True				
ANR	661133	AssignmentExpression	LogicalSize = 2000000000 / BlockSize		661084	0		=			
ANR	661134	Identifier	LogicalSize		661084	0					
ANR	661135	MultiplicativeExpression	2000000000 / BlockSize		661084	1		/			
ANR	661136	PrimaryExpression	2000000000		661084	0					
ANR	661137	Identifier	BlockSize		661084	1					
ANR	661138	ExpressionStatement	Free = LogicalSize * 3 / 4	343:4:9991:10017	661084	7	True				
ANR	661139	AssignmentExpression	Free = LogicalSize * 3 / 4		661084	0		=			
ANR	661140	Identifier	Free		661084	0					
ANR	661141	MultiplicativeExpression	LogicalSize * 3 / 4		661084	1		*			
ANR	661142	Identifier	LogicalSize		661084	0					
ANR	661143	MultiplicativeExpression	3 / 4		661084	1		/			
ANR	661144	PrimaryExpression	3		661084	0					
ANR	661145	PrimaryExpression	4		661084	1					
ANR	661146	IfStatement	"if ( ( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0 )"		661084	8					
ANR	661147	Condition	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"	346:8:10058:10740	661084	0	True				
ANR	661148	OrExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	0		||			
ANR	661149	RelationalExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0"		661084	0		<			
ANR	661150	AssignmentExpression	"code = param_write_bool ( plist , ""HasNames"" , & btrue )"		661084	0		=			
ANR	661151	Identifier	code		661084	0					
ANR	661152	CallExpression	"param_write_bool ( plist , ""HasNames"" , & btrue )"		661084	1					
ANR	661153	Callee	param_write_bool		661084	0					
ANR	661154	Identifier	param_write_bool		661084	0					
ANR	661155	ArgumentList	plist		661084	1					
ANR	661156	Argument	plist		661084	0					
ANR	661157	Identifier	plist		661084	0					
ANR	661158	Argument	"""HasNames"""		661084	1					
ANR	661159	PrimaryExpression	"""HasNames"""		661084	0					
ANR	661160	Argument	& btrue		661084	2					
ANR	661161	UnaryOperationExpression	& btrue		661084	0					
ANR	661162	UnaryOperator	&		661084	0					
ANR	661163	Identifier	btrue		661084	1					
ANR	661164	PrimaryExpression	0		661084	1					
ANR	661165	OrExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661166	RelationalExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0"		661084	0		<			
ANR	661167	AssignmentExpression	"code = param_write_int ( plist , ""BlockSize"" , & BlockSize )"		661084	0		=			
ANR	661168	Identifier	code		661084	0					
ANR	661169	CallExpression	"param_write_int ( plist , ""BlockSize"" , & BlockSize )"		661084	1					
ANR	661170	Callee	param_write_int		661084	0					
ANR	661171	Identifier	param_write_int		661084	0					
ANR	661172	ArgumentList	plist		661084	1					
ANR	661173	Argument	plist		661084	0					
ANR	661174	Identifier	plist		661084	0					
ANR	661175	Argument	"""BlockSize"""		661084	1					
ANR	661176	PrimaryExpression	"""BlockSize"""		661084	0					
ANR	661177	Argument	& BlockSize		661084	2					
ANR	661178	UnaryOperationExpression	& BlockSize		661084	0					
ANR	661179	UnaryOperator	&		661084	0					
ANR	661180	Identifier	BlockSize		661084	1					
ANR	661181	PrimaryExpression	0		661084	1					
ANR	661182	OrExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661183	RelationalExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0"		661084	0		<			
ANR	661184	AssignmentExpression	"code = param_write_long ( plist , ""Free"" , & Free )"		661084	0		=			
ANR	661185	Identifier	code		661084	0					
ANR	661186	CallExpression	"param_write_long ( plist , ""Free"" , & Free )"		661084	1					
ANR	661187	Callee	param_write_long		661084	0					
ANR	661188	Identifier	param_write_long		661084	0					
ANR	661189	ArgumentList	plist		661084	1					
ANR	661190	Argument	plist		661084	0					
ANR	661191	Identifier	plist		661084	0					
ANR	661192	Argument	"""Free"""		661084	1					
ANR	661193	PrimaryExpression	"""Free"""		661084	0					
ANR	661194	Argument	& Free		661084	2					
ANR	661195	UnaryOperationExpression	& Free		661084	0					
ANR	661196	UnaryOperator	&		661084	0					
ANR	661197	Identifier	Free		661084	1					
ANR	661198	PrimaryExpression	0		661084	1					
ANR	661199	OrExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661200	RelationalExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0"		661084	0		<			
ANR	661201	AssignmentExpression	"code = param_write_int ( plist , ""InitializeAction"" , & i0 )"		661084	0		=			
ANR	661202	Identifier	code		661084	0					
ANR	661203	CallExpression	"param_write_int ( plist , ""InitializeAction"" , & i0 )"		661084	1					
ANR	661204	Callee	param_write_int		661084	0					
ANR	661205	Identifier	param_write_int		661084	0					
ANR	661206	ArgumentList	plist		661084	1					
ANR	661207	Argument	plist		661084	0					
ANR	661208	Identifier	plist		661084	0					
ANR	661209	Argument	"""InitializeAction"""		661084	1					
ANR	661210	PrimaryExpression	"""InitializeAction"""		661084	0					
ANR	661211	Argument	& i0		661084	2					
ANR	661212	UnaryOperationExpression	& i0		661084	0					
ANR	661213	UnaryOperator	&		661084	0					
ANR	661214	Identifier	i0		661084	1					
ANR	661215	PrimaryExpression	0		661084	1					
ANR	661216	OrExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661217	RelationalExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0"		661084	0		<			
ANR	661218	AssignmentExpression	"code = param_write_bool ( plist , ""Mounted"" , & btrue )"		661084	0		=			
ANR	661219	Identifier	code		661084	0					
ANR	661220	CallExpression	"param_write_bool ( plist , ""Mounted"" , & btrue )"		661084	1					
ANR	661221	Callee	param_write_bool		661084	0					
ANR	661222	Identifier	param_write_bool		661084	0					
ANR	661223	ArgumentList	plist		661084	1					
ANR	661224	Argument	plist		661084	0					
ANR	661225	Identifier	plist		661084	0					
ANR	661226	Argument	"""Mounted"""		661084	1					
ANR	661227	PrimaryExpression	"""Mounted"""		661084	0					
ANR	661228	Argument	& btrue		661084	2					
ANR	661229	UnaryOperationExpression	& btrue		661084	0					
ANR	661230	UnaryOperator	&		661084	0					
ANR	661231	Identifier	btrue		661084	1					
ANR	661232	PrimaryExpression	0		661084	1					
ANR	661233	OrExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661234	RelationalExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0"		661084	0		<			
ANR	661235	AssignmentExpression	"code = param_write_bool ( plist , ""Removable"" , & bfalse )"		661084	0		=			
ANR	661236	Identifier	code		661084	0					
ANR	661237	CallExpression	"param_write_bool ( plist , ""Removable"" , & bfalse )"		661084	1					
ANR	661238	Callee	param_write_bool		661084	0					
ANR	661239	Identifier	param_write_bool		661084	0					
ANR	661240	ArgumentList	plist		661084	1					
ANR	661241	Argument	plist		661084	0					
ANR	661242	Identifier	plist		661084	0					
ANR	661243	Argument	"""Removable"""		661084	1					
ANR	661244	PrimaryExpression	"""Removable"""		661084	0					
ANR	661245	Argument	& bfalse		661084	2					
ANR	661246	UnaryOperationExpression	& bfalse		661084	0					
ANR	661247	UnaryOperator	&		661084	0					
ANR	661248	Identifier	bfalse		661084	1					
ANR	661249	PrimaryExpression	0		661084	1					
ANR	661250	OrExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661251	RelationalExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0"		661084	0		<			
ANR	661252	AssignmentExpression	"code = param_write_bool ( plist , ""Searchable"" , & btrue )"		661084	0		=			
ANR	661253	Identifier	code		661084	0					
ANR	661254	CallExpression	"param_write_bool ( plist , ""Searchable"" , & btrue )"		661084	1					
ANR	661255	Callee	param_write_bool		661084	0					
ANR	661256	Identifier	param_write_bool		661084	0					
ANR	661257	ArgumentList	plist		661084	1					
ANR	661258	Argument	plist		661084	0					
ANR	661259	Identifier	plist		661084	0					
ANR	661260	Argument	"""Searchable"""		661084	1					
ANR	661261	PrimaryExpression	"""Searchable"""		661084	0					
ANR	661262	Argument	& btrue		661084	2					
ANR	661263	UnaryOperationExpression	& btrue		661084	0					
ANR	661264	UnaryOperator	&		661084	0					
ANR	661265	Identifier	btrue		661084	1					
ANR	661266	PrimaryExpression	0		661084	1					
ANR	661267	OrExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661268	RelationalExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0"		661084	0		<			
ANR	661269	AssignmentExpression	"code = param_write_int ( plist , ""SearchOrder"" , & i2 )"		661084	0		=			
ANR	661270	Identifier	code		661084	0					
ANR	661271	CallExpression	"param_write_int ( plist , ""SearchOrder"" , & i2 )"		661084	1					
ANR	661272	Callee	param_write_int		661084	0					
ANR	661273	Identifier	param_write_int		661084	0					
ANR	661274	ArgumentList	plist		661084	1					
ANR	661275	Argument	plist		661084	0					
ANR	661276	Identifier	plist		661084	0					
ANR	661277	Argument	"""SearchOrder"""		661084	1					
ANR	661278	PrimaryExpression	"""SearchOrder"""		661084	0					
ANR	661279	Argument	& i2		661084	2					
ANR	661280	UnaryOperationExpression	& i2		661084	0					
ANR	661281	UnaryOperator	&		661084	0					
ANR	661282	Identifier	i2		661084	1					
ANR	661283	PrimaryExpression	0		661084	1					
ANR	661284	OrExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		||			
ANR	661285	RelationalExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0"		661084	0		<			
ANR	661286	AssignmentExpression	"code = param_write_bool ( plist , ""Writeable"" , & btrue )"		661084	0		=			
ANR	661287	Identifier	code		661084	0					
ANR	661288	CallExpression	"param_write_bool ( plist , ""Writeable"" , & btrue )"		661084	1					
ANR	661289	Callee	param_write_bool		661084	0					
ANR	661290	Identifier	param_write_bool		661084	0					
ANR	661291	ArgumentList	plist		661084	1					
ANR	661292	Argument	plist		661084	0					
ANR	661293	Identifier	plist		661084	0					
ANR	661294	Argument	"""Writeable"""		661084	1					
ANR	661295	PrimaryExpression	"""Writeable"""		661084	0					
ANR	661296	Argument	& btrue		661084	2					
ANR	661297	UnaryOperationExpression	& btrue		661084	0					
ANR	661298	UnaryOperator	&		661084	0					
ANR	661299	Identifier	btrue		661084	1					
ANR	661300	PrimaryExpression	0		661084	1					
ANR	661301	RelationalExpression	"( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		661084	1		<			
ANR	661302	AssignmentExpression	"code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		661084	0		=			
ANR	661303	Identifier	code		661084	0					
ANR	661304	CallExpression	"param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		661084	1					
ANR	661305	Callee	param_write_long		661084	0					
ANR	661306	Identifier	param_write_long		661084	0					
ANR	661307	ArgumentList	plist		661084	1					
ANR	661308	Argument	plist		661084	0					
ANR	661309	Identifier	plist		661084	0					
ANR	661310	Argument	"""LogicalSize"""		661084	1					
ANR	661311	PrimaryExpression	"""LogicalSize"""		661084	0					
ANR	661312	Argument	& LogicalSize		661084	2					
ANR	661313	UnaryOperationExpression	& LogicalSize		661084	0					
ANR	661314	UnaryOperator	&		661084	0					
ANR	661315	Identifier	LogicalSize		661084	1					
ANR	661316	PrimaryExpression	0		661084	1					
ANR	661317	ReturnStatement	return code ;	357:8:10760:10771	661084	1	True				
ANR	661318	Identifier	code		661084	0					
ANR	661319	ReturnStatement	return 0 ;	358:4:10777:10785	661084	9	True				
ANR	661320	PrimaryExpression	0		661084	0					
ANR	661321	ReturnType	static int		661084	1					
ANR	661322	Identifier	os_get_params		661084	2					
ANR	661323	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		661084	3					
ANR	661324	Parameter	gx_io_device * iodev	329:14:9590:9609	661084	0	True				
ANR	661325	ParameterType	gx_io_device *		661084	0					
ANR	661326	Identifier	iodev		661084	1					
ANR	661327	Parameter	gs_param_list * plist	329:36:9612:9632	661084	1	True				
ANR	661328	ParameterType	gs_param_list *		661084	0					
ANR	661329	Identifier	plist		661084	1					
ANR	661330	CFGEntryNode	ENTRY		661084		True				
ANR	661331	CFGExitNode	EXIT		661084		True				
ANR	661332	Symbol	& bfalse		661084						
ANR	661333	Symbol	& LogicalSize		661084						
ANR	661334	Symbol	code		661084						
ANR	661335	Symbol	LogicalSize		661084						
ANR	661336	Symbol	& BlockSize		661084						
ANR	661337	Symbol	i0		661084						
ANR	661338	Symbol	bfalse		661084						
ANR	661339	Symbol	false		661084						
ANR	661340	Symbol	i2		661084						
ANR	661341	Symbol	btrue		661084						
ANR	661342	Symbol	Free		661084						
ANR	661343	Symbol	& i0		661084						
ANR	661344	Symbol	param_write_bool		661084						
ANR	661345	Symbol	plist		661084						
ANR	661346	Symbol	& i2		661084						
ANR	661347	Symbol	iodev		661084						
ANR	661348	Symbol	& btrue		661084						
ANR	661349	Symbol	true		661084						
ANR	661350	Symbol	& Free		661084						
ANR	661351	Symbol	BlockSize		661084						
ANR	661352	Symbol	param_write_int		661084						
ANR	661353	Symbol	param_write_long		661084						
ANR	661354	Function	gs_getiodevice	364:0:10878:11224							
ANR	661355	FunctionDef	"gs_getiodevice (const gs_memory_t * mem , int index)"		661354	0					
ANR	661356	CompoundStatement		366:0:10943:11224	661354	0					
ANR	661357	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	367:4:10949:11007	661354	0	True				
ANR	661358	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		661354	0					
ANR	661359	IdentifierDeclType	gs_lib_ctx_t *		661354	0					
ANR	661360	Identifier	libctx		661354	1					
ANR	661361	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		661354	2		=			
ANR	661362	Identifier	libctx		661354	0					
ANR	661363	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		661354	1					
ANR	661364	Callee	gs_lib_ctx_get_interp_instance		661354	0					
ANR	661365	Identifier	gs_lib_ctx_get_interp_instance		661354	0					
ANR	661366	ArgumentList	mem		661354	1					
ANR	661367	Argument	mem		661354	0					
ANR	661368	Identifier	mem		661354	0					
ANR	661369	IfStatement	if ( libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count )		661354	1					
ANR	661370	Condition	libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count	369:8:11018:11134	661354	0	True				
ANR	661371	OrExpression	libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count		661354	0		||			
ANR	661372	EqualityExpression	libctx == NULL		661354	0		==			
ANR	661373	Identifier	libctx		661354	0					
ANR	661374	Identifier	NULL		661354	1					
ANR	661375	OrExpression	libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count		661354	1		||			
ANR	661376	EqualityExpression	libctx -> io_device_table == NULL		661354	0		==			
ANR	661377	PtrMemberAccess	libctx -> io_device_table		661354	0					
ANR	661378	Identifier	libctx		661354	0					
ANR	661379	Identifier	io_device_table		661354	1					
ANR	661380	Identifier	NULL		661354	1					
ANR	661381	OrExpression	index < 0 || index >= libctx -> io_device_table_count		661354	1		||			
ANR	661382	RelationalExpression	index < 0		661354	0		<			
ANR	661383	Identifier	index		661354	0					
ANR	661384	PrimaryExpression	0		661354	1					
ANR	661385	RelationalExpression	index >= libctx -> io_device_table_count		661354	1		>=			
ANR	661386	Identifier	index		661354	0					
ANR	661387	PtrMemberAccess	libctx -> io_device_table_count		661354	1					
ANR	661388	Identifier	libctx		661354	0					
ANR	661389	Identifier	io_device_table_count		661354	1					
ANR	661390	ReturnStatement	return 0 ;	371:8:11145:11153	661354	1	True				
ANR	661391	PrimaryExpression	0		661354	0					
ANR	661392	ReturnStatement	return libctx -> io_device_table [ index ] ;	372:4:11185:11222	661354	2	True				
ANR	661393	ArrayIndexing	libctx -> io_device_table [ index ]		661354	0					
ANR	661394	PtrMemberAccess	libctx -> io_device_table		661354	0					
ANR	661395	Identifier	libctx		661354	0					
ANR	661396	Identifier	io_device_table		661354	1					
ANR	661397	Identifier	index		661354	1					
ANR	661398	ReturnType	gx_io_device *		661354	1					
ANR	661399	Identifier	gs_getiodevice		661354	2					
ANR	661400	ParameterList	"const gs_memory_t * mem , int index"		661354	3					
ANR	661401	Parameter	const gs_memory_t * mem	365:15:10908:10929	661354	0	True				
ANR	661402	ParameterType	const gs_memory_t *		661354	0					
ANR	661403	Identifier	mem		661354	1					
ANR	661404	Parameter	int index	365:39:10932:10940	661354	1	True				
ANR	661405	ParameterType	int		661354	0					
ANR	661406	Identifier	index		661354	1					
ANR	661407	CFGEntryNode	ENTRY		661354		True				
ANR	661408	CFGExitNode	EXIT		661354		True				
ANR	661409	Symbol	libctx -> io_device_table		661354						
ANR	661410	Symbol	* libctx		661354						
ANR	661411	Symbol	libctx		661354						
ANR	661412	Symbol	NULL		661354						
ANR	661413	Symbol	* libctx -> io_device_table		661354						
ANR	661414	Symbol	mem		661354						
ANR	661415	Symbol	* index		661354						
ANR	661416	Symbol	index		661354						
ANR	661417	Symbol	libctx -> io_device_table_count		661354						
ANR	661418	Symbol	* * libctx		661354						
ANR	661419	Symbol	gs_lib_ctx_get_interp_instance		661354						
ANR	661420	Function	gs_findiodevice	377:0:11309:11858							
ANR	661421	FunctionDef	"gs_findiodevice (const gs_memory_t * mem , const byte * str , uint len)"		661420	0					
ANR	661422	CompoundStatement		379:0:11392:11858	661420	0					
ANR	661423	IdentifierDeclStatement	int i ;	380:4:11398:11403	661420	0	True				
ANR	661424	IdentifierDecl	i		661420	0					
ANR	661425	IdentifierDeclType	int		661420	0					
ANR	661426	Identifier	i		661420	1					
ANR	661427	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	381:4:11409:11467	661420	1	True				
ANR	661428	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		661420	0					
ANR	661429	IdentifierDeclType	gs_lib_ctx_t *		661420	0					
ANR	661430	Identifier	libctx		661420	1					
ANR	661431	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		661420	2		=			
ANR	661432	Identifier	libctx		661420	0					
ANR	661433	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		661420	1					
ANR	661434	Callee	gs_lib_ctx_get_interp_instance		661420	0					
ANR	661435	Identifier	gs_lib_ctx_get_interp_instance		661420	0					
ANR	661436	ArgumentList	mem		661420	1					
ANR	661437	Argument	mem		661420	0					
ANR	661438	Identifier	mem		661420	0					
ANR	661439	IfStatement	if ( libctx -> io_device_table == 0 )		661420	2					
ANR	661440	Condition	libctx -> io_device_table == 0	383:8:11478:11505	661420	0	True				
ANR	661441	EqualityExpression	libctx -> io_device_table == 0		661420	0		==			
ANR	661442	PtrMemberAccess	libctx -> io_device_table		661420	0					
ANR	661443	Identifier	libctx		661420	0					
ANR	661444	Identifier	io_device_table		661420	1					
ANR	661445	PrimaryExpression	0		661420	1					
ANR	661446	ReturnStatement	return 0 ;	384:5:11513:11521	661420	1	True				
ANR	661447	PrimaryExpression	0		661420	0					
ANR	661448	IfStatement	if ( len > 1 && str [ len - 1 ] == '%' )		661420	3					
ANR	661449	Condition	len > 1 && str [ len - 1 ] == '%'	385:8:11531:11560	661420	0	True				
ANR	661450	AndExpression	len > 1 && str [ len - 1 ] == '%'		661420	0		&&			
ANR	661451	RelationalExpression	len > 1		661420	0		>			
ANR	661452	Identifier	len		661420	0					
ANR	661453	PrimaryExpression	1		661420	1					
ANR	661454	EqualityExpression	str [ len - 1 ] == '%'		661420	1		==			
ANR	661455	ArrayIndexing	str [ len - 1 ]		661420	0					
ANR	661456	Identifier	str		661420	0					
ANR	661457	AdditiveExpression	len - 1		661420	1		-			
ANR	661458	Identifier	len		661420	0					
ANR	661459	PrimaryExpression	1		661420	1					
ANR	661460	PrimaryExpression	'%'		661420	1					
ANR	661461	ExpressionStatement	len --	386:8:11571:11576	661420	1	True				
ANR	661462	PostIncDecOperationExpression	len --		661420	0					
ANR	661463	Identifier	len		661420	0					
ANR	661464	IncDec	--		661420	1					
ANR	661465	ForStatement	for ( i = 0 ; i < libctx -> io_device_table_count ; ++ i )		661420	4					
ANR	661466	ForInit	i = 0 ;	387:9:11587:11592	661420	0	True				
ANR	661467	AssignmentExpression	i = 0		661420	0		=			
ANR	661468	Identifier	i		661420	0					
ANR	661469	PrimaryExpression	0		661420	1					
ANR	661470	Condition	i < libctx -> io_device_table_count	387:16:11594:11626	661420	1	True				
ANR	661471	RelationalExpression	i < libctx -> io_device_table_count		661420	0		<			
ANR	661472	Identifier	i		661420	0					
ANR	661473	PtrMemberAccess	libctx -> io_device_table_count		661420	1					
ANR	661474	Identifier	libctx		661420	0					
ANR	661475	Identifier	io_device_table_count		661420	1					
ANR	661476	UnaryExpression	++ i	387:51:11629:11631	661420	2	True				
ANR	661477	IncDec	++		661420	0					
ANR	661478	Identifier	i		661420	1					
ANR	661479	CompoundStatement		11:8:309:341	661420	3					
ANR	661480	IdentifierDeclStatement	gx_io_device * iodev = libctx -> io_device_table [ i ] ;	388:8:11644:11692	661420	0	True				
ANR	661481	IdentifierDecl	* iodev = libctx -> io_device_table [ i ]		661420	0					
ANR	661482	IdentifierDeclType	gx_io_device *		661420	0					
ANR	661483	Identifier	iodev		661420	1					
ANR	661484	AssignmentExpression	* iodev = libctx -> io_device_table [ i ]		661420	2		=			
ANR	661485	Identifier	iodev		661420	0					
ANR	661486	ArrayIndexing	libctx -> io_device_table [ i ]		661420	1					
ANR	661487	PtrMemberAccess	libctx -> io_device_table		661420	0					
ANR	661488	Identifier	libctx		661420	0					
ANR	661489	Identifier	io_device_table		661420	1					
ANR	661490	Identifier	i		661420	1					
ANR	661491	IdentifierDeclStatement	const char * dname = iodev -> dname ;	389:8:11702:11734	661420	1	True				
ANR	661492	IdentifierDecl	* dname = iodev -> dname		661420	0					
ANR	661493	IdentifierDeclType	const char *		661420	0					
ANR	661494	Identifier	dname		661420	1					
ANR	661495	AssignmentExpression	* dname = iodev -> dname		661420	2		=			
ANR	661496	Identifier	dname		661420	0					
ANR	661497	PtrMemberAccess	iodev -> dname		661420	1					
ANR	661498	Identifier	iodev		661420	0					
ANR	661499	Identifier	dname		661420	1					
ANR	661500	IfStatement	"if ( dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len ) )"		661420	2					
ANR	661501	Condition	"dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"	391:12:11749:11809	661420	0	True				
ANR	661502	AndExpression	"dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"		661420	0		&&			
ANR	661503	Identifier	dname		661420	0					
ANR	661504	AndExpression	"strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"		661420	1		&&			
ANR	661505	EqualityExpression	strlen ( dname ) == len + 1		661420	0		==			
ANR	661506	CallExpression	strlen ( dname )		661420	0					
ANR	661507	Callee	strlen		661420	0					
ANR	661508	Identifier	strlen		661420	0					
ANR	661509	ArgumentList	dname		661420	1					
ANR	661510	Argument	dname		661420	0					
ANR	661511	Identifier	dname		661420	0					
ANR	661512	AdditiveExpression	len + 1		661420	1		+			
ANR	661513	Identifier	len		661420	0					
ANR	661514	PrimaryExpression	1		661420	1					
ANR	661515	UnaryOperationExpression	"! memcmp ( str , dname , len )"		661420	1					
ANR	661516	UnaryOperator	!		661420	0					
ANR	661517	CallExpression	"memcmp ( str , dname , len )"		661420	1					
ANR	661518	Callee	memcmp		661420	0					
ANR	661519	Identifier	memcmp		661420	0					
ANR	661520	ArgumentList	str		661420	1					
ANR	661521	Argument	str		661420	0					
ANR	661522	Identifier	str		661420	0					
ANR	661523	Argument	dname		661420	1					
ANR	661524	Identifier	dname		661420	0					
ANR	661525	Argument	len		661420	2					
ANR	661526	Identifier	len		661420	0					
ANR	661527	ReturnStatement	return iodev ;	392:12:11824:11836	661420	1	True				
ANR	661528	Identifier	iodev		661420	0					
ANR	661529	ReturnStatement	return 0 ;	394:4:11848:11856	661420	5	True				
ANR	661530	PrimaryExpression	0		661420	0					
ANR	661531	ReturnType	gx_io_device *		661420	1					
ANR	661532	Identifier	gs_findiodevice		661420	2					
ANR	661533	ParameterList	"const gs_memory_t * mem , const byte * str , uint len"		661420	3					
ANR	661534	Parameter	const gs_memory_t * mem	378:16:11340:11361	661420	0	True				
ANR	661535	ParameterType	const gs_memory_t *		661420	0					
ANR	661536	Identifier	mem		661420	1					
ANR	661537	Parameter	const byte * str	378:40:11364:11379	661420	1	True				
ANR	661538	ParameterType	const byte *		661420	0					
ANR	661539	Identifier	str		661420	1					
ANR	661540	Parameter	uint len	378:58:11382:11389	661420	2	True				
ANR	661541	ParameterType	uint		661420	0					
ANR	661542	Identifier	len		661420	1					
ANR	661543	CFGEntryNode	ENTRY		661420		True				
ANR	661544	CFGExitNode	EXIT		661420		True				
ANR	661545	Symbol	* libctx		661420						
ANR	661546	Symbol	libctx		661420						
ANR	661547	Symbol	* libctx -> io_device_table		661420						
ANR	661548	Symbol	iodev -> dname		661420						
ANR	661549	Symbol	* iodev		661420						
ANR	661550	Symbol	i		661420						
ANR	661551	Symbol	libctx -> io_device_table_count		661420						
ANR	661552	Symbol	str		661420						
ANR	661553	Symbol	libctx -> io_device_table		661420						
ANR	661554	Symbol	strlen		661420						
ANR	661555	Symbol	* i		661420						
ANR	661556	Symbol	memcmp		661420						
ANR	661557	Symbol	mem		661420						
ANR	661558	Symbol	len		661420						
ANR	661559	Symbol	iodev		661420						
ANR	661560	Symbol	* * libctx		661420						
ANR	661561	Symbol	gs_lib_ctx_get_interp_instance		661420						
ANR	661562	Symbol	* str		661420						
ANR	661563	Symbol	dname		661420						
ANR	661564	Symbol	* len		661420						
ANR	661565	Function	gs_getdevparams	400:0:11923:12267							
ANR	661566	FunctionDef	"gs_getdevparams (gx_io_device * iodev , gs_param_list * plist)"		661565	0					
ANR	661567	CompoundStatement		402:0:11988:12267	661565	0					
ANR	661568	IdentifierDeclStatement	gs_param_string ts ;	403:4:12042:12060	661565	0	True				
ANR	661569	IdentifierDecl	ts		661565	0					
ANR	661570	IdentifierDeclType	gs_param_string		661565	0					
ANR	661571	Identifier	ts		661565	1					
ANR	661572	IdentifierDeclStatement	int code ;	404:4:12066:12074	661565	1	True				
ANR	661573	IdentifierDecl	code		661565	0					
ANR	661574	IdentifierDeclType	int		661565	0					
ANR	661575	Identifier	code		661565	1					
ANR	661576	ExpressionStatement	"param_string_from_string ( ts , iodev -> dtype )"	406:4:12081:12123	661565	2	True				
ANR	661577	CallExpression	"param_string_from_string ( ts , iodev -> dtype )"		661565	0					
ANR	661578	Callee	param_string_from_string		661565	0					
ANR	661579	Identifier	param_string_from_string		661565	0					
ANR	661580	ArgumentList	ts		661565	1					
ANR	661581	Argument	ts		661565	0					
ANR	661582	Identifier	ts		661565	0					
ANR	661583	Argument	iodev -> dtype		661565	1					
ANR	661584	PtrMemberAccess	iodev -> dtype		661565	0					
ANR	661585	Identifier	iodev		661565	0					
ANR	661586	Identifier	dtype		661565	1					
ANR	661587	ExpressionStatement	"code = param_write_name ( plist , ""Type"" , & ts )"	407:4:12129:12172	661565	3	True				
ANR	661588	AssignmentExpression	"code = param_write_name ( plist , ""Type"" , & ts )"		661565	0		=			
ANR	661589	Identifier	code		661565	0					
ANR	661590	CallExpression	"param_write_name ( plist , ""Type"" , & ts )"		661565	1					
ANR	661591	Callee	param_write_name		661565	0					
ANR	661592	Identifier	param_write_name		661565	0					
ANR	661593	ArgumentList	plist		661565	1					
ANR	661594	Argument	plist		661565	0					
ANR	661595	Identifier	plist		661565	0					
ANR	661596	Argument	"""Type"""		661565	1					
ANR	661597	PrimaryExpression	"""Type"""		661565	0					
ANR	661598	Argument	& ts		661565	2					
ANR	661599	UnaryOperationExpression	& ts		661565	0					
ANR	661600	UnaryOperator	&		661565	0					
ANR	661601	Identifier	ts		661565	1					
ANR	661602	IfStatement	if ( code < 0 )		661565	4					
ANR	661603	Condition	code < 0	408:8:12182:12189	661565	0	True				
ANR	661604	RelationalExpression	code < 0		661565	0		<			
ANR	661605	Identifier	code		661565	0					
ANR	661606	PrimaryExpression	0		661565	1					
ANR	661607	ReturnStatement	return code ;	409:8:12200:12211	661565	1	True				
ANR	661608	Identifier	code		661565	0					
ANR	661609	ReturnStatement	"return ( * iodev -> procs . get_params ) ( iodev , plist ) ;"	410:4:12217:12265	661565	5	True				
ANR	661610	CallExpression	"( * iodev -> procs . get_params ) ( iodev , plist )"		661565	0					
ANR	661611	Callee	* iodev -> procs . get_params		661565	0					
ANR	661612	UnaryOperationExpression	* iodev -> procs . get_params		661565	0					
ANR	661613	UnaryOperator	*		661565	0					
ANR	661614	MemberAccess	iodev -> procs . get_params		661565	1					
ANR	661615	PtrMemberAccess	iodev -> procs		661565	0					
ANR	661616	Identifier	iodev		661565	0					
ANR	661617	Identifier	procs		661565	1					
ANR	661618	Identifier	get_params		661565	1					
ANR	661619	ArgumentList	iodev		661565	1					
ANR	661620	Argument	iodev		661565	0					
ANR	661621	Identifier	iodev		661565	0					
ANR	661622	Argument	plist		661565	1					
ANR	661623	Identifier	plist		661565	0					
ANR	661624	ReturnType	int		661565	1					
ANR	661625	Identifier	gs_getdevparams		661565	2					
ANR	661626	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		661565	3					
ANR	661627	Parameter	gx_io_device * iodev	401:16:11943:11962	661565	0	True				
ANR	661628	ParameterType	gx_io_device *		661565	0					
ANR	661629	Identifier	iodev		661565	1					
ANR	661630	Parameter	gs_param_list * plist	401:38:11965:11985	661565	1	True				
ANR	661631	ParameterType	gs_param_list *		661565	0					
ANR	661632	Identifier	plist		661565	1					
ANR	661633	CFGEntryNode	ENTRY		661565		True				
ANR	661634	CFGExitNode	EXIT		661565		True				
ANR	661635	Symbol	* iodev -> procs . get_params		661565						
ANR	661636	Symbol	code		661565						
ANR	661637	Symbol	* iodev		661565						
ANR	661638	Symbol	& ts		661565						
ANR	661639	Symbol	* iodev -> procs		661565						
ANR	661640	Symbol	param_write_name		661565						
ANR	661641	Symbol	plist		661565						
ANR	661642	Symbol	iodev -> procs . get_params		661565						
ANR	661643	Symbol	iodev		661565						
ANR	661644	Symbol	iodev -> dtype		661565						
ANR	661645	Symbol	ts		661565						
ANR	661646	Symbol	iodev -> procs		661565						
ANR	661647	Symbol	* * iodev		661565						
ANR	661648	Function	gs_putdevparams	414:0:12301:12422							
ANR	661649	FunctionDef	"gs_putdevparams (gx_io_device * iodev , gs_param_list * plist)"		661648	0					
ANR	661650	CompoundStatement		416:0:12366:12422	661648	0					
ANR	661651	ReturnStatement	"return ( * iodev -> procs . put_params ) ( iodev , plist ) ;"	417:4:12372:12420	661648	0	True				
ANR	661652	CallExpression	"( * iodev -> procs . put_params ) ( iodev , plist )"		661648	0					
ANR	661653	Callee	* iodev -> procs . put_params		661648	0					
ANR	661654	UnaryOperationExpression	* iodev -> procs . put_params		661648	0					
ANR	661655	UnaryOperator	*		661648	0					
ANR	661656	MemberAccess	iodev -> procs . put_params		661648	1					
ANR	661657	PtrMemberAccess	iodev -> procs		661648	0					
ANR	661658	Identifier	iodev		661648	0					
ANR	661659	Identifier	procs		661648	1					
ANR	661660	Identifier	put_params		661648	1					
ANR	661661	ArgumentList	iodev		661648	1					
ANR	661662	Argument	iodev		661648	0					
ANR	661663	Identifier	iodev		661648	0					
ANR	661664	Argument	plist		661648	1					
ANR	661665	Identifier	plist		661648	0					
ANR	661666	ReturnType	int		661648	1					
ANR	661667	Identifier	gs_putdevparams		661648	2					
ANR	661668	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		661648	3					
ANR	661669	Parameter	gx_io_device * iodev	415:16:12321:12340	661648	0	True				
ANR	661670	ParameterType	gx_io_device *		661648	0					
ANR	661671	Identifier	iodev		661648	1					
ANR	661672	Parameter	gs_param_list * plist	415:38:12343:12363	661648	1	True				
ANR	661673	ParameterType	gs_param_list *		661648	0					
ANR	661674	Identifier	plist		661648	1					
ANR	661675	CFGEntryNode	ENTRY		661648		True				
ANR	661676	CFGExitNode	EXIT		661648		True				
ANR	661677	Symbol	plist		661648						
ANR	661678	Symbol	iodev		661648						
ANR	661679	Symbol	* iodev		661648						
ANR	661680	Symbol	iodev -> procs . put_params		661648						
ANR	661681	Symbol	* iodev -> procs		661648						
ANR	661682	Symbol	* iodev -> procs . put_params		661648						
ANR	661683	Symbol	iodev -> procs		661648						
ANR	661684	Symbol	* * iodev		661648						
ANR	661685	Function	gs_fopen_errno_to_code	422:0:12511:13417							
ANR	661686	FunctionDef	gs_fopen_errno_to_code (int eno)		661685	0					
ANR	661687	CompoundStatement		424:0:12547:13417	661685	0					
ANR	661688	SwitchStatement	switch ( eno )		661685	0					
ANR	661689	Condition	eno	426:12:12681:12683	661685	0	True				
ANR	661690	Identifier	eno		661685	0					
ANR	661691	CompoundStatement		3:17:138:138	661685	1					
ANR	661692	Label	case ENOENT :	428:8:12710:12721	661685	0	True				
ANR	661693	Identifier	ENOENT		661685	0					
ANR	661694	ExpressionStatement	return_error ( gs_error_undefinedfilename )	429:12:12735:12775	661685	1	True				
ANR	661695	CallExpression	return_error ( gs_error_undefinedfilename )		661685	0					
ANR	661696	Callee	return_error		661685	0					
ANR	661697	Identifier	return_error		661685	0					
ANR	661698	ArgumentList	gs_error_undefinedfilename		661685	1					
ANR	661699	Argument	gs_error_undefinedfilename		661685	0					
ANR	661700	Identifier	gs_error_undefinedfilename		661685	0					
ANR	661701	Statement	ifndef	432:3:12802:12807	661685	2	True				
ANR	661702	Statement	ENOENT	432:10:12809:12814	661685	3	True				
ANR	661703	Statement	define	433:5:12821:12826	661685	4	True				
ANR	661704	Statement	ENOENT	433:12:12828:12833	661685	5	True				
ANR	661705	Statement	ENOFILE	433:19:12835:12841	661685	6	True				
ANR	661706	Statement	endif	434:3:12846:12850	661685	7	True				
ANR	661707	Statement	if	435:3:12855:12856	661685	8	True				
ANR	661708	Statement	ENOFILE	435:6:12858:12864	661685	9	True				
ANR	661709	Statement	!=	435:14:12866:12867	661685	10	True				
ANR	661710	Statement	ENOENT	435:17:12869:12874	661685	11	True				
ANR	661711	Label	case ENOFILE :	436:8:12884:12896	661685	12	True				
ANR	661712	Identifier	ENOFILE		661685	0					
ANR	661713	ExpressionStatement	return_error ( gs_error_undefinedfilename )	437:12:12910:12950	661685	13	True				
ANR	661714	CallExpression	return_error ( gs_error_undefinedfilename )		661685	0					
ANR	661715	Callee	return_error		661685	0					
ANR	661716	Identifier	return_error		661685	0					
ANR	661717	ArgumentList	gs_error_undefinedfilename		661685	1					
ANR	661718	Argument	gs_error_undefinedfilename		661685	0					
ANR	661719	Identifier	gs_error_undefinedfilename		661685	0					
ANR	661720	Statement	endif	438:3:12955:12959	661685	14	True				
ANR	661721	Label	case ENAMETOOLONG :	441:8:12996:13013	661685	15	True				
ANR	661722	Identifier	ENAMETOOLONG		661685	0					
ANR	661723	ExpressionStatement	return_error ( gs_error_undefinedfilename )	442:12:13027:13067	661685	16	True				
ANR	661724	CallExpression	return_error ( gs_error_undefinedfilename )		661685	0					
ANR	661725	Callee	return_error		661685	0					
ANR	661726	Identifier	return_error		661685	0					
ANR	661727	ArgumentList	gs_error_undefinedfilename		661685	1					
ANR	661728	Argument	gs_error_undefinedfilename		661685	0					
ANR	661729	Identifier	gs_error_undefinedfilename		661685	0					
ANR	661730	Label	case EACCES :	445:8:13098:13109	661685	17	True				
ANR	661731	Identifier	EACCES		661685	0					
ANR	661732	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	446:12:13123:13163	661685	18	True				
ANR	661733	CallExpression	return_error ( gs_error_invalidfileaccess )		661685	0					
ANR	661734	Callee	return_error		661685	0					
ANR	661735	Identifier	return_error		661685	0					
ANR	661736	ArgumentList	gs_error_invalidfileaccess		661685	1					
ANR	661737	Argument	gs_error_invalidfileaccess		661685	0					
ANR	661738	Identifier	gs_error_invalidfileaccess		661685	0					
ANR	661739	Label	case EMFILE :	449:8:13194:13205	661685	19	True				
ANR	661740	Identifier	EMFILE		661685	0					
ANR	661741	ExpressionStatement	return_error ( gs_error_limitcheck )	450:12:13219:13252	661685	20	True				
ANR	661742	CallExpression	return_error ( gs_error_limitcheck )		661685	0					
ANR	661743	Callee	return_error		661685	0					
ANR	661744	Identifier	return_error		661685	0					
ANR	661745	ArgumentList	gs_error_limitcheck		661685	1					
ANR	661746	Argument	gs_error_limitcheck		661685	0					
ANR	661747	Identifier	gs_error_limitcheck		661685	0					
ANR	661748	Label	case ENFILE :	453:8:13283:13294	661685	21	True				
ANR	661749	Identifier	ENFILE		661685	0					
ANR	661750	ExpressionStatement	return_error ( gs_error_limitcheck )	454:12:13308:13341	661685	22	True				
ANR	661751	CallExpression	return_error ( gs_error_limitcheck )		661685	0					
ANR	661752	Callee	return_error		661685	0					
ANR	661753	Identifier	return_error		661685	0					
ANR	661754	ArgumentList	gs_error_limitcheck		661685	1					
ANR	661755	Argument	gs_error_limitcheck		661685	0					
ANR	661756	Identifier	gs_error_limitcheck		661685	0					
ANR	661757	Label	default :	456:8:13358:13365	661685	23	True				
ANR	661758	Identifier	default		661685	0					
ANR	661759	ExpressionStatement	return_error ( gs_error_ioerror )	457:12:13379:13409	661685	24	True				
ANR	661760	CallExpression	return_error ( gs_error_ioerror )		661685	0					
ANR	661761	Callee	return_error		661685	0					
ANR	661762	Identifier	return_error		661685	0					
ANR	661763	ArgumentList	gs_error_ioerror		661685	1					
ANR	661764	Argument	gs_error_ioerror		661685	0					
ANR	661765	Identifier	gs_error_ioerror		661685	0					
ANR	661766	ReturnType	int		661685	1					
ANR	661767	Identifier	gs_fopen_errno_to_code		661685	2					
ANR	661768	ParameterList	int eno		661685	3					
ANR	661769	Parameter	int eno	423:23:12538:12544	661685	0	True				
ANR	661770	ParameterType	int		661685	0					
ANR	661771	Identifier	eno		661685	1					
ANR	661772	CFGEntryNode	ENTRY		661685		True				
ANR	661773	CFGExitNode	EXIT		661685		True				
ANR	661774	Symbol	eno		661685						
ANR	661775	Symbol	gs_error_limitcheck		661685						
ANR	661776	Symbol	gs_error_ioerror		661685						
ANR	661777	Symbol	gs_error_undefinedfilename		661685						
ANR	661778	Symbol	gs_error_invalidfileaccess		661685						
ANR	661779	DeclStmt									
ANR	661780	Decl							struct gs_file_enum_s	struct gs_file_enum_s	gs_file_enum
ANR	661781	ClassDef	gs_file_enum_s	465:0:13569:13750							
ANR	661782	DeclStmt									
ANR	661783	Decl							gs_memory_t	gs_memory_t *	memory
ANR	661784	DeclStmt									
ANR	661785	Decl							gx_io_device	gx_io_device *	piodev
ANR	661786	DeclStmt									
ANR	661787	Decl							file_enum	file_enum *	pfile_enum
ANR	661788	DeclStmt									
ANR	661789	Decl							int	int	prepend_iodev_name
ANR	661790	Function	gs_enumerate_files_init	475:0:13904:15137							
ANR	661791	FunctionDef	"gs_enumerate_files_init (const char * pat , uint patlen , gs_memory_t * mem)"		661790	0					
ANR	661792	CompoundStatement		477:0:13989:15137	661790	0					
ANR	661793	IdentifierDeclStatement	file_enum * pfen ;	478:4:13995:14010	661790	0	True				
ANR	661794	IdentifierDecl	* pfen		661790	0					
ANR	661795	IdentifierDeclType	file_enum *		661790	0					
ANR	661796	Identifier	pfen		661790	1					
ANR	661797	IdentifierDeclStatement	gs_file_enum * pgs_file_enum ;	479:4:14016:14043	661790	1	True				
ANR	661798	IdentifierDecl	* pgs_file_enum		661790	0					
ANR	661799	IdentifierDeclType	gs_file_enum *		661790	0					
ANR	661800	Identifier	pgs_file_enum		661790	1					
ANR	661801	IdentifierDeclStatement	gx_io_device * iodev = NULL ;	480:4:14049:14075	661790	2	True				
ANR	661802	IdentifierDecl	* iodev = NULL		661790	0					
ANR	661803	IdentifierDeclType	gx_io_device *		661790	0					
ANR	661804	Identifier	iodev		661790	1					
ANR	661805	AssignmentExpression	* iodev = NULL		661790	2		=			
ANR	661806	Identifier	NULL		661790	0					
ANR	661807	Identifier	NULL		661790	1					
ANR	661808	IdentifierDeclStatement	gs_parsed_file_name_t pfn ;	481:4:14081:14106	661790	3	True				
ANR	661809	IdentifierDecl	pfn		661790	0					
ANR	661810	IdentifierDeclType	gs_parsed_file_name_t		661790	0					
ANR	661811	Identifier	pfn		661790	1					
ANR	661812	IdentifierDeclStatement	int code = 0 ;	482:4:14112:14124	661790	4	True				
ANR	661813	IdentifierDecl	code = 0		661790	0					
ANR	661814	IdentifierDeclType	int		661790	0					
ANR	661815	Identifier	code		661790	1					
ANR	661816	AssignmentExpression	code = 0		661790	2		=			
ANR	661817	Identifier	code		661790	0					
ANR	661818	PrimaryExpression	0		661790	1					
ANR	661819	ExpressionStatement	"code = gs_parse_file_name ( & pfn , pat , patlen , mem )"	485:4:14158:14207	661790	5	True				
ANR	661820	AssignmentExpression	"code = gs_parse_file_name ( & pfn , pat , patlen , mem )"		661790	0		=			
ANR	661821	Identifier	code		661790	0					
ANR	661822	CallExpression	"gs_parse_file_name ( & pfn , pat , patlen , mem )"		661790	1					
ANR	661823	Callee	gs_parse_file_name		661790	0					
ANR	661824	Identifier	gs_parse_file_name		661790	0					
ANR	661825	ArgumentList	& pfn		661790	1					
ANR	661826	Argument	& pfn		661790	0					
ANR	661827	UnaryOperationExpression	& pfn		661790	0					
ANR	661828	UnaryOperator	&		661790	0					
ANR	661829	Identifier	pfn		661790	1					
ANR	661830	Argument	pat		661790	1					
ANR	661831	Identifier	pat		661790	0					
ANR	661832	Argument	patlen		661790	2					
ANR	661833	Identifier	patlen		661790	0					
ANR	661834	Argument	mem		661790	3					
ANR	661835	Identifier	mem		661790	0					
ANR	661836	IfStatement	if ( code < 0 )		661790	6					
ANR	661837	Condition	code < 0	486:8:14217:14224	661790	0	True				
ANR	661838	RelationalExpression	code < 0		661790	0		<			
ANR	661839	Identifier	code		661790	0					
ANR	661840	PrimaryExpression	0		661790	1					
ANR	661841	ReturnStatement	return NULL ;	487:8:14235:14246	661790	1	True				
ANR	661842	Identifier	NULL		661790	0					
ANR	661843	ExpressionStatement	iodev = ( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev	488:4:14252:14312	661790	7	True				
ANR	661844	AssignmentExpression	iodev = ( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev		661790	0		=			
ANR	661845	Identifier	iodev		661790	0					
ANR	661846	ConditionalExpression	( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev		661790	1					
ANR	661847	Condition	pfn . iodev == NULL		661790	0					
ANR	661848	EqualityExpression	pfn . iodev == NULL		661790	0		==			
ANR	661849	MemberAccess	pfn . iodev		661790	0					
ANR	661850	Identifier	pfn		661790	0					
ANR	661851	Identifier	iodev		661790	1					
ANR	661852	Identifier	NULL		661790	1					
ANR	661853	CallExpression	iodev_default ( mem )		661790	1					
ANR	661854	Callee	iodev_default		661790	0					
ANR	661855	Identifier	iodev_default		661790	0					
ANR	661856	ArgumentList	mem		661790	1					
ANR	661857	Argument	mem		661790	0					
ANR	661858	Identifier	mem		661790	0					
ANR	661859	MemberAccess	pfn . iodev		661790	2					
ANR	661860	Identifier	pfn		661790	0					
ANR	661861	Identifier	iodev		661790	1					
ANR	661862	IfStatement	if ( pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files )		661790	8					
ANR	661863	Condition	pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files	491:8:14399:14470	661790	0	True				
ANR	661864	OrExpression	pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files		661790	0		||			
ANR	661865	EqualityExpression	pfn . len == 0		661790	0		==			
ANR	661866	MemberAccess	pfn . len		661790	0					
ANR	661867	Identifier	pfn		661790	0					
ANR	661868	Identifier	len		661790	1					
ANR	661869	PrimaryExpression	0		661790	1					
ANR	661870	EqualityExpression	iodev -> procs . enumerate_files == iodev_no_enumerate_files		661790	1		==			
ANR	661871	MemberAccess	iodev -> procs . enumerate_files		661790	0					
ANR	661872	PtrMemberAccess	iodev -> procs		661790	0					
ANR	661873	Identifier	iodev		661790	0					
ANR	661874	Identifier	procs		661790	1					
ANR	661875	Identifier	enumerate_files		661790	1					
ANR	661876	Identifier	iodev_no_enumerate_files		661790	1					
ANR	661877	CompoundStatement		15:82:483:483	661790	1					
ANR	661878	ReturnStatement	return NULL ;	492:8:14483:14494	661790	0	True				
ANR	661879	Identifier	NULL		661790	0					
ANR	661880	ExpressionStatement	"pfen = iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"	494:4:14559:14656	661790	9	True				
ANR	661881	AssignmentExpression	"pfen = iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"		661790	0		=			
ANR	661882	Identifier	pfen		661790	0					
ANR	661883	CallExpression	"iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"		661790	1					
ANR	661884	Callee	iodev -> procs . enumerate_files		661790	0					
ANR	661885	MemberAccess	iodev -> procs . enumerate_files		661790	0					
ANR	661886	PtrMemberAccess	iodev -> procs		661790	0					
ANR	661887	Identifier	iodev		661790	0					
ANR	661888	Identifier	procs		661790	1					
ANR	661889	Identifier	enumerate_files		661790	1					
ANR	661890	ArgumentList	iodev		661790	1					
ANR	661891	Argument	iodev		661790	0					
ANR	661892	Identifier	iodev		661790	0					
ANR	661893	Argument	( const char * ) pfn . fname		661790	1					
ANR	661894	CastExpression	( const char * ) pfn . fname		661790	0					
ANR	661895	CastTarget	const char *		661790	0					
ANR	661896	MemberAccess	pfn . fname		661790	1					
ANR	661897	Identifier	pfn		661790	0					
ANR	661898	Identifier	fname		661790	1					
ANR	661899	Argument	pfn . len		661790	2					
ANR	661900	MemberAccess	pfn . len		661790	0					
ANR	661901	Identifier	pfn		661790	0					
ANR	661902	Identifier	len		661790	1					
ANR	661903	Argument	mem		661790	3					
ANR	661904	Identifier	mem		661790	0					
ANR	661905	IfStatement	if ( pfen == 0 )		661790	10					
ANR	661906	Condition	pfen == 0	496:8:14666:14674	661790	0	True				
ANR	661907	EqualityExpression	pfen == 0		661790	0		==			
ANR	661908	Identifier	pfen		661790	0					
ANR	661909	PrimaryExpression	0		661790	1					
ANR	661910	ReturnStatement	return NULL ;	497:8:14685:14696	661790	1	True				
ANR	661911	Identifier	NULL		661790	0					
ANR	661912	ExpressionStatement	"pgs_file_enum = gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"	498:4:14702:14824	661790	11	True				
ANR	661913	AssignmentExpression	"pgs_file_enum = gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"		661790	0		=			
ANR	661914	Identifier	pgs_file_enum		661790	0					
ANR	661915	CallExpression	"gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"		661790	1					
ANR	661916	Callee	gs_alloc_struct		661790	0					
ANR	661917	Identifier	gs_alloc_struct		661790	0					
ANR	661918	ArgumentList	mem		661790	1					
ANR	661919	Argument	mem		661790	0					
ANR	661920	Identifier	mem		661790	0					
ANR	661921	Argument	gs_file_enum		661790	1					
ANR	661922	Identifier	gs_file_enum		661790	0					
ANR	661923	Argument	& st_gs_file_enum		661790	2					
ANR	661924	UnaryOperationExpression	& st_gs_file_enum		661790	0					
ANR	661925	UnaryOperator	&		661790	0					
ANR	661926	Identifier	st_gs_file_enum		661790	1					
ANR	661927	Argument	"""gs_enumerate_files_init"""		661790	3					
ANR	661928	PrimaryExpression	"""gs_enumerate_files_init"""		661790	0					
ANR	661929	IfStatement	if ( pgs_file_enum == 0 )		661790	12					
ANR	661930	Condition	pgs_file_enum == 0	500:8:14834:14851	661790	0	True				
ANR	661931	EqualityExpression	pgs_file_enum == 0		661790	0		==			
ANR	661932	Identifier	pgs_file_enum		661790	0					
ANR	661933	PrimaryExpression	0		661790	1					
ANR	661934	CompoundStatement		25:4:868:868	661790	1					
ANR	661935	ExpressionStatement	iodev -> procs . enumerate_close ( pfen )	502:8:14868:14902	661790	0	True				
ANR	661936	CallExpression	iodev -> procs . enumerate_close ( pfen )		661790	0					
ANR	661937	Callee	iodev -> procs . enumerate_close		661790	0					
ANR	661938	MemberAccess	iodev -> procs . enumerate_close		661790	0					
ANR	661939	PtrMemberAccess	iodev -> procs		661790	0					
ANR	661940	Identifier	iodev		661790	0					
ANR	661941	Identifier	procs		661790	1					
ANR	661942	Identifier	enumerate_close		661790	1					
ANR	661943	ArgumentList	pfen		661790	1					
ANR	661944	Argument	pfen		661790	0					
ANR	661945	Identifier	pfen		661790	0					
ANR	661946	ReturnStatement	return NULL ;	503:8:14912:14923	661790	1	True				
ANR	661947	Identifier	NULL		661790	0					
ANR	661948	ExpressionStatement	pgs_file_enum -> memory = mem	505:4:14935:14962	661790	13	True				
ANR	661949	AssignmentExpression	pgs_file_enum -> memory = mem		661790	0		=			
ANR	661950	PtrMemberAccess	pgs_file_enum -> memory		661790	0					
ANR	661951	Identifier	pgs_file_enum		661790	0					
ANR	661952	Identifier	memory		661790	1					
ANR	661953	Identifier	mem		661790	1					
ANR	661954	ExpressionStatement	pgs_file_enum -> piodev = iodev	506:4:14968:14997	661790	14	True				
ANR	661955	AssignmentExpression	pgs_file_enum -> piodev = iodev		661790	0		=			
ANR	661956	PtrMemberAccess	pgs_file_enum -> piodev		661790	0					
ANR	661957	Identifier	pgs_file_enum		661790	0					
ANR	661958	Identifier	piodev		661790	1					
ANR	661959	Identifier	iodev		661790	1					
ANR	661960	ExpressionStatement	pgs_file_enum -> pfile_enum = pfen	507:4:15003:15035	661790	15	True				
ANR	661961	AssignmentExpression	pgs_file_enum -> pfile_enum = pfen		661790	0		=			
ANR	661962	PtrMemberAccess	pgs_file_enum -> pfile_enum		661790	0					
ANR	661963	Identifier	pgs_file_enum		661790	0					
ANR	661964	Identifier	pfile_enum		661790	1					
ANR	661965	Identifier	pfen		661790	1					
ANR	661966	ExpressionStatement	pgs_file_enum -> prepend_iodev_name = ( pfn . iodev != NULL )	508:4:15041:15096	661790	16	True				
ANR	661967	AssignmentExpression	pgs_file_enum -> prepend_iodev_name = ( pfn . iodev != NULL )		661790	0		=			
ANR	661968	PtrMemberAccess	pgs_file_enum -> prepend_iodev_name		661790	0					
ANR	661969	Identifier	pgs_file_enum		661790	0					
ANR	661970	Identifier	prepend_iodev_name		661790	1					
ANR	661971	EqualityExpression	pfn . iodev != NULL		661790	1		!=			
ANR	661972	MemberAccess	pfn . iodev		661790	0					
ANR	661973	Identifier	pfn		661790	0					
ANR	661974	Identifier	iodev		661790	1					
ANR	661975	Identifier	NULL		661790	1					
ANR	661976	ReturnStatement	return ( file_enum * ) pgs_file_enum ;	509:4:15102:15135	661790	17	True				
ANR	661977	CastExpression	( file_enum * ) pgs_file_enum		661790	0					
ANR	661978	CastTarget	file_enum *		661790	0					
ANR	661979	Identifier	pgs_file_enum		661790	1					
ANR	661980	ReturnType	file_enum *		661790	1					
ANR	661981	Identifier	gs_enumerate_files_init		661790	2					
ANR	661982	ParameterList	"const char * pat , uint patlen , gs_memory_t * mem"		661790	3					
ANR	661983	Parameter	const char * pat	476:24:13940:13954	661790	0	True				
ANR	661984	ParameterType	const char *		661790	0					
ANR	661985	Identifier	pat		661790	1					
ANR	661986	Parameter	uint patlen	476:41:13957:13967	661790	1	True				
ANR	661987	ParameterType	uint		661790	0					
ANR	661988	Identifier	patlen		661790	1					
ANR	661989	Parameter	gs_memory_t * mem	476:54:13970:13986	661790	2	True				
ANR	661990	ParameterType	gs_memory_t *		661790	0					
ANR	661991	Identifier	mem		661790	1					
ANR	661992	CFGEntryNode	ENTRY		661790		True				
ANR	661993	CFGExitNode	EXIT		661790		True				
ANR	661994	Symbol	code		661790						
ANR	661995	Symbol	pfn . iodev		661790						
ANR	661996	Symbol	gs_alloc_struct		661790						
ANR	661997	Symbol	* pgs_file_enum		661790						
ANR	661998	Symbol	pgs_file_enum		661790						
ANR	661999	Symbol	mem		661790						
ANR	662000	Symbol	iodev		661790						
ANR	662001	Symbol	& pfn		661790						
ANR	662002	Symbol	gs_parse_file_name		661790						
ANR	662003	Symbol	iodev -> procs		661790						
ANR	662004	Symbol	iodev_no_enumerate_files		661790						
ANR	662005	Symbol	pat		661790						
ANR	662006	Symbol	NULL		661790						
ANR	662007	Symbol	* iodev		661790						
ANR	662008	Symbol	& st_gs_file_enum		661790						
ANR	662009	Symbol	pgs_file_enum -> pfile_enum		661790						
ANR	662010	Symbol	gs_file_enum		661790						
ANR	662011	Symbol	pfen		661790						
ANR	662012	Symbol	pgs_file_enum -> piodev		661790						
ANR	662013	Symbol	pfn . len		661790						
ANR	662014	Symbol	iodev_default		661790						
ANR	662015	Symbol	iodev -> procs . enumerate_files		661790						
ANR	662016	Symbol	pgs_file_enum -> memory		661790						
ANR	662017	Symbol	pfn		661790						
ANR	662018	Symbol	pgs_file_enum -> prepend_iodev_name		661790						
ANR	662019	Symbol	patlen		661790						
ANR	662020	Symbol	pfn . fname		661790						
ANR	662021	Function	gs_enumerate_files_next	512:0:15140:16055							
ANR	662022	FunctionDef	"gs_enumerate_files_next (file_enum * pfen , char * ptr , uint maxlen)"		662021	0					
ANR	662023	CompoundStatement		514:0:15211:16055	662021	0					
ANR	662024	IdentifierDeclStatement	gs_file_enum * pgs_file_enum = ( gs_file_enum * ) pfen ;	515:4:15217:15267	662021	0	True				
ANR	662025	IdentifierDecl	* pgs_file_enum = ( gs_file_enum * ) pfen		662021	0					
ANR	662026	IdentifierDeclType	gs_file_enum *		662021	0					
ANR	662027	Identifier	pgs_file_enum		662021	1					
ANR	662028	AssignmentExpression	* pgs_file_enum = ( gs_file_enum * ) pfen		662021	2		=			
ANR	662029	Identifier	pgs_file_enum		662021	0					
ANR	662030	CastExpression	( gs_file_enum * ) pfen		662021	1					
ANR	662031	CastTarget	gs_file_enum *		662021	0					
ANR	662032	Identifier	pfen		662021	1					
ANR	662033	IdentifierDeclStatement	int iodev_name_len ;	516:4:15273:15291	662021	1	True				
ANR	662034	IdentifierDecl	iodev_name_len		662021	0					
ANR	662035	IdentifierDeclType	int		662021	0					
ANR	662036	Identifier	iodev_name_len		662021	1					
ANR	662037	IdentifierDeclStatement	uint return_len ;	517:4:15297:15312	662021	2	True				
ANR	662038	IdentifierDecl	return_len		662021	0					
ANR	662039	IdentifierDeclType	uint		662021	0					
ANR	662040	Identifier	return_len		662021	1					
ANR	662041	IfStatement	if ( pgs_file_enum == NULL )		662021	3					
ANR	662042	Condition	pgs_file_enum == NULL	519:8:15323:15343	662021	0	True				
ANR	662043	EqualityExpression	pgs_file_enum == NULL		662021	0		==			
ANR	662044	Identifier	pgs_file_enum		662021	0					
ANR	662045	Identifier	NULL		662021	1					
ANR	662046	ReturnStatement	return ~0 ;	520:8:15354:15363	662021	1	True				
ANR	662047	Identifier	~0		662021	0					
ANR	662048	ExpressionStatement	iodev_name_len = pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0	522:4:15370:15487	662021	4	True				
ANR	662049	AssignmentExpression	iodev_name_len = pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0		662021	0		=			
ANR	662050	Identifier	iodev_name_len		662021	0					
ANR	662051	ConditionalExpression	pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0		662021	1					
ANR	662052	Condition	pgs_file_enum -> prepend_iodev_name		662021	0					
ANR	662053	PtrMemberAccess	pgs_file_enum -> prepend_iodev_name		662021	0					
ANR	662054	Identifier	pgs_file_enum		662021	0					
ANR	662055	Identifier	prepend_iodev_name		662021	1					
ANR	662056	CallExpression	strlen ( pgs_file_enum -> piodev -> dname )		662021	1					
ANR	662057	Callee	strlen		662021	0					
ANR	662058	Identifier	strlen		662021	0					
ANR	662059	ArgumentList	pgs_file_enum -> piodev -> dname		662021	1					
ANR	662060	Argument	pgs_file_enum -> piodev -> dname		662021	0					
ANR	662061	PtrMemberAccess	pgs_file_enum -> piodev -> dname		662021	0					
ANR	662062	PtrMemberAccess	pgs_file_enum -> piodev		662021	0					
ANR	662063	Identifier	pgs_file_enum		662021	0					
ANR	662064	Identifier	piodev		662021	1					
ANR	662065	Identifier	dname		662021	1					
ANR	662066	PrimaryExpression	0		662021	2					
ANR	662067	IfStatement	if ( iodev_name_len > maxlen )		662021	5					
ANR	662068	Condition	iodev_name_len > maxlen	525:8:15498:15520	662021	0	True				
ANR	662069	RelationalExpression	iodev_name_len > maxlen		662021	0		>			
ANR	662070	Identifier	iodev_name_len		662021	0					
ANR	662071	Identifier	maxlen		662021	1					
ANR	662072	ReturnStatement	return maxlen + 1 ;	526:8:15531:15548	662021	1	True				
ANR	662073	AdditiveExpression	maxlen + 1		662021	0		+			
ANR	662074	Identifier	maxlen		662021	0					
ANR	662075	PrimaryExpression	1		662021	1					
ANR	662076	IfStatement	if ( iodev_name_len > 0 )		662021	6					
ANR	662077	Condition	iodev_name_len > 0	527:8:15586:15603	662021	0	True				
ANR	662078	RelationalExpression	iodev_name_len > 0		662021	0		>			
ANR	662079	Identifier	iodev_name_len		662021	0					
ANR	662080	PrimaryExpression	0		662021	1					
ANR	662081	ExpressionStatement	"memcpy ( ptr , pgs_file_enum -> piodev -> dname , iodev_name_len )"	528:8:15614:15671	662021	1	True				
ANR	662082	CallExpression	"memcpy ( ptr , pgs_file_enum -> piodev -> dname , iodev_name_len )"		662021	0					
ANR	662083	Callee	memcpy		662021	0					
ANR	662084	Identifier	memcpy		662021	0					
ANR	662085	ArgumentList	ptr		662021	1					
ANR	662086	Argument	ptr		662021	0					
ANR	662087	Identifier	ptr		662021	0					
ANR	662088	Argument	pgs_file_enum -> piodev -> dname		662021	1					
ANR	662089	PtrMemberAccess	pgs_file_enum -> piodev -> dname		662021	0					
ANR	662090	PtrMemberAccess	pgs_file_enum -> piodev		662021	0					
ANR	662091	Identifier	pgs_file_enum		662021	0					
ANR	662092	Identifier	piodev		662021	1					
ANR	662093	Identifier	dname		662021	1					
ANR	662094	Argument	iodev_name_len		662021	2					
ANR	662095	Identifier	iodev_name_len		662021	0					
ANR	662096	ExpressionStatement	"return_len = pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"	529:4:15677:15839	662021	7	True				
ANR	662097	AssignmentExpression	"return_len = pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"		662021	0		=			
ANR	662098	Identifier	return_len		662021	0					
ANR	662099	CallExpression	"pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"		662021	1					
ANR	662100	Callee	pgs_file_enum -> piodev -> procs . enumerate_next		662021	0					
ANR	662101	MemberAccess	pgs_file_enum -> piodev -> procs . enumerate_next		662021	0					
ANR	662102	PtrMemberAccess	pgs_file_enum -> piodev -> procs		662021	0					
ANR	662103	PtrMemberAccess	pgs_file_enum -> piodev		662021	0					
ANR	662104	Identifier	pgs_file_enum		662021	0					
ANR	662105	Identifier	piodev		662021	1					
ANR	662106	Identifier	procs		662021	1					
ANR	662107	Identifier	enumerate_next		662021	1					
ANR	662108	ArgumentList	pgs_file_enum -> pfile_enum		662021	1					
ANR	662109	Argument	pgs_file_enum -> pfile_enum		662021	0					
ANR	662110	PtrMemberAccess	pgs_file_enum -> pfile_enum		662021	0					
ANR	662111	Identifier	pgs_file_enum		662021	0					
ANR	662112	Identifier	pfile_enum		662021	1					
ANR	662113	Argument	ptr + iodev_name_len		662021	1					
ANR	662114	AdditiveExpression	ptr + iodev_name_len		662021	0		+			
ANR	662115	Identifier	ptr		662021	0					
ANR	662116	Identifier	iodev_name_len		662021	1					
ANR	662117	Argument	maxlen - iodev_name_len		662021	2					
ANR	662118	AdditiveExpression	maxlen - iodev_name_len		662021	0		-			
ANR	662119	Identifier	maxlen		662021	0					
ANR	662120	Identifier	iodev_name_len		662021	1					
ANR	662121	IfStatement	if ( return_len == ~0 )		662021	8					
ANR	662122	Condition	return_len == ~0	531:8:15849:15864	662021	0	True				
ANR	662123	EqualityExpression	return_len == ~0		662021	0		==			
ANR	662124	Identifier	return_len		662021	0					
ANR	662125	Identifier	~0		662021	1					
ANR	662126	CompoundStatement		19:8:665:705	662021	1					
ANR	662127	IdentifierDeclStatement	gs_memory_t * mem = pgs_file_enum -> memory ;	532:8:15877:15917	662021	0	True				
ANR	662128	IdentifierDecl	* mem = pgs_file_enum -> memory		662021	0					
ANR	662129	IdentifierDeclType	gs_memory_t *		662021	0					
ANR	662130	Identifier	mem		662021	1					
ANR	662131	AssignmentExpression	* mem = pgs_file_enum -> memory		662021	2		=			
ANR	662132	Identifier	mem		662021	0					
ANR	662133	PtrMemberAccess	pgs_file_enum -> memory		662021	1					
ANR	662134	Identifier	pgs_file_enum		662021	0					
ANR	662135	Identifier	memory		662021	1					
ANR	662136	ExpressionStatement	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"	534:8:15928:15990	662021	1	True				
ANR	662137	CallExpression	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"		662021	0					
ANR	662138	Callee	gs_free_object		662021	0					
ANR	662139	Identifier	gs_free_object		662021	0					
ANR	662140	ArgumentList	mem		662021	1					
ANR	662141	Argument	mem		662021	0					
ANR	662142	Identifier	mem		662021	0					
ANR	662143	Argument	pgs_file_enum		662021	1					
ANR	662144	Identifier	pgs_file_enum		662021	0					
ANR	662145	Argument	"""gs_enumerate_files_close"""		662021	2					
ANR	662146	PrimaryExpression	"""gs_enumerate_files_close"""		662021	0					
ANR	662147	ReturnStatement	return ~0 ;	535:8:16000:16009	662021	2	True				
ANR	662148	Identifier	~0		662021	0					
ANR	662149	ReturnStatement	return return_len + iodev_name_len ;	537:4:16021:16053	662021	9	True				
ANR	662150	AdditiveExpression	return_len + iodev_name_len		662021	0		+			
ANR	662151	Identifier	return_len		662021	0					
ANR	662152	Identifier	iodev_name_len		662021	1					
ANR	662153	ReturnType	uint		662021	1					
ANR	662154	Identifier	gs_enumerate_files_next		662021	2					
ANR	662155	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		662021	3					
ANR	662156	Parameter	file_enum * pfen	513:24:15169:15184	662021	0	True				
ANR	662157	ParameterType	file_enum *		662021	0					
ANR	662158	Identifier	pfen		662021	1					
ANR	662159	Parameter	char * ptr	513:42:15187:15195	662021	1	True				
ANR	662160	ParameterType	char *		662021	0					
ANR	662161	Identifier	ptr		662021	1					
ANR	662162	Parameter	uint maxlen	513:53:15198:15208	662021	2	True				
ANR	662163	ParameterType	uint		662021	0					
ANR	662164	Identifier	maxlen		662021	1					
ANR	662165	CFGEntryNode	ENTRY		662021		True				
ANR	662166	CFGExitNode	EXIT		662021		True				
ANR	662167	Symbol	pgs_file_enum -> piodev -> procs		662021						
ANR	662168	Symbol	NULL		662021						
ANR	662169	Symbol	pgs_file_enum -> piodev -> dname		662021						
ANR	662170	Symbol	* pgs_file_enum -> piodev		662021						
ANR	662171	Symbol	pgs_file_enum -> pfile_enum		662021						
ANR	662172	Symbol	pfen		662021						
ANR	662173	Symbol	* pgs_file_enum		662021						
ANR	662174	Symbol	ptr		662021						
ANR	662175	Symbol	pgs_file_enum		662021						
ANR	662176	Symbol	pgs_file_enum -> piodev		662021						
ANR	662177	Symbol	iodev_name_len		662021						
ANR	662178	Symbol	strlen		662021						
ANR	662179	Symbol	~0		662021						
ANR	662180	Symbol	mem		662021						
ANR	662181	Symbol	* * pgs_file_enum		662021						
ANR	662182	Symbol	pgs_file_enum -> memory		662021						
ANR	662183	Symbol	pgs_file_enum -> prepend_iodev_name		662021						
ANR	662184	Symbol	maxlen		662021						
ANR	662185	Symbol	return_len		662021						
ANR	662186	Symbol	pgs_file_enum -> piodev -> procs . enumerate_next		662021						
ANR	662187	Function	gs_enumerate_files_close	540:0:16058:16356							
ANR	662188	FunctionDef	gs_enumerate_files_close (file_enum * pfen)		662187	0					
ANR	662189	CompoundStatement		542:0:16106:16356	662187	0					
ANR	662190	IdentifierDeclStatement	gs_file_enum * pgs_file_enum = ( gs_file_enum * ) pfen ;	543:4:16112:16162	662187	0	True				
ANR	662191	IdentifierDecl	* pgs_file_enum = ( gs_file_enum * ) pfen		662187	0					
ANR	662192	IdentifierDeclType	gs_file_enum *		662187	0					
ANR	662193	Identifier	pgs_file_enum		662187	1					
ANR	662194	AssignmentExpression	* pgs_file_enum = ( gs_file_enum * ) pfen		662187	2		=			
ANR	662195	Identifier	pgs_file_enum		662187	0					
ANR	662196	CastExpression	( gs_file_enum * ) pfen		662187	1					
ANR	662197	CastTarget	gs_file_enum *		662187	0					
ANR	662198	Identifier	pfen		662187	1					
ANR	662199	IdentifierDeclStatement	gs_memory_t * mem = pgs_file_enum -> memory ;	544:4:16168:16208	662187	1	True				
ANR	662200	IdentifierDecl	* mem = pgs_file_enum -> memory		662187	0					
ANR	662201	IdentifierDeclType	gs_memory_t *		662187	0					
ANR	662202	Identifier	mem		662187	1					
ANR	662203	AssignmentExpression	* mem = pgs_file_enum -> memory		662187	2		=			
ANR	662204	Identifier	mem		662187	0					
ANR	662205	PtrMemberAccess	pgs_file_enum -> memory		662187	1					
ANR	662206	Identifier	pgs_file_enum		662187	0					
ANR	662207	Identifier	memory		662187	1					
ANR	662208	ExpressionStatement	pgs_file_enum -> piodev -> procs . enumerate_close ( pgs_file_enum -> pfile_enum )	546:4:16215:16286	662187	2	True				
ANR	662209	CallExpression	pgs_file_enum -> piodev -> procs . enumerate_close ( pgs_file_enum -> pfile_enum )		662187	0					
ANR	662210	Callee	pgs_file_enum -> piodev -> procs . enumerate_close		662187	0					
ANR	662211	MemberAccess	pgs_file_enum -> piodev -> procs . enumerate_close		662187	0					
ANR	662212	PtrMemberAccess	pgs_file_enum -> piodev -> procs		662187	0					
ANR	662213	PtrMemberAccess	pgs_file_enum -> piodev		662187	0					
ANR	662214	Identifier	pgs_file_enum		662187	0					
ANR	662215	Identifier	piodev		662187	1					
ANR	662216	Identifier	procs		662187	1					
ANR	662217	Identifier	enumerate_close		662187	1					
ANR	662218	ArgumentList	pgs_file_enum -> pfile_enum		662187	1					
ANR	662219	Argument	pgs_file_enum -> pfile_enum		662187	0					
ANR	662220	PtrMemberAccess	pgs_file_enum -> pfile_enum		662187	0					
ANR	662221	Identifier	pgs_file_enum		662187	0					
ANR	662222	Identifier	pfile_enum		662187	1					
ANR	662223	ExpressionStatement	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"	547:4:16292:16354	662187	3	True				
ANR	662224	CallExpression	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"		662187	0					
ANR	662225	Callee	gs_free_object		662187	0					
ANR	662226	Identifier	gs_free_object		662187	0					
ANR	662227	ArgumentList	mem		662187	1					
ANR	662228	Argument	mem		662187	0					
ANR	662229	Identifier	mem		662187	0					
ANR	662230	Argument	pgs_file_enum		662187	1					
ANR	662231	Identifier	pgs_file_enum		662187	0					
ANR	662232	Argument	"""gs_enumerate_files_close"""		662187	2					
ANR	662233	PrimaryExpression	"""gs_enumerate_files_close"""		662187	0					
ANR	662234	ReturnType	void		662187	1					
ANR	662235	Identifier	gs_enumerate_files_close		662187	2					
ANR	662236	ParameterList	file_enum * pfen		662187	3					
ANR	662237	Parameter	file_enum * pfen	541:25:16088:16103	662187	0	True				
ANR	662238	ParameterType	file_enum *		662187	0					
ANR	662239	Identifier	pfen		662187	1					
ANR	662240	CFGEntryNode	ENTRY		662187		True				
ANR	662241	CFGExitNode	EXIT		662187		True				
ANR	662242	Symbol	pgs_file_enum -> piodev		662187						
ANR	662243	Symbol	pgs_file_enum -> piodev -> procs		662187						
ANR	662244	Symbol	mem		662187						
ANR	662245	Symbol	* * pgs_file_enum		662187						
ANR	662246	Symbol	pgs_file_enum -> memory		662187						
ANR	662247	Symbol	* pgs_file_enum -> piodev		662187						
ANR	662248	Symbol	pgs_file_enum -> pfile_enum		662187						
ANR	662249	Symbol	pfen		662187						
ANR	662250	Symbol	* pgs_file_enum		662187						
ANR	662251	Symbol	pgs_file_enum		662187						
