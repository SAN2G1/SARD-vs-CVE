command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5902456	File	data/converged/CVE-2018-16863_ghostpdl/gzspotan.c								
ANR	5902457	Function	free_trap_list	42:0:1264:1506							
ANR	5902458	FunctionDef	"free_trap_list (gs_memory_t * mem , gx_san_trap * * list)"		5902457	0					
ANR	5902459	CompoundStatement		44:0:1336:1506	5902457	0					
ANR	5902460	IdentifierDeclStatement	"gx_san_trap * t = * list , * t1 ;"	45:4:1342:1369	5902457	0	True				
ANR	5902461	IdentifierDecl	* t = * list		5902457	0					
ANR	5902462	IdentifierDeclType	gx_san_trap *		5902457	0					
ANR	5902463	Identifier	t		5902457	1					
ANR	5902464	AssignmentExpression	* t = * list		5902457	2		=			
ANR	5902465	Identifier	t		5902457	0					
ANR	5902466	UnaryOperationExpression	* list		5902457	1					
ANR	5902467	UnaryOperator	*		5902457	0					
ANR	5902468	Identifier	list		5902457	1					
ANR	5902469	IdentifierDecl	* t1		5902457	1					
ANR	5902470	IdentifierDeclType	gx_san_trap *		5902457	0					
ANR	5902471	Identifier	t1		5902457	1					
ANR	5902472	ForStatement	for ( t = * list ; t != NULL ; t = t1 )		5902457	1					
ANR	5902473	ForInit	t = * list ;	47:9:1381:1390	5902457	0	True				
ANR	5902474	AssignmentExpression	t = * list		5902457	0		=			
ANR	5902475	Identifier	t		5902457	0					
ANR	5902476	UnaryOperationExpression	* list		5902457	1					
ANR	5902477	UnaryOperator	*		5902457	0					
ANR	5902478	Identifier	list		5902457	1					
ANR	5902479	Condition	t != NULL	47:20:1392:1400	5902457	1	True				
ANR	5902480	EqualityExpression	t != NULL		5902457	0		!=			
ANR	5902481	Identifier	t		5902457	0					
ANR	5902482	Identifier	NULL		5902457	1					
ANR	5902483	AssignmentExpression	t = t1	47:31:1403:1408	5902457	2	True	=			
ANR	5902484	Identifier	t		5902457	0					
ANR	5902485	Identifier	t1		5902457	1					
ANR	5902486	CompoundStatement		4:39:74:74	5902457	3					
ANR	5902487	ExpressionStatement	t1 = t -> link	48:8:1421:1433	5902457	0	True				
ANR	5902488	AssignmentExpression	t1 = t -> link		5902457	0		=			
ANR	5902489	Identifier	t1		5902457	0					
ANR	5902490	PtrMemberAccess	t -> link		5902457	1					
ANR	5902491	Identifier	t		5902457	0					
ANR	5902492	Identifier	link		5902457	1					
ANR	5902493	ExpressionStatement	"gs_free_object ( mem , t , ""free_trap_list"" )"	49:8:1443:1483	5902457	1	True				
ANR	5902494	CallExpression	"gs_free_object ( mem , t , ""free_trap_list"" )"		5902457	0					
ANR	5902495	Callee	gs_free_object		5902457	0					
ANR	5902496	Identifier	gs_free_object		5902457	0					
ANR	5902497	ArgumentList	mem		5902457	1					
ANR	5902498	Argument	mem		5902457	0					
ANR	5902499	Identifier	mem		5902457	0					
ANR	5902500	Argument	t		5902457	1					
ANR	5902501	Identifier	t		5902457	0					
ANR	5902502	Argument	"""free_trap_list"""		5902457	2					
ANR	5902503	PrimaryExpression	"""free_trap_list"""		5902457	0					
ANR	5902504	ExpressionStatement	* list = 0	51:4:1495:1504	5902457	2	True				
ANR	5902505	AssignmentExpression	* list = 0		5902457	0		=			
ANR	5902506	UnaryOperationExpression	* list		5902457	0					
ANR	5902507	UnaryOperator	*		5902457	0					
ANR	5902508	Identifier	list		5902457	1					
ANR	5902509	PrimaryExpression	0		5902457	1					
ANR	5902510	ReturnType	static inline void		5902457	1					
ANR	5902511	Identifier	free_trap_list		5902457	2					
ANR	5902512	ParameterList	"gs_memory_t * mem , gx_san_trap * * list"		5902457	3					
ANR	5902513	Parameter	gs_memory_t * mem	43:15:1298:1313	5902457	0	True				
ANR	5902514	ParameterType	gs_memory_t *		5902457	0					
ANR	5902515	Identifier	mem		5902457	1					
ANR	5902516	Parameter	gx_san_trap * * list	43:33:1316:1333	5902457	1	True				
ANR	5902517	ParameterType	gx_san_trap * *		5902457	0					
ANR	5902518	Identifier	list		5902457	1					
ANR	5902519	CFGEntryNode	ENTRY		5902457		True				
ANR	5902520	CFGExitNode	EXIT		5902457		True				
ANR	5902521	Symbol	NULL		5902457						
ANR	5902522	Symbol	mem		5902457						
ANR	5902523	Symbol	t		5902457						
ANR	5902524	Symbol	* list		5902457						
ANR	5902525	Symbol	list		5902457						
ANR	5902526	Symbol	t1		5902457						
ANR	5902527	Symbol	* t		5902457						
ANR	5902528	Symbol	t -> link		5902457						
ANR	5902529	Function	free_cont_list	54:0:1509:1767							
ANR	5902530	FunctionDef	"free_cont_list (gs_memory_t * mem , gx_san_trap_contact * * list)"		5902529	0					
ANR	5902531	CompoundStatement		56:0:1589:1767	5902529	0					
ANR	5902532	IdentifierDeclStatement	"gx_san_trap_contact * t = * list , * t1 ;"	57:4:1595:1630	5902529	0	True				
ANR	5902533	IdentifierDecl	* t = * list		5902529	0					
ANR	5902534	IdentifierDeclType	gx_san_trap_contact *		5902529	0					
ANR	5902535	Identifier	t		5902529	1					
ANR	5902536	AssignmentExpression	* t = * list		5902529	2		=			
ANR	5902537	Identifier	t		5902529	0					
ANR	5902538	UnaryOperationExpression	* list		5902529	1					
ANR	5902539	UnaryOperator	*		5902529	0					
ANR	5902540	Identifier	list		5902529	1					
ANR	5902541	IdentifierDecl	* t1		5902529	1					
ANR	5902542	IdentifierDeclType	gx_san_trap_contact *		5902529	0					
ANR	5902543	Identifier	t1		5902529	1					
ANR	5902544	ForStatement	for ( t = * list ; t != NULL ; t = t1 )		5902529	1					
ANR	5902545	ForInit	t = * list ;	59:9:1642:1651	5902529	0	True				
ANR	5902546	AssignmentExpression	t = * list		5902529	0		=			
ANR	5902547	Identifier	t		5902529	0					
ANR	5902548	UnaryOperationExpression	* list		5902529	1					
ANR	5902549	UnaryOperator	*		5902529	0					
ANR	5902550	Identifier	list		5902529	1					
ANR	5902551	Condition	t != NULL	59:20:1653:1661	5902529	1	True				
ANR	5902552	EqualityExpression	t != NULL		5902529	0		!=			
ANR	5902553	Identifier	t		5902529	0					
ANR	5902554	Identifier	NULL		5902529	1					
ANR	5902555	AssignmentExpression	t = t1	59:31:1664:1669	5902529	2	True	=			
ANR	5902556	Identifier	t		5902529	0					
ANR	5902557	Identifier	t1		5902529	1					
ANR	5902558	CompoundStatement		4:39:82:82	5902529	3					
ANR	5902559	ExpressionStatement	t1 = t -> link	60:8:1682:1694	5902529	0	True				
ANR	5902560	AssignmentExpression	t1 = t -> link		5902529	0		=			
ANR	5902561	Identifier	t1		5902529	0					
ANR	5902562	PtrMemberAccess	t -> link		5902529	1					
ANR	5902563	Identifier	t		5902529	0					
ANR	5902564	Identifier	link		5902529	1					
ANR	5902565	ExpressionStatement	"gs_free_object ( mem , t , ""free_cont_list"" )"	61:8:1704:1744	5902529	1	True				
ANR	5902566	CallExpression	"gs_free_object ( mem , t , ""free_cont_list"" )"		5902529	0					
ANR	5902567	Callee	gs_free_object		5902529	0					
ANR	5902568	Identifier	gs_free_object		5902529	0					
ANR	5902569	ArgumentList	mem		5902529	1					
ANR	5902570	Argument	mem		5902529	0					
ANR	5902571	Identifier	mem		5902529	0					
ANR	5902572	Argument	t		5902529	1					
ANR	5902573	Identifier	t		5902529	0					
ANR	5902574	Argument	"""free_cont_list"""		5902529	2					
ANR	5902575	PrimaryExpression	"""free_cont_list"""		5902529	0					
ANR	5902576	ExpressionStatement	* list = 0	63:4:1756:1765	5902529	2	True				
ANR	5902577	AssignmentExpression	* list = 0		5902529	0		=			
ANR	5902578	UnaryOperationExpression	* list		5902529	0					
ANR	5902579	UnaryOperator	*		5902529	0					
ANR	5902580	Identifier	list		5902529	1					
ANR	5902581	PrimaryExpression	0		5902529	1					
ANR	5902582	ReturnType	static inline void		5902529	1					
ANR	5902583	Identifier	free_cont_list		5902529	2					
ANR	5902584	ParameterList	"gs_memory_t * mem , gx_san_trap_contact * * list"		5902529	3					
ANR	5902585	Parameter	gs_memory_t * mem	55:15:1543:1558	5902529	0	True				
ANR	5902586	ParameterType	gs_memory_t *		5902529	0					
ANR	5902587	Identifier	mem		5902529	1					
ANR	5902588	Parameter	gx_san_trap_contact * * list	55:33:1561:1586	5902529	1	True				
ANR	5902589	ParameterType	gx_san_trap_contact * *		5902529	0					
ANR	5902590	Identifier	list		5902529	1					
ANR	5902591	CFGEntryNode	ENTRY		5902529		True				
ANR	5902592	CFGExitNode	EXIT		5902529		True				
ANR	5902593	Symbol	NULL		5902529						
ANR	5902594	Symbol	mem		5902529						
ANR	5902595	Symbol	t		5902529						
ANR	5902596	Symbol	* list		5902529						
ANR	5902597	Symbol	list		5902529						
ANR	5902598	Symbol	t1		5902529						
ANR	5902599	Symbol	* t		5902529						
ANR	5902600	Symbol	t -> link		5902529						
ANR	5902601	Function	trap_reserve	66:0:1770:2435							
ANR	5902602	FunctionDef	trap_reserve (gx_device_spot_analyzer * padev)		5902601	0					
ANR	5902603	CompoundStatement		68:0:1843:2435	5902601	0					
ANR	5902604	IdentifierDeclStatement	gx_san_trap * t = padev -> trap_free ;	69:4:1849:1882	5902601	0	True				
ANR	5902605	IdentifierDecl	* t = padev -> trap_free		5902601	0					
ANR	5902606	IdentifierDeclType	gx_san_trap *		5902601	0					
ANR	5902607	Identifier	t		5902601	1					
ANR	5902608	AssignmentExpression	* t = padev -> trap_free		5902601	2		=			
ANR	5902609	Identifier	t		5902601	0					
ANR	5902610	PtrMemberAccess	padev -> trap_free		5902601	1					
ANR	5902611	Identifier	padev		5902601	0					
ANR	5902612	Identifier	trap_free		5902601	1					
ANR	5902613	IfStatement	if ( t != NULL )		5902601	1					
ANR	5902614	Condition	t != NULL	71:8:1893:1901	5902601	0	True				
ANR	5902615	EqualityExpression	t != NULL		5902601	0		!=			
ANR	5902616	Identifier	t		5902601	0					
ANR	5902617	Identifier	NULL		5902601	1					
ANR	5902618	CompoundStatement		4:19:60:60	5902601	1					
ANR	5902619	ExpressionStatement	padev -> trap_free = t -> link	72:8:1914:1940	5902601	0	True				
ANR	5902620	AssignmentExpression	padev -> trap_free = t -> link		5902601	0		=			
ANR	5902621	PtrMemberAccess	padev -> trap_free		5902601	0					
ANR	5902622	Identifier	padev		5902601	0					
ANR	5902623	Identifier	trap_free		5902601	1					
ANR	5902624	PtrMemberAccess	t -> link		5902601	1					
ANR	5902625	Identifier	t		5902601	0					
ANR	5902626	Identifier	link		5902601	1					
ANR	5902627	ElseStatement	else		5902601	0					
ANR	5902628	CompoundStatement		6:11:109:109	5902601	0					
ANR	5902629	IfStatement	if ( padev -> trap_buffer_count > 10000 )		5902601	0					
ANR	5902630	Condition	padev -> trap_buffer_count > 10000	74:12:1967:1998	5902601	0	True				
ANR	5902631	RelationalExpression	padev -> trap_buffer_count > 10000		5902601	0		>			
ANR	5902632	PtrMemberAccess	padev -> trap_buffer_count		5902601	0					
ANR	5902633	Identifier	padev		5902601	0					
ANR	5902634	Identifier	trap_buffer_count		5902601	1					
ANR	5902635	PrimaryExpression	10000		5902601	1					
ANR	5902636	ReturnStatement	return NULL ;	75:12:2013:2024	5902601	1	True				
ANR	5902637	Identifier	NULL		5902601	0					
ANR	5902638	ExpressionStatement	"t = gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"	76:8:2034:2127	5902601	1	True				
ANR	5902639	AssignmentExpression	"t = gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"		5902601	0		=			
ANR	5902640	Identifier	t		5902601	0					
ANR	5902641	CallExpression	"gs_alloc_struct ( padev -> memory , gx_san_trap , & st_san_trap , ""trap_reserve"" )"		5902601	1					
ANR	5902642	Callee	gs_alloc_struct		5902601	0					
ANR	5902643	Identifier	gs_alloc_struct		5902601	0					
ANR	5902644	ArgumentList	padev -> memory		5902601	1					
ANR	5902645	Argument	padev -> memory		5902601	0					
ANR	5902646	PtrMemberAccess	padev -> memory		5902601	0					
ANR	5902647	Identifier	padev		5902601	0					
ANR	5902648	Identifier	memory		5902601	1					
ANR	5902649	Argument	gx_san_trap		5902601	1					
ANR	5902650	Identifier	gx_san_trap		5902601	0					
ANR	5902651	Argument	& st_san_trap		5902601	2					
ANR	5902652	UnaryOperationExpression	& st_san_trap		5902601	0					
ANR	5902653	UnaryOperator	&		5902601	0					
ANR	5902654	Identifier	st_san_trap		5902601	1					
ANR	5902655	Argument	"""trap_reserve"""		5902601	3					
ANR	5902656	PrimaryExpression	"""trap_reserve"""		5902601	0					
ANR	5902657	IfStatement	if ( t == NULL )		5902601	2					
ANR	5902658	Condition	t == NULL	78:12:2141:2149	5902601	0	True				
ANR	5902659	EqualityExpression	t == NULL		5902601	0		==			
ANR	5902660	Identifier	t		5902601	0					
ANR	5902661	Identifier	NULL		5902601	1					
ANR	5902662	ReturnStatement	return NULL ;	79:12:2164:2175	5902601	1	True				
ANR	5902663	Identifier	NULL		5902601	0					
ANR	5902664	ExpressionStatement	t -> link = NULL	80:8:2185:2199	5902601	3	True				
ANR	5902665	AssignmentExpression	t -> link = NULL		5902601	0		=			
ANR	5902666	PtrMemberAccess	t -> link		5902601	0					
ANR	5902667	Identifier	t		5902601	0					
ANR	5902668	Identifier	link		5902601	1					
ANR	5902669	Identifier	NULL		5902601	1					
ANR	5902670	IfStatement	if ( padev -> trap_buffer_last == NULL )		5902601	4					
ANR	5902671	Condition	padev -> trap_buffer_last == NULL	81:12:2213:2243	5902601	0	True				
ANR	5902672	EqualityExpression	padev -> trap_buffer_last == NULL		5902601	0		==			
ANR	5902673	PtrMemberAccess	padev -> trap_buffer_last		5902601	0					
ANR	5902674	Identifier	padev		5902601	0					
ANR	5902675	Identifier	trap_buffer_last		5902601	1					
ANR	5902676	Identifier	NULL		5902601	1					
ANR	5902677	ExpressionStatement	padev -> trap_buffer = t	82:12:2258:2280	5902601	1	True				
ANR	5902678	AssignmentExpression	padev -> trap_buffer = t		5902601	0		=			
ANR	5902679	PtrMemberAccess	padev -> trap_buffer		5902601	0					
ANR	5902680	Identifier	padev		5902601	0					
ANR	5902681	Identifier	trap_buffer		5902601	1					
ANR	5902682	Identifier	t		5902601	1					
ANR	5902683	ElseStatement	else		5902601	0					
ANR	5902684	ExpressionStatement	padev -> trap_buffer_last -> link = t	84:12:2307:2340	5902601	0	True				
ANR	5902685	AssignmentExpression	padev -> trap_buffer_last -> link = t		5902601	0		=			
ANR	5902686	PtrMemberAccess	padev -> trap_buffer_last -> link		5902601	0					
ANR	5902687	PtrMemberAccess	padev -> trap_buffer_last		5902601	0					
ANR	5902688	Identifier	padev		5902601	0					
ANR	5902689	Identifier	trap_buffer_last		5902601	1					
ANR	5902690	Identifier	link		5902601	1					
ANR	5902691	Identifier	t		5902601	1					
ANR	5902692	ExpressionStatement	padev -> trap_buffer_last = t	85:8:2350:2377	5902601	5	True				
ANR	5902693	AssignmentExpression	padev -> trap_buffer_last = t		5902601	0		=			
ANR	5902694	PtrMemberAccess	padev -> trap_buffer_last		5902601	0					
ANR	5902695	Identifier	padev		5902601	0					
ANR	5902696	Identifier	trap_buffer_last		5902601	1					
ANR	5902697	Identifier	t		5902601	1					
ANR	5902698	ExpressionStatement	padev -> trap_buffer_count ++	86:8:2387:2413	5902601	6	True				
ANR	5902699	PostIncDecOperationExpression	padev -> trap_buffer_count ++		5902601	0					
ANR	5902700	PtrMemberAccess	padev -> trap_buffer_count		5902601	0					
ANR	5902701	Identifier	padev		5902601	0					
ANR	5902702	Identifier	trap_buffer_count		5902601	1					
ANR	5902703	IncDec	++		5902601	1					
ANR	5902704	ReturnStatement	return t ;	88:4:2425:2433	5902601	2	True				
ANR	5902705	Identifier	t		5902601	0					
ANR	5902706	ReturnType	static inline gx_san_trap *		5902601	1					
ANR	5902707	Identifier	trap_reserve		5902601	2					
ANR	5902708	ParameterList	gx_device_spot_analyzer * padev		5902601	3					
ANR	5902709	Parameter	gx_device_spot_analyzer * padev	67:13:1811:1840	5902601	0	True				
ANR	5902710	ParameterType	gx_device_spot_analyzer *		5902601	0					
ANR	5902711	Identifier	padev		5902601	1					
ANR	5902712	CFGEntryNode	ENTRY		5902601		True				
ANR	5902713	CFGExitNode	EXIT		5902601		True				
ANR	5902714	Symbol	* * padev		5902601						
ANR	5902715	Symbol	NULL		5902601						
ANR	5902716	Symbol	padev -> trap_buffer_last		5902601						
ANR	5902717	Symbol	padev -> trap_buffer_count		5902601						
ANR	5902718	Symbol	gx_san_trap		5902601						
ANR	5902719	Symbol	gs_alloc_struct		5902601						
ANR	5902720	Symbol	& st_san_trap		5902601						
ANR	5902721	Symbol	padev -> memory		5902601						
ANR	5902722	Symbol	* padev -> trap_buffer_last		5902601						
ANR	5902723	Symbol	padev		5902601						
ANR	5902724	Symbol	t		5902601						
ANR	5902725	Symbol	* padev		5902601						
ANR	5902726	Symbol	padev -> trap_buffer_last -> link		5902601						
ANR	5902727	Symbol	padev -> trap_buffer		5902601						
ANR	5902728	Symbol	padev -> trap_free		5902601						
ANR	5902729	Symbol	* t		5902601						
ANR	5902730	Symbol	t -> link		5902601						
ANR	5902731	Function	cont_reserve	91:0:2438:3135							
ANR	5902732	FunctionDef	cont_reserve (gx_device_spot_analyzer * padev)		5902731	0					
ANR	5902733	CompoundStatement		93:0:2519:3135	5902731	0					
ANR	5902734	IdentifierDeclStatement	gx_san_trap_contact * t = padev -> cont_free ;	94:4:2525:2566	5902731	0	True				
ANR	5902735	IdentifierDecl	* t = padev -> cont_free		5902731	0					
ANR	5902736	IdentifierDeclType	gx_san_trap_contact *		5902731	0					
ANR	5902737	Identifier	t		5902731	1					
ANR	5902738	AssignmentExpression	* t = padev -> cont_free		5902731	2		=			
ANR	5902739	Identifier	t		5902731	0					
ANR	5902740	PtrMemberAccess	padev -> cont_free		5902731	1					
ANR	5902741	Identifier	padev		5902731	0					
ANR	5902742	Identifier	cont_free		5902731	1					
ANR	5902743	IfStatement	if ( t != NULL )		5902731	1					
ANR	5902744	Condition	t != NULL	96:8:2577:2585	5902731	0	True				
ANR	5902745	EqualityExpression	t != NULL		5902731	0		!=			
ANR	5902746	Identifier	t		5902731	0					
ANR	5902747	Identifier	NULL		5902731	1					
ANR	5902748	CompoundStatement		4:19:68:68	5902731	1					
ANR	5902749	ExpressionStatement	padev -> cont_free = t -> link	97:8:2598:2624	5902731	0	True				
ANR	5902750	AssignmentExpression	padev -> cont_free = t -> link		5902731	0		=			
ANR	5902751	PtrMemberAccess	padev -> cont_free		5902731	0					
ANR	5902752	Identifier	padev		5902731	0					
ANR	5902753	Identifier	cont_free		5902731	1					
ANR	5902754	PtrMemberAccess	t -> link		5902731	1					
ANR	5902755	Identifier	t		5902731	0					
ANR	5902756	Identifier	link		5902731	1					
ANR	5902757	ElseStatement	else		5902731	0					
ANR	5902758	CompoundStatement		6:11:117:117	5902731	0					
ANR	5902759	IfStatement	if ( padev -> cont_buffer_count > 10000 )		5902731	0					
ANR	5902760	Condition	padev -> cont_buffer_count > 10000	99:12:2651:2682	5902731	0	True				
ANR	5902761	RelationalExpression	padev -> cont_buffer_count > 10000		5902731	0		>			
ANR	5902762	PtrMemberAccess	padev -> cont_buffer_count		5902731	0					
ANR	5902763	Identifier	padev		5902731	0					
ANR	5902764	Identifier	cont_buffer_count		5902731	1					
ANR	5902765	PrimaryExpression	10000		5902731	1					
ANR	5902766	ReturnStatement	return NULL ;	100:12:2697:2708	5902731	1	True				
ANR	5902767	Identifier	NULL		5902731	0					
ANR	5902768	ExpressionStatement	"t = gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"	101:8:2718:2827	5902731	1	True				
ANR	5902769	AssignmentExpression	"t = gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"		5902731	0		=			
ANR	5902770	Identifier	t		5902731	0					
ANR	5902771	CallExpression	"gs_alloc_struct ( padev -> memory , gx_san_trap_contact , & st_san_trap_contact , ""cont_reserve"" )"		5902731	1					
ANR	5902772	Callee	gs_alloc_struct		5902731	0					
ANR	5902773	Identifier	gs_alloc_struct		5902731	0					
ANR	5902774	ArgumentList	padev -> memory		5902731	1					
ANR	5902775	Argument	padev -> memory		5902731	0					
ANR	5902776	PtrMemberAccess	padev -> memory		5902731	0					
ANR	5902777	Identifier	padev		5902731	0					
ANR	5902778	Identifier	memory		5902731	1					
ANR	5902779	Argument	gx_san_trap_contact		5902731	1					
ANR	5902780	Identifier	gx_san_trap_contact		5902731	0					
ANR	5902781	Argument	& st_san_trap_contact		5902731	2					
ANR	5902782	UnaryOperationExpression	& st_san_trap_contact		5902731	0					
ANR	5902783	UnaryOperator	&		5902731	0					
ANR	5902784	Identifier	st_san_trap_contact		5902731	1					
ANR	5902785	Argument	"""cont_reserve"""		5902731	3					
ANR	5902786	PrimaryExpression	"""cont_reserve"""		5902731	0					
ANR	5902787	IfStatement	if ( t == NULL )		5902731	2					
ANR	5902788	Condition	t == NULL	103:12:2841:2849	5902731	0	True				
ANR	5902789	EqualityExpression	t == NULL		5902731	0		==			
ANR	5902790	Identifier	t		5902731	0					
ANR	5902791	Identifier	NULL		5902731	1					
ANR	5902792	ReturnStatement	return NULL ;	104:12:2864:2875	5902731	1	True				
ANR	5902793	Identifier	NULL		5902731	0					
ANR	5902794	ExpressionStatement	t -> link = NULL	105:8:2885:2899	5902731	3	True				
ANR	5902795	AssignmentExpression	t -> link = NULL		5902731	0		=			
ANR	5902796	PtrMemberAccess	t -> link		5902731	0					
ANR	5902797	Identifier	t		5902731	0					
ANR	5902798	Identifier	link		5902731	1					
ANR	5902799	Identifier	NULL		5902731	1					
ANR	5902800	IfStatement	if ( padev -> cont_buffer_last == NULL )		5902731	4					
ANR	5902801	Condition	padev -> cont_buffer_last == NULL	106:12:2913:2943	5902731	0	True				
ANR	5902802	EqualityExpression	padev -> cont_buffer_last == NULL		5902731	0		==			
ANR	5902803	PtrMemberAccess	padev -> cont_buffer_last		5902731	0					
ANR	5902804	Identifier	padev		5902731	0					
ANR	5902805	Identifier	cont_buffer_last		5902731	1					
ANR	5902806	Identifier	NULL		5902731	1					
ANR	5902807	ExpressionStatement	padev -> cont_buffer = t	107:12:2958:2980	5902731	1	True				
ANR	5902808	AssignmentExpression	padev -> cont_buffer = t		5902731	0		=			
ANR	5902809	PtrMemberAccess	padev -> cont_buffer		5902731	0					
ANR	5902810	Identifier	padev		5902731	0					
ANR	5902811	Identifier	cont_buffer		5902731	1					
ANR	5902812	Identifier	t		5902731	1					
ANR	5902813	ElseStatement	else		5902731	0					
ANR	5902814	ExpressionStatement	padev -> cont_buffer_last -> link = t	109:12:3007:3040	5902731	0	True				
ANR	5902815	AssignmentExpression	padev -> cont_buffer_last -> link = t		5902731	0		=			
ANR	5902816	PtrMemberAccess	padev -> cont_buffer_last -> link		5902731	0					
ANR	5902817	PtrMemberAccess	padev -> cont_buffer_last		5902731	0					
ANR	5902818	Identifier	padev		5902731	0					
ANR	5902819	Identifier	cont_buffer_last		5902731	1					
ANR	5902820	Identifier	link		5902731	1					
ANR	5902821	Identifier	t		5902731	1					
ANR	5902822	ExpressionStatement	padev -> cont_buffer_last = t	110:8:3050:3077	5902731	5	True				
ANR	5902823	AssignmentExpression	padev -> cont_buffer_last = t		5902731	0		=			
ANR	5902824	PtrMemberAccess	padev -> cont_buffer_last		5902731	0					
ANR	5902825	Identifier	padev		5902731	0					
ANR	5902826	Identifier	cont_buffer_last		5902731	1					
ANR	5902827	Identifier	t		5902731	1					
ANR	5902828	ExpressionStatement	padev -> cont_buffer_count ++	111:8:3087:3113	5902731	6	True				
ANR	5902829	PostIncDecOperationExpression	padev -> cont_buffer_count ++		5902731	0					
ANR	5902830	PtrMemberAccess	padev -> cont_buffer_count		5902731	0					
ANR	5902831	Identifier	padev		5902731	0					
ANR	5902832	Identifier	cont_buffer_count		5902731	1					
ANR	5902833	IncDec	++		5902731	1					
ANR	5902834	ReturnStatement	return t ;	113:4:3125:3133	5902731	2	True				
ANR	5902835	Identifier	t		5902731	0					
ANR	5902836	ReturnType	static inline gx_san_trap_contact *		5902731	1					
ANR	5902837	Identifier	cont_reserve		5902731	2					
ANR	5902838	ParameterList	gx_device_spot_analyzer * padev		5902731	3					
ANR	5902839	Parameter	gx_device_spot_analyzer * padev	92:13:2487:2516	5902731	0	True				
ANR	5902840	ParameterType	gx_device_spot_analyzer *		5902731	0					
ANR	5902841	Identifier	padev		5902731	1					
ANR	5902842	CFGEntryNode	ENTRY		5902731		True				
ANR	5902843	CFGExitNode	EXIT		5902731		True				
ANR	5902844	Symbol	padev -> cont_free		5902731						
ANR	5902845	Symbol	* * padev		5902731						
ANR	5902846	Symbol	padev -> cont_buffer		5902731						
ANR	5902847	Symbol	NULL		5902731						
ANR	5902848	Symbol	padev -> cont_buffer_count		5902731						
ANR	5902849	Symbol	& st_san_trap_contact		5902731						
ANR	5902850	Symbol	gs_alloc_struct		5902731						
ANR	5902851	Symbol	gx_san_trap_contact		5902731						
ANR	5902852	Symbol	padev -> memory		5902731						
ANR	5902853	Symbol	padev -> cont_buffer_last -> link		5902731						
ANR	5902854	Symbol	padev		5902731						
ANR	5902855	Symbol	t		5902731						
ANR	5902856	Symbol	* padev		5902731						
ANR	5902857	Symbol	padev -> cont_buffer_last		5902731						
ANR	5902858	Symbol	* t		5902731						
ANR	5902859	Symbol	t -> link		5902731						
ANR	5902860	Symbol	* padev -> cont_buffer_last		5902731						
ANR	5902861	Function	trap_unreserve	116:0:3138:3408							
ANR	5902862	FunctionDef	"trap_unreserve (gx_device_spot_analyzer * padev , gx_san_trap * t)"		5902861	0					
ANR	5902863	CompoundStatement		118:0:3219:3408	5902861	0					
ANR	5902864	IfStatement	if ( t -> link != padev -> trap_free )		5902861	0					
ANR	5902865	Condition	t -> link != padev -> trap_free	120:8:3271:3297	5902861	0	True				
ANR	5902866	EqualityExpression	t -> link != padev -> trap_free		5902861	0		!=			
ANR	5902867	PtrMemberAccess	t -> link		5902861	0					
ANR	5902868	Identifier	t		5902861	0					
ANR	5902869	Identifier	link		5902861	1					
ANR	5902870	PtrMemberAccess	padev -> trap_free		5902861	1					
ANR	5902871	Identifier	padev		5902861	0					
ANR	5902872	Identifier	trap_free		5902861	1					
ANR	5902873	ExpressionStatement	return_error ( gs_error_unregistered )	121:8:3308:3343	5902861	1	True				
ANR	5902874	CallExpression	return_error ( gs_error_unregistered )		5902861	0					
ANR	5902875	Callee	return_error		5902861	0					
ANR	5902876	Identifier	return_error		5902861	0					
ANR	5902877	ArgumentList	gs_error_unregistered		5902861	1					
ANR	5902878	Argument	gs_error_unregistered		5902861	0					
ANR	5902879	Identifier	gs_error_unregistered		5902861	0					
ANR	5902880	ExpressionStatement	padev -> trap_free = t	122:4:3372:3392	5902861	1	True				
ANR	5902881	AssignmentExpression	padev -> trap_free = t		5902861	0		=			
ANR	5902882	PtrMemberAccess	padev -> trap_free		5902861	0					
ANR	5902883	Identifier	padev		5902861	0					
ANR	5902884	Identifier	trap_free		5902861	1					
ANR	5902885	Identifier	t		5902861	1					
ANR	5902886	ReturnStatement	return 0 ;	123:4:3398:3406	5902861	2	True				
ANR	5902887	PrimaryExpression	0		5902861	0					
ANR	5902888	ReturnType	static inline int		5902861	1					
ANR	5902889	Identifier	trap_unreserve		5902861	2					
ANR	5902890	ParameterList	"gx_device_spot_analyzer * padev , gx_san_trap * t"		5902861	3					
ANR	5902891	Parameter	gx_device_spot_analyzer * padev	117:15:3171:3200	5902861	0	True				
ANR	5902892	ParameterType	gx_device_spot_analyzer *		5902861	0					
ANR	5902893	Identifier	padev		5902861	1					
ANR	5902894	Parameter	gx_san_trap * t	117:47:3203:3216	5902861	1	True				
ANR	5902895	ParameterType	gx_san_trap *		5902861	0					
ANR	5902896	Identifier	t		5902861	1					
ANR	5902897	CFGEntryNode	ENTRY		5902861		True				
ANR	5902898	CFGExitNode	EXIT		5902861		True				
ANR	5902899	Symbol	gs_error_unregistered		5902861						
ANR	5902900	Symbol	padev		5902861						
ANR	5902901	Symbol	t		5902861						
ANR	5902902	Symbol	* padev		5902861						
ANR	5902903	Symbol	padev -> trap_free		5902861						
ANR	5902904	Symbol	* t		5902861						
ANR	5902905	Symbol	t -> link		5902861						
ANR	5902906	Function	cont_unreserve	126:0:3411:3689							
ANR	5902907	FunctionDef	"cont_unreserve (gx_device_spot_analyzer * padev , gx_san_trap_contact * t)"		5902906	0					
ANR	5902908	CompoundStatement		128:0:3500:3689	5902906	0					
ANR	5902909	IfStatement	if ( t -> link != padev -> cont_free )		5902906	0					
ANR	5902910	Condition	t -> link != padev -> cont_free	130:8:3552:3578	5902906	0	True				
ANR	5902911	EqualityExpression	t -> link != padev -> cont_free		5902906	0		!=			
ANR	5902912	PtrMemberAccess	t -> link		5902906	0					
ANR	5902913	Identifier	t		5902906	0					
ANR	5902914	Identifier	link		5902906	1					
ANR	5902915	PtrMemberAccess	padev -> cont_free		5902906	1					
ANR	5902916	Identifier	padev		5902906	0					
ANR	5902917	Identifier	cont_free		5902906	1					
ANR	5902918	ExpressionStatement	return_error ( gs_error_unregistered )	131:8:3589:3624	5902906	1	True				
ANR	5902919	CallExpression	return_error ( gs_error_unregistered )		5902906	0					
ANR	5902920	Callee	return_error		5902906	0					
ANR	5902921	Identifier	return_error		5902906	0					
ANR	5902922	ArgumentList	gs_error_unregistered		5902906	1					
ANR	5902923	Argument	gs_error_unregistered		5902906	0					
ANR	5902924	Identifier	gs_error_unregistered		5902906	0					
ANR	5902925	ExpressionStatement	padev -> cont_free = t	132:4:3653:3673	5902906	1	True				
ANR	5902926	AssignmentExpression	padev -> cont_free = t		5902906	0		=			
ANR	5902927	PtrMemberAccess	padev -> cont_free		5902906	0					
ANR	5902928	Identifier	padev		5902906	0					
ANR	5902929	Identifier	cont_free		5902906	1					
ANR	5902930	Identifier	t		5902906	1					
ANR	5902931	ReturnStatement	return 0 ;	133:4:3679:3687	5902906	2	True				
ANR	5902932	PrimaryExpression	0		5902906	0					
ANR	5902933	ReturnType	static inline int		5902906	1					
ANR	5902934	Identifier	cont_unreserve		5902906	2					
ANR	5902935	ParameterList	"gx_device_spot_analyzer * padev , gx_san_trap_contact * t"		5902906	3					
ANR	5902936	Parameter	gx_device_spot_analyzer * padev	127:15:3444:3473	5902906	0	True				
ANR	5902937	ParameterType	gx_device_spot_analyzer *		5902906	0					
ANR	5902938	Identifier	padev		5902906	1					
ANR	5902939	Parameter	gx_san_trap_contact * t	127:47:3476:3497	5902906	1	True				
ANR	5902940	ParameterType	gx_san_trap_contact *		5902906	0					
ANR	5902941	Identifier	t		5902906	1					
ANR	5902942	CFGEntryNode	ENTRY		5902906		True				
ANR	5902943	CFGExitNode	EXIT		5902906		True				
ANR	5902944	Symbol	padev -> cont_free		5902906						
ANR	5902945	Symbol	gs_error_unregistered		5902906						
ANR	5902946	Symbol	padev		5902906						
ANR	5902947	Symbol	t		5902906						
ANR	5902948	Symbol	* padev		5902906						
ANR	5902949	Symbol	* t		5902906						
ANR	5902950	Symbol	t -> link		5902906						
ANR	5902951	Function	band_list_last	136:0:3692:3874							
ANR	5902952	FunctionDef	band_list_last (const gx_san_trap * list)		5902951	0					
ANR	5902953	CompoundStatement		138:0:3760:3874	5902951	0					
ANR	5902954	ReturnStatement	return list -> prev ;	140:4:3855:3872	5902951	0	True				
ANR	5902955	PtrMemberAccess	list -> prev		5902951	0					
ANR	5902956	Identifier	list		5902951	0					
ANR	5902957	Identifier	prev		5902951	1					
ANR	5902958	ReturnType	static inline gx_san_trap *		5902951	1					
ANR	5902959	Identifier	band_list_last		5902951	2					
ANR	5902960	ParameterList	const gx_san_trap * list		5902951	3					
ANR	5902961	Parameter	const gx_san_trap * list	137:15:3735:3757	5902951	0	True				
ANR	5902962	ParameterType	const gx_san_trap *		5902951	0					
ANR	5902963	Identifier	list		5902951	1					
ANR	5902964	CFGEntryNode	ENTRY		5902951		True				
ANR	5902965	CFGExitNode	EXIT		5902951		True				
ANR	5902966	Symbol	list -> prev		5902951						
ANR	5902967	Symbol	* list		5902951						
ANR	5902968	Symbol	list		5902951						
ANR	5902969	Function	cont_list_last	143:0:3877:4075							
ANR	5902970	FunctionDef	cont_list_last (const gx_san_trap_contact * list)		5902969	0					
ANR	5902971	CompoundStatement		145:0:3961:4075	5902969	0					
ANR	5902972	ReturnStatement	return list -> prev ;	147:4:4056:4073	5902969	0	True				
ANR	5902973	PtrMemberAccess	list -> prev		5902969	0					
ANR	5902974	Identifier	list		5902969	0					
ANR	5902975	Identifier	prev		5902969	1					
ANR	5902976	ReturnType	static inline gx_san_trap_contact *		5902969	1					
ANR	5902977	Identifier	cont_list_last		5902969	2					
ANR	5902978	ParameterList	const gx_san_trap_contact * list		5902969	3					
ANR	5902979	Parameter	const gx_san_trap_contact * list	144:15:3928:3958	5902969	0	True				
ANR	5902980	ParameterType	const gx_san_trap_contact *		5902969	0					
ANR	5902981	Identifier	list		5902969	1					
ANR	5902982	CFGEntryNode	ENTRY		5902969		True				
ANR	5902983	CFGExitNode	EXIT		5902969		True				
ANR	5902984	Symbol	list -> prev		5902969						
ANR	5902985	Symbol	* list		5902969						
ANR	5902986	Symbol	list		5902969						
ANR	5902987	Function	band_list_remove	150:0:4078:4440							
ANR	5902988	FunctionDef	"band_list_remove (gx_san_trap * * list , gx_san_trap * t)"		5902987	0					
ANR	5902989	CompoundStatement		152:0:4150:4440	5902987	0					
ANR	5902990	IfStatement	if ( t -> next == t )		5902987	0					
ANR	5902991	Condition	t -> next == t	154:8:4220:4231	5902987	0	True				
ANR	5902992	EqualityExpression	t -> next == t		5902987	0		==			
ANR	5902993	PtrMemberAccess	t -> next		5902987	0					
ANR	5902994	Identifier	t		5902987	0					
ANR	5902995	Identifier	next		5902987	1					
ANR	5902996	Identifier	t		5902987	1					
ANR	5902997	CompoundStatement		3:22:83:83	5902987	1					
ANR	5902998	ExpressionStatement	* list = NULL	155:8:4244:4256	5902987	0	True				
ANR	5902999	AssignmentExpression	* list = NULL		5902987	0		=			
ANR	5903000	UnaryOperationExpression	* list		5902987	0					
ANR	5903001	UnaryOperator	*		5902987	0					
ANR	5903002	Identifier	list		5902987	1					
ANR	5903003	Identifier	NULL		5902987	1					
ANR	5903004	ElseStatement	else		5902987	0					
ANR	5903005	CompoundStatement		5:11:118:118	5902987	0					
ANR	5903006	IfStatement	if ( * list == t )		5902987	0					
ANR	5903007	Condition	* list == t	157:12:4283:4292	5902987	0	True				
ANR	5903008	EqualityExpression	* list == t		5902987	0		==			
ANR	5903009	UnaryOperationExpression	* list		5902987	0					
ANR	5903010	UnaryOperator	*		5902987	0					
ANR	5903011	Identifier	list		5902987	1					
ANR	5903012	Identifier	t		5902987	1					
ANR	5903013	ExpressionStatement	* list = t -> next	158:12:4307:4322	5902987	1	True				
ANR	5903014	AssignmentExpression	* list = t -> next		5902987	0		=			
ANR	5903015	UnaryOperationExpression	* list		5902987	0					
ANR	5903016	UnaryOperator	*		5902987	0					
ANR	5903017	Identifier	list		5902987	1					
ANR	5903018	PtrMemberAccess	t -> next		5902987	1					
ANR	5903019	Identifier	t		5902987	0					
ANR	5903020	Identifier	next		5902987	1					
ANR	5903021	ExpressionStatement	t -> next -> prev = t -> prev	159:8:4332:4355	5902987	1	True				
ANR	5903022	AssignmentExpression	t -> next -> prev = t -> prev		5902987	0		=			
ANR	5903023	PtrMemberAccess	t -> next -> prev		5902987	0					
ANR	5903024	PtrMemberAccess	t -> next		5902987	0					
ANR	5903025	Identifier	t		5902987	0					
ANR	5903026	Identifier	next		5902987	1					
ANR	5903027	Identifier	prev		5902987	1					
ANR	5903028	PtrMemberAccess	t -> prev		5902987	1					
ANR	5903029	Identifier	t		5902987	0					
ANR	5903030	Identifier	prev		5902987	1					
ANR	5903031	ExpressionStatement	t -> prev -> next = t -> next	160:8:4365:4388	5902987	2	True				
ANR	5903032	AssignmentExpression	t -> prev -> next = t -> next		5902987	0		=			
ANR	5903033	PtrMemberAccess	t -> prev -> next		5902987	0					
ANR	5903034	PtrMemberAccess	t -> prev		5902987	0					
ANR	5903035	Identifier	t		5902987	0					
ANR	5903036	Identifier	prev		5902987	1					
ANR	5903037	Identifier	next		5902987	1					
ANR	5903038	PtrMemberAccess	t -> next		5902987	1					
ANR	5903039	Identifier	t		5902987	0					
ANR	5903040	Identifier	next		5902987	1					
ANR	5903041	ExpressionStatement	t -> next = t -> prev = NULL	162:4:4400:4424	5902987	1	True				
ANR	5903042	AssignmentExpression	t -> next = t -> prev = NULL		5902987	0		=			
ANR	5903043	PtrMemberAccess	t -> next		5902987	0					
ANR	5903044	Identifier	t		5902987	0					
ANR	5903045	Identifier	next		5902987	1					
ANR	5903046	AssignmentExpression	t -> prev = NULL		5902987	1		=			
ANR	5903047	PtrMemberAccess	t -> prev		5902987	0					
ANR	5903048	Identifier	t		5902987	0					
ANR	5903049	Identifier	prev		5902987	1					
ANR	5903050	Identifier	NULL		5902987	1					
ANR	5903051	ReturnType	static inline void		5902987	1					
ANR	5903052	Identifier	band_list_remove		5902987	2					
ANR	5903053	ParameterList	"gx_san_trap * * list , gx_san_trap * t"		5902987	3					
ANR	5903054	Parameter	gx_san_trap * * list	151:17:4114:4131	5902987	0	True				
ANR	5903055	ParameterType	gx_san_trap * *		5902987	0					
ANR	5903056	Identifier	list		5902987	1					
ANR	5903057	Parameter	gx_san_trap * t	151:37:4134:4147	5902987	1	True				
ANR	5903058	ParameterType	gx_san_trap *		5902987	0					
ANR	5903059	Identifier	t		5902987	1					
ANR	5903060	CFGEntryNode	ENTRY		5902987		True				
ANR	5903061	CFGExitNode	EXIT		5902987		True				
ANR	5903062	Symbol	t -> prev		5902987						
ANR	5903063	Symbol	NULL		5902987						
ANR	5903064	Symbol	t		5902987						
ANR	5903065	Symbol	t -> next		5902987						
ANR	5903066	Symbol	* list		5902987						
ANR	5903067	Symbol	t -> next -> prev		5902987						
ANR	5903068	Symbol	* t -> next		5902987						
ANR	5903069	Symbol	* * t		5902987						
ANR	5903070	Symbol	* t -> prev		5902987						
ANR	5903071	Symbol	t -> prev -> next		5902987						
ANR	5903072	Symbol	list		5902987						
ANR	5903073	Symbol	* t		5902987						
ANR	5903074	Function	band_list_insert_last	165:0:4443:4811							
ANR	5903075	FunctionDef	"band_list_insert_last (gx_san_trap * * list , gx_san_trap * t)"		5903074	0					
ANR	5903076	CompoundStatement		167:0:4520:4811	5903074	0					
ANR	5903077	IfStatement	if ( * list == 0 )		5903074	0					
ANR	5903078	Condition	* list == 0	169:8:4564:4573	5903074	0	True				
ANR	5903079	EqualityExpression	* list == 0		5903074	0		==			
ANR	5903080	UnaryOperationExpression	* list		5903074	0					
ANR	5903081	UnaryOperator	*		5903074	0					
ANR	5903082	Identifier	list		5903074	1					
ANR	5903083	PrimaryExpression	0		5903074	1					
ANR	5903084	CompoundStatement		3:20:55:55	5903074	1					
ANR	5903085	ExpressionStatement	* list = t -> next = t -> prev = t	170:8:4586:4615	5903074	0	True				
ANR	5903086	AssignmentExpression	* list = t -> next = t -> prev = t		5903074	0		=			
ANR	5903087	UnaryOperationExpression	* list		5903074	0					
ANR	5903088	UnaryOperator	*		5903074	0					
ANR	5903089	Identifier	list		5903074	1					
ANR	5903090	AssignmentExpression	t -> next = t -> prev = t		5903074	1		=			
ANR	5903091	PtrMemberAccess	t -> next		5903074	0					
ANR	5903092	Identifier	t		5903074	0					
ANR	5903093	Identifier	next		5903074	1					
ANR	5903094	AssignmentExpression	t -> prev = t		5903074	1		=			
ANR	5903095	PtrMemberAccess	t -> prev		5903074	0					
ANR	5903096	Identifier	t		5903074	0					
ANR	5903097	Identifier	prev		5903074	1					
ANR	5903098	Identifier	t		5903074	1					
ANR	5903099	ElseStatement	else		5903074	0					
ANR	5903100	CompoundStatement		7:8:168:194	5903074	0					
ANR	5903101	IdentifierDeclStatement	gx_san_trap * last = band_list_last ( * list ) ;	172:8:4638:4679	5903074	0	True				
ANR	5903102	IdentifierDecl	* last = band_list_last ( * list )		5903074	0					
ANR	5903103	IdentifierDeclType	gx_san_trap *		5903074	0					
ANR	5903104	Identifier	last		5903074	1					
ANR	5903105	AssignmentExpression	* last = band_list_last ( * list )		5903074	2		=			
ANR	5903106	Identifier	last		5903074	0					
ANR	5903107	CallExpression	band_list_last ( * list )		5903074	1					
ANR	5903108	Callee	band_list_last		5903074	0					
ANR	5903109	Identifier	band_list_last		5903074	0					
ANR	5903110	ArgumentList	* list		5903074	1					
ANR	5903111	Argument	* list		5903074	0					
ANR	5903112	UnaryOperationExpression	* list		5903074	0					
ANR	5903113	UnaryOperator	*		5903074	0					
ANR	5903114	Identifier	list		5903074	1					
ANR	5903115	IdentifierDeclStatement	gx_san_trap * first = * list ;	173:8:4689:4715	5903074	1	True				
ANR	5903116	IdentifierDecl	* first = * list		5903074	0					
ANR	5903117	IdentifierDeclType	gx_san_trap *		5903074	0					
ANR	5903118	Identifier	first		5903074	1					
ANR	5903119	AssignmentExpression	* first = * list		5903074	2		=			
ANR	5903120	Identifier	first		5903074	0					
ANR	5903121	UnaryOperationExpression	* list		5903074	1					
ANR	5903122	UnaryOperator	*		5903074	0					
ANR	5903123	Identifier	list		5903074	1					
ANR	5903124	ExpressionStatement	t -> next = first	175:8:4726:4741	5903074	2	True				
ANR	5903125	AssignmentExpression	t -> next = first		5903074	0		=			
ANR	5903126	PtrMemberAccess	t -> next		5903074	0					
ANR	5903127	Identifier	t		5903074	0					
ANR	5903128	Identifier	next		5903074	1					
ANR	5903129	Identifier	first		5903074	1					
ANR	5903130	ExpressionStatement	t -> prev = last	176:8:4751:4765	5903074	3	True				
ANR	5903131	AssignmentExpression	t -> prev = last		5903074	0		=			
ANR	5903132	PtrMemberAccess	t -> prev		5903074	0					
ANR	5903133	Identifier	t		5903074	0					
ANR	5903134	Identifier	prev		5903074	1					
ANR	5903135	Identifier	last		5903074	1					
ANR	5903136	ExpressionStatement	last -> next = first -> prev = t	177:8:4775:4803	5903074	4	True				
ANR	5903137	AssignmentExpression	last -> next = first -> prev = t		5903074	0		=			
ANR	5903138	PtrMemberAccess	last -> next		5903074	0					
ANR	5903139	Identifier	last		5903074	0					
ANR	5903140	Identifier	next		5903074	1					
ANR	5903141	AssignmentExpression	first -> prev = t		5903074	1		=			
ANR	5903142	PtrMemberAccess	first -> prev		5903074	0					
ANR	5903143	Identifier	first		5903074	0					
ANR	5903144	Identifier	prev		5903074	1					
ANR	5903145	Identifier	t		5903074	1					
ANR	5903146	ReturnType	static inline void		5903074	1					
ANR	5903147	Identifier	band_list_insert_last		5903074	2					
ANR	5903148	ParameterList	"gx_san_trap * * list , gx_san_trap * t"		5903074	3					
ANR	5903149	Parameter	gx_san_trap * * list	166:22:4484:4501	5903074	0	True				
ANR	5903150	ParameterType	gx_san_trap * *		5903074	0					
ANR	5903151	Identifier	list		5903074	1					
ANR	5903152	Parameter	gx_san_trap * t	166:42:4504:4517	5903074	1	True				
ANR	5903153	ParameterType	gx_san_trap *		5903074	0					
ANR	5903154	Identifier	t		5903074	1					
ANR	5903155	CFGEntryNode	ENTRY		5903074		True				
ANR	5903156	CFGExitNode	EXIT		5903074		True				
ANR	5903157	Symbol	last -> next		5903074						
ANR	5903158	Symbol	last		5903074						
ANR	5903159	Symbol	list		5903074						
ANR	5903160	Symbol	* last		5903074						
ANR	5903161	Symbol	t -> prev		5903074						
ANR	5903162	Symbol	band_list_last		5903074						
ANR	5903163	Symbol	t		5903074						
ANR	5903164	Symbol	* list		5903074						
ANR	5903165	Symbol	t -> next		5903074						
ANR	5903166	Symbol	* first		5903074						
ANR	5903167	Symbol	first -> prev		5903074						
ANR	5903168	Symbol	* t		5903074						
ANR	5903169	Symbol	first		5903074						
ANR	5903170	Function	cont_list_insert_last	181:0:4814:5214							
ANR	5903171	FunctionDef	"cont_list_insert_last (gx_san_trap_contact * * list , gx_san_trap_contact * t)"		5903170	0					
ANR	5903172	CompoundStatement		183:0:4907:5214	5903170	0					
ANR	5903173	IfStatement	if ( * list == 0 )		5903170	0					
ANR	5903174	Condition	* list == 0	185:8:4951:4960	5903170	0	True				
ANR	5903175	EqualityExpression	* list == 0		5903170	0		==			
ANR	5903176	UnaryOperationExpression	* list		5903170	0					
ANR	5903177	UnaryOperator	*		5903170	0					
ANR	5903178	Identifier	list		5903170	1					
ANR	5903179	PrimaryExpression	0		5903170	1					
ANR	5903180	CompoundStatement		3:20:55:55	5903170	1					
ANR	5903181	ExpressionStatement	* list = t -> next = t -> prev = t	186:8:4973:5002	5903170	0	True				
ANR	5903182	AssignmentExpression	* list = t -> next = t -> prev = t		5903170	0		=			
ANR	5903183	UnaryOperationExpression	* list		5903170	0					
ANR	5903184	UnaryOperator	*		5903170	0					
ANR	5903185	Identifier	list		5903170	1					
ANR	5903186	AssignmentExpression	t -> next = t -> prev = t		5903170	1		=			
ANR	5903187	PtrMemberAccess	t -> next		5903170	0					
ANR	5903188	Identifier	t		5903170	0					
ANR	5903189	Identifier	next		5903170	1					
ANR	5903190	AssignmentExpression	t -> prev = t		5903170	1		=			
ANR	5903191	PtrMemberAccess	t -> prev		5903170	0					
ANR	5903192	Identifier	t		5903170	0					
ANR	5903193	Identifier	prev		5903170	1					
ANR	5903194	Identifier	t		5903170	1					
ANR	5903195	ElseStatement	else		5903170	0					
ANR	5903196	CompoundStatement		7:8:176:210	5903170	0					
ANR	5903197	IdentifierDeclStatement	gx_san_trap_contact * last = cont_list_last ( * list ) ;	188:8:5025:5074	5903170	0	True				
ANR	5903198	IdentifierDecl	* last = cont_list_last ( * list )		5903170	0					
ANR	5903199	IdentifierDeclType	gx_san_trap_contact *		5903170	0					
ANR	5903200	Identifier	last		5903170	1					
ANR	5903201	AssignmentExpression	* last = cont_list_last ( * list )		5903170	2		=			
ANR	5903202	Identifier	last		5903170	0					
ANR	5903203	CallExpression	cont_list_last ( * list )		5903170	1					
ANR	5903204	Callee	cont_list_last		5903170	0					
ANR	5903205	Identifier	cont_list_last		5903170	0					
ANR	5903206	ArgumentList	* list		5903170	1					
ANR	5903207	Argument	* list		5903170	0					
ANR	5903208	UnaryOperationExpression	* list		5903170	0					
ANR	5903209	UnaryOperator	*		5903170	0					
ANR	5903210	Identifier	list		5903170	1					
ANR	5903211	IdentifierDeclStatement	gx_san_trap_contact * first = * list ;	189:8:5084:5118	5903170	1	True				
ANR	5903212	IdentifierDecl	* first = * list		5903170	0					
ANR	5903213	IdentifierDeclType	gx_san_trap_contact *		5903170	0					
ANR	5903214	Identifier	first		5903170	1					
ANR	5903215	AssignmentExpression	* first = * list		5903170	2		=			
ANR	5903216	Identifier	first		5903170	0					
ANR	5903217	UnaryOperationExpression	* list		5903170	1					
ANR	5903218	UnaryOperator	*		5903170	0					
ANR	5903219	Identifier	list		5903170	1					
ANR	5903220	ExpressionStatement	t -> next = first	191:8:5129:5144	5903170	2	True				
ANR	5903221	AssignmentExpression	t -> next = first		5903170	0		=			
ANR	5903222	PtrMemberAccess	t -> next		5903170	0					
ANR	5903223	Identifier	t		5903170	0					
ANR	5903224	Identifier	next		5903170	1					
ANR	5903225	Identifier	first		5903170	1					
ANR	5903226	ExpressionStatement	t -> prev = last	192:8:5154:5168	5903170	3	True				
ANR	5903227	AssignmentExpression	t -> prev = last		5903170	0		=			
ANR	5903228	PtrMemberAccess	t -> prev		5903170	0					
ANR	5903229	Identifier	t		5903170	0					
ANR	5903230	Identifier	prev		5903170	1					
ANR	5903231	Identifier	last		5903170	1					
ANR	5903232	ExpressionStatement	last -> next = first -> prev = t	193:8:5178:5206	5903170	4	True				
ANR	5903233	AssignmentExpression	last -> next = first -> prev = t		5903170	0		=			
ANR	5903234	PtrMemberAccess	last -> next		5903170	0					
ANR	5903235	Identifier	last		5903170	0					
ANR	5903236	Identifier	next		5903170	1					
ANR	5903237	AssignmentExpression	first -> prev = t		5903170	1		=			
ANR	5903238	PtrMemberAccess	first -> prev		5903170	0					
ANR	5903239	Identifier	first		5903170	0					
ANR	5903240	Identifier	prev		5903170	1					
ANR	5903241	Identifier	t		5903170	1					
ANR	5903242	ReturnType	static inline void		5903170	1					
ANR	5903243	Identifier	cont_list_insert_last		5903170	2					
ANR	5903244	ParameterList	"gx_san_trap_contact * * list , gx_san_trap_contact * t"		5903170	3					
ANR	5903245	Parameter	gx_san_trap_contact * * list	182:22:4855:4880	5903170	0	True				
ANR	5903246	ParameterType	gx_san_trap_contact * *		5903170	0					
ANR	5903247	Identifier	list		5903170	1					
ANR	5903248	Parameter	gx_san_trap_contact * t	182:50:4883:4904	5903170	1	True				
ANR	5903249	ParameterType	gx_san_trap_contact *		5903170	0					
ANR	5903250	Identifier	t		5903170	1					
ANR	5903251	CFGEntryNode	ENTRY		5903170		True				
ANR	5903252	CFGExitNode	EXIT		5903170		True				
ANR	5903253	Symbol	last -> next		5903170						
ANR	5903254	Symbol	last		5903170						
ANR	5903255	Symbol	list		5903170						
ANR	5903256	Symbol	* last		5903170						
ANR	5903257	Symbol	t -> prev		5903170						
ANR	5903258	Symbol	t		5903170						
ANR	5903259	Symbol	* list		5903170						
ANR	5903260	Symbol	t -> next		5903170						
ANR	5903261	Symbol	* first		5903170						
ANR	5903262	Symbol	cont_list_last		5903170						
ANR	5903263	Symbol	first -> prev		5903170						
ANR	5903264	Symbol	* t		5903170						
ANR	5903265	Symbol	first		5903170						
ANR	5903266	Function	trap_is_last	197:0:5217:5415							
ANR	5903267	FunctionDef	"trap_is_last (const gx_san_trap * list , const gx_san_trap * t)"		5903266	0					
ANR	5903268	CompoundStatement		199:0:5296:5415	5903266	0					
ANR	5903269	ReturnStatement	return t -> next == list ;	201:4:5391:5413	5903266	0	True				
ANR	5903270	EqualityExpression	t -> next == list		5903266	0		==			
ANR	5903271	PtrMemberAccess	t -> next		5903266	0					
ANR	5903272	Identifier	t		5903266	0					
ANR	5903273	Identifier	next		5903266	1					
ANR	5903274	Identifier	list		5903266	1					
ANR	5903275	ReturnType	static inline bool		5903266	1					
ANR	5903276	Identifier	trap_is_last		5903266	2					
ANR	5903277	ParameterList	"const gx_san_trap * list , const gx_san_trap * t"		5903266	3					
ANR	5903278	Parameter	const gx_san_trap * list	198:13:5249:5271	5903266	0	True				
ANR	5903279	ParameterType	const gx_san_trap *		5903266	0					
ANR	5903280	Identifier	list		5903266	1					
ANR	5903281	Parameter	const gx_san_trap * t	198:38:5274:5293	5903266	1	True				
ANR	5903282	ParameterType	const gx_san_trap *		5903266	0					
ANR	5903283	Identifier	t		5903266	1					
ANR	5903284	CFGEntryNode	ENTRY		5903266		True				
ANR	5903285	CFGExitNode	EXIT		5903266		True				
ANR	5903286	Symbol	t		5903266						
ANR	5903287	Symbol	t -> next		5903266						
ANR	5903288	Symbol	list		5903266						
ANR	5903289	Symbol	* t		5903266						
ANR	5903290	DeclStmt									
ANR	5903291	Decl							const gx_device_spot_analyzer	const gx_device_spot_analyzer	gx_spot_analyzer_device
ANR	5903292	Function	san_open	267:0:6242:6599							
ANR	5903293	FunctionDef	san_open (register gx_device * dev)		5903292	0					
ANR	5903294	CompoundStatement		269:0:6281:6599	5903292	0					
ANR	5903295	Statement	gx_device_spot_analyzer	270:4:6287:6309	5903292	0	True				
ANR	5903296	Statement	*	270:28:6311:6311	5903292	1	True				
ANR	5903297	Statement	const	270:30:6313:6317	5903292	2	True				
ANR	5903298	ExpressionStatement	padev = ( gx_device_spot_analyzer * ) dev	270:36:6319:6357	5903292	3	True				
ANR	5903299	AssignmentExpression	padev = ( gx_device_spot_analyzer * ) dev		5903292	0		=			
ANR	5903300	Identifier	padev		5903292	0					
ANR	5903301	CastExpression	( gx_device_spot_analyzer * ) dev		5903292	1					
ANR	5903302	CastTarget	gx_device_spot_analyzer *		5903292	0					
ANR	5903303	Identifier	dev		5903292	1					
ANR	5903304	ExpressionStatement	padev -> trap_buffer = padev -> trap_buffer_last = NULL	272:4:6364:6415	5903292	4	True				
ANR	5903305	AssignmentExpression	padev -> trap_buffer = padev -> trap_buffer_last = NULL		5903292	0		=			
ANR	5903306	PtrMemberAccess	padev -> trap_buffer		5903292	0					
ANR	5903307	Identifier	padev		5903292	0					
ANR	5903308	Identifier	trap_buffer		5903292	1					
ANR	5903309	AssignmentExpression	padev -> trap_buffer_last = NULL		5903292	1		=			
ANR	5903310	PtrMemberAccess	padev -> trap_buffer_last		5903292	0					
ANR	5903311	Identifier	padev		5903292	0					
ANR	5903312	Identifier	trap_buffer_last		5903292	1					
ANR	5903313	Identifier	NULL		5903292	1					
ANR	5903314	ExpressionStatement	padev -> cont_buffer = padev -> cont_buffer_last = NULL	273:4:6421:6472	5903292	5	True				
ANR	5903315	AssignmentExpression	padev -> cont_buffer = padev -> cont_buffer_last = NULL		5903292	0		=			
ANR	5903316	PtrMemberAccess	padev -> cont_buffer		5903292	0					
ANR	5903317	Identifier	padev		5903292	0					
ANR	5903318	Identifier	cont_buffer		5903292	1					
ANR	5903319	AssignmentExpression	padev -> cont_buffer_last = NULL		5903292	1		=			
ANR	5903320	PtrMemberAccess	padev -> cont_buffer_last		5903292	0					
ANR	5903321	Identifier	padev		5903292	0					
ANR	5903322	Identifier	cont_buffer_last		5903292	1					
ANR	5903323	Identifier	NULL		5903292	1					
ANR	5903324	ExpressionStatement	padev -> trap_buffer_count = 0	274:4:6478:6506	5903292	6	True				
ANR	5903325	AssignmentExpression	padev -> trap_buffer_count = 0		5903292	0		=			
ANR	5903326	PtrMemberAccess	padev -> trap_buffer_count		5903292	0					
ANR	5903327	Identifier	padev		5903292	0					
ANR	5903328	Identifier	trap_buffer_count		5903292	1					
ANR	5903329	PrimaryExpression	0		5903292	1					
ANR	5903330	ExpressionStatement	padev -> cont_buffer_count = 0	275:4:6512:6540	5903292	7	True				
ANR	5903331	AssignmentExpression	padev -> cont_buffer_count = 0		5903292	0		=			
ANR	5903332	PtrMemberAccess	padev -> cont_buffer_count		5903292	0					
ANR	5903333	Identifier	padev		5903292	0					
ANR	5903334	Identifier	cont_buffer_count		5903292	1					
ANR	5903335	PrimaryExpression	0		5903292	1					
ANR	5903336	ExpressionStatement	padev -> xmin = 0	276:4:6546:6561	5903292	8	True				
ANR	5903337	AssignmentExpression	padev -> xmin = 0		5903292	0		=			
ANR	5903338	PtrMemberAccess	padev -> xmin		5903292	0					
ANR	5903339	Identifier	padev		5903292	0					
ANR	5903340	Identifier	xmin		5903292	1					
ANR	5903341	PrimaryExpression	0		5903292	1					
ANR	5903342	ExpressionStatement	padev -> xmax = - 1	277:4:6567:6583	5903292	9	True				
ANR	5903343	AssignmentExpression	padev -> xmax = - 1		5903292	0		=			
ANR	5903344	PtrMemberAccess	padev -> xmax		5903292	0					
ANR	5903345	Identifier	padev		5903292	0					
ANR	5903346	Identifier	xmax		5903292	1					
ANR	5903347	UnaryOperationExpression	- 1		5903292	1					
ANR	5903348	UnaryOperator	-		5903292	0					
ANR	5903349	PrimaryExpression	1		5903292	1					
ANR	5903350	ReturnStatement	return 0 ;	278:4:6589:6597	5903292	10	True				
ANR	5903351	PrimaryExpression	0		5903292	0					
ANR	5903352	ReturnType	int		5903292	1					
ANR	5903353	Identifier	san_open		5903292	2					
ANR	5903354	ParameterList	register gx_device * dev		5903292	3					
ANR	5903355	Parameter	register gx_device * dev	268:9:6255:6278	5903292	0	True				
ANR	5903356	ParameterType	register gx_device *		5903292	0					
ANR	5903357	Identifier	dev		5903292	1					
ANR	5903358	CFGEntryNode	ENTRY		5903292		True				
ANR	5903359	CFGExitNode	EXIT		5903292		True				
ANR	5903360	Symbol	padev -> cont_buffer		5903292						
ANR	5903361	Symbol	padev		5903292						
ANR	5903362	Symbol	padev -> trap_buffer_last		5903292						
ANR	5903363	Symbol	NULL		5903292						
ANR	5903364	Symbol	padev -> cont_buffer_count		5903292						
ANR	5903365	Symbol	dev		5903292						
ANR	5903366	Symbol	padev -> trap_buffer_count		5903292						
ANR	5903367	Symbol	* padev		5903292						
ANR	5903368	Symbol	padev -> cont_buffer_last		5903292						
ANR	5903369	Symbol	padev -> trap_buffer		5903292						
ANR	5903370	Symbol	padev -> xmax		5903292						
ANR	5903371	Symbol	padev -> xmin		5903292						
ANR	5903372	Function	san_close	281:0:6602:7062							
ANR	5903373	FunctionDef	san_close (gx_device * dev)		5903372	0					
ANR	5903374	CompoundStatement		283:0:6640:7062	5903372	0					
ANR	5903375	Statement	gx_device_spot_analyzer	284:4:6646:6668	5903372	0	True				
ANR	5903376	Statement	*	284:28:6670:6670	5903372	1	True				
ANR	5903377	Statement	const	284:30:6672:6676	5903372	2	True				
ANR	5903378	ExpressionStatement	padev = ( gx_device_spot_analyzer * ) dev	284:36:6678:6716	5903372	3	True				
ANR	5903379	AssignmentExpression	padev = ( gx_device_spot_analyzer * ) dev		5903372	0		=			
ANR	5903380	Identifier	padev		5903372	0					
ANR	5903381	CastExpression	( gx_device_spot_analyzer * ) dev		5903372	1					
ANR	5903382	CastTarget	gx_device_spot_analyzer *		5903372	0					
ANR	5903383	Identifier	dev		5903372	1					
ANR	5903384	ExpressionStatement	"free_trap_list ( padev -> memory , & padev -> trap_buffer )"	286:4:6723:6773	5903372	4	True				
ANR	5903385	CallExpression	"free_trap_list ( padev -> memory , & padev -> trap_buffer )"		5903372	0					
ANR	5903386	Callee	free_trap_list		5903372	0					
ANR	5903387	Identifier	free_trap_list		5903372	0					
ANR	5903388	ArgumentList	padev -> memory		5903372	1					
ANR	5903389	Argument	padev -> memory		5903372	0					
ANR	5903390	PtrMemberAccess	padev -> memory		5903372	0					
ANR	5903391	Identifier	padev		5903372	0					
ANR	5903392	Identifier	memory		5903372	1					
ANR	5903393	Argument	& padev -> trap_buffer		5903372	1					
ANR	5903394	UnaryOperationExpression	& padev -> trap_buffer		5903372	0					
ANR	5903395	UnaryOperator	&		5903372	0					
ANR	5903396	PtrMemberAccess	padev -> trap_buffer		5903372	1					
ANR	5903397	Identifier	padev		5903372	0					
ANR	5903398	Identifier	trap_buffer		5903372	1					
ANR	5903399	ExpressionStatement	"free_cont_list ( padev -> memory , & padev -> cont_buffer )"	287:4:6779:6829	5903372	5	True				
ANR	5903400	CallExpression	"free_cont_list ( padev -> memory , & padev -> cont_buffer )"		5903372	0					
ANR	5903401	Callee	free_cont_list		5903372	0					
ANR	5903402	Identifier	free_cont_list		5903372	0					
ANR	5903403	ArgumentList	padev -> memory		5903372	1					
ANR	5903404	Argument	padev -> memory		5903372	0					
ANR	5903405	PtrMemberAccess	padev -> memory		5903372	0					
ANR	5903406	Identifier	padev		5903372	0					
ANR	5903407	Identifier	memory		5903372	1					
ANR	5903408	Argument	& padev -> cont_buffer		5903372	1					
ANR	5903409	UnaryOperationExpression	& padev -> cont_buffer		5903372	0					
ANR	5903410	UnaryOperator	&		5903372	0					
ANR	5903411	PtrMemberAccess	padev -> cont_buffer		5903372	1					
ANR	5903412	Identifier	padev		5903372	0					
ANR	5903413	Identifier	cont_buffer		5903372	1					
ANR	5903414	ExpressionStatement	padev -> trap_buffer_last = NULL	288:4:6835:6865	5903372	6	True				
ANR	5903415	AssignmentExpression	padev -> trap_buffer_last = NULL		5903372	0		=			
ANR	5903416	PtrMemberAccess	padev -> trap_buffer_last		5903372	0					
ANR	5903417	Identifier	padev		5903372	0					
ANR	5903418	Identifier	trap_buffer_last		5903372	1					
ANR	5903419	Identifier	NULL		5903372	1					
ANR	5903420	ExpressionStatement	padev -> cont_buffer_last = NULL	289:4:6871:6901	5903372	7	True				
ANR	5903421	AssignmentExpression	padev -> cont_buffer_last = NULL		5903372	0		=			
ANR	5903422	PtrMemberAccess	padev -> cont_buffer_last		5903372	0					
ANR	5903423	Identifier	padev		5903372	0					
ANR	5903424	Identifier	cont_buffer_last		5903372	1					
ANR	5903425	Identifier	NULL		5903372	1					
ANR	5903426	ExpressionStatement	padev -> trap_free = NULL	290:4:6907:6930	5903372	8	True				
ANR	5903427	AssignmentExpression	padev -> trap_free = NULL		5903372	0		=			
ANR	5903428	PtrMemberAccess	padev -> trap_free		5903372	0					
ANR	5903429	Identifier	padev		5903372	0					
ANR	5903430	Identifier	trap_free		5903372	1					
ANR	5903431	Identifier	NULL		5903372	1					
ANR	5903432	ExpressionStatement	padev -> cont_free = NULL	291:4:6936:6959	5903372	9	True				
ANR	5903433	AssignmentExpression	padev -> cont_free = NULL		5903372	0		=			
ANR	5903434	PtrMemberAccess	padev -> cont_free		5903372	0					
ANR	5903435	Identifier	padev		5903372	0					
ANR	5903436	Identifier	cont_free		5903372	1					
ANR	5903437	Identifier	NULL		5903372	1					
ANR	5903438	ExpressionStatement	padev -> top_band = NULL	292:4:6965:6987	5903372	10	True				
ANR	5903439	AssignmentExpression	padev -> top_band = NULL		5903372	0		=			
ANR	5903440	PtrMemberAccess	padev -> top_band		5903372	0					
ANR	5903441	Identifier	padev		5903372	0					
ANR	5903442	Identifier	top_band		5903372	1					
ANR	5903443	Identifier	NULL		5903372	1					
ANR	5903444	ExpressionStatement	padev -> bot_band = NULL	293:4:6993:7015	5903372	11	True				
ANR	5903445	AssignmentExpression	padev -> bot_band = NULL		5903372	0		=			
ANR	5903446	PtrMemberAccess	padev -> bot_band		5903372	0					
ANR	5903447	Identifier	padev		5903372	0					
ANR	5903448	Identifier	bot_band		5903372	1					
ANR	5903449	Identifier	NULL		5903372	1					
ANR	5903450	ExpressionStatement	padev -> bot_current = NULL	294:4:7021:7046	5903372	12	True				
ANR	5903451	AssignmentExpression	padev -> bot_current = NULL		5903372	0		=			
ANR	5903452	PtrMemberAccess	padev -> bot_current		5903372	0					
ANR	5903453	Identifier	padev		5903372	0					
ANR	5903454	Identifier	bot_current		5903372	1					
ANR	5903455	Identifier	NULL		5903372	1					
ANR	5903456	ReturnStatement	return 0 ;	295:4:7052:7060	5903372	13	True				
ANR	5903457	PrimaryExpression	0		5903372	0					
ANR	5903458	ReturnType	static int		5903372	1					
ANR	5903459	Identifier	san_close		5903372	2					
ANR	5903460	ParameterList	gx_device * dev		5903372	3					
ANR	5903461	Parameter	gx_device * dev	282:10:6623:6637	5903372	0	True				
ANR	5903462	ParameterType	gx_device *		5903372	0					
ANR	5903463	Identifier	dev		5903372	1					
ANR	5903464	CFGEntryNode	ENTRY		5903372		True				
ANR	5903465	CFGExitNode	EXIT		5903372		True				
ANR	5903466	Symbol	padev -> cont_free		5903372						
ANR	5903467	Symbol	NULL		5903372						
ANR	5903468	Symbol	padev -> trap_buffer_last		5903372						
ANR	5903469	Symbol	& padev -> cont_buffer		5903372						
ANR	5903470	Symbol	& padev -> trap_buffer		5903372						
ANR	5903471	Symbol	padev -> top_band		5903372						
ANR	5903472	Symbol	padev -> memory		5903372						
ANR	5903473	Symbol	padev -> bot_band		5903372						
ANR	5903474	Symbol	padev		5903372						
ANR	5903475	Symbol	dev		5903372						
ANR	5903476	Symbol	* padev		5903372						
ANR	5903477	Symbol	padev -> cont_buffer_last		5903372						
ANR	5903478	Symbol	padev -> bot_current		5903372						
ANR	5903479	Symbol	padev -> trap_free		5903372						
ANR	5903480	Function	san_get_clipping_box	298:0:7065:7232							
ANR	5903481	FunctionDef	"san_get_clipping_box (gx_device * dev , gs_fixed_rect * pbox)"		5903480	0					
ANR	5903482	CompoundStatement		300:0:7130:7232	5903480	0					
ANR	5903483	ExpressionStatement	pbox -> p . x = min_int	301:4:7136:7155	5903480	0	True				
ANR	5903484	AssignmentExpression	pbox -> p . x = min_int		5903480	0		=			
ANR	5903485	MemberAccess	pbox -> p . x		5903480	0					
ANR	5903486	PtrMemberAccess	pbox -> p		5903480	0					
ANR	5903487	Identifier	pbox		5903480	0					
ANR	5903488	Identifier	p		5903480	1					
ANR	5903489	Identifier	x		5903480	1					
ANR	5903490	Identifier	min_int		5903480	1					
ANR	5903491	ExpressionStatement	pbox -> p . y = min_int	302:4:7161:7180	5903480	1	True				
ANR	5903492	AssignmentExpression	pbox -> p . y = min_int		5903480	0		=			
ANR	5903493	MemberAccess	pbox -> p . y		5903480	0					
ANR	5903494	PtrMemberAccess	pbox -> p		5903480	0					
ANR	5903495	Identifier	pbox		5903480	0					
ANR	5903496	Identifier	p		5903480	1					
ANR	5903497	Identifier	y		5903480	1					
ANR	5903498	Identifier	min_int		5903480	1					
ANR	5903499	ExpressionStatement	pbox -> q . x = max_int	303:4:7186:7205	5903480	2	True				
ANR	5903500	AssignmentExpression	pbox -> q . x = max_int		5903480	0		=			
ANR	5903501	MemberAccess	pbox -> q . x		5903480	0					
ANR	5903502	PtrMemberAccess	pbox -> q		5903480	0					
ANR	5903503	Identifier	pbox		5903480	0					
ANR	5903504	Identifier	q		5903480	1					
ANR	5903505	Identifier	x		5903480	1					
ANR	5903506	Identifier	max_int		5903480	1					
ANR	5903507	ExpressionStatement	pbox -> q . y = max_int	304:4:7211:7230	5903480	3	True				
ANR	5903508	AssignmentExpression	pbox -> q . y = max_int		5903480	0		=			
ANR	5903509	MemberAccess	pbox -> q . y		5903480	0					
ANR	5903510	PtrMemberAccess	pbox -> q		5903480	0					
ANR	5903511	Identifier	pbox		5903480	0					
ANR	5903512	Identifier	q		5903480	1					
ANR	5903513	Identifier	y		5903480	1					
ANR	5903514	Identifier	max_int		5903480	1					
ANR	5903515	ReturnType	void		5903480	1					
ANR	5903516	Identifier	san_get_clipping_box		5903480	2					
ANR	5903517	ParameterList	"gx_device * dev , gs_fixed_rect * pbox"		5903480	3					
ANR	5903518	Parameter	gx_device * dev	299:21:7091:7105	5903480	0	True				
ANR	5903519	ParameterType	gx_device *		5903480	0					
ANR	5903520	Identifier	dev		5903480	1					
ANR	5903521	Parameter	gs_fixed_rect * pbox	299:38:7108:7127	5903480	1	True				
ANR	5903522	ParameterType	gs_fixed_rect *		5903480	0					
ANR	5903523	Identifier	pbox		5903480	1					
ANR	5903524	CFGEntryNode	ENTRY		5903480		True				
ANR	5903525	CFGExitNode	EXIT		5903480		True				
ANR	5903526	Symbol	max_int		5903480						
ANR	5903527	Symbol	pbox -> q		5903480						
ANR	5903528	Symbol	pbox -> p		5903480						
ANR	5903529	Symbol	* pbox		5903480						
ANR	5903530	Symbol	dev		5903480						
ANR	5903531	Symbol	pbox -> p . x		5903480						
ANR	5903532	Symbol	pbox -> p . y		5903480						
ANR	5903533	Symbol	min_int		5903480						
ANR	5903534	Symbol	pbox -> q . y		5903480						
ANR	5903535	Symbol	pbox		5903480						
ANR	5903536	Symbol	pbox -> q . x		5903480						
ANR	5903537	Function	check_band_list	309:0:7300:7651							
ANR	5903538	FunctionDef	check_band_list (const gx_san_trap * list)		5903537	0					
ANR	5903539	CompoundStatement		311:0:7359:7651	5903537	0					
ANR	5903540	IfStatement	if ( list != NULL )		5903537	0					
ANR	5903541	Condition	list != NULL	313:8:7382:7393	5903537	0	True				
ANR	5903542	EqualityExpression	list != NULL		5903537	0		!=			
ANR	5903543	Identifier	list		5903537	0					
ANR	5903544	Identifier	NULL		5903537	1					
ANR	5903545	CompoundStatement		4:8:46:73	5903537	1					
ANR	5903546	IdentifierDeclStatement	const gx_san_trap * t = list ;	314:8:7406:7433	5903537	0	True				
ANR	5903547	IdentifierDecl	* t = list		5903537	0					
ANR	5903548	IdentifierDeclType	const gx_san_trap *		5903537	0					
ANR	5903549	Identifier	t		5903537	1					
ANR	5903550	AssignmentExpression	* t = list		5903537	2		=			
ANR	5903551	Identifier	list		5903537	0					
ANR	5903552	Identifier	list		5903537	1					
ANR	5903553	WhileStatement	while ( t -> next != list )		5903537	1					
ANR	5903554	Condition	t -> next != list	316:15:7451:7465	5903537	0	True				
ANR	5903555	EqualityExpression	t -> next != list		5903537	0		!=			
ANR	5903556	PtrMemberAccess	t -> next		5903537	0					
ANR	5903557	Identifier	t		5903537	0					
ANR	5903558	Identifier	next		5903537	1					
ANR	5903559	Identifier	list		5903537	1					
ANR	5903560	CompoundStatement		6:32:108:108	5903537	1					
ANR	5903561	IfStatement	if ( t -> xrtop > t -> next -> xltop )		5903537	0					
ANR	5903562	Condition	t -> xrtop > t -> next -> xltop	317:16:7486:7510	5903537	0	True				
ANR	5903563	RelationalExpression	t -> xrtop > t -> next -> xltop		5903537	0		>			
ANR	5903564	PtrMemberAccess	t -> xrtop		5903537	0					
ANR	5903565	Identifier	t		5903537	0					
ANR	5903566	Identifier	xrtop		5903537	1					
ANR	5903567	PtrMemberAccess	t -> next -> xltop		5903537	1					
ANR	5903568	PtrMemberAccess	t -> next		5903537	0					
ANR	5903569	Identifier	t		5903537	0					
ANR	5903570	Identifier	next		5903537	1					
ANR	5903571	Identifier	xltop		5903537	1					
ANR	5903572	ExpressionStatement	return_error ( gs_error_unregistered )	318:16:7529:7564	5903537	1	True				
ANR	5903573	CallExpression	return_error ( gs_error_unregistered )		5903537	0					
ANR	5903574	Callee	return_error		5903537	0					
ANR	5903575	Identifier	return_error		5903537	0					
ANR	5903576	ArgumentList	gs_error_unregistered		5903537	1					
ANR	5903577	Argument	gs_error_unregistered		5903537	0					
ANR	5903578	Identifier	gs_error_unregistered		5903537	0					
ANR	5903579	ExpressionStatement	t = t -> next	319:12:7601:7612	5903537	1	True				
ANR	5903580	AssignmentExpression	t = t -> next		5903537	0		=			
ANR	5903581	Identifier	t		5903537	0					
ANR	5903582	PtrMemberAccess	t -> next		5903537	1					
ANR	5903583	Identifier	t		5903537	0					
ANR	5903584	Identifier	next		5903537	1					
ANR	5903585	ReturnStatement	return 0 ;	323:4:7641:7649	5903537	1	True				
ANR	5903586	PrimaryExpression	0		5903537	0					
ANR	5903587	ReturnType	static inline int		5903537	1					
ANR	5903588	Identifier	check_band_list		5903537	2					
ANR	5903589	ParameterList	const gx_san_trap * list		5903537	3					
ANR	5903590	Parameter	const gx_san_trap * list	310:16:7334:7356	5903537	0	True				
ANR	5903591	ParameterType	const gx_san_trap *		5903537	0					
ANR	5903592	Identifier	list		5903537	1					
ANR	5903593	CFGEntryNode	ENTRY		5903537		True				
ANR	5903594	CFGExitNode	EXIT		5903537		True				
ANR	5903595	Symbol	t -> xrtop		5903537						
ANR	5903596	Symbol	gs_error_unregistered		5903537						
ANR	5903597	Symbol	NULL		5903537						
ANR	5903598	Symbol	t		5903537						
ANR	5903599	Symbol	t -> next		5903537						
ANR	5903600	Symbol	* t -> next		5903537						
ANR	5903601	Symbol	* * t		5903537						
ANR	5903602	Symbol	list		5903537						
ANR	5903603	Symbol	* t		5903537						
ANR	5903604	Symbol	t -> next -> xltop		5903537						
ANR	5903605	Function	try_unite_last_trap	326:0:7654:9358							
ANR	5903606	FunctionDef	"try_unite_last_trap (gx_device_spot_analyzer * padev , fixed xlbot)"		5903605	0					
ANR	5903607	CompoundStatement		328:0:7730:9358	5903605	0					
ANR	5903608	IfStatement	if ( padev -> bot_band != NULL && padev -> top_band != NULL )		5903605	0					
ANR	5903609	Condition	padev -> bot_band != NULL && padev -> top_band != NULL	329:8:7740:7789	5903605	0	True				
ANR	5903610	AndExpression	padev -> bot_band != NULL && padev -> top_band != NULL		5903605	0		&&			
ANR	5903611	EqualityExpression	padev -> bot_band != NULL		5903605	0		!=			
ANR	5903612	PtrMemberAccess	padev -> bot_band		5903605	0					
ANR	5903613	Identifier	padev		5903605	0					
ANR	5903614	Identifier	bot_band		5903605	1					
ANR	5903615	Identifier	NULL		5903605	1					
ANR	5903616	EqualityExpression	padev -> top_band != NULL		5903605	1		!=			
ANR	5903617	PtrMemberAccess	padev -> top_band		5903605	0					
ANR	5903618	Identifier	padev		5903605	0					
ANR	5903619	Identifier	top_band		5903605	1					
ANR	5903620	Identifier	NULL		5903605	1					
ANR	5903621	CompoundStatement		4:8:132:167	5903605	1					
ANR	5903622	IdentifierDeclStatement	gx_san_trap * last = band_list_last ( padev -> top_band ) ;	330:8:7802:7853	5903605	0	True				
ANR	5903623	IdentifierDecl	* last = band_list_last ( padev -> top_band )		5903605	0					
ANR	5903624	IdentifierDeclType	gx_san_trap *		5903605	0					
ANR	5903625	Identifier	last		5903605	1					
ANR	5903626	AssignmentExpression	* last = band_list_last ( padev -> top_band )		5903605	2		=			
ANR	5903627	Identifier	last		5903605	0					
ANR	5903628	CallExpression	band_list_last ( padev -> top_band )		5903605	1					
ANR	5903629	Callee	band_list_last		5903605	0					
ANR	5903630	Identifier	band_list_last		5903605	0					
ANR	5903631	ArgumentList	padev -> top_band		5903605	1					
ANR	5903632	Argument	padev -> top_band		5903605	0					
ANR	5903633	PtrMemberAccess	padev -> top_band		5903605	0					
ANR	5903634	Identifier	padev		5903605	0					
ANR	5903635	Identifier	top_band		5903605	1					
ANR	5903636	IdentifierDeclStatement	gx_san_trap * t = padev -> bot_current ;	331:8:7863:7898	5903605	1	True				
ANR	5903637	IdentifierDecl	* t = padev -> bot_current		5903605	0					
ANR	5903638	IdentifierDeclType	gx_san_trap *		5903605	0					
ANR	5903639	Identifier	t		5903605	1					
ANR	5903640	AssignmentExpression	* t = padev -> bot_current		5903605	2		=			
ANR	5903641	Identifier	t		5903605	0					
ANR	5903642	PtrMemberAccess	padev -> bot_current		5903605	1					
ANR	5903643	Identifier	padev		5903605	0					
ANR	5903644	Identifier	bot_current		5903605	1					
ANR	5903645	IfStatement	if ( t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot ) )		5903605	2					
ANR	5903646	Condition	t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )	334:12:8062:8188	5903605	0	True				
ANR	5903647	AndExpression	t != NULL && t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		5903605	0		&&			
ANR	5903648	EqualityExpression	t != NULL		5903605	0		!=			
ANR	5903649	Identifier	t		5903605	0					
ANR	5903650	Identifier	NULL		5903605	1					
ANR	5903651	AndExpression	t -> upper != NULL && last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		5903605	1		&&			
ANR	5903652	EqualityExpression	t -> upper != NULL		5903605	0		!=			
ANR	5903653	PtrMemberAccess	t -> upper		5903605	0					
ANR	5903654	Identifier	t		5903605	0					
ANR	5903655	Identifier	upper		5903605	1					
ANR	5903656	Identifier	NULL		5903605	1					
ANR	5903657	AndExpression	last -> xrbot < xlbot && ( last -> prev == last || last -> prev -> xrbot < last -> xlbot )		5903605	1		&&			
ANR	5903658	RelationalExpression	last -> xrbot < xlbot		5903605	0		<			
ANR	5903659	PtrMemberAccess	last -> xrbot		5903605	0					
ANR	5903660	Identifier	last		5903605	0					
ANR	5903661	Identifier	xrbot		5903605	1					
ANR	5903662	Identifier	xlbot		5903605	1					
ANR	5903663	OrExpression	last -> prev == last || last -> prev -> xrbot < last -> xlbot		5903605	1		||			
ANR	5903664	EqualityExpression	last -> prev == last		5903605	0		==			
ANR	5903665	PtrMemberAccess	last -> prev		5903605	0					
ANR	5903666	Identifier	last		5903605	0					
ANR	5903667	Identifier	prev		5903605	1					
ANR	5903668	Identifier	last		5903605	1					
ANR	5903669	RelationalExpression	last -> prev -> xrbot < last -> xlbot		5903605	1		<			
ANR	5903670	PtrMemberAccess	last -> prev -> xrbot		5903605	0					
ANR	5903671	PtrMemberAccess	last -> prev		5903605	0					
ANR	5903672	Identifier	last		5903605	0					
ANR	5903673	Identifier	prev		5903605	1					
ANR	5903674	Identifier	xrbot		5903605	1					
ANR	5903675	PtrMemberAccess	last -> xlbot		5903605	1					
ANR	5903676	Identifier	last		5903605	0					
ANR	5903677	Identifier	xlbot		5903605	1					
ANR	5903678	CompoundStatement		8:73:460:460	5903605	1					
ANR	5903679	IfStatement	if ( ( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r ) )		5903605	0					
ANR	5903680	Condition	( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r )	336:16:8209:8360	5903605	0	True				
ANR	5903681	AndExpression	( t -> next == NULL || t -> xrtop < t -> next -> xltop ) && ( t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r )		5903605	0		&&			
ANR	5903682	OrExpression	t -> next == NULL || t -> xrtop < t -> next -> xltop		5903605	0		||			
ANR	5903683	EqualityExpression	t -> next == NULL		5903605	0		==			
ANR	5903684	PtrMemberAccess	t -> next		5903605	0					
ANR	5903685	Identifier	t		5903605	0					
ANR	5903686	Identifier	next		5903605	1					
ANR	5903687	Identifier	NULL		5903605	1					
ANR	5903688	RelationalExpression	t -> xrtop < t -> next -> xltop		5903605	1		<			
ANR	5903689	PtrMemberAccess	t -> xrtop		5903605	0					
ANR	5903690	Identifier	t		5903605	0					
ANR	5903691	Identifier	xrtop		5903605	1					
ANR	5903692	PtrMemberAccess	t -> next -> xltop		5903605	1					
ANR	5903693	PtrMemberAccess	t -> next		5903605	0					
ANR	5903694	Identifier	t		5903605	0					
ANR	5903695	Identifier	next		5903605	1					
ANR	5903696	Identifier	xltop		5903605	1					
ANR	5903697	AndExpression	t -> upper -> next == t -> upper && t -> l == last -> l && t -> r == last -> r		5903605	1		&&			
ANR	5903698	EqualityExpression	t -> upper -> next == t -> upper		5903605	0		==			
ANR	5903699	PtrMemberAccess	t -> upper -> next		5903605	0					
ANR	5903700	PtrMemberAccess	t -> upper		5903605	0					
ANR	5903701	Identifier	t		5903605	0					
ANR	5903702	Identifier	upper		5903605	1					
ANR	5903703	Identifier	next		5903605	1					
ANR	5903704	PtrMemberAccess	t -> upper		5903605	1					
ANR	5903705	Identifier	t		5903605	0					
ANR	5903706	Identifier	upper		5903605	1					
ANR	5903707	AndExpression	t -> l == last -> l && t -> r == last -> r		5903605	1		&&			
ANR	5903708	EqualityExpression	t -> l == last -> l		5903605	0		==			
ANR	5903709	PtrMemberAccess	t -> l		5903605	0					
ANR	5903710	Identifier	t		5903605	0					
ANR	5903711	Identifier	l		5903605	1					
ANR	5903712	PtrMemberAccess	last -> l		5903605	1					
ANR	5903713	Identifier	last		5903605	0					
ANR	5903714	Identifier	l		5903605	1					
ANR	5903715	EqualityExpression	t -> r == last -> r		5903605	1		==			
ANR	5903716	PtrMemberAccess	t -> r		5903605	0					
ANR	5903717	Identifier	t		5903605	0					
ANR	5903718	Identifier	r		5903605	1					
ANR	5903719	PtrMemberAccess	last -> r		5903605	1					
ANR	5903720	Identifier	last		5903605	0					
ANR	5903721	Identifier	r		5903605	1					
ANR	5903722	CompoundStatement		12:16:650:658	5903605	1					
ANR	5903723	IdentifierDeclStatement	int code ;	339:16:8381:8389	5903605	0	True				
ANR	5903724	IdentifierDecl	code		5903605	0					
ANR	5903725	IdentifierDeclType	int		5903605	0					
ANR	5903726	Identifier	code		5903605	1					
ANR	5903727	IfStatement	if ( padev -> bot_current == t )		5903605	1					
ANR	5903728	Condition	padev -> bot_current == t	341:20:8412:8434	5903605	0	True				
ANR	5903729	EqualityExpression	padev -> bot_current == t		5903605	0		==			
ANR	5903730	PtrMemberAccess	padev -> bot_current		5903605	0					
ANR	5903731	Identifier	padev		5903605	0					
ANR	5903732	Identifier	bot_current		5903605	1					
ANR	5903733	Identifier	t		5903605	1					
ANR	5903734	ExpressionStatement	padev -> bot_current = ( t == band_list_last ( padev -> bot_band ) ? NULL : t -> next )	342:20:8457:8533	5903605	1	True				
ANR	5903735	AssignmentExpression	padev -> bot_current = ( t == band_list_last ( padev -> bot_band ) ? NULL : t -> next )		5903605	0		=			
ANR	5903736	PtrMemberAccess	padev -> bot_current		5903605	0					
ANR	5903737	Identifier	padev		5903605	0					
ANR	5903738	Identifier	bot_current		5903605	1					
ANR	5903739	ConditionalExpression	t == band_list_last ( padev -> bot_band ) ? NULL : t -> next		5903605	1					
ANR	5903740	Condition	t == band_list_last ( padev -> bot_band )		5903605	0					
ANR	5903741	EqualityExpression	t == band_list_last ( padev -> bot_band )		5903605	0		==			
ANR	5903742	Identifier	t		5903605	0					
ANR	5903743	CallExpression	band_list_last ( padev -> bot_band )		5903605	1					
ANR	5903744	Callee	band_list_last		5903605	0					
ANR	5903745	Identifier	band_list_last		5903605	0					
ANR	5903746	ArgumentList	padev -> bot_band		5903605	1					
ANR	5903747	Argument	padev -> bot_band		5903605	0					
ANR	5903748	PtrMemberAccess	padev -> bot_band		5903605	0					
ANR	5903749	Identifier	padev		5903605	0					
ANR	5903750	Identifier	bot_band		5903605	1					
ANR	5903751	Identifier	NULL		5903605	1					
ANR	5903752	PtrMemberAccess	t -> next		5903605	2					
ANR	5903753	Identifier	t		5903605	0					
ANR	5903754	Identifier	next		5903605	1					
ANR	5903755	IfStatement	if ( t -> upper -> upper != last )		5903605	2					
ANR	5903756	Condition	t -> upper -> upper != last	343:20:8555:8577	5903605	0	True				
ANR	5903757	EqualityExpression	t -> upper -> upper != last		5903605	0		!=			
ANR	5903758	PtrMemberAccess	t -> upper -> upper		5903605	0					
ANR	5903759	PtrMemberAccess	t -> upper		5903605	0					
ANR	5903760	Identifier	t		5903605	0					
ANR	5903761	Identifier	upper		5903605	1					
ANR	5903762	Identifier	upper		5903605	1					
ANR	5903763	Identifier	last		5903605	1					
ANR	5903764	ExpressionStatement	return_error ( gs_error_unregistered )	344:20:8600:8635	5903605	1	True				
ANR	5903765	CallExpression	return_error ( gs_error_unregistered )		5903605	0					
ANR	5903766	Callee	return_error		5903605	0					
ANR	5903767	Identifier	return_error		5903605	0					
ANR	5903768	ArgumentList	gs_error_unregistered		5903605	1					
ANR	5903769	Argument	gs_error_unregistered		5903605	0					
ANR	5903770	Identifier	gs_error_unregistered		5903605	0					
ANR	5903771	ExpressionStatement	"band_list_remove ( & padev -> top_band , last )"	345:16:8676:8716	5903605	3	True				
ANR	5903772	CallExpression	"band_list_remove ( & padev -> top_band , last )"		5903605	0					
ANR	5903773	Callee	band_list_remove		5903605	0					
ANR	5903774	Identifier	band_list_remove		5903605	0					
ANR	5903775	ArgumentList	& padev -> top_band		5903605	1					
ANR	5903776	Argument	& padev -> top_band		5903605	0					
ANR	5903777	UnaryOperationExpression	& padev -> top_band		5903605	0					
ANR	5903778	UnaryOperator	&		5903605	0					
ANR	5903779	PtrMemberAccess	padev -> top_band		5903605	1					
ANR	5903780	Identifier	padev		5903605	0					
ANR	5903781	Identifier	top_band		5903605	1					
ANR	5903782	Argument	last		5903605	1					
ANR	5903783	Identifier	last		5903605	0					
ANR	5903784	ExpressionStatement	"band_list_remove ( & padev -> bot_band , t )"	346:16:8734:8771	5903605	4	True				
ANR	5903785	CallExpression	"band_list_remove ( & padev -> bot_band , t )"		5903605	0					
ANR	5903786	Callee	band_list_remove		5903605	0					
ANR	5903787	Identifier	band_list_remove		5903605	0					
ANR	5903788	ArgumentList	& padev -> bot_band		5903605	1					
ANR	5903789	Argument	& padev -> bot_band		5903605	0					
ANR	5903790	UnaryOperationExpression	& padev -> bot_band		5903605	0					
ANR	5903791	UnaryOperator	&		5903605	0					
ANR	5903792	PtrMemberAccess	padev -> bot_band		5903605	1					
ANR	5903793	Identifier	padev		5903605	0					
ANR	5903794	Identifier	bot_band		5903605	1					
ANR	5903795	Argument	t		5903605	1					
ANR	5903796	Identifier	t		5903605	0					
ANR	5903797	ExpressionStatement	"band_list_insert_last ( & padev -> top_band , t )"	347:16:8789:8831	5903605	5	True				
ANR	5903798	CallExpression	"band_list_insert_last ( & padev -> top_band , t )"		5903605	0					
ANR	5903799	Callee	band_list_insert_last		5903605	0					
ANR	5903800	Identifier	band_list_insert_last		5903605	0					
ANR	5903801	ArgumentList	& padev -> top_band		5903605	1					
ANR	5903802	Argument	& padev -> top_band		5903605	0					
ANR	5903803	UnaryOperationExpression	& padev -> top_band		5903605	0					
ANR	5903804	UnaryOperator	&		5903605	0					
ANR	5903805	PtrMemberAccess	padev -> top_band		5903605	1					
ANR	5903806	Identifier	padev		5903605	0					
ANR	5903807	Identifier	top_band		5903605	1					
ANR	5903808	Argument	t		5903605	1					
ANR	5903809	Identifier	t		5903605	0					
ANR	5903810	ExpressionStatement	t -> ytop = last -> ytop	348:16:8849:8869	5903605	6	True				
ANR	5903811	AssignmentExpression	t -> ytop = last -> ytop		5903605	0		=			
ANR	5903812	PtrMemberAccess	t -> ytop		5903605	0					
ANR	5903813	Identifier	t		5903605	0					
ANR	5903814	Identifier	ytop		5903605	1					
ANR	5903815	PtrMemberAccess	last -> ytop		5903605	1					
ANR	5903816	Identifier	last		5903605	0					
ANR	5903817	Identifier	ytop		5903605	1					
ANR	5903818	ExpressionStatement	t -> xltop = last -> xltop	349:16:8887:8909	5903605	7	True				
ANR	5903819	AssignmentExpression	t -> xltop = last -> xltop		5903605	0		=			
ANR	5903820	PtrMemberAccess	t -> xltop		5903605	0					
ANR	5903821	Identifier	t		5903605	0					
ANR	5903822	Identifier	xltop		5903605	1					
ANR	5903823	PtrMemberAccess	last -> xltop		5903605	1					
ANR	5903824	Identifier	last		5903605	0					
ANR	5903825	Identifier	xltop		5903605	1					
ANR	5903826	ExpressionStatement	t -> xrtop = last -> xrtop	350:16:8927:8949	5903605	8	True				
ANR	5903827	AssignmentExpression	t -> xrtop = last -> xrtop		5903605	0		=			
ANR	5903828	PtrMemberAccess	t -> xrtop		5903605	0					
ANR	5903829	Identifier	t		5903605	0					
ANR	5903830	Identifier	xrtop		5903605	1					
ANR	5903831	PtrMemberAccess	last -> xrtop		5903605	1					
ANR	5903832	Identifier	last		5903605	0					
ANR	5903833	Identifier	xrtop		5903605	1					
ANR	5903834	ExpressionStatement	t -> rightmost &= last -> rightmost	351:16:8967:8998	5903605	9	True				
ANR	5903835	AssignmentExpression	t -> rightmost &= last -> rightmost		5903605	0		&=			
ANR	5903836	PtrMemberAccess	t -> rightmost		5903605	0					
ANR	5903837	Identifier	t		5903605	0					
ANR	5903838	Identifier	rightmost		5903605	1					
ANR	5903839	PtrMemberAccess	last -> rightmost		5903605	1					
ANR	5903840	Identifier	last		5903605	0					
ANR	5903841	Identifier	rightmost		5903605	1					
ANR	5903842	ExpressionStatement	t -> leftmost &= last -> leftmost	352:16:9016:9045	5903605	10	True				
ANR	5903843	AssignmentExpression	t -> leftmost &= last -> leftmost		5903605	0		&=			
ANR	5903844	PtrMemberAccess	t -> leftmost		5903605	0					
ANR	5903845	Identifier	t		5903605	0					
ANR	5903846	Identifier	leftmost		5903605	1					
ANR	5903847	PtrMemberAccess	last -> leftmost		5903605	1					
ANR	5903848	Identifier	last		5903605	0					
ANR	5903849	Identifier	leftmost		5903605	1					
ANR	5903850	ExpressionStatement	"code = trap_unreserve ( padev , last )"	353:16:9063:9097	5903605	11	True				
ANR	5903851	AssignmentExpression	"code = trap_unreserve ( padev , last )"		5903605	0		=			
ANR	5903852	Identifier	code		5903605	0					
ANR	5903853	CallExpression	"trap_unreserve ( padev , last )"		5903605	1					
ANR	5903854	Callee	trap_unreserve		5903605	0					
ANR	5903855	Identifier	trap_unreserve		5903605	0					
ANR	5903856	ArgumentList	padev		5903605	1					
ANR	5903857	Argument	padev		5903605	0					
ANR	5903858	Identifier	padev		5903605	0					
ANR	5903859	Argument	last		5903605	1					
ANR	5903860	Identifier	last		5903605	0					
ANR	5903861	IfStatement	if ( code < 0 )		5903605	12					
ANR	5903862	Condition	code < 0	354:20:9119:9126	5903605	0	True				
ANR	5903863	RelationalExpression	code < 0		5903605	0		<			
ANR	5903864	Identifier	code		5903605	0					
ANR	5903865	PrimaryExpression	0		5903605	1					
ANR	5903866	ReturnStatement	return code ;	355:20:9149:9160	5903605	1	True				
ANR	5903867	Identifier	code		5903605	0					
ANR	5903868	ExpressionStatement	"code = cont_unreserve ( padev , t -> upper )"	356:16:9178:9216	5903605	13	True				
ANR	5903869	AssignmentExpression	"code = cont_unreserve ( padev , t -> upper )"		5903605	0		=			
ANR	5903870	Identifier	code		5903605	0					
ANR	5903871	CallExpression	"cont_unreserve ( padev , t -> upper )"		5903605	1					
ANR	5903872	Callee	cont_unreserve		5903605	0					
ANR	5903873	Identifier	cont_unreserve		5903605	0					
ANR	5903874	ArgumentList	padev		5903605	1					
ANR	5903875	Argument	padev		5903605	0					
ANR	5903876	Identifier	padev		5903605	0					
ANR	5903877	Argument	t -> upper		5903605	1					
ANR	5903878	PtrMemberAccess	t -> upper		5903605	0					
ANR	5903879	Identifier	t		5903605	0					
ANR	5903880	Identifier	upper		5903605	1					
ANR	5903881	IfStatement	if ( code < 0 )		5903605	14					
ANR	5903882	Condition	code < 0	357:20:9238:9245	5903605	0	True				
ANR	5903883	RelationalExpression	code < 0		5903605	0		<			
ANR	5903884	Identifier	code		5903605	0					
ANR	5903885	PrimaryExpression	0		5903605	1					
ANR	5903886	ReturnStatement	return code ;	358:20:9268:9279	5903605	1	True				
ANR	5903887	Identifier	code		5903605	0					
ANR	5903888	ExpressionStatement	t -> upper = NULL	359:16:9297:9312	5903605	15	True				
ANR	5903889	AssignmentExpression	t -> upper = NULL		5903605	0		=			
ANR	5903890	PtrMemberAccess	t -> upper		5903605	0					
ANR	5903891	Identifier	t		5903605	0					
ANR	5903892	Identifier	upper		5903605	1					
ANR	5903893	Identifier	NULL		5903605	1					
ANR	5903894	ReturnStatement	return 0 ;	363:4:9348:9356	5903605	1	True				
ANR	5903895	PrimaryExpression	0		5903605	0					
ANR	5903896	ReturnType	static int		5903605	1					
ANR	5903897	Identifier	try_unite_last_trap		5903605	2					
ANR	5903898	ParameterList	"gx_device_spot_analyzer * padev , fixed xlbot"		5903605	3					
ANR	5903899	Parameter	gx_device_spot_analyzer * padev	327:20:7685:7714	5903605	0	True				
ANR	5903900	ParameterType	gx_device_spot_analyzer *		5903605	0					
ANR	5903901	Identifier	padev		5903605	1					
ANR	5903902	Parameter	fixed xlbot	327:52:7717:7727	5903605	1	True				
ANR	5903903	ParameterType	fixed		5903605	0					
ANR	5903904	Identifier	xlbot		5903605	1					
ANR	5903905	CFGEntryNode	ENTRY		5903605		True				
ANR	5903906	CFGExitNode	EXIT		5903605		True				
ANR	5903907	Symbol	t -> xrtop		5903605						
ANR	5903908	Symbol	cont_unreserve		5903605						
ANR	5903909	Symbol	last -> xrbot		5903605						
ANR	5903910	Symbol	gs_error_unregistered		5903605						
ANR	5903911	Symbol	& padev -> top_band		5903605						
ANR	5903912	Symbol	last -> prev		5903605						
ANR	5903913	Symbol	code		5903605						
ANR	5903914	Symbol	padev -> top_band		5903605						
ANR	5903915	Symbol	last -> prev -> xrbot		5903605						
ANR	5903916	Symbol	last -> xlbot		5903605						
ANR	5903917	Symbol	t -> xltop		5903605						
ANR	5903918	Symbol	* last -> prev		5903605						
ANR	5903919	Symbol	t -> upper -> next		5903605						
ANR	5903920	Symbol	trap_unreserve		5903605						
ANR	5903921	Symbol	padev		5903605						
ANR	5903922	Symbol	last -> xltop		5903605						
ANR	5903923	Symbol	last -> rightmost		5903605						
ANR	5903924	Symbol	* * t		5903605						
ANR	5903925	Symbol	* * last		5903605						
ANR	5903926	Symbol	last -> xrtop		5903605						
ANR	5903927	Symbol	xlbot		5903605						
ANR	5903928	Symbol	t -> upper -> upper		5903605						
ANR	5903929	Symbol	last -> l		5903605						
ANR	5903930	Symbol	NULL		5903605						
ANR	5903931	Symbol	t -> l		5903605						
ANR	5903932	Symbol	last		5903605						
ANR	5903933	Symbol	t -> r		5903605						
ANR	5903934	Symbol	last -> r		5903605						
ANR	5903935	Symbol	last -> leftmost		5903605						
ANR	5903936	Symbol	t -> rightmost		5903605						
ANR	5903937	Symbol	* last		5903605						
ANR	5903938	Symbol	padev -> bot_band		5903605						
ANR	5903939	Symbol	band_list_last		5903605						
ANR	5903940	Symbol	t -> upper		5903605						
ANR	5903941	Symbol	t		5903605						
ANR	5903942	Symbol	t -> next		5903605						
ANR	5903943	Symbol	* padev		5903605						
ANR	5903944	Symbol	* t -> next		5903605						
ANR	5903945	Symbol	t -> ytop		5903605						
ANR	5903946	Symbol	padev -> bot_current		5903605						
ANR	5903947	Symbol	t -> leftmost		5903605						
ANR	5903948	Symbol	* t -> upper		5903605						
ANR	5903949	Symbol	* t		5903605						
ANR	5903950	Symbol	last -> ytop		5903605						
ANR	5903951	Symbol	t -> next -> xltop		5903605						
ANR	5903952	Symbol	& padev -> bot_band		5903605						
ANR	5903953	Function	trap_area	366:0:9361:9500							
ANR	5903954	FunctionDef	trap_area (gx_san_trap * t)		5903953	0					
ANR	5903955	CompoundStatement		368:0:9408:9500	5903953	0					
ANR	5903956	ReturnStatement	return ( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop ) * ( t -> ytop - t -> ybot ) / 2 ;	369:4:9414:9498	5903953	0	True				
ANR	5903957	MultiplicativeExpression	( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop ) * ( t -> ytop - t -> ybot ) / 2		5903953	0		*			
ANR	5903958	CastExpression	( double ) ( t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop )		5903953	0					
ANR	5903959	CastTarget	double		5903953	0					
ANR	5903960	AdditiveExpression	t -> xrbot - t -> xlbot + t -> xrtop - t -> xltop		5903953	1		-			
ANR	5903961	PtrMemberAccess	t -> xrbot		5903953	0					
ANR	5903962	Identifier	t		5903953	0					
ANR	5903963	Identifier	xrbot		5903953	1					
ANR	5903964	AdditiveExpression	t -> xlbot + t -> xrtop - t -> xltop		5903953	1		+			
ANR	5903965	PtrMemberAccess	t -> xlbot		5903953	0					
ANR	5903966	Identifier	t		5903953	0					
ANR	5903967	Identifier	xlbot		5903953	1					
ANR	5903968	AdditiveExpression	t -> xrtop - t -> xltop		5903953	1		-			
ANR	5903969	PtrMemberAccess	t -> xrtop		5903953	0					
ANR	5903970	Identifier	t		5903953	0					
ANR	5903971	Identifier	xrtop		5903953	1					
ANR	5903972	PtrMemberAccess	t -> xltop		5903953	1					
ANR	5903973	Identifier	t		5903953	0					
ANR	5903974	Identifier	xltop		5903953	1					
ANR	5903975	MultiplicativeExpression	( t -> ytop - t -> ybot ) / 2		5903953	1		/			
ANR	5903976	AdditiveExpression	t -> ytop - t -> ybot		5903953	0		-			
ANR	5903977	PtrMemberAccess	t -> ytop		5903953	0					
ANR	5903978	Identifier	t		5903953	0					
ANR	5903979	Identifier	ytop		5903953	1					
ANR	5903980	PtrMemberAccess	t -> ybot		5903953	1					
ANR	5903981	Identifier	t		5903953	0					
ANR	5903982	Identifier	ybot		5903953	1					
ANR	5903983	PrimaryExpression	2		5903953	1					
ANR	5903984	ReturnType	static inline double		5903953	1					
ANR	5903985	Identifier	trap_area		5903953	2					
ANR	5903986	ParameterList	gx_san_trap * t		5903953	3					
ANR	5903987	Parameter	gx_san_trap * t	367:10:9392:9405	5903953	0	True				
ANR	5903988	ParameterType	gx_san_trap *		5903953	0					
ANR	5903989	Identifier	t		5903953	1					
ANR	5903990	CFGEntryNode	ENTRY		5903953		True				
ANR	5903991	CFGExitNode	EXIT		5903953		True				
ANR	5903992	Symbol	t -> xrtop		5903953						
ANR	5903993	Symbol	t		5903953						
ANR	5903994	Symbol	t -> xlbot		5903953						
ANR	5903995	Symbol	t -> ytop		5903953						
ANR	5903996	Symbol	t -> ybot		5903953						
ANR	5903997	Symbol	t -> xltop		5903953						
ANR	5903998	Symbol	t -> xrbot		5903953						
ANR	5903999	Symbol	* t		5903953						
ANR	5904000	Function	trap_axis_length	372:0:9503:9733							
ANR	5904001	FunctionDef	trap_axis_length (gx_san_trap * t)		5904000	0					
ANR	5904002	CompoundStatement		374:0:9557:9733	5904000	0					
ANR	5904003	IdentifierDeclStatement	double xbot = ( t -> xlbot + t -> xrbot ) / 2.0 ;	375:4:9563:9604	5904000	0	True				
ANR	5904004	IdentifierDecl	xbot = ( t -> xlbot + t -> xrbot ) / 2.0		5904000	0					
ANR	5904005	IdentifierDeclType	double		5904000	0					
ANR	5904006	Identifier	xbot		5904000	1					
ANR	5904007	AssignmentExpression	xbot = ( t -> xlbot + t -> xrbot ) / 2.0		5904000	2		=			
ANR	5904008	Identifier	xbot		5904000	0					
ANR	5904009	MultiplicativeExpression	( t -> xlbot + t -> xrbot ) / 2.0		5904000	1		/			
ANR	5904010	AdditiveExpression	t -> xlbot + t -> xrbot		5904000	0		+			
ANR	5904011	PtrMemberAccess	t -> xlbot		5904000	0					
ANR	5904012	Identifier	t		5904000	0					
ANR	5904013	Identifier	xlbot		5904000	1					
ANR	5904014	PtrMemberAccess	t -> xrbot		5904000	1					
ANR	5904015	Identifier	t		5904000	0					
ANR	5904016	Identifier	xrbot		5904000	1					
ANR	5904017	PrimaryExpression	2.0		5904000	1					
ANR	5904018	IdentifierDeclStatement	double xtop = ( t -> xltop + t -> xrtop ) / 2.0 ;	376:4:9610:9651	5904000	1	True				
ANR	5904019	IdentifierDecl	xtop = ( t -> xltop + t -> xrtop ) / 2.0		5904000	0					
ANR	5904020	IdentifierDeclType	double		5904000	0					
ANR	5904021	Identifier	xtop		5904000	1					
ANR	5904022	AssignmentExpression	xtop = ( t -> xltop + t -> xrtop ) / 2.0		5904000	2		=			
ANR	5904023	Identifier	xtop		5904000	0					
ANR	5904024	MultiplicativeExpression	( t -> xltop + t -> xrtop ) / 2.0		5904000	1		/			
ANR	5904025	AdditiveExpression	t -> xltop + t -> xrtop		5904000	0		+			
ANR	5904026	PtrMemberAccess	t -> xltop		5904000	0					
ANR	5904027	Identifier	t		5904000	0					
ANR	5904028	Identifier	xltop		5904000	1					
ANR	5904029	PtrMemberAccess	t -> xrtop		5904000	1					
ANR	5904030	Identifier	t		5904000	0					
ANR	5904031	Identifier	xrtop		5904000	1					
ANR	5904032	PrimaryExpression	2.0		5904000	1					
ANR	5904033	ReturnStatement	"return hypot ( xtop - xbot , ( double ) t -> ytop - t -> ybot ) ;"	378:4:9658:9710	5904000	2	True				
ANR	5904034	CallExpression	"hypot ( xtop - xbot , ( double ) t -> ytop - t -> ybot )"		5904000	0					
ANR	5904035	Callee	hypot		5904000	0					
ANR	5904036	Identifier	hypot		5904000	0					
ANR	5904037	ArgumentList	xtop - xbot		5904000	1					
ANR	5904038	Argument	xtop - xbot		5904000	0					
ANR	5904039	AdditiveExpression	xtop - xbot		5904000	0		-			
ANR	5904040	Identifier	xtop		5904000	0					
ANR	5904041	Identifier	xbot		5904000	1					
ANR	5904042	Argument	( double ) t -> ytop - t -> ybot		5904000	1					
ANR	5904043	AdditiveExpression	( double ) t -> ytop - t -> ybot		5904000	0		-			
ANR	5904044	CastExpression	( double ) t -> ytop		5904000	0					
ANR	5904045	CastTarget	double		5904000	0					
ANR	5904046	PtrMemberAccess	t -> ytop		5904000	1					
ANR	5904047	Identifier	t		5904000	0					
ANR	5904048	Identifier	ytop		5904000	1					
ANR	5904049	PtrMemberAccess	t -> ybot		5904000	1					
ANR	5904050	Identifier	t		5904000	0					
ANR	5904051	Identifier	ybot		5904000	1					
ANR	5904052	ReturnType	static inline double		5904000	1					
ANR	5904053	Identifier	trap_axis_length		5904000	2					
ANR	5904054	ParameterList	gx_san_trap * t		5904000	3					
ANR	5904055	Parameter	gx_san_trap * t	373:17:9541:9554	5904000	0	True				
ANR	5904056	ParameterType	gx_san_trap *		5904000	0					
ANR	5904057	Identifier	t		5904000	1					
ANR	5904058	CFGEntryNode	ENTRY		5904000		True				
ANR	5904059	CFGExitNode	EXIT		5904000		True				
ANR	5904060	Symbol	t -> xrtop		5904000						
ANR	5904061	Symbol	t		5904000						
ANR	5904062	Symbol	t -> xlbot		5904000						
ANR	5904063	Symbol	xtop		5904000						
ANR	5904064	Symbol	hypot		5904000						
ANR	5904065	Symbol	xbot		5904000						
ANR	5904066	Symbol	t -> ytop		5904000						
ANR	5904067	Symbol	t -> ybot		5904000						
ANR	5904068	Symbol	t -> xltop		5904000						
ANR	5904069	Symbol	t -> xrbot		5904000						
ANR	5904070	Symbol	* t		5904000						
ANR	5904071	Function	is_stem_boundaries	381:0:9736:10340							
ANR	5904072	FunctionDef	"is_stem_boundaries (gx_san_trap * t , int side_mask)"		5904071	0					
ANR	5904073	CompoundStatement		383:0:9805:10340	5904071	0					
ANR	5904074	IdentifierDeclStatement	"double dx , norm , cosine ;"	384:4:9811:9834	5904071	0	True				
ANR	5904075	IdentifierDecl	dx		5904071	0					
ANR	5904076	IdentifierDeclType	double		5904071	0					
ANR	5904077	Identifier	dx		5904071	1					
ANR	5904078	IdentifierDecl	norm		5904071	1					
ANR	5904079	IdentifierDeclType	double		5904071	0					
ANR	5904080	Identifier	norm		5904071	1					
ANR	5904081	IdentifierDecl	cosine		5904071	2					
ANR	5904082	IdentifierDeclType	double		5904071	0					
ANR	5904083	Identifier	cosine		5904071	1					
ANR	5904084	IdentifierDeclStatement	const double cosine_threshold = 0.9 ;	385:4:9840:9875	5904071	1	True				
ANR	5904085	IdentifierDecl	cosine_threshold = 0.9		5904071	0					
ANR	5904086	IdentifierDeclType	const double		5904071	0					
ANR	5904087	Identifier	cosine_threshold		5904071	1					
ANR	5904088	AssignmentExpression	cosine_threshold = 0.9		5904071	2		=			
ANR	5904089	Identifier	cosine_threshold		5904071	0					
ANR	5904090	PrimaryExpression	0.9		5904071	1					
ANR	5904091	IdentifierDeclStatement	double dy = t -> ytop - t -> ybot ;	386:4:9897:9926	5904071	2	True				
ANR	5904092	IdentifierDecl	dy = t -> ytop - t -> ybot		5904071	0					
ANR	5904093	IdentifierDeclType	double		5904071	0					
ANR	5904094	Identifier	dy		5904071	1					
ANR	5904095	AssignmentExpression	dy = t -> ytop - t -> ybot		5904071	2		=			
ANR	5904096	Identifier	dy		5904071	0					
ANR	5904097	AdditiveExpression	t -> ytop - t -> ybot		5904071	1		-			
ANR	5904098	PtrMemberAccess	t -> ytop		5904071	0					
ANR	5904099	Identifier	t		5904071	0					
ANR	5904100	Identifier	ytop		5904071	1					
ANR	5904101	PtrMemberAccess	t -> ybot		5904071	1					
ANR	5904102	Identifier	t		5904071	0					
ANR	5904103	Identifier	ybot		5904071	1					
ANR	5904104	IfStatement	if ( side_mask & 1 )		5904071	3					
ANR	5904105	Condition	side_mask & 1	388:8:9937:9949	5904071	0	True				
ANR	5904106	BitAndExpression	side_mask & 1		5904071	0		&			
ANR	5904107	Identifier	side_mask		5904071	0					
ANR	5904108	PrimaryExpression	1		5904071	1					
ANR	5904109	CompoundStatement		6:23:146:146	5904071	1					
ANR	5904110	ExpressionStatement	dx = t -> xltop - t -> xlbot	389:8:9962:9986	5904071	0	True				
ANR	5904111	AssignmentExpression	dx = t -> xltop - t -> xlbot		5904071	0		=			
ANR	5904112	Identifier	dx		5904071	0					
ANR	5904113	AdditiveExpression	t -> xltop - t -> xlbot		5904071	1		-			
ANR	5904114	PtrMemberAccess	t -> xltop		5904071	0					
ANR	5904115	Identifier	t		5904071	0					
ANR	5904116	Identifier	xltop		5904071	1					
ANR	5904117	PtrMemberAccess	t -> xlbot		5904071	1					
ANR	5904118	Identifier	t		5904071	0					
ANR	5904119	Identifier	xlbot		5904071	1					
ANR	5904120	ExpressionStatement	"norm = hypot ( dx , dy )"	390:8:9996:10016	5904071	1	True				
ANR	5904121	AssignmentExpression	"norm = hypot ( dx , dy )"		5904071	0		=			
ANR	5904122	Identifier	norm		5904071	0					
ANR	5904123	CallExpression	"hypot ( dx , dy )"		5904071	1					
ANR	5904124	Callee	hypot		5904071	0					
ANR	5904125	Identifier	hypot		5904071	0					
ANR	5904126	ArgumentList	dx		5904071	1					
ANR	5904127	Argument	dx		5904071	0					
ANR	5904128	Identifier	dx		5904071	0					
ANR	5904129	Argument	dy		5904071	1					
ANR	5904130	Identifier	dy		5904071	0					
ANR	5904131	ExpressionStatement	cosine = dx / norm	391:8:10026:10044	5904071	2	True				
ANR	5904132	AssignmentExpression	cosine = dx / norm		5904071	0		=			
ANR	5904133	Identifier	cosine		5904071	0					
ANR	5904134	MultiplicativeExpression	dx / norm		5904071	1		/			
ANR	5904135	Identifier	dx		5904071	0					
ANR	5904136	Identifier	norm		5904071	1					
ANR	5904137	IfStatement	if ( any_abs ( cosine ) > cosine_threshold )		5904071	3					
ANR	5904138	Condition	any_abs ( cosine ) > cosine_threshold	392:12:10058:10091	5904071	0	True				
ANR	5904139	RelationalExpression	any_abs ( cosine ) > cosine_threshold		5904071	0		>			
ANR	5904140	CallExpression	any_abs ( cosine )		5904071	0					
ANR	5904141	Callee	any_abs		5904071	0					
ANR	5904142	Identifier	any_abs		5904071	0					
ANR	5904143	ArgumentList	cosine		5904071	1					
ANR	5904144	Argument	cosine		5904071	0					
ANR	5904145	Identifier	cosine		5904071	0					
ANR	5904146	Identifier	cosine_threshold		5904071	1					
ANR	5904147	ReturnStatement	return false ;	393:12:10106:10118	5904071	1	True				
ANR	5904148	Identifier	false		5904071	0					
ANR	5904149	IfStatement	if ( side_mask & 2 )		5904071	4					
ANR	5904150	Condition	side_mask & 2	395:8:10134:10146	5904071	0	True				
ANR	5904151	BitAndExpression	side_mask & 2		5904071	0		&			
ANR	5904152	Identifier	side_mask		5904071	0					
ANR	5904153	PrimaryExpression	2		5904071	1					
ANR	5904154	CompoundStatement		13:23:343:343	5904071	1					
ANR	5904155	ExpressionStatement	dx = t -> xrtop - t -> xrbot	396:8:10159:10183	5904071	0	True				
ANR	5904156	AssignmentExpression	dx = t -> xrtop - t -> xrbot		5904071	0		=			
ANR	5904157	Identifier	dx		5904071	0					
ANR	5904158	AdditiveExpression	t -> xrtop - t -> xrbot		5904071	1		-			
ANR	5904159	PtrMemberAccess	t -> xrtop		5904071	0					
ANR	5904160	Identifier	t		5904071	0					
ANR	5904161	Identifier	xrtop		5904071	1					
ANR	5904162	PtrMemberAccess	t -> xrbot		5904071	1					
ANR	5904163	Identifier	t		5904071	0					
ANR	5904164	Identifier	xrbot		5904071	1					
ANR	5904165	ExpressionStatement	"norm = hypot ( dx , dy )"	397:8:10193:10213	5904071	1	True				
ANR	5904166	AssignmentExpression	"norm = hypot ( dx , dy )"		5904071	0		=			
ANR	5904167	Identifier	norm		5904071	0					
ANR	5904168	CallExpression	"hypot ( dx , dy )"		5904071	1					
ANR	5904169	Callee	hypot		5904071	0					
ANR	5904170	Identifier	hypot		5904071	0					
ANR	5904171	ArgumentList	dx		5904071	1					
ANR	5904172	Argument	dx		5904071	0					
ANR	5904173	Identifier	dx		5904071	0					
ANR	5904174	Argument	dy		5904071	1					
ANR	5904175	Identifier	dy		5904071	0					
ANR	5904176	ExpressionStatement	cosine = dx / norm	398:8:10223:10241	5904071	2	True				
ANR	5904177	AssignmentExpression	cosine = dx / norm		5904071	0		=			
ANR	5904178	Identifier	cosine		5904071	0					
ANR	5904179	MultiplicativeExpression	dx / norm		5904071	1		/			
ANR	5904180	Identifier	dx		5904071	0					
ANR	5904181	Identifier	norm		5904071	1					
ANR	5904182	IfStatement	if ( any_abs ( cosine ) > cosine_threshold )		5904071	3					
ANR	5904183	Condition	any_abs ( cosine ) > cosine_threshold	399:12:10255:10288	5904071	0	True				
ANR	5904184	RelationalExpression	any_abs ( cosine ) > cosine_threshold		5904071	0		>			
ANR	5904185	CallExpression	any_abs ( cosine )		5904071	0					
ANR	5904186	Callee	any_abs		5904071	0					
ANR	5904187	Identifier	any_abs		5904071	0					
ANR	5904188	ArgumentList	cosine		5904071	1					
ANR	5904189	Argument	cosine		5904071	0					
ANR	5904190	Identifier	cosine		5904071	0					
ANR	5904191	Identifier	cosine_threshold		5904071	1					
ANR	5904192	ReturnStatement	return false ;	400:12:10303:10315	5904071	1	True				
ANR	5904193	Identifier	false		5904071	0					
ANR	5904194	ReturnStatement	return true ;	402:4:10327:10338	5904071	5	True				
ANR	5904195	Identifier	true		5904071	0					
ANR	5904196	ReturnType	static inline bool		5904071	1					
ANR	5904197	Identifier	is_stem_boundaries		5904071	2					
ANR	5904198	ParameterList	"gx_san_trap * t , int side_mask"		5904071	3					
ANR	5904199	Parameter	gx_san_trap * t	382:19:9774:9787	5904071	0	True				
ANR	5904200	ParameterType	gx_san_trap *		5904071	0					
ANR	5904201	Identifier	t		5904071	1					
ANR	5904202	Parameter	int side_mask	382:35:9790:9802	5904071	1	True				
ANR	5904203	ParameterType	int		5904071	0					
ANR	5904204	Identifier	side_mask		5904071	1					
ANR	5904205	CFGEntryNode	ENTRY		5904071		True				
ANR	5904206	CFGExitNode	EXIT		5904071		True				
ANR	5904207	Symbol	t -> xrtop		5904071						
ANR	5904208	Symbol	t -> xlbot		5904071						
ANR	5904209	Symbol	false		5904071						
ANR	5904210	Symbol	t -> xltop		5904071						
ANR	5904211	Symbol	norm		5904071						
ANR	5904212	Symbol	t		5904071						
ANR	5904213	Symbol	dx		5904071						
ANR	5904214	Symbol	dy		5904071						
ANR	5904215	Symbol	hypot		5904071						
ANR	5904216	Symbol	t -> ytop		5904071						
ANR	5904217	Symbol	cosine		5904071						
ANR	5904218	Symbol	cosine_threshold		5904071						
ANR	5904219	Symbol	any_abs		5904071						
ANR	5904220	Symbol	true		5904071						
ANR	5904221	Symbol	t -> ybot		5904071						
ANR	5904222	Symbol	side_mask		5904071						
ANR	5904223	Symbol	t -> xrbot		5904071						
ANR	5904224	Symbol	* t		5904071						
ANR	5904225	Function	gx_san__obtain	408:0:10447:11144							
ANR	5904226	FunctionDef	"gx_san__obtain (gs_memory_t * mem , gx_device_spot_analyzer * * ppadev)"		5904225	0					
ANR	5904227	CompoundStatement		410:0:10518:11144	5904225	0					
ANR	5904228	IdentifierDeclStatement	gx_device_spot_analyzer * padev ;	411:4:10524:10554	5904225	0	True				
ANR	5904229	IdentifierDecl	* padev		5904225	0					
ANR	5904230	IdentifierDeclType	gx_device_spot_analyzer *		5904225	0					
ANR	5904231	Identifier	padev		5904225	1					
ANR	5904232	IdentifierDeclStatement	int code ;	412:4:10560:10568	5904225	1	True				
ANR	5904233	IdentifierDecl	code		5904225	0					
ANR	5904234	IdentifierDeclType	int		5904225	0					
ANR	5904235	Identifier	code		5904225	1					
ANR	5904236	IfStatement	if ( * ppadev != 0 )		5904225	2					
ANR	5904237	Condition	* ppadev != 0	414:8:10579:10590	5904225	0	True				
ANR	5904238	EqualityExpression	* ppadev != 0		5904225	0		!=			
ANR	5904239	UnaryOperationExpression	* ppadev		5904225	0					
ANR	5904240	UnaryOperator	*		5904225	0					
ANR	5904241	Identifier	ppadev		5904225	1					
ANR	5904242	PrimaryExpression	0		5904225	1					
ANR	5904243	CompoundStatement		5:22:74:74	5904225	1					
ANR	5904244	ExpressionStatement	( * ppadev ) -> lock ++	415:8:10603:10620	5904225	0	True				
ANR	5904245	PostIncDecOperationExpression	( * ppadev ) -> lock ++		5904225	0					
ANR	5904246	PtrMemberAccess	( * ppadev ) -> lock		5904225	0					
ANR	5904247	UnaryOperationExpression	* ppadev		5904225	0					
ANR	5904248	UnaryOperator	*		5904225	0					
ANR	5904249	Identifier	ppadev		5904225	1					
ANR	5904250	Identifier	lock		5904225	1					
ANR	5904251	IncDec	++		5904225	1					
ANR	5904252	ReturnStatement	return 0 ;	416:8:10630:10638	5904225	1	True				
ANR	5904253	PrimaryExpression	0		5904225	0					
ANR	5904254	ExpressionStatement	"padev = gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"	418:4:10650:10763	5904225	3	True				
ANR	5904255	AssignmentExpression	"padev = gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"		5904225	0		=			
ANR	5904256	Identifier	padev		5904225	0					
ANR	5904257	CallExpression	"gs_alloc_struct ( mem , gx_device_spot_analyzer , & st_device_spot_analyzer , ""gx_san__obtain"" )"		5904225	1					
ANR	5904258	Callee	gs_alloc_struct		5904225	0					
ANR	5904259	Identifier	gs_alloc_struct		5904225	0					
ANR	5904260	ArgumentList	mem		5904225	1					
ANR	5904261	Argument	mem		5904225	0					
ANR	5904262	Identifier	mem		5904225	0					
ANR	5904263	Argument	gx_device_spot_analyzer		5904225	1					
ANR	5904264	Identifier	gx_device_spot_analyzer		5904225	0					
ANR	5904265	Argument	& st_device_spot_analyzer		5904225	2					
ANR	5904266	UnaryOperationExpression	& st_device_spot_analyzer		5904225	0					
ANR	5904267	UnaryOperator	&		5904225	0					
ANR	5904268	Identifier	st_device_spot_analyzer		5904225	1					
ANR	5904269	Argument	"""gx_san__obtain"""		5904225	3					
ANR	5904270	PrimaryExpression	"""gx_san__obtain"""		5904225	0					
ANR	5904271	IfStatement	if ( padev == 0 )		5904225	4					
ANR	5904272	Condition	padev == 0	420:8:10773:10782	5904225	0	True				
ANR	5904273	EqualityExpression	padev == 0		5904225	0		==			
ANR	5904274	Identifier	padev		5904225	0					
ANR	5904275	PrimaryExpression	0		5904225	1					
ANR	5904276	ExpressionStatement	return_error ( gs_error_VMerror )	421:8:10793:10823	5904225	1	True				
ANR	5904277	CallExpression	return_error ( gs_error_VMerror )		5904225	0					
ANR	5904278	Callee	return_error		5904225	0					
ANR	5904279	Identifier	return_error		5904225	0					
ANR	5904280	ArgumentList	gs_error_VMerror		5904225	1					
ANR	5904281	Argument	gs_error_VMerror		5904225	0					
ANR	5904282	Identifier	gs_error_VMerror		5904225	0					
ANR	5904283	ExpressionStatement	"gx_device_init ( ( gx_device * ) padev , ( const gx_device * ) & gx_spot_analyzer_device , mem , false )"	422:4:10829:10939	5904225	5	True				
ANR	5904284	CallExpression	"gx_device_init ( ( gx_device * ) padev , ( const gx_device * ) & gx_spot_analyzer_device , mem , false )"		5904225	0					
ANR	5904285	Callee	gx_device_init		5904225	0					
ANR	5904286	Identifier	gx_device_init		5904225	0					
ANR	5904287	ArgumentList	( gx_device * ) padev		5904225	1					
ANR	5904288	Argument	( gx_device * ) padev		5904225	0					
ANR	5904289	CastExpression	( gx_device * ) padev		5904225	0					
ANR	5904290	CastTarget	gx_device *		5904225	0					
ANR	5904291	Identifier	padev		5904225	1					
ANR	5904292	Argument	( const gx_device * ) & gx_spot_analyzer_device		5904225	1					
ANR	5904293	CastExpression	( const gx_device * ) & gx_spot_analyzer_device		5904225	0					
ANR	5904294	CastTarget	const gx_device *		5904225	0					
ANR	5904295	UnaryOperationExpression	& gx_spot_analyzer_device		5904225	1					
ANR	5904296	UnaryOperator	&		5904225	0					
ANR	5904297	Identifier	gx_spot_analyzer_device		5904225	1					
ANR	5904298	Argument	mem		5904225	2					
ANR	5904299	Identifier	mem		5904225	0					
ANR	5904300	Argument	false		5904225	3					
ANR	5904301	Identifier	false		5904225	0					
ANR	5904302	ExpressionStatement	code = gs_opendevice ( ( gx_device * ) padev )	424:4:10945:10985	5904225	6	True				
ANR	5904303	AssignmentExpression	code = gs_opendevice ( ( gx_device * ) padev )		5904225	0		=			
ANR	5904304	Identifier	code		5904225	0					
ANR	5904305	CallExpression	gs_opendevice ( ( gx_device * ) padev )		5904225	1					
ANR	5904306	Callee	gs_opendevice		5904225	0					
ANR	5904307	Identifier	gs_opendevice		5904225	0					
ANR	5904308	ArgumentList	( gx_device * ) padev		5904225	1					
ANR	5904309	Argument	( gx_device * ) padev		5904225	0					
ANR	5904310	CastExpression	( gx_device * ) padev		5904225	0					
ANR	5904311	CastTarget	gx_device *		5904225	0					
ANR	5904312	Identifier	padev		5904225	1					
ANR	5904313	IfStatement	if ( code < 0 )		5904225	7					
ANR	5904314	Condition	code < 0	425:8:10995:11002	5904225	0	True				
ANR	5904315	RelationalExpression	code < 0		5904225	0		<			
ANR	5904316	Identifier	code		5904225	0					
ANR	5904317	PrimaryExpression	0		5904225	1					
ANR	5904318	CompoundStatement		16:18:486:486	5904225	1					
ANR	5904319	ExpressionStatement	"gs_free_object ( mem , padev , ""gx_san__obtain"" )"	426:8:11015:11059	5904225	0	True				
ANR	5904320	CallExpression	"gs_free_object ( mem , padev , ""gx_san__obtain"" )"		5904225	0					
ANR	5904321	Callee	gs_free_object		5904225	0					
ANR	5904322	Identifier	gs_free_object		5904225	0					
ANR	5904323	ArgumentList	mem		5904225	1					
ANR	5904324	Argument	mem		5904225	0					
ANR	5904325	Identifier	mem		5904225	0					
ANR	5904326	Argument	padev		5904225	1					
ANR	5904327	Identifier	padev		5904225	0					
ANR	5904328	Argument	"""gx_san__obtain"""		5904225	2					
ANR	5904329	PrimaryExpression	"""gx_san__obtain"""		5904225	0					
ANR	5904330	ReturnStatement	return code ;	427:8:11069:11080	5904225	1	True				
ANR	5904331	Identifier	code		5904225	0					
ANR	5904332	ExpressionStatement	padev -> lock = 1	429:4:11092:11107	5904225	8	True				
ANR	5904333	AssignmentExpression	padev -> lock = 1		5904225	0		=			
ANR	5904334	PtrMemberAccess	padev -> lock		5904225	0					
ANR	5904335	Identifier	padev		5904225	0					
ANR	5904336	Identifier	lock		5904225	1					
ANR	5904337	PrimaryExpression	1		5904225	1					
ANR	5904338	ExpressionStatement	* ppadev = padev	430:4:11113:11128	5904225	9	True				
ANR	5904339	AssignmentExpression	* ppadev = padev		5904225	0		=			
ANR	5904340	UnaryOperationExpression	* ppadev		5904225	0					
ANR	5904341	UnaryOperator	*		5904225	0					
ANR	5904342	Identifier	ppadev		5904225	1					
ANR	5904343	Identifier	padev		5904225	1					
ANR	5904344	ReturnStatement	return 0 ;	431:4:11134:11142	5904225	10	True				
ANR	5904345	PrimaryExpression	0		5904225	0					
ANR	5904346	ReturnType	int		5904225	1					
ANR	5904347	Identifier	gx_san__obtain		5904225	2					
ANR	5904348	ParameterList	"gs_memory_t * mem , gx_device_spot_analyzer * * ppadev"		5904225	3					
ANR	5904349	Parameter	gs_memory_t * mem	409:15:10466:10481	5904225	0	True				
ANR	5904350	ParameterType	gs_memory_t *		5904225	0					
ANR	5904351	Identifier	mem		5904225	1					
ANR	5904352	Parameter	gx_device_spot_analyzer * * ppadev	409:33:10484:10515	5904225	1	True				
ANR	5904353	ParameterType	gx_device_spot_analyzer * *		5904225	0					
ANR	5904354	Identifier	ppadev		5904225	1					
ANR	5904355	CFGEntryNode	ENTRY		5904225		True				
ANR	5904356	CFGExitNode	EXIT		5904225		True				
ANR	5904357	Symbol	ppadev		5904225						
ANR	5904358	Symbol	code		5904225						
ANR	5904359	Symbol	& st_device_spot_analyzer		5904225						
ANR	5904360	Symbol	padev -> lock		5904225						
ANR	5904361	Symbol	* ppadev		5904225						
ANR	5904362	Symbol	gs_alloc_struct		5904225						
ANR	5904363	Symbol	false		5904225						
ANR	5904364	Symbol	gs_opendevice		5904225						
ANR	5904365	Symbol	( * ppadev ) -> lock		5904225						
ANR	5904366	Symbol	* * ppadev		5904225						
ANR	5904367	Symbol	gx_device_spot_analyzer		5904225						
ANR	5904368	Symbol	gs_error_VMerror		5904225						
ANR	5904369	Symbol	padev		5904225						
ANR	5904370	Symbol	mem		5904225						
ANR	5904371	Symbol	* padev		5904225						
ANR	5904372	Symbol	& gx_spot_analyzer_device		5904225						
ANR	5904373	Function	gx_san__release	434:0:11147:11611							
ANR	5904374	FunctionDef	gx_san__release (gx_device_spot_analyzer * * ppadev)		5904373	0					
ANR	5904375	CompoundStatement		436:0:11202:11611	5904373	0					
ANR	5904376	IdentifierDeclStatement	gx_device_spot_analyzer * padev = * ppadev ;	437:4:11208:11248	5904373	0	True				
ANR	5904377	IdentifierDecl	* padev = * ppadev		5904373	0					
ANR	5904378	IdentifierDeclType	gx_device_spot_analyzer *		5904373	0					
ANR	5904379	Identifier	padev		5904373	1					
ANR	5904380	AssignmentExpression	* padev = * ppadev		5904373	2		=			
ANR	5904381	Identifier	padev		5904373	0					
ANR	5904382	UnaryOperationExpression	* ppadev		5904373	1					
ANR	5904383	UnaryOperator	*		5904373	0					
ANR	5904384	Identifier	ppadev		5904373	1					
ANR	5904385	IfStatement	if ( padev == NULL )		5904373	1					
ANR	5904386	Condition	padev == NULL	439:8:11259:11271	5904373	0	True				
ANR	5904387	EqualityExpression	padev == NULL		5904373	0		==			
ANR	5904388	Identifier	padev		5904373	0					
ANR	5904389	Identifier	NULL		5904373	1					
ANR	5904390	CompoundStatement		4:23:71:71	5904373	1					
ANR	5904391	ExpressionStatement	"eprintf ( ""Extra call to gx_san__release."" )"	441:8:11323:11364	5904373	0	True				
ANR	5904392	CallExpression	"eprintf ( ""Extra call to gx_san__release."" )"		5904373	0					
ANR	5904393	Callee	eprintf		5904373	0					
ANR	5904394	Identifier	eprintf		5904373	0					
ANR	5904395	ArgumentList	"""Extra call to gx_san__release."""		5904373	1					
ANR	5904396	Argument	"""Extra call to gx_san__release."""		5904373	0					
ANR	5904397	PrimaryExpression	"""Extra call to gx_san__release."""		5904373	0					
ANR	5904398	ReturnStatement	return ;	442:8:11374:11380	5904373	1	True				
ANR	5904399	IfStatement	if ( -- padev -> lock < 0 )		5904373	2					
ANR	5904400	Condition	-- padev -> lock < 0	444:7:11395:11411	5904373	0	True				
ANR	5904401	RelationalExpression	-- padev -> lock < 0		5904373	0		<			
ANR	5904402	UnaryExpression	-- padev -> lock		5904373	0					
ANR	5904403	IncDec	--		5904373	0					
ANR	5904404	PtrMemberAccess	padev -> lock		5904373	1					
ANR	5904405	Identifier	padev		5904373	0					
ANR	5904406	Identifier	lock		5904373	1					
ANR	5904407	PrimaryExpression	0		5904373	1					
ANR	5904408	CompoundStatement		9:26:211:211	5904373	1					
ANR	5904409	ExpressionStatement	"emprintf ( padev -> memory , ""Wrong lock to gx_san__release."" )"	445:8:11424:11481	5904373	0	True				
ANR	5904410	CallExpression	"emprintf ( padev -> memory , ""Wrong lock to gx_san__release."" )"		5904373	0					
ANR	5904411	Callee	emprintf		5904373	0					
ANR	5904412	Identifier	emprintf		5904373	0					
ANR	5904413	ArgumentList	padev -> memory		5904373	1					
ANR	5904414	Argument	padev -> memory		5904373	0					
ANR	5904415	PtrMemberAccess	padev -> memory		5904373	0					
ANR	5904416	Identifier	padev		5904373	0					
ANR	5904417	Identifier	memory		5904373	1					
ANR	5904418	Argument	"""Wrong lock to gx_san__release."""		5904373	1					
ANR	5904419	PrimaryExpression	"""Wrong lock to gx_san__release."""		5904373	0					
ANR	5904420	ReturnStatement	return ;	446:8:11491:11497	5904373	1	True				
ANR	5904421	IfStatement	if ( padev -> lock == 0 )		5904373	3					
ANR	5904422	Condition	padev -> lock == 0	448:8:11513:11528	5904373	0	True				
ANR	5904423	EqualityExpression	padev -> lock == 0		5904373	0		==			
ANR	5904424	PtrMemberAccess	padev -> lock		5904373	0					
ANR	5904425	Identifier	padev		5904373	0					
ANR	5904426	Identifier	lock		5904373	1					
ANR	5904427	PrimaryExpression	0		5904373	1					
ANR	5904428	CompoundStatement		13:26:328:328	5904373	1					
ANR	5904429	ExpressionStatement	* ppadev = NULL	449:8:11541:11555	5904373	0	True				
ANR	5904430	AssignmentExpression	* ppadev = NULL		5904373	0		=			
ANR	5904431	UnaryOperationExpression	* ppadev		5904373	0					
ANR	5904432	UnaryOperator	*		5904373	0					
ANR	5904433	Identifier	ppadev		5904373	1					
ANR	5904434	Identifier	NULL		5904373	1					
ANR	5904435	ExpressionStatement	"rc_decrement ( padev , ""gx_san__release"" )"	450:8:11565:11603	5904373	1	True				
ANR	5904436	CallExpression	"rc_decrement ( padev , ""gx_san__release"" )"		5904373	0					
ANR	5904437	Callee	rc_decrement		5904373	0					
ANR	5904438	Identifier	rc_decrement		5904373	0					
ANR	5904439	ArgumentList	padev		5904373	1					
ANR	5904440	Argument	padev		5904373	0					
ANR	5904441	Identifier	padev		5904373	0					
ANR	5904442	Argument	"""gx_san__release"""		5904373	1					
ANR	5904443	PrimaryExpression	"""gx_san__release"""		5904373	0					
ANR	5904444	ReturnType	void		5904373	1					
ANR	5904445	Identifier	gx_san__release		5904373	2					
ANR	5904446	ParameterList	gx_device_spot_analyzer * * ppadev		5904373	3					
ANR	5904447	Parameter	gx_device_spot_analyzer * * ppadev	435:16:11168:11199	5904373	0	True				
ANR	5904448	ParameterType	gx_device_spot_analyzer * *		5904373	0					
ANR	5904449	Identifier	ppadev		5904373	1					
ANR	5904450	CFGEntryNode	ENTRY		5904373		True				
ANR	5904451	CFGExitNode	EXIT		5904373		True				
ANR	5904452	Symbol	ppadev		5904373						
ANR	5904453	Symbol	padev		5904373						
ANR	5904454	Symbol	NULL		5904373						
ANR	5904455	Symbol	padev -> lock		5904373						
ANR	5904456	Symbol	* ppadev		5904373						
ANR	5904457	Symbol	* padev		5904373						
ANR	5904458	Symbol	padev -> memory		5904373						
ANR	5904459	Function	gx_san_begin	455:0:11647:11872							
ANR	5904460	FunctionDef	gx_san_begin (gx_device_spot_analyzer * padev)		5904459	0					
ANR	5904461	CompoundStatement		457:0:11697:11872	5904459	0					
ANR	5904462	ExpressionStatement	padev -> bot_band = NULL	458:4:11703:11725	5904459	0	True				
ANR	5904463	AssignmentExpression	padev -> bot_band = NULL		5904459	0		=			
ANR	5904464	PtrMemberAccess	padev -> bot_band		5904459	0					
ANR	5904465	Identifier	padev		5904459	0					
ANR	5904466	Identifier	bot_band		5904459	1					
ANR	5904467	Identifier	NULL		5904459	1					
ANR	5904468	ExpressionStatement	padev -> top_band = NULL	459:4:11731:11753	5904459	1	True				
ANR	5904469	AssignmentExpression	padev -> top_band = NULL		5904459	0		=			
ANR	5904470	PtrMemberAccess	padev -> top_band		5904459	0					
ANR	5904471	Identifier	padev		5904459	0					
ANR	5904472	Identifier	top_band		5904459	1					
ANR	5904473	Identifier	NULL		5904459	1					
ANR	5904474	ExpressionStatement	padev -> bot_current = NULL	460:4:11759:11784	5904459	2	True				
ANR	5904475	AssignmentExpression	padev -> bot_current = NULL		5904459	0		=			
ANR	5904476	PtrMemberAccess	padev -> bot_current		5904459	0					
ANR	5904477	Identifier	padev		5904459	0					
ANR	5904478	Identifier	bot_current		5904459	1					
ANR	5904479	Identifier	NULL		5904459	1					
ANR	5904480	ExpressionStatement	padev -> trap_free = padev -> trap_buffer	461:4:11790:11827	5904459	3	True				
ANR	5904481	AssignmentExpression	padev -> trap_free = padev -> trap_buffer		5904459	0		=			
ANR	5904482	PtrMemberAccess	padev -> trap_free		5904459	0					
ANR	5904483	Identifier	padev		5904459	0					
ANR	5904484	Identifier	trap_free		5904459	1					
ANR	5904485	PtrMemberAccess	padev -> trap_buffer		5904459	1					
ANR	5904486	Identifier	padev		5904459	0					
ANR	5904487	Identifier	trap_buffer		5904459	1					
ANR	5904488	ExpressionStatement	padev -> cont_free = padev -> cont_buffer	462:4:11833:11870	5904459	4	True				
ANR	5904489	AssignmentExpression	padev -> cont_free = padev -> cont_buffer		5904459	0		=			
ANR	5904490	PtrMemberAccess	padev -> cont_free		5904459	0					
ANR	5904491	Identifier	padev		5904459	0					
ANR	5904492	Identifier	cont_free		5904459	1					
ANR	5904493	PtrMemberAccess	padev -> cont_buffer		5904459	1					
ANR	5904494	Identifier	padev		5904459	0					
ANR	5904495	Identifier	cont_buffer		5904459	1					
ANR	5904496	ReturnType	void		5904459	1					
ANR	5904497	Identifier	gx_san_begin		5904459	2					
ANR	5904498	ParameterList	gx_device_spot_analyzer * padev		5904459	3					
ANR	5904499	Parameter	gx_device_spot_analyzer * padev	456:13:11665:11694	5904459	0	True				
ANR	5904500	ParameterType	gx_device_spot_analyzer *		5904459	0					
ANR	5904501	Identifier	padev		5904459	1					
ANR	5904502	CFGEntryNode	ENTRY		5904459		True				
ANR	5904503	CFGExitNode	EXIT		5904459		True				
ANR	5904504	Symbol	padev -> cont_free		5904459						
ANR	5904505	Symbol	padev -> bot_band		5904459						
ANR	5904506	Symbol	padev -> cont_buffer		5904459						
ANR	5904507	Symbol	padev		5904459						
ANR	5904508	Symbol	NULL		5904459						
ANR	5904509	Symbol	* padev		5904459						
ANR	5904510	Symbol	padev -> top_band		5904459						
ANR	5904511	Symbol	padev -> bot_current		5904459						
ANR	5904512	Symbol	padev -> trap_buffer		5904459						
ANR	5904513	Symbol	padev -> trap_free		5904459						
ANR	5904514	Function	gx_san_trap_store	467:0:11972:14783							
ANR	5904515	FunctionDef	"gx_san_trap_store (gx_device_spot_analyzer * padev , fixed ybot , fixed ytop , fixed xlbot , fixed xrbot , fixed xltop , fixed xrtop , const segment * l , const segment * r , int dir_l , int dir_r)"		5904514	0					
ANR	5904516	CompoundStatement		471:0:12168:14783	5904514	0					
ANR	5904517	IdentifierDeclStatement	gx_san_trap * last ;	472:4:12174:12191	5904514	0	True				
ANR	5904518	IdentifierDecl	* last		5904514	0					
ANR	5904519	IdentifierDeclType	gx_san_trap *		5904514	0					
ANR	5904520	Identifier	last		5904514	1					
ANR	5904521	IdentifierDeclStatement	int code ;	473:4:12197:12205	5904514	1	True				
ANR	5904522	IdentifierDecl	code		5904514	0					
ANR	5904523	IdentifierDeclType	int		5904514	0					
ANR	5904524	Identifier	code		5904514	1					
ANR	5904525	IfStatement	if ( padev -> top_band != NULL && padev -> top_band -> ytop != ytop )		5904514	2					
ANR	5904526	Condition	padev -> top_band != NULL && padev -> top_band -> ytop != ytop	475:8:12216:12271	5904514	0	True				
ANR	5904527	AndExpression	padev -> top_band != NULL && padev -> top_band -> ytop != ytop		5904514	0		&&			
ANR	5904528	EqualityExpression	padev -> top_band != NULL		5904514	0		!=			
ANR	5904529	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904530	Identifier	padev		5904514	0					
ANR	5904531	Identifier	top_band		5904514	1					
ANR	5904532	Identifier	NULL		5904514	1					
ANR	5904533	EqualityExpression	padev -> top_band -> ytop != ytop		5904514	1		!=			
ANR	5904534	PtrMemberAccess	padev -> top_band -> ytop		5904514	0					
ANR	5904535	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904536	Identifier	padev		5904514	0					
ANR	5904537	Identifier	top_band		5904514	1					
ANR	5904538	Identifier	ytop		5904514	1					
ANR	5904539	Identifier	ytop		5904514	1					
ANR	5904540	CompoundStatement		5:66:105:105	5904514	1					
ANR	5904541	ExpressionStatement	"code = try_unite_last_trap ( padev , max_int )"	476:8:12284:12326	5904514	0	True				
ANR	5904542	AssignmentExpression	"code = try_unite_last_trap ( padev , max_int )"		5904514	0		=			
ANR	5904543	Identifier	code		5904514	0					
ANR	5904544	CallExpression	"try_unite_last_trap ( padev , max_int )"		5904514	1					
ANR	5904545	Callee	try_unite_last_trap		5904514	0					
ANR	5904546	Identifier	try_unite_last_trap		5904514	0					
ANR	5904547	ArgumentList	padev		5904514	1					
ANR	5904548	Argument	padev		5904514	0					
ANR	5904549	Identifier	padev		5904514	0					
ANR	5904550	Argument	max_int		5904514	1					
ANR	5904551	Identifier	max_int		5904514	0					
ANR	5904552	IfStatement	if ( code < 0 )		5904514	1					
ANR	5904553	Condition	code < 0	477:12:12340:12347	5904514	0	True				
ANR	5904554	RelationalExpression	code < 0		5904514	0		<			
ANR	5904555	Identifier	code		5904514	0					
ANR	5904556	PrimaryExpression	0		5904514	1					
ANR	5904557	ReturnStatement	return code ;	478:12:12362:12373	5904514	1	True				
ANR	5904558	Identifier	code		5904514	0					
ANR	5904559	ExpressionStatement	padev -> bot_band = padev -> bot_current = padev -> top_band	480:8:12417:12471	5904514	2	True				
ANR	5904560	AssignmentExpression	padev -> bot_band = padev -> bot_current = padev -> top_band		5904514	0		=			
ANR	5904561	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904562	Identifier	padev		5904514	0					
ANR	5904563	Identifier	bot_band		5904514	1					
ANR	5904564	AssignmentExpression	padev -> bot_current = padev -> top_band		5904514	1		=			
ANR	5904565	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904566	Identifier	padev		5904514	0					
ANR	5904567	Identifier	bot_current		5904514	1					
ANR	5904568	PtrMemberAccess	padev -> top_band		5904514	1					
ANR	5904569	Identifier	padev		5904514	0					
ANR	5904570	Identifier	top_band		5904514	1					
ANR	5904571	ExpressionStatement	padev -> top_band = NULL	481:8:12481:12503	5904514	3	True				
ANR	5904572	AssignmentExpression	padev -> top_band = NULL		5904514	0		=			
ANR	5904573	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904574	Identifier	padev		5904514	0					
ANR	5904575	Identifier	top_band		5904514	1					
ANR	5904576	Identifier	NULL		5904514	1					
ANR	5904577	IfStatement	if ( padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot )		5904514	3					
ANR	5904578	Condition	padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot	483:8:12519:12574	5904514	0	True				
ANR	5904579	AndExpression	padev -> bot_band != NULL && padev -> bot_band -> ytop != ybot		5904514	0		&&			
ANR	5904580	EqualityExpression	padev -> bot_band != NULL		5904514	0		!=			
ANR	5904581	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904582	Identifier	padev		5904514	0					
ANR	5904583	Identifier	bot_band		5904514	1					
ANR	5904584	Identifier	NULL		5904514	1					
ANR	5904585	EqualityExpression	padev -> bot_band -> ytop != ybot		5904514	1		!=			
ANR	5904586	PtrMemberAccess	padev -> bot_band -> ytop		5904514	0					
ANR	5904587	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904588	Identifier	padev		5904514	0					
ANR	5904589	Identifier	bot_band		5904514	1					
ANR	5904590	Identifier	ytop		5904514	1					
ANR	5904591	Identifier	ybot		5904514	1					
ANR	5904592	CompoundStatement		13:66:408:408	5904514	1					
ANR	5904593	ExpressionStatement	padev -> top_band = NULL	485:8:12649:12671	5904514	0	True				
ANR	5904594	AssignmentExpression	padev -> top_band = NULL		5904514	0		=			
ANR	5904595	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904596	Identifier	padev		5904514	0					
ANR	5904597	Identifier	top_band		5904514	1					
ANR	5904598	Identifier	NULL		5904514	1					
ANR	5904599	IfStatement	if ( padev -> top_band != NULL )		5904514	4					
ANR	5904600	Condition	padev -> top_band != NULL	487:8:12687:12709	5904514	0	True				
ANR	5904601	EqualityExpression	padev -> top_band != NULL		5904514	0		!=			
ANR	5904602	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904603	Identifier	padev		5904514	0					
ANR	5904604	Identifier	top_band		5904514	1					
ANR	5904605	Identifier	NULL		5904514	1					
ANR	5904606	CompoundStatement		17:33:543:543	5904514	1					
ANR	5904607	ExpressionStatement	"code = try_unite_last_trap ( padev , xlbot )"	488:8:12722:12762	5904514	0	True				
ANR	5904608	AssignmentExpression	"code = try_unite_last_trap ( padev , xlbot )"		5904514	0		=			
ANR	5904609	Identifier	code		5904514	0					
ANR	5904610	CallExpression	"try_unite_last_trap ( padev , xlbot )"		5904514	1					
ANR	5904611	Callee	try_unite_last_trap		5904514	0					
ANR	5904612	Identifier	try_unite_last_trap		5904514	0					
ANR	5904613	ArgumentList	padev		5904514	1					
ANR	5904614	Argument	padev		5904514	0					
ANR	5904615	Identifier	padev		5904514	0					
ANR	5904616	Argument	xlbot		5904514	1					
ANR	5904617	Identifier	xlbot		5904514	0					
ANR	5904618	IfStatement	if ( code < 0 )		5904514	1					
ANR	5904619	Condition	code < 0	489:12:12776:12783	5904514	0	True				
ANR	5904620	RelationalExpression	code < 0		5904514	0		<			
ANR	5904621	Identifier	code		5904514	0					
ANR	5904622	PrimaryExpression	0		5904514	1					
ANR	5904623	ReturnStatement	return code ;	490:12:12798:12809	5904514	1	True				
ANR	5904624	Identifier	code		5904514	0					
ANR	5904625	ExpressionStatement	code = check_band_list ( padev -> bot_band )	492:4:12821:12860	5904514	5	True				
ANR	5904626	AssignmentExpression	code = check_band_list ( padev -> bot_band )		5904514	0		=			
ANR	5904627	Identifier	code		5904514	0					
ANR	5904628	CallExpression	check_band_list ( padev -> bot_band )		5904514	1					
ANR	5904629	Callee	check_band_list		5904514	0					
ANR	5904630	Identifier	check_band_list		5904514	0					
ANR	5904631	ArgumentList	padev -> bot_band		5904514	1					
ANR	5904632	Argument	padev -> bot_band		5904514	0					
ANR	5904633	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904634	Identifier	padev		5904514	0					
ANR	5904635	Identifier	bot_band		5904514	1					
ANR	5904636	IfStatement	if ( code < 0 )		5904514	6					
ANR	5904637	Condition	code < 0	493:8:12870:12877	5904514	0	True				
ANR	5904638	RelationalExpression	code < 0		5904514	0		<			
ANR	5904639	Identifier	code		5904514	0					
ANR	5904640	PrimaryExpression	0		5904514	1					
ANR	5904641	ReturnStatement	return code ;	494:8:12888:12899	5904514	1	True				
ANR	5904642	Identifier	code		5904514	0					
ANR	5904643	ExpressionStatement	code = check_band_list ( padev -> top_band )	495:4:12905:12943	5904514	7	True				
ANR	5904644	AssignmentExpression	code = check_band_list ( padev -> top_band )		5904514	0		=			
ANR	5904645	Identifier	code		5904514	0					
ANR	5904646	CallExpression	check_band_list ( padev -> top_band )		5904514	1					
ANR	5904647	Callee	check_band_list		5904514	0					
ANR	5904648	Identifier	check_band_list		5904514	0					
ANR	5904649	ArgumentList	padev -> top_band		5904514	1					
ANR	5904650	Argument	padev -> top_band		5904514	0					
ANR	5904651	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904652	Identifier	padev		5904514	0					
ANR	5904653	Identifier	top_band		5904514	1					
ANR	5904654	IfStatement	if ( code < 0 )		5904514	8					
ANR	5904655	Condition	code < 0	496:8:12953:12960	5904514	0	True				
ANR	5904656	RelationalExpression	code < 0		5904514	0		<			
ANR	5904657	Identifier	code		5904514	0					
ANR	5904658	PrimaryExpression	0		5904514	1					
ANR	5904659	ReturnStatement	return code ;	497:8:12971:12982	5904514	1	True				
ANR	5904660	Identifier	code		5904514	0					
ANR	5904661	ExpressionStatement	last = trap_reserve ( padev )	499:4:13018:13044	5904514	9	True				
ANR	5904662	AssignmentExpression	last = trap_reserve ( padev )		5904514	0		=			
ANR	5904663	Identifier	last		5904514	0					
ANR	5904664	CallExpression	trap_reserve ( padev )		5904514	1					
ANR	5904665	Callee	trap_reserve		5904514	0					
ANR	5904666	Identifier	trap_reserve		5904514	0					
ANR	5904667	ArgumentList	padev		5904514	1					
ANR	5904668	Argument	padev		5904514	0					
ANR	5904669	Identifier	padev		5904514	0					
ANR	5904670	IfStatement	if ( last == NULL )		5904514	10					
ANR	5904671	Condition	last == NULL	500:8:13054:13065	5904514	0	True				
ANR	5904672	EqualityExpression	last == NULL		5904514	0		==			
ANR	5904673	Identifier	last		5904514	0					
ANR	5904674	Identifier	NULL		5904514	1					
ANR	5904675	ExpressionStatement	return_error ( gs_error_VMerror )	501:8:13076:13106	5904514	1	True				
ANR	5904676	CallExpression	return_error ( gs_error_VMerror )		5904514	0					
ANR	5904677	Callee	return_error		5904514	0					
ANR	5904678	Identifier	return_error		5904514	0					
ANR	5904679	ArgumentList	gs_error_VMerror		5904514	1					
ANR	5904680	Argument	gs_error_VMerror		5904514	0					
ANR	5904681	Identifier	gs_error_VMerror		5904514	0					
ANR	5904682	ExpressionStatement	last -> ybot = ybot	502:4:13112:13129	5904514	11	True				
ANR	5904683	AssignmentExpression	last -> ybot = ybot		5904514	0		=			
ANR	5904684	PtrMemberAccess	last -> ybot		5904514	0					
ANR	5904685	Identifier	last		5904514	0					
ANR	5904686	Identifier	ybot		5904514	1					
ANR	5904687	Identifier	ybot		5904514	1					
ANR	5904688	ExpressionStatement	last -> ytop = ytop	503:4:13135:13152	5904514	12	True				
ANR	5904689	AssignmentExpression	last -> ytop = ytop		5904514	0		=			
ANR	5904690	PtrMemberAccess	last -> ytop		5904514	0					
ANR	5904691	Identifier	last		5904514	0					
ANR	5904692	Identifier	ytop		5904514	1					
ANR	5904693	Identifier	ytop		5904514	1					
ANR	5904694	ExpressionStatement	last -> xlbot = xlbot	504:4:13158:13177	5904514	13	True				
ANR	5904695	AssignmentExpression	last -> xlbot = xlbot		5904514	0		=			
ANR	5904696	PtrMemberAccess	last -> xlbot		5904514	0					
ANR	5904697	Identifier	last		5904514	0					
ANR	5904698	Identifier	xlbot		5904514	1					
ANR	5904699	Identifier	xlbot		5904514	1					
ANR	5904700	ExpressionStatement	last -> xrbot = xrbot	505:4:13183:13202	5904514	14	True				
ANR	5904701	AssignmentExpression	last -> xrbot = xrbot		5904514	0		=			
ANR	5904702	PtrMemberAccess	last -> xrbot		5904514	0					
ANR	5904703	Identifier	last		5904514	0					
ANR	5904704	Identifier	xrbot		5904514	1					
ANR	5904705	Identifier	xrbot		5904514	1					
ANR	5904706	ExpressionStatement	last -> xltop = xltop	506:4:13208:13227	5904514	15	True				
ANR	5904707	AssignmentExpression	last -> xltop = xltop		5904514	0		=			
ANR	5904708	PtrMemberAccess	last -> xltop		5904514	0					
ANR	5904709	Identifier	last		5904514	0					
ANR	5904710	Identifier	xltop		5904514	1					
ANR	5904711	Identifier	xltop		5904514	1					
ANR	5904712	ExpressionStatement	last -> xrtop = xrtop	507:4:13233:13252	5904514	16	True				
ANR	5904713	AssignmentExpression	last -> xrtop = xrtop		5904514	0		=			
ANR	5904714	PtrMemberAccess	last -> xrtop		5904514	0					
ANR	5904715	Identifier	last		5904514	0					
ANR	5904716	Identifier	xrtop		5904514	1					
ANR	5904717	Identifier	xrtop		5904514	1					
ANR	5904718	ExpressionStatement	last -> l = l	508:4:13258:13269	5904514	17	True				
ANR	5904719	AssignmentExpression	last -> l = l		5904514	0		=			
ANR	5904720	PtrMemberAccess	last -> l		5904514	0					
ANR	5904721	Identifier	last		5904514	0					
ANR	5904722	Identifier	l		5904514	1					
ANR	5904723	Identifier	l		5904514	1					
ANR	5904724	ExpressionStatement	last -> r = r	509:4:13275:13286	5904514	18	True				
ANR	5904725	AssignmentExpression	last -> r = r		5904514	0		=			
ANR	5904726	PtrMemberAccess	last -> r		5904514	0					
ANR	5904727	Identifier	last		5904514	0					
ANR	5904728	Identifier	r		5904514	1					
ANR	5904729	Identifier	r		5904514	1					
ANR	5904730	ExpressionStatement	last -> dir_l = dir_l	510:4:13292:13311	5904514	19	True				
ANR	5904731	AssignmentExpression	last -> dir_l = dir_l		5904514	0		=			
ANR	5904732	PtrMemberAccess	last -> dir_l		5904514	0					
ANR	5904733	Identifier	last		5904514	0					
ANR	5904734	Identifier	dir_l		5904514	1					
ANR	5904735	Identifier	dir_l		5904514	1					
ANR	5904736	ExpressionStatement	last -> dir_r = dir_r	511:4:13317:13336	5904514	20	True				
ANR	5904737	AssignmentExpression	last -> dir_r = dir_r		5904514	0		=			
ANR	5904738	PtrMemberAccess	last -> dir_r		5904514	0					
ANR	5904739	Identifier	last		5904514	0					
ANR	5904740	Identifier	dir_r		5904514	1					
ANR	5904741	Identifier	dir_r		5904514	1					
ANR	5904742	ExpressionStatement	last -> upper = 0	512:4:13342:13357	5904514	21	True				
ANR	5904743	AssignmentExpression	last -> upper = 0		5904514	0		=			
ANR	5904744	PtrMemberAccess	last -> upper		5904514	0					
ANR	5904745	Identifier	last		5904514	0					
ANR	5904746	Identifier	upper		5904514	1					
ANR	5904747	PrimaryExpression	0		5904514	1					
ANR	5904748	ExpressionStatement	last -> fork = 0	513:4:13363:13377	5904514	22	True				
ANR	5904749	AssignmentExpression	last -> fork = 0		5904514	0		=			
ANR	5904750	PtrMemberAccess	last -> fork		5904514	0					
ANR	5904751	Identifier	last		5904514	0					
ANR	5904752	Identifier	fork		5904514	1					
ANR	5904753	PrimaryExpression	0		5904514	1					
ANR	5904754	ExpressionStatement	last -> visited = false	514:4:13383:13404	5904514	23	True				
ANR	5904755	AssignmentExpression	last -> visited = false		5904514	0		=			
ANR	5904756	PtrMemberAccess	last -> visited		5904514	0					
ANR	5904757	Identifier	last		5904514	0					
ANR	5904758	Identifier	visited		5904514	1					
ANR	5904759	Identifier	false		5904514	1					
ANR	5904760	ExpressionStatement	last -> leftmost = last -> rightmost = true	515:4:13410:13449	5904514	24	True				
ANR	5904761	AssignmentExpression	last -> leftmost = last -> rightmost = true		5904514	0		=			
ANR	5904762	PtrMemberAccess	last -> leftmost		5904514	0					
ANR	5904763	Identifier	last		5904514	0					
ANR	5904764	Identifier	leftmost		5904514	1					
ANR	5904765	AssignmentExpression	last -> rightmost = true		5904514	1		=			
ANR	5904766	PtrMemberAccess	last -> rightmost		5904514	0					
ANR	5904767	Identifier	last		5904514	0					
ANR	5904768	Identifier	rightmost		5904514	1					
ANR	5904769	Identifier	true		5904514	1					
ANR	5904770	IfStatement	if ( padev -> top_band != NULL )		5904514	25					
ANR	5904771	Condition	padev -> top_band != NULL	516:8:13459:13481	5904514	0	True				
ANR	5904772	EqualityExpression	padev -> top_band != NULL		5904514	0		!=			
ANR	5904773	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904774	Identifier	padev		5904514	0					
ANR	5904775	Identifier	top_band		5904514	1					
ANR	5904776	Identifier	NULL		5904514	1					
ANR	5904777	CompoundStatement		46:33:1315:1315	5904514	1					
ANR	5904778	ExpressionStatement	padev -> top_band -> rightmost = false	517:8:13494:13528	5904514	0	True				
ANR	5904779	AssignmentExpression	padev -> top_band -> rightmost = false		5904514	0		=			
ANR	5904780	PtrMemberAccess	padev -> top_band -> rightmost		5904514	0					
ANR	5904781	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904782	Identifier	padev		5904514	0					
ANR	5904783	Identifier	top_band		5904514	1					
ANR	5904784	Identifier	rightmost		5904514	1					
ANR	5904785	Identifier	false		5904514	1					
ANR	5904786	ExpressionStatement	last -> leftmost = false	518:8:13538:13560	5904514	1	True				
ANR	5904787	AssignmentExpression	last -> leftmost = false		5904514	0		=			
ANR	5904788	PtrMemberAccess	last -> leftmost		5904514	0					
ANR	5904789	Identifier	last		5904514	0					
ANR	5904790	Identifier	leftmost		5904514	1					
ANR	5904791	Identifier	false		5904514	1					
ANR	5904792	ExpressionStatement	"band_list_insert_last ( & padev -> top_band , last )"	520:4:13572:13617	5904514	26	True				
ANR	5904793	CallExpression	"band_list_insert_last ( & padev -> top_band , last )"		5904514	0					
ANR	5904794	Callee	band_list_insert_last		5904514	0					
ANR	5904795	Identifier	band_list_insert_last		5904514	0					
ANR	5904796	ArgumentList	& padev -> top_band		5904514	1					
ANR	5904797	Argument	& padev -> top_band		5904514	0					
ANR	5904798	UnaryOperationExpression	& padev -> top_band		5904514	0					
ANR	5904799	UnaryOperator	&		5904514	0					
ANR	5904800	PtrMemberAccess	padev -> top_band		5904514	1					
ANR	5904801	Identifier	padev		5904514	0					
ANR	5904802	Identifier	top_band		5904514	1					
ANR	5904803	Argument	last		5904514	1					
ANR	5904804	Identifier	last		5904514	0					
ANR	5904805	ExpressionStatement	code = check_band_list ( padev -> top_band )	521:4:13623:13662	5904514	27	True				
ANR	5904806	AssignmentExpression	code = check_band_list ( padev -> top_band )		5904514	0		=			
ANR	5904807	Identifier	code		5904514	0					
ANR	5904808	CallExpression	check_band_list ( padev -> top_band )		5904514	1					
ANR	5904809	Callee	check_band_list		5904514	0					
ANR	5904810	Identifier	check_band_list		5904514	0					
ANR	5904811	ArgumentList	padev -> top_band		5904514	1					
ANR	5904812	Argument	padev -> top_band		5904514	0					
ANR	5904813	PtrMemberAccess	padev -> top_band		5904514	0					
ANR	5904814	Identifier	padev		5904514	0					
ANR	5904815	Identifier	top_band		5904514	1					
ANR	5904816	IfStatement	if ( code < 0 )		5904514	28					
ANR	5904817	Condition	code < 0	522:8:13672:13679	5904514	0	True				
ANR	5904818	RelationalExpression	code < 0		5904514	0		<			
ANR	5904819	Identifier	code		5904514	0					
ANR	5904820	PrimaryExpression	0		5904514	1					
ANR	5904821	ReturnStatement	return code ;	523:8:13690:13701	5904514	1	True				
ANR	5904822	Identifier	code		5904514	0					
ANR	5904823	WhileStatement	while ( padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot )		5904514	29					
ANR	5904824	Condition	padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot	524:11:13714:13776	5904514	0	True				
ANR	5904825	AndExpression	padev -> bot_current != NULL && padev -> bot_current -> xrtop < xlbot		5904514	0		&&			
ANR	5904826	EqualityExpression	padev -> bot_current != NULL		5904514	0		!=			
ANR	5904827	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904828	Identifier	padev		5904514	0					
ANR	5904829	Identifier	bot_current		5904514	1					
ANR	5904830	Identifier	NULL		5904514	1					
ANR	5904831	RelationalExpression	padev -> bot_current -> xrtop < xlbot		5904514	1		<			
ANR	5904832	PtrMemberAccess	padev -> bot_current -> xrtop		5904514	0					
ANR	5904833	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904834	Identifier	padev		5904514	0					
ANR	5904835	Identifier	bot_current		5904514	1					
ANR	5904836	Identifier	xrtop		5904514	1					
ANR	5904837	Identifier	xlbot		5904514	1					
ANR	5904838	ExpressionStatement	"padev -> bot_current = ( trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next )"	525:8:13787:13929	5904514	1	True				
ANR	5904839	AssignmentExpression	"padev -> bot_current = ( trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next )"		5904514	0		=			
ANR	5904840	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904841	Identifier	padev		5904514	0					
ANR	5904842	Identifier	bot_current		5904514	1					
ANR	5904843	ConditionalExpression	"trap_is_last ( padev -> bot_band , padev -> bot_current ) ? NULL : padev -> bot_current -> next"		5904514	1					
ANR	5904844	Condition	"trap_is_last ( padev -> bot_band , padev -> bot_current )"		5904514	0					
ANR	5904845	CallExpression	"trap_is_last ( padev -> bot_band , padev -> bot_current )"		5904514	0					
ANR	5904846	Callee	trap_is_last		5904514	0					
ANR	5904847	Identifier	trap_is_last		5904514	0					
ANR	5904848	ArgumentList	padev -> bot_band		5904514	1					
ANR	5904849	Argument	padev -> bot_band		5904514	0					
ANR	5904850	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904851	Identifier	padev		5904514	0					
ANR	5904852	Identifier	bot_band		5904514	1					
ANR	5904853	Argument	padev -> bot_current		5904514	1					
ANR	5904854	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904855	Identifier	padev		5904514	0					
ANR	5904856	Identifier	bot_current		5904514	1					
ANR	5904857	Identifier	NULL		5904514	1					
ANR	5904858	PtrMemberAccess	padev -> bot_current -> next		5904514	2					
ANR	5904859	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904860	Identifier	padev		5904514	0					
ANR	5904861	Identifier	bot_current		5904514	1					
ANR	5904862	Identifier	next		5904514	1					
ANR	5904863	IfStatement	if ( padev -> bot_current != 0 && padev -> bot_band != NULL )		5904514	30					
ANR	5904864	Condition	padev -> bot_current != 0 && padev -> bot_band != NULL	527:8:13939:13988	5904514	0	True				
ANR	5904865	AndExpression	padev -> bot_current != 0 && padev -> bot_band != NULL		5904514	0		&&			
ANR	5904866	EqualityExpression	padev -> bot_current != 0		5904514	0		!=			
ANR	5904867	PtrMemberAccess	padev -> bot_current		5904514	0					
ANR	5904868	Identifier	padev		5904514	0					
ANR	5904869	Identifier	bot_current		5904514	1					
ANR	5904870	PrimaryExpression	0		5904514	1					
ANR	5904871	EqualityExpression	padev -> bot_band != NULL		5904514	1		!=			
ANR	5904872	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904873	Identifier	padev		5904514	0					
ANR	5904874	Identifier	bot_band		5904514	1					
ANR	5904875	Identifier	NULL		5904514	1					
ANR	5904876	CompoundStatement		59:8:1877:1932	5904514	1					
ANR	5904877	IdentifierDeclStatement	gx_san_trap * t = padev -> bot_current ;	528:8:14001:14036	5904514	0	True				
ANR	5904878	IdentifierDecl	* t = padev -> bot_current		5904514	0					
ANR	5904879	IdentifierDeclType	gx_san_trap *		5904514	0					
ANR	5904880	Identifier	t		5904514	1					
ANR	5904881	AssignmentExpression	* t = padev -> bot_current		5904514	2		=			
ANR	5904882	Identifier	t		5904514	0					
ANR	5904883	PtrMemberAccess	padev -> bot_current		5904514	1					
ANR	5904884	Identifier	padev		5904514	0					
ANR	5904885	Identifier	bot_current		5904514	1					
ANR	5904886	IdentifierDeclStatement	gx_san_trap * bot_last = band_list_last ( padev -> bot_band ) ;	529:8:14046:14101	5904514	1	True				
ANR	5904887	IdentifierDecl	* bot_last = band_list_last ( padev -> bot_band )		5904514	0					
ANR	5904888	IdentifierDeclType	gx_san_trap *		5904514	0					
ANR	5904889	Identifier	bot_last		5904514	1					
ANR	5904890	AssignmentExpression	* bot_last = band_list_last ( padev -> bot_band )		5904514	2		=			
ANR	5904891	Identifier	bot_last		5904514	0					
ANR	5904892	CallExpression	band_list_last ( padev -> bot_band )		5904514	1					
ANR	5904893	Callee	band_list_last		5904514	0					
ANR	5904894	Identifier	band_list_last		5904514	0					
ANR	5904895	ArgumentList	padev -> bot_band		5904514	1					
ANR	5904896	Argument	padev -> bot_band		5904514	0					
ANR	5904897	PtrMemberAccess	padev -> bot_band		5904514	0					
ANR	5904898	Identifier	padev		5904514	0					
ANR	5904899	Identifier	bot_band		5904514	1					
ANR	5904900	WhileStatement	while ( t -> xltop <= xrbot )		5904514	2					
ANR	5904901	Condition	t -> xltop <= xrbot	531:14:14118:14134	5904514	0	True				
ANR	5904902	RelationalExpression	t -> xltop <= xrbot		5904514	0		<=			
ANR	5904903	PtrMemberAccess	t -> xltop		5904514	0					
ANR	5904904	Identifier	t		5904514	0					
ANR	5904905	Identifier	xltop		5904514	1					
ANR	5904906	Identifier	xrbot		5904514	1					
ANR	5904907	CompoundStatement		62:12:1982:2029	5904514	1					
ANR	5904908	IdentifierDeclStatement	gx_san_trap_contact * cont = cont_reserve ( padev ) ;	532:12:14151:14198	5904514	0	True				
ANR	5904909	IdentifierDecl	* cont = cont_reserve ( padev )		5904514	0					
ANR	5904910	IdentifierDeclType	gx_san_trap_contact *		5904514	0					
ANR	5904911	Identifier	cont		5904514	1					
ANR	5904912	AssignmentExpression	* cont = cont_reserve ( padev )		5904514	2		=			
ANR	5904913	Identifier	cont		5904514	0					
ANR	5904914	CallExpression	cont_reserve ( padev )		5904514	1					
ANR	5904915	Callee	cont_reserve		5904514	0					
ANR	5904916	Identifier	cont_reserve		5904514	0					
ANR	5904917	ArgumentList	padev		5904514	1					
ANR	5904918	Argument	padev		5904514	0					
ANR	5904919	Identifier	padev		5904514	0					
ANR	5904920	IfStatement	if ( cont == NULL )		5904514	1					
ANR	5904921	Condition	cont == NULL	534:16:14217:14228	5904514	0	True				
ANR	5904922	EqualityExpression	cont == NULL		5904514	0		==			
ANR	5904923	Identifier	cont		5904514	0					
ANR	5904924	Identifier	NULL		5904514	1					
ANR	5904925	ExpressionStatement	return_error ( gs_error_VMerror )	535:16:14247:14277	5904514	1	True				
ANR	5904926	CallExpression	return_error ( gs_error_VMerror )		5904514	0					
ANR	5904927	Callee	return_error		5904514	0					
ANR	5904928	Identifier	return_error		5904514	0					
ANR	5904929	ArgumentList	gs_error_VMerror		5904514	1					
ANR	5904930	Argument	gs_error_VMerror		5904514	0					
ANR	5904931	Identifier	gs_error_VMerror		5904514	0					
ANR	5904932	ExpressionStatement	cont -> lower = t	536:12:14291:14306	5904514	2	True				
ANR	5904933	AssignmentExpression	cont -> lower = t		5904514	0		=			
ANR	5904934	PtrMemberAccess	cont -> lower		5904514	0					
ANR	5904935	Identifier	cont		5904514	0					
ANR	5904936	Identifier	lower		5904514	1					
ANR	5904937	Identifier	t		5904514	1					
ANR	5904938	ExpressionStatement	cont -> upper = last	537:12:14320:14338	5904514	3	True				
ANR	5904939	AssignmentExpression	cont -> upper = last		5904514	0		=			
ANR	5904940	PtrMemberAccess	cont -> upper		5904514	0					
ANR	5904941	Identifier	cont		5904514	0					
ANR	5904942	Identifier	upper		5904514	1					
ANR	5904943	Identifier	last		5904514	1					
ANR	5904944	ExpressionStatement	"cont_list_insert_last ( & t -> upper , cont )"	538:12:14352:14390	5904514	4	True				
ANR	5904945	CallExpression	"cont_list_insert_last ( & t -> upper , cont )"		5904514	0					
ANR	5904946	Callee	cont_list_insert_last		5904514	0					
ANR	5904947	Identifier	cont_list_insert_last		5904514	0					
ANR	5904948	ArgumentList	& t -> upper		5904514	1					
ANR	5904949	Argument	& t -> upper		5904514	0					
ANR	5904950	UnaryOperationExpression	& t -> upper		5904514	0					
ANR	5904951	UnaryOperator	&		5904514	0					
ANR	5904952	PtrMemberAccess	t -> upper		5904514	1					
ANR	5904953	Identifier	t		5904514	0					
ANR	5904954	Identifier	upper		5904514	1					
ANR	5904955	Argument	cont		5904514	1					
ANR	5904956	Identifier	cont		5904514	0					
ANR	5904957	ExpressionStatement	last -> fork ++	539:12:14404:14416	5904514	5	True				
ANR	5904958	PostIncDecOperationExpression	last -> fork ++		5904514	0					
ANR	5904959	PtrMemberAccess	last -> fork		5904514	0					
ANR	5904960	Identifier	last		5904514	0					
ANR	5904961	Identifier	fork		5904514	1					
ANR	5904962	IncDec	++		5904514	1					
ANR	5904963	IfStatement	if ( t == bot_last )		5904514	6					
ANR	5904964	Condition	t == bot_last	540:16:14434:14446	5904514	0	True				
ANR	5904965	EqualityExpression	t == bot_last		5904514	0		==			
ANR	5904966	Identifier	t		5904514	0					
ANR	5904967	Identifier	bot_last		5904514	1					
ANR	5904968	BreakStatement	break ;	541:16:14465:14470	5904514	1	True				
ANR	5904969	ExpressionStatement	t = t -> next	542:12:14484:14495	5904514	7	True				
ANR	5904970	AssignmentExpression	t = t -> next		5904514	0		=			
ANR	5904971	Identifier	t		5904514	0					
ANR	5904972	PtrMemberAccess	t -> next		5904514	1					
ANR	5904973	Identifier	t		5904514	0					
ANR	5904974	Identifier	next		5904514	1					
ANR	5904975	IfStatement	if ( padev -> xmin > padev -> xmax )		5904514	31					
ANR	5904976	Condition	padev -> xmin > padev -> xmax	545:8:14521:14545	5904514	0	True				
ANR	5904977	RelationalExpression	padev -> xmin > padev -> xmax		5904514	0		>			
ANR	5904978	PtrMemberAccess	padev -> xmin		5904514	0					
ANR	5904979	Identifier	padev		5904514	0					
ANR	5904980	Identifier	xmin		5904514	1					
ANR	5904981	PtrMemberAccess	padev -> xmax		5904514	1					
ANR	5904982	Identifier	padev		5904514	0					
ANR	5904983	Identifier	xmax		5904514	1					
ANR	5904984	CompoundStatement		75:35:2379:2379	5904514	1					
ANR	5904985	ExpressionStatement	"padev -> xmin = min ( xlbot , xltop )"	546:8:14558:14589	5904514	0	True				
ANR	5904986	AssignmentExpression	"padev -> xmin = min ( xlbot , xltop )"		5904514	0		=			
ANR	5904987	PtrMemberAccess	padev -> xmin		5904514	0					
ANR	5904988	Identifier	padev		5904514	0					
ANR	5904989	Identifier	xmin		5904514	1					
ANR	5904990	CallExpression	"min ( xlbot , xltop )"		5904514	1					
ANR	5904991	Callee	min		5904514	0					
ANR	5904992	Identifier	min		5904514	0					
ANR	5904993	ArgumentList	xlbot		5904514	1					
ANR	5904994	Argument	xlbot		5904514	0					
ANR	5904995	Identifier	xlbot		5904514	0					
ANR	5904996	Argument	xltop		5904514	1					
ANR	5904997	Identifier	xltop		5904514	0					
ANR	5904998	ExpressionStatement	"padev -> xmax = max ( xrbot , xrtop )"	547:8:14599:14630	5904514	1	True				
ANR	5904999	AssignmentExpression	"padev -> xmax = max ( xrbot , xrtop )"		5904514	0		=			
ANR	5905000	PtrMemberAccess	padev -> xmax		5904514	0					
ANR	5905001	Identifier	padev		5904514	0					
ANR	5905002	Identifier	xmax		5904514	1					
ANR	5905003	CallExpression	"max ( xrbot , xrtop )"		5904514	1					
ANR	5905004	Callee	max		5904514	0					
ANR	5905005	Identifier	max		5904514	0					
ANR	5905006	ArgumentList	xrbot		5904514	1					
ANR	5905007	Argument	xrbot		5904514	0					
ANR	5905008	Identifier	xrbot		5904514	0					
ANR	5905009	Argument	xrtop		5904514	1					
ANR	5905010	Identifier	xrtop		5904514	0					
ANR	5905011	ElseStatement	else		5904514	0					
ANR	5905012	CompoundStatement		78:11:2474:2474	5904514	0					
ANR	5905013	ExpressionStatement	"padev -> xmin = min ( padev -> xmin , min ( xlbot , xltop ) )"	549:8:14653:14702	5904514	0	True				
ANR	5905014	AssignmentExpression	"padev -> xmin = min ( padev -> xmin , min ( xlbot , xltop ) )"		5904514	0		=			
ANR	5905015	PtrMemberAccess	padev -> xmin		5904514	0					
ANR	5905016	Identifier	padev		5904514	0					
ANR	5905017	Identifier	xmin		5904514	1					
ANR	5905018	CallExpression	"min ( padev -> xmin , min ( xlbot , xltop ) )"		5904514	1					
ANR	5905019	Callee	min		5904514	0					
ANR	5905020	Identifier	min		5904514	0					
ANR	5905021	ArgumentList	padev -> xmin		5904514	1					
ANR	5905022	Argument	padev -> xmin		5904514	0					
ANR	5905023	PtrMemberAccess	padev -> xmin		5904514	0					
ANR	5905024	Identifier	padev		5904514	0					
ANR	5905025	Identifier	xmin		5904514	1					
ANR	5905026	Argument	"min ( xlbot , xltop )"		5904514	1					
ANR	5905027	CallExpression	"min ( xlbot , xltop )"		5904514	0					
ANR	5905028	Callee	min		5904514	0					
ANR	5905029	Identifier	min		5904514	0					
ANR	5905030	ArgumentList	xlbot		5904514	1					
ANR	5905031	Argument	xlbot		5904514	0					
ANR	5905032	Identifier	xlbot		5904514	0					
ANR	5905033	Argument	xltop		5904514	1					
ANR	5905034	Identifier	xltop		5904514	0					
ANR	5905035	ExpressionStatement	"padev -> xmax = max ( padev -> xmax , max ( xrbot , xrtop ) )"	550:8:14712:14761	5904514	1	True				
ANR	5905036	AssignmentExpression	"padev -> xmax = max ( padev -> xmax , max ( xrbot , xrtop ) )"		5904514	0		=			
ANR	5905037	PtrMemberAccess	padev -> xmax		5904514	0					
ANR	5905038	Identifier	padev		5904514	0					
ANR	5905039	Identifier	xmax		5904514	1					
ANR	5905040	CallExpression	"max ( padev -> xmax , max ( xrbot , xrtop ) )"		5904514	1					
ANR	5905041	Callee	max		5904514	0					
ANR	5905042	Identifier	max		5904514	0					
ANR	5905043	ArgumentList	padev -> xmax		5904514	1					
ANR	5905044	Argument	padev -> xmax		5904514	0					
ANR	5905045	PtrMemberAccess	padev -> xmax		5904514	0					
ANR	5905046	Identifier	padev		5904514	0					
ANR	5905047	Identifier	xmax		5904514	1					
ANR	5905048	Argument	"max ( xrbot , xrtop )"		5904514	1					
ANR	5905049	CallExpression	"max ( xrbot , xrtop )"		5904514	0					
ANR	5905050	Callee	max		5904514	0					
ANR	5905051	Identifier	max		5904514	0					
ANR	5905052	ArgumentList	xrbot		5904514	1					
ANR	5905053	Argument	xrbot		5904514	0					
ANR	5905054	Identifier	xrbot		5904514	0					
ANR	5905055	Argument	xrtop		5904514	1					
ANR	5905056	Identifier	xrtop		5904514	0					
ANR	5905057	ReturnStatement	return 0 ;	552:4:14773:14781	5904514	32	True				
ANR	5905058	PrimaryExpression	0		5904514	0					
ANR	5905059	ReturnType	int		5904514	1					
ANR	5905060	Identifier	gx_san_trap_store		5904514	2					
ANR	5905061	ParameterList	"gx_device_spot_analyzer * padev , fixed ybot , fixed ytop , fixed xlbot , fixed xrbot , fixed xltop , fixed xrtop , const segment * l , const segment * r , int dir_l , int dir_r"		5904514	3					
ANR	5905062	Parameter	gx_device_spot_analyzer * padev	468:18:11994:12023	5904514	0	True				
ANR	5905063	ParameterType	gx_device_spot_analyzer *		5904514	0					
ANR	5905064	Identifier	padev		5904514	1					
ANR	5905065	Parameter	fixed ybot	469:4:12030:12039	5904514	1	True				
ANR	5905066	ParameterType	fixed		5904514	0					
ANR	5905067	Identifier	ybot		5904514	1					
ANR	5905068	Parameter	fixed ytop	469:16:12042:12051	5904514	2	True				
ANR	5905069	ParameterType	fixed		5904514	0					
ANR	5905070	Identifier	ytop		5904514	1					
ANR	5905071	Parameter	fixed xlbot	469:28:12054:12064	5904514	3	True				
ANR	5905072	ParameterType	fixed		5904514	0					
ANR	5905073	Identifier	xlbot		5904514	1					
ANR	5905074	Parameter	fixed xrbot	469:41:12067:12077	5904514	4	True				
ANR	5905075	ParameterType	fixed		5904514	0					
ANR	5905076	Identifier	xrbot		5904514	1					
ANR	5905077	Parameter	fixed xltop	469:54:12080:12090	5904514	5	True				
ANR	5905078	ParameterType	fixed		5904514	0					
ANR	5905079	Identifier	xltop		5904514	1					
ANR	5905080	Parameter	fixed xrtop	469:67:12093:12103	5904514	6	True				
ANR	5905081	ParameterType	fixed		5904514	0					
ANR	5905082	Identifier	xrtop		5904514	1					
ANR	5905083	Parameter	const segment * l	470:4:12110:12125	5904514	7	True				
ANR	5905084	ParameterType	const segment *		5904514	0					
ANR	5905085	Identifier	l		5904514	1					
ANR	5905086	Parameter	const segment * r	470:22:12128:12143	5904514	8	True				
ANR	5905087	ParameterType	const segment *		5904514	0					
ANR	5905088	Identifier	r		5904514	1					
ANR	5905089	Parameter	int dir_l	470:40:12146:12154	5904514	9	True				
ANR	5905090	ParameterType	int		5904514	0					
ANR	5905091	Identifier	dir_l		5904514	1					
ANR	5905092	Parameter	int dir_r	470:51:12157:12165	5904514	10	True				
ANR	5905093	ParameterType	int		5904514	0					
ANR	5905094	Identifier	dir_r		5904514	1					
ANR	5905095	CFGEntryNode	ENTRY		5904514		True				
ANR	5905096	CFGExitNode	EXIT		5904514		True				
ANR	5905097	Symbol	* * padev		5904514						
ANR	5905098	Symbol	last -> upper		5904514						
ANR	5905099	Symbol	& padev -> top_band		5904514						
ANR	5905100	Symbol	ytop		5904514						
ANR	5905101	Symbol	padev -> top_band		5904514						
ANR	5905102	Symbol	dir_l		5904514						
ANR	5905103	Symbol	last -> xlbot		5904514						
ANR	5905104	Symbol	last -> xltop		5904514						
ANR	5905105	Symbol	last -> rightmost		5904514						
ANR	5905106	Symbol	ybot		5904514						
ANR	5905107	Symbol	last -> dir_r		5904514						
ANR	5905108	Symbol	last -> dir_l		5904514						
ANR	5905109	Symbol	cont		5904514						
ANR	5905110	Symbol	xlbot		5904514						
ANR	5905111	Symbol	NULL		5904514						
ANR	5905112	Symbol	last		5904514						
ANR	5905113	Symbol	trap_reserve		5904514						
ANR	5905114	Symbol	* padev -> bot_band		5904514						
ANR	5905115	Symbol	padev -> top_band -> ytop		5904514						
ANR	5905116	Symbol	xltop		5904514						
ANR	5905117	Symbol	padev -> bot_current -> next		5904514						
ANR	5905118	Symbol	padev -> xmin		5904514						
ANR	5905119	Symbol	last -> fork		5904514						
ANR	5905120	Symbol	t -> next		5904514						
ANR	5905121	Symbol	* padev		5904514						
ANR	5905122	Symbol	try_unite_last_trap		5904514						
ANR	5905123	Symbol	padev -> bot_current		5904514						
ANR	5905124	Symbol	true		5904514						
ANR	5905125	Symbol	& t -> upper		5904514						
ANR	5905126	Symbol	trap_is_last		5904514						
ANR	5905127	Symbol	padev -> xmax		5904514						
ANR	5905128	Symbol	last -> ytop		5904514						
ANR	5905129	Symbol	max_int		5904514						
ANR	5905130	Symbol	* padev -> bot_current		5904514						
ANR	5905131	Symbol	last -> xrbot		5904514						
ANR	5905132	Symbol	cont -> upper		5904514						
ANR	5905133	Symbol	code		5904514						
ANR	5905134	Symbol	check_band_list		5904514						
ANR	5905135	Symbol	padev -> bot_band -> ytop		5904514						
ANR	5905136	Symbol	padev -> top_band -> rightmost		5904514						
ANR	5905137	Symbol	xrtop		5904514						
ANR	5905138	Symbol	t -> xltop		5904514						
ANR	5905139	Symbol	last -> ybot		5904514						
ANR	5905140	Symbol	cont_reserve		5904514						
ANR	5905141	Symbol	padev		5904514						
ANR	5905142	Symbol	min		5904514						
ANR	5905143	Symbol	* padev -> top_band		5904514						
ANR	5905144	Symbol	last -> xrtop		5904514						
ANR	5905145	Symbol	xrbot		5904514						
ANR	5905146	Symbol	last -> l		5904514						
ANR	5905147	Symbol	cont -> lower		5904514						
ANR	5905148	Symbol	max		5904514						
ANR	5905149	Symbol	false		5904514						
ANR	5905150	Symbol	bot_last		5904514						
ANR	5905151	Symbol	padev -> bot_current -> xrtop		5904514						
ANR	5905152	Symbol	last -> r		5904514						
ANR	5905153	Symbol	last -> leftmost		5904514						
ANR	5905154	Symbol	l		5904514						
ANR	5905155	Symbol	* last		5904514						
ANR	5905156	Symbol	gs_error_VMerror		5904514						
ANR	5905157	Symbol	r		5904514						
ANR	5905158	Symbol	dir_r		5904514						
ANR	5905159	Symbol	padev -> bot_band		5904514						
ANR	5905160	Symbol	band_list_last		5904514						
ANR	5905161	Symbol	t		5904514						
ANR	5905162	Symbol	* cont		5904514						
ANR	5905163	Symbol	last -> visited		5904514						
ANR	5905164	Symbol	* t		5904514						
ANR	5905165	Function	gx_san_end	556:0:14820:14876							
ANR	5905166	FunctionDef	gx_san_end (const gx_device_spot_analyzer * padev)		5905165	0					
ANR	5905167	CompoundStatement		558:0:14874:14876	5905165	0					
ANR	5905168	ReturnType	void		5905165	1					
ANR	5905169	Identifier	gx_san_end		5905165	2					
ANR	5905170	ParameterList	const gx_device_spot_analyzer * padev		5905165	3					
ANR	5905171	Parameter	const gx_device_spot_analyzer * padev	557:11:14836:14871	5905165	0	True				
ANR	5905172	ParameterType	const gx_device_spot_analyzer *		5905165	0					
ANR	5905173	Identifier	padev		5905165	1					
ANR	5905174	CFGEntryNode	ENTRY		5905165		True				
ANR	5905175	CFGExitNode	EXIT		5905165		True				
ANR	5905176	Symbol	padev		5905165						
ANR	5905177	Function	hint_by_trap	561:0:14879:16189							
ANR	5905178	FunctionDef	"hint_by_trap (gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		5905177	0					
ANR	5905179	CompoundStatement		565:0:15081:16189	5905177	0					
ANR	5905180	IdentifierDeclStatement	gx_san_trap * t ;	565:3:15085:15099	5905177	0	True				
ANR	5905181	IdentifierDecl	* t		5905177	0					
ANR	5905182	IdentifierDeclType	gx_san_trap *		5905177	0					
ANR	5905183	Identifier	t		5905177	1					
ANR	5905184	IdentifierDeclStatement	"double w , wd , best_width_diff = ave_width * 10 ;"	566:4:15105:15151	5905177	1	True				
ANR	5905185	IdentifierDecl	w		5905177	0					
ANR	5905186	IdentifierDeclType	double		5905177	0					
ANR	5905187	Identifier	w		5905177	1					
ANR	5905188	IdentifierDecl	wd		5905177	1					
ANR	5905189	IdentifierDeclType	double		5905177	0					
ANR	5905190	Identifier	wd		5905177	1					
ANR	5905191	IdentifierDecl	best_width_diff = ave_width * 10		5905177	2					
ANR	5905192	IdentifierDeclType	double		5905177	0					
ANR	5905193	Identifier	best_width_diff		5905177	1					
ANR	5905194	AssignmentExpression	best_width_diff = ave_width * 10		5905177	2		=			
ANR	5905195	Identifier	best_width_diff		5905177	0					
ANR	5905196	MultiplicativeExpression	ave_width * 10		5905177	1		*			
ANR	5905197	Identifier	ave_width		5905177	0					
ANR	5905198	PrimaryExpression	10		5905177	1					
ANR	5905199	IdentifierDeclStatement	gx_san_trap * best_trap = NULL ;	567:4:15157:15186	5905177	2	True				
ANR	5905200	IdentifierDecl	* best_trap = NULL		5905177	0					
ANR	5905201	IdentifierDeclType	gx_san_trap *		5905177	0					
ANR	5905202	Identifier	best_trap		5905177	1					
ANR	5905203	AssignmentExpression	* best_trap = NULL		5905177	2		=			
ANR	5905204	Identifier	NULL		5905177	0					
ANR	5905205	Identifier	NULL		5905177	1					
ANR	5905206	IdentifierDeclStatement	bool at_top = false ;	568:4:15192:15211	5905177	3	True				
ANR	5905207	IdentifierDecl	at_top = false		5905177	0					
ANR	5905208	IdentifierDeclType	bool		5905177	0					
ANR	5905209	Identifier	at_top		5905177	1					
ANR	5905210	AssignmentExpression	at_top = false		5905177	2		=			
ANR	5905211	Identifier	false		5905177	0					
ANR	5905212	Identifier	false		5905177	1					
ANR	5905213	IdentifierDeclStatement	gx_san_sect sect ;	569:4:15217:15233	5905177	4	True				
ANR	5905214	IdentifierDecl	sect		5905177	0					
ANR	5905215	IdentifierDeclType	gx_san_sect		5905177	0					
ANR	5905216	Identifier	sect		5905177	1					
ANR	5905217	IdentifierDeclStatement	int code ;	570:4:15239:15247	5905177	5	True				
ANR	5905218	IdentifierDecl	code		5905177	0					
ANR	5905219	IdentifierDeclType	int		5905177	0					
ANR	5905220	Identifier	code		5905177	1					
ANR	5905221	ForStatement	for ( t = t0 ; ; t = t -> upper -> upper )		5905177	6					
ANR	5905222	ForInit	t = t0 ;	572:9:15259:15265	5905177	0	True				
ANR	5905223	AssignmentExpression	t = t0		5905177	0		=			
ANR	5905224	Identifier	t		5905177	0					
ANR	5905225	Identifier	t0		5905177	1					
ANR	5905226	AssignmentExpression	t = t -> upper -> upper	572:19:15269:15287	5905177	1	True	=			
ANR	5905227	Identifier	t		5905177	0					
ANR	5905228	PtrMemberAccess	t -> upper -> upper		5905177	1					
ANR	5905229	PtrMemberAccess	t -> upper		5905177	0					
ANR	5905230	Identifier	t		5905177	0					
ANR	5905231	Identifier	upper		5905177	1					
ANR	5905232	Identifier	upper		5905177	1					
ANR	5905233	CompoundStatement		8:40:208:208	5905177	2					
ANR	5905234	ExpressionStatement	w = t -> xrbot - t -> xlbot	573:8:15300:15323	5905177	0	True				
ANR	5905235	AssignmentExpression	w = t -> xrbot - t -> xlbot		5905177	0		=			
ANR	5905236	Identifier	w		5905177	0					
ANR	5905237	AdditiveExpression	t -> xrbot - t -> xlbot		5905177	1		-			
ANR	5905238	PtrMemberAccess	t -> xrbot		5905177	0					
ANR	5905239	Identifier	t		5905177	0					
ANR	5905240	Identifier	xrbot		5905177	1					
ANR	5905241	PtrMemberAccess	t -> xlbot		5905177	1					
ANR	5905242	Identifier	t		5905177	0					
ANR	5905243	Identifier	xlbot		5905177	1					
ANR	5905244	ExpressionStatement	wd = any_abs ( w - ave_width )	574:8:15333:15360	5905177	1	True				
ANR	5905245	AssignmentExpression	wd = any_abs ( w - ave_width )		5905177	0		=			
ANR	5905246	Identifier	wd		5905177	0					
ANR	5905247	CallExpression	any_abs ( w - ave_width )		5905177	1					
ANR	5905248	Callee	any_abs		5905177	0					
ANR	5905249	Identifier	any_abs		5905177	0					
ANR	5905250	ArgumentList	w - ave_width		5905177	1					
ANR	5905251	Argument	w - ave_width		5905177	0					
ANR	5905252	AdditiveExpression	w - ave_width		5905177	0		-			
ANR	5905253	Identifier	w		5905177	0					
ANR	5905254	Identifier	ave_width		5905177	1					
ANR	5905255	IfStatement	if ( w > 0 && wd < best_width_diff )		5905177	2					
ANR	5905256	Condition	w > 0 && wd < best_width_diff	575:12:15374:15402	5905177	0	True				
ANR	5905257	AndExpression	w > 0 && wd < best_width_diff		5905177	0		&&			
ANR	5905258	RelationalExpression	w > 0		5905177	0		>			
ANR	5905259	Identifier	w		5905177	0					
ANR	5905260	PrimaryExpression	0		5905177	1					
ANR	5905261	RelationalExpression	wd < best_width_diff		5905177	1		<			
ANR	5905262	Identifier	wd		5905177	0					
ANR	5905263	Identifier	best_width_diff		5905177	1					
ANR	5905264	CompoundStatement		11:43:323:323	5905177	1					
ANR	5905265	ExpressionStatement	best_width_diff = wd	576:12:15419:15439	5905177	0	True				
ANR	5905266	AssignmentExpression	best_width_diff = wd		5905177	0		=			
ANR	5905267	Identifier	best_width_diff		5905177	0					
ANR	5905268	Identifier	wd		5905177	1					
ANR	5905269	ExpressionStatement	best_trap = t	577:12:15453:15466	5905177	1	True				
ANR	5905270	AssignmentExpression	best_trap = t		5905177	0		=			
ANR	5905271	Identifier	best_trap		5905177	0					
ANR	5905272	Identifier	t		5905177	1					
ANR	5905273	IfStatement	if ( t == t1 )		5905177	3					
ANR	5905274	Condition	t == t1	579:12:15490:15496	5905177	0	True				
ANR	5905275	EqualityExpression	t == t1		5905177	0		==			
ANR	5905276	Identifier	t		5905177	0					
ANR	5905277	Identifier	t1		5905177	1					
ANR	5905278	BreakStatement	break ;	580:12:15511:15516	5905177	1	True				
ANR	5905279	ExpressionStatement	w = t -> xrtop - t -> xltop	582:4:15528:15551	5905177	7	True				
ANR	5905280	AssignmentExpression	w = t -> xrtop - t -> xltop		5905177	0		=			
ANR	5905281	Identifier	w		5905177	0					
ANR	5905282	AdditiveExpression	t -> xrtop - t -> xltop		5905177	1		-			
ANR	5905283	PtrMemberAccess	t -> xrtop		5905177	0					
ANR	5905284	Identifier	t		5905177	0					
ANR	5905285	Identifier	xrtop		5905177	1					
ANR	5905286	PtrMemberAccess	t -> xltop		5905177	1					
ANR	5905287	Identifier	t		5905177	0					
ANR	5905288	Identifier	xltop		5905177	1					
ANR	5905289	ExpressionStatement	wd = any_abs ( w - ave_width )	583:4:15557:15584	5905177	8	True				
ANR	5905290	AssignmentExpression	wd = any_abs ( w - ave_width )		5905177	0		=			
ANR	5905291	Identifier	wd		5905177	0					
ANR	5905292	CallExpression	any_abs ( w - ave_width )		5905177	1					
ANR	5905293	Callee	any_abs		5905177	0					
ANR	5905294	Identifier	any_abs		5905177	0					
ANR	5905295	ArgumentList	w - ave_width		5905177	1					
ANR	5905296	Argument	w - ave_width		5905177	0					
ANR	5905297	AdditiveExpression	w - ave_width		5905177	0		-			
ANR	5905298	Identifier	w		5905177	0					
ANR	5905299	Identifier	ave_width		5905177	1					
ANR	5905300	IfStatement	if ( w > 0 && wd < best_width_diff )		5905177	9					
ANR	5905301	Condition	w > 0 && wd < best_width_diff	584:8:15594:15622	5905177	0	True				
ANR	5905302	AndExpression	w > 0 && wd < best_width_diff		5905177	0		&&			
ANR	5905303	RelationalExpression	w > 0		5905177	0		>			
ANR	5905304	Identifier	w		5905177	0					
ANR	5905305	PrimaryExpression	0		5905177	1					
ANR	5905306	RelationalExpression	wd < best_width_diff		5905177	1		<			
ANR	5905307	Identifier	wd		5905177	0					
ANR	5905308	Identifier	best_width_diff		5905177	1					
ANR	5905309	CompoundStatement		20:39:543:543	5905177	1					
ANR	5905310	ExpressionStatement	best_width_diff = wd	585:8:15635:15655	5905177	0	True				
ANR	5905311	AssignmentExpression	best_width_diff = wd		5905177	0		=			
ANR	5905312	Identifier	best_width_diff		5905177	0					
ANR	5905313	Identifier	wd		5905177	1					
ANR	5905314	ExpressionStatement	best_trap = t	586:8:15665:15678	5905177	1	True				
ANR	5905315	AssignmentExpression	best_trap = t		5905177	0		=			
ANR	5905316	Identifier	best_trap		5905177	0					
ANR	5905317	Identifier	t		5905177	1					
ANR	5905318	ExpressionStatement	at_top = true	587:8:15688:15701	5905177	2	True				
ANR	5905319	AssignmentExpression	at_top = true		5905177	0		=			
ANR	5905320	Identifier	at_top		5905177	0					
ANR	5905321	Identifier	true		5905177	1					
ANR	5905322	IfStatement	if ( best_trap != NULL )		5905177	10					
ANR	5905323	Condition	best_trap != NULL	589:8:15717:15733	5905177	0	True				
ANR	5905324	EqualityExpression	best_trap != NULL		5905177	0		!=			
ANR	5905325	Identifier	best_trap		5905177	0					
ANR	5905326	Identifier	NULL		5905177	1					
ANR	5905327	CompoundStatement		25:27:654:654	5905177	1					
ANR	5905328	ExpressionStatement	sect . yl = at_top ? best_trap -> ytop : best_trap -> ybot	591:8:15807:15859	5905177	0	True				
ANR	5905329	AssignmentExpression	sect . yl = at_top ? best_trap -> ytop : best_trap -> ybot		5905177	0		=			
ANR	5905330	MemberAccess	sect . yl		5905177	0					
ANR	5905331	Identifier	sect		5905177	0					
ANR	5905332	Identifier	yl		5905177	1					
ANR	5905333	ConditionalExpression	at_top ? best_trap -> ytop : best_trap -> ybot		5905177	1					
ANR	5905334	Condition	at_top		5905177	0					
ANR	5905335	Identifier	at_top		5905177	0					
ANR	5905336	PtrMemberAccess	best_trap -> ytop		5905177	1					
ANR	5905337	Identifier	best_trap		5905177	0					
ANR	5905338	Identifier	ytop		5905177	1					
ANR	5905339	PtrMemberAccess	best_trap -> ybot		5905177	2					
ANR	5905340	Identifier	best_trap		5905177	0					
ANR	5905341	Identifier	ybot		5905177	1					
ANR	5905342	ExpressionStatement	sect . yr = sect . yl	592:8:15869:15886	5905177	1	True				
ANR	5905343	AssignmentExpression	sect . yr = sect . yl		5905177	0		=			
ANR	5905344	MemberAccess	sect . yr		5905177	0					
ANR	5905345	Identifier	sect		5905177	0					
ANR	5905346	Identifier	yr		5905177	1					
ANR	5905347	MemberAccess	sect . yl		5905177	1					
ANR	5905348	Identifier	sect		5905177	0					
ANR	5905349	Identifier	yl		5905177	1					
ANR	5905350	ExpressionStatement	sect . xl = at_top ? best_trap -> xltop : best_trap -> xlbot	593:8:15896:15950	5905177	2	True				
ANR	5905351	AssignmentExpression	sect . xl = at_top ? best_trap -> xltop : best_trap -> xlbot		5905177	0		=			
ANR	5905352	MemberAccess	sect . xl		5905177	0					
ANR	5905353	Identifier	sect		5905177	0					
ANR	5905354	Identifier	xl		5905177	1					
ANR	5905355	ConditionalExpression	at_top ? best_trap -> xltop : best_trap -> xlbot		5905177	1					
ANR	5905356	Condition	at_top		5905177	0					
ANR	5905357	Identifier	at_top		5905177	0					
ANR	5905358	PtrMemberAccess	best_trap -> xltop		5905177	1					
ANR	5905359	Identifier	best_trap		5905177	0					
ANR	5905360	Identifier	xltop		5905177	1					
ANR	5905361	PtrMemberAccess	best_trap -> xlbot		5905177	2					
ANR	5905362	Identifier	best_trap		5905177	0					
ANR	5905363	Identifier	xlbot		5905177	1					
ANR	5905364	ExpressionStatement	sect . xr = at_top ? best_trap -> xrtop : best_trap -> xrbot	594:8:15960:16014	5905177	3	True				
ANR	5905365	AssignmentExpression	sect . xr = at_top ? best_trap -> xrtop : best_trap -> xrbot		5905177	0		=			
ANR	5905366	MemberAccess	sect . xr		5905177	0					
ANR	5905367	Identifier	sect		5905177	0					
ANR	5905368	Identifier	xr		5905177	1					
ANR	5905369	ConditionalExpression	at_top ? best_trap -> xrtop : best_trap -> xrbot		5905177	1					
ANR	5905370	Condition	at_top		5905177	0					
ANR	5905371	Identifier	at_top		5905177	0					
ANR	5905372	PtrMemberAccess	best_trap -> xrtop		5905177	1					
ANR	5905373	Identifier	best_trap		5905177	0					
ANR	5905374	Identifier	xrtop		5905177	1					
ANR	5905375	PtrMemberAccess	best_trap -> xrbot		5905177	2					
ANR	5905376	Identifier	best_trap		5905177	0					
ANR	5905377	Identifier	xrbot		5905177	1					
ANR	5905378	ExpressionStatement	sect . l = best_trap -> l	595:8:16024:16045	5905177	4	True				
ANR	5905379	AssignmentExpression	sect . l = best_trap -> l		5905177	0		=			
ANR	5905380	MemberAccess	sect . l		5905177	0					
ANR	5905381	Identifier	sect		5905177	0					
ANR	5905382	Identifier	l		5905177	1					
ANR	5905383	PtrMemberAccess	best_trap -> l		5905177	1					
ANR	5905384	Identifier	best_trap		5905177	0					
ANR	5905385	Identifier	l		5905177	1					
ANR	5905386	ExpressionStatement	sect . r = best_trap -> r	596:8:16055:16076	5905177	5	True				
ANR	5905387	AssignmentExpression	sect . r = best_trap -> r		5905177	0		=			
ANR	5905388	MemberAccess	sect . r		5905177	0					
ANR	5905389	Identifier	sect		5905177	0					
ANR	5905390	Identifier	r		5905177	1					
ANR	5905391	PtrMemberAccess	best_trap -> r		5905177	1					
ANR	5905392	Identifier	best_trap		5905177	0					
ANR	5905393	Identifier	r		5905177	1					
ANR	5905394	ExpressionStatement	"code = handler ( client_data , & sect )"	597:8:16086:16120	5905177	6	True				
ANR	5905395	AssignmentExpression	"code = handler ( client_data , & sect )"		5905177	0		=			
ANR	5905396	Identifier	code		5905177	0					
ANR	5905397	CallExpression	"handler ( client_data , & sect )"		5905177	1					
ANR	5905398	Callee	handler		5905177	0					
ANR	5905399	Identifier	handler		5905177	0					
ANR	5905400	ArgumentList	client_data		5905177	1					
ANR	5905401	Argument	client_data		5905177	0					
ANR	5905402	Identifier	client_data		5905177	0					
ANR	5905403	Argument	& sect		5905177	1					
ANR	5905404	UnaryOperationExpression	& sect		5905177	0					
ANR	5905405	UnaryOperator	&		5905177	0					
ANR	5905406	Identifier	sect		5905177	1					
ANR	5905407	IfStatement	if ( code < 0 )		5905177	7					
ANR	5905408	Condition	code < 0	598:12:16134:16141	5905177	0	True				
ANR	5905409	RelationalExpression	code < 0		5905177	0		<			
ANR	5905410	Identifier	code		5905177	0					
ANR	5905411	PrimaryExpression	0		5905177	1					
ANR	5905412	ReturnStatement	return code ;	599:12:16156:16167	5905177	1	True				
ANR	5905413	Identifier	code		5905177	0					
ANR	5905414	ReturnStatement	return 0 ;	601:4:16179:16187	5905177	11	True				
ANR	5905415	PrimaryExpression	0		5905177	0					
ANR	5905416	ReturnType	static int		5905177	1					
ANR	5905417	Identifier	hint_by_trap		5905177	2					
ANR	5905418	ParameterList	"gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		5905177	3					
ANR	5905419	Parameter	gx_device_spot_analyzer * padev	562:13:14903:14932	5905177	0	True				
ANR	5905420	ParameterType	gx_device_spot_analyzer *		5905177	0					
ANR	5905421	Identifier	padev		5905177	1					
ANR	5905422	Parameter	int side_mask	562:45:14935:14947	5905177	1	True				
ANR	5905423	ParameterType	int		5905177	0					
ANR	5905424	Identifier	side_mask		5905177	1					
ANR	5905425	Parameter	void * client_data	563:4:14954:14970	5905177	2	True				
ANR	5905426	ParameterType	void *		5905177	0					
ANR	5905427	Identifier	client_data		5905177	1					
ANR	5905428	Parameter	gx_san_trap * t0	563:23:14973:14987	5905177	3	True				
ANR	5905429	ParameterType	gx_san_trap *		5905177	0					
ANR	5905430	Identifier	t0		5905177	1					
ANR	5905431	Parameter	gx_san_trap * t1	563:40:14990:15004	5905177	4	True				
ANR	5905432	ParameterType	gx_san_trap *		5905177	0					
ANR	5905433	Identifier	t1		5905177	1					
ANR	5905434	Parameter	double ave_width	563:57:15007:15022	5905177	5	True				
ANR	5905435	ParameterType	double		5905177	0					
ANR	5905436	Identifier	ave_width		5905177	1					
ANR	5905437	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	564:4:15029:15078	5905177	6	True				
ANR	5905438	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		5905177	0					
ANR	5905439	Identifier	handler		5905177	1					
ANR	5905440	CFGEntryNode	ENTRY		5905177		True				
ANR	5905441	CFGExitNode	EXIT		5905177		True				
ANR	5905442	InfiniteForNode	true		5905177		True				
ANR	5905443	Symbol	client_data		5905177						
ANR	5905444	Symbol	t -> xrtop		5905177						
ANR	5905445	Symbol	handler		5905177						
ANR	5905446	Symbol	sect . xr		5905177						
ANR	5905447	Symbol	code		5905177						
ANR	5905448	Symbol	sect . l		5905177						
ANR	5905449	Symbol	t -> xlbot		5905177						
ANR	5905450	Symbol	best_trap -> xltop		5905177						
ANR	5905451	Symbol	best_trap -> ybot		5905177						
ANR	5905452	Symbol	t -> xltop		5905177						
ANR	5905453	Symbol	sect . xl		5905177						
ANR	5905454	Symbol	wd		5905177						
ANR	5905455	Symbol	best_width_diff		5905177						
ANR	5905456	Symbol	padev		5905177						
ANR	5905457	Symbol	best_trap -> xrtop		5905177						
ANR	5905458	Symbol	* * t		5905177						
ANR	5905459	Symbol	best_trap -> ytop		5905177						
ANR	5905460	Symbol	any_abs		5905177						
ANR	5905461	Symbol	side_mask		5905177						
ANR	5905462	Symbol	at_top		5905177						
ANR	5905463	Symbol	t -> xrbot		5905177						
ANR	5905464	Symbol	t -> upper -> upper		5905177						
ANR	5905465	Symbol	sect . yr		5905177						
ANR	5905466	Symbol	NULL		5905177						
ANR	5905467	Symbol	best_trap -> xrbot		5905177						
ANR	5905468	Symbol	false		5905177						
ANR	5905469	Symbol	sect . yl		5905177						
ANR	5905470	Symbol	& sect		5905177						
ANR	5905471	Symbol	best_trap		5905177						
ANR	5905472	Symbol	t -> upper		5905177						
ANR	5905473	Symbol	best_trap -> xlbot		5905177						
ANR	5905474	Symbol	t		5905177						
ANR	5905475	Symbol	sect		5905177						
ANR	5905476	Symbol	best_trap -> l		5905177						
ANR	5905477	Symbol	w		5905177						
ANR	5905478	Symbol	true		5905177						
ANR	5905479	Symbol	best_trap -> r		5905177						
ANR	5905480	Symbol	t0		5905177						
ANR	5905481	Symbol	t1		5905177						
ANR	5905482	Symbol	* t -> upper		5905177						
ANR	5905483	Symbol	sect . r		5905177						
ANR	5905484	Symbol	* t		5905177						
ANR	5905485	Symbol	* best_trap		5905177						
ANR	5905486	Symbol	ave_width		5905177						
ANR	5905487	Function	choose_by_vector	604:0:16192:16732							
ANR	5905488	FunctionDef	"choose_by_vector (fixed x0 , fixed y0 , fixed x1 , fixed y1 , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y)"		5905487	0					
ANR	5905489	CompoundStatement		607:0:16382:16732	5905487	0					
ANR	5905490	IfStatement	if ( y0 != y1 )		5905487	0					
ANR	5905491	Condition	y0 != y1	608:8:16392:16399	5905487	0	True				
ANR	5905492	EqualityExpression	y0 != y1		5905487	0		!=			
ANR	5905493	Identifier	y0		5905487	0					
ANR	5905494	Identifier	y1		5905487	1					
ANR	5905495	CompoundStatement		4:8:93:120	5905487	1					
ANR	5905496	IdentifierDeclStatement	double t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 ) ;	609:8:16412:16466	5905487	0	True				
ANR	5905497	IdentifierDecl	t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		5905487	0					
ANR	5905498	IdentifierDeclType	double		5905487	0					
ANR	5905499	Identifier	t		5905487	1					
ANR	5905500	AssignmentExpression	t = ( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		5905487	2		=			
ANR	5905501	Identifier	t		5905487	0					
ANR	5905502	MultiplicativeExpression	( double ) any_abs ( x1 - x0 ) / any_abs ( y1 - y0 )		5905487	1		/			
ANR	5905503	CastExpression	( double ) any_abs ( x1 - x0 )		5905487	0					
ANR	5905504	CastTarget	double		5905487	0					
ANR	5905505	CallExpression	any_abs ( x1 - x0 )		5905487	1					
ANR	5905506	Callee	any_abs		5905487	0					
ANR	5905507	Identifier	any_abs		5905487	0					
ANR	5905508	ArgumentList	x1 - x0		5905487	1					
ANR	5905509	Argument	x1 - x0		5905487	0					
ANR	5905510	AdditiveExpression	x1 - x0		5905487	0		-			
ANR	5905511	Identifier	x1		5905487	0					
ANR	5905512	Identifier	x0		5905487	1					
ANR	5905513	CallExpression	any_abs ( y1 - y0 )		5905487	1					
ANR	5905514	Callee	any_abs		5905487	0					
ANR	5905515	Identifier	any_abs		5905487	0					
ANR	5905516	ArgumentList	y1 - y0		5905487	1					
ANR	5905517	Argument	y1 - y0		5905487	0					
ANR	5905518	AdditiveExpression	y1 - y0		5905487	0		-			
ANR	5905519	Identifier	y1		5905487	0					
ANR	5905520	Identifier	y0		5905487	1					
ANR	5905521	IdentifierDeclStatement	double l = any_abs ( y1 - y0 ) ;	610:8:16476:16503	5905487	1	True				
ANR	5905522	IdentifierDecl	l = any_abs ( y1 - y0 )		5905487	0					
ANR	5905523	IdentifierDeclType	double		5905487	0					
ANR	5905524	Identifier	l		5905487	1					
ANR	5905525	AssignmentExpression	l = any_abs ( y1 - y0 )		5905487	2		=			
ANR	5905526	Identifier	l		5905487	0					
ANR	5905527	CallExpression	any_abs ( y1 - y0 )		5905487	1					
ANR	5905528	Callee	any_abs		5905487	0					
ANR	5905529	Identifier	any_abs		5905487	0					
ANR	5905530	ArgumentList	y1 - y0		5905487	1					
ANR	5905531	Argument	y1 - y0		5905487	0					
ANR	5905532	AdditiveExpression	y1 - y0		5905487	0		-			
ANR	5905533	Identifier	y1		5905487	0					
ANR	5905534	Identifier	y0		5905487	1					
ANR	5905535	IfStatement	if ( * slope > t || ( * slope == t && l > * len ) )		5905487	2					
ANR	5905536	Condition	* slope > t || ( * slope == t && l > * len )	612:12:16544:16582	5905487	0	True				
ANR	5905537	OrExpression	* slope > t || ( * slope == t && l > * len )		5905487	0		||			
ANR	5905538	RelationalExpression	* slope > t		5905487	0		>			
ANR	5905539	UnaryOperationExpression	* slope		5905487	0					
ANR	5905540	UnaryOperator	*		5905487	0					
ANR	5905541	Identifier	slope		5905487	1					
ANR	5905542	Identifier	t		5905487	1					
ANR	5905543	AndExpression	* slope == t && l > * len		5905487	1		&&			
ANR	5905544	EqualityExpression	* slope == t		5905487	0		==			
ANR	5905545	UnaryOperationExpression	* slope		5905487	0					
ANR	5905546	UnaryOperator	*		5905487	0					
ANR	5905547	Identifier	slope		5905487	1					
ANR	5905548	Identifier	t		5905487	1					
ANR	5905549	RelationalExpression	l > * len		5905487	1		>			
ANR	5905550	Identifier	l		5905487	0					
ANR	5905551	UnaryOperationExpression	* len		5905487	1					
ANR	5905552	UnaryOperator	*		5905487	0					
ANR	5905553	Identifier	len		5905487	1					
ANR	5905554	CompoundStatement		6:53:202:202	5905487	1					
ANR	5905555	ExpressionStatement	* slope = t	613:12:16599:16609	5905487	0	True				
ANR	5905556	AssignmentExpression	* slope = t		5905487	0		=			
ANR	5905557	UnaryOperationExpression	* slope		5905487	0					
ANR	5905558	UnaryOperator	*		5905487	0					
ANR	5905559	Identifier	slope		5905487	1					
ANR	5905560	Identifier	t		5905487	1					
ANR	5905561	ExpressionStatement	* len = l	614:12:16623:16631	5905487	1	True				
ANR	5905562	AssignmentExpression	* len = l		5905487	0		=			
ANR	5905563	UnaryOperationExpression	* len		5905487	0					
ANR	5905564	UnaryOperator	*		5905487	0					
ANR	5905565	Identifier	len		5905487	1					
ANR	5905566	Identifier	l		5905487	1					
ANR	5905567	ExpressionStatement	* store_segm = s	615:12:16645:16660	5905487	2	True				
ANR	5905568	AssignmentExpression	* store_segm = s		5905487	0		=			
ANR	5905569	UnaryOperationExpression	* store_segm		5905487	0					
ANR	5905570	UnaryOperator	*		5905487	0					
ANR	5905571	Identifier	store_segm		5905487	1					
ANR	5905572	Identifier	s		5905487	1					
ANR	5905573	ExpressionStatement	* store_x = x1	616:12:16674:16687	5905487	3	True				
ANR	5905574	AssignmentExpression	* store_x = x1		5905487	0		=			
ANR	5905575	UnaryOperationExpression	* store_x		5905487	0					
ANR	5905576	UnaryOperator	*		5905487	0					
ANR	5905577	Identifier	store_x		5905487	1					
ANR	5905578	Identifier	x1		5905487	1					
ANR	5905579	ExpressionStatement	* store_y = y1	617:12:16701:16714	5905487	4	True				
ANR	5905580	AssignmentExpression	* store_y = y1		5905487	0		=			
ANR	5905581	UnaryOperationExpression	* store_y		5905487	0					
ANR	5905582	UnaryOperator	*		5905487	0					
ANR	5905583	Identifier	store_y		5905487	1					
ANR	5905584	Identifier	y1		5905487	1					
ANR	5905585	ReturnType	static inline void		5905487	1					
ANR	5905586	Identifier	choose_by_vector		5905487	2					
ANR	5905587	ParameterList	"fixed x0 , fixed y0 , fixed x1 , fixed y1 , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y"		5905487	3					
ANR	5905588	Parameter	fixed x0	605:17:16228:16235	5905487	0	True				
ANR	5905589	ParameterType	fixed		5905487	0					
ANR	5905590	Identifier	x0		5905487	1					
ANR	5905591	Parameter	fixed y0	605:27:16238:16245	5905487	1	True				
ANR	5905592	ParameterType	fixed		5905487	0					
ANR	5905593	Identifier	y0		5905487	1					
ANR	5905594	Parameter	fixed x1	605:37:16248:16255	5905487	2	True				
ANR	5905595	ParameterType	fixed		5905487	0					
ANR	5905596	Identifier	x1		5905487	1					
ANR	5905597	Parameter	fixed y1	605:47:16258:16265	5905487	3	True				
ANR	5905598	ParameterType	fixed		5905487	0					
ANR	5905599	Identifier	y1		5905487	1					
ANR	5905600	Parameter	const segment * s	605:57:16268:16283	5905487	4	True				
ANR	5905601	ParameterType	const segment *		5905487	0					
ANR	5905602	Identifier	s		5905487	1					
ANR	5905603	Parameter	double * slope	606:8:16294:16306	5905487	5	True				
ANR	5905604	ParameterType	double *		5905487	0					
ANR	5905605	Identifier	slope		5905487	1					
ANR	5905606	Parameter	double * len	606:23:16309:16319	5905487	6	True				
ANR	5905607	ParameterType	double *		5905487	0					
ANR	5905608	Identifier	len		5905487	1					
ANR	5905609	Parameter	const segment * * store_segm	606:36:16322:16347	5905487	7	True				
ANR	5905610	ParameterType	const segment * *		5905487	0					
ANR	5905611	Identifier	store_segm		5905487	1					
ANR	5905612	Parameter	fixed * store_x	606:64:16350:16363	5905487	8	True				
ANR	5905613	ParameterType	fixed *		5905487	0					
ANR	5905614	Identifier	store_x		5905487	1					
ANR	5905615	Parameter	fixed * store_y	606:80:16366:16379	5905487	9	True				
ANR	5905616	ParameterType	fixed *		5905487	0					
ANR	5905617	Identifier	store_y		5905487	1					
ANR	5905618	CFGEntryNode	ENTRY		5905487		True				
ANR	5905619	CFGExitNode	EXIT		5905487		True				
ANR	5905620	Symbol	* store_segm		5905487						
ANR	5905621	Symbol	store_segm		5905487						
ANR	5905622	Symbol	store_x		5905487						
ANR	5905623	Symbol	store_y		5905487						
ANR	5905624	Symbol	slope		5905487						
ANR	5905625	Symbol	l		5905487						
ANR	5905626	Symbol	s		5905487						
ANR	5905627	Symbol	len		5905487						
ANR	5905628	Symbol	t		5905487						
ANR	5905629	Symbol	* store_x		5905487						
ANR	5905630	Symbol	* store_y		5905487						
ANR	5905631	Symbol	y0		5905487						
ANR	5905632	Symbol	x0		5905487						
ANR	5905633	Symbol	y1		5905487						
ANR	5905634	Symbol	any_abs		5905487						
ANR	5905635	Symbol	x1		5905487						
ANR	5905636	Symbol	* slope		5905487						
ANR	5905637	Symbol	* len		5905487						
ANR	5905638	Function	choose_by_tangent	622:0:16735:17471							
ANR	5905639	FunctionDef	"choose_by_tangent (const segment * p , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y , fixed ybot , fixed ytop)"		5905638	0					
ANR	5905640	CompoundStatement		626:0:16936:17471	5905638	0					
ANR	5905641	IfStatement	if ( s -> type == s_curve )		5905638	0					
ANR	5905642	Condition	s -> type == s_curve	627:8:16946:16963	5905638	0	True				
ANR	5905643	EqualityExpression	s -> type == s_curve		5905638	0		==			
ANR	5905644	PtrMemberAccess	s -> type		5905638	0					
ANR	5905645	Identifier	s		5905638	0					
ANR	5905646	Identifier	type		5905638	1					
ANR	5905647	Identifier	s_curve		5905638	1					
ANR	5905648	CompoundStatement		3:8:39:88	5905638	1					
ANR	5905649	IdentifierDeclStatement	const curve_segment * c = ( const curve_segment * ) s ;	628:8:16976:17025	5905638	0	True				
ANR	5905650	IdentifierDecl	* c = ( const curve_segment * ) s		5905638	0					
ANR	5905651	IdentifierDeclType	const curve_segment *		5905638	0					
ANR	5905652	Identifier	c		5905638	1					
ANR	5905653	AssignmentExpression	* c = ( const curve_segment * ) s		5905638	2		=			
ANR	5905654	Identifier	c		5905638	0					
ANR	5905655	CastExpression	( const curve_segment * ) s		5905638	1					
ANR	5905656	CastTarget	const curve_segment *		5905638	0					
ANR	5905657	Identifier	s		5905638	1					
ANR	5905658	IfStatement	if ( ybot <= p -> pt . y && p -> pt . y <= ytop )		5905638	1					
ANR	5905659	Condition	ybot <= p -> pt . y && p -> pt . y <= ytop	629:12:17039:17072	5905638	0	True				
ANR	5905660	AndExpression	ybot <= p -> pt . y && p -> pt . y <= ytop		5905638	0		&&			
ANR	5905661	RelationalExpression	ybot <= p -> pt . y		5905638	0		<=			
ANR	5905662	Identifier	ybot		5905638	0					
ANR	5905663	MemberAccess	p -> pt . y		5905638	1					
ANR	5905664	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905665	Identifier	p		5905638	0					
ANR	5905666	Identifier	pt		5905638	1					
ANR	5905667	Identifier	y		5905638	1					
ANR	5905668	RelationalExpression	p -> pt . y <= ytop		5905638	1		<=			
ANR	5905669	MemberAccess	p -> pt . y		5905638	0					
ANR	5905670	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905671	Identifier	p		5905638	0					
ANR	5905672	Identifier	pt		5905638	1					
ANR	5905673	Identifier	y		5905638	1					
ANR	5905674	Identifier	ytop		5905638	1					
ANR	5905675	ExpressionStatement	"choose_by_vector ( c -> p1 . x , c -> p1 . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"	630:12:17087:17184	5905638	1	True				
ANR	5905676	CallExpression	"choose_by_vector ( c -> p1 . x , c -> p1 . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"		5905638	0					
ANR	5905677	Callee	choose_by_vector		5905638	0					
ANR	5905678	Identifier	choose_by_vector		5905638	0					
ANR	5905679	ArgumentList	c -> p1 . x		5905638	1					
ANR	5905680	Argument	c -> p1 . x		5905638	0					
ANR	5905681	MemberAccess	c -> p1 . x		5905638	0					
ANR	5905682	PtrMemberAccess	c -> p1		5905638	0					
ANR	5905683	Identifier	c		5905638	0					
ANR	5905684	Identifier	p1		5905638	1					
ANR	5905685	Identifier	x		5905638	1					
ANR	5905686	Argument	c -> p1 . y		5905638	1					
ANR	5905687	MemberAccess	c -> p1 . y		5905638	0					
ANR	5905688	PtrMemberAccess	c -> p1		5905638	0					
ANR	5905689	Identifier	c		5905638	0					
ANR	5905690	Identifier	p1		5905638	1					
ANR	5905691	Identifier	y		5905638	1					
ANR	5905692	Argument	p -> pt . x		5905638	2					
ANR	5905693	MemberAccess	p -> pt . x		5905638	0					
ANR	5905694	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905695	Identifier	p		5905638	0					
ANR	5905696	Identifier	pt		5905638	1					
ANR	5905697	Identifier	x		5905638	1					
ANR	5905698	Argument	p -> pt . y		5905638	3					
ANR	5905699	MemberAccess	p -> pt . y		5905638	0					
ANR	5905700	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905701	Identifier	p		5905638	0					
ANR	5905702	Identifier	pt		5905638	1					
ANR	5905703	Identifier	y		5905638	1					
ANR	5905704	Argument	s		5905638	4					
ANR	5905705	Identifier	s		5905638	0					
ANR	5905706	Argument	slope		5905638	5					
ANR	5905707	Identifier	slope		5905638	0					
ANR	5905708	Argument	len		5905638	6					
ANR	5905709	Identifier	len		5905638	0					
ANR	5905710	Argument	store_segm		5905638	7					
ANR	5905711	Identifier	store_segm		5905638	0					
ANR	5905712	Argument	store_x		5905638	8					
ANR	5905713	Identifier	store_x		5905638	0					
ANR	5905714	Argument	store_y		5905638	9					
ANR	5905715	Identifier	store_y		5905638	0					
ANR	5905716	IfStatement	if ( ybot <= s -> pt . y && s -> pt . y <= ytop )		5905638	2					
ANR	5905717	Condition	ybot <= s -> pt . y && s -> pt . y <= ytop	631:12:17198:17231	5905638	0	True				
ANR	5905718	AndExpression	ybot <= s -> pt . y && s -> pt . y <= ytop		5905638	0		&&			
ANR	5905719	RelationalExpression	ybot <= s -> pt . y		5905638	0		<=			
ANR	5905720	Identifier	ybot		5905638	0					
ANR	5905721	MemberAccess	s -> pt . y		5905638	1					
ANR	5905722	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905723	Identifier	s		5905638	0					
ANR	5905724	Identifier	pt		5905638	1					
ANR	5905725	Identifier	y		5905638	1					
ANR	5905726	RelationalExpression	s -> pt . y <= ytop		5905638	1		<=			
ANR	5905727	MemberAccess	s -> pt . y		5905638	0					
ANR	5905728	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905729	Identifier	s		5905638	0					
ANR	5905730	Identifier	pt		5905638	1					
ANR	5905731	Identifier	y		5905638	1					
ANR	5905732	Identifier	ytop		5905638	1					
ANR	5905733	ExpressionStatement	"choose_by_vector ( c -> p2 . x , c -> p2 . y , s -> pt . x , s -> pt . y , s , slope , len , store_segm , store_x , store_y )"	632:12:17246:17343	5905638	1	True				
ANR	5905734	CallExpression	"choose_by_vector ( c -> p2 . x , c -> p2 . y , s -> pt . x , s -> pt . y , s , slope , len , store_segm , store_x , store_y )"		5905638	0					
ANR	5905735	Callee	choose_by_vector		5905638	0					
ANR	5905736	Identifier	choose_by_vector		5905638	0					
ANR	5905737	ArgumentList	c -> p2 . x		5905638	1					
ANR	5905738	Argument	c -> p2 . x		5905638	0					
ANR	5905739	MemberAccess	c -> p2 . x		5905638	0					
ANR	5905740	PtrMemberAccess	c -> p2		5905638	0					
ANR	5905741	Identifier	c		5905638	0					
ANR	5905742	Identifier	p2		5905638	1					
ANR	5905743	Identifier	x		5905638	1					
ANR	5905744	Argument	c -> p2 . y		5905638	1					
ANR	5905745	MemberAccess	c -> p2 . y		5905638	0					
ANR	5905746	PtrMemberAccess	c -> p2		5905638	0					
ANR	5905747	Identifier	c		5905638	0					
ANR	5905748	Identifier	p2		5905638	1					
ANR	5905749	Identifier	y		5905638	1					
ANR	5905750	Argument	s -> pt . x		5905638	2					
ANR	5905751	MemberAccess	s -> pt . x		5905638	0					
ANR	5905752	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905753	Identifier	s		5905638	0					
ANR	5905754	Identifier	pt		5905638	1					
ANR	5905755	Identifier	x		5905638	1					
ANR	5905756	Argument	s -> pt . y		5905638	3					
ANR	5905757	MemberAccess	s -> pt . y		5905638	0					
ANR	5905758	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905759	Identifier	s		5905638	0					
ANR	5905760	Identifier	pt		5905638	1					
ANR	5905761	Identifier	y		5905638	1					
ANR	5905762	Argument	s		5905638	4					
ANR	5905763	Identifier	s		5905638	0					
ANR	5905764	Argument	slope		5905638	5					
ANR	5905765	Identifier	slope		5905638	0					
ANR	5905766	Argument	len		5905638	6					
ANR	5905767	Identifier	len		5905638	0					
ANR	5905768	Argument	store_segm		5905638	7					
ANR	5905769	Identifier	store_segm		5905638	0					
ANR	5905770	Argument	store_x		5905638	8					
ANR	5905771	Identifier	store_x		5905638	0					
ANR	5905772	Argument	store_y		5905638	9					
ANR	5905773	Identifier	store_y		5905638	0					
ANR	5905774	ElseStatement	else		5905638	0					
ANR	5905775	CompoundStatement		8:11:419:419	5905638	0					
ANR	5905776	ExpressionStatement	"choose_by_vector ( s -> pt . x , s -> pt . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"	634:8:17366:17463	5905638	0	True				
ANR	5905777	CallExpression	"choose_by_vector ( s -> pt . x , s -> pt . y , p -> pt . x , p -> pt . y , s , slope , len , store_segm , store_x , store_y )"		5905638	0					
ANR	5905778	Callee	choose_by_vector		5905638	0					
ANR	5905779	Identifier	choose_by_vector		5905638	0					
ANR	5905780	ArgumentList	s -> pt . x		5905638	1					
ANR	5905781	Argument	s -> pt . x		5905638	0					
ANR	5905782	MemberAccess	s -> pt . x		5905638	0					
ANR	5905783	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905784	Identifier	s		5905638	0					
ANR	5905785	Identifier	pt		5905638	1					
ANR	5905786	Identifier	x		5905638	1					
ANR	5905787	Argument	s -> pt . y		5905638	1					
ANR	5905788	MemberAccess	s -> pt . y		5905638	0					
ANR	5905789	PtrMemberAccess	s -> pt		5905638	0					
ANR	5905790	Identifier	s		5905638	0					
ANR	5905791	Identifier	pt		5905638	1					
ANR	5905792	Identifier	y		5905638	1					
ANR	5905793	Argument	p -> pt . x		5905638	2					
ANR	5905794	MemberAccess	p -> pt . x		5905638	0					
ANR	5905795	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905796	Identifier	p		5905638	0					
ANR	5905797	Identifier	pt		5905638	1					
ANR	5905798	Identifier	x		5905638	1					
ANR	5905799	Argument	p -> pt . y		5905638	3					
ANR	5905800	MemberAccess	p -> pt . y		5905638	0					
ANR	5905801	PtrMemberAccess	p -> pt		5905638	0					
ANR	5905802	Identifier	p		5905638	0					
ANR	5905803	Identifier	pt		5905638	1					
ANR	5905804	Identifier	y		5905638	1					
ANR	5905805	Argument	s		5905638	4					
ANR	5905806	Identifier	s		5905638	0					
ANR	5905807	Argument	slope		5905638	5					
ANR	5905808	Identifier	slope		5905638	0					
ANR	5905809	Argument	len		5905638	6					
ANR	5905810	Identifier	len		5905638	0					
ANR	5905811	Argument	store_segm		5905638	7					
ANR	5905812	Identifier	store_segm		5905638	0					
ANR	5905813	Argument	store_x		5905638	8					
ANR	5905814	Identifier	store_x		5905638	0					
ANR	5905815	Argument	store_y		5905638	9					
ANR	5905816	Identifier	store_y		5905638	0					
ANR	5905817	ReturnType	static inline void		5905638	1					
ANR	5905818	Identifier	choose_by_tangent		5905638	2					
ANR	5905819	ParameterList	"const segment * p , const segment * s , double * slope , double * len , const segment * * store_segm , fixed * store_x , fixed * store_y , fixed ybot , fixed ytop"		5905638	3					
ANR	5905820	Parameter	const segment * p	623:18:16772:16787	5905638	0	True				
ANR	5905821	ParameterType	const segment *		5905638	0					
ANR	5905822	Identifier	p		5905638	1					
ANR	5905823	Parameter	const segment * s	623:36:16790:16805	5905638	1	True				
ANR	5905824	ParameterType	const segment *		5905638	0					
ANR	5905825	Identifier	s		5905638	1					
ANR	5905826	Parameter	double * slope	624:8:16816:16828	5905638	2	True				
ANR	5905827	ParameterType	double *		5905638	0					
ANR	5905828	Identifier	slope		5905638	1					
ANR	5905829	Parameter	double * len	624:23:16831:16841	5905638	3	True				
ANR	5905830	ParameterType	double *		5905638	0					
ANR	5905831	Identifier	len		5905638	1					
ANR	5905832	Parameter	const segment * * store_segm	624:36:16844:16869	5905638	4	True				
ANR	5905833	ParameterType	const segment * *		5905638	0					
ANR	5905834	Identifier	store_segm		5905638	1					
ANR	5905835	Parameter	fixed * store_x	624:64:16872:16885	5905638	5	True				
ANR	5905836	ParameterType	fixed *		5905638	0					
ANR	5905837	Identifier	store_x		5905638	1					
ANR	5905838	Parameter	fixed * store_y	624:80:16888:16901	5905638	6	True				
ANR	5905839	ParameterType	fixed *		5905638	0					
ANR	5905840	Identifier	store_y		5905638	1					
ANR	5905841	Parameter	fixed ybot	625:8:16912:16921	5905638	7	True				
ANR	5905842	ParameterType	fixed		5905638	0					
ANR	5905843	Identifier	ybot		5905638	1					
ANR	5905844	Parameter	fixed ytop	625:20:16924:16933	5905638	8	True				
ANR	5905845	ParameterType	fixed		5905638	0					
ANR	5905846	Identifier	ytop		5905638	1					
ANR	5905847	CFGEntryNode	ENTRY		5905638		True				
ANR	5905848	CFGExitNode	EXIT		5905638		True				
ANR	5905849	Symbol	ytop		5905638						
ANR	5905850	Symbol	p -> pt		5905638						
ANR	5905851	Symbol	s_curve		5905638						
ANR	5905852	Symbol	len		5905638						
ANR	5905853	Symbol	ybot		5905638						
ANR	5905854	Symbol	s -> pt . x		5905638						
ANR	5905855	Symbol	c -> p2 . y		5905638						
ANR	5905856	Symbol	s -> pt . y		5905638						
ANR	5905857	Symbol	c -> p2 . x		5905638						
ANR	5905858	Symbol	c		5905638						
ANR	5905859	Symbol	store_segm		5905638						
ANR	5905860	Symbol	c -> p1		5905638						
ANR	5905861	Symbol	store_x		5905638						
ANR	5905862	Symbol	store_y		5905638						
ANR	5905863	Symbol	slope		5905638						
ANR	5905864	Symbol	c -> p1 . y		5905638						
ANR	5905865	Symbol	* c		5905638						
ANR	5905866	Symbol	p -> pt . x		5905638						
ANR	5905867	Symbol	p -> pt . y		5905638						
ANR	5905868	Symbol	c -> p1 . x		5905638						
ANR	5905869	Symbol	c -> p2		5905638						
ANR	5905870	Symbol	p		5905638						
ANR	5905871	Symbol	s		5905638						
ANR	5905872	Symbol	s -> pt		5905638						
ANR	5905873	Symbol	* p		5905638						
ANR	5905874	Symbol	* s		5905638						
ANR	5905875	Symbol	s -> type		5905638						
ANR	5905876	Function	upper_neighbour	638:0:17474:17928							
ANR	5905877	FunctionDef	"upper_neighbour (gx_san_trap * t0 , int left_right)"		5905876	0					
ANR	5905878	CompoundStatement		640:0:17544:17928	5905876	0					
ANR	5905879	IdentifierDeclStatement	"gx_san_trap_contact * cont = t0 -> upper , * c0 = cont , * c ;"	641:4:17550:17603	5905876	0	True				
ANR	5905880	IdentifierDecl	* cont = t0 -> upper		5905876	0					
ANR	5905881	IdentifierDeclType	gx_san_trap_contact *		5905876	0					
ANR	5905882	Identifier	cont		5905876	1					
ANR	5905883	AssignmentExpression	* cont = t0 -> upper		5905876	2		=			
ANR	5905884	Identifier	cont		5905876	0					
ANR	5905885	PtrMemberAccess	t0 -> upper		5905876	1					
ANR	5905886	Identifier	t0		5905876	0					
ANR	5905887	Identifier	upper		5905876	1					
ANR	5905888	IdentifierDecl	* c0 = cont		5905876	1					
ANR	5905889	IdentifierDeclType	gx_san_trap_contact *		5905876	0					
ANR	5905890	Identifier	c0		5905876	1					
ANR	5905891	AssignmentExpression	* c0 = cont		5905876	2		=			
ANR	5905892	Identifier	cont		5905876	0					
ANR	5905893	Identifier	cont		5905876	1					
ANR	5905894	IdentifierDecl	* c		5905876	2					
ANR	5905895	IdentifierDeclType	gx_san_trap_contact *		5905876	0					
ANR	5905896	Identifier	c		5905876	1					
ANR	5905897	IdentifierDeclStatement	fixed x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot ) ;	642:4:17609:17674	5905876	1	True				
ANR	5905898	IdentifierDecl	x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot )		5905876	0					
ANR	5905899	IdentifierDeclType	fixed		5905876	0					
ANR	5905900	Identifier	x		5905876	1					
ANR	5905901	AssignmentExpression	x = ( ! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot )		5905876	2		=			
ANR	5905902	Identifier	x		5905876	0					
ANR	5905903	ConditionalExpression	! left_right ? cont -> upper -> xlbot : cont -> upper -> xrbot		5905876	1					
ANR	5905904	Condition	! left_right		5905876	0					
ANR	5905905	UnaryOperationExpression	! left_right		5905876	0					
ANR	5905906	UnaryOperator	!		5905876	0					
ANR	5905907	Identifier	left_right		5905876	1					
ANR	5905908	PtrMemberAccess	cont -> upper -> xlbot		5905876	1					
ANR	5905909	PtrMemberAccess	cont -> upper		5905876	0					
ANR	5905910	Identifier	cont		5905876	0					
ANR	5905911	Identifier	upper		5905876	1					
ANR	5905912	Identifier	xlbot		5905876	1					
ANR	5905913	PtrMemberAccess	cont -> upper -> xrbot		5905876	2					
ANR	5905914	PtrMemberAccess	cont -> upper		5905876	0					
ANR	5905915	Identifier	cont		5905876	0					
ANR	5905916	Identifier	upper		5905876	1					
ANR	5905917	Identifier	xrbot		5905876	1					
ANR	5905918	ForStatement	for ( c = c0 -> next ; c != c0 ; c = c -> next )		5905876	2					
ANR	5905919	ForInit	c = c0 -> next ;	644:9:17686:17698	5905876	0	True				
ANR	5905920	AssignmentExpression	c = c0 -> next		5905876	0		=			
ANR	5905921	Identifier	c		5905876	0					
ANR	5905922	PtrMemberAccess	c0 -> next		5905876	1					
ANR	5905923	Identifier	c0		5905876	0					
ANR	5905924	Identifier	next		5905876	1					
ANR	5905925	Condition	c != c0	644:23:17700:17706	5905876	1	True				
ANR	5905926	EqualityExpression	c != c0		5905876	0		!=			
ANR	5905927	Identifier	c		5905876	0					
ANR	5905928	Identifier	c0		5905876	1					
ANR	5905929	AssignmentExpression	c = c -> next	644:32:17709:17719	5905876	2	True	=			
ANR	5905930	Identifier	c		5905876	0					
ANR	5905931	PtrMemberAccess	c -> next		5905876	1					
ANR	5905932	Identifier	c		5905876	0					
ANR	5905933	Identifier	next		5905876	1					
ANR	5905934	CompoundStatement		6:8:187:247	5905876	3					
ANR	5905935	IdentifierDeclStatement	fixed xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot ) ;	645:8:17732:17792	5905876	0	True				
ANR	5905936	IdentifierDecl	xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot )		5905876	0					
ANR	5905937	IdentifierDeclType	fixed		5905876	0					
ANR	5905938	Identifier	xx		5905876	1					
ANR	5905939	AssignmentExpression	xx = ( ! left_right ? c -> upper -> xlbot : c -> upper -> xrbot )		5905876	2		=			
ANR	5905940	Identifier	xx		5905876	0					
ANR	5905941	ConditionalExpression	! left_right ? c -> upper -> xlbot : c -> upper -> xrbot		5905876	1					
ANR	5905942	Condition	! left_right		5905876	0					
ANR	5905943	UnaryOperationExpression	! left_right		5905876	0					
ANR	5905944	UnaryOperator	!		5905876	0					
ANR	5905945	Identifier	left_right		5905876	1					
ANR	5905946	PtrMemberAccess	c -> upper -> xlbot		5905876	1					
ANR	5905947	PtrMemberAccess	c -> upper		5905876	0					
ANR	5905948	Identifier	c		5905876	0					
ANR	5905949	Identifier	upper		5905876	1					
ANR	5905950	Identifier	xlbot		5905876	1					
ANR	5905951	PtrMemberAccess	c -> upper -> xrbot		5905876	2					
ANR	5905952	PtrMemberAccess	c -> upper		5905876	0					
ANR	5905953	Identifier	c		5905876	0					
ANR	5905954	Identifier	upper		5905876	1					
ANR	5905955	Identifier	xrbot		5905876	1					
ANR	5905956	IfStatement	if ( ( xx - x ) * ( left_right * 2 - 1 ) > 0 )		5905876	1					
ANR	5905957	Condition	( xx - x ) * ( left_right * 2 - 1 ) > 0	647:12:17807:17841	5905876	0	True				
ANR	5905958	RelationalExpression	( xx - x ) * ( left_right * 2 - 1 ) > 0		5905876	0		>			
ANR	5905959	MultiplicativeExpression	( xx - x ) * ( left_right * 2 - 1 )		5905876	0		*			
ANR	5905960	AdditiveExpression	xx - x		5905876	0		-			
ANR	5905961	Identifier	xx		5905876	0					
ANR	5905962	Identifier	x		5905876	1					
ANR	5905963	AdditiveExpression	left_right * 2 - 1		5905876	1		-			
ANR	5905964	MultiplicativeExpression	left_right * 2		5905876	0		*			
ANR	5905965	Identifier	left_right		5905876	0					
ANR	5905966	PrimaryExpression	2		5905876	1					
ANR	5905967	PrimaryExpression	1		5905876	1					
ANR	5905968	PrimaryExpression	0		5905876	1					
ANR	5905969	CompoundStatement		8:49:299:299	5905876	1					
ANR	5905970	ExpressionStatement	cont = c	648:12:17858:17866	5905876	0	True				
ANR	5905971	AssignmentExpression	cont = c		5905876	0		=			
ANR	5905972	Identifier	cont		5905876	0					
ANR	5905973	Identifier	c		5905876	1					
ANR	5905974	ExpressionStatement	x = xx	649:12:17880:17886	5905876	1	True				
ANR	5905975	AssignmentExpression	x = xx		5905876	0		=			
ANR	5905976	Identifier	x		5905876	0					
ANR	5905977	Identifier	xx		5905876	1					
ANR	5905978	ReturnStatement	return cont -> upper ;	652:4:17908:17926	5905876	3	True				
ANR	5905979	PtrMemberAccess	cont -> upper		5905876	0					
ANR	5905980	Identifier	cont		5905876	0					
ANR	5905981	Identifier	upper		5905876	1					
ANR	5905982	ReturnType	static gx_san_trap *		5905876	1					
ANR	5905983	Identifier	upper_neighbour		5905876	2					
ANR	5905984	ParameterList	"gx_san_trap * t0 , int left_right"		5905876	3					
ANR	5905985	Parameter	gx_san_trap * t0	639:16:17511:17525	5905876	0	True				
ANR	5905986	ParameterType	gx_san_trap *		5905876	0					
ANR	5905987	Identifier	t0		5905876	1					
ANR	5905988	Parameter	int left_right	639:33:17528:17541	5905876	1	True				
ANR	5905989	ParameterType	int		5905876	0					
ANR	5905990	Identifier	left_right		5905876	1					
ANR	5905991	CFGEntryNode	ENTRY		5905876		True				
ANR	5905992	CFGExitNode	EXIT		5905876		True				
ANR	5905993	Symbol	xx		5905876						
ANR	5905994	Symbol	* t0		5905876						
ANR	5905995	Symbol	* c -> upper		5905876						
ANR	5905996	Symbol	cont -> upper		5905876						
ANR	5905997	Symbol	c		5905876						
ANR	5905998	Symbol	cont -> upper -> xlbot		5905876						
ANR	5905999	Symbol	* * c		5905876						
ANR	5906000	Symbol	c -> upper -> xrbot		5905876						
ANR	5906001	Symbol	* * cont		5905876						
ANR	5906002	Symbol	c0		5905876						
ANR	5906003	Symbol	* c		5905876						
ANR	5906004	Symbol	* c0		5905876						
ANR	5906005	Symbol	c -> next		5905876						
ANR	5906006	Symbol	c0 -> next		5905876						
ANR	5906007	Symbol	cont -> upper -> xrbot		5905876						
ANR	5906008	Symbol	* cont		5905876						
ANR	5906009	Symbol	c -> upper -> xlbot		5905876						
ANR	5906010	Symbol	* cont -> upper		5905876						
ANR	5906011	Symbol	x		5905876						
ANR	5906012	Symbol	t0		5905876						
ANR	5906013	Symbol	cont		5905876						
ANR	5906014	Symbol	t0 -> upper		5905876						
ANR	5906015	Symbol	c -> upper		5905876						
ANR	5906016	Symbol	left_right		5905876						
ANR	5906017	Function	hint_by_tangent	655:0:17931:20027							
ANR	5906018	FunctionDef	"hint_by_tangent (gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		5906017	0					
ANR	5906019	CompoundStatement		659:0:18136:20027	5906017	0					
ANR	5906020	IdentifierDeclStatement	gx_san_trap * t ;	659:3:18140:18154	5906017	0	True				
ANR	5906021	IdentifierDecl	* t		5906017	0					
ANR	5906022	IdentifierDeclType	gx_san_trap *		5906017	0					
ANR	5906023	Identifier	t		5906017	1					
ANR	5906024	IdentifierDeclStatement	gx_san_sect sect ;	660:4:18160:18176	5906017	1	True				
ANR	5906025	IdentifierDecl	sect		5906017	0					
ANR	5906026	IdentifierDeclType	gx_san_sect		5906017	0					
ANR	5906027	Identifier	sect		5906017	1					
ANR	5906028	IdentifierDeclStatement	"double slope0 = 0.2 , slope1 = slope0 , len0 = 0 , len1 = 0 ;"	661:4:18182:18238	5906017	2	True				
ANR	5906029	IdentifierDecl	slope0 = 0.2		5906017	0					
ANR	5906030	IdentifierDeclType	double		5906017	0					
ANR	5906031	Identifier	slope0		5906017	1					
ANR	5906032	AssignmentExpression	slope0 = 0.2		5906017	2		=			
ANR	5906033	Identifier	slope0		5906017	0					
ANR	5906034	PrimaryExpression	0.2		5906017	1					
ANR	5906035	IdentifierDecl	slope1 = slope0		5906017	1					
ANR	5906036	IdentifierDeclType	double		5906017	0					
ANR	5906037	Identifier	slope1		5906017	1					
ANR	5906038	AssignmentExpression	slope1 = slope0		5906017	2		=			
ANR	5906039	Identifier	slope0		5906017	0					
ANR	5906040	Identifier	slope0		5906017	1					
ANR	5906041	IdentifierDecl	len0 = 0		5906017	2					
ANR	5906042	IdentifierDeclType	double		5906017	0					
ANR	5906043	Identifier	len0		5906017	1					
ANR	5906044	AssignmentExpression	len0 = 0		5906017	2		=			
ANR	5906045	Identifier	len0		5906017	0					
ANR	5906046	PrimaryExpression	0		5906017	1					
ANR	5906047	IdentifierDecl	len1 = 0		5906017	3					
ANR	5906048	IdentifierDeclType	double		5906017	0					
ANR	5906049	Identifier	len1		5906017	1					
ANR	5906050	AssignmentExpression	len1 = 0		5906017	2		=			
ANR	5906051	Identifier	len1		5906017	0					
ANR	5906052	PrimaryExpression	0		5906017	1					
ANR	5906053	IdentifierDeclStatement	"const segment * s , * p ;"	662:4:18244:18264	5906017	3	True				
ANR	5906054	IdentifierDecl	* s		5906017	0					
ANR	5906055	IdentifierDeclType	const segment *		5906017	0					
ANR	5906056	Identifier	s		5906017	1					
ANR	5906057	IdentifierDecl	* p		5906017	1					
ANR	5906058	IdentifierDeclType	const segment *		5906017	0					
ANR	5906059	Identifier	p		5906017	1					
ANR	5906060	IdentifierDeclStatement	int left_right = ( side_mask & 1 ? 0 : 1 ) ;	663:4:18270:18310	5906017	4	True				
ANR	5906061	IdentifierDecl	left_right = ( side_mask & 1 ? 0 : 1 )		5906017	0					
ANR	5906062	IdentifierDeclType	int		5906017	0					
ANR	5906063	Identifier	left_right		5906017	1					
ANR	5906064	AssignmentExpression	left_right = ( side_mask & 1 ? 0 : 1 )		5906017	2		=			
ANR	5906065	Identifier	left_right		5906017	0					
ANR	5906066	ConditionalExpression	side_mask & 1 ? 0 : 1		5906017	1					
ANR	5906067	Condition	side_mask & 1		5906017	0					
ANR	5906068	BitAndExpression	side_mask & 1		5906017	0		&			
ANR	5906069	Identifier	side_mask		5906017	0					
ANR	5906070	PrimaryExpression	1		5906017	1					
ANR	5906071	PrimaryExpression	0		5906017	1					
ANR	5906072	PrimaryExpression	1		5906017	2					
ANR	5906073	IdentifierDeclStatement	int code ;	664:4:18316:18324	5906017	5	True				
ANR	5906074	IdentifierDecl	code		5906017	0					
ANR	5906075	IdentifierDeclType	int		5906017	0					
ANR	5906076	Identifier	code		5906017	1					
ANR	5906077	ExpressionStatement	sect . l = sect . r = NULL	666:4:18331:18353	5906017	6	True				
ANR	5906078	AssignmentExpression	sect . l = sect . r = NULL		5906017	0		=			
ANR	5906079	MemberAccess	sect . l		5906017	0					
ANR	5906080	Identifier	sect		5906017	0					
ANR	5906081	Identifier	l		5906017	1					
ANR	5906082	AssignmentExpression	sect . r = NULL		5906017	1		=			
ANR	5906083	MemberAccess	sect . r		5906017	0					
ANR	5906084	Identifier	sect		5906017	0					
ANR	5906085	Identifier	r		5906017	1					
ANR	5906086	Identifier	NULL		5906017	1					
ANR	5906087	ExpressionStatement	sect . xl = t0 -> xltop	667:4:18359:18378	5906017	7	True				
ANR	5906088	AssignmentExpression	sect . xl = t0 -> xltop		5906017	0		=			
ANR	5906089	MemberAccess	sect . xl		5906017	0					
ANR	5906090	Identifier	sect		5906017	0					
ANR	5906091	Identifier	xl		5906017	1					
ANR	5906092	PtrMemberAccess	t0 -> xltop		5906017	1					
ANR	5906093	Identifier	t0		5906017	0					
ANR	5906094	Identifier	xltop		5906017	1					
ANR	5906095	ExpressionStatement	sect . xr = t0 -> xrtop	668:4:18408:18427	5906017	8	True				
ANR	5906096	AssignmentExpression	sect . xr = t0 -> xrtop		5906017	0		=			
ANR	5906097	MemberAccess	sect . xr		5906017	0					
ANR	5906098	Identifier	sect		5906017	0					
ANR	5906099	Identifier	xr		5906017	1					
ANR	5906100	PtrMemberAccess	t0 -> xrtop		5906017	1					
ANR	5906101	Identifier	t0		5906017	0					
ANR	5906102	Identifier	xrtop		5906017	1					
ANR	5906103	ExpressionStatement	sect . yl = sect . yr = t0 -> ytop	669:4:18457:18485	5906017	9	True				
ANR	5906104	AssignmentExpression	sect . yl = sect . yr = t0 -> ytop		5906017	0		=			
ANR	5906105	MemberAccess	sect . yl		5906017	0					
ANR	5906106	Identifier	sect		5906017	0					
ANR	5906107	Identifier	yl		5906017	1					
ANR	5906108	AssignmentExpression	sect . yr = t0 -> ytop		5906017	1		=			
ANR	5906109	MemberAccess	sect . yr		5906017	0					
ANR	5906110	Identifier	sect		5906017	0					
ANR	5906111	Identifier	yr		5906017	1					
ANR	5906112	PtrMemberAccess	t0 -> ytop		5906017	1					
ANR	5906113	Identifier	t0		5906017	0					
ANR	5906114	Identifier	ytop		5906017	1					
ANR	5906115	ExpressionStatement	sect . side_mask = side_mask	670:4:18515:18541	5906017	10	True				
ANR	5906116	AssignmentExpression	sect . side_mask = side_mask		5906017	0		=			
ANR	5906117	MemberAccess	sect . side_mask		5906017	0					
ANR	5906118	Identifier	sect		5906017	0					
ANR	5906119	Identifier	side_mask		5906017	1					
ANR	5906120	Identifier	side_mask		5906017	1					
ANR	5906121	ForStatement	"for ( t = t0 ; ; t = upper_neighbour ( t , left_right ) )"		5906017	11					
ANR	5906122	ForInit	t = t0 ;	671:9:18552:18558	5906017	0	True				
ANR	5906123	AssignmentExpression	t = t0		5906017	0		=			
ANR	5906124	Identifier	t		5906017	0					
ANR	5906125	Identifier	t0		5906017	1					
ANR	5906126	AssignmentExpression	"t = upper_neighbour ( t , left_right )"	671:19:18562:18595	5906017	1	True	=			
ANR	5906127	Identifier	t		5906017	0					
ANR	5906128	CallExpression	"upper_neighbour ( t , left_right )"		5906017	1					
ANR	5906129	Callee	upper_neighbour		5906017	0					
ANR	5906130	Identifier	upper_neighbour		5906017	0					
ANR	5906131	ArgumentList	t		5906017	1					
ANR	5906132	Argument	t		5906017	0					
ANR	5906133	Identifier	t		5906017	0					
ANR	5906134	Argument	left_right		5906017	1					
ANR	5906135	Identifier	left_right		5906017	0					
ANR	5906136	CompoundStatement		13:55:461:461	5906017	2					
ANR	5906137	IfStatement	if ( side_mask & 1 )		5906017	0					
ANR	5906138	Condition	side_mask & 1	672:12:18612:18624	5906017	0	True				
ANR	5906139	BitAndExpression	side_mask & 1		5906017	0		&			
ANR	5906140	Identifier	side_mask		5906017	0					
ANR	5906141	PrimaryExpression	1		5906017	1					
ANR	5906142	CompoundStatement		14:27:490:490	5906017	1					
ANR	5906143	ExpressionStatement	s = t -> l	673:12:18641:18649	5906017	0	True				
ANR	5906144	AssignmentExpression	s = t -> l		5906017	0		=			
ANR	5906145	Identifier	s		5906017	0					
ANR	5906146	PtrMemberAccess	t -> l		5906017	1					
ANR	5906147	Identifier	t		5906017	0					
ANR	5906148	Identifier	l		5906017	1					
ANR	5906149	IfStatement	if ( t -> dir_l < 0 )		5906017	1					
ANR	5906150	Condition	t -> dir_l < 0	674:16:18667:18678	5906017	0	True				
ANR	5906151	RelationalExpression	t -> dir_l < 0		5906017	0		<			
ANR	5906152	PtrMemberAccess	t -> dir_l		5906017	0					
ANR	5906153	Identifier	t		5906017	0					
ANR	5906154	Identifier	dir_l		5906017	1					
ANR	5906155	PrimaryExpression	0		5906017	1					
ANR	5906156	ExpressionStatement	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )	675:16:18697:18781	5906017	1	True				
ANR	5906157	AssignmentExpression	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )		5906017	0		=			
ANR	5906158	Identifier	s		5906017	0					
ANR	5906159	ConditionalExpression	s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next		5906017	1					
ANR	5906160	Condition	s -> type == s_line_close		5906017	0					
ANR	5906161	EqualityExpression	s -> type == s_line_close		5906017	0		==			
ANR	5906162	PtrMemberAccess	s -> type		5906017	0					
ANR	5906163	Identifier	s		5906017	0					
ANR	5906164	Identifier	type		5906017	1					
ANR	5906165	Identifier	s_line_close		5906017	1					
ANR	5906166	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub -> next		5906017	1					
ANR	5906167	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub		5906017	0					
ANR	5906168	CastExpression	( const line_close_segment * ) s		5906017	0					
ANR	5906169	CastTarget	const line_close_segment *		5906017	0					
ANR	5906170	Identifier	s		5906017	1					
ANR	5906171	Identifier	sub		5906017	1					
ANR	5906172	Identifier	next		5906017	1					
ANR	5906173	PtrMemberAccess	s -> next		5906017	2					
ANR	5906174	Identifier	s		5906017	0					
ANR	5906175	Identifier	next		5906017	1					
ANR	5906176	ExpressionStatement	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )	676:12:18795:18864	5906017	2	True				
ANR	5906177	AssignmentExpression	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )		5906017	0		=			
ANR	5906178	Identifier	p		5906017	0					
ANR	5906179	ConditionalExpression	s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev		5906017	1					
ANR	5906180	Condition	s -> type == s_start		5906017	0					
ANR	5906181	EqualityExpression	s -> type == s_start		5906017	0		==			
ANR	5906182	PtrMemberAccess	s -> type		5906017	0					
ANR	5906183	Identifier	s		5906017	0					
ANR	5906184	Identifier	type		5906017	1					
ANR	5906185	Identifier	s_start		5906017	1					
ANR	5906186	PtrMemberAccess	( ( const subpath * ) s ) -> last -> prev		5906017	1					
ANR	5906187	PtrMemberAccess	( ( const subpath * ) s ) -> last		5906017	0					
ANR	5906188	CastExpression	( const subpath * ) s		5906017	0					
ANR	5906189	CastTarget	const subpath *		5906017	0					
ANR	5906190	Identifier	s		5906017	1					
ANR	5906191	Identifier	last		5906017	1					
ANR	5906192	Identifier	prev		5906017	1					
ANR	5906193	PtrMemberAccess	s -> prev		5906017	2					
ANR	5906194	Identifier	s		5906017	0					
ANR	5906195	Identifier	prev		5906017	1					
ANR	5906196	ExpressionStatement	"choose_by_tangent ( p , s , & slope0 , & len0 , & sect . l , & sect . xl , & sect . yl , t -> ybot , t -> ytop )"	677:12:18878:18964	5906017	3	True				
ANR	5906197	CallExpression	"choose_by_tangent ( p , s , & slope0 , & len0 , & sect . l , & sect . xl , & sect . yl , t -> ybot , t -> ytop )"		5906017	0					
ANR	5906198	Callee	choose_by_tangent		5906017	0					
ANR	5906199	Identifier	choose_by_tangent		5906017	0					
ANR	5906200	ArgumentList	p		5906017	1					
ANR	5906201	Argument	p		5906017	0					
ANR	5906202	Identifier	p		5906017	0					
ANR	5906203	Argument	s		5906017	1					
ANR	5906204	Identifier	s		5906017	0					
ANR	5906205	Argument	& slope0		5906017	2					
ANR	5906206	UnaryOperationExpression	& slope0		5906017	0					
ANR	5906207	UnaryOperator	&		5906017	0					
ANR	5906208	Identifier	slope0		5906017	1					
ANR	5906209	Argument	& len0		5906017	3					
ANR	5906210	UnaryOperationExpression	& len0		5906017	0					
ANR	5906211	UnaryOperator	&		5906017	0					
ANR	5906212	Identifier	len0		5906017	1					
ANR	5906213	Argument	& sect . l		5906017	4					
ANR	5906214	UnaryOperationExpression	& sect . l		5906017	0					
ANR	5906215	UnaryOperator	&		5906017	0					
ANR	5906216	MemberAccess	sect . l		5906017	1					
ANR	5906217	Identifier	sect		5906017	0					
ANR	5906218	Identifier	l		5906017	1					
ANR	5906219	Argument	& sect . xl		5906017	5					
ANR	5906220	UnaryOperationExpression	& sect . xl		5906017	0					
ANR	5906221	UnaryOperator	&		5906017	0					
ANR	5906222	MemberAccess	sect . xl		5906017	1					
ANR	5906223	Identifier	sect		5906017	0					
ANR	5906224	Identifier	xl		5906017	1					
ANR	5906225	Argument	& sect . yl		5906017	6					
ANR	5906226	UnaryOperationExpression	& sect . yl		5906017	0					
ANR	5906227	UnaryOperator	&		5906017	0					
ANR	5906228	MemberAccess	sect . yl		5906017	1					
ANR	5906229	Identifier	sect		5906017	0					
ANR	5906230	Identifier	yl		5906017	1					
ANR	5906231	Argument	t -> ybot		5906017	7					
ANR	5906232	PtrMemberAccess	t -> ybot		5906017	0					
ANR	5906233	Identifier	t		5906017	0					
ANR	5906234	Identifier	ybot		5906017	1					
ANR	5906235	Argument	t -> ytop		5906017	8					
ANR	5906236	PtrMemberAccess	t -> ytop		5906017	0					
ANR	5906237	Identifier	t		5906017	0					
ANR	5906238	Identifier	ytop		5906017	1					
ANR	5906239	IfStatement	if ( side_mask & 2 )		5906017	1					
ANR	5906240	Condition	side_mask & 2	679:12:18988:19000	5906017	0	True				
ANR	5906241	BitAndExpression	side_mask & 2		5906017	0		&			
ANR	5906242	Identifier	side_mask		5906017	0					
ANR	5906243	PrimaryExpression	2		5906017	1					
ANR	5906244	CompoundStatement		21:27:866:866	5906017	1					
ANR	5906245	ExpressionStatement	s = t -> r	680:12:19017:19025	5906017	0	True				
ANR	5906246	AssignmentExpression	s = t -> r		5906017	0		=			
ANR	5906247	Identifier	s		5906017	0					
ANR	5906248	PtrMemberAccess	t -> r		5906017	1					
ANR	5906249	Identifier	t		5906017	0					
ANR	5906250	Identifier	r		5906017	1					
ANR	5906251	IfStatement	if ( t -> dir_r < 0 )		5906017	1					
ANR	5906252	Condition	t -> dir_r < 0	681:16:19043:19054	5906017	0	True				
ANR	5906253	RelationalExpression	t -> dir_r < 0		5906017	0		<			
ANR	5906254	PtrMemberAccess	t -> dir_r		5906017	0					
ANR	5906255	Identifier	t		5906017	0					
ANR	5906256	Identifier	dir_r		5906017	1					
ANR	5906257	PrimaryExpression	0		5906017	1					
ANR	5906258	ExpressionStatement	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )	682:16:19073:19157	5906017	1	True				
ANR	5906259	AssignmentExpression	s = ( s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next )		5906017	0		=			
ANR	5906260	Identifier	s		5906017	0					
ANR	5906261	ConditionalExpression	s -> type == s_line_close ? ( ( const line_close_segment * ) s ) -> sub -> next : s -> next		5906017	1					
ANR	5906262	Condition	s -> type == s_line_close		5906017	0					
ANR	5906263	EqualityExpression	s -> type == s_line_close		5906017	0		==			
ANR	5906264	PtrMemberAccess	s -> type		5906017	0					
ANR	5906265	Identifier	s		5906017	0					
ANR	5906266	Identifier	type		5906017	1					
ANR	5906267	Identifier	s_line_close		5906017	1					
ANR	5906268	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub -> next		5906017	1					
ANR	5906269	PtrMemberAccess	( ( const line_close_segment * ) s ) -> sub		5906017	0					
ANR	5906270	CastExpression	( const line_close_segment * ) s		5906017	0					
ANR	5906271	CastTarget	const line_close_segment *		5906017	0					
ANR	5906272	Identifier	s		5906017	1					
ANR	5906273	Identifier	sub		5906017	1					
ANR	5906274	Identifier	next		5906017	1					
ANR	5906275	PtrMemberAccess	s -> next		5906017	2					
ANR	5906276	Identifier	s		5906017	0					
ANR	5906277	Identifier	next		5906017	1					
ANR	5906278	ExpressionStatement	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )	683:12:19171:19240	5906017	2	True				
ANR	5906279	AssignmentExpression	p = ( s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev )		5906017	0		=			
ANR	5906280	Identifier	p		5906017	0					
ANR	5906281	ConditionalExpression	s -> type == s_start ? ( ( const subpath * ) s ) -> last -> prev : s -> prev		5906017	1					
ANR	5906282	Condition	s -> type == s_start		5906017	0					
ANR	5906283	EqualityExpression	s -> type == s_start		5906017	0		==			
ANR	5906284	PtrMemberAccess	s -> type		5906017	0					
ANR	5906285	Identifier	s		5906017	0					
ANR	5906286	Identifier	type		5906017	1					
ANR	5906287	Identifier	s_start		5906017	1					
ANR	5906288	PtrMemberAccess	( ( const subpath * ) s ) -> last -> prev		5906017	1					
ANR	5906289	PtrMemberAccess	( ( const subpath * ) s ) -> last		5906017	0					
ANR	5906290	CastExpression	( const subpath * ) s		5906017	0					
ANR	5906291	CastTarget	const subpath *		5906017	0					
ANR	5906292	Identifier	s		5906017	1					
ANR	5906293	Identifier	last		5906017	1					
ANR	5906294	Identifier	prev		5906017	1					
ANR	5906295	PtrMemberAccess	s -> prev		5906017	2					
ANR	5906296	Identifier	s		5906017	0					
ANR	5906297	Identifier	prev		5906017	1					
ANR	5906298	ExpressionStatement	"choose_by_tangent ( p , s , & slope1 , & len1 , & sect . r , & sect . xr , & sect . yr , t -> ybot , t -> ytop )"	684:12:19254:19340	5906017	3	True				
ANR	5906299	CallExpression	"choose_by_tangent ( p , s , & slope1 , & len1 , & sect . r , & sect . xr , & sect . yr , t -> ybot , t -> ytop )"		5906017	0					
ANR	5906300	Callee	choose_by_tangent		5906017	0					
ANR	5906301	Identifier	choose_by_tangent		5906017	0					
ANR	5906302	ArgumentList	p		5906017	1					
ANR	5906303	Argument	p		5906017	0					
ANR	5906304	Identifier	p		5906017	0					
ANR	5906305	Argument	s		5906017	1					
ANR	5906306	Identifier	s		5906017	0					
ANR	5906307	Argument	& slope1		5906017	2					
ANR	5906308	UnaryOperationExpression	& slope1		5906017	0					
ANR	5906309	UnaryOperator	&		5906017	0					
ANR	5906310	Identifier	slope1		5906017	1					
ANR	5906311	Argument	& len1		5906017	3					
ANR	5906312	UnaryOperationExpression	& len1		5906017	0					
ANR	5906313	UnaryOperator	&		5906017	0					
ANR	5906314	Identifier	len1		5906017	1					
ANR	5906315	Argument	& sect . r		5906017	4					
ANR	5906316	UnaryOperationExpression	& sect . r		5906017	0					
ANR	5906317	UnaryOperator	&		5906017	0					
ANR	5906318	MemberAccess	sect . r		5906017	1					
ANR	5906319	Identifier	sect		5906017	0					
ANR	5906320	Identifier	r		5906017	1					
ANR	5906321	Argument	& sect . xr		5906017	5					
ANR	5906322	UnaryOperationExpression	& sect . xr		5906017	0					
ANR	5906323	UnaryOperator	&		5906017	0					
ANR	5906324	MemberAccess	sect . xr		5906017	1					
ANR	5906325	Identifier	sect		5906017	0					
ANR	5906326	Identifier	xr		5906017	1					
ANR	5906327	Argument	& sect . yr		5906017	6					
ANR	5906328	UnaryOperationExpression	& sect . yr		5906017	0					
ANR	5906329	UnaryOperator	&		5906017	0					
ANR	5906330	MemberAccess	sect . yr		5906017	1					
ANR	5906331	Identifier	sect		5906017	0					
ANR	5906332	Identifier	yr		5906017	1					
ANR	5906333	Argument	t -> ybot		5906017	7					
ANR	5906334	PtrMemberAccess	t -> ybot		5906017	0					
ANR	5906335	Identifier	t		5906017	0					
ANR	5906336	Identifier	ybot		5906017	1					
ANR	5906337	Argument	t -> ytop		5906017	8					
ANR	5906338	PtrMemberAccess	t -> ytop		5906017	0					
ANR	5906339	Identifier	t		5906017	0					
ANR	5906340	Identifier	ytop		5906017	1					
ANR	5906341	IfStatement	if ( t == t1 )		5906017	2					
ANR	5906342	Condition	t == t1	686:12:19364:19370	5906017	0	True				
ANR	5906343	EqualityExpression	t == t1		5906017	0		==			
ANR	5906344	Identifier	t		5906017	0					
ANR	5906345	Identifier	t1		5906017	1					
ANR	5906346	BreakStatement	break ;	687:12:19385:19390	5906017	1	True				
ANR	5906347	IfStatement	if ( ( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) ) )		5906017	12					
ANR	5906348	Condition	( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) )	689:8:19406:19491	5906017	0	True				
ANR	5906349	AndExpression	( sect . l != NULL || ! ( side_mask & 1 ) ) && ( sect . r != NULL || ! ( side_mask & 2 ) )		5906017	0		&&			
ANR	5906350	OrExpression	sect . l != NULL || ! ( side_mask & 1 )		5906017	0		||			
ANR	5906351	EqualityExpression	sect . l != NULL		5906017	0		!=			
ANR	5906352	MemberAccess	sect . l		5906017	0					
ANR	5906353	Identifier	sect		5906017	0					
ANR	5906354	Identifier	l		5906017	1					
ANR	5906355	Identifier	NULL		5906017	1					
ANR	5906356	UnaryOperationExpression	! ( side_mask & 1 )		5906017	1					
ANR	5906357	UnaryOperator	!		5906017	0					
ANR	5906358	BitAndExpression	side_mask & 1		5906017	1		&			
ANR	5906359	Identifier	side_mask		5906017	0					
ANR	5906360	PrimaryExpression	1		5906017	1					
ANR	5906361	OrExpression	sect . r != NULL || ! ( side_mask & 2 )		5906017	1		||			
ANR	5906362	EqualityExpression	sect . r != NULL		5906017	0		!=			
ANR	5906363	MemberAccess	sect . r		5906017	0					
ANR	5906364	Identifier	sect		5906017	0					
ANR	5906365	Identifier	r		5906017	1					
ANR	5906366	Identifier	NULL		5906017	1					
ANR	5906367	UnaryOperationExpression	! ( side_mask & 2 )		5906017	1					
ANR	5906368	UnaryOperator	!		5906017	0					
ANR	5906369	BitAndExpression	side_mask & 2		5906017	1		&			
ANR	5906370	Identifier	side_mask		5906017	0					
ANR	5906371	PrimaryExpression	2		5906017	1					
ANR	5906372	CompoundStatement		33:8:1367:1382	5906017	1					
ANR	5906373	IdentifierDeclStatement	const int w = 3 ;	691:8:19504:19519	5906017	0	True				
ANR	5906374	IdentifierDecl	w = 3		5906017	0					
ANR	5906375	IdentifierDeclType	const int		5906017	0					
ANR	5906376	Identifier	w		5906017	1					
ANR	5906377	AssignmentExpression	w = 3		5906017	2		=			
ANR	5906378	Identifier	w		5906017	0					
ANR	5906379	PrimaryExpression	3		5906017	1					
ANR	5906380	IfStatement	if ( ! ( side_mask & 1 ) )		5906017	1					
ANR	5906381	Condition	! ( side_mask & 1 )	693:12:19534:19549	5906017	0	True				
ANR	5906382	UnaryOperationExpression	! ( side_mask & 1 )		5906017	0					
ANR	5906383	UnaryOperator	!		5906017	0					
ANR	5906384	BitAndExpression	side_mask & 1		5906017	1		&			
ANR	5906385	Identifier	side_mask		5906017	0					
ANR	5906386	PrimaryExpression	1		5906017	1					
ANR	5906387	CompoundStatement		35:30:1415:1415	5906017	1					
ANR	5906388	IfStatement	if ( sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 ) )		5906017	0					
ANR	5906389	Condition	sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 )	694:16:19570:19620	5906017	0	True				
ANR	5906390	RelationalExpression	sect . xr < ( padev -> xmin * w + padev -> xmax ) / ( w + 1 )		5906017	0		<			
ANR	5906391	MemberAccess	sect . xr		5906017	0					
ANR	5906392	Identifier	sect		5906017	0					
ANR	5906393	Identifier	xr		5906017	1					
ANR	5906394	MultiplicativeExpression	( padev -> xmin * w + padev -> xmax ) / ( w + 1 )		5906017	1		/			
ANR	5906395	AdditiveExpression	padev -> xmin * w + padev -> xmax		5906017	0		+			
ANR	5906396	MultiplicativeExpression	padev -> xmin * w		5906017	0		*			
ANR	5906397	PtrMemberAccess	padev -> xmin		5906017	0					
ANR	5906398	Identifier	padev		5906017	0					
ANR	5906399	Identifier	xmin		5906017	1					
ANR	5906400	Identifier	w		5906017	1					
ANR	5906401	PtrMemberAccess	padev -> xmax		5906017	1					
ANR	5906402	Identifier	padev		5906017	0					
ANR	5906403	Identifier	xmax		5906017	1					
ANR	5906404	AdditiveExpression	w + 1		5906017	1		+			
ANR	5906405	Identifier	w		5906017	0					
ANR	5906406	PrimaryExpression	1		5906017	1					
ANR	5906407	ReturnStatement	return 0 ;	695:16:19639:19647	5906017	1	True				
ANR	5906408	PrimaryExpression	0		5906017	0					
ANR	5906409	ExpressionStatement	sect . xl = padev -> xmin - 1000	696:12:19661:19689	5906017	1	True				
ANR	5906410	AssignmentExpression	sect . xl = padev -> xmin - 1000		5906017	0		=			
ANR	5906411	MemberAccess	sect . xl		5906017	0					
ANR	5906412	Identifier	sect		5906017	0					
ANR	5906413	Identifier	xl		5906017	1					
ANR	5906414	AdditiveExpression	padev -> xmin - 1000		5906017	1		-			
ANR	5906415	PtrMemberAccess	padev -> xmin		5906017	0					
ANR	5906416	Identifier	padev		5906017	0					
ANR	5906417	Identifier	xmin		5906017	1					
ANR	5906418	PrimaryExpression	1000		5906017	1					
ANR	5906419	IfStatement	if ( ! ( side_mask & 2 ) )		5906017	2					
ANR	5906420	Condition	! ( side_mask & 2 )	698:12:19731:19746	5906017	0	True				
ANR	5906421	UnaryOperationExpression	! ( side_mask & 2 )		5906017	0					
ANR	5906422	UnaryOperator	!		5906017	0					
ANR	5906423	BitAndExpression	side_mask & 2		5906017	1		&			
ANR	5906424	Identifier	side_mask		5906017	0					
ANR	5906425	PrimaryExpression	2		5906017	1					
ANR	5906426	CompoundStatement		40:30:1612:1612	5906017	1					
ANR	5906427	IfStatement	if ( sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 ) )		5906017	0					
ANR	5906428	Condition	sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 )	699:16:19767:19817	5906017	0	True				
ANR	5906429	RelationalExpression	sect . xl > ( padev -> xmax * w + padev -> xmin ) / ( w + 1 )		5906017	0		>			
ANR	5906430	MemberAccess	sect . xl		5906017	0					
ANR	5906431	Identifier	sect		5906017	0					
ANR	5906432	Identifier	xl		5906017	1					
ANR	5906433	MultiplicativeExpression	( padev -> xmax * w + padev -> xmin ) / ( w + 1 )		5906017	1		/			
ANR	5906434	AdditiveExpression	padev -> xmax * w + padev -> xmin		5906017	0		+			
ANR	5906435	MultiplicativeExpression	padev -> xmax * w		5906017	0		*			
ANR	5906436	PtrMemberAccess	padev -> xmax		5906017	0					
ANR	5906437	Identifier	padev		5906017	0					
ANR	5906438	Identifier	xmax		5906017	1					
ANR	5906439	Identifier	w		5906017	1					
ANR	5906440	PtrMemberAccess	padev -> xmin		5906017	1					
ANR	5906441	Identifier	padev		5906017	0					
ANR	5906442	Identifier	xmin		5906017	1					
ANR	5906443	AdditiveExpression	w + 1		5906017	1		+			
ANR	5906444	Identifier	w		5906017	0					
ANR	5906445	PrimaryExpression	1		5906017	1					
ANR	5906446	ReturnStatement	return 0 ;	700:16:19836:19844	5906017	1	True				
ANR	5906447	PrimaryExpression	0		5906017	0					
ANR	5906448	ExpressionStatement	sect . xr = padev -> xmax + 1000	701:12:19858:19886	5906017	1	True				
ANR	5906449	AssignmentExpression	sect . xr = padev -> xmax + 1000		5906017	0		=			
ANR	5906450	MemberAccess	sect . xr		5906017	0					
ANR	5906451	Identifier	sect		5906017	0					
ANR	5906452	Identifier	xr		5906017	1					
ANR	5906453	AdditiveExpression	padev -> xmax + 1000		5906017	1		+			
ANR	5906454	PtrMemberAccess	padev -> xmax		5906017	0					
ANR	5906455	Identifier	padev		5906017	0					
ANR	5906456	Identifier	xmax		5906017	1					
ANR	5906457	PrimaryExpression	1000		5906017	1					
ANR	5906458	ExpressionStatement	"code = handler ( client_data , & sect )"	703:8:19924:19958	5906017	3	True				
ANR	5906459	AssignmentExpression	"code = handler ( client_data , & sect )"		5906017	0		=			
ANR	5906460	Identifier	code		5906017	0					
ANR	5906461	CallExpression	"handler ( client_data , & sect )"		5906017	1					
ANR	5906462	Callee	handler		5906017	0					
ANR	5906463	Identifier	handler		5906017	0					
ANR	5906464	ArgumentList	client_data		5906017	1					
ANR	5906465	Argument	client_data		5906017	0					
ANR	5906466	Identifier	client_data		5906017	0					
ANR	5906467	Argument	& sect		5906017	1					
ANR	5906468	UnaryOperationExpression	& sect		5906017	0					
ANR	5906469	UnaryOperator	&		5906017	0					
ANR	5906470	Identifier	sect		5906017	1					
ANR	5906471	IfStatement	if ( code < 0 )		5906017	4					
ANR	5906472	Condition	code < 0	704:12:19972:19979	5906017	0	True				
ANR	5906473	RelationalExpression	code < 0		5906017	0		<			
ANR	5906474	Identifier	code		5906017	0					
ANR	5906475	PrimaryExpression	0		5906017	1					
ANR	5906476	ReturnStatement	return code ;	705:12:19994:20005	5906017	1	True				
ANR	5906477	Identifier	code		5906017	0					
ANR	5906478	ReturnStatement	return 0 ;	707:4:20017:20025	5906017	13	True				
ANR	5906479	PrimaryExpression	0		5906017	0					
ANR	5906480	ReturnType	static int		5906017	1					
ANR	5906481	Identifier	hint_by_tangent		5906017	2					
ANR	5906482	ParameterList	"gx_device_spot_analyzer * padev , int side_mask , void * client_data , gx_san_trap * t0 , gx_san_trap * t1 , double ave_width , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		5906017	3					
ANR	5906483	Parameter	gx_device_spot_analyzer * padev	656:16:17958:17987	5906017	0	True				
ANR	5906484	ParameterType	gx_device_spot_analyzer *		5906017	0					
ANR	5906485	Identifier	padev		5906017	1					
ANR	5906486	Parameter	int side_mask	656:48:17990:18002	5906017	1	True				
ANR	5906487	ParameterType	int		5906017	0					
ANR	5906488	Identifier	side_mask		5906017	1					
ANR	5906489	Parameter	void * client_data	657:4:18009:18025	5906017	2	True				
ANR	5906490	ParameterType	void *		5906017	0					
ANR	5906491	Identifier	client_data		5906017	1					
ANR	5906492	Parameter	gx_san_trap * t0	657:23:18028:18042	5906017	3	True				
ANR	5906493	ParameterType	gx_san_trap *		5906017	0					
ANR	5906494	Identifier	t0		5906017	1					
ANR	5906495	Parameter	gx_san_trap * t1	657:40:18045:18059	5906017	4	True				
ANR	5906496	ParameterType	gx_san_trap *		5906017	0					
ANR	5906497	Identifier	t1		5906017	1					
ANR	5906498	Parameter	double ave_width	657:57:18062:18077	5906017	5	True				
ANR	5906499	ParameterType	double		5906017	0					
ANR	5906500	Identifier	ave_width		5906017	1					
ANR	5906501	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	658:4:18084:18133	5906017	6	True				
ANR	5906502	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		5906017	0					
ANR	5906503	Identifier	handler		5906017	1					
ANR	5906504	CFGEntryNode	ENTRY		5906017		True				
ANR	5906505	CFGExitNode	EXIT		5906017		True				
ANR	5906506	InfiniteForNode	true		5906017		True				
ANR	5906507	Symbol	client_data		5906017						
ANR	5906508	Symbol	& sect . yl		5906017						
ANR	5906509	Symbol	handler		5906017						
ANR	5906510	Symbol	sect . xr		5906017						
ANR	5906511	Symbol	sect . side_mask		5906017						
ANR	5906512	Symbol	slope1		5906017						
ANR	5906513	Symbol	s_start		5906017						
ANR	5906514	Symbol	& sect . l		5906017						
ANR	5906515	Symbol	slope0		5906017						
ANR	5906516	Symbol	& sect . yr		5906017						
ANR	5906517	Symbol	& slope0		5906017						
ANR	5906518	Symbol	len0		5906017						
ANR	5906519	Symbol	s -> prev		5906017						
ANR	5906520	Symbol	sect . xl		5906017						
ANR	5906521	Symbol	len1		5906017						
ANR	5906522	Symbol	& sect . r		5906017						
ANR	5906523	Symbol	( ( const line_close_segment * ) s ) -> sub -> next		5906017						
ANR	5906524	Symbol	side_mask		5906017						
ANR	5906525	Symbol	t0 -> xltop		5906017						
ANR	5906526	Symbol	NULL		5906017						
ANR	5906527	Symbol	t -> l		5906017						
ANR	5906528	Symbol	t -> r		5906017						
ANR	5906529	Symbol	s_line_close		5906017						
ANR	5906530	Symbol	& sect		5906017						
ANR	5906531	Symbol	padev -> xmin		5906017						
ANR	5906532	Symbol	* padev		5906017						
ANR	5906533	Symbol	& slope1		5906017						
ANR	5906534	Symbol	& len0		5906017						
ANR	5906535	Symbol	( ( const subpath * ) s ) -> last -> prev		5906017						
ANR	5906536	Symbol	& len1		5906017						
ANR	5906537	Symbol	t0		5906017						
ANR	5906538	Symbol	t1		5906017						
ANR	5906539	Symbol	s -> type		5906017						
ANR	5906540	Symbol	padev -> xmax		5906017						
ANR	5906541	Symbol	code		5906017						
ANR	5906542	Symbol	sect . l		5906017						
ANR	5906543	Symbol	t -> dir_r		5906017						
ANR	5906544	Symbol	s -> next		5906017						
ANR	5906545	Symbol	( ( const line_close_segment * ) s ) -> sub		5906017						
ANR	5906546	Symbol	t -> dir_l		5906017						
ANR	5906547	Symbol	padev		5906017						
ANR	5906548	Symbol	* * s		5906017						
ANR	5906549	Symbol	* ( ( const line_close_segment * ) s ) -> sub		5906017						
ANR	5906550	Symbol	sect . yr		5906017						
ANR	5906551	Symbol	* t0		5906017						
ANR	5906552	Symbol	& sect . xl		5906017						
ANR	5906553	Symbol	t0 -> ytop		5906017						
ANR	5906554	Symbol	t0 -> xrtop		5906017						
ANR	5906555	Symbol	& sect . xr		5906017						
ANR	5906556	Symbol	* ( ( const subpath * ) s ) -> last		5906017						
ANR	5906557	Symbol	upper_neighbour		5906017						
ANR	5906558	Symbol	sect . yl		5906017						
ANR	5906559	Symbol	p		5906017						
ANR	5906560	Symbol	s		5906017						
ANR	5906561	Symbol	t		5906017						
ANR	5906562	Symbol	sect		5906017						
ANR	5906563	Symbol	t -> ytop		5906017						
ANR	5906564	Symbol	w		5906017						
ANR	5906565	Symbol	t -> ybot		5906017						
ANR	5906566	Symbol	( ( const subpath * ) s ) -> last		5906017						
ANR	5906567	Symbol	sect . r		5906017						
ANR	5906568	Symbol	* s		5906017						
ANR	5906569	Symbol	left_right		5906017						
ANR	5906570	Symbol	* t		5906017						
ANR	5906571	Symbol	ave_width		5906017						
ANR	5906572	Function	gx_san_generate_stems_aux	711:0:20052:23799							
ANR	5906573	FunctionDef	"gx_san_generate_stems_aux (gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		5906572	0					
ANR	5906574	CompoundStatement		715:0:20244:23799	5906572	0					
ANR	5906575	IdentifierDeclStatement	gx_san_trap * t0 ;	716:4:20250:20265	5906572	0	True				
ANR	5906576	IdentifierDecl	* t0		5906572	0					
ANR	5906577	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906578	Identifier	t0		5906572	1					
ANR	5906579	IdentifierDeclStatement	const bool by_trap = false ;	717:4:20271:20297	5906572	1	True				
ANR	5906580	IdentifierDecl	by_trap = false		5906572	0					
ANR	5906581	IdentifierDeclType	const bool		5906572	0					
ANR	5906582	Identifier	by_trap		5906572	1					
ANR	5906583	AssignmentExpression	by_trap = false		5906572	2		=			
ANR	5906584	Identifier	false		5906572	0					
ANR	5906585	Identifier	false		5906572	1					
ANR	5906586	IdentifierDeclStatement	int k ;	718:4:20303:20308	5906572	2	True				
ANR	5906587	IdentifierDecl	k		5906572	0					
ANR	5906588	IdentifierDeclType	int		5906572	0					
ANR	5906589	Identifier	k		5906572	1					
ANR	5906590	ForStatement	for ( k = 0 ; overall_hints && k < 2 ; k ++ )		5906572	3					
ANR	5906591	ForInit	k = 0 ;	726:9:20554:20559	5906572	0	True				
ANR	5906592	AssignmentExpression	k = 0		5906572	0		=			
ANR	5906593	Identifier	k		5906572	0					
ANR	5906594	PrimaryExpression	0		5906572	1					
ANR	5906595	Condition	overall_hints && k < 2	726:16:20561:20582	5906572	1	True				
ANR	5906596	AndExpression	overall_hints && k < 2		5906572	0		&&			
ANR	5906597	Identifier	overall_hints		5906572	0					
ANR	5906598	RelationalExpression	k < 2		5906572	1		<			
ANR	5906599	Identifier	k		5906572	0					
ANR	5906600	PrimaryExpression	2		5906572	1					
ANR	5906601	PostIncDecOperationExpression	k ++	726:40:20585:20587	5906572	2	True				
ANR	5906602	Identifier	k		5906572	0					
ANR	5906603	IncDec	++		5906572	1					
ANR	5906604	CompoundStatement		12:45:345:345	5906572	3					
ANR	5906605	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		5906572	0					
ANR	5906606	ForInit	t0 = padev -> trap_buffer ;	727:13:20624:20647	5906572	0	True				
ANR	5906607	AssignmentExpression	t0 = padev -> trap_buffer		5906572	0		=			
ANR	5906608	Identifier	t0		5906572	0					
ANR	5906609	PtrMemberAccess	padev -> trap_buffer		5906572	1					
ANR	5906610	Identifier	padev		5906572	0					
ANR	5906611	Identifier	trap_buffer		5906572	1					
ANR	5906612	Condition	t0 != padev -> trap_free	727:38:20649:20670	5906572	1	True				
ANR	5906613	EqualityExpression	t0 != padev -> trap_free		5906572	0		!=			
ANR	5906614	Identifier	t0		5906572	0					
ANR	5906615	PtrMemberAccess	padev -> trap_free		5906572	1					
ANR	5906616	Identifier	padev		5906572	0					
ANR	5906617	Identifier	trap_free		5906572	1					
ANR	5906618	AssignmentExpression	t0 = t0 -> link	727:62:20673:20685	5906572	2	True	=			
ANR	5906619	Identifier	t0		5906572	0					
ANR	5906620	PtrMemberAccess	t0 -> link		5906572	1					
ANR	5906621	Identifier	t0		5906572	0					
ANR	5906622	Identifier	link		5906572	1					
ANR	5906623	CompoundStatement		13:77:443:443	5906572	3					
ANR	5906624	IfStatement	if ( ! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost ) )		5906572	0					
ANR	5906625	Condition	! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost )	728:16:20706:20756	5906572	0	True				
ANR	5906626	AndExpression	! t0 -> visited && ( ! k ? t0 -> leftmost : t0 -> rightmost )		5906572	0		&&			
ANR	5906627	UnaryOperationExpression	! t0 -> visited		5906572	0					
ANR	5906628	UnaryOperator	!		5906572	0					
ANR	5906629	PtrMemberAccess	t0 -> visited		5906572	1					
ANR	5906630	Identifier	t0		5906572	0					
ANR	5906631	Identifier	visited		5906572	1					
ANR	5906632	ConditionalExpression	! k ? t0 -> leftmost : t0 -> rightmost		5906572	1					
ANR	5906633	Condition	! k		5906572	0					
ANR	5906634	UnaryOperationExpression	! k		5906572	0					
ANR	5906635	UnaryOperator	!		5906572	0					
ANR	5906636	Identifier	k		5906572	1					
ANR	5906637	PtrMemberAccess	t0 -> leftmost		5906572	1					
ANR	5906638	Identifier	t0		5906572	0					
ANR	5906639	Identifier	leftmost		5906572	1					
ANR	5906640	PtrMemberAccess	t0 -> rightmost		5906572	2					
ANR	5906641	Identifier	t0		5906572	0					
ANR	5906642	Identifier	rightmost		5906572	1					
ANR	5906643	CompoundStatement		14:69:514:514	5906572	1					
ANR	5906644	IfStatement	"if ( is_stem_boundaries ( t0 , 1 << k ) )"		5906572	0					
ANR	5906645	Condition	"is_stem_boundaries ( t0 , 1 << k )"	729:20:20781:20810	5906572	0	True				
ANR	5906646	CallExpression	"is_stem_boundaries ( t0 , 1 << k )"		5906572	0					
ANR	5906647	Callee	is_stem_boundaries		5906572	0					
ANR	5906648	Identifier	is_stem_boundaries		5906572	0					
ANR	5906649	ArgumentList	t0		5906572	1					
ANR	5906650	Argument	t0		5906572	0					
ANR	5906651	Identifier	t0		5906572	0					
ANR	5906652	Argument	1 << k		5906572	1					
ANR	5906653	ShiftExpression	1 << k		5906572	0		<<			
ANR	5906654	PrimaryExpression	1		5906572	0					
ANR	5906655	Identifier	k		5906572	1					
ANR	5906656	CompoundStatement		17:20:651:659	5906572	1					
ANR	5906657	IdentifierDeclStatement	"gx_san_trap * t1 = t0 , * tt = t0 , * t = t0 ;"	730:20:20835:20874	5906572	0	True				
ANR	5906658	IdentifierDecl	* t1 = t0		5906572	0					
ANR	5906659	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906660	Identifier	t1		5906572	1					
ANR	5906661	AssignmentExpression	* t1 = t0		5906572	2		=			
ANR	5906662	Identifier	t0		5906572	0					
ANR	5906663	Identifier	t0		5906572	1					
ANR	5906664	IdentifierDecl	* tt = t0		5906572	1					
ANR	5906665	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906666	Identifier	tt		5906572	1					
ANR	5906667	AssignmentExpression	* tt = t0		5906572	2		=			
ANR	5906668	Identifier	t0		5906572	0					
ANR	5906669	Identifier	t0		5906572	1					
ANR	5906670	IdentifierDecl	* t = t0		5906572	2					
ANR	5906671	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906672	Identifier	t		5906572	1					
ANR	5906673	AssignmentExpression	* t = t0		5906572	2		=			
ANR	5906674	Identifier	t0		5906572	0					
ANR	5906675	Identifier	t0		5906572	1					
ANR	5906676	IdentifierDeclStatement	int code ;	731:20:20896:20904	5906572	1	True				
ANR	5906677	IdentifierDecl	code		5906572	0					
ANR	5906678	IdentifierDeclType	int		5906572	0					
ANR	5906679	Identifier	code		5906572	1					
ANR	5906680	WhileStatement	while ( t -> upper != NULL )		5906572	2					
ANR	5906681	Condition	t -> upper != NULL	733:27:20934:20949	5906572	0	True				
ANR	5906682	EqualityExpression	t -> upper != NULL		5906572	0		!=			
ANR	5906683	PtrMemberAccess	t -> upper		5906572	0					
ANR	5906684	Identifier	t		5906572	0					
ANR	5906685	Identifier	upper		5906572	1					
ANR	5906686	Identifier	NULL		5906572	1					
ANR	5906687	CompoundStatement		19:45:707:707	5906572	1					
ANR	5906688	ExpressionStatement	"t = upper_neighbour ( tt , k )"	734:24:20978:21004	5906572	0	True				
ANR	5906689	AssignmentExpression	"t = upper_neighbour ( tt , k )"		5906572	0		=			
ANR	5906690	Identifier	t		5906572	0					
ANR	5906691	CallExpression	"upper_neighbour ( tt , k )"		5906572	1					
ANR	5906692	Callee	upper_neighbour		5906572	0					
ANR	5906693	Identifier	upper_neighbour		5906572	0					
ANR	5906694	ArgumentList	tt		5906572	1					
ANR	5906695	Argument	tt		5906572	0					
ANR	5906696	Identifier	tt		5906572	0					
ANR	5906697	Argument	k		5906572	1					
ANR	5906698	Identifier	k		5906572	0					
ANR	5906699	IfStatement	if ( ! k ? ! t -> leftmost : ! t -> rightmost )		5906572	1					
ANR	5906700	Condition	! k ? ! t -> leftmost : ! t -> rightmost	735:28:21034:21066	5906572	0	True				
ANR	5906701	ConditionalExpression	! k ? ! t -> leftmost : ! t -> rightmost		5906572	0					
ANR	5906702	Condition	! k		5906572	0					
ANR	5906703	UnaryOperationExpression	! k		5906572	0					
ANR	5906704	UnaryOperator	!		5906572	0					
ANR	5906705	Identifier	k		5906572	1					
ANR	5906706	UnaryOperationExpression	! t -> leftmost		5906572	1					
ANR	5906707	UnaryOperator	!		5906572	0					
ANR	5906708	PtrMemberAccess	t -> leftmost		5906572	1					
ANR	5906709	Identifier	t		5906572	0					
ANR	5906710	Identifier	leftmost		5906572	1					
ANR	5906711	UnaryOperationExpression	! t -> rightmost		5906572	2					
ANR	5906712	UnaryOperator	!		5906572	0					
ANR	5906713	PtrMemberAccess	t -> rightmost		5906572	1					
ANR	5906714	Identifier	t		5906572	0					
ANR	5906715	Identifier	rightmost		5906572	1					
ANR	5906716	CompoundStatement		21:63:824:824	5906572	1					
ANR	5906717	BreakStatement	break ;	736:28:21099:21104	5906572	0	True				
ANR	5906718	IfStatement	"if ( ! is_stem_boundaries ( t , 1 << k ) )"		5906572	2					
ANR	5906719	Condition	"! is_stem_boundaries ( t , 1 << k )"	738:28:21160:21189	5906572	0	True				
ANR	5906720	UnaryOperationExpression	"! is_stem_boundaries ( t , 1 << k )"		5906572	0					
ANR	5906721	UnaryOperator	!		5906572	0					
ANR	5906722	CallExpression	"is_stem_boundaries ( t , 1 << k )"		5906572	1					
ANR	5906723	Callee	is_stem_boundaries		5906572	0					
ANR	5906724	Identifier	is_stem_boundaries		5906572	0					
ANR	5906725	ArgumentList	t		5906572	1					
ANR	5906726	Argument	t		5906572	0					
ANR	5906727	Identifier	t		5906572	0					
ANR	5906728	Argument	1 << k		5906572	1					
ANR	5906729	ShiftExpression	1 << k		5906572	0		<<			
ANR	5906730	PrimaryExpression	1		5906572	0					
ANR	5906731	Identifier	k		5906572	1					
ANR	5906732	CompoundStatement		24:60:947:947	5906572	1					
ANR	5906733	ExpressionStatement	t -> visited = true	739:28:21222:21239	5906572	0	True				
ANR	5906734	AssignmentExpression	t -> visited = true		5906572	0		=			
ANR	5906735	PtrMemberAccess	t -> visited		5906572	0					
ANR	5906736	Identifier	t		5906572	0					
ANR	5906737	Identifier	visited		5906572	1					
ANR	5906738	Identifier	true		5906572	1					
ANR	5906739	BreakStatement	break ;	740:28:21269:21274	5906572	1	True				
ANR	5906740	IfStatement	if ( ( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot ) )		5906572	3					
ANR	5906741	Condition	( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot )	742:28:21330:21387	5906572	0	True				
ANR	5906742	EqualityExpression	( ! k ? tt -> xltop : tt -> xrtop ) != ( ! k ? t -> xlbot : t -> xrbot )		5906572	0		!=			
ANR	5906743	ConditionalExpression	! k ? tt -> xltop : tt -> xrtop		5906572	0					
ANR	5906744	Condition	! k		5906572	0					
ANR	5906745	UnaryOperationExpression	! k		5906572	0					
ANR	5906746	UnaryOperator	!		5906572	0					
ANR	5906747	Identifier	k		5906572	1					
ANR	5906748	PtrMemberAccess	tt -> xltop		5906572	1					
ANR	5906749	Identifier	tt		5906572	0					
ANR	5906750	Identifier	xltop		5906572	1					
ANR	5906751	PtrMemberAccess	tt -> xrtop		5906572	2					
ANR	5906752	Identifier	tt		5906572	0					
ANR	5906753	Identifier	xrtop		5906572	1					
ANR	5906754	ConditionalExpression	! k ? t -> xlbot : t -> xrbot		5906572	1					
ANR	5906755	Condition	! k		5906572	0					
ANR	5906756	UnaryOperationExpression	! k		5906572	0					
ANR	5906757	UnaryOperator	!		5906572	0					
ANR	5906758	Identifier	k		5906572	1					
ANR	5906759	PtrMemberAccess	t -> xlbot		5906572	1					
ANR	5906760	Identifier	t		5906572	0					
ANR	5906761	Identifier	xlbot		5906572	1					
ANR	5906762	PtrMemberAccess	t -> xrbot		5906572	2					
ANR	5906763	Identifier	t		5906572	0					
ANR	5906764	Identifier	xrbot		5906572	1					
ANR	5906765	BreakStatement	break ;	743:28:21418:21423	5906572	1	True				
ANR	5906766	ExpressionStatement	t -> visited = true	744:24:21482:21499	5906572	4	True				
ANR	5906767	AssignmentExpression	t -> visited = true		5906572	0		=			
ANR	5906768	PtrMemberAccess	t -> visited		5906572	0					
ANR	5906769	Identifier	t		5906572	0					
ANR	5906770	Identifier	visited		5906572	1					
ANR	5906771	Identifier	true		5906572	1					
ANR	5906772	ExpressionStatement	tt = t	745:24:21525:21531	5906572	5	True				
ANR	5906773	AssignmentExpression	tt = t		5906572	0		=			
ANR	5906774	Identifier	tt		5906572	0					
ANR	5906775	Identifier	t		5906572	1					
ANR	5906776	IfStatement	if ( ! k ? ! t -> leftmost : ! t -> rightmost )		5906572	3					
ANR	5906777	Condition	! k ? ! t -> leftmost : ! t -> rightmost	747:24:21579:21611	5906572	0	True				
ANR	5906778	ConditionalExpression	! k ? ! t -> leftmost : ! t -> rightmost		5906572	0					
ANR	5906779	Condition	! k		5906572	0					
ANR	5906780	UnaryOperationExpression	! k		5906572	0					
ANR	5906781	UnaryOperator	!		5906572	0					
ANR	5906782	Identifier	k		5906572	1					
ANR	5906783	UnaryOperationExpression	! t -> leftmost		5906572	1					
ANR	5906784	UnaryOperator	!		5906572	0					
ANR	5906785	PtrMemberAccess	t -> leftmost		5906572	1					
ANR	5906786	Identifier	t		5906572	0					
ANR	5906787	Identifier	leftmost		5906572	1					
ANR	5906788	UnaryOperationExpression	! t -> rightmost		5906572	2					
ANR	5906789	UnaryOperator	!		5906572	0					
ANR	5906790	PtrMemberAccess	t -> rightmost		5906572	1					
ANR	5906791	Identifier	t		5906572	0					
ANR	5906792	Identifier	rightmost		5906572	1					
ANR	5906793	ContinueStatement	continue ;	748:24:21638:21646	5906572	1	True				
ANR	5906794	ExpressionStatement	t1 = t	749:20:21668:21674	5906572	4	True				
ANR	5906795	AssignmentExpression	t1 = t		5906572	0		=			
ANR	5906796	Identifier	t1		5906572	0					
ANR	5906797	Identifier	t		5906572	1					
ANR	5906798	ExpressionStatement	"code = hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"	751:20:21765:21835	5906572	5	True				
ANR	5906799	AssignmentExpression	"code = hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"		5906572	0		=			
ANR	5906800	Identifier	code		5906572	0					
ANR	5906801	CallExpression	"hint_by_tangent ( padev , 1 << k , client_data , t0 , t1 , 0 , handler )"		5906572	1					
ANR	5906802	Callee	hint_by_tangent		5906572	0					
ANR	5906803	Identifier	hint_by_tangent		5906572	0					
ANR	5906804	ArgumentList	padev		5906572	1					
ANR	5906805	Argument	padev		5906572	0					
ANR	5906806	Identifier	padev		5906572	0					
ANR	5906807	Argument	1 << k		5906572	1					
ANR	5906808	ShiftExpression	1 << k		5906572	0		<<			
ANR	5906809	PrimaryExpression	1		5906572	0					
ANR	5906810	Identifier	k		5906572	1					
ANR	5906811	Argument	client_data		5906572	2					
ANR	5906812	Identifier	client_data		5906572	0					
ANR	5906813	Argument	t0		5906572	3					
ANR	5906814	Identifier	t0		5906572	0					
ANR	5906815	Argument	t1		5906572	4					
ANR	5906816	Identifier	t1		5906572	0					
ANR	5906817	Argument	0		5906572	5					
ANR	5906818	PrimaryExpression	0		5906572	0					
ANR	5906819	Argument	handler		5906572	6					
ANR	5906820	Identifier	handler		5906572	0					
ANR	5906821	IfStatement	if ( code < 0 )		5906572	6					
ANR	5906822	Condition	code < 0	752:24:21861:21868	5906572	0	True				
ANR	5906823	RelationalExpression	code < 0		5906572	0		<			
ANR	5906824	Identifier	code		5906572	0					
ANR	5906825	PrimaryExpression	0		5906572	1					
ANR	5906826	ReturnStatement	return code ;	753:24:21895:21906	5906572	1	True				
ANR	5906827	Identifier	code		5906572	0					
ANR	5906828	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		5906572	1					
ANR	5906829	ForInit	t0 = padev -> trap_buffer ;	757:13:21963:21986	5906572	0	True				
ANR	5906830	AssignmentExpression	t0 = padev -> trap_buffer		5906572	0		=			
ANR	5906831	Identifier	t0		5906572	0					
ANR	5906832	PtrMemberAccess	padev -> trap_buffer		5906572	1					
ANR	5906833	Identifier	padev		5906572	0					
ANR	5906834	Identifier	trap_buffer		5906572	1					
ANR	5906835	Condition	t0 != padev -> trap_free	757:38:21988:22009	5906572	1	True				
ANR	5906836	EqualityExpression	t0 != padev -> trap_free		5906572	0		!=			
ANR	5906837	Identifier	t0		5906572	0					
ANR	5906838	PtrMemberAccess	padev -> trap_free		5906572	1					
ANR	5906839	Identifier	padev		5906572	0					
ANR	5906840	Identifier	trap_free		5906572	1					
ANR	5906841	AssignmentExpression	t0 = t0 -> link	757:62:22012:22024	5906572	2	True	=			
ANR	5906842	Identifier	t0		5906572	0					
ANR	5906843	PtrMemberAccess	t0 -> link		5906572	1					
ANR	5906844	Identifier	t0		5906572	0					
ANR	5906845	Identifier	link		5906572	1					
ANR	5906846	ExpressionStatement	t0 -> visited = false	758:12:22039:22058	5906572	3	True				
ANR	5906847	AssignmentExpression	t0 -> visited = false		5906572	0		=			
ANR	5906848	PtrMemberAccess	t0 -> visited		5906572	0					
ANR	5906849	Identifier	t0		5906572	0					
ANR	5906850	Identifier	visited		5906572	1					
ANR	5906851	Identifier	false		5906572	1					
ANR	5906852	ForStatement	for ( t0 = padev -> trap_buffer ; t0 != padev -> trap_free ; t0 = t0 -> link )		5906572	4					
ANR	5906853	ForInit	t0 = padev -> trap_buffer ;	761:9:22098:22121	5906572	0	True				
ANR	5906854	AssignmentExpression	t0 = padev -> trap_buffer		5906572	0		=			
ANR	5906855	Identifier	t0		5906572	0					
ANR	5906856	PtrMemberAccess	padev -> trap_buffer		5906572	1					
ANR	5906857	Identifier	padev		5906572	0					
ANR	5906858	Identifier	trap_buffer		5906572	1					
ANR	5906859	Condition	t0 != padev -> trap_free	761:34:22123:22144	5906572	1	True				
ANR	5906860	EqualityExpression	t0 != padev -> trap_free		5906572	0		!=			
ANR	5906861	Identifier	t0		5906572	0					
ANR	5906862	PtrMemberAccess	padev -> trap_free		5906572	1					
ANR	5906863	Identifier	padev		5906572	0					
ANR	5906864	Identifier	trap_free		5906572	1					
ANR	5906865	AssignmentExpression	t0 = t0 -> link	761:58:22147:22159	5906572	2	True	=			
ANR	5906866	Identifier	t0		5906572	0					
ANR	5906867	PtrMemberAccess	t0 -> link		5906572	1					
ANR	5906868	Identifier	t0		5906572	0					
ANR	5906869	Identifier	link		5906572	1					
ANR	5906870	CompoundStatement		47:73:1917:1917	5906572	3					
ANR	5906871	IfStatement	if ( ! t0 -> visited )		5906572	0					
ANR	5906872	Condition	! t0 -> visited	762:12:22176:22187	5906572	0	True				
ANR	5906873	UnaryOperationExpression	! t0 -> visited		5906572	0					
ANR	5906874	UnaryOperator	!		5906572	0					
ANR	5906875	PtrMemberAccess	t0 -> visited		5906572	1					
ANR	5906876	Identifier	t0		5906572	0					
ANR	5906877	Identifier	visited		5906572	1					
ANR	5906878	CompoundStatement		48:26:1945:1945	5906572	1					
ANR	5906879	IfStatement	"if ( is_stem_boundaries ( t0 , 3 ) )"		5906572	0					
ANR	5906880	Condition	"is_stem_boundaries ( t0 , 3 )"	763:16:22208:22232	5906572	0	True				
ANR	5906881	CallExpression	"is_stem_boundaries ( t0 , 3 )"		5906572	0					
ANR	5906882	Callee	is_stem_boundaries		5906572	0					
ANR	5906883	Identifier	is_stem_boundaries		5906572	0					
ANR	5906884	ArgumentList	t0		5906572	1					
ANR	5906885	Argument	t0		5906572	0					
ANR	5906886	Identifier	t0		5906572	0					
ANR	5906887	Argument	3		5906572	1					
ANR	5906888	PrimaryExpression	3		5906572	0					
ANR	5906889	CompoundStatement		52:16:2105:2143	5906572	1					
ANR	5906890	IdentifierDeclStatement	gx_san_trap_contact * cont = t0 -> upper ;	764:16:22253:22290	5906572	0	True				
ANR	5906891	IdentifierDecl	* cont = t0 -> upper		5906572	0					
ANR	5906892	IdentifierDeclType	gx_san_trap_contact *		5906572	0					
ANR	5906893	Identifier	cont		5906572	1					
ANR	5906894	AssignmentExpression	* cont = t0 -> upper		5906572	2		=			
ANR	5906895	Identifier	cont		5906572	0					
ANR	5906896	PtrMemberAccess	t0 -> upper		5906572	1					
ANR	5906897	Identifier	t0		5906572	0					
ANR	5906898	Identifier	upper		5906572	1					
ANR	5906899	IdentifierDeclStatement	"gx_san_trap * t1 = t0 , * t ;"	765:16:22308:22332	5906572	1	True				
ANR	5906900	IdentifierDecl	* t1 = t0		5906572	0					
ANR	5906901	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906902	Identifier	t1		5906572	1					
ANR	5906903	AssignmentExpression	* t1 = t0		5906572	2		=			
ANR	5906904	Identifier	t0		5906572	0					
ANR	5906905	Identifier	t0		5906572	1					
ANR	5906906	IdentifierDecl	* t		5906572	1					
ANR	5906907	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906908	Identifier	t		5906572	1					
ANR	5906909	IdentifierDeclStatement	"double area = 0 , length = 0 , ave_width ;"	766:16:22350:22388	5906572	2	True				
ANR	5906910	IdentifierDecl	area = 0		5906572	0					
ANR	5906911	IdentifierDeclType	double		5906572	0					
ANR	5906912	Identifier	area		5906572	1					
ANR	5906913	AssignmentExpression	area = 0		5906572	2		=			
ANR	5906914	Identifier	area		5906572	0					
ANR	5906915	PrimaryExpression	0		5906572	1					
ANR	5906916	IdentifierDecl	length = 0		5906572	1					
ANR	5906917	IdentifierDeclType	double		5906572	0					
ANR	5906918	Identifier	length		5906572	1					
ANR	5906919	AssignmentExpression	length = 0		5906572	2		=			
ANR	5906920	Identifier	length		5906572	0					
ANR	5906921	PrimaryExpression	0		5906572	1					
ANR	5906922	IdentifierDecl	ave_width		5906572	2					
ANR	5906923	IdentifierDeclType	double		5906572	0					
ANR	5906924	Identifier	ave_width		5906572	1					
ANR	5906925	WhileStatement	while ( cont != NULL && cont -> next == cont )		5906572	3					
ANR	5906926	Condition	cont != NULL && cont -> next == cont	768:22:22413:22446	5906572	0	True				
ANR	5906927	AndExpression	cont != NULL && cont -> next == cont		5906572	0		&&			
ANR	5906928	EqualityExpression	cont != NULL		5906572	0		!=			
ANR	5906929	Identifier	cont		5906572	0					
ANR	5906930	Identifier	NULL		5906572	1					
ANR	5906931	EqualityExpression	cont -> next == cont		5906572	1		==			
ANR	5906932	PtrMemberAccess	cont -> next		5906572	0					
ANR	5906933	Identifier	cont		5906572	0					
ANR	5906934	Identifier	next		5906572	1					
ANR	5906935	Identifier	cont		5906572	1					
ANR	5906936	CompoundStatement		55:20:2249:2277	5906572	1					
ANR	5906937	IdentifierDeclStatement	gx_san_trap * t = cont -> upper ;	769:20:22494:22522	5906572	0	True				
ANR	5906938	IdentifierDecl	* t = cont -> upper		5906572	0					
ANR	5906939	IdentifierDeclType	gx_san_trap *		5906572	0					
ANR	5906940	Identifier	t		5906572	1					
ANR	5906941	AssignmentExpression	* t = cont -> upper		5906572	2		=			
ANR	5906942	Identifier	t		5906572	0					
ANR	5906943	PtrMemberAccess	cont -> upper		5906572	1					
ANR	5906944	Identifier	cont		5906572	0					
ANR	5906945	Identifier	upper		5906572	1					
ANR	5906946	IfStatement	"if ( ! is_stem_boundaries ( t , 3 ) )"		5906572	1					
ANR	5906947	Condition	"! is_stem_boundaries ( t , 3 )"	771:24:22549:22573	5906572	0	True				
ANR	5906948	UnaryOperationExpression	"! is_stem_boundaries ( t , 3 )"		5906572	0					
ANR	5906949	UnaryOperator	!		5906572	0					
ANR	5906950	CallExpression	"is_stem_boundaries ( t , 3 )"		5906572	1					
ANR	5906951	Callee	is_stem_boundaries		5906572	0					
ANR	5906952	Identifier	is_stem_boundaries		5906572	0					
ANR	5906953	ArgumentList	t		5906572	1					
ANR	5906954	Argument	t		5906572	0					
ANR	5906955	Identifier	t		5906572	0					
ANR	5906956	Argument	3		5906572	1					
ANR	5906957	PrimaryExpression	3		5906572	0					
ANR	5906958	CompoundStatement		57:51:2331:2331	5906572	1					
ANR	5906959	ExpressionStatement	t -> visited = true	772:24:22602:22619	5906572	0	True				
ANR	5906960	AssignmentExpression	t -> visited = true		5906572	0		=			
ANR	5906961	PtrMemberAccess	t -> visited		5906572	0					
ANR	5906962	Identifier	t		5906572	0					
ANR	5906963	Identifier	visited		5906572	1					
ANR	5906964	Identifier	true		5906572	1					
ANR	5906965	BreakStatement	break ;	773:24:22645:22650	5906572	1	True				
ANR	5906966	IfStatement	if ( t -> fork > 1 )		5906572	2					
ANR	5906967	Condition	t -> fork > 1	775:24:22698:22708	5906572	0	True				
ANR	5906968	RelationalExpression	t -> fork > 1		5906572	0		>			
ANR	5906969	PtrMemberAccess	t -> fork		5906572	0					
ANR	5906970	Identifier	t		5906572	0					
ANR	5906971	Identifier	fork		5906572	1					
ANR	5906972	PrimaryExpression	1		5906572	1					
ANR	5906973	BreakStatement	break ;	776:24:22735:22740	5906572	1	True				
ANR	5906974	IfStatement	if ( t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot )		5906572	3					
ANR	5906975	Condition	t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot	777:24:22789:22834	5906572	0	True				
ANR	5906976	OrExpression	t1 -> xltop != t -> xlbot || t1 -> xrtop != t -> xrbot		5906572	0		||			
ANR	5906977	EqualityExpression	t1 -> xltop != t -> xlbot		5906572	0		!=			
ANR	5906978	PtrMemberAccess	t1 -> xltop		5906572	0					
ANR	5906979	Identifier	t1		5906572	0					
ANR	5906980	Identifier	xltop		5906572	1					
ANR	5906981	PtrMemberAccess	t -> xlbot		5906572	1					
ANR	5906982	Identifier	t		5906572	0					
ANR	5906983	Identifier	xlbot		5906572	1					
ANR	5906984	EqualityExpression	t1 -> xrtop != t -> xrbot		5906572	1		!=			
ANR	5906985	PtrMemberAccess	t1 -> xrtop		5906572	0					
ANR	5906986	Identifier	t1		5906572	0					
ANR	5906987	Identifier	xrtop		5906572	1					
ANR	5906988	PtrMemberAccess	t -> xrbot		5906572	1					
ANR	5906989	Identifier	t		5906572	0					
ANR	5906990	Identifier	xrbot		5906572	1					
ANR	5906991	BreakStatement	break ;	778:24:22861:22866	5906572	1	True				
ANR	5906992	ExpressionStatement	t1 = t	779:20:22921:22927	5906572	4	True				
ANR	5906993	AssignmentExpression	t1 = t		5906572	0		=			
ANR	5906994	Identifier	t1		5906572	0					
ANR	5906995	Identifier	t		5906572	1					
ANR	5906996	ExpressionStatement	cont = t1 -> upper	780:20:22949:22965	5906572	5	True				
ANR	5906997	AssignmentExpression	cont = t1 -> upper		5906572	0		=			
ANR	5906998	Identifier	cont		5906572	0					
ANR	5906999	PtrMemberAccess	t1 -> upper		5906572	1					
ANR	5907000	Identifier	t1		5906572	0					
ANR	5907001	Identifier	upper		5906572	1					
ANR	5907002	ExpressionStatement	t1 -> visited = true	781:20:22987:23005	5906572	6	True				
ANR	5907003	AssignmentExpression	t1 -> visited = true		5906572	0		=			
ANR	5907004	PtrMemberAccess	t1 -> visited		5906572	0					
ANR	5907005	Identifier	t1		5906572	0					
ANR	5907006	Identifier	visited		5906572	1					
ANR	5907007	Identifier	true		5906572	1					
ANR	5907008	ForStatement	for ( t = t0 ; ; t = t -> upper -> upper )		5906572	4					
ANR	5907009	ForInit	t = t0 ;	784:21:23111:23117	5906572	0	True				
ANR	5907010	AssignmentExpression	t = t0		5906572	0		=			
ANR	5907011	Identifier	t		5906572	0					
ANR	5907012	Identifier	t0		5906572	1					
ANR	5907013	AssignmentExpression	t = t -> upper -> upper	784:31:23121:23139	5906572	1	True	=			
ANR	5907014	Identifier	t		5906572	0					
ANR	5907015	PtrMemberAccess	t -> upper -> upper		5906572	1					
ANR	5907016	PtrMemberAccess	t -> upper		5906572	0					
ANR	5907017	Identifier	t		5906572	0					
ANR	5907018	Identifier	upper		5906572	1					
ANR	5907019	Identifier	upper		5906572	1					
ANR	5907020	CompoundStatement		70:52:2897:2897	5906572	2					
ANR	5907021	ExpressionStatement	length += trap_axis_length ( t )	785:20:23164:23193	5906572	0	True				
ANR	5907022	AssignmentExpression	length += trap_axis_length ( t )		5906572	0		+=			
ANR	5907023	Identifier	length		5906572	0					
ANR	5907024	CallExpression	trap_axis_length ( t )		5906572	1					
ANR	5907025	Callee	trap_axis_length		5906572	0					
ANR	5907026	Identifier	trap_axis_length		5906572	0					
ANR	5907027	ArgumentList	t		5906572	1					
ANR	5907028	Argument	t		5906572	0					
ANR	5907029	Identifier	t		5906572	0					
ANR	5907030	ExpressionStatement	area += trap_area ( t )	786:20:23215:23235	5906572	1	True				
ANR	5907031	AssignmentExpression	area += trap_area ( t )		5906572	0		+=			
ANR	5907032	Identifier	area		5906572	0					
ANR	5907033	CallExpression	trap_area ( t )		5906572	1					
ANR	5907034	Callee	trap_area		5906572	0					
ANR	5907035	Identifier	trap_area		5906572	0					
ANR	5907036	ArgumentList	t		5906572	1					
ANR	5907037	Argument	t		5906572	0					
ANR	5907038	Identifier	t		5906572	0					
ANR	5907039	IfStatement	if ( t == t1 )		5906572	2					
ANR	5907040	Condition	t == t1	787:24:23261:23267	5906572	0	True				
ANR	5907041	EqualityExpression	t == t1		5906572	0		==			
ANR	5907042	Identifier	t		5906572	0					
ANR	5907043	Identifier	t1		5906572	1					
ANR	5907044	BreakStatement	break ;	788:24:23294:23299	5906572	1	True				
ANR	5907045	ExpressionStatement	ave_width = area / length	790:16:23335:23360	5906572	5	True				
ANR	5907046	AssignmentExpression	ave_width = area / length		5906572	0		=			
ANR	5907047	Identifier	ave_width		5906572	0					
ANR	5907048	MultiplicativeExpression	area / length		5906572	1		/			
ANR	5907049	Identifier	area		5906572	0					
ANR	5907050	Identifier	length		5906572	1					
ANR	5907051	IfStatement	if ( length > ave_width / ( 2.0 ) )		5906572	6					
ANR	5907052	Condition	length > ave_width / ( 2.0 )	791:20:23382:23424	5906572	0	True				
ANR	5907053	RelationalExpression	length > ave_width / ( 2.0 )		5906572	0		>			
ANR	5907054	Identifier	length		5906572	0					
ANR	5907055	MultiplicativeExpression	ave_width / ( 2.0 )		5906572	1		/			
ANR	5907056	Identifier	ave_width		5906572	0					
ANR	5907057	PrimaryExpression	2.0		5906572	1					
ANR	5907058	CompoundStatement		79:20:3262:3390	5906572	1					
ANR	5907059	IdentifierDeclStatement	"int code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler ) ;"	793:20:23507:23635	5906572	0	True				
ANR	5907060	IdentifierDecl	"code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		5906572	0					
ANR	5907061	IdentifierDeclType	int		5906572	0					
ANR	5907062	Identifier	code		5906572	1					
ANR	5907063	AssignmentExpression	"code = ( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		5906572	2		=			
ANR	5907064	Identifier	code		5906572	0					
ANR	5907065	CallExpression	"( by_trap ? hint_by_trap : hint_by_tangent ) ( padev , 3 , client_data , t0 , t1 , ave_width , handler )"		5906572	1					
ANR	5907066	Callee	by_trap ? hint_by_trap : hint_by_tangent		5906572	0					
ANR	5907067	ConditionalExpression	by_trap ? hint_by_trap : hint_by_tangent		5906572	0					
ANR	5907068	Condition	by_trap		5906572	0					
ANR	5907069	Identifier	by_trap		5906572	0					
ANR	5907070	Identifier	hint_by_trap		5906572	1					
ANR	5907071	Identifier	hint_by_tangent		5906572	2					
ANR	5907072	ArgumentList	padev		5906572	1					
ANR	5907073	Argument	padev		5906572	0					
ANR	5907074	Identifier	padev		5906572	0					
ANR	5907075	Argument	3		5906572	1					
ANR	5907076	PrimaryExpression	3		5906572	0					
ANR	5907077	Argument	client_data		5906572	2					
ANR	5907078	Identifier	client_data		5906572	0					
ANR	5907079	Argument	t0		5906572	3					
ANR	5907080	Identifier	t0		5906572	0					
ANR	5907081	Argument	t1		5906572	4					
ANR	5907082	Identifier	t1		5906572	0					
ANR	5907083	Argument	ave_width		5906572	5					
ANR	5907084	Identifier	ave_width		5906572	0					
ANR	5907085	Argument	handler		5906572	6					
ANR	5907086	Identifier	handler		5906572	0					
ANR	5907087	IfStatement	if ( code < 0 )		5906572	1					
ANR	5907088	Condition	code < 0	796:24:23662:23669	5906572	0	True				
ANR	5907089	RelationalExpression	code < 0		5906572	0		<			
ANR	5907090	Identifier	code		5906572	0					
ANR	5907091	PrimaryExpression	0		5906572	1					
ANR	5907092	ReturnStatement	return code ;	797:24:23696:23707	5906572	1	True				
ANR	5907093	Identifier	code		5906572	0					
ANR	5907094	ExpressionStatement	t0 -> visited = true	801:8:23759:23777	5906572	1	True				
ANR	5907095	AssignmentExpression	t0 -> visited = true		5906572	0		=			
ANR	5907096	PtrMemberAccess	t0 -> visited		5906572	0					
ANR	5907097	Identifier	t0		5906572	0					
ANR	5907098	Identifier	visited		5906572	1					
ANR	5907099	Identifier	true		5906572	1					
ANR	5907100	ReturnStatement	return 0 ;	803:4:23789:23797	5906572	5	True				
ANR	5907101	PrimaryExpression	0		5906572	0					
ANR	5907102	ReturnType	static int		5906572	1					
ANR	5907103	Identifier	gx_san_generate_stems_aux		5906572	2					
ANR	5907104	ParameterList	"gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		5906572	3					
ANR	5907105	Parameter	gx_device_spot_analyzer * padev	712:26:20089:20118	5906572	0	True				
ANR	5907106	ParameterType	gx_device_spot_analyzer *		5906572	0					
ANR	5907107	Identifier	padev		5906572	1					
ANR	5907108	Parameter	bool overall_hints	713:16:20137:20154	5906572	1	True				
ANR	5907109	ParameterType	bool		5906572	0					
ANR	5907110	Identifier	overall_hints		5906572	1					
ANR	5907111	Parameter	void * client_data	713:36:20157:20173	5906572	2	True				
ANR	5907112	ParameterType	void *		5906572	0					
ANR	5907113	Identifier	client_data		5906572	1					
ANR	5907114	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	714:16:20192:20241	5906572	3	True				
ANR	5907115	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		5906572	0					
ANR	5907116	Identifier	handler		5906572	1					
ANR	5907117	CFGEntryNode	ENTRY		5906572		True				
ANR	5907118	CFGExitNode	EXIT		5906572		True				
ANR	5907119	InfiniteForNode	true		5906572		True				
ANR	5907120	Symbol	client_data		5906572						
ANR	5907121	Symbol	tt		5906572						
ANR	5907122	Symbol	handler		5906572						
ANR	5907123	Symbol	t1 -> visited		5906572						
ANR	5907124	Symbol	padev -> trap_free		5906572						
ANR	5907125	Symbol	by_trap		5906572						
ANR	5907126	Symbol	cont		5906572						
ANR	5907127	Symbol	t -> xrbot		5906572						
ANR	5907128	Symbol	area		5906572						
ANR	5907129	Symbol	NULL		5906572						
ANR	5907130	Symbol	t1 -> upper		5906572						
ANR	5907131	Symbol	* tt		5906572						
ANR	5907132	Symbol	t0 -> visited		5906572						
ANR	5907133	Symbol	t -> rightmost		5906572						
ANR	5907134	Symbol	is_stem_boundaries		5906572						
ANR	5907135	Symbol	tt -> xrtop		5906572						
ANR	5907136	Symbol	* padev		5906572						
ANR	5907137	Symbol	true		5906572						
ANR	5907138	Symbol	padev -> trap_buffer		5906572						
ANR	5907139	Symbol	t0		5906572						
ANR	5907140	Symbol	t1		5906572						
ANR	5907141	Symbol	cont -> upper		5906572						
ANR	5907142	Symbol	code		5906572						
ANR	5907143	Symbol	t -> xlbot		5906572						
ANR	5907144	Symbol	t1 -> xltop		5906572						
ANR	5907145	Symbol	trap_axis_length		5906572						
ANR	5907146	Symbol	padev		5906572						
ANR	5907147	Symbol	trap_area		5906572						
ANR	5907148	Symbol	* * t		5906572						
ANR	5907149	Symbol	t0 -> link		5906572						
ANR	5907150	Symbol	cont -> next		5906572						
ANR	5907151	Symbol	t0 -> upper		5906572						
ANR	5907152	Symbol	t -> upper -> upper		5906572						
ANR	5907153	Symbol	* t1		5906572						
ANR	5907154	Symbol	* t0		5906572						
ANR	5907155	Symbol	tt -> xltop		5906572						
ANR	5907156	Symbol	t0 -> rightmost		5906572						
ANR	5907157	Symbol	false		5906572						
ANR	5907158	Symbol	length		5906572						
ANR	5907159	Symbol	upper_neighbour		5906572						
ANR	5907160	Symbol	k		5906572						
ANR	5907161	Symbol	overall_hints		5906572						
ANR	5907162	Symbol	t -> visited		5906572						
ANR	5907163	Symbol	t1 -> xrtop		5906572						
ANR	5907164	Symbol	t -> upper		5906572						
ANR	5907165	Symbol	t		5906572						
ANR	5907166	Symbol	hint_by_tangent		5906572						
ANR	5907167	Symbol	* cont		5906572						
ANR	5907168	Symbol	t -> fork		5906572						
ANR	5907169	Symbol	hint_by_trap		5906572						
ANR	5907170	Symbol	t -> leftmost		5906572						
ANR	5907171	Symbol	t0 -> leftmost		5906572						
ANR	5907172	Symbol	* t -> upper		5906572						
ANR	5907173	Symbol	* t		5906572						
ANR	5907174	Symbol	ave_width		5906572						
ANR	5907175	Function	gx_san_generate_stems	806:0:23802:24067							
ANR	5907176	FunctionDef	"gx_san_generate_stems (gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss ))"		5907175	0					
ANR	5907177	CompoundStatement		810:0:23983:24067	5907175	0					
ANR	5907178	ReturnStatement	"return gx_san_generate_stems_aux ( padev , overall_hints , client_data , handler ) ;"	811:4:23989:24065	5907175	0	True				
ANR	5907179	CallExpression	"gx_san_generate_stems_aux ( padev , overall_hints , client_data , handler )"		5907175	0					
ANR	5907180	Callee	gx_san_generate_stems_aux		5907175	0					
ANR	5907181	Identifier	gx_san_generate_stems_aux		5907175	0					
ANR	5907182	ArgumentList	padev		5907175	1					
ANR	5907183	Argument	padev		5907175	0					
ANR	5907184	Identifier	padev		5907175	0					
ANR	5907185	Argument	overall_hints		5907175	1					
ANR	5907186	Identifier	overall_hints		5907175	0					
ANR	5907187	Argument	client_data		5907175	2					
ANR	5907188	Identifier	client_data		5907175	0					
ANR	5907189	Argument	handler		5907175	3					
ANR	5907190	Identifier	handler		5907175	0					
ANR	5907191	ReturnType	int		5907175	1					
ANR	5907192	Identifier	gx_san_generate_stems		5907175	2					
ANR	5907193	ParameterList	"gx_device_spot_analyzer * padev , bool overall_hints , void * client_data , int ( * handler ) ( void * client_data , gx_san_sect * ss )"		5907175	3					
ANR	5907194	Parameter	gx_device_spot_analyzer * padev	807:22:23828:23857	5907175	0	True				
ANR	5907195	ParameterType	gx_device_spot_analyzer *		5907175	0					
ANR	5907196	Identifier	padev		5907175	1					
ANR	5907197	Parameter	bool overall_hints	808:16:23876:23893	5907175	1	True				
ANR	5907198	ParameterType	bool		5907175	0					
ANR	5907199	Identifier	overall_hints		5907175	1					
ANR	5907200	Parameter	void * client_data	808:36:23896:23912	5907175	2	True				
ANR	5907201	ParameterType	void *		5907175	0					
ANR	5907202	Identifier	client_data		5907175	1					
ANR	5907203	Parameter	"int ( * handler ) ( void * client_data , gx_san_sect * ss )"	809:16:23931:23980	5907175	3	True				
ANR	5907204	ParameterType	"(( void * client_data , gx_san_sect * ss ) int) *"		5907175	0					
ANR	5907205	Identifier	handler		5907175	1					
ANR	5907206	CFGEntryNode	ENTRY		5907175		True				
ANR	5907207	CFGExitNode	EXIT		5907175		True				
ANR	5907208	Symbol	client_data		5907175						
ANR	5907209	Symbol	handler		5907175						
ANR	5907210	Symbol	gx_san_generate_stems_aux		5907175						
ANR	5907211	Symbol	padev		5907175						
ANR	5907212	Symbol	overall_hints		5907175						
