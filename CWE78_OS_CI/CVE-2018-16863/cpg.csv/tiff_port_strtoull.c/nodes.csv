command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10211579	File	data/converged/CVE-2018-16863_ghostpdl/tiff_port_strtoull.c								
ANR	10211580	Function	strtoull	45:0:2062:3401							
ANR	10211581	FunctionDef	"strtoull (const char * nptr , char * * endptr , int base)"		10211580	0					
ANR	10211582	CompoundStatement		47:0:2133:3401	10211580	0					
ANR	10211583	IdentifierDeclStatement	const char * s ;	48:1:2136:2149	10211580	0	True				
ANR	10211584	IdentifierDecl	* s		10211580	0					
ANR	10211585	IdentifierDeclType	const char *		10211580	0					
ANR	10211586	Identifier	s		10211580	1					
ANR	10211587	IdentifierDeclStatement	unsigned long long acc ;	49:1:2152:2174	10211580	1	True				
ANR	10211588	IdentifierDecl	acc		10211580	0					
ANR	10211589	IdentifierDeclType	unsigned long long		10211580	0					
ANR	10211590	Identifier	acc		10211580	1					
ANR	10211591	IdentifierDeclStatement	char c ;	50:1:2177:2183	10211580	2	True				
ANR	10211592	IdentifierDecl	c		10211580	0					
ANR	10211593	IdentifierDeclType	char		10211580	0					
ANR	10211594	Identifier	c		10211580	1					
ANR	10211595	IdentifierDeclStatement	unsigned long long cutoff ;	51:1:2186:2211	10211580	3	True				
ANR	10211596	IdentifierDecl	cutoff		10211580	0					
ANR	10211597	IdentifierDeclType	unsigned long long		10211580	0					
ANR	10211598	Identifier	cutoff		10211580	1					
ANR	10211599	IdentifierDeclStatement	"int neg , any , cutlim ;"	52:1:2214:2234	10211580	4	True				
ANR	10211600	IdentifierDecl	neg		10211580	0					
ANR	10211601	IdentifierDeclType	int		10211580	0					
ANR	10211602	Identifier	neg		10211580	1					
ANR	10211603	IdentifierDecl	any		10211580	1					
ANR	10211604	IdentifierDeclType	int		10211580	0					
ANR	10211605	Identifier	any		10211580	1					
ANR	10211606	IdentifierDecl	cutlim		10211580	2					
ANR	10211607	IdentifierDeclType	int		10211580	0					
ANR	10211608	Identifier	cutlim		10211580	1					
ANR	10211609	ExpressionStatement	s = nptr	57:1:2297:2305	10211580	5	True				
ANR	10211610	AssignmentExpression	s = nptr		10211580	0		=			
ANR	10211611	Identifier	s		10211580	0					
ANR	10211612	Identifier	nptr		10211580	1					
ANR	10211613	DoStatement	do		10211580	6					
ANR	10211614	CompoundStatement		12:4:177:177	10211580	0					
ANR	10211615	ExpressionStatement	c = * s ++	59:2:2315:2323	10211580	0	True				
ANR	10211616	AssignmentExpression	c = * s ++		10211580	0		=			
ANR	10211617	Identifier	c		10211580	0					
ANR	10211618	UnaryOperationExpression	* s ++		10211580	1					
ANR	10211619	UnaryOperator	*		10211580	0					
ANR	10211620	PostIncDecOperationExpression	s ++		10211580	1					
ANR	10211621	Identifier	s		10211580	0					
ANR	10211622	IncDec	++		10211580	1					
ANR	10211623	Condition	isspace ( ( unsigned char ) c )	60:10:2335:2359	10211580	1	True				
ANR	10211624	CallExpression	isspace ( ( unsigned char ) c )		10211580	0					
ANR	10211625	Callee	isspace		10211580	0					
ANR	10211626	Identifier	isspace		10211580	0					
ANR	10211627	ArgumentList	( unsigned char ) c		10211580	1					
ANR	10211628	Argument	( unsigned char ) c		10211580	0					
ANR	10211629	CastExpression	( unsigned char ) c		10211580	0					
ANR	10211630	CastTarget	unsigned char		10211580	0					
ANR	10211631	Identifier	c		10211580	1					
ANR	10211632	IfStatement	if ( c == '-' )		10211580	7					
ANR	10211633	Condition	c == '-'	61:5:2368:2375	10211580	0	True				
ANR	10211634	EqualityExpression	c == '-'		10211580	0		==			
ANR	10211635	Identifier	c		10211580	0					
ANR	10211636	PrimaryExpression	'-'		10211580	1					
ANR	10211637	CompoundStatement		15:15:244:244	10211580	1					
ANR	10211638	ExpressionStatement	neg = 1	62:2:2382:2389	10211580	0	True				
ANR	10211639	AssignmentExpression	neg = 1		10211580	0		=			
ANR	10211640	Identifier	neg		10211580	0					
ANR	10211641	PrimaryExpression	1		10211580	1					
ANR	10211642	ExpressionStatement	c = * s ++	63:2:2393:2401	10211580	1	True				
ANR	10211643	AssignmentExpression	c = * s ++		10211580	0		=			
ANR	10211644	Identifier	c		10211580	0					
ANR	10211645	UnaryOperationExpression	* s ++		10211580	1					
ANR	10211646	UnaryOperator	*		10211580	0					
ANR	10211647	PostIncDecOperationExpression	s ++		10211580	1					
ANR	10211648	Identifier	s		10211580	0					
ANR	10211649	IncDec	++		10211580	1					
ANR	10211650	ElseStatement	else		10211580	0					
ANR	10211651	CompoundStatement		18:8:277:277	10211580	0					
ANR	10211652	ExpressionStatement	neg = 0	65:2:2415:2422	10211580	0	True				
ANR	10211653	AssignmentExpression	neg = 0		10211580	0		=			
ANR	10211654	Identifier	neg		10211580	0					
ANR	10211655	PrimaryExpression	0		10211580	1					
ANR	10211656	IfStatement	if ( c == '+' )		10211580	1					
ANR	10211657	Condition	c == '+'	66:6:2430:2437	10211580	0	True				
ANR	10211658	EqualityExpression	c == '+'		10211580	0		==			
ANR	10211659	Identifier	c		10211580	0					
ANR	10211660	PrimaryExpression	'+'		10211580	1					
ANR	10211661	ExpressionStatement	c = * s ++	67:3:2443:2451	10211580	1	True				
ANR	10211662	AssignmentExpression	c = * s ++		10211580	0		=			
ANR	10211663	Identifier	c		10211580	0					
ANR	10211664	UnaryOperationExpression	* s ++		10211580	1					
ANR	10211665	UnaryOperator	*		10211580	0					
ANR	10211666	PostIncDecOperationExpression	s ++		10211580	1					
ANR	10211667	Identifier	s		10211580	0					
ANR	10211668	IncDec	++		10211580	1					
ANR	10211669	IfStatement	if ( ( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' ) && ( ( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' ) ) )		10211580	8					
ANR	10211670	Condition	( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' ) && ( ( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' ) )	69:5:2461:2643	10211580	0	True				
ANR	10211671	AndExpression	( base == 0 || base == 16 ) && c == '0' && ( * s == 'x' || * s == 'X' ) && ( ( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' ) )		10211580	0		&&			
ANR	10211672	OrExpression	base == 0 || base == 16		10211580	0		||			
ANR	10211673	EqualityExpression	base == 0		10211580	0		==			
ANR	10211674	Identifier	base		10211580	0					
ANR	10211675	PrimaryExpression	0		10211580	1					
ANR	10211676	EqualityExpression	base == 16		10211580	1		==			
ANR	10211677	Identifier	base		10211580	0					
ANR	10211678	PrimaryExpression	16		10211580	1					
ANR	10211679	AndExpression	c == '0' && ( * s == 'x' || * s == 'X' ) && ( ( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' ) )		10211580	1		&&			
ANR	10211680	EqualityExpression	c == '0'		10211580	0		==			
ANR	10211681	Identifier	c		10211580	0					
ANR	10211682	PrimaryExpression	'0'		10211580	1					
ANR	10211683	AndExpression	( * s == 'x' || * s == 'X' ) && ( ( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' ) )		10211580	1		&&			
ANR	10211684	OrExpression	* s == 'x' || * s == 'X'		10211580	0		||			
ANR	10211685	EqualityExpression	* s == 'x'		10211580	0		==			
ANR	10211686	UnaryOperationExpression	* s		10211580	0					
ANR	10211687	UnaryOperator	*		10211580	0					
ANR	10211688	Identifier	s		10211580	1					
ANR	10211689	PrimaryExpression	'x'		10211580	1					
ANR	10211690	EqualityExpression	* s == 'X'		10211580	1		==			
ANR	10211691	UnaryOperationExpression	* s		10211580	0					
ANR	10211692	UnaryOperator	*		10211580	0					
ANR	10211693	Identifier	s		10211580	1					
ANR	10211694	PrimaryExpression	'X'		10211580	1					
ANR	10211695	OrExpression	( s [ 1 ] >= '0' && s [ 1 ] <= '9' ) || ( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' )		10211580	1		||			
ANR	10211696	AndExpression	s [ 1 ] >= '0' && s [ 1 ] <= '9'		10211580	0		&&			
ANR	10211697	RelationalExpression	s [ 1 ] >= '0'		10211580	0		>=			
ANR	10211698	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211699	Identifier	s		10211580	0					
ANR	10211700	PrimaryExpression	1		10211580	1					
ANR	10211701	PrimaryExpression	'0'		10211580	1					
ANR	10211702	RelationalExpression	s [ 1 ] <= '9'		10211580	1		<=			
ANR	10211703	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211704	Identifier	s		10211580	0					
ANR	10211705	PrimaryExpression	1		10211580	1					
ANR	10211706	PrimaryExpression	'9'		10211580	1					
ANR	10211707	OrExpression	( s [ 1 ] >= 'A' && s [ 1 ] <= 'F' ) || ( s [ 1 ] >= 'a' && s [ 1 ] <= 'f' )		10211580	1		||			
ANR	10211708	AndExpression	s [ 1 ] >= 'A' && s [ 1 ] <= 'F'		10211580	0		&&			
ANR	10211709	RelationalExpression	s [ 1 ] >= 'A'		10211580	0		>=			
ANR	10211710	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211711	Identifier	s		10211580	0					
ANR	10211712	PrimaryExpression	1		10211580	1					
ANR	10211713	PrimaryExpression	'A'		10211580	1					
ANR	10211714	RelationalExpression	s [ 1 ] <= 'F'		10211580	1		<=			
ANR	10211715	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211716	Identifier	s		10211580	0					
ANR	10211717	PrimaryExpression	1		10211580	1					
ANR	10211718	PrimaryExpression	'F'		10211580	1					
ANR	10211719	AndExpression	s [ 1 ] >= 'a' && s [ 1 ] <= 'f'		10211580	1		&&			
ANR	10211720	RelationalExpression	s [ 1 ] >= 'a'		10211580	0		>=			
ANR	10211721	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211722	Identifier	s		10211580	0					
ANR	10211723	PrimaryExpression	1		10211580	1					
ANR	10211724	PrimaryExpression	'a'		10211580	1					
ANR	10211725	RelationalExpression	s [ 1 ] <= 'f'		10211580	1		<=			
ANR	10211726	ArrayIndexing	s [ 1 ]		10211580	0					
ANR	10211727	Identifier	s		10211580	0					
ANR	10211728	PrimaryExpression	1		10211580	1					
ANR	10211729	PrimaryExpression	'f'		10211580	1					
ANR	10211730	CompoundStatement		27:36:512:512	10211580	1					
ANR	10211731	ExpressionStatement	c = s [ 1 ]	74:2:2650:2658	10211580	0	True				
ANR	10211732	AssignmentExpression	c = s [ 1 ]		10211580	0		=			
ANR	10211733	Identifier	c		10211580	0					
ANR	10211734	ArrayIndexing	s [ 1 ]		10211580	1					
ANR	10211735	Identifier	s		10211580	0					
ANR	10211736	PrimaryExpression	1		10211580	1					
ANR	10211737	ExpressionStatement	s += 2	75:2:2662:2668	10211580	1	True				
ANR	10211738	AssignmentExpression	s += 2		10211580	0		+=			
ANR	10211739	Identifier	s		10211580	0					
ANR	10211740	PrimaryExpression	2		10211580	1					
ANR	10211741	ExpressionStatement	base = 16	76:2:2672:2681	10211580	2	True				
ANR	10211742	AssignmentExpression	base = 16		10211580	0		=			
ANR	10211743	Identifier	base		10211580	0					
ANR	10211744	PrimaryExpression	16		10211580	1					
ANR	10211745	IfStatement	if ( base == 0 )		10211580	9					
ANR	10211746	Condition	base == 0	78:5:2691:2699	10211580	0	True				
ANR	10211747	EqualityExpression	base == 0		10211580	0		==			
ANR	10211748	Identifier	base		10211580	0					
ANR	10211749	PrimaryExpression	0		10211580	1					
ANR	10211750	ExpressionStatement	base = c == '0' ? 8 : 10	79:2:2704:2728	10211580	1	True				
ANR	10211751	AssignmentExpression	base = c == '0' ? 8 : 10		10211580	0		=			
ANR	10211752	Identifier	base		10211580	0					
ANR	10211753	ConditionalExpression	c == '0' ? 8 : 10		10211580	1					
ANR	10211754	Condition	c == '0'		10211580	0					
ANR	10211755	EqualityExpression	c == '0'		10211580	0		==			
ANR	10211756	Identifier	c		10211580	0					
ANR	10211757	PrimaryExpression	'0'		10211580	1					
ANR	10211758	PrimaryExpression	8		10211580	1					
ANR	10211759	PrimaryExpression	10		10211580	2					
ANR	10211760	ExpressionStatement	acc = any = 0	80:1:2731:2744	10211580	10	True				
ANR	10211761	AssignmentExpression	acc = any = 0		10211580	0		=			
ANR	10211762	Identifier	acc		10211580	0					
ANR	10211763	AssignmentExpression	any = 0		10211580	1		=			
ANR	10211764	Identifier	any		10211580	0					
ANR	10211765	PrimaryExpression	0		10211580	1					
ANR	10211766	IfStatement	if ( base < 2 || base > 36 )		10211580	11					
ANR	10211767	Condition	base < 2 || base > 36	81:5:2751:2771	10211580	0	True				
ANR	10211768	OrExpression	base < 2 || base > 36		10211580	0		||			
ANR	10211769	RelationalExpression	base < 2		10211580	0		<			
ANR	10211770	Identifier	base		10211580	0					
ANR	10211771	PrimaryExpression	2		10211580	1					
ANR	10211772	RelationalExpression	base > 36		10211580	1		>			
ANR	10211773	Identifier	base		10211580	0					
ANR	10211774	PrimaryExpression	36		10211580	1					
ANR	10211775	GotoStatement	goto noconv ;	82:2:2776:2787	10211580	1	True				
ANR	10211776	Identifier	noconv		10211580	0					
ANR	10211777	ExpressionStatement	cutoff = ULLONG_MAX / base	84:1:2791:2817	10211580	12	True				
ANR	10211778	AssignmentExpression	cutoff = ULLONG_MAX / base		10211580	0		=			
ANR	10211779	Identifier	cutoff		10211580	0					
ANR	10211780	MultiplicativeExpression	ULLONG_MAX / base		10211580	1		/			
ANR	10211781	Identifier	ULLONG_MAX		10211580	0					
ANR	10211782	Identifier	base		10211580	1					
ANR	10211783	ExpressionStatement	cutlim = ULLONG_MAX % base	85:1:2820:2846	10211580	13	True				
ANR	10211784	AssignmentExpression	cutlim = ULLONG_MAX % base		10211580	0		=			
ANR	10211785	Identifier	cutlim		10211580	0					
ANR	10211786	MultiplicativeExpression	ULLONG_MAX % base		10211580	1		%			
ANR	10211787	Identifier	ULLONG_MAX		10211580	0					
ANR	10211788	Identifier	base		10211580	1					
ANR	10211789	ForStatement	for ( ; ; c = * s ++ )		10211580	14					
ANR	10211790	AssignmentExpression	c = * s ++	86:11:2859:2866	10211580	0	True	=			
ANR	10211791	Identifier	c		10211580	0					
ANR	10211792	UnaryOperationExpression	* s ++		10211580	1					
ANR	10211793	UnaryOperator	*		10211580	0					
ANR	10211794	PostIncDecOperationExpression	s ++		10211580	1					
ANR	10211795	Identifier	s		10211580	0					
ANR	10211796	IncDec	++		10211580	1					
ANR	10211797	CompoundStatement		40:21:735:735	10211580	1					
ANR	10211798	IfStatement	if ( c >= '0' && c <= '9' )		10211580	0					
ANR	10211799	Condition	c >= '0' && c <= '9'	87:6:2877:2896	10211580	0	True				
ANR	10211800	AndExpression	c >= '0' && c <= '9'		10211580	0		&&			
ANR	10211801	RelationalExpression	c >= '0'		10211580	0		>=			
ANR	10211802	Identifier	c		10211580	0					
ANR	10211803	PrimaryExpression	'0'		10211580	1					
ANR	10211804	RelationalExpression	c <= '9'		10211580	1		<=			
ANR	10211805	Identifier	c		10211580	0					
ANR	10211806	PrimaryExpression	'9'		10211580	1					
ANR	10211807	ExpressionStatement	c -= '0'	88:3:2902:2910	10211580	1	True				
ANR	10211808	AssignmentExpression	c -= '0'		10211580	0		-=			
ANR	10211809	Identifier	c		10211580	0					
ANR	10211810	PrimaryExpression	'0'		10211580	1					
ANR	10211811	ElseStatement	else		10211580	0					
ANR	10211812	IfStatement	if ( c >= 'A' && c <= 'Z' )		10211580	0					
ANR	10211813	Condition	c >= 'A' && c <= 'Z'	89:11:2923:2942	10211580	0	True				
ANR	10211814	AndExpression	c >= 'A' && c <= 'Z'		10211580	0		&&			
ANR	10211815	RelationalExpression	c >= 'A'		10211580	0		>=			
ANR	10211816	Identifier	c		10211580	0					
ANR	10211817	PrimaryExpression	'A'		10211580	1					
ANR	10211818	RelationalExpression	c <= 'Z'		10211580	1		<=			
ANR	10211819	Identifier	c		10211580	0					
ANR	10211820	PrimaryExpression	'Z'		10211580	1					
ANR	10211821	ExpressionStatement	c -= 'A' - 10	90:3:2948:2961	10211580	1	True				
ANR	10211822	AssignmentExpression	c -= 'A' - 10		10211580	0		-=			
ANR	10211823	Identifier	c		10211580	0					
ANR	10211824	AdditiveExpression	'A' - 10		10211580	1		-			
ANR	10211825	PrimaryExpression	'A'		10211580	0					
ANR	10211826	PrimaryExpression	10		10211580	1					
ANR	10211827	ElseStatement	else		10211580	0					
ANR	10211828	IfStatement	if ( c >= 'a' && c <= 'z' )		10211580	0					
ANR	10211829	Condition	c >= 'a' && c <= 'z'	91:11:2974:2993	10211580	0	True				
ANR	10211830	AndExpression	c >= 'a' && c <= 'z'		10211580	0		&&			
ANR	10211831	RelationalExpression	c >= 'a'		10211580	0		>=			
ANR	10211832	Identifier	c		10211580	0					
ANR	10211833	PrimaryExpression	'a'		10211580	1					
ANR	10211834	RelationalExpression	c <= 'z'		10211580	1		<=			
ANR	10211835	Identifier	c		10211580	0					
ANR	10211836	PrimaryExpression	'z'		10211580	1					
ANR	10211837	ExpressionStatement	c -= 'a' - 10	92:3:2999:3012	10211580	1	True				
ANR	10211838	AssignmentExpression	c -= 'a' - 10		10211580	0		-=			
ANR	10211839	Identifier	c		10211580	0					
ANR	10211840	AdditiveExpression	'a' - 10		10211580	1		-			
ANR	10211841	PrimaryExpression	'a'		10211580	0					
ANR	10211842	PrimaryExpression	10		10211580	1					
ANR	10211843	ElseStatement	else		10211580	0					
ANR	10211844	BreakStatement	break ;	94:3:3024:3029	10211580	0	True				
ANR	10211845	IfStatement	if ( c >= base )		10211580	1					
ANR	10211846	Condition	c >= base	95:6:3037:3045	10211580	0	True				
ANR	10211847	RelationalExpression	c >= base		10211580	0		>=			
ANR	10211848	Identifier	c		10211580	0					
ANR	10211849	Identifier	base		10211580	1					
ANR	10211850	BreakStatement	break ;	96:3:3051:3056	10211580	1	True				
ANR	10211851	IfStatement	if ( any < 0 || acc > cutoff || ( acc == cutoff && c > cutlim ) )		10211580	2					
ANR	10211852	Condition	any < 0 || acc > cutoff || ( acc == cutoff && c > cutlim )	97:6:3064:3119	10211580	0	True				
ANR	10211853	OrExpression	any < 0 || acc > cutoff || ( acc == cutoff && c > cutlim )		10211580	0		||			
ANR	10211854	RelationalExpression	any < 0		10211580	0		<			
ANR	10211855	Identifier	any		10211580	0					
ANR	10211856	PrimaryExpression	0		10211580	1					
ANR	10211857	OrExpression	acc > cutoff || ( acc == cutoff && c > cutlim )		10211580	1		||			
ANR	10211858	RelationalExpression	acc > cutoff		10211580	0		>			
ANR	10211859	Identifier	acc		10211580	0					
ANR	10211860	Identifier	cutoff		10211580	1					
ANR	10211861	AndExpression	acc == cutoff && c > cutlim		10211580	1		&&			
ANR	10211862	EqualityExpression	acc == cutoff		10211580	0		==			
ANR	10211863	Identifier	acc		10211580	0					
ANR	10211864	Identifier	cutoff		10211580	1					
ANR	10211865	RelationalExpression	c > cutlim		10211580	1		>			
ANR	10211866	Identifier	c		10211580	0					
ANR	10211867	Identifier	cutlim		10211580	1					
ANR	10211868	ExpressionStatement	any = - 1	98:3:3125:3133	10211580	1	True				
ANR	10211869	AssignmentExpression	any = - 1		10211580	0		=			
ANR	10211870	Identifier	any		10211580	0					
ANR	10211871	UnaryOperationExpression	- 1		10211580	1					
ANR	10211872	UnaryOperator	-		10211580	0					
ANR	10211873	PrimaryExpression	1		10211580	1					
ANR	10211874	ElseStatement	else		10211580	0					
ANR	10211875	CompoundStatement		53:7:1008:1008	10211580	0					
ANR	10211876	ExpressionStatement	any = 1	100:3:3147:3154	10211580	0	True				
ANR	10211877	AssignmentExpression	any = 1		10211580	0		=			
ANR	10211878	Identifier	any		10211580	0					
ANR	10211879	PrimaryExpression	1		10211580	1					
ANR	10211880	ExpressionStatement	acc *= base	101:3:3159:3170	10211580	1	True				
ANR	10211881	AssignmentExpression	acc *= base		10211580	0		*=			
ANR	10211882	Identifier	acc		10211580	0					
ANR	10211883	Identifier	base		10211580	1					
ANR	10211884	ExpressionStatement	acc += c	102:3:3175:3183	10211580	2	True				
ANR	10211885	AssignmentExpression	acc += c		10211580	0		+=			
ANR	10211886	Identifier	acc		10211580	0					
ANR	10211887	Identifier	c		10211580	1					
ANR	10211888	IfStatement	if ( any < 0 )		10211580	15					
ANR	10211889	Condition	any < 0	105:5:3197:3203	10211580	0	True				
ANR	10211890	RelationalExpression	any < 0		10211580	0		<			
ANR	10211891	Identifier	any		10211580	0					
ANR	10211892	PrimaryExpression	0		10211580	1					
ANR	10211893	CompoundStatement		59:14:1072:1072	10211580	1					
ANR	10211894	ExpressionStatement	acc = ULLONG_MAX	106:2:3210:3226	10211580	0	True				
ANR	10211895	AssignmentExpression	acc = ULLONG_MAX		10211580	0		=			
ANR	10211896	Identifier	acc		10211580	0					
ANR	10211897	Identifier	ULLONG_MAX		10211580	1					
ANR	10211898	ExpressionStatement	errno = ERANGE	107:2:3230:3244	10211580	1	True				
ANR	10211899	AssignmentExpression	errno = ERANGE		10211580	0		=			
ANR	10211900	Identifier	errno		10211580	0					
ANR	10211901	Identifier	ERANGE		10211580	1					
ANR	10211902	ElseStatement	else		10211580	0					
ANR	10211903	IfStatement	if ( ! any )		10211580	0					
ANR	10211904	Condition	! any	108:12:3258:3261	10211580	0	True				
ANR	10211905	UnaryOperationExpression	! any		10211580	0					
ANR	10211906	UnaryOperator	!		10211580	0					
ANR	10211907	Identifier	any		10211580	1					
ANR	10211908	CompoundStatement		62:18:1130:1130	10211580	1					
ANR	10211909	Label	noconv :	109:0:3266:3272	10211580	0	True				
ANR	10211910	Identifier	noconv		10211580	0					
ANR	10211911	ExpressionStatement	errno = EINVAL	110:2:3276:3290	10211580	1	True				
ANR	10211912	AssignmentExpression	errno = EINVAL		10211580	0		=			
ANR	10211913	Identifier	errno		10211580	0					
ANR	10211914	Identifier	EINVAL		10211580	1					
ANR	10211915	ElseStatement	else		10211580	0					
ANR	10211916	IfStatement	if ( neg )		10211580	0					
ANR	10211917	Condition	neg	111:12:3304:3306	10211580	0	True				
ANR	10211918	Identifier	neg		10211580	0					
ANR	10211919	ExpressionStatement	acc = - acc	112:2:3311:3321	10211580	1	True				
ANR	10211920	AssignmentExpression	acc = - acc		10211580	0		=			
ANR	10211921	Identifier	acc		10211580	0					
ANR	10211922	UnaryOperationExpression	- acc		10211580	1					
ANR	10211923	UnaryOperator	-		10211580	0					
ANR	10211924	Identifier	acc		10211580	1					
ANR	10211925	IfStatement	if ( endptr != NULL )		10211580	16					
ANR	10211926	Condition	endptr != NULL	113:5:3328:3341	10211580	0	True				
ANR	10211927	EqualityExpression	endptr != NULL		10211580	0		!=			
ANR	10211928	Identifier	endptr		10211580	0					
ANR	10211929	Identifier	NULL		10211580	1					
ANR	10211930	ExpressionStatement	* endptr = ( char * ) ( any ? s - 1 : nptr )	114:2:3346:3384	10211580	1	True				
ANR	10211931	AssignmentExpression	* endptr = ( char * ) ( any ? s - 1 : nptr )		10211580	0		=			
ANR	10211932	UnaryOperationExpression	* endptr		10211580	0					
ANR	10211933	UnaryOperator	*		10211580	0					
ANR	10211934	Identifier	endptr		10211580	1					
ANR	10211935	CastExpression	( char * ) ( any ? s - 1 : nptr )		10211580	1					
ANR	10211936	CastTarget	char *		10211580	0					
ANR	10211937	ConditionalExpression	any ? s - 1 : nptr		10211580	1					
ANR	10211938	Condition	any		10211580	0					
ANR	10211939	Identifier	any		10211580	0					
ANR	10211940	AdditiveExpression	s - 1		10211580	1		-			
ANR	10211941	Identifier	s		10211580	0					
ANR	10211942	PrimaryExpression	1		10211580	1					
ANR	10211943	Identifier	nptr		10211580	2					
ANR	10211944	ReturnStatement	return ( acc ) ;	115:1:3387:3399	10211580	17	True				
ANR	10211945	Identifier	acc		10211580	0					
ANR	10211946	ReturnType	unsigned long long		10211580	1					
ANR	10211947	Identifier	strtoull		10211580	2					
ANR	10211948	ParameterList	"const char * nptr , char * * endptr , int base"		10211580	3					
ANR	10211949	Parameter	const char * nptr	46:9:2090:2105	10211580	0	True				
ANR	10211950	ParameterType	const char *		10211580	0					
ANR	10211951	Identifier	nptr		10211580	1					
ANR	10211952	Parameter	char * * endptr	46:27:2108:2120	10211580	1	True				
ANR	10211953	ParameterType	char * *		10211580	0					
ANR	10211954	Identifier	endptr		10211580	1					
ANR	10211955	Parameter	int base	46:42:2123:2130	10211580	2	True				
ANR	10211956	ParameterType	int		10211580	0					
ANR	10211957	Identifier	base		10211580	1					
ANR	10211958	CFGEntryNode	ENTRY		10211580		True				
ANR	10211959	CFGExitNode	EXIT		10211580		True				
ANR	10211960	InfiniteForNode	true		10211580		True				
ANR	10211961	Symbol	acc		10211580						
ANR	10211962	Symbol	* s ++		10211580						
ANR	10211963	Symbol	errno		10211580						
ANR	10211964	Symbol	c		10211580						
ANR	10211965	Symbol	NULL		10211580						
ANR	10211966	Symbol	endptr		10211580						
ANR	10211967	Symbol	* endptr		10211580						
ANR	10211968	Symbol	isspace		10211580						
ANR	10211969	Symbol	any		10211580						
ANR	10211970	Symbol	EINVAL		10211580						
ANR	10211971	Symbol	neg		10211580						
ANR	10211972	Symbol	nptr		10211580						
ANR	10211973	Symbol	s		10211580						
ANR	10211974	Symbol	cutlim		10211580						
ANR	10211975	Symbol	ERANGE		10211580						
ANR	10211976	Symbol	cutoff		10211580						
ANR	10211977	Symbol	* s		10211580						
ANR	10211978	Symbol	base		10211580						
ANR	10211979	Symbol	ULLONG_MAX		10211580						
