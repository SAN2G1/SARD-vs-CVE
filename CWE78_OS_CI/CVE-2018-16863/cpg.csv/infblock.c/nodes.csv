command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6050271	File	data/converged/CVE-2018-16863_ghostpdl/infblock.c								
ANR	6050272	DeclStmt									
ANR	6050273	Decl							const uInt	const uInt [ ]	border
ANR	6050274	Function	inflate_blocks_reset	67:0:3222:3741							
ANR	6050275	FunctionDef	"inflate_blocks_reset (inflate_blocks_statef * s , z_streamp z , uLongf * c)"		6050274	0					
ANR	6050276	CompoundStatement		71:0:3321:3741	6050274	0					
ANR	6050277	IfStatement	if ( c != Z_NULL )		6050274	0					
ANR	6050278	Condition	c != Z_NULL	72:6:3329:3339	6050274	0	True				
ANR	6050279	EqualityExpression	c != Z_NULL		6050274	0		!=			
ANR	6050280	Identifier	c		6050274	0					
ANR	6050281	Identifier	Z_NULL		6050274	1					
ANR	6050282	ExpressionStatement	* c = s -> check	73:4:3346:3359	6050274	1	True				
ANR	6050283	AssignmentExpression	* c = s -> check		6050274	0		=			
ANR	6050284	UnaryOperationExpression	* c		6050274	0					
ANR	6050285	UnaryOperator	*		6050274	0					
ANR	6050286	Identifier	c		6050274	1					
ANR	6050287	PtrMemberAccess	s -> check		6050274	1					
ANR	6050288	Identifier	s		6050274	0					
ANR	6050289	Identifier	check		6050274	1					
ANR	6050290	IfStatement	if ( s -> mode == BTREE || s -> mode == DTREE )		6050274	1					
ANR	6050291	Condition	s -> mode == BTREE || s -> mode == DTREE	74:6:3367:3402	6050274	0	True				
ANR	6050292	OrExpression	s -> mode == BTREE || s -> mode == DTREE		6050274	0		||			
ANR	6050293	EqualityExpression	s -> mode == BTREE		6050274	0		==			
ANR	6050294	PtrMemberAccess	s -> mode		6050274	0					
ANR	6050295	Identifier	s		6050274	0					
ANR	6050296	Identifier	mode		6050274	1					
ANR	6050297	Identifier	BTREE		6050274	1					
ANR	6050298	EqualityExpression	s -> mode == DTREE		6050274	1		==			
ANR	6050299	PtrMemberAccess	s -> mode		6050274	0					
ANR	6050300	Identifier	s		6050274	0					
ANR	6050301	Identifier	mode		6050274	1					
ANR	6050302	Identifier	DTREE		6050274	1					
ANR	6050303	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	75:4:3409:3437	6050274	1	True				
ANR	6050304	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		6050274	0					
ANR	6050305	Callee	ZFREE		6050274	0					
ANR	6050306	Identifier	ZFREE		6050274	0					
ANR	6050307	ArgumentList	z		6050274	1					
ANR	6050308	Argument	z		6050274	0					
ANR	6050309	Identifier	z		6050274	0					
ANR	6050310	Argument	s -> sub . trees . blens		6050274	1					
ANR	6050311	MemberAccess	s -> sub . trees . blens		6050274	0					
ANR	6050312	MemberAccess	s -> sub . trees		6050274	0					
ANR	6050313	PtrMemberAccess	s -> sub		6050274	0					
ANR	6050314	Identifier	s		6050274	0					
ANR	6050315	Identifier	sub		6050274	1					
ANR	6050316	Identifier	trees		6050274	1					
ANR	6050317	Identifier	blens		6050274	1					
ANR	6050318	IfStatement	if ( s -> mode == CODES )		6050274	2					
ANR	6050319	Condition	s -> mode == CODES	76:6:3445:3460	6050274	0	True				
ANR	6050320	EqualityExpression	s -> mode == CODES		6050274	0		==			
ANR	6050321	PtrMemberAccess	s -> mode		6050274	0					
ANR	6050322	Identifier	s		6050274	0					
ANR	6050323	Identifier	mode		6050274	1					
ANR	6050324	Identifier	CODES		6050274	1					
ANR	6050325	ExpressionStatement	"inflate_codes_free ( s -> sub . decode . codes , z )"	77:4:3467:3509	6050274	1	True				
ANR	6050326	CallExpression	"inflate_codes_free ( s -> sub . decode . codes , z )"		6050274	0					
ANR	6050327	Callee	inflate_codes_free		6050274	0					
ANR	6050328	Identifier	inflate_codes_free		6050274	0					
ANR	6050329	ArgumentList	s -> sub . decode . codes		6050274	1					
ANR	6050330	Argument	s -> sub . decode . codes		6050274	0					
ANR	6050331	MemberAccess	s -> sub . decode . codes		6050274	0					
ANR	6050332	MemberAccess	s -> sub . decode		6050274	0					
ANR	6050333	PtrMemberAccess	s -> sub		6050274	0					
ANR	6050334	Identifier	s		6050274	0					
ANR	6050335	Identifier	sub		6050274	1					
ANR	6050336	Identifier	decode		6050274	1					
ANR	6050337	Identifier	codes		6050274	1					
ANR	6050338	Argument	z		6050274	1					
ANR	6050339	Identifier	z		6050274	0					
ANR	6050340	ExpressionStatement	s -> mode = TYPE	78:2:3513:3527	6050274	3	True				
ANR	6050341	AssignmentExpression	s -> mode = TYPE		6050274	0		=			
ANR	6050342	PtrMemberAccess	s -> mode		6050274	0					
ANR	6050343	Identifier	s		6050274	0					
ANR	6050344	Identifier	mode		6050274	1					
ANR	6050345	Identifier	TYPE		6050274	1					
ANR	6050346	ExpressionStatement	s -> bitk = 0	79:2:3531:3542	6050274	4	True				
ANR	6050347	AssignmentExpression	s -> bitk = 0		6050274	0		=			
ANR	6050348	PtrMemberAccess	s -> bitk		6050274	0					
ANR	6050349	Identifier	s		6050274	0					
ANR	6050350	Identifier	bitk		6050274	1					
ANR	6050351	PrimaryExpression	0		6050274	1					
ANR	6050352	ExpressionStatement	s -> bitb = 0	80:2:3546:3557	6050274	5	True				
ANR	6050353	AssignmentExpression	s -> bitb = 0		6050274	0		=			
ANR	6050354	PtrMemberAccess	s -> bitb		6050274	0					
ANR	6050355	Identifier	s		6050274	0					
ANR	6050356	Identifier	bitb		6050274	1					
ANR	6050357	PrimaryExpression	0		6050274	1					
ANR	6050358	ExpressionStatement	s -> read = s -> write = s -> window	81:2:3561:3591	6050274	6	True				
ANR	6050359	AssignmentExpression	s -> read = s -> write = s -> window		6050274	0		=			
ANR	6050360	PtrMemberAccess	s -> read		6050274	0					
ANR	6050361	Identifier	s		6050274	0					
ANR	6050362	Identifier	read		6050274	1					
ANR	6050363	AssignmentExpression	s -> write = s -> window		6050274	1		=			
ANR	6050364	PtrMemberAccess	s -> write		6050274	0					
ANR	6050365	Identifier	s		6050274	0					
ANR	6050366	Identifier	write		6050274	1					
ANR	6050367	PtrMemberAccess	s -> window		6050274	1					
ANR	6050368	Identifier	s		6050274	0					
ANR	6050369	Identifier	window		6050274	1					
ANR	6050370	IfStatement	if ( s -> checkfn != Z_NULL )		6050274	7					
ANR	6050371	Condition	s -> checkfn != Z_NULL	82:6:3599:3618	6050274	0	True				
ANR	6050372	EqualityExpression	s -> checkfn != Z_NULL		6050274	0		!=			
ANR	6050373	PtrMemberAccess	s -> checkfn		6050274	0					
ANR	6050374	Identifier	s		6050274	0					
ANR	6050375	Identifier	checkfn		6050274	1					
ANR	6050376	Identifier	Z_NULL		6050274	1					
ANR	6050377	ExpressionStatement	"z -> adler = s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"	83:4:3625:3690	6050274	1	True				
ANR	6050378	AssignmentExpression	"z -> adler = s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		6050274	0		=			
ANR	6050379	PtrMemberAccess	z -> adler		6050274	0					
ANR	6050380	Identifier	z		6050274	0					
ANR	6050381	Identifier	adler		6050274	1					
ANR	6050382	AssignmentExpression	"s -> check = ( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		6050274	1		=			
ANR	6050383	PtrMemberAccess	s -> check		6050274	0					
ANR	6050384	Identifier	s		6050274	0					
ANR	6050385	Identifier	check		6050274	1					
ANR	6050386	CallExpression	"( * s -> checkfn ) ( 0L , ( const Bytef * ) Z_NULL , 0 )"		6050274	1					
ANR	6050387	Callee	* s -> checkfn		6050274	0					
ANR	6050388	UnaryOperationExpression	* s -> checkfn		6050274	0					
ANR	6050389	UnaryOperator	*		6050274	0					
ANR	6050390	PtrMemberAccess	s -> checkfn		6050274	1					
ANR	6050391	Identifier	s		6050274	0					
ANR	6050392	Identifier	checkfn		6050274	1					
ANR	6050393	ArgumentList	0L		6050274	1					
ANR	6050394	Argument	0L		6050274	0					
ANR	6050395	PrimaryExpression	0L		6050274	0					
ANR	6050396	Argument	( const Bytef * ) Z_NULL		6050274	1					
ANR	6050397	CastExpression	( const Bytef * ) Z_NULL		6050274	0					
ANR	6050398	CastTarget	const Bytef *		6050274	0					
ANR	6050399	Identifier	Z_NULL		6050274	1					
ANR	6050400	Argument	0		6050274	2					
ANR	6050401	PrimaryExpression	0		6050274	0					
ANR	6050402	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks reset\\n"" ) )"	84:2:3694:3739	6050274	8	True				
ANR	6050403	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks reset\\n"" ) )"		6050274	0					
ANR	6050404	Callee	Tracev		6050274	0					
ANR	6050405	Identifier	Tracev		6050274	0					
ANR	6050406	ArgumentList	"stderr , ""inflate:   blocks reset\\n"""		6050274	1					
ANR	6050407	Argument	"stderr , ""inflate:   blocks reset\\n"""		6050274	0					
ANR	6050408	Expression	"stderr , ""inflate:   blocks reset\\n"""		6050274	0					
ANR	6050409	Identifier	stderr		6050274	0					
ANR	6050410	PrimaryExpression	"""inflate:   blocks reset\\n"""		6050274	1					
ANR	6050411	ReturnType	local void		6050274	1					
ANR	6050412	Identifier	inflate_blocks_reset		6050274	2					
ANR	6050413	ParameterList	"inflate_blocks_statef * s , z_streamp z , uLongf * c"		6050274	3					
ANR	6050414	Parameter	inflate_blocks_statef * s	68:0:3270:3293	6050274	0	True				
ANR	6050415	ParameterType	inflate_blocks_statef *		6050274	0					
ANR	6050416	Identifier	s		6050274	1					
ANR	6050417	Parameter	z_streamp z	69:0:3296:3306	6050274	1	True				
ANR	6050418	ParameterType	z_streamp		6050274	0					
ANR	6050419	Identifier	z		6050274	1					
ANR	6050420	Parameter	uLongf * c	70:0:3309:3317	6050274	2	True				
ANR	6050421	ParameterType	uLongf *		6050274	0					
ANR	6050422	Identifier	c		6050274	1					
ANR	6050423	CFGEntryNode	ENTRY		6050274		True				
ANR	6050424	CFGExitNode	EXIT		6050274		True				
ANR	6050425	Symbol	* z		6050274						
ANR	6050426	Symbol	s -> check		6050274						
ANR	6050427	Symbol	DTREE		6050274						
ANR	6050428	Symbol	z -> adler		6050274						
ANR	6050429	Symbol	s -> bitb		6050274						
ANR	6050430	Symbol	CODES		6050274						
ANR	6050431	Symbol	s -> read		6050274						
ANR	6050432	Symbol	* * s		6050274						
ANR	6050433	Symbol	s -> mode		6050274						
ANR	6050434	Symbol	s -> window		6050274						
ANR	6050435	Symbol	TYPE		6050274						
ANR	6050436	Symbol	s -> sub . trees . blens		6050274						
ANR	6050437	Symbol	c		6050274						
ANR	6050438	Symbol	* s -> checkfn		6050274						
ANR	6050439	Symbol	BTREE		6050274						
ANR	6050440	Symbol	s -> sub		6050274						
ANR	6050441	Symbol	stderr		6050274						
ANR	6050442	Symbol	* c		6050274						
ANR	6050443	Symbol	s -> checkfn		6050274						
ANR	6050444	Symbol	s		6050274						
ANR	6050445	Symbol	s -> sub . decode		6050274						
ANR	6050446	Symbol	s -> sub . trees		6050274						
ANR	6050447	Symbol	s -> sub . decode . codes		6050274						
ANR	6050448	Symbol	s -> bitk		6050274						
ANR	6050449	Symbol	z		6050274						
ANR	6050450	Symbol	* s		6050274						
ANR	6050451	Symbol	s -> write		6050274						
ANR	6050452	Symbol	Z_NULL		6050274						
ANR	6050453	Function	inflate_blocks_new	88:0:3745:4418							
ANR	6050454	FunctionDef	"inflate_blocks_new (z_streamp z , check_func c , uInt w)"		6050453	0					
ANR	6050455	CompoundStatement		92:0:3845:4418	6050453	0					
ANR	6050456	IdentifierDeclStatement	inflate_blocks_statef * s ;	93:2:3849:3873	6050453	0	True				
ANR	6050457	IdentifierDecl	* s		6050453	0					
ANR	6050458	IdentifierDeclType	inflate_blocks_statef *		6050453	0					
ANR	6050459	Identifier	s		6050453	1					
ANR	6050460	IfStatement	"if ( ( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL )"		6050453	1					
ANR	6050461	Condition	"( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL"	95:6:3882:3977	6050453	0	True				
ANR	6050462	EqualityExpression	"( s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) ) ) == Z_NULL"		6050453	0		==			
ANR	6050463	AssignmentExpression	"s = ( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		6050453	0		=			
ANR	6050464	Identifier	s		6050453	0					
ANR	6050465	CastExpression	"( inflate_blocks_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		6050453	1					
ANR	6050466	CastTarget	inflate_blocks_statef *		6050453	0					
ANR	6050467	CallExpression	"ZALLOC ( z , 1 , sizeof ( struct inflate_blocks_state ) )"		6050453	1					
ANR	6050468	Callee	ZALLOC		6050453	0					
ANR	6050469	Identifier	ZALLOC		6050453	0					
ANR	6050470	ArgumentList	z		6050453	1					
ANR	6050471	Argument	z		6050453	0					
ANR	6050472	Identifier	z		6050453	0					
ANR	6050473	Argument	1		6050453	1					
ANR	6050474	PrimaryExpression	1		6050453	0					
ANR	6050475	Argument	sizeof ( struct inflate_blocks_state )		6050453	2					
ANR	6050476	SizeofExpression	sizeof ( struct inflate_blocks_state )		6050453	0					
ANR	6050477	Sizeof	sizeof		6050453	0					
ANR	6050478	SizeofOperand	struct inflate_blocks_state		6050453	1					
ANR	6050479	Identifier	Z_NULL		6050453	1					
ANR	6050480	ReturnStatement	return s ;	97:4:3984:3992	6050453	1	True				
ANR	6050481	Identifier	s		6050453	0					
ANR	6050482	IfStatement	"if ( ( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL )"		6050453	2					
ANR	6050483	Condition	"( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL"	98:6:4000:4082	6050453	0	True				
ANR	6050484	EqualityExpression	"( s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY ) ) == Z_NULL"		6050453	0		==			
ANR	6050485	AssignmentExpression	"s -> hufts = ( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		6050453	0		=			
ANR	6050486	PtrMemberAccess	s -> hufts		6050453	0					
ANR	6050487	Identifier	s		6050453	0					
ANR	6050488	Identifier	hufts		6050453	1					
ANR	6050489	CastExpression	"( inflate_huft * ) ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		6050453	1					
ANR	6050490	CastTarget	inflate_huft *		6050453	0					
ANR	6050491	CallExpression	"ZALLOC ( z , sizeof ( inflate_huft ) , MANY )"		6050453	1					
ANR	6050492	Callee	ZALLOC		6050453	0					
ANR	6050493	Identifier	ZALLOC		6050453	0					
ANR	6050494	ArgumentList	z		6050453	1					
ANR	6050495	Argument	z		6050453	0					
ANR	6050496	Identifier	z		6050453	0					
ANR	6050497	Argument	sizeof ( inflate_huft )		6050453	1					
ANR	6050498	SizeofExpression	sizeof ( inflate_huft )		6050453	0					
ANR	6050499	Sizeof	sizeof		6050453	0					
ANR	6050500	SizeofOperand	inflate_huft		6050453	1					
ANR	6050501	Argument	MANY		6050453	2					
ANR	6050502	Identifier	MANY		6050453	0					
ANR	6050503	Identifier	Z_NULL		6050453	1					
ANR	6050504	CompoundStatement		9:2:241:241	6050453	1					
ANR	6050505	ExpressionStatement	"ZFREE ( z , s )"	101:4:4093:4104	6050453	0	True				
ANR	6050506	CallExpression	"ZFREE ( z , s )"		6050453	0					
ANR	6050507	Callee	ZFREE		6050453	0					
ANR	6050508	Identifier	ZFREE		6050453	0					
ANR	6050509	ArgumentList	z		6050453	1					
ANR	6050510	Argument	z		6050453	0					
ANR	6050511	Identifier	z		6050453	0					
ANR	6050512	Argument	s		6050453	1					
ANR	6050513	Identifier	s		6050453	0					
ANR	6050514	ReturnStatement	return Z_NULL ;	102:4:4110:4123	6050453	1	True				
ANR	6050515	Identifier	Z_NULL		6050453	0					
ANR	6050516	IfStatement	"if ( ( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL )"		6050453	3					
ANR	6050517	Condition	"( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL"	104:6:4135:4182	6050453	0	True				
ANR	6050518	EqualityExpression	"( s -> window = ( Bytef * ) ZALLOC ( z , 1 , w ) ) == Z_NULL"		6050453	0		==			
ANR	6050519	AssignmentExpression	"s -> window = ( Bytef * ) ZALLOC ( z , 1 , w )"		6050453	0		=			
ANR	6050520	PtrMemberAccess	s -> window		6050453	0					
ANR	6050521	Identifier	s		6050453	0					
ANR	6050522	Identifier	window		6050453	1					
ANR	6050523	CastExpression	"( Bytef * ) ZALLOC ( z , 1 , w )"		6050453	1					
ANR	6050524	CastTarget	Bytef *		6050453	0					
ANR	6050525	CallExpression	"ZALLOC ( z , 1 , w )"		6050453	1					
ANR	6050526	Callee	ZALLOC		6050453	0					
ANR	6050527	Identifier	ZALLOC		6050453	0					
ANR	6050528	ArgumentList	z		6050453	1					
ANR	6050529	Argument	z		6050453	0					
ANR	6050530	Identifier	z		6050453	0					
ANR	6050531	Argument	1		6050453	1					
ANR	6050532	PrimaryExpression	1		6050453	0					
ANR	6050533	Argument	w		6050453	2					
ANR	6050534	Identifier	w		6050453	0					
ANR	6050535	Identifier	Z_NULL		6050453	1					
ANR	6050536	CompoundStatement		14:2:341:341	6050453	1					
ANR	6050537	ExpressionStatement	"ZFREE ( z , s -> hufts )"	106:4:4193:4211	6050453	0	True				
ANR	6050538	CallExpression	"ZFREE ( z , s -> hufts )"		6050453	0					
ANR	6050539	Callee	ZFREE		6050453	0					
ANR	6050540	Identifier	ZFREE		6050453	0					
ANR	6050541	ArgumentList	z		6050453	1					
ANR	6050542	Argument	z		6050453	0					
ANR	6050543	Identifier	z		6050453	0					
ANR	6050544	Argument	s -> hufts		6050453	1					
ANR	6050545	PtrMemberAccess	s -> hufts		6050453	0					
ANR	6050546	Identifier	s		6050453	0					
ANR	6050547	Identifier	hufts		6050453	1					
ANR	6050548	ExpressionStatement	"ZFREE ( z , s )"	107:4:4217:4228	6050453	1	True				
ANR	6050549	CallExpression	"ZFREE ( z , s )"		6050453	0					
ANR	6050550	Callee	ZFREE		6050453	0					
ANR	6050551	Identifier	ZFREE		6050453	0					
ANR	6050552	ArgumentList	z		6050453	1					
ANR	6050553	Argument	z		6050453	0					
ANR	6050554	Identifier	z		6050453	0					
ANR	6050555	Argument	s		6050453	1					
ANR	6050556	Identifier	s		6050453	0					
ANR	6050557	ReturnStatement	return Z_NULL ;	108:4:4234:4247	6050453	2	True				
ANR	6050558	Identifier	Z_NULL		6050453	0					
ANR	6050559	ExpressionStatement	s -> end = s -> window + w	110:2:4255:4277	6050453	4	True				
ANR	6050560	AssignmentExpression	s -> end = s -> window + w		6050453	0		=			
ANR	6050561	PtrMemberAccess	s -> end		6050453	0					
ANR	6050562	Identifier	s		6050453	0					
ANR	6050563	Identifier	end		6050453	1					
ANR	6050564	AdditiveExpression	s -> window + w		6050453	1		+			
ANR	6050565	PtrMemberAccess	s -> window		6050453	0					
ANR	6050566	Identifier	s		6050453	0					
ANR	6050567	Identifier	window		6050453	1					
ANR	6050568	Identifier	w		6050453	1					
ANR	6050569	ExpressionStatement	s -> checkfn = c	111:2:4281:4295	6050453	5	True				
ANR	6050570	AssignmentExpression	s -> checkfn = c		6050453	0		=			
ANR	6050571	PtrMemberAccess	s -> checkfn		6050453	0					
ANR	6050572	Identifier	s		6050453	0					
ANR	6050573	Identifier	checkfn		6050453	1					
ANR	6050574	Identifier	c		6050453	1					
ANR	6050575	ExpressionStatement	s -> mode = TYPE	112:2:4299:4313	6050453	6	True				
ANR	6050576	AssignmentExpression	s -> mode = TYPE		6050453	0		=			
ANR	6050577	PtrMemberAccess	s -> mode		6050453	0					
ANR	6050578	Identifier	s		6050453	0					
ANR	6050579	Identifier	mode		6050453	1					
ANR	6050580	Identifier	TYPE		6050453	1					
ANR	6050581	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks allocated\\n"" ) )"	113:2:4317:4366	6050453	7	True				
ANR	6050582	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks allocated\\n"" ) )"		6050453	0					
ANR	6050583	Callee	Tracev		6050453	0					
ANR	6050584	Identifier	Tracev		6050453	0					
ANR	6050585	ArgumentList	"stderr , ""inflate:   blocks allocated\\n"""		6050453	1					
ANR	6050586	Argument	"stderr , ""inflate:   blocks allocated\\n"""		6050453	0					
ANR	6050587	Expression	"stderr , ""inflate:   blocks allocated\\n"""		6050453	0					
ANR	6050588	Identifier	stderr		6050453	0					
ANR	6050589	PrimaryExpression	"""inflate:   blocks allocated\\n"""		6050453	1					
ANR	6050590	ExpressionStatement	"inflate_blocks_reset ( s , z , Z_NULL )"	114:2:4370:4404	6050453	8	True				
ANR	6050591	CallExpression	"inflate_blocks_reset ( s , z , Z_NULL )"		6050453	0					
ANR	6050592	Callee	inflate_blocks_reset		6050453	0					
ANR	6050593	Identifier	inflate_blocks_reset		6050453	0					
ANR	6050594	ArgumentList	s		6050453	1					
ANR	6050595	Argument	s		6050453	0					
ANR	6050596	Identifier	s		6050453	0					
ANR	6050597	Argument	z		6050453	1					
ANR	6050598	Identifier	z		6050453	0					
ANR	6050599	Argument	Z_NULL		6050453	2					
ANR	6050600	Identifier	Z_NULL		6050453	0					
ANR	6050601	ReturnStatement	return s ;	115:2:4408:4416	6050453	9	True				
ANR	6050602	Identifier	s		6050453	0					
ANR	6050603	ReturnType	local inflate_blocks_statef *		6050453	1					
ANR	6050604	Identifier	inflate_blocks_new		6050453	2					
ANR	6050605	ParameterList	"z_streamp z , check_func c , uInt w"		6050453	3					
ANR	6050606	Parameter	z_streamp z	89:0:3809:3819	6050453	0	True				
ANR	6050607	ParameterType	z_streamp		6050453	0					
ANR	6050608	Identifier	z		6050453	1					
ANR	6050609	Parameter	check_func c	90:0:3822:3833	6050453	1	True				
ANR	6050610	ParameterType	check_func		6050453	0					
ANR	6050611	Identifier	c		6050453	1					
ANR	6050612	Parameter	uInt w	91:0:3836:3841	6050453	2	True				
ANR	6050613	ParameterType	uInt		6050453	0					
ANR	6050614	Identifier	w		6050453	1					
ANR	6050615	CFGEntryNode	ENTRY		6050453		True				
ANR	6050616	CFGExitNode	EXIT		6050453		True				
ANR	6050617	Symbol	c		6050453						
ANR	6050618	Symbol	s -> end		6050453						
ANR	6050619	Symbol	stderr		6050453						
ANR	6050620	Symbol	s -> checkfn		6050453						
ANR	6050621	Symbol	ZALLOC		6050453						
ANR	6050622	Symbol	s		6050453						
ANR	6050623	Symbol	w		6050453						
ANR	6050624	Symbol	s -> hufts		6050453						
ANR	6050625	Symbol	z		6050453						
ANR	6050626	Symbol	s -> mode		6050453						
ANR	6050627	Symbol	MANY		6050453						
ANR	6050628	Symbol	s -> window		6050453						
ANR	6050629	Symbol	* s		6050453						
ANR	6050630	Symbol	TYPE		6050453						
ANR	6050631	Symbol	Z_NULL		6050453						
ANR	6050632	Function	inflate_blocks	119:0:4422:11910							
ANR	6050633	FunctionDef	"inflate_blocks (inflate_blocks_statef * s , z_streamp z , int r)"		6050632	0					
ANR	6050634	CompoundStatement		123:0:4510:11910	6050632	0					
ANR	6050635	IdentifierDeclStatement	uInt t ;	124:2:4514:4520	6050632	0	True				
ANR	6050636	IdentifierDecl	t		6050632	0					
ANR	6050637	IdentifierDeclType	uInt		6050632	0					
ANR	6050638	Identifier	t		6050632	1					
ANR	6050639	IdentifierDeclStatement	uLong b ;	125:2:4562:4569	6050632	1	True				
ANR	6050640	IdentifierDecl	b		6050632	0					
ANR	6050641	IdentifierDeclType	uLong		6050632	0					
ANR	6050642	Identifier	b		6050632	1					
ANR	6050643	IdentifierDeclStatement	uInt k ;	126:2:4603:4609	6050632	2	True				
ANR	6050644	IdentifierDecl	k		6050632	0					
ANR	6050645	IdentifierDeclType	uInt		6050632	0					
ANR	6050646	Identifier	k		6050632	1					
ANR	6050647	IdentifierDeclStatement	Bytef * p ;	127:2:4652:4660	6050632	3	True				
ANR	6050648	IdentifierDecl	* p		6050632	0					
ANR	6050649	IdentifierDeclType	Bytef *		6050632	0					
ANR	6050650	Identifier	p		6050632	1					
ANR	6050651	IdentifierDeclStatement	uInt n ;	128:2:4701:4707	6050632	4	True				
ANR	6050652	IdentifierDecl	n		6050632	0					
ANR	6050653	IdentifierDeclType	uInt		6050632	0					
ANR	6050654	Identifier	n		6050632	1					
ANR	6050655	IdentifierDeclStatement	Bytef * q ;	129:2:4753:4761	6050632	5	True				
ANR	6050656	IdentifierDecl	* q		6050632	0					
ANR	6050657	IdentifierDeclType	Bytef *		6050632	0					
ANR	6050658	Identifier	q		6050632	1					
ANR	6050659	IdentifierDeclStatement	uInt m ;	130:2:4811:4817	6050632	6	True				
ANR	6050660	IdentifierDecl	m		6050632	0					
ANR	6050661	IdentifierDeclType	uInt		6050632	0					
ANR	6050662	Identifier	m		6050632	1					
ANR	6050663	Statement	LOAD	133:2:4953:4956	6050632	7	True				
ANR	6050664	WhileStatement	while ( 1 )		6050632	8					
ANR	6050665	Condition	1	136:9:5013:5013	6050632	0	True				
ANR	6050666	PrimaryExpression	1		6050632	0					
ANR	6050667	SwitchStatement	switch ( s -> mode )		6050632	1					
ANR	6050668	Condition	s -> mode	136:20:5024:5030	6050632	0	True				
ANR	6050669	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050670	Identifier	s		6050632	0					
ANR	6050671	Identifier	mode		6050632	1					
ANR	6050672	CompoundStatement		222:6:6824:7008	6050632	1					
ANR	6050673	Label	case TYPE :	138:4:5041:5050	6050632	0	True				
ANR	6050674	Identifier	TYPE		6050632	0					
ANR	6050675	Statement	NEEDBITS	139:6:5058:5065	6050632	1	True				
ANR	6050676	Statement	(	139:14:5066:5066	6050632	2	True				
ANR	6050677	Statement	3	139:15:5067:5067	6050632	3	True				
ANR	6050678	Statement	)	139:16:5068:5068	6050632	4	True				
ANR	6050679	ExpressionStatement	t = ( uInt ) b & 7	140:6:5076:5091	6050632	5	True				
ANR	6050680	AssignmentExpression	t = ( uInt ) b & 7		6050632	0		=			
ANR	6050681	Identifier	t		6050632	0					
ANR	6050682	BitAndExpression	( uInt ) b & 7		6050632	1		&			
ANR	6050683	CastExpression	( uInt ) b		6050632	0					
ANR	6050684	CastTarget	uInt		6050632	0					
ANR	6050685	Identifier	b		6050632	1					
ANR	6050686	PrimaryExpression	7		6050632	1					
ANR	6050687	ExpressionStatement	s -> last = t & 1	141:6:5099:5114	6050632	6	True				
ANR	6050688	AssignmentExpression	s -> last = t & 1		6050632	0		=			
ANR	6050689	PtrMemberAccess	s -> last		6050632	0					
ANR	6050690	Identifier	s		6050632	0					
ANR	6050691	Identifier	last		6050632	1					
ANR	6050692	BitAndExpression	t & 1		6050632	1		&			
ANR	6050693	Identifier	t		6050632	0					
ANR	6050694	PrimaryExpression	1		6050632	1					
ANR	6050695	SwitchStatement	switch ( t >> 1 )		6050632	7					
ANR	6050696	Condition	t >> 1	142:14:5130:5135	6050632	0	True				
ANR	6050697	ShiftExpression	t >> 1		6050632	0		>>			
ANR	6050698	Identifier	t		6050632	0					
ANR	6050699	PrimaryExpression	1		6050632	1					
ANR	6050700	CompoundStatement		21:6:633:633	6050632	1					
ANR	6050701	Label	case 0 :	144:8:5154:5160	6050632	0	True				
ANR	6050702	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	145:10:5209:5301	6050632	1	True				
ANR	6050703	CallExpression	"Tracev ( ( stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		6050632	0					
ANR	6050704	Callee	Tracev		6050632	0					
ANR	6050705	Identifier	Tracev		6050632	0					
ANR	6050706	ArgumentList	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050707	Argument	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050708	Expression	"stderr , ""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050709	Identifier	stderr		6050632	0					
ANR	6050710	Expression	"""inflate:     stored block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050711	PrimaryExpression	"""inflate:     stored block%s\\n"""		6050632	0					
ANR	6050712	ConditionalExpression	"s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050713	Condition	s -> last		6050632	0					
ANR	6050714	PtrMemberAccess	s -> last		6050632	0					
ANR	6050715	Identifier	s		6050632	0					
ANR	6050716	Identifier	last		6050632	1					
ANR	6050717	PrimaryExpression	""" (last)"""		6050632	1					
ANR	6050718	PrimaryExpression	""""""		6050632	2					
ANR	6050719	Statement	DUMPBITS	147:10:5313:5320	6050632	2	True				
ANR	6050720	Statement	(	147:18:5321:5321	6050632	3	True				
ANR	6050721	Statement	3	147:19:5322:5322	6050632	4	True				
ANR	6050722	Statement	)	147:20:5323:5323	6050632	5	True				
ANR	6050723	ExpressionStatement	t = k & 7	148:10:5335:5344	6050632	6	True				
ANR	6050724	AssignmentExpression	t = k & 7		6050632	0		=			
ANR	6050725	Identifier	t		6050632	0					
ANR	6050726	BitAndExpression	k & 7		6050632	1		&			
ANR	6050727	Identifier	k		6050632	0					
ANR	6050728	PrimaryExpression	7		6050632	1					
ANR	6050729	Statement	DUMPBITS	149:10:5401:5408	6050632	7	True				
ANR	6050730	ExpressionStatement	( t ) s -> mode = LENS	149:18:5409:5437	6050632	8	True				
ANR	6050731	AssignmentExpression	( t ) s -> mode = LENS		6050632	0		=			
ANR	6050732	CastExpression	( t ) s -> mode		6050632	0					
ANR	6050733	CastTarget	t		6050632	0					
ANR	6050734	PtrMemberAccess	s -> mode		6050632	1					
ANR	6050735	Identifier	s		6050632	0					
ANR	6050736	Identifier	mode		6050632	1					
ANR	6050737	Identifier	LENS		6050632	1					
ANR	6050738	BreakStatement	break ;	151:10:5496:5501	6050632	9	True				
ANR	6050739	Label	case 1 :	152:8:5511:5517	6050632	10	True				
ANR	6050740	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	153:10:5565:5662	6050632	11	True				
ANR	6050741	CallExpression	"Tracev ( ( stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		6050632	0					
ANR	6050742	Callee	Tracev		6050632	0					
ANR	6050743	Identifier	Tracev		6050632	0					
ANR	6050744	ArgumentList	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050745	Argument	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050746	Expression	"stderr , ""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050747	Identifier	stderr		6050632	0					
ANR	6050748	Expression	"""inflate:     fixed codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050749	PrimaryExpression	"""inflate:     fixed codes block%s\\n"""		6050632	0					
ANR	6050750	ConditionalExpression	"s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050751	Condition	s -> last		6050632	0					
ANR	6050752	PtrMemberAccess	s -> last		6050632	0					
ANR	6050753	Identifier	s		6050632	0					
ANR	6050754	Identifier	last		6050632	1					
ANR	6050755	PrimaryExpression	""" (last)"""		6050632	1					
ANR	6050756	PrimaryExpression	""""""		6050632	2					
ANR	6050757	CompoundStatement		35:12:1202:1223	6050632	12					
ANR	6050758	IdentifierDeclStatement	"uInt bl , bd ;"	156:12:5688:5699	6050632	0	True				
ANR	6050759	IdentifierDecl	bl		6050632	0					
ANR	6050760	IdentifierDeclType	uInt		6050632	0					
ANR	6050761	Identifier	bl		6050632	1					
ANR	6050762	IdentifierDecl	bd		6050632	1					
ANR	6050763	IdentifierDeclType	uInt		6050632	0					
ANR	6050764	Identifier	bd		6050632	1					
ANR	6050765	IdentifierDeclStatement	"inflate_huft * tl , * td ;"	157:12:5713:5734	6050632	1	True				
ANR	6050766	IdentifierDecl	* tl		6050632	0					
ANR	6050767	IdentifierDeclType	inflate_huft *		6050632	0					
ANR	6050768	Identifier	tl		6050632	1					
ANR	6050769	IdentifierDecl	* td		6050632	1					
ANR	6050770	IdentifierDeclType	inflate_huft *		6050632	0					
ANR	6050771	Identifier	td		6050632	1					
ANR	6050772	ExpressionStatement	"inflate_trees_fixed ( & bl , & bd , ( const inflate_huft * * ) & tl , ( const inflate_huft * * ) & td , z )"	159:12:5749:5877	6050632	2	True				
ANR	6050773	CallExpression	"inflate_trees_fixed ( & bl , & bd , ( const inflate_huft * * ) & tl , ( const inflate_huft * * ) & td , z )"		6050632	0					
ANR	6050774	Callee	inflate_trees_fixed		6050632	0					
ANR	6050775	Identifier	inflate_trees_fixed		6050632	0					
ANR	6050776	ArgumentList	& bl		6050632	1					
ANR	6050777	Argument	& bl		6050632	0					
ANR	6050778	UnaryOperationExpression	& bl		6050632	0					
ANR	6050779	UnaryOperator	&		6050632	0					
ANR	6050780	Identifier	bl		6050632	1					
ANR	6050781	Argument	& bd		6050632	1					
ANR	6050782	UnaryOperationExpression	& bd		6050632	0					
ANR	6050783	UnaryOperator	&		6050632	0					
ANR	6050784	Identifier	bd		6050632	1					
ANR	6050785	Argument	( const inflate_huft * * ) & tl		6050632	2					
ANR	6050786	CastExpression	( const inflate_huft * * ) & tl		6050632	0					
ANR	6050787	CastTarget	const inflate_huft * *		6050632	0					
ANR	6050788	UnaryOperationExpression	& tl		6050632	1					
ANR	6050789	UnaryOperator	&		6050632	0					
ANR	6050790	Identifier	tl		6050632	1					
ANR	6050791	Argument	( const inflate_huft * * ) & td		6050632	3					
ANR	6050792	CastExpression	( const inflate_huft * * ) & td		6050632	0					
ANR	6050793	CastTarget	const inflate_huft * *		6050632	0					
ANR	6050794	UnaryOperationExpression	& td		6050632	1					
ANR	6050795	UnaryOperator	&		6050632	0					
ANR	6050796	Identifier	td		6050632	1					
ANR	6050797	Argument	z		6050632	4					
ANR	6050798	Identifier	z		6050632	0					
ANR	6050799	ExpressionStatement	"s -> sub . decode . codes = inflate_codes_new ( bl , bd , tl , td , z )"	161:12:5891:5949	6050632	3	True				
ANR	6050800	AssignmentExpression	"s -> sub . decode . codes = inflate_codes_new ( bl , bd , tl , td , z )"		6050632	0		=			
ANR	6050801	MemberAccess	s -> sub . decode . codes		6050632	0					
ANR	6050802	MemberAccess	s -> sub . decode		6050632	0					
ANR	6050803	PtrMemberAccess	s -> sub		6050632	0					
ANR	6050804	Identifier	s		6050632	0					
ANR	6050805	Identifier	sub		6050632	1					
ANR	6050806	Identifier	decode		6050632	1					
ANR	6050807	Identifier	codes		6050632	1					
ANR	6050808	CallExpression	"inflate_codes_new ( bl , bd , tl , td , z )"		6050632	1					
ANR	6050809	Callee	inflate_codes_new		6050632	0					
ANR	6050810	Identifier	inflate_codes_new		6050632	0					
ANR	6050811	ArgumentList	bl		6050632	1					
ANR	6050812	Argument	bl		6050632	0					
ANR	6050813	Identifier	bl		6050632	0					
ANR	6050814	Argument	bd		6050632	1					
ANR	6050815	Identifier	bd		6050632	0					
ANR	6050816	Argument	tl		6050632	2					
ANR	6050817	Identifier	tl		6050632	0					
ANR	6050818	Argument	td		6050632	3					
ANR	6050819	Identifier	td		6050632	0					
ANR	6050820	Argument	z		6050632	4					
ANR	6050821	Identifier	z		6050632	0					
ANR	6050822	IfStatement	if ( s -> sub . decode . codes == Z_NULL )		6050632	4					
ANR	6050823	Condition	s -> sub . decode . codes == Z_NULL	162:16:5967:5995	6050632	0	True				
ANR	6050824	EqualityExpression	s -> sub . decode . codes == Z_NULL		6050632	0		==			
ANR	6050825	MemberAccess	s -> sub . decode . codes		6050632	0					
ANR	6050826	MemberAccess	s -> sub . decode		6050632	0					
ANR	6050827	PtrMemberAccess	s -> sub		6050632	0					
ANR	6050828	Identifier	s		6050632	0					
ANR	6050829	Identifier	sub		6050632	1					
ANR	6050830	Identifier	decode		6050632	1					
ANR	6050831	Identifier	codes		6050632	1					
ANR	6050832	Identifier	Z_NULL		6050632	1					
ANR	6050833	CompoundStatement		41:12:1499:1499	6050632	1					
ANR	6050834	ExpressionStatement	r = Z_MEM_ERROR	164:14:6026:6041	6050632	0	True				
ANR	6050835	AssignmentExpression	r = Z_MEM_ERROR		6050632	0		=			
ANR	6050836	Identifier	r		6050632	0					
ANR	6050837	Identifier	Z_MEM_ERROR		6050632	1					
ANR	6050838	Statement	LEAVE	165:14:6057:6061	6050632	1	True				
ANR	6050839	Statement	DUMPBITS	168:10:6099:6106	6050632	13	True				
ANR	6050840	Statement	(	168:18:6107:6107	6050632	14	True				
ANR	6050841	Statement	3	168:19:6108:6108	6050632	15	True				
ANR	6050842	Statement	)	168:20:6109:6109	6050632	16	True				
ANR	6050843	ExpressionStatement	s -> mode = CODES	169:10:6121:6136	6050632	17	True				
ANR	6050844	AssignmentExpression	s -> mode = CODES		6050632	0		=			
ANR	6050845	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050846	Identifier	s		6050632	0					
ANR	6050847	Identifier	mode		6050632	1					
ANR	6050848	Identifier	CODES		6050632	1					
ANR	6050849	BreakStatement	break ;	170:10:6148:6153	6050632	18	True				
ANR	6050850	Label	case 2 :	171:8:6163:6169	6050632	19	True				
ANR	6050851	ExpressionStatement	"Tracev ( ( stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"	172:10:6219:6318	6050632	20	True				
ANR	6050852	CallExpression	"Tracev ( ( stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """" ) )"		6050632	0					
ANR	6050853	Callee	Tracev		6050632	0					
ANR	6050854	Identifier	Tracev		6050632	0					
ANR	6050855	ArgumentList	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050856	Argument	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050857	Expression	"stderr , ""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	0					
ANR	6050858	Identifier	stderr		6050632	0					
ANR	6050859	Expression	"""inflate:     dynamic codes block%s\\n"" , s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050860	PrimaryExpression	"""inflate:     dynamic codes block%s\\n"""		6050632	0					
ANR	6050861	ConditionalExpression	"s -> last ? "" (last)"" : """""		6050632	1					
ANR	6050862	Condition	s -> last		6050632	0					
ANR	6050863	PtrMemberAccess	s -> last		6050632	0					
ANR	6050864	Identifier	s		6050632	0					
ANR	6050865	Identifier	last		6050632	1					
ANR	6050866	PrimaryExpression	""" (last)"""		6050632	1					
ANR	6050867	PrimaryExpression	""""""		6050632	2					
ANR	6050868	Statement	DUMPBITS	174:10:6330:6337	6050632	21	True				
ANR	6050869	Statement	(	174:18:6338:6338	6050632	22	True				
ANR	6050870	Statement	3	174:19:6339:6339	6050632	23	True				
ANR	6050871	Statement	)	174:20:6340:6340	6050632	24	True				
ANR	6050872	ExpressionStatement	s -> mode = TABLE	175:10:6352:6367	6050632	25	True				
ANR	6050873	AssignmentExpression	s -> mode = TABLE		6050632	0		=			
ANR	6050874	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050875	Identifier	s		6050632	0					
ANR	6050876	Identifier	mode		6050632	1					
ANR	6050877	Identifier	TABLE		6050632	1					
ANR	6050878	BreakStatement	break ;	176:10:6379:6384	6050632	26	True				
ANR	6050879	Label	case 3 :	177:8:6394:6400	6050632	27	True				
ANR	6050880	Statement	DUMPBITS	178:10:6450:6457	6050632	28	True				
ANR	6050881	Statement	(	178:18:6458:6458	6050632	29	True				
ANR	6050882	Statement	3	178:19:6459:6459	6050632	30	True				
ANR	6050883	Statement	)	178:20:6460:6460	6050632	31	True				
ANR	6050884	ExpressionStatement	s -> mode = BAD	179:10:6472:6485	6050632	32	True				
ANR	6050885	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6050886	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050887	Identifier	s		6050632	0					
ANR	6050888	Identifier	mode		6050632	1					
ANR	6050889	Identifier	BAD		6050632	1					
ANR	6050890	ExpressionStatement	"z -> msg = ( char * ) ""invalid block type"""	180:10:6497:6533	6050632	33	True				
ANR	6050891	AssignmentExpression	"z -> msg = ( char * ) ""invalid block type"""		6050632	0		=			
ANR	6050892	PtrMemberAccess	z -> msg		6050632	0					
ANR	6050893	Identifier	z		6050632	0					
ANR	6050894	Identifier	msg		6050632	1					
ANR	6050895	CastExpression	"( char * ) ""invalid block type"""		6050632	1					
ANR	6050896	CastTarget	char *		6050632	0					
ANR	6050897	PrimaryExpression	"""invalid block type"""		6050632	1					
ANR	6050898	ExpressionStatement	r = Z_DATA_ERROR	181:10:6545:6561	6050632	34	True				
ANR	6050899	AssignmentExpression	r = Z_DATA_ERROR		6050632	0		=			
ANR	6050900	Identifier	r		6050632	0					
ANR	6050901	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6050902	Statement	LEAVE	182:10:6573:6577	6050632	35	True				
ANR	6050903	BreakStatement	break ;	184:6:6593:6598	6050632	8	True				
ANR	6050904	Label	case LENS :	185:4:6604:6613	6050632	9	True				
ANR	6050905	Identifier	LENS		6050632	0					
ANR	6050906	Statement	NEEDBITS	186:6:6621:6628	6050632	10	True				
ANR	6050907	Statement	(	186:14:6629:6629	6050632	11	True				
ANR	6050908	Statement	32	186:15:6630:6631	6050632	12	True				
ANR	6050909	Statement	)	186:17:6632:6632	6050632	13	True				
ANR	6050910	IfStatement	if ( ( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff ) )		6050632	14					
ANR	6050911	Condition	( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff )	187:10:6644:6682	6050632	0	True				
ANR	6050912	EqualityExpression	( ( ( ~b ) >> 16 ) & 0xffff ) != ( b & 0xffff )		6050632	0		!=			
ANR	6050913	BitAndExpression	( ( ~b ) >> 16 ) & 0xffff		6050632	0		&			
ANR	6050914	ShiftExpression	( ~b ) >> 16		6050632	0		>>			
ANR	6050915	Identifier	~b		6050632	0					
ANR	6050916	PrimaryExpression	16		6050632	1					
ANR	6050917	PrimaryExpression	0xffff		6050632	1					
ANR	6050918	BitAndExpression	b & 0xffff		6050632	1		&			
ANR	6050919	Identifier	b		6050632	0					
ANR	6050920	PrimaryExpression	0xffff		6050632	1					
ANR	6050921	CompoundStatement		66:6:2180:2180	6050632	1					
ANR	6050922	ExpressionStatement	s -> mode = BAD	189:8:6701:6714	6050632	0	True				
ANR	6050923	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6050924	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050925	Identifier	s		6050632	0					
ANR	6050926	Identifier	mode		6050632	1					
ANR	6050927	Identifier	BAD		6050632	1					
ANR	6050928	ExpressionStatement	"z -> msg = ( char * ) ""invalid stored block lengths"""	190:8:6724:6770	6050632	1	True				
ANR	6050929	AssignmentExpression	"z -> msg = ( char * ) ""invalid stored block lengths"""		6050632	0		=			
ANR	6050930	PtrMemberAccess	z -> msg		6050632	0					
ANR	6050931	Identifier	z		6050632	0					
ANR	6050932	Identifier	msg		6050632	1					
ANR	6050933	CastExpression	"( char * ) ""invalid stored block lengths"""		6050632	1					
ANR	6050934	CastTarget	char *		6050632	0					
ANR	6050935	PrimaryExpression	"""invalid stored block lengths"""		6050632	1					
ANR	6050936	ExpressionStatement	r = Z_DATA_ERROR	191:8:6780:6796	6050632	2	True				
ANR	6050937	AssignmentExpression	r = Z_DATA_ERROR		6050632	0		=			
ANR	6050938	Identifier	r		6050632	0					
ANR	6050939	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6050940	Statement	LEAVE	192:8:6806:6810	6050632	3	True				
ANR	6050941	ExpressionStatement	s -> sub . left = ( uInt ) b & 0xffff	194:6:6826:6856	6050632	15	True				
ANR	6050942	AssignmentExpression	s -> sub . left = ( uInt ) b & 0xffff		6050632	0		=			
ANR	6050943	MemberAccess	s -> sub . left		6050632	0					
ANR	6050944	PtrMemberAccess	s -> sub		6050632	0					
ANR	6050945	Identifier	s		6050632	0					
ANR	6050946	Identifier	sub		6050632	1					
ANR	6050947	Identifier	left		6050632	1					
ANR	6050948	BitAndExpression	( uInt ) b & 0xffff		6050632	1		&			
ANR	6050949	CastExpression	( uInt ) b		6050632	0					
ANR	6050950	CastTarget	uInt		6050632	0					
ANR	6050951	Identifier	b		6050632	1					
ANR	6050952	PrimaryExpression	0xffff		6050632	1					
ANR	6050953	ExpressionStatement	b = k = 0	195:6:6864:6873	6050632	16	True				
ANR	6050954	AssignmentExpression	b = k = 0		6050632	0		=			
ANR	6050955	Identifier	b		6050632	0					
ANR	6050956	AssignmentExpression	k = 0		6050632	1		=			
ANR	6050957	Identifier	k		6050632	0					
ANR	6050958	PrimaryExpression	0		6050632	1					
ANR	6050959	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       stored length %u\\n"" , s -> sub . left ) )"	196:6:6918:6984	6050632	17	True				
ANR	6050960	CallExpression	"Tracev ( ( stderr , ""inflate:       stored length %u\\n"" , s -> sub . left ) )"		6050632	0					
ANR	6050961	Callee	Tracev		6050632	0					
ANR	6050962	Identifier	Tracev		6050632	0					
ANR	6050963	ArgumentList	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		6050632	1					
ANR	6050964	Argument	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		6050632	0					
ANR	6050965	Expression	"stderr , ""inflate:       stored length %u\\n"" , s -> sub . left"		6050632	0					
ANR	6050966	Identifier	stderr		6050632	0					
ANR	6050967	Expression	"""inflate:       stored length %u\\n"" , s -> sub . left"		6050632	1					
ANR	6050968	PrimaryExpression	"""inflate:       stored length %u\\n"""		6050632	0					
ANR	6050969	MemberAccess	s -> sub . left		6050632	1					
ANR	6050970	PtrMemberAccess	s -> sub		6050632	0					
ANR	6050971	Identifier	s		6050632	0					
ANR	6050972	Identifier	sub		6050632	1					
ANR	6050973	Identifier	left		6050632	1					
ANR	6050974	ExpressionStatement	s -> mode = s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )	197:6:6992:7047	6050632	18	True				
ANR	6050975	AssignmentExpression	s -> mode = s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )		6050632	0		=			
ANR	6050976	PtrMemberAccess	s -> mode		6050632	0					
ANR	6050977	Identifier	s		6050632	0					
ANR	6050978	Identifier	mode		6050632	1					
ANR	6050979	ConditionalExpression	s -> sub . left ? STORED : ( s -> last ? DRY : TYPE )		6050632	1					
ANR	6050980	Condition	s -> sub . left		6050632	0					
ANR	6050981	MemberAccess	s -> sub . left		6050632	0					
ANR	6050982	PtrMemberAccess	s -> sub		6050632	0					
ANR	6050983	Identifier	s		6050632	0					
ANR	6050984	Identifier	sub		6050632	1					
ANR	6050985	Identifier	left		6050632	1					
ANR	6050986	Identifier	STORED		6050632	1					
ANR	6050987	ConditionalExpression	s -> last ? DRY : TYPE		6050632	2					
ANR	6050988	Condition	s -> last		6050632	0					
ANR	6050989	PtrMemberAccess	s -> last		6050632	0					
ANR	6050990	Identifier	s		6050632	0					
ANR	6050991	Identifier	last		6050632	1					
ANR	6050992	Identifier	DRY		6050632	1					
ANR	6050993	Identifier	TYPE		6050632	2					
ANR	6050994	BreakStatement	break ;	198:6:7055:7060	6050632	19	True				
ANR	6050995	Label	case STORED :	199:4:7066:7077	6050632	20	True				
ANR	6050996	Identifier	STORED		6050632	0					
ANR	6050997	IfStatement	if ( n == 0 )		6050632	21					
ANR	6050998	Condition	n == 0	200:10:7089:7094	6050632	0	True				
ANR	6050999	EqualityExpression	n == 0		6050632	0		==			
ANR	6051000	Identifier	n		6050632	0					
ANR	6051001	PrimaryExpression	0		6050632	1					
ANR	6051002	IdentifierDeclStatement	LEAVE NEEDOUT t = s -> sub . left ;	201:8:7105:7146	6050632	1	True				
ANR	6051003	IdentifierDecl	t = s -> sub . left		6050632	0					
ANR	6051004	IdentifierDeclType	LEAVE NEEDOUT		6050632	0					
ANR	6051005	Identifier	t		6050632	1					
ANR	6051006	AssignmentExpression	t = s -> sub . left		6050632	2		=			
ANR	6051007	Identifier	t		6050632	0					
ANR	6051008	MemberAccess	s -> sub . left		6050632	1					
ANR	6051009	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051010	Identifier	s		6050632	0					
ANR	6051011	Identifier	sub		6050632	1					
ANR	6051012	Identifier	left		6050632	1					
ANR	6051013	IfStatement	if ( t > n )		6050632	22					
ANR	6051014	Condition	t > n	204:10:7158:7162	6050632	0	True				
ANR	6051015	RelationalExpression	t > n		6050632	0		>			
ANR	6051016	Identifier	t		6050632	0					
ANR	6051017	Identifier	n		6050632	1					
ANR	6051018	ExpressionStatement	t = n	204:17:7165:7170	6050632	1	True				
ANR	6051019	AssignmentExpression	t = n		6050632	0		=			
ANR	6051020	Identifier	t		6050632	0					
ANR	6051021	Identifier	n		6050632	1					
ANR	6051022	IfStatement	if ( t > m )		6050632	23					
ANR	6051023	Condition	t > m	205:10:7182:7186	6050632	0	True				
ANR	6051024	RelationalExpression	t > m		6050632	0		>			
ANR	6051025	Identifier	t		6050632	0					
ANR	6051026	Identifier	m		6050632	1					
ANR	6051027	ExpressionStatement	t = m	205:17:7189:7194	6050632	1	True				
ANR	6051028	AssignmentExpression	t = m		6050632	0		=			
ANR	6051029	Identifier	t		6050632	0					
ANR	6051030	Identifier	m		6050632	1					
ANR	6051031	ExpressionStatement	"zmemcpy ( q , p , t )"	206:6:7202:7218	6050632	24	True				
ANR	6051032	CallExpression	"zmemcpy ( q , p , t )"		6050632	0					
ANR	6051033	Callee	zmemcpy		6050632	0					
ANR	6051034	Identifier	zmemcpy		6050632	0					
ANR	6051035	ArgumentList	q		6050632	1					
ANR	6051036	Argument	q		6050632	0					
ANR	6051037	Identifier	q		6050632	0					
ANR	6051038	Argument	p		6050632	1					
ANR	6051039	Identifier	p		6050632	0					
ANR	6051040	Argument	t		6050632	2					
ANR	6051041	Identifier	t		6050632	0					
ANR	6051042	ExpressionStatement	p += t	207:6:7226:7232	6050632	25	True				
ANR	6051043	AssignmentExpression	p += t		6050632	0		+=			
ANR	6051044	Identifier	p		6050632	0					
ANR	6051045	Identifier	t		6050632	1					
ANR	6051046	ExpressionStatement	n -= t	207:15:7235:7241	6050632	26	True				
ANR	6051047	AssignmentExpression	n -= t		6050632	0		-=			
ANR	6051048	Identifier	n		6050632	0					
ANR	6051049	Identifier	t		6050632	1					
ANR	6051050	ExpressionStatement	q += t	208:6:7249:7255	6050632	27	True				
ANR	6051051	AssignmentExpression	q += t		6050632	0		+=			
ANR	6051052	Identifier	q		6050632	0					
ANR	6051053	Identifier	t		6050632	1					
ANR	6051054	ExpressionStatement	m -= t	208:15:7258:7264	6050632	28	True				
ANR	6051055	AssignmentExpression	m -= t		6050632	0		-=			
ANR	6051056	Identifier	m		6050632	0					
ANR	6051057	Identifier	t		6050632	1					
ANR	6051058	IfStatement	if ( ( s -> sub . left -= t ) != 0 )		6050632	29					
ANR	6051059	Condition	( s -> sub . left -= t ) != 0	209:10:7276:7298	6050632	0	True				
ANR	6051060	EqualityExpression	( s -> sub . left -= t ) != 0		6050632	0		!=			
ANR	6051061	AssignmentExpression	s -> sub . left -= t		6050632	0		-=			
ANR	6051062	MemberAccess	s -> sub . left		6050632	0					
ANR	6051063	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051064	Identifier	s		6050632	0					
ANR	6051065	Identifier	sub		6050632	1					
ANR	6051066	Identifier	left		6050632	1					
ANR	6051067	Identifier	t		6050632	1					
ANR	6051068	PrimaryExpression	0		6050632	1					
ANR	6051069	BreakStatement	break ;	210:8:7309:7314	6050632	1	True				
ANR	6051070	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"	211:6:7322:7496	6050632	30	True				
ANR	6051071	CallExpression	"Tracev ( ( stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"		6050632	0					
ANR	6051072	Callee	Tracev		6050632	0					
ANR	6051073	Identifier	Tracev		6050632	0					
ANR	6051074	ArgumentList	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	1					
ANR	6051075	Argument	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	0					
ANR	6051076	Expression	"stderr , ""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	0					
ANR	6051077	Identifier	stderr		6050632	0					
ANR	6051078	Expression	"""inflate:       stored end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	1					
ANR	6051079	PrimaryExpression	"""inflate:       stored end, %lu total out\\n"""		6050632	0					
ANR	6051080	AdditiveExpression	z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )		6050632	1		+			
ANR	6051081	PtrMemberAccess	z -> total_out		6050632	0					
ANR	6051082	Identifier	z		6050632	0					
ANR	6051083	Identifier	total_out		6050632	1					
ANR	6051084	ConditionalExpression	q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window )		6050632	1					
ANR	6051085	Condition	q >= s -> read		6050632	0					
ANR	6051086	RelationalExpression	q >= s -> read		6050632	0		>=			
ANR	6051087	Identifier	q		6050632	0					
ANR	6051088	PtrMemberAccess	s -> read		6050632	1					
ANR	6051089	Identifier	s		6050632	0					
ANR	6051090	Identifier	read		6050632	1					
ANR	6051091	AdditiveExpression	q - s -> read		6050632	1		-			
ANR	6051092	Identifier	q		6050632	0					
ANR	6051093	PtrMemberAccess	s -> read		6050632	1					
ANR	6051094	Identifier	s		6050632	0					
ANR	6051095	Identifier	read		6050632	1					
ANR	6051096	AdditiveExpression	( s -> end - s -> read ) + ( q - s -> window )		6050632	2		+			
ANR	6051097	AdditiveExpression	s -> end - s -> read		6050632	0		-			
ANR	6051098	PtrMemberAccess	s -> end		6050632	0					
ANR	6051099	Identifier	s		6050632	0					
ANR	6051100	Identifier	end		6050632	1					
ANR	6051101	PtrMemberAccess	s -> read		6050632	1					
ANR	6051102	Identifier	s		6050632	0					
ANR	6051103	Identifier	read		6050632	1					
ANR	6051104	AdditiveExpression	q - s -> window		6050632	1		-			
ANR	6051105	Identifier	q		6050632	0					
ANR	6051106	PtrMemberAccess	s -> window		6050632	1					
ANR	6051107	Identifier	s		6050632	0					
ANR	6051108	Identifier	window		6050632	1					
ANR	6051109	ExpressionStatement	s -> mode = s -> last ? DRY : TYPE	214:6:7504:7534	6050632	31	True				
ANR	6051110	AssignmentExpression	s -> mode = s -> last ? DRY : TYPE		6050632	0		=			
ANR	6051111	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051112	Identifier	s		6050632	0					
ANR	6051113	Identifier	mode		6050632	1					
ANR	6051114	ConditionalExpression	s -> last ? DRY : TYPE		6050632	1					
ANR	6051115	Condition	s -> last		6050632	0					
ANR	6051116	PtrMemberAccess	s -> last		6050632	0					
ANR	6051117	Identifier	s		6050632	0					
ANR	6051118	Identifier	last		6050632	1					
ANR	6051119	Identifier	DRY		6050632	1					
ANR	6051120	Identifier	TYPE		6050632	2					
ANR	6051121	BreakStatement	break ;	215:6:7542:7547	6050632	32	True				
ANR	6051122	Label	case TABLE :	216:4:7553:7563	6050632	33	True				
ANR	6051123	Identifier	TABLE		6050632	0					
ANR	6051124	Statement	NEEDBITS	217:6:7571:7578	6050632	34	True				
ANR	6051125	Statement	(	217:14:7579:7579	6050632	35	True				
ANR	6051126	Statement	14	217:15:7580:7581	6050632	36	True				
ANR	6051127	Statement	)	217:17:7582:7582	6050632	37	True				
ANR	6051128	ExpressionStatement	s -> sub . trees . table = t = ( uInt ) b & 0x3fff	218:6:7590:7631	6050632	38	True				
ANR	6051129	AssignmentExpression	s -> sub . trees . table = t = ( uInt ) b & 0x3fff		6050632	0		=			
ANR	6051130	MemberAccess	s -> sub . trees . table		6050632	0					
ANR	6051131	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051132	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051133	Identifier	s		6050632	0					
ANR	6051134	Identifier	sub		6050632	1					
ANR	6051135	Identifier	trees		6050632	1					
ANR	6051136	Identifier	table		6050632	1					
ANR	6051137	AssignmentExpression	t = ( uInt ) b & 0x3fff		6050632	1		=			
ANR	6051138	Identifier	t		6050632	0					
ANR	6051139	BitAndExpression	( uInt ) b & 0x3fff		6050632	1		&			
ANR	6051140	CastExpression	( uInt ) b		6050632	0					
ANR	6051141	CastTarget	uInt		6050632	0					
ANR	6051142	Identifier	b		6050632	1					
ANR	6051143	PrimaryExpression	0x3fff		6050632	1					
ANR	6051144	IfStatement	if ( ( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29 )		6050632	39					
ANR	6051145	Condition	( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29	220:10:7672:7712	6050632	0	True				
ANR	6051146	OrExpression	( t & 0x1f ) > 29 || ( ( t >> 5 ) & 0x1f ) > 29		6050632	0		||			
ANR	6051147	RelationalExpression	( t & 0x1f ) > 29		6050632	0		>			
ANR	6051148	BitAndExpression	t & 0x1f		6050632	0		&			
ANR	6051149	Identifier	t		6050632	0					
ANR	6051150	PrimaryExpression	0x1f		6050632	1					
ANR	6051151	PrimaryExpression	29		6050632	1					
ANR	6051152	RelationalExpression	( ( t >> 5 ) & 0x1f ) > 29		6050632	1		>			
ANR	6051153	BitAndExpression	( t >> 5 ) & 0x1f		6050632	0		&			
ANR	6051154	ShiftExpression	t >> 5		6050632	0		>>			
ANR	6051155	Identifier	t		6050632	0					
ANR	6051156	PrimaryExpression	5		6050632	1					
ANR	6051157	PrimaryExpression	0x1f		6050632	1					
ANR	6051158	PrimaryExpression	29		6050632	1					
ANR	6051159	CompoundStatement		99:6:3210:3210	6050632	1					
ANR	6051160	ExpressionStatement	s -> mode = BAD	222:8:7731:7744	6050632	0	True				
ANR	6051161	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6051162	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051163	Identifier	s		6050632	0					
ANR	6051164	Identifier	mode		6050632	1					
ANR	6051165	Identifier	BAD		6050632	1					
ANR	6051166	ExpressionStatement	"z -> msg = ( char * ) ""too many length or distance symbols"""	223:8:7754:7807	6050632	1	True				
ANR	6051167	AssignmentExpression	"z -> msg = ( char * ) ""too many length or distance symbols"""		6050632	0		=			
ANR	6051168	PtrMemberAccess	z -> msg		6050632	0					
ANR	6051169	Identifier	z		6050632	0					
ANR	6051170	Identifier	msg		6050632	1					
ANR	6051171	CastExpression	"( char * ) ""too many length or distance symbols"""		6050632	1					
ANR	6051172	CastTarget	char *		6050632	0					
ANR	6051173	PrimaryExpression	"""too many length or distance symbols"""		6050632	1					
ANR	6051174	ExpressionStatement	r = Z_DATA_ERROR	224:8:7817:7833	6050632	2	True				
ANR	6051175	AssignmentExpression	r = Z_DATA_ERROR		6050632	0		=			
ANR	6051176	Identifier	r		6050632	0					
ANR	6051177	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6051178	Statement	LEAVE	225:8:7843:7847	6050632	3	True				
ANR	6051179	ExpressionStatement	t = 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )	228:6:7870:7910	6050632	40	True				
ANR	6051180	AssignmentExpression	t = 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	0		=			
ANR	6051181	Identifier	t		6050632	0					
ANR	6051182	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051183	PrimaryExpression	258		6050632	0					
ANR	6051184	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051185	BitAndExpression	t & 0x1f		6050632	0		&			
ANR	6051186	Identifier	t		6050632	0					
ANR	6051187	PrimaryExpression	0x1f		6050632	1					
ANR	6051188	BitAndExpression	( t >> 5 ) & 0x1f		6050632	1		&			
ANR	6051189	ShiftExpression	t >> 5		6050632	0		>>			
ANR	6051190	Identifier	t		6050632	0					
ANR	6051191	PrimaryExpression	5		6050632	1					
ANR	6051192	PrimaryExpression	0x1f		6050632	1					
ANR	6051193	IfStatement	"if ( ( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL )"		6050632	41					
ANR	6051194	Condition	"( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL"	229:10:7922:7988	6050632	0	True				
ANR	6051195	EqualityExpression	"( s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) ) ) == Z_NULL"		6050632	0		==			
ANR	6051196	AssignmentExpression	"s -> sub . trees . blens = ( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) )"		6050632	0		=			
ANR	6051197	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051198	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051199	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051200	Identifier	s		6050632	0					
ANR	6051201	Identifier	sub		6050632	1					
ANR	6051202	Identifier	trees		6050632	1					
ANR	6051203	Identifier	blens		6050632	1					
ANR	6051204	CastExpression	"( uIntf * ) ZALLOC ( z , t , sizeof ( uInt ) )"		6050632	1					
ANR	6051205	CastTarget	uIntf *		6050632	0					
ANR	6051206	CallExpression	"ZALLOC ( z , t , sizeof ( uInt ) )"		6050632	1					
ANR	6051207	Callee	ZALLOC		6050632	0					
ANR	6051208	Identifier	ZALLOC		6050632	0					
ANR	6051209	ArgumentList	z		6050632	1					
ANR	6051210	Argument	z		6050632	0					
ANR	6051211	Identifier	z		6050632	0					
ANR	6051212	Argument	t		6050632	1					
ANR	6051213	Identifier	t		6050632	0					
ANR	6051214	Argument	sizeof ( uInt )		6050632	2					
ANR	6051215	SizeofExpression	sizeof ( uInt )		6050632	0					
ANR	6051216	Sizeof	sizeof		6050632	0					
ANR	6051217	SizeofOperand	uInt		6050632	1					
ANR	6051218	Identifier	Z_NULL		6050632	1					
ANR	6051219	CompoundStatement		108:6:3486:3486	6050632	1					
ANR	6051220	ExpressionStatement	r = Z_MEM_ERROR	231:8:8007:8022	6050632	0	True				
ANR	6051221	AssignmentExpression	r = Z_MEM_ERROR		6050632	0		=			
ANR	6051222	Identifier	r		6050632	0					
ANR	6051223	Identifier	Z_MEM_ERROR		6050632	1					
ANR	6051224	Statement	LEAVE	232:8:8032:8036	6050632	1	True				
ANR	6051225	Statement	DUMPBITS	234:6:8052:8059	6050632	42	True				
ANR	6051226	Statement	(	234:14:8060:8060	6050632	43	True				
ANR	6051227	Statement	14	234:15:8061:8062	6050632	44	True				
ANR	6051228	Statement	)	234:17:8063:8063	6050632	45	True				
ANR	6051229	ExpressionStatement	s -> sub . trees . index = 0	235:6:8071:8093	6050632	46	True				
ANR	6051230	AssignmentExpression	s -> sub . trees . index = 0		6050632	0		=			
ANR	6051231	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051232	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051233	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051234	Identifier	s		6050632	0					
ANR	6051235	Identifier	sub		6050632	1					
ANR	6051236	Identifier	trees		6050632	1					
ANR	6051237	Identifier	index		6050632	1					
ANR	6051238	PrimaryExpression	0		6050632	1					
ANR	6051239	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       table sizes ok\\n"" ) )"	236:6:8101:8152	6050632	47	True				
ANR	6051240	CallExpression	"Tracev ( ( stderr , ""inflate:       table sizes ok\\n"" ) )"		6050632	0					
ANR	6051241	Callee	Tracev		6050632	0					
ANR	6051242	Identifier	Tracev		6050632	0					
ANR	6051243	ArgumentList	"stderr , ""inflate:       table sizes ok\\n"""		6050632	1					
ANR	6051244	Argument	"stderr , ""inflate:       table sizes ok\\n"""		6050632	0					
ANR	6051245	Expression	"stderr , ""inflate:       table sizes ok\\n"""		6050632	0					
ANR	6051246	Identifier	stderr		6050632	0					
ANR	6051247	PrimaryExpression	"""inflate:       table sizes ok\\n"""		6050632	1					
ANR	6051248	ExpressionStatement	s -> mode = BTREE	237:6:8160:8175	6050632	48	True				
ANR	6051249	AssignmentExpression	s -> mode = BTREE		6050632	0		=			
ANR	6051250	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051251	Identifier	s		6050632	0					
ANR	6051252	Identifier	mode		6050632	1					
ANR	6051253	Identifier	BTREE		6050632	1					
ANR	6051254	Label	case BTREE :	238:4:8181:8191	6050632	49	True				
ANR	6051255	Identifier	BTREE		6050632	0					
ANR	6051256	WhileStatement	while ( s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 ) )		6050632	50					
ANR	6051257	Condition	s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 )	239:13:8206:8256	6050632	0	True				
ANR	6051258	RelationalExpression	s -> sub . trees . index < 4 + ( s -> sub . trees . table >> 10 )		6050632	0		<			
ANR	6051259	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051260	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051261	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051262	Identifier	s		6050632	0					
ANR	6051263	Identifier	sub		6050632	1					
ANR	6051264	Identifier	trees		6050632	1					
ANR	6051265	Identifier	index		6050632	1					
ANR	6051266	AdditiveExpression	4 + ( s -> sub . trees . table >> 10 )		6050632	1		+			
ANR	6051267	PrimaryExpression	4		6050632	0					
ANR	6051268	ShiftExpression	s -> sub . trees . table >> 10		6050632	1		>>			
ANR	6051269	MemberAccess	s -> sub . trees . table		6050632	0					
ANR	6051270	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051271	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051272	Identifier	s		6050632	0					
ANR	6051273	Identifier	sub		6050632	1					
ANR	6051274	Identifier	trees		6050632	1					
ANR	6051275	Identifier	table		6050632	1					
ANR	6051276	PrimaryExpression	10		6050632	1					
ANR	6051277	CompoundStatement		118:6:3754:3754	6050632	1					
ANR	6051278	Statement	NEEDBITS	241:8:8275:8282	6050632	0	True				
ANR	6051279	Statement	(	241:16:8283:8283	6050632	1	True				
ANR	6051280	Statement	3	241:17:8284:8284	6050632	2	True				
ANR	6051281	Statement	)	241:18:8285:8285	6050632	3	True				
ANR	6051282	ExpressionStatement	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = ( uInt ) b & 7	242:8:8295:8357	6050632	4	True				
ANR	6051283	AssignmentExpression	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = ( uInt ) b & 7		6050632	0		=			
ANR	6051284	ArrayIndexing	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ]		6050632	0					
ANR	6051285	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051286	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051287	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051288	Identifier	s		6050632	0					
ANR	6051289	Identifier	sub		6050632	1					
ANR	6051290	Identifier	trees		6050632	1					
ANR	6051291	Identifier	blens		6050632	1					
ANR	6051292	ArrayIndexing	border [ s -> sub . trees . index ++ ]		6050632	1					
ANR	6051293	Identifier	border		6050632	0					
ANR	6051294	PostIncDecOperationExpression	s -> sub . trees . index ++		6050632	1					
ANR	6051295	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051296	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051297	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051298	Identifier	s		6050632	0					
ANR	6051299	Identifier	sub		6050632	1					
ANR	6051300	Identifier	trees		6050632	1					
ANR	6051301	Identifier	index		6050632	1					
ANR	6051302	IncDec	++		6050632	1					
ANR	6051303	BitAndExpression	( uInt ) b & 7		6050632	1		&			
ANR	6051304	CastExpression	( uInt ) b		6050632	0					
ANR	6051305	CastTarget	uInt		6050632	0					
ANR	6051306	Identifier	b		6050632	1					
ANR	6051307	PrimaryExpression	7		6050632	1					
ANR	6051308	Statement	DUMPBITS	243:8:8367:8374	6050632	5	True				
ANR	6051309	Statement	(	243:16:8375:8375	6050632	6	True				
ANR	6051310	Statement	3	243:17:8376:8376	6050632	7	True				
ANR	6051311	Statement	)	243:18:8377:8377	6050632	8	True				
ANR	6051312	WhileStatement	while ( s -> sub . trees . index < 19 )		6050632	51					
ANR	6051313	Condition	s -> sub . trees . index < 19	245:13:8400:8422	6050632	0	True				
ANR	6051314	RelationalExpression	s -> sub . trees . index < 19		6050632	0		<			
ANR	6051315	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051316	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051317	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051318	Identifier	s		6050632	0					
ANR	6051319	Identifier	sub		6050632	1					
ANR	6051320	Identifier	trees		6050632	1					
ANR	6051321	Identifier	index		6050632	1					
ANR	6051322	PrimaryExpression	19		6050632	1					
ANR	6051323	ExpressionStatement	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = 0	246:8:8433:8485	6050632	1	True				
ANR	6051324	AssignmentExpression	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ] = 0		6050632	0		=			
ANR	6051325	ArrayIndexing	s -> sub . trees . blens [ border [ s -> sub . trees . index ++ ] ]		6050632	0					
ANR	6051326	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051327	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051328	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051329	Identifier	s		6050632	0					
ANR	6051330	Identifier	sub		6050632	1					
ANR	6051331	Identifier	trees		6050632	1					
ANR	6051332	Identifier	blens		6050632	1					
ANR	6051333	ArrayIndexing	border [ s -> sub . trees . index ++ ]		6050632	1					
ANR	6051334	Identifier	border		6050632	0					
ANR	6051335	PostIncDecOperationExpression	s -> sub . trees . index ++		6050632	1					
ANR	6051336	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051337	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051338	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051339	Identifier	s		6050632	0					
ANR	6051340	Identifier	sub		6050632	1					
ANR	6051341	Identifier	trees		6050632	1					
ANR	6051342	Identifier	index		6050632	1					
ANR	6051343	IncDec	++		6050632	1					
ANR	6051344	PrimaryExpression	0		6050632	1					
ANR	6051345	ExpressionStatement	s -> sub . trees . bb = 7	247:6:8493:8512	6050632	52	True				
ANR	6051346	AssignmentExpression	s -> sub . trees . bb = 7		6050632	0		=			
ANR	6051347	MemberAccess	s -> sub . trees . bb		6050632	0					
ANR	6051348	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051349	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051350	Identifier	s		6050632	0					
ANR	6051351	Identifier	sub		6050632	1					
ANR	6051352	Identifier	trees		6050632	1					
ANR	6051353	Identifier	bb		6050632	1					
ANR	6051354	PrimaryExpression	7		6050632	1					
ANR	6051355	ExpressionStatement	"t = inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"	248:6:8520:8640	6050632	53	True				
ANR	6051356	AssignmentExpression	"t = inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"		6050632	0		=			
ANR	6051357	Identifier	t		6050632	0					
ANR	6051358	CallExpression	"inflate_trees_bits ( s -> sub . trees . blens , & s -> sub . trees . bb , & s -> sub . trees . tb , s -> hufts , z )"		6050632	1					
ANR	6051359	Callee	inflate_trees_bits		6050632	0					
ANR	6051360	Identifier	inflate_trees_bits		6050632	0					
ANR	6051361	ArgumentList	s -> sub . trees . blens		6050632	1					
ANR	6051362	Argument	s -> sub . trees . blens		6050632	0					
ANR	6051363	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051364	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051365	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051366	Identifier	s		6050632	0					
ANR	6051367	Identifier	sub		6050632	1					
ANR	6051368	Identifier	trees		6050632	1					
ANR	6051369	Identifier	blens		6050632	1					
ANR	6051370	Argument	& s -> sub . trees . bb		6050632	1					
ANR	6051371	UnaryOperationExpression	& s -> sub . trees . bb		6050632	0					
ANR	6051372	UnaryOperator	&		6050632	0					
ANR	6051373	MemberAccess	s -> sub . trees . bb		6050632	1					
ANR	6051374	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051375	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051376	Identifier	s		6050632	0					
ANR	6051377	Identifier	sub		6050632	1					
ANR	6051378	Identifier	trees		6050632	1					
ANR	6051379	Identifier	bb		6050632	1					
ANR	6051380	Argument	& s -> sub . trees . tb		6050632	2					
ANR	6051381	UnaryOperationExpression	& s -> sub . trees . tb		6050632	0					
ANR	6051382	UnaryOperator	&		6050632	0					
ANR	6051383	MemberAccess	s -> sub . trees . tb		6050632	1					
ANR	6051384	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051385	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051386	Identifier	s		6050632	0					
ANR	6051387	Identifier	sub		6050632	1					
ANR	6051388	Identifier	trees		6050632	1					
ANR	6051389	Identifier	tb		6050632	1					
ANR	6051390	Argument	s -> hufts		6050632	3					
ANR	6051391	PtrMemberAccess	s -> hufts		6050632	0					
ANR	6051392	Identifier	s		6050632	0					
ANR	6051393	Identifier	hufts		6050632	1					
ANR	6051394	Argument	z		6050632	4					
ANR	6051395	Identifier	z		6050632	0					
ANR	6051396	IfStatement	if ( t != Z_OK )		6050632	54					
ANR	6051397	Condition	t != Z_OK	250:10:8652:8660	6050632	0	True				
ANR	6051398	EqualityExpression	t != Z_OK		6050632	0		!=			
ANR	6051399	Identifier	t		6050632	0					
ANR	6051400	Identifier	Z_OK		6050632	1					
ANR	6051401	CompoundStatement		129:6:4158:4158	6050632	1					
ANR	6051402	ExpressionStatement	r = t	252:8:8679:8684	6050632	0	True				
ANR	6051403	AssignmentExpression	r = t		6050632	0		=			
ANR	6051404	Identifier	r		6050632	0					
ANR	6051405	Identifier	t		6050632	1					
ANR	6051406	IfStatement	if ( r == Z_DATA_ERROR )		6050632	1					
ANR	6051407	Condition	r == Z_DATA_ERROR	253:12:8698:8714	6050632	0	True				
ANR	6051408	EqualityExpression	r == Z_DATA_ERROR		6050632	0		==			
ANR	6051409	Identifier	r		6050632	0					
ANR	6051410	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6051411	CompoundStatement		132:8:4214:4214	6050632	1					
ANR	6051412	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	255:10:8737:8765	6050632	0	True				
ANR	6051413	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		6050632	0					
ANR	6051414	Callee	ZFREE		6050632	0					
ANR	6051415	Identifier	ZFREE		6050632	0					
ANR	6051416	ArgumentList	z		6050632	1					
ANR	6051417	Argument	z		6050632	0					
ANR	6051418	Identifier	z		6050632	0					
ANR	6051419	Argument	s -> sub . trees . blens		6050632	1					
ANR	6051420	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051421	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051422	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051423	Identifier	s		6050632	0					
ANR	6051424	Identifier	sub		6050632	1					
ANR	6051425	Identifier	trees		6050632	1					
ANR	6051426	Identifier	blens		6050632	1					
ANR	6051427	ExpressionStatement	s -> mode = BAD	256:10:8777:8790	6050632	1	True				
ANR	6051428	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6051429	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051430	Identifier	s		6050632	0					
ANR	6051431	Identifier	mode		6050632	1					
ANR	6051432	Identifier	BAD		6050632	1					
ANR	6051433	Statement	LEAVE	258:8:8810:8814	6050632	2	True				
ANR	6051434	ExpressionStatement	s -> sub . trees . index = 0	260:6:8830:8852	6050632	55	True				
ANR	6051435	AssignmentExpression	s -> sub . trees . index = 0		6050632	0		=			
ANR	6051436	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051437	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051438	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051439	Identifier	s		6050632	0					
ANR	6051440	Identifier	sub		6050632	1					
ANR	6051441	Identifier	trees		6050632	1					
ANR	6051442	Identifier	index		6050632	1					
ANR	6051443	PrimaryExpression	0		6050632	1					
ANR	6051444	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       bits tree ok\\n"" ) )"	261:6:8860:8909	6050632	56	True				
ANR	6051445	CallExpression	"Tracev ( ( stderr , ""inflate:       bits tree ok\\n"" ) )"		6050632	0					
ANR	6051446	Callee	Tracev		6050632	0					
ANR	6051447	Identifier	Tracev		6050632	0					
ANR	6051448	ArgumentList	"stderr , ""inflate:       bits tree ok\\n"""		6050632	1					
ANR	6051449	Argument	"stderr , ""inflate:       bits tree ok\\n"""		6050632	0					
ANR	6051450	Expression	"stderr , ""inflate:       bits tree ok\\n"""		6050632	0					
ANR	6051451	Identifier	stderr		6050632	0					
ANR	6051452	PrimaryExpression	"""inflate:       bits tree ok\\n"""		6050632	1					
ANR	6051453	ExpressionStatement	s -> mode = DTREE	262:6:8917:8932	6050632	57	True				
ANR	6051454	AssignmentExpression	s -> mode = DTREE		6050632	0		=			
ANR	6051455	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051456	Identifier	s		6050632	0					
ANR	6051457	Identifier	mode		6050632	1					
ANR	6051458	Identifier	DTREE		6050632	1					
ANR	6051459	Label	case DTREE :	263:4:8938:8948	6050632	58	True				
ANR	6051460	Identifier	DTREE		6050632	0					
ANR	6051461	WhileStatement	"while ( t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) )"		6050632	59					
ANR	6051462	Condition	"t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )"	264:13:8963:9056	6050632	0	True				
ANR	6051463	Expression	"t = s -> sub . trees . table , s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )"		6050632	0					
ANR	6051464	AssignmentExpression	t = s -> sub . trees . table		6050632	0		=			
ANR	6051465	Identifier	t		6050632	0					
ANR	6051466	MemberAccess	s -> sub . trees . table		6050632	1					
ANR	6051467	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051468	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051469	Identifier	s		6050632	0					
ANR	6051470	Identifier	sub		6050632	1					
ANR	6051471	Identifier	trees		6050632	1					
ANR	6051472	Identifier	table		6050632	1					
ANR	6051473	RelationalExpression	s -> sub . trees . index < 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		<			
ANR	6051474	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051475	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051476	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051477	Identifier	s		6050632	0					
ANR	6051478	Identifier	sub		6050632	1					
ANR	6051479	Identifier	trees		6050632	1					
ANR	6051480	Identifier	index		6050632	1					
ANR	6051481	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051482	PrimaryExpression	258		6050632	0					
ANR	6051483	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051484	BitAndExpression	t & 0x1f		6050632	0		&			
ANR	6051485	Identifier	t		6050632	0					
ANR	6051486	PrimaryExpression	0x1f		6050632	1					
ANR	6051487	BitAndExpression	( t >> 5 ) & 0x1f		6050632	1		&			
ANR	6051488	ShiftExpression	t >> 5		6050632	0		>>			
ANR	6051489	Identifier	t		6050632	0					
ANR	6051490	PrimaryExpression	5		6050632	1					
ANR	6051491	PrimaryExpression	0x1f		6050632	1					
ANR	6051492	CompoundStatement		146:8:4589:4601	6050632	1					
ANR	6051493	IdentifierDeclStatement	inflate_huft * h ;	267:8:9075:9090	6050632	0	True				
ANR	6051494	IdentifierDecl	* h		6050632	0					
ANR	6051495	IdentifierDeclType	inflate_huft *		6050632	0					
ANR	6051496	Identifier	h		6050632	1					
ANR	6051497	IdentifierDeclStatement	"uInt i , j , c ;"	268:8:9100:9112	6050632	1	True				
ANR	6051498	IdentifierDecl	i		6050632	0					
ANR	6051499	IdentifierDeclType	uInt		6050632	0					
ANR	6051500	Identifier	i		6050632	1					
ANR	6051501	IdentifierDecl	j		6050632	1					
ANR	6051502	IdentifierDeclType	uInt		6050632	0					
ANR	6051503	Identifier	j		6050632	1					
ANR	6051504	IdentifierDecl	c		6050632	2					
ANR	6051505	IdentifierDeclType	uInt		6050632	0					
ANR	6051506	Identifier	c		6050632	1					
ANR	6051507	ExpressionStatement	t = s -> sub . trees . bb	270:8:9123:9142	6050632	2	True				
ANR	6051508	AssignmentExpression	t = s -> sub . trees . bb		6050632	0		=			
ANR	6051509	Identifier	t		6050632	0					
ANR	6051510	MemberAccess	s -> sub . trees . bb		6050632	1					
ANR	6051511	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051512	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051513	Identifier	s		6050632	0					
ANR	6051514	Identifier	sub		6050632	1					
ANR	6051515	Identifier	trees		6050632	1					
ANR	6051516	Identifier	bb		6050632	1					
ANR	6051517	Statement	NEEDBITS	271:8:9152:9159	6050632	3	True				
ANR	6051518	ExpressionStatement	( t ) h = s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )	271:16:9160:9221	6050632	4	True				
ANR	6051519	AssignmentExpression	( t ) h = s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )		6050632	0		=			
ANR	6051520	CastExpression	( t ) h		6050632	0					
ANR	6051521	CastTarget	t		6050632	0					
ANR	6051522	Identifier	h		6050632	1					
ANR	6051523	AdditiveExpression	s -> sub . trees . tb + ( ( uInt ) b & inflate_mask [ t ] )		6050632	1		+			
ANR	6051524	MemberAccess	s -> sub . trees . tb		6050632	0					
ANR	6051525	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051526	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051527	Identifier	s		6050632	0					
ANR	6051528	Identifier	sub		6050632	1					
ANR	6051529	Identifier	trees		6050632	1					
ANR	6051530	Identifier	tb		6050632	1					
ANR	6051531	BitAndExpression	( uInt ) b & inflate_mask [ t ]		6050632	1		&			
ANR	6051532	CastExpression	( uInt ) b		6050632	0					
ANR	6051533	CastTarget	uInt		6050632	0					
ANR	6051534	Identifier	b		6050632	1					
ANR	6051535	ArrayIndexing	inflate_mask [ t ]		6050632	1					
ANR	6051536	Identifier	inflate_mask		6050632	0					
ANR	6051537	Identifier	t		6050632	1					
ANR	6051538	ExpressionStatement	t = h -> bits	273:8:9231:9242	6050632	5	True				
ANR	6051539	AssignmentExpression	t = h -> bits		6050632	0		=			
ANR	6051540	Identifier	t		6050632	0					
ANR	6051541	PtrMemberAccess	h -> bits		6050632	1					
ANR	6051542	Identifier	h		6050632	0					
ANR	6051543	Identifier	bits		6050632	1					
ANR	6051544	ExpressionStatement	c = h -> base	274:8:9252:9263	6050632	6	True				
ANR	6051545	AssignmentExpression	c = h -> base		6050632	0		=			
ANR	6051546	Identifier	c		6050632	0					
ANR	6051547	PtrMemberAccess	h -> base		6050632	1					
ANR	6051548	Identifier	h		6050632	0					
ANR	6051549	Identifier	base		6050632	1					
ANR	6051550	IfStatement	if ( c < 16 )		6050632	7					
ANR	6051551	Condition	c < 16	275:12:9277:9282	6050632	0	True				
ANR	6051552	RelationalExpression	c < 16		6050632	0		<			
ANR	6051553	Identifier	c		6050632	0					
ANR	6051554	PrimaryExpression	16		6050632	1					
ANR	6051555	CompoundStatement		154:8:4782:4782	6050632	1					
ANR	6051556	Statement	DUMPBITS	277:10:9305:9312	6050632	0	True				
ANR	6051557	ExpressionStatement	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ] = c	277:18:9313:9371	6050632	1	True				
ANR	6051558	AssignmentExpression	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ] = c		6050632	0		=			
ANR	6051559	CastExpression	( t ) s -> sub . trees . blens [ s -> sub . trees . index ++ ]		6050632	0					
ANR	6051560	CastTarget	t		6050632	0					
ANR	6051561	ArrayIndexing	s -> sub . trees . blens [ s -> sub . trees . index ++ ]		6050632	1					
ANR	6051562	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051563	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051564	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051565	Identifier	s		6050632	0					
ANR	6051566	Identifier	sub		6050632	1					
ANR	6051567	Identifier	trees		6050632	1					
ANR	6051568	Identifier	blens		6050632	1					
ANR	6051569	PostIncDecOperationExpression	s -> sub . trees . index ++		6050632	1					
ANR	6051570	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051571	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051572	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051573	Identifier	s		6050632	0					
ANR	6051574	Identifier	sub		6050632	1					
ANR	6051575	Identifier	trees		6050632	1					
ANR	6051576	Identifier	index		6050632	1					
ANR	6051577	IncDec	++		6050632	1					
ANR	6051578	Identifier	c		6050632	1					
ANR	6051579	ElseStatement	else		6050632	0					
ANR	6051580	CompoundStatement		159:8:4911:4911	6050632	0					
ANR	6051581	ExpressionStatement	i = c == 18 ? 7 : c - 14	282:10:9434:9458	6050632	0	True				
ANR	6051582	AssignmentExpression	i = c == 18 ? 7 : c - 14		6050632	0		=			
ANR	6051583	Identifier	i		6050632	0					
ANR	6051584	ConditionalExpression	c == 18 ? 7 : c - 14		6050632	1					
ANR	6051585	Condition	c == 18		6050632	0					
ANR	6051586	EqualityExpression	c == 18		6050632	0		==			
ANR	6051587	Identifier	c		6050632	0					
ANR	6051588	PrimaryExpression	18		6050632	1					
ANR	6051589	PrimaryExpression	7		6050632	1					
ANR	6051590	AdditiveExpression	c - 14		6050632	2		-			
ANR	6051591	Identifier	c		6050632	0					
ANR	6051592	PrimaryExpression	14		6050632	1					
ANR	6051593	ExpressionStatement	j = c == 18 ? 11 : 3	283:10:9470:9490	6050632	1	True				
ANR	6051594	AssignmentExpression	j = c == 18 ? 11 : 3		6050632	0		=			
ANR	6051595	Identifier	j		6050632	0					
ANR	6051596	ConditionalExpression	c == 18 ? 11 : 3		6050632	1					
ANR	6051597	Condition	c == 18		6050632	0					
ANR	6051598	EqualityExpression	c == 18		6050632	0		==			
ANR	6051599	Identifier	c		6050632	0					
ANR	6051600	PrimaryExpression	18		6050632	1					
ANR	6051601	PrimaryExpression	11		6050632	1					
ANR	6051602	PrimaryExpression	3		6050632	2					
ANR	6051603	Statement	NEEDBITS	284:10:9502:9509	6050632	2	True				
ANR	6051604	Statement	(	284:18:9510:9510	6050632	3	True				
ANR	6051605	Statement	t	284:19:9511:9511	6050632	4	True				
ANR	6051606	Statement	+	284:21:9513:9513	6050632	5	True				
ANR	6051607	Statement	i	284:23:9515:9515	6050632	6	True				
ANR	6051608	Statement	)	284:24:9516:9516	6050632	7	True				
ANR	6051609	Statement	DUMPBITS	285:10:9528:9535	6050632	8	True				
ANR	6051610	ExpressionStatement	( t ) j += ( uInt ) b & inflate_mask [ i ]	285:18:9536:9580	6050632	9	True				
ANR	6051611	AssignmentExpression	( t ) j += ( uInt ) b & inflate_mask [ i ]		6050632	0		+=			
ANR	6051612	CastExpression	( t ) j		6050632	0					
ANR	6051613	CastTarget	t		6050632	0					
ANR	6051614	Identifier	j		6050632	1					
ANR	6051615	BitAndExpression	( uInt ) b & inflate_mask [ i ]		6050632	1		&			
ANR	6051616	CastExpression	( uInt ) b		6050632	0					
ANR	6051617	CastTarget	uInt		6050632	0					
ANR	6051618	Identifier	b		6050632	1					
ANR	6051619	ArrayIndexing	inflate_mask [ i ]		6050632	1					
ANR	6051620	Identifier	inflate_mask		6050632	0					
ANR	6051621	Identifier	i		6050632	1					
ANR	6051622	Statement	DUMPBITS	287:10:9592:9599	6050632	10	True				
ANR	6051623	ExpressionStatement	( i ) i = s -> sub . trees . index	287:18:9600:9636	6050632	11	True				
ANR	6051624	AssignmentExpression	( i ) i = s -> sub . trees . index		6050632	0		=			
ANR	6051625	CastExpression	( i ) i		6050632	0					
ANR	6051626	CastTarget	i		6050632	0					
ANR	6051627	Identifier	i		6050632	1					
ANR	6051628	MemberAccess	s -> sub . trees . index		6050632	1					
ANR	6051629	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051630	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051631	Identifier	s		6050632	0					
ANR	6051632	Identifier	sub		6050632	1					
ANR	6051633	Identifier	trees		6050632	1					
ANR	6051634	Identifier	index		6050632	1					
ANR	6051635	ExpressionStatement	t = s -> sub . trees . table	289:10:9648:9670	6050632	12	True				
ANR	6051636	AssignmentExpression	t = s -> sub . trees . table		6050632	0		=			
ANR	6051637	Identifier	t		6050632	0					
ANR	6051638	MemberAccess	s -> sub . trees . table		6050632	1					
ANR	6051639	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051640	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051641	Identifier	s		6050632	0					
ANR	6051642	Identifier	sub		6050632	1					
ANR	6051643	Identifier	trees		6050632	1					
ANR	6051644	Identifier	table		6050632	1					
ANR	6051645	IfStatement	if ( i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 ) )		6050632	13					
ANR	6051646	Condition	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 )	290:14:9686:9765	6050632	0	True				
ANR	6051647	OrExpression	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f ) || ( c == 16 && i < 1 )		6050632	0		||			
ANR	6051648	RelationalExpression	i + j > 258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	0		>			
ANR	6051649	AdditiveExpression	i + j		6050632	0		+			
ANR	6051650	Identifier	i		6050632	0					
ANR	6051651	Identifier	j		6050632	1					
ANR	6051652	AdditiveExpression	258 + ( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051653	PrimaryExpression	258		6050632	0					
ANR	6051654	AdditiveExpression	( t & 0x1f ) + ( ( t >> 5 ) & 0x1f )		6050632	1		+			
ANR	6051655	BitAndExpression	t & 0x1f		6050632	0		&			
ANR	6051656	Identifier	t		6050632	0					
ANR	6051657	PrimaryExpression	0x1f		6050632	1					
ANR	6051658	BitAndExpression	( t >> 5 ) & 0x1f		6050632	1		&			
ANR	6051659	ShiftExpression	t >> 5		6050632	0		>>			
ANR	6051660	Identifier	t		6050632	0					
ANR	6051661	PrimaryExpression	5		6050632	1					
ANR	6051662	PrimaryExpression	0x1f		6050632	1					
ANR	6051663	AndExpression	c == 16 && i < 1		6050632	1		&&			
ANR	6051664	EqualityExpression	c == 16		6050632	0		==			
ANR	6051665	Identifier	c		6050632	0					
ANR	6051666	PrimaryExpression	16		6050632	1					
ANR	6051667	RelationalExpression	i < 1		6050632	1		<			
ANR	6051668	Identifier	i		6050632	0					
ANR	6051669	PrimaryExpression	1		6050632	1					
ANR	6051670	CompoundStatement		170:10:5267:5267	6050632	1					
ANR	6051671	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	293:12:9792:9820	6050632	0	True				
ANR	6051672	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		6050632	0					
ANR	6051673	Callee	ZFREE		6050632	0					
ANR	6051674	Identifier	ZFREE		6050632	0					
ANR	6051675	ArgumentList	z		6050632	1					
ANR	6051676	Argument	z		6050632	0					
ANR	6051677	Identifier	z		6050632	0					
ANR	6051678	Argument	s -> sub . trees . blens		6050632	1					
ANR	6051679	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051680	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051681	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051682	Identifier	s		6050632	0					
ANR	6051683	Identifier	sub		6050632	1					
ANR	6051684	Identifier	trees		6050632	1					
ANR	6051685	Identifier	blens		6050632	1					
ANR	6051686	ExpressionStatement	s -> mode = BAD	294:12:9834:9847	6050632	1	True				
ANR	6051687	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6051688	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051689	Identifier	s		6050632	0					
ANR	6051690	Identifier	mode		6050632	1					
ANR	6051691	Identifier	BAD		6050632	1					
ANR	6051692	ExpressionStatement	"z -> msg = ( char * ) ""invalid bit length repeat"""	295:12:9861:9904	6050632	2	True				
ANR	6051693	AssignmentExpression	"z -> msg = ( char * ) ""invalid bit length repeat"""		6050632	0		=			
ANR	6051694	PtrMemberAccess	z -> msg		6050632	0					
ANR	6051695	Identifier	z		6050632	0					
ANR	6051696	Identifier	msg		6050632	1					
ANR	6051697	CastExpression	"( char * ) ""invalid bit length repeat"""		6050632	1					
ANR	6051698	CastTarget	char *		6050632	0					
ANR	6051699	PrimaryExpression	"""invalid bit length repeat"""		6050632	1					
ANR	6051700	ExpressionStatement	r = Z_DATA_ERROR	296:12:9918:9934	6050632	3	True				
ANR	6051701	AssignmentExpression	r = Z_DATA_ERROR		6050632	0		=			
ANR	6051702	Identifier	r		6050632	0					
ANR	6051703	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6051704	Statement	LEAVE	297:12:9948:9952	6050632	4	True				
ANR	6051705	ExpressionStatement	c = c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0	299:10:9976:10019	6050632	14	True				
ANR	6051706	AssignmentExpression	c = c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0		6050632	0		=			
ANR	6051707	Identifier	c		6050632	0					
ANR	6051708	ConditionalExpression	c == 16 ? s -> sub . trees . blens [ i - 1 ] : 0		6050632	1					
ANR	6051709	Condition	c == 16		6050632	0					
ANR	6051710	EqualityExpression	c == 16		6050632	0		==			
ANR	6051711	Identifier	c		6050632	0					
ANR	6051712	PrimaryExpression	16		6050632	1					
ANR	6051713	ArrayIndexing	s -> sub . trees . blens [ i - 1 ]		6050632	1					
ANR	6051714	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051715	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051716	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051717	Identifier	s		6050632	0					
ANR	6051718	Identifier	sub		6050632	1					
ANR	6051719	Identifier	trees		6050632	1					
ANR	6051720	Identifier	blens		6050632	1					
ANR	6051721	AdditiveExpression	i - 1		6050632	1		-			
ANR	6051722	Identifier	i		6050632	0					
ANR	6051723	PrimaryExpression	1		6050632	1					
ANR	6051724	PrimaryExpression	0		6050632	2					
ANR	6051725	DoStatement	do		6050632	15					
ANR	6051726	CompoundStatement		178:13:5523:5523	6050632	0					
ANR	6051727	ExpressionStatement	s -> sub . trees . blens [ i ++ ] = c	301:12:10048:10075	6050632	0	True				
ANR	6051728	AssignmentExpression	s -> sub . trees . blens [ i ++ ] = c		6050632	0		=			
ANR	6051729	ArrayIndexing	s -> sub . trees . blens [ i ++ ]		6050632	0					
ANR	6051730	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051731	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051732	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051733	Identifier	s		6050632	0					
ANR	6051734	Identifier	sub		6050632	1					
ANR	6051735	Identifier	trees		6050632	1					
ANR	6051736	Identifier	blens		6050632	1					
ANR	6051737	PostIncDecOperationExpression	i ++		6050632	1					
ANR	6051738	Identifier	i		6050632	0					
ANR	6051739	IncDec	++		6050632	1					
ANR	6051740	Identifier	c		6050632	1					
ANR	6051741	Condition	-- j	302:19:10096:10098	6050632	1	True				
ANR	6051742	UnaryExpression	-- j		6050632	0					
ANR	6051743	IncDec	--		6050632	0					
ANR	6051744	Identifier	j		6050632	1					
ANR	6051745	ExpressionStatement	s -> sub . trees . index = i	303:10:10112:10134	6050632	16	True				
ANR	6051746	AssignmentExpression	s -> sub . trees . index = i		6050632	0		=			
ANR	6051747	MemberAccess	s -> sub . trees . index		6050632	0					
ANR	6051748	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051749	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051750	Identifier	s		6050632	0					
ANR	6051751	Identifier	sub		6050632	1					
ANR	6051752	Identifier	trees		6050632	1					
ANR	6051753	Identifier	index		6050632	1					
ANR	6051754	Identifier	i		6050632	1					
ANR	6051755	ExpressionStatement	s -> sub . trees . tb = Z_NULL	306:6:10160:10184	6050632	60	True				
ANR	6051756	AssignmentExpression	s -> sub . trees . tb = Z_NULL		6050632	0		=			
ANR	6051757	MemberAccess	s -> sub . trees . tb		6050632	0					
ANR	6051758	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051759	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051760	Identifier	s		6050632	0					
ANR	6051761	Identifier	sub		6050632	1					
ANR	6051762	Identifier	trees		6050632	1					
ANR	6051763	Identifier	tb		6050632	1					
ANR	6051764	Identifier	Z_NULL		6050632	1					
ANR	6051765	CompoundStatement		188:8:5743:5766	6050632	61					
ANR	6051766	IdentifierDeclStatement	"uInt bl , bd ;"	308:8:10202:10213	6050632	0	True				
ANR	6051767	IdentifierDecl	bl		6050632	0					
ANR	6051768	IdentifierDeclType	uInt		6050632	0					
ANR	6051769	Identifier	bl		6050632	1					
ANR	6051770	IdentifierDecl	bd		6050632	1					
ANR	6051771	IdentifierDeclType	uInt		6050632	0					
ANR	6051772	Identifier	bd		6050632	1					
ANR	6051773	IdentifierDeclStatement	"inflate_huft * tl , * td ;"	309:8:10223:10244	6050632	1	True				
ANR	6051774	IdentifierDecl	* tl		6050632	0					
ANR	6051775	IdentifierDeclType	inflate_huft *		6050632	0					
ANR	6051776	Identifier	tl		6050632	1					
ANR	6051777	IdentifierDecl	* td		6050632	1					
ANR	6051778	IdentifierDeclType	inflate_huft *		6050632	0					
ANR	6051779	Identifier	td		6050632	1					
ANR	6051780	IdentifierDeclStatement	inflate_codes_statef * c ;	310:8:10254:10277	6050632	2	True				
ANR	6051781	IdentifierDecl	* c		6050632	0					
ANR	6051782	IdentifierDeclType	inflate_codes_statef *		6050632	0					
ANR	6051783	Identifier	c		6050632	1					
ANR	6051784	ExpressionStatement	bl = 9	312:8:10288:10294	6050632	3	True				
ANR	6051785	AssignmentExpression	bl = 9		6050632	0		=			
ANR	6051786	Identifier	bl		6050632	0					
ANR	6051787	PrimaryExpression	9		6050632	1					
ANR	6051788	ExpressionStatement	bd = 6	313:8:10357:10363	6050632	4	True				
ANR	6051789	AssignmentExpression	bd = 6		6050632	0		=			
ANR	6051790	Identifier	bd		6050632	0					
ANR	6051791	PrimaryExpression	6		6050632	1					
ANR	6051792	ExpressionStatement	t = s -> sub . trees . table	314:8:10426:10448	6050632	5	True				
ANR	6051793	AssignmentExpression	t = s -> sub . trees . table		6050632	0		=			
ANR	6051794	Identifier	t		6050632	0					
ANR	6051795	MemberAccess	s -> sub . trees . table		6050632	1					
ANR	6051796	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051797	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051798	Identifier	s		6050632	0					
ANR	6051799	Identifier	sub		6050632	1					
ANR	6051800	Identifier	trees		6050632	1					
ANR	6051801	Identifier	table		6050632	1					
ANR	6051802	ExpressionStatement	"t = inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"	315:8:10458:10645	6050632	6	True				
ANR	6051803	AssignmentExpression	"t = inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"		6050632	0		=			
ANR	6051804	Identifier	t		6050632	0					
ANR	6051805	CallExpression	"inflate_trees_dynamic ( 257 + ( t & 0x1f ) , 1 + ( ( t >> 5 ) & 0x1f ) , s -> sub . trees . blens , & bl , & bd , & tl , & td , s -> hufts , z )"		6050632	1					
ANR	6051806	Callee	inflate_trees_dynamic		6050632	0					
ANR	6051807	Identifier	inflate_trees_dynamic		6050632	0					
ANR	6051808	ArgumentList	257 + ( t & 0x1f )		6050632	1					
ANR	6051809	Argument	257 + ( t & 0x1f )		6050632	0					
ANR	6051810	AdditiveExpression	257 + ( t & 0x1f )		6050632	0		+			
ANR	6051811	PrimaryExpression	257		6050632	0					
ANR	6051812	BitAndExpression	t & 0x1f		6050632	1		&			
ANR	6051813	Identifier	t		6050632	0					
ANR	6051814	PrimaryExpression	0x1f		6050632	1					
ANR	6051815	Argument	1 + ( ( t >> 5 ) & 0x1f )		6050632	1					
ANR	6051816	AdditiveExpression	1 + ( ( t >> 5 ) & 0x1f )		6050632	0		+			
ANR	6051817	PrimaryExpression	1		6050632	0					
ANR	6051818	BitAndExpression	( t >> 5 ) & 0x1f		6050632	1		&			
ANR	6051819	ShiftExpression	t >> 5		6050632	0		>>			
ANR	6051820	Identifier	t		6050632	0					
ANR	6051821	PrimaryExpression	5		6050632	1					
ANR	6051822	PrimaryExpression	0x1f		6050632	1					
ANR	6051823	Argument	s -> sub . trees . blens		6050632	2					
ANR	6051824	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051825	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051826	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051827	Identifier	s		6050632	0					
ANR	6051828	Identifier	sub		6050632	1					
ANR	6051829	Identifier	trees		6050632	1					
ANR	6051830	Identifier	blens		6050632	1					
ANR	6051831	Argument	& bl		6050632	3					
ANR	6051832	UnaryOperationExpression	& bl		6050632	0					
ANR	6051833	UnaryOperator	&		6050632	0					
ANR	6051834	Identifier	bl		6050632	1					
ANR	6051835	Argument	& bd		6050632	4					
ANR	6051836	UnaryOperationExpression	& bd		6050632	0					
ANR	6051837	UnaryOperator	&		6050632	0					
ANR	6051838	Identifier	bd		6050632	1					
ANR	6051839	Argument	& tl		6050632	5					
ANR	6051840	UnaryOperationExpression	& tl		6050632	0					
ANR	6051841	UnaryOperator	&		6050632	0					
ANR	6051842	Identifier	tl		6050632	1					
ANR	6051843	Argument	& td		6050632	6					
ANR	6051844	UnaryOperationExpression	& td		6050632	0					
ANR	6051845	UnaryOperator	&		6050632	0					
ANR	6051846	Identifier	td		6050632	1					
ANR	6051847	Argument	s -> hufts		6050632	7					
ANR	6051848	PtrMemberAccess	s -> hufts		6050632	0					
ANR	6051849	Identifier	s		6050632	0					
ANR	6051850	Identifier	hufts		6050632	1					
ANR	6051851	Argument	z		6050632	8					
ANR	6051852	Identifier	z		6050632	0					
ANR	6051853	IfStatement	if ( t != Z_OK )		6050632	7					
ANR	6051854	Condition	t != Z_OK	318:12:10659:10667	6050632	0	True				
ANR	6051855	EqualityExpression	t != Z_OK		6050632	0		!=			
ANR	6051856	Identifier	t		6050632	0					
ANR	6051857	Identifier	Z_OK		6050632	1					
ANR	6051858	CompoundStatement		197:8:6167:6167	6050632	1					
ANR	6051859	IfStatement	if ( t == ( uInt ) Z_DATA_ERROR )		6050632	0					
ANR	6051860	Condition	t == ( uInt ) Z_DATA_ERROR	320:14:10694:10716	6050632	0	True				
ANR	6051861	EqualityExpression	t == ( uInt ) Z_DATA_ERROR		6050632	0		==			
ANR	6051862	Identifier	t		6050632	0					
ANR	6051863	CastExpression	( uInt ) Z_DATA_ERROR		6050632	1					
ANR	6051864	CastTarget	uInt		6050632	0					
ANR	6051865	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6051866	CompoundStatement		199:10:6218:6218	6050632	1					
ANR	6051867	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	322:12:10743:10771	6050632	0	True				
ANR	6051868	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		6050632	0					
ANR	6051869	Callee	ZFREE		6050632	0					
ANR	6051870	Identifier	ZFREE		6050632	0					
ANR	6051871	ArgumentList	z		6050632	1					
ANR	6051872	Argument	z		6050632	0					
ANR	6051873	Identifier	z		6050632	0					
ANR	6051874	Argument	s -> sub . trees . blens		6050632	1					
ANR	6051875	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051876	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051877	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051878	Identifier	s		6050632	0					
ANR	6051879	Identifier	sub		6050632	1					
ANR	6051880	Identifier	trees		6050632	1					
ANR	6051881	Identifier	blens		6050632	1					
ANR	6051882	ExpressionStatement	s -> mode = BAD	323:12:10785:10798	6050632	1	True				
ANR	6051883	AssignmentExpression	s -> mode = BAD		6050632	0		=			
ANR	6051884	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051885	Identifier	s		6050632	0					
ANR	6051886	Identifier	mode		6050632	1					
ANR	6051887	Identifier	BAD		6050632	1					
ANR	6051888	ExpressionStatement	r = t	325:10:10822:10827	6050632	1	True				
ANR	6051889	AssignmentExpression	r = t		6050632	0		=			
ANR	6051890	Identifier	r		6050632	0					
ANR	6051891	Identifier	t		6050632	1					
ANR	6051892	Statement	LEAVE	326:10:10839:10843	6050632	2	True				
ANR	6051893	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       trees ok\\n"" ) )"	328:8:10863:10908	6050632	8	True				
ANR	6051894	CallExpression	"Tracev ( ( stderr , ""inflate:       trees ok\\n"" ) )"		6050632	0					
ANR	6051895	Callee	Tracev		6050632	0					
ANR	6051896	Identifier	Tracev		6050632	0					
ANR	6051897	ArgumentList	"stderr , ""inflate:       trees ok\\n"""		6050632	1					
ANR	6051898	Argument	"stderr , ""inflate:       trees ok\\n"""		6050632	0					
ANR	6051899	Expression	"stderr , ""inflate:       trees ok\\n"""		6050632	0					
ANR	6051900	Identifier	stderr		6050632	0					
ANR	6051901	PrimaryExpression	"""inflate:       trees ok\\n"""		6050632	1					
ANR	6051902	IfStatement	"if ( ( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL )"		6050632	9					
ANR	6051903	Condition	"( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL"	329:12:10922:10973	6050632	0	True				
ANR	6051904	EqualityExpression	"( c = inflate_codes_new ( bl , bd , tl , td , z ) ) == Z_NULL"		6050632	0		==			
ANR	6051905	AssignmentExpression	"c = inflate_codes_new ( bl , bd , tl , td , z )"		6050632	0		=			
ANR	6051906	Identifier	c		6050632	0					
ANR	6051907	CallExpression	"inflate_codes_new ( bl , bd , tl , td , z )"		6050632	1					
ANR	6051908	Callee	inflate_codes_new		6050632	0					
ANR	6051909	Identifier	inflate_codes_new		6050632	0					
ANR	6051910	ArgumentList	bl		6050632	1					
ANR	6051911	Argument	bl		6050632	0					
ANR	6051912	Identifier	bl		6050632	0					
ANR	6051913	Argument	bd		6050632	1					
ANR	6051914	Identifier	bd		6050632	0					
ANR	6051915	Argument	tl		6050632	2					
ANR	6051916	Identifier	tl		6050632	0					
ANR	6051917	Argument	td		6050632	3					
ANR	6051918	Identifier	td		6050632	0					
ANR	6051919	Argument	z		6050632	4					
ANR	6051920	Identifier	z		6050632	0					
ANR	6051921	Identifier	Z_NULL		6050632	1					
ANR	6051922	CompoundStatement		208:8:6473:6473	6050632	1					
ANR	6051923	ExpressionStatement	r = Z_MEM_ERROR	331:10:10996:11011	6050632	0	True				
ANR	6051924	AssignmentExpression	r = Z_MEM_ERROR		6050632	0		=			
ANR	6051925	Identifier	r		6050632	0					
ANR	6051926	Identifier	Z_MEM_ERROR		6050632	1					
ANR	6051927	Statement	LEAVE	332:10:11023:11027	6050632	1	True				
ANR	6051928	ExpressionStatement	s -> sub . decode . codes = c	334:8:11047:11070	6050632	10	True				
ANR	6051929	AssignmentExpression	s -> sub . decode . codes = c		6050632	0		=			
ANR	6051930	MemberAccess	s -> sub . decode . codes		6050632	0					
ANR	6051931	MemberAccess	s -> sub . decode		6050632	0					
ANR	6051932	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051933	Identifier	s		6050632	0					
ANR	6051934	Identifier	sub		6050632	1					
ANR	6051935	Identifier	decode		6050632	1					
ANR	6051936	Identifier	codes		6050632	1					
ANR	6051937	Identifier	c		6050632	1					
ANR	6051938	ExpressionStatement	"ZFREE ( z , s -> sub . trees . blens )"	336:6:11086:11114	6050632	62	True				
ANR	6051939	CallExpression	"ZFREE ( z , s -> sub . trees . blens )"		6050632	0					
ANR	6051940	Callee	ZFREE		6050632	0					
ANR	6051941	Identifier	ZFREE		6050632	0					
ANR	6051942	ArgumentList	z		6050632	1					
ANR	6051943	Argument	z		6050632	0					
ANR	6051944	Identifier	z		6050632	0					
ANR	6051945	Argument	s -> sub . trees . blens		6050632	1					
ANR	6051946	MemberAccess	s -> sub . trees . blens		6050632	0					
ANR	6051947	MemberAccess	s -> sub . trees		6050632	0					
ANR	6051948	PtrMemberAccess	s -> sub		6050632	0					
ANR	6051949	Identifier	s		6050632	0					
ANR	6051950	Identifier	sub		6050632	1					
ANR	6051951	Identifier	trees		6050632	1					
ANR	6051952	Identifier	blens		6050632	1					
ANR	6051953	ExpressionStatement	s -> mode = CODES	337:6:11122:11137	6050632	63	True				
ANR	6051954	AssignmentExpression	s -> mode = CODES		6050632	0		=			
ANR	6051955	PtrMemberAccess	s -> mode		6050632	0					
ANR	6051956	Identifier	s		6050632	0					
ANR	6051957	Identifier	mode		6050632	1					
ANR	6051958	Identifier	CODES		6050632	1					
ANR	6051959	Label	case CODES :	338:4:11143:11153	6050632	64	True				
ANR	6051960	Identifier	CODES		6050632	0					
ANR	6051961	Statement	UPDATE	339:6:11161:11166	6050632	65	True				
ANR	6051962	IfStatement	"if ( ( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END )"		6050632	66					
ANR	6051963	Condition	"( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END"	340:10:11178:11221	6050632	0	True				
ANR	6051964	EqualityExpression	"( r = inflate_codes ( s , z , r ) ) != Z_STREAM_END"		6050632	0		!=			
ANR	6051965	AssignmentExpression	"r = inflate_codes ( s , z , r )"		6050632	0		=			
ANR	6051966	Identifier	r		6050632	0					
ANR	6051967	CallExpression	"inflate_codes ( s , z , r )"		6050632	1					
ANR	6051968	Callee	inflate_codes		6050632	0					
ANR	6051969	Identifier	inflate_codes		6050632	0					
ANR	6051970	ArgumentList	s		6050632	1					
ANR	6051971	Argument	s		6050632	0					
ANR	6051972	Identifier	s		6050632	0					
ANR	6051973	Argument	z		6050632	1					
ANR	6051974	Identifier	z		6050632	0					
ANR	6051975	Argument	r		6050632	2					
ANR	6051976	Identifier	r		6050632	0					
ANR	6051977	Identifier	Z_STREAM_END		6050632	1					
ANR	6051978	ReturnStatement	"return inflate_flush ( s , z , r ) ;"	341:8:11232:11261	6050632	1	True				
ANR	6051979	CallExpression	"inflate_flush ( s , z , r )"		6050632	0					
ANR	6051980	Callee	inflate_flush		6050632	0					
ANR	6051981	Identifier	inflate_flush		6050632	0					
ANR	6051982	ArgumentList	s		6050632	1					
ANR	6051983	Argument	s		6050632	0					
ANR	6051984	Identifier	s		6050632	0					
ANR	6051985	Argument	z		6050632	1					
ANR	6051986	Identifier	z		6050632	0					
ANR	6051987	Argument	r		6050632	2					
ANR	6051988	Identifier	r		6050632	0					
ANR	6051989	ExpressionStatement	r = Z_OK	342:6:11269:11277	6050632	67	True				
ANR	6051990	AssignmentExpression	r = Z_OK		6050632	0		=			
ANR	6051991	Identifier	r		6050632	0					
ANR	6051992	Identifier	Z_OK		6050632	1					
ANR	6051993	ExpressionStatement	"inflate_codes_free ( s -> sub . decode . codes , z )"	343:6:11285:11327	6050632	68	True				
ANR	6051994	CallExpression	"inflate_codes_free ( s -> sub . decode . codes , z )"		6050632	0					
ANR	6051995	Callee	inflate_codes_free		6050632	0					
ANR	6051996	Identifier	inflate_codes_free		6050632	0					
ANR	6051997	ArgumentList	s -> sub . decode . codes		6050632	1					
ANR	6051998	Argument	s -> sub . decode . codes		6050632	0					
ANR	6051999	MemberAccess	s -> sub . decode . codes		6050632	0					
ANR	6052000	MemberAccess	s -> sub . decode		6050632	0					
ANR	6052001	PtrMemberAccess	s -> sub		6050632	0					
ANR	6052002	Identifier	s		6050632	0					
ANR	6052003	Identifier	sub		6050632	1					
ANR	6052004	Identifier	decode		6050632	1					
ANR	6052005	Identifier	codes		6050632	1					
ANR	6052006	Argument	z		6050632	1					
ANR	6052007	Identifier	z		6050632	0					
ANR	6052008	IdentifierDeclStatement	"LOAD Tracev ( ( stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) ) ;"	344:6:11335:11519	6050632	69	True				
ANR	6052009	IdentifierDecl	"Tracev ( ( stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) ) ) )"		6050632	0					
ANR	6052010	IdentifierDeclType	LOAD		6050632	0					
ANR	6052011	Identifier	Tracev		6050632	1					
ANR	6052012	Expression	"stderr , ""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	2					
ANR	6052013	Identifier	stderr		6050632	0					
ANR	6052014	Expression	"""inflate:       codes end, %lu total out\\n"" , z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )"		6050632	1					
ANR	6052015	PrimaryExpression	"""inflate:       codes end, %lu total out\\n"""		6050632	0					
ANR	6052016	AdditiveExpression	z -> total_out + ( q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window ) )		6050632	1		+			
ANR	6052017	PtrMemberAccess	z -> total_out		6050632	0					
ANR	6052018	Identifier	z		6050632	0					
ANR	6052019	Identifier	total_out		6050632	1					
ANR	6052020	ConditionalExpression	q >= s -> read ? q - s -> read : ( s -> end - s -> read ) + ( q - s -> window )		6050632	1					
ANR	6052021	Condition	q >= s -> read		6050632	0					
ANR	6052022	RelationalExpression	q >= s -> read		6050632	0		>=			
ANR	6052023	Identifier	q		6050632	0					
ANR	6052024	PtrMemberAccess	s -> read		6050632	1					
ANR	6052025	Identifier	s		6050632	0					
ANR	6052026	Identifier	read		6050632	1					
ANR	6052027	AdditiveExpression	q - s -> read		6050632	1		-			
ANR	6052028	Identifier	q		6050632	0					
ANR	6052029	PtrMemberAccess	s -> read		6050632	1					
ANR	6052030	Identifier	s		6050632	0					
ANR	6052031	Identifier	read		6050632	1					
ANR	6052032	AdditiveExpression	( s -> end - s -> read ) + ( q - s -> window )		6050632	2		+			
ANR	6052033	AdditiveExpression	s -> end - s -> read		6050632	0		-			
ANR	6052034	PtrMemberAccess	s -> end		6050632	0					
ANR	6052035	Identifier	s		6050632	0					
ANR	6052036	Identifier	end		6050632	1					
ANR	6052037	PtrMemberAccess	s -> read		6050632	1					
ANR	6052038	Identifier	s		6050632	0					
ANR	6052039	Identifier	read		6050632	1					
ANR	6052040	AdditiveExpression	q - s -> window		6050632	1		-			
ANR	6052041	Identifier	q		6050632	0					
ANR	6052042	PtrMemberAccess	s -> window		6050632	1					
ANR	6052043	Identifier	s		6050632	0					
ANR	6052044	Identifier	window		6050632	1					
ANR	6052045	IfStatement	if ( ! s -> last )		6050632	70					
ANR	6052046	Condition	! s -> last	348:10:11531:11538	6050632	0	True				
ANR	6052047	UnaryOperationExpression	! s -> last		6050632	0					
ANR	6052048	UnaryOperator	!		6050632	0					
ANR	6052049	PtrMemberAccess	s -> last		6050632	1					
ANR	6052050	Identifier	s		6050632	0					
ANR	6052051	Identifier	last		6050632	1					
ANR	6052052	CompoundStatement		227:6:7036:7036	6050632	1					
ANR	6052053	ExpressionStatement	s -> mode = TYPE	350:8:11557:11571	6050632	0	True				
ANR	6052054	AssignmentExpression	s -> mode = TYPE		6050632	0		=			
ANR	6052055	PtrMemberAccess	s -> mode		6050632	0					
ANR	6052056	Identifier	s		6050632	0					
ANR	6052057	Identifier	mode		6050632	1					
ANR	6052058	Identifier	TYPE		6050632	1					
ANR	6052059	BreakStatement	break ;	351:8:11581:11586	6050632	1	True				
ANR	6052060	ExpressionStatement	s -> mode = DRY	353:6:11602:11615	6050632	71	True				
ANR	6052061	AssignmentExpression	s -> mode = DRY		6050632	0		=			
ANR	6052062	PtrMemberAccess	s -> mode		6050632	0					
ANR	6052063	Identifier	s		6050632	0					
ANR	6052064	Identifier	mode		6050632	1					
ANR	6052065	Identifier	DRY		6050632	1					
ANR	6052066	Label	case DRY :	354:4:11621:11629	6050632	72	True				
ANR	6052067	Identifier	DRY		6050632	0					
ANR	6052068	Statement	FLUSH	355:6:11637:11641	6050632	73	True				
ANR	6052069	IfStatement	if ( s -> read != s -> write )		6050632	74					
ANR	6052070	Condition	s -> read != s -> write	356:10:11653:11671	6050632	0	True				
ANR	6052071	EqualityExpression	s -> read != s -> write		6050632	0		!=			
ANR	6052072	PtrMemberAccess	s -> read		6050632	0					
ANR	6052073	Identifier	s		6050632	0					
ANR	6052074	Identifier	read		6050632	1					
ANR	6052075	PtrMemberAccess	s -> write		6050632	1					
ANR	6052076	Identifier	s		6050632	0					
ANR	6052077	Identifier	write		6050632	1					
ANR	6052078	Statement	LEAVE	357:8:11682:11686	6050632	1	True				
ANR	6052079	ExpressionStatement	s -> mode = DONE	358:6:11694:11708	6050632	75	True				
ANR	6052080	AssignmentExpression	s -> mode = DONE		6050632	0		=			
ANR	6052081	PtrMemberAccess	s -> mode		6050632	0					
ANR	6052082	Identifier	s		6050632	0					
ANR	6052083	Identifier	mode		6050632	1					
ANR	6052084	Identifier	DONE		6050632	1					
ANR	6052085	Label	case DONE :	359:4:11714:11723	6050632	76	True				
ANR	6052086	Identifier	DONE		6050632	0					
ANR	6052087	ExpressionStatement	r = Z_STREAM_END	360:6:11731:11747	6050632	77	True				
ANR	6052088	AssignmentExpression	r = Z_STREAM_END		6050632	0		=			
ANR	6052089	Identifier	r		6050632	0					
ANR	6052090	Identifier	Z_STREAM_END		6050632	1					
ANR	6052091	Statement	LEAVE	361:6:11755:11759	6050632	78	True				
ANR	6052092	Label	case BAD :	362:4:11765:11773	6050632	79	True				
ANR	6052093	Identifier	BAD		6050632	0					
ANR	6052094	ExpressionStatement	r = Z_DATA_ERROR	363:6:11781:11797	6050632	80	True				
ANR	6052095	AssignmentExpression	r = Z_DATA_ERROR		6050632	0		=			
ANR	6052096	Identifier	r		6050632	0					
ANR	6052097	Identifier	Z_DATA_ERROR		6050632	1					
ANR	6052098	Statement	LEAVE	364:6:11805:11809	6050632	81	True				
ANR	6052099	Label	default :	365:4:11815:11822	6050632	82	True				
ANR	6052100	Identifier	default		6050632	0					
ANR	6052101	ExpressionStatement	r = Z_STREAM_ERROR	366:6:11830:11848	6050632	83	True				
ANR	6052102	AssignmentExpression	r = Z_STREAM_ERROR		6050632	0		=			
ANR	6052103	Identifier	r		6050632	0					
ANR	6052104	Identifier	Z_STREAM_ERROR		6050632	1					
ANR	6052105	Statement	LEAVE	367:6:11856:11860	6050632	84	True				
ANR	6052106	ReturnStatement	return 0 ;	370:2:11893:11901	6050632	9	True				
ANR	6052107	PrimaryExpression	0		6050632	0					
ANR	6052108	ReturnType	local int		6050632	1					
ANR	6052109	Identifier	inflate_blocks		6050632	2					
ANR	6052110	ParameterList	"inflate_blocks_statef * s , z_streamp z , int r"		6050632	3					
ANR	6052111	Parameter	inflate_blocks_statef * s	120:0:4463:4486	6050632	0	True				
ANR	6052112	ParameterType	inflate_blocks_statef *		6050632	0					
ANR	6052113	Identifier	s		6050632	1					
ANR	6052114	Parameter	z_streamp z	121:0:4489:4499	6050632	1	True				
ANR	6052115	ParameterType	z_streamp		6050632	0					
ANR	6052116	Identifier	z		6050632	1					
ANR	6052117	Parameter	int r	122:0:4502:4506	6050632	2	True				
ANR	6052118	ParameterType	int		6050632	0					
ANR	6052119	Identifier	r		6050632	1					
ANR	6052120	CFGEntryNode	ENTRY		6050632		True				
ANR	6052121	CFGExitNode	EXIT		6050632		True				
ANR	6052122	Symbol	h -> base		6050632						
ANR	6052123	Symbol	Z_STREAM_ERROR		6050632						
ANR	6052124	Symbol	Z_DATA_ERROR		6050632						
ANR	6052125	Symbol	Z_MEM_ERROR		6050632						
ANR	6052126	Symbol	* z		6050632						
ANR	6052127	Symbol	* s -> sub . trees . blens		6050632						
ANR	6052128	Symbol	DTREE		6050632						
ANR	6052129	Symbol	DRY		6050632						
ANR	6052130	Symbol	s -> end		6050632						
ANR	6052131	Symbol	inflate_mask		6050632						
ANR	6052132	Symbol	TABLE		6050632						
ANR	6052133	Symbol	& bl		6050632						
ANR	6052134	Symbol	inflate_codes_new		6050632						
ANR	6052135	Symbol	* s -> sub . trees		6050632						
ANR	6052136	Symbol	Z_STREAM_END		6050632						
ANR	6052137	Symbol	* s -> sub		6050632						
ANR	6052138	Symbol	s -> mode		6050632						
ANR	6052139	Symbol	s -> window		6050632						
ANR	6052140	Symbol	TYPE		6050632						
ANR	6052141	Symbol	s -> sub . trees . blens		6050632						
ANR	6052142	Symbol	s -> sub . trees . bb		6050632						
ANR	6052143	Symbol	border		6050632						
ANR	6052144	Symbol	& s -> sub . trees		6050632						
ANR	6052145	Symbol	z -> msg		6050632						
ANR	6052146	Symbol	DONE		6050632						
ANR	6052147	Symbol	& tl		6050632						
ANR	6052148	Symbol	~b		6050632						
ANR	6052149	Symbol	* border		6050632						
ANR	6052150	Symbol	BTREE		6050632						
ANR	6052151	Symbol	* inflate_mask		6050632						
ANR	6052152	Symbol	inflate_flush		6050632						
ANR	6052153	Symbol	stderr		6050632						
ANR	6052154	Symbol	s -> sub		6050632						
ANR	6052155	Symbol	ZALLOC		6050632						
ANR	6052156	Symbol	s -> sub . trees . tb		6050632						
ANR	6052157	Symbol	s -> sub . decode		6050632						
ANR	6052158	Symbol	s -> sub . trees . table		6050632						
ANR	6052159	Symbol	& s -> sub . trees . bb		6050632						
ANR	6052160	Symbol	s -> sub . trees . index		6050632						
ANR	6052161	Symbol	s -> sub . trees		6050632						
ANR	6052162	Symbol	Tracev		6050632						
ANR	6052163	Symbol	& td		6050632						
ANR	6052164	Symbol	Z_NULL		6050632						
ANR	6052165	Symbol	bd		6050632						
ANR	6052166	Symbol	STORED		6050632						
ANR	6052167	Symbol	* * border		6050632						
ANR	6052168	Symbol	bl		6050632						
ANR	6052169	Symbol	Z_OK		6050632						
ANR	6052170	Symbol	inflate_codes		6050632						
ANR	6052171	Symbol	CODES		6050632						
ANR	6052172	Symbol	s -> read		6050632						
ANR	6052173	Symbol	* * s		6050632						
ANR	6052174	Symbol	s -> sub . left		6050632						
ANR	6052175	Symbol	inflate_trees_bits		6050632						
ANR	6052176	Symbol	LENS		6050632						
ANR	6052177	Symbol	b		6050632						
ANR	6052178	Symbol	c		6050632						
ANR	6052179	Symbol	s -> last		6050632						
ANR	6052180	Symbol	BAD		6050632						
ANR	6052181	Symbol	& s -> sub . trees . tb		6050632						
ANR	6052182	Symbol	h		6050632						
ANR	6052183	Symbol	i		6050632						
ANR	6052184	Symbol	j		6050632						
ANR	6052185	Symbol	k		6050632						
ANR	6052186	Symbol	m		6050632						
ANR	6052187	Symbol	& bd		6050632						
ANR	6052188	Symbol	n		6050632						
ANR	6052189	Symbol	p		6050632						
ANR	6052190	Symbol	td		6050632						
ANR	6052191	Symbol	z -> total_out		6050632						
ANR	6052192	Symbol	q		6050632						
ANR	6052193	Symbol	r		6050632						
ANR	6052194	Symbol	* h		6050632						
ANR	6052195	Symbol	s		6050632						
ANR	6052196	Symbol	* i		6050632						
ANR	6052197	Symbol	t		6050632						
ANR	6052198	Symbol	h -> bits		6050632						
ANR	6052199	Symbol	inflate_trees_dynamic		6050632						
ANR	6052200	Symbol	tl		6050632						
ANR	6052201	Symbol	s -> sub . decode . codes		6050632						
ANR	6052202	Symbol	s -> hufts		6050632						
ANR	6052203	Symbol	z		6050632						
ANR	6052204	Symbol	* s		6050632						
ANR	6052205	Symbol	s -> write		6050632						
ANR	6052206	Symbol	* t		6050632						
ANR	6052207	Symbol	& s -> sub		6050632						
ANR	6052208	Function	inflate_blocks_free	375:0:11914:12161							
ANR	6052209	FunctionDef	"inflate_blocks_free (inflate_blocks_statef * s , z_streamp z)"		6052208	0					
ANR	6052210	CompoundStatement		378:0:11997:12161	6052208	0					
ANR	6052211	ExpressionStatement	"inflate_blocks_reset ( s , z , Z_NULL )"	379:2:12001:12035	6052208	0	True				
ANR	6052212	CallExpression	"inflate_blocks_reset ( s , z , Z_NULL )"		6052208	0					
ANR	6052213	Callee	inflate_blocks_reset		6052208	0					
ANR	6052214	Identifier	inflate_blocks_reset		6052208	0					
ANR	6052215	ArgumentList	s		6052208	1					
ANR	6052216	Argument	s		6052208	0					
ANR	6052217	Identifier	s		6052208	0					
ANR	6052218	Argument	z		6052208	1					
ANR	6052219	Identifier	z		6052208	0					
ANR	6052220	Argument	Z_NULL		6052208	2					
ANR	6052221	Identifier	Z_NULL		6052208	0					
ANR	6052222	ExpressionStatement	"ZFREE ( z , s -> window )"	380:2:12039:12058	6052208	1	True				
ANR	6052223	CallExpression	"ZFREE ( z , s -> window )"		6052208	0					
ANR	6052224	Callee	ZFREE		6052208	0					
ANR	6052225	Identifier	ZFREE		6052208	0					
ANR	6052226	ArgumentList	z		6052208	1					
ANR	6052227	Argument	z		6052208	0					
ANR	6052228	Identifier	z		6052208	0					
ANR	6052229	Argument	s -> window		6052208	1					
ANR	6052230	PtrMemberAccess	s -> window		6052208	0					
ANR	6052231	Identifier	s		6052208	0					
ANR	6052232	Identifier	window		6052208	1					
ANR	6052233	ExpressionStatement	"ZFREE ( z , s -> hufts )"	381:2:12062:12080	6052208	2	True				
ANR	6052234	CallExpression	"ZFREE ( z , s -> hufts )"		6052208	0					
ANR	6052235	Callee	ZFREE		6052208	0					
ANR	6052236	Identifier	ZFREE		6052208	0					
ANR	6052237	ArgumentList	z		6052208	1					
ANR	6052238	Argument	z		6052208	0					
ANR	6052239	Identifier	z		6052208	0					
ANR	6052240	Argument	s -> hufts		6052208	1					
ANR	6052241	PtrMemberAccess	s -> hufts		6052208	0					
ANR	6052242	Identifier	s		6052208	0					
ANR	6052243	Identifier	hufts		6052208	1					
ANR	6052244	ExpressionStatement	"ZFREE ( z , s )"	382:2:12084:12095	6052208	3	True				
ANR	6052245	CallExpression	"ZFREE ( z , s )"		6052208	0					
ANR	6052246	Callee	ZFREE		6052208	0					
ANR	6052247	Identifier	ZFREE		6052208	0					
ANR	6052248	ArgumentList	z		6052208	1					
ANR	6052249	Argument	z		6052208	0					
ANR	6052250	Identifier	z		6052208	0					
ANR	6052251	Argument	s		6052208	1					
ANR	6052252	Identifier	s		6052208	0					
ANR	6052253	ExpressionStatement	"Tracev ( ( stderr , ""inflate:   blocks freed\\n"" ) )"	383:2:12099:12144	6052208	4	True				
ANR	6052254	CallExpression	"Tracev ( ( stderr , ""inflate:   blocks freed\\n"" ) )"		6052208	0					
ANR	6052255	Callee	Tracev		6052208	0					
ANR	6052256	Identifier	Tracev		6052208	0					
ANR	6052257	ArgumentList	"stderr , ""inflate:   blocks freed\\n"""		6052208	1					
ANR	6052258	Argument	"stderr , ""inflate:   blocks freed\\n"""		6052208	0					
ANR	6052259	Expression	"stderr , ""inflate:   blocks freed\\n"""		6052208	0					
ANR	6052260	Identifier	stderr		6052208	0					
ANR	6052261	PrimaryExpression	"""inflate:   blocks freed\\n"""		6052208	1					
ANR	6052262	ReturnStatement	return Z_OK ;	384:2:12148:12159	6052208	5	True				
ANR	6052263	Identifier	Z_OK		6052208	0					
ANR	6052264	ReturnType	local int		6052208	1					
ANR	6052265	Identifier	inflate_blocks_free		6052208	2					
ANR	6052266	ParameterList	"inflate_blocks_statef * s , z_streamp z"		6052208	3					
ANR	6052267	Parameter	inflate_blocks_statef * s	376:0:11957:11980	6052208	0	True				
ANR	6052268	ParameterType	inflate_blocks_statef *		6052208	0					
ANR	6052269	Identifier	s		6052208	1					
ANR	6052270	Parameter	z_streamp z	377:0:11983:11993	6052208	1	True				
ANR	6052271	ParameterType	z_streamp		6052208	0					
ANR	6052272	Identifier	z		6052208	1					
ANR	6052273	CFGEntryNode	ENTRY		6052208		True				
ANR	6052274	CFGExitNode	EXIT		6052208		True				
ANR	6052275	Symbol	s		6052208						
ANR	6052276	Symbol	s -> hufts		6052208						
ANR	6052277	Symbol	z		6052208						
ANR	6052278	Symbol	Z_OK		6052208						
ANR	6052279	Symbol	s -> window		6052208						
ANR	6052280	Symbol	stderr		6052208						
ANR	6052281	Symbol	* s		6052208						
ANR	6052282	Symbol	Z_NULL		6052208						
