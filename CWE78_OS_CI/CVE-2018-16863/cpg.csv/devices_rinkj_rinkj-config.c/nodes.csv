command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2650355	File	data/converged/CVE-2018-16863_ghostpdl/devices_rinkj_rinkj-config.c								
ANR	2650356	Function	rinkj_strdup_size	35:0:988:1157							
ANR	2650357	FunctionDef	"rinkj_strdup_size (const char * src , int size)"		2650356	0					
ANR	2650358	CompoundStatement		37:0:1041:1157	2650356	0					
ANR	2650359	IdentifierDeclStatement	char * result ;	38:2:1045:1057	2650356	0	True				
ANR	2650360	IdentifierDecl	* result		2650356	0					
ANR	2650361	IdentifierDeclType	char *		2650356	0					
ANR	2650362	Identifier	result		2650356	1					
ANR	2650363	ExpressionStatement	result = malloc ( size + 1 )	40:2:1062:1088	2650356	1	True				
ANR	2650364	AssignmentExpression	result = malloc ( size + 1 )		2650356	0		=			
ANR	2650365	Identifier	result		2650356	0					
ANR	2650366	CallExpression	malloc ( size + 1 )		2650356	1					
ANR	2650367	Callee	malloc		2650356	0					
ANR	2650368	Identifier	malloc		2650356	0					
ANR	2650369	ArgumentList	size + 1		2650356	1					
ANR	2650370	Argument	size + 1		2650356	0					
ANR	2650371	AdditiveExpression	size + 1		2650356	0		+			
ANR	2650372	Identifier	size		2650356	0					
ANR	2650373	PrimaryExpression	1		2650356	1					
ANR	2650374	ExpressionStatement	"memcpy ( result , src , size )"	41:2:1092:1118	2650356	2	True				
ANR	2650375	CallExpression	"memcpy ( result , src , size )"		2650356	0					
ANR	2650376	Callee	memcpy		2650356	0					
ANR	2650377	Identifier	memcpy		2650356	0					
ANR	2650378	ArgumentList	result		2650356	1					
ANR	2650379	Argument	result		2650356	0					
ANR	2650380	Identifier	result		2650356	0					
ANR	2650381	Argument	src		2650356	1					
ANR	2650382	Identifier	src		2650356	0					
ANR	2650383	Argument	size		2650356	2					
ANR	2650384	Identifier	size		2650356	0					
ANR	2650385	ExpressionStatement	result [ size ] = 0	42:2:1122:1138	2650356	3	True				
ANR	2650386	AssignmentExpression	result [ size ] = 0		2650356	0		=			
ANR	2650387	ArrayIndexing	result [ size ]		2650356	0					
ANR	2650388	Identifier	result		2650356	0					
ANR	2650389	Identifier	size		2650356	1					
ANR	2650390	PrimaryExpression	0		2650356	1					
ANR	2650391	ReturnStatement	return result ;	43:2:1142:1155	2650356	4	True				
ANR	2650392	Identifier	result		2650356	0					
ANR	2650393	ReturnType	char *		2650356	1					
ANR	2650394	Identifier	rinkj_strdup_size		2650356	2					
ANR	2650395	ParameterList	"const char * src , int size"		2650356	3					
ANR	2650396	Parameter	const char * src	36:19:1014:1028	2650356	0	True				
ANR	2650397	ParameterType	const char *		2650356	0					
ANR	2650398	Identifier	src		2650356	1					
ANR	2650399	Parameter	int size	36:36:1031:1038	2650356	1	True				
ANR	2650400	ParameterType	int		2650356	0					
ANR	2650401	Identifier	size		2650356	1					
ANR	2650402	CFGEntryNode	ENTRY		2650356		True				
ANR	2650403	CFGExitNode	EXIT		2650356		True				
ANR	2650404	Symbol	result		2650356						
ANR	2650405	Symbol	malloc		2650356						
ANR	2650406	Symbol	* size		2650356						
ANR	2650407	Symbol	size		2650356						
ANR	2650408	Symbol	src		2650356						
ANR	2650409	Symbol	* result		2650356						
ANR	2650410	Function	rinkj_config_get	55:0:1391:2353							
ANR	2650411	FunctionDef	"rinkj_config_get (const char * config , const char * key)"		2650410	0					
ANR	2650412	CompoundStatement		57:0:1453:2353	2650410	0					
ANR	2650413	IdentifierDeclStatement	int ix ;	58:2:1457:1463	2650410	0	True				
ANR	2650414	IdentifierDecl	ix		2650410	0					
ANR	2650415	IdentifierDeclType	int		2650410	0					
ANR	2650416	Identifier	ix		2650410	1					
ANR	2650417	IdentifierDeclStatement	"int ix_eol , ix_next ;"	59:2:1467:1486	2650410	1	True				
ANR	2650418	IdentifierDecl	ix_eol		2650410	0					
ANR	2650419	IdentifierDeclType	int		2650410	0					
ANR	2650420	Identifier	ix_eol		2650410	1					
ANR	2650421	IdentifierDecl	ix_next		2650410	1					
ANR	2650422	IdentifierDeclType	int		2650410	0					
ANR	2650423	Identifier	ix_next		2650410	1					
ANR	2650424	IfStatement	if ( config == NULL )		2650410	2					
ANR	2650425	Condition	config == NULL	61:6:1495:1508	2650410	0	True				
ANR	2650426	EqualityExpression	config == NULL		2650410	0		==			
ANR	2650427	Identifier	config		2650410	0					
ANR	2650428	Identifier	NULL		2650410	1					
ANR	2650429	ReturnStatement	return NULL ;	62:4:1515:1526	2650410	1	True				
ANR	2650430	Identifier	NULL		2650410	0					
ANR	2650431	ForStatement	for ( ix = 0 ; config [ ix ] ; ix = ix_next )		2650410	3					
ANR	2650432	ForInit	ix = 0 ;	64:7:1536:1542	2650410	0	True				
ANR	2650433	AssignmentExpression	ix = 0		2650410	0		=			
ANR	2650434	Identifier	ix		2650410	0					
ANR	2650435	PrimaryExpression	0		2650410	1					
ANR	2650436	Condition	config [ ix ]	64:15:1544:1553	2650410	1	True				
ANR	2650437	ArrayIndexing	config [ ix ]		2650410	0					
ANR	2650438	Identifier	config		2650410	0					
ANR	2650439	Identifier	ix		2650410	1					
ANR	2650440	AssignmentExpression	ix = ix_next	64:27:1556:1567	2650410	2	True	=			
ANR	2650441	Identifier	ix		2650410	0					
ANR	2650442	Identifier	ix_next		2650410	1					
ANR	2650443	CompoundStatement		11:6:146:156	2650410	3					
ANR	2650444	IdentifierDeclStatement	char * p_nl ;	66:6:1582:1592	2650410	0	True				
ANR	2650445	IdentifierDecl	* p_nl		2650410	0					
ANR	2650446	IdentifierDeclType	char *		2650410	0					
ANR	2650447	Identifier	p_nl		2650410	1					
ANR	2650448	IdentifierDeclStatement	int key_ix ;	67:6:1600:1610	2650410	1	True				
ANR	2650449	IdentifierDecl	key_ix		2650410	0					
ANR	2650450	IdentifierDeclType	int		2650410	0					
ANR	2650451	Identifier	key_ix		2650410	1					
ANR	2650452	ExpressionStatement	"p_nl = strchr ( config + ix , '\\n' )"	69:6:1619:1652	2650410	2	True				
ANR	2650453	AssignmentExpression	"p_nl = strchr ( config + ix , '\\n' )"		2650410	0		=			
ANR	2650454	Identifier	p_nl		2650410	0					
ANR	2650455	CallExpression	"strchr ( config + ix , '\\n' )"		2650410	1					
ANR	2650456	Callee	strchr		2650410	0					
ANR	2650457	Identifier	strchr		2650410	0					
ANR	2650458	ArgumentList	config + ix		2650410	1					
ANR	2650459	Argument	config + ix		2650410	0					
ANR	2650460	AdditiveExpression	config + ix		2650410	0		+			
ANR	2650461	Identifier	config		2650410	0					
ANR	2650462	Identifier	ix		2650410	1					
ANR	2650463	Argument	'\\n'		2650410	1					
ANR	2650464	PrimaryExpression	'\\n'		2650410	0					
ANR	2650465	IfStatement	if ( p_nl == NULL )		2650410	3					
ANR	2650466	Condition	p_nl == NULL	70:10:1664:1675	2650410	0	True				
ANR	2650467	EqualityExpression	p_nl == NULL		2650410	0		==			
ANR	2650468	Identifier	p_nl		2650410	0					
ANR	2650469	Identifier	NULL		2650410	1					
ANR	2650470	CompoundStatement		15:8:232:232	2650410	1					
ANR	2650471	ExpressionStatement	ix_eol = strlen ( config + ix )	73:10:1742:1771	2650410	0	True				
ANR	2650472	AssignmentExpression	ix_eol = strlen ( config + ix )		2650410	0		=			
ANR	2650473	Identifier	ix_eol		2650410	0					
ANR	2650474	CallExpression	strlen ( config + ix )		2650410	1					
ANR	2650475	Callee	strlen		2650410	0					
ANR	2650476	Identifier	strlen		2650410	0					
ANR	2650477	ArgumentList	config + ix		2650410	1					
ANR	2650478	Argument	config + ix		2650410	0					
ANR	2650479	AdditiveExpression	config + ix		2650410	0		+			
ANR	2650480	Identifier	config		2650410	0					
ANR	2650481	Identifier	ix		2650410	1					
ANR	2650482	ExpressionStatement	ix_next = ix_eol	74:10:1783:1799	2650410	1	True				
ANR	2650483	AssignmentExpression	ix_next = ix_eol		2650410	0		=			
ANR	2650484	Identifier	ix_next		2650410	0					
ANR	2650485	Identifier	ix_eol		2650410	1					
ANR	2650486	ElseStatement	else		2650410	0					
ANR	2650487	CompoundStatement		21:8:376:376	2650410	0					
ANR	2650488	ExpressionStatement	ix_eol = ix + p_nl - config	78:10:1842:1869	2650410	0	True				
ANR	2650489	AssignmentExpression	ix_eol = ix + p_nl - config		2650410	0		=			
ANR	2650490	Identifier	ix_eol		2650410	0					
ANR	2650491	AdditiveExpression	ix + p_nl - config		2650410	1		+			
ANR	2650492	Identifier	ix		2650410	0					
ANR	2650493	AdditiveExpression	p_nl - config		2650410	1		-			
ANR	2650494	Identifier	p_nl		2650410	0					
ANR	2650495	Identifier	config		2650410	1					
ANR	2650496	ExpressionStatement	ix_next = ix_eol + 1	79:10:1881:1901	2650410	1	True				
ANR	2650497	AssignmentExpression	ix_next = ix_eol + 1		2650410	0		=			
ANR	2650498	Identifier	ix_next		2650410	0					
ANR	2650499	AdditiveExpression	ix_eol + 1		2650410	1		+			
ANR	2650500	Identifier	ix_eol		2650410	0					
ANR	2650501	PrimaryExpression	1		2650410	1					
ANR	2650502	ForStatement	for ( key_ix = 0 ; ix + key_ix < ix_eol ; key_ix ++ )		2650410	4					
ANR	2650503	ForInit	key_ix = 0 ;	82:11:1925:1935	2650410	0	True				
ANR	2650504	AssignmentExpression	key_ix = 0		2650410	0		=			
ANR	2650505	Identifier	key_ix		2650410	0					
ANR	2650506	PrimaryExpression	0		2650410	1					
ANR	2650507	Condition	ix + key_ix < ix_eol	82:23:1937:1956	2650410	1	True				
ANR	2650508	RelationalExpression	ix + key_ix < ix_eol		2650410	0		<			
ANR	2650509	AdditiveExpression	ix + key_ix		2650410	0		+			
ANR	2650510	Identifier	ix		2650410	0					
ANR	2650511	Identifier	key_ix		2650410	1					
ANR	2650512	Identifier	ix_eol		2650410	1					
ANR	2650513	PostIncDecOperationExpression	key_ix ++	82:45:1959:1966	2650410	2	True				
ANR	2650514	Identifier	key_ix		2650410	0					
ANR	2650515	IncDec	++		2650410	1					
ANR	2650516	CompoundStatement		27:8:523:523	2650410	3					
ANR	2650517	IfStatement	if ( key [ key_ix ] == 0 && config [ ix + key_ix ] == ':' )		2650410	0					
ANR	2650518	Condition	key [ key_ix ] == 0 && config [ ix + key_ix ] == ':'	84:14:1993:2038	2650410	0	True				
ANR	2650519	AndExpression	key [ key_ix ] == 0 && config [ ix + key_ix ] == ':'		2650410	0		&&			
ANR	2650520	EqualityExpression	key [ key_ix ] == 0		2650410	0		==			
ANR	2650521	ArrayIndexing	key [ key_ix ]		2650410	0					
ANR	2650522	Identifier	key		2650410	0					
ANR	2650523	Identifier	key_ix		2650410	1					
ANR	2650524	PrimaryExpression	0		2650410	1					
ANR	2650525	EqualityExpression	config [ ix + key_ix ] == ':'		2650410	1		==			
ANR	2650526	ArrayIndexing	config [ ix + key_ix ]		2650410	0					
ANR	2650527	Identifier	config		2650410	0					
ANR	2650528	AdditiveExpression	ix + key_ix		2650410	1		+			
ANR	2650529	Identifier	ix		2650410	0					
ANR	2650530	Identifier	key_ix		2650410	1					
ANR	2650531	PrimaryExpression	':'		2650410	1					
ANR	2650532	CompoundStatement		29:12:599:599	2650410	1					
ANR	2650533	ExpressionStatement	ix += key_ix + 1	86:14:2069:2085	2650410	0	True				
ANR	2650534	AssignmentExpression	ix += key_ix + 1		2650410	0		+=			
ANR	2650535	Identifier	ix		2650410	0					
ANR	2650536	AdditiveExpression	key_ix + 1		2650410	1		+			
ANR	2650537	Identifier	key_ix		2650410	0					
ANR	2650538	PrimaryExpression	1		2650410	1					
ANR	2650539	WhileStatement	while ( ix < ix_eol && isspace ( config [ ix ] ) )		2650410	1					
ANR	2650540	Condition	ix < ix_eol && isspace ( config [ ix ] )	87:21:2108:2142	2650410	0	True				
ANR	2650541	AndExpression	ix < ix_eol && isspace ( config [ ix ] )		2650410	0		&&			
ANR	2650542	RelationalExpression	ix < ix_eol		2650410	0		<			
ANR	2650543	Identifier	ix		2650410	0					
ANR	2650544	Identifier	ix_eol		2650410	1					
ANR	2650545	CallExpression	isspace ( config [ ix ] )		2650410	1					
ANR	2650546	Callee	isspace		2650410	0					
ANR	2650547	Identifier	isspace		2650410	0					
ANR	2650548	ArgumentList	config [ ix ]		2650410	1					
ANR	2650549	Argument	config [ ix ]		2650410	0					
ANR	2650550	ArrayIndexing	config [ ix ]		2650410	0					
ANR	2650551	Identifier	config		2650410	0					
ANR	2650552	Identifier	ix		2650410	1					
ANR	2650553	ExpressionStatement	ix ++	88:16:2161:2165	2650410	1	True				
ANR	2650554	PostIncDecOperationExpression	ix ++		2650410	0					
ANR	2650555	Identifier	ix		2650410	0					
ANR	2650556	IncDec	++		2650410	1					
ANR	2650557	ReturnStatement	"return rinkj_strdup_size ( config + ix , ix_eol - ix ) ;"	89:14:2181:2232	2650410	2	True				
ANR	2650558	CallExpression	"rinkj_strdup_size ( config + ix , ix_eol - ix )"		2650410	0					
ANR	2650559	Callee	rinkj_strdup_size		2650410	0					
ANR	2650560	Identifier	rinkj_strdup_size		2650410	0					
ANR	2650561	ArgumentList	config + ix		2650410	1					
ANR	2650562	Argument	config + ix		2650410	0					
ANR	2650563	AdditiveExpression	config + ix		2650410	0		+			
ANR	2650564	Identifier	config		2650410	0					
ANR	2650565	Identifier	ix		2650410	1					
ANR	2650566	Argument	ix_eol - ix		2650410	1					
ANR	2650567	AdditiveExpression	ix_eol - ix		2650410	0		-			
ANR	2650568	Identifier	ix_eol		2650410	0					
ANR	2650569	Identifier	ix		2650410	1					
ANR	2650570	ElseStatement	else		2650410	0					
ANR	2650571	IfStatement	if ( key [ key_ix ] != config [ ix + key_ix ] )		2650410	0					
ANR	2650572	Condition	key [ key_ix ] != config [ ix + key_ix ]	91:19:2267:2300	2650410	0	True				
ANR	2650573	EqualityExpression	key [ key_ix ] != config [ ix + key_ix ]		2650410	0		!=			
ANR	2650574	ArrayIndexing	key [ key_ix ]		2650410	0					
ANR	2650575	Identifier	key		2650410	0					
ANR	2650576	Identifier	key_ix		2650410	1					
ANR	2650577	ArrayIndexing	config [ ix + key_ix ]		2650410	1					
ANR	2650578	Identifier	config		2650410	0					
ANR	2650579	AdditiveExpression	ix + key_ix		2650410	1		+			
ANR	2650580	Identifier	ix		2650410	0					
ANR	2650581	Identifier	key_ix		2650410	1					
ANR	2650582	BreakStatement	break ;	92:12:2315:2320	2650410	1	True				
ANR	2650583	ReturnStatement	return NULL ;	95:2:2340:2351	2650410	4	True				
ANR	2650584	Identifier	NULL		2650410	0					
ANR	2650585	ReturnType	char *		2650410	1					
ANR	2650586	Identifier	rinkj_config_get		2650410	2					
ANR	2650587	ParameterList	"const char * config , const char * key"		2650410	3					
ANR	2650588	Parameter	const char * config	56:18:1416:1433	2650410	0	True				
ANR	2650589	ParameterType	const char *		2650410	0					
ANR	2650590	Identifier	config		2650410	1					
ANR	2650591	Parameter	const char * key	56:38:1436:1450	2650410	1	True				
ANR	2650592	ParameterType	const char *		2650410	0					
ANR	2650593	Identifier	key		2650410	1					
ANR	2650594	CFGEntryNode	ENTRY		2650410		True				
ANR	2650595	CFGExitNode	EXIT		2650410		True				
ANR	2650596	Symbol	* config		2650410						
ANR	2650597	Symbol	ix_next		2650410						
ANR	2650598	Symbol	NULL		2650410						
ANR	2650599	Symbol	ix_eol		2650410						
ANR	2650600	Symbol	isspace		2650410						
ANR	2650601	Symbol	strchr		2650410						
ANR	2650602	Symbol	* key		2650410						
ANR	2650603	Symbol	ix		2650410						
ANR	2650604	Symbol	key_ix		2650410						
ANR	2650605	Symbol	strlen		2650410						
ANR	2650606	Symbol	* key_ix		2650410						
ANR	2650607	Symbol	rinkj_strdup_size		2650410						
ANR	2650608	Symbol	* ix		2650410						
ANR	2650609	Symbol	p_nl		2650410						
ANR	2650610	Symbol	config		2650410						
ANR	2650611	Symbol	key		2650410						
ANR	2650612	Function	rinkj_config_keyval	108:0:2680:3784							
ANR	2650613	FunctionDef	"rinkj_config_keyval (const char * config , char * * p_val , const char * * p_next)"		2650612	0					
ANR	2650614	CompoundStatement		110:0:2763:3784	2650612	0					
ANR	2650615	IdentifierDeclStatement	char * key ;	111:2:2767:2776	2650612	0	True				
ANR	2650616	IdentifierDecl	* key		2650612	0					
ANR	2650617	IdentifierDeclType	char *		2650612	0					
ANR	2650618	Identifier	key		2650612	1					
ANR	2650619	IdentifierDeclStatement	int ix ;	112:2:2780:2786	2650612	1	True				
ANR	2650620	IdentifierDecl	ix		2650612	0					
ANR	2650621	IdentifierDeclType	int		2650612	0					
ANR	2650622	Identifier	ix		2650612	1					
ANR	2650623	IdentifierDeclStatement	"int ix_eol , ix_next ;"	113:2:2790:2809	2650612	2	True				
ANR	2650624	IdentifierDecl	ix_eol		2650612	0					
ANR	2650625	IdentifierDeclType	int		2650612	0					
ANR	2650626	Identifier	ix_eol		2650612	1					
ANR	2650627	IdentifierDecl	ix_next		2650612	1					
ANR	2650628	IdentifierDeclType	int		2650612	0					
ANR	2650629	Identifier	ix_next		2650612	1					
ANR	2650630	IfStatement	if ( config == NULL )		2650612	3					
ANR	2650631	Condition	config == NULL	115:6:2818:2831	2650612	0	True				
ANR	2650632	EqualityExpression	config == NULL		2650612	0		==			
ANR	2650633	Identifier	config		2650612	0					
ANR	2650634	Identifier	NULL		2650612	1					
ANR	2650635	ReturnStatement	return NULL ;	116:4:2838:2849	2650612	1	True				
ANR	2650636	Identifier	NULL		2650612	0					
ANR	2650637	ForStatement	for ( ix = 0 ; config [ ix ] ; ix = ix_next )		2650612	4					
ANR	2650638	ForInit	ix = 0 ;	118:7:2859:2865	2650612	0	True				
ANR	2650639	AssignmentExpression	ix = 0		2650612	0		=			
ANR	2650640	Identifier	ix		2650612	0					
ANR	2650641	PrimaryExpression	0		2650612	1					
ANR	2650642	Condition	config [ ix ]	118:15:2867:2876	2650612	1	True				
ANR	2650643	ArrayIndexing	config [ ix ]		2650612	0					
ANR	2650644	Identifier	config		2650612	0					
ANR	2650645	Identifier	ix		2650612	1					
ANR	2650646	AssignmentExpression	ix = ix_next	118:27:2879:2890	2650612	2	True	=			
ANR	2650647	Identifier	ix		2650612	0					
ANR	2650648	Identifier	ix_next		2650612	1					
ANR	2650649	CompoundStatement		12:6:159:169	2650612	3					
ANR	2650650	IdentifierDeclStatement	char * p_nl ;	120:6:2905:2915	2650612	0	True				
ANR	2650651	IdentifierDecl	* p_nl		2650612	0					
ANR	2650652	IdentifierDeclType	char *		2650612	0					
ANR	2650653	Identifier	p_nl		2650612	1					
ANR	2650654	IdentifierDeclStatement	int key_ix ;	121:6:2923:2933	2650612	1	True				
ANR	2650655	IdentifierDecl	key_ix		2650612	0					
ANR	2650656	IdentifierDeclType	int		2650612	0					
ANR	2650657	Identifier	key_ix		2650612	1					
ANR	2650658	ExpressionStatement	"p_nl = strchr ( config + ix , '\\n' )"	123:6:2942:2975	2650612	2	True				
ANR	2650659	AssignmentExpression	"p_nl = strchr ( config + ix , '\\n' )"		2650612	0		=			
ANR	2650660	Identifier	p_nl		2650612	0					
ANR	2650661	CallExpression	"strchr ( config + ix , '\\n' )"		2650612	1					
ANR	2650662	Callee	strchr		2650612	0					
ANR	2650663	Identifier	strchr		2650612	0					
ANR	2650664	ArgumentList	config + ix		2650612	1					
ANR	2650665	Argument	config + ix		2650612	0					
ANR	2650666	AdditiveExpression	config + ix		2650612	0		+			
ANR	2650667	Identifier	config		2650612	0					
ANR	2650668	Identifier	ix		2650612	1					
ANR	2650669	Argument	'\\n'		2650612	1					
ANR	2650670	PrimaryExpression	'\\n'		2650612	0					
ANR	2650671	IfStatement	if ( p_nl == NULL )		2650612	3					
ANR	2650672	Condition	p_nl == NULL	124:10:2987:2998	2650612	0	True				
ANR	2650673	EqualityExpression	p_nl == NULL		2650612	0		==			
ANR	2650674	Identifier	p_nl		2650612	0					
ANR	2650675	Identifier	NULL		2650612	1					
ANR	2650676	CompoundStatement		16:8:245:245	2650612	1					
ANR	2650677	ExpressionStatement	ix_eol = strlen ( config + ix )	127:10:3065:3094	2650612	0	True				
ANR	2650678	AssignmentExpression	ix_eol = strlen ( config + ix )		2650612	0		=			
ANR	2650679	Identifier	ix_eol		2650612	0					
ANR	2650680	CallExpression	strlen ( config + ix )		2650612	1					
ANR	2650681	Callee	strlen		2650612	0					
ANR	2650682	Identifier	strlen		2650612	0					
ANR	2650683	ArgumentList	config + ix		2650612	1					
ANR	2650684	Argument	config + ix		2650612	0					
ANR	2650685	AdditiveExpression	config + ix		2650612	0		+			
ANR	2650686	Identifier	config		2650612	0					
ANR	2650687	Identifier	ix		2650612	1					
ANR	2650688	ExpressionStatement	ix_next = ix_eol	128:10:3106:3122	2650612	1	True				
ANR	2650689	AssignmentExpression	ix_next = ix_eol		2650612	0		=			
ANR	2650690	Identifier	ix_next		2650612	0					
ANR	2650691	Identifier	ix_eol		2650612	1					
ANR	2650692	ElseStatement	else		2650612	0					
ANR	2650693	CompoundStatement		22:8:389:389	2650612	0					
ANR	2650694	ExpressionStatement	ix_eol = ix + p_nl - config	132:10:3165:3192	2650612	0	True				
ANR	2650695	AssignmentExpression	ix_eol = ix + p_nl - config		2650612	0		=			
ANR	2650696	Identifier	ix_eol		2650612	0					
ANR	2650697	AdditiveExpression	ix + p_nl - config		2650612	1		+			
ANR	2650698	Identifier	ix		2650612	0					
ANR	2650699	AdditiveExpression	p_nl - config		2650612	1		-			
ANR	2650700	Identifier	p_nl		2650612	0					
ANR	2650701	Identifier	config		2650612	1					
ANR	2650702	ExpressionStatement	ix_next = ix_eol + 1	133:10:3204:3224	2650612	1	True				
ANR	2650703	AssignmentExpression	ix_next = ix_eol + 1		2650612	0		=			
ANR	2650704	Identifier	ix_next		2650612	0					
ANR	2650705	AdditiveExpression	ix_eol + 1		2650612	1		+			
ANR	2650706	Identifier	ix_eol		2650612	0					
ANR	2650707	PrimaryExpression	1		2650612	1					
ANR	2650708	ForStatement	for ( key_ix = 0 ; ix + key_ix < ix_eol ; key_ix ++ )		2650612	4					
ANR	2650709	ForInit	key_ix = 0 ;	136:11:3248:3258	2650612	0	True				
ANR	2650710	AssignmentExpression	key_ix = 0		2650612	0		=			
ANR	2650711	Identifier	key_ix		2650612	0					
ANR	2650712	PrimaryExpression	0		2650612	1					
ANR	2650713	Condition	ix + key_ix < ix_eol	136:23:3260:3279	2650612	1	True				
ANR	2650714	RelationalExpression	ix + key_ix < ix_eol		2650612	0		<			
ANR	2650715	AdditiveExpression	ix + key_ix		2650612	0		+			
ANR	2650716	Identifier	ix		2650612	0					
ANR	2650717	Identifier	key_ix		2650612	1					
ANR	2650718	Identifier	ix_eol		2650612	1					
ANR	2650719	PostIncDecOperationExpression	key_ix ++	136:45:3282:3289	2650612	2	True				
ANR	2650720	Identifier	key_ix		2650612	0					
ANR	2650721	IncDec	++		2650612	1					
ANR	2650722	CompoundStatement		28:8:536:536	2650612	3					
ANR	2650723	IfStatement	if ( config [ ix + key_ix ] == ':' )		2650612	0					
ANR	2650724	Condition	config [ ix + key_ix ] == ':'	138:14:3316:3341	2650612	0	True				
ANR	2650725	EqualityExpression	config [ ix + key_ix ] == ':'		2650612	0		==			
ANR	2650726	ArrayIndexing	config [ ix + key_ix ]		2650612	0					
ANR	2650727	Identifier	config		2650612	0					
ANR	2650728	AdditiveExpression	ix + key_ix		2650612	1		+			
ANR	2650729	Identifier	ix		2650612	0					
ANR	2650730	Identifier	key_ix		2650612	1					
ANR	2650731	PrimaryExpression	':'		2650612	1					
ANR	2650732	CompoundStatement		30:12:592:592	2650612	1					
ANR	2650733	ExpressionStatement	"key = rinkj_strdup_size ( config + ix , key_ix )"	140:14:3372:3417	2650612	0	True				
ANR	2650734	AssignmentExpression	"key = rinkj_strdup_size ( config + ix , key_ix )"		2650612	0		=			
ANR	2650735	Identifier	key		2650612	0					
ANR	2650736	CallExpression	"rinkj_strdup_size ( config + ix , key_ix )"		2650612	1					
ANR	2650737	Callee	rinkj_strdup_size		2650612	0					
ANR	2650738	Identifier	rinkj_strdup_size		2650612	0					
ANR	2650739	ArgumentList	config + ix		2650612	1					
ANR	2650740	Argument	config + ix		2650612	0					
ANR	2650741	AdditiveExpression	config + ix		2650612	0		+			
ANR	2650742	Identifier	config		2650612	0					
ANR	2650743	Identifier	ix		2650612	1					
ANR	2650744	Argument	key_ix		2650612	1					
ANR	2650745	Identifier	key_ix		2650612	0					
ANR	2650746	ExpressionStatement	ix += key_ix + 1	141:14:3433:3449	2650612	1	True				
ANR	2650747	AssignmentExpression	ix += key_ix + 1		2650612	0		+=			
ANR	2650748	Identifier	ix		2650612	0					
ANR	2650749	AdditiveExpression	key_ix + 1		2650612	1		+			
ANR	2650750	Identifier	key_ix		2650612	0					
ANR	2650751	PrimaryExpression	1		2650612	1					
ANR	2650752	WhileStatement	while ( ix < ix_eol && isspace ( config [ ix ] ) )		2650612	2					
ANR	2650753	Condition	ix < ix_eol && isspace ( config [ ix ] )	142:21:3472:3506	2650612	0	True				
ANR	2650754	AndExpression	ix < ix_eol && isspace ( config [ ix ] )		2650612	0		&&			
ANR	2650755	RelationalExpression	ix < ix_eol		2650612	0		<			
ANR	2650756	Identifier	ix		2650612	0					
ANR	2650757	Identifier	ix_eol		2650612	1					
ANR	2650758	CallExpression	isspace ( config [ ix ] )		2650612	1					
ANR	2650759	Callee	isspace		2650612	0					
ANR	2650760	Identifier	isspace		2650612	0					
ANR	2650761	ArgumentList	config [ ix ]		2650612	1					
ANR	2650762	Argument	config [ ix ]		2650612	0					
ANR	2650763	ArrayIndexing	config [ ix ]		2650612	0					
ANR	2650764	Identifier	config		2650612	0					
ANR	2650765	Identifier	ix		2650612	1					
ANR	2650766	ExpressionStatement	ix ++	143:16:3525:3529	2650612	1	True				
ANR	2650767	PostIncDecOperationExpression	ix ++		2650612	0					
ANR	2650768	Identifier	ix		2650612	0					
ANR	2650769	IncDec	++		2650612	1					
ANR	2650770	IfStatement	if ( p_val != NULL )		2650612	3					
ANR	2650771	Condition	p_val != NULL	144:18:3549:3561	2650612	0	True				
ANR	2650772	EqualityExpression	p_val != NULL		2650612	0		!=			
ANR	2650773	Identifier	p_val		2650612	0					
ANR	2650774	Identifier	NULL		2650612	1					
ANR	2650775	ExpressionStatement	"* p_val = rinkj_strdup_size ( config + ix , ix_eol - ix )"	145:16:3580:3633	2650612	1	True				
ANR	2650776	AssignmentExpression	"* p_val = rinkj_strdup_size ( config + ix , ix_eol - ix )"		2650612	0		=			
ANR	2650777	UnaryOperationExpression	* p_val		2650612	0					
ANR	2650778	UnaryOperator	*		2650612	0					
ANR	2650779	Identifier	p_val		2650612	1					
ANR	2650780	CallExpression	"rinkj_strdup_size ( config + ix , ix_eol - ix )"		2650612	1					
ANR	2650781	Callee	rinkj_strdup_size		2650612	0					
ANR	2650782	Identifier	rinkj_strdup_size		2650612	0					
ANR	2650783	ArgumentList	config + ix		2650612	1					
ANR	2650784	Argument	config + ix		2650612	0					
ANR	2650785	AdditiveExpression	config + ix		2650612	0		+			
ANR	2650786	Identifier	config		2650612	0					
ANR	2650787	Identifier	ix		2650612	1					
ANR	2650788	Argument	ix_eol - ix		2650612	1					
ANR	2650789	AdditiveExpression	ix_eol - ix		2650612	0		-			
ANR	2650790	Identifier	ix_eol		2650612	0					
ANR	2650791	Identifier	ix		2650612	1					
ANR	2650792	IfStatement	if ( p_next != NULL )		2650612	4					
ANR	2650793	Condition	p_next != NULL	146:18:3653:3666	2650612	0	True				
ANR	2650794	EqualityExpression	p_next != NULL		2650612	0		!=			
ANR	2650795	Identifier	p_next		2650612	0					
ANR	2650796	Identifier	NULL		2650612	1					
ANR	2650797	ExpressionStatement	* p_next = config + ix_next	147:16:3685:3711	2650612	1	True				
ANR	2650798	AssignmentExpression	* p_next = config + ix_next		2650612	0		=			
ANR	2650799	UnaryOperationExpression	* p_next		2650612	0					
ANR	2650800	UnaryOperator	*		2650612	0					
ANR	2650801	Identifier	p_next		2650612	1					
ANR	2650802	AdditiveExpression	config + ix_next		2650612	1		+			
ANR	2650803	Identifier	config		2650612	0					
ANR	2650804	Identifier	ix_next		2650612	1					
ANR	2650805	ReturnStatement	return key ;	148:14:3727:3737	2650612	5	True				
ANR	2650806	Identifier	key		2650612	0					
ANR	2650807	ReturnStatement	return NULL ;	152:2:3771:3782	2650612	5	True				
ANR	2650808	Identifier	NULL		2650612	0					
ANR	2650809	ReturnType	char *		2650612	1					
ANR	2650810	Identifier	rinkj_config_keyval		2650612	2					
ANR	2650811	ParameterList	"const char * config , char * * p_val , const char * * p_next"		2650612	3					
ANR	2650812	Parameter	const char * config	109:21:2708:2725	2650612	0	True				
ANR	2650813	ParameterType	const char *		2650612	0					
ANR	2650814	Identifier	config		2650612	1					
ANR	2650815	Parameter	char * * p_val	109:41:2728:2739	2650612	1	True				
ANR	2650816	ParameterType	char * *		2650612	0					
ANR	2650817	Identifier	p_val		2650612	1					
ANR	2650818	Parameter	const char * * p_next	109:55:2742:2760	2650612	2	True				
ANR	2650819	ParameterType	const char * *		2650612	0					
ANR	2650820	Identifier	p_next		2650612	1					
ANR	2650821	CFGEntryNode	ENTRY		2650612		True				
ANR	2650822	CFGExitNode	EXIT		2650612		True				
ANR	2650823	Symbol	* config		2650612						
ANR	2650824	Symbol	ix_next		2650612						
ANR	2650825	Symbol	NULL		2650612						
ANR	2650826	Symbol	* p_val		2650612						
ANR	2650827	Symbol	p_val		2650612						
ANR	2650828	Symbol	ix_eol		2650612						
ANR	2650829	Symbol	isspace		2650612						
ANR	2650830	Symbol	strchr		2650612						
ANR	2650831	Symbol	p_next		2650612						
ANR	2650832	Symbol	ix		2650612						
ANR	2650833	Symbol	key_ix		2650612						
ANR	2650834	Symbol	strlen		2650612						
ANR	2650835	Symbol	* key_ix		2650612						
ANR	2650836	Symbol	rinkj_strdup_size		2650612						
ANR	2650837	Symbol	* ix		2650612						
ANR	2650838	Symbol	p_nl		2650612						
ANR	2650839	Symbol	config		2650612						
ANR	2650840	Symbol	* p_next		2650612						
ANR	2650841	Symbol	key		2650612						
