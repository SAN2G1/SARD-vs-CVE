command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	226645	File	data/converged/CVE-2018-16863_ghostpdl/base_gdevm1.c								
ANR	226646	Function	mem_mono_strip_copy_rop_dev	50:0:1973:16509							
ANR	226647	FunctionDef	"mem_mono_strip_copy_rop_dev (gx_device * dev , const byte * sdata , int sourcex , uint sraster , gx_bitmap_id id , const gx_color_index * scolors , const gx_strip_bitmap * textures , const gx_color_index * tcolors , int x , int y , int width , int height , int phase_x , int phase_y , gs_logical_operation_t lop)"		226646	0					
ANR	226648	CompoundStatement		59:0:2470:16509	226646	0					
ANR	226649	IdentifierDeclStatement	gx_device_memory * mdev = ( gx_device_memory * ) dev ;	60:4:2476:2525	226646	0	True				
ANR	226650	IdentifierDecl	* mdev = ( gx_device_memory * ) dev		226646	0					
ANR	226651	IdentifierDeclType	gx_device_memory *		226646	0					
ANR	226652	Identifier	mdev		226646	1					
ANR	226653	AssignmentExpression	* mdev = ( gx_device_memory * ) dev		226646	2		=			
ANR	226654	Identifier	mdev		226646	0					
ANR	226655	CastExpression	( gx_device_memory * ) dev		226646	1					
ANR	226656	CastTarget	gx_device_memory *		226646	0					
ANR	226657	Identifier	dev		226646	1					
ANR	226658	IdentifierDeclStatement	gs_rop3_t rop = ( gs_rop3_t ) lop ;	61:4:2531:2561	226646	1	True				
ANR	226659	IdentifierDecl	rop = ( gs_rop3_t ) lop		226646	0					
ANR	226660	IdentifierDeclType	gs_rop3_t		226646	0					
ANR	226661	Identifier	rop		226646	1					
ANR	226662	AssignmentExpression	rop = ( gs_rop3_t ) lop		226646	2		=			
ANR	226663	Identifier	rop		226646	0					
ANR	226664	CastExpression	( gs_rop3_t ) lop		226646	1					
ANR	226665	CastTarget	gs_rop3_t		226646	0					
ANR	226666	Identifier	lop		226646	1					
ANR	226667	IdentifierDeclStatement	uint draster = mdev -> raster ;	62:4:2567:2594	226646	2	True				
ANR	226668	IdentifierDecl	draster = mdev -> raster		226646	0					
ANR	226669	IdentifierDeclType	uint		226646	0					
ANR	226670	Identifier	draster		226646	1					
ANR	226671	AssignmentExpression	draster = mdev -> raster		226646	2		=			
ANR	226672	Identifier	draster		226646	0					
ANR	226673	PtrMemberAccess	mdev -> raster		226646	1					
ANR	226674	Identifier	mdev		226646	0					
ANR	226675	Identifier	raster		226646	1					
ANR	226676	IdentifierDeclStatement	uint traster ;	63:4:2600:2612	226646	3	True				
ANR	226677	IdentifierDecl	traster		226646	0					
ANR	226678	IdentifierDeclType	uint		226646	0					
ANR	226679	Identifier	traster		226646	1					
ANR	226680	IdentifierDeclStatement	int line_count ;	64:4:2618:2632	226646	4	True				
ANR	226681	IdentifierDecl	line_count		226646	0					
ANR	226682	IdentifierDeclType	int		226646	0					
ANR	226683	Identifier	line_count		226646	1					
ANR	226684	IdentifierDeclStatement	byte * drow ;	65:4:2638:2648	226646	5	True				
ANR	226685	IdentifierDecl	* drow		226646	0					
ANR	226686	IdentifierDeclType	byte *		226646	0					
ANR	226687	Identifier	drow		226646	1					
ANR	226688	IdentifierDeclStatement	const byte * srow ;	66:4:2654:2670	226646	6	True				
ANR	226689	IdentifierDecl	* srow		226646	0					
ANR	226690	IdentifierDeclType	const byte *		226646	0					
ANR	226691	Identifier	srow		226646	1					
ANR	226692	IdentifierDeclStatement	int ty ;	67:4:2676:2682	226646	7	True				
ANR	226693	IdentifierDecl	ty		226646	0					
ANR	226694	IdentifierDeclType	int		226646	0					
ANR	226695	Identifier	ty		226646	1					
ANR	226696	IdentifierDeclStatement	rop_run_op ropper ;	68:4:2688:2705	226646	8	True				
ANR	226697	IdentifierDecl	ropper		226646	0					
ANR	226698	IdentifierDeclType	rop_run_op		226646	0					
ANR	226699	Identifier	ropper		226646	1					
ANR	226700	IfStatement	if ( scolors != 0 )		226646	9					
ANR	226701	Condition	scolors != 0	71:8:2787:2798	226646	0	True				
ANR	226702	EqualityExpression	scolors != 0		226646	0		!=			
ANR	226703	Identifier	scolors		226646	0					
ANR	226704	PrimaryExpression	0		226646	1					
ANR	226705	CompoundStatement		13:22:330:330	226646	1					
ANR	226706	SwitchStatement	switch ( ( int ) ( ( scolors [ 1 ] << 1 ) + scolors [ 0 ] ) )		226646	0					
ANR	226707	Condition	( int ) ( ( scolors [ 1 ] << 1 ) + scolors [ 0 ] )	72:16:2847:2883	226646	0	True				
ANR	226708	CastExpression	( int ) ( ( scolors [ 1 ] << 1 ) + scolors [ 0 ] )		226646	0					
ANR	226709	CastTarget	int		226646	0					
ANR	226710	AdditiveExpression	( scolors [ 1 ] << 1 ) + scolors [ 0 ]		226646	1		+			
ANR	226711	ShiftExpression	scolors [ 1 ] << 1		226646	0		<<			
ANR	226712	ArrayIndexing	scolors [ 1 ]		226646	0					
ANR	226713	Identifier	scolors		226646	0					
ANR	226714	PrimaryExpression	1		226646	1					
ANR	226715	PrimaryExpression	1		226646	1					
ANR	226716	ArrayIndexing	scolors [ 0 ]		226646	1					
ANR	226717	Identifier	scolors		226646	0					
ANR	226718	PrimaryExpression	0		226646	1					
ANR	226719	CompoundStatement		14:55:415:415	226646	1					
ANR	226720	Label	case 0 :	73:12:2900:2906	226646	0	True				
ANR	226721	ExpressionStatement	rop = rop3_know_S_0 ( rop )	74:16:2924:2948	226646	1	True				
ANR	226722	AssignmentExpression	rop = rop3_know_S_0 ( rop )		226646	0		=			
ANR	226723	Identifier	rop		226646	0					
ANR	226724	CallExpression	rop3_know_S_0 ( rop )		226646	1					
ANR	226725	Callee	rop3_know_S_0		226646	0					
ANR	226726	Identifier	rop3_know_S_0		226646	0					
ANR	226727	ArgumentList	rop		226646	1					
ANR	226728	Argument	rop		226646	0					
ANR	226729	Identifier	rop		226646	0					
ANR	226730	BreakStatement	break ;	75:16:2966:2971	226646	2	True				
ANR	226731	Label	case 1 :	76:12:2985:2991	226646	3	True				
ANR	226732	ExpressionStatement	rop = rop3_invert_S ( rop )	77:16:3009:3033	226646	4	True				
ANR	226733	AssignmentExpression	rop = rop3_invert_S ( rop )		226646	0		=			
ANR	226734	Identifier	rop		226646	0					
ANR	226735	CallExpression	rop3_invert_S ( rop )		226646	1					
ANR	226736	Callee	rop3_invert_S		226646	0					
ANR	226737	Identifier	rop3_invert_S		226646	0					
ANR	226738	ArgumentList	rop		226646	1					
ANR	226739	Argument	rop		226646	0					
ANR	226740	Identifier	rop		226646	0					
ANR	226741	BreakStatement	break ;	78:16:3051:3056	226646	5	True				
ANR	226742	Label	case 2 :	79:12:3070:3076	226646	6	True				
ANR	226743	BreakStatement	break ;	80:16:3094:3099	226646	7	True				
ANR	226744	Label	case 3 :	81:12:3113:3119	226646	8	True				
ANR	226745	ExpressionStatement	rop = rop3_know_S_1 ( rop )	82:16:3137:3161	226646	9	True				
ANR	226746	AssignmentExpression	rop = rop3_know_S_1 ( rop )		226646	0		=			
ANR	226747	Identifier	rop		226646	0					
ANR	226748	CallExpression	rop3_know_S_1 ( rop )		226646	1					
ANR	226749	Callee	rop3_know_S_1		226646	0					
ANR	226750	Identifier	rop3_know_S_1		226646	0					
ANR	226751	ArgumentList	rop		226646	1					
ANR	226752	Argument	rop		226646	0					
ANR	226753	Identifier	rop		226646	0					
ANR	226754	BreakStatement	break ;	83:16:3179:3184	226646	10	True				
ANR	226755	IfStatement	if ( tcolors != 0 )		226646	10					
ANR	226756	Condition	tcolors != 0	87:8:3282:3293	226646	0	True				
ANR	226757	EqualityExpression	tcolors != 0		226646	0		!=			
ANR	226758	Identifier	tcolors		226646	0					
ANR	226759	PrimaryExpression	0		226646	1					
ANR	226760	CompoundStatement		29:22:825:825	226646	1					
ANR	226761	SwitchStatement	switch ( ( int ) ( ( tcolors [ 1 ] << 1 ) + tcolors [ 0 ] ) )		226646	0					
ANR	226762	Condition	( int ) ( ( tcolors [ 1 ] << 1 ) + tcolors [ 0 ] )	88:16:3343:3379	226646	0	True				
ANR	226763	CastExpression	( int ) ( ( tcolors [ 1 ] << 1 ) + tcolors [ 0 ] )		226646	0					
ANR	226764	CastTarget	int		226646	0					
ANR	226765	AdditiveExpression	( tcolors [ 1 ] << 1 ) + tcolors [ 0 ]		226646	1		+			
ANR	226766	ShiftExpression	tcolors [ 1 ] << 1		226646	0		<<			
ANR	226767	ArrayIndexing	tcolors [ 1 ]		226646	0					
ANR	226768	Identifier	tcolors		226646	0					
ANR	226769	PrimaryExpression	1		226646	1					
ANR	226770	PrimaryExpression	1		226646	1					
ANR	226771	ArrayIndexing	tcolors [ 0 ]		226646	1					
ANR	226772	Identifier	tcolors		226646	0					
ANR	226773	PrimaryExpression	0		226646	1					
ANR	226774	CompoundStatement		30:55:911:911	226646	1					
ANR	226775	Label	case 0 :	89:12:3396:3402	226646	0	True				
ANR	226776	ExpressionStatement	rop = rop3_know_T_0 ( rop )	90:16:3420:3444	226646	1	True				
ANR	226777	AssignmentExpression	rop = rop3_know_T_0 ( rop )		226646	0		=			
ANR	226778	Identifier	rop		226646	0					
ANR	226779	CallExpression	rop3_know_T_0 ( rop )		226646	1					
ANR	226780	Callee	rop3_know_T_0		226646	0					
ANR	226781	Identifier	rop3_know_T_0		226646	0					
ANR	226782	ArgumentList	rop		226646	1					
ANR	226783	Argument	rop		226646	0					
ANR	226784	Identifier	rop		226646	0					
ANR	226785	BreakStatement	break ;	91:16:3462:3467	226646	2	True				
ANR	226786	Label	case 1 :	92:12:3481:3487	226646	3	True				
ANR	226787	ExpressionStatement	rop = rop3_invert_T ( rop )	93:16:3505:3529	226646	4	True				
ANR	226788	AssignmentExpression	rop = rop3_invert_T ( rop )		226646	0		=			
ANR	226789	Identifier	rop		226646	0					
ANR	226790	CallExpression	rop3_invert_T ( rop )		226646	1					
ANR	226791	Callee	rop3_invert_T		226646	0					
ANR	226792	Identifier	rop3_invert_T		226646	0					
ANR	226793	ArgumentList	rop		226646	1					
ANR	226794	Argument	rop		226646	0					
ANR	226795	Identifier	rop		226646	0					
ANR	226796	BreakStatement	break ;	94:16:3547:3552	226646	5	True				
ANR	226797	Label	case 2 :	95:12:3566:3572	226646	6	True				
ANR	226798	BreakStatement	break ;	96:16:3590:3595	226646	7	True				
ANR	226799	Label	case 3 :	97:12:3609:3615	226646	8	True				
ANR	226800	ExpressionStatement	rop = rop3_know_T_1 ( rop )	98:16:3633:3657	226646	9	True				
ANR	226801	AssignmentExpression	rop = rop3_know_T_1 ( rop )		226646	0		=			
ANR	226802	Identifier	rop		226646	0					
ANR	226803	CallExpression	rop3_know_T_1 ( rop )		226646	1					
ANR	226804	Callee	rop3_know_T_1		226646	0					
ANR	226805	Identifier	rop3_know_T_1		226646	0					
ANR	226806	ArgumentList	rop		226646	1					
ANR	226807	Argument	rop		226646	0					
ANR	226808	Identifier	rop		226646	0					
ANR	226809	BreakStatement	break ;	99:16:3675:3680	226646	10	True				
ANR	226810	CompoundStatement		47:8:1392:1421	226646	11					
ANR	226811	IdentifierDeclStatement	"gx_color_index color0 , color1 ;"	105:8:3863:3892	226646	0	True				
ANR	226812	IdentifierDecl	color0		226646	0					
ANR	226813	IdentifierDeclType	gx_color_index		226646	0					
ANR	226814	Identifier	color0		226646	1					
ANR	226815	IdentifierDecl	color1		226646	1					
ANR	226816	IdentifierDeclType	gx_color_index		226646	0					
ANR	226817	Identifier	color1		226646	1					
ANR	226818	SwitchStatement	switch ( rop_usage_table [ rop ] )		226646	1					
ANR	226819	Condition	rop_usage_table [ rop ]	108:16:3918:3937	226646	0	True				
ANR	226820	ArrayIndexing	rop_usage_table [ rop ]		226646	0					
ANR	226821	Identifier	rop_usage_table		226646	0					
ANR	226822	Identifier	rop		226646	1					
ANR	226823	CompoundStatement		50:38:1469:1469	226646	1					
ANR	226824	Label	case rop_usage_none :	109:12:3954:3973	226646	0	True				
ANR	226825	Identifier	rop_usage_none		226646	0					
ANR	226826	ReturnStatement	"return ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , ( gx_color_index ) ( rop & 1 ) ) ;"	112:16:4123:4237	226646	1	True				
ANR	226827	CallExpression	"( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , ( gx_color_index ) ( rop & 1 ) )"		226646	0					
ANR	226828	Callee	"* dev_proc ( dev , fill_rectangle )"		226646	0					
ANR	226829	UnaryOperationExpression	"* dev_proc ( dev , fill_rectangle )"		226646	0					
ANR	226830	UnaryOperator	*		226646	0					
ANR	226831	CallExpression	"dev_proc ( dev , fill_rectangle )"		226646	1					
ANR	226832	Callee	dev_proc		226646	0					
ANR	226833	Identifier	dev_proc		226646	0					
ANR	226834	ArgumentList	dev		226646	1					
ANR	226835	Argument	dev		226646	0					
ANR	226836	Identifier	dev		226646	0					
ANR	226837	Argument	fill_rectangle		226646	1					
ANR	226838	Identifier	fill_rectangle		226646	0					
ANR	226839	ArgumentList	dev		226646	1					
ANR	226840	Argument	dev		226646	0					
ANR	226841	Identifier	dev		226646	0					
ANR	226842	Argument	x		226646	1					
ANR	226843	Identifier	x		226646	0					
ANR	226844	Argument	y		226646	2					
ANR	226845	Identifier	y		226646	0					
ANR	226846	Argument	width		226646	3					
ANR	226847	Identifier	width		226646	0					
ANR	226848	Argument	height		226646	4					
ANR	226849	Identifier	height		226646	0					
ANR	226850	Argument	( gx_color_index ) ( rop & 1 )		226646	5					
ANR	226851	CastExpression	( gx_color_index ) ( rop & 1 )		226646	0					
ANR	226852	CastTarget	gx_color_index		226646	0					
ANR	226853	BitAndExpression	rop & 1		226646	1		&			
ANR	226854	Identifier	rop		226646	0					
ANR	226855	PrimaryExpression	1		226646	1					
ANR	226856	Label	case rop_usage_D :	117:12:4287:4303	226646	2	True				
ANR	226857	Identifier	rop_usage_D		226646	0					
ANR	226858	IfStatement	if ( rop == rop3_D )		226646	3					
ANR	226859	Condition	rop == rop3_D	119:20:4379:4391	226646	0	True				
ANR	226860	EqualityExpression	rop == rop3_D		226646	0		==			
ANR	226861	Identifier	rop		226646	0					
ANR	226862	Identifier	rop3_D		226646	1					
ANR	226863	ReturnStatement	return 0 ;	120:20:4414:4422	226646	1	True				
ANR	226864	PrimaryExpression	0		226646	0					
ANR	226865	ExpressionStatement	"fit_fill ( dev , x , y , width , height )"	122:16:4503:4537	226646	4	True				
ANR	226866	CallExpression	"fit_fill ( dev , x , y , width , height )"		226646	0					
ANR	226867	Callee	fit_fill		226646	0					
ANR	226868	Identifier	fit_fill		226646	0					
ANR	226869	ArgumentList	dev		226646	1					
ANR	226870	Argument	dev		226646	0					
ANR	226871	Identifier	dev		226646	0					
ANR	226872	Argument	x		226646	1					
ANR	226873	Identifier	x		226646	0					
ANR	226874	Argument	y		226646	2					
ANR	226875	Identifier	y		226646	0					
ANR	226876	Argument	width		226646	3					
ANR	226877	Identifier	width		226646	0					
ANR	226878	Argument	height		226646	4					
ANR	226879	Identifier	height		226646	0					
ANR	226880	ExpressionStatement	"sdata = scan_line_base ( mdev , 0 )"	123:16:4555:4586	226646	5	True				
ANR	226881	AssignmentExpression	"sdata = scan_line_base ( mdev , 0 )"		226646	0		=			
ANR	226882	Identifier	sdata		226646	0					
ANR	226883	CallExpression	"scan_line_base ( mdev , 0 )"		226646	1					
ANR	226884	Callee	scan_line_base		226646	0					
ANR	226885	Identifier	scan_line_base		226646	0					
ANR	226886	ArgumentList	mdev		226646	1					
ANR	226887	Argument	mdev		226646	0					
ANR	226888	Identifier	mdev		226646	0					
ANR	226889	Argument	0		226646	1					
ANR	226890	PrimaryExpression	0		226646	0					
ANR	226891	ExpressionStatement	sourcex = x	124:16:4604:4615	226646	6	True				
ANR	226892	AssignmentExpression	sourcex = x		226646	0		=			
ANR	226893	Identifier	sourcex		226646	0					
ANR	226894	Identifier	x		226646	1					
ANR	226895	ExpressionStatement	sraster = 0	125:16:4633:4644	226646	7	True				
ANR	226896	AssignmentExpression	sraster = 0		226646	0		=			
ANR	226897	Identifier	sraster		226646	0					
ANR	226898	PrimaryExpression	0		226646	1					
ANR	226899	GotoStatement	goto no_T ;	126:16:4662:4671	226646	8	True				
ANR	226900	Identifier	no_T		226646	0					
ANR	226901	Label	case rop_usage_S :	127:12:4685:4701	226646	9	True				
ANR	226902	Identifier	rop_usage_S		226646	0					
ANR	226903	IfStatement	if ( rop == rop3_S )		226646	10					
ANR	226904	Condition	rop == rop3_S	130:20:4876:4888	226646	0	True				
ANR	226905	EqualityExpression	rop == rop3_S		226646	0		==			
ANR	226906	Identifier	rop		226646	0					
ANR	226907	Identifier	rop3_S		226646	1					
ANR	226908	ExpressionStatement	"color0 = 0 , color1 = 1"	131:20:4911:4933	226646	1	True				
ANR	226909	Expression	"color0 = 0 , color1 = 1"		226646	0					
ANR	226910	AssignmentExpression	color0 = 0		226646	0		=			
ANR	226911	Identifier	color0		226646	0					
ANR	226912	PrimaryExpression	0		226646	1					
ANR	226913	AssignmentExpression	color1 = 1		226646	1		=			
ANR	226914	Identifier	color1		226646	0					
ANR	226915	PrimaryExpression	1		226646	1					
ANR	226916	ElseStatement	else		226646	0					
ANR	226917	ExpressionStatement	"color0 = 1 , color1 = 0"	133:20:4976:4998	226646	0	True				
ANR	226918	Expression	"color0 = 1 , color1 = 0"		226646	0					
ANR	226919	AssignmentExpression	color0 = 1		226646	0		=			
ANR	226920	Identifier	color0		226646	0					
ANR	226921	PrimaryExpression	1		226646	1					
ANR	226922	AssignmentExpression	color1 = 0		226646	1		=			
ANR	226923	Identifier	color1		226646	0					
ANR	226924	PrimaryExpression	0		226646	1					
ANR	226925	Label	do_copy :	134:14:5014:5021	226646	11	True				
ANR	226926	Identifier	do_copy		226646	0					
ANR	226927	ReturnStatement	"return ( * dev_proc ( dev , copy_mono ) ) ( dev , sdata , sourcex , sraster , id , x , y , width , height , color0 , color1 ) ;"	134:22:5022:5169	226646	12	True				
ANR	226928	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , sdata , sourcex , sraster , id , x , y , width , height , color0 , color1 )"		226646	0					
ANR	226929	Callee	"* dev_proc ( dev , copy_mono )"		226646	0					
ANR	226930	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		226646	0					
ANR	226931	UnaryOperator	*		226646	0					
ANR	226932	CallExpression	"dev_proc ( dev , copy_mono )"		226646	1					
ANR	226933	Callee	dev_proc		226646	0					
ANR	226934	Identifier	dev_proc		226646	0					
ANR	226935	ArgumentList	dev		226646	1					
ANR	226936	Argument	dev		226646	0					
ANR	226937	Identifier	dev		226646	0					
ANR	226938	Argument	copy_mono		226646	1					
ANR	226939	Identifier	copy_mono		226646	0					
ANR	226940	ArgumentList	dev		226646	1					
ANR	226941	Argument	dev		226646	0					
ANR	226942	Identifier	dev		226646	0					
ANR	226943	Argument	sdata		226646	1					
ANR	226944	Identifier	sdata		226646	0					
ANR	226945	Argument	sourcex		226646	2					
ANR	226946	Identifier	sourcex		226646	0					
ANR	226947	Argument	sraster		226646	3					
ANR	226948	Identifier	sraster		226646	0					
ANR	226949	Argument	id		226646	4					
ANR	226950	Identifier	id		226646	0					
ANR	226951	Argument	x		226646	5					
ANR	226952	Identifier	x		226646	0					
ANR	226953	Argument	y		226646	6					
ANR	226954	Identifier	y		226646	0					
ANR	226955	Argument	width		226646	7					
ANR	226956	Identifier	width		226646	0					
ANR	226957	Argument	height		226646	8					
ANR	226958	Identifier	height		226646	0					
ANR	226959	Argument	color0		226646	9					
ANR	226960	Identifier	color0		226646	0					
ANR	226961	Argument	color1		226646	10					
ANR	226962	Identifier	color1		226646	0					
ANR	226963	Label	case rop_usage_DS :	142:12:5327:5344	226646	13	True				
ANR	226964	Identifier	rop_usage_DS		226646	0					
ANR	226965	Statement	define	145:1:5496:5501	226646	14	True				
ANR	226966	Statement	copy_case	145:8:5503:5511	226646	15	True				
ANR	226967	Statement	(	145:17:5512:5512	226646	16	True				
ANR	226968	Statement	c0	145:18:5513:5514	226646	17	True				
ANR	226969	Statement	","	145:20:5515:5515	226646	18	True				
ANR	226970	Statement	c1	145:22:5517:5518	226646	19	True				
ANR	226971	Statement	)	145:24:5519:5519	226646	20	True				
ANR	226972	ExpressionStatement	"color0 = c0 , color1 = c1"	145:26:5521:5545	226646	21	True				
ANR	226973	Expression	"color0 = c0 , color1 = c1"		226646	0					
ANR	226974	AssignmentExpression	color0 = c0		226646	0		=			
ANR	226975	Identifier	color0		226646	0					
ANR	226976	Identifier	c0		226646	1					
ANR	226977	AssignmentExpression	color1 = c1		226646	1		=			
ANR	226978	Identifier	color1		226646	0					
ANR	226979	Identifier	c1		226646	1					
ANR	226980	GotoStatement	goto do_copy ;	145:52:5547:5559	226646	22	True				
ANR	226981	Identifier	do_copy		226646	0					
ANR	226982	SwitchStatement	switch ( ( uint ) rop )		226646	23					
ANR	226983	Condition	( uint ) rop	146:24:5585:5594	226646	0	True				
ANR	226984	CastExpression	( uint ) rop		226646	0					
ANR	226985	CastTarget	uint		226646	0					
ANR	226986	Identifier	rop		226646	1					
ANR	226987	CompoundStatement		88:36:3126:3126	226646	1					
ANR	226988	Statement	case	147:20:5655:5658	226646	0	True				
ANR	226989	Statement	rop3_D	147:25:5660:5665	226646	1	True				
ANR	226990	Statement	&	147:32:5667:5667	226646	2	True				
ANR	226991	Statement	rop3_not	147:34:5669:5676	226646	3	True				
ANR	226992	Statement	(	147:42:5677:5677	226646	4	True				
ANR	226993	Statement	rop3_S	147:43:5678:5683	226646	5	True				
ANR	226994	Statement	)	147:49:5684:5684	226646	6	True				
ANR	226995	Statement	:	147:50:5685:5685	226646	7	True				
ANR	226996	ExpressionStatement	"copy_case ( gx_no_color_index , 0 )"	148:24:5711:5742	226646	8	True				
ANR	226997	CallExpression	"copy_case ( gx_no_color_index , 0 )"		226646	0					
ANR	226998	Callee	copy_case		226646	0					
ANR	226999	Identifier	copy_case		226646	0					
ANR	227000	ArgumentList	gx_no_color_index		226646	1					
ANR	227001	Argument	gx_no_color_index		226646	0					
ANR	227002	Identifier	gx_no_color_index		226646	0					
ANR	227003	Argument	0		226646	1					
ANR	227004	PrimaryExpression	0		226646	0					
ANR	227005	Statement	case	149:20:5764:5767	226646	9	True				
ANR	227006	Statement	rop3_D	149:25:5769:5774	226646	10	True				
ANR	227007	Statement	|	149:32:5776:5776	226646	11	True				
ANR	227008	Label	rop3_S :	149:34:5778:5784	226646	12	True				
ANR	227009	Identifier	rop3_S		226646	0					
ANR	227010	ExpressionStatement	"copy_case ( gx_no_color_index , 1 )"	150:24:5810:5841	226646	13	True				
ANR	227011	CallExpression	"copy_case ( gx_no_color_index , 1 )"		226646	0					
ANR	227012	Callee	copy_case		226646	0					
ANR	227013	Identifier	copy_case		226646	0					
ANR	227014	ArgumentList	gx_no_color_index		226646	1					
ANR	227015	Argument	gx_no_color_index		226646	0					
ANR	227016	Identifier	gx_no_color_index		226646	0					
ANR	227017	Argument	1		226646	1					
ANR	227018	PrimaryExpression	1		226646	0					
ANR	227019	Statement	case	151:20:5863:5866	226646	14	True				
ANR	227020	Statement	rop3_D	151:25:5868:5873	226646	15	True				
ANR	227021	Statement	&	151:32:5875:5875	226646	16	True				
ANR	227022	Label	rop3_S :	151:34:5877:5883	226646	17	True				
ANR	227023	Identifier	rop3_S		226646	0					
ANR	227024	ExpressionStatement	"copy_case ( 0 , gx_no_color_index )"	152:24:5909:5940	226646	18	True				
ANR	227025	CallExpression	"copy_case ( 0 , gx_no_color_index )"		226646	0					
ANR	227026	Callee	copy_case		226646	0					
ANR	227027	Identifier	copy_case		226646	0					
ANR	227028	ArgumentList	0		226646	1					
ANR	227029	Argument	0		226646	0					
ANR	227030	PrimaryExpression	0		226646	0					
ANR	227031	Argument	gx_no_color_index		226646	1					
ANR	227032	Identifier	gx_no_color_index		226646	0					
ANR	227033	Statement	case	153:20:5962:5965	226646	19	True				
ANR	227034	Statement	rop3_D	153:25:5967:5972	226646	20	True				
ANR	227035	Statement	|	153:32:5974:5974	226646	21	True				
ANR	227036	Statement	rop3_not	153:34:5976:5983	226646	22	True				
ANR	227037	Statement	(	153:42:5984:5984	226646	23	True				
ANR	227038	Statement	rop3_S	153:43:5985:5990	226646	24	True				
ANR	227039	Statement	)	153:49:5991:5991	226646	25	True				
ANR	227040	Statement	:	153:50:5992:5992	226646	26	True				
ANR	227041	ExpressionStatement	"copy_case ( 1 , gx_no_color_index )"	154:24:6018:6049	226646	27	True				
ANR	227042	CallExpression	"copy_case ( 1 , gx_no_color_index )"		226646	0					
ANR	227043	Callee	copy_case		226646	0					
ANR	227044	Identifier	copy_case		226646	0					
ANR	227045	ArgumentList	1		226646	1					
ANR	227046	Argument	1		226646	0					
ANR	227047	PrimaryExpression	1		226646	0					
ANR	227048	Argument	gx_no_color_index		226646	1					
ANR	227049	Identifier	gx_no_color_index		226646	0					
ANR	227050	Label	default :	155:20:6071:6078	226646	28	True				
ANR	227051	Identifier	default		226646	0					
ANR	227052	ExpressionStatement		155:28:6079:6079	226646	29	True				
ANR	227053	Statement	undef	157:1:6100:6104	226646	24	True				
ANR	227054	Statement	copy_case	157:7:6106:6114	226646	25	True				
ANR	227055	ExpressionStatement	"fit_copy ( dev , sdata , sourcex , sraster , id , x , y , width , height )"	159:16:6139:6202	226646	26	True				
ANR	227056	CallExpression	"fit_copy ( dev , sdata , sourcex , sraster , id , x , y , width , height )"		226646	0					
ANR	227057	Callee	fit_copy		226646	0					
ANR	227058	Identifier	fit_copy		226646	0					
ANR	227059	ArgumentList	dev		226646	1					
ANR	227060	Argument	dev		226646	0					
ANR	227061	Identifier	dev		226646	0					
ANR	227062	Argument	sdata		226646	1					
ANR	227063	Identifier	sdata		226646	0					
ANR	227064	Argument	sourcex		226646	2					
ANR	227065	Identifier	sourcex		226646	0					
ANR	227066	Argument	sraster		226646	3					
ANR	227067	Identifier	sraster		226646	0					
ANR	227068	Argument	id		226646	4					
ANR	227069	Identifier	id		226646	0					
ANR	227070	Argument	x		226646	5					
ANR	227071	Identifier	x		226646	0					
ANR	227072	Argument	y		226646	6					
ANR	227073	Identifier	y		226646	0					
ANR	227074	Argument	width		226646	7					
ANR	227075	Identifier	width		226646	0					
ANR	227076	Argument	height		226646	8					
ANR	227077	Identifier	height		226646	0					
ANR	227078	Label	no_T :	160:14:6218:6222	226646	27	True				
ANR	227079	Identifier	no_T		226646	0					
ANR	227080	ExpressionStatement	textures = NULL	161:16:6292:6307	226646	28	True				
ANR	227081	AssignmentExpression	textures = NULL		226646	0		=			
ANR	227082	Identifier	textures		226646	0					
ANR	227083	Identifier	NULL		226646	1					
ANR	227084	BreakStatement	break ;	162:16:6325:6330	226646	29	True				
ANR	227085	Label	case rop_usage_T :	163:12:6344:6360	226646	30	True				
ANR	227086	Identifier	rop_usage_T		226646	0					
ANR	227087	IfStatement	if ( rop == rop3_T )		226646	31					
ANR	227088	Condition	rop == rop3_T	166:20:6536:6548	226646	0	True				
ANR	227089	EqualityExpression	rop == rop3_T		226646	0		==			
ANR	227090	Identifier	rop		226646	0					
ANR	227091	Identifier	rop3_T		226646	1					
ANR	227092	ExpressionStatement	"color0 = 0 , color1 = 1"	167:20:6571:6593	226646	1	True				
ANR	227093	Expression	"color0 = 0 , color1 = 1"		226646	0					
ANR	227094	AssignmentExpression	color0 = 0		226646	0		=			
ANR	227095	Identifier	color0		226646	0					
ANR	227096	PrimaryExpression	0		226646	1					
ANR	227097	AssignmentExpression	color1 = 1		226646	1		=			
ANR	227098	Identifier	color1		226646	0					
ANR	227099	PrimaryExpression	1		226646	1					
ANR	227100	ElseStatement	else		226646	0					
ANR	227101	ExpressionStatement	"color0 = 1 , color1 = 0"	169:20:6636:6658	226646	0	True				
ANR	227102	Expression	"color0 = 1 , color1 = 0"		226646	0					
ANR	227103	AssignmentExpression	color0 = 1		226646	0		=			
ANR	227104	Identifier	color0		226646	0					
ANR	227105	PrimaryExpression	1		226646	1					
ANR	227106	AssignmentExpression	color1 = 0		226646	1		=			
ANR	227107	Identifier	color1		226646	0					
ANR	227108	PrimaryExpression	0		226646	1					
ANR	227109	Label	do_tile :	170:14:6674:6681	226646	32	True				
ANR	227110	Identifier	do_tile		226646	0					
ANR	227111	ReturnStatement	"return ( * dev_proc ( dev , strip_tile_rectangle ) ) ( dev , textures , x , y , width , height , color0 , color1 , phase_x , phase_y ) ;"	170:22:6682:6839	226646	33	True				
ANR	227112	CallExpression	"( * dev_proc ( dev , strip_tile_rectangle ) ) ( dev , textures , x , y , width , height , color0 , color1 , phase_x , phase_y )"		226646	0					
ANR	227113	Callee	"* dev_proc ( dev , strip_tile_rectangle )"		226646	0					
ANR	227114	UnaryOperationExpression	"* dev_proc ( dev , strip_tile_rectangle )"		226646	0					
ANR	227115	UnaryOperator	*		226646	0					
ANR	227116	CallExpression	"dev_proc ( dev , strip_tile_rectangle )"		226646	1					
ANR	227117	Callee	dev_proc		226646	0					
ANR	227118	Identifier	dev_proc		226646	0					
ANR	227119	ArgumentList	dev		226646	1					
ANR	227120	Argument	dev		226646	0					
ANR	227121	Identifier	dev		226646	0					
ANR	227122	Argument	strip_tile_rectangle		226646	1					
ANR	227123	Identifier	strip_tile_rectangle		226646	0					
ANR	227124	ArgumentList	dev		226646	1					
ANR	227125	Argument	dev		226646	0					
ANR	227126	Identifier	dev		226646	0					
ANR	227127	Argument	textures		226646	1					
ANR	227128	Identifier	textures		226646	0					
ANR	227129	Argument	x		226646	2					
ANR	227130	Identifier	x		226646	0					
ANR	227131	Argument	y		226646	3					
ANR	227132	Identifier	y		226646	0					
ANR	227133	Argument	width		226646	4					
ANR	227134	Identifier	width		226646	0					
ANR	227135	Argument	height		226646	5					
ANR	227136	Identifier	height		226646	0					
ANR	227137	Argument	color0		226646	6					
ANR	227138	Identifier	color0		226646	0					
ANR	227139	Argument	color1		226646	7					
ANR	227140	Identifier	color1		226646	0					
ANR	227141	Argument	phase_x		226646	8					
ANR	227142	Identifier	phase_x		226646	0					
ANR	227143	Argument	phase_y		226646	9					
ANR	227144	Identifier	phase_y		226646	0					
ANR	227145	Label	case rop_usage_DT :	177:12:6941:6958	226646	34	True				
ANR	227146	Identifier	rop_usage_DT		226646	0					
ANR	227147	Statement	define	180:1:7111:7116	226646	35	True				
ANR	227148	Statement	tile_case	180:8:7118:7126	226646	36	True				
ANR	227149	Statement	(	180:17:7127:7127	226646	37	True				
ANR	227150	Statement	c0	180:18:7128:7129	226646	38	True				
ANR	227151	Statement	","	180:20:7130:7130	226646	39	True				
ANR	227152	Statement	c1	180:22:7132:7133	226646	40	True				
ANR	227153	Statement	)	180:24:7134:7134	226646	41	True				
ANR	227154	ExpressionStatement	"color0 = c0 , color1 = c1"	180:26:7136:7160	226646	42	True				
ANR	227155	Expression	"color0 = c0 , color1 = c1"		226646	0					
ANR	227156	AssignmentExpression	color0 = c0		226646	0		=			
ANR	227157	Identifier	color0		226646	0					
ANR	227158	Identifier	c0		226646	1					
ANR	227159	AssignmentExpression	color1 = c1		226646	1		=			
ANR	227160	Identifier	color1		226646	0					
ANR	227161	Identifier	c1		226646	1					
ANR	227162	GotoStatement	goto do_tile ;	180:52:7162:7174	226646	43	True				
ANR	227163	Identifier	do_tile		226646	0					
ANR	227164	SwitchStatement	switch ( ( uint ) rop )		226646	44					
ANR	227165	Condition	( uint ) rop	181:24:7200:7209	226646	0	True				
ANR	227166	CastExpression	( uint ) rop		226646	0					
ANR	227167	CastTarget	uint		226646	0					
ANR	227168	Identifier	rop		226646	1					
ANR	227169	CompoundStatement		123:36:4741:4741	226646	1					
ANR	227170	Statement	case	182:20:7270:7273	226646	0	True				
ANR	227171	Statement	rop3_D	182:25:7275:7280	226646	1	True				
ANR	227172	Statement	&	182:32:7282:7282	226646	2	True				
ANR	227173	Statement	rop3_not	182:34:7284:7291	226646	3	True				
ANR	227174	Statement	(	182:42:7292:7292	226646	4	True				
ANR	227175	Statement	rop3_T	182:43:7293:7298	226646	5	True				
ANR	227176	Statement	)	182:49:7299:7299	226646	6	True				
ANR	227177	Statement	:	182:50:7300:7300	226646	7	True				
ANR	227178	ExpressionStatement	"tile_case ( gx_no_color_index , 0 )"	183:24:7326:7357	226646	8	True				
ANR	227179	CallExpression	"tile_case ( gx_no_color_index , 0 )"		226646	0					
ANR	227180	Callee	tile_case		226646	0					
ANR	227181	Identifier	tile_case		226646	0					
ANR	227182	ArgumentList	gx_no_color_index		226646	1					
ANR	227183	Argument	gx_no_color_index		226646	0					
ANR	227184	Identifier	gx_no_color_index		226646	0					
ANR	227185	Argument	0		226646	1					
ANR	227186	PrimaryExpression	0		226646	0					
ANR	227187	Statement	case	184:20:7379:7382	226646	9	True				
ANR	227188	Statement	rop3_D	184:25:7384:7389	226646	10	True				
ANR	227189	Statement	|	184:32:7391:7391	226646	11	True				
ANR	227190	Label	rop3_T :	184:34:7393:7399	226646	12	True				
ANR	227191	Identifier	rop3_T		226646	0					
ANR	227192	ExpressionStatement	"tile_case ( gx_no_color_index , 1 )"	185:24:7425:7456	226646	13	True				
ANR	227193	CallExpression	"tile_case ( gx_no_color_index , 1 )"		226646	0					
ANR	227194	Callee	tile_case		226646	0					
ANR	227195	Identifier	tile_case		226646	0					
ANR	227196	ArgumentList	gx_no_color_index		226646	1					
ANR	227197	Argument	gx_no_color_index		226646	0					
ANR	227198	Identifier	gx_no_color_index		226646	0					
ANR	227199	Argument	1		226646	1					
ANR	227200	PrimaryExpression	1		226646	0					
ANR	227201	Statement	case	186:20:7478:7481	226646	14	True				
ANR	227202	Statement	rop3_D	186:25:7483:7488	226646	15	True				
ANR	227203	Statement	&	186:32:7490:7490	226646	16	True				
ANR	227204	Label	rop3_T :	186:34:7492:7498	226646	17	True				
ANR	227205	Identifier	rop3_T		226646	0					
ANR	227206	ExpressionStatement	"tile_case ( 0 , gx_no_color_index )"	187:24:7524:7555	226646	18	True				
ANR	227207	CallExpression	"tile_case ( 0 , gx_no_color_index )"		226646	0					
ANR	227208	Callee	tile_case		226646	0					
ANR	227209	Identifier	tile_case		226646	0					
ANR	227210	ArgumentList	0		226646	1					
ANR	227211	Argument	0		226646	0					
ANR	227212	PrimaryExpression	0		226646	0					
ANR	227213	Argument	gx_no_color_index		226646	1					
ANR	227214	Identifier	gx_no_color_index		226646	0					
ANR	227215	Statement	case	188:20:7577:7580	226646	19	True				
ANR	227216	Statement	rop3_D	188:25:7582:7587	226646	20	True				
ANR	227217	Statement	|	188:32:7589:7589	226646	21	True				
ANR	227218	Statement	rop3_not	188:34:7591:7598	226646	22	True				
ANR	227219	Statement	(	188:42:7599:7599	226646	23	True				
ANR	227220	Statement	rop3_T	188:43:7600:7605	226646	24	True				
ANR	227221	Statement	)	188:49:7606:7606	226646	25	True				
ANR	227222	Statement	:	188:50:7607:7607	226646	26	True				
ANR	227223	ExpressionStatement	"tile_case ( 1 , gx_no_color_index )"	189:24:7633:7664	226646	27	True				
ANR	227224	CallExpression	"tile_case ( 1 , gx_no_color_index )"		226646	0					
ANR	227225	Callee	tile_case		226646	0					
ANR	227226	Identifier	tile_case		226646	0					
ANR	227227	ArgumentList	1		226646	1					
ANR	227228	Argument	1		226646	0					
ANR	227229	PrimaryExpression	1		226646	0					
ANR	227230	Argument	gx_no_color_index		226646	1					
ANR	227231	Identifier	gx_no_color_index		226646	0					
ANR	227232	Label	default :	190:20:7686:7693	226646	28	True				
ANR	227233	Identifier	default		226646	0					
ANR	227234	ExpressionStatement		190:28:7694:7694	226646	29	True				
ANR	227235	Statement	undef	192:1:7715:7719	226646	45	True				
ANR	227236	Statement	tile_case	192:7:7721:7729	226646	46	True				
ANR	227237	ExpressionStatement	"fit_fill ( dev , x , y , width , height )"	194:16:7754:7788	226646	47	True				
ANR	227238	CallExpression	"fit_fill ( dev , x , y , width , height )"		226646	0					
ANR	227239	Callee	fit_fill		226646	0					
ANR	227240	Identifier	fit_fill		226646	0					
ANR	227241	ArgumentList	dev		226646	1					
ANR	227242	Argument	dev		226646	0					
ANR	227243	Identifier	dev		226646	0					
ANR	227244	Argument	x		226646	1					
ANR	227245	Identifier	x		226646	0					
ANR	227246	Argument	y		226646	2					
ANR	227247	Identifier	y		226646	0					
ANR	227248	Argument	width		226646	3					
ANR	227249	Identifier	width		226646	0					
ANR	227250	Argument	height		226646	4					
ANR	227251	Identifier	height		226646	0					
ANR	227252	ExpressionStatement	sdata = mdev -> base	196:16:7876:7894	226646	48	True				
ANR	227253	AssignmentExpression	sdata = mdev -> base		226646	0		=			
ANR	227254	Identifier	sdata		226646	0					
ANR	227255	PtrMemberAccess	mdev -> base		226646	1					
ANR	227256	Identifier	mdev		226646	0					
ANR	227257	Identifier	base		226646	1					
ANR	227258	ExpressionStatement	sourcex = x	198:16:8009:8020	226646	49	True				
ANR	227259	AssignmentExpression	sourcex = x		226646	0		=			
ANR	227260	Identifier	sourcex		226646	0					
ANR	227261	Identifier	x		226646	1					
ANR	227262	ExpressionStatement	sraster = 0	199:16:8069:8080	226646	50	True				
ANR	227263	AssignmentExpression	sraster = 0		226646	0		=			
ANR	227264	Identifier	sraster		226646	0					
ANR	227265	PrimaryExpression	0		226646	1					
ANR	227266	BreakStatement	break ;	200:16:8098:8103	226646	51	True				
ANR	227267	Label	default :	201:12:8117:8124	226646	52	True				
ANR	227268	Identifier	default		226646	0					
ANR	227269	ExpressionStatement	"fit_copy ( dev , sdata , sourcex , sraster , id , x , y , width , height )"	202:16:8165:8228	226646	53	True				
ANR	227270	CallExpression	"fit_copy ( dev , sdata , sourcex , sraster , id , x , y , width , height )"		226646	0					
ANR	227271	Callee	fit_copy		226646	0					
ANR	227272	Identifier	fit_copy		226646	0					
ANR	227273	ArgumentList	dev		226646	1					
ANR	227274	Argument	dev		226646	0					
ANR	227275	Identifier	dev		226646	0					
ANR	227276	Argument	sdata		226646	1					
ANR	227277	Identifier	sdata		226646	0					
ANR	227278	Argument	sourcex		226646	2					
ANR	227279	Identifier	sourcex		226646	0					
ANR	227280	Argument	sraster		226646	3					
ANR	227281	Identifier	sraster		226646	0					
ANR	227282	Argument	id		226646	4					
ANR	227283	Identifier	id		226646	0					
ANR	227284	Argument	x		226646	5					
ANR	227285	Identifier	x		226646	0					
ANR	227286	Argument	y		226646	6					
ANR	227287	Identifier	y		226646	0					
ANR	227288	Argument	width		226646	7					
ANR	227289	Identifier	width		226646	0					
ANR	227290	Argument	height		226646	8					
ANR	227291	Identifier	height		226646	0					
ANR	227292	ExpressionStatement	"if_debug1m ( 'b' , dev -> memory , ""final rop=0x%x\\n"" , rop )"	207:4:8264:8317	226646	12	True				
ANR	227293	CallExpression	"if_debug1m ( 'b' , dev -> memory , ""final rop=0x%x\\n"" , rop )"		226646	0					
ANR	227294	Callee	if_debug1m		226646	0					
ANR	227295	Identifier	if_debug1m		226646	0					
ANR	227296	ArgumentList	'b'		226646	1					
ANR	227297	Argument	'b'		226646	0					
ANR	227298	PrimaryExpression	'b'		226646	0					
ANR	227299	Argument	dev -> memory		226646	1					
ANR	227300	PtrMemberAccess	dev -> memory		226646	0					
ANR	227301	Identifier	dev		226646	0					
ANR	227302	Identifier	memory		226646	1					
ANR	227303	Argument	"""final rop=0x%x\\n"""		226646	2					
ANR	227304	PrimaryExpression	"""final rop=0x%x\\n"""		226646	0					
ANR	227305	Argument	rop		226646	3					
ANR	227306	Identifier	rop		226646	0					
ANR	227307	ExpressionStatement	line_count = height	211:4:8369:8388	226646	13	True				
ANR	227308	AssignmentExpression	line_count = height		226646	0		=			
ANR	227309	Identifier	line_count		226646	0					
ANR	227310	Identifier	height		226646	1					
ANR	227311	ExpressionStatement	srow = sdata	212:4:8394:8406	226646	14	True				
ANR	227312	AssignmentExpression	srow = sdata		226646	0		=			
ANR	227313	Identifier	srow		226646	0					
ANR	227314	Identifier	sdata		226646	1					
ANR	227315	ExpressionStatement	"drow = scan_line_base ( mdev , y )"	213:4:8412:8442	226646	15	True				
ANR	227316	AssignmentExpression	"drow = scan_line_base ( mdev , y )"		226646	0		=			
ANR	227317	Identifier	drow		226646	0					
ANR	227318	CallExpression	"scan_line_base ( mdev , y )"		226646	1					
ANR	227319	Callee	scan_line_base		226646	0					
ANR	227320	Identifier	scan_line_base		226646	0					
ANR	227321	ArgumentList	mdev		226646	1					
ANR	227322	Argument	mdev		226646	0					
ANR	227323	Identifier	mdev		226646	0					
ANR	227324	Argument	y		226646	1					
ANR	227325	Identifier	y		226646	0					
ANR	227326	ExpressionStatement	traster = ( textures ? textures -> raster : 0 )	214:4:8448:8491	226646	16	True				
ANR	227327	AssignmentExpression	traster = ( textures ? textures -> raster : 0 )		226646	0		=			
ANR	227328	Identifier	traster		226646	0					
ANR	227329	ConditionalExpression	textures ? textures -> raster : 0		226646	1					
ANR	227330	Condition	textures		226646	0					
ANR	227331	Identifier	textures		226646	0					
ANR	227332	PtrMemberAccess	textures -> raster		226646	1					
ANR	227333	Identifier	textures		226646	0					
ANR	227334	Identifier	raster		226646	1					
ANR	227335	PrimaryExpression	0		226646	2					
ANR	227336	ExpressionStatement	ty = y + phase_y	215:4:8497:8513	226646	17	True				
ANR	227337	AssignmentExpression	ty = y + phase_y		226646	0		=			
ANR	227338	Identifier	ty		226646	0					
ANR	227339	AdditiveExpression	y + phase_y		226646	1		+			
ANR	227340	Identifier	y		226646	0					
ANR	227341	Identifier	phase_y		226646	1					
ANR	227342	IfStatement	if ( textures == NULL )		226646	18					
ANR	227343	Condition	textures == NULL	217:8:8524:8539	226646	0	True				
ANR	227344	EqualityExpression	textures == NULL		226646	0		==			
ANR	227345	Identifier	textures		226646	0					
ANR	227346	Identifier	NULL		226646	1					
ANR	227347	CompoundStatement		161:8:6107:6129	226646	1					
ANR	227348	IdentifierDeclStatement	int dbit = x & 7 ;	218:8:8552:8568	226646	0	True				
ANR	227349	IdentifierDecl	dbit = x & 7		226646	0					
ANR	227350	IdentifierDeclType	int		226646	0					
ANR	227351	Identifier	dbit		226646	1					
ANR	227352	AssignmentExpression	dbit = x & 7		226646	2		=			
ANR	227353	Identifier	dbit		226646	0					
ANR	227354	BitAndExpression	x & 7		226646	1		&			
ANR	227355	Identifier	x		226646	0					
ANR	227356	PrimaryExpression	7		226646	1					
ANR	227357	IdentifierDeclStatement	int sbit = sourcex & 7 ;	219:8:8578:8600	226646	1	True				
ANR	227358	IdentifierDecl	sbit = sourcex & 7		226646	0					
ANR	227359	IdentifierDeclType	int		226646	0					
ANR	227360	Identifier	sbit		226646	1					
ANR	227361	AssignmentExpression	sbit = sourcex & 7		226646	2		=			
ANR	227362	Identifier	sbit		226646	0					
ANR	227363	BitAndExpression	sourcex & 7		226646	1		&			
ANR	227364	Identifier	sourcex		226646	0					
ANR	227365	PrimaryExpression	7		226646	1					
ANR	227366	ExpressionStatement	drow += ( x >> 3 )	220:8:8610:8624	226646	2	True				
ANR	227367	AssignmentExpression	drow += ( x >> 3 )		226646	0		+=			
ANR	227368	Identifier	drow		226646	0					
ANR	227369	ShiftExpression	x >> 3		226646	1		>>			
ANR	227370	Identifier	x		226646	0					
ANR	227371	PrimaryExpression	3		226646	1					
ANR	227372	ExpressionStatement	srow += ( sourcex >> 3 )	221:8:8634:8654	226646	3	True				
ANR	227373	AssignmentExpression	srow += ( sourcex >> 3 )		226646	0		+=			
ANR	227374	Identifier	srow		226646	0					
ANR	227375	ShiftExpression	sourcex >> 3		226646	1		>>			
ANR	227376	Identifier	sourcex		226646	0					
ANR	227377	PrimaryExpression	3		226646	1					
ANR	227378	IfStatement	if ( width < 32 )		226646	4					
ANR	227379	Condition	width < 32	222:12:8668:8677	226646	0	True				
ANR	227380	RelationalExpression	width < 32		226646	0		<			
ANR	227381	Identifier	width		226646	0					
ANR	227382	PrimaryExpression	32		226646	1					
ANR	227383	CompoundStatement		170:12:6485:6502	226646	1					
ANR	227384	IdentifierDeclStatement	int sskew = sbit - dbit ;	226:12:8864:8887	226646	0	True				
ANR	227385	IdentifierDecl	sskew = sbit - dbit		226646	0					
ANR	227386	IdentifierDeclType	int		226646	0					
ANR	227387	Identifier	sskew		226646	1					
ANR	227388	AssignmentExpression	sskew = sbit - dbit		226646	2		=			
ANR	227389	Identifier	sskew		226646	0					
ANR	227390	AdditiveExpression	sbit - dbit		226646	1		-			
ANR	227391	Identifier	sbit		226646	0					
ANR	227392	Identifier	dbit		226646	1					
ANR	227393	IdentifierDeclStatement	const rop_proc proc = rop_proc_table [ rop ] ;	227:12:8901:8942	226646	1	True				
ANR	227394	IdentifierDecl	proc = rop_proc_table [ rop ]		226646	0					
ANR	227395	IdentifierDeclType	const rop_proc		226646	0					
ANR	227396	Identifier	proc		226646	1					
ANR	227397	AssignmentExpression	proc = rop_proc_table [ rop ]		226646	2		=			
ANR	227398	Identifier	proc		226646	0					
ANR	227399	ArrayIndexing	rop_proc_table [ rop ]		226646	1					
ANR	227400	Identifier	rop_proc_table		226646	0					
ANR	227401	Identifier	rop		226646	1					
ANR	227402	IdentifierDeclStatement	"byte lmask , rmask ;"	228:12:8956:8973	226646	2	True				
ANR	227403	IdentifierDecl	lmask		226646	0					
ANR	227404	IdentifierDeclType	byte		226646	0					
ANR	227405	Identifier	lmask		226646	1					
ANR	227406	IdentifierDecl	rmask		226646	1					
ANR	227407	IdentifierDeclType	byte		226646	0					
ANR	227408	Identifier	rmask		226646	1					
ANR	227409	ExpressionStatement	lmask = 0xff >> dbit	230:12:8988:9008	226646	3	True				
ANR	227410	AssignmentExpression	lmask = 0xff >> dbit		226646	0		=			
ANR	227411	Identifier	lmask		226646	0					
ANR	227412	ShiftExpression	0xff >> dbit		226646	1		>>			
ANR	227413	PrimaryExpression	0xff		226646	0					
ANR	227414	Identifier	dbit		226646	1					
ANR	227415	ExpressionStatement	width += dbit	231:12:9022:9035	226646	4	True				
ANR	227416	AssignmentExpression	width += dbit		226646	0		+=			
ANR	227417	Identifier	width		226646	0					
ANR	227418	Identifier	dbit		226646	1					
ANR	227419	ExpressionStatement	rmask = 0xff << ( ~ ( width - 1 ) & 7 )	232:12:9049:9083	226646	5	True				
ANR	227420	AssignmentExpression	rmask = 0xff << ( ~ ( width - 1 ) & 7 )		226646	0		=			
ANR	227421	Identifier	rmask		226646	0					
ANR	227422	ShiftExpression	0xff << ( ~ ( width - 1 ) & 7 )		226646	1		<<			
ANR	227423	PrimaryExpression	0xff		226646	0					
ANR	227424	BitAndExpression	~ ( width - 1 ) & 7		226646	1		&			
ANR	227425	UnaryOperationExpression	~ ( width - 1 )		226646	0					
ANR	227426	UnaryOperator	~		226646	0					
ANR	227427	AdditiveExpression	width - 1		226646	1		-			
ANR	227428	Identifier	width		226646	0					
ANR	227429	PrimaryExpression	1		226646	1					
ANR	227430	PrimaryExpression	7		226646	1					
ANR	227431	IfStatement	if ( sskew < 0 )		226646	6					
ANR	227432	Condition	sskew < 0	233:16:9101:9109	226646	0	True				
ANR	227433	RelationalExpression	sskew < 0		226646	0		<			
ANR	227434	Identifier	sskew		226646	0					
ANR	227435	PrimaryExpression	0		226646	1					
ANR	227436	ExpressionStatement	"-- srow , sskew += 8"	234:16:9128:9146	226646	1	True				
ANR	227437	Expression	"-- srow , sskew += 8"		226646	0					
ANR	227438	UnaryExpression	-- srow		226646	0					
ANR	227439	IncDec	--		226646	0					
ANR	227440	Identifier	srow		226646	1					
ANR	227441	AssignmentExpression	sskew += 8		226646	1		+=			
ANR	227442	Identifier	sskew		226646	0					
ANR	227443	PrimaryExpression	8		226646	1					
ANR	227444	IfStatement	if ( width < 8 )		226646	7					
ANR	227445	Condition	width < 8	235:16:9164:9172	226646	0	True				
ANR	227446	RelationalExpression	width < 8		226646	0		<			
ANR	227447	Identifier	width		226646	0					
ANR	227448	PrimaryExpression	8		226646	1					
ANR	227449	ExpressionStatement	lmask &= rmask	236:16:9191:9205	226646	1	True				
ANR	227450	AssignmentExpression	lmask &= rmask		226646	0		&=			
ANR	227451	Identifier	lmask		226646	0					
ANR	227452	Identifier	rmask		226646	1					
ANR	227453	ForStatement	"for ( ; line_count -- > 0 ; drow += draster , srow += sraster )"		226646	8					
ANR	227454	Condition	line_count -- > 0	237:19:9226:9241	226646	0	True				
ANR	227455	RelationalExpression	line_count -- > 0		226646	0		>			
ANR	227456	PostIncDecOperationExpression	line_count --		226646	0					
ANR	227457	Identifier	line_count		226646	0					
ANR	227458	IncDec	--		226646	1					
ANR	227459	PrimaryExpression	0		226646	1					
ANR	227460	Expression	"drow += draster , srow += sraster"	237:37:9244:9275	226646	1	True				
ANR	227461	AssignmentExpression	drow += draster		226646	0		+=			
ANR	227462	Identifier	drow		226646	0					
ANR	227463	Identifier	draster		226646	1					
ANR	227464	AssignmentExpression	srow += sraster		226646	1		+=			
ANR	227465	Identifier	srow		226646	0					
ANR	227466	Identifier	sraster		226646	1					
ANR	227467	CompoundStatement		182:16:6901:6919	226646	2					
ANR	227468	IdentifierDeclStatement	byte * dptr = drow ;	238:16:9296:9313	226646	0	True				
ANR	227469	IdentifierDecl	* dptr = drow		226646	0					
ANR	227470	IdentifierDeclType	byte *		226646	0					
ANR	227471	Identifier	dptr		226646	1					
ANR	227472	AssignmentExpression	* dptr = drow		226646	2		=			
ANR	227473	Identifier	drow		226646	0					
ANR	227474	Identifier	drow		226646	1					
ANR	227475	IdentifierDeclStatement	const byte * sptr = srow ;	239:16:9331:9354	226646	1	True				
ANR	227476	IdentifierDecl	* sptr = srow		226646	0					
ANR	227477	IdentifierDeclType	const byte *		226646	0					
ANR	227478	Identifier	sptr		226646	1					
ANR	227479	AssignmentExpression	* sptr = srow		226646	2		=			
ANR	227480	Identifier	srow		226646	0					
ANR	227481	Identifier	srow		226646	1					
ANR	227482	IdentifierDeclStatement	int left = width - 8 ;	240:16:9372:9390	226646	2	True				
ANR	227483	IdentifierDecl	left = width - 8		226646	0					
ANR	227484	IdentifierDeclType	int		226646	0					
ANR	227485	Identifier	left		226646	1					
ANR	227486	AssignmentExpression	left = width - 8		226646	2		=			
ANR	227487	Identifier	left		226646	0					
ANR	227488	AdditiveExpression	width - 8		226646	1		-			
ANR	227489	Identifier	width		226646	0					
ANR	227490	PrimaryExpression	8		226646	1					
ANR	227491	Statement	define	241:1:9393:9398	226646	3	True				
ANR	227492	Statement	fetch1	241:8:9400:9405	226646	4	True				
ANR	227493	Statement	(	241:14:9406:9406	226646	5	True				
ANR	227494	Statement	ptr	241:15:9407:9409	226646	6	True				
ANR	227495	Statement	","	241:18:9410:9410	226646	7	True				
ANR	227496	Statement	skew	241:20:9412:9415	226646	8	True				
ANR	227497	Statement	)	241:24:9416:9416	226646	9	True				
ANR	227498	Statement	(	242:2:9421:9421	226646	10	True				
ANR	227499	Statement	skew	242:3:9422:9425	226646	11	True				
ANR	227500	Statement	?	242:8:9427:9427	226646	12	True				
ANR	227501	Statement	(	242:10:9429:9429	226646	13	True				
ANR	227502	Statement	ptr	242:11:9430:9432	226646	14	True				
ANR	227503	Statement	[	242:14:9433:9433	226646	15	True				
ANR	227504	Statement	0	242:15:9434:9434	226646	16	True				
ANR	227505	Statement	]	242:16:9435:9435	226646	17	True				
ANR	227506	Statement	<<	242:18:9437:9438	226646	18	True				
ANR	227507	Statement	skew	242:21:9440:9443	226646	19	True				
ANR	227508	Statement	)	242:25:9444:9444	226646	20	True				
ANR	227509	Statement	+	242:27:9446:9446	226646	21	True				
ANR	227510	Statement	(	242:29:9448:9448	226646	22	True				
ANR	227511	Statement	ptr	242:30:9449:9451	226646	23	True				
ANR	227512	Statement	[	242:33:9452:9452	226646	24	True				
ANR	227513	Statement	1	242:34:9453:9453	226646	25	True				
ANR	227514	Statement	]	242:35:9454:9454	226646	26	True				
ANR	227515	Statement	>>	242:37:9456:9457	226646	27	True				
ANR	227516	Statement	(	242:40:9459:9459	226646	28	True				
ANR	227517	Statement	8	242:41:9460:9460	226646	29	True				
ANR	227518	Statement	-	242:43:9462:9462	226646	30	True				
ANR	227519	Statement	skew	242:45:9464:9467	226646	31	True				
ANR	227520	Statement	)	242:49:9468:9468	226646	32	True				
ANR	227521	Statement	)	242:50:9469:9469	226646	33	True				
ANR	227522	Statement	:	242:52:9471:9471	226646	34	True				
ANR	227523	Statement	*	242:54:9473:9473	226646	35	True				
ANR	227524	Statement	ptr	242:55:9474:9476	226646	36	True				
ANR	227525	Statement	)	242:58:9477:9477	226646	37	True				
ANR	227526	CompoundStatement		189:20:7181:7217	226646	38					
ANR	227527	IdentifierDeclStatement	byte dbyte = * dptr ;	245:20:9558:9576	226646	0	True				
ANR	227528	IdentifierDecl	dbyte = * dptr		226646	0					
ANR	227529	IdentifierDeclType	byte		226646	0					
ANR	227530	Identifier	dbyte		226646	1					
ANR	227531	AssignmentExpression	dbyte = * dptr		226646	2		=			
ANR	227532	Identifier	dbyte		226646	0					
ANR	227533	UnaryOperationExpression	* dptr		226646	1					
ANR	227534	UnaryOperator	*		226646	0					
ANR	227535	Identifier	dptr		226646	1					
ANR	227536	IdentifierDeclStatement	"byte sbyte = fetch1 ( sptr , sskew ) ;"	246:20:9598:9630	226646	1	True				
ANR	227537	IdentifierDecl	"sbyte = fetch1 ( sptr , sskew )"		226646	0					
ANR	227538	IdentifierDeclType	byte		226646	0					
ANR	227539	Identifier	sbyte		226646	1					
ANR	227540	AssignmentExpression	"sbyte = fetch1 ( sptr , sskew )"		226646	2		=			
ANR	227541	Identifier	sbyte		226646	0					
ANR	227542	CallExpression	"fetch1 ( sptr , sskew )"		226646	1					
ANR	227543	Callee	fetch1		226646	0					
ANR	227544	Identifier	fetch1		226646	0					
ANR	227545	ArgumentList	sptr		226646	1					
ANR	227546	Argument	sptr		226646	0					
ANR	227547	Identifier	sptr		226646	0					
ANR	227548	Argument	sskew		226646	1					
ANR	227549	Identifier	sskew		226646	0					
ANR	227550	IdentifierDeclStatement	"byte result = ( * proc ) ( dbyte , sbyte , 0 ) ;"	247:20:9652:9688	226646	2	True				
ANR	227551	IdentifierDecl	"result = ( * proc ) ( dbyte , sbyte , 0 )"		226646	0					
ANR	227552	IdentifierDeclType	byte		226646	0					
ANR	227553	Identifier	result		226646	1					
ANR	227554	AssignmentExpression	"result = ( * proc ) ( dbyte , sbyte , 0 )"		226646	2		=			
ANR	227555	Identifier	result		226646	0					
ANR	227556	CallExpression	"( * proc ) ( dbyte , sbyte , 0 )"		226646	1					
ANR	227557	Callee	* proc		226646	0					
ANR	227558	UnaryOperationExpression	* proc		226646	0					
ANR	227559	UnaryOperator	*		226646	0					
ANR	227560	Identifier	proc		226646	1					
ANR	227561	ArgumentList	dbyte		226646	1					
ANR	227562	Argument	dbyte		226646	0					
ANR	227563	Identifier	dbyte		226646	0					
ANR	227564	Argument	sbyte		226646	1					
ANR	227565	Identifier	sbyte		226646	0					
ANR	227566	Argument	0		226646	2					
ANR	227567	PrimaryExpression	0		226646	0					
ANR	227568	ExpressionStatement	sptr ++	248:20:9710:9716	226646	3	True				
ANR	227569	PostIncDecOperationExpression	sptr ++		226646	0					
ANR	227570	Identifier	sptr		226646	0					
ANR	227571	IncDec	++		226646	1					
ANR	227572	ExpressionStatement	* dptr ++ = ( result & lmask ) | ( dbyte & ~lmask )	249:20:9738:9783	226646	4	True				
ANR	227573	AssignmentExpression	* dptr ++ = ( result & lmask ) | ( dbyte & ~lmask )		226646	0		=			
ANR	227574	UnaryOperationExpression	* dptr ++		226646	0					
ANR	227575	UnaryOperator	*		226646	0					
ANR	227576	PostIncDecOperationExpression	dptr ++		226646	1					
ANR	227577	Identifier	dptr		226646	0					
ANR	227578	IncDec	++		226646	1					
ANR	227579	InclusiveOrExpression	( result & lmask ) | ( dbyte & ~lmask )		226646	1		|			
ANR	227580	BitAndExpression	result & lmask		226646	0		&			
ANR	227581	Identifier	result		226646	0					
ANR	227582	Identifier	lmask		226646	1					
ANR	227583	BitAndExpression	dbyte & ~lmask		226646	1		&			
ANR	227584	Identifier	dbyte		226646	0					
ANR	227585	Identifier	~lmask		226646	1					
ANR	227586	IfStatement	if ( left <= 0 )		226646	39					
ANR	227587	Condition	left <= 0	251:20:9823:9831	226646	0	True				
ANR	227588	RelationalExpression	left <= 0		226646	0		<=			
ANR	227589	Identifier	left		226646	0					
ANR	227590	PrimaryExpression	0		226646	1					
ANR	227591	ContinueStatement	continue ;	252:20:9887:9895	226646	1	True				
ANR	227592	ExpressionStatement	left -= 8	253:16:9913:9922	226646	40	True				
ANR	227593	AssignmentExpression	left -= 8		226646	0		-=			
ANR	227594	Identifier	left		226646	0					
ANR	227595	PrimaryExpression	8		226646	1					
ANR	227596	WhileStatement	while ( left > 0 )		226646	41					
ANR	227597	Condition	left > 0	254:23:9975:9982	226646	0	True				
ANR	227598	RelationalExpression	left > 0		226646	0		>			
ANR	227599	Identifier	left		226646	0					
ANR	227600	PrimaryExpression	0		226646	1					
ANR	227601	CompoundStatement		199:20:7592:7624	226646	1					
ANR	227602	IdentifierDeclStatement	byte dbyte = * dptr ;	256:20:10023:10041	226646	0	True				
ANR	227603	IdentifierDecl	dbyte = * dptr		226646	0					
ANR	227604	IdentifierDeclType	byte		226646	0					
ANR	227605	Identifier	dbyte		226646	1					
ANR	227606	AssignmentExpression	dbyte = * dptr		226646	2		=			
ANR	227607	Identifier	dbyte		226646	0					
ANR	227608	UnaryOperationExpression	* dptr		226646	1					
ANR	227609	UnaryOperator	*		226646	0					
ANR	227610	Identifier	dptr		226646	1					
ANR	227611	IdentifierDeclStatement	"byte sbyte = fetch1 ( sptr , sskew ) ;"	257:20:10063:10095	226646	1	True				
ANR	227612	IdentifierDecl	"sbyte = fetch1 ( sptr , sskew )"		226646	0					
ANR	227613	IdentifierDeclType	byte		226646	0					
ANR	227614	Identifier	sbyte		226646	1					
ANR	227615	AssignmentExpression	"sbyte = fetch1 ( sptr , sskew )"		226646	2		=			
ANR	227616	Identifier	sbyte		226646	0					
ANR	227617	CallExpression	"fetch1 ( sptr , sskew )"		226646	1					
ANR	227618	Callee	fetch1		226646	0					
ANR	227619	Identifier	fetch1		226646	0					
ANR	227620	ArgumentList	sptr		226646	1					
ANR	227621	Argument	sptr		226646	0					
ANR	227622	Identifier	sptr		226646	0					
ANR	227623	Argument	sskew		226646	1					
ANR	227624	Identifier	sskew		226646	0					
ANR	227625	ExpressionStatement	sptr ++	258:20:10117:10123	226646	2	True				
ANR	227626	PostIncDecOperationExpression	sptr ++		226646	0					
ANR	227627	Identifier	sptr		226646	0					
ANR	227628	IncDec	++		226646	1					
ANR	227629	ExpressionStatement	"* dptr ++ = ( * proc ) ( dbyte , sbyte , 0 )"	259:20:10145:10177	226646	3	True				
ANR	227630	AssignmentExpression	"* dptr ++ = ( * proc ) ( dbyte , sbyte , 0 )"		226646	0		=			
ANR	227631	UnaryOperationExpression	* dptr ++		226646	0					
ANR	227632	UnaryOperator	*		226646	0					
ANR	227633	PostIncDecOperationExpression	dptr ++		226646	1					
ANR	227634	Identifier	dptr		226646	0					
ANR	227635	IncDec	++		226646	1					
ANR	227636	CallExpression	"( * proc ) ( dbyte , sbyte , 0 )"		226646	1					
ANR	227637	Callee	* proc		226646	0					
ANR	227638	UnaryOperationExpression	* proc		226646	0					
ANR	227639	UnaryOperator	*		226646	0					
ANR	227640	Identifier	proc		226646	1					
ANR	227641	ArgumentList	dbyte		226646	1					
ANR	227642	Argument	dbyte		226646	0					
ANR	227643	Identifier	dbyte		226646	0					
ANR	227644	Argument	sbyte		226646	1					
ANR	227645	Identifier	sbyte		226646	0					
ANR	227646	Argument	0		226646	2					
ANR	227647	PrimaryExpression	0		226646	0					
ANR	227648	ExpressionStatement	left -= 8	260:20:10199:10208	226646	4	True				
ANR	227649	AssignmentExpression	left -= 8		226646	0		-=			
ANR	227650	Identifier	left		226646	0					
ANR	227651	PrimaryExpression	8		226646	1					
ANR	227652	ExpressionStatement	left += 8	262:16:10244:10253	226646	42	True				
ANR	227653	AssignmentExpression	left += 8		226646	0		+=			
ANR	227654	Identifier	left		226646	0					
ANR	227655	PrimaryExpression	8		226646	1					
ANR	227656	CompoundStatement		208:20:7944:7980	226646	43					
ANR	227657	IdentifierDeclStatement	byte dbyte = * dptr ;	264:20:10321:10339	226646	0	True				
ANR	227658	IdentifierDecl	dbyte = * dptr		226646	0					
ANR	227659	IdentifierDeclType	byte		226646	0					
ANR	227660	Identifier	dbyte		226646	1					
ANR	227661	AssignmentExpression	dbyte = * dptr		226646	2		=			
ANR	227662	Identifier	dbyte		226646	0					
ANR	227663	UnaryOperationExpression	* dptr		226646	1					
ANR	227664	UnaryOperator	*		226646	0					
ANR	227665	Identifier	dptr		226646	1					
ANR	227666	IdentifierDeclStatement	"byte sbyte = fetch1 ( sptr , sskew ) ;"	265:20:10361:10393	226646	1	True				
ANR	227667	IdentifierDecl	"sbyte = fetch1 ( sptr , sskew )"		226646	0					
ANR	227668	IdentifierDeclType	byte		226646	0					
ANR	227669	Identifier	sbyte		226646	1					
ANR	227670	AssignmentExpression	"sbyte = fetch1 ( sptr , sskew )"		226646	2		=			
ANR	227671	Identifier	sbyte		226646	0					
ANR	227672	CallExpression	"fetch1 ( sptr , sskew )"		226646	1					
ANR	227673	Callee	fetch1		226646	0					
ANR	227674	Identifier	fetch1		226646	0					
ANR	227675	ArgumentList	sptr		226646	1					
ANR	227676	Argument	sptr		226646	0					
ANR	227677	Identifier	sptr		226646	0					
ANR	227678	Argument	sskew		226646	1					
ANR	227679	Identifier	sskew		226646	0					
ANR	227680	IdentifierDeclStatement	"byte result = ( * proc ) ( dbyte , sbyte , 0 ) ;"	266:20:10415:10451	226646	2	True				
ANR	227681	IdentifierDecl	"result = ( * proc ) ( dbyte , sbyte , 0 )"		226646	0					
ANR	227682	IdentifierDeclType	byte		226646	0					
ANR	227683	Identifier	result		226646	1					
ANR	227684	AssignmentExpression	"result = ( * proc ) ( dbyte , sbyte , 0 )"		226646	2		=			
ANR	227685	Identifier	result		226646	0					
ANR	227686	CallExpression	"( * proc ) ( dbyte , sbyte , 0 )"		226646	1					
ANR	227687	Callee	* proc		226646	0					
ANR	227688	UnaryOperationExpression	* proc		226646	0					
ANR	227689	UnaryOperator	*		226646	0					
ANR	227690	Identifier	proc		226646	1					
ANR	227691	ArgumentList	dbyte		226646	1					
ANR	227692	Argument	dbyte		226646	0					
ANR	227693	Identifier	dbyte		226646	0					
ANR	227694	Argument	sbyte		226646	1					
ANR	227695	Identifier	sbyte		226646	0					
ANR	227696	Argument	0		226646	2					
ANR	227697	PrimaryExpression	0		226646	0					
ANR	227698	ExpressionStatement	* dptr = ( result & rmask ) | ( dbyte & ~rmask )	267:20:10473:10516	226646	3	True				
ANR	227699	AssignmentExpression	* dptr = ( result & rmask ) | ( dbyte & ~rmask )		226646	0		=			
ANR	227700	UnaryOperationExpression	* dptr		226646	0					
ANR	227701	UnaryOperator	*		226646	0					
ANR	227702	Identifier	dptr		226646	1					
ANR	227703	InclusiveOrExpression	( result & rmask ) | ( dbyte & ~rmask )		226646	1		|			
ANR	227704	BitAndExpression	result & rmask		226646	0		&			
ANR	227705	Identifier	result		226646	0					
ANR	227706	Identifier	rmask		226646	1					
ANR	227707	BitAndExpression	dbyte & ~rmask		226646	1		&			
ANR	227708	Identifier	dbyte		226646	0					
ANR	227709	Identifier	~rmask		226646	1					
ANR	227710	Statement	undef	269:1:10537:10541	226646	44	True				
ANR	227711	Statement	fetch1	269:7:10543:10548	226646	45	True				
ANR	227712	ElseStatement	else		226646	0					
ANR	227713	CompoundStatement		213:15:8108:8108	226646	0					
ANR	227714	IfStatement	"if ( rop_get_run_op ( & ropper , rop , 1 , 0 ) )"		226646	0					
ANR	227715	Condition	"rop_get_run_op ( & ropper , rop , 1 , 0 )"	273:16:10627:10660	226646	0	True				
ANR	227716	CallExpression	"rop_get_run_op ( & ropper , rop , 1 , 0 )"		226646	0					
ANR	227717	Callee	rop_get_run_op		226646	0					
ANR	227718	Identifier	rop_get_run_op		226646	0					
ANR	227719	ArgumentList	& ropper		226646	1					
ANR	227720	Argument	& ropper		226646	0					
ANR	227721	UnaryOperationExpression	& ropper		226646	0					
ANR	227722	UnaryOperator	&		226646	0					
ANR	227723	Identifier	ropper		226646	1					
ANR	227724	Argument	rop		226646	1					
ANR	227725	Identifier	rop		226646	0					
ANR	227726	Argument	1		226646	2					
ANR	227727	PrimaryExpression	1		226646	0					
ANR	227728	Argument	0		226646	3					
ANR	227729	PrimaryExpression	0		226646	0					
ANR	227730	CompoundStatement		215:52:8192:8192	226646	1					
ANR	227731	ForStatement	"for ( ; line_count -- > 0 ; drow += draster , srow += sraster )"		226646	0					
ANR	227732	Condition	line_count -- > 0	275:23:10732:10747	226646	0	True				
ANR	227733	RelationalExpression	line_count -- > 0		226646	0		>			
ANR	227734	PostIncDecOperationExpression	line_count --		226646	0					
ANR	227735	Identifier	line_count		226646	0					
ANR	227736	IncDec	--		226646	1					
ANR	227737	PrimaryExpression	0		226646	1					
ANR	227738	Expression	"drow += draster , srow += sraster"	275:41:10750:10781	226646	1	True				
ANR	227739	AssignmentExpression	drow += draster		226646	0		+=			
ANR	227740	Identifier	drow		226646	0					
ANR	227741	Identifier	draster		226646	1					
ANR	227742	AssignmentExpression	srow += sraster		226646	1		+=			
ANR	227743	Identifier	srow		226646	0					
ANR	227744	Identifier	sraster		226646	1					
ANR	227745	CompoundStatement		217:75:8313:8313	226646	2					
ANR	227746	ExpressionStatement	"rop_set_s_bitmap_subbyte ( & ropper , srow , sbit )"	276:20:10806:10851	226646	0	True				
ANR	227747	CallExpression	"rop_set_s_bitmap_subbyte ( & ropper , srow , sbit )"		226646	0					
ANR	227748	Callee	rop_set_s_bitmap_subbyte		226646	0					
ANR	227749	Identifier	rop_set_s_bitmap_subbyte		226646	0					
ANR	227750	ArgumentList	& ropper		226646	1					
ANR	227751	Argument	& ropper		226646	0					
ANR	227752	UnaryOperationExpression	& ropper		226646	0					
ANR	227753	UnaryOperator	&		226646	0					
ANR	227754	Identifier	ropper		226646	1					
ANR	227755	Argument	srow		226646	1					
ANR	227756	Identifier	srow		226646	0					
ANR	227757	Argument	sbit		226646	2					
ANR	227758	Identifier	sbit		226646	0					
ANR	227759	ExpressionStatement	"rop_run_subbyte ( & ropper , drow , dbit , width )"	277:20:10873:10916	226646	1	True				
ANR	227760	CallExpression	"rop_run_subbyte ( & ropper , drow , dbit , width )"		226646	0					
ANR	227761	Callee	rop_run_subbyte		226646	0					
ANR	227762	Identifier	rop_run_subbyte		226646	0					
ANR	227763	ArgumentList	& ropper		226646	1					
ANR	227764	Argument	& ropper		226646	0					
ANR	227765	UnaryOperationExpression	& ropper		226646	0					
ANR	227766	UnaryOperator	&		226646	0					
ANR	227767	Identifier	ropper		226646	1					
ANR	227768	Argument	drow		226646	1					
ANR	227769	Identifier	drow		226646	0					
ANR	227770	Argument	dbit		226646	2					
ANR	227771	Identifier	dbit		226646	0					
ANR	227772	Argument	width		226646	3					
ANR	227773	Identifier	width		226646	0					
ANR	227774	ExpressionStatement	rop_release_run_op ( & ropper )	279:16:10952:10979	226646	1	True				
ANR	227775	CallExpression	rop_release_run_op ( & ropper )		226646	0					
ANR	227776	Callee	rop_release_run_op		226646	0					
ANR	227777	Identifier	rop_release_run_op		226646	0					
ANR	227778	ArgumentList	& ropper		226646	1					
ANR	227779	Argument	& ropper		226646	0					
ANR	227780	UnaryOperationExpression	& ropper		226646	0					
ANR	227781	UnaryOperator	&		226646	0					
ANR	227782	Identifier	ropper		226646	1					
ANR	227783	ElseStatement	else		226646	0					
ANR	227784	IfStatement	if ( textures -> rep_width > 32 )		226646	0					
ANR	227785	Condition	textures -> rep_width > 32	282:15:11020:11043	226646	0	True				
ANR	227786	RelationalExpression	textures -> rep_width > 32		226646	0		>			
ANR	227787	PtrMemberAccess	textures -> rep_width		226646	0					
ANR	227788	Identifier	textures		226646	0					
ANR	227789	Identifier	rep_width		226646	1					
ANR	227790	PrimaryExpression	32		226646	1					
ANR	227791	CompoundStatement		224:41:8575:8575	226646	1					
ANR	227792	IfStatement	"if ( rop_get_run_op ( & ropper , rop , 1 , 0 ) )"		226646	0					
ANR	227793	Condition	"rop_get_run_op ( & ropper , rop , 1 , 0 )"	284:12:11086:11119	226646	0	True				
ANR	227794	CallExpression	"rop_get_run_op ( & ropper , rop , 1 , 0 )"		226646	0					
ANR	227795	Callee	rop_get_run_op		226646	0					
ANR	227796	Identifier	rop_get_run_op		226646	0					
ANR	227797	ArgumentList	& ropper		226646	1					
ANR	227798	Argument	& ropper		226646	0					
ANR	227799	UnaryOperationExpression	& ropper		226646	0					
ANR	227800	UnaryOperator	&		226646	0					
ANR	227801	Identifier	ropper		226646	1					
ANR	227802	Argument	rop		226646	1					
ANR	227803	Identifier	rop		226646	0					
ANR	227804	Argument	1		226646	2					
ANR	227805	PrimaryExpression	1		226646	0					
ANR	227806	Argument	0		226646	3					
ANR	227807	PrimaryExpression	0		226646	0					
ANR	227808	CompoundStatement		226:48:8651:8651	226646	1					
ANR	227809	ForStatement	"for ( ; line_count -- > 0 ; drow += draster , srow += sraster , ++ ty )"		226646	0					
ANR	227810	Condition	line_count -- > 0	286:19:11183:11198	226646	0	True				
ANR	227811	RelationalExpression	line_count -- > 0		226646	0		>			
ANR	227812	PostIncDecOperationExpression	line_count --		226646	0					
ANR	227813	Identifier	line_count		226646	0					
ANR	227814	IncDec	--		226646	1					
ANR	227815	PrimaryExpression	0		226646	1					
ANR	227816	Expression	"drow += draster , srow += sraster , ++ ty"	286:37:11201:11238	226646	1	True				
ANR	227817	AssignmentExpression	drow += draster		226646	0		+=			
ANR	227818	Identifier	drow		226646	0					
ANR	227819	Identifier	draster		226646	1					
ANR	227820	Expression	"srow += sraster , ++ ty"		226646	1					
ANR	227821	AssignmentExpression	srow += sraster		226646	0		+=			
ANR	227822	Identifier	srow		226646	0					
ANR	227823	Identifier	sraster		226646	1					
ANR	227824	UnaryExpression	++ ty		226646	1					
ANR	227825	IncDec	++		226646	0					
ANR	227826	Identifier	ty		226646	1					
ANR	227827	CompoundStatement		235:16:9056:9098	226646	2					
ANR	227828	IdentifierDeclStatement	int sx = sourcex ;	287:16:11259:11275	226646	0	True				
ANR	227829	IdentifierDecl	sx = sourcex		226646	0					
ANR	227830	IdentifierDeclType	int		226646	0					
ANR	227831	Identifier	sx		226646	1					
ANR	227832	AssignmentExpression	sx = sourcex		226646	2		=			
ANR	227833	Identifier	sourcex		226646	0					
ANR	227834	Identifier	sourcex		226646	1					
ANR	227835	IdentifierDeclStatement	int dx = x ;	288:16:11293:11303	226646	1	True				
ANR	227836	IdentifierDecl	dx = x		226646	0					
ANR	227837	IdentifierDeclType	int		226646	0					
ANR	227838	Identifier	dx		226646	1					
ANR	227839	AssignmentExpression	dx = x		226646	2		=			
ANR	227840	Identifier	x		226646	0					
ANR	227841	Identifier	x		226646	1					
ANR	227842	IdentifierDeclStatement	int w = width ;	289:16:11321:11334	226646	2	True				
ANR	227843	IdentifierDecl	w = width		226646	0					
ANR	227844	IdentifierDeclType	int		226646	0					
ANR	227845	Identifier	w		226646	1					
ANR	227846	AssignmentExpression	w = width		226646	2		=			
ANR	227847	Identifier	width		226646	0					
ANR	227848	Identifier	width		226646	1					
ANR	227849	IdentifierDeclStatement	const byte * trow = textures -> data + ( ty % textures -> rep_height ) * traster ;	290:16:11352:11425	226646	3	True				
ANR	227850	IdentifierDecl	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	0					
ANR	227851	IdentifierDeclType	const byte *		226646	0					
ANR	227852	Identifier	trow		226646	1					
ANR	227853	AssignmentExpression	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	2		=			
ANR	227854	Identifier	trow		226646	0					
ANR	227855	AdditiveExpression	textures -> data + ( ty % textures -> rep_height ) * traster		226646	1		+			
ANR	227856	PtrMemberAccess	textures -> data		226646	0					
ANR	227857	Identifier	textures		226646	0					
ANR	227858	Identifier	data		226646	1					
ANR	227859	MultiplicativeExpression	( ty % textures -> rep_height ) * traster		226646	1		*			
ANR	227860	MultiplicativeExpression	ty % textures -> rep_height		226646	0		%			
ANR	227861	Identifier	ty		226646	0					
ANR	227862	PtrMemberAccess	textures -> rep_height		226646	1					
ANR	227863	Identifier	textures		226646	0					
ANR	227864	Identifier	rep_height		226646	1					
ANR	227865	Identifier	traster		226646	1					
ANR	227866	IdentifierDeclStatement	"int xoff = x_offset ( phase_x , ty , textures ) ;"	291:16:11443:11485	226646	4	True				
ANR	227867	IdentifierDecl	"xoff = x_offset ( phase_x , ty , textures )"		226646	0					
ANR	227868	IdentifierDeclType	int		226646	0					
ANR	227869	Identifier	xoff		226646	1					
ANR	227870	AssignmentExpression	"xoff = x_offset ( phase_x , ty , textures )"		226646	2		=			
ANR	227871	Identifier	xoff		226646	0					
ANR	227872	CallExpression	"x_offset ( phase_x , ty , textures )"		226646	1					
ANR	227873	Callee	x_offset		226646	0					
ANR	227874	Identifier	x_offset		226646	0					
ANR	227875	ArgumentList	phase_x		226646	1					
ANR	227876	Argument	phase_x		226646	0					
ANR	227877	Identifier	phase_x		226646	0					
ANR	227878	Argument	ty		226646	1					
ANR	227879	Identifier	ty		226646	0					
ANR	227880	Argument	textures		226646	2					
ANR	227881	Identifier	textures		226646	0					
ANR	227882	IdentifierDeclStatement	int nw ;	292:16:11503:11509	226646	5	True				
ANR	227883	IdentifierDecl	nw		226646	0					
ANR	227884	IdentifierDeclType	int		226646	0					
ANR	227885	Identifier	nw		226646	1					
ANR	227886	IdentifierDeclStatement	int tx = ( dx + xoff ) % textures -> rep_width ;	293:16:11527:11569	226646	6	True				
ANR	227887	IdentifierDecl	tx = ( dx + xoff ) % textures -> rep_width		226646	0					
ANR	227888	IdentifierDeclType	int		226646	0					
ANR	227889	Identifier	tx		226646	1					
ANR	227890	AssignmentExpression	tx = ( dx + xoff ) % textures -> rep_width		226646	2		=			
ANR	227891	Identifier	tx		226646	0					
ANR	227892	MultiplicativeExpression	( dx + xoff ) % textures -> rep_width		226646	1		%			
ANR	227893	AdditiveExpression	dx + xoff		226646	0		+			
ANR	227894	Identifier	dx		226646	0					
ANR	227895	Identifier	xoff		226646	1					
ANR	227896	PtrMemberAccess	textures -> rep_width		226646	1					
ANR	227897	Identifier	textures		226646	0					
ANR	227898	Identifier	rep_width		226646	1					
ANR	227899	ForStatement	"for ( ; w > 0 ; sx += nw , dx += nw , w -= nw , tx = 0 )"		226646	7					
ANR	227900	Condition	w > 0	296:23:11660:11664	226646	0	True				
ANR	227901	RelationalExpression	w > 0		226646	0		>			
ANR	227902	Identifier	w		226646	0					
ANR	227903	PrimaryExpression	0		226646	1					
ANR	227904	Expression	"sx += nw , dx += nw , w -= nw , tx = 0"	296:30:11667:11701	226646	1	True				
ANR	227905	AssignmentExpression	sx += nw		226646	0		+=			
ANR	227906	Identifier	sx		226646	0					
ANR	227907	Identifier	nw		226646	1					
ANR	227908	Expression	"dx += nw , w -= nw , tx = 0"		226646	1					
ANR	227909	AssignmentExpression	dx += nw		226646	0		+=			
ANR	227910	Identifier	dx		226646	0					
ANR	227911	Identifier	nw		226646	1					
ANR	227912	Expression	"w -= nw , tx = 0"		226646	1					
ANR	227913	AssignmentExpression	w -= nw		226646	0		-=			
ANR	227914	Identifier	w		226646	0					
ANR	227915	Identifier	nw		226646	1					
ANR	227916	AssignmentExpression	tx = 0		226646	1		=			
ANR	227917	Identifier	tx		226646	0					
ANR	227918	PrimaryExpression	0		226646	1					
ANR	227919	CompoundStatement		244:20:9480:9515	226646	2					
ANR	227920	IdentifierDeclStatement	int dbit = dx & 7 ;	297:20:11726:11743	226646	0	True				
ANR	227921	IdentifierDecl	dbit = dx & 7		226646	0					
ANR	227922	IdentifierDeclType	int		226646	0					
ANR	227923	Identifier	dbit		226646	1					
ANR	227924	AssignmentExpression	dbit = dx & 7		226646	2		=			
ANR	227925	Identifier	dbit		226646	0					
ANR	227926	BitAndExpression	dx & 7		226646	1		&			
ANR	227927	Identifier	dx		226646	0					
ANR	227928	PrimaryExpression	7		226646	1					
ANR	227929	IdentifierDeclStatement	int sbit = sx & 7 ;	298:20:11765:11782	226646	1	True				
ANR	227930	IdentifierDecl	sbit = sx & 7		226646	0					
ANR	227931	IdentifierDeclType	int		226646	0					
ANR	227932	Identifier	sbit		226646	1					
ANR	227933	AssignmentExpression	sbit = sx & 7		226646	2		=			
ANR	227934	Identifier	sbit		226646	0					
ANR	227935	BitAndExpression	sx & 7		226646	1		&			
ANR	227936	Identifier	sx		226646	0					
ANR	227937	PrimaryExpression	7		226646	1					
ANR	227938	IdentifierDeclStatement	int tbit = tx & 7 ;	299:20:11804:11821	226646	2	True				
ANR	227939	IdentifierDecl	tbit = tx & 7		226646	0					
ANR	227940	IdentifierDeclType	int		226646	0					
ANR	227941	Identifier	tbit		226646	1					
ANR	227942	AssignmentExpression	tbit = tx & 7		226646	2		=			
ANR	227943	Identifier	tbit		226646	0					
ANR	227944	BitAndExpression	tx & 7		226646	1		&			
ANR	227945	Identifier	tx		226646	0					
ANR	227946	PrimaryExpression	7		226646	1					
ANR	227947	IdentifierDeclStatement	byte * dptr = drow + ( dx >> 3 ) ;	300:20:11843:11872	226646	3	True				
ANR	227948	IdentifierDecl	* dptr = drow + ( dx >> 3 )		226646	0					
ANR	227949	IdentifierDeclType	byte *		226646	0					
ANR	227950	Identifier	dptr		226646	1					
ANR	227951	AssignmentExpression	* dptr = drow + ( dx >> 3 )		226646	2		=			
ANR	227952	Identifier	dptr		226646	0					
ANR	227953	AdditiveExpression	drow + ( dx >> 3 )		226646	1		+			
ANR	227954	Identifier	drow		226646	0					
ANR	227955	ShiftExpression	dx >> 3		226646	1		>>			
ANR	227956	Identifier	dx		226646	0					
ANR	227957	PrimaryExpression	3		226646	1					
ANR	227958	IdentifierDeclStatement	const byte * sptr = srow + ( sx >> 3 ) ;	301:20:11894:11929	226646	4	True				
ANR	227959	IdentifierDecl	* sptr = srow + ( sx >> 3 )		226646	0					
ANR	227960	IdentifierDeclType	const byte *		226646	0					
ANR	227961	Identifier	sptr		226646	1					
ANR	227962	AssignmentExpression	* sptr = srow + ( sx >> 3 )		226646	2		=			
ANR	227963	Identifier	sptr		226646	0					
ANR	227964	AdditiveExpression	srow + ( sx >> 3 )		226646	1		+			
ANR	227965	Identifier	srow		226646	0					
ANR	227966	ShiftExpression	sx >> 3		226646	1		>>			
ANR	227967	Identifier	sx		226646	0					
ANR	227968	PrimaryExpression	3		226646	1					
ANR	227969	IdentifierDeclStatement	const byte * tptr = trow + ( tx >> 3 ) ;	302:20:11951:11986	226646	5	True				
ANR	227970	IdentifierDecl	* tptr = trow + ( tx >> 3 )		226646	0					
ANR	227971	IdentifierDeclType	const byte *		226646	0					
ANR	227972	Identifier	tptr		226646	1					
ANR	227973	AssignmentExpression	* tptr = trow + ( tx >> 3 )		226646	2		=			
ANR	227974	Identifier	tptr		226646	0					
ANR	227975	AdditiveExpression	trow + ( tx >> 3 )		226646	1		+			
ANR	227976	Identifier	trow		226646	0					
ANR	227977	ShiftExpression	tx >> 3		226646	1		>>			
ANR	227978	Identifier	tx		226646	0					
ANR	227979	PrimaryExpression	3		226646	1					
ANR	227980	ExpressionStatement	"nw = min ( w , textures -> size . x - tx )"	303:20:12008:12042	226646	6	True				
ANR	227981	AssignmentExpression	"nw = min ( w , textures -> size . x - tx )"		226646	0		=			
ANR	227982	Identifier	nw		226646	0					
ANR	227983	CallExpression	"min ( w , textures -> size . x - tx )"		226646	1					
ANR	227984	Callee	min		226646	0					
ANR	227985	Identifier	min		226646	0					
ANR	227986	ArgumentList	w		226646	1					
ANR	227987	Argument	w		226646	0					
ANR	227988	Identifier	w		226646	0					
ANR	227989	Argument	textures -> size . x - tx		226646	1					
ANR	227990	AdditiveExpression	textures -> size . x - tx		226646	0		-			
ANR	227991	MemberAccess	textures -> size . x		226646	0					
ANR	227992	PtrMemberAccess	textures -> size		226646	0					
ANR	227993	Identifier	textures		226646	0					
ANR	227994	Identifier	size		226646	1					
ANR	227995	Identifier	x		226646	1					
ANR	227996	Identifier	tx		226646	1					
ANR	227997	ExpressionStatement	"rop_set_s_bitmap_subbyte ( & ropper , sptr , sbit )"	304:20:12064:12109	226646	7	True				
ANR	227998	CallExpression	"rop_set_s_bitmap_subbyte ( & ropper , sptr , sbit )"		226646	0					
ANR	227999	Callee	rop_set_s_bitmap_subbyte		226646	0					
ANR	228000	Identifier	rop_set_s_bitmap_subbyte		226646	0					
ANR	228001	ArgumentList	& ropper		226646	1					
ANR	228002	Argument	& ropper		226646	0					
ANR	228003	UnaryOperationExpression	& ropper		226646	0					
ANR	228004	UnaryOperator	&		226646	0					
ANR	228005	Identifier	ropper		226646	1					
ANR	228006	Argument	sptr		226646	1					
ANR	228007	Identifier	sptr		226646	0					
ANR	228008	Argument	sbit		226646	2					
ANR	228009	Identifier	sbit		226646	0					
ANR	228010	ExpressionStatement	"rop_set_t_bitmap_subbyte ( & ropper , tptr , tbit )"	305:20:12131:12176	226646	8	True				
ANR	228011	CallExpression	"rop_set_t_bitmap_subbyte ( & ropper , tptr , tbit )"		226646	0					
ANR	228012	Callee	rop_set_t_bitmap_subbyte		226646	0					
ANR	228013	Identifier	rop_set_t_bitmap_subbyte		226646	0					
ANR	228014	ArgumentList	& ropper		226646	1					
ANR	228015	Argument	& ropper		226646	0					
ANR	228016	UnaryOperationExpression	& ropper		226646	0					
ANR	228017	UnaryOperator	&		226646	0					
ANR	228018	Identifier	ropper		226646	1					
ANR	228019	Argument	tptr		226646	1					
ANR	228020	Identifier	tptr		226646	0					
ANR	228021	Argument	tbit		226646	2					
ANR	228022	Identifier	tbit		226646	0					
ANR	228023	ExpressionStatement	"rop_run_subbyte ( & ropper , dptr , dbit , nw )"	306:20:12198:12238	226646	9	True				
ANR	228024	CallExpression	"rop_run_subbyte ( & ropper , dptr , dbit , nw )"		226646	0					
ANR	228025	Callee	rop_run_subbyte		226646	0					
ANR	228026	Identifier	rop_run_subbyte		226646	0					
ANR	228027	ArgumentList	& ropper		226646	1					
ANR	228028	Argument	& ropper		226646	0					
ANR	228029	UnaryOperationExpression	& ropper		226646	0					
ANR	228030	UnaryOperator	&		226646	0					
ANR	228031	Identifier	ropper		226646	1					
ANR	228032	Argument	dptr		226646	1					
ANR	228033	Identifier	dptr		226646	0					
ANR	228034	Argument	dbit		226646	2					
ANR	228035	Identifier	dbit		226646	0					
ANR	228036	Argument	nw		226646	3					
ANR	228037	Identifier	nw		226646	0					
ANR	228038	ExpressionStatement	rop_release_run_op ( & ropper )	309:12:12284:12311	226646	1	True				
ANR	228039	CallExpression	rop_release_run_op ( & ropper )		226646	0					
ANR	228040	Callee	rop_release_run_op		226646	0					
ANR	228041	Identifier	rop_release_run_op		226646	0					
ANR	228042	ArgumentList	& ropper		226646	1					
ANR	228043	Argument	& ropper		226646	0					
ANR	228044	UnaryOperationExpression	& ropper		226646	0					
ANR	228045	UnaryOperator	&		226646	0					
ANR	228046	Identifier	ropper		226646	1					
ANR	228047	ElseStatement	else		226646	0					
ANR	228048	IfStatement	if ( srow == NULL )		226646	0					
ANR	228049	Condition	srow == NULL	311:15:12338:12349	226646	0	True				
ANR	228050	EqualityExpression	srow == NULL		226646	0		==			
ANR	228051	Identifier	srow		226646	0					
ANR	228052	Identifier	NULL		226646	1					
ANR	228053	CompoundStatement		257:8:10049:10090	226646	1					
ANR	228054	IdentifierDeclStatement	const rop_proc proc = rop_proc_table [ rop ] ;	315:8:12520:12561	226646	0	True				
ANR	228055	IdentifierDecl	proc = rop_proc_table [ rop ]		226646	0					
ANR	228056	IdentifierDeclType	const rop_proc		226646	0					
ANR	228057	Identifier	proc		226646	1					
ANR	228058	AssignmentExpression	proc = rop_proc_table [ rop ]		226646	2		=			
ANR	228059	Identifier	proc		226646	0					
ANR	228060	ArrayIndexing	rop_proc_table [ rop ]		226646	1					
ANR	228061	Identifier	rop_proc_table		226646	0					
ANR	228062	Identifier	rop		226646	1					
ANR	228063	ForStatement	"for ( ; line_count -- > 0 ; drow += draster , ++ ty )"		226646	1					
ANR	228064	Condition	line_count -- > 0	316:15:12578:12593	226646	0	True				
ANR	228065	RelationalExpression	line_count -- > 0		226646	0		>			
ANR	228066	PostIncDecOperationExpression	line_count --		226646	0					
ANR	228067	Identifier	line_count		226646	0					
ANR	228068	IncDec	--		226646	1					
ANR	228069	PrimaryExpression	0		226646	1					
ANR	228070	Expression	"drow += draster , ++ ty"	316:33:12596:12616	226646	1	True				
ANR	228071	AssignmentExpression	drow += draster		226646	0		+=			
ANR	228072	Identifier	drow		226646	0					
ANR	228073	Identifier	draster		226646	1					
ANR	228074	UnaryExpression	++ ty		226646	1					
ANR	228075	IncDec	++		226646	0					
ANR	228076	Identifier	ty		226646	1					
ANR	228077	CompoundStatement		264:12:10376:10418	226646	2					
ANR	228078	IdentifierDeclStatement	int dx = x ;	317:12:12633:12643	226646	0	True				
ANR	228079	IdentifierDecl	dx = x		226646	0					
ANR	228080	IdentifierDeclType	int		226646	0					
ANR	228081	Identifier	dx		226646	1					
ANR	228082	AssignmentExpression	dx = x		226646	2		=			
ANR	228083	Identifier	x		226646	0					
ANR	228084	Identifier	x		226646	1					
ANR	228085	IdentifierDeclStatement	int w = width ;	318:12:12657:12670	226646	1	True				
ANR	228086	IdentifierDecl	w = width		226646	0					
ANR	228087	IdentifierDeclType	int		226646	0					
ANR	228088	Identifier	w		226646	1					
ANR	228089	AssignmentExpression	w = width		226646	2		=			
ANR	228090	Identifier	width		226646	0					
ANR	228091	Identifier	width		226646	1					
ANR	228092	IdentifierDeclStatement	const byte * trow = textures -> data + ( ty % textures -> rep_height ) * traster ;	319:12:12684:12757	226646	2	True				
ANR	228093	IdentifierDecl	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	0					
ANR	228094	IdentifierDeclType	const byte *		226646	0					
ANR	228095	Identifier	trow		226646	1					
ANR	228096	AssignmentExpression	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	2		=			
ANR	228097	Identifier	trow		226646	0					
ANR	228098	AdditiveExpression	textures -> data + ( ty % textures -> rep_height ) * traster		226646	1		+			
ANR	228099	PtrMemberAccess	textures -> data		226646	0					
ANR	228100	Identifier	textures		226646	0					
ANR	228101	Identifier	data		226646	1					
ANR	228102	MultiplicativeExpression	( ty % textures -> rep_height ) * traster		226646	1		*			
ANR	228103	MultiplicativeExpression	ty % textures -> rep_height		226646	0		%			
ANR	228104	Identifier	ty		226646	0					
ANR	228105	PtrMemberAccess	textures -> rep_height		226646	1					
ANR	228106	Identifier	textures		226646	0					
ANR	228107	Identifier	rep_height		226646	1					
ANR	228108	Identifier	traster		226646	1					
ANR	228109	IdentifierDeclStatement	"int xoff = x_offset ( phase_x , ty , textures ) ;"	320:12:12771:12813	226646	3	True				
ANR	228110	IdentifierDecl	"xoff = x_offset ( phase_x , ty , textures )"		226646	0					
ANR	228111	IdentifierDeclType	int		226646	0					
ANR	228112	Identifier	xoff		226646	1					
ANR	228113	AssignmentExpression	"xoff = x_offset ( phase_x , ty , textures )"		226646	2		=			
ANR	228114	Identifier	xoff		226646	0					
ANR	228115	CallExpression	"x_offset ( phase_x , ty , textures )"		226646	1					
ANR	228116	Callee	x_offset		226646	0					
ANR	228117	Identifier	x_offset		226646	0					
ANR	228118	ArgumentList	phase_x		226646	1					
ANR	228119	Argument	phase_x		226646	0					
ANR	228120	Identifier	phase_x		226646	0					
ANR	228121	Argument	ty		226646	1					
ANR	228122	Identifier	ty		226646	0					
ANR	228123	Argument	textures		226646	2					
ANR	228124	Identifier	textures		226646	0					
ANR	228125	IdentifierDeclStatement	int nw ;	321:12:12827:12833	226646	4	True				
ANR	228126	IdentifierDecl	nw		226646	0					
ANR	228127	IdentifierDeclType	int		226646	0					
ANR	228128	Identifier	nw		226646	1					
ANR	228129	IdentifierDeclStatement	int tx = ( dx + xoff ) % textures -> rep_width ;	322:12:12847:12889	226646	5	True				
ANR	228130	IdentifierDecl	tx = ( dx + xoff ) % textures -> rep_width		226646	0					
ANR	228131	IdentifierDeclType	int		226646	0					
ANR	228132	Identifier	tx		226646	1					
ANR	228133	AssignmentExpression	tx = ( dx + xoff ) % textures -> rep_width		226646	2		=			
ANR	228134	Identifier	tx		226646	0					
ANR	228135	MultiplicativeExpression	( dx + xoff ) % textures -> rep_width		226646	1		%			
ANR	228136	AdditiveExpression	dx + xoff		226646	0		+			
ANR	228137	Identifier	dx		226646	0					
ANR	228138	Identifier	xoff		226646	1					
ANR	228139	PtrMemberAccess	textures -> rep_width		226646	1					
ANR	228140	Identifier	textures		226646	0					
ANR	228141	Identifier	rep_width		226646	1					
ANR	228142	ForStatement	"for ( ; w > 0 ; dx += nw , w -= nw , tx = 0 )"		226646	6					
ANR	228143	Condition	w > 0	325:19:12972:12976	226646	0	True				
ANR	228144	RelationalExpression	w > 0		226646	0		>			
ANR	228145	Identifier	w		226646	0					
ANR	228146	PrimaryExpression	0		226646	1					
ANR	228147	Expression	"dx += nw , w -= nw , tx = 0"	325:26:12979:13003	226646	1	True				
ANR	228148	AssignmentExpression	dx += nw		226646	0		+=			
ANR	228149	Identifier	dx		226646	0					
ANR	228150	Identifier	nw		226646	1					
ANR	228151	Expression	"w -= nw , tx = 0"		226646	1					
ANR	228152	AssignmentExpression	w -= nw		226646	0		-=			
ANR	228153	Identifier	w		226646	0					
ANR	228154	Identifier	nw		226646	1					
ANR	228155	AssignmentExpression	tx = 0		226646	1		=			
ANR	228156	Identifier	tx		226646	0					
ANR	228157	PrimaryExpression	0		226646	1					
ANR	228158	CompoundStatement		277:16:10948:10983	226646	2					
ANR	228159	IdentifierDeclStatement	int dbit = dx & 7 ;	326:16:13024:13041	226646	0	True				
ANR	228160	IdentifierDecl	dbit = dx & 7		226646	0					
ANR	228161	IdentifierDeclType	int		226646	0					
ANR	228162	Identifier	dbit		226646	1					
ANR	228163	AssignmentExpression	dbit = dx & 7		226646	2		=			
ANR	228164	Identifier	dbit		226646	0					
ANR	228165	BitAndExpression	dx & 7		226646	1		&			
ANR	228166	Identifier	dx		226646	0					
ANR	228167	PrimaryExpression	7		226646	1					
ANR	228168	IdentifierDeclStatement	int tbit = tx & 7 ;	327:16:13059:13076	226646	1	True				
ANR	228169	IdentifierDecl	tbit = tx & 7		226646	0					
ANR	228170	IdentifierDeclType	int		226646	0					
ANR	228171	Identifier	tbit		226646	1					
ANR	228172	AssignmentExpression	tbit = tx & 7		226646	2		=			
ANR	228173	Identifier	tbit		226646	0					
ANR	228174	BitAndExpression	tx & 7		226646	1		&			
ANR	228175	Identifier	tx		226646	0					
ANR	228176	PrimaryExpression	7		226646	1					
ANR	228177	IdentifierDeclStatement	int tskew = tbit - dbit ;	328:16:13094:13117	226646	2	True				
ANR	228178	IdentifierDecl	tskew = tbit - dbit		226646	0					
ANR	228179	IdentifierDeclType	int		226646	0					
ANR	228180	Identifier	tskew		226646	1					
ANR	228181	AssignmentExpression	tskew = tbit - dbit		226646	2		=			
ANR	228182	Identifier	tskew		226646	0					
ANR	228183	AdditiveExpression	tbit - dbit		226646	1		-			
ANR	228184	Identifier	tbit		226646	0					
ANR	228185	Identifier	dbit		226646	1					
ANR	228186	IdentifierDeclStatement	"int left = nw = min ( w , textures -> size . x - tx ) ;"	329:16:13135:13180	226646	3	True				
ANR	228187	IdentifierDecl	"left = nw = min ( w , textures -> size . x - tx )"		226646	0					
ANR	228188	IdentifierDeclType	int		226646	0					
ANR	228189	Identifier	left		226646	1					
ANR	228190	AssignmentExpression	"left = nw = min ( w , textures -> size . x - tx )"		226646	2		=			
ANR	228191	Identifier	left		226646	0					
ANR	228192	AssignmentExpression	"nw = min ( w , textures -> size . x - tx )"		226646	1		=			
ANR	228193	Identifier	nw		226646	0					
ANR	228194	CallExpression	"min ( w , textures -> size . x - tx )"		226646	1					
ANR	228195	Callee	min		226646	0					
ANR	228196	Identifier	min		226646	0					
ANR	228197	ArgumentList	w		226646	1					
ANR	228198	Argument	w		226646	0					
ANR	228199	Identifier	w		226646	0					
ANR	228200	Argument	textures -> size . x - tx		226646	1					
ANR	228201	AdditiveExpression	textures -> size . x - tx		226646	0		-			
ANR	228202	MemberAccess	textures -> size . x		226646	0					
ANR	228203	PtrMemberAccess	textures -> size		226646	0					
ANR	228204	Identifier	textures		226646	0					
ANR	228205	Identifier	size		226646	1					
ANR	228206	Identifier	x		226646	1					
ANR	228207	Identifier	tx		226646	1					
ANR	228208	IdentifierDeclStatement	byte lmask = 0xff >> dbit ;	330:16:13198:13223	226646	4	True				
ANR	228209	IdentifierDecl	lmask = 0xff >> dbit		226646	0					
ANR	228210	IdentifierDeclType	byte		226646	0					
ANR	228211	Identifier	lmask		226646	1					
ANR	228212	AssignmentExpression	lmask = 0xff >> dbit		226646	2		=			
ANR	228213	Identifier	lmask		226646	0					
ANR	228214	ShiftExpression	0xff >> dbit		226646	1		>>			
ANR	228215	PrimaryExpression	0xff		226646	0					
ANR	228216	Identifier	dbit		226646	1					
ANR	228217	IdentifierDeclStatement	byte rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 ) ;	331:16:13241:13284	226646	5	True				
ANR	228218	IdentifierDecl	rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	0					
ANR	228219	IdentifierDeclType	byte		226646	0					
ANR	228220	Identifier	rmask		226646	1					
ANR	228221	AssignmentExpression	rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	2		=			
ANR	228222	Identifier	rmask		226646	0					
ANR	228223	ShiftExpression	0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	1		<<			
ANR	228224	PrimaryExpression	0xff		226646	0					
ANR	228225	BitAndExpression	~ ( dbit + nw - 1 ) & 7		226646	1		&			
ANR	228226	UnaryOperationExpression	~ ( dbit + nw - 1 )		226646	0					
ANR	228227	UnaryOperator	~		226646	0					
ANR	228228	AdditiveExpression	dbit + nw - 1		226646	1		+			
ANR	228229	Identifier	dbit		226646	0					
ANR	228230	AdditiveExpression	nw - 1		226646	1		-			
ANR	228231	Identifier	nw		226646	0					
ANR	228232	PrimaryExpression	1		226646	1					
ANR	228233	PrimaryExpression	7		226646	1					
ANR	228234	IdentifierDeclStatement	byte mask = lmask ;	332:16:13302:13319	226646	6	True				
ANR	228235	IdentifierDecl	mask = lmask		226646	0					
ANR	228236	IdentifierDeclType	byte		226646	0					
ANR	228237	Identifier	mask		226646	1					
ANR	228238	AssignmentExpression	mask = lmask		226646	2		=			
ANR	228239	Identifier	lmask		226646	0					
ANR	228240	Identifier	lmask		226646	1					
ANR	228241	IdentifierDeclStatement	int nx = 8 - dbit ;	333:16:13337:13354	226646	7	True				
ANR	228242	IdentifierDecl	nx = 8 - dbit		226646	0					
ANR	228243	IdentifierDeclType	int		226646	0					
ANR	228244	Identifier	nx		226646	1					
ANR	228245	AssignmentExpression	nx = 8 - dbit		226646	2		=			
ANR	228246	Identifier	nx		226646	0					
ANR	228247	AdditiveExpression	8 - dbit		226646	1		-			
ANR	228248	PrimaryExpression	8		226646	0					
ANR	228249	Identifier	dbit		226646	1					
ANR	228250	IdentifierDeclStatement	byte * dptr = drow + ( dx >> 3 ) ;	334:16:13372:13401	226646	8	True				
ANR	228251	IdentifierDecl	* dptr = drow + ( dx >> 3 )		226646	0					
ANR	228252	IdentifierDeclType	byte *		226646	0					
ANR	228253	Identifier	dptr		226646	1					
ANR	228254	AssignmentExpression	* dptr = drow + ( dx >> 3 )		226646	2		=			
ANR	228255	Identifier	dptr		226646	0					
ANR	228256	AdditiveExpression	drow + ( dx >> 3 )		226646	1		+			
ANR	228257	Identifier	drow		226646	0					
ANR	228258	ShiftExpression	dx >> 3		226646	1		>>			
ANR	228259	Identifier	dx		226646	0					
ANR	228260	PrimaryExpression	3		226646	1					
ANR	228261	IdentifierDeclStatement	const byte * tptr = trow + ( tx >> 3 ) ;	335:16:13419:13454	226646	9	True				
ANR	228262	IdentifierDecl	* tptr = trow + ( tx >> 3 )		226646	0					
ANR	228263	IdentifierDeclType	const byte *		226646	0					
ANR	228264	Identifier	tptr		226646	1					
ANR	228265	AssignmentExpression	* tptr = trow + ( tx >> 3 )		226646	2		=			
ANR	228266	Identifier	tptr		226646	0					
ANR	228267	AdditiveExpression	trow + ( tx >> 3 )		226646	1		+			
ANR	228268	Identifier	trow		226646	0					
ANR	228269	ShiftExpression	tx >> 3		226646	1		>>			
ANR	228270	Identifier	tx		226646	0					
ANR	228271	PrimaryExpression	3		226646	1					
ANR	228272	IfStatement	if ( tskew < 0 )		226646	10					
ANR	228273	Condition	tskew < 0	337:20:13477:13485	226646	0	True				
ANR	228274	RelationalExpression	tskew < 0		226646	0		<			
ANR	228275	Identifier	tskew		226646	0					
ANR	228276	PrimaryExpression	0		226646	1					
ANR	228277	ExpressionStatement	"-- tptr , tskew += 8"	338:20:13508:13526	226646	1	True				
ANR	228278	Expression	"-- tptr , tskew += 8"		226646	0					
ANR	228279	UnaryExpression	-- tptr		226646	0					
ANR	228280	IncDec	--		226646	0					
ANR	228281	Identifier	tptr		226646	1					
ANR	228282	AssignmentExpression	tskew += 8		226646	1		+=			
ANR	228283	Identifier	tskew		226646	0					
ANR	228284	PrimaryExpression	8		226646	1					
ANR	228285	ForStatement	"for ( ; left > 0 ; left -= nx , mask = 0xff , nx = 8 , ++ dptr , ++ tptr )"		226646	11					
ANR	228286	Condition	left > 0	339:23:13551:13558	226646	0	True				
ANR	228287	RelationalExpression	left > 0		226646	0		>			
ANR	228288	Identifier	left		226646	0					
ANR	228289	PrimaryExpression	0		226646	1					
ANR	228290	Expression	"left -= nx , mask = 0xff , nx = 8 , ++ dptr , ++ tptr"	340:20:13581:13647	226646	1	True				
ANR	228291	AssignmentExpression	left -= nx		226646	0		-=			
ANR	228292	Identifier	left		226646	0					
ANR	228293	Identifier	nx		226646	1					
ANR	228294	Expression	"mask = 0xff , nx = 8 , ++ dptr , ++ tptr"		226646	1					
ANR	228295	AssignmentExpression	mask = 0xff		226646	0		=			
ANR	228296	Identifier	mask		226646	0					
ANR	228297	PrimaryExpression	0xff		226646	1					
ANR	228298	Expression	"nx = 8 , ++ dptr , ++ tptr"		226646	1					
ANR	228299	AssignmentExpression	nx = 8		226646	0		=			
ANR	228300	Identifier	nx		226646	0					
ANR	228301	PrimaryExpression	8		226646	1					
ANR	228302	Expression	"++ dptr , ++ tptr"		226646	1					
ANR	228303	UnaryExpression	++ dptr		226646	0					
ANR	228304	IncDec	++		226646	0					
ANR	228305	Identifier	dptr		226646	1					
ANR	228306	UnaryExpression	++ tptr		226646	1					
ANR	228307	IncDec	++		226646	0					
ANR	228308	Identifier	tptr		226646	1					
ANR	228309	CompoundStatement		291:1:11386:11455	226646	2					
ANR	228310	IdentifierDeclStatement	byte dbyte = * dptr ;	343:20:13693:13711	226646	0	True				
ANR	228311	IdentifierDecl	dbyte = * dptr		226646	0					
ANR	228312	IdentifierDeclType	byte		226646	0					
ANR	228313	Identifier	dbyte		226646	1					
ANR	228314	AssignmentExpression	dbyte = * dptr		226646	2		=			
ANR	228315	Identifier	dbyte		226646	0					
ANR	228316	UnaryOperationExpression	* dptr		226646	1					
ANR	228317	UnaryOperator	*		226646	0					
ANR	228318	Identifier	dptr		226646	1					
ANR	228319	Statement	define	345:1:13715:13720	226646	1	True				
ANR	228320	Statement	fetch1	345:8:13722:13727	226646	2	True				
ANR	228321	Statement	(	345:14:13728:13728	226646	3	True				
ANR	228322	Statement	ptr	345:15:13729:13731	226646	4	True				
ANR	228323	Statement	","	345:18:13732:13732	226646	5	True				
ANR	228324	Statement	skew	345:20:13734:13737	226646	6	True				
ANR	228325	Statement	)	345:24:13738:13738	226646	7	True				
ANR	228326	Statement	(	346:2:13743:13743	226646	8	True				
ANR	228327	Statement	skew	346:3:13744:13747	226646	9	True				
ANR	228328	Statement	?	346:8:13749:13749	226646	10	True				
ANR	228329	Statement	(	346:10:13751:13751	226646	11	True				
ANR	228330	Statement	ptr	346:11:13752:13754	226646	12	True				
ANR	228331	Statement	[	346:14:13755:13755	226646	13	True				
ANR	228332	Statement	0	346:15:13756:13756	226646	14	True				
ANR	228333	Statement	]	346:16:13757:13757	226646	15	True				
ANR	228334	Statement	<<	346:18:13759:13760	226646	16	True				
ANR	228335	Statement	skew	346:21:13762:13765	226646	17	True				
ANR	228336	Statement	)	346:25:13766:13766	226646	18	True				
ANR	228337	Statement	+	346:27:13768:13768	226646	19	True				
ANR	228338	Statement	(	346:29:13770:13770	226646	20	True				
ANR	228339	Statement	ptr	346:30:13771:13773	226646	21	True				
ANR	228340	Statement	[	346:33:13774:13774	226646	22	True				
ANR	228341	Statement	1	346:34:13775:13775	226646	23	True				
ANR	228342	Statement	]	346:35:13776:13776	226646	24	True				
ANR	228343	Statement	>>	346:37:13778:13779	226646	25	True				
ANR	228344	Statement	(	346:40:13781:13781	226646	26	True				
ANR	228345	Statement	8	346:41:13782:13782	226646	27	True				
ANR	228346	Statement	-	346:43:13784:13784	226646	28	True				
ANR	228347	Statement	skew	346:45:13786:13789	226646	29	True				
ANR	228348	Statement	)	346:49:13790:13790	226646	30	True				
ANR	228349	Statement	)	346:50:13791:13791	226646	31	True				
ANR	228350	Statement	:	346:52:13793:13793	226646	32	True				
ANR	228351	Statement	*	346:54:13795:13795	226646	33	True				
ANR	228352	Statement	ptr	346:55:13796:13798	226646	34	True				
ANR	228353	Statement	)	346:58:13799:13799	226646	35	True				
ANR	228354	IdentifierDeclStatement	"byte tbyte = fetch1 ( tptr , tskew ) ;"	347:20:13821:13853	226646	36	True				
ANR	228355	IdentifierDecl	"tbyte = fetch1 ( tptr , tskew )"		226646	0					
ANR	228356	IdentifierDeclType	byte		226646	0					
ANR	228357	Identifier	tbyte		226646	1					
ANR	228358	AssignmentExpression	"tbyte = fetch1 ( tptr , tskew )"		226646	2		=			
ANR	228359	Identifier	tbyte		226646	0					
ANR	228360	CallExpression	"fetch1 ( tptr , tskew )"		226646	1					
ANR	228361	Callee	fetch1		226646	0					
ANR	228362	Identifier	fetch1		226646	0					
ANR	228363	ArgumentList	tptr		226646	1					
ANR	228364	Argument	tptr		226646	0					
ANR	228365	Identifier	tptr		226646	0					
ANR	228366	Argument	tskew		226646	1					
ANR	228367	Identifier	tskew		226646	0					
ANR	228368	IdentifierDeclStatement	"undef fetch1 byte result = ( * proc ) ( dbyte , 0 , tbyte ) ;"	349:1:13857:13926	226646	37	True				
ANR	228369	IdentifierDecl	"result = ( * proc ) ( dbyte , 0 , tbyte )"		226646	0					
ANR	228370	IdentifierDeclType	undef fetch1 byte		226646	0					
ANR	228371	Identifier	result		226646	1					
ANR	228372	AssignmentExpression	"result = ( * proc ) ( dbyte , 0 , tbyte )"		226646	2		=			
ANR	228373	Identifier	result		226646	0					
ANR	228374	CallExpression	"( * proc ) ( dbyte , 0 , tbyte )"		226646	1					
ANR	228375	Callee	* proc		226646	0					
ANR	228376	UnaryOperationExpression	* proc		226646	0					
ANR	228377	UnaryOperator	*		226646	0					
ANR	228378	Identifier	proc		226646	1					
ANR	228379	ArgumentList	dbyte		226646	1					
ANR	228380	Argument	dbyte		226646	0					
ANR	228381	Identifier	dbyte		226646	0					
ANR	228382	Argument	0		226646	1					
ANR	228383	PrimaryExpression	0		226646	0					
ANR	228384	Argument	tbyte		226646	2					
ANR	228385	Identifier	tbyte		226646	0					
ANR	228386	IfStatement	if ( left <= nx )		226646	38					
ANR	228387	Condition	left <= nx	352:24:13953:13962	226646	0	True				
ANR	228388	RelationalExpression	left <= nx		226646	0		<=			
ANR	228389	Identifier	left		226646	0					
ANR	228390	Identifier	nx		226646	1					
ANR	228391	ExpressionStatement	mask &= rmask	353:24:13989:14002	226646	1	True				
ANR	228392	AssignmentExpression	mask &= rmask		226646	0		&=			
ANR	228393	Identifier	mask		226646	0					
ANR	228394	Identifier	rmask		226646	1					
ANR	228395	ExpressionStatement	* dptr = ( mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask ) )	354:20:14024:14120	226646	39	True				
ANR	228396	AssignmentExpression	* dptr = ( mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask ) )		226646	0		=			
ANR	228397	UnaryOperationExpression	* dptr		226646	0					
ANR	228398	UnaryOperator	*		226646	0					
ANR	228399	Identifier	dptr		226646	1					
ANR	228400	ConditionalExpression	mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask )		226646	1					
ANR	228401	Condition	mask == 0xff		226646	0					
ANR	228402	EqualityExpression	mask == 0xff		226646	0		==			
ANR	228403	Identifier	mask		226646	0					
ANR	228404	PrimaryExpression	0xff		226646	1					
ANR	228405	Identifier	result		226646	1					
ANR	228406	InclusiveOrExpression	( result & mask ) | ( dbyte & ~mask )		226646	2		|			
ANR	228407	BitAndExpression	result & mask		226646	0		&			
ANR	228408	Identifier	result		226646	0					
ANR	228409	Identifier	mask		226646	1					
ANR	228410	BitAndExpression	dbyte & ~mask		226646	1		&			
ANR	228411	Identifier	dbyte		226646	0					
ANR	228412	Identifier	~mask		226646	1					
ANR	228413	ElseStatement	else		226646	0					
ANR	228414	CompoundStatement		305:8:11872:11913	226646	0					
ANR	228415	IdentifierDeclStatement	const rop_proc proc = rop_proc_table [ rop ] ;	363:8:14343:14384	226646	0	True				
ANR	228416	IdentifierDecl	proc = rop_proc_table [ rop ]		226646	0					
ANR	228417	IdentifierDeclType	const rop_proc		226646	0					
ANR	228418	Identifier	proc		226646	1					
ANR	228419	AssignmentExpression	proc = rop_proc_table [ rop ]		226646	2		=			
ANR	228420	Identifier	proc		226646	0					
ANR	228421	ArrayIndexing	rop_proc_table [ rop ]		226646	1					
ANR	228422	Identifier	rop_proc_table		226646	0					
ANR	228423	Identifier	rop		226646	1					
ANR	228424	ForStatement	"for ( ; line_count -- > 0 ; drow += draster , srow += sraster , ++ ty )"		226646	1					
ANR	228425	Condition	line_count -- > 0	364:15:14401:14416	226646	0	True				
ANR	228426	RelationalExpression	line_count -- > 0		226646	0		>			
ANR	228427	PostIncDecOperationExpression	line_count --		226646	0					
ANR	228428	Identifier	line_count		226646	0					
ANR	228429	IncDec	--		226646	1					
ANR	228430	PrimaryExpression	0		226646	1					
ANR	228431	Expression	"drow += draster , srow += sraster , ++ ty"	364:33:14419:14456	226646	1	True				
ANR	228432	AssignmentExpression	drow += draster		226646	0		+=			
ANR	228433	Identifier	drow		226646	0					
ANR	228434	Identifier	draster		226646	1					
ANR	228435	Expression	"srow += sraster , ++ ty"		226646	1					
ANR	228436	AssignmentExpression	srow += sraster		226646	0		+=			
ANR	228437	Identifier	srow		226646	0					
ANR	228438	Identifier	sraster		226646	1					
ANR	228439	UnaryExpression	++ ty		226646	1					
ANR	228440	IncDec	++		226646	0					
ANR	228441	Identifier	ty		226646	1					
ANR	228442	CompoundStatement		313:12:12246:12288	226646	2					
ANR	228443	IdentifierDeclStatement	int sx = sourcex ;	365:12:14473:14489	226646	0	True				
ANR	228444	IdentifierDecl	sx = sourcex		226646	0					
ANR	228445	IdentifierDeclType	int		226646	0					
ANR	228446	Identifier	sx		226646	1					
ANR	228447	AssignmentExpression	sx = sourcex		226646	2		=			
ANR	228448	Identifier	sourcex		226646	0					
ANR	228449	Identifier	sourcex		226646	1					
ANR	228450	IdentifierDeclStatement	int dx = x ;	366:12:14503:14513	226646	1	True				
ANR	228451	IdentifierDecl	dx = x		226646	0					
ANR	228452	IdentifierDeclType	int		226646	0					
ANR	228453	Identifier	dx		226646	1					
ANR	228454	AssignmentExpression	dx = x		226646	2		=			
ANR	228455	Identifier	x		226646	0					
ANR	228456	Identifier	x		226646	1					
ANR	228457	IdentifierDeclStatement	int w = width ;	367:12:14527:14540	226646	2	True				
ANR	228458	IdentifierDecl	w = width		226646	0					
ANR	228459	IdentifierDeclType	int		226646	0					
ANR	228460	Identifier	w		226646	1					
ANR	228461	AssignmentExpression	w = width		226646	2		=			
ANR	228462	Identifier	width		226646	0					
ANR	228463	Identifier	width		226646	1					
ANR	228464	IdentifierDeclStatement	const byte * trow = textures -> data + ( ty % textures -> rep_height ) * traster ;	368:12:14554:14627	226646	3	True				
ANR	228465	IdentifierDecl	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	0					
ANR	228466	IdentifierDeclType	const byte *		226646	0					
ANR	228467	Identifier	trow		226646	1					
ANR	228468	AssignmentExpression	* trow = textures -> data + ( ty % textures -> rep_height ) * traster		226646	2		=			
ANR	228469	Identifier	trow		226646	0					
ANR	228470	AdditiveExpression	textures -> data + ( ty % textures -> rep_height ) * traster		226646	1		+			
ANR	228471	PtrMemberAccess	textures -> data		226646	0					
ANR	228472	Identifier	textures		226646	0					
ANR	228473	Identifier	data		226646	1					
ANR	228474	MultiplicativeExpression	( ty % textures -> rep_height ) * traster		226646	1		*			
ANR	228475	MultiplicativeExpression	ty % textures -> rep_height		226646	0		%			
ANR	228476	Identifier	ty		226646	0					
ANR	228477	PtrMemberAccess	textures -> rep_height		226646	1					
ANR	228478	Identifier	textures		226646	0					
ANR	228479	Identifier	rep_height		226646	1					
ANR	228480	Identifier	traster		226646	1					
ANR	228481	IdentifierDeclStatement	"int xoff = x_offset ( phase_x , ty , textures ) ;"	369:12:14641:14683	226646	4	True				
ANR	228482	IdentifierDecl	"xoff = x_offset ( phase_x , ty , textures )"		226646	0					
ANR	228483	IdentifierDeclType	int		226646	0					
ANR	228484	Identifier	xoff		226646	1					
ANR	228485	AssignmentExpression	"xoff = x_offset ( phase_x , ty , textures )"		226646	2		=			
ANR	228486	Identifier	xoff		226646	0					
ANR	228487	CallExpression	"x_offset ( phase_x , ty , textures )"		226646	1					
ANR	228488	Callee	x_offset		226646	0					
ANR	228489	Identifier	x_offset		226646	0					
ANR	228490	ArgumentList	phase_x		226646	1					
ANR	228491	Argument	phase_x		226646	0					
ANR	228492	Identifier	phase_x		226646	0					
ANR	228493	Argument	ty		226646	1					
ANR	228494	Identifier	ty		226646	0					
ANR	228495	Argument	textures		226646	2					
ANR	228496	Identifier	textures		226646	0					
ANR	228497	IdentifierDeclStatement	int nw ;	370:12:14697:14703	226646	5	True				
ANR	228498	IdentifierDecl	nw		226646	0					
ANR	228499	IdentifierDeclType	int		226646	0					
ANR	228500	Identifier	nw		226646	1					
ANR	228501	IdentifierDeclStatement	int tx = ( dx + xoff ) % textures -> rep_width ;	371:12:14717:14759	226646	6	True				
ANR	228502	IdentifierDecl	tx = ( dx + xoff ) % textures -> rep_width		226646	0					
ANR	228503	IdentifierDeclType	int		226646	0					
ANR	228504	Identifier	tx		226646	1					
ANR	228505	AssignmentExpression	tx = ( dx + xoff ) % textures -> rep_width		226646	2		=			
ANR	228506	Identifier	tx		226646	0					
ANR	228507	MultiplicativeExpression	( dx + xoff ) % textures -> rep_width		226646	1		%			
ANR	228508	AdditiveExpression	dx + xoff		226646	0		+			
ANR	228509	Identifier	dx		226646	0					
ANR	228510	Identifier	xoff		226646	1					
ANR	228511	PtrMemberAccess	textures -> rep_width		226646	1					
ANR	228512	Identifier	textures		226646	0					
ANR	228513	Identifier	rep_width		226646	1					
ANR	228514	ForStatement	"for ( ; w > 0 ; sx += nw , dx += nw , w -= nw , tx = 0 )"		226646	7					
ANR	228515	Condition	w > 0	374:19:14842:14846	226646	0	True				
ANR	228516	RelationalExpression	w > 0		226646	0		>			
ANR	228517	Identifier	w		226646	0					
ANR	228518	PrimaryExpression	0		226646	1					
ANR	228519	Expression	"sx += nw , dx += nw , w -= nw , tx = 0"	374:26:14849:14883	226646	1	True				
ANR	228520	AssignmentExpression	sx += nw		226646	0		+=			
ANR	228521	Identifier	sx		226646	0					
ANR	228522	Identifier	nw		226646	1					
ANR	228523	Expression	"dx += nw , w -= nw , tx = 0"		226646	1					
ANR	228524	AssignmentExpression	dx += nw		226646	0		+=			
ANR	228525	Identifier	dx		226646	0					
ANR	228526	Identifier	nw		226646	1					
ANR	228527	Expression	"w -= nw , tx = 0"		226646	1					
ANR	228528	AssignmentExpression	w -= nw		226646	0		-=			
ANR	228529	Identifier	w		226646	0					
ANR	228530	Identifier	nw		226646	1					
ANR	228531	AssignmentExpression	tx = 0		226646	1		=			
ANR	228532	Identifier	tx		226646	0					
ANR	228533	PrimaryExpression	0		226646	1					
ANR	228534	CompoundStatement		329:16:12957:12992	226646	2					
ANR	228535	IdentifierDeclStatement	int dbit = dx & 7 ;	375:16:14904:14921	226646	0	True				
ANR	228536	IdentifierDecl	dbit = dx & 7		226646	0					
ANR	228537	IdentifierDeclType	int		226646	0					
ANR	228538	Identifier	dbit		226646	1					
ANR	228539	AssignmentExpression	dbit = dx & 7		226646	2		=			
ANR	228540	Identifier	dbit		226646	0					
ANR	228541	BitAndExpression	dx & 7		226646	1		&			
ANR	228542	Identifier	dx		226646	0					
ANR	228543	PrimaryExpression	7		226646	1					
ANR	228544	IdentifierDeclStatement	int sbit = sx & 7 ;	376:16:14939:14956	226646	1	True				
ANR	228545	IdentifierDecl	sbit = sx & 7		226646	0					
ANR	228546	IdentifierDeclType	int		226646	0					
ANR	228547	Identifier	sbit		226646	1					
ANR	228548	AssignmentExpression	sbit = sx & 7		226646	2		=			
ANR	228549	Identifier	sbit		226646	0					
ANR	228550	BitAndExpression	sx & 7		226646	1		&			
ANR	228551	Identifier	sx		226646	0					
ANR	228552	PrimaryExpression	7		226646	1					
ANR	228553	IdentifierDeclStatement	int sskew = sbit - dbit ;	377:16:14974:14997	226646	2	True				
ANR	228554	IdentifierDecl	sskew = sbit - dbit		226646	0					
ANR	228555	IdentifierDeclType	int		226646	0					
ANR	228556	Identifier	sskew		226646	1					
ANR	228557	AssignmentExpression	sskew = sbit - dbit		226646	2		=			
ANR	228558	Identifier	sskew		226646	0					
ANR	228559	AdditiveExpression	sbit - dbit		226646	1		-			
ANR	228560	Identifier	sbit		226646	0					
ANR	228561	Identifier	dbit		226646	1					
ANR	228562	IdentifierDeclStatement	int tbit = tx & 7 ;	378:16:15015:15032	226646	3	True				
ANR	228563	IdentifierDecl	tbit = tx & 7		226646	0					
ANR	228564	IdentifierDeclType	int		226646	0					
ANR	228565	Identifier	tbit		226646	1					
ANR	228566	AssignmentExpression	tbit = tx & 7		226646	2		=			
ANR	228567	Identifier	tbit		226646	0					
ANR	228568	BitAndExpression	tx & 7		226646	1		&			
ANR	228569	Identifier	tx		226646	0					
ANR	228570	PrimaryExpression	7		226646	1					
ANR	228571	IdentifierDeclStatement	int tskew = tbit - dbit ;	379:16:15050:15073	226646	4	True				
ANR	228572	IdentifierDecl	tskew = tbit - dbit		226646	0					
ANR	228573	IdentifierDeclType	int		226646	0					
ANR	228574	Identifier	tskew		226646	1					
ANR	228575	AssignmentExpression	tskew = tbit - dbit		226646	2		=			
ANR	228576	Identifier	tskew		226646	0					
ANR	228577	AdditiveExpression	tbit - dbit		226646	1		-			
ANR	228578	Identifier	tbit		226646	0					
ANR	228579	Identifier	dbit		226646	1					
ANR	228580	IdentifierDeclStatement	"int left = nw = min ( w , textures -> size . x - tx ) ;"	380:16:15091:15136	226646	5	True				
ANR	228581	IdentifierDecl	"left = nw = min ( w , textures -> size . x - tx )"		226646	0					
ANR	228582	IdentifierDeclType	int		226646	0					
ANR	228583	Identifier	left		226646	1					
ANR	228584	AssignmentExpression	"left = nw = min ( w , textures -> size . x - tx )"		226646	2		=			
ANR	228585	Identifier	left		226646	0					
ANR	228586	AssignmentExpression	"nw = min ( w , textures -> size . x - tx )"		226646	1		=			
ANR	228587	Identifier	nw		226646	0					
ANR	228588	CallExpression	"min ( w , textures -> size . x - tx )"		226646	1					
ANR	228589	Callee	min		226646	0					
ANR	228590	Identifier	min		226646	0					
ANR	228591	ArgumentList	w		226646	1					
ANR	228592	Argument	w		226646	0					
ANR	228593	Identifier	w		226646	0					
ANR	228594	Argument	textures -> size . x - tx		226646	1					
ANR	228595	AdditiveExpression	textures -> size . x - tx		226646	0		-			
ANR	228596	MemberAccess	textures -> size . x		226646	0					
ANR	228597	PtrMemberAccess	textures -> size		226646	0					
ANR	228598	Identifier	textures		226646	0					
ANR	228599	Identifier	size		226646	1					
ANR	228600	Identifier	x		226646	1					
ANR	228601	Identifier	tx		226646	1					
ANR	228602	IdentifierDeclStatement	byte lmask = 0xff >> dbit ;	381:16:15154:15179	226646	6	True				
ANR	228603	IdentifierDecl	lmask = 0xff >> dbit		226646	0					
ANR	228604	IdentifierDeclType	byte		226646	0					
ANR	228605	Identifier	lmask		226646	1					
ANR	228606	AssignmentExpression	lmask = 0xff >> dbit		226646	2		=			
ANR	228607	Identifier	lmask		226646	0					
ANR	228608	ShiftExpression	0xff >> dbit		226646	1		>>			
ANR	228609	PrimaryExpression	0xff		226646	0					
ANR	228610	Identifier	dbit		226646	1					
ANR	228611	IdentifierDeclStatement	byte rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 ) ;	382:16:15197:15240	226646	7	True				
ANR	228612	IdentifierDecl	rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	0					
ANR	228613	IdentifierDeclType	byte		226646	0					
ANR	228614	Identifier	rmask		226646	1					
ANR	228615	AssignmentExpression	rmask = 0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	2		=			
ANR	228616	Identifier	rmask		226646	0					
ANR	228617	ShiftExpression	0xff << ( ~ ( dbit + nw - 1 ) & 7 )		226646	1		<<			
ANR	228618	PrimaryExpression	0xff		226646	0					
ANR	228619	BitAndExpression	~ ( dbit + nw - 1 ) & 7		226646	1		&			
ANR	228620	UnaryOperationExpression	~ ( dbit + nw - 1 )		226646	0					
ANR	228621	UnaryOperator	~		226646	0					
ANR	228622	AdditiveExpression	dbit + nw - 1		226646	1		+			
ANR	228623	Identifier	dbit		226646	0					
ANR	228624	AdditiveExpression	nw - 1		226646	1		-			
ANR	228625	Identifier	nw		226646	0					
ANR	228626	PrimaryExpression	1		226646	1					
ANR	228627	PrimaryExpression	7		226646	1					
ANR	228628	IdentifierDeclStatement	byte mask = lmask ;	383:16:15258:15275	226646	8	True				
ANR	228629	IdentifierDecl	mask = lmask		226646	0					
ANR	228630	IdentifierDeclType	byte		226646	0					
ANR	228631	Identifier	mask		226646	1					
ANR	228632	AssignmentExpression	mask = lmask		226646	2		=			
ANR	228633	Identifier	lmask		226646	0					
ANR	228634	Identifier	lmask		226646	1					
ANR	228635	IdentifierDeclStatement	int nx = 8 - dbit ;	384:16:15293:15310	226646	9	True				
ANR	228636	IdentifierDecl	nx = 8 - dbit		226646	0					
ANR	228637	IdentifierDeclType	int		226646	0					
ANR	228638	Identifier	nx		226646	1					
ANR	228639	AssignmentExpression	nx = 8 - dbit		226646	2		=			
ANR	228640	Identifier	nx		226646	0					
ANR	228641	AdditiveExpression	8 - dbit		226646	1		-			
ANR	228642	PrimaryExpression	8		226646	0					
ANR	228643	Identifier	dbit		226646	1					
ANR	228644	IdentifierDeclStatement	byte * dptr = drow + ( dx >> 3 ) ;	385:16:15328:15357	226646	10	True				
ANR	228645	IdentifierDecl	* dptr = drow + ( dx >> 3 )		226646	0					
ANR	228646	IdentifierDeclType	byte *		226646	0					
ANR	228647	Identifier	dptr		226646	1					
ANR	228648	AssignmentExpression	* dptr = drow + ( dx >> 3 )		226646	2		=			
ANR	228649	Identifier	dptr		226646	0					
ANR	228650	AdditiveExpression	drow + ( dx >> 3 )		226646	1		+			
ANR	228651	Identifier	drow		226646	0					
ANR	228652	ShiftExpression	dx >> 3		226646	1		>>			
ANR	228653	Identifier	dx		226646	0					
ANR	228654	PrimaryExpression	3		226646	1					
ANR	228655	IdentifierDeclStatement	const byte * sptr = srow + ( sx >> 3 ) ;	386:16:15375:15410	226646	11	True				
ANR	228656	IdentifierDecl	* sptr = srow + ( sx >> 3 )		226646	0					
ANR	228657	IdentifierDeclType	const byte *		226646	0					
ANR	228658	Identifier	sptr		226646	1					
ANR	228659	AssignmentExpression	* sptr = srow + ( sx >> 3 )		226646	2		=			
ANR	228660	Identifier	sptr		226646	0					
ANR	228661	AdditiveExpression	srow + ( sx >> 3 )		226646	1		+			
ANR	228662	Identifier	srow		226646	0					
ANR	228663	ShiftExpression	sx >> 3		226646	1		>>			
ANR	228664	Identifier	sx		226646	0					
ANR	228665	PrimaryExpression	3		226646	1					
ANR	228666	IdentifierDeclStatement	const byte * tptr = trow + ( tx >> 3 ) ;	387:16:15428:15463	226646	12	True				
ANR	228667	IdentifierDecl	* tptr = trow + ( tx >> 3 )		226646	0					
ANR	228668	IdentifierDeclType	const byte *		226646	0					
ANR	228669	Identifier	tptr		226646	1					
ANR	228670	AssignmentExpression	* tptr = trow + ( tx >> 3 )		226646	2		=			
ANR	228671	Identifier	tptr		226646	0					
ANR	228672	AdditiveExpression	trow + ( tx >> 3 )		226646	1		+			
ANR	228673	Identifier	trow		226646	0					
ANR	228674	ShiftExpression	tx >> 3		226646	1		>>			
ANR	228675	Identifier	tx		226646	0					
ANR	228676	PrimaryExpression	3		226646	1					
ANR	228677	IfStatement	if ( sskew < 0 )		226646	13					
ANR	228678	Condition	sskew < 0	389:20:15486:15494	226646	0	True				
ANR	228679	RelationalExpression	sskew < 0		226646	0		<			
ANR	228680	Identifier	sskew		226646	0					
ANR	228681	PrimaryExpression	0		226646	1					
ANR	228682	ExpressionStatement	"-- sptr , sskew += 8"	390:20:15517:15535	226646	1	True				
ANR	228683	Expression	"-- sptr , sskew += 8"		226646	0					
ANR	228684	UnaryExpression	-- sptr		226646	0					
ANR	228685	IncDec	--		226646	0					
ANR	228686	Identifier	sptr		226646	1					
ANR	228687	AssignmentExpression	sskew += 8		226646	1		+=			
ANR	228688	Identifier	sskew		226646	0					
ANR	228689	PrimaryExpression	8		226646	1					
ANR	228690	IfStatement	if ( tskew < 0 )		226646	14					
ANR	228691	Condition	tskew < 0	391:20:15557:15565	226646	0	True				
ANR	228692	RelationalExpression	tskew < 0		226646	0		<			
ANR	228693	Identifier	tskew		226646	0					
ANR	228694	PrimaryExpression	0		226646	1					
ANR	228695	ExpressionStatement	"-- tptr , tskew += 8"	392:20:15588:15606	226646	1	True				
ANR	228696	Expression	"-- tptr , tskew += 8"		226646	0					
ANR	228697	UnaryExpression	-- tptr		226646	0					
ANR	228698	IncDec	--		226646	0					
ANR	228699	Identifier	tptr		226646	1					
ANR	228700	AssignmentExpression	tskew += 8		226646	1		+=			
ANR	228701	Identifier	tskew		226646	0					
ANR	228702	PrimaryExpression	8		226646	1					
ANR	228703	ForStatement	"for ( ; left > 0 ; left -= nx , mask = 0xff , nx = 8 , ++ dptr , ++ sptr , ++ tptr )"		226646	15					
ANR	228704	Condition	left > 0	393:23:15631:15638	226646	0	True				
ANR	228705	RelationalExpression	left > 0		226646	0		>			
ANR	228706	Identifier	left		226646	0					
ANR	228707	PrimaryExpression	0		226646	1					
ANR	228708	Expression	"left -= nx , mask = 0xff , nx = 8 , ++ dptr , ++ sptr , ++ tptr"	394:20:15661:15735	226646	1	True				
ANR	228709	AssignmentExpression	left -= nx		226646	0		-=			
ANR	228710	Identifier	left		226646	0					
ANR	228711	Identifier	nx		226646	1					
ANR	228712	Expression	"mask = 0xff , nx = 8 , ++ dptr , ++ sptr , ++ tptr"		226646	1					
ANR	228713	AssignmentExpression	mask = 0xff		226646	0		=			
ANR	228714	Identifier	mask		226646	0					
ANR	228715	PrimaryExpression	0xff		226646	1					
ANR	228716	Expression	"nx = 8 , ++ dptr , ++ sptr , ++ tptr"		226646	1					
ANR	228717	AssignmentExpression	nx = 8		226646	0		=			
ANR	228718	Identifier	nx		226646	0					
ANR	228719	PrimaryExpression	8		226646	1					
ANR	228720	Expression	"++ dptr , ++ sptr , ++ tptr"		226646	1					
ANR	228721	UnaryExpression	++ dptr		226646	0					
ANR	228722	IncDec	++		226646	0					
ANR	228723	Identifier	dptr		226646	1					
ANR	228724	Expression	"++ sptr , ++ tptr"		226646	1					
ANR	228725	UnaryExpression	++ sptr		226646	0					
ANR	228726	IncDec	++		226646	0					
ANR	228727	Identifier	sptr		226646	1					
ANR	228728	UnaryExpression	++ tptr		226646	1					
ANR	228729	IncDec	++		226646	0					
ANR	228730	Identifier	tptr		226646	1					
ANR	228731	CompoundStatement		346:1:13528:13601	226646	2					
ANR	228732	IdentifierDeclStatement	byte dbyte = * dptr ;	397:20:15781:15799	226646	0	True				
ANR	228733	IdentifierDecl	dbyte = * dptr		226646	0					
ANR	228734	IdentifierDeclType	byte		226646	0					
ANR	228735	Identifier	dbyte		226646	1					
ANR	228736	AssignmentExpression	dbyte = * dptr		226646	2		=			
ANR	228737	Identifier	dbyte		226646	0					
ANR	228738	UnaryOperationExpression	* dptr		226646	1					
ANR	228739	UnaryOperator	*		226646	0					
ANR	228740	Identifier	dptr		226646	1					
ANR	228741	Statement	define	399:1:15803:15808	226646	1	True				
ANR	228742	Statement	fetch1	399:8:15810:15815	226646	2	True				
ANR	228743	Statement	(	399:14:15816:15816	226646	3	True				
ANR	228744	Statement	ptr	399:15:15817:15819	226646	4	True				
ANR	228745	Statement	","	399:18:15820:15820	226646	5	True				
ANR	228746	Statement	skew	399:20:15822:15825	226646	6	True				
ANR	228747	Statement	)	399:24:15826:15826	226646	7	True				
ANR	228748	Statement	(	400:2:15831:15831	226646	8	True				
ANR	228749	Statement	skew	400:3:15832:15835	226646	9	True				
ANR	228750	Statement	?	400:8:15837:15837	226646	10	True				
ANR	228751	Statement	(	400:10:15839:15839	226646	11	True				
ANR	228752	Statement	ptr	400:11:15840:15842	226646	12	True				
ANR	228753	Statement	[	400:14:15843:15843	226646	13	True				
ANR	228754	Statement	0	400:15:15844:15844	226646	14	True				
ANR	228755	Statement	]	400:16:15845:15845	226646	15	True				
ANR	228756	Statement	<<	400:18:15847:15848	226646	16	True				
ANR	228757	Statement	skew	400:21:15850:15853	226646	17	True				
ANR	228758	Statement	)	400:25:15854:15854	226646	18	True				
ANR	228759	Statement	+	400:27:15856:15856	226646	19	True				
ANR	228760	Statement	(	400:29:15858:15858	226646	20	True				
ANR	228761	Statement	ptr	400:30:15859:15861	226646	21	True				
ANR	228762	Statement	[	400:33:15862:15862	226646	22	True				
ANR	228763	Statement	1	400:34:15863:15863	226646	23	True				
ANR	228764	Statement	]	400:35:15864:15864	226646	24	True				
ANR	228765	Statement	>>	400:37:15866:15867	226646	25	True				
ANR	228766	Statement	(	400:40:15869:15869	226646	26	True				
ANR	228767	Statement	8	400:41:15870:15870	226646	27	True				
ANR	228768	Statement	-	400:43:15872:15872	226646	28	True				
ANR	228769	Statement	skew	400:45:15874:15877	226646	29	True				
ANR	228770	Statement	)	400:49:15878:15878	226646	30	True				
ANR	228771	Statement	)	400:50:15879:15879	226646	31	True				
ANR	228772	Statement	:	400:52:15881:15881	226646	32	True				
ANR	228773	Statement	*	400:54:15883:15883	226646	33	True				
ANR	228774	Statement	ptr	400:55:15884:15886	226646	34	True				
ANR	228775	Statement	)	400:58:15887:15887	226646	35	True				
ANR	228776	IdentifierDeclStatement	"byte sbyte = fetch1 ( sptr , sskew ) ;"	401:20:15909:15941	226646	36	True				
ANR	228777	IdentifierDecl	"sbyte = fetch1 ( sptr , sskew )"		226646	0					
ANR	228778	IdentifierDeclType	byte		226646	0					
ANR	228779	Identifier	sbyte		226646	1					
ANR	228780	AssignmentExpression	"sbyte = fetch1 ( sptr , sskew )"		226646	2		=			
ANR	228781	Identifier	sbyte		226646	0					
ANR	228782	CallExpression	"fetch1 ( sptr , sskew )"		226646	1					
ANR	228783	Callee	fetch1		226646	0					
ANR	228784	Identifier	fetch1		226646	0					
ANR	228785	ArgumentList	sptr		226646	1					
ANR	228786	Argument	sptr		226646	0					
ANR	228787	Identifier	sptr		226646	0					
ANR	228788	Argument	sskew		226646	1					
ANR	228789	Identifier	sskew		226646	0					
ANR	228790	IdentifierDeclStatement	"byte tbyte = fetch1 ( tptr , tskew ) ;"	402:20:15963:15995	226646	37	True				
ANR	228791	IdentifierDecl	"tbyte = fetch1 ( tptr , tskew )"		226646	0					
ANR	228792	IdentifierDeclType	byte		226646	0					
ANR	228793	Identifier	tbyte		226646	1					
ANR	228794	AssignmentExpression	"tbyte = fetch1 ( tptr , tskew )"		226646	2		=			
ANR	228795	Identifier	tbyte		226646	0					
ANR	228796	CallExpression	"fetch1 ( tptr , tskew )"		226646	1					
ANR	228797	Callee	fetch1		226646	0					
ANR	228798	Identifier	fetch1		226646	0					
ANR	228799	ArgumentList	tptr		226646	1					
ANR	228800	Argument	tptr		226646	0					
ANR	228801	Identifier	tptr		226646	0					
ANR	228802	Argument	tskew		226646	1					
ANR	228803	Identifier	tskew		226646	0					
ANR	228804	IdentifierDeclStatement	"undef fetch1 byte result = ( * proc ) ( dbyte , sbyte , tbyte ) ;"	404:1:15999:16072	226646	38	True				
ANR	228805	IdentifierDecl	"result = ( * proc ) ( dbyte , sbyte , tbyte )"		226646	0					
ANR	228806	IdentifierDeclType	undef fetch1 byte		226646	0					
ANR	228807	Identifier	result		226646	1					
ANR	228808	AssignmentExpression	"result = ( * proc ) ( dbyte , sbyte , tbyte )"		226646	2		=			
ANR	228809	Identifier	result		226646	0					
ANR	228810	CallExpression	"( * proc ) ( dbyte , sbyte , tbyte )"		226646	1					
ANR	228811	Callee	* proc		226646	0					
ANR	228812	UnaryOperationExpression	* proc		226646	0					
ANR	228813	UnaryOperator	*		226646	0					
ANR	228814	Identifier	proc		226646	1					
ANR	228815	ArgumentList	dbyte		226646	1					
ANR	228816	Argument	dbyte		226646	0					
ANR	228817	Identifier	dbyte		226646	0					
ANR	228818	Argument	sbyte		226646	1					
ANR	228819	Identifier	sbyte		226646	0					
ANR	228820	Argument	tbyte		226646	2					
ANR	228821	Identifier	tbyte		226646	0					
ANR	228822	IfStatement	if ( left <= nx )		226646	39					
ANR	228823	Condition	left <= nx	407:24:16099:16108	226646	0	True				
ANR	228824	RelationalExpression	left <= nx		226646	0		<=			
ANR	228825	Identifier	left		226646	0					
ANR	228826	Identifier	nx		226646	1					
ANR	228827	ExpressionStatement	mask &= rmask	408:24:16135:16148	226646	1	True				
ANR	228828	AssignmentExpression	mask &= rmask		226646	0		&=			
ANR	228829	Identifier	mask		226646	0					
ANR	228830	Identifier	rmask		226646	1					
ANR	228831	ExpressionStatement	* dptr = ( mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask ) )	409:20:16170:16266	226646	40	True				
ANR	228832	AssignmentExpression	* dptr = ( mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask ) )		226646	0		=			
ANR	228833	UnaryOperationExpression	* dptr		226646	0					
ANR	228834	UnaryOperator	*		226646	0					
ANR	228835	Identifier	dptr		226646	1					
ANR	228836	ConditionalExpression	mask == 0xff ? result : ( result & mask ) | ( dbyte & ~mask )		226646	1					
ANR	228837	Condition	mask == 0xff		226646	0					
ANR	228838	EqualityExpression	mask == 0xff		226646	0		==			
ANR	228839	Identifier	mask		226646	0					
ANR	228840	PrimaryExpression	0xff		226646	1					
ANR	228841	Identifier	result		226646	1					
ANR	228842	InclusiveOrExpression	( result & mask ) | ( dbyte & ~mask )		226646	2		|			
ANR	228843	BitAndExpression	result & mask		226646	0		&			
ANR	228844	Identifier	result		226646	0					
ANR	228845	Identifier	mask		226646	1					
ANR	228846	BitAndExpression	dbyte & ~mask		226646	1		&			
ANR	228847	Identifier	dbyte		226646	0					
ANR	228848	Identifier	~mask		226646	1					
ANR	228849	IfStatement	if ( gs_debug_c ( 'B' ) )		226646	19					
ANR	228850	Condition	gs_debug_c ( 'B' )	417:8:16338:16352	226646	0	True				
ANR	228851	CallExpression	gs_debug_c ( 'B' )		226646	0					
ANR	228852	Callee	gs_debug_c		226646	0					
ANR	228853	Identifier	gs_debug_c		226646	0					
ANR	228854	ArgumentList	'B'		226646	1					
ANR	228855	Argument	'B'		226646	0					
ANR	228856	PrimaryExpression	'B'		226646	0					
ANR	228857	ExpressionStatement	"debug_dump_bitmap ( mdev -> memory , scan_line_base ( mdev , y ) , mdev -> raster , height , ""final dest bits"" )"	418:8:16363:16486	226646	1	True				
ANR	228858	CallExpression	"debug_dump_bitmap ( mdev -> memory , scan_line_base ( mdev , y ) , mdev -> raster , height , ""final dest bits"" )"		226646	0					
ANR	228859	Callee	debug_dump_bitmap		226646	0					
ANR	228860	Identifier	debug_dump_bitmap		226646	0					
ANR	228861	ArgumentList	mdev -> memory		226646	1					
ANR	228862	Argument	mdev -> memory		226646	0					
ANR	228863	PtrMemberAccess	mdev -> memory		226646	0					
ANR	228864	Identifier	mdev		226646	0					
ANR	228865	Identifier	memory		226646	1					
ANR	228866	Argument	"scan_line_base ( mdev , y )"		226646	1					
ANR	228867	CallExpression	"scan_line_base ( mdev , y )"		226646	0					
ANR	228868	Callee	scan_line_base		226646	0					
ANR	228869	Identifier	scan_line_base		226646	0					
ANR	228870	ArgumentList	mdev		226646	1					
ANR	228871	Argument	mdev		226646	0					
ANR	228872	Identifier	mdev		226646	0					
ANR	228873	Argument	y		226646	1					
ANR	228874	Identifier	y		226646	0					
ANR	228875	Argument	mdev -> raster		226646	2					
ANR	228876	PtrMemberAccess	mdev -> raster		226646	0					
ANR	228877	Identifier	mdev		226646	0					
ANR	228878	Identifier	raster		226646	1					
ANR	228879	Argument	height		226646	3					
ANR	228880	Identifier	height		226646	0					
ANR	228881	Argument	"""final dest bits"""		226646	4					
ANR	228882	PrimaryExpression	"""final dest bits"""		226646	0					
ANR	228883	ReturnStatement	return 0 ;	421:4:16499:16507	226646	20	True				
ANR	228884	PrimaryExpression	0		226646	0					
ANR	228885	ReturnType	int		226646	1					
ANR	228886	Identifier	mem_mono_strip_copy_rop_dev		226646	2					
ANR	228887	ParameterList	"gx_device * dev , const byte * sdata , int sourcex , uint sraster , gx_bitmap_id id , const gx_color_index * scolors , const gx_strip_bitmap * textures , const gx_color_index * tcolors , int x , int y , int width , int height , int phase_x , int phase_y , gs_logical_operation_t lop"		226646	3					
ANR	228888	Parameter	gx_device * dev	51:28:2005:2019	226646	0	True				
ANR	228889	ParameterType	gx_device *		226646	0					
ANR	228890	Identifier	dev		226646	1					
ANR	228891	Parameter	const byte * sdata	51:45:2022:2039	226646	1	True				
ANR	228892	ParameterType	const byte *		226646	0					
ANR	228893	Identifier	sdata		226646	1					
ANR	228894	Parameter	int sourcex	52:28:2070:2080	226646	2	True				
ANR	228895	ParameterType	int		226646	0					
ANR	228896	Identifier	sourcex		226646	1					
ANR	228897	Parameter	uint sraster	52:40:2082:2093	226646	3	True				
ANR	228898	ParameterType	uint		226646	0					
ANR	228899	Identifier	sraster		226646	1					
ANR	228900	Parameter	gx_bitmap_id id	52:54:2096:2110	226646	4	True				
ANR	228901	ParameterType	gx_bitmap_id		226646	0					
ANR	228902	Identifier	id		226646	1					
ANR	228903	Parameter	const gx_color_index * scolors	53:28:2141:2170	226646	5	True				
ANR	228904	ParameterType	const gx_color_index *		226646	0					
ANR	228905	Identifier	scolors		226646	1					
ANR	228906	Parameter	const gx_strip_bitmap * textures	54:28:2201:2232	226646	6	True				
ANR	228907	ParameterType	const gx_strip_bitmap *		226646	0					
ANR	228908	Identifier	textures		226646	1					
ANR	228909	Parameter	const gx_color_index * tcolors	55:28:2263:2292	226646	7	True				
ANR	228910	ParameterType	const gx_color_index *		226646	0					
ANR	228911	Identifier	tcolors		226646	1					
ANR	228912	Parameter	int x	56:28:2323:2327	226646	8	True				
ANR	228913	ParameterType	int		226646	0					
ANR	228914	Identifier	x		226646	1					
ANR	228915	Parameter	int y	56:35:2330:2334	226646	9	True				
ANR	228916	ParameterType	int		226646	0					
ANR	228917	Identifier	y		226646	1					
ANR	228918	Parameter	int width	56:42:2337:2345	226646	10	True				
ANR	228919	ParameterType	int		226646	0					
ANR	228920	Identifier	width		226646	1					
ANR	228921	Parameter	int height	56:53:2348:2357	226646	11	True				
ANR	228922	ParameterType	int		226646	0					
ANR	228923	Identifier	height		226646	1					
ANR	228924	Parameter	int phase_x	57:28:2388:2398	226646	12	True				
ANR	228925	ParameterType	int		226646	0					
ANR	228926	Identifier	phase_x		226646	1					
ANR	228927	Parameter	int phase_y	57:41:2401:2411	226646	13	True				
ANR	228928	ParameterType	int		226646	0					
ANR	228929	Identifier	phase_y		226646	1					
ANR	228930	Parameter	gs_logical_operation_t lop	58:28:2442:2467	226646	14	True				
ANR	228931	ParameterType	gs_logical_operation_t		226646	0					
ANR	228932	Identifier	lop		226646	1					
ANR	228933	CFGEntryNode	ENTRY		226646		True				
ANR	228934	CFGExitNode	EXIT		226646		True				
ANR	228935	Symbol	dbit		226646						
ANR	228936	Symbol	scolors		226646						
ANR	228937	Symbol	phase_x		226646						
ANR	228938	Symbol	phase_y		226646						
ANR	228939	Symbol	"* dev_proc ( dev , fill_rectangle )"		226646						
ANR	228940	Symbol	x_offset		226646						
ANR	228941	Symbol	color1		226646						
ANR	228942	Symbol	color0		226646						
ANR	228943	Symbol	gx_no_color_index		226646						
ANR	228944	Symbol	dev		226646						
ANR	228945	Symbol	rop3_invert_T		226646						
ANR	228946	Symbol	rop3_invert_S		226646						
ANR	228947	Symbol	id		226646						
ANR	228948	Symbol	"* dev_proc ( dev , strip_tile_rectangle )"		226646						
ANR	228949	Symbol	sdata		226646						
ANR	228950	Symbol	height		226646						
ANR	228951	Symbol	* mdev		226646						
ANR	228952	Symbol	* tcolors		226646						
ANR	228953	Symbol	dptr		226646						
ANR	228954	Symbol	rmask		226646						
ANR	228955	Symbol	fill_rectangle		226646						
ANR	228956	Symbol	c0		226646						
ANR	228957	Symbol	c1		226646						
ANR	228958	Symbol	* proc		226646						
ANR	228959	Symbol	tbit		226646						
ANR	228960	Symbol	sraster		226646						
ANR	228961	Symbol	left		226646						
ANR	228962	Symbol	* textures		226646						
ANR	228963	Symbol	"* dev_proc ( dev , copy_mono )"		226646						
ANR	228964	Symbol	* rop_proc_table		226646						
ANR	228965	Symbol	* dev		226646						
ANR	228966	Symbol	* dptr ++		226646						
ANR	228967	Symbol	* dev_proc		226646						
ANR	228968	Symbol	~mask		226646						
ANR	228969	Symbol	textures -> size . x		226646						
ANR	228970	Symbol	textures -> data		226646						
ANR	228971	Symbol	lop		226646						
ANR	228972	Symbol	rop3_S		226646						
ANR	228973	Symbol	rop3_T		226646						
ANR	228974	Symbol	result		226646						
ANR	228975	Symbol	rop_get_run_op		226646						
ANR	228976	Symbol	rop3_know_T_1		226646						
ANR	228977	Symbol	rop3_know_T_0		226646						
ANR	228978	Symbol	min		226646						
ANR	228979	Symbol	rop3_D		226646						
ANR	228980	Symbol	strip_tile_rectangle		226646						
ANR	228981	Symbol	proc		226646						
ANR	228982	Symbol	line_count		226646						
ANR	228983	Symbol	fetch1		226646						
ANR	228984	Symbol	sx		226646						
ANR	228985	Symbol	textures -> raster		226646						
ANR	228986	Symbol	tcolors		226646						
ANR	228987	Symbol	sskew		226646						
ANR	228988	Symbol	w		226646						
ANR	228989	Symbol	x		226646						
ANR	228990	Symbol	width		226646						
ANR	228991	Symbol	y		226646						
ANR	228992	Symbol	sbyte		226646						
ANR	228993	Symbol	lmask		226646						
ANR	228994	Symbol	textures		226646						
ANR	228995	Symbol	tx		226646						
ANR	228996	Symbol	ty		226646						
ANR	228997	Symbol	textures -> size		226646						
ANR	228998	Symbol	* rop_usage_table		226646						
ANR	228999	Symbol	rop3_know_S_0		226646						
ANR	229000	Symbol	rop_proc_table		226646						
ANR	229001	Symbol	mdev -> raster		226646						
ANR	229002	Symbol	sbit		226646						
ANR	229003	Symbol	mdev -> base		226646						
ANR	229004	Symbol	rop3_know_S_1		226646						
ANR	229005	Symbol	dx		226646						
ANR	229006	Symbol	traster		226646						
ANR	229007	Symbol	gs_debug_c		226646						
ANR	229008	Symbol	NULL		226646						
ANR	229009	Symbol	* scolors		226646						
ANR	229010	Symbol	textures -> rep_width		226646						
ANR	229011	Symbol	& ropper		226646						
ANR	229012	Symbol	sptr		226646						
ANR	229013	Symbol	srow		226646						
ANR	229014	Symbol	ropper		226646						
ANR	229015	Symbol	mdev		226646						
ANR	229016	Symbol	* rop		226646						
ANR	229017	Symbol	~lmask		226646						
ANR	229018	Symbol	sourcex		226646						
ANR	229019	Symbol	dbyte		226646						
ANR	229020	Symbol	nw		226646						
ANR	229021	Symbol	nx		226646						
ANR	229022	Symbol	tptr		226646						
ANR	229023	Symbol	xoff		226646						
ANR	229024	Symbol	trow		226646						
ANR	229025	Symbol	rop		226646						
ANR	229026	Symbol	dev_proc		226646						
ANR	229027	Symbol	copy_mono		226646						
ANR	229028	Symbol	drow		226646						
ANR	229029	Symbol	~rmask		226646						
ANR	229030	Symbol	* dptr		226646						
ANR	229031	Symbol	textures -> rep_height		226646						
ANR	229032	Symbol	mdev -> memory		226646						
ANR	229033	Symbol	mask		226646						
ANR	229034	Symbol	draster		226646						
ANR	229035	Symbol	tskew		226646						
ANR	229036	Symbol	tbyte		226646						
ANR	229037	Symbol	rop_usage_table		226646						
ANR	229038	Symbol	dev -> memory		226646						
ANR	229039	Symbol	scan_line_base		226646						
ANR	229040	DeclStmt									
ANR	229041	Decl							const gx_device_memory	const gx_device_memory	mem_mono_device
ANR	229042	Function	mem_mono_map_rgb_color	444:0:17426:17658							
ANR	229043	FunctionDef	"mem_mono_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		229042	0					
ANR	229044	CompoundStatement		446:0:17515:17658	229042	0					
ANR	229045	Statement	gx_device_memory	447:4:17521:17536	229042	0	True				
ANR	229046	Statement	*	447:21:17538:17538	229042	1	True				
ANR	229047	Statement	const	447:23:17540:17544	229042	2	True				
ANR	229048	ExpressionStatement	mdev = ( gx_device_memory * ) dev	447:29:17546:17576	229042	3	True				
ANR	229049	AssignmentExpression	mdev = ( gx_device_memory * ) dev		229042	0		=			
ANR	229050	Identifier	mdev		229042	0					
ANR	229051	CastExpression	( gx_device_memory * ) dev		229042	1					
ANR	229052	CastTarget	gx_device_memory *		229042	0					
ANR	229053	Identifier	dev		229042	1					
ANR	229054	ReturnStatement	"return ( gx_default_w_b_map_rgb_color ( dev , cv ) ^ mdev -> palette . data [ 0 ] ) & 1 ;"	448:4:17582:17656	229042	4	True				
ANR	229055	BitAndExpression	"( gx_default_w_b_map_rgb_color ( dev , cv ) ^ mdev -> palette . data [ 0 ] ) & 1"		229042	0		&			
ANR	229056	ExclusiveOrExpression	"gx_default_w_b_map_rgb_color ( dev , cv ) ^ mdev -> palette . data [ 0 ]"		229042	0		^			
ANR	229057	CallExpression	"gx_default_w_b_map_rgb_color ( dev , cv )"		229042	0					
ANR	229058	Callee	gx_default_w_b_map_rgb_color		229042	0					
ANR	229059	Identifier	gx_default_w_b_map_rgb_color		229042	0					
ANR	229060	ArgumentList	dev		229042	1					
ANR	229061	Argument	dev		229042	0					
ANR	229062	Identifier	dev		229042	0					
ANR	229063	Argument	cv		229042	1					
ANR	229064	Identifier	cv		229042	0					
ANR	229065	ArrayIndexing	mdev -> palette . data [ 0 ]		229042	1					
ANR	229066	MemberAccess	mdev -> palette . data		229042	0					
ANR	229067	PtrMemberAccess	mdev -> palette		229042	0					
ANR	229068	Identifier	mdev		229042	0					
ANR	229069	Identifier	palette		229042	1					
ANR	229070	Identifier	data		229042	1					
ANR	229071	PrimaryExpression	0		229042	1					
ANR	229072	PrimaryExpression	1		229042	1					
ANR	229073	ReturnType	static gx_color_index		229042	1					
ANR	229074	Identifier	mem_mono_map_rgb_color		229042	2					
ANR	229075	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		229042	3					
ANR	229076	Parameter	gx_device * dev	445:23:17471:17485	229042	0	True				
ANR	229077	ParameterType	gx_device *		229042	0					
ANR	229078	Identifier	dev		229042	1					
ANR	229079	Parameter	const gx_color_value cv [ ]	445:40:17488:17512	229042	1	True				
ANR	229080	ParameterType	const gx_color_value [ ]		229042	0					
ANR	229081	Identifier	cv		229042	1					
ANR	229082	CFGEntryNode	ENTRY		229042		True				
ANR	229083	CFGExitNode	EXIT		229042		True				
ANR	229084	Symbol	cv		229042						
ANR	229085	Symbol	dev		229042						
ANR	229086	Symbol	mdev -> palette . data		229042						
ANR	229087	Symbol	* mdev -> palette		229042						
ANR	229088	Symbol	mdev -> palette		229042						
ANR	229089	Symbol	gx_default_w_b_map_rgb_color		229042						
ANR	229090	Symbol	mdev		229042						
ANR	229091	Symbol	* mdev -> palette . data		229042						
ANR	229092	Symbol	* * mdev		229042						
ANR	229093	Symbol	* mdev		229042						
ANR	229094	Function	mem_mono_map_color_rgb	451:0:17661:18019							
ANR	229095	FunctionDef	"mem_mono_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		229094	0					
ANR	229096	CompoundStatement		454:0:17781:18019	229094	0					
ANR	229097	Statement	gx_device_memory	455:4:17787:17802	229094	0	True				
ANR	229098	Statement	*	455:21:17804:17804	229094	1	True				
ANR	229099	Statement	const	455:23:17806:17810	229094	2	True				
ANR	229100	ExpressionStatement	mdev = ( gx_device_memory * ) dev	455:29:17812:17842	229094	3	True				
ANR	229101	AssignmentExpression	mdev = ( gx_device_memory * ) dev		229094	0		=			
ANR	229102	Identifier	mdev		229094	0					
ANR	229103	CastExpression	( gx_device_memory * ) dev		229094	1					
ANR	229104	CastTarget	gx_device_memory *		229094	0					
ANR	229105	Identifier	dev		229094	1					
ANR	229106	ReturnStatement	"return ( gx_default_w_b_map_color_rgb ( dev , color , prgb ) ^ mdev -> palette . data [ 0 ] ) & 1 ;"	457:4:17934:18017	229094	4	True				
ANR	229107	BitAndExpression	"( gx_default_w_b_map_color_rgb ( dev , color , prgb ) ^ mdev -> palette . data [ 0 ] ) & 1"		229094	0		&			
ANR	229108	ExclusiveOrExpression	"gx_default_w_b_map_color_rgb ( dev , color , prgb ) ^ mdev -> palette . data [ 0 ]"		229094	0		^			
ANR	229109	CallExpression	"gx_default_w_b_map_color_rgb ( dev , color , prgb )"		229094	0					
ANR	229110	Callee	gx_default_w_b_map_color_rgb		229094	0					
ANR	229111	Identifier	gx_default_w_b_map_color_rgb		229094	0					
ANR	229112	ArgumentList	dev		229094	1					
ANR	229113	Argument	dev		229094	0					
ANR	229114	Identifier	dev		229094	0					
ANR	229115	Argument	color		229094	1					
ANR	229116	Identifier	color		229094	0					
ANR	229117	Argument	prgb		229094	2					
ANR	229118	Identifier	prgb		229094	0					
ANR	229119	ArrayIndexing	mdev -> palette . data [ 0 ]		229094	1					
ANR	229120	MemberAccess	mdev -> palette . data		229094	0					
ANR	229121	PtrMemberAccess	mdev -> palette		229094	0					
ANR	229122	Identifier	mdev		229094	0					
ANR	229123	Identifier	palette		229094	1					
ANR	229124	Identifier	data		229094	1					
ANR	229125	PrimaryExpression	0		229094	1					
ANR	229126	PrimaryExpression	1		229094	1					
ANR	229127	ReturnType	static int		229094	1					
ANR	229128	Identifier	mem_mono_map_color_rgb		229094	2					
ANR	229129	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		229094	3					
ANR	229130	Parameter	gx_device * dev	452:23:17695:17709	229094	0	True				
ANR	229131	ParameterType	gx_device *		229094	0					
ANR	229132	Identifier	dev		229094	1					
ANR	229133	Parameter	gx_color_index color	452:40:17712:17731	229094	1	True				
ANR	229134	ParameterType	gx_color_index		229094	0					
ANR	229135	Identifier	color		229094	1					
ANR	229136	Parameter	gx_color_value prgb [ 3 ]	453:23:17757:17778	229094	2	True				
ANR	229137	ParameterType	gx_color_value [ 3 ]		229094	0					
ANR	229138	Identifier	prgb		229094	1					
ANR	229139	CFGEntryNode	ENTRY		229094		True				
ANR	229140	CFGExitNode	EXIT		229094		True				
ANR	229141	Symbol	dev		229094						
ANR	229142	Symbol	color		229094						
ANR	229143	Symbol	mdev -> palette . data		229094						
ANR	229144	Symbol	mdev -> palette		229094						
ANR	229145	Symbol	* mdev -> palette		229094						
ANR	229146	Symbol	prgb		229094						
ANR	229147	Symbol	gx_default_w_b_map_color_rgb		229094						
ANR	229148	Symbol	mdev		229094						
ANR	229149	Symbol	* mdev -> palette . data		229094						
ANR	229150	Symbol	* * mdev		229094						
ANR	229151	Symbol	* mdev		229094						
ANR	229152	Function	mem_mono_fill_rectangle	461:0:18059:18687							
ANR	229153	FunctionDef	"mem_mono_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		229152	0					
ANR	229154	CompoundStatement		464:0:18185:18687	229152	0					
ANR	229155	Statement	gx_device_memory	465:4:18191:18206	229152	0	True				
ANR	229156	Statement	*	465:21:18208:18208	229152	1	True				
ANR	229157	Statement	const	465:23:18210:18214	229152	2	True				
ANR	229158	ExpressionStatement	mdev = ( gx_device_memory * ) dev	465:29:18216:18246	229152	3	True				
ANR	229159	AssignmentExpression	mdev = ( gx_device_memory * ) dev		229152	0		=			
ANR	229160	Identifier	mdev		229152	0					
ANR	229161	CastExpression	( gx_device_memory * ) dev		229152	1					
ANR	229162	CastTarget	gx_device_memory *		229152	0					
ANR	229163	Identifier	dev		229152	1					
ANR	229164	ReturnStatement	"return mem_mono_strip_copy_rop ( dev , NULL , 0 , 0 , gx_no_bitmap_id , NULL , NULL , NULL , x , y , w , h , 0 , 0 , ( color ? rop3_1 : rop3_0 ) ) ;"	468:4:18285:18499	229152	4	True				
ANR	229165	CallExpression	"mem_mono_strip_copy_rop ( dev , NULL , 0 , 0 , gx_no_bitmap_id , NULL , NULL , NULL , x , y , w , h , 0 , 0 , ( color ? rop3_1 : rop3_0 ) )"		229152	0					
ANR	229166	Callee	mem_mono_strip_copy_rop		229152	0					
ANR	229167	Identifier	mem_mono_strip_copy_rop		229152	0					
ANR	229168	ArgumentList	dev		229152	1					
ANR	229169	Argument	dev		229152	0					
ANR	229170	Identifier	dev		229152	0					
ANR	229171	Argument	NULL		229152	1					
ANR	229172	Identifier	NULL		229152	0					
ANR	229173	Argument	0		229152	2					
ANR	229174	PrimaryExpression	0		229152	0					
ANR	229175	Argument	0		229152	3					
ANR	229176	PrimaryExpression	0		229152	0					
ANR	229177	Argument	gx_no_bitmap_id		229152	4					
ANR	229178	Identifier	gx_no_bitmap_id		229152	0					
ANR	229179	Argument	NULL		229152	5					
ANR	229180	Identifier	NULL		229152	0					
ANR	229181	Argument	NULL		229152	6					
ANR	229182	Identifier	NULL		229152	0					
ANR	229183	Argument	NULL		229152	7					
ANR	229184	Identifier	NULL		229152	0					
ANR	229185	Argument	x		229152	8					
ANR	229186	Identifier	x		229152	0					
ANR	229187	Argument	y		229152	9					
ANR	229188	Identifier	y		229152	0					
ANR	229189	Argument	w		229152	10					
ANR	229190	Identifier	w		229152	0					
ANR	229191	Argument	h		229152	11					
ANR	229192	Identifier	h		229152	0					
ANR	229193	Argument	0		229152	12					
ANR	229194	PrimaryExpression	0		229152	0					
ANR	229195	Argument	0		229152	13					
ANR	229196	PrimaryExpression	0		229152	0					
ANR	229197	Argument	color ? rop3_1 : rop3_0		229152	14					
ANR	229198	ConditionalExpression	color ? rop3_1 : rop3_0		229152	0					
ANR	229199	Condition	color		229152	0					
ANR	229200	Identifier	color		229152	0					
ANR	229201	Identifier	rop3_1		229152	1					
ANR	229202	Identifier	rop3_0		229152	2					
ANR	229203	ReturnType	static int		229152	1					
ANR	229204	Identifier	mem_mono_fill_rectangle		229152	2					
ANR	229205	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		229152	3					
ANR	229206	Parameter	gx_device * dev	462:24:18094:18108	229152	0	True				
ANR	229207	ParameterType	gx_device *		229152	0					
ANR	229208	Identifier	dev		229152	1					
ANR	229209	Parameter	int x	462:41:18111:18115	229152	1	True				
ANR	229210	ParameterType	int		229152	0					
ANR	229211	Identifier	x		229152	1					
ANR	229212	Parameter	int y	462:48:18118:18122	229152	2	True				
ANR	229213	ParameterType	int		229152	0					
ANR	229214	Identifier	y		229152	1					
ANR	229215	Parameter	int w	462:55:18125:18129	229152	3	True				
ANR	229216	ParameterType	int		229152	0					
ANR	229217	Identifier	w		229152	1					
ANR	229218	Parameter	int h	462:62:18132:18136	229152	4	True				
ANR	229219	ParameterType	int		229152	0					
ANR	229220	Identifier	h		229152	1					
ANR	229221	Parameter	gx_color_index color	463:24:18163:18182	229152	5	True				
ANR	229222	ParameterType	gx_color_index		229152	0					
ANR	229223	Identifier	color		229152	1					
ANR	229224	CFGEntryNode	ENTRY		229152		True				
ANR	229225	CFGExitNode	EXIT		229152		True				
ANR	229226	Symbol	mem_mono_strip_copy_rop		229152						
ANR	229227	Symbol	gx_no_bitmap_id		229152						
ANR	229228	Symbol	NULL		229152						
ANR	229229	Symbol	dev		229152						
ANR	229230	Symbol	color		229152						
ANR	229231	Symbol	w		229152						
ANR	229232	Symbol	x		229152						
ANR	229233	Symbol	h		229152						
ANR	229234	Symbol	y		229152						
ANR	229235	Symbol	rop3_0		229152						
ANR	229236	Symbol	rop3_1		229152						
ANR	229237	Symbol	mdev		229152						
ANR	229238	DeclStmt									
ANR	229239	Decl							const bits16	const bits16 [ 9 ]	right_masks2
ANR	229240	DeclStmt									
ANR	229241	Decl							const bits16	const bits16 [ 9 ]	left_masks2
ANR	229242	ClassDef	<unnamed>	549:8:21080:21152							
ANR	229243	DeclStmt									
ANR	229244	Decl									copy_function
ANR	229245	ClassDef	<unnamed>	552:8:21162:21220							
ANR	229246	DeclStmt									
ANR	229247	Decl							int	int	invert
ANR	229248	DeclStmt									
ANR	229249	Decl							copy_function	copy_function	op
ANR	229250	DeclStmt									
ANR	229251	Decl									copy_mode
ANR	229252	DeclStmt									
ANR	229253	Decl							const copy_mode	const copy_mode [ 16 ]	copy_modes
ANR	229254	Function	mem_mono_copy_mono	585:0:22254:31408							
ANR	229255	FunctionDef	"mem_mono_copy_mono (gx_device * dev , const byte * source_data , int source_x , int source_raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1)"		229254	0					
ANR	229256	CompoundStatement		589:0:22455:31408	229254	0					
ANR	229257	Statement	define	594:1:22634:22639	229254	0	True				
ANR	229258	Statement	CINVERT	594:8:22641:22647	229254	1	True				
ANR	229259	Statement	(	594:15:22648:22648	229254	2	True				
ANR	229260	Statement	bits	594:16:22649:22652	229254	3	True				
ANR	229261	Statement	)	594:20:22653:22653	229254	4	True				
ANR	229262	Statement	(	594:22:22655:22655	229254	5	True				
ANR	229263	Statement	(	594:23:22656:22656	229254	6	True				
ANR	229264	Statement	bits	594:24:22657:22660	229254	7	True				
ANR	229265	Statement	)	594:28:22661:22661	229254	8	True				
ANR	229266	Statement	^	594:30:22663:22663	229254	9	True				
ANR	229267	Statement	invert	594:32:22665:22670	229254	10	True				
ANR	229268	Statement	)	594:38:22671:22671	229254	11	True				
ANR	229269	Statement	define	595:1:22674:22679	229254	12	True				
ANR	229270	Statement	WRITE_OR_MASKED	595:8:22681:22695	229254	13	True				
ANR	229271	Statement	(	595:23:22696:22696	229254	14	True				
ANR	229272	Statement	bits	595:24:22697:22700	229254	15	True				
ANR	229273	Statement	","	595:28:22701:22701	229254	16	True				
ANR	229274	Statement	mask	595:30:22703:22706	229254	17	True				
ANR	229275	Statement	","	595:34:22707:22707	229254	18	True				
ANR	229276	Statement	off	595:36:22709:22711	229254	19	True				
ANR	229277	Statement	)	595:39:22712:22712	229254	20	True				
ANR	229278	Statement	optr	596:2:22717:22720	229254	21	True				
ANR	229279	Statement	[	596:6:22721:22721	229254	22	True				
ANR	229280	Statement	off	596:7:22722:22724	229254	23	True				
ANR	229281	Statement	]	596:10:22725:22725	229254	24	True				
ANR	229282	Statement	|=	596:12:22727:22728	229254	25	True				
ANR	229283	Statement	(	596:15:22730:22730	229254	26	True				
ANR	229284	Statement	CINVERT	596:16:22731:22737	229254	27	True				
ANR	229285	Statement	(	596:23:22738:22738	229254	28	True				
ANR	229286	Statement	bits	596:24:22739:22742	229254	29	True				
ANR	229287	Statement	)	596:28:22743:22743	229254	30	True				
ANR	229288	Statement	&	596:30:22745:22745	229254	31	True				
ANR	229289	Statement	mask	596:32:22747:22750	229254	32	True				
ANR	229290	Statement	)	596:36:22751:22751	229254	33	True				
ANR	229291	Statement	define	597:1:22754:22759	229254	34	True				
ANR	229292	Statement	WRITE_STORE_MASKED	597:8:22761:22778	229254	35	True				
ANR	229293	Statement	(	597:26:22779:22779	229254	36	True				
ANR	229294	Statement	bits	597:27:22780:22783	229254	37	True				
ANR	229295	Statement	","	597:31:22784:22784	229254	38	True				
ANR	229296	Statement	mask	597:33:22786:22789	229254	39	True				
ANR	229297	Statement	","	597:37:22790:22790	229254	40	True				
ANR	229298	Statement	off	597:39:22792:22794	229254	41	True				
ANR	229299	Statement	)	597:42:22795:22795	229254	42	True				
ANR	229300	Statement	optr	598:2:22800:22803	229254	43	True				
ANR	229301	Statement	[	598:6:22804:22804	229254	44	True				
ANR	229302	Statement	off	598:7:22805:22807	229254	45	True				
ANR	229303	Statement	]	598:10:22808:22808	229254	46	True				
ANR	229304	Statement	=	598:12:22810:22810	229254	47	True				
ANR	229305	Statement	(	598:14:22812:22812	229254	48	True				
ANR	229306	Statement	(	598:15:22813:22813	229254	49	True				
ANR	229307	Statement	optr	598:16:22814:22817	229254	50	True				
ANR	229308	Statement	[	598:20:22818:22818	229254	51	True				
ANR	229309	Statement	off	598:21:22819:22821	229254	52	True				
ANR	229310	Statement	]	598:24:22822:22822	229254	53	True				
ANR	229311	Statement	&	598:26:22824:22824	229254	54	True				
ANR	229312	Statement	~mask	598:28:22826:22830	229254	55	True				
ANR	229313	Statement	)	598:33:22831:22831	229254	56	True				
ANR	229314	Statement	|	598:35:22833:22833	229254	57	True				
ANR	229315	Statement	(	598:37:22835:22835	229254	58	True				
ANR	229316	Statement	CINVERT	598:38:22836:22842	229254	59	True				
ANR	229317	Statement	(	598:45:22843:22843	229254	60	True				
ANR	229318	Statement	bits	598:46:22844:22847	229254	61	True				
ANR	229319	Statement	)	598:50:22848:22848	229254	62	True				
ANR	229320	Statement	&	598:52:22850:22850	229254	63	True				
ANR	229321	Statement	mask	598:54:22852:22855	229254	64	True				
ANR	229322	Statement	)	598:58:22856:22856	229254	65	True				
ANR	229323	Statement	)	598:59:22857:22857	229254	66	True				
ANR	229324	Statement	define	599:1:22860:22865	229254	67	True				
ANR	229325	Statement	WRITE_AND_MASKED	599:8:22867:22882	229254	68	True				
ANR	229326	Statement	(	599:24:22883:22883	229254	69	True				
ANR	229327	Statement	bits	599:25:22884:22887	229254	70	True				
ANR	229328	Statement	","	599:29:22888:22888	229254	71	True				
ANR	229329	Statement	mask	599:31:22890:22893	229254	72	True				
ANR	229330	Statement	","	599:35:22894:22894	229254	73	True				
ANR	229331	Statement	off	599:37:22896:22898	229254	74	True				
ANR	229332	Statement	)	599:40:22899:22899	229254	75	True				
ANR	229333	Statement	optr	600:2:22904:22907	229254	76	True				
ANR	229334	Statement	[	600:6:22908:22908	229254	77	True				
ANR	229335	Statement	off	600:7:22909:22911	229254	78	True				
ANR	229336	Statement	]	600:10:22912:22912	229254	79	True				
ANR	229337	Statement	&=	600:12:22914:22915	229254	80	True				
ANR	229338	Statement	(	600:15:22917:22917	229254	81	True				
ANR	229339	Statement	CINVERT	600:16:22918:22924	229254	82	True				
ANR	229340	Statement	(	600:23:22925:22925	229254	83	True				
ANR	229341	Statement	bits	600:24:22926:22929	229254	84	True				
ANR	229342	Statement	)	600:28:22930:22930	229254	85	True				
ANR	229343	Statement	|	600:30:22932:22932	229254	86	True				
ANR	229344	Statement	~mask	600:32:22934:22938	229254	87	True				
ANR	229345	Statement	)	600:37:22939:22939	229254	88	True				
ANR	229346	Statement	define	602:1:22980:22985	229254	89	True				
ANR	229347	Statement	WRITE_OR	602:8:22987:22994	229254	90	True				
ANR	229348	Statement	(	602:16:22995:22995	229254	91	True				
ANR	229349	Statement	bits	602:17:22996:22999	229254	92	True				
ANR	229350	Statement	)	602:21:23000:23000	229254	93	True				
ANR	229351	Statement	*	602:24:23003:23003	229254	94	True				
ANR	229352	Statement	optr	602:25:23004:23007	229254	95	True				
ANR	229353	Statement	|=	602:30:23009:23010	229254	96	True				
ANR	229354	Statement	CINVERT	602:33:23012:23018	229254	97	True				
ANR	229355	Statement	(	602:40:23019:23019	229254	98	True				
ANR	229356	Statement	bits	602:41:23020:23023	229254	99	True				
ANR	229357	Statement	)	602:45:23024:23024	229254	100	True				
ANR	229358	Statement	define	603:1:23027:23032	229254	101	True				
ANR	229359	Statement	WRITE_STORE	603:8:23034:23044	229254	102	True				
ANR	229360	Statement	(	603:19:23045:23045	229254	103	True				
ANR	229361	Statement	bits	603:20:23046:23049	229254	104	True				
ANR	229362	Statement	)	603:24:23050:23050	229254	105	True				
ANR	229363	Statement	*	603:26:23052:23052	229254	106	True				
ANR	229364	Statement	optr	603:27:23053:23056	229254	107	True				
ANR	229365	Statement	=	603:32:23058:23058	229254	108	True				
ANR	229366	Statement	CINVERT	603:34:23060:23066	229254	109	True				
ANR	229367	Statement	(	603:41:23067:23067	229254	110	True				
ANR	229368	Statement	bits	603:42:23068:23071	229254	111	True				
ANR	229369	Statement	)	603:46:23072:23072	229254	112	True				
ANR	229370	Statement	define	604:1:23075:23080	229254	113	True				
ANR	229371	Statement	WRITE_AND	604:8:23082:23090	229254	114	True				
ANR	229372	Statement	(	604:17:23091:23091	229254	115	True				
ANR	229373	Statement	bits	604:18:23092:23095	229254	116	True				
ANR	229374	Statement	)	604:22:23096:23096	229254	117	True				
ANR	229375	Statement	*	604:24:23098:23098	229254	118	True				
ANR	229376	Statement	optr	604:25:23099:23102	229254	119	True				
ANR	229377	Statement	&=	604:30:23104:23105	229254	120	True				
ANR	229378	Statement	CINVERT	604:33:23107:23113	229254	121	True				
ANR	229379	Statement	(	604:40:23114:23114	229254	122	True				
ANR	229380	Statement	bits	604:41:23115:23118	229254	123	True				
ANR	229381	Statement	)	604:45:23119:23119	229254	124	True				
ANR	229382	Statement	gx_device_memory	606:4:23126:23141	229254	125	True				
ANR	229383	Statement	*	606:21:23143:23143	229254	126	True				
ANR	229384	Statement	const	606:23:23145:23149	229254	127	True				
ANR	229385	ExpressionStatement	mdev = ( gx_device_memory * ) dev	606:29:23151:23181	229254	128	True				
ANR	229386	AssignmentExpression	mdev = ( gx_device_memory * ) dev		229254	0		=			
ANR	229387	Identifier	mdev		229254	0					
ANR	229388	CastExpression	( gx_device_memory * ) dev		229254	1					
ANR	229389	CastTarget	gx_device_memory *		229254	0					
ANR	229390	Identifier	dev		229254	1					
ANR	229391	Statement	register	607:4:23187:23194	229254	129	True				
ANR	229392	IdentifierDeclStatement	const byte * bptr ;	607:13:23196:23212	229254	130	True				
ANR	229393	IdentifierDecl	* bptr		229254	0					
ANR	229394	IdentifierDeclType	const byte *		229254	0					
ANR	229395	Identifier	bptr		229254	1					
ANR	229396	IdentifierDeclStatement	"int dbit , wleft ;"	608:4:23241:23256	229254	131	True				
ANR	229397	IdentifierDecl	dbit		229254	0					
ANR	229398	IdentifierDeclType	int		229254	0					
ANR	229399	Identifier	dbit		229254	1					
ANR	229400	IdentifierDecl	wleft		229254	1					
ANR	229401	IdentifierDeclType	int		229254	0					
ANR	229402	Identifier	wleft		229254	1					
ANR	229403	IdentifierDeclStatement	uint mask ;	609:4:23262:23271	229254	132	True				
ANR	229404	IdentifierDecl	mask		229254	0					
ANR	229405	IdentifierDeclType	uint		229254	0					
ANR	229406	Identifier	mask		229254	1					
ANR	229407	IdentifierDeclStatement	copy_mode mode ;	610:4:23277:23291	229254	133	True				
ANR	229408	IdentifierDecl	mode		229254	0					
ANR	229409	IdentifierDeclType	copy_mode		229254	0					
ANR	229410	Identifier	mode		229254	1					
ANR	229411	Statement	DECLARE_SCAN_PTR_VARS	612:4:23298:23318	229254	134	True				
ANR	229412	Statement	(	612:25:23319:23319	229254	135	True				
ANR	229413	Statement	dbptr	612:26:23320:23324	229254	136	True				
ANR	229414	Statement	","	612:31:23325:23325	229254	137	True				
ANR	229415	Statement	byte	612:33:23327:23330	229254	138	True				
ANR	229416	Statement	*	612:38:23332:23332	229254	139	True				
ANR	229417	Statement	","	612:39:23333:23333	229254	140	True				
ANR	229418	Statement	dest_raster	612:41:23335:23345	229254	141	True				
ANR	229419	Statement	)	612:52:23346:23346	229254	142	True				
ANR	229420	ExpressionStatement		612:53:23347:23347	229254	143	True				
ANR	229421	Statement	define	613:1:23350:23355	229254	144	True				
ANR	229422	Statement	optr	613:8:23357:23360	229254	145	True				
ANR	229423	Statement	(	613:13:23362:23362	229254	146	True				
ANR	229424	Statement	(	613:14:23363:23363	229254	147	True				
ANR	229425	Statement	chunk	613:15:23364:23368	229254	148	True				
ANR	229426	Statement	*	613:21:23370:23370	229254	149	True				
ANR	229427	Statement	)	613:22:23371:23371	229254	150	True				
ANR	229428	Statement	dbptr	613:23:23372:23376	229254	151	True				
ANR	229429	Statement	)	613:28:23377:23377	229254	152	True				
ANR	229430	Statement	register	614:4:23383:23390	229254	153	True				
ANR	229431	IdentifierDeclStatement	int skew ;	614:13:23392:23400	229254	154	True				
ANR	229432	IdentifierDecl	skew		229254	0					
ANR	229433	IdentifierDeclType	int		229254	0					
ANR	229434	Identifier	skew		229254	1					
ANR	229435	Statement	register	615:4:23406:23413	229254	155	True				
ANR	229436	IdentifierDeclStatement	uint invert ;	615:13:23415:23426	229254	156	True				
ANR	229437	IdentifierDecl	invert		229254	0					
ANR	229438	IdentifierDeclType	uint		229254	0					
ANR	229439	Identifier	invert		229254	1					
ANR	229440	ExpressionStatement	"fit_copy ( dev , source_data , source_x , source_raster , id , x , y , w , h )"	617:4:23433:23500	229254	157	True				
ANR	229441	CallExpression	"fit_copy ( dev , source_data , source_x , source_raster , id , x , y , w , h )"		229254	0					
ANR	229442	Callee	fit_copy		229254	0					
ANR	229443	Identifier	fit_copy		229254	0					
ANR	229444	ArgumentList	dev		229254	1					
ANR	229445	Argument	dev		229254	0					
ANR	229446	Identifier	dev		229254	0					
ANR	229447	Argument	source_data		229254	1					
ANR	229448	Identifier	source_data		229254	0					
ANR	229449	Argument	source_x		229254	2					
ANR	229450	Identifier	source_x		229254	0					
ANR	229451	Argument	source_raster		229254	3					
ANR	229452	Identifier	source_raster		229254	0					
ANR	229453	Argument	id		229254	4					
ANR	229454	Identifier	id		229254	0					
ANR	229455	Argument	x		229254	5					
ANR	229456	Identifier	x		229254	0					
ANR	229457	Argument	y		229254	6					
ANR	229458	Identifier	y		229254	0					
ANR	229459	Argument	w		229254	7					
ANR	229460	Identifier	w		229254	0					
ANR	229461	Argument	h		229254	8					
ANR	229462	Identifier	h		229254	0					
ANR	229463	IfStatement	if ( w >= 32 )		229254	158					
ANR	229464	Condition	w >= 32	619:8:23542:23548	229254	0	True				
ANR	229465	RelationalExpression	w >= 32		229254	0		>=			
ANR	229466	Identifier	w		229254	0					
ANR	229467	PrimaryExpression	32		229254	1					
ANR	229468	CompoundStatement		31:17:1095:1095	229254	1					
ANR	229469	ReturnStatement	"return mem_mono_strip_copy_rop_dev ( dev , source_data , source_x , source_raster , id , NULL , NULL , NULL , x , y , w , h , 0 , 0 , ( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_S ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_S ) ) ;"	620:8:23561:24151	229254	0	True				
ANR	229470	CallExpression	"mem_mono_strip_copy_rop_dev ( dev , source_data , source_x , source_raster , id , NULL , NULL , NULL , x , y , w , h , 0 , 0 , ( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_S ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_S ) )"		229254	0					
ANR	229471	Callee	mem_mono_strip_copy_rop_dev		229254	0					
ANR	229472	Identifier	mem_mono_strip_copy_rop_dev		229254	0					
ANR	229473	ArgumentList	dev		229254	1					
ANR	229474	Argument	dev		229254	0					
ANR	229475	Identifier	dev		229254	0					
ANR	229476	Argument	source_data		229254	1					
ANR	229477	Identifier	source_data		229254	0					
ANR	229478	Argument	source_x		229254	2					
ANR	229479	Identifier	source_x		229254	0					
ANR	229480	Argument	source_raster		229254	3					
ANR	229481	Identifier	source_raster		229254	0					
ANR	229482	Argument	id		229254	4					
ANR	229483	Identifier	id		229254	0					
ANR	229484	Argument	NULL		229254	5					
ANR	229485	Identifier	NULL		229254	0					
ANR	229486	Argument	NULL		229254	6					
ANR	229487	Identifier	NULL		229254	0					
ANR	229488	Argument	NULL		229254	7					
ANR	229489	Identifier	NULL		229254	0					
ANR	229490	Argument	x		229254	8					
ANR	229491	Identifier	x		229254	0					
ANR	229492	Argument	y		229254	9					
ANR	229493	Identifier	y		229254	0					
ANR	229494	Argument	w		229254	10					
ANR	229495	Identifier	w		229254	0					
ANR	229496	Argument	h		229254	11					
ANR	229497	Identifier	h		229254	0					
ANR	229498	Argument	0		229254	12					
ANR	229499	PrimaryExpression	0		229254	0					
ANR	229500	Argument	0		229254	13					
ANR	229501	PrimaryExpression	0		229254	0					
ANR	229502	Argument	( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_S ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_S )		229254	14					
ANR	229503	InclusiveOrExpression	( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_S ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_S )		229254	0		|			
ANR	229504	BitAndExpression	( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_S		229254	0		&			
ANR	229505	ConditionalExpression	color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1		229254	0					
ANR	229506	Condition	color0 == gx_no_color_index		229254	0					
ANR	229507	EqualityExpression	color0 == gx_no_color_index		229254	0		==			
ANR	229508	Identifier	color0		229254	0					
ANR	229509	Identifier	gx_no_color_index		229254	1					
ANR	229510	Identifier	rop3_D		229254	1					
ANR	229511	ConditionalExpression	color0 == 0 ? rop3_0 : rop3_1		229254	2					
ANR	229512	Condition	color0 == 0		229254	0					
ANR	229513	EqualityExpression	color0 == 0		229254	0		==			
ANR	229514	Identifier	color0		229254	0					
ANR	229515	PrimaryExpression	0		229254	1					
ANR	229516	Identifier	rop3_0		229254	1					
ANR	229517	Identifier	rop3_1		229254	2					
ANR	229518	Identifier	~rop3_S		229254	1					
ANR	229519	BitAndExpression	( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_S		229254	1		&			
ANR	229520	ConditionalExpression	color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1		229254	0					
ANR	229521	Condition	color1 == gx_no_color_index		229254	0					
ANR	229522	EqualityExpression	color1 == gx_no_color_index		229254	0		==			
ANR	229523	Identifier	color1		229254	0					
ANR	229524	Identifier	gx_no_color_index		229254	1					
ANR	229525	Identifier	rop3_D		229254	1					
ANR	229526	ConditionalExpression	color1 == 0 ? rop3_0 : rop3_1		229254	2					
ANR	229527	Condition	color1 == 0		229254	0					
ANR	229528	EqualityExpression	color1 == 0		229254	0		==			
ANR	229529	Identifier	color1		229254	0					
ANR	229530	PrimaryExpression	0		229254	1					
ANR	229531	Identifier	rop3_0		229254	1					
ANR	229532	Identifier	rop3_1		229254	2					
ANR	229533	Identifier	rop3_S		229254	1					
ANR	229534	IfStatement	if ( color0 == gx_no_color_index )		229254	159					
ANR	229535	Condition	color0 == gx_no_color_index	631:8:24259:24285	229254	0	True				
ANR	229536	EqualityExpression	color0 == gx_no_color_index		229254	0		==			
ANR	229537	Identifier	color0		229254	0					
ANR	229538	Identifier	gx_no_color_index		229254	1					
ANR	229539	ExpressionStatement	color0 = - 1	632:8:24296:24307	229254	1	True				
ANR	229540	AssignmentExpression	color0 = - 1		229254	0		=			
ANR	229541	Identifier	color0		229254	0					
ANR	229542	UnaryOperationExpression	- 1		229254	1					
ANR	229543	UnaryOperator	-		229254	0					
ANR	229544	PrimaryExpression	1		229254	1					
ANR	229545	IfStatement	if ( color1 == gx_no_color_index )		229254	160					
ANR	229546	Condition	color1 == gx_no_color_index	633:8:24317:24343	229254	0	True				
ANR	229547	EqualityExpression	color1 == gx_no_color_index		229254	0		==			
ANR	229548	Identifier	color1		229254	0					
ANR	229549	Identifier	gx_no_color_index		229254	1					
ANR	229550	ExpressionStatement	color1 = - 1	634:8:24354:24365	229254	1	True				
ANR	229551	AssignmentExpression	color1 = - 1		229254	0		=			
ANR	229552	Identifier	color1		229254	0					
ANR	229553	UnaryOperationExpression	- 1		229254	1					
ANR	229554	UnaryOperator	-		229254	0					
ANR	229555	PrimaryExpression	1		229254	1					
ANR	229556	ExpressionStatement	mode = copy_modes [ ( ( int ) color0 << 2 ) + ( int ) color1 + 5 ]	636:4:24378:24433	229254	161	True				
ANR	229557	AssignmentExpression	mode = copy_modes [ ( ( int ) color0 << 2 ) + ( int ) color1 + 5 ]		229254	0		=			
ANR	229558	Identifier	mode		229254	0					
ANR	229559	ArrayIndexing	copy_modes [ ( ( int ) color0 << 2 ) + ( int ) color1 + 5 ]		229254	1					
ANR	229560	Identifier	copy_modes		229254	0					
ANR	229561	AdditiveExpression	( ( int ) color0 << 2 ) + ( int ) color1 + 5		229254	1		+			
ANR	229562	ShiftExpression	( int ) color0 << 2		229254	0		<<			
ANR	229563	CastExpression	( int ) color0		229254	0					
ANR	229564	CastTarget	int		229254	0					
ANR	229565	Identifier	color0		229254	1					
ANR	229566	PrimaryExpression	2		229254	1					
ANR	229567	AdditiveExpression	( int ) color1 + 5		229254	1		+			
ANR	229568	CastExpression	( int ) color1		229254	0					
ANR	229569	CastTarget	int		229254	0					
ANR	229570	Identifier	color1		229254	1					
ANR	229571	PrimaryExpression	5		229254	1					
ANR	229572	ExpressionStatement	invert = ( uint ) mode . invert	637:4:24439:24465	229254	162	True				
ANR	229573	AssignmentExpression	invert = ( uint ) mode . invert		229254	0		=			
ANR	229574	Identifier	invert		229254	0					
ANR	229575	CastExpression	( uint ) mode . invert		229254	1					
ANR	229576	CastTarget	uint		229254	0					
ANR	229577	MemberAccess	mode . invert		229254	1					
ANR	229578	Identifier	mode		229254	0					
ANR	229579	Identifier	invert		229254	1					
ANR	229580	Statement	SETUP_RECT_VARS	638:4:24491:24505	229254	163	True				
ANR	229581	Statement	(	638:19:24506:24506	229254	164	True				
ANR	229582	Statement	dbptr	638:20:24507:24511	229254	165	True				
ANR	229583	Statement	","	638:25:24512:24512	229254	166	True				
ANR	229584	Statement	byte	638:27:24514:24517	229254	167	True				
ANR	229585	Statement	*	638:32:24519:24519	229254	168	True				
ANR	229586	Statement	","	638:33:24520:24520	229254	169	True				
ANR	229587	Statement	dest_raster	638:35:24522:24532	229254	170	True				
ANR	229588	Statement	)	638:46:24533:24533	229254	171	True				
ANR	229589	ExpressionStatement		638:47:24534:24534	229254	172	True				
ANR	229590	ExpressionStatement	bptr = source_data + ( ( source_x & ~chunk_align_bit_mask ) >> 3 )	639:4:24540:24602	229254	173	True				
ANR	229591	AssignmentExpression	bptr = source_data + ( ( source_x & ~chunk_align_bit_mask ) >> 3 )		229254	0		=			
ANR	229592	Identifier	bptr		229254	0					
ANR	229593	AdditiveExpression	source_data + ( ( source_x & ~chunk_align_bit_mask ) >> 3 )		229254	1		+			
ANR	229594	Identifier	source_data		229254	0					
ANR	229595	ShiftExpression	( source_x & ~chunk_align_bit_mask ) >> 3		229254	1		>>			
ANR	229596	BitAndExpression	source_x & ~chunk_align_bit_mask		229254	0		&			
ANR	229597	Identifier	source_x		229254	0					
ANR	229598	Identifier	~chunk_align_bit_mask		229254	1					
ANR	229599	PrimaryExpression	3		229254	1					
ANR	229600	ExpressionStatement	dbit = x & chunk_align_bit_mask	640:4:24608:24639	229254	174	True				
ANR	229601	AssignmentExpression	dbit = x & chunk_align_bit_mask		229254	0		=			
ANR	229602	Identifier	dbit		229254	0					
ANR	229603	BitAndExpression	x & chunk_align_bit_mask		229254	1		&			
ANR	229604	Identifier	x		229254	0					
ANR	229605	Identifier	chunk_align_bit_mask		229254	1					
ANR	229606	ExpressionStatement	skew = dbit - ( source_x & chunk_align_bit_mask )	641:4:24645:24692	229254	175	True				
ANR	229607	AssignmentExpression	skew = dbit - ( source_x & chunk_align_bit_mask )		229254	0		=			
ANR	229608	Identifier	skew		229254	0					
ANR	229609	AdditiveExpression	dbit - ( source_x & chunk_align_bit_mask )		229254	1		-			
ANR	229610	Identifier	dbit		229254	0					
ANR	229611	BitAndExpression	source_x & chunk_align_bit_mask		229254	1		&			
ANR	229612	Identifier	source_x		229254	0					
ANR	229613	Identifier	chunk_align_bit_mask		229254	1					
ANR	229614	Statement	define	644:1:24740:24745	229254	176	True				
ANR	229615	Statement	NEXT_X_CHUNK	644:8:24747:24758	229254	177	True				
ANR	229616	Statement	(	644:20:24759:24759	229254	178	True				
ANR	229617	Statement	)	644:21:24760:24760	229254	179	True				
ANR	229618	ExpressionStatement	bptr += chunk_bytes	645:2:24765:24784	229254	180	True				
ANR	229619	AssignmentExpression	bptr += chunk_bytes		229254	0		+=			
ANR	229620	Identifier	bptr		229254	0					
ANR	229621	Identifier	chunk_bytes		229254	1					
ANR	229622	Statement	dbptr	645:23:24786:24790	229254	181	True				
ANR	229623	Statement	+=	645:29:24792:24793	229254	182	True				
ANR	229624	Statement	chunk_bytes	645:32:24795:24805	229254	183	True				
ANR	229625	Statement	define	647:1:24858:24863	229254	184	True				
ANR	229626	Statement	END_Y_LOOP	647:8:24865:24874	229254	185	True				
ANR	229627	Statement	(	647:18:24875:24875	229254	186	True				
ANR	229628	Statement	sdelta	647:19:24876:24881	229254	187	True				
ANR	229629	Statement	","	647:25:24882:24882	229254	188	True				
ANR	229630	Statement	ddelta	647:27:24884:24889	229254	189	True				
ANR	229631	Statement	)	647:33:24890:24890	229254	190	True				
ANR	229632	ExpressionStatement	bptr += sdelta	648:2:24895:24909	229254	191	True				
ANR	229633	AssignmentExpression	bptr += sdelta		229254	0		+=			
ANR	229634	Identifier	bptr		229254	0					
ANR	229635	Identifier	sdelta		229254	1					
ANR	229636	Statement	dbptr	648:18:24911:24915	229254	192	True				
ANR	229637	Statement	+=	648:24:24917:24918	229254	193	True				
ANR	229638	Statement	ddelta	648:27:24920:24925	229254	194	True				
ANR	229639	IfStatement	if ( ( wleft = w + dbit - chunk_bits ) <= 0 )		229254	195					
ANR	229640	Condition	( wleft = w + dbit - chunk_bits ) <= 0	650:8:24936:24971	229254	0	True				
ANR	229641	RelationalExpression	( wleft = w + dbit - chunk_bits ) <= 0		229254	0		<=			
ANR	229642	AssignmentExpression	wleft = w + dbit - chunk_bits		229254	0		=			
ANR	229643	Identifier	wleft		229254	0					
ANR	229644	AdditiveExpression	w + dbit - chunk_bits		229254	1		+			
ANR	229645	Identifier	w		229254	0					
ANR	229646	AdditiveExpression	dbit - chunk_bits		229254	1		-			
ANR	229647	Identifier	dbit		229254	0					
ANR	229648	Identifier	chunk_bits		229254	1					
ANR	229649	PrimaryExpression	0		229254	1					
ANR	229650	CompoundStatement		62:46:2518:2518	229254	1					
ANR	229651	ExpressionStatement	"set_mono_thin_mask ( mask , w , dbit )"	651:8:25052:25085	229254	0	True				
ANR	229652	CallExpression	"set_mono_thin_mask ( mask , w , dbit )"		229254	0					
ANR	229653	Callee	set_mono_thin_mask		229254	0					
ANR	229654	Identifier	set_mono_thin_mask		229254	0					
ANR	229655	ArgumentList	mask		229254	1					
ANR	229656	Argument	mask		229254	0					
ANR	229657	Identifier	mask		229254	0					
ANR	229658	Argument	w		229254	1					
ANR	229659	Identifier	w		229254	0					
ANR	229660	Argument	dbit		229254	2					
ANR	229661	Identifier	dbit		229254	0					
ANR	229662	Statement	define	653:1:25089:25094	229254	1	True				
ANR	229663	Statement	WRITE_SINGLE	653:8:25096:25107	229254	2	True				
ANR	229664	Statement	(	653:20:25108:25108	229254	3	True				
ANR	229665	Statement	wr_op	653:21:25109:25113	229254	4	True				
ANR	229666	Statement	","	653:26:25114:25114	229254	5	True				
ANR	229667	Statement	src	653:28:25116:25118	229254	6	True				
ANR	229668	Statement	)	653:31:25119:25119	229254	7	True				
ANR	229669	ForStatement	for ( ; ; )		229254	8					
ANR	229670	CompoundStatement		67:3:2684:2684	229254	0					
ANR	229671	ExpressionStatement	"wr_op ( src , mask , 0 )"	655:5:25142:25161	229254	0	True				
ANR	229672	CallExpression	"wr_op ( src , mask , 0 )"		229254	0					
ANR	229673	Callee	wr_op		229254	0					
ANR	229674	Identifier	wr_op		229254	0					
ANR	229675	ArgumentList	src		229254	1					
ANR	229676	Argument	src		229254	0					
ANR	229677	Identifier	src		229254	0					
ANR	229678	Argument	mask		229254	1					
ANR	229679	Identifier	mask		229254	0					
ANR	229680	Argument	0		229254	2					
ANR	229681	PrimaryExpression	0		229254	0					
ANR	229682	IfStatement	if ( -- h == 0 )		229254	1					
ANR	229683	Condition	-- h == 0	656:10:25174:25181	229254	0	True				
ANR	229684	EqualityExpression	-- h == 0		229254	0		==			
ANR	229685	UnaryExpression	-- h		229254	0					
ANR	229686	IncDec	--		229254	0					
ANR	229687	Identifier	h		229254	1					
ANR	229688	PrimaryExpression	0		229254	1					
ANR	229689	BreakStatement	break ;	656:21:25185:25190	229254	1	True				
ANR	229690	ExpressionStatement	"END_Y_LOOP ( source_raster , dest_raster )"	657:5:25198:25236	229254	2	True				
ANR	229691	CallExpression	"END_Y_LOOP ( source_raster , dest_raster )"		229254	0					
ANR	229692	Callee	END_Y_LOOP		229254	0					
ANR	229693	Identifier	END_Y_LOOP		229254	0					
ANR	229694	ArgumentList	source_raster		229254	1					
ANR	229695	Argument	source_raster		229254	0					
ANR	229696	Identifier	source_raster		229254	0					
ANR	229697	Argument	dest_raster		229254	1					
ANR	229698	Identifier	dest_raster		229254	0					
ANR	229699	Statement	define	660:1:25246:25251	229254	9	True				
ANR	229700	Statement	WRITE1_LOOP	660:8:25253:25263	229254	10	True				
ANR	229701	Statement	(	660:19:25264:25264	229254	11	True				
ANR	229702	Statement	src	660:20:25265:25267	229254	12	True				
ANR	229703	Statement	)	660:23:25268:25268	229254	13	True				
ANR	229704	SwitchStatement	switch ( mode . op )		229254	14					
ANR	229705	Condition	mode . op	661:11:25282:25288	229254	0	True				
ANR	229706	MemberAccess	mode . op		229254	0					
ANR	229707	Identifier	mode		229254	0					
ANR	229708	Identifier	op		229254	1					
ANR	229709	CompoundStatement		73:21:2836:2836	229254	1					
ANR	229710	Label	case COPY_OR :	662:4:25299:25311	229254	0	True				
ANR	229711	Identifier	COPY_OR		229254	0					
ANR	229712	ExpressionStatement	"WRITE_SINGLE ( WRITE_OR_MASKED , src )"	662:18:25313:25347	229254	1	True				
ANR	229713	CallExpression	"WRITE_SINGLE ( WRITE_OR_MASKED , src )"		229254	0					
ANR	229714	Callee	WRITE_SINGLE		229254	0					
ANR	229715	Identifier	WRITE_SINGLE		229254	0					
ANR	229716	ArgumentList	WRITE_OR_MASKED		229254	1					
ANR	229717	Argument	WRITE_OR_MASKED		229254	0					
ANR	229718	Identifier	WRITE_OR_MASKED		229254	0					
ANR	229719	Argument	src		229254	1					
ANR	229720	Identifier	src		229254	0					
ANR	229721	BreakStatement	break ;	662:54:25349:25354	229254	2	True				
ANR	229722	Label	case COPY_STORE :	663:4:25361:25376	229254	3	True				
ANR	229723	Identifier	COPY_STORE		229254	0					
ANR	229724	ExpressionStatement	"WRITE_SINGLE ( WRITE_STORE_MASKED , src )"	663:21:25378:25415	229254	4	True				
ANR	229725	CallExpression	"WRITE_SINGLE ( WRITE_STORE_MASKED , src )"		229254	0					
ANR	229726	Callee	WRITE_SINGLE		229254	0					
ANR	229727	Identifier	WRITE_SINGLE		229254	0					
ANR	229728	ArgumentList	WRITE_STORE_MASKED		229254	1					
ANR	229729	Argument	WRITE_STORE_MASKED		229254	0					
ANR	229730	Identifier	WRITE_STORE_MASKED		229254	0					
ANR	229731	Argument	src		229254	1					
ANR	229732	Identifier	src		229254	0					
ANR	229733	BreakStatement	break ;	663:60:25417:25422	229254	5	True				
ANR	229734	Label	case COPY_AND :	664:4:25429:25442	229254	6	True				
ANR	229735	Identifier	COPY_AND		229254	0					
ANR	229736	ExpressionStatement	"WRITE_SINGLE ( WRITE_AND_MASKED , src )"	664:19:25444:25479	229254	7	True				
ANR	229737	CallExpression	"WRITE_SINGLE ( WRITE_AND_MASKED , src )"		229254	0					
ANR	229738	Callee	WRITE_SINGLE		229254	0					
ANR	229739	Identifier	WRITE_SINGLE		229254	0					
ANR	229740	ArgumentList	WRITE_AND_MASKED		229254	1					
ANR	229741	Argument	WRITE_AND_MASKED		229254	0					
ANR	229742	Identifier	WRITE_AND_MASKED		229254	0					
ANR	229743	Argument	src		229254	1					
ANR	229744	Identifier	src		229254	0					
ANR	229745	BreakStatement	break ;	664:56:25481:25486	229254	8	True				
ANR	229746	Label	default :	665:4:25493:25500	229254	9	True				
ANR	229747	Identifier	default		229254	0					
ANR	229748	ReturnStatement	return FUNNY_CASE ( ) ;	665:13:25502:25521	229254	10	True				
ANR	229749	CallExpression	FUNNY_CASE ( )		229254	0					
ANR	229750	Callee	FUNNY_CASE		229254	0					
ANR	229751	Identifier	FUNNY_CASE		229254	0					
ANR	229752	ArgumentList			229254	1					
ANR	229753	IfStatement	if ( skew >= 0 )		229254	15					
ANR	229754	Condition	skew >= 0	668:12:25541:25549	229254	0	True				
ANR	229755	RelationalExpression	skew >= 0		229254	0		>=			
ANR	229756	Identifier	skew		229254	0					
ANR	229757	PrimaryExpression	0		229254	1					
ANR	229758	CompoundStatement		80:23:3096:3096	229254	1					
ANR	229759	IfStatement	if ( skew == 0 )		229254	0					
ANR	229760	Condition	skew == 0	669:16:25616:25624	229254	0	True				
ANR	229761	EqualityExpression	skew == 0		229254	0		==			
ANR	229762	Identifier	skew		229254	0					
ANR	229763	PrimaryExpression	0		229254	1					
ANR	229764	CompoundStatement		81:27:3171:3171	229254	1					
ANR	229765	ExpressionStatement	WRITE1_LOOP ( CFETCH_ALIGNED ( bptr ) )	670:16:25663:25696	229254	0	True				
ANR	229766	CallExpression	WRITE1_LOOP ( CFETCH_ALIGNED ( bptr ) )		229254	0					
ANR	229767	Callee	WRITE1_LOOP		229254	0					
ANR	229768	Identifier	WRITE1_LOOP		229254	0					
ANR	229769	ArgumentList	CFETCH_ALIGNED ( bptr )		229254	1					
ANR	229770	Argument	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	229771	CallExpression	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	229772	Callee	CFETCH_ALIGNED		229254	0					
ANR	229773	Identifier	CFETCH_ALIGNED		229254	0					
ANR	229774	ArgumentList	bptr		229254	1					
ANR	229775	Argument	bptr		229254	0					
ANR	229776	Identifier	bptr		229254	0					
ANR	229777	ElseStatement	else		229254	0					
ANR	229778	CompoundStatement		85:16:3330:3359	229254	0					
ANR	229779	IdentifierDeclStatement	int cskew = chunk_bits - skew ;	673:16:25786:25815	229254	0	True				
ANR	229780	IdentifierDecl	cskew = chunk_bits - skew		229254	0					
ANR	229781	IdentifierDeclType	int		229254	0					
ANR	229782	Identifier	cskew		229254	1					
ANR	229783	AssignmentExpression	cskew = chunk_bits - skew		229254	2		=			
ANR	229784	Identifier	cskew		229254	0					
ANR	229785	AdditiveExpression	chunk_bits - skew		229254	1		-			
ANR	229786	Identifier	chunk_bits		229254	0					
ANR	229787	Identifier	skew		229254	1					
ANR	229788	ExpressionStatement	"WRITE1_LOOP ( CFETCH_RIGHT ( bptr , skew , cskew ) )"	676:16:25841:25885	229254	1	True				
ANR	229789	CallExpression	"WRITE1_LOOP ( CFETCH_RIGHT ( bptr , skew , cskew ) )"		229254	0					
ANR	229790	Callee	WRITE1_LOOP		229254	0					
ANR	229791	Identifier	WRITE1_LOOP		229254	0					
ANR	229792	ArgumentList	"CFETCH_RIGHT ( bptr , skew , cskew )"		229254	1					
ANR	229793	Argument	"CFETCH_RIGHT ( bptr , skew , cskew )"		229254	0					
ANR	229794	CallExpression	"CFETCH_RIGHT ( bptr , skew , cskew )"		229254	0					
ANR	229795	Callee	CFETCH_RIGHT		229254	0					
ANR	229796	Identifier	CFETCH_RIGHT		229254	0					
ANR	229797	ArgumentList	bptr		229254	1					
ANR	229798	Argument	bptr		229254	0					
ANR	229799	Identifier	bptr		229254	0					
ANR	229800	Argument	skew		229254	1					
ANR	229801	Identifier	skew		229254	0					
ANR	229802	Argument	cskew		229254	2					
ANR	229803	Identifier	cskew		229254	0					
ANR	229804	ElseStatement	else		229254	0					
ANR	229805	IfStatement	if ( wleft <= skew )		229254	0					
ANR	229806	Condition	wleft <= skew	678:19:25920:25932	229254	0	True				
ANR	229807	RelationalExpression	wleft <= skew		229254	0		<=			
ANR	229808	Identifier	wleft		229254	0					
ANR	229809	Identifier	skew		229254	1					
ANR	229810	CompoundStatement		92:12:3554:3583	229254	1					
ANR	229811	IdentifierDeclStatement	int cskew = chunk_bits + skew ;	680:12:26010:26039	229254	0	True				
ANR	229812	IdentifierDecl	cskew = chunk_bits + skew		229254	0					
ANR	229813	IdentifierDeclType	int		229254	0					
ANR	229814	Identifier	cskew		229254	1					
ANR	229815	AssignmentExpression	cskew = chunk_bits + skew		229254	2		=			
ANR	229816	Identifier	cskew		229254	0					
ANR	229817	AdditiveExpression	chunk_bits + skew		229254	1		+			
ANR	229818	Identifier	chunk_bits		229254	0					
ANR	229819	Identifier	skew		229254	1					
ANR	229820	ExpressionStatement	skew = - skew	683:12:26061:26073	229254	1	True				
ANR	229821	AssignmentExpression	skew = - skew		229254	0		=			
ANR	229822	Identifier	skew		229254	0					
ANR	229823	UnaryOperationExpression	- skew		229254	1					
ANR	229824	UnaryOperator	-		229254	0					
ANR	229825	Identifier	skew		229254	1					
ANR	229826	ExpressionStatement	"WRITE1_LOOP ( CFETCH_LEFT ( bptr , skew , cskew ) )"	684:12:26087:26130	229254	2	True				
ANR	229827	CallExpression	"WRITE1_LOOP ( CFETCH_LEFT ( bptr , skew , cskew ) )"		229254	0					
ANR	229828	Callee	WRITE1_LOOP		229254	0					
ANR	229829	Identifier	WRITE1_LOOP		229254	0					
ANR	229830	ArgumentList	"CFETCH_LEFT ( bptr , skew , cskew )"		229254	1					
ANR	229831	Argument	"CFETCH_LEFT ( bptr , skew , cskew )"		229254	0					
ANR	229832	CallExpression	"CFETCH_LEFT ( bptr , skew , cskew )"		229254	0					
ANR	229833	Callee	CFETCH_LEFT		229254	0					
ANR	229834	Identifier	CFETCH_LEFT		229254	0					
ANR	229835	ArgumentList	bptr		229254	1					
ANR	229836	Argument	bptr		229254	0					
ANR	229837	Identifier	bptr		229254	0					
ANR	229838	Argument	skew		229254	1					
ANR	229839	Identifier	skew		229254	0					
ANR	229840	Argument	cskew		229254	2					
ANR	229841	Identifier	cskew		229254	0					
ANR	229842	ElseStatement	else		229254	0					
ANR	229843	CompoundStatement		98:12:3743:3760	229254	0					
ANR	229844	IdentifierDeclStatement	int cskew = - skew ;	686:12:26199:26216	229254	0	True				
ANR	229845	IdentifierDecl	cskew = - skew		229254	0					
ANR	229846	IdentifierDeclType	int		229254	0					
ANR	229847	Identifier	cskew		229254	1					
ANR	229848	AssignmentExpression	cskew = - skew		229254	2		=			
ANR	229849	Identifier	cskew		229254	0					
ANR	229850	UnaryOperationExpression	- skew		229254	1					
ANR	229851	UnaryOperator	-		229254	0					
ANR	229852	Identifier	skew		229254	1					
ANR	229853	ExpressionStatement	skew += chunk_bits	688:12:26231:26249	229254	1	True				
ANR	229854	AssignmentExpression	skew += chunk_bits		229254	0		+=			
ANR	229855	Identifier	skew		229254	0					
ANR	229856	Identifier	chunk_bits		229254	1					
ANR	229857	ExpressionStatement	"WRITE1_LOOP ( CFETCH2 ( bptr , cskew , skew ) )"	689:12:26263:26302	229254	2	True				
ANR	229858	CallExpression	"WRITE1_LOOP ( CFETCH2 ( bptr , cskew , skew ) )"		229254	0					
ANR	229859	Callee	WRITE1_LOOP		229254	0					
ANR	229860	Identifier	WRITE1_LOOP		229254	0					
ANR	229861	ArgumentList	"CFETCH2 ( bptr , cskew , skew )"		229254	1					
ANR	229862	Argument	"CFETCH2 ( bptr , cskew , skew )"		229254	0					
ANR	229863	CallExpression	"CFETCH2 ( bptr , cskew , skew )"		229254	0					
ANR	229864	Callee	CFETCH2		229254	0					
ANR	229865	Identifier	CFETCH2		229254	0					
ANR	229866	ArgumentList	bptr		229254	1					
ANR	229867	Argument	bptr		229254	0					
ANR	229868	Identifier	bptr		229254	0					
ANR	229869	Argument	cskew		229254	1					
ANR	229870	Identifier	cskew		229254	0					
ANR	229871	Argument	skew		229254	2					
ANR	229872	Identifier	skew		229254	0					
ANR	229873	Statement	undef	691:1:26315:26319	229254	16	True				
ANR	229874	Statement	WRITE1_LOOP	691:7:26321:26331	229254	17	True				
ANR	229875	Statement	undef	692:1:26334:26338	229254	18	True				
ANR	229876	Statement	WRITE_SINGLE	692:7:26340:26351	229254	19	True				
ANR	229877	ElseStatement	else		229254	0					
ANR	229878	IfStatement	if ( wleft <= skew )		229254	0					
ANR	229879	Condition	wleft <= skew	693:15:26368:26380	229254	0	True				
ANR	229880	RelationalExpression	wleft <= skew		229254	0		<=			
ANR	229881	Identifier	wleft		229254	0					
ANR	229882	Identifier	skew		229254	1					
ANR	229883	CompoundStatement		109:8:4105:4134	229254	1					
ANR	229884	IdentifierDeclStatement	uint rmask ;	696:8:26541:26551	229254	0	True				
ANR	229885	IdentifierDecl	rmask		229254	0					
ANR	229886	IdentifierDeclType	uint		229254	0					
ANR	229887	Identifier	rmask		229254	1					
ANR	229888	IdentifierDeclStatement	int cskew = chunk_bits - skew ;	697:8:26561:26590	229254	1	True				
ANR	229889	IdentifierDecl	cskew = chunk_bits - skew		229254	0					
ANR	229890	IdentifierDeclType	int		229254	0					
ANR	229891	Identifier	cskew		229254	1					
ANR	229892	AssignmentExpression	cskew = chunk_bits - skew		229254	2		=			
ANR	229893	Identifier	cskew		229254	0					
ANR	229894	AdditiveExpression	chunk_bits - skew		229254	1		-			
ANR	229895	Identifier	chunk_bits		229254	0					
ANR	229896	Identifier	skew		229254	1					
ANR	229897	ExpressionStatement	"set_mono_left_mask ( mask , dbit )"	699:8:26601:26631	229254	2	True				
ANR	229898	CallExpression	"set_mono_left_mask ( mask , dbit )"		229254	0					
ANR	229899	Callee	set_mono_left_mask		229254	0					
ANR	229900	Identifier	set_mono_left_mask		229254	0					
ANR	229901	ArgumentList	mask		229254	1					
ANR	229902	Argument	mask		229254	0					
ANR	229903	Identifier	mask		229254	0					
ANR	229904	Argument	dbit		229254	1					
ANR	229905	Identifier	dbit		229254	0					
ANR	229906	ExpressionStatement	"set_mono_right_mask ( rmask , wleft )"	700:8:26641:26674	229254	3	True				
ANR	229907	CallExpression	"set_mono_right_mask ( rmask , wleft )"		229254	0					
ANR	229908	Callee	set_mono_right_mask		229254	0					
ANR	229909	Identifier	set_mono_right_mask		229254	0					
ANR	229910	ArgumentList	rmask		229254	1					
ANR	229911	Argument	rmask		229254	0					
ANR	229912	Identifier	rmask		229254	0					
ANR	229913	Argument	wleft		229254	1					
ANR	229914	Identifier	wleft		229254	0					
ANR	229915	Statement	undef	701:1:26677:26681	229254	4	True				
ANR	229916	Statement	CINVERT	701:7:26683:26689	229254	5	True				
ANR	229917	Statement	define	702:1:26692:26697	229254	6	True				
ANR	229918	Statement	CINVERT	702:8:26699:26705	229254	7	True				
ANR	229919	Statement	(	702:15:26706:26706	229254	8	True				
ANR	229920	Statement	bits	702:16:26707:26710	229254	9	True				
ANR	229921	Statement	)	702:20:26711:26711	229254	10	True				
ANR	229922	Statement	(	702:22:26713:26713	229254	11	True				
ANR	229923	Statement	bits	702:23:26714:26717	229254	12	True				
ANR	229924	Statement	)	702:27:26718:26718	229254	13	True				
ANR	229925	Statement	define	705:3:26806:26811	229254	14	True				
ANR	229926	Statement	WRITE_1TO2	705:10:26813:26822	229254	15	True				
ANR	229927	Statement	(	705:20:26823:26823	229254	16	True				
ANR	229928	Statement	wr_op	705:21:26824:26828	229254	17	True				
ANR	229929	Statement	)	705:26:26829:26829	229254	18	True				
ANR	229930	ForStatement	for ( ; ; )		229254	19					
ANR	229931	CompoundStatement		119:14:4405:4446	229254	0					
ANR	229932	Statement	register	707:5:26852:26859	229254	0	True				
ANR	229933	IdentifierDeclStatement	uint bits = CFETCH_ALIGNED ( bptr ) ^ invert ;	707:14:26861:26902	229254	1	True				
ANR	229934	IdentifierDecl	bits = CFETCH_ALIGNED ( bptr ) ^ invert		229254	0					
ANR	229935	IdentifierDeclType	uint		229254	0					
ANR	229936	Identifier	bits		229254	1					
ANR	229937	AssignmentExpression	bits = CFETCH_ALIGNED ( bptr ) ^ invert		229254	2		=			
ANR	229938	Identifier	bits		229254	0					
ANR	229939	ExclusiveOrExpression	CFETCH_ALIGNED ( bptr ) ^ invert		229254	1		^			
ANR	229940	CallExpression	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	229941	Callee	CFETCH_ALIGNED		229254	0					
ANR	229942	Identifier	CFETCH_ALIGNED		229254	0					
ANR	229943	ArgumentList	bptr		229254	1					
ANR	229944	Argument	bptr		229254	0					
ANR	229945	Identifier	bptr		229254	0					
ANR	229946	Identifier	invert		229254	1					
ANR	229947	ExpressionStatement	"wr_op ( bits >> skew , mask , 0 )"	708:5:26910:26938	229254	2	True				
ANR	229948	CallExpression	"wr_op ( bits >> skew , mask , 0 )"		229254	0					
ANR	229949	Callee	wr_op		229254	0					
ANR	229950	Identifier	wr_op		229254	0					
ANR	229951	ArgumentList	bits >> skew		229254	1					
ANR	229952	Argument	bits >> skew		229254	0					
ANR	229953	ShiftExpression	bits >> skew		229254	0		>>			
ANR	229954	Identifier	bits		229254	0					
ANR	229955	Identifier	skew		229254	1					
ANR	229956	Argument	mask		229254	1					
ANR	229957	Identifier	mask		229254	0					
ANR	229958	Argument	0		229254	2					
ANR	229959	PrimaryExpression	0		229254	0					
ANR	229960	ExpressionStatement	"wr_op ( bits << cskew , rmask , 1 )"	709:5:26946:26976	229254	3	True				
ANR	229961	CallExpression	"wr_op ( bits << cskew , rmask , 1 )"		229254	0					
ANR	229962	Callee	wr_op		229254	0					
ANR	229963	Identifier	wr_op		229254	0					
ANR	229964	ArgumentList	bits << cskew		229254	1					
ANR	229965	Argument	bits << cskew		229254	0					
ANR	229966	ShiftExpression	bits << cskew		229254	0		<<			
ANR	229967	Identifier	bits		229254	0					
ANR	229968	Identifier	cskew		229254	1					
ANR	229969	Argument	rmask		229254	1					
ANR	229970	Identifier	rmask		229254	0					
ANR	229971	Argument	1		229254	2					
ANR	229972	PrimaryExpression	1		229254	0					
ANR	229973	IfStatement	if ( -- h == 0 )		229254	4					
ANR	229974	Condition	-- h == 0	710:10:26989:26996	229254	0	True				
ANR	229975	EqualityExpression	-- h == 0		229254	0		==			
ANR	229976	UnaryExpression	-- h		229254	0					
ANR	229977	IncDec	--		229254	0					
ANR	229978	Identifier	h		229254	1					
ANR	229979	PrimaryExpression	0		229254	1					
ANR	229980	BreakStatement	break ;	710:21:27000:27005	229254	1	True				
ANR	229981	ExpressionStatement	"END_Y_LOOP ( source_raster , dest_raster )"	711:5:27013:27051	229254	5	True				
ANR	229982	CallExpression	"END_Y_LOOP ( source_raster , dest_raster )"		229254	0					
ANR	229983	Callee	END_Y_LOOP		229254	0					
ANR	229984	Identifier	END_Y_LOOP		229254	0					
ANR	229985	ArgumentList	source_raster		229254	1					
ANR	229986	Argument	source_raster		229254	0					
ANR	229987	Identifier	source_raster		229254	0					
ANR	229988	Argument	dest_raster		229254	1					
ANR	229989	Identifier	dest_raster		229254	0					
ANR	229990	SwitchStatement	switch ( mode . op )		229254	20					
ANR	229991	Condition	mode . op	723:16:27361:27367	229254	0	True				
ANR	229992	MemberAccess	mode . op		229254	0					
ANR	229993	Identifier	mode		229254	0					
ANR	229994	Identifier	op		229254	1					
ANR	229995	CompoundStatement		135:25:4914:4914	229254	1					
ANR	229996	Label	case COPY_OR :	724:12:27384:27396	229254	0	True				
ANR	229997	Identifier	COPY_OR		229254	0					
ANR	229998	ExpressionStatement	WRITE_1TO2 ( WRITE_OR_MASKED )	725:16:27414:27441	229254	1	True				
ANR	229999	CallExpression	WRITE_1TO2 ( WRITE_OR_MASKED )		229254	0					
ANR	230000	Callee	WRITE_1TO2		229254	0					
ANR	230001	Identifier	WRITE_1TO2		229254	0					
ANR	230002	ArgumentList	WRITE_OR_MASKED		229254	1					
ANR	230003	Argument	WRITE_OR_MASKED		229254	0					
ANR	230004	Identifier	WRITE_OR_MASKED		229254	0					
ANR	230005	BreakStatement	break ;	726:16:27459:27464	229254	2	True				
ANR	230006	Label	case COPY_STORE :	727:12:27478:27493	229254	3	True				
ANR	230007	Identifier	COPY_STORE		229254	0					
ANR	230008	ExpressionStatement	WRITE_1TO2 ( WRITE_STORE_MASKED )	728:16:27511:27541	229254	4	True				
ANR	230009	CallExpression	WRITE_1TO2 ( WRITE_STORE_MASKED )		229254	0					
ANR	230010	Callee	WRITE_1TO2		229254	0					
ANR	230011	Identifier	WRITE_1TO2		229254	0					
ANR	230012	ArgumentList	WRITE_STORE_MASKED		229254	1					
ANR	230013	Argument	WRITE_STORE_MASKED		229254	0					
ANR	230014	Identifier	WRITE_STORE_MASKED		229254	0					
ANR	230015	BreakStatement	break ;	729:16:27559:27564	229254	5	True				
ANR	230016	Label	case COPY_AND :	730:12:27578:27591	229254	6	True				
ANR	230017	Identifier	COPY_AND		229254	0					
ANR	230018	ExpressionStatement	WRITE_1TO2 ( WRITE_AND_MASKED )	731:16:27609:27637	229254	7	True				
ANR	230019	CallExpression	WRITE_1TO2 ( WRITE_AND_MASKED )		229254	0					
ANR	230020	Callee	WRITE_1TO2		229254	0					
ANR	230021	Identifier	WRITE_1TO2		229254	0					
ANR	230022	ArgumentList	WRITE_AND_MASKED		229254	1					
ANR	230023	Argument	WRITE_AND_MASKED		229254	0					
ANR	230024	Identifier	WRITE_AND_MASKED		229254	0					
ANR	230025	BreakStatement	break ;	732:16:27655:27660	229254	8	True				
ANR	230026	Label	default :	733:12:27674:27681	229254	9	True				
ANR	230027	Identifier	default		229254	0					
ANR	230028	ReturnStatement	return FUNNY_CASE ( ) ;	734:16:27699:27718	229254	10	True				
ANR	230029	CallExpression	FUNNY_CASE ( )		229254	0					
ANR	230030	Callee	FUNNY_CASE		229254	0					
ANR	230031	Identifier	FUNNY_CASE		229254	0					
ANR	230032	ArgumentList			229254	1					
ANR	230033	Statement	undef	736:1:27731:27735	229254	21	True				
ANR	230034	Statement	CINVERT	736:7:27737:27743	229254	22	True				
ANR	230035	Statement	define	737:1:27746:27751	229254	23	True				
ANR	230036	Statement	CINVERT	737:8:27753:27759	229254	24	True				
ANR	230037	Statement	(	737:15:27760:27760	229254	25	True				
ANR	230038	Statement	bits	737:16:27761:27764	229254	26	True				
ANR	230039	Statement	)	737:20:27765:27765	229254	27	True				
ANR	230040	Statement	(	737:22:27767:27767	229254	28	True				
ANR	230041	Statement	(	737:23:27768:27768	229254	29	True				
ANR	230042	Statement	bits	737:24:27769:27772	229254	30	True				
ANR	230043	Statement	)	737:28:27773:27773	229254	31	True				
ANR	230044	Statement	^	737:30:27775:27775	229254	32	True				
ANR	230045	Statement	invert	737:32:27777:27782	229254	33	True				
ANR	230046	Statement	)	737:38:27783:27783	229254	34	True				
ANR	230047	Statement	undef	738:1:27786:27790	229254	35	True				
ANR	230048	Statement	WRITE_1TO2	738:7:27792:27801	229254	36	True				
ANR	230049	ElseStatement	else		229254	0					
ANR	230050	CompoundStatement		157:17:5651:5660	229254	0					
ANR	230051	IdentifierDeclStatement	uint rmask ;	741:8:27940:27950	229254	0	True				
ANR	230052	IdentifierDecl	rmask		229254	0					
ANR	230053	IdentifierDeclType	uint		229254	0					
ANR	230054	Identifier	rmask		229254	1					
ANR	230055	IdentifierDeclStatement	int words = ( wleft & ~chunk_bit_mask ) >> 3 ;	742:8:27960:28002	229254	1	True				
ANR	230056	IdentifierDecl	words = ( wleft & ~chunk_bit_mask ) >> 3		229254	0					
ANR	230057	IdentifierDeclType	int		229254	0					
ANR	230058	Identifier	words		229254	1					
ANR	230059	AssignmentExpression	words = ( wleft & ~chunk_bit_mask ) >> 3		229254	2		=			
ANR	230060	Identifier	words		229254	0					
ANR	230061	ShiftExpression	( wleft & ~chunk_bit_mask ) >> 3		229254	1		>>			
ANR	230062	BitAndExpression	wleft & ~chunk_bit_mask		229254	0		&			
ANR	230063	Identifier	wleft		229254	0					
ANR	230064	Identifier	~chunk_bit_mask		229254	1					
ANR	230065	PrimaryExpression	3		229254	1					
ANR	230066	IdentifierDeclStatement	uint sskip = source_raster - words ;	743:8:28012:28046	229254	2	True				
ANR	230067	IdentifierDecl	sskip = source_raster - words		229254	0					
ANR	230068	IdentifierDeclType	uint		229254	0					
ANR	230069	Identifier	sskip		229254	1					
ANR	230070	AssignmentExpression	sskip = source_raster - words		229254	2		=			
ANR	230071	Identifier	sskip		229254	0					
ANR	230072	AdditiveExpression	source_raster - words		229254	1		-			
ANR	230073	Identifier	source_raster		229254	0					
ANR	230074	Identifier	words		229254	1					
ANR	230075	IdentifierDeclStatement	uint dskip = dest_raster - words ;	744:8:28056:28088	229254	3	True				
ANR	230076	IdentifierDecl	dskip = dest_raster - words		229254	0					
ANR	230077	IdentifierDeclType	uint		229254	0					
ANR	230078	Identifier	dskip		229254	1					
ANR	230079	AssignmentExpression	dskip = dest_raster - words		229254	2		=			
ANR	230080	Identifier	dskip		229254	0					
ANR	230081	AdditiveExpression	dest_raster - words		229254	1		-			
ANR	230082	Identifier	dest_raster		229254	0					
ANR	230083	Identifier	words		229254	1					
ANR	230084	Statement	register	745:8:28098:28105	229254	4	True				
ANR	230085	IdentifierDeclStatement	uint bits ;	745:17:28107:28116	229254	5	True				
ANR	230086	IdentifierDecl	bits		229254	0					
ANR	230087	IdentifierDeclType	uint		229254	0					
ANR	230088	Identifier	bits		229254	1					
ANR	230089	ExpressionStatement	"set_mono_left_mask ( mask , dbit )"	747:8:28127:28157	229254	6	True				
ANR	230090	CallExpression	"set_mono_left_mask ( mask , dbit )"		229254	0					
ANR	230091	Callee	set_mono_left_mask		229254	0					
ANR	230092	Identifier	set_mono_left_mask		229254	0					
ANR	230093	ArgumentList	mask		229254	1					
ANR	230094	Argument	mask		229254	0					
ANR	230095	Identifier	mask		229254	0					
ANR	230096	Argument	dbit		229254	1					
ANR	230097	Identifier	dbit		229254	0					
ANR	230098	ExpressionStatement	"set_mono_right_mask ( rmask , wleft & chunk_bit_mask )"	748:8:28167:28217	229254	7	True				
ANR	230099	CallExpression	"set_mono_right_mask ( rmask , wleft & chunk_bit_mask )"		229254	0					
ANR	230100	Callee	set_mono_right_mask		229254	0					
ANR	230101	Identifier	set_mono_right_mask		229254	0					
ANR	230102	ArgumentList	rmask		229254	1					
ANR	230103	Argument	rmask		229254	0					
ANR	230104	Identifier	rmask		229254	0					
ANR	230105	Argument	wleft & chunk_bit_mask		229254	1					
ANR	230106	BitAndExpression	wleft & chunk_bit_mask		229254	0		&			
ANR	230107	Identifier	wleft		229254	0					
ANR	230108	Identifier	chunk_bit_mask		229254	1					
ANR	230109	IfStatement	if ( skew == 0 )		229254	8					
ANR	230110	Condition	skew == 0	749:12:28231:28239	229254	0	True				
ANR	230111	EqualityExpression	skew == 0		229254	0		==			
ANR	230112	Identifier	skew		229254	0					
ANR	230113	PrimaryExpression	0		229254	1					
ANR	230114	CompoundStatement		161:23:5786:5786	229254	1					
ANR	230115	Statement	define	751:1:28285:28290	229254	0	True				
ANR	230116	Statement	WRITE_ALIGNED	751:8:28292:28304	229254	1	True				
ANR	230117	Statement	(	751:21:28305:28305	229254	2	True				
ANR	230118	Statement	wr_op	751:22:28306:28310	229254	3	True				
ANR	230119	Statement	","	751:27:28311:28311	229254	4	True				
ANR	230120	Statement	wr_op_masked	751:29:28313:28324	229254	5	True				
ANR	230121	Statement	)	751:41:28325:28325	229254	6	True				
ANR	230122	ForStatement	for ( ; ; )		229254	7					
ANR	230123	CompoundStatement		165:5:5892:5909	229254	0					
ANR	230124	IdentifierDeclStatement	int count = wleft ;	753:5:28348:28365	229254	0	True				
ANR	230125	IdentifierDecl	count = wleft		229254	0					
ANR	230126	IdentifierDeclType	int		229254	0					
ANR	230127	Identifier	count		229254	1					
ANR	230128	AssignmentExpression	count = wleft		229254	2		=			
ANR	230129	Identifier	wleft		229254	0					
ANR	230130	Identifier	wleft		229254	1					
ANR	230131	ExpressionStatement	"wr_op_masked ( CFETCH_ALIGNED ( bptr ) , mask , 0 )"	755:5:28409:28452	229254	1	True				
ANR	230132	CallExpression	"wr_op_masked ( CFETCH_ALIGNED ( bptr ) , mask , 0 )"		229254	0					
ANR	230133	Callee	wr_op_masked		229254	0					
ANR	230134	Identifier	wr_op_masked		229254	0					
ANR	230135	ArgumentList	CFETCH_ALIGNED ( bptr )		229254	1					
ANR	230136	Argument	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	230137	CallExpression	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	230138	Callee	CFETCH_ALIGNED		229254	0					
ANR	230139	Identifier	CFETCH_ALIGNED		229254	0					
ANR	230140	ArgumentList	bptr		229254	1					
ANR	230141	Argument	bptr		229254	0					
ANR	230142	Identifier	bptr		229254	0					
ANR	230143	Argument	mask		229254	1					
ANR	230144	Identifier	mask		229254	0					
ANR	230145	Argument	0		229254	2					
ANR	230146	PrimaryExpression	0		229254	0					
ANR	230147	WhileStatement	while ( ( count -= chunk_bits ) >= 0 )		229254	2					
ANR	230148	Condition	( count -= chunk_bits ) >= 0	757:13:28496:28521	229254	0	True				
ANR	230149	RelationalExpression	( count -= chunk_bits ) >= 0		229254	0		>=			
ANR	230150	AssignmentExpression	count -= chunk_bits		229254	0		-=			
ANR	230151	Identifier	count		229254	0					
ANR	230152	Identifier	chunk_bits		229254	1					
ANR	230153	PrimaryExpression	0		229254	1					
ANR	230154	CompoundStatement		170:6:6076:6076	229254	1					
ANR	230155	ExpressionStatement	NEXT_X_CHUNK ( )	758:8:28534:28548	229254	0	True				
ANR	230156	CallExpression	NEXT_X_CHUNK ( )		229254	0					
ANR	230157	Callee	NEXT_X_CHUNK		229254	0					
ANR	230158	Identifier	NEXT_X_CHUNK		229254	0					
ANR	230159	ArgumentList			229254	1					
ANR	230160	ExpressionStatement	wr_op ( CFETCH_ALIGNED ( bptr ) )	758:24:28550:28577	229254	1	True				
ANR	230161	CallExpression	wr_op ( CFETCH_ALIGNED ( bptr ) )		229254	0					
ANR	230162	Callee	wr_op		229254	0					
ANR	230163	Identifier	wr_op		229254	0					
ANR	230164	ArgumentList	CFETCH_ALIGNED ( bptr )		229254	1					
ANR	230165	Argument	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	230166	CallExpression	CFETCH_ALIGNED ( bptr )		229254	0					
ANR	230167	Callee	CFETCH_ALIGNED		229254	0					
ANR	230168	Identifier	CFETCH_ALIGNED		229254	0					
ANR	230169	ArgumentList	bptr		229254	1					
ANR	230170	Argument	bptr		229254	0					
ANR	230171	Identifier	bptr		229254	0					
ANR	230172	IfStatement	if ( count > - chunk_bits )		229254	3					
ANR	230173	Condition	count > - chunk_bits	760:10:28618:28636	229254	0	True				
ANR	230174	RelationalExpression	count > - chunk_bits		229254	0		>			
ANR	230175	Identifier	count		229254	0					
ANR	230176	UnaryOperationExpression	- chunk_bits		229254	1					
ANR	230177	UnaryOperator	-		229254	0					
ANR	230178	Identifier	chunk_bits		229254	1					
ANR	230179	CompoundStatement		173:6:6191:6191	229254	1					
ANR	230180	ExpressionStatement	"wr_op_masked ( CFETCH_ALIGNED ( bptr + chunk_bytes ) , rmask , 1 )"	761:8:28649:28707	229254	0	True				
ANR	230181	CallExpression	"wr_op_masked ( CFETCH_ALIGNED ( bptr + chunk_bytes ) , rmask , 1 )"		229254	0					
ANR	230182	Callee	wr_op_masked		229254	0					
ANR	230183	Identifier	wr_op_masked		229254	0					
ANR	230184	ArgumentList	CFETCH_ALIGNED ( bptr + chunk_bytes )		229254	1					
ANR	230185	Argument	CFETCH_ALIGNED ( bptr + chunk_bytes )		229254	0					
ANR	230186	CallExpression	CFETCH_ALIGNED ( bptr + chunk_bytes )		229254	0					
ANR	230187	Callee	CFETCH_ALIGNED		229254	0					
ANR	230188	Identifier	CFETCH_ALIGNED		229254	0					
ANR	230189	ArgumentList	bptr + chunk_bytes		229254	1					
ANR	230190	Argument	bptr + chunk_bytes		229254	0					
ANR	230191	AdditiveExpression	bptr + chunk_bytes		229254	0		+			
ANR	230192	Identifier	bptr		229254	0					
ANR	230193	Identifier	chunk_bytes		229254	1					
ANR	230194	Argument	rmask		229254	1					
ANR	230195	Identifier	rmask		229254	0					
ANR	230196	Argument	1		229254	2					
ANR	230197	PrimaryExpression	1		229254	0					
ANR	230198	IfStatement	if ( -- h == 0 )		229254	4					
ANR	230199	Condition	-- h == 0	762:10:28722:28729	229254	0	True				
ANR	230200	EqualityExpression	-- h == 0		229254	0		==			
ANR	230201	UnaryExpression	-- h		229254	0					
ANR	230202	IncDec	--		229254	0					
ANR	230203	Identifier	h		229254	1					
ANR	230204	PrimaryExpression	0		229254	1					
ANR	230205	BreakStatement	break ;	762:21:28733:28738	229254	1	True				
ANR	230206	ExpressionStatement	"END_Y_LOOP ( sskip , dskip )"	763:5:28746:28770	229254	5	True				
ANR	230207	CallExpression	"END_Y_LOOP ( sskip , dskip )"		229254	0					
ANR	230208	Callee	END_Y_LOOP		229254	0					
ANR	230209	Identifier	END_Y_LOOP		229254	0					
ANR	230210	ArgumentList	sskip		229254	1					
ANR	230211	Argument	sskip		229254	0					
ANR	230212	Identifier	sskip		229254	0					
ANR	230213	Argument	dskip		229254	1					
ANR	230214	Identifier	dskip		229254	0					
ANR	230215	SwitchStatement	switch ( mode . op )		229254	8					
ANR	230216	Condition	mode . op	766:20:28799:28805	229254	0	True				
ANR	230217	MemberAccess	mode . op		229254	0					
ANR	230218	Identifier	mode		229254	0					
ANR	230219	Identifier	op		229254	1					
ANR	230220	CompoundStatement		178:29:6352:6352	229254	1					
ANR	230221	Label	case COPY_OR :	767:16:28826:28838	229254	0	True				
ANR	230222	Identifier	COPY_OR		229254	0					
ANR	230223	ExpressionStatement	"WRITE_ALIGNED ( WRITE_OR , WRITE_OR_MASKED )"	768:20:28860:28900	229254	1	True				
ANR	230224	CallExpression	"WRITE_ALIGNED ( WRITE_OR , WRITE_OR_MASKED )"		229254	0					
ANR	230225	Callee	WRITE_ALIGNED		229254	0					
ANR	230226	Identifier	WRITE_ALIGNED		229254	0					
ANR	230227	ArgumentList	WRITE_OR		229254	1					
ANR	230228	Argument	WRITE_OR		229254	0					
ANR	230229	Identifier	WRITE_OR		229254	0					
ANR	230230	Argument	WRITE_OR_MASKED		229254	1					
ANR	230231	Identifier	WRITE_OR_MASKED		229254	0					
ANR	230232	BreakStatement	break ;	769:20:28922:28927	229254	2	True				
ANR	230233	Label	case COPY_STORE :	770:16:28945:28960	229254	3	True				
ANR	230234	Identifier	COPY_STORE		229254	0					
ANR	230235	ExpressionStatement	"WRITE_ALIGNED ( WRITE_STORE , WRITE_STORE_MASKED )"	771:20:28982:29028	229254	4	True				
ANR	230236	CallExpression	"WRITE_ALIGNED ( WRITE_STORE , WRITE_STORE_MASKED )"		229254	0					
ANR	230237	Callee	WRITE_ALIGNED		229254	0					
ANR	230238	Identifier	WRITE_ALIGNED		229254	0					
ANR	230239	ArgumentList	WRITE_STORE		229254	1					
ANR	230240	Argument	WRITE_STORE		229254	0					
ANR	230241	Identifier	WRITE_STORE		229254	0					
ANR	230242	Argument	WRITE_STORE_MASKED		229254	1					
ANR	230243	Identifier	WRITE_STORE_MASKED		229254	0					
ANR	230244	BreakStatement	break ;	772:20:29050:29055	229254	5	True				
ANR	230245	Label	case COPY_AND :	773:16:29073:29086	229254	6	True				
ANR	230246	Identifier	COPY_AND		229254	0					
ANR	230247	ExpressionStatement	"WRITE_ALIGNED ( WRITE_AND , WRITE_AND_MASKED )"	774:20:29108:29150	229254	7	True				
ANR	230248	CallExpression	"WRITE_ALIGNED ( WRITE_AND , WRITE_AND_MASKED )"		229254	0					
ANR	230249	Callee	WRITE_ALIGNED		229254	0					
ANR	230250	Identifier	WRITE_ALIGNED		229254	0					
ANR	230251	ArgumentList	WRITE_AND		229254	1					
ANR	230252	Argument	WRITE_AND		229254	0					
ANR	230253	Identifier	WRITE_AND		229254	0					
ANR	230254	Argument	WRITE_AND_MASKED		229254	1					
ANR	230255	Identifier	WRITE_AND_MASKED		229254	0					
ANR	230256	BreakStatement	break ;	775:20:29172:29177	229254	8	True				
ANR	230257	Label	default :	776:16:29195:29202	229254	9	True				
ANR	230258	Identifier	default		229254	0					
ANR	230259	ReturnStatement	return FUNNY_CASE ( ) ;	777:20:29224:29243	229254	10	True				
ANR	230260	CallExpression	FUNNY_CASE ( )		229254	0					
ANR	230261	Callee	FUNNY_CASE		229254	0					
ANR	230262	Identifier	FUNNY_CASE		229254	0					
ANR	230263	ArgumentList			229254	1					
ANR	230264	Statement	undef	779:1:29260:29264	229254	9	True				
ANR	230265	Statement	WRITE_ALIGNED	779:7:29266:29278	229254	10	True				
ANR	230266	ElseStatement	else		229254	0					
ANR	230267	CompoundStatement		194:12:6934:7028	229254	0					
ANR	230268	IdentifierDeclStatement	int cskew = - skew & chunk_bit_mask ;	781:12:29342:29376	229254	0	True				
ANR	230269	IdentifierDecl	cskew = - skew & chunk_bit_mask		229254	0					
ANR	230270	IdentifierDeclType	int		229254	0					
ANR	230271	Identifier	cskew		229254	1					
ANR	230272	AssignmentExpression	cskew = - skew & chunk_bit_mask		229254	2		=			
ANR	230273	Identifier	cskew		229254	0					
ANR	230274	BitAndExpression	- skew & chunk_bit_mask		229254	1		&			
ANR	230275	UnaryOperationExpression	- skew		229254	0					
ANR	230276	UnaryOperator	-		229254	0					
ANR	230277	Identifier	skew		229254	1					
ANR	230278	Identifier	chunk_bit_mask		229254	1					
ANR	230279	IdentifierDeclStatement	"bool case_right = ( skew >= 0 ? true : ( ( bptr += chunk_bytes ) , false ) ) ;"	782:12:29390:29484	229254	1	True				
ANR	230280	IdentifierDecl	"case_right = ( skew >= 0 ? true : ( ( bptr += chunk_bytes ) , false ) )"		229254	0					
ANR	230281	IdentifierDeclType	bool		229254	0					
ANR	230282	Identifier	case_right		229254	1					
ANR	230283	AssignmentExpression	"case_right = ( skew >= 0 ? true : ( ( bptr += chunk_bytes ) , false ) )"		229254	2		=			
ANR	230284	Identifier	case_right		229254	0					
ANR	230285	ConditionalExpression	"skew >= 0 ? true : ( ( bptr += chunk_bytes ) , false )"		229254	1					
ANR	230286	Condition	skew >= 0		229254	0					
ANR	230287	RelationalExpression	skew >= 0		229254	0		>=			
ANR	230288	Identifier	skew		229254	0					
ANR	230289	PrimaryExpression	0		229254	1					
ANR	230290	Identifier	true		229254	1					
ANR	230291	Expression	"( bptr += chunk_bytes ) , false"		229254	2					
ANR	230292	AssignmentExpression	bptr += chunk_bytes		229254	0		+=			
ANR	230293	Identifier	bptr		229254	0					
ANR	230294	Identifier	chunk_bytes		229254	1					
ANR	230295	Identifier	false		229254	1					
ANR	230296	ExpressionStatement	skew &= chunk_bit_mask	786:12:29499:29521	229254	2	True				
ANR	230297	AssignmentExpression	skew &= chunk_bit_mask		229254	0		&=			
ANR	230298	Identifier	skew		229254	0					
ANR	230299	Identifier	chunk_bit_mask		229254	1					
ANR	230300	Statement	define	788:1:29525:29530	229254	3	True				
ANR	230301	Statement	WRITE_UNALIGNED	788:8:29532:29546	229254	4	True				
ANR	230302	Statement	(	788:23:29547:29547	229254	5	True				
ANR	230303	Statement	wr_op	788:24:29548:29552	229254	6	True				
ANR	230304	Statement	","	788:29:29553:29553	229254	7	True				
ANR	230305	Statement	wr_op_masked	788:31:29555:29566	229254	8	True				
ANR	230306	Statement	)	788:43:29567:29567	229254	9	True				
ANR	230307	ExpressionStatement	"bits = ( case_right ? CFETCH_RIGHT ( bptr , skew , cskew ) : CFETCH2 ( bptr - chunk_bytes , cskew , skew ) )"	790:2:29604:29711	229254	10	True				
ANR	230308	AssignmentExpression	"bits = ( case_right ? CFETCH_RIGHT ( bptr , skew , cskew ) : CFETCH2 ( bptr - chunk_bytes , cskew , skew ) )"		229254	0		=			
ANR	230309	Identifier	bits		229254	0					
ANR	230310	ConditionalExpression	"case_right ? CFETCH_RIGHT ( bptr , skew , cskew ) : CFETCH2 ( bptr - chunk_bytes , cskew , skew )"		229254	1					
ANR	230311	Condition	case_right		229254	0					
ANR	230312	Identifier	case_right		229254	0					
ANR	230313	CallExpression	"CFETCH_RIGHT ( bptr , skew , cskew )"		229254	1					
ANR	230314	Callee	CFETCH_RIGHT		229254	0					
ANR	230315	Identifier	CFETCH_RIGHT		229254	0					
ANR	230316	ArgumentList	bptr		229254	1					
ANR	230317	Argument	bptr		229254	0					
ANR	230318	Identifier	bptr		229254	0					
ANR	230319	Argument	skew		229254	1					
ANR	230320	Identifier	skew		229254	0					
ANR	230321	Argument	cskew		229254	2					
ANR	230322	Identifier	cskew		229254	0					
ANR	230323	CallExpression	"CFETCH2 ( bptr - chunk_bytes , cskew , skew )"		229254	2					
ANR	230324	Callee	CFETCH2		229254	0					
ANR	230325	Identifier	CFETCH2		229254	0					
ANR	230326	ArgumentList	bptr - chunk_bytes		229254	1					
ANR	230327	Argument	bptr - chunk_bytes		229254	0					
ANR	230328	AdditiveExpression	bptr - chunk_bytes		229254	0		-			
ANR	230329	Identifier	bptr		229254	0					
ANR	230330	Identifier	chunk_bytes		229254	1					
ANR	230331	Argument	cskew		229254	1					
ANR	230332	Identifier	cskew		229254	0					
ANR	230333	Argument	skew		229254	2					
ANR	230334	Identifier	skew		229254	0					
ANR	230335	ExpressionStatement	"wr_op_masked ( bits , mask , 0 )"	793:2:29716:29743	229254	11	True				
ANR	230336	CallExpression	"wr_op_masked ( bits , mask , 0 )"		229254	0					
ANR	230337	Callee	wr_op_masked		229254	0					
ANR	230338	Identifier	wr_op_masked		229254	0					
ANR	230339	ArgumentList	bits		229254	1					
ANR	230340	Argument	bits		229254	0					
ANR	230341	Identifier	bits		229254	0					
ANR	230342	Argument	mask		229254	1					
ANR	230343	Identifier	mask		229254	0					
ANR	230344	Argument	0		229254	2					
ANR	230345	PrimaryExpression	0		229254	0					
ANR	230346	WhileStatement	while ( count >= chunk_bits )		229254	12					
ANR	230347	Condition	count >= chunk_bits	795:10:29781:29799	229254	0	True				
ANR	230348	RelationalExpression	count >= chunk_bits		229254	0		>=			
ANR	230349	Identifier	count		229254	0					
ANR	230350	Identifier	chunk_bits		229254	1					
ANR	230351	CompoundStatement		208:4:7352:7352	229254	1					
ANR	230352	ExpressionStatement	"bits = CFETCH2 ( bptr , cskew , skew )"	796:6:29810:29843	229254	0	True				
ANR	230353	AssignmentExpression	"bits = CFETCH2 ( bptr , cskew , skew )"		229254	0		=			
ANR	230354	Identifier	bits		229254	0					
ANR	230355	CallExpression	"CFETCH2 ( bptr , cskew , skew )"		229254	1					
ANR	230356	Callee	CFETCH2		229254	0					
ANR	230357	Identifier	CFETCH2		229254	0					
ANR	230358	ArgumentList	bptr		229254	1					
ANR	230359	Argument	bptr		229254	0					
ANR	230360	Identifier	bptr		229254	0					
ANR	230361	Argument	cskew		229254	1					
ANR	230362	Identifier	cskew		229254	0					
ANR	230363	Argument	skew		229254	2					
ANR	230364	Identifier	skew		229254	0					
ANR	230365	ExpressionStatement	NEXT_X_CHUNK ( )	797:6:29852:29866	229254	1	True				
ANR	230366	CallExpression	NEXT_X_CHUNK ( )		229254	0					
ANR	230367	Callee	NEXT_X_CHUNK		229254	0					
ANR	230368	Identifier	NEXT_X_CHUNK		229254	0					
ANR	230369	ArgumentList			229254	1					
ANR	230370	ExpressionStatement	wr_op ( bits )	797:22:29868:29879	229254	2	True				
ANR	230371	CallExpression	wr_op ( bits )		229254	0					
ANR	230372	Callee	wr_op		229254	0					
ANR	230373	Identifier	wr_op		229254	0					
ANR	230374	ArgumentList	bits		229254	1					
ANR	230375	Argument	bits		229254	0					
ANR	230376	Identifier	bits		229254	0					
ANR	230377	ExpressionStatement	count -= chunk_bits	797:35:29881:29900	229254	3	True				
ANR	230378	AssignmentExpression	count -= chunk_bits		229254	0		-=			
ANR	230379	Identifier	count		229254	0					
ANR	230380	Identifier	chunk_bits		229254	1					
ANR	230381	IfStatement	if ( count > 0 )		229254	13					
ANR	230382	Condition	count > 0	800:7:29940:29948	229254	0	True				
ANR	230383	RelationalExpression	count > 0		229254	0		>			
ANR	230384	Identifier	count		229254	0					
ANR	230385	PrimaryExpression	0		229254	1					
ANR	230386	CompoundStatement		213:4:7501:7501	229254	1					
ANR	230387	ExpressionStatement	"bits = CFETCH_LEFT ( bptr , cskew , skew )"	801:6:29959:29996	229254	0	True				
ANR	230388	AssignmentExpression	"bits = CFETCH_LEFT ( bptr , cskew , skew )"		229254	0		=			
ANR	230389	Identifier	bits		229254	0					
ANR	230390	CallExpression	"CFETCH_LEFT ( bptr , cskew , skew )"		229254	1					
ANR	230391	Callee	CFETCH_LEFT		229254	0					
ANR	230392	Identifier	CFETCH_LEFT		229254	0					
ANR	230393	ArgumentList	bptr		229254	1					
ANR	230394	Argument	bptr		229254	0					
ANR	230395	Identifier	bptr		229254	0					
ANR	230396	Argument	cskew		229254	1					
ANR	230397	Identifier	cskew		229254	0					
ANR	230398	Argument	skew		229254	2					
ANR	230399	Identifier	skew		229254	0					
ANR	230400	IfStatement	if ( count > skew )		229254	1					
ANR	230401	Condition	count > skew	802:11:30010:30021	229254	0	True				
ANR	230402	RelationalExpression	count > skew		229254	0		>			
ANR	230403	Identifier	count		229254	0					
ANR	230404	Identifier	skew		229254	1					
ANR	230405	ExpressionStatement	"bits += CFETCH_RIGHT ( bptr + chunk_bytes , skew , cskew )"	802:26:30025:30078	229254	1	True				
ANR	230406	AssignmentExpression	"bits += CFETCH_RIGHT ( bptr + chunk_bytes , skew , cskew )"		229254	0		+=			
ANR	230407	Identifier	bits		229254	0					
ANR	230408	CallExpression	"CFETCH_RIGHT ( bptr + chunk_bytes , skew , cskew )"		229254	1					
ANR	230409	Callee	CFETCH_RIGHT		229254	0					
ANR	230410	Identifier	CFETCH_RIGHT		229254	0					
ANR	230411	ArgumentList	bptr + chunk_bytes		229254	1					
ANR	230412	Argument	bptr + chunk_bytes		229254	0					
ANR	230413	AdditiveExpression	bptr + chunk_bytes		229254	0		+			
ANR	230414	Identifier	bptr		229254	0					
ANR	230415	Identifier	chunk_bytes		229254	1					
ANR	230416	Argument	skew		229254	1					
ANR	230417	Identifier	skew		229254	0					
ANR	230418	Argument	cskew		229254	2					
ANR	230419	Identifier	cskew		229254	0					
ANR	230420	ExpressionStatement	"wr_op_masked ( bits , rmask , 1 )"	803:6:30087:30115	229254	2	True				
ANR	230421	CallExpression	"wr_op_masked ( bits , rmask , 1 )"		229254	0					
ANR	230422	Callee	wr_op_masked		229254	0					
ANR	230423	Identifier	wr_op_masked		229254	0					
ANR	230424	ArgumentList	bits		229254	1					
ANR	230425	Argument	bits		229254	0					
ANR	230426	Identifier	bits		229254	0					
ANR	230427	Argument	rmask		229254	1					
ANR	230428	Identifier	rmask		229254	0					
ANR	230429	Argument	1		229254	2					
ANR	230430	PrimaryExpression	1		229254	0					
ANR	230431	SwitchStatement	switch ( mode . op )		229254	14					
ANR	230432	Condition	mode . op	806:20:30145:30151	229254	0	True				
ANR	230433	MemberAccess	mode . op		229254	0					
ANR	230434	Identifier	mode		229254	0					
ANR	230435	Identifier	op		229254	1					
ANR	230436	CompoundStatement		218:29:7698:7698	229254	1					
ANR	230437	Label	case COPY_OR :	807:16:30172:30184	229254	0	True				
ANR	230438	Identifier	COPY_OR		229254	0					
ANR	230439	ForStatement	for ( ; ; )		229254	1					
ANR	230440	CompoundStatement		221:24:7785:7802	229254	0					
ANR	230441	IdentifierDeclStatement	int count = wleft ;	809:24:30241:30258	229254	0	True				
ANR	230442	IdentifierDecl	count = wleft		229254	0					
ANR	230443	IdentifierDeclType	int		229254	0					
ANR	230444	Identifier	count		229254	1					
ANR	230445	AssignmentExpression	count = wleft		229254	2		=			
ANR	230446	Identifier	wleft		229254	0					
ANR	230447	Identifier	wleft		229254	1					
ANR	230448	ExpressionStatement	"WRITE_UNALIGNED ( WRITE_OR , WRITE_OR_MASKED )"	811:24:30285:30327	229254	1	True				
ANR	230449	CallExpression	"WRITE_UNALIGNED ( WRITE_OR , WRITE_OR_MASKED )"		229254	0					
ANR	230450	Callee	WRITE_UNALIGNED		229254	0					
ANR	230451	Identifier	WRITE_UNALIGNED		229254	0					
ANR	230452	ArgumentList	WRITE_OR		229254	1					
ANR	230453	Argument	WRITE_OR		229254	0					
ANR	230454	Identifier	WRITE_OR		229254	0					
ANR	230455	Argument	WRITE_OR_MASKED		229254	1					
ANR	230456	Identifier	WRITE_OR_MASKED		229254	0					
ANR	230457	IfStatement	if ( -- h == 0 )		229254	2					
ANR	230458	Condition	-- h == 0	812:28:30357:30364	229254	0	True				
ANR	230459	EqualityExpression	-- h == 0		229254	0		==			
ANR	230460	UnaryExpression	-- h		229254	0					
ANR	230461	IncDec	--		229254	0					
ANR	230462	Identifier	h		229254	1					
ANR	230463	PrimaryExpression	0		229254	1					
ANR	230464	BreakStatement	break ;	813:28:30395:30400	229254	1	True				
ANR	230465	ExpressionStatement	"END_Y_LOOP ( sskip , dskip )"	814:24:30426:30450	229254	3	True				
ANR	230466	CallExpression	"END_Y_LOOP ( sskip , dskip )"		229254	0					
ANR	230467	Callee	END_Y_LOOP		229254	0					
ANR	230468	Identifier	END_Y_LOOP		229254	0					
ANR	230469	ArgumentList	sskip		229254	1					
ANR	230470	Argument	sskip		229254	0					
ANR	230471	Identifier	sskip		229254	0					
ANR	230472	Argument	dskip		229254	1					
ANR	230473	Identifier	dskip		229254	0					
ANR	230474	BreakStatement	break ;	816:20:30494:30499	229254	2	True				
ANR	230475	Label	case COPY_STORE :	817:16:30517:30532	229254	3	True				
ANR	230476	Identifier	COPY_STORE		229254	0					
ANR	230477	ForStatement	for ( ; ; )		229254	4					
ANR	230478	CompoundStatement		231:24:8133:8150	229254	0					
ANR	230479	IdentifierDeclStatement	int count = wleft ;	819:24:30589:30606	229254	0	True				
ANR	230480	IdentifierDecl	count = wleft		229254	0					
ANR	230481	IdentifierDeclType	int		229254	0					
ANR	230482	Identifier	count		229254	1					
ANR	230483	AssignmentExpression	count = wleft		229254	2		=			
ANR	230484	Identifier	wleft		229254	0					
ANR	230485	Identifier	wleft		229254	1					
ANR	230486	ExpressionStatement	"WRITE_UNALIGNED ( WRITE_STORE , WRITE_STORE_MASKED )"	821:24:30633:30681	229254	1	True				
ANR	230487	CallExpression	"WRITE_UNALIGNED ( WRITE_STORE , WRITE_STORE_MASKED )"		229254	0					
ANR	230488	Callee	WRITE_UNALIGNED		229254	0					
ANR	230489	Identifier	WRITE_UNALIGNED		229254	0					
ANR	230490	ArgumentList	WRITE_STORE		229254	1					
ANR	230491	Argument	WRITE_STORE		229254	0					
ANR	230492	Identifier	WRITE_STORE		229254	0					
ANR	230493	Argument	WRITE_STORE_MASKED		229254	1					
ANR	230494	Identifier	WRITE_STORE_MASKED		229254	0					
ANR	230495	IfStatement	if ( -- h == 0 )		229254	2					
ANR	230496	Condition	-- h == 0	822:28:30711:30718	229254	0	True				
ANR	230497	EqualityExpression	-- h == 0		229254	0		==			
ANR	230498	UnaryExpression	-- h		229254	0					
ANR	230499	IncDec	--		229254	0					
ANR	230500	Identifier	h		229254	1					
ANR	230501	PrimaryExpression	0		229254	1					
ANR	230502	BreakStatement	break ;	823:28:30749:30754	229254	1	True				
ANR	230503	ExpressionStatement	"END_Y_LOOP ( sskip , dskip )"	824:24:30780:30804	229254	3	True				
ANR	230504	CallExpression	"END_Y_LOOP ( sskip , dskip )"		229254	0					
ANR	230505	Callee	END_Y_LOOP		229254	0					
ANR	230506	Identifier	END_Y_LOOP		229254	0					
ANR	230507	ArgumentList	sskip		229254	1					
ANR	230508	Argument	sskip		229254	0					
ANR	230509	Identifier	sskip		229254	0					
ANR	230510	Argument	dskip		229254	1					
ANR	230511	Identifier	dskip		229254	0					
ANR	230512	BreakStatement	break ;	826:20:30848:30853	229254	5	True				
ANR	230513	Label	case COPY_AND :	827:16:30871:30884	229254	6	True				
ANR	230514	Identifier	COPY_AND		229254	0					
ANR	230515	ForStatement	for ( ; ; )		229254	7					
ANR	230516	CompoundStatement		241:24:8485:8502	229254	0					
ANR	230517	IdentifierDeclStatement	int count = wleft ;	829:24:30941:30958	229254	0	True				
ANR	230518	IdentifierDecl	count = wleft		229254	0					
ANR	230519	IdentifierDeclType	int		229254	0					
ANR	230520	Identifier	count		229254	1					
ANR	230521	AssignmentExpression	count = wleft		229254	2		=			
ANR	230522	Identifier	wleft		229254	0					
ANR	230523	Identifier	wleft		229254	1					
ANR	230524	ExpressionStatement	"WRITE_UNALIGNED ( WRITE_AND , WRITE_AND_MASKED )"	831:24:30985:31029	229254	1	True				
ANR	230525	CallExpression	"WRITE_UNALIGNED ( WRITE_AND , WRITE_AND_MASKED )"		229254	0					
ANR	230526	Callee	WRITE_UNALIGNED		229254	0					
ANR	230527	Identifier	WRITE_UNALIGNED		229254	0					
ANR	230528	ArgumentList	WRITE_AND		229254	1					
ANR	230529	Argument	WRITE_AND		229254	0					
ANR	230530	Identifier	WRITE_AND		229254	0					
ANR	230531	Argument	WRITE_AND_MASKED		229254	1					
ANR	230532	Identifier	WRITE_AND_MASKED		229254	0					
ANR	230533	IfStatement	if ( -- h == 0 )		229254	2					
ANR	230534	Condition	-- h == 0	832:28:31059:31066	229254	0	True				
ANR	230535	EqualityExpression	-- h == 0		229254	0		==			
ANR	230536	UnaryExpression	-- h		229254	0					
ANR	230537	IncDec	--		229254	0					
ANR	230538	Identifier	h		229254	1					
ANR	230539	PrimaryExpression	0		229254	1					
ANR	230540	BreakStatement	break ;	833:28:31097:31102	229254	1	True				
ANR	230541	ExpressionStatement	"END_Y_LOOP ( sskip , dskip )"	834:24:31128:31152	229254	3	True				
ANR	230542	CallExpression	"END_Y_LOOP ( sskip , dskip )"		229254	0					
ANR	230543	Callee	END_Y_LOOP		229254	0					
ANR	230544	Identifier	END_Y_LOOP		229254	0					
ANR	230545	ArgumentList	sskip		229254	1					
ANR	230546	Argument	sskip		229254	0					
ANR	230547	Identifier	sskip		229254	0					
ANR	230548	Argument	dskip		229254	1					
ANR	230549	Identifier	dskip		229254	0					
ANR	230550	BreakStatement	break ;	836:20:31196:31201	229254	8	True				
ANR	230551	Label	default :	837:16:31219:31248	229254	9	True				
ANR	230552	Identifier	default		229254	0					
ANR	230553	ReturnStatement	return FUNNY_CASE ( ) ;	838:20:31270:31289	229254	10	True				
ANR	230554	CallExpression	FUNNY_CASE ( )		229254	0					
ANR	230555	Callee	FUNNY_CASE		229254	0					
ANR	230556	Identifier	FUNNY_CASE		229254	0					
ANR	230557	ArgumentList			229254	1					
ANR	230558	Statement	undef	840:1:31306:31310	229254	15	True				
ANR	230559	Statement	WRITE_UNALIGNED	840:7:31312:31326	229254	16	True				
ANR	230560	Statement	undef	843:1:31345:31349	229254	196	True				
ANR	230561	Statement	END_Y_LOOP	843:7:31351:31360	229254	197	True				
ANR	230562	Statement	undef	844:1:31363:31367	229254	198	True				
ANR	230563	Statement	NEXT_X_CHUNK	844:7:31369:31380	229254	199	True				
ANR	230564	ReturnStatement	return 0 ;	845:4:31386:31394	229254	200	True				
ANR	230565	PrimaryExpression	0		229254	0					
ANR	230566	Statement	undef	846:1:31397:31401	229254	201	True				
ANR	230567	Statement	optr	846:7:31403:31406	229254	202	True				
ANR	230568	ReturnType	static int		229254	1					
ANR	230569	Identifier	mem_mono_copy_mono		229254	2					
ANR	230570	ParameterList	"gx_device * dev , const byte * source_data , int source_x , int source_raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1"		229254	3					
ANR	230571	Parameter	gx_device * dev	586:19:22284:22298	229254	0	True				
ANR	230572	ParameterType	gx_device *		229254	0					
ANR	230573	Identifier	dev		229254	1					
ANR	230574	Parameter	const byte * source_data	587:1:22302:22325	229254	1	True				
ANR	230575	ParameterType	const byte *		229254	0					
ANR	230576	Identifier	source_data		229254	1					
ANR	230577	Parameter	int source_x	587:27:22328:22339	229254	2	True				
ANR	230578	ParameterType	int		229254	0					
ANR	230579	Identifier	source_x		229254	1					
ANR	230580	Parameter	int source_raster	587:41:22342:22358	229254	3	True				
ANR	230581	ParameterType	int		229254	0					
ANR	230582	Identifier	source_raster		229254	1					
ANR	230583	Parameter	gx_bitmap_id id	587:60:22361:22375	229254	4	True				
ANR	230584	ParameterType	gx_bitmap_id		229254	0					
ANR	230585	Identifier	id		229254	1					
ANR	230586	Parameter	int x	588:3:22381:22385	229254	5	True				
ANR	230587	ParameterType	int		229254	0					
ANR	230588	Identifier	x		229254	1					
ANR	230589	Parameter	int y	588:10:22388:22392	229254	6	True				
ANR	230590	ParameterType	int		229254	0					
ANR	230591	Identifier	y		229254	1					
ANR	230592	Parameter	int w	588:17:22395:22399	229254	7	True				
ANR	230593	ParameterType	int		229254	0					
ANR	230594	Identifier	w		229254	1					
ANR	230595	Parameter	int h	588:24:22402:22406	229254	8	True				
ANR	230596	ParameterType	int		229254	0					
ANR	230597	Identifier	h		229254	1					
ANR	230598	Parameter	gx_color_index color0	588:31:22409:22429	229254	9	True				
ANR	230599	ParameterType	gx_color_index		229254	0					
ANR	230600	Identifier	color0		229254	1					
ANR	230601	Parameter	gx_color_index color1	588:54:22432:22452	229254	10	True				
ANR	230602	ParameterType	gx_color_index		229254	0					
ANR	230603	Identifier	color1		229254	1					
ANR	230604	CFGEntryNode	ENTRY		229254		True				
ANR	230605	CFGExitNode	EXIT		229254		True				
ANR	230606	InfiniteForNode	true		229254		True				
ANR	230607	InfiniteForNode	true		229254		True				
ANR	230608	InfiniteForNode	true		229254		True				
ANR	230609	InfiniteForNode	true		229254		True				
ANR	230610	InfiniteForNode	true		229254		True				
ANR	230611	InfiniteForNode	true		229254		True				
ANR	230612	Symbol	dbit		229254						
ANR	230613	Symbol	color1		229254						
ANR	230614	Symbol	mode		229254						
ANR	230615	Symbol	WRITE_OR_MASKED		229254						
ANR	230616	Symbol	chunk_bits		229254						
ANR	230617	Symbol	color0		229254						
ANR	230618	Symbol	gx_no_color_index		229254						
ANR	230619	Symbol	* color1		229254						
ANR	230620	Symbol	dev		229254						
ANR	230621	Symbol	* color0		229254						
ANR	230622	Symbol	mode . op		229254						
ANR	230623	Symbol	id		229254						
ANR	230624	Symbol	dest_raster		229254						
ANR	230625	Symbol	~chunk_align_bit_mask		229254						
ANR	230626	Symbol	CFETCH_ALIGNED		229254						
ANR	230627	Symbol	source_data		229254						
ANR	230628	Symbol	NULL		229254						
ANR	230629	Symbol	invert		229254						
ANR	230630	Symbol	WRITE_AND_MASKED		229254						
ANR	230631	Symbol	rmask		229254						
ANR	230632	Symbol	bits		229254						
ANR	230633	Symbol	count		229254						
ANR	230634	Symbol	case_right		229254						
ANR	230635	Symbol	rop3_0		229254						
ANR	230636	Symbol	rop3_1		229254						
ANR	230637	Symbol	FUNNY_CASE		229254						
ANR	230638	Symbol	mode . invert		229254						
ANR	230639	Symbol	true		229254						
ANR	230640	Symbol	mdev		229254						
ANR	230641	Symbol	~rop3_S		229254						
ANR	230642	Symbol	WRITE_STORE_MASKED		229254						
ANR	230643	Symbol	skew		229254						
ANR	230644	Symbol	wleft		229254						
ANR	230645	Symbol	source_x		229254						
ANR	230646	Symbol	cskew		229254						
ANR	230647	Symbol	WRITE_STORE		229254						
ANR	230648	Symbol	sdelta		229254						
ANR	230649	Symbol	rop3_S		229254						
ANR	230650	Symbol	CFETCH_RIGHT		229254						
ANR	230651	Symbol	source_raster		229254						
ANR	230652	Symbol	CFETCH_LEFT		229254						
ANR	230653	Symbol	dskip		229254						
ANR	230654	Symbol	rop3_D		229254						
ANR	230655	Symbol	chunk_bytes		229254						
ANR	230656	Symbol	copy_modes		229254						
ANR	230657	Symbol	mask		229254						
ANR	230658	Symbol	bptr		229254						
ANR	230659	Symbol	~chunk_bit_mask		229254						
ANR	230660	Symbol	src		229254						
ANR	230661	Symbol	h		229254						
ANR	230662	Symbol	* copy_modes		229254						
ANR	230663	Symbol	words		229254						
ANR	230664	Symbol	false		229254						
ANR	230665	Symbol	chunk_align_bit_mask		229254						
ANR	230666	Symbol	WRITE_AND		229254						
ANR	230667	Symbol	mem_mono_strip_copy_rop_dev		229254						
ANR	230668	Symbol	CFETCH2		229254						
ANR	230669	Symbol	WRITE_OR		229254						
ANR	230670	Symbol	w		229254						
ANR	230671	Symbol	x		229254						
ANR	230672	Symbol	sskip		229254						
ANR	230673	Symbol	y		229254						
ANR	230674	Symbol	chunk_bit_mask		229254						
ANR	230675	Function	mem_mono_strip_tile_rectangle	852:0:31584:39765							
ANR	230676	FunctionDef	"mem_mono_strip_tile_rectangle (gx_device * dev , register const gx_strip_bitmap * tiles , int tx , int y , int tw , int th , gx_color_index color0 , gx_color_index color1 , int px , int py)"		230675	0					
ANR	230677	CompoundStatement		857:0:31835:39765	230675	0					
ANR	230678	IdentifierDeclStatement	gs_logical_operation_t rop = ( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_T ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_T ) ;	859:4:31873:32171	230675	0	True				
ANR	230679	IdentifierDecl	rop = ( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_T ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_T )		230675	0					
ANR	230680	IdentifierDeclType	gs_logical_operation_t		230675	0					
ANR	230681	Identifier	rop		230675	1					
ANR	230682	AssignmentExpression	rop = ( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_T ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_T )		230675	2		=			
ANR	230683	Identifier	rop		230675	0					
ANR	230684	InclusiveOrExpression	( ( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_T ) | ( ( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_T )		230675	1		|			
ANR	230685	BitAndExpression	( color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1 ) & ~rop3_T		230675	0		&			
ANR	230686	ConditionalExpression	color0 == gx_no_color_index ? rop3_D : color0 == 0 ? rop3_0 : rop3_1		230675	0					
ANR	230687	Condition	color0 == gx_no_color_index		230675	0					
ANR	230688	EqualityExpression	color0 == gx_no_color_index		230675	0		==			
ANR	230689	Identifier	color0		230675	0					
ANR	230690	Identifier	gx_no_color_index		230675	1					
ANR	230691	Identifier	rop3_D		230675	1					
ANR	230692	ConditionalExpression	color0 == 0 ? rop3_0 : rop3_1		230675	2					
ANR	230693	Condition	color0 == 0		230675	0					
ANR	230694	EqualityExpression	color0 == 0		230675	0		==			
ANR	230695	Identifier	color0		230675	0					
ANR	230696	PrimaryExpression	0		230675	1					
ANR	230697	Identifier	rop3_0		230675	1					
ANR	230698	Identifier	rop3_1		230675	2					
ANR	230699	Identifier	~rop3_T		230675	1					
ANR	230700	BitAndExpression	( color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1 ) & rop3_T		230675	1		&			
ANR	230701	ConditionalExpression	color1 == gx_no_color_index ? rop3_D : color1 == 0 ? rop3_0 : rop3_1		230675	0					
ANR	230702	Condition	color1 == gx_no_color_index		230675	0					
ANR	230703	EqualityExpression	color1 == gx_no_color_index		230675	0		==			
ANR	230704	Identifier	color1		230675	0					
ANR	230705	Identifier	gx_no_color_index		230675	1					
ANR	230706	Identifier	rop3_D		230675	1					
ANR	230707	ConditionalExpression	color1 == 0 ? rop3_0 : rop3_1		230675	2					
ANR	230708	Condition	color1 == 0		230675	0					
ANR	230709	EqualityExpression	color1 == 0		230675	0		==			
ANR	230710	Identifier	color1		230675	0					
ANR	230711	PrimaryExpression	0		230675	1					
ANR	230712	Identifier	rop3_0		230675	1					
ANR	230713	Identifier	rop3_1		230675	2					
ANR	230714	Identifier	rop3_T		230675	1					
ANR	230715	IfStatement	if ( rop == 0xAA )		230675	1					
ANR	230716	Condition	rop == 0xAA	867:8:32408:32418	230675	0	True				
ANR	230717	EqualityExpression	rop == 0xAA		230675	0		==			
ANR	230718	Identifier	rop		230675	0					
ANR	230719	PrimaryExpression	0xAA		230675	1					
ANR	230720	ReturnStatement	"return gx_default_strip_tile_rectangle ( dev , tiles , tx , y , tw , th , color0 , color1 , px , py ) ;"	868:8:32429:32565	230675	1	True				
ANR	230721	CallExpression	"gx_default_strip_tile_rectangle ( dev , tiles , tx , y , tw , th , color0 , color1 , px , py )"		230675	0					
ANR	230722	Callee	gx_default_strip_tile_rectangle		230675	0					
ANR	230723	Identifier	gx_default_strip_tile_rectangle		230675	0					
ANR	230724	ArgumentList	dev		230675	1					
ANR	230725	Argument	dev		230675	0					
ANR	230726	Identifier	dev		230675	0					
ANR	230727	Argument	tiles		230675	1					
ANR	230728	Identifier	tiles		230675	0					
ANR	230729	Argument	tx		230675	2					
ANR	230730	Identifier	tx		230675	0					
ANR	230731	Argument	y		230675	3					
ANR	230732	Identifier	y		230675	0					
ANR	230733	Argument	tw		230675	4					
ANR	230734	Identifier	tw		230675	0					
ANR	230735	Argument	th		230675	5					
ANR	230736	Identifier	th		230675	0					
ANR	230737	Argument	color0		230675	6					
ANR	230738	Identifier	color0		230675	0					
ANR	230739	Argument	color1		230675	7					
ANR	230740	Identifier	color1		230675	0					
ANR	230741	Argument	px		230675	8					
ANR	230742	Identifier	px		230675	0					
ANR	230743	Argument	py		230675	9					
ANR	230744	Identifier	py		230675	0					
ANR	230745	ReturnStatement	"return mem_mono_strip_copy_rop_dev ( dev , NULL , 0 , 0 , tiles -> id , NULL , tiles , NULL , tx , y , tw , th , px , py , rop ) ;"	870:4:32571:32758	230675	2	True				
ANR	230746	CallExpression	"mem_mono_strip_copy_rop_dev ( dev , NULL , 0 , 0 , tiles -> id , NULL , tiles , NULL , tx , y , tw , th , px , py , rop )"		230675	0					
ANR	230747	Callee	mem_mono_strip_copy_rop_dev		230675	0					
ANR	230748	Identifier	mem_mono_strip_copy_rop_dev		230675	0					
ANR	230749	ArgumentList	dev		230675	1					
ANR	230750	Argument	dev		230675	0					
ANR	230751	Identifier	dev		230675	0					
ANR	230752	Argument	NULL		230675	1					
ANR	230753	Identifier	NULL		230675	0					
ANR	230754	Argument	0		230675	2					
ANR	230755	PrimaryExpression	0		230675	0					
ANR	230756	Argument	0		230675	3					
ANR	230757	PrimaryExpression	0		230675	0					
ANR	230758	Argument	tiles -> id		230675	4					
ANR	230759	PtrMemberAccess	tiles -> id		230675	0					
ANR	230760	Identifier	tiles		230675	0					
ANR	230761	Identifier	id		230675	1					
ANR	230762	Argument	NULL		230675	5					
ANR	230763	Identifier	NULL		230675	0					
ANR	230764	Argument	tiles		230675	6					
ANR	230765	Identifier	tiles		230675	0					
ANR	230766	Argument	NULL		230675	7					
ANR	230767	Identifier	NULL		230675	0					
ANR	230768	Argument	tx		230675	8					
ANR	230769	Identifier	tx		230675	0					
ANR	230770	Argument	y		230675	9					
ANR	230771	Identifier	y		230675	0					
ANR	230772	Argument	tw		230675	10					
ANR	230773	Identifier	tw		230675	0					
ANR	230774	Argument	th		230675	11					
ANR	230775	Identifier	th		230675	0					
ANR	230776	Argument	px		230675	12					
ANR	230777	Identifier	px		230675	0					
ANR	230778	Argument	py		230675	13					
ANR	230779	Identifier	py		230675	0					
ANR	230780	Argument	rop		230675	14					
ANR	230781	Identifier	rop		230675	0					
ANR	230782	ReturnType	static int		230675	1					
ANR	230783	Identifier	mem_mono_strip_tile_rectangle		230675	2					
ANR	230784	ParameterList	"gx_device * dev , register const gx_strip_bitmap * tiles , int tx , int y , int tw , int th , gx_color_index color0 , gx_color_index color1 , int px , int py"		230675	3					
ANR	230785	Parameter	gx_device * dev	853:30:31625:31639	230675	0	True				
ANR	230786	ParameterType	gx_device *		230675	0					
ANR	230787	Identifier	dev		230675	1					
ANR	230788	Parameter	register const gx_strip_bitmap * tiles	854:30:31672:31709	230675	1	True				
ANR	230789	ParameterType	register const gx_strip_bitmap *		230675	0					
ANR	230790	Identifier	tiles		230675	1					
ANR	230791	Parameter	int tx	855:0:31712:31717	230675	2	True				
ANR	230792	ParameterType	int		230675	0					
ANR	230793	Identifier	tx		230675	1					
ANR	230794	Parameter	int y	855:8:31720:31724	230675	3	True				
ANR	230795	ParameterType	int		230675	0					
ANR	230796	Identifier	y		230675	1					
ANR	230797	Parameter	int tw	855:15:31727:31732	230675	4	True				
ANR	230798	ParameterType	int		230675	0					
ANR	230799	Identifier	tw		230675	1					
ANR	230800	Parameter	int th	855:23:31735:31740	230675	5	True				
ANR	230801	ParameterType	int		230675	0					
ANR	230802	Identifier	th		230675	1					
ANR	230803	Parameter	gx_color_index color0	855:31:31743:31763	230675	6	True				
ANR	230804	ParameterType	gx_color_index		230675	0					
ANR	230805	Identifier	color0		230675	1					
ANR	230806	Parameter	gx_color_index color1	855:54:31766:31786	230675	7	True				
ANR	230807	ParameterType	gx_color_index		230675	0					
ANR	230808	Identifier	color1		230675	1					
ANR	230809	Parameter	int px	856:30:31819:31824	230675	8	True				
ANR	230810	ParameterType	int		230675	0					
ANR	230811	Identifier	px		230675	1					
ANR	230812	Parameter	int py	856:38:31827:31832	230675	9	True				
ANR	230813	ParameterType	int		230675	0					
ANR	230814	Identifier	py		230675	1					
ANR	230815	CFGEntryNode	ENTRY		230675		True				
ANR	230816	CFGExitNode	EXIT		230675		True				
ANR	230817	Symbol	tw		230675						
ANR	230818	Symbol	NULL		230675						
ANR	230819	Symbol	tx		230675						
ANR	230820	Symbol	px		230675						
ANR	230821	Symbol	py		230675						
ANR	230822	Symbol	rop3_0		230675						
ANR	230823	Symbol	rop3_1		230675						
ANR	230824	Symbol	rop3_T		230675						
ANR	230825	Symbol	color1		230675						
ANR	230826	Symbol	tiles		230675						
ANR	230827	Symbol	rop		230675						
ANR	230828	Symbol	mem_mono_strip_copy_rop_dev		230675						
ANR	230829	Symbol	color0		230675						
ANR	230830	Symbol	gx_no_color_index		230675						
ANR	230831	Symbol	dev		230675						
ANR	230832	Symbol	th		230675						
ANR	230833	Symbol	y		230675						
ANR	230834	Symbol	~rop3_T		230675						
ANR	230835	Symbol	tiles -> id		230675						
ANR	230836	Symbol	* tiles		230675						
ANR	230837	Symbol	rop3_D		230675						
ANR	230838	Symbol	gx_default_strip_tile_rectangle		230675						
ANR	230839	DeclStmt									
ANR	230840	Decl							const gx_device_memory	const gx_device_memory	mem_mono_word_device
ANR	230841	Function	mem1_word_fill_rectangle	1100:0:40668:41186							
ANR	230842	FunctionDef	"mem1_word_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		230841	0					
ANR	230843	CompoundStatement		1103:0:40796:41186	230841	0					
ANR	230844	Statement	gx_device_memory	1104:4:40802:40817	230841	0	True				
ANR	230845	Statement	*	1104:21:40819:40819	230841	1	True				
ANR	230846	Statement	const	1104:23:40821:40825	230841	2	True				
ANR	230847	ExpressionStatement	mdev = ( gx_device_memory * ) dev	1104:29:40827:40857	230841	3	True				
ANR	230848	AssignmentExpression	mdev = ( gx_device_memory * ) dev		230841	0		=			
ANR	230849	Identifier	mdev		230841	0					
ANR	230850	CastExpression	( gx_device_memory * ) dev		230841	1					
ANR	230851	CastTarget	gx_device_memory *		230841	0					
ANR	230852	Identifier	dev		230841	1					
ANR	230853	IdentifierDeclStatement	byte * base ;	1105:4:40863:40873	230841	4	True				
ANR	230854	IdentifierDecl	* base		230841	0					
ANR	230855	IdentifierDeclType	byte *		230841	0					
ANR	230856	Identifier	base		230841	1					
ANR	230857	IdentifierDeclStatement	uint raster ;	1106:4:40879:40890	230841	5	True				
ANR	230858	IdentifierDecl	raster		230841	0					
ANR	230859	IdentifierDeclType	uint		230841	0					
ANR	230860	Identifier	raster		230841	1					
ANR	230861	ExpressionStatement	"fit_fill ( dev , x , y , w , h )"	1108:4:40897:40922	230841	6	True				
ANR	230862	CallExpression	"fit_fill ( dev , x , y , w , h )"		230841	0					
ANR	230863	Callee	fit_fill		230841	0					
ANR	230864	Identifier	fit_fill		230841	0					
ANR	230865	ArgumentList	dev		230841	1					
ANR	230866	Argument	dev		230841	0					
ANR	230867	Identifier	dev		230841	0					
ANR	230868	Argument	x		230841	1					
ANR	230869	Identifier	x		230841	0					
ANR	230870	Argument	y		230841	2					
ANR	230871	Identifier	y		230841	0					
ANR	230872	Argument	w		230841	3					
ANR	230873	Identifier	w		230841	0					
ANR	230874	Argument	h		230841	4					
ANR	230875	Identifier	h		230841	0					
ANR	230876	ExpressionStatement	"base = scan_line_base ( mdev , y )"	1109:4:40928:40958	230841	7	True				
ANR	230877	AssignmentExpression	"base = scan_line_base ( mdev , y )"		230841	0		=			
ANR	230878	Identifier	base		230841	0					
ANR	230879	CallExpression	"scan_line_base ( mdev , y )"		230841	1					
ANR	230880	Callee	scan_line_base		230841	0					
ANR	230881	Identifier	scan_line_base		230841	0					
ANR	230882	ArgumentList	mdev		230841	1					
ANR	230883	Argument	mdev		230841	0					
ANR	230884	Identifier	mdev		230841	0					
ANR	230885	Argument	y		230841	1					
ANR	230886	Identifier	y		230841	0					
ANR	230887	ExpressionStatement	raster = mdev -> raster	1110:4:40964:40985	230841	8	True				
ANR	230888	AssignmentExpression	raster = mdev -> raster		230841	0		=			
ANR	230889	Identifier	raster		230841	0					
ANR	230890	PtrMemberAccess	mdev -> raster		230841	1					
ANR	230891	Identifier	mdev		230841	0					
ANR	230892	Identifier	raster		230841	1					
ANR	230893	ExpressionStatement	"mem_swap_byte_rect ( base , raster , x , w , h , true )"	1111:4:40991:41038	230841	9	True				
ANR	230894	CallExpression	"mem_swap_byte_rect ( base , raster , x , w , h , true )"		230841	0					
ANR	230895	Callee	mem_swap_byte_rect		230841	0					
ANR	230896	Identifier	mem_swap_byte_rect		230841	0					
ANR	230897	ArgumentList	base		230841	1					
ANR	230898	Argument	base		230841	0					
ANR	230899	Identifier	base		230841	0					
ANR	230900	Argument	raster		230841	1					
ANR	230901	Identifier	raster		230841	0					
ANR	230902	Argument	x		230841	2					
ANR	230903	Identifier	x		230841	0					
ANR	230904	Argument	w		230841	3					
ANR	230905	Identifier	w		230841	0					
ANR	230906	Argument	h		230841	4					
ANR	230907	Identifier	h		230841	0					
ANR	230908	Argument	true		230841	5					
ANR	230909	Identifier	true		230841	0					
ANR	230910	ExpressionStatement	"bits_fill_rectangle ( base , x , raster , - ( int ) ( mono_fill_chunk ) color , w , h )"	1112:4:41044:41117	230841	10	True				
ANR	230911	CallExpression	"bits_fill_rectangle ( base , x , raster , - ( int ) ( mono_fill_chunk ) color , w , h )"		230841	0					
ANR	230912	Callee	bits_fill_rectangle		230841	0					
ANR	230913	Identifier	bits_fill_rectangle		230841	0					
ANR	230914	ArgumentList	base		230841	1					
ANR	230915	Argument	base		230841	0					
ANR	230916	Identifier	base		230841	0					
ANR	230917	Argument	x		230841	1					
ANR	230918	Identifier	x		230841	0					
ANR	230919	Argument	raster		230841	2					
ANR	230920	Identifier	raster		230841	0					
ANR	230921	Argument	- ( int ) ( mono_fill_chunk ) color		230841	3					
ANR	230922	UnaryOperationExpression	- ( int ) ( mono_fill_chunk ) color		230841	0					
ANR	230923	UnaryOperator	-		230841	0					
ANR	230924	CastExpression	( int ) ( mono_fill_chunk ) color		230841	1					
ANR	230925	CastTarget	int		230841	0					
ANR	230926	CastExpression	( mono_fill_chunk ) color		230841	1					
ANR	230927	CastTarget	mono_fill_chunk		230841	0					
ANR	230928	Identifier	color		230841	1					
ANR	230929	Argument	w		230841	4					
ANR	230930	Identifier	w		230841	0					
ANR	230931	Argument	h		230841	5					
ANR	230932	Identifier	h		230841	0					
ANR	230933	ExpressionStatement	"mem_swap_byte_rect ( base , raster , x , w , h , true )"	1113:4:41123:41170	230841	11	True				
ANR	230934	CallExpression	"mem_swap_byte_rect ( base , raster , x , w , h , true )"		230841	0					
ANR	230935	Callee	mem_swap_byte_rect		230841	0					
ANR	230936	Identifier	mem_swap_byte_rect		230841	0					
ANR	230937	ArgumentList	base		230841	1					
ANR	230938	Argument	base		230841	0					
ANR	230939	Identifier	base		230841	0					
ANR	230940	Argument	raster		230841	1					
ANR	230941	Identifier	raster		230841	0					
ANR	230942	Argument	x		230841	2					
ANR	230943	Identifier	x		230841	0					
ANR	230944	Argument	w		230841	3					
ANR	230945	Identifier	w		230841	0					
ANR	230946	Argument	h		230841	4					
ANR	230947	Identifier	h		230841	0					
ANR	230948	Argument	true		230841	5					
ANR	230949	Identifier	true		230841	0					
ANR	230950	ReturnStatement	return 0 ;	1114:4:41176:41184	230841	12	True				
ANR	230951	PrimaryExpression	0		230841	0					
ANR	230952	ReturnType	static int		230841	1					
ANR	230953	Identifier	mem1_word_fill_rectangle		230841	2					
ANR	230954	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		230841	3					
ANR	230955	Parameter	gx_device * dev	1101:25:40704:40718	230841	0	True				
ANR	230956	ParameterType	gx_device *		230841	0					
ANR	230957	Identifier	dev		230841	1					
ANR	230958	Parameter	int x	1101:42:40721:40725	230841	1	True				
ANR	230959	ParameterType	int		230841	0					
ANR	230960	Identifier	x		230841	1					
ANR	230961	Parameter	int y	1101:49:40728:40732	230841	2	True				
ANR	230962	ParameterType	int		230841	0					
ANR	230963	Identifier	y		230841	1					
ANR	230964	Parameter	int w	1101:56:40735:40739	230841	3	True				
ANR	230965	ParameterType	int		230841	0					
ANR	230966	Identifier	w		230841	1					
ANR	230967	Parameter	int h	1101:63:40742:40746	230841	4	True				
ANR	230968	ParameterType	int		230841	0					
ANR	230969	Identifier	h		230841	1					
ANR	230970	Parameter	gx_color_index color	1102:25:40774:40793	230841	5	True				
ANR	230971	ParameterType	gx_color_index		230841	0					
ANR	230972	Identifier	color		230841	1					
ANR	230973	CFGEntryNode	ENTRY		230841		True				
ANR	230974	CFGExitNode	EXIT		230841		True				
ANR	230975	Symbol	color		230841						
ANR	230976	Symbol	h		230841						
ANR	230977	Symbol	raster		230841						
ANR	230978	Symbol	mdev -> raster		230841						
ANR	230979	Symbol	dev		230841						
ANR	230980	Symbol	scan_line_base		230841						
ANR	230981	Symbol	w		230841						
ANR	230982	Symbol	x		230841						
ANR	230983	Symbol	true		230841						
ANR	230984	Symbol	y		230841						
ANR	230985	Symbol	mdev		230841						
ANR	230986	Symbol	base		230841						
ANR	230987	Symbol	* mdev		230841						
ANR	230988	Function	mem1_word_copy_mono	1118:0:41210:41975							
ANR	230989	FunctionDef	"mem1_word_copy_mono (gx_device * dev , const byte * source_data , int source_x , int source_raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1)"		230988	0					
ANR	230990	CompoundStatement		1122:0:41412:41975	230988	0					
ANR	230991	Statement	gx_device_memory	1123:4:41418:41433	230988	0	True				
ANR	230992	Statement	*	1123:21:41435:41435	230988	1	True				
ANR	230993	Statement	const	1123:23:41437:41441	230988	2	True				
ANR	230994	ExpressionStatement	mdev = ( gx_device_memory * ) dev	1123:29:41443:41473	230988	3	True				
ANR	230995	AssignmentExpression	mdev = ( gx_device_memory * ) dev		230988	0		=			
ANR	230996	Identifier	mdev		230988	0					
ANR	230997	CastExpression	( gx_device_memory * ) dev		230988	1					
ANR	230998	CastTarget	gx_device_memory *		230988	0					
ANR	230999	Identifier	dev		230988	1					
ANR	231000	IdentifierDeclStatement	byte * row ;	1124:4:41479:41488	230988	4	True				
ANR	231001	IdentifierDecl	* row		230988	0					
ANR	231002	IdentifierDeclType	byte *		230988	0					
ANR	231003	Identifier	row		230988	1					
ANR	231004	IdentifierDeclStatement	uint raster ;	1125:4:41494:41505	230988	5	True				
ANR	231005	IdentifierDecl	raster		230988	0					
ANR	231006	IdentifierDeclType	uint		230988	0					
ANR	231007	Identifier	raster		230988	1					
ANR	231008	IdentifierDeclStatement	bool store ;	1126:4:41511:41521	230988	6	True				
ANR	231009	IdentifierDecl	store		230988	0					
ANR	231010	IdentifierDeclType	bool		230988	0					
ANR	231011	Identifier	store		230988	1					
ANR	231012	ExpressionStatement	"fit_copy ( dev , source_data , source_x , source_raster , id , x , y , w , h )"	1128:4:41528:41595	230988	7	True				
ANR	231013	CallExpression	"fit_copy ( dev , source_data , source_x , source_raster , id , x , y , w , h )"		230988	0					
ANR	231014	Callee	fit_copy		230988	0					
ANR	231015	Identifier	fit_copy		230988	0					
ANR	231016	ArgumentList	dev		230988	1					
ANR	231017	Argument	dev		230988	0					
ANR	231018	Identifier	dev		230988	0					
ANR	231019	Argument	source_data		230988	1					
ANR	231020	Identifier	source_data		230988	0					
ANR	231021	Argument	source_x		230988	2					
ANR	231022	Identifier	source_x		230988	0					
ANR	231023	Argument	source_raster		230988	3					
ANR	231024	Identifier	source_raster		230988	0					
ANR	231025	Argument	id		230988	4					
ANR	231026	Identifier	id		230988	0					
ANR	231027	Argument	x		230988	5					
ANR	231028	Identifier	x		230988	0					
ANR	231029	Argument	y		230988	6					
ANR	231030	Identifier	y		230988	0					
ANR	231031	Argument	w		230988	7					
ANR	231032	Identifier	w		230988	0					
ANR	231033	Argument	h		230988	8					
ANR	231034	Identifier	h		230988	0					
ANR	231035	ExpressionStatement	"row = scan_line_base ( mdev , y )"	1129:4:41601:41630	230988	8	True				
ANR	231036	AssignmentExpression	"row = scan_line_base ( mdev , y )"		230988	0		=			
ANR	231037	Identifier	row		230988	0					
ANR	231038	CallExpression	"scan_line_base ( mdev , y )"		230988	1					
ANR	231039	Callee	scan_line_base		230988	0					
ANR	231040	Identifier	scan_line_base		230988	0					
ANR	231041	ArgumentList	mdev		230988	1					
ANR	231042	Argument	mdev		230988	0					
ANR	231043	Identifier	mdev		230988	0					
ANR	231044	Argument	y		230988	1					
ANR	231045	Identifier	y		230988	0					
ANR	231046	ExpressionStatement	raster = mdev -> raster	1130:4:41636:41657	230988	9	True				
ANR	231047	AssignmentExpression	raster = mdev -> raster		230988	0		=			
ANR	231048	Identifier	raster		230988	0					
ANR	231049	PtrMemberAccess	mdev -> raster		230988	1					
ANR	231050	Identifier	mdev		230988	0					
ANR	231051	Identifier	raster		230988	1					
ANR	231052	ExpressionStatement	store = ( color0 != gx_no_color_index && color1 != gx_no_color_index )	1131:4:41663:41731	230988	10	True				
ANR	231053	AssignmentExpression	store = ( color0 != gx_no_color_index && color1 != gx_no_color_index )		230988	0		=			
ANR	231054	Identifier	store		230988	0					
ANR	231055	AndExpression	color0 != gx_no_color_index && color1 != gx_no_color_index		230988	1		&&			
ANR	231056	EqualityExpression	color0 != gx_no_color_index		230988	0		!=			
ANR	231057	Identifier	color0		230988	0					
ANR	231058	Identifier	gx_no_color_index		230988	1					
ANR	231059	EqualityExpression	color1 != gx_no_color_index		230988	1		!=			
ANR	231060	Identifier	color1		230988	0					
ANR	231061	Identifier	gx_no_color_index		230988	1					
ANR	231062	ExpressionStatement	"mem_swap_byte_rect ( row , raster , x , w , h , store )"	1132:4:41737:41784	230988	11	True				
ANR	231063	CallExpression	"mem_swap_byte_rect ( row , raster , x , w , h , store )"		230988	0					
ANR	231064	Callee	mem_swap_byte_rect		230988	0					
ANR	231065	Identifier	mem_swap_byte_rect		230988	0					
ANR	231066	ArgumentList	row		230988	1					
ANR	231067	Argument	row		230988	0					
ANR	231068	Identifier	row		230988	0					
ANR	231069	Argument	raster		230988	1					
ANR	231070	Identifier	raster		230988	0					
ANR	231071	Argument	x		230988	2					
ANR	231072	Identifier	x		230988	0					
ANR	231073	Argument	w		230988	3					
ANR	231074	Identifier	w		230988	0					
ANR	231075	Argument	h		230988	4					
ANR	231076	Identifier	h		230988	0					
ANR	231077	Argument	store		230988	5					
ANR	231078	Identifier	store		230988	0					
ANR	231079	ExpressionStatement	"mem_mono_copy_mono ( dev , source_data , source_x , source_raster , id , x , y , w , h , color0 , color1 )"	1133:4:41790:41906	230988	12	True				
ANR	231080	CallExpression	"mem_mono_copy_mono ( dev , source_data , source_x , source_raster , id , x , y , w , h , color0 , color1 )"		230988	0					
ANR	231081	Callee	mem_mono_copy_mono		230988	0					
ANR	231082	Identifier	mem_mono_copy_mono		230988	0					
ANR	231083	ArgumentList	dev		230988	1					
ANR	231084	Argument	dev		230988	0					
ANR	231085	Identifier	dev		230988	0					
ANR	231086	Argument	source_data		230988	1					
ANR	231087	Identifier	source_data		230988	0					
ANR	231088	Argument	source_x		230988	2					
ANR	231089	Identifier	source_x		230988	0					
ANR	231090	Argument	source_raster		230988	3					
ANR	231091	Identifier	source_raster		230988	0					
ANR	231092	Argument	id		230988	4					
ANR	231093	Identifier	id		230988	0					
ANR	231094	Argument	x		230988	5					
ANR	231095	Identifier	x		230988	0					
ANR	231096	Argument	y		230988	6					
ANR	231097	Identifier	y		230988	0					
ANR	231098	Argument	w		230988	7					
ANR	231099	Identifier	w		230988	0					
ANR	231100	Argument	h		230988	8					
ANR	231101	Identifier	h		230988	0					
ANR	231102	Argument	color0		230988	9					
ANR	231103	Identifier	color0		230988	0					
ANR	231104	Argument	color1		230988	10					
ANR	231105	Identifier	color1		230988	0					
ANR	231106	ExpressionStatement	"mem_swap_byte_rect ( row , raster , x , w , h , false )"	1135:4:41912:41959	230988	13	True				
ANR	231107	CallExpression	"mem_swap_byte_rect ( row , raster , x , w , h , false )"		230988	0					
ANR	231108	Callee	mem_swap_byte_rect		230988	0					
ANR	231109	Identifier	mem_swap_byte_rect		230988	0					
ANR	231110	ArgumentList	row		230988	1					
ANR	231111	Argument	row		230988	0					
ANR	231112	Identifier	row		230988	0					
ANR	231113	Argument	raster		230988	1					
ANR	231114	Identifier	raster		230988	0					
ANR	231115	Argument	x		230988	2					
ANR	231116	Identifier	x		230988	0					
ANR	231117	Argument	w		230988	3					
ANR	231118	Identifier	w		230988	0					
ANR	231119	Argument	h		230988	4					
ANR	231120	Identifier	h		230988	0					
ANR	231121	Argument	false		230988	5					
ANR	231122	Identifier	false		230988	0					
ANR	231123	ReturnStatement	return 0 ;	1136:4:41965:41973	230988	14	True				
ANR	231124	PrimaryExpression	0		230988	0					
ANR	231125	ReturnType	static int		230988	1					
ANR	231126	Identifier	mem1_word_copy_mono		230988	2					
ANR	231127	ParameterList	"gx_device * dev , const byte * source_data , int source_x , int source_raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index color0 , gx_color_index color1"		230988	3					
ANR	231128	Parameter	gx_device * dev	1119:20:41241:41255	230988	0	True				
ANR	231129	ParameterType	gx_device *		230988	0					
ANR	231130	Identifier	dev		230988	1					
ANR	231131	Parameter	const byte * source_data	1120:1:41259:41282	230988	1	True				
ANR	231132	ParameterType	const byte *		230988	0					
ANR	231133	Identifier	source_data		230988	1					
ANR	231134	Parameter	int source_x	1120:27:41285:41296	230988	2	True				
ANR	231135	ParameterType	int		230988	0					
ANR	231136	Identifier	source_x		230988	1					
ANR	231137	Parameter	int source_raster	1120:41:41299:41315	230988	3	True				
ANR	231138	ParameterType	int		230988	0					
ANR	231139	Identifier	source_raster		230988	1					
ANR	231140	Parameter	gx_bitmap_id id	1120:60:41318:41332	230988	4	True				
ANR	231141	ParameterType	gx_bitmap_id		230988	0					
ANR	231142	Identifier	id		230988	1					
ANR	231143	Parameter	int x	1121:3:41338:41342	230988	5	True				
ANR	231144	ParameterType	int		230988	0					
ANR	231145	Identifier	x		230988	1					
ANR	231146	Parameter	int y	1121:10:41345:41349	230988	6	True				
ANR	231147	ParameterType	int		230988	0					
ANR	231148	Identifier	y		230988	1					
ANR	231149	Parameter	int w	1121:17:41352:41356	230988	7	True				
ANR	231150	ParameterType	int		230988	0					
ANR	231151	Identifier	w		230988	1					
ANR	231152	Parameter	int h	1121:24:41359:41363	230988	8	True				
ANR	231153	ParameterType	int		230988	0					
ANR	231154	Identifier	h		230988	1					
ANR	231155	Parameter	gx_color_index color0	1121:31:41366:41386	230988	9	True				
ANR	231156	ParameterType	gx_color_index		230988	0					
ANR	231157	Identifier	color0		230988	1					
ANR	231158	Parameter	gx_color_index color1	1121:54:41389:41409	230988	10	True				
ANR	231159	ParameterType	gx_color_index		230988	0					
ANR	231160	Identifier	color1		230988	1					
ANR	231161	CFGEntryNode	ENTRY		230988		True				
ANR	231162	CFGExitNode	EXIT		230988		True				
ANR	231163	Symbol	source_x		230988						
ANR	231164	Symbol	source_data		230988						
ANR	231165	Symbol	h		230988						
ANR	231166	Symbol	raster		230988						
ANR	231167	Symbol	false		230988						
ANR	231168	Symbol	store		230988						
ANR	231169	Symbol	mdev -> raster		230988						
ANR	231170	Symbol	source_raster		230988						
ANR	231171	Symbol	color1		230988						
ANR	231172	Symbol	color0		230988						
ANR	231173	Symbol	gx_no_color_index		230988						
ANR	231174	Symbol	dev		230988						
ANR	231175	Symbol	scan_line_base		230988						
ANR	231176	Symbol	w		230988						
ANR	231177	Symbol	x		230988						
ANR	231178	Symbol	y		230988						
ANR	231179	Symbol	id		230988						
ANR	231180	Symbol	mdev		230988						
ANR	231181	Symbol	row		230988						
ANR	231182	Symbol	* mdev		230988						
