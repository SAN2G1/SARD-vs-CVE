command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8973189	File	data/converged/CVE-2018-16863_ghostpdl/psi_zcolor.c								
ANR	8973190	DeclStmt									
ANR	8973191	Decl							const float	const float [ ]	default_0_1
ANR	8973192	DeclStmt									
ANR	8973193	Decl							extern void	extern void ( gs_gstate * )	gx_set_effective_transfer
ANR	8973194	DeclStmt									
ANR	8973195	Decl							int	"int ( i_ctx_t * i_ctx_p , ref * arr , int * depth )"	validate_spaces
ANR	8973196	DeclStmt									
ANR	8973197	Decl							int	int ( i_ctx_t * i_ctx_p )	setcolorspace_cont
ANR	8973198	DeclStmt									
ANR	8973199	Decl							int	int ( i_ctx_t * i_ctx_p )	setcolor_cont
ANR	8973200	DeclStmt									
ANR	8973201	Decl							const int	const int	zcolor_remap_one_ostack
ANR	8973202	DeclStmt									
ANR	8973203	Decl							const int	const int	zcolor_remap_one_estack
ANR	8973204	Function	pattern_instance_uses_base_space	79:0:2802:3000							
ANR	8973205	FunctionDef	pattern_instance_uses_base_space (const gs_pattern_instance_t * pinst)		8973204	0					
ANR	8973206	CompoundStatement		81:0:2891:3000	8973204	0					
ANR	8973207	ReturnStatement	return pinst -> type -> procs . uses_base_space ( pinst -> type -> procs . get_pattern ( pinst ) ) ;	82:4:2897:2998	8973204	0	True				
ANR	8973208	CallExpression	pinst -> type -> procs . uses_base_space ( pinst -> type -> procs . get_pattern ( pinst ) )		8973204	0					
ANR	8973209	Callee	pinst -> type -> procs . uses_base_space		8973204	0					
ANR	8973210	MemberAccess	pinst -> type -> procs . uses_base_space		8973204	0					
ANR	8973211	PtrMemberAccess	pinst -> type -> procs		8973204	0					
ANR	8973212	PtrMemberAccess	pinst -> type		8973204	0					
ANR	8973213	Identifier	pinst		8973204	0					
ANR	8973214	Identifier	type		8973204	1					
ANR	8973215	Identifier	procs		8973204	1					
ANR	8973216	Identifier	uses_base_space		8973204	1					
ANR	8973217	ArgumentList	pinst -> type -> procs . get_pattern ( pinst )		8973204	1					
ANR	8973218	Argument	pinst -> type -> procs . get_pattern ( pinst )		8973204	0					
ANR	8973219	CallExpression	pinst -> type -> procs . get_pattern ( pinst )		8973204	0					
ANR	8973220	Callee	pinst -> type -> procs . get_pattern		8973204	0					
ANR	8973221	MemberAccess	pinst -> type -> procs . get_pattern		8973204	0					
ANR	8973222	PtrMemberAccess	pinst -> type -> procs		8973204	0					
ANR	8973223	PtrMemberAccess	pinst -> type		8973204	0					
ANR	8973224	Identifier	pinst		8973204	0					
ANR	8973225	Identifier	type		8973204	1					
ANR	8973226	Identifier	procs		8973204	1					
ANR	8973227	Identifier	get_pattern		8973204	1					
ANR	8973228	ArgumentList	pinst		8973204	1					
ANR	8973229	Argument	pinst		8973204	0					
ANR	8973230	Identifier	pinst		8973204	0					
ANR	8973231	ReturnType	static inline bool		8973204	1					
ANR	8973232	Identifier	pattern_instance_uses_base_space		8973204	2					
ANR	8973233	ParameterList	const gs_pattern_instance_t * pinst		8973204	3					
ANR	8973234	Parameter	const gs_pattern_instance_t * pinst	80:33:2854:2888	8973204	0	True				
ANR	8973235	ParameterType	const gs_pattern_instance_t *		8973204	0					
ANR	8973236	Identifier	pinst		8973204	1					
ANR	8973237	CFGEntryNode	ENTRY		8973204		True				
ANR	8973238	CFGExitNode	EXIT		8973204		True				
ANR	8973239	Symbol	pinst -> type -> procs . uses_base_space		8973204						
ANR	8973240	Symbol	* * pinst		8973204						
ANR	8973241	Symbol	pinst -> type		8973204						
ANR	8973242	Symbol	* pinst -> type		8973204						
ANR	8973243	Symbol	pinst -> type -> procs		8973204						
ANR	8973244	Symbol	* pinst		8973204						
ANR	8973245	Symbol	pinst		8973204						
ANR	8973246	Symbol	pinst -> type -> procs . get_pattern		8973204						
ANR	8973247	Function	zcurrentcolor	102:0:3724:4905							
ANR	8973248	FunctionDef	zcurrentcolor (i_ctx_t * i_ctx_p)		8973247	0					
ANR	8973249	CompoundStatement		104:0:3768:4905	8973247	0					
ANR	8973250	IdentifierDeclStatement	os_ptr op = osp ;	105:4:3774:3806	8973247	0	True				
ANR	8973251	IdentifierDecl	op = osp		8973247	0					
ANR	8973252	IdentifierDeclType	os_ptr		8973247	0					
ANR	8973253	Identifier	op		8973247	1					
ANR	8973254	AssignmentExpression	op = osp		8973247	2		=			
ANR	8973255	Identifier	osp		8973247	0					
ANR	8973256	Identifier	osp		8973247	1					
ANR	8973257	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	106:4:3812:3867	8973247	1	True				
ANR	8973258	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		8973247	0					
ANR	8973259	IdentifierDeclType	const gs_color_space *		8973247	0					
ANR	8973260	Identifier	pcs		8973247	1					
ANR	8973261	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		8973247	2		=			
ANR	8973262	Identifier	pcs		8973247	0					
ANR	8973263	CallExpression	gs_currentcolorspace ( igs )		8973247	1					
ANR	8973264	Callee	gs_currentcolorspace		8973247	0					
ANR	8973265	Identifier	gs_currentcolorspace		8973247	0					
ANR	8973266	ArgumentList	igs		8973247	1					
ANR	8973267	Argument	igs		8973247	0					
ANR	8973268	Identifier	igs		8973247	0					
ANR	8973269	IdentifierDeclStatement	const gs_client_color * pcc = gs_currentcolor ( igs ) ;	107:4:3873:3923	8973247	2	True				
ANR	8973270	IdentifierDecl	* pcc = gs_currentcolor ( igs )		8973247	0					
ANR	8973271	IdentifierDeclType	const gs_client_color *		8973247	0					
ANR	8973272	Identifier	pcc		8973247	1					
ANR	8973273	AssignmentExpression	* pcc = gs_currentcolor ( igs )		8973247	2		=			
ANR	8973274	Identifier	pcc		8973247	0					
ANR	8973275	CallExpression	gs_currentcolor ( igs )		8973247	1					
ANR	8973276	Callee	gs_currentcolor		8973247	0					
ANR	8973277	Identifier	gs_currentcolor		8973247	0					
ANR	8973278	ArgumentList	igs		8973247	1					
ANR	8973279	Argument	igs		8973247	0					
ANR	8973280	Identifier	igs		8973247	0					
ANR	8973281	IdentifierDeclStatement	"int i , n = cs_num_components ( pcs ) ;"	108:4:3929:3982	8973247	3	True				
ANR	8973282	IdentifierDecl	i		8973247	0					
ANR	8973283	IdentifierDeclType	int		8973247	0					
ANR	8973284	Identifier	i		8973247	1					
ANR	8973285	IdentifierDecl	n = cs_num_components ( pcs )		8973247	1					
ANR	8973286	IdentifierDeclType	int		8973247	0					
ANR	8973287	Identifier	n		8973247	1					
ANR	8973288	AssignmentExpression	n = cs_num_components ( pcs )		8973247	2		=			
ANR	8973289	Identifier	n		8973247	0					
ANR	8973290	CallExpression	cs_num_components ( pcs )		8973247	1					
ANR	8973291	Callee	cs_num_components		8973247	0					
ANR	8973292	Identifier	cs_num_components		8973247	0					
ANR	8973293	ArgumentList	pcs		8973247	1					
ANR	8973294	Argument	pcs		8973247	0					
ANR	8973295	Identifier	pcs		8973247	0					
ANR	8973296	IdentifierDeclStatement	bool push_pattern = n < 0 ;	109:4:3988:4032	8973247	4	True				
ANR	8973297	IdentifierDecl	push_pattern = n < 0		8973247	0					
ANR	8973298	IdentifierDeclType	bool		8973247	0					
ANR	8973299	Identifier	push_pattern		8973247	1					
ANR	8973300	AssignmentExpression	push_pattern = n < 0		8973247	2		=			
ANR	8973301	Identifier	push_pattern		8973247	0					
ANR	8973302	RelationalExpression	n < 0		8973247	1		<			
ANR	8973303	Identifier	n		8973247	0					
ANR	8973304	PrimaryExpression	0		8973247	1					
ANR	8973305	IfStatement	if ( push_pattern )		8973247	5					
ANR	8973306	Condition	push_pattern	112:8:4071:4082	8973247	0	True				
ANR	8973307	Identifier	push_pattern		8973247	0					
ANR	8973308	CompoundStatement		10:8:326:370	8973247	1					
ANR	8973309	IdentifierDeclStatement	gs_pattern_instance_t * pinst = pcc -> pattern ;	113:8:4095:4139	8973247	0	True				
ANR	8973310	IdentifierDecl	* pinst = pcc -> pattern		8973247	0					
ANR	8973311	IdentifierDeclType	gs_pattern_instance_t *		8973247	0					
ANR	8973312	Identifier	pinst		8973247	1					
ANR	8973313	AssignmentExpression	* pinst = pcc -> pattern		8973247	2		=			
ANR	8973314	Identifier	pinst		8973247	0					
ANR	8973315	PtrMemberAccess	pcc -> pattern		8973247	1					
ANR	8973316	Identifier	pcc		8973247	0					
ANR	8973317	Identifier	pattern		8973247	1					
ANR	8973318	IfStatement	if ( pinst == 0 || ! pattern_instance_uses_base_space ( pinst ) )		8973247	1					
ANR	8973319	Condition	pinst == 0 || ! pattern_instance_uses_base_space ( pinst )	115:12:4154:4207	8973247	0	True				
ANR	8973320	OrExpression	pinst == 0 || ! pattern_instance_uses_base_space ( pinst )		8973247	0		||			
ANR	8973321	EqualityExpression	pinst == 0		8973247	0		==			
ANR	8973322	Identifier	pinst		8973247	0					
ANR	8973323	PrimaryExpression	0		8973247	1					
ANR	8973324	UnaryOperationExpression	! pattern_instance_uses_base_space ( pinst )		8973247	1					
ANR	8973325	UnaryOperator	!		8973247	0					
ANR	8973326	CallExpression	pattern_instance_uses_base_space ( pinst )		8973247	1					
ANR	8973327	Callee	pattern_instance_uses_base_space		8973247	0					
ANR	8973328	Identifier	pattern_instance_uses_base_space		8973247	0					
ANR	8973329	ArgumentList	pinst		8973247	1					
ANR	8973330	Argument	pinst		8973247	0					
ANR	8973331	Identifier	pinst		8973247	0					
ANR	8973332	ExpressionStatement	n = 1	116:12:4222:4227	8973247	1	True				
ANR	8973333	AssignmentExpression	n = 1		8973247	0		=			
ANR	8973334	Identifier	n		8973247	0					
ANR	8973335	PrimaryExpression	1		8973247	1					
ANR	8973336	ElseStatement	else		8973247	0					
ANR	8973337	ExpressionStatement	n = - n	118:12:4254:4260	8973247	0	True				
ANR	8973338	AssignmentExpression	n = - n		8973247	0		=			
ANR	8973339	Identifier	n		8973247	0					
ANR	8973340	UnaryOperationExpression	- n		8973247	1					
ANR	8973341	UnaryOperator	-		8973247	0					
ANR	8973342	Identifier	n		8973247	1					
ANR	8973343	ExpressionStatement	push ( n )	122:4:4323:4330	8973247	6	True				
ANR	8973344	CallExpression	push ( n )		8973247	0					
ANR	8973345	Callee	push		8973247	0					
ANR	8973346	Identifier	push		8973247	0					
ANR	8973347	ArgumentList	n		8973247	1					
ANR	8973348	Argument	n		8973247	0					
ANR	8973349	Identifier	n		8973247	0					
ANR	8973350	ExpressionStatement	op -= n - 1	123:4:4336:4347	8973247	7	True				
ANR	8973351	AssignmentExpression	op -= n - 1		8973247	0		-=			
ANR	8973352	Identifier	op		8973247	0					
ANR	8973353	AdditiveExpression	n - 1		8973247	1		-			
ANR	8973354	Identifier	n		8973247	0					
ANR	8973355	PrimaryExpression	1		8973247	1					
ANR	8973356	IfStatement	if ( push_pattern )		8973247	8					
ANR	8973357	Condition	push_pattern	126:8:4402:4413	8973247	0	True				
ANR	8973358	Identifier	push_pattern		8973247	0					
ANR	8973359	ExpressionStatement	-- n	127:8:4424:4427	8973247	1	True				
ANR	8973360	UnaryExpression	-- n		8973247	0					
ANR	8973361	IncDec	--		8973247	0					
ANR	8973362	Identifier	n		8973247	1					
ANR	8973363	ForStatement	"for ( i = 0 ; i < n ; i ++ , op ++ )"		8973247	9					
ANR	8973364	ForInit	i = 0 ;	128:9:4438:4443	8973247	0	True				
ANR	8973365	AssignmentExpression	i = 0		8973247	0		=			
ANR	8973366	Identifier	i		8973247	0					
ANR	8973367	PrimaryExpression	0		8973247	1					
ANR	8973368	Condition	i < n	128:16:4445:4449	8973247	1	True				
ANR	8973369	RelationalExpression	i < n		8973247	0		<			
ANR	8973370	Identifier	i		8973247	0					
ANR	8973371	Identifier	n		8973247	1					
ANR	8973372	Expression	"i ++ , op ++"	128:23:4452:4460	8973247	2	True				
ANR	8973373	PostIncDecOperationExpression	i ++		8973247	0					
ANR	8973374	Identifier	i		8973247	0					
ANR	8973375	IncDec	++		8973247	1					
ANR	8973376	PostIncDecOperationExpression	op ++		8973247	1					
ANR	8973377	Identifier	op		8973247	0					
ANR	8973378	IncDec	++		8973247	1					
ANR	8973379	CompoundStatement		27:8:749:773	8973247	3					
ANR	8973380	IdentifierDeclStatement	float rval = pcc -> paint . values [ i ] ;	129:8:4473:4508	8973247	0	True				
ANR	8973381	IdentifierDecl	rval = pcc -> paint . values [ i ]		8973247	0					
ANR	8973382	IdentifierDeclType	float		8973247	0					
ANR	8973383	Identifier	rval		8973247	1					
ANR	8973384	AssignmentExpression	rval = pcc -> paint . values [ i ]		8973247	2		=			
ANR	8973385	Identifier	rval		8973247	0					
ANR	8973386	ArrayIndexing	pcc -> paint . values [ i ]		8973247	1					
ANR	8973387	MemberAccess	pcc -> paint . values		8973247	0					
ANR	8973388	PtrMemberAccess	pcc -> paint		8973247	0					
ANR	8973389	Identifier	pcc		8973247	0					
ANR	8973390	Identifier	paint		8973247	1					
ANR	8973391	Identifier	values		8973247	1					
ANR	8973392	Identifier	i		8973247	1					
ANR	8973393	IdentifierDeclStatement	int ival = ( int ) rval ;	130:8:4518:4542	8973247	1	True				
ANR	8973394	IdentifierDecl	ival = ( int ) rval		8973247	0					
ANR	8973395	IdentifierDeclType	int		8973247	0					
ANR	8973396	Identifier	ival		8973247	1					
ANR	8973397	AssignmentExpression	ival = ( int ) rval		8973247	2		=			
ANR	8973398	Identifier	ival		8973247	0					
ANR	8973399	CastExpression	( int ) rval		8973247	1					
ANR	8973400	CastTarget	int		8973247	0					
ANR	8973401	Identifier	rval		8973247	1					
ANR	8973402	IfStatement	if ( rval == ival && pcs -> type -> index == gs_color_space_index_Indexed )		8973247	2					
ANR	8973403	Condition	rval == ival && pcs -> type -> index == gs_color_space_index_Indexed	133:12:4614:4677	8973247	0	True				
ANR	8973404	AndExpression	rval == ival && pcs -> type -> index == gs_color_space_index_Indexed		8973247	0		&&			
ANR	8973405	EqualityExpression	rval == ival		8973247	0		==			
ANR	8973406	Identifier	rval		8973247	0					
ANR	8973407	Identifier	ival		8973247	1					
ANR	8973408	EqualityExpression	pcs -> type -> index == gs_color_space_index_Indexed		8973247	1		==			
ANR	8973409	PtrMemberAccess	pcs -> type -> index		8973247	0					
ANR	8973410	PtrMemberAccess	pcs -> type		8973247	0					
ANR	8973411	Identifier	pcs		8973247	0					
ANR	8973412	Identifier	type		8973247	1					
ANR	8973413	Identifier	index		8973247	1					
ANR	8973414	Identifier	gs_color_space_index_Indexed		8973247	1					
ANR	8973415	ExpressionStatement	"make_int ( op , ival )"	134:12:4692:4710	8973247	1	True				
ANR	8973416	CallExpression	"make_int ( op , ival )"		8973247	0					
ANR	8973417	Callee	make_int		8973247	0					
ANR	8973418	Identifier	make_int		8973247	0					
ANR	8973419	ArgumentList	op		8973247	1					
ANR	8973420	Argument	op		8973247	0					
ANR	8973421	Identifier	op		8973247	0					
ANR	8973422	Argument	ival		8973247	1					
ANR	8973423	Identifier	ival		8973247	0					
ANR	8973424	ElseStatement	else		8973247	0					
ANR	8973425	ExpressionStatement	"make_real ( op , rval )"	136:12:4737:4756	8973247	0	True				
ANR	8973426	CallExpression	"make_real ( op , rval )"		8973247	0					
ANR	8973427	Callee	make_real		8973247	0					
ANR	8973428	Identifier	make_real		8973247	0					
ANR	8973429	ArgumentList	op		8973247	1					
ANR	8973430	Argument	op		8973247	0					
ANR	8973431	Identifier	op		8973247	0					
ANR	8973432	Argument	rval		8973247	1					
ANR	8973433	Identifier	rval		8973247	0					
ANR	8973434	IfStatement	if ( push_pattern )		8973247	10					
ANR	8973435	Condition	push_pattern	140:8:4842:4853	8973247	0	True				
ANR	8973436	Identifier	push_pattern		8973247	0					
ANR	8973437	ExpressionStatement	* op = istate -> pattern [ 0 ]	141:8:4864:4888	8973247	1	True				
ANR	8973438	AssignmentExpression	* op = istate -> pattern [ 0 ]		8973247	0		=			
ANR	8973439	UnaryOperationExpression	* op		8973247	0					
ANR	8973440	UnaryOperator	*		8973247	0					
ANR	8973441	Identifier	op		8973247	1					
ANR	8973442	ArrayIndexing	istate -> pattern [ 0 ]		8973247	1					
ANR	8973443	PtrMemberAccess	istate -> pattern		8973247	0					
ANR	8973444	Identifier	istate		8973247	0					
ANR	8973445	Identifier	pattern		8973247	1					
ANR	8973446	PrimaryExpression	0		8973247	1					
ANR	8973447	ReturnStatement	return 0 ;	143:4:4895:4903	8973247	11	True				
ANR	8973448	PrimaryExpression	0		8973247	0					
ANR	8973449	ReturnType	static int		8973247	1					
ANR	8973450	Identifier	zcurrentcolor		8973247	2					
ANR	8973451	ParameterList	i_ctx_t * i_ctx_p		8973247	3					
ANR	8973452	Parameter	i_ctx_t * i_ctx_p	103:14:3749:3765	8973247	0	True				
ANR	8973453	ParameterType	i_ctx_t *		8973247	0					
ANR	8973454	Identifier	i_ctx_p		8973247	1					
ANR	8973455	CFGEntryNode	ENTRY		8973247		True				
ANR	8973456	CFGExitNode	EXIT		8973247		True				
ANR	8973457	Symbol	* op		8973247						
ANR	8973458	Symbol	pcc -> pattern		8973247						
ANR	8973459	Symbol	pcs -> type -> index		8973247						
ANR	8973460	Symbol	* pcs		8973247						
ANR	8973461	Symbol	osp		8973247						
ANR	8973462	Symbol	* istate		8973247						
ANR	8973463	Symbol	pcc -> paint . values		8973247						
ANR	8973464	Symbol	pcc		8973247						
ANR	8973465	Symbol	gs_color_space_index_Indexed		8973247						
ANR	8973466	Symbol	pattern_instance_uses_base_space		8973247						
ANR	8973467	Symbol	igs		8973247						
ANR	8973468	Symbol	gs_currentcolorspace		8973247						
ANR	8973469	Symbol	pcc -> paint		8973247						
ANR	8973470	Symbol	istate -> pattern		8973247						
ANR	8973471	Symbol	* pcc -> paint		8973247						
ANR	8973472	Symbol	* pcs -> type		8973247						
ANR	8973473	Symbol	push_pattern		8973247						
ANR	8973474	Symbol	rval		8973247						
ANR	8973475	Symbol	* istate -> pattern		8973247						
ANR	8973476	Symbol	pcs -> type		8973247						
ANR	8973477	Symbol	op		8973247						
ANR	8973478	Symbol	pcs		8973247						
ANR	8973479	Symbol	* * pcc		8973247						
ANR	8973480	Symbol	i		8973247						
ANR	8973481	Symbol	ival		8973247						
ANR	8973482	Symbol	pinst		8973247						
ANR	8973483	Symbol	n		8973247						
ANR	8973484	Symbol	gs_currentcolor		8973247						
ANR	8973485	Symbol	* i		8973247						
ANR	8973486	Symbol	* * pcs		8973247						
ANR	8973487	Symbol	i_ctx_p		8973247						
ANR	8973488	Symbol	cs_num_components		8973247						
ANR	8973489	Symbol	* pcc		8973247						
ANR	8973490	Symbol	* * istate		8973247						
ANR	8973491	Symbol	* pcc -> paint . values		8973247						
ANR	8973492	Symbol	istate		8973247						
ANR	8973493	Function	zcurrentcolorspace	153:0:5114:7890							
ANR	8973494	FunctionDef	zcurrentcolorspace (i_ctx_t * i_ctx_p)		8973493	0					
ANR	8973495	CompoundStatement		155:0:5163:7890	8973493	0					
ANR	8973496	IdentifierDeclStatement	os_ptr op = osp ;	156:4:5169:5185	8973493	0	True				
ANR	8973497	IdentifierDecl	op = osp		8973493	0					
ANR	8973498	IdentifierDeclType	os_ptr		8973493	0					
ANR	8973499	Identifier	op		8973493	1					
ANR	8973500	AssignmentExpression	op = osp		8973493	2		=			
ANR	8973501	Identifier	osp		8973493	0					
ANR	8973502	Identifier	osp		8973493	1					
ANR	8973503	IdentifierDeclStatement	int code ;	157:4:5224:5232	8973493	1	True				
ANR	8973504	IdentifierDecl	code		8973493	0					
ANR	8973505	IdentifierDeclType	int		8973493	0					
ANR	8973506	Identifier	code		8973493	1					
ANR	8973507	IdentifierDeclStatement	"ref namestr , stref ;"	158:4:5238:5255	8973493	2	True				
ANR	8973508	IdentifierDecl	namestr		8973493	0					
ANR	8973509	IdentifierDeclType	ref		8973493	0					
ANR	8973510	Identifier	namestr		8973493	1					
ANR	8973511	IdentifierDecl	stref		8973493	1					
ANR	8973512	IdentifierDeclType	ref		8973493	0					
ANR	8973513	Identifier	stref		8973493	1					
ANR	8973514	IdentifierDeclStatement	byte * body ;	159:4:5261:5271	8973493	3	True				
ANR	8973515	IdentifierDecl	* body		8973493	0					
ANR	8973516	IdentifierDeclType	byte *		8973493	0					
ANR	8973517	Identifier	body		8973493	1					
ANR	8973518	IfStatement	"if ( r_has_type ( & istate -> colorspace [ 0 ] . array , t_name ) )"		8973493	4					
ANR	8973519	Condition	"r_has_type ( & istate -> colorspace [ 0 ] . array , t_name )"	167:8:5612:5659	8973493	0	True				
ANR	8973520	CallExpression	"r_has_type ( & istate -> colorspace [ 0 ] . array , t_name )"		8973493	0					
ANR	8973521	Callee	r_has_type		8973493	0					
ANR	8973522	Identifier	r_has_type		8973493	0					
ANR	8973523	ArgumentList	& istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973524	Argument	& istate -> colorspace [ 0 ] . array		8973493	0					
ANR	8973525	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8973493	0					
ANR	8973526	UnaryOperator	&		8973493	0					
ANR	8973527	MemberAccess	istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973528	ArrayIndexing	istate -> colorspace [ 0 ]		8973493	0					
ANR	8973529	PtrMemberAccess	istate -> colorspace		8973493	0					
ANR	8973530	Identifier	istate		8973493	0					
ANR	8973531	Identifier	colorspace		8973493	1					
ANR	8973532	PrimaryExpression	0		8973493	1					
ANR	8973533	Identifier	array		8973493	1					
ANR	8973534	Argument	t_name		8973493	1					
ANR	8973535	Identifier	t_name		8973493	0					
ANR	8973536	CompoundStatement		13:58:498:498	8973493	1					
ANR	8973537	ExpressionStatement	"name_string_ref ( imemory , & istate -> colorspace [ 0 ] . array , & namestr )"	168:8:5672:5736	8973493	0	True				
ANR	8973538	CallExpression	"name_string_ref ( imemory , & istate -> colorspace [ 0 ] . array , & namestr )"		8973493	0					
ANR	8973539	Callee	name_string_ref		8973493	0					
ANR	8973540	Identifier	name_string_ref		8973493	0					
ANR	8973541	ArgumentList	imemory		8973493	1					
ANR	8973542	Argument	imemory		8973493	0					
ANR	8973543	Identifier	imemory		8973493	0					
ANR	8973544	Argument	& istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973545	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8973493	0					
ANR	8973546	UnaryOperator	&		8973493	0					
ANR	8973547	MemberAccess	istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973548	ArrayIndexing	istate -> colorspace [ 0 ]		8973493	0					
ANR	8973549	PtrMemberAccess	istate -> colorspace		8973493	0					
ANR	8973550	Identifier	istate		8973493	0					
ANR	8973551	Identifier	colorspace		8973493	1					
ANR	8973552	PrimaryExpression	0		8973493	1					
ANR	8973553	Identifier	array		8973493	1					
ANR	8973554	Argument	& namestr		8973493	2					
ANR	8973555	UnaryOperationExpression	& namestr		8973493	0					
ANR	8973556	UnaryOperator	&		8973493	0					
ANR	8973557	Identifier	namestr		8973493	1					
ANR	8973558	IfStatement	"if ( r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 ) )"		8973493	1					
ANR	8973559	Condition	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"	169:12:5750:5821	8973493	0	True				
ANR	8973560	AndExpression	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		8973493	0		&&			
ANR	8973561	EqualityExpression	r_size ( & namestr ) == 10		8973493	0		==			
ANR	8973562	CallExpression	r_size ( & namestr )		8973493	0					
ANR	8973563	Callee	r_size		8973493	0					
ANR	8973564	Identifier	r_size		8973493	0					
ANR	8973565	ArgumentList	& namestr		8973493	1					
ANR	8973566	Argument	& namestr		8973493	0					
ANR	8973567	UnaryOperationExpression	& namestr		8973493	0					
ANR	8973568	UnaryOperator	&		8973493	0					
ANR	8973569	Identifier	namestr		8973493	1					
ANR	8973570	PrimaryExpression	10		8973493	1					
ANR	8973571	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		8973493	1					
ANR	8973572	UnaryOperator	!		8973493	0					
ANR	8973573	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		8973493	1					
ANR	8973574	Callee	memcmp		8973493	0					
ANR	8973575	Identifier	memcmp		8973493	0					
ANR	8973576	ArgumentList	namestr . value . bytes		8973493	1					
ANR	8973577	Argument	namestr . value . bytes		8973493	0					
ANR	8973578	MemberAccess	namestr . value . bytes		8973493	0					
ANR	8973579	MemberAccess	namestr . value		8973493	0					
ANR	8973580	Identifier	namestr		8973493	0					
ANR	8973581	Identifier	value		8973493	1					
ANR	8973582	Identifier	bytes		8973493	1					
ANR	8973583	Argument	"""DeviceGray"""		8973493	1					
ANR	8973584	PrimaryExpression	"""DeviceGray"""		8973493	0					
ANR	8973585	Argument	10		8973493	2					
ANR	8973586	PrimaryExpression	10		8973493	0					
ANR	8973587	CompoundStatement		15:86:660:660	8973493	1					
ANR	8973588	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	170:12:5838:5872	8973493	0	True				
ANR	8973589	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		8973493	0		=			
ANR	8973590	Identifier	body		8973493	0					
ANR	8973591	CallExpression	"ialloc_string ( 32 , ""string"" )"		8973493	1					
ANR	8973592	Callee	ialloc_string		8973493	0					
ANR	8973593	Identifier	ialloc_string		8973493	0					
ANR	8973594	ArgumentList	32		8973493	1					
ANR	8973595	Argument	32		8973493	0					
ANR	8973596	PrimaryExpression	32		8973493	0					
ANR	8973597	Argument	"""string"""		8973493	1					
ANR	8973598	PrimaryExpression	"""string"""		8973493	0					
ANR	8973599	IfStatement	if ( body == 0 )		8973493	1					
ANR	8973600	Condition	body == 0	171:16:5890:5898	8973493	0	True				
ANR	8973601	EqualityExpression	body == 0		8973493	0		==			
ANR	8973602	Identifier	body		8973493	0					
ANR	8973603	PrimaryExpression	0		8973493	1					
ANR	8973604	ExpressionStatement	return_error ( gs_error_VMerror )	172:16:5917:5947	8973493	1	True				
ANR	8973605	CallExpression	return_error ( gs_error_VMerror )		8973493	0					
ANR	8973606	Callee	return_error		8973493	0					
ANR	8973607	Identifier	return_error		8973493	0					
ANR	8973608	ArgumentList	gs_error_VMerror		8973493	1					
ANR	8973609	Argument	gs_error_VMerror		8973493	0					
ANR	8973610	Identifier	gs_error_VMerror		8973493	0					
ANR	8973611	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceGray_array get"" , 32 )"	173:12:5961:6013	8973493	2	True				
ANR	8973612	CallExpression	"memcpy ( body , ""systemdict /DeviceGray_array get"" , 32 )"		8973493	0					
ANR	8973613	Callee	memcpy		8973493	0					
ANR	8973614	Identifier	memcpy		8973493	0					
ANR	8973615	ArgumentList	body		8973493	1					
ANR	8973616	Argument	body		8973493	0					
ANR	8973617	Identifier	body		8973493	0					
ANR	8973618	Argument	"""systemdict /DeviceGray_array get"""		8973493	1					
ANR	8973619	PrimaryExpression	"""systemdict /DeviceGray_array get"""		8973493	0					
ANR	8973620	Argument	32		8973493	2					
ANR	8973621	PrimaryExpression	32		8973493	0					
ANR	8973622	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	174:12:6027:6080	8973493	3	True				
ANR	8973623	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		8973493	0					
ANR	8973624	Callee	make_string		8973493	0					
ANR	8973625	Identifier	make_string		8973493	0					
ANR	8973626	ArgumentList	& stref		8973493	1					
ANR	8973627	Argument	& stref		8973493	0					
ANR	8973628	UnaryOperationExpression	& stref		8973493	0					
ANR	8973629	UnaryOperator	&		8973493	0					
ANR	8973630	Identifier	stref		8973493	1					
ANR	8973631	Argument	a_all | icurrent_space		8973493	1					
ANR	8973632	InclusiveOrExpression	a_all | icurrent_space		8973493	0		|			
ANR	8973633	Identifier	a_all		8973493	0					
ANR	8973634	Identifier	icurrent_space		8973493	1					
ANR	8973635	Argument	32		8973493	2					
ANR	8973636	PrimaryExpression	32		8973493	0					
ANR	8973637	Argument	body		8973493	3					
ANR	8973638	Identifier	body		8973493	0					
ANR	8973639	ElseStatement	else		8973493	0					
ANR	8973640	CompoundStatement		21:15:933:933	8973493	0					
ANR	8973641	IfStatement	"if ( r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 ) )"		8973493	0					
ANR	8973642	Condition	"r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"	176:16:6115:6183	8973493	0	True				
ANR	8973643	AndExpression	"r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		8973493	0		&&			
ANR	8973644	EqualityExpression	r_size ( & namestr ) == 9		8973493	0		==			
ANR	8973645	CallExpression	r_size ( & namestr )		8973493	0					
ANR	8973646	Callee	r_size		8973493	0					
ANR	8973647	Identifier	r_size		8973493	0					
ANR	8973648	ArgumentList	& namestr		8973493	1					
ANR	8973649	Argument	& namestr		8973493	0					
ANR	8973650	UnaryOperationExpression	& namestr		8973493	0					
ANR	8973651	UnaryOperator	&		8973493	0					
ANR	8973652	Identifier	namestr		8973493	1					
ANR	8973653	PrimaryExpression	9		8973493	1					
ANR	8973654	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		8973493	1					
ANR	8973655	UnaryOperator	!		8973493	0					
ANR	8973656	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		8973493	1					
ANR	8973657	Callee	memcmp		8973493	0					
ANR	8973658	Identifier	memcmp		8973493	0					
ANR	8973659	ArgumentList	namestr . value . bytes		8973493	1					
ANR	8973660	Argument	namestr . value . bytes		8973493	0					
ANR	8973661	MemberAccess	namestr . value . bytes		8973493	0					
ANR	8973662	MemberAccess	namestr . value		8973493	0					
ANR	8973663	Identifier	namestr		8973493	0					
ANR	8973664	Identifier	value		8973493	1					
ANR	8973665	Identifier	bytes		8973493	1					
ANR	8973666	Argument	"""DeviceRGB"""		8973493	1					
ANR	8973667	PrimaryExpression	"""DeviceRGB"""		8973493	0					
ANR	8973668	Argument	9		8973493	2					
ANR	8973669	PrimaryExpression	9		8973493	0					
ANR	8973670	CompoundStatement		22:87:1022:1022	8973493	1					
ANR	8973671	ExpressionStatement	"body = ialloc_string ( 31 , ""string"" )"	177:16:6204:6238	8973493	0	True				
ANR	8973672	AssignmentExpression	"body = ialloc_string ( 31 , ""string"" )"		8973493	0		=			
ANR	8973673	Identifier	body		8973493	0					
ANR	8973674	CallExpression	"ialloc_string ( 31 , ""string"" )"		8973493	1					
ANR	8973675	Callee	ialloc_string		8973493	0					
ANR	8973676	Identifier	ialloc_string		8973493	0					
ANR	8973677	ArgumentList	31		8973493	1					
ANR	8973678	Argument	31		8973493	0					
ANR	8973679	PrimaryExpression	31		8973493	0					
ANR	8973680	Argument	"""string"""		8973493	1					
ANR	8973681	PrimaryExpression	"""string"""		8973493	0					
ANR	8973682	IfStatement	if ( body == 0 )		8973493	1					
ANR	8973683	Condition	body == 0	178:20:6260:6268	8973493	0	True				
ANR	8973684	EqualityExpression	body == 0		8973493	0		==			
ANR	8973685	Identifier	body		8973493	0					
ANR	8973686	PrimaryExpression	0		8973493	1					
ANR	8973687	ExpressionStatement	return_error ( gs_error_VMerror )	179:20:6291:6321	8973493	1	True				
ANR	8973688	CallExpression	return_error ( gs_error_VMerror )		8973493	0					
ANR	8973689	Callee	return_error		8973493	0					
ANR	8973690	Identifier	return_error		8973493	0					
ANR	8973691	ArgumentList	gs_error_VMerror		8973493	1					
ANR	8973692	Argument	gs_error_VMerror		8973493	0					
ANR	8973693	Identifier	gs_error_VMerror		8973493	0					
ANR	8973694	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceRGB_array get"" , 31 )"	180:16:6339:6390	8973493	2	True				
ANR	8973695	CallExpression	"memcpy ( body , ""systemdict /DeviceRGB_array get"" , 31 )"		8973493	0					
ANR	8973696	Callee	memcpy		8973493	0					
ANR	8973697	Identifier	memcpy		8973493	0					
ANR	8973698	ArgumentList	body		8973493	1					
ANR	8973699	Argument	body		8973493	0					
ANR	8973700	Identifier	body		8973493	0					
ANR	8973701	Argument	"""systemdict /DeviceRGB_array get"""		8973493	1					
ANR	8973702	PrimaryExpression	"""systemdict /DeviceRGB_array get"""		8973493	0					
ANR	8973703	Argument	31		8973493	2					
ANR	8973704	PrimaryExpression	31		8973493	0					
ANR	8973705	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 31 , body )"	181:16:6408:6461	8973493	3	True				
ANR	8973706	CallExpression	"make_string ( & stref , a_all | icurrent_space , 31 , body )"		8973493	0					
ANR	8973707	Callee	make_string		8973493	0					
ANR	8973708	Identifier	make_string		8973493	0					
ANR	8973709	ArgumentList	& stref		8973493	1					
ANR	8973710	Argument	& stref		8973493	0					
ANR	8973711	UnaryOperationExpression	& stref		8973493	0					
ANR	8973712	UnaryOperator	&		8973493	0					
ANR	8973713	Identifier	stref		8973493	1					
ANR	8973714	Argument	a_all | icurrent_space		8973493	1					
ANR	8973715	InclusiveOrExpression	a_all | icurrent_space		8973493	0		|			
ANR	8973716	Identifier	a_all		8973493	0					
ANR	8973717	Identifier	icurrent_space		8973493	1					
ANR	8973718	Argument	31		8973493	2					
ANR	8973719	PrimaryExpression	31		8973493	0					
ANR	8973720	Argument	body		8973493	3					
ANR	8973721	Identifier	body		8973493	0					
ANR	8973722	ElseStatement	else		8973493	0					
ANR	8973723	CompoundStatement		28:19:1318:1318	8973493	0					
ANR	8973724	IfStatement	"if ( r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 ) )"		8973493	0					
ANR	8973725	Condition	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"	183:20:6504:6575	8973493	0	True				
ANR	8973726	AndExpression	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		8973493	0		&&			
ANR	8973727	EqualityExpression	r_size ( & namestr ) == 10		8973493	0		==			
ANR	8973728	CallExpression	r_size ( & namestr )		8973493	0					
ANR	8973729	Callee	r_size		8973493	0					
ANR	8973730	Identifier	r_size		8973493	0					
ANR	8973731	ArgumentList	& namestr		8973493	1					
ANR	8973732	Argument	& namestr		8973493	0					
ANR	8973733	UnaryOperationExpression	& namestr		8973493	0					
ANR	8973734	UnaryOperator	&		8973493	0					
ANR	8973735	Identifier	namestr		8973493	1					
ANR	8973736	PrimaryExpression	10		8973493	1					
ANR	8973737	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		8973493	1					
ANR	8973738	UnaryOperator	!		8973493	0					
ANR	8973739	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		8973493	1					
ANR	8973740	Callee	memcmp		8973493	0					
ANR	8973741	Identifier	memcmp		8973493	0					
ANR	8973742	ArgumentList	namestr . value . bytes		8973493	1					
ANR	8973743	Argument	namestr . value . bytes		8973493	0					
ANR	8973744	MemberAccess	namestr . value . bytes		8973493	0					
ANR	8973745	MemberAccess	namestr . value		8973493	0					
ANR	8973746	Identifier	namestr		8973493	0					
ANR	8973747	Identifier	value		8973493	1					
ANR	8973748	Identifier	bytes		8973493	1					
ANR	8973749	Argument	"""DeviceCMYK"""		8973493	1					
ANR	8973750	PrimaryExpression	"""DeviceCMYK"""		8973493	0					
ANR	8973751	Argument	10		8973493	2					
ANR	8973752	PrimaryExpression	10		8973493	0					
ANR	8973753	CompoundStatement		29:94:1414:1414	8973493	1					
ANR	8973754	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	184:20:6600:6634	8973493	0	True				
ANR	8973755	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		8973493	0		=			
ANR	8973756	Identifier	body		8973493	0					
ANR	8973757	CallExpression	"ialloc_string ( 32 , ""string"" )"		8973493	1					
ANR	8973758	Callee	ialloc_string		8973493	0					
ANR	8973759	Identifier	ialloc_string		8973493	0					
ANR	8973760	ArgumentList	32		8973493	1					
ANR	8973761	Argument	32		8973493	0					
ANR	8973762	PrimaryExpression	32		8973493	0					
ANR	8973763	Argument	"""string"""		8973493	1					
ANR	8973764	PrimaryExpression	"""string"""		8973493	0					
ANR	8973765	IfStatement	if ( body == 0 )		8973493	1					
ANR	8973766	Condition	body == 0	185:24:6660:6668	8973493	0	True				
ANR	8973767	EqualityExpression	body == 0		8973493	0		==			
ANR	8973768	Identifier	body		8973493	0					
ANR	8973769	PrimaryExpression	0		8973493	1					
ANR	8973770	ExpressionStatement	return_error ( gs_error_VMerror )	186:24:6695:6725	8973493	1	True				
ANR	8973771	CallExpression	return_error ( gs_error_VMerror )		8973493	0					
ANR	8973772	Callee	return_error		8973493	0					
ANR	8973773	Identifier	return_error		8973493	0					
ANR	8973774	ArgumentList	gs_error_VMerror		8973493	1					
ANR	8973775	Argument	gs_error_VMerror		8973493	0					
ANR	8973776	Identifier	gs_error_VMerror		8973493	0					
ANR	8973777	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceCMYK_array get"" , 32 )"	187:20:6747:6799	8973493	2	True				
ANR	8973778	CallExpression	"memcpy ( body , ""systemdict /DeviceCMYK_array get"" , 32 )"		8973493	0					
ANR	8973779	Callee	memcpy		8973493	0					
ANR	8973780	Identifier	memcpy		8973493	0					
ANR	8973781	ArgumentList	body		8973493	1					
ANR	8973782	Argument	body		8973493	0					
ANR	8973783	Identifier	body		8973493	0					
ANR	8973784	Argument	"""systemdict /DeviceCMYK_array get"""		8973493	1					
ANR	8973785	PrimaryExpression	"""systemdict /DeviceCMYK_array get"""		8973493	0					
ANR	8973786	Argument	32		8973493	2					
ANR	8973787	PrimaryExpression	32		8973493	0					
ANR	8973788	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	188:20:6821:6874	8973493	3	True				
ANR	8973789	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		8973493	0					
ANR	8973790	Callee	make_string		8973493	0					
ANR	8973791	Identifier	make_string		8973493	0					
ANR	8973792	ArgumentList	& stref		8973493	1					
ANR	8973793	Argument	& stref		8973493	0					
ANR	8973794	UnaryOperationExpression	& stref		8973493	0					
ANR	8973795	UnaryOperator	&		8973493	0					
ANR	8973796	Identifier	stref		8973493	1					
ANR	8973797	Argument	a_all | icurrent_space		8973493	1					
ANR	8973798	InclusiveOrExpression	a_all | icurrent_space		8973493	0		|			
ANR	8973799	Identifier	a_all		8973493	0					
ANR	8973800	Identifier	icurrent_space		8973493	1					
ANR	8973801	Argument	32		8973493	2					
ANR	8973802	PrimaryExpression	32		8973493	0					
ANR	8973803	Argument	body		8973493	3					
ANR	8973804	Identifier	body		8973493	0					
ANR	8973805	ElseStatement	else		8973493	0					
ANR	8973806	CompoundStatement		35:23:1735:1735	8973493	0					
ANR	8973807	ExpressionStatement	push ( 1 )	193:20:7086:7093	8973493	0	True				
ANR	8973808	CallExpression	push ( 1 )		8973493	0					
ANR	8973809	Callee	push		8973493	0					
ANR	8973810	Identifier	push		8973493	0					
ANR	8973811	ArgumentList	1		8973493	1					
ANR	8973812	Argument	1		8973493	0					
ANR	8973813	PrimaryExpression	1		8973493	0					
ANR	8973814	ExpressionStatement	"code = ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"	194:20:7115:7173	8973493	1	True				
ANR	8973815	AssignmentExpression	"code = ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"		8973493	0		=			
ANR	8973816	Identifier	code		8973493	0					
ANR	8973817	CallExpression	"ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"		8973493	1					
ANR	8973818	Callee	ialloc_ref_array		8973493	0					
ANR	8973819	Identifier	ialloc_ref_array		8973493	0					
ANR	8973820	ArgumentList	op		8973493	1					
ANR	8973821	Argument	op		8973493	0					
ANR	8973822	Identifier	op		8973493	0					
ANR	8973823	Argument	a_all		8973493	1					
ANR	8973824	Identifier	a_all		8973493	0					
ANR	8973825	Argument	1		8973493	2					
ANR	8973826	PrimaryExpression	1		8973493	0					
ANR	8973827	Argument	"""currentcolorspace"""		8973493	3					
ANR	8973828	PrimaryExpression	"""currentcolorspace"""		8973493	0					
ANR	8973829	IfStatement	if ( code < 0 )		8973493	2					
ANR	8973830	Condition	code < 0	195:24:7199:7206	8973493	0	True				
ANR	8973831	RelationalExpression	code < 0		8973493	0		<			
ANR	8973832	Identifier	code		8973493	0					
ANR	8973833	PrimaryExpression	0		8973493	1					
ANR	8973834	ReturnStatement	return code ;	196:24:7233:7244	8973493	1	True				
ANR	8973835	Identifier	code		8973493	0					
ANR	8973836	ExpressionStatement	"refset_null ( op -> value . refs , 1 )"	197:20:7266:7296	8973493	3	True				
ANR	8973837	CallExpression	"refset_null ( op -> value . refs , 1 )"		8973493	0					
ANR	8973838	Callee	refset_null		8973493	0					
ANR	8973839	Identifier	refset_null		8973493	0					
ANR	8973840	ArgumentList	op -> value . refs		8973493	1					
ANR	8973841	Argument	op -> value . refs		8973493	0					
ANR	8973842	MemberAccess	op -> value . refs		8973493	0					
ANR	8973843	PtrMemberAccess	op -> value		8973493	0					
ANR	8973844	Identifier	op		8973493	0					
ANR	8973845	Identifier	value		8973493	1					
ANR	8973846	Identifier	refs		8973493	1					
ANR	8973847	Argument	1		8973493	1					
ANR	8973848	PrimaryExpression	1		8973493	0					
ANR	8973849	ExpressionStatement	"ref_assign_old ( op , op -> value . refs , & istate -> colorspace [ 0 ] . array , ""currentcolorspace"" )"	198:20:7318:7473	8973493	4	True				
ANR	8973850	CallExpression	"ref_assign_old ( op , op -> value . refs , & istate -> colorspace [ 0 ] . array , ""currentcolorspace"" )"		8973493	0					
ANR	8973851	Callee	ref_assign_old		8973493	0					
ANR	8973852	Identifier	ref_assign_old		8973493	0					
ANR	8973853	ArgumentList	op		8973493	1					
ANR	8973854	Argument	op		8973493	0					
ANR	8973855	Identifier	op		8973493	0					
ANR	8973856	Argument	op -> value . refs		8973493	1					
ANR	8973857	MemberAccess	op -> value . refs		8973493	0					
ANR	8973858	PtrMemberAccess	op -> value		8973493	0					
ANR	8973859	Identifier	op		8973493	0					
ANR	8973860	Identifier	value		8973493	1					
ANR	8973861	Identifier	refs		8973493	1					
ANR	8973862	Argument	& istate -> colorspace [ 0 ] . array		8973493	2					
ANR	8973863	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8973493	0					
ANR	8973864	UnaryOperator	&		8973493	0					
ANR	8973865	MemberAccess	istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973866	ArrayIndexing	istate -> colorspace [ 0 ]		8973493	0					
ANR	8973867	PtrMemberAccess	istate -> colorspace		8973493	0					
ANR	8973868	Identifier	istate		8973493	0					
ANR	8973869	Identifier	colorspace		8973493	1					
ANR	8973870	PrimaryExpression	0		8973493	1					
ANR	8973871	Identifier	array		8973493	1					
ANR	8973872	Argument	"""currentcolorspace"""		8973493	3					
ANR	8973873	PrimaryExpression	"""currentcolorspace"""		8973493	0					
ANR	8973874	ReturnStatement	return 0 ;	201:20:7495:7503	8973493	5	True				
ANR	8973875	PrimaryExpression	0		8973493	0					
ANR	8973876	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	205:8:7555:7588	8973493	2	True				
ANR	8973877	CallExpression	"r_set_attrs ( & stref , a_executable )"		8973493	0					
ANR	8973878	Callee	r_set_attrs		8973493	0					
ANR	8973879	Identifier	r_set_attrs		8973493	0					
ANR	8973880	ArgumentList	& stref		8973493	1					
ANR	8973881	Argument	& stref		8973493	0					
ANR	8973882	UnaryOperationExpression	& stref		8973493	0					
ANR	8973883	UnaryOperator	&		8973493	0					
ANR	8973884	Identifier	stref		8973493	1					
ANR	8973885	Argument	a_executable		8973493	1					
ANR	8973886	Identifier	a_executable		8973493	0					
ANR	8973887	ExpressionStatement	esp ++	206:8:7598:7603	8973493	3	True				
ANR	8973888	PostIncDecOperationExpression	esp ++		8973493	0					
ANR	8973889	Identifier	esp		8973493	0					
ANR	8973890	IncDec	++		8973493	1					
ANR	8973891	ExpressionStatement	"ref_assign ( esp , & stref )"	207:8:7613:7636	8973493	4	True				
ANR	8973892	CallExpression	"ref_assign ( esp , & stref )"		8973493	0					
ANR	8973893	Callee	ref_assign		8973493	0					
ANR	8973894	Identifier	ref_assign		8973493	0					
ANR	8973895	ArgumentList	esp		8973493	1					
ANR	8973896	Argument	esp		8973493	0					
ANR	8973897	Identifier	esp		8973493	0					
ANR	8973898	Argument	& stref		8973493	1					
ANR	8973899	UnaryOperationExpression	& stref		8973493	0					
ANR	8973900	UnaryOperator	&		8973493	0					
ANR	8973901	Identifier	stref		8973493	1					
ANR	8973902	ReturnStatement	return o_push_estack ;	208:8:7646:7666	8973493	5	True				
ANR	8973903	Identifier	o_push_estack		8973493	0					
ANR	8973904	ElseStatement	else		8973493	0					
ANR	8973905	CompoundStatement		55:11:2515:2515	8973493	0					
ANR	8973906	ExpressionStatement	push ( 1 )	213:8:7818:7825	8973493	0	True				
ANR	8973907	CallExpression	push ( 1 )		8973493	0					
ANR	8973908	Callee	push		8973493	0					
ANR	8973909	Identifier	push		8973493	0					
ANR	8973910	ArgumentList	1		8973493	1					
ANR	8973911	Argument	1		8973493	0					
ANR	8973912	PrimaryExpression	1		8973493	0					
ANR	8973913	ExpressionStatement	* op = istate -> colorspace [ 0 ] . array	214:8:7835:7868	8973493	1	True				
ANR	8973914	AssignmentExpression	* op = istate -> colorspace [ 0 ] . array		8973493	0		=			
ANR	8973915	UnaryOperationExpression	* op		8973493	0					
ANR	8973916	UnaryOperator	*		8973493	0					
ANR	8973917	Identifier	op		8973493	1					
ANR	8973918	MemberAccess	istate -> colorspace [ 0 ] . array		8973493	1					
ANR	8973919	ArrayIndexing	istate -> colorspace [ 0 ]		8973493	0					
ANR	8973920	PtrMemberAccess	istate -> colorspace		8973493	0					
ANR	8973921	Identifier	istate		8973493	0					
ANR	8973922	Identifier	colorspace		8973493	1					
ANR	8973923	PrimaryExpression	0		8973493	1					
ANR	8973924	Identifier	array		8973493	1					
ANR	8973925	ReturnStatement	return 0 ;	216:4:7880:7888	8973493	5	True				
ANR	8973926	PrimaryExpression	0		8973493	0					
ANR	8973927	ReturnType	static int		8973493	1					
ANR	8973928	Identifier	zcurrentcolorspace		8973493	2					
ANR	8973929	ParameterList	i_ctx_t * i_ctx_p		8973493	3					
ANR	8973930	Parameter	i_ctx_t * i_ctx_p	154:19:5144:5160	8973493	0	True				
ANR	8973931	ParameterType	i_ctx_t *		8973493	0					
ANR	8973932	Identifier	i_ctx_p		8973493	1					
ANR	8973933	CFGEntryNode	ENTRY		8973493		True				
ANR	8973934	CFGExitNode	EXIT		8973493		True				
ANR	8973935	Symbol	a_all		8973493						
ANR	8973936	Symbol	& istate -> colorspace [ 0 ] . array		8973493						
ANR	8973937	Symbol	istate -> colorspace [ 0 ] . array		8973493						
ANR	8973938	Symbol	code		8973493						
ANR	8973939	Symbol	esp		8973493						
ANR	8973940	Symbol	* op		8973493						
ANR	8973941	Symbol	op -> value . refs		8973493						
ANR	8973942	Symbol	& stref		8973493						
ANR	8973943	Symbol	body		8973493						
ANR	8973944	Symbol	osp		8973493						
ANR	8973945	Symbol	* istate		8973493						
ANR	8973946	Symbol	ialloc_string		8973493						
ANR	8973947	Symbol	r_has_type		8973493						
ANR	8973948	Symbol	memcmp		8973493						
ANR	8973949	Symbol	t_name		8973493						
ANR	8973950	Symbol	op -> value		8973493						
ANR	8973951	Symbol	r_size		8973493						
ANR	8973952	Symbol	stref		8973493						
ANR	8973953	Symbol	istate -> colorspace		8973493						
ANR	8973954	Symbol	imemory		8973493						
ANR	8973955	Symbol	namestr . value		8973493						
ANR	8973956	Symbol	* istate -> colorspace		8973493						
ANR	8973957	Symbol	o_push_estack		8973493						
ANR	8973958	Symbol	namestr . value . bytes		8973493						
ANR	8973959	Symbol	op		8973493						
ANR	8973960	Symbol	namestr		8973493						
ANR	8973961	Symbol	ialloc_ref_array		8973493						
ANR	8973962	Symbol	icurrent_space		8973493						
ANR	8973963	Symbol	gs_error_VMerror		8973493						
ANR	8973964	Symbol	i_ctx_p		8973493						
ANR	8973965	Symbol	a_executable		8973493						
ANR	8973966	Symbol	& namestr		8973493						
ANR	8973967	Symbol	* * istate		8973493						
ANR	8973968	Symbol	istate		8973493						
ANR	8973969	Function	zgetuseciecolor	233:0:8608:8739							
ANR	8973970	FunctionDef	zgetuseciecolor (i_ctx_t * i_ctx_p)		8973969	0					
ANR	8973971	CompoundStatement		235:0:8654:8739	8973969	0					
ANR	8973972	IdentifierDeclStatement	os_ptr op = osp ;	236:4:8660:8676	8973969	0	True				
ANR	8973973	IdentifierDecl	op = osp		8973969	0					
ANR	8973974	IdentifierDeclType	os_ptr		8973969	0					
ANR	8973975	Identifier	op		8973969	1					
ANR	8973976	AssignmentExpression	op = osp		8973969	2		=			
ANR	8973977	Identifier	osp		8973969	0					
ANR	8973978	Identifier	osp		8973969	1					
ANR	8973979	ExpressionStatement	push ( 1 )	238:4:8683:8690	8973969	1	True				
ANR	8973980	CallExpression	push ( 1 )		8973969	0					
ANR	8973981	Callee	push		8973969	0					
ANR	8973982	Identifier	push		8973969	0					
ANR	8973983	ArgumentList	1		8973969	1					
ANR	8973984	Argument	1		8973969	0					
ANR	8973985	PrimaryExpression	1		8973969	0					
ANR	8973986	ExpressionStatement	* op = istate -> use_cie_color	239:4:8696:8723	8973969	2	True				
ANR	8973987	AssignmentExpression	* op = istate -> use_cie_color		8973969	0		=			
ANR	8973988	UnaryOperationExpression	* op		8973969	0					
ANR	8973989	UnaryOperator	*		8973969	0					
ANR	8973990	Identifier	op		8973969	1					
ANR	8973991	PtrMemberAccess	istate -> use_cie_color		8973969	1					
ANR	8973992	Identifier	istate		8973969	0					
ANR	8973993	Identifier	use_cie_color		8973969	1					
ANR	8973994	ReturnStatement	return 0 ;	240:4:8729:8737	8973969	3	True				
ANR	8973995	PrimaryExpression	0		8973969	0					
ANR	8973996	ReturnType	static int		8973969	1					
ANR	8973997	Identifier	zgetuseciecolor		8973969	2					
ANR	8973998	ParameterList	i_ctx_t * i_ctx_p		8973969	3					
ANR	8973999	Parameter	i_ctx_t * i_ctx_p	234:16:8635:8651	8973969	0	True				
ANR	8974000	ParameterType	i_ctx_t *		8973969	0					
ANR	8974001	Identifier	i_ctx_p		8973969	1					
ANR	8974002	CFGEntryNode	ENTRY		8973969		True				
ANR	8974003	CFGExitNode	EXIT		8973969		True				
ANR	8974004	Symbol	op		8973969						
ANR	8974005	Symbol	* op		8973969						
ANR	8974006	Symbol	istate -> use_cie_color		8973969						
ANR	8974007	Symbol	i_ctx_p		8973969						
ANR	8974008	Symbol	osp		8973969						
ANR	8974009	Symbol	* istate		8973969						
ANR	8974010	Symbol	istate		8973969						
ANR	8974011	Function	colour_cleanup	244:0:8816:8876							
ANR	8974012	FunctionDef	colour_cleanup (i_ctx_t * i_ctx_p)		8974011	0					
ANR	8974013	CompoundStatement		246:0:8860:8876	8974011	0					
ANR	8974014	ReturnStatement	return 0 ;	247:4:8866:8874	8974011	0	True				
ANR	8974015	PrimaryExpression	0		8974011	0					
ANR	8974016	ReturnType	static int		8974011	1					
ANR	8974017	Identifier	colour_cleanup		8974011	2					
ANR	8974018	ParameterList	i_ctx_t * i_ctx_p		8974011	3					
ANR	8974019	Parameter	i_ctx_t * i_ctx_p	245:15:8842:8857	8974011	0	True				
ANR	8974020	ParameterType	i_ctx_t *		8974011	0					
ANR	8974021	Identifier	i_ctx_p		8974011	1					
ANR	8974022	CFGEntryNode	ENTRY		8974011		True				
ANR	8974023	CFGExitNode	EXIT		8974011		True				
ANR	8974024	Symbol	i_ctx_p		8974011						
ANR	8974025	Function	zsetcolor	267:0:9593:13107							
ANR	8974026	FunctionDef	zsetcolor (i_ctx_t * i_ctx_p)		8974025	0					
ANR	8974027	CompoundStatement		269:0:9633:13107	8974025	0					
ANR	8974028	IdentifierDeclStatement	os_ptr op = osp ;	270:4:9639:9671	8974025	0	True				
ANR	8974029	IdentifierDecl	op = osp		8974025	0					
ANR	8974030	IdentifierDeclType	os_ptr		8974025	0					
ANR	8974031	Identifier	op		8974025	1					
ANR	8974032	AssignmentExpression	op = osp		8974025	2		=			
ANR	8974033	Identifier	osp		8974025	0					
ANR	8974034	Identifier	osp		8974025	1					
ANR	8974035	IdentifierDeclStatement	es_ptr ep ;	271:4:9677:9686	8974025	1	True				
ANR	8974036	IdentifierDecl	ep		8974025	0					
ANR	8974037	IdentifierDeclType	es_ptr		8974025	0					
ANR	8974038	Identifier	ep		8974025	1					
ANR	8974039	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	272:4:9692:9747	8974025	2	True				
ANR	8974040	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		8974025	0					
ANR	8974041	IdentifierDeclType	const gs_color_space *		8974025	0					
ANR	8974042	Identifier	pcs		8974025	1					
ANR	8974043	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		8974025	2		=			
ANR	8974044	Identifier	pcs		8974025	0					
ANR	8974045	CallExpression	gs_currentcolorspace ( igs )		8974025	1					
ANR	8974046	Callee	gs_currentcolorspace		8974025	0					
ANR	8974047	Identifier	gs_currentcolorspace		8974025	0					
ANR	8974048	ArgumentList	igs		8974025	1					
ANR	8974049	Argument	igs		8974025	0					
ANR	8974050	Identifier	igs		8974025	0					
ANR	8974051	IdentifierDeclStatement	gs_client_color cc ;	273:4:9753:9779	8974025	3	True				
ANR	8974052	IdentifierDecl	cc		8974025	0					
ANR	8974053	IdentifierDeclType	gs_client_color		8974025	0					
ANR	8974054	Identifier	cc		8974025	1					
ANR	8974055	IdentifierDeclStatement	"int n_comps , n_numeric_comps , num_offset = 0 , code , depth ;"	274:4:9785:9862	8974025	4	True				
ANR	8974056	IdentifierDecl	n_comps		8974025	0					
ANR	8974057	IdentifierDeclType	int		8974025	0					
ANR	8974058	Identifier	n_comps		8974025	1					
ANR	8974059	IdentifierDecl	n_numeric_comps		8974025	1					
ANR	8974060	IdentifierDeclType	int		8974025	0					
ANR	8974061	Identifier	n_numeric_comps		8974025	1					
ANR	8974062	IdentifierDecl	num_offset = 0		8974025	2					
ANR	8974063	IdentifierDeclType	int		8974025	0					
ANR	8974064	Identifier	num_offset		8974025	1					
ANR	8974065	AssignmentExpression	num_offset = 0		8974025	2		=			
ANR	8974066	Identifier	num_offset		8974025	0					
ANR	8974067	PrimaryExpression	0		8974025	1					
ANR	8974068	IdentifierDecl	code		8974025	3					
ANR	8974069	IdentifierDeclType	int		8974025	0					
ANR	8974070	Identifier	code		8974025	1					
ANR	8974071	IdentifierDecl	depth		8974025	4					
ANR	8974072	IdentifierDeclType	int		8974025	0					
ANR	8974073	Identifier	depth		8974025	1					
ANR	8974074	IdentifierDeclStatement	PS_colour_space_t * space ;	275:4:9868:9892	8974025	5	True				
ANR	8974075	IdentifierDecl	* space		8974025	0					
ANR	8974076	IdentifierDeclType	PS_colour_space_t *		8974025	0					
ANR	8974077	Identifier	space		8974025	1					
ANR	8974078	ExpressionStatement	cc . pattern = 0	278:4:9960:9974	8974025	6	True				
ANR	8974079	AssignmentExpression	cc . pattern = 0		8974025	0		=			
ANR	8974080	MemberAccess	cc . pattern		8974025	0					
ANR	8974081	Identifier	cc		8974025	0					
ANR	8974082	Identifier	pattern		8974025	1					
ANR	8974083	PrimaryExpression	0		8974025	1					
ANR	8974084	IfStatement	if ( ( n_comps = cs_num_components ( pcs ) ) < 0 )		8974025	7					
ANR	8974085	Condition	( n_comps = cs_num_components ( pcs ) ) < 0	281:8:10027:10064	8974025	0	True				
ANR	8974086	RelationalExpression	( n_comps = cs_num_components ( pcs ) ) < 0		8974025	0		<			
ANR	8974087	AssignmentExpression	n_comps = cs_num_components ( pcs )		8974025	0		=			
ANR	8974088	Identifier	n_comps		8974025	0					
ANR	8974089	CallExpression	cs_num_components ( pcs )		8974025	1					
ANR	8974090	Callee	cs_num_components		8974025	0					
ANR	8974091	Identifier	cs_num_components		8974025	0					
ANR	8974092	ArgumentList	pcs		8974025	1					
ANR	8974093	Argument	pcs		8974025	0					
ANR	8974094	Identifier	pcs		8974025	0					
ANR	8974095	PrimaryExpression	0		8974025	1					
ANR	8974096	CompoundStatement		13:48:433:433	8974025	1					
ANR	8974097	ExpressionStatement	n_comps = - n_comps	282:8:10077:10095	8974025	0	True				
ANR	8974098	AssignmentExpression	n_comps = - n_comps		8974025	0		=			
ANR	8974099	Identifier	n_comps		8974025	0					
ANR	8974100	UnaryOperationExpression	- n_comps		8974025	1					
ANR	8974101	UnaryOperator	-		8974025	0					
ANR	8974102	Identifier	n_comps		8974025	1					
ANR	8974103	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		8974025	1					
ANR	8974104	Condition	"r_has_type ( op , t_dictionary )"	283:12:10109:10136	8974025	0	True				
ANR	8974105	CallExpression	"r_has_type ( op , t_dictionary )"		8974025	0					
ANR	8974106	Callee	r_has_type		8974025	0					
ANR	8974107	Identifier	r_has_type		8974025	0					
ANR	8974108	ArgumentList	op		8974025	1					
ANR	8974109	Argument	op		8974025	0					
ANR	8974110	Identifier	op		8974025	0					
ANR	8974111	Argument	t_dictionary		8974025	1					
ANR	8974112	Identifier	t_dictionary		8974025	0					
ANR	8974113	CompoundStatement		16:12:519:543	8974025	1					
ANR	8974114	IdentifierDeclStatement	"ref * pImpl , pPatInst ;"	284:12:10153:10177	8974025	0	True				
ANR	8974115	IdentifierDecl	* pImpl		8974025	0					
ANR	8974116	IdentifierDeclType	ref *		8974025	0					
ANR	8974117	Identifier	pImpl		8974025	1					
ANR	8974118	IdentifierDecl	pPatInst		8974025	1					
ANR	8974119	IdentifierDeclType	ref		8974025	0					
ANR	8974120	Identifier	pPatInst		8974025	1					
ANR	8974121	IfStatement	"if ( ( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0 )"		8974025	1					
ANR	8974122	Condition	"( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0"	286:16:10196:10254	8974025	0	True				
ANR	8974123	RelationalExpression	"( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0"		8974025	0		<			
ANR	8974124	AssignmentExpression	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"		8974025	0		=			
ANR	8974125	Identifier	code		8974025	0					
ANR	8974126	CallExpression	"dict_find_string ( op , ""Implementation"" , & pImpl )"		8974025	1					
ANR	8974127	Callee	dict_find_string		8974025	0					
ANR	8974128	Identifier	dict_find_string		8974025	0					
ANR	8974129	ArgumentList	op		8974025	1					
ANR	8974130	Argument	op		8974025	0					
ANR	8974131	Identifier	op		8974025	0					
ANR	8974132	Argument	"""Implementation"""		8974025	1					
ANR	8974133	PrimaryExpression	"""Implementation"""		8974025	0					
ANR	8974134	Argument	& pImpl		8974025	2					
ANR	8974135	UnaryOperationExpression	& pImpl		8974025	0					
ANR	8974136	UnaryOperator	&		8974025	0					
ANR	8974137	Identifier	pImpl		8974025	1					
ANR	8974138	PrimaryExpression	0		8974025	1					
ANR	8974139	ReturnStatement	return code ;	287:16:10273:10284	8974025	1	True				
ANR	8974140	Identifier	code		8974025	0					
ANR	8974141	IfStatement	if ( code > 0 )		8974025	2					
ANR	8974142	Condition	code > 0	288:16:10302:10309	8974025	0	True				
ANR	8974143	RelationalExpression	code > 0		8974025	0		>			
ANR	8974144	Identifier	code		8974025	0					
ANR	8974145	PrimaryExpression	0		8974025	1					
ANR	8974146	CompoundStatement		20:26:678:678	8974025	1					
ANR	8974147	ExpressionStatement	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"	289:16:10330:10376	8974025	0	True				
ANR	8974148	AssignmentExpression	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"		8974025	0		=			
ANR	8974149	Identifier	code		8974025	0					
ANR	8974150	CallExpression	"array_get ( imemory , pImpl , 0 , & pPatInst )"		8974025	1					
ANR	8974151	Callee	array_get		8974025	0					
ANR	8974152	Identifier	array_get		8974025	0					
ANR	8974153	ArgumentList	imemory		8974025	1					
ANR	8974154	Argument	imemory		8974025	0					
ANR	8974155	Identifier	imemory		8974025	0					
ANR	8974156	Argument	pImpl		8974025	1					
ANR	8974157	Identifier	pImpl		8974025	0					
ANR	8974158	Argument	0		8974025	2					
ANR	8974159	PrimaryExpression	0		8974025	0					
ANR	8974160	Argument	& pPatInst		8974025	3					
ANR	8974161	UnaryOperationExpression	& pPatInst		8974025	0					
ANR	8974162	UnaryOperator	&		8974025	0					
ANR	8974163	Identifier	pPatInst		8974025	1					
ANR	8974164	IfStatement	if ( code < 0 )		8974025	1					
ANR	8974165	Condition	code < 0	290:20:10398:10405	8974025	0	True				
ANR	8974166	RelationalExpression	code < 0		8974025	0		<			
ANR	8974167	Identifier	code		8974025	0					
ANR	8974168	PrimaryExpression	0		8974025	1					
ANR	8974169	ReturnStatement	return code ;	291:20:10428:10439	8974025	1	True				
ANR	8974170	Identifier	code		8974025	0					
ANR	8974171	ExpressionStatement	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"	292:16:10457:10509	8974025	2	True				
ANR	8974172	AssignmentExpression	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"		8974025	0		=			
ANR	8974173	MemberAccess	cc . pattern		8974025	0					
ANR	8974174	Identifier	cc		8974025	0					
ANR	8974175	Identifier	pattern		8974025	1					
ANR	8974176	CallExpression	"r_ptr ( & pPatInst , gs_pattern_instance_t )"		8974025	1					
ANR	8974177	Callee	r_ptr		8974025	0					
ANR	8974178	Identifier	r_ptr		8974025	0					
ANR	8974179	ArgumentList	& pPatInst		8974025	1					
ANR	8974180	Argument	& pPatInst		8974025	0					
ANR	8974181	UnaryOperationExpression	& pPatInst		8974025	0					
ANR	8974182	UnaryOperator	&		8974025	0					
ANR	8974183	Identifier	pPatInst		8974025	1					
ANR	8974184	Argument	gs_pattern_instance_t		8974025	1					
ANR	8974185	Identifier	gs_pattern_instance_t		8974025	0					
ANR	8974186	ExpressionStatement	n_numeric_comps = ( pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0 )	293:16:10527:10655	8974025	3	True				
ANR	8974187	AssignmentExpression	n_numeric_comps = ( pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0 )		8974025	0		=			
ANR	8974188	Identifier	n_numeric_comps		8974025	0					
ANR	8974189	ConditionalExpression	pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0		8974025	1					
ANR	8974190	Condition	pattern_instance_uses_base_space ( cc . pattern )		8974025	0					
ANR	8974191	CallExpression	pattern_instance_uses_base_space ( cc . pattern )		8974025	0					
ANR	8974192	Callee	pattern_instance_uses_base_space		8974025	0					
ANR	8974193	Identifier	pattern_instance_uses_base_space		8974025	0					
ANR	8974194	ArgumentList	cc . pattern		8974025	1					
ANR	8974195	Argument	cc . pattern		8974025	0					
ANR	8974196	MemberAccess	cc . pattern		8974025	0					
ANR	8974197	Identifier	cc		8974025	0					
ANR	8974198	Identifier	pattern		8974025	1					
ANR	8974199	AdditiveExpression	n_comps - 1		8974025	1		-			
ANR	8974200	Identifier	n_comps		8974025	0					
ANR	8974201	PrimaryExpression	1		8974025	1					
ANR	8974202	PrimaryExpression	0		8974025	2					
ANR	8974203	ElseStatement	else		8974025	0					
ANR	8974204	ExpressionStatement	n_numeric_comps = 0	297:16:10692:10711	8974025	0	True				
ANR	8974205	AssignmentExpression	n_numeric_comps = 0		8974025	0		=			
ANR	8974206	Identifier	n_numeric_comps		8974025	0					
ANR	8974207	PrimaryExpression	0		8974025	1					
ANR	8974208	ElseStatement	else		8974025	0					
ANR	8974209	ExpressionStatement	n_numeric_comps = 0	299:12:10740:10759	8974025	0	True				
ANR	8974210	AssignmentExpression	n_numeric_comps = 0		8974025	0		=			
ANR	8974211	Identifier	n_numeric_comps		8974025	0					
ANR	8974212	PrimaryExpression	0		8974025	1					
ANR	8974213	ExpressionStatement	num_offset = 1	300:8:10769:10783	8974025	2	True				
ANR	8974214	AssignmentExpression	num_offset = 1		8974025	0		=			
ANR	8974215	Identifier	num_offset		8974025	0					
ANR	8974216	PrimaryExpression	1		8974025	1					
ANR	8974217	ElseStatement	else		8974025	0					
ANR	8974218	ExpressionStatement	n_numeric_comps = n_comps	302:8:10804:10829	8974025	0	True				
ANR	8974219	AssignmentExpression	n_numeric_comps = n_comps		8974025	0		=			
ANR	8974220	Identifier	n_numeric_comps		8974025	0					
ANR	8974221	Identifier	n_comps		8974025	1					
ANR	8974222	ExpressionStatement	"code = float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"	305:4:10874:10944	8974025	8	True				
ANR	8974223	AssignmentExpression	"code = float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"		8974025	0		=			
ANR	8974224	Identifier	code		8974025	0					
ANR	8974225	CallExpression	"float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"		8974025	1					
ANR	8974226	Callee	float_params		8974025	0					
ANR	8974227	Identifier	float_params		8974025	0					
ANR	8974228	ArgumentList	op - num_offset		8974025	1					
ANR	8974229	Argument	op - num_offset		8974025	0					
ANR	8974230	AdditiveExpression	op - num_offset		8974025	0		-			
ANR	8974231	Identifier	op		8974025	0					
ANR	8974232	Identifier	num_offset		8974025	1					
ANR	8974233	Argument	n_numeric_comps		8974025	1					
ANR	8974234	Identifier	n_numeric_comps		8974025	0					
ANR	8974235	Argument	cc . paint . values		8974025	2					
ANR	8974236	MemberAccess	cc . paint . values		8974025	0					
ANR	8974237	MemberAccess	cc . paint		8974025	0					
ANR	8974238	Identifier	cc		8974025	0					
ANR	8974239	Identifier	paint		8974025	1					
ANR	8974240	Identifier	values		8974025	1					
ANR	8974241	IfStatement	if ( code < 0 )		8974025	9					
ANR	8974242	Condition	code < 0	306:8:10954:10961	8974025	0	True				
ANR	8974243	RelationalExpression	code < 0		8974025	0		<			
ANR	8974244	Identifier	code		8974025	0					
ANR	8974245	PrimaryExpression	0		8974025	1					
ANR	8974246	ReturnStatement	return code ;	307:8:10972:10983	8974025	1	True				
ANR	8974247	Identifier	code		8974025	0					
ANR	8974248	ExpressionStatement	"memset ( cc . paint . values + n_numeric_comps , 0 , sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps )"	311:4:11180:11304	8974025	10	True				
ANR	8974249	CallExpression	"memset ( cc . paint . values + n_numeric_comps , 0 , sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps )"		8974025	0					
ANR	8974250	Callee	memset		8974025	0					
ANR	8974251	Identifier	memset		8974025	0					
ANR	8974252	ArgumentList	cc . paint . values + n_numeric_comps		8974025	1					
ANR	8974253	Argument	cc . paint . values + n_numeric_comps		8974025	0					
ANR	8974254	AdditiveExpression	cc . paint . values + n_numeric_comps		8974025	0		+			
ANR	8974255	MemberAccess	cc . paint . values		8974025	0					
ANR	8974256	MemberAccess	cc . paint		8974025	0					
ANR	8974257	Identifier	cc		8974025	0					
ANR	8974258	Identifier	paint		8974025	1					
ANR	8974259	Identifier	values		8974025	1					
ANR	8974260	Identifier	n_numeric_comps		8974025	1					
ANR	8974261	Argument	0		8974025	1					
ANR	8974262	PrimaryExpression	0		8974025	0					
ANR	8974263	Argument	sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps		8974025	2					
ANR	8974264	AdditiveExpression	sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps		8974025	0		-			
ANR	8974265	SizeofExpression	sizeof ( cc . paint . values )		8974025	0					
ANR	8974266	Sizeof	sizeof		8974025	0					
ANR	8974267	MemberAccess	cc . paint . values		8974025	1					
ANR	8974268	MemberAccess	cc . paint		8974025	0					
ANR	8974269	Identifier	cc		8974025	0					
ANR	8974270	Identifier	paint		8974025	1					
ANR	8974271	Identifier	values		8974025	1					
ANR	8974272	MultiplicativeExpression	sizeof ( * cc . paint . values ) * n_numeric_comps		8974025	1		*			
ANR	8974273	SizeofExpression	sizeof ( * cc . paint . values )		8974025	0					
ANR	8974274	Sizeof	sizeof		8974025	0					
ANR	8974275	UnaryOperationExpression	* cc . paint . values		8974025	1					
ANR	8974276	UnaryOperator	*		8974025	0					
ANR	8974277	MemberAccess	cc . paint . values		8974025	1					
ANR	8974278	MemberAccess	cc . paint		8974025	0					
ANR	8974279	Identifier	cc		8974025	0					
ANR	8974280	Identifier	paint		8974025	1					
ANR	8974281	Identifier	values		8974025	1					
ANR	8974282	Identifier	n_numeric_comps		8974025	1					
ANR	8974283	ExpressionStatement	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"	314:4:11311:11381	8974025	11	True				
ANR	8974284	AssignmentExpression	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"		8974025	0		=			
ANR	8974285	Identifier	code		8974025	0					
ANR	8974286	CallExpression	"get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"		8974025	1					
ANR	8974287	Callee	get_space_object		8974025	0					
ANR	8974288	Identifier	get_space_object		8974025	0					
ANR	8974289	ArgumentList	i_ctx_p		8974025	1					
ANR	8974290	Argument	i_ctx_p		8974025	0					
ANR	8974291	Identifier	i_ctx_p		8974025	0					
ANR	8974292	Argument	& istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974293	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974025	0					
ANR	8974294	UnaryOperator	&		8974025	0					
ANR	8974295	MemberAccess	istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974296	ArrayIndexing	istate -> colorspace [ 0 ]		8974025	0					
ANR	8974297	PtrMemberAccess	istate -> colorspace		8974025	0					
ANR	8974298	Identifier	istate		8974025	0					
ANR	8974299	Identifier	colorspace		8974025	1					
ANR	8974300	PrimaryExpression	0		8974025	1					
ANR	8974301	Identifier	array		8974025	1					
ANR	8974302	Argument	& space		8974025	2					
ANR	8974303	UnaryOperationExpression	& space		8974025	0					
ANR	8974304	UnaryOperator	&		8974025	0					
ANR	8974305	Identifier	space		8974025	1					
ANR	8974306	IfStatement	if ( code < 0 )		8974025	12					
ANR	8974307	Condition	code < 0	315:8:11391:11398	8974025	0	True				
ANR	8974308	RelationalExpression	code < 0		8974025	0		<			
ANR	8974309	Identifier	code		8974025	0					
ANR	8974310	PrimaryExpression	0		8974025	1					
ANR	8974311	ReturnStatement	return code ;	316:8:11409:11420	8974025	1	True				
ANR	8974312	Identifier	code		8974025	0					
ANR	8974313	IfStatement	if ( space -> validatecomponents )		8974025	13					
ANR	8974314	Condition	space -> validatecomponents	317:8:11430:11454	8974025	0	True				
ANR	8974315	PtrMemberAccess	space -> validatecomponents		8974025	0					
ANR	8974316	Identifier	space		8974025	0					
ANR	8974317	Identifier	validatecomponents		8974025	1					
ANR	8974318	CompoundStatement		49:35:1823:1823	8974025	1					
ANR	8974319	ExpressionStatement	"code = space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"	318:8:11467:11654	8974025	0	True				
ANR	8974320	AssignmentExpression	"code = space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"		8974025	0		=			
ANR	8974321	Identifier	code		8974025	0					
ANR	8974322	CallExpression	"space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"		8974025	1					
ANR	8974323	Callee	space -> validatecomponents		8974025	0					
ANR	8974324	PtrMemberAccess	space -> validatecomponents		8974025	0					
ANR	8974325	Identifier	space		8974025	0					
ANR	8974326	Identifier	validatecomponents		8974025	1					
ANR	8974327	ArgumentList	i_ctx_p		8974025	1					
ANR	8974328	Argument	i_ctx_p		8974025	0					
ANR	8974329	Identifier	i_ctx_p		8974025	0					
ANR	8974330	Argument	& istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974331	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974025	0					
ANR	8974332	UnaryOperator	&		8974025	0					
ANR	8974333	MemberAccess	istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974334	ArrayIndexing	istate -> colorspace [ 0 ]		8974025	0					
ANR	8974335	PtrMemberAccess	istate -> colorspace		8974025	0					
ANR	8974336	Identifier	istate		8974025	0					
ANR	8974337	Identifier	colorspace		8974025	1					
ANR	8974338	PrimaryExpression	0		8974025	1					
ANR	8974339	Identifier	array		8974025	1					
ANR	8974340	Argument	cc . paint . values		8974025	2					
ANR	8974341	MemberAccess	cc . paint . values		8974025	0					
ANR	8974342	MemberAccess	cc . paint		8974025	0					
ANR	8974343	Identifier	cc		8974025	0					
ANR	8974344	Identifier	paint		8974025	1					
ANR	8974345	Identifier	values		8974025	1					
ANR	8974346	Argument	n_numeric_comps		8974025	3					
ANR	8974347	Identifier	n_numeric_comps		8974025	0					
ANR	8974348	IfStatement	if ( code < 0 )		8974025	1					
ANR	8974349	Condition	code < 0	321:12:11668:11675	8974025	0	True				
ANR	8974350	RelationalExpression	code < 0		8974025	0		<			
ANR	8974351	Identifier	code		8974025	0					
ANR	8974352	PrimaryExpression	0		8974025	1					
ANR	8974353	ReturnStatement	return code ;	322:12:11690:11701	8974025	1	True				
ANR	8974354	Identifier	code		8974025	0					
ANR	8974355	IfStatement	"if ( ( code = gs_setcolor ( igs , & cc ) ) >= 0 )"		8974025	14					
ANR	8974356	Condition	"( code = gs_setcolor ( igs , & cc ) ) >= 0"	326:8:11766:11800	8974025	0	True				
ANR	8974357	RelationalExpression	"( code = gs_setcolor ( igs , & cc ) ) >= 0"		8974025	0		>=			
ANR	8974358	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8974025	0		=			
ANR	8974359	Identifier	code		8974025	0					
ANR	8974360	CallExpression	"gs_setcolor ( igs , & cc )"		8974025	1					
ANR	8974361	Callee	gs_setcolor		8974025	0					
ANR	8974362	Identifier	gs_setcolor		8974025	0					
ANR	8974363	ArgumentList	igs		8974025	1					
ANR	8974364	Argument	igs		8974025	0					
ANR	8974365	Identifier	igs		8974025	0					
ANR	8974366	Argument	& cc		8974025	1					
ANR	8974367	UnaryOperationExpression	& cc		8974025	0					
ANR	8974368	UnaryOperator	&		8974025	0					
ANR	8974369	Identifier	cc		8974025	1					
ANR	8974370	PrimaryExpression	0		8974025	1					
ANR	8974371	CompoundStatement		58:45:2169:2169	8974025	1					
ANR	8974372	IfStatement	if ( n_comps > n_numeric_comps )		8974025	0					
ANR	8974373	Condition	n_comps > n_numeric_comps	328:12:11818:11842	8974025	0	True				
ANR	8974374	RelationalExpression	n_comps > n_numeric_comps		8974025	0		>			
ANR	8974375	Identifier	n_comps		8974025	0					
ANR	8974376	Identifier	n_numeric_comps		8974025	1					
ANR	8974377	CompoundStatement		60:39:2211:2211	8974025	1					
ANR	8974378	ExpressionStatement	istate -> pattern [ 0 ] = * op	329:12:11859:11883	8974025	0	True				
ANR	8974379	AssignmentExpression	istate -> pattern [ 0 ] = * op		8974025	0		=			
ANR	8974380	ArrayIndexing	istate -> pattern [ 0 ]		8974025	0					
ANR	8974381	PtrMemberAccess	istate -> pattern		8974025	0					
ANR	8974382	Identifier	istate		8974025	0					
ANR	8974383	Identifier	pattern		8974025	1					
ANR	8974384	PrimaryExpression	0		8974025	1					
ANR	8974385	UnaryOperationExpression	* op		8974025	1					
ANR	8974386	UnaryOperator	*		8974025	0					
ANR	8974387	Identifier	op		8974025	1					
ANR	8974388	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	338:4:12188:12257	8974025	15	True				
ANR	8974389	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		8974025	0		=			
ANR	8974390	Identifier	code		8974025	0					
ANR	8974391	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		8974025	1					
ANR	8974392	Callee	validate_spaces		8974025	0					
ANR	8974393	Identifier	validate_spaces		8974025	0					
ANR	8974394	ArgumentList	i_ctx_p		8974025	1					
ANR	8974395	Argument	i_ctx_p		8974025	0					
ANR	8974396	Identifier	i_ctx_p		8974025	0					
ANR	8974397	Argument	& istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974398	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974025	0					
ANR	8974399	UnaryOperator	&		8974025	0					
ANR	8974400	MemberAccess	istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974401	ArrayIndexing	istate -> colorspace [ 0 ]		8974025	0					
ANR	8974402	PtrMemberAccess	istate -> colorspace		8974025	0					
ANR	8974403	Identifier	istate		8974025	0					
ANR	8974404	Identifier	colorspace		8974025	1					
ANR	8974405	PrimaryExpression	0		8974025	1					
ANR	8974406	Identifier	array		8974025	1					
ANR	8974407	Argument	& depth		8974025	2					
ANR	8974408	UnaryOperationExpression	& depth		8974025	0					
ANR	8974409	UnaryOperator	&		8974025	0					
ANR	8974410	Identifier	depth		8974025	1					
ANR	8974411	IfStatement	if ( code < 0 )		8974025	16					
ANR	8974412	Condition	code < 0	339:8:12267:12274	8974025	0	True				
ANR	8974413	RelationalExpression	code < 0		8974025	0		<			
ANR	8974414	Identifier	code		8974025	0					
ANR	8974415	PrimaryExpression	0		8974025	1					
ANR	8974416	ReturnStatement	return code ;	340:8:12285:12296	8974025	1	True				
ANR	8974417	Identifier	code		8974025	0					
ANR	8974418	ExpressionStatement	check_estack ( 5 )	343:4:12425:12440	8974025	17	True				
ANR	8974419	CallExpression	check_estack ( 5 )		8974025	0					
ANR	8974420	Callee	check_estack		8974025	0					
ANR	8974421	Identifier	check_estack		8974025	0					
ANR	8974422	ArgumentList	5		8974025	1					
ANR	8974423	Argument	5		8974025	0					
ANR	8974424	PrimaryExpression	5		8974025	0					
ANR	8974425	ExpressionStatement	ep = esp += 1	345:4:12520:12533	8974025	18	True				
ANR	8974426	AssignmentExpression	ep = esp += 1		8974025	0		=			
ANR	8974427	Identifier	ep		8974025	0					
ANR	8974428	AssignmentExpression	esp += 1		8974025	1		+=			
ANR	8974429	Identifier	esp		8974025	0					
ANR	8974430	PrimaryExpression	1		8974025	1					
ANR	8974431	ExpressionStatement	"make_int ( ep , 0 )"	346:4:12539:12554	8974025	19	True				
ANR	8974432	CallExpression	"make_int ( ep , 0 )"		8974025	0					
ANR	8974433	Callee	make_int		8974025	0					
ANR	8974434	Identifier	make_int		8974025	0					
ANR	8974435	ArgumentList	ep		8974025	1					
ANR	8974436	Argument	ep		8974025	0					
ANR	8974437	Identifier	ep		8974025	0					
ANR	8974438	Argument	0		8974025	1					
ANR	8974439	PrimaryExpression	0		8974025	0					
ANR	8974440	ExpressionStatement	ep = esp += 1	348:4:12632:12645	8974025	20	True				
ANR	8974441	AssignmentExpression	ep = esp += 1		8974025	0		=			
ANR	8974442	Identifier	ep		8974025	0					
ANR	8974443	AssignmentExpression	esp += 1		8974025	1		+=			
ANR	8974444	Identifier	esp		8974025	0					
ANR	8974445	PrimaryExpression	1		8974025	1					
ANR	8974446	ExpressionStatement	"make_int ( ep , 0 )"	349:4:12651:12666	8974025	21	True				
ANR	8974447	CallExpression	"make_int ( ep , 0 )"		8974025	0					
ANR	8974448	Callee	make_int		8974025	0					
ANR	8974449	Identifier	make_int		8974025	0					
ANR	8974450	ArgumentList	ep		8974025	1					
ANR	8974451	Argument	ep		8974025	0					
ANR	8974452	Identifier	ep		8974025	0					
ANR	8974453	Argument	0		8974025	1					
ANR	8974454	PrimaryExpression	0		8974025	0					
ANR	8974455	ExpressionStatement	ep = esp += 1	351:4:12728:12741	8974025	22	True				
ANR	8974456	AssignmentExpression	ep = esp += 1		8974025	0		=			
ANR	8974457	Identifier	ep		8974025	0					
ANR	8974458	AssignmentExpression	esp += 1		8974025	1		+=			
ANR	8974459	Identifier	esp		8974025	0					
ANR	8974460	PrimaryExpression	1		8974025	1					
ANR	8974461	ExpressionStatement	"make_int ( ep , 0 )"	352:4:12747:12762	8974025	23	True				
ANR	8974462	CallExpression	"make_int ( ep , 0 )"		8974025	0					
ANR	8974463	Callee	make_int		8974025	0					
ANR	8974464	Identifier	make_int		8974025	0					
ANR	8974465	ArgumentList	ep		8974025	1					
ANR	8974466	Argument	ep		8974025	0					
ANR	8974467	Identifier	ep		8974025	0					
ANR	8974468	Argument	0		8974025	1					
ANR	8974469	PrimaryExpression	0		8974025	0					
ANR	8974470	ExpressionStatement	ep = esp += 1	357:4:12941:12954	8974025	24	True				
ANR	8974471	AssignmentExpression	ep = esp += 1		8974025	0		=			
ANR	8974472	Identifier	ep		8974025	0					
ANR	8974473	AssignmentExpression	esp += 1		8974025	1		+=			
ANR	8974474	Identifier	esp		8974025	0					
ANR	8974475	PrimaryExpression	1		8974025	1					
ANR	8974476	ExpressionStatement	* ep = istate -> colorspace [ 0 ] . array	358:4:12960:12993	8974025	25	True				
ANR	8974477	AssignmentExpression	* ep = istate -> colorspace [ 0 ] . array		8974025	0		=			
ANR	8974478	UnaryOperationExpression	* ep		8974025	0					
ANR	8974479	UnaryOperator	*		8974025	0					
ANR	8974480	Identifier	ep		8974025	1					
ANR	8974481	MemberAccess	istate -> colorspace [ 0 ] . array		8974025	1					
ANR	8974482	ArrayIndexing	istate -> colorspace [ 0 ]		8974025	0					
ANR	8974483	PtrMemberAccess	istate -> colorspace		8974025	0					
ANR	8974484	Identifier	istate		8974025	0					
ANR	8974485	Identifier	colorspace		8974025	1					
ANR	8974486	PrimaryExpression	0		8974025	1					
ANR	8974487	Identifier	array		8974025	1					
ANR	8974488	ExpressionStatement	push_op_estack ( setcolor_cont )	360:4:13050:13079	8974025	26	True				
ANR	8974489	CallExpression	push_op_estack ( setcolor_cont )		8974025	0					
ANR	8974490	Callee	push_op_estack		8974025	0					
ANR	8974491	Identifier	push_op_estack		8974025	0					
ANR	8974492	ArgumentList	setcolor_cont		8974025	1					
ANR	8974493	Argument	setcolor_cont		8974025	0					
ANR	8974494	Identifier	setcolor_cont		8974025	0					
ANR	8974495	ReturnStatement	return o_push_estack ;	361:4:13085:13105	8974025	27	True				
ANR	8974496	Identifier	o_push_estack		8974025	0					
ANR	8974497	ReturnType	static int		8974025	1					
ANR	8974498	Identifier	zsetcolor		8974025	2					
ANR	8974499	ParameterList	i_ctx_t * i_ctx_p		8974025	3					
ANR	8974500	Parameter	i_ctx_t * i_ctx_p	268:10:9614:9630	8974025	0	True				
ANR	8974501	ParameterType	i_ctx_t *		8974025	0					
ANR	8974502	Identifier	i_ctx_p		8974025	1					
ANR	8974503	CFGEntryNode	ENTRY		8974025		True				
ANR	8974504	CFGExitNode	EXIT		8974025		True				
ANR	8974505	Symbol	& istate -> colorspace [ 0 ] . array		8974025						
ANR	8974506	Symbol	n_comps		8974025						
ANR	8974507	Symbol	esp		8974025						
ANR	8974508	Symbol	* op		8974025						
ANR	8974509	Symbol	* cc		8974025						
ANR	8974510	Symbol	& cc		8974025						
ANR	8974511	Symbol	n_numeric_comps		8974025						
ANR	8974512	Symbol	osp		8974025						
ANR	8974513	Symbol	space		8974025						
ANR	8974514	Symbol	* istate		8974025						
ANR	8974515	Symbol	r_has_type		8974025						
ANR	8974516	Symbol	pattern_instance_uses_base_space		8974025						
ANR	8974517	Symbol	igs		8974025						
ANR	8974518	Symbol	gs_currentcolorspace		8974025						
ANR	8974519	Symbol	* cc . paint . values		8974025						
ANR	8974520	Symbol	istate -> colorspace		8974025						
ANR	8974521	Symbol	setcolor_cont		8974025						
ANR	8974522	Symbol	imemory		8974025						
ANR	8974523	Symbol	validate_spaces		8974025						
ANR	8974524	Symbol	& pImpl		8974025						
ANR	8974525	Symbol	dict_find_string		8974025						
ANR	8974526	Symbol	ep		8974025						
ANR	8974527	Symbol	get_space_object		8974025						
ANR	8974528	Symbol	num_offset		8974025						
ANR	8974529	Symbol	& depth		8974025						
ANR	8974530	Symbol	i_ctx_p		8974025						
ANR	8974531	Symbol	cs_num_components		8974025						
ANR	8974532	Symbol	cc . paint . values		8974025						
ANR	8974533	Symbol	* * istate		8974025						
ANR	8974534	Symbol	istate -> colorspace [ 0 ] . array		8974025						
ANR	8974535	Symbol	cc . pattern		8974025						
ANR	8974536	Symbol	code		8974025						
ANR	8974537	Symbol	t_dictionary		8974025						
ANR	8974538	Symbol	& pPatInst		8974025						
ANR	8974539	Symbol	gs_setcolor		8974025						
ANR	8974540	Symbol	r_ptr		8974025						
ANR	8974541	Symbol	istate -> pattern		8974025						
ANR	8974542	Symbol	& space		8974025						
ANR	8974543	Symbol	* istate -> pattern		8974025						
ANR	8974544	Symbol	* istate -> colorspace		8974025						
ANR	8974545	Symbol	o_push_estack		8974025						
ANR	8974546	Symbol	cc		8974025						
ANR	8974547	Symbol	op		8974025						
ANR	8974548	Symbol	pcs		8974025						
ANR	8974549	Symbol	float_params		8974025						
ANR	8974550	Symbol	array_get		8974025						
ANR	8974551	Symbol	space -> validatecomponents		8974025						
ANR	8974552	Symbol	gs_pattern_instance_t		8974025						
ANR	8974553	Symbol	* cc . paint		8974025						
ANR	8974554	Symbol	* ep		8974025						
ANR	8974555	Symbol	depth		8974025						
ANR	8974556	Symbol	pPatInst		8974025						
ANR	8974557	Symbol	cc . paint		8974025						
ANR	8974558	Symbol	* space		8974025						
ANR	8974559	Symbol	pImpl		8974025						
ANR	8974560	Symbol	istate		8974025						
ANR	8974561	Function	name_is_device_color	368:0:13242:13445							
ANR	8974562	FunctionDef	name_is_device_color (char * cs_name)		8974561	0					
ANR	8974563	CompoundStatement		369:0:13292:13445	8974561	0					
ANR	8974564	ReturnStatement	"return ( strcmp ( cs_name , ""DeviceGray"" ) == 0 || strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0 ) ;"	371:4:13299:13442	8974561	0	True				
ANR	8974565	OrExpression	"strcmp ( cs_name , ""DeviceGray"" ) == 0 || strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		8974561	0		||			
ANR	8974566	EqualityExpression	"strcmp ( cs_name , ""DeviceGray"" ) == 0"		8974561	0		==			
ANR	8974567	CallExpression	"strcmp ( cs_name , ""DeviceGray"" )"		8974561	0					
ANR	8974568	Callee	strcmp		8974561	0					
ANR	8974569	Identifier	strcmp		8974561	0					
ANR	8974570	ArgumentList	cs_name		8974561	1					
ANR	8974571	Argument	cs_name		8974561	0					
ANR	8974572	Identifier	cs_name		8974561	0					
ANR	8974573	Argument	"""DeviceGray"""		8974561	1					
ANR	8974574	PrimaryExpression	"""DeviceGray"""		8974561	0					
ANR	8974575	PrimaryExpression	0		8974561	1					
ANR	8974576	OrExpression	"strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		8974561	1		||			
ANR	8974577	EqualityExpression	"strcmp ( cs_name , ""DeviceRGB"" ) == 0"		8974561	0		==			
ANR	8974578	CallExpression	"strcmp ( cs_name , ""DeviceRGB"" )"		8974561	0					
ANR	8974579	Callee	strcmp		8974561	0					
ANR	8974580	Identifier	strcmp		8974561	0					
ANR	8974581	ArgumentList	cs_name		8974561	1					
ANR	8974582	Argument	cs_name		8974561	0					
ANR	8974583	Identifier	cs_name		8974561	0					
ANR	8974584	Argument	"""DeviceRGB"""		8974561	1					
ANR	8974585	PrimaryExpression	"""DeviceRGB"""		8974561	0					
ANR	8974586	PrimaryExpression	0		8974561	1					
ANR	8974587	EqualityExpression	"strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		8974561	1		==			
ANR	8974588	CallExpression	"strcmp ( cs_name , ""DeviceCMYK"" )"		8974561	0					
ANR	8974589	Callee	strcmp		8974561	0					
ANR	8974590	Identifier	strcmp		8974561	0					
ANR	8974591	ArgumentList	cs_name		8974561	1					
ANR	8974592	Argument	cs_name		8974561	0					
ANR	8974593	Identifier	cs_name		8974561	0					
ANR	8974594	Argument	"""DeviceCMYK"""		8974561	1					
ANR	8974595	PrimaryExpression	"""DeviceCMYK"""		8974561	0					
ANR	8974596	PrimaryExpression	0		8974561	1					
ANR	8974597	ReturnType	static bool		8974561	1					
ANR	8974598	Identifier	name_is_device_color		8974561	2					
ANR	8974599	ParameterList	char * cs_name		8974561	3					
ANR	8974600	Parameter	char * cs_name	368:34:13276:13288	8974561	0	True				
ANR	8974601	ParameterType	char *		8974561	0					
ANR	8974602	Identifier	cs_name		8974561	1					
ANR	8974603	CFGEntryNode	ENTRY		8974561		True				
ANR	8974604	CFGExitNode	EXIT		8974561		True				
ANR	8974605	Symbol	strcmp		8974561						
ANR	8974606	Symbol	cs_name		8974561						
ANR	8974607	Function	is_same_colorspace	383:0:13721:16285							
ANR	8974608	FunctionDef	"is_same_colorspace (i_ctx_t * i_ctx_p , ref * space1 , ref * space2 , bool isCIE)"		8974607	0					
ANR	8974609	CompoundStatement		384:0:13808:16285	8974607	0					
ANR	8974610	IdentifierDeclStatement	"PS_colour_space_t * oldcspace = 0 , * newcspace = 0 ;"	385:4:13814:13862	8974607	0	True				
ANR	8974611	IdentifierDecl	* oldcspace = 0		8974607	0					
ANR	8974612	IdentifierDeclType	PS_colour_space_t *		8974607	0					
ANR	8974613	Identifier	oldcspace		8974607	1					
ANR	8974614	AssignmentExpression	* oldcspace = 0		8974607	2		=			
ANR	8974615	Identifier	oldcspace		8974607	0					
ANR	8974616	PrimaryExpression	0		8974607	1					
ANR	8974617	IdentifierDecl	* newcspace = 0		8974607	1					
ANR	8974618	IdentifierDeclType	PS_colour_space_t *		8974607	0					
ANR	8974619	Identifier	newcspace		8974607	1					
ANR	8974620	AssignmentExpression	* newcspace = 0		8974607	2		=			
ANR	8974621	Identifier	newcspace		8974607	0					
ANR	8974622	PrimaryExpression	0		8974607	1					
ANR	8974623	IdentifierDeclStatement	"ref oldspace , * poldspace = & oldspace , newspace , * pnewspace = & newspace ;"	386:4:13868:13938	8974607	1	True				
ANR	8974624	IdentifierDecl	oldspace		8974607	0					
ANR	8974625	IdentifierDeclType	ref		8974607	0					
ANR	8974626	Identifier	oldspace		8974607	1					
ANR	8974627	IdentifierDecl	* poldspace = & oldspace		8974607	1					
ANR	8974628	IdentifierDeclType	ref *		8974607	0					
ANR	8974629	Identifier	poldspace		8974607	1					
ANR	8974630	AssignmentExpression	* poldspace = & oldspace		8974607	2		=			
ANR	8974631	Identifier	poldspace		8974607	0					
ANR	8974632	UnaryOperationExpression	& oldspace		8974607	1					
ANR	8974633	UnaryOperator	&		8974607	0					
ANR	8974634	Identifier	oldspace		8974607	1					
ANR	8974635	IdentifierDecl	newspace		8974607	2					
ANR	8974636	IdentifierDeclType	ref		8974607	0					
ANR	8974637	Identifier	newspace		8974607	1					
ANR	8974638	IdentifierDecl	* pnewspace = & newspace		8974607	3					
ANR	8974639	IdentifierDeclType	ref *		8974607	0					
ANR	8974640	Identifier	pnewspace		8974607	1					
ANR	8974641	AssignmentExpression	* pnewspace = & newspace		8974607	2		=			
ANR	8974642	Identifier	pnewspace		8974607	0					
ANR	8974643	UnaryOperationExpression	& newspace		8974607	1					
ANR	8974644	UnaryOperator	&		8974607	0					
ANR	8974645	Identifier	newspace		8974607	1					
ANR	8974646	IdentifierDeclStatement	"int code , CIESubst ;"	387:4:13944:13962	8974607	2	True				
ANR	8974647	IdentifierDecl	code		8974607	0					
ANR	8974648	IdentifierDeclType	int		8974607	0					
ANR	8974649	Identifier	code		8974607	1					
ANR	8974650	IdentifierDecl	CIESubst		8974607	1					
ANR	8974651	IdentifierDeclType	int		8974607	0					
ANR	8974652	Identifier	CIESubst		8974607	1					
ANR	8974653	ExpressionStatement	oldspace . tas . type_attrs = 0	390:4:14005:14032	8974607	3	True				
ANR	8974654	AssignmentExpression	oldspace . tas . type_attrs = 0		8974607	0		=			
ANR	8974655	MemberAccess	oldspace . tas . type_attrs		8974607	0					
ANR	8974656	MemberAccess	oldspace . tas		8974607	0					
ANR	8974657	Identifier	oldspace		8974607	0					
ANR	8974658	Identifier	tas		8974607	1					
ANR	8974659	Identifier	type_attrs		8974607	1					
ANR	8974660	PrimaryExpression	0		8974607	1					
ANR	8974661	ExpressionStatement	oldspace . tas . type_attrs = 0	391:4:14038:14065	8974607	4	True				
ANR	8974662	AssignmentExpression	oldspace . tas . type_attrs = 0		8974607	0		=			
ANR	8974663	MemberAccess	oldspace . tas . type_attrs		8974607	0					
ANR	8974664	MemberAccess	oldspace . tas		8974607	0					
ANR	8974665	Identifier	oldspace		8974607	0					
ANR	8974666	Identifier	tas		8974607	1					
ANR	8974667	Identifier	type_attrs		8974607	1					
ANR	8974668	PrimaryExpression	0		8974607	1					
ANR	8974669	ExpressionStatement	"ref_assign ( pnewspace , space1 )"	393:4:14072:14101	8974607	5	True				
ANR	8974670	CallExpression	"ref_assign ( pnewspace , space1 )"		8974607	0					
ANR	8974671	Callee	ref_assign		8974607	0					
ANR	8974672	Identifier	ref_assign		8974607	0					
ANR	8974673	ArgumentList	pnewspace		8974607	1					
ANR	8974674	Argument	pnewspace		8974607	0					
ANR	8974675	Identifier	pnewspace		8974607	0					
ANR	8974676	Argument	space1		8974607	1					
ANR	8974677	Identifier	space1		8974607	0					
ANR	8974678	ExpressionStatement	"ref_assign ( poldspace , space2 )"	394:4:14107:14136	8974607	6	True				
ANR	8974679	CallExpression	"ref_assign ( poldspace , space2 )"		8974607	0					
ANR	8974680	Callee	ref_assign		8974607	0					
ANR	8974681	Identifier	ref_assign		8974607	0					
ANR	8974682	ArgumentList	poldspace		8974607	1					
ANR	8974683	Argument	poldspace		8974607	0					
ANR	8974684	Identifier	poldspace		8974607	0					
ANR	8974685	Argument	space2		8974607	1					
ANR	8974686	Identifier	space2		8974607	0					
ANR	8974687	DoStatement	do		8974607	7					
ANR	8974688	CompoundStatement		13:7:337:337	8974607	0					
ANR	8974689	IfStatement	if ( r_type ( poldspace ) != r_type ( pnewspace ) )		8974607	0					
ANR	8974690	Condition	r_type ( poldspace ) != r_type ( pnewspace )	397:12:14160:14197	8974607	0	True				
ANR	8974691	EqualityExpression	r_type ( poldspace ) != r_type ( pnewspace )		8974607	0		!=			
ANR	8974692	CallExpression	r_type ( poldspace )		8974607	0					
ANR	8974693	Callee	r_type		8974607	0					
ANR	8974694	Identifier	r_type		8974607	0					
ANR	8974695	ArgumentList	poldspace		8974607	1					
ANR	8974696	Argument	poldspace		8974607	0					
ANR	8974697	Identifier	poldspace		8974607	0					
ANR	8974698	CallExpression	r_type ( pnewspace )		8974607	1					
ANR	8974699	Callee	r_type		8974607	0					
ANR	8974700	Identifier	r_type		8974607	0					
ANR	8974701	ArgumentList	pnewspace		8974607	1					
ANR	8974702	Argument	pnewspace		8974607	0					
ANR	8974703	Identifier	pnewspace		8974607	0					
ANR	8974704	ReturnStatement	return 0 ;	398:12:14212:14220	8974607	1	True				
ANR	8974705	PrimaryExpression	0		8974607	0					
ANR	8974706	ExpressionStatement	"code = get_space_object ( i_ctx_p , poldspace , & oldcspace )"	400:8:14231:14286	8974607	1	True				
ANR	8974707	AssignmentExpression	"code = get_space_object ( i_ctx_p , poldspace , & oldcspace )"		8974607	0		=			
ANR	8974708	Identifier	code		8974607	0					
ANR	8974709	CallExpression	"get_space_object ( i_ctx_p , poldspace , & oldcspace )"		8974607	1					
ANR	8974710	Callee	get_space_object		8974607	0					
ANR	8974711	Identifier	get_space_object		8974607	0					
ANR	8974712	ArgumentList	i_ctx_p		8974607	1					
ANR	8974713	Argument	i_ctx_p		8974607	0					
ANR	8974714	Identifier	i_ctx_p		8974607	0					
ANR	8974715	Argument	poldspace		8974607	1					
ANR	8974716	Identifier	poldspace		8974607	0					
ANR	8974717	Argument	& oldcspace		8974607	2					
ANR	8974718	UnaryOperationExpression	& oldcspace		8974607	0					
ANR	8974719	UnaryOperator	&		8974607	0					
ANR	8974720	Identifier	oldcspace		8974607	1					
ANR	8974721	IfStatement	if ( code < 0 )		8974607	2					
ANR	8974722	Condition	code < 0	401:12:14300:14307	8974607	0	True				
ANR	8974723	RelationalExpression	code < 0		8974607	0		<			
ANR	8974724	Identifier	code		8974607	0					
ANR	8974725	PrimaryExpression	0		8974607	1					
ANR	8974726	ReturnStatement	return 0 ;	402:12:14322:14330	8974607	1	True				
ANR	8974727	PrimaryExpression	0		8974607	0					
ANR	8974728	ExpressionStatement	"code = get_space_object ( i_ctx_p , pnewspace , & newcspace )"	404:8:14341:14396	8974607	3	True				
ANR	8974729	AssignmentExpression	"code = get_space_object ( i_ctx_p , pnewspace , & newcspace )"		8974607	0		=			
ANR	8974730	Identifier	code		8974607	0					
ANR	8974731	CallExpression	"get_space_object ( i_ctx_p , pnewspace , & newcspace )"		8974607	1					
ANR	8974732	Callee	get_space_object		8974607	0					
ANR	8974733	Identifier	get_space_object		8974607	0					
ANR	8974734	ArgumentList	i_ctx_p		8974607	1					
ANR	8974735	Argument	i_ctx_p		8974607	0					
ANR	8974736	Identifier	i_ctx_p		8974607	0					
ANR	8974737	Argument	pnewspace		8974607	1					
ANR	8974738	Identifier	pnewspace		8974607	0					
ANR	8974739	Argument	& newcspace		8974607	2					
ANR	8974740	UnaryOperationExpression	& newcspace		8974607	0					
ANR	8974741	UnaryOperator	&		8974607	0					
ANR	8974742	Identifier	newcspace		8974607	1					
ANR	8974743	IfStatement	if ( code < 0 )		8974607	4					
ANR	8974744	Condition	code < 0	405:12:14410:14417	8974607	0	True				
ANR	8974745	RelationalExpression	code < 0		8974607	0		<			
ANR	8974746	Identifier	code		8974607	0					
ANR	8974747	PrimaryExpression	0		8974607	1					
ANR	8974748	ReturnStatement	return 0 ;	406:12:14432:14440	8974607	1	True				
ANR	8974749	PrimaryExpression	0		8974607	0					
ANR	8974750	IfStatement	"if ( strcmp ( oldcspace -> name , newcspace -> name ) != 0 )"		8974607	5					
ANR	8974751	Condition	"strcmp ( oldcspace -> name , newcspace -> name ) != 0"	411:12:14573:14617	8974607	0	True				
ANR	8974752	EqualityExpression	"strcmp ( oldcspace -> name , newcspace -> name ) != 0"		8974607	0		!=			
ANR	8974753	CallExpression	"strcmp ( oldcspace -> name , newcspace -> name )"		8974607	0					
ANR	8974754	Callee	strcmp		8974607	0					
ANR	8974755	Identifier	strcmp		8974607	0					
ANR	8974756	ArgumentList	oldcspace -> name		8974607	1					
ANR	8974757	Argument	oldcspace -> name		8974607	0					
ANR	8974758	PtrMemberAccess	oldcspace -> name		8974607	0					
ANR	8974759	Identifier	oldcspace		8974607	0					
ANR	8974760	Identifier	name		8974607	1					
ANR	8974761	Argument	newcspace -> name		8974607	1					
ANR	8974762	PtrMemberAccess	newcspace -> name		8974607	0					
ANR	8974763	Identifier	newcspace		8974607	0					
ANR	8974764	Identifier	name		8974607	1					
ANR	8974765	PrimaryExpression	0		8974607	1					
ANR	8974766	ReturnStatement	return 0 ;	412:12:14632:14640	8974607	1	True				
ANR	8974767	PrimaryExpression	0		8974607	0					
ANR	8974768	IfStatement	"if ( ! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace ) )"		8974607	6					
ANR	8974769	Condition	"! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"	415:12:14712:14765	8974607	0	True				
ANR	8974770	UnaryOperationExpression	"! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"		8974607	0					
ANR	8974771	UnaryOperator	!		8974607	0					
ANR	8974772	CallExpression	"oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"		8974607	1					
ANR	8974773	Callee	oldcspace -> compareproc		8974607	0					
ANR	8974774	PtrMemberAccess	oldcspace -> compareproc		8974607	0					
ANR	8974775	Identifier	oldcspace		8974607	0					
ANR	8974776	Identifier	compareproc		8974607	1					
ANR	8974777	ArgumentList	i_ctx_p		8974607	1					
ANR	8974778	Argument	i_ctx_p		8974607	0					
ANR	8974779	Identifier	i_ctx_p		8974607	0					
ANR	8974780	Argument	poldspace		8974607	1					
ANR	8974781	Identifier	poldspace		8974607	0					
ANR	8974782	Argument	pnewspace		8974607	2					
ANR	8974783	Identifier	pnewspace		8974607	0					
ANR	8974784	ReturnStatement	return 0 ;	416:12:14780:14788	8974607	1	True				
ANR	8974785	PrimaryExpression	0		8974607	0					
ANR	8974786	IfStatement	if ( name_is_device_color ( newcspace -> name ) )		8974607	7					
ANR	8974787	Condition	name_is_device_color ( newcspace -> name )	433:13:15360:15396	8974607	0	True				
ANR	8974788	CallExpression	name_is_device_color ( newcspace -> name )		8974607	0					
ANR	8974789	Callee	name_is_device_color		8974607	0					
ANR	8974790	Identifier	name_is_device_color		8974607	0					
ANR	8974791	ArgumentList	newcspace -> name		8974607	1					
ANR	8974792	Argument	newcspace -> name		8974607	0					
ANR	8974793	PtrMemberAccess	newcspace -> name		8974607	0					
ANR	8974794	Identifier	newcspace		8974607	0					
ANR	8974795	Identifier	name		8974607	1					
ANR	8974796	CompoundStatement		50:52:1590:1590	8974607	1					
ANR	8974797	IfStatement	if ( gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) ) )		8974607	0					
ANR	8974798	Condition	gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) )	434:17:15418:15481	8974607	0	True				
ANR	8974799	CallExpression	gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) )		8974607	0					
ANR	8974800	Callee	gs_color_space_is_CIE		8974607	0					
ANR	8974801	Identifier	gs_color_space_is_CIE		8974607	0					
ANR	8974802	ArgumentList	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		8974607	1					
ANR	8974803	Argument	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		8974607	0					
ANR	8974804	CallExpression	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		8974607	0					
ANR	8974805	Callee	gs_currentcolorspace_inline		8974607	0					
ANR	8974806	Identifier	gs_currentcolorspace_inline		8974607	0					
ANR	8974807	ArgumentList	i_ctx_p -> pgs		8974607	1					
ANR	8974808	Argument	i_ctx_p -> pgs		8974607	0					
ANR	8974809	PtrMemberAccess	i_ctx_p -> pgs		8974607	0					
ANR	8974810	Identifier	i_ctx_p		8974607	0					
ANR	8974811	Identifier	pgs		8974607	1					
ANR	8974812	CompoundStatement		51:83:1675:1675	8974607	1					
ANR	8974813	IfStatement	if ( ! isCIE )		8974607	0					
ANR	8974814	Condition	! isCIE	435:21:15507:15512	8974607	0	True				
ANR	8974815	UnaryOperationExpression	! isCIE		8974607	0					
ANR	8974816	UnaryOperator	!		8974607	0					
ANR	8974817	Identifier	isCIE		8974607	1					
ANR	8974818	ReturnStatement	return 0 ;	435:30:15516:15524	8974607	1	True				
ANR	8974819	PrimaryExpression	0		8974607	0					
ANR	8974820	ElseStatement	else		8974607	0					
ANR	8974821	CompoundStatement		53:19:1778:1778	8974607	0					
ANR	8974822	IfStatement	if ( isCIE )		8974607	0					
ANR	8974823	Condition	isCIE	437:21:15610:15614	8974607	0	True				
ANR	8974824	Identifier	isCIE		8974607	0					
ANR	8974825	ReturnStatement	return 0 ;	437:29:15618:15626	8974607	1	True				
ANR	8974826	PrimaryExpression	0		8974607	0					
ANR	8974827	IfStatement	if ( ! oldcspace -> alternateproc )		8974607	8					
ANR	8974828	Condition	! oldcspace -> alternateproc	444:12:15817:15841	8974607	0	True				
ANR	8974829	UnaryOperationExpression	! oldcspace -> alternateproc		8974607	0					
ANR	8974830	UnaryOperator	!		8974607	0					
ANR	8974831	PtrMemberAccess	oldcspace -> alternateproc		8974607	1					
ANR	8974832	Identifier	oldcspace		8974607	0					
ANR	8974833	Identifier	alternateproc		8974607	1					
ANR	8974834	BreakStatement	break ;	445:12:15856:15861	8974607	1	True				
ANR	8974835	ExpressionStatement	"code = oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"	450:8:16001:16075	8974607	9	True				
ANR	8974836	AssignmentExpression	"code = oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"		8974607	0		=			
ANR	8974837	Identifier	code		8974607	0					
ANR	8974838	CallExpression	"oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"		8974607	1					
ANR	8974839	Callee	oldcspace -> alternateproc		8974607	0					
ANR	8974840	PtrMemberAccess	oldcspace -> alternateproc		8974607	0					
ANR	8974841	Identifier	oldcspace		8974607	0					
ANR	8974842	Identifier	alternateproc		8974607	1					
ANR	8974843	ArgumentList	i_ctx_p		8974607	1					
ANR	8974844	Argument	i_ctx_p		8974607	0					
ANR	8974845	Identifier	i_ctx_p		8974607	0					
ANR	8974846	Argument	poldspace		8974607	1					
ANR	8974847	Identifier	poldspace		8974607	0					
ANR	8974848	Argument	& poldspace		8974607	2					
ANR	8974849	UnaryOperationExpression	& poldspace		8974607	0					
ANR	8974850	UnaryOperator	&		8974607	0					
ANR	8974851	Identifier	poldspace		8974607	1					
ANR	8974852	Argument	& CIESubst		8974607	3					
ANR	8974853	UnaryOperationExpression	& CIESubst		8974607	0					
ANR	8974854	UnaryOperator	&		8974607	0					
ANR	8974855	Identifier	CIESubst		8974607	1					
ANR	8974856	IfStatement	if ( code < 0 )		8974607	10					
ANR	8974857	Condition	code < 0	451:12:16089:16096	8974607	0	True				
ANR	8974858	RelationalExpression	code < 0		8974607	0		<			
ANR	8974859	Identifier	code		8974607	0					
ANR	8974860	PrimaryExpression	0		8974607	1					
ANR	8974861	ReturnStatement	return 0 ;	452:12:16111:16119	8974607	1	True				
ANR	8974862	PrimaryExpression	0		8974607	0					
ANR	8974863	ExpressionStatement	"code = newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"	454:8:16130:16204	8974607	11	True				
ANR	8974864	AssignmentExpression	"code = newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"		8974607	0		=			
ANR	8974865	Identifier	code		8974607	0					
ANR	8974866	CallExpression	"newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"		8974607	1					
ANR	8974867	Callee	newcspace -> alternateproc		8974607	0					
ANR	8974868	PtrMemberAccess	newcspace -> alternateproc		8974607	0					
ANR	8974869	Identifier	newcspace		8974607	0					
ANR	8974870	Identifier	alternateproc		8974607	1					
ANR	8974871	ArgumentList	i_ctx_p		8974607	1					
ANR	8974872	Argument	i_ctx_p		8974607	0					
ANR	8974873	Identifier	i_ctx_p		8974607	0					
ANR	8974874	Argument	pnewspace		8974607	1					
ANR	8974875	Identifier	pnewspace		8974607	0					
ANR	8974876	Argument	& pnewspace		8974607	2					
ANR	8974877	UnaryOperationExpression	& pnewspace		8974607	0					
ANR	8974878	UnaryOperator	&		8974607	0					
ANR	8974879	Identifier	pnewspace		8974607	1					
ANR	8974880	Argument	& CIESubst		8974607	3					
ANR	8974881	UnaryOperationExpression	& CIESubst		8974607	0					
ANR	8974882	UnaryOperator	&		8974607	0					
ANR	8974883	Identifier	CIESubst		8974607	1					
ANR	8974884	IfStatement	if ( code < 0 )		8974607	12					
ANR	8974885	Condition	code < 0	455:12:16218:16225	8974607	0	True				
ANR	8974886	RelationalExpression	code < 0		8974607	0		<			
ANR	8974887	Identifier	code		8974607	0					
ANR	8974888	PrimaryExpression	0		8974607	1					
ANR	8974889	ReturnStatement	return 0 ;	456:12:16240:16248	8974607	1	True				
ANR	8974890	PrimaryExpression	0		8974607	0					
ANR	8974891	Condition	1	458:10:16266:16266	8974607	1	True				
ANR	8974892	PrimaryExpression	1		8974607	0					
ANR	8974893	ReturnStatement	return 1 ;	460:4:16275:16283	8974607	8	True				
ANR	8974894	PrimaryExpression	1		8974607	0					
ANR	8974895	ReturnType	static int		8974607	1					
ANR	8974896	Identifier	is_same_colorspace		8974607	2					
ANR	8974897	ParameterList	"i_ctx_t * i_ctx_p , ref * space1 , ref * space2 , bool isCIE"		8974607	3					
ANR	8974898	Parameter	i_ctx_t * i_ctx_p	383:30:13751:13767	8974607	0	True				
ANR	8974899	ParameterType	i_ctx_t *		8974607	0					
ANR	8974900	Identifier	i_ctx_p		8974607	1					
ANR	8974901	Parameter	ref * space1	383:49:13770:13780	8974607	1	True				
ANR	8974902	ParameterType	ref *		8974607	0					
ANR	8974903	Identifier	space1		8974607	1					
ANR	8974904	Parameter	ref * space2	383:62:13783:13793	8974607	2	True				
ANR	8974905	ParameterType	ref *		8974607	0					
ANR	8974906	Identifier	space2		8974607	1					
ANR	8974907	Parameter	bool isCIE	383:75:13796:13805	8974607	3	True				
ANR	8974908	ParameterType	bool		8974607	0					
ANR	8974909	Identifier	isCIE		8974607	1					
ANR	8974910	CFGEntryNode	ENTRY		8974607		True				
ANR	8974911	CFGExitNode	EXIT		8974607		True				
ANR	8974912	Symbol	code		8974607						
ANR	8974913	Symbol	& oldcspace		8974607						
ANR	8974914	Symbol	& newspace		8974607						
ANR	8974915	Symbol	gs_color_space_is_CIE		8974607						
ANR	8974916	Symbol	i_ctx_p -> pgs		8974607						
ANR	8974917	Symbol	newcspace -> alternateproc		8974607						
ANR	8974918	Symbol	isCIE		8974607						
ANR	8974919	Symbol	oldcspace -> name		8974607						
ANR	8974920	Symbol	gs_currentcolorspace_inline		8974607						
ANR	8974921	Symbol	newcspace -> name		8974607						
ANR	8974922	Symbol	poldspace		8974607						
ANR	8974923	Symbol	oldspace		8974607						
ANR	8974924	Symbol	oldcspace -> compareproc		8974607						
ANR	8974925	Symbol	oldcspace -> alternateproc		8974607						
ANR	8974926	Symbol	newspace		8974607						
ANR	8974927	Symbol	* i_ctx_p		8974607						
ANR	8974928	Symbol	oldspace . tas . type_attrs		8974607						
ANR	8974929	Symbol	& oldspace		8974607						
ANR	8974930	Symbol	* newcspace		8974607						
ANR	8974931	Symbol	& pnewspace		8974607						
ANR	8974932	Symbol	CIESubst		8974607						
ANR	8974933	Symbol	r_type		8974607						
ANR	8974934	Symbol	newcspace		8974607						
ANR	8974935	Symbol	strcmp		8974607						
ANR	8974936	Symbol	get_space_object		8974607						
ANR	8974937	Symbol	& CIESubst		8974607						
ANR	8974938	Symbol	oldspace . tas		8974607						
ANR	8974939	Symbol	name_is_device_color		8974607						
ANR	8974940	Symbol	* oldcspace		8974607						
ANR	8974941	Symbol	& newcspace		8974607						
ANR	8974942	Symbol	i_ctx_p		8974607						
ANR	8974943	Symbol	pnewspace		8974607						
ANR	8974944	Symbol	& poldspace		8974607						
ANR	8974945	Symbol	oldcspace		8974607						
ANR	8974946	Symbol	space2		8974607						
ANR	8974947	Symbol	space1		8974607						
ANR	8974948	Function	zsetcolorspace	471:0:16518:18419							
ANR	8974949	FunctionDef	zsetcolorspace (i_ctx_t * i_ctx_p)		8974948	0					
ANR	8974950	CompoundStatement		473:0:16563:18419	8974948	0					
ANR	8974951	IdentifierDeclStatement	os_ptr op = osp ;	474:4:16569:16585	8974948	0	True				
ANR	8974952	IdentifierDecl	op = osp		8974948	0					
ANR	8974953	IdentifierDeclType	os_ptr		8974948	0					
ANR	8974954	Identifier	op		8974948	1					
ANR	8974955	AssignmentExpression	op = osp		8974948	2		=			
ANR	8974956	Identifier	osp		8974948	0					
ANR	8974957	Identifier	osp		8974948	1					
ANR	8974958	IdentifierDeclStatement	es_ptr ep ;	475:4:16591:16600	8974948	1	True				
ANR	8974959	IdentifierDecl	ep		8974948	0					
ANR	8974960	IdentifierDeclType	es_ptr		8974948	0					
ANR	8974961	Identifier	ep		8974948	1					
ANR	8974962	IdentifierDeclStatement	"int code , depth ;"	476:4:16606:16621	8974948	2	True				
ANR	8974963	IdentifierDecl	code		8974948	0					
ANR	8974964	IdentifierDeclType	int		8974948	0					
ANR	8974965	Identifier	code		8974948	1					
ANR	8974966	IdentifierDecl	depth		8974948	1					
ANR	8974967	IdentifierDeclType	int		8974948	0					
ANR	8974968	Identifier	depth		8974948	1					
ANR	8974969	IdentifierDeclStatement	bool is_CIE ;	477:4:16627:16638	8974948	3	True				
ANR	8974970	IdentifierDecl	is_CIE		8974948	0					
ANR	8974971	IdentifierDeclType	bool		8974948	0					
ANR	8974972	Identifier	is_CIE		8974948	1					
ANR	8974973	ExpressionStatement	check_op ( 1 )	480:4:16687:16698	8974948	4	True				
ANR	8974974	CallExpression	check_op ( 1 )		8974948	0					
ANR	8974975	Callee	check_op		8974948	0					
ANR	8974976	Identifier	check_op		8974948	0					
ANR	8974977	ArgumentList	1		8974948	1					
ANR	8974978	Argument	1		8974948	0					
ANR	8974979	PrimaryExpression	1		8974948	0					
ANR	8974980	IfStatement	"if ( ! r_has_type ( op , t_name ) )"		8974948	5					
ANR	8974981	Condition	"! r_has_type ( op , t_name )"	482:8:16767:16789	8974948	0	True				
ANR	8974982	UnaryOperationExpression	"! r_has_type ( op , t_name )"		8974948	0					
ANR	8974983	UnaryOperator	!		8974948	0					
ANR	8974984	CallExpression	"r_has_type ( op , t_name )"		8974948	1					
ANR	8974985	Callee	r_has_type		8974948	0					
ANR	8974986	Identifier	r_has_type		8974948	0					
ANR	8974987	ArgumentList	op		8974948	1					
ANR	8974988	Argument	op		8974948	0					
ANR	8974989	Identifier	op		8974948	0					
ANR	8974990	Argument	t_name		8974948	1					
ANR	8974991	Identifier	t_name		8974948	0					
ANR	8974992	IfStatement	if ( ! r_is_array ( op ) )		8974948	1					
ANR	8974993	Condition	! r_is_array ( op )	483:12:16804:16818	8974948	0	True				
ANR	8974994	UnaryOperationExpression	! r_is_array ( op )		8974948	0					
ANR	8974995	UnaryOperator	!		8974948	0					
ANR	8974996	CallExpression	r_is_array ( op )		8974948	1					
ANR	8974997	Callee	r_is_array		8974948	0					
ANR	8974998	Identifier	r_is_array		8974948	0					
ANR	8974999	ArgumentList	op		8974948	1					
ANR	8975000	Argument	op		8974948	0					
ANR	8975001	Identifier	op		8974948	0					
ANR	8975002	ExpressionStatement	return_error ( gs_error_typecheck )	484:12:16833:16865	8974948	1	True				
ANR	8975003	CallExpression	return_error ( gs_error_typecheck )		8974948	0					
ANR	8975004	Callee	return_error		8974948	0					
ANR	8975005	Identifier	return_error		8974948	0					
ANR	8975006	ArgumentList	gs_error_typecheck		8974948	1					
ANR	8975007	Argument	gs_error_typecheck		8974948	0					
ANR	8975008	Identifier	gs_error_typecheck		8974948	0					
ANR	8975009	ExpressionStatement	"code = validate_spaces ( i_ctx_p , op , & depth )"	486:4:16872:16915	8974948	6	True				
ANR	8975010	AssignmentExpression	"code = validate_spaces ( i_ctx_p , op , & depth )"		8974948	0		=			
ANR	8975011	Identifier	code		8974948	0					
ANR	8975012	CallExpression	"validate_spaces ( i_ctx_p , op , & depth )"		8974948	1					
ANR	8975013	Callee	validate_spaces		8974948	0					
ANR	8975014	Identifier	validate_spaces		8974948	0					
ANR	8975015	ArgumentList	i_ctx_p		8974948	1					
ANR	8975016	Argument	i_ctx_p		8974948	0					
ANR	8975017	Identifier	i_ctx_p		8974948	0					
ANR	8975018	Argument	op		8974948	1					
ANR	8975019	Identifier	op		8974948	0					
ANR	8975020	Argument	& depth		8974948	2					
ANR	8975021	UnaryOperationExpression	& depth		8974948	0					
ANR	8975022	UnaryOperator	&		8974948	0					
ANR	8975023	Identifier	depth		8974948	1					
ANR	8975024	IfStatement	if ( code < 0 )		8974948	7					
ANR	8975025	Condition	code < 0	487:8:16925:16932	8974948	0	True				
ANR	8975026	RelationalExpression	code < 0		8974948	0		<			
ANR	8975027	Identifier	code		8974948	0					
ANR	8975028	PrimaryExpression	0		8974948	1					
ANR	8975029	ReturnStatement	return code ;	488:8:16943:16954	8974948	1	True				
ANR	8975030	Identifier	code		8974948	0					
ANR	8975031	ExpressionStatement	is_CIE = istate -> use_cie_color . value . boolval	490:4:16961:17005	8974948	8	True				
ANR	8975032	AssignmentExpression	is_CIE = istate -> use_cie_color . value . boolval		8974948	0		=			
ANR	8975033	Identifier	is_CIE		8974948	0					
ANR	8975034	MemberAccess	istate -> use_cie_color . value . boolval		8974948	1					
ANR	8975035	MemberAccess	istate -> use_cie_color . value		8974948	0					
ANR	8975036	PtrMemberAccess	istate -> use_cie_color		8974948	0					
ANR	8975037	Identifier	istate		8974948	0					
ANR	8975038	Identifier	use_cie_color		8974948	1					
ANR	8975039	Identifier	value		8974948	1					
ANR	8975040	Identifier	boolval		8974948	1					
ANR	8975041	IfStatement	"if ( is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE ) )"		8974948	9					
ANR	8975042	Condition	"is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE )"	493:8:17067:17135	8974948	0	True				
ANR	8975043	CallExpression	"is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE )"		8974948	0					
ANR	8975044	Callee	is_same_colorspace		8974948	0					
ANR	8975045	Identifier	is_same_colorspace		8974948	0					
ANR	8975046	ArgumentList	i_ctx_p		8974948	1					
ANR	8975047	Argument	i_ctx_p		8974948	0					
ANR	8975048	Identifier	i_ctx_p		8974948	0					
ANR	8975049	Argument	op		8974948	1					
ANR	8975050	Identifier	op		8974948	0					
ANR	8975051	Argument	& istate -> colorspace [ 0 ] . array		8974948	2					
ANR	8975052	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974948	0					
ANR	8975053	UnaryOperator	&		8974948	0					
ANR	8975054	MemberAccess	istate -> colorspace [ 0 ] . array		8974948	1					
ANR	8975055	ArrayIndexing	istate -> colorspace [ 0 ]		8974948	0					
ANR	8975056	PtrMemberAccess	istate -> colorspace		8974948	0					
ANR	8975057	Identifier	istate		8974948	0					
ANR	8975058	Identifier	colorspace		8974948	1					
ANR	8975059	PrimaryExpression	0		8974948	1					
ANR	8975060	Identifier	array		8974948	1					
ANR	8975061	Argument	is_CIE		8974948	3					
ANR	8975062	Identifier	is_CIE		8974948	0					
ANR	8975063	CompoundStatement		22:8:584:609	8974948	1					
ANR	8975064	IdentifierDeclStatement	PS_colour_space_t * cspace ;	494:8:17148:17173	8974948	0	True				
ANR	8975065	IdentifierDecl	* cspace		8974948	0					
ANR	8975066	IdentifierDeclType	PS_colour_space_t *		8974948	0					
ANR	8975067	Identifier	cspace		8974948	1					
ANR	8975068	ExpressionStatement	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"	499:8:17300:17371	8974948	1	True				
ANR	8975069	AssignmentExpression	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"		8974948	0		=			
ANR	8975070	Identifier	code		8974948	0					
ANR	8975071	CallExpression	"get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"		8974948	1					
ANR	8975072	Callee	get_space_object		8974948	0					
ANR	8975073	Identifier	get_space_object		8974948	0					
ANR	8975074	ArgumentList	i_ctx_p		8974948	1					
ANR	8975075	Argument	i_ctx_p		8974948	0					
ANR	8975076	Identifier	i_ctx_p		8974948	0					
ANR	8975077	Argument	& istate -> colorspace [ 0 ] . array		8974948	1					
ANR	8975078	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974948	0					
ANR	8975079	UnaryOperator	&		8974948	0					
ANR	8975080	MemberAccess	istate -> colorspace [ 0 ] . array		8974948	1					
ANR	8975081	ArrayIndexing	istate -> colorspace [ 0 ]		8974948	0					
ANR	8975082	PtrMemberAccess	istate -> colorspace		8974948	0					
ANR	8975083	Identifier	istate		8974948	0					
ANR	8975084	Identifier	colorspace		8974948	1					
ANR	8975085	PrimaryExpression	0		8974948	1					
ANR	8975086	Identifier	array		8974948	1					
ANR	8975087	Argument	& cspace		8974948	2					
ANR	8975088	UnaryOperationExpression	& cspace		8974948	0					
ANR	8975089	UnaryOperator	&		8974948	0					
ANR	8975090	Identifier	cspace		8974948	1					
ANR	8975091	IfStatement	if ( code < 0 )		8974948	2					
ANR	8975092	Condition	code < 0	500:12:17385:17392	8974948	0	True				
ANR	8975093	RelationalExpression	code < 0		8974948	0		<			
ANR	8975094	Identifier	code		8974948	0					
ANR	8975095	PrimaryExpression	0		8974948	1					
ANR	8975096	ReturnStatement	return 0 ;	501:12:17407:17415	8974948	1	True				
ANR	8975097	PrimaryExpression	0		8974948	0					
ANR	8975098	IfStatement	if ( cspace -> initialcolorproc )		8974948	3					
ANR	8975099	Condition	cspace -> initialcolorproc	502:12:17429:17452	8974948	0	True				
ANR	8975100	PtrMemberAccess	cspace -> initialcolorproc		8974948	0					
ANR	8975101	Identifier	cspace		8974948	0					
ANR	8975102	Identifier	initialcolorproc		8974948	1					
ANR	8975103	CompoundStatement		30:38:891:891	8974948	1					
ANR	8975104	ExpressionStatement	"cspace -> initialcolorproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array )"	503:12:17469:17532	8974948	0	True				
ANR	8975105	CallExpression	"cspace -> initialcolorproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array )"		8974948	0					
ANR	8975106	Callee	cspace -> initialcolorproc		8974948	0					
ANR	8975107	PtrMemberAccess	cspace -> initialcolorproc		8974948	0					
ANR	8975108	Identifier	cspace		8974948	0					
ANR	8975109	Identifier	initialcolorproc		8974948	1					
ANR	8975110	ArgumentList	i_ctx_p		8974948	1					
ANR	8975111	Argument	i_ctx_p		8974948	0					
ANR	8975112	Identifier	i_ctx_p		8974948	0					
ANR	8975113	Argument	& istate -> colorspace [ 0 ] . array		8974948	1					
ANR	8975114	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		8974948	0					
ANR	8975115	UnaryOperator	&		8974948	0					
ANR	8975116	MemberAccess	istate -> colorspace [ 0 ] . array		8974948	1					
ANR	8975117	ArrayIndexing	istate -> colorspace [ 0 ]		8974948	0					
ANR	8975118	PtrMemberAccess	istate -> colorspace		8974948	0					
ANR	8975119	Identifier	istate		8974948	0					
ANR	8975120	Identifier	colorspace		8974948	1					
ANR	8975121	PrimaryExpression	0		8974948	1					
ANR	8975122	Identifier	array		8974948	1					
ANR	8975123	ExpressionStatement	pop ( 1 )	506:8:17594:17600	8974948	4	True				
ANR	8975124	CallExpression	pop ( 1 )		8974948	0					
ANR	8975125	Callee	pop		8974948	0					
ANR	8975126	Identifier	pop		8974948	0					
ANR	8975127	ArgumentList	1		8974948	1					
ANR	8975128	Argument	1		8974948	0					
ANR	8975129	PrimaryExpression	1		8974948	0					
ANR	8975130	ReturnStatement	return 0 ;	507:8:17610:17618	8974948	5	True				
ANR	8975131	PrimaryExpression	0		8974948	0					
ANR	8975132	ExpressionStatement	check_estack ( 5 )	511:4:17753:17768	8974948	10	True				
ANR	8975133	CallExpression	check_estack ( 5 )		8974948	0					
ANR	8975134	Callee	check_estack		8974948	0					
ANR	8975135	Identifier	check_estack		8974948	0					
ANR	8975136	ArgumentList	5		8974948	1					
ANR	8975137	Argument	5		8974948	0					
ANR	8975138	PrimaryExpression	5		8974948	0					
ANR	8975139	ExpressionStatement	ep = esp += 1	513:4:17847:17860	8974948	11	True				
ANR	8975140	AssignmentExpression	ep = esp += 1		8974948	0		=			
ANR	8975141	Identifier	ep		8974948	0					
ANR	8975142	AssignmentExpression	esp += 1		8974948	1		+=			
ANR	8975143	Identifier	esp		8974948	0					
ANR	8975144	PrimaryExpression	1		8974948	1					
ANR	8975145	ExpressionStatement	"make_int ( ep , 0 )"	514:4:17866:17881	8974948	12	True				
ANR	8975146	CallExpression	"make_int ( ep , 0 )"		8974948	0					
ANR	8975147	Callee	make_int		8974948	0					
ANR	8975148	Identifier	make_int		8974948	0					
ANR	8975149	ArgumentList	ep		8974948	1					
ANR	8975150	Argument	ep		8974948	0					
ANR	8975151	Identifier	ep		8974948	0					
ANR	8975152	Argument	0		8974948	1					
ANR	8975153	PrimaryExpression	0		8974948	0					
ANR	8975154	ExpressionStatement	ep = esp += 1	516:4:17959:17972	8974948	13	True				
ANR	8975155	AssignmentExpression	ep = esp += 1		8974948	0		=			
ANR	8975156	Identifier	ep		8974948	0					
ANR	8975157	AssignmentExpression	esp += 1		8974948	1		+=			
ANR	8975158	Identifier	esp		8974948	0					
ANR	8975159	PrimaryExpression	1		8974948	1					
ANR	8975160	ExpressionStatement	"make_int ( ep , depth )"	517:4:17978:17997	8974948	14	True				
ANR	8975161	CallExpression	"make_int ( ep , depth )"		8974948	0					
ANR	8975162	Callee	make_int		8974948	0					
ANR	8975163	Identifier	make_int		8974948	0					
ANR	8975164	ArgumentList	ep		8974948	1					
ANR	8975165	Argument	ep		8974948	0					
ANR	8975166	Identifier	ep		8974948	0					
ANR	8975167	Argument	depth		8974948	1					
ANR	8975168	Identifier	depth		8974948	0					
ANR	8975169	ExpressionStatement	ep = esp += 1	519:4:18059:18072	8974948	15	True				
ANR	8975170	AssignmentExpression	ep = esp += 1		8974948	0		=			
ANR	8975171	Identifier	ep		8974948	0					
ANR	8975172	AssignmentExpression	esp += 1		8974948	1		+=			
ANR	8975173	Identifier	esp		8974948	0					
ANR	8975174	PrimaryExpression	1		8974948	1					
ANR	8975175	ExpressionStatement	"make_int ( ep , 0 )"	520:4:18078:18093	8974948	16	True				
ANR	8975176	CallExpression	"make_int ( ep , 0 )"		8974948	0					
ANR	8975177	Callee	make_int		8974948	0					
ANR	8975178	Identifier	make_int		8974948	0					
ANR	8975179	ArgumentList	ep		8974948	1					
ANR	8975180	Argument	ep		8974948	0					
ANR	8975181	Identifier	ep		8974948	0					
ANR	8975182	Argument	0		8974948	1					
ANR	8975183	PrimaryExpression	0		8974948	0					
ANR	8975184	ExpressionStatement	ep = esp += 1	525:4:18272:18285	8974948	17	True				
ANR	8975185	AssignmentExpression	ep = esp += 1		8974948	0		=			
ANR	8975186	Identifier	ep		8974948	0					
ANR	8975187	AssignmentExpression	esp += 1		8974948	1		+=			
ANR	8975188	Identifier	esp		8974948	0					
ANR	8975189	PrimaryExpression	1		8974948	1					
ANR	8975190	ExpressionStatement	* ep = * op	526:4:18291:18300	8974948	18	True				
ANR	8975191	AssignmentExpression	* ep = * op		8974948	0		=			
ANR	8975192	UnaryOperationExpression	* ep		8974948	0					
ANR	8975193	UnaryOperator	*		8974948	0					
ANR	8975194	Identifier	ep		8974948	1					
ANR	8975195	UnaryOperationExpression	* op		8974948	1					
ANR	8975196	UnaryOperator	*		8974948	0					
ANR	8975197	Identifier	op		8974948	1					
ANR	8975198	ExpressionStatement	push_op_estack ( setcolorspace_cont )	528:4:18357:18391	8974948	19	True				
ANR	8975199	CallExpression	push_op_estack ( setcolorspace_cont )		8974948	0					
ANR	8975200	Callee	push_op_estack		8974948	0					
ANR	8975201	Identifier	push_op_estack		8974948	0					
ANR	8975202	ArgumentList	setcolorspace_cont		8974948	1					
ANR	8975203	Argument	setcolorspace_cont		8974948	0					
ANR	8975204	Identifier	setcolorspace_cont		8974948	0					
ANR	8975205	ReturnStatement	return o_push_estack ;	529:4:18397:18417	8974948	20	True				
ANR	8975206	Identifier	o_push_estack		8974948	0					
ANR	8975207	ReturnType	static int		8974948	1					
ANR	8975208	Identifier	zsetcolorspace		8974948	2					
ANR	8975209	ParameterList	i_ctx_t * i_ctx_p		8974948	3					
ANR	8975210	Parameter	i_ctx_t * i_ctx_p	472:15:16544:16560	8974948	0	True				
ANR	8975211	ParameterType	i_ctx_t *		8974948	0					
ANR	8975212	Identifier	i_ctx_p		8974948	1					
ANR	8975213	CFGEntryNode	ENTRY		8974948		True				
ANR	8975214	CFGExitNode	EXIT		8974948		True				
ANR	8975215	Symbol	& istate -> colorspace [ 0 ] . array		8974948						
ANR	8975216	Symbol	code		8974948						
ANR	8975217	Symbol	esp		8974948						
ANR	8975218	Symbol	* op		8974948						
ANR	8975219	Symbol	* cspace		8974948						
ANR	8975220	Symbol	istate -> use_cie_color . value . boolval		8974948						
ANR	8975221	Symbol	osp		8974948						
ANR	8975222	Symbol	* istate		8974948						
ANR	8975223	Symbol	& cspace		8974948						
ANR	8975224	Symbol	r_has_type		8974948						
ANR	8975225	Symbol	gs_error_typecheck		8974948						
ANR	8975226	Symbol	t_name		8974948						
ANR	8975227	Symbol	setcolorspace_cont		8974948						
ANR	8975228	Symbol	istate -> colorspace		8974948						
ANR	8975229	Symbol	* istate -> colorspace		8974948						
ANR	8975230	Symbol	o_push_estack		8974948						
ANR	8975231	Symbol	op		8974948						
ANR	8975232	Symbol	validate_spaces		8974948						
ANR	8975233	Symbol	is_CIE		8974948						
ANR	8975234	Symbol	istate -> use_cie_color . value		8974948						
ANR	8975235	Symbol	ep		8974948						
ANR	8975236	Symbol	get_space_object		8974948						
ANR	8975237	Symbol	cspace -> initialcolorproc		8974948						
ANR	8975238	Symbol	& depth		8974948						
ANR	8975239	Symbol	is_same_colorspace		8974948						
ANR	8975240	Symbol	* ep		8974948						
ANR	8975241	Symbol	depth		8974948						
ANR	8975242	Symbol	istate -> use_cie_color		8974948						
ANR	8975243	Symbol	i_ctx_p		8974948						
ANR	8975244	Symbol	r_is_array		8974948						
ANR	8975245	Symbol	cspace		8974948						
ANR	8975246	Symbol	* * istate		8974948						
ANR	8975247	Symbol	istate		8974948						
ANR	8975248	Function	setcolorspace_nosubst	537:0:18613:19831							
ANR	8975249	FunctionDef	setcolorspace_nosubst (i_ctx_t * i_ctx_p)		8975248	0					
ANR	8975250	CompoundStatement		539:0:18665:19831	8975248	0					
ANR	8975251	IdentifierDeclStatement	os_ptr op = osp ;	540:4:18671:18687	8975248	0	True				
ANR	8975252	IdentifierDecl	op = osp		8975248	0					
ANR	8975253	IdentifierDeclType	os_ptr		8975248	0					
ANR	8975254	Identifier	op		8975248	1					
ANR	8975255	AssignmentExpression	op = osp		8975248	2		=			
ANR	8975256	Identifier	osp		8975248	0					
ANR	8975257	Identifier	osp		8975248	1					
ANR	8975258	IdentifierDeclStatement	es_ptr ep ;	541:4:18693:18702	8975248	1	True				
ANR	8975259	IdentifierDecl	ep		8975248	0					
ANR	8975260	IdentifierDeclType	es_ptr		8975248	0					
ANR	8975261	Identifier	ep		8975248	1					
ANR	8975262	IdentifierDeclStatement	"int code , depth ;"	542:4:18708:18723	8975248	2	True				
ANR	8975263	IdentifierDecl	code		8975248	0					
ANR	8975264	IdentifierDeclType	int		8975248	0					
ANR	8975265	Identifier	code		8975248	1					
ANR	8975266	IdentifierDecl	depth		8975248	1					
ANR	8975267	IdentifierDeclType	int		8975248	0					
ANR	8975268	Identifier	depth		8975248	1					
ANR	8975269	ExpressionStatement	check_op ( 1 )	545:4:18772:18783	8975248	3	True				
ANR	8975270	CallExpression	check_op ( 1 )		8975248	0					
ANR	8975271	Callee	check_op		8975248	0					
ANR	8975272	Identifier	check_op		8975248	0					
ANR	8975273	ArgumentList	1		8975248	1					
ANR	8975274	Argument	1		8975248	0					
ANR	8975275	PrimaryExpression	1		8975248	0					
ANR	8975276	IfStatement	"if ( ! r_has_type ( op , t_name ) )"		8975248	4					
ANR	8975277	Condition	"! r_has_type ( op , t_name )"	547:8:18852:18874	8975248	0	True				
ANR	8975278	UnaryOperationExpression	"! r_has_type ( op , t_name )"		8975248	0					
ANR	8975279	UnaryOperator	!		8975248	0					
ANR	8975280	CallExpression	"r_has_type ( op , t_name )"		8975248	1					
ANR	8975281	Callee	r_has_type		8975248	0					
ANR	8975282	Identifier	r_has_type		8975248	0					
ANR	8975283	ArgumentList	op		8975248	1					
ANR	8975284	Argument	op		8975248	0					
ANR	8975285	Identifier	op		8975248	0					
ANR	8975286	Argument	t_name		8975248	1					
ANR	8975287	Identifier	t_name		8975248	0					
ANR	8975288	IfStatement	if ( ! r_is_array ( op ) )		8975248	1					
ANR	8975289	Condition	! r_is_array ( op )	548:12:18889:18903	8975248	0	True				
ANR	8975290	UnaryOperationExpression	! r_is_array ( op )		8975248	0					
ANR	8975291	UnaryOperator	!		8975248	0					
ANR	8975292	CallExpression	r_is_array ( op )		8975248	1					
ANR	8975293	Callee	r_is_array		8975248	0					
ANR	8975294	Identifier	r_is_array		8975248	0					
ANR	8975295	ArgumentList	op		8975248	1					
ANR	8975296	Argument	op		8975248	0					
ANR	8975297	Identifier	op		8975248	0					
ANR	8975298	ExpressionStatement	return_error ( gs_error_typecheck )	549:12:18918:18950	8975248	1	True				
ANR	8975299	CallExpression	return_error ( gs_error_typecheck )		8975248	0					
ANR	8975300	Callee	return_error		8975248	0					
ANR	8975301	Identifier	return_error		8975248	0					
ANR	8975302	ArgumentList	gs_error_typecheck		8975248	1					
ANR	8975303	Argument	gs_error_typecheck		8975248	0					
ANR	8975304	Identifier	gs_error_typecheck		8975248	0					
ANR	8975305	ExpressionStatement	"code = validate_spaces ( i_ctx_p , op , & depth )"	551:4:18957:19000	8975248	5	True				
ANR	8975306	AssignmentExpression	"code = validate_spaces ( i_ctx_p , op , & depth )"		8975248	0		=			
ANR	8975307	Identifier	code		8975248	0					
ANR	8975308	CallExpression	"validate_spaces ( i_ctx_p , op , & depth )"		8975248	1					
ANR	8975309	Callee	validate_spaces		8975248	0					
ANR	8975310	Identifier	validate_spaces		8975248	0					
ANR	8975311	ArgumentList	i_ctx_p		8975248	1					
ANR	8975312	Argument	i_ctx_p		8975248	0					
ANR	8975313	Identifier	i_ctx_p		8975248	0					
ANR	8975314	Argument	op		8975248	1					
ANR	8975315	Identifier	op		8975248	0					
ANR	8975316	Argument	& depth		8975248	2					
ANR	8975317	UnaryOperationExpression	& depth		8975248	0					
ANR	8975318	UnaryOperator	&		8975248	0					
ANR	8975319	Identifier	depth		8975248	1					
ANR	8975320	IfStatement	if ( code < 0 )		8975248	6					
ANR	8975321	Condition	code < 0	552:8:19010:19017	8975248	0	True				
ANR	8975322	RelationalExpression	code < 0		8975248	0		<			
ANR	8975323	Identifier	code		8975248	0					
ANR	8975324	PrimaryExpression	0		8975248	1					
ANR	8975325	ReturnStatement	return code ;	553:8:19028:19039	8975248	1	True				
ANR	8975326	Identifier	code		8975248	0					
ANR	8975327	ExpressionStatement	check_estack ( 5 )	557:4:19169:19184	8975248	7	True				
ANR	8975328	CallExpression	check_estack ( 5 )		8975248	0					
ANR	8975329	Callee	check_estack		8975248	0					
ANR	8975330	Identifier	check_estack		8975248	0					
ANR	8975331	ArgumentList	5		8975248	1					
ANR	8975332	Argument	5		8975248	0					
ANR	8975333	PrimaryExpression	5		8975248	0					
ANR	8975334	ExpressionStatement	ep = esp += 1	559:4:19259:19272	8975248	8	True				
ANR	8975335	AssignmentExpression	ep = esp += 1		8975248	0		=			
ANR	8975336	Identifier	ep		8975248	0					
ANR	8975337	AssignmentExpression	esp += 1		8975248	1		+=			
ANR	8975338	Identifier	esp		8975248	0					
ANR	8975339	PrimaryExpression	1		8975248	1					
ANR	8975340	ExpressionStatement	"make_int ( ep , 1 )"	560:4:19278:19293	8975248	9	True				
ANR	8975341	CallExpression	"make_int ( ep , 1 )"		8975248	0					
ANR	8975342	Callee	make_int		8975248	0					
ANR	8975343	Identifier	make_int		8975248	0					
ANR	8975344	ArgumentList	ep		8975248	1					
ANR	8975345	Argument	ep		8975248	0					
ANR	8975346	Identifier	ep		8975248	0					
ANR	8975347	Argument	1		8975248	1					
ANR	8975348	PrimaryExpression	1		8975248	0					
ANR	8975349	ExpressionStatement	ep = esp += 1	562:4:19371:19384	8975248	10	True				
ANR	8975350	AssignmentExpression	ep = esp += 1		8975248	0		=			
ANR	8975351	Identifier	ep		8975248	0					
ANR	8975352	AssignmentExpression	esp += 1		8975248	1		+=			
ANR	8975353	Identifier	esp		8975248	0					
ANR	8975354	PrimaryExpression	1		8975248	1					
ANR	8975355	ExpressionStatement	"make_int ( ep , depth )"	563:4:19390:19409	8975248	11	True				
ANR	8975356	CallExpression	"make_int ( ep , depth )"		8975248	0					
ANR	8975357	Callee	make_int		8975248	0					
ANR	8975358	Identifier	make_int		8975248	0					
ANR	8975359	ArgumentList	ep		8975248	1					
ANR	8975360	Argument	ep		8975248	0					
ANR	8975361	Identifier	ep		8975248	0					
ANR	8975362	Argument	depth		8975248	1					
ANR	8975363	Identifier	depth		8975248	0					
ANR	8975364	ExpressionStatement	ep = esp += 1	565:4:19471:19484	8975248	12	True				
ANR	8975365	AssignmentExpression	ep = esp += 1		8975248	0		=			
ANR	8975366	Identifier	ep		8975248	0					
ANR	8975367	AssignmentExpression	esp += 1		8975248	1		+=			
ANR	8975368	Identifier	esp		8975248	0					
ANR	8975369	PrimaryExpression	1		8975248	1					
ANR	8975370	ExpressionStatement	"make_int ( ep , 0 )"	566:4:19490:19505	8975248	13	True				
ANR	8975371	CallExpression	"make_int ( ep , 0 )"		8975248	0					
ANR	8975372	Callee	make_int		8975248	0					
ANR	8975373	Identifier	make_int		8975248	0					
ANR	8975374	ArgumentList	ep		8975248	1					
ANR	8975375	Argument	ep		8975248	0					
ANR	8975376	Identifier	ep		8975248	0					
ANR	8975377	Argument	0		8975248	1					
ANR	8975378	PrimaryExpression	0		8975248	0					
ANR	8975379	ExpressionStatement	ep = esp += 1	571:4:19684:19697	8975248	14	True				
ANR	8975380	AssignmentExpression	ep = esp += 1		8975248	0		=			
ANR	8975381	Identifier	ep		8975248	0					
ANR	8975382	AssignmentExpression	esp += 1		8975248	1		+=			
ANR	8975383	Identifier	esp		8975248	0					
ANR	8975384	PrimaryExpression	1		8975248	1					
ANR	8975385	ExpressionStatement	* ep = * op	572:4:19703:19712	8975248	15	True				
ANR	8975386	AssignmentExpression	* ep = * op		8975248	0		=			
ANR	8975387	UnaryOperationExpression	* ep		8975248	0					
ANR	8975388	UnaryOperator	*		8975248	0					
ANR	8975389	Identifier	ep		8975248	1					
ANR	8975390	UnaryOperationExpression	* op		8975248	1					
ANR	8975391	UnaryOperator	*		8975248	0					
ANR	8975392	Identifier	op		8975248	1					
ANR	8975393	ExpressionStatement	push_op_estack ( setcolorspace_cont )	574:4:19769:19803	8975248	16	True				
ANR	8975394	CallExpression	push_op_estack ( setcolorspace_cont )		8975248	0					
ANR	8975395	Callee	push_op_estack		8975248	0					
ANR	8975396	Identifier	push_op_estack		8975248	0					
ANR	8975397	ArgumentList	setcolorspace_cont		8975248	1					
ANR	8975398	Argument	setcolorspace_cont		8975248	0					
ANR	8975399	Identifier	setcolorspace_cont		8975248	0					
ANR	8975400	ReturnStatement	return o_push_estack ;	575:4:19809:19829	8975248	17	True				
ANR	8975401	Identifier	o_push_estack		8975248	0					
ANR	8975402	ReturnType	static int		8975248	1					
ANR	8975403	Identifier	setcolorspace_nosubst		8975248	2					
ANR	8975404	ParameterList	i_ctx_t * i_ctx_p		8975248	3					
ANR	8975405	Parameter	i_ctx_t * i_ctx_p	538:22:18646:18662	8975248	0	True				
ANR	8975406	ParameterType	i_ctx_t *		8975248	0					
ANR	8975407	Identifier	i_ctx_p		8975248	1					
ANR	8975408	CFGEntryNode	ENTRY		8975248		True				
ANR	8975409	CFGExitNode	EXIT		8975248		True				
ANR	8975410	Symbol	op		8975248						
ANR	8975411	Symbol	validate_spaces		8975248						
ANR	8975412	Symbol	code		8975248						
ANR	8975413	Symbol	esp		8975248						
ANR	8975414	Symbol	* op		8975248						
ANR	8975415	Symbol	ep		8975248						
ANR	8975416	Symbol	osp		8975248						
ANR	8975417	Symbol	& depth		8975248						
ANR	8975418	Symbol	r_has_type		8975248						
ANR	8975419	Symbol	gs_error_typecheck		8975248						
ANR	8975420	Symbol	* ep		8975248						
ANR	8975421	Symbol	depth		8975248						
ANR	8975422	Symbol	i_ctx_p		8975248						
ANR	8975423	Symbol	t_name		8975248						
ANR	8975424	Symbol	setcolorspace_cont		8975248						
ANR	8975425	Symbol	r_is_array		8975248						
ANR	8975426	Symbol	o_push_estack		8975248						
ANR	8975427	Function	zincludecolorspace	583:0:19936:20238							
ANR	8975428	FunctionDef	zincludecolorspace (i_ctx_t * i_ctx_p)		8975427	0					
ANR	8975429	CompoundStatement		585:0:19985:20238	8975427	0					
ANR	8975430	IdentifierDeclStatement	os_ptr op = osp ;	586:4:19991:20007	8975427	0	True				
ANR	8975431	IdentifierDecl	op = osp		8975427	0					
ANR	8975432	IdentifierDeclType	os_ptr		8975427	0					
ANR	8975433	Identifier	op		8975427	1					
ANR	8975434	AssignmentExpression	op = osp		8975427	2		=			
ANR	8975435	Identifier	osp		8975427	0					
ANR	8975436	Identifier	osp		8975427	1					
ANR	8975437	IdentifierDeclStatement	ref nsref ;	587:4:20013:20022	8975427	1	True				
ANR	8975438	IdentifierDecl	nsref		8975427	0					
ANR	8975439	IdentifierDeclType	ref		8975427	0					
ANR	8975440	Identifier	nsref		8975427	1					
ANR	8975441	IdentifierDeclStatement	int code ;	588:4:20028:20036	8975427	2	True				
ANR	8975442	IdentifierDecl	code		8975427	0					
ANR	8975443	IdentifierDeclType	int		8975427	0					
ANR	8975444	Identifier	code		8975427	1					
ANR	8975445	ExpressionStatement	"check_type ( * op , t_name )"	590:4:20043:20066	8975427	3	True				
ANR	8975446	CallExpression	"check_type ( * op , t_name )"		8975427	0					
ANR	8975447	Callee	check_type		8975427	0					
ANR	8975448	Identifier	check_type		8975427	0					
ANR	8975449	ArgumentList	* op		8975427	1					
ANR	8975450	Argument	* op		8975427	0					
ANR	8975451	UnaryOperationExpression	* op		8975427	0					
ANR	8975452	UnaryOperator	*		8975427	0					
ANR	8975453	Identifier	op		8975427	1					
ANR	8975454	Argument	t_name		8975427	1					
ANR	8975455	Identifier	t_name		8975427	0					
ANR	8975456	ExpressionStatement	"name_string_ref ( imemory , op , & nsref )"	591:4:20072:20108	8975427	4	True				
ANR	8975457	CallExpression	"name_string_ref ( imemory , op , & nsref )"		8975427	0					
ANR	8975458	Callee	name_string_ref		8975427	0					
ANR	8975459	Identifier	name_string_ref		8975427	0					
ANR	8975460	ArgumentList	imemory		8975427	1					
ANR	8975461	Argument	imemory		8975427	0					
ANR	8975462	Identifier	imemory		8975427	0					
ANR	8975463	Argument	op		8975427	1					
ANR	8975464	Identifier	op		8975427	0					
ANR	8975465	Argument	& nsref		8975427	2					
ANR	8975466	UnaryOperationExpression	& nsref		8975427	0					
ANR	8975467	UnaryOperator	&		8975427	0					
ANR	8975468	Identifier	nsref		8975427	1					
ANR	8975469	ExpressionStatement	"code = gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"	592:4:20114:20188	8975427	5	True				
ANR	8975470	AssignmentExpression	"code = gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"		8975427	0		=			
ANR	8975471	Identifier	code		8975427	0					
ANR	8975472	CallExpression	"gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"		8975427	1					
ANR	8975473	Callee	gs_includecolorspace		8975427	0					
ANR	8975474	Identifier	gs_includecolorspace		8975427	0					
ANR	8975475	ArgumentList	igs		8975427	1					
ANR	8975476	Argument	igs		8975427	0					
ANR	8975477	Identifier	igs		8975427	0					
ANR	8975478	Argument	nsref . value . const_bytes		8975427	1					
ANR	8975479	MemberAccess	nsref . value . const_bytes		8975427	0					
ANR	8975480	MemberAccess	nsref . value		8975427	0					
ANR	8975481	Identifier	nsref		8975427	0					
ANR	8975482	Identifier	value		8975427	1					
ANR	8975483	Identifier	const_bytes		8975427	1					
ANR	8975484	Argument	r_size ( & nsref )		8975427	2					
ANR	8975485	CallExpression	r_size ( & nsref )		8975427	0					
ANR	8975486	Callee	r_size		8975427	0					
ANR	8975487	Identifier	r_size		8975427	0					
ANR	8975488	ArgumentList	& nsref		8975427	1					
ANR	8975489	Argument	& nsref		8975427	0					
ANR	8975490	UnaryOperationExpression	& nsref		8975427	0					
ANR	8975491	UnaryOperator	&		8975427	0					
ANR	8975492	Identifier	nsref		8975427	1					
ANR	8975493	IfStatement	if ( ! code )		8975427	6					
ANR	8975494	Condition	! code	593:8:20198:20202	8975427	0	True				
ANR	8975495	UnaryOperationExpression	! code		8975427	0					
ANR	8975496	UnaryOperator	!		8975427	0					
ANR	8975497	Identifier	code		8975427	1					
ANR	8975498	ExpressionStatement	pop ( 1 )	594:8:20213:20219	8975427	1	True				
ANR	8975499	CallExpression	pop ( 1 )		8975427	0					
ANR	8975500	Callee	pop		8975427	0					
ANR	8975501	Identifier	pop		8975427	0					
ANR	8975502	ArgumentList	1		8975427	1					
ANR	8975503	Argument	1		8975427	0					
ANR	8975504	PrimaryExpression	1		8975427	0					
ANR	8975505	ReturnStatement	return code ;	595:4:20225:20236	8975427	7	True				
ANR	8975506	Identifier	code		8975427	0					
ANR	8975507	ReturnType	static int		8975427	1					
ANR	8975508	Identifier	zincludecolorspace		8975427	2					
ANR	8975509	ParameterList	i_ctx_t * i_ctx_p		8975427	3					
ANR	8975510	Parameter	i_ctx_t * i_ctx_p	584:19:19966:19982	8975427	0	True				
ANR	8975511	ParameterType	i_ctx_t *		8975427	0					
ANR	8975512	Identifier	i_ctx_p		8975427	1					
ANR	8975513	CFGEntryNode	ENTRY		8975427		True				
ANR	8975514	CFGExitNode	EXIT		8975427		True				
ANR	8975515	Symbol	op		8975427						
ANR	8975516	Symbol	code		8975427						
ANR	8975517	Symbol	* op		8975427						
ANR	8975518	Symbol	nsref		8975427						
ANR	8975519	Symbol	osp		8975427						
ANR	8975520	Symbol	nsref . value . const_bytes		8975427						
ANR	8975521	Symbol	igs		8975427						
ANR	8975522	Symbol	i_ctx_p		8975427						
ANR	8975523	Symbol	t_name		8975427						
ANR	8975524	Symbol	nsref . value		8975427						
ANR	8975525	Symbol	r_size		8975427						
ANR	8975526	Symbol	imemory		8975427						
ANR	8975527	Symbol	gs_includecolorspace		8975427						
ANR	8975528	Symbol	& nsref		8975427						
ANR	8975529	Function	zcurrenttransfer	599:0:20277:20414							
ANR	8975530	FunctionDef	zcurrenttransfer (i_ctx_t * i_ctx_p)		8975529	0					
ANR	8975531	CompoundStatement		601:0:20323:20414	8975529	0					
ANR	8975532	IdentifierDeclStatement	os_ptr op = osp ;	602:4:20329:20345	8975529	0	True				
ANR	8975533	IdentifierDecl	op = osp		8975529	0					
ANR	8975534	IdentifierDeclType	os_ptr		8975529	0					
ANR	8975535	Identifier	op		8975529	1					
ANR	8975536	AssignmentExpression	op = osp		8975529	2		=			
ANR	8975537	Identifier	osp		8975529	0					
ANR	8975538	Identifier	osp		8975529	1					
ANR	8975539	ExpressionStatement	push ( 1 )	604:4:20352:20359	8975529	1	True				
ANR	8975540	CallExpression	push ( 1 )		8975529	0					
ANR	8975541	Callee	push		8975529	0					
ANR	8975542	Identifier	push		8975529	0					
ANR	8975543	ArgumentList	1		8975529	1					
ANR	8975544	Argument	1		8975529	0					
ANR	8975545	PrimaryExpression	1		8975529	0					
ANR	8975546	ExpressionStatement	* op = istate -> transfer_procs . gray	605:4:20365:20398	8975529	2	True				
ANR	8975547	AssignmentExpression	* op = istate -> transfer_procs . gray		8975529	0		=			
ANR	8975548	UnaryOperationExpression	* op		8975529	0					
ANR	8975549	UnaryOperator	*		8975529	0					
ANR	8975550	Identifier	op		8975529	1					
ANR	8975551	MemberAccess	istate -> transfer_procs . gray		8975529	1					
ANR	8975552	PtrMemberAccess	istate -> transfer_procs		8975529	0					
ANR	8975553	Identifier	istate		8975529	0					
ANR	8975554	Identifier	transfer_procs		8975529	1					
ANR	8975555	Identifier	gray		8975529	1					
ANR	8975556	ReturnStatement	return 0 ;	606:4:20404:20412	8975529	3	True				
ANR	8975557	PrimaryExpression	0		8975529	0					
ANR	8975558	ReturnType	static int		8975529	1					
ANR	8975559	Identifier	zcurrenttransfer		8975529	2					
ANR	8975560	ParameterList	i_ctx_t * i_ctx_p		8975529	3					
ANR	8975561	Parameter	i_ctx_t * i_ctx_p	600:17:20305:20320	8975529	0	True				
ANR	8975562	ParameterType	i_ctx_t *		8975529	0					
ANR	8975563	Identifier	i_ctx_p		8975529	1					
ANR	8975564	CFGEntryNode	ENTRY		8975529		True				
ANR	8975565	CFGExitNode	EXIT		8975529		True				
ANR	8975566	Symbol	op		8975529						
ANR	8975567	Symbol	istate -> transfer_procs . gray		8975529						
ANR	8975568	Symbol	* op		8975529						
ANR	8975569	Symbol	i_ctx_p		8975529						
ANR	8975570	Symbol	istate -> transfer_procs		8975529						
ANR	8975571	Symbol	osp		8975529						
ANR	8975572	Symbol	* istate		8975529						
ANR	8975573	Symbol	istate		8975529						
ANR	8975574	Function	zprocesscolors	615:0:20539:20704							
ANR	8975575	FunctionDef	zprocesscolors (i_ctx_t * i_ctx_p)		8975574	0					
ANR	8975576	CompoundStatement		617:0:20584:20704	8975574	0					
ANR	8975577	IdentifierDeclStatement	os_ptr op = osp ;	618:4:20590:20606	8975574	0	True				
ANR	8975578	IdentifierDecl	op = osp		8975574	0					
ANR	8975579	IdentifierDeclType	os_ptr		8975574	0					
ANR	8975580	Identifier	op		8975574	1					
ANR	8975581	AssignmentExpression	op = osp		8975574	2		=			
ANR	8975582	Identifier	osp		8975574	0					
ANR	8975583	Identifier	osp		8975574	1					
ANR	8975584	ExpressionStatement	push ( 1 )	620:4:20613:20620	8975574	1	True				
ANR	8975585	CallExpression	push ( 1 )		8975574	0					
ANR	8975586	Callee	push		8975574	0					
ANR	8975587	Identifier	push		8975574	0					
ANR	8975588	ArgumentList	1		8975574	1					
ANR	8975589	Argument	1		8975574	0					
ANR	8975590	PrimaryExpression	1		8975574	0					
ANR	8975591	ExpressionStatement	"make_int ( op , gs_currentdevice ( igs ) -> color_info . num_components )"	621:4:20626:20688	8975574	2	True				
ANR	8975592	CallExpression	"make_int ( op , gs_currentdevice ( igs ) -> color_info . num_components )"		8975574	0					
ANR	8975593	Callee	make_int		8975574	0					
ANR	8975594	Identifier	make_int		8975574	0					
ANR	8975595	ArgumentList	op		8975574	1					
ANR	8975596	Argument	op		8975574	0					
ANR	8975597	Identifier	op		8975574	0					
ANR	8975598	Argument	gs_currentdevice ( igs ) -> color_info . num_components		8975574	1					
ANR	8975599	MemberAccess	gs_currentdevice ( igs ) -> color_info . num_components		8975574	0					
ANR	8975600	PtrMemberAccess	gs_currentdevice ( igs ) -> color_info		8975574	0					
ANR	8975601	CallExpression	gs_currentdevice ( igs )		8975574	0					
ANR	8975602	Callee	gs_currentdevice		8975574	0					
ANR	8975603	Identifier	gs_currentdevice		8975574	0					
ANR	8975604	ArgumentList	igs		8975574	1					
ANR	8975605	Argument	igs		8975574	0					
ANR	8975606	Identifier	igs		8975574	0					
ANR	8975607	Identifier	color_info		8975574	1					
ANR	8975608	Identifier	num_components		8975574	1					
ANR	8975609	ReturnStatement	return 0 ;	622:4:20694:20702	8975574	3	True				
ANR	8975610	PrimaryExpression	0		8975574	0					
ANR	8975611	ReturnType	static int		8975574	1					
ANR	8975612	Identifier	zprocesscolors		8975574	2					
ANR	8975613	ParameterList	i_ctx_t * i_ctx_p		8975574	3					
ANR	8975614	Parameter	i_ctx_t * i_ctx_p	616:15:20565:20581	8975574	0	True				
ANR	8975615	ParameterType	i_ctx_t *		8975574	0					
ANR	8975616	Identifier	i_ctx_p		8975574	1					
ANR	8975617	CFGEntryNode	ENTRY		8975574		True				
ANR	8975618	CFGExitNode	EXIT		8975574		True				
ANR	8975619	Symbol	op		8975574						
ANR	8975620	Symbol	* gs_currentdevice		8975574						
ANR	8975621	Symbol	igs		8975574						
ANR	8975622	Symbol	gs_currentdevice ( igs ) -> color_info . num_components		8975574						
ANR	8975623	Symbol	i_ctx_p		8975574						
ANR	8975624	Symbol	gs_currentdevice		8975574						
ANR	8975625	Symbol	osp		8975574						
ANR	8975626	Symbol	gs_currentdevice ( igs ) -> color_info		8975574						
ANR	8975627	Function	zsettransfer	626:0:20734:21479							
ANR	8975628	FunctionDef	zsettransfer (i_ctx_t * i_ctx_p)		8975627	0					
ANR	8975629	CompoundStatement		628:0:20777:21479	8975627	0					
ANR	8975630	IdentifierDeclStatement	os_ptr op = osp ;	629:4:20783:20799	8975627	0	True				
ANR	8975631	IdentifierDecl	op = osp		8975627	0					
ANR	8975632	IdentifierDeclType	os_ptr		8975627	0					
ANR	8975633	Identifier	op		8975627	1					
ANR	8975634	AssignmentExpression	op = osp		8975627	2		=			
ANR	8975635	Identifier	osp		8975627	0					
ANR	8975636	Identifier	osp		8975627	1					
ANR	8975637	IdentifierDeclStatement	int code ;	630:4:20805:20817	8975627	1	True				
ANR	8975638	IdentifierDecl	code		8975627	0					
ANR	8975639	IdentifierDeclType	int		8975627	0					
ANR	8975640	Identifier	code		8975627	1					
ANR	8975641	ExpressionStatement	check_proc ( * op )	632:4:20824:20839	8975627	2	True				
ANR	8975642	CallExpression	check_proc ( * op )		8975627	0					
ANR	8975643	Callee	check_proc		8975627	0					
ANR	8975644	Identifier	check_proc		8975627	0					
ANR	8975645	ArgumentList	* op		8975627	1					
ANR	8975646	Argument	* op		8975627	0					
ANR	8975647	UnaryOperationExpression	* op		8975627	0					
ANR	8975648	UnaryOperator	*		8975627	0					
ANR	8975649	Identifier	op		8975627	1					
ANR	8975650	ExpressionStatement	check_ostack ( zcolor_remap_one_ostack - 1 )	633:4:20845:20886	8975627	3	True				
ANR	8975651	CallExpression	check_ostack ( zcolor_remap_one_ostack - 1 )		8975627	0					
ANR	8975652	Callee	check_ostack		8975627	0					
ANR	8975653	Identifier	check_ostack		8975627	0					
ANR	8975654	ArgumentList	zcolor_remap_one_ostack - 1		8975627	1					
ANR	8975655	Argument	zcolor_remap_one_ostack - 1		8975627	0					
ANR	8975656	AdditiveExpression	zcolor_remap_one_ostack - 1		8975627	0		-			
ANR	8975657	Identifier	zcolor_remap_one_ostack		8975627	0					
ANR	8975658	PrimaryExpression	1		8975627	1					
ANR	8975659	ExpressionStatement	check_estack ( 1 + zcolor_remap_one_estack )	634:4:20892:20933	8975627	4	True				
ANR	8975660	CallExpression	check_estack ( 1 + zcolor_remap_one_estack )		8975627	0					
ANR	8975661	Callee	check_estack		8975627	0					
ANR	8975662	Identifier	check_estack		8975627	0					
ANR	8975663	ArgumentList	1 + zcolor_remap_one_estack		8975627	1					
ANR	8975664	Argument	1 + zcolor_remap_one_estack		8975627	0					
ANR	8975665	AdditiveExpression	1 + zcolor_remap_one_estack		8975627	0		+			
ANR	8975666	PrimaryExpression	1		8975627	0					
ANR	8975667	Identifier	zcolor_remap_one_estack		8975627	1					
ANR	8975668	ExpressionStatement	istate -> transfer_procs . red = istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op	635:4:20939:21086	8975627	5	True				
ANR	8975669	AssignmentExpression	istate -> transfer_procs . red = istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		8975627	0		=			
ANR	8975670	MemberAccess	istate -> transfer_procs . red		8975627	0					
ANR	8975671	PtrMemberAccess	istate -> transfer_procs		8975627	0					
ANR	8975672	Identifier	istate		8975627	0					
ANR	8975673	Identifier	transfer_procs		8975627	1					
ANR	8975674	Identifier	red		8975627	1					
ANR	8975675	AssignmentExpression	istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		8975627	1		=			
ANR	8975676	MemberAccess	istate -> transfer_procs . green		8975627	0					
ANR	8975677	PtrMemberAccess	istate -> transfer_procs		8975627	0					
ANR	8975678	Identifier	istate		8975627	0					
ANR	8975679	Identifier	transfer_procs		8975627	1					
ANR	8975680	Identifier	green		8975627	1					
ANR	8975681	AssignmentExpression	istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		8975627	1		=			
ANR	8975682	MemberAccess	istate -> transfer_procs . blue		8975627	0					
ANR	8975683	PtrMemberAccess	istate -> transfer_procs		8975627	0					
ANR	8975684	Identifier	istate		8975627	0					
ANR	8975685	Identifier	transfer_procs		8975627	1					
ANR	8975686	Identifier	blue		8975627	1					
ANR	8975687	AssignmentExpression	istate -> transfer_procs . gray = * op		8975627	1		=			
ANR	8975688	MemberAccess	istate -> transfer_procs . gray		8975627	0					
ANR	8975689	PtrMemberAccess	istate -> transfer_procs		8975627	0					
ANR	8975690	Identifier	istate		8975627	0					
ANR	8975691	Identifier	transfer_procs		8975627	1					
ANR	8975692	Identifier	gray		8975627	1					
ANR	8975693	UnaryOperationExpression	* op		8975627	1					
ANR	8975694	UnaryOperator	*		8975627	0					
ANR	8975695	Identifier	op		8975627	1					
ANR	8975696	IfStatement	"if ( ( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0 )"		8975627	6					
ANR	8975697	Condition	"( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0"	639:8:21096:21160	8975627	0	True				
ANR	8975698	RelationalExpression	"( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0"		8975627	0		<			
ANR	8975699	AssignmentExpression	"code = gs_settransfer_remap ( igs , gs_mapped_transfer , false )"		8975627	0		=			
ANR	8975700	Identifier	code		8975627	0					
ANR	8975701	CallExpression	"gs_settransfer_remap ( igs , gs_mapped_transfer , false )"		8975627	1					
ANR	8975702	Callee	gs_settransfer_remap		8975627	0					
ANR	8975703	Identifier	gs_settransfer_remap		8975627	0					
ANR	8975704	ArgumentList	igs		8975627	1					
ANR	8975705	Argument	igs		8975627	0					
ANR	8975706	Identifier	igs		8975627	0					
ANR	8975707	Argument	gs_mapped_transfer		8975627	1					
ANR	8975708	Identifier	gs_mapped_transfer		8975627	0					
ANR	8975709	Argument	false		8975627	2					
ANR	8975710	Identifier	false		8975627	0					
ANR	8975711	PrimaryExpression	0		8975627	1					
ANR	8975712	ReturnStatement	return code ;	640:8:21171:21182	8975627	1	True				
ANR	8975713	Identifier	code		8975627	0					
ANR	8975714	ExpressionStatement	push_op_estack ( zcolor_reset_transfer )	641:4:21188:21225	8975627	7	True				
ANR	8975715	CallExpression	push_op_estack ( zcolor_reset_transfer )		8975627	0					
ANR	8975716	Callee	push_op_estack		8975627	0					
ANR	8975717	Identifier	push_op_estack		8975627	0					
ANR	8975718	ArgumentList	zcolor_reset_transfer		8975627	1					
ANR	8975719	Argument	zcolor_reset_transfer		8975627	0					
ANR	8975720	Identifier	zcolor_reset_transfer		8975627	0					
ANR	8975721	ExpressionStatement	pop ( 1 )	642:4:21231:21237	8975627	8	True				
ANR	8975722	CallExpression	pop ( 1 )		8975627	0					
ANR	8975723	Callee	pop		8975627	0					
ANR	8975724	Identifier	pop		8975627	0					
ANR	8975725	ArgumentList	1		8975627	1					
ANR	8975726	Argument	1		8975627	0					
ANR	8975727	PrimaryExpression	1		8975627	0					
ANR	8975728	ReturnStatement	"return zcolor_remap_one ( i_ctx_p , & istate -> transfer_procs . gray , igs -> set_transfer . gray , igs , zcolor_remap_one_finish ) ;"	643:4:21243:21477	8975627	9	True				
ANR	8975729	CallExpression	"zcolor_remap_one ( i_ctx_p , & istate -> transfer_procs . gray , igs -> set_transfer . gray , igs , zcolor_remap_one_finish )"		8975627	0					
ANR	8975730	Callee	zcolor_remap_one		8975627	0					
ANR	8975731	Identifier	zcolor_remap_one		8975627	0					
ANR	8975732	ArgumentList	i_ctx_p		8975627	1					
ANR	8975733	Argument	i_ctx_p		8975627	0					
ANR	8975734	Identifier	i_ctx_p		8975627	0					
ANR	8975735	Argument	& istate -> transfer_procs . gray		8975627	1					
ANR	8975736	UnaryOperationExpression	& istate -> transfer_procs . gray		8975627	0					
ANR	8975737	UnaryOperator	&		8975627	0					
ANR	8975738	MemberAccess	istate -> transfer_procs . gray		8975627	1					
ANR	8975739	PtrMemberAccess	istate -> transfer_procs		8975627	0					
ANR	8975740	Identifier	istate		8975627	0					
ANR	8975741	Identifier	transfer_procs		8975627	1					
ANR	8975742	Identifier	gray		8975627	1					
ANR	8975743	Argument	igs -> set_transfer . gray		8975627	2					
ANR	8975744	MemberAccess	igs -> set_transfer . gray		8975627	0					
ANR	8975745	PtrMemberAccess	igs -> set_transfer		8975627	0					
ANR	8975746	Identifier	igs		8975627	0					
ANR	8975747	Identifier	set_transfer		8975627	1					
ANR	8975748	Identifier	gray		8975627	1					
ANR	8975749	Argument	igs		8975627	3					
ANR	8975750	Identifier	igs		8975627	0					
ANR	8975751	Argument	zcolor_remap_one_finish		8975627	4					
ANR	8975752	Identifier	zcolor_remap_one_finish		8975627	0					
ANR	8975753	ReturnType	static int		8975627	1					
ANR	8975754	Identifier	zsettransfer		8975627	2					
ANR	8975755	ParameterList	i_ctx_t * i_ctx_p		8975627	3					
ANR	8975756	Parameter	i_ctx_t * i_ctx_p	627:13:20758:20774	8975627	0	True				
ANR	8975757	ParameterType	i_ctx_t *		8975627	0					
ANR	8975758	Identifier	i_ctx_p		8975627	1					
ANR	8975759	CFGEntryNode	ENTRY		8975627		True				
ANR	8975760	CFGExitNode	EXIT		8975627		True				
ANR	8975761	Symbol	zcolor_reset_transfer		8975627						
ANR	8975762	Symbol	* igs		8975627						
ANR	8975763	Symbol	zcolor_remap_one_ostack		8975627						
ANR	8975764	Symbol	code		8975627						
ANR	8975765	Symbol	istate -> transfer_procs . gray		8975627						
ANR	8975766	Symbol	* op		8975627						
ANR	8975767	Symbol	zcolor_remap_one_finish		8975627						
ANR	8975768	Symbol	osp		8975627						
ANR	8975769	Symbol	* istate		8975627						
ANR	8975770	Symbol	& istate -> transfer_procs		8975627						
ANR	8975771	Symbol	istate -> transfer_procs . red		8975627						
ANR	8975772	Symbol	igs -> set_transfer . gray		8975627						
ANR	8975773	Symbol	igs		8975627						
ANR	8975774	Symbol	istate -> transfer_procs . blue		8975627						
ANR	8975775	Symbol	op		8975627						
ANR	8975776	Symbol	zcolor_remap_one_estack		8975627						
ANR	8975777	Symbol	istate -> transfer_procs		8975627						
ANR	8975778	Symbol	false		8975627						
ANR	8975779	Symbol	gs_settransfer_remap		8975627						
ANR	8975780	Symbol	gs_mapped_transfer		8975627						
ANR	8975781	Symbol	i_ctx_p		8975627						
ANR	8975782	Symbol	igs -> set_transfer		8975627						
ANR	8975783	Symbol	zcolor_remap_one		8975627						
ANR	8975784	Symbol	istate -> transfer_procs . green		8975627						
ANR	8975785	Symbol	istate		8975627						
ANR	8975786	Symbol	& istate -> transfer_procs . gray		8975627						
ANR	8975787	Function	zcolor_remap_one	659:0:21737:22748							
ANR	8975788	FunctionDef	"zcolor_remap_one (i_ctx_t * i_ctx_p , const ref * pproc , gx_transfer_map * pmap , const gs_gstate * pgs , op_proc_t finish_proc)"		8975787	0					
ANR	8975789	CompoundStatement		666:0:21921:22748	8975787	0					
ANR	8975790	IdentifierDeclStatement	os_ptr op ;	667:4:21927:21949	8975787	0	True				
ANR	8975791	IdentifierDecl	op		8975787	0					
ANR	8975792	IdentifierDeclType	os_ptr		8975787	0					
ANR	8975793	Identifier	op		8975787	1					
ANR	8975794	IfStatement	if ( r_size ( pproc ) == 0 )		8975787	1					
ANR	8975795	Condition	r_size ( pproc ) == 0	673:8:22079:22096	8975787	0	True				
ANR	8975796	EqualityExpression	r_size ( pproc ) == 0		8975787	0		==			
ANR	8975797	CallExpression	r_size ( pproc )		8975787	0					
ANR	8975798	Callee	r_size		8975787	0					
ANR	8975799	Identifier	r_size		8975787	0					
ANR	8975800	ArgumentList	pproc		8975787	1					
ANR	8975801	Argument	pproc		8975787	0					
ANR	8975802	Identifier	pproc		8975787	0					
ANR	8975803	PrimaryExpression	0		8975787	1					
ANR	8975804	CompoundStatement		8:28:177:177	8975787	1					
ANR	8975805	ExpressionStatement	gx_set_identity_transfer ( pmap )	674:8:22109:22139	8975787	0	True				
ANR	8975806	CallExpression	gx_set_identity_transfer ( pmap )		8975787	0					
ANR	8975807	Callee	gx_set_identity_transfer		8975787	0					
ANR	8975808	Identifier	gx_set_identity_transfer		8975787	0					
ANR	8975809	ArgumentList	pmap		8975787	1					
ANR	8975810	Argument	pmap		8975787	0					
ANR	8975811	Identifier	pmap		8975787	0					
ANR	8975812	ReturnStatement	return o_push_estack ;	680:8:22390:22410	8975787	1	True				
ANR	8975813	Identifier	o_push_estack		8975787	0					
ANR	8975814	ExpressionStatement	op = osp += 4	682:4:22422:22435	8975787	2	True				
ANR	8975815	AssignmentExpression	op = osp += 4		8975787	0		=			
ANR	8975816	Identifier	op		8975787	0					
ANR	8975817	AssignmentExpression	osp += 4		8975787	1		+=			
ANR	8975818	Identifier	osp		8975787	0					
ANR	8975819	PrimaryExpression	4		8975787	1					
ANR	8975820	ExpressionStatement	"make_real ( op - 3 , 0 )"	683:4:22441:22461	8975787	3	True				
ANR	8975821	CallExpression	"make_real ( op - 3 , 0 )"		8975787	0					
ANR	8975822	Callee	make_real		8975787	0					
ANR	8975823	Identifier	make_real		8975787	0					
ANR	8975824	ArgumentList	op - 3		8975787	1					
ANR	8975825	Argument	op - 3		8975787	0					
ANR	8975826	AdditiveExpression	op - 3		8975787	0		-			
ANR	8975827	Identifier	op		8975787	0					
ANR	8975828	PrimaryExpression	3		8975787	1					
ANR	8975829	Argument	0		8975787	1					
ANR	8975830	PrimaryExpression	0		8975787	0					
ANR	8975831	ExpressionStatement	"make_int ( op - 2 , transfer_map_size - 1 )"	684:4:22467:22506	8975787	4	True				
ANR	8975832	CallExpression	"make_int ( op - 2 , transfer_map_size - 1 )"		8975787	0					
ANR	8975833	Callee	make_int		8975787	0					
ANR	8975834	Identifier	make_int		8975787	0					
ANR	8975835	ArgumentList	op - 2		8975787	1					
ANR	8975836	Argument	op - 2		8975787	0					
ANR	8975837	AdditiveExpression	op - 2		8975787	0		-			
ANR	8975838	Identifier	op		8975787	0					
ANR	8975839	PrimaryExpression	2		8975787	1					
ANR	8975840	Argument	transfer_map_size - 1		8975787	1					
ANR	8975841	AdditiveExpression	transfer_map_size - 1		8975787	0		-			
ANR	8975842	Identifier	transfer_map_size		8975787	0					
ANR	8975843	PrimaryExpression	1		8975787	1					
ANR	8975844	ExpressionStatement	"make_real ( op - 1 , 1 )"	685:4:22512:22532	8975787	5	True				
ANR	8975845	CallExpression	"make_real ( op - 1 , 1 )"		8975787	0					
ANR	8975846	Callee	make_real		8975787	0					
ANR	8975847	Identifier	make_real		8975787	0					
ANR	8975848	ArgumentList	op - 1		8975787	1					
ANR	8975849	Argument	op - 1		8975787	0					
ANR	8975850	AdditiveExpression	op - 1		8975787	0		-			
ANR	8975851	Identifier	op		8975787	0					
ANR	8975852	PrimaryExpression	1		8975787	1					
ANR	8975853	Argument	1		8975787	1					
ANR	8975854	PrimaryExpression	1		8975787	0					
ANR	8975855	ExpressionStatement	* op = * pproc	686:4:22538:22550	8975787	6	True				
ANR	8975856	AssignmentExpression	* op = * pproc		8975787	0		=			
ANR	8975857	UnaryOperationExpression	* op		8975787	0					
ANR	8975858	UnaryOperator	*		8975787	0					
ANR	8975859	Identifier	op		8975787	1					
ANR	8975860	UnaryOperationExpression	* pproc		8975787	1					
ANR	8975861	UnaryOperator	*		8975787	0					
ANR	8975862	Identifier	pproc		8975787	1					
ANR	8975863	ExpressionStatement	++ esp	687:4:22556:22561	8975787	7	True				
ANR	8975864	UnaryExpression	++ esp		8975787	0					
ANR	8975865	IncDec	++		8975787	0					
ANR	8975866	Identifier	esp		8975787	1					
ANR	8975867	ExpressionStatement	"make_struct ( esp , imemory_space ( ( gs_ref_memory_t * ) pgs -> memory ) , pmap )"	688:4:22567:22653	8975787	8	True				
ANR	8975868	CallExpression	"make_struct ( esp , imemory_space ( ( gs_ref_memory_t * ) pgs -> memory ) , pmap )"		8975787	0					
ANR	8975869	Callee	make_struct		8975787	0					
ANR	8975870	Identifier	make_struct		8975787	0					
ANR	8975871	ArgumentList	esp		8975787	1					
ANR	8975872	Argument	esp		8975787	0					
ANR	8975873	Identifier	esp		8975787	0					
ANR	8975874	Argument	imemory_space ( ( gs_ref_memory_t * ) pgs -> memory )		8975787	1					
ANR	8975875	CallExpression	imemory_space ( ( gs_ref_memory_t * ) pgs -> memory )		8975787	0					
ANR	8975876	Callee	imemory_space		8975787	0					
ANR	8975877	Identifier	imemory_space		8975787	0					
ANR	8975878	ArgumentList	( gs_ref_memory_t * ) pgs -> memory		8975787	1					
ANR	8975879	Argument	( gs_ref_memory_t * ) pgs -> memory		8975787	0					
ANR	8975880	CastExpression	( gs_ref_memory_t * ) pgs -> memory		8975787	0					
ANR	8975881	CastTarget	gs_ref_memory_t *		8975787	0					
ANR	8975882	PtrMemberAccess	pgs -> memory		8975787	1					
ANR	8975883	Identifier	pgs		8975787	0					
ANR	8975884	Identifier	memory		8975787	1					
ANR	8975885	Argument	pmap		8975787	2					
ANR	8975886	Identifier	pmap		8975787	0					
ANR	8975887	ExpressionStatement	push_op_estack ( finish_proc )	690:4:22659:22686	8975787	9	True				
ANR	8975888	CallExpression	push_op_estack ( finish_proc )		8975787	0					
ANR	8975889	Callee	push_op_estack		8975787	0					
ANR	8975890	Identifier	push_op_estack		8975787	0					
ANR	8975891	ArgumentList	finish_proc		8975787	1					
ANR	8975892	Argument	finish_proc		8975787	0					
ANR	8975893	Identifier	finish_proc		8975787	0					
ANR	8975894	ExpressionStatement	push_op_estack ( zfor_samples )	691:4:22692:22720	8975787	10	True				
ANR	8975895	CallExpression	push_op_estack ( zfor_samples )		8975787	0					
ANR	8975896	Callee	push_op_estack		8975787	0					
ANR	8975897	Identifier	push_op_estack		8975787	0					
ANR	8975898	ArgumentList	zfor_samples		8975787	1					
ANR	8975899	Argument	zfor_samples		8975787	0					
ANR	8975900	Identifier	zfor_samples		8975787	0					
ANR	8975901	ReturnStatement	return o_push_estack ;	692:4:22726:22746	8975787	11	True				
ANR	8975902	Identifier	o_push_estack		8975787	0					
ANR	8975903	ReturnType	int		8975787	1					
ANR	8975904	Identifier	zcolor_remap_one		8975787	2					
ANR	8975905	ParameterList	"i_ctx_t * i_ctx_p , const ref * pproc , gx_transfer_map * pmap , const gs_gstate * pgs , op_proc_t finish_proc"		8975787	3					
ANR	8975906	Parameter	i_ctx_t * i_ctx_p	661:4:21763:21789	8975787	0	True				
ANR	8975907	ParameterType	i_ctx_t *		8975787	0					
ANR	8975908	Identifier	i_ctx_p		8975787	1					
ANR	8975909	Parameter	const ref * pproc	662:4:21796:21820	8975787	1	True				
ANR	8975910	ParameterType	const ref *		8975787	0					
ANR	8975911	Identifier	pproc		8975787	1					
ANR	8975912	Parameter	gx_transfer_map * pmap	663:4:21827:21850	8975787	2	True				
ANR	8975913	ParameterType	gx_transfer_map *		8975787	0					
ANR	8975914	Identifier	pmap		8975787	1					
ANR	8975915	Parameter	const gs_gstate * pgs	664:4:21857:21880	8975787	3	True				
ANR	8975916	ParameterType	const gs_gstate *		8975787	0					
ANR	8975917	Identifier	pgs		8975787	1					
ANR	8975918	Parameter	op_proc_t finish_proc	665:4:21887:21917	8975787	4	True				
ANR	8975919	ParameterType	op_proc_t		8975787	0					
ANR	8975920	Identifier	finish_proc		8975787	1					
ANR	8975921	CFGEntryNode	ENTRY		8975787		True				
ANR	8975922	CFGExitNode	EXIT		8975787		True				
ANR	8975923	Symbol	op		8975787						
ANR	8975924	Symbol	esp		8975787						
ANR	8975925	Symbol	* op		8975787						
ANR	8975926	Symbol	* pgs		8975787						
ANR	8975927	Symbol	zfor_samples		8975787						
ANR	8975928	Symbol	osp		8975787						
ANR	8975929	Symbol	* pproc		8975787						
ANR	8975930	Symbol	i_ctx_p		8975787						
ANR	8975931	Symbol	finish_proc		8975787						
ANR	8975932	Symbol	r_size		8975787						
ANR	8975933	Symbol	pproc		8975787						
ANR	8975934	Symbol	pmap		8975787						
ANR	8975935	Symbol	transfer_map_size		8975787						
ANR	8975936	Symbol	imemory_space		8975787						
ANR	8975937	Symbol	pgs		8975787						
ANR	8975938	Symbol	pgs -> memory		8975787						
ANR	8975939	Symbol	o_push_estack		8975787						
ANR	8975940	Function	zcolor_remap_one_store	696:0:22800:23546							
ANR	8975941	FunctionDef	"zcolor_remap_one_store (i_ctx_t * i_ctx_p , double min_value)"		8975940	0					
ANR	8975942	CompoundStatement		698:0:22870:23546	8975940	0					
ANR	8975943	IdentifierDeclStatement	int i ;	699:4:22876:22881	8975940	0	True				
ANR	8975944	IdentifierDecl	i		8975940	0					
ANR	8975945	IdentifierDeclType	int		8975940	0					
ANR	8975946	Identifier	i		8975940	1					
ANR	8975947	IdentifierDeclStatement	"gx_transfer_map * pmap = r_ptr ( esp , gx_transfer_map ) ;"	700:4:22887:22938	8975940	1	True				
ANR	8975948	IdentifierDecl	"* pmap = r_ptr ( esp , gx_transfer_map )"		8975940	0					
ANR	8975949	IdentifierDeclType	gx_transfer_map *		8975940	0					
ANR	8975950	Identifier	pmap		8975940	1					
ANR	8975951	AssignmentExpression	"* pmap = r_ptr ( esp , gx_transfer_map )"		8975940	2		=			
ANR	8975952	Identifier	pmap		8975940	0					
ANR	8975953	CallExpression	"r_ptr ( esp , gx_transfer_map )"		8975940	1					
ANR	8975954	Callee	r_ptr		8975940	0					
ANR	8975955	Identifier	r_ptr		8975940	0					
ANR	8975956	ArgumentList	esp		8975940	1					
ANR	8975957	Argument	esp		8975940	0					
ANR	8975958	Identifier	esp		8975940	0					
ANR	8975959	Argument	gx_transfer_map		8975940	1					
ANR	8975960	Identifier	gx_transfer_map		8975940	0					
ANR	8975961	IfStatement	if ( ref_stack_count ( & o_stack ) < transfer_map_size )		8975940	2					
ANR	8975962	Condition	ref_stack_count ( & o_stack ) < transfer_map_size	702:8:22949:22993	8975940	0	True				
ANR	8975963	RelationalExpression	ref_stack_count ( & o_stack ) < transfer_map_size		8975940	0		<			
ANR	8975964	CallExpression	ref_stack_count ( & o_stack )		8975940	0					
ANR	8975965	Callee	ref_stack_count		8975940	0					
ANR	8975966	Identifier	ref_stack_count		8975940	0					
ANR	8975967	ArgumentList	& o_stack		8975940	1					
ANR	8975968	Argument	& o_stack		8975940	0					
ANR	8975969	UnaryOperationExpression	& o_stack		8975940	0					
ANR	8975970	UnaryOperator	&		8975940	0					
ANR	8975971	Identifier	o_stack		8975940	1					
ANR	8975972	Identifier	transfer_map_size		8975940	1					
ANR	8975973	ExpressionStatement	return_error ( gs_error_stackunderflow )	703:8:23004:23041	8975940	1	True				
ANR	8975974	CallExpression	return_error ( gs_error_stackunderflow )		8975940	0					
ANR	8975975	Callee	return_error		8975940	0					
ANR	8975976	Identifier	return_error		8975940	0					
ANR	8975977	ArgumentList	gs_error_stackunderflow		8975940	1					
ANR	8975978	Argument	gs_error_stackunderflow		8975940	0					
ANR	8975979	Identifier	gs_error_stackunderflow		8975940	0					
ANR	8975980	ForStatement	for ( i = 0 ; i < transfer_map_size ; i ++ )		8975940	3					
ANR	8975981	ForInit	i = 0 ;	704:9:23052:23057	8975940	0	True				
ANR	8975982	AssignmentExpression	i = 0		8975940	0		=			
ANR	8975983	Identifier	i		8975940	0					
ANR	8975984	PrimaryExpression	0		8975940	1					
ANR	8975985	Condition	i < transfer_map_size	704:16:23059:23079	8975940	1	True				
ANR	8975986	RelationalExpression	i < transfer_map_size		8975940	0		<			
ANR	8975987	Identifier	i		8975940	0					
ANR	8975988	Identifier	transfer_map_size		8975940	1					
ANR	8975989	PostIncDecOperationExpression	i ++	704:39:23082:23084	8975940	2	True				
ANR	8975990	Identifier	i		8975940	0					
ANR	8975991	IncDec	++		8975940	1					
ANR	8975992	CompoundStatement		9:8:244:358	8975940	3					
ANR	8975993	IdentifierDeclStatement	double v ;	705:8:23097:23105	8975940	0	True				
ANR	8975994	IdentifierDecl	v		8975940	0					
ANR	8975995	IdentifierDeclType	double		8975940	0					
ANR	8975996	Identifier	v		8975940	1					
ANR	8975997	IdentifierDeclStatement	"int code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v ) ;"	706:8:23115:23229	8975940	1	True				
ANR	8975998	IdentifierDecl	"code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		8975940	0					
ANR	8975999	IdentifierDeclType	int		8975940	0					
ANR	8976000	Identifier	code		8975940	1					
ANR	8976001	AssignmentExpression	"code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		8975940	2		=			
ANR	8976002	Identifier	code		8975940	0					
ANR	8976003	CallExpression	"real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		8975940	1					
ANR	8976004	Callee	real_param		8975940	0					
ANR	8976005	Identifier	real_param		8975940	0					
ANR	8976006	ArgumentList	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		8975940	1					
ANR	8976007	Argument	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		8975940	0					
ANR	8976008	CallExpression	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		8975940	0					
ANR	8976009	Callee	ref_stack_index		8975940	0					
ANR	8976010	Identifier	ref_stack_index		8975940	0					
ANR	8976011	ArgumentList	& o_stack		8975940	1					
ANR	8976012	Argument	& o_stack		8975940	0					
ANR	8976013	UnaryOperationExpression	& o_stack		8975940	0					
ANR	8976014	UnaryOperator	&		8975940	0					
ANR	8976015	Identifier	o_stack		8975940	1					
ANR	8976016	Argument	transfer_map_size - 1 - i		8975940	1					
ANR	8976017	AdditiveExpression	transfer_map_size - 1 - i		8975940	0		-			
ANR	8976018	Identifier	transfer_map_size		8975940	0					
ANR	8976019	AdditiveExpression	1 - i		8975940	1		-			
ANR	8976020	PrimaryExpression	1		8975940	0					
ANR	8976021	Identifier	i		8975940	1					
ANR	8976022	Argument	& v		8975940	1					
ANR	8976023	UnaryOperationExpression	& v		8975940	0					
ANR	8976024	UnaryOperator	&		8975940	0					
ANR	8976025	Identifier	v		8975940	1					
ANR	8976026	IfStatement	if ( code < 0 )		8975940	2					
ANR	8976027	Condition	code < 0	710:12:23244:23251	8975940	0	True				
ANR	8976028	RelationalExpression	code < 0		8975940	0		<			
ANR	8976029	Identifier	code		8975940	0					
ANR	8976030	PrimaryExpression	0		8975940	1					
ANR	8976031	ReturnStatement	return code ;	711:12:23266:23277	8975940	1	True				
ANR	8976032	Identifier	code		8975940	0					
ANR	8976033	ExpressionStatement	pmap -> values [ i ] = ( v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v ) )	712:8:23287:23418	8975940	3	True				
ANR	8976034	AssignmentExpression	pmap -> values [ i ] = ( v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v ) )		8975940	0		=			
ANR	8976035	ArrayIndexing	pmap -> values [ i ]		8975940	0					
ANR	8976036	PtrMemberAccess	pmap -> values		8975940	0					
ANR	8976037	Identifier	pmap		8975940	0					
ANR	8976038	Identifier	values		8975940	1					
ANR	8976039	Identifier	i		8975940	1					
ANR	8976040	ConditionalExpression	v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v )		8975940	1					
ANR	8976041	Condition	v < min_value		8975940	0					
ANR	8976042	RelationalExpression	v < min_value		8975940	0		<			
ANR	8976043	Identifier	v		8975940	0					
ANR	8976044	Identifier	min_value		8975940	1					
ANR	8976045	CallExpression	float2frac ( min_value )		8975940	1					
ANR	8976046	Callee	float2frac		8975940	0					
ANR	8976047	Identifier	float2frac		8975940	0					
ANR	8976048	ArgumentList	min_value		8975940	1					
ANR	8976049	Argument	min_value		8975940	0					
ANR	8976050	Identifier	min_value		8975940	0					
ANR	8976051	ConditionalExpression	v >= 1.0 ? frac_1 : float2frac ( v )		8975940	2					
ANR	8976052	Condition	v >= 1.0		8975940	0					
ANR	8976053	RelationalExpression	v >= 1.0		8975940	0		>=			
ANR	8976054	Identifier	v		8975940	0					
ANR	8976055	PrimaryExpression	1.0		8975940	1					
ANR	8976056	Identifier	frac_1		8975940	1					
ANR	8976057	CallExpression	float2frac ( v )		8975940	2					
ANR	8976058	Callee	float2frac		8975940	0					
ANR	8976059	Identifier	float2frac		8975940	0					
ANR	8976060	ArgumentList	v		8975940	1					
ANR	8976061	Argument	v		8975940	0					
ANR	8976062	Identifier	v		8975940	0					
ANR	8976063	ExpressionStatement	"ref_stack_pop ( & o_stack , transfer_map_size )"	717:4:23430:23472	8975940	4	True				
ANR	8976064	CallExpression	"ref_stack_pop ( & o_stack , transfer_map_size )"		8975940	0					
ANR	8976065	Callee	ref_stack_pop		8975940	0					
ANR	8976066	Identifier	ref_stack_pop		8975940	0					
ANR	8976067	ArgumentList	& o_stack		8975940	1					
ANR	8976068	Argument	& o_stack		8975940	0					
ANR	8976069	UnaryOperationExpression	& o_stack		8975940	0					
ANR	8976070	UnaryOperator	&		8975940	0					
ANR	8976071	Identifier	o_stack		8975940	1					
ANR	8976072	Argument	transfer_map_size		8975940	1					
ANR	8976073	Identifier	transfer_map_size		8975940	0					
ANR	8976074	ExpressionStatement	esp --	718:4:23478:23483	8975940	5	True				
ANR	8976075	PostIncDecOperationExpression	esp --		8975940	0					
ANR	8976076	Identifier	esp		8975940	0					
ANR	8976077	IncDec	--		8975940	1					
ANR	8976078	ReturnStatement	return o_pop_estack ;	719:4:23525:23544	8975940	6	True				
ANR	8976079	Identifier	o_pop_estack		8975940	0					
ANR	8976080	ReturnType	static int		8975940	1					
ANR	8976081	Identifier	zcolor_remap_one_store		8975940	2					
ANR	8976082	ParameterList	"i_ctx_t * i_ctx_p , double min_value"		8975940	3					
ANR	8976083	Parameter	i_ctx_t * i_ctx_p	697:23:22834:22849	8975940	0	True				
ANR	8976084	ParameterType	i_ctx_t *		8975940	0					
ANR	8976085	Identifier	i_ctx_p		8975940	1					
ANR	8976086	Parameter	double min_value	697:41:22852:22867	8975940	1	True				
ANR	8976087	ParameterType	double		8975940	0					
ANR	8976088	Identifier	min_value		8975940	1					
ANR	8976089	CFGEntryNode	ENTRY		8975940		True				
ANR	8976090	CFGExitNode	EXIT		8975940		True				
ANR	8976091	Symbol	ref_stack_index		8975940						
ANR	8976092	Symbol	* pmap		8975940						
ANR	8976093	Symbol	frac_1		8975940						
ANR	8976094	Symbol	esp		8975940						
ANR	8976095	Symbol	code		8975940						
ANR	8976096	Symbol	* * pmap		8975940						
ANR	8976097	Symbol	* pmap -> values		8975940						
ANR	8976098	Symbol	pmap -> values		8975940						
ANR	8976099	Symbol	float2frac		8975940						
ANR	8976100	Symbol	i		8975940						
ANR	8976101	Symbol	gx_transfer_map		8975940						
ANR	8976102	Symbol	o_pop_estack		8975940						
ANR	8976103	Symbol	min_value		8975940						
ANR	8976104	Symbol	r_ptr		8975940						
ANR	8976105	Symbol	* i		8975940						
ANR	8976106	Symbol	gs_error_stackunderflow		8975940						
ANR	8976107	Symbol	i_ctx_p		8975940						
ANR	8976108	Symbol	& o_stack		8975940						
ANR	8976109	Symbol	v		8975940						
ANR	8976110	Symbol	ref_stack_count		8975940						
ANR	8976111	Symbol	real_param		8975940						
ANR	8976112	Symbol	pmap		8975940						
ANR	8976113	Symbol	transfer_map_size		8975940						
ANR	8976114	Symbol	& v		8975940						
ANR	8976115	Function	zcolor_remap_one_finish	721:0:23548:23645							
ANR	8976116	FunctionDef	zcolor_remap_one_finish (i_ctx_t * i_ctx_p)		8976115	0					
ANR	8976117	CompoundStatement		723:0:23594:23645	8976115	0					
ANR	8976118	ReturnStatement	"return zcolor_remap_one_store ( i_ctx_p , 0.0 ) ;"	724:4:23600:23643	8976115	0	True				
ANR	8976119	CallExpression	"zcolor_remap_one_store ( i_ctx_p , 0.0 )"		8976115	0					
ANR	8976120	Callee	zcolor_remap_one_store		8976115	0					
ANR	8976121	Identifier	zcolor_remap_one_store		8976115	0					
ANR	8976122	ArgumentList	i_ctx_p		8976115	1					
ANR	8976123	Argument	i_ctx_p		8976115	0					
ANR	8976124	Identifier	i_ctx_p		8976115	0					
ANR	8976125	Argument	0.0		8976115	1					
ANR	8976126	PrimaryExpression	0.0		8976115	0					
ANR	8976127	ReturnType	int		8976115	1					
ANR	8976128	Identifier	zcolor_remap_one_finish		8976115	2					
ANR	8976129	ParameterList	i_ctx_t * i_ctx_p		8976115	3					
ANR	8976130	Parameter	i_ctx_t * i_ctx_p	722:24:23576:23591	8976115	0	True				
ANR	8976131	ParameterType	i_ctx_t *		8976115	0					
ANR	8976132	Identifier	i_ctx_p		8976115	1					
ANR	8976133	CFGEntryNode	ENTRY		8976115		True				
ANR	8976134	CFGExitNode	EXIT		8976115		True				
ANR	8976135	Symbol	zcolor_remap_one_store		8976115						
ANR	8976136	Symbol	i_ctx_p		8976115						
ANR	8976137	Function	zcolor_remap_one_signed_finish	726:0:23647:23752							
ANR	8976138	FunctionDef	zcolor_remap_one_signed_finish (i_ctx_t * i_ctx_p)		8976137	0					
ANR	8976139	CompoundStatement		728:0:23700:23752	8976137	0					
ANR	8976140	ReturnStatement	"return zcolor_remap_one_store ( i_ctx_p , - 1.0 ) ;"	729:4:23706:23750	8976137	0	True				
ANR	8976141	CallExpression	"zcolor_remap_one_store ( i_ctx_p , - 1.0 )"		8976137	0					
ANR	8976142	Callee	zcolor_remap_one_store		8976137	0					
ANR	8976143	Identifier	zcolor_remap_one_store		8976137	0					
ANR	8976144	ArgumentList	i_ctx_p		8976137	1					
ANR	8976145	Argument	i_ctx_p		8976137	0					
ANR	8976146	Identifier	i_ctx_p		8976137	0					
ANR	8976147	Argument	- 1.0		8976137	1					
ANR	8976148	UnaryOperationExpression	- 1.0		8976137	0					
ANR	8976149	UnaryOperator	-		8976137	0					
ANR	8976150	PrimaryExpression	1.0		8976137	1					
ANR	8976151	ReturnType	int		8976137	1					
ANR	8976152	Identifier	zcolor_remap_one_signed_finish		8976137	2					
ANR	8976153	ParameterList	i_ctx_t * i_ctx_p		8976137	3					
ANR	8976154	Parameter	i_ctx_t * i_ctx_p	727:31:23682:23697	8976137	0	True				
ANR	8976155	ParameterType	i_ctx_t *		8976137	0					
ANR	8976156	Identifier	i_ctx_p		8976137	1					
ANR	8976157	CFGEntryNode	ENTRY		8976137		True				
ANR	8976158	CFGExitNode	EXIT		8976137		True				
ANR	8976159	Symbol	zcolor_remap_one_store		8976137						
ANR	8976160	Symbol	i_ctx_p		8976137						
ANR	8976161	Function	zcolor_reset_transfer	734:0:23849:23971							
ANR	8976162	FunctionDef	zcolor_reset_transfer (i_ctx_t * i_ctx_p)		8976161	0					
ANR	8976163	CompoundStatement		736:0:23893:23971	8976161	0					
ANR	8976164	ExpressionStatement	gx_set_effective_transfer ( igs )	737:4:23899:23929	8976161	0	True				
ANR	8976165	CallExpression	gx_set_effective_transfer ( igs )		8976161	0					
ANR	8976166	Callee	gx_set_effective_transfer		8976161	0					
ANR	8976167	Identifier	gx_set_effective_transfer		8976161	0					
ANR	8976168	ArgumentList	igs		8976161	1					
ANR	8976169	Argument	igs		8976161	0					
ANR	8976170	Identifier	igs		8976161	0					
ANR	8976171	ReturnStatement	return zcolor_remap_color ( i_ctx_p ) ;	738:4:23935:23969	8976161	1	True				
ANR	8976172	CallExpression	zcolor_remap_color ( i_ctx_p )		8976161	0					
ANR	8976173	Callee	zcolor_remap_color		8976161	0					
ANR	8976174	Identifier	zcolor_remap_color		8976161	0					
ANR	8976175	ArgumentList	i_ctx_p		8976161	1					
ANR	8976176	Argument	i_ctx_p		8976161	0					
ANR	8976177	Identifier	i_ctx_p		8976161	0					
ANR	8976178	ReturnType	int		8976161	1					
ANR	8976179	Identifier	zcolor_reset_transfer		8976161	2					
ANR	8976180	ParameterList	i_ctx_t * i_ctx_p		8976161	3					
ANR	8976181	Parameter	i_ctx_t * i_ctx_p	735:22:23875:23890	8976161	0	True				
ANR	8976182	ParameterType	i_ctx_t *		8976161	0					
ANR	8976183	Identifier	i_ctx_p		8976161	1					
ANR	8976184	CFGEntryNode	ENTRY		8976161		True				
ANR	8976185	CFGExitNode	EXIT		8976161		True				
ANR	8976186	Symbol	igs		8976161						
ANR	8976187	Symbol	i_ctx_p		8976161						
ANR	8976188	Symbol	zcolor_remap_color		8976161						
ANR	8976189	Function	zcolor_remap_color	740:0:23973:24189							
ANR	8976190	FunctionDef	zcolor_remap_color (i_ctx_t * i_ctx_p)		8976189	0					
ANR	8976191	CompoundStatement		742:0:24014:24189	8976189	0					
ANR	8976192	ExpressionStatement	gs_swapcolors ( igs )	744:4:24073:24091	8976189	0	True				
ANR	8976193	CallExpression	gs_swapcolors ( igs )		8976189	0					
ANR	8976194	Callee	gs_swapcolors		8976189	0					
ANR	8976195	Identifier	gs_swapcolors		8976189	0					
ANR	8976196	ArgumentList	igs		8976189	1					
ANR	8976197	Argument	igs		8976189	0					
ANR	8976198	Identifier	igs		8976189	0					
ANR	8976199	ExpressionStatement	gx_unset_dev_color ( igs )	745:4:24097:24120	8976189	1	True				
ANR	8976200	CallExpression	gx_unset_dev_color ( igs )		8976189	0					
ANR	8976201	Callee	gx_unset_dev_color		8976189	0					
ANR	8976202	Identifier	gx_unset_dev_color		8976189	0					
ANR	8976203	ArgumentList	igs		8976189	1					
ANR	8976204	Argument	igs		8976189	0					
ANR	8976205	Identifier	igs		8976189	0					
ANR	8976206	ExpressionStatement	gs_swapcolors ( igs )	746:4:24126:24144	8976189	2	True				
ANR	8976207	CallExpression	gs_swapcolors ( igs )		8976189	0					
ANR	8976208	Callee	gs_swapcolors		8976189	0					
ANR	8976209	Identifier	gs_swapcolors		8976189	0					
ANR	8976210	ArgumentList	igs		8976189	1					
ANR	8976211	Argument	igs		8976189	0					
ANR	8976212	Identifier	igs		8976189	0					
ANR	8976213	ExpressionStatement	gx_unset_dev_color ( igs )	747:4:24150:24173	8976189	3	True				
ANR	8976214	CallExpression	gx_unset_dev_color ( igs )		8976189	0					
ANR	8976215	Callee	gx_unset_dev_color		8976189	0					
ANR	8976216	Identifier	gx_unset_dev_color		8976189	0					
ANR	8976217	ArgumentList	igs		8976189	1					
ANR	8976218	Argument	igs		8976189	0					
ANR	8976219	Identifier	igs		8976189	0					
ANR	8976220	ReturnStatement	return 0 ;	748:4:24179:24187	8976189	4	True				
ANR	8976221	PrimaryExpression	0		8976189	0					
ANR	8976222	ReturnType	int		8976189	1					
ANR	8976223	Identifier	zcolor_remap_color		8976189	2					
ANR	8976224	ParameterList	i_ctx_t * i_ctx_p		8976189	3					
ANR	8976225	Parameter	i_ctx_t * i_ctx_p	741:19:23996:24011	8976189	0	True				
ANR	8976226	ParameterType	i_ctx_t *		8976189	0					
ANR	8976227	Identifier	i_ctx_p		8976189	1					
ANR	8976228	CFGEntryNode	ENTRY		8976189		True				
ANR	8976229	CFGExitNode	EXIT		8976189		True				
ANR	8976230	Symbol	igs		8976189						
ANR	8976231	Symbol	i_ctx_p		8976189						
ANR	8976232	Function	rgb2hsb	773:0:24782:26080							
ANR	8976233	FunctionDef	rgb2hsb (float * RGB)		8976232	0					
ANR	8976234	CompoundStatement		774:0:24813:26080	8976232	0					
ANR	8976235	IdentifierDeclStatement	"float HSB [ 3 ] , v , diff ;"	775:4:24819:24840	8976232	0	True				
ANR	8976236	IdentifierDecl	HSB [ 3 ]		8976232	0					
ANR	8976237	IdentifierDeclType	float [ 3 ]		8976232	0					
ANR	8976238	Identifier	HSB		8976232	1					
ANR	8976239	PrimaryExpression	3		8976232	2					
ANR	8976240	IdentifierDecl	v		8976232	1					
ANR	8976241	IdentifierDeclType	float		8976232	0					
ANR	8976242	Identifier	v		8976232	1					
ANR	8976243	IdentifierDecl	diff		8976232	2					
ANR	8976244	IdentifierDeclType	float		8976232	0					
ANR	8976245	Identifier	diff		8976232	1					
ANR	8976246	IdentifierDeclStatement	"int i , j = 0 ;"	776:4:24846:24856	8976232	1	True				
ANR	8976247	IdentifierDecl	i		8976232	0					
ANR	8976248	IdentifierDeclType	int		8976232	0					
ANR	8976249	Identifier	i		8976232	1					
ANR	8976250	IdentifierDecl	j = 0		8976232	1					
ANR	8976251	IdentifierDeclType	int		8976232	0					
ANR	8976252	Identifier	j		8976232	1					
ANR	8976253	AssignmentExpression	j = 0		8976232	2		=			
ANR	8976254	Identifier	j		8976232	0					
ANR	8976255	PrimaryExpression	0		8976232	1					
ANR	8976256	ExpressionStatement	v = 1.0	778:4:24863:24870	8976232	2	True				
ANR	8976257	AssignmentExpression	v = 1.0		8976232	0		=			
ANR	8976258	Identifier	v		8976232	0					
ANR	8976259	PrimaryExpression	1.0		8976232	1					
ANR	8976260	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8976232	3					
ANR	8976261	ForInit	i = 0 ;	779:9:24881:24884	8976232	0	True				
ANR	8976262	AssignmentExpression	i = 0		8976232	0		=			
ANR	8976263	Identifier	i		8976232	0					
ANR	8976264	PrimaryExpression	0		8976232	1					
ANR	8976265	Condition	i < 3	779:13:24885:24887	8976232	1	True				
ANR	8976266	RelationalExpression	i < 3		8976232	0		<			
ANR	8976267	Identifier	i		8976232	0					
ANR	8976268	PrimaryExpression	3		8976232	1					
ANR	8976269	PostIncDecOperationExpression	i ++	779:17:24889:24891	8976232	2	True				
ANR	8976270	Identifier	i		8976232	0					
ANR	8976271	IncDec	++		8976232	1					
ANR	8976272	ExpressionStatement	HSB [ i ] = 0.0	780:8:24902:24914	8976232	3	True				
ANR	8976273	AssignmentExpression	HSB [ i ] = 0.0		8976232	0		=			
ANR	8976274	ArrayIndexing	HSB [ i ]		8976232	0					
ANR	8976275	Identifier	HSB		8976232	0					
ANR	8976276	Identifier	i		8976232	1					
ANR	8976277	PrimaryExpression	0.0		8976232	1					
ANR	8976278	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8976232	4					
ANR	8976279	ForInit	i = 0 ;	781:9:24925:24928	8976232	0	True				
ANR	8976280	AssignmentExpression	i = 0		8976232	0		=			
ANR	8976281	Identifier	i		8976232	0					
ANR	8976282	PrimaryExpression	0		8976232	1					
ANR	8976283	Condition	i < 3	781:13:24929:24931	8976232	1	True				
ANR	8976284	RelationalExpression	i < 3		8976232	0		<			
ANR	8976285	Identifier	i		8976232	0					
ANR	8976286	PrimaryExpression	3		8976232	1					
ANR	8976287	PostIncDecOperationExpression	i ++	781:17:24933:24935	8976232	2	True				
ANR	8976288	Identifier	i		8976232	0					
ANR	8976289	IncDec	++		8976232	1					
ANR	8976290	CompoundStatement		8:22:124:124	8976232	3					
ANR	8976291	IfStatement	if ( RGB [ i ] > HSB [ 2 ] )		8976232	0					
ANR	8976292	Condition	RGB [ i ] > HSB [ 2 ]	782:12:24952:24966	8976232	0	True				
ANR	8976293	RelationalExpression	RGB [ i ] > HSB [ 2 ]		8976232	0		>			
ANR	8976294	ArrayIndexing	RGB [ i ]		8976232	0					
ANR	8976295	Identifier	RGB		8976232	0					
ANR	8976296	Identifier	i		8976232	1					
ANR	8976297	ArrayIndexing	HSB [ 2 ]		8976232	1					
ANR	8976298	Identifier	HSB		8976232	0					
ANR	8976299	PrimaryExpression	2		8976232	1					
ANR	8976300	CompoundStatement		9:29:155:155	8976232	1					
ANR	8976301	ExpressionStatement	HSB [ 2 ] = RGB [ i ]	783:12:24983:24998	8976232	0	True				
ANR	8976302	AssignmentExpression	HSB [ 2 ] = RGB [ i ]		8976232	0		=			
ANR	8976303	ArrayIndexing	HSB [ 2 ]		8976232	0					
ANR	8976304	Identifier	HSB		8976232	0					
ANR	8976305	PrimaryExpression	2		8976232	1					
ANR	8976306	ArrayIndexing	RGB [ i ]		8976232	1					
ANR	8976307	Identifier	RGB		8976232	0					
ANR	8976308	Identifier	i		8976232	1					
ANR	8976309	ExpressionStatement	j = i	784:12:25012:25017	8976232	1	True				
ANR	8976310	AssignmentExpression	j = i		8976232	0		=			
ANR	8976311	Identifier	j		8976232	0					
ANR	8976312	Identifier	i		8976232	1					
ANR	8976313	IfStatement	if ( RGB [ i ] < v )		8976232	1					
ANR	8976314	Condition	RGB [ i ] < v	786:12:25041:25050	8976232	0	True				
ANR	8976315	RelationalExpression	RGB [ i ] < v		8976232	0		<			
ANR	8976316	ArrayIndexing	RGB [ i ]		8976232	0					
ANR	8976317	Identifier	RGB		8976232	0					
ANR	8976318	Identifier	i		8976232	1					
ANR	8976319	Identifier	v		8976232	1					
ANR	8976320	ExpressionStatement	v = RGB [ i ]	787:12:25065:25075	8976232	1	True				
ANR	8976321	AssignmentExpression	v = RGB [ i ]		8976232	0		=			
ANR	8976322	Identifier	v		8976232	0					
ANR	8976323	ArrayIndexing	RGB [ i ]		8976232	1					
ANR	8976324	Identifier	RGB		8976232	0					
ANR	8976325	Identifier	i		8976232	1					
ANR	8976326	IfStatement	if ( HSB [ 2 ] != 0 )		8976232	5					
ANR	8976327	Condition	HSB [ 2 ] != 0	789:8:25091:25101	8976232	0	True				
ANR	8976328	EqualityExpression	HSB [ 2 ] != 0		8976232	0		!=			
ANR	8976329	ArrayIndexing	HSB [ 2 ]		8976232	0					
ANR	8976330	Identifier	HSB		8976232	0					
ANR	8976331	PrimaryExpression	2		8976232	1					
ANR	8976332	PrimaryExpression	0		8976232	1					
ANR	8976333	CompoundStatement		16:21:290:290	8976232	1					
ANR	8976334	ExpressionStatement	diff = HSB [ 2 ] - v	790:8:25114:25131	8976232	0	True				
ANR	8976335	AssignmentExpression	diff = HSB [ 2 ] - v		8976232	0		=			
ANR	8976336	Identifier	diff		8976232	0					
ANR	8976337	AdditiveExpression	HSB [ 2 ] - v		8976232	1		-			
ANR	8976338	ArrayIndexing	HSB [ 2 ]		8976232	0					
ANR	8976339	Identifier	HSB		8976232	0					
ANR	8976340	PrimaryExpression	2		8976232	1					
ANR	8976341	Identifier	v		8976232	1					
ANR	8976342	ExpressionStatement	HSB [ 1 ] = diff / HSB [ 2 ]	791:8:25141:25163	8976232	1	True				
ANR	8976343	AssignmentExpression	HSB [ 1 ] = diff / HSB [ 2 ]		8976232	0		=			
ANR	8976344	ArrayIndexing	HSB [ 1 ]		8976232	0					
ANR	8976345	Identifier	HSB		8976232	0					
ANR	8976346	PrimaryExpression	1		8976232	1					
ANR	8976347	MultiplicativeExpression	diff / HSB [ 2 ]		8976232	1		/			
ANR	8976348	Identifier	diff		8976232	0					
ANR	8976349	ArrayIndexing	HSB [ 2 ]		8976232	1					
ANR	8976350	Identifier	HSB		8976232	0					
ANR	8976351	PrimaryExpression	2		8976232	1					
ANR	8976352	SwitchStatement	switch ( j )		8976232	2					
ANR	8976353	Condition	j	792:16:25181:25181	8976232	0	True				
ANR	8976354	Identifier	j		8976232	0					
ANR	8976355	CompoundStatement		19:19:370:370	8976232	1					
ANR	8976356	Label	case 0 :	793:12:25198:25205	8976232	0	True				
ANR	8976357	IfStatement	if ( diff )		8976232	1					
ANR	8976358	Condition	diff	797:20:25394:25397	8976232	0	True				
ANR	8976359	Identifier	diff		8976232	0					
ANR	8976360	ExpressionStatement	HSB [ 0 ] = ( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )	798:20:25420:25495	8976232	1	True				
ANR	8976361	AssignmentExpression	HSB [ 0 ] = ( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		8976232	0		=			
ANR	8976362	ArrayIndexing	HSB [ 0 ]		8976232	0					
ANR	8976363	Identifier	HSB		8976232	0					
ANR	8976364	PrimaryExpression	0		8976232	1					
ANR	8976365	AdditiveExpression	( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		8976232	1		+			
ANR	8976366	MultiplicativeExpression	( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff )		8976232	0		/			
ANR	8976367	AdditiveExpression	RGB [ 1 ] - RGB [ 2 ]		8976232	0		-			
ANR	8976368	ArrayIndexing	RGB [ 1 ]		8976232	0					
ANR	8976369	Identifier	RGB		8976232	0					
ANR	8976370	PrimaryExpression	1		8976232	1					
ANR	8976371	ArrayIndexing	RGB [ 2 ]		8976232	1					
ANR	8976372	Identifier	RGB		8976232	0					
ANR	8976373	PrimaryExpression	2		8976232	1					
ANR	8976374	MultiplicativeExpression	6.0 * diff		8976232	1		*			
ANR	8976375	PrimaryExpression	6.0		8976232	0					
ANR	8976376	Identifier	diff		8976232	1					
ANR	8976377	ConditionalExpression	RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0		8976232	1					
ANR	8976378	Condition	RGB [ 2 ] > RGB [ 1 ]		8976232	0					
ANR	8976379	RelationalExpression	RGB [ 2 ] > RGB [ 1 ]		8976232	0		>			
ANR	8976380	ArrayIndexing	RGB [ 2 ]		8976232	0					
ANR	8976381	Identifier	RGB		8976232	0					
ANR	8976382	PrimaryExpression	2		8976232	1					
ANR	8976383	ArrayIndexing	RGB [ 1 ]		8976232	1					
ANR	8976384	Identifier	RGB		8976232	0					
ANR	8976385	PrimaryExpression	1		8976232	1					
ANR	8976386	PrimaryExpression	1.0		8976232	1					
ANR	8976387	PrimaryExpression	0.0		8976232	2					
ANR	8976388	ElseStatement	else		8976232	0					
ANR	8976389	ExpressionStatement	HSB [ 0 ] = ( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )	800:20:25538:25596	8976232	0	True				
ANR	8976390	AssignmentExpression	HSB [ 0 ] = ( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		8976232	0		=			
ANR	8976391	ArrayIndexing	HSB [ 0 ]		8976232	0					
ANR	8976392	Identifier	HSB		8976232	0					
ANR	8976393	PrimaryExpression	0		8976232	1					
ANR	8976394	AdditiveExpression	( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		8976232	1		+			
ANR	8976395	AdditiveExpression	RGB [ 1 ] - RGB [ 2 ]		8976232	0		-			
ANR	8976396	ArrayIndexing	RGB [ 1 ]		8976232	0					
ANR	8976397	Identifier	RGB		8976232	0					
ANR	8976398	PrimaryExpression	1		8976232	1					
ANR	8976399	ArrayIndexing	RGB [ 2 ]		8976232	1					
ANR	8976400	Identifier	RGB		8976232	0					
ANR	8976401	PrimaryExpression	2		8976232	1					
ANR	8976402	ConditionalExpression	RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0		8976232	1					
ANR	8976403	Condition	RGB [ 2 ] > RGB [ 1 ]		8976232	0					
ANR	8976404	RelationalExpression	RGB [ 2 ] > RGB [ 1 ]		8976232	0		>			
ANR	8976405	ArrayIndexing	RGB [ 2 ]		8976232	0					
ANR	8976406	Identifier	RGB		8976232	0					
ANR	8976407	PrimaryExpression	2		8976232	1					
ANR	8976408	ArrayIndexing	RGB [ 1 ]		8976232	1					
ANR	8976409	Identifier	RGB		8976232	0					
ANR	8976410	PrimaryExpression	1		8976232	1					
ANR	8976411	PrimaryExpression	1.0		8976232	1					
ANR	8976412	PrimaryExpression	0.0		8976232	2					
ANR	8976413	BreakStatement	break ;	801:16:25614:25619	8976232	2	True				
ANR	8976414	Label	case 1 :	802:12:25633:25640	8976232	3	True				
ANR	8976415	ExpressionStatement	HSB [ 0 ] = ( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )	803:16:25680:25735	8976232	4	True				
ANR	8976416	AssignmentExpression	HSB [ 0 ] = ( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		8976232	0		=			
ANR	8976417	ArrayIndexing	HSB [ 0 ]		8976232	0					
ANR	8976418	Identifier	HSB		8976232	0					
ANR	8976419	PrimaryExpression	0		8976232	1					
ANR	8976420	AdditiveExpression	( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		8976232	1		+			
ANR	8976421	MultiplicativeExpression	1.0 / 3.0		8976232	0		/			
ANR	8976422	PrimaryExpression	1.0		8976232	0					
ANR	8976423	PrimaryExpression	3.0		8976232	1					
ANR	8976424	MultiplicativeExpression	( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		8976232	1		/			
ANR	8976425	AdditiveExpression	RGB [ 2 ] - RGB [ 0 ]		8976232	0		-			
ANR	8976426	ArrayIndexing	RGB [ 2 ]		8976232	0					
ANR	8976427	Identifier	RGB		8976232	0					
ANR	8976428	PrimaryExpression	2		8976232	1					
ANR	8976429	ArrayIndexing	RGB [ 0 ]		8976232	1					
ANR	8976430	Identifier	RGB		8976232	0					
ANR	8976431	PrimaryExpression	0		8976232	1					
ANR	8976432	MultiplicativeExpression	6.0 * diff		8976232	1		*			
ANR	8976433	PrimaryExpression	6.0		8976232	0					
ANR	8976434	Identifier	diff		8976232	1					
ANR	8976435	BreakStatement	break ;	804:16:25753:25758	8976232	5	True				
ANR	8976436	Label	case 2 :	805:12:25772:25779	8976232	6	True				
ANR	8976437	ExpressionStatement	HSB [ 0 ] = ( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )	806:16:25819:25874	8976232	7	True				
ANR	8976438	AssignmentExpression	HSB [ 0 ] = ( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		8976232	0		=			
ANR	8976439	ArrayIndexing	HSB [ 0 ]		8976232	0					
ANR	8976440	Identifier	HSB		8976232	0					
ANR	8976441	PrimaryExpression	0		8976232	1					
ANR	8976442	AdditiveExpression	( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		8976232	1		+			
ANR	8976443	MultiplicativeExpression	2.0 / 3.0		8976232	0		/			
ANR	8976444	PrimaryExpression	2.0		8976232	0					
ANR	8976445	PrimaryExpression	3.0		8976232	1					
ANR	8976446	MultiplicativeExpression	( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		8976232	1		/			
ANR	8976447	AdditiveExpression	RGB [ 0 ] - RGB [ 1 ]		8976232	0		-			
ANR	8976448	ArrayIndexing	RGB [ 0 ]		8976232	0					
ANR	8976449	Identifier	RGB		8976232	0					
ANR	8976450	PrimaryExpression	0		8976232	1					
ANR	8976451	ArrayIndexing	RGB [ 1 ]		8976232	1					
ANR	8976452	Identifier	RGB		8976232	0					
ANR	8976453	PrimaryExpression	1		8976232	1					
ANR	8976454	MultiplicativeExpression	6.0 * diff		8976232	1		*			
ANR	8976455	PrimaryExpression	6.0		8976232	0					
ANR	8976456	Identifier	diff		8976232	1					
ANR	8976457	BreakStatement	break ;	807:16:25892:25897	8976232	8	True				
ANR	8976458	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8976232	6					
ANR	8976459	ForInit	i = 0 ;	810:9:25924:25927	8976232	0	True				
ANR	8976460	AssignmentExpression	i = 0		8976232	0		=			
ANR	8976461	Identifier	i		8976232	0					
ANR	8976462	PrimaryExpression	0		8976232	1					
ANR	8976463	Condition	i < 3	810:13:25928:25930	8976232	1	True				
ANR	8976464	RelationalExpression	i < 3		8976232	0		<			
ANR	8976465	Identifier	i		8976232	0					
ANR	8976466	PrimaryExpression	3		8976232	1					
ANR	8976467	PostIncDecOperationExpression	i ++	810:17:25932:25934	8976232	2	True				
ANR	8976468	Identifier	i		8976232	0					
ANR	8976469	IncDec	++		8976232	1					
ANR	8976470	CompoundStatement		37:22:1123:1123	8976232	3					
ANR	8976471	IfStatement	if ( HSB [ i ] < 0 )		8976232	0					
ANR	8976472	Condition	HSB [ i ] < 0	811:12:25951:25960	8976232	0	True				
ANR	8976473	RelationalExpression	HSB [ i ] < 0		8976232	0		<			
ANR	8976474	ArrayIndexing	HSB [ i ]		8976232	0					
ANR	8976475	Identifier	HSB		8976232	0					
ANR	8976476	Identifier	i		8976232	1					
ANR	8976477	PrimaryExpression	0		8976232	1					
ANR	8976478	ExpressionStatement	HSB [ i ] = 0	812:12:25975:25985	8976232	1	True				
ANR	8976479	AssignmentExpression	HSB [ i ] = 0		8976232	0		=			
ANR	8976480	ArrayIndexing	HSB [ i ]		8976232	0					
ANR	8976481	Identifier	HSB		8976232	0					
ANR	8976482	Identifier	i		8976232	1					
ANR	8976483	PrimaryExpression	0		8976232	1					
ANR	8976484	IfStatement	if ( RGB [ i ] > 1 )		8976232	1					
ANR	8976485	Condition	RGB [ i ] > 1	813:12:25999:26008	8976232	0	True				
ANR	8976486	RelationalExpression	RGB [ i ] > 1		8976232	0		>			
ANR	8976487	ArrayIndexing	RGB [ i ]		8976232	0					
ANR	8976488	Identifier	RGB		8976232	0					
ANR	8976489	Identifier	i		8976232	1					
ANR	8976490	PrimaryExpression	1		8976232	1					
ANR	8976491	ExpressionStatement	HSB [ i ] = 1	814:12:26023:26033	8976232	1	True				
ANR	8976492	AssignmentExpression	HSB [ i ] = 1		8976232	0		=			
ANR	8976493	ArrayIndexing	HSB [ i ]		8976232	0					
ANR	8976494	Identifier	HSB		8976232	0					
ANR	8976495	Identifier	i		8976232	1					
ANR	8976496	PrimaryExpression	1		8976232	1					
ANR	8976497	ExpressionStatement	RGB [ i ] = HSB [ i ]	815:8:26043:26058	8976232	2	True				
ANR	8976498	AssignmentExpression	RGB [ i ] = HSB [ i ]		8976232	0		=			
ANR	8976499	ArrayIndexing	RGB [ i ]		8976232	0					
ANR	8976500	Identifier	RGB		8976232	0					
ANR	8976501	Identifier	i		8976232	1					
ANR	8976502	ArrayIndexing	HSB [ i ]		8976232	1					
ANR	8976503	Identifier	HSB		8976232	0					
ANR	8976504	Identifier	i		8976232	1					
ANR	8976505	ReturnStatement	return 0 ;	817:4:26070:26078	8976232	7	True				
ANR	8976506	PrimaryExpression	0		8976232	0					
ANR	8976507	ReturnType	static int		8976232	1					
ANR	8976508	Identifier	rgb2hsb		8976232	2					
ANR	8976509	ParameterList	float * RGB		8976232	3					
ANR	8976510	Parameter	float * RGB	773:19:24801:24810	8976232	0	True				
ANR	8976511	ParameterType	float *		8976232	0					
ANR	8976512	Identifier	RGB		8976232	1					
ANR	8976513	CFGEntryNode	ENTRY		8976232		True				
ANR	8976514	CFGExitNode	EXIT		8976232		True				
ANR	8976515	Symbol	* i		8976232						
ANR	8976516	Symbol	HSB		8976232						
ANR	8976517	Symbol	v		8976232						
ANR	8976518	Symbol	* RGB		8976232						
ANR	8976519	Symbol	i		8976232						
ANR	8976520	Symbol	diff		8976232						
ANR	8976521	Symbol	j		8976232						
ANR	8976522	Symbol	RGB		8976232						
ANR	8976523	Symbol	* HSB		8976232						
ANR	8976524	Function	hsb2rgb	869:0:27160:28514							
ANR	8976525	FunctionDef	hsb2rgb (float * HSB)		8976524	0					
ANR	8976526	CompoundStatement		870:0:27191:28514	8976524	0					
ANR	8976527	IdentifierDeclStatement	"float RGB [ 3 ] , mn , md ;"	871:4:27197:27217	8976524	0	True				
ANR	8976528	IdentifierDecl	RGB [ 3 ]		8976524	0					
ANR	8976529	IdentifierDeclType	float [ 3 ]		8976524	0					
ANR	8976530	Identifier	RGB		8976524	1					
ANR	8976531	PrimaryExpression	3		8976524	2					
ANR	8976532	IdentifierDecl	mn		8976524	1					
ANR	8976533	IdentifierDeclType	float		8976524	0					
ANR	8976534	Identifier	mn		8976524	1					
ANR	8976535	IdentifierDecl	md		8976524	2					
ANR	8976536	IdentifierDeclType	float		8976524	0					
ANR	8976537	Identifier	md		8976524	1					
ANR	8976538	IdentifierDeclStatement	int i ;	872:4:27223:27228	8976524	1	True				
ANR	8976539	IdentifierDecl	i		8976524	0					
ANR	8976540	IdentifierDeclType	int		8976524	0					
ANR	8976541	Identifier	i		8976524	1					
ANR	8976542	ExpressionStatement	mn = ( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]	874:4:27235:27263	8976524	2	True				
ANR	8976543	AssignmentExpression	mn = ( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]		8976524	0		=			
ANR	8976544	Identifier	mn		8976524	0					
ANR	8976545	MultiplicativeExpression	( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]		8976524	1		*			
ANR	8976546	AdditiveExpression	1.0 - HSB [ 1 ]		8976524	0		-			
ANR	8976547	PrimaryExpression	1.0		8976524	0					
ANR	8976548	ArrayIndexing	HSB [ 1 ]		8976524	1					
ANR	8976549	Identifier	HSB		8976524	0					
ANR	8976550	PrimaryExpression	1		8976524	1					
ANR	8976551	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976552	Identifier	HSB		8976524	0					
ANR	8976553	PrimaryExpression	2		8976524	1					
ANR	8976554	ExpressionStatement	md = 6.0 * HSB [ 1 ] * HSB [ 2 ]	875:4:27269:27295	8976524	3	True				
ANR	8976555	AssignmentExpression	md = 6.0 * HSB [ 1 ] * HSB [ 2 ]		8976524	0		=			
ANR	8976556	Identifier	md		8976524	0					
ANR	8976557	MultiplicativeExpression	6.0 * HSB [ 1 ] * HSB [ 2 ]		8976524	1		*			
ANR	8976558	PrimaryExpression	6.0		8976524	0					
ANR	8976559	MultiplicativeExpression	HSB [ 1 ] * HSB [ 2 ]		8976524	1		*			
ANR	8976560	ArrayIndexing	HSB [ 1 ]		8976524	0					
ANR	8976561	Identifier	HSB		8976524	0					
ANR	8976562	PrimaryExpression	1		8976524	1					
ANR	8976563	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976564	Identifier	HSB		8976524	0					
ANR	8976565	PrimaryExpression	2		8976524	1					
ANR	8976566	SwitchStatement	switch ( ( int ) floor ( 6.0 * HSB [ 0 ] ) )		8976524	4					
ANR	8976567	Condition	( int ) floor ( 6.0 * HSB [ 0 ] )	877:12:27310:27333	8976524	0	True				
ANR	8976568	CastExpression	( int ) floor ( 6.0 * HSB [ 0 ] )		8976524	0					
ANR	8976569	CastTarget	int		8976524	0					
ANR	8976570	CallExpression	floor ( 6.0 * HSB [ 0 ] )		8976524	1					
ANR	8976571	Callee	floor		8976524	0					
ANR	8976572	Identifier	floor		8976524	0					
ANR	8976573	ArgumentList	6.0 * HSB [ 0 ]		8976524	1					
ANR	8976574	Argument	6.0 * HSB [ 0 ]		8976524	0					
ANR	8976575	MultiplicativeExpression	6.0 * HSB [ 0 ]		8976524	0		*			
ANR	8976576	PrimaryExpression	6.0		8976524	0					
ANR	8976577	ArrayIndexing	HSB [ 0 ]		8976524	1					
ANR	8976578	Identifier	HSB		8976524	0					
ANR	8976579	PrimaryExpression	0		8976524	1					
ANR	8976580	CompoundStatement		8:38:144:144	8976524	1					
ANR	8976581	Label	case 6 :	878:8:27346:27352	8976524	0	True				
ANR	8976582	ExpressionStatement	HSB [ 0 ] = ( float ) 0	879:12:27366:27383	8976524	1	True				
ANR	8976583	AssignmentExpression	HSB [ 0 ] = ( float ) 0		8976524	0		=			
ANR	8976584	ArrayIndexing	HSB [ 0 ]		8976524	0					
ANR	8976585	Identifier	HSB		8976524	0					
ANR	8976586	PrimaryExpression	0		8976524	1					
ANR	8976587	CastExpression	( float ) 0		8976524	1					
ANR	8976588	CastTarget	float		8976524	0					
ANR	8976589	PrimaryExpression	0		8976524	1					
ANR	8976590	Label	default :	881:8:27424:27431	8976524	2	True				
ANR	8976591	Identifier	default		8976524	0					
ANR	8976592	Label	case 0 :	882:8:27498:27504	8976524	3	True				
ANR	8976593	ExpressionStatement	RGB [ 0 ] = HSB [ 2 ]	883:12:27518:27533	8976524	4	True				
ANR	8976594	AssignmentExpression	RGB [ 0 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976595	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976596	Identifier	RGB		8976524	0					
ANR	8976597	PrimaryExpression	0		8976524	1					
ANR	8976598	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976599	Identifier	HSB		8976524	0					
ANR	8976600	PrimaryExpression	2		8976524	1					
ANR	8976601	ExpressionStatement	RGB [ 1 ] = mn + ( HSB [ 0 ] * md )	884:12:27547:27574	8976524	5	True				
ANR	8976602	AssignmentExpression	RGB [ 1 ] = mn + ( HSB [ 0 ] * md )		8976524	0		=			
ANR	8976603	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976604	Identifier	RGB		8976524	0					
ANR	8976605	PrimaryExpression	1		8976524	1					
ANR	8976606	AdditiveExpression	mn + ( HSB [ 0 ] * md )		8976524	1		+			
ANR	8976607	Identifier	mn		8976524	0					
ANR	8976608	MultiplicativeExpression	HSB [ 0 ] * md		8976524	1		*			
ANR	8976609	ArrayIndexing	HSB [ 0 ]		8976524	0					
ANR	8976610	Identifier	HSB		8976524	0					
ANR	8976611	PrimaryExpression	0		8976524	1					
ANR	8976612	Identifier	md		8976524	1					
ANR	8976613	ExpressionStatement	RGB [ 2 ] = mn	885:12:27588:27599	8976524	6	True				
ANR	8976614	AssignmentExpression	RGB [ 2 ] = mn		8976524	0		=			
ANR	8976615	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976616	Identifier	RGB		8976524	0					
ANR	8976617	PrimaryExpression	2		8976524	1					
ANR	8976618	Identifier	mn		8976524	1					
ANR	8976619	BreakStatement	break ;	886:12:27613:27618	8976524	7	True				
ANR	8976620	Label	case 1 :	887:8:27628:27634	8976524	8	True				
ANR	8976621	ExpressionStatement	RGB [ 0 ] = mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )	888:12:27648:27691	8976524	9	True				
ANR	8976622	AssignmentExpression	RGB [ 0 ] = mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )		8976524	0		=			
ANR	8976623	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976624	Identifier	RGB		8976524	0					
ANR	8976625	PrimaryExpression	0		8976524	1					
ANR	8976626	AdditiveExpression	mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )		8976524	1		+			
ANR	8976627	Identifier	mn		8976524	0					
ANR	8976628	MultiplicativeExpression	md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] )		8976524	1		*			
ANR	8976629	Identifier	md		8976524	0					
ANR	8976630	AdditiveExpression	( 1.0 / 3.0 ) - HSB [ 0 ]		8976524	1		-			
ANR	8976631	MultiplicativeExpression	1.0 / 3.0		8976524	0		/			
ANR	8976632	PrimaryExpression	1.0		8976524	0					
ANR	8976633	PrimaryExpression	3.0		8976524	1					
ANR	8976634	ArrayIndexing	HSB [ 0 ]		8976524	1					
ANR	8976635	Identifier	HSB		8976524	0					
ANR	8976636	PrimaryExpression	0		8976524	1					
ANR	8976637	ExpressionStatement	RGB [ 1 ] = HSB [ 2 ]	889:12:27705:27720	8976524	10	True				
ANR	8976638	AssignmentExpression	RGB [ 1 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976639	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976640	Identifier	RGB		8976524	0					
ANR	8976641	PrimaryExpression	1		8976524	1					
ANR	8976642	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976643	Identifier	HSB		8976524	0					
ANR	8976644	PrimaryExpression	2		8976524	1					
ANR	8976645	ExpressionStatement	RGB [ 2 ] = mn	890:12:27734:27745	8976524	11	True				
ANR	8976646	AssignmentExpression	RGB [ 2 ] = mn		8976524	0		=			
ANR	8976647	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976648	Identifier	RGB		8976524	0					
ANR	8976649	PrimaryExpression	2		8976524	1					
ANR	8976650	Identifier	mn		8976524	1					
ANR	8976651	BreakStatement	break ;	891:12:27759:27764	8976524	12	True				
ANR	8976652	Label	case 2 :	892:8:27774:27780	8976524	13	True				
ANR	8976653	ExpressionStatement	RGB [ 0 ] = mn	893:12:27794:27805	8976524	14	True				
ANR	8976654	AssignmentExpression	RGB [ 0 ] = mn		8976524	0		=			
ANR	8976655	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976656	Identifier	RGB		8976524	0					
ANR	8976657	PrimaryExpression	0		8976524	1					
ANR	8976658	Identifier	mn		8976524	1					
ANR	8976659	ExpressionStatement	RGB [ 1 ] = HSB [ 2 ]	894:12:27819:27834	8976524	15	True				
ANR	8976660	AssignmentExpression	RGB [ 1 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976661	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976662	Identifier	RGB		8976524	0					
ANR	8976663	PrimaryExpression	1		8976524	1					
ANR	8976664	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976665	Identifier	HSB		8976524	0					
ANR	8976666	PrimaryExpression	2		8976524	1					
ANR	8976667	ExpressionStatement	RGB [ 2 ] = mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )	895:12:27848:27891	8976524	16	True				
ANR	8976668	AssignmentExpression	RGB [ 2 ] = mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )		8976524	0		=			
ANR	8976669	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976670	Identifier	RGB		8976524	0					
ANR	8976671	PrimaryExpression	2		8976524	1					
ANR	8976672	AdditiveExpression	mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )		8976524	1		+			
ANR	8976673	Identifier	mn		8976524	0					
ANR	8976674	MultiplicativeExpression	( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md		8976524	1		*			
ANR	8976675	AdditiveExpression	HSB [ 0 ] - ( 1.0 / 3.0 )		8976524	0		-			
ANR	8976676	ArrayIndexing	HSB [ 0 ]		8976524	0					
ANR	8976677	Identifier	HSB		8976524	0					
ANR	8976678	PrimaryExpression	0		8976524	1					
ANR	8976679	MultiplicativeExpression	1.0 / 3.0		8976524	1		/			
ANR	8976680	PrimaryExpression	1.0		8976524	0					
ANR	8976681	PrimaryExpression	3.0		8976524	1					
ANR	8976682	Identifier	md		8976524	1					
ANR	8976683	BreakStatement	break ;	896:12:27905:27910	8976524	17	True				
ANR	8976684	Label	case 3 :	897:8:27920:27926	8976524	18	True				
ANR	8976685	ExpressionStatement	RGB [ 0 ] = mn	898:12:27940:27951	8976524	19	True				
ANR	8976686	AssignmentExpression	RGB [ 0 ] = mn		8976524	0		=			
ANR	8976687	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976688	Identifier	RGB		8976524	0					
ANR	8976689	PrimaryExpression	0		8976524	1					
ANR	8976690	Identifier	mn		8976524	1					
ANR	8976691	ExpressionStatement	RGB [ 1 ] = mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )	899:12:27965:28009	8976524	20	True				
ANR	8976692	AssignmentExpression	RGB [ 1 ] = mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )		8976524	0		=			
ANR	8976693	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976694	Identifier	RGB		8976524	0					
ANR	8976695	PrimaryExpression	1		8976524	1					
ANR	8976696	AdditiveExpression	mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )		8976524	1		+			
ANR	8976697	Identifier	mn		8976524	0					
ANR	8976698	MultiplicativeExpression	( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md		8976524	1		*			
ANR	8976699	AdditiveExpression	( 2.0 / 3.0f ) - HSB [ 0 ]		8976524	0		-			
ANR	8976700	MultiplicativeExpression	2.0 / 3.0f		8976524	0		/			
ANR	8976701	PrimaryExpression	2.0		8976524	0					
ANR	8976702	PrimaryExpression	3.0f		8976524	1					
ANR	8976703	ArrayIndexing	HSB [ 0 ]		8976524	1					
ANR	8976704	Identifier	HSB		8976524	0					
ANR	8976705	PrimaryExpression	0		8976524	1					
ANR	8976706	Identifier	md		8976524	1					
ANR	8976707	ExpressionStatement	RGB [ 2 ] = HSB [ 2 ]	900:12:28023:28038	8976524	21	True				
ANR	8976708	AssignmentExpression	RGB [ 2 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976709	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976710	Identifier	RGB		8976524	0					
ANR	8976711	PrimaryExpression	2		8976524	1					
ANR	8976712	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976713	Identifier	HSB		8976524	0					
ANR	8976714	PrimaryExpression	2		8976524	1					
ANR	8976715	BreakStatement	break ;	901:12:28052:28057	8976524	22	True				
ANR	8976716	Label	case 4 :	902:8:28067:28073	8976524	23	True				
ANR	8976717	ExpressionStatement	RGB [ 0 ] = mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )	903:12:28087:28130	8976524	24	True				
ANR	8976718	AssignmentExpression	RGB [ 0 ] = mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )		8976524	0		=			
ANR	8976719	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976720	Identifier	RGB		8976524	0					
ANR	8976721	PrimaryExpression	0		8976524	1					
ANR	8976722	AdditiveExpression	mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )		8976524	1		+			
ANR	8976723	Identifier	mn		8976524	0					
ANR	8976724	MultiplicativeExpression	( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md		8976524	1		*			
ANR	8976725	AdditiveExpression	HSB [ 0 ] - ( 2.0 / 3.0 )		8976524	0		-			
ANR	8976726	ArrayIndexing	HSB [ 0 ]		8976524	0					
ANR	8976727	Identifier	HSB		8976524	0					
ANR	8976728	PrimaryExpression	0		8976524	1					
ANR	8976729	MultiplicativeExpression	2.0 / 3.0		8976524	1		/			
ANR	8976730	PrimaryExpression	2.0		8976524	0					
ANR	8976731	PrimaryExpression	3.0		8976524	1					
ANR	8976732	Identifier	md		8976524	1					
ANR	8976733	ExpressionStatement	RGB [ 1 ] = mn	904:12:28144:28155	8976524	25	True				
ANR	8976734	AssignmentExpression	RGB [ 1 ] = mn		8976524	0		=			
ANR	8976735	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976736	Identifier	RGB		8976524	0					
ANR	8976737	PrimaryExpression	1		8976524	1					
ANR	8976738	Identifier	mn		8976524	1					
ANR	8976739	ExpressionStatement	RGB [ 2 ] = HSB [ 2 ]	905:12:28169:28184	8976524	26	True				
ANR	8976740	AssignmentExpression	RGB [ 2 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976741	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976742	Identifier	RGB		8976524	0					
ANR	8976743	PrimaryExpression	2		8976524	1					
ANR	8976744	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976745	Identifier	HSB		8976524	0					
ANR	8976746	PrimaryExpression	2		8976524	1					
ANR	8976747	BreakStatement	break ;	906:12:28198:28203	8976524	27	True				
ANR	8976748	Label	case 5 :	907:8:28213:28219	8976524	28	True				
ANR	8976749	ExpressionStatement	RGB [ 0 ] = HSB [ 2 ]	908:12:28233:28248	8976524	29	True				
ANR	8976750	AssignmentExpression	RGB [ 0 ] = HSB [ 2 ]		8976524	0		=			
ANR	8976751	ArrayIndexing	RGB [ 0 ]		8976524	0					
ANR	8976752	Identifier	RGB		8976524	0					
ANR	8976753	PrimaryExpression	0		8976524	1					
ANR	8976754	ArrayIndexing	HSB [ 2 ]		8976524	1					
ANR	8976755	Identifier	HSB		8976524	0					
ANR	8976756	PrimaryExpression	2		8976524	1					
ANR	8976757	ExpressionStatement	RGB [ 1 ] = mn	909:12:28262:28273	8976524	30	True				
ANR	8976758	AssignmentExpression	RGB [ 1 ] = mn		8976524	0		=			
ANR	8976759	ArrayIndexing	RGB [ 1 ]		8976524	0					
ANR	8976760	Identifier	RGB		8976524	0					
ANR	8976761	PrimaryExpression	1		8976524	1					
ANR	8976762	Identifier	mn		8976524	1					
ANR	8976763	ExpressionStatement	RGB [ 2 ] = mn + ( ( 1.0 - HSB [ 0 ] ) * md )	910:12:28287:28322	8976524	31	True				
ANR	8976764	AssignmentExpression	RGB [ 2 ] = mn + ( ( 1.0 - HSB [ 0 ] ) * md )		8976524	0		=			
ANR	8976765	ArrayIndexing	RGB [ 2 ]		8976524	0					
ANR	8976766	Identifier	RGB		8976524	0					
ANR	8976767	PrimaryExpression	2		8976524	1					
ANR	8976768	AdditiveExpression	mn + ( ( 1.0 - HSB [ 0 ] ) * md )		8976524	1		+			
ANR	8976769	Identifier	mn		8976524	0					
ANR	8976770	MultiplicativeExpression	( 1.0 - HSB [ 0 ] ) * md		8976524	1		*			
ANR	8976771	AdditiveExpression	1.0 - HSB [ 0 ]		8976524	0		-			
ANR	8976772	PrimaryExpression	1.0		8976524	0					
ANR	8976773	ArrayIndexing	HSB [ 0 ]		8976524	1					
ANR	8976774	Identifier	HSB		8976524	0					
ANR	8976775	PrimaryExpression	0		8976524	1					
ANR	8976776	Identifier	md		8976524	1					
ANR	8976777	BreakStatement	break ;	911:12:28336:28341	8976524	32	True				
ANR	8976778	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8976524	5					
ANR	8976779	ForInit	i = 0 ;	913:9:28358:28361	8976524	0	True				
ANR	8976780	AssignmentExpression	i = 0		8976524	0		=			
ANR	8976781	Identifier	i		8976524	0					
ANR	8976782	PrimaryExpression	0		8976524	1					
ANR	8976783	Condition	i < 3	913:13:28362:28364	8976524	1	True				
ANR	8976784	RelationalExpression	i < 3		8976524	0		<			
ANR	8976785	Identifier	i		8976524	0					
ANR	8976786	PrimaryExpression	3		8976524	1					
ANR	8976787	PostIncDecOperationExpression	i ++	913:17:28366:28368	8976524	2	True				
ANR	8976788	Identifier	i		8976524	0					
ANR	8976789	IncDec	++		8976524	1					
ANR	8976790	CompoundStatement		44:22:1179:1179	8976524	3					
ANR	8976791	IfStatement	if ( RGB [ i ] < 0 )		8976524	0					
ANR	8976792	Condition	RGB [ i ] < 0	914:12:28385:28394	8976524	0	True				
ANR	8976793	RelationalExpression	RGB [ i ] < 0		8976524	0		<			
ANR	8976794	ArrayIndexing	RGB [ i ]		8976524	0					
ANR	8976795	Identifier	RGB		8976524	0					
ANR	8976796	Identifier	i		8976524	1					
ANR	8976797	PrimaryExpression	0		8976524	1					
ANR	8976798	ExpressionStatement	RGB [ i ] = 0	915:12:28409:28419	8976524	1	True				
ANR	8976799	AssignmentExpression	RGB [ i ] = 0		8976524	0		=			
ANR	8976800	ArrayIndexing	RGB [ i ]		8976524	0					
ANR	8976801	Identifier	RGB		8976524	0					
ANR	8976802	Identifier	i		8976524	1					
ANR	8976803	PrimaryExpression	0		8976524	1					
ANR	8976804	IfStatement	if ( RGB [ i ] > 1 )		8976524	1					
ANR	8976805	Condition	RGB [ i ] > 1	916:12:28433:28442	8976524	0	True				
ANR	8976806	RelationalExpression	RGB [ i ] > 1		8976524	0		>			
ANR	8976807	ArrayIndexing	RGB [ i ]		8976524	0					
ANR	8976808	Identifier	RGB		8976524	0					
ANR	8976809	Identifier	i		8976524	1					
ANR	8976810	PrimaryExpression	1		8976524	1					
ANR	8976811	ExpressionStatement	RGB [ i ] = 1	917:12:28457:28467	8976524	1	True				
ANR	8976812	AssignmentExpression	RGB [ i ] = 1		8976524	0		=			
ANR	8976813	ArrayIndexing	RGB [ i ]		8976524	0					
ANR	8976814	Identifier	RGB		8976524	0					
ANR	8976815	Identifier	i		8976524	1					
ANR	8976816	PrimaryExpression	1		8976524	1					
ANR	8976817	ExpressionStatement	HSB [ i ] = RGB [ i ]	918:8:28477:28492	8976524	2	True				
ANR	8976818	AssignmentExpression	HSB [ i ] = RGB [ i ]		8976524	0		=			
ANR	8976819	ArrayIndexing	HSB [ i ]		8976524	0					
ANR	8976820	Identifier	HSB		8976524	0					
ANR	8976821	Identifier	i		8976524	1					
ANR	8976822	ArrayIndexing	RGB [ i ]		8976524	1					
ANR	8976823	Identifier	RGB		8976524	0					
ANR	8976824	Identifier	i		8976524	1					
ANR	8976825	ReturnStatement	return 0 ;	920:4:28504:28512	8976524	6	True				
ANR	8976826	PrimaryExpression	0		8976524	0					
ANR	8976827	ReturnType	static int		8976524	1					
ANR	8976828	Identifier	hsb2rgb		8976524	2					
ANR	8976829	ParameterList	float * HSB		8976524	3					
ANR	8976830	Parameter	float * HSB	869:19:27179:27188	8976524	0	True				
ANR	8976831	ParameterType	float *		8976524	0					
ANR	8976832	Identifier	HSB		8976524	1					
ANR	8976833	CFGEntryNode	ENTRY		8976524		True				
ANR	8976834	CFGExitNode	EXIT		8976524		True				
ANR	8976835	Symbol	mn		8976524						
ANR	8976836	Symbol	* i		8976524						
ANR	8976837	Symbol	HSB		8976524						
ANR	8976838	Symbol	md		8976524						
ANR	8976839	Symbol	* RGB		8976524						
ANR	8976840	Symbol	i		8976524						
ANR	8976841	Symbol	RGB		8976524						
ANR	8976842	Symbol	floor		8976524						
ANR	8976843	Symbol	* HSB		8976524						
ANR	8976844	Function	setgrayspace	928:0:28636:33600							
ANR	8976845	FunctionDef	"setgrayspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8976844	0					
ANR	8976846	CompoundStatement		929:0:28724:33600	8976844	0					
ANR	8976847	IdentifierDeclStatement	os_ptr op = osp ;	930:4:28730:28745	8976844	0	True				
ANR	8976848	IdentifierDecl	op = osp		8976844	0					
ANR	8976849	IdentifierDeclType	os_ptr		8976844	0					
ANR	8976850	Identifier	op		8976844	1					
ANR	8976851	AssignmentExpression	op = osp		8976844	2		=			
ANR	8976852	Identifier	osp		8976844	0					
ANR	8976853	Identifier	osp		8976844	1					
ANR	8976854	IdentifierDeclStatement	gs_color_space * pcs ;	931:4:28751:28771	8976844	1	True				
ANR	8976855	IdentifierDecl	* pcs		8976844	0					
ANR	8976856	IdentifierDeclType	gs_color_space *		8976844	0					
ANR	8976857	Identifier	pcs		8976844	1					
ANR	8976858	IdentifierDeclStatement	int code = 0 ;	932:4:28777:28787	8976844	2	True				
ANR	8976859	IdentifierDecl	code = 0		8976844	0					
ANR	8976860	IdentifierDeclType	int		8976844	0					
ANR	8976861	Identifier	code		8976844	1					
ANR	8976862	AssignmentExpression	code = 0		8976844	2		=			
ANR	8976863	Identifier	code		8976844	0					
ANR	8976864	PrimaryExpression	0		8976844	1					
ANR	8976865	IdentifierDeclStatement	ref stref ;	933:4:28793:28802	8976844	3	True				
ANR	8976866	IdentifierDecl	stref		8976844	0					
ANR	8976867	IdentifierDeclType	ref		8976844	0					
ANR	8976868	Identifier	stref		8976844	1					
ANR	8976869	DoStatement	do		8976844	4					
ANR	8976870	CompoundStatement		7:7:87:87	8976844	0					
ANR	8976871	SwitchStatement	switch ( * stage )		8976844	0					
ANR	8976872	Condition	* stage	936:16:28830:28835	8976844	0	True				
ANR	8976873	UnaryOperationExpression	* stage		8976844	0					
ANR	8976874	UnaryOperator	*		8976844	0					
ANR	8976875	Identifier	stage		8976844	1					
ANR	8976876	CompoundStatement		8:24:113:113	8976844	1					
ANR	8976877	Label	case 0 :	937:12:28852:28858	8976844	0	True				
ANR	8976878	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		8976844	1					
ANR	8976879	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	938:20:28880:28927	8976844	0	True				
ANR	8976880	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		8976844	0		&&			
ANR	8976881	MemberAccess	istate -> use_cie_color . value . boolval		8976844	0					
ANR	8976882	MemberAccess	istate -> use_cie_color . value		8976844	0					
ANR	8976883	PtrMemberAccess	istate -> use_cie_color		8976844	0					
ANR	8976884	Identifier	istate		8976844	0					
ANR	8976885	Identifier	use_cie_color		8976844	1					
ANR	8976886	Identifier	value		8976844	1					
ANR	8976887	Identifier	boolval		8976844	1					
ANR	8976888	UnaryOperationExpression	! CIESubst		8976844	1					
ANR	8976889	UnaryOperator	!		8976844	0					
ANR	8976890	Identifier	CIESubst		8976844	1					
ANR	8976891	CompoundStatement		12:20:259:271	8976844	1					
ANR	8976892	IdentifierDeclStatement	byte * body ;	939:20:28952:28962	8976844	0	True				
ANR	8976893	IdentifierDecl	* body		8976844	0					
ANR	8976894	IdentifierDeclType	byte *		8976844	0					
ANR	8976895	Identifier	body		8976844	1					
ANR	8976896	IdentifierDeclStatement	ref * nosubst ;	940:20:28984:28996	8976844	1	True				
ANR	8976897	IdentifierDecl	* nosubst		8976844	0					
ANR	8976898	IdentifierDeclType	ref *		8976844	0					
ANR	8976899	Identifier	nosubst		8976844	1					
ANR	8976900	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	942:20:29019:29087	8976844	2	True				
ANR	8976901	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8976844	0		=			
ANR	8976902	Identifier	code		8976844	0					
ANR	8976903	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8976844	1					
ANR	8976904	Callee	dict_find_string		8976844	0					
ANR	8976905	Identifier	dict_find_string		8976844	0					
ANR	8976906	ArgumentList	systemdict		8976844	1					
ANR	8976907	Argument	systemdict		8976844	0					
ANR	8976908	Identifier	systemdict		8976844	0					
ANR	8976909	Argument	"""NOSUBSTDEVICECOLORS"""		8976844	1					
ANR	8976910	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		8976844	0					
ANR	8976911	Argument	& nosubst		8976844	2					
ANR	8976912	UnaryOperationExpression	& nosubst		8976844	0					
ANR	8976913	UnaryOperator	&		8976844	0					
ANR	8976914	Identifier	nosubst		8976844	1					
ANR	8976915	IfStatement	if ( code != 0 )		8976844	3					
ANR	8976916	Condition	code != 0	943:24:29113:29121	8976844	0	True				
ANR	8976917	EqualityExpression	code != 0		8976844	0		!=			
ANR	8976918	Identifier	code		8976844	0					
ANR	8976919	PrimaryExpression	0		8976844	1					
ANR	8976920	CompoundStatement		15:35:399:399	8976844	1					
ANR	8976921	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		8976844	0					
ANR	8976922	Condition	"! r_has_type ( nosubst , t_boolean )"	944:28:29154:29184	8976844	0	True				
ANR	8976923	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		8976844	0					
ANR	8976924	UnaryOperator	!		8976844	0					
ANR	8976925	CallExpression	"r_has_type ( nosubst , t_boolean )"		8976844	1					
ANR	8976926	Callee	r_has_type		8976844	0					
ANR	8976927	Identifier	r_has_type		8976844	0					
ANR	8976928	ArgumentList	nosubst		8976844	1					
ANR	8976929	Argument	nosubst		8976844	0					
ANR	8976930	Identifier	nosubst		8976844	0					
ANR	8976931	Argument	t_boolean		8976844	1					
ANR	8976932	Identifier	t_boolean		8976844	0					
ANR	8976933	ExpressionStatement	return_error ( gs_error_typecheck )	945:28:29215:29247	8976844	1	True				
ANR	8976934	CallExpression	return_error ( gs_error_typecheck )		8976844	0					
ANR	8976935	Callee	return_error		8976844	0					
ANR	8976936	Identifier	return_error		8976844	0					
ANR	8976937	ArgumentList	gs_error_typecheck		8976844	1					
ANR	8976938	Argument	gs_error_typecheck		8976844	0					
ANR	8976939	Identifier	gs_error_typecheck		8976844	0					
ANR	8976940	IfStatement	if ( code != 0 && nosubst -> value . boolval )		8976844	4					
ANR	8976941	Condition	code != 0 && nosubst -> value . boolval	947:24:29295:29329	8976844	0	True				
ANR	8976942	AndExpression	code != 0 && nosubst -> value . boolval		8976844	0		&&			
ANR	8976943	EqualityExpression	code != 0		8976844	0		!=			
ANR	8976944	Identifier	code		8976844	0					
ANR	8976945	PrimaryExpression	0		8976844	1					
ANR	8976946	MemberAccess	nosubst -> value . boolval		8976844	1					
ANR	8976947	PtrMemberAccess	nosubst -> value		8976844	0					
ANR	8976948	Identifier	nosubst		8976844	0					
ANR	8976949	Identifier	value		8976844	1					
ANR	8976950	Identifier	boolval		8976844	1					
ANR	8976951	CompoundStatement		19:61:607:607	8976844	1					
ANR	8976952	ExpressionStatement	* stage = 4	948:24:29358:29368	8976844	0	True				
ANR	8976953	AssignmentExpression	* stage = 4		8976844	0		=			
ANR	8976954	UnaryOperationExpression	* stage		8976844	0					
ANR	8976955	UnaryOperator	*		8976844	0					
ANR	8976956	Identifier	stage		8976844	1					
ANR	8976957	PrimaryExpression	4		8976844	1					
ANR	8976958	ExpressionStatement	* cont = 1	949:24:29394:29403	8976844	1	True				
ANR	8976959	AssignmentExpression	* cont = 1		8976844	0		=			
ANR	8976960	UnaryOperationExpression	* cont		8976844	0					
ANR	8976961	UnaryOperator	*		8976844	0					
ANR	8976962	Identifier	cont		8976844	1					
ANR	8976963	PrimaryExpression	1		8976844	1					
ANR	8976964	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	950:24:29429:29463	8976844	2	True				
ANR	8976965	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		8976844	0		=			
ANR	8976966	Identifier	body		8976844	0					
ANR	8976967	CallExpression	"ialloc_string ( 32 , ""string"" )"		8976844	1					
ANR	8976968	Callee	ialloc_string		8976844	0					
ANR	8976969	Identifier	ialloc_string		8976844	0					
ANR	8976970	ArgumentList	32		8976844	1					
ANR	8976971	Argument	32		8976844	0					
ANR	8976972	PrimaryExpression	32		8976844	0					
ANR	8976973	Argument	"""string"""		8976844	1					
ANR	8976974	PrimaryExpression	"""string"""		8976844	0					
ANR	8976975	IfStatement	if ( body == 0 )		8976844	3					
ANR	8976976	Condition	body == 0	951:28:29493:29501	8976844	0	True				
ANR	8976977	EqualityExpression	body == 0		8976844	0		==			
ANR	8976978	Identifier	body		8976844	0					
ANR	8976979	PrimaryExpression	0		8976844	1					
ANR	8976980	ExpressionStatement	return_error ( gs_error_VMerror )	952:28:29532:29562	8976844	1	True				
ANR	8976981	CallExpression	return_error ( gs_error_VMerror )		8976844	0					
ANR	8976982	Callee	return_error		8976844	0					
ANR	8976983	Identifier	return_error		8976844	0					
ANR	8976984	ArgumentList	gs_error_VMerror		8976844	1					
ANR	8976985	Argument	gs_error_VMerror		8976844	0					
ANR	8976986	Identifier	gs_error_VMerror		8976844	0					
ANR	8976987	ExpressionStatement	"memcpy ( body , ""/DefaultGray ..nosubstdevicetest"" , 32 )"	953:24:29588:29639	8976844	4	True				
ANR	8976988	CallExpression	"memcpy ( body , ""/DefaultGray ..nosubstdevicetest"" , 32 )"		8976844	0					
ANR	8976989	Callee	memcpy		8976844	0					
ANR	8976990	Identifier	memcpy		8976844	0					
ANR	8976991	ArgumentList	body		8976844	1					
ANR	8976992	Argument	body		8976844	0					
ANR	8976993	Identifier	body		8976844	0					
ANR	8976994	Argument	"""/DefaultGray ..nosubstdevicetest"""		8976844	1					
ANR	8976995	PrimaryExpression	"""/DefaultGray ..nosubstdevicetest"""		8976844	0					
ANR	8976996	Argument	32		8976844	2					
ANR	8976997	PrimaryExpression	32		8976844	0					
ANR	8976998	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	954:24:29665:29718	8976844	5	True				
ANR	8976999	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		8976844	0					
ANR	8977000	Callee	make_string		8976844	0					
ANR	8977001	Identifier	make_string		8976844	0					
ANR	8977002	ArgumentList	& stref		8976844	1					
ANR	8977003	Argument	& stref		8976844	0					
ANR	8977004	UnaryOperationExpression	& stref		8976844	0					
ANR	8977005	UnaryOperator	&		8976844	0					
ANR	8977006	Identifier	stref		8976844	1					
ANR	8977007	Argument	a_all | icurrent_space		8976844	1					
ANR	8977008	InclusiveOrExpression	a_all | icurrent_space		8976844	0		|			
ANR	8977009	Identifier	a_all		8976844	0					
ANR	8977010	Identifier	icurrent_space		8976844	1					
ANR	8977011	Argument	32		8976844	2					
ANR	8977012	PrimaryExpression	32		8976844	0					
ANR	8977013	Argument	body		8976844	3					
ANR	8977014	Identifier	body		8976844	0					
ANR	8977015	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	955:24:29744:29777	8976844	6	True				
ANR	8977016	CallExpression	"r_set_attrs ( & stref , a_executable )"		8976844	0					
ANR	8977017	Callee	r_set_attrs		8976844	0					
ANR	8977018	Identifier	r_set_attrs		8976844	0					
ANR	8977019	ArgumentList	& stref		8976844	1					
ANR	8977020	Argument	& stref		8976844	0					
ANR	8977021	UnaryOperationExpression	& stref		8976844	0					
ANR	8977022	UnaryOperator	&		8976844	0					
ANR	8977023	Identifier	stref		8976844	1					
ANR	8977024	Argument	a_executable		8976844	1					
ANR	8977025	Identifier	a_executable		8976844	0					
ANR	8977026	ExpressionStatement	esp ++	956:24:29803:29808	8976844	7	True				
ANR	8977027	PostIncDecOperationExpression	esp ++		8976844	0					
ANR	8977028	Identifier	esp		8976844	0					
ANR	8977029	IncDec	++		8976844	1					
ANR	8977030	ExpressionStatement	"ref_assign ( esp , & stref )"	957:24:29834:29857	8976844	8	True				
ANR	8977031	CallExpression	"ref_assign ( esp , & stref )"		8976844	0					
ANR	8977032	Callee	ref_assign		8976844	0					
ANR	8977033	Identifier	ref_assign		8976844	0					
ANR	8977034	ArgumentList	esp		8976844	1					
ANR	8977035	Argument	esp		8976844	0					
ANR	8977036	Identifier	esp		8976844	0					
ANR	8977037	Argument	& stref		8976844	1					
ANR	8977038	UnaryOperationExpression	& stref		8976844	0					
ANR	8977039	UnaryOperator	&		8976844	0					
ANR	8977040	Identifier	stref		8976844	1					
ANR	8977041	ReturnStatement	return o_push_estack ;	958:24:29883:29903	8976844	9	True				
ANR	8977042	Identifier	o_push_estack		8976844	0					
ANR	8977043	ElseStatement	else		8976844	0					
ANR	8977044	CompoundStatement		31:27:1207:1207	8976844	0					
ANR	8977045	ExpressionStatement	* stage = 2	960:24:29958:29968	8976844	0	True				
ANR	8977046	AssignmentExpression	* stage = 2		8976844	0		=			
ANR	8977047	UnaryOperationExpression	* stage		8976844	0					
ANR	8977048	UnaryOperator	*		8976844	0					
ANR	8977049	Identifier	stage		8976844	1					
ANR	8977050	PrimaryExpression	2		8976844	1					
ANR	8977051	ExpressionStatement	* cont = 1	961:24:29994:30003	8976844	1	True				
ANR	8977052	AssignmentExpression	* cont = 1		8976844	0		=			
ANR	8977053	UnaryOperationExpression	* cont		8976844	0					
ANR	8977054	UnaryOperator	*		8976844	0					
ANR	8977055	Identifier	cont		8976844	1					
ANR	8977056	PrimaryExpression	1		8976844	1					
ANR	8977057	ExpressionStatement	"body = ialloc_string ( 47 , ""string"" )"	962:24:30029:30063	8976844	2	True				
ANR	8977058	AssignmentExpression	"body = ialloc_string ( 47 , ""string"" )"		8976844	0		=			
ANR	8977059	Identifier	body		8976844	0					
ANR	8977060	CallExpression	"ialloc_string ( 47 , ""string"" )"		8976844	1					
ANR	8977061	Callee	ialloc_string		8976844	0					
ANR	8977062	Identifier	ialloc_string		8976844	0					
ANR	8977063	ArgumentList	47		8976844	1					
ANR	8977064	Argument	47		8976844	0					
ANR	8977065	PrimaryExpression	47		8976844	0					
ANR	8977066	Argument	"""string"""		8976844	1					
ANR	8977067	PrimaryExpression	"""string"""		8976844	0					
ANR	8977068	IfStatement	if ( body == 0 )		8976844	3					
ANR	8977069	Condition	body == 0	963:28:30093:30101	8976844	0	True				
ANR	8977070	EqualityExpression	body == 0		8976844	0		==			
ANR	8977071	Identifier	body		8976844	0					
ANR	8977072	PrimaryExpression	0		8976844	1					
ANR	8977073	ExpressionStatement	return_error ( gs_error_VMerror )	964:28:30132:30162	8976844	1	True				
ANR	8977074	CallExpression	return_error ( gs_error_VMerror )		8976844	0					
ANR	8977075	Callee	return_error		8976844	0					
ANR	8977076	Identifier	return_error		8976844	0					
ANR	8977077	ArgumentList	gs_error_VMerror		8976844	1					
ANR	8977078	Argument	gs_error_VMerror		8976844	0					
ANR	8977079	Identifier	gs_error_VMerror		8976844	0					
ANR	8977080	ExpressionStatement	"memcpy ( body , ""{/DefaultGray /ColorSpace findresource} stopped"" , 47 )"	965:24:30188:30254	8976844	4	True				
ANR	8977081	CallExpression	"memcpy ( body , ""{/DefaultGray /ColorSpace findresource} stopped"" , 47 )"		8976844	0					
ANR	8977082	Callee	memcpy		8976844	0					
ANR	8977083	Identifier	memcpy		8976844	0					
ANR	8977084	ArgumentList	body		8976844	1					
ANR	8977085	Argument	body		8976844	0					
ANR	8977086	Identifier	body		8976844	0					
ANR	8977087	Argument	"""{/DefaultGray /ColorSpace findresource} stopped"""		8976844	1					
ANR	8977088	PrimaryExpression	"""{/DefaultGray /ColorSpace findresource} stopped"""		8976844	0					
ANR	8977089	Argument	47		8976844	2					
ANR	8977090	PrimaryExpression	47		8976844	0					
ANR	8977091	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 47 , body )"	966:24:30280:30333	8976844	5	True				
ANR	8977092	CallExpression	"make_string ( & stref , a_all | icurrent_space , 47 , body )"		8976844	0					
ANR	8977093	Callee	make_string		8976844	0					
ANR	8977094	Identifier	make_string		8976844	0					
ANR	8977095	ArgumentList	& stref		8976844	1					
ANR	8977096	Argument	& stref		8976844	0					
ANR	8977097	UnaryOperationExpression	& stref		8976844	0					
ANR	8977098	UnaryOperator	&		8976844	0					
ANR	8977099	Identifier	stref		8976844	1					
ANR	8977100	Argument	a_all | icurrent_space		8976844	1					
ANR	8977101	InclusiveOrExpression	a_all | icurrent_space		8976844	0		|			
ANR	8977102	Identifier	a_all		8976844	0					
ANR	8977103	Identifier	icurrent_space		8976844	1					
ANR	8977104	Argument	47		8976844	2					
ANR	8977105	PrimaryExpression	47		8976844	0					
ANR	8977106	Argument	body		8976844	3					
ANR	8977107	Identifier	body		8976844	0					
ANR	8977108	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	967:24:30359:30392	8976844	6	True				
ANR	8977109	CallExpression	"r_set_attrs ( & stref , a_executable )"		8976844	0					
ANR	8977110	Callee	r_set_attrs		8976844	0					
ANR	8977111	Identifier	r_set_attrs		8976844	0					
ANR	8977112	ArgumentList	& stref		8976844	1					
ANR	8977113	Argument	& stref		8976844	0					
ANR	8977114	UnaryOperationExpression	& stref		8976844	0					
ANR	8977115	UnaryOperator	&		8976844	0					
ANR	8977116	Identifier	stref		8976844	1					
ANR	8977117	Argument	a_executable		8976844	1					
ANR	8977118	Identifier	a_executable		8976844	0					
ANR	8977119	ExpressionStatement	esp ++	968:24:30418:30423	8976844	7	True				
ANR	8977120	PostIncDecOperationExpression	esp ++		8976844	0					
ANR	8977121	Identifier	esp		8976844	0					
ANR	8977122	IncDec	++		8976844	1					
ANR	8977123	ExpressionStatement	"ref_assign ( esp , & stref )"	969:24:30449:30472	8976844	8	True				
ANR	8977124	CallExpression	"ref_assign ( esp , & stref )"		8976844	0					
ANR	8977125	Callee	ref_assign		8976844	0					
ANR	8977126	Identifier	ref_assign		8976844	0					
ANR	8977127	ArgumentList	esp		8976844	1					
ANR	8977128	Argument	esp		8976844	0					
ANR	8977129	Identifier	esp		8976844	0					
ANR	8977130	Argument	& stref		8976844	1					
ANR	8977131	UnaryOperationExpression	& stref		8976844	0					
ANR	8977132	UnaryOperator	&		8976844	0					
ANR	8977133	Identifier	stref		8976844	1					
ANR	8977134	ReturnStatement	return o_push_estack ;	970:24:30498:30518	8976844	9	True				
ANR	8977135	Identifier	o_push_estack		8976844	0					
ANR	8977136	BreakStatement	break ;	972:20:30562:30567	8976844	5	True				
ANR	8977137	Label	case 1 :	975:12:30634:30640	8976844	2	True				
ANR	8977138	ExpressionStatement	pcs = gs_cspace_new_DeviceGray ( imemory )	976:16:30658:30697	8976844	3	True				
ANR	8977139	AssignmentExpression	pcs = gs_cspace_new_DeviceGray ( imemory )		8976844	0		=			
ANR	8977140	Identifier	pcs		8976844	0					
ANR	8977141	CallExpression	gs_cspace_new_DeviceGray ( imemory )		8976844	1					
ANR	8977142	Callee	gs_cspace_new_DeviceGray		8976844	0					
ANR	8977143	Identifier	gs_cspace_new_DeviceGray		8976844	0					
ANR	8977144	ArgumentList	imemory		8976844	1					
ANR	8977145	Argument	imemory		8976844	0					
ANR	8977146	Identifier	imemory		8976844	0					
ANR	8977147	IfStatement	if ( pcs == NULL )		8976844	4					
ANR	8977148	Condition	pcs == NULL	977:20:30719:30729	8976844	0	True				
ANR	8977149	EqualityExpression	pcs == NULL		8976844	0		==			
ANR	8977150	Identifier	pcs		8976844	0					
ANR	8977151	Identifier	NULL		8976844	1					
ANR	8977152	ExpressionStatement	return_error ( gs_error_VMerror )	978:20:30752:30782	8976844	1	True				
ANR	8977153	CallExpression	return_error ( gs_error_VMerror )		8976844	0					
ANR	8977154	Callee	return_error		8976844	0					
ANR	8977155	Identifier	return_error		8976844	0					
ANR	8977156	ArgumentList	gs_error_VMerror		8976844	1					
ANR	8977157	Argument	gs_error_VMerror		8976844	0					
ANR	8977158	Identifier	gs_error_VMerror		8976844	0					
ANR	8977159	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	979:16:30800:30833	8976844	5	True				
ANR	8977160	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8976844	0		=			
ANR	8977161	Identifier	code		8976844	0					
ANR	8977162	CallExpression	"gs_setcolorspace ( igs , pcs )"		8976844	1					
ANR	8977163	Callee	gs_setcolorspace		8976844	0					
ANR	8977164	Identifier	gs_setcolorspace		8976844	0					
ANR	8977165	ArgumentList	igs		8976844	1					
ANR	8977166	Argument	igs		8976844	0					
ANR	8977167	Identifier	igs		8976844	0					
ANR	8977168	Argument	pcs		8976844	1					
ANR	8977169	Identifier	pcs		8976844	0					
ANR	8977170	IfStatement	if ( code >= 0 )		8976844	6					
ANR	8977171	Condition	code >= 0	980:20:30855:30863	8976844	0	True				
ANR	8977172	RelationalExpression	code >= 0		8976844	0		>=			
ANR	8977173	Identifier	code		8976844	0					
ANR	8977174	PrimaryExpression	0		8976844	1					
ANR	8977175	CompoundStatement		53:20:2163:2213	8976844	1					
ANR	8977176	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	981:20:30888:30938	8976844	0	True				
ANR	8977177	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		8976844	0					
ANR	8977178	IdentifierDeclType	gs_client_color *		8976844	0					
ANR	8977179	Identifier	pcc		8976844	1					
ANR	8977180	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		8976844	2		=			
ANR	8977181	Identifier	pcc		8976844	0					
ANR	8977182	CallExpression	gs_currentcolor_inline ( igs )		8976844	1					
ANR	8977183	Callee	gs_currentcolor_inline		8976844	0					
ANR	8977184	Identifier	gs_currentcolor_inline		8976844	0					
ANR	8977185	ArgumentList	igs		8976844	1					
ANR	8977186	Argument	igs		8976844	0					
ANR	8977187	Identifier	igs		8976844	0					
ANR	8977188	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	983:20:30961:30991	8976844	1	True				
ANR	8977189	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		8976844	0					
ANR	8977190	Callee	cs_adjust_color_count		8976844	0					
ANR	8977191	Identifier	cs_adjust_color_count		8976844	0					
ANR	8977192	ArgumentList	igs		8976844	1					
ANR	8977193	Argument	igs		8976844	0					
ANR	8977194	Identifier	igs		8976844	0					
ANR	8977195	Argument	- 1		8976844	1					
ANR	8977196	UnaryOperationExpression	- 1		8976844	0					
ANR	8977197	UnaryOperator	-		8976844	0					
ANR	8977198	PrimaryExpression	1		8976844	1					
ANR	8977199	ExpressionStatement	pcc -> paint . values [ 0 ] = ( 0 )	984:20:31042:31068	8976844	2	True				
ANR	8977200	AssignmentExpression	pcc -> paint . values [ 0 ] = ( 0 )		8976844	0		=			
ANR	8977201	ArrayIndexing	pcc -> paint . values [ 0 ]		8976844	0					
ANR	8977202	MemberAccess	pcc -> paint . values		8976844	0					
ANR	8977203	PtrMemberAccess	pcc -> paint		8976844	0					
ANR	8977204	Identifier	pcc		8976844	0					
ANR	8977205	Identifier	paint		8976844	1					
ANR	8977206	Identifier	values		8976844	1					
ANR	8977207	PrimaryExpression	0		8976844	1					
ANR	8977208	PrimaryExpression	0		8976844	1					
ANR	8977209	ExpressionStatement	pcc -> pattern = 0	985:20:31090:31106	8976844	3	True				
ANR	8977210	AssignmentExpression	pcc -> pattern = 0		8976844	0		=			
ANR	8977211	PtrMemberAccess	pcc -> pattern		8976844	0					
ANR	8977212	Identifier	pcc		8976844	0					
ANR	8977213	Identifier	pattern		8976844	1					
ANR	8977214	PrimaryExpression	0		8976844	1					
ANR	8977215	ExpressionStatement	gx_unset_dev_color ( igs )	986:20:31142:31165	8976844	4	True				
ANR	8977216	CallExpression	gx_unset_dev_color ( igs )		8976844	0					
ANR	8977217	Callee	gx_unset_dev_color		8976844	0					
ANR	8977218	Identifier	gx_unset_dev_color		8976844	0					
ANR	8977219	ArgumentList	igs		8976844	1					
ANR	8977220	Argument	igs		8976844	0					
ANR	8977221	Identifier	igs		8976844	0					
ANR	8977222	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	988:16:31201:31243	8976844	7	True				
ANR	8977223	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		8976844	0					
ANR	8977224	Callee	rc_decrement_only_cs		8976844	0					
ANR	8977225	Identifier	rc_decrement_only_cs		8976844	0					
ANR	8977226	ArgumentList	pcs		8976844	1					
ANR	8977227	Argument	pcs		8976844	0					
ANR	8977228	Identifier	pcs		8976844	0					
ANR	8977229	Argument	"""zsetdevcspace"""		8976844	1					
ANR	8977230	PrimaryExpression	"""zsetdevcspace"""		8976844	0					
ANR	8977231	ExpressionStatement	* cont = 0	989:16:31261:31270	8976844	8	True				
ANR	8977232	AssignmentExpression	* cont = 0		8976844	0		=			
ANR	8977233	UnaryOperationExpression	* cont		8976844	0					
ANR	8977234	UnaryOperator	*		8976844	0					
ANR	8977235	Identifier	cont		8976844	1					
ANR	8977236	PrimaryExpression	0		8976844	1					
ANR	8977237	ExpressionStatement	* stage = 0	990:16:31288:31298	8976844	9	True				
ANR	8977238	AssignmentExpression	* stage = 0		8976844	0		=			
ANR	8977239	UnaryOperationExpression	* stage		8976844	0					
ANR	8977240	UnaryOperator	*		8976844	0					
ANR	8977241	Identifier	stage		8976844	1					
ANR	8977242	PrimaryExpression	0		8976844	1					
ANR	8977243	BreakStatement	break ;	991:16:31316:31321	8976844	10	True				
ANR	8977244	Label	case 2 :	992:12:31335:31341	8976844	11	True				
ANR	8977245	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8976844	12					
ANR	8977246	Condition	"! r_has_type ( op , t_boolean )"	993:20:31363:31388	8976844	0	True				
ANR	8977247	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8976844	0					
ANR	8977248	UnaryOperator	!		8976844	0					
ANR	8977249	CallExpression	"r_has_type ( op , t_boolean )"		8976844	1					
ANR	8977250	Callee	r_has_type		8976844	0					
ANR	8977251	Identifier	r_has_type		8976844	0					
ANR	8977252	ArgumentList	op		8976844	1					
ANR	8977253	Argument	op		8976844	0					
ANR	8977254	Identifier	op		8976844	0					
ANR	8977255	Argument	t_boolean		8976844	1					
ANR	8977256	Identifier	t_boolean		8976844	0					
ANR	8977257	ExpressionStatement	return_error ( gs_error_typecheck )	994:20:31411:31443	8976844	1	True				
ANR	8977258	CallExpression	return_error ( gs_error_typecheck )		8976844	0					
ANR	8977259	Callee	return_error		8976844	0					
ANR	8977260	Identifier	return_error		8976844	0					
ANR	8977261	ArgumentList	gs_error_typecheck		8976844	1					
ANR	8977262	Argument	gs_error_typecheck		8976844	0					
ANR	8977263	Identifier	gs_error_typecheck		8976844	0					
ANR	8977264	IfStatement	if ( op -> value . boolval )		8976844	13					
ANR	8977265	Condition	op -> value . boolval	995:20:31465:31481	8976844	0	True				
ANR	8977266	MemberAccess	op -> value . boolval		8976844	0					
ANR	8977267	PtrMemberAccess	op -> value		8976844	0					
ANR	8977268	Identifier	op		8976844	0					
ANR	8977269	Identifier	value		8976844	1					
ANR	8977270	Identifier	boolval		8976844	1					
ANR	8977271	CompoundStatement		67:39:2759:2759	8976844	1					
ANR	8977272	ExpressionStatement	pop ( 1 )	999:20:31648:31654	8976844	0	True				
ANR	8977273	CallExpression	pop ( 1 )		8976844	0					
ANR	8977274	Callee	pop		8976844	0					
ANR	8977275	Identifier	pop		8976844	0					
ANR	8977276	ArgumentList	1		8976844	1					
ANR	8977277	Argument	1		8976844	0					
ANR	8977278	PrimaryExpression	1		8976844	0					
ANR	8977279	ExpressionStatement	* stage = 1	1000:20:31676:31686	8976844	1	True				
ANR	8977280	AssignmentExpression	* stage = 1		8976844	0		=			
ANR	8977281	UnaryOperationExpression	* stage		8976844	0					
ANR	8977282	UnaryOperator	*		8976844	0					
ANR	8977283	Identifier	stage		8976844	1					
ANR	8977284	PrimaryExpression	1		8976844	1					
ANR	8977285	BreakStatement	break ;	1001:20:31708:31713	8976844	2	True				
ANR	8977286	ExpressionStatement	pop ( 1 )	1003:16:31749:31755	8976844	14	True				
ANR	8977287	CallExpression	pop ( 1 )		8976844	0					
ANR	8977288	Callee	pop		8976844	0					
ANR	8977289	Identifier	pop		8976844	0					
ANR	8977290	ArgumentList	1		8976844	1					
ANR	8977291	Argument	1		8976844	0					
ANR	8977292	PrimaryExpression	1		8976844	0					
ANR	8977293	ExpressionStatement	* cont = 1	1004:16:31773:31782	8976844	15	True				
ANR	8977294	AssignmentExpression	* cont = 1		8976844	0		=			
ANR	8977295	UnaryOperationExpression	* cont		8976844	0					
ANR	8977296	UnaryOperator	*		8976844	0					
ANR	8977297	Identifier	cont		8976844	1					
ANR	8977298	PrimaryExpression	1		8976844	1					
ANR	8977299	ExpressionStatement	* stage = 3	1005:16:31800:31810	8976844	16	True				
ANR	8977300	AssignmentExpression	* stage = 3		8976844	0		=			
ANR	8977301	UnaryOperationExpression	* stage		8976844	0					
ANR	8977302	UnaryOperator	*		8976844	0					
ANR	8977303	Identifier	stage		8976844	1					
ANR	8977304	PrimaryExpression	3		8976844	1					
ANR	8977305	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1006:16:31828:31865	8976844	17	True				
ANR	8977306	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8976844	0		=			
ANR	8977307	Identifier	code		8976844	0					
ANR	8977308	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8976844	1					
ANR	8977309	Callee	setcolorspace_nosubst		8976844	0					
ANR	8977310	Identifier	setcolorspace_nosubst		8976844	0					
ANR	8977311	ArgumentList	i_ctx_p		8976844	1					
ANR	8977312	Argument	i_ctx_p		8976844	0					
ANR	8977313	Identifier	i_ctx_p		8976844	0					
ANR	8977314	IfStatement	if ( code != 0 )		8976844	18					
ANR	8977315	Condition	code != 0	1007:20:31887:31895	8976844	0	True				
ANR	8977316	EqualityExpression	code != 0		8976844	0		!=			
ANR	8977317	Identifier	code		8976844	0					
ANR	8977318	PrimaryExpression	0		8976844	1					
ANR	8977319	ReturnStatement	return code ;	1008:20:31918:31929	8976844	1	True				
ANR	8977320	Identifier	code		8976844	0					
ANR	8977321	BreakStatement	break ;	1009:16:31947:31952	8976844	19	True				
ANR	8977322	Label	case 3 :	1010:12:31966:31972	8976844	20	True				
ANR	8977323	ExpressionStatement	* cont = 0	1015:16:32183:32192	8976844	21	True				
ANR	8977324	AssignmentExpression	* cont = 0		8976844	0		=			
ANR	8977325	UnaryOperationExpression	* cont		8976844	0					
ANR	8977326	UnaryOperator	*		8976844	0					
ANR	8977327	Identifier	cont		8976844	1					
ANR	8977328	PrimaryExpression	0		8976844	1					
ANR	8977329	ExpressionStatement	* stage = 0	1016:16:32210:32220	8976844	22	True				
ANR	8977330	AssignmentExpression	* stage = 0		8976844	0		=			
ANR	8977331	UnaryOperationExpression	* stage		8976844	0					
ANR	8977332	UnaryOperator	*		8976844	0					
ANR	8977333	Identifier	stage		8976844	1					
ANR	8977334	PrimaryExpression	0		8976844	1					
ANR	8977335	BreakStatement	break ;	1017:16:32238:32243	8976844	23	True				
ANR	8977336	Label	case 4 :	1018:12:32257:32263	8976844	24	True				
ANR	8977337	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8976844	25					
ANR	8977338	Condition	"! r_has_type ( op , t_boolean )"	1025:20:32684:32709	8976844	0	True				
ANR	8977339	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8976844	0					
ANR	8977340	UnaryOperator	!		8976844	0					
ANR	8977341	CallExpression	"r_has_type ( op , t_boolean )"		8976844	1					
ANR	8977342	Callee	r_has_type		8976844	0					
ANR	8977343	Identifier	r_has_type		8976844	0					
ANR	8977344	ArgumentList	op		8976844	1					
ANR	8977345	Argument	op		8976844	0					
ANR	8977346	Identifier	op		8976844	0					
ANR	8977347	Argument	t_boolean		8976844	1					
ANR	8977348	Identifier	t_boolean		8976844	0					
ANR	8977349	ExpressionStatement	return_error ( gs_error_typecheck )	1026:20:32732:32764	8976844	1	True				
ANR	8977350	CallExpression	return_error ( gs_error_typecheck )		8976844	0					
ANR	8977351	Callee	return_error		8976844	0					
ANR	8977352	Identifier	return_error		8976844	0					
ANR	8977353	ArgumentList	gs_error_typecheck		8976844	1					
ANR	8977354	Argument	gs_error_typecheck		8976844	0					
ANR	8977355	Identifier	gs_error_typecheck		8976844	0					
ANR	8977356	ExpressionStatement	pop ( 1 )	1027:16:32782:32788	8976844	26	True				
ANR	8977357	CallExpression	pop ( 1 )		8976844	0					
ANR	8977358	Callee	pop		8976844	0					
ANR	8977359	Identifier	pop		8976844	0					
ANR	8977360	ArgumentList	1		8976844	1					
ANR	8977361	Argument	1		8976844	0					
ANR	8977362	PrimaryExpression	1		8976844	0					
ANR	8977363	ExpressionStatement	* stage = 1	1028:16:32806:32816	8976844	27	True				
ANR	8977364	AssignmentExpression	* stage = 1		8976844	0		=			
ANR	8977365	UnaryOperationExpression	* stage		8976844	0					
ANR	8977366	UnaryOperator	*		8976844	0					
ANR	8977367	Identifier	stage		8976844	1					
ANR	8977368	PrimaryExpression	1		8976844	1					
ANR	8977369	ExpressionStatement	* cont = 1	1029:16:32834:32843	8976844	28	True				
ANR	8977370	AssignmentExpression	* cont = 1		8976844	0		=			
ANR	8977371	UnaryOperationExpression	* cont		8976844	0					
ANR	8977372	UnaryOperator	*		8976844	0					
ANR	8977373	Identifier	cont		8976844	1					
ANR	8977374	PrimaryExpression	1		8976844	1					
ANR	8977375	IfStatement	if ( op -> value . boolval )		8976844	29					
ANR	8977376	Condition	op -> value . boolval	1030:20:32865:32881	8976844	0	True				
ANR	8977377	MemberAccess	op -> value . boolval		8976844	0					
ANR	8977378	PtrMemberAccess	op -> value		8976844	0					
ANR	8977379	Identifier	op		8976844	0					
ANR	8977380	Identifier	value		8976844	1					
ANR	8977381	Identifier	boolval		8976844	1					
ANR	8977382	CompoundStatement		102:39:4159:4159	8976844	1					
ANR	8977383	ExpressionStatement	* stage = 5	1031:20:32906:32916	8976844	0	True				
ANR	8977384	AssignmentExpression	* stage = 5		8976844	0		=			
ANR	8977385	UnaryOperationExpression	* stage		8976844	0					
ANR	8977386	UnaryOperator	*		8976844	0					
ANR	8977387	Identifier	stage		8976844	1					
ANR	8977388	PrimaryExpression	5		8976844	1					
ANR	8977389	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1032:20:32938:32975	8976844	1	True				
ANR	8977390	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8976844	0		=			
ANR	8977391	Identifier	code		8976844	0					
ANR	8977392	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8976844	1					
ANR	8977393	Callee	setcolorspace_nosubst		8976844	0					
ANR	8977394	Identifier	setcolorspace_nosubst		8976844	0					
ANR	8977395	ArgumentList	i_ctx_p		8976844	1					
ANR	8977396	Argument	i_ctx_p		8976844	0					
ANR	8977397	Identifier	i_ctx_p		8976844	0					
ANR	8977398	IfStatement	if ( code != 0 )		8976844	2					
ANR	8977399	Condition	code != 0	1033:24:33001:33009	8976844	0	True				
ANR	8977400	EqualityExpression	code != 0		8976844	0		!=			
ANR	8977401	Identifier	code		8976844	0					
ANR	8977402	PrimaryExpression	0		8976844	1					
ANR	8977403	ReturnStatement	return code ;	1034:24:33036:33047	8976844	1	True				
ANR	8977404	Identifier	code		8976844	0					
ANR	8977405	BreakStatement	break ;	1036:16:33083:33088	8976844	30	True				
ANR	8977406	Label	case 5 :	1037:12:33102:33108	8976844	31	True				
ANR	8977407	ExpressionStatement	* stage = 1	1042:16:33373:33383	8976844	32	True				
ANR	8977408	AssignmentExpression	* stage = 1		8976844	0		=			
ANR	8977409	UnaryOperationExpression	* stage		8976844	0					
ANR	8977410	UnaryOperator	*		8976844	0					
ANR	8977411	Identifier	stage		8976844	1					
ANR	8977412	PrimaryExpression	1		8976844	1					
ANR	8977413	ExpressionStatement	* cont = 1	1043:16:33401:33410	8976844	33	True				
ANR	8977414	AssignmentExpression	* cont = 1		8976844	0		=			
ANR	8977415	UnaryOperationExpression	* cont		8976844	0					
ANR	8977416	UnaryOperator	*		8976844	0					
ANR	8977417	Identifier	cont		8976844	1					
ANR	8977418	PrimaryExpression	1		8976844	1					
ANR	8977419	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1044:16:33428:33462	8976844	34	True				
ANR	8977420	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		8976844	0		=			
ANR	8977421	Identifier	code		8976844	0					
ANR	8977422	CallExpression	zincludecolorspace ( i_ctx_p )		8976844	1					
ANR	8977423	Callee	zincludecolorspace		8976844	0					
ANR	8977424	Identifier	zincludecolorspace		8976844	0					
ANR	8977425	ArgumentList	i_ctx_p		8976844	1					
ANR	8977426	Argument	i_ctx_p		8976844	0					
ANR	8977427	Identifier	i_ctx_p		8976844	0					
ANR	8977428	IfStatement	if ( code != 0 )		8976844	35					
ANR	8977429	Condition	code != 0	1045:20:33484:33492	8976844	0	True				
ANR	8977430	EqualityExpression	code != 0		8976844	0		!=			
ANR	8977431	Identifier	code		8976844	0					
ANR	8977432	PrimaryExpression	0		8976844	1					
ANR	8977433	ReturnStatement	return code ;	1046:20:33515:33526	8976844	1	True				
ANR	8977434	Identifier	code		8976844	0					
ANR	8977435	BreakStatement	break ;	1047:16:33544:33549	8976844	36	True				
ANR	8977436	Condition	* stage	1049:13:33574:33579	8976844	1	True				
ANR	8977437	UnaryOperationExpression	* stage		8976844	0					
ANR	8977438	UnaryOperator	*		8976844	0					
ANR	8977439	Identifier	stage		8976844	1					
ANR	8977440	ReturnStatement	return code ;	1050:4:33587:33598	8976844	5	True				
ANR	8977441	Identifier	code		8976844	0					
ANR	8977442	ReturnType	static int		8976844	1					
ANR	8977443	Identifier	setgrayspace		8976844	2					
ANR	8977444	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8976844	3					
ANR	8977445	Parameter	i_ctx_t * i_ctx_p	928:24:28660:28676	8976844	0	True				
ANR	8977446	ParameterType	i_ctx_t *		8976844	0					
ANR	8977447	Identifier	i_ctx_p		8976844	1					
ANR	8977448	Parameter	ref * r	928:43:28679:28684	8976844	1	True				
ANR	8977449	ParameterType	ref *		8976844	0					
ANR	8977450	Identifier	r		8976844	1					
ANR	8977451	Parameter	int * stage	928:51:28687:28696	8976844	2	True				
ANR	8977452	ParameterType	int *		8976844	0					
ANR	8977453	Identifier	stage		8976844	1					
ANR	8977454	Parameter	int * cont	928:63:28699:28707	8976844	3	True				
ANR	8977455	ParameterType	int *		8976844	0					
ANR	8977456	Identifier	cont		8976844	1					
ANR	8977457	Parameter	int CIESubst	928:74:28710:28721	8976844	4	True				
ANR	8977458	ParameterType	int		8976844	0					
ANR	8977459	Identifier	CIESubst		8976844	1					
ANR	8977460	CFGEntryNode	ENTRY		8976844		True				
ANR	8977461	CFGExitNode	EXIT		8976844		True				
ANR	8977462	Symbol	esp		8976844						
ANR	8977463	Symbol	* op		8976844						
ANR	8977464	Symbol	pcc -> pattern		8976844						
ANR	8977465	Symbol	gs_cspace_new_DeviceGray		8976844						
ANR	8977466	Symbol	body		8976844						
ANR	8977467	Symbol	op -> value . boolval		8976844						
ANR	8977468	Symbol	osp		8976844						
ANR	8977469	Symbol	* istate		8976844						
ANR	8977470	Symbol	r_has_type		8976844						
ANR	8977471	Symbol	igs		8976844						
ANR	8977472	Symbol	pcc -> paint		8976844						
ANR	8977473	Symbol	stref		8976844						
ANR	8977474	Symbol	* pcc -> paint		8976844						
ANR	8977475	Symbol	imemory		8976844						
ANR	8977476	Symbol	cont		8976844						
ANR	8977477	Symbol	NULL		8976844						
ANR	8977478	Symbol	dict_find_string		8976844						
ANR	8977479	Symbol	* * pcc		8976844						
ANR	8977480	Symbol	istate -> use_cie_color . value		8976844						
ANR	8977481	Symbol	t_boolean		8976844						
ANR	8977482	Symbol	zincludecolorspace		8976844						
ANR	8977483	Symbol	i_ctx_p		8976844						
ANR	8977484	Symbol	& nosubst		8976844						
ANR	8977485	Symbol	a_executable		8976844						
ANR	8977486	Symbol	gs_currentcolor_inline		8976844						
ANR	8977487	Symbol	* pcc		8976844						
ANR	8977488	Symbol	systemdict		8976844						
ANR	8977489	Symbol	* pcc -> paint . values		8976844						
ANR	8977490	Symbol	a_all		8976844						
ANR	8977491	Symbol	code		8976844						
ANR	8977492	Symbol	* nosubst		8976844						
ANR	8977493	Symbol	& stref		8976844						
ANR	8977494	Symbol	gs_setcolorspace		8976844						
ANR	8977495	Symbol	istate -> use_cie_color . value . boolval		8976844						
ANR	8977496	Symbol	ialloc_string		8976844						
ANR	8977497	Symbol	pcc -> paint . values		8976844						
ANR	8977498	Symbol	pcc		8976844						
ANR	8977499	Symbol	gs_error_typecheck		8976844						
ANR	8977500	Symbol	op -> value		8976844						
ANR	8977501	Symbol	CIESubst		8976844						
ANR	8977502	Symbol	nosubst -> value . boolval		8976844						
ANR	8977503	Symbol	o_push_estack		8976844						
ANR	8977504	Symbol	op		8976844						
ANR	8977505	Symbol	pcs		8976844						
ANR	8977506	Symbol	nosubst		8976844						
ANR	8977507	Symbol	* stage		8976844						
ANR	8977508	Symbol	nosubst -> value		8976844						
ANR	8977509	Symbol	icurrent_space		8976844						
ANR	8977510	Symbol	gs_error_VMerror		8976844						
ANR	8977511	Symbol	r		8976844						
ANR	8977512	Symbol	stage		8976844						
ANR	8977513	Symbol	istate -> use_cie_color		8976844						
ANR	8977514	Symbol	* cont		8976844						
ANR	8977515	Symbol	setcolorspace_nosubst		8976844						
ANR	8977516	Symbol	istate		8976844						
ANR	8977517	Function	graydomain	1052:0:33602:33715							
ANR	8977518	FunctionDef	"graydomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8977517	0					
ANR	8977519	CompoundStatement		1053:0:33667:33715	8977517	0					
ANR	8977520	ExpressionStatement	ptr [ 0 ] = 0	1054:4:33673:33683	8977517	0	True				
ANR	8977521	AssignmentExpression	ptr [ 0 ] = 0		8977517	0		=			
ANR	8977522	ArrayIndexing	ptr [ 0 ]		8977517	0					
ANR	8977523	Identifier	ptr		8977517	0					
ANR	8977524	PrimaryExpression	0		8977517	1					
ANR	8977525	PrimaryExpression	0		8977517	1					
ANR	8977526	ExpressionStatement	ptr [ 1 ] = 1	1055:4:33689:33699	8977517	1	True				
ANR	8977527	AssignmentExpression	ptr [ 1 ] = 1		8977517	0		=			
ANR	8977528	ArrayIndexing	ptr [ 1 ]		8977517	0					
ANR	8977529	Identifier	ptr		8977517	0					
ANR	8977530	PrimaryExpression	1		8977517	1					
ANR	8977531	PrimaryExpression	1		8977517	1					
ANR	8977532	ReturnStatement	return 0 ;	1056:4:33705:33713	8977517	2	True				
ANR	8977533	PrimaryExpression	0		8977517	0					
ANR	8977534	ReturnType	static int		8977517	1					
ANR	8977535	Identifier	graydomain		8977517	2					
ANR	8977536	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8977517	3					
ANR	8977537	Parameter	i_ctx_t * i_ctx_p	1052:22:33624:33640	8977517	0	True				
ANR	8977538	ParameterType	i_ctx_t *		8977517	0					
ANR	8977539	Identifier	i_ctx_p		8977517	1					
ANR	8977540	Parameter	ref * space	1052:41:33643:33652	8977517	1	True				
ANR	8977541	ParameterType	ref *		8977517	0					
ANR	8977542	Identifier	space		8977517	1					
ANR	8977543	Parameter	float * ptr	1052:53:33655:33664	8977517	2	True				
ANR	8977544	ParameterType	float *		8977517	0					
ANR	8977545	Identifier	ptr		8977517	1					
ANR	8977546	CFGEntryNode	ENTRY		8977517		True				
ANR	8977547	CFGExitNode	EXIT		8977517		True				
ANR	8977548	Symbol	i_ctx_p		8977517						
ANR	8977549	Symbol	* ptr		8977517						
ANR	8977550	Symbol	space		8977517						
ANR	8977551	Symbol	ptr		8977517						
ANR	8977552	Function	grayrange	1058:0:33717:33829							
ANR	8977553	FunctionDef	"grayrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8977552	0					
ANR	8977554	CompoundStatement		1059:0:33781:33829	8977552	0					
ANR	8977555	ExpressionStatement	ptr [ 0 ] = 0	1060:4:33787:33797	8977552	0	True				
ANR	8977556	AssignmentExpression	ptr [ 0 ] = 0		8977552	0		=			
ANR	8977557	ArrayIndexing	ptr [ 0 ]		8977552	0					
ANR	8977558	Identifier	ptr		8977552	0					
ANR	8977559	PrimaryExpression	0		8977552	1					
ANR	8977560	PrimaryExpression	0		8977552	1					
ANR	8977561	ExpressionStatement	ptr [ 1 ] = 1	1061:4:33803:33813	8977552	1	True				
ANR	8977562	AssignmentExpression	ptr [ 1 ] = 1		8977552	0		=			
ANR	8977563	ArrayIndexing	ptr [ 1 ]		8977552	0					
ANR	8977564	Identifier	ptr		8977552	0					
ANR	8977565	PrimaryExpression	1		8977552	1					
ANR	8977566	PrimaryExpression	1		8977552	1					
ANR	8977567	ReturnStatement	return 0 ;	1062:4:33819:33827	8977552	2	True				
ANR	8977568	PrimaryExpression	0		8977552	0					
ANR	8977569	ReturnType	static int		8977552	1					
ANR	8977570	Identifier	grayrange		8977552	2					
ANR	8977571	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8977552	3					
ANR	8977572	Parameter	i_ctx_t * i_ctx_p	1058:21:33738:33754	8977552	0	True				
ANR	8977573	ParameterType	i_ctx_t *		8977552	0					
ANR	8977574	Identifier	i_ctx_p		8977552	1					
ANR	8977575	Parameter	ref * space	1058:40:33757:33766	8977552	1	True				
ANR	8977576	ParameterType	ref *		8977552	0					
ANR	8977577	Identifier	space		8977552	1					
ANR	8977578	Parameter	float * ptr	1058:52:33769:33778	8977552	2	True				
ANR	8977579	ParameterType	float *		8977552	0					
ANR	8977580	Identifier	ptr		8977552	1					
ANR	8977581	CFGEntryNode	ENTRY		8977552		True				
ANR	8977582	CFGExitNode	EXIT		8977552		True				
ANR	8977583	Symbol	i_ctx_p		8977552						
ANR	8977584	Symbol	* ptr		8977552						
ANR	8977585	Symbol	space		8977552						
ANR	8977586	Symbol	ptr		8977552						
ANR	8977587	Function	graybasecolor	1070:0:34190:35804							
ANR	8977588	FunctionDef	"graybasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8977587	0					
ANR	8977589	CompoundStatement		1071:0:34297:35804	8977587	0					
ANR	8977590	IdentifierDeclStatement	os_ptr op = osp ;	1072:4:34303:34318	8977587	0	True				
ANR	8977591	IdentifierDecl	op = osp		8977587	0					
ANR	8977592	IdentifierDeclType	os_ptr		8977587	0					
ANR	8977593	Identifier	op		8977587	1					
ANR	8977594	AssignmentExpression	op = osp		8977587	2		=			
ANR	8977595	Identifier	osp		8977587	0					
ANR	8977596	Identifier	osp		8977587	1					
ANR	8977597	IdentifierDeclStatement	"float Gray , RGB [ 3 ] ;"	1073:4:34324:34342	8977587	1	True				
ANR	8977598	IdentifierDecl	Gray		8977587	0					
ANR	8977599	IdentifierDeclType	float		8977587	0					
ANR	8977600	Identifier	Gray		8977587	1					
ANR	8977601	IdentifierDecl	RGB [ 3 ]		8977587	1					
ANR	8977602	IdentifierDeclType	float [ 3 ]		8977587	0					
ANR	8977603	Identifier	RGB		8977587	1					
ANR	8977604	PrimaryExpression	3		8977587	2					
ANR	8977605	ExpressionStatement	* cont = 0	1075:4:34349:34358	8977587	2	True				
ANR	8977606	AssignmentExpression	* cont = 0		8977587	0		=			
ANR	8977607	UnaryOperationExpression	* cont		8977587	0					
ANR	8977608	UnaryOperator	*		8977587	0					
ANR	8977609	Identifier	cont		8977587	1					
ANR	8977610	PrimaryExpression	0		8977587	1					
ANR	8977611	ExpressionStatement	* stage = 0	1076:4:34364:34374	8977587	3	True				
ANR	8977612	AssignmentExpression	* stage = 0		8977587	0		=			
ANR	8977613	UnaryOperationExpression	* stage		8977587	0					
ANR	8977614	UnaryOperator	*		8977587	0					
ANR	8977615	Identifier	stage		8977587	1					
ANR	8977616	PrimaryExpression	0		8977587	1					
ANR	8977617	ExpressionStatement	check_op ( 1 )	1077:4:34380:34391	8977587	4	True				
ANR	8977618	CallExpression	check_op ( 1 )		8977587	0					
ANR	8977619	Callee	check_op		8977587	0					
ANR	8977620	Identifier	check_op		8977587	0					
ANR	8977621	ArgumentList	1		8977587	1					
ANR	8977622	Argument	1		8977587	0					
ANR	8977623	PrimaryExpression	1		8977587	0					
ANR	8977624	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8977587	5					
ANR	8977625	Condition	"! r_has_type ( op , t_integer )"	1078:8:34401:34426	8977587	0	True				
ANR	8977626	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8977587	0					
ANR	8977627	UnaryOperator	!		8977587	0					
ANR	8977628	CallExpression	"r_has_type ( op , t_integer )"		8977587	1					
ANR	8977629	Callee	r_has_type		8977587	0					
ANR	8977630	Identifier	r_has_type		8977587	0					
ANR	8977631	ArgumentList	op		8977587	1					
ANR	8977632	Argument	op		8977587	0					
ANR	8977633	Identifier	op		8977587	0					
ANR	8977634	Argument	t_integer		8977587	1					
ANR	8977635	Identifier	t_integer		8977587	0					
ANR	8977636	CompoundStatement		8:36:131:131	8977587	1					
ANR	8977637	IfStatement	"if ( r_has_type ( op , t_real ) )"		8977587	0					
ANR	8977638	Condition	"r_has_type ( op , t_real )"	1079:12:34443:34464	8977587	0	True				
ANR	8977639	CallExpression	"r_has_type ( op , t_real )"		8977587	0					
ANR	8977640	Callee	r_has_type		8977587	0					
ANR	8977641	Identifier	r_has_type		8977587	0					
ANR	8977642	ArgumentList	op		8977587	1					
ANR	8977643	Argument	op		8977587	0					
ANR	8977644	Identifier	op		8977587	0					
ANR	8977645	Argument	t_real		8977587	1					
ANR	8977646	Identifier	t_real		8977587	0					
ANR	8977647	CompoundStatement		9:36:169:169	8977587	1					
ANR	8977648	ExpressionStatement	Gray = op -> value . realval	1080:12:34481:34505	8977587	0	True				
ANR	8977649	AssignmentExpression	Gray = op -> value . realval		8977587	0		=			
ANR	8977650	Identifier	Gray		8977587	0					
ANR	8977651	MemberAccess	op -> value . realval		8977587	1					
ANR	8977652	PtrMemberAccess	op -> value		8977587	0					
ANR	8977653	Identifier	op		8977587	0					
ANR	8977654	Identifier	value		8977587	1					
ANR	8977655	Identifier	realval		8977587	1					
ANR	8977656	ElseStatement	else		8977587	0					
ANR	8977657	ExpressionStatement	return_error ( gs_error_typecheck )	1082:12:34534:34566	8977587	0	True				
ANR	8977658	CallExpression	return_error ( gs_error_typecheck )		8977587	0					
ANR	8977659	Callee	return_error		8977587	0					
ANR	8977660	Identifier	return_error		8977587	0					
ANR	8977661	ArgumentList	gs_error_typecheck		8977587	1					
ANR	8977662	Argument	gs_error_typecheck		8977587	0					
ANR	8977663	Identifier	gs_error_typecheck		8977587	0					
ANR	8977664	ElseStatement	else		8977587	0					
ANR	8977665	ExpressionStatement	Gray = ( float ) op -> value . intval	1084:8:34587:34617	8977587	0	True				
ANR	8977666	AssignmentExpression	Gray = ( float ) op -> value . intval		8977587	0		=			
ANR	8977667	Identifier	Gray		8977587	0					
ANR	8977668	CastExpression	( float ) op -> value . intval		8977587	1					
ANR	8977669	CastTarget	float		8977587	0					
ANR	8977670	MemberAccess	op -> value . intval		8977587	1					
ANR	8977671	PtrMemberAccess	op -> value		8977587	0					
ANR	8977672	Identifier	op		8977587	0					
ANR	8977673	Identifier	value		8977587	1					
ANR	8977674	Identifier	intval		8977587	1					
ANR	8977675	IfStatement	if ( Gray < 0 || Gray > 1 )		8977587	6					
ANR	8977676	Condition	Gray < 0 || Gray > 1	1086:8:34628:34647	8977587	0	True				
ANR	8977677	OrExpression	Gray < 0 || Gray > 1		8977587	0		||			
ANR	8977678	RelationalExpression	Gray < 0		8977587	0		<			
ANR	8977679	Identifier	Gray		8977587	0					
ANR	8977680	PrimaryExpression	0		8977587	1					
ANR	8977681	RelationalExpression	Gray > 1		8977587	1		>			
ANR	8977682	Identifier	Gray		8977587	0					
ANR	8977683	PrimaryExpression	1		8977587	1					
ANR	8977684	ExpressionStatement	return_error ( gs_error_rangecheck )	1087:8:34658:34691	8977587	1	True				
ANR	8977685	CallExpression	return_error ( gs_error_rangecheck )		8977587	0					
ANR	8977686	Callee	return_error		8977587	0					
ANR	8977687	Identifier	return_error		8977587	0					
ANR	8977688	ArgumentList	gs_error_rangecheck		8977587	1					
ANR	8977689	Argument	gs_error_rangecheck		8977587	0					
ANR	8977690	Identifier	gs_error_rangecheck		8977587	0					
ANR	8977691	SwitchStatement	switch ( base )		8977587	7					
ANR	8977692	Condition	base	1089:12:34706:34709	8977587	0	True				
ANR	8977693	Identifier	base		8977587	0					
ANR	8977694	CompoundStatement		19:18:414:414	8977587	1					
ANR	8977695	Label	case 0 :	1090:8:34722:34728	8977587	0	True				
ANR	8977696	ExpressionStatement	"make_real ( op , Gray )"	1092:12:34810:34829	8977587	1	True				
ANR	8977697	CallExpression	"make_real ( op , Gray )"		8977587	0					
ANR	8977698	Callee	make_real		8977587	0					
ANR	8977699	Identifier	make_real		8977587	0					
ANR	8977700	ArgumentList	op		8977587	1					
ANR	8977701	Argument	op		8977587	0					
ANR	8977702	Identifier	op		8977587	0					
ANR	8977703	Argument	Gray		8977587	1					
ANR	8977704	Identifier	Gray		8977587	0					
ANR	8977705	BreakStatement	break ;	1093:12:34843:34848	8977587	2	True				
ANR	8977706	Label	case 1 :	1094:8:34858:34864	8977587	3	True				
ANR	8977707	Label	case 2 :	1096:8:34915:34921	8977587	4	True				
ANR	8977708	ExpressionStatement	push ( 2 )	1100:12:35046:35053	8977587	5	True				
ANR	8977709	CallExpression	push ( 2 )		8977587	0					
ANR	8977710	Callee	push		8977587	0					
ANR	8977711	Identifier	push		8977587	0					
ANR	8977712	ArgumentList	2		8977587	1					
ANR	8977713	Argument	2		8977587	0					
ANR	8977714	PrimaryExpression	2		8977587	0					
ANR	8977715	ExpressionStatement	RGB [ 0 ] = RGB [ 1 ] = RGB [ 2 ] = Gray	1101:12:35067:35098	8977587	6	True				
ANR	8977716	AssignmentExpression	RGB [ 0 ] = RGB [ 1 ] = RGB [ 2 ] = Gray		8977587	0		=			
ANR	8977717	ArrayIndexing	RGB [ 0 ]		8977587	0					
ANR	8977718	Identifier	RGB		8977587	0					
ANR	8977719	PrimaryExpression	0		8977587	1					
ANR	8977720	AssignmentExpression	RGB [ 1 ] = RGB [ 2 ] = Gray		8977587	1		=			
ANR	8977721	ArrayIndexing	RGB [ 1 ]		8977587	0					
ANR	8977722	Identifier	RGB		8977587	0					
ANR	8977723	PrimaryExpression	1		8977587	1					
ANR	8977724	AssignmentExpression	RGB [ 2 ] = Gray		8977587	1		=			
ANR	8977725	ArrayIndexing	RGB [ 2 ]		8977587	0					
ANR	8977726	Identifier	RGB		8977587	0					
ANR	8977727	PrimaryExpression	2		8977587	1					
ANR	8977728	Identifier	Gray		8977587	1					
ANR	8977729	IfStatement	if ( base == 1 )		8977587	7					
ANR	8977730	Condition	base == 1	1102:16:35116:35124	8977587	0	True				
ANR	8977731	EqualityExpression	base == 1		8977587	0		==			
ANR	8977732	Identifier	base		8977587	0					
ANR	8977733	PrimaryExpression	1		8977587	1					
ANR	8977734	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1104:16:35219:35241	8977587	1	True				
ANR	8977735	CallExpression	rgb2hsb ( ( float * ) & RGB )		8977587	0					
ANR	8977736	Callee	rgb2hsb		8977587	0					
ANR	8977737	Identifier	rgb2hsb		8977587	0					
ANR	8977738	ArgumentList	( float * ) & RGB		8977587	1					
ANR	8977739	Argument	( float * ) & RGB		8977587	0					
ANR	8977740	CastExpression	( float * ) & RGB		8977587	0					
ANR	8977741	CastTarget	float *		8977587	0					
ANR	8977742	UnaryOperationExpression	& RGB		8977587	1					
ANR	8977743	UnaryOperator	&		8977587	0					
ANR	8977744	Identifier	RGB		8977587	1					
ANR	8977745	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1105:12:35255:35281	8977587	8	True				
ANR	8977746	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		8977587	0					
ANR	8977747	Callee	make_real		8977587	0					
ANR	8977748	Identifier	make_real		8977587	0					
ANR	8977749	ArgumentList	& op [ - 2 ]		8977587	1					
ANR	8977750	Argument	& op [ - 2 ]		8977587	0					
ANR	8977751	UnaryOperationExpression	& op [ - 2 ]		8977587	0					
ANR	8977752	UnaryOperator	&		8977587	0					
ANR	8977753	ArrayIndexing	op [ - 2 ]		8977587	1					
ANR	8977754	Identifier	op		8977587	0					
ANR	8977755	UnaryOperationExpression	- 2		8977587	1					
ANR	8977756	UnaryOperator	-		8977587	0					
ANR	8977757	PrimaryExpression	2		8977587	1					
ANR	8977758	Argument	RGB [ 0 ]		8977587	1					
ANR	8977759	ArrayIndexing	RGB [ 0 ]		8977587	0					
ANR	8977760	Identifier	RGB		8977587	0					
ANR	8977761	PrimaryExpression	0		8977587	1					
ANR	8977762	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1106:12:35295:35321	8977587	9	True				
ANR	8977763	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		8977587	0					
ANR	8977764	Callee	make_real		8977587	0					
ANR	8977765	Identifier	make_real		8977587	0					
ANR	8977766	ArgumentList	& op [ - 1 ]		8977587	1					
ANR	8977767	Argument	& op [ - 1 ]		8977587	0					
ANR	8977768	UnaryOperationExpression	& op [ - 1 ]		8977587	0					
ANR	8977769	UnaryOperator	&		8977587	0					
ANR	8977770	ArrayIndexing	op [ - 1 ]		8977587	1					
ANR	8977771	Identifier	op		8977587	0					
ANR	8977772	UnaryOperationExpression	- 1		8977587	1					
ANR	8977773	UnaryOperator	-		8977587	0					
ANR	8977774	PrimaryExpression	1		8977587	1					
ANR	8977775	Argument	RGB [ 1 ]		8977587	1					
ANR	8977776	ArrayIndexing	RGB [ 1 ]		8977587	0					
ANR	8977777	Identifier	RGB		8977587	0					
ANR	8977778	PrimaryExpression	1		8977587	1					
ANR	8977779	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1107:12:35335:35356	8977587	10	True				
ANR	8977780	CallExpression	"make_real ( op , RGB [ 2 ] )"		8977587	0					
ANR	8977781	Callee	make_real		8977587	0					
ANR	8977782	Identifier	make_real		8977587	0					
ANR	8977783	ArgumentList	op		8977587	1					
ANR	8977784	Argument	op		8977587	0					
ANR	8977785	Identifier	op		8977587	0					
ANR	8977786	Argument	RGB [ 2 ]		8977587	1					
ANR	8977787	ArrayIndexing	RGB [ 2 ]		8977587	0					
ANR	8977788	Identifier	RGB		8977587	0					
ANR	8977789	PrimaryExpression	2		8977587	1					
ANR	8977790	BreakStatement	break ;	1108:12:35370:35375	8977587	11	True				
ANR	8977791	Label	case 3 :	1109:8:35385:35391	8977587	12	True				
ANR	8977792	ExpressionStatement	push ( 3 )	1113:12:35521:35528	8977587	13	True				
ANR	8977793	CallExpression	push ( 3 )		8977587	0					
ANR	8977794	Callee	push		8977587	0					
ANR	8977795	Identifier	push		8977587	0					
ANR	8977796	ArgumentList	3		8977587	1					
ANR	8977797	Argument	3		8977587	0					
ANR	8977798	PrimaryExpression	3		8977587	0					
ANR	8977799	ExpressionStatement	"make_real ( & op [ - 3 ] , ( float ) 0 )"	1114:12:35542:35570	8977587	14	True				
ANR	8977800	CallExpression	"make_real ( & op [ - 3 ] , ( float ) 0 )"		8977587	0					
ANR	8977801	Callee	make_real		8977587	0					
ANR	8977802	Identifier	make_real		8977587	0					
ANR	8977803	ArgumentList	& op [ - 3 ]		8977587	1					
ANR	8977804	Argument	& op [ - 3 ]		8977587	0					
ANR	8977805	UnaryOperationExpression	& op [ - 3 ]		8977587	0					
ANR	8977806	UnaryOperator	&		8977587	0					
ANR	8977807	ArrayIndexing	op [ - 3 ]		8977587	1					
ANR	8977808	Identifier	op		8977587	0					
ANR	8977809	UnaryOperationExpression	- 3		8977587	1					
ANR	8977810	UnaryOperator	-		8977587	0					
ANR	8977811	PrimaryExpression	3		8977587	1					
ANR	8977812	Argument	( float ) 0		8977587	1					
ANR	8977813	CastExpression	( float ) 0		8977587	0					
ANR	8977814	CastTarget	float		8977587	0					
ANR	8977815	PrimaryExpression	0		8977587	1					
ANR	8977816	ExpressionStatement	"make_real ( & op [ - 2 ] , ( float ) 0 )"	1115:12:35584:35612	8977587	15	True				
ANR	8977817	CallExpression	"make_real ( & op [ - 2 ] , ( float ) 0 )"		8977587	0					
ANR	8977818	Callee	make_real		8977587	0					
ANR	8977819	Identifier	make_real		8977587	0					
ANR	8977820	ArgumentList	& op [ - 2 ]		8977587	1					
ANR	8977821	Argument	& op [ - 2 ]		8977587	0					
ANR	8977822	UnaryOperationExpression	& op [ - 2 ]		8977587	0					
ANR	8977823	UnaryOperator	&		8977587	0					
ANR	8977824	ArrayIndexing	op [ - 2 ]		8977587	1					
ANR	8977825	Identifier	op		8977587	0					
ANR	8977826	UnaryOperationExpression	- 2		8977587	1					
ANR	8977827	UnaryOperator	-		8977587	0					
ANR	8977828	PrimaryExpression	2		8977587	1					
ANR	8977829	Argument	( float ) 0		8977587	1					
ANR	8977830	CastExpression	( float ) 0		8977587	0					
ANR	8977831	CastTarget	float		8977587	0					
ANR	8977832	PrimaryExpression	0		8977587	1					
ANR	8977833	ExpressionStatement	"make_real ( & op [ - 1 ] , ( float ) 0 )"	1116:12:35626:35654	8977587	16	True				
ANR	8977834	CallExpression	"make_real ( & op [ - 1 ] , ( float ) 0 )"		8977587	0					
ANR	8977835	Callee	make_real		8977587	0					
ANR	8977836	Identifier	make_real		8977587	0					
ANR	8977837	ArgumentList	& op [ - 1 ]		8977587	1					
ANR	8977838	Argument	& op [ - 1 ]		8977587	0					
ANR	8977839	UnaryOperationExpression	& op [ - 1 ]		8977587	0					
ANR	8977840	UnaryOperator	&		8977587	0					
ANR	8977841	ArrayIndexing	op [ - 1 ]		8977587	1					
ANR	8977842	Identifier	op		8977587	0					
ANR	8977843	UnaryOperationExpression	- 1		8977587	1					
ANR	8977844	UnaryOperator	-		8977587	0					
ANR	8977845	PrimaryExpression	1		8977587	1					
ANR	8977846	Argument	( float ) 0		8977587	1					
ANR	8977847	CastExpression	( float ) 0		8977587	0					
ANR	8977848	CastTarget	float		8977587	0					
ANR	8977849	PrimaryExpression	0		8977587	1					
ANR	8977850	ExpressionStatement	"make_real ( op , ( float ) 1.0 - Gray )"	1117:12:35668:35700	8977587	17	True				
ANR	8977851	CallExpression	"make_real ( op , ( float ) 1.0 - Gray )"		8977587	0					
ANR	8977852	Callee	make_real		8977587	0					
ANR	8977853	Identifier	make_real		8977587	0					
ANR	8977854	ArgumentList	op		8977587	1					
ANR	8977855	Argument	op		8977587	0					
ANR	8977856	Identifier	op		8977587	0					
ANR	8977857	Argument	( float ) 1.0 - Gray		8977587	1					
ANR	8977858	AdditiveExpression	( float ) 1.0 - Gray		8977587	0		-			
ANR	8977859	CastExpression	( float ) 1.0		8977587	0					
ANR	8977860	CastTarget	float		8977587	0					
ANR	8977861	PrimaryExpression	1.0		8977587	1					
ANR	8977862	Identifier	Gray		8977587	1					
ANR	8977863	BreakStatement	break ;	1118:12:35714:35719	8977587	18	True				
ANR	8977864	Label	default :	1119:8:35729:35736	8977587	19	True				
ANR	8977865	Identifier	default		8977587	0					
ANR	8977866	ExpressionStatement	return_error ( gs_error_undefined )	1120:12:35750:35782	8977587	20	True				
ANR	8977867	CallExpression	return_error ( gs_error_undefined )		8977587	0					
ANR	8977868	Callee	return_error		8977587	0					
ANR	8977869	Identifier	return_error		8977587	0					
ANR	8977870	ArgumentList	gs_error_undefined		8977587	1					
ANR	8977871	Argument	gs_error_undefined		8977587	0					
ANR	8977872	Identifier	gs_error_undefined		8977587	0					
ANR	8977873	ReturnStatement	return 0 ;	1122:4:35794:35802	8977587	8	True				
ANR	8977874	PrimaryExpression	0		8977587	0					
ANR	8977875	ReturnType	static int		8977587	1					
ANR	8977876	Identifier	graybasecolor		8977587	2					
ANR	8977877	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8977587	3					
ANR	8977878	Parameter	i_ctx_t * i_ctx_p	1070:25:34215:34231	8977587	0	True				
ANR	8977879	ParameterType	i_ctx_t *		8977587	0					
ANR	8977880	Identifier	i_ctx_p		8977587	1					
ANR	8977881	Parameter	ref * space	1070:44:34234:34243	8977587	1	True				
ANR	8977882	ParameterType	ref *		8977587	0					
ANR	8977883	Identifier	space		8977587	1					
ANR	8977884	Parameter	int base	1070:56:34246:34253	8977587	2	True				
ANR	8977885	ParameterType	int		8977587	0					
ANR	8977886	Identifier	base		8977587	1					
ANR	8977887	Parameter	int * stage	1070:66:34256:34265	8977587	3	True				
ANR	8977888	ParameterType	int *		8977587	0					
ANR	8977889	Identifier	stage		8977587	1					
ANR	8977890	Parameter	int * cont	1070:78:34268:34276	8977587	4	True				
ANR	8977891	ParameterType	int *		8977587	0					
ANR	8977892	Identifier	cont		8977587	1					
ANR	8977893	Parameter	int * stack_depth	1070:89:34279:34294	8977587	5	True				
ANR	8977894	ParameterType	int *		8977587	0					
ANR	8977895	Identifier	stack_depth		8977587	1					
ANR	8977896	CFGEntryNode	ENTRY		8977587		True				
ANR	8977897	CFGExitNode	EXIT		8977587		True				
ANR	8977898	Symbol	stack_depth		8977587						
ANR	8977899	Symbol	op		8977587						
ANR	8977900	Symbol	Gray		8977587						
ANR	8977901	Symbol	* stage		8977587						
ANR	8977902	Symbol	* op		8977587						
ANR	8977903	Symbol	gs_error_rangecheck		8977587						
ANR	8977904	Symbol	* RGB		8977587						
ANR	8977905	Symbol	gs_error_undefined		8977587						
ANR	8977906	Symbol	op -> value . realval		8977587						
ANR	8977907	Symbol	t_real		8977587						
ANR	8977908	Symbol	RGB		8977587						
ANR	8977909	Symbol	osp		8977587						
ANR	8977910	Symbol	space		8977587						
ANR	8977911	Symbol	r_has_type		8977587						
ANR	8977912	Symbol	gs_error_typecheck		8977587						
ANR	8977913	Symbol	stage		8977587						
ANR	8977914	Symbol	t_integer		8977587						
ANR	8977915	Symbol	& RGB		8977587						
ANR	8977916	Symbol	* cont		8977587						
ANR	8977917	Symbol	i_ctx_p		8977587						
ANR	8977918	Symbol	op -> value		8977587						
ANR	8977919	Symbol	cont		8977587						
ANR	8977920	Symbol	op -> value . intval		8977587						
ANR	8977921	Symbol	base		8977587						
ANR	8977922	Function	grayvalidate	1124:0:35806:36200							
ANR	8977923	FunctionDef	"grayvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8977922	0					
ANR	8977924	CompoundStatement		1125:0:35890:36200	8977922	0					
ANR	8977925	IdentifierDeclStatement	os_ptr op = osp ;	1126:4:35896:35911	8977922	0	True				
ANR	8977926	IdentifierDecl	op = osp		8977922	0					
ANR	8977927	IdentifierDeclType	os_ptr		8977922	0					
ANR	8977928	Identifier	op		8977922	1					
ANR	8977929	AssignmentExpression	op = osp		8977922	2		=			
ANR	8977930	Identifier	osp		8977922	0					
ANR	8977931	Identifier	osp		8977922	1					
ANR	8977932	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8977922	1					
ANR	8977933	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1128:8:35922:35974	8977922	0	True				
ANR	8977934	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8977922	0		&&			
ANR	8977935	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8977922	0					
ANR	8977936	UnaryOperator	!		8977922	0					
ANR	8977937	CallExpression	"r_has_type ( op , t_integer )"		8977922	1					
ANR	8977938	Callee	r_has_type		8977922	0					
ANR	8977939	Identifier	r_has_type		8977922	0					
ANR	8977940	ArgumentList	op		8977922	1					
ANR	8977941	Argument	op		8977922	0					
ANR	8977942	Identifier	op		8977922	0					
ANR	8977943	Argument	t_integer		8977922	1					
ANR	8977944	Identifier	t_integer		8977922	0					
ANR	8977945	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8977922	1					
ANR	8977946	UnaryOperator	!		8977922	0					
ANR	8977947	CallExpression	"r_has_type ( op , t_real )"		8977922	1					
ANR	8977948	Callee	r_has_type		8977922	0					
ANR	8977949	Identifier	r_has_type		8977922	0					
ANR	8977950	ArgumentList	op		8977922	1					
ANR	8977951	Argument	op		8977922	0					
ANR	8977952	Identifier	op		8977922	0					
ANR	8977953	Argument	t_real		8977922	1					
ANR	8977954	Identifier	t_real		8977922	0					
ANR	8977955	ExpressionStatement	return_error ( gs_error_typecheck )	1129:8:35985:36017	8977922	1	True				
ANR	8977956	CallExpression	return_error ( gs_error_typecheck )		8977922	0					
ANR	8977957	Callee	return_error		8977922	0					
ANR	8977958	Identifier	return_error		8977922	0					
ANR	8977959	ArgumentList	gs_error_typecheck		8977922	1					
ANR	8977960	Argument	gs_error_typecheck		8977922	0					
ANR	8977961	Identifier	gs_error_typecheck		8977922	0					
ANR	8977962	IfStatement	if ( num_comps < 1 )		8977922	2					
ANR	8977963	Condition	num_comps < 1	1131:8:36028:36040	8977922	0	True				
ANR	8977964	RelationalExpression	num_comps < 1		8977922	0		<			
ANR	8977965	Identifier	num_comps		8977922	0					
ANR	8977966	PrimaryExpression	1		8977922	1					
ANR	8977967	ExpressionStatement	return_error ( gs_error_stackunderflow )	1132:8:36051:36088	8977922	1	True				
ANR	8977968	CallExpression	return_error ( gs_error_stackunderflow )		8977922	0					
ANR	8977969	Callee	return_error		8977922	0					
ANR	8977970	Identifier	return_error		8977922	0					
ANR	8977971	ArgumentList	gs_error_stackunderflow		8977922	1					
ANR	8977972	Argument	gs_error_stackunderflow		8977922	0					
ANR	8977973	Identifier	gs_error_stackunderflow		8977922	0					
ANR	8977974	IfStatement	if ( * values > 1.0 )		8977922	3					
ANR	8977975	Condition	* values > 1.0	1134:8:36099:36111	8977922	0	True				
ANR	8977976	RelationalExpression	* values > 1.0		8977922	0		>			
ANR	8977977	UnaryOperationExpression	* values		8977922	0					
ANR	8977978	UnaryOperator	*		8977922	0					
ANR	8977979	Identifier	values		8977922	1					
ANR	8977980	PrimaryExpression	1.0		8977922	1					
ANR	8977981	ExpressionStatement	* values = 1.0	1135:8:36122:36135	8977922	1	True				
ANR	8977982	AssignmentExpression	* values = 1.0		8977922	0		=			
ANR	8977983	UnaryOperationExpression	* values		8977922	0					
ANR	8977984	UnaryOperator	*		8977922	0					
ANR	8977985	Identifier	values		8977922	1					
ANR	8977986	PrimaryExpression	1.0		8977922	1					
ANR	8977987	IfStatement	if ( * values < 0.0 )		8977922	4					
ANR	8977988	Condition	* values < 0.0	1137:9:36147:36159	8977922	0	True				
ANR	8977989	RelationalExpression	* values < 0.0		8977922	0		<			
ANR	8977990	UnaryOperationExpression	* values		8977922	0					
ANR	8977991	UnaryOperator	*		8977922	0					
ANR	8977992	Identifier	values		8977922	1					
ANR	8977993	PrimaryExpression	0.0		8977922	1					
ANR	8977994	ExpressionStatement	* values = 0.0	1138:8:36170:36183	8977922	1	True				
ANR	8977995	AssignmentExpression	* values = 0.0		8977922	0		=			
ANR	8977996	UnaryOperationExpression	* values		8977922	0					
ANR	8977997	UnaryOperator	*		8977922	0					
ANR	8977998	Identifier	values		8977922	1					
ANR	8977999	PrimaryExpression	0.0		8977922	1					
ANR	8978000	ReturnStatement	return 0 ;	1140:4:36190:36198	8977922	5	True				
ANR	8978001	PrimaryExpression	0		8977922	0					
ANR	8978002	ReturnType	static int		8977922	1					
ANR	8978003	Identifier	grayvalidate		8977922	2					
ANR	8978004	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8977922	3					
ANR	8978005	Parameter	i_ctx_t * i_ctx_p	1124:24:35830:35845	8977922	0	True				
ANR	8978006	ParameterType	i_ctx_t *		8977922	0					
ANR	8978007	Identifier	i_ctx_p		8977922	1					
ANR	8978008	Parameter	ref * space	1124:42:35848:35857	8977922	1	True				
ANR	8978009	ParameterType	ref *		8977922	0					
ANR	8978010	Identifier	space		8977922	1					
ANR	8978011	Parameter	float * values	1124:54:35860:35872	8977922	2	True				
ANR	8978012	ParameterType	float *		8977922	0					
ANR	8978013	Identifier	values		8977922	1					
ANR	8978014	Parameter	int num_comps	1124:69:35875:35887	8977922	3	True				
ANR	8978015	ParameterType	int		8977922	0					
ANR	8978016	Identifier	num_comps		8977922	1					
ANR	8978017	CFGEntryNode	ENTRY		8977922		True				
ANR	8978018	CFGExitNode	EXIT		8977922		True				
ANR	8978019	Symbol	op		8977922						
ANR	8978020	Symbol	r_has_type		8977922						
ANR	8978021	Symbol	gs_error_typecheck		8977922						
ANR	8978022	Symbol	t_integer		8977922						
ANR	8978023	Symbol	gs_error_stackunderflow		8977922						
ANR	8978024	Symbol	i_ctx_p		8977922						
ANR	8978025	Symbol	* values		8977922						
ANR	8978026	Symbol	values		8977922						
ANR	8978027	Symbol	num_comps		8977922						
ANR	8978028	Symbol	t_real		8977922						
ANR	8978029	Symbol	osp		8977922						
ANR	8978030	Symbol	space		8977922						
ANR	8978031	Function	grayinitialproc	1142:0:36202:36371							
ANR	8978032	FunctionDef	"grayinitialproc (i_ctx_t * i_ctx_p , ref * space)"		8978031	0					
ANR	8978033	CompoundStatement		1143:0:36259:36371	8978031	0					
ANR	8978034	IdentifierDeclStatement	gs_client_color cc ;	1144:4:36265:36283	8978031	0	True				
ANR	8978035	IdentifierDecl	cc		8978031	0					
ANR	8978036	IdentifierDeclType	gs_client_color		8978031	0					
ANR	8978037	Identifier	cc		8978031	1					
ANR	8978038	ExpressionStatement	cc . pattern = 0x00	1146:4:36290:36307	8978031	1	True				
ANR	8978039	AssignmentExpression	cc . pattern = 0x00		8978031	0		=			
ANR	8978040	MemberAccess	cc . pattern		8978031	0					
ANR	8978041	Identifier	cc		8978031	0					
ANR	8978042	Identifier	pattern		8978031	1					
ANR	8978043	PrimaryExpression	0x00		8978031	1					
ANR	8978044	ExpressionStatement	cc . paint . values [ 0 ] = 0	1147:4:36313:36335	8978031	2	True				
ANR	8978045	AssignmentExpression	cc . paint . values [ 0 ] = 0		8978031	0		=			
ANR	8978046	ArrayIndexing	cc . paint . values [ 0 ]		8978031	0					
ANR	8978047	MemberAccess	cc . paint . values		8978031	0					
ANR	8978048	MemberAccess	cc . paint		8978031	0					
ANR	8978049	Identifier	cc		8978031	0					
ANR	8978050	Identifier	paint		8978031	1					
ANR	8978051	Identifier	values		8978031	1					
ANR	8978052	PrimaryExpression	0		8978031	1					
ANR	8978053	PrimaryExpression	0		8978031	1					
ANR	8978054	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1148:4:36341:36369	8978031	3	True				
ANR	8978055	CallExpression	"gs_setcolor ( igs , & cc )"		8978031	0					
ANR	8978056	Callee	gs_setcolor		8978031	0					
ANR	8978057	Identifier	gs_setcolor		8978031	0					
ANR	8978058	ArgumentList	igs		8978031	1					
ANR	8978059	Argument	igs		8978031	0					
ANR	8978060	Identifier	igs		8978031	0					
ANR	8978061	Argument	& cc		8978031	1					
ANR	8978062	UnaryOperationExpression	& cc		8978031	0					
ANR	8978063	UnaryOperator	&		8978031	0					
ANR	8978064	Identifier	cc		8978031	1					
ANR	8978065	ReturnType	static int		8978031	1					
ANR	8978066	Identifier	grayinitialproc		8978031	2					
ANR	8978067	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		8978031	3					
ANR	8978068	Parameter	i_ctx_t * i_ctx_p	1142:27:36229:36244	8978031	0	True				
ANR	8978069	ParameterType	i_ctx_t *		8978031	0					
ANR	8978070	Identifier	i_ctx_p		8978031	1					
ANR	8978071	Parameter	ref * space	1142:45:36247:36256	8978031	1	True				
ANR	8978072	ParameterType	ref *		8978031	0					
ANR	8978073	Identifier	space		8978031	1					
ANR	8978074	CFGEntryNode	ENTRY		8978031		True				
ANR	8978075	CFGExitNode	EXIT		8978031		True				
ANR	8978076	Symbol	cc		8978031						
ANR	8978077	Symbol	cc . pattern		8978031						
ANR	8978078	Symbol	* cc . paint		8978031						
ANR	8978079	Symbol	igs		8978031						
ANR	8978080	Symbol	* cc . paint . values		8978031						
ANR	8978081	Symbol	* cc		8978031						
ANR	8978082	Symbol	i_ctx_p		8978031						
ANR	8978083	Symbol	cc . paint		8978031						
ANR	8978084	Symbol	gs_setcolor		8978031						
ANR	8978085	Symbol	& cc		8978031						
ANR	8978086	Symbol	cc . paint . values		8978031						
ANR	8978087	Symbol	space		8978031						
ANR	8978088	Function	setrgbspace	1152:0:36390:41389							
ANR	8978089	FunctionDef	"setrgbspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8978088	0					
ANR	8978090	CompoundStatement		1153:0:36477:41389	8978088	0					
ANR	8978091	IdentifierDeclStatement	os_ptr op = osp ;	1154:4:36483:36498	8978088	0	True				
ANR	8978092	IdentifierDecl	op = osp		8978088	0					
ANR	8978093	IdentifierDeclType	os_ptr		8978088	0					
ANR	8978094	Identifier	op		8978088	1					
ANR	8978095	AssignmentExpression	op = osp		8978088	2		=			
ANR	8978096	Identifier	osp		8978088	0					
ANR	8978097	Identifier	osp		8978088	1					
ANR	8978098	IdentifierDeclStatement	gs_color_space * pcs ;	1155:4:36504:36524	8978088	1	True				
ANR	8978099	IdentifierDecl	* pcs		8978088	0					
ANR	8978100	IdentifierDeclType	gs_color_space *		8978088	0					
ANR	8978101	Identifier	pcs		8978088	1					
ANR	8978102	IdentifierDeclStatement	int code = 0 ;	1156:4:36530:36540	8978088	2	True				
ANR	8978103	IdentifierDecl	code = 0		8978088	0					
ANR	8978104	IdentifierDeclType	int		8978088	0					
ANR	8978105	Identifier	code		8978088	1					
ANR	8978106	AssignmentExpression	code = 0		8978088	2		=			
ANR	8978107	Identifier	code		8978088	0					
ANR	8978108	PrimaryExpression	0		8978088	1					
ANR	8978109	IdentifierDeclStatement	ref stref ;	1157:4:36546:36555	8978088	3	True				
ANR	8978110	IdentifierDecl	stref		8978088	0					
ANR	8978111	IdentifierDeclType	ref		8978088	0					
ANR	8978112	Identifier	stref		8978088	1					
ANR	8978113	DoStatement	do		8978088	4					
ANR	8978114	CompoundStatement		7:7:87:87	8978088	0					
ANR	8978115	SwitchStatement	switch ( * stage )		8978088	0					
ANR	8978116	Condition	* stage	1160:16:36583:36588	8978088	0	True				
ANR	8978117	UnaryOperationExpression	* stage		8978088	0					
ANR	8978118	UnaryOperator	*		8978088	0					
ANR	8978119	Identifier	stage		8978088	1					
ANR	8978120	CompoundStatement		8:24:113:113	8978088	1					
ANR	8978121	Label	case 0 :	1161:12:36605:36611	8978088	0	True				
ANR	8978122	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		8978088	1					
ANR	8978123	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	1162:20:36633:36680	8978088	0	True				
ANR	8978124	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		8978088	0		&&			
ANR	8978125	MemberAccess	istate -> use_cie_color . value . boolval		8978088	0					
ANR	8978126	MemberAccess	istate -> use_cie_color . value		8978088	0					
ANR	8978127	PtrMemberAccess	istate -> use_cie_color		8978088	0					
ANR	8978128	Identifier	istate		8978088	0					
ANR	8978129	Identifier	use_cie_color		8978088	1					
ANR	8978130	Identifier	value		8978088	1					
ANR	8978131	Identifier	boolval		8978088	1					
ANR	8978132	UnaryOperationExpression	! CIESubst		8978088	1					
ANR	8978133	UnaryOperator	!		8978088	0					
ANR	8978134	Identifier	CIESubst		8978088	1					
ANR	8978135	CompoundStatement		12:20:259:271	8978088	1					
ANR	8978136	IdentifierDeclStatement	byte * body ;	1163:20:36705:36715	8978088	0	True				
ANR	8978137	IdentifierDecl	* body		8978088	0					
ANR	8978138	IdentifierDeclType	byte *		8978088	0					
ANR	8978139	Identifier	body		8978088	1					
ANR	8978140	IdentifierDeclStatement	ref * nosubst ;	1164:20:36737:36749	8978088	1	True				
ANR	8978141	IdentifierDecl	* nosubst		8978088	0					
ANR	8978142	IdentifierDeclType	ref *		8978088	0					
ANR	8978143	Identifier	nosubst		8978088	1					
ANR	8978144	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	1166:20:36772:36840	8978088	2	True				
ANR	8978145	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8978088	0		=			
ANR	8978146	Identifier	code		8978088	0					
ANR	8978147	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8978088	1					
ANR	8978148	Callee	dict_find_string		8978088	0					
ANR	8978149	Identifier	dict_find_string		8978088	0					
ANR	8978150	ArgumentList	systemdict		8978088	1					
ANR	8978151	Argument	systemdict		8978088	0					
ANR	8978152	Identifier	systemdict		8978088	0					
ANR	8978153	Argument	"""NOSUBSTDEVICECOLORS"""		8978088	1					
ANR	8978154	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		8978088	0					
ANR	8978155	Argument	& nosubst		8978088	2					
ANR	8978156	UnaryOperationExpression	& nosubst		8978088	0					
ANR	8978157	UnaryOperator	&		8978088	0					
ANR	8978158	Identifier	nosubst		8978088	1					
ANR	8978159	IfStatement	if ( code != 0 )		8978088	3					
ANR	8978160	Condition	code != 0	1167:24:36866:36874	8978088	0	True				
ANR	8978161	EqualityExpression	code != 0		8978088	0		!=			
ANR	8978162	Identifier	code		8978088	0					
ANR	8978163	PrimaryExpression	0		8978088	1					
ANR	8978164	CompoundStatement		15:35:399:399	8978088	1					
ANR	8978165	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		8978088	0					
ANR	8978166	Condition	"! r_has_type ( nosubst , t_boolean )"	1168:28:36907:36937	8978088	0	True				
ANR	8978167	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		8978088	0					
ANR	8978168	UnaryOperator	!		8978088	0					
ANR	8978169	CallExpression	"r_has_type ( nosubst , t_boolean )"		8978088	1					
ANR	8978170	Callee	r_has_type		8978088	0					
ANR	8978171	Identifier	r_has_type		8978088	0					
ANR	8978172	ArgumentList	nosubst		8978088	1					
ANR	8978173	Argument	nosubst		8978088	0					
ANR	8978174	Identifier	nosubst		8978088	0					
ANR	8978175	Argument	t_boolean		8978088	1					
ANR	8978176	Identifier	t_boolean		8978088	0					
ANR	8978177	ExpressionStatement	return_error ( gs_error_typecheck )	1169:28:36968:37000	8978088	1	True				
ANR	8978178	CallExpression	return_error ( gs_error_typecheck )		8978088	0					
ANR	8978179	Callee	return_error		8978088	0					
ANR	8978180	Identifier	return_error		8978088	0					
ANR	8978181	ArgumentList	gs_error_typecheck		8978088	1					
ANR	8978182	Argument	gs_error_typecheck		8978088	0					
ANR	8978183	Identifier	gs_error_typecheck		8978088	0					
ANR	8978184	IfStatement	if ( code != 0 && nosubst -> value . boolval )		8978088	4					
ANR	8978185	Condition	code != 0 && nosubst -> value . boolval	1171:24:37048:37082	8978088	0	True				
ANR	8978186	AndExpression	code != 0 && nosubst -> value . boolval		8978088	0		&&			
ANR	8978187	EqualityExpression	code != 0		8978088	0		!=			
ANR	8978188	Identifier	code		8978088	0					
ANR	8978189	PrimaryExpression	0		8978088	1					
ANR	8978190	MemberAccess	nosubst -> value . boolval		8978088	1					
ANR	8978191	PtrMemberAccess	nosubst -> value		8978088	0					
ANR	8978192	Identifier	nosubst		8978088	0					
ANR	8978193	Identifier	value		8978088	1					
ANR	8978194	Identifier	boolval		8978088	1					
ANR	8978195	CompoundStatement		19:61:607:607	8978088	1					
ANR	8978196	ExpressionStatement	* stage = 4	1172:24:37111:37121	8978088	0	True				
ANR	8978197	AssignmentExpression	* stage = 4		8978088	0		=			
ANR	8978198	UnaryOperationExpression	* stage		8978088	0					
ANR	8978199	UnaryOperator	*		8978088	0					
ANR	8978200	Identifier	stage		8978088	1					
ANR	8978201	PrimaryExpression	4		8978088	1					
ANR	8978202	ExpressionStatement	* cont = 1	1173:24:37147:37156	8978088	1	True				
ANR	8978203	AssignmentExpression	* cont = 1		8978088	0		=			
ANR	8978204	UnaryOperationExpression	* cont		8978088	0					
ANR	8978205	UnaryOperator	*		8978088	0					
ANR	8978206	Identifier	cont		8978088	1					
ANR	8978207	PrimaryExpression	1		8978088	1					
ANR	8978208	ExpressionStatement	"body = ialloc_string ( 31 , ""string"" )"	1174:24:37182:37216	8978088	2	True				
ANR	8978209	AssignmentExpression	"body = ialloc_string ( 31 , ""string"" )"		8978088	0		=			
ANR	8978210	Identifier	body		8978088	0					
ANR	8978211	CallExpression	"ialloc_string ( 31 , ""string"" )"		8978088	1					
ANR	8978212	Callee	ialloc_string		8978088	0					
ANR	8978213	Identifier	ialloc_string		8978088	0					
ANR	8978214	ArgumentList	31		8978088	1					
ANR	8978215	Argument	31		8978088	0					
ANR	8978216	PrimaryExpression	31		8978088	0					
ANR	8978217	Argument	"""string"""		8978088	1					
ANR	8978218	PrimaryExpression	"""string"""		8978088	0					
ANR	8978219	IfStatement	if ( body == 0 )		8978088	3					
ANR	8978220	Condition	body == 0	1175:28:37246:37254	8978088	0	True				
ANR	8978221	EqualityExpression	body == 0		8978088	0		==			
ANR	8978222	Identifier	body		8978088	0					
ANR	8978223	PrimaryExpression	0		8978088	1					
ANR	8978224	ExpressionStatement	return_error ( gs_error_VMerror )	1176:28:37285:37315	8978088	1	True				
ANR	8978225	CallExpression	return_error ( gs_error_VMerror )		8978088	0					
ANR	8978226	Callee	return_error		8978088	0					
ANR	8978227	Identifier	return_error		8978088	0					
ANR	8978228	ArgumentList	gs_error_VMerror		8978088	1					
ANR	8978229	Argument	gs_error_VMerror		8978088	0					
ANR	8978230	Identifier	gs_error_VMerror		8978088	0					
ANR	8978231	ExpressionStatement	"memcpy ( body , ""/DefaultRGB ..nosubstdevicetest"" , 31 )"	1177:24:37341:37391	8978088	4	True				
ANR	8978232	CallExpression	"memcpy ( body , ""/DefaultRGB ..nosubstdevicetest"" , 31 )"		8978088	0					
ANR	8978233	Callee	memcpy		8978088	0					
ANR	8978234	Identifier	memcpy		8978088	0					
ANR	8978235	ArgumentList	body		8978088	1					
ANR	8978236	Argument	body		8978088	0					
ANR	8978237	Identifier	body		8978088	0					
ANR	8978238	Argument	"""/DefaultRGB ..nosubstdevicetest"""		8978088	1					
ANR	8978239	PrimaryExpression	"""/DefaultRGB ..nosubstdevicetest"""		8978088	0					
ANR	8978240	Argument	31		8978088	2					
ANR	8978241	PrimaryExpression	31		8978088	0					
ANR	8978242	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 31 , body )"	1178:24:37417:37470	8978088	5	True				
ANR	8978243	CallExpression	"make_string ( & stref , a_all | icurrent_space , 31 , body )"		8978088	0					
ANR	8978244	Callee	make_string		8978088	0					
ANR	8978245	Identifier	make_string		8978088	0					
ANR	8978246	ArgumentList	& stref		8978088	1					
ANR	8978247	Argument	& stref		8978088	0					
ANR	8978248	UnaryOperationExpression	& stref		8978088	0					
ANR	8978249	UnaryOperator	&		8978088	0					
ANR	8978250	Identifier	stref		8978088	1					
ANR	8978251	Argument	a_all | icurrent_space		8978088	1					
ANR	8978252	InclusiveOrExpression	a_all | icurrent_space		8978088	0		|			
ANR	8978253	Identifier	a_all		8978088	0					
ANR	8978254	Identifier	icurrent_space		8978088	1					
ANR	8978255	Argument	31		8978088	2					
ANR	8978256	PrimaryExpression	31		8978088	0					
ANR	8978257	Argument	body		8978088	3					
ANR	8978258	Identifier	body		8978088	0					
ANR	8978259	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1179:24:37496:37529	8978088	6	True				
ANR	8978260	CallExpression	"r_set_attrs ( & stref , a_executable )"		8978088	0					
ANR	8978261	Callee	r_set_attrs		8978088	0					
ANR	8978262	Identifier	r_set_attrs		8978088	0					
ANR	8978263	ArgumentList	& stref		8978088	1					
ANR	8978264	Argument	& stref		8978088	0					
ANR	8978265	UnaryOperationExpression	& stref		8978088	0					
ANR	8978266	UnaryOperator	&		8978088	0					
ANR	8978267	Identifier	stref		8978088	1					
ANR	8978268	Argument	a_executable		8978088	1					
ANR	8978269	Identifier	a_executable		8978088	0					
ANR	8978270	ExpressionStatement	esp ++	1180:24:37555:37560	8978088	7	True				
ANR	8978271	PostIncDecOperationExpression	esp ++		8978088	0					
ANR	8978272	Identifier	esp		8978088	0					
ANR	8978273	IncDec	++		8978088	1					
ANR	8978274	ExpressionStatement	"ref_assign ( esp , & stref )"	1181:24:37586:37609	8978088	8	True				
ANR	8978275	CallExpression	"ref_assign ( esp , & stref )"		8978088	0					
ANR	8978276	Callee	ref_assign		8978088	0					
ANR	8978277	Identifier	ref_assign		8978088	0					
ANR	8978278	ArgumentList	esp		8978088	1					
ANR	8978279	Argument	esp		8978088	0					
ANR	8978280	Identifier	esp		8978088	0					
ANR	8978281	Argument	& stref		8978088	1					
ANR	8978282	UnaryOperationExpression	& stref		8978088	0					
ANR	8978283	UnaryOperator	&		8978088	0					
ANR	8978284	Identifier	stref		8978088	1					
ANR	8978285	ReturnStatement	return o_push_estack ;	1182:24:37635:37655	8978088	9	True				
ANR	8978286	Identifier	o_push_estack		8978088	0					
ANR	8978287	ElseStatement	else		8978088	0					
ANR	8978288	CompoundStatement		31:27:1206:1206	8978088	0					
ANR	8978289	ExpressionStatement	* stage = 2	1184:24:37710:37720	8978088	0	True				
ANR	8978290	AssignmentExpression	* stage = 2		8978088	0		=			
ANR	8978291	UnaryOperationExpression	* stage		8978088	0					
ANR	8978292	UnaryOperator	*		8978088	0					
ANR	8978293	Identifier	stage		8978088	1					
ANR	8978294	PrimaryExpression	2		8978088	1					
ANR	8978295	ExpressionStatement	* cont = 1	1185:24:37746:37755	8978088	1	True				
ANR	8978296	AssignmentExpression	* cont = 1		8978088	0		=			
ANR	8978297	UnaryOperationExpression	* cont		8978088	0					
ANR	8978298	UnaryOperator	*		8978088	0					
ANR	8978299	Identifier	cont		8978088	1					
ANR	8978300	PrimaryExpression	1		8978088	1					
ANR	8978301	ExpressionStatement	"body = ialloc_string ( 46 , ""string"" )"	1186:24:37781:37815	8978088	2	True				
ANR	8978302	AssignmentExpression	"body = ialloc_string ( 46 , ""string"" )"		8978088	0		=			
ANR	8978303	Identifier	body		8978088	0					
ANR	8978304	CallExpression	"ialloc_string ( 46 , ""string"" )"		8978088	1					
ANR	8978305	Callee	ialloc_string		8978088	0					
ANR	8978306	Identifier	ialloc_string		8978088	0					
ANR	8978307	ArgumentList	46		8978088	1					
ANR	8978308	Argument	46		8978088	0					
ANR	8978309	PrimaryExpression	46		8978088	0					
ANR	8978310	Argument	"""string"""		8978088	1					
ANR	8978311	PrimaryExpression	"""string"""		8978088	0					
ANR	8978312	IfStatement	if ( body == 0 )		8978088	3					
ANR	8978313	Condition	body == 0	1187:28:37845:37853	8978088	0	True				
ANR	8978314	EqualityExpression	body == 0		8978088	0		==			
ANR	8978315	Identifier	body		8978088	0					
ANR	8978316	PrimaryExpression	0		8978088	1					
ANR	8978317	ExpressionStatement	return_error ( gs_error_VMerror )	1188:28:37884:37914	8978088	1	True				
ANR	8978318	CallExpression	return_error ( gs_error_VMerror )		8978088	0					
ANR	8978319	Callee	return_error		8978088	0					
ANR	8978320	Identifier	return_error		8978088	0					
ANR	8978321	ArgumentList	gs_error_VMerror		8978088	1					
ANR	8978322	Argument	gs_error_VMerror		8978088	0					
ANR	8978323	Identifier	gs_error_VMerror		8978088	0					
ANR	8978324	ExpressionStatement	"memcpy ( body , ""{/DefaultRGB /ColorSpace findresource} stopped"" , 46 )"	1189:24:37940:38006	8978088	4	True				
ANR	8978325	CallExpression	"memcpy ( body , ""{/DefaultRGB /ColorSpace findresource} stopped"" , 46 )"		8978088	0					
ANR	8978326	Callee	memcpy		8978088	0					
ANR	8978327	Identifier	memcpy		8978088	0					
ANR	8978328	ArgumentList	body		8978088	1					
ANR	8978329	Argument	body		8978088	0					
ANR	8978330	Identifier	body		8978088	0					
ANR	8978331	Argument	"""{/DefaultRGB /ColorSpace findresource} stopped"""		8978088	1					
ANR	8978332	PrimaryExpression	"""{/DefaultRGB /ColorSpace findresource} stopped"""		8978088	0					
ANR	8978333	Argument	46		8978088	2					
ANR	8978334	PrimaryExpression	46		8978088	0					
ANR	8978335	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 46 , body )"	1190:24:38032:38085	8978088	5	True				
ANR	8978336	CallExpression	"make_string ( & stref , a_all | icurrent_space , 46 , body )"		8978088	0					
ANR	8978337	Callee	make_string		8978088	0					
ANR	8978338	Identifier	make_string		8978088	0					
ANR	8978339	ArgumentList	& stref		8978088	1					
ANR	8978340	Argument	& stref		8978088	0					
ANR	8978341	UnaryOperationExpression	& stref		8978088	0					
ANR	8978342	UnaryOperator	&		8978088	0					
ANR	8978343	Identifier	stref		8978088	1					
ANR	8978344	Argument	a_all | icurrent_space		8978088	1					
ANR	8978345	InclusiveOrExpression	a_all | icurrent_space		8978088	0		|			
ANR	8978346	Identifier	a_all		8978088	0					
ANR	8978347	Identifier	icurrent_space		8978088	1					
ANR	8978348	Argument	46		8978088	2					
ANR	8978349	PrimaryExpression	46		8978088	0					
ANR	8978350	Argument	body		8978088	3					
ANR	8978351	Identifier	body		8978088	0					
ANR	8978352	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1191:24:38111:38144	8978088	6	True				
ANR	8978353	CallExpression	"r_set_attrs ( & stref , a_executable )"		8978088	0					
ANR	8978354	Callee	r_set_attrs		8978088	0					
ANR	8978355	Identifier	r_set_attrs		8978088	0					
ANR	8978356	ArgumentList	& stref		8978088	1					
ANR	8978357	Argument	& stref		8978088	0					
ANR	8978358	UnaryOperationExpression	& stref		8978088	0					
ANR	8978359	UnaryOperator	&		8978088	0					
ANR	8978360	Identifier	stref		8978088	1					
ANR	8978361	Argument	a_executable		8978088	1					
ANR	8978362	Identifier	a_executable		8978088	0					
ANR	8978363	ExpressionStatement	esp ++	1192:24:38170:38175	8978088	7	True				
ANR	8978364	PostIncDecOperationExpression	esp ++		8978088	0					
ANR	8978365	Identifier	esp		8978088	0					
ANR	8978366	IncDec	++		8978088	1					
ANR	8978367	ExpressionStatement	"ref_assign ( esp , & stref )"	1193:24:38201:38224	8978088	8	True				
ANR	8978368	CallExpression	"ref_assign ( esp , & stref )"		8978088	0					
ANR	8978369	Callee	ref_assign		8978088	0					
ANR	8978370	Identifier	ref_assign		8978088	0					
ANR	8978371	ArgumentList	esp		8978088	1					
ANR	8978372	Argument	esp		8978088	0					
ANR	8978373	Identifier	esp		8978088	0					
ANR	8978374	Argument	& stref		8978088	1					
ANR	8978375	UnaryOperationExpression	& stref		8978088	0					
ANR	8978376	UnaryOperator	&		8978088	0					
ANR	8978377	Identifier	stref		8978088	1					
ANR	8978378	ReturnStatement	return o_push_estack ;	1194:24:38250:38270	8978088	9	True				
ANR	8978379	Identifier	o_push_estack		8978088	0					
ANR	8978380	Label	case 1 :	1198:12:38359:38365	8978088	2	True				
ANR	8978381	ExpressionStatement	pcs = gs_cspace_new_DeviceRGB ( imemory )	1199:16:38383:38421	8978088	3	True				
ANR	8978382	AssignmentExpression	pcs = gs_cspace_new_DeviceRGB ( imemory )		8978088	0		=			
ANR	8978383	Identifier	pcs		8978088	0					
ANR	8978384	CallExpression	gs_cspace_new_DeviceRGB ( imemory )		8978088	1					
ANR	8978385	Callee	gs_cspace_new_DeviceRGB		8978088	0					
ANR	8978386	Identifier	gs_cspace_new_DeviceRGB		8978088	0					
ANR	8978387	ArgumentList	imemory		8978088	1					
ANR	8978388	Argument	imemory		8978088	0					
ANR	8978389	Identifier	imemory		8978088	0					
ANR	8978390	IfStatement	if ( pcs == NULL )		8978088	4					
ANR	8978391	Condition	pcs == NULL	1200:20:38443:38453	8978088	0	True				
ANR	8978392	EqualityExpression	pcs == NULL		8978088	0		==			
ANR	8978393	Identifier	pcs		8978088	0					
ANR	8978394	Identifier	NULL		8978088	1					
ANR	8978395	ExpressionStatement	return_error ( gs_error_VMerror )	1201:20:38476:38506	8978088	1	True				
ANR	8978396	CallExpression	return_error ( gs_error_VMerror )		8978088	0					
ANR	8978397	Callee	return_error		8978088	0					
ANR	8978398	Identifier	return_error		8978088	0					
ANR	8978399	ArgumentList	gs_error_VMerror		8978088	1					
ANR	8978400	Argument	gs_error_VMerror		8978088	0					
ANR	8978401	Identifier	gs_error_VMerror		8978088	0					
ANR	8978402	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	1202:16:38524:38557	8978088	5	True				
ANR	8978403	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8978088	0		=			
ANR	8978404	Identifier	code		8978088	0					
ANR	8978405	CallExpression	"gs_setcolorspace ( igs , pcs )"		8978088	1					
ANR	8978406	Callee	gs_setcolorspace		8978088	0					
ANR	8978407	Identifier	gs_setcolorspace		8978088	0					
ANR	8978408	ArgumentList	igs		8978088	1					
ANR	8978409	Argument	igs		8978088	0					
ANR	8978410	Identifier	igs		8978088	0					
ANR	8978411	Argument	pcs		8978088	1					
ANR	8978412	Identifier	pcs		8978088	0					
ANR	8978413	IfStatement	if ( code >= 0 )		8978088	6					
ANR	8978414	Condition	code >= 0	1203:20:38579:38587	8978088	0	True				
ANR	8978415	RelationalExpression	code >= 0		8978088	0		>=			
ANR	8978416	Identifier	code		8978088	0					
ANR	8978417	PrimaryExpression	0		8978088	1					
ANR	8978418	CompoundStatement		52:20:2134:2184	8978088	1					
ANR	8978419	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	1204:20:38612:38662	8978088	0	True				
ANR	8978420	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		8978088	0					
ANR	8978421	IdentifierDeclType	gs_client_color *		8978088	0					
ANR	8978422	Identifier	pcc		8978088	1					
ANR	8978423	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		8978088	2		=			
ANR	8978424	Identifier	pcc		8978088	0					
ANR	8978425	CallExpression	gs_currentcolor_inline ( igs )		8978088	1					
ANR	8978426	Callee	gs_currentcolor_inline		8978088	0					
ANR	8978427	Identifier	gs_currentcolor_inline		8978088	0					
ANR	8978428	ArgumentList	igs		8978088	1					
ANR	8978429	Argument	igs		8978088	0					
ANR	8978430	Identifier	igs		8978088	0					
ANR	8978431	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	1206:20:38685:38715	8978088	1	True				
ANR	8978432	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		8978088	0					
ANR	8978433	Callee	cs_adjust_color_count		8978088	0					
ANR	8978434	Identifier	cs_adjust_color_count		8978088	0					
ANR	8978435	ArgumentList	igs		8978088	1					
ANR	8978436	Argument	igs		8978088	0					
ANR	8978437	Identifier	igs		8978088	0					
ANR	8978438	Argument	- 1		8978088	1					
ANR	8978439	UnaryOperationExpression	- 1		8978088	0					
ANR	8978440	UnaryOperator	-		8978088	0					
ANR	8978441	PrimaryExpression	1		8978088	1					
ANR	8978442	ExpressionStatement	pcc -> paint . values [ 0 ] = 0	1207:20:38766:38790	8978088	2	True				
ANR	8978443	AssignmentExpression	pcc -> paint . values [ 0 ] = 0		8978088	0		=			
ANR	8978444	ArrayIndexing	pcc -> paint . values [ 0 ]		8978088	0					
ANR	8978445	MemberAccess	pcc -> paint . values		8978088	0					
ANR	8978446	PtrMemberAccess	pcc -> paint		8978088	0					
ANR	8978447	Identifier	pcc		8978088	0					
ANR	8978448	Identifier	paint		8978088	1					
ANR	8978449	Identifier	values		8978088	1					
ANR	8978450	PrimaryExpression	0		8978088	1					
ANR	8978451	PrimaryExpression	0		8978088	1					
ANR	8978452	ExpressionStatement	pcc -> paint . values [ 1 ] = 0	1208:20:38812:38836	8978088	3	True				
ANR	8978453	AssignmentExpression	pcc -> paint . values [ 1 ] = 0		8978088	0		=			
ANR	8978454	ArrayIndexing	pcc -> paint . values [ 1 ]		8978088	0					
ANR	8978455	MemberAccess	pcc -> paint . values		8978088	0					
ANR	8978456	PtrMemberAccess	pcc -> paint		8978088	0					
ANR	8978457	Identifier	pcc		8978088	0					
ANR	8978458	Identifier	paint		8978088	1					
ANR	8978459	Identifier	values		8978088	1					
ANR	8978460	PrimaryExpression	1		8978088	1					
ANR	8978461	PrimaryExpression	0		8978088	1					
ANR	8978462	ExpressionStatement	pcc -> paint . values [ 2 ] = 0	1209:20:38858:38882	8978088	4	True				
ANR	8978463	AssignmentExpression	pcc -> paint . values [ 2 ] = 0		8978088	0		=			
ANR	8978464	ArrayIndexing	pcc -> paint . values [ 2 ]		8978088	0					
ANR	8978465	MemberAccess	pcc -> paint . values		8978088	0					
ANR	8978466	PtrMemberAccess	pcc -> paint		8978088	0					
ANR	8978467	Identifier	pcc		8978088	0					
ANR	8978468	Identifier	paint		8978088	1					
ANR	8978469	Identifier	values		8978088	1					
ANR	8978470	PrimaryExpression	2		8978088	1					
ANR	8978471	PrimaryExpression	0		8978088	1					
ANR	8978472	ExpressionStatement	pcc -> pattern = 0	1210:20:38904:38920	8978088	5	True				
ANR	8978473	AssignmentExpression	pcc -> pattern = 0		8978088	0		=			
ANR	8978474	PtrMemberAccess	pcc -> pattern		8978088	0					
ANR	8978475	Identifier	pcc		8978088	0					
ANR	8978476	Identifier	pattern		8978088	1					
ANR	8978477	PrimaryExpression	0		8978088	1					
ANR	8978478	ExpressionStatement	gx_unset_dev_color ( igs )	1211:20:38956:38979	8978088	6	True				
ANR	8978479	CallExpression	gx_unset_dev_color ( igs )		8978088	0					
ANR	8978480	Callee	gx_unset_dev_color		8978088	0					
ANR	8978481	Identifier	gx_unset_dev_color		8978088	0					
ANR	8978482	ArgumentList	igs		8978088	1					
ANR	8978483	Argument	igs		8978088	0					
ANR	8978484	Identifier	igs		8978088	0					
ANR	8978485	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	1213:16:39015:39057	8978088	7	True				
ANR	8978486	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		8978088	0					
ANR	8978487	Callee	rc_decrement_only_cs		8978088	0					
ANR	8978488	Identifier	rc_decrement_only_cs		8978088	0					
ANR	8978489	ArgumentList	pcs		8978088	1					
ANR	8978490	Argument	pcs		8978088	0					
ANR	8978491	Identifier	pcs		8978088	0					
ANR	8978492	Argument	"""zsetdevcspace"""		8978088	1					
ANR	8978493	PrimaryExpression	"""zsetdevcspace"""		8978088	0					
ANR	8978494	ExpressionStatement	* cont = 0	1214:16:39075:39084	8978088	8	True				
ANR	8978495	AssignmentExpression	* cont = 0		8978088	0		=			
ANR	8978496	UnaryOperationExpression	* cont		8978088	0					
ANR	8978497	UnaryOperator	*		8978088	0					
ANR	8978498	Identifier	cont		8978088	1					
ANR	8978499	PrimaryExpression	0		8978088	1					
ANR	8978500	ExpressionStatement	* stage = 0	1215:16:39102:39112	8978088	9	True				
ANR	8978501	AssignmentExpression	* stage = 0		8978088	0		=			
ANR	8978502	UnaryOperationExpression	* stage		8978088	0					
ANR	8978503	UnaryOperator	*		8978088	0					
ANR	8978504	Identifier	stage		8978088	1					
ANR	8978505	PrimaryExpression	0		8978088	1					
ANR	8978506	BreakStatement	break ;	1216:16:39130:39135	8978088	10	True				
ANR	8978507	Label	case 2 :	1217:12:39149:39155	8978088	11	True				
ANR	8978508	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8978088	12					
ANR	8978509	Condition	"! r_has_type ( op , t_boolean )"	1218:20:39177:39202	8978088	0	True				
ANR	8978510	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8978088	0					
ANR	8978511	UnaryOperator	!		8978088	0					
ANR	8978512	CallExpression	"r_has_type ( op , t_boolean )"		8978088	1					
ANR	8978513	Callee	r_has_type		8978088	0					
ANR	8978514	Identifier	r_has_type		8978088	0					
ANR	8978515	ArgumentList	op		8978088	1					
ANR	8978516	Argument	op		8978088	0					
ANR	8978517	Identifier	op		8978088	0					
ANR	8978518	Argument	t_boolean		8978088	1					
ANR	8978519	Identifier	t_boolean		8978088	0					
ANR	8978520	ExpressionStatement	return_error ( gs_error_typecheck )	1219:20:39225:39257	8978088	1	True				
ANR	8978521	CallExpression	return_error ( gs_error_typecheck )		8978088	0					
ANR	8978522	Callee	return_error		8978088	0					
ANR	8978523	Identifier	return_error		8978088	0					
ANR	8978524	ArgumentList	gs_error_typecheck		8978088	1					
ANR	8978525	Argument	gs_error_typecheck		8978088	0					
ANR	8978526	Identifier	gs_error_typecheck		8978088	0					
ANR	8978527	IfStatement	if ( op -> value . boolval )		8978088	13					
ANR	8978528	Condition	op -> value . boolval	1220:20:39279:39295	8978088	0	True				
ANR	8978529	MemberAccess	op -> value . boolval		8978088	0					
ANR	8978530	PtrMemberAccess	op -> value		8978088	0					
ANR	8978531	Identifier	op		8978088	0					
ANR	8978532	Identifier	value		8978088	1					
ANR	8978533	Identifier	boolval		8978088	1					
ANR	8978534	CompoundStatement		68:39:2820:2820	8978088	1					
ANR	8978535	ExpressionStatement	pop ( 1 )	1224:20:39460:39466	8978088	0	True				
ANR	8978536	CallExpression	pop ( 1 )		8978088	0					
ANR	8978537	Callee	pop		8978088	0					
ANR	8978538	Identifier	pop		8978088	0					
ANR	8978539	ArgumentList	1		8978088	1					
ANR	8978540	Argument	1		8978088	0					
ANR	8978541	PrimaryExpression	1		8978088	0					
ANR	8978542	ExpressionStatement	* stage = 1	1225:20:39488:39498	8978088	1	True				
ANR	8978543	AssignmentExpression	* stage = 1		8978088	0		=			
ANR	8978544	UnaryOperationExpression	* stage		8978088	0					
ANR	8978545	UnaryOperator	*		8978088	0					
ANR	8978546	Identifier	stage		8978088	1					
ANR	8978547	PrimaryExpression	1		8978088	1					
ANR	8978548	BreakStatement	break ;	1226:20:39520:39525	8978088	2	True				
ANR	8978549	ExpressionStatement	pop ( 1 )	1228:16:39561:39567	8978088	14	True				
ANR	8978550	CallExpression	pop ( 1 )		8978088	0					
ANR	8978551	Callee	pop		8978088	0					
ANR	8978552	Identifier	pop		8978088	0					
ANR	8978553	ArgumentList	1		8978088	1					
ANR	8978554	Argument	1		8978088	0					
ANR	8978555	PrimaryExpression	1		8978088	0					
ANR	8978556	ExpressionStatement	* stage = 3	1229:16:39585:39595	8978088	15	True				
ANR	8978557	AssignmentExpression	* stage = 3		8978088	0		=			
ANR	8978558	UnaryOperationExpression	* stage		8978088	0					
ANR	8978559	UnaryOperator	*		8978088	0					
ANR	8978560	Identifier	stage		8978088	1					
ANR	8978561	PrimaryExpression	3		8978088	1					
ANR	8978562	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1230:16:39613:39650	8978088	16	True				
ANR	8978563	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8978088	0		=			
ANR	8978564	Identifier	code		8978088	0					
ANR	8978565	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8978088	1					
ANR	8978566	Callee	setcolorspace_nosubst		8978088	0					
ANR	8978567	Identifier	setcolorspace_nosubst		8978088	0					
ANR	8978568	ArgumentList	i_ctx_p		8978088	1					
ANR	8978569	Argument	i_ctx_p		8978088	0					
ANR	8978570	Identifier	i_ctx_p		8978088	0					
ANR	8978571	IfStatement	if ( code != 0 )		8978088	17					
ANR	8978572	Condition	code != 0	1231:20:39672:39680	8978088	0	True				
ANR	8978573	EqualityExpression	code != 0		8978088	0		!=			
ANR	8978574	Identifier	code		8978088	0					
ANR	8978575	PrimaryExpression	0		8978088	1					
ANR	8978576	ReturnStatement	return code ;	1232:20:39703:39714	8978088	1	True				
ANR	8978577	Identifier	code		8978088	0					
ANR	8978578	BreakStatement	break ;	1233:16:39732:39737	8978088	18	True				
ANR	8978579	Label	case 3 :	1234:12:39751:39757	8978088	19	True				
ANR	8978580	ExpressionStatement	* cont = 0	1239:16:39972:39981	8978088	20	True				
ANR	8978581	AssignmentExpression	* cont = 0		8978088	0		=			
ANR	8978582	UnaryOperationExpression	* cont		8978088	0					
ANR	8978583	UnaryOperator	*		8978088	0					
ANR	8978584	Identifier	cont		8978088	1					
ANR	8978585	PrimaryExpression	0		8978088	1					
ANR	8978586	ExpressionStatement	* stage = 0	1240:16:39999:40009	8978088	21	True				
ANR	8978587	AssignmentExpression	* stage = 0		8978088	0		=			
ANR	8978588	UnaryOperationExpression	* stage		8978088	0					
ANR	8978589	UnaryOperator	*		8978088	0					
ANR	8978590	Identifier	stage		8978088	1					
ANR	8978591	PrimaryExpression	0		8978088	1					
ANR	8978592	BreakStatement	break ;	1241:16:40027:40032	8978088	22	True				
ANR	8978593	Label	case 4 :	1242:12:40046:40052	8978088	23	True				
ANR	8978594	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8978088	24					
ANR	8978595	Condition	"! r_has_type ( op , t_boolean )"	1249:20:40473:40498	8978088	0	True				
ANR	8978596	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8978088	0					
ANR	8978597	UnaryOperator	!		8978088	0					
ANR	8978598	CallExpression	"r_has_type ( op , t_boolean )"		8978088	1					
ANR	8978599	Callee	r_has_type		8978088	0					
ANR	8978600	Identifier	r_has_type		8978088	0					
ANR	8978601	ArgumentList	op		8978088	1					
ANR	8978602	Argument	op		8978088	0					
ANR	8978603	Identifier	op		8978088	0					
ANR	8978604	Argument	t_boolean		8978088	1					
ANR	8978605	Identifier	t_boolean		8978088	0					
ANR	8978606	ExpressionStatement	return_error ( gs_error_typecheck )	1250:20:40521:40553	8978088	1	True				
ANR	8978607	CallExpression	return_error ( gs_error_typecheck )		8978088	0					
ANR	8978608	Callee	return_error		8978088	0					
ANR	8978609	Identifier	return_error		8978088	0					
ANR	8978610	ArgumentList	gs_error_typecheck		8978088	1					
ANR	8978611	Argument	gs_error_typecheck		8978088	0					
ANR	8978612	Identifier	gs_error_typecheck		8978088	0					
ANR	8978613	ExpressionStatement	pop ( 1 )	1251:16:40571:40577	8978088	25	True				
ANR	8978614	CallExpression	pop ( 1 )		8978088	0					
ANR	8978615	Callee	pop		8978088	0					
ANR	8978616	Identifier	pop		8978088	0					
ANR	8978617	ArgumentList	1		8978088	1					
ANR	8978618	Argument	1		8978088	0					
ANR	8978619	PrimaryExpression	1		8978088	0					
ANR	8978620	ExpressionStatement	* stage = 1	1252:16:40595:40605	8978088	26	True				
ANR	8978621	AssignmentExpression	* stage = 1		8978088	0		=			
ANR	8978622	UnaryOperationExpression	* stage		8978088	0					
ANR	8978623	UnaryOperator	*		8978088	0					
ANR	8978624	Identifier	stage		8978088	1					
ANR	8978625	PrimaryExpression	1		8978088	1					
ANR	8978626	ExpressionStatement	* cont = 1	1253:16:40623:40632	8978088	27	True				
ANR	8978627	AssignmentExpression	* cont = 1		8978088	0		=			
ANR	8978628	UnaryOperationExpression	* cont		8978088	0					
ANR	8978629	UnaryOperator	*		8978088	0					
ANR	8978630	Identifier	cont		8978088	1					
ANR	8978631	PrimaryExpression	1		8978088	1					
ANR	8978632	IfStatement	if ( op -> value . boolval )		8978088	28					
ANR	8978633	Condition	op -> value . boolval	1254:20:40654:40670	8978088	0	True				
ANR	8978634	MemberAccess	op -> value . boolval		8978088	0					
ANR	8978635	PtrMemberAccess	op -> value		8978088	0					
ANR	8978636	Identifier	op		8978088	0					
ANR	8978637	Identifier	value		8978088	1					
ANR	8978638	Identifier	boolval		8978088	1					
ANR	8978639	CompoundStatement		102:39:4195:4195	8978088	1					
ANR	8978640	ExpressionStatement	* stage = 5	1255:20:40695:40705	8978088	0	True				
ANR	8978641	AssignmentExpression	* stage = 5		8978088	0		=			
ANR	8978642	UnaryOperationExpression	* stage		8978088	0					
ANR	8978643	UnaryOperator	*		8978088	0					
ANR	8978644	Identifier	stage		8978088	1					
ANR	8978645	PrimaryExpression	5		8978088	1					
ANR	8978646	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1256:20:40727:40764	8978088	1	True				
ANR	8978647	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8978088	0		=			
ANR	8978648	Identifier	code		8978088	0					
ANR	8978649	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8978088	1					
ANR	8978650	Callee	setcolorspace_nosubst		8978088	0					
ANR	8978651	Identifier	setcolorspace_nosubst		8978088	0					
ANR	8978652	ArgumentList	i_ctx_p		8978088	1					
ANR	8978653	Argument	i_ctx_p		8978088	0					
ANR	8978654	Identifier	i_ctx_p		8978088	0					
ANR	8978655	IfStatement	if ( code != 0 )		8978088	2					
ANR	8978656	Condition	code != 0	1257:24:40790:40798	8978088	0	True				
ANR	8978657	EqualityExpression	code != 0		8978088	0		!=			
ANR	8978658	Identifier	code		8978088	0					
ANR	8978659	PrimaryExpression	0		8978088	1					
ANR	8978660	ReturnStatement	return code ;	1258:24:40825:40836	8978088	1	True				
ANR	8978661	Identifier	code		8978088	0					
ANR	8978662	BreakStatement	break ;	1260:16:40872:40877	8978088	29	True				
ANR	8978663	Label	case 5 :	1261:12:40891:40897	8978088	30	True				
ANR	8978664	ExpressionStatement	* stage = 1	1266:16:41162:41172	8978088	31	True				
ANR	8978665	AssignmentExpression	* stage = 1		8978088	0		=			
ANR	8978666	UnaryOperationExpression	* stage		8978088	0					
ANR	8978667	UnaryOperator	*		8978088	0					
ANR	8978668	Identifier	stage		8978088	1					
ANR	8978669	PrimaryExpression	1		8978088	1					
ANR	8978670	ExpressionStatement	* cont = 1	1267:16:41190:41199	8978088	32	True				
ANR	8978671	AssignmentExpression	* cont = 1		8978088	0		=			
ANR	8978672	UnaryOperationExpression	* cont		8978088	0					
ANR	8978673	UnaryOperator	*		8978088	0					
ANR	8978674	Identifier	cont		8978088	1					
ANR	8978675	PrimaryExpression	1		8978088	1					
ANR	8978676	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1268:16:41217:41251	8978088	33	True				
ANR	8978677	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		8978088	0		=			
ANR	8978678	Identifier	code		8978088	0					
ANR	8978679	CallExpression	zincludecolorspace ( i_ctx_p )		8978088	1					
ANR	8978680	Callee	zincludecolorspace		8978088	0					
ANR	8978681	Identifier	zincludecolorspace		8978088	0					
ANR	8978682	ArgumentList	i_ctx_p		8978088	1					
ANR	8978683	Argument	i_ctx_p		8978088	0					
ANR	8978684	Identifier	i_ctx_p		8978088	0					
ANR	8978685	IfStatement	if ( code != 0 )		8978088	34					
ANR	8978686	Condition	code != 0	1269:20:41273:41281	8978088	0	True				
ANR	8978687	EqualityExpression	code != 0		8978088	0		!=			
ANR	8978688	Identifier	code		8978088	0					
ANR	8978689	PrimaryExpression	0		8978088	1					
ANR	8978690	ReturnStatement	return code ;	1270:20:41304:41315	8978088	1	True				
ANR	8978691	Identifier	code		8978088	0					
ANR	8978692	BreakStatement	break ;	1271:16:41333:41338	8978088	35	True				
ANR	8978693	Condition	* stage	1273:13:41363:41368	8978088	1	True				
ANR	8978694	UnaryOperationExpression	* stage		8978088	0					
ANR	8978695	UnaryOperator	*		8978088	0					
ANR	8978696	Identifier	stage		8978088	1					
ANR	8978697	ReturnStatement	return code ;	1274:4:41376:41387	8978088	5	True				
ANR	8978698	Identifier	code		8978088	0					
ANR	8978699	ReturnType	static int		8978088	1					
ANR	8978700	Identifier	setrgbspace		8978088	2					
ANR	8978701	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8978088	3					
ANR	8978702	Parameter	i_ctx_t * i_ctx_p	1152:23:36413:36429	8978088	0	True				
ANR	8978703	ParameterType	i_ctx_t *		8978088	0					
ANR	8978704	Identifier	i_ctx_p		8978088	1					
ANR	8978705	Parameter	ref * r	1152:42:36432:36437	8978088	1	True				
ANR	8978706	ParameterType	ref *		8978088	0					
ANR	8978707	Identifier	r		8978088	1					
ANR	8978708	Parameter	int * stage	1152:50:36440:36449	8978088	2	True				
ANR	8978709	ParameterType	int *		8978088	0					
ANR	8978710	Identifier	stage		8978088	1					
ANR	8978711	Parameter	int * cont	1152:62:36452:36460	8978088	3	True				
ANR	8978712	ParameterType	int *		8978088	0					
ANR	8978713	Identifier	cont		8978088	1					
ANR	8978714	Parameter	int CIESubst	1152:73:36463:36474	8978088	4	True				
ANR	8978715	ParameterType	int		8978088	0					
ANR	8978716	Identifier	CIESubst		8978088	1					
ANR	8978717	CFGEntryNode	ENTRY		8978088		True				
ANR	8978718	CFGExitNode	EXIT		8978088		True				
ANR	8978719	Symbol	esp		8978088						
ANR	8978720	Symbol	* op		8978088						
ANR	8978721	Symbol	pcc -> pattern		8978088						
ANR	8978722	Symbol	gs_cspace_new_DeviceRGB		8978088						
ANR	8978723	Symbol	body		8978088						
ANR	8978724	Symbol	op -> value . boolval		8978088						
ANR	8978725	Symbol	osp		8978088						
ANR	8978726	Symbol	* istate		8978088						
ANR	8978727	Symbol	r_has_type		8978088						
ANR	8978728	Symbol	igs		8978088						
ANR	8978729	Symbol	pcc -> paint		8978088						
ANR	8978730	Symbol	stref		8978088						
ANR	8978731	Symbol	* pcc -> paint		8978088						
ANR	8978732	Symbol	imemory		8978088						
ANR	8978733	Symbol	cont		8978088						
ANR	8978734	Symbol	NULL		8978088						
ANR	8978735	Symbol	dict_find_string		8978088						
ANR	8978736	Symbol	* * pcc		8978088						
ANR	8978737	Symbol	istate -> use_cie_color . value		8978088						
ANR	8978738	Symbol	t_boolean		8978088						
ANR	8978739	Symbol	zincludecolorspace		8978088						
ANR	8978740	Symbol	i_ctx_p		8978088						
ANR	8978741	Symbol	& nosubst		8978088						
ANR	8978742	Symbol	a_executable		8978088						
ANR	8978743	Symbol	gs_currentcolor_inline		8978088						
ANR	8978744	Symbol	* pcc		8978088						
ANR	8978745	Symbol	systemdict		8978088						
ANR	8978746	Symbol	* pcc -> paint . values		8978088						
ANR	8978747	Symbol	a_all		8978088						
ANR	8978748	Symbol	code		8978088						
ANR	8978749	Symbol	* nosubst		8978088						
ANR	8978750	Symbol	& stref		8978088						
ANR	8978751	Symbol	gs_setcolorspace		8978088						
ANR	8978752	Symbol	istate -> use_cie_color . value . boolval		8978088						
ANR	8978753	Symbol	ialloc_string		8978088						
ANR	8978754	Symbol	pcc -> paint . values		8978088						
ANR	8978755	Symbol	pcc		8978088						
ANR	8978756	Symbol	gs_error_typecheck		8978088						
ANR	8978757	Symbol	op -> value		8978088						
ANR	8978758	Symbol	CIESubst		8978088						
ANR	8978759	Symbol	nosubst -> value . boolval		8978088						
ANR	8978760	Symbol	o_push_estack		8978088						
ANR	8978761	Symbol	op		8978088						
ANR	8978762	Symbol	pcs		8978088						
ANR	8978763	Symbol	nosubst		8978088						
ANR	8978764	Symbol	* stage		8978088						
ANR	8978765	Symbol	nosubst -> value		8978088						
ANR	8978766	Symbol	icurrent_space		8978088						
ANR	8978767	Symbol	gs_error_VMerror		8978088						
ANR	8978768	Symbol	r		8978088						
ANR	8978769	Symbol	stage		8978088						
ANR	8978770	Symbol	istate -> use_cie_color		8978088						
ANR	8978771	Symbol	* cont		8978088						
ANR	8978772	Symbol	setcolorspace_nosubst		8978088						
ANR	8978773	Symbol	istate		8978088						
ANR	8978774	Function	rgbdomain	1276:0:41391:41560							
ANR	8978775	FunctionDef	"rgbdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8978774	0					
ANR	8978776	CompoundStatement		1277:0:41455:41560	8978774	0					
ANR	8978777	IdentifierDeclStatement	int i ;	1278:4:41461:41466	8978774	0	True				
ANR	8978778	IdentifierDecl	i		8978774	0					
ANR	8978779	IdentifierDeclType	int		8978774	0					
ANR	8978780	Identifier	i		8978774	1					
ANR	8978781	ForStatement	for ( i = 0 ; i < 6 ; i += 2 )		8978774	1					
ANR	8978782	ForInit	i = 0 ;	1280:9:41478:41483	8978774	0	True				
ANR	8978783	AssignmentExpression	i = 0		8978774	0		=			
ANR	8978784	Identifier	i		8978774	0					
ANR	8978785	PrimaryExpression	0		8978774	1					
ANR	8978786	Condition	i < 6	1280:15:41484:41488	8978774	1	True				
ANR	8978787	RelationalExpression	i < 6		8978774	0		<			
ANR	8978788	Identifier	i		8978774	0					
ANR	8978789	PrimaryExpression	6		8978774	1					
ANR	8978790	AssignmentExpression	i += 2	1280:21:41490:41493	8978774	2	True	+=			
ANR	8978791	Identifier	i		8978774	0					
ANR	8978792	PrimaryExpression	2		8978774	1					
ANR	8978793	CompoundStatement		4:27:40:40	8978774	3					
ANR	8978794	ExpressionStatement	ptr [ i ] = 0	1281:8:41506:41516	8978774	0	True				
ANR	8978795	AssignmentExpression	ptr [ i ] = 0		8978774	0		=			
ANR	8978796	ArrayIndexing	ptr [ i ]		8978774	0					
ANR	8978797	Identifier	ptr		8978774	0					
ANR	8978798	Identifier	i		8978774	1					
ANR	8978799	PrimaryExpression	0		8978774	1					
ANR	8978800	ExpressionStatement	ptr [ i + 1 ] = 1	1282:8:41526:41538	8978774	1	True				
ANR	8978801	AssignmentExpression	ptr [ i + 1 ] = 1		8978774	0		=			
ANR	8978802	ArrayIndexing	ptr [ i + 1 ]		8978774	0					
ANR	8978803	Identifier	ptr		8978774	0					
ANR	8978804	AdditiveExpression	i + 1		8978774	1		+			
ANR	8978805	Identifier	i		8978774	0					
ANR	8978806	PrimaryExpression	1		8978774	1					
ANR	8978807	PrimaryExpression	1		8978774	1					
ANR	8978808	ReturnStatement	return 0 ;	1284:4:41550:41558	8978774	2	True				
ANR	8978809	PrimaryExpression	0		8978774	0					
ANR	8978810	ReturnType	static int		8978774	1					
ANR	8978811	Identifier	rgbdomain		8978774	2					
ANR	8978812	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8978774	3					
ANR	8978813	Parameter	i_ctx_t * i_ctx_p	1276:21:41412:41428	8978774	0	True				
ANR	8978814	ParameterType	i_ctx_t *		8978774	0					
ANR	8978815	Identifier	i_ctx_p		8978774	1					
ANR	8978816	Parameter	ref * space	1276:40:41431:41440	8978774	1	True				
ANR	8978817	ParameterType	ref *		8978774	0					
ANR	8978818	Identifier	space		8978774	1					
ANR	8978819	Parameter	float * ptr	1276:52:41443:41452	8978774	2	True				
ANR	8978820	ParameterType	float *		8978774	0					
ANR	8978821	Identifier	ptr		8978774	1					
ANR	8978822	CFGEntryNode	ENTRY		8978774		True				
ANR	8978823	CFGExitNode	EXIT		8978774		True				
ANR	8978824	Symbol	* i		8978774						
ANR	8978825	Symbol	i_ctx_p		8978774						
ANR	8978826	Symbol	* ptr		8978774						
ANR	8978827	Symbol	i		8978774						
ANR	8978828	Symbol	space		8978774						
ANR	8978829	Symbol	ptr		8978774						
ANR	8978830	Function	rgbrange	1286:0:41562:41730							
ANR	8978831	FunctionDef	"rgbrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8978830	0					
ANR	8978832	CompoundStatement		1287:0:41625:41730	8978830	0					
ANR	8978833	IdentifierDeclStatement	int i ;	1288:4:41631:41636	8978830	0	True				
ANR	8978834	IdentifierDecl	i		8978830	0					
ANR	8978835	IdentifierDeclType	int		8978830	0					
ANR	8978836	Identifier	i		8978830	1					
ANR	8978837	ForStatement	for ( i = 0 ; i < 6 ; i += 2 )		8978830	1					
ANR	8978838	ForInit	i = 0 ;	1290:9:41648:41653	8978830	0	True				
ANR	8978839	AssignmentExpression	i = 0		8978830	0		=			
ANR	8978840	Identifier	i		8978830	0					
ANR	8978841	PrimaryExpression	0		8978830	1					
ANR	8978842	Condition	i < 6	1290:15:41654:41658	8978830	1	True				
ANR	8978843	RelationalExpression	i < 6		8978830	0		<			
ANR	8978844	Identifier	i		8978830	0					
ANR	8978845	PrimaryExpression	6		8978830	1					
ANR	8978846	AssignmentExpression	i += 2	1290:21:41660:41663	8978830	2	True	+=			
ANR	8978847	Identifier	i		8978830	0					
ANR	8978848	PrimaryExpression	2		8978830	1					
ANR	8978849	CompoundStatement		4:27:40:40	8978830	3					
ANR	8978850	ExpressionStatement	ptr [ i ] = 0	1291:8:41676:41686	8978830	0	True				
ANR	8978851	AssignmentExpression	ptr [ i ] = 0		8978830	0		=			
ANR	8978852	ArrayIndexing	ptr [ i ]		8978830	0					
ANR	8978853	Identifier	ptr		8978830	0					
ANR	8978854	Identifier	i		8978830	1					
ANR	8978855	PrimaryExpression	0		8978830	1					
ANR	8978856	ExpressionStatement	ptr [ i + 1 ] = 1	1292:8:41696:41708	8978830	1	True				
ANR	8978857	AssignmentExpression	ptr [ i + 1 ] = 1		8978830	0		=			
ANR	8978858	ArrayIndexing	ptr [ i + 1 ]		8978830	0					
ANR	8978859	Identifier	ptr		8978830	0					
ANR	8978860	AdditiveExpression	i + 1		8978830	1		+			
ANR	8978861	Identifier	i		8978830	0					
ANR	8978862	PrimaryExpression	1		8978830	1					
ANR	8978863	PrimaryExpression	1		8978830	1					
ANR	8978864	ReturnStatement	return 0 ;	1294:4:41720:41728	8978830	2	True				
ANR	8978865	PrimaryExpression	0		8978830	0					
ANR	8978866	ReturnType	static int		8978830	1					
ANR	8978867	Identifier	rgbrange		8978830	2					
ANR	8978868	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8978830	3					
ANR	8978869	Parameter	i_ctx_t * i_ctx_p	1286:20:41582:41598	8978830	0	True				
ANR	8978870	ParameterType	i_ctx_t *		8978830	0					
ANR	8978871	Identifier	i_ctx_p		8978830	1					
ANR	8978872	Parameter	ref * space	1286:39:41601:41610	8978830	1	True				
ANR	8978873	ParameterType	ref *		8978830	0					
ANR	8978874	Identifier	space		8978830	1					
ANR	8978875	Parameter	float * ptr	1286:51:41613:41622	8978830	2	True				
ANR	8978876	ParameterType	float *		8978830	0					
ANR	8978877	Identifier	ptr		8978830	1					
ANR	8978878	CFGEntryNode	ENTRY		8978830		True				
ANR	8978879	CFGExitNode	EXIT		8978830		True				
ANR	8978880	Symbol	* i		8978830						
ANR	8978881	Symbol	i_ctx_p		8978830						
ANR	8978882	Symbol	* ptr		8978830						
ANR	8978883	Symbol	i		8978830						
ANR	8978884	Symbol	space		8978830						
ANR	8978885	Symbol	ptr		8978830						
ANR	8978886	Function	rgbbasecolor	1302:0:42091:47744							
ANR	8978887	FunctionDef	"rgbbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8978886	0					
ANR	8978888	CompoundStatement		1303:0:42197:47744	8978886	0					
ANR	8978889	IdentifierDeclStatement	os_ptr op = osp ;	1304:4:42203:42218	8978886	0	True				
ANR	8978890	IdentifierDecl	op = osp		8978886	0					
ANR	8978891	IdentifierDeclType	os_ptr		8978886	0					
ANR	8978892	Identifier	op		8978886	1					
ANR	8978893	AssignmentExpression	op = osp		8978886	2		=			
ANR	8978894	Identifier	osp		8978886	0					
ANR	8978895	Identifier	osp		8978886	1					
ANR	8978896	IdentifierDeclStatement	"float RGB [ 3 ] , CMYK [ 4 ] , Gray , UCR , BG ;"	1305:4:42224:42260	8978886	1	True				
ANR	8978897	IdentifierDecl	RGB [ 3 ]		8978886	0					
ANR	8978898	IdentifierDeclType	float [ 3 ]		8978886	0					
ANR	8978899	Identifier	RGB		8978886	1					
ANR	8978900	PrimaryExpression	3		8978886	2					
ANR	8978901	IdentifierDecl	CMYK [ 4 ]		8978886	1					
ANR	8978902	IdentifierDeclType	float [ 4 ]		8978886	0					
ANR	8978903	Identifier	CMYK		8978886	1					
ANR	8978904	PrimaryExpression	4		8978886	2					
ANR	8978905	IdentifierDecl	Gray		8978886	2					
ANR	8978906	IdentifierDeclType	float		8978886	0					
ANR	8978907	Identifier	Gray		8978886	1					
ANR	8978908	IdentifierDecl	UCR		8978886	3					
ANR	8978909	IdentifierDeclType	float		8978886	0					
ANR	8978910	Identifier	UCR		8978886	1					
ANR	8978911	IdentifierDecl	BG		8978886	4					
ANR	8978912	IdentifierDeclType	float		8978886	0					
ANR	8978913	Identifier	BG		8978886	1					
ANR	8978914	IdentifierDeclStatement	int i ;	1306:4:42266:42271	8978886	2	True				
ANR	8978915	IdentifierDecl	i		8978886	0					
ANR	8978916	IdentifierDeclType	int		8978886	0					
ANR	8978917	Identifier	i		8978886	1					
ANR	8978918	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	1307:4:42277:42332	8978886	3	True				
ANR	8978919	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		8978886	0					
ANR	8978920	IdentifierDeclType	const gs_color_space *		8978886	0					
ANR	8978921	Identifier	pcs		8978886	1					
ANR	8978922	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		8978886	2		=			
ANR	8978923	Identifier	pcs		8978886	0					
ANR	8978924	CallExpression	gs_currentcolorspace ( igs )		8978886	1					
ANR	8978925	Callee	gs_currentcolorspace		8978886	0					
ANR	8978926	Identifier	gs_currentcolorspace		8978886	0					
ANR	8978927	ArgumentList	igs		8978886	1					
ANR	8978928	Argument	igs		8978886	0					
ANR	8978929	Identifier	igs		8978886	0					
ANR	8978930	IfStatement	if ( pcs -> id == cs_DeviceGray_id )		8978886	4					
ANR	8978931	Condition	pcs -> id == cs_DeviceGray_id	1309:8:42343:42369	8978886	0	True				
ANR	8978932	EqualityExpression	pcs -> id == cs_DeviceGray_id		8978886	0		==			
ANR	8978933	PtrMemberAccess	pcs -> id		8978886	0					
ANR	8978934	Identifier	pcs		8978886	0					
ANR	8978935	Identifier	id		8978886	1					
ANR	8978936	Identifier	cs_DeviceGray_id		8978886	1					
ANR	8978937	CompoundStatement		7:37:174:174	8978886	1					
ANR	8978938	ReturnStatement	"return ( graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth ) ) ;"	1319:8:42947:43016	8978886	0	True				
ANR	8978939	CallExpression	"graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth )"		8978886	0					
ANR	8978940	Callee	graybasecolor		8978886	0					
ANR	8978941	Identifier	graybasecolor		8978886	0					
ANR	8978942	ArgumentList	i_ctx_p		8978886	1					
ANR	8978943	Argument	i_ctx_p		8978886	0					
ANR	8978944	Identifier	i_ctx_p		8978886	0					
ANR	8978945	Argument	space		8978886	1					
ANR	8978946	Identifier	space		8978886	0					
ANR	8978947	Argument	base		8978886	2					
ANR	8978948	Identifier	base		8978886	0					
ANR	8978949	Argument	stage		8978886	3					
ANR	8978950	Identifier	stage		8978886	0					
ANR	8978951	Argument	cont		8978886	4					
ANR	8978952	Identifier	cont		8978886	0					
ANR	8978953	Argument	stack_depth		8978886	5					
ANR	8978954	Identifier	stack_depth		8978886	0					
ANR	8978955	SwitchStatement	switch ( * stage )		8978886	5					
ANR	8978956	Condition	* stage	1322:12:43037:43042	8978886	0	True				
ANR	8978957	UnaryOperationExpression	* stage		8978886	0					
ANR	8978958	UnaryOperator	*		8978886	0					
ANR	8978959	Identifier	stage		8978886	1					
ANR	8978960	CompoundStatement		20:20:847:847	8978886	1					
ANR	8978961	Label	case 0 :	1323:8:43055:43061	8978886	0	True				
ANR	8978962	ExpressionStatement	* cont = 0	1324:12:43075:43084	8978886	1	True				
ANR	8978963	AssignmentExpression	* cont = 0		8978886	0		=			
ANR	8978964	UnaryOperationExpression	* cont		8978886	0					
ANR	8978965	UnaryOperator	*		8978886	0					
ANR	8978966	Identifier	cont		8978886	1					
ANR	8978967	PrimaryExpression	0		8978886	1					
ANR	8978968	ExpressionStatement	check_op ( 3 )	1325:12:43098:43109	8978886	2	True				
ANR	8978969	CallExpression	check_op ( 3 )		8978886	0					
ANR	8978970	Callee	check_op		8978886	0					
ANR	8978971	Identifier	check_op		8978886	0					
ANR	8978972	ArgumentList	3		8978886	1					
ANR	8978973	Argument	3		8978886	0					
ANR	8978974	PrimaryExpression	3		8978886	0					
ANR	8978975	ExpressionStatement	op -= 2	1326:12:43123:43130	8978886	3	True				
ANR	8978976	AssignmentExpression	op -= 2		8978886	0		-=			
ANR	8978977	Identifier	op		8978886	0					
ANR	8978978	PrimaryExpression	2		8978886	1					
ANR	8978979	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8978886	4					
ANR	8978980	ForInit	i = 0 ;	1327:17:43149:43152	8978886	0	True				
ANR	8978981	AssignmentExpression	i = 0		8978886	0		=			
ANR	8978982	Identifier	i		8978886	0					
ANR	8978983	PrimaryExpression	0		8978886	1					
ANR	8978984	Condition	i < 3	1327:21:43153:43155	8978886	1	True				
ANR	8978985	RelationalExpression	i < 3		8978886	0		<			
ANR	8978986	Identifier	i		8978886	0					
ANR	8978987	PrimaryExpression	3		8978886	1					
ANR	8978988	PostIncDecOperationExpression	i ++	1327:25:43157:43159	8978886	2	True				
ANR	8978989	Identifier	i		8978886	0					
ANR	8978990	IncDec	++		8978886	1					
ANR	8978991	CompoundStatement		25:30:964:964	8978886	3					
ANR	8978992	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8978886	0					
ANR	8978993	Condition	"! r_has_type ( op , t_integer )"	1328:20:43184:43209	8978886	0	True				
ANR	8978994	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8978886	0					
ANR	8978995	UnaryOperator	!		8978886	0					
ANR	8978996	CallExpression	"r_has_type ( op , t_integer )"		8978886	1					
ANR	8978997	Callee	r_has_type		8978886	0					
ANR	8978998	Identifier	r_has_type		8978886	0					
ANR	8978999	ArgumentList	op		8978886	1					
ANR	8979000	Argument	op		8978886	0					
ANR	8979001	Identifier	op		8978886	0					
ANR	8979002	Argument	t_integer		8978886	1					
ANR	8979003	Identifier	t_integer		8978886	0					
ANR	8979004	CompoundStatement		26:48:1014:1014	8978886	1					
ANR	8979005	IfStatement	"if ( r_has_type ( op , t_real ) )"		8978886	0					
ANR	8979006	Condition	"r_has_type ( op , t_real )"	1329:24:43238:43259	8978886	0	True				
ANR	8979007	CallExpression	"r_has_type ( op , t_real )"		8978886	0					
ANR	8979008	Callee	r_has_type		8978886	0					
ANR	8979009	Identifier	r_has_type		8978886	0					
ANR	8979010	ArgumentList	op		8978886	1					
ANR	8979011	Argument	op		8978886	0					
ANR	8979012	Identifier	op		8978886	0					
ANR	8979013	Argument	t_real		8978886	1					
ANR	8979014	Identifier	t_real		8978886	0					
ANR	8979015	CompoundStatement		27:48:1064:1064	8978886	1					
ANR	8979016	ExpressionStatement	RGB [ i ] = op -> value . realval	1330:24:43288:43314	8978886	0	True				
ANR	8979017	AssignmentExpression	RGB [ i ] = op -> value . realval		8978886	0		=			
ANR	8979018	ArrayIndexing	RGB [ i ]		8978886	0					
ANR	8979019	Identifier	RGB		8978886	0					
ANR	8979020	Identifier	i		8978886	1					
ANR	8979021	MemberAccess	op -> value . realval		8978886	1					
ANR	8979022	PtrMemberAccess	op -> value		8978886	0					
ANR	8979023	Identifier	op		8978886	0					
ANR	8979024	Identifier	value		8978886	1					
ANR	8979025	Identifier	realval		8978886	1					
ANR	8979026	ElseStatement	else		8978886	0					
ANR	8979027	ExpressionStatement	return_error ( gs_error_typecheck )	1332:24:43367:43399	8978886	0	True				
ANR	8979028	CallExpression	return_error ( gs_error_typecheck )		8978886	0					
ANR	8979029	Callee	return_error		8978886	0					
ANR	8979030	Identifier	return_error		8978886	0					
ANR	8979031	ArgumentList	gs_error_typecheck		8978886	1					
ANR	8979032	Argument	gs_error_typecheck		8978886	0					
ANR	8979033	Identifier	gs_error_typecheck		8978886	0					
ANR	8979034	ElseStatement	else		8978886	0					
ANR	8979035	ExpressionStatement	RGB [ i ] = ( float ) op -> value . intval	1334:20:43444:43476	8978886	0	True				
ANR	8979036	AssignmentExpression	RGB [ i ] = ( float ) op -> value . intval		8978886	0		=			
ANR	8979037	ArrayIndexing	RGB [ i ]		8978886	0					
ANR	8979038	Identifier	RGB		8978886	0					
ANR	8979039	Identifier	i		8978886	1					
ANR	8979040	CastExpression	( float ) op -> value . intval		8978886	1					
ANR	8979041	CastTarget	float		8978886	0					
ANR	8979042	MemberAccess	op -> value . intval		8978886	1					
ANR	8979043	PtrMemberAccess	op -> value		8978886	0					
ANR	8979044	Identifier	op		8978886	0					
ANR	8979045	Identifier	value		8978886	1					
ANR	8979046	Identifier	intval		8978886	1					
ANR	8979047	IfStatement	if ( RGB [ i ] < 0 || RGB [ i ] > 1 )		8978886	1					
ANR	8979048	Condition	RGB [ i ] < 0 || RGB [ i ] > 1	1335:20:43498:43521	8978886	0	True				
ANR	8979049	OrExpression	RGB [ i ] < 0 || RGB [ i ] > 1		8978886	0		||			
ANR	8979050	RelationalExpression	RGB [ i ] < 0		8978886	0		<			
ANR	8979051	ArrayIndexing	RGB [ i ]		8978886	0					
ANR	8979052	Identifier	RGB		8978886	0					
ANR	8979053	Identifier	i		8978886	1					
ANR	8979054	PrimaryExpression	0		8978886	1					
ANR	8979055	RelationalExpression	RGB [ i ] > 1		8978886	1		>			
ANR	8979056	ArrayIndexing	RGB [ i ]		8978886	0					
ANR	8979057	Identifier	RGB		8978886	0					
ANR	8979058	Identifier	i		8978886	1					
ANR	8979059	PrimaryExpression	1		8978886	1					
ANR	8979060	ExpressionStatement	return_error ( gs_error_rangecheck )	1336:20:43544:43577	8978886	1	True				
ANR	8979061	CallExpression	return_error ( gs_error_rangecheck )		8978886	0					
ANR	8979062	Callee	return_error		8978886	0					
ANR	8979063	Identifier	return_error		8978886	0					
ANR	8979064	ArgumentList	gs_error_rangecheck		8978886	1					
ANR	8979065	Argument	gs_error_rangecheck		8978886	0					
ANR	8979066	Identifier	gs_error_rangecheck		8978886	0					
ANR	8979067	ExpressionStatement	op ++	1337:16:43595:43599	8978886	2	True				
ANR	8979068	PostIncDecOperationExpression	op ++		8978886	0					
ANR	8979069	Identifier	op		8978886	0					
ANR	8979070	IncDec	++		8978886	1					
ANR	8979071	ExpressionStatement	op = osp	1339:12:43627:43635	8978886	5	True				
ANR	8979072	AssignmentExpression	op = osp		8978886	0		=			
ANR	8979073	Identifier	op		8978886	0					
ANR	8979074	Identifier	osp		8978886	1					
ANR	8979075	SwitchStatement	switch ( base )		8978886	6					
ANR	8979076	Condition	base	1341:20:43658:43661	8978886	0	True				
ANR	8979077	Identifier	base		8978886	0					
ANR	8979078	CompoundStatement		39:26:1466:1466	8978886	1					
ANR	8979079	Label	case 0 :	1342:16:43682:43688	8978886	0	True				
ANR	8979080	ExpressionStatement	pop ( 2 )	1343:20:43710:43716	8978886	1	True				
ANR	8979081	CallExpression	pop ( 2 )		8978886	0					
ANR	8979082	Callee	pop		8978886	0					
ANR	8979083	Identifier	pop		8978886	0					
ANR	8979084	ArgumentList	2		8978886	1					
ANR	8979085	Argument	2		8978886	0					
ANR	8979086	PrimaryExpression	2		8978886	0					
ANR	8979087	ExpressionStatement	op = osp	1344:20:43738:43746	8978886	2	True				
ANR	8979088	AssignmentExpression	op = osp		8978886	0		=			
ANR	8979089	Identifier	op		8978886	0					
ANR	8979090	Identifier	osp		8978886	1					
ANR	8979091	IfStatement	if ( RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ] )		8978886	3					
ANR	8979092	Condition	RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ]	1348:24:43917:43952	8978886	0	True				
ANR	8979093	AndExpression	RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ]		8978886	0		&&			
ANR	8979094	EqualityExpression	RGB [ 0 ] == RGB [ 1 ]		8978886	0		==			
ANR	8979095	ArrayIndexing	RGB [ 0 ]		8978886	0					
ANR	8979096	Identifier	RGB		8978886	0					
ANR	8979097	PrimaryExpression	0		8978886	1					
ANR	8979098	ArrayIndexing	RGB [ 1 ]		8978886	1					
ANR	8979099	Identifier	RGB		8978886	0					
ANR	8979100	PrimaryExpression	1		8978886	1					
ANR	8979101	EqualityExpression	RGB [ 1 ] == RGB [ 2 ]		8978886	1		==			
ANR	8979102	ArrayIndexing	RGB [ 1 ]		8978886	0					
ANR	8979103	Identifier	RGB		8978886	0					
ANR	8979104	PrimaryExpression	1		8978886	1					
ANR	8979105	ArrayIndexing	RGB [ 2 ]		8978886	1					
ANR	8979106	Identifier	RGB		8978886	0					
ANR	8979107	PrimaryExpression	2		8978886	1					
ANR	8979108	ExpressionStatement	Gray = RGB [ 0 ]	1349:24:43979:43992	8978886	1	True				
ANR	8979109	AssignmentExpression	Gray = RGB [ 0 ]		8978886	0		=			
ANR	8979110	Identifier	Gray		8978886	0					
ANR	8979111	ArrayIndexing	RGB [ 0 ]		8978886	1					
ANR	8979112	Identifier	RGB		8978886	0					
ANR	8979113	PrimaryExpression	0		8978886	1					
ANR	8979114	ElseStatement	else		8978886	0					
ANR	8979115	ExpressionStatement	Gray = ( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )	1351:24:44043:44100	8978886	0	True				
ANR	8979116	AssignmentExpression	Gray = ( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		8978886	0		=			
ANR	8979117	Identifier	Gray		8978886	0					
ANR	8979118	AdditiveExpression	( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		8978886	1		+			
ANR	8979119	MultiplicativeExpression	0.3 * RGB [ 0 ]		8978886	0		*			
ANR	8979120	PrimaryExpression	0.3		8978886	0					
ANR	8979121	ArrayIndexing	RGB [ 0 ]		8978886	1					
ANR	8979122	Identifier	RGB		8978886	0					
ANR	8979123	PrimaryExpression	0		8978886	1					
ANR	8979124	AdditiveExpression	( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		8978886	1		+			
ANR	8979125	MultiplicativeExpression	0.59 * RGB [ 1 ]		8978886	0		*			
ANR	8979126	PrimaryExpression	0.59		8978886	0					
ANR	8979127	ArrayIndexing	RGB [ 1 ]		8978886	1					
ANR	8979128	Identifier	RGB		8978886	0					
ANR	8979129	PrimaryExpression	1		8978886	1					
ANR	8979130	MultiplicativeExpression	0.11 * RGB [ 2 ]		8978886	1		*			
ANR	8979131	PrimaryExpression	0.11		8978886	0					
ANR	8979132	ArrayIndexing	RGB [ 2 ]		8978886	1					
ANR	8979133	Identifier	RGB		8978886	0					
ANR	8979134	PrimaryExpression	2		8978886	1					
ANR	8979135	ExpressionStatement	"make_real ( op , Gray )"	1352:20:44122:44141	8978886	4	True				
ANR	8979136	CallExpression	"make_real ( op , Gray )"		8978886	0					
ANR	8979137	Callee	make_real		8978886	0					
ANR	8979138	Identifier	make_real		8978886	0					
ANR	8979139	ArgumentList	op		8978886	1					
ANR	8979140	Argument	op		8978886	0					
ANR	8979141	Identifier	op		8978886	0					
ANR	8979142	Argument	Gray		8978886	1					
ANR	8979143	Identifier	Gray		8978886	0					
ANR	8979144	ReturnStatement	return 0 ;	1353:20:44163:44171	8978886	5	True				
ANR	8979145	PrimaryExpression	0		8978886	0					
ANR	8979146	BreakStatement	break ;	1354:20:44193:44198	8978886	6	True				
ANR	8979147	Label	case 1 :	1355:16:44216:44222	8978886	7	True				
ANR	8979148	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1356:20:44244:44266	8978886	8	True				
ANR	8979149	CallExpression	rgb2hsb ( ( float * ) & RGB )		8978886	0					
ANR	8979150	Callee	rgb2hsb		8978886	0					
ANR	8979151	Identifier	rgb2hsb		8978886	0					
ANR	8979152	ArgumentList	( float * ) & RGB		8978886	1					
ANR	8979153	Argument	( float * ) & RGB		8978886	0					
ANR	8979154	CastExpression	( float * ) & RGB		8978886	0					
ANR	8979155	CastTarget	float *		8978886	0					
ANR	8979156	UnaryOperationExpression	& RGB		8978886	1					
ANR	8979157	UnaryOperator	&		8978886	0					
ANR	8979158	Identifier	RGB		8978886	1					
ANR	8979159	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1357:20:44288:44314	8978886	9	True				
ANR	8979160	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		8978886	0					
ANR	8979161	Callee	make_real		8978886	0					
ANR	8979162	Identifier	make_real		8978886	0					
ANR	8979163	ArgumentList	& op [ - 2 ]		8978886	1					
ANR	8979164	Argument	& op [ - 2 ]		8978886	0					
ANR	8979165	UnaryOperationExpression	& op [ - 2 ]		8978886	0					
ANR	8979166	UnaryOperator	&		8978886	0					
ANR	8979167	ArrayIndexing	op [ - 2 ]		8978886	1					
ANR	8979168	Identifier	op		8978886	0					
ANR	8979169	UnaryOperationExpression	- 2		8978886	1					
ANR	8979170	UnaryOperator	-		8978886	0					
ANR	8979171	PrimaryExpression	2		8978886	1					
ANR	8979172	Argument	RGB [ 0 ]		8978886	1					
ANR	8979173	ArrayIndexing	RGB [ 0 ]		8978886	0					
ANR	8979174	Identifier	RGB		8978886	0					
ANR	8979175	PrimaryExpression	0		8978886	1					
ANR	8979176	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1358:20:44336:44362	8978886	10	True				
ANR	8979177	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		8978886	0					
ANR	8979178	Callee	make_real		8978886	0					
ANR	8979179	Identifier	make_real		8978886	0					
ANR	8979180	ArgumentList	& op [ - 1 ]		8978886	1					
ANR	8979181	Argument	& op [ - 1 ]		8978886	0					
ANR	8979182	UnaryOperationExpression	& op [ - 1 ]		8978886	0					
ANR	8979183	UnaryOperator	&		8978886	0					
ANR	8979184	ArrayIndexing	op [ - 1 ]		8978886	1					
ANR	8979185	Identifier	op		8978886	0					
ANR	8979186	UnaryOperationExpression	- 1		8978886	1					
ANR	8979187	UnaryOperator	-		8978886	0					
ANR	8979188	PrimaryExpression	1		8978886	1					
ANR	8979189	Argument	RGB [ 1 ]		8978886	1					
ANR	8979190	ArrayIndexing	RGB [ 1 ]		8978886	0					
ANR	8979191	Identifier	RGB		8978886	0					
ANR	8979192	PrimaryExpression	1		8978886	1					
ANR	8979193	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1359:20:44384:44405	8978886	11	True				
ANR	8979194	CallExpression	"make_real ( op , RGB [ 2 ] )"		8978886	0					
ANR	8979195	Callee	make_real		8978886	0					
ANR	8979196	Identifier	make_real		8978886	0					
ANR	8979197	ArgumentList	op		8978886	1					
ANR	8979198	Argument	op		8978886	0					
ANR	8979199	Identifier	op		8978886	0					
ANR	8979200	Argument	RGB [ 2 ]		8978886	1					
ANR	8979201	ArrayIndexing	RGB [ 2 ]		8978886	0					
ANR	8979202	Identifier	RGB		8978886	0					
ANR	8979203	PrimaryExpression	2		8978886	1					
ANR	8979204	ReturnStatement	return 0 ;	1360:20:44427:44435	8978886	12	True				
ANR	8979205	PrimaryExpression	0		8978886	0					
ANR	8979206	BreakStatement	break ;	1361:20:44457:44462	8978886	13	True				
ANR	8979207	Label	case 2 :	1362:16:44480:44486	8978886	14	True				
ANR	8979208	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1363:20:44508:44534	8978886	15	True				
ANR	8979209	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		8978886	0					
ANR	8979210	Callee	make_real		8978886	0					
ANR	8979211	Identifier	make_real		8978886	0					
ANR	8979212	ArgumentList	& op [ - 2 ]		8978886	1					
ANR	8979213	Argument	& op [ - 2 ]		8978886	0					
ANR	8979214	UnaryOperationExpression	& op [ - 2 ]		8978886	0					
ANR	8979215	UnaryOperator	&		8978886	0					
ANR	8979216	ArrayIndexing	op [ - 2 ]		8978886	1					
ANR	8979217	Identifier	op		8978886	0					
ANR	8979218	UnaryOperationExpression	- 2		8978886	1					
ANR	8979219	UnaryOperator	-		8978886	0					
ANR	8979220	PrimaryExpression	2		8978886	1					
ANR	8979221	Argument	RGB [ 0 ]		8978886	1					
ANR	8979222	ArrayIndexing	RGB [ 0 ]		8978886	0					
ANR	8979223	Identifier	RGB		8978886	0					
ANR	8979224	PrimaryExpression	0		8978886	1					
ANR	8979225	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1364:20:44556:44582	8978886	16	True				
ANR	8979226	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		8978886	0					
ANR	8979227	Callee	make_real		8978886	0					
ANR	8979228	Identifier	make_real		8978886	0					
ANR	8979229	ArgumentList	& op [ - 1 ]		8978886	1					
ANR	8979230	Argument	& op [ - 1 ]		8978886	0					
ANR	8979231	UnaryOperationExpression	& op [ - 1 ]		8978886	0					
ANR	8979232	UnaryOperator	&		8978886	0					
ANR	8979233	ArrayIndexing	op [ - 1 ]		8978886	1					
ANR	8979234	Identifier	op		8978886	0					
ANR	8979235	UnaryOperationExpression	- 1		8978886	1					
ANR	8979236	UnaryOperator	-		8978886	0					
ANR	8979237	PrimaryExpression	1		8978886	1					
ANR	8979238	Argument	RGB [ 1 ]		8978886	1					
ANR	8979239	ArrayIndexing	RGB [ 1 ]		8978886	0					
ANR	8979240	Identifier	RGB		8978886	0					
ANR	8979241	PrimaryExpression	1		8978886	1					
ANR	8979242	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1365:20:44604:44625	8978886	17	True				
ANR	8979243	CallExpression	"make_real ( op , RGB [ 2 ] )"		8978886	0					
ANR	8979244	Callee	make_real		8978886	0					
ANR	8979245	Identifier	make_real		8978886	0					
ANR	8979246	ArgumentList	op		8978886	1					
ANR	8979247	Argument	op		8978886	0					
ANR	8979248	Identifier	op		8978886	0					
ANR	8979249	Argument	RGB [ 2 ]		8978886	1					
ANR	8979250	ArrayIndexing	RGB [ 2 ]		8978886	0					
ANR	8979251	Identifier	RGB		8978886	0					
ANR	8979252	PrimaryExpression	2		8978886	1					
ANR	8979253	ReturnStatement	return 0 ;	1366:20:44647:44655	8978886	18	True				
ANR	8979254	PrimaryExpression	0		8978886	0					
ANR	8979255	BreakStatement	break ;	1367:20:44677:44682	8978886	19	True				
ANR	8979256	Label	case 3 :	1368:16:44700:44706	8978886	20	True				
ANR	8979257	ExpressionStatement	* stage = 1	1369:20:44728:44738	8978886	21	True				
ANR	8979258	AssignmentExpression	* stage = 1		8978886	0		=			
ANR	8979259	UnaryOperationExpression	* stage		8978886	0					
ANR	8979260	UnaryOperator	*		8978886	0					
ANR	8979261	Identifier	stage		8978886	1					
ANR	8979262	PrimaryExpression	1		8978886	1					
ANR	8979263	ExpressionStatement	* cont = 1	1370:20:44760:44769	8978886	22	True				
ANR	8979264	AssignmentExpression	* cont = 1		8978886	0		=			
ANR	8979265	UnaryOperationExpression	* cont		8978886	0					
ANR	8979266	UnaryOperator	*		8978886	0					
ANR	8979267	Identifier	cont		8978886	1					
ANR	8979268	PrimaryExpression	1		8978886	1					
ANR	8979269	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8978886	23					
ANR	8979270	ForInit	i = 0 ;	1371:25:44796:44799	8978886	0	True				
ANR	8979271	AssignmentExpression	i = 0		8978886	0		=			
ANR	8979272	Identifier	i		8978886	0					
ANR	8979273	PrimaryExpression	0		8978886	1					
ANR	8979274	Condition	i < 3	1371:29:44800:44802	8978886	1	True				
ANR	8979275	RelationalExpression	i < 3		8978886	0		<			
ANR	8979276	Identifier	i		8978886	0					
ANR	8979277	PrimaryExpression	3		8978886	1					
ANR	8979278	PostIncDecOperationExpression	i ++	1371:33:44804:44806	8978886	2	True				
ANR	8979279	Identifier	i		8978886	0					
ANR	8979280	IncDec	++		8978886	1					
ANR	8979281	ExpressionStatement	CMYK [ i ] = 1 - RGB [ i ]	1372:24:44833:44853	8978886	3	True				
ANR	8979282	AssignmentExpression	CMYK [ i ] = 1 - RGB [ i ]		8978886	0		=			
ANR	8979283	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979284	Identifier	CMYK		8978886	0					
ANR	8979285	Identifier	i		8978886	1					
ANR	8979286	AdditiveExpression	1 - RGB [ i ]		8978886	1		-			
ANR	8979287	PrimaryExpression	1		8978886	0					
ANR	8979288	ArrayIndexing	RGB [ i ]		8978886	1					
ANR	8979289	Identifier	RGB		8978886	0					
ANR	8979290	Identifier	i		8978886	1					
ANR	8979291	IfStatement	if ( CMYK [ 0 ] < CMYK [ 1 ] )		8978886	24					
ANR	8979292	Condition	CMYK [ 0 ] < CMYK [ 1 ]	1373:24:44879:44895	8978886	0	True				
ANR	8979293	RelationalExpression	CMYK [ 0 ] < CMYK [ 1 ]		8978886	0		<			
ANR	8979294	ArrayIndexing	CMYK [ 0 ]		8978886	0					
ANR	8979295	Identifier	CMYK		8978886	0					
ANR	8979296	PrimaryExpression	0		8978886	1					
ANR	8979297	ArrayIndexing	CMYK [ 1 ]		8978886	1					
ANR	8979298	Identifier	CMYK		8978886	0					
ANR	8979299	PrimaryExpression	1		8978886	1					
ANR	8979300	CompoundStatement		71:43:2700:2700	8978886	1					
ANR	8979301	IfStatement	if ( CMYK [ 0 ] < CMYK [ 2 ] )		8978886	0					
ANR	8979302	Condition	CMYK [ 0 ] < CMYK [ 2 ]	1374:28:44928:44944	8978886	0	True				
ANR	8979303	RelationalExpression	CMYK [ 0 ] < CMYK [ 2 ]		8978886	0		<			
ANR	8979304	ArrayIndexing	CMYK [ 0 ]		8978886	0					
ANR	8979305	Identifier	CMYK		8978886	0					
ANR	8979306	PrimaryExpression	0		8978886	1					
ANR	8979307	ArrayIndexing	CMYK [ 2 ]		8978886	1					
ANR	8979308	Identifier	CMYK		8978886	0					
ANR	8979309	PrimaryExpression	2		8978886	1					
ANR	8979310	ExpressionStatement	CMYK [ 3 ] = CMYK [ 0 ]	1375:28:44975:44992	8978886	1	True				
ANR	8979311	AssignmentExpression	CMYK [ 3 ] = CMYK [ 0 ]		8978886	0		=			
ANR	8979312	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979313	Identifier	CMYK		8978886	0					
ANR	8979314	PrimaryExpression	3		8978886	1					
ANR	8979315	ArrayIndexing	CMYK [ 0 ]		8978886	1					
ANR	8979316	Identifier	CMYK		8978886	0					
ANR	8979317	PrimaryExpression	0		8978886	1					
ANR	8979318	ElseStatement	else		8978886	0					
ANR	8979319	ExpressionStatement	CMYK [ 3 ] = CMYK [ 2 ]	1377:28:45051:45068	8978886	0	True				
ANR	8979320	AssignmentExpression	CMYK [ 3 ] = CMYK [ 2 ]		8978886	0		=			
ANR	8979321	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979322	Identifier	CMYK		8978886	0					
ANR	8979323	PrimaryExpression	3		8978886	1					
ANR	8979324	ArrayIndexing	CMYK [ 2 ]		8978886	1					
ANR	8979325	Identifier	CMYK		8978886	0					
ANR	8979326	PrimaryExpression	2		8978886	1					
ANR	8979327	ElseStatement	else		8978886	0					
ANR	8979328	CompoundStatement		76:27:2899:2899	8978886	0					
ANR	8979329	IfStatement	if ( CMYK [ 1 ] < CMYK [ 2 ] )		8978886	0					
ANR	8979330	Condition	CMYK [ 1 ] < CMYK [ 2 ]	1379:28:45127:45143	8978886	0	True				
ANR	8979331	RelationalExpression	CMYK [ 1 ] < CMYK [ 2 ]		8978886	0		<			
ANR	8979332	ArrayIndexing	CMYK [ 1 ]		8978886	0					
ANR	8979333	Identifier	CMYK		8978886	0					
ANR	8979334	PrimaryExpression	1		8978886	1					
ANR	8979335	ArrayIndexing	CMYK [ 2 ]		8978886	1					
ANR	8979336	Identifier	CMYK		8978886	0					
ANR	8979337	PrimaryExpression	2		8978886	1					
ANR	8979338	ExpressionStatement	CMYK [ 3 ] = CMYK [ 1 ]	1380:28:45174:45191	8978886	1	True				
ANR	8979339	AssignmentExpression	CMYK [ 3 ] = CMYK [ 1 ]		8978886	0		=			
ANR	8979340	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979341	Identifier	CMYK		8978886	0					
ANR	8979342	PrimaryExpression	3		8978886	1					
ANR	8979343	ArrayIndexing	CMYK [ 1 ]		8978886	1					
ANR	8979344	Identifier	CMYK		8978886	0					
ANR	8979345	PrimaryExpression	1		8978886	1					
ANR	8979346	ElseStatement	else		8978886	0					
ANR	8979347	ExpressionStatement	CMYK [ 3 ] = CMYK [ 2 ]	1382:28:45250:45267	8978886	0	True				
ANR	8979348	AssignmentExpression	CMYK [ 3 ] = CMYK [ 2 ]		8978886	0		=			
ANR	8979349	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979350	Identifier	CMYK		8978886	0					
ANR	8979351	PrimaryExpression	3		8978886	1					
ANR	8979352	ArrayIndexing	CMYK [ 2 ]		8978886	1					
ANR	8979353	Identifier	CMYK		8978886	0					
ANR	8979354	PrimaryExpression	2		8978886	1					
ANR	8979355	ExpressionStatement	check_estack ( 1 )	1384:20:45311:45326	8978886	25	True				
ANR	8979356	CallExpression	check_estack ( 1 )		8978886	0					
ANR	8979357	Callee	check_estack		8978886	0					
ANR	8979358	Identifier	check_estack		8978886	0					
ANR	8979359	ArgumentList	1		8978886	1					
ANR	8979360	Argument	1		8978886	0					
ANR	8979361	PrimaryExpression	1		8978886	0					
ANR	8979362	ExpressionStatement	push ( 2 )	1385:20:45348:45355	8978886	26	True				
ANR	8979363	CallExpression	push ( 2 )		8978886	0					
ANR	8979364	Callee	push		8978886	0					
ANR	8979365	Identifier	push		8978886	0					
ANR	8979366	ArgumentList	2		8978886	1					
ANR	8979367	Argument	2		8978886	0					
ANR	8979368	PrimaryExpression	2		8978886	0					
ANR	8979369	ExpressionStatement	op = osp - 4	1386:20:45377:45389	8978886	27	True				
ANR	8979370	AssignmentExpression	op = osp - 4		8978886	0		=			
ANR	8979371	Identifier	op		8978886	0					
ANR	8979372	AdditiveExpression	osp - 4		8978886	1		-			
ANR	8979373	Identifier	osp		8978886	0					
ANR	8979374	PrimaryExpression	4		8978886	1					
ANR	8979375	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8978886	28					
ANR	8979376	ForInit	i = 0 ;	1387:25:45416:45419	8978886	0	True				
ANR	8979377	AssignmentExpression	i = 0		8978886	0		=			
ANR	8979378	Identifier	i		8978886	0					
ANR	8979379	PrimaryExpression	0		8978886	1					
ANR	8979380	Condition	i < 4	1387:29:45420:45422	8978886	1	True				
ANR	8979381	RelationalExpression	i < 4		8978886	0		<			
ANR	8979382	Identifier	i		8978886	0					
ANR	8979383	PrimaryExpression	4		8978886	1					
ANR	8979384	PostIncDecOperationExpression	i ++	1387:33:45424:45426	8978886	2	True				
ANR	8979385	Identifier	i		8978886	0					
ANR	8979386	IncDec	++		8978886	1					
ANR	8979387	CompoundStatement		85:38:3231:3231	8978886	3					
ANR	8979388	ExpressionStatement	"make_real ( op , CMYK [ i ] )"	1388:24:45455:45477	8978886	0	True				
ANR	8979389	CallExpression	"make_real ( op , CMYK [ i ] )"		8978886	0					
ANR	8979390	Callee	make_real		8978886	0					
ANR	8979391	Identifier	make_real		8978886	0					
ANR	8979392	ArgumentList	op		8978886	1					
ANR	8979393	Argument	op		8978886	0					
ANR	8979394	Identifier	op		8978886	0					
ANR	8979395	Argument	CMYK [ i ]		8978886	1					
ANR	8979396	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979397	Identifier	CMYK		8978886	0					
ANR	8979398	Identifier	i		8978886	1					
ANR	8979399	ExpressionStatement	op ++	1389:24:45503:45507	8978886	1	True				
ANR	8979400	PostIncDecOperationExpression	op ++		8978886	0					
ANR	8979401	Identifier	op		8978886	0					
ANR	8979402	IncDec	++		8978886	1					
ANR	8979403	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1391:20:45551:45573	8978886	29	True				
ANR	8979404	CallExpression	"make_real ( op , CMYK [ 3 ] )"		8978886	0					
ANR	8979405	Callee	make_real		8978886	0					
ANR	8979406	Identifier	make_real		8978886	0					
ANR	8979407	ArgumentList	op		8978886	1					
ANR	8979408	Argument	op		8978886	0					
ANR	8979409	Identifier	op		8978886	0					
ANR	8979410	Argument	CMYK [ 3 ]		8978886	1					
ANR	8979411	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979412	Identifier	CMYK		8978886	0					
ANR	8979413	PrimaryExpression	3		8978886	1					
ANR	8979414	ExpressionStatement	esp ++	1392:20:45595:45600	8978886	30	True				
ANR	8979415	PostIncDecOperationExpression	esp ++		8978886	0					
ANR	8979416	Identifier	esp		8978886	0					
ANR	8979417	IncDec	++		8978886	1					
ANR	8979418	ExpressionStatement	* esp = istate -> undercolor_removal	1393:20:45622:45655	8978886	31	True				
ANR	8979419	AssignmentExpression	* esp = istate -> undercolor_removal		8978886	0		=			
ANR	8979420	UnaryOperationExpression	* esp		8978886	0					
ANR	8979421	UnaryOperator	*		8978886	0					
ANR	8979422	Identifier	esp		8978886	1					
ANR	8979423	PtrMemberAccess	istate -> undercolor_removal		8978886	1					
ANR	8979424	Identifier	istate		8978886	0					
ANR	8979425	Identifier	undercolor_removal		8978886	1					
ANR	8979426	ReturnStatement	return o_push_estack ;	1394:20:45677:45697	8978886	32	True				
ANR	8979427	Identifier	o_push_estack		8978886	0					
ANR	8979428	BreakStatement	break ;	1395:20:45719:45724	8978886	33	True				
ANR	8979429	Label	default :	1396:16:45742:45749	8978886	34	True				
ANR	8979430	Identifier	default		8978886	0					
ANR	8979431	ExpressionStatement	return_error ( gs_error_undefined )	1397:20:45771:45803	8978886	35	True				
ANR	8979432	CallExpression	return_error ( gs_error_undefined )		8978886	0					
ANR	8979433	Callee	return_error		8978886	0					
ANR	8979434	Identifier	return_error		8978886	0					
ANR	8979435	ArgumentList	gs_error_undefined		8978886	1					
ANR	8979436	Argument	gs_error_undefined		8978886	0					
ANR	8979437	Identifier	gs_error_undefined		8978886	0					
ANR	8979438	BreakStatement	break ;	1398:20:45825:45830	8978886	36	True				
ANR	8979439	BreakStatement	break ;	1400:12:45858:45863	8978886	7	True				
ANR	8979440	Label	case 1 :	1401:8:45873:45879	8978886	8	True				
ANR	8979441	ExpressionStatement	( * stage ) ++	1402:12:45893:45903	8978886	9	True				
ANR	8979442	PostIncDecOperationExpression	( * stage ) ++		8978886	0					
ANR	8979443	UnaryOperationExpression	* stage		8978886	0					
ANR	8979444	UnaryOperator	*		8978886	0					
ANR	8979445	Identifier	stage		8978886	1					
ANR	8979446	IncDec	++		8978886	1					
ANR	8979447	ExpressionStatement	* cont = 1	1403:12:45917:45926	8978886	10	True				
ANR	8979448	AssignmentExpression	* cont = 1		8978886	0		=			
ANR	8979449	UnaryOperationExpression	* cont		8978886	0					
ANR	8979450	UnaryOperator	*		8978886	0					
ANR	8979451	Identifier	cont		8978886	1					
ANR	8979452	PrimaryExpression	1		8978886	1					
ANR	8979453	ExpressionStatement	check_estack ( 1 )	1404:12:45940:45955	8978886	11	True				
ANR	8979454	CallExpression	check_estack ( 1 )		8978886	0					
ANR	8979455	Callee	check_estack		8978886	0					
ANR	8979456	Identifier	check_estack		8978886	0					
ANR	8979457	ArgumentList	1		8978886	1					
ANR	8979458	Argument	1		8978886	0					
ANR	8979459	PrimaryExpression	1		8978886	0					
ANR	8979460	ExpressionStatement	check_op ( 5 )	1405:12:45969:45980	8978886	12	True				
ANR	8979461	CallExpression	check_op ( 5 )		8978886	0					
ANR	8979462	Callee	check_op		8978886	0					
ANR	8979463	Identifier	check_op		8978886	0					
ANR	8979464	ArgumentList	5		8978886	1					
ANR	8979465	Argument	5		8978886	0					
ANR	8979466	PrimaryExpression	5		8978886	0					
ANR	8979467	ExpressionStatement	op -= 4	1406:12:45994:46001	8978886	13	True				
ANR	8979468	AssignmentExpression	op -= 4		8978886	0		-=			
ANR	8979469	Identifier	op		8978886	0					
ANR	8979470	PrimaryExpression	4		8978886	1					
ANR	8979471	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8978886	14					
ANR	8979472	ForInit	i = 0 ;	1407:17:46020:46023	8978886	0	True				
ANR	8979473	AssignmentExpression	i = 0		8978886	0		=			
ANR	8979474	Identifier	i		8978886	0					
ANR	8979475	PrimaryExpression	0		8978886	1					
ANR	8979476	Condition	i < 4	1407:21:46024:46026	8978886	1	True				
ANR	8979477	RelationalExpression	i < 4		8978886	0		<			
ANR	8979478	Identifier	i		8978886	0					
ANR	8979479	PrimaryExpression	4		8978886	1					
ANR	8979480	PostIncDecOperationExpression	i ++	1407:25:46028:46030	8978886	2	True				
ANR	8979481	Identifier	i		8978886	0					
ANR	8979482	IncDec	++		8978886	1					
ANR	8979483	CompoundStatement		105:30:3835:3835	8978886	3					
ANR	8979484	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8978886	0					
ANR	8979485	Condition	"! r_has_type ( op , t_integer )"	1408:20:46055:46080	8978886	0	True				
ANR	8979486	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8978886	0					
ANR	8979487	UnaryOperator	!		8978886	0					
ANR	8979488	CallExpression	"r_has_type ( op , t_integer )"		8978886	1					
ANR	8979489	Callee	r_has_type		8978886	0					
ANR	8979490	Identifier	r_has_type		8978886	0					
ANR	8979491	ArgumentList	op		8978886	1					
ANR	8979492	Argument	op		8978886	0					
ANR	8979493	Identifier	op		8978886	0					
ANR	8979494	Argument	t_integer		8978886	1					
ANR	8979495	Identifier	t_integer		8978886	0					
ANR	8979496	CompoundStatement		106:48:3885:3885	8978886	1					
ANR	8979497	IfStatement	"if ( r_has_type ( op , t_real ) )"		8978886	0					
ANR	8979498	Condition	"r_has_type ( op , t_real )"	1409:24:46109:46130	8978886	0	True				
ANR	8979499	CallExpression	"r_has_type ( op , t_real )"		8978886	0					
ANR	8979500	Callee	r_has_type		8978886	0					
ANR	8979501	Identifier	r_has_type		8978886	0					
ANR	8979502	ArgumentList	op		8978886	1					
ANR	8979503	Argument	op		8978886	0					
ANR	8979504	Identifier	op		8978886	0					
ANR	8979505	Argument	t_real		8978886	1					
ANR	8979506	Identifier	t_real		8978886	0					
ANR	8979507	CompoundStatement		107:48:3935:3935	8978886	1					
ANR	8979508	ExpressionStatement	CMYK [ i ] = op -> value . realval	1410:24:46159:46186	8978886	0	True				
ANR	8979509	AssignmentExpression	CMYK [ i ] = op -> value . realval		8978886	0		=			
ANR	8979510	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979511	Identifier	CMYK		8978886	0					
ANR	8979512	Identifier	i		8978886	1					
ANR	8979513	MemberAccess	op -> value . realval		8978886	1					
ANR	8979514	PtrMemberAccess	op -> value		8978886	0					
ANR	8979515	Identifier	op		8978886	0					
ANR	8979516	Identifier	value		8978886	1					
ANR	8979517	Identifier	realval		8978886	1					
ANR	8979518	ElseStatement	else		8978886	0					
ANR	8979519	ExpressionStatement	return_error ( gs_error_typecheck )	1412:24:46239:46271	8978886	0	True				
ANR	8979520	CallExpression	return_error ( gs_error_typecheck )		8978886	0					
ANR	8979521	Callee	return_error		8978886	0					
ANR	8979522	Identifier	return_error		8978886	0					
ANR	8979523	ArgumentList	gs_error_typecheck		8978886	1					
ANR	8979524	Argument	gs_error_typecheck		8978886	0					
ANR	8979525	Identifier	gs_error_typecheck		8978886	0					
ANR	8979526	ElseStatement	else		8978886	0					
ANR	8979527	ExpressionStatement	CMYK [ i ] = ( float ) op -> value . intval	1414:20:46316:46349	8978886	0	True				
ANR	8979528	AssignmentExpression	CMYK [ i ] = ( float ) op -> value . intval		8978886	0		=			
ANR	8979529	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979530	Identifier	CMYK		8978886	0					
ANR	8979531	Identifier	i		8978886	1					
ANR	8979532	CastExpression	( float ) op -> value . intval		8978886	1					
ANR	8979533	CastTarget	float		8978886	0					
ANR	8979534	MemberAccess	op -> value . intval		8978886	1					
ANR	8979535	PtrMemberAccess	op -> value		8978886	0					
ANR	8979536	Identifier	op		8978886	0					
ANR	8979537	Identifier	value		8978886	1					
ANR	8979538	Identifier	intval		8978886	1					
ANR	8979539	ExpressionStatement	op ++	1415:16:46367:46371	8978886	1	True				
ANR	8979540	PostIncDecOperationExpression	op ++		8978886	0					
ANR	8979541	Identifier	op		8978886	0					
ANR	8979542	IncDec	++		8978886	1					
ANR	8979543	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8978886	15					
ANR	8979544	Condition	"! r_has_type ( op , t_integer )"	1417:16:46403:46428	8978886	0	True				
ANR	8979545	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8978886	0					
ANR	8979546	UnaryOperator	!		8978886	0					
ANR	8979547	CallExpression	"r_has_type ( op , t_integer )"		8978886	1					
ANR	8979548	Callee	r_has_type		8978886	0					
ANR	8979549	Identifier	r_has_type		8978886	0					
ANR	8979550	ArgumentList	op		8978886	1					
ANR	8979551	Argument	op		8978886	0					
ANR	8979552	Identifier	op		8978886	0					
ANR	8979553	Argument	t_integer		8978886	1					
ANR	8979554	Identifier	t_integer		8978886	0					
ANR	8979555	CompoundStatement		115:44:4233:4233	8978886	1					
ANR	8979556	IfStatement	"if ( r_has_type ( op , t_real ) )"		8978886	0					
ANR	8979557	Condition	"r_has_type ( op , t_real )"	1418:20:46453:46474	8978886	0	True				
ANR	8979558	CallExpression	"r_has_type ( op , t_real )"		8978886	0					
ANR	8979559	Callee	r_has_type		8978886	0					
ANR	8979560	Identifier	r_has_type		8978886	0					
ANR	8979561	ArgumentList	op		8978886	1					
ANR	8979562	Argument	op		8978886	0					
ANR	8979563	Identifier	op		8978886	0					
ANR	8979564	Argument	t_real		8978886	1					
ANR	8979565	Identifier	t_real		8978886	0					
ANR	8979566	CompoundStatement		116:44:4279:4279	8978886	1					
ANR	8979567	ExpressionStatement	UCR = op -> value . realval	1419:20:46499:46522	8978886	0	True				
ANR	8979568	AssignmentExpression	UCR = op -> value . realval		8978886	0		=			
ANR	8979569	Identifier	UCR		8978886	0					
ANR	8979570	MemberAccess	op -> value . realval		8978886	1					
ANR	8979571	PtrMemberAccess	op -> value		8978886	0					
ANR	8979572	Identifier	op		8978886	0					
ANR	8979573	Identifier	value		8978886	1					
ANR	8979574	Identifier	realval		8978886	1					
ANR	8979575	ElseStatement	else		8978886	0					
ANR	8979576	ExpressionStatement	return_error ( gs_error_typecheck )	1421:20:46567:46599	8978886	0	True				
ANR	8979577	CallExpression	return_error ( gs_error_typecheck )		8978886	0					
ANR	8979578	Callee	return_error		8978886	0					
ANR	8979579	Identifier	return_error		8978886	0					
ANR	8979580	ArgumentList	gs_error_typecheck		8978886	1					
ANR	8979581	Argument	gs_error_typecheck		8978886	0					
ANR	8979582	Identifier	gs_error_typecheck		8978886	0					
ANR	8979583	ElseStatement	else		8978886	0					
ANR	8979584	ExpressionStatement	UCR = ( float ) op -> value . intval	1423:16:46636:46665	8978886	0	True				
ANR	8979585	AssignmentExpression	UCR = ( float ) op -> value . intval		8978886	0		=			
ANR	8979586	Identifier	UCR		8978886	0					
ANR	8979587	CastExpression	( float ) op -> value . intval		8978886	1					
ANR	8979588	CastTarget	float		8978886	0					
ANR	8979589	MemberAccess	op -> value . intval		8978886	1					
ANR	8979590	PtrMemberAccess	op -> value		8978886	0					
ANR	8979591	Identifier	op		8978886	0					
ANR	8979592	Identifier	value		8978886	1					
ANR	8979593	Identifier	intval		8978886	1					
ANR	8979594	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8978886	16					
ANR	8979595	ForInit	i = 0 ;	1424:17:46684:46687	8978886	0	True				
ANR	8979596	AssignmentExpression	i = 0		8978886	0		=			
ANR	8979597	Identifier	i		8978886	0					
ANR	8979598	PrimaryExpression	0		8978886	1					
ANR	8979599	Condition	i < 3	1424:21:46688:46690	8978886	1	True				
ANR	8979600	RelationalExpression	i < 3		8978886	0		<			
ANR	8979601	Identifier	i		8978886	0					
ANR	8979602	PrimaryExpression	3		8978886	1					
ANR	8979603	PostIncDecOperationExpression	i ++	1424:25:46692:46694	8978886	2	True				
ANR	8979604	Identifier	i		8978886	0					
ANR	8979605	IncDec	++		8978886	1					
ANR	8979606	CompoundStatement		122:30:4499:4499	8978886	3					
ANR	8979607	ExpressionStatement	CMYK [ i ] = CMYK [ i ] - UCR	1425:16:46715:46738	8978886	0	True				
ANR	8979608	AssignmentExpression	CMYK [ i ] = CMYK [ i ] - UCR		8978886	0		=			
ANR	8979609	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979610	Identifier	CMYK		8978886	0					
ANR	8979611	Identifier	i		8978886	1					
ANR	8979612	AdditiveExpression	CMYK [ i ] - UCR		8978886	1		-			
ANR	8979613	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979614	Identifier	CMYK		8978886	0					
ANR	8979615	Identifier	i		8978886	1					
ANR	8979616	Identifier	UCR		8978886	1					
ANR	8979617	IfStatement	if ( CMYK [ i ] < 0 )		8978886	1					
ANR	8979618	Condition	CMYK [ i ] < 0	1426:20:46760:46770	8978886	0	True				
ANR	8979619	RelationalExpression	CMYK [ i ] < 0		8978886	0		<			
ANR	8979620	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979621	Identifier	CMYK		8978886	0					
ANR	8979622	Identifier	i		8978886	1					
ANR	8979623	PrimaryExpression	0		8978886	1					
ANR	8979624	ExpressionStatement	CMYK [ i ] = 0	1427:20:46793:46804	8978886	1	True				
ANR	8979625	AssignmentExpression	CMYK [ i ] = 0		8978886	0		=			
ANR	8979626	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979627	Identifier	CMYK		8978886	0					
ANR	8979628	Identifier	i		8978886	1					
ANR	8979629	PrimaryExpression	0		8978886	1					
ANR	8979630	IfStatement	if ( CMYK [ i ] > 1 )		8978886	2					
ANR	8979631	Condition	CMYK [ i ] > 1	1428:20:46826:46836	8978886	0	True				
ANR	8979632	RelationalExpression	CMYK [ i ] > 1		8978886	0		>			
ANR	8979633	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979634	Identifier	CMYK		8978886	0					
ANR	8979635	Identifier	i		8978886	1					
ANR	8979636	PrimaryExpression	1		8978886	1					
ANR	8979637	ExpressionStatement	CMYK [ i ] = 1.0	1429:20:46859:46872	8978886	1	True				
ANR	8979638	AssignmentExpression	CMYK [ i ] = 1.0		8978886	0		=			
ANR	8979639	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979640	Identifier	CMYK		8978886	0					
ANR	8979641	Identifier	i		8978886	1					
ANR	8979642	PrimaryExpression	1.0		8978886	1					
ANR	8979643	ExpressionStatement	op -= 4	1431:12:46900:46907	8978886	17	True				
ANR	8979644	AssignmentExpression	op -= 4		8978886	0		-=			
ANR	8979645	Identifier	op		8978886	0					
ANR	8979646	PrimaryExpression	4		8978886	1					
ANR	8979647	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8978886	18					
ANR	8979648	ForInit	i = 0 ;	1432:17:46926:46929	8978886	0	True				
ANR	8979649	AssignmentExpression	i = 0		8978886	0		=			
ANR	8979650	Identifier	i		8978886	0					
ANR	8979651	PrimaryExpression	0		8978886	1					
ANR	8979652	Condition	i < 4	1432:21:46930:46932	8978886	1	True				
ANR	8979653	RelationalExpression	i < 4		8978886	0		<			
ANR	8979654	Identifier	i		8978886	0					
ANR	8979655	PrimaryExpression	4		8978886	1					
ANR	8979656	PostIncDecOperationExpression	i ++	1432:25:46934:46936	8978886	2	True				
ANR	8979657	Identifier	i		8978886	0					
ANR	8979658	IncDec	++		8978886	1					
ANR	8979659	CompoundStatement		130:30:4741:4741	8978886	3					
ANR	8979660	ExpressionStatement	"make_real ( op , CMYK [ i ] )"	1433:16:46957:46979	8978886	0	True				
ANR	8979661	CallExpression	"make_real ( op , CMYK [ i ] )"		8978886	0					
ANR	8979662	Callee	make_real		8978886	0					
ANR	8979663	Identifier	make_real		8978886	0					
ANR	8979664	ArgumentList	op		8978886	1					
ANR	8979665	Argument	op		8978886	0					
ANR	8979666	Identifier	op		8978886	0					
ANR	8979667	Argument	CMYK [ i ]		8978886	1					
ANR	8979668	ArrayIndexing	CMYK [ i ]		8978886	0					
ANR	8979669	Identifier	CMYK		8978886	0					
ANR	8979670	Identifier	i		8978886	1					
ANR	8979671	ExpressionStatement	op ++	1434:16:46997:47001	8978886	1	True				
ANR	8979672	PostIncDecOperationExpression	op ++		8978886	0					
ANR	8979673	Identifier	op		8978886	0					
ANR	8979674	IncDec	++		8978886	1					
ANR	8979675	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1436:12:47029:47051	8978886	19	True				
ANR	8979676	CallExpression	"make_real ( op , CMYK [ 3 ] )"		8978886	0					
ANR	8979677	Callee	make_real		8978886	0					
ANR	8979678	Identifier	make_real		8978886	0					
ANR	8979679	ArgumentList	op		8978886	1					
ANR	8979680	Argument	op		8978886	0					
ANR	8979681	Identifier	op		8978886	0					
ANR	8979682	Argument	CMYK [ 3 ]		8978886	1					
ANR	8979683	ArrayIndexing	CMYK [ 3 ]		8978886	0					
ANR	8979684	Identifier	CMYK		8978886	0					
ANR	8979685	PrimaryExpression	3		8978886	1					
ANR	8979686	ExpressionStatement	esp ++	1437:12:47065:47070	8978886	20	True				
ANR	8979687	PostIncDecOperationExpression	esp ++		8978886	0					
ANR	8979688	Identifier	esp		8978886	0					
ANR	8979689	IncDec	++		8978886	1					
ANR	8979690	ExpressionStatement	* esp = istate -> black_generation	1438:12:47084:47115	8978886	21	True				
ANR	8979691	AssignmentExpression	* esp = istate -> black_generation		8978886	0		=			
ANR	8979692	UnaryOperationExpression	* esp		8978886	0					
ANR	8979693	UnaryOperator	*		8978886	0					
ANR	8979694	Identifier	esp		8978886	1					
ANR	8979695	PtrMemberAccess	istate -> black_generation		8978886	1					
ANR	8979696	Identifier	istate		8978886	0					
ANR	8979697	Identifier	black_generation		8978886	1					
ANR	8979698	ReturnStatement	return o_push_estack ;	1439:12:47129:47149	8978886	22	True				
ANR	8979699	Identifier	o_push_estack		8978886	0					
ANR	8979700	BreakStatement	break ;	1440:12:47163:47168	8978886	23	True				
ANR	8979701	Label	case 2 :	1441:8:47178:47184	8978886	24	True				
ANR	8979702	ExpressionStatement	* stage = 0	1442:12:47198:47208	8978886	25	True				
ANR	8979703	AssignmentExpression	* stage = 0		8978886	0		=			
ANR	8979704	UnaryOperationExpression	* stage		8978886	0					
ANR	8979705	UnaryOperator	*		8978886	0					
ANR	8979706	Identifier	stage		8978886	1					
ANR	8979707	PrimaryExpression	0		8978886	1					
ANR	8979708	ExpressionStatement	* cont = 0	1443:12:47222:47231	8978886	26	True				
ANR	8979709	AssignmentExpression	* cont = 0		8978886	0		=			
ANR	8979710	UnaryOperationExpression	* cont		8978886	0					
ANR	8979711	UnaryOperator	*		8978886	0					
ANR	8979712	Identifier	cont		8978886	1					
ANR	8979713	PrimaryExpression	0		8978886	1					
ANR	8979714	ExpressionStatement	check_op ( 5 )	1444:12:47245:47256	8978886	27	True				
ANR	8979715	CallExpression	check_op ( 5 )		8978886	0					
ANR	8979716	Callee	check_op		8978886	0					
ANR	8979717	Identifier	check_op		8978886	0					
ANR	8979718	ArgumentList	5		8978886	1					
ANR	8979719	Argument	5		8978886	0					
ANR	8979720	PrimaryExpression	5		8978886	0					
ANR	8979721	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8978886	28					
ANR	8979722	Condition	"! r_has_type ( op , t_integer )"	1445:16:47274:47299	8978886	0	True				
ANR	8979723	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8978886	0					
ANR	8979724	UnaryOperator	!		8978886	0					
ANR	8979725	CallExpression	"r_has_type ( op , t_integer )"		8978886	1					
ANR	8979726	Callee	r_has_type		8978886	0					
ANR	8979727	Identifier	r_has_type		8978886	0					
ANR	8979728	ArgumentList	op		8978886	1					
ANR	8979729	Argument	op		8978886	0					
ANR	8979730	Identifier	op		8978886	0					
ANR	8979731	Argument	t_integer		8978886	1					
ANR	8979732	Identifier	t_integer		8978886	0					
ANR	8979733	CompoundStatement		143:44:5104:5104	8978886	1					
ANR	8979734	IfStatement	"if ( r_has_type ( op , t_real ) )"		8978886	0					
ANR	8979735	Condition	"r_has_type ( op , t_real )"	1446:20:47324:47345	8978886	0	True				
ANR	8979736	CallExpression	"r_has_type ( op , t_real )"		8978886	0					
ANR	8979737	Callee	r_has_type		8978886	0					
ANR	8979738	Identifier	r_has_type		8978886	0					
ANR	8979739	ArgumentList	op		8978886	1					
ANR	8979740	Argument	op		8978886	0					
ANR	8979741	Identifier	op		8978886	0					
ANR	8979742	Argument	t_real		8978886	1					
ANR	8979743	Identifier	t_real		8978886	0					
ANR	8979744	CompoundStatement		144:44:5150:5150	8978886	1					
ANR	8979745	ExpressionStatement	BG = op -> value . realval	1447:20:47370:47392	8978886	0	True				
ANR	8979746	AssignmentExpression	BG = op -> value . realval		8978886	0		=			
ANR	8979747	Identifier	BG		8978886	0					
ANR	8979748	MemberAccess	op -> value . realval		8978886	1					
ANR	8979749	PtrMemberAccess	op -> value		8978886	0					
ANR	8979750	Identifier	op		8978886	0					
ANR	8979751	Identifier	value		8978886	1					
ANR	8979752	Identifier	realval		8978886	1					
ANR	8979753	ElseStatement	else		8978886	0					
ANR	8979754	ExpressionStatement	return_error ( gs_error_typecheck )	1449:20:47437:47469	8978886	0	True				
ANR	8979755	CallExpression	return_error ( gs_error_typecheck )		8978886	0					
ANR	8979756	Callee	return_error		8978886	0					
ANR	8979757	Identifier	return_error		8978886	0					
ANR	8979758	ArgumentList	gs_error_typecheck		8978886	1					
ANR	8979759	Argument	gs_error_typecheck		8978886	0					
ANR	8979760	Identifier	gs_error_typecheck		8978886	0					
ANR	8979761	ElseStatement	else		8978886	0					
ANR	8979762	ExpressionStatement	BG = ( float ) op -> value . intval	1451:16:47506:47534	8978886	0	True				
ANR	8979763	AssignmentExpression	BG = ( float ) op -> value . intval		8978886	0		=			
ANR	8979764	Identifier	BG		8978886	0					
ANR	8979765	CastExpression	( float ) op -> value . intval		8978886	1					
ANR	8979766	CastTarget	float		8978886	0					
ANR	8979767	MemberAccess	op -> value . intval		8978886	1					
ANR	8979768	PtrMemberAccess	op -> value		8978886	0					
ANR	8979769	Identifier	op		8978886	0					
ANR	8979770	Identifier	value		8978886	1					
ANR	8979771	Identifier	intval		8978886	1					
ANR	8979772	ExpressionStatement	pop ( 1 )	1452:12:47548:47554	8978886	29	True				
ANR	8979773	CallExpression	pop ( 1 )		8978886	0					
ANR	8979774	Callee	pop		8978886	0					
ANR	8979775	Identifier	pop		8978886	0					
ANR	8979776	ArgumentList	1		8978886	1					
ANR	8979777	Argument	1		8978886	0					
ANR	8979778	PrimaryExpression	1		8978886	0					
ANR	8979779	ExpressionStatement	op = osp	1453:12:47568:47576	8978886	30	True				
ANR	8979780	AssignmentExpression	op = osp		8978886	0		=			
ANR	8979781	Identifier	op		8978886	0					
ANR	8979782	Identifier	osp		8978886	1					
ANR	8979783	IfStatement	if ( BG < 0 )		8978886	31					
ANR	8979784	Condition	BG < 0	1454:16:47594:47599	8978886	0	True				
ANR	8979785	RelationalExpression	BG < 0		8978886	0		<			
ANR	8979786	Identifier	BG		8978886	0					
ANR	8979787	PrimaryExpression	0		8978886	1					
ANR	8979788	ExpressionStatement	BG = 0	1455:16:47618:47624	8978886	1	True				
ANR	8979789	AssignmentExpression	BG = 0		8978886	0		=			
ANR	8979790	Identifier	BG		8978886	0					
ANR	8979791	PrimaryExpression	0		8978886	1					
ANR	8979792	IfStatement	if ( BG > 1 )		8978886	32					
ANR	8979793	Condition	BG > 1	1456:16:47642:47647	8978886	0	True				
ANR	8979794	RelationalExpression	BG > 1		8978886	0		>			
ANR	8979795	Identifier	BG		8978886	0					
ANR	8979796	PrimaryExpression	1		8978886	1					
ANR	8979797	ExpressionStatement	BG = 1	1457:16:47666:47672	8978886	1	True				
ANR	8979798	AssignmentExpression	BG = 1		8978886	0		=			
ANR	8979799	Identifier	BG		8978886	0					
ANR	8979800	PrimaryExpression	1		8978886	1					
ANR	8979801	ExpressionStatement	"make_real ( op , BG )"	1458:12:47686:47703	8978886	33	True				
ANR	8979802	CallExpression	"make_real ( op , BG )"		8978886	0					
ANR	8979803	Callee	make_real		8978886	0					
ANR	8979804	Identifier	make_real		8978886	0					
ANR	8979805	ArgumentList	op		8978886	1					
ANR	8979806	Argument	op		8978886	0					
ANR	8979807	Identifier	op		8978886	0					
ANR	8979808	Argument	BG		8978886	1					
ANR	8979809	Identifier	BG		8978886	0					
ANR	8979810	BreakStatement	break ;	1459:12:47717:47722	8978886	34	True				
ANR	8979811	ReturnStatement	return 0 ;	1461:4:47734:47742	8978886	6	True				
ANR	8979812	PrimaryExpression	0		8978886	0					
ANR	8979813	ReturnType	static int		8978886	1					
ANR	8979814	Identifier	rgbbasecolor		8978886	2					
ANR	8979815	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8978886	3					
ANR	8979816	Parameter	i_ctx_t * i_ctx_p	1302:24:42115:42131	8978886	0	True				
ANR	8979817	ParameterType	i_ctx_t *		8978886	0					
ANR	8979818	Identifier	i_ctx_p		8978886	1					
ANR	8979819	Parameter	ref * space	1302:43:42134:42143	8978886	1	True				
ANR	8979820	ParameterType	ref *		8978886	0					
ANR	8979821	Identifier	space		8978886	1					
ANR	8979822	Parameter	int base	1302:55:42146:42153	8978886	2	True				
ANR	8979823	ParameterType	int		8978886	0					
ANR	8979824	Identifier	base		8978886	1					
ANR	8979825	Parameter	int * stage	1302:65:42156:42165	8978886	3	True				
ANR	8979826	ParameterType	int *		8978886	0					
ANR	8979827	Identifier	stage		8978886	1					
ANR	8979828	Parameter	int * cont	1302:77:42168:42176	8978886	4	True				
ANR	8979829	ParameterType	int *		8978886	0					
ANR	8979830	Identifier	cont		8978886	1					
ANR	8979831	Parameter	int * stack_depth	1302:88:42179:42194	8978886	5	True				
ANR	8979832	ParameterType	int *		8978886	0					
ANR	8979833	Identifier	stack_depth		8978886	1					
ANR	8979834	CFGEntryNode	ENTRY		8978886		True				
ANR	8979835	CFGExitNode	EXIT		8978886		True				
ANR	8979836	Symbol	stack_depth		8978886						
ANR	8979837	Symbol	esp		8978886						
ANR	8979838	Symbol	* op		8978886						
ANR	8979839	Symbol	gs_error_rangecheck		8978886						
ANR	8979840	Symbol	UCR		8978886						
ANR	8979841	Symbol	BG		8978886						
ANR	8979842	Symbol	istate -> undercolor_removal		8978886						
ANR	8979843	Symbol	gs_error_undefined		8978886						
ANR	8979844	Symbol	pcs -> id		8978886						
ANR	8979845	Symbol	* pcs		8978886						
ANR	8979846	Symbol	op -> value . realval		8978886						
ANR	8979847	Symbol	graybasecolor		8978886						
ANR	8979848	Symbol	osp		8978886						
ANR	8979849	Symbol	space		8978886						
ANR	8979850	Symbol	* istate		8978886						
ANR	8979851	Symbol	r_has_type		8978886						
ANR	8979852	Symbol	gs_error_typecheck		8978886						
ANR	8979853	Symbol	* esp		8978886						
ANR	8979854	Symbol	igs		8978886						
ANR	8979855	Symbol	& RGB		8978886						
ANR	8979856	Symbol	gs_currentcolorspace		8978886						
ANR	8979857	Symbol	op -> value		8978886						
ANR	8979858	Symbol	cont		8978886						
ANR	8979859	Symbol	o_push_estack		8978886						
ANR	8979860	Symbol	op		8978886						
ANR	8979861	Symbol	pcs		8978886						
ANR	8979862	Symbol	Gray		8978886						
ANR	8979863	Symbol	CMYK		8978886						
ANR	8979864	Symbol	* stage		8978886						
ANR	8979865	Symbol	cs_DeviceGray_id		8978886						
ANR	8979866	Symbol	* RGB		8978886						
ANR	8979867	Symbol	i		8978886						
ANR	8979868	Symbol	t_real		8978886						
ANR	8979869	Symbol	RGB		8978886						
ANR	8979870	Symbol	* i		8978886						
ANR	8979871	Symbol	stage		8978886						
ANR	8979872	Symbol	t_integer		8978886						
ANR	8979873	Symbol	* cont		8978886						
ANR	8979874	Symbol	i_ctx_p		8978886						
ANR	8979875	Symbol	istate -> black_generation		8978886						
ANR	8979876	Symbol	* CMYK		8978886						
ANR	8979877	Symbol	op -> value . intval		8978886						
ANR	8979878	Symbol	base		8978886						
ANR	8979879	Symbol	istate		8978886						
ANR	8979880	Function	rgbvalidate	1463:0:47746:48271							
ANR	8979881	FunctionDef	"rgbvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8979880	0					
ANR	8979882	CompoundStatement		1464:0:47829:48271	8979880	0					
ANR	8979883	IdentifierDeclStatement	os_ptr op = osp ;	1465:4:47835:47850	8979880	0	True				
ANR	8979884	IdentifierDecl	op = osp		8979880	0					
ANR	8979885	IdentifierDeclType	os_ptr		8979880	0					
ANR	8979886	Identifier	op		8979880	1					
ANR	8979887	AssignmentExpression	op = osp		8979880	2		=			
ANR	8979888	Identifier	osp		8979880	0					
ANR	8979889	Identifier	osp		8979880	1					
ANR	8979890	IdentifierDeclStatement	int i ;	1466:4:47856:47861	8979880	1	True				
ANR	8979891	IdentifierDecl	i		8979880	0					
ANR	8979892	IdentifierDeclType	int		8979880	0					
ANR	8979893	Identifier	i		8979880	1					
ANR	8979894	IfStatement	if ( num_comps < 3 )		8979880	2					
ANR	8979895	Condition	num_comps < 3	1468:8:47872:47884	8979880	0	True				
ANR	8979896	RelationalExpression	num_comps < 3		8979880	0		<			
ANR	8979897	Identifier	num_comps		8979880	0					
ANR	8979898	PrimaryExpression	3		8979880	1					
ANR	8979899	ExpressionStatement	return_error ( gs_error_stackunderflow )	1469:8:47895:47932	8979880	1	True				
ANR	8979900	CallExpression	return_error ( gs_error_stackunderflow )		8979880	0					
ANR	8979901	Callee	return_error		8979880	0					
ANR	8979902	Identifier	return_error		8979880	0					
ANR	8979903	ArgumentList	gs_error_stackunderflow		8979880	1					
ANR	8979904	Argument	gs_error_stackunderflow		8979880	0					
ANR	8979905	Identifier	gs_error_stackunderflow		8979880	0					
ANR	8979906	ExpressionStatement	op -= 2	1471:4:47939:47946	8979880	3	True				
ANR	8979907	AssignmentExpression	op -= 2		8979880	0		-=			
ANR	8979908	Identifier	op		8979880	0					
ANR	8979909	PrimaryExpression	2		8979880	1					
ANR	8979910	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8979880	4					
ANR	8979911	ForInit	i = 0 ;	1472:9:47957:47960	8979880	0	True				
ANR	8979912	AssignmentExpression	i = 0		8979880	0		=			
ANR	8979913	Identifier	i		8979880	0					
ANR	8979914	PrimaryExpression	0		8979880	1					
ANR	8979915	Condition	i < 3	1472:13:47961:47963	8979880	1	True				
ANR	8979916	RelationalExpression	i < 3		8979880	0		<			
ANR	8979917	Identifier	i		8979880	0					
ANR	8979918	PrimaryExpression	3		8979880	1					
ANR	8979919	PostIncDecOperationExpression	i ++	1472:17:47965:47967	8979880	2	True				
ANR	8979920	Identifier	i		8979880	0					
ANR	8979921	IncDec	++		8979880	1					
ANR	8979922	CompoundStatement		9:22:140:140	8979880	3					
ANR	8979923	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8979880	0					
ANR	8979924	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1473:12:47984:48036	8979880	0	True				
ANR	8979925	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8979880	0		&&			
ANR	8979926	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8979880	0					
ANR	8979927	UnaryOperator	!		8979880	0					
ANR	8979928	CallExpression	"r_has_type ( op , t_integer )"		8979880	1					
ANR	8979929	Callee	r_has_type		8979880	0					
ANR	8979930	Identifier	r_has_type		8979880	0					
ANR	8979931	ArgumentList	op		8979880	1					
ANR	8979932	Argument	op		8979880	0					
ANR	8979933	Identifier	op		8979880	0					
ANR	8979934	Argument	t_integer		8979880	1					
ANR	8979935	Identifier	t_integer		8979880	0					
ANR	8979936	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8979880	1					
ANR	8979937	UnaryOperator	!		8979880	0					
ANR	8979938	CallExpression	"r_has_type ( op , t_real )"		8979880	1					
ANR	8979939	Callee	r_has_type		8979880	0					
ANR	8979940	Identifier	r_has_type		8979880	0					
ANR	8979941	ArgumentList	op		8979880	1					
ANR	8979942	Argument	op		8979880	0					
ANR	8979943	Identifier	op		8979880	0					
ANR	8979944	Argument	t_real		8979880	1					
ANR	8979945	Identifier	t_real		8979880	0					
ANR	8979946	ExpressionStatement	return_error ( gs_error_typecheck )	1474:12:48051:48083	8979880	1	True				
ANR	8979947	CallExpression	return_error ( gs_error_typecheck )		8979880	0					
ANR	8979948	Callee	return_error		8979880	0					
ANR	8979949	Identifier	return_error		8979880	0					
ANR	8979950	ArgumentList	gs_error_typecheck		8979880	1					
ANR	8979951	Argument	gs_error_typecheck		8979880	0					
ANR	8979952	Identifier	gs_error_typecheck		8979880	0					
ANR	8979953	ExpressionStatement	op ++	1475:8:48093:48097	8979880	1	True				
ANR	8979954	PostIncDecOperationExpression	op ++		8979880	0					
ANR	8979955	Identifier	op		8979880	0					
ANR	8979956	IncDec	++		8979880	1					
ANR	8979957	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8979880	5					
ANR	8979958	ForInit	i = 0 ;	1478:9:48115:48118	8979880	0	True				
ANR	8979959	AssignmentExpression	i = 0		8979880	0		=			
ANR	8979960	Identifier	i		8979880	0					
ANR	8979961	PrimaryExpression	0		8979880	1					
ANR	8979962	Condition	i < 3	1478:13:48119:48123	8979880	1	True				
ANR	8979963	RelationalExpression	i < 3		8979880	0		<			
ANR	8979964	Identifier	i		8979880	0					
ANR	8979965	PrimaryExpression	3		8979880	1					
ANR	8979966	PostIncDecOperationExpression	i ++	1478:20:48126:48128	8979880	2	True				
ANR	8979967	Identifier	i		8979880	0					
ANR	8979968	IncDec	++		8979880	1					
ANR	8979969	CompoundStatement		15:25:301:301	8979880	3					
ANR	8979970	IfStatement	if ( values [ i ] > 1.0 )		8979880	0					
ANR	8979971	Condition	values [ i ] > 1.0	1479:12:48145:48159	8979880	0	True				
ANR	8979972	RelationalExpression	values [ i ] > 1.0		8979880	0		>			
ANR	8979973	ArrayIndexing	values [ i ]		8979880	0					
ANR	8979974	Identifier	values		8979880	0					
ANR	8979975	Identifier	i		8979880	1					
ANR	8979976	PrimaryExpression	1.0		8979880	1					
ANR	8979977	ExpressionStatement	values [ i ] = 1.0	1480:12:48174:48189	8979880	1	True				
ANR	8979978	AssignmentExpression	values [ i ] = 1.0		8979880	0		=			
ANR	8979979	ArrayIndexing	values [ i ]		8979880	0					
ANR	8979980	Identifier	values		8979880	0					
ANR	8979981	Identifier	i		8979880	1					
ANR	8979982	PrimaryExpression	1.0		8979880	1					
ANR	8979983	IfStatement	if ( values [ i ] < 0.0 )		8979880	1					
ANR	8979984	Condition	values [ i ] < 0.0	1482:12:48204:48218	8979880	0	True				
ANR	8979985	RelationalExpression	values [ i ] < 0.0		8979880	0		<			
ANR	8979986	ArrayIndexing	values [ i ]		8979880	0					
ANR	8979987	Identifier	values		8979880	0					
ANR	8979988	Identifier	i		8979880	1					
ANR	8979989	PrimaryExpression	0.0		8979880	1					
ANR	8979990	ExpressionStatement	values [ i ] = 0.0	1483:12:48233:48248	8979880	1	True				
ANR	8979991	AssignmentExpression	values [ i ] = 0.0		8979880	0		=			
ANR	8979992	ArrayIndexing	values [ i ]		8979880	0					
ANR	8979993	Identifier	values		8979880	0					
ANR	8979994	Identifier	i		8979880	1					
ANR	8979995	PrimaryExpression	0.0		8979880	1					
ANR	8979996	ReturnStatement	return 0 ;	1486:4:48261:48269	8979880	6	True				
ANR	8979997	PrimaryExpression	0		8979880	0					
ANR	8979998	ReturnType	static int		8979880	1					
ANR	8979999	Identifier	rgbvalidate		8979880	2					
ANR	8980000	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8979880	3					
ANR	8980001	Parameter	i_ctx_t * i_ctx_p	1463:23:47769:47784	8979880	0	True				
ANR	8980002	ParameterType	i_ctx_t *		8979880	0					
ANR	8980003	Identifier	i_ctx_p		8979880	1					
ANR	8980004	Parameter	ref * space	1463:41:47787:47796	8979880	1	True				
ANR	8980005	ParameterType	ref *		8979880	0					
ANR	8980006	Identifier	space		8979880	1					
ANR	8980007	Parameter	float * values	1463:53:47799:47811	8979880	2	True				
ANR	8980008	ParameterType	float *		8979880	0					
ANR	8980009	Identifier	values		8979880	1					
ANR	8980010	Parameter	int num_comps	1463:68:47814:47826	8979880	3	True				
ANR	8980011	ParameterType	int		8979880	0					
ANR	8980012	Identifier	num_comps		8979880	1					
ANR	8980013	CFGEntryNode	ENTRY		8979880		True				
ANR	8980014	CFGExitNode	EXIT		8979880		True				
ANR	8980015	Symbol	op		8979880						
ANR	8980016	Symbol	* values		8979880						
ANR	8980017	Symbol	values		8979880						
ANR	8980018	Symbol	i		8979880						
ANR	8980019	Symbol	t_real		8979880						
ANR	8980020	Symbol	osp		8979880						
ANR	8980021	Symbol	space		8979880						
ANR	8980022	Symbol	r_has_type		8979880						
ANR	8980023	Symbol	gs_error_typecheck		8979880						
ANR	8980024	Symbol	* i		8979880						
ANR	8980025	Symbol	t_integer		8979880						
ANR	8980026	Symbol	gs_error_stackunderflow		8979880						
ANR	8980027	Symbol	i_ctx_p		8979880						
ANR	8980028	Symbol	num_comps		8979880						
ANR	8980029	Function	rgbinitialproc	1488:0:48273:48497							
ANR	8980030	FunctionDef	"rgbinitialproc (i_ctx_t * i_ctx_p , ref * space)"		8980029	0					
ANR	8980031	CompoundStatement		1489:0:48329:48497	8980029	0					
ANR	8980032	IdentifierDeclStatement	gs_client_color cc ;	1490:4:48335:48353	8980029	0	True				
ANR	8980033	IdentifierDecl	cc		8980029	0					
ANR	8980034	IdentifierDeclType	gs_client_color		8980029	0					
ANR	8980035	Identifier	cc		8980029	1					
ANR	8980036	ExpressionStatement	cc . pattern = 0x00	1492:4:48360:48377	8980029	1	True				
ANR	8980037	AssignmentExpression	cc . pattern = 0x00		8980029	0		=			
ANR	8980038	MemberAccess	cc . pattern		8980029	0					
ANR	8980039	Identifier	cc		8980029	0					
ANR	8980040	Identifier	pattern		8980029	1					
ANR	8980041	PrimaryExpression	0x00		8980029	1					
ANR	8980042	ExpressionStatement	cc . paint . values [ 0 ] = 0	1493:4:48383:48405	8980029	2	True				
ANR	8980043	AssignmentExpression	cc . paint . values [ 0 ] = 0		8980029	0		=			
ANR	8980044	ArrayIndexing	cc . paint . values [ 0 ]		8980029	0					
ANR	8980045	MemberAccess	cc . paint . values		8980029	0					
ANR	8980046	MemberAccess	cc . paint		8980029	0					
ANR	8980047	Identifier	cc		8980029	0					
ANR	8980048	Identifier	paint		8980029	1					
ANR	8980049	Identifier	values		8980029	1					
ANR	8980050	PrimaryExpression	0		8980029	1					
ANR	8980051	PrimaryExpression	0		8980029	1					
ANR	8980052	ExpressionStatement	cc . paint . values [ 1 ] = 0	1494:4:48411:48433	8980029	3	True				
ANR	8980053	AssignmentExpression	cc . paint . values [ 1 ] = 0		8980029	0		=			
ANR	8980054	ArrayIndexing	cc . paint . values [ 1 ]		8980029	0					
ANR	8980055	MemberAccess	cc . paint . values		8980029	0					
ANR	8980056	MemberAccess	cc . paint		8980029	0					
ANR	8980057	Identifier	cc		8980029	0					
ANR	8980058	Identifier	paint		8980029	1					
ANR	8980059	Identifier	values		8980029	1					
ANR	8980060	PrimaryExpression	1		8980029	1					
ANR	8980061	PrimaryExpression	0		8980029	1					
ANR	8980062	ExpressionStatement	cc . paint . values [ 2 ] = 0	1495:4:48439:48461	8980029	4	True				
ANR	8980063	AssignmentExpression	cc . paint . values [ 2 ] = 0		8980029	0		=			
ANR	8980064	ArrayIndexing	cc . paint . values [ 2 ]		8980029	0					
ANR	8980065	MemberAccess	cc . paint . values		8980029	0					
ANR	8980066	MemberAccess	cc . paint		8980029	0					
ANR	8980067	Identifier	cc		8980029	0					
ANR	8980068	Identifier	paint		8980029	1					
ANR	8980069	Identifier	values		8980029	1					
ANR	8980070	PrimaryExpression	2		8980029	1					
ANR	8980071	PrimaryExpression	0		8980029	1					
ANR	8980072	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1496:4:48467:48495	8980029	5	True				
ANR	8980073	CallExpression	"gs_setcolor ( igs , & cc )"		8980029	0					
ANR	8980074	Callee	gs_setcolor		8980029	0					
ANR	8980075	Identifier	gs_setcolor		8980029	0					
ANR	8980076	ArgumentList	igs		8980029	1					
ANR	8980077	Argument	igs		8980029	0					
ANR	8980078	Identifier	igs		8980029	0					
ANR	8980079	Argument	& cc		8980029	1					
ANR	8980080	UnaryOperationExpression	& cc		8980029	0					
ANR	8980081	UnaryOperator	&		8980029	0					
ANR	8980082	Identifier	cc		8980029	1					
ANR	8980083	ReturnType	static int		8980029	1					
ANR	8980084	Identifier	rgbinitialproc		8980029	2					
ANR	8980085	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		8980029	3					
ANR	8980086	Parameter	i_ctx_t * i_ctx_p	1488:26:48299:48314	8980029	0	True				
ANR	8980087	ParameterType	i_ctx_t *		8980029	0					
ANR	8980088	Identifier	i_ctx_p		8980029	1					
ANR	8980089	Parameter	ref * space	1488:44:48317:48326	8980029	1	True				
ANR	8980090	ParameterType	ref *		8980029	0					
ANR	8980091	Identifier	space		8980029	1					
ANR	8980092	CFGEntryNode	ENTRY		8980029		True				
ANR	8980093	CFGExitNode	EXIT		8980029		True				
ANR	8980094	Symbol	cc		8980029						
ANR	8980095	Symbol	cc . pattern		8980029						
ANR	8980096	Symbol	* cc . paint		8980029						
ANR	8980097	Symbol	igs		8980029						
ANR	8980098	Symbol	* cc . paint . values		8980029						
ANR	8980099	Symbol	* cc		8980029						
ANR	8980100	Symbol	i_ctx_p		8980029						
ANR	8980101	Symbol	cc . paint		8980029						
ANR	8980102	Symbol	gs_setcolor		8980029						
ANR	8980103	Symbol	& cc		8980029						
ANR	8980104	Symbol	cc . paint . values		8980029						
ANR	8980105	Symbol	space		8980029						
ANR	8980106	Function	setcmykspace	1500:0:48517:53568							
ANR	8980107	FunctionDef	"setcmykspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8980106	0					
ANR	8980108	CompoundStatement		1501:0:48605:53568	8980106	0					
ANR	8980109	IdentifierDeclStatement	os_ptr op = osp ;	1502:4:48611:48626	8980106	0	True				
ANR	8980110	IdentifierDecl	op = osp		8980106	0					
ANR	8980111	IdentifierDeclType	os_ptr		8980106	0					
ANR	8980112	Identifier	op		8980106	1					
ANR	8980113	AssignmentExpression	op = osp		8980106	2		=			
ANR	8980114	Identifier	osp		8980106	0					
ANR	8980115	Identifier	osp		8980106	1					
ANR	8980116	IdentifierDeclStatement	gs_color_space * pcs ;	1503:4:48632:48652	8980106	1	True				
ANR	8980117	IdentifierDecl	* pcs		8980106	0					
ANR	8980118	IdentifierDeclType	gs_color_space *		8980106	0					
ANR	8980119	Identifier	pcs		8980106	1					
ANR	8980120	IdentifierDeclStatement	int code = 0 ;	1504:4:48658:48668	8980106	2	True				
ANR	8980121	IdentifierDecl	code = 0		8980106	0					
ANR	8980122	IdentifierDeclType	int		8980106	0					
ANR	8980123	Identifier	code		8980106	1					
ANR	8980124	AssignmentExpression	code = 0		8980106	2		=			
ANR	8980125	Identifier	code		8980106	0					
ANR	8980126	PrimaryExpression	0		8980106	1					
ANR	8980127	IdentifierDeclStatement	ref stref ;	1505:4:48674:48683	8980106	3	True				
ANR	8980128	IdentifierDecl	stref		8980106	0					
ANR	8980129	IdentifierDeclType	ref		8980106	0					
ANR	8980130	Identifier	stref		8980106	1					
ANR	8980131	DoStatement	do		8980106	4					
ANR	8980132	CompoundStatement		7:7:87:87	8980106	0					
ANR	8980133	SwitchStatement	switch ( * stage )		8980106	0					
ANR	8980134	Condition	* stage	1508:16:48711:48716	8980106	0	True				
ANR	8980135	UnaryOperationExpression	* stage		8980106	0					
ANR	8980136	UnaryOperator	*		8980106	0					
ANR	8980137	Identifier	stage		8980106	1					
ANR	8980138	CompoundStatement		8:24:113:113	8980106	1					
ANR	8980139	Label	case 0 :	1509:12:48733:48739	8980106	0	True				
ANR	8980140	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		8980106	1					
ANR	8980141	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	1510:20:48761:48808	8980106	0	True				
ANR	8980142	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		8980106	0		&&			
ANR	8980143	MemberAccess	istate -> use_cie_color . value . boolval		8980106	0					
ANR	8980144	MemberAccess	istate -> use_cie_color . value		8980106	0					
ANR	8980145	PtrMemberAccess	istate -> use_cie_color		8980106	0					
ANR	8980146	Identifier	istate		8980106	0					
ANR	8980147	Identifier	use_cie_color		8980106	1					
ANR	8980148	Identifier	value		8980106	1					
ANR	8980149	Identifier	boolval		8980106	1					
ANR	8980150	UnaryOperationExpression	! CIESubst		8980106	1					
ANR	8980151	UnaryOperator	!		8980106	0					
ANR	8980152	Identifier	CIESubst		8980106	1					
ANR	8980153	CompoundStatement		12:20:259:271	8980106	1					
ANR	8980154	IdentifierDeclStatement	byte * body ;	1511:20:48833:48843	8980106	0	True				
ANR	8980155	IdentifierDecl	* body		8980106	0					
ANR	8980156	IdentifierDeclType	byte *		8980106	0					
ANR	8980157	Identifier	body		8980106	1					
ANR	8980158	IdentifierDeclStatement	ref * nosubst ;	1512:20:48865:48877	8980106	1	True				
ANR	8980159	IdentifierDecl	* nosubst		8980106	0					
ANR	8980160	IdentifierDeclType	ref *		8980106	0					
ANR	8980161	Identifier	nosubst		8980106	1					
ANR	8980162	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	1514:20:48900:48968	8980106	2	True				
ANR	8980163	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8980106	0		=			
ANR	8980164	Identifier	code		8980106	0					
ANR	8980165	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		8980106	1					
ANR	8980166	Callee	dict_find_string		8980106	0					
ANR	8980167	Identifier	dict_find_string		8980106	0					
ANR	8980168	ArgumentList	systemdict		8980106	1					
ANR	8980169	Argument	systemdict		8980106	0					
ANR	8980170	Identifier	systemdict		8980106	0					
ANR	8980171	Argument	"""NOSUBSTDEVICECOLORS"""		8980106	1					
ANR	8980172	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		8980106	0					
ANR	8980173	Argument	& nosubst		8980106	2					
ANR	8980174	UnaryOperationExpression	& nosubst		8980106	0					
ANR	8980175	UnaryOperator	&		8980106	0					
ANR	8980176	Identifier	nosubst		8980106	1					
ANR	8980177	IfStatement	if ( code != 0 )		8980106	3					
ANR	8980178	Condition	code != 0	1515:24:48994:49002	8980106	0	True				
ANR	8980179	EqualityExpression	code != 0		8980106	0		!=			
ANR	8980180	Identifier	code		8980106	0					
ANR	8980181	PrimaryExpression	0		8980106	1					
ANR	8980182	CompoundStatement		15:35:399:399	8980106	1					
ANR	8980183	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		8980106	0					
ANR	8980184	Condition	"! r_has_type ( nosubst , t_boolean )"	1516:28:49035:49065	8980106	0	True				
ANR	8980185	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		8980106	0					
ANR	8980186	UnaryOperator	!		8980106	0					
ANR	8980187	CallExpression	"r_has_type ( nosubst , t_boolean )"		8980106	1					
ANR	8980188	Callee	r_has_type		8980106	0					
ANR	8980189	Identifier	r_has_type		8980106	0					
ANR	8980190	ArgumentList	nosubst		8980106	1					
ANR	8980191	Argument	nosubst		8980106	0					
ANR	8980192	Identifier	nosubst		8980106	0					
ANR	8980193	Argument	t_boolean		8980106	1					
ANR	8980194	Identifier	t_boolean		8980106	0					
ANR	8980195	ExpressionStatement	return_error ( gs_error_typecheck )	1517:28:49096:49128	8980106	1	True				
ANR	8980196	CallExpression	return_error ( gs_error_typecheck )		8980106	0					
ANR	8980197	Callee	return_error		8980106	0					
ANR	8980198	Identifier	return_error		8980106	0					
ANR	8980199	ArgumentList	gs_error_typecheck		8980106	1					
ANR	8980200	Argument	gs_error_typecheck		8980106	0					
ANR	8980201	Identifier	gs_error_typecheck		8980106	0					
ANR	8980202	IfStatement	if ( code != 0 && nosubst -> value . boolval )		8980106	4					
ANR	8980203	Condition	code != 0 && nosubst -> value . boolval	1519:24:49176:49210	8980106	0	True				
ANR	8980204	AndExpression	code != 0 && nosubst -> value . boolval		8980106	0		&&			
ANR	8980205	EqualityExpression	code != 0		8980106	0		!=			
ANR	8980206	Identifier	code		8980106	0					
ANR	8980207	PrimaryExpression	0		8980106	1					
ANR	8980208	MemberAccess	nosubst -> value . boolval		8980106	1					
ANR	8980209	PtrMemberAccess	nosubst -> value		8980106	0					
ANR	8980210	Identifier	nosubst		8980106	0					
ANR	8980211	Identifier	value		8980106	1					
ANR	8980212	Identifier	boolval		8980106	1					
ANR	8980213	CompoundStatement		19:61:607:607	8980106	1					
ANR	8980214	ExpressionStatement	* stage = 4	1520:24:49239:49249	8980106	0	True				
ANR	8980215	AssignmentExpression	* stage = 4		8980106	0		=			
ANR	8980216	UnaryOperationExpression	* stage		8980106	0					
ANR	8980217	UnaryOperator	*		8980106	0					
ANR	8980218	Identifier	stage		8980106	1					
ANR	8980219	PrimaryExpression	4		8980106	1					
ANR	8980220	ExpressionStatement	* cont = 1	1521:24:49275:49284	8980106	1	True				
ANR	8980221	AssignmentExpression	* cont = 1		8980106	0		=			
ANR	8980222	UnaryOperationExpression	* cont		8980106	0					
ANR	8980223	UnaryOperator	*		8980106	0					
ANR	8980224	Identifier	cont		8980106	1					
ANR	8980225	PrimaryExpression	1		8980106	1					
ANR	8980226	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	1522:24:49310:49344	8980106	2	True				
ANR	8980227	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		8980106	0		=			
ANR	8980228	Identifier	body		8980106	0					
ANR	8980229	CallExpression	"ialloc_string ( 32 , ""string"" )"		8980106	1					
ANR	8980230	Callee	ialloc_string		8980106	0					
ANR	8980231	Identifier	ialloc_string		8980106	0					
ANR	8980232	ArgumentList	32		8980106	1					
ANR	8980233	Argument	32		8980106	0					
ANR	8980234	PrimaryExpression	32		8980106	0					
ANR	8980235	Argument	"""string"""		8980106	1					
ANR	8980236	PrimaryExpression	"""string"""		8980106	0					
ANR	8980237	IfStatement	if ( body == 0 )		8980106	3					
ANR	8980238	Condition	body == 0	1523:28:49374:49382	8980106	0	True				
ANR	8980239	EqualityExpression	body == 0		8980106	0		==			
ANR	8980240	Identifier	body		8980106	0					
ANR	8980241	PrimaryExpression	0		8980106	1					
ANR	8980242	ExpressionStatement	return_error ( gs_error_VMerror )	1524:28:49413:49443	8980106	1	True				
ANR	8980243	CallExpression	return_error ( gs_error_VMerror )		8980106	0					
ANR	8980244	Callee	return_error		8980106	0					
ANR	8980245	Identifier	return_error		8980106	0					
ANR	8980246	ArgumentList	gs_error_VMerror		8980106	1					
ANR	8980247	Argument	gs_error_VMerror		8980106	0					
ANR	8980248	Identifier	gs_error_VMerror		8980106	0					
ANR	8980249	ExpressionStatement	"memcpy ( body , ""/DefaultCMYK ..nosubstdevicetest"" , 32 )"	1525:24:49469:49520	8980106	4	True				
ANR	8980250	CallExpression	"memcpy ( body , ""/DefaultCMYK ..nosubstdevicetest"" , 32 )"		8980106	0					
ANR	8980251	Callee	memcpy		8980106	0					
ANR	8980252	Identifier	memcpy		8980106	0					
ANR	8980253	ArgumentList	body		8980106	1					
ANR	8980254	Argument	body		8980106	0					
ANR	8980255	Identifier	body		8980106	0					
ANR	8980256	Argument	"""/DefaultCMYK ..nosubstdevicetest"""		8980106	1					
ANR	8980257	PrimaryExpression	"""/DefaultCMYK ..nosubstdevicetest"""		8980106	0					
ANR	8980258	Argument	32		8980106	2					
ANR	8980259	PrimaryExpression	32		8980106	0					
ANR	8980260	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	1526:24:49546:49599	8980106	5	True				
ANR	8980261	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		8980106	0					
ANR	8980262	Callee	make_string		8980106	0					
ANR	8980263	Identifier	make_string		8980106	0					
ANR	8980264	ArgumentList	& stref		8980106	1					
ANR	8980265	Argument	& stref		8980106	0					
ANR	8980266	UnaryOperationExpression	& stref		8980106	0					
ANR	8980267	UnaryOperator	&		8980106	0					
ANR	8980268	Identifier	stref		8980106	1					
ANR	8980269	Argument	a_all | icurrent_space		8980106	1					
ANR	8980270	InclusiveOrExpression	a_all | icurrent_space		8980106	0		|			
ANR	8980271	Identifier	a_all		8980106	0					
ANR	8980272	Identifier	icurrent_space		8980106	1					
ANR	8980273	Argument	32		8980106	2					
ANR	8980274	PrimaryExpression	32		8980106	0					
ANR	8980275	Argument	body		8980106	3					
ANR	8980276	Identifier	body		8980106	0					
ANR	8980277	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1527:24:49625:49658	8980106	6	True				
ANR	8980278	CallExpression	"r_set_attrs ( & stref , a_executable )"		8980106	0					
ANR	8980279	Callee	r_set_attrs		8980106	0					
ANR	8980280	Identifier	r_set_attrs		8980106	0					
ANR	8980281	ArgumentList	& stref		8980106	1					
ANR	8980282	Argument	& stref		8980106	0					
ANR	8980283	UnaryOperationExpression	& stref		8980106	0					
ANR	8980284	UnaryOperator	&		8980106	0					
ANR	8980285	Identifier	stref		8980106	1					
ANR	8980286	Argument	a_executable		8980106	1					
ANR	8980287	Identifier	a_executable		8980106	0					
ANR	8980288	ExpressionStatement	esp ++	1528:24:49684:49689	8980106	7	True				
ANR	8980289	PostIncDecOperationExpression	esp ++		8980106	0					
ANR	8980290	Identifier	esp		8980106	0					
ANR	8980291	IncDec	++		8980106	1					
ANR	8980292	ExpressionStatement	"ref_assign ( esp , & stref )"	1529:24:49715:49738	8980106	8	True				
ANR	8980293	CallExpression	"ref_assign ( esp , & stref )"		8980106	0					
ANR	8980294	Callee	ref_assign		8980106	0					
ANR	8980295	Identifier	ref_assign		8980106	0					
ANR	8980296	ArgumentList	esp		8980106	1					
ANR	8980297	Argument	esp		8980106	0					
ANR	8980298	Identifier	esp		8980106	0					
ANR	8980299	Argument	& stref		8980106	1					
ANR	8980300	UnaryOperationExpression	& stref		8980106	0					
ANR	8980301	UnaryOperator	&		8980106	0					
ANR	8980302	Identifier	stref		8980106	1					
ANR	8980303	ReturnStatement	return o_push_estack ;	1530:24:49764:49784	8980106	9	True				
ANR	8980304	Identifier	o_push_estack		8980106	0					
ANR	8980305	ElseStatement	else		8980106	0					
ANR	8980306	CompoundStatement		31:27:1207:1207	8980106	0					
ANR	8980307	ExpressionStatement	* stage = 2	1532:24:49839:49849	8980106	0	True				
ANR	8980308	AssignmentExpression	* stage = 2		8980106	0		=			
ANR	8980309	UnaryOperationExpression	* stage		8980106	0					
ANR	8980310	UnaryOperator	*		8980106	0					
ANR	8980311	Identifier	stage		8980106	1					
ANR	8980312	PrimaryExpression	2		8980106	1					
ANR	8980313	ExpressionStatement	* cont = 1	1533:24:49875:49884	8980106	1	True				
ANR	8980314	AssignmentExpression	* cont = 1		8980106	0		=			
ANR	8980315	UnaryOperationExpression	* cont		8980106	0					
ANR	8980316	UnaryOperator	*		8980106	0					
ANR	8980317	Identifier	cont		8980106	1					
ANR	8980318	PrimaryExpression	1		8980106	1					
ANR	8980319	ExpressionStatement	"body = ialloc_string ( 47 , ""string"" )"	1534:24:49910:49944	8980106	2	True				
ANR	8980320	AssignmentExpression	"body = ialloc_string ( 47 , ""string"" )"		8980106	0		=			
ANR	8980321	Identifier	body		8980106	0					
ANR	8980322	CallExpression	"ialloc_string ( 47 , ""string"" )"		8980106	1					
ANR	8980323	Callee	ialloc_string		8980106	0					
ANR	8980324	Identifier	ialloc_string		8980106	0					
ANR	8980325	ArgumentList	47		8980106	1					
ANR	8980326	Argument	47		8980106	0					
ANR	8980327	PrimaryExpression	47		8980106	0					
ANR	8980328	Argument	"""string"""		8980106	1					
ANR	8980329	PrimaryExpression	"""string"""		8980106	0					
ANR	8980330	IfStatement	if ( body == 0 )		8980106	3					
ANR	8980331	Condition	body == 0	1535:28:49974:49982	8980106	0	True				
ANR	8980332	EqualityExpression	body == 0		8980106	0		==			
ANR	8980333	Identifier	body		8980106	0					
ANR	8980334	PrimaryExpression	0		8980106	1					
ANR	8980335	ExpressionStatement	return_error ( gs_error_VMerror )	1536:28:50013:50043	8980106	1	True				
ANR	8980336	CallExpression	return_error ( gs_error_VMerror )		8980106	0					
ANR	8980337	Callee	return_error		8980106	0					
ANR	8980338	Identifier	return_error		8980106	0					
ANR	8980339	ArgumentList	gs_error_VMerror		8980106	1					
ANR	8980340	Argument	gs_error_VMerror		8980106	0					
ANR	8980341	Identifier	gs_error_VMerror		8980106	0					
ANR	8980342	ExpressionStatement	"memcpy ( body , ""{/DefaultCMYK /ColorSpace findresource} stopped"" , 47 )"	1537:24:50069:50136	8980106	4	True				
ANR	8980343	CallExpression	"memcpy ( body , ""{/DefaultCMYK /ColorSpace findresource} stopped"" , 47 )"		8980106	0					
ANR	8980344	Callee	memcpy		8980106	0					
ANR	8980345	Identifier	memcpy		8980106	0					
ANR	8980346	ArgumentList	body		8980106	1					
ANR	8980347	Argument	body		8980106	0					
ANR	8980348	Identifier	body		8980106	0					
ANR	8980349	Argument	"""{/DefaultCMYK /ColorSpace findresource} stopped"""		8980106	1					
ANR	8980350	PrimaryExpression	"""{/DefaultCMYK /ColorSpace findresource} stopped"""		8980106	0					
ANR	8980351	Argument	47		8980106	2					
ANR	8980352	PrimaryExpression	47		8980106	0					
ANR	8980353	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 47 , body )"	1538:24:50162:50215	8980106	5	True				
ANR	8980354	CallExpression	"make_string ( & stref , a_all | icurrent_space , 47 , body )"		8980106	0					
ANR	8980355	Callee	make_string		8980106	0					
ANR	8980356	Identifier	make_string		8980106	0					
ANR	8980357	ArgumentList	& stref		8980106	1					
ANR	8980358	Argument	& stref		8980106	0					
ANR	8980359	UnaryOperationExpression	& stref		8980106	0					
ANR	8980360	UnaryOperator	&		8980106	0					
ANR	8980361	Identifier	stref		8980106	1					
ANR	8980362	Argument	a_all | icurrent_space		8980106	1					
ANR	8980363	InclusiveOrExpression	a_all | icurrent_space		8980106	0		|			
ANR	8980364	Identifier	a_all		8980106	0					
ANR	8980365	Identifier	icurrent_space		8980106	1					
ANR	8980366	Argument	47		8980106	2					
ANR	8980367	PrimaryExpression	47		8980106	0					
ANR	8980368	Argument	body		8980106	3					
ANR	8980369	Identifier	body		8980106	0					
ANR	8980370	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1539:24:50241:50274	8980106	6	True				
ANR	8980371	CallExpression	"r_set_attrs ( & stref , a_executable )"		8980106	0					
ANR	8980372	Callee	r_set_attrs		8980106	0					
ANR	8980373	Identifier	r_set_attrs		8980106	0					
ANR	8980374	ArgumentList	& stref		8980106	1					
ANR	8980375	Argument	& stref		8980106	0					
ANR	8980376	UnaryOperationExpression	& stref		8980106	0					
ANR	8980377	UnaryOperator	&		8980106	0					
ANR	8980378	Identifier	stref		8980106	1					
ANR	8980379	Argument	a_executable		8980106	1					
ANR	8980380	Identifier	a_executable		8980106	0					
ANR	8980381	ExpressionStatement	esp ++	1540:24:50300:50305	8980106	7	True				
ANR	8980382	PostIncDecOperationExpression	esp ++		8980106	0					
ANR	8980383	Identifier	esp		8980106	0					
ANR	8980384	IncDec	++		8980106	1					
ANR	8980385	ExpressionStatement	"ref_assign ( esp , & stref )"	1541:24:50331:50354	8980106	8	True				
ANR	8980386	CallExpression	"ref_assign ( esp , & stref )"		8980106	0					
ANR	8980387	Callee	ref_assign		8980106	0					
ANR	8980388	Identifier	ref_assign		8980106	0					
ANR	8980389	ArgumentList	esp		8980106	1					
ANR	8980390	Argument	esp		8980106	0					
ANR	8980391	Identifier	esp		8980106	0					
ANR	8980392	Argument	& stref		8980106	1					
ANR	8980393	UnaryOperationExpression	& stref		8980106	0					
ANR	8980394	UnaryOperator	&		8980106	0					
ANR	8980395	Identifier	stref		8980106	1					
ANR	8980396	ReturnStatement	return o_push_estack ;	1542:24:50380:50400	8980106	9	True				
ANR	8980397	Identifier	o_push_estack		8980106	0					
ANR	8980398	Label	case 1 :	1546:12:50489:50495	8980106	2	True				
ANR	8980399	ExpressionStatement	pcs = gs_cspace_new_DeviceCMYK ( imemory )	1547:16:50513:50552	8980106	3	True				
ANR	8980400	AssignmentExpression	pcs = gs_cspace_new_DeviceCMYK ( imemory )		8980106	0		=			
ANR	8980401	Identifier	pcs		8980106	0					
ANR	8980402	CallExpression	gs_cspace_new_DeviceCMYK ( imemory )		8980106	1					
ANR	8980403	Callee	gs_cspace_new_DeviceCMYK		8980106	0					
ANR	8980404	Identifier	gs_cspace_new_DeviceCMYK		8980106	0					
ANR	8980405	ArgumentList	imemory		8980106	1					
ANR	8980406	Argument	imemory		8980106	0					
ANR	8980407	Identifier	imemory		8980106	0					
ANR	8980408	IfStatement	if ( pcs == NULL )		8980106	4					
ANR	8980409	Condition	pcs == NULL	1548:20:50574:50584	8980106	0	True				
ANR	8980410	EqualityExpression	pcs == NULL		8980106	0		==			
ANR	8980411	Identifier	pcs		8980106	0					
ANR	8980412	Identifier	NULL		8980106	1					
ANR	8980413	ExpressionStatement	return_error ( gs_error_VMerror )	1549:20:50607:50637	8980106	1	True				
ANR	8980414	CallExpression	return_error ( gs_error_VMerror )		8980106	0					
ANR	8980415	Callee	return_error		8980106	0					
ANR	8980416	Identifier	return_error		8980106	0					
ANR	8980417	ArgumentList	gs_error_VMerror		8980106	1					
ANR	8980418	Argument	gs_error_VMerror		8980106	0					
ANR	8980419	Identifier	gs_error_VMerror		8980106	0					
ANR	8980420	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	1550:16:50655:50688	8980106	5	True				
ANR	8980421	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8980106	0		=			
ANR	8980422	Identifier	code		8980106	0					
ANR	8980423	CallExpression	"gs_setcolorspace ( igs , pcs )"		8980106	1					
ANR	8980424	Callee	gs_setcolorspace		8980106	0					
ANR	8980425	Identifier	gs_setcolorspace		8980106	0					
ANR	8980426	ArgumentList	igs		8980106	1					
ANR	8980427	Argument	igs		8980106	0					
ANR	8980428	Identifier	igs		8980106	0					
ANR	8980429	Argument	pcs		8980106	1					
ANR	8980430	Identifier	pcs		8980106	0					
ANR	8980431	IfStatement	if ( code >= 0 )		8980106	6					
ANR	8980432	Condition	code >= 0	1551:20:50710:50718	8980106	0	True				
ANR	8980433	RelationalExpression	code >= 0		8980106	0		>=			
ANR	8980434	Identifier	code		8980106	0					
ANR	8980435	PrimaryExpression	0		8980106	1					
ANR	8980436	CompoundStatement		52:20:2137:2187	8980106	1					
ANR	8980437	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	1552:20:50743:50793	8980106	0	True				
ANR	8980438	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		8980106	0					
ANR	8980439	IdentifierDeclType	gs_client_color *		8980106	0					
ANR	8980440	Identifier	pcc		8980106	1					
ANR	8980441	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		8980106	2		=			
ANR	8980442	Identifier	pcc		8980106	0					
ANR	8980443	CallExpression	gs_currentcolor_inline ( igs )		8980106	1					
ANR	8980444	Callee	gs_currentcolor_inline		8980106	0					
ANR	8980445	Identifier	gs_currentcolor_inline		8980106	0					
ANR	8980446	ArgumentList	igs		8980106	1					
ANR	8980447	Argument	igs		8980106	0					
ANR	8980448	Identifier	igs		8980106	0					
ANR	8980449	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	1554:20:50816:50846	8980106	1	True				
ANR	8980450	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		8980106	0					
ANR	8980451	Callee	cs_adjust_color_count		8980106	0					
ANR	8980452	Identifier	cs_adjust_color_count		8980106	0					
ANR	8980453	ArgumentList	igs		8980106	1					
ANR	8980454	Argument	igs		8980106	0					
ANR	8980455	Identifier	igs		8980106	0					
ANR	8980456	Argument	- 1		8980106	1					
ANR	8980457	UnaryOperationExpression	- 1		8980106	0					
ANR	8980458	UnaryOperator	-		8980106	0					
ANR	8980459	PrimaryExpression	1		8980106	1					
ANR	8980460	ExpressionStatement	pcc -> paint . values [ 0 ] = 0	1555:20:50897:50921	8980106	2	True				
ANR	8980461	AssignmentExpression	pcc -> paint . values [ 0 ] = 0		8980106	0		=			
ANR	8980462	ArrayIndexing	pcc -> paint . values [ 0 ]		8980106	0					
ANR	8980463	MemberAccess	pcc -> paint . values		8980106	0					
ANR	8980464	PtrMemberAccess	pcc -> paint		8980106	0					
ANR	8980465	Identifier	pcc		8980106	0					
ANR	8980466	Identifier	paint		8980106	1					
ANR	8980467	Identifier	values		8980106	1					
ANR	8980468	PrimaryExpression	0		8980106	1					
ANR	8980469	PrimaryExpression	0		8980106	1					
ANR	8980470	ExpressionStatement	pcc -> paint . values [ 1 ] = 0	1556:20:50943:50967	8980106	3	True				
ANR	8980471	AssignmentExpression	pcc -> paint . values [ 1 ] = 0		8980106	0		=			
ANR	8980472	ArrayIndexing	pcc -> paint . values [ 1 ]		8980106	0					
ANR	8980473	MemberAccess	pcc -> paint . values		8980106	0					
ANR	8980474	PtrMemberAccess	pcc -> paint		8980106	0					
ANR	8980475	Identifier	pcc		8980106	0					
ANR	8980476	Identifier	paint		8980106	1					
ANR	8980477	Identifier	values		8980106	1					
ANR	8980478	PrimaryExpression	1		8980106	1					
ANR	8980479	PrimaryExpression	0		8980106	1					
ANR	8980480	ExpressionStatement	pcc -> paint . values [ 2 ] = 0	1557:20:50989:51013	8980106	4	True				
ANR	8980481	AssignmentExpression	pcc -> paint . values [ 2 ] = 0		8980106	0		=			
ANR	8980482	ArrayIndexing	pcc -> paint . values [ 2 ]		8980106	0					
ANR	8980483	MemberAccess	pcc -> paint . values		8980106	0					
ANR	8980484	PtrMemberAccess	pcc -> paint		8980106	0					
ANR	8980485	Identifier	pcc		8980106	0					
ANR	8980486	Identifier	paint		8980106	1					
ANR	8980487	Identifier	values		8980106	1					
ANR	8980488	PrimaryExpression	2		8980106	1					
ANR	8980489	PrimaryExpression	0		8980106	1					
ANR	8980490	ExpressionStatement	pcc -> paint . values [ 3 ] = 1	1558:20:51035:51059	8980106	5	True				
ANR	8980491	AssignmentExpression	pcc -> paint . values [ 3 ] = 1		8980106	0		=			
ANR	8980492	ArrayIndexing	pcc -> paint . values [ 3 ]		8980106	0					
ANR	8980493	MemberAccess	pcc -> paint . values		8980106	0					
ANR	8980494	PtrMemberAccess	pcc -> paint		8980106	0					
ANR	8980495	Identifier	pcc		8980106	0					
ANR	8980496	Identifier	paint		8980106	1					
ANR	8980497	Identifier	values		8980106	1					
ANR	8980498	PrimaryExpression	3		8980106	1					
ANR	8980499	PrimaryExpression	1		8980106	1					
ANR	8980500	ExpressionStatement	pcc -> pattern = 0	1559:20:51081:51097	8980106	6	True				
ANR	8980501	AssignmentExpression	pcc -> pattern = 0		8980106	0		=			
ANR	8980502	PtrMemberAccess	pcc -> pattern		8980106	0					
ANR	8980503	Identifier	pcc		8980106	0					
ANR	8980504	Identifier	pattern		8980106	1					
ANR	8980505	PrimaryExpression	0		8980106	1					
ANR	8980506	ExpressionStatement	gx_unset_dev_color ( igs )	1560:20:51133:51156	8980106	7	True				
ANR	8980507	CallExpression	gx_unset_dev_color ( igs )		8980106	0					
ANR	8980508	Callee	gx_unset_dev_color		8980106	0					
ANR	8980509	Identifier	gx_unset_dev_color		8980106	0					
ANR	8980510	ArgumentList	igs		8980106	1					
ANR	8980511	Argument	igs		8980106	0					
ANR	8980512	Identifier	igs		8980106	0					
ANR	8980513	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	1562:16:51192:51234	8980106	7	True				
ANR	8980514	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		8980106	0					
ANR	8980515	Callee	rc_decrement_only_cs		8980106	0					
ANR	8980516	Identifier	rc_decrement_only_cs		8980106	0					
ANR	8980517	ArgumentList	pcs		8980106	1					
ANR	8980518	Argument	pcs		8980106	0					
ANR	8980519	Identifier	pcs		8980106	0					
ANR	8980520	Argument	"""zsetdevcspace"""		8980106	1					
ANR	8980521	PrimaryExpression	"""zsetdevcspace"""		8980106	0					
ANR	8980522	ExpressionStatement	* cont = 0	1563:16:51252:51261	8980106	8	True				
ANR	8980523	AssignmentExpression	* cont = 0		8980106	0		=			
ANR	8980524	UnaryOperationExpression	* cont		8980106	0					
ANR	8980525	UnaryOperator	*		8980106	0					
ANR	8980526	Identifier	cont		8980106	1					
ANR	8980527	PrimaryExpression	0		8980106	1					
ANR	8980528	ExpressionStatement	* stage = 0	1564:16:51279:51289	8980106	9	True				
ANR	8980529	AssignmentExpression	* stage = 0		8980106	0		=			
ANR	8980530	UnaryOperationExpression	* stage		8980106	0					
ANR	8980531	UnaryOperator	*		8980106	0					
ANR	8980532	Identifier	stage		8980106	1					
ANR	8980533	PrimaryExpression	0		8980106	1					
ANR	8980534	BreakStatement	break ;	1565:16:51307:51312	8980106	10	True				
ANR	8980535	Label	case 2 :	1566:12:51326:51332	8980106	11	True				
ANR	8980536	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8980106	12					
ANR	8980537	Condition	"! r_has_type ( op , t_boolean )"	1567:20:51354:51379	8980106	0	True				
ANR	8980538	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8980106	0					
ANR	8980539	UnaryOperator	!		8980106	0					
ANR	8980540	CallExpression	"r_has_type ( op , t_boolean )"		8980106	1					
ANR	8980541	Callee	r_has_type		8980106	0					
ANR	8980542	Identifier	r_has_type		8980106	0					
ANR	8980543	ArgumentList	op		8980106	1					
ANR	8980544	Argument	op		8980106	0					
ANR	8980545	Identifier	op		8980106	0					
ANR	8980546	Argument	t_boolean		8980106	1					
ANR	8980547	Identifier	t_boolean		8980106	0					
ANR	8980548	ExpressionStatement	return_error ( gs_error_typecheck )	1568:20:51402:51434	8980106	1	True				
ANR	8980549	CallExpression	return_error ( gs_error_typecheck )		8980106	0					
ANR	8980550	Callee	return_error		8980106	0					
ANR	8980551	Identifier	return_error		8980106	0					
ANR	8980552	ArgumentList	gs_error_typecheck		8980106	1					
ANR	8980553	Argument	gs_error_typecheck		8980106	0					
ANR	8980554	Identifier	gs_error_typecheck		8980106	0					
ANR	8980555	IfStatement	if ( op -> value . boolval )		8980106	13					
ANR	8980556	Condition	op -> value . boolval	1569:20:51456:51472	8980106	0	True				
ANR	8980557	MemberAccess	op -> value . boolval		8980106	0					
ANR	8980558	PtrMemberAccess	op -> value		8980106	0					
ANR	8980559	Identifier	op		8980106	0					
ANR	8980560	Identifier	value		8980106	1					
ANR	8980561	Identifier	boolval		8980106	1					
ANR	8980562	CompoundStatement		69:39:2869:2869	8980106	1					
ANR	8980563	ExpressionStatement	pop ( 1 )	1573:20:51639:51645	8980106	0	True				
ANR	8980564	CallExpression	pop ( 1 )		8980106	0					
ANR	8980565	Callee	pop		8980106	0					
ANR	8980566	Identifier	pop		8980106	0					
ANR	8980567	ArgumentList	1		8980106	1					
ANR	8980568	Argument	1		8980106	0					
ANR	8980569	PrimaryExpression	1		8980106	0					
ANR	8980570	ExpressionStatement	* stage = 1	1574:20:51667:51677	8980106	1	True				
ANR	8980571	AssignmentExpression	* stage = 1		8980106	0		=			
ANR	8980572	UnaryOperationExpression	* stage		8980106	0					
ANR	8980573	UnaryOperator	*		8980106	0					
ANR	8980574	Identifier	stage		8980106	1					
ANR	8980575	PrimaryExpression	1		8980106	1					
ANR	8980576	BreakStatement	break ;	1575:20:51699:51704	8980106	2	True				
ANR	8980577	ExpressionStatement	pop ( 1 )	1577:16:51740:51746	8980106	14	True				
ANR	8980578	CallExpression	pop ( 1 )		8980106	0					
ANR	8980579	Callee	pop		8980106	0					
ANR	8980580	Identifier	pop		8980106	0					
ANR	8980581	ArgumentList	1		8980106	1					
ANR	8980582	Argument	1		8980106	0					
ANR	8980583	PrimaryExpression	1		8980106	0					
ANR	8980584	ExpressionStatement	* stage = 3	1578:16:51764:51774	8980106	15	True				
ANR	8980585	AssignmentExpression	* stage = 3		8980106	0		=			
ANR	8980586	UnaryOperationExpression	* stage		8980106	0					
ANR	8980587	UnaryOperator	*		8980106	0					
ANR	8980588	Identifier	stage		8980106	1					
ANR	8980589	PrimaryExpression	3		8980106	1					
ANR	8980590	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1579:16:51792:51829	8980106	16	True				
ANR	8980591	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8980106	0		=			
ANR	8980592	Identifier	code		8980106	0					
ANR	8980593	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8980106	1					
ANR	8980594	Callee	setcolorspace_nosubst		8980106	0					
ANR	8980595	Identifier	setcolorspace_nosubst		8980106	0					
ANR	8980596	ArgumentList	i_ctx_p		8980106	1					
ANR	8980597	Argument	i_ctx_p		8980106	0					
ANR	8980598	Identifier	i_ctx_p		8980106	0					
ANR	8980599	IfStatement	if ( code != 0 )		8980106	17					
ANR	8980600	Condition	code != 0	1580:20:51851:51859	8980106	0	True				
ANR	8980601	EqualityExpression	code != 0		8980106	0		!=			
ANR	8980602	Identifier	code		8980106	0					
ANR	8980603	PrimaryExpression	0		8980106	1					
ANR	8980604	ReturnStatement	return code ;	1581:20:51882:51893	8980106	1	True				
ANR	8980605	Identifier	code		8980106	0					
ANR	8980606	BreakStatement	break ;	1582:16:51911:51916	8980106	18	True				
ANR	8980607	Label	case 3 :	1583:12:51930:51936	8980106	19	True				
ANR	8980608	ExpressionStatement	* cont = 0	1588:16:52151:52160	8980106	20	True				
ANR	8980609	AssignmentExpression	* cont = 0		8980106	0		=			
ANR	8980610	UnaryOperationExpression	* cont		8980106	0					
ANR	8980611	UnaryOperator	*		8980106	0					
ANR	8980612	Identifier	cont		8980106	1					
ANR	8980613	PrimaryExpression	0		8980106	1					
ANR	8980614	ExpressionStatement	* stage = 0	1589:16:52178:52188	8980106	21	True				
ANR	8980615	AssignmentExpression	* stage = 0		8980106	0		=			
ANR	8980616	UnaryOperationExpression	* stage		8980106	0					
ANR	8980617	UnaryOperator	*		8980106	0					
ANR	8980618	Identifier	stage		8980106	1					
ANR	8980619	PrimaryExpression	0		8980106	1					
ANR	8980620	BreakStatement	break ;	1590:16:52206:52211	8980106	22	True				
ANR	8980621	Label	case 4 :	1591:12:52225:52231	8980106	23	True				
ANR	8980622	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		8980106	24					
ANR	8980623	Condition	"! r_has_type ( op , t_boolean )"	1598:20:52652:52677	8980106	0	True				
ANR	8980624	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		8980106	0					
ANR	8980625	UnaryOperator	!		8980106	0					
ANR	8980626	CallExpression	"r_has_type ( op , t_boolean )"		8980106	1					
ANR	8980627	Callee	r_has_type		8980106	0					
ANR	8980628	Identifier	r_has_type		8980106	0					
ANR	8980629	ArgumentList	op		8980106	1					
ANR	8980630	Argument	op		8980106	0					
ANR	8980631	Identifier	op		8980106	0					
ANR	8980632	Argument	t_boolean		8980106	1					
ANR	8980633	Identifier	t_boolean		8980106	0					
ANR	8980634	ExpressionStatement	return_error ( gs_error_typecheck )	1599:20:52700:52732	8980106	1	True				
ANR	8980635	CallExpression	return_error ( gs_error_typecheck )		8980106	0					
ANR	8980636	Callee	return_error		8980106	0					
ANR	8980637	Identifier	return_error		8980106	0					
ANR	8980638	ArgumentList	gs_error_typecheck		8980106	1					
ANR	8980639	Argument	gs_error_typecheck		8980106	0					
ANR	8980640	Identifier	gs_error_typecheck		8980106	0					
ANR	8980641	ExpressionStatement	pop ( 1 )	1600:16:52750:52756	8980106	25	True				
ANR	8980642	CallExpression	pop ( 1 )		8980106	0					
ANR	8980643	Callee	pop		8980106	0					
ANR	8980644	Identifier	pop		8980106	0					
ANR	8980645	ArgumentList	1		8980106	1					
ANR	8980646	Argument	1		8980106	0					
ANR	8980647	PrimaryExpression	1		8980106	0					
ANR	8980648	ExpressionStatement	* stage = 1	1601:16:52774:52784	8980106	26	True				
ANR	8980649	AssignmentExpression	* stage = 1		8980106	0		=			
ANR	8980650	UnaryOperationExpression	* stage		8980106	0					
ANR	8980651	UnaryOperator	*		8980106	0					
ANR	8980652	Identifier	stage		8980106	1					
ANR	8980653	PrimaryExpression	1		8980106	1					
ANR	8980654	ExpressionStatement	* cont = 1	1602:16:52802:52811	8980106	27	True				
ANR	8980655	AssignmentExpression	* cont = 1		8980106	0		=			
ANR	8980656	UnaryOperationExpression	* cont		8980106	0					
ANR	8980657	UnaryOperator	*		8980106	0					
ANR	8980658	Identifier	cont		8980106	1					
ANR	8980659	PrimaryExpression	1		8980106	1					
ANR	8980660	IfStatement	if ( op -> value . boolval )		8980106	28					
ANR	8980661	Condition	op -> value . boolval	1603:20:52833:52849	8980106	0	True				
ANR	8980662	MemberAccess	op -> value . boolval		8980106	0					
ANR	8980663	PtrMemberAccess	op -> value		8980106	0					
ANR	8980664	Identifier	op		8980106	0					
ANR	8980665	Identifier	value		8980106	1					
ANR	8980666	Identifier	boolval		8980106	1					
ANR	8980667	CompoundStatement		103:39:4246:4246	8980106	1					
ANR	8980668	ExpressionStatement	* stage = 5	1604:20:52874:52884	8980106	0	True				
ANR	8980669	AssignmentExpression	* stage = 5		8980106	0		=			
ANR	8980670	UnaryOperationExpression	* stage		8980106	0					
ANR	8980671	UnaryOperator	*		8980106	0					
ANR	8980672	Identifier	stage		8980106	1					
ANR	8980673	PrimaryExpression	5		8980106	1					
ANR	8980674	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1605:20:52906:52943	8980106	1	True				
ANR	8980675	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		8980106	0		=			
ANR	8980676	Identifier	code		8980106	0					
ANR	8980677	CallExpression	setcolorspace_nosubst ( i_ctx_p )		8980106	1					
ANR	8980678	Callee	setcolorspace_nosubst		8980106	0					
ANR	8980679	Identifier	setcolorspace_nosubst		8980106	0					
ANR	8980680	ArgumentList	i_ctx_p		8980106	1					
ANR	8980681	Argument	i_ctx_p		8980106	0					
ANR	8980682	Identifier	i_ctx_p		8980106	0					
ANR	8980683	IfStatement	if ( code != 0 )		8980106	2					
ANR	8980684	Condition	code != 0	1606:24:52969:52977	8980106	0	True				
ANR	8980685	EqualityExpression	code != 0		8980106	0		!=			
ANR	8980686	Identifier	code		8980106	0					
ANR	8980687	PrimaryExpression	0		8980106	1					
ANR	8980688	ReturnStatement	return code ;	1607:24:53004:53015	8980106	1	True				
ANR	8980689	Identifier	code		8980106	0					
ANR	8980690	BreakStatement	break ;	1609:16:53051:53056	8980106	29	True				
ANR	8980691	Label	case 5 :	1610:12:53070:53076	8980106	30	True				
ANR	8980692	ExpressionStatement	* stage = 1	1615:16:53341:53351	8980106	31	True				
ANR	8980693	AssignmentExpression	* stage = 1		8980106	0		=			
ANR	8980694	UnaryOperationExpression	* stage		8980106	0					
ANR	8980695	UnaryOperator	*		8980106	0					
ANR	8980696	Identifier	stage		8980106	1					
ANR	8980697	PrimaryExpression	1		8980106	1					
ANR	8980698	ExpressionStatement	* cont = 1	1616:16:53369:53378	8980106	32	True				
ANR	8980699	AssignmentExpression	* cont = 1		8980106	0		=			
ANR	8980700	UnaryOperationExpression	* cont		8980106	0					
ANR	8980701	UnaryOperator	*		8980106	0					
ANR	8980702	Identifier	cont		8980106	1					
ANR	8980703	PrimaryExpression	1		8980106	1					
ANR	8980704	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1617:16:53396:53430	8980106	33	True				
ANR	8980705	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		8980106	0		=			
ANR	8980706	Identifier	code		8980106	0					
ANR	8980707	CallExpression	zincludecolorspace ( i_ctx_p )		8980106	1					
ANR	8980708	Callee	zincludecolorspace		8980106	0					
ANR	8980709	Identifier	zincludecolorspace		8980106	0					
ANR	8980710	ArgumentList	i_ctx_p		8980106	1					
ANR	8980711	Argument	i_ctx_p		8980106	0					
ANR	8980712	Identifier	i_ctx_p		8980106	0					
ANR	8980713	IfStatement	if ( code != 0 )		8980106	34					
ANR	8980714	Condition	code != 0	1618:20:53452:53460	8980106	0	True				
ANR	8980715	EqualityExpression	code != 0		8980106	0		!=			
ANR	8980716	Identifier	code		8980106	0					
ANR	8980717	PrimaryExpression	0		8980106	1					
ANR	8980718	ReturnStatement	return code ;	1619:20:53483:53494	8980106	1	True				
ANR	8980719	Identifier	code		8980106	0					
ANR	8980720	BreakStatement	break ;	1620:16:53512:53517	8980106	35	True				
ANR	8980721	Condition	* stage	1622:13:53542:53547	8980106	1	True				
ANR	8980722	UnaryOperationExpression	* stage		8980106	0					
ANR	8980723	UnaryOperator	*		8980106	0					
ANR	8980724	Identifier	stage		8980106	1					
ANR	8980725	ReturnStatement	return code ;	1623:4:53555:53566	8980106	5	True				
ANR	8980726	Identifier	code		8980106	0					
ANR	8980727	ReturnType	static int		8980106	1					
ANR	8980728	Identifier	setcmykspace		8980106	2					
ANR	8980729	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8980106	3					
ANR	8980730	Parameter	i_ctx_t * i_ctx_p	1500:24:48541:48557	8980106	0	True				
ANR	8980731	ParameterType	i_ctx_t *		8980106	0					
ANR	8980732	Identifier	i_ctx_p		8980106	1					
ANR	8980733	Parameter	ref * r	1500:43:48560:48565	8980106	1	True				
ANR	8980734	ParameterType	ref *		8980106	0					
ANR	8980735	Identifier	r		8980106	1					
ANR	8980736	Parameter	int * stage	1500:51:48568:48577	8980106	2	True				
ANR	8980737	ParameterType	int *		8980106	0					
ANR	8980738	Identifier	stage		8980106	1					
ANR	8980739	Parameter	int * cont	1500:63:48580:48588	8980106	3	True				
ANR	8980740	ParameterType	int *		8980106	0					
ANR	8980741	Identifier	cont		8980106	1					
ANR	8980742	Parameter	int CIESubst	1500:74:48591:48602	8980106	4	True				
ANR	8980743	ParameterType	int		8980106	0					
ANR	8980744	Identifier	CIESubst		8980106	1					
ANR	8980745	CFGEntryNode	ENTRY		8980106		True				
ANR	8980746	CFGExitNode	EXIT		8980106		True				
ANR	8980747	Symbol	esp		8980106						
ANR	8980748	Symbol	* op		8980106						
ANR	8980749	Symbol	pcc -> pattern		8980106						
ANR	8980750	Symbol	body		8980106						
ANR	8980751	Symbol	op -> value . boolval		8980106						
ANR	8980752	Symbol	osp		8980106						
ANR	8980753	Symbol	* istate		8980106						
ANR	8980754	Symbol	r_has_type		8980106						
ANR	8980755	Symbol	igs		8980106						
ANR	8980756	Symbol	pcc -> paint		8980106						
ANR	8980757	Symbol	stref		8980106						
ANR	8980758	Symbol	* pcc -> paint		8980106						
ANR	8980759	Symbol	imemory		8980106						
ANR	8980760	Symbol	cont		8980106						
ANR	8980761	Symbol	NULL		8980106						
ANR	8980762	Symbol	dict_find_string		8980106						
ANR	8980763	Symbol	* * pcc		8980106						
ANR	8980764	Symbol	istate -> use_cie_color . value		8980106						
ANR	8980765	Symbol	t_boolean		8980106						
ANR	8980766	Symbol	zincludecolorspace		8980106						
ANR	8980767	Symbol	i_ctx_p		8980106						
ANR	8980768	Symbol	& nosubst		8980106						
ANR	8980769	Symbol	a_executable		8980106						
ANR	8980770	Symbol	gs_currentcolor_inline		8980106						
ANR	8980771	Symbol	* pcc		8980106						
ANR	8980772	Symbol	systemdict		8980106						
ANR	8980773	Symbol	gs_cspace_new_DeviceCMYK		8980106						
ANR	8980774	Symbol	* pcc -> paint . values		8980106						
ANR	8980775	Symbol	a_all		8980106						
ANR	8980776	Symbol	code		8980106						
ANR	8980777	Symbol	* nosubst		8980106						
ANR	8980778	Symbol	& stref		8980106						
ANR	8980779	Symbol	gs_setcolorspace		8980106						
ANR	8980780	Symbol	istate -> use_cie_color . value . boolval		8980106						
ANR	8980781	Symbol	ialloc_string		8980106						
ANR	8980782	Symbol	pcc -> paint . values		8980106						
ANR	8980783	Symbol	pcc		8980106						
ANR	8980784	Symbol	gs_error_typecheck		8980106						
ANR	8980785	Symbol	op -> value		8980106						
ANR	8980786	Symbol	CIESubst		8980106						
ANR	8980787	Symbol	nosubst -> value . boolval		8980106						
ANR	8980788	Symbol	o_push_estack		8980106						
ANR	8980789	Symbol	op		8980106						
ANR	8980790	Symbol	pcs		8980106						
ANR	8980791	Symbol	nosubst		8980106						
ANR	8980792	Symbol	* stage		8980106						
ANR	8980793	Symbol	nosubst -> value		8980106						
ANR	8980794	Symbol	icurrent_space		8980106						
ANR	8980795	Symbol	gs_error_VMerror		8980106						
ANR	8980796	Symbol	r		8980106						
ANR	8980797	Symbol	stage		8980106						
ANR	8980798	Symbol	istate -> use_cie_color		8980106						
ANR	8980799	Symbol	* cont		8980106						
ANR	8980800	Symbol	setcolorspace_nosubst		8980106						
ANR	8980801	Symbol	istate		8980106						
ANR	8980802	Function	cmykdomain	1625:0:53570:53740							
ANR	8980803	FunctionDef	"cmykdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8980802	0					
ANR	8980804	CompoundStatement		1626:0:53635:53740	8980802	0					
ANR	8980805	IdentifierDeclStatement	int i ;	1627:4:53641:53646	8980802	0	True				
ANR	8980806	IdentifierDecl	i		8980802	0					
ANR	8980807	IdentifierDeclType	int		8980802	0					
ANR	8980808	Identifier	i		8980802	1					
ANR	8980809	ForStatement	for ( i = 0 ; i < 8 ; i += 2 )		8980802	1					
ANR	8980810	ForInit	i = 0 ;	1629:9:53658:53663	8980802	0	True				
ANR	8980811	AssignmentExpression	i = 0		8980802	0		=			
ANR	8980812	Identifier	i		8980802	0					
ANR	8980813	PrimaryExpression	0		8980802	1					
ANR	8980814	Condition	i < 8	1629:15:53664:53668	8980802	1	True				
ANR	8980815	RelationalExpression	i < 8		8980802	0		<			
ANR	8980816	Identifier	i		8980802	0					
ANR	8980817	PrimaryExpression	8		8980802	1					
ANR	8980818	AssignmentExpression	i += 2	1629:21:53670:53673	8980802	2	True	+=			
ANR	8980819	Identifier	i		8980802	0					
ANR	8980820	PrimaryExpression	2		8980802	1					
ANR	8980821	CompoundStatement		4:27:40:40	8980802	3					
ANR	8980822	ExpressionStatement	ptr [ i ] = 0	1630:8:53686:53696	8980802	0	True				
ANR	8980823	AssignmentExpression	ptr [ i ] = 0		8980802	0		=			
ANR	8980824	ArrayIndexing	ptr [ i ]		8980802	0					
ANR	8980825	Identifier	ptr		8980802	0					
ANR	8980826	Identifier	i		8980802	1					
ANR	8980827	PrimaryExpression	0		8980802	1					
ANR	8980828	ExpressionStatement	ptr [ i + 1 ] = 1	1631:8:53706:53718	8980802	1	True				
ANR	8980829	AssignmentExpression	ptr [ i + 1 ] = 1		8980802	0		=			
ANR	8980830	ArrayIndexing	ptr [ i + 1 ]		8980802	0					
ANR	8980831	Identifier	ptr		8980802	0					
ANR	8980832	AdditiveExpression	i + 1		8980802	1		+			
ANR	8980833	Identifier	i		8980802	0					
ANR	8980834	PrimaryExpression	1		8980802	1					
ANR	8980835	PrimaryExpression	1		8980802	1					
ANR	8980836	ReturnStatement	return 0 ;	1633:4:53730:53738	8980802	2	True				
ANR	8980837	PrimaryExpression	0		8980802	0					
ANR	8980838	ReturnType	static int		8980802	1					
ANR	8980839	Identifier	cmykdomain		8980802	2					
ANR	8980840	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8980802	3					
ANR	8980841	Parameter	i_ctx_t * i_ctx_p	1625:22:53592:53608	8980802	0	True				
ANR	8980842	ParameterType	i_ctx_t *		8980802	0					
ANR	8980843	Identifier	i_ctx_p		8980802	1					
ANR	8980844	Parameter	ref * space	1625:41:53611:53620	8980802	1	True				
ANR	8980845	ParameterType	ref *		8980802	0					
ANR	8980846	Identifier	space		8980802	1					
ANR	8980847	Parameter	float * ptr	1625:53:53623:53632	8980802	2	True				
ANR	8980848	ParameterType	float *		8980802	0					
ANR	8980849	Identifier	ptr		8980802	1					
ANR	8980850	CFGEntryNode	ENTRY		8980802		True				
ANR	8980851	CFGExitNode	EXIT		8980802		True				
ANR	8980852	Symbol	* i		8980802						
ANR	8980853	Symbol	i_ctx_p		8980802						
ANR	8980854	Symbol	* ptr		8980802						
ANR	8980855	Symbol	i		8980802						
ANR	8980856	Symbol	space		8980802						
ANR	8980857	Symbol	ptr		8980802						
ANR	8980858	Function	cmykrange	1635:0:53742:53911							
ANR	8980859	FunctionDef	"cmykrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8980858	0					
ANR	8980860	CompoundStatement		1636:0:53806:53911	8980858	0					
ANR	8980861	IdentifierDeclStatement	int i ;	1637:4:53812:53817	8980858	0	True				
ANR	8980862	IdentifierDecl	i		8980858	0					
ANR	8980863	IdentifierDeclType	int		8980858	0					
ANR	8980864	Identifier	i		8980858	1					
ANR	8980865	ForStatement	for ( i = 0 ; i < 8 ; i += 2 )		8980858	1					
ANR	8980866	ForInit	i = 0 ;	1639:9:53829:53834	8980858	0	True				
ANR	8980867	AssignmentExpression	i = 0		8980858	0		=			
ANR	8980868	Identifier	i		8980858	0					
ANR	8980869	PrimaryExpression	0		8980858	1					
ANR	8980870	Condition	i < 8	1639:15:53835:53839	8980858	1	True				
ANR	8980871	RelationalExpression	i < 8		8980858	0		<			
ANR	8980872	Identifier	i		8980858	0					
ANR	8980873	PrimaryExpression	8		8980858	1					
ANR	8980874	AssignmentExpression	i += 2	1639:21:53841:53844	8980858	2	True	+=			
ANR	8980875	Identifier	i		8980858	0					
ANR	8980876	PrimaryExpression	2		8980858	1					
ANR	8980877	CompoundStatement		4:27:40:40	8980858	3					
ANR	8980878	ExpressionStatement	ptr [ i ] = 0	1640:8:53857:53867	8980858	0	True				
ANR	8980879	AssignmentExpression	ptr [ i ] = 0		8980858	0		=			
ANR	8980880	ArrayIndexing	ptr [ i ]		8980858	0					
ANR	8980881	Identifier	ptr		8980858	0					
ANR	8980882	Identifier	i		8980858	1					
ANR	8980883	PrimaryExpression	0		8980858	1					
ANR	8980884	ExpressionStatement	ptr [ i + 1 ] = 1	1641:8:53877:53889	8980858	1	True				
ANR	8980885	AssignmentExpression	ptr [ i + 1 ] = 1		8980858	0		=			
ANR	8980886	ArrayIndexing	ptr [ i + 1 ]		8980858	0					
ANR	8980887	Identifier	ptr		8980858	0					
ANR	8980888	AdditiveExpression	i + 1		8980858	1		+			
ANR	8980889	Identifier	i		8980858	0					
ANR	8980890	PrimaryExpression	1		8980858	1					
ANR	8980891	PrimaryExpression	1		8980858	1					
ANR	8980892	ReturnStatement	return 0 ;	1643:4:53901:53909	8980858	2	True				
ANR	8980893	PrimaryExpression	0		8980858	0					
ANR	8980894	ReturnType	static int		8980858	1					
ANR	8980895	Identifier	cmykrange		8980858	2					
ANR	8980896	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8980858	3					
ANR	8980897	Parameter	i_ctx_t * i_ctx_p	1635:21:53763:53779	8980858	0	True				
ANR	8980898	ParameterType	i_ctx_t *		8980858	0					
ANR	8980899	Identifier	i_ctx_p		8980858	1					
ANR	8980900	Parameter	ref * space	1635:40:53782:53791	8980858	1	True				
ANR	8980901	ParameterType	ref *		8980858	0					
ANR	8980902	Identifier	space		8980858	1					
ANR	8980903	Parameter	float * ptr	1635:52:53794:53803	8980858	2	True				
ANR	8980904	ParameterType	float *		8980858	0					
ANR	8980905	Identifier	ptr		8980858	1					
ANR	8980906	CFGEntryNode	ENTRY		8980858		True				
ANR	8980907	CFGExitNode	EXIT		8980858		True				
ANR	8980908	Symbol	* i		8980858						
ANR	8980909	Symbol	i_ctx_p		8980858						
ANR	8980910	Symbol	* ptr		8980858						
ANR	8980911	Symbol	i		8980858						
ANR	8980912	Symbol	space		8980858						
ANR	8980913	Symbol	ptr		8980858						
ANR	8980914	Function	cmykbasecolor	1651:0:54272:56857							
ANR	8980915	FunctionDef	"cmykbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8980914	0					
ANR	8980916	CompoundStatement		1652:0:54379:56857	8980914	0					
ANR	8980917	IdentifierDeclStatement	os_ptr op = osp ;	1653:4:54385:54400	8980914	0	True				
ANR	8980918	IdentifierDecl	op = osp		8980914	0					
ANR	8980919	IdentifierDeclType	os_ptr		8980914	0					
ANR	8980920	Identifier	op		8980914	1					
ANR	8980921	AssignmentExpression	op = osp		8980914	2		=			
ANR	8980922	Identifier	osp		8980914	0					
ANR	8980923	Identifier	osp		8980914	1					
ANR	8980924	IdentifierDeclStatement	"float CMYK [ 4 ] , Gray , RGB [ 3 ] ;"	1654:4:54406:54433	8980914	1	True				
ANR	8980925	IdentifierDecl	CMYK [ 4 ]		8980914	0					
ANR	8980926	IdentifierDeclType	float [ 4 ]		8980914	0					
ANR	8980927	Identifier	CMYK		8980914	1					
ANR	8980928	PrimaryExpression	4		8980914	2					
ANR	8980929	IdentifierDecl	Gray		8980914	1					
ANR	8980930	IdentifierDeclType	float		8980914	0					
ANR	8980931	Identifier	Gray		8980914	1					
ANR	8980932	IdentifierDecl	RGB [ 3 ]		8980914	2					
ANR	8980933	IdentifierDeclType	float [ 3 ]		8980914	0					
ANR	8980934	Identifier	RGB		8980914	1					
ANR	8980935	PrimaryExpression	3		8980914	2					
ANR	8980936	IdentifierDeclStatement	int i ;	1655:4:54439:54444	8980914	2	True				
ANR	8980937	IdentifierDecl	i		8980914	0					
ANR	8980938	IdentifierDeclType	int		8980914	0					
ANR	8980939	Identifier	i		8980914	1					
ANR	8980940	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	1656:4:54450:54505	8980914	3	True				
ANR	8980941	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		8980914	0					
ANR	8980942	IdentifierDeclType	const gs_color_space *		8980914	0					
ANR	8980943	Identifier	pcs		8980914	1					
ANR	8980944	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		8980914	2		=			
ANR	8980945	Identifier	pcs		8980914	0					
ANR	8980946	CallExpression	gs_currentcolorspace ( igs )		8980914	1					
ANR	8980947	Callee	gs_currentcolorspace		8980914	0					
ANR	8980948	Identifier	gs_currentcolorspace		8980914	0					
ANR	8980949	ArgumentList	igs		8980914	1					
ANR	8980950	Argument	igs		8980914	0					
ANR	8980951	Identifier	igs		8980914	0					
ANR	8980952	IfStatement	if ( pcs -> id == cs_DeviceGray_id )		8980914	4					
ANR	8980953	Condition	pcs -> id == cs_DeviceGray_id	1658:8:54516:54542	8980914	0	True				
ANR	8980954	EqualityExpression	pcs -> id == cs_DeviceGray_id		8980914	0		==			
ANR	8980955	PtrMemberAccess	pcs -> id		8980914	0					
ANR	8980956	Identifier	pcs		8980914	0					
ANR	8980957	Identifier	id		8980914	1					
ANR	8980958	Identifier	cs_DeviceGray_id		8980914	1					
ANR	8980959	CompoundStatement		7:37:165:165	8980914	1					
ANR	8980960	ReturnStatement	"return ( graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth ) ) ;"	1668:8:55120:55189	8980914	0	True				
ANR	8980961	CallExpression	"graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth )"		8980914	0					
ANR	8980962	Callee	graybasecolor		8980914	0					
ANR	8980963	Identifier	graybasecolor		8980914	0					
ANR	8980964	ArgumentList	i_ctx_p		8980914	1					
ANR	8980965	Argument	i_ctx_p		8980914	0					
ANR	8980966	Identifier	i_ctx_p		8980914	0					
ANR	8980967	Argument	space		8980914	1					
ANR	8980968	Identifier	space		8980914	0					
ANR	8980969	Argument	base		8980914	2					
ANR	8980970	Identifier	base		8980914	0					
ANR	8980971	Argument	stage		8980914	3					
ANR	8980972	Identifier	stage		8980914	0					
ANR	8980973	Argument	cont		8980914	4					
ANR	8980974	Identifier	cont		8980914	0					
ANR	8980975	Argument	stack_depth		8980914	5					
ANR	8980976	Identifier	stack_depth		8980914	0					
ANR	8980977	ExpressionStatement	* cont = 0	1671:4:55202:55211	8980914	5	True				
ANR	8980978	AssignmentExpression	* cont = 0		8980914	0		=			
ANR	8980979	UnaryOperationExpression	* cont		8980914	0					
ANR	8980980	UnaryOperator	*		8980914	0					
ANR	8980981	Identifier	cont		8980914	1					
ANR	8980982	PrimaryExpression	0		8980914	1					
ANR	8980983	ExpressionStatement	* stage = 0	1672:4:55217:55227	8980914	6	True				
ANR	8980984	AssignmentExpression	* stage = 0		8980914	0		=			
ANR	8980985	UnaryOperationExpression	* stage		8980914	0					
ANR	8980986	UnaryOperator	*		8980914	0					
ANR	8980987	Identifier	stage		8980914	1					
ANR	8980988	PrimaryExpression	0		8980914	1					
ANR	8980989	ExpressionStatement	check_op ( 4 )	1673:4:55233:55244	8980914	7	True				
ANR	8980990	CallExpression	check_op ( 4 )		8980914	0					
ANR	8980991	Callee	check_op		8980914	0					
ANR	8980992	Identifier	check_op		8980914	0					
ANR	8980993	ArgumentList	4		8980914	1					
ANR	8980994	Argument	4		8980914	0					
ANR	8980995	PrimaryExpression	4		8980914	0					
ANR	8980996	ExpressionStatement	op -= 3	1674:4:55250:55257	8980914	8	True				
ANR	8980997	AssignmentExpression	op -= 3		8980914	0		-=			
ANR	8980998	Identifier	op		8980914	0					
ANR	8980999	PrimaryExpression	3		8980914	1					
ANR	8981000	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8980914	9					
ANR	8981001	ForInit	i = 0 ;	1675:9:55268:55271	8980914	0	True				
ANR	8981002	AssignmentExpression	i = 0		8980914	0		=			
ANR	8981003	Identifier	i		8980914	0					
ANR	8981004	PrimaryExpression	0		8980914	1					
ANR	8981005	Condition	i < 4	1675:13:55272:55274	8980914	1	True				
ANR	8981006	RelationalExpression	i < 4		8980914	0		<			
ANR	8981007	Identifier	i		8980914	0					
ANR	8981008	PrimaryExpression	4		8980914	1					
ANR	8981009	PostIncDecOperationExpression	i ++	1675:17:55276:55278	8980914	2	True				
ANR	8981010	Identifier	i		8980914	0					
ANR	8981011	IncDec	++		8980914	1					
ANR	8981012	CompoundStatement		24:22:901:901	8980914	3					
ANR	8981013	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		8980914	0					
ANR	8981014	Condition	"! r_has_type ( op , t_integer )"	1676:12:55295:55320	8980914	0	True				
ANR	8981015	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8980914	0					
ANR	8981016	UnaryOperator	!		8980914	0					
ANR	8981017	CallExpression	"r_has_type ( op , t_integer )"		8980914	1					
ANR	8981018	Callee	r_has_type		8980914	0					
ANR	8981019	Identifier	r_has_type		8980914	0					
ANR	8981020	ArgumentList	op		8980914	1					
ANR	8981021	Argument	op		8980914	0					
ANR	8981022	Identifier	op		8980914	0					
ANR	8981023	Argument	t_integer		8980914	1					
ANR	8981024	Identifier	t_integer		8980914	0					
ANR	8981025	CompoundStatement		25:40:943:943	8980914	1					
ANR	8981026	IfStatement	"if ( r_has_type ( op , t_real ) )"		8980914	0					
ANR	8981027	Condition	"r_has_type ( op , t_real )"	1677:16:55341:55362	8980914	0	True				
ANR	8981028	CallExpression	"r_has_type ( op , t_real )"		8980914	0					
ANR	8981029	Callee	r_has_type		8980914	0					
ANR	8981030	Identifier	r_has_type		8980914	0					
ANR	8981031	ArgumentList	op		8980914	1					
ANR	8981032	Argument	op		8980914	0					
ANR	8981033	Identifier	op		8980914	0					
ANR	8981034	Argument	t_real		8980914	1					
ANR	8981035	Identifier	t_real		8980914	0					
ANR	8981036	CompoundStatement		26:40:985:985	8980914	1					
ANR	8981037	ExpressionStatement	CMYK [ i ] = op -> value . realval	1678:16:55383:55410	8980914	0	True				
ANR	8981038	AssignmentExpression	CMYK [ i ] = op -> value . realval		8980914	0		=			
ANR	8981039	ArrayIndexing	CMYK [ i ]		8980914	0					
ANR	8981040	Identifier	CMYK		8980914	0					
ANR	8981041	Identifier	i		8980914	1					
ANR	8981042	MemberAccess	op -> value . realval		8980914	1					
ANR	8981043	PtrMemberAccess	op -> value		8980914	0					
ANR	8981044	Identifier	op		8980914	0					
ANR	8981045	Identifier	value		8980914	1					
ANR	8981046	Identifier	realval		8980914	1					
ANR	8981047	ElseStatement	else		8980914	0					
ANR	8981048	ExpressionStatement	return_error ( gs_error_typecheck )	1680:16:55447:55479	8980914	0	True				
ANR	8981049	CallExpression	return_error ( gs_error_typecheck )		8980914	0					
ANR	8981050	Callee	return_error		8980914	0					
ANR	8981051	Identifier	return_error		8980914	0					
ANR	8981052	ArgumentList	gs_error_typecheck		8980914	1					
ANR	8981053	Argument	gs_error_typecheck		8980914	0					
ANR	8981054	Identifier	gs_error_typecheck		8980914	0					
ANR	8981055	ElseStatement	else		8980914	0					
ANR	8981056	ExpressionStatement	CMYK [ i ] = ( float ) op -> value . intval	1682:12:55508:55541	8980914	0	True				
ANR	8981057	AssignmentExpression	CMYK [ i ] = ( float ) op -> value . intval		8980914	0		=			
ANR	8981058	ArrayIndexing	CMYK [ i ]		8980914	0					
ANR	8981059	Identifier	CMYK		8980914	0					
ANR	8981060	Identifier	i		8980914	1					
ANR	8981061	CastExpression	( float ) op -> value . intval		8980914	1					
ANR	8981062	CastTarget	float		8980914	0					
ANR	8981063	MemberAccess	op -> value . intval		8980914	1					
ANR	8981064	PtrMemberAccess	op -> value		8980914	0					
ANR	8981065	Identifier	op		8980914	0					
ANR	8981066	Identifier	value		8980914	1					
ANR	8981067	Identifier	intval		8980914	1					
ANR	8981068	IfStatement	if ( CMYK [ i ] < 0 || CMYK [ i ] > 1 )		8980914	1					
ANR	8981069	Condition	CMYK [ i ] < 0 || CMYK [ i ] > 1	1683:12:55555:55580	8980914	0	True				
ANR	8981070	OrExpression	CMYK [ i ] < 0 || CMYK [ i ] > 1		8980914	0		||			
ANR	8981071	RelationalExpression	CMYK [ i ] < 0		8980914	0		<			
ANR	8981072	ArrayIndexing	CMYK [ i ]		8980914	0					
ANR	8981073	Identifier	CMYK		8980914	0					
ANR	8981074	Identifier	i		8980914	1					
ANR	8981075	PrimaryExpression	0		8980914	1					
ANR	8981076	RelationalExpression	CMYK [ i ] > 1		8980914	1		>			
ANR	8981077	ArrayIndexing	CMYK [ i ]		8980914	0					
ANR	8981078	Identifier	CMYK		8980914	0					
ANR	8981079	Identifier	i		8980914	1					
ANR	8981080	PrimaryExpression	1		8980914	1					
ANR	8981081	ExpressionStatement	return_error ( gs_error_rangecheck )	1684:12:55595:55628	8980914	1	True				
ANR	8981082	CallExpression	return_error ( gs_error_rangecheck )		8980914	0					
ANR	8981083	Callee	return_error		8980914	0					
ANR	8981084	Identifier	return_error		8980914	0					
ANR	8981085	ArgumentList	gs_error_rangecheck		8980914	1					
ANR	8981086	Argument	gs_error_rangecheck		8980914	0					
ANR	8981087	Identifier	gs_error_rangecheck		8980914	0					
ANR	8981088	ExpressionStatement	op ++	1685:8:55638:55642	8980914	2	True				
ANR	8981089	PostIncDecOperationExpression	op ++		8980914	0					
ANR	8981090	Identifier	op		8980914	0					
ANR	8981091	IncDec	++		8980914	1					
ANR	8981092	SwitchStatement	switch ( base )		8980914	10					
ANR	8981093	Condition	base	1688:12:55663:55666	8980914	0	True				
ANR	8981094	Identifier	base		8980914	0					
ANR	8981095	CompoundStatement		37:18:1289:1289	8980914	1					
ANR	8981096	Label	case 0 :	1689:8:55679:55685	8980914	0	True				
ANR	8981097	ExpressionStatement	pop ( 3 )	1690:12:55699:55705	8980914	1	True				
ANR	8981098	CallExpression	pop ( 3 )		8980914	0					
ANR	8981099	Callee	pop		8980914	0					
ANR	8981100	Identifier	pop		8980914	0					
ANR	8981101	ArgumentList	3		8980914	1					
ANR	8981102	Argument	3		8980914	0					
ANR	8981103	PrimaryExpression	3		8980914	0					
ANR	8981104	ExpressionStatement	op = osp	1691:12:55719:55727	8980914	2	True				
ANR	8981105	AssignmentExpression	op = osp		8980914	0		=			
ANR	8981106	Identifier	op		8980914	0					
ANR	8981107	Identifier	osp		8980914	1					
ANR	8981108	ExpressionStatement	Gray = ( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]	1692:12:55741:55811	8980914	3	True				
ANR	8981109	AssignmentExpression	Gray = ( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		8980914	0		=			
ANR	8981110	Identifier	Gray		8980914	0					
ANR	8981111	AdditiveExpression	( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		8980914	1		+			
ANR	8981112	MultiplicativeExpression	0.3 * CMYK [ 0 ]		8980914	0		*			
ANR	8981113	PrimaryExpression	0.3		8980914	0					
ANR	8981114	ArrayIndexing	CMYK [ 0 ]		8980914	1					
ANR	8981115	Identifier	CMYK		8980914	0					
ANR	8981116	PrimaryExpression	0		8980914	1					
ANR	8981117	AdditiveExpression	( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		8980914	1		+			
ANR	8981118	MultiplicativeExpression	0.59 * CMYK [ 1 ]		8980914	0		*			
ANR	8981119	PrimaryExpression	0.59		8980914	0					
ANR	8981120	ArrayIndexing	CMYK [ 1 ]		8980914	1					
ANR	8981121	Identifier	CMYK		8980914	0					
ANR	8981122	PrimaryExpression	1		8980914	1					
ANR	8981123	AdditiveExpression	( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		8980914	1		+			
ANR	8981124	MultiplicativeExpression	0.11 * CMYK [ 2 ]		8980914	0		*			
ANR	8981125	PrimaryExpression	0.11		8980914	0					
ANR	8981126	ArrayIndexing	CMYK [ 2 ]		8980914	1					
ANR	8981127	Identifier	CMYK		8980914	0					
ANR	8981128	PrimaryExpression	2		8980914	1					
ANR	8981129	ArrayIndexing	CMYK [ 3 ]		8980914	1					
ANR	8981130	Identifier	CMYK		8980914	0					
ANR	8981131	PrimaryExpression	3		8980914	1					
ANR	8981132	IfStatement	if ( Gray > 1.0 )		8980914	4					
ANR	8981133	Condition	Gray > 1.0	1693:16:55829:55838	8980914	0	True				
ANR	8981134	RelationalExpression	Gray > 1.0		8980914	0		>			
ANR	8981135	Identifier	Gray		8980914	0					
ANR	8981136	PrimaryExpression	1.0		8980914	1					
ANR	8981137	ExpressionStatement	Gray = 0	1694:16:55857:55865	8980914	1	True				
ANR	8981138	AssignmentExpression	Gray = 0		8980914	0		=			
ANR	8981139	Identifier	Gray		8980914	0					
ANR	8981140	PrimaryExpression	0		8980914	1					
ANR	8981141	ElseStatement	else		8980914	0					
ANR	8981142	ExpressionStatement	Gray = 1.0 - Gray	1696:16:55900:55917	8980914	0	True				
ANR	8981143	AssignmentExpression	Gray = 1.0 - Gray		8980914	0		=			
ANR	8981144	Identifier	Gray		8980914	0					
ANR	8981145	AdditiveExpression	1.0 - Gray		8980914	1		-			
ANR	8981146	PrimaryExpression	1.0		8980914	0					
ANR	8981147	Identifier	Gray		8980914	1					
ANR	8981148	ExpressionStatement	"make_real ( op , Gray )"	1697:12:55931:55950	8980914	5	True				
ANR	8981149	CallExpression	"make_real ( op , Gray )"		8980914	0					
ANR	8981150	Callee	make_real		8980914	0					
ANR	8981151	Identifier	make_real		8980914	0					
ANR	8981152	ArgumentList	op		8980914	1					
ANR	8981153	Argument	op		8980914	0					
ANR	8981154	Identifier	op		8980914	0					
ANR	8981155	Argument	Gray		8980914	1					
ANR	8981156	Identifier	Gray		8980914	0					
ANR	8981157	BreakStatement	break ;	1698:12:55964:55969	8980914	6	True				
ANR	8981158	Label	case 1 :	1699:8:55979:55985	8980914	7	True				
ANR	8981159	Label	case 2 :	1700:8:55995:56001	8980914	8	True				
ANR	8981160	ExpressionStatement	pop ( 1 )	1701:12:56015:56021	8980914	9	True				
ANR	8981161	CallExpression	pop ( 1 )		8980914	0					
ANR	8981162	Callee	pop		8980914	0					
ANR	8981163	Identifier	pop		8980914	0					
ANR	8981164	ArgumentList	1		8980914	1					
ANR	8981165	Argument	1		8980914	0					
ANR	8981166	PrimaryExpression	1		8980914	0					
ANR	8981167	ExpressionStatement	op = osp	1702:12:56035:56043	8980914	10	True				
ANR	8981168	AssignmentExpression	op = osp		8980914	0		=			
ANR	8981169	Identifier	op		8980914	0					
ANR	8981170	Identifier	osp		8980914	1					
ANR	8981171	ExpressionStatement	RGB [ 0 ] = 1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )	1703:12:56057:56091	8980914	11	True				
ANR	8981172	AssignmentExpression	RGB [ 0 ] = 1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )		8980914	0		=			
ANR	8981173	ArrayIndexing	RGB [ 0 ]		8980914	0					
ANR	8981174	Identifier	RGB		8980914	0					
ANR	8981175	PrimaryExpression	0		8980914	1					
ANR	8981176	AdditiveExpression	1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )		8980914	1		-			
ANR	8981177	PrimaryExpression	1.0		8980914	0					
ANR	8981178	AdditiveExpression	CMYK [ 0 ] + CMYK [ 3 ]		8980914	1		+			
ANR	8981179	ArrayIndexing	CMYK [ 0 ]		8980914	0					
ANR	8981180	Identifier	CMYK		8980914	0					
ANR	8981181	PrimaryExpression	0		8980914	1					
ANR	8981182	ArrayIndexing	CMYK [ 3 ]		8980914	1					
ANR	8981183	Identifier	CMYK		8980914	0					
ANR	8981184	PrimaryExpression	3		8980914	1					
ANR	8981185	IfStatement	if ( RGB [ 0 ] < 0 )		8980914	12					
ANR	8981186	Condition	RGB [ 0 ] < 0	1704:16:56109:56118	8980914	0	True				
ANR	8981187	RelationalExpression	RGB [ 0 ] < 0		8980914	0		<			
ANR	8981188	ArrayIndexing	RGB [ 0 ]		8980914	0					
ANR	8981189	Identifier	RGB		8980914	0					
ANR	8981190	PrimaryExpression	0		8980914	1					
ANR	8981191	PrimaryExpression	0		8980914	1					
ANR	8981192	ExpressionStatement	RGB [ 0 ] = 0	1705:16:56137:56147	8980914	1	True				
ANR	8981193	AssignmentExpression	RGB [ 0 ] = 0		8980914	0		=			
ANR	8981194	ArrayIndexing	RGB [ 0 ]		8980914	0					
ANR	8981195	Identifier	RGB		8980914	0					
ANR	8981196	PrimaryExpression	0		8980914	1					
ANR	8981197	PrimaryExpression	0		8980914	1					
ANR	8981198	ExpressionStatement	RGB [ 1 ] = 1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )	1706:12:56161:56195	8980914	13	True				
ANR	8981199	AssignmentExpression	RGB [ 1 ] = 1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )		8980914	0		=			
ANR	8981200	ArrayIndexing	RGB [ 1 ]		8980914	0					
ANR	8981201	Identifier	RGB		8980914	0					
ANR	8981202	PrimaryExpression	1		8980914	1					
ANR	8981203	AdditiveExpression	1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )		8980914	1		-			
ANR	8981204	PrimaryExpression	1.0		8980914	0					
ANR	8981205	AdditiveExpression	CMYK [ 1 ] + CMYK [ 3 ]		8980914	1		+			
ANR	8981206	ArrayIndexing	CMYK [ 1 ]		8980914	0					
ANR	8981207	Identifier	CMYK		8980914	0					
ANR	8981208	PrimaryExpression	1		8980914	1					
ANR	8981209	ArrayIndexing	CMYK [ 3 ]		8980914	1					
ANR	8981210	Identifier	CMYK		8980914	0					
ANR	8981211	PrimaryExpression	3		8980914	1					
ANR	8981212	IfStatement	if ( RGB [ 1 ] < 0 )		8980914	14					
ANR	8981213	Condition	RGB [ 1 ] < 0	1707:16:56213:56222	8980914	0	True				
ANR	8981214	RelationalExpression	RGB [ 1 ] < 0		8980914	0		<			
ANR	8981215	ArrayIndexing	RGB [ 1 ]		8980914	0					
ANR	8981216	Identifier	RGB		8980914	0					
ANR	8981217	PrimaryExpression	1		8980914	1					
ANR	8981218	PrimaryExpression	0		8980914	1					
ANR	8981219	ExpressionStatement	RGB [ 1 ] = 0	1708:16:56241:56251	8980914	1	True				
ANR	8981220	AssignmentExpression	RGB [ 1 ] = 0		8980914	0		=			
ANR	8981221	ArrayIndexing	RGB [ 1 ]		8980914	0					
ANR	8981222	Identifier	RGB		8980914	0					
ANR	8981223	PrimaryExpression	1		8980914	1					
ANR	8981224	PrimaryExpression	0		8980914	1					
ANR	8981225	ExpressionStatement	RGB [ 2 ] = 1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )	1709:12:56265:56299	8980914	15	True				
ANR	8981226	AssignmentExpression	RGB [ 2 ] = 1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )		8980914	0		=			
ANR	8981227	ArrayIndexing	RGB [ 2 ]		8980914	0					
ANR	8981228	Identifier	RGB		8980914	0					
ANR	8981229	PrimaryExpression	2		8980914	1					
ANR	8981230	AdditiveExpression	1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )		8980914	1		-			
ANR	8981231	PrimaryExpression	1.0		8980914	0					
ANR	8981232	AdditiveExpression	CMYK [ 2 ] + CMYK [ 3 ]		8980914	1		+			
ANR	8981233	ArrayIndexing	CMYK [ 2 ]		8980914	0					
ANR	8981234	Identifier	CMYK		8980914	0					
ANR	8981235	PrimaryExpression	2		8980914	1					
ANR	8981236	ArrayIndexing	CMYK [ 3 ]		8980914	1					
ANR	8981237	Identifier	CMYK		8980914	0					
ANR	8981238	PrimaryExpression	3		8980914	1					
ANR	8981239	IfStatement	if ( RGB [ 2 ] < 0 )		8980914	16					
ANR	8981240	Condition	RGB [ 2 ] < 0	1710:16:56317:56326	8980914	0	True				
ANR	8981241	RelationalExpression	RGB [ 2 ] < 0		8980914	0		<			
ANR	8981242	ArrayIndexing	RGB [ 2 ]		8980914	0					
ANR	8981243	Identifier	RGB		8980914	0					
ANR	8981244	PrimaryExpression	2		8980914	1					
ANR	8981245	PrimaryExpression	0		8980914	1					
ANR	8981246	ExpressionStatement	RGB [ 2 ] = 0	1711:16:56345:56355	8980914	1	True				
ANR	8981247	AssignmentExpression	RGB [ 2 ] = 0		8980914	0		=			
ANR	8981248	ArrayIndexing	RGB [ 2 ]		8980914	0					
ANR	8981249	Identifier	RGB		8980914	0					
ANR	8981250	PrimaryExpression	2		8980914	1					
ANR	8981251	PrimaryExpression	0		8980914	1					
ANR	8981252	IfStatement	if ( base == 1 )		8980914	17					
ANR	8981253	Condition	base == 1	1712:16:56373:56381	8980914	0	True				
ANR	8981254	EqualityExpression	base == 1		8980914	0		==			
ANR	8981255	Identifier	base		8980914	0					
ANR	8981256	PrimaryExpression	1		8980914	1					
ANR	8981257	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1713:16:56400:56422	8980914	1	True				
ANR	8981258	CallExpression	rgb2hsb ( ( float * ) & RGB )		8980914	0					
ANR	8981259	Callee	rgb2hsb		8980914	0					
ANR	8981260	Identifier	rgb2hsb		8980914	0					
ANR	8981261	ArgumentList	( float * ) & RGB		8980914	1					
ANR	8981262	Argument	( float * ) & RGB		8980914	0					
ANR	8981263	CastExpression	( float * ) & RGB		8980914	0					
ANR	8981264	CastTarget	float *		8980914	0					
ANR	8981265	UnaryOperationExpression	& RGB		8980914	1					
ANR	8981266	UnaryOperator	&		8980914	0					
ANR	8981267	Identifier	RGB		8980914	1					
ANR	8981268	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1714:12:56436:56462	8980914	18	True				
ANR	8981269	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		8980914	0					
ANR	8981270	Callee	make_real		8980914	0					
ANR	8981271	Identifier	make_real		8980914	0					
ANR	8981272	ArgumentList	& op [ - 2 ]		8980914	1					
ANR	8981273	Argument	& op [ - 2 ]		8980914	0					
ANR	8981274	UnaryOperationExpression	& op [ - 2 ]		8980914	0					
ANR	8981275	UnaryOperator	&		8980914	0					
ANR	8981276	ArrayIndexing	op [ - 2 ]		8980914	1					
ANR	8981277	Identifier	op		8980914	0					
ANR	8981278	UnaryOperationExpression	- 2		8980914	1					
ANR	8981279	UnaryOperator	-		8980914	0					
ANR	8981280	PrimaryExpression	2		8980914	1					
ANR	8981281	Argument	RGB [ 0 ]		8980914	1					
ANR	8981282	ArrayIndexing	RGB [ 0 ]		8980914	0					
ANR	8981283	Identifier	RGB		8980914	0					
ANR	8981284	PrimaryExpression	0		8980914	1					
ANR	8981285	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1715:12:56476:56502	8980914	19	True				
ANR	8981286	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		8980914	0					
ANR	8981287	Callee	make_real		8980914	0					
ANR	8981288	Identifier	make_real		8980914	0					
ANR	8981289	ArgumentList	& op [ - 1 ]		8980914	1					
ANR	8981290	Argument	& op [ - 1 ]		8980914	0					
ANR	8981291	UnaryOperationExpression	& op [ - 1 ]		8980914	0					
ANR	8981292	UnaryOperator	&		8980914	0					
ANR	8981293	ArrayIndexing	op [ - 1 ]		8980914	1					
ANR	8981294	Identifier	op		8980914	0					
ANR	8981295	UnaryOperationExpression	- 1		8980914	1					
ANR	8981296	UnaryOperator	-		8980914	0					
ANR	8981297	PrimaryExpression	1		8980914	1					
ANR	8981298	Argument	RGB [ 1 ]		8980914	1					
ANR	8981299	ArrayIndexing	RGB [ 1 ]		8980914	0					
ANR	8981300	Identifier	RGB		8980914	0					
ANR	8981301	PrimaryExpression	1		8980914	1					
ANR	8981302	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1716:12:56516:56537	8980914	20	True				
ANR	8981303	CallExpression	"make_real ( op , RGB [ 2 ] )"		8980914	0					
ANR	8981304	Callee	make_real		8980914	0					
ANR	8981305	Identifier	make_real		8980914	0					
ANR	8981306	ArgumentList	op		8980914	1					
ANR	8981307	Argument	op		8980914	0					
ANR	8981308	Identifier	op		8980914	0					
ANR	8981309	Argument	RGB [ 2 ]		8980914	1					
ANR	8981310	ArrayIndexing	RGB [ 2 ]		8980914	0					
ANR	8981311	Identifier	RGB		8980914	0					
ANR	8981312	PrimaryExpression	2		8980914	1					
ANR	8981313	BreakStatement	break ;	1717:12:56551:56556	8980914	21	True				
ANR	8981314	Label	case 3 :	1718:8:56566:56572	8980914	22	True				
ANR	8981315	ExpressionStatement	op = osp	1719:12:56586:56594	8980914	23	True				
ANR	8981316	AssignmentExpression	op = osp		8980914	0		=			
ANR	8981317	Identifier	op		8980914	0					
ANR	8981318	Identifier	osp		8980914	1					
ANR	8981319	ExpressionStatement	"make_real ( & op [ - 3 ] , CMYK [ 0 ] )"	1720:12:56608:56635	8980914	24	True				
ANR	8981320	CallExpression	"make_real ( & op [ - 3 ] , CMYK [ 0 ] )"		8980914	0					
ANR	8981321	Callee	make_real		8980914	0					
ANR	8981322	Identifier	make_real		8980914	0					
ANR	8981323	ArgumentList	& op [ - 3 ]		8980914	1					
ANR	8981324	Argument	& op [ - 3 ]		8980914	0					
ANR	8981325	UnaryOperationExpression	& op [ - 3 ]		8980914	0					
ANR	8981326	UnaryOperator	&		8980914	0					
ANR	8981327	ArrayIndexing	op [ - 3 ]		8980914	1					
ANR	8981328	Identifier	op		8980914	0					
ANR	8981329	UnaryOperationExpression	- 3		8980914	1					
ANR	8981330	UnaryOperator	-		8980914	0					
ANR	8981331	PrimaryExpression	3		8980914	1					
ANR	8981332	Argument	CMYK [ 0 ]		8980914	1					
ANR	8981333	ArrayIndexing	CMYK [ 0 ]		8980914	0					
ANR	8981334	Identifier	CMYK		8980914	0					
ANR	8981335	PrimaryExpression	0		8980914	1					
ANR	8981336	ExpressionStatement	"make_real ( & op [ - 2 ] , CMYK [ 1 ] )"	1721:12:56649:56676	8980914	25	True				
ANR	8981337	CallExpression	"make_real ( & op [ - 2 ] , CMYK [ 1 ] )"		8980914	0					
ANR	8981338	Callee	make_real		8980914	0					
ANR	8981339	Identifier	make_real		8980914	0					
ANR	8981340	ArgumentList	& op [ - 2 ]		8980914	1					
ANR	8981341	Argument	& op [ - 2 ]		8980914	0					
ANR	8981342	UnaryOperationExpression	& op [ - 2 ]		8980914	0					
ANR	8981343	UnaryOperator	&		8980914	0					
ANR	8981344	ArrayIndexing	op [ - 2 ]		8980914	1					
ANR	8981345	Identifier	op		8980914	0					
ANR	8981346	UnaryOperationExpression	- 2		8980914	1					
ANR	8981347	UnaryOperator	-		8980914	0					
ANR	8981348	PrimaryExpression	2		8980914	1					
ANR	8981349	Argument	CMYK [ 1 ]		8980914	1					
ANR	8981350	ArrayIndexing	CMYK [ 1 ]		8980914	0					
ANR	8981351	Identifier	CMYK		8980914	0					
ANR	8981352	PrimaryExpression	1		8980914	1					
ANR	8981353	ExpressionStatement	"make_real ( & op [ - 1 ] , CMYK [ 2 ] )"	1722:12:56690:56717	8980914	26	True				
ANR	8981354	CallExpression	"make_real ( & op [ - 1 ] , CMYK [ 2 ] )"		8980914	0					
ANR	8981355	Callee	make_real		8980914	0					
ANR	8981356	Identifier	make_real		8980914	0					
ANR	8981357	ArgumentList	& op [ - 1 ]		8980914	1					
ANR	8981358	Argument	& op [ - 1 ]		8980914	0					
ANR	8981359	UnaryOperationExpression	& op [ - 1 ]		8980914	0					
ANR	8981360	UnaryOperator	&		8980914	0					
ANR	8981361	ArrayIndexing	op [ - 1 ]		8980914	1					
ANR	8981362	Identifier	op		8980914	0					
ANR	8981363	UnaryOperationExpression	- 1		8980914	1					
ANR	8981364	UnaryOperator	-		8980914	0					
ANR	8981365	PrimaryExpression	1		8980914	1					
ANR	8981366	Argument	CMYK [ 2 ]		8980914	1					
ANR	8981367	ArrayIndexing	CMYK [ 2 ]		8980914	0					
ANR	8981368	Identifier	CMYK		8980914	0					
ANR	8981369	PrimaryExpression	2		8980914	1					
ANR	8981370	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1723:12:56731:56753	8980914	27	True				
ANR	8981371	CallExpression	"make_real ( op , CMYK [ 3 ] )"		8980914	0					
ANR	8981372	Callee	make_real		8980914	0					
ANR	8981373	Identifier	make_real		8980914	0					
ANR	8981374	ArgumentList	op		8980914	1					
ANR	8981375	Argument	op		8980914	0					
ANR	8981376	Identifier	op		8980914	0					
ANR	8981377	Argument	CMYK [ 3 ]		8980914	1					
ANR	8981378	ArrayIndexing	CMYK [ 3 ]		8980914	0					
ANR	8981379	Identifier	CMYK		8980914	0					
ANR	8981380	PrimaryExpression	3		8980914	1					
ANR	8981381	BreakStatement	break ;	1724:12:56767:56772	8980914	28	True				
ANR	8981382	Label	default :	1725:8:56782:56789	8980914	29	True				
ANR	8981383	Identifier	default		8980914	0					
ANR	8981384	ExpressionStatement	return_error ( gs_error_undefined )	1726:12:56803:56835	8980914	30	True				
ANR	8981385	CallExpression	return_error ( gs_error_undefined )		8980914	0					
ANR	8981386	Callee	return_error		8980914	0					
ANR	8981387	Identifier	return_error		8980914	0					
ANR	8981388	ArgumentList	gs_error_undefined		8980914	1					
ANR	8981389	Argument	gs_error_undefined		8980914	0					
ANR	8981390	Identifier	gs_error_undefined		8980914	0					
ANR	8981391	ReturnStatement	return 0 ;	1728:4:56847:56855	8980914	11	True				
ANR	8981392	PrimaryExpression	0		8980914	0					
ANR	8981393	ReturnType	static int		8980914	1					
ANR	8981394	Identifier	cmykbasecolor		8980914	2					
ANR	8981395	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8980914	3					
ANR	8981396	Parameter	i_ctx_t * i_ctx_p	1651:25:54297:54313	8980914	0	True				
ANR	8981397	ParameterType	i_ctx_t *		8980914	0					
ANR	8981398	Identifier	i_ctx_p		8980914	1					
ANR	8981399	Parameter	ref * space	1651:44:54316:54325	8980914	1	True				
ANR	8981400	ParameterType	ref *		8980914	0					
ANR	8981401	Identifier	space		8980914	1					
ANR	8981402	Parameter	int base	1651:56:54328:54335	8980914	2	True				
ANR	8981403	ParameterType	int		8980914	0					
ANR	8981404	Identifier	base		8980914	1					
ANR	8981405	Parameter	int * stage	1651:66:54338:54347	8980914	3	True				
ANR	8981406	ParameterType	int *		8980914	0					
ANR	8981407	Identifier	stage		8980914	1					
ANR	8981408	Parameter	int * cont	1651:78:54350:54358	8980914	4	True				
ANR	8981409	ParameterType	int *		8980914	0					
ANR	8981410	Identifier	cont		8980914	1					
ANR	8981411	Parameter	int * stack_depth	1651:89:54361:54376	8980914	5	True				
ANR	8981412	ParameterType	int *		8980914	0					
ANR	8981413	Identifier	stack_depth		8980914	1					
ANR	8981414	CFGEntryNode	ENTRY		8980914		True				
ANR	8981415	CFGExitNode	EXIT		8980914		True				
ANR	8981416	Symbol	stack_depth		8980914						
ANR	8981417	Symbol	* op		8980914						
ANR	8981418	Symbol	gs_error_rangecheck		8980914						
ANR	8981419	Symbol	gs_error_undefined		8980914						
ANR	8981420	Symbol	pcs -> id		8980914						
ANR	8981421	Symbol	* pcs		8980914						
ANR	8981422	Symbol	op -> value . realval		8980914						
ANR	8981423	Symbol	graybasecolor		8980914						
ANR	8981424	Symbol	osp		8980914						
ANR	8981425	Symbol	space		8980914						
ANR	8981426	Symbol	r_has_type		8980914						
ANR	8981427	Symbol	gs_error_typecheck		8980914						
ANR	8981428	Symbol	igs		8980914						
ANR	8981429	Symbol	& RGB		8980914						
ANR	8981430	Symbol	gs_currentcolorspace		8980914						
ANR	8981431	Symbol	op -> value		8980914						
ANR	8981432	Symbol	cont		8980914						
ANR	8981433	Symbol	op		8980914						
ANR	8981434	Symbol	pcs		8980914						
ANR	8981435	Symbol	Gray		8980914						
ANR	8981436	Symbol	CMYK		8980914						
ANR	8981437	Symbol	* stage		8980914						
ANR	8981438	Symbol	cs_DeviceGray_id		8980914						
ANR	8981439	Symbol	* RGB		8980914						
ANR	8981440	Symbol	i		8980914						
ANR	8981441	Symbol	t_real		8980914						
ANR	8981442	Symbol	RGB		8980914						
ANR	8981443	Symbol	* i		8980914						
ANR	8981444	Symbol	stage		8980914						
ANR	8981445	Symbol	t_integer		8980914						
ANR	8981446	Symbol	* cont		8980914						
ANR	8981447	Symbol	i_ctx_p		8980914						
ANR	8981448	Symbol	* CMYK		8980914						
ANR	8981449	Symbol	op -> value . intval		8980914						
ANR	8981450	Symbol	base		8980914						
ANR	8981451	Function	cmykvalidate	1730:0:56859:57387							
ANR	8981452	FunctionDef	"cmykvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8981451	0					
ANR	8981453	CompoundStatement		1731:0:56943:57387	8981451	0					
ANR	8981454	IdentifierDeclStatement	os_ptr op = osp ;	1732:4:56949:56964	8981451	0	True				
ANR	8981455	IdentifierDecl	op = osp		8981451	0					
ANR	8981456	IdentifierDeclType	os_ptr		8981451	0					
ANR	8981457	Identifier	op		8981451	1					
ANR	8981458	AssignmentExpression	op = osp		8981451	2		=			
ANR	8981459	Identifier	osp		8981451	0					
ANR	8981460	Identifier	osp		8981451	1					
ANR	8981461	IdentifierDeclStatement	int i ;	1733:4:56970:56975	8981451	1	True				
ANR	8981462	IdentifierDecl	i		8981451	0					
ANR	8981463	IdentifierDeclType	int		8981451	0					
ANR	8981464	Identifier	i		8981451	1					
ANR	8981465	IfStatement	if ( num_comps < 4 )		8981451	2					
ANR	8981466	Condition	num_comps < 4	1735:8:56986:56998	8981451	0	True				
ANR	8981467	RelationalExpression	num_comps < 4		8981451	0		<			
ANR	8981468	Identifier	num_comps		8981451	0					
ANR	8981469	PrimaryExpression	4		8981451	1					
ANR	8981470	ExpressionStatement	return_error ( gs_error_stackunderflow )	1736:8:57009:57046	8981451	1	True				
ANR	8981471	CallExpression	return_error ( gs_error_stackunderflow )		8981451	0					
ANR	8981472	Callee	return_error		8981451	0					
ANR	8981473	Identifier	return_error		8981451	0					
ANR	8981474	ArgumentList	gs_error_stackunderflow		8981451	1					
ANR	8981475	Argument	gs_error_stackunderflow		8981451	0					
ANR	8981476	Identifier	gs_error_stackunderflow		8981451	0					
ANR	8981477	ExpressionStatement	op -= 3	1738:4:57053:57060	8981451	3	True				
ANR	8981478	AssignmentExpression	op -= 3		8981451	0		-=			
ANR	8981479	Identifier	op		8981451	0					
ANR	8981480	PrimaryExpression	3		8981451	1					
ANR	8981481	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8981451	4					
ANR	8981482	ForInit	i = 0 ;	1739:9:57071:57074	8981451	0	True				
ANR	8981483	AssignmentExpression	i = 0		8981451	0		=			
ANR	8981484	Identifier	i		8981451	0					
ANR	8981485	PrimaryExpression	0		8981451	1					
ANR	8981486	Condition	i < 4	1739:13:57075:57079	8981451	1	True				
ANR	8981487	RelationalExpression	i < 4		8981451	0		<			
ANR	8981488	Identifier	i		8981451	0					
ANR	8981489	PrimaryExpression	4		8981451	1					
ANR	8981490	PostIncDecOperationExpression	i ++	1739:19:57081:57083	8981451	2	True				
ANR	8981491	Identifier	i		8981451	0					
ANR	8981492	IncDec	++		8981451	1					
ANR	8981493	CompoundStatement		9:24:142:142	8981451	3					
ANR	8981494	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8981451	0					
ANR	8981495	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1740:12:57100:57152	8981451	0	True				
ANR	8981496	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8981451	0		&&			
ANR	8981497	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8981451	0					
ANR	8981498	UnaryOperator	!		8981451	0					
ANR	8981499	CallExpression	"r_has_type ( op , t_integer )"		8981451	1					
ANR	8981500	Callee	r_has_type		8981451	0					
ANR	8981501	Identifier	r_has_type		8981451	0					
ANR	8981502	ArgumentList	op		8981451	1					
ANR	8981503	Argument	op		8981451	0					
ANR	8981504	Identifier	op		8981451	0					
ANR	8981505	Argument	t_integer		8981451	1					
ANR	8981506	Identifier	t_integer		8981451	0					
ANR	8981507	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8981451	1					
ANR	8981508	UnaryOperator	!		8981451	0					
ANR	8981509	CallExpression	"r_has_type ( op , t_real )"		8981451	1					
ANR	8981510	Callee	r_has_type		8981451	0					
ANR	8981511	Identifier	r_has_type		8981451	0					
ANR	8981512	ArgumentList	op		8981451	1					
ANR	8981513	Argument	op		8981451	0					
ANR	8981514	Identifier	op		8981451	0					
ANR	8981515	Argument	t_real		8981451	1					
ANR	8981516	Identifier	t_real		8981451	0					
ANR	8981517	ExpressionStatement	return_error ( gs_error_typecheck )	1741:12:57167:57199	8981451	1	True				
ANR	8981518	CallExpression	return_error ( gs_error_typecheck )		8981451	0					
ANR	8981519	Callee	return_error		8981451	0					
ANR	8981520	Identifier	return_error		8981451	0					
ANR	8981521	ArgumentList	gs_error_typecheck		8981451	1					
ANR	8981522	Argument	gs_error_typecheck		8981451	0					
ANR	8981523	Identifier	gs_error_typecheck		8981451	0					
ANR	8981524	ExpressionStatement	op ++	1742:8:57209:57213	8981451	1	True				
ANR	8981525	PostIncDecOperationExpression	op ++		8981451	0					
ANR	8981526	Identifier	op		8981451	0					
ANR	8981527	IncDec	++		8981451	1					
ANR	8981528	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8981451	5					
ANR	8981529	ForInit	i = 0 ;	1745:9:57231:57234	8981451	0	True				
ANR	8981530	AssignmentExpression	i = 0		8981451	0		=			
ANR	8981531	Identifier	i		8981451	0					
ANR	8981532	PrimaryExpression	0		8981451	1					
ANR	8981533	Condition	i < 4	1745:13:57235:57239	8981451	1	True				
ANR	8981534	RelationalExpression	i < 4		8981451	0		<			
ANR	8981535	Identifier	i		8981451	0					
ANR	8981536	PrimaryExpression	4		8981451	1					
ANR	8981537	PostIncDecOperationExpression	i ++	1745:20:57242:57244	8981451	2	True				
ANR	8981538	Identifier	i		8981451	0					
ANR	8981539	IncDec	++		8981451	1					
ANR	8981540	CompoundStatement		15:25:303:303	8981451	3					
ANR	8981541	IfStatement	if ( values [ i ] > 1.0 )		8981451	0					
ANR	8981542	Condition	values [ i ] > 1.0	1746:12:57261:57275	8981451	0	True				
ANR	8981543	RelationalExpression	values [ i ] > 1.0		8981451	0		>			
ANR	8981544	ArrayIndexing	values [ i ]		8981451	0					
ANR	8981545	Identifier	values		8981451	0					
ANR	8981546	Identifier	i		8981451	1					
ANR	8981547	PrimaryExpression	1.0		8981451	1					
ANR	8981548	ExpressionStatement	values [ i ] = 1.0	1747:12:57290:57305	8981451	1	True				
ANR	8981549	AssignmentExpression	values [ i ] = 1.0		8981451	0		=			
ANR	8981550	ArrayIndexing	values [ i ]		8981451	0					
ANR	8981551	Identifier	values		8981451	0					
ANR	8981552	Identifier	i		8981451	1					
ANR	8981553	PrimaryExpression	1.0		8981451	1					
ANR	8981554	IfStatement	if ( values [ i ] < 0.0 )		8981451	1					
ANR	8981555	Condition	values [ i ] < 0.0	1749:12:57320:57334	8981451	0	True				
ANR	8981556	RelationalExpression	values [ i ] < 0.0		8981451	0		<			
ANR	8981557	ArrayIndexing	values [ i ]		8981451	0					
ANR	8981558	Identifier	values		8981451	0					
ANR	8981559	Identifier	i		8981451	1					
ANR	8981560	PrimaryExpression	0.0		8981451	1					
ANR	8981561	ExpressionStatement	values [ i ] = 0.0	1750:12:57349:57364	8981451	1	True				
ANR	8981562	AssignmentExpression	values [ i ] = 0.0		8981451	0		=			
ANR	8981563	ArrayIndexing	values [ i ]		8981451	0					
ANR	8981564	Identifier	values		8981451	0					
ANR	8981565	Identifier	i		8981451	1					
ANR	8981566	PrimaryExpression	0.0		8981451	1					
ANR	8981567	ReturnStatement	return 0 ;	1753:4:57377:57385	8981451	6	True				
ANR	8981568	PrimaryExpression	0		8981451	0					
ANR	8981569	ReturnType	static int		8981451	1					
ANR	8981570	Identifier	cmykvalidate		8981451	2					
ANR	8981571	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8981451	3					
ANR	8981572	Parameter	i_ctx_t * i_ctx_p	1730:24:56883:56898	8981451	0	True				
ANR	8981573	ParameterType	i_ctx_t *		8981451	0					
ANR	8981574	Identifier	i_ctx_p		8981451	1					
ANR	8981575	Parameter	ref * space	1730:42:56901:56910	8981451	1	True				
ANR	8981576	ParameterType	ref *		8981451	0					
ANR	8981577	Identifier	space		8981451	1					
ANR	8981578	Parameter	float * values	1730:54:56913:56925	8981451	2	True				
ANR	8981579	ParameterType	float *		8981451	0					
ANR	8981580	Identifier	values		8981451	1					
ANR	8981581	Parameter	int num_comps	1730:69:56928:56940	8981451	3	True				
ANR	8981582	ParameterType	int		8981451	0					
ANR	8981583	Identifier	num_comps		8981451	1					
ANR	8981584	CFGEntryNode	ENTRY		8981451		True				
ANR	8981585	CFGExitNode	EXIT		8981451		True				
ANR	8981586	Symbol	op		8981451						
ANR	8981587	Symbol	* values		8981451						
ANR	8981588	Symbol	values		8981451						
ANR	8981589	Symbol	i		8981451						
ANR	8981590	Symbol	t_real		8981451						
ANR	8981591	Symbol	osp		8981451						
ANR	8981592	Symbol	space		8981451						
ANR	8981593	Symbol	r_has_type		8981451						
ANR	8981594	Symbol	gs_error_typecheck		8981451						
ANR	8981595	Symbol	* i		8981451						
ANR	8981596	Symbol	t_integer		8981451						
ANR	8981597	Symbol	gs_error_stackunderflow		8981451						
ANR	8981598	Symbol	i_ctx_p		8981451						
ANR	8981599	Symbol	num_comps		8981451						
ANR	8981600	Function	cmykinitialproc	1755:0:57389:57642							
ANR	8981601	FunctionDef	"cmykinitialproc (i_ctx_t * i_ctx_p , ref * space)"		8981600	0					
ANR	8981602	CompoundStatement		1756:0:57446:57642	8981600	0					
ANR	8981603	IdentifierDeclStatement	gs_client_color cc ;	1757:4:57452:57470	8981600	0	True				
ANR	8981604	IdentifierDecl	cc		8981600	0					
ANR	8981605	IdentifierDeclType	gs_client_color		8981600	0					
ANR	8981606	Identifier	cc		8981600	1					
ANR	8981607	ExpressionStatement	cc . pattern = 0x00	1759:4:57477:57494	8981600	1	True				
ANR	8981608	AssignmentExpression	cc . pattern = 0x00		8981600	0		=			
ANR	8981609	MemberAccess	cc . pattern		8981600	0					
ANR	8981610	Identifier	cc		8981600	0					
ANR	8981611	Identifier	pattern		8981600	1					
ANR	8981612	PrimaryExpression	0x00		8981600	1					
ANR	8981613	ExpressionStatement	cc . paint . values [ 0 ] = 0	1760:4:57500:57522	8981600	2	True				
ANR	8981614	AssignmentExpression	cc . paint . values [ 0 ] = 0		8981600	0		=			
ANR	8981615	ArrayIndexing	cc . paint . values [ 0 ]		8981600	0					
ANR	8981616	MemberAccess	cc . paint . values		8981600	0					
ANR	8981617	MemberAccess	cc . paint		8981600	0					
ANR	8981618	Identifier	cc		8981600	0					
ANR	8981619	Identifier	paint		8981600	1					
ANR	8981620	Identifier	values		8981600	1					
ANR	8981621	PrimaryExpression	0		8981600	1					
ANR	8981622	PrimaryExpression	0		8981600	1					
ANR	8981623	ExpressionStatement	cc . paint . values [ 1 ] = 0	1761:4:57528:57550	8981600	3	True				
ANR	8981624	AssignmentExpression	cc . paint . values [ 1 ] = 0		8981600	0		=			
ANR	8981625	ArrayIndexing	cc . paint . values [ 1 ]		8981600	0					
ANR	8981626	MemberAccess	cc . paint . values		8981600	0					
ANR	8981627	MemberAccess	cc . paint		8981600	0					
ANR	8981628	Identifier	cc		8981600	0					
ANR	8981629	Identifier	paint		8981600	1					
ANR	8981630	Identifier	values		8981600	1					
ANR	8981631	PrimaryExpression	1		8981600	1					
ANR	8981632	PrimaryExpression	0		8981600	1					
ANR	8981633	ExpressionStatement	cc . paint . values [ 2 ] = 0	1762:4:57556:57578	8981600	4	True				
ANR	8981634	AssignmentExpression	cc . paint . values [ 2 ] = 0		8981600	0		=			
ANR	8981635	ArrayIndexing	cc . paint . values [ 2 ]		8981600	0					
ANR	8981636	MemberAccess	cc . paint . values		8981600	0					
ANR	8981637	MemberAccess	cc . paint		8981600	0					
ANR	8981638	Identifier	cc		8981600	0					
ANR	8981639	Identifier	paint		8981600	1					
ANR	8981640	Identifier	values		8981600	1					
ANR	8981641	PrimaryExpression	2		8981600	1					
ANR	8981642	PrimaryExpression	0		8981600	1					
ANR	8981643	ExpressionStatement	cc . paint . values [ 3 ] = 1	1763:4:57584:57606	8981600	5	True				
ANR	8981644	AssignmentExpression	cc . paint . values [ 3 ] = 1		8981600	0		=			
ANR	8981645	ArrayIndexing	cc . paint . values [ 3 ]		8981600	0					
ANR	8981646	MemberAccess	cc . paint . values		8981600	0					
ANR	8981647	MemberAccess	cc . paint		8981600	0					
ANR	8981648	Identifier	cc		8981600	0					
ANR	8981649	Identifier	paint		8981600	1					
ANR	8981650	Identifier	values		8981600	1					
ANR	8981651	PrimaryExpression	3		8981600	1					
ANR	8981652	PrimaryExpression	1		8981600	1					
ANR	8981653	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1764:4:57612:57640	8981600	6	True				
ANR	8981654	CallExpression	"gs_setcolor ( igs , & cc )"		8981600	0					
ANR	8981655	Callee	gs_setcolor		8981600	0					
ANR	8981656	Identifier	gs_setcolor		8981600	0					
ANR	8981657	ArgumentList	igs		8981600	1					
ANR	8981658	Argument	igs		8981600	0					
ANR	8981659	Identifier	igs		8981600	0					
ANR	8981660	Argument	& cc		8981600	1					
ANR	8981661	UnaryOperationExpression	& cc		8981600	0					
ANR	8981662	UnaryOperator	&		8981600	0					
ANR	8981663	Identifier	cc		8981600	1					
ANR	8981664	ReturnType	static int		8981600	1					
ANR	8981665	Identifier	cmykinitialproc		8981600	2					
ANR	8981666	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		8981600	3					
ANR	8981667	Parameter	i_ctx_t * i_ctx_p	1755:27:57416:57431	8981600	0	True				
ANR	8981668	ParameterType	i_ctx_t *		8981600	0					
ANR	8981669	Identifier	i_ctx_p		8981600	1					
ANR	8981670	Parameter	ref * space	1755:45:57434:57443	8981600	1	True				
ANR	8981671	ParameterType	ref *		8981600	0					
ANR	8981672	Identifier	space		8981600	1					
ANR	8981673	CFGEntryNode	ENTRY		8981600		True				
ANR	8981674	CFGExitNode	EXIT		8981600		True				
ANR	8981675	Symbol	cc		8981600						
ANR	8981676	Symbol	cc . pattern		8981600						
ANR	8981677	Symbol	* cc . paint		8981600						
ANR	8981678	Symbol	igs		8981600						
ANR	8981679	Symbol	* cc . paint . values		8981600						
ANR	8981680	Symbol	* cc		8981600						
ANR	8981681	Symbol	i_ctx_p		8981600						
ANR	8981682	Symbol	cc . paint		8981600						
ANR	8981683	Symbol	gs_setcolor		8981600						
ANR	8981684	Symbol	& cc		8981600						
ANR	8981685	Symbol	cc . paint . values		8981600						
ANR	8981686	Symbol	space		8981600						
ANR	8981687	Function	comparearrays	1772:0:57860:60251							
ANR	8981688	FunctionDef	"comparearrays (i_ctx_t * i_ctx_p , ref * m1 , ref * m2)"		8981687	0					
ANR	8981689	CompoundStatement		1773:0:57922:60251	8981687	0					
ANR	8981690	IdentifierDeclStatement	"int i , code ;"	1774:4:57928:57939	8981687	0	True				
ANR	8981691	IdentifierDecl	i		8981687	0					
ANR	8981692	IdentifierDeclType	int		8981687	0					
ANR	8981693	Identifier	i		8981687	1					
ANR	8981694	IdentifierDecl	code		8981687	1					
ANR	8981695	IdentifierDeclType	int		8981687	0					
ANR	8981696	Identifier	code		8981687	1					
ANR	8981697	IdentifierDeclStatement	"ref ref1 , ref2 ;"	1775:4:57945:57959	8981687	1	True				
ANR	8981698	IdentifierDecl	ref1		8981687	0					
ANR	8981699	IdentifierDeclType	ref		8981687	0					
ANR	8981700	Identifier	ref1		8981687	1					
ANR	8981701	IdentifierDecl	ref2		8981687	1					
ANR	8981702	IdentifierDeclType	ref		8981687	0					
ANR	8981703	Identifier	ref2		8981687	1					
ANR	8981704	IfStatement	if ( r_size ( m1 ) != r_size ( m2 ) )		8981687	2					
ANR	8981705	Condition	r_size ( m1 ) != r_size ( m2 )	1777:8:57970:57993	8981687	0	True				
ANR	8981706	EqualityExpression	r_size ( m1 ) != r_size ( m2 )		8981687	0		!=			
ANR	8981707	CallExpression	r_size ( m1 )		8981687	0					
ANR	8981708	Callee	r_size		8981687	0					
ANR	8981709	Identifier	r_size		8981687	0					
ANR	8981710	ArgumentList	m1		8981687	1					
ANR	8981711	Argument	m1		8981687	0					
ANR	8981712	Identifier	m1		8981687	0					
ANR	8981713	CallExpression	r_size ( m2 )		8981687	1					
ANR	8981714	Callee	r_size		8981687	0					
ANR	8981715	Identifier	r_size		8981687	0					
ANR	8981716	ArgumentList	m2		8981687	1					
ANR	8981717	Argument	m2		8981687	0					
ANR	8981718	Identifier	m2		8981687	0					
ANR	8981719	ReturnStatement	return 0 ;	1778:8:58004:58012	8981687	1	True				
ANR	8981720	PrimaryExpression	0		8981687	0					
ANR	8981721	ForStatement	for ( i = 0 ; i < r_size ( m1 ) ; i ++ )		8981687	3					
ANR	8981722	ForInit	i = 0 ;	1780:9:58024:58027	8981687	0	True				
ANR	8981723	AssignmentExpression	i = 0		8981687	0		=			
ANR	8981724	Identifier	i		8981687	0					
ANR	8981725	PrimaryExpression	0		8981687	1					
ANR	8981726	Condition	i < r_size ( m1 )	1780:13:58028:58041	8981687	1	True				
ANR	8981727	RelationalExpression	i < r_size ( m1 )		8981687	0		<			
ANR	8981728	Identifier	i		8981687	0					
ANR	8981729	CallExpression	r_size ( m1 )		8981687	1					
ANR	8981730	Callee	r_size		8981687	0					
ANR	8981731	Identifier	r_size		8981687	0					
ANR	8981732	ArgumentList	m1		8981687	1					
ANR	8981733	Argument	m1		8981687	0					
ANR	8981734	Identifier	m1		8981687	0					
ANR	8981735	PostIncDecOperationExpression	i ++	1780:28:58043:58045	8981687	2	True				
ANR	8981736	Identifier	i		8981687	0					
ANR	8981737	IncDec	++		8981687	1					
ANR	8981738	CompoundStatement		8:33:125:125	8981687	3					
ANR	8981739	ExpressionStatement	"code = array_get ( imemory , m1 , i , & ref1 )"	1781:8:58058:58097	8981687	0	True				
ANR	8981740	AssignmentExpression	"code = array_get ( imemory , m1 , i , & ref1 )"		8981687	0		=			
ANR	8981741	Identifier	code		8981687	0					
ANR	8981742	CallExpression	"array_get ( imemory , m1 , i , & ref1 )"		8981687	1					
ANR	8981743	Callee	array_get		8981687	0					
ANR	8981744	Identifier	array_get		8981687	0					
ANR	8981745	ArgumentList	imemory		8981687	1					
ANR	8981746	Argument	imemory		8981687	0					
ANR	8981747	Identifier	imemory		8981687	0					
ANR	8981748	Argument	m1		8981687	1					
ANR	8981749	Identifier	m1		8981687	0					
ANR	8981750	Argument	i		8981687	2					
ANR	8981751	Identifier	i		8981687	0					
ANR	8981752	Argument	& ref1		8981687	3					
ANR	8981753	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981754	UnaryOperator	&		8981687	0					
ANR	8981755	Identifier	ref1		8981687	1					
ANR	8981756	IfStatement	if ( code < 0 )		8981687	1					
ANR	8981757	Condition	code < 0	1782:12:58111:58118	8981687	0	True				
ANR	8981758	RelationalExpression	code < 0		8981687	0		<			
ANR	8981759	Identifier	code		8981687	0					
ANR	8981760	PrimaryExpression	0		8981687	1					
ANR	8981761	ReturnStatement	return 0 ;	1783:12:58133:58141	8981687	1	True				
ANR	8981762	PrimaryExpression	0		8981687	0					
ANR	8981763	ExpressionStatement	"code = array_get ( imemory , m2 , i , & ref2 )"	1784:8:58151:58190	8981687	2	True				
ANR	8981764	AssignmentExpression	"code = array_get ( imemory , m2 , i , & ref2 )"		8981687	0		=			
ANR	8981765	Identifier	code		8981687	0					
ANR	8981766	CallExpression	"array_get ( imemory , m2 , i , & ref2 )"		8981687	1					
ANR	8981767	Callee	array_get		8981687	0					
ANR	8981768	Identifier	array_get		8981687	0					
ANR	8981769	ArgumentList	imemory		8981687	1					
ANR	8981770	Argument	imemory		8981687	0					
ANR	8981771	Identifier	imemory		8981687	0					
ANR	8981772	Argument	m2		8981687	1					
ANR	8981773	Identifier	m2		8981687	0					
ANR	8981774	Argument	i		8981687	2					
ANR	8981775	Identifier	i		8981687	0					
ANR	8981776	Argument	& ref2		8981687	3					
ANR	8981777	UnaryOperationExpression	& ref2		8981687	0					
ANR	8981778	UnaryOperator	&		8981687	0					
ANR	8981779	Identifier	ref2		8981687	1					
ANR	8981780	IfStatement	if ( code < 0 )		8981687	3					
ANR	8981781	Condition	code < 0	1785:12:58204:58211	8981687	0	True				
ANR	8981782	RelationalExpression	code < 0		8981687	0		<			
ANR	8981783	Identifier	code		8981687	0					
ANR	8981784	PrimaryExpression	0		8981687	1					
ANR	8981785	ReturnStatement	return 0 ;	1786:12:58226:58234	8981687	1	True				
ANR	8981786	PrimaryExpression	0		8981687	0					
ANR	8981787	IfStatement	if ( r_type ( & ref1 ) != r_type ( & ref2 ) )		8981687	4					
ANR	8981788	Condition	r_type ( & ref1 ) != r_type ( & ref2 )	1788:12:58249:58278	8981687	0	True				
ANR	8981789	EqualityExpression	r_type ( & ref1 ) != r_type ( & ref2 )		8981687	0		!=			
ANR	8981790	CallExpression	r_type ( & ref1 )		8981687	0					
ANR	8981791	Callee	r_type		8981687	0					
ANR	8981792	Identifier	r_type		8981687	0					
ANR	8981793	ArgumentList	& ref1		8981687	1					
ANR	8981794	Argument	& ref1		8981687	0					
ANR	8981795	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981796	UnaryOperator	&		8981687	0					
ANR	8981797	Identifier	ref1		8981687	1					
ANR	8981798	CallExpression	r_type ( & ref2 )		8981687	1					
ANR	8981799	Callee	r_type		8981687	0					
ANR	8981800	Identifier	r_type		8981687	0					
ANR	8981801	ArgumentList	& ref2		8981687	1					
ANR	8981802	Argument	& ref2		8981687	0					
ANR	8981803	UnaryOperationExpression	& ref2		8981687	0					
ANR	8981804	UnaryOperator	&		8981687	0					
ANR	8981805	Identifier	ref2		8981687	1					
ANR	8981806	ReturnStatement	return 0 ;	1789:12:58293:58301	8981687	1	True				
ANR	8981807	PrimaryExpression	0		8981687	0					
ANR	8981808	ExpressionStatement	code = r_type ( & ref1 )	1791:8:58312:58332	8981687	5	True				
ANR	8981809	AssignmentExpression	code = r_type ( & ref1 )		8981687	0		=			
ANR	8981810	Identifier	code		8981687	0					
ANR	8981811	CallExpression	r_type ( & ref1 )		8981687	1					
ANR	8981812	Callee	r_type		8981687	0					
ANR	8981813	Identifier	r_type		8981687	0					
ANR	8981814	ArgumentList	& ref1		8981687	1					
ANR	8981815	Argument	& ref1		8981687	0					
ANR	8981816	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981817	UnaryOperator	&		8981687	0					
ANR	8981818	Identifier	ref1		8981687	1					
ANR	8981819	IfStatement	if ( code < 0 )		8981687	6					
ANR	8981820	Condition	code < 0	1792:12:58346:58353	8981687	0	True				
ANR	8981821	RelationalExpression	code < 0		8981687	0		<			
ANR	8981822	Identifier	code		8981687	0					
ANR	8981823	PrimaryExpression	0		8981687	1					
ANR	8981824	ReturnStatement	return code ;	1793:12:58368:58379	8981687	1	True				
ANR	8981825	Identifier	code		8981687	0					
ANR	8981826	SwitchStatement	switch ( r_type ( & ref1 ) )		8981687	7					
ANR	8981827	Condition	r_type ( & ref1 )	1794:15:58396:58408	8981687	0	True				
ANR	8981828	CallExpression	r_type ( & ref1 )		8981687	0					
ANR	8981829	Callee	r_type		8981687	0					
ANR	8981830	Identifier	r_type		8981687	0					
ANR	8981831	ArgumentList	& ref1		8981687	1					
ANR	8981832	Argument	& ref1		8981687	0					
ANR	8981833	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981834	UnaryOperator	&		8981687	0					
ANR	8981835	Identifier	ref1		8981687	1					
ANR	8981836	CompoundStatement		22:30:488:488	8981687	1					
ANR	8981837	Label	case t_null :	1795:12:58425:58436	8981687	0	True				
ANR	8981838	Identifier	t_null		8981687	0					
ANR	8981839	BreakStatement	break ;	1796:16:58454:58459	8981687	1	True				
ANR	8981840	Label	case t_boolean :	1797:12:58473:58487	8981687	2	True				
ANR	8981841	Identifier	t_boolean		8981687	0					
ANR	8981842	IfStatement	if ( ref1 . value . boolval != ref2 . value . boolval )		8981687	3					
ANR	8981843	Condition	ref1 . value . boolval != ref2 . value . boolval	1798:20:58509:58548	8981687	0	True				
ANR	8981844	EqualityExpression	ref1 . value . boolval != ref2 . value . boolval		8981687	0		!=			
ANR	8981845	MemberAccess	ref1 . value . boolval		8981687	0					
ANR	8981846	MemberAccess	ref1 . value		8981687	0					
ANR	8981847	Identifier	ref1		8981687	0					
ANR	8981848	Identifier	value		8981687	1					
ANR	8981849	Identifier	boolval		8981687	1					
ANR	8981850	MemberAccess	ref2 . value . boolval		8981687	1					
ANR	8981851	MemberAccess	ref2 . value		8981687	0					
ANR	8981852	Identifier	ref2		8981687	0					
ANR	8981853	Identifier	value		8981687	1					
ANR	8981854	Identifier	boolval		8981687	1					
ANR	8981855	ReturnStatement	return 0 ;	1799:20:58571:58579	8981687	1	True				
ANR	8981856	PrimaryExpression	0		8981687	0					
ANR	8981857	BreakStatement	break ;	1800:16:58597:58602	8981687	4	True				
ANR	8981858	Label	case t_integer :	1801:12:58616:58630	8981687	5	True				
ANR	8981859	Identifier	t_integer		8981687	0					
ANR	8981860	IfStatement	if ( ref1 . value . intval != ref2 . value . intval )		8981687	6					
ANR	8981861	Condition	ref1 . value . intval != ref2 . value . intval	1802:20:58652:58689	8981687	0	True				
ANR	8981862	EqualityExpression	ref1 . value . intval != ref2 . value . intval		8981687	0		!=			
ANR	8981863	MemberAccess	ref1 . value . intval		8981687	0					
ANR	8981864	MemberAccess	ref1 . value		8981687	0					
ANR	8981865	Identifier	ref1		8981687	0					
ANR	8981866	Identifier	value		8981687	1					
ANR	8981867	Identifier	intval		8981687	1					
ANR	8981868	MemberAccess	ref2 . value . intval		8981687	1					
ANR	8981869	MemberAccess	ref2 . value		8981687	0					
ANR	8981870	Identifier	ref2		8981687	0					
ANR	8981871	Identifier	value		8981687	1					
ANR	8981872	Identifier	intval		8981687	1					
ANR	8981873	ReturnStatement	return 0 ;	1803:20:58712:58720	8981687	1	True				
ANR	8981874	PrimaryExpression	0		8981687	0					
ANR	8981875	BreakStatement	break ;	1804:16:58738:58743	8981687	7	True				
ANR	8981876	Label	case t_real :	1805:12:58757:58768	8981687	8	True				
ANR	8981877	Identifier	t_real		8981687	0					
ANR	8981878	IfStatement	if ( ref1 . value . realval != ref2 . value . realval )		8981687	9					
ANR	8981879	Condition	ref1 . value . realval != ref2 . value . realval	1806:20:58790:58829	8981687	0	True				
ANR	8981880	EqualityExpression	ref1 . value . realval != ref2 . value . realval		8981687	0		!=			
ANR	8981881	MemberAccess	ref1 . value . realval		8981687	0					
ANR	8981882	MemberAccess	ref1 . value		8981687	0					
ANR	8981883	Identifier	ref1		8981687	0					
ANR	8981884	Identifier	value		8981687	1					
ANR	8981885	Identifier	realval		8981687	1					
ANR	8981886	MemberAccess	ref2 . value . realval		8981687	1					
ANR	8981887	MemberAccess	ref2 . value		8981687	0					
ANR	8981888	Identifier	ref2		8981687	0					
ANR	8981889	Identifier	value		8981687	1					
ANR	8981890	Identifier	realval		8981687	1					
ANR	8981891	ReturnStatement	return 0 ;	1807:20:58852:58860	8981687	1	True				
ANR	8981892	PrimaryExpression	0		8981687	0					
ANR	8981893	BreakStatement	break ;	1808:16:58878:58883	8981687	10	True				
ANR	8981894	Label	case t_name :	1809:12:58897:58908	8981687	11	True				
ANR	8981895	Identifier	t_name		8981687	0					
ANR	8981896	IfStatement	"if ( ! name_eq ( & ref1 , & ref2 ) )"		8981687	12					
ANR	8981897	Condition	"! name_eq ( & ref1 , & ref2 )"	1810:20:58930:58951	8981687	0	True				
ANR	8981898	UnaryOperationExpression	"! name_eq ( & ref1 , & ref2 )"		8981687	0					
ANR	8981899	UnaryOperator	!		8981687	0					
ANR	8981900	CallExpression	"name_eq ( & ref1 , & ref2 )"		8981687	1					
ANR	8981901	Callee	name_eq		8981687	0					
ANR	8981902	Identifier	name_eq		8981687	0					
ANR	8981903	ArgumentList	& ref1		8981687	1					
ANR	8981904	Argument	& ref1		8981687	0					
ANR	8981905	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981906	UnaryOperator	&		8981687	0					
ANR	8981907	Identifier	ref1		8981687	1					
ANR	8981908	Argument	& ref2		8981687	1					
ANR	8981909	UnaryOperationExpression	& ref2		8981687	0					
ANR	8981910	UnaryOperator	&		8981687	0					
ANR	8981911	Identifier	ref2		8981687	1					
ANR	8981912	ReturnStatement	return 0 ;	1811:20:58974:58982	8981687	1	True				
ANR	8981913	PrimaryExpression	0		8981687	0					
ANR	8981914	BreakStatement	break ;	1812:16:59000:59005	8981687	13	True				
ANR	8981915	Label	case t_string :	1813:12:59019:59032	8981687	14	True				
ANR	8981916	Identifier	t_string		8981687	0					
ANR	8981917	IfStatement	if ( r_size ( & ref1 ) != r_size ( & ref2 ) )		8981687	15					
ANR	8981918	Condition	r_size ( & ref1 ) != r_size ( & ref2 )	1814:20:59054:59083	8981687	0	True				
ANR	8981919	EqualityExpression	r_size ( & ref1 ) != r_size ( & ref2 )		8981687	0		!=			
ANR	8981920	CallExpression	r_size ( & ref1 )		8981687	0					
ANR	8981921	Callee	r_size		8981687	0					
ANR	8981922	Identifier	r_size		8981687	0					
ANR	8981923	ArgumentList	& ref1		8981687	1					
ANR	8981924	Argument	& ref1		8981687	0					
ANR	8981925	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981926	UnaryOperator	&		8981687	0					
ANR	8981927	Identifier	ref1		8981687	1					
ANR	8981928	CallExpression	r_size ( & ref2 )		8981687	1					
ANR	8981929	Callee	r_size		8981687	0					
ANR	8981930	Identifier	r_size		8981687	0					
ANR	8981931	ArgumentList	& ref2		8981687	1					
ANR	8981932	Argument	& ref2		8981687	0					
ANR	8981933	UnaryOperationExpression	& ref2		8981687	0					
ANR	8981934	UnaryOperator	&		8981687	0					
ANR	8981935	Identifier	ref2		8981687	1					
ANR	8981936	ReturnStatement	return 0 ;	1815:20:59106:59114	8981687	1	True				
ANR	8981937	PrimaryExpression	0		8981687	0					
ANR	8981938	IfStatement	"if ( strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0 )"		8981687	16					
ANR	8981939	Condition	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0"	1816:20:59136:59238	8981687	0	True				
ANR	8981940	EqualityExpression	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0"		8981687	0		!=			
ANR	8981941	CallExpression	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) )"		8981687	0					
ANR	8981942	Callee	strncmp		8981687	0					
ANR	8981943	Identifier	strncmp		8981687	0					
ANR	8981944	ArgumentList	( const char * ) ref1 . value . const_bytes		8981687	1					
ANR	8981945	Argument	( const char * ) ref1 . value . const_bytes		8981687	0					
ANR	8981946	CastExpression	( const char * ) ref1 . value . const_bytes		8981687	0					
ANR	8981947	CastTarget	const char *		8981687	0					
ANR	8981948	MemberAccess	ref1 . value . const_bytes		8981687	1					
ANR	8981949	MemberAccess	ref1 . value		8981687	0					
ANR	8981950	Identifier	ref1		8981687	0					
ANR	8981951	Identifier	value		8981687	1					
ANR	8981952	Identifier	const_bytes		8981687	1					
ANR	8981953	Argument	( const char * ) ref2 . value . const_bytes		8981687	1					
ANR	8981954	CastExpression	( const char * ) ref2 . value . const_bytes		8981687	0					
ANR	8981955	CastTarget	const char *		8981687	0					
ANR	8981956	MemberAccess	ref2 . value . const_bytes		8981687	1					
ANR	8981957	MemberAccess	ref2 . value		8981687	0					
ANR	8981958	Identifier	ref2		8981687	0					
ANR	8981959	Identifier	value		8981687	1					
ANR	8981960	Identifier	const_bytes		8981687	1					
ANR	8981961	Argument	r_size ( & ref1 )		8981687	2					
ANR	8981962	CallExpression	r_size ( & ref1 )		8981687	0					
ANR	8981963	Callee	r_size		8981687	0					
ANR	8981964	Identifier	r_size		8981687	0					
ANR	8981965	ArgumentList	& ref1		8981687	1					
ANR	8981966	Argument	& ref1		8981687	0					
ANR	8981967	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981968	UnaryOperator	&		8981687	0					
ANR	8981969	Identifier	ref1		8981687	1					
ANR	8981970	PrimaryExpression	0		8981687	1					
ANR	8981971	ReturnStatement	return 0 ;	1817:20:59261:59269	8981687	1	True				
ANR	8981972	PrimaryExpression	0		8981687	0					
ANR	8981973	BreakStatement	break ;	1818:16:59287:59292	8981687	17	True				
ANR	8981974	Label	case t_array :	1819:12:59306:59318	8981687	18	True				
ANR	8981975	Identifier	t_array		8981687	0					
ANR	8981976	Label	case t_mixedarray :	1820:12:59332:59349	8981687	19	True				
ANR	8981977	Identifier	t_mixedarray		8981687	0					
ANR	8981978	Label	case t_shortarray :	1821:12:59363:59380	8981687	20	True				
ANR	8981979	Identifier	t_shortarray		8981687	0					
ANR	8981980	IfStatement	"if ( ! comparearrays ( i_ctx_p , & ref1 , & ref2 ) )"		8981687	21					
ANR	8981981	Condition	"! comparearrays ( i_ctx_p , & ref1 , & ref2 )"	1822:20:59402:59438	8981687	0	True				
ANR	8981982	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & ref1 , & ref2 )"		8981687	0					
ANR	8981983	UnaryOperator	!		8981687	0					
ANR	8981984	CallExpression	"comparearrays ( i_ctx_p , & ref1 , & ref2 )"		8981687	1					
ANR	8981985	Callee	comparearrays		8981687	0					
ANR	8981986	Identifier	comparearrays		8981687	0					
ANR	8981987	ArgumentList	i_ctx_p		8981687	1					
ANR	8981988	Argument	i_ctx_p		8981687	0					
ANR	8981989	Identifier	i_ctx_p		8981687	0					
ANR	8981990	Argument	& ref1		8981687	1					
ANR	8981991	UnaryOperationExpression	& ref1		8981687	0					
ANR	8981992	UnaryOperator	&		8981687	0					
ANR	8981993	Identifier	ref1		8981687	1					
ANR	8981994	Argument	& ref2		8981687	2					
ANR	8981995	UnaryOperationExpression	& ref2		8981687	0					
ANR	8981996	UnaryOperator	&		8981687	0					
ANR	8981997	Identifier	ref2		8981687	1					
ANR	8981998	ReturnStatement	return 0 ;	1823:20:59461:59469	8981687	1	True				
ANR	8981999	PrimaryExpression	0		8981687	0					
ANR	8982000	BreakStatement	break ;	1824:16:59487:59492	8981687	22	True				
ANR	8982001	Label	case t_oparray :	1825:12:59506:59520	8981687	23	True				
ANR	8982002	Identifier	t_oparray		8981687	0					
ANR	8982003	BreakStatement	break ;	1826:16:59538:59543	8981687	24	True				
ANR	8982004	Label	case t_operator :	1827:12:59557:59572	8981687	25	True				
ANR	8982005	Identifier	t_operator		8981687	0					
ANR	8982006	IfStatement	if ( ref1 . value . opproc != ref2 . value . opproc )		8981687	26					
ANR	8982007	Condition	ref1 . value . opproc != ref2 . value . opproc	1828:20:59594:59631	8981687	0	True				
ANR	8982008	EqualityExpression	ref1 . value . opproc != ref2 . value . opproc		8981687	0		!=			
ANR	8982009	MemberAccess	ref1 . value . opproc		8981687	0					
ANR	8982010	MemberAccess	ref1 . value		8981687	0					
ANR	8982011	Identifier	ref1		8981687	0					
ANR	8982012	Identifier	value		8981687	1					
ANR	8982013	Identifier	opproc		8981687	1					
ANR	8982014	MemberAccess	ref2 . value . opproc		8981687	1					
ANR	8982015	MemberAccess	ref2 . value		8981687	0					
ANR	8982016	Identifier	ref2		8981687	0					
ANR	8982017	Identifier	value		8981687	1					
ANR	8982018	Identifier	opproc		8981687	1					
ANR	8982019	ReturnStatement	return 0 ;	1829:20:59654:59662	8981687	1	True				
ANR	8982020	PrimaryExpression	0		8981687	0					
ANR	8982021	BreakStatement	break ;	1830:16:59680:59685	8981687	27	True				
ANR	8982022	Label	case t__invalid :	1831:12:59699:59714	8981687	28	True				
ANR	8982023	Identifier	t__invalid		8981687	0					
ANR	8982024	Label	case t_dictionary :	1832:12:59728:59745	8981687	29	True				
ANR	8982025	Identifier	t_dictionary		8981687	0					
ANR	8982026	Label	case t_file :	1833:12:59759:59770	8981687	30	True				
ANR	8982027	Identifier	t_file		8981687	0					
ANR	8982028	Label	case t_unused_array_ :	1834:12:59784:59804	8981687	31	True				
ANR	8982029	Identifier	t_unused_array_		8981687	0					
ANR	8982030	Label	case t_struct :	1835:12:59818:59831	8981687	32	True				
ANR	8982031	Identifier	t_struct		8981687	0					
ANR	8982032	Label	case t_astruct :	1836:12:59845:59859	8981687	33	True				
ANR	8982033	Identifier	t_astruct		8981687	0					
ANR	8982034	Label	case t_fontID :	1837:12:59873:59886	8981687	34	True				
ANR	8982035	Identifier	t_fontID		8981687	0					
ANR	8982036	Label	case t_save :	1838:12:59900:59911	8981687	35	True				
ANR	8982037	Identifier	t_save		8981687	0					
ANR	8982038	Label	case t_mark :	1839:12:59925:59936	8981687	36	True				
ANR	8982039	Identifier	t_mark		8981687	0					
ANR	8982040	Label	case t_device :	1840:12:59950:59963	8981687	37	True				
ANR	8982041	Identifier	t_device		8981687	0					
ANR	8982042	ReturnStatement	return 0 ;	1841:16:59981:59989	8981687	38	True				
ANR	8982043	PrimaryExpression	0		8981687	0					
ANR	8982044	Label	default :	1842:12:60003:60010	8981687	39	True				
ANR	8982045	Identifier	default		8981687	0					
ANR	8982046	BreakStatement	break ;	1846:16:60214:60219	8981687	40	True				
ANR	8982047	ReturnStatement	return 1 ;	1849:4:60241:60249	8981687	4	True				
ANR	8982048	PrimaryExpression	1		8981687	0					
ANR	8982049	ReturnType	static int		8981687	1					
ANR	8982050	Identifier	comparearrays		8981687	2					
ANR	8982051	ParameterList	"i_ctx_t * i_ctx_p , ref * m1 , ref * m2"		8981687	3					
ANR	8982052	Parameter	i_ctx_t * i_ctx_p	1772:25:57885:57901	8981687	0	True				
ANR	8982053	ParameterType	i_ctx_t *		8981687	0					
ANR	8982054	Identifier	i_ctx_p		8981687	1					
ANR	8982055	Parameter	ref * m1	1772:44:57904:57910	8981687	1	True				
ANR	8982056	ParameterType	ref *		8981687	0					
ANR	8982057	Identifier	m1		8981687	1					
ANR	8982058	Parameter	ref * m2	1772:53:57913:57919	8981687	2	True				
ANR	8982059	ParameterType	ref *		8981687	0					
ANR	8982060	Identifier	m2		8981687	1					
ANR	8982061	CFGEntryNode	ENTRY		8981687		True				
ANR	8982062	CFGExitNode	EXIT		8981687		True				
ANR	8982063	Symbol	ref2 . value . realval		8981687						
ANR	8982064	Symbol	name_eq		8981687						
ANR	8982065	Symbol	code		8981687						
ANR	8982066	Symbol	ref2 . value . intval		8981687						
ANR	8982067	Symbol	ref1 . value . opproc		8981687						
ANR	8982068	Symbol	ref2		8981687						
ANR	8982069	Symbol	ref1		8981687						
ANR	8982070	Symbol	strncmp		8981687						
ANR	8982071	Symbol	ref1 . value . intval		8981687						
ANR	8982072	Symbol	r_size		8981687						
ANR	8982073	Symbol	ref1 . value . boolval		8981687						
ANR	8982074	Symbol	imemory		8981687						
ANR	8982075	Symbol	ref2 . value		8981687						
ANR	8982076	Symbol	r_type		8981687						
ANR	8982077	Symbol	comparearrays		8981687						
ANR	8982078	Symbol	ref1 . value		8981687						
ANR	8982079	Symbol	m1		8981687						
ANR	8982080	Symbol	m2		8981687						
ANR	8982081	Symbol	array_get		8981687						
ANR	8982082	Symbol	& ref1		8981687						
ANR	8982083	Symbol	i		8981687						
ANR	8982084	Symbol	& ref2		8981687						
ANR	8982085	Symbol	ref1 . value . const_bytes		8981687						
ANR	8982086	Symbol	ref1 . value . realval		8981687						
ANR	8982087	Symbol	i_ctx_p		8981687						
ANR	8982088	Symbol	ref2 . value . opproc		8981687						
ANR	8982089	Symbol	ref2 . value . boolval		8981687						
ANR	8982090	Symbol	ref2 . value . const_bytes		8981687						
ANR	8982091	Function	comparedictkey	1856:0:60530:61036							
ANR	8982092	FunctionDef	"comparedictkey (i_ctx_t * i_ctx_p , ref * CIEdict1 , ref * CIEdict2 , char * key)"		8982091	0					
ANR	8982093	CompoundStatement		1857:0:60616:61036	8982091	0					
ANR	8982094	IdentifierDeclStatement	"int code , code1 ;"	1858:4:60622:60637	8982091	0	True				
ANR	8982095	IdentifierDecl	code		8982091	0					
ANR	8982096	IdentifierDeclType	int		8982091	0					
ANR	8982097	Identifier	code		8982091	1					
ANR	8982098	IdentifierDecl	code1		8982091	1					
ANR	8982099	IdentifierDeclType	int		8982091	0					
ANR	8982100	Identifier	code1		8982091	1					
ANR	8982101	IdentifierDeclStatement	"ref * tempref1 , * tempref2 ;"	1859:4:60643:60667	8982091	1	True				
ANR	8982102	IdentifierDecl	* tempref1		8982091	0					
ANR	8982103	IdentifierDeclType	ref *		8982091	0					
ANR	8982104	Identifier	tempref1		8982091	1					
ANR	8982105	IdentifierDecl	* tempref2		8982091	1					
ANR	8982106	IdentifierDeclType	ref *		8982091	0					
ANR	8982107	Identifier	tempref2		8982091	1					
ANR	8982108	ExpressionStatement	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"	1861:4:60674:60723	8982091	2	True				
ANR	8982109	AssignmentExpression	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"		8982091	0		=			
ANR	8982110	Identifier	code		8982091	0					
ANR	8982111	CallExpression	"dict_find_string ( CIEdict1 , key , & tempref1 )"		8982091	1					
ANR	8982112	Callee	dict_find_string		8982091	0					
ANR	8982113	Identifier	dict_find_string		8982091	0					
ANR	8982114	ArgumentList	CIEdict1		8982091	1					
ANR	8982115	Argument	CIEdict1		8982091	0					
ANR	8982116	Identifier	CIEdict1		8982091	0					
ANR	8982117	Argument	key		8982091	1					
ANR	8982118	Identifier	key		8982091	0					
ANR	8982119	Argument	& tempref1		8982091	2					
ANR	8982120	UnaryOperationExpression	& tempref1		8982091	0					
ANR	8982121	UnaryOperator	&		8982091	0					
ANR	8982122	Identifier	tempref1		8982091	1					
ANR	8982123	ExpressionStatement	"code1 = dict_find_string ( CIEdict2 , key , & tempref2 )"	1862:4:60729:60779	8982091	3	True				
ANR	8982124	AssignmentExpression	"code1 = dict_find_string ( CIEdict2 , key , & tempref2 )"		8982091	0		=			
ANR	8982125	Identifier	code1		8982091	0					
ANR	8982126	CallExpression	"dict_find_string ( CIEdict2 , key , & tempref2 )"		8982091	1					
ANR	8982127	Callee	dict_find_string		8982091	0					
ANR	8982128	Identifier	dict_find_string		8982091	0					
ANR	8982129	ArgumentList	CIEdict2		8982091	1					
ANR	8982130	Argument	CIEdict2		8982091	0					
ANR	8982131	Identifier	CIEdict2		8982091	0					
ANR	8982132	Argument	key		8982091	1					
ANR	8982133	Identifier	key		8982091	0					
ANR	8982134	Argument	& tempref2		8982091	2					
ANR	8982135	UnaryOperationExpression	& tempref2		8982091	0					
ANR	8982136	UnaryOperator	&		8982091	0					
ANR	8982137	Identifier	tempref2		8982091	1					
ANR	8982138	IfStatement	if ( code != code1 )		8982091	4					
ANR	8982139	Condition	code != code1	1863:8:60789:60801	8982091	0	True				
ANR	8982140	EqualityExpression	code != code1		8982091	0		!=			
ANR	8982141	Identifier	code		8982091	0					
ANR	8982142	Identifier	code1		8982091	1					
ANR	8982143	ReturnStatement	return 0 ;	1864:8:60812:60820	8982091	1	True				
ANR	8982144	PrimaryExpression	0		8982091	0					
ANR	8982145	IfStatement	if ( code <= 0 )		8982091	5					
ANR	8982146	Condition	code <= 0	1866:8:60831:60839	8982091	0	True				
ANR	8982147	RelationalExpression	code <= 0		8982091	0		<=			
ANR	8982148	Identifier	code		8982091	0					
ANR	8982149	PrimaryExpression	0		8982091	1					
ANR	8982150	ReturnStatement	return 1 ;	1867:8:60850:60858	8982091	1	True				
ANR	8982151	PrimaryExpression	1		8982091	0					
ANR	8982152	IfStatement	if ( r_type ( tempref1 ) != r_type ( tempref2 ) )		8982091	6					
ANR	8982153	Condition	r_type ( tempref1 ) != r_type ( tempref2 )	1869:8:60869:60904	8982091	0	True				
ANR	8982154	EqualityExpression	r_type ( tempref1 ) != r_type ( tempref2 )		8982091	0		!=			
ANR	8982155	CallExpression	r_type ( tempref1 )		8982091	0					
ANR	8982156	Callee	r_type		8982091	0					
ANR	8982157	Identifier	r_type		8982091	0					
ANR	8982158	ArgumentList	tempref1		8982091	1					
ANR	8982159	Argument	tempref1		8982091	0					
ANR	8982160	Identifier	tempref1		8982091	0					
ANR	8982161	CallExpression	r_type ( tempref2 )		8982091	1					
ANR	8982162	Callee	r_type		8982091	0					
ANR	8982163	Identifier	r_type		8982091	0					
ANR	8982164	ArgumentList	tempref2		8982091	1					
ANR	8982165	Argument	tempref2		8982091	0					
ANR	8982166	Identifier	tempref2		8982091	0					
ANR	8982167	ReturnStatement	return 0 ;	1870:8:60915:60923	8982091	1	True				
ANR	8982168	PrimaryExpression	0		8982091	0					
ANR	8982169	IfStatement	if ( r_type ( tempref1 ) == t_null )		8982091	7					
ANR	8982170	Condition	r_type ( tempref1 ) == t_null	1872:8:60934:60959	8982091	0	True				
ANR	8982171	EqualityExpression	r_type ( tempref1 ) == t_null		8982091	0		==			
ANR	8982172	CallExpression	r_type ( tempref1 )		8982091	0					
ANR	8982173	Callee	r_type		8982091	0					
ANR	8982174	Identifier	r_type		8982091	0					
ANR	8982175	ArgumentList	tempref1		8982091	1					
ANR	8982176	Argument	tempref1		8982091	0					
ANR	8982177	Identifier	tempref1		8982091	0					
ANR	8982178	Identifier	t_null		8982091	1					
ANR	8982179	ReturnStatement	return 1 ;	1873:8:60970:60978	8982091	1	True				
ANR	8982180	PrimaryExpression	1		8982091	0					
ANR	8982181	ReturnStatement	"return comparearrays ( i_ctx_p , tempref1 , tempref2 ) ;"	1875:4:60985:61034	8982091	8	True				
ANR	8982182	CallExpression	"comparearrays ( i_ctx_p , tempref1 , tempref2 )"		8982091	0					
ANR	8982183	Callee	comparearrays		8982091	0					
ANR	8982184	Identifier	comparearrays		8982091	0					
ANR	8982185	ArgumentList	i_ctx_p		8982091	1					
ANR	8982186	Argument	i_ctx_p		8982091	0					
ANR	8982187	Identifier	i_ctx_p		8982091	0					
ANR	8982188	Argument	tempref1		8982091	1					
ANR	8982189	Identifier	tempref1		8982091	0					
ANR	8982190	Argument	tempref2		8982091	2					
ANR	8982191	Identifier	tempref2		8982091	0					
ANR	8982192	ReturnType	static int		8982091	1					
ANR	8982193	Identifier	comparedictkey		8982091	2					
ANR	8982194	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict1 , ref * CIEdict2 , char * key"		8982091	3					
ANR	8982195	Parameter	i_ctx_t * i_ctx_p	1856:26:60556:60572	8982091	0	True				
ANR	8982196	ParameterType	i_ctx_t *		8982091	0					
ANR	8982197	Identifier	i_ctx_p		8982091	1					
ANR	8982198	Parameter	ref * CIEdict1	1856:45:60575:60587	8982091	1	True				
ANR	8982199	ParameterType	ref *		8982091	0					
ANR	8982200	Identifier	CIEdict1		8982091	1					
ANR	8982201	Parameter	ref * CIEdict2	1856:60:60590:60602	8982091	2	True				
ANR	8982202	ParameterType	ref *		8982091	0					
ANR	8982203	Identifier	CIEdict2		8982091	1					
ANR	8982204	Parameter	char * key	1856:75:60605:60613	8982091	3	True				
ANR	8982205	ParameterType	char *		8982091	0					
ANR	8982206	Identifier	key		8982091	1					
ANR	8982207	CFGEntryNode	ENTRY		8982091		True				
ANR	8982208	CFGExitNode	EXIT		8982091		True				
ANR	8982209	Symbol	comparearrays		8982091						
ANR	8982210	Symbol	code1		8982091						
ANR	8982211	Symbol	code		8982091						
ANR	8982212	Symbol	dict_find_string		8982091						
ANR	8982213	Symbol	tempref2		8982091						
ANR	8982214	Symbol	tempref1		8982091						
ANR	8982215	Symbol	t_null		8982091						
ANR	8982216	Symbol	i_ctx_p		8982091						
ANR	8982217	Symbol	CIEdict1		8982091						
ANR	8982218	Symbol	CIEdict2		8982091						
ANR	8982219	Symbol	key		8982091						
ANR	8982220	Symbol	& tempref1		8982091						
ANR	8982221	Symbol	r_type		8982091						
ANR	8982222	Symbol	& tempref2		8982091						
ANR	8982223	Function	hasharray	1878:0:61039:63168							
ANR	8982224	FunctionDef	"hasharray (i_ctx_t * i_ctx_p , ref * m1 , gs_md5_state_t * md5)"		8982223	0					
ANR	8982225	CompoundStatement		1879:0:61109:63168	8982223	0					
ANR	8982226	IdentifierDeclStatement	"int i , code ;"	1880:4:61115:61126	8982223	0	True				
ANR	8982227	IdentifierDecl	i		8982223	0					
ANR	8982228	IdentifierDeclType	int		8982223	0					
ANR	8982229	Identifier	i		8982223	1					
ANR	8982230	IdentifierDecl	code		8982223	1					
ANR	8982231	IdentifierDeclType	int		8982223	0					
ANR	8982232	Identifier	code		8982223	1					
ANR	8982233	IdentifierDeclStatement	ref ref1 ;	1881:4:61132:61140	8982223	1	True				
ANR	8982234	IdentifierDecl	ref1		8982223	0					
ANR	8982235	IdentifierDeclType	ref		8982223	0					
ANR	8982236	Identifier	ref1		8982223	1					
ANR	8982237	ForStatement	for ( i = 0 ; i < r_size ( m1 ) ; i ++ )		8982223	2					
ANR	8982238	ForInit	i = 0 ;	1883:9:61152:61155	8982223	0	True				
ANR	8982239	AssignmentExpression	i = 0		8982223	0		=			
ANR	8982240	Identifier	i		8982223	0					
ANR	8982241	PrimaryExpression	0		8982223	1					
ANR	8982242	Condition	i < r_size ( m1 )	1883:13:61156:61169	8982223	1	True				
ANR	8982243	RelationalExpression	i < r_size ( m1 )		8982223	0		<			
ANR	8982244	Identifier	i		8982223	0					
ANR	8982245	CallExpression	r_size ( m1 )		8982223	1					
ANR	8982246	Callee	r_size		8982223	0					
ANR	8982247	Identifier	r_size		8982223	0					
ANR	8982248	ArgumentList	m1		8982223	1					
ANR	8982249	Argument	m1		8982223	0					
ANR	8982250	Identifier	m1		8982223	0					
ANR	8982251	PostIncDecOperationExpression	i ++	1883:28:61171:61173	8982223	2	True				
ANR	8982252	Identifier	i		8982223	0					
ANR	8982253	IncDec	++		8982223	1					
ANR	8982254	CompoundStatement		5:33:66:66	8982223	3					
ANR	8982255	ExpressionStatement	"code = array_get ( imemory , m1 , i , & ref1 )"	1884:8:61186:61225	8982223	0	True				
ANR	8982256	AssignmentExpression	"code = array_get ( imemory , m1 , i , & ref1 )"		8982223	0		=			
ANR	8982257	Identifier	code		8982223	0					
ANR	8982258	CallExpression	"array_get ( imemory , m1 , i , & ref1 )"		8982223	1					
ANR	8982259	Callee	array_get		8982223	0					
ANR	8982260	Identifier	array_get		8982223	0					
ANR	8982261	ArgumentList	imemory		8982223	1					
ANR	8982262	Argument	imemory		8982223	0					
ANR	8982263	Identifier	imemory		8982223	0					
ANR	8982264	Argument	m1		8982223	1					
ANR	8982265	Identifier	m1		8982223	0					
ANR	8982266	Argument	i		8982223	2					
ANR	8982267	Identifier	i		8982223	0					
ANR	8982268	Argument	& ref1		8982223	3					
ANR	8982269	UnaryOperationExpression	& ref1		8982223	0					
ANR	8982270	UnaryOperator	&		8982223	0					
ANR	8982271	Identifier	ref1		8982223	1					
ANR	8982272	IfStatement	if ( code < 0 )		8982223	1					
ANR	8982273	Condition	code < 0	1885:12:61239:61246	8982223	0	True				
ANR	8982274	RelationalExpression	code < 0		8982223	0		<			
ANR	8982275	Identifier	code		8982223	0					
ANR	8982276	PrimaryExpression	0		8982223	1					
ANR	8982277	ReturnStatement	return 0 ;	1886:12:61261:61269	8982223	1	True				
ANR	8982278	PrimaryExpression	0		8982223	0					
ANR	8982279	ExpressionStatement	code = r_type ( & ref1 )	1888:8:61280:61300	8982223	2	True				
ANR	8982280	AssignmentExpression	code = r_type ( & ref1 )		8982223	0		=			
ANR	8982281	Identifier	code		8982223	0					
ANR	8982282	CallExpression	r_type ( & ref1 )		8982223	1					
ANR	8982283	Callee	r_type		8982223	0					
ANR	8982284	Identifier	r_type		8982223	0					
ANR	8982285	ArgumentList	& ref1		8982223	1					
ANR	8982286	Argument	& ref1		8982223	0					
ANR	8982287	UnaryOperationExpression	& ref1		8982223	0					
ANR	8982288	UnaryOperator	&		8982223	0					
ANR	8982289	Identifier	ref1		8982223	1					
ANR	8982290	IfStatement	if ( code < 0 )		8982223	3					
ANR	8982291	Condition	code < 0	1889:12:61314:61321	8982223	0	True				
ANR	8982292	RelationalExpression	code < 0		8982223	0		<			
ANR	8982293	Identifier	code		8982223	0					
ANR	8982294	PrimaryExpression	0		8982223	1					
ANR	8982295	ReturnStatement	return code ;	1890:12:61336:61347	8982223	1	True				
ANR	8982296	Identifier	code		8982223	0					
ANR	8982297	SwitchStatement	switch ( r_type ( & ref1 ) )		8982223	4					
ANR	8982298	Condition	r_type ( & ref1 )	1891:15:61364:61376	8982223	0	True				
ANR	8982299	CallExpression	r_type ( & ref1 )		8982223	0					
ANR	8982300	Callee	r_type		8982223	0					
ANR	8982301	Identifier	r_type		8982223	0					
ANR	8982302	ArgumentList	& ref1		8982223	1					
ANR	8982303	Argument	& ref1		8982223	0					
ANR	8982304	UnaryOperationExpression	& ref1		8982223	0					
ANR	8982305	UnaryOperator	&		8982223	0					
ANR	8982306	Identifier	ref1		8982223	1					
ANR	8982307	CompoundStatement		13:30:269:269	8982223	1					
ANR	8982308	Label	case t_null :	1892:12:61393:61404	8982223	0	True				
ANR	8982309	Identifier	t_null		8982223	0					
ANR	8982310	BreakStatement	break ;	1893:16:61422:61427	8982223	1	True				
ANR	8982311	Label	case t_boolean :	1894:12:61441:61455	8982223	2	True				
ANR	8982312	Identifier	t_boolean		8982223	0					
ANR	8982313	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . boolval , sizeof ( ref1 . value . boolval ) )"	1895:16:61473:61563	8982223	3	True				
ANR	8982314	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . boolval , sizeof ( ref1 . value . boolval ) )"		8982223	0					
ANR	8982315	Callee	gs_md5_append		8982223	0					
ANR	8982316	Identifier	gs_md5_append		8982223	0					
ANR	8982317	ArgumentList	md5		8982223	1					
ANR	8982318	Argument	md5		8982223	0					
ANR	8982319	Identifier	md5		8982223	0					
ANR	8982320	Argument	( const gs_md5_byte_t * ) & ref1 . value . boolval		8982223	1					
ANR	8982321	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . boolval		8982223	0					
ANR	8982322	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982323	UnaryOperationExpression	& ref1 . value . boolval		8982223	1					
ANR	8982324	UnaryOperator	&		8982223	0					
ANR	8982325	MemberAccess	ref1 . value . boolval		8982223	1					
ANR	8982326	MemberAccess	ref1 . value		8982223	0					
ANR	8982327	Identifier	ref1		8982223	0					
ANR	8982328	Identifier	value		8982223	1					
ANR	8982329	Identifier	boolval		8982223	1					
ANR	8982330	Argument	sizeof ( ref1 . value . boolval )		8982223	2					
ANR	8982331	SizeofExpression	sizeof ( ref1 . value . boolval )		8982223	0					
ANR	8982332	Sizeof	sizeof		8982223	0					
ANR	8982333	MemberAccess	ref1 . value . boolval		8982223	1					
ANR	8982334	MemberAccess	ref1 . value		8982223	0					
ANR	8982335	Identifier	ref1		8982223	0					
ANR	8982336	Identifier	value		8982223	1					
ANR	8982337	Identifier	boolval		8982223	1					
ANR	8982338	BreakStatement	break ;	1896:16:61581:61586	8982223	4	True				
ANR	8982339	Label	case t_integer :	1897:12:61600:61614	8982223	5	True				
ANR	8982340	Identifier	t_integer		8982223	0					
ANR	8982341	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . intval , sizeof ( ref1 . value . intval ) )"	1898:16:61632:61720	8982223	6	True				
ANR	8982342	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . intval , sizeof ( ref1 . value . intval ) )"		8982223	0					
ANR	8982343	Callee	gs_md5_append		8982223	0					
ANR	8982344	Identifier	gs_md5_append		8982223	0					
ANR	8982345	ArgumentList	md5		8982223	1					
ANR	8982346	Argument	md5		8982223	0					
ANR	8982347	Identifier	md5		8982223	0					
ANR	8982348	Argument	( const gs_md5_byte_t * ) & ref1 . value . intval		8982223	1					
ANR	8982349	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . intval		8982223	0					
ANR	8982350	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982351	UnaryOperationExpression	& ref1 . value . intval		8982223	1					
ANR	8982352	UnaryOperator	&		8982223	0					
ANR	8982353	MemberAccess	ref1 . value . intval		8982223	1					
ANR	8982354	MemberAccess	ref1 . value		8982223	0					
ANR	8982355	Identifier	ref1		8982223	0					
ANR	8982356	Identifier	value		8982223	1					
ANR	8982357	Identifier	intval		8982223	1					
ANR	8982358	Argument	sizeof ( ref1 . value . intval )		8982223	2					
ANR	8982359	SizeofExpression	sizeof ( ref1 . value . intval )		8982223	0					
ANR	8982360	Sizeof	sizeof		8982223	0					
ANR	8982361	MemberAccess	ref1 . value . intval		8982223	1					
ANR	8982362	MemberAccess	ref1 . value		8982223	0					
ANR	8982363	Identifier	ref1		8982223	0					
ANR	8982364	Identifier	value		8982223	1					
ANR	8982365	Identifier	intval		8982223	1					
ANR	8982366	BreakStatement	break ;	1899:16:61738:61743	8982223	7	True				
ANR	8982367	Label	case t_real :	1900:12:61757:61768	8982223	8	True				
ANR	8982368	Identifier	t_real		8982223	0					
ANR	8982369	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . realval , sizeof ( ref1 . value . realval ) )"	1901:16:61786:61876	8982223	9	True				
ANR	8982370	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . realval , sizeof ( ref1 . value . realval ) )"		8982223	0					
ANR	8982371	Callee	gs_md5_append		8982223	0					
ANR	8982372	Identifier	gs_md5_append		8982223	0					
ANR	8982373	ArgumentList	md5		8982223	1					
ANR	8982374	Argument	md5		8982223	0					
ANR	8982375	Identifier	md5		8982223	0					
ANR	8982376	Argument	( const gs_md5_byte_t * ) & ref1 . value . realval		8982223	1					
ANR	8982377	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . realval		8982223	0					
ANR	8982378	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982379	UnaryOperationExpression	& ref1 . value . realval		8982223	1					
ANR	8982380	UnaryOperator	&		8982223	0					
ANR	8982381	MemberAccess	ref1 . value . realval		8982223	1					
ANR	8982382	MemberAccess	ref1 . value		8982223	0					
ANR	8982383	Identifier	ref1		8982223	0					
ANR	8982384	Identifier	value		8982223	1					
ANR	8982385	Identifier	realval		8982223	1					
ANR	8982386	Argument	sizeof ( ref1 . value . realval )		8982223	2					
ANR	8982387	SizeofExpression	sizeof ( ref1 . value . realval )		8982223	0					
ANR	8982388	Sizeof	sizeof		8982223	0					
ANR	8982389	MemberAccess	ref1 . value . realval		8982223	1					
ANR	8982390	MemberAccess	ref1 . value		8982223	0					
ANR	8982391	Identifier	ref1		8982223	0					
ANR	8982392	Identifier	value		8982223	1					
ANR	8982393	Identifier	realval		8982223	1					
ANR	8982394	BreakStatement	break ;	1902:16:61894:61899	8982223	10	True				
ANR	8982395	Label	case t_name :	1903:12:61913:61924	8982223	11	True				
ANR	8982396	Identifier	t_name		8982223	0					
ANR	8982397	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . pname , sizeof ( ref1 . value . pname ) )"	1904:16:61942:62028	8982223	12	True				
ANR	8982398	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . pname , sizeof ( ref1 . value . pname ) )"		8982223	0					
ANR	8982399	Callee	gs_md5_append		8982223	0					
ANR	8982400	Identifier	gs_md5_append		8982223	0					
ANR	8982401	ArgumentList	md5		8982223	1					
ANR	8982402	Argument	md5		8982223	0					
ANR	8982403	Identifier	md5		8982223	0					
ANR	8982404	Argument	( const gs_md5_byte_t * ) & ref1 . value . pname		8982223	1					
ANR	8982405	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . pname		8982223	0					
ANR	8982406	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982407	UnaryOperationExpression	& ref1 . value . pname		8982223	1					
ANR	8982408	UnaryOperator	&		8982223	0					
ANR	8982409	MemberAccess	ref1 . value . pname		8982223	1					
ANR	8982410	MemberAccess	ref1 . value		8982223	0					
ANR	8982411	Identifier	ref1		8982223	0					
ANR	8982412	Identifier	value		8982223	1					
ANR	8982413	Identifier	pname		8982223	1					
ANR	8982414	Argument	sizeof ( ref1 . value . pname )		8982223	2					
ANR	8982415	SizeofExpression	sizeof ( ref1 . value . pname )		8982223	0					
ANR	8982416	Sizeof	sizeof		8982223	0					
ANR	8982417	MemberAccess	ref1 . value . pname		8982223	1					
ANR	8982418	MemberAccess	ref1 . value		8982223	0					
ANR	8982419	Identifier	ref1		8982223	0					
ANR	8982420	Identifier	value		8982223	1					
ANR	8982421	Identifier	pname		8982223	1					
ANR	8982422	BreakStatement	break ;	1905:16:62046:62051	8982223	13	True				
ANR	8982423	Label	case t_string :	1906:12:62065:62078	8982223	14	True				
ANR	8982424	Identifier	t_string		8982223	0					
ANR	8982425	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) ref1 . value . const_bytes , r_size ( & ref1 ) )"	1907:16:62096:62176	8982223	15	True				
ANR	8982426	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) ref1 . value . const_bytes , r_size ( & ref1 ) )"		8982223	0					
ANR	8982427	Callee	gs_md5_append		8982223	0					
ANR	8982428	Identifier	gs_md5_append		8982223	0					
ANR	8982429	ArgumentList	md5		8982223	1					
ANR	8982430	Argument	md5		8982223	0					
ANR	8982431	Identifier	md5		8982223	0					
ANR	8982432	Argument	( const gs_md5_byte_t * ) ref1 . value . const_bytes		8982223	1					
ANR	8982433	CastExpression	( const gs_md5_byte_t * ) ref1 . value . const_bytes		8982223	0					
ANR	8982434	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982435	MemberAccess	ref1 . value . const_bytes		8982223	1					
ANR	8982436	MemberAccess	ref1 . value		8982223	0					
ANR	8982437	Identifier	ref1		8982223	0					
ANR	8982438	Identifier	value		8982223	1					
ANR	8982439	Identifier	const_bytes		8982223	1					
ANR	8982440	Argument	r_size ( & ref1 )		8982223	2					
ANR	8982441	CallExpression	r_size ( & ref1 )		8982223	0					
ANR	8982442	Callee	r_size		8982223	0					
ANR	8982443	Identifier	r_size		8982223	0					
ANR	8982444	ArgumentList	& ref1		8982223	1					
ANR	8982445	Argument	& ref1		8982223	0					
ANR	8982446	UnaryOperationExpression	& ref1		8982223	0					
ANR	8982447	UnaryOperator	&		8982223	0					
ANR	8982448	Identifier	ref1		8982223	1					
ANR	8982449	BreakStatement	break ;	1908:16:62194:62199	8982223	16	True				
ANR	8982450	Label	case t_array :	1909:12:62213:62225	8982223	17	True				
ANR	8982451	Identifier	t_array		8982223	0					
ANR	8982452	Label	case t_mixedarray :	1910:12:62239:62256	8982223	18	True				
ANR	8982453	Identifier	t_mixedarray		8982223	0					
ANR	8982454	Label	case t_shortarray :	1911:12:62270:62287	8982223	19	True				
ANR	8982455	Identifier	t_shortarray		8982223	0					
ANR	8982456	IfStatement	"if ( ! hasharray ( i_ctx_p , & ref1 , md5 ) )"		8982223	20					
ANR	8982457	Condition	"! hasharray ( i_ctx_p , & ref1 , md5 )"	1912:20:62309:62339	8982223	0	True				
ANR	8982458	UnaryOperationExpression	"! hasharray ( i_ctx_p , & ref1 , md5 )"		8982223	0					
ANR	8982459	UnaryOperator	!		8982223	0					
ANR	8982460	CallExpression	"hasharray ( i_ctx_p , & ref1 , md5 )"		8982223	1					
ANR	8982461	Callee	hasharray		8982223	0					
ANR	8982462	Identifier	hasharray		8982223	0					
ANR	8982463	ArgumentList	i_ctx_p		8982223	1					
ANR	8982464	Argument	i_ctx_p		8982223	0					
ANR	8982465	Identifier	i_ctx_p		8982223	0					
ANR	8982466	Argument	& ref1		8982223	1					
ANR	8982467	UnaryOperationExpression	& ref1		8982223	0					
ANR	8982468	UnaryOperator	&		8982223	0					
ANR	8982469	Identifier	ref1		8982223	1					
ANR	8982470	Argument	md5		8982223	2					
ANR	8982471	Identifier	md5		8982223	0					
ANR	8982472	ReturnStatement	return 0 ;	1913:20:62362:62370	8982223	1	True				
ANR	8982473	PrimaryExpression	0		8982223	0					
ANR	8982474	BreakStatement	break ;	1914:16:62388:62393	8982223	21	True				
ANR	8982475	Label	case t_oparray :	1915:12:62407:62421	8982223	22	True				
ANR	8982476	Identifier	t_oparray		8982223	0					
ANR	8982477	BreakStatement	break ;	1916:16:62439:62444	8982223	23	True				
ANR	8982478	Label	case t_operator :	1917:12:62458:62473	8982223	24	True				
ANR	8982479	Identifier	t_operator		8982223	0					
ANR	8982480	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . opproc , sizeof ( ref1 . value . opproc ) )"	1918:16:62491:62579	8982223	25	True				
ANR	8982481	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . opproc , sizeof ( ref1 . value . opproc ) )"		8982223	0					
ANR	8982482	Callee	gs_md5_append		8982223	0					
ANR	8982483	Identifier	gs_md5_append		8982223	0					
ANR	8982484	ArgumentList	md5		8982223	1					
ANR	8982485	Argument	md5		8982223	0					
ANR	8982486	Identifier	md5		8982223	0					
ANR	8982487	Argument	( const gs_md5_byte_t * ) & ref1 . value . opproc		8982223	1					
ANR	8982488	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . opproc		8982223	0					
ANR	8982489	CastTarget	const gs_md5_byte_t *		8982223	0					
ANR	8982490	UnaryOperationExpression	& ref1 . value . opproc		8982223	1					
ANR	8982491	UnaryOperator	&		8982223	0					
ANR	8982492	MemberAccess	ref1 . value . opproc		8982223	1					
ANR	8982493	MemberAccess	ref1 . value		8982223	0					
ANR	8982494	Identifier	ref1		8982223	0					
ANR	8982495	Identifier	value		8982223	1					
ANR	8982496	Identifier	opproc		8982223	1					
ANR	8982497	Argument	sizeof ( ref1 . value . opproc )		8982223	2					
ANR	8982498	SizeofExpression	sizeof ( ref1 . value . opproc )		8982223	0					
ANR	8982499	Sizeof	sizeof		8982223	0					
ANR	8982500	MemberAccess	ref1 . value . opproc		8982223	1					
ANR	8982501	MemberAccess	ref1 . value		8982223	0					
ANR	8982502	Identifier	ref1		8982223	0					
ANR	8982503	Identifier	value		8982223	1					
ANR	8982504	Identifier	opproc		8982223	1					
ANR	8982505	BreakStatement	break ;	1919:16:62597:62602	8982223	26	True				
ANR	8982506	Label	case t__invalid :	1920:12:62616:62631	8982223	27	True				
ANR	8982507	Identifier	t__invalid		8982223	0					
ANR	8982508	Label	case t_dictionary :	1921:12:62645:62662	8982223	28	True				
ANR	8982509	Identifier	t_dictionary		8982223	0					
ANR	8982510	Label	case t_file :	1922:12:62676:62687	8982223	29	True				
ANR	8982511	Identifier	t_file		8982223	0					
ANR	8982512	Label	case t_unused_array_ :	1923:12:62701:62721	8982223	30	True				
ANR	8982513	Identifier	t_unused_array_		8982223	0					
ANR	8982514	Label	case t_struct :	1924:12:62735:62748	8982223	31	True				
ANR	8982515	Identifier	t_struct		8982223	0					
ANR	8982516	Label	case t_astruct :	1925:12:62762:62776	8982223	32	True				
ANR	8982517	Identifier	t_astruct		8982223	0					
ANR	8982518	Label	case t_fontID :	1926:12:62790:62803	8982223	33	True				
ANR	8982519	Identifier	t_fontID		8982223	0					
ANR	8982520	Label	case t_save :	1927:12:62817:62828	8982223	34	True				
ANR	8982521	Identifier	t_save		8982223	0					
ANR	8982522	Label	case t_mark :	1928:12:62842:62853	8982223	35	True				
ANR	8982523	Identifier	t_mark		8982223	0					
ANR	8982524	Label	case t_device :	1929:12:62867:62880	8982223	36	True				
ANR	8982525	Identifier	t_device		8982223	0					
ANR	8982526	ReturnStatement	return 0 ;	1930:16:62898:62906	8982223	37	True				
ANR	8982527	PrimaryExpression	0		8982223	0					
ANR	8982528	Label	default :	1931:12:62920:62927	8982223	38	True				
ANR	8982529	Identifier	default		8982223	0					
ANR	8982530	BreakStatement	break ;	1935:16:63131:63136	8982223	39	True				
ANR	8982531	ReturnStatement	return 1 ;	1938:4:63158:63166	8982223	3	True				
ANR	8982532	PrimaryExpression	1		8982223	0					
ANR	8982533	ReturnType	static int		8982223	1					
ANR	8982534	Identifier	hasharray		8982223	2					
ANR	8982535	ParameterList	"i_ctx_t * i_ctx_p , ref * m1 , gs_md5_state_t * md5"		8982223	3					
ANR	8982536	Parameter	i_ctx_t * i_ctx_p	1878:21:61060:61076	8982223	0	True				
ANR	8982537	ParameterType	i_ctx_t *		8982223	0					
ANR	8982538	Identifier	i_ctx_p		8982223	1					
ANR	8982539	Parameter	ref * m1	1878:40:61079:61085	8982223	1	True				
ANR	8982540	ParameterType	ref *		8982223	0					
ANR	8982541	Identifier	m1		8982223	1					
ANR	8982542	Parameter	gs_md5_state_t * md5	1878:49:61088:61106	8982223	2	True				
ANR	8982543	ParameterType	gs_md5_state_t *		8982223	0					
ANR	8982544	Identifier	md5		8982223	1					
ANR	8982545	CFGEntryNode	ENTRY		8982223		True				
ANR	8982546	CFGExitNode	EXIT		8982223		True				
ANR	8982547	Symbol	code		8982223						
ANR	8982548	Symbol	& ref1 . value . pname		8982223						
ANR	8982549	Symbol	ref1 . value . opproc		8982223						
ANR	8982550	Symbol	ref1		8982223						
ANR	8982551	Symbol	ref1 . value . pname		8982223						
ANR	8982552	Symbol	& ref1 . value . opproc		8982223						
ANR	8982553	Symbol	ref1 . value . intval		8982223						
ANR	8982554	Symbol	r_size		8982223						
ANR	8982555	Symbol	ref1 . value . boolval		8982223						
ANR	8982556	Symbol	& ref1 . value . realval		8982223						
ANR	8982557	Symbol	imemory		8982223						
ANR	8982558	Symbol	hasharray		8982223						
ANR	8982559	Symbol	& ref1 . value		8982223						
ANR	8982560	Symbol	r_type		8982223						
ANR	8982561	Symbol	ref1 . value		8982223						
ANR	8982562	Symbol	m1		8982223						
ANR	8982563	Symbol	array_get		8982223						
ANR	8982564	Symbol	& ref1		8982223						
ANR	8982565	Symbol	i		8982223						
ANR	8982566	Symbol	ref1 . value . const_bytes		8982223						
ANR	8982567	Symbol	& ref1 . value . intval		8982223						
ANR	8982568	Symbol	ref1 . value . realval		8982223						
ANR	8982569	Symbol	i_ctx_p		8982223						
ANR	8982570	Symbol	md5		8982223						
ANR	8982571	Symbol	& ref1 . value . boolval		8982223						
ANR	8982572	Function	hashdictkey	1941:0:63171:63490							
ANR	8982573	FunctionDef	"hashdictkey (i_ctx_t * i_ctx_p , ref * CIEdict1 , char * key , gs_md5_state_t * md5)"		8982572	0					
ANR	8982574	CompoundStatement		1942:0:63260:63490	8982572	0					
ANR	8982575	IdentifierDeclStatement	int code ;	1943:4:63266:63274	8982572	0	True				
ANR	8982576	IdentifierDecl	code		8982572	0					
ANR	8982577	IdentifierDeclType	int		8982572	0					
ANR	8982578	Identifier	code		8982572	1					
ANR	8982579	IdentifierDeclStatement	ref * tempref1 ;	1944:4:63280:63293	8982572	1	True				
ANR	8982580	IdentifierDecl	* tempref1		8982572	0					
ANR	8982581	IdentifierDeclType	ref *		8982572	0					
ANR	8982582	Identifier	tempref1		8982572	1					
ANR	8982583	ExpressionStatement	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"	1946:4:63300:63349	8982572	2	True				
ANR	8982584	AssignmentExpression	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"		8982572	0		=			
ANR	8982585	Identifier	code		8982572	0					
ANR	8982586	CallExpression	"dict_find_string ( CIEdict1 , key , & tempref1 )"		8982572	1					
ANR	8982587	Callee	dict_find_string		8982572	0					
ANR	8982588	Identifier	dict_find_string		8982572	0					
ANR	8982589	ArgumentList	CIEdict1		8982572	1					
ANR	8982590	Argument	CIEdict1		8982572	0					
ANR	8982591	Identifier	CIEdict1		8982572	0					
ANR	8982592	Argument	key		8982572	1					
ANR	8982593	Identifier	key		8982572	0					
ANR	8982594	Argument	& tempref1		8982572	2					
ANR	8982595	UnaryOperationExpression	& tempref1		8982572	0					
ANR	8982596	UnaryOperator	&		8982572	0					
ANR	8982597	Identifier	tempref1		8982572	1					
ANR	8982598	IfStatement	if ( code <= 0 )		8982572	3					
ANR	8982599	Condition	code <= 0	1947:8:63359:63367	8982572	0	True				
ANR	8982600	RelationalExpression	code <= 0		8982572	0		<=			
ANR	8982601	Identifier	code		8982572	0					
ANR	8982602	PrimaryExpression	0		8982572	1					
ANR	8982603	ReturnStatement	return 1 ;	1948:8:63378:63386	8982572	1	True				
ANR	8982604	PrimaryExpression	1		8982572	0					
ANR	8982605	IfStatement	if ( r_type ( tempref1 ) == t_null )		8982572	4					
ANR	8982606	Condition	r_type ( tempref1 ) == t_null	1950:8:63397:63422	8982572	0	True				
ANR	8982607	EqualityExpression	r_type ( tempref1 ) == t_null		8982572	0		==			
ANR	8982608	CallExpression	r_type ( tempref1 )		8982572	0					
ANR	8982609	Callee	r_type		8982572	0					
ANR	8982610	Identifier	r_type		8982572	0					
ANR	8982611	ArgumentList	tempref1		8982572	1					
ANR	8982612	Argument	tempref1		8982572	0					
ANR	8982613	Identifier	tempref1		8982572	0					
ANR	8982614	Identifier	t_null		8982572	1					
ANR	8982615	ReturnStatement	return 1 ;	1951:8:63433:63441	8982572	1	True				
ANR	8982616	PrimaryExpression	1		8982572	0					
ANR	8982617	ReturnStatement	"return hasharray ( i_ctx_p , tempref1 , md5 ) ;"	1953:4:63448:63488	8982572	5	True				
ANR	8982618	CallExpression	"hasharray ( i_ctx_p , tempref1 , md5 )"		8982572	0					
ANR	8982619	Callee	hasharray		8982572	0					
ANR	8982620	Identifier	hasharray		8982572	0					
ANR	8982621	ArgumentList	i_ctx_p		8982572	1					
ANR	8982622	Argument	i_ctx_p		8982572	0					
ANR	8982623	Identifier	i_ctx_p		8982572	0					
ANR	8982624	Argument	tempref1		8982572	1					
ANR	8982625	Identifier	tempref1		8982572	0					
ANR	8982626	Argument	md5		8982572	2					
ANR	8982627	Identifier	md5		8982572	0					
ANR	8982628	ReturnType	static int		8982572	1					
ANR	8982629	Identifier	hashdictkey		8982572	2					
ANR	8982630	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict1 , char * key , gs_md5_state_t * md5"		8982572	3					
ANR	8982631	Parameter	i_ctx_t * i_ctx_p	1941:23:63194:63210	8982572	0	True				
ANR	8982632	ParameterType	i_ctx_t *		8982572	0					
ANR	8982633	Identifier	i_ctx_p		8982572	1					
ANR	8982634	Parameter	ref * CIEdict1	1941:42:63213:63225	8982572	1	True				
ANR	8982635	ParameterType	ref *		8982572	0					
ANR	8982636	Identifier	CIEdict1		8982572	1					
ANR	8982637	Parameter	char * key	1941:57:63228:63236	8982572	2	True				
ANR	8982638	ParameterType	char *		8982572	0					
ANR	8982639	Identifier	key		8982572	1					
ANR	8982640	Parameter	gs_md5_state_t * md5	1941:68:63239:63257	8982572	3	True				
ANR	8982641	ParameterType	gs_md5_state_t *		8982572	0					
ANR	8982642	Identifier	md5		8982572	1					
ANR	8982643	CFGEntryNode	ENTRY		8982572		True				
ANR	8982644	CFGExitNode	EXIT		8982572		True				
ANR	8982645	Symbol	t_null		8982572						
ANR	8982646	Symbol	code		8982572						
ANR	8982647	Symbol	dict_find_string		8982572						
ANR	8982648	Symbol	i_ctx_p		8982572						
ANR	8982649	Symbol	CIEdict1		8982572						
ANR	8982650	Symbol	hasharray		8982572						
ANR	8982651	Symbol	key		8982572						
ANR	8982652	Symbol	& tempref1		8982572						
ANR	8982653	Symbol	r_type		8982572						
ANR	8982654	Symbol	md5		8982572						
ANR	8982655	Symbol	tempref1		8982572						
ANR	8982656	Function	get_cie_param_array	1956:0:63493:64051							
ANR	8982657	FunctionDef	"get_cie_param_array (const gs_memory_t * mem , const ref * src , int n , float * dst)"		8982656	0					
ANR	8982658	CompoundStatement		1956:91:63584:64051	8982656	0					
ANR	8982659	IdentifierDeclStatement	ref valref ;	1957:1:63587:63597	8982656	0	True				
ANR	8982660	IdentifierDecl	valref		8982656	0					
ANR	8982661	IdentifierDeclType	ref		8982656	0					
ANR	8982662	Identifier	valref		8982656	1					
ANR	8982663	IdentifierDeclStatement	int i ;	1958:4:63603:63608	8982656	1	True				
ANR	8982664	IdentifierDecl	i		8982656	0					
ANR	8982665	IdentifierDeclType	int		8982656	0					
ANR	8982666	Identifier	i		8982656	1					
ANR	8982667	IdentifierDeclStatement	int code = 0 ;	1959:4:63614:63626	8982656	2	True				
ANR	8982668	IdentifierDecl	code = 0		8982656	0					
ANR	8982669	IdentifierDeclType	int		8982656	0					
ANR	8982670	Identifier	code		8982656	1					
ANR	8982671	AssignmentExpression	code = 0		8982656	2		=			
ANR	8982672	Identifier	code		8982656	0					
ANR	8982673	PrimaryExpression	0		8982656	1					
ANR	8982674	ForStatement	for ( i = 0 ; i < n ; i ++ )		8982656	3					
ANR	8982675	ForInit	i = 0 ;	1961:9:63638:63643	8982656	0	True				
ANR	8982676	AssignmentExpression	i = 0		8982656	0		=			
ANR	8982677	Identifier	i		8982656	0					
ANR	8982678	PrimaryExpression	0		8982656	1					
ANR	8982679	Condition	i < n	1961:16:63645:63649	8982656	1	True				
ANR	8982680	RelationalExpression	i < n		8982656	0		<			
ANR	8982681	Identifier	i		8982656	0					
ANR	8982682	Identifier	n		8982656	1					
ANR	8982683	PostIncDecOperationExpression	i ++	1961:23:63652:63654	8982656	2	True				
ANR	8982684	Identifier	i		8982656	0					
ANR	8982685	IncDec	++		8982656	1					
ANR	8982686	CompoundStatement		6:28:72:72	8982656	3					
ANR	8982687	ExpressionStatement	"code = array_get ( mem , src , i , & valref )"	1962:2:63661:63699	8982656	0	True				
ANR	8982688	AssignmentExpression	"code = array_get ( mem , src , i , & valref )"		8982656	0		=			
ANR	8982689	Identifier	code		8982656	0					
ANR	8982690	CallExpression	"array_get ( mem , src , i , & valref )"		8982656	1					
ANR	8982691	Callee	array_get		8982656	0					
ANR	8982692	Identifier	array_get		8982656	0					
ANR	8982693	ArgumentList	mem		8982656	1					
ANR	8982694	Argument	mem		8982656	0					
ANR	8982695	Identifier	mem		8982656	0					
ANR	8982696	Argument	src		8982656	1					
ANR	8982697	Identifier	src		8982656	0					
ANR	8982698	Argument	i		8982656	2					
ANR	8982699	Identifier	i		8982656	0					
ANR	8982700	Argument	& valref		8982656	3					
ANR	8982701	UnaryOperationExpression	& valref		8982656	0					
ANR	8982702	UnaryOperator	&		8982656	0					
ANR	8982703	Identifier	valref		8982656	1					
ANR	8982704	IfStatement	if ( code < 0 )		8982656	1					
ANR	8982705	Condition	code < 0	1963:6:63707:63714	8982656	0	True				
ANR	8982706	RelationalExpression	code < 0		8982656	0		<			
ANR	8982707	Identifier	code		8982656	0					
ANR	8982708	PrimaryExpression	0		8982656	1					
ANR	8982709	ReturnStatement	return code ;	1964:3:63720:63731	8982656	1	True				
ANR	8982710	Identifier	code		8982656	0					
ANR	8982711	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		8982656	2					
ANR	8982712	Condition	"r_has_type ( & valref , t_integer )"	1965:6:63739:63768	8982656	0	True				
ANR	8982713	CallExpression	"r_has_type ( & valref , t_integer )"		8982656	0					
ANR	8982714	Callee	r_has_type		8982656	0					
ANR	8982715	Identifier	r_has_type		8982656	0					
ANR	8982716	ArgumentList	& valref		8982656	1					
ANR	8982717	Argument	& valref		8982656	0					
ANR	8982718	UnaryOperationExpression	& valref		8982656	0					
ANR	8982719	UnaryOperator	&		8982656	0					
ANR	8982720	Identifier	valref		8982656	1					
ANR	8982721	Argument	t_integer		8982656	1					
ANR	8982722	Identifier	t_integer		8982656	0					
ANR	8982723	ExpressionStatement	dst [ i ] = ( float ) valref . value . intval	1966:3:63774:63809	8982656	1	True				
ANR	8982724	AssignmentExpression	dst [ i ] = ( float ) valref . value . intval		8982656	0		=			
ANR	8982725	ArrayIndexing	dst [ i ]		8982656	0					
ANR	8982726	Identifier	dst		8982656	0					
ANR	8982727	Identifier	i		8982656	1					
ANR	8982728	CastExpression	( float ) valref . value . intval		8982656	1					
ANR	8982729	CastTarget	float		8982656	0					
ANR	8982730	MemberAccess	valref . value . intval		8982656	1					
ANR	8982731	MemberAccess	valref . value		8982656	0					
ANR	8982732	Identifier	valref		8982656	0					
ANR	8982733	Identifier	value		8982656	1					
ANR	8982734	Identifier	intval		8982656	1					
ANR	8982735	ElseStatement	else		8982656	0					
ANR	8982736	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		8982656	0					
ANR	8982737	Condition	"r_has_type ( & valref , t_real )"	1967:11:63822:63848	8982656	0	True				
ANR	8982738	CallExpression	"r_has_type ( & valref , t_real )"		8982656	0					
ANR	8982739	Callee	r_has_type		8982656	0					
ANR	8982740	Identifier	r_has_type		8982656	0					
ANR	8982741	ArgumentList	& valref		8982656	1					
ANR	8982742	Argument	& valref		8982656	0					
ANR	8982743	UnaryOperationExpression	& valref		8982656	0					
ANR	8982744	UnaryOperator	&		8982656	0					
ANR	8982745	Identifier	valref		8982656	1					
ANR	8982746	Argument	t_real		8982656	1					
ANR	8982747	Identifier	t_real		8982656	0					
ANR	8982748	ExpressionStatement	dst [ i ] = ( float ) valref . value . realval	1968:3:63854:63890	8982656	1	True				
ANR	8982749	AssignmentExpression	dst [ i ] = ( float ) valref . value . realval		8982656	0		=			
ANR	8982750	ArrayIndexing	dst [ i ]		8982656	0					
ANR	8982751	Identifier	dst		8982656	0					
ANR	8982752	Identifier	i		8982656	1					
ANR	8982753	CastExpression	( float ) valref . value . realval		8982656	1					
ANR	8982754	CastTarget	float		8982656	0					
ANR	8982755	MemberAccess	valref . value . realval		8982656	1					
ANR	8982756	MemberAccess	valref . value		8982656	0					
ANR	8982757	Identifier	valref		8982656	0					
ANR	8982758	Identifier	value		8982656	1					
ANR	8982759	Identifier	realval		8982656	1					
ANR	8982760	ElseStatement	else		8982656	0					
ANR	8982761	ExpressionStatement	return_error ( gs_error_typecheck )	1970:3:63902:63934	8982656	0	True				
ANR	8982762	CallExpression	return_error ( gs_error_typecheck )		8982656	0					
ANR	8982763	Callee	return_error		8982656	0					
ANR	8982764	Identifier	return_error		8982656	0					
ANR	8982765	ArgumentList	gs_error_typecheck		8982656	1					
ANR	8982766	Argument	gs_error_typecheck		8982656	0					
ANR	8982767	Identifier	gs_error_typecheck		8982656	0					
ANR	8982768	IfStatement	if ( dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE )		8982656	3					
ANR	8982769	Condition	dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE	1971:6:63942:63990	8982656	0	True				
ANR	8982770	OrExpression	dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE		8982656	0		||			
ANR	8982771	RelationalExpression	dst [ i ] < - MAX_CIE_RANGE		8982656	0		<			
ANR	8982772	ArrayIndexing	dst [ i ]		8982656	0					
ANR	8982773	Identifier	dst		8982656	0					
ANR	8982774	Identifier	i		8982656	1					
ANR	8982775	UnaryOperationExpression	- MAX_CIE_RANGE		8982656	1					
ANR	8982776	UnaryOperator	-		8982656	0					
ANR	8982777	Identifier	MAX_CIE_RANGE		8982656	1					
ANR	8982778	RelationalExpression	dst [ i ] > MAX_CIE_RANGE		8982656	1		>			
ANR	8982779	ArrayIndexing	dst [ i ]		8982656	0					
ANR	8982780	Identifier	dst		8982656	0					
ANR	8982781	Identifier	i		8982656	1					
ANR	8982782	Identifier	MAX_CIE_RANGE		8982656	1					
ANR	8982783	ExpressionStatement	return_error ( gs_error_limitcheck )	1972:3:63996:64029	8982656	1	True				
ANR	8982784	CallExpression	return_error ( gs_error_limitcheck )		8982656	0					
ANR	8982785	Callee	return_error		8982656	0					
ANR	8982786	Identifier	return_error		8982656	0					
ANR	8982787	ArgumentList	gs_error_limitcheck		8982656	1					
ANR	8982788	Argument	gs_error_limitcheck		8982656	0					
ANR	8982789	Identifier	gs_error_limitcheck		8982656	0					
ANR	8982790	ReturnStatement	return code ;	1974:4:64038:64049	8982656	4	True				
ANR	8982791	Identifier	code		8982656	0					
ANR	8982792	ReturnType	static int		8982656	1					
ANR	8982793	Identifier	get_cie_param_array		8982656	2					
ANR	8982794	ParameterList	"const gs_memory_t * mem , const ref * src , int n , float * dst"		8982656	3					
ANR	8982795	Parameter	const gs_memory_t * mem	1956:31:63524:63545	8982656	0	True				
ANR	8982796	ParameterType	const gs_memory_t *		8982656	0					
ANR	8982797	Identifier	mem		8982656	1					
ANR	8982798	Parameter	const ref * src	1956:55:63548:63561	8982656	1	True				
ANR	8982799	ParameterType	const ref *		8982656	0					
ANR	8982800	Identifier	src		8982656	1					
ANR	8982801	Parameter	int n	1956:72:63565:63569	8982656	2	True				
ANR	8982802	ParameterType	int		8982656	0					
ANR	8982803	Identifier	n		8982656	1					
ANR	8982804	Parameter	float * dst	1956:79:63572:63581	8982656	3	True				
ANR	8982805	ParameterType	float *		8982656	0					
ANR	8982806	Identifier	dst		8982656	1					
ANR	8982807	CFGEntryNode	ENTRY		8982656		True				
ANR	8982808	CFGExitNode	EXIT		8982656		True				
ANR	8982809	Symbol	valref . value		8982656						
ANR	8982810	Symbol	code		8982656						
ANR	8982811	Symbol	dst		8982656						
ANR	8982812	Symbol	src		8982656						
ANR	8982813	Symbol	array_get		8982656						
ANR	8982814	Symbol	i		8982656						
ANR	8982815	Symbol	t_real		8982656						
ANR	8982816	Symbol	n		8982656						
ANR	8982817	Symbol	valref . value . realval		8982656						
ANR	8982818	Symbol	MAX_CIE_RANGE		8982656						
ANR	8982819	Symbol	* dst		8982656						
ANR	8982820	Symbol	r_has_type		8982656						
ANR	8982821	Symbol	gs_error_typecheck		8982656						
ANR	8982822	Symbol	* i		8982656						
ANR	8982823	Symbol	mem		8982656						
ANR	8982824	Symbol	t_integer		8982656						
ANR	8982825	Symbol	valref . value . intval		8982656						
ANR	8982826	Symbol	& valref		8982656						
ANR	8982827	Symbol	valref		8982656						
ANR	8982828	Symbol	gs_error_limitcheck		8982656						
ANR	8982829	Function	checkWhitePoint	1978:0:64110:64870							
ANR	8982830	FunctionDef	"checkWhitePoint (i_ctx_t * i_ctx_p , ref * CIEdict)"		8982829	0					
ANR	8982831	CompoundStatement		1979:0:64170:64870	8982829	0					
ANR	8982832	IdentifierDeclStatement	int code ;	1980:4:64176:64184	8982829	0	True				
ANR	8982833	IdentifierDecl	code		8982829	0					
ANR	8982834	IdentifierDeclType	int		8982829	0					
ANR	8982835	Identifier	code		8982829	1					
ANR	8982836	IdentifierDeclStatement	float value [ 3 ] ;	1981:4:64190:64204	8982829	1	True				
ANR	8982837	IdentifierDecl	value [ 3 ]		8982829	0					
ANR	8982838	IdentifierDeclType	float [ 3 ]		8982829	0					
ANR	8982839	Identifier	value		8982829	1					
ANR	8982840	PrimaryExpression	3		8982829	2					
ANR	8982841	IdentifierDeclStatement	ref * tempref ;	1982:4:64210:64222	8982829	2	True				
ANR	8982842	IdentifierDecl	* tempref		8982829	0					
ANR	8982843	IdentifierDeclType	ref *		8982829	0					
ANR	8982844	Identifier	tempref		8982829	1					
ANR	8982845	ExpressionStatement	"code = dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"	1984:4:64229:64285	8982829	3	True				
ANR	8982846	AssignmentExpression	"code = dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"		8982829	0		=			
ANR	8982847	Identifier	code		8982829	0					
ANR	8982848	CallExpression	"dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"		8982829	1					
ANR	8982849	Callee	dict_find_string		8982829	0					
ANR	8982850	Identifier	dict_find_string		8982829	0					
ANR	8982851	ArgumentList	CIEdict		8982829	1					
ANR	8982852	Argument	CIEdict		8982829	0					
ANR	8982853	Identifier	CIEdict		8982829	0					
ANR	8982854	Argument	"""WhitePoint"""		8982829	1					
ANR	8982855	PrimaryExpression	"""WhitePoint"""		8982829	0					
ANR	8982856	Argument	& tempref		8982829	2					
ANR	8982857	UnaryOperationExpression	& tempref		8982829	0					
ANR	8982858	UnaryOperator	&		8982829	0					
ANR	8982859	Identifier	tempref		8982829	1					
ANR	8982860	IfStatement	if ( code < 0 )		8982829	4					
ANR	8982861	Condition	code < 0	1985:8:64295:64302	8982829	0	True				
ANR	8982862	RelationalExpression	code < 0		8982829	0		<			
ANR	8982863	Identifier	code		8982829	0					
ANR	8982864	PrimaryExpression	0		8982829	1					
ANR	8982865	ReturnStatement	return code ;	1986:8:64313:64324	8982829	1	True				
ANR	8982866	Identifier	code		8982829	0					
ANR	8982867	IfStatement	"if ( code == 0 || r_has_type ( tempref , t_null ) )"		8982829	5					
ANR	8982868	Condition	"code == 0 || r_has_type ( tempref , t_null )"	1988:8:64335:64374	8982829	0	True				
ANR	8982869	OrExpression	"code == 0 || r_has_type ( tempref , t_null )"		8982829	0		||			
ANR	8982870	EqualityExpression	code == 0		8982829	0		==			
ANR	8982871	Identifier	code		8982829	0					
ANR	8982872	PrimaryExpression	0		8982829	1					
ANR	8982873	CallExpression	"r_has_type ( tempref , t_null )"		8982829	1					
ANR	8982874	Callee	r_has_type		8982829	0					
ANR	8982875	Identifier	r_has_type		8982829	0					
ANR	8982876	ArgumentList	tempref		8982829	1					
ANR	8982877	Argument	tempref		8982829	0					
ANR	8982878	Identifier	tempref		8982829	0					
ANR	8982879	Argument	t_null		8982829	1					
ANR	8982880	Identifier	t_null		8982829	0					
ANR	8982881	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	1989:8:64385:64425	8982829	1	True				
ANR	8982882	CallExpression	gs_note_error ( gs_error_undefined )		8982829	0					
ANR	8982883	Callee	gs_note_error		8982829	0					
ANR	8982884	Identifier	gs_note_error		8982829	0					
ANR	8982885	ArgumentList	gs_error_undefined		8982829	1					
ANR	8982886	Argument	gs_error_undefined		8982829	0					
ANR	8982887	Identifier	gs_error_undefined		8982829	0					
ANR	8982888	IfStatement	if ( ! r_is_array ( tempref ) )		8982829	6					
ANR	8982889	Condition	! r_is_array ( tempref )	1991:8:64436:64455	8982829	0	True				
ANR	8982890	UnaryOperationExpression	! r_is_array ( tempref )		8982829	0					
ANR	8982891	UnaryOperator	!		8982829	0					
ANR	8982892	CallExpression	r_is_array ( tempref )		8982829	1					
ANR	8982893	Callee	r_is_array		8982829	0					
ANR	8982894	Identifier	r_is_array		8982829	0					
ANR	8982895	ArgumentList	tempref		8982829	1					
ANR	8982896	Argument	tempref		8982829	0					
ANR	8982897	Identifier	tempref		8982829	0					
ANR	8982898	ExpressionStatement	return_error ( gs_error_typecheck )	1992:8:64466:64498	8982829	1	True				
ANR	8982899	CallExpression	return_error ( gs_error_typecheck )		8982829	0					
ANR	8982900	Callee	return_error		8982829	0					
ANR	8982901	Identifier	return_error		8982829	0					
ANR	8982902	ArgumentList	gs_error_typecheck		8982829	1					
ANR	8982903	Argument	gs_error_typecheck		8982829	0					
ANR	8982904	Identifier	gs_error_typecheck		8982829	0					
ANR	8982905	IfStatement	if ( r_size ( tempref ) != 3 )		8982829	7					
ANR	8982906	Condition	r_size ( tempref ) != 3	1993:8:64508:64527	8982829	0	True				
ANR	8982907	EqualityExpression	r_size ( tempref ) != 3		8982829	0		!=			
ANR	8982908	CallExpression	r_size ( tempref )		8982829	0					
ANR	8982909	Callee	r_size		8982829	0					
ANR	8982910	Identifier	r_size		8982829	0					
ANR	8982911	ArgumentList	tempref		8982829	1					
ANR	8982912	Argument	tempref		8982829	0					
ANR	8982913	Identifier	tempref		8982829	0					
ANR	8982914	PrimaryExpression	3		8982829	1					
ANR	8982915	ExpressionStatement	return_error ( gs_error_rangecheck )	1994:8:64538:64571	8982829	1	True				
ANR	8982916	CallExpression	return_error ( gs_error_rangecheck )		8982829	0					
ANR	8982917	Callee	return_error		8982829	0					
ANR	8982918	Identifier	return_error		8982829	0					
ANR	8982919	ArgumentList	gs_error_rangecheck		8982829	1					
ANR	8982920	Argument	gs_error_rangecheck		8982829	0					
ANR	8982921	Identifier	gs_error_rangecheck		8982829	0					
ANR	8982922	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	1996:4:64578:64632	8982829	8	True				
ANR	8982923	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		8982829	0		=			
ANR	8982924	Identifier	code		8982829	0					
ANR	8982925	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		8982829	1					
ANR	8982926	Callee	get_cie_param_array		8982829	0					
ANR	8982927	Identifier	get_cie_param_array		8982829	0					
ANR	8982928	ArgumentList	imemory		8982829	1					
ANR	8982929	Argument	imemory		8982829	0					
ANR	8982930	Identifier	imemory		8982829	0					
ANR	8982931	Argument	tempref		8982829	1					
ANR	8982932	Identifier	tempref		8982829	0					
ANR	8982933	Argument	3		8982829	2					
ANR	8982934	PrimaryExpression	3		8982829	0					
ANR	8982935	Argument	value		8982829	3					
ANR	8982936	Identifier	value		8982829	0					
ANR	8982937	IfStatement	if ( code < 0 )		8982829	9					
ANR	8982938	Condition	code < 0	1997:8:64642:64649	8982829	0	True				
ANR	8982939	RelationalExpression	code < 0		8982829	0		<			
ANR	8982940	Identifier	code		8982829	0					
ANR	8982941	PrimaryExpression	0		8982829	1					
ANR	8982942	ReturnStatement	return code ;	1998:8:64660:64671	8982829	1	True				
ANR	8982943	Identifier	code		8982829	0					
ANR	8982944	IfStatement	if ( value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0 )		8982829	10					
ANR	8982945	Condition	value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0	2001:8:64760:64804	8982829	0	True				
ANR	8982946	OrExpression	value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0		8982829	0		||			
ANR	8982947	RelationalExpression	value [ 0 ] < 0		8982829	0		<			
ANR	8982948	ArrayIndexing	value [ 0 ]		8982829	0					
ANR	8982949	Identifier	value		8982829	0					
ANR	8982950	PrimaryExpression	0		8982829	1					
ANR	8982951	PrimaryExpression	0		8982829	1					
ANR	8982952	OrExpression	value [ 1 ] != 1 || value [ 2 ] < 0		8982829	1		||			
ANR	8982953	EqualityExpression	value [ 1 ] != 1		8982829	0		!=			
ANR	8982954	ArrayIndexing	value [ 1 ]		8982829	0					
ANR	8982955	Identifier	value		8982829	0					
ANR	8982956	PrimaryExpression	1		8982829	1					
ANR	8982957	PrimaryExpression	1		8982829	1					
ANR	8982958	RelationalExpression	value [ 2 ] < 0		8982829	1		<			
ANR	8982959	ArrayIndexing	value [ 2 ]		8982829	0					
ANR	8982960	Identifier	value		8982829	0					
ANR	8982961	PrimaryExpression	2		8982829	1					
ANR	8982962	PrimaryExpression	0		8982829	1					
ANR	8982963	ExpressionStatement	return_error ( gs_error_rangecheck )	2002:12:64820:64853	8982829	1	True				
ANR	8982964	CallExpression	return_error ( gs_error_rangecheck )		8982829	0					
ANR	8982965	Callee	return_error		8982829	0					
ANR	8982966	Identifier	return_error		8982829	0					
ANR	8982967	ArgumentList	gs_error_rangecheck		8982829	1					
ANR	8982968	Argument	gs_error_rangecheck		8982829	0					
ANR	8982969	Identifier	gs_error_rangecheck		8982829	0					
ANR	8982970	ReturnStatement	return 0 ;	2004:4:64860:64868	8982829	11	True				
ANR	8982971	PrimaryExpression	0		8982829	0					
ANR	8982972	ReturnType	static int		8982829	1					
ANR	8982973	Identifier	checkWhitePoint		8982829	2					
ANR	8982974	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		8982829	3					
ANR	8982975	Parameter	i_ctx_t * i_ctx_p	1978:27:64137:64153	8982829	0	True				
ANR	8982976	ParameterType	i_ctx_t *		8982829	0					
ANR	8982977	Identifier	i_ctx_p		8982829	1					
ANR	8982978	Parameter	ref * CIEdict	1978:46:64156:64167	8982829	1	True				
ANR	8982979	ParameterType	ref *		8982829	0					
ANR	8982980	Identifier	CIEdict		8982829	1					
ANR	8982981	CFGEntryNode	ENTRY		8982829		True				
ANR	8982982	CFGExitNode	EXIT		8982829		True				
ANR	8982983	Symbol	code		8982829						
ANR	8982984	Symbol	dict_find_string		8982829						
ANR	8982985	Symbol	gs_error_rangecheck		8982829						
ANR	8982986	Symbol	gs_error_undefined		8982829						
ANR	8982987	Symbol	& tempref		8982829						
ANR	8982988	Symbol	t_null		8982829						
ANR	8982989	Symbol	r_has_type		8982829						
ANR	8982990	Symbol	gs_note_error		8982829						
ANR	8982991	Symbol	gs_error_typecheck		8982829						
ANR	8982992	Symbol	i_ctx_p		8982829						
ANR	8982993	Symbol	* value		8982829						
ANR	8982994	Symbol	r_size		8982829						
ANR	8982995	Symbol	CIEdict		8982829						
ANR	8982996	Symbol	r_is_array		8982829						
ANR	8982997	Symbol	imemory		8982829						
ANR	8982998	Symbol	get_cie_param_array		8982829						
ANR	8982999	Symbol	value		8982829						
ANR	8983000	Symbol	tempref		8982829						
ANR	8983001	Function	checkBlackPoint	2007:0:64928:65450							
ANR	8983002	FunctionDef	"checkBlackPoint (i_ctx_t * i_ctx_p , ref * CIEdict)"		8983001	0					
ANR	8983003	CompoundStatement		2008:0:64988:65450	8983001	0					
ANR	8983004	IdentifierDeclStatement	int code ;	2009:4:64994:65002	8983001	0	True				
ANR	8983005	IdentifierDecl	code		8983001	0					
ANR	8983006	IdentifierDeclType	int		8983001	0					
ANR	8983007	Identifier	code		8983001	1					
ANR	8983008	IdentifierDeclStatement	float value [ 3 ] ;	2010:4:65008:65022	8983001	1	True				
ANR	8983009	IdentifierDecl	value [ 3 ]		8983001	0					
ANR	8983010	IdentifierDeclType	float [ 3 ]		8983001	0					
ANR	8983011	Identifier	value		8983001	1					
ANR	8983012	PrimaryExpression	3		8983001	2					
ANR	8983013	IdentifierDeclStatement	ref * tempref ;	2011:4:65028:65040	8983001	2	True				
ANR	8983014	IdentifierDecl	* tempref		8983001	0					
ANR	8983015	IdentifierDeclType	ref *		8983001	0					
ANR	8983016	Identifier	tempref		8983001	1					
ANR	8983017	ExpressionStatement	"code = dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"	2013:4:65047:65103	8983001	3	True				
ANR	8983018	AssignmentExpression	"code = dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"		8983001	0		=			
ANR	8983019	Identifier	code		8983001	0					
ANR	8983020	CallExpression	"dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"		8983001	1					
ANR	8983021	Callee	dict_find_string		8983001	0					
ANR	8983022	Identifier	dict_find_string		8983001	0					
ANR	8983023	ArgumentList	CIEdict		8983001	1					
ANR	8983024	Argument	CIEdict		8983001	0					
ANR	8983025	Identifier	CIEdict		8983001	0					
ANR	8983026	Argument	"""BlackPoint"""		8983001	1					
ANR	8983027	PrimaryExpression	"""BlackPoint"""		8983001	0					
ANR	8983028	Argument	& tempref		8983001	2					
ANR	8983029	UnaryOperationExpression	& tempref		8983001	0					
ANR	8983030	UnaryOperator	&		8983001	0					
ANR	8983031	Identifier	tempref		8983001	1					
ANR	8983032	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8983001	4					
ANR	8983033	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2014:8:65113:65152	8983001	0	True				
ANR	8983034	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8983001	0		&&			
ANR	8983035	RelationalExpression	code > 0		8983001	0		>			
ANR	8983036	Identifier	code		8983001	0					
ANR	8983037	PrimaryExpression	0		8983001	1					
ANR	8983038	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8983001	1					
ANR	8983039	UnaryOperator	!		8983001	0					
ANR	8983040	CallExpression	"r_has_type ( tempref , t_null )"		8983001	1					
ANR	8983041	Callee	r_has_type		8983001	0					
ANR	8983042	Identifier	r_has_type		8983001	0					
ANR	8983043	ArgumentList	tempref		8983001	1					
ANR	8983044	Argument	tempref		8983001	0					
ANR	8983045	Identifier	tempref		8983001	0					
ANR	8983046	Argument	t_null		8983001	1					
ANR	8983047	Identifier	t_null		8983001	0					
ANR	8983048	CompoundStatement		7:50:166:166	8983001	1					
ANR	8983049	IfStatement	if ( ! r_is_array ( tempref ) )		8983001	0					
ANR	8983050	Condition	! r_is_array ( tempref )	2015:12:65169:65188	8983001	0	True				
ANR	8983051	UnaryOperationExpression	! r_is_array ( tempref )		8983001	0					
ANR	8983052	UnaryOperator	!		8983001	0					
ANR	8983053	CallExpression	r_is_array ( tempref )		8983001	1					
ANR	8983054	Callee	r_is_array		8983001	0					
ANR	8983055	Identifier	r_is_array		8983001	0					
ANR	8983056	ArgumentList	tempref		8983001	1					
ANR	8983057	Argument	tempref		8983001	0					
ANR	8983058	Identifier	tempref		8983001	0					
ANR	8983059	ExpressionStatement	return_error ( gs_error_typecheck )	2016:12:65203:65235	8983001	1	True				
ANR	8983060	CallExpression	return_error ( gs_error_typecheck )		8983001	0					
ANR	8983061	Callee	return_error		8983001	0					
ANR	8983062	Identifier	return_error		8983001	0					
ANR	8983063	ArgumentList	gs_error_typecheck		8983001	1					
ANR	8983064	Argument	gs_error_typecheck		8983001	0					
ANR	8983065	Identifier	gs_error_typecheck		8983001	0					
ANR	8983066	IfStatement	if ( r_size ( tempref ) != 3 )		8983001	1					
ANR	8983067	Condition	r_size ( tempref ) != 3	2017:12:65249:65268	8983001	0	True				
ANR	8983068	EqualityExpression	r_size ( tempref ) != 3		8983001	0		!=			
ANR	8983069	CallExpression	r_size ( tempref )		8983001	0					
ANR	8983070	Callee	r_size		8983001	0					
ANR	8983071	Identifier	r_size		8983001	0					
ANR	8983072	ArgumentList	tempref		8983001	1					
ANR	8983073	Argument	tempref		8983001	0					
ANR	8983074	Identifier	tempref		8983001	0					
ANR	8983075	PrimaryExpression	3		8983001	1					
ANR	8983076	ExpressionStatement	return_error ( gs_error_rangecheck )	2018:12:65283:65316	8983001	1	True				
ANR	8983077	CallExpression	return_error ( gs_error_rangecheck )		8983001	0					
ANR	8983078	Callee	return_error		8983001	0					
ANR	8983079	Identifier	return_error		8983001	0					
ANR	8983080	ArgumentList	gs_error_rangecheck		8983001	1					
ANR	8983081	Argument	gs_error_rangecheck		8983001	0					
ANR	8983082	Identifier	gs_error_rangecheck		8983001	0					
ANR	8983083	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	2020:8:65327:65381	8983001	2	True				
ANR	8983084	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		8983001	0		=			
ANR	8983085	Identifier	code		8983001	0					
ANR	8983086	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		8983001	1					
ANR	8983087	Callee	get_cie_param_array		8983001	0					
ANR	8983088	Identifier	get_cie_param_array		8983001	0					
ANR	8983089	ArgumentList	imemory		8983001	1					
ANR	8983090	Argument	imemory		8983001	0					
ANR	8983091	Identifier	imemory		8983001	0					
ANR	8983092	Argument	tempref		8983001	1					
ANR	8983093	Identifier	tempref		8983001	0					
ANR	8983094	Argument	3		8983001	2					
ANR	8983095	PrimaryExpression	3		8983001	0					
ANR	8983096	Argument	value		8983001	3					
ANR	8983097	Identifier	value		8983001	0					
ANR	8983098	IfStatement	if ( code < 0 )		8983001	3					
ANR	8983099	Condition	code < 0	2021:12:65395:65402	8983001	0	True				
ANR	8983100	RelationalExpression	code < 0		8983001	0		<			
ANR	8983101	Identifier	code		8983001	0					
ANR	8983102	PrimaryExpression	0		8983001	1					
ANR	8983103	ReturnStatement	return code ;	2022:12:65417:65428	8983001	1	True				
ANR	8983104	Identifier	code		8983001	0					
ANR	8983105	ReturnStatement	return 0 ;	2024:4:65440:65448	8983001	5	True				
ANR	8983106	PrimaryExpression	0		8983001	0					
ANR	8983107	ReturnType	static int		8983001	1					
ANR	8983108	Identifier	checkBlackPoint		8983001	2					
ANR	8983109	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		8983001	3					
ANR	8983110	Parameter	i_ctx_t * i_ctx_p	2007:27:64955:64971	8983001	0	True				
ANR	8983111	ParameterType	i_ctx_t *		8983001	0					
ANR	8983112	Identifier	i_ctx_p		8983001	1					
ANR	8983113	Parameter	ref * CIEdict	2007:46:64974:64985	8983001	1	True				
ANR	8983114	ParameterType	ref *		8983001	0					
ANR	8983115	Identifier	CIEdict		8983001	1					
ANR	8983116	CFGEntryNode	ENTRY		8983001		True				
ANR	8983117	CFGExitNode	EXIT		8983001		True				
ANR	8983118	Symbol	code		8983001						
ANR	8983119	Symbol	dict_find_string		8983001						
ANR	8983120	Symbol	gs_error_rangecheck		8983001						
ANR	8983121	Symbol	& tempref		8983001						
ANR	8983122	Symbol	t_null		8983001						
ANR	8983123	Symbol	r_has_type		8983001						
ANR	8983124	Symbol	gs_error_typecheck		8983001						
ANR	8983125	Symbol	i_ctx_p		8983001						
ANR	8983126	Symbol	r_size		8983001						
ANR	8983127	Symbol	CIEdict		8983001						
ANR	8983128	Symbol	r_is_array		8983001						
ANR	8983129	Symbol	imemory		8983001						
ANR	8983130	Symbol	get_cie_param_array		8983001						
ANR	8983131	Symbol	value		8983001						
ANR	8983132	Symbol	tempref		8983001						
ANR	8983133	Function	checkRangeLMN	2027:0:65506:66149							
ANR	8983134	FunctionDef	"checkRangeLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		8983133	0					
ANR	8983135	CompoundStatement		2028:0:65564:66149	8983133	0					
ANR	8983136	IdentifierDeclStatement	int code ;	2029:4:65570:65578	8983133	0	True				
ANR	8983137	IdentifierDecl	code		8983133	0					
ANR	8983138	IdentifierDeclType	int		8983133	0					
ANR	8983139	Identifier	code		8983133	1					
ANR	8983140	IdentifierDeclStatement	float value [ 6 ] ;	2030:4:65584:65598	8983133	1	True				
ANR	8983141	IdentifierDecl	value [ 6 ]		8983133	0					
ANR	8983142	IdentifierDeclType	float [ 6 ]		8983133	0					
ANR	8983143	Identifier	value		8983133	1					
ANR	8983144	PrimaryExpression	6		8983133	2					
ANR	8983145	IdentifierDeclStatement	ref * tempref ;	2031:4:65604:65616	8983133	2	True				
ANR	8983146	IdentifierDecl	* tempref		8983133	0					
ANR	8983147	IdentifierDeclType	ref *		8983133	0					
ANR	8983148	Identifier	tempref		8983133	1					
ANR	8983149	ExpressionStatement	"code = dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"	2033:4:65623:65677	8983133	3	True				
ANR	8983150	AssignmentExpression	"code = dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"		8983133	0		=			
ANR	8983151	Identifier	code		8983133	0					
ANR	8983152	CallExpression	"dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"		8983133	1					
ANR	8983153	Callee	dict_find_string		8983133	0					
ANR	8983154	Identifier	dict_find_string		8983133	0					
ANR	8983155	ArgumentList	CIEdict		8983133	1					
ANR	8983156	Argument	CIEdict		8983133	0					
ANR	8983157	Identifier	CIEdict		8983133	0					
ANR	8983158	Argument	"""RangeLMN"""		8983133	1					
ANR	8983159	PrimaryExpression	"""RangeLMN"""		8983133	0					
ANR	8983160	Argument	& tempref		8983133	2					
ANR	8983161	UnaryOperationExpression	& tempref		8983133	0					
ANR	8983162	UnaryOperator	&		8983133	0					
ANR	8983163	Identifier	tempref		8983133	1					
ANR	8983164	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8983133	4					
ANR	8983165	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2034:8:65687:65726	8983133	0	True				
ANR	8983166	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8983133	0		&&			
ANR	8983167	RelationalExpression	code > 0		8983133	0		>			
ANR	8983168	Identifier	code		8983133	0					
ANR	8983169	PrimaryExpression	0		8983133	1					
ANR	8983170	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8983133	1					
ANR	8983171	UnaryOperator	!		8983133	0					
ANR	8983172	CallExpression	"r_has_type ( tempref , t_null )"		8983133	1					
ANR	8983173	Callee	r_has_type		8983133	0					
ANR	8983174	Identifier	r_has_type		8983133	0					
ANR	8983175	ArgumentList	tempref		8983133	1					
ANR	8983176	Argument	tempref		8983133	0					
ANR	8983177	Identifier	tempref		8983133	0					
ANR	8983178	Argument	t_null		8983133	1					
ANR	8983179	Identifier	t_null		8983133	0					
ANR	8983180	CompoundStatement		7:50:164:164	8983133	1					
ANR	8983181	IfStatement	if ( ! r_is_array ( tempref ) )		8983133	0					
ANR	8983182	Condition	! r_is_array ( tempref )	2035:12:65743:65762	8983133	0	True				
ANR	8983183	UnaryOperationExpression	! r_is_array ( tempref )		8983133	0					
ANR	8983184	UnaryOperator	!		8983133	0					
ANR	8983185	CallExpression	r_is_array ( tempref )		8983133	1					
ANR	8983186	Callee	r_is_array		8983133	0					
ANR	8983187	Identifier	r_is_array		8983133	0					
ANR	8983188	ArgumentList	tempref		8983133	1					
ANR	8983189	Argument	tempref		8983133	0					
ANR	8983190	Identifier	tempref		8983133	0					
ANR	8983191	ExpressionStatement	return_error ( gs_error_typecheck )	2036:12:65777:65809	8983133	1	True				
ANR	8983192	CallExpression	return_error ( gs_error_typecheck )		8983133	0					
ANR	8983193	Callee	return_error		8983133	0					
ANR	8983194	Identifier	return_error		8983133	0					
ANR	8983195	ArgumentList	gs_error_typecheck		8983133	1					
ANR	8983196	Argument	gs_error_typecheck		8983133	0					
ANR	8983197	Identifier	gs_error_typecheck		8983133	0					
ANR	8983198	IfStatement	if ( r_size ( tempref ) != 6 )		8983133	1					
ANR	8983199	Condition	r_size ( tempref ) != 6	2037:12:65823:65842	8983133	0	True				
ANR	8983200	EqualityExpression	r_size ( tempref ) != 6		8983133	0		!=			
ANR	8983201	CallExpression	r_size ( tempref )		8983133	0					
ANR	8983202	Callee	r_size		8983133	0					
ANR	8983203	Identifier	r_size		8983133	0					
ANR	8983204	ArgumentList	tempref		8983133	1					
ANR	8983205	Argument	tempref		8983133	0					
ANR	8983206	Identifier	tempref		8983133	0					
ANR	8983207	PrimaryExpression	6		8983133	1					
ANR	8983208	ExpressionStatement	return_error ( gs_error_rangecheck )	2038:12:65857:65890	8983133	1	True				
ANR	8983209	CallExpression	return_error ( gs_error_rangecheck )		8983133	0					
ANR	8983210	Callee	return_error		8983133	0					
ANR	8983211	Identifier	return_error		8983133	0					
ANR	8983212	ArgumentList	gs_error_rangecheck		8983133	1					
ANR	8983213	Argument	gs_error_rangecheck		8983133	0					
ANR	8983214	Identifier	gs_error_rangecheck		8983133	0					
ANR	8983215	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , value )"	2039:8:65900:65954	8983133	2	True				
ANR	8983216	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , value )"		8983133	0		=			
ANR	8983217	Identifier	code		8983133	0					
ANR	8983218	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , value )"		8983133	1					
ANR	8983219	Callee	get_cie_param_array		8983133	0					
ANR	8983220	Identifier	get_cie_param_array		8983133	0					
ANR	8983221	ArgumentList	imemory		8983133	1					
ANR	8983222	Argument	imemory		8983133	0					
ANR	8983223	Identifier	imemory		8983133	0					
ANR	8983224	Argument	tempref		8983133	1					
ANR	8983225	Identifier	tempref		8983133	0					
ANR	8983226	Argument	6		8983133	2					
ANR	8983227	PrimaryExpression	6		8983133	0					
ANR	8983228	Argument	value		8983133	3					
ANR	8983229	Identifier	value		8983133	0					
ANR	8983230	IfStatement	if ( code < 0 )		8983133	3					
ANR	8983231	Condition	code < 0	2040:12:65968:65975	8983133	0	True				
ANR	8983232	RelationalExpression	code < 0		8983133	0		<			
ANR	8983233	Identifier	code		8983133	0					
ANR	8983234	PrimaryExpression	0		8983133	1					
ANR	8983235	ReturnStatement	return code ;	2041:12:65990:66001	8983133	1	True				
ANR	8983236	Identifier	code		8983133	0					
ANR	8983237	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		8983133	4					
ANR	8983238	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2042:12:66015:66079	8983133	0	True				
ANR	8983239	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8983133	0		||			
ANR	8983240	RelationalExpression	value [ 1 ] < value [ 0 ]		8983133	0		<			
ANR	8983241	ArrayIndexing	value [ 1 ]		8983133	0					
ANR	8983242	Identifier	value		8983133	0					
ANR	8983243	PrimaryExpression	1		8983133	1					
ANR	8983244	ArrayIndexing	value [ 0 ]		8983133	1					
ANR	8983245	Identifier	value		8983133	0					
ANR	8983246	PrimaryExpression	0		8983133	1					
ANR	8983247	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8983133	1		||			
ANR	8983248	RelationalExpression	value [ 3 ] < value [ 2 ]		8983133	0		<			
ANR	8983249	ArrayIndexing	value [ 3 ]		8983133	0					
ANR	8983250	Identifier	value		8983133	0					
ANR	8983251	PrimaryExpression	3		8983133	1					
ANR	8983252	ArrayIndexing	value [ 2 ]		8983133	1					
ANR	8983253	Identifier	value		8983133	0					
ANR	8983254	PrimaryExpression	2		8983133	1					
ANR	8983255	RelationalExpression	value [ 5 ] < value [ 4 ]		8983133	1		<			
ANR	8983256	ArrayIndexing	value [ 5 ]		8983133	0					
ANR	8983257	Identifier	value		8983133	0					
ANR	8983258	PrimaryExpression	5		8983133	1					
ANR	8983259	ArrayIndexing	value [ 4 ]		8983133	1					
ANR	8983260	Identifier	value		8983133	0					
ANR	8983261	PrimaryExpression	4		8983133	1					
ANR	8983262	ExpressionStatement	return_error ( gs_error_rangecheck )	2043:12:66094:66127	8983133	1	True				
ANR	8983263	CallExpression	return_error ( gs_error_rangecheck )		8983133	0					
ANR	8983264	Callee	return_error		8983133	0					
ANR	8983265	Identifier	return_error		8983133	0					
ANR	8983266	ArgumentList	gs_error_rangecheck		8983133	1					
ANR	8983267	Argument	gs_error_rangecheck		8983133	0					
ANR	8983268	Identifier	gs_error_rangecheck		8983133	0					
ANR	8983269	ReturnStatement	return 0 ;	2045:4:66139:66147	8983133	5	True				
ANR	8983270	PrimaryExpression	0		8983133	0					
ANR	8983271	ReturnType	static int		8983133	1					
ANR	8983272	Identifier	checkRangeLMN		8983133	2					
ANR	8983273	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		8983133	3					
ANR	8983274	Parameter	i_ctx_t * i_ctx_p	2027:25:65531:65547	8983133	0	True				
ANR	8983275	ParameterType	i_ctx_t *		8983133	0					
ANR	8983276	Identifier	i_ctx_p		8983133	1					
ANR	8983277	Parameter	ref * CIEdict	2027:44:65550:65561	8983133	1	True				
ANR	8983278	ParameterType	ref *		8983133	0					
ANR	8983279	Identifier	CIEdict		8983133	1					
ANR	8983280	CFGEntryNode	ENTRY		8983133		True				
ANR	8983281	CFGExitNode	EXIT		8983133		True				
ANR	8983282	Symbol	code		8983133						
ANR	8983283	Symbol	dict_find_string		8983133						
ANR	8983284	Symbol	gs_error_rangecheck		8983133						
ANR	8983285	Symbol	& tempref		8983133						
ANR	8983286	Symbol	r_has_type		8983133						
ANR	8983287	Symbol	t_null		8983133						
ANR	8983288	Symbol	gs_error_typecheck		8983133						
ANR	8983289	Symbol	i_ctx_p		8983133						
ANR	8983290	Symbol	* value		8983133						
ANR	8983291	Symbol	r_size		8983133						
ANR	8983292	Symbol	CIEdict		8983133						
ANR	8983293	Symbol	r_is_array		8983133						
ANR	8983294	Symbol	imemory		8983133						
ANR	8983295	Symbol	get_cie_param_array		8983133						
ANR	8983296	Symbol	value		8983133						
ANR	8983297	Symbol	tempref		8983133						
ANR	8983298	Function	checkDecodeLMN	2048:0:66206:66795							
ANR	8983299	FunctionDef	"checkDecodeLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		8983298	0					
ANR	8983300	CompoundStatement		2049:0:66265:66795	8983298	0					
ANR	8983301	IdentifierDeclStatement	"int code = 0 , i ;"	2050:4:66271:66286	8983298	0	True				
ANR	8983302	IdentifierDecl	code = 0		8983298	0					
ANR	8983303	IdentifierDeclType	int		8983298	0					
ANR	8983304	Identifier	code		8983298	1					
ANR	8983305	AssignmentExpression	code = 0		8983298	2		=			
ANR	8983306	Identifier	code		8983298	0					
ANR	8983307	PrimaryExpression	0		8983298	1					
ANR	8983308	IdentifierDecl	i		8983298	1					
ANR	8983309	IdentifierDeclType	int		8983298	0					
ANR	8983310	Identifier	i		8983298	1					
ANR	8983311	IdentifierDeclStatement	"ref * tempref , valref ;"	2051:4:66292:66312	8983298	1	True				
ANR	8983312	IdentifierDecl	* tempref		8983298	0					
ANR	8983313	IdentifierDeclType	ref *		8983298	0					
ANR	8983314	Identifier	tempref		8983298	1					
ANR	8983315	IdentifierDecl	valref		8983298	1					
ANR	8983316	IdentifierDeclType	ref		8983298	0					
ANR	8983317	Identifier	valref		8983298	1					
ANR	8983318	ExpressionStatement	"code = dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"	2053:4:66319:66374	8983298	2	True				
ANR	8983319	AssignmentExpression	"code = dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"		8983298	0		=			
ANR	8983320	Identifier	code		8983298	0					
ANR	8983321	CallExpression	"dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"		8983298	1					
ANR	8983322	Callee	dict_find_string		8983298	0					
ANR	8983323	Identifier	dict_find_string		8983298	0					
ANR	8983324	ArgumentList	CIEdict		8983298	1					
ANR	8983325	Argument	CIEdict		8983298	0					
ANR	8983326	Identifier	CIEdict		8983298	0					
ANR	8983327	Argument	"""DecodeLMN"""		8983298	1					
ANR	8983328	PrimaryExpression	"""DecodeLMN"""		8983298	0					
ANR	8983329	Argument	& tempref		8983298	2					
ANR	8983330	UnaryOperationExpression	& tempref		8983298	0					
ANR	8983331	UnaryOperator	&		8983298	0					
ANR	8983332	Identifier	tempref		8983298	1					
ANR	8983333	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8983298	3					
ANR	8983334	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2054:8:66384:66423	8983298	0	True				
ANR	8983335	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8983298	0		&&			
ANR	8983336	RelationalExpression	code > 0		8983298	0		>			
ANR	8983337	Identifier	code		8983298	0					
ANR	8983338	PrimaryExpression	0		8983298	1					
ANR	8983339	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8983298	1					
ANR	8983340	UnaryOperator	!		8983298	0					
ANR	8983341	CallExpression	"r_has_type ( tempref , t_null )"		8983298	1					
ANR	8983342	Callee	r_has_type		8983298	0					
ANR	8983343	Identifier	r_has_type		8983298	0					
ANR	8983344	ArgumentList	tempref		8983298	1					
ANR	8983345	Argument	tempref		8983298	0					
ANR	8983346	Identifier	tempref		8983298	0					
ANR	8983347	Argument	t_null		8983298	1					
ANR	8983348	Identifier	t_null		8983298	0					
ANR	8983349	CompoundStatement		6:50:160:160	8983298	1					
ANR	8983350	IfStatement	if ( ! r_is_array ( tempref ) )		8983298	0					
ANR	8983351	Condition	! r_is_array ( tempref )	2055:12:66440:66459	8983298	0	True				
ANR	8983352	UnaryOperationExpression	! r_is_array ( tempref )		8983298	0					
ANR	8983353	UnaryOperator	!		8983298	0					
ANR	8983354	CallExpression	r_is_array ( tempref )		8983298	1					
ANR	8983355	Callee	r_is_array		8983298	0					
ANR	8983356	Identifier	r_is_array		8983298	0					
ANR	8983357	ArgumentList	tempref		8983298	1					
ANR	8983358	Argument	tempref		8983298	0					
ANR	8983359	Identifier	tempref		8983298	0					
ANR	8983360	ExpressionStatement	return_error ( gs_error_typecheck )	2056:12:66474:66506	8983298	1	True				
ANR	8983361	CallExpression	return_error ( gs_error_typecheck )		8983298	0					
ANR	8983362	Callee	return_error		8983298	0					
ANR	8983363	Identifier	return_error		8983298	0					
ANR	8983364	ArgumentList	gs_error_typecheck		8983298	1					
ANR	8983365	Argument	gs_error_typecheck		8983298	0					
ANR	8983366	Identifier	gs_error_typecheck		8983298	0					
ANR	8983367	IfStatement	if ( r_size ( tempref ) != 3 )		8983298	1					
ANR	8983368	Condition	r_size ( tempref ) != 3	2057:12:66520:66539	8983298	0	True				
ANR	8983369	EqualityExpression	r_size ( tempref ) != 3		8983298	0		!=			
ANR	8983370	CallExpression	r_size ( tempref )		8983298	0					
ANR	8983371	Callee	r_size		8983298	0					
ANR	8983372	Identifier	r_size		8983298	0					
ANR	8983373	ArgumentList	tempref		8983298	1					
ANR	8983374	Argument	tempref		8983298	0					
ANR	8983375	Identifier	tempref		8983298	0					
ANR	8983376	PrimaryExpression	3		8983298	1					
ANR	8983377	ExpressionStatement	return_error ( gs_error_rangecheck )	2058:12:66554:66587	8983298	1	True				
ANR	8983378	CallExpression	return_error ( gs_error_rangecheck )		8983298	0					
ANR	8983379	Callee	return_error		8983298	0					
ANR	8983380	Identifier	return_error		8983298	0					
ANR	8983381	ArgumentList	gs_error_rangecheck		8983298	1					
ANR	8983382	Argument	gs_error_rangecheck		8983298	0					
ANR	8983383	Identifier	gs_error_rangecheck		8983298	0					
ANR	8983384	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8983298	2					
ANR	8983385	ForInit	i = 0 ;	2060:13:66603:66606	8983298	0	True				
ANR	8983386	AssignmentExpression	i = 0		8983298	0		=			
ANR	8983387	Identifier	i		8983298	0					
ANR	8983388	PrimaryExpression	0		8983298	1					
ANR	8983389	Condition	i < 3	2060:17:66607:66609	8983298	1	True				
ANR	8983390	RelationalExpression	i < 3		8983298	0		<			
ANR	8983391	Identifier	i		8983298	0					
ANR	8983392	PrimaryExpression	3		8983298	1					
ANR	8983393	PostIncDecOperationExpression	i ++	2060:21:66611:66613	8983298	2	True				
ANR	8983394	Identifier	i		8983298	0					
ANR	8983395	IncDec	++		8983298	1					
ANR	8983396	CompoundStatement		12:26:350:350	8983298	3					
ANR	8983397	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	2061:12:66630:66676	8983298	0	True				
ANR	8983398	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		8983298	0		=			
ANR	8983399	Identifier	code		8983298	0					
ANR	8983400	CallExpression	"array_get ( imemory , tempref , i , & valref )"		8983298	1					
ANR	8983401	Callee	array_get		8983298	0					
ANR	8983402	Identifier	array_get		8983298	0					
ANR	8983403	ArgumentList	imemory		8983298	1					
ANR	8983404	Argument	imemory		8983298	0					
ANR	8983405	Identifier	imemory		8983298	0					
ANR	8983406	Argument	tempref		8983298	1					
ANR	8983407	Identifier	tempref		8983298	0					
ANR	8983408	Argument	i		8983298	2					
ANR	8983409	Identifier	i		8983298	0					
ANR	8983410	Argument	& valref		8983298	3					
ANR	8983411	UnaryOperationExpression	& valref		8983298	0					
ANR	8983412	UnaryOperator	&		8983298	0					
ANR	8983413	Identifier	valref		8983298	1					
ANR	8983414	IfStatement	if ( code < 0 )		8983298	1					
ANR	8983415	Condition	code < 0	2062:16:66694:66701	8983298	0	True				
ANR	8983416	RelationalExpression	code < 0		8983298	0		<			
ANR	8983417	Identifier	code		8983298	0					
ANR	8983418	PrimaryExpression	0		8983298	1					
ANR	8983419	ReturnStatement	return code ;	2063:16:66720:66731	8983298	1	True				
ANR	8983420	Identifier	code		8983298	0					
ANR	8983421	ExpressionStatement	check_proc ( valref )	2064:12:66745:66763	8983298	2	True				
ANR	8983422	CallExpression	check_proc ( valref )		8983298	0					
ANR	8983423	Callee	check_proc		8983298	0					
ANR	8983424	Identifier	check_proc		8983298	0					
ANR	8983425	ArgumentList	valref		8983298	1					
ANR	8983426	Argument	valref		8983298	0					
ANR	8983427	Identifier	valref		8983298	0					
ANR	8983428	ReturnStatement	return 0 ;	2067:4:66785:66793	8983298	4	True				
ANR	8983429	PrimaryExpression	0		8983298	0					
ANR	8983430	ReturnType	static int		8983298	1					
ANR	8983431	Identifier	checkDecodeLMN		8983298	2					
ANR	8983432	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		8983298	3					
ANR	8983433	Parameter	i_ctx_t * i_ctx_p	2048:26:66232:66248	8983298	0	True				
ANR	8983434	ParameterType	i_ctx_t *		8983298	0					
ANR	8983435	Identifier	i_ctx_p		8983298	1					
ANR	8983436	Parameter	ref * CIEdict	2048:45:66251:66262	8983298	1	True				
ANR	8983437	ParameterType	ref *		8983298	0					
ANR	8983438	Identifier	CIEdict		8983298	1					
ANR	8983439	CFGEntryNode	ENTRY		8983298		True				
ANR	8983440	CFGExitNode	EXIT		8983298		True				
ANR	8983441	Symbol	code		8983298						
ANR	8983442	Symbol	dict_find_string		8983298						
ANR	8983443	Symbol	gs_error_rangecheck		8983298						
ANR	8983444	Symbol	array_get		8983298						
ANR	8983445	Symbol	i		8983298						
ANR	8983446	Symbol	& tempref		8983298						
ANR	8983447	Symbol	t_null		8983298						
ANR	8983448	Symbol	r_has_type		8983298						
ANR	8983449	Symbol	gs_error_typecheck		8983298						
ANR	8983450	Symbol	& valref		8983298						
ANR	8983451	Symbol	i_ctx_p		8983298						
ANR	8983452	Symbol	valref		8983298						
ANR	8983453	Symbol	r_size		8983298						
ANR	8983454	Symbol	CIEdict		8983298						
ANR	8983455	Symbol	r_is_array		8983298						
ANR	8983456	Symbol	imemory		8983298						
ANR	8983457	Symbol	tempref		8983298						
ANR	8983458	Function	checkMatrixLMN	2070:0:66852:67371							
ANR	8983459	FunctionDef	"checkMatrixLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		8983458	0					
ANR	8983460	CompoundStatement		2071:0:66911:67371	8983458	0					
ANR	8983461	IdentifierDeclStatement	int code ;	2072:4:66917:66925	8983458	0	True				
ANR	8983462	IdentifierDecl	code		8983458	0					
ANR	8983463	IdentifierDeclType	int		8983458	0					
ANR	8983464	Identifier	code		8983458	1					
ANR	8983465	IdentifierDeclStatement	float value [ 9 ] ;	2073:4:66931:66945	8983458	1	True				
ANR	8983466	IdentifierDecl	value [ 9 ]		8983458	0					
ANR	8983467	IdentifierDeclType	float [ 9 ]		8983458	0					
ANR	8983468	Identifier	value		8983458	1					
ANR	8983469	PrimaryExpression	9		8983458	2					
ANR	8983470	IdentifierDeclStatement	ref * tempref ;	2074:4:66951:66963	8983458	2	True				
ANR	8983471	IdentifierDecl	* tempref		8983458	0					
ANR	8983472	IdentifierDeclType	ref *		8983458	0					
ANR	8983473	Identifier	tempref		8983458	1					
ANR	8983474	ExpressionStatement	"code = dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"	2076:4:66970:67025	8983458	3	True				
ANR	8983475	AssignmentExpression	"code = dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"		8983458	0		=			
ANR	8983476	Identifier	code		8983458	0					
ANR	8983477	CallExpression	"dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"		8983458	1					
ANR	8983478	Callee	dict_find_string		8983458	0					
ANR	8983479	Identifier	dict_find_string		8983458	0					
ANR	8983480	ArgumentList	CIEdict		8983458	1					
ANR	8983481	Argument	CIEdict		8983458	0					
ANR	8983482	Identifier	CIEdict		8983458	0					
ANR	8983483	Argument	"""MatrixLMN"""		8983458	1					
ANR	8983484	PrimaryExpression	"""MatrixLMN"""		8983458	0					
ANR	8983485	Argument	& tempref		8983458	2					
ANR	8983486	UnaryOperationExpression	& tempref		8983458	0					
ANR	8983487	UnaryOperator	&		8983458	0					
ANR	8983488	Identifier	tempref		8983458	1					
ANR	8983489	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8983458	4					
ANR	8983490	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2077:8:67035:67074	8983458	0	True				
ANR	8983491	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8983458	0		&&			
ANR	8983492	RelationalExpression	code > 0		8983458	0		>			
ANR	8983493	Identifier	code		8983458	0					
ANR	8983494	PrimaryExpression	0		8983458	1					
ANR	8983495	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8983458	1					
ANR	8983496	UnaryOperator	!		8983458	0					
ANR	8983497	CallExpression	"r_has_type ( tempref , t_null )"		8983458	1					
ANR	8983498	Callee	r_has_type		8983458	0					
ANR	8983499	Identifier	r_has_type		8983458	0					
ANR	8983500	ArgumentList	tempref		8983458	1					
ANR	8983501	Argument	tempref		8983458	0					
ANR	8983502	Identifier	tempref		8983458	0					
ANR	8983503	Argument	t_null		8983458	1					
ANR	8983504	Identifier	t_null		8983458	0					
ANR	8983505	CompoundStatement		7:50:165:165	8983458	1					
ANR	8983506	IfStatement	if ( ! r_is_array ( tempref ) )		8983458	0					
ANR	8983507	Condition	! r_is_array ( tempref )	2078:12:67091:67110	8983458	0	True				
ANR	8983508	UnaryOperationExpression	! r_is_array ( tempref )		8983458	0					
ANR	8983509	UnaryOperator	!		8983458	0					
ANR	8983510	CallExpression	r_is_array ( tempref )		8983458	1					
ANR	8983511	Callee	r_is_array		8983458	0					
ANR	8983512	Identifier	r_is_array		8983458	0					
ANR	8983513	ArgumentList	tempref		8983458	1					
ANR	8983514	Argument	tempref		8983458	0					
ANR	8983515	Identifier	tempref		8983458	0					
ANR	8983516	ExpressionStatement	return_error ( gs_error_typecheck )	2079:12:67125:67157	8983458	1	True				
ANR	8983517	CallExpression	return_error ( gs_error_typecheck )		8983458	0					
ANR	8983518	Callee	return_error		8983458	0					
ANR	8983519	Identifier	return_error		8983458	0					
ANR	8983520	ArgumentList	gs_error_typecheck		8983458	1					
ANR	8983521	Argument	gs_error_typecheck		8983458	0					
ANR	8983522	Identifier	gs_error_typecheck		8983458	0					
ANR	8983523	IfStatement	if ( r_size ( tempref ) != 9 )		8983458	1					
ANR	8983524	Condition	r_size ( tempref ) != 9	2080:12:67171:67190	8983458	0	True				
ANR	8983525	EqualityExpression	r_size ( tempref ) != 9		8983458	0		!=			
ANR	8983526	CallExpression	r_size ( tempref )		8983458	0					
ANR	8983527	Callee	r_size		8983458	0					
ANR	8983528	Identifier	r_size		8983458	0					
ANR	8983529	ArgumentList	tempref		8983458	1					
ANR	8983530	Argument	tempref		8983458	0					
ANR	8983531	Identifier	tempref		8983458	0					
ANR	8983532	PrimaryExpression	9		8983458	1					
ANR	8983533	ExpressionStatement	return_error ( gs_error_rangecheck )	2081:12:67205:67238	8983458	1	True				
ANR	8983534	CallExpression	return_error ( gs_error_rangecheck )		8983458	0					
ANR	8983535	Callee	return_error		8983458	0					
ANR	8983536	Identifier	return_error		8983458	0					
ANR	8983537	ArgumentList	gs_error_rangecheck		8983458	1					
ANR	8983538	Argument	gs_error_rangecheck		8983458	0					
ANR	8983539	Identifier	gs_error_rangecheck		8983458	0					
ANR	8983540	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	2082:8:67248:67302	8983458	2	True				
ANR	8983541	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		8983458	0		=			
ANR	8983542	Identifier	code		8983458	0					
ANR	8983543	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		8983458	1					
ANR	8983544	Callee	get_cie_param_array		8983458	0					
ANR	8983545	Identifier	get_cie_param_array		8983458	0					
ANR	8983546	ArgumentList	imemory		8983458	1					
ANR	8983547	Argument	imemory		8983458	0					
ANR	8983548	Identifier	imemory		8983458	0					
ANR	8983549	Argument	tempref		8983458	1					
ANR	8983550	Identifier	tempref		8983458	0					
ANR	8983551	Argument	9		8983458	2					
ANR	8983552	PrimaryExpression	9		8983458	0					
ANR	8983553	Argument	value		8983458	3					
ANR	8983554	Identifier	value		8983458	0					
ANR	8983555	IfStatement	if ( code < 0 )		8983458	3					
ANR	8983556	Condition	code < 0	2083:12:67316:67323	8983458	0	True				
ANR	8983557	RelationalExpression	code < 0		8983458	0		<			
ANR	8983558	Identifier	code		8983458	0					
ANR	8983559	PrimaryExpression	0		8983458	1					
ANR	8983560	ReturnStatement	return code ;	2084:12:67338:67349	8983458	1	True				
ANR	8983561	Identifier	code		8983458	0					
ANR	8983562	ReturnStatement	return 0 ;	2086:4:67361:67369	8983458	5	True				
ANR	8983563	PrimaryExpression	0		8983458	0					
ANR	8983564	ReturnType	static int		8983458	1					
ANR	8983565	Identifier	checkMatrixLMN		8983458	2					
ANR	8983566	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		8983458	3					
ANR	8983567	Parameter	i_ctx_t * i_ctx_p	2070:26:66878:66894	8983458	0	True				
ANR	8983568	ParameterType	i_ctx_t *		8983458	0					
ANR	8983569	Identifier	i_ctx_p		8983458	1					
ANR	8983570	Parameter	ref * CIEdict	2070:45:66897:66908	8983458	1	True				
ANR	8983571	ParameterType	ref *		8983458	0					
ANR	8983572	Identifier	CIEdict		8983458	1					
ANR	8983573	CFGEntryNode	ENTRY		8983458		True				
ANR	8983574	CFGExitNode	EXIT		8983458		True				
ANR	8983575	Symbol	code		8983458						
ANR	8983576	Symbol	dict_find_string		8983458						
ANR	8983577	Symbol	gs_error_rangecheck		8983458						
ANR	8983578	Symbol	& tempref		8983458						
ANR	8983579	Symbol	t_null		8983458						
ANR	8983580	Symbol	r_has_type		8983458						
ANR	8983581	Symbol	gs_error_typecheck		8983458						
ANR	8983582	Symbol	i_ctx_p		8983458						
ANR	8983583	Symbol	r_size		8983458						
ANR	8983584	Symbol	CIEdict		8983458						
ANR	8983585	Symbol	r_is_array		8983458						
ANR	8983586	Symbol	imemory		8983458						
ANR	8983587	Symbol	get_cie_param_array		8983458						
ANR	8983588	Symbol	value		8983458						
ANR	8983589	Symbol	tempref		8983458						
ANR	8983590	Function	hashcieaspace	2090:0:67390:68491							
ANR	8983591	FunctionDef	"hashcieaspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		8983590	0					
ANR	8983592	CompoundStatement		2091:0:67466:68491	8983590	0					
ANR	8983593	IdentifierDeclStatement	int code = 0 ;	2092:4:67472:67484	8983590	0	True				
ANR	8983594	IdentifierDecl	code = 0		8983590	0					
ANR	8983595	IdentifierDeclType	int		8983590	0					
ANR	8983596	Identifier	code		8983590	1					
ANR	8983597	AssignmentExpression	code = 0		8983590	2		=			
ANR	8983598	Identifier	code		8983590	0					
ANR	8983599	PrimaryExpression	0		8983590	1					
ANR	8983600	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2093:4:67490:67513	8983590	1	True				
ANR	8983601	IdentifierDecl	CIEdict1		8983590	0					
ANR	8983602	IdentifierDeclType	ref		8983590	0					
ANR	8983603	Identifier	CIEdict1		8983590	1					
ANR	8983604	IdentifierDecl	spacename		8983590	1					
ANR	8983605	IdentifierDeclType	ref		8983590	0					
ANR	8983606	Identifier	spacename		8983590	1					
ANR	8983607	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2095:4:67520:67567	8983590	2	True				
ANR	8983608	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		8983590	0		=			
ANR	8983609	Identifier	code		8983590	0					
ANR	8983610	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		8983590	1					
ANR	8983611	Callee	array_get		8983590	0					
ANR	8983612	Identifier	array_get		8983590	0					
ANR	8983613	ArgumentList	imemory		8983590	1					
ANR	8983614	Argument	imemory		8983590	0					
ANR	8983615	Identifier	imemory		8983590	0					
ANR	8983616	Argument	space		8983590	1					
ANR	8983617	Identifier	space		8983590	0					
ANR	8983618	Argument	0		8983590	2					
ANR	8983619	PrimaryExpression	0		8983590	0					
ANR	8983620	Argument	& spacename		8983590	3					
ANR	8983621	UnaryOperationExpression	& spacename		8983590	0					
ANR	8983622	UnaryOperator	&		8983590	0					
ANR	8983623	Identifier	spacename		8983590	1					
ANR	8983624	IfStatement	if ( code < 0 )		8983590	3					
ANR	8983625	Condition	code < 0	2096:8:67577:67584	8983590	0	True				
ANR	8983626	RelationalExpression	code < 0		8983590	0		<			
ANR	8983627	Identifier	code		8983590	0					
ANR	8983628	PrimaryExpression	0		8983590	1					
ANR	8983629	ReturnStatement	return 0 ;	2097:8:67595:67603	8983590	1	True				
ANR	8983630	PrimaryExpression	0		8983590	0					
ANR	8983631	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2098:4:67609:67705	8983590	4	True				
ANR	8983632	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		8983590	0					
ANR	8983633	Callee	gs_md5_append		8983590	0					
ANR	8983634	Identifier	gs_md5_append		8983590	0					
ANR	8983635	ArgumentList	md5		8983590	1					
ANR	8983636	Argument	md5		8983590	0					
ANR	8983637	Identifier	md5		8983590	0					
ANR	8983638	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		8983590	1					
ANR	8983639	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		8983590	0					
ANR	8983640	CastTarget	const gs_md5_byte_t *		8983590	0					
ANR	8983641	UnaryOperationExpression	& spacename . value . pname		8983590	1					
ANR	8983642	UnaryOperator	&		8983590	0					
ANR	8983643	MemberAccess	spacename . value . pname		8983590	1					
ANR	8983644	MemberAccess	spacename . value		8983590	0					
ANR	8983645	Identifier	spacename		8983590	0					
ANR	8983646	Identifier	value		8983590	1					
ANR	8983647	Identifier	pname		8983590	1					
ANR	8983648	Argument	sizeof ( spacename . value . pname )		8983590	2					
ANR	8983649	SizeofExpression	sizeof ( spacename . value . pname )		8983590	0					
ANR	8983650	Sizeof	sizeof		8983590	0					
ANR	8983651	MemberAccess	spacename . value . pname		8983590	1					
ANR	8983652	MemberAccess	spacename . value		8983590	0					
ANR	8983653	Identifier	spacename		8983590	0					
ANR	8983654	Identifier	value		8983590	1					
ANR	8983655	Identifier	pname		8983590	1					
ANR	8983656	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2100:4:67712:67758	8983590	5	True				
ANR	8983657	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8983590	0		=			
ANR	8983658	Identifier	code		8983590	0					
ANR	8983659	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8983590	1					
ANR	8983660	Callee	array_get		8983590	0					
ANR	8983661	Identifier	array_get		8983590	0					
ANR	8983662	ArgumentList	imemory		8983590	1					
ANR	8983663	Argument	imemory		8983590	0					
ANR	8983664	Identifier	imemory		8983590	0					
ANR	8983665	Argument	space		8983590	1					
ANR	8983666	Identifier	space		8983590	0					
ANR	8983667	Argument	1		8983590	2					
ANR	8983668	PrimaryExpression	1		8983590	0					
ANR	8983669	Argument	& CIEdict1		8983590	3					
ANR	8983670	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983671	UnaryOperator	&		8983590	0					
ANR	8983672	Identifier	CIEdict1		8983590	1					
ANR	8983673	IfStatement	if ( code < 0 )		8983590	6					
ANR	8983674	Condition	code < 0	2101:8:67768:67775	8983590	0	True				
ANR	8983675	RelationalExpression	code < 0		8983590	0		<			
ANR	8983676	Identifier	code		8983590	0					
ANR	8983677	PrimaryExpression	0		8983590	1					
ANR	8983678	ReturnStatement	return 0 ;	2102:8:67786:67794	8983590	1	True				
ANR	8983679	PrimaryExpression	0		8983590	0					
ANR	8983680	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		8983590	7					
ANR	8983681	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2103:8:67804:67862	8983590	0	True				
ANR	8983682	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8983590	0					
ANR	8983683	UnaryOperator	!		8983590	0					
ANR	8983684	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8983590	1					
ANR	8983685	Callee	hashdictkey		8983590	0					
ANR	8983686	Identifier	hashdictkey		8983590	0					
ANR	8983687	ArgumentList	i_ctx_p		8983590	1					
ANR	8983688	Argument	i_ctx_p		8983590	0					
ANR	8983689	Identifier	i_ctx_p		8983590	0					
ANR	8983690	Argument	& CIEdict1		8983590	1					
ANR	8983691	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983692	UnaryOperator	&		8983590	0					
ANR	8983693	Identifier	CIEdict1		8983590	1					
ANR	8983694	Argument	"( char * ) ""WhitePoint"""		8983590	2					
ANR	8983695	CastExpression	"( char * ) ""WhitePoint"""		8983590	0					
ANR	8983696	CastTarget	char *		8983590	0					
ANR	8983697	PrimaryExpression	"""WhitePoint"""		8983590	1					
ANR	8983698	Argument	md5		8983590	3					
ANR	8983699	Identifier	md5		8983590	0					
ANR	8983700	ReturnStatement	return 0 ;	2104:8:67873:67881	8983590	1	True				
ANR	8983701	PrimaryExpression	0		8983590	0					
ANR	8983702	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		8983590	8					
ANR	8983703	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2105:8:67891:67949	8983590	0	True				
ANR	8983704	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8983590	0					
ANR	8983705	UnaryOperator	!		8983590	0					
ANR	8983706	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8983590	1					
ANR	8983707	Callee	hashdictkey		8983590	0					
ANR	8983708	Identifier	hashdictkey		8983590	0					
ANR	8983709	ArgumentList	i_ctx_p		8983590	1					
ANR	8983710	Argument	i_ctx_p		8983590	0					
ANR	8983711	Identifier	i_ctx_p		8983590	0					
ANR	8983712	Argument	& CIEdict1		8983590	1					
ANR	8983713	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983714	UnaryOperator	&		8983590	0					
ANR	8983715	Identifier	CIEdict1		8983590	1					
ANR	8983716	Argument	"( char * ) ""BlackPoint"""		8983590	2					
ANR	8983717	CastExpression	"( char * ) ""BlackPoint"""		8983590	0					
ANR	8983718	CastTarget	char *		8983590	0					
ANR	8983719	PrimaryExpression	"""BlackPoint"""		8983590	1					
ANR	8983720	Argument	md5		8983590	3					
ANR	8983721	Identifier	md5		8983590	0					
ANR	8983722	ReturnStatement	return 0 ;	2106:8:67960:67968	8983590	1	True				
ANR	8983723	PrimaryExpression	0		8983590	0					
ANR	8983724	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 ) )"		8983590	9					
ANR	8983725	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"	2107:8:67978:68032	8983590	0	True				
ANR	8983726	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"		8983590	0					
ANR	8983727	UnaryOperator	!		8983590	0					
ANR	8983728	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"		8983590	1					
ANR	8983729	Callee	hashdictkey		8983590	0					
ANR	8983730	Identifier	hashdictkey		8983590	0					
ANR	8983731	ArgumentList	i_ctx_p		8983590	1					
ANR	8983732	Argument	i_ctx_p		8983590	0					
ANR	8983733	Identifier	i_ctx_p		8983590	0					
ANR	8983734	Argument	& CIEdict1		8983590	1					
ANR	8983735	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983736	UnaryOperator	&		8983590	0					
ANR	8983737	Identifier	CIEdict1		8983590	1					
ANR	8983738	Argument	"( char * ) ""RangeA"""		8983590	2					
ANR	8983739	CastExpression	"( char * ) ""RangeA"""		8983590	0					
ANR	8983740	CastTarget	char *		8983590	0					
ANR	8983741	PrimaryExpression	"""RangeA"""		8983590	1					
ANR	8983742	Argument	md5		8983590	3					
ANR	8983743	Identifier	md5		8983590	0					
ANR	8983744	ReturnStatement	return 0 ;	2108:8:68043:68051	8983590	1	True				
ANR	8983745	PrimaryExpression	0		8983590	0					
ANR	8983746	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 ) )"		8983590	10					
ANR	8983747	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"	2109:8:68061:68116	8983590	0	True				
ANR	8983748	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"		8983590	0					
ANR	8983749	UnaryOperator	!		8983590	0					
ANR	8983750	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"		8983590	1					
ANR	8983751	Callee	hashdictkey		8983590	0					
ANR	8983752	Identifier	hashdictkey		8983590	0					
ANR	8983753	ArgumentList	i_ctx_p		8983590	1					
ANR	8983754	Argument	i_ctx_p		8983590	0					
ANR	8983755	Identifier	i_ctx_p		8983590	0					
ANR	8983756	Argument	& CIEdict1		8983590	1					
ANR	8983757	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983758	UnaryOperator	&		8983590	0					
ANR	8983759	Identifier	CIEdict1		8983590	1					
ANR	8983760	Argument	"( char * ) ""DecodeA"""		8983590	2					
ANR	8983761	CastExpression	"( char * ) ""DecodeA"""		8983590	0					
ANR	8983762	CastTarget	char *		8983590	0					
ANR	8983763	PrimaryExpression	"""DecodeA"""		8983590	1					
ANR	8983764	Argument	md5		8983590	3					
ANR	8983765	Identifier	md5		8983590	0					
ANR	8983766	ReturnStatement	return 0 ;	2110:8:68127:68135	8983590	1	True				
ANR	8983767	PrimaryExpression	0		8983590	0					
ANR	8983768	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 ) )"		8983590	11					
ANR	8983769	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"	2111:8:68145:68200	8983590	0	True				
ANR	8983770	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"		8983590	0					
ANR	8983771	UnaryOperator	!		8983590	0					
ANR	8983772	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"		8983590	1					
ANR	8983773	Callee	hashdictkey		8983590	0					
ANR	8983774	Identifier	hashdictkey		8983590	0					
ANR	8983775	ArgumentList	i_ctx_p		8983590	1					
ANR	8983776	Argument	i_ctx_p		8983590	0					
ANR	8983777	Identifier	i_ctx_p		8983590	0					
ANR	8983778	Argument	& CIEdict1		8983590	1					
ANR	8983779	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983780	UnaryOperator	&		8983590	0					
ANR	8983781	Identifier	CIEdict1		8983590	1					
ANR	8983782	Argument	"( char * ) ""MatrixA"""		8983590	2					
ANR	8983783	CastExpression	"( char * ) ""MatrixA"""		8983590	0					
ANR	8983784	CastTarget	char *		8983590	0					
ANR	8983785	PrimaryExpression	"""MatrixA"""		8983590	1					
ANR	8983786	Argument	md5		8983590	3					
ANR	8983787	Identifier	md5		8983590	0					
ANR	8983788	ReturnStatement	return 0 ;	2112:8:68211:68219	8983590	1	True				
ANR	8983789	PrimaryExpression	0		8983590	0					
ANR	8983790	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		8983590	12					
ANR	8983791	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2113:8:68229:68285	8983590	0	True				
ANR	8983792	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8983590	0					
ANR	8983793	UnaryOperator	!		8983590	0					
ANR	8983794	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8983590	1					
ANR	8983795	Callee	hashdictkey		8983590	0					
ANR	8983796	Identifier	hashdictkey		8983590	0					
ANR	8983797	ArgumentList	i_ctx_p		8983590	1					
ANR	8983798	Argument	i_ctx_p		8983590	0					
ANR	8983799	Identifier	i_ctx_p		8983590	0					
ANR	8983800	Argument	& CIEdict1		8983590	1					
ANR	8983801	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983802	UnaryOperator	&		8983590	0					
ANR	8983803	Identifier	CIEdict1		8983590	1					
ANR	8983804	Argument	"( char * ) ""RangeLMN"""		8983590	2					
ANR	8983805	CastExpression	"( char * ) ""RangeLMN"""		8983590	0					
ANR	8983806	CastTarget	char *		8983590	0					
ANR	8983807	PrimaryExpression	"""RangeLMN"""		8983590	1					
ANR	8983808	Argument	md5		8983590	3					
ANR	8983809	Identifier	md5		8983590	0					
ANR	8983810	ReturnStatement	return 0 ;	2114:8:68296:68304	8983590	1	True				
ANR	8983811	PrimaryExpression	0		8983590	0					
ANR	8983812	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		8983590	13					
ANR	8983813	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2115:8:68314:68371	8983590	0	True				
ANR	8983814	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8983590	0					
ANR	8983815	UnaryOperator	!		8983590	0					
ANR	8983816	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8983590	1					
ANR	8983817	Callee	hashdictkey		8983590	0					
ANR	8983818	Identifier	hashdictkey		8983590	0					
ANR	8983819	ArgumentList	i_ctx_p		8983590	1					
ANR	8983820	Argument	i_ctx_p		8983590	0					
ANR	8983821	Identifier	i_ctx_p		8983590	0					
ANR	8983822	Argument	& CIEdict1		8983590	1					
ANR	8983823	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983824	UnaryOperator	&		8983590	0					
ANR	8983825	Identifier	CIEdict1		8983590	1					
ANR	8983826	Argument	"( char * ) ""DecodeLMN"""		8983590	2					
ANR	8983827	CastExpression	"( char * ) ""DecodeLMN"""		8983590	0					
ANR	8983828	CastTarget	char *		8983590	0					
ANR	8983829	PrimaryExpression	"""DecodeLMN"""		8983590	1					
ANR	8983830	Argument	md5		8983590	3					
ANR	8983831	Identifier	md5		8983590	0					
ANR	8983832	ReturnStatement	return 0 ;	2116:8:68382:68390	8983590	1	True				
ANR	8983833	PrimaryExpression	0		8983590	0					
ANR	8983834	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		8983590	14					
ANR	8983835	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2117:8:68400:68456	8983590	0	True				
ANR	8983836	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8983590	0					
ANR	8983837	UnaryOperator	!		8983590	0					
ANR	8983838	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8983590	1					
ANR	8983839	Callee	hashdictkey		8983590	0					
ANR	8983840	Identifier	hashdictkey		8983590	0					
ANR	8983841	ArgumentList	i_ctx_p		8983590	1					
ANR	8983842	Argument	i_ctx_p		8983590	0					
ANR	8983843	Identifier	i_ctx_p		8983590	0					
ANR	8983844	Argument	& CIEdict1		8983590	1					
ANR	8983845	UnaryOperationExpression	& CIEdict1		8983590	0					
ANR	8983846	UnaryOperator	&		8983590	0					
ANR	8983847	Identifier	CIEdict1		8983590	1					
ANR	8983848	Argument	"( char * ) ""MatrixMN"""		8983590	2					
ANR	8983849	CastExpression	"( char * ) ""MatrixMN"""		8983590	0					
ANR	8983850	CastTarget	char *		8983590	0					
ANR	8983851	PrimaryExpression	"""MatrixMN"""		8983590	1					
ANR	8983852	Argument	md5		8983590	3					
ANR	8983853	Identifier	md5		8983590	0					
ANR	8983854	ReturnStatement	return 0 ;	2118:8:68467:68475	8983590	1	True				
ANR	8983855	PrimaryExpression	0		8983590	0					
ANR	8983856	ReturnStatement	return 1 ;	2119:4:68481:68489	8983590	15	True				
ANR	8983857	PrimaryExpression	1		8983590	0					
ANR	8983858	ReturnType	static int		8983590	1					
ANR	8983859	Identifier	hashcieaspace		8983590	2					
ANR	8983860	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		8983590	3					
ANR	8983861	Parameter	i_ctx_t * i_ctx_p	2090:25:67415:67430	8983590	0	True				
ANR	8983862	ParameterType	i_ctx_t *		8983590	0					
ANR	8983863	Identifier	i_ctx_p		8983590	1					
ANR	8983864	Parameter	ref * space	2090:43:67433:67442	8983590	1	True				
ANR	8983865	ParameterType	ref *		8983590	0					
ANR	8983866	Identifier	space		8983590	1					
ANR	8983867	Parameter	gs_md5_state_t * md5	2090:55:67445:67463	8983590	2	True				
ANR	8983868	ParameterType	gs_md5_state_t *		8983590	0					
ANR	8983869	Identifier	md5		8983590	1					
ANR	8983870	CFGEntryNode	ENTRY		8983590		True				
ANR	8983871	CFGExitNode	EXIT		8983590		True				
ANR	8983872	Symbol	spacename		8983590						
ANR	8983873	Symbol	hashdictkey		8983590						
ANR	8983874	Symbol	code		8983590						
ANR	8983875	Symbol	& spacename		8983590						
ANR	8983876	Symbol	array_get		8983590						
ANR	8983877	Symbol	& CIEdict1		8983590						
ANR	8983878	Symbol	space		8983590						
ANR	8983879	Symbol	spacename . value . pname		8983590						
ANR	8983880	Symbol	i_ctx_p		8983590						
ANR	8983881	Symbol	& spacename . value . pname		8983590						
ANR	8983882	Symbol	spacename . value		8983590						
ANR	8983883	Symbol	& spacename . value		8983590						
ANR	8983884	Symbol	CIEdict1		8983590						
ANR	8983885	Symbol	imemory		8983590						
ANR	8983886	Symbol	md5		8983590						
ANR	8983887	Function	setcieaspace	2122:0:68494:70196							
ANR	8983888	FunctionDef	"setcieaspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8983887	0					
ANR	8983889	CompoundStatement		2123:0:68582:70196	8983887	0					
ANR	8983890	IdentifierDeclStatement	int code = 0 ;	2124:4:68588:68600	8983887	0	True				
ANR	8983891	IdentifierDecl	code = 0		8983887	0					
ANR	8983892	IdentifierDeclType	int		8983887	0					
ANR	8983893	Identifier	code		8983887	1					
ANR	8983894	AssignmentExpression	code = 0		8983887	2		=			
ANR	8983895	Identifier	code		8983887	0					
ANR	8983896	PrimaryExpression	0		8983887	1					
ANR	8983897	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2125:4:68606:68625	8983887	1	True				
ANR	8983898	IdentifierDecl	CIEDict		8983887	0					
ANR	8983899	IdentifierDeclType	ref		8983887	0					
ANR	8983900	Identifier	CIEDict		8983887	1					
ANR	8983901	IdentifierDecl	* nocie		8983887	1					
ANR	8983902	IdentifierDeclType	ref *		8983887	0					
ANR	8983903	Identifier	nocie		8983887	1					
ANR	8983904	IdentifierDeclStatement	ulong dictkey ;	2126:4:68631:68644	8983887	2	True				
ANR	8983905	IdentifierDecl	dictkey		8983887	0					
ANR	8983906	IdentifierDeclType	ulong		8983887	0					
ANR	8983907	Identifier	dictkey		8983887	1					
ANR	8983908	IdentifierDeclStatement	gs_md5_state_t md5 ;	2127:4:68650:68668	8983887	3	True				
ANR	8983909	IdentifierDecl	md5		8983887	0					
ANR	8983910	IdentifierDeclType	gs_md5_state_t		8983887	0					
ANR	8983911	Identifier	md5		8983887	1					
ANR	8983912	IdentifierDeclStatement	byte key [ 16 ] ;	2128:4:68674:68686	8983887	4	True				
ANR	8983913	IdentifierDecl	key [ 16 ]		8983887	0					
ANR	8983914	IdentifierDeclType	byte [ 16 ]		8983887	0					
ANR	8983915	Identifier	key		8983887	1					
ANR	8983916	PrimaryExpression	16		8983887	2					
ANR	8983917	IfStatement	if ( i_ctx_p -> language_level < 2 )		8983887	5					
ANR	8983918	Condition	i_ctx_p -> language_level < 2	2130:8:68697:68723	8983887	0	True				
ANR	8983919	RelationalExpression	i_ctx_p -> language_level < 2		8983887	0		<			
ANR	8983920	PtrMemberAccess	i_ctx_p -> language_level		8983887	0					
ANR	8983921	Identifier	i_ctx_p		8983887	0					
ANR	8983922	Identifier	language_level		8983887	1					
ANR	8983923	PrimaryExpression	2		8983887	1					
ANR	8983924	ExpressionStatement	return_error ( gs_error_undefined )	2131:8:68734:68766	8983887	1	True				
ANR	8983925	CallExpression	return_error ( gs_error_undefined )		8983887	0					
ANR	8983926	Callee	return_error		8983887	0					
ANR	8983927	Identifier	return_error		8983887	0					
ANR	8983928	ArgumentList	gs_error_undefined		8983887	1					
ANR	8983929	Argument	gs_error_undefined		8983887	0					
ANR	8983930	Identifier	gs_error_undefined		8983887	0					
ANR	8983931	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2133:4:68773:68825	8983887	6	True				
ANR	8983932	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8983887	0		=			
ANR	8983933	Identifier	code		8983887	0					
ANR	8983934	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8983887	1					
ANR	8983935	Callee	dict_find_string		8983887	0					
ANR	8983936	Identifier	dict_find_string		8983887	0					
ANR	8983937	ArgumentList	systemdict		8983887	1					
ANR	8983938	Argument	systemdict		8983887	0					
ANR	8983939	Identifier	systemdict		8983887	0					
ANR	8983940	Argument	"""NOCIE"""		8983887	1					
ANR	8983941	PrimaryExpression	"""NOCIE"""		8983887	0					
ANR	8983942	Argument	& nocie		8983887	2					
ANR	8983943	UnaryOperationExpression	& nocie		8983887	0					
ANR	8983944	UnaryOperator	&		8983887	0					
ANR	8983945	Identifier	nocie		8983887	1					
ANR	8983946	IfStatement	if ( code > 0 )		8983887	7					
ANR	8983947	Condition	code > 0	2134:8:68835:68842	8983887	0	True				
ANR	8983948	RelationalExpression	code > 0		8983887	0		>			
ANR	8983949	Identifier	code		8983887	0					
ANR	8983950	PrimaryExpression	0		8983887	1					
ANR	8983951	CompoundStatement		12:18:262:262	8983887	1					
ANR	8983952	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		8983887	0					
ANR	8983953	Condition	"! r_has_type ( nocie , t_boolean )"	2135:12:68859:68887	8983887	0	True				
ANR	8983954	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		8983887	0					
ANR	8983955	UnaryOperator	!		8983887	0					
ANR	8983956	CallExpression	"r_has_type ( nocie , t_boolean )"		8983887	1					
ANR	8983957	Callee	r_has_type		8983887	0					
ANR	8983958	Identifier	r_has_type		8983887	0					
ANR	8983959	ArgumentList	nocie		8983887	1					
ANR	8983960	Argument	nocie		8983887	0					
ANR	8983961	Identifier	nocie		8983887	0					
ANR	8983962	Argument	t_boolean		8983887	1					
ANR	8983963	Identifier	t_boolean		8983887	0					
ANR	8983964	ExpressionStatement	return_error ( gs_error_typecheck )	2136:12:68902:68934	8983887	1	True				
ANR	8983965	CallExpression	return_error ( gs_error_typecheck )		8983887	0					
ANR	8983966	Callee	return_error		8983887	0					
ANR	8983967	Identifier	return_error		8983887	0					
ANR	8983968	ArgumentList	gs_error_typecheck		8983887	1					
ANR	8983969	Argument	gs_error_typecheck		8983887	0					
ANR	8983970	Identifier	gs_error_typecheck		8983887	0					
ANR	8983971	IfStatement	if ( nocie -> value . boolval )		8983887	1					
ANR	8983972	Condition	nocie -> value . boolval	2137:12:68948:68967	8983887	0	True				
ANR	8983973	MemberAccess	nocie -> value . boolval		8983887	0					
ANR	8983974	PtrMemberAccess	nocie -> value		8983887	0					
ANR	8983975	Identifier	nocie		8983887	0					
ANR	8983976	Identifier	value		8983887	1					
ANR	8983977	Identifier	boolval		8983887	1					
ANR	8983978	ReturnStatement	"return setgrayspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2138:12:68982:69029	8983887	1	True				
ANR	8983979	CallExpression	"setgrayspace ( i_ctx_p , r , stage , cont , 1 )"		8983887	0					
ANR	8983980	Callee	setgrayspace		8983887	0					
ANR	8983981	Identifier	setgrayspace		8983887	0					
ANR	8983982	ArgumentList	i_ctx_p		8983887	1					
ANR	8983983	Argument	i_ctx_p		8983887	0					
ANR	8983984	Identifier	i_ctx_p		8983887	0					
ANR	8983985	Argument	r		8983887	1					
ANR	8983986	Identifier	r		8983887	0					
ANR	8983987	Argument	stage		8983887	2					
ANR	8983988	Identifier	stage		8983887	0					
ANR	8983989	Argument	cont		8983887	3					
ANR	8983990	Identifier	cont		8983887	0					
ANR	8983991	Argument	1		8983887	4					
ANR	8983992	PrimaryExpression	1		8983887	0					
ANR	8983993	ExpressionStatement	* cont = 0	2141:4:69042:69051	8983887	8	True				
ANR	8983994	AssignmentExpression	* cont = 0		8983887	0		=			
ANR	8983995	UnaryOperationExpression	* cont		8983887	0					
ANR	8983996	UnaryOperator	*		8983887	0					
ANR	8983997	Identifier	cont		8983887	1					
ANR	8983998	PrimaryExpression	0		8983887	1					
ANR	8983999	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2142:4:69057:69098	8983887	9	True				
ANR	8984000	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		8983887	0		=			
ANR	8984001	Identifier	code		8983887	0					
ANR	8984002	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		8983887	1					
ANR	8984003	Callee	array_get		8983887	0					
ANR	8984004	Identifier	array_get		8983887	0					
ANR	8984005	ArgumentList	imemory		8983887	1					
ANR	8984006	Argument	imemory		8983887	0					
ANR	8984007	Identifier	imemory		8983887	0					
ANR	8984008	Argument	r		8983887	1					
ANR	8984009	Identifier	r		8983887	0					
ANR	8984010	Argument	1		8983887	2					
ANR	8984011	PrimaryExpression	1		8983887	0					
ANR	8984012	Argument	& CIEDict		8983887	3					
ANR	8984013	UnaryOperationExpression	& CIEDict		8983887	0					
ANR	8984014	UnaryOperator	&		8983887	0					
ANR	8984015	Identifier	CIEDict		8983887	1					
ANR	8984016	IfStatement	if ( code < 0 )		8983887	10					
ANR	8984017	Condition	code < 0	2143:8:69108:69115	8983887	0	True				
ANR	8984018	RelationalExpression	code < 0		8983887	0		<			
ANR	8984019	Identifier	code		8983887	0					
ANR	8984020	PrimaryExpression	0		8983887	1					
ANR	8984021	ReturnStatement	return code ;	2144:8:69126:69137	8983887	1	True				
ANR	8984022	Identifier	code		8983887	0					
ANR	8984023	IfStatement	if ( ( * stage ) > 0 )		8983887	11					
ANR	8984024	Condition	( * stage ) > 0	2145:8:69147:69158	8983887	0	True				
ANR	8984025	RelationalExpression	( * stage ) > 0		8983887	0		>			
ANR	8984026	UnaryOperationExpression	* stage		8983887	0					
ANR	8984027	UnaryOperator	*		8983887	0					
ANR	8984028	Identifier	stage		8983887	1					
ANR	8984029	PrimaryExpression	0		8983887	1					
ANR	8984030	CompoundStatement		24:8:588:606	8983887	1					
ANR	8984031	IdentifierDeclStatement	gs_client_color cc ;	2146:8:69171:69189	8983887	0	True				
ANR	8984032	IdentifierDecl	cc		8983887	0					
ANR	8984033	IdentifierDeclType	gs_client_color		8983887	0					
ANR	8984034	Identifier	cc		8983887	1					
ANR	8984035	ExpressionStatement	cc . pattern = 0x00	2148:8:69200:69217	8983887	1	True				
ANR	8984036	AssignmentExpression	cc . pattern = 0x00		8983887	0		=			
ANR	8984037	MemberAccess	cc . pattern		8983887	0					
ANR	8984038	Identifier	cc		8983887	0					
ANR	8984039	Identifier	pattern		8983887	1					
ANR	8984040	PrimaryExpression	0x00		8983887	1					
ANR	8984041	ExpressionStatement	cc . paint . values [ 0 ] = 0	2149:8:69227:69249	8983887	2	True				
ANR	8984042	AssignmentExpression	cc . paint . values [ 0 ] = 0		8983887	0		=			
ANR	8984043	ArrayIndexing	cc . paint . values [ 0 ]		8983887	0					
ANR	8984044	MemberAccess	cc . paint . values		8983887	0					
ANR	8984045	MemberAccess	cc . paint		8983887	0					
ANR	8984046	Identifier	cc		8983887	0					
ANR	8984047	Identifier	paint		8983887	1					
ANR	8984048	Identifier	values		8983887	1					
ANR	8984049	PrimaryExpression	0		8983887	1					
ANR	8984050	PrimaryExpression	0		8983887	1					
ANR	8984051	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2150:8:69259:69287	8983887	3	True				
ANR	8984052	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8983887	0		=			
ANR	8984053	Identifier	code		8983887	0					
ANR	8984054	CallExpression	"gs_setcolor ( igs , & cc )"		8983887	1					
ANR	8984055	Callee	gs_setcolor		8983887	0					
ANR	8984056	Identifier	gs_setcolor		8983887	0					
ANR	8984057	ArgumentList	igs		8983887	1					
ANR	8984058	Argument	igs		8983887	0					
ANR	8984059	Identifier	igs		8983887	0					
ANR	8984060	Argument	& cc		8983887	1					
ANR	8984061	UnaryOperationExpression	& cc		8983887	0					
ANR	8984062	UnaryOperator	&		8983887	0					
ANR	8984063	Identifier	cc		8983887	1					
ANR	8984064	ExpressionStatement	* stage = 0	2151:8:69297:69307	8983887	4	True				
ANR	8984065	AssignmentExpression	* stage = 0		8983887	0		=			
ANR	8984066	UnaryOperationExpression	* stage		8983887	0					
ANR	8984067	UnaryOperator	*		8983887	0					
ANR	8984068	Identifier	stage		8983887	1					
ANR	8984069	PrimaryExpression	0		8983887	1					
ANR	8984070	ReturnStatement	return code ;	2152:8:69317:69328	8983887	5	True				
ANR	8984071	Identifier	code		8983887	0					
ANR	8984072	ExpressionStatement	gs_md5_init ( & md5 )	2154:4:69340:69357	8983887	12	True				
ANR	8984073	CallExpression	gs_md5_init ( & md5 )		8983887	0					
ANR	8984074	Callee	gs_md5_init		8983887	0					
ANR	8984075	Identifier	gs_md5_init		8983887	0					
ANR	8984076	ArgumentList	& md5		8983887	1					
ANR	8984077	Argument	& md5		8983887	0					
ANR	8984078	UnaryOperationExpression	& md5		8983887	0					
ANR	8984079	UnaryOperator	&		8983887	0					
ANR	8984080	Identifier	md5		8983887	1					
ANR	8984081	ExpressionStatement	dictkey = 0	2159:4:69548:69559	8983887	13	True				
ANR	8984082	AssignmentExpression	dictkey = 0		8983887	0		=			
ANR	8984083	Identifier	dictkey		8983887	0					
ANR	8984084	PrimaryExpression	0		8983887	1					
ANR	8984085	IfStatement	"if ( hashcieaspace ( i_ctx_p , r , & md5 ) )"		8983887	14					
ANR	8984086	Condition	"hashcieaspace ( i_ctx_p , r , & md5 )"	2160:8:69569:69599	8983887	0	True				
ANR	8984087	CallExpression	"hashcieaspace ( i_ctx_p , r , & md5 )"		8983887	0					
ANR	8984088	Callee	hashcieaspace		8983887	0					
ANR	8984089	Identifier	hashcieaspace		8983887	0					
ANR	8984090	ArgumentList	i_ctx_p		8983887	1					
ANR	8984091	Argument	i_ctx_p		8983887	0					
ANR	8984092	Identifier	i_ctx_p		8983887	0					
ANR	8984093	Argument	r		8983887	1					
ANR	8984094	Identifier	r		8983887	0					
ANR	8984095	Argument	& md5		8983887	2					
ANR	8984096	UnaryOperationExpression	& md5		8983887	0					
ANR	8984097	UnaryOperator	&		8983887	0					
ANR	8984098	Identifier	md5		8983887	1					
ANR	8984099	CompoundStatement		38:41:1019:1019	8983887	1					
ANR	8984100	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2167:8:69956:69980	8983887	0	True				
ANR	8984101	CallExpression	"gs_md5_finish ( & md5 , key )"		8983887	0					
ANR	8984102	Callee	gs_md5_finish		8983887	0					
ANR	8984103	Identifier	gs_md5_finish		8983887	0					
ANR	8984104	ArgumentList	& md5		8983887	1					
ANR	8984105	Argument	& md5		8983887	0					
ANR	8984106	UnaryOperationExpression	& md5		8983887	0					
ANR	8984107	UnaryOperator	&		8983887	0					
ANR	8984108	Identifier	md5		8983887	1					
ANR	8984109	Argument	key		8983887	1					
ANR	8984110	Identifier	key		8983887	0					
ANR	8984111	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2168:8:69990:70043	8983887	1	True				
ANR	8984112	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887	0		=			
ANR	8984113	Identifier	dictkey		8983887	0					
ANR	8984114	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887	1					
ANR	8984115	UnaryOperator	*		8983887	0					
ANR	8984116	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887	1					
ANR	8984117	CastTarget	ulong *		8983887	0					
ANR	8984118	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887	1					
ANR	8984119	UnaryOperator	&		8983887	0					
ANR	8984120	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887	1					
ANR	8984121	Identifier	key		8983887	0					
ANR	8984122	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		8983887	1		-			
ANR	8984123	SizeofExpression	sizeof ( key )		8983887	0					
ANR	8984124	Sizeof	sizeof		8983887	0					
ANR	8984125	SizeofOperand	key		8983887	1					
ANR	8984126	SizeofExpression	sizeof ( ulong )		8983887	1					
ANR	8984127	Sizeof	sizeof		8983887	0					
ANR	8984128	SizeofOperand	ulong		8983887	1					
ANR	8984129	ElseStatement	else		8983887	0					
ANR	8984130	CompoundStatement		47:11:1473:1473	8983887	0					
ANR	8984131	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2170:8:70066:70090	8983887	0	True				
ANR	8984132	CallExpression	"gs_md5_finish ( & md5 , key )"		8983887	0					
ANR	8984133	Callee	gs_md5_finish		8983887	0					
ANR	8984134	Identifier	gs_md5_finish		8983887	0					
ANR	8984135	ArgumentList	& md5		8983887	1					
ANR	8984136	Argument	& md5		8983887	0					
ANR	8984137	UnaryOperationExpression	& md5		8983887	0					
ANR	8984138	UnaryOperator	&		8983887	0					
ANR	8984139	Identifier	md5		8983887	1					
ANR	8984140	Argument	key		8983887	1					
ANR	8984141	Identifier	key		8983887	0					
ANR	8984142	ExpressionStatement	"code = cieaspace ( i_ctx_p , & CIEDict , dictkey )"	2172:4:70102:70146	8983887	15	True				
ANR	8984143	AssignmentExpression	"code = cieaspace ( i_ctx_p , & CIEDict , dictkey )"		8983887	0		=			
ANR	8984144	Identifier	code		8983887	0					
ANR	8984145	CallExpression	"cieaspace ( i_ctx_p , & CIEDict , dictkey )"		8983887	1					
ANR	8984146	Callee	cieaspace		8983887	0					
ANR	8984147	Identifier	cieaspace		8983887	0					
ANR	8984148	ArgumentList	i_ctx_p		8983887	1					
ANR	8984149	Argument	i_ctx_p		8983887	0					
ANR	8984150	Identifier	i_ctx_p		8983887	0					
ANR	8984151	Argument	& CIEDict		8983887	1					
ANR	8984152	UnaryOperationExpression	& CIEDict		8983887	0					
ANR	8984153	UnaryOperator	&		8983887	0					
ANR	8984154	Identifier	CIEDict		8983887	1					
ANR	8984155	Argument	dictkey		8983887	2					
ANR	8984156	Identifier	dictkey		8983887	0					
ANR	8984157	ExpressionStatement	( * stage ) ++	2173:4:70152:70162	8983887	16	True				
ANR	8984158	PostIncDecOperationExpression	( * stage ) ++		8983887	0					
ANR	8984159	UnaryOperationExpression	* stage		8983887	0					
ANR	8984160	UnaryOperator	*		8983887	0					
ANR	8984161	Identifier	stage		8983887	1					
ANR	8984162	IncDec	++		8983887	1					
ANR	8984163	ExpressionStatement	* cont = 1	2174:4:70168:70177	8983887	17	True				
ANR	8984164	AssignmentExpression	* cont = 1		8983887	0		=			
ANR	8984165	UnaryOperationExpression	* cont		8983887	0					
ANR	8984166	UnaryOperator	*		8983887	0					
ANR	8984167	Identifier	cont		8983887	1					
ANR	8984168	PrimaryExpression	1		8983887	1					
ANR	8984169	ReturnStatement	return code ;	2175:4:70183:70194	8983887	18	True				
ANR	8984170	Identifier	code		8983887	0					
ANR	8984171	ReturnType	static int		8983887	1					
ANR	8984172	Identifier	setcieaspace		8983887	2					
ANR	8984173	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8983887	3					
ANR	8984174	Parameter	i_ctx_t * i_ctx_p	2122:24:68518:68534	8983887	0	True				
ANR	8984175	ParameterType	i_ctx_t *		8983887	0					
ANR	8984176	Identifier	i_ctx_p		8983887	1					
ANR	8984177	Parameter	ref * r	2122:43:68537:68542	8983887	1	True				
ANR	8984178	ParameterType	ref *		8983887	0					
ANR	8984179	Identifier	r		8983887	1					
ANR	8984180	Parameter	int * stage	2122:51:68545:68554	8983887	2	True				
ANR	8984181	ParameterType	int *		8983887	0					
ANR	8984182	Identifier	stage		8983887	1					
ANR	8984183	Parameter	int * cont	2122:63:68557:68565	8983887	3	True				
ANR	8984184	ParameterType	int *		8983887	0					
ANR	8984185	Identifier	cont		8983887	1					
ANR	8984186	Parameter	int CIESubst	2122:74:68568:68579	8983887	4	True				
ANR	8984187	ParameterType	int		8983887	0					
ANR	8984188	Identifier	CIESubst		8983887	1					
ANR	8984189	CFGEntryNode	ENTRY		8983887		True				
ANR	8984190	CFGExitNode	EXIT		8983887		True				
ANR	8984191	Symbol	cc . pattern		8983887						
ANR	8984192	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8983887						
ANR	8984193	Symbol	code		8983887						
ANR	8984194	Symbol	i_ctx_p -> language_level		8983887						
ANR	8984195	Symbol	* cc		8983887						
ANR	8984196	Symbol	nocie -> value		8983887						
ANR	8984197	Symbol	gs_error_undefined		8983887						
ANR	8984198	Symbol	gs_setcolor		8983887						
ANR	8984199	Symbol	* key		8983887						
ANR	8984200	Symbol	* nocie		8983887						
ANR	8984201	Symbol	& cc		8983887						
ANR	8984202	Symbol	nocie -> value . boolval		8983887						
ANR	8984203	Symbol	r_has_type		8983887						
ANR	8984204	Symbol	gs_error_typecheck		8983887						
ANR	8984205	Symbol	igs		8983887						
ANR	8984206	Symbol	* cc . paint . values		8983887						
ANR	8984207	Symbol	* i_ctx_p		8983887						
ANR	8984208	Symbol	imemory		8983887						
ANR	8984209	Symbol	cont		8983887						
ANR	8984210	Symbol	nocie		8983887						
ANR	8984211	Symbol	CIESubst		8983887						
ANR	8984212	Symbol	key		8983887						
ANR	8984213	Symbol	cc		8983887						
ANR	8984214	Symbol	* stage		8983887						
ANR	8984215	Symbol	& md5		8983887						
ANR	8984216	Symbol	dict_find_string		8983887						
ANR	8984217	Symbol	hashcieaspace		8983887						
ANR	8984218	Symbol	array_get		8983887						
ANR	8984219	Symbol	dictkey		8983887						
ANR	8984220	Symbol	& nocie		8983887						
ANR	8984221	Symbol	t_boolean		8983887						
ANR	8984222	Symbol	r		8983887						
ANR	8984223	Symbol	* cc . paint		8983887						
ANR	8984224	Symbol	cieaspace		8983887						
ANR	8984225	Symbol	stage		8983887						
ANR	8984226	Symbol	CIEDict		8983887						
ANR	8984227	Symbol	* cont		8983887						
ANR	8984228	Symbol	& CIEDict		8983887						
ANR	8984229	Symbol	i_ctx_p		8983887						
ANR	8984230	Symbol	cc . paint		8983887						
ANR	8984231	Symbol	setgrayspace		8983887						
ANR	8984232	Symbol	cc . paint . values		8983887						
ANR	8984233	Symbol	systemdict		8983887						
ANR	8984234	Symbol	md5		8983887						
ANR	8984235	Function	validatecieaspace	2177:0:70198:72375							
ANR	8984236	FunctionDef	"validatecieaspace (i_ctx_t * i_ctx_p , ref * * r)"		8984235	0					
ANR	8984237	CompoundStatement		2178:0:70255:72375	8984235	0					
ANR	8984238	IdentifierDeclStatement	int code ;	2179:4:70261:70269	8984235	0	True				
ANR	8984239	IdentifierDecl	code		8984235	0					
ANR	8984240	IdentifierDeclType	int		8984235	0					
ANR	8984241	Identifier	code		8984235	1					
ANR	8984242	IdentifierDeclStatement	float value [ 9 ] ;	2180:4:70275:70289	8984235	1	True				
ANR	8984243	IdentifierDecl	value [ 9 ]		8984235	0					
ANR	8984244	IdentifierDeclType	float [ 9 ]		8984235	0					
ANR	8984245	Identifier	value		8984235	1					
ANR	8984246	PrimaryExpression	9		8984235	2					
ANR	8984247	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , * tempref ;"	2181:4:70295:70336	8984235	2	True				
ANR	8984248	IdentifierDecl	CIEdict		8984235	0					
ANR	8984249	IdentifierDeclType	ref		8984235	0					
ANR	8984250	Identifier	CIEdict		8984235	1					
ANR	8984251	IdentifierDecl	* CIEspace = * r		8984235	1					
ANR	8984252	IdentifierDeclType	ref *		8984235	0					
ANR	8984253	Identifier	CIEspace		8984235	1					
ANR	8984254	AssignmentExpression	* CIEspace = * r		8984235	2		=			
ANR	8984255	Identifier	CIEspace		8984235	0					
ANR	8984256	UnaryOperationExpression	* r		8984235	1					
ANR	8984257	UnaryOperator	*		8984235	0					
ANR	8984258	Identifier	r		8984235	1					
ANR	8984259	IdentifierDecl	* tempref		8984235	2					
ANR	8984260	IdentifierDeclType	ref *		8984235	0					
ANR	8984261	Identifier	tempref		8984235	1					
ANR	8984262	IfStatement	if ( ! r_is_array ( CIEspace ) )		8984235	3					
ANR	8984263	Condition	! r_is_array ( CIEspace )	2183:8:70347:70367	8984235	0	True				
ANR	8984264	UnaryOperationExpression	! r_is_array ( CIEspace )		8984235	0					
ANR	8984265	UnaryOperator	!		8984235	0					
ANR	8984266	CallExpression	r_is_array ( CIEspace )		8984235	1					
ANR	8984267	Callee	r_is_array		8984235	0					
ANR	8984268	Identifier	r_is_array		8984235	0					
ANR	8984269	ArgumentList	CIEspace		8984235	1					
ANR	8984270	Argument	CIEspace		8984235	0					
ANR	8984271	Identifier	CIEspace		8984235	0					
ANR	8984272	ExpressionStatement	return_error ( gs_error_typecheck )	2184:8:70378:70410	8984235	1	True				
ANR	8984273	CallExpression	return_error ( gs_error_typecheck )		8984235	0					
ANR	8984274	Callee	return_error		8984235	0					
ANR	8984275	Identifier	return_error		8984235	0					
ANR	8984276	ArgumentList	gs_error_typecheck		8984235	1					
ANR	8984277	Argument	gs_error_typecheck		8984235	0					
ANR	8984278	Identifier	gs_error_typecheck		8984235	0					
ANR	8984279	IfStatement	if ( r_size ( CIEspace ) != 2 )		8984235	4					
ANR	8984280	Condition	r_size ( CIEspace ) != 2	2186:8:70481:70501	8984235	0	True				
ANR	8984281	EqualityExpression	r_size ( CIEspace ) != 2		8984235	0		!=			
ANR	8984282	CallExpression	r_size ( CIEspace )		8984235	0					
ANR	8984283	Callee	r_size		8984235	0					
ANR	8984284	Identifier	r_size		8984235	0					
ANR	8984285	ArgumentList	CIEspace		8984235	1					
ANR	8984286	Argument	CIEspace		8984235	0					
ANR	8984287	Identifier	CIEspace		8984235	0					
ANR	8984288	PrimaryExpression	2		8984235	1					
ANR	8984289	ExpressionStatement	return_error ( gs_error_rangecheck )	2187:8:70512:70545	8984235	1	True				
ANR	8984290	CallExpression	return_error ( gs_error_rangecheck )		8984235	0					
ANR	8984291	Callee	return_error		8984235	0					
ANR	8984292	Identifier	return_error		8984235	0					
ANR	8984293	ArgumentList	gs_error_rangecheck		8984235	1					
ANR	8984294	Argument	gs_error_rangecheck		8984235	0					
ANR	8984295	Identifier	gs_error_rangecheck		8984235	0					
ANR	8984296	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2189:4:70552:70600	8984235	5	True				
ANR	8984297	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		8984235	0		=			
ANR	8984298	Identifier	code		8984235	0					
ANR	8984299	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		8984235	1					
ANR	8984300	Callee	array_get		8984235	0					
ANR	8984301	Identifier	array_get		8984235	0					
ANR	8984302	ArgumentList	imemory		8984235	1					
ANR	8984303	Argument	imemory		8984235	0					
ANR	8984304	Identifier	imemory		8984235	0					
ANR	8984305	Argument	CIEspace		8984235	1					
ANR	8984306	Identifier	CIEspace		8984235	0					
ANR	8984307	Argument	1		8984235	2					
ANR	8984308	PrimaryExpression	1		8984235	0					
ANR	8984309	Argument	& CIEdict		8984235	3					
ANR	8984310	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984311	UnaryOperator	&		8984235	0					
ANR	8984312	Identifier	CIEdict		8984235	1					
ANR	8984313	IfStatement	if ( code < 0 )		8984235	6					
ANR	8984314	Condition	code < 0	2190:8:70610:70617	8984235	0	True				
ANR	8984315	RelationalExpression	code < 0		8984235	0		<			
ANR	8984316	Identifier	code		8984235	0					
ANR	8984317	PrimaryExpression	0		8984235	1					
ANR	8984318	ReturnStatement	return code ;	2191:8:70628:70639	8984235	1	True				
ANR	8984319	Identifier	code		8984235	0					
ANR	8984320	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2193:4:70646:70684	8984235	7	True				
ANR	8984321	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		8984235	0					
ANR	8984322	Callee	check_read_type		8984235	0					
ANR	8984323	Identifier	check_read_type		8984235	0					
ANR	8984324	ArgumentList	CIEdict		8984235	1					
ANR	8984325	Argument	CIEdict		8984235	0					
ANR	8984326	Identifier	CIEdict		8984235	0					
ANR	8984327	Argument	t_dictionary		8984235	1					
ANR	8984328	Identifier	t_dictionary		8984235	0					
ANR	8984329	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"	2196:4:70760:70801	8984235	8	True				
ANR	8984330	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"		8984235	0		=			
ANR	8984331	Identifier	code		8984235	0					
ANR	8984332	CallExpression	"checkWhitePoint ( i_ctx_p , & CIEdict )"		8984235	1					
ANR	8984333	Callee	checkWhitePoint		8984235	0					
ANR	8984334	Identifier	checkWhitePoint		8984235	0					
ANR	8984335	ArgumentList	i_ctx_p		8984235	1					
ANR	8984336	Argument	i_ctx_p		8984235	0					
ANR	8984337	Identifier	i_ctx_p		8984235	0					
ANR	8984338	Argument	& CIEdict		8984235	1					
ANR	8984339	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984340	UnaryOperator	&		8984235	0					
ANR	8984341	Identifier	CIEdict		8984235	1					
ANR	8984342	IfStatement	if ( code != 0 )		8984235	9					
ANR	8984343	Condition	code != 0	2197:8:70811:70819	8984235	0	True				
ANR	8984344	EqualityExpression	code != 0		8984235	0		!=			
ANR	8984345	Identifier	code		8984235	0					
ANR	8984346	PrimaryExpression	0		8984235	1					
ANR	8984347	ReturnStatement	return code ;	2198:8:70830:70841	8984235	1	True				
ANR	8984348	Identifier	code		8984235	0					
ANR	8984349	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2203:4:70951:71004	8984235	10	True				
ANR	8984350	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984235	0		=			
ANR	8984351	Identifier	code		8984235	0					
ANR	8984352	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984235	1					
ANR	8984353	Callee	dict_find_string		8984235	0					
ANR	8984354	Identifier	dict_find_string		8984235	0					
ANR	8984355	ArgumentList	& CIEdict		8984235	1					
ANR	8984356	Argument	& CIEdict		8984235	0					
ANR	8984357	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984358	UnaryOperator	&		8984235	0					
ANR	8984359	Identifier	CIEdict		8984235	1					
ANR	8984360	Argument	"""RangeA"""		8984235	1					
ANR	8984361	PrimaryExpression	"""RangeA"""		8984235	0					
ANR	8984362	Argument	& tempref		8984235	2					
ANR	8984363	UnaryOperationExpression	& tempref		8984235	0					
ANR	8984364	UnaryOperator	&		8984235	0					
ANR	8984365	Identifier	tempref		8984235	1					
ANR	8984366	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8984235	11					
ANR	8984367	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2204:8:71014:71053	8984235	0	True				
ANR	8984368	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8984235	0		&&			
ANR	8984369	RelationalExpression	code > 0		8984235	0		>			
ANR	8984370	Identifier	code		8984235	0					
ANR	8984371	PrimaryExpression	0		8984235	1					
ANR	8984372	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984373	UnaryOperator	!		8984235	0					
ANR	8984374	CallExpression	"r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984375	Callee	r_has_type		8984235	0					
ANR	8984376	Identifier	r_has_type		8984235	0					
ANR	8984377	ArgumentList	tempref		8984235	1					
ANR	8984378	Argument	tempref		8984235	0					
ANR	8984379	Identifier	tempref		8984235	0					
ANR	8984380	Argument	t_null		8984235	1					
ANR	8984381	Identifier	t_null		8984235	0					
ANR	8984382	CompoundStatement		27:50:800:800	8984235	1					
ANR	8984383	IfStatement	if ( ! r_is_array ( tempref ) )		8984235	0					
ANR	8984384	Condition	! r_is_array ( tempref )	2206:12:71113:71132	8984235	0	True				
ANR	8984385	UnaryOperationExpression	! r_is_array ( tempref )		8984235	0					
ANR	8984386	UnaryOperator	!		8984235	0					
ANR	8984387	CallExpression	r_is_array ( tempref )		8984235	1					
ANR	8984388	Callee	r_is_array		8984235	0					
ANR	8984389	Identifier	r_is_array		8984235	0					
ANR	8984390	ArgumentList	tempref		8984235	1					
ANR	8984391	Argument	tempref		8984235	0					
ANR	8984392	Identifier	tempref		8984235	0					
ANR	8984393	ExpressionStatement	return_error ( gs_error_typecheck )	2207:12:71147:71179	8984235	1	True				
ANR	8984394	CallExpression	return_error ( gs_error_typecheck )		8984235	0					
ANR	8984395	Callee	return_error		8984235	0					
ANR	8984396	Identifier	return_error		8984235	0					
ANR	8984397	ArgumentList	gs_error_typecheck		8984235	1					
ANR	8984398	Argument	gs_error_typecheck		8984235	0					
ANR	8984399	Identifier	gs_error_typecheck		8984235	0					
ANR	8984400	IfStatement	if ( r_size ( tempref ) != 2 )		8984235	1					
ANR	8984401	Condition	r_size ( tempref ) != 2	2208:12:71193:71212	8984235	0	True				
ANR	8984402	EqualityExpression	r_size ( tempref ) != 2		8984235	0		!=			
ANR	8984403	CallExpression	r_size ( tempref )		8984235	0					
ANR	8984404	Callee	r_size		8984235	0					
ANR	8984405	Identifier	r_size		8984235	0					
ANR	8984406	ArgumentList	tempref		8984235	1					
ANR	8984407	Argument	tempref		8984235	0					
ANR	8984408	Identifier	tempref		8984235	0					
ANR	8984409	PrimaryExpression	2		8984235	1					
ANR	8984410	ExpressionStatement	return_error ( gs_error_rangecheck )	2209:12:71227:71260	8984235	1	True				
ANR	8984411	CallExpression	return_error ( gs_error_rangecheck )		8984235	0					
ANR	8984412	Callee	return_error		8984235	0					
ANR	8984413	Identifier	return_error		8984235	0					
ANR	8984414	ArgumentList	gs_error_rangecheck		8984235	1					
ANR	8984415	Argument	gs_error_rangecheck		8984235	0					
ANR	8984416	Identifier	gs_error_rangecheck		8984235	0					
ANR	8984417	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , value )"	2211:8:71271:71325	8984235	2	True				
ANR	8984418	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , value )"		8984235	0		=			
ANR	8984419	Identifier	code		8984235	0					
ANR	8984420	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , value )"		8984235	1					
ANR	8984421	Callee	get_cie_param_array		8984235	0					
ANR	8984422	Identifier	get_cie_param_array		8984235	0					
ANR	8984423	ArgumentList	imemory		8984235	1					
ANR	8984424	Argument	imemory		8984235	0					
ANR	8984425	Identifier	imemory		8984235	0					
ANR	8984426	Argument	tempref		8984235	1					
ANR	8984427	Identifier	tempref		8984235	0					
ANR	8984428	Argument	2		8984235	2					
ANR	8984429	PrimaryExpression	2		8984235	0					
ANR	8984430	Argument	value		8984235	3					
ANR	8984431	Identifier	value		8984235	0					
ANR	8984432	IfStatement	if ( code < 0 )		8984235	3					
ANR	8984433	Condition	code < 0	2212:12:71339:71346	8984235	0	True				
ANR	8984434	RelationalExpression	code < 0		8984235	0		<			
ANR	8984435	Identifier	code		8984235	0					
ANR	8984436	PrimaryExpression	0		8984235	1					
ANR	8984437	ReturnStatement	return code ;	2213:12:71361:71372	8984235	1	True				
ANR	8984438	Identifier	code		8984235	0					
ANR	8984439	IfStatement	if ( value [ 1 ] < value [ 0 ] )		8984235	4					
ANR	8984440	Condition	value [ 1 ] < value [ 0 ]	2214:12:71386:71404	8984235	0	True				
ANR	8984441	RelationalExpression	value [ 1 ] < value [ 0 ]		8984235	0		<			
ANR	8984442	ArrayIndexing	value [ 1 ]		8984235	0					
ANR	8984443	Identifier	value		8984235	0					
ANR	8984444	PrimaryExpression	1		8984235	1					
ANR	8984445	ArrayIndexing	value [ 0 ]		8984235	1					
ANR	8984446	Identifier	value		8984235	0					
ANR	8984447	PrimaryExpression	0		8984235	1					
ANR	8984448	ExpressionStatement	return_error ( gs_error_rangecheck )	2215:12:71419:71452	8984235	1	True				
ANR	8984449	CallExpression	return_error ( gs_error_rangecheck )		8984235	0					
ANR	8984450	Callee	return_error		8984235	0					
ANR	8984451	Identifier	return_error		8984235	0					
ANR	8984452	ArgumentList	gs_error_rangecheck		8984235	1					
ANR	8984453	Argument	gs_error_rangecheck		8984235	0					
ANR	8984454	Identifier	gs_error_rangecheck		8984235	0					
ANR	8984455	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"	2218:4:71465:71519	8984235	12	True				
ANR	8984456	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"		8984235	0		=			
ANR	8984457	Identifier	code		8984235	0					
ANR	8984458	CallExpression	"dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"		8984235	1					
ANR	8984459	Callee	dict_find_string		8984235	0					
ANR	8984460	Identifier	dict_find_string		8984235	0					
ANR	8984461	ArgumentList	& CIEdict		8984235	1					
ANR	8984462	Argument	& CIEdict		8984235	0					
ANR	8984463	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984464	UnaryOperator	&		8984235	0					
ANR	8984465	Identifier	CIEdict		8984235	1					
ANR	8984466	Argument	"""DecodeA"""		8984235	1					
ANR	8984467	PrimaryExpression	"""DecodeA"""		8984235	0					
ANR	8984468	Argument	& tempref		8984235	2					
ANR	8984469	UnaryOperationExpression	& tempref		8984235	0					
ANR	8984470	UnaryOperator	&		8984235	0					
ANR	8984471	Identifier	tempref		8984235	1					
ANR	8984472	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8984235	13					
ANR	8984473	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2219:8:71529:71568	8984235	0	True				
ANR	8984474	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8984235	0		&&			
ANR	8984475	RelationalExpression	code > 0		8984235	0		>			
ANR	8984476	Identifier	code		8984235	0					
ANR	8984477	PrimaryExpression	0		8984235	1					
ANR	8984478	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984479	UnaryOperator	!		8984235	0					
ANR	8984480	CallExpression	"r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984481	Callee	r_has_type		8984235	0					
ANR	8984482	Identifier	r_has_type		8984235	0					
ANR	8984483	ArgumentList	tempref		8984235	1					
ANR	8984484	Argument	tempref		8984235	0					
ANR	8984485	Identifier	tempref		8984235	0					
ANR	8984486	Argument	t_null		8984235	1					
ANR	8984487	Identifier	t_null		8984235	0					
ANR	8984488	CompoundStatement		42:50:1315:1315	8984235	1					
ANR	8984489	ExpressionStatement	check_proc ( * tempref )	2220:8:71581:71601	8984235	0	True				
ANR	8984490	CallExpression	check_proc ( * tempref )		8984235	0					
ANR	8984491	Callee	check_proc		8984235	0					
ANR	8984492	Identifier	check_proc		8984235	0					
ANR	8984493	ArgumentList	* tempref		8984235	1					
ANR	8984494	Argument	* tempref		8984235	0					
ANR	8984495	UnaryOperationExpression	* tempref		8984235	0					
ANR	8984496	UnaryOperator	*		8984235	0					
ANR	8984497	Identifier	tempref		8984235	1					
ANR	8984498	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"	2223:4:71614:71668	8984235	14	True				
ANR	8984499	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"		8984235	0		=			
ANR	8984500	Identifier	code		8984235	0					
ANR	8984501	CallExpression	"dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"		8984235	1					
ANR	8984502	Callee	dict_find_string		8984235	0					
ANR	8984503	Identifier	dict_find_string		8984235	0					
ANR	8984504	ArgumentList	& CIEdict		8984235	1					
ANR	8984505	Argument	& CIEdict		8984235	0					
ANR	8984506	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984507	UnaryOperator	&		8984235	0					
ANR	8984508	Identifier	CIEdict		8984235	1					
ANR	8984509	Argument	"""MatrixA"""		8984235	1					
ANR	8984510	PrimaryExpression	"""MatrixA"""		8984235	0					
ANR	8984511	Argument	& tempref		8984235	2					
ANR	8984512	UnaryOperationExpression	& tempref		8984235	0					
ANR	8984513	UnaryOperator	&		8984235	0					
ANR	8984514	Identifier	tempref		8984235	1					
ANR	8984515	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8984235	15					
ANR	8984516	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2224:8:71678:71717	8984235	0	True				
ANR	8984517	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8984235	0		&&			
ANR	8984518	RelationalExpression	code > 0		8984235	0		>			
ANR	8984519	Identifier	code		8984235	0					
ANR	8984520	PrimaryExpression	0		8984235	1					
ANR	8984521	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984522	UnaryOperator	!		8984235	0					
ANR	8984523	CallExpression	"r_has_type ( tempref , t_null )"		8984235	1					
ANR	8984524	Callee	r_has_type		8984235	0					
ANR	8984525	Identifier	r_has_type		8984235	0					
ANR	8984526	ArgumentList	tempref		8984235	1					
ANR	8984527	Argument	tempref		8984235	0					
ANR	8984528	Identifier	tempref		8984235	0					
ANR	8984529	Argument	t_null		8984235	1					
ANR	8984530	Identifier	t_null		8984235	0					
ANR	8984531	CompoundStatement		47:50:1464:1464	8984235	1					
ANR	8984532	IfStatement	if ( ! r_is_array ( tempref ) )		8984235	0					
ANR	8984533	Condition	! r_is_array ( tempref )	2225:12:71734:71753	8984235	0	True				
ANR	8984534	UnaryOperationExpression	! r_is_array ( tempref )		8984235	0					
ANR	8984535	UnaryOperator	!		8984235	0					
ANR	8984536	CallExpression	r_is_array ( tempref )		8984235	1					
ANR	8984537	Callee	r_is_array		8984235	0					
ANR	8984538	Identifier	r_is_array		8984235	0					
ANR	8984539	ArgumentList	tempref		8984235	1					
ANR	8984540	Argument	tempref		8984235	0					
ANR	8984541	Identifier	tempref		8984235	0					
ANR	8984542	ExpressionStatement	return_error ( gs_error_typecheck )	2226:12:71768:71800	8984235	1	True				
ANR	8984543	CallExpression	return_error ( gs_error_typecheck )		8984235	0					
ANR	8984544	Callee	return_error		8984235	0					
ANR	8984545	Identifier	return_error		8984235	0					
ANR	8984546	ArgumentList	gs_error_typecheck		8984235	1					
ANR	8984547	Argument	gs_error_typecheck		8984235	0					
ANR	8984548	Identifier	gs_error_typecheck		8984235	0					
ANR	8984549	IfStatement	if ( r_size ( tempref ) != 3 )		8984235	1					
ANR	8984550	Condition	r_size ( tempref ) != 3	2227:12:71814:71833	8984235	0	True				
ANR	8984551	EqualityExpression	r_size ( tempref ) != 3		8984235	0		!=			
ANR	8984552	CallExpression	r_size ( tempref )		8984235	0					
ANR	8984553	Callee	r_size		8984235	0					
ANR	8984554	Identifier	r_size		8984235	0					
ANR	8984555	ArgumentList	tempref		8984235	1					
ANR	8984556	Argument	tempref		8984235	0					
ANR	8984557	Identifier	tempref		8984235	0					
ANR	8984558	PrimaryExpression	3		8984235	1					
ANR	8984559	ExpressionStatement	return_error ( gs_error_rangecheck )	2228:12:71848:71881	8984235	1	True				
ANR	8984560	CallExpression	return_error ( gs_error_rangecheck )		8984235	0					
ANR	8984561	Callee	return_error		8984235	0					
ANR	8984562	Identifier	return_error		8984235	0					
ANR	8984563	ArgumentList	gs_error_rangecheck		8984235	1					
ANR	8984564	Argument	gs_error_rangecheck		8984235	0					
ANR	8984565	Identifier	gs_error_rangecheck		8984235	0					
ANR	8984566	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	2229:8:71891:71945	8984235	2	True				
ANR	8984567	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		8984235	0		=			
ANR	8984568	Identifier	code		8984235	0					
ANR	8984569	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		8984235	1					
ANR	8984570	Callee	get_cie_param_array		8984235	0					
ANR	8984571	Identifier	get_cie_param_array		8984235	0					
ANR	8984572	ArgumentList	imemory		8984235	1					
ANR	8984573	Argument	imemory		8984235	0					
ANR	8984574	Identifier	imemory		8984235	0					
ANR	8984575	Argument	tempref		8984235	1					
ANR	8984576	Identifier	tempref		8984235	0					
ANR	8984577	Argument	3		8984235	2					
ANR	8984578	PrimaryExpression	3		8984235	0					
ANR	8984579	Argument	value		8984235	3					
ANR	8984580	Identifier	value		8984235	0					
ANR	8984581	IfStatement	if ( code < 0 )		8984235	3					
ANR	8984582	Condition	code < 0	2230:12:71959:71966	8984235	0	True				
ANR	8984583	RelationalExpression	code < 0		8984235	0		<			
ANR	8984584	Identifier	code		8984235	0					
ANR	8984585	PrimaryExpression	0		8984235	1					
ANR	8984586	ReturnStatement	return code ;	2231:12:71981:71992	8984235	1	True				
ANR	8984587	Identifier	code		8984235	0					
ANR	8984588	ExpressionStatement	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"	2234:4:72005:72044	8984235	16	True				
ANR	8984589	AssignmentExpression	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"		8984235	0		=			
ANR	8984590	Identifier	code		8984235	0					
ANR	8984591	CallExpression	"checkRangeLMN ( i_ctx_p , & CIEdict )"		8984235	1					
ANR	8984592	Callee	checkRangeLMN		8984235	0					
ANR	8984593	Identifier	checkRangeLMN		8984235	0					
ANR	8984594	ArgumentList	i_ctx_p		8984235	1					
ANR	8984595	Argument	i_ctx_p		8984235	0					
ANR	8984596	Identifier	i_ctx_p		8984235	0					
ANR	8984597	Argument	& CIEdict		8984235	1					
ANR	8984598	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984599	UnaryOperator	&		8984235	0					
ANR	8984600	Identifier	CIEdict		8984235	1					
ANR	8984601	IfStatement	if ( code != 0 )		8984235	17					
ANR	8984602	Condition	code != 0	2235:8:72054:72062	8984235	0	True				
ANR	8984603	EqualityExpression	code != 0		8984235	0		!=			
ANR	8984604	Identifier	code		8984235	0					
ANR	8984605	PrimaryExpression	0		8984235	1					
ANR	8984606	ReturnStatement	return code ;	2236:8:72073:72084	8984235	1	True				
ANR	8984607	Identifier	code		8984235	0					
ANR	8984608	ExpressionStatement	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"	2238:4:72091:72131	8984235	18	True				
ANR	8984609	AssignmentExpression	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"		8984235	0		=			
ANR	8984610	Identifier	code		8984235	0					
ANR	8984611	CallExpression	"checkDecodeLMN ( i_ctx_p , & CIEdict )"		8984235	1					
ANR	8984612	Callee	checkDecodeLMN		8984235	0					
ANR	8984613	Identifier	checkDecodeLMN		8984235	0					
ANR	8984614	ArgumentList	i_ctx_p		8984235	1					
ANR	8984615	Argument	i_ctx_p		8984235	0					
ANR	8984616	Identifier	i_ctx_p		8984235	0					
ANR	8984617	Argument	& CIEdict		8984235	1					
ANR	8984618	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984619	UnaryOperator	&		8984235	0					
ANR	8984620	Identifier	CIEdict		8984235	1					
ANR	8984621	IfStatement	if ( code != 0 )		8984235	19					
ANR	8984622	Condition	code != 0	2239:8:72141:72149	8984235	0	True				
ANR	8984623	EqualityExpression	code != 0		8984235	0		!=			
ANR	8984624	Identifier	code		8984235	0					
ANR	8984625	PrimaryExpression	0		8984235	1					
ANR	8984626	ReturnStatement	return code ;	2240:8:72160:72171	8984235	1	True				
ANR	8984627	Identifier	code		8984235	0					
ANR	8984628	ExpressionStatement	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"	2242:4:72178:72218	8984235	20	True				
ANR	8984629	AssignmentExpression	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"		8984235	0		=			
ANR	8984630	Identifier	code		8984235	0					
ANR	8984631	CallExpression	"checkMatrixLMN ( i_ctx_p , & CIEdict )"		8984235	1					
ANR	8984632	Callee	checkMatrixLMN		8984235	0					
ANR	8984633	Identifier	checkMatrixLMN		8984235	0					
ANR	8984634	ArgumentList	i_ctx_p		8984235	1					
ANR	8984635	Argument	i_ctx_p		8984235	0					
ANR	8984636	Identifier	i_ctx_p		8984235	0					
ANR	8984637	Argument	& CIEdict		8984235	1					
ANR	8984638	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984639	UnaryOperator	&		8984235	0					
ANR	8984640	Identifier	CIEdict		8984235	1					
ANR	8984641	IfStatement	if ( code != 0 )		8984235	21					
ANR	8984642	Condition	code != 0	2243:8:72228:72236	8984235	0	True				
ANR	8984643	EqualityExpression	code != 0		8984235	0		!=			
ANR	8984644	Identifier	code		8984235	0					
ANR	8984645	PrimaryExpression	0		8984235	1					
ANR	8984646	ReturnStatement	return code ;	2244:8:72247:72258	8984235	1	True				
ANR	8984647	Identifier	code		8984235	0					
ANR	8984648	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"	2246:4:72265:72306	8984235	22	True				
ANR	8984649	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"		8984235	0		=			
ANR	8984650	Identifier	code		8984235	0					
ANR	8984651	CallExpression	"checkBlackPoint ( i_ctx_p , & CIEdict )"		8984235	1					
ANR	8984652	Callee	checkBlackPoint		8984235	0					
ANR	8984653	Identifier	checkBlackPoint		8984235	0					
ANR	8984654	ArgumentList	i_ctx_p		8984235	1					
ANR	8984655	Argument	i_ctx_p		8984235	0					
ANR	8984656	Identifier	i_ctx_p		8984235	0					
ANR	8984657	Argument	& CIEdict		8984235	1					
ANR	8984658	UnaryOperationExpression	& CIEdict		8984235	0					
ANR	8984659	UnaryOperator	&		8984235	0					
ANR	8984660	Identifier	CIEdict		8984235	1					
ANR	8984661	IfStatement	if ( code != 0 )		8984235	23					
ANR	8984662	Condition	code != 0	2247:8:72316:72324	8984235	0	True				
ANR	8984663	EqualityExpression	code != 0		8984235	0		!=			
ANR	8984664	Identifier	code		8984235	0					
ANR	8984665	PrimaryExpression	0		8984235	1					
ANR	8984666	ReturnStatement	return code ;	2248:8:72335:72346	8984235	1	True				
ANR	8984667	Identifier	code		8984235	0					
ANR	8984668	ExpressionStatement	* r = 0	2250:4:72353:72359	8984235	24	True				
ANR	8984669	AssignmentExpression	* r = 0		8984235	0		=			
ANR	8984670	UnaryOperationExpression	* r		8984235	0					
ANR	8984671	UnaryOperator	*		8984235	0					
ANR	8984672	Identifier	r		8984235	1					
ANR	8984673	PrimaryExpression	0		8984235	1					
ANR	8984674	ReturnStatement	return 0 ;	2251:4:72365:72373	8984235	25	True				
ANR	8984675	PrimaryExpression	0		8984235	0					
ANR	8984676	ReturnType	static int		8984235	1					
ANR	8984677	Identifier	validatecieaspace		8984235	2					
ANR	8984678	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		8984235	3					
ANR	8984679	Parameter	i_ctx_t * i_ctx_p	2177:29:70227:70243	8984235	0	True				
ANR	8984680	ParameterType	i_ctx_t *		8984235	0					
ANR	8984681	Identifier	i_ctx_p		8984235	1					
ANR	8984682	Parameter	ref * * r	2177:48:70246:70252	8984235	1	True				
ANR	8984683	ParameterType	ref * *		8984235	0					
ANR	8984684	Identifier	r		8984235	1					
ANR	8984685	CFGEntryNode	ENTRY		8984235		True				
ANR	8984686	CFGExitNode	EXIT		8984235		True				
ANR	8984687	Symbol	code		8984235						
ANR	8984688	Symbol	t_dictionary		8984235						
ANR	8984689	Symbol	gs_error_rangecheck		8984235						
ANR	8984690	Symbol	checkRangeLMN		8984235						
ANR	8984691	Symbol	& CIEdict		8984235						
ANR	8984692	Symbol	* tempref		8984235						
ANR	8984693	Symbol	gs_error_typecheck		8984235						
ANR	8984694	Symbol	r_has_type		8984235						
ANR	8984695	Symbol	t_null		8984235						
ANR	8984696	Symbol	r_size		8984235						
ANR	8984697	Symbol	CIEspace		8984235						
ANR	8984698	Symbol	CIEdict		8984235						
ANR	8984699	Symbol	imemory		8984235						
ANR	8984700	Symbol	checkWhitePoint		8984235						
ANR	8984701	Symbol	value		8984235						
ANR	8984702	Symbol	tempref		8984235						
ANR	8984703	Symbol	checkMatrixLMN		8984235						
ANR	8984704	Symbol	dict_find_string		8984235						
ANR	8984705	Symbol	array_get		8984235						
ANR	8984706	Symbol	& tempref		8984235						
ANR	8984707	Symbol	r		8984235						
ANR	8984708	Symbol	checkBlackPoint		8984235						
ANR	8984709	Symbol	i_ctx_p		8984235						
ANR	8984710	Symbol	* value		8984235						
ANR	8984711	Symbol	checkDecodeLMN		8984235						
ANR	8984712	Symbol	r_is_array		8984235						
ANR	8984713	Symbol	* r		8984235						
ANR	8984714	Symbol	get_cie_param_array		8984235						
ANR	8984715	Function	cieadomain	2253:0:72377:73005							
ANR	8984716	FunctionDef	"cieadomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8984715	0					
ANR	8984717	CompoundStatement		2254:0:72442:73005	8984715	0					
ANR	8984718	IdentifierDeclStatement	int code ;	2255:4:72448:72456	8984715	0	True				
ANR	8984719	IdentifierDecl	code		8984715	0					
ANR	8984720	IdentifierDeclType	int		8984715	0					
ANR	8984721	Identifier	code		8984715	1					
ANR	8984722	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2256:4:72462:72483	8984715	1	True				
ANR	8984723	IdentifierDecl	CIEdict		8984715	0					
ANR	8984724	IdentifierDeclType	ref		8984715	0					
ANR	8984725	Identifier	CIEdict		8984715	1					
ANR	8984726	IdentifierDecl	* tempref		8984715	1					
ANR	8984727	IdentifierDeclType	ref *		8984715	0					
ANR	8984728	Identifier	tempref		8984715	1					
ANR	8984729	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2258:4:72490:72535	8984715	2	True				
ANR	8984730	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8984715	0		=			
ANR	8984731	Identifier	code		8984715	0					
ANR	8984732	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8984715	1					
ANR	8984733	Callee	array_get		8984715	0					
ANR	8984734	Identifier	array_get		8984715	0					
ANR	8984735	ArgumentList	imemory		8984715	1					
ANR	8984736	Argument	imemory		8984715	0					
ANR	8984737	Identifier	imemory		8984715	0					
ANR	8984738	Argument	space		8984715	1					
ANR	8984739	Identifier	space		8984715	0					
ANR	8984740	Argument	1		8984715	2					
ANR	8984741	PrimaryExpression	1		8984715	0					
ANR	8984742	Argument	& CIEdict		8984715	3					
ANR	8984743	UnaryOperationExpression	& CIEdict		8984715	0					
ANR	8984744	UnaryOperator	&		8984715	0					
ANR	8984745	Identifier	CIEdict		8984715	1					
ANR	8984746	IfStatement	if ( code < 0 )		8984715	3					
ANR	8984747	Condition	code < 0	2259:8:72545:72552	8984715	0	True				
ANR	8984748	RelationalExpression	code < 0		8984715	0		<			
ANR	8984749	Identifier	code		8984715	0					
ANR	8984750	PrimaryExpression	0		8984715	1					
ANR	8984751	ReturnStatement	return code ;	2260:8:72563:72574	8984715	1	True				
ANR	8984752	Identifier	code		8984715	0					
ANR	8984753	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2265:4:72673:72726	8984715	4	True				
ANR	8984754	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984715	0		=			
ANR	8984755	Identifier	code		8984715	0					
ANR	8984756	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984715	1					
ANR	8984757	Callee	dict_find_string		8984715	0					
ANR	8984758	Identifier	dict_find_string		8984715	0					
ANR	8984759	ArgumentList	& CIEdict		8984715	1					
ANR	8984760	Argument	& CIEdict		8984715	0					
ANR	8984761	UnaryOperationExpression	& CIEdict		8984715	0					
ANR	8984762	UnaryOperator	&		8984715	0					
ANR	8984763	Identifier	CIEdict		8984715	1					
ANR	8984764	Argument	"""RangeA"""		8984715	1					
ANR	8984765	PrimaryExpression	"""RangeA"""		8984715	0					
ANR	8984766	Argument	& tempref		8984715	2					
ANR	8984767	UnaryOperationExpression	& tempref		8984715	0					
ANR	8984768	UnaryOperator	&		8984715	0					
ANR	8984769	Identifier	tempref		8984715	1					
ANR	8984770	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8984715	5					
ANR	8984771	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2266:8:72736:72775	8984715	0	True				
ANR	8984772	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8984715	0		&&			
ANR	8984773	RelationalExpression	code > 0		8984715	0		>			
ANR	8984774	Identifier	code		8984715	0					
ANR	8984775	PrimaryExpression	0		8984715	1					
ANR	8984776	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8984715	1					
ANR	8984777	UnaryOperator	!		8984715	0					
ANR	8984778	CallExpression	"r_has_type ( tempref , t_null )"		8984715	1					
ANR	8984779	Callee	r_has_type		8984715	0					
ANR	8984780	Identifier	r_has_type		8984715	0					
ANR	8984781	ArgumentList	tempref		8984715	1					
ANR	8984782	Argument	tempref		8984715	0					
ANR	8984783	Identifier	tempref		8984715	0					
ANR	8984784	Argument	t_null		8984715	1					
ANR	8984785	Identifier	t_null		8984715	0					
ANR	8984786	CompoundStatement		13:50:335:335	8984715	1					
ANR	8984787	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"	2267:8:72788:72840	8984715	0	True				
ANR	8984788	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"		8984715	0		=			
ANR	8984789	Identifier	code		8984715	0					
ANR	8984790	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , ptr )"		8984715	1					
ANR	8984791	Callee	get_cie_param_array		8984715	0					
ANR	8984792	Identifier	get_cie_param_array		8984715	0					
ANR	8984793	ArgumentList	imemory		8984715	1					
ANR	8984794	Argument	imemory		8984715	0					
ANR	8984795	Identifier	imemory		8984715	0					
ANR	8984796	Argument	tempref		8984715	1					
ANR	8984797	Identifier	tempref		8984715	0					
ANR	8984798	Argument	2		8984715	2					
ANR	8984799	PrimaryExpression	2		8984715	0					
ANR	8984800	Argument	ptr		8984715	3					
ANR	8984801	Identifier	ptr		8984715	0					
ANR	8984802	IfStatement	if ( code < 0 )		8984715	1					
ANR	8984803	Condition	code < 0	2268:12:72854:72861	8984715	0	True				
ANR	8984804	RelationalExpression	code < 0		8984715	0		<			
ANR	8984805	Identifier	code		8984715	0					
ANR	8984806	PrimaryExpression	0		8984715	1					
ANR	8984807	ReturnStatement	return code ;	2269:12:72876:72887	8984715	1	True				
ANR	8984808	Identifier	code		8984715	0					
ANR	8984809	ElseStatement	else		8984715	0					
ANR	8984810	CompoundStatement		17:11:457:457	8984715	0					
ANR	8984811	ExpressionStatement	ptr [ 0 ] = 0	2272:8:72953:72963	8984715	0	True				
ANR	8984812	AssignmentExpression	ptr [ 0 ] = 0		8984715	0		=			
ANR	8984813	ArrayIndexing	ptr [ 0 ]		8984715	0					
ANR	8984814	Identifier	ptr		8984715	0					
ANR	8984815	PrimaryExpression	0		8984715	1					
ANR	8984816	PrimaryExpression	0		8984715	1					
ANR	8984817	ExpressionStatement	ptr [ 1 ] = 1	2273:8:72973:72983	8984715	1	True				
ANR	8984818	AssignmentExpression	ptr [ 1 ] = 1		8984715	0		=			
ANR	8984819	ArrayIndexing	ptr [ 1 ]		8984715	0					
ANR	8984820	Identifier	ptr		8984715	0					
ANR	8984821	PrimaryExpression	1		8984715	1					
ANR	8984822	PrimaryExpression	1		8984715	1					
ANR	8984823	ReturnStatement	return 0 ;	2275:4:72995:73003	8984715	6	True				
ANR	8984824	PrimaryExpression	0		8984715	0					
ANR	8984825	ReturnType	static int		8984715	1					
ANR	8984826	Identifier	cieadomain		8984715	2					
ANR	8984827	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8984715	3					
ANR	8984828	Parameter	i_ctx_t * i_ctx_p	2253:22:72399:72415	8984715	0	True				
ANR	8984829	ParameterType	i_ctx_t *		8984715	0					
ANR	8984830	Identifier	i_ctx_p		8984715	1					
ANR	8984831	Parameter	ref * space	2253:41:72418:72427	8984715	1	True				
ANR	8984832	ParameterType	ref *		8984715	0					
ANR	8984833	Identifier	space		8984715	1					
ANR	8984834	Parameter	float * ptr	2253:53:72430:72439	8984715	2	True				
ANR	8984835	ParameterType	float *		8984715	0					
ANR	8984836	Identifier	ptr		8984715	1					
ANR	8984837	CFGEntryNode	ENTRY		8984715		True				
ANR	8984838	CFGExitNode	EXIT		8984715		True				
ANR	8984839	Symbol	code		8984715						
ANR	8984840	Symbol	dict_find_string		8984715						
ANR	8984841	Symbol	array_get		8984715						
ANR	8984842	Symbol	& CIEdict		8984715						
ANR	8984843	Symbol	& tempref		8984715						
ANR	8984844	Symbol	space		8984715						
ANR	8984845	Symbol	ptr		8984715						
ANR	8984846	Symbol	r_has_type		8984715						
ANR	8984847	Symbol	t_null		8984715						
ANR	8984848	Symbol	i_ctx_p		8984715						
ANR	8984849	Symbol	* ptr		8984715						
ANR	8984850	Symbol	CIEdict		8984715						
ANR	8984851	Symbol	imemory		8984715						
ANR	8984852	Symbol	get_cie_param_array		8984715						
ANR	8984853	Symbol	tempref		8984715						
ANR	8984854	Function	ciearange	2277:0:73007:73634							
ANR	8984855	FunctionDef	"ciearange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8984854	0					
ANR	8984856	CompoundStatement		2278:0:73071:73634	8984854	0					
ANR	8984857	IdentifierDeclStatement	int code ;	2279:4:73077:73085	8984854	0	True				
ANR	8984858	IdentifierDecl	code		8984854	0					
ANR	8984859	IdentifierDeclType	int		8984854	0					
ANR	8984860	Identifier	code		8984854	1					
ANR	8984861	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2280:4:73091:73112	8984854	1	True				
ANR	8984862	IdentifierDecl	CIEdict		8984854	0					
ANR	8984863	IdentifierDeclType	ref		8984854	0					
ANR	8984864	Identifier	CIEdict		8984854	1					
ANR	8984865	IdentifierDecl	* tempref		8984854	1					
ANR	8984866	IdentifierDeclType	ref *		8984854	0					
ANR	8984867	Identifier	tempref		8984854	1					
ANR	8984868	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2282:4:73119:73164	8984854	2	True				
ANR	8984869	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8984854	0		=			
ANR	8984870	Identifier	code		8984854	0					
ANR	8984871	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8984854	1					
ANR	8984872	Callee	array_get		8984854	0					
ANR	8984873	Identifier	array_get		8984854	0					
ANR	8984874	ArgumentList	imemory		8984854	1					
ANR	8984875	Argument	imemory		8984854	0					
ANR	8984876	Identifier	imemory		8984854	0					
ANR	8984877	Argument	space		8984854	1					
ANR	8984878	Identifier	space		8984854	0					
ANR	8984879	Argument	1		8984854	2					
ANR	8984880	PrimaryExpression	1		8984854	0					
ANR	8984881	Argument	& CIEdict		8984854	3					
ANR	8984882	UnaryOperationExpression	& CIEdict		8984854	0					
ANR	8984883	UnaryOperator	&		8984854	0					
ANR	8984884	Identifier	CIEdict		8984854	1					
ANR	8984885	IfStatement	if ( code < 0 )		8984854	3					
ANR	8984886	Condition	code < 0	2283:8:73174:73181	8984854	0	True				
ANR	8984887	RelationalExpression	code < 0		8984854	0		<			
ANR	8984888	Identifier	code		8984854	0					
ANR	8984889	PrimaryExpression	0		8984854	1					
ANR	8984890	ReturnStatement	return code ;	2284:8:73192:73203	8984854	1	True				
ANR	8984891	Identifier	code		8984854	0					
ANR	8984892	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2289:4:73302:73355	8984854	4	True				
ANR	8984893	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984854	0		=			
ANR	8984894	Identifier	code		8984854	0					
ANR	8984895	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		8984854	1					
ANR	8984896	Callee	dict_find_string		8984854	0					
ANR	8984897	Identifier	dict_find_string		8984854	0					
ANR	8984898	ArgumentList	& CIEdict		8984854	1					
ANR	8984899	Argument	& CIEdict		8984854	0					
ANR	8984900	UnaryOperationExpression	& CIEdict		8984854	0					
ANR	8984901	UnaryOperator	&		8984854	0					
ANR	8984902	Identifier	CIEdict		8984854	1					
ANR	8984903	Argument	"""RangeA"""		8984854	1					
ANR	8984904	PrimaryExpression	"""RangeA"""		8984854	0					
ANR	8984905	Argument	& tempref		8984854	2					
ANR	8984906	UnaryOperationExpression	& tempref		8984854	0					
ANR	8984907	UnaryOperator	&		8984854	0					
ANR	8984908	Identifier	tempref		8984854	1					
ANR	8984909	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8984854	5					
ANR	8984910	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2290:8:73365:73404	8984854	0	True				
ANR	8984911	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8984854	0		&&			
ANR	8984912	RelationalExpression	code > 0		8984854	0		>			
ANR	8984913	Identifier	code		8984854	0					
ANR	8984914	PrimaryExpression	0		8984854	1					
ANR	8984915	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8984854	1					
ANR	8984916	UnaryOperator	!		8984854	0					
ANR	8984917	CallExpression	"r_has_type ( tempref , t_null )"		8984854	1					
ANR	8984918	Callee	r_has_type		8984854	0					
ANR	8984919	Identifier	r_has_type		8984854	0					
ANR	8984920	ArgumentList	tempref		8984854	1					
ANR	8984921	Argument	tempref		8984854	0					
ANR	8984922	Identifier	tempref		8984854	0					
ANR	8984923	Argument	t_null		8984854	1					
ANR	8984924	Identifier	t_null		8984854	0					
ANR	8984925	CompoundStatement		13:50:335:335	8984854	1					
ANR	8984926	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"	2291:8:73417:73469	8984854	0	True				
ANR	8984927	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"		8984854	0		=			
ANR	8984928	Identifier	code		8984854	0					
ANR	8984929	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , ptr )"		8984854	1					
ANR	8984930	Callee	get_cie_param_array		8984854	0					
ANR	8984931	Identifier	get_cie_param_array		8984854	0					
ANR	8984932	ArgumentList	imemory		8984854	1					
ANR	8984933	Argument	imemory		8984854	0					
ANR	8984934	Identifier	imemory		8984854	0					
ANR	8984935	Argument	tempref		8984854	1					
ANR	8984936	Identifier	tempref		8984854	0					
ANR	8984937	Argument	2		8984854	2					
ANR	8984938	PrimaryExpression	2		8984854	0					
ANR	8984939	Argument	ptr		8984854	3					
ANR	8984940	Identifier	ptr		8984854	0					
ANR	8984941	IfStatement	if ( code < 0 )		8984854	1					
ANR	8984942	Condition	code < 0	2292:12:73483:73490	8984854	0	True				
ANR	8984943	RelationalExpression	code < 0		8984854	0		<			
ANR	8984944	Identifier	code		8984854	0					
ANR	8984945	PrimaryExpression	0		8984854	1					
ANR	8984946	ReturnStatement	return code ;	2293:12:73505:73516	8984854	1	True				
ANR	8984947	Identifier	code		8984854	0					
ANR	8984948	ElseStatement	else		8984854	0					
ANR	8984949	CompoundStatement		17:11:457:457	8984854	0					
ANR	8984950	ExpressionStatement	ptr [ 0 ] = 0	2296:8:73582:73592	8984854	0	True				
ANR	8984951	AssignmentExpression	ptr [ 0 ] = 0		8984854	0		=			
ANR	8984952	ArrayIndexing	ptr [ 0 ]		8984854	0					
ANR	8984953	Identifier	ptr		8984854	0					
ANR	8984954	PrimaryExpression	0		8984854	1					
ANR	8984955	PrimaryExpression	0		8984854	1					
ANR	8984956	ExpressionStatement	ptr [ 1 ] = 1	2297:8:73602:73612	8984854	1	True				
ANR	8984957	AssignmentExpression	ptr [ 1 ] = 1		8984854	0		=			
ANR	8984958	ArrayIndexing	ptr [ 1 ]		8984854	0					
ANR	8984959	Identifier	ptr		8984854	0					
ANR	8984960	PrimaryExpression	1		8984854	1					
ANR	8984961	PrimaryExpression	1		8984854	1					
ANR	8984962	ReturnStatement	return 0 ;	2299:4:73624:73632	8984854	6	True				
ANR	8984963	PrimaryExpression	0		8984854	0					
ANR	8984964	ReturnType	static int		8984854	1					
ANR	8984965	Identifier	ciearange		8984854	2					
ANR	8984966	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8984854	3					
ANR	8984967	Parameter	i_ctx_t * i_ctx_p	2277:21:73028:73044	8984854	0	True				
ANR	8984968	ParameterType	i_ctx_t *		8984854	0					
ANR	8984969	Identifier	i_ctx_p		8984854	1					
ANR	8984970	Parameter	ref * space	2277:40:73047:73056	8984854	1	True				
ANR	8984971	ParameterType	ref *		8984854	0					
ANR	8984972	Identifier	space		8984854	1					
ANR	8984973	Parameter	float * ptr	2277:52:73059:73068	8984854	2	True				
ANR	8984974	ParameterType	float *		8984854	0					
ANR	8984975	Identifier	ptr		8984854	1					
ANR	8984976	CFGEntryNode	ENTRY		8984854		True				
ANR	8984977	CFGExitNode	EXIT		8984854		True				
ANR	8984978	Symbol	code		8984854						
ANR	8984979	Symbol	dict_find_string		8984854						
ANR	8984980	Symbol	array_get		8984854						
ANR	8984981	Symbol	& CIEdict		8984854						
ANR	8984982	Symbol	& tempref		8984854						
ANR	8984983	Symbol	space		8984854						
ANR	8984984	Symbol	ptr		8984854						
ANR	8984985	Symbol	t_null		8984854						
ANR	8984986	Symbol	r_has_type		8984854						
ANR	8984987	Symbol	i_ctx_p		8984854						
ANR	8984988	Symbol	* ptr		8984854						
ANR	8984989	Symbol	CIEdict		8984854						
ANR	8984990	Symbol	imemory		8984854						
ANR	8984991	Symbol	get_cie_param_array		8984854						
ANR	8984992	Symbol	tempref		8984854						
ANR	8984993	Function	cieavalidate	2301:0:73636:73935							
ANR	8984994	FunctionDef	"cieavalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8984993	0					
ANR	8984995	CompoundStatement		2302:0:73720:73935	8984993	0					
ANR	8984996	IdentifierDeclStatement	os_ptr op = osp ;	2303:4:73726:73741	8984993	0	True				
ANR	8984997	IdentifierDecl	op = osp		8984993	0					
ANR	8984998	IdentifierDeclType	os_ptr		8984993	0					
ANR	8984999	Identifier	op		8984993	1					
ANR	8985000	AssignmentExpression	op = osp		8984993	2		=			
ANR	8985001	Identifier	osp		8984993	0					
ANR	8985002	Identifier	osp		8984993	1					
ANR	8985003	IfStatement	if ( num_comps < 1 )		8984993	1					
ANR	8985004	Condition	num_comps < 1	2305:8:73752:73764	8984993	0	True				
ANR	8985005	RelationalExpression	num_comps < 1		8984993	0		<			
ANR	8985006	Identifier	num_comps		8984993	0					
ANR	8985007	PrimaryExpression	1		8984993	1					
ANR	8985008	ExpressionStatement	return_error ( gs_error_stackunderflow )	2306:8:73775:73812	8984993	1	True				
ANR	8985009	CallExpression	return_error ( gs_error_stackunderflow )		8984993	0					
ANR	8985010	Callee	return_error		8984993	0					
ANR	8985011	Identifier	return_error		8984993	0					
ANR	8985012	ArgumentList	gs_error_stackunderflow		8984993	1					
ANR	8985013	Argument	gs_error_stackunderflow		8984993	0					
ANR	8985014	Identifier	gs_error_stackunderflow		8984993	0					
ANR	8985015	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8984993	2					
ANR	8985016	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2308:8:73823:73875	8984993	0	True				
ANR	8985017	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8984993	0		&&			
ANR	8985018	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8984993	0					
ANR	8985019	UnaryOperator	!		8984993	0					
ANR	8985020	CallExpression	"r_has_type ( op , t_integer )"		8984993	1					
ANR	8985021	Callee	r_has_type		8984993	0					
ANR	8985022	Identifier	r_has_type		8984993	0					
ANR	8985023	ArgumentList	op		8984993	1					
ANR	8985024	Argument	op		8984993	0					
ANR	8985025	Identifier	op		8984993	0					
ANR	8985026	Argument	t_integer		8984993	1					
ANR	8985027	Identifier	t_integer		8984993	0					
ANR	8985028	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8984993	1					
ANR	8985029	UnaryOperator	!		8984993	0					
ANR	8985030	CallExpression	"r_has_type ( op , t_real )"		8984993	1					
ANR	8985031	Callee	r_has_type		8984993	0					
ANR	8985032	Identifier	r_has_type		8984993	0					
ANR	8985033	ArgumentList	op		8984993	1					
ANR	8985034	Argument	op		8984993	0					
ANR	8985035	Identifier	op		8984993	0					
ANR	8985036	Argument	t_real		8984993	1					
ANR	8985037	Identifier	t_real		8984993	0					
ANR	8985038	ExpressionStatement	return_error ( gs_error_typecheck )	2309:8:73886:73918	8984993	1	True				
ANR	8985039	CallExpression	return_error ( gs_error_typecheck )		8984993	0					
ANR	8985040	Callee	return_error		8984993	0					
ANR	8985041	Identifier	return_error		8984993	0					
ANR	8985042	ArgumentList	gs_error_typecheck		8984993	1					
ANR	8985043	Argument	gs_error_typecheck		8984993	0					
ANR	8985044	Identifier	gs_error_typecheck		8984993	0					
ANR	8985045	ReturnStatement	return 0 ;	2311:4:73925:73933	8984993	3	True				
ANR	8985046	PrimaryExpression	0		8984993	0					
ANR	8985047	ReturnType	static int		8984993	1					
ANR	8985048	Identifier	cieavalidate		8984993	2					
ANR	8985049	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8984993	3					
ANR	8985050	Parameter	i_ctx_t * i_ctx_p	2301:24:73660:73675	8984993	0	True				
ANR	8985051	ParameterType	i_ctx_t *		8984993	0					
ANR	8985052	Identifier	i_ctx_p		8984993	1					
ANR	8985053	Parameter	ref * space	2301:42:73678:73687	8984993	1	True				
ANR	8985054	ParameterType	ref *		8984993	0					
ANR	8985055	Identifier	space		8984993	1					
ANR	8985056	Parameter	float * values	2301:54:73690:73702	8984993	2	True				
ANR	8985057	ParameterType	float *		8984993	0					
ANR	8985058	Identifier	values		8984993	1					
ANR	8985059	Parameter	int num_comps	2301:69:73705:73717	8984993	3	True				
ANR	8985060	ParameterType	int		8984993	0					
ANR	8985061	Identifier	num_comps		8984993	1					
ANR	8985062	CFGEntryNode	ENTRY		8984993		True				
ANR	8985063	CFGExitNode	EXIT		8984993		True				
ANR	8985064	Symbol	op		8984993						
ANR	8985065	Symbol	r_has_type		8984993						
ANR	8985066	Symbol	gs_error_typecheck		8984993						
ANR	8985067	Symbol	t_integer		8984993						
ANR	8985068	Symbol	gs_error_stackunderflow		8984993						
ANR	8985069	Symbol	i_ctx_p		8984993						
ANR	8985070	Symbol	values		8984993						
ANR	8985071	Symbol	num_comps		8984993						
ANR	8985072	Symbol	t_real		8984993						
ANR	8985073	Symbol	osp		8984993						
ANR	8985074	Symbol	space		8984993						
ANR	8985075	Function	cieacompareproc	2313:0:73937:75006							
ANR	8985076	FunctionDef	"cieacompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8985075	0					
ANR	8985077	CompoundStatement		2314:0:74010:75006	8985075	0					
ANR	8985078	IdentifierDeclStatement	int code = 0 ;	2315:4:74016:74028	8985075	0	True				
ANR	8985079	IdentifierDecl	code = 0		8985075	0					
ANR	8985080	IdentifierDeclType	int		8985075	0					
ANR	8985081	Identifier	code		8985075	1					
ANR	8985082	AssignmentExpression	code = 0		8985075	2		=			
ANR	8985083	Identifier	code		8985075	0					
ANR	8985084	PrimaryExpression	0		8985075	1					
ANR	8985085	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2316:4:74034:74056	8985075	1	True				
ANR	8985086	IdentifierDecl	CIEdict1		8985075	0					
ANR	8985087	IdentifierDeclType	ref		8985075	0					
ANR	8985088	Identifier	CIEdict1		8985075	1					
ANR	8985089	IdentifierDecl	CIEdict2		8985075	1					
ANR	8985090	IdentifierDeclType	ref		8985075	0					
ANR	8985091	Identifier	CIEdict2		8985075	1					
ANR	8985092	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2318:4:74063:74109	8985075	2	True				
ANR	8985093	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8985075	0		=			
ANR	8985094	Identifier	code		8985075	0					
ANR	8985095	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8985075	1					
ANR	8985096	Callee	array_get		8985075	0					
ANR	8985097	Identifier	array_get		8985075	0					
ANR	8985098	ArgumentList	imemory		8985075	1					
ANR	8985099	Argument	imemory		8985075	0					
ANR	8985100	Identifier	imemory		8985075	0					
ANR	8985101	Argument	space		8985075	1					
ANR	8985102	Identifier	space		8985075	0					
ANR	8985103	Argument	1		8985075	2					
ANR	8985104	PrimaryExpression	1		8985075	0					
ANR	8985105	Argument	& CIEdict1		8985075	3					
ANR	8985106	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985107	UnaryOperator	&		8985075	0					
ANR	8985108	Identifier	CIEdict1		8985075	1					
ANR	8985109	IfStatement	if ( code < 0 )		8985075	3					
ANR	8985110	Condition	code < 0	2319:8:74119:74126	8985075	0	True				
ANR	8985111	RelationalExpression	code < 0		8985075	0		<			
ANR	8985112	Identifier	code		8985075	0					
ANR	8985113	PrimaryExpression	0		8985075	1					
ANR	8985114	ReturnStatement	return 0 ;	2320:8:74137:74145	8985075	1	True				
ANR	8985115	PrimaryExpression	0		8985075	0					
ANR	8985116	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2321:4:74151:74201	8985075	4	True				
ANR	8985117	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		8985075	0		=			
ANR	8985118	Identifier	code		8985075	0					
ANR	8985119	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		8985075	1					
ANR	8985120	Callee	array_get		8985075	0					
ANR	8985121	Identifier	array_get		8985075	0					
ANR	8985122	ArgumentList	imemory		8985075	1					
ANR	8985123	Argument	imemory		8985075	0					
ANR	8985124	Identifier	imemory		8985075	0					
ANR	8985125	Argument	testspace		8985075	1					
ANR	8985126	Identifier	testspace		8985075	0					
ANR	8985127	Argument	1		8985075	2					
ANR	8985128	PrimaryExpression	1		8985075	0					
ANR	8985129	Argument	& CIEdict2		8985075	3					
ANR	8985130	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985131	UnaryOperator	&		8985075	0					
ANR	8985132	Identifier	CIEdict2		8985075	1					
ANR	8985133	IfStatement	if ( code < 0 )		8985075	5					
ANR	8985134	Condition	code < 0	2322:8:74211:74218	8985075	0	True				
ANR	8985135	RelationalExpression	code < 0		8985075	0		<			
ANR	8985136	Identifier	code		8985075	0					
ANR	8985137	PrimaryExpression	0		8985075	1					
ANR	8985138	ReturnStatement	return 0 ;	2323:8:74229:74237	8985075	1	True				
ANR	8985139	PrimaryExpression	0		8985075	0					
ANR	8985140	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		8985075	6					
ANR	8985141	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2324:8:74247:74314	8985075	0	True				
ANR	8985142	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8985075	0					
ANR	8985143	UnaryOperator	!		8985075	0					
ANR	8985144	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8985075	1					
ANR	8985145	Callee	comparedictkey		8985075	0					
ANR	8985146	Identifier	comparedictkey		8985075	0					
ANR	8985147	ArgumentList	i_ctx_p		8985075	1					
ANR	8985148	Argument	i_ctx_p		8985075	0					
ANR	8985149	Identifier	i_ctx_p		8985075	0					
ANR	8985150	Argument	& CIEdict1		8985075	1					
ANR	8985151	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985152	UnaryOperator	&		8985075	0					
ANR	8985153	Identifier	CIEdict1		8985075	1					
ANR	8985154	Argument	& CIEdict2		8985075	2					
ANR	8985155	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985156	UnaryOperator	&		8985075	0					
ANR	8985157	Identifier	CIEdict2		8985075	1					
ANR	8985158	Argument	"( char * ) ""WhitePoint"""		8985075	3					
ANR	8985159	CastExpression	"( char * ) ""WhitePoint"""		8985075	0					
ANR	8985160	CastTarget	char *		8985075	0					
ANR	8985161	PrimaryExpression	"""WhitePoint"""		8985075	1					
ANR	8985162	ReturnStatement	return 0 ;	2325:8:74325:74333	8985075	1	True				
ANR	8985163	PrimaryExpression	0		8985075	0					
ANR	8985164	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		8985075	7					
ANR	8985165	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2326:8:74343:74410	8985075	0	True				
ANR	8985166	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8985075	0					
ANR	8985167	UnaryOperator	!		8985075	0					
ANR	8985168	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8985075	1					
ANR	8985169	Callee	comparedictkey		8985075	0					
ANR	8985170	Identifier	comparedictkey		8985075	0					
ANR	8985171	ArgumentList	i_ctx_p		8985075	1					
ANR	8985172	Argument	i_ctx_p		8985075	0					
ANR	8985173	Identifier	i_ctx_p		8985075	0					
ANR	8985174	Argument	& CIEdict1		8985075	1					
ANR	8985175	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985176	UnaryOperator	&		8985075	0					
ANR	8985177	Identifier	CIEdict1		8985075	1					
ANR	8985178	Argument	& CIEdict2		8985075	2					
ANR	8985179	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985180	UnaryOperator	&		8985075	0					
ANR	8985181	Identifier	CIEdict2		8985075	1					
ANR	8985182	Argument	"( char * ) ""BlackPoint"""		8985075	3					
ANR	8985183	CastExpression	"( char * ) ""BlackPoint"""		8985075	0					
ANR	8985184	CastTarget	char *		8985075	0					
ANR	8985185	PrimaryExpression	"""BlackPoint"""		8985075	1					
ANR	8985186	ReturnStatement	return 0 ;	2327:8:74421:74429	8985075	1	True				
ANR	8985187	PrimaryExpression	0		8985075	0					
ANR	8985188	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" ) )"		8985075	8					
ANR	8985189	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"	2328:8:74439:74502	8985075	0	True				
ANR	8985190	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"		8985075	0					
ANR	8985191	UnaryOperator	!		8985075	0					
ANR	8985192	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"		8985075	1					
ANR	8985193	Callee	comparedictkey		8985075	0					
ANR	8985194	Identifier	comparedictkey		8985075	0					
ANR	8985195	ArgumentList	i_ctx_p		8985075	1					
ANR	8985196	Argument	i_ctx_p		8985075	0					
ANR	8985197	Identifier	i_ctx_p		8985075	0					
ANR	8985198	Argument	& CIEdict1		8985075	1					
ANR	8985199	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985200	UnaryOperator	&		8985075	0					
ANR	8985201	Identifier	CIEdict1		8985075	1					
ANR	8985202	Argument	& CIEdict2		8985075	2					
ANR	8985203	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985204	UnaryOperator	&		8985075	0					
ANR	8985205	Identifier	CIEdict2		8985075	1					
ANR	8985206	Argument	"( char * ) ""RangeA"""		8985075	3					
ANR	8985207	CastExpression	"( char * ) ""RangeA"""		8985075	0					
ANR	8985208	CastTarget	char *		8985075	0					
ANR	8985209	PrimaryExpression	"""RangeA"""		8985075	1					
ANR	8985210	ReturnStatement	return 0 ;	2329:8:74513:74521	8985075	1	True				
ANR	8985211	PrimaryExpression	0		8985075	0					
ANR	8985212	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" ) )"		8985075	9					
ANR	8985213	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"	2330:8:74531:74595	8985075	0	True				
ANR	8985214	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"		8985075	0					
ANR	8985215	UnaryOperator	!		8985075	0					
ANR	8985216	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"		8985075	1					
ANR	8985217	Callee	comparedictkey		8985075	0					
ANR	8985218	Identifier	comparedictkey		8985075	0					
ANR	8985219	ArgumentList	i_ctx_p		8985075	1					
ANR	8985220	Argument	i_ctx_p		8985075	0					
ANR	8985221	Identifier	i_ctx_p		8985075	0					
ANR	8985222	Argument	& CIEdict1		8985075	1					
ANR	8985223	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985224	UnaryOperator	&		8985075	0					
ANR	8985225	Identifier	CIEdict1		8985075	1					
ANR	8985226	Argument	& CIEdict2		8985075	2					
ANR	8985227	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985228	UnaryOperator	&		8985075	0					
ANR	8985229	Identifier	CIEdict2		8985075	1					
ANR	8985230	Argument	"( char * ) ""DecodeA"""		8985075	3					
ANR	8985231	CastExpression	"( char * ) ""DecodeA"""		8985075	0					
ANR	8985232	CastTarget	char *		8985075	0					
ANR	8985233	PrimaryExpression	"""DecodeA"""		8985075	1					
ANR	8985234	ReturnStatement	return 0 ;	2331:8:74606:74614	8985075	1	True				
ANR	8985235	PrimaryExpression	0		8985075	0					
ANR	8985236	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" ) )"		8985075	10					
ANR	8985237	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"	2332:8:74624:74688	8985075	0	True				
ANR	8985238	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"		8985075	0					
ANR	8985239	UnaryOperator	!		8985075	0					
ANR	8985240	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"		8985075	1					
ANR	8985241	Callee	comparedictkey		8985075	0					
ANR	8985242	Identifier	comparedictkey		8985075	0					
ANR	8985243	ArgumentList	i_ctx_p		8985075	1					
ANR	8985244	Argument	i_ctx_p		8985075	0					
ANR	8985245	Identifier	i_ctx_p		8985075	0					
ANR	8985246	Argument	& CIEdict1		8985075	1					
ANR	8985247	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985248	UnaryOperator	&		8985075	0					
ANR	8985249	Identifier	CIEdict1		8985075	1					
ANR	8985250	Argument	& CIEdict2		8985075	2					
ANR	8985251	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985252	UnaryOperator	&		8985075	0					
ANR	8985253	Identifier	CIEdict2		8985075	1					
ANR	8985254	Argument	"( char * ) ""MatrixA"""		8985075	3					
ANR	8985255	CastExpression	"( char * ) ""MatrixA"""		8985075	0					
ANR	8985256	CastTarget	char *		8985075	0					
ANR	8985257	PrimaryExpression	"""MatrixA"""		8985075	1					
ANR	8985258	ReturnStatement	return 0 ;	2333:8:74699:74707	8985075	1	True				
ANR	8985259	PrimaryExpression	0		8985075	0					
ANR	8985260	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		8985075	11					
ANR	8985261	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2334:8:74717:74782	8985075	0	True				
ANR	8985262	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8985075	0					
ANR	8985263	UnaryOperator	!		8985075	0					
ANR	8985264	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8985075	1					
ANR	8985265	Callee	comparedictkey		8985075	0					
ANR	8985266	Identifier	comparedictkey		8985075	0					
ANR	8985267	ArgumentList	i_ctx_p		8985075	1					
ANR	8985268	Argument	i_ctx_p		8985075	0					
ANR	8985269	Identifier	i_ctx_p		8985075	0					
ANR	8985270	Argument	& CIEdict1		8985075	1					
ANR	8985271	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985272	UnaryOperator	&		8985075	0					
ANR	8985273	Identifier	CIEdict1		8985075	1					
ANR	8985274	Argument	& CIEdict2		8985075	2					
ANR	8985275	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985276	UnaryOperator	&		8985075	0					
ANR	8985277	Identifier	CIEdict2		8985075	1					
ANR	8985278	Argument	"( char * ) ""RangeLMN"""		8985075	3					
ANR	8985279	CastExpression	"( char * ) ""RangeLMN"""		8985075	0					
ANR	8985280	CastTarget	char *		8985075	0					
ANR	8985281	PrimaryExpression	"""RangeLMN"""		8985075	1					
ANR	8985282	ReturnStatement	return 0 ;	2335:8:74793:74801	8985075	1	True				
ANR	8985283	PrimaryExpression	0		8985075	0					
ANR	8985284	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		8985075	12					
ANR	8985285	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2336:8:74811:74877	8985075	0	True				
ANR	8985286	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8985075	0					
ANR	8985287	UnaryOperator	!		8985075	0					
ANR	8985288	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8985075	1					
ANR	8985289	Callee	comparedictkey		8985075	0					
ANR	8985290	Identifier	comparedictkey		8985075	0					
ANR	8985291	ArgumentList	i_ctx_p		8985075	1					
ANR	8985292	Argument	i_ctx_p		8985075	0					
ANR	8985293	Identifier	i_ctx_p		8985075	0					
ANR	8985294	Argument	& CIEdict1		8985075	1					
ANR	8985295	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985296	UnaryOperator	&		8985075	0					
ANR	8985297	Identifier	CIEdict1		8985075	1					
ANR	8985298	Argument	& CIEdict2		8985075	2					
ANR	8985299	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985300	UnaryOperator	&		8985075	0					
ANR	8985301	Identifier	CIEdict2		8985075	1					
ANR	8985302	Argument	"( char * ) ""DecodeLMN"""		8985075	3					
ANR	8985303	CastExpression	"( char * ) ""DecodeLMN"""		8985075	0					
ANR	8985304	CastTarget	char *		8985075	0					
ANR	8985305	PrimaryExpression	"""DecodeLMN"""		8985075	1					
ANR	8985306	ReturnStatement	return 0 ;	2337:8:74888:74896	8985075	1	True				
ANR	8985307	PrimaryExpression	0		8985075	0					
ANR	8985308	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		8985075	13					
ANR	8985309	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2338:8:74906:74971	8985075	0	True				
ANR	8985310	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8985075	0					
ANR	8985311	UnaryOperator	!		8985075	0					
ANR	8985312	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8985075	1					
ANR	8985313	Callee	comparedictkey		8985075	0					
ANR	8985314	Identifier	comparedictkey		8985075	0					
ANR	8985315	ArgumentList	i_ctx_p		8985075	1					
ANR	8985316	Argument	i_ctx_p		8985075	0					
ANR	8985317	Identifier	i_ctx_p		8985075	0					
ANR	8985318	Argument	& CIEdict1		8985075	1					
ANR	8985319	UnaryOperationExpression	& CIEdict1		8985075	0					
ANR	8985320	UnaryOperator	&		8985075	0					
ANR	8985321	Identifier	CIEdict1		8985075	1					
ANR	8985322	Argument	& CIEdict2		8985075	2					
ANR	8985323	UnaryOperationExpression	& CIEdict2		8985075	0					
ANR	8985324	UnaryOperator	&		8985075	0					
ANR	8985325	Identifier	CIEdict2		8985075	1					
ANR	8985326	Argument	"( char * ) ""MatrixMN"""		8985075	3					
ANR	8985327	CastExpression	"( char * ) ""MatrixMN"""		8985075	0					
ANR	8985328	CastTarget	char *		8985075	0					
ANR	8985329	PrimaryExpression	"""MatrixMN"""		8985075	1					
ANR	8985330	ReturnStatement	return 0 ;	2339:8:74982:74990	8985075	1	True				
ANR	8985331	PrimaryExpression	0		8985075	0					
ANR	8985332	ReturnStatement	return 1 ;	2340:4:74996:75004	8985075	14	True				
ANR	8985333	PrimaryExpression	1		8985075	0					
ANR	8985334	ReturnType	static int		8985075	1					
ANR	8985335	Identifier	cieacompareproc		8985075	2					
ANR	8985336	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8985075	3					
ANR	8985337	Parameter	i_ctx_t * i_ctx_p	2313:27:73964:73979	8985075	0	True				
ANR	8985338	ParameterType	i_ctx_t *		8985075	0					
ANR	8985339	Identifier	i_ctx_p		8985075	1					
ANR	8985340	Parameter	ref * space	2313:45:73982:73991	8985075	1	True				
ANR	8985341	ParameterType	ref *		8985075	0					
ANR	8985342	Identifier	space		8985075	1					
ANR	8985343	Parameter	ref * testspace	2313:57:73994:74007	8985075	2	True				
ANR	8985344	ParameterType	ref *		8985075	0					
ANR	8985345	Identifier	testspace		8985075	1					
ANR	8985346	CFGEntryNode	ENTRY		8985075		True				
ANR	8985347	CFGExitNode	EXIT		8985075		True				
ANR	8985348	Symbol	code		8985075						
ANR	8985349	Symbol	testspace		8985075						
ANR	8985350	Symbol	i_ctx_p		8985075						
ANR	8985351	Symbol	array_get		8985075						
ANR	8985352	Symbol	CIEdict1		8985075						
ANR	8985353	Symbol	CIEdict2		8985075						
ANR	8985354	Symbol	imemory		8985075						
ANR	8985355	Symbol	comparedictkey		8985075						
ANR	8985356	Symbol	& CIEdict2		8985075						
ANR	8985357	Symbol	& CIEdict1		8985075						
ANR	8985358	Symbol	space		8985075						
ANR	8985359	Function	hashcieabcspace	2344:0:75027:76137							
ANR	8985360	FunctionDef	"hashcieabcspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		8985359	0					
ANR	8985361	CompoundStatement		2345:0:75106:76137	8985359	0					
ANR	8985362	IdentifierDeclStatement	int code = 0 ;	2346:4:75112:75124	8985359	0	True				
ANR	8985363	IdentifierDecl	code = 0		8985359	0					
ANR	8985364	IdentifierDeclType	int		8985359	0					
ANR	8985365	Identifier	code		8985359	1					
ANR	8985366	AssignmentExpression	code = 0		8985359	2		=			
ANR	8985367	Identifier	code		8985359	0					
ANR	8985368	PrimaryExpression	0		8985359	1					
ANR	8985369	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2347:4:75130:75153	8985359	1	True				
ANR	8985370	IdentifierDecl	CIEdict1		8985359	0					
ANR	8985371	IdentifierDeclType	ref		8985359	0					
ANR	8985372	Identifier	CIEdict1		8985359	1					
ANR	8985373	IdentifierDecl	spacename		8985359	1					
ANR	8985374	IdentifierDeclType	ref		8985359	0					
ANR	8985375	Identifier	spacename		8985359	1					
ANR	8985376	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2349:4:75160:75207	8985359	2	True				
ANR	8985377	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		8985359	0		=			
ANR	8985378	Identifier	code		8985359	0					
ANR	8985379	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		8985359	1					
ANR	8985380	Callee	array_get		8985359	0					
ANR	8985381	Identifier	array_get		8985359	0					
ANR	8985382	ArgumentList	imemory		8985359	1					
ANR	8985383	Argument	imemory		8985359	0					
ANR	8985384	Identifier	imemory		8985359	0					
ANR	8985385	Argument	space		8985359	1					
ANR	8985386	Identifier	space		8985359	0					
ANR	8985387	Argument	0		8985359	2					
ANR	8985388	PrimaryExpression	0		8985359	0					
ANR	8985389	Argument	& spacename		8985359	3					
ANR	8985390	UnaryOperationExpression	& spacename		8985359	0					
ANR	8985391	UnaryOperator	&		8985359	0					
ANR	8985392	Identifier	spacename		8985359	1					
ANR	8985393	IfStatement	if ( code < 0 )		8985359	3					
ANR	8985394	Condition	code < 0	2350:8:75217:75224	8985359	0	True				
ANR	8985395	RelationalExpression	code < 0		8985359	0		<			
ANR	8985396	Identifier	code		8985359	0					
ANR	8985397	PrimaryExpression	0		8985359	1					
ANR	8985398	ReturnStatement	return 0 ;	2351:8:75235:75243	8985359	1	True				
ANR	8985399	PrimaryExpression	0		8985359	0					
ANR	8985400	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2352:4:75249:75345	8985359	4	True				
ANR	8985401	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		8985359	0					
ANR	8985402	Callee	gs_md5_append		8985359	0					
ANR	8985403	Identifier	gs_md5_append		8985359	0					
ANR	8985404	ArgumentList	md5		8985359	1					
ANR	8985405	Argument	md5		8985359	0					
ANR	8985406	Identifier	md5		8985359	0					
ANR	8985407	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		8985359	1					
ANR	8985408	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		8985359	0					
ANR	8985409	CastTarget	const gs_md5_byte_t *		8985359	0					
ANR	8985410	UnaryOperationExpression	& spacename . value . pname		8985359	1					
ANR	8985411	UnaryOperator	&		8985359	0					
ANR	8985412	MemberAccess	spacename . value . pname		8985359	1					
ANR	8985413	MemberAccess	spacename . value		8985359	0					
ANR	8985414	Identifier	spacename		8985359	0					
ANR	8985415	Identifier	value		8985359	1					
ANR	8985416	Identifier	pname		8985359	1					
ANR	8985417	Argument	sizeof ( spacename . value . pname )		8985359	2					
ANR	8985418	SizeofExpression	sizeof ( spacename . value . pname )		8985359	0					
ANR	8985419	Sizeof	sizeof		8985359	0					
ANR	8985420	MemberAccess	spacename . value . pname		8985359	1					
ANR	8985421	MemberAccess	spacename . value		8985359	0					
ANR	8985422	Identifier	spacename		8985359	0					
ANR	8985423	Identifier	value		8985359	1					
ANR	8985424	Identifier	pname		8985359	1					
ANR	8985425	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2354:4:75352:75398	8985359	5	True				
ANR	8985426	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8985359	0		=			
ANR	8985427	Identifier	code		8985359	0					
ANR	8985428	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8985359	1					
ANR	8985429	Callee	array_get		8985359	0					
ANR	8985430	Identifier	array_get		8985359	0					
ANR	8985431	ArgumentList	imemory		8985359	1					
ANR	8985432	Argument	imemory		8985359	0					
ANR	8985433	Identifier	imemory		8985359	0					
ANR	8985434	Argument	space		8985359	1					
ANR	8985435	Identifier	space		8985359	0					
ANR	8985436	Argument	1		8985359	2					
ANR	8985437	PrimaryExpression	1		8985359	0					
ANR	8985438	Argument	& CIEdict1		8985359	3					
ANR	8985439	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985440	UnaryOperator	&		8985359	0					
ANR	8985441	Identifier	CIEdict1		8985359	1					
ANR	8985442	IfStatement	if ( code < 0 )		8985359	6					
ANR	8985443	Condition	code < 0	2355:8:75408:75415	8985359	0	True				
ANR	8985444	RelationalExpression	code < 0		8985359	0		<			
ANR	8985445	Identifier	code		8985359	0					
ANR	8985446	PrimaryExpression	0		8985359	1					
ANR	8985447	ReturnStatement	return 0 ;	2356:8:75426:75434	8985359	1	True				
ANR	8985448	PrimaryExpression	0		8985359	0					
ANR	8985449	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		8985359	7					
ANR	8985450	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2357:8:75444:75502	8985359	0	True				
ANR	8985451	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8985359	0					
ANR	8985452	UnaryOperator	!		8985359	0					
ANR	8985453	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8985359	1					
ANR	8985454	Callee	hashdictkey		8985359	0					
ANR	8985455	Identifier	hashdictkey		8985359	0					
ANR	8985456	ArgumentList	i_ctx_p		8985359	1					
ANR	8985457	Argument	i_ctx_p		8985359	0					
ANR	8985458	Identifier	i_ctx_p		8985359	0					
ANR	8985459	Argument	& CIEdict1		8985359	1					
ANR	8985460	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985461	UnaryOperator	&		8985359	0					
ANR	8985462	Identifier	CIEdict1		8985359	1					
ANR	8985463	Argument	"( char * ) ""WhitePoint"""		8985359	2					
ANR	8985464	CastExpression	"( char * ) ""WhitePoint"""		8985359	0					
ANR	8985465	CastTarget	char *		8985359	0					
ANR	8985466	PrimaryExpression	"""WhitePoint"""		8985359	1					
ANR	8985467	Argument	md5		8985359	3					
ANR	8985468	Identifier	md5		8985359	0					
ANR	8985469	ReturnStatement	return 0 ;	2358:8:75513:75521	8985359	1	True				
ANR	8985470	PrimaryExpression	0		8985359	0					
ANR	8985471	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		8985359	8					
ANR	8985472	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2359:8:75531:75589	8985359	0	True				
ANR	8985473	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8985359	0					
ANR	8985474	UnaryOperator	!		8985359	0					
ANR	8985475	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8985359	1					
ANR	8985476	Callee	hashdictkey		8985359	0					
ANR	8985477	Identifier	hashdictkey		8985359	0					
ANR	8985478	ArgumentList	i_ctx_p		8985359	1					
ANR	8985479	Argument	i_ctx_p		8985359	0					
ANR	8985480	Identifier	i_ctx_p		8985359	0					
ANR	8985481	Argument	& CIEdict1		8985359	1					
ANR	8985482	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985483	UnaryOperator	&		8985359	0					
ANR	8985484	Identifier	CIEdict1		8985359	1					
ANR	8985485	Argument	"( char * ) ""BlackPoint"""		8985359	2					
ANR	8985486	CastExpression	"( char * ) ""BlackPoint"""		8985359	0					
ANR	8985487	CastTarget	char *		8985359	0					
ANR	8985488	PrimaryExpression	"""BlackPoint"""		8985359	1					
ANR	8985489	Argument	md5		8985359	3					
ANR	8985490	Identifier	md5		8985359	0					
ANR	8985491	ReturnStatement	return 0 ;	2360:8:75600:75608	8985359	1	True				
ANR	8985492	PrimaryExpression	0		8985359	0					
ANR	8985493	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		8985359	9					
ANR	8985494	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2361:8:75618:75674	8985359	0	True				
ANR	8985495	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8985359	0					
ANR	8985496	UnaryOperator	!		8985359	0					
ANR	8985497	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8985359	1					
ANR	8985498	Callee	hashdictkey		8985359	0					
ANR	8985499	Identifier	hashdictkey		8985359	0					
ANR	8985500	ArgumentList	i_ctx_p		8985359	1					
ANR	8985501	Argument	i_ctx_p		8985359	0					
ANR	8985502	Identifier	i_ctx_p		8985359	0					
ANR	8985503	Argument	& CIEdict1		8985359	1					
ANR	8985504	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985505	UnaryOperator	&		8985359	0					
ANR	8985506	Identifier	CIEdict1		8985359	1					
ANR	8985507	Argument	"( char * ) ""RangeABC"""		8985359	2					
ANR	8985508	CastExpression	"( char * ) ""RangeABC"""		8985359	0					
ANR	8985509	CastTarget	char *		8985359	0					
ANR	8985510	PrimaryExpression	"""RangeABC"""		8985359	1					
ANR	8985511	Argument	md5		8985359	3					
ANR	8985512	Identifier	md5		8985359	0					
ANR	8985513	ReturnStatement	return 0 ;	2362:8:75685:75693	8985359	1	True				
ANR	8985514	PrimaryExpression	0		8985359	0					
ANR	8985515	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		8985359	10					
ANR	8985516	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2363:8:75703:75760	8985359	0	True				
ANR	8985517	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8985359	0					
ANR	8985518	UnaryOperator	!		8985359	0					
ANR	8985519	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8985359	1					
ANR	8985520	Callee	hashdictkey		8985359	0					
ANR	8985521	Identifier	hashdictkey		8985359	0					
ANR	8985522	ArgumentList	i_ctx_p		8985359	1					
ANR	8985523	Argument	i_ctx_p		8985359	0					
ANR	8985524	Identifier	i_ctx_p		8985359	0					
ANR	8985525	Argument	& CIEdict1		8985359	1					
ANR	8985526	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985527	UnaryOperator	&		8985359	0					
ANR	8985528	Identifier	CIEdict1		8985359	1					
ANR	8985529	Argument	"( char * ) ""DecodeABC"""		8985359	2					
ANR	8985530	CastExpression	"( char * ) ""DecodeABC"""		8985359	0					
ANR	8985531	CastTarget	char *		8985359	0					
ANR	8985532	PrimaryExpression	"""DecodeABC"""		8985359	1					
ANR	8985533	Argument	md5		8985359	3					
ANR	8985534	Identifier	md5		8985359	0					
ANR	8985535	ReturnStatement	return 0 ;	2364:8:75771:75779	8985359	1	True				
ANR	8985536	PrimaryExpression	0		8985359	0					
ANR	8985537	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		8985359	11					
ANR	8985538	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2365:8:75789:75846	8985359	0	True				
ANR	8985539	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8985359	0					
ANR	8985540	UnaryOperator	!		8985359	0					
ANR	8985541	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8985359	1					
ANR	8985542	Callee	hashdictkey		8985359	0					
ANR	8985543	Identifier	hashdictkey		8985359	0					
ANR	8985544	ArgumentList	i_ctx_p		8985359	1					
ANR	8985545	Argument	i_ctx_p		8985359	0					
ANR	8985546	Identifier	i_ctx_p		8985359	0					
ANR	8985547	Argument	& CIEdict1		8985359	1					
ANR	8985548	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985549	UnaryOperator	&		8985359	0					
ANR	8985550	Identifier	CIEdict1		8985359	1					
ANR	8985551	Argument	"( char * ) ""MatrixABC"""		8985359	2					
ANR	8985552	CastExpression	"( char * ) ""MatrixABC"""		8985359	0					
ANR	8985553	CastTarget	char *		8985359	0					
ANR	8985554	PrimaryExpression	"""MatrixABC"""		8985359	1					
ANR	8985555	Argument	md5		8985359	3					
ANR	8985556	Identifier	md5		8985359	0					
ANR	8985557	ReturnStatement	return 0 ;	2366:8:75857:75865	8985359	1	True				
ANR	8985558	PrimaryExpression	0		8985359	0					
ANR	8985559	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		8985359	12					
ANR	8985560	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2367:8:75875:75931	8985359	0	True				
ANR	8985561	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8985359	0					
ANR	8985562	UnaryOperator	!		8985359	0					
ANR	8985563	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8985359	1					
ANR	8985564	Callee	hashdictkey		8985359	0					
ANR	8985565	Identifier	hashdictkey		8985359	0					
ANR	8985566	ArgumentList	i_ctx_p		8985359	1					
ANR	8985567	Argument	i_ctx_p		8985359	0					
ANR	8985568	Identifier	i_ctx_p		8985359	0					
ANR	8985569	Argument	& CIEdict1		8985359	1					
ANR	8985570	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985571	UnaryOperator	&		8985359	0					
ANR	8985572	Identifier	CIEdict1		8985359	1					
ANR	8985573	Argument	"( char * ) ""RangeLMN"""		8985359	2					
ANR	8985574	CastExpression	"( char * ) ""RangeLMN"""		8985359	0					
ANR	8985575	CastTarget	char *		8985359	0					
ANR	8985576	PrimaryExpression	"""RangeLMN"""		8985359	1					
ANR	8985577	Argument	md5		8985359	3					
ANR	8985578	Identifier	md5		8985359	0					
ANR	8985579	ReturnStatement	return 0 ;	2368:8:75942:75950	8985359	1	True				
ANR	8985580	PrimaryExpression	0		8985359	0					
ANR	8985581	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		8985359	13					
ANR	8985582	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2369:8:75960:76017	8985359	0	True				
ANR	8985583	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8985359	0					
ANR	8985584	UnaryOperator	!		8985359	0					
ANR	8985585	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8985359	1					
ANR	8985586	Callee	hashdictkey		8985359	0					
ANR	8985587	Identifier	hashdictkey		8985359	0					
ANR	8985588	ArgumentList	i_ctx_p		8985359	1					
ANR	8985589	Argument	i_ctx_p		8985359	0					
ANR	8985590	Identifier	i_ctx_p		8985359	0					
ANR	8985591	Argument	& CIEdict1		8985359	1					
ANR	8985592	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985593	UnaryOperator	&		8985359	0					
ANR	8985594	Identifier	CIEdict1		8985359	1					
ANR	8985595	Argument	"( char * ) ""DecodeLMN"""		8985359	2					
ANR	8985596	CastExpression	"( char * ) ""DecodeLMN"""		8985359	0					
ANR	8985597	CastTarget	char *		8985359	0					
ANR	8985598	PrimaryExpression	"""DecodeLMN"""		8985359	1					
ANR	8985599	Argument	md5		8985359	3					
ANR	8985600	Identifier	md5		8985359	0					
ANR	8985601	ReturnStatement	return 0 ;	2370:8:76028:76036	8985359	1	True				
ANR	8985602	PrimaryExpression	0		8985359	0					
ANR	8985603	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		8985359	14					
ANR	8985604	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2371:8:76046:76102	8985359	0	True				
ANR	8985605	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8985359	0					
ANR	8985606	UnaryOperator	!		8985359	0					
ANR	8985607	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8985359	1					
ANR	8985608	Callee	hashdictkey		8985359	0					
ANR	8985609	Identifier	hashdictkey		8985359	0					
ANR	8985610	ArgumentList	i_ctx_p		8985359	1					
ANR	8985611	Argument	i_ctx_p		8985359	0					
ANR	8985612	Identifier	i_ctx_p		8985359	0					
ANR	8985613	Argument	& CIEdict1		8985359	1					
ANR	8985614	UnaryOperationExpression	& CIEdict1		8985359	0					
ANR	8985615	UnaryOperator	&		8985359	0					
ANR	8985616	Identifier	CIEdict1		8985359	1					
ANR	8985617	Argument	"( char * ) ""MatrixMN"""		8985359	2					
ANR	8985618	CastExpression	"( char * ) ""MatrixMN"""		8985359	0					
ANR	8985619	CastTarget	char *		8985359	0					
ANR	8985620	PrimaryExpression	"""MatrixMN"""		8985359	1					
ANR	8985621	Argument	md5		8985359	3					
ANR	8985622	Identifier	md5		8985359	0					
ANR	8985623	ReturnStatement	return 0 ;	2372:8:76113:76121	8985359	1	True				
ANR	8985624	PrimaryExpression	0		8985359	0					
ANR	8985625	ReturnStatement	return 1 ;	2373:4:76127:76135	8985359	15	True				
ANR	8985626	PrimaryExpression	1		8985359	0					
ANR	8985627	ReturnType	static int		8985359	1					
ANR	8985628	Identifier	hashcieabcspace		8985359	2					
ANR	8985629	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		8985359	3					
ANR	8985630	Parameter	i_ctx_t * i_ctx_p	2344:27:75054:75070	8985359	0	True				
ANR	8985631	ParameterType	i_ctx_t *		8985359	0					
ANR	8985632	Identifier	i_ctx_p		8985359	1					
ANR	8985633	Parameter	ref * space	2344:46:75073:75082	8985359	1	True				
ANR	8985634	ParameterType	ref *		8985359	0					
ANR	8985635	Identifier	space		8985359	1					
ANR	8985636	Parameter	gs_md5_state_t * md5	2344:58:75085:75103	8985359	2	True				
ANR	8985637	ParameterType	gs_md5_state_t *		8985359	0					
ANR	8985638	Identifier	md5		8985359	1					
ANR	8985639	CFGEntryNode	ENTRY		8985359		True				
ANR	8985640	CFGExitNode	EXIT		8985359		True				
ANR	8985641	Symbol	spacename		8985359						
ANR	8985642	Symbol	hashdictkey		8985359						
ANR	8985643	Symbol	code		8985359						
ANR	8985644	Symbol	array_get		8985359						
ANR	8985645	Symbol	& spacename		8985359						
ANR	8985646	Symbol	& CIEdict1		8985359						
ANR	8985647	Symbol	space		8985359						
ANR	8985648	Symbol	spacename . value . pname		8985359						
ANR	8985649	Symbol	i_ctx_p		8985359						
ANR	8985650	Symbol	& spacename . value . pname		8985359						
ANR	8985651	Symbol	spacename . value		8985359						
ANR	8985652	Symbol	& spacename . value		8985359						
ANR	8985653	Symbol	CIEdict1		8985359						
ANR	8985654	Symbol	imemory		8985359						
ANR	8985655	Symbol	md5		8985359						
ANR	8985656	Function	setcieabcspace	2376:0:76140:77892							
ANR	8985657	FunctionDef	"setcieabcspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8985656	0					
ANR	8985658	CompoundStatement		2377:0:76230:77892	8985656	0					
ANR	8985659	IdentifierDeclStatement	int code = 0 ;	2378:4:76236:76248	8985656	0	True				
ANR	8985660	IdentifierDecl	code = 0		8985656	0					
ANR	8985661	IdentifierDeclType	int		8985656	0					
ANR	8985662	Identifier	code		8985656	1					
ANR	8985663	AssignmentExpression	code = 0		8985656	2		=			
ANR	8985664	Identifier	code		8985656	0					
ANR	8985665	PrimaryExpression	0		8985656	1					
ANR	8985666	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2379:4:76254:76273	8985656	1	True				
ANR	8985667	IdentifierDecl	CIEDict		8985656	0					
ANR	8985668	IdentifierDeclType	ref		8985656	0					
ANR	8985669	Identifier	CIEDict		8985656	1					
ANR	8985670	IdentifierDecl	* nocie		8985656	1					
ANR	8985671	IdentifierDeclType	ref *		8985656	0					
ANR	8985672	Identifier	nocie		8985656	1					
ANR	8985673	IdentifierDeclStatement	ulong dictkey ;	2380:4:76279:76292	8985656	2	True				
ANR	8985674	IdentifierDecl	dictkey		8985656	0					
ANR	8985675	IdentifierDeclType	ulong		8985656	0					
ANR	8985676	Identifier	dictkey		8985656	1					
ANR	8985677	IdentifierDeclStatement	gs_md5_state_t md5 ;	2381:4:76298:76316	8985656	3	True				
ANR	8985678	IdentifierDecl	md5		8985656	0					
ANR	8985679	IdentifierDeclType	gs_md5_state_t		8985656	0					
ANR	8985680	Identifier	md5		8985656	1					
ANR	8985681	IdentifierDeclStatement	byte key [ 16 ] ;	2382:4:76322:76334	8985656	4	True				
ANR	8985682	IdentifierDecl	key [ 16 ]		8985656	0					
ANR	8985683	IdentifierDeclType	byte [ 16 ]		8985656	0					
ANR	8985684	Identifier	key		8985656	1					
ANR	8985685	PrimaryExpression	16		8985656	2					
ANR	8985686	IfStatement	if ( i_ctx_p -> language_level < 2 )		8985656	5					
ANR	8985687	Condition	i_ctx_p -> language_level < 2	2384:8:76345:76371	8985656	0	True				
ANR	8985688	RelationalExpression	i_ctx_p -> language_level < 2		8985656	0		<			
ANR	8985689	PtrMemberAccess	i_ctx_p -> language_level		8985656	0					
ANR	8985690	Identifier	i_ctx_p		8985656	0					
ANR	8985691	Identifier	language_level		8985656	1					
ANR	8985692	PrimaryExpression	2		8985656	1					
ANR	8985693	ExpressionStatement	return_error ( gs_error_undefined )	2385:8:76382:76414	8985656	1	True				
ANR	8985694	CallExpression	return_error ( gs_error_undefined )		8985656	0					
ANR	8985695	Callee	return_error		8985656	0					
ANR	8985696	Identifier	return_error		8985656	0					
ANR	8985697	ArgumentList	gs_error_undefined		8985656	1					
ANR	8985698	Argument	gs_error_undefined		8985656	0					
ANR	8985699	Identifier	gs_error_undefined		8985656	0					
ANR	8985700	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2387:4:76421:76473	8985656	6	True				
ANR	8985701	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8985656	0		=			
ANR	8985702	Identifier	code		8985656	0					
ANR	8985703	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8985656	1					
ANR	8985704	Callee	dict_find_string		8985656	0					
ANR	8985705	Identifier	dict_find_string		8985656	0					
ANR	8985706	ArgumentList	systemdict		8985656	1					
ANR	8985707	Argument	systemdict		8985656	0					
ANR	8985708	Identifier	systemdict		8985656	0					
ANR	8985709	Argument	"""NOCIE"""		8985656	1					
ANR	8985710	PrimaryExpression	"""NOCIE"""		8985656	0					
ANR	8985711	Argument	& nocie		8985656	2					
ANR	8985712	UnaryOperationExpression	& nocie		8985656	0					
ANR	8985713	UnaryOperator	&		8985656	0					
ANR	8985714	Identifier	nocie		8985656	1					
ANR	8985715	IfStatement	if ( code > 0 )		8985656	7					
ANR	8985716	Condition	code > 0	2388:8:76483:76490	8985656	0	True				
ANR	8985717	RelationalExpression	code > 0		8985656	0		>			
ANR	8985718	Identifier	code		8985656	0					
ANR	8985719	PrimaryExpression	0		8985656	1					
ANR	8985720	CompoundStatement		12:18:262:262	8985656	1					
ANR	8985721	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		8985656	0					
ANR	8985722	Condition	"! r_has_type ( nocie , t_boolean )"	2389:12:76507:76535	8985656	0	True				
ANR	8985723	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		8985656	0					
ANR	8985724	UnaryOperator	!		8985656	0					
ANR	8985725	CallExpression	"r_has_type ( nocie , t_boolean )"		8985656	1					
ANR	8985726	Callee	r_has_type		8985656	0					
ANR	8985727	Identifier	r_has_type		8985656	0					
ANR	8985728	ArgumentList	nocie		8985656	1					
ANR	8985729	Argument	nocie		8985656	0					
ANR	8985730	Identifier	nocie		8985656	0					
ANR	8985731	Argument	t_boolean		8985656	1					
ANR	8985732	Identifier	t_boolean		8985656	0					
ANR	8985733	ExpressionStatement	return_error ( gs_error_typecheck )	2390:12:76550:76582	8985656	1	True				
ANR	8985734	CallExpression	return_error ( gs_error_typecheck )		8985656	0					
ANR	8985735	Callee	return_error		8985656	0					
ANR	8985736	Identifier	return_error		8985656	0					
ANR	8985737	ArgumentList	gs_error_typecheck		8985656	1					
ANR	8985738	Argument	gs_error_typecheck		8985656	0					
ANR	8985739	Identifier	gs_error_typecheck		8985656	0					
ANR	8985740	IfStatement	if ( nocie -> value . boolval )		8985656	1					
ANR	8985741	Condition	nocie -> value . boolval	2391:12:76596:76615	8985656	0	True				
ANR	8985742	MemberAccess	nocie -> value . boolval		8985656	0					
ANR	8985743	PtrMemberAccess	nocie -> value		8985656	0					
ANR	8985744	Identifier	nocie		8985656	0					
ANR	8985745	Identifier	value		8985656	1					
ANR	8985746	Identifier	boolval		8985656	1					
ANR	8985747	ReturnStatement	"return setrgbspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2392:12:76630:76676	8985656	1	True				
ANR	8985748	CallExpression	"setrgbspace ( i_ctx_p , r , stage , cont , 1 )"		8985656	0					
ANR	8985749	Callee	setrgbspace		8985656	0					
ANR	8985750	Identifier	setrgbspace		8985656	0					
ANR	8985751	ArgumentList	i_ctx_p		8985656	1					
ANR	8985752	Argument	i_ctx_p		8985656	0					
ANR	8985753	Identifier	i_ctx_p		8985656	0					
ANR	8985754	Argument	r		8985656	1					
ANR	8985755	Identifier	r		8985656	0					
ANR	8985756	Argument	stage		8985656	2					
ANR	8985757	Identifier	stage		8985656	0					
ANR	8985758	Argument	cont		8985656	3					
ANR	8985759	Identifier	cont		8985656	0					
ANR	8985760	Argument	1		8985656	4					
ANR	8985761	PrimaryExpression	1		8985656	0					
ANR	8985762	ExpressionStatement	* cont = 0	2395:4:76689:76698	8985656	8	True				
ANR	8985763	AssignmentExpression	* cont = 0		8985656	0		=			
ANR	8985764	UnaryOperationExpression	* cont		8985656	0					
ANR	8985765	UnaryOperator	*		8985656	0					
ANR	8985766	Identifier	cont		8985656	1					
ANR	8985767	PrimaryExpression	0		8985656	1					
ANR	8985768	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2396:4:76704:76745	8985656	9	True				
ANR	8985769	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		8985656	0		=			
ANR	8985770	Identifier	code		8985656	0					
ANR	8985771	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		8985656	1					
ANR	8985772	Callee	array_get		8985656	0					
ANR	8985773	Identifier	array_get		8985656	0					
ANR	8985774	ArgumentList	imemory		8985656	1					
ANR	8985775	Argument	imemory		8985656	0					
ANR	8985776	Identifier	imemory		8985656	0					
ANR	8985777	Argument	r		8985656	1					
ANR	8985778	Identifier	r		8985656	0					
ANR	8985779	Argument	1		8985656	2					
ANR	8985780	PrimaryExpression	1		8985656	0					
ANR	8985781	Argument	& CIEDict		8985656	3					
ANR	8985782	UnaryOperationExpression	& CIEDict		8985656	0					
ANR	8985783	UnaryOperator	&		8985656	0					
ANR	8985784	Identifier	CIEDict		8985656	1					
ANR	8985785	IfStatement	if ( code < 0 )		8985656	10					
ANR	8985786	Condition	code < 0	2397:8:76755:76762	8985656	0	True				
ANR	8985787	RelationalExpression	code < 0		8985656	0		<			
ANR	8985788	Identifier	code		8985656	0					
ANR	8985789	PrimaryExpression	0		8985656	1					
ANR	8985790	ReturnStatement	return code ;	2398:8:76773:76784	8985656	1	True				
ANR	8985791	Identifier	code		8985656	0					
ANR	8985792	IfStatement	if ( ( * stage ) > 0 )		8985656	11					
ANR	8985793	Condition	( * stage ) > 0	2400:8:76795:76806	8985656	0	True				
ANR	8985794	RelationalExpression	( * stage ) > 0		8985656	0		>			
ANR	8985795	UnaryOperationExpression	* stage		8985656	0					
ANR	8985796	UnaryOperator	*		8985656	0					
ANR	8985797	Identifier	stage		8985656	1					
ANR	8985798	PrimaryExpression	0		8985656	1					
ANR	8985799	CompoundStatement		26:8:616:621	8985656	1					
ANR	8985800	IdentifierDeclStatement	gs_client_color cc ;	2401:8:76819:76837	8985656	0	True				
ANR	8985801	IdentifierDecl	cc		8985656	0					
ANR	8985802	IdentifierDeclType	gs_client_color		8985656	0					
ANR	8985803	Identifier	cc		8985656	1					
ANR	8985804	IdentifierDeclStatement	int i ;	2402:8:76847:76852	8985656	1	True				
ANR	8985805	IdentifierDecl	i		8985656	0					
ANR	8985806	IdentifierDeclType	int		8985656	0					
ANR	8985807	Identifier	i		8985656	1					
ANR	8985808	ExpressionStatement	cc . pattern = 0x00	2404:8:76863:76880	8985656	2	True				
ANR	8985809	AssignmentExpression	cc . pattern = 0x00		8985656	0		=			
ANR	8985810	MemberAccess	cc . pattern		8985656	0					
ANR	8985811	Identifier	cc		8985656	0					
ANR	8985812	Identifier	pattern		8985656	1					
ANR	8985813	PrimaryExpression	0x00		8985656	1					
ANR	8985814	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8985656	3					
ANR	8985815	ForInit	i = 0 ;	2405:13:76895:76898	8985656	0	True				
ANR	8985816	AssignmentExpression	i = 0		8985656	0		=			
ANR	8985817	Identifier	i		8985656	0					
ANR	8985818	PrimaryExpression	0		8985656	1					
ANR	8985819	Condition	i < 3	2405:17:76899:76901	8985656	1	True				
ANR	8985820	RelationalExpression	i < 3		8985656	0		<			
ANR	8985821	Identifier	i		8985656	0					
ANR	8985822	PrimaryExpression	3		8985656	1					
ANR	8985823	PostIncDecOperationExpression	i ++	2405:21:76903:76905	8985656	2	True				
ANR	8985824	Identifier	i		8985656	0					
ANR	8985825	IncDec	++		8985656	1					
ANR	8985826	ExpressionStatement	cc . paint . values [ i ] = 0	2406:12:76920:76942	8985656	3	True				
ANR	8985827	AssignmentExpression	cc . paint . values [ i ] = 0		8985656	0		=			
ANR	8985828	ArrayIndexing	cc . paint . values [ i ]		8985656	0					
ANR	8985829	MemberAccess	cc . paint . values		8985656	0					
ANR	8985830	MemberAccess	cc . paint		8985656	0					
ANR	8985831	Identifier	cc		8985656	0					
ANR	8985832	Identifier	paint		8985656	1					
ANR	8985833	Identifier	values		8985656	1					
ANR	8985834	Identifier	i		8985656	1					
ANR	8985835	PrimaryExpression	0		8985656	1					
ANR	8985836	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2407:8:76952:76980	8985656	4	True				
ANR	8985837	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8985656	0		=			
ANR	8985838	Identifier	code		8985656	0					
ANR	8985839	CallExpression	"gs_setcolor ( igs , & cc )"		8985656	1					
ANR	8985840	Callee	gs_setcolor		8985656	0					
ANR	8985841	Identifier	gs_setcolor		8985656	0					
ANR	8985842	ArgumentList	igs		8985656	1					
ANR	8985843	Argument	igs		8985656	0					
ANR	8985844	Identifier	igs		8985656	0					
ANR	8985845	Argument	& cc		8985656	1					
ANR	8985846	UnaryOperationExpression	& cc		8985656	0					
ANR	8985847	UnaryOperator	&		8985656	0					
ANR	8985848	Identifier	cc		8985656	1					
ANR	8985849	ExpressionStatement	* stage = 0	2408:8:76990:77000	8985656	5	True				
ANR	8985850	AssignmentExpression	* stage = 0		8985656	0		=			
ANR	8985851	UnaryOperationExpression	* stage		8985656	0					
ANR	8985852	UnaryOperator	*		8985656	0					
ANR	8985853	Identifier	stage		8985656	1					
ANR	8985854	PrimaryExpression	0		8985656	1					
ANR	8985855	ReturnStatement	return code ;	2409:8:77010:77021	8985656	6	True				
ANR	8985856	Identifier	code		8985656	0					
ANR	8985857	ExpressionStatement	gs_md5_init ( & md5 )	2411:4:77033:77050	8985656	12	True				
ANR	8985858	CallExpression	gs_md5_init ( & md5 )		8985656	0					
ANR	8985859	Callee	gs_md5_init		8985656	0					
ANR	8985860	Identifier	gs_md5_init		8985656	0					
ANR	8985861	ArgumentList	& md5		8985656	1					
ANR	8985862	Argument	& md5		8985656	0					
ANR	8985863	UnaryOperationExpression	& md5		8985656	0					
ANR	8985864	UnaryOperator	&		8985656	0					
ANR	8985865	Identifier	md5		8985656	1					
ANR	8985866	ExpressionStatement	dictkey = 0	2416:4:77241:77252	8985656	13	True				
ANR	8985867	AssignmentExpression	dictkey = 0		8985656	0		=			
ANR	8985868	Identifier	dictkey		8985656	0					
ANR	8985869	PrimaryExpression	0		8985656	1					
ANR	8985870	IfStatement	"if ( hashcieabcspace ( i_ctx_p , r , & md5 ) )"		8985656	14					
ANR	8985871	Condition	"hashcieabcspace ( i_ctx_p , r , & md5 )"	2417:8:77262:77294	8985656	0	True				
ANR	8985872	CallExpression	"hashcieabcspace ( i_ctx_p , r , & md5 )"		8985656	0					
ANR	8985873	Callee	hashcieabcspace		8985656	0					
ANR	8985874	Identifier	hashcieabcspace		8985656	0					
ANR	8985875	ArgumentList	i_ctx_p		8985656	1					
ANR	8985876	Argument	i_ctx_p		8985656	0					
ANR	8985877	Identifier	i_ctx_p		8985656	0					
ANR	8985878	Argument	r		8985656	1					
ANR	8985879	Identifier	r		8985656	0					
ANR	8985880	Argument	& md5		8985656	2					
ANR	8985881	UnaryOperationExpression	& md5		8985656	0					
ANR	8985882	UnaryOperator	&		8985656	0					
ANR	8985883	Identifier	md5		8985656	1					
ANR	8985884	CompoundStatement		41:43:1066:1066	8985656	1					
ANR	8985885	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2424:8:77651:77675	8985656	0	True				
ANR	8985886	CallExpression	"gs_md5_finish ( & md5 , key )"		8985656	0					
ANR	8985887	Callee	gs_md5_finish		8985656	0					
ANR	8985888	Identifier	gs_md5_finish		8985656	0					
ANR	8985889	ArgumentList	& md5		8985656	1					
ANR	8985890	Argument	& md5		8985656	0					
ANR	8985891	UnaryOperationExpression	& md5		8985656	0					
ANR	8985892	UnaryOperator	&		8985656	0					
ANR	8985893	Identifier	md5		8985656	1					
ANR	8985894	Argument	key		8985656	1					
ANR	8985895	Identifier	key		8985656	0					
ANR	8985896	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2425:8:77685:77738	8985656	1	True				
ANR	8985897	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656	0		=			
ANR	8985898	Identifier	dictkey		8985656	0					
ANR	8985899	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656	1					
ANR	8985900	UnaryOperator	*		8985656	0					
ANR	8985901	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656	1					
ANR	8985902	CastTarget	ulong *		8985656	0					
ANR	8985903	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656	1					
ANR	8985904	UnaryOperator	&		8985656	0					
ANR	8985905	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656	1					
ANR	8985906	Identifier	key		8985656	0					
ANR	8985907	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		8985656	1		-			
ANR	8985908	SizeofExpression	sizeof ( key )		8985656	0					
ANR	8985909	Sizeof	sizeof		8985656	0					
ANR	8985910	SizeofOperand	key		8985656	1					
ANR	8985911	SizeofExpression	sizeof ( ulong )		8985656	1					
ANR	8985912	Sizeof	sizeof		8985656	0					
ANR	8985913	SizeofOperand	ulong		8985656	1					
ANR	8985914	ElseStatement	else		8985656	0					
ANR	8985915	CompoundStatement		50:11:1520:1520	8985656	0					
ANR	8985916	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2427:8:77761:77785	8985656	0	True				
ANR	8985917	CallExpression	"gs_md5_finish ( & md5 , key )"		8985656	0					
ANR	8985918	Callee	gs_md5_finish		8985656	0					
ANR	8985919	Identifier	gs_md5_finish		8985656	0					
ANR	8985920	ArgumentList	& md5		8985656	1					
ANR	8985921	Argument	& md5		8985656	0					
ANR	8985922	UnaryOperationExpression	& md5		8985656	0					
ANR	8985923	UnaryOperator	&		8985656	0					
ANR	8985924	Identifier	md5		8985656	1					
ANR	8985925	Argument	key		8985656	1					
ANR	8985926	Identifier	key		8985656	0					
ANR	8985927	ExpressionStatement	"code = cieabcspace ( i_ctx_p , & CIEDict , dictkey )"	2429:4:77797:77842	8985656	15	True				
ANR	8985928	AssignmentExpression	"code = cieabcspace ( i_ctx_p , & CIEDict , dictkey )"		8985656	0		=			
ANR	8985929	Identifier	code		8985656	0					
ANR	8985930	CallExpression	"cieabcspace ( i_ctx_p , & CIEDict , dictkey )"		8985656	1					
ANR	8985931	Callee	cieabcspace		8985656	0					
ANR	8985932	Identifier	cieabcspace		8985656	0					
ANR	8985933	ArgumentList	i_ctx_p		8985656	1					
ANR	8985934	Argument	i_ctx_p		8985656	0					
ANR	8985935	Identifier	i_ctx_p		8985656	0					
ANR	8985936	Argument	& CIEDict		8985656	1					
ANR	8985937	UnaryOperationExpression	& CIEDict		8985656	0					
ANR	8985938	UnaryOperator	&		8985656	0					
ANR	8985939	Identifier	CIEDict		8985656	1					
ANR	8985940	Argument	dictkey		8985656	2					
ANR	8985941	Identifier	dictkey		8985656	0					
ANR	8985942	ExpressionStatement	* cont = 1	2430:4:77848:77857	8985656	16	True				
ANR	8985943	AssignmentExpression	* cont = 1		8985656	0		=			
ANR	8985944	UnaryOperationExpression	* cont		8985656	0					
ANR	8985945	UnaryOperator	*		8985656	0					
ANR	8985946	Identifier	cont		8985656	1					
ANR	8985947	PrimaryExpression	1		8985656	1					
ANR	8985948	ExpressionStatement	( * stage ) ++	2431:4:77863:77873	8985656	17	True				
ANR	8985949	PostIncDecOperationExpression	( * stage ) ++		8985656	0					
ANR	8985950	UnaryOperationExpression	* stage		8985656	0					
ANR	8985951	UnaryOperator	*		8985656	0					
ANR	8985952	Identifier	stage		8985656	1					
ANR	8985953	IncDec	++		8985656	1					
ANR	8985954	ReturnStatement	return code ;	2432:4:77879:77890	8985656	18	True				
ANR	8985955	Identifier	code		8985656	0					
ANR	8985956	ReturnType	static int		8985656	1					
ANR	8985957	Identifier	setcieabcspace		8985656	2					
ANR	8985958	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8985656	3					
ANR	8985959	Parameter	i_ctx_t * i_ctx_p	2376:26:76166:76182	8985656	0	True				
ANR	8985960	ParameterType	i_ctx_t *		8985656	0					
ANR	8985961	Identifier	i_ctx_p		8985656	1					
ANR	8985962	Parameter	ref * r	2376:45:76185:76190	8985656	1	True				
ANR	8985963	ParameterType	ref *		8985656	0					
ANR	8985964	Identifier	r		8985656	1					
ANR	8985965	Parameter	int * stage	2376:53:76193:76202	8985656	2	True				
ANR	8985966	ParameterType	int *		8985656	0					
ANR	8985967	Identifier	stage		8985656	1					
ANR	8985968	Parameter	int * cont	2376:65:76205:76213	8985656	3	True				
ANR	8985969	ParameterType	int *		8985656	0					
ANR	8985970	Identifier	cont		8985656	1					
ANR	8985971	Parameter	int CIESubst	2376:76:76216:76227	8985656	4	True				
ANR	8985972	ParameterType	int		8985656	0					
ANR	8985973	Identifier	CIESubst		8985656	1					
ANR	8985974	CFGEntryNode	ENTRY		8985656		True				
ANR	8985975	CFGExitNode	EXIT		8985656		True				
ANR	8985976	Symbol	cc . pattern		8985656						
ANR	8985977	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8985656						
ANR	8985978	Symbol	code		8985656						
ANR	8985979	Symbol	i_ctx_p -> language_level		8985656						
ANR	8985980	Symbol	* cc		8985656						
ANR	8985981	Symbol	nocie -> value		8985656						
ANR	8985982	Symbol	gs_error_undefined		8985656						
ANR	8985983	Symbol	gs_setcolor		8985656						
ANR	8985984	Symbol	* key		8985656						
ANR	8985985	Symbol	* nocie		8985656						
ANR	8985986	Symbol	& cc		8985656						
ANR	8985987	Symbol	nocie -> value . boolval		8985656						
ANR	8985988	Symbol	r_has_type		8985656						
ANR	8985989	Symbol	gs_error_typecheck		8985656						
ANR	8985990	Symbol	igs		8985656						
ANR	8985991	Symbol	* cc . paint . values		8985656						
ANR	8985992	Symbol	* i_ctx_p		8985656						
ANR	8985993	Symbol	setrgbspace		8985656						
ANR	8985994	Symbol	imemory		8985656						
ANR	8985995	Symbol	cont		8985656						
ANR	8985996	Symbol	nocie		8985656						
ANR	8985997	Symbol	CIESubst		8985656						
ANR	8985998	Symbol	key		8985656						
ANR	8985999	Symbol	cieabcspace		8985656						
ANR	8986000	Symbol	cc		8985656						
ANR	8986001	Symbol	* stage		8985656						
ANR	8986002	Symbol	& md5		8985656						
ANR	8986003	Symbol	dict_find_string		8985656						
ANR	8986004	Symbol	hashcieabcspace		8985656						
ANR	8986005	Symbol	array_get		8985656						
ANR	8986006	Symbol	i		8985656						
ANR	8986007	Symbol	dictkey		8985656						
ANR	8986008	Symbol	& nocie		8985656						
ANR	8986009	Symbol	t_boolean		8985656						
ANR	8986010	Symbol	r		8985656						
ANR	8986011	Symbol	* cc . paint		8985656						
ANR	8986012	Symbol	* i		8985656						
ANR	8986013	Symbol	stage		8985656						
ANR	8986014	Symbol	CIEDict		8985656						
ANR	8986015	Symbol	* cont		8985656						
ANR	8986016	Symbol	& CIEDict		8985656						
ANR	8986017	Symbol	i_ctx_p		8985656						
ANR	8986018	Symbol	cc . paint		8985656						
ANR	8986019	Symbol	cc . paint . values		8985656						
ANR	8986020	Symbol	systemdict		8985656						
ANR	8986021	Symbol	md5		8985656						
ANR	8986022	Function	validatecieabcspace	2434:0:77894:80412							
ANR	8986023	FunctionDef	"validatecieabcspace (i_ctx_t * i_ctx_p , ref * * r)"		8986022	0					
ANR	8986024	CompoundStatement		2435:0:77953:80412	8986022	0					
ANR	8986025	IdentifierDeclStatement	"int code = 0 , i ;"	2436:4:77959:77974	8986022	0	True				
ANR	8986026	IdentifierDecl	code = 0		8986022	0					
ANR	8986027	IdentifierDeclType	int		8986022	0					
ANR	8986028	Identifier	code		8986022	1					
ANR	8986029	AssignmentExpression	code = 0		8986022	2		=			
ANR	8986030	Identifier	code		8986022	0					
ANR	8986031	PrimaryExpression	0		8986022	1					
ANR	8986032	IdentifierDecl	i		8986022	1					
ANR	8986033	IdentifierDeclType	int		8986022	0					
ANR	8986034	Identifier	i		8986022	1					
ANR	8986035	IdentifierDeclStatement	float value [ 9 ] ;	2437:4:77980:77994	8986022	1	True				
ANR	8986036	IdentifierDecl	value [ 9 ]		8986022	0					
ANR	8986037	IdentifierDeclType	float [ 9 ]		8986022	0					
ANR	8986038	Identifier	value		8986022	1					
ANR	8986039	PrimaryExpression	9		8986022	2					
ANR	8986040	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , * tempref , valref ;"	2438:4:78000:78049	8986022	2	True				
ANR	8986041	IdentifierDecl	CIEdict		8986022	0					
ANR	8986042	IdentifierDeclType	ref		8986022	0					
ANR	8986043	Identifier	CIEdict		8986022	1					
ANR	8986044	IdentifierDecl	* CIEspace = * r		8986022	1					
ANR	8986045	IdentifierDeclType	ref *		8986022	0					
ANR	8986046	Identifier	CIEspace		8986022	1					
ANR	8986047	AssignmentExpression	* CIEspace = * r		8986022	2		=			
ANR	8986048	Identifier	CIEspace		8986022	0					
ANR	8986049	UnaryOperationExpression	* r		8986022	1					
ANR	8986050	UnaryOperator	*		8986022	0					
ANR	8986051	Identifier	r		8986022	1					
ANR	8986052	IdentifierDecl	* tempref		8986022	2					
ANR	8986053	IdentifierDeclType	ref *		8986022	0					
ANR	8986054	Identifier	tempref		8986022	1					
ANR	8986055	IdentifierDecl	valref		8986022	3					
ANR	8986056	IdentifierDeclType	ref		8986022	0					
ANR	8986057	Identifier	valref		8986022	1					
ANR	8986058	IfStatement	if ( ! r_is_array ( CIEspace ) )		8986022	3					
ANR	8986059	Condition	! r_is_array ( CIEspace )	2440:8:78060:78080	8986022	0	True				
ANR	8986060	UnaryOperationExpression	! r_is_array ( CIEspace )		8986022	0					
ANR	8986061	UnaryOperator	!		8986022	0					
ANR	8986062	CallExpression	r_is_array ( CIEspace )		8986022	1					
ANR	8986063	Callee	r_is_array		8986022	0					
ANR	8986064	Identifier	r_is_array		8986022	0					
ANR	8986065	ArgumentList	CIEspace		8986022	1					
ANR	8986066	Argument	CIEspace		8986022	0					
ANR	8986067	Identifier	CIEspace		8986022	0					
ANR	8986068	ExpressionStatement	return_error ( gs_error_typecheck )	2441:8:78091:78123	8986022	1	True				
ANR	8986069	CallExpression	return_error ( gs_error_typecheck )		8986022	0					
ANR	8986070	Callee	return_error		8986022	0					
ANR	8986071	Identifier	return_error		8986022	0					
ANR	8986072	ArgumentList	gs_error_typecheck		8986022	1					
ANR	8986073	Argument	gs_error_typecheck		8986022	0					
ANR	8986074	Identifier	gs_error_typecheck		8986022	0					
ANR	8986075	IfStatement	if ( r_size ( CIEspace ) != 2 )		8986022	4					
ANR	8986076	Condition	r_size ( CIEspace ) != 2	2443:8:78194:78214	8986022	0	True				
ANR	8986077	EqualityExpression	r_size ( CIEspace ) != 2		8986022	0		!=			
ANR	8986078	CallExpression	r_size ( CIEspace )		8986022	0					
ANR	8986079	Callee	r_size		8986022	0					
ANR	8986080	Identifier	r_size		8986022	0					
ANR	8986081	ArgumentList	CIEspace		8986022	1					
ANR	8986082	Argument	CIEspace		8986022	0					
ANR	8986083	Identifier	CIEspace		8986022	0					
ANR	8986084	PrimaryExpression	2		8986022	1					
ANR	8986085	ExpressionStatement	return_error ( gs_error_rangecheck )	2444:8:78225:78258	8986022	1	True				
ANR	8986086	CallExpression	return_error ( gs_error_rangecheck )		8986022	0					
ANR	8986087	Callee	return_error		8986022	0					
ANR	8986088	Identifier	return_error		8986022	0					
ANR	8986089	ArgumentList	gs_error_rangecheck		8986022	1					
ANR	8986090	Argument	gs_error_rangecheck		8986022	0					
ANR	8986091	Identifier	gs_error_rangecheck		8986022	0					
ANR	8986092	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2446:4:78265:78313	8986022	5	True				
ANR	8986093	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		8986022	0		=			
ANR	8986094	Identifier	code		8986022	0					
ANR	8986095	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		8986022	1					
ANR	8986096	Callee	array_get		8986022	0					
ANR	8986097	Identifier	array_get		8986022	0					
ANR	8986098	ArgumentList	imemory		8986022	1					
ANR	8986099	Argument	imemory		8986022	0					
ANR	8986100	Identifier	imemory		8986022	0					
ANR	8986101	Argument	CIEspace		8986022	1					
ANR	8986102	Identifier	CIEspace		8986022	0					
ANR	8986103	Argument	1		8986022	2					
ANR	8986104	PrimaryExpression	1		8986022	0					
ANR	8986105	Argument	& CIEdict		8986022	3					
ANR	8986106	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986107	UnaryOperator	&		8986022	0					
ANR	8986108	Identifier	CIEdict		8986022	1					
ANR	8986109	IfStatement	if ( code < 0 )		8986022	6					
ANR	8986110	Condition	code < 0	2447:8:78323:78330	8986022	0	True				
ANR	8986111	RelationalExpression	code < 0		8986022	0		<			
ANR	8986112	Identifier	code		8986022	0					
ANR	8986113	PrimaryExpression	0		8986022	1					
ANR	8986114	ReturnStatement	return code ;	2448:8:78341:78352	8986022	1	True				
ANR	8986115	Identifier	code		8986022	0					
ANR	8986116	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2449:4:78358:78396	8986022	7	True				
ANR	8986117	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		8986022	0					
ANR	8986118	Callee	check_read_type		8986022	0					
ANR	8986119	Identifier	check_read_type		8986022	0					
ANR	8986120	ArgumentList	CIEdict		8986022	1					
ANR	8986121	Argument	CIEdict		8986022	0					
ANR	8986122	Identifier	CIEdict		8986022	0					
ANR	8986123	Argument	t_dictionary		8986022	1					
ANR	8986124	Identifier	t_dictionary		8986022	0					
ANR	8986125	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"	2452:4:78472:78513	8986022	8	True				
ANR	8986126	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"		8986022	0		=			
ANR	8986127	Identifier	code		8986022	0					
ANR	8986128	CallExpression	"checkWhitePoint ( i_ctx_p , & CIEdict )"		8986022	1					
ANR	8986129	Callee	checkWhitePoint		8986022	0					
ANR	8986130	Identifier	checkWhitePoint		8986022	0					
ANR	8986131	ArgumentList	i_ctx_p		8986022	1					
ANR	8986132	Argument	i_ctx_p		8986022	0					
ANR	8986133	Identifier	i_ctx_p		8986022	0					
ANR	8986134	Argument	& CIEdict		8986022	1					
ANR	8986135	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986136	UnaryOperator	&		8986022	0					
ANR	8986137	Identifier	CIEdict		8986022	1					
ANR	8986138	IfStatement	if ( code != 0 )		8986022	9					
ANR	8986139	Condition	code != 0	2453:8:78523:78531	8986022	0	True				
ANR	8986140	EqualityExpression	code != 0		8986022	0		!=			
ANR	8986141	Identifier	code		8986022	0					
ANR	8986142	PrimaryExpression	0		8986022	1					
ANR	8986143	ReturnStatement	return code ;	2454:8:78542:78553	8986022	1	True				
ANR	8986144	Identifier	code		8986022	0					
ANR	8986145	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2459:4:78663:78718	8986022	10	True				
ANR	8986146	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986022	0		=			
ANR	8986147	Identifier	code		8986022	0					
ANR	8986148	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986022	1					
ANR	8986149	Callee	dict_find_string		8986022	0					
ANR	8986150	Identifier	dict_find_string		8986022	0					
ANR	8986151	ArgumentList	& CIEdict		8986022	1					
ANR	8986152	Argument	& CIEdict		8986022	0					
ANR	8986153	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986154	UnaryOperator	&		8986022	0					
ANR	8986155	Identifier	CIEdict		8986022	1					
ANR	8986156	Argument	"""RangeABC"""		8986022	1					
ANR	8986157	PrimaryExpression	"""RangeABC"""		8986022	0					
ANR	8986158	Argument	& tempref		8986022	2					
ANR	8986159	UnaryOperationExpression	& tempref		8986022	0					
ANR	8986160	UnaryOperator	&		8986022	0					
ANR	8986161	Identifier	tempref		8986022	1					
ANR	8986162	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8986022	11					
ANR	8986163	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2460:8:78728:78767	8986022	0	True				
ANR	8986164	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8986022	0		&&			
ANR	8986165	RelationalExpression	code > 0		8986022	0		>			
ANR	8986166	Identifier	code		8986022	0					
ANR	8986167	PrimaryExpression	0		8986022	1					
ANR	8986168	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986169	UnaryOperator	!		8986022	0					
ANR	8986170	CallExpression	"r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986171	Callee	r_has_type		8986022	0					
ANR	8986172	Identifier	r_has_type		8986022	0					
ANR	8986173	ArgumentList	tempref		8986022	1					
ANR	8986174	Argument	tempref		8986022	0					
ANR	8986175	Identifier	tempref		8986022	0					
ANR	8986176	Argument	t_null		8986022	1					
ANR	8986177	Identifier	t_null		8986022	0					
ANR	8986178	CompoundStatement		26:50:816:816	8986022	1					
ANR	8986179	IfStatement	if ( ! r_is_array ( tempref ) )		8986022	0					
ANR	8986180	Condition	! r_is_array ( tempref )	2461:12:78784:78803	8986022	0	True				
ANR	8986181	UnaryOperationExpression	! r_is_array ( tempref )		8986022	0					
ANR	8986182	UnaryOperator	!		8986022	0					
ANR	8986183	CallExpression	r_is_array ( tempref )		8986022	1					
ANR	8986184	Callee	r_is_array		8986022	0					
ANR	8986185	Identifier	r_is_array		8986022	0					
ANR	8986186	ArgumentList	tempref		8986022	1					
ANR	8986187	Argument	tempref		8986022	0					
ANR	8986188	Identifier	tempref		8986022	0					
ANR	8986189	ExpressionStatement	return_error ( gs_error_typecheck )	2462:12:78818:78850	8986022	1	True				
ANR	8986190	CallExpression	return_error ( gs_error_typecheck )		8986022	0					
ANR	8986191	Callee	return_error		8986022	0					
ANR	8986192	Identifier	return_error		8986022	0					
ANR	8986193	ArgumentList	gs_error_typecheck		8986022	1					
ANR	8986194	Argument	gs_error_typecheck		8986022	0					
ANR	8986195	Identifier	gs_error_typecheck		8986022	0					
ANR	8986196	IfStatement	if ( r_size ( tempref ) != 6 )		8986022	1					
ANR	8986197	Condition	r_size ( tempref ) != 6	2463:12:78864:78883	8986022	0	True				
ANR	8986198	EqualityExpression	r_size ( tempref ) != 6		8986022	0		!=			
ANR	8986199	CallExpression	r_size ( tempref )		8986022	0					
ANR	8986200	Callee	r_size		8986022	0					
ANR	8986201	Identifier	r_size		8986022	0					
ANR	8986202	ArgumentList	tempref		8986022	1					
ANR	8986203	Argument	tempref		8986022	0					
ANR	8986204	Identifier	tempref		8986022	0					
ANR	8986205	PrimaryExpression	6		8986022	1					
ANR	8986206	ExpressionStatement	return_error ( gs_error_rangecheck )	2464:12:78898:78931	8986022	1	True				
ANR	8986207	CallExpression	return_error ( gs_error_rangecheck )		8986022	0					
ANR	8986208	Callee	return_error		8986022	0					
ANR	8986209	Identifier	return_error		8986022	0					
ANR	8986210	ArgumentList	gs_error_rangecheck		8986022	1					
ANR	8986211	Argument	gs_error_rangecheck		8986022	0					
ANR	8986212	Identifier	gs_error_rangecheck		8986022	0					
ANR	8986213	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , value )"	2465:8:78941:78995	8986022	2	True				
ANR	8986214	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , value )"		8986022	0		=			
ANR	8986215	Identifier	code		8986022	0					
ANR	8986216	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , value )"		8986022	1					
ANR	8986217	Callee	get_cie_param_array		8986022	0					
ANR	8986218	Identifier	get_cie_param_array		8986022	0					
ANR	8986219	ArgumentList	imemory		8986022	1					
ANR	8986220	Argument	imemory		8986022	0					
ANR	8986221	Identifier	imemory		8986022	0					
ANR	8986222	Argument	tempref		8986022	1					
ANR	8986223	Identifier	tempref		8986022	0					
ANR	8986224	Argument	6		8986022	2					
ANR	8986225	PrimaryExpression	6		8986022	0					
ANR	8986226	Argument	value		8986022	3					
ANR	8986227	Identifier	value		8986022	0					
ANR	8986228	IfStatement	if ( code < 0 )		8986022	3					
ANR	8986229	Condition	code < 0	2466:12:79009:79016	8986022	0	True				
ANR	8986230	RelationalExpression	code < 0		8986022	0		<			
ANR	8986231	Identifier	code		8986022	0					
ANR	8986232	PrimaryExpression	0		8986022	1					
ANR	8986233	ReturnStatement	return code ;	2467:12:79031:79042	8986022	1	True				
ANR	8986234	Identifier	code		8986022	0					
ANR	8986235	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		8986022	4					
ANR	8986236	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2468:12:79056:79120	8986022	0	True				
ANR	8986237	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8986022	0		||			
ANR	8986238	RelationalExpression	value [ 1 ] < value [ 0 ]		8986022	0		<			
ANR	8986239	ArrayIndexing	value [ 1 ]		8986022	0					
ANR	8986240	Identifier	value		8986022	0					
ANR	8986241	PrimaryExpression	1		8986022	1					
ANR	8986242	ArrayIndexing	value [ 0 ]		8986022	1					
ANR	8986243	Identifier	value		8986022	0					
ANR	8986244	PrimaryExpression	0		8986022	1					
ANR	8986245	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8986022	1		||			
ANR	8986246	RelationalExpression	value [ 3 ] < value [ 2 ]		8986022	0		<			
ANR	8986247	ArrayIndexing	value [ 3 ]		8986022	0					
ANR	8986248	Identifier	value		8986022	0					
ANR	8986249	PrimaryExpression	3		8986022	1					
ANR	8986250	ArrayIndexing	value [ 2 ]		8986022	1					
ANR	8986251	Identifier	value		8986022	0					
ANR	8986252	PrimaryExpression	2		8986022	1					
ANR	8986253	RelationalExpression	value [ 5 ] < value [ 4 ]		8986022	1		<			
ANR	8986254	ArrayIndexing	value [ 5 ]		8986022	0					
ANR	8986255	Identifier	value		8986022	0					
ANR	8986256	PrimaryExpression	5		8986022	1					
ANR	8986257	ArrayIndexing	value [ 4 ]		8986022	1					
ANR	8986258	Identifier	value		8986022	0					
ANR	8986259	PrimaryExpression	4		8986022	1					
ANR	8986260	ExpressionStatement	return_error ( gs_error_rangecheck )	2469:12:79135:79168	8986022	1	True				
ANR	8986261	CallExpression	return_error ( gs_error_rangecheck )		8986022	0					
ANR	8986262	Callee	return_error		8986022	0					
ANR	8986263	Identifier	return_error		8986022	0					
ANR	8986264	ArgumentList	gs_error_rangecheck		8986022	1					
ANR	8986265	Argument	gs_error_rangecheck		8986022	0					
ANR	8986266	Identifier	gs_error_rangecheck		8986022	0					
ANR	8986267	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"	2472:4:79181:79237	8986022	12	True				
ANR	8986268	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"		8986022	0		=			
ANR	8986269	Identifier	code		8986022	0					
ANR	8986270	CallExpression	"dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"		8986022	1					
ANR	8986271	Callee	dict_find_string		8986022	0					
ANR	8986272	Identifier	dict_find_string		8986022	0					
ANR	8986273	ArgumentList	& CIEdict		8986022	1					
ANR	8986274	Argument	& CIEdict		8986022	0					
ANR	8986275	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986276	UnaryOperator	&		8986022	0					
ANR	8986277	Identifier	CIEdict		8986022	1					
ANR	8986278	Argument	"""DecodeABC"""		8986022	1					
ANR	8986279	PrimaryExpression	"""DecodeABC"""		8986022	0					
ANR	8986280	Argument	& tempref		8986022	2					
ANR	8986281	UnaryOperationExpression	& tempref		8986022	0					
ANR	8986282	UnaryOperator	&		8986022	0					
ANR	8986283	Identifier	tempref		8986022	1					
ANR	8986284	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8986022	13					
ANR	8986285	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2473:8:79247:79286	8986022	0	True				
ANR	8986286	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8986022	0		&&			
ANR	8986287	RelationalExpression	code > 0		8986022	0		>			
ANR	8986288	Identifier	code		8986022	0					
ANR	8986289	PrimaryExpression	0		8986022	1					
ANR	8986290	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986291	UnaryOperator	!		8986022	0					
ANR	8986292	CallExpression	"r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986293	Callee	r_has_type		8986022	0					
ANR	8986294	Identifier	r_has_type		8986022	0					
ANR	8986295	ArgumentList	tempref		8986022	1					
ANR	8986296	Argument	tempref		8986022	0					
ANR	8986297	Identifier	tempref		8986022	0					
ANR	8986298	Argument	t_null		8986022	1					
ANR	8986299	Identifier	t_null		8986022	0					
ANR	8986300	CompoundStatement		39:50:1335:1335	8986022	1					
ANR	8986301	IfStatement	if ( ! r_is_array ( tempref ) )		8986022	0					
ANR	8986302	Condition	! r_is_array ( tempref )	2474:12:79303:79322	8986022	0	True				
ANR	8986303	UnaryOperationExpression	! r_is_array ( tempref )		8986022	0					
ANR	8986304	UnaryOperator	!		8986022	0					
ANR	8986305	CallExpression	r_is_array ( tempref )		8986022	1					
ANR	8986306	Callee	r_is_array		8986022	0					
ANR	8986307	Identifier	r_is_array		8986022	0					
ANR	8986308	ArgumentList	tempref		8986022	1					
ANR	8986309	Argument	tempref		8986022	0					
ANR	8986310	Identifier	tempref		8986022	0					
ANR	8986311	ExpressionStatement	return_error ( gs_error_typecheck )	2475:12:79337:79369	8986022	1	True				
ANR	8986312	CallExpression	return_error ( gs_error_typecheck )		8986022	0					
ANR	8986313	Callee	return_error		8986022	0					
ANR	8986314	Identifier	return_error		8986022	0					
ANR	8986315	ArgumentList	gs_error_typecheck		8986022	1					
ANR	8986316	Argument	gs_error_typecheck		8986022	0					
ANR	8986317	Identifier	gs_error_typecheck		8986022	0					
ANR	8986318	IfStatement	if ( r_size ( tempref ) != 3 )		8986022	1					
ANR	8986319	Condition	r_size ( tempref ) != 3	2476:12:79383:79402	8986022	0	True				
ANR	8986320	EqualityExpression	r_size ( tempref ) != 3		8986022	0		!=			
ANR	8986321	CallExpression	r_size ( tempref )		8986022	0					
ANR	8986322	Callee	r_size		8986022	0					
ANR	8986323	Identifier	r_size		8986022	0					
ANR	8986324	ArgumentList	tempref		8986022	1					
ANR	8986325	Argument	tempref		8986022	0					
ANR	8986326	Identifier	tempref		8986022	0					
ANR	8986327	PrimaryExpression	3		8986022	1					
ANR	8986328	ExpressionStatement	return_error ( gs_error_rangecheck )	2477:12:79417:79450	8986022	1	True				
ANR	8986329	CallExpression	return_error ( gs_error_rangecheck )		8986022	0					
ANR	8986330	Callee	return_error		8986022	0					
ANR	8986331	Identifier	return_error		8986022	0					
ANR	8986332	ArgumentList	gs_error_rangecheck		8986022	1					
ANR	8986333	Argument	gs_error_rangecheck		8986022	0					
ANR	8986334	Identifier	gs_error_rangecheck		8986022	0					
ANR	8986335	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8986022	2					
ANR	8986336	ForInit	i = 0 ;	2479:13:79466:79469	8986022	0	True				
ANR	8986337	AssignmentExpression	i = 0		8986022	0		=			
ANR	8986338	Identifier	i		8986022	0					
ANR	8986339	PrimaryExpression	0		8986022	1					
ANR	8986340	Condition	i < 3	2479:17:79470:79472	8986022	1	True				
ANR	8986341	RelationalExpression	i < 3		8986022	0		<			
ANR	8986342	Identifier	i		8986022	0					
ANR	8986343	PrimaryExpression	3		8986022	1					
ANR	8986344	PostIncDecOperationExpression	i ++	2479:21:79474:79476	8986022	2	True				
ANR	8986345	Identifier	i		8986022	0					
ANR	8986346	IncDec	++		8986022	1					
ANR	8986347	CompoundStatement		45:26:1525:1525	8986022	3					
ANR	8986348	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	2480:12:79493:79539	8986022	0	True				
ANR	8986349	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		8986022	0		=			
ANR	8986350	Identifier	code		8986022	0					
ANR	8986351	CallExpression	"array_get ( imemory , tempref , i , & valref )"		8986022	1					
ANR	8986352	Callee	array_get		8986022	0					
ANR	8986353	Identifier	array_get		8986022	0					
ANR	8986354	ArgumentList	imemory		8986022	1					
ANR	8986355	Argument	imemory		8986022	0					
ANR	8986356	Identifier	imemory		8986022	0					
ANR	8986357	Argument	tempref		8986022	1					
ANR	8986358	Identifier	tempref		8986022	0					
ANR	8986359	Argument	i		8986022	2					
ANR	8986360	Identifier	i		8986022	0					
ANR	8986361	Argument	& valref		8986022	3					
ANR	8986362	UnaryOperationExpression	& valref		8986022	0					
ANR	8986363	UnaryOperator	&		8986022	0					
ANR	8986364	Identifier	valref		8986022	1					
ANR	8986365	IfStatement	if ( code < 0 )		8986022	1					
ANR	8986366	Condition	code < 0	2481:16:79557:79564	8986022	0	True				
ANR	8986367	RelationalExpression	code < 0		8986022	0		<			
ANR	8986368	Identifier	code		8986022	0					
ANR	8986369	PrimaryExpression	0		8986022	1					
ANR	8986370	ReturnStatement	return code ;	2482:16:79583:79594	8986022	1	True				
ANR	8986371	Identifier	code		8986022	0					
ANR	8986372	ExpressionStatement	check_proc ( valref )	2483:12:79608:79626	8986022	2	True				
ANR	8986373	CallExpression	check_proc ( valref )		8986022	0					
ANR	8986374	Callee	check_proc		8986022	0					
ANR	8986375	Identifier	check_proc		8986022	0					
ANR	8986376	ArgumentList	valref		8986022	1					
ANR	8986377	Argument	valref		8986022	0					
ANR	8986378	Identifier	valref		8986022	0					
ANR	8986379	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"	2487:4:79649:79705	8986022	14	True				
ANR	8986380	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"		8986022	0		=			
ANR	8986381	Identifier	code		8986022	0					
ANR	8986382	CallExpression	"dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"		8986022	1					
ANR	8986383	Callee	dict_find_string		8986022	0					
ANR	8986384	Identifier	dict_find_string		8986022	0					
ANR	8986385	ArgumentList	& CIEdict		8986022	1					
ANR	8986386	Argument	& CIEdict		8986022	0					
ANR	8986387	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986388	UnaryOperator	&		8986022	0					
ANR	8986389	Identifier	CIEdict		8986022	1					
ANR	8986390	Argument	"""MatrixABC"""		8986022	1					
ANR	8986391	PrimaryExpression	"""MatrixABC"""		8986022	0					
ANR	8986392	Argument	& tempref		8986022	2					
ANR	8986393	UnaryOperationExpression	& tempref		8986022	0					
ANR	8986394	UnaryOperator	&		8986022	0					
ANR	8986395	Identifier	tempref		8986022	1					
ANR	8986396	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8986022	15					
ANR	8986397	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2488:8:79715:79754	8986022	0	True				
ANR	8986398	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8986022	0		&&			
ANR	8986399	RelationalExpression	code > 0		8986022	0		>			
ANR	8986400	Identifier	code		8986022	0					
ANR	8986401	PrimaryExpression	0		8986022	1					
ANR	8986402	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986403	UnaryOperator	!		8986022	0					
ANR	8986404	CallExpression	"r_has_type ( tempref , t_null )"		8986022	1					
ANR	8986405	Callee	r_has_type		8986022	0					
ANR	8986406	Identifier	r_has_type		8986022	0					
ANR	8986407	ArgumentList	tempref		8986022	1					
ANR	8986408	Argument	tempref		8986022	0					
ANR	8986409	Identifier	tempref		8986022	0					
ANR	8986410	Argument	t_null		8986022	1					
ANR	8986411	Identifier	t_null		8986022	0					
ANR	8986412	CompoundStatement		54:50:1803:1803	8986022	1					
ANR	8986413	IfStatement	if ( ! r_is_array ( tempref ) )		8986022	0					
ANR	8986414	Condition	! r_is_array ( tempref )	2489:12:79771:79790	8986022	0	True				
ANR	8986415	UnaryOperationExpression	! r_is_array ( tempref )		8986022	0					
ANR	8986416	UnaryOperator	!		8986022	0					
ANR	8986417	CallExpression	r_is_array ( tempref )		8986022	1					
ANR	8986418	Callee	r_is_array		8986022	0					
ANR	8986419	Identifier	r_is_array		8986022	0					
ANR	8986420	ArgumentList	tempref		8986022	1					
ANR	8986421	Argument	tempref		8986022	0					
ANR	8986422	Identifier	tempref		8986022	0					
ANR	8986423	ExpressionStatement	return_error ( gs_error_typecheck )	2490:12:79805:79837	8986022	1	True				
ANR	8986424	CallExpression	return_error ( gs_error_typecheck )		8986022	0					
ANR	8986425	Callee	return_error		8986022	0					
ANR	8986426	Identifier	return_error		8986022	0					
ANR	8986427	ArgumentList	gs_error_typecheck		8986022	1					
ANR	8986428	Argument	gs_error_typecheck		8986022	0					
ANR	8986429	Identifier	gs_error_typecheck		8986022	0					
ANR	8986430	IfStatement	if ( r_size ( tempref ) != 9 )		8986022	1					
ANR	8986431	Condition	r_size ( tempref ) != 9	2491:12:79851:79870	8986022	0	True				
ANR	8986432	EqualityExpression	r_size ( tempref ) != 9		8986022	0		!=			
ANR	8986433	CallExpression	r_size ( tempref )		8986022	0					
ANR	8986434	Callee	r_size		8986022	0					
ANR	8986435	Identifier	r_size		8986022	0					
ANR	8986436	ArgumentList	tempref		8986022	1					
ANR	8986437	Argument	tempref		8986022	0					
ANR	8986438	Identifier	tempref		8986022	0					
ANR	8986439	PrimaryExpression	9		8986022	1					
ANR	8986440	ExpressionStatement	return_error ( gs_error_rangecheck )	2492:12:79885:79918	8986022	1	True				
ANR	8986441	CallExpression	return_error ( gs_error_rangecheck )		8986022	0					
ANR	8986442	Callee	return_error		8986022	0					
ANR	8986443	Identifier	return_error		8986022	0					
ANR	8986444	ArgumentList	gs_error_rangecheck		8986022	1					
ANR	8986445	Argument	gs_error_rangecheck		8986022	0					
ANR	8986446	Identifier	gs_error_rangecheck		8986022	0					
ANR	8986447	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	2493:8:79928:79982	8986022	2	True				
ANR	8986448	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		8986022	0		=			
ANR	8986449	Identifier	code		8986022	0					
ANR	8986450	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		8986022	1					
ANR	8986451	Callee	get_cie_param_array		8986022	0					
ANR	8986452	Identifier	get_cie_param_array		8986022	0					
ANR	8986453	ArgumentList	imemory		8986022	1					
ANR	8986454	Argument	imemory		8986022	0					
ANR	8986455	Identifier	imemory		8986022	0					
ANR	8986456	Argument	tempref		8986022	1					
ANR	8986457	Identifier	tempref		8986022	0					
ANR	8986458	Argument	9		8986022	2					
ANR	8986459	PrimaryExpression	9		8986022	0					
ANR	8986460	Argument	value		8986022	3					
ANR	8986461	Identifier	value		8986022	0					
ANR	8986462	IfStatement	if ( code < 0 )		8986022	3					
ANR	8986463	Condition	code < 0	2494:12:79996:80003	8986022	0	True				
ANR	8986464	RelationalExpression	code < 0		8986022	0		<			
ANR	8986465	Identifier	code		8986022	0					
ANR	8986466	PrimaryExpression	0		8986022	1					
ANR	8986467	ReturnStatement	return code ;	2495:12:80018:80029	8986022	1	True				
ANR	8986468	Identifier	code		8986022	0					
ANR	8986469	ExpressionStatement	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"	2498:4:80042:80081	8986022	16	True				
ANR	8986470	AssignmentExpression	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"		8986022	0		=			
ANR	8986471	Identifier	code		8986022	0					
ANR	8986472	CallExpression	"checkRangeLMN ( i_ctx_p , & CIEdict )"		8986022	1					
ANR	8986473	Callee	checkRangeLMN		8986022	0					
ANR	8986474	Identifier	checkRangeLMN		8986022	0					
ANR	8986475	ArgumentList	i_ctx_p		8986022	1					
ANR	8986476	Argument	i_ctx_p		8986022	0					
ANR	8986477	Identifier	i_ctx_p		8986022	0					
ANR	8986478	Argument	& CIEdict		8986022	1					
ANR	8986479	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986480	UnaryOperator	&		8986022	0					
ANR	8986481	Identifier	CIEdict		8986022	1					
ANR	8986482	IfStatement	if ( code != 0 )		8986022	17					
ANR	8986483	Condition	code != 0	2499:8:80091:80099	8986022	0	True				
ANR	8986484	EqualityExpression	code != 0		8986022	0		!=			
ANR	8986485	Identifier	code		8986022	0					
ANR	8986486	PrimaryExpression	0		8986022	1					
ANR	8986487	ReturnStatement	return code ;	2500:8:80110:80121	8986022	1	True				
ANR	8986488	Identifier	code		8986022	0					
ANR	8986489	ExpressionStatement	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"	2502:4:80128:80168	8986022	18	True				
ANR	8986490	AssignmentExpression	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"		8986022	0		=			
ANR	8986491	Identifier	code		8986022	0					
ANR	8986492	CallExpression	"checkDecodeLMN ( i_ctx_p , & CIEdict )"		8986022	1					
ANR	8986493	Callee	checkDecodeLMN		8986022	0					
ANR	8986494	Identifier	checkDecodeLMN		8986022	0					
ANR	8986495	ArgumentList	i_ctx_p		8986022	1					
ANR	8986496	Argument	i_ctx_p		8986022	0					
ANR	8986497	Identifier	i_ctx_p		8986022	0					
ANR	8986498	Argument	& CIEdict		8986022	1					
ANR	8986499	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986500	UnaryOperator	&		8986022	0					
ANR	8986501	Identifier	CIEdict		8986022	1					
ANR	8986502	IfStatement	if ( code != 0 )		8986022	19					
ANR	8986503	Condition	code != 0	2503:8:80178:80186	8986022	0	True				
ANR	8986504	EqualityExpression	code != 0		8986022	0		!=			
ANR	8986505	Identifier	code		8986022	0					
ANR	8986506	PrimaryExpression	0		8986022	1					
ANR	8986507	ReturnStatement	return code ;	2504:8:80197:80208	8986022	1	True				
ANR	8986508	Identifier	code		8986022	0					
ANR	8986509	ExpressionStatement	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"	2506:4:80215:80255	8986022	20	True				
ANR	8986510	AssignmentExpression	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"		8986022	0		=			
ANR	8986511	Identifier	code		8986022	0					
ANR	8986512	CallExpression	"checkMatrixLMN ( i_ctx_p , & CIEdict )"		8986022	1					
ANR	8986513	Callee	checkMatrixLMN		8986022	0					
ANR	8986514	Identifier	checkMatrixLMN		8986022	0					
ANR	8986515	ArgumentList	i_ctx_p		8986022	1					
ANR	8986516	Argument	i_ctx_p		8986022	0					
ANR	8986517	Identifier	i_ctx_p		8986022	0					
ANR	8986518	Argument	& CIEdict		8986022	1					
ANR	8986519	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986520	UnaryOperator	&		8986022	0					
ANR	8986521	Identifier	CIEdict		8986022	1					
ANR	8986522	IfStatement	if ( code != 0 )		8986022	21					
ANR	8986523	Condition	code != 0	2507:8:80265:80273	8986022	0	True				
ANR	8986524	EqualityExpression	code != 0		8986022	0		!=			
ANR	8986525	Identifier	code		8986022	0					
ANR	8986526	PrimaryExpression	0		8986022	1					
ANR	8986527	ReturnStatement	return code ;	2508:8:80284:80295	8986022	1	True				
ANR	8986528	Identifier	code		8986022	0					
ANR	8986529	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"	2510:4:80302:80343	8986022	22	True				
ANR	8986530	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"		8986022	0		=			
ANR	8986531	Identifier	code		8986022	0					
ANR	8986532	CallExpression	"checkBlackPoint ( i_ctx_p , & CIEdict )"		8986022	1					
ANR	8986533	Callee	checkBlackPoint		8986022	0					
ANR	8986534	Identifier	checkBlackPoint		8986022	0					
ANR	8986535	ArgumentList	i_ctx_p		8986022	1					
ANR	8986536	Argument	i_ctx_p		8986022	0					
ANR	8986537	Identifier	i_ctx_p		8986022	0					
ANR	8986538	Argument	& CIEdict		8986022	1					
ANR	8986539	UnaryOperationExpression	& CIEdict		8986022	0					
ANR	8986540	UnaryOperator	&		8986022	0					
ANR	8986541	Identifier	CIEdict		8986022	1					
ANR	8986542	IfStatement	if ( code != 0 )		8986022	23					
ANR	8986543	Condition	code != 0	2511:8:80353:80361	8986022	0	True				
ANR	8986544	EqualityExpression	code != 0		8986022	0		!=			
ANR	8986545	Identifier	code		8986022	0					
ANR	8986546	PrimaryExpression	0		8986022	1					
ANR	8986547	ReturnStatement	return code ;	2512:8:80372:80383	8986022	1	True				
ANR	8986548	Identifier	code		8986022	0					
ANR	8986549	ExpressionStatement	* r = 0	2514:4:80390:80396	8986022	24	True				
ANR	8986550	AssignmentExpression	* r = 0		8986022	0		=			
ANR	8986551	UnaryOperationExpression	* r		8986022	0					
ANR	8986552	UnaryOperator	*		8986022	0					
ANR	8986553	Identifier	r		8986022	1					
ANR	8986554	PrimaryExpression	0		8986022	1					
ANR	8986555	ReturnStatement	return 0 ;	2515:4:80402:80410	8986022	25	True				
ANR	8986556	PrimaryExpression	0		8986022	0					
ANR	8986557	ReturnType	static int		8986022	1					
ANR	8986558	Identifier	validatecieabcspace		8986022	2					
ANR	8986559	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		8986022	3					
ANR	8986560	Parameter	i_ctx_t * i_ctx_p	2434:31:77925:77941	8986022	0	True				
ANR	8986561	ParameterType	i_ctx_t *		8986022	0					
ANR	8986562	Identifier	i_ctx_p		8986022	1					
ANR	8986563	Parameter	ref * * r	2434:50:77944:77950	8986022	1	True				
ANR	8986564	ParameterType	ref * *		8986022	0					
ANR	8986565	Identifier	r		8986022	1					
ANR	8986566	CFGEntryNode	ENTRY		8986022		True				
ANR	8986567	CFGExitNode	EXIT		8986022		True				
ANR	8986568	Symbol	code		8986022						
ANR	8986569	Symbol	t_dictionary		8986022						
ANR	8986570	Symbol	gs_error_rangecheck		8986022						
ANR	8986571	Symbol	checkRangeLMN		8986022						
ANR	8986572	Symbol	& CIEdict		8986022						
ANR	8986573	Symbol	gs_error_typecheck		8986022						
ANR	8986574	Symbol	t_null		8986022						
ANR	8986575	Symbol	r_has_type		8986022						
ANR	8986576	Symbol	& valref		8986022						
ANR	8986577	Symbol	r_size		8986022						
ANR	8986578	Symbol	CIEspace		8986022						
ANR	8986579	Symbol	CIEdict		8986022						
ANR	8986580	Symbol	imemory		8986022						
ANR	8986581	Symbol	checkWhitePoint		8986022						
ANR	8986582	Symbol	value		8986022						
ANR	8986583	Symbol	tempref		8986022						
ANR	8986584	Symbol	checkMatrixLMN		8986022						
ANR	8986585	Symbol	dict_find_string		8986022						
ANR	8986586	Symbol	array_get		8986022						
ANR	8986587	Symbol	i		8986022						
ANR	8986588	Symbol	& tempref		8986022						
ANR	8986589	Symbol	r		8986022						
ANR	8986590	Symbol	checkBlackPoint		8986022						
ANR	8986591	Symbol	i_ctx_p		8986022						
ANR	8986592	Symbol	* value		8986022						
ANR	8986593	Symbol	valref		8986022						
ANR	8986594	Symbol	checkDecodeLMN		8986022						
ANR	8986595	Symbol	r_is_array		8986022						
ANR	8986596	Symbol	* r		8986022						
ANR	8986597	Symbol	get_cie_param_array		8986022						
ANR	8986598	Function	cieabcdomain	2517:0:80414:81022							
ANR	8986599	FunctionDef	"cieabcdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8986598	0					
ANR	8986600	CompoundStatement		2518:0:80481:81022	8986598	0					
ANR	8986601	IdentifierDeclStatement	int code ;	2519:4:80487:80495	8986598	0	True				
ANR	8986602	IdentifierDecl	code		8986598	0					
ANR	8986603	IdentifierDeclType	int		8986598	0					
ANR	8986604	Identifier	code		8986598	1					
ANR	8986605	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2520:4:80501:80522	8986598	1	True				
ANR	8986606	IdentifierDecl	CIEdict		8986598	0					
ANR	8986607	IdentifierDeclType	ref		8986598	0					
ANR	8986608	Identifier	CIEdict		8986598	1					
ANR	8986609	IdentifierDecl	* tempref		8986598	1					
ANR	8986610	IdentifierDeclType	ref *		8986598	0					
ANR	8986611	Identifier	tempref		8986598	1					
ANR	8986612	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2522:4:80529:80574	8986598	2	True				
ANR	8986613	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8986598	0		=			
ANR	8986614	Identifier	code		8986598	0					
ANR	8986615	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8986598	1					
ANR	8986616	Callee	array_get		8986598	0					
ANR	8986617	Identifier	array_get		8986598	0					
ANR	8986618	ArgumentList	imemory		8986598	1					
ANR	8986619	Argument	imemory		8986598	0					
ANR	8986620	Identifier	imemory		8986598	0					
ANR	8986621	Argument	space		8986598	1					
ANR	8986622	Identifier	space		8986598	0					
ANR	8986623	Argument	1		8986598	2					
ANR	8986624	PrimaryExpression	1		8986598	0					
ANR	8986625	Argument	& CIEdict		8986598	3					
ANR	8986626	UnaryOperationExpression	& CIEdict		8986598	0					
ANR	8986627	UnaryOperator	&		8986598	0					
ANR	8986628	Identifier	CIEdict		8986598	1					
ANR	8986629	IfStatement	if ( code < 0 )		8986598	3					
ANR	8986630	Condition	code < 0	2523:8:80584:80591	8986598	0	True				
ANR	8986631	RelationalExpression	code < 0		8986598	0		<			
ANR	8986632	Identifier	code		8986598	0					
ANR	8986633	PrimaryExpression	0		8986598	1					
ANR	8986634	ReturnStatement	return code ;	2524:8:80602:80613	8986598	1	True				
ANR	8986635	Identifier	code		8986598	0					
ANR	8986636	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2527:4:80678:80733	8986598	4	True				
ANR	8986637	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986598	0		=			
ANR	8986638	Identifier	code		8986598	0					
ANR	8986639	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986598	1					
ANR	8986640	Callee	dict_find_string		8986598	0					
ANR	8986641	Identifier	dict_find_string		8986598	0					
ANR	8986642	ArgumentList	& CIEdict		8986598	1					
ANR	8986643	Argument	& CIEdict		8986598	0					
ANR	8986644	UnaryOperationExpression	& CIEdict		8986598	0					
ANR	8986645	UnaryOperator	&		8986598	0					
ANR	8986646	Identifier	CIEdict		8986598	1					
ANR	8986647	Argument	"""RangeABC"""		8986598	1					
ANR	8986648	PrimaryExpression	"""RangeABC"""		8986598	0					
ANR	8986649	Argument	& tempref		8986598	2					
ANR	8986650	UnaryOperationExpression	& tempref		8986598	0					
ANR	8986651	UnaryOperator	&		8986598	0					
ANR	8986652	Identifier	tempref		8986598	1					
ANR	8986653	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8986598	5					
ANR	8986654	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2528:8:80743:80782	8986598	0	True				
ANR	8986655	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8986598	0		&&			
ANR	8986656	RelationalExpression	code > 0		8986598	0		>			
ANR	8986657	Identifier	code		8986598	0					
ANR	8986658	PrimaryExpression	0		8986598	1					
ANR	8986659	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8986598	1					
ANR	8986660	UnaryOperator	!		8986598	0					
ANR	8986661	CallExpression	"r_has_type ( tempref , t_null )"		8986598	1					
ANR	8986662	Callee	r_has_type		8986598	0					
ANR	8986663	Identifier	r_has_type		8986598	0					
ANR	8986664	ArgumentList	tempref		8986598	1					
ANR	8986665	Argument	tempref		8986598	0					
ANR	8986666	Identifier	tempref		8986598	0					
ANR	8986667	Argument	t_null		8986598	1					
ANR	8986668	Identifier	t_null		8986598	0					
ANR	8986669	CompoundStatement		11:50:303:303	8986598	1					
ANR	8986670	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2529:8:80795:80847	8986598	0	True				
ANR	8986671	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		8986598	0		=			
ANR	8986672	Identifier	code		8986598	0					
ANR	8986673	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		8986598	1					
ANR	8986674	Callee	get_cie_param_array		8986598	0					
ANR	8986675	Identifier	get_cie_param_array		8986598	0					
ANR	8986676	ArgumentList	imemory		8986598	1					
ANR	8986677	Argument	imemory		8986598	0					
ANR	8986678	Identifier	imemory		8986598	0					
ANR	8986679	Argument	tempref		8986598	1					
ANR	8986680	Identifier	tempref		8986598	0					
ANR	8986681	Argument	6		8986598	2					
ANR	8986682	PrimaryExpression	6		8986598	0					
ANR	8986683	Argument	ptr		8986598	3					
ANR	8986684	Identifier	ptr		8986598	0					
ANR	8986685	IfStatement	if ( code < 0 )		8986598	1					
ANR	8986686	Condition	code < 0	2530:12:80861:80868	8986598	0	True				
ANR	8986687	RelationalExpression	code < 0		8986598	0		<			
ANR	8986688	Identifier	code		8986598	0					
ANR	8986689	PrimaryExpression	0		8986598	1					
ANR	8986690	ReturnStatement	return code ;	2531:12:80883:80894	8986598	1	True				
ANR	8986691	Identifier	code		8986598	0					
ANR	8986692	ElseStatement	else		8986598	0					
ANR	8986693	CompoundStatement		15:11:425:425	8986598	0					
ANR	8986694	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2534:5:80959:81000	8986598	0	True				
ANR	8986695	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		8986598	0					
ANR	8986696	Callee	memcpy		8986598	0					
ANR	8986697	Identifier	memcpy		8986598	0					
ANR	8986698	ArgumentList	ptr		8986598	1					
ANR	8986699	Argument	ptr		8986598	0					
ANR	8986700	Identifier	ptr		8986598	0					
ANR	8986701	Argument	default_0_1		8986598	1					
ANR	8986702	Identifier	default_0_1		8986598	0					
ANR	8986703	Argument	6 * sizeof ( float )		8986598	2					
ANR	8986704	MultiplicativeExpression	6 * sizeof ( float )		8986598	0		*			
ANR	8986705	PrimaryExpression	6		8986598	0					
ANR	8986706	SizeofExpression	sizeof ( float )		8986598	1					
ANR	8986707	Sizeof	sizeof		8986598	0					
ANR	8986708	SizeofOperand	float		8986598	1					
ANR	8986709	ReturnStatement	return 0 ;	2536:4:81012:81020	8986598	6	True				
ANR	8986710	PrimaryExpression	0		8986598	0					
ANR	8986711	ReturnType	static int		8986598	1					
ANR	8986712	Identifier	cieabcdomain		8986598	2					
ANR	8986713	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8986598	3					
ANR	8986714	Parameter	i_ctx_t * i_ctx_p	2517:24:80438:80454	8986598	0	True				
ANR	8986715	ParameterType	i_ctx_t *		8986598	0					
ANR	8986716	Identifier	i_ctx_p		8986598	1					
ANR	8986717	Parameter	ref * space	2517:43:80457:80466	8986598	1	True				
ANR	8986718	ParameterType	ref *		8986598	0					
ANR	8986719	Identifier	space		8986598	1					
ANR	8986720	Parameter	float * ptr	2517:55:80469:80478	8986598	2	True				
ANR	8986721	ParameterType	float *		8986598	0					
ANR	8986722	Identifier	ptr		8986598	1					
ANR	8986723	CFGEntryNode	ENTRY		8986598		True				
ANR	8986724	CFGExitNode	EXIT		8986598		True				
ANR	8986725	Symbol	code		8986598						
ANR	8986726	Symbol	dict_find_string		8986598						
ANR	8986727	Symbol	array_get		8986598						
ANR	8986728	Symbol	& CIEdict		8986598						
ANR	8986729	Symbol	& tempref		8986598						
ANR	8986730	Symbol	space		8986598						
ANR	8986731	Symbol	ptr		8986598						
ANR	8986732	Symbol	r_has_type		8986598						
ANR	8986733	Symbol	t_null		8986598						
ANR	8986734	Symbol	i_ctx_p		8986598						
ANR	8986735	Symbol	CIEdict		8986598						
ANR	8986736	Symbol	imemory		8986598						
ANR	8986737	Symbol	get_cie_param_array		8986598						
ANR	8986738	Symbol	default_0_1		8986598						
ANR	8986739	Symbol	tempref		8986598						
ANR	8986740	Function	cieabcrange	2538:0:81024:81635							
ANR	8986741	FunctionDef	"cieabcrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8986740	0					
ANR	8986742	CompoundStatement		2539:0:81090:81635	8986740	0					
ANR	8986743	IdentifierDeclStatement	int code ;	2540:4:81096:81104	8986740	0	True				
ANR	8986744	IdentifierDecl	code		8986740	0					
ANR	8986745	IdentifierDeclType	int		8986740	0					
ANR	8986746	Identifier	code		8986740	1					
ANR	8986747	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2541:4:81110:81135	8986740	1	True				
ANR	8986748	IdentifierDecl	CIEdict		8986740	0					
ANR	8986749	IdentifierDeclType	ref		8986740	0					
ANR	8986750	Identifier	CIEdict		8986740	1					
ANR	8986751	IdentifierDecl	* tempref		8986740	1					
ANR	8986752	IdentifierDeclType	ref *		8986740	0					
ANR	8986753	Identifier	tempref		8986740	1					
ANR	8986754	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2543:4:81142:81187	8986740	2	True				
ANR	8986755	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8986740	0		=			
ANR	8986756	Identifier	code		8986740	0					
ANR	8986757	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8986740	1					
ANR	8986758	Callee	array_get		8986740	0					
ANR	8986759	Identifier	array_get		8986740	0					
ANR	8986760	ArgumentList	imemory		8986740	1					
ANR	8986761	Argument	imemory		8986740	0					
ANR	8986762	Identifier	imemory		8986740	0					
ANR	8986763	Argument	space		8986740	1					
ANR	8986764	Identifier	space		8986740	0					
ANR	8986765	Argument	1		8986740	2					
ANR	8986766	PrimaryExpression	1		8986740	0					
ANR	8986767	Argument	& CIEdict		8986740	3					
ANR	8986768	UnaryOperationExpression	& CIEdict		8986740	0					
ANR	8986769	UnaryOperator	&		8986740	0					
ANR	8986770	Identifier	CIEdict		8986740	1					
ANR	8986771	IfStatement	if ( code < 0 )		8986740	3					
ANR	8986772	Condition	code < 0	2544:8:81197:81204	8986740	0	True				
ANR	8986773	RelationalExpression	code < 0		8986740	0		<			
ANR	8986774	Identifier	code		8986740	0					
ANR	8986775	PrimaryExpression	0		8986740	1					
ANR	8986776	ReturnStatement	return code ;	2545:8:81215:81226	8986740	1	True				
ANR	8986777	Identifier	code		8986740	0					
ANR	8986778	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2548:4:81291:81346	8986740	4	True				
ANR	8986779	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986740	0		=			
ANR	8986780	Identifier	code		8986740	0					
ANR	8986781	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		8986740	1					
ANR	8986782	Callee	dict_find_string		8986740	0					
ANR	8986783	Identifier	dict_find_string		8986740	0					
ANR	8986784	ArgumentList	& CIEdict		8986740	1					
ANR	8986785	Argument	& CIEdict		8986740	0					
ANR	8986786	UnaryOperationExpression	& CIEdict		8986740	0					
ANR	8986787	UnaryOperator	&		8986740	0					
ANR	8986788	Identifier	CIEdict		8986740	1					
ANR	8986789	Argument	"""RangeABC"""		8986740	1					
ANR	8986790	PrimaryExpression	"""RangeABC"""		8986740	0					
ANR	8986791	Argument	& tempref		8986740	2					
ANR	8986792	UnaryOperationExpression	& tempref		8986740	0					
ANR	8986793	UnaryOperator	&		8986740	0					
ANR	8986794	Identifier	tempref		8986740	1					
ANR	8986795	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8986740	5					
ANR	8986796	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2549:8:81356:81395	8986740	0	True				
ANR	8986797	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8986740	0		&&			
ANR	8986798	RelationalExpression	code > 0		8986740	0		>			
ANR	8986799	Identifier	code		8986740	0					
ANR	8986800	PrimaryExpression	0		8986740	1					
ANR	8986801	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8986740	1					
ANR	8986802	UnaryOperator	!		8986740	0					
ANR	8986803	CallExpression	"r_has_type ( tempref , t_null )"		8986740	1					
ANR	8986804	Callee	r_has_type		8986740	0					
ANR	8986805	Identifier	r_has_type		8986740	0					
ANR	8986806	ArgumentList	tempref		8986740	1					
ANR	8986807	Argument	tempref		8986740	0					
ANR	8986808	Identifier	tempref		8986740	0					
ANR	8986809	Argument	t_null		8986740	1					
ANR	8986810	Identifier	t_null		8986740	0					
ANR	8986811	CompoundStatement		11:50:307:307	8986740	1					
ANR	8986812	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2550:8:81408:81460	8986740	0	True				
ANR	8986813	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		8986740	0		=			
ANR	8986814	Identifier	code		8986740	0					
ANR	8986815	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		8986740	1					
ANR	8986816	Callee	get_cie_param_array		8986740	0					
ANR	8986817	Identifier	get_cie_param_array		8986740	0					
ANR	8986818	ArgumentList	imemory		8986740	1					
ANR	8986819	Argument	imemory		8986740	0					
ANR	8986820	Identifier	imemory		8986740	0					
ANR	8986821	Argument	tempref		8986740	1					
ANR	8986822	Identifier	tempref		8986740	0					
ANR	8986823	Argument	6		8986740	2					
ANR	8986824	PrimaryExpression	6		8986740	0					
ANR	8986825	Argument	ptr		8986740	3					
ANR	8986826	Identifier	ptr		8986740	0					
ANR	8986827	IfStatement	if ( code < 0 )		8986740	1					
ANR	8986828	Condition	code < 0	2551:12:81474:81481	8986740	0	True				
ANR	8986829	RelationalExpression	code < 0		8986740	0		<			
ANR	8986830	Identifier	code		8986740	0					
ANR	8986831	PrimaryExpression	0		8986740	1					
ANR	8986832	ReturnStatement	return code ;	2552:12:81496:81507	8986740	1	True				
ANR	8986833	Identifier	code		8986740	0					
ANR	8986834	ElseStatement	else		8986740	0					
ANR	8986835	CompoundStatement		15:11:429:429	8986740	0					
ANR	8986836	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2555:5:81572:81613	8986740	0	True				
ANR	8986837	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		8986740	0					
ANR	8986838	Callee	memcpy		8986740	0					
ANR	8986839	Identifier	memcpy		8986740	0					
ANR	8986840	ArgumentList	ptr		8986740	1					
ANR	8986841	Argument	ptr		8986740	0					
ANR	8986842	Identifier	ptr		8986740	0					
ANR	8986843	Argument	default_0_1		8986740	1					
ANR	8986844	Identifier	default_0_1		8986740	0					
ANR	8986845	Argument	6 * sizeof ( float )		8986740	2					
ANR	8986846	MultiplicativeExpression	6 * sizeof ( float )		8986740	0		*			
ANR	8986847	PrimaryExpression	6		8986740	0					
ANR	8986848	SizeofExpression	sizeof ( float )		8986740	1					
ANR	8986849	Sizeof	sizeof		8986740	0					
ANR	8986850	SizeofOperand	float		8986740	1					
ANR	8986851	ReturnStatement	return 0 ;	2557:4:81625:81633	8986740	6	True				
ANR	8986852	PrimaryExpression	0		8986740	0					
ANR	8986853	ReturnType	static int		8986740	1					
ANR	8986854	Identifier	cieabcrange		8986740	2					
ANR	8986855	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8986740	3					
ANR	8986856	Parameter	i_ctx_t * i_ctx_p	2538:23:81047:81063	8986740	0	True				
ANR	8986857	ParameterType	i_ctx_t *		8986740	0					
ANR	8986858	Identifier	i_ctx_p		8986740	1					
ANR	8986859	Parameter	ref * space	2538:42:81066:81075	8986740	1	True				
ANR	8986860	ParameterType	ref *		8986740	0					
ANR	8986861	Identifier	space		8986740	1					
ANR	8986862	Parameter	float * ptr	2538:54:81078:81087	8986740	2	True				
ANR	8986863	ParameterType	float *		8986740	0					
ANR	8986864	Identifier	ptr		8986740	1					
ANR	8986865	CFGEntryNode	ENTRY		8986740		True				
ANR	8986866	CFGExitNode	EXIT		8986740		True				
ANR	8986867	Symbol	code		8986740						
ANR	8986868	Symbol	dict_find_string		8986740						
ANR	8986869	Symbol	array_get		8986740						
ANR	8986870	Symbol	& CIEdict		8986740						
ANR	8986871	Symbol	& tempref		8986740						
ANR	8986872	Symbol	space		8986740						
ANR	8986873	Symbol	ptr		8986740						
ANR	8986874	Symbol	r_has_type		8986740						
ANR	8986875	Symbol	t_null		8986740						
ANR	8986876	Symbol	i_ctx_p		8986740						
ANR	8986877	Symbol	CIEdict		8986740						
ANR	8986878	Symbol	imemory		8986740						
ANR	8986879	Symbol	get_cie_param_array		8986740						
ANR	8986880	Symbol	default_0_1		8986740						
ANR	8986881	Symbol	tempref		8986740						
ANR	8986882	Function	cieabcvalidate	2559:0:81637:82014							
ANR	8986883	FunctionDef	"cieabcvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8986882	0					
ANR	8986884	CompoundStatement		2560:0:81723:82014	8986882	0					
ANR	8986885	IdentifierDeclStatement	os_ptr op = osp ;	2561:4:81729:81744	8986882	0	True				
ANR	8986886	IdentifierDecl	op = osp		8986882	0					
ANR	8986887	IdentifierDeclType	os_ptr		8986882	0					
ANR	8986888	Identifier	op		8986882	1					
ANR	8986889	AssignmentExpression	op = osp		8986882	2		=			
ANR	8986890	Identifier	osp		8986882	0					
ANR	8986891	Identifier	osp		8986882	1					
ANR	8986892	IdentifierDeclStatement	int i ;	2562:4:81750:81755	8986882	1	True				
ANR	8986893	IdentifierDecl	i		8986882	0					
ANR	8986894	IdentifierDeclType	int		8986882	0					
ANR	8986895	Identifier	i		8986882	1					
ANR	8986896	IfStatement	if ( num_comps < 3 )		8986882	2					
ANR	8986897	Condition	num_comps < 3	2564:8:81766:81778	8986882	0	True				
ANR	8986898	RelationalExpression	num_comps < 3		8986882	0		<			
ANR	8986899	Identifier	num_comps		8986882	0					
ANR	8986900	PrimaryExpression	3		8986882	1					
ANR	8986901	ExpressionStatement	return_error ( gs_error_stackunderflow )	2565:8:81789:81826	8986882	1	True				
ANR	8986902	CallExpression	return_error ( gs_error_stackunderflow )		8986882	0					
ANR	8986903	Callee	return_error		8986882	0					
ANR	8986904	Identifier	return_error		8986882	0					
ANR	8986905	ArgumentList	gs_error_stackunderflow		8986882	1					
ANR	8986906	Argument	gs_error_stackunderflow		8986882	0					
ANR	8986907	Identifier	gs_error_stackunderflow		8986882	0					
ANR	8986908	ExpressionStatement	op -= 2	2567:4:81833:81840	8986882	3	True				
ANR	8986909	AssignmentExpression	op -= 2		8986882	0		-=			
ANR	8986910	Identifier	op		8986882	0					
ANR	8986911	PrimaryExpression	2		8986882	1					
ANR	8986912	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8986882	4					
ANR	8986913	ForInit	i = 0 ;	2568:9:81851:81854	8986882	0	True				
ANR	8986914	AssignmentExpression	i = 0		8986882	0		=			
ANR	8986915	Identifier	i		8986882	0					
ANR	8986916	PrimaryExpression	0		8986882	1					
ANR	8986917	Condition	i < 3	2568:13:81855:81857	8986882	1	True				
ANR	8986918	RelationalExpression	i < 3		8986882	0		<			
ANR	8986919	Identifier	i		8986882	0					
ANR	8986920	PrimaryExpression	3		8986882	1					
ANR	8986921	PostIncDecOperationExpression	i ++	2568:17:81859:81861	8986882	2	True				
ANR	8986922	Identifier	i		8986882	0					
ANR	8986923	IncDec	++		8986882	1					
ANR	8986924	CompoundStatement		9:22:140:140	8986882	3					
ANR	8986925	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8986882	0					
ANR	8986926	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2569:12:81878:81930	8986882	0	True				
ANR	8986927	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8986882	0		&&			
ANR	8986928	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8986882	0					
ANR	8986929	UnaryOperator	!		8986882	0					
ANR	8986930	CallExpression	"r_has_type ( op , t_integer )"		8986882	1					
ANR	8986931	Callee	r_has_type		8986882	0					
ANR	8986932	Identifier	r_has_type		8986882	0					
ANR	8986933	ArgumentList	op		8986882	1					
ANR	8986934	Argument	op		8986882	0					
ANR	8986935	Identifier	op		8986882	0					
ANR	8986936	Argument	t_integer		8986882	1					
ANR	8986937	Identifier	t_integer		8986882	0					
ANR	8986938	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8986882	1					
ANR	8986939	UnaryOperator	!		8986882	0					
ANR	8986940	CallExpression	"r_has_type ( op , t_real )"		8986882	1					
ANR	8986941	Callee	r_has_type		8986882	0					
ANR	8986942	Identifier	r_has_type		8986882	0					
ANR	8986943	ArgumentList	op		8986882	1					
ANR	8986944	Argument	op		8986882	0					
ANR	8986945	Identifier	op		8986882	0					
ANR	8986946	Argument	t_real		8986882	1					
ANR	8986947	Identifier	t_real		8986882	0					
ANR	8986948	ExpressionStatement	return_error ( gs_error_typecheck )	2570:12:81945:81977	8986882	1	True				
ANR	8986949	CallExpression	return_error ( gs_error_typecheck )		8986882	0					
ANR	8986950	Callee	return_error		8986882	0					
ANR	8986951	Identifier	return_error		8986882	0					
ANR	8986952	ArgumentList	gs_error_typecheck		8986882	1					
ANR	8986953	Argument	gs_error_typecheck		8986882	0					
ANR	8986954	Identifier	gs_error_typecheck		8986882	0					
ANR	8986955	ExpressionStatement	op ++	2571:8:81987:81991	8986882	1	True				
ANR	8986956	PostIncDecOperationExpression	op ++		8986882	0					
ANR	8986957	Identifier	op		8986882	0					
ANR	8986958	IncDec	++		8986882	1					
ANR	8986959	ReturnStatement	return 0 ;	2574:4:82004:82012	8986882	5	True				
ANR	8986960	PrimaryExpression	0		8986882	0					
ANR	8986961	ReturnType	static int		8986882	1					
ANR	8986962	Identifier	cieabcvalidate		8986882	2					
ANR	8986963	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8986882	3					
ANR	8986964	Parameter	i_ctx_t * i_ctx_p	2559:26:81663:81678	8986882	0	True				
ANR	8986965	ParameterType	i_ctx_t *		8986882	0					
ANR	8986966	Identifier	i_ctx_p		8986882	1					
ANR	8986967	Parameter	ref * space	2559:44:81681:81690	8986882	1	True				
ANR	8986968	ParameterType	ref *		8986882	0					
ANR	8986969	Identifier	space		8986882	1					
ANR	8986970	Parameter	float * values	2559:56:81693:81705	8986882	2	True				
ANR	8986971	ParameterType	float *		8986882	0					
ANR	8986972	Identifier	values		8986882	1					
ANR	8986973	Parameter	int num_comps	2559:71:81708:81720	8986882	3	True				
ANR	8986974	ParameterType	int		8986882	0					
ANR	8986975	Identifier	num_comps		8986882	1					
ANR	8986976	CFGEntryNode	ENTRY		8986882		True				
ANR	8986977	CFGExitNode	EXIT		8986882		True				
ANR	8986978	Symbol	op		8986882						
ANR	8986979	Symbol	r_has_type		8986882						
ANR	8986980	Symbol	gs_error_typecheck		8986882						
ANR	8986981	Symbol	t_integer		8986882						
ANR	8986982	Symbol	gs_error_stackunderflow		8986882						
ANR	8986983	Symbol	i_ctx_p		8986882						
ANR	8986984	Symbol	values		8986882						
ANR	8986985	Symbol	num_comps		8986882						
ANR	8986986	Symbol	i		8986882						
ANR	8986987	Symbol	t_real		8986882						
ANR	8986988	Symbol	osp		8986882						
ANR	8986989	Symbol	space		8986882						
ANR	8986990	Function	cieabccompareproc	2576:0:82016:83093							
ANR	8986991	FunctionDef	"cieabccompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8986990	0					
ANR	8986992	CompoundStatement		2577:0:82091:83093	8986990	0					
ANR	8986993	IdentifierDeclStatement	int code = 0 ;	2578:4:82097:82109	8986990	0	True				
ANR	8986994	IdentifierDecl	code = 0		8986990	0					
ANR	8986995	IdentifierDeclType	int		8986990	0					
ANR	8986996	Identifier	code		8986990	1					
ANR	8986997	AssignmentExpression	code = 0		8986990	2		=			
ANR	8986998	Identifier	code		8986990	0					
ANR	8986999	PrimaryExpression	0		8986990	1					
ANR	8987000	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2579:4:82115:82137	8986990	1	True				
ANR	8987001	IdentifierDecl	CIEdict1		8986990	0					
ANR	8987002	IdentifierDeclType	ref		8986990	0					
ANR	8987003	Identifier	CIEdict1		8986990	1					
ANR	8987004	IdentifierDecl	CIEdict2		8986990	1					
ANR	8987005	IdentifierDeclType	ref		8986990	0					
ANR	8987006	Identifier	CIEdict2		8986990	1					
ANR	8987007	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2581:4:82144:82190	8986990	2	True				
ANR	8987008	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8986990	0		=			
ANR	8987009	Identifier	code		8986990	0					
ANR	8987010	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8986990	1					
ANR	8987011	Callee	array_get		8986990	0					
ANR	8987012	Identifier	array_get		8986990	0					
ANR	8987013	ArgumentList	imemory		8986990	1					
ANR	8987014	Argument	imemory		8986990	0					
ANR	8987015	Identifier	imemory		8986990	0					
ANR	8987016	Argument	space		8986990	1					
ANR	8987017	Identifier	space		8986990	0					
ANR	8987018	Argument	1		8986990	2					
ANR	8987019	PrimaryExpression	1		8986990	0					
ANR	8987020	Argument	& CIEdict1		8986990	3					
ANR	8987021	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987022	UnaryOperator	&		8986990	0					
ANR	8987023	Identifier	CIEdict1		8986990	1					
ANR	8987024	IfStatement	if ( code < 0 )		8986990	3					
ANR	8987025	Condition	code < 0	2582:8:82200:82207	8986990	0	True				
ANR	8987026	RelationalExpression	code < 0		8986990	0		<			
ANR	8987027	Identifier	code		8986990	0					
ANR	8987028	PrimaryExpression	0		8986990	1					
ANR	8987029	ReturnStatement	return 0 ;	2583:8:82218:82226	8986990	1	True				
ANR	8987030	PrimaryExpression	0		8986990	0					
ANR	8987031	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2584:4:82232:82282	8986990	4	True				
ANR	8987032	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		8986990	0		=			
ANR	8987033	Identifier	code		8986990	0					
ANR	8987034	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		8986990	1					
ANR	8987035	Callee	array_get		8986990	0					
ANR	8987036	Identifier	array_get		8986990	0					
ANR	8987037	ArgumentList	imemory		8986990	1					
ANR	8987038	Argument	imemory		8986990	0					
ANR	8987039	Identifier	imemory		8986990	0					
ANR	8987040	Argument	testspace		8986990	1					
ANR	8987041	Identifier	testspace		8986990	0					
ANR	8987042	Argument	1		8986990	2					
ANR	8987043	PrimaryExpression	1		8986990	0					
ANR	8987044	Argument	& CIEdict2		8986990	3					
ANR	8987045	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987046	UnaryOperator	&		8986990	0					
ANR	8987047	Identifier	CIEdict2		8986990	1					
ANR	8987048	IfStatement	if ( code < 0 )		8986990	5					
ANR	8987049	Condition	code < 0	2585:8:82292:82299	8986990	0	True				
ANR	8987050	RelationalExpression	code < 0		8986990	0		<			
ANR	8987051	Identifier	code		8986990	0					
ANR	8987052	PrimaryExpression	0		8986990	1					
ANR	8987053	ReturnStatement	return 0 ;	2586:8:82310:82318	8986990	1	True				
ANR	8987054	PrimaryExpression	0		8986990	0					
ANR	8987055	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		8986990	6					
ANR	8987056	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2587:8:82328:82395	8986990	0	True				
ANR	8987057	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8986990	0					
ANR	8987058	UnaryOperator	!		8986990	0					
ANR	8987059	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8986990	1					
ANR	8987060	Callee	comparedictkey		8986990	0					
ANR	8987061	Identifier	comparedictkey		8986990	0					
ANR	8987062	ArgumentList	i_ctx_p		8986990	1					
ANR	8987063	Argument	i_ctx_p		8986990	0					
ANR	8987064	Identifier	i_ctx_p		8986990	0					
ANR	8987065	Argument	& CIEdict1		8986990	1					
ANR	8987066	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987067	UnaryOperator	&		8986990	0					
ANR	8987068	Identifier	CIEdict1		8986990	1					
ANR	8987069	Argument	& CIEdict2		8986990	2					
ANR	8987070	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987071	UnaryOperator	&		8986990	0					
ANR	8987072	Identifier	CIEdict2		8986990	1					
ANR	8987073	Argument	"( char * ) ""WhitePoint"""		8986990	3					
ANR	8987074	CastExpression	"( char * ) ""WhitePoint"""		8986990	0					
ANR	8987075	CastTarget	char *		8986990	0					
ANR	8987076	PrimaryExpression	"""WhitePoint"""		8986990	1					
ANR	8987077	ReturnStatement	return 0 ;	2588:8:82406:82414	8986990	1	True				
ANR	8987078	PrimaryExpression	0		8986990	0					
ANR	8987079	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		8986990	7					
ANR	8987080	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2589:8:82424:82491	8986990	0	True				
ANR	8987081	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8986990	0					
ANR	8987082	UnaryOperator	!		8986990	0					
ANR	8987083	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8986990	1					
ANR	8987084	Callee	comparedictkey		8986990	0					
ANR	8987085	Identifier	comparedictkey		8986990	0					
ANR	8987086	ArgumentList	i_ctx_p		8986990	1					
ANR	8987087	Argument	i_ctx_p		8986990	0					
ANR	8987088	Identifier	i_ctx_p		8986990	0					
ANR	8987089	Argument	& CIEdict1		8986990	1					
ANR	8987090	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987091	UnaryOperator	&		8986990	0					
ANR	8987092	Identifier	CIEdict1		8986990	1					
ANR	8987093	Argument	& CIEdict2		8986990	2					
ANR	8987094	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987095	UnaryOperator	&		8986990	0					
ANR	8987096	Identifier	CIEdict2		8986990	1					
ANR	8987097	Argument	"( char * ) ""BlackPoint"""		8986990	3					
ANR	8987098	CastExpression	"( char * ) ""BlackPoint"""		8986990	0					
ANR	8987099	CastTarget	char *		8986990	0					
ANR	8987100	PrimaryExpression	"""BlackPoint"""		8986990	1					
ANR	8987101	ReturnStatement	return 0 ;	2590:8:82502:82510	8986990	1	True				
ANR	8987102	PrimaryExpression	0		8986990	0					
ANR	8987103	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		8986990	8					
ANR	8987104	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	2591:8:82520:82585	8986990	0	True				
ANR	8987105	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8986990	0					
ANR	8987106	UnaryOperator	!		8986990	0					
ANR	8987107	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8986990	1					
ANR	8987108	Callee	comparedictkey		8986990	0					
ANR	8987109	Identifier	comparedictkey		8986990	0					
ANR	8987110	ArgumentList	i_ctx_p		8986990	1					
ANR	8987111	Argument	i_ctx_p		8986990	0					
ANR	8987112	Identifier	i_ctx_p		8986990	0					
ANR	8987113	Argument	& CIEdict1		8986990	1					
ANR	8987114	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987115	UnaryOperator	&		8986990	0					
ANR	8987116	Identifier	CIEdict1		8986990	1					
ANR	8987117	Argument	& CIEdict2		8986990	2					
ANR	8987118	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987119	UnaryOperator	&		8986990	0					
ANR	8987120	Identifier	CIEdict2		8986990	1					
ANR	8987121	Argument	"( char * ) ""RangeABC"""		8986990	3					
ANR	8987122	CastExpression	"( char * ) ""RangeABC"""		8986990	0					
ANR	8987123	CastTarget	char *		8986990	0					
ANR	8987124	PrimaryExpression	"""RangeABC"""		8986990	1					
ANR	8987125	ReturnStatement	return 0 ;	2592:8:82596:82604	8986990	1	True				
ANR	8987126	PrimaryExpression	0		8986990	0					
ANR	8987127	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		8986990	9					
ANR	8987128	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	2593:8:82614:82680	8986990	0	True				
ANR	8987129	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8986990	0					
ANR	8987130	UnaryOperator	!		8986990	0					
ANR	8987131	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8986990	1					
ANR	8987132	Callee	comparedictkey		8986990	0					
ANR	8987133	Identifier	comparedictkey		8986990	0					
ANR	8987134	ArgumentList	i_ctx_p		8986990	1					
ANR	8987135	Argument	i_ctx_p		8986990	0					
ANR	8987136	Identifier	i_ctx_p		8986990	0					
ANR	8987137	Argument	& CIEdict1		8986990	1					
ANR	8987138	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987139	UnaryOperator	&		8986990	0					
ANR	8987140	Identifier	CIEdict1		8986990	1					
ANR	8987141	Argument	& CIEdict2		8986990	2					
ANR	8987142	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987143	UnaryOperator	&		8986990	0					
ANR	8987144	Identifier	CIEdict2		8986990	1					
ANR	8987145	Argument	"( char * ) ""DecodeABC"""		8986990	3					
ANR	8987146	CastExpression	"( char * ) ""DecodeABC"""		8986990	0					
ANR	8987147	CastTarget	char *		8986990	0					
ANR	8987148	PrimaryExpression	"""DecodeABC"""		8986990	1					
ANR	8987149	ReturnStatement	return 0 ;	2594:8:82691:82699	8986990	1	True				
ANR	8987150	PrimaryExpression	0		8986990	0					
ANR	8987151	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		8986990	10					
ANR	8987152	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	2595:8:82709:82775	8986990	0	True				
ANR	8987153	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8986990	0					
ANR	8987154	UnaryOperator	!		8986990	0					
ANR	8987155	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8986990	1					
ANR	8987156	Callee	comparedictkey		8986990	0					
ANR	8987157	Identifier	comparedictkey		8986990	0					
ANR	8987158	ArgumentList	i_ctx_p		8986990	1					
ANR	8987159	Argument	i_ctx_p		8986990	0					
ANR	8987160	Identifier	i_ctx_p		8986990	0					
ANR	8987161	Argument	& CIEdict1		8986990	1					
ANR	8987162	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987163	UnaryOperator	&		8986990	0					
ANR	8987164	Identifier	CIEdict1		8986990	1					
ANR	8987165	Argument	& CIEdict2		8986990	2					
ANR	8987166	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987167	UnaryOperator	&		8986990	0					
ANR	8987168	Identifier	CIEdict2		8986990	1					
ANR	8987169	Argument	"( char * ) ""MatrixABC"""		8986990	3					
ANR	8987170	CastExpression	"( char * ) ""MatrixABC"""		8986990	0					
ANR	8987171	CastTarget	char *		8986990	0					
ANR	8987172	PrimaryExpression	"""MatrixABC"""		8986990	1					
ANR	8987173	ReturnStatement	return 0 ;	2596:8:82786:82794	8986990	1	True				
ANR	8987174	PrimaryExpression	0		8986990	0					
ANR	8987175	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		8986990	11					
ANR	8987176	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2597:8:82804:82869	8986990	0	True				
ANR	8987177	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8986990	0					
ANR	8987178	UnaryOperator	!		8986990	0					
ANR	8987179	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8986990	1					
ANR	8987180	Callee	comparedictkey		8986990	0					
ANR	8987181	Identifier	comparedictkey		8986990	0					
ANR	8987182	ArgumentList	i_ctx_p		8986990	1					
ANR	8987183	Argument	i_ctx_p		8986990	0					
ANR	8987184	Identifier	i_ctx_p		8986990	0					
ANR	8987185	Argument	& CIEdict1		8986990	1					
ANR	8987186	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987187	UnaryOperator	&		8986990	0					
ANR	8987188	Identifier	CIEdict1		8986990	1					
ANR	8987189	Argument	& CIEdict2		8986990	2					
ANR	8987190	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987191	UnaryOperator	&		8986990	0					
ANR	8987192	Identifier	CIEdict2		8986990	1					
ANR	8987193	Argument	"( char * ) ""RangeLMN"""		8986990	3					
ANR	8987194	CastExpression	"( char * ) ""RangeLMN"""		8986990	0					
ANR	8987195	CastTarget	char *		8986990	0					
ANR	8987196	PrimaryExpression	"""RangeLMN"""		8986990	1					
ANR	8987197	ReturnStatement	return 0 ;	2598:8:82880:82888	8986990	1	True				
ANR	8987198	PrimaryExpression	0		8986990	0					
ANR	8987199	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		8986990	12					
ANR	8987200	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2599:8:82898:82964	8986990	0	True				
ANR	8987201	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8986990	0					
ANR	8987202	UnaryOperator	!		8986990	0					
ANR	8987203	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8986990	1					
ANR	8987204	Callee	comparedictkey		8986990	0					
ANR	8987205	Identifier	comparedictkey		8986990	0					
ANR	8987206	ArgumentList	i_ctx_p		8986990	1					
ANR	8987207	Argument	i_ctx_p		8986990	0					
ANR	8987208	Identifier	i_ctx_p		8986990	0					
ANR	8987209	Argument	& CIEdict1		8986990	1					
ANR	8987210	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987211	UnaryOperator	&		8986990	0					
ANR	8987212	Identifier	CIEdict1		8986990	1					
ANR	8987213	Argument	& CIEdict2		8986990	2					
ANR	8987214	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987215	UnaryOperator	&		8986990	0					
ANR	8987216	Identifier	CIEdict2		8986990	1					
ANR	8987217	Argument	"( char * ) ""DecodeLMN"""		8986990	3					
ANR	8987218	CastExpression	"( char * ) ""DecodeLMN"""		8986990	0					
ANR	8987219	CastTarget	char *		8986990	0					
ANR	8987220	PrimaryExpression	"""DecodeLMN"""		8986990	1					
ANR	8987221	ReturnStatement	return 0 ;	2600:8:82975:82983	8986990	1	True				
ANR	8987222	PrimaryExpression	0		8986990	0					
ANR	8987223	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		8986990	13					
ANR	8987224	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2601:8:82993:83058	8986990	0	True				
ANR	8987225	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8986990	0					
ANR	8987226	UnaryOperator	!		8986990	0					
ANR	8987227	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8986990	1					
ANR	8987228	Callee	comparedictkey		8986990	0					
ANR	8987229	Identifier	comparedictkey		8986990	0					
ANR	8987230	ArgumentList	i_ctx_p		8986990	1					
ANR	8987231	Argument	i_ctx_p		8986990	0					
ANR	8987232	Identifier	i_ctx_p		8986990	0					
ANR	8987233	Argument	& CIEdict1		8986990	1					
ANR	8987234	UnaryOperationExpression	& CIEdict1		8986990	0					
ANR	8987235	UnaryOperator	&		8986990	0					
ANR	8987236	Identifier	CIEdict1		8986990	1					
ANR	8987237	Argument	& CIEdict2		8986990	2					
ANR	8987238	UnaryOperationExpression	& CIEdict2		8986990	0					
ANR	8987239	UnaryOperator	&		8986990	0					
ANR	8987240	Identifier	CIEdict2		8986990	1					
ANR	8987241	Argument	"( char * ) ""MatrixMN"""		8986990	3					
ANR	8987242	CastExpression	"( char * ) ""MatrixMN"""		8986990	0					
ANR	8987243	CastTarget	char *		8986990	0					
ANR	8987244	PrimaryExpression	"""MatrixMN"""		8986990	1					
ANR	8987245	ReturnStatement	return 0 ;	2602:8:83069:83077	8986990	1	True				
ANR	8987246	PrimaryExpression	0		8986990	0					
ANR	8987247	ReturnStatement	return 1 ;	2603:4:83083:83091	8986990	14	True				
ANR	8987248	PrimaryExpression	1		8986990	0					
ANR	8987249	ReturnType	static int		8986990	1					
ANR	8987250	Identifier	cieabccompareproc		8986990	2					
ANR	8987251	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8986990	3					
ANR	8987252	Parameter	i_ctx_t * i_ctx_p	2576:29:82045:82060	8986990	0	True				
ANR	8987253	ParameterType	i_ctx_t *		8986990	0					
ANR	8987254	Identifier	i_ctx_p		8986990	1					
ANR	8987255	Parameter	ref * space	2576:47:82063:82072	8986990	1	True				
ANR	8987256	ParameterType	ref *		8986990	0					
ANR	8987257	Identifier	space		8986990	1					
ANR	8987258	Parameter	ref * testspace	2576:59:82075:82088	8986990	2	True				
ANR	8987259	ParameterType	ref *		8986990	0					
ANR	8987260	Identifier	testspace		8986990	1					
ANR	8987261	CFGEntryNode	ENTRY		8986990		True				
ANR	8987262	CFGExitNode	EXIT		8986990		True				
ANR	8987263	Symbol	code		8986990						
ANR	8987264	Symbol	testspace		8986990						
ANR	8987265	Symbol	i_ctx_p		8986990						
ANR	8987266	Symbol	array_get		8986990						
ANR	8987267	Symbol	CIEdict1		8986990						
ANR	8987268	Symbol	CIEdict2		8986990						
ANR	8987269	Symbol	imemory		8986990						
ANR	8987270	Symbol	comparedictkey		8986990						
ANR	8987271	Symbol	& CIEdict2		8986990						
ANR	8987272	Symbol	& CIEdict1		8986990						
ANR	8987273	Symbol	space		8986990						
ANR	8987274	Function	hashciedefspace	2607:0:83114:84561							
ANR	8987275	FunctionDef	"hashciedefspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		8987274	0					
ANR	8987276	CompoundStatement		2608:0:83192:84561	8987274	0					
ANR	8987277	IdentifierDeclStatement	int code = 0 ;	2609:4:83198:83210	8987274	0	True				
ANR	8987278	IdentifierDecl	code = 0		8987274	0					
ANR	8987279	IdentifierDeclType	int		8987274	0					
ANR	8987280	Identifier	code		8987274	1					
ANR	8987281	AssignmentExpression	code = 0		8987274	2		=			
ANR	8987282	Identifier	code		8987274	0					
ANR	8987283	PrimaryExpression	0		8987274	1					
ANR	8987284	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2610:4:83216:83239	8987274	1	True				
ANR	8987285	IdentifierDecl	CIEdict1		8987274	0					
ANR	8987286	IdentifierDeclType	ref		8987274	0					
ANR	8987287	Identifier	CIEdict1		8987274	1					
ANR	8987288	IdentifierDecl	spacename		8987274	1					
ANR	8987289	IdentifierDeclType	ref		8987274	0					
ANR	8987290	Identifier	spacename		8987274	1					
ANR	8987291	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2612:4:83246:83293	8987274	2	True				
ANR	8987292	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		8987274	0		=			
ANR	8987293	Identifier	code		8987274	0					
ANR	8987294	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		8987274	1					
ANR	8987295	Callee	array_get		8987274	0					
ANR	8987296	Identifier	array_get		8987274	0					
ANR	8987297	ArgumentList	imemory		8987274	1					
ANR	8987298	Argument	imemory		8987274	0					
ANR	8987299	Identifier	imemory		8987274	0					
ANR	8987300	Argument	space		8987274	1					
ANR	8987301	Identifier	space		8987274	0					
ANR	8987302	Argument	0		8987274	2					
ANR	8987303	PrimaryExpression	0		8987274	0					
ANR	8987304	Argument	& spacename		8987274	3					
ANR	8987305	UnaryOperationExpression	& spacename		8987274	0					
ANR	8987306	UnaryOperator	&		8987274	0					
ANR	8987307	Identifier	spacename		8987274	1					
ANR	8987308	IfStatement	if ( code < 0 )		8987274	3					
ANR	8987309	Condition	code < 0	2613:8:83303:83310	8987274	0	True				
ANR	8987310	RelationalExpression	code < 0		8987274	0		<			
ANR	8987311	Identifier	code		8987274	0					
ANR	8987312	PrimaryExpression	0		8987274	1					
ANR	8987313	ReturnStatement	return 0 ;	2614:8:83321:83329	8987274	1	True				
ANR	8987314	PrimaryExpression	0		8987274	0					
ANR	8987315	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2615:4:83335:83431	8987274	4	True				
ANR	8987316	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		8987274	0					
ANR	8987317	Callee	gs_md5_append		8987274	0					
ANR	8987318	Identifier	gs_md5_append		8987274	0					
ANR	8987319	ArgumentList	md5		8987274	1					
ANR	8987320	Argument	md5		8987274	0					
ANR	8987321	Identifier	md5		8987274	0					
ANR	8987322	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		8987274	1					
ANR	8987323	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		8987274	0					
ANR	8987324	CastTarget	const gs_md5_byte_t *		8987274	0					
ANR	8987325	UnaryOperationExpression	& spacename . value . pname		8987274	1					
ANR	8987326	UnaryOperator	&		8987274	0					
ANR	8987327	MemberAccess	spacename . value . pname		8987274	1					
ANR	8987328	MemberAccess	spacename . value		8987274	0					
ANR	8987329	Identifier	spacename		8987274	0					
ANR	8987330	Identifier	value		8987274	1					
ANR	8987331	Identifier	pname		8987274	1					
ANR	8987332	Argument	sizeof ( spacename . value . pname )		8987274	2					
ANR	8987333	SizeofExpression	sizeof ( spacename . value . pname )		8987274	0					
ANR	8987334	Sizeof	sizeof		8987274	0					
ANR	8987335	MemberAccess	spacename . value . pname		8987274	1					
ANR	8987336	MemberAccess	spacename . value		8987274	0					
ANR	8987337	Identifier	spacename		8987274	0					
ANR	8987338	Identifier	value		8987274	1					
ANR	8987339	Identifier	pname		8987274	1					
ANR	8987340	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2617:4:83438:83484	8987274	5	True				
ANR	8987341	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8987274	0		=			
ANR	8987342	Identifier	code		8987274	0					
ANR	8987343	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8987274	1					
ANR	8987344	Callee	array_get		8987274	0					
ANR	8987345	Identifier	array_get		8987274	0					
ANR	8987346	ArgumentList	imemory		8987274	1					
ANR	8987347	Argument	imemory		8987274	0					
ANR	8987348	Identifier	imemory		8987274	0					
ANR	8987349	Argument	space		8987274	1					
ANR	8987350	Identifier	space		8987274	0					
ANR	8987351	Argument	1		8987274	2					
ANR	8987352	PrimaryExpression	1		8987274	0					
ANR	8987353	Argument	& CIEdict1		8987274	3					
ANR	8987354	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987355	UnaryOperator	&		8987274	0					
ANR	8987356	Identifier	CIEdict1		8987274	1					
ANR	8987357	IfStatement	if ( code < 0 )		8987274	6					
ANR	8987358	Condition	code < 0	2618:8:83494:83501	8987274	0	True				
ANR	8987359	RelationalExpression	code < 0		8987274	0		<			
ANR	8987360	Identifier	code		8987274	0					
ANR	8987361	PrimaryExpression	0		8987274	1					
ANR	8987362	ReturnStatement	return 0 ;	2619:8:83512:83520	8987274	1	True				
ANR	8987363	PrimaryExpression	0		8987274	0					
ANR	8987364	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		8987274	7					
ANR	8987365	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2620:8:83530:83588	8987274	0	True				
ANR	8987366	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8987274	0					
ANR	8987367	UnaryOperator	!		8987274	0					
ANR	8987368	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8987274	1					
ANR	8987369	Callee	hashdictkey		8987274	0					
ANR	8987370	Identifier	hashdictkey		8987274	0					
ANR	8987371	ArgumentList	i_ctx_p		8987274	1					
ANR	8987372	Argument	i_ctx_p		8987274	0					
ANR	8987373	Identifier	i_ctx_p		8987274	0					
ANR	8987374	Argument	& CIEdict1		8987274	1					
ANR	8987375	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987376	UnaryOperator	&		8987274	0					
ANR	8987377	Identifier	CIEdict1		8987274	1					
ANR	8987378	Argument	"( char * ) ""WhitePoint"""		8987274	2					
ANR	8987379	CastExpression	"( char * ) ""WhitePoint"""		8987274	0					
ANR	8987380	CastTarget	char *		8987274	0					
ANR	8987381	PrimaryExpression	"""WhitePoint"""		8987274	1					
ANR	8987382	Argument	md5		8987274	3					
ANR	8987383	Identifier	md5		8987274	0					
ANR	8987384	ReturnStatement	return 0 ;	2621:8:83599:83607	8987274	1	True				
ANR	8987385	PrimaryExpression	0		8987274	0					
ANR	8987386	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		8987274	8					
ANR	8987387	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2622:8:83617:83675	8987274	0	True				
ANR	8987388	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8987274	0					
ANR	8987389	UnaryOperator	!		8987274	0					
ANR	8987390	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8987274	1					
ANR	8987391	Callee	hashdictkey		8987274	0					
ANR	8987392	Identifier	hashdictkey		8987274	0					
ANR	8987393	ArgumentList	i_ctx_p		8987274	1					
ANR	8987394	Argument	i_ctx_p		8987274	0					
ANR	8987395	Identifier	i_ctx_p		8987274	0					
ANR	8987396	Argument	& CIEdict1		8987274	1					
ANR	8987397	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987398	UnaryOperator	&		8987274	0					
ANR	8987399	Identifier	CIEdict1		8987274	1					
ANR	8987400	Argument	"( char * ) ""BlackPoint"""		8987274	2					
ANR	8987401	CastExpression	"( char * ) ""BlackPoint"""		8987274	0					
ANR	8987402	CastTarget	char *		8987274	0					
ANR	8987403	PrimaryExpression	"""BlackPoint"""		8987274	1					
ANR	8987404	Argument	md5		8987274	3					
ANR	8987405	Identifier	md5		8987274	0					
ANR	8987406	ReturnStatement	return 0 ;	2623:8:83686:83694	8987274	1	True				
ANR	8987407	PrimaryExpression	0		8987274	0					
ANR	8987408	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		8987274	9					
ANR	8987409	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2624:8:83704:83760	8987274	0	True				
ANR	8987410	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8987274	0					
ANR	8987411	UnaryOperator	!		8987274	0					
ANR	8987412	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8987274	1					
ANR	8987413	Callee	hashdictkey		8987274	0					
ANR	8987414	Identifier	hashdictkey		8987274	0					
ANR	8987415	ArgumentList	i_ctx_p		8987274	1					
ANR	8987416	Argument	i_ctx_p		8987274	0					
ANR	8987417	Identifier	i_ctx_p		8987274	0					
ANR	8987418	Argument	& CIEdict1		8987274	1					
ANR	8987419	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987420	UnaryOperator	&		8987274	0					
ANR	8987421	Identifier	CIEdict1		8987274	1					
ANR	8987422	Argument	"( char * ) ""RangeABC"""		8987274	2					
ANR	8987423	CastExpression	"( char * ) ""RangeABC"""		8987274	0					
ANR	8987424	CastTarget	char *		8987274	0					
ANR	8987425	PrimaryExpression	"""RangeABC"""		8987274	1					
ANR	8987426	Argument	md5		8987274	3					
ANR	8987427	Identifier	md5		8987274	0					
ANR	8987428	ReturnStatement	return 0 ;	2625:8:83771:83779	8987274	1	True				
ANR	8987429	PrimaryExpression	0		8987274	0					
ANR	8987430	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		8987274	10					
ANR	8987431	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2626:8:83789:83846	8987274	0	True				
ANR	8987432	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8987274	0					
ANR	8987433	UnaryOperator	!		8987274	0					
ANR	8987434	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8987274	1					
ANR	8987435	Callee	hashdictkey		8987274	0					
ANR	8987436	Identifier	hashdictkey		8987274	0					
ANR	8987437	ArgumentList	i_ctx_p		8987274	1					
ANR	8987438	Argument	i_ctx_p		8987274	0					
ANR	8987439	Identifier	i_ctx_p		8987274	0					
ANR	8987440	Argument	& CIEdict1		8987274	1					
ANR	8987441	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987442	UnaryOperator	&		8987274	0					
ANR	8987443	Identifier	CIEdict1		8987274	1					
ANR	8987444	Argument	"( char * ) ""DecodeABC"""		8987274	2					
ANR	8987445	CastExpression	"( char * ) ""DecodeABC"""		8987274	0					
ANR	8987446	CastTarget	char *		8987274	0					
ANR	8987447	PrimaryExpression	"""DecodeABC"""		8987274	1					
ANR	8987448	Argument	md5		8987274	3					
ANR	8987449	Identifier	md5		8987274	0					
ANR	8987450	ReturnStatement	return 0 ;	2627:8:83857:83865	8987274	1	True				
ANR	8987451	PrimaryExpression	0		8987274	0					
ANR	8987452	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		8987274	11					
ANR	8987453	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2628:8:83875:83932	8987274	0	True				
ANR	8987454	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8987274	0					
ANR	8987455	UnaryOperator	!		8987274	0					
ANR	8987456	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8987274	1					
ANR	8987457	Callee	hashdictkey		8987274	0					
ANR	8987458	Identifier	hashdictkey		8987274	0					
ANR	8987459	ArgumentList	i_ctx_p		8987274	1					
ANR	8987460	Argument	i_ctx_p		8987274	0					
ANR	8987461	Identifier	i_ctx_p		8987274	0					
ANR	8987462	Argument	& CIEdict1		8987274	1					
ANR	8987463	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987464	UnaryOperator	&		8987274	0					
ANR	8987465	Identifier	CIEdict1		8987274	1					
ANR	8987466	Argument	"( char * ) ""MatrixABC"""		8987274	2					
ANR	8987467	CastExpression	"( char * ) ""MatrixABC"""		8987274	0					
ANR	8987468	CastTarget	char *		8987274	0					
ANR	8987469	PrimaryExpression	"""MatrixABC"""		8987274	1					
ANR	8987470	Argument	md5		8987274	3					
ANR	8987471	Identifier	md5		8987274	0					
ANR	8987472	ReturnStatement	return 0 ;	2629:8:83943:83951	8987274	1	True				
ANR	8987473	PrimaryExpression	0		8987274	0					
ANR	8987474	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		8987274	12					
ANR	8987475	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2630:8:83961:84017	8987274	0	True				
ANR	8987476	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8987274	0					
ANR	8987477	UnaryOperator	!		8987274	0					
ANR	8987478	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8987274	1					
ANR	8987479	Callee	hashdictkey		8987274	0					
ANR	8987480	Identifier	hashdictkey		8987274	0					
ANR	8987481	ArgumentList	i_ctx_p		8987274	1					
ANR	8987482	Argument	i_ctx_p		8987274	0					
ANR	8987483	Identifier	i_ctx_p		8987274	0					
ANR	8987484	Argument	& CIEdict1		8987274	1					
ANR	8987485	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987486	UnaryOperator	&		8987274	0					
ANR	8987487	Identifier	CIEdict1		8987274	1					
ANR	8987488	Argument	"( char * ) ""RangeLMN"""		8987274	2					
ANR	8987489	CastExpression	"( char * ) ""RangeLMN"""		8987274	0					
ANR	8987490	CastTarget	char *		8987274	0					
ANR	8987491	PrimaryExpression	"""RangeLMN"""		8987274	1					
ANR	8987492	Argument	md5		8987274	3					
ANR	8987493	Identifier	md5		8987274	0					
ANR	8987494	ReturnStatement	return 0 ;	2631:8:84028:84036	8987274	1	True				
ANR	8987495	PrimaryExpression	0		8987274	0					
ANR	8987496	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		8987274	13					
ANR	8987497	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2632:8:84046:84103	8987274	0	True				
ANR	8987498	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8987274	0					
ANR	8987499	UnaryOperator	!		8987274	0					
ANR	8987500	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8987274	1					
ANR	8987501	Callee	hashdictkey		8987274	0					
ANR	8987502	Identifier	hashdictkey		8987274	0					
ANR	8987503	ArgumentList	i_ctx_p		8987274	1					
ANR	8987504	Argument	i_ctx_p		8987274	0					
ANR	8987505	Identifier	i_ctx_p		8987274	0					
ANR	8987506	Argument	& CIEdict1		8987274	1					
ANR	8987507	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987508	UnaryOperator	&		8987274	0					
ANR	8987509	Identifier	CIEdict1		8987274	1					
ANR	8987510	Argument	"( char * ) ""DecodeLMN"""		8987274	2					
ANR	8987511	CastExpression	"( char * ) ""DecodeLMN"""		8987274	0					
ANR	8987512	CastTarget	char *		8987274	0					
ANR	8987513	PrimaryExpression	"""DecodeLMN"""		8987274	1					
ANR	8987514	Argument	md5		8987274	3					
ANR	8987515	Identifier	md5		8987274	0					
ANR	8987516	ReturnStatement	return 0 ;	2633:8:84114:84122	8987274	1	True				
ANR	8987517	PrimaryExpression	0		8987274	0					
ANR	8987518	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		8987274	14					
ANR	8987519	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2634:8:84132:84188	8987274	0	True				
ANR	8987520	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8987274	0					
ANR	8987521	UnaryOperator	!		8987274	0					
ANR	8987522	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8987274	1					
ANR	8987523	Callee	hashdictkey		8987274	0					
ANR	8987524	Identifier	hashdictkey		8987274	0					
ANR	8987525	ArgumentList	i_ctx_p		8987274	1					
ANR	8987526	Argument	i_ctx_p		8987274	0					
ANR	8987527	Identifier	i_ctx_p		8987274	0					
ANR	8987528	Argument	& CIEdict1		8987274	1					
ANR	8987529	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987530	UnaryOperator	&		8987274	0					
ANR	8987531	Identifier	CIEdict1		8987274	1					
ANR	8987532	Argument	"( char * ) ""MatrixMN"""		8987274	2					
ANR	8987533	CastExpression	"( char * ) ""MatrixMN"""		8987274	0					
ANR	8987534	CastTarget	char *		8987274	0					
ANR	8987535	PrimaryExpression	"""MatrixMN"""		8987274	1					
ANR	8987536	Argument	md5		8987274	3					
ANR	8987537	Identifier	md5		8987274	0					
ANR	8987538	ReturnStatement	return 0 ;	2635:8:84199:84207	8987274	1	True				
ANR	8987539	PrimaryExpression	0		8987274	0					
ANR	8987540	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 ) )"		8987274	15					
ANR	8987541	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"	2636:8:84217:84273	8987274	0	True				
ANR	8987542	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"		8987274	0					
ANR	8987543	UnaryOperator	!		8987274	0					
ANR	8987544	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"		8987274	1					
ANR	8987545	Callee	hashdictkey		8987274	0					
ANR	8987546	Identifier	hashdictkey		8987274	0					
ANR	8987547	ArgumentList	i_ctx_p		8987274	1					
ANR	8987548	Argument	i_ctx_p		8987274	0					
ANR	8987549	Identifier	i_ctx_p		8987274	0					
ANR	8987550	Argument	& CIEdict1		8987274	1					
ANR	8987551	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987552	UnaryOperator	&		8987274	0					
ANR	8987553	Identifier	CIEdict1		8987274	1					
ANR	8987554	Argument	"( char * ) ""RangeDEF"""		8987274	2					
ANR	8987555	CastExpression	"( char * ) ""RangeDEF"""		8987274	0					
ANR	8987556	CastTarget	char *		8987274	0					
ANR	8987557	PrimaryExpression	"""RangeDEF"""		8987274	1					
ANR	8987558	Argument	md5		8987274	3					
ANR	8987559	Identifier	md5		8987274	0					
ANR	8987560	ReturnStatement	return 0 ;	2637:8:84284:84292	8987274	1	True				
ANR	8987561	PrimaryExpression	0		8987274	0					
ANR	8987562	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 ) )"		8987274	16					
ANR	8987563	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"	2638:8:84302:84359	8987274	0	True				
ANR	8987564	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"		8987274	0					
ANR	8987565	UnaryOperator	!		8987274	0					
ANR	8987566	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"		8987274	1					
ANR	8987567	Callee	hashdictkey		8987274	0					
ANR	8987568	Identifier	hashdictkey		8987274	0					
ANR	8987569	ArgumentList	i_ctx_p		8987274	1					
ANR	8987570	Argument	i_ctx_p		8987274	0					
ANR	8987571	Identifier	i_ctx_p		8987274	0					
ANR	8987572	Argument	& CIEdict1		8987274	1					
ANR	8987573	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987574	UnaryOperator	&		8987274	0					
ANR	8987575	Identifier	CIEdict1		8987274	1					
ANR	8987576	Argument	"( char * ) ""DecodeDEF"""		8987274	2					
ANR	8987577	CastExpression	"( char * ) ""DecodeDEF"""		8987274	0					
ANR	8987578	CastTarget	char *		8987274	0					
ANR	8987579	PrimaryExpression	"""DecodeDEF"""		8987274	1					
ANR	8987580	Argument	md5		8987274	3					
ANR	8987581	Identifier	md5		8987274	0					
ANR	8987582	ReturnStatement	return 0 ;	2639:8:84370:84378	8987274	1	True				
ANR	8987583	PrimaryExpression	0		8987274	0					
ANR	8987584	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 ) )"		8987274	17					
ANR	8987585	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"	2640:8:84388:84444	8987274	0	True				
ANR	8987586	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"		8987274	0					
ANR	8987587	UnaryOperator	!		8987274	0					
ANR	8987588	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"		8987274	1					
ANR	8987589	Callee	hashdictkey		8987274	0					
ANR	8987590	Identifier	hashdictkey		8987274	0					
ANR	8987591	ArgumentList	i_ctx_p		8987274	1					
ANR	8987592	Argument	i_ctx_p		8987274	0					
ANR	8987593	Identifier	i_ctx_p		8987274	0					
ANR	8987594	Argument	& CIEdict1		8987274	1					
ANR	8987595	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987596	UnaryOperator	&		8987274	0					
ANR	8987597	Identifier	CIEdict1		8987274	1					
ANR	8987598	Argument	"( char * ) ""RangeHIJ"""		8987274	2					
ANR	8987599	CastExpression	"( char * ) ""RangeHIJ"""		8987274	0					
ANR	8987600	CastTarget	char *		8987274	0					
ANR	8987601	PrimaryExpression	"""RangeHIJ"""		8987274	1					
ANR	8987602	Argument	md5		8987274	3					
ANR	8987603	Identifier	md5		8987274	0					
ANR	8987604	ReturnStatement	return 0 ;	2641:8:84455:84463	8987274	1	True				
ANR	8987605	PrimaryExpression	0		8987274	0					
ANR	8987606	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 ) )"		8987274	18					
ANR	8987607	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"	2642:8:84473:84526	8987274	0	True				
ANR	8987608	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		8987274	0					
ANR	8987609	UnaryOperator	!		8987274	0					
ANR	8987610	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		8987274	1					
ANR	8987611	Callee	hashdictkey		8987274	0					
ANR	8987612	Identifier	hashdictkey		8987274	0					
ANR	8987613	ArgumentList	i_ctx_p		8987274	1					
ANR	8987614	Argument	i_ctx_p		8987274	0					
ANR	8987615	Identifier	i_ctx_p		8987274	0					
ANR	8987616	Argument	& CIEdict1		8987274	1					
ANR	8987617	UnaryOperationExpression	& CIEdict1		8987274	0					
ANR	8987618	UnaryOperator	&		8987274	0					
ANR	8987619	Identifier	CIEdict1		8987274	1					
ANR	8987620	Argument	"( char * ) ""Table"""		8987274	2					
ANR	8987621	CastExpression	"( char * ) ""Table"""		8987274	0					
ANR	8987622	CastTarget	char *		8987274	0					
ANR	8987623	PrimaryExpression	"""Table"""		8987274	1					
ANR	8987624	Argument	md5		8987274	3					
ANR	8987625	Identifier	md5		8987274	0					
ANR	8987626	ReturnStatement	return 0 ;	2643:8:84537:84545	8987274	1	True				
ANR	8987627	PrimaryExpression	0		8987274	0					
ANR	8987628	ReturnStatement	return 1 ;	2644:4:84551:84559	8987274	19	True				
ANR	8987629	PrimaryExpression	1		8987274	0					
ANR	8987630	ReturnType	static int		8987274	1					
ANR	8987631	Identifier	hashciedefspace		8987274	2					
ANR	8987632	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		8987274	3					
ANR	8987633	Parameter	i_ctx_t * i_ctx_p	2607:27:83141:83156	8987274	0	True				
ANR	8987634	ParameterType	i_ctx_t *		8987274	0					
ANR	8987635	Identifier	i_ctx_p		8987274	1					
ANR	8987636	Parameter	ref * space	2607:45:83159:83168	8987274	1	True				
ANR	8987637	ParameterType	ref *		8987274	0					
ANR	8987638	Identifier	space		8987274	1					
ANR	8987639	Parameter	gs_md5_state_t * md5	2607:57:83171:83189	8987274	2	True				
ANR	8987640	ParameterType	gs_md5_state_t *		8987274	0					
ANR	8987641	Identifier	md5		8987274	1					
ANR	8987642	CFGEntryNode	ENTRY		8987274		True				
ANR	8987643	CFGExitNode	EXIT		8987274		True				
ANR	8987644	Symbol	spacename		8987274						
ANR	8987645	Symbol	hashdictkey		8987274						
ANR	8987646	Symbol	code		8987274						
ANR	8987647	Symbol	array_get		8987274						
ANR	8987648	Symbol	& spacename		8987274						
ANR	8987649	Symbol	& CIEdict1		8987274						
ANR	8987650	Symbol	space		8987274						
ANR	8987651	Symbol	spacename . value . pname		8987274						
ANR	8987652	Symbol	i_ctx_p		8987274						
ANR	8987653	Symbol	& spacename . value . pname		8987274						
ANR	8987654	Symbol	spacename . value		8987274						
ANR	8987655	Symbol	& spacename . value		8987274						
ANR	8987656	Symbol	CIEdict1		8987274						
ANR	8987657	Symbol	imemory		8987274						
ANR	8987658	Symbol	md5		8987274						
ANR	8987659	Function	setciedefspace	2647:0:84564:86316							
ANR	8987660	FunctionDef	"setciedefspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8987659	0					
ANR	8987661	CompoundStatement		2648:0:84654:86316	8987659	0					
ANR	8987662	IdentifierDeclStatement	int code = 0 ;	2649:4:84660:84672	8987659	0	True				
ANR	8987663	IdentifierDecl	code = 0		8987659	0					
ANR	8987664	IdentifierDeclType	int		8987659	0					
ANR	8987665	Identifier	code		8987659	1					
ANR	8987666	AssignmentExpression	code = 0		8987659	2		=			
ANR	8987667	Identifier	code		8987659	0					
ANR	8987668	PrimaryExpression	0		8987659	1					
ANR	8987669	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2650:4:84678:84697	8987659	1	True				
ANR	8987670	IdentifierDecl	CIEDict		8987659	0					
ANR	8987671	IdentifierDeclType	ref		8987659	0					
ANR	8987672	Identifier	CIEDict		8987659	1					
ANR	8987673	IdentifierDecl	* nocie		8987659	1					
ANR	8987674	IdentifierDeclType	ref *		8987659	0					
ANR	8987675	Identifier	nocie		8987659	1					
ANR	8987676	IdentifierDeclStatement	ulong dictkey ;	2651:4:84703:84716	8987659	2	True				
ANR	8987677	IdentifierDecl	dictkey		8987659	0					
ANR	8987678	IdentifierDeclType	ulong		8987659	0					
ANR	8987679	Identifier	dictkey		8987659	1					
ANR	8987680	IdentifierDeclStatement	gs_md5_state_t md5 ;	2652:4:84722:84740	8987659	3	True				
ANR	8987681	IdentifierDecl	md5		8987659	0					
ANR	8987682	IdentifierDeclType	gs_md5_state_t		8987659	0					
ANR	8987683	Identifier	md5		8987659	1					
ANR	8987684	IdentifierDeclStatement	byte key [ 16 ] ;	2653:4:84746:84758	8987659	4	True				
ANR	8987685	IdentifierDecl	key [ 16 ]		8987659	0					
ANR	8987686	IdentifierDeclType	byte [ 16 ]		8987659	0					
ANR	8987687	Identifier	key		8987659	1					
ANR	8987688	PrimaryExpression	16		8987659	2					
ANR	8987689	IfStatement	if ( i_ctx_p -> language_level < 3 )		8987659	5					
ANR	8987690	Condition	i_ctx_p -> language_level < 3	2655:8:84769:84795	8987659	0	True				
ANR	8987691	RelationalExpression	i_ctx_p -> language_level < 3		8987659	0		<			
ANR	8987692	PtrMemberAccess	i_ctx_p -> language_level		8987659	0					
ANR	8987693	Identifier	i_ctx_p		8987659	0					
ANR	8987694	Identifier	language_level		8987659	1					
ANR	8987695	PrimaryExpression	3		8987659	1					
ANR	8987696	ExpressionStatement	return_error ( gs_error_undefined )	2656:8:84806:84838	8987659	1	True				
ANR	8987697	CallExpression	return_error ( gs_error_undefined )		8987659	0					
ANR	8987698	Callee	return_error		8987659	0					
ANR	8987699	Identifier	return_error		8987659	0					
ANR	8987700	ArgumentList	gs_error_undefined		8987659	1					
ANR	8987701	Argument	gs_error_undefined		8987659	0					
ANR	8987702	Identifier	gs_error_undefined		8987659	0					
ANR	8987703	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2658:4:84845:84897	8987659	6	True				
ANR	8987704	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8987659	0		=			
ANR	8987705	Identifier	code		8987659	0					
ANR	8987706	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8987659	1					
ANR	8987707	Callee	dict_find_string		8987659	0					
ANR	8987708	Identifier	dict_find_string		8987659	0					
ANR	8987709	ArgumentList	systemdict		8987659	1					
ANR	8987710	Argument	systemdict		8987659	0					
ANR	8987711	Identifier	systemdict		8987659	0					
ANR	8987712	Argument	"""NOCIE"""		8987659	1					
ANR	8987713	PrimaryExpression	"""NOCIE"""		8987659	0					
ANR	8987714	Argument	& nocie		8987659	2					
ANR	8987715	UnaryOperationExpression	& nocie		8987659	0					
ANR	8987716	UnaryOperator	&		8987659	0					
ANR	8987717	Identifier	nocie		8987659	1					
ANR	8987718	IfStatement	if ( code > 0 )		8987659	7					
ANR	8987719	Condition	code > 0	2659:8:84907:84914	8987659	0	True				
ANR	8987720	RelationalExpression	code > 0		8987659	0		>			
ANR	8987721	Identifier	code		8987659	0					
ANR	8987722	PrimaryExpression	0		8987659	1					
ANR	8987723	CompoundStatement		12:18:262:262	8987659	1					
ANR	8987724	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		8987659	0					
ANR	8987725	Condition	"! r_has_type ( nocie , t_boolean )"	2660:12:84931:84959	8987659	0	True				
ANR	8987726	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		8987659	0					
ANR	8987727	UnaryOperator	!		8987659	0					
ANR	8987728	CallExpression	"r_has_type ( nocie , t_boolean )"		8987659	1					
ANR	8987729	Callee	r_has_type		8987659	0					
ANR	8987730	Identifier	r_has_type		8987659	0					
ANR	8987731	ArgumentList	nocie		8987659	1					
ANR	8987732	Argument	nocie		8987659	0					
ANR	8987733	Identifier	nocie		8987659	0					
ANR	8987734	Argument	t_boolean		8987659	1					
ANR	8987735	Identifier	t_boolean		8987659	0					
ANR	8987736	ExpressionStatement	return_error ( gs_error_typecheck )	2661:12:84974:85006	8987659	1	True				
ANR	8987737	CallExpression	return_error ( gs_error_typecheck )		8987659	0					
ANR	8987738	Callee	return_error		8987659	0					
ANR	8987739	Identifier	return_error		8987659	0					
ANR	8987740	ArgumentList	gs_error_typecheck		8987659	1					
ANR	8987741	Argument	gs_error_typecheck		8987659	0					
ANR	8987742	Identifier	gs_error_typecheck		8987659	0					
ANR	8987743	IfStatement	if ( nocie -> value . boolval )		8987659	1					
ANR	8987744	Condition	nocie -> value . boolval	2662:12:85020:85039	8987659	0	True				
ANR	8987745	MemberAccess	nocie -> value . boolval		8987659	0					
ANR	8987746	PtrMemberAccess	nocie -> value		8987659	0					
ANR	8987747	Identifier	nocie		8987659	0					
ANR	8987748	Identifier	value		8987659	1					
ANR	8987749	Identifier	boolval		8987659	1					
ANR	8987750	ReturnStatement	"return setrgbspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2663:12:85054:85100	8987659	1	True				
ANR	8987751	CallExpression	"setrgbspace ( i_ctx_p , r , stage , cont , 1 )"		8987659	0					
ANR	8987752	Callee	setrgbspace		8987659	0					
ANR	8987753	Identifier	setrgbspace		8987659	0					
ANR	8987754	ArgumentList	i_ctx_p		8987659	1					
ANR	8987755	Argument	i_ctx_p		8987659	0					
ANR	8987756	Identifier	i_ctx_p		8987659	0					
ANR	8987757	Argument	r		8987659	1					
ANR	8987758	Identifier	r		8987659	0					
ANR	8987759	Argument	stage		8987659	2					
ANR	8987760	Identifier	stage		8987659	0					
ANR	8987761	Argument	cont		8987659	3					
ANR	8987762	Identifier	cont		8987659	0					
ANR	8987763	Argument	1		8987659	4					
ANR	8987764	PrimaryExpression	1		8987659	0					
ANR	8987765	ExpressionStatement	* cont = 0	2666:4:85113:85122	8987659	8	True				
ANR	8987766	AssignmentExpression	* cont = 0		8987659	0		=			
ANR	8987767	UnaryOperationExpression	* cont		8987659	0					
ANR	8987768	UnaryOperator	*		8987659	0					
ANR	8987769	Identifier	cont		8987659	1					
ANR	8987770	PrimaryExpression	0		8987659	1					
ANR	8987771	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2667:4:85128:85169	8987659	9	True				
ANR	8987772	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		8987659	0		=			
ANR	8987773	Identifier	code		8987659	0					
ANR	8987774	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		8987659	1					
ANR	8987775	Callee	array_get		8987659	0					
ANR	8987776	Identifier	array_get		8987659	0					
ANR	8987777	ArgumentList	imemory		8987659	1					
ANR	8987778	Argument	imemory		8987659	0					
ANR	8987779	Identifier	imemory		8987659	0					
ANR	8987780	Argument	r		8987659	1					
ANR	8987781	Identifier	r		8987659	0					
ANR	8987782	Argument	1		8987659	2					
ANR	8987783	PrimaryExpression	1		8987659	0					
ANR	8987784	Argument	& CIEDict		8987659	3					
ANR	8987785	UnaryOperationExpression	& CIEDict		8987659	0					
ANR	8987786	UnaryOperator	&		8987659	0					
ANR	8987787	Identifier	CIEDict		8987659	1					
ANR	8987788	IfStatement	if ( code < 0 )		8987659	10					
ANR	8987789	Condition	code < 0	2668:8:85179:85186	8987659	0	True				
ANR	8987790	RelationalExpression	code < 0		8987659	0		<			
ANR	8987791	Identifier	code		8987659	0					
ANR	8987792	PrimaryExpression	0		8987659	1					
ANR	8987793	ReturnStatement	return code ;	2669:8:85197:85208	8987659	1	True				
ANR	8987794	Identifier	code		8987659	0					
ANR	8987795	IfStatement	if ( ( * stage ) > 0 )		8987659	11					
ANR	8987796	Condition	( * stage ) > 0	2670:8:85218:85229	8987659	0	True				
ANR	8987797	RelationalExpression	( * stage ) > 0		8987659	0		>			
ANR	8987798	UnaryOperationExpression	* stage		8987659	0					
ANR	8987799	UnaryOperator	*		8987659	0					
ANR	8987800	Identifier	stage		8987659	1					
ANR	8987801	PrimaryExpression	0		8987659	1					
ANR	8987802	CompoundStatement		25:8:615:620	8987659	1					
ANR	8987803	IdentifierDeclStatement	gs_client_color cc ;	2671:8:85242:85260	8987659	0	True				
ANR	8987804	IdentifierDecl	cc		8987659	0					
ANR	8987805	IdentifierDeclType	gs_client_color		8987659	0					
ANR	8987806	Identifier	cc		8987659	1					
ANR	8987807	IdentifierDeclStatement	int i ;	2672:8:85270:85275	8987659	1	True				
ANR	8987808	IdentifierDecl	i		8987659	0					
ANR	8987809	IdentifierDeclType	int		8987659	0					
ANR	8987810	Identifier	i		8987659	1					
ANR	8987811	ExpressionStatement	cc . pattern = 0x00	2674:8:85286:85303	8987659	2	True				
ANR	8987812	AssignmentExpression	cc . pattern = 0x00		8987659	0		=			
ANR	8987813	MemberAccess	cc . pattern		8987659	0					
ANR	8987814	Identifier	cc		8987659	0					
ANR	8987815	Identifier	pattern		8987659	1					
ANR	8987816	PrimaryExpression	0x00		8987659	1					
ANR	8987817	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8987659	3					
ANR	8987818	ForInit	i = 0 ;	2675:13:85318:85321	8987659	0	True				
ANR	8987819	AssignmentExpression	i = 0		8987659	0		=			
ANR	8987820	Identifier	i		8987659	0					
ANR	8987821	PrimaryExpression	0		8987659	1					
ANR	8987822	Condition	i < 3	2675:17:85322:85324	8987659	1	True				
ANR	8987823	RelationalExpression	i < 3		8987659	0		<			
ANR	8987824	Identifier	i		8987659	0					
ANR	8987825	PrimaryExpression	3		8987659	1					
ANR	8987826	PostIncDecOperationExpression	i ++	2675:21:85326:85328	8987659	2	True				
ANR	8987827	Identifier	i		8987659	0					
ANR	8987828	IncDec	++		8987659	1					
ANR	8987829	ExpressionStatement	cc . paint . values [ i ] = 0	2676:12:85343:85365	8987659	3	True				
ANR	8987830	AssignmentExpression	cc . paint . values [ i ] = 0		8987659	0		=			
ANR	8987831	ArrayIndexing	cc . paint . values [ i ]		8987659	0					
ANR	8987832	MemberAccess	cc . paint . values		8987659	0					
ANR	8987833	MemberAccess	cc . paint		8987659	0					
ANR	8987834	Identifier	cc		8987659	0					
ANR	8987835	Identifier	paint		8987659	1					
ANR	8987836	Identifier	values		8987659	1					
ANR	8987837	Identifier	i		8987659	1					
ANR	8987838	PrimaryExpression	0		8987659	1					
ANR	8987839	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2677:8:85375:85403	8987659	4	True				
ANR	8987840	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8987659	0		=			
ANR	8987841	Identifier	code		8987659	0					
ANR	8987842	CallExpression	"gs_setcolor ( igs , & cc )"		8987659	1					
ANR	8987843	Callee	gs_setcolor		8987659	0					
ANR	8987844	Identifier	gs_setcolor		8987659	0					
ANR	8987845	ArgumentList	igs		8987659	1					
ANR	8987846	Argument	igs		8987659	0					
ANR	8987847	Identifier	igs		8987659	0					
ANR	8987848	Argument	& cc		8987659	1					
ANR	8987849	UnaryOperationExpression	& cc		8987659	0					
ANR	8987850	UnaryOperator	&		8987659	0					
ANR	8987851	Identifier	cc		8987659	1					
ANR	8987852	ExpressionStatement	* stage = 0	2678:8:85413:85423	8987659	5	True				
ANR	8987853	AssignmentExpression	* stage = 0		8987659	0		=			
ANR	8987854	UnaryOperationExpression	* stage		8987659	0					
ANR	8987855	UnaryOperator	*		8987659	0					
ANR	8987856	Identifier	stage		8987659	1					
ANR	8987857	PrimaryExpression	0		8987659	1					
ANR	8987858	ReturnStatement	return code ;	2679:8:85433:85444	8987659	6	True				
ANR	8987859	Identifier	code		8987659	0					
ANR	8987860	ExpressionStatement	gs_md5_init ( & md5 )	2681:4:85456:85473	8987659	12	True				
ANR	8987861	CallExpression	gs_md5_init ( & md5 )		8987659	0					
ANR	8987862	Callee	gs_md5_init		8987659	0					
ANR	8987863	Identifier	gs_md5_init		8987659	0					
ANR	8987864	ArgumentList	& md5		8987659	1					
ANR	8987865	Argument	& md5		8987659	0					
ANR	8987866	UnaryOperationExpression	& md5		8987659	0					
ANR	8987867	UnaryOperator	&		8987659	0					
ANR	8987868	Identifier	md5		8987659	1					
ANR	8987869	ExpressionStatement	dictkey = 0	2686:4:85664:85675	8987659	13	True				
ANR	8987870	AssignmentExpression	dictkey = 0		8987659	0		=			
ANR	8987871	Identifier	dictkey		8987659	0					
ANR	8987872	PrimaryExpression	0		8987659	1					
ANR	8987873	IfStatement	"if ( hashciedefspace ( i_ctx_p , r , & md5 ) )"		8987659	14					
ANR	8987874	Condition	"hashciedefspace ( i_ctx_p , r , & md5 )"	2687:8:85685:85717	8987659	0	True				
ANR	8987875	CallExpression	"hashciedefspace ( i_ctx_p , r , & md5 )"		8987659	0					
ANR	8987876	Callee	hashciedefspace		8987659	0					
ANR	8987877	Identifier	hashciedefspace		8987659	0					
ANR	8987878	ArgumentList	i_ctx_p		8987659	1					
ANR	8987879	Argument	i_ctx_p		8987659	0					
ANR	8987880	Identifier	i_ctx_p		8987659	0					
ANR	8987881	Argument	r		8987659	1					
ANR	8987882	Identifier	r		8987659	0					
ANR	8987883	Argument	& md5		8987659	2					
ANR	8987884	UnaryOperationExpression	& md5		8987659	0					
ANR	8987885	UnaryOperator	&		8987659	0					
ANR	8987886	Identifier	md5		8987659	1					
ANR	8987887	CompoundStatement		40:43:1065:1065	8987659	1					
ANR	8987888	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2694:8:86074:86098	8987659	0	True				
ANR	8987889	CallExpression	"gs_md5_finish ( & md5 , key )"		8987659	0					
ANR	8987890	Callee	gs_md5_finish		8987659	0					
ANR	8987891	Identifier	gs_md5_finish		8987659	0					
ANR	8987892	ArgumentList	& md5		8987659	1					
ANR	8987893	Argument	& md5		8987659	0					
ANR	8987894	UnaryOperationExpression	& md5		8987659	0					
ANR	8987895	UnaryOperator	&		8987659	0					
ANR	8987896	Identifier	md5		8987659	1					
ANR	8987897	Argument	key		8987659	1					
ANR	8987898	Identifier	key		8987659	0					
ANR	8987899	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2695:8:86108:86161	8987659	1	True				
ANR	8987900	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659	0		=			
ANR	8987901	Identifier	dictkey		8987659	0					
ANR	8987902	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659	1					
ANR	8987903	UnaryOperator	*		8987659	0					
ANR	8987904	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659	1					
ANR	8987905	CastTarget	ulong *		8987659	0					
ANR	8987906	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659	1					
ANR	8987907	UnaryOperator	&		8987659	0					
ANR	8987908	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659	1					
ANR	8987909	Identifier	key		8987659	0					
ANR	8987910	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		8987659	1		-			
ANR	8987911	SizeofExpression	sizeof ( key )		8987659	0					
ANR	8987912	Sizeof	sizeof		8987659	0					
ANR	8987913	SizeofOperand	key		8987659	1					
ANR	8987914	SizeofExpression	sizeof ( ulong )		8987659	1					
ANR	8987915	Sizeof	sizeof		8987659	0					
ANR	8987916	SizeofOperand	ulong		8987659	1					
ANR	8987917	ElseStatement	else		8987659	0					
ANR	8987918	CompoundStatement		49:11:1519:1519	8987659	0					
ANR	8987919	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2697:8:86184:86208	8987659	0	True				
ANR	8987920	CallExpression	"gs_md5_finish ( & md5 , key )"		8987659	0					
ANR	8987921	Callee	gs_md5_finish		8987659	0					
ANR	8987922	Identifier	gs_md5_finish		8987659	0					
ANR	8987923	ArgumentList	& md5		8987659	1					
ANR	8987924	Argument	& md5		8987659	0					
ANR	8987925	UnaryOperationExpression	& md5		8987659	0					
ANR	8987926	UnaryOperator	&		8987659	0					
ANR	8987927	Identifier	md5		8987659	1					
ANR	8987928	Argument	key		8987659	1					
ANR	8987929	Identifier	key		8987659	0					
ANR	8987930	ExpressionStatement	"code = ciedefspace ( i_ctx_p , & CIEDict , dictkey )"	2699:4:86220:86266	8987659	15	True				
ANR	8987931	AssignmentExpression	"code = ciedefspace ( i_ctx_p , & CIEDict , dictkey )"		8987659	0		=			
ANR	8987932	Identifier	code		8987659	0					
ANR	8987933	CallExpression	"ciedefspace ( i_ctx_p , & CIEDict , dictkey )"		8987659	1					
ANR	8987934	Callee	ciedefspace		8987659	0					
ANR	8987935	Identifier	ciedefspace		8987659	0					
ANR	8987936	ArgumentList	i_ctx_p		8987659	1					
ANR	8987937	Argument	i_ctx_p		8987659	0					
ANR	8987938	Identifier	i_ctx_p		8987659	0					
ANR	8987939	Argument	& CIEDict		8987659	1					
ANR	8987940	UnaryOperationExpression	& CIEDict		8987659	0					
ANR	8987941	UnaryOperator	&		8987659	0					
ANR	8987942	Identifier	CIEDict		8987659	1					
ANR	8987943	Argument	dictkey		8987659	2					
ANR	8987944	Identifier	dictkey		8987659	0					
ANR	8987945	ExpressionStatement	* cont = 1	2700:4:86272:86281	8987659	16	True				
ANR	8987946	AssignmentExpression	* cont = 1		8987659	0		=			
ANR	8987947	UnaryOperationExpression	* cont		8987659	0					
ANR	8987948	UnaryOperator	*		8987659	0					
ANR	8987949	Identifier	cont		8987659	1					
ANR	8987950	PrimaryExpression	1		8987659	1					
ANR	8987951	ExpressionStatement	( * stage ) ++	2701:4:86287:86297	8987659	17	True				
ANR	8987952	PostIncDecOperationExpression	( * stage ) ++		8987659	0					
ANR	8987953	UnaryOperationExpression	* stage		8987659	0					
ANR	8987954	UnaryOperator	*		8987659	0					
ANR	8987955	Identifier	stage		8987659	1					
ANR	8987956	IncDec	++		8987659	1					
ANR	8987957	ReturnStatement	return code ;	2702:4:86303:86314	8987659	18	True				
ANR	8987958	Identifier	code		8987659	0					
ANR	8987959	ReturnType	static int		8987659	1					
ANR	8987960	Identifier	setciedefspace		8987659	2					
ANR	8987961	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8987659	3					
ANR	8987962	Parameter	i_ctx_t * i_ctx_p	2647:26:84590:84606	8987659	0	True				
ANR	8987963	ParameterType	i_ctx_t *		8987659	0					
ANR	8987964	Identifier	i_ctx_p		8987659	1					
ANR	8987965	Parameter	ref * r	2647:45:84609:84614	8987659	1	True				
ANR	8987966	ParameterType	ref *		8987659	0					
ANR	8987967	Identifier	r		8987659	1					
ANR	8987968	Parameter	int * stage	2647:53:84617:84626	8987659	2	True				
ANR	8987969	ParameterType	int *		8987659	0					
ANR	8987970	Identifier	stage		8987659	1					
ANR	8987971	Parameter	int * cont	2647:65:84629:84637	8987659	3	True				
ANR	8987972	ParameterType	int *		8987659	0					
ANR	8987973	Identifier	cont		8987659	1					
ANR	8987974	Parameter	int CIESubst	2647:76:84640:84651	8987659	4	True				
ANR	8987975	ParameterType	int		8987659	0					
ANR	8987976	Identifier	CIESubst		8987659	1					
ANR	8987977	CFGEntryNode	ENTRY		8987659		True				
ANR	8987978	CFGExitNode	EXIT		8987659		True				
ANR	8987979	Symbol	cc . pattern		8987659						
ANR	8987980	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8987659						
ANR	8987981	Symbol	code		8987659						
ANR	8987982	Symbol	i_ctx_p -> language_level		8987659						
ANR	8987983	Symbol	* cc		8987659						
ANR	8987984	Symbol	nocie -> value		8987659						
ANR	8987985	Symbol	gs_error_undefined		8987659						
ANR	8987986	Symbol	gs_setcolor		8987659						
ANR	8987987	Symbol	* key		8987659						
ANR	8987988	Symbol	* nocie		8987659						
ANR	8987989	Symbol	& cc		8987659						
ANR	8987990	Symbol	nocie -> value . boolval		8987659						
ANR	8987991	Symbol	r_has_type		8987659						
ANR	8987992	Symbol	gs_error_typecheck		8987659						
ANR	8987993	Symbol	ciedefspace		8987659						
ANR	8987994	Symbol	igs		8987659						
ANR	8987995	Symbol	* cc . paint . values		8987659						
ANR	8987996	Symbol	* i_ctx_p		8987659						
ANR	8987997	Symbol	setrgbspace		8987659						
ANR	8987998	Symbol	imemory		8987659						
ANR	8987999	Symbol	cont		8987659						
ANR	8988000	Symbol	nocie		8987659						
ANR	8988001	Symbol	CIESubst		8987659						
ANR	8988002	Symbol	key		8987659						
ANR	8988003	Symbol	cc		8987659						
ANR	8988004	Symbol	* stage		8987659						
ANR	8988005	Symbol	& md5		8987659						
ANR	8988006	Symbol	dict_find_string		8987659						
ANR	8988007	Symbol	array_get		8987659						
ANR	8988008	Symbol	i		8987659						
ANR	8988009	Symbol	dictkey		8987659						
ANR	8988010	Symbol	& nocie		8987659						
ANR	8988011	Symbol	t_boolean		8987659						
ANR	8988012	Symbol	r		8987659						
ANR	8988013	Symbol	* cc . paint		8987659						
ANR	8988014	Symbol	* i		8987659						
ANR	8988015	Symbol	stage		8987659						
ANR	8988016	Symbol	hashciedefspace		8987659						
ANR	8988017	Symbol	CIEDict		8987659						
ANR	8988018	Symbol	* cont		8987659						
ANR	8988019	Symbol	& CIEDict		8987659						
ANR	8988020	Symbol	i_ctx_p		8987659						
ANR	8988021	Symbol	cc . paint		8987659						
ANR	8988022	Symbol	cc . paint . values		8987659						
ANR	8988023	Symbol	systemdict		8987659						
ANR	8988024	Symbol	md5		8987659						
ANR	8988025	Function	validateciedefspace	2704:0:86318:89681							
ANR	8988026	FunctionDef	"validateciedefspace (i_ctx_t * i_ctx_p , ref * * r)"		8988025	0					
ANR	8988027	CompoundStatement		2705:0:86377:89681	8988025	0					
ANR	8988028	IdentifierDeclStatement	"int code = 0 , i ;"	2706:4:86383:86398	8988025	0	True				
ANR	8988029	IdentifierDecl	code = 0		8988025	0					
ANR	8988030	IdentifierDeclType	int		8988025	0					
ANR	8988031	Identifier	code		8988025	1					
ANR	8988032	AssignmentExpression	code = 0		8988025	2		=			
ANR	8988033	Identifier	code		8988025	0					
ANR	8988034	PrimaryExpression	0		8988025	1					
ANR	8988035	IdentifierDecl	i		8988025	1					
ANR	8988036	IdentifierDeclType	int		8988025	0					
ANR	8988037	Identifier	i		8988025	1					
ANR	8988038	IdentifierDeclStatement	float value [ 6 ] ;	2707:4:86404:86418	8988025	1	True				
ANR	8988039	IdentifierDecl	value [ 6 ]		8988025	0					
ANR	8988040	IdentifierDeclType	float [ 6 ]		8988025	0					
ANR	8988041	Identifier	value		8988025	1					
ANR	8988042	PrimaryExpression	6		8988025	2					
ANR	8988043	IdentifierDeclStatement	"ref CIEdict , * pref , * CIEspace = * r , tempref , valref ;"	2708:4:86424:86479	8988025	2	True				
ANR	8988044	IdentifierDecl	CIEdict		8988025	0					
ANR	8988045	IdentifierDeclType	ref		8988025	0					
ANR	8988046	Identifier	CIEdict		8988025	1					
ANR	8988047	IdentifierDecl	* pref		8988025	1					
ANR	8988048	IdentifierDeclType	ref *		8988025	0					
ANR	8988049	Identifier	pref		8988025	1					
ANR	8988050	IdentifierDecl	* CIEspace = * r		8988025	2					
ANR	8988051	IdentifierDeclType	ref *		8988025	0					
ANR	8988052	Identifier	CIEspace		8988025	1					
ANR	8988053	AssignmentExpression	* CIEspace = * r		8988025	2		=			
ANR	8988054	Identifier	CIEspace		8988025	0					
ANR	8988055	UnaryOperationExpression	* r		8988025	1					
ANR	8988056	UnaryOperator	*		8988025	0					
ANR	8988057	Identifier	r		8988025	1					
ANR	8988058	IdentifierDecl	tempref		8988025	3					
ANR	8988059	IdentifierDeclType	ref		8988025	0					
ANR	8988060	Identifier	tempref		8988025	1					
ANR	8988061	IdentifierDecl	valref		8988025	4					
ANR	8988062	IdentifierDeclType	ref		8988025	0					
ANR	8988063	Identifier	valref		8988025	1					
ANR	8988064	IfStatement	if ( ! r_is_array ( CIEspace ) )		8988025	3					
ANR	8988065	Condition	! r_is_array ( CIEspace )	2710:8:86490:86510	8988025	0	True				
ANR	8988066	UnaryOperationExpression	! r_is_array ( CIEspace )		8988025	0					
ANR	8988067	UnaryOperator	!		8988025	0					
ANR	8988068	CallExpression	r_is_array ( CIEspace )		8988025	1					
ANR	8988069	Callee	r_is_array		8988025	0					
ANR	8988070	Identifier	r_is_array		8988025	0					
ANR	8988071	ArgumentList	CIEspace		8988025	1					
ANR	8988072	Argument	CIEspace		8988025	0					
ANR	8988073	Identifier	CIEspace		8988025	0					
ANR	8988074	ExpressionStatement	return_error ( gs_error_typecheck )	2711:8:86521:86553	8988025	1	True				
ANR	8988075	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988076	Callee	return_error		8988025	0					
ANR	8988077	Identifier	return_error		8988025	0					
ANR	8988078	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988079	Argument	gs_error_typecheck		8988025	0					
ANR	8988080	Identifier	gs_error_typecheck		8988025	0					
ANR	8988081	IfStatement	if ( r_size ( CIEspace ) != 2 )		8988025	4					
ANR	8988082	Condition	r_size ( CIEspace ) != 2	2713:8:86624:86644	8988025	0	True				
ANR	8988083	EqualityExpression	r_size ( CIEspace ) != 2		8988025	0		!=			
ANR	8988084	CallExpression	r_size ( CIEspace )		8988025	0					
ANR	8988085	Callee	r_size		8988025	0					
ANR	8988086	Identifier	r_size		8988025	0					
ANR	8988087	ArgumentList	CIEspace		8988025	1					
ANR	8988088	Argument	CIEspace		8988025	0					
ANR	8988089	Identifier	CIEspace		8988025	0					
ANR	8988090	PrimaryExpression	2		8988025	1					
ANR	8988091	ExpressionStatement	return_error ( gs_error_rangecheck )	2714:8:86655:86688	8988025	1	True				
ANR	8988092	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988093	Callee	return_error		8988025	0					
ANR	8988094	Identifier	return_error		8988025	0					
ANR	8988095	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988096	Argument	gs_error_rangecheck		8988025	0					
ANR	8988097	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988098	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2716:4:86695:86743	8988025	5	True				
ANR	8988099	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		8988025	0		=			
ANR	8988100	Identifier	code		8988025	0					
ANR	8988101	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		8988025	1					
ANR	8988102	Callee	array_get		8988025	0					
ANR	8988103	Identifier	array_get		8988025	0					
ANR	8988104	ArgumentList	imemory		8988025	1					
ANR	8988105	Argument	imemory		8988025	0					
ANR	8988106	Identifier	imemory		8988025	0					
ANR	8988107	Argument	CIEspace		8988025	1					
ANR	8988108	Identifier	CIEspace		8988025	0					
ANR	8988109	Argument	1		8988025	2					
ANR	8988110	PrimaryExpression	1		8988025	0					
ANR	8988111	Argument	& CIEdict		8988025	3					
ANR	8988112	UnaryOperationExpression	& CIEdict		8988025	0					
ANR	8988113	UnaryOperator	&		8988025	0					
ANR	8988114	Identifier	CIEdict		8988025	1					
ANR	8988115	IfStatement	if ( code < 0 )		8988025	6					
ANR	8988116	Condition	code < 0	2717:8:86753:86760	8988025	0	True				
ANR	8988117	RelationalExpression	code < 0		8988025	0		<			
ANR	8988118	Identifier	code		8988025	0					
ANR	8988119	PrimaryExpression	0		8988025	1					
ANR	8988120	ReturnStatement	return code ;	2718:8:86771:86782	8988025	1	True				
ANR	8988121	Identifier	code		8988025	0					
ANR	8988122	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2719:4:86788:86826	8988025	7	True				
ANR	8988123	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		8988025	0					
ANR	8988124	Callee	check_read_type		8988025	0					
ANR	8988125	Identifier	check_read_type		8988025	0					
ANR	8988126	ArgumentList	CIEdict		8988025	1					
ANR	8988127	Argument	CIEdict		8988025	0					
ANR	8988128	Identifier	CIEdict		8988025	0					
ANR	8988129	Argument	t_dictionary		8988025	1					
ANR	8988130	Identifier	t_dictionary		8988025	0					
ANR	8988131	ExpressionStatement	"code = validatecieabcspace ( i_ctx_p , r )"	2721:4:86833:86871	8988025	8	True				
ANR	8988132	AssignmentExpression	"code = validatecieabcspace ( i_ctx_p , r )"		8988025	0		=			
ANR	8988133	Identifier	code		8988025	0					
ANR	8988134	CallExpression	"validatecieabcspace ( i_ctx_p , r )"		8988025	1					
ANR	8988135	Callee	validatecieabcspace		8988025	0					
ANR	8988136	Identifier	validatecieabcspace		8988025	0					
ANR	8988137	ArgumentList	i_ctx_p		8988025	1					
ANR	8988138	Argument	i_ctx_p		8988025	0					
ANR	8988139	Identifier	i_ctx_p		8988025	0					
ANR	8988140	Argument	r		8988025	1					
ANR	8988141	Identifier	r		8988025	0					
ANR	8988142	IfStatement	if ( code != 0 )		8988025	9					
ANR	8988143	Condition	code != 0	2722:8:86881:86889	8988025	0	True				
ANR	8988144	EqualityExpression	code != 0		8988025	0		!=			
ANR	8988145	Identifier	code		8988025	0					
ANR	8988146	PrimaryExpression	0		8988025	1					
ANR	8988147	ReturnStatement	return code ;	2723:8:86900:86911	8988025	1	True				
ANR	8988148	Identifier	code		8988025	0					
ANR	8988149	ExpressionStatement	pref = & tempref	2725:4:86918:86933	8988025	10	True				
ANR	8988150	AssignmentExpression	pref = & tempref		8988025	0		=			
ANR	8988151	Identifier	pref		8988025	0					
ANR	8988152	UnaryOperationExpression	& tempref		8988025	1					
ANR	8988153	UnaryOperator	&		8988025	0					
ANR	8988154	Identifier	tempref		8988025	1					
ANR	8988155	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"	2726:4:86939:86988	8988025	11	True				
ANR	8988156	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"		8988025	0		=			
ANR	8988157	Identifier	code		8988025	0					
ANR	8988158	CallExpression	"dict_find_string ( & CIEdict , ""Table"" , & pref )"		8988025	1					
ANR	8988159	Callee	dict_find_string		8988025	0					
ANR	8988160	Identifier	dict_find_string		8988025	0					
ANR	8988161	ArgumentList	& CIEdict		8988025	1					
ANR	8988162	Argument	& CIEdict		8988025	0					
ANR	8988163	UnaryOperationExpression	& CIEdict		8988025	0					
ANR	8988164	UnaryOperator	&		8988025	0					
ANR	8988165	Identifier	CIEdict		8988025	1					
ANR	8988166	Argument	"""Table"""		8988025	1					
ANR	8988167	PrimaryExpression	"""Table"""		8988025	0					
ANR	8988168	Argument	& pref		8988025	2					
ANR	8988169	UnaryOperationExpression	& pref		8988025	0					
ANR	8988170	UnaryOperator	&		8988025	0					
ANR	8988171	Identifier	pref		8988025	1					
ANR	8988172	IfStatement	if ( code > 0 )		8988025	12					
ANR	8988173	Condition	code > 0	2727:8:86998:87005	8988025	0	True				
ANR	8988174	RelationalExpression	code > 0		8988025	0		>			
ANR	8988175	Identifier	code		8988025	0					
ANR	8988176	PrimaryExpression	0		8988025	1					
ANR	8988177	CompoundStatement		23:18:630:630	8988025	1					
ANR	8988178	IfStatement	if ( ! r_is_array ( pref ) )		8988025	0					
ANR	8988179	Condition	! r_is_array ( pref )	2728:12:87022:87038	8988025	0	True				
ANR	8988180	UnaryOperationExpression	! r_is_array ( pref )		8988025	0					
ANR	8988181	UnaryOperator	!		8988025	0					
ANR	8988182	CallExpression	r_is_array ( pref )		8988025	1					
ANR	8988183	Callee	r_is_array		8988025	0					
ANR	8988184	Identifier	r_is_array		8988025	0					
ANR	8988185	ArgumentList	pref		8988025	1					
ANR	8988186	Argument	pref		8988025	0					
ANR	8988187	Identifier	pref		8988025	0					
ANR	8988188	ExpressionStatement	return_error ( gs_error_typecheck )	2729:12:87053:87085	8988025	1	True				
ANR	8988189	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988190	Callee	return_error		8988025	0					
ANR	8988191	Identifier	return_error		8988025	0					
ANR	8988192	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988193	Argument	gs_error_typecheck		8988025	0					
ANR	8988194	Identifier	gs_error_typecheck		8988025	0					
ANR	8988195	IfStatement	if ( r_size ( pref ) != 4 )		8988025	1					
ANR	8988196	Condition	r_size ( pref ) != 4	2730:12:87099:87115	8988025	0	True				
ANR	8988197	EqualityExpression	r_size ( pref ) != 4		8988025	0		!=			
ANR	8988198	CallExpression	r_size ( pref )		8988025	0					
ANR	8988199	Callee	r_size		8988025	0					
ANR	8988200	Identifier	r_size		8988025	0					
ANR	8988201	ArgumentList	pref		8988025	1					
ANR	8988202	Argument	pref		8988025	0					
ANR	8988203	Identifier	pref		8988025	0					
ANR	8988204	PrimaryExpression	4		8988025	1					
ANR	8988205	ExpressionStatement	return_error ( gs_error_rangecheck )	2731:12:87130:87163	8988025	1	True				
ANR	8988206	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988207	Callee	return_error		8988025	0					
ANR	8988208	Identifier	return_error		8988025	0					
ANR	8988209	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988210	Argument	gs_error_rangecheck		8988025	0					
ANR	8988211	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988212	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 3 , value )"	2732:8:87173:87224	8988025	2	True				
ANR	8988213	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 3 , value )"		8988025	0		=			
ANR	8988214	Identifier	code		8988025	0					
ANR	8988215	CallExpression	"get_cie_param_array ( imemory , pref , 3 , value )"		8988025	1					
ANR	8988216	Callee	get_cie_param_array		8988025	0					
ANR	8988217	Identifier	get_cie_param_array		8988025	0					
ANR	8988218	ArgumentList	imemory		8988025	1					
ANR	8988219	Argument	imemory		8988025	0					
ANR	8988220	Identifier	imemory		8988025	0					
ANR	8988221	Argument	pref		8988025	1					
ANR	8988222	Identifier	pref		8988025	0					
ANR	8988223	Argument	3		8988025	2					
ANR	8988224	PrimaryExpression	3		8988025	0					
ANR	8988225	Argument	value		8988025	3					
ANR	8988226	Identifier	value		8988025	0					
ANR	8988227	IfStatement	if ( code < 0 )		8988025	3					
ANR	8988228	Condition	code < 0	2733:12:87238:87245	8988025	0	True				
ANR	8988229	RelationalExpression	code < 0		8988025	0		<			
ANR	8988230	Identifier	code		8988025	0					
ANR	8988231	PrimaryExpression	0		8988025	1					
ANR	8988232	ReturnStatement	return code ;	2734:12:87260:87271	8988025	1	True				
ANR	8988233	Identifier	code		8988025	0					
ANR	8988234	IfStatement	if ( value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 )		8988025	4					
ANR	8988235	Condition	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1	2735:12:87285:87331	8988025	0	True				
ANR	8988236	OrExpression	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1		8988025	0		||			
ANR	8988237	RelationalExpression	value [ 0 ] <= 1		8988025	0		<=			
ANR	8988238	ArrayIndexing	value [ 0 ]		8988025	0					
ANR	8988239	Identifier	value		8988025	0					
ANR	8988240	PrimaryExpression	0		8988025	1					
ANR	8988241	PrimaryExpression	1		8988025	1					
ANR	8988242	OrExpression	value [ 1 ] <= 1 || value [ 2 ] <= 1		8988025	1		||			
ANR	8988243	RelationalExpression	value [ 1 ] <= 1		8988025	0		<=			
ANR	8988244	ArrayIndexing	value [ 1 ]		8988025	0					
ANR	8988245	Identifier	value		8988025	0					
ANR	8988246	PrimaryExpression	1		8988025	1					
ANR	8988247	PrimaryExpression	1		8988025	1					
ANR	8988248	RelationalExpression	value [ 2 ] <= 1		8988025	1		<=			
ANR	8988249	ArrayIndexing	value [ 2 ]		8988025	0					
ANR	8988250	Identifier	value		8988025	0					
ANR	8988251	PrimaryExpression	2		8988025	1					
ANR	8988252	PrimaryExpression	1		8988025	1					
ANR	8988253	ExpressionStatement	return_error ( gs_error_rangecheck )	2736:12:87346:87379	8988025	1	True				
ANR	8988254	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988255	Callee	return_error		8988025	0					
ANR	8988256	Identifier	return_error		8988025	0					
ANR	8988257	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988258	Argument	gs_error_rangecheck		8988025	0					
ANR	8988259	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988260	ExpressionStatement	"code = array_get ( imemory , pref , 3 , & valref )"	2738:8:87390:87433	8988025	5	True				
ANR	8988261	AssignmentExpression	"code = array_get ( imemory , pref , 3 , & valref )"		8988025	0		=			
ANR	8988262	Identifier	code		8988025	0					
ANR	8988263	CallExpression	"array_get ( imemory , pref , 3 , & valref )"		8988025	1					
ANR	8988264	Callee	array_get		8988025	0					
ANR	8988265	Identifier	array_get		8988025	0					
ANR	8988266	ArgumentList	imemory		8988025	1					
ANR	8988267	Argument	imemory		8988025	0					
ANR	8988268	Identifier	imemory		8988025	0					
ANR	8988269	Argument	pref		8988025	1					
ANR	8988270	Identifier	pref		8988025	0					
ANR	8988271	Argument	3		8988025	2					
ANR	8988272	PrimaryExpression	3		8988025	0					
ANR	8988273	Argument	& valref		8988025	3					
ANR	8988274	UnaryOperationExpression	& valref		8988025	0					
ANR	8988275	UnaryOperator	&		8988025	0					
ANR	8988276	Identifier	valref		8988025	1					
ANR	8988277	IfStatement	if ( code < 0 )		8988025	6					
ANR	8988278	Condition	code < 0	2739:12:87447:87454	8988025	0	True				
ANR	8988279	RelationalExpression	code < 0		8988025	0		<			
ANR	8988280	Identifier	code		8988025	0					
ANR	8988281	PrimaryExpression	0		8988025	1					
ANR	8988282	ReturnStatement	return code ;	2740:12:87469:87480	8988025	1	True				
ANR	8988283	Identifier	code		8988025	0					
ANR	8988284	IfStatement	if ( ! r_is_array ( & valref ) )		8988025	7					
ANR	8988285	Condition	! r_is_array ( & valref )	2741:12:87494:87513	8988025	0	True				
ANR	8988286	UnaryOperationExpression	! r_is_array ( & valref )		8988025	0					
ANR	8988287	UnaryOperator	!		8988025	0					
ANR	8988288	CallExpression	r_is_array ( & valref )		8988025	1					
ANR	8988289	Callee	r_is_array		8988025	0					
ANR	8988290	Identifier	r_is_array		8988025	0					
ANR	8988291	ArgumentList	& valref		8988025	1					
ANR	8988292	Argument	& valref		8988025	0					
ANR	8988293	UnaryOperationExpression	& valref		8988025	0					
ANR	8988294	UnaryOperator	&		8988025	0					
ANR	8988295	Identifier	valref		8988025	1					
ANR	8988296	ExpressionStatement	return_error ( gs_error_typecheck )	2742:12:87528:87560	8988025	1	True				
ANR	8988297	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988298	Callee	return_error		8988025	0					
ANR	8988299	Identifier	return_error		8988025	0					
ANR	8988300	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988301	Argument	gs_error_typecheck		8988025	0					
ANR	8988302	Identifier	gs_error_typecheck		8988025	0					
ANR	8988303	IfStatement	if ( r_size ( & valref ) != value [ 0 ] )		8988025	8					
ANR	8988304	Condition	r_size ( & valref ) != value [ 0 ]	2743:12:87574:87600	8988025	0	True				
ANR	8988305	EqualityExpression	r_size ( & valref ) != value [ 0 ]		8988025	0		!=			
ANR	8988306	CallExpression	r_size ( & valref )		8988025	0					
ANR	8988307	Callee	r_size		8988025	0					
ANR	8988308	Identifier	r_size		8988025	0					
ANR	8988309	ArgumentList	& valref		8988025	1					
ANR	8988310	Argument	& valref		8988025	0					
ANR	8988311	UnaryOperationExpression	& valref		8988025	0					
ANR	8988312	UnaryOperator	&		8988025	0					
ANR	8988313	Identifier	valref		8988025	1					
ANR	8988314	ArrayIndexing	value [ 0 ]		8988025	1					
ANR	8988315	Identifier	value		8988025	0					
ANR	8988316	PrimaryExpression	0		8988025	1					
ANR	8988317	ExpressionStatement	return_error ( gs_error_rangecheck )	2744:12:87615:87648	8988025	1	True				
ANR	8988318	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988319	Callee	return_error		8988025	0					
ANR	8988320	Identifier	return_error		8988025	0					
ANR	8988321	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988322	Argument	gs_error_rangecheck		8988025	0					
ANR	8988323	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988324	ForStatement	for ( i = 0 ; i < value [ 0 ] ; i ++ )		8988025	9					
ANR	8988325	ForInit	i = 0 ;	2746:13:87664:87667	8988025	0	True				
ANR	8988326	AssignmentExpression	i = 0		8988025	0		=			
ANR	8988327	Identifier	i		8988025	0					
ANR	8988328	PrimaryExpression	0		8988025	1					
ANR	8988329	Condition	i < value [ 0 ]	2746:17:87668:87677	8988025	1	True				
ANR	8988330	RelationalExpression	i < value [ 0 ]		8988025	0		<			
ANR	8988331	Identifier	i		8988025	0					
ANR	8988332	ArrayIndexing	value [ 0 ]		8988025	1					
ANR	8988333	Identifier	value		8988025	0					
ANR	8988334	PrimaryExpression	0		8988025	1					
ANR	8988335	PostIncDecOperationExpression	i ++	2746:28:87679:87681	8988025	2	True				
ANR	8988336	Identifier	i		8988025	0					
ANR	8988337	IncDec	++		8988025	1					
ANR	8988338	CompoundStatement		42:33:1306:1306	8988025	3					
ANR	8988339	ExpressionStatement	"code = array_get ( imemory , & valref , i , & tempref )"	2747:12:87698:87745	8988025	0	True				
ANR	8988340	AssignmentExpression	"code = array_get ( imemory , & valref , i , & tempref )"		8988025	0		=			
ANR	8988341	Identifier	code		8988025	0					
ANR	8988342	CallExpression	"array_get ( imemory , & valref , i , & tempref )"		8988025	1					
ANR	8988343	Callee	array_get		8988025	0					
ANR	8988344	Identifier	array_get		8988025	0					
ANR	8988345	ArgumentList	imemory		8988025	1					
ANR	8988346	Argument	imemory		8988025	0					
ANR	8988347	Identifier	imemory		8988025	0					
ANR	8988348	Argument	& valref		8988025	1					
ANR	8988349	UnaryOperationExpression	& valref		8988025	0					
ANR	8988350	UnaryOperator	&		8988025	0					
ANR	8988351	Identifier	valref		8988025	1					
ANR	8988352	Argument	i		8988025	2					
ANR	8988353	Identifier	i		8988025	0					
ANR	8988354	Argument	& tempref		8988025	3					
ANR	8988355	UnaryOperationExpression	& tempref		8988025	0					
ANR	8988356	UnaryOperator	&		8988025	0					
ANR	8988357	Identifier	tempref		8988025	1					
ANR	8988358	IfStatement	if ( code < 0 )		8988025	1					
ANR	8988359	Condition	code < 0	2748:16:87763:87770	8988025	0	True				
ANR	8988360	RelationalExpression	code < 0		8988025	0		<			
ANR	8988361	Identifier	code		8988025	0					
ANR	8988362	PrimaryExpression	0		8988025	1					
ANR	8988363	ReturnStatement	return code ;	2749:16:87789:87800	8988025	1	True				
ANR	8988364	Identifier	code		8988025	0					
ANR	8988365	IfStatement	"if ( ! r_has_type ( & tempref , t_string ) )"		8988025	2					
ANR	8988366	Condition	"! r_has_type ( & tempref , t_string )"	2750:16:87818:87848	8988025	0	True				
ANR	8988367	UnaryOperationExpression	"! r_has_type ( & tempref , t_string )"		8988025	0					
ANR	8988368	UnaryOperator	!		8988025	0					
ANR	8988369	CallExpression	"r_has_type ( & tempref , t_string )"		8988025	1					
ANR	8988370	Callee	r_has_type		8988025	0					
ANR	8988371	Identifier	r_has_type		8988025	0					
ANR	8988372	ArgumentList	& tempref		8988025	1					
ANR	8988373	Argument	& tempref		8988025	0					
ANR	8988374	UnaryOperationExpression	& tempref		8988025	0					
ANR	8988375	UnaryOperator	&		8988025	0					
ANR	8988376	Identifier	tempref		8988025	1					
ANR	8988377	Argument	t_string		8988025	1					
ANR	8988378	Identifier	t_string		8988025	0					
ANR	8988379	ExpressionStatement	return_error ( gs_error_typecheck )	2751:16:87867:87899	8988025	1	True				
ANR	8988380	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988381	Callee	return_error		8988025	0					
ANR	8988382	Identifier	return_error		8988025	0					
ANR	8988383	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988384	Argument	gs_error_typecheck		8988025	0					
ANR	8988385	Identifier	gs_error_typecheck		8988025	0					
ANR	8988386	IfStatement	if ( r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] ) )		8988025	3					
ANR	8988387	Condition	r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] )	2753:16:87918:87962	8988025	0	True				
ANR	8988388	EqualityExpression	r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] )		8988025	0		!=			
ANR	8988389	CallExpression	r_size ( & tempref )		8988025	0					
ANR	8988390	Callee	r_size		8988025	0					
ANR	8988391	Identifier	r_size		8988025	0					
ANR	8988392	ArgumentList	& tempref		8988025	1					
ANR	8988393	Argument	& tempref		8988025	0					
ANR	8988394	UnaryOperationExpression	& tempref		8988025	0					
ANR	8988395	UnaryOperator	&		8988025	0					
ANR	8988396	Identifier	tempref		8988025	1					
ANR	8988397	MultiplicativeExpression	3 * value [ 1 ] * value [ 2 ]		8988025	1		*			
ANR	8988398	PrimaryExpression	3		8988025	0					
ANR	8988399	MultiplicativeExpression	value [ 1 ] * value [ 2 ]		8988025	1		*			
ANR	8988400	ArrayIndexing	value [ 1 ]		8988025	0					
ANR	8988401	Identifier	value		8988025	0					
ANR	8988402	PrimaryExpression	1		8988025	1					
ANR	8988403	ArrayIndexing	value [ 2 ]		8988025	1					
ANR	8988404	Identifier	value		8988025	0					
ANR	8988405	PrimaryExpression	2		8988025	1					
ANR	8988406	ExpressionStatement	return_error ( gs_error_rangecheck )	2754:16:87981:88014	8988025	1	True				
ANR	8988407	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988408	Callee	return_error		8988025	0					
ANR	8988409	Identifier	return_error		8988025	0					
ANR	8988410	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988411	Argument	gs_error_rangecheck		8988025	0					
ANR	8988412	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988413	ElseStatement	else		8988025	0					
ANR	8988414	CompoundStatement		52:11:1659:1659	8988025	0					
ANR	8988415	ExpressionStatement	return_error ( gs_error_rangecheck )	2757:8:88047:88080	8988025	0	True				
ANR	8988416	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988417	Callee	return_error		8988025	0					
ANR	8988418	Identifier	return_error		8988025	0					
ANR	8988419	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988420	Argument	gs_error_rangecheck		8988025	0					
ANR	8988421	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988422	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"	2763:4:88196:88248	8988025	13	True				
ANR	8988423	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"		8988025	0		=			
ANR	8988424	Identifier	code		8988025	0					
ANR	8988425	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"		8988025	1					
ANR	8988426	Callee	dict_find_string		8988025	0					
ANR	8988427	Identifier	dict_find_string		8988025	0					
ANR	8988428	ArgumentList	& CIEdict		8988025	1					
ANR	8988429	Argument	& CIEdict		8988025	0					
ANR	8988430	UnaryOperationExpression	& CIEdict		8988025	0					
ANR	8988431	UnaryOperator	&		8988025	0					
ANR	8988432	Identifier	CIEdict		8988025	1					
ANR	8988433	Argument	"""RangeDEF"""		8988025	1					
ANR	8988434	PrimaryExpression	"""RangeDEF"""		8988025	0					
ANR	8988435	Argument	& pref		8988025	2					
ANR	8988436	UnaryOperationExpression	& pref		8988025	0					
ANR	8988437	UnaryOperator	&		8988025	0					
ANR	8988438	Identifier	pref		8988025	1					
ANR	8988439	IfStatement	"if ( code > 0 && ! r_has_type ( & tempref , t_null ) )"		8988025	14					
ANR	8988440	Condition	"code > 0 && ! r_has_type ( & tempref , t_null )"	2764:8:88258:88298	8988025	0	True				
ANR	8988441	AndExpression	"code > 0 && ! r_has_type ( & tempref , t_null )"		8988025	0		&&			
ANR	8988442	RelationalExpression	code > 0		8988025	0		>			
ANR	8988443	Identifier	code		8988025	0					
ANR	8988444	PrimaryExpression	0		8988025	1					
ANR	8988445	UnaryOperationExpression	"! r_has_type ( & tempref , t_null )"		8988025	1					
ANR	8988446	UnaryOperator	!		8988025	0					
ANR	8988447	CallExpression	"r_has_type ( & tempref , t_null )"		8988025	1					
ANR	8988448	Callee	r_has_type		8988025	0					
ANR	8988449	Identifier	r_has_type		8988025	0					
ANR	8988450	ArgumentList	& tempref		8988025	1					
ANR	8988451	Argument	& tempref		8988025	0					
ANR	8988452	UnaryOperationExpression	& tempref		8988025	0					
ANR	8988453	UnaryOperator	&		8988025	0					
ANR	8988454	Identifier	tempref		8988025	1					
ANR	8988455	Argument	t_null		8988025	1					
ANR	8988456	Identifier	t_null		8988025	0					
ANR	8988457	CompoundStatement		60:51:1923:1923	8988025	1					
ANR	8988458	IfStatement	if ( ! r_is_array ( pref ) )		8988025	0					
ANR	8988459	Condition	! r_is_array ( pref )	2765:12:88315:88331	8988025	0	True				
ANR	8988460	UnaryOperationExpression	! r_is_array ( pref )		8988025	0					
ANR	8988461	UnaryOperator	!		8988025	0					
ANR	8988462	CallExpression	r_is_array ( pref )		8988025	1					
ANR	8988463	Callee	r_is_array		8988025	0					
ANR	8988464	Identifier	r_is_array		8988025	0					
ANR	8988465	ArgumentList	pref		8988025	1					
ANR	8988466	Argument	pref		8988025	0					
ANR	8988467	Identifier	pref		8988025	0					
ANR	8988468	ExpressionStatement	return_error ( gs_error_typecheck )	2766:12:88346:88378	8988025	1	True				
ANR	8988469	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988470	Callee	return_error		8988025	0					
ANR	8988471	Identifier	return_error		8988025	0					
ANR	8988472	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988473	Argument	gs_error_typecheck		8988025	0					
ANR	8988474	Identifier	gs_error_typecheck		8988025	0					
ANR	8988475	IfStatement	if ( r_size ( pref ) != 6 )		8988025	1					
ANR	8988476	Condition	r_size ( pref ) != 6	2767:12:88392:88408	8988025	0	True				
ANR	8988477	EqualityExpression	r_size ( pref ) != 6		8988025	0		!=			
ANR	8988478	CallExpression	r_size ( pref )		8988025	0					
ANR	8988479	Callee	r_size		8988025	0					
ANR	8988480	Identifier	r_size		8988025	0					
ANR	8988481	ArgumentList	pref		8988025	1					
ANR	8988482	Argument	pref		8988025	0					
ANR	8988483	Identifier	pref		8988025	0					
ANR	8988484	PrimaryExpression	6		8988025	1					
ANR	8988485	ExpressionStatement	return_error ( gs_error_rangecheck )	2768:12:88423:88456	8988025	1	True				
ANR	8988486	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988487	Callee	return_error		8988025	0					
ANR	8988488	Identifier	return_error		8988025	0					
ANR	8988489	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988490	Argument	gs_error_rangecheck		8988025	0					
ANR	8988491	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988492	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 6 , value )"	2769:8:88466:88517	8988025	2	True				
ANR	8988493	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 6 , value )"		8988025	0		=			
ANR	8988494	Identifier	code		8988025	0					
ANR	8988495	CallExpression	"get_cie_param_array ( imemory , pref , 6 , value )"		8988025	1					
ANR	8988496	Callee	get_cie_param_array		8988025	0					
ANR	8988497	Identifier	get_cie_param_array		8988025	0					
ANR	8988498	ArgumentList	imemory		8988025	1					
ANR	8988499	Argument	imemory		8988025	0					
ANR	8988500	Identifier	imemory		8988025	0					
ANR	8988501	Argument	pref		8988025	1					
ANR	8988502	Identifier	pref		8988025	0					
ANR	8988503	Argument	6		8988025	2					
ANR	8988504	PrimaryExpression	6		8988025	0					
ANR	8988505	Argument	value		8988025	3					
ANR	8988506	Identifier	value		8988025	0					
ANR	8988507	IfStatement	if ( code < 0 )		8988025	3					
ANR	8988508	Condition	code < 0	2770:12:88531:88538	8988025	0	True				
ANR	8988509	RelationalExpression	code < 0		8988025	0		<			
ANR	8988510	Identifier	code		8988025	0					
ANR	8988511	PrimaryExpression	0		8988025	1					
ANR	8988512	ReturnStatement	return code ;	2771:12:88553:88564	8988025	1	True				
ANR	8988513	Identifier	code		8988025	0					
ANR	8988514	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		8988025	4					
ANR	8988515	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2772:12:88578:88642	8988025	0	True				
ANR	8988516	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8988025	0		||			
ANR	8988517	RelationalExpression	value [ 1 ] < value [ 0 ]		8988025	0		<			
ANR	8988518	ArrayIndexing	value [ 1 ]		8988025	0					
ANR	8988519	Identifier	value		8988025	0					
ANR	8988520	PrimaryExpression	1		8988025	1					
ANR	8988521	ArrayIndexing	value [ 0 ]		8988025	1					
ANR	8988522	Identifier	value		8988025	0					
ANR	8988523	PrimaryExpression	0		8988025	1					
ANR	8988524	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8988025	1		||			
ANR	8988525	RelationalExpression	value [ 3 ] < value [ 2 ]		8988025	0		<			
ANR	8988526	ArrayIndexing	value [ 3 ]		8988025	0					
ANR	8988527	Identifier	value		8988025	0					
ANR	8988528	PrimaryExpression	3		8988025	1					
ANR	8988529	ArrayIndexing	value [ 2 ]		8988025	1					
ANR	8988530	Identifier	value		8988025	0					
ANR	8988531	PrimaryExpression	2		8988025	1					
ANR	8988532	RelationalExpression	value [ 5 ] < value [ 4 ]		8988025	1		<			
ANR	8988533	ArrayIndexing	value [ 5 ]		8988025	0					
ANR	8988534	Identifier	value		8988025	0					
ANR	8988535	PrimaryExpression	5		8988025	1					
ANR	8988536	ArrayIndexing	value [ 4 ]		8988025	1					
ANR	8988537	Identifier	value		8988025	0					
ANR	8988538	PrimaryExpression	4		8988025	1					
ANR	8988539	ExpressionStatement	return_error ( gs_error_rangecheck )	2773:12:88657:88690	8988025	1	True				
ANR	8988540	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988541	Callee	return_error		8988025	0					
ANR	8988542	Identifier	return_error		8988025	0					
ANR	8988543	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988544	Argument	gs_error_rangecheck		8988025	0					
ANR	8988545	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988546	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"	2776:4:88703:88756	8988025	15	True				
ANR	8988547	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"		8988025	0		=			
ANR	8988548	Identifier	code		8988025	0					
ANR	8988549	CallExpression	"dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"		8988025	1					
ANR	8988550	Callee	dict_find_string		8988025	0					
ANR	8988551	Identifier	dict_find_string		8988025	0					
ANR	8988552	ArgumentList	& CIEdict		8988025	1					
ANR	8988553	Argument	& CIEdict		8988025	0					
ANR	8988554	UnaryOperationExpression	& CIEdict		8988025	0					
ANR	8988555	UnaryOperator	&		8988025	0					
ANR	8988556	Identifier	CIEdict		8988025	1					
ANR	8988557	Argument	"""DecodeDEF"""		8988025	1					
ANR	8988558	PrimaryExpression	"""DecodeDEF"""		8988025	0					
ANR	8988559	Argument	& pref		8988025	2					
ANR	8988560	UnaryOperationExpression	& pref		8988025	0					
ANR	8988561	UnaryOperator	&		8988025	0					
ANR	8988562	Identifier	pref		8988025	1					
ANR	8988563	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		8988025	16					
ANR	8988564	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	2777:8:88766:88802	8988025	0	True				
ANR	8988565	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		8988025	0		&&			
ANR	8988566	RelationalExpression	code > 0		8988025	0		>			
ANR	8988567	Identifier	code		8988025	0					
ANR	8988568	PrimaryExpression	0		8988025	1					
ANR	8988569	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		8988025	1					
ANR	8988570	UnaryOperator	!		8988025	0					
ANR	8988571	CallExpression	"r_has_type ( pref , t_null )"		8988025	1					
ANR	8988572	Callee	r_has_type		8988025	0					
ANR	8988573	Identifier	r_has_type		8988025	0					
ANR	8988574	ArgumentList	pref		8988025	1					
ANR	8988575	Argument	pref		8988025	0					
ANR	8988576	Identifier	pref		8988025	0					
ANR	8988577	Argument	t_null		8988025	1					
ANR	8988578	Identifier	t_null		8988025	0					
ANR	8988579	CompoundStatement		73:47:2427:2427	8988025	1					
ANR	8988580	IfStatement	if ( ! r_is_array ( pref ) )		8988025	0					
ANR	8988581	Condition	! r_is_array ( pref )	2778:12:88819:88835	8988025	0	True				
ANR	8988582	UnaryOperationExpression	! r_is_array ( pref )		8988025	0					
ANR	8988583	UnaryOperator	!		8988025	0					
ANR	8988584	CallExpression	r_is_array ( pref )		8988025	1					
ANR	8988585	Callee	r_is_array		8988025	0					
ANR	8988586	Identifier	r_is_array		8988025	0					
ANR	8988587	ArgumentList	pref		8988025	1					
ANR	8988588	Argument	pref		8988025	0					
ANR	8988589	Identifier	pref		8988025	0					
ANR	8988590	ExpressionStatement	return_error ( gs_error_typecheck )	2779:12:88850:88882	8988025	1	True				
ANR	8988591	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988592	Callee	return_error		8988025	0					
ANR	8988593	Identifier	return_error		8988025	0					
ANR	8988594	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988595	Argument	gs_error_typecheck		8988025	0					
ANR	8988596	Identifier	gs_error_typecheck		8988025	0					
ANR	8988597	IfStatement	if ( r_size ( pref ) != 3 )		8988025	1					
ANR	8988598	Condition	r_size ( pref ) != 3	2780:12:88896:88912	8988025	0	True				
ANR	8988599	EqualityExpression	r_size ( pref ) != 3		8988025	0		!=			
ANR	8988600	CallExpression	r_size ( pref )		8988025	0					
ANR	8988601	Callee	r_size		8988025	0					
ANR	8988602	Identifier	r_size		8988025	0					
ANR	8988603	ArgumentList	pref		8988025	1					
ANR	8988604	Argument	pref		8988025	0					
ANR	8988605	Identifier	pref		8988025	0					
ANR	8988606	PrimaryExpression	3		8988025	1					
ANR	8988607	ExpressionStatement	return_error ( gs_error_rangecheck )	2781:12:88927:88960	8988025	1	True				
ANR	8988608	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988609	Callee	return_error		8988025	0					
ANR	8988610	Identifier	return_error		8988025	0					
ANR	8988611	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988612	Argument	gs_error_rangecheck		8988025	0					
ANR	8988613	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988614	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8988025	2					
ANR	8988615	ForInit	i = 0 ;	2783:13:88976:88979	8988025	0	True				
ANR	8988616	AssignmentExpression	i = 0		8988025	0		=			
ANR	8988617	Identifier	i		8988025	0					
ANR	8988618	PrimaryExpression	0		8988025	1					
ANR	8988619	Condition	i < 3	2783:17:88980:88982	8988025	1	True				
ANR	8988620	RelationalExpression	i < 3		8988025	0		<			
ANR	8988621	Identifier	i		8988025	0					
ANR	8988622	PrimaryExpression	3		8988025	1					
ANR	8988623	PostIncDecOperationExpression	i ++	2783:21:88984:88986	8988025	2	True				
ANR	8988624	Identifier	i		8988025	0					
ANR	8988625	IncDec	++		8988025	1					
ANR	8988626	CompoundStatement		79:26:2611:2611	8988025	3					
ANR	8988627	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	2784:12:89003:89046	8988025	0	True				
ANR	8988628	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		8988025	0		=			
ANR	8988629	Identifier	code		8988025	0					
ANR	8988630	CallExpression	"array_get ( imemory , pref , i , & valref )"		8988025	1					
ANR	8988631	Callee	array_get		8988025	0					
ANR	8988632	Identifier	array_get		8988025	0					
ANR	8988633	ArgumentList	imemory		8988025	1					
ANR	8988634	Argument	imemory		8988025	0					
ANR	8988635	Identifier	imemory		8988025	0					
ANR	8988636	Argument	pref		8988025	1					
ANR	8988637	Identifier	pref		8988025	0					
ANR	8988638	Argument	i		8988025	2					
ANR	8988639	Identifier	i		8988025	0					
ANR	8988640	Argument	& valref		8988025	3					
ANR	8988641	UnaryOperationExpression	& valref		8988025	0					
ANR	8988642	UnaryOperator	&		8988025	0					
ANR	8988643	Identifier	valref		8988025	1					
ANR	8988644	IfStatement	if ( code < 0 )		8988025	1					
ANR	8988645	Condition	code < 0	2785:16:89064:89071	8988025	0	True				
ANR	8988646	RelationalExpression	code < 0		8988025	0		<			
ANR	8988647	Identifier	code		8988025	0					
ANR	8988648	PrimaryExpression	0		8988025	1					
ANR	8988649	ReturnStatement	return code ;	2786:16:89090:89101	8988025	1	True				
ANR	8988650	Identifier	code		8988025	0					
ANR	8988651	ExpressionStatement	check_proc ( valref )	2787:12:89115:89133	8988025	2	True				
ANR	8988652	CallExpression	check_proc ( valref )		8988025	0					
ANR	8988653	Callee	check_proc		8988025	0					
ANR	8988654	Identifier	check_proc		8988025	0					
ANR	8988655	ArgumentList	valref		8988025	1					
ANR	8988656	Argument	valref		8988025	0					
ANR	8988657	Identifier	valref		8988025	0					
ANR	8988658	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"	2791:4:89156:89208	8988025	17	True				
ANR	8988659	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"		8988025	0		=			
ANR	8988660	Identifier	code		8988025	0					
ANR	8988661	CallExpression	"dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"		8988025	1					
ANR	8988662	Callee	dict_find_string		8988025	0					
ANR	8988663	Identifier	dict_find_string		8988025	0					
ANR	8988664	ArgumentList	& CIEdict		8988025	1					
ANR	8988665	Argument	& CIEdict		8988025	0					
ANR	8988666	UnaryOperationExpression	& CIEdict		8988025	0					
ANR	8988667	UnaryOperator	&		8988025	0					
ANR	8988668	Identifier	CIEdict		8988025	1					
ANR	8988669	Argument	"""RangeHIJ"""		8988025	1					
ANR	8988670	PrimaryExpression	"""RangeHIJ"""		8988025	0					
ANR	8988671	Argument	& pref		8988025	2					
ANR	8988672	UnaryOperationExpression	& pref		8988025	0					
ANR	8988673	UnaryOperator	&		8988025	0					
ANR	8988674	Identifier	pref		8988025	1					
ANR	8988675	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		8988025	18					
ANR	8988676	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	2792:8:89218:89254	8988025	0	True				
ANR	8988677	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		8988025	0		&&			
ANR	8988678	RelationalExpression	code > 0		8988025	0		>			
ANR	8988679	Identifier	code		8988025	0					
ANR	8988680	PrimaryExpression	0		8988025	1					
ANR	8988681	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		8988025	1					
ANR	8988682	UnaryOperator	!		8988025	0					
ANR	8988683	CallExpression	"r_has_type ( pref , t_null )"		8988025	1					
ANR	8988684	Callee	r_has_type		8988025	0					
ANR	8988685	Identifier	r_has_type		8988025	0					
ANR	8988686	ArgumentList	pref		8988025	1					
ANR	8988687	Argument	pref		8988025	0					
ANR	8988688	Identifier	pref		8988025	0					
ANR	8988689	Argument	t_null		8988025	1					
ANR	8988690	Identifier	t_null		8988025	0					
ANR	8988691	CompoundStatement		88:47:2879:2879	8988025	1					
ANR	8988692	IfStatement	if ( ! r_is_array ( pref ) )		8988025	0					
ANR	8988693	Condition	! r_is_array ( pref )	2793:12:89271:89287	8988025	0	True				
ANR	8988694	UnaryOperationExpression	! r_is_array ( pref )		8988025	0					
ANR	8988695	UnaryOperator	!		8988025	0					
ANR	8988696	CallExpression	r_is_array ( pref )		8988025	1					
ANR	8988697	Callee	r_is_array		8988025	0					
ANR	8988698	Identifier	r_is_array		8988025	0					
ANR	8988699	ArgumentList	pref		8988025	1					
ANR	8988700	Argument	pref		8988025	0					
ANR	8988701	Identifier	pref		8988025	0					
ANR	8988702	ExpressionStatement	return_error ( gs_error_typecheck )	2794:12:89302:89334	8988025	1	True				
ANR	8988703	CallExpression	return_error ( gs_error_typecheck )		8988025	0					
ANR	8988704	Callee	return_error		8988025	0					
ANR	8988705	Identifier	return_error		8988025	0					
ANR	8988706	ArgumentList	gs_error_typecheck		8988025	1					
ANR	8988707	Argument	gs_error_typecheck		8988025	0					
ANR	8988708	Identifier	gs_error_typecheck		8988025	0					
ANR	8988709	IfStatement	if ( r_size ( pref ) != 6 )		8988025	1					
ANR	8988710	Condition	r_size ( pref ) != 6	2795:12:89348:89364	8988025	0	True				
ANR	8988711	EqualityExpression	r_size ( pref ) != 6		8988025	0		!=			
ANR	8988712	CallExpression	r_size ( pref )		8988025	0					
ANR	8988713	Callee	r_size		8988025	0					
ANR	8988714	Identifier	r_size		8988025	0					
ANR	8988715	ArgumentList	pref		8988025	1					
ANR	8988716	Argument	pref		8988025	0					
ANR	8988717	Identifier	pref		8988025	0					
ANR	8988718	PrimaryExpression	6		8988025	1					
ANR	8988719	ExpressionStatement	return_error ( gs_error_rangecheck )	2796:12:89379:89412	8988025	1	True				
ANR	8988720	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988721	Callee	return_error		8988025	0					
ANR	8988722	Identifier	return_error		8988025	0					
ANR	8988723	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988724	Argument	gs_error_rangecheck		8988025	0					
ANR	8988725	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988726	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 6 , value )"	2797:8:89422:89473	8988025	2	True				
ANR	8988727	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 6 , value )"		8988025	0		=			
ANR	8988728	Identifier	code		8988025	0					
ANR	8988729	CallExpression	"get_cie_param_array ( imemory , pref , 6 , value )"		8988025	1					
ANR	8988730	Callee	get_cie_param_array		8988025	0					
ANR	8988731	Identifier	get_cie_param_array		8988025	0					
ANR	8988732	ArgumentList	imemory		8988025	1					
ANR	8988733	Argument	imemory		8988025	0					
ANR	8988734	Identifier	imemory		8988025	0					
ANR	8988735	Argument	pref		8988025	1					
ANR	8988736	Identifier	pref		8988025	0					
ANR	8988737	Argument	6		8988025	2					
ANR	8988738	PrimaryExpression	6		8988025	0					
ANR	8988739	Argument	value		8988025	3					
ANR	8988740	Identifier	value		8988025	0					
ANR	8988741	IfStatement	if ( code < 0 )		8988025	3					
ANR	8988742	Condition	code < 0	2798:12:89487:89494	8988025	0	True				
ANR	8988743	RelationalExpression	code < 0		8988025	0		<			
ANR	8988744	Identifier	code		8988025	0					
ANR	8988745	PrimaryExpression	0		8988025	1					
ANR	8988746	ReturnStatement	return code ;	2799:12:89509:89520	8988025	1	True				
ANR	8988747	Identifier	code		8988025	0					
ANR	8988748	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		8988025	4					
ANR	8988749	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2800:12:89534:89598	8988025	0	True				
ANR	8988750	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8988025	0		||			
ANR	8988751	RelationalExpression	value [ 1 ] < value [ 0 ]		8988025	0		<			
ANR	8988752	ArrayIndexing	value [ 1 ]		8988025	0					
ANR	8988753	Identifier	value		8988025	0					
ANR	8988754	PrimaryExpression	1		8988025	1					
ANR	8988755	ArrayIndexing	value [ 0 ]		8988025	1					
ANR	8988756	Identifier	value		8988025	0					
ANR	8988757	PrimaryExpression	0		8988025	1					
ANR	8988758	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		8988025	1		||			
ANR	8988759	RelationalExpression	value [ 3 ] < value [ 2 ]		8988025	0		<			
ANR	8988760	ArrayIndexing	value [ 3 ]		8988025	0					
ANR	8988761	Identifier	value		8988025	0					
ANR	8988762	PrimaryExpression	3		8988025	1					
ANR	8988763	ArrayIndexing	value [ 2 ]		8988025	1					
ANR	8988764	Identifier	value		8988025	0					
ANR	8988765	PrimaryExpression	2		8988025	1					
ANR	8988766	RelationalExpression	value [ 5 ] < value [ 4 ]		8988025	1		<			
ANR	8988767	ArrayIndexing	value [ 5 ]		8988025	0					
ANR	8988768	Identifier	value		8988025	0					
ANR	8988769	PrimaryExpression	5		8988025	1					
ANR	8988770	ArrayIndexing	value [ 4 ]		8988025	1					
ANR	8988771	Identifier	value		8988025	0					
ANR	8988772	PrimaryExpression	4		8988025	1					
ANR	8988773	ExpressionStatement	return_error ( gs_error_rangecheck )	2801:12:89613:89646	8988025	1	True				
ANR	8988774	CallExpression	return_error ( gs_error_rangecheck )		8988025	0					
ANR	8988775	Callee	return_error		8988025	0					
ANR	8988776	Identifier	return_error		8988025	0					
ANR	8988777	ArgumentList	gs_error_rangecheck		8988025	1					
ANR	8988778	Argument	gs_error_rangecheck		8988025	0					
ANR	8988779	Identifier	gs_error_rangecheck		8988025	0					
ANR	8988780	ExpressionStatement	* r = 0	2804:4:89659:89665	8988025	19	True				
ANR	8988781	AssignmentExpression	* r = 0		8988025	0		=			
ANR	8988782	UnaryOperationExpression	* r		8988025	0					
ANR	8988783	UnaryOperator	*		8988025	0					
ANR	8988784	Identifier	r		8988025	1					
ANR	8988785	PrimaryExpression	0		8988025	1					
ANR	8988786	ReturnStatement	return 0 ;	2805:4:89671:89679	8988025	20	True				
ANR	8988787	PrimaryExpression	0		8988025	0					
ANR	8988788	ReturnType	static int		8988025	1					
ANR	8988789	Identifier	validateciedefspace		8988025	2					
ANR	8988790	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		8988025	3					
ANR	8988791	Parameter	i_ctx_t * i_ctx_p	2704:31:86349:86365	8988025	0	True				
ANR	8988792	ParameterType	i_ctx_t *		8988025	0					
ANR	8988793	Identifier	i_ctx_p		8988025	1					
ANR	8988794	Parameter	ref * * r	2704:50:86368:86374	8988025	1	True				
ANR	8988795	ParameterType	ref * *		8988025	0					
ANR	8988796	Identifier	r		8988025	1					
ANR	8988797	CFGEntryNode	ENTRY		8988025		True				
ANR	8988798	CFGExitNode	EXIT		8988025		True				
ANR	8988799	Symbol	code		8988025						
ANR	8988800	Symbol	t_dictionary		8988025						
ANR	8988801	Symbol	gs_error_rangecheck		8988025						
ANR	8988802	Symbol	& CIEdict		8988025						
ANR	8988803	Symbol	gs_error_typecheck		8988025						
ANR	8988804	Symbol	& pref		8988025						
ANR	8988805	Symbol	r_has_type		8988025						
ANR	8988806	Symbol	t_null		8988025						
ANR	8988807	Symbol	& valref		8988025						
ANR	8988808	Symbol	pref		8988025						
ANR	8988809	Symbol	r_size		8988025						
ANR	8988810	Symbol	CIEspace		8988025						
ANR	8988811	Symbol	CIEdict		8988025						
ANR	8988812	Symbol	imemory		8988025						
ANR	8988813	Symbol	value		8988025						
ANR	8988814	Symbol	tempref		8988025						
ANR	8988815	Symbol	dict_find_string		8988025						
ANR	8988816	Symbol	array_get		8988025						
ANR	8988817	Symbol	i		8988025						
ANR	8988818	Symbol	& tempref		8988025						
ANR	8988819	Symbol	t_string		8988025						
ANR	8988820	Symbol	r		8988025						
ANR	8988821	Symbol	validatecieabcspace		8988025						
ANR	8988822	Symbol	i_ctx_p		8988025						
ANR	8988823	Symbol	* value		8988025						
ANR	8988824	Symbol	valref		8988025						
ANR	8988825	Symbol	r_is_array		8988025						
ANR	8988826	Symbol	* r		8988025						
ANR	8988827	Symbol	get_cie_param_array		8988025						
ANR	8988828	Function	ciedefdomain	2807:0:89683:90297							
ANR	8988829	FunctionDef	"ciedefdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8988828	0					
ANR	8988830	CompoundStatement		2808:0:89750:90297	8988828	0					
ANR	8988831	IdentifierDeclStatement	int code ;	2809:4:89756:89764	8988828	0	True				
ANR	8988832	IdentifierDecl	code		8988828	0					
ANR	8988833	IdentifierDeclType	int		8988828	0					
ANR	8988834	Identifier	code		8988828	1					
ANR	8988835	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2810:4:89770:89795	8988828	1	True				
ANR	8988836	IdentifierDecl	CIEdict		8988828	0					
ANR	8988837	IdentifierDeclType	ref		8988828	0					
ANR	8988838	Identifier	CIEdict		8988828	1					
ANR	8988839	IdentifierDecl	* tempref		8988828	1					
ANR	8988840	IdentifierDeclType	ref *		8988828	0					
ANR	8988841	Identifier	tempref		8988828	1					
ANR	8988842	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2812:4:89802:89847	8988828	2	True				
ANR	8988843	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8988828	0		=			
ANR	8988844	Identifier	code		8988828	0					
ANR	8988845	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8988828	1					
ANR	8988846	Callee	array_get		8988828	0					
ANR	8988847	Identifier	array_get		8988828	0					
ANR	8988848	ArgumentList	imemory		8988828	1					
ANR	8988849	Argument	imemory		8988828	0					
ANR	8988850	Identifier	imemory		8988828	0					
ANR	8988851	Argument	space		8988828	1					
ANR	8988852	Identifier	space		8988828	0					
ANR	8988853	Argument	1		8988828	2					
ANR	8988854	PrimaryExpression	1		8988828	0					
ANR	8988855	Argument	& CIEdict		8988828	3					
ANR	8988856	UnaryOperationExpression	& CIEdict		8988828	0					
ANR	8988857	UnaryOperator	&		8988828	0					
ANR	8988858	Identifier	CIEdict		8988828	1					
ANR	8988859	IfStatement	if ( code < 0 )		8988828	3					
ANR	8988860	Condition	code < 0	2813:8:89857:89864	8988828	0	True				
ANR	8988861	RelationalExpression	code < 0		8988828	0		<			
ANR	8988862	Identifier	code		8988828	0					
ANR	8988863	PrimaryExpression	0		8988828	1					
ANR	8988864	ReturnStatement	return code ;	2814:8:89875:89886	8988828	1	True				
ANR	8988865	Identifier	code		8988828	0					
ANR	8988866	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"	2817:4:89951:90006	8988828	4	True				
ANR	8988867	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		8988828	0		=			
ANR	8988868	Identifier	code		8988828	0					
ANR	8988869	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		8988828	1					
ANR	8988870	Callee	dict_find_string		8988828	0					
ANR	8988871	Identifier	dict_find_string		8988828	0					
ANR	8988872	ArgumentList	& CIEdict		8988828	1					
ANR	8988873	Argument	& CIEdict		8988828	0					
ANR	8988874	UnaryOperationExpression	& CIEdict		8988828	0					
ANR	8988875	UnaryOperator	&		8988828	0					
ANR	8988876	Identifier	CIEdict		8988828	1					
ANR	8988877	Argument	"""RangeDEF"""		8988828	1					
ANR	8988878	PrimaryExpression	"""RangeDEF"""		8988828	0					
ANR	8988879	Argument	& tempref		8988828	2					
ANR	8988880	UnaryOperationExpression	& tempref		8988828	0					
ANR	8988881	UnaryOperator	&		8988828	0					
ANR	8988882	Identifier	tempref		8988828	1					
ANR	8988883	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8988828	5					
ANR	8988884	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2818:8:90016:90055	8988828	0	True				
ANR	8988885	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8988828	0		&&			
ANR	8988886	RelationalExpression	code > 0		8988828	0		>			
ANR	8988887	Identifier	code		8988828	0					
ANR	8988888	PrimaryExpression	0		8988828	1					
ANR	8988889	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8988828	1					
ANR	8988890	UnaryOperator	!		8988828	0					
ANR	8988891	CallExpression	"r_has_type ( tempref , t_null )"		8988828	1					
ANR	8988892	Callee	r_has_type		8988828	0					
ANR	8988893	Identifier	r_has_type		8988828	0					
ANR	8988894	ArgumentList	tempref		8988828	1					
ANR	8988895	Argument	tempref		8988828	0					
ANR	8988896	Identifier	tempref		8988828	0					
ANR	8988897	Argument	t_null		8988828	1					
ANR	8988898	Identifier	t_null		8988828	0					
ANR	8988899	CompoundStatement		11:50:307:307	8988828	1					
ANR	8988900	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2819:8:90068:90120	8988828	0	True				
ANR	8988901	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		8988828	0		=			
ANR	8988902	Identifier	code		8988828	0					
ANR	8988903	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		8988828	1					
ANR	8988904	Callee	get_cie_param_array		8988828	0					
ANR	8988905	Identifier	get_cie_param_array		8988828	0					
ANR	8988906	ArgumentList	imemory		8988828	1					
ANR	8988907	Argument	imemory		8988828	0					
ANR	8988908	Identifier	imemory		8988828	0					
ANR	8988909	Argument	tempref		8988828	1					
ANR	8988910	Identifier	tempref		8988828	0					
ANR	8988911	Argument	6		8988828	2					
ANR	8988912	PrimaryExpression	6		8988828	0					
ANR	8988913	Argument	ptr		8988828	3					
ANR	8988914	Identifier	ptr		8988828	0					
ANR	8988915	IfStatement	if ( code < 0 )		8988828	1					
ANR	8988916	Condition	code < 0	2820:12:90134:90141	8988828	0	True				
ANR	8988917	RelationalExpression	code < 0		8988828	0		<			
ANR	8988918	Identifier	code		8988828	0					
ANR	8988919	PrimaryExpression	0		8988828	1					
ANR	8988920	ReturnStatement	return code ;	2821:12:90156:90167	8988828	1	True				
ANR	8988921	Identifier	code		8988828	0					
ANR	8988922	ElseStatement	else		8988828	0					
ANR	8988923	CompoundStatement		15:11:429:429	8988828	0					
ANR	8988924	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2824:5:90234:90275	8988828	0	True				
ANR	8988925	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		8988828	0					
ANR	8988926	Callee	memcpy		8988828	0					
ANR	8988927	Identifier	memcpy		8988828	0					
ANR	8988928	ArgumentList	ptr		8988828	1					
ANR	8988929	Argument	ptr		8988828	0					
ANR	8988930	Identifier	ptr		8988828	0					
ANR	8988931	Argument	default_0_1		8988828	1					
ANR	8988932	Identifier	default_0_1		8988828	0					
ANR	8988933	Argument	6 * sizeof ( float )		8988828	2					
ANR	8988934	MultiplicativeExpression	6 * sizeof ( float )		8988828	0		*			
ANR	8988935	PrimaryExpression	6		8988828	0					
ANR	8988936	SizeofExpression	sizeof ( float )		8988828	1					
ANR	8988937	Sizeof	sizeof		8988828	0					
ANR	8988938	SizeofOperand	float		8988828	1					
ANR	8988939	ReturnStatement	return 0 ;	2826:4:90287:90295	8988828	6	True				
ANR	8988940	PrimaryExpression	0		8988828	0					
ANR	8988941	ReturnType	static int		8988828	1					
ANR	8988942	Identifier	ciedefdomain		8988828	2					
ANR	8988943	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8988828	3					
ANR	8988944	Parameter	i_ctx_t * i_ctx_p	2807:24:89707:89723	8988828	0	True				
ANR	8988945	ParameterType	i_ctx_t *		8988828	0					
ANR	8988946	Identifier	i_ctx_p		8988828	1					
ANR	8988947	Parameter	ref * space	2807:43:89726:89735	8988828	1	True				
ANR	8988948	ParameterType	ref *		8988828	0					
ANR	8988949	Identifier	space		8988828	1					
ANR	8988950	Parameter	float * ptr	2807:55:89738:89747	8988828	2	True				
ANR	8988951	ParameterType	float *		8988828	0					
ANR	8988952	Identifier	ptr		8988828	1					
ANR	8988953	CFGEntryNode	ENTRY		8988828		True				
ANR	8988954	CFGExitNode	EXIT		8988828		True				
ANR	8988955	Symbol	code		8988828						
ANR	8988956	Symbol	dict_find_string		8988828						
ANR	8988957	Symbol	array_get		8988828						
ANR	8988958	Symbol	& CIEdict		8988828						
ANR	8988959	Symbol	& tempref		8988828						
ANR	8988960	Symbol	space		8988828						
ANR	8988961	Symbol	ptr		8988828						
ANR	8988962	Symbol	t_null		8988828						
ANR	8988963	Symbol	r_has_type		8988828						
ANR	8988964	Symbol	i_ctx_p		8988828						
ANR	8988965	Symbol	CIEdict		8988828						
ANR	8988966	Symbol	imemory		8988828						
ANR	8988967	Symbol	get_cie_param_array		8988828						
ANR	8988968	Symbol	default_0_1		8988828						
ANR	8988969	Symbol	tempref		8988828						
ANR	8988970	Function	ciedefrange	2828:0:90299:90912							
ANR	8988971	FunctionDef	"ciedefrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8988970	0					
ANR	8988972	CompoundStatement		2829:0:90365:90912	8988970	0					
ANR	8988973	IdentifierDeclStatement	int code ;	2830:4:90371:90379	8988970	0	True				
ANR	8988974	IdentifierDecl	code		8988970	0					
ANR	8988975	IdentifierDeclType	int		8988970	0					
ANR	8988976	Identifier	code		8988970	1					
ANR	8988977	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2831:4:90385:90410	8988970	1	True				
ANR	8988978	IdentifierDecl	CIEdict		8988970	0					
ANR	8988979	IdentifierDeclType	ref		8988970	0					
ANR	8988980	Identifier	CIEdict		8988970	1					
ANR	8988981	IdentifierDecl	* tempref		8988970	1					
ANR	8988982	IdentifierDeclType	ref *		8988970	0					
ANR	8988983	Identifier	tempref		8988970	1					
ANR	8988984	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2833:4:90417:90462	8988970	2	True				
ANR	8988985	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8988970	0		=			
ANR	8988986	Identifier	code		8988970	0					
ANR	8988987	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8988970	1					
ANR	8988988	Callee	array_get		8988970	0					
ANR	8988989	Identifier	array_get		8988970	0					
ANR	8988990	ArgumentList	imemory		8988970	1					
ANR	8988991	Argument	imemory		8988970	0					
ANR	8988992	Identifier	imemory		8988970	0					
ANR	8988993	Argument	space		8988970	1					
ANR	8988994	Identifier	space		8988970	0					
ANR	8988995	Argument	1		8988970	2					
ANR	8988996	PrimaryExpression	1		8988970	0					
ANR	8988997	Argument	& CIEdict		8988970	3					
ANR	8988998	UnaryOperationExpression	& CIEdict		8988970	0					
ANR	8988999	UnaryOperator	&		8988970	0					
ANR	8989000	Identifier	CIEdict		8988970	1					
ANR	8989001	IfStatement	if ( code < 0 )		8988970	3					
ANR	8989002	Condition	code < 0	2834:8:90472:90479	8988970	0	True				
ANR	8989003	RelationalExpression	code < 0		8988970	0		<			
ANR	8989004	Identifier	code		8988970	0					
ANR	8989005	PrimaryExpression	0		8988970	1					
ANR	8989006	ReturnStatement	return code ;	2835:8:90490:90501	8988970	1	True				
ANR	8989007	Identifier	code		8988970	0					
ANR	8989008	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"	2838:4:90566:90621	8988970	4	True				
ANR	8989009	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		8988970	0		=			
ANR	8989010	Identifier	code		8988970	0					
ANR	8989011	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		8988970	1					
ANR	8989012	Callee	dict_find_string		8988970	0					
ANR	8989013	Identifier	dict_find_string		8988970	0					
ANR	8989014	ArgumentList	& CIEdict		8988970	1					
ANR	8989015	Argument	& CIEdict		8988970	0					
ANR	8989016	UnaryOperationExpression	& CIEdict		8988970	0					
ANR	8989017	UnaryOperator	&		8988970	0					
ANR	8989018	Identifier	CIEdict		8988970	1					
ANR	8989019	Argument	"""RangeDEF"""		8988970	1					
ANR	8989020	PrimaryExpression	"""RangeDEF"""		8988970	0					
ANR	8989021	Argument	& tempref		8988970	2					
ANR	8989022	UnaryOperationExpression	& tempref		8988970	0					
ANR	8989023	UnaryOperator	&		8988970	0					
ANR	8989024	Identifier	tempref		8988970	1					
ANR	8989025	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8988970	5					
ANR	8989026	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2839:8:90631:90670	8988970	0	True				
ANR	8989027	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8988970	0		&&			
ANR	8989028	RelationalExpression	code > 0		8988970	0		>			
ANR	8989029	Identifier	code		8988970	0					
ANR	8989030	PrimaryExpression	0		8988970	1					
ANR	8989031	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8988970	1					
ANR	8989032	UnaryOperator	!		8988970	0					
ANR	8989033	CallExpression	"r_has_type ( tempref , t_null )"		8988970	1					
ANR	8989034	Callee	r_has_type		8988970	0					
ANR	8989035	Identifier	r_has_type		8988970	0					
ANR	8989036	ArgumentList	tempref		8988970	1					
ANR	8989037	Argument	tempref		8988970	0					
ANR	8989038	Identifier	tempref		8988970	0					
ANR	8989039	Argument	t_null		8988970	1					
ANR	8989040	Identifier	t_null		8988970	0					
ANR	8989041	CompoundStatement		11:50:307:307	8988970	1					
ANR	8989042	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2840:8:90683:90735	8988970	0	True				
ANR	8989043	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		8988970	0		=			
ANR	8989044	Identifier	code		8988970	0					
ANR	8989045	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		8988970	1					
ANR	8989046	Callee	get_cie_param_array		8988970	0					
ANR	8989047	Identifier	get_cie_param_array		8988970	0					
ANR	8989048	ArgumentList	imemory		8988970	1					
ANR	8989049	Argument	imemory		8988970	0					
ANR	8989050	Identifier	imemory		8988970	0					
ANR	8989051	Argument	tempref		8988970	1					
ANR	8989052	Identifier	tempref		8988970	0					
ANR	8989053	Argument	6		8988970	2					
ANR	8989054	PrimaryExpression	6		8988970	0					
ANR	8989055	Argument	ptr		8988970	3					
ANR	8989056	Identifier	ptr		8988970	0					
ANR	8989057	IfStatement	if ( code < 0 )		8988970	1					
ANR	8989058	Condition	code < 0	2841:12:90749:90756	8988970	0	True				
ANR	8989059	RelationalExpression	code < 0		8988970	0		<			
ANR	8989060	Identifier	code		8988970	0					
ANR	8989061	PrimaryExpression	0		8988970	1					
ANR	8989062	ReturnStatement	return code ;	2842:12:90771:90782	8988970	1	True				
ANR	8989063	Identifier	code		8988970	0					
ANR	8989064	ElseStatement	else		8988970	0					
ANR	8989065	CompoundStatement		15:11:429:429	8988970	0					
ANR	8989066	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2845:5:90849:90890	8988970	0	True				
ANR	8989067	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		8988970	0					
ANR	8989068	Callee	memcpy		8988970	0					
ANR	8989069	Identifier	memcpy		8988970	0					
ANR	8989070	ArgumentList	ptr		8988970	1					
ANR	8989071	Argument	ptr		8988970	0					
ANR	8989072	Identifier	ptr		8988970	0					
ANR	8989073	Argument	default_0_1		8988970	1					
ANR	8989074	Identifier	default_0_1		8988970	0					
ANR	8989075	Argument	6 * sizeof ( float )		8988970	2					
ANR	8989076	MultiplicativeExpression	6 * sizeof ( float )		8988970	0		*			
ANR	8989077	PrimaryExpression	6		8988970	0					
ANR	8989078	SizeofExpression	sizeof ( float )		8988970	1					
ANR	8989079	Sizeof	sizeof		8988970	0					
ANR	8989080	SizeofOperand	float		8988970	1					
ANR	8989081	ReturnStatement	return 0 ;	2847:4:90902:90910	8988970	6	True				
ANR	8989082	PrimaryExpression	0		8988970	0					
ANR	8989083	ReturnType	static int		8988970	1					
ANR	8989084	Identifier	ciedefrange		8988970	2					
ANR	8989085	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8988970	3					
ANR	8989086	Parameter	i_ctx_t * i_ctx_p	2828:23:90322:90338	8988970	0	True				
ANR	8989087	ParameterType	i_ctx_t *		8988970	0					
ANR	8989088	Identifier	i_ctx_p		8988970	1					
ANR	8989089	Parameter	ref * space	2828:42:90341:90350	8988970	1	True				
ANR	8989090	ParameterType	ref *		8988970	0					
ANR	8989091	Identifier	space		8988970	1					
ANR	8989092	Parameter	float * ptr	2828:54:90353:90362	8988970	2	True				
ANR	8989093	ParameterType	float *		8988970	0					
ANR	8989094	Identifier	ptr		8988970	1					
ANR	8989095	CFGEntryNode	ENTRY		8988970		True				
ANR	8989096	CFGExitNode	EXIT		8988970		True				
ANR	8989097	Symbol	code		8988970						
ANR	8989098	Symbol	dict_find_string		8988970						
ANR	8989099	Symbol	array_get		8988970						
ANR	8989100	Symbol	& CIEdict		8988970						
ANR	8989101	Symbol	& tempref		8988970						
ANR	8989102	Symbol	space		8988970						
ANR	8989103	Symbol	ptr		8988970						
ANR	8989104	Symbol	t_null		8988970						
ANR	8989105	Symbol	r_has_type		8988970						
ANR	8989106	Symbol	i_ctx_p		8988970						
ANR	8989107	Symbol	CIEdict		8988970						
ANR	8989108	Symbol	imemory		8988970						
ANR	8989109	Symbol	get_cie_param_array		8988970						
ANR	8989110	Symbol	default_0_1		8988970						
ANR	8989111	Symbol	tempref		8988970						
ANR	8989112	Function	ciedefvalidate	2849:0:90914:91291							
ANR	8989113	FunctionDef	"ciedefvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8989112	0					
ANR	8989114	CompoundStatement		2850:0:91000:91291	8989112	0					
ANR	8989115	IdentifierDeclStatement	os_ptr op = osp ;	2851:4:91006:91021	8989112	0	True				
ANR	8989116	IdentifierDecl	op = osp		8989112	0					
ANR	8989117	IdentifierDeclType	os_ptr		8989112	0					
ANR	8989118	Identifier	op		8989112	1					
ANR	8989119	AssignmentExpression	op = osp		8989112	2		=			
ANR	8989120	Identifier	osp		8989112	0					
ANR	8989121	Identifier	osp		8989112	1					
ANR	8989122	IdentifierDeclStatement	int i ;	2852:4:91027:91032	8989112	1	True				
ANR	8989123	IdentifierDecl	i		8989112	0					
ANR	8989124	IdentifierDeclType	int		8989112	0					
ANR	8989125	Identifier	i		8989112	1					
ANR	8989126	IfStatement	if ( num_comps < 3 )		8989112	2					
ANR	8989127	Condition	num_comps < 3	2854:8:91043:91055	8989112	0	True				
ANR	8989128	RelationalExpression	num_comps < 3		8989112	0		<			
ANR	8989129	Identifier	num_comps		8989112	0					
ANR	8989130	PrimaryExpression	3		8989112	1					
ANR	8989131	ExpressionStatement	return_error ( gs_error_stackunderflow )	2855:8:91066:91103	8989112	1	True				
ANR	8989132	CallExpression	return_error ( gs_error_stackunderflow )		8989112	0					
ANR	8989133	Callee	return_error		8989112	0					
ANR	8989134	Identifier	return_error		8989112	0					
ANR	8989135	ArgumentList	gs_error_stackunderflow		8989112	1					
ANR	8989136	Argument	gs_error_stackunderflow		8989112	0					
ANR	8989137	Identifier	gs_error_stackunderflow		8989112	0					
ANR	8989138	ExpressionStatement	op -= 2	2857:4:91110:91117	8989112	3	True				
ANR	8989139	AssignmentExpression	op -= 2		8989112	0		-=			
ANR	8989140	Identifier	op		8989112	0					
ANR	8989141	PrimaryExpression	2		8989112	1					
ANR	8989142	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8989112	4					
ANR	8989143	ForInit	i = 0 ;	2858:9:91128:91131	8989112	0	True				
ANR	8989144	AssignmentExpression	i = 0		8989112	0		=			
ANR	8989145	Identifier	i		8989112	0					
ANR	8989146	PrimaryExpression	0		8989112	1					
ANR	8989147	Condition	i < 3	2858:13:91132:91134	8989112	1	True				
ANR	8989148	RelationalExpression	i < 3		8989112	0		<			
ANR	8989149	Identifier	i		8989112	0					
ANR	8989150	PrimaryExpression	3		8989112	1					
ANR	8989151	PostIncDecOperationExpression	i ++	2858:17:91136:91138	8989112	2	True				
ANR	8989152	Identifier	i		8989112	0					
ANR	8989153	IncDec	++		8989112	1					
ANR	8989154	CompoundStatement		9:22:140:140	8989112	3					
ANR	8989155	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8989112	0					
ANR	8989156	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2859:12:91155:91207	8989112	0	True				
ANR	8989157	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8989112	0		&&			
ANR	8989158	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8989112	0					
ANR	8989159	UnaryOperator	!		8989112	0					
ANR	8989160	CallExpression	"r_has_type ( op , t_integer )"		8989112	1					
ANR	8989161	Callee	r_has_type		8989112	0					
ANR	8989162	Identifier	r_has_type		8989112	0					
ANR	8989163	ArgumentList	op		8989112	1					
ANR	8989164	Argument	op		8989112	0					
ANR	8989165	Identifier	op		8989112	0					
ANR	8989166	Argument	t_integer		8989112	1					
ANR	8989167	Identifier	t_integer		8989112	0					
ANR	8989168	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8989112	1					
ANR	8989169	UnaryOperator	!		8989112	0					
ANR	8989170	CallExpression	"r_has_type ( op , t_real )"		8989112	1					
ANR	8989171	Callee	r_has_type		8989112	0					
ANR	8989172	Identifier	r_has_type		8989112	0					
ANR	8989173	ArgumentList	op		8989112	1					
ANR	8989174	Argument	op		8989112	0					
ANR	8989175	Identifier	op		8989112	0					
ANR	8989176	Argument	t_real		8989112	1					
ANR	8989177	Identifier	t_real		8989112	0					
ANR	8989178	ExpressionStatement	return_error ( gs_error_typecheck )	2860:12:91222:91254	8989112	1	True				
ANR	8989179	CallExpression	return_error ( gs_error_typecheck )		8989112	0					
ANR	8989180	Callee	return_error		8989112	0					
ANR	8989181	Identifier	return_error		8989112	0					
ANR	8989182	ArgumentList	gs_error_typecheck		8989112	1					
ANR	8989183	Argument	gs_error_typecheck		8989112	0					
ANR	8989184	Identifier	gs_error_typecheck		8989112	0					
ANR	8989185	ExpressionStatement	op ++	2861:8:91264:91268	8989112	1	True				
ANR	8989186	PostIncDecOperationExpression	op ++		8989112	0					
ANR	8989187	Identifier	op		8989112	0					
ANR	8989188	IncDec	++		8989112	1					
ANR	8989189	ReturnStatement	return 0 ;	2864:4:91281:91289	8989112	5	True				
ANR	8989190	PrimaryExpression	0		8989112	0					
ANR	8989191	ReturnType	static int		8989112	1					
ANR	8989192	Identifier	ciedefvalidate		8989112	2					
ANR	8989193	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8989112	3					
ANR	8989194	Parameter	i_ctx_t * i_ctx_p	2849:26:90940:90955	8989112	0	True				
ANR	8989195	ParameterType	i_ctx_t *		8989112	0					
ANR	8989196	Identifier	i_ctx_p		8989112	1					
ANR	8989197	Parameter	ref * space	2849:44:90958:90967	8989112	1	True				
ANR	8989198	ParameterType	ref *		8989112	0					
ANR	8989199	Identifier	space		8989112	1					
ANR	8989200	Parameter	float * values	2849:56:90970:90982	8989112	2	True				
ANR	8989201	ParameterType	float *		8989112	0					
ANR	8989202	Identifier	values		8989112	1					
ANR	8989203	Parameter	int num_comps	2849:71:90985:90997	8989112	3	True				
ANR	8989204	ParameterType	int		8989112	0					
ANR	8989205	Identifier	num_comps		8989112	1					
ANR	8989206	CFGEntryNode	ENTRY		8989112		True				
ANR	8989207	CFGExitNode	EXIT		8989112		True				
ANR	8989208	Symbol	op		8989112						
ANR	8989209	Symbol	r_has_type		8989112						
ANR	8989210	Symbol	gs_error_typecheck		8989112						
ANR	8989211	Symbol	t_integer		8989112						
ANR	8989212	Symbol	gs_error_stackunderflow		8989112						
ANR	8989213	Symbol	i_ctx_p		8989112						
ANR	8989214	Symbol	values		8989112						
ANR	8989215	Symbol	num_comps		8989112						
ANR	8989216	Symbol	i		8989112						
ANR	8989217	Symbol	t_real		8989112						
ANR	8989218	Symbol	osp		8989112						
ANR	8989219	Symbol	space		8989112						
ANR	8989220	Function	ciedefcompareproc	2866:0:91293:92744							
ANR	8989221	FunctionDef	"ciedefcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8989220	0					
ANR	8989222	CompoundStatement		2867:0:91368:92744	8989220	0					
ANR	8989223	IdentifierDeclStatement	int code = 0 ;	2868:4:91374:91386	8989220	0	True				
ANR	8989224	IdentifierDecl	code = 0		8989220	0					
ANR	8989225	IdentifierDeclType	int		8989220	0					
ANR	8989226	Identifier	code		8989220	1					
ANR	8989227	AssignmentExpression	code = 0		8989220	2		=			
ANR	8989228	Identifier	code		8989220	0					
ANR	8989229	PrimaryExpression	0		8989220	1					
ANR	8989230	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2869:4:91392:91414	8989220	1	True				
ANR	8989231	IdentifierDecl	CIEdict1		8989220	0					
ANR	8989232	IdentifierDeclType	ref		8989220	0					
ANR	8989233	Identifier	CIEdict1		8989220	1					
ANR	8989234	IdentifierDecl	CIEdict2		8989220	1					
ANR	8989235	IdentifierDeclType	ref		8989220	0					
ANR	8989236	Identifier	CIEdict2		8989220	1					
ANR	8989237	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2871:4:91421:91467	8989220	2	True				
ANR	8989238	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8989220	0		=			
ANR	8989239	Identifier	code		8989220	0					
ANR	8989240	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8989220	1					
ANR	8989241	Callee	array_get		8989220	0					
ANR	8989242	Identifier	array_get		8989220	0					
ANR	8989243	ArgumentList	imemory		8989220	1					
ANR	8989244	Argument	imemory		8989220	0					
ANR	8989245	Identifier	imemory		8989220	0					
ANR	8989246	Argument	space		8989220	1					
ANR	8989247	Identifier	space		8989220	0					
ANR	8989248	Argument	1		8989220	2					
ANR	8989249	PrimaryExpression	1		8989220	0					
ANR	8989250	Argument	& CIEdict1		8989220	3					
ANR	8989251	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989252	UnaryOperator	&		8989220	0					
ANR	8989253	Identifier	CIEdict1		8989220	1					
ANR	8989254	IfStatement	if ( code < 0 )		8989220	3					
ANR	8989255	Condition	code < 0	2872:8:91477:91484	8989220	0	True				
ANR	8989256	RelationalExpression	code < 0		8989220	0		<			
ANR	8989257	Identifier	code		8989220	0					
ANR	8989258	PrimaryExpression	0		8989220	1					
ANR	8989259	ReturnStatement	return 0 ;	2873:8:91495:91503	8989220	1	True				
ANR	8989260	PrimaryExpression	0		8989220	0					
ANR	8989261	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2874:4:91509:91559	8989220	4	True				
ANR	8989262	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		8989220	0		=			
ANR	8989263	Identifier	code		8989220	0					
ANR	8989264	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		8989220	1					
ANR	8989265	Callee	array_get		8989220	0					
ANR	8989266	Identifier	array_get		8989220	0					
ANR	8989267	ArgumentList	imemory		8989220	1					
ANR	8989268	Argument	imemory		8989220	0					
ANR	8989269	Identifier	imemory		8989220	0					
ANR	8989270	Argument	testspace		8989220	1					
ANR	8989271	Identifier	testspace		8989220	0					
ANR	8989272	Argument	1		8989220	2					
ANR	8989273	PrimaryExpression	1		8989220	0					
ANR	8989274	Argument	& CIEdict2		8989220	3					
ANR	8989275	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989276	UnaryOperator	&		8989220	0					
ANR	8989277	Identifier	CIEdict2		8989220	1					
ANR	8989278	IfStatement	if ( code < 0 )		8989220	5					
ANR	8989279	Condition	code < 0	2875:8:91569:91576	8989220	0	True				
ANR	8989280	RelationalExpression	code < 0		8989220	0		<			
ANR	8989281	Identifier	code		8989220	0					
ANR	8989282	PrimaryExpression	0		8989220	1					
ANR	8989283	ReturnStatement	return 0 ;	2876:8:91587:91595	8989220	1	True				
ANR	8989284	PrimaryExpression	0		8989220	0					
ANR	8989285	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		8989220	6					
ANR	8989286	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2877:8:91605:91672	8989220	0	True				
ANR	8989287	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8989220	0					
ANR	8989288	UnaryOperator	!		8989220	0					
ANR	8989289	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8989220	1					
ANR	8989290	Callee	comparedictkey		8989220	0					
ANR	8989291	Identifier	comparedictkey		8989220	0					
ANR	8989292	ArgumentList	i_ctx_p		8989220	1					
ANR	8989293	Argument	i_ctx_p		8989220	0					
ANR	8989294	Identifier	i_ctx_p		8989220	0					
ANR	8989295	Argument	& CIEdict1		8989220	1					
ANR	8989296	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989297	UnaryOperator	&		8989220	0					
ANR	8989298	Identifier	CIEdict1		8989220	1					
ANR	8989299	Argument	& CIEdict2		8989220	2					
ANR	8989300	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989301	UnaryOperator	&		8989220	0					
ANR	8989302	Identifier	CIEdict2		8989220	1					
ANR	8989303	Argument	"( char * ) ""WhitePoint"""		8989220	3					
ANR	8989304	CastExpression	"( char * ) ""WhitePoint"""		8989220	0					
ANR	8989305	CastTarget	char *		8989220	0					
ANR	8989306	PrimaryExpression	"""WhitePoint"""		8989220	1					
ANR	8989307	ReturnStatement	return 0 ;	2878:8:91683:91691	8989220	1	True				
ANR	8989308	PrimaryExpression	0		8989220	0					
ANR	8989309	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		8989220	7					
ANR	8989310	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2879:8:91701:91768	8989220	0	True				
ANR	8989311	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8989220	0					
ANR	8989312	UnaryOperator	!		8989220	0					
ANR	8989313	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8989220	1					
ANR	8989314	Callee	comparedictkey		8989220	0					
ANR	8989315	Identifier	comparedictkey		8989220	0					
ANR	8989316	ArgumentList	i_ctx_p		8989220	1					
ANR	8989317	Argument	i_ctx_p		8989220	0					
ANR	8989318	Identifier	i_ctx_p		8989220	0					
ANR	8989319	Argument	& CIEdict1		8989220	1					
ANR	8989320	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989321	UnaryOperator	&		8989220	0					
ANR	8989322	Identifier	CIEdict1		8989220	1					
ANR	8989323	Argument	& CIEdict2		8989220	2					
ANR	8989324	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989325	UnaryOperator	&		8989220	0					
ANR	8989326	Identifier	CIEdict2		8989220	1					
ANR	8989327	Argument	"( char * ) ""BlackPoint"""		8989220	3					
ANR	8989328	CastExpression	"( char * ) ""BlackPoint"""		8989220	0					
ANR	8989329	CastTarget	char *		8989220	0					
ANR	8989330	PrimaryExpression	"""BlackPoint"""		8989220	1					
ANR	8989331	ReturnStatement	return 0 ;	2880:8:91779:91787	8989220	1	True				
ANR	8989332	PrimaryExpression	0		8989220	0					
ANR	8989333	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		8989220	8					
ANR	8989334	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	2881:8:91797:91862	8989220	0	True				
ANR	8989335	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8989220	0					
ANR	8989336	UnaryOperator	!		8989220	0					
ANR	8989337	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8989220	1					
ANR	8989338	Callee	comparedictkey		8989220	0					
ANR	8989339	Identifier	comparedictkey		8989220	0					
ANR	8989340	ArgumentList	i_ctx_p		8989220	1					
ANR	8989341	Argument	i_ctx_p		8989220	0					
ANR	8989342	Identifier	i_ctx_p		8989220	0					
ANR	8989343	Argument	& CIEdict1		8989220	1					
ANR	8989344	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989345	UnaryOperator	&		8989220	0					
ANR	8989346	Identifier	CIEdict1		8989220	1					
ANR	8989347	Argument	& CIEdict2		8989220	2					
ANR	8989348	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989349	UnaryOperator	&		8989220	0					
ANR	8989350	Identifier	CIEdict2		8989220	1					
ANR	8989351	Argument	"( char * ) ""RangeABC"""		8989220	3					
ANR	8989352	CastExpression	"( char * ) ""RangeABC"""		8989220	0					
ANR	8989353	CastTarget	char *		8989220	0					
ANR	8989354	PrimaryExpression	"""RangeABC"""		8989220	1					
ANR	8989355	ReturnStatement	return 0 ;	2882:8:91873:91881	8989220	1	True				
ANR	8989356	PrimaryExpression	0		8989220	0					
ANR	8989357	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		8989220	9					
ANR	8989358	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	2883:8:91891:91957	8989220	0	True				
ANR	8989359	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8989220	0					
ANR	8989360	UnaryOperator	!		8989220	0					
ANR	8989361	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8989220	1					
ANR	8989362	Callee	comparedictkey		8989220	0					
ANR	8989363	Identifier	comparedictkey		8989220	0					
ANR	8989364	ArgumentList	i_ctx_p		8989220	1					
ANR	8989365	Argument	i_ctx_p		8989220	0					
ANR	8989366	Identifier	i_ctx_p		8989220	0					
ANR	8989367	Argument	& CIEdict1		8989220	1					
ANR	8989368	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989369	UnaryOperator	&		8989220	0					
ANR	8989370	Identifier	CIEdict1		8989220	1					
ANR	8989371	Argument	& CIEdict2		8989220	2					
ANR	8989372	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989373	UnaryOperator	&		8989220	0					
ANR	8989374	Identifier	CIEdict2		8989220	1					
ANR	8989375	Argument	"( char * ) ""DecodeABC"""		8989220	3					
ANR	8989376	CastExpression	"( char * ) ""DecodeABC"""		8989220	0					
ANR	8989377	CastTarget	char *		8989220	0					
ANR	8989378	PrimaryExpression	"""DecodeABC"""		8989220	1					
ANR	8989379	ReturnStatement	return 0 ;	2884:8:91968:91976	8989220	1	True				
ANR	8989380	PrimaryExpression	0		8989220	0					
ANR	8989381	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		8989220	10					
ANR	8989382	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	2885:8:91986:92052	8989220	0	True				
ANR	8989383	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8989220	0					
ANR	8989384	UnaryOperator	!		8989220	0					
ANR	8989385	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8989220	1					
ANR	8989386	Callee	comparedictkey		8989220	0					
ANR	8989387	Identifier	comparedictkey		8989220	0					
ANR	8989388	ArgumentList	i_ctx_p		8989220	1					
ANR	8989389	Argument	i_ctx_p		8989220	0					
ANR	8989390	Identifier	i_ctx_p		8989220	0					
ANR	8989391	Argument	& CIEdict1		8989220	1					
ANR	8989392	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989393	UnaryOperator	&		8989220	0					
ANR	8989394	Identifier	CIEdict1		8989220	1					
ANR	8989395	Argument	& CIEdict2		8989220	2					
ANR	8989396	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989397	UnaryOperator	&		8989220	0					
ANR	8989398	Identifier	CIEdict2		8989220	1					
ANR	8989399	Argument	"( char * ) ""MatrixABC"""		8989220	3					
ANR	8989400	CastExpression	"( char * ) ""MatrixABC"""		8989220	0					
ANR	8989401	CastTarget	char *		8989220	0					
ANR	8989402	PrimaryExpression	"""MatrixABC"""		8989220	1					
ANR	8989403	ReturnStatement	return 0 ;	2886:8:92063:92071	8989220	1	True				
ANR	8989404	PrimaryExpression	0		8989220	0					
ANR	8989405	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		8989220	11					
ANR	8989406	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2887:8:92081:92146	8989220	0	True				
ANR	8989407	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8989220	0					
ANR	8989408	UnaryOperator	!		8989220	0					
ANR	8989409	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8989220	1					
ANR	8989410	Callee	comparedictkey		8989220	0					
ANR	8989411	Identifier	comparedictkey		8989220	0					
ANR	8989412	ArgumentList	i_ctx_p		8989220	1					
ANR	8989413	Argument	i_ctx_p		8989220	0					
ANR	8989414	Identifier	i_ctx_p		8989220	0					
ANR	8989415	Argument	& CIEdict1		8989220	1					
ANR	8989416	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989417	UnaryOperator	&		8989220	0					
ANR	8989418	Identifier	CIEdict1		8989220	1					
ANR	8989419	Argument	& CIEdict2		8989220	2					
ANR	8989420	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989421	UnaryOperator	&		8989220	0					
ANR	8989422	Identifier	CIEdict2		8989220	1					
ANR	8989423	Argument	"( char * ) ""RangeLMN"""		8989220	3					
ANR	8989424	CastExpression	"( char * ) ""RangeLMN"""		8989220	0					
ANR	8989425	CastTarget	char *		8989220	0					
ANR	8989426	PrimaryExpression	"""RangeLMN"""		8989220	1					
ANR	8989427	ReturnStatement	return 0 ;	2888:8:92157:92165	8989220	1	True				
ANR	8989428	PrimaryExpression	0		8989220	0					
ANR	8989429	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		8989220	12					
ANR	8989430	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2889:8:92175:92241	8989220	0	True				
ANR	8989431	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8989220	0					
ANR	8989432	UnaryOperator	!		8989220	0					
ANR	8989433	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8989220	1					
ANR	8989434	Callee	comparedictkey		8989220	0					
ANR	8989435	Identifier	comparedictkey		8989220	0					
ANR	8989436	ArgumentList	i_ctx_p		8989220	1					
ANR	8989437	Argument	i_ctx_p		8989220	0					
ANR	8989438	Identifier	i_ctx_p		8989220	0					
ANR	8989439	Argument	& CIEdict1		8989220	1					
ANR	8989440	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989441	UnaryOperator	&		8989220	0					
ANR	8989442	Identifier	CIEdict1		8989220	1					
ANR	8989443	Argument	& CIEdict2		8989220	2					
ANR	8989444	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989445	UnaryOperator	&		8989220	0					
ANR	8989446	Identifier	CIEdict2		8989220	1					
ANR	8989447	Argument	"( char * ) ""DecodeLMN"""		8989220	3					
ANR	8989448	CastExpression	"( char * ) ""DecodeLMN"""		8989220	0					
ANR	8989449	CastTarget	char *		8989220	0					
ANR	8989450	PrimaryExpression	"""DecodeLMN"""		8989220	1					
ANR	8989451	ReturnStatement	return 0 ;	2890:8:92252:92260	8989220	1	True				
ANR	8989452	PrimaryExpression	0		8989220	0					
ANR	8989453	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		8989220	13					
ANR	8989454	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2891:8:92270:92335	8989220	0	True				
ANR	8989455	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8989220	0					
ANR	8989456	UnaryOperator	!		8989220	0					
ANR	8989457	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8989220	1					
ANR	8989458	Callee	comparedictkey		8989220	0					
ANR	8989459	Identifier	comparedictkey		8989220	0					
ANR	8989460	ArgumentList	i_ctx_p		8989220	1					
ANR	8989461	Argument	i_ctx_p		8989220	0					
ANR	8989462	Identifier	i_ctx_p		8989220	0					
ANR	8989463	Argument	& CIEdict1		8989220	1					
ANR	8989464	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989465	UnaryOperator	&		8989220	0					
ANR	8989466	Identifier	CIEdict1		8989220	1					
ANR	8989467	Argument	& CIEdict2		8989220	2					
ANR	8989468	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989469	UnaryOperator	&		8989220	0					
ANR	8989470	Identifier	CIEdict2		8989220	1					
ANR	8989471	Argument	"( char * ) ""MatrixMN"""		8989220	3					
ANR	8989472	CastExpression	"( char * ) ""MatrixMN"""		8989220	0					
ANR	8989473	CastTarget	char *		8989220	0					
ANR	8989474	PrimaryExpression	"""MatrixMN"""		8989220	1					
ANR	8989475	ReturnStatement	return 0 ;	2892:8:92346:92354	8989220	1	True				
ANR	8989476	PrimaryExpression	0		8989220	0					
ANR	8989477	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" ) )"		8989220	14					
ANR	8989478	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"	2893:8:92364:92429	8989220	0	True				
ANR	8989479	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"		8989220	0					
ANR	8989480	UnaryOperator	!		8989220	0					
ANR	8989481	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"		8989220	1					
ANR	8989482	Callee	comparedictkey		8989220	0					
ANR	8989483	Identifier	comparedictkey		8989220	0					
ANR	8989484	ArgumentList	i_ctx_p		8989220	1					
ANR	8989485	Argument	i_ctx_p		8989220	0					
ANR	8989486	Identifier	i_ctx_p		8989220	0					
ANR	8989487	Argument	& CIEdict1		8989220	1					
ANR	8989488	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989489	UnaryOperator	&		8989220	0					
ANR	8989490	Identifier	CIEdict1		8989220	1					
ANR	8989491	Argument	& CIEdict2		8989220	2					
ANR	8989492	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989493	UnaryOperator	&		8989220	0					
ANR	8989494	Identifier	CIEdict2		8989220	1					
ANR	8989495	Argument	"( char * ) ""RangeDEF"""		8989220	3					
ANR	8989496	CastExpression	"( char * ) ""RangeDEF"""		8989220	0					
ANR	8989497	CastTarget	char *		8989220	0					
ANR	8989498	PrimaryExpression	"""RangeDEF"""		8989220	1					
ANR	8989499	ReturnStatement	return 0 ;	2894:8:92440:92448	8989220	1	True				
ANR	8989500	PrimaryExpression	0		8989220	0					
ANR	8989501	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" ) )"		8989220	15					
ANR	8989502	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"	2895:8:92458:92524	8989220	0	True				
ANR	8989503	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"		8989220	0					
ANR	8989504	UnaryOperator	!		8989220	0					
ANR	8989505	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"		8989220	1					
ANR	8989506	Callee	comparedictkey		8989220	0					
ANR	8989507	Identifier	comparedictkey		8989220	0					
ANR	8989508	ArgumentList	i_ctx_p		8989220	1					
ANR	8989509	Argument	i_ctx_p		8989220	0					
ANR	8989510	Identifier	i_ctx_p		8989220	0					
ANR	8989511	Argument	& CIEdict1		8989220	1					
ANR	8989512	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989513	UnaryOperator	&		8989220	0					
ANR	8989514	Identifier	CIEdict1		8989220	1					
ANR	8989515	Argument	& CIEdict2		8989220	2					
ANR	8989516	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989517	UnaryOperator	&		8989220	0					
ANR	8989518	Identifier	CIEdict2		8989220	1					
ANR	8989519	Argument	"( char * ) ""DecodeDEF"""		8989220	3					
ANR	8989520	CastExpression	"( char * ) ""DecodeDEF"""		8989220	0					
ANR	8989521	CastTarget	char *		8989220	0					
ANR	8989522	PrimaryExpression	"""DecodeDEF"""		8989220	1					
ANR	8989523	ReturnStatement	return 0 ;	2896:8:92535:92543	8989220	1	True				
ANR	8989524	PrimaryExpression	0		8989220	0					
ANR	8989525	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" ) )"		8989220	16					
ANR	8989526	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"	2897:8:92553:92618	8989220	0	True				
ANR	8989527	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"		8989220	0					
ANR	8989528	UnaryOperator	!		8989220	0					
ANR	8989529	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"		8989220	1					
ANR	8989530	Callee	comparedictkey		8989220	0					
ANR	8989531	Identifier	comparedictkey		8989220	0					
ANR	8989532	ArgumentList	i_ctx_p		8989220	1					
ANR	8989533	Argument	i_ctx_p		8989220	0					
ANR	8989534	Identifier	i_ctx_p		8989220	0					
ANR	8989535	Argument	& CIEdict1		8989220	1					
ANR	8989536	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989537	UnaryOperator	&		8989220	0					
ANR	8989538	Identifier	CIEdict1		8989220	1					
ANR	8989539	Argument	& CIEdict2		8989220	2					
ANR	8989540	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989541	UnaryOperator	&		8989220	0					
ANR	8989542	Identifier	CIEdict2		8989220	1					
ANR	8989543	Argument	"( char * ) ""RangeHIJ"""		8989220	3					
ANR	8989544	CastExpression	"( char * ) ""RangeHIJ"""		8989220	0					
ANR	8989545	CastTarget	char *		8989220	0					
ANR	8989546	PrimaryExpression	"""RangeHIJ"""		8989220	1					
ANR	8989547	ReturnStatement	return 0 ;	2898:8:92629:92637	8989220	1	True				
ANR	8989548	PrimaryExpression	0		8989220	0					
ANR	8989549	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" ) )"		8989220	17					
ANR	8989550	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"	2899:8:92647:92709	8989220	0	True				
ANR	8989551	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		8989220	0					
ANR	8989552	UnaryOperator	!		8989220	0					
ANR	8989553	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		8989220	1					
ANR	8989554	Callee	comparedictkey		8989220	0					
ANR	8989555	Identifier	comparedictkey		8989220	0					
ANR	8989556	ArgumentList	i_ctx_p		8989220	1					
ANR	8989557	Argument	i_ctx_p		8989220	0					
ANR	8989558	Identifier	i_ctx_p		8989220	0					
ANR	8989559	Argument	& CIEdict1		8989220	1					
ANR	8989560	UnaryOperationExpression	& CIEdict1		8989220	0					
ANR	8989561	UnaryOperator	&		8989220	0					
ANR	8989562	Identifier	CIEdict1		8989220	1					
ANR	8989563	Argument	& CIEdict2		8989220	2					
ANR	8989564	UnaryOperationExpression	& CIEdict2		8989220	0					
ANR	8989565	UnaryOperator	&		8989220	0					
ANR	8989566	Identifier	CIEdict2		8989220	1					
ANR	8989567	Argument	"( char * ) ""Table"""		8989220	3					
ANR	8989568	CastExpression	"( char * ) ""Table"""		8989220	0					
ANR	8989569	CastTarget	char *		8989220	0					
ANR	8989570	PrimaryExpression	"""Table"""		8989220	1					
ANR	8989571	ReturnStatement	return 0 ;	2900:8:92720:92728	8989220	1	True				
ANR	8989572	PrimaryExpression	0		8989220	0					
ANR	8989573	ReturnStatement	return 1 ;	2901:4:92734:92742	8989220	18	True				
ANR	8989574	PrimaryExpression	1		8989220	0					
ANR	8989575	ReturnType	static int		8989220	1					
ANR	8989576	Identifier	ciedefcompareproc		8989220	2					
ANR	8989577	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8989220	3					
ANR	8989578	Parameter	i_ctx_t * i_ctx_p	2866:29:91322:91337	8989220	0	True				
ANR	8989579	ParameterType	i_ctx_t *		8989220	0					
ANR	8989580	Identifier	i_ctx_p		8989220	1					
ANR	8989581	Parameter	ref * space	2866:47:91340:91349	8989220	1	True				
ANR	8989582	ParameterType	ref *		8989220	0					
ANR	8989583	Identifier	space		8989220	1					
ANR	8989584	Parameter	ref * testspace	2866:59:91352:91365	8989220	2	True				
ANR	8989585	ParameterType	ref *		8989220	0					
ANR	8989586	Identifier	testspace		8989220	1					
ANR	8989587	CFGEntryNode	ENTRY		8989220		True				
ANR	8989588	CFGExitNode	EXIT		8989220		True				
ANR	8989589	Symbol	code		8989220						
ANR	8989590	Symbol	testspace		8989220						
ANR	8989591	Symbol	i_ctx_p		8989220						
ANR	8989592	Symbol	array_get		8989220						
ANR	8989593	Symbol	CIEdict1		8989220						
ANR	8989594	Symbol	CIEdict2		8989220						
ANR	8989595	Symbol	imemory		8989220						
ANR	8989596	Symbol	comparedictkey		8989220						
ANR	8989597	Symbol	& CIEdict2		8989220						
ANR	8989598	Symbol	& CIEdict1		8989220						
ANR	8989599	Symbol	space		8989220						
ANR	8989600	Function	hashciedefgspace	2905:0:92766:94322							
ANR	8989601	FunctionDef	"hashciedefgspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		8989600	0					
ANR	8989602	CompoundStatement		2906:0:92845:94322	8989600	0					
ANR	8989603	IdentifierDeclStatement	int code = 0 ;	2910:4:92956:92968	8989600	0	True				
ANR	8989604	IdentifierDecl	code = 0		8989600	0					
ANR	8989605	IdentifierDeclType	int		8989600	0					
ANR	8989606	Identifier	code		8989600	1					
ANR	8989607	AssignmentExpression	code = 0		8989600	2		=			
ANR	8989608	Identifier	code		8989600	0					
ANR	8989609	PrimaryExpression	0		8989600	1					
ANR	8989610	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2911:4:92974:92997	8989600	1	True				
ANR	8989611	IdentifierDecl	CIEdict1		8989600	0					
ANR	8989612	IdentifierDeclType	ref		8989600	0					
ANR	8989613	Identifier	CIEdict1		8989600	1					
ANR	8989614	IdentifierDecl	spacename		8989600	1					
ANR	8989615	IdentifierDeclType	ref		8989600	0					
ANR	8989616	Identifier	spacename		8989600	1					
ANR	8989617	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2913:4:93004:93051	8989600	2	True				
ANR	8989618	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		8989600	0		=			
ANR	8989619	Identifier	code		8989600	0					
ANR	8989620	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		8989600	1					
ANR	8989621	Callee	array_get		8989600	0					
ANR	8989622	Identifier	array_get		8989600	0					
ANR	8989623	ArgumentList	imemory		8989600	1					
ANR	8989624	Argument	imemory		8989600	0					
ANR	8989625	Identifier	imemory		8989600	0					
ANR	8989626	Argument	space		8989600	1					
ANR	8989627	Identifier	space		8989600	0					
ANR	8989628	Argument	0		8989600	2					
ANR	8989629	PrimaryExpression	0		8989600	0					
ANR	8989630	Argument	& spacename		8989600	3					
ANR	8989631	UnaryOperationExpression	& spacename		8989600	0					
ANR	8989632	UnaryOperator	&		8989600	0					
ANR	8989633	Identifier	spacename		8989600	1					
ANR	8989634	IfStatement	if ( code < 0 )		8989600	3					
ANR	8989635	Condition	code < 0	2914:8:93061:93068	8989600	0	True				
ANR	8989636	RelationalExpression	code < 0		8989600	0		<			
ANR	8989637	Identifier	code		8989600	0					
ANR	8989638	PrimaryExpression	0		8989600	1					
ANR	8989639	ReturnStatement	return 0 ;	2915:8:93079:93087	8989600	1	True				
ANR	8989640	PrimaryExpression	0		8989600	0					
ANR	8989641	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2916:4:93093:93189	8989600	4	True				
ANR	8989642	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		8989600	0					
ANR	8989643	Callee	gs_md5_append		8989600	0					
ANR	8989644	Identifier	gs_md5_append		8989600	0					
ANR	8989645	ArgumentList	md5		8989600	1					
ANR	8989646	Argument	md5		8989600	0					
ANR	8989647	Identifier	md5		8989600	0					
ANR	8989648	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		8989600	1					
ANR	8989649	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		8989600	0					
ANR	8989650	CastTarget	const gs_md5_byte_t *		8989600	0					
ANR	8989651	UnaryOperationExpression	& spacename . value . pname		8989600	1					
ANR	8989652	UnaryOperator	&		8989600	0					
ANR	8989653	MemberAccess	spacename . value . pname		8989600	1					
ANR	8989654	MemberAccess	spacename . value		8989600	0					
ANR	8989655	Identifier	spacename		8989600	0					
ANR	8989656	Identifier	value		8989600	1					
ANR	8989657	Identifier	pname		8989600	1					
ANR	8989658	Argument	sizeof ( spacename . value . pname )		8989600	2					
ANR	8989659	SizeofExpression	sizeof ( spacename . value . pname )		8989600	0					
ANR	8989660	Sizeof	sizeof		8989600	0					
ANR	8989661	MemberAccess	spacename . value . pname		8989600	1					
ANR	8989662	MemberAccess	spacename . value		8989600	0					
ANR	8989663	Identifier	spacename		8989600	0					
ANR	8989664	Identifier	value		8989600	1					
ANR	8989665	Identifier	pname		8989600	1					
ANR	8989666	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2918:4:93196:93242	8989600	5	True				
ANR	8989667	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8989600	0		=			
ANR	8989668	Identifier	code		8989600	0					
ANR	8989669	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8989600	1					
ANR	8989670	Callee	array_get		8989600	0					
ANR	8989671	Identifier	array_get		8989600	0					
ANR	8989672	ArgumentList	imemory		8989600	1					
ANR	8989673	Argument	imemory		8989600	0					
ANR	8989674	Identifier	imemory		8989600	0					
ANR	8989675	Argument	space		8989600	1					
ANR	8989676	Identifier	space		8989600	0					
ANR	8989677	Argument	1		8989600	2					
ANR	8989678	PrimaryExpression	1		8989600	0					
ANR	8989679	Argument	& CIEdict1		8989600	3					
ANR	8989680	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989681	UnaryOperator	&		8989600	0					
ANR	8989682	Identifier	CIEdict1		8989600	1					
ANR	8989683	IfStatement	if ( code < 0 )		8989600	6					
ANR	8989684	Condition	code < 0	2919:8:93252:93259	8989600	0	True				
ANR	8989685	RelationalExpression	code < 0		8989600	0		<			
ANR	8989686	Identifier	code		8989600	0					
ANR	8989687	PrimaryExpression	0		8989600	1					
ANR	8989688	ReturnStatement	return 0 ;	2920:8:93270:93278	8989600	1	True				
ANR	8989689	PrimaryExpression	0		8989600	0					
ANR	8989690	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		8989600	7					
ANR	8989691	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2921:8:93288:93346	8989600	0	True				
ANR	8989692	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8989600	0					
ANR	8989693	UnaryOperator	!		8989600	0					
ANR	8989694	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		8989600	1					
ANR	8989695	Callee	hashdictkey		8989600	0					
ANR	8989696	Identifier	hashdictkey		8989600	0					
ANR	8989697	ArgumentList	i_ctx_p		8989600	1					
ANR	8989698	Argument	i_ctx_p		8989600	0					
ANR	8989699	Identifier	i_ctx_p		8989600	0					
ANR	8989700	Argument	& CIEdict1		8989600	1					
ANR	8989701	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989702	UnaryOperator	&		8989600	0					
ANR	8989703	Identifier	CIEdict1		8989600	1					
ANR	8989704	Argument	"( char * ) ""WhitePoint"""		8989600	2					
ANR	8989705	CastExpression	"( char * ) ""WhitePoint"""		8989600	0					
ANR	8989706	CastTarget	char *		8989600	0					
ANR	8989707	PrimaryExpression	"""WhitePoint"""		8989600	1					
ANR	8989708	Argument	md5		8989600	3					
ANR	8989709	Identifier	md5		8989600	0					
ANR	8989710	ReturnStatement	return 0 ;	2922:8:93357:93365	8989600	1	True				
ANR	8989711	PrimaryExpression	0		8989600	0					
ANR	8989712	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		8989600	8					
ANR	8989713	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2923:8:93375:93433	8989600	0	True				
ANR	8989714	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8989600	0					
ANR	8989715	UnaryOperator	!		8989600	0					
ANR	8989716	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		8989600	1					
ANR	8989717	Callee	hashdictkey		8989600	0					
ANR	8989718	Identifier	hashdictkey		8989600	0					
ANR	8989719	ArgumentList	i_ctx_p		8989600	1					
ANR	8989720	Argument	i_ctx_p		8989600	0					
ANR	8989721	Identifier	i_ctx_p		8989600	0					
ANR	8989722	Argument	& CIEdict1		8989600	1					
ANR	8989723	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989724	UnaryOperator	&		8989600	0					
ANR	8989725	Identifier	CIEdict1		8989600	1					
ANR	8989726	Argument	"( char * ) ""BlackPoint"""		8989600	2					
ANR	8989727	CastExpression	"( char * ) ""BlackPoint"""		8989600	0					
ANR	8989728	CastTarget	char *		8989600	0					
ANR	8989729	PrimaryExpression	"""BlackPoint"""		8989600	1					
ANR	8989730	Argument	md5		8989600	3					
ANR	8989731	Identifier	md5		8989600	0					
ANR	8989732	ReturnStatement	return 0 ;	2924:8:93444:93452	8989600	1	True				
ANR	8989733	PrimaryExpression	0		8989600	0					
ANR	8989734	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		8989600	9					
ANR	8989735	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2925:8:93462:93518	8989600	0	True				
ANR	8989736	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8989600	0					
ANR	8989737	UnaryOperator	!		8989600	0					
ANR	8989738	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		8989600	1					
ANR	8989739	Callee	hashdictkey		8989600	0					
ANR	8989740	Identifier	hashdictkey		8989600	0					
ANR	8989741	ArgumentList	i_ctx_p		8989600	1					
ANR	8989742	Argument	i_ctx_p		8989600	0					
ANR	8989743	Identifier	i_ctx_p		8989600	0					
ANR	8989744	Argument	& CIEdict1		8989600	1					
ANR	8989745	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989746	UnaryOperator	&		8989600	0					
ANR	8989747	Identifier	CIEdict1		8989600	1					
ANR	8989748	Argument	"( char * ) ""RangeABC"""		8989600	2					
ANR	8989749	CastExpression	"( char * ) ""RangeABC"""		8989600	0					
ANR	8989750	CastTarget	char *		8989600	0					
ANR	8989751	PrimaryExpression	"""RangeABC"""		8989600	1					
ANR	8989752	Argument	md5		8989600	3					
ANR	8989753	Identifier	md5		8989600	0					
ANR	8989754	ReturnStatement	return 0 ;	2926:8:93529:93537	8989600	1	True				
ANR	8989755	PrimaryExpression	0		8989600	0					
ANR	8989756	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		8989600	10					
ANR	8989757	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2927:8:93547:93604	8989600	0	True				
ANR	8989758	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8989600	0					
ANR	8989759	UnaryOperator	!		8989600	0					
ANR	8989760	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		8989600	1					
ANR	8989761	Callee	hashdictkey		8989600	0					
ANR	8989762	Identifier	hashdictkey		8989600	0					
ANR	8989763	ArgumentList	i_ctx_p		8989600	1					
ANR	8989764	Argument	i_ctx_p		8989600	0					
ANR	8989765	Identifier	i_ctx_p		8989600	0					
ANR	8989766	Argument	& CIEdict1		8989600	1					
ANR	8989767	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989768	UnaryOperator	&		8989600	0					
ANR	8989769	Identifier	CIEdict1		8989600	1					
ANR	8989770	Argument	"( char * ) ""DecodeABC"""		8989600	2					
ANR	8989771	CastExpression	"( char * ) ""DecodeABC"""		8989600	0					
ANR	8989772	CastTarget	char *		8989600	0					
ANR	8989773	PrimaryExpression	"""DecodeABC"""		8989600	1					
ANR	8989774	Argument	md5		8989600	3					
ANR	8989775	Identifier	md5		8989600	0					
ANR	8989776	ReturnStatement	return 0 ;	2928:8:93615:93623	8989600	1	True				
ANR	8989777	PrimaryExpression	0		8989600	0					
ANR	8989778	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		8989600	11					
ANR	8989779	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2929:8:93633:93690	8989600	0	True				
ANR	8989780	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8989600	0					
ANR	8989781	UnaryOperator	!		8989600	0					
ANR	8989782	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		8989600	1					
ANR	8989783	Callee	hashdictkey		8989600	0					
ANR	8989784	Identifier	hashdictkey		8989600	0					
ANR	8989785	ArgumentList	i_ctx_p		8989600	1					
ANR	8989786	Argument	i_ctx_p		8989600	0					
ANR	8989787	Identifier	i_ctx_p		8989600	0					
ANR	8989788	Argument	& CIEdict1		8989600	1					
ANR	8989789	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989790	UnaryOperator	&		8989600	0					
ANR	8989791	Identifier	CIEdict1		8989600	1					
ANR	8989792	Argument	"( char * ) ""MatrixABC"""		8989600	2					
ANR	8989793	CastExpression	"( char * ) ""MatrixABC"""		8989600	0					
ANR	8989794	CastTarget	char *		8989600	0					
ANR	8989795	PrimaryExpression	"""MatrixABC"""		8989600	1					
ANR	8989796	Argument	md5		8989600	3					
ANR	8989797	Identifier	md5		8989600	0					
ANR	8989798	ReturnStatement	return 0 ;	2930:8:93701:93709	8989600	1	True				
ANR	8989799	PrimaryExpression	0		8989600	0					
ANR	8989800	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		8989600	12					
ANR	8989801	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2931:8:93719:93775	8989600	0	True				
ANR	8989802	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8989600	0					
ANR	8989803	UnaryOperator	!		8989600	0					
ANR	8989804	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		8989600	1					
ANR	8989805	Callee	hashdictkey		8989600	0					
ANR	8989806	Identifier	hashdictkey		8989600	0					
ANR	8989807	ArgumentList	i_ctx_p		8989600	1					
ANR	8989808	Argument	i_ctx_p		8989600	0					
ANR	8989809	Identifier	i_ctx_p		8989600	0					
ANR	8989810	Argument	& CIEdict1		8989600	1					
ANR	8989811	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989812	UnaryOperator	&		8989600	0					
ANR	8989813	Identifier	CIEdict1		8989600	1					
ANR	8989814	Argument	"( char * ) ""RangeLMN"""		8989600	2					
ANR	8989815	CastExpression	"( char * ) ""RangeLMN"""		8989600	0					
ANR	8989816	CastTarget	char *		8989600	0					
ANR	8989817	PrimaryExpression	"""RangeLMN"""		8989600	1					
ANR	8989818	Argument	md5		8989600	3					
ANR	8989819	Identifier	md5		8989600	0					
ANR	8989820	ReturnStatement	return 0 ;	2932:8:93786:93794	8989600	1	True				
ANR	8989821	PrimaryExpression	0		8989600	0					
ANR	8989822	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		8989600	13					
ANR	8989823	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2933:8:93804:93861	8989600	0	True				
ANR	8989824	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8989600	0					
ANR	8989825	UnaryOperator	!		8989600	0					
ANR	8989826	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		8989600	1					
ANR	8989827	Callee	hashdictkey		8989600	0					
ANR	8989828	Identifier	hashdictkey		8989600	0					
ANR	8989829	ArgumentList	i_ctx_p		8989600	1					
ANR	8989830	Argument	i_ctx_p		8989600	0					
ANR	8989831	Identifier	i_ctx_p		8989600	0					
ANR	8989832	Argument	& CIEdict1		8989600	1					
ANR	8989833	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989834	UnaryOperator	&		8989600	0					
ANR	8989835	Identifier	CIEdict1		8989600	1					
ANR	8989836	Argument	"( char * ) ""DecodeLMN"""		8989600	2					
ANR	8989837	CastExpression	"( char * ) ""DecodeLMN"""		8989600	0					
ANR	8989838	CastTarget	char *		8989600	0					
ANR	8989839	PrimaryExpression	"""DecodeLMN"""		8989600	1					
ANR	8989840	Argument	md5		8989600	3					
ANR	8989841	Identifier	md5		8989600	0					
ANR	8989842	ReturnStatement	return 0 ;	2934:8:93872:93880	8989600	1	True				
ANR	8989843	PrimaryExpression	0		8989600	0					
ANR	8989844	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		8989600	14					
ANR	8989845	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2935:8:93890:93946	8989600	0	True				
ANR	8989846	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8989600	0					
ANR	8989847	UnaryOperator	!		8989600	0					
ANR	8989848	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		8989600	1					
ANR	8989849	Callee	hashdictkey		8989600	0					
ANR	8989850	Identifier	hashdictkey		8989600	0					
ANR	8989851	ArgumentList	i_ctx_p		8989600	1					
ANR	8989852	Argument	i_ctx_p		8989600	0					
ANR	8989853	Identifier	i_ctx_p		8989600	0					
ANR	8989854	Argument	& CIEdict1		8989600	1					
ANR	8989855	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989856	UnaryOperator	&		8989600	0					
ANR	8989857	Identifier	CIEdict1		8989600	1					
ANR	8989858	Argument	"( char * ) ""MatrixMN"""		8989600	2					
ANR	8989859	CastExpression	"( char * ) ""MatrixMN"""		8989600	0					
ANR	8989860	CastTarget	char *		8989600	0					
ANR	8989861	PrimaryExpression	"""MatrixMN"""		8989600	1					
ANR	8989862	Argument	md5		8989600	3					
ANR	8989863	Identifier	md5		8989600	0					
ANR	8989864	ReturnStatement	return 0 ;	2936:8:93957:93965	8989600	1	True				
ANR	8989865	PrimaryExpression	0		8989600	0					
ANR	8989866	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 ) )"		8989600	15					
ANR	8989867	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"	2937:8:93975:94032	8989600	0	True				
ANR	8989868	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"		8989600	0					
ANR	8989869	UnaryOperator	!		8989600	0					
ANR	8989870	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"		8989600	1					
ANR	8989871	Callee	hashdictkey		8989600	0					
ANR	8989872	Identifier	hashdictkey		8989600	0					
ANR	8989873	ArgumentList	i_ctx_p		8989600	1					
ANR	8989874	Argument	i_ctx_p		8989600	0					
ANR	8989875	Identifier	i_ctx_p		8989600	0					
ANR	8989876	Argument	& CIEdict1		8989600	1					
ANR	8989877	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989878	UnaryOperator	&		8989600	0					
ANR	8989879	Identifier	CIEdict1		8989600	1					
ANR	8989880	Argument	"( char * ) ""RangeDEFG"""		8989600	2					
ANR	8989881	CastExpression	"( char * ) ""RangeDEFG"""		8989600	0					
ANR	8989882	CastTarget	char *		8989600	0					
ANR	8989883	PrimaryExpression	"""RangeDEFG"""		8989600	1					
ANR	8989884	Argument	md5		8989600	3					
ANR	8989885	Identifier	md5		8989600	0					
ANR	8989886	ReturnStatement	return 0 ;	2938:8:94043:94051	8989600	1	True				
ANR	8989887	PrimaryExpression	0		8989600	0					
ANR	8989888	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 ) )"		8989600	16					
ANR	8989889	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"	2939:8:94061:94119	8989600	0	True				
ANR	8989890	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"		8989600	0					
ANR	8989891	UnaryOperator	!		8989600	0					
ANR	8989892	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"		8989600	1					
ANR	8989893	Callee	hashdictkey		8989600	0					
ANR	8989894	Identifier	hashdictkey		8989600	0					
ANR	8989895	ArgumentList	i_ctx_p		8989600	1					
ANR	8989896	Argument	i_ctx_p		8989600	0					
ANR	8989897	Identifier	i_ctx_p		8989600	0					
ANR	8989898	Argument	& CIEdict1		8989600	1					
ANR	8989899	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989900	UnaryOperator	&		8989600	0					
ANR	8989901	Identifier	CIEdict1		8989600	1					
ANR	8989902	Argument	"( char * ) ""DecodeDEFG"""		8989600	2					
ANR	8989903	CastExpression	"( char * ) ""DecodeDEFG"""		8989600	0					
ANR	8989904	CastTarget	char *		8989600	0					
ANR	8989905	PrimaryExpression	"""DecodeDEFG"""		8989600	1					
ANR	8989906	Argument	md5		8989600	3					
ANR	8989907	Identifier	md5		8989600	0					
ANR	8989908	ReturnStatement	return 0 ;	2940:8:94130:94138	8989600	1	True				
ANR	8989909	PrimaryExpression	0		8989600	0					
ANR	8989910	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 ) )"		8989600	17					
ANR	8989911	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"	2941:8:94148:94205	8989600	0	True				
ANR	8989912	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"		8989600	0					
ANR	8989913	UnaryOperator	!		8989600	0					
ANR	8989914	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"		8989600	1					
ANR	8989915	Callee	hashdictkey		8989600	0					
ANR	8989916	Identifier	hashdictkey		8989600	0					
ANR	8989917	ArgumentList	i_ctx_p		8989600	1					
ANR	8989918	Argument	i_ctx_p		8989600	0					
ANR	8989919	Identifier	i_ctx_p		8989600	0					
ANR	8989920	Argument	& CIEdict1		8989600	1					
ANR	8989921	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989922	UnaryOperator	&		8989600	0					
ANR	8989923	Identifier	CIEdict1		8989600	1					
ANR	8989924	Argument	"( char * ) ""RangeHIJK"""		8989600	2					
ANR	8989925	CastExpression	"( char * ) ""RangeHIJK"""		8989600	0					
ANR	8989926	CastTarget	char *		8989600	0					
ANR	8989927	PrimaryExpression	"""RangeHIJK"""		8989600	1					
ANR	8989928	Argument	md5		8989600	3					
ANR	8989929	Identifier	md5		8989600	0					
ANR	8989930	ReturnStatement	return 0 ;	2942:8:94216:94224	8989600	1	True				
ANR	8989931	PrimaryExpression	0		8989600	0					
ANR	8989932	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 ) )"		8989600	18					
ANR	8989933	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"	2943:8:94234:94287	8989600	0	True				
ANR	8989934	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		8989600	0					
ANR	8989935	UnaryOperator	!		8989600	0					
ANR	8989936	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		8989600	1					
ANR	8989937	Callee	hashdictkey		8989600	0					
ANR	8989938	Identifier	hashdictkey		8989600	0					
ANR	8989939	ArgumentList	i_ctx_p		8989600	1					
ANR	8989940	Argument	i_ctx_p		8989600	0					
ANR	8989941	Identifier	i_ctx_p		8989600	0					
ANR	8989942	Argument	& CIEdict1		8989600	1					
ANR	8989943	UnaryOperationExpression	& CIEdict1		8989600	0					
ANR	8989944	UnaryOperator	&		8989600	0					
ANR	8989945	Identifier	CIEdict1		8989600	1					
ANR	8989946	Argument	"( char * ) ""Table"""		8989600	2					
ANR	8989947	CastExpression	"( char * ) ""Table"""		8989600	0					
ANR	8989948	CastTarget	char *		8989600	0					
ANR	8989949	PrimaryExpression	"""Table"""		8989600	1					
ANR	8989950	Argument	md5		8989600	3					
ANR	8989951	Identifier	md5		8989600	0					
ANR	8989952	ReturnStatement	return 0 ;	2944:8:94298:94306	8989600	1	True				
ANR	8989953	PrimaryExpression	0		8989600	0					
ANR	8989954	ReturnStatement	return 1 ;	2945:4:94312:94320	8989600	19	True				
ANR	8989955	PrimaryExpression	1		8989600	0					
ANR	8989956	ReturnType	static int		8989600	1					
ANR	8989957	Identifier	hashciedefgspace		8989600	2					
ANR	8989958	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		8989600	3					
ANR	8989959	Parameter	i_ctx_t * i_ctx_p	2905:28:92794:92809	8989600	0	True				
ANR	8989960	ParameterType	i_ctx_t *		8989600	0					
ANR	8989961	Identifier	i_ctx_p		8989600	1					
ANR	8989962	Parameter	ref * space	2905:46:92812:92821	8989600	1	True				
ANR	8989963	ParameterType	ref *		8989600	0					
ANR	8989964	Identifier	space		8989600	1					
ANR	8989965	Parameter	gs_md5_state_t * md5	2905:58:92824:92842	8989600	2	True				
ANR	8989966	ParameterType	gs_md5_state_t *		8989600	0					
ANR	8989967	Identifier	md5		8989600	1					
ANR	8989968	CFGEntryNode	ENTRY		8989600		True				
ANR	8989969	CFGExitNode	EXIT		8989600		True				
ANR	8989970	Symbol	spacename		8989600						
ANR	8989971	Symbol	hashdictkey		8989600						
ANR	8989972	Symbol	code		8989600						
ANR	8989973	Symbol	& spacename		8989600						
ANR	8989974	Symbol	array_get		8989600						
ANR	8989975	Symbol	& CIEdict1		8989600						
ANR	8989976	Symbol	space		8989600						
ANR	8989977	Symbol	spacename . value . pname		8989600						
ANR	8989978	Symbol	i_ctx_p		8989600						
ANR	8989979	Symbol	& spacename . value . pname		8989600						
ANR	8989980	Symbol	spacename . value		8989600						
ANR	8989981	Symbol	& spacename . value		8989600						
ANR	8989982	Symbol	CIEdict1		8989600						
ANR	8989983	Symbol	imemory		8989600						
ANR	8989984	Symbol	md5		8989600						
ANR	8989985	Function	setciedefgspace	2948:0:94325:96080							
ANR	8989986	FunctionDef	"setciedefgspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8989985	0					
ANR	8989987	CompoundStatement		2949:0:94416:96080	8989985	0					
ANR	8989988	IdentifierDeclStatement	int code = 0 ;	2950:4:94422:94434	8989985	0	True				
ANR	8989989	IdentifierDecl	code = 0		8989985	0					
ANR	8989990	IdentifierDeclType	int		8989985	0					
ANR	8989991	Identifier	code		8989985	1					
ANR	8989992	AssignmentExpression	code = 0		8989985	2		=			
ANR	8989993	Identifier	code		8989985	0					
ANR	8989994	PrimaryExpression	0		8989985	1					
ANR	8989995	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2951:4:94440:94459	8989985	1	True				
ANR	8989996	IdentifierDecl	CIEDict		8989985	0					
ANR	8989997	IdentifierDeclType	ref		8989985	0					
ANR	8989998	Identifier	CIEDict		8989985	1					
ANR	8989999	IdentifierDecl	* nocie		8989985	1					
ANR	8990000	IdentifierDeclType	ref *		8989985	0					
ANR	8990001	Identifier	nocie		8989985	1					
ANR	8990002	IdentifierDeclStatement	ulong dictkey ;	2952:4:94465:94478	8989985	2	True				
ANR	8990003	IdentifierDecl	dictkey		8989985	0					
ANR	8990004	IdentifierDeclType	ulong		8989985	0					
ANR	8990005	Identifier	dictkey		8989985	1					
ANR	8990006	IdentifierDeclStatement	gs_md5_state_t md5 ;	2953:4:94484:94502	8989985	3	True				
ANR	8990007	IdentifierDecl	md5		8989985	0					
ANR	8990008	IdentifierDeclType	gs_md5_state_t		8989985	0					
ANR	8990009	Identifier	md5		8989985	1					
ANR	8990010	IdentifierDeclStatement	byte key [ 16 ] ;	2954:4:94508:94520	8989985	4	True				
ANR	8990011	IdentifierDecl	key [ 16 ]		8989985	0					
ANR	8990012	IdentifierDeclType	byte [ 16 ]		8989985	0					
ANR	8990013	Identifier	key		8989985	1					
ANR	8990014	PrimaryExpression	16		8989985	2					
ANR	8990015	IfStatement	if ( i_ctx_p -> language_level < 3 )		8989985	5					
ANR	8990016	Condition	i_ctx_p -> language_level < 3	2956:8:94531:94557	8989985	0	True				
ANR	8990017	RelationalExpression	i_ctx_p -> language_level < 3		8989985	0		<			
ANR	8990018	PtrMemberAccess	i_ctx_p -> language_level		8989985	0					
ANR	8990019	Identifier	i_ctx_p		8989985	0					
ANR	8990020	Identifier	language_level		8989985	1					
ANR	8990021	PrimaryExpression	3		8989985	1					
ANR	8990022	ExpressionStatement	return_error ( gs_error_undefined )	2957:8:94568:94600	8989985	1	True				
ANR	8990023	CallExpression	return_error ( gs_error_undefined )		8989985	0					
ANR	8990024	Callee	return_error		8989985	0					
ANR	8990025	Identifier	return_error		8989985	0					
ANR	8990026	ArgumentList	gs_error_undefined		8989985	1					
ANR	8990027	Argument	gs_error_undefined		8989985	0					
ANR	8990028	Identifier	gs_error_undefined		8989985	0					
ANR	8990029	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2959:4:94607:94659	8989985	6	True				
ANR	8990030	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8989985	0		=			
ANR	8990031	Identifier	code		8989985	0					
ANR	8990032	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		8989985	1					
ANR	8990033	Callee	dict_find_string		8989985	0					
ANR	8990034	Identifier	dict_find_string		8989985	0					
ANR	8990035	ArgumentList	systemdict		8989985	1					
ANR	8990036	Argument	systemdict		8989985	0					
ANR	8990037	Identifier	systemdict		8989985	0					
ANR	8990038	Argument	"""NOCIE"""		8989985	1					
ANR	8990039	PrimaryExpression	"""NOCIE"""		8989985	0					
ANR	8990040	Argument	& nocie		8989985	2					
ANR	8990041	UnaryOperationExpression	& nocie		8989985	0					
ANR	8990042	UnaryOperator	&		8989985	0					
ANR	8990043	Identifier	nocie		8989985	1					
ANR	8990044	IfStatement	if ( code > 0 )		8989985	7					
ANR	8990045	Condition	code > 0	2960:8:94669:94676	8989985	0	True				
ANR	8990046	RelationalExpression	code > 0		8989985	0		>			
ANR	8990047	Identifier	code		8989985	0					
ANR	8990048	PrimaryExpression	0		8989985	1					
ANR	8990049	CompoundStatement		12:18:262:262	8989985	1					
ANR	8990050	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		8989985	0					
ANR	8990051	Condition	"! r_has_type ( nocie , t_boolean )"	2961:12:94693:94721	8989985	0	True				
ANR	8990052	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		8989985	0					
ANR	8990053	UnaryOperator	!		8989985	0					
ANR	8990054	CallExpression	"r_has_type ( nocie , t_boolean )"		8989985	1					
ANR	8990055	Callee	r_has_type		8989985	0					
ANR	8990056	Identifier	r_has_type		8989985	0					
ANR	8990057	ArgumentList	nocie		8989985	1					
ANR	8990058	Argument	nocie		8989985	0					
ANR	8990059	Identifier	nocie		8989985	0					
ANR	8990060	Argument	t_boolean		8989985	1					
ANR	8990061	Identifier	t_boolean		8989985	0					
ANR	8990062	ExpressionStatement	return_error ( gs_error_typecheck )	2962:12:94736:94768	8989985	1	True				
ANR	8990063	CallExpression	return_error ( gs_error_typecheck )		8989985	0					
ANR	8990064	Callee	return_error		8989985	0					
ANR	8990065	Identifier	return_error		8989985	0					
ANR	8990066	ArgumentList	gs_error_typecheck		8989985	1					
ANR	8990067	Argument	gs_error_typecheck		8989985	0					
ANR	8990068	Identifier	gs_error_typecheck		8989985	0					
ANR	8990069	IfStatement	if ( nocie -> value . boolval )		8989985	1					
ANR	8990070	Condition	nocie -> value . boolval	2963:12:94782:94801	8989985	0	True				
ANR	8990071	MemberAccess	nocie -> value . boolval		8989985	0					
ANR	8990072	PtrMemberAccess	nocie -> value		8989985	0					
ANR	8990073	Identifier	nocie		8989985	0					
ANR	8990074	Identifier	value		8989985	1					
ANR	8990075	Identifier	boolval		8989985	1					
ANR	8990076	ReturnStatement	"return setcmykspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2964:12:94816:94863	8989985	1	True				
ANR	8990077	CallExpression	"setcmykspace ( i_ctx_p , r , stage , cont , 1 )"		8989985	0					
ANR	8990078	Callee	setcmykspace		8989985	0					
ANR	8990079	Identifier	setcmykspace		8989985	0					
ANR	8990080	ArgumentList	i_ctx_p		8989985	1					
ANR	8990081	Argument	i_ctx_p		8989985	0					
ANR	8990082	Identifier	i_ctx_p		8989985	0					
ANR	8990083	Argument	r		8989985	1					
ANR	8990084	Identifier	r		8989985	0					
ANR	8990085	Argument	stage		8989985	2					
ANR	8990086	Identifier	stage		8989985	0					
ANR	8990087	Argument	cont		8989985	3					
ANR	8990088	Identifier	cont		8989985	0					
ANR	8990089	Argument	1		8989985	4					
ANR	8990090	PrimaryExpression	1		8989985	0					
ANR	8990091	ExpressionStatement	* cont = 0	2967:4:94876:94885	8989985	8	True				
ANR	8990092	AssignmentExpression	* cont = 0		8989985	0		=			
ANR	8990093	UnaryOperationExpression	* cont		8989985	0					
ANR	8990094	UnaryOperator	*		8989985	0					
ANR	8990095	Identifier	cont		8989985	1					
ANR	8990096	PrimaryExpression	0		8989985	1					
ANR	8990097	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2968:4:94891:94932	8989985	9	True				
ANR	8990098	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		8989985	0		=			
ANR	8990099	Identifier	code		8989985	0					
ANR	8990100	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		8989985	1					
ANR	8990101	Callee	array_get		8989985	0					
ANR	8990102	Identifier	array_get		8989985	0					
ANR	8990103	ArgumentList	imemory		8989985	1					
ANR	8990104	Argument	imemory		8989985	0					
ANR	8990105	Identifier	imemory		8989985	0					
ANR	8990106	Argument	r		8989985	1					
ANR	8990107	Identifier	r		8989985	0					
ANR	8990108	Argument	1		8989985	2					
ANR	8990109	PrimaryExpression	1		8989985	0					
ANR	8990110	Argument	& CIEDict		8989985	3					
ANR	8990111	UnaryOperationExpression	& CIEDict		8989985	0					
ANR	8990112	UnaryOperator	&		8989985	0					
ANR	8990113	Identifier	CIEDict		8989985	1					
ANR	8990114	IfStatement	if ( code < 0 )		8989985	10					
ANR	8990115	Condition	code < 0	2969:8:94942:94949	8989985	0	True				
ANR	8990116	RelationalExpression	code < 0		8989985	0		<			
ANR	8990117	Identifier	code		8989985	0					
ANR	8990118	PrimaryExpression	0		8989985	1					
ANR	8990119	ReturnStatement	return code ;	2970:8:94960:94971	8989985	1	True				
ANR	8990120	Identifier	code		8989985	0					
ANR	8990121	IfStatement	if ( ( * stage ) > 0 )		8989985	11					
ANR	8990122	Condition	( * stage ) > 0	2971:8:94981:94992	8989985	0	True				
ANR	8990123	RelationalExpression	( * stage ) > 0		8989985	0		>			
ANR	8990124	UnaryOperationExpression	* stage		8989985	0					
ANR	8990125	UnaryOperator	*		8989985	0					
ANR	8990126	Identifier	stage		8989985	1					
ANR	8990127	PrimaryExpression	0		8989985	1					
ANR	8990128	CompoundStatement		25:8:616:621	8989985	1					
ANR	8990129	IdentifierDeclStatement	gs_client_color cc ;	2972:8:95005:95023	8989985	0	True				
ANR	8990130	IdentifierDecl	cc		8989985	0					
ANR	8990131	IdentifierDeclType	gs_client_color		8989985	0					
ANR	8990132	Identifier	cc		8989985	1					
ANR	8990133	IdentifierDeclStatement	int i ;	2973:8:95033:95038	8989985	1	True				
ANR	8990134	IdentifierDecl	i		8989985	0					
ANR	8990135	IdentifierDeclType	int		8989985	0					
ANR	8990136	Identifier	i		8989985	1					
ANR	8990137	ExpressionStatement	cc . pattern = 0x00	2975:8:95049:95066	8989985	2	True				
ANR	8990138	AssignmentExpression	cc . pattern = 0x00		8989985	0		=			
ANR	8990139	MemberAccess	cc . pattern		8989985	0					
ANR	8990140	Identifier	cc		8989985	0					
ANR	8990141	Identifier	pattern		8989985	1					
ANR	8990142	PrimaryExpression	0x00		8989985	1					
ANR	8990143	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8989985	3					
ANR	8990144	ForInit	i = 0 ;	2976:13:95081:95084	8989985	0	True				
ANR	8990145	AssignmentExpression	i = 0		8989985	0		=			
ANR	8990146	Identifier	i		8989985	0					
ANR	8990147	PrimaryExpression	0		8989985	1					
ANR	8990148	Condition	i < 4	2976:17:95085:95087	8989985	1	True				
ANR	8990149	RelationalExpression	i < 4		8989985	0		<			
ANR	8990150	Identifier	i		8989985	0					
ANR	8990151	PrimaryExpression	4		8989985	1					
ANR	8990152	PostIncDecOperationExpression	i ++	2976:21:95089:95091	8989985	2	True				
ANR	8990153	Identifier	i		8989985	0					
ANR	8990154	IncDec	++		8989985	1					
ANR	8990155	ExpressionStatement	cc . paint . values [ i ] = 0	2977:12:95106:95128	8989985	3	True				
ANR	8990156	AssignmentExpression	cc . paint . values [ i ] = 0		8989985	0		=			
ANR	8990157	ArrayIndexing	cc . paint . values [ i ]		8989985	0					
ANR	8990158	MemberAccess	cc . paint . values		8989985	0					
ANR	8990159	MemberAccess	cc . paint		8989985	0					
ANR	8990160	Identifier	cc		8989985	0					
ANR	8990161	Identifier	paint		8989985	1					
ANR	8990162	Identifier	values		8989985	1					
ANR	8990163	Identifier	i		8989985	1					
ANR	8990164	PrimaryExpression	0		8989985	1					
ANR	8990165	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2978:8:95138:95166	8989985	4	True				
ANR	8990166	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8989985	0		=			
ANR	8990167	Identifier	code		8989985	0					
ANR	8990168	CallExpression	"gs_setcolor ( igs , & cc )"		8989985	1					
ANR	8990169	Callee	gs_setcolor		8989985	0					
ANR	8990170	Identifier	gs_setcolor		8989985	0					
ANR	8990171	ArgumentList	igs		8989985	1					
ANR	8990172	Argument	igs		8989985	0					
ANR	8990173	Identifier	igs		8989985	0					
ANR	8990174	Argument	& cc		8989985	1					
ANR	8990175	UnaryOperationExpression	& cc		8989985	0					
ANR	8990176	UnaryOperator	&		8989985	0					
ANR	8990177	Identifier	cc		8989985	1					
ANR	8990178	ExpressionStatement	* stage = 0	2979:8:95176:95186	8989985	5	True				
ANR	8990179	AssignmentExpression	* stage = 0		8989985	0		=			
ANR	8990180	UnaryOperationExpression	* stage		8989985	0					
ANR	8990181	UnaryOperator	*		8989985	0					
ANR	8990182	Identifier	stage		8989985	1					
ANR	8990183	PrimaryExpression	0		8989985	1					
ANR	8990184	ReturnStatement	return code ;	2980:8:95196:95207	8989985	6	True				
ANR	8990185	Identifier	code		8989985	0					
ANR	8990186	ExpressionStatement	gs_md5_init ( & md5 )	2982:4:95219:95236	8989985	12	True				
ANR	8990187	CallExpression	gs_md5_init ( & md5 )		8989985	0					
ANR	8990188	Callee	gs_md5_init		8989985	0					
ANR	8990189	Identifier	gs_md5_init		8989985	0					
ANR	8990190	ArgumentList	& md5		8989985	1					
ANR	8990191	Argument	& md5		8989985	0					
ANR	8990192	UnaryOperationExpression	& md5		8989985	0					
ANR	8990193	UnaryOperator	&		8989985	0					
ANR	8990194	Identifier	md5		8989985	1					
ANR	8990195	ExpressionStatement	dictkey = 0	2987:4:95427:95438	8989985	13	True				
ANR	8990196	AssignmentExpression	dictkey = 0		8989985	0		=			
ANR	8990197	Identifier	dictkey		8989985	0					
ANR	8990198	PrimaryExpression	0		8989985	1					
ANR	8990199	IfStatement	"if ( hashciedefgspace ( i_ctx_p , r , & md5 ) )"		8989985	14					
ANR	8990200	Condition	"hashciedefgspace ( i_ctx_p , r , & md5 )"	2988:8:95448:95481	8989985	0	True				
ANR	8990201	CallExpression	"hashciedefgspace ( i_ctx_p , r , & md5 )"		8989985	0					
ANR	8990202	Callee	hashciedefgspace		8989985	0					
ANR	8990203	Identifier	hashciedefgspace		8989985	0					
ANR	8990204	ArgumentList	i_ctx_p		8989985	1					
ANR	8990205	Argument	i_ctx_p		8989985	0					
ANR	8990206	Identifier	i_ctx_p		8989985	0					
ANR	8990207	Argument	r		8989985	1					
ANR	8990208	Identifier	r		8989985	0					
ANR	8990209	Argument	& md5		8989985	2					
ANR	8990210	UnaryOperationExpression	& md5		8989985	0					
ANR	8990211	UnaryOperator	&		8989985	0					
ANR	8990212	Identifier	md5		8989985	1					
ANR	8990213	CompoundStatement		40:44:1067:1067	8989985	1					
ANR	8990214	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2995:8:95838:95862	8989985	0	True				
ANR	8990215	CallExpression	"gs_md5_finish ( & md5 , key )"		8989985	0					
ANR	8990216	Callee	gs_md5_finish		8989985	0					
ANR	8990217	Identifier	gs_md5_finish		8989985	0					
ANR	8990218	ArgumentList	& md5		8989985	1					
ANR	8990219	Argument	& md5		8989985	0					
ANR	8990220	UnaryOperationExpression	& md5		8989985	0					
ANR	8990221	UnaryOperator	&		8989985	0					
ANR	8990222	Identifier	md5		8989985	1					
ANR	8990223	Argument	key		8989985	1					
ANR	8990224	Identifier	key		8989985	0					
ANR	8990225	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2996:8:95872:95925	8989985	1	True				
ANR	8990226	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985	0		=			
ANR	8990227	Identifier	dictkey		8989985	0					
ANR	8990228	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985	1					
ANR	8990229	UnaryOperator	*		8989985	0					
ANR	8990230	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985	1					
ANR	8990231	CastTarget	ulong *		8989985	0					
ANR	8990232	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985	1					
ANR	8990233	UnaryOperator	&		8989985	0					
ANR	8990234	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985	1					
ANR	8990235	Identifier	key		8989985	0					
ANR	8990236	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		8989985	1		-			
ANR	8990237	SizeofExpression	sizeof ( key )		8989985	0					
ANR	8990238	Sizeof	sizeof		8989985	0					
ANR	8990239	SizeofOperand	key		8989985	1					
ANR	8990240	SizeofExpression	sizeof ( ulong )		8989985	1					
ANR	8990241	Sizeof	sizeof		8989985	0					
ANR	8990242	SizeofOperand	ulong		8989985	1					
ANR	8990243	ElseStatement	else		8989985	0					
ANR	8990244	CompoundStatement		49:11:1521:1521	8989985	0					
ANR	8990245	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2998:8:95948:95972	8989985	0	True				
ANR	8990246	CallExpression	"gs_md5_finish ( & md5 , key )"		8989985	0					
ANR	8990247	Callee	gs_md5_finish		8989985	0					
ANR	8990248	Identifier	gs_md5_finish		8989985	0					
ANR	8990249	ArgumentList	& md5		8989985	1					
ANR	8990250	Argument	& md5		8989985	0					
ANR	8990251	UnaryOperationExpression	& md5		8989985	0					
ANR	8990252	UnaryOperator	&		8989985	0					
ANR	8990253	Identifier	md5		8989985	1					
ANR	8990254	Argument	key		8989985	1					
ANR	8990255	Identifier	key		8989985	0					
ANR	8990256	ExpressionStatement	"code = ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"	3000:4:95984:96030	8989985	15	True				
ANR	8990257	AssignmentExpression	"code = ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"		8989985	0		=			
ANR	8990258	Identifier	code		8989985	0					
ANR	8990259	CallExpression	"ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"		8989985	1					
ANR	8990260	Callee	ciedefgspace		8989985	0					
ANR	8990261	Identifier	ciedefgspace		8989985	0					
ANR	8990262	ArgumentList	i_ctx_p		8989985	1					
ANR	8990263	Argument	i_ctx_p		8989985	0					
ANR	8990264	Identifier	i_ctx_p		8989985	0					
ANR	8990265	Argument	& CIEDict		8989985	1					
ANR	8990266	UnaryOperationExpression	& CIEDict		8989985	0					
ANR	8990267	UnaryOperator	&		8989985	0					
ANR	8990268	Identifier	CIEDict		8989985	1					
ANR	8990269	Argument	dictkey		8989985	2					
ANR	8990270	Identifier	dictkey		8989985	0					
ANR	8990271	ExpressionStatement	* cont = 1	3001:4:96036:96045	8989985	16	True				
ANR	8990272	AssignmentExpression	* cont = 1		8989985	0		=			
ANR	8990273	UnaryOperationExpression	* cont		8989985	0					
ANR	8990274	UnaryOperator	*		8989985	0					
ANR	8990275	Identifier	cont		8989985	1					
ANR	8990276	PrimaryExpression	1		8989985	1					
ANR	8990277	ExpressionStatement	( * stage ) ++	3002:4:96051:96061	8989985	17	True				
ANR	8990278	PostIncDecOperationExpression	( * stage ) ++		8989985	0					
ANR	8990279	UnaryOperationExpression	* stage		8989985	0					
ANR	8990280	UnaryOperator	*		8989985	0					
ANR	8990281	Identifier	stage		8989985	1					
ANR	8990282	IncDec	++		8989985	1					
ANR	8990283	ReturnStatement	return code ;	3003:4:96067:96078	8989985	18	True				
ANR	8990284	Identifier	code		8989985	0					
ANR	8990285	ReturnType	static int		8989985	1					
ANR	8990286	Identifier	setciedefgspace		8989985	2					
ANR	8990287	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8989985	3					
ANR	8990288	Parameter	i_ctx_t * i_ctx_p	2948:27:94352:94368	8989985	0	True				
ANR	8990289	ParameterType	i_ctx_t *		8989985	0					
ANR	8990290	Identifier	i_ctx_p		8989985	1					
ANR	8990291	Parameter	ref * r	2948:46:94371:94376	8989985	1	True				
ANR	8990292	ParameterType	ref *		8989985	0					
ANR	8990293	Identifier	r		8989985	1					
ANR	8990294	Parameter	int * stage	2948:54:94379:94388	8989985	2	True				
ANR	8990295	ParameterType	int *		8989985	0					
ANR	8990296	Identifier	stage		8989985	1					
ANR	8990297	Parameter	int * cont	2948:66:94391:94399	8989985	3	True				
ANR	8990298	ParameterType	int *		8989985	0					
ANR	8990299	Identifier	cont		8989985	1					
ANR	8990300	Parameter	int CIESubst	2948:77:94402:94413	8989985	4	True				
ANR	8990301	ParameterType	int		8989985	0					
ANR	8990302	Identifier	CIESubst		8989985	1					
ANR	8990303	CFGEntryNode	ENTRY		8989985		True				
ANR	8990304	CFGExitNode	EXIT		8989985		True				
ANR	8990305	Symbol	cc . pattern		8989985						
ANR	8990306	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		8989985						
ANR	8990307	Symbol	code		8989985						
ANR	8990308	Symbol	i_ctx_p -> language_level		8989985						
ANR	8990309	Symbol	* cc		8989985						
ANR	8990310	Symbol	nocie -> value		8989985						
ANR	8990311	Symbol	gs_error_undefined		8989985						
ANR	8990312	Symbol	gs_setcolor		8989985						
ANR	8990313	Symbol	* key		8989985						
ANR	8990314	Symbol	* nocie		8989985						
ANR	8990315	Symbol	& cc		8989985						
ANR	8990316	Symbol	nocie -> value . boolval		8989985						
ANR	8990317	Symbol	r_has_type		8989985						
ANR	8990318	Symbol	gs_error_typecheck		8989985						
ANR	8990319	Symbol	igs		8989985						
ANR	8990320	Symbol	* cc . paint . values		8989985						
ANR	8990321	Symbol	* i_ctx_p		8989985						
ANR	8990322	Symbol	imemory		8989985						
ANR	8990323	Symbol	cont		8989985						
ANR	8990324	Symbol	nocie		8989985						
ANR	8990325	Symbol	CIESubst		8989985						
ANR	8990326	Symbol	key		8989985						
ANR	8990327	Symbol	cc		8989985						
ANR	8990328	Symbol	* stage		8989985						
ANR	8990329	Symbol	& md5		8989985						
ANR	8990330	Symbol	dict_find_string		8989985						
ANR	8990331	Symbol	array_get		8989985						
ANR	8990332	Symbol	hashciedefgspace		8989985						
ANR	8990333	Symbol	i		8989985						
ANR	8990334	Symbol	dictkey		8989985						
ANR	8990335	Symbol	& nocie		8989985						
ANR	8990336	Symbol	t_boolean		8989985						
ANR	8990337	Symbol	r		8989985						
ANR	8990338	Symbol	* cc . paint		8989985						
ANR	8990339	Symbol	* i		8989985						
ANR	8990340	Symbol	stage		8989985						
ANR	8990341	Symbol	CIEDict		8989985						
ANR	8990342	Symbol	* cont		8989985						
ANR	8990343	Symbol	& CIEDict		8989985						
ANR	8990344	Symbol	i_ctx_p		8989985						
ANR	8990345	Symbol	ciedefgspace		8989985						
ANR	8990346	Symbol	cc . paint		8989985						
ANR	8990347	Symbol	cc . paint . values		8989985						
ANR	8990348	Symbol	systemdict		8989985						
ANR	8990349	Symbol	md5		8989985						
ANR	8990350	Symbol	setcmykspace		8989985						
ANR	8990351	Function	validateciedefgspace	3005:0:96082:99927							
ANR	8990352	FunctionDef	"validateciedefgspace (i_ctx_t * i_ctx_p , ref * * r)"		8990351	0					
ANR	8990353	CompoundStatement		3006:0:96142:99927	8990351	0					
ANR	8990354	IdentifierDeclStatement	"int code = 0 , i , j ;"	3007:4:96148:96166	8990351	0	True				
ANR	8990355	IdentifierDecl	code = 0		8990351	0					
ANR	8990356	IdentifierDeclType	int		8990351	0					
ANR	8990357	Identifier	code		8990351	1					
ANR	8990358	AssignmentExpression	code = 0		8990351	2		=			
ANR	8990359	Identifier	code		8990351	0					
ANR	8990360	PrimaryExpression	0		8990351	1					
ANR	8990361	IdentifierDecl	i		8990351	1					
ANR	8990362	IdentifierDeclType	int		8990351	0					
ANR	8990363	Identifier	i		8990351	1					
ANR	8990364	IdentifierDecl	j		8990351	2					
ANR	8990365	IdentifierDeclType	int		8990351	0					
ANR	8990366	Identifier	j		8990351	1					
ANR	8990367	IdentifierDeclStatement	float value [ 8 ] ;	3008:4:96172:96186	8990351	1	True				
ANR	8990368	IdentifierDecl	value [ 8 ]		8990351	0					
ANR	8990369	IdentifierDeclType	float [ 8 ]		8990351	0					
ANR	8990370	Identifier	value		8990351	1					
ANR	8990371	PrimaryExpression	8		8990351	2					
ANR	8990372	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , tempref , arrayref , valref , * pref = & tempref ;"	3009:4:96192:96268	8990351	2	True				
ANR	8990373	IdentifierDecl	CIEdict		8990351	0					
ANR	8990374	IdentifierDeclType	ref		8990351	0					
ANR	8990375	Identifier	CIEdict		8990351	1					
ANR	8990376	IdentifierDecl	* CIEspace = * r		8990351	1					
ANR	8990377	IdentifierDeclType	ref *		8990351	0					
ANR	8990378	Identifier	CIEspace		8990351	1					
ANR	8990379	AssignmentExpression	* CIEspace = * r		8990351	2		=			
ANR	8990380	Identifier	CIEspace		8990351	0					
ANR	8990381	UnaryOperationExpression	* r		8990351	1					
ANR	8990382	UnaryOperator	*		8990351	0					
ANR	8990383	Identifier	r		8990351	1					
ANR	8990384	IdentifierDecl	tempref		8990351	2					
ANR	8990385	IdentifierDeclType	ref		8990351	0					
ANR	8990386	Identifier	tempref		8990351	1					
ANR	8990387	IdentifierDecl	arrayref		8990351	3					
ANR	8990388	IdentifierDeclType	ref		8990351	0					
ANR	8990389	Identifier	arrayref		8990351	1					
ANR	8990390	IdentifierDecl	valref		8990351	4					
ANR	8990391	IdentifierDeclType	ref		8990351	0					
ANR	8990392	Identifier	valref		8990351	1					
ANR	8990393	IdentifierDecl	* pref = & tempref		8990351	5					
ANR	8990394	IdentifierDeclType	ref *		8990351	0					
ANR	8990395	Identifier	pref		8990351	1					
ANR	8990396	AssignmentExpression	* pref = & tempref		8990351	2		=			
ANR	8990397	Identifier	pref		8990351	0					
ANR	8990398	UnaryOperationExpression	& tempref		8990351	1					
ANR	8990399	UnaryOperator	&		8990351	0					
ANR	8990400	Identifier	tempref		8990351	1					
ANR	8990401	IfStatement	if ( ! r_is_array ( CIEspace ) )		8990351	3					
ANR	8990402	Condition	! r_is_array ( CIEspace )	3011:8:96279:96299	8990351	0	True				
ANR	8990403	UnaryOperationExpression	! r_is_array ( CIEspace )		8990351	0					
ANR	8990404	UnaryOperator	!		8990351	0					
ANR	8990405	CallExpression	r_is_array ( CIEspace )		8990351	1					
ANR	8990406	Callee	r_is_array		8990351	0					
ANR	8990407	Identifier	r_is_array		8990351	0					
ANR	8990408	ArgumentList	CIEspace		8990351	1					
ANR	8990409	Argument	CIEspace		8990351	0					
ANR	8990410	Identifier	CIEspace		8990351	0					
ANR	8990411	ExpressionStatement	return_error ( gs_error_typecheck )	3012:8:96310:96342	8990351	1	True				
ANR	8990412	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990413	Callee	return_error		8990351	0					
ANR	8990414	Identifier	return_error		8990351	0					
ANR	8990415	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990416	Argument	gs_error_typecheck		8990351	0					
ANR	8990417	Identifier	gs_error_typecheck		8990351	0					
ANR	8990418	IfStatement	if ( r_size ( CIEspace ) != 2 )		8990351	4					
ANR	8990419	Condition	r_size ( CIEspace ) != 2	3014:8:96413:96433	8990351	0	True				
ANR	8990420	EqualityExpression	r_size ( CIEspace ) != 2		8990351	0		!=			
ANR	8990421	CallExpression	r_size ( CIEspace )		8990351	0					
ANR	8990422	Callee	r_size		8990351	0					
ANR	8990423	Identifier	r_size		8990351	0					
ANR	8990424	ArgumentList	CIEspace		8990351	1					
ANR	8990425	Argument	CIEspace		8990351	0					
ANR	8990426	Identifier	CIEspace		8990351	0					
ANR	8990427	PrimaryExpression	2		8990351	1					
ANR	8990428	ExpressionStatement	return_error ( gs_error_rangecheck )	3015:8:96444:96477	8990351	1	True				
ANR	8990429	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990430	Callee	return_error		8990351	0					
ANR	8990431	Identifier	return_error		8990351	0					
ANR	8990432	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990433	Argument	gs_error_rangecheck		8990351	0					
ANR	8990434	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990435	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	3017:4:96484:96532	8990351	5	True				
ANR	8990436	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		8990351	0		=			
ANR	8990437	Identifier	code		8990351	0					
ANR	8990438	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		8990351	1					
ANR	8990439	Callee	array_get		8990351	0					
ANR	8990440	Identifier	array_get		8990351	0					
ANR	8990441	ArgumentList	imemory		8990351	1					
ANR	8990442	Argument	imemory		8990351	0					
ANR	8990443	Identifier	imemory		8990351	0					
ANR	8990444	Argument	CIEspace		8990351	1					
ANR	8990445	Identifier	CIEspace		8990351	0					
ANR	8990446	Argument	1		8990351	2					
ANR	8990447	PrimaryExpression	1		8990351	0					
ANR	8990448	Argument	& CIEdict		8990351	3					
ANR	8990449	UnaryOperationExpression	& CIEdict		8990351	0					
ANR	8990450	UnaryOperator	&		8990351	0					
ANR	8990451	Identifier	CIEdict		8990351	1					
ANR	8990452	IfStatement	if ( code < 0 )		8990351	6					
ANR	8990453	Condition	code < 0	3018:8:96542:96549	8990351	0	True				
ANR	8990454	RelationalExpression	code < 0		8990351	0		<			
ANR	8990455	Identifier	code		8990351	0					
ANR	8990456	PrimaryExpression	0		8990351	1					
ANR	8990457	ReturnStatement	return code ;	3019:8:96560:96571	8990351	1	True				
ANR	8990458	Identifier	code		8990351	0					
ANR	8990459	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	3020:4:96577:96615	8990351	7	True				
ANR	8990460	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		8990351	0					
ANR	8990461	Callee	check_read_type		8990351	0					
ANR	8990462	Identifier	check_read_type		8990351	0					
ANR	8990463	ArgumentList	CIEdict		8990351	1					
ANR	8990464	Argument	CIEdict		8990351	0					
ANR	8990465	Identifier	CIEdict		8990351	0					
ANR	8990466	Argument	t_dictionary		8990351	1					
ANR	8990467	Identifier	t_dictionary		8990351	0					
ANR	8990468	ExpressionStatement	"code = validatecieabcspace ( i_ctx_p , r )"	3022:4:96622:96660	8990351	8	True				
ANR	8990469	AssignmentExpression	"code = validatecieabcspace ( i_ctx_p , r )"		8990351	0		=			
ANR	8990470	Identifier	code		8990351	0					
ANR	8990471	CallExpression	"validatecieabcspace ( i_ctx_p , r )"		8990351	1					
ANR	8990472	Callee	validatecieabcspace		8990351	0					
ANR	8990473	Identifier	validatecieabcspace		8990351	0					
ANR	8990474	ArgumentList	i_ctx_p		8990351	1					
ANR	8990475	Argument	i_ctx_p		8990351	0					
ANR	8990476	Identifier	i_ctx_p		8990351	0					
ANR	8990477	Argument	r		8990351	1					
ANR	8990478	Identifier	r		8990351	0					
ANR	8990479	IfStatement	if ( code != 0 )		8990351	9					
ANR	8990480	Condition	code != 0	3023:8:96670:96678	8990351	0	True				
ANR	8990481	EqualityExpression	code != 0		8990351	0		!=			
ANR	8990482	Identifier	code		8990351	0					
ANR	8990483	PrimaryExpression	0		8990351	1					
ANR	8990484	ReturnStatement	return code ;	3024:8:96689:96700	8990351	1	True				
ANR	8990485	Identifier	code		8990351	0					
ANR	8990486	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"	3026:4:96707:96756	8990351	10	True				
ANR	8990487	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"		8990351	0		=			
ANR	8990488	Identifier	code		8990351	0					
ANR	8990489	CallExpression	"dict_find_string ( & CIEdict , ""Table"" , & pref )"		8990351	1					
ANR	8990490	Callee	dict_find_string		8990351	0					
ANR	8990491	Identifier	dict_find_string		8990351	0					
ANR	8990492	ArgumentList	& CIEdict		8990351	1					
ANR	8990493	Argument	& CIEdict		8990351	0					
ANR	8990494	UnaryOperationExpression	& CIEdict		8990351	0					
ANR	8990495	UnaryOperator	&		8990351	0					
ANR	8990496	Identifier	CIEdict		8990351	1					
ANR	8990497	Argument	"""Table"""		8990351	1					
ANR	8990498	PrimaryExpression	"""Table"""		8990351	0					
ANR	8990499	Argument	& pref		8990351	2					
ANR	8990500	UnaryOperationExpression	& pref		8990351	0					
ANR	8990501	UnaryOperator	&		8990351	0					
ANR	8990502	Identifier	pref		8990351	1					
ANR	8990503	IfStatement	if ( code > 0 )		8990351	11					
ANR	8990504	Condition	code > 0	3027:8:96766:96773	8990351	0	True				
ANR	8990505	RelationalExpression	code > 0		8990351	0		>			
ANR	8990506	Identifier	code		8990351	0					
ANR	8990507	PrimaryExpression	0		8990351	1					
ANR	8990508	CompoundStatement		22:18:633:633	8990351	1					
ANR	8990509	IfStatement	if ( ! r_is_array ( pref ) )		8990351	0					
ANR	8990510	Condition	! r_is_array ( pref )	3028:12:96790:96806	8990351	0	True				
ANR	8990511	UnaryOperationExpression	! r_is_array ( pref )		8990351	0					
ANR	8990512	UnaryOperator	!		8990351	0					
ANR	8990513	CallExpression	r_is_array ( pref )		8990351	1					
ANR	8990514	Callee	r_is_array		8990351	0					
ANR	8990515	Identifier	r_is_array		8990351	0					
ANR	8990516	ArgumentList	pref		8990351	1					
ANR	8990517	Argument	pref		8990351	0					
ANR	8990518	Identifier	pref		8990351	0					
ANR	8990519	ExpressionStatement	return_error ( gs_error_typecheck )	3029:12:96821:96853	8990351	1	True				
ANR	8990520	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990521	Callee	return_error		8990351	0					
ANR	8990522	Identifier	return_error		8990351	0					
ANR	8990523	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990524	Argument	gs_error_typecheck		8990351	0					
ANR	8990525	Identifier	gs_error_typecheck		8990351	0					
ANR	8990526	IfStatement	if ( r_size ( pref ) != 5 )		8990351	1					
ANR	8990527	Condition	r_size ( pref ) != 5	3030:12:96867:96883	8990351	0	True				
ANR	8990528	EqualityExpression	r_size ( pref ) != 5		8990351	0		!=			
ANR	8990529	CallExpression	r_size ( pref )		8990351	0					
ANR	8990530	Callee	r_size		8990351	0					
ANR	8990531	Identifier	r_size		8990351	0					
ANR	8990532	ArgumentList	pref		8990351	1					
ANR	8990533	Argument	pref		8990351	0					
ANR	8990534	Identifier	pref		8990351	0					
ANR	8990535	PrimaryExpression	5		8990351	1					
ANR	8990536	ExpressionStatement	return_error ( gs_error_rangecheck )	3031:12:96898:96931	8990351	1	True				
ANR	8990537	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990538	Callee	return_error		8990351	0					
ANR	8990539	Identifier	return_error		8990351	0					
ANR	8990540	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990541	Argument	gs_error_rangecheck		8990351	0					
ANR	8990542	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990543	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8990351	2					
ANR	8990544	ForInit	i = 0 ;	3033:13:96947:96950	8990351	0	True				
ANR	8990545	AssignmentExpression	i = 0		8990351	0		=			
ANR	8990546	Identifier	i		8990351	0					
ANR	8990547	PrimaryExpression	0		8990351	1					
ANR	8990548	Condition	i < 4	3033:17:96951:96953	8990351	1	True				
ANR	8990549	RelationalExpression	i < 4		8990351	0		<			
ANR	8990550	Identifier	i		8990351	0					
ANR	8990551	PrimaryExpression	4		8990351	1					
ANR	8990552	PostIncDecOperationExpression	i ++	3033:21:96955:96957	8990351	2	True				
ANR	8990553	Identifier	i		8990351	0					
ANR	8990554	IncDec	++		8990351	1					
ANR	8990555	CompoundStatement		28:26:817:817	8990351	3					
ANR	8990556	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	3034:12:96974:97017	8990351	0	True				
ANR	8990557	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		8990351	0		=			
ANR	8990558	Identifier	code		8990351	0					
ANR	8990559	CallExpression	"array_get ( imemory , pref , i , & valref )"		8990351	1					
ANR	8990560	Callee	array_get		8990351	0					
ANR	8990561	Identifier	array_get		8990351	0					
ANR	8990562	ArgumentList	imemory		8990351	1					
ANR	8990563	Argument	imemory		8990351	0					
ANR	8990564	Identifier	imemory		8990351	0					
ANR	8990565	Argument	pref		8990351	1					
ANR	8990566	Identifier	pref		8990351	0					
ANR	8990567	Argument	i		8990351	2					
ANR	8990568	Identifier	i		8990351	0					
ANR	8990569	Argument	& valref		8990351	3					
ANR	8990570	UnaryOperationExpression	& valref		8990351	0					
ANR	8990571	UnaryOperator	&		8990351	0					
ANR	8990572	Identifier	valref		8990351	1					
ANR	8990573	IfStatement	if ( code < 0 )		8990351	1					
ANR	8990574	Condition	code < 0	3035:16:97035:97042	8990351	0	True				
ANR	8990575	RelationalExpression	code < 0		8990351	0		<			
ANR	8990576	Identifier	code		8990351	0					
ANR	8990577	PrimaryExpression	0		8990351	1					
ANR	8990578	ReturnStatement	return code ;	3036:16:97061:97072	8990351	1	True				
ANR	8990579	Identifier	code		8990351	0					
ANR	8990580	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		8990351	2					
ANR	8990581	Condition	"r_has_type ( & valref , t_integer )"	3037:16:97090:97119	8990351	0	True				
ANR	8990582	CallExpression	"r_has_type ( & valref , t_integer )"		8990351	0					
ANR	8990583	Callee	r_has_type		8990351	0					
ANR	8990584	Identifier	r_has_type		8990351	0					
ANR	8990585	ArgumentList	& valref		8990351	1					
ANR	8990586	Argument	& valref		8990351	0					
ANR	8990587	UnaryOperationExpression	& valref		8990351	0					
ANR	8990588	UnaryOperator	&		8990351	0					
ANR	8990589	Identifier	valref		8990351	1					
ANR	8990590	Argument	t_integer		8990351	1					
ANR	8990591	Identifier	t_integer		8990351	0					
ANR	8990592	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	3038:16:97138:97175	8990351	1	True				
ANR	8990593	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		8990351	0		=			
ANR	8990594	ArrayIndexing	value [ i ]		8990351	0					
ANR	8990595	Identifier	value		8990351	0					
ANR	8990596	Identifier	i		8990351	1					
ANR	8990597	CastExpression	( float ) valref . value . intval		8990351	1					
ANR	8990598	CastTarget	float		8990351	0					
ANR	8990599	MemberAccess	valref . value . intval		8990351	1					
ANR	8990600	MemberAccess	valref . value		8990351	0					
ANR	8990601	Identifier	valref		8990351	0					
ANR	8990602	Identifier	value		8990351	1					
ANR	8990603	Identifier	intval		8990351	1					
ANR	8990604	ElseStatement	else		8990351	0					
ANR	8990605	ExpressionStatement	return_error ( gs_error_typecheck )	3040:16:97210:97242	8990351	0	True				
ANR	8990606	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990607	Callee	return_error		8990351	0					
ANR	8990608	Identifier	return_error		8990351	0					
ANR	8990609	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990610	Argument	gs_error_typecheck		8990351	0					
ANR	8990611	Identifier	gs_error_typecheck		8990351	0					
ANR	8990612	IfStatement	if ( value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1 )		8990351	3					
ANR	8990613	Condition	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1	3042:12:97266:97329	8990351	0	True				
ANR	8990614	OrExpression	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1		8990351	0		||			
ANR	8990615	RelationalExpression	value [ 0 ] <= 1		8990351	0		<=			
ANR	8990616	ArrayIndexing	value [ 0 ]		8990351	0					
ANR	8990617	Identifier	value		8990351	0					
ANR	8990618	PrimaryExpression	0		8990351	1					
ANR	8990619	PrimaryExpression	1		8990351	1					
ANR	8990620	OrExpression	value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1		8990351	1		||			
ANR	8990621	RelationalExpression	value [ 1 ] <= 1		8990351	0		<=			
ANR	8990622	ArrayIndexing	value [ 1 ]		8990351	0					
ANR	8990623	Identifier	value		8990351	0					
ANR	8990624	PrimaryExpression	1		8990351	1					
ANR	8990625	PrimaryExpression	1		8990351	1					
ANR	8990626	OrExpression	value [ 2 ] <= 1 || value [ 3 ] <= 1		8990351	1		||			
ANR	8990627	RelationalExpression	value [ 2 ] <= 1		8990351	0		<=			
ANR	8990628	ArrayIndexing	value [ 2 ]		8990351	0					
ANR	8990629	Identifier	value		8990351	0					
ANR	8990630	PrimaryExpression	2		8990351	1					
ANR	8990631	PrimaryExpression	1		8990351	1					
ANR	8990632	RelationalExpression	value [ 3 ] <= 1		8990351	1		<=			
ANR	8990633	ArrayIndexing	value [ 3 ]		8990351	0					
ANR	8990634	Identifier	value		8990351	0					
ANR	8990635	PrimaryExpression	3		8990351	1					
ANR	8990636	PrimaryExpression	1		8990351	1					
ANR	8990637	ExpressionStatement	return_error ( gs_error_rangecheck )	3043:12:97344:97377	8990351	1	True				
ANR	8990638	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990639	Callee	return_error		8990351	0					
ANR	8990640	Identifier	return_error		8990351	0					
ANR	8990641	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990642	Argument	gs_error_rangecheck		8990351	0					
ANR	8990643	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990644	ExpressionStatement	"code = array_get ( imemory , pref , 4 , & arrayref )"	3045:8:97388:97433	8990351	4	True				
ANR	8990645	AssignmentExpression	"code = array_get ( imemory , pref , 4 , & arrayref )"		8990351	0		=			
ANR	8990646	Identifier	code		8990351	0					
ANR	8990647	CallExpression	"array_get ( imemory , pref , 4 , & arrayref )"		8990351	1					
ANR	8990648	Callee	array_get		8990351	0					
ANR	8990649	Identifier	array_get		8990351	0					
ANR	8990650	ArgumentList	imemory		8990351	1					
ANR	8990651	Argument	imemory		8990351	0					
ANR	8990652	Identifier	imemory		8990351	0					
ANR	8990653	Argument	pref		8990351	1					
ANR	8990654	Identifier	pref		8990351	0					
ANR	8990655	Argument	4		8990351	2					
ANR	8990656	PrimaryExpression	4		8990351	0					
ANR	8990657	Argument	& arrayref		8990351	3					
ANR	8990658	UnaryOperationExpression	& arrayref		8990351	0					
ANR	8990659	UnaryOperator	&		8990351	0					
ANR	8990660	Identifier	arrayref		8990351	1					
ANR	8990661	IfStatement	if ( code < 0 )		8990351	5					
ANR	8990662	Condition	code < 0	3046:12:97447:97454	8990351	0	True				
ANR	8990663	RelationalExpression	code < 0		8990351	0		<			
ANR	8990664	Identifier	code		8990351	0					
ANR	8990665	PrimaryExpression	0		8990351	1					
ANR	8990666	ReturnStatement	return code ;	3047:12:97469:97480	8990351	1	True				
ANR	8990667	Identifier	code		8990351	0					
ANR	8990668	IfStatement	if ( ! r_is_array ( & arrayref ) )		8990351	6					
ANR	8990669	Condition	! r_is_array ( & arrayref )	3048:12:97494:97515	8990351	0	True				
ANR	8990670	UnaryOperationExpression	! r_is_array ( & arrayref )		8990351	0					
ANR	8990671	UnaryOperator	!		8990351	0					
ANR	8990672	CallExpression	r_is_array ( & arrayref )		8990351	1					
ANR	8990673	Callee	r_is_array		8990351	0					
ANR	8990674	Identifier	r_is_array		8990351	0					
ANR	8990675	ArgumentList	& arrayref		8990351	1					
ANR	8990676	Argument	& arrayref		8990351	0					
ANR	8990677	UnaryOperationExpression	& arrayref		8990351	0					
ANR	8990678	UnaryOperator	&		8990351	0					
ANR	8990679	Identifier	arrayref		8990351	1					
ANR	8990680	ExpressionStatement	return_error ( gs_error_typecheck )	3049:12:97530:97562	8990351	1	True				
ANR	8990681	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990682	Callee	return_error		8990351	0					
ANR	8990683	Identifier	return_error		8990351	0					
ANR	8990684	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990685	Argument	gs_error_typecheck		8990351	0					
ANR	8990686	Identifier	gs_error_typecheck		8990351	0					
ANR	8990687	IfStatement	if ( r_size ( & arrayref ) != value [ 0 ] )		8990351	7					
ANR	8990688	Condition	r_size ( & arrayref ) != value [ 0 ]	3050:12:97576:97604	8990351	0	True				
ANR	8990689	EqualityExpression	r_size ( & arrayref ) != value [ 0 ]		8990351	0		!=			
ANR	8990690	CallExpression	r_size ( & arrayref )		8990351	0					
ANR	8990691	Callee	r_size		8990351	0					
ANR	8990692	Identifier	r_size		8990351	0					
ANR	8990693	ArgumentList	& arrayref		8990351	1					
ANR	8990694	Argument	& arrayref		8990351	0					
ANR	8990695	UnaryOperationExpression	& arrayref		8990351	0					
ANR	8990696	UnaryOperator	&		8990351	0					
ANR	8990697	Identifier	arrayref		8990351	1					
ANR	8990698	ArrayIndexing	value [ 0 ]		8990351	1					
ANR	8990699	Identifier	value		8990351	0					
ANR	8990700	PrimaryExpression	0		8990351	1					
ANR	8990701	ExpressionStatement	return_error ( gs_error_rangecheck )	3051:12:97619:97652	8990351	1	True				
ANR	8990702	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990703	Callee	return_error		8990351	0					
ANR	8990704	Identifier	return_error		8990351	0					
ANR	8990705	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990706	Argument	gs_error_rangecheck		8990351	0					
ANR	8990707	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990708	ForStatement	for ( i = 0 ; i < value [ 0 ] ; i ++ )		8990351	8					
ANR	8990709	ForInit	i = 0 ;	3053:13:97668:97671	8990351	0	True				
ANR	8990710	AssignmentExpression	i = 0		8990351	0		=			
ANR	8990711	Identifier	i		8990351	0					
ANR	8990712	PrimaryExpression	0		8990351	1					
ANR	8990713	Condition	i < value [ 0 ]	3053:17:97672:97681	8990351	1	True				
ANR	8990714	RelationalExpression	i < value [ 0 ]		8990351	0		<			
ANR	8990715	Identifier	i		8990351	0					
ANR	8990716	ArrayIndexing	value [ 0 ]		8990351	1					
ANR	8990717	Identifier	value		8990351	0					
ANR	8990718	PrimaryExpression	0		8990351	1					
ANR	8990719	PostIncDecOperationExpression	i ++	3053:28:97683:97685	8990351	2	True				
ANR	8990720	Identifier	i		8990351	0					
ANR	8990721	IncDec	++		8990351	1					
ANR	8990722	CompoundStatement		48:33:1545:1545	8990351	3					
ANR	8990723	ExpressionStatement	"code = array_get ( imemory , & arrayref , i , & tempref )"	3054:12:97702:97751	8990351	0	True				
ANR	8990724	AssignmentExpression	"code = array_get ( imemory , & arrayref , i , & tempref )"		8990351	0		=			
ANR	8990725	Identifier	code		8990351	0					
ANR	8990726	CallExpression	"array_get ( imemory , & arrayref , i , & tempref )"		8990351	1					
ANR	8990727	Callee	array_get		8990351	0					
ANR	8990728	Identifier	array_get		8990351	0					
ANR	8990729	ArgumentList	imemory		8990351	1					
ANR	8990730	Argument	imemory		8990351	0					
ANR	8990731	Identifier	imemory		8990351	0					
ANR	8990732	Argument	& arrayref		8990351	1					
ANR	8990733	UnaryOperationExpression	& arrayref		8990351	0					
ANR	8990734	UnaryOperator	&		8990351	0					
ANR	8990735	Identifier	arrayref		8990351	1					
ANR	8990736	Argument	i		8990351	2					
ANR	8990737	Identifier	i		8990351	0					
ANR	8990738	Argument	& tempref		8990351	3					
ANR	8990739	UnaryOperationExpression	& tempref		8990351	0					
ANR	8990740	UnaryOperator	&		8990351	0					
ANR	8990741	Identifier	tempref		8990351	1					
ANR	8990742	IfStatement	if ( code < 0 )		8990351	1					
ANR	8990743	Condition	code < 0	3055:16:97769:97776	8990351	0	True				
ANR	8990744	RelationalExpression	code < 0		8990351	0		<			
ANR	8990745	Identifier	code		8990351	0					
ANR	8990746	PrimaryExpression	0		8990351	1					
ANR	8990747	ReturnStatement	return code ;	3056:16:97795:97806	8990351	1	True				
ANR	8990748	Identifier	code		8990351	0					
ANR	8990749	ForStatement	for ( j = 0 ; j < value [ 1 ] ; j ++ )		8990351	2					
ANR	8990750	ForInit	j = 0 ;	3057:17:97825:97828	8990351	0	True				
ANR	8990751	AssignmentExpression	j = 0		8990351	0		=			
ANR	8990752	Identifier	j		8990351	0					
ANR	8990753	PrimaryExpression	0		8990351	1					
ANR	8990754	Condition	j < value [ 1 ]	3057:21:97829:97838	8990351	1	True				
ANR	8990755	RelationalExpression	j < value [ 1 ]		8990351	0		<			
ANR	8990756	Identifier	j		8990351	0					
ANR	8990757	ArrayIndexing	value [ 1 ]		8990351	1					
ANR	8990758	Identifier	value		8990351	0					
ANR	8990759	PrimaryExpression	1		8990351	1					
ANR	8990760	PostIncDecOperationExpression	j ++	3057:32:97840:97842	8990351	2	True				
ANR	8990761	Identifier	j		8990351	0					
ANR	8990762	IncDec	++		8990351	1					
ANR	8990763	CompoundStatement		52:37:1702:1702	8990351	3					
ANR	8990764	ExpressionStatement	"code = array_get ( imemory , & tempref , i , & valref )"	3058:16:97863:97910	8990351	0	True				
ANR	8990765	AssignmentExpression	"code = array_get ( imemory , & tempref , i , & valref )"		8990351	0		=			
ANR	8990766	Identifier	code		8990351	0					
ANR	8990767	CallExpression	"array_get ( imemory , & tempref , i , & valref )"		8990351	1					
ANR	8990768	Callee	array_get		8990351	0					
ANR	8990769	Identifier	array_get		8990351	0					
ANR	8990770	ArgumentList	imemory		8990351	1					
ANR	8990771	Argument	imemory		8990351	0					
ANR	8990772	Identifier	imemory		8990351	0					
ANR	8990773	Argument	& tempref		8990351	1					
ANR	8990774	UnaryOperationExpression	& tempref		8990351	0					
ANR	8990775	UnaryOperator	&		8990351	0					
ANR	8990776	Identifier	tempref		8990351	1					
ANR	8990777	Argument	i		8990351	2					
ANR	8990778	Identifier	i		8990351	0					
ANR	8990779	Argument	& valref		8990351	3					
ANR	8990780	UnaryOperationExpression	& valref		8990351	0					
ANR	8990781	UnaryOperator	&		8990351	0					
ANR	8990782	Identifier	valref		8990351	1					
ANR	8990783	IfStatement	if ( code < 0 )		8990351	1					
ANR	8990784	Condition	code < 0	3059:20:97932:97939	8990351	0	True				
ANR	8990785	RelationalExpression	code < 0		8990351	0		<			
ANR	8990786	Identifier	code		8990351	0					
ANR	8990787	PrimaryExpression	0		8990351	1					
ANR	8990788	ReturnStatement	return code ;	3060:20:97962:97973	8990351	1	True				
ANR	8990789	Identifier	code		8990351	0					
ANR	8990790	IfStatement	"if ( ! r_has_type ( & valref , t_string ) )"		8990351	2					
ANR	8990791	Condition	"! r_has_type ( & valref , t_string )"	3061:20:97995:98024	8990351	0	True				
ANR	8990792	UnaryOperationExpression	"! r_has_type ( & valref , t_string )"		8990351	0					
ANR	8990793	UnaryOperator	!		8990351	0					
ANR	8990794	CallExpression	"r_has_type ( & valref , t_string )"		8990351	1					
ANR	8990795	Callee	r_has_type		8990351	0					
ANR	8990796	Identifier	r_has_type		8990351	0					
ANR	8990797	ArgumentList	& valref		8990351	1					
ANR	8990798	Argument	& valref		8990351	0					
ANR	8990799	UnaryOperationExpression	& valref		8990351	0					
ANR	8990800	UnaryOperator	&		8990351	0					
ANR	8990801	Identifier	valref		8990351	1					
ANR	8990802	Argument	t_string		8990351	1					
ANR	8990803	Identifier	t_string		8990351	0					
ANR	8990804	ExpressionStatement	return_error ( gs_error_typecheck )	3062:20:98047:98079	8990351	1	True				
ANR	8990805	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990806	Callee	return_error		8990351	0					
ANR	8990807	Identifier	return_error		8990351	0					
ANR	8990808	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990809	Argument	gs_error_typecheck		8990351	0					
ANR	8990810	Identifier	gs_error_typecheck		8990351	0					
ANR	8990811	IfStatement	if ( r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] ) )		8990351	3					
ANR	8990812	Condition	r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] )	3064:20:98102:98145	8990351	0	True				
ANR	8990813	EqualityExpression	r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] )		8990351	0		!=			
ANR	8990814	CallExpression	r_size ( & valref )		8990351	0					
ANR	8990815	Callee	r_size		8990351	0					
ANR	8990816	Identifier	r_size		8990351	0					
ANR	8990817	ArgumentList	& valref		8990351	1					
ANR	8990818	Argument	& valref		8990351	0					
ANR	8990819	UnaryOperationExpression	& valref		8990351	0					
ANR	8990820	UnaryOperator	&		8990351	0					
ANR	8990821	Identifier	valref		8990351	1					
ANR	8990822	MultiplicativeExpression	3 * value [ 2 ] * value [ 3 ]		8990351	1		*			
ANR	8990823	PrimaryExpression	3		8990351	0					
ANR	8990824	MultiplicativeExpression	value [ 2 ] * value [ 3 ]		8990351	1		*			
ANR	8990825	ArrayIndexing	value [ 2 ]		8990351	0					
ANR	8990826	Identifier	value		8990351	0					
ANR	8990827	PrimaryExpression	2		8990351	1					
ANR	8990828	ArrayIndexing	value [ 3 ]		8990351	1					
ANR	8990829	Identifier	value		8990351	0					
ANR	8990830	PrimaryExpression	3		8990351	1					
ANR	8990831	ExpressionStatement	return_error ( gs_error_rangecheck )	3065:20:98168:98201	8990351	1	True				
ANR	8990832	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990833	Callee	return_error		8990351	0					
ANR	8990834	Identifier	return_error		8990351	0					
ANR	8990835	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990836	Argument	gs_error_rangecheck		8990351	0					
ANR	8990837	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990838	ElseStatement	else		8990351	0					
ANR	8990839	CompoundStatement		63:11:2095:2095	8990351	0					
ANR	8990840	ExpressionStatement	return_error ( gs_error_rangecheck )	3069:8:98248:98281	8990351	0	True				
ANR	8990841	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990842	Callee	return_error		8990351	0					
ANR	8990843	Identifier	return_error		8990351	0					
ANR	8990844	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990845	Argument	gs_error_rangecheck		8990351	0					
ANR	8990846	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990847	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"	3075:4:98397:98450	8990351	12	True				
ANR	8990848	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"		8990351	0		=			
ANR	8990849	Identifier	code		8990351	0					
ANR	8990850	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"		8990351	1					
ANR	8990851	Callee	dict_find_string		8990351	0					
ANR	8990852	Identifier	dict_find_string		8990351	0					
ANR	8990853	ArgumentList	& CIEdict		8990351	1					
ANR	8990854	Argument	& CIEdict		8990351	0					
ANR	8990855	UnaryOperationExpression	& CIEdict		8990351	0					
ANR	8990856	UnaryOperator	&		8990351	0					
ANR	8990857	Identifier	CIEdict		8990351	1					
ANR	8990858	Argument	"""RangeDEFG"""		8990351	1					
ANR	8990859	PrimaryExpression	"""RangeDEFG"""		8990351	0					
ANR	8990860	Argument	& pref		8990351	2					
ANR	8990861	UnaryOperationExpression	& pref		8990351	0					
ANR	8990862	UnaryOperator	&		8990351	0					
ANR	8990863	Identifier	pref		8990351	1					
ANR	8990864	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		8990351	13					
ANR	8990865	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3076:8:98460:98496	8990351	0	True				
ANR	8990866	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		8990351	0		&&			
ANR	8990867	RelationalExpression	code > 0		8990351	0		>			
ANR	8990868	Identifier	code		8990351	0					
ANR	8990869	PrimaryExpression	0		8990351	1					
ANR	8990870	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		8990351	1					
ANR	8990871	UnaryOperator	!		8990351	0					
ANR	8990872	CallExpression	"r_has_type ( pref , t_null )"		8990351	1					
ANR	8990873	Callee	r_has_type		8990351	0					
ANR	8990874	Identifier	r_has_type		8990351	0					
ANR	8990875	ArgumentList	pref		8990351	1					
ANR	8990876	Argument	pref		8990351	0					
ANR	8990877	Identifier	pref		8990351	0					
ANR	8990878	Argument	t_null		8990351	1					
ANR	8990879	Identifier	t_null		8990351	0					
ANR	8990880	CompoundStatement		71:47:2356:2356	8990351	1					
ANR	8990881	IfStatement	if ( ! r_is_array ( pref ) )		8990351	0					
ANR	8990882	Condition	! r_is_array ( pref )	3077:12:98513:98529	8990351	0	True				
ANR	8990883	UnaryOperationExpression	! r_is_array ( pref )		8990351	0					
ANR	8990884	UnaryOperator	!		8990351	0					
ANR	8990885	CallExpression	r_is_array ( pref )		8990351	1					
ANR	8990886	Callee	r_is_array		8990351	0					
ANR	8990887	Identifier	r_is_array		8990351	0					
ANR	8990888	ArgumentList	pref		8990351	1					
ANR	8990889	Argument	pref		8990351	0					
ANR	8990890	Identifier	pref		8990351	0					
ANR	8990891	ExpressionStatement	return_error ( gs_error_typecheck )	3078:12:98544:98576	8990351	1	True				
ANR	8990892	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8990893	Callee	return_error		8990351	0					
ANR	8990894	Identifier	return_error		8990351	0					
ANR	8990895	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8990896	Argument	gs_error_typecheck		8990351	0					
ANR	8990897	Identifier	gs_error_typecheck		8990351	0					
ANR	8990898	IfStatement	if ( r_size ( pref ) != 8 )		8990351	1					
ANR	8990899	Condition	r_size ( pref ) != 8	3079:12:98590:98606	8990351	0	True				
ANR	8990900	EqualityExpression	r_size ( pref ) != 8		8990351	0		!=			
ANR	8990901	CallExpression	r_size ( pref )		8990351	0					
ANR	8990902	Callee	r_size		8990351	0					
ANR	8990903	Identifier	r_size		8990351	0					
ANR	8990904	ArgumentList	pref		8990351	1					
ANR	8990905	Argument	pref		8990351	0					
ANR	8990906	Identifier	pref		8990351	0					
ANR	8990907	PrimaryExpression	8		8990351	1					
ANR	8990908	ExpressionStatement	return_error ( gs_error_rangecheck )	3080:12:98621:98654	8990351	1	True				
ANR	8990909	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990910	Callee	return_error		8990351	0					
ANR	8990911	Identifier	return_error		8990351	0					
ANR	8990912	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990913	Argument	gs_error_rangecheck		8990351	0					
ANR	8990914	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990915	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 8 , value )"	3081:8:98664:98715	8990351	2	True				
ANR	8990916	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 8 , value )"		8990351	0		=			
ANR	8990917	Identifier	code		8990351	0					
ANR	8990918	CallExpression	"get_cie_param_array ( imemory , pref , 8 , value )"		8990351	1					
ANR	8990919	Callee	get_cie_param_array		8990351	0					
ANR	8990920	Identifier	get_cie_param_array		8990351	0					
ANR	8990921	ArgumentList	imemory		8990351	1					
ANR	8990922	Argument	imemory		8990351	0					
ANR	8990923	Identifier	imemory		8990351	0					
ANR	8990924	Argument	pref		8990351	1					
ANR	8990925	Identifier	pref		8990351	0					
ANR	8990926	Argument	8		8990351	2					
ANR	8990927	PrimaryExpression	8		8990351	0					
ANR	8990928	Argument	value		8990351	3					
ANR	8990929	Identifier	value		8990351	0					
ANR	8990930	IfStatement	if ( code < 0 )		8990351	3					
ANR	8990931	Condition	code < 0	3082:12:98729:98736	8990351	0	True				
ANR	8990932	RelationalExpression	code < 0		8990351	0		<			
ANR	8990933	Identifier	code		8990351	0					
ANR	8990934	PrimaryExpression	0		8990351	1					
ANR	8990935	ReturnStatement	return code ;	3083:12:98751:98762	8990351	1	True				
ANR	8990936	Identifier	code		8990351	0					
ANR	8990937	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ] )		8990351	4					
ANR	8990938	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]	3084:12:98776:98863	8990351	0	True				
ANR	8990939	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	0		||			
ANR	8990940	RelationalExpression	value [ 1 ] < value [ 0 ]		8990351	0		<			
ANR	8990941	ArrayIndexing	value [ 1 ]		8990351	0					
ANR	8990942	Identifier	value		8990351	0					
ANR	8990943	PrimaryExpression	1		8990351	1					
ANR	8990944	ArrayIndexing	value [ 0 ]		8990351	1					
ANR	8990945	Identifier	value		8990351	0					
ANR	8990946	PrimaryExpression	0		8990351	1					
ANR	8990947	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	1		||			
ANR	8990948	RelationalExpression	value [ 3 ] < value [ 2 ]		8990351	0		<			
ANR	8990949	ArrayIndexing	value [ 3 ]		8990351	0					
ANR	8990950	Identifier	value		8990351	0					
ANR	8990951	PrimaryExpression	3		8990351	1					
ANR	8990952	ArrayIndexing	value [ 2 ]		8990351	1					
ANR	8990953	Identifier	value		8990351	0					
ANR	8990954	PrimaryExpression	2		8990351	1					
ANR	8990955	OrExpression	value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	1		||			
ANR	8990956	RelationalExpression	value [ 5 ] < value [ 4 ]		8990351	0		<			
ANR	8990957	ArrayIndexing	value [ 5 ]		8990351	0					
ANR	8990958	Identifier	value		8990351	0					
ANR	8990959	PrimaryExpression	5		8990351	1					
ANR	8990960	ArrayIndexing	value [ 4 ]		8990351	1					
ANR	8990961	Identifier	value		8990351	0					
ANR	8990962	PrimaryExpression	4		8990351	1					
ANR	8990963	RelationalExpression	value [ 7 ] < value [ 6 ]		8990351	1		<			
ANR	8990964	ArrayIndexing	value [ 7 ]		8990351	0					
ANR	8990965	Identifier	value		8990351	0					
ANR	8990966	PrimaryExpression	7		8990351	1					
ANR	8990967	ArrayIndexing	value [ 6 ]		8990351	1					
ANR	8990968	Identifier	value		8990351	0					
ANR	8990969	PrimaryExpression	6		8990351	1					
ANR	8990970	ExpressionStatement	return_error ( gs_error_rangecheck )	3085:12:98878:98911	8990351	1	True				
ANR	8990971	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8990972	Callee	return_error		8990351	0					
ANR	8990973	Identifier	return_error		8990351	0					
ANR	8990974	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8990975	Argument	gs_error_rangecheck		8990351	0					
ANR	8990976	Identifier	gs_error_rangecheck		8990351	0					
ANR	8990977	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"	3088:4:98924:98978	8990351	14	True				
ANR	8990978	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"		8990351	0		=			
ANR	8990979	Identifier	code		8990351	0					
ANR	8990980	CallExpression	"dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"		8990351	1					
ANR	8990981	Callee	dict_find_string		8990351	0					
ANR	8990982	Identifier	dict_find_string		8990351	0					
ANR	8990983	ArgumentList	& CIEdict		8990351	1					
ANR	8990984	Argument	& CIEdict		8990351	0					
ANR	8990985	UnaryOperationExpression	& CIEdict		8990351	0					
ANR	8990986	UnaryOperator	&		8990351	0					
ANR	8990987	Identifier	CIEdict		8990351	1					
ANR	8990988	Argument	"""DecodeDEFG"""		8990351	1					
ANR	8990989	PrimaryExpression	"""DecodeDEFG"""		8990351	0					
ANR	8990990	Argument	& pref		8990351	2					
ANR	8990991	UnaryOperationExpression	& pref		8990351	0					
ANR	8990992	UnaryOperator	&		8990351	0					
ANR	8990993	Identifier	pref		8990351	1					
ANR	8990994	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		8990351	15					
ANR	8990995	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3089:8:98988:99024	8990351	0	True				
ANR	8990996	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		8990351	0		&&			
ANR	8990997	RelationalExpression	code > 0		8990351	0		>			
ANR	8990998	Identifier	code		8990351	0					
ANR	8990999	PrimaryExpression	0		8990351	1					
ANR	8991000	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		8990351	1					
ANR	8991001	UnaryOperator	!		8990351	0					
ANR	8991002	CallExpression	"r_has_type ( pref , t_null )"		8990351	1					
ANR	8991003	Callee	r_has_type		8990351	0					
ANR	8991004	Identifier	r_has_type		8990351	0					
ANR	8991005	ArgumentList	pref		8990351	1					
ANR	8991006	Argument	pref		8990351	0					
ANR	8991007	Identifier	pref		8990351	0					
ANR	8991008	Argument	t_null		8990351	1					
ANR	8991009	Identifier	t_null		8990351	0					
ANR	8991010	CompoundStatement		84:47:2884:2884	8990351	1					
ANR	8991011	IfStatement	if ( ! r_is_array ( pref ) )		8990351	0					
ANR	8991012	Condition	! r_is_array ( pref )	3090:12:99041:99057	8990351	0	True				
ANR	8991013	UnaryOperationExpression	! r_is_array ( pref )		8990351	0					
ANR	8991014	UnaryOperator	!		8990351	0					
ANR	8991015	CallExpression	r_is_array ( pref )		8990351	1					
ANR	8991016	Callee	r_is_array		8990351	0					
ANR	8991017	Identifier	r_is_array		8990351	0					
ANR	8991018	ArgumentList	pref		8990351	1					
ANR	8991019	Argument	pref		8990351	0					
ANR	8991020	Identifier	pref		8990351	0					
ANR	8991021	ExpressionStatement	return_error ( gs_error_typecheck )	3091:12:99072:99104	8990351	1	True				
ANR	8991022	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8991023	Callee	return_error		8990351	0					
ANR	8991024	Identifier	return_error		8990351	0					
ANR	8991025	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8991026	Argument	gs_error_typecheck		8990351	0					
ANR	8991027	Identifier	gs_error_typecheck		8990351	0					
ANR	8991028	IfStatement	if ( r_size ( pref ) != 4 )		8990351	1					
ANR	8991029	Condition	r_size ( pref ) != 4	3092:12:99118:99134	8990351	0	True				
ANR	8991030	EqualityExpression	r_size ( pref ) != 4		8990351	0		!=			
ANR	8991031	CallExpression	r_size ( pref )		8990351	0					
ANR	8991032	Callee	r_size		8990351	0					
ANR	8991033	Identifier	r_size		8990351	0					
ANR	8991034	ArgumentList	pref		8990351	1					
ANR	8991035	Argument	pref		8990351	0					
ANR	8991036	Identifier	pref		8990351	0					
ANR	8991037	PrimaryExpression	4		8990351	1					
ANR	8991038	ExpressionStatement	return_error ( gs_error_rangecheck )	3093:12:99149:99182	8990351	1	True				
ANR	8991039	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8991040	Callee	return_error		8990351	0					
ANR	8991041	Identifier	return_error		8990351	0					
ANR	8991042	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8991043	Argument	gs_error_rangecheck		8990351	0					
ANR	8991044	Identifier	gs_error_rangecheck		8990351	0					
ANR	8991045	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8990351	2					
ANR	8991046	ForInit	i = 0 ;	3095:13:99198:99201	8990351	0	True				
ANR	8991047	AssignmentExpression	i = 0		8990351	0		=			
ANR	8991048	Identifier	i		8990351	0					
ANR	8991049	PrimaryExpression	0		8990351	1					
ANR	8991050	Condition	i < 4	3095:17:99202:99204	8990351	1	True				
ANR	8991051	RelationalExpression	i < 4		8990351	0		<			
ANR	8991052	Identifier	i		8990351	0					
ANR	8991053	PrimaryExpression	4		8990351	1					
ANR	8991054	PostIncDecOperationExpression	i ++	3095:21:99206:99208	8990351	2	True				
ANR	8991055	Identifier	i		8990351	0					
ANR	8991056	IncDec	++		8990351	1					
ANR	8991057	CompoundStatement		90:26:3068:3068	8990351	3					
ANR	8991058	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	3096:12:99225:99268	8990351	0	True				
ANR	8991059	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		8990351	0		=			
ANR	8991060	Identifier	code		8990351	0					
ANR	8991061	CallExpression	"array_get ( imemory , pref , i , & valref )"		8990351	1					
ANR	8991062	Callee	array_get		8990351	0					
ANR	8991063	Identifier	array_get		8990351	0					
ANR	8991064	ArgumentList	imemory		8990351	1					
ANR	8991065	Argument	imemory		8990351	0					
ANR	8991066	Identifier	imemory		8990351	0					
ANR	8991067	Argument	pref		8990351	1					
ANR	8991068	Identifier	pref		8990351	0					
ANR	8991069	Argument	i		8990351	2					
ANR	8991070	Identifier	i		8990351	0					
ANR	8991071	Argument	& valref		8990351	3					
ANR	8991072	UnaryOperationExpression	& valref		8990351	0					
ANR	8991073	UnaryOperator	&		8990351	0					
ANR	8991074	Identifier	valref		8990351	1					
ANR	8991075	IfStatement	if ( code < 0 )		8990351	1					
ANR	8991076	Condition	code < 0	3097:16:99286:99293	8990351	0	True				
ANR	8991077	RelationalExpression	code < 0		8990351	0		<			
ANR	8991078	Identifier	code		8990351	0					
ANR	8991079	PrimaryExpression	0		8990351	1					
ANR	8991080	ReturnStatement	return code ;	3098:16:99312:99323	8990351	1	True				
ANR	8991081	Identifier	code		8990351	0					
ANR	8991082	ExpressionStatement	check_proc ( valref )	3099:12:99337:99355	8990351	2	True				
ANR	8991083	CallExpression	check_proc ( valref )		8990351	0					
ANR	8991084	Callee	check_proc		8990351	0					
ANR	8991085	Identifier	check_proc		8990351	0					
ANR	8991086	ArgumentList	valref		8990351	1					
ANR	8991087	Argument	valref		8990351	0					
ANR	8991088	Identifier	valref		8990351	0					
ANR	8991089	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"	3103:4:99378:99431	8990351	16	True				
ANR	8991090	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"		8990351	0		=			
ANR	8991091	Identifier	code		8990351	0					
ANR	8991092	CallExpression	"dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"		8990351	1					
ANR	8991093	Callee	dict_find_string		8990351	0					
ANR	8991094	Identifier	dict_find_string		8990351	0					
ANR	8991095	ArgumentList	& CIEdict		8990351	1					
ANR	8991096	Argument	& CIEdict		8990351	0					
ANR	8991097	UnaryOperationExpression	& CIEdict		8990351	0					
ANR	8991098	UnaryOperator	&		8990351	0					
ANR	8991099	Identifier	CIEdict		8990351	1					
ANR	8991100	Argument	"""RangeHIJK"""		8990351	1					
ANR	8991101	PrimaryExpression	"""RangeHIJK"""		8990351	0					
ANR	8991102	Argument	& pref		8990351	2					
ANR	8991103	UnaryOperationExpression	& pref		8990351	0					
ANR	8991104	UnaryOperator	&		8990351	0					
ANR	8991105	Identifier	pref		8990351	1					
ANR	8991106	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		8990351	17					
ANR	8991107	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3104:8:99441:99477	8990351	0	True				
ANR	8991108	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		8990351	0		&&			
ANR	8991109	RelationalExpression	code > 0		8990351	0		>			
ANR	8991110	Identifier	code		8990351	0					
ANR	8991111	PrimaryExpression	0		8990351	1					
ANR	8991112	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		8990351	1					
ANR	8991113	UnaryOperator	!		8990351	0					
ANR	8991114	CallExpression	"r_has_type ( pref , t_null )"		8990351	1					
ANR	8991115	Callee	r_has_type		8990351	0					
ANR	8991116	Identifier	r_has_type		8990351	0					
ANR	8991117	ArgumentList	pref		8990351	1					
ANR	8991118	Argument	pref		8990351	0					
ANR	8991119	Identifier	pref		8990351	0					
ANR	8991120	Argument	t_null		8990351	1					
ANR	8991121	Identifier	t_null		8990351	0					
ANR	8991122	CompoundStatement		99:47:3337:3337	8990351	1					
ANR	8991123	IfStatement	if ( ! r_is_array ( pref ) )		8990351	0					
ANR	8991124	Condition	! r_is_array ( pref )	3105:12:99494:99510	8990351	0	True				
ANR	8991125	UnaryOperationExpression	! r_is_array ( pref )		8990351	0					
ANR	8991126	UnaryOperator	!		8990351	0					
ANR	8991127	CallExpression	r_is_array ( pref )		8990351	1					
ANR	8991128	Callee	r_is_array		8990351	0					
ANR	8991129	Identifier	r_is_array		8990351	0					
ANR	8991130	ArgumentList	pref		8990351	1					
ANR	8991131	Argument	pref		8990351	0					
ANR	8991132	Identifier	pref		8990351	0					
ANR	8991133	ExpressionStatement	return_error ( gs_error_typecheck )	3106:12:99525:99557	8990351	1	True				
ANR	8991134	CallExpression	return_error ( gs_error_typecheck )		8990351	0					
ANR	8991135	Callee	return_error		8990351	0					
ANR	8991136	Identifier	return_error		8990351	0					
ANR	8991137	ArgumentList	gs_error_typecheck		8990351	1					
ANR	8991138	Argument	gs_error_typecheck		8990351	0					
ANR	8991139	Identifier	gs_error_typecheck		8990351	0					
ANR	8991140	IfStatement	if ( r_size ( pref ) != 8 )		8990351	1					
ANR	8991141	Condition	r_size ( pref ) != 8	3107:12:99571:99587	8990351	0	True				
ANR	8991142	EqualityExpression	r_size ( pref ) != 8		8990351	0		!=			
ANR	8991143	CallExpression	r_size ( pref )		8990351	0					
ANR	8991144	Callee	r_size		8990351	0					
ANR	8991145	Identifier	r_size		8990351	0					
ANR	8991146	ArgumentList	pref		8990351	1					
ANR	8991147	Argument	pref		8990351	0					
ANR	8991148	Identifier	pref		8990351	0					
ANR	8991149	PrimaryExpression	8		8990351	1					
ANR	8991150	ExpressionStatement	return_error ( gs_error_rangecheck )	3108:12:99602:99635	8990351	1	True				
ANR	8991151	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8991152	Callee	return_error		8990351	0					
ANR	8991153	Identifier	return_error		8990351	0					
ANR	8991154	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8991155	Argument	gs_error_rangecheck		8990351	0					
ANR	8991156	Identifier	gs_error_rangecheck		8990351	0					
ANR	8991157	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 8 , value )"	3109:8:99645:99696	8990351	2	True				
ANR	8991158	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 8 , value )"		8990351	0		=			
ANR	8991159	Identifier	code		8990351	0					
ANR	8991160	CallExpression	"get_cie_param_array ( imemory , pref , 8 , value )"		8990351	1					
ANR	8991161	Callee	get_cie_param_array		8990351	0					
ANR	8991162	Identifier	get_cie_param_array		8990351	0					
ANR	8991163	ArgumentList	imemory		8990351	1					
ANR	8991164	Argument	imemory		8990351	0					
ANR	8991165	Identifier	imemory		8990351	0					
ANR	8991166	Argument	pref		8990351	1					
ANR	8991167	Identifier	pref		8990351	0					
ANR	8991168	Argument	8		8990351	2					
ANR	8991169	PrimaryExpression	8		8990351	0					
ANR	8991170	Argument	value		8990351	3					
ANR	8991171	Identifier	value		8990351	0					
ANR	8991172	IfStatement	if ( code < 0 )		8990351	3					
ANR	8991173	Condition	code < 0	3110:12:99710:99717	8990351	0	True				
ANR	8991174	RelationalExpression	code < 0		8990351	0		<			
ANR	8991175	Identifier	code		8990351	0					
ANR	8991176	PrimaryExpression	0		8990351	1					
ANR	8991177	ReturnStatement	return code ;	3111:12:99732:99743	8990351	1	True				
ANR	8991178	Identifier	code		8990351	0					
ANR	8991179	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ] )		8990351	4					
ANR	8991180	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]	3112:12:99757:99844	8990351	0	True				
ANR	8991181	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	0		||			
ANR	8991182	RelationalExpression	value [ 1 ] < value [ 0 ]		8990351	0		<			
ANR	8991183	ArrayIndexing	value [ 1 ]		8990351	0					
ANR	8991184	Identifier	value		8990351	0					
ANR	8991185	PrimaryExpression	1		8990351	1					
ANR	8991186	ArrayIndexing	value [ 0 ]		8990351	1					
ANR	8991187	Identifier	value		8990351	0					
ANR	8991188	PrimaryExpression	0		8990351	1					
ANR	8991189	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	1		||			
ANR	8991190	RelationalExpression	value [ 3 ] < value [ 2 ]		8990351	0		<			
ANR	8991191	ArrayIndexing	value [ 3 ]		8990351	0					
ANR	8991192	Identifier	value		8990351	0					
ANR	8991193	PrimaryExpression	3		8990351	1					
ANR	8991194	ArrayIndexing	value [ 2 ]		8990351	1					
ANR	8991195	Identifier	value		8990351	0					
ANR	8991196	PrimaryExpression	2		8990351	1					
ANR	8991197	OrExpression	value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		8990351	1		||			
ANR	8991198	RelationalExpression	value [ 5 ] < value [ 4 ]		8990351	0		<			
ANR	8991199	ArrayIndexing	value [ 5 ]		8990351	0					
ANR	8991200	Identifier	value		8990351	0					
ANR	8991201	PrimaryExpression	5		8990351	1					
ANR	8991202	ArrayIndexing	value [ 4 ]		8990351	1					
ANR	8991203	Identifier	value		8990351	0					
ANR	8991204	PrimaryExpression	4		8990351	1					
ANR	8991205	RelationalExpression	value [ 7 ] < value [ 6 ]		8990351	1		<			
ANR	8991206	ArrayIndexing	value [ 7 ]		8990351	0					
ANR	8991207	Identifier	value		8990351	0					
ANR	8991208	PrimaryExpression	7		8990351	1					
ANR	8991209	ArrayIndexing	value [ 6 ]		8990351	1					
ANR	8991210	Identifier	value		8990351	0					
ANR	8991211	PrimaryExpression	6		8990351	1					
ANR	8991212	ExpressionStatement	return_error ( gs_error_rangecheck )	3113:12:99859:99892	8990351	1	True				
ANR	8991213	CallExpression	return_error ( gs_error_rangecheck )		8990351	0					
ANR	8991214	Callee	return_error		8990351	0					
ANR	8991215	Identifier	return_error		8990351	0					
ANR	8991216	ArgumentList	gs_error_rangecheck		8990351	1					
ANR	8991217	Argument	gs_error_rangecheck		8990351	0					
ANR	8991218	Identifier	gs_error_rangecheck		8990351	0					
ANR	8991219	ExpressionStatement	* r = 0	3116:4:99905:99911	8990351	18	True				
ANR	8991220	AssignmentExpression	* r = 0		8990351	0		=			
ANR	8991221	UnaryOperationExpression	* r		8990351	0					
ANR	8991222	UnaryOperator	*		8990351	0					
ANR	8991223	Identifier	r		8990351	1					
ANR	8991224	PrimaryExpression	0		8990351	1					
ANR	8991225	ReturnStatement	return 0 ;	3117:4:99917:99925	8990351	19	True				
ANR	8991226	PrimaryExpression	0		8990351	0					
ANR	8991227	ReturnType	static int		8990351	1					
ANR	8991228	Identifier	validateciedefgspace		8990351	2					
ANR	8991229	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		8990351	3					
ANR	8991230	Parameter	i_ctx_t * i_ctx_p	3005:32:96114:96130	8990351	0	True				
ANR	8991231	ParameterType	i_ctx_t *		8990351	0					
ANR	8991232	Identifier	i_ctx_p		8990351	1					
ANR	8991233	Parameter	ref * * r	3005:51:96133:96139	8990351	1	True				
ANR	8991234	ParameterType	ref * *		8990351	0					
ANR	8991235	Identifier	r		8990351	1					
ANR	8991236	CFGEntryNode	ENTRY		8990351		True				
ANR	8991237	CFGExitNode	EXIT		8990351		True				
ANR	8991238	Symbol	valref . value		8990351						
ANR	8991239	Symbol	code		8990351						
ANR	8991240	Symbol	t_dictionary		8990351						
ANR	8991241	Symbol	gs_error_rangecheck		8990351						
ANR	8991242	Symbol	& CIEdict		8990351						
ANR	8991243	Symbol	gs_error_typecheck		8990351						
ANR	8991244	Symbol	& pref		8990351						
ANR	8991245	Symbol	r_has_type		8990351						
ANR	8991246	Symbol	t_null		8990351						
ANR	8991247	Symbol	& valref		8990351						
ANR	8991248	Symbol	pref		8990351						
ANR	8991249	Symbol	r_size		8990351						
ANR	8991250	Symbol	CIEdict		8990351						
ANR	8991251	Symbol	CIEspace		8990351						
ANR	8991252	Symbol	imemory		8990351						
ANR	8991253	Symbol	value		8990351						
ANR	8991254	Symbol	tempref		8990351						
ANR	8991255	Symbol	dict_find_string		8990351						
ANR	8991256	Symbol	array_get		8990351						
ANR	8991257	Symbol	i		8990351						
ANR	8991258	Symbol	j		8990351						
ANR	8991259	Symbol	arrayref		8990351						
ANR	8991260	Symbol	& tempref		8990351						
ANR	8991261	Symbol	& arrayref		8990351						
ANR	8991262	Symbol	t_string		8990351						
ANR	8991263	Symbol	r		8990351						
ANR	8991264	Symbol	validatecieabcspace		8990351						
ANR	8991265	Symbol	* i		8990351						
ANR	8991266	Symbol	t_integer		8990351						
ANR	8991267	Symbol	valref . value . intval		8990351						
ANR	8991268	Symbol	i_ctx_p		8990351						
ANR	8991269	Symbol	* value		8990351						
ANR	8991270	Symbol	valref		8990351						
ANR	8991271	Symbol	r_is_array		8990351						
ANR	8991272	Symbol	* r		8990351						
ANR	8991273	Symbol	get_cie_param_array		8990351						
ANR	8991274	Function	ciedefgdomain	3119:0:99929:100543							
ANR	8991275	FunctionDef	"ciedefgdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8991274	0					
ANR	8991276	CompoundStatement		3120:0:99997:100543	8991274	0					
ANR	8991277	IdentifierDeclStatement	int code ;	3121:4:100003:100011	8991274	0	True				
ANR	8991278	IdentifierDecl	code		8991274	0					
ANR	8991279	IdentifierDeclType	int		8991274	0					
ANR	8991280	Identifier	code		8991274	1					
ANR	8991281	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	3122:4:100017:100038	8991274	1	True				
ANR	8991282	IdentifierDecl	CIEdict		8991274	0					
ANR	8991283	IdentifierDeclType	ref		8991274	0					
ANR	8991284	Identifier	CIEdict		8991274	1					
ANR	8991285	IdentifierDecl	* tempref		8991274	1					
ANR	8991286	IdentifierDeclType	ref *		8991274	0					
ANR	8991287	Identifier	tempref		8991274	1					
ANR	8991288	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	3124:4:100045:100090	8991274	2	True				
ANR	8991289	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8991274	0		=			
ANR	8991290	Identifier	code		8991274	0					
ANR	8991291	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8991274	1					
ANR	8991292	Callee	array_get		8991274	0					
ANR	8991293	Identifier	array_get		8991274	0					
ANR	8991294	ArgumentList	imemory		8991274	1					
ANR	8991295	Argument	imemory		8991274	0					
ANR	8991296	Identifier	imemory		8991274	0					
ANR	8991297	Argument	space		8991274	1					
ANR	8991298	Identifier	space		8991274	0					
ANR	8991299	Argument	1		8991274	2					
ANR	8991300	PrimaryExpression	1		8991274	0					
ANR	8991301	Argument	& CIEdict		8991274	3					
ANR	8991302	UnaryOperationExpression	& CIEdict		8991274	0					
ANR	8991303	UnaryOperator	&		8991274	0					
ANR	8991304	Identifier	CIEdict		8991274	1					
ANR	8991305	IfStatement	if ( code < 0 )		8991274	3					
ANR	8991306	Condition	code < 0	3125:8:100100:100107	8991274	0	True				
ANR	8991307	RelationalExpression	code < 0		8991274	0		<			
ANR	8991308	Identifier	code		8991274	0					
ANR	8991309	PrimaryExpression	0		8991274	1					
ANR	8991310	ReturnStatement	return code ;	3126:8:100118:100129	8991274	1	True				
ANR	8991311	Identifier	code		8991274	0					
ANR	8991312	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"	3129:4:100195:100251	8991274	4	True				
ANR	8991313	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		8991274	0		=			
ANR	8991314	Identifier	code		8991274	0					
ANR	8991315	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		8991274	1					
ANR	8991316	Callee	dict_find_string		8991274	0					
ANR	8991317	Identifier	dict_find_string		8991274	0					
ANR	8991318	ArgumentList	& CIEdict		8991274	1					
ANR	8991319	Argument	& CIEdict		8991274	0					
ANR	8991320	UnaryOperationExpression	& CIEdict		8991274	0					
ANR	8991321	UnaryOperator	&		8991274	0					
ANR	8991322	Identifier	CIEdict		8991274	1					
ANR	8991323	Argument	"""RangeDEFG"""		8991274	1					
ANR	8991324	PrimaryExpression	"""RangeDEFG"""		8991274	0					
ANR	8991325	Argument	& tempref		8991274	2					
ANR	8991326	UnaryOperationExpression	& tempref		8991274	0					
ANR	8991327	UnaryOperator	&		8991274	0					
ANR	8991328	Identifier	tempref		8991274	1					
ANR	8991329	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8991274	5					
ANR	8991330	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	3130:8:100261:100300	8991274	0	True				
ANR	8991331	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8991274	0		&&			
ANR	8991332	RelationalExpression	code > 0		8991274	0		>			
ANR	8991333	Identifier	code		8991274	0					
ANR	8991334	PrimaryExpression	0		8991274	1					
ANR	8991335	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8991274	1					
ANR	8991336	UnaryOperator	!		8991274	0					
ANR	8991337	CallExpression	"r_has_type ( tempref , t_null )"		8991274	1					
ANR	8991338	Callee	r_has_type		8991274	0					
ANR	8991339	Identifier	r_has_type		8991274	0					
ANR	8991340	ArgumentList	tempref		8991274	1					
ANR	8991341	Argument	tempref		8991274	0					
ANR	8991342	Identifier	tempref		8991274	0					
ANR	8991343	Argument	t_null		8991274	1					
ANR	8991344	Identifier	t_null		8991274	0					
ANR	8991345	CompoundStatement		11:50:305:305	8991274	1					
ANR	8991346	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"	3131:8:100313:100365	8991274	0	True				
ANR	8991347	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"		8991274	0		=			
ANR	8991348	Identifier	code		8991274	0					
ANR	8991349	CallExpression	"get_cie_param_array ( imemory , tempref , 8 , ptr )"		8991274	1					
ANR	8991350	Callee	get_cie_param_array		8991274	0					
ANR	8991351	Identifier	get_cie_param_array		8991274	0					
ANR	8991352	ArgumentList	imemory		8991274	1					
ANR	8991353	Argument	imemory		8991274	0					
ANR	8991354	Identifier	imemory		8991274	0					
ANR	8991355	Argument	tempref		8991274	1					
ANR	8991356	Identifier	tempref		8991274	0					
ANR	8991357	Argument	8		8991274	2					
ANR	8991358	PrimaryExpression	8		8991274	0					
ANR	8991359	Argument	ptr		8991274	3					
ANR	8991360	Identifier	ptr		8991274	0					
ANR	8991361	IfStatement	if ( code < 0 )		8991274	1					
ANR	8991362	Condition	code < 0	3132:12:100379:100386	8991274	0	True				
ANR	8991363	RelationalExpression	code < 0		8991274	0		<			
ANR	8991364	Identifier	code		8991274	0					
ANR	8991365	PrimaryExpression	0		8991274	1					
ANR	8991366	ReturnStatement	return code ;	3133:12:100401:100412	8991274	1	True				
ANR	8991367	Identifier	code		8991274	0					
ANR	8991368	ElseStatement	else		8991274	0					
ANR	8991369	CompoundStatement		15:11:427:427	8991274	0					
ANR	8991370	ExpressionStatement	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"	3136:5:100480:100521	8991274	0	True				
ANR	8991371	CallExpression	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"		8991274	0					
ANR	8991372	Callee	memcpy		8991274	0					
ANR	8991373	Identifier	memcpy		8991274	0					
ANR	8991374	ArgumentList	ptr		8991274	1					
ANR	8991375	Argument	ptr		8991274	0					
ANR	8991376	Identifier	ptr		8991274	0					
ANR	8991377	Argument	default_0_1		8991274	1					
ANR	8991378	Identifier	default_0_1		8991274	0					
ANR	8991379	Argument	8 * sizeof ( float )		8991274	2					
ANR	8991380	MultiplicativeExpression	8 * sizeof ( float )		8991274	0		*			
ANR	8991381	PrimaryExpression	8		8991274	0					
ANR	8991382	SizeofExpression	sizeof ( float )		8991274	1					
ANR	8991383	Sizeof	sizeof		8991274	0					
ANR	8991384	SizeofOperand	float		8991274	1					
ANR	8991385	ReturnStatement	return 0 ;	3138:4:100533:100541	8991274	6	True				
ANR	8991386	PrimaryExpression	0		8991274	0					
ANR	8991387	ReturnType	static int		8991274	1					
ANR	8991388	Identifier	ciedefgdomain		8991274	2					
ANR	8991389	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8991274	3					
ANR	8991390	Parameter	i_ctx_t * i_ctx_p	3119:25:99954:99970	8991274	0	True				
ANR	8991391	ParameterType	i_ctx_t *		8991274	0					
ANR	8991392	Identifier	i_ctx_p		8991274	1					
ANR	8991393	Parameter	ref * space	3119:44:99973:99982	8991274	1	True				
ANR	8991394	ParameterType	ref *		8991274	0					
ANR	8991395	Identifier	space		8991274	1					
ANR	8991396	Parameter	float * ptr	3119:56:99985:99994	8991274	2	True				
ANR	8991397	ParameterType	float *		8991274	0					
ANR	8991398	Identifier	ptr		8991274	1					
ANR	8991399	CFGEntryNode	ENTRY		8991274		True				
ANR	8991400	CFGExitNode	EXIT		8991274		True				
ANR	8991401	Symbol	code		8991274						
ANR	8991402	Symbol	dict_find_string		8991274						
ANR	8991403	Symbol	array_get		8991274						
ANR	8991404	Symbol	& CIEdict		8991274						
ANR	8991405	Symbol	& tempref		8991274						
ANR	8991406	Symbol	space		8991274						
ANR	8991407	Symbol	ptr		8991274						
ANR	8991408	Symbol	r_has_type		8991274						
ANR	8991409	Symbol	t_null		8991274						
ANR	8991410	Symbol	i_ctx_p		8991274						
ANR	8991411	Symbol	CIEdict		8991274						
ANR	8991412	Symbol	imemory		8991274						
ANR	8991413	Symbol	get_cie_param_array		8991274						
ANR	8991414	Symbol	default_0_1		8991274						
ANR	8991415	Symbol	tempref		8991274						
ANR	8991416	Function	ciedefgrange	3140:0:100545:101158							
ANR	8991417	FunctionDef	"ciedefgrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8991416	0					
ANR	8991418	CompoundStatement		3141:0:100612:101158	8991416	0					
ANR	8991419	IdentifierDeclStatement	int code ;	3142:4:100618:100626	8991416	0	True				
ANR	8991420	IdentifierDecl	code		8991416	0					
ANR	8991421	IdentifierDeclType	int		8991416	0					
ANR	8991422	Identifier	code		8991416	1					
ANR	8991423	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	3143:4:100632:100653	8991416	1	True				
ANR	8991424	IdentifierDecl	CIEdict		8991416	0					
ANR	8991425	IdentifierDeclType	ref		8991416	0					
ANR	8991426	Identifier	CIEdict		8991416	1					
ANR	8991427	IdentifierDecl	* tempref		8991416	1					
ANR	8991428	IdentifierDeclType	ref *		8991416	0					
ANR	8991429	Identifier	tempref		8991416	1					
ANR	8991430	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	3145:4:100660:100705	8991416	2	True				
ANR	8991431	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		8991416	0		=			
ANR	8991432	Identifier	code		8991416	0					
ANR	8991433	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		8991416	1					
ANR	8991434	Callee	array_get		8991416	0					
ANR	8991435	Identifier	array_get		8991416	0					
ANR	8991436	ArgumentList	imemory		8991416	1					
ANR	8991437	Argument	imemory		8991416	0					
ANR	8991438	Identifier	imemory		8991416	0					
ANR	8991439	Argument	space		8991416	1					
ANR	8991440	Identifier	space		8991416	0					
ANR	8991441	Argument	1		8991416	2					
ANR	8991442	PrimaryExpression	1		8991416	0					
ANR	8991443	Argument	& CIEdict		8991416	3					
ANR	8991444	UnaryOperationExpression	& CIEdict		8991416	0					
ANR	8991445	UnaryOperator	&		8991416	0					
ANR	8991446	Identifier	CIEdict		8991416	1					
ANR	8991447	IfStatement	if ( code < 0 )		8991416	3					
ANR	8991448	Condition	code < 0	3146:8:100715:100722	8991416	0	True				
ANR	8991449	RelationalExpression	code < 0		8991416	0		<			
ANR	8991450	Identifier	code		8991416	0					
ANR	8991451	PrimaryExpression	0		8991416	1					
ANR	8991452	ReturnStatement	return code ;	3147:8:100733:100744	8991416	1	True				
ANR	8991453	Identifier	code		8991416	0					
ANR	8991454	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"	3150:4:100810:100866	8991416	4	True				
ANR	8991455	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		8991416	0		=			
ANR	8991456	Identifier	code		8991416	0					
ANR	8991457	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		8991416	1					
ANR	8991458	Callee	dict_find_string		8991416	0					
ANR	8991459	Identifier	dict_find_string		8991416	0					
ANR	8991460	ArgumentList	& CIEdict		8991416	1					
ANR	8991461	Argument	& CIEdict		8991416	0					
ANR	8991462	UnaryOperationExpression	& CIEdict		8991416	0					
ANR	8991463	UnaryOperator	&		8991416	0					
ANR	8991464	Identifier	CIEdict		8991416	1					
ANR	8991465	Argument	"""RangeDEFG"""		8991416	1					
ANR	8991466	PrimaryExpression	"""RangeDEFG"""		8991416	0					
ANR	8991467	Argument	& tempref		8991416	2					
ANR	8991468	UnaryOperationExpression	& tempref		8991416	0					
ANR	8991469	UnaryOperator	&		8991416	0					
ANR	8991470	Identifier	tempref		8991416	1					
ANR	8991471	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		8991416	5					
ANR	8991472	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	3151:8:100876:100915	8991416	0	True				
ANR	8991473	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		8991416	0		&&			
ANR	8991474	RelationalExpression	code > 0		8991416	0		>			
ANR	8991475	Identifier	code		8991416	0					
ANR	8991476	PrimaryExpression	0		8991416	1					
ANR	8991477	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		8991416	1					
ANR	8991478	UnaryOperator	!		8991416	0					
ANR	8991479	CallExpression	"r_has_type ( tempref , t_null )"		8991416	1					
ANR	8991480	Callee	r_has_type		8991416	0					
ANR	8991481	Identifier	r_has_type		8991416	0					
ANR	8991482	ArgumentList	tempref		8991416	1					
ANR	8991483	Argument	tempref		8991416	0					
ANR	8991484	Identifier	tempref		8991416	0					
ANR	8991485	Argument	t_null		8991416	1					
ANR	8991486	Identifier	t_null		8991416	0					
ANR	8991487	CompoundStatement		11:50:305:305	8991416	1					
ANR	8991488	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"	3152:8:100928:100980	8991416	0	True				
ANR	8991489	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"		8991416	0		=			
ANR	8991490	Identifier	code		8991416	0					
ANR	8991491	CallExpression	"get_cie_param_array ( imemory , tempref , 8 , ptr )"		8991416	1					
ANR	8991492	Callee	get_cie_param_array		8991416	0					
ANR	8991493	Identifier	get_cie_param_array		8991416	0					
ANR	8991494	ArgumentList	imemory		8991416	1					
ANR	8991495	Argument	imemory		8991416	0					
ANR	8991496	Identifier	imemory		8991416	0					
ANR	8991497	Argument	tempref		8991416	1					
ANR	8991498	Identifier	tempref		8991416	0					
ANR	8991499	Argument	8		8991416	2					
ANR	8991500	PrimaryExpression	8		8991416	0					
ANR	8991501	Argument	ptr		8991416	3					
ANR	8991502	Identifier	ptr		8991416	0					
ANR	8991503	IfStatement	if ( code < 0 )		8991416	1					
ANR	8991504	Condition	code < 0	3153:12:100994:101001	8991416	0	True				
ANR	8991505	RelationalExpression	code < 0		8991416	0		<			
ANR	8991506	Identifier	code		8991416	0					
ANR	8991507	PrimaryExpression	0		8991416	1					
ANR	8991508	ReturnStatement	return code ;	3154:12:101016:101027	8991416	1	True				
ANR	8991509	Identifier	code		8991416	0					
ANR	8991510	ElseStatement	else		8991416	0					
ANR	8991511	CompoundStatement		15:11:427:427	8991416	0					
ANR	8991512	ExpressionStatement	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"	3157:5:101095:101136	8991416	0	True				
ANR	8991513	CallExpression	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"		8991416	0					
ANR	8991514	Callee	memcpy		8991416	0					
ANR	8991515	Identifier	memcpy		8991416	0					
ANR	8991516	ArgumentList	ptr		8991416	1					
ANR	8991517	Argument	ptr		8991416	0					
ANR	8991518	Identifier	ptr		8991416	0					
ANR	8991519	Argument	default_0_1		8991416	1					
ANR	8991520	Identifier	default_0_1		8991416	0					
ANR	8991521	Argument	8 * sizeof ( float )		8991416	2					
ANR	8991522	MultiplicativeExpression	8 * sizeof ( float )		8991416	0		*			
ANR	8991523	PrimaryExpression	8		8991416	0					
ANR	8991524	SizeofExpression	sizeof ( float )		8991416	1					
ANR	8991525	Sizeof	sizeof		8991416	0					
ANR	8991526	SizeofOperand	float		8991416	1					
ANR	8991527	ReturnStatement	return 0 ;	3159:4:101148:101156	8991416	6	True				
ANR	8991528	PrimaryExpression	0		8991416	0					
ANR	8991529	ReturnType	static int		8991416	1					
ANR	8991530	Identifier	ciedefgrange		8991416	2					
ANR	8991531	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8991416	3					
ANR	8991532	Parameter	i_ctx_t * i_ctx_p	3140:24:100569:100585	8991416	0	True				
ANR	8991533	ParameterType	i_ctx_t *		8991416	0					
ANR	8991534	Identifier	i_ctx_p		8991416	1					
ANR	8991535	Parameter	ref * space	3140:43:100588:100597	8991416	1	True				
ANR	8991536	ParameterType	ref *		8991416	0					
ANR	8991537	Identifier	space		8991416	1					
ANR	8991538	Parameter	float * ptr	3140:55:100600:100609	8991416	2	True				
ANR	8991539	ParameterType	float *		8991416	0					
ANR	8991540	Identifier	ptr		8991416	1					
ANR	8991541	CFGEntryNode	ENTRY		8991416		True				
ANR	8991542	CFGExitNode	EXIT		8991416		True				
ANR	8991543	Symbol	code		8991416						
ANR	8991544	Symbol	dict_find_string		8991416						
ANR	8991545	Symbol	array_get		8991416						
ANR	8991546	Symbol	& CIEdict		8991416						
ANR	8991547	Symbol	& tempref		8991416						
ANR	8991548	Symbol	space		8991416						
ANR	8991549	Symbol	ptr		8991416						
ANR	8991550	Symbol	t_null		8991416						
ANR	8991551	Symbol	r_has_type		8991416						
ANR	8991552	Symbol	i_ctx_p		8991416						
ANR	8991553	Symbol	CIEdict		8991416						
ANR	8991554	Symbol	imemory		8991416						
ANR	8991555	Symbol	get_cie_param_array		8991416						
ANR	8991556	Symbol	default_0_1		8991416						
ANR	8991557	Symbol	tempref		8991416						
ANR	8991558	Function	ciedefgvalidate	3161:0:101160:101539							
ANR	8991559	FunctionDef	"ciedefgvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8991558	0					
ANR	8991560	CompoundStatement		3162:0:101247:101539	8991558	0					
ANR	8991561	IdentifierDeclStatement	os_ptr op = osp ;	3163:4:101253:101268	8991558	0	True				
ANR	8991562	IdentifierDecl	op = osp		8991558	0					
ANR	8991563	IdentifierDeclType	os_ptr		8991558	0					
ANR	8991564	Identifier	op		8991558	1					
ANR	8991565	AssignmentExpression	op = osp		8991558	2		=			
ANR	8991566	Identifier	osp		8991558	0					
ANR	8991567	Identifier	osp		8991558	1					
ANR	8991568	IdentifierDeclStatement	int i ;	3164:4:101274:101279	8991558	1	True				
ANR	8991569	IdentifierDecl	i		8991558	0					
ANR	8991570	IdentifierDeclType	int		8991558	0					
ANR	8991571	Identifier	i		8991558	1					
ANR	8991572	IfStatement	if ( num_comps < 4 )		8991558	2					
ANR	8991573	Condition	num_comps < 4	3166:8:101290:101302	8991558	0	True				
ANR	8991574	RelationalExpression	num_comps < 4		8991558	0		<			
ANR	8991575	Identifier	num_comps		8991558	0					
ANR	8991576	PrimaryExpression	4		8991558	1					
ANR	8991577	ExpressionStatement	return_error ( gs_error_stackunderflow )	3167:8:101313:101350	8991558	1	True				
ANR	8991578	CallExpression	return_error ( gs_error_stackunderflow )		8991558	0					
ANR	8991579	Callee	return_error		8991558	0					
ANR	8991580	Identifier	return_error		8991558	0					
ANR	8991581	ArgumentList	gs_error_stackunderflow		8991558	1					
ANR	8991582	Argument	gs_error_stackunderflow		8991558	0					
ANR	8991583	Identifier	gs_error_stackunderflow		8991558	0					
ANR	8991584	ExpressionStatement	op -= 3	3169:4:101357:101364	8991558	3	True				
ANR	8991585	AssignmentExpression	op -= 3		8991558	0		-=			
ANR	8991586	Identifier	op		8991558	0					
ANR	8991587	PrimaryExpression	3		8991558	1					
ANR	8991588	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8991558	4					
ANR	8991589	ForInit	i = 0 ;	3170:9:101375:101378	8991558	0	True				
ANR	8991590	AssignmentExpression	i = 0		8991558	0		=			
ANR	8991591	Identifier	i		8991558	0					
ANR	8991592	PrimaryExpression	0		8991558	1					
ANR	8991593	Condition	i < 4	3170:13:101379:101383	8991558	1	True				
ANR	8991594	RelationalExpression	i < 4		8991558	0		<			
ANR	8991595	Identifier	i		8991558	0					
ANR	8991596	PrimaryExpression	4		8991558	1					
ANR	8991597	PostIncDecOperationExpression	i ++	3170:19:101385:101387	8991558	2	True				
ANR	8991598	Identifier	i		8991558	0					
ANR	8991599	IncDec	++		8991558	1					
ANR	8991600	CompoundStatement		9:24:142:142	8991558	3					
ANR	8991601	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8991558	0					
ANR	8991602	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	3171:12:101404:101456	8991558	0	True				
ANR	8991603	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8991558	0		&&			
ANR	8991604	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8991558	0					
ANR	8991605	UnaryOperator	!		8991558	0					
ANR	8991606	CallExpression	"r_has_type ( op , t_integer )"		8991558	1					
ANR	8991607	Callee	r_has_type		8991558	0					
ANR	8991608	Identifier	r_has_type		8991558	0					
ANR	8991609	ArgumentList	op		8991558	1					
ANR	8991610	Argument	op		8991558	0					
ANR	8991611	Identifier	op		8991558	0					
ANR	8991612	Argument	t_integer		8991558	1					
ANR	8991613	Identifier	t_integer		8991558	0					
ANR	8991614	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8991558	1					
ANR	8991615	UnaryOperator	!		8991558	0					
ANR	8991616	CallExpression	"r_has_type ( op , t_real )"		8991558	1					
ANR	8991617	Callee	r_has_type		8991558	0					
ANR	8991618	Identifier	r_has_type		8991558	0					
ANR	8991619	ArgumentList	op		8991558	1					
ANR	8991620	Argument	op		8991558	0					
ANR	8991621	Identifier	op		8991558	0					
ANR	8991622	Argument	t_real		8991558	1					
ANR	8991623	Identifier	t_real		8991558	0					
ANR	8991624	ExpressionStatement	return_error ( gs_error_typecheck )	3172:12:101471:101503	8991558	1	True				
ANR	8991625	CallExpression	return_error ( gs_error_typecheck )		8991558	0					
ANR	8991626	Callee	return_error		8991558	0					
ANR	8991627	Identifier	return_error		8991558	0					
ANR	8991628	ArgumentList	gs_error_typecheck		8991558	1					
ANR	8991629	Argument	gs_error_typecheck		8991558	0					
ANR	8991630	Identifier	gs_error_typecheck		8991558	0					
ANR	8991631	ExpressionStatement	op ++	3173:8:101513:101517	8991558	1	True				
ANR	8991632	PostIncDecOperationExpression	op ++		8991558	0					
ANR	8991633	Identifier	op		8991558	0					
ANR	8991634	IncDec	++		8991558	1					
ANR	8991635	ReturnStatement	return 0 ;	3175:4:101529:101537	8991558	5	True				
ANR	8991636	PrimaryExpression	0		8991558	0					
ANR	8991637	ReturnType	static int		8991558	1					
ANR	8991638	Identifier	ciedefgvalidate		8991558	2					
ANR	8991639	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8991558	3					
ANR	8991640	Parameter	i_ctx_t * i_ctx_p	3161:27:101187:101202	8991558	0	True				
ANR	8991641	ParameterType	i_ctx_t *		8991558	0					
ANR	8991642	Identifier	i_ctx_p		8991558	1					
ANR	8991643	Parameter	ref * space	3161:45:101205:101214	8991558	1	True				
ANR	8991644	ParameterType	ref *		8991558	0					
ANR	8991645	Identifier	space		8991558	1					
ANR	8991646	Parameter	float * values	3161:57:101217:101229	8991558	2	True				
ANR	8991647	ParameterType	float *		8991558	0					
ANR	8991648	Identifier	values		8991558	1					
ANR	8991649	Parameter	int num_comps	3161:72:101232:101244	8991558	3	True				
ANR	8991650	ParameterType	int		8991558	0					
ANR	8991651	Identifier	num_comps		8991558	1					
ANR	8991652	CFGEntryNode	ENTRY		8991558		True				
ANR	8991653	CFGExitNode	EXIT		8991558		True				
ANR	8991654	Symbol	op		8991558						
ANR	8991655	Symbol	r_has_type		8991558						
ANR	8991656	Symbol	gs_error_typecheck		8991558						
ANR	8991657	Symbol	t_integer		8991558						
ANR	8991658	Symbol	gs_error_stackunderflow		8991558						
ANR	8991659	Symbol	i_ctx_p		8991558						
ANR	8991660	Symbol	values		8991558						
ANR	8991661	Symbol	num_comps		8991558						
ANR	8991662	Symbol	i		8991558						
ANR	8991663	Symbol	t_real		8991558						
ANR	8991664	Symbol	osp		8991558						
ANR	8991665	Symbol	space		8991558						
ANR	8991666	Function	ciedefgcompareproc	3177:0:101541:103101							
ANR	8991667	FunctionDef	"ciedefgcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8991666	0					
ANR	8991668	CompoundStatement		3178:0:101617:103101	8991666	0					
ANR	8991669	IdentifierDeclStatement	int code = 0 ;	3182:4:101728:101740	8991666	0	True				
ANR	8991670	IdentifierDecl	code = 0		8991666	0					
ANR	8991671	IdentifierDeclType	int		8991666	0					
ANR	8991672	Identifier	code		8991666	1					
ANR	8991673	AssignmentExpression	code = 0		8991666	2		=			
ANR	8991674	Identifier	code		8991666	0					
ANR	8991675	PrimaryExpression	0		8991666	1					
ANR	8991676	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	3183:4:101746:101768	8991666	1	True				
ANR	8991677	IdentifierDecl	CIEdict1		8991666	0					
ANR	8991678	IdentifierDeclType	ref		8991666	0					
ANR	8991679	Identifier	CIEdict1		8991666	1					
ANR	8991680	IdentifierDecl	CIEdict2		8991666	1					
ANR	8991681	IdentifierDeclType	ref		8991666	0					
ANR	8991682	Identifier	CIEdict2		8991666	1					
ANR	8991683	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	3185:4:101775:101821	8991666	2	True				
ANR	8991684	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		8991666	0		=			
ANR	8991685	Identifier	code		8991666	0					
ANR	8991686	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		8991666	1					
ANR	8991687	Callee	array_get		8991666	0					
ANR	8991688	Identifier	array_get		8991666	0					
ANR	8991689	ArgumentList	imemory		8991666	1					
ANR	8991690	Argument	imemory		8991666	0					
ANR	8991691	Identifier	imemory		8991666	0					
ANR	8991692	Argument	space		8991666	1					
ANR	8991693	Identifier	space		8991666	0					
ANR	8991694	Argument	1		8991666	2					
ANR	8991695	PrimaryExpression	1		8991666	0					
ANR	8991696	Argument	& CIEdict1		8991666	3					
ANR	8991697	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991698	UnaryOperator	&		8991666	0					
ANR	8991699	Identifier	CIEdict1		8991666	1					
ANR	8991700	IfStatement	if ( code < 0 )		8991666	3					
ANR	8991701	Condition	code < 0	3186:8:101831:101838	8991666	0	True				
ANR	8991702	RelationalExpression	code < 0		8991666	0		<			
ANR	8991703	Identifier	code		8991666	0					
ANR	8991704	PrimaryExpression	0		8991666	1					
ANR	8991705	ReturnStatement	return 0 ;	3187:8:101849:101857	8991666	1	True				
ANR	8991706	PrimaryExpression	0		8991666	0					
ANR	8991707	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	3188:4:101863:101913	8991666	4	True				
ANR	8991708	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		8991666	0		=			
ANR	8991709	Identifier	code		8991666	0					
ANR	8991710	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		8991666	1					
ANR	8991711	Callee	array_get		8991666	0					
ANR	8991712	Identifier	array_get		8991666	0					
ANR	8991713	ArgumentList	imemory		8991666	1					
ANR	8991714	Argument	imemory		8991666	0					
ANR	8991715	Identifier	imemory		8991666	0					
ANR	8991716	Argument	testspace		8991666	1					
ANR	8991717	Identifier	testspace		8991666	0					
ANR	8991718	Argument	1		8991666	2					
ANR	8991719	PrimaryExpression	1		8991666	0					
ANR	8991720	Argument	& CIEdict2		8991666	3					
ANR	8991721	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991722	UnaryOperator	&		8991666	0					
ANR	8991723	Identifier	CIEdict2		8991666	1					
ANR	8991724	IfStatement	if ( code < 0 )		8991666	5					
ANR	8991725	Condition	code < 0	3189:8:101923:101930	8991666	0	True				
ANR	8991726	RelationalExpression	code < 0		8991666	0		<			
ANR	8991727	Identifier	code		8991666	0					
ANR	8991728	PrimaryExpression	0		8991666	1					
ANR	8991729	ReturnStatement	return 0 ;	3190:8:101941:101949	8991666	1	True				
ANR	8991730	PrimaryExpression	0		8991666	0					
ANR	8991731	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		8991666	6					
ANR	8991732	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	3191:8:101959:102026	8991666	0	True				
ANR	8991733	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8991666	0					
ANR	8991734	UnaryOperator	!		8991666	0					
ANR	8991735	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		8991666	1					
ANR	8991736	Callee	comparedictkey		8991666	0					
ANR	8991737	Identifier	comparedictkey		8991666	0					
ANR	8991738	ArgumentList	i_ctx_p		8991666	1					
ANR	8991739	Argument	i_ctx_p		8991666	0					
ANR	8991740	Identifier	i_ctx_p		8991666	0					
ANR	8991741	Argument	& CIEdict1		8991666	1					
ANR	8991742	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991743	UnaryOperator	&		8991666	0					
ANR	8991744	Identifier	CIEdict1		8991666	1					
ANR	8991745	Argument	& CIEdict2		8991666	2					
ANR	8991746	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991747	UnaryOperator	&		8991666	0					
ANR	8991748	Identifier	CIEdict2		8991666	1					
ANR	8991749	Argument	"( char * ) ""WhitePoint"""		8991666	3					
ANR	8991750	CastExpression	"( char * ) ""WhitePoint"""		8991666	0					
ANR	8991751	CastTarget	char *		8991666	0					
ANR	8991752	PrimaryExpression	"""WhitePoint"""		8991666	1					
ANR	8991753	ReturnStatement	return 0 ;	3192:8:102037:102045	8991666	1	True				
ANR	8991754	PrimaryExpression	0		8991666	0					
ANR	8991755	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		8991666	7					
ANR	8991756	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	3193:8:102055:102122	8991666	0	True				
ANR	8991757	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8991666	0					
ANR	8991758	UnaryOperator	!		8991666	0					
ANR	8991759	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		8991666	1					
ANR	8991760	Callee	comparedictkey		8991666	0					
ANR	8991761	Identifier	comparedictkey		8991666	0					
ANR	8991762	ArgumentList	i_ctx_p		8991666	1					
ANR	8991763	Argument	i_ctx_p		8991666	0					
ANR	8991764	Identifier	i_ctx_p		8991666	0					
ANR	8991765	Argument	& CIEdict1		8991666	1					
ANR	8991766	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991767	UnaryOperator	&		8991666	0					
ANR	8991768	Identifier	CIEdict1		8991666	1					
ANR	8991769	Argument	& CIEdict2		8991666	2					
ANR	8991770	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991771	UnaryOperator	&		8991666	0					
ANR	8991772	Identifier	CIEdict2		8991666	1					
ANR	8991773	Argument	"( char * ) ""BlackPoint"""		8991666	3					
ANR	8991774	CastExpression	"( char * ) ""BlackPoint"""		8991666	0					
ANR	8991775	CastTarget	char *		8991666	0					
ANR	8991776	PrimaryExpression	"""BlackPoint"""		8991666	1					
ANR	8991777	ReturnStatement	return 0 ;	3194:8:102133:102141	8991666	1	True				
ANR	8991778	PrimaryExpression	0		8991666	0					
ANR	8991779	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		8991666	8					
ANR	8991780	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	3195:8:102151:102216	8991666	0	True				
ANR	8991781	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8991666	0					
ANR	8991782	UnaryOperator	!		8991666	0					
ANR	8991783	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		8991666	1					
ANR	8991784	Callee	comparedictkey		8991666	0					
ANR	8991785	Identifier	comparedictkey		8991666	0					
ANR	8991786	ArgumentList	i_ctx_p		8991666	1					
ANR	8991787	Argument	i_ctx_p		8991666	0					
ANR	8991788	Identifier	i_ctx_p		8991666	0					
ANR	8991789	Argument	& CIEdict1		8991666	1					
ANR	8991790	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991791	UnaryOperator	&		8991666	0					
ANR	8991792	Identifier	CIEdict1		8991666	1					
ANR	8991793	Argument	& CIEdict2		8991666	2					
ANR	8991794	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991795	UnaryOperator	&		8991666	0					
ANR	8991796	Identifier	CIEdict2		8991666	1					
ANR	8991797	Argument	"( char * ) ""RangeABC"""		8991666	3					
ANR	8991798	CastExpression	"( char * ) ""RangeABC"""		8991666	0					
ANR	8991799	CastTarget	char *		8991666	0					
ANR	8991800	PrimaryExpression	"""RangeABC"""		8991666	1					
ANR	8991801	ReturnStatement	return 0 ;	3196:8:102227:102235	8991666	1	True				
ANR	8991802	PrimaryExpression	0		8991666	0					
ANR	8991803	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		8991666	9					
ANR	8991804	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	3197:8:102245:102311	8991666	0	True				
ANR	8991805	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8991666	0					
ANR	8991806	UnaryOperator	!		8991666	0					
ANR	8991807	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		8991666	1					
ANR	8991808	Callee	comparedictkey		8991666	0					
ANR	8991809	Identifier	comparedictkey		8991666	0					
ANR	8991810	ArgumentList	i_ctx_p		8991666	1					
ANR	8991811	Argument	i_ctx_p		8991666	0					
ANR	8991812	Identifier	i_ctx_p		8991666	0					
ANR	8991813	Argument	& CIEdict1		8991666	1					
ANR	8991814	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991815	UnaryOperator	&		8991666	0					
ANR	8991816	Identifier	CIEdict1		8991666	1					
ANR	8991817	Argument	& CIEdict2		8991666	2					
ANR	8991818	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991819	UnaryOperator	&		8991666	0					
ANR	8991820	Identifier	CIEdict2		8991666	1					
ANR	8991821	Argument	"( char * ) ""DecodeABC"""		8991666	3					
ANR	8991822	CastExpression	"( char * ) ""DecodeABC"""		8991666	0					
ANR	8991823	CastTarget	char *		8991666	0					
ANR	8991824	PrimaryExpression	"""DecodeABC"""		8991666	1					
ANR	8991825	ReturnStatement	return 0 ;	3198:8:102322:102330	8991666	1	True				
ANR	8991826	PrimaryExpression	0		8991666	0					
ANR	8991827	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		8991666	10					
ANR	8991828	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	3199:8:102340:102406	8991666	0	True				
ANR	8991829	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8991666	0					
ANR	8991830	UnaryOperator	!		8991666	0					
ANR	8991831	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		8991666	1					
ANR	8991832	Callee	comparedictkey		8991666	0					
ANR	8991833	Identifier	comparedictkey		8991666	0					
ANR	8991834	ArgumentList	i_ctx_p		8991666	1					
ANR	8991835	Argument	i_ctx_p		8991666	0					
ANR	8991836	Identifier	i_ctx_p		8991666	0					
ANR	8991837	Argument	& CIEdict1		8991666	1					
ANR	8991838	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991839	UnaryOperator	&		8991666	0					
ANR	8991840	Identifier	CIEdict1		8991666	1					
ANR	8991841	Argument	& CIEdict2		8991666	2					
ANR	8991842	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991843	UnaryOperator	&		8991666	0					
ANR	8991844	Identifier	CIEdict2		8991666	1					
ANR	8991845	Argument	"( char * ) ""MatrixABC"""		8991666	3					
ANR	8991846	CastExpression	"( char * ) ""MatrixABC"""		8991666	0					
ANR	8991847	CastTarget	char *		8991666	0					
ANR	8991848	PrimaryExpression	"""MatrixABC"""		8991666	1					
ANR	8991849	ReturnStatement	return 0 ;	3200:8:102417:102425	8991666	1	True				
ANR	8991850	PrimaryExpression	0		8991666	0					
ANR	8991851	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		8991666	11					
ANR	8991852	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	3201:8:102435:102500	8991666	0	True				
ANR	8991853	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8991666	0					
ANR	8991854	UnaryOperator	!		8991666	0					
ANR	8991855	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		8991666	1					
ANR	8991856	Callee	comparedictkey		8991666	0					
ANR	8991857	Identifier	comparedictkey		8991666	0					
ANR	8991858	ArgumentList	i_ctx_p		8991666	1					
ANR	8991859	Argument	i_ctx_p		8991666	0					
ANR	8991860	Identifier	i_ctx_p		8991666	0					
ANR	8991861	Argument	& CIEdict1		8991666	1					
ANR	8991862	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991863	UnaryOperator	&		8991666	0					
ANR	8991864	Identifier	CIEdict1		8991666	1					
ANR	8991865	Argument	& CIEdict2		8991666	2					
ANR	8991866	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991867	UnaryOperator	&		8991666	0					
ANR	8991868	Identifier	CIEdict2		8991666	1					
ANR	8991869	Argument	"( char * ) ""RangeLMN"""		8991666	3					
ANR	8991870	CastExpression	"( char * ) ""RangeLMN"""		8991666	0					
ANR	8991871	CastTarget	char *		8991666	0					
ANR	8991872	PrimaryExpression	"""RangeLMN"""		8991666	1					
ANR	8991873	ReturnStatement	return 0 ;	3202:8:102511:102519	8991666	1	True				
ANR	8991874	PrimaryExpression	0		8991666	0					
ANR	8991875	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		8991666	12					
ANR	8991876	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	3203:8:102529:102595	8991666	0	True				
ANR	8991877	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8991666	0					
ANR	8991878	UnaryOperator	!		8991666	0					
ANR	8991879	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		8991666	1					
ANR	8991880	Callee	comparedictkey		8991666	0					
ANR	8991881	Identifier	comparedictkey		8991666	0					
ANR	8991882	ArgumentList	i_ctx_p		8991666	1					
ANR	8991883	Argument	i_ctx_p		8991666	0					
ANR	8991884	Identifier	i_ctx_p		8991666	0					
ANR	8991885	Argument	& CIEdict1		8991666	1					
ANR	8991886	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991887	UnaryOperator	&		8991666	0					
ANR	8991888	Identifier	CIEdict1		8991666	1					
ANR	8991889	Argument	& CIEdict2		8991666	2					
ANR	8991890	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991891	UnaryOperator	&		8991666	0					
ANR	8991892	Identifier	CIEdict2		8991666	1					
ANR	8991893	Argument	"( char * ) ""DecodeLMN"""		8991666	3					
ANR	8991894	CastExpression	"( char * ) ""DecodeLMN"""		8991666	0					
ANR	8991895	CastTarget	char *		8991666	0					
ANR	8991896	PrimaryExpression	"""DecodeLMN"""		8991666	1					
ANR	8991897	ReturnStatement	return 0 ;	3204:8:102606:102614	8991666	1	True				
ANR	8991898	PrimaryExpression	0		8991666	0					
ANR	8991899	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		8991666	13					
ANR	8991900	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	3205:8:102624:102689	8991666	0	True				
ANR	8991901	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8991666	0					
ANR	8991902	UnaryOperator	!		8991666	0					
ANR	8991903	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		8991666	1					
ANR	8991904	Callee	comparedictkey		8991666	0					
ANR	8991905	Identifier	comparedictkey		8991666	0					
ANR	8991906	ArgumentList	i_ctx_p		8991666	1					
ANR	8991907	Argument	i_ctx_p		8991666	0					
ANR	8991908	Identifier	i_ctx_p		8991666	0					
ANR	8991909	Argument	& CIEdict1		8991666	1					
ANR	8991910	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991911	UnaryOperator	&		8991666	0					
ANR	8991912	Identifier	CIEdict1		8991666	1					
ANR	8991913	Argument	& CIEdict2		8991666	2					
ANR	8991914	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991915	UnaryOperator	&		8991666	0					
ANR	8991916	Identifier	CIEdict2		8991666	1					
ANR	8991917	Argument	"( char * ) ""MatrixMN"""		8991666	3					
ANR	8991918	CastExpression	"( char * ) ""MatrixMN"""		8991666	0					
ANR	8991919	CastTarget	char *		8991666	0					
ANR	8991920	PrimaryExpression	"""MatrixMN"""		8991666	1					
ANR	8991921	ReturnStatement	return 0 ;	3206:8:102700:102708	8991666	1	True				
ANR	8991922	PrimaryExpression	0		8991666	0					
ANR	8991923	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" ) )"		8991666	14					
ANR	8991924	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"	3207:8:102718:102784	8991666	0	True				
ANR	8991925	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"		8991666	0					
ANR	8991926	UnaryOperator	!		8991666	0					
ANR	8991927	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"		8991666	1					
ANR	8991928	Callee	comparedictkey		8991666	0					
ANR	8991929	Identifier	comparedictkey		8991666	0					
ANR	8991930	ArgumentList	i_ctx_p		8991666	1					
ANR	8991931	Argument	i_ctx_p		8991666	0					
ANR	8991932	Identifier	i_ctx_p		8991666	0					
ANR	8991933	Argument	& CIEdict1		8991666	1					
ANR	8991934	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991935	UnaryOperator	&		8991666	0					
ANR	8991936	Identifier	CIEdict1		8991666	1					
ANR	8991937	Argument	& CIEdict2		8991666	2					
ANR	8991938	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991939	UnaryOperator	&		8991666	0					
ANR	8991940	Identifier	CIEdict2		8991666	1					
ANR	8991941	Argument	"( char * ) ""RangeDEFG"""		8991666	3					
ANR	8991942	CastExpression	"( char * ) ""RangeDEFG"""		8991666	0					
ANR	8991943	CastTarget	char *		8991666	0					
ANR	8991944	PrimaryExpression	"""RangeDEFG"""		8991666	1					
ANR	8991945	ReturnStatement	return 0 ;	3208:8:102795:102803	8991666	1	True				
ANR	8991946	PrimaryExpression	0		8991666	0					
ANR	8991947	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" ) )"		8991666	15					
ANR	8991948	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"	3209:8:102813:102880	8991666	0	True				
ANR	8991949	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"		8991666	0					
ANR	8991950	UnaryOperator	!		8991666	0					
ANR	8991951	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"		8991666	1					
ANR	8991952	Callee	comparedictkey		8991666	0					
ANR	8991953	Identifier	comparedictkey		8991666	0					
ANR	8991954	ArgumentList	i_ctx_p		8991666	1					
ANR	8991955	Argument	i_ctx_p		8991666	0					
ANR	8991956	Identifier	i_ctx_p		8991666	0					
ANR	8991957	Argument	& CIEdict1		8991666	1					
ANR	8991958	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991959	UnaryOperator	&		8991666	0					
ANR	8991960	Identifier	CIEdict1		8991666	1					
ANR	8991961	Argument	& CIEdict2		8991666	2					
ANR	8991962	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991963	UnaryOperator	&		8991666	0					
ANR	8991964	Identifier	CIEdict2		8991666	1					
ANR	8991965	Argument	"( char * ) ""DecodeDEFG"""		8991666	3					
ANR	8991966	CastExpression	"( char * ) ""DecodeDEFG"""		8991666	0					
ANR	8991967	CastTarget	char *		8991666	0					
ANR	8991968	PrimaryExpression	"""DecodeDEFG"""		8991666	1					
ANR	8991969	ReturnStatement	return 0 ;	3210:8:102891:102899	8991666	1	True				
ANR	8991970	PrimaryExpression	0		8991666	0					
ANR	8991971	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" ) )"		8991666	16					
ANR	8991972	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"	3211:8:102909:102975	8991666	0	True				
ANR	8991973	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"		8991666	0					
ANR	8991974	UnaryOperator	!		8991666	0					
ANR	8991975	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"		8991666	1					
ANR	8991976	Callee	comparedictkey		8991666	0					
ANR	8991977	Identifier	comparedictkey		8991666	0					
ANR	8991978	ArgumentList	i_ctx_p		8991666	1					
ANR	8991979	Argument	i_ctx_p		8991666	0					
ANR	8991980	Identifier	i_ctx_p		8991666	0					
ANR	8991981	Argument	& CIEdict1		8991666	1					
ANR	8991982	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8991983	UnaryOperator	&		8991666	0					
ANR	8991984	Identifier	CIEdict1		8991666	1					
ANR	8991985	Argument	& CIEdict2		8991666	2					
ANR	8991986	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8991987	UnaryOperator	&		8991666	0					
ANR	8991988	Identifier	CIEdict2		8991666	1					
ANR	8991989	Argument	"( char * ) ""RangeHIJK"""		8991666	3					
ANR	8991990	CastExpression	"( char * ) ""RangeHIJK"""		8991666	0					
ANR	8991991	CastTarget	char *		8991666	0					
ANR	8991992	PrimaryExpression	"""RangeHIJK"""		8991666	1					
ANR	8991993	ReturnStatement	return 0 ;	3212:8:102986:102994	8991666	1	True				
ANR	8991994	PrimaryExpression	0		8991666	0					
ANR	8991995	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" ) )"		8991666	17					
ANR	8991996	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"	3213:8:103004:103066	8991666	0	True				
ANR	8991997	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		8991666	0					
ANR	8991998	UnaryOperator	!		8991666	0					
ANR	8991999	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		8991666	1					
ANR	8992000	Callee	comparedictkey		8991666	0					
ANR	8992001	Identifier	comparedictkey		8991666	0					
ANR	8992002	ArgumentList	i_ctx_p		8991666	1					
ANR	8992003	Argument	i_ctx_p		8991666	0					
ANR	8992004	Identifier	i_ctx_p		8991666	0					
ANR	8992005	Argument	& CIEdict1		8991666	1					
ANR	8992006	UnaryOperationExpression	& CIEdict1		8991666	0					
ANR	8992007	UnaryOperator	&		8991666	0					
ANR	8992008	Identifier	CIEdict1		8991666	1					
ANR	8992009	Argument	& CIEdict2		8991666	2					
ANR	8992010	UnaryOperationExpression	& CIEdict2		8991666	0					
ANR	8992011	UnaryOperator	&		8991666	0					
ANR	8992012	Identifier	CIEdict2		8991666	1					
ANR	8992013	Argument	"( char * ) ""Table"""		8991666	3					
ANR	8992014	CastExpression	"( char * ) ""Table"""		8991666	0					
ANR	8992015	CastTarget	char *		8991666	0					
ANR	8992016	PrimaryExpression	"""Table"""		8991666	1					
ANR	8992017	ReturnStatement	return 0 ;	3214:8:103077:103085	8991666	1	True				
ANR	8992018	PrimaryExpression	0		8991666	0					
ANR	8992019	ReturnStatement	return 1 ;	3215:4:103091:103099	8991666	18	True				
ANR	8992020	PrimaryExpression	1		8991666	0					
ANR	8992021	ReturnType	static int		8991666	1					
ANR	8992022	Identifier	ciedefgcompareproc		8991666	2					
ANR	8992023	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8991666	3					
ANR	8992024	Parameter	i_ctx_t * i_ctx_p	3177:30:101571:101586	8991666	0	True				
ANR	8992025	ParameterType	i_ctx_t *		8991666	0					
ANR	8992026	Identifier	i_ctx_p		8991666	1					
ANR	8992027	Parameter	ref * space	3177:48:101589:101598	8991666	1	True				
ANR	8992028	ParameterType	ref *		8991666	0					
ANR	8992029	Identifier	space		8991666	1					
ANR	8992030	Parameter	ref * testspace	3177:60:101601:101614	8991666	2	True				
ANR	8992031	ParameterType	ref *		8991666	0					
ANR	8992032	Identifier	testspace		8991666	1					
ANR	8992033	CFGEntryNode	ENTRY		8991666		True				
ANR	8992034	CFGExitNode	EXIT		8991666		True				
ANR	8992035	Symbol	code		8991666						
ANR	8992036	Symbol	testspace		8991666						
ANR	8992037	Symbol	i_ctx_p		8991666						
ANR	8992038	Symbol	array_get		8991666						
ANR	8992039	Symbol	CIEdict1		8991666						
ANR	8992040	Symbol	CIEdict2		8991666						
ANR	8992041	Symbol	imemory		8991666						
ANR	8992042	Symbol	comparedictkey		8991666						
ANR	8992043	Symbol	& CIEdict2		8991666						
ANR	8992044	Symbol	& CIEdict1		8991666						
ANR	8992045	Symbol	space		8991666						
ANR	8992046	Function	ciebasecolor	3228:0:103416:105412							
ANR	8992047	FunctionDef	"ciebasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8992046	0					
ANR	8992048	CompoundStatement		3229:0:103522:105412	8992046	0					
ANR	8992049	IdentifierDeclStatement	os_ptr op ;	3230:4:103528:103537	8992046	0	True				
ANR	8992050	IdentifierDecl	op		8992046	0					
ANR	8992051	IdentifierDeclType	os_ptr		8992046	0					
ANR	8992052	Identifier	op		8992046	1					
ANR	8992053	IdentifierDeclStatement	"ref * spacename , nref ;"	3231:4:103543:103563	8992046	1	True				
ANR	8992054	IdentifierDecl	* spacename		8992046	0					
ANR	8992055	IdentifierDeclType	ref *		8992046	0					
ANR	8992056	Identifier	spacename		8992046	1					
ANR	8992057	IdentifierDecl	nref		8992046	1					
ANR	8992058	IdentifierDeclType	ref		8992046	0					
ANR	8992059	Identifier	nref		8992046	1					
ANR	8992060	IdentifierDeclStatement	"int i , components = 1 , code ;"	3232:4:103569:103594	8992046	2	True				
ANR	8992061	IdentifierDecl	i		8992046	0					
ANR	8992062	IdentifierDeclType	int		8992046	0					
ANR	8992063	Identifier	i		8992046	1					
ANR	8992064	IdentifierDecl	components = 1		8992046	1					
ANR	8992065	IdentifierDeclType	int		8992046	0					
ANR	8992066	Identifier	components		8992046	1					
ANR	8992067	AssignmentExpression	components = 1		8992046	2		=			
ANR	8992068	Identifier	components		8992046	0					
ANR	8992069	PrimaryExpression	1		8992046	1					
ANR	8992070	IdentifierDecl	code		8992046	2					
ANR	8992071	IdentifierDeclType	int		8992046	0					
ANR	8992072	Identifier	code		8992046	1					
ANR	8992073	IfStatement	if ( r_is_array ( space ) )		8992046	3					
ANR	8992074	Condition	r_is_array ( space )	3235:8:103679:103695	8992046	0	True				
ANR	8992075	CallExpression	r_is_array ( space )		8992046	0					
ANR	8992076	Callee	r_is_array		8992046	0					
ANR	8992077	Identifier	r_is_array		8992046	0					
ANR	8992078	ArgumentList	space		8992046	1					
ANR	8992079	Argument	space		8992046	0					
ANR	8992080	Identifier	space		8992046	0					
ANR	8992081	ExpressionStatement	spacename = space -> value . refs	3236:8:103706:103735	8992046	1	True				
ANR	8992082	AssignmentExpression	spacename = space -> value . refs		8992046	0		=			
ANR	8992083	Identifier	spacename		8992046	0					
ANR	8992084	MemberAccess	space -> value . refs		8992046	1					
ANR	8992085	PtrMemberAccess	space -> value		8992046	0					
ANR	8992086	Identifier	space		8992046	0					
ANR	8992087	Identifier	value		8992046	1					
ANR	8992088	Identifier	refs		8992046	1					
ANR	8992089	ElseStatement	else		8992046	0					
ANR	8992090	ExpressionStatement	spacename = space	3238:8:103754:103771	8992046	0	True				
ANR	8992091	AssignmentExpression	spacename = space		8992046	0		=			
ANR	8992092	Identifier	spacename		8992046	0					
ANR	8992093	Identifier	space		8992046	1					
ANR	8992094	IfStatement	"if ( ! r_has_type ( spacename , t_name ) )"		8992046	4					
ANR	8992095	Condition	"! r_has_type ( spacename , t_name )"	3240:8:103822:103851	8992046	0	True				
ANR	8992096	UnaryOperationExpression	"! r_has_type ( spacename , t_name )"		8992046	0					
ANR	8992097	UnaryOperator	!		8992046	0					
ANR	8992098	CallExpression	"r_has_type ( spacename , t_name )"		8992046	1					
ANR	8992099	Callee	r_has_type		8992046	0					
ANR	8992100	Identifier	r_has_type		8992046	0					
ANR	8992101	ArgumentList	spacename		8992046	1					
ANR	8992102	Argument	spacename		8992046	0					
ANR	8992103	Identifier	spacename		8992046	0					
ANR	8992104	Argument	t_name		8992046	1					
ANR	8992105	Identifier	t_name		8992046	0					
ANR	8992106	ExpressionStatement	return_error ( gs_error_typecheck )	3241:8:103862:103894	8992046	1	True				
ANR	8992107	CallExpression	return_error ( gs_error_typecheck )		8992046	0					
ANR	8992108	Callee	return_error		8992046	0					
ANR	8992109	Identifier	return_error		8992046	0					
ANR	8992110	ArgumentList	gs_error_typecheck		8992046	1					
ANR	8992111	Argument	gs_error_typecheck		8992046	0					
ANR	8992112	Identifier	gs_error_typecheck		8992046	0					
ANR	8992113	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8992046	5					
ANR	8992114	ForInit	i = 0 ;	3244:9:103953:103956	8992046	0	True				
ANR	8992115	AssignmentExpression	i = 0		8992046	0		=			
ANR	8992116	Identifier	i		8992046	0					
ANR	8992117	PrimaryExpression	0		8992046	1					
ANR	8992118	Condition	i < 4	3244:13:103957:103959	8992046	1	True				
ANR	8992119	RelationalExpression	i < 4		8992046	0		<			
ANR	8992120	Identifier	i		8992046	0					
ANR	8992121	PrimaryExpression	4		8992046	1					
ANR	8992122	PostIncDecOperationExpression	i ++	3244:17:103961:103963	8992046	2	True				
ANR	8992123	Identifier	i		8992046	0					
ANR	8992124	IncDec	++		8992046	1					
ANR	8992125	CompoundStatement		16:22:443:443	8992046	3					
ANR	8992126	ExpressionStatement	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"	3245:8:103976:104088	8992046	0	True				
ANR	8992127	AssignmentExpression	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"		8992046	0		=			
ANR	8992128	Identifier	code		8992046	0					
ANR	8992129	CallExpression	"names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"		8992046	1					
ANR	8992130	Callee	names_ref		8992046	0					
ANR	8992131	Identifier	names_ref		8992046	0					
ANR	8992132	ArgumentList	imemory -> gs_lib_ctx -> gs_name_table		8992046	1					
ANR	8992133	Argument	imemory -> gs_lib_ctx -> gs_name_table		8992046	0					
ANR	8992134	PtrMemberAccess	imemory -> gs_lib_ctx -> gs_name_table		8992046	0					
ANR	8992135	PtrMemberAccess	imemory -> gs_lib_ctx		8992046	0					
ANR	8992136	Identifier	imemory		8992046	0					
ANR	8992137	Identifier	gs_lib_ctx		8992046	1					
ANR	8992138	Identifier	gs_name_table		8992046	1					
ANR	8992139	Argument	( const byte * ) CIESpaces [ i ]		8992046	1					
ANR	8992140	CastExpression	( const byte * ) CIESpaces [ i ]		8992046	0					
ANR	8992141	CastTarget	const byte *		8992046	0					
ANR	8992142	ArrayIndexing	CIESpaces [ i ]		8992046	1					
ANR	8992143	Identifier	CIESpaces		8992046	0					
ANR	8992144	Identifier	i		8992046	1					
ANR	8992145	Argument	strlen ( CIESpaces [ i ] )		8992046	2					
ANR	8992146	CallExpression	strlen ( CIESpaces [ i ] )		8992046	0					
ANR	8992147	Callee	strlen		8992046	0					
ANR	8992148	Identifier	strlen		8992046	0					
ANR	8992149	ArgumentList	CIESpaces [ i ]		8992046	1					
ANR	8992150	Argument	CIESpaces [ i ]		8992046	0					
ANR	8992151	ArrayIndexing	CIESpaces [ i ]		8992046	0					
ANR	8992152	Identifier	CIESpaces		8992046	0					
ANR	8992153	Identifier	i		8992046	1					
ANR	8992154	Argument	& nref		8992046	3					
ANR	8992155	UnaryOperationExpression	& nref		8992046	0					
ANR	8992156	UnaryOperator	&		8992046	0					
ANR	8992157	Identifier	nref		8992046	1					
ANR	8992158	Argument	0		8992046	4					
ANR	8992159	PrimaryExpression	0		8992046	0					
ANR	8992160	IfStatement	if ( code < 0 )		8992046	1					
ANR	8992161	Condition	code < 0	3246:12:104102:104109	8992046	0	True				
ANR	8992162	RelationalExpression	code < 0		8992046	0		<			
ANR	8992163	Identifier	code		8992046	0					
ANR	8992164	PrimaryExpression	0		8992046	1					
ANR	8992165	ReturnStatement	return code ;	3247:12:104124:104135	8992046	1	True				
ANR	8992166	Identifier	code		8992046	0					
ANR	8992167	IfStatement	"if ( name_eq ( spacename , & nref ) )"		8992046	2					
ANR	8992168	Condition	"name_eq ( spacename , & nref )"	3248:12:104149:104173	8992046	0	True				
ANR	8992169	CallExpression	"name_eq ( spacename , & nref )"		8992046	0					
ANR	8992170	Callee	name_eq		8992046	0					
ANR	8992171	Identifier	name_eq		8992046	0					
ANR	8992172	ArgumentList	spacename		8992046	1					
ANR	8992173	Argument	spacename		8992046	0					
ANR	8992174	Identifier	spacename		8992046	0					
ANR	8992175	Argument	& nref		8992046	1					
ANR	8992176	UnaryOperationExpression	& nref		8992046	0					
ANR	8992177	UnaryOperator	&		8992046	0					
ANR	8992178	Identifier	nref		8992046	1					
ANR	8992179	CompoundStatement		20:39:653:653	8992046	1					
ANR	8992180	BreakStatement	break ;	3249:12:104190:104195	8992046	0	True				
ANR	8992181	SwitchStatement	switch ( i )		8992046	6					
ANR	8992182	Condition	i	3255:11:104343:104343	8992046	0	True				
ANR	8992183	Identifier	i		8992046	0					
ANR	8992184	CompoundStatement		27:13:822:822	8992046	1					
ANR	8992185	Label	case 0 :	3256:8:104355:104361	8992046	0	True				
ANR	8992186	ExpressionStatement	components = 1	3257:12:104375:104389	8992046	1	True				
ANR	8992187	AssignmentExpression	components = 1		8992046	0		=			
ANR	8992188	Identifier	components		8992046	0					
ANR	8992189	PrimaryExpression	1		8992046	1					
ANR	8992190	BreakStatement	break ;	3258:12:104403:104408	8992046	2	True				
ANR	8992191	Label	case 1 :	3259:8:104418:104424	8992046	3	True				
ANR	8992192	Label	case 2 :	3260:8:104434:104440	8992046	4	True				
ANR	8992193	ExpressionStatement	components = 3	3261:12:104454:104468	8992046	5	True				
ANR	8992194	AssignmentExpression	components = 3		8992046	0		=			
ANR	8992195	Identifier	components		8992046	0					
ANR	8992196	PrimaryExpression	3		8992046	1					
ANR	8992197	BreakStatement	break ;	3262:12:104482:104487	8992046	6	True				
ANR	8992198	Label	case 3 :	3263:8:104497:104503	8992046	7	True				
ANR	8992199	ExpressionStatement	components = 4	3264:12:104517:104531	8992046	8	True				
ANR	8992200	AssignmentExpression	components = 4		8992046	0		=			
ANR	8992201	Identifier	components		8992046	0					
ANR	8992202	PrimaryExpression	4		8992046	1					
ANR	8992203	BreakStatement	break ;	3265:12:104545:104550	8992046	9	True				
ANR	8992204	ExpressionStatement	pop ( components )	3268:4:104610:104625	8992046	7	True				
ANR	8992205	CallExpression	pop ( components )		8992046	0					
ANR	8992206	Callee	pop		8992046	0					
ANR	8992207	Identifier	pop		8992046	0					
ANR	8992208	ArgumentList	components		8992046	1					
ANR	8992209	Argument	components		8992046	0					
ANR	8992210	Identifier	components		8992046	0					
ANR	8992211	ExpressionStatement	op = osp	3269:4:104631:104639	8992046	8	True				
ANR	8992212	AssignmentExpression	op = osp		8992046	0		=			
ANR	8992213	Identifier	op		8992046	0					
ANR	8992214	Identifier	osp		8992046	1					
ANR	8992215	SwitchStatement	switch ( base )		8992046	9					
ANR	8992216	Condition	base	3273:11:104756:104759	8992046	0	True				
ANR	8992217	Identifier	base		8992046	0					
ANR	8992218	CompoundStatement		45:17:1239:1239	8992046	1					
ANR	8992219	Label	case 0 :	3274:8:104772:104778	8992046	0	True				
ANR	8992220	ExpressionStatement	components = 1	3275:12:104792:104806	8992046	1	True				
ANR	8992221	AssignmentExpression	components = 1		8992046	0		=			
ANR	8992222	Identifier	components		8992046	0					
ANR	8992223	PrimaryExpression	1		8992046	1					
ANR	8992224	BreakStatement	break ;	3276:12:104820:104825	8992046	2	True				
ANR	8992225	Label	case 1 :	3277:8:104835:104841	8992046	3	True				
ANR	8992226	Label	case 2 :	3278:8:104851:104857	8992046	4	True				
ANR	8992227	ExpressionStatement	components = 3	3279:12:104871:104885	8992046	5	True				
ANR	8992228	AssignmentExpression	components = 3		8992046	0		=			
ANR	8992229	Identifier	components		8992046	0					
ANR	8992230	PrimaryExpression	3		8992046	1					
ANR	8992231	BreakStatement	break ;	3280:12:104899:104904	8992046	6	True				
ANR	8992232	Label	case 3 :	3281:8:104914:104920	8992046	7	True				
ANR	8992233	ExpressionStatement	components = 4	3282:12:104934:104948	8992046	8	True				
ANR	8992234	AssignmentExpression	components = 4		8992046	0		=			
ANR	8992235	Identifier	components		8992046	0					
ANR	8992236	PrimaryExpression	4		8992046	1					
ANR	8992237	BreakStatement	break ;	3283:12:104962:104967	8992046	9	True				
ANR	8992238	ExpressionStatement	push ( components )	3285:4:104979:104995	8992046	10	True				
ANR	8992239	CallExpression	push ( components )		8992046	0					
ANR	8992240	Callee	push		8992046	0					
ANR	8992241	Identifier	push		8992046	0					
ANR	8992242	ArgumentList	components		8992046	1					
ANR	8992243	Argument	components		8992046	0					
ANR	8992244	Identifier	components		8992046	0					
ANR	8992245	ExpressionStatement	op -= components - 1	3287:4:105075:105093	8992046	11	True				
ANR	8992246	AssignmentExpression	op -= components - 1		8992046	0		-=			
ANR	8992247	Identifier	op		8992046	0					
ANR	8992248	AdditiveExpression	components - 1		8992046	1		-			
ANR	8992249	Identifier	components		8992046	0					
ANR	8992250	PrimaryExpression	1		8992046	1					
ANR	8992251	ForStatement	for ( i = 0 ; i < components ; i ++ )		8992046	12					
ANR	8992252	ForInit	i = 0 ;	3288:9:105104:105107	8992046	0	True				
ANR	8992253	AssignmentExpression	i = 0		8992046	0		=			
ANR	8992254	Identifier	i		8992046	0					
ANR	8992255	PrimaryExpression	0		8992046	1					
ANR	8992256	Condition	i < components	3288:13:105108:105119	8992046	1	True				
ANR	8992257	RelationalExpression	i < components		8992046	0		<			
ANR	8992258	Identifier	i		8992046	0					
ANR	8992259	Identifier	components		8992046	1					
ANR	8992260	PostIncDecOperationExpression	i ++	3288:26:105121:105123	8992046	2	True				
ANR	8992261	Identifier	i		8992046	0					
ANR	8992262	IncDec	++		8992046	1					
ANR	8992263	CompoundStatement		60:31:1603:1603	8992046	3					
ANR	8992264	ExpressionStatement	"make_real ( op , ( float ) 0 )"	3289:8:105136:105159	8992046	0	True				
ANR	8992265	CallExpression	"make_real ( op , ( float ) 0 )"		8992046	0					
ANR	8992266	Callee	make_real		8992046	0					
ANR	8992267	Identifier	make_real		8992046	0					
ANR	8992268	ArgumentList	op		8992046	1					
ANR	8992269	Argument	op		8992046	0					
ANR	8992270	Identifier	op		8992046	0					
ANR	8992271	Argument	( float ) 0		8992046	1					
ANR	8992272	CastExpression	( float ) 0		8992046	0					
ANR	8992273	CastTarget	float		8992046	0					
ANR	8992274	PrimaryExpression	0		8992046	1					
ANR	8992275	ExpressionStatement	op ++	3290:8:105169:105173	8992046	1	True				
ANR	8992276	PostIncDecOperationExpression	op ++		8992046	0					
ANR	8992277	Identifier	op		8992046	0					
ANR	8992278	IncDec	++		8992046	1					
ANR	8992279	IfStatement	if ( components == 4 )		8992046	13					
ANR	8992280	Condition	components == 4	3295:8:105295:105309	8992046	0	True				
ANR	8992281	EqualityExpression	components == 4		8992046	0		==			
ANR	8992282	Identifier	components		8992046	0					
ANR	8992283	PrimaryExpression	4		8992046	1					
ANR	8992284	CompoundStatement		67:25:1789:1789	8992046	1					
ANR	8992285	ExpressionStatement	op --	3296:8:105322:105326	8992046	0	True				
ANR	8992286	PostIncDecOperationExpression	op --		8992046	0					
ANR	8992287	Identifier	op		8992046	0					
ANR	8992288	IncDec	--		8992046	1					
ANR	8992289	ExpressionStatement	"make_real ( op , ( float ) 1 )"	3297:8:105336:105359	8992046	1	True				
ANR	8992290	CallExpression	"make_real ( op , ( float ) 1 )"		8992046	0					
ANR	8992291	Callee	make_real		8992046	0					
ANR	8992292	Identifier	make_real		8992046	0					
ANR	8992293	ArgumentList	op		8992046	1					
ANR	8992294	Argument	op		8992046	0					
ANR	8992295	Identifier	op		8992046	0					
ANR	8992296	Argument	( float ) 1		8992046	1					
ANR	8992297	CastExpression	( float ) 1		8992046	0					
ANR	8992298	CastTarget	float		8992046	0					
ANR	8992299	PrimaryExpression	1		8992046	1					
ANR	8992300	ExpressionStatement	* stage = 0	3299:4:105371:105381	8992046	14	True				
ANR	8992301	AssignmentExpression	* stage = 0		8992046	0		=			
ANR	8992302	UnaryOperationExpression	* stage		8992046	0					
ANR	8992303	UnaryOperator	*		8992046	0					
ANR	8992304	Identifier	stage		8992046	1					
ANR	8992305	PrimaryExpression	0		8992046	1					
ANR	8992306	ExpressionStatement	* cont = 0	3300:4:105387:105396	8992046	15	True				
ANR	8992307	AssignmentExpression	* cont = 0		8992046	0		=			
ANR	8992308	UnaryOperationExpression	* cont		8992046	0					
ANR	8992309	UnaryOperator	*		8992046	0					
ANR	8992310	Identifier	cont		8992046	1					
ANR	8992311	PrimaryExpression	0		8992046	1					
ANR	8992312	ReturnStatement	return 0 ;	3301:4:105402:105410	8992046	16	True				
ANR	8992313	PrimaryExpression	0		8992046	0					
ANR	8992314	ReturnType	static int		8992046	1					
ANR	8992315	Identifier	ciebasecolor		8992046	2					
ANR	8992316	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8992046	3					
ANR	8992317	Parameter	i_ctx_t * i_ctx_p	3228:24:103440:103456	8992046	0	True				
ANR	8992318	ParameterType	i_ctx_t *		8992046	0					
ANR	8992319	Identifier	i_ctx_p		8992046	1					
ANR	8992320	Parameter	ref * space	3228:43:103459:103468	8992046	1	True				
ANR	8992321	ParameterType	ref *		8992046	0					
ANR	8992322	Identifier	space		8992046	1					
ANR	8992323	Parameter	int base	3228:55:103471:103478	8992046	2	True				
ANR	8992324	ParameterType	int		8992046	0					
ANR	8992325	Identifier	base		8992046	1					
ANR	8992326	Parameter	int * stage	3228:65:103481:103490	8992046	3	True				
ANR	8992327	ParameterType	int *		8992046	0					
ANR	8992328	Identifier	stage		8992046	1					
ANR	8992329	Parameter	int * cont	3228:77:103493:103501	8992046	4	True				
ANR	8992330	ParameterType	int *		8992046	0					
ANR	8992331	Identifier	cont		8992046	1					
ANR	8992332	Parameter	int * stack_depth	3228:88:103504:103519	8992046	5	True				
ANR	8992333	ParameterType	int *		8992046	0					
ANR	8992334	Identifier	stack_depth		8992046	1					
ANR	8992335	CFGEntryNode	ENTRY		8992046		True				
ANR	8992336	CFGExitNode	EXIT		8992046		True				
ANR	8992337	Symbol	* imemory -> gs_lib_ctx		8992046						
ANR	8992338	Symbol	stack_depth		8992046						
ANR	8992339	Symbol	components		8992046						
ANR	8992340	Symbol	name_eq		8992046						
ANR	8992341	Symbol	code		8992046						
ANR	8992342	Symbol	imemory -> gs_lib_ctx -> gs_name_table		8992046						
ANR	8992343	Symbol	space -> value		8992046						
ANR	8992344	Symbol	names_ref		8992046						
ANR	8992345	Symbol	CIESpaces		8992046						
ANR	8992346	Symbol	osp		8992046						
ANR	8992347	Symbol	space		8992046						
ANR	8992348	Symbol	imemory -> gs_lib_ctx		8992046						
ANR	8992349	Symbol	& nref		8992046						
ANR	8992350	Symbol	strlen		8992046						
ANR	8992351	Symbol	r_has_type		8992046						
ANR	8992352	Symbol	gs_error_typecheck		8992046						
ANR	8992353	Symbol	nref		8992046						
ANR	8992354	Symbol	t_name		8992046						
ANR	8992355	Symbol	imemory		8992046						
ANR	8992356	Symbol	cont		8992046						
ANR	8992357	Symbol	op		8992046						
ANR	8992358	Symbol	spacename		8992046						
ANR	8992359	Symbol	* stage		8992046						
ANR	8992360	Symbol	* imemory		8992046						
ANR	8992361	Symbol	i		8992046						
ANR	8992362	Symbol	* CIESpaces		8992046						
ANR	8992363	Symbol	* i		8992046						
ANR	8992364	Symbol	stage		8992046						
ANR	8992365	Symbol	* cont		8992046						
ANR	8992366	Symbol	i_ctx_p		8992046						
ANR	8992367	Symbol	* space		8992046						
ANR	8992368	Symbol	* * imemory		8992046						
ANR	8992369	Symbol	r_is_array		8992046						
ANR	8992370	Symbol	space -> value . refs		8992046						
ANR	8992371	Symbol	base		8992046						
ANR	8992372	Function	convert_transform	3309:0:105633:106310							
ANR	8992373	FunctionDef	"convert_transform (i_ctx_t * i_ctx_p , ref * arr , ref * pproc)"		8992372	0					
ANR	8992374	CompoundStatement		3310:0:105703:106310	8992372	0					
ANR	8992375	IdentifierDeclStatement	os_ptr op = osp ;	3311:4:105709:105724	8992372	0	True				
ANR	8992376	IdentifierDecl	op = osp		8992372	0					
ANR	8992377	IdentifierDeclType	os_ptr		8992372	0					
ANR	8992378	Identifier	op		8992372	1					
ANR	8992379	AssignmentExpression	op = osp		8992372	2		=			
ANR	8992380	Identifier	osp		8992372	0					
ANR	8992381	Identifier	osp		8992372	1					
ANR	8992382	IdentifierDeclStatement	int code ;	3312:4:105763:105771	8992372	1	True				
ANR	8992383	IdentifierDecl	code		8992372	0					
ANR	8992384	IdentifierDeclType	int		8992372	0					
ANR	8992385	Identifier	code		8992372	1					
ANR	8992386	ExpressionStatement	push ( 1 )	3318:4:105950:105957	8992372	2	True				
ANR	8992387	CallExpression	push ( 1 )		8992372	0					
ANR	8992388	Callee	push		8992372	0					
ANR	8992389	Identifier	push		8992372	0					
ANR	8992390	ArgumentList	1		8992372	1					
ANR	8992391	Argument	1		8992372	0					
ANR	8992392	PrimaryExpression	1		8992372	0					
ANR	8992393	ExpressionStatement	"code = buildfunction ( i_ctx_p , arr , pproc , 4 )"	3320:4:106007:106051	8992372	3	True				
ANR	8992394	AssignmentExpression	"code = buildfunction ( i_ctx_p , arr , pproc , 4 )"		8992372	0		=			
ANR	8992395	Identifier	code		8992372	0					
ANR	8992396	CallExpression	"buildfunction ( i_ctx_p , arr , pproc , 4 )"		8992372	1					
ANR	8992397	Callee	buildfunction		8992372	0					
ANR	8992398	Identifier	buildfunction		8992372	0					
ANR	8992399	ArgumentList	i_ctx_p		8992372	1					
ANR	8992400	Argument	i_ctx_p		8992372	0					
ANR	8992401	Identifier	i_ctx_p		8992372	0					
ANR	8992402	Argument	arr		8992372	1					
ANR	8992403	Identifier	arr		8992372	0					
ANR	8992404	Argument	pproc		8992372	2					
ANR	8992405	Identifier	pproc		8992372	0					
ANR	8992406	Argument	4		8992372	3					
ANR	8992407	PrimaryExpression	4		8992372	0					
ANR	8992408	IfStatement	if ( code < 0 )		8992372	4					
ANR	8992409	Condition	code < 0	3322:8:106062:106069	8992372	0	True				
ANR	8992410	RelationalExpression	code < 0		8992372	0		<			
ANR	8992411	Identifier	code		8992372	0					
ANR	8992412	PrimaryExpression	0		8992372	1					
ANR	8992413	ExpressionStatement	"code = buildfunction ( i_ctx_p , arr , pproc , 0 )"	3327:8:106246:106290	8992372	1	True				
ANR	8992414	AssignmentExpression	"code = buildfunction ( i_ctx_p , arr , pproc , 0 )"		8992372	0		=			
ANR	8992415	Identifier	code		8992372	0					
ANR	8992416	CallExpression	"buildfunction ( i_ctx_p , arr , pproc , 0 )"		8992372	1					
ANR	8992417	Callee	buildfunction		8992372	0					
ANR	8992418	Identifier	buildfunction		8992372	0					
ANR	8992419	ArgumentList	i_ctx_p		8992372	1					
ANR	8992420	Argument	i_ctx_p		8992372	0					
ANR	8992421	Identifier	i_ctx_p		8992372	0					
ANR	8992422	Argument	arr		8992372	1					
ANR	8992423	Identifier	arr		8992372	0					
ANR	8992424	Argument	pproc		8992372	2					
ANR	8992425	Identifier	pproc		8992372	0					
ANR	8992426	Argument	0		8992372	3					
ANR	8992427	PrimaryExpression	0		8992372	0					
ANR	8992428	ReturnStatement	return code ;	3329:4:106297:106308	8992372	5	True				
ANR	8992429	Identifier	code		8992372	0					
ANR	8992430	ReturnType	static int		8992372	1					
ANR	8992431	Identifier	convert_transform		8992372	2					
ANR	8992432	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , ref * pproc"		8992372	3					
ANR	8992433	Parameter	i_ctx_t * i_ctx_p	3309:29:105662:105678	8992372	0	True				
ANR	8992434	ParameterType	i_ctx_t *		8992372	0					
ANR	8992435	Identifier	i_ctx_p		8992372	1					
ANR	8992436	Parameter	ref * arr	3309:48:105681:105688	8992372	1	True				
ANR	8992437	ParameterType	ref *		8992372	0					
ANR	8992438	Identifier	arr		8992372	1					
ANR	8992439	Parameter	ref * pproc	3309:58:105691:105700	8992372	2	True				
ANR	8992440	ParameterType	ref *		8992372	0					
ANR	8992441	Identifier	pproc		8992372	1					
ANR	8992442	CFGEntryNode	ENTRY		8992372		True				
ANR	8992443	CFGExitNode	EXIT		8992372		True				
ANR	8992444	Symbol	arr		8992372						
ANR	8992445	Symbol	op		8992372						
ANR	8992446	Symbol	code		8992372						
ANR	8992447	Symbol	i_ctx_p		8992372						
ANR	8992448	Symbol	pproc		8992372						
ANR	8992449	Symbol	buildfunction		8992372						
ANR	8992450	Symbol	osp		8992372						
ANR	8992451	Function	setseparationspace	3333:0:106330:109774							
ANR	8992452	FunctionDef	"setseparationspace (i_ctx_t * i_ctx_p , ref * sepspace , int * stage , int * cont , int CIESubst)"		8992451	0					
ANR	8992453	CompoundStatement		3334:0:106431:109774	8992451	0					
ANR	8992454	IdentifierDeclStatement	os_ptr op = osp ;	3335:4:106437:106452	8992451	0	True				
ANR	8992455	IdentifierDecl	op = osp		8992451	0					
ANR	8992456	IdentifierDeclType	os_ptr		8992451	0					
ANR	8992457	Identifier	op		8992451	1					
ANR	8992458	AssignmentExpression	op = osp		8992451	2		=			
ANR	8992459	Identifier	osp		8992451	0					
ANR	8992460	Identifier	osp		8992451	1					
ANR	8992461	IdentifierDeclStatement	int code = 0 ;	3336:4:106491:106503	8992451	1	True				
ANR	8992462	IdentifierDecl	code = 0		8992451	0					
ANR	8992463	IdentifierDeclType	int		8992451	0					
ANR	8992464	Identifier	code		8992451	1					
ANR	8992465	AssignmentExpression	code = 0		8992451	2		=			
ANR	8992466	Identifier	code		8992451	0					
ANR	8992467	PrimaryExpression	0		8992451	1					
ANR	8992468	IdentifierDeclStatement	"ref sname , proc ;"	3337:4:106509:106524	8992451	2	True				
ANR	8992469	IdentifierDecl	sname		8992451	0					
ANR	8992470	IdentifierDeclType	ref		8992451	0					
ANR	8992471	Identifier	sname		8992451	1					
ANR	8992472	IdentifierDecl	proc		8992451	1					
ANR	8992473	IdentifierDeclType	ref		8992451	0					
ANR	8992474	Identifier	proc		8992451	1					
ANR	8992475	IdentifierDeclStatement	"ref name_none , name_all ;"	3338:4:106530:106553	8992451	3	True				
ANR	8992476	IdentifierDecl	name_none		8992451	0					
ANR	8992477	IdentifierDeclType	ref		8992451	0					
ANR	8992478	Identifier	name_none		8992451	1					
ANR	8992479	IdentifierDecl	name_all		8992451	1					
ANR	8992480	IdentifierDeclType	ref		8992451	0					
ANR	8992481	Identifier	name_all		8992451	1					
ANR	8992482	IdentifierDeclStatement	separation_type sep_type ;	3339:4:106559:106583	8992451	4	True				
ANR	8992483	IdentifierDecl	sep_type		8992451	0					
ANR	8992484	IdentifierDeclType	separation_type		8992451	0					
ANR	8992485	Identifier	sep_type		8992451	1					
ANR	8992486	IdentifierDeclStatement	ref_colorspace cspace_old ;	3340:4:106589:106614	8992451	5	True				
ANR	8992487	IdentifierDecl	cspace_old		8992451	0					
ANR	8992488	IdentifierDeclType	ref_colorspace		8992451	0					
ANR	8992489	Identifier	cspace_old		8992451	1					
ANR	8992490	IdentifierDeclStatement	gs_color_space * pcs ;	3341:4:106620:106639	8992451	6	True				
ANR	8992491	IdentifierDecl	* pcs		8992451	0					
ANR	8992492	IdentifierDeclType	gs_color_space *		8992451	0					
ANR	8992493	Identifier	pcs		8992451	1					
ANR	8992494	IdentifierDeclStatement	gs_color_space * pacs ;	3342:4:106645:106666	8992451	7	True				
ANR	8992495	IdentifierDecl	* pacs		8992451	0					
ANR	8992496	IdentifierDeclType	gs_color_space *		8992451	0					
ANR	8992497	Identifier	pacs		8992451	1					
ANR	8992498	IdentifierDeclStatement	gs_function_t * pfn = NULL ;	3343:4:106672:106697	8992451	8	True				
ANR	8992499	IdentifierDecl	* pfn = NULL		8992451	0					
ANR	8992500	IdentifierDeclType	gs_function_t *		8992451	0					
ANR	8992501	Identifier	pfn		8992451	1					
ANR	8992502	AssignmentExpression	* pfn = NULL		8992451	2		=			
ANR	8992503	Identifier	NULL		8992451	0					
ANR	8992504	Identifier	NULL		8992451	1					
ANR	8992505	IdentifierDeclStatement	gs_client_color cc ;	3344:4:106703:106721	8992451	9	True				
ANR	8992506	IdentifierDecl	cc		8992451	0					
ANR	8992507	IdentifierDeclType	gs_client_color		8992451	0					
ANR	8992508	Identifier	cc		8992451	1					
ANR	8992509	IfStatement	if ( i_ctx_p -> language_level < 2 )		8992451	10					
ANR	8992510	Condition	i_ctx_p -> language_level < 2	3346:8:106732:106758	8992451	0	True				
ANR	8992511	RelationalExpression	i_ctx_p -> language_level < 2		8992451	0		<			
ANR	8992512	PtrMemberAccess	i_ctx_p -> language_level		8992451	0					
ANR	8992513	Identifier	i_ctx_p		8992451	0					
ANR	8992514	Identifier	language_level		8992451	1					
ANR	8992515	PrimaryExpression	2		8992451	1					
ANR	8992516	ExpressionStatement	return_error ( gs_error_undefined )	3347:8:106769:106801	8992451	1	True				
ANR	8992517	CallExpression	return_error ( gs_error_undefined )		8992451	0					
ANR	8992518	Callee	return_error		8992451	0					
ANR	8992519	Identifier	return_error		8992451	0					
ANR	8992520	ArgumentList	gs_error_undefined		8992451	1					
ANR	8992521	Argument	gs_error_undefined		8992451	0					
ANR	8992522	Identifier	gs_error_undefined		8992451	0					
ANR	8992523	ExpressionStatement	* cont = 0	3349:4:106808:106817	8992451	11	True				
ANR	8992524	AssignmentExpression	* cont = 0		8992451	0		=			
ANR	8992525	UnaryOperationExpression	* cont		8992451	0					
ANR	8992526	UnaryOperator	*		8992451	0					
ANR	8992527	Identifier	cont		8992451	1					
ANR	8992528	PrimaryExpression	0		8992451	1					
ANR	8992529	IfStatement	if ( ( * stage ) == 0 )		8992451	12					
ANR	8992530	Condition	( * stage ) == 0	3350:8:106827:106839	8992451	0	True				
ANR	8992531	EqualityExpression	( * stage ) == 0		8992451	0		==			
ANR	8992532	UnaryOperationExpression	* stage		8992451	0					
ANR	8992533	UnaryOperator	*		8992451	0					
ANR	8992534	Identifier	stage		8992451	1					
ANR	8992535	PrimaryExpression	0		8992451	1					
ANR	8992536	CompoundStatement		17:23:410:410	8992451	1					
ANR	8992537	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3351:8:106852:106897	8992451	0	True				
ANR	8992538	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		8992451	0		=			
ANR	8992539	Identifier	code		8992451	0					
ANR	8992540	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		8992451	1					
ANR	8992541	Callee	array_get		8992451	0					
ANR	8992542	Identifier	array_get		8992451	0					
ANR	8992543	ArgumentList	imemory		8992451	1					
ANR	8992544	Argument	imemory		8992451	0					
ANR	8992545	Identifier	imemory		8992451	0					
ANR	8992546	Argument	sepspace		8992451	1					
ANR	8992547	Identifier	sepspace		8992451	0					
ANR	8992548	Argument	3		8992451	2					
ANR	8992549	PrimaryExpression	3		8992451	0					
ANR	8992550	Argument	& proc		8992451	3					
ANR	8992551	UnaryOperationExpression	& proc		8992451	0					
ANR	8992552	UnaryOperator	&		8992451	0					
ANR	8992553	Identifier	proc		8992451	1					
ANR	8992554	IfStatement	if ( code < 0 )		8992451	1					
ANR	8992555	Condition	code < 0	3352:12:106911:106918	8992451	0	True				
ANR	8992556	RelationalExpression	code < 0		8992451	0		<			
ANR	8992557	Identifier	code		8992451	0					
ANR	8992558	PrimaryExpression	0		8992451	1					
ANR	8992559	ReturnStatement	return code ;	3353:12:106933:106944	8992451	1	True				
ANR	8992560	Identifier	code		8992451	0					
ANR	8992561	ExpressionStatement	pfn = ref_function ( & proc )	3355:8:107032:107057	8992451	2	True				
ANR	8992562	AssignmentExpression	pfn = ref_function ( & proc )		8992451	0		=			
ANR	8992563	Identifier	pfn		8992451	0					
ANR	8992564	CallExpression	ref_function ( & proc )		8992451	1					
ANR	8992565	Callee	ref_function		8992451	0					
ANR	8992566	Identifier	ref_function		8992451	0					
ANR	8992567	ArgumentList	& proc		8992451	1					
ANR	8992568	Argument	& proc		8992451	0					
ANR	8992569	UnaryOperationExpression	& proc		8992451	0					
ANR	8992570	UnaryOperator	&		8992451	0					
ANR	8992571	Identifier	proc		8992451	1					
ANR	8992572	IfStatement	if ( pfn == NULL )		8992451	3					
ANR	8992573	Condition	pfn == NULL	3356:12:107071:107081	8992451	0	True				
ANR	8992574	EqualityExpression	pfn == NULL		8992451	0		==			
ANR	8992575	Identifier	pfn		8992451	0					
ANR	8992576	Identifier	NULL		8992451	1					
ANR	8992577	CompoundStatement		23:25:652:652	8992451	1					
ANR	8992578	ExpressionStatement	"code = convert_transform ( i_ctx_p , sepspace , & proc )"	3358:12:107164:107214	8992451	0	True				
ANR	8992579	AssignmentExpression	"code = convert_transform ( i_ctx_p , sepspace , & proc )"		8992451	0		=			
ANR	8992580	Identifier	code		8992451	0					
ANR	8992581	CallExpression	"convert_transform ( i_ctx_p , sepspace , & proc )"		8992451	1					
ANR	8992582	Callee	convert_transform		8992451	0					
ANR	8992583	Identifier	convert_transform		8992451	0					
ANR	8992584	ArgumentList	i_ctx_p		8992451	1					
ANR	8992585	Argument	i_ctx_p		8992451	0					
ANR	8992586	Identifier	i_ctx_p		8992451	0					
ANR	8992587	Argument	sepspace		8992451	1					
ANR	8992588	Identifier	sepspace		8992451	0					
ANR	8992589	Argument	& proc		8992451	2					
ANR	8992590	UnaryOperationExpression	& proc		8992451	0					
ANR	8992591	UnaryOperator	&		8992451	0					
ANR	8992592	Identifier	proc		8992451	1					
ANR	8992593	IfStatement	if ( code < 0 )		8992451	1					
ANR	8992594	Condition	code < 0	3359:16:107232:107239	8992451	0	True				
ANR	8992595	RelationalExpression	code < 0		8992451	0		<			
ANR	8992596	Identifier	code		8992451	0					
ANR	8992597	PrimaryExpression	0		8992451	1					
ANR	8992598	ReturnStatement	return code ;	3360:16:107258:107269	8992451	1	True				
ANR	8992599	Identifier	code		8992451	0					
ANR	8992600	IfStatement	if ( code > 0 )		8992451	2					
ANR	8992601	Condition	code > 0	3361:16:107287:107294	8992451	0	True				
ANR	8992602	RelationalExpression	code > 0		8992451	0		>			
ANR	8992603	Identifier	code		8992451	0					
ANR	8992604	PrimaryExpression	0		8992451	1					
ANR	8992605	CompoundStatement		28:26:865:865	8992451	1					
ANR	8992606	ExpressionStatement	* cont = 1	3362:16:107315:107324	8992451	0	True				
ANR	8992607	AssignmentExpression	* cont = 1		8992451	0		=			
ANR	8992608	UnaryOperationExpression	* cont		8992451	0					
ANR	8992609	UnaryOperator	*		8992451	0					
ANR	8992610	Identifier	cont		8992451	1					
ANR	8992611	PrimaryExpression	1		8992451	1					
ANR	8992612	ExpressionStatement	( * stage ) ++	3363:16:107342:107352	8992451	1	True				
ANR	8992613	PostIncDecOperationExpression	( * stage ) ++		8992451	0					
ANR	8992614	UnaryOperationExpression	* stage		8992451	0					
ANR	8992615	UnaryOperator	*		8992451	0					
ANR	8992616	Identifier	stage		8992451	1					
ANR	8992617	IncDec	++		8992451	1					
ANR	8992618	ReturnStatement	return code ;	3364:16:107370:107381	8992451	2	True				
ANR	8992619	Identifier	code		8992451	0					
ANR	8992620	ExpressionStatement	op = osp	3370:12:107649:107657	8992451	3	True				
ANR	8992621	AssignmentExpression	op = osp		8992451	0		=			
ANR	8992622	Identifier	op		8992451	0					
ANR	8992623	Identifier	osp		8992451	1					
ANR	8992624	ExpressionStatement	pfn = ref_function ( op )	3371:12:107671:107693	8992451	4	True				
ANR	8992625	AssignmentExpression	pfn = ref_function ( op )		8992451	0		=			
ANR	8992626	Identifier	pfn		8992451	0					
ANR	8992627	CallExpression	ref_function ( op )		8992451	1					
ANR	8992628	Callee	ref_function		8992451	0					
ANR	8992629	Identifier	ref_function		8992451	0					
ANR	8992630	ArgumentList	op		8992451	1					
ANR	8992631	Argument	op		8992451	0					
ANR	8992632	Identifier	op		8992451	0					
ANR	8992633	ExpressionStatement	pop ( 1 )	3372:12:107707:107714	8992451	5	True				
ANR	8992634	CallExpression	pop ( 1 )		8992451	0					
ANR	8992635	Callee	pop		8992451	0					
ANR	8992636	Identifier	pop		8992451	0					
ANR	8992637	ArgumentList	1		8992451	1					
ANR	8992638	Argument	1		8992451	0					
ANR	8992639	PrimaryExpression	1		8992451	0					
ANR	8992640	ElseStatement	else		8992451	0					
ANR	8992641	CompoundStatement		41:11:1305:1305	8992451	0					
ANR	8992642	ExpressionStatement	op = osp	3376:8:107807:107815	8992451	0	True				
ANR	8992643	AssignmentExpression	op = osp		8992451	0		=			
ANR	8992644	Identifier	op		8992451	0					
ANR	8992645	Identifier	osp		8992451	1					
ANR	8992646	ExpressionStatement	pfn = ref_function ( op )	3377:8:107825:107847	8992451	1	True				
ANR	8992647	AssignmentExpression	pfn = ref_function ( op )		8992451	0		=			
ANR	8992648	Identifier	pfn		8992451	0					
ANR	8992649	CallExpression	ref_function ( op )		8992451	1					
ANR	8992650	Callee	ref_function		8992451	0					
ANR	8992651	Identifier	ref_function		8992451	0					
ANR	8992652	ArgumentList	op		8992451	1					
ANR	8992653	Argument	op		8992451	0					
ANR	8992654	Identifier	op		8992451	0					
ANR	8992655	ExpressionStatement	pop ( 1 )	3378:8:107857:107864	8992451	2	True				
ANR	8992656	CallExpression	pop ( 1 )		8992451	0					
ANR	8992657	Callee	pop		8992451	0					
ANR	8992658	Identifier	pop		8992451	0					
ANR	8992659	ArgumentList	1		8992451	1					
ANR	8992660	Argument	1		8992451	0					
ANR	8992661	PrimaryExpression	1		8992451	0					
ANR	8992662	ExpressionStatement	* stage = 0	3381:4:107877:107887	8992451	13	True				
ANR	8992663	AssignmentExpression	* stage = 0		8992451	0		=			
ANR	8992664	UnaryOperationExpression	* stage		8992451	0					
ANR	8992665	UnaryOperator	*		8992451	0					
ANR	8992666	Identifier	stage		8992451	1					
ANR	8992667	PrimaryExpression	0		8992451	1					
ANR	8992668	IfStatement	"if ( ( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0 )"		8992451	14					
ANR	8992669	Condition	"( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0"	3382:8:107897:107964	8992451	0	True				
ANR	8992670	RelationalExpression	"( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0"		8992451	0		<			
ANR	8992671	AssignmentExpression	"code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 )"		8992451	0		=			
ANR	8992672	Identifier	code		8992451	0					
ANR	8992673	CallExpression	"name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 )"		8992451	1					
ANR	8992674	Callee	name_ref		8992451	0					
ANR	8992675	Identifier	name_ref		8992451	0					
ANR	8992676	ArgumentList	imemory		8992451	1					
ANR	8992677	Argument	imemory		8992451	0					
ANR	8992678	Identifier	imemory		8992451	0					
ANR	8992679	Argument	"( const byte * ) ""All"""		8992451	1					
ANR	8992680	CastExpression	"( const byte * ) ""All"""		8992451	0					
ANR	8992681	CastTarget	const byte *		8992451	0					
ANR	8992682	PrimaryExpression	"""All"""		8992451	1					
ANR	8992683	Argument	3		8992451	2					
ANR	8992684	PrimaryExpression	3		8992451	0					
ANR	8992685	Argument	& name_all		8992451	3					
ANR	8992686	UnaryOperationExpression	& name_all		8992451	0					
ANR	8992687	UnaryOperator	&		8992451	0					
ANR	8992688	Identifier	name_all		8992451	1					
ANR	8992689	Argument	0		8992451	4					
ANR	8992690	PrimaryExpression	0		8992451	0					
ANR	8992691	PrimaryExpression	0		8992451	1					
ANR	8992692	ReturnStatement	return code ;	3383:8:107975:107986	8992451	1	True				
ANR	8992693	Identifier	code		8992451	0					
ANR	8992694	IfStatement	"if ( ( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0 )"		8992451	15					
ANR	8992695	Condition	"( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0"	3384:8:107996:108065	8992451	0	True				
ANR	8992696	RelationalExpression	"( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0"		8992451	0		<			
ANR	8992697	AssignmentExpression	"code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 )"		8992451	0		=			
ANR	8992698	Identifier	code		8992451	0					
ANR	8992699	CallExpression	"name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 )"		8992451	1					
ANR	8992700	Callee	name_ref		8992451	0					
ANR	8992701	Identifier	name_ref		8992451	0					
ANR	8992702	ArgumentList	imemory		8992451	1					
ANR	8992703	Argument	imemory		8992451	0					
ANR	8992704	Identifier	imemory		8992451	0					
ANR	8992705	Argument	"( const byte * ) ""None"""		8992451	1					
ANR	8992706	CastExpression	"( const byte * ) ""None"""		8992451	0					
ANR	8992707	CastTarget	const byte *		8992451	0					
ANR	8992708	PrimaryExpression	"""None"""		8992451	1					
ANR	8992709	Argument	4		8992451	2					
ANR	8992710	PrimaryExpression	4		8992451	0					
ANR	8992711	Argument	& name_none		8992451	3					
ANR	8992712	UnaryOperationExpression	& name_none		8992451	0					
ANR	8992713	UnaryOperator	&		8992451	0					
ANR	8992714	Identifier	name_none		8992451	1					
ANR	8992715	Argument	0		8992451	4					
ANR	8992716	PrimaryExpression	0		8992451	0					
ANR	8992717	PrimaryExpression	0		8992451	1					
ANR	8992718	ReturnStatement	return code ;	3385:8:108076:108087	8992451	1	True				
ANR	8992719	Identifier	code		8992451	0					
ANR	8992720	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3387:4:108152:108198	8992451	16	True				
ANR	8992721	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		8992451	0		=			
ANR	8992722	Identifier	code		8992451	0					
ANR	8992723	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		8992451	1					
ANR	8992724	Callee	array_get		8992451	0					
ANR	8992725	Identifier	array_get		8992451	0					
ANR	8992726	ArgumentList	imemory		8992451	1					
ANR	8992727	Argument	imemory		8992451	0					
ANR	8992728	Identifier	imemory		8992451	0					
ANR	8992729	Argument	sepspace		8992451	1					
ANR	8992730	Identifier	sepspace		8992451	0					
ANR	8992731	Argument	1		8992451	2					
ANR	8992732	PrimaryExpression	1		8992451	0					
ANR	8992733	Argument	& sname		8992451	3					
ANR	8992734	UnaryOperationExpression	& sname		8992451	0					
ANR	8992735	UnaryOperator	&		8992451	0					
ANR	8992736	Identifier	sname		8992451	1					
ANR	8992737	IfStatement	if ( code < 0 )		8992451	17					
ANR	8992738	Condition	code < 0	3388:8:108208:108215	8992451	0	True				
ANR	8992739	RelationalExpression	code < 0		8992451	0		<			
ANR	8992740	Identifier	code		8992451	0					
ANR	8992741	PrimaryExpression	0		8992451	1					
ANR	8992742	ReturnStatement	return code ;	3389:8:108226:108237	8992451	1	True				
ANR	8992743	Identifier	code		8992451	0					
ANR	8992744	IfStatement	"if ( r_has_type ( & sname , t_string ) )"		8992451	18					
ANR	8992745	Condition	"r_has_type ( & sname , t_string )"	3391:8:108248:108275	8992451	0	True				
ANR	8992746	CallExpression	"r_has_type ( & sname , t_string )"		8992451	0					
ANR	8992747	Callee	r_has_type		8992451	0					
ANR	8992748	Identifier	r_has_type		8992451	0					
ANR	8992749	ArgumentList	& sname		8992451	1					
ANR	8992750	Argument	& sname		8992451	0					
ANR	8992751	UnaryOperationExpression	& sname		8992451	0					
ANR	8992752	UnaryOperator	&		8992451	0					
ANR	8992753	Identifier	sname		8992451	1					
ANR	8992754	Argument	t_string		8992451	1					
ANR	8992755	Identifier	t_string		8992451	0					
ANR	8992756	CompoundStatement		58:38:1846:1846	8992451	1					
ANR	8992757	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3392:8:108288:108336	8992451	0	True				
ANR	8992758	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		8992451	0		=			
ANR	8992759	Identifier	code		8992451	0					
ANR	8992760	CallExpression	"name_from_string ( imemory , & sname , & sname )"		8992451	1					
ANR	8992761	Callee	name_from_string		8992451	0					
ANR	8992762	Identifier	name_from_string		8992451	0					
ANR	8992763	ArgumentList	imemory		8992451	1					
ANR	8992764	Argument	imemory		8992451	0					
ANR	8992765	Identifier	imemory		8992451	0					
ANR	8992766	Argument	& sname		8992451	1					
ANR	8992767	UnaryOperationExpression	& sname		8992451	0					
ANR	8992768	UnaryOperator	&		8992451	0					
ANR	8992769	Identifier	sname		8992451	1					
ANR	8992770	Argument	& sname		8992451	2					
ANR	8992771	UnaryOperationExpression	& sname		8992451	0					
ANR	8992772	UnaryOperator	&		8992451	0					
ANR	8992773	Identifier	sname		8992451	1					
ANR	8992774	IfStatement	if ( code < 0 )		8992451	1					
ANR	8992775	Condition	code < 0	3393:12:108350:108357	8992451	0	True				
ANR	8992776	RelationalExpression	code < 0		8992451	0		<			
ANR	8992777	Identifier	code		8992451	0					
ANR	8992778	PrimaryExpression	0		8992451	1					
ANR	8992779	ReturnStatement	return code ;	3394:12:108372:108383	8992451	1	True				
ANR	8992780	Identifier	code		8992451	0					
ANR	8992781	ExpressionStatement	"sep_type = ( name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER )"	3396:4:108395:108515	8992451	19	True				
ANR	8992782	AssignmentExpression	"sep_type = ( name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER )"		8992451	0		=			
ANR	8992783	Identifier	sep_type		8992451	0					
ANR	8992784	ConditionalExpression	"name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER"		8992451	1					
ANR	8992785	Condition	"name_eq ( & sname , & name_all )"		8992451	0					
ANR	8992786	CallExpression	"name_eq ( & sname , & name_all )"		8992451	0					
ANR	8992787	Callee	name_eq		8992451	0					
ANR	8992788	Identifier	name_eq		8992451	0					
ANR	8992789	ArgumentList	& sname		8992451	1					
ANR	8992790	Argument	& sname		8992451	0					
ANR	8992791	UnaryOperationExpression	& sname		8992451	0					
ANR	8992792	UnaryOperator	&		8992451	0					
ANR	8992793	Identifier	sname		8992451	1					
ANR	8992794	Argument	& name_all		8992451	1					
ANR	8992795	UnaryOperationExpression	& name_all		8992451	0					
ANR	8992796	UnaryOperator	&		8992451	0					
ANR	8992797	Identifier	name_all		8992451	1					
ANR	8992798	Identifier	SEP_ALL		8992451	1					
ANR	8992799	ConditionalExpression	"name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER"		8992451	2					
ANR	8992800	Condition	"name_eq ( & sname , & name_none )"		8992451	0					
ANR	8992801	CallExpression	"name_eq ( & sname , & name_none )"		8992451	0					
ANR	8992802	Callee	name_eq		8992451	0					
ANR	8992803	Identifier	name_eq		8992451	0					
ANR	8992804	ArgumentList	& sname		8992451	1					
ANR	8992805	Argument	& sname		8992451	0					
ANR	8992806	UnaryOperationExpression	& sname		8992451	0					
ANR	8992807	UnaryOperator	&		8992451	0					
ANR	8992808	Identifier	sname		8992451	1					
ANR	8992809	Argument	& name_none		8992451	1					
ANR	8992810	UnaryOperationExpression	& name_none		8992451	0					
ANR	8992811	UnaryOperator	&		8992451	0					
ANR	8992812	Identifier	name_none		8992451	1					
ANR	8992813	Identifier	SEP_NONE		8992451	1					
ANR	8992814	Identifier	SEP_OTHER		8992451	2					
ANR	8992815	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3400:4:108603:108635	8992451	20	True				
ANR	8992816	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		8992451	0		=			
ANR	8992817	Identifier	pacs		8992451	0					
ANR	8992818	CallExpression	gs_currentcolorspace ( igs )		8992451	1					
ANR	8992819	Callee	gs_currentcolorspace		8992451	0					
ANR	8992820	Identifier	gs_currentcolorspace		8992451	0					
ANR	8992821	ArgumentList	igs		8992451	1					
ANR	8992822	Argument	igs		8992451	0					
ANR	8992823	Identifier	igs		8992451	0					
ANR	8992824	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3402:4:108642:108676	8992451	21	True				
ANR	8992825	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		8992451	0		=			
ANR	8992826	Identifier	cspace_old		8992451	0					
ANR	8992827	ArrayIndexing	istate -> colorspace [ 0 ]		8992451	1					
ANR	8992828	PtrMemberAccess	istate -> colorspace		8992451	0					
ANR	8992829	Identifier	istate		8992451	0					
ANR	8992830	Identifier	colorspace		8992451	1					
ANR	8992831	PrimaryExpression	0		8992451	1					
ANR	8992832	ExpressionStatement	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"	3404:4:108738:108790	8992451	22	True				
ANR	8992833	AssignmentExpression	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"		8992451	0		=			
ANR	8992834	Identifier	code		8992451	0					
ANR	8992835	CallExpression	"gs_cspace_new_Separation ( & pcs , pacs , imemory )"		8992451	1					
ANR	8992836	Callee	gs_cspace_new_Separation		8992451	0					
ANR	8992837	Identifier	gs_cspace_new_Separation		8992451	0					
ANR	8992838	ArgumentList	& pcs		8992451	1					
ANR	8992839	Argument	& pcs		8992451	0					
ANR	8992840	UnaryOperationExpression	& pcs		8992451	0					
ANR	8992841	UnaryOperator	&		8992451	0					
ANR	8992842	Identifier	pcs		8992451	1					
ANR	8992843	Argument	pacs		8992451	1					
ANR	8992844	Identifier	pacs		8992451	0					
ANR	8992845	Argument	imemory		8992451	2					
ANR	8992846	Identifier	imemory		8992451	0					
ANR	8992847	IfStatement	if ( code < 0 )		8992451	23					
ANR	8992848	Condition	code < 0	3405:8:108800:108807	8992451	0	True				
ANR	8992849	RelationalExpression	code < 0		8992451	0		<			
ANR	8992850	Identifier	code		8992451	0					
ANR	8992851	PrimaryExpression	0		8992451	1					
ANR	8992852	ReturnStatement	return code ;	3406:8:108818:108829	8992451	1	True				
ANR	8992853	Identifier	code		8992451	0					
ANR	8992854	ExpressionStatement	pcs -> params . separation . sep_type = sep_type	3407:4:108835:108877	8992451	24	True				
ANR	8992855	AssignmentExpression	pcs -> params . separation . sep_type = sep_type		8992451	0		=			
ANR	8992856	MemberAccess	pcs -> params . separation . sep_type		8992451	0					
ANR	8992857	MemberAccess	pcs -> params . separation		8992451	0					
ANR	8992858	PtrMemberAccess	pcs -> params		8992451	0					
ANR	8992859	Identifier	pcs		8992451	0					
ANR	8992860	Identifier	params		8992451	1					
ANR	8992861	Identifier	separation		8992451	1					
ANR	8992862	Identifier	sep_type		8992451	1					
ANR	8992863	Identifier	sep_type		8992451	1					
ANR	8992864	ExpressionStatement	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"	3408:4:108883:108944	8992451	25	True				
ANR	8992865	AssignmentExpression	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"		8992451	0		=			
ANR	8992866	MemberAccess	pcs -> params . separation . sep_name		8992451	0					
ANR	8992867	MemberAccess	pcs -> params . separation		8992451	0					
ANR	8992868	PtrMemberAccess	pcs -> params		8992451	0					
ANR	8992869	Identifier	pcs		8992451	0					
ANR	8992870	Identifier	params		8992451	1					
ANR	8992871	Identifier	separation		8992451	1					
ANR	8992872	Identifier	sep_name		8992451	1					
ANR	8992873	CallExpression	"name_index ( imemory , & sname )"		8992451	1					
ANR	8992874	Callee	name_index		8992451	0					
ANR	8992875	Identifier	name_index		8992451	0					
ANR	8992876	ArgumentList	imemory		8992451	1					
ANR	8992877	Argument	imemory		8992451	0					
ANR	8992878	Identifier	imemory		8992451	0					
ANR	8992879	Argument	& sname		8992451	1					
ANR	8992880	UnaryOperationExpression	& sname		8992451	0					
ANR	8992881	UnaryOperator	&		8992451	0					
ANR	8992882	Identifier	sname		8992451	1					
ANR	8992883	ExpressionStatement	pcs -> params . separation . get_colorname_string = gs_get_colorname_string	3409:4:108950:109019	8992451	26	True				
ANR	8992884	AssignmentExpression	pcs -> params . separation . get_colorname_string = gs_get_colorname_string		8992451	0		=			
ANR	8992885	MemberAccess	pcs -> params . separation . get_colorname_string		8992451	0					
ANR	8992886	MemberAccess	pcs -> params . separation		8992451	0					
ANR	8992887	PtrMemberAccess	pcs -> params		8992451	0					
ANR	8992888	Identifier	pcs		8992451	0					
ANR	8992889	Identifier	params		8992451	1					
ANR	8992890	Identifier	separation		8992451	1					
ANR	8992891	Identifier	get_colorname_string		8992451	1					
ANR	8992892	Identifier	gs_get_colorname_string		8992451	1					
ANR	8992893	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & proc )"	3410:4:109025:109070	8992451	27	True				
ANR	8992894	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & proc )"		8992451	0		=			
ANR	8992895	Identifier	code		8992451	0					
ANR	8992896	CallExpression	"array_get ( imemory , sepspace , 1 , & proc )"		8992451	1					
ANR	8992897	Callee	array_get		8992451	0					
ANR	8992898	Identifier	array_get		8992451	0					
ANR	8992899	ArgumentList	imemory		8992451	1					
ANR	8992900	Argument	imemory		8992451	0					
ANR	8992901	Identifier	imemory		8992451	0					
ANR	8992902	Argument	sepspace		8992451	1					
ANR	8992903	Identifier	sepspace		8992451	0					
ANR	8992904	Argument	1		8992451	2					
ANR	8992905	PrimaryExpression	1		8992451	0					
ANR	8992906	Argument	& proc		8992451	3					
ANR	8992907	UnaryOperationExpression	& proc		8992451	0					
ANR	8992908	UnaryOperator	&		8992451	0					
ANR	8992909	Identifier	proc		8992451	1					
ANR	8992910	IfStatement	if ( code < 0 )		8992451	28					
ANR	8992911	Condition	code < 0	3411:8:109080:109087	8992451	0	True				
ANR	8992912	RelationalExpression	code < 0		8992451	0		<			
ANR	8992913	Identifier	code		8992451	0					
ANR	8992914	PrimaryExpression	0		8992451	1					
ANR	8992915	ReturnStatement	return code ;	3412:8:109098:109109	8992451	1	True				
ANR	8992916	Identifier	code		8992451	0					
ANR	8992917	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = proc	3413:4:109115:109179	8992451	29	True				
ANR	8992918	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = proc		8992451	0		=			
ANR	8992919	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		8992451	0					
ANR	8992920	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		8992451	0					
ANR	8992921	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8992451	0					
ANR	8992922	MemberAccess	istate -> colorspace [ 0 ] . procs		8992451	0					
ANR	8992923	ArrayIndexing	istate -> colorspace [ 0 ]		8992451	0					
ANR	8992924	PtrMemberAccess	istate -> colorspace		8992451	0					
ANR	8992925	Identifier	istate		8992451	0					
ANR	8992926	Identifier	colorspace		8992451	1					
ANR	8992927	PrimaryExpression	0		8992451	1					
ANR	8992928	Identifier	procs		8992451	1					
ANR	8992929	Identifier	special		8992451	1					
ANR	8992930	Identifier	separation		8992451	1					
ANR	8992931	Identifier	layer_name		8992451	1					
ANR	8992932	Identifier	proc		8992451	1					
ANR	8992933	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3414:4:109185:109230	8992451	30	True				
ANR	8992934	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		8992451	0		=			
ANR	8992935	Identifier	code		8992451	0					
ANR	8992936	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		8992451	1					
ANR	8992937	Callee	array_get		8992451	0					
ANR	8992938	Identifier	array_get		8992451	0					
ANR	8992939	ArgumentList	imemory		8992451	1					
ANR	8992940	Argument	imemory		8992451	0					
ANR	8992941	Identifier	imemory		8992451	0					
ANR	8992942	Argument	sepspace		8992451	1					
ANR	8992943	Identifier	sepspace		8992451	0					
ANR	8992944	Argument	3		8992451	2					
ANR	8992945	PrimaryExpression	3		8992451	0					
ANR	8992946	Argument	& proc		8992451	3					
ANR	8992947	UnaryOperationExpression	& proc		8992451	0					
ANR	8992948	UnaryOperator	&		8992451	0					
ANR	8992949	Identifier	proc		8992451	1					
ANR	8992950	IfStatement	if ( code < 0 )		8992451	31					
ANR	8992951	Condition	code < 0	3415:8:109240:109247	8992451	0	True				
ANR	8992952	RelationalExpression	code < 0		8992451	0		<			
ANR	8992953	Identifier	code		8992451	0					
ANR	8992954	PrimaryExpression	0		8992451	1					
ANR	8992955	ReturnStatement	return code ;	3416:8:109258:109269	8992451	1	True				
ANR	8992956	Identifier	code		8992451	0					
ANR	8992957	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc	3417:4:109275:109343	8992451	32	True				
ANR	8992958	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc		8992451	0		=			
ANR	8992959	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		8992451	0					
ANR	8992960	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		8992451	0					
ANR	8992961	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8992451	0					
ANR	8992962	MemberAccess	istate -> colorspace [ 0 ] . procs		8992451	0					
ANR	8992963	ArrayIndexing	istate -> colorspace [ 0 ]		8992451	0					
ANR	8992964	PtrMemberAccess	istate -> colorspace		8992451	0					
ANR	8992965	Identifier	istate		8992451	0					
ANR	8992966	Identifier	colorspace		8992451	1					
ANR	8992967	PrimaryExpression	0		8992451	1					
ANR	8992968	Identifier	procs		8992451	1					
ANR	8992969	Identifier	special		8992451	1					
ANR	8992970	Identifier	separation		8992451	1					
ANR	8992971	Identifier	tint_transform		8992451	1					
ANR	8992972	Identifier	proc		8992451	1					
ANR	8992973	IfStatement	if ( code >= 0 )		8992451	33					
ANR	8992974	Condition	code >= 0	3418:8:109353:109361	8992451	0	True				
ANR	8992975	RelationalExpression	code >= 0		8992451	0		>=			
ANR	8992976	Identifier	code		8992451	0					
ANR	8992977	PrimaryExpression	0		8992451	1					
ANR	8992978	ExpressionStatement	"code = gs_cspace_set_sepr_function ( pcs , pfn )"	3419:8:109372:109416	8992451	1	True				
ANR	8992979	AssignmentExpression	"code = gs_cspace_set_sepr_function ( pcs , pfn )"		8992451	0		=			
ANR	8992980	Identifier	code		8992451	0					
ANR	8992981	CallExpression	"gs_cspace_set_sepr_function ( pcs , pfn )"		8992451	1					
ANR	8992982	Callee	gs_cspace_set_sepr_function		8992451	0					
ANR	8992983	Identifier	gs_cspace_set_sepr_function		8992451	0					
ANR	8992984	ArgumentList	pcs		8992451	1					
ANR	8992985	Argument	pcs		8992451	0					
ANR	8992986	Identifier	pcs		8992451	0					
ANR	8992987	Argument	pfn		8992451	1					
ANR	8992988	Identifier	pfn		8992451	0					
ANR	8992989	IfStatement	if ( code >= 0 )		8992451	34					
ANR	8992990	Condition	code >= 0	3420:8:109426:109434	8992451	0	True				
ANR	8992991	RelationalExpression	code >= 0		8992451	0		>=			
ANR	8992992	Identifier	code		8992451	0					
ANR	8992993	PrimaryExpression	0		8992451	1					
ANR	8992994	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3421:8:109445:109478	8992451	1	True				
ANR	8992995	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8992451	0		=			
ANR	8992996	Identifier	code		8992451	0					
ANR	8992997	CallExpression	"gs_setcolorspace ( igs , pcs )"		8992451	1					
ANR	8992998	Callee	gs_setcolorspace		8992451	0					
ANR	8992999	Identifier	gs_setcolorspace		8992451	0					
ANR	8993000	ArgumentList	igs		8992451	1					
ANR	8993001	Argument	igs		8992451	0					
ANR	8993002	Identifier	igs		8992451	0					
ANR	8993003	Argument	pcs		8992451	1					
ANR	8993004	Identifier	pcs		8992451	0					
ANR	8993005	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	3423:4:109530:109577	8992451	35	True				
ANR	8993006	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		8992451	0					
ANR	8993007	Callee	rc_decrement_only_cs		8992451	0					
ANR	8993008	Identifier	rc_decrement_only_cs		8992451	0					
ANR	8993009	ArgumentList	pcs		8992451	1					
ANR	8993010	Argument	pcs		8992451	0					
ANR	8993011	Identifier	pcs		8992451	0					
ANR	8993012	Argument	"""setseparationspace"""		8992451	1					
ANR	8993013	PrimaryExpression	"""setseparationspace"""		8992451	0					
ANR	8993014	IfStatement	if ( code < 0 )		8992451	36					
ANR	8993015	Condition	code < 0	3424:8:109587:109594	8992451	0	True				
ANR	8993016	RelationalExpression	code < 0		8992451	0		<			
ANR	8993017	Identifier	code		8992451	0					
ANR	8993018	PrimaryExpression	0		8992451	1					
ANR	8993019	CompoundStatement		91:18:3165:3165	8992451	1					
ANR	8993020	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3425:8:109607:109641	8992451	0	True				
ANR	8993021	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		8992451	0		=			
ANR	8993022	ArrayIndexing	istate -> colorspace [ 0 ]		8992451	0					
ANR	8993023	PtrMemberAccess	istate -> colorspace		8992451	0					
ANR	8993024	Identifier	istate		8992451	0					
ANR	8993025	Identifier	colorspace		8992451	1					
ANR	8993026	PrimaryExpression	0		8992451	1					
ANR	8993027	Identifier	cspace_old		8992451	1					
ANR	8993028	ReturnStatement	return code ;	3426:8:109651:109662	8992451	1	True				
ANR	8993029	Identifier	code		8992451	0					
ANR	8993030	ExpressionStatement	cc . pattern = 0x00	3428:4:109674:109691	8992451	37	True				
ANR	8993031	AssignmentExpression	cc . pattern = 0x00		8992451	0		=			
ANR	8993032	MemberAccess	cc . pattern		8992451	0					
ANR	8993033	Identifier	cc		8992451	0					
ANR	8993034	Identifier	pattern		8992451	1					
ANR	8993035	PrimaryExpression	0x00		8992451	1					
ANR	8993036	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3429:4:109697:109721	8992451	38	True				
ANR	8993037	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		8992451	0		=			
ANR	8993038	ArrayIndexing	cc . paint . values [ 0 ]		8992451	0					
ANR	8993039	MemberAccess	cc . paint . values		8992451	0					
ANR	8993040	MemberAccess	cc . paint		8992451	0					
ANR	8993041	Identifier	cc		8992451	0					
ANR	8993042	Identifier	paint		8992451	1					
ANR	8993043	Identifier	values		8992451	1					
ANR	8993044	PrimaryExpression	0		8992451	1					
ANR	8993045	PrimaryExpression	1.0		8992451	1					
ANR	8993046	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3430:4:109727:109755	8992451	39	True				
ANR	8993047	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8992451	0		=			
ANR	8993048	Identifier	code		8992451	0					
ANR	8993049	CallExpression	"gs_setcolor ( igs , & cc )"		8992451	1					
ANR	8993050	Callee	gs_setcolor		8992451	0					
ANR	8993051	Identifier	gs_setcolor		8992451	0					
ANR	8993052	ArgumentList	igs		8992451	1					
ANR	8993053	Argument	igs		8992451	0					
ANR	8993054	Identifier	igs		8992451	0					
ANR	8993055	Argument	& cc		8992451	1					
ANR	8993056	UnaryOperationExpression	& cc		8992451	0					
ANR	8993057	UnaryOperator	&		8992451	0					
ANR	8993058	Identifier	cc		8992451	1					
ANR	8993059	ReturnStatement	return code ;	3431:4:109761:109772	8992451	40	True				
ANR	8993060	Identifier	code		8992451	0					
ANR	8993061	ReturnType	static int		8992451	1					
ANR	8993062	Identifier	setseparationspace		8992451	2					
ANR	8993063	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , int * stage , int * cont , int CIESubst"		8992451	3					
ANR	8993064	Parameter	i_ctx_t * i_ctx_p	3333:30:106360:106376	8992451	0	True				
ANR	8993065	ParameterType	i_ctx_t *		8992451	0					
ANR	8993066	Identifier	i_ctx_p		8992451	1					
ANR	8993067	Parameter	ref * sepspace	3333:49:106379:106391	8992451	1	True				
ANR	8993068	ParameterType	ref *		8992451	0					
ANR	8993069	Identifier	sepspace		8992451	1					
ANR	8993070	Parameter	int * stage	3333:64:106394:106403	8992451	2	True				
ANR	8993071	ParameterType	int *		8992451	0					
ANR	8993072	Identifier	stage		8992451	1					
ANR	8993073	Parameter	int * cont	3333:76:106406:106414	8992451	3	True				
ANR	8993074	ParameterType	int *		8992451	0					
ANR	8993075	Identifier	cont		8992451	1					
ANR	8993076	Parameter	int CIESubst	3333:87:106417:106428	8992451	4	True				
ANR	8993077	ParameterType	int		8992451	0					
ANR	8993078	Identifier	CIESubst		8992451	1					
ANR	8993079	CFGEntryNode	ENTRY		8992451		True				
ANR	8993080	CFGExitNode	EXIT		8992451		True				
ANR	8993081	Symbol	convert_transform		8992451						
ANR	8993082	Symbol	i_ctx_p -> language_level		8992451						
ANR	8993083	Symbol	* cc		8992451						
ANR	8993084	Symbol	pcs -> params . separation . sep_type		8992451						
ANR	8993085	Symbol	gs_error_undefined		8992451						
ANR	8993086	Symbol	& name_all		8992451						
ANR	8993087	Symbol	* pcs		8992451						
ANR	8993088	Symbol	& cc		8992451						
ANR	8993089	Symbol	istate -> colorspace [ 0 ] . procs . special . separation		8992451						
ANR	8993090	Symbol	osp		8992451						
ANR	8993091	Symbol	* istate		8992451						
ANR	8993092	Symbol	gs_cspace_set_sepr_function		8992451						
ANR	8993093	Symbol	name_from_string		8992451						
ANR	8993094	Symbol	r_has_type		8992451						
ANR	8993095	Symbol	igs		8992451						
ANR	8993096	Symbol	pacs		8992451						
ANR	8993097	Symbol	gs_currentcolorspace		8992451						
ANR	8993098	Symbol	* cc . paint . values		8992451						
ANR	8993099	Symbol	istate -> colorspace [ 0 ] . procs		8992451						
ANR	8993100	Symbol	* i_ctx_p		8992451						
ANR	8993101	Symbol	istate -> colorspace		8992451						
ANR	8993102	Symbol	gs_get_colorname_string		8992451						
ANR	8993103	Symbol	imemory		8992451						
ANR	8993104	Symbol	cont		8992451						
ANR	8993105	Symbol	NULL		8992451						
ANR	8993106	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		8992451						
ANR	8993107	Symbol	istate -> colorspace [ 0 ] . procs . special		8992451						
ANR	8993108	Symbol	i_ctx_p		8992451						
ANR	8993109	Symbol	pfn		8992451						
ANR	8993110	Symbol	cc . paint . values		8992451						
ANR	8993111	Symbol	* * istate		8992451						
ANR	8993112	Symbol	& pcs		8992451						
ANR	8993113	Symbol	name_eq		8992451						
ANR	8993114	Symbol	cc . pattern		8992451						
ANR	8993115	Symbol	code		8992451						
ANR	8993116	Symbol	gs_setcolor		8992451						
ANR	8993117	Symbol	ref_function		8992451						
ANR	8993118	Symbol	gs_setcolorspace		8992451						
ANR	8993119	Symbol	& sname		8992451						
ANR	8993120	Symbol	sepspace		8992451						
ANR	8993121	Symbol	pcs -> params . separation		8992451						
ANR	8993122	Symbol	pcs -> params . separation . sep_name		8992451						
ANR	8993123	Symbol	name_all		8992451						
ANR	8993124	Symbol	name_index		8992451						
ANR	8993125	Symbol	pcs -> params . separation . get_colorname_string		8992451						
ANR	8993126	Symbol	& name_none		8992451						
ANR	8993127	Symbol	CIESubst		8992451						
ANR	8993128	Symbol	& proc		8992451						
ANR	8993129	Symbol	SEP_OTHER		8992451						
ANR	8993130	Symbol	* istate -> colorspace		8992451						
ANR	8993131	Symbol	cc		8992451						
ANR	8993132	Symbol	op		8992451						
ANR	8993133	Symbol	pcs		8992451						
ANR	8993134	Symbol	proc		8992451						
ANR	8993135	Symbol	* stage		8992451						
ANR	8993136	Symbol	name_none		8992451						
ANR	8993137	Symbol	name_ref		8992451						
ANR	8993138	Symbol	array_get		8992451						
ANR	8993139	Symbol	pcs -> params		8992451						
ANR	8993140	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		8992451						
ANR	8993141	Symbol	SEP_NONE		8992451						
ANR	8993142	Symbol	t_string		8992451						
ANR	8993143	Symbol	* cc . paint		8992451						
ANR	8993144	Symbol	stage		8992451						
ANR	8993145	Symbol	* cont		8992451						
ANR	8993146	Symbol	sname		8992451						
ANR	8993147	Symbol	sep_type		8992451						
ANR	8993148	Symbol	SEP_ALL		8992451						
ANR	8993149	Symbol	cc . paint		8992451						
ANR	8993150	Symbol	cspace_old		8992451						
ANR	8993151	Symbol	gs_cspace_new_Separation		8992451						
ANR	8993152	Symbol	istate		8992451						
ANR	8993153	Function	validateseparationspace	3433:0:109776:112168							
ANR	8993154	FunctionDef	"validateseparationspace (i_ctx_t * i_ctx_p , ref * * space)"		8993153	0					
ANR	8993155	CompoundStatement		3434:0:109843:112168	8993153	0					
ANR	8993156	IdentifierDeclStatement	int code = 0 ;	3435:4:109849:109861	8993153	0	True				
ANR	8993157	IdentifierDecl	code = 0		8993153	0					
ANR	8993158	IdentifierDeclType	int		8993153	0					
ANR	8993159	Identifier	code		8993153	1					
ANR	8993160	AssignmentExpression	code = 0		8993153	2		=			
ANR	8993161	Identifier	code		8993153	0					
ANR	8993162	PrimaryExpression	0		8993153	1					
ANR	8993163	IdentifierDeclStatement	ref * sepspace = * space ;	3436:4:109867:109889	8993153	1	True				
ANR	8993164	IdentifierDecl	* sepspace = * space		8993153	0					
ANR	8993165	IdentifierDeclType	ref *		8993153	0					
ANR	8993166	Identifier	sepspace		8993153	1					
ANR	8993167	AssignmentExpression	* sepspace = * space		8993153	2		=			
ANR	8993168	Identifier	sepspace		8993153	0					
ANR	8993169	UnaryOperationExpression	* space		8993153	1					
ANR	8993170	UnaryOperator	*		8993153	0					
ANR	8993171	Identifier	space		8993153	1					
ANR	8993172	IdentifierDeclStatement	"ref nameref , sref , sname , altspace , tref ;"	3437:4:109895:109935	8993153	2	True				
ANR	8993173	IdentifierDecl	nameref		8993153	0					
ANR	8993174	IdentifierDeclType	ref		8993153	0					
ANR	8993175	Identifier	nameref		8993153	1					
ANR	8993176	IdentifierDecl	sref		8993153	1					
ANR	8993177	IdentifierDeclType	ref		8993153	0					
ANR	8993178	Identifier	sref		8993153	1					
ANR	8993179	IdentifierDecl	sname		8993153	2					
ANR	8993180	IdentifierDeclType	ref		8993153	0					
ANR	8993181	Identifier	sname		8993153	1					
ANR	8993182	IdentifierDecl	altspace		8993153	3					
ANR	8993183	IdentifierDeclType	ref		8993153	0					
ANR	8993184	Identifier	altspace		8993153	1					
ANR	8993185	IdentifierDecl	tref		8993153	4					
ANR	8993186	IdentifierDeclType	ref		8993153	0					
ANR	8993187	Identifier	tref		8993153	1					
ANR	8993188	IfStatement	if ( ! r_is_array ( sepspace ) )		8993153	3					
ANR	8993189	Condition	! r_is_array ( sepspace )	3439:8:109946:109966	8993153	0	True				
ANR	8993190	UnaryOperationExpression	! r_is_array ( sepspace )		8993153	0					
ANR	8993191	UnaryOperator	!		8993153	0					
ANR	8993192	CallExpression	r_is_array ( sepspace )		8993153	1					
ANR	8993193	Callee	r_is_array		8993153	0					
ANR	8993194	Identifier	r_is_array		8993153	0					
ANR	8993195	ArgumentList	sepspace		8993153	1					
ANR	8993196	Argument	sepspace		8993153	0					
ANR	8993197	Identifier	sepspace		8993153	0					
ANR	8993198	ExpressionStatement	return_error ( gs_error_typecheck )	3440:8:109977:110009	8993153	1	True				
ANR	8993199	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993200	Callee	return_error		8993153	0					
ANR	8993201	Identifier	return_error		8993153	0					
ANR	8993202	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993203	Argument	gs_error_typecheck		8993153	0					
ANR	8993204	Identifier	gs_error_typecheck		8993153	0					
ANR	8993205	IfStatement	if ( r_size ( sepspace ) != 4 )		8993153	4					
ANR	8993206	Condition	r_size ( sepspace ) != 4	3442:8:110080:110100	8993153	0	True				
ANR	8993207	EqualityExpression	r_size ( sepspace ) != 4		8993153	0		!=			
ANR	8993208	CallExpression	r_size ( sepspace )		8993153	0					
ANR	8993209	Callee	r_size		8993153	0					
ANR	8993210	Identifier	r_size		8993153	0					
ANR	8993211	ArgumentList	sepspace		8993153	1					
ANR	8993212	Argument	sepspace		8993153	0					
ANR	8993213	Identifier	sepspace		8993153	0					
ANR	8993214	PrimaryExpression	4		8993153	1					
ANR	8993215	ExpressionStatement	return_error ( gs_error_rangecheck )	3443:8:110111:110144	8993153	1	True				
ANR	8993216	CallExpression	return_error ( gs_error_rangecheck )		8993153	0					
ANR	8993217	Callee	return_error		8993153	0					
ANR	8993218	Identifier	return_error		8993153	0					
ANR	8993219	ArgumentList	gs_error_rangecheck		8993153	1					
ANR	8993220	Argument	gs_error_rangecheck		8993153	0					
ANR	8993221	Identifier	gs_error_rangecheck		8993153	0					
ANR	8993222	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3446:4:110210:110256	8993153	5	True				
ANR	8993223	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		8993153	0		=			
ANR	8993224	Identifier	code		8993153	0					
ANR	8993225	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		8993153	1					
ANR	8993226	Callee	array_get		8993153	0					
ANR	8993227	Identifier	array_get		8993153	0					
ANR	8993228	ArgumentList	imemory		8993153	1					
ANR	8993229	Argument	imemory		8993153	0					
ANR	8993230	Identifier	imemory		8993153	0					
ANR	8993231	Argument	sepspace		8993153	1					
ANR	8993232	Identifier	sepspace		8993153	0					
ANR	8993233	Argument	1		8993153	2					
ANR	8993234	PrimaryExpression	1		8993153	0					
ANR	8993235	Argument	& sname		8993153	3					
ANR	8993236	UnaryOperationExpression	& sname		8993153	0					
ANR	8993237	UnaryOperator	&		8993153	0					
ANR	8993238	Identifier	sname		8993153	1					
ANR	8993239	IfStatement	if ( code < 0 )		8993153	6					
ANR	8993240	Condition	code < 0	3447:8:110266:110273	8993153	0	True				
ANR	8993241	RelationalExpression	code < 0		8993153	0		<			
ANR	8993242	Identifier	code		8993153	0					
ANR	8993243	PrimaryExpression	0		8993153	1					
ANR	8993244	ReturnStatement	return code ;	3448:8:110284:110295	8993153	1	True				
ANR	8993245	Identifier	code		8993153	0					
ANR	8993246	IfStatement	"if ( ! r_has_type ( & sname , t_name ) )"		8993153	7					
ANR	8993247	Condition	"! r_has_type ( & sname , t_name )"	3449:8:110305:110331	8993153	0	True				
ANR	8993248	UnaryOperationExpression	"! r_has_type ( & sname , t_name )"		8993153	0					
ANR	8993249	UnaryOperator	!		8993153	0					
ANR	8993250	CallExpression	"r_has_type ( & sname , t_name )"		8993153	1					
ANR	8993251	Callee	r_has_type		8993153	0					
ANR	8993252	Identifier	r_has_type		8993153	0					
ANR	8993253	ArgumentList	& sname		8993153	1					
ANR	8993254	Argument	& sname		8993153	0					
ANR	8993255	UnaryOperationExpression	& sname		8993153	0					
ANR	8993256	UnaryOperator	&		8993153	0					
ANR	8993257	Identifier	sname		8993153	1					
ANR	8993258	Argument	t_name		8993153	1					
ANR	8993259	Identifier	t_name		8993153	0					
ANR	8993260	CompoundStatement		16:37:490:490	8993153	1					
ANR	8993261	IfStatement	"if ( ! r_has_type ( & sname , t_string ) )"		8993153	0					
ANR	8993262	Condition	"! r_has_type ( & sname , t_string )"	3450:12:110348:110376	8993153	0	True				
ANR	8993263	UnaryOperationExpression	"! r_has_type ( & sname , t_string )"		8993153	0					
ANR	8993264	UnaryOperator	!		8993153	0					
ANR	8993265	CallExpression	"r_has_type ( & sname , t_string )"		8993153	1					
ANR	8993266	Callee	r_has_type		8993153	0					
ANR	8993267	Identifier	r_has_type		8993153	0					
ANR	8993268	ArgumentList	& sname		8993153	1					
ANR	8993269	Argument	& sname		8993153	0					
ANR	8993270	UnaryOperationExpression	& sname		8993153	0					
ANR	8993271	UnaryOperator	&		8993153	0					
ANR	8993272	Identifier	sname		8993153	1					
ANR	8993273	Argument	t_string		8993153	1					
ANR	8993274	Identifier	t_string		8993153	0					
ANR	8993275	ExpressionStatement	return_error ( gs_error_typecheck )	3451:12:110391:110423	8993153	1	True				
ANR	8993276	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993277	Callee	return_error		8993153	0					
ANR	8993278	Identifier	return_error		8993153	0					
ANR	8993279	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993280	Argument	gs_error_typecheck		8993153	0					
ANR	8993281	Identifier	gs_error_typecheck		8993153	0					
ANR	8993282	ElseStatement	else		8993153	0					
ANR	8993283	CompoundStatement		19:13:594:594	8993153	0					
ANR	8993284	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3453:12:110452:110500	8993153	0	True				
ANR	8993285	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		8993153	0		=			
ANR	8993286	Identifier	code		8993153	0					
ANR	8993287	CallExpression	"name_from_string ( imemory , & sname , & sname )"		8993153	1					
ANR	8993288	Callee	name_from_string		8993153	0					
ANR	8993289	Identifier	name_from_string		8993153	0					
ANR	8993290	ArgumentList	imemory		8993153	1					
ANR	8993291	Argument	imemory		8993153	0					
ANR	8993292	Identifier	imemory		8993153	0					
ANR	8993293	Argument	& sname		8993153	1					
ANR	8993294	UnaryOperationExpression	& sname		8993153	0					
ANR	8993295	UnaryOperator	&		8993153	0					
ANR	8993296	Identifier	sname		8993153	1					
ANR	8993297	Argument	& sname		8993153	2					
ANR	8993298	UnaryOperationExpression	& sname		8993153	0					
ANR	8993299	UnaryOperator	&		8993153	0					
ANR	8993300	Identifier	sname		8993153	1					
ANR	8993301	IfStatement	if ( code < 0 )		8993153	1					
ANR	8993302	Condition	code < 0	3454:16:110518:110525	8993153	0	True				
ANR	8993303	RelationalExpression	code < 0		8993153	0		<			
ANR	8993304	Identifier	code		8993153	0					
ANR	8993305	PrimaryExpression	0		8993153	1					
ANR	8993306	ReturnStatement	return code ;	3455:16:110544:110555	8993153	1	True				
ANR	8993307	Identifier	code		8993153	0					
ANR	8993308	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & tref )"	3460:4:110628:110673	8993153	8	True				
ANR	8993309	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & tref )"		8993153	0		=			
ANR	8993310	Identifier	code		8993153	0					
ANR	8993311	CallExpression	"array_get ( imemory , sepspace , 3 , & tref )"		8993153	1					
ANR	8993312	Callee	array_get		8993153	0					
ANR	8993313	Identifier	array_get		8993153	0					
ANR	8993314	ArgumentList	imemory		8993153	1					
ANR	8993315	Argument	imemory		8993153	0					
ANR	8993316	Identifier	imemory		8993153	0					
ANR	8993317	Argument	sepspace		8993153	1					
ANR	8993318	Identifier	sepspace		8993153	0					
ANR	8993319	Argument	3		8993153	2					
ANR	8993320	PrimaryExpression	3		8993153	0					
ANR	8993321	Argument	& tref		8993153	3					
ANR	8993322	UnaryOperationExpression	& tref		8993153	0					
ANR	8993323	UnaryOperator	&		8993153	0					
ANR	8993324	Identifier	tref		8993153	1					
ANR	8993325	IfStatement	if ( code < 0 )		8993153	9					
ANR	8993326	Condition	code < 0	3461:8:110683:110690	8993153	0	True				
ANR	8993327	RelationalExpression	code < 0		8993153	0		<			
ANR	8993328	Identifier	code		8993153	0					
ANR	8993329	PrimaryExpression	0		8993153	1					
ANR	8993330	ReturnStatement	return code ;	3462:8:110701:110712	8993153	1	True				
ANR	8993331	Identifier	code		8993153	0					
ANR	8993332	ExpressionStatement	check_proc ( tref )	3463:4:110718:110734	8993153	10	True				
ANR	8993333	CallExpression	check_proc ( tref )		8993153	0					
ANR	8993334	Callee	check_proc		8993153	0					
ANR	8993335	Identifier	check_proc		8993153	0					
ANR	8993336	ArgumentList	tref		8993153	1					
ANR	8993337	Argument	tref		8993153	0					
ANR	8993338	Identifier	tref		8993153	0					
ANR	8993339	ExpressionStatement	"code = array_get ( imemory , sepspace , 2 , & altspace )"	3466:4:110787:110836	8993153	11	True				
ANR	8993340	AssignmentExpression	"code = array_get ( imemory , sepspace , 2 , & altspace )"		8993153	0		=			
ANR	8993341	Identifier	code		8993153	0					
ANR	8993342	CallExpression	"array_get ( imemory , sepspace , 2 , & altspace )"		8993153	1					
ANR	8993343	Callee	array_get		8993153	0					
ANR	8993344	Identifier	array_get		8993153	0					
ANR	8993345	ArgumentList	imemory		8993153	1					
ANR	8993346	Argument	imemory		8993153	0					
ANR	8993347	Identifier	imemory		8993153	0					
ANR	8993348	Argument	sepspace		8993153	1					
ANR	8993349	Identifier	sepspace		8993153	0					
ANR	8993350	Argument	2		8993153	2					
ANR	8993351	PrimaryExpression	2		8993153	0					
ANR	8993352	Argument	& altspace		8993153	3					
ANR	8993353	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993354	UnaryOperator	&		8993153	0					
ANR	8993355	Identifier	altspace		8993153	1					
ANR	8993356	IfStatement	if ( code < 0 )		8993153	12					
ANR	8993357	Condition	code < 0	3467:8:110846:110853	8993153	0	True				
ANR	8993358	RelationalExpression	code < 0		8993153	0		<			
ANR	8993359	Identifier	code		8993153	0					
ANR	8993360	PrimaryExpression	0		8993153	1					
ANR	8993361	ReturnStatement	return code ;	3468:8:110864:110875	8993153	1	True				
ANR	8993362	Identifier	code		8993153	0					
ANR	8993363	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		8993153	13					
ANR	8993364	Condition	"r_has_type ( & altspace , t_name )"	3469:8:110885:110913	8993153	0	True				
ANR	8993365	CallExpression	"r_has_type ( & altspace , t_name )"		8993153	0					
ANR	8993366	Callee	r_has_type		8993153	0					
ANR	8993367	Identifier	r_has_type		8993153	0					
ANR	8993368	ArgumentList	& altspace		8993153	1					
ANR	8993369	Argument	& altspace		8993153	0					
ANR	8993370	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993371	UnaryOperator	&		8993153	0					
ANR	8993372	Identifier	altspace		8993153	1					
ANR	8993373	Argument	t_name		8993153	1					
ANR	8993374	Identifier	t_name		8993153	0					
ANR	8993375	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	3470:8:110924:110955	8993153	1	True				
ANR	8993376	CallExpression	"ref_assign ( & nameref , & altspace )"		8993153	0					
ANR	8993377	Callee	ref_assign		8993153	0					
ANR	8993378	Identifier	ref_assign		8993153	0					
ANR	8993379	ArgumentList	& nameref		8993153	1					
ANR	8993380	Argument	& nameref		8993153	0					
ANR	8993381	UnaryOperationExpression	& nameref		8993153	0					
ANR	8993382	UnaryOperator	&		8993153	0					
ANR	8993383	Identifier	nameref		8993153	1					
ANR	8993384	Argument	& altspace		8993153	1					
ANR	8993385	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993386	UnaryOperator	&		8993153	0					
ANR	8993387	Identifier	altspace		8993153	1					
ANR	8993388	ElseStatement	else		8993153	0					
ANR	8993389	CompoundStatement		38:9:1122:1122	8993153	0					
ANR	8993390	IfStatement	if ( ! r_is_array ( & altspace ) )		8993153	0					
ANR	8993391	Condition	! r_is_array ( & altspace )	3473:12:111036:111057	8993153	0	True				
ANR	8993392	UnaryOperationExpression	! r_is_array ( & altspace )		8993153	0					
ANR	8993393	UnaryOperator	!		8993153	0					
ANR	8993394	CallExpression	r_is_array ( & altspace )		8993153	1					
ANR	8993395	Callee	r_is_array		8993153	0					
ANR	8993396	Identifier	r_is_array		8993153	0					
ANR	8993397	ArgumentList	& altspace		8993153	1					
ANR	8993398	Argument	& altspace		8993153	0					
ANR	8993399	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993400	UnaryOperator	&		8993153	0					
ANR	8993401	Identifier	altspace		8993153	1					
ANR	8993402	ExpressionStatement	return_error ( gs_error_typecheck )	3474:12:111072:111104	8993153	1	True				
ANR	8993403	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993404	Callee	return_error		8993153	0					
ANR	8993405	Identifier	return_error		8993153	0					
ANR	8993406	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993407	Argument	gs_error_typecheck		8993153	0					
ANR	8993408	Identifier	gs_error_typecheck		8993153	0					
ANR	8993409	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & tref )"	3476:8:111156:111202	8993153	1	True				
ANR	8993410	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & tref )"		8993153	0		=			
ANR	8993411	Identifier	code		8993153	0					
ANR	8993412	CallExpression	"array_get ( imemory , & altspace , 0 , & tref )"		8993153	1					
ANR	8993413	Callee	array_get		8993153	0					
ANR	8993414	Identifier	array_get		8993153	0					
ANR	8993415	ArgumentList	imemory		8993153	1					
ANR	8993416	Argument	imemory		8993153	0					
ANR	8993417	Identifier	imemory		8993153	0					
ANR	8993418	Argument	& altspace		8993153	1					
ANR	8993419	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993420	UnaryOperator	&		8993153	0					
ANR	8993421	Identifier	altspace		8993153	1					
ANR	8993422	Argument	0		8993153	2					
ANR	8993423	PrimaryExpression	0		8993153	0					
ANR	8993424	Argument	& tref		8993153	3					
ANR	8993425	UnaryOperationExpression	& tref		8993153	0					
ANR	8993426	UnaryOperator	&		8993153	0					
ANR	8993427	Identifier	tref		8993153	1					
ANR	8993428	IfStatement	if ( code < 0 )		8993153	2					
ANR	8993429	Condition	code < 0	3477:12:111216:111223	8993153	0	True				
ANR	8993430	RelationalExpression	code < 0		8993153	0		<			
ANR	8993431	Identifier	code		8993153	0					
ANR	8993432	PrimaryExpression	0		8993153	1					
ANR	8993433	ReturnStatement	return code ;	3478:12:111238:111249	8993153	1	True				
ANR	8993434	Identifier	code		8993153	0					
ANR	8993435	IfStatement	"if ( ! r_has_type ( & tref , t_name ) )"		8993153	3					
ANR	8993436	Condition	"! r_has_type ( & tref , t_name )"	3479:12:111263:111288	8993153	0	True				
ANR	8993437	UnaryOperationExpression	"! r_has_type ( & tref , t_name )"		8993153	0					
ANR	8993438	UnaryOperator	!		8993153	0					
ANR	8993439	CallExpression	"r_has_type ( & tref , t_name )"		8993153	1					
ANR	8993440	Callee	r_has_type		8993153	0					
ANR	8993441	Identifier	r_has_type		8993153	0					
ANR	8993442	ArgumentList	& tref		8993153	1					
ANR	8993443	Argument	& tref		8993153	0					
ANR	8993444	UnaryOperationExpression	& tref		8993153	0					
ANR	8993445	UnaryOperator	&		8993153	0					
ANR	8993446	Identifier	tref		8993153	1					
ANR	8993447	Argument	t_name		8993153	1					
ANR	8993448	Identifier	t_name		8993153	0					
ANR	8993449	ExpressionStatement	return_error ( gs_error_typecheck )	3480:12:111303:111335	8993153	1	True				
ANR	8993450	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993451	Callee	return_error		8993153	0					
ANR	8993452	Identifier	return_error		8993153	0					
ANR	8993453	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993454	Argument	gs_error_typecheck		8993153	0					
ANR	8993455	Identifier	gs_error_typecheck		8993153	0					
ANR	8993456	ExpressionStatement	"ref_assign ( & nameref , & tref )"	3481:8:111345:111372	8993153	4	True				
ANR	8993457	CallExpression	"ref_assign ( & nameref , & tref )"		8993153	0					
ANR	8993458	Callee	ref_assign		8993153	0					
ANR	8993459	Identifier	ref_assign		8993153	0					
ANR	8993460	ArgumentList	& nameref		8993153	1					
ANR	8993461	Argument	& nameref		8993153	0					
ANR	8993462	UnaryOperationExpression	& nameref		8993153	0					
ANR	8993463	UnaryOperator	&		8993153	0					
ANR	8993464	Identifier	nameref		8993153	1					
ANR	8993465	Argument	& tref		8993153	1					
ANR	8993466	UnaryOperationExpression	& tref		8993153	0					
ANR	8993467	UnaryOperator	&		8993153	0					
ANR	8993468	Identifier	tref		8993153	1					
ANR	8993469	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	3485:4:111434:111475	8993153	14	True				
ANR	8993470	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		8993153	0					
ANR	8993471	Callee	name_string_ref		8993153	0					
ANR	8993472	Identifier	name_string_ref		8993153	0					
ANR	8993473	ArgumentList	imemory		8993153	1					
ANR	8993474	Argument	imemory		8993153	0					
ANR	8993475	Identifier	imemory		8993153	0					
ANR	8993476	Argument	& nameref		8993153	1					
ANR	8993477	UnaryOperationExpression	& nameref		8993153	0					
ANR	8993478	UnaryOperator	&		8993153	0					
ANR	8993479	Identifier	nameref		8993153	1					
ANR	8993480	Argument	& sref		8993153	2					
ANR	8993481	UnaryOperationExpression	& sref		8993153	0					
ANR	8993482	UnaryOperator	&		8993153	0					
ANR	8993483	Identifier	sref		8993153	1					
ANR	8993484	IfStatement	if ( r_size ( & sref ) == 7 )		8993153	15					
ANR	8993485	Condition	r_size ( & sref ) == 7	3487:8:111542:111559	8993153	0	True				
ANR	8993486	EqualityExpression	r_size ( & sref ) == 7		8993153	0		==			
ANR	8993487	CallExpression	r_size ( & sref )		8993153	0					
ANR	8993488	Callee	r_size		8993153	0					
ANR	8993489	Identifier	r_size		8993153	0					
ANR	8993490	ArgumentList	& sref		8993153	1					
ANR	8993491	Argument	& sref		8993153	0					
ANR	8993492	UnaryOperationExpression	& sref		8993153	0					
ANR	8993493	UnaryOperator	&		8993153	0					
ANR	8993494	Identifier	sref		8993153	1					
ANR	8993495	PrimaryExpression	7		8993153	1					
ANR	8993496	CompoundStatement		54:28:1718:1718	8993153	1					
ANR	8993497	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		8993153	0					
ANR	8993498	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	3488:12:111576:111639	8993153	0	True				
ANR	8993499	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		8993153	0		==			
ANR	8993500	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		8993153	0					
ANR	8993501	Callee	strncmp		8993153	0					
ANR	8993502	Identifier	strncmp		8993153	0					
ANR	8993503	ArgumentList	( const char * ) sref . value . const_bytes		8993153	1					
ANR	8993504	Argument	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993505	CastExpression	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993506	CastTarget	const char *		8993153	0					
ANR	8993507	MemberAccess	sref . value . const_bytes		8993153	1					
ANR	8993508	MemberAccess	sref . value		8993153	0					
ANR	8993509	Identifier	sref		8993153	0					
ANR	8993510	Identifier	value		8993153	1					
ANR	8993511	Identifier	const_bytes		8993153	1					
ANR	8993512	Argument	"""Indexed"""		8993153	1					
ANR	8993513	PrimaryExpression	"""Indexed"""		8993153	0					
ANR	8993514	Argument	7		8993153	2					
ANR	8993515	PrimaryExpression	7		8993153	0					
ANR	8993516	PrimaryExpression	0		8993153	1					
ANR	8993517	ExpressionStatement	return_error ( gs_error_typecheck )	3489:12:111654:111686	8993153	1	True				
ANR	8993518	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993519	Callee	return_error		8993153	0					
ANR	8993520	Identifier	return_error		8993153	0					
ANR	8993521	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993522	Argument	gs_error_typecheck		8993153	0					
ANR	8993523	Identifier	gs_error_typecheck		8993153	0					
ANR	8993524	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		8993153	1					
ANR	8993525	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	3490:12:111700:111763	8993153	0	True				
ANR	8993526	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		8993153	0		==			
ANR	8993527	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		8993153	0					
ANR	8993528	Callee	strncmp		8993153	0					
ANR	8993529	Identifier	strncmp		8993153	0					
ANR	8993530	ArgumentList	( const char * ) sref . value . const_bytes		8993153	1					
ANR	8993531	Argument	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993532	CastExpression	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993533	CastTarget	const char *		8993153	0					
ANR	8993534	MemberAccess	sref . value . const_bytes		8993153	1					
ANR	8993535	MemberAccess	sref . value		8993153	0					
ANR	8993536	Identifier	sref		8993153	0					
ANR	8993537	Identifier	value		8993153	1					
ANR	8993538	Identifier	const_bytes		8993153	1					
ANR	8993539	Argument	"""Pattern"""		8993153	1					
ANR	8993540	PrimaryExpression	"""Pattern"""		8993153	0					
ANR	8993541	Argument	7		8993153	2					
ANR	8993542	PrimaryExpression	7		8993153	0					
ANR	8993543	PrimaryExpression	0		8993153	1					
ANR	8993544	ExpressionStatement	return_error ( gs_error_typecheck )	3491:12:111778:111810	8993153	1	True				
ANR	8993545	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993546	Callee	return_error		8993153	0					
ANR	8993547	Identifier	return_error		8993153	0					
ANR	8993548	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993549	Argument	gs_error_typecheck		8993153	0					
ANR	8993550	Identifier	gs_error_typecheck		8993153	0					
ANR	8993551	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0 )"		8993153	2					
ANR	8993552	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"	3492:12:111824:111887	8993153	0	True				
ANR	8993553	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"		8993153	0		==			
ANR	8993554	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 )"		8993153	0					
ANR	8993555	Callee	strncmp		8993153	0					
ANR	8993556	Identifier	strncmp		8993153	0					
ANR	8993557	ArgumentList	( const char * ) sref . value . const_bytes		8993153	1					
ANR	8993558	Argument	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993559	CastExpression	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993560	CastTarget	const char *		8993153	0					
ANR	8993561	MemberAccess	sref . value . const_bytes		8993153	1					
ANR	8993562	MemberAccess	sref . value		8993153	0					
ANR	8993563	Identifier	sref		8993153	0					
ANR	8993564	Identifier	value		8993153	1					
ANR	8993565	Identifier	const_bytes		8993153	1					
ANR	8993566	Argument	"""DeviceN"""		8993153	1					
ANR	8993567	PrimaryExpression	"""DeviceN"""		8993153	0					
ANR	8993568	Argument	7		8993153	2					
ANR	8993569	PrimaryExpression	7		8993153	0					
ANR	8993570	PrimaryExpression	0		8993153	1					
ANR	8993571	ExpressionStatement	return_error ( gs_error_typecheck )	3493:12:111902:111934	8993153	1	True				
ANR	8993572	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993573	Callee	return_error		8993153	0					
ANR	8993574	Identifier	return_error		8993153	0					
ANR	8993575	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993576	Argument	gs_error_typecheck		8993153	0					
ANR	8993577	Identifier	gs_error_typecheck		8993153	0					
ANR	8993578	IfStatement	"if ( r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0 )"		8993153	16					
ANR	8993579	Condition	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"	3496:8:111985:112073	8993153	0	True				
ANR	8993580	AndExpression	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		8993153	0		&&			
ANR	8993581	EqualityExpression	r_size ( & sref ) == 9		8993153	0		==			
ANR	8993582	CallExpression	r_size ( & sref )		8993153	0					
ANR	8993583	Callee	r_size		8993153	0					
ANR	8993584	Identifier	r_size		8993153	0					
ANR	8993585	ArgumentList	& sref		8993153	1					
ANR	8993586	Argument	& sref		8993153	0					
ANR	8993587	UnaryOperationExpression	& sref		8993153	0					
ANR	8993588	UnaryOperator	&		8993153	0					
ANR	8993589	Identifier	sref		8993153	1					
ANR	8993590	PrimaryExpression	9		8993153	1					
ANR	8993591	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		8993153	1		==			
ANR	8993592	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 )"		8993153	0					
ANR	8993593	Callee	strncmp		8993153	0					
ANR	8993594	Identifier	strncmp		8993153	0					
ANR	8993595	ArgumentList	( const char * ) sref . value . const_bytes		8993153	1					
ANR	8993596	Argument	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993597	CastExpression	( const char * ) sref . value . const_bytes		8993153	0					
ANR	8993598	CastTarget	const char *		8993153	0					
ANR	8993599	MemberAccess	sref . value . const_bytes		8993153	1					
ANR	8993600	MemberAccess	sref . value		8993153	0					
ANR	8993601	Identifier	sref		8993153	0					
ANR	8993602	Identifier	value		8993153	1					
ANR	8993603	Identifier	const_bytes		8993153	1					
ANR	8993604	Argument	"""Separation"""		8993153	1					
ANR	8993605	PrimaryExpression	"""Separation"""		8993153	0					
ANR	8993606	Argument	9		8993153	2					
ANR	8993607	PrimaryExpression	9		8993153	0					
ANR	8993608	PrimaryExpression	0		8993153	1					
ANR	8993609	ExpressionStatement	return_error ( gs_error_typecheck )	3497:8:112084:112116	8993153	1	True				
ANR	8993610	CallExpression	return_error ( gs_error_typecheck )		8993153	0					
ANR	8993611	Callee	return_error		8993153	0					
ANR	8993612	Identifier	return_error		8993153	0					
ANR	8993613	ArgumentList	gs_error_typecheck		8993153	1					
ANR	8993614	Argument	gs_error_typecheck		8993153	0					
ANR	8993615	Identifier	gs_error_typecheck		8993153	0					
ANR	8993616	ExpressionStatement	"ref_assign ( * space , & altspace )"	3499:4:112123:112152	8993153	17	True				
ANR	8993617	CallExpression	"ref_assign ( * space , & altspace )"		8993153	0					
ANR	8993618	Callee	ref_assign		8993153	0					
ANR	8993619	Identifier	ref_assign		8993153	0					
ANR	8993620	ArgumentList	* space		8993153	1					
ANR	8993621	Argument	* space		8993153	0					
ANR	8993622	UnaryOperationExpression	* space		8993153	0					
ANR	8993623	UnaryOperator	*		8993153	0					
ANR	8993624	Identifier	space		8993153	1					
ANR	8993625	Argument	& altspace		8993153	1					
ANR	8993626	UnaryOperationExpression	& altspace		8993153	0					
ANR	8993627	UnaryOperator	&		8993153	0					
ANR	8993628	Identifier	altspace		8993153	1					
ANR	8993629	ReturnStatement	return 0 ;	3500:4:112158:112166	8993153	18	True				
ANR	8993630	PrimaryExpression	0		8993153	0					
ANR	8993631	ReturnType	static int		8993153	1					
ANR	8993632	Identifier	validateseparationspace		8993153	2					
ANR	8993633	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		8993153	3					
ANR	8993634	Parameter	i_ctx_t * i_ctx_p	3433:35:109811:109827	8993153	0	True				
ANR	8993635	ParameterType	i_ctx_t *		8993153	0					
ANR	8993636	Identifier	i_ctx_p		8993153	1					
ANR	8993637	Parameter	ref * * space	3433:54:109830:109840	8993153	1	True				
ANR	8993638	ParameterType	ref * *		8993153	0					
ANR	8993639	Identifier	space		8993153	1					
ANR	8993640	CFGEntryNode	ENTRY		8993153		True				
ANR	8993641	CFGExitNode	EXIT		8993153		True				
ANR	8993642	Symbol	code		8993153						
ANR	8993643	Symbol	gs_error_rangecheck		8993153						
ANR	8993644	Symbol	& tref		8993153						
ANR	8993645	Symbol	nameref		8993153						
ANR	8993646	Symbol	& sname		8993153						
ANR	8993647	Symbol	sepspace		8993153						
ANR	8993648	Symbol	space		8993153						
ANR	8993649	Symbol	name_from_string		8993153						
ANR	8993650	Symbol	strncmp		8993153						
ANR	8993651	Symbol	gs_error_typecheck		8993153						
ANR	8993652	Symbol	r_has_type		8993153						
ANR	8993653	Symbol	altspace		8993153						
ANR	8993654	Symbol	& altspace		8993153						
ANR	8993655	Symbol	t_name		8993153						
ANR	8993656	Symbol	r_size		8993153						
ANR	8993657	Symbol	sref . value . const_bytes		8993153						
ANR	8993658	Symbol	imemory		8993153						
ANR	8993659	Symbol	& nameref		8993153						
ANR	8993660	Symbol	array_get		8993153						
ANR	8993661	Symbol	tref		8993153						
ANR	8993662	Symbol	& sref		8993153						
ANR	8993663	Symbol	t_string		8993153						
ANR	8993664	Symbol	sref . value		8993153						
ANR	8993665	Symbol	sref		8993153						
ANR	8993666	Symbol	i_ctx_p		8993153						
ANR	8993667	Symbol	sname		8993153						
ANR	8993668	Symbol	* space		8993153						
ANR	8993669	Symbol	r_is_array		8993153						
ANR	8993670	Function	separationalternatespace	3502:0:112170:112426							
ANR	8993671	FunctionDef	"separationalternatespace (i_ctx_t * i_ctx_p , ref * sepspace , ref * * r , int * CIESubst)"		8993670	0					
ANR	8993672	CompoundStatement		3503:0:112264:112426	8993670	0					
ANR	8993673	IdentifierDeclStatement	ref tref ;	3504:4:112270:112278	8993670	0	True				
ANR	8993674	IdentifierDecl	tref		8993670	0					
ANR	8993675	IdentifierDeclType	ref		8993670	0					
ANR	8993676	Identifier	tref		8993670	1					
ANR	8993677	IdentifierDeclStatement	int code ;	3505:4:112284:112292	8993670	1	True				
ANR	8993678	IdentifierDecl	code		8993670	0					
ANR	8993679	IdentifierDeclType	int		8993670	0					
ANR	8993680	Identifier	code		8993670	1					
ANR	8993681	ExpressionStatement	"code = array_get ( imemory , sepspace , 2 , & tref )"	3507:4:112299:112344	8993670	2	True				
ANR	8993682	AssignmentExpression	"code = array_get ( imemory , sepspace , 2 , & tref )"		8993670	0		=			
ANR	8993683	Identifier	code		8993670	0					
ANR	8993684	CallExpression	"array_get ( imemory , sepspace , 2 , & tref )"		8993670	1					
ANR	8993685	Callee	array_get		8993670	0					
ANR	8993686	Identifier	array_get		8993670	0					
ANR	8993687	ArgumentList	imemory		8993670	1					
ANR	8993688	Argument	imemory		8993670	0					
ANR	8993689	Identifier	imemory		8993670	0					
ANR	8993690	Argument	sepspace		8993670	1					
ANR	8993691	Identifier	sepspace		8993670	0					
ANR	8993692	Argument	2		8993670	2					
ANR	8993693	PrimaryExpression	2		8993670	0					
ANR	8993694	Argument	& tref		8993670	3					
ANR	8993695	UnaryOperationExpression	& tref		8993670	0					
ANR	8993696	UnaryOperator	&		8993670	0					
ANR	8993697	Identifier	tref		8993670	1					
ANR	8993698	IfStatement	if ( code < 0 )		8993670	3					
ANR	8993699	Condition	code < 0	3508:8:112354:112361	8993670	0	True				
ANR	8993700	RelationalExpression	code < 0		8993670	0		<			
ANR	8993701	Identifier	code		8993670	0					
ANR	8993702	PrimaryExpression	0		8993670	1					
ANR	8993703	ReturnStatement	return code ;	3509:8:112372:112383	8993670	1	True				
ANR	8993704	Identifier	code		8993670	0					
ANR	8993705	ExpressionStatement	"ref_assign ( * r , & tref )"	3510:4:112389:112410	8993670	4	True				
ANR	8993706	CallExpression	"ref_assign ( * r , & tref )"		8993670	0					
ANR	8993707	Callee	ref_assign		8993670	0					
ANR	8993708	Identifier	ref_assign		8993670	0					
ANR	8993709	ArgumentList	* r		8993670	1					
ANR	8993710	Argument	* r		8993670	0					
ANR	8993711	UnaryOperationExpression	* r		8993670	0					
ANR	8993712	UnaryOperator	*		8993670	0					
ANR	8993713	Identifier	r		8993670	1					
ANR	8993714	Argument	& tref		8993670	1					
ANR	8993715	UnaryOperationExpression	& tref		8993670	0					
ANR	8993716	UnaryOperator	&		8993670	0					
ANR	8993717	Identifier	tref		8993670	1					
ANR	8993718	ReturnStatement	return 0 ;	3511:4:112416:112424	8993670	5	True				
ANR	8993719	PrimaryExpression	0		8993670	0					
ANR	8993720	ReturnType	static int		8993670	1					
ANR	8993721	Identifier	separationalternatespace		8993670	2					
ANR	8993722	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , ref * * r , int * CIESubst"		8993670	3					
ANR	8993723	Parameter	i_ctx_t * i_ctx_p	3502:36:112206:112222	8993670	0	True				
ANR	8993724	ParameterType	i_ctx_t *		8993670	0					
ANR	8993725	Identifier	i_ctx_p		8993670	1					
ANR	8993726	Parameter	ref * sepspace	3502:55:112225:112237	8993670	1	True				
ANR	8993727	ParameterType	ref *		8993670	0					
ANR	8993728	Identifier	sepspace		8993670	1					
ANR	8993729	Parameter	ref * * r	3502:70:112240:112246	8993670	2	True				
ANR	8993730	ParameterType	ref * *		8993670	0					
ANR	8993731	Identifier	r		8993670	1					
ANR	8993732	Parameter	int * CIESubst	3502:79:112249:112261	8993670	3	True				
ANR	8993733	ParameterType	int *		8993670	0					
ANR	8993734	Identifier	CIESubst		8993670	1					
ANR	8993735	CFGEntryNode	ENTRY		8993670		True				
ANR	8993736	CFGExitNode	EXIT		8993670		True				
ANR	8993737	Symbol	r		8993670						
ANR	8993738	Symbol	code		8993670						
ANR	8993739	Symbol	i_ctx_p		8993670						
ANR	8993740	Symbol	array_get		8993670						
ANR	8993741	Symbol	& tref		8993670						
ANR	8993742	Symbol	tref		8993670						
ANR	8993743	Symbol	imemory		8993670						
ANR	8993744	Symbol	sepspace		8993670						
ANR	8993745	Symbol	* r		8993670						
ANR	8993746	Symbol	CIESubst		8993670						
ANR	8993747	Function	sepdomain	3513:0:112428:112540							
ANR	8993748	FunctionDef	"sepdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8993747	0					
ANR	8993749	CompoundStatement		3514:0:112492:112540	8993747	0					
ANR	8993750	ExpressionStatement	ptr [ 0 ] = 0	3515:4:112498:112508	8993747	0	True				
ANR	8993751	AssignmentExpression	ptr [ 0 ] = 0		8993747	0		=			
ANR	8993752	ArrayIndexing	ptr [ 0 ]		8993747	0					
ANR	8993753	Identifier	ptr		8993747	0					
ANR	8993754	PrimaryExpression	0		8993747	1					
ANR	8993755	PrimaryExpression	0		8993747	1					
ANR	8993756	ExpressionStatement	ptr [ 1 ] = 1	3516:4:112514:112524	8993747	1	True				
ANR	8993757	AssignmentExpression	ptr [ 1 ] = 1		8993747	0		=			
ANR	8993758	ArrayIndexing	ptr [ 1 ]		8993747	0					
ANR	8993759	Identifier	ptr		8993747	0					
ANR	8993760	PrimaryExpression	1		8993747	1					
ANR	8993761	PrimaryExpression	1		8993747	1					
ANR	8993762	ReturnStatement	return 0 ;	3517:4:112530:112538	8993747	2	True				
ANR	8993763	PrimaryExpression	0		8993747	0					
ANR	8993764	ReturnType	static int		8993747	1					
ANR	8993765	Identifier	sepdomain		8993747	2					
ANR	8993766	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8993747	3					
ANR	8993767	Parameter	i_ctx_t * i_ctx_p	3513:21:112449:112465	8993747	0	True				
ANR	8993768	ParameterType	i_ctx_t *		8993747	0					
ANR	8993769	Identifier	i_ctx_p		8993747	1					
ANR	8993770	Parameter	ref * space	3513:40:112468:112477	8993747	1	True				
ANR	8993771	ParameterType	ref *		8993747	0					
ANR	8993772	Identifier	space		8993747	1					
ANR	8993773	Parameter	float * ptr	3513:52:112480:112489	8993747	2	True				
ANR	8993774	ParameterType	float *		8993747	0					
ANR	8993775	Identifier	ptr		8993747	1					
ANR	8993776	CFGEntryNode	ENTRY		8993747		True				
ANR	8993777	CFGExitNode	EXIT		8993747		True				
ANR	8993778	Symbol	i_ctx_p		8993747						
ANR	8993779	Symbol	* ptr		8993747						
ANR	8993780	Symbol	space		8993747						
ANR	8993781	Symbol	ptr		8993747						
ANR	8993782	Function	seprange	3519:0:112542:112653							
ANR	8993783	FunctionDef	"seprange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8993782	0					
ANR	8993784	CompoundStatement		3520:0:112605:112653	8993782	0					
ANR	8993785	ExpressionStatement	ptr [ 0 ] = 0	3521:4:112611:112621	8993782	0	True				
ANR	8993786	AssignmentExpression	ptr [ 0 ] = 0		8993782	0		=			
ANR	8993787	ArrayIndexing	ptr [ 0 ]		8993782	0					
ANR	8993788	Identifier	ptr		8993782	0					
ANR	8993789	PrimaryExpression	0		8993782	1					
ANR	8993790	PrimaryExpression	0		8993782	1					
ANR	8993791	ExpressionStatement	ptr [ 1 ] = 1	3522:4:112627:112637	8993782	1	True				
ANR	8993792	AssignmentExpression	ptr [ 1 ] = 1		8993782	0		=			
ANR	8993793	ArrayIndexing	ptr [ 1 ]		8993782	0					
ANR	8993794	Identifier	ptr		8993782	0					
ANR	8993795	PrimaryExpression	1		8993782	1					
ANR	8993796	PrimaryExpression	1		8993782	1					
ANR	8993797	ReturnStatement	return 0 ;	3523:4:112643:112651	8993782	2	True				
ANR	8993798	PrimaryExpression	0		8993782	0					
ANR	8993799	ReturnType	static int		8993782	1					
ANR	8993800	Identifier	seprange		8993782	2					
ANR	8993801	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8993782	3					
ANR	8993802	Parameter	i_ctx_t * i_ctx_p	3519:20:112562:112578	8993782	0	True				
ANR	8993803	ParameterType	i_ctx_t *		8993782	0					
ANR	8993804	Identifier	i_ctx_p		8993782	1					
ANR	8993805	Parameter	ref * space	3519:39:112581:112590	8993782	1	True				
ANR	8993806	ParameterType	ref *		8993782	0					
ANR	8993807	Identifier	space		8993782	1					
ANR	8993808	Parameter	float * ptr	3519:51:112593:112602	8993782	2	True				
ANR	8993809	ParameterType	float *		8993782	0					
ANR	8993810	Identifier	ptr		8993782	1					
ANR	8993811	CFGEntryNode	ENTRY		8993782		True				
ANR	8993812	CFGExitNode	EXIT		8993782		True				
ANR	8993813	Symbol	i_ctx_p		8993782						
ANR	8993814	Symbol	* ptr		8993782						
ANR	8993815	Symbol	space		8993782						
ANR	8993816	Symbol	ptr		8993782						
ANR	8993817	Function	septransform	3525:0:112655:114219							
ANR	8993818	FunctionDef	"septransform (i_ctx_t * i_ctx_p , ref * sepspace , int * usealternate , int * stage , int * stack_depth)"		8993817	0					
ANR	8993819	CompoundStatement		3526:0:112761:114219	8993817	0					
ANR	8993820	IdentifierDeclStatement	gx_device * dev = igs -> device ;	3527:4:112767:112796	8993817	0	True				
ANR	8993821	IdentifierDecl	* dev = igs -> device		8993817	0					
ANR	8993822	IdentifierDeclType	gx_device *		8993817	0					
ANR	8993823	Identifier	dev		8993817	1					
ANR	8993824	AssignmentExpression	* dev = igs -> device		8993817	2		=			
ANR	8993825	Identifier	dev		8993817	0					
ANR	8993826	PtrMemberAccess	igs -> device		8993817	1					
ANR	8993827	Identifier	igs		8993817	0					
ANR	8993828	Identifier	device		8993817	1					
ANR	8993829	IdentifierDeclStatement	"ref sname , proc ;"	3528:4:112802:112817	8993817	1	True				
ANR	8993830	IdentifierDecl	sname		8993817	0					
ANR	8993831	IdentifierDeclType	ref		8993817	0					
ANR	8993832	Identifier	sname		8993817	1					
ANR	8993833	IdentifierDecl	proc		8993817	1					
ANR	8993834	IdentifierDeclType	ref		8993817	0					
ANR	8993835	Identifier	proc		8993817	1					
ANR	8993836	IdentifierDeclStatement	"int code , colorant_number ;"	3529:4:112823:112848	8993817	2	True				
ANR	8993837	IdentifierDecl	code		8993817	0					
ANR	8993838	IdentifierDeclType	int		8993817	0					
ANR	8993839	Identifier	code		8993817	1					
ANR	8993840	IdentifierDecl	colorant_number		8993817	1					
ANR	8993841	IdentifierDeclType	int		8993817	0					
ANR	8993842	Identifier	colorant_number		8993817	1					
ANR	8993843	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3531:4:112855:112901	8993817	3	True				
ANR	8993844	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		8993817	0		=			
ANR	8993845	Identifier	code		8993817	0					
ANR	8993846	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		8993817	1					
ANR	8993847	Callee	array_get		8993817	0					
ANR	8993848	Identifier	array_get		8993817	0					
ANR	8993849	ArgumentList	imemory		8993817	1					
ANR	8993850	Argument	imemory		8993817	0					
ANR	8993851	Identifier	imemory		8993817	0					
ANR	8993852	Argument	sepspace		8993817	1					
ANR	8993853	Identifier	sepspace		8993817	0					
ANR	8993854	Argument	1		8993817	2					
ANR	8993855	PrimaryExpression	1		8993817	0					
ANR	8993856	Argument	& sname		8993817	3					
ANR	8993857	UnaryOperationExpression	& sname		8993817	0					
ANR	8993858	UnaryOperator	&		8993817	0					
ANR	8993859	Identifier	sname		8993817	1					
ANR	8993860	IfStatement	if ( code < 0 )		8993817	4					
ANR	8993861	Condition	code < 0	3532:8:112911:112918	8993817	0	True				
ANR	8993862	RelationalExpression	code < 0		8993817	0		<			
ANR	8993863	Identifier	code		8993817	0					
ANR	8993864	PrimaryExpression	0		8993817	1					
ANR	8993865	ReturnStatement	return code ;	3533:8:112929:112940	8993817	1	True				
ANR	8993866	Identifier	code		8993817	0					
ANR	8993867	IfStatement	"if ( r_has_type ( & sname , t_name ) )"		8993817	5					
ANR	8993868	Condition	"r_has_type ( & sname , t_name )"	3534:8:112950:112975	8993817	0	True				
ANR	8993869	CallExpression	"r_has_type ( & sname , t_name )"		8993817	0					
ANR	8993870	Callee	r_has_type		8993817	0					
ANR	8993871	Identifier	r_has_type		8993817	0					
ANR	8993872	ArgumentList	& sname		8993817	1					
ANR	8993873	Argument	& sname		8993817	0					
ANR	8993874	UnaryOperationExpression	& sname		8993817	0					
ANR	8993875	UnaryOperator	&		8993817	0					
ANR	8993876	Identifier	sname		8993817	1					
ANR	8993877	Argument	t_name		8993817	1					
ANR	8993878	Identifier	t_name		8993817	0					
ANR	8993879	CompoundStatement		9:36:216:216	8993817	1					
ANR	8993880	ExpressionStatement	"name_string_ref ( imemory , & sname , & sname )"	3535:8:112988:113028	8993817	0	True				
ANR	8993881	CallExpression	"name_string_ref ( imemory , & sname , & sname )"		8993817	0					
ANR	8993882	Callee	name_string_ref		8993817	0					
ANR	8993883	Identifier	name_string_ref		8993817	0					
ANR	8993884	ArgumentList	imemory		8993817	1					
ANR	8993885	Argument	imemory		8993817	0					
ANR	8993886	Identifier	imemory		8993817	0					
ANR	8993887	Argument	& sname		8993817	1					
ANR	8993888	UnaryOperationExpression	& sname		8993817	0					
ANR	8993889	UnaryOperator	&		8993817	0					
ANR	8993890	Identifier	sname		8993817	1					
ANR	8993891	Argument	& sname		8993817	2					
ANR	8993892	UnaryOperationExpression	& sname		8993817	0					
ANR	8993893	UnaryOperator	&		8993817	0					
ANR	8993894	Identifier	sname		8993817	1					
ANR	8993895	IfStatement	"if ( r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		8993817	6					
ANR	8993896	Condition	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	3539:8:113116:113214	8993817	0	True				
ANR	8993897	AndExpression	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8993817	0		&&			
ANR	8993898	EqualityExpression	r_size ( & sname ) == 3		8993817	0		==			
ANR	8993899	CallExpression	r_size ( & sname )		8993817	0					
ANR	8993900	Callee	r_size		8993817	0					
ANR	8993901	Identifier	r_size		8993817	0					
ANR	8993902	ArgumentList	& sname		8993817	1					
ANR	8993903	Argument	& sname		8993817	0					
ANR	8993904	UnaryOperationExpression	& sname		8993817	0					
ANR	8993905	UnaryOperator	&		8993817	0					
ANR	8993906	Identifier	sname		8993817	1					
ANR	8993907	PrimaryExpression	3		8993817	1					
ANR	8993908	EqualityExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8993817	1		==			
ANR	8993909	CallExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		8993817	0					
ANR	8993910	Callee	strncmp		8993817	0					
ANR	8993911	Identifier	strncmp		8993817	0					
ANR	8993912	ArgumentList	"""All"""		8993817	1					
ANR	8993913	Argument	"""All"""		8993817	0					
ANR	8993914	PrimaryExpression	"""All"""		8993817	0					
ANR	8993915	Argument	( const char * ) sname . value . bytes		8993817	1					
ANR	8993916	CastExpression	( const char * ) sname . value . bytes		8993817	0					
ANR	8993917	CastTarget	const char *		8993817	0					
ANR	8993918	MemberAccess	sname . value . bytes		8993817	1					
ANR	8993919	MemberAccess	sname . value		8993817	0					
ANR	8993920	Identifier	sname		8993817	0					
ANR	8993921	Identifier	value		8993817	1					
ANR	8993922	Identifier	bytes		8993817	1					
ANR	8993923	Argument	r_size ( & sname )		8993817	2					
ANR	8993924	CallExpression	r_size ( & sname )		8993817	0					
ANR	8993925	Callee	r_size		8993817	0					
ANR	8993926	Identifier	r_size		8993817	0					
ANR	8993927	ArgumentList	& sname		8993817	1					
ANR	8993928	Argument	& sname		8993817	0					
ANR	8993929	UnaryOperationExpression	& sname		8993817	0					
ANR	8993930	UnaryOperator	&		8993817	0					
ANR	8993931	Identifier	sname		8993817	1					
ANR	8993932	PrimaryExpression	0		8993817	1					
ANR	8993933	CompoundStatement		15:78:455:455	8993817	1					
ANR	8993934	ExpressionStatement	* usealternate = 0	3541:8:113227:113244	8993817	0	True				
ANR	8993935	AssignmentExpression	* usealternate = 0		8993817	0		=			
ANR	8993936	UnaryOperationExpression	* usealternate		8993817	0					
ANR	8993937	UnaryOperator	*		8993817	0					
ANR	8993938	Identifier	usealternate		8993817	1					
ANR	8993939	PrimaryExpression	0		8993817	1					
ANR	8993940	ReturnStatement	return 0 ;	3542:8:113254:113262	8993817	1	True				
ANR	8993941	PrimaryExpression	0		8993817	0					
ANR	8993942	IfStatement	"if ( r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		8993817	7					
ANR	8993943	Condition	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	3544:8:113278:113377	8993817	0	True				
ANR	8993944	AndExpression	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8993817	0		&&			
ANR	8993945	EqualityExpression	r_size ( & sname ) == 4		8993817	0		==			
ANR	8993946	CallExpression	r_size ( & sname )		8993817	0					
ANR	8993947	Callee	r_size		8993817	0					
ANR	8993948	Identifier	r_size		8993817	0					
ANR	8993949	ArgumentList	& sname		8993817	1					
ANR	8993950	Argument	& sname		8993817	0					
ANR	8993951	UnaryOperationExpression	& sname		8993817	0					
ANR	8993952	UnaryOperator	&		8993817	0					
ANR	8993953	Identifier	sname		8993817	1					
ANR	8993954	PrimaryExpression	4		8993817	1					
ANR	8993955	EqualityExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8993817	1		==			
ANR	8993956	CallExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		8993817	0					
ANR	8993957	Callee	strncmp		8993817	0					
ANR	8993958	Identifier	strncmp		8993817	0					
ANR	8993959	ArgumentList	"""None"""		8993817	1					
ANR	8993960	Argument	"""None"""		8993817	0					
ANR	8993961	PrimaryExpression	"""None"""		8993817	0					
ANR	8993962	Argument	( const char * ) sname . value . bytes		8993817	1					
ANR	8993963	CastExpression	( const char * ) sname . value . bytes		8993817	0					
ANR	8993964	CastTarget	const char *		8993817	0					
ANR	8993965	MemberAccess	sname . value . bytes		8993817	1					
ANR	8993966	MemberAccess	sname . value		8993817	0					
ANR	8993967	Identifier	sname		8993817	0					
ANR	8993968	Identifier	value		8993817	1					
ANR	8993969	Identifier	bytes		8993817	1					
ANR	8993970	Argument	r_size ( & sname )		8993817	2					
ANR	8993971	CallExpression	r_size ( & sname )		8993817	0					
ANR	8993972	Callee	r_size		8993817	0					
ANR	8993973	Identifier	r_size		8993817	0					
ANR	8993974	ArgumentList	& sname		8993817	1					
ANR	8993975	Argument	& sname		8993817	0					
ANR	8993976	UnaryOperationExpression	& sname		8993817	0					
ANR	8993977	UnaryOperator	&		8993817	0					
ANR	8993978	Identifier	sname		8993817	1					
ANR	8993979	PrimaryExpression	0		8993817	1					
ANR	8993980	CompoundStatement		20:79:618:618	8993817	1					
ANR	8993981	ExpressionStatement	* usealternate = 0	3546:8:113390:113407	8993817	0	True				
ANR	8993982	AssignmentExpression	* usealternate = 0		8993817	0		=			
ANR	8993983	UnaryOperationExpression	* usealternate		8993817	0					
ANR	8993984	UnaryOperator	*		8993817	0					
ANR	8993985	Identifier	usealternate		8993817	1					
ANR	8993986	PrimaryExpression	0		8993817	1					
ANR	8993987	ReturnStatement	return 0 ;	3547:8:113417:113425	8993817	1	True				
ANR	8993988	PrimaryExpression	0		8993817	0					
ANR	8993989	ExpressionStatement	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"	3555:4:113681:113825	8993817	8	True				
ANR	8993990	AssignmentExpression	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		8993817	0		=			
ANR	8993991	Identifier	colorant_number		8993817	0					
ANR	8993992	CallExpression	"( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		8993817	1					
ANR	8993993	Callee	"* dev_proc ( dev , get_color_comp_index )"		8993817	0					
ANR	8993994	UnaryOperationExpression	"* dev_proc ( dev , get_color_comp_index )"		8993817	0					
ANR	8993995	UnaryOperator	*		8993817	0					
ANR	8993996	CallExpression	"dev_proc ( dev , get_color_comp_index )"		8993817	1					
ANR	8993997	Callee	dev_proc		8993817	0					
ANR	8993998	Identifier	dev_proc		8993817	0					
ANR	8993999	ArgumentList	dev		8993817	1					
ANR	8994000	Argument	dev		8993817	0					
ANR	8994001	Identifier	dev		8993817	0					
ANR	8994002	Argument	get_color_comp_index		8993817	1					
ANR	8994003	Identifier	get_color_comp_index		8993817	0					
ANR	8994004	ArgumentList	dev		8993817	1					
ANR	8994005	Argument	dev		8993817	0					
ANR	8994006	Identifier	dev		8993817	0					
ANR	8994007	Argument	( const char * ) sname . value . bytes		8993817	1					
ANR	8994008	CastExpression	( const char * ) sname . value . bytes		8993817	0					
ANR	8994009	CastTarget	const char *		8993817	0					
ANR	8994010	MemberAccess	sname . value . bytes		8993817	1					
ANR	8994011	MemberAccess	sname . value		8993817	0					
ANR	8994012	Identifier	sname		8993817	0					
ANR	8994013	Identifier	value		8993817	1					
ANR	8994014	Identifier	bytes		8993817	1					
ANR	8994015	Argument	r_size ( & sname )		8993817	2					
ANR	8994016	CallExpression	r_size ( & sname )		8993817	0					
ANR	8994017	Callee	r_size		8993817	0					
ANR	8994018	Identifier	r_size		8993817	0					
ANR	8994019	ArgumentList	& sname		8993817	1					
ANR	8994020	Argument	& sname		8993817	0					
ANR	8994021	UnaryOperationExpression	& sname		8993817	0					
ANR	8994022	UnaryOperator	&		8993817	0					
ANR	8994023	Identifier	sname		8993817	1					
ANR	8994024	Argument	SEPARATION_NAME		8993817	3					
ANR	8994025	Identifier	SEPARATION_NAME		8993817	0					
ANR	8994026	IfStatement	if ( colorant_number >= 0 )		8993817	9					
ANR	8994027	Condition	colorant_number >= 0	3557:8:113835:113854	8993817	0	True				
ANR	8994028	RelationalExpression	colorant_number >= 0		8993817	0		>=			
ANR	8994029	Identifier	colorant_number		8993817	0					
ANR	8994030	PrimaryExpression	0		8993817	1					
ANR	8994031	CompoundStatement		32:30:1095:1095	8993817	1					
ANR	8994032	ExpressionStatement	* usealternate = 0	3558:8:113897:113914	8993817	0	True				
ANR	8994033	AssignmentExpression	* usealternate = 0		8993817	0		=			
ANR	8994034	UnaryOperationExpression	* usealternate		8993817	0					
ANR	8994035	UnaryOperator	*		8993817	0					
ANR	8994036	Identifier	usealternate		8993817	1					
ANR	8994037	PrimaryExpression	0		8993817	1					
ANR	8994038	ElseStatement	else		8993817	0					
ANR	8994039	ExpressionStatement	* usealternate = 1	3560:8:113935:113952	8993817	0	True				
ANR	8994040	AssignmentExpression	* usealternate = 1		8993817	0		=			
ANR	8994041	UnaryOperationExpression	* usealternate		8993817	0					
ANR	8994042	UnaryOperator	*		8993817	0					
ANR	8994043	Identifier	usealternate		8993817	1					
ANR	8994044	PrimaryExpression	1		8993817	1					
ANR	8994045	IfStatement	if ( * usealternate && * stage == 0 )		8993817	10					
ANR	8994046	Condition	* usealternate && * stage == 0	3562:8:113963:113990	8993817	0	True				
ANR	8994047	AndExpression	* usealternate && * stage == 0		8993817	0		&&			
ANR	8994048	UnaryOperationExpression	* usealternate		8993817	0					
ANR	8994049	UnaryOperator	*		8993817	0					
ANR	8994050	Identifier	usealternate		8993817	1					
ANR	8994051	EqualityExpression	* stage == 0		8993817	1		==			
ANR	8994052	UnaryOperationExpression	* stage		8993817	0					
ANR	8994053	UnaryOperator	*		8993817	0					
ANR	8994054	Identifier	stage		8993817	1					
ANR	8994055	PrimaryExpression	0		8993817	1					
ANR	8994056	CompoundStatement		37:38:1231:1231	8993817	1					
ANR	8994057	ExpressionStatement	( * stage ) ++	3563:8:114003:114013	8993817	0	True				
ANR	8994058	PostIncDecOperationExpression	( * stage ) ++		8993817	0					
ANR	8994059	UnaryOperationExpression	* stage		8993817	0					
ANR	8994060	UnaryOperator	*		8993817	0					
ANR	8994061	Identifier	stage		8993817	1					
ANR	8994062	IncDec	++		8993817	1					
ANR	8994063	ExpressionStatement	esp ++	3564:8:114023:114028	8993817	1	True				
ANR	8994064	PostIncDecOperationExpression	esp ++		8993817	0					
ANR	8994065	Identifier	esp		8993817	0					
ANR	8994066	IncDec	++		8993817	1					
ANR	8994067	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3565:8:114038:114083	8993817	2	True				
ANR	8994068	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		8993817	0		=			
ANR	8994069	Identifier	code		8993817	0					
ANR	8994070	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		8993817	1					
ANR	8994071	Callee	array_get		8993817	0					
ANR	8994072	Identifier	array_get		8993817	0					
ANR	8994073	ArgumentList	imemory		8993817	1					
ANR	8994074	Argument	imemory		8993817	0					
ANR	8994075	Identifier	imemory		8993817	0					
ANR	8994076	Argument	sepspace		8993817	1					
ANR	8994077	Identifier	sepspace		8993817	0					
ANR	8994078	Argument	3		8993817	2					
ANR	8994079	PrimaryExpression	3		8993817	0					
ANR	8994080	Argument	& proc		8993817	3					
ANR	8994081	UnaryOperationExpression	& proc		8993817	0					
ANR	8994082	UnaryOperator	&		8993817	0					
ANR	8994083	Identifier	proc		8993817	1					
ANR	8994084	IfStatement	if ( code < 0 )		8993817	3					
ANR	8994085	Condition	code < 0	3566:12:114097:114104	8993817	0	True				
ANR	8994086	RelationalExpression	code < 0		8993817	0		<			
ANR	8994087	Identifier	code		8993817	0					
ANR	8994088	PrimaryExpression	0		8993817	1					
ANR	8994089	ReturnStatement	return code ;	3567:12:114119:114130	8993817	1	True				
ANR	8994090	Identifier	code		8993817	0					
ANR	8994091	ExpressionStatement	* esp = proc	3568:8:114140:114151	8993817	4	True				
ANR	8994092	AssignmentExpression	* esp = proc		8993817	0		=			
ANR	8994093	UnaryOperationExpression	* esp		8993817	0					
ANR	8994094	UnaryOperator	*		8993817	0					
ANR	8994095	Identifier	esp		8993817	1					
ANR	8994096	Identifier	proc		8993817	1					
ANR	8994097	ReturnStatement	return o_push_estack ;	3569:8:114161:114181	8993817	5	True				
ANR	8994098	Identifier	o_push_estack		8993817	0					
ANR	8994099	ExpressionStatement	* stage = 0	3571:4:114193:114203	8993817	11	True				
ANR	8994100	AssignmentExpression	* stage = 0		8993817	0		=			
ANR	8994101	UnaryOperationExpression	* stage		8993817	0					
ANR	8994102	UnaryOperator	*		8993817	0					
ANR	8994103	Identifier	stage		8993817	1					
ANR	8994104	PrimaryExpression	0		8993817	1					
ANR	8994105	ReturnStatement	return 0 ;	3572:4:114209:114217	8993817	12	True				
ANR	8994106	PrimaryExpression	0		8993817	0					
ANR	8994107	ReturnType	static int		8993817	1					
ANR	8994108	Identifier	septransform		8993817	2					
ANR	8994109	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , int * usealternate , int * stage , int * stack_depth"		8993817	3					
ANR	8994110	Parameter	i_ctx_t * i_ctx_p	3525:24:112679:112694	8993817	0	True				
ANR	8994111	ParameterType	i_ctx_t *		8993817	0					
ANR	8994112	Identifier	i_ctx_p		8993817	1					
ANR	8994113	Parameter	ref * sepspace	3525:42:112697:112709	8993817	1	True				
ANR	8994114	ParameterType	ref *		8993817	0					
ANR	8994115	Identifier	sepspace		8993817	1					
ANR	8994116	Parameter	int * usealternate	3525:57:112712:112728	8993817	2	True				
ANR	8994117	ParameterType	int *		8993817	0					
ANR	8994118	Identifier	usealternate		8993817	1					
ANR	8994119	Parameter	int * stage	3525:76:112731:112740	8993817	3	True				
ANR	8994120	ParameterType	int *		8993817	0					
ANR	8994121	Identifier	stage		8993817	1					
ANR	8994122	Parameter	int * stack_depth	3525:88:112743:112758	8993817	4	True				
ANR	8994123	ParameterType	int *		8993817	0					
ANR	8994124	Identifier	stack_depth		8993817	1					
ANR	8994125	CFGEntryNode	ENTRY		8993817		True				
ANR	8994126	CFGExitNode	EXIT		8993817		True				
ANR	8994127	Symbol	* igs		8993817						
ANR	8994128	Symbol	stack_depth		8993817						
ANR	8994129	Symbol	code		8993817						
ANR	8994130	Symbol	esp		8993817						
ANR	8994131	Symbol	* dev_proc		8993817						
ANR	8994132	Symbol	& sname		8993817						
ANR	8994133	Symbol	sepspace		8993817						
ANR	8994134	Symbol	strncmp		8993817						
ANR	8994135	Symbol	r_has_type		8993817						
ANR	8994136	Symbol	* esp		8993817						
ANR	8994137	Symbol	dev		8993817						
ANR	8994138	Symbol	igs		8993817						
ANR	8994139	Symbol	t_name		8993817						
ANR	8994140	Symbol	dev_proc		8993817						
ANR	8994141	Symbol	r_size		8993817						
ANR	8994142	Symbol	imemory		8993817						
ANR	8994143	Symbol	& proc		8993817						
ANR	8994144	Symbol	o_push_estack		8993817						
ANR	8994145	Symbol	proc		8993817						
ANR	8994146	Symbol	get_color_comp_index		8993817						
ANR	8994147	Symbol	* stage		8993817						
ANR	8994148	Symbol	array_get		8993817						
ANR	8994149	Symbol	sname . value . bytes		8993817						
ANR	8994150	Symbol	usealternate		8993817						
ANR	8994151	Symbol	SEPARATION_NAME		8993817						
ANR	8994152	Symbol	colorant_number		8993817						
ANR	8994153	Symbol	stage		8993817						
ANR	8994154	Symbol	sname . value		8993817						
ANR	8994155	Symbol	* usealternate		8993817						
ANR	8994156	Symbol	i_ctx_p		8993817						
ANR	8994157	Symbol	sname		8993817						
ANR	8994158	Symbol	"* dev_proc ( dev , get_color_comp_index )"		8993817						
ANR	8994159	Symbol	igs -> device		8993817						
ANR	8994160	Function	sepbasecolor	3574:0:114221:115369							
ANR	8994161	FunctionDef	"sepbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8994160	0					
ANR	8994162	CompoundStatement		3575:0:114327:115369	8994160	0					
ANR	8994163	IdentifierDeclStatement	os_ptr op = osp ;	3576:4:114333:114348	8994160	0	True				
ANR	8994164	IdentifierDecl	op = osp		8994160	0					
ANR	8994165	IdentifierDeclType	os_ptr		8994160	0					
ANR	8994166	Identifier	op		8994160	1					
ANR	8994167	AssignmentExpression	op = osp		8994160	2		=			
ANR	8994168	Identifier	osp		8994160	0					
ANR	8994169	Identifier	osp		8994160	1					
ANR	8994170	IdentifierDeclStatement	"int use , code ;"	3577:4:114387:114400	8994160	1	True				
ANR	8994171	IdentifierDecl	use		8994160	0					
ANR	8994172	IdentifierDeclType	int		8994160	0					
ANR	8994173	Identifier	use		8994160	1					
ANR	8994174	IdentifierDecl	code		8994160	1					
ANR	8994175	IdentifierDeclType	int		8994160	0					
ANR	8994176	Identifier	code		8994160	1					
ANR	8994177	ExpressionStatement	"code = septransform ( i_ctx_p , space , & use , stage , stack_depth )"	3579:8:114411:114472	8994160	2	True				
ANR	8994178	AssignmentExpression	"code = septransform ( i_ctx_p , space , & use , stage , stack_depth )"		8994160	0		=			
ANR	8994179	Identifier	code		8994160	0					
ANR	8994180	CallExpression	"septransform ( i_ctx_p , space , & use , stage , stack_depth )"		8994160	1					
ANR	8994181	Callee	septransform		8994160	0					
ANR	8994182	Identifier	septransform		8994160	0					
ANR	8994183	ArgumentList	i_ctx_p		8994160	1					
ANR	8994184	Argument	i_ctx_p		8994160	0					
ANR	8994185	Identifier	i_ctx_p		8994160	0					
ANR	8994186	Argument	space		8994160	1					
ANR	8994187	Identifier	space		8994160	0					
ANR	8994188	Argument	& use		8994160	2					
ANR	8994189	UnaryOperationExpression	& use		8994160	0					
ANR	8994190	UnaryOperator	&		8994160	0					
ANR	8994191	Identifier	use		8994160	1					
ANR	8994192	Argument	stage		8994160	3					
ANR	8994193	Identifier	stage		8994160	0					
ANR	8994194	Argument	stack_depth		8994160	4					
ANR	8994195	Identifier	stack_depth		8994160	0					
ANR	8994196	IfStatement	if ( code != 0 )		8994160	3					
ANR	8994197	Condition	code != 0	3580:12:114486:114494	8994160	0	True				
ANR	8994198	EqualityExpression	code != 0		8994160	0		!=			
ANR	8994199	Identifier	code		8994160	0					
ANR	8994200	PrimaryExpression	0		8994160	1					
ANR	8994201	ReturnStatement	return code ;	3581:12:114509:114520	8994160	1	True				
ANR	8994202	Identifier	code		8994160	0					
ANR	8994203	IfStatement	if ( ! use )		8994160	4					
ANR	8994204	Condition	! use	3582:12:114534:114537	8994160	0	True				
ANR	8994205	UnaryOperationExpression	! use		8994160	0					
ANR	8994206	UnaryOperator	!		8994160	0					
ANR	8994207	Identifier	use		8994160	1					
ANR	8994208	CompoundStatement		8:18:212:212	8994160	1					
ANR	8994209	ExpressionStatement	* stage = 0	3583:12:114554:114564	8994160	0	True				
ANR	8994210	AssignmentExpression	* stage = 0		8994160	0		=			
ANR	8994211	UnaryOperationExpression	* stage		8994160	0					
ANR	8994212	UnaryOperator	*		8994160	0					
ANR	8994213	Identifier	stage		8994160	1					
ANR	8994214	PrimaryExpression	0		8994160	1					
ANR	8994215	ExpressionStatement	* cont = 0	3584:12:114578:114587	8994160	1	True				
ANR	8994216	AssignmentExpression	* cont = 0		8994160	0		=			
ANR	8994217	UnaryOperationExpression	* cont		8994160	0					
ANR	8994218	UnaryOperator	*		8994160	0					
ANR	8994219	Identifier	cont		8994160	1					
ANR	8994220	PrimaryExpression	0		8994160	1					
ANR	8994221	ExpressionStatement	pop ( 1 )	3585:12:114601:114607	8994160	2	True				
ANR	8994222	CallExpression	pop ( 1 )		8994160	0					
ANR	8994223	Callee	pop		8994160	0					
ANR	8994224	Identifier	pop		8994160	0					
ANR	8994225	ArgumentList	1		8994160	1					
ANR	8994226	Argument	1		8994160	0					
ANR	8994227	PrimaryExpression	1		8994160	0					
ANR	8994228	ExpressionStatement	op = osp	3586:12:114621:114629	8994160	3	True				
ANR	8994229	AssignmentExpression	op = osp		8994160	0		=			
ANR	8994230	Identifier	op		8994160	0					
ANR	8994231	Identifier	osp		8994160	1					
ANR	8994232	SwitchStatement	switch ( base )		8994160	4					
ANR	8994233	Condition	base	3587:19:114650:114653	8994160	0	True				
ANR	8994234	Identifier	base		8994160	0					
ANR	8994235	CompoundStatement		13:25:328:328	8994160	1					
ANR	8994236	Label	case 0 :	3588:16:114674:114680	8994160	0	True				
ANR	8994237	ExpressionStatement	push ( 1 )	3589:20:114702:114709	8994160	1	True				
ANR	8994238	CallExpression	push ( 1 )		8994160	0					
ANR	8994239	Callee	push		8994160	0					
ANR	8994240	Identifier	push		8994160	0					
ANR	8994241	ArgumentList	1		8994160	1					
ANR	8994242	Argument	1		8994160	0					
ANR	8994243	PrimaryExpression	1		8994160	0					
ANR	8994244	ExpressionStatement	"make_real ( op , 0.0 )"	3590:20:114731:114749	8994160	2	True				
ANR	8994245	CallExpression	"make_real ( op , 0.0 )"		8994160	0					
ANR	8994246	Callee	make_real		8994160	0					
ANR	8994247	Identifier	make_real		8994160	0					
ANR	8994248	ArgumentList	op		8994160	1					
ANR	8994249	Argument	op		8994160	0					
ANR	8994250	Identifier	op		8994160	0					
ANR	8994251	Argument	0.0		8994160	1					
ANR	8994252	PrimaryExpression	0.0		8994160	0					
ANR	8994253	BreakStatement	break ;	3591:20:114771:114776	8994160	3	True				
ANR	8994254	Label	case 1 :	3592:16:114794:114800	8994160	4	True				
ANR	8994255	Label	case 2 :	3593:16:114818:114824	8994160	5	True				
ANR	8994256	ExpressionStatement	push ( 3 )	3594:20:114846:114853	8994160	6	True				
ANR	8994257	CallExpression	push ( 3 )		8994160	0					
ANR	8994258	Callee	push		8994160	0					
ANR	8994259	Identifier	push		8994160	0					
ANR	8994260	ArgumentList	3		8994160	1					
ANR	8994261	Argument	3		8994160	0					
ANR	8994262	PrimaryExpression	3		8994160	0					
ANR	8994263	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	3595:20:114875:114898	8994160	7	True				
ANR	8994264	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		8994160	0					
ANR	8994265	Callee	make_real		8994160	0					
ANR	8994266	Identifier	make_real		8994160	0					
ANR	8994267	ArgumentList	& op [ - 2 ]		8994160	1					
ANR	8994268	Argument	& op [ - 2 ]		8994160	0					
ANR	8994269	UnaryOperationExpression	& op [ - 2 ]		8994160	0					
ANR	8994270	UnaryOperator	&		8994160	0					
ANR	8994271	ArrayIndexing	op [ - 2 ]		8994160	1					
ANR	8994272	Identifier	op		8994160	0					
ANR	8994273	UnaryOperationExpression	- 2		8994160	1					
ANR	8994274	UnaryOperator	-		8994160	0					
ANR	8994275	PrimaryExpression	2		8994160	1					
ANR	8994276	Argument	0.0		8994160	1					
ANR	8994277	PrimaryExpression	0.0		8994160	0					
ANR	8994278	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	3596:20:114920:114943	8994160	8	True				
ANR	8994279	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		8994160	0					
ANR	8994280	Callee	make_real		8994160	0					
ANR	8994281	Identifier	make_real		8994160	0					
ANR	8994282	ArgumentList	& op [ - 1 ]		8994160	1					
ANR	8994283	Argument	& op [ - 1 ]		8994160	0					
ANR	8994284	UnaryOperationExpression	& op [ - 1 ]		8994160	0					
ANR	8994285	UnaryOperator	&		8994160	0					
ANR	8994286	ArrayIndexing	op [ - 1 ]		8994160	1					
ANR	8994287	Identifier	op		8994160	0					
ANR	8994288	UnaryOperationExpression	- 1		8994160	1					
ANR	8994289	UnaryOperator	-		8994160	0					
ANR	8994290	PrimaryExpression	1		8994160	1					
ANR	8994291	Argument	0.0		8994160	1					
ANR	8994292	PrimaryExpression	0.0		8994160	0					
ANR	8994293	ExpressionStatement	"make_real ( op , 0.0 )"	3597:20:114965:114983	8994160	9	True				
ANR	8994294	CallExpression	"make_real ( op , 0.0 )"		8994160	0					
ANR	8994295	Callee	make_real		8994160	0					
ANR	8994296	Identifier	make_real		8994160	0					
ANR	8994297	ArgumentList	op		8994160	1					
ANR	8994298	Argument	op		8994160	0					
ANR	8994299	Identifier	op		8994160	0					
ANR	8994300	Argument	0.0		8994160	1					
ANR	8994301	PrimaryExpression	0.0		8994160	0					
ANR	8994302	BreakStatement	break ;	3598:20:115005:115010	8994160	10	True				
ANR	8994303	Label	case 3 :	3599:16:115028:115034	8994160	11	True				
ANR	8994304	ExpressionStatement	push ( 4 )	3600:20:115056:115063	8994160	12	True				
ANR	8994305	CallExpression	push ( 4 )		8994160	0					
ANR	8994306	Callee	push		8994160	0					
ANR	8994307	Identifier	push		8994160	0					
ANR	8994308	ArgumentList	4		8994160	1					
ANR	8994309	Argument	4		8994160	0					
ANR	8994310	PrimaryExpression	4		8994160	0					
ANR	8994311	ExpressionStatement	"make_real ( & op [ - 3 ] , 0.0 )"	3601:20:115085:115108	8994160	13	True				
ANR	8994312	CallExpression	"make_real ( & op [ - 3 ] , 0.0 )"		8994160	0					
ANR	8994313	Callee	make_real		8994160	0					
ANR	8994314	Identifier	make_real		8994160	0					
ANR	8994315	ArgumentList	& op [ - 3 ]		8994160	1					
ANR	8994316	Argument	& op [ - 3 ]		8994160	0					
ANR	8994317	UnaryOperationExpression	& op [ - 3 ]		8994160	0					
ANR	8994318	UnaryOperator	&		8994160	0					
ANR	8994319	ArrayIndexing	op [ - 3 ]		8994160	1					
ANR	8994320	Identifier	op		8994160	0					
ANR	8994321	UnaryOperationExpression	- 3		8994160	1					
ANR	8994322	UnaryOperator	-		8994160	0					
ANR	8994323	PrimaryExpression	3		8994160	1					
ANR	8994324	Argument	0.0		8994160	1					
ANR	8994325	PrimaryExpression	0.0		8994160	0					
ANR	8994326	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	3602:20:115130:115153	8994160	14	True				
ANR	8994327	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		8994160	0					
ANR	8994328	Callee	make_real		8994160	0					
ANR	8994329	Identifier	make_real		8994160	0					
ANR	8994330	ArgumentList	& op [ - 2 ]		8994160	1					
ANR	8994331	Argument	& op [ - 2 ]		8994160	0					
ANR	8994332	UnaryOperationExpression	& op [ - 2 ]		8994160	0					
ANR	8994333	UnaryOperator	&		8994160	0					
ANR	8994334	ArrayIndexing	op [ - 2 ]		8994160	1					
ANR	8994335	Identifier	op		8994160	0					
ANR	8994336	UnaryOperationExpression	- 2		8994160	1					
ANR	8994337	UnaryOperator	-		8994160	0					
ANR	8994338	PrimaryExpression	2		8994160	1					
ANR	8994339	Argument	0.0		8994160	1					
ANR	8994340	PrimaryExpression	0.0		8994160	0					
ANR	8994341	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	3603:20:115175:115198	8994160	15	True				
ANR	8994342	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		8994160	0					
ANR	8994343	Callee	make_real		8994160	0					
ANR	8994344	Identifier	make_real		8994160	0					
ANR	8994345	ArgumentList	& op [ - 1 ]		8994160	1					
ANR	8994346	Argument	& op [ - 1 ]		8994160	0					
ANR	8994347	UnaryOperationExpression	& op [ - 1 ]		8994160	0					
ANR	8994348	UnaryOperator	&		8994160	0					
ANR	8994349	ArrayIndexing	op [ - 1 ]		8994160	1					
ANR	8994350	Identifier	op		8994160	0					
ANR	8994351	UnaryOperationExpression	- 1		8994160	1					
ANR	8994352	UnaryOperator	-		8994160	0					
ANR	8994353	PrimaryExpression	1		8994160	1					
ANR	8994354	Argument	0.0		8994160	1					
ANR	8994355	PrimaryExpression	0.0		8994160	0					
ANR	8994356	ExpressionStatement	"make_real ( op , 0.0 )"	3604:20:115220:115238	8994160	16	True				
ANR	8994357	CallExpression	"make_real ( op , 0.0 )"		8994160	0					
ANR	8994358	Callee	make_real		8994160	0					
ANR	8994359	Identifier	make_real		8994160	0					
ANR	8994360	ArgumentList	op		8994160	1					
ANR	8994361	Argument	op		8994160	0					
ANR	8994362	Identifier	op		8994160	0					
ANR	8994363	Argument	0.0		8994160	1					
ANR	8994364	PrimaryExpression	0.0		8994160	0					
ANR	8994365	BreakStatement	break ;	3605:20:115260:115265	8994160	17	True				
ANR	8994366	ElseStatement	else		8994160	0					
ANR	8994367	CompoundStatement		33:15:968:968	8994160	0					
ANR	8994368	ExpressionStatement	* stage = 0	3608:12:115310:115320	8994160	0	True				
ANR	8994369	AssignmentExpression	* stage = 0		8994160	0		=			
ANR	8994370	UnaryOperationExpression	* stage		8994160	0					
ANR	8994371	UnaryOperator	*		8994160	0					
ANR	8994372	Identifier	stage		8994160	1					
ANR	8994373	PrimaryExpression	0		8994160	1					
ANR	8994374	ExpressionStatement	* cont = 1	3609:12:115334:115343	8994160	1	True				
ANR	8994375	AssignmentExpression	* cont = 1		8994160	0		=			
ANR	8994376	UnaryOperationExpression	* cont		8994160	0					
ANR	8994377	UnaryOperator	*		8994160	0					
ANR	8994378	Identifier	cont		8994160	1					
ANR	8994379	PrimaryExpression	1		8994160	1					
ANR	8994380	ReturnStatement	return 0 ;	3611:4:115359:115367	8994160	5	True				
ANR	8994381	PrimaryExpression	0		8994160	0					
ANR	8994382	ReturnType	static int		8994160	1					
ANR	8994383	Identifier	sepbasecolor		8994160	2					
ANR	8994384	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8994160	3					
ANR	8994385	Parameter	i_ctx_t * i_ctx_p	3574:24:114245:114261	8994160	0	True				
ANR	8994386	ParameterType	i_ctx_t *		8994160	0					
ANR	8994387	Identifier	i_ctx_p		8994160	1					
ANR	8994388	Parameter	ref * space	3574:43:114264:114273	8994160	1	True				
ANR	8994389	ParameterType	ref *		8994160	0					
ANR	8994390	Identifier	space		8994160	1					
ANR	8994391	Parameter	int base	3574:55:114276:114283	8994160	2	True				
ANR	8994392	ParameterType	int		8994160	0					
ANR	8994393	Identifier	base		8994160	1					
ANR	8994394	Parameter	int * stage	3574:65:114286:114295	8994160	3	True				
ANR	8994395	ParameterType	int *		8994160	0					
ANR	8994396	Identifier	stage		8994160	1					
ANR	8994397	Parameter	int * cont	3574:77:114298:114306	8994160	4	True				
ANR	8994398	ParameterType	int *		8994160	0					
ANR	8994399	Identifier	cont		8994160	1					
ANR	8994400	Parameter	int * stack_depth	3574:88:114309:114324	8994160	5	True				
ANR	8994401	ParameterType	int *		8994160	0					
ANR	8994402	Identifier	stack_depth		8994160	1					
ANR	8994403	CFGEntryNode	ENTRY		8994160		True				
ANR	8994404	CFGExitNode	EXIT		8994160		True				
ANR	8994405	Symbol	stack_depth		8994160						
ANR	8994406	Symbol	op		8994160						
ANR	8994407	Symbol	code		8994160						
ANR	8994408	Symbol	* stage		8994160						
ANR	8994409	Symbol	use		8994160						
ANR	8994410	Symbol	septransform		8994160						
ANR	8994411	Symbol	& use		8994160						
ANR	8994412	Symbol	osp		8994160						
ANR	8994413	Symbol	space		8994160						
ANR	8994414	Symbol	stage		8994160						
ANR	8994415	Symbol	* cont		8994160						
ANR	8994416	Symbol	i_ctx_p		8994160						
ANR	8994417	Symbol	cont		8994160						
ANR	8994418	Symbol	base		8994160						
ANR	8994419	Function	sepvalidate	3613:0:115371:115763							
ANR	8994420	FunctionDef	"sepvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8994419	0					
ANR	8994421	CompoundStatement		3614:0:115454:115763	8994419	0					
ANR	8994422	IdentifierDeclStatement	os_ptr op = osp ;	3615:4:115460:115475	8994419	0	True				
ANR	8994423	IdentifierDecl	op = osp		8994419	0					
ANR	8994424	IdentifierDeclType	os_ptr		8994419	0					
ANR	8994425	Identifier	op		8994419	1					
ANR	8994426	AssignmentExpression	op = osp		8994419	2		=			
ANR	8994427	Identifier	osp		8994419	0					
ANR	8994428	Identifier	osp		8994419	1					
ANR	8994429	IfStatement	if ( num_comps < 1 )		8994419	1					
ANR	8994430	Condition	num_comps < 1	3617:8:115486:115498	8994419	0	True				
ANR	8994431	RelationalExpression	num_comps < 1		8994419	0		<			
ANR	8994432	Identifier	num_comps		8994419	0					
ANR	8994433	PrimaryExpression	1		8994419	1					
ANR	8994434	ExpressionStatement	return_error ( gs_error_stackunderflow )	3618:8:115509:115546	8994419	1	True				
ANR	8994435	CallExpression	return_error ( gs_error_stackunderflow )		8994419	0					
ANR	8994436	Callee	return_error		8994419	0					
ANR	8994437	Identifier	return_error		8994419	0					
ANR	8994438	ArgumentList	gs_error_stackunderflow		8994419	1					
ANR	8994439	Argument	gs_error_stackunderflow		8994419	0					
ANR	8994440	Identifier	gs_error_stackunderflow		8994419	0					
ANR	8994441	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8994419	2					
ANR	8994442	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	3620:8:115557:115609	8994419	0	True				
ANR	8994443	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8994419	0		&&			
ANR	8994444	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8994419	0					
ANR	8994445	UnaryOperator	!		8994419	0					
ANR	8994446	CallExpression	"r_has_type ( op , t_integer )"		8994419	1					
ANR	8994447	Callee	r_has_type		8994419	0					
ANR	8994448	Identifier	r_has_type		8994419	0					
ANR	8994449	ArgumentList	op		8994419	1					
ANR	8994450	Argument	op		8994419	0					
ANR	8994451	Identifier	op		8994419	0					
ANR	8994452	Argument	t_integer		8994419	1					
ANR	8994453	Identifier	t_integer		8994419	0					
ANR	8994454	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8994419	1					
ANR	8994455	UnaryOperator	!		8994419	0					
ANR	8994456	CallExpression	"r_has_type ( op , t_real )"		8994419	1					
ANR	8994457	Callee	r_has_type		8994419	0					
ANR	8994458	Identifier	r_has_type		8994419	0					
ANR	8994459	ArgumentList	op		8994419	1					
ANR	8994460	Argument	op		8994419	0					
ANR	8994461	Identifier	op		8994419	0					
ANR	8994462	Argument	t_real		8994419	1					
ANR	8994463	Identifier	t_real		8994419	0					
ANR	8994464	ExpressionStatement	return_error ( gs_error_typecheck )	3621:8:115620:115652	8994419	1	True				
ANR	8994465	CallExpression	return_error ( gs_error_typecheck )		8994419	0					
ANR	8994466	Callee	return_error		8994419	0					
ANR	8994467	Identifier	return_error		8994419	0					
ANR	8994468	ArgumentList	gs_error_typecheck		8994419	1					
ANR	8994469	Argument	gs_error_typecheck		8994419	0					
ANR	8994470	Identifier	gs_error_typecheck		8994419	0					
ANR	8994471	IfStatement	if ( * values > 1.0 )		8994419	3					
ANR	8994472	Condition	* values > 1.0	3623:8:115663:115675	8994419	0	True				
ANR	8994473	RelationalExpression	* values > 1.0		8994419	0		>			
ANR	8994474	UnaryOperationExpression	* values		8994419	0					
ANR	8994475	UnaryOperator	*		8994419	0					
ANR	8994476	Identifier	values		8994419	1					
ANR	8994477	PrimaryExpression	1.0		8994419	1					
ANR	8994478	ExpressionStatement	* values = 1.0	3624:8:115686:115699	8994419	1	True				
ANR	8994479	AssignmentExpression	* values = 1.0		8994419	0		=			
ANR	8994480	UnaryOperationExpression	* values		8994419	0					
ANR	8994481	UnaryOperator	*		8994419	0					
ANR	8994482	Identifier	values		8994419	1					
ANR	8994483	PrimaryExpression	1.0		8994419	1					
ANR	8994484	IfStatement	if ( * values < 0.0 )		8994419	4					
ANR	8994485	Condition	* values < 0.0	3626:8:115710:115722	8994419	0	True				
ANR	8994486	RelationalExpression	* values < 0.0		8994419	0		<			
ANR	8994487	UnaryOperationExpression	* values		8994419	0					
ANR	8994488	UnaryOperator	*		8994419	0					
ANR	8994489	Identifier	values		8994419	1					
ANR	8994490	PrimaryExpression	0.0		8994419	1					
ANR	8994491	ExpressionStatement	* values = 0.0	3627:8:115733:115746	8994419	1	True				
ANR	8994492	AssignmentExpression	* values = 0.0		8994419	0		=			
ANR	8994493	UnaryOperationExpression	* values		8994419	0					
ANR	8994494	UnaryOperator	*		8994419	0					
ANR	8994495	Identifier	values		8994419	1					
ANR	8994496	PrimaryExpression	0.0		8994419	1					
ANR	8994497	ReturnStatement	return 0 ;	3629:4:115753:115761	8994419	5	True				
ANR	8994498	PrimaryExpression	0		8994419	0					
ANR	8994499	ReturnType	static int		8994419	1					
ANR	8994500	Identifier	sepvalidate		8994419	2					
ANR	8994501	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8994419	3					
ANR	8994502	Parameter	i_ctx_t * i_ctx_p	3613:23:115394:115409	8994419	0	True				
ANR	8994503	ParameterType	i_ctx_t *		8994419	0					
ANR	8994504	Identifier	i_ctx_p		8994419	1					
ANR	8994505	Parameter	ref * space	3613:41:115412:115421	8994419	1	True				
ANR	8994506	ParameterType	ref *		8994419	0					
ANR	8994507	Identifier	space		8994419	1					
ANR	8994508	Parameter	float * values	3613:53:115424:115436	8994419	2	True				
ANR	8994509	ParameterType	float *		8994419	0					
ANR	8994510	Identifier	values		8994419	1					
ANR	8994511	Parameter	int num_comps	3613:68:115439:115451	8994419	3	True				
ANR	8994512	ParameterType	int		8994419	0					
ANR	8994513	Identifier	num_comps		8994419	1					
ANR	8994514	CFGEntryNode	ENTRY		8994419		True				
ANR	8994515	CFGExitNode	EXIT		8994419		True				
ANR	8994516	Symbol	op		8994419						
ANR	8994517	Symbol	r_has_type		8994419						
ANR	8994518	Symbol	gs_error_typecheck		8994419						
ANR	8994519	Symbol	t_integer		8994419						
ANR	8994520	Symbol	gs_error_stackunderflow		8994419						
ANR	8994521	Symbol	i_ctx_p		8994419						
ANR	8994522	Symbol	* values		8994419						
ANR	8994523	Symbol	values		8994419						
ANR	8994524	Symbol	num_comps		8994419						
ANR	8994525	Symbol	t_real		8994419						
ANR	8994526	Symbol	osp		8994419						
ANR	8994527	Symbol	space		8994419						
ANR	8994528	Function	sepcompareproc	3631:0:115765:117303							
ANR	8994529	FunctionDef	"sepcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8994528	0					
ANR	8994530	CompoundStatement		3632:0:115837:117303	8994528	0					
ANR	8994531	IdentifierDeclStatement	"ref sname1 , sname2 ;"	3633:4:115843:115861	8994528	0	True				
ANR	8994532	IdentifierDecl	sname1		8994528	0					
ANR	8994533	IdentifierDeclType	ref		8994528	0					
ANR	8994534	Identifier	sname1		8994528	1					
ANR	8994535	IdentifierDecl	sname2		8994528	1					
ANR	8994536	IdentifierDeclType	ref		8994528	0					
ANR	8994537	Identifier	sname2		8994528	1					
ANR	8994538	IdentifierDeclStatement	int code ;	3634:4:115867:115875	8994528	1	True				
ANR	8994539	IdentifierDecl	code		8994528	0					
ANR	8994540	IdentifierDeclType	int		8994528	0					
ANR	8994541	Identifier	code		8994528	1					
ANR	8994542	ExpressionStatement	"code = array_get ( imemory , space , 1 , & sname1 )"	3636:4:115882:115926	8994528	2	True				
ANR	8994543	AssignmentExpression	"code = array_get ( imemory , space , 1 , & sname1 )"		8994528	0		=			
ANR	8994544	Identifier	code		8994528	0					
ANR	8994545	CallExpression	"array_get ( imemory , space , 1 , & sname1 )"		8994528	1					
ANR	8994546	Callee	array_get		8994528	0					
ANR	8994547	Identifier	array_get		8994528	0					
ANR	8994548	ArgumentList	imemory		8994528	1					
ANR	8994549	Argument	imemory		8994528	0					
ANR	8994550	Identifier	imemory		8994528	0					
ANR	8994551	Argument	space		8994528	1					
ANR	8994552	Identifier	space		8994528	0					
ANR	8994553	Argument	1		8994528	2					
ANR	8994554	PrimaryExpression	1		8994528	0					
ANR	8994555	Argument	& sname1		8994528	3					
ANR	8994556	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994557	UnaryOperator	&		8994528	0					
ANR	8994558	Identifier	sname1		8994528	1					
ANR	8994559	IfStatement	if ( code < 0 )		8994528	3					
ANR	8994560	Condition	code < 0	3637:8:115936:115943	8994528	0	True				
ANR	8994561	RelationalExpression	code < 0		8994528	0		<			
ANR	8994562	Identifier	code		8994528	0					
ANR	8994563	PrimaryExpression	0		8994528	1					
ANR	8994564	ReturnStatement	return 0 ;	3638:8:115954:115962	8994528	1	True				
ANR	8994565	PrimaryExpression	0		8994528	0					
ANR	8994566	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & sname2 )"	3640:4:115969:116017	8994528	4	True				
ANR	8994567	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & sname2 )"		8994528	0		=			
ANR	8994568	Identifier	code		8994528	0					
ANR	8994569	CallExpression	"array_get ( imemory , testspace , 1 , & sname2 )"		8994528	1					
ANR	8994570	Callee	array_get		8994528	0					
ANR	8994571	Identifier	array_get		8994528	0					
ANR	8994572	ArgumentList	imemory		8994528	1					
ANR	8994573	Argument	imemory		8994528	0					
ANR	8994574	Identifier	imemory		8994528	0					
ANR	8994575	Argument	testspace		8994528	1					
ANR	8994576	Identifier	testspace		8994528	0					
ANR	8994577	Argument	1		8994528	2					
ANR	8994578	PrimaryExpression	1		8994528	0					
ANR	8994579	Argument	& sname2		8994528	3					
ANR	8994580	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994581	UnaryOperator	&		8994528	0					
ANR	8994582	Identifier	sname2		8994528	1					
ANR	8994583	IfStatement	if ( code < 0 )		8994528	5					
ANR	8994584	Condition	code < 0	3641:8:116027:116034	8994528	0	True				
ANR	8994585	RelationalExpression	code < 0		8994528	0		<			
ANR	8994586	Identifier	code		8994528	0					
ANR	8994587	PrimaryExpression	0		8994528	1					
ANR	8994588	ReturnStatement	return 0 ;	3642:8:116045:116053	8994528	1	True				
ANR	8994589	PrimaryExpression	0		8994528	0					
ANR	8994590	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		8994528	6					
ANR	8994591	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	3644:8:116064:116097	8994528	0	True				
ANR	8994592	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		8994528	0		!=			
ANR	8994593	CallExpression	r_type ( & sname1 )		8994528	0					
ANR	8994594	Callee	r_type		8994528	0					
ANR	8994595	Identifier	r_type		8994528	0					
ANR	8994596	ArgumentList	& sname1		8994528	1					
ANR	8994597	Argument	& sname1		8994528	0					
ANR	8994598	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994599	UnaryOperator	&		8994528	0					
ANR	8994600	Identifier	sname1		8994528	1					
ANR	8994601	CallExpression	r_type ( & sname2 )		8994528	1					
ANR	8994602	Callee	r_type		8994528	0					
ANR	8994603	Identifier	r_type		8994528	0					
ANR	8994604	ArgumentList	& sname2		8994528	1					
ANR	8994605	Argument	& sname2		8994528	0					
ANR	8994606	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994607	UnaryOperator	&		8994528	0					
ANR	8994608	Identifier	sname2		8994528	1					
ANR	8994609	ReturnStatement	return 0 ;	3645:8:116108:116116	8994528	1	True				
ANR	8994610	PrimaryExpression	0		8994528	0					
ANR	8994611	SwitchStatement	switch ( r_type ( & sname1 ) )		8994528	7					
ANR	8994612	Condition	r_type ( & sname1 )	3647:11:116130:116144	8994528	0	True				
ANR	8994613	CallExpression	r_type ( & sname1 )		8994528	0					
ANR	8994614	Callee	r_type		8994528	0					
ANR	8994615	Identifier	r_type		8994528	0					
ANR	8994616	ArgumentList	& sname1		8994528	1					
ANR	8994617	Argument	& sname1		8994528	0					
ANR	8994618	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994619	UnaryOperator	&		8994528	0					
ANR	8994620	Identifier	sname1		8994528	1					
ANR	8994621	CompoundStatement		16:28:309:309	8994528	1					
ANR	8994622	Label	case t_name :	3648:8:116157:116168	8994528	0	True				
ANR	8994623	Identifier	t_name		8994528	0					
ANR	8994624	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		8994528	1					
ANR	8994625	Condition	"! name_eq ( & sname1 , & sname2 )"	3649:16:116186:116211	8994528	0	True				
ANR	8994626	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		8994528	0					
ANR	8994627	UnaryOperator	!		8994528	0					
ANR	8994628	CallExpression	"name_eq ( & sname1 , & sname2 )"		8994528	1					
ANR	8994629	Callee	name_eq		8994528	0					
ANR	8994630	Identifier	name_eq		8994528	0					
ANR	8994631	ArgumentList	& sname1		8994528	1					
ANR	8994632	Argument	& sname1		8994528	0					
ANR	8994633	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994634	UnaryOperator	&		8994528	0					
ANR	8994635	Identifier	sname1		8994528	1					
ANR	8994636	Argument	& sname2		8994528	1					
ANR	8994637	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994638	UnaryOperator	&		8994528	0					
ANR	8994639	Identifier	sname2		8994528	1					
ANR	8994640	ReturnStatement	return 0 ;	3650:16:116230:116238	8994528	1	True				
ANR	8994641	PrimaryExpression	0		8994528	0					
ANR	8994642	BreakStatement	break ;	3651:12:116252:116257	8994528	2	True				
ANR	8994643	Label	case t_string :	3652:8:116267:116280	8994528	3	True				
ANR	8994644	Identifier	t_string		8994528	0					
ANR	8994645	IfStatement	if ( r_size ( & sname1 ) != r_size ( & sname2 ) )		8994528	4					
ANR	8994646	Condition	r_size ( & sname1 ) != r_size ( & sname2 )	3653:16:116298:116331	8994528	0	True				
ANR	8994647	EqualityExpression	r_size ( & sname1 ) != r_size ( & sname2 )		8994528	0		!=			
ANR	8994648	CallExpression	r_size ( & sname1 )		8994528	0					
ANR	8994649	Callee	r_size		8994528	0					
ANR	8994650	Identifier	r_size		8994528	0					
ANR	8994651	ArgumentList	& sname1		8994528	1					
ANR	8994652	Argument	& sname1		8994528	0					
ANR	8994653	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994654	UnaryOperator	&		8994528	0					
ANR	8994655	Identifier	sname1		8994528	1					
ANR	8994656	CallExpression	r_size ( & sname2 )		8994528	1					
ANR	8994657	Callee	r_size		8994528	0					
ANR	8994658	Identifier	r_size		8994528	0					
ANR	8994659	ArgumentList	& sname2		8994528	1					
ANR	8994660	Argument	& sname2		8994528	0					
ANR	8994661	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994662	UnaryOperator	&		8994528	0					
ANR	8994663	Identifier	sname2		8994528	1					
ANR	8994664	ReturnStatement	return 0 ;	3654:16:116350:116358	8994528	1	True				
ANR	8994665	PrimaryExpression	0		8994528	0					
ANR	8994666	IfStatement	"if ( strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0 )"		8994528	5					
ANR	8994667	Condition	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0"	3655:16:116376:116484	8994528	0	True				
ANR	8994668	EqualityExpression	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0"		8994528	0		!=			
ANR	8994669	CallExpression	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) )"		8994528	0					
ANR	8994670	Callee	strncmp		8994528	0					
ANR	8994671	Identifier	strncmp		8994528	0					
ANR	8994672	ArgumentList	( const char * ) sname1 . value . const_bytes		8994528	1					
ANR	8994673	Argument	( const char * ) sname1 . value . const_bytes		8994528	0					
ANR	8994674	CastExpression	( const char * ) sname1 . value . const_bytes		8994528	0					
ANR	8994675	CastTarget	const char *		8994528	0					
ANR	8994676	MemberAccess	sname1 . value . const_bytes		8994528	1					
ANR	8994677	MemberAccess	sname1 . value		8994528	0					
ANR	8994678	Identifier	sname1		8994528	0					
ANR	8994679	Identifier	value		8994528	1					
ANR	8994680	Identifier	const_bytes		8994528	1					
ANR	8994681	Argument	( const char * ) sname2 . value . const_bytes		8994528	1					
ANR	8994682	CastExpression	( const char * ) sname2 . value . const_bytes		8994528	0					
ANR	8994683	CastTarget	const char *		8994528	0					
ANR	8994684	MemberAccess	sname2 . value . const_bytes		8994528	1					
ANR	8994685	MemberAccess	sname2 . value		8994528	0					
ANR	8994686	Identifier	sname2		8994528	0					
ANR	8994687	Identifier	value		8994528	1					
ANR	8994688	Identifier	const_bytes		8994528	1					
ANR	8994689	Argument	r_size ( & sname1 )		8994528	2					
ANR	8994690	CallExpression	r_size ( & sname1 )		8994528	0					
ANR	8994691	Callee	r_size		8994528	0					
ANR	8994692	Identifier	r_size		8994528	0					
ANR	8994693	ArgumentList	& sname1		8994528	1					
ANR	8994694	Argument	& sname1		8994528	0					
ANR	8994695	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994696	UnaryOperator	&		8994528	0					
ANR	8994697	Identifier	sname1		8994528	1					
ANR	8994698	PrimaryExpression	0		8994528	1					
ANR	8994699	ReturnStatement	return 0 ;	3656:16:116503:116511	8994528	1	True				
ANR	8994700	PrimaryExpression	0		8994528	0					
ANR	8994701	BreakStatement	break ;	3657:12:116525:116530	8994528	6	True				
ANR	8994702	Label	default :	3658:8:116540:116547	8994528	7	True				
ANR	8994703	Identifier	default		8994528	0					
ANR	8994704	ReturnStatement	return 0 ;	3659:12:116561:116569	8994528	8	True				
ANR	8994705	PrimaryExpression	0		8994528	0					
ANR	8994706	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname1 )"	3661:4:116581:116629	8994528	8	True				
ANR	8994707	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname1 )"		8994528	0		=			
ANR	8994708	Identifier	code		8994528	0					
ANR	8994709	CallExpression	"array_get ( imemory , testspace , 2 , & sname1 )"		8994528	1					
ANR	8994710	Callee	array_get		8994528	0					
ANR	8994711	Identifier	array_get		8994528	0					
ANR	8994712	ArgumentList	imemory		8994528	1					
ANR	8994713	Argument	imemory		8994528	0					
ANR	8994714	Identifier	imemory		8994528	0					
ANR	8994715	Argument	testspace		8994528	1					
ANR	8994716	Identifier	testspace		8994528	0					
ANR	8994717	Argument	2		8994528	2					
ANR	8994718	PrimaryExpression	2		8994528	0					
ANR	8994719	Argument	& sname1		8994528	3					
ANR	8994720	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994721	UnaryOperator	&		8994528	0					
ANR	8994722	Identifier	sname1		8994528	1					
ANR	8994723	IfStatement	if ( code < 0 )		8994528	9					
ANR	8994724	Condition	code < 0	3662:8:116639:116646	8994528	0	True				
ANR	8994725	RelationalExpression	code < 0		8994528	0		<			
ANR	8994726	Identifier	code		8994528	0					
ANR	8994727	PrimaryExpression	0		8994528	1					
ANR	8994728	ReturnStatement	return 0 ;	3663:8:116657:116665	8994528	1	True				
ANR	8994729	PrimaryExpression	0		8994528	0					
ANR	8994730	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname2 )"	3664:4:116671:116719	8994528	10	True				
ANR	8994731	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname2 )"		8994528	0		=			
ANR	8994732	Identifier	code		8994528	0					
ANR	8994733	CallExpression	"array_get ( imemory , testspace , 2 , & sname2 )"		8994528	1					
ANR	8994734	Callee	array_get		8994528	0					
ANR	8994735	Identifier	array_get		8994528	0					
ANR	8994736	ArgumentList	imemory		8994528	1					
ANR	8994737	Argument	imemory		8994528	0					
ANR	8994738	Identifier	imemory		8994528	0					
ANR	8994739	Argument	testspace		8994528	1					
ANR	8994740	Identifier	testspace		8994528	0					
ANR	8994741	Argument	2		8994528	2					
ANR	8994742	PrimaryExpression	2		8994528	0					
ANR	8994743	Argument	& sname2		8994528	3					
ANR	8994744	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994745	UnaryOperator	&		8994528	0					
ANR	8994746	Identifier	sname2		8994528	1					
ANR	8994747	IfStatement	if ( code < 0 )		8994528	11					
ANR	8994748	Condition	code < 0	3665:8:116729:116736	8994528	0	True				
ANR	8994749	RelationalExpression	code < 0		8994528	0		<			
ANR	8994750	Identifier	code		8994528	0					
ANR	8994751	PrimaryExpression	0		8994528	1					
ANR	8994752	ReturnStatement	return 0 ;	3666:8:116747:116755	8994528	1	True				
ANR	8994753	PrimaryExpression	0		8994528	0					
ANR	8994754	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		8994528	12					
ANR	8994755	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	3667:8:116765:116798	8994528	0	True				
ANR	8994756	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		8994528	0		!=			
ANR	8994757	CallExpression	r_type ( & sname1 )		8994528	0					
ANR	8994758	Callee	r_type		8994528	0					
ANR	8994759	Identifier	r_type		8994528	0					
ANR	8994760	ArgumentList	& sname1		8994528	1					
ANR	8994761	Argument	& sname1		8994528	0					
ANR	8994762	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994763	UnaryOperator	&		8994528	0					
ANR	8994764	Identifier	sname1		8994528	1					
ANR	8994765	CallExpression	r_type ( & sname2 )		8994528	1					
ANR	8994766	Callee	r_type		8994528	0					
ANR	8994767	Identifier	r_type		8994528	0					
ANR	8994768	ArgumentList	& sname2		8994528	1					
ANR	8994769	Argument	& sname2		8994528	0					
ANR	8994770	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994771	UnaryOperator	&		8994528	0					
ANR	8994772	Identifier	sname2		8994528	1					
ANR	8994773	ReturnStatement	return 0 ;	3668:8:116809:116817	8994528	1	True				
ANR	8994774	PrimaryExpression	0		8994528	0					
ANR	8994775	IfStatement	if ( r_is_array ( & sname1 ) )		8994528	13					
ANR	8994776	Condition	r_is_array ( & sname1 )	3670:8:116828:116846	8994528	0	True				
ANR	8994777	CallExpression	r_is_array ( & sname1 )		8994528	0					
ANR	8994778	Callee	r_is_array		8994528	0					
ANR	8994779	Identifier	r_is_array		8994528	0					
ANR	8994780	ArgumentList	& sname1		8994528	1					
ANR	8994781	Argument	& sname1		8994528	0					
ANR	8994782	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994783	UnaryOperator	&		8994528	0					
ANR	8994784	Identifier	sname1		8994528	1					
ANR	8994785	CompoundStatement		39:29:1011:1011	8994528	1					
ANR	8994786	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		8994528	0					
ANR	8994787	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	3671:12:116863:116903	8994528	0	True				
ANR	8994788	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8994528	0					
ANR	8994789	UnaryOperator	!		8994528	0					
ANR	8994790	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8994528	1					
ANR	8994791	Callee	comparearrays		8994528	0					
ANR	8994792	Identifier	comparearrays		8994528	0					
ANR	8994793	ArgumentList	i_ctx_p		8994528	1					
ANR	8994794	Argument	i_ctx_p		8994528	0					
ANR	8994795	Identifier	i_ctx_p		8994528	0					
ANR	8994796	Argument	& sname1		8994528	1					
ANR	8994797	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994798	UnaryOperator	&		8994528	0					
ANR	8994799	Identifier	sname1		8994528	1					
ANR	8994800	Argument	& sname2		8994528	2					
ANR	8994801	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994802	UnaryOperator	&		8994528	0					
ANR	8994803	Identifier	sname2		8994528	1					
ANR	8994804	ReturnStatement	return 0 ;	3672:12:116918:116926	8994528	1	True				
ANR	8994805	PrimaryExpression	0		8994528	0					
ANR	8994806	ElseStatement	else		8994528	0					
ANR	8994807	CompoundStatement		42:11:1101:1101	8994528	0					
ANR	8994808	IfStatement	"if ( ! r_has_type ( & sname1 , t_name ) )"		8994528	0					
ANR	8994809	Condition	"! r_has_type ( & sname1 , t_name )"	3674:12:116953:116980	8994528	0	True				
ANR	8994810	UnaryOperationExpression	"! r_has_type ( & sname1 , t_name )"		8994528	0					
ANR	8994811	UnaryOperator	!		8994528	0					
ANR	8994812	CallExpression	"r_has_type ( & sname1 , t_name )"		8994528	1					
ANR	8994813	Callee	r_has_type		8994528	0					
ANR	8994814	Identifier	r_has_type		8994528	0					
ANR	8994815	ArgumentList	& sname1		8994528	1					
ANR	8994816	Argument	& sname1		8994528	0					
ANR	8994817	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994818	UnaryOperator	&		8994528	0					
ANR	8994819	Identifier	sname1		8994528	1					
ANR	8994820	Argument	t_name		8994528	1					
ANR	8994821	Identifier	t_name		8994528	0					
ANR	8994822	ReturnStatement	return 0 ;	3675:12:116995:117003	8994528	1	True				
ANR	8994823	PrimaryExpression	0		8994528	0					
ANR	8994824	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		8994528	1					
ANR	8994825	Condition	"! name_eq ( & sname1 , & sname2 )"	3676:12:117017:117042	8994528	0	True				
ANR	8994826	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		8994528	0					
ANR	8994827	UnaryOperator	!		8994528	0					
ANR	8994828	CallExpression	"name_eq ( & sname1 , & sname2 )"		8994528	1					
ANR	8994829	Callee	name_eq		8994528	0					
ANR	8994830	Identifier	name_eq		8994528	0					
ANR	8994831	ArgumentList	& sname1		8994528	1					
ANR	8994832	Argument	& sname1		8994528	0					
ANR	8994833	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994834	UnaryOperator	&		8994528	0					
ANR	8994835	Identifier	sname1		8994528	1					
ANR	8994836	Argument	& sname2		8994528	1					
ANR	8994837	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994838	UnaryOperator	&		8994528	0					
ANR	8994839	Identifier	sname2		8994528	1					
ANR	8994840	ReturnStatement	return 0 ;	3677:12:117057:117065	8994528	1	True				
ANR	8994841	PrimaryExpression	0		8994528	0					
ANR	8994842	ExpressionStatement	"code = array_get ( imemory , space , 3 , & sname1 )"	3679:4:117077:117121	8994528	14	True				
ANR	8994843	AssignmentExpression	"code = array_get ( imemory , space , 3 , & sname1 )"		8994528	0		=			
ANR	8994844	Identifier	code		8994528	0					
ANR	8994845	CallExpression	"array_get ( imemory , space , 3 , & sname1 )"		8994528	1					
ANR	8994846	Callee	array_get		8994528	0					
ANR	8994847	Identifier	array_get		8994528	0					
ANR	8994848	ArgumentList	imemory		8994528	1					
ANR	8994849	Argument	imemory		8994528	0					
ANR	8994850	Identifier	imemory		8994528	0					
ANR	8994851	Argument	space		8994528	1					
ANR	8994852	Identifier	space		8994528	0					
ANR	8994853	Argument	3		8994528	2					
ANR	8994854	PrimaryExpression	3		8994528	0					
ANR	8994855	Argument	& sname1		8994528	3					
ANR	8994856	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994857	UnaryOperator	&		8994528	0					
ANR	8994858	Identifier	sname1		8994528	1					
ANR	8994859	IfStatement	if ( code < 0 )		8994528	15					
ANR	8994860	Condition	code < 0	3680:8:117131:117138	8994528	0	True				
ANR	8994861	RelationalExpression	code < 0		8994528	0		<			
ANR	8994862	Identifier	code		8994528	0					
ANR	8994863	PrimaryExpression	0		8994528	1					
ANR	8994864	ReturnStatement	return 0 ;	3681:8:117149:117157	8994528	1	True				
ANR	8994865	PrimaryExpression	0		8994528	0					
ANR	8994866	ExpressionStatement	"code = array_get ( imemory , testspace , 3 , & sname2 )"	3682:4:117163:117211	8994528	16	True				
ANR	8994867	AssignmentExpression	"code = array_get ( imemory , testspace , 3 , & sname2 )"		8994528	0		=			
ANR	8994868	Identifier	code		8994528	0					
ANR	8994869	CallExpression	"array_get ( imemory , testspace , 3 , & sname2 )"		8994528	1					
ANR	8994870	Callee	array_get		8994528	0					
ANR	8994871	Identifier	array_get		8994528	0					
ANR	8994872	ArgumentList	imemory		8994528	1					
ANR	8994873	Argument	imemory		8994528	0					
ANR	8994874	Identifier	imemory		8994528	0					
ANR	8994875	Argument	testspace		8994528	1					
ANR	8994876	Identifier	testspace		8994528	0					
ANR	8994877	Argument	3		8994528	2					
ANR	8994878	PrimaryExpression	3		8994528	0					
ANR	8994879	Argument	& sname2		8994528	3					
ANR	8994880	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994881	UnaryOperator	&		8994528	0					
ANR	8994882	Identifier	sname2		8994528	1					
ANR	8994883	IfStatement	if ( code < 0 )		8994528	17					
ANR	8994884	Condition	code < 0	3683:8:117221:117228	8994528	0	True				
ANR	8994885	RelationalExpression	code < 0		8994528	0		<			
ANR	8994886	Identifier	code		8994528	0					
ANR	8994887	PrimaryExpression	0		8994528	1					
ANR	8994888	ReturnStatement	return 0 ;	3684:8:117239:117247	8994528	1	True				
ANR	8994889	PrimaryExpression	0		8994528	0					
ANR	8994890	ReturnStatement	"return ( comparearrays ( i_ctx_p , & sname1 , & sname2 ) ) ;"	3685:4:117253:117301	8994528	18	True				
ANR	8994891	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8994528	0					
ANR	8994892	Callee	comparearrays		8994528	0					
ANR	8994893	Identifier	comparearrays		8994528	0					
ANR	8994894	ArgumentList	i_ctx_p		8994528	1					
ANR	8994895	Argument	i_ctx_p		8994528	0					
ANR	8994896	Identifier	i_ctx_p		8994528	0					
ANR	8994897	Argument	& sname1		8994528	1					
ANR	8994898	UnaryOperationExpression	& sname1		8994528	0					
ANR	8994899	UnaryOperator	&		8994528	0					
ANR	8994900	Identifier	sname1		8994528	1					
ANR	8994901	Argument	& sname2		8994528	2					
ANR	8994902	UnaryOperationExpression	& sname2		8994528	0					
ANR	8994903	UnaryOperator	&		8994528	0					
ANR	8994904	Identifier	sname2		8994528	1					
ANR	8994905	ReturnType	static int		8994528	1					
ANR	8994906	Identifier	sepcompareproc		8994528	2					
ANR	8994907	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8994528	3					
ANR	8994908	Parameter	i_ctx_t * i_ctx_p	3631:26:115791:115806	8994528	0	True				
ANR	8994909	ParameterType	i_ctx_t *		8994528	0					
ANR	8994910	Identifier	i_ctx_p		8994528	1					
ANR	8994911	Parameter	ref * space	3631:44:115809:115818	8994528	1	True				
ANR	8994912	ParameterType	ref *		8994528	0					
ANR	8994913	Identifier	space		8994528	1					
ANR	8994914	Parameter	ref * testspace	3631:56:115821:115834	8994528	2	True				
ANR	8994915	ParameterType	ref *		8994528	0					
ANR	8994916	Identifier	testspace		8994528	1					
ANR	8994917	CFGEntryNode	ENTRY		8994528		True				
ANR	8994918	CFGExitNode	EXIT		8994528		True				
ANR	8994919	Symbol	& sname1		8994528						
ANR	8994920	Symbol	comparearrays		8994528						
ANR	8994921	Symbol	name_eq		8994528						
ANR	8994922	Symbol	code		8994528						
ANR	8994923	Symbol	& sname2		8994528						
ANR	8994924	Symbol	sname2 . value . const_bytes		8994528						
ANR	8994925	Symbol	array_get		8994528						
ANR	8994926	Symbol	sname1		8994528						
ANR	8994927	Symbol	sname2		8994528						
ANR	8994928	Symbol	space		8994528						
ANR	8994929	Symbol	sname1 . value		8994528						
ANR	8994930	Symbol	sname1 . value . const_bytes		8994528						
ANR	8994931	Symbol	strncmp		8994528						
ANR	8994932	Symbol	sname2 . value		8994528						
ANR	8994933	Symbol	r_has_type		8994528						
ANR	8994934	Symbol	testspace		8994528						
ANR	8994935	Symbol	i_ctx_p		8994528						
ANR	8994936	Symbol	t_name		8994528						
ANR	8994937	Symbol	r_size		8994528						
ANR	8994938	Symbol	imemory		8994528						
ANR	8994939	Symbol	r_is_array		8994528						
ANR	8994940	Symbol	r_type		8994528						
ANR	8994941	Function	sepinitialproc	3687:0:117305:117475							
ANR	8994942	FunctionDef	"sepinitialproc (i_ctx_t * i_ctx_p , ref * space)"		8994941	0					
ANR	8994943	CompoundStatement		3688:0:117361:117475	8994941	0					
ANR	8994944	IdentifierDeclStatement	gs_client_color cc ;	3689:4:117367:117385	8994941	0	True				
ANR	8994945	IdentifierDecl	cc		8994941	0					
ANR	8994946	IdentifierDeclType	gs_client_color		8994941	0					
ANR	8994947	Identifier	cc		8994941	1					
ANR	8994948	ExpressionStatement	cc . pattern = 0x00	3691:4:117392:117409	8994941	1	True				
ANR	8994949	AssignmentExpression	cc . pattern = 0x00		8994941	0		=			
ANR	8994950	MemberAccess	cc . pattern		8994941	0					
ANR	8994951	Identifier	cc		8994941	0					
ANR	8994952	Identifier	pattern		8994941	1					
ANR	8994953	PrimaryExpression	0x00		8994941	1					
ANR	8994954	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3692:4:117415:117439	8994941	2	True				
ANR	8994955	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		8994941	0		=			
ANR	8994956	ArrayIndexing	cc . paint . values [ 0 ]		8994941	0					
ANR	8994957	MemberAccess	cc . paint . values		8994941	0					
ANR	8994958	MemberAccess	cc . paint		8994941	0					
ANR	8994959	Identifier	cc		8994941	0					
ANR	8994960	Identifier	paint		8994941	1					
ANR	8994961	Identifier	values		8994941	1					
ANR	8994962	PrimaryExpression	0		8994941	1					
ANR	8994963	PrimaryExpression	1.0		8994941	1					
ANR	8994964	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	3693:4:117445:117473	8994941	3	True				
ANR	8994965	CallExpression	"gs_setcolor ( igs , & cc )"		8994941	0					
ANR	8994966	Callee	gs_setcolor		8994941	0					
ANR	8994967	Identifier	gs_setcolor		8994941	0					
ANR	8994968	ArgumentList	igs		8994941	1					
ANR	8994969	Argument	igs		8994941	0					
ANR	8994970	Identifier	igs		8994941	0					
ANR	8994971	Argument	& cc		8994941	1					
ANR	8994972	UnaryOperationExpression	& cc		8994941	0					
ANR	8994973	UnaryOperator	&		8994941	0					
ANR	8994974	Identifier	cc		8994941	1					
ANR	8994975	ReturnType	static int		8994941	1					
ANR	8994976	Identifier	sepinitialproc		8994941	2					
ANR	8994977	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		8994941	3					
ANR	8994978	Parameter	i_ctx_t * i_ctx_p	3687:26:117331:117346	8994941	0	True				
ANR	8994979	ParameterType	i_ctx_t *		8994941	0					
ANR	8994980	Identifier	i_ctx_p		8994941	1					
ANR	8994981	Parameter	ref * space	3687:44:117349:117358	8994941	1	True				
ANR	8994982	ParameterType	ref *		8994941	0					
ANR	8994983	Identifier	space		8994941	1					
ANR	8994984	CFGEntryNode	ENTRY		8994941		True				
ANR	8994985	CFGExitNode	EXIT		8994941		True				
ANR	8994986	Symbol	cc		8994941						
ANR	8994987	Symbol	cc . pattern		8994941						
ANR	8994988	Symbol	* cc . paint		8994941						
ANR	8994989	Symbol	igs		8994941						
ANR	8994990	Symbol	* cc		8994941						
ANR	8994991	Symbol	* cc . paint . values		8994941						
ANR	8994992	Symbol	i_ctx_p		8994941						
ANR	8994993	Symbol	cc . paint		8994941						
ANR	8994994	Symbol	gs_setcolor		8994941						
ANR	8994995	Symbol	& cc		8994941						
ANR	8994996	Symbol	cc . paint . values		8994941						
ANR	8994997	Symbol	space		8994941						
ANR	8994998	Function	devicencolorants_cont	3697:0:117492:119990							
ANR	8994999	FunctionDef	devicencolorants_cont (i_ctx_t * i_ctx_p)		8994998	0					
ANR	8995000	CompoundStatement		3698:0:117543:119990	8994998	0					
ANR	8995001	IdentifierDeclStatement	"ref dict , * pdict = & dict , space [ 2 ] , sname ;"	3699:4:117549:117590	8994998	0	True				
ANR	8995002	IdentifierDecl	dict		8994998	0					
ANR	8995003	IdentifierDeclType	ref		8994998	0					
ANR	8995004	Identifier	dict		8994998	1					
ANR	8995005	IdentifierDecl	* pdict = & dict		8994998	1					
ANR	8995006	IdentifierDeclType	ref *		8994998	0					
ANR	8995007	Identifier	pdict		8994998	1					
ANR	8995008	AssignmentExpression	* pdict = & dict		8994998	2		=			
ANR	8995009	Identifier	pdict		8994998	0					
ANR	8995010	UnaryOperationExpression	& dict		8994998	1					
ANR	8995011	UnaryOperator	&		8994998	0					
ANR	8995012	Identifier	dict		8994998	1					
ANR	8995013	IdentifierDecl	space [ 2 ]		8994998	2					
ANR	8995014	IdentifierDeclType	ref [ 2 ]		8994998	0					
ANR	8995015	Identifier	space		8994998	1					
ANR	8995016	PrimaryExpression	2		8994998	2					
ANR	8995017	IdentifierDecl	sname		8994998	3					
ANR	8995018	IdentifierDeclType	ref		8994998	0					
ANR	8995019	Identifier	sname		8994998	1					
ANR	8995020	IdentifierDeclStatement	"int index , code , depth , stage ;"	3700:4:117596:117625	8994998	1	True				
ANR	8995021	IdentifierDecl	index		8994998	0					
ANR	8995022	IdentifierDeclType	int		8994998	0					
ANR	8995023	Identifier	index		8994998	1					
ANR	8995024	IdentifierDecl	code		8994998	1					
ANR	8995025	IdentifierDeclType	int		8994998	0					
ANR	8995026	Identifier	code		8994998	1					
ANR	8995027	IdentifierDecl	depth		8994998	2					
ANR	8995028	IdentifierDeclType	int		8994998	0					
ANR	8995029	Identifier	depth		8994998	1					
ANR	8995030	IdentifierDecl	stage		8994998	3					
ANR	8995031	IdentifierDeclType	int		8994998	0					
ANR	8995032	Identifier	stage		8994998	1					
ANR	8995033	IdentifierDeclStatement	"es_ptr ep = esp , pindex , pstage ;"	3701:4:117631:117662	8994998	2	True				
ANR	8995034	IdentifierDecl	ep = esp		8994998	0					
ANR	8995035	IdentifierDeclType	es_ptr		8994998	0					
ANR	8995036	Identifier	ep		8994998	1					
ANR	8995037	AssignmentExpression	ep = esp		8994998	2		=			
ANR	8995038	Identifier	esp		8994998	0					
ANR	8995039	Identifier	esp		8994998	1					
ANR	8995040	IdentifierDecl	pindex		8994998	1					
ANR	8995041	IdentifierDeclType	es_ptr		8994998	0					
ANR	8995042	Identifier	pindex		8994998	1					
ANR	8995043	IdentifierDecl	pstage		8994998	2					
ANR	8995044	IdentifierDeclType	es_ptr		8994998	0					
ANR	8995045	Identifier	pstage		8994998	1					
ANR	8995046	IdentifierDeclStatement	os_ptr op = osp ;	3702:4:117668:117683	8994998	3	True				
ANR	8995047	IdentifierDecl	op = osp		8994998	0					
ANR	8995048	IdentifierDeclType	os_ptr		8994998	0					
ANR	8995049	Identifier	op		8994998	1					
ANR	8995050	AssignmentExpression	op = osp		8994998	2		=			
ANR	8995051	Identifier	osp		8994998	0					
ANR	8995052	Identifier	osp		8994998	1					
ANR	8995053	IdentifierDeclStatement	gs_separation_name sep_name ;	3703:4:117689:117716	8994998	4	True				
ANR	8995054	IdentifierDecl	sep_name		8994998	0					
ANR	8995055	IdentifierDeclType	gs_separation_name		8994998	0					
ANR	8995056	Identifier	sep_name		8994998	1					
ANR	8995057	ExpressionStatement	pindex = & ep [ - 2 ]	3705:4:117723:117739	8994998	5	True				
ANR	8995058	AssignmentExpression	pindex = & ep [ - 2 ]		8994998	0		=			
ANR	8995059	Identifier	pindex		8994998	0					
ANR	8995060	UnaryOperationExpression	& ep [ - 2 ]		8994998	1					
ANR	8995061	UnaryOperator	&		8994998	0					
ANR	8995062	ArrayIndexing	ep [ - 2 ]		8994998	1					
ANR	8995063	Identifier	ep		8994998	0					
ANR	8995064	UnaryOperationExpression	- 2		8994998	1					
ANR	8995065	UnaryOperator	-		8994998	0					
ANR	8995066	PrimaryExpression	2		8994998	1					
ANR	8995067	ExpressionStatement	pstage = & ep [ - 1 ]	3706:4:117745:117761	8994998	6	True				
ANR	8995068	AssignmentExpression	pstage = & ep [ - 1 ]		8994998	0		=			
ANR	8995069	Identifier	pstage		8994998	0					
ANR	8995070	UnaryOperationExpression	& ep [ - 1 ]		8994998	1					
ANR	8995071	UnaryOperator	&		8994998	0					
ANR	8995072	ArrayIndexing	ep [ - 1 ]		8994998	1					
ANR	8995073	Identifier	ep		8994998	0					
ANR	8995074	UnaryOperationExpression	- 1		8994998	1					
ANR	8995075	UnaryOperator	-		8994998	0					
ANR	8995076	PrimaryExpression	1		8994998	1					
ANR	8995077	ExpressionStatement	index = ( int ) pindex -> value . intval	3707:4:117767:117800	8994998	7	True				
ANR	8995078	AssignmentExpression	index = ( int ) pindex -> value . intval		8994998	0		=			
ANR	8995079	Identifier	index		8994998	0					
ANR	8995080	CastExpression	( int ) pindex -> value . intval		8994998	1					
ANR	8995081	CastTarget	int		8994998	0					
ANR	8995082	MemberAccess	pindex -> value . intval		8994998	1					
ANR	8995083	PtrMemberAccess	pindex -> value		8994998	0					
ANR	8995084	Identifier	pindex		8994998	0					
ANR	8995085	Identifier	value		8994998	1					
ANR	8995086	Identifier	intval		8994998	1					
ANR	8995087	ExpressionStatement	stage = ( int ) pstage -> value . intval	3708:4:117806:117839	8994998	8	True				
ANR	8995088	AssignmentExpression	stage = ( int ) pstage -> value . intval		8994998	0		=			
ANR	8995089	Identifier	stage		8994998	0					
ANR	8995090	CastExpression	( int ) pstage -> value . intval		8994998	1					
ANR	8995091	CastTarget	int		8994998	0					
ANR	8995092	MemberAccess	pstage -> value . intval		8994998	1					
ANR	8995093	PtrMemberAccess	pstage -> value		8994998	0					
ANR	8995094	Identifier	pstage		8994998	0					
ANR	8995095	Identifier	value		8994998	1					
ANR	8995096	Identifier	intval		8994998	1					
ANR	8995097	ExpressionStatement	"ref_assign ( & dict , ep )"	3709:4:117845:117866	8994998	9	True				
ANR	8995098	CallExpression	"ref_assign ( & dict , ep )"		8994998	0					
ANR	8995099	Callee	ref_assign		8994998	0					
ANR	8995100	Identifier	ref_assign		8994998	0					
ANR	8995101	ArgumentList	& dict		8994998	1					
ANR	8995102	Argument	& dict		8994998	0					
ANR	8995103	UnaryOperationExpression	& dict		8994998	0					
ANR	8995104	UnaryOperator	&		8994998	0					
ANR	8995105	Identifier	dict		8994998	1					
ANR	8995106	Argument	ep		8994998	1					
ANR	8995107	Identifier	ep		8994998	0					
ANR	8995108	DoStatement	do		8994998	10					
ANR	8995109	CompoundStatement		14:7:332:332	8994998	0					
ANR	8995110	ExpressionStatement	"index = dict_next ( pdict , index , ( ref * ) & space )"	3712:8:117886:117932	8994998	0	True				
ANR	8995111	AssignmentExpression	"index = dict_next ( pdict , index , ( ref * ) & space )"		8994998	0		=			
ANR	8995112	Identifier	index		8994998	0					
ANR	8995113	CallExpression	"dict_next ( pdict , index , ( ref * ) & space )"		8994998	1					
ANR	8995114	Callee	dict_next		8994998	0					
ANR	8995115	Identifier	dict_next		8994998	0					
ANR	8995116	ArgumentList	pdict		8994998	1					
ANR	8995117	Argument	pdict		8994998	0					
ANR	8995118	Identifier	pdict		8994998	0					
ANR	8995119	Argument	index		8994998	1					
ANR	8995120	Identifier	index		8994998	0					
ANR	8995121	Argument	( ref * ) & space		8994998	2					
ANR	8995122	CastExpression	( ref * ) & space		8994998	0					
ANR	8995123	CastTarget	ref *		8994998	0					
ANR	8995124	UnaryOperationExpression	& space		8994998	1					
ANR	8995125	UnaryOperator	&		8994998	0					
ANR	8995126	Identifier	space		8994998	1					
ANR	8995127	IfStatement	if ( index == - 1 )		8994998	1					
ANR	8995128	Condition	index == - 1	3713:12:117946:117956	8994998	0	True				
ANR	8995129	EqualityExpression	index == - 1		8994998	0		==			
ANR	8995130	Identifier	index		8994998	0					
ANR	8995131	UnaryOperationExpression	- 1		8994998	1					
ANR	8995132	UnaryOperator	-		8994998	0					
ANR	8995133	PrimaryExpression	1		8994998	1					
ANR	8995134	CompoundStatement		16:25:415:415	8994998	1					
ANR	8995135	ExpressionStatement	esp -= 4	3714:12:117973:117981	8994998	0	True				
ANR	8995136	AssignmentExpression	esp -= 4		8994998	0		-=			
ANR	8995137	Identifier	esp		8994998	0					
ANR	8995138	PrimaryExpression	4		8994998	1					
ANR	8995139	ReturnStatement	return o_pop_estack ;	3715:12:117995:118014	8994998	1	True				
ANR	8995140	Identifier	o_pop_estack		8994998	0					
ANR	8995141	IfStatement	if ( stage == 0 )		8994998	2					
ANR	8995142	Condition	stage == 0	3718:12:118039:118048	8994998	0	True				
ANR	8995143	EqualityExpression	stage == 0		8994998	0		==			
ANR	8995144	Identifier	stage		8994998	0					
ANR	8995145	PrimaryExpression	0		8994998	1					
ANR	8995146	CompoundStatement		21:24:507:507	8994998	1					
ANR	8995147	ExpressionStatement	code = gs_gsave ( igs )	3719:12:118065:118085	8994998	0	True				
ANR	8995148	AssignmentExpression	code = gs_gsave ( igs )		8994998	0		=			
ANR	8995149	Identifier	code		8994998	0					
ANR	8995150	CallExpression	gs_gsave ( igs )		8994998	1					
ANR	8995151	Callee	gs_gsave		8994998	0					
ANR	8995152	Identifier	gs_gsave		8994998	0					
ANR	8995153	ArgumentList	igs		8994998	1					
ANR	8995154	Argument	igs		8994998	0					
ANR	8995155	Identifier	igs		8994998	0					
ANR	8995156	IfStatement	if ( code < 0 )		8994998	1					
ANR	8995157	Condition	code < 0	3720:16:118103:118110	8994998	0	True				
ANR	8995158	RelationalExpression	code < 0		8994998	0		<			
ANR	8995159	Identifier	code		8994998	0					
ANR	8995160	PrimaryExpression	0		8994998	1					
ANR	8995161	ReturnStatement	return code ;	3721:16:118129:118140	8994998	1	True				
ANR	8995162	Identifier	code		8994998	0					
ANR	8995163	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"	3723:12:118155:118205	8994998	2	True				
ANR	8995164	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"		8994998	0		=			
ANR	8995165	Identifier	code		8994998	0					
ANR	8995166	CallExpression	"validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"		8994998	1					
ANR	8995167	Callee	validate_spaces		8994998	0					
ANR	8995168	Identifier	validate_spaces		8994998	0					
ANR	8995169	ArgumentList	i_ctx_p		8994998	1					
ANR	8995170	Argument	i_ctx_p		8994998	0					
ANR	8995171	Identifier	i_ctx_p		8994998	0					
ANR	8995172	Argument	& space [ 1 ]		8994998	1					
ANR	8995173	UnaryOperationExpression	& space [ 1 ]		8994998	0					
ANR	8995174	UnaryOperator	&		8994998	0					
ANR	8995175	ArrayIndexing	space [ 1 ]		8994998	1					
ANR	8995176	Identifier	space		8994998	0					
ANR	8995177	PrimaryExpression	1		8994998	1					
ANR	8995178	Argument	& depth		8994998	2					
ANR	8995179	UnaryOperationExpression	& depth		8994998	0					
ANR	8995180	UnaryOperator	&		8994998	0					
ANR	8995181	Identifier	depth		8994998	1					
ANR	8995182	IfStatement	if ( code < 0 )		8994998	3					
ANR	8995183	Condition	code < 0	3724:16:118223:118230	8994998	0	True				
ANR	8995184	RelationalExpression	code < 0		8994998	0		<			
ANR	8995185	Identifier	code		8994998	0					
ANR	8995186	PrimaryExpression	0		8994998	1					
ANR	8995187	CompoundStatement		27:26:689:689	8994998	1					
ANR	8995188	ExpressionStatement	( void ) gs_grestore ( igs )	3725:16:118251:118273	8994998	0	True				
ANR	8995189	CastExpression	( void ) gs_grestore ( igs )		8994998	0					
ANR	8995190	CastTarget	void		8994998	0					
ANR	8995191	CallExpression	gs_grestore ( igs )		8994998	1					
ANR	8995192	Callee	gs_grestore		8994998	0					
ANR	8995193	Identifier	gs_grestore		8994998	0					
ANR	8995194	ArgumentList	igs		8994998	1					
ANR	8995195	Argument	igs		8994998	0					
ANR	8995196	Identifier	igs		8994998	0					
ANR	8995197	ReturnStatement	return code ;	3726:16:118291:118302	8994998	1	True				
ANR	8995198	Identifier	code		8994998	0					
ANR	8995199	ExpressionStatement	check_estack ( 1 )	3733:12:118607:118622	8994998	4	True				
ANR	8995200	CallExpression	check_estack ( 1 )		8994998	0					
ANR	8995201	Callee	check_estack		8994998	0					
ANR	8995202	Identifier	check_estack		8994998	0					
ANR	8995203	ArgumentList	1		8994998	1					
ANR	8995204	Argument	1		8994998	0					
ANR	8995205	PrimaryExpression	1		8994998	0					
ANR	8995206	ExpressionStatement	push ( 1 )	3734:12:118636:118643	8994998	5	True				
ANR	8995207	CallExpression	push ( 1 )		8994998	0					
ANR	8995208	Callee	push		8994998	0					
ANR	8995209	Identifier	push		8994998	0					
ANR	8995210	ArgumentList	1		8994998	1					
ANR	8995211	Argument	1		8994998	0					
ANR	8995212	PrimaryExpression	1		8994998	0					
ANR	8995213	ExpressionStatement	push_op_estack ( devicencolorants_cont )	3736:12:118747:118784	8994998	6	True				
ANR	8995214	CallExpression	push_op_estack ( devicencolorants_cont )		8994998	0					
ANR	8995215	Callee	push_op_estack		8994998	0					
ANR	8995216	Identifier	push_op_estack		8994998	0					
ANR	8995217	ArgumentList	devicencolorants_cont		8994998	1					
ANR	8995218	Argument	devicencolorants_cont		8994998	0					
ANR	8995219	Identifier	devicencolorants_cont		8994998	0					
ANR	8995220	ExpressionStatement	"make_int ( pstage , 1 )"	3738:12:118799:118818	8994998	7	True				
ANR	8995221	CallExpression	"make_int ( pstage , 1 )"		8994998	0					
ANR	8995222	Callee	make_int		8994998	0					
ANR	8995223	Identifier	make_int		8994998	0					
ANR	8995224	ArgumentList	pstage		8994998	1					
ANR	8995225	Argument	pstage		8994998	0					
ANR	8995226	Identifier	pstage		8994998	0					
ANR	8995227	Argument	1		8994998	1					
ANR	8995228	PrimaryExpression	1		8994998	0					
ANR	8995229	ExpressionStatement	* op = space [ 1 ]	3739:12:118832:118846	8994998	8	True				
ANR	8995230	AssignmentExpression	* op = space [ 1 ]		8994998	0		=			
ANR	8995231	UnaryOperationExpression	* op		8994998	0					
ANR	8995232	UnaryOperator	*		8994998	0					
ANR	8995233	Identifier	op		8994998	1					
ANR	8995234	ArrayIndexing	space [ 1 ]		8994998	1					
ANR	8995235	Identifier	space		8994998	0					
ANR	8995236	PrimaryExpression	1		8994998	1					
ANR	8995237	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	3740:12:118860:118890	8994998	9	True				
ANR	8995238	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		8994998	0		=			
ANR	8995239	Identifier	code		8994998	0					
ANR	8995240	CallExpression	zsetcolorspace ( i_ctx_p )		8994998	1					
ANR	8995241	Callee	zsetcolorspace		8994998	0					
ANR	8995242	Identifier	zsetcolorspace		8994998	0					
ANR	8995243	ArgumentList	i_ctx_p		8994998	1					
ANR	8995244	Argument	i_ctx_p		8994998	0					
ANR	8995245	Identifier	i_ctx_p		8994998	0					
ANR	8995246	IfStatement	if ( code < 0 )		8994998	10					
ANR	8995247	Condition	code < 0	3741:16:118908:118915	8994998	0	True				
ANR	8995248	RelationalExpression	code < 0		8994998	0		<			
ANR	8995249	Identifier	code		8994998	0					
ANR	8995250	PrimaryExpression	0		8994998	1					
ANR	8995251	CompoundStatement		44:26:1374:1374	8994998	1					
ANR	8995252	ExpressionStatement	( void ) gs_grestore ( igs )	3742:16:118936:118958	8994998	0	True				
ANR	8995253	CastExpression	( void ) gs_grestore ( igs )		8994998	0					
ANR	8995254	CastTarget	void		8994998	0					
ANR	8995255	CallExpression	gs_grestore ( igs )		8994998	1					
ANR	8995256	Callee	gs_grestore		8994998	0					
ANR	8995257	Identifier	gs_grestore		8994998	0					
ANR	8995258	ArgumentList	igs		8994998	1					
ANR	8995259	Argument	igs		8994998	0					
ANR	8995260	Identifier	igs		8994998	0					
ANR	8995261	ReturnStatement	return code ;	3743:16:118976:118987	8994998	1	True				
ANR	8995262	Identifier	code		8994998	0					
ANR	8995263	ElseStatement	else		8994998	0					
ANR	8995264	ReturnStatement	return code ;	3745:16:119024:119035	8994998	0	True				
ANR	8995265	Identifier	code		8994998	0					
ANR	8995266	ElseStatement	else		8994998	0					
ANR	8995267	CompoundStatement		49:15:1508:1508	8994998	0					
ANR	8995268	ExpressionStatement	stage = 0	3747:12:119066:119075	8994998	0	True				
ANR	8995269	AssignmentExpression	stage = 0		8994998	0		=			
ANR	8995270	Identifier	stage		8994998	0					
ANR	8995271	PrimaryExpression	0		8994998	1					
ANR	8995272	SwitchStatement	switch ( r_type ( & space [ 0 ] ) )		8994998	1					
ANR	8995273	Condition	r_type ( & space [ 0 ] )	3749:20:119098:119114	8994998	0	True				
ANR	8995274	CallExpression	r_type ( & space [ 0 ] )		8994998	0					
ANR	8995275	Callee	r_type		8994998	0					
ANR	8995276	Identifier	r_type		8994998	0					
ANR	8995277	ArgumentList	& space [ 0 ]		8994998	1					
ANR	8995278	Argument	& space [ 0 ]		8994998	0					
ANR	8995279	UnaryOperationExpression	& space [ 0 ]		8994998	0					
ANR	8995280	UnaryOperator	&		8994998	0					
ANR	8995281	ArrayIndexing	space [ 0 ]		8994998	1					
ANR	8995282	Identifier	space		8994998	0					
ANR	8995283	PrimaryExpression	0		8994998	1					
ANR	8995284	CompoundStatement		52:39:1573:1573	8994998	1					
ANR	8995285	Label	case t_string :	3750:16:119135:119148	8994998	0	True				
ANR	8995286	Identifier	t_string		8994998	0					
ANR	8995287	ExpressionStatement	"code = name_from_string ( imemory , & space [ 0 ] , & sname )"	3751:20:119170:119221	8994998	1	True				
ANR	8995288	AssignmentExpression	"code = name_from_string ( imemory , & space [ 0 ] , & sname )"		8994998	0		=			
ANR	8995289	Identifier	code		8994998	0					
ANR	8995290	CallExpression	"name_from_string ( imemory , & space [ 0 ] , & sname )"		8994998	1					
ANR	8995291	Callee	name_from_string		8994998	0					
ANR	8995292	Identifier	name_from_string		8994998	0					
ANR	8995293	ArgumentList	imemory		8994998	1					
ANR	8995294	Argument	imemory		8994998	0					
ANR	8995295	Identifier	imemory		8994998	0					
ANR	8995296	Argument	& space [ 0 ]		8994998	1					
ANR	8995297	UnaryOperationExpression	& space [ 0 ]		8994998	0					
ANR	8995298	UnaryOperator	&		8994998	0					
ANR	8995299	ArrayIndexing	space [ 0 ]		8994998	1					
ANR	8995300	Identifier	space		8994998	0					
ANR	8995301	PrimaryExpression	0		8994998	1					
ANR	8995302	Argument	& sname		8994998	2					
ANR	8995303	UnaryOperationExpression	& sname		8994998	0					
ANR	8995304	UnaryOperator	&		8994998	0					
ANR	8995305	Identifier	sname		8994998	1					
ANR	8995306	IfStatement	if ( code < 0 )		8994998	2					
ANR	8995307	Condition	code < 0	3752:24:119247:119254	8994998	0	True				
ANR	8995308	RelationalExpression	code < 0		8994998	0		<			
ANR	8995309	Identifier	code		8994998	0					
ANR	8995310	PrimaryExpression	0		8994998	1					
ANR	8995311	CompoundStatement		55:33:1712:1712	8994998	1					
ANR	8995312	ExpressionStatement	( void ) gs_grestore ( igs )	3753:24:119282:119304	8994998	0	True				
ANR	8995313	CastExpression	( void ) gs_grestore ( igs )		8994998	0					
ANR	8995314	CastTarget	void		8994998	0					
ANR	8995315	CallExpression	gs_grestore ( igs )		8994998	1					
ANR	8995316	Callee	gs_grestore		8994998	0					
ANR	8995317	Identifier	gs_grestore		8994998	0					
ANR	8995318	ArgumentList	igs		8994998	1					
ANR	8995319	Argument	igs		8994998	0					
ANR	8995320	Identifier	igs		8994998	0					
ANR	8995321	ReturnStatement	return code ;	3754:24:119330:119341	8994998	1	True				
ANR	8995322	Identifier	code		8994998	0					
ANR	8995323	ExpressionStatement	"sep_name = name_index ( imemory , & sname )"	3756:20:119385:119423	8994998	3	True				
ANR	8995324	AssignmentExpression	"sep_name = name_index ( imemory , & sname )"		8994998	0		=			
ANR	8995325	Identifier	sep_name		8994998	0					
ANR	8995326	CallExpression	"name_index ( imemory , & sname )"		8994998	1					
ANR	8995327	Callee	name_index		8994998	0					
ANR	8995328	Identifier	name_index		8994998	0					
ANR	8995329	ArgumentList	imemory		8994998	1					
ANR	8995330	Argument	imemory		8994998	0					
ANR	8995331	Identifier	imemory		8994998	0					
ANR	8995332	Argument	& sname		8994998	1					
ANR	8995333	UnaryOperationExpression	& sname		8994998	0					
ANR	8995334	UnaryOperator	&		8994998	0					
ANR	8995335	Identifier	sname		8994998	1					
ANR	8995336	BreakStatement	break ;	3757:20:119445:119450	8994998	4	True				
ANR	8995337	Label	case t_name :	3758:16:119468:119479	8994998	5	True				
ANR	8995338	Identifier	t_name		8994998	0					
ANR	8995339	ExpressionStatement	"sep_name = name_index ( imemory , & space [ 0 ] )"	3759:20:119501:119542	8994998	6	True				
ANR	8995340	AssignmentExpression	"sep_name = name_index ( imemory , & space [ 0 ] )"		8994998	0		=			
ANR	8995341	Identifier	sep_name		8994998	0					
ANR	8995342	CallExpression	"name_index ( imemory , & space [ 0 ] )"		8994998	1					
ANR	8995343	Callee	name_index		8994998	0					
ANR	8995344	Identifier	name_index		8994998	0					
ANR	8995345	ArgumentList	imemory		8994998	1					
ANR	8995346	Argument	imemory		8994998	0					
ANR	8995347	Identifier	imemory		8994998	0					
ANR	8995348	Argument	& space [ 0 ]		8994998	1					
ANR	8995349	UnaryOperationExpression	& space [ 0 ]		8994998	0					
ANR	8995350	UnaryOperator	&		8994998	0					
ANR	8995351	ArrayIndexing	space [ 0 ]		8994998	1					
ANR	8995352	Identifier	space		8994998	0					
ANR	8995353	PrimaryExpression	0		8994998	1					
ANR	8995354	BreakStatement	break ;	3760:20:119564:119569	8994998	7	True				
ANR	8995355	Label	default :	3761:16:119587:119594	8994998	8	True				
ANR	8995356	Identifier	default		8994998	0					
ANR	8995357	ExpressionStatement	( void ) gs_grestore ( igs )	3762:20:119616:119638	8994998	9	True				
ANR	8995358	CastExpression	( void ) gs_grestore ( igs )		8994998	0					
ANR	8995359	CastTarget	void		8994998	0					
ANR	8995360	CallExpression	gs_grestore ( igs )		8994998	1					
ANR	8995361	Callee	gs_grestore		8994998	0					
ANR	8995362	Identifier	gs_grestore		8994998	0					
ANR	8995363	ArgumentList	igs		8994998	1					
ANR	8995364	Argument	igs		8994998	0					
ANR	8995365	Identifier	igs		8994998	0					
ANR	8995366	ExpressionStatement	return_error ( gs_error_typecheck )	3763:20:119660:119692	8994998	10	True				
ANR	8995367	CallExpression	return_error ( gs_error_typecheck )		8994998	0					
ANR	8995368	Callee	return_error		8994998	0					
ANR	8995369	Identifier	return_error		8994998	0					
ANR	8995370	ArgumentList	gs_error_typecheck		8994998	1					
ANR	8995371	Argument	gs_error_typecheck		8994998	0					
ANR	8995372	Identifier	gs_error_typecheck		8994998	0					
ANR	8995373	BreakStatement	break ;	3764:20:119714:119719	8994998	11	True				
ANR	8995374	ExpressionStatement	"make_int ( pindex , index )"	3767:12:119748:119771	8994998	2	True				
ANR	8995375	CallExpression	"make_int ( pindex , index )"		8994998	0					
ANR	8995376	Callee	make_int		8994998	0					
ANR	8995377	Identifier	make_int		8994998	0					
ANR	8995378	ArgumentList	pindex		8994998	1					
ANR	8995379	Argument	pindex		8994998	0					
ANR	8995380	Identifier	pindex		8994998	0					
ANR	8995381	Argument	index		8994998	1					
ANR	8995382	Identifier	index		8994998	0					
ANR	8995383	ExpressionStatement	"make_int ( pstage , stage )"	3768:12:119785:119808	8994998	3	True				
ANR	8995384	CallExpression	"make_int ( pstage , stage )"		8994998	0					
ANR	8995385	Callee	make_int		8994998	0					
ANR	8995386	Identifier	make_int		8994998	0					
ANR	8995387	ArgumentList	pstage		8994998	1					
ANR	8995388	Argument	pstage		8994998	0					
ANR	8995389	Identifier	pstage		8994998	0					
ANR	8995390	Argument	stage		8994998	1					
ANR	8995391	Identifier	stage		8994998	0					
ANR	8995392	ExpressionStatement	"gs_attachattributecolorspace ( sep_name , igs )"	3769:12:119822:119865	8994998	4	True				
ANR	8995393	CallExpression	"gs_attachattributecolorspace ( sep_name , igs )"		8994998	0					
ANR	8995394	Callee	gs_attachattributecolorspace		8994998	0					
ANR	8995395	Identifier	gs_attachattributecolorspace		8994998	0					
ANR	8995396	ArgumentList	sep_name		8994998	1					
ANR	8995397	Argument	sep_name		8994998	0					
ANR	8995398	Identifier	sep_name		8994998	0					
ANR	8995399	Argument	igs		8994998	1					
ANR	8995400	Identifier	igs		8994998	0					
ANR	8995401	ExpressionStatement	code = gs_grestore ( igs )	3771:12:119880:119903	8994998	5	True				
ANR	8995402	AssignmentExpression	code = gs_grestore ( igs )		8994998	0		=			
ANR	8995403	Identifier	code		8994998	0					
ANR	8995404	CallExpression	gs_grestore ( igs )		8994998	1					
ANR	8995405	Callee	gs_grestore		8994998	0					
ANR	8995406	Identifier	gs_grestore		8994998	0					
ANR	8995407	ArgumentList	igs		8994998	1					
ANR	8995408	Argument	igs		8994998	0					
ANR	8995409	Identifier	igs		8994998	0					
ANR	8995410	IfStatement	if ( code < 0 )		8994998	6					
ANR	8995411	Condition	code < 0	3772:16:119921:119928	8994998	0	True				
ANR	8995412	RelationalExpression	code < 0		8994998	0		<			
ANR	8995413	Identifier	code		8994998	0					
ANR	8995414	PrimaryExpression	0		8994998	1					
ANR	8995415	ReturnStatement	return code ;	3773:16:119947:119958	8994998	1	True				
ANR	8995416	Identifier	code		8994998	0					
ANR	8995417	Condition	1	3776:10:119986:119986	8994998	1	True				
ANR	8995418	PrimaryExpression	1		8994998	0					
ANR	8995419	ReturnType	static int		8994998	1					
ANR	8995420	Identifier	devicencolorants_cont		8994998	2					
ANR	8995421	ParameterList	i_ctx_t * i_ctx_p		8994998	3					
ANR	8995422	Parameter	i_ctx_t * i_ctx_p	3697:33:117525:117540	8994998	0	True				
ANR	8995423	ParameterType	i_ctx_t *		8994998	0					
ANR	8995424	Identifier	i_ctx_p		8994998	1					
ANR	8995425	CFGEntryNode	ENTRY		8994998		True				
ANR	8995426	CFGExitNode	EXIT		8994998		True				
ANR	8995427	Symbol	code		8994998						
ANR	8995428	Symbol	esp		8994998						
ANR	8995429	Symbol	* op		8994998						
ANR	8995430	Symbol	sep_name		8994998						
ANR	8995431	Symbol	* pindex		8994998						
ANR	8995432	Symbol	o_pop_estack		8994998						
ANR	8995433	Symbol	& sname		8994998						
ANR	8995434	Symbol	osp		8994998						
ANR	8995435	Symbol	space		8994998						
ANR	8995436	Symbol	name_from_string		8994998						
ANR	8995437	Symbol	gs_grestore		8994998						
ANR	8995438	Symbol	pstage -> value . intval		8994998						
ANR	8995439	Symbol	gs_gsave		8994998						
ANR	8995440	Symbol	gs_error_typecheck		8994998						
ANR	8995441	Symbol	igs		8994998						
ANR	8995442	Symbol	zsetcolorspace		8994998						
ANR	8995443	Symbol	name_index		8994998						
ANR	8995444	Symbol	dict		8994998						
ANR	8995445	Symbol	imemory		8994998						
ANR	8995446	Symbol	& space		8994998						
ANR	8995447	Symbol	dict_next		8994998						
ANR	8995448	Symbol	r_type		8994998						
ANR	8995449	Symbol	op		8994998						
ANR	8995450	Symbol	validate_spaces		8994998						
ANR	8995451	Symbol	* pstage		8994998						
ANR	8995452	Symbol	pstage		8994998						
ANR	8995453	Symbol	index		8994998						
ANR	8995454	Symbol	ep		8994998						
ANR	8995455	Symbol	pstage -> value		8994998						
ANR	8995456	Symbol	devicencolorants_cont		8994998						
ANR	8995457	Symbol	& depth		8994998						
ANR	8995458	Symbol	depth		8994998						
ANR	8995459	Symbol	stage		8994998						
ANR	8995460	Symbol	i_ctx_p		8994998						
ANR	8995461	Symbol	sname		8994998						
ANR	8995462	Symbol	* space		8994998						
ANR	8995463	Symbol	& dict		8994998						
ANR	8995464	Symbol	pindex		8994998						
ANR	8995465	Symbol	pindex -> value		8994998						
ANR	8995466	Symbol	pdict		8994998						
ANR	8995467	Symbol	pindex -> value . intval		8994998						
ANR	8995468	Function	setdevicenspace	3779:0:119993:127738							
ANR	8995469	FunctionDef	"setdevicenspace (i_ctx_t * i_ctx_p , ref * devicenspace , int * stage , int * cont , int CIESubst)"		8995468	0					
ANR	8995470	CompoundStatement		3780:0:120095:127738	8995468	0					
ANR	8995471	IdentifierDeclStatement	os_ptr op = osp ;	3781:4:120101:120117	8995468	0	True				
ANR	8995472	IdentifierDecl	op = osp		8995468	0					
ANR	8995473	IdentifierDeclType	os_ptr		8995468	0					
ANR	8995474	Identifier	op		8995468	1					
ANR	8995475	AssignmentExpression	op = osp		8995468	2		=			
ANR	8995476	Identifier	osp		8995468	0					
ANR	8995477	Identifier	osp		8995468	1					
ANR	8995478	IdentifierDeclStatement	"int code = 0 , num_components , i ;"	3782:4:120156:120187	8995468	1	True				
ANR	8995479	IdentifierDecl	code = 0		8995468	0					
ANR	8995480	IdentifierDeclType	int		8995468	0					
ANR	8995481	Identifier	code		8995468	1					
ANR	8995482	AssignmentExpression	code = 0		8995468	2		=			
ANR	8995483	Identifier	code		8995468	0					
ANR	8995484	PrimaryExpression	0		8995468	1					
ANR	8995485	IdentifierDecl	num_components		8995468	1					
ANR	8995486	IdentifierDeclType	int		8995468	0					
ANR	8995487	Identifier	num_components		8995468	1					
ANR	8995488	IdentifierDecl	i		8995468	2					
ANR	8995489	IdentifierDeclType	int		8995468	0					
ANR	8995490	Identifier	i		8995468	1					
ANR	8995491	IdentifierDeclStatement	"ref namesarray , proc , sname , tname , sref ;"	3783:4:120193:120233	8995468	2	True				
ANR	8995492	IdentifierDecl	namesarray		8995468	0					
ANR	8995493	IdentifierDeclType	ref		8995468	0					
ANR	8995494	Identifier	namesarray		8995468	1					
ANR	8995495	IdentifierDecl	proc		8995468	1					
ANR	8995496	IdentifierDeclType	ref		8995468	0					
ANR	8995497	Identifier	proc		8995468	1					
ANR	8995498	IdentifierDecl	sname		8995468	2					
ANR	8995499	IdentifierDeclType	ref		8995468	0					
ANR	8995500	Identifier	sname		8995468	1					
ANR	8995501	IdentifierDecl	tname		8995468	3					
ANR	8995502	IdentifierDeclType	ref		8995468	0					
ANR	8995503	Identifier	tname		8995468	1					
ANR	8995504	IdentifierDecl	sref		8995468	4					
ANR	8995505	IdentifierDeclType	ref		8995468	0					
ANR	8995506	Identifier	sref		8995468	1					
ANR	8995507	IdentifierDeclStatement	ref_colorspace cspace_old ;	3784:4:120239:120264	8995468	3	True				
ANR	8995508	IdentifierDecl	cspace_old		8995468	0					
ANR	8995509	IdentifierDeclType	ref_colorspace		8995468	0					
ANR	8995510	Identifier	cspace_old		8995468	1					
ANR	8995511	IdentifierDeclStatement	gs_color_space * pcs ;	3785:4:120270:120289	8995468	4	True				
ANR	8995512	IdentifierDecl	* pcs		8995468	0					
ANR	8995513	IdentifierDeclType	gs_color_space *		8995468	0					
ANR	8995514	Identifier	pcs		8995468	1					
ANR	8995515	IdentifierDeclStatement	gs_color_space * pacs ;	3786:4:120295:120316	8995468	5	True				
ANR	8995516	IdentifierDecl	* pacs		8995468	0					
ANR	8995517	IdentifierDeclType	gs_color_space *		8995468	0					
ANR	8995518	Identifier	pacs		8995468	1					
ANR	8995519	IdentifierDeclStatement	gs_function_t * pfn = NULL ;	3787:4:120322:120347	8995468	6	True				
ANR	8995520	IdentifierDecl	* pfn = NULL		8995468	0					
ANR	8995521	IdentifierDeclType	gs_function_t *		8995468	0					
ANR	8995522	Identifier	pfn		8995468	1					
ANR	8995523	AssignmentExpression	* pfn = NULL		8995468	2		=			
ANR	8995524	Identifier	NULL		8995468	0					
ANR	8995525	Identifier	NULL		8995468	1					
ANR	8995526	IdentifierDeclStatement	gs_separation_name * names ;	3788:4:120353:120378	8995468	7	True				
ANR	8995527	IdentifierDecl	* names		8995468	0					
ANR	8995528	IdentifierDeclType	gs_separation_name *		8995468	0					
ANR	8995529	Identifier	names		8995468	1					
ANR	8995530	IdentifierDeclStatement	gs_client_color cc ;	3789:4:120384:120402	8995468	8	True				
ANR	8995531	IdentifierDecl	cc		8995468	0					
ANR	8995532	IdentifierDeclType	gs_client_color		8995468	0					
ANR	8995533	Identifier	cc		8995468	1					
ANR	8995534	IfStatement	if ( i_ctx_p -> language_level < 3 )		8995468	9					
ANR	8995535	Condition	i_ctx_p -> language_level < 3	3791:8:120413:120439	8995468	0	True				
ANR	8995536	RelationalExpression	i_ctx_p -> language_level < 3		8995468	0		<			
ANR	8995537	PtrMemberAccess	i_ctx_p -> language_level		8995468	0					
ANR	8995538	Identifier	i_ctx_p		8995468	0					
ANR	8995539	Identifier	language_level		8995468	1					
ANR	8995540	PrimaryExpression	3		8995468	1					
ANR	8995541	ExpressionStatement	return_error ( gs_error_undefined )	3792:8:120450:120482	8995468	1	True				
ANR	8995542	CallExpression	return_error ( gs_error_undefined )		8995468	0					
ANR	8995543	Callee	return_error		8995468	0					
ANR	8995544	Identifier	return_error		8995468	0					
ANR	8995545	ArgumentList	gs_error_undefined		8995468	1					
ANR	8995546	Argument	gs_error_undefined		8995468	0					
ANR	8995547	Identifier	gs_error_undefined		8995468	0					
ANR	8995548	ExpressionStatement	* cont = 0	3794:4:120489:120498	8995468	10	True				
ANR	8995549	AssignmentExpression	* cont = 0		8995468	0		=			
ANR	8995550	UnaryOperationExpression	* cont		8995468	0					
ANR	8995551	UnaryOperator	*		8995468	0					
ANR	8995552	Identifier	cont		8995468	1					
ANR	8995553	PrimaryExpression	0		8995468	1					
ANR	8995554	IfStatement	if ( ( * stage ) == 2 )		8995468	11					
ANR	8995555	Condition	( * stage ) == 2	3795:8:120508:120520	8995468	0	True				
ANR	8995556	EqualityExpression	( * stage ) == 2		8995468	0		==			
ANR	8995557	UnaryOperationExpression	* stage		8995468	0					
ANR	8995558	UnaryOperator	*		8995468	0					
ANR	8995559	Identifier	stage		8995468	1					
ANR	8995560	PrimaryExpression	2		8995468	1					
ANR	8995561	CompoundStatement		16:23:427:427	8995468	1					
ANR	8995562	IfStatement	if ( r_size ( devicenspace ) == 5 )		8995468	0					
ANR	8995563	Condition	r_size ( devicenspace ) == 5	3796:12:120537:120561	8995468	0	True				
ANR	8995564	EqualityExpression	r_size ( devicenspace ) == 5		8995468	0		==			
ANR	8995565	CallExpression	r_size ( devicenspace )		8995468	0					
ANR	8995566	Callee	r_size		8995468	0					
ANR	8995567	Identifier	r_size		8995468	0					
ANR	8995568	ArgumentList	devicenspace		8995468	1					
ANR	8995569	Argument	devicenspace		8995468	0					
ANR	8995570	Identifier	devicenspace		8995468	0					
ANR	8995571	PrimaryExpression	5		8995468	1					
ANR	8995572	CompoundStatement		25:9:977:991	8995468	1					
ANR	8995573	IdentifierDeclStatement	ref * colorants ;	3804:9:121073:121087	8995468	0	True				
ANR	8995574	IdentifierDecl	* colorants		8995468	0					
ANR	8995575	IdentifierDeclType	ref *		8995468	0					
ANR	8995576	Identifier	colorants		8995468	1					
ANR	8995577	ExpressionStatement	"code = array_get ( imemory , devicenspace , 4 , & sref )"	3806:12:121102:121151	8995468	1	True				
ANR	8995578	AssignmentExpression	"code = array_get ( imemory , devicenspace , 4 , & sref )"		8995468	0		=			
ANR	8995579	Identifier	code		8995468	0					
ANR	8995580	CallExpression	"array_get ( imemory , devicenspace , 4 , & sref )"		8995468	1					
ANR	8995581	Callee	array_get		8995468	0					
ANR	8995582	Identifier	array_get		8995468	0					
ANR	8995583	ArgumentList	imemory		8995468	1					
ANR	8995584	Argument	imemory		8995468	0					
ANR	8995585	Identifier	imemory		8995468	0					
ANR	8995586	Argument	devicenspace		8995468	1					
ANR	8995587	Identifier	devicenspace		8995468	0					
ANR	8995588	Argument	4		8995468	2					
ANR	8995589	PrimaryExpression	4		8995468	0					
ANR	8995590	Argument	& sref		8995468	3					
ANR	8995591	UnaryOperationExpression	& sref		8995468	0					
ANR	8995592	UnaryOperator	&		8995468	0					
ANR	8995593	Identifier	sref		8995468	1					
ANR	8995594	IfStatement	if ( code < 0 )		8995468	2					
ANR	8995595	Condition	code < 0	3807:16:121169:121176	8995468	0	True				
ANR	8995596	RelationalExpression	code < 0		8995468	0		<			
ANR	8995597	Identifier	code		8995468	0					
ANR	8995598	PrimaryExpression	0		8995468	1					
ANR	8995599	ReturnStatement	return code ;	3808:16:121195:121206	8995468	1	True				
ANR	8995600	Identifier	code		8995468	0					
ANR	8995601	IfStatement	"if ( ! r_has_type ( & sref , t_dictionary ) )"		8995468	3					
ANR	8995602	Condition	"! r_has_type ( & sref , t_dictionary )"	3809:16:121224:121255	8995468	0	True				
ANR	8995603	UnaryOperationExpression	"! r_has_type ( & sref , t_dictionary )"		8995468	0					
ANR	8995604	UnaryOperator	!		8995468	0					
ANR	8995605	CallExpression	"r_has_type ( & sref , t_dictionary )"		8995468	1					
ANR	8995606	Callee	r_has_type		8995468	0					
ANR	8995607	Identifier	r_has_type		8995468	0					
ANR	8995608	ArgumentList	& sref		8995468	1					
ANR	8995609	Argument	& sref		8995468	0					
ANR	8995610	UnaryOperationExpression	& sref		8995468	0					
ANR	8995611	UnaryOperator	&		8995468	0					
ANR	8995612	Identifier	sref		8995468	1					
ANR	8995613	Argument	t_dictionary		8995468	1					
ANR	8995614	Identifier	t_dictionary		8995468	0					
ANR	8995615	CompoundStatement		30:50:1162:1162	8995468	1					
ANR	8995616	ExpressionStatement	* stage = 0	3810:16:121276:121286	8995468	0	True				
ANR	8995617	AssignmentExpression	* stage = 0		8995468	0		=			
ANR	8995618	UnaryOperationExpression	* stage		8995468	0					
ANR	8995619	UnaryOperator	*		8995468	0					
ANR	8995620	Identifier	stage		8995468	1					
ANR	8995621	PrimaryExpression	0		8995468	1					
ANR	8995622	ReturnStatement	return 0 ;	3811:16:121304:121312	8995468	1	True				
ANR	8995623	PrimaryExpression	0		8995468	0					
ANR	8995624	IfStatement	"if ( dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0 )"		8995468	4					
ANR	8995625	Condition	"dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0"	3813:16:121344:121396	8995468	0	True				
ANR	8995626	RelationalExpression	"dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0"		8995468	0		<=			
ANR	8995627	CallExpression	"dict_find_string ( & sref , ""Colorants"" , & colorants )"		8995468	0					
ANR	8995628	Callee	dict_find_string		8995468	0					
ANR	8995629	Identifier	dict_find_string		8995468	0					
ANR	8995630	ArgumentList	& sref		8995468	1					
ANR	8995631	Argument	& sref		8995468	0					
ANR	8995632	UnaryOperationExpression	& sref		8995468	0					
ANR	8995633	UnaryOperator	&		8995468	0					
ANR	8995634	Identifier	sref		8995468	1					
ANR	8995635	Argument	"""Colorants"""		8995468	1					
ANR	8995636	PrimaryExpression	"""Colorants"""		8995468	0					
ANR	8995637	Argument	& colorants		8995468	2					
ANR	8995638	UnaryOperationExpression	& colorants		8995468	0					
ANR	8995639	UnaryOperator	&		8995468	0					
ANR	8995640	Identifier	colorants		8995468	1					
ANR	8995641	PrimaryExpression	0		8995468	1					
ANR	8995642	CompoundStatement		34:71:1303:1303	8995468	1					
ANR	8995643	ExpressionStatement	* stage = 0	3814:16:121417:121427	8995468	0	True				
ANR	8995644	AssignmentExpression	* stage = 0		8995468	0		=			
ANR	8995645	UnaryOperationExpression	* stage		8995468	0					
ANR	8995646	UnaryOperator	*		8995468	0					
ANR	8995647	Identifier	stage		8995468	1					
ANR	8995648	PrimaryExpression	0		8995468	1					
ANR	8995649	ReturnStatement	return 0 ;	3815:16:121445:121453	8995468	1	True				
ANR	8995650	PrimaryExpression	0		8995468	0					
ANR	8995651	IfStatement	"if ( ! r_has_type ( colorants , t_dictionary ) )"		8995468	5					
ANR	8995652	Condition	"! r_has_type ( colorants , t_dictionary )"	3817:16:121485:121520	8995468	0	True				
ANR	8995653	UnaryOperationExpression	"! r_has_type ( colorants , t_dictionary )"		8995468	0					
ANR	8995654	UnaryOperator	!		8995468	0					
ANR	8995655	CallExpression	"r_has_type ( colorants , t_dictionary )"		8995468	1					
ANR	8995656	Callee	r_has_type		8995468	0					
ANR	8995657	Identifier	r_has_type		8995468	0					
ANR	8995658	ArgumentList	colorants		8995468	1					
ANR	8995659	Argument	colorants		8995468	0					
ANR	8995660	Identifier	colorants		8995468	0					
ANR	8995661	Argument	t_dictionary		8995468	1					
ANR	8995662	Identifier	t_dictionary		8995468	0					
ANR	8995663	CompoundStatement		38:54:1427:1427	8995468	1					
ANR	8995664	ExpressionStatement	* stage = 0	3818:16:121541:121551	8995468	0	True				
ANR	8995665	AssignmentExpression	* stage = 0		8995468	0		=			
ANR	8995666	UnaryOperationExpression	* stage		8995468	0					
ANR	8995667	UnaryOperator	*		8995468	0					
ANR	8995668	Identifier	stage		8995468	1					
ANR	8995669	PrimaryExpression	0		8995468	1					
ANR	8995670	ReturnStatement	return 0 ;	3819:16:121569:121577	8995468	1	True				
ANR	8995671	PrimaryExpression	0		8995468	0					
ANR	8995672	ExpressionStatement	* stage = 3	3821:12:121605:121615	8995468	6	True				
ANR	8995673	AssignmentExpression	* stage = 3		8995468	0		=			
ANR	8995674	UnaryOperationExpression	* stage		8995468	0					
ANR	8995675	UnaryOperator	*		8995468	0					
ANR	8995676	Identifier	stage		8995468	1					
ANR	8995677	PrimaryExpression	3		8995468	1					
ANR	8995678	ExpressionStatement	* cont = 1	3822:12:121629:121638	8995468	7	True				
ANR	8995679	AssignmentExpression	* cont = 1		8995468	0		=			
ANR	8995680	UnaryOperationExpression	* cont		8995468	0					
ANR	8995681	UnaryOperator	*		8995468	0					
ANR	8995682	Identifier	cont		8995468	1					
ANR	8995683	PrimaryExpression	1		8995468	1					
ANR	8995684	ExpressionStatement	check_estack ( 5 )	3823:12:121652:121667	8995468	8	True				
ANR	8995685	CallExpression	check_estack ( 5 )		8995468	0					
ANR	8995686	Callee	check_estack		8995468	0					
ANR	8995687	Identifier	check_estack		8995468	0					
ANR	8995688	ArgumentList	5		8995468	1					
ANR	8995689	Argument	5		8995468	0					
ANR	8995690	PrimaryExpression	5		8995468	0					
ANR	8995691	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	3824:12:121681:121723	8995468	9	True				
ANR	8995692	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		8995468	0					
ANR	8995693	Callee	push_mark_estack		8995468	0					
ANR	8995694	Identifier	push_mark_estack		8995468	0					
ANR	8995695	ArgumentList	es_other		8995468	1					
ANR	8995696	Argument	es_other		8995468	0					
ANR	8995697	Identifier	es_other		8995468	0					
ANR	8995698	Argument	colour_cleanup		8995468	1					
ANR	8995699	Identifier	colour_cleanup		8995468	0					
ANR	8995700	ExpressionStatement	esp ++	3825:12:121737:121742	8995468	10	True				
ANR	8995701	PostIncDecOperationExpression	esp ++		8995468	0					
ANR	8995702	Identifier	esp		8995468	0					
ANR	8995703	IncDec	++		8995468	1					
ANR	8995704	ExpressionStatement	"make_int ( esp , dict_first ( colorants ) )"	3827:12:121830:121866	8995468	11	True				
ANR	8995705	CallExpression	"make_int ( esp , dict_first ( colorants ) )"		8995468	0					
ANR	8995706	Callee	make_int		8995468	0					
ANR	8995707	Identifier	make_int		8995468	0					
ANR	8995708	ArgumentList	esp		8995468	1					
ANR	8995709	Argument	esp		8995468	0					
ANR	8995710	Identifier	esp		8995468	0					
ANR	8995711	Argument	dict_first ( colorants )		8995468	1					
ANR	8995712	CallExpression	dict_first ( colorants )		8995468	0					
ANR	8995713	Callee	dict_first		8995468	0					
ANR	8995714	Identifier	dict_first		8995468	0					
ANR	8995715	ArgumentList	colorants		8995468	1					
ANR	8995716	Argument	colorants		8995468	0					
ANR	8995717	Identifier	colorants		8995468	0					
ANR	8995718	ExpressionStatement	esp ++	3828:12:121880:121885	8995468	12	True				
ANR	8995719	PostIncDecOperationExpression	esp ++		8995468	0					
ANR	8995720	Identifier	esp		8995468	0					
ANR	8995721	IncDec	++		8995468	1					
ANR	8995722	ExpressionStatement	"make_int ( esp , 0 )"	3830:12:121950:121966	8995468	13	True				
ANR	8995723	CallExpression	"make_int ( esp , 0 )"		8995468	0					
ANR	8995724	Callee	make_int		8995468	0					
ANR	8995725	Identifier	make_int		8995468	0					
ANR	8995726	ArgumentList	esp		8995468	1					
ANR	8995727	Argument	esp		8995468	0					
ANR	8995728	Identifier	esp		8995468	0					
ANR	8995729	Argument	0		8995468	1					
ANR	8995730	PrimaryExpression	0		8995468	0					
ANR	8995731	ExpressionStatement	esp ++	3831:12:121980:121985	8995468	14	True				
ANR	8995732	PostIncDecOperationExpression	esp ++		8995468	0					
ANR	8995733	Identifier	esp		8995468	0					
ANR	8995734	IncDec	++		8995468	1					
ANR	8995735	ExpressionStatement	"ref_assign ( esp , colorants )"	3834:12:122074:122100	8995468	15	True				
ANR	8995736	CallExpression	"ref_assign ( esp , colorants )"		8995468	0					
ANR	8995737	Callee	ref_assign		8995468	0					
ANR	8995738	Identifier	ref_assign		8995468	0					
ANR	8995739	ArgumentList	esp		8995468	1					
ANR	8995740	Argument	esp		8995468	0					
ANR	8995741	Identifier	esp		8995468	0					
ANR	8995742	Argument	colorants		8995468	1					
ANR	8995743	Identifier	colorants		8995468	0					
ANR	8995744	ExpressionStatement	push_op_estack ( devicencolorants_cont )	3835:12:122114:122151	8995468	16	True				
ANR	8995745	CallExpression	push_op_estack ( devicencolorants_cont )		8995468	0					
ANR	8995746	Callee	push_op_estack		8995468	0					
ANR	8995747	Identifier	push_op_estack		8995468	0					
ANR	8995748	ArgumentList	devicencolorants_cont		8995468	1					
ANR	8995749	Argument	devicencolorants_cont		8995468	0					
ANR	8995750	Identifier	devicencolorants_cont		8995468	0					
ANR	8995751	ReturnStatement	return o_push_estack ;	3836:12:122165:122185	8995468	17	True				
ANR	8995752	Identifier	o_push_estack		8995468	0					
ANR	8995753	ElseStatement	else		8995468	0					
ANR	8995754	CompoundStatement		58:15:2106:2106	8995468	0					
ANR	8995755	ExpressionStatement	* stage = 0	3838:12:122216:122226	8995468	0	True				
ANR	8995756	AssignmentExpression	* stage = 0		8995468	0		=			
ANR	8995757	UnaryOperationExpression	* stage		8995468	0					
ANR	8995758	UnaryOperator	*		8995468	0					
ANR	8995759	Identifier	stage		8995468	1					
ANR	8995760	PrimaryExpression	0		8995468	1					
ANR	8995761	ReturnStatement	return 0 ;	3839:12:122240:122248	8995468	1	True				
ANR	8995762	PrimaryExpression	0		8995468	0					
ANR	8995763	IfStatement	if ( ( * stage ) == 3 )		8995468	12					
ANR	8995764	Condition	( * stage ) == 3	3842:8:122274:122286	8995468	0	True				
ANR	8995765	EqualityExpression	( * stage ) == 3		8995468	0		==			
ANR	8995766	UnaryOperationExpression	* stage		8995468	0					
ANR	8995767	UnaryOperator	*		8995468	0					
ANR	8995768	Identifier	stage		8995468	1					
ANR	8995769	PrimaryExpression	3		8995468	1					
ANR	8995770	CompoundStatement		63:23:2193:2193	8995468	1					
ANR	8995771	ExpressionStatement	* stage = 0	3843:8:122299:122309	8995468	0	True				
ANR	8995772	AssignmentExpression	* stage = 0		8995468	0		=			
ANR	8995773	UnaryOperationExpression	* stage		8995468	0					
ANR	8995774	UnaryOperator	*		8995468	0					
ANR	8995775	Identifier	stage		8995468	1					
ANR	8995776	PrimaryExpression	0		8995468	1					
ANR	8995777	ReturnStatement	return 0 ;	3844:8:122319:122327	8995468	1	True				
ANR	8995778	PrimaryExpression	0		8995468	0					
ANR	8995779	IfStatement	if ( ( * stage ) == 0 )		8995468	13					
ANR	8995780	Condition	( * stage ) == 0	3846:8:122343:122355	8995468	0	True				
ANR	8995781	EqualityExpression	( * stage ) == 0		8995468	0		==			
ANR	8995782	UnaryOperationExpression	* stage		8995468	0					
ANR	8995783	UnaryOperator	*		8995468	0					
ANR	8995784	Identifier	stage		8995468	1					
ANR	8995785	PrimaryExpression	0		8995468	1					
ANR	8995786	CompoundStatement		67:23:2262:2262	8995468	1					
ANR	8995787	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3847:8:122368:122417	8995468	0	True				
ANR	8995788	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		8995468	0		=			
ANR	8995789	Identifier	code		8995468	0					
ANR	8995790	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		8995468	1					
ANR	8995791	Callee	array_get		8995468	0					
ANR	8995792	Identifier	array_get		8995468	0					
ANR	8995793	ArgumentList	imemory		8995468	1					
ANR	8995794	Argument	imemory		8995468	0					
ANR	8995795	Identifier	imemory		8995468	0					
ANR	8995796	Argument	devicenspace		8995468	1					
ANR	8995797	Identifier	devicenspace		8995468	0					
ANR	8995798	Argument	3		8995468	2					
ANR	8995799	PrimaryExpression	3		8995468	0					
ANR	8995800	Argument	& proc		8995468	3					
ANR	8995801	UnaryOperationExpression	& proc		8995468	0					
ANR	8995802	UnaryOperator	&		8995468	0					
ANR	8995803	Identifier	proc		8995468	1					
ANR	8995804	IfStatement	if ( code < 0 )		8995468	1					
ANR	8995805	Condition	code < 0	3848:12:122431:122438	8995468	0	True				
ANR	8995806	RelationalExpression	code < 0		8995468	0		<			
ANR	8995807	Identifier	code		8995468	0					
ANR	8995808	PrimaryExpression	0		8995468	1					
ANR	8995809	ReturnStatement	return code ;	3849:12:122453:122464	8995468	1	True				
ANR	8995810	Identifier	code		8995468	0					
ANR	8995811	ExpressionStatement	pfn = ref_function ( & proc )	3850:8:122474:122499	8995468	2	True				
ANR	8995812	AssignmentExpression	pfn = ref_function ( & proc )		8995468	0		=			
ANR	8995813	Identifier	pfn		8995468	0					
ANR	8995814	CallExpression	ref_function ( & proc )		8995468	1					
ANR	8995815	Callee	ref_function		8995468	0					
ANR	8995816	Identifier	ref_function		8995468	0					
ANR	8995817	ArgumentList	& proc		8995468	1					
ANR	8995818	Argument	& proc		8995468	0					
ANR	8995819	UnaryOperationExpression	& proc		8995468	0					
ANR	8995820	UnaryOperator	&		8995468	0					
ANR	8995821	Identifier	proc		8995468	1					
ANR	8995822	IfStatement	if ( pfn == NULL )		8995468	3					
ANR	8995823	Condition	pfn == NULL	3851:12:122513:122523	8995468	0	True				
ANR	8995824	EqualityExpression	pfn == NULL		8995468	0		==			
ANR	8995825	Identifier	pfn		8995468	0					
ANR	8995826	Identifier	NULL		8995468	1					
ANR	8995827	CompoundStatement		72:25:2430:2430	8995468	1					
ANR	8995828	ExpressionStatement	"code = convert_transform ( i_ctx_p , devicenspace , & proc )"	3853:12:122606:122660	8995468	0	True				
ANR	8995829	AssignmentExpression	"code = convert_transform ( i_ctx_p , devicenspace , & proc )"		8995468	0		=			
ANR	8995830	Identifier	code		8995468	0					
ANR	8995831	CallExpression	"convert_transform ( i_ctx_p , devicenspace , & proc )"		8995468	1					
ANR	8995832	Callee	convert_transform		8995468	0					
ANR	8995833	Identifier	convert_transform		8995468	0					
ANR	8995834	ArgumentList	i_ctx_p		8995468	1					
ANR	8995835	Argument	i_ctx_p		8995468	0					
ANR	8995836	Identifier	i_ctx_p		8995468	0					
ANR	8995837	Argument	devicenspace		8995468	1					
ANR	8995838	Identifier	devicenspace		8995468	0					
ANR	8995839	Argument	& proc		8995468	2					
ANR	8995840	UnaryOperationExpression	& proc		8995468	0					
ANR	8995841	UnaryOperator	&		8995468	0					
ANR	8995842	Identifier	proc		8995468	1					
ANR	8995843	IfStatement	if ( code < 0 )		8995468	1					
ANR	8995844	Condition	code < 0	3854:16:122678:122685	8995468	0	True				
ANR	8995845	RelationalExpression	code < 0		8995468	0		<			
ANR	8995846	Identifier	code		8995468	0					
ANR	8995847	PrimaryExpression	0		8995468	1					
ANR	8995848	ReturnStatement	return code ;	3855:16:122704:122715	8995468	1	True				
ANR	8995849	Identifier	code		8995468	0					
ANR	8995850	IfStatement	if ( code > 0 )		8995468	2					
ANR	8995851	Condition	code > 0	3856:16:122733:122740	8995468	0	True				
ANR	8995852	RelationalExpression	code > 0		8995468	0		>			
ANR	8995853	Identifier	code		8995468	0					
ANR	8995854	PrimaryExpression	0		8995468	1					
ANR	8995855	CompoundStatement		77:26:2647:2647	8995468	1					
ANR	8995856	ExpressionStatement	* cont = 1	3857:16:122761:122770	8995468	0	True				
ANR	8995857	AssignmentExpression	* cont = 1		8995468	0		=			
ANR	8995858	UnaryOperationExpression	* cont		8995468	0					
ANR	8995859	UnaryOperator	*		8995468	0					
ANR	8995860	Identifier	cont		8995468	1					
ANR	8995861	PrimaryExpression	1		8995468	1					
ANR	8995862	ExpressionStatement	* stage = 1	3858:16:122788:122798	8995468	1	True				
ANR	8995863	AssignmentExpression	* stage = 1		8995468	0		=			
ANR	8995864	UnaryOperationExpression	* stage		8995468	0					
ANR	8995865	UnaryOperator	*		8995468	0					
ANR	8995866	Identifier	stage		8995468	1					
ANR	8995867	PrimaryExpression	1		8995468	1					
ANR	8995868	ReturnStatement	return code ;	3859:16:122816:122827	8995468	2	True				
ANR	8995869	Identifier	code		8995468	0					
ANR	8995870	ExpressionStatement	op = osp	3865:12:123095:123103	8995468	3	True				
ANR	8995871	AssignmentExpression	op = osp		8995468	0		=			
ANR	8995872	Identifier	op		8995468	0					
ANR	8995873	Identifier	osp		8995468	1					
ANR	8995874	ExpressionStatement	pfn = ref_function ( op )	3866:12:123117:123139	8995468	4	True				
ANR	8995875	AssignmentExpression	pfn = ref_function ( op )		8995468	0		=			
ANR	8995876	Identifier	pfn		8995468	0					
ANR	8995877	CallExpression	ref_function ( op )		8995468	1					
ANR	8995878	Callee	ref_function		8995468	0					
ANR	8995879	Identifier	ref_function		8995468	0					
ANR	8995880	ArgumentList	op		8995468	1					
ANR	8995881	Argument	op		8995468	0					
ANR	8995882	Identifier	op		8995468	0					
ANR	8995883	ExpressionStatement	pop ( 1 )	3867:12:123153:123160	8995468	5	True				
ANR	8995884	CallExpression	pop ( 1 )		8995468	0					
ANR	8995885	Callee	pop		8995468	0					
ANR	8995886	Identifier	pop		8995468	0					
ANR	8995887	ArgumentList	1		8995468	1					
ANR	8995888	Argument	1		8995468	0					
ANR	8995889	PrimaryExpression	1		8995468	0					
ANR	8995890	ElseStatement	else		8995468	0					
ANR	8995891	CompoundStatement		90:11:3087:3087	8995468	0					
ANR	8995892	ExpressionStatement	op = osp	3871:8:123253:123261	8995468	0	True				
ANR	8995893	AssignmentExpression	op = osp		8995468	0		=			
ANR	8995894	Identifier	op		8995468	0					
ANR	8995895	Identifier	osp		8995468	1					
ANR	8995896	ExpressionStatement	pfn = ref_function ( op )	3872:8:123271:123293	8995468	1	True				
ANR	8995897	AssignmentExpression	pfn = ref_function ( op )		8995468	0		=			
ANR	8995898	Identifier	pfn		8995468	0					
ANR	8995899	CallExpression	ref_function ( op )		8995468	1					
ANR	8995900	Callee	ref_function		8995468	0					
ANR	8995901	Identifier	ref_function		8995468	0					
ANR	8995902	ArgumentList	op		8995468	1					
ANR	8995903	Argument	op		8995468	0					
ANR	8995904	Identifier	op		8995468	0					
ANR	8995905	ExpressionStatement	pop ( 1 )	3873:8:123303:123310	8995468	2	True				
ANR	8995906	CallExpression	pop ( 1 )		8995468	0					
ANR	8995907	Callee	pop		8995468	0					
ANR	8995908	Identifier	pop		8995468	0					
ANR	8995909	ArgumentList	1		8995468	1					
ANR	8995910	Argument	1		8995468	0					
ANR	8995911	PrimaryExpression	1		8995468	0					
ANR	8995912	ExpressionStatement	* stage = 2	3876:4:123323:123333	8995468	14	True				
ANR	8995913	AssignmentExpression	* stage = 2		8995468	0		=			
ANR	8995914	UnaryOperationExpression	* stage		8995468	0					
ANR	8995915	UnaryOperator	*		8995468	0					
ANR	8995916	Identifier	stage		8995468	1					
ANR	8995917	PrimaryExpression	2		8995468	1					
ANR	8995918	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"	3878:4:123340:123395	8995468	15	True				
ANR	8995919	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"		8995468	0		=			
ANR	8995920	Identifier	code		8995468	0					
ANR	8995921	CallExpression	"array_get ( imemory , devicenspace , 1 , & namesarray )"		8995468	1					
ANR	8995922	Callee	array_get		8995468	0					
ANR	8995923	Identifier	array_get		8995468	0					
ANR	8995924	ArgumentList	imemory		8995468	1					
ANR	8995925	Argument	imemory		8995468	0					
ANR	8995926	Identifier	imemory		8995468	0					
ANR	8995927	Argument	devicenspace		8995468	1					
ANR	8995928	Identifier	devicenspace		8995468	0					
ANR	8995929	Argument	1		8995468	2					
ANR	8995930	PrimaryExpression	1		8995468	0					
ANR	8995931	Argument	& namesarray		8995468	3					
ANR	8995932	UnaryOperationExpression	& namesarray		8995468	0					
ANR	8995933	UnaryOperator	&		8995468	0					
ANR	8995934	Identifier	namesarray		8995468	1					
ANR	8995935	IfStatement	if ( code < 0 )		8995468	16					
ANR	8995936	Condition	code < 0	3879:8:123405:123412	8995468	0	True				
ANR	8995937	RelationalExpression	code < 0		8995468	0		<			
ANR	8995938	Identifier	code		8995468	0					
ANR	8995939	PrimaryExpression	0		8995468	1					
ANR	8995940	ReturnStatement	return code ;	3880:8:123423:123434	8995468	1	True				
ANR	8995941	Identifier	code		8995468	0					
ANR	8995942	ExpressionStatement	num_components = r_size ( & namesarray )	3881:4:123440:123476	8995468	17	True				
ANR	8995943	AssignmentExpression	num_components = r_size ( & namesarray )		8995468	0		=			
ANR	8995944	Identifier	num_components		8995468	0					
ANR	8995945	CallExpression	r_size ( & namesarray )		8995468	1					
ANR	8995946	Callee	r_size		8995468	0					
ANR	8995947	Identifier	r_size		8995468	0					
ANR	8995948	ArgumentList	& namesarray		8995468	1					
ANR	8995949	Argument	& namesarray		8995468	0					
ANR	8995950	UnaryOperationExpression	& namesarray		8995468	0					
ANR	8995951	UnaryOperator	&		8995468	0					
ANR	8995952	Identifier	namesarray		8995468	1					
ANR	8995953	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3883:4:123563:123595	8995468	18	True				
ANR	8995954	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		8995468	0		=			
ANR	8995955	Identifier	pacs		8995468	0					
ANR	8995956	CallExpression	gs_currentcolorspace ( igs )		8995468	1					
ANR	8995957	Callee	gs_currentcolorspace		8995468	0					
ANR	8995958	Identifier	gs_currentcolorspace		8995468	0					
ANR	8995959	ArgumentList	igs		8995468	1					
ANR	8995960	Argument	igs		8995468	0					
ANR	8995961	Identifier	igs		8995468	0					
ANR	8995962	IfStatement	if ( num_components == 1 )		8995468	19					
ANR	8995963	Condition	num_components == 1	3885:8:123606:123624	8995468	0	True				
ANR	8995964	EqualityExpression	num_components == 1		8995468	0		==			
ANR	8995965	Identifier	num_components		8995468	0					
ANR	8995966	PrimaryExpression	1		8995468	1					
ANR	8995967	CompoundStatement		106:29:3531:3531	8995468	1					
ANR	8995968	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"	3886:8:123637:123685	8995468	0	True				
ANR	8995969	CallExpression	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		8995468	0					
ANR	8995970	Callee	array_get		8995468	0					
ANR	8995971	Identifier	array_get		8995468	0					
ANR	8995972	ArgumentList	imemory		8995468	1					
ANR	8995973	Argument	imemory		8995468	0					
ANR	8995974	Identifier	imemory		8995468	0					
ANR	8995975	Argument	& namesarray		8995468	1					
ANR	8995976	UnaryOperationExpression	& namesarray		8995468	0					
ANR	8995977	UnaryOperator	&		8995468	0					
ANR	8995978	Identifier	namesarray		8995468	1					
ANR	8995979	Argument	( long ) 0		8995468	2					
ANR	8995980	CastExpression	( long ) 0		8995468	0					
ANR	8995981	CastTarget	long		8995468	0					
ANR	8995982	PrimaryExpression	0		8995468	1					
ANR	8995983	Argument	& sname		8995468	3					
ANR	8995984	UnaryOperationExpression	& sname		8995468	0					
ANR	8995985	UnaryOperator	&		8995468	0					
ANR	8995986	Identifier	sname		8995468	1					
ANR	8995987	SwitchStatement	switch ( r_type ( & sname ) )		8995468	1					
ANR	8995988	Condition	r_type ( & sname )	3887:16:123703:123716	8995468	0	True				
ANR	8995989	CallExpression	r_type ( & sname )		8995468	0					
ANR	8995990	Callee	r_type		8995468	0					
ANR	8995991	Identifier	r_type		8995468	0					
ANR	8995992	ArgumentList	& sname		8995468	1					
ANR	8995993	Argument	& sname		8995468	0					
ANR	8995994	UnaryOperationExpression	& sname		8995468	0					
ANR	8995995	UnaryOperator	&		8995468	0					
ANR	8995996	Identifier	sname		8995468	1					
ANR	8995997	CompoundStatement		108:32:3623:3623	8995468	1					
ANR	8995998	Label	case t_string :	3888:12:123733:123746	8995468	0	True				
ANR	8995999	Identifier	t_string		8995468	0					
ANR	8996000	ExpressionStatement	tname = sname	3889:16:123764:123777	8995468	1	True				
ANR	8996001	AssignmentExpression	tname = sname		8995468	0		=			
ANR	8996002	Identifier	tname		8995468	0					
ANR	8996003	Identifier	sname		8995468	1					
ANR	8996004	BreakStatement	break ;	3890:16:123795:123800	8995468	2	True				
ANR	8996005	Label	case t_name :	3891:12:123814:123825	8995468	3	True				
ANR	8996006	Identifier	t_name		8995468	0					
ANR	8996007	ExpressionStatement	"name_string_ref ( imemory , & sname , & tname )"	3892:16:123843:123883	8995468	4	True				
ANR	8996008	CallExpression	"name_string_ref ( imemory , & sname , & tname )"		8995468	0					
ANR	8996009	Callee	name_string_ref		8995468	0					
ANR	8996010	Identifier	name_string_ref		8995468	0					
ANR	8996011	ArgumentList	imemory		8995468	1					
ANR	8996012	Argument	imemory		8995468	0					
ANR	8996013	Identifier	imemory		8995468	0					
ANR	8996014	Argument	& sname		8995468	1					
ANR	8996015	UnaryOperationExpression	& sname		8995468	0					
ANR	8996016	UnaryOperator	&		8995468	0					
ANR	8996017	Identifier	sname		8995468	1					
ANR	8996018	Argument	& tname		8995468	2					
ANR	8996019	UnaryOperationExpression	& tname		8995468	0					
ANR	8996020	UnaryOperator	&		8995468	0					
ANR	8996021	Identifier	tname		8995468	1					
ANR	8996022	BreakStatement	break ;	3893:16:123901:123906	8995468	5	True				
ANR	8996023	Label	default :	3894:12:123920:123927	8995468	6	True				
ANR	8996024	Identifier	default		8995468	0					
ANR	8996025	ExpressionStatement	return_error ( gs_error_typecheck )	3895:16:123945:123977	8995468	7	True				
ANR	8996026	CallExpression	return_error ( gs_error_typecheck )		8995468	0					
ANR	8996027	Callee	return_error		8995468	0					
ANR	8996028	Identifier	return_error		8995468	0					
ANR	8996029	ArgumentList	gs_error_typecheck		8995468	1					
ANR	8996030	Argument	gs_error_typecheck		8995468	0					
ANR	8996031	Identifier	gs_error_typecheck		8995468	0					
ANR	8996032	BreakStatement	break ;	3896:16:123995:124000	8995468	8	True				
ANR	8996033	IfStatement	"if ( strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3 )"		8995468	2					
ANR	8996034	Condition	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3"	3898:12:124024:124107	8995468	0	True				
ANR	8996035	AndExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3"		8995468	0		&&			
ANR	8996036	EqualityExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0"		8995468	0		==			
ANR	8996037	CallExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 )"		8995468	0					
ANR	8996038	Callee	strncmp		8995468	0					
ANR	8996039	Identifier	strncmp		8995468	0					
ANR	8996040	ArgumentList	( const char * ) tname . value . const_bytes		8995468	1					
ANR	8996041	Argument	( const char * ) tname . value . const_bytes		8995468	0					
ANR	8996042	CastExpression	( const char * ) tname . value . const_bytes		8995468	0					
ANR	8996043	CastTarget	const char *		8995468	0					
ANR	8996044	MemberAccess	tname . value . const_bytes		8995468	1					
ANR	8996045	MemberAccess	tname . value		8995468	0					
ANR	8996046	Identifier	tname		8995468	0					
ANR	8996047	Identifier	value		8995468	1					
ANR	8996048	Identifier	const_bytes		8995468	1					
ANR	8996049	Argument	"""All"""		8995468	1					
ANR	8996050	PrimaryExpression	"""All"""		8995468	0					
ANR	8996051	Argument	3		8995468	2					
ANR	8996052	PrimaryExpression	3		8995468	0					
ANR	8996053	PrimaryExpression	0		8995468	1					
ANR	8996054	EqualityExpression	r_size ( & tname ) == 3		8995468	1		==			
ANR	8996055	CallExpression	r_size ( & tname )		8995468	0					
ANR	8996056	Callee	r_size		8995468	0					
ANR	8996057	Identifier	r_size		8995468	0					
ANR	8996058	ArgumentList	& tname		8995468	1					
ANR	8996059	Argument	& tname		8995468	0					
ANR	8996060	UnaryOperationExpression	& tname		8995468	0					
ANR	8996061	UnaryOperator	&		8995468	0					
ANR	8996062	Identifier	tname		8995468	1					
ANR	8996063	PrimaryExpression	3		8995468	1					
ANR	8996064	CompoundStatement		120:12:4028:4052	8995468	1					
ANR	8996065	IdentifierDeclStatement	separation_type sep_type ;	3899:12:124124:124148	8995468	0	True				
ANR	8996066	IdentifierDecl	sep_type		8995468	0					
ANR	8996067	IdentifierDeclType	separation_type		8995468	0					
ANR	8996068	Identifier	sep_type		8995468	1					
ANR	8996069	ExpressionStatement	sep_type = SEP_ALL	3904:12:124310:124328	8995468	1	True				
ANR	8996070	AssignmentExpression	sep_type = SEP_ALL		8995468	0		=			
ANR	8996071	Identifier	sep_type		8995468	0					
ANR	8996072	Identifier	SEP_ALL		8995468	1					
ANR	8996073	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3907:12:124432:124464	8995468	2	True				
ANR	8996074	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		8995468	0		=			
ANR	8996075	Identifier	pacs		8995468	0					
ANR	8996076	CallExpression	gs_currentcolorspace ( igs )		8995468	1					
ANR	8996077	Callee	gs_currentcolorspace		8995468	0					
ANR	8996078	Identifier	gs_currentcolorspace		8995468	0					
ANR	8996079	ArgumentList	igs		8995468	1					
ANR	8996080	Argument	igs		8995468	0					
ANR	8996081	Identifier	igs		8995468	0					
ANR	8996082	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3909:12:124479:124513	8995468	3	True				
ANR	8996083	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		8995468	0		=			
ANR	8996084	Identifier	cspace_old		8995468	0					
ANR	8996085	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	1					
ANR	8996086	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996087	Identifier	istate		8995468	0					
ANR	8996088	Identifier	colorspace		8995468	1					
ANR	8996089	PrimaryExpression	0		8995468	1					
ANR	8996090	ExpressionStatement	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"	3911:12:124591:124643	8995468	4	True				
ANR	8996091	AssignmentExpression	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"		8995468	0		=			
ANR	8996092	Identifier	code		8995468	0					
ANR	8996093	CallExpression	"gs_cspace_new_Separation ( & pcs , pacs , imemory )"		8995468	1					
ANR	8996094	Callee	gs_cspace_new_Separation		8995468	0					
ANR	8996095	Identifier	gs_cspace_new_Separation		8995468	0					
ANR	8996096	ArgumentList	& pcs		8995468	1					
ANR	8996097	Argument	& pcs		8995468	0					
ANR	8996098	UnaryOperationExpression	& pcs		8995468	0					
ANR	8996099	UnaryOperator	&		8995468	0					
ANR	8996100	Identifier	pcs		8995468	1					
ANR	8996101	Argument	pacs		8995468	1					
ANR	8996102	Identifier	pacs		8995468	0					
ANR	8996103	Argument	imemory		8995468	2					
ANR	8996104	Identifier	imemory		8995468	0					
ANR	8996105	IfStatement	if ( code < 0 )		8995468	5					
ANR	8996106	Condition	code < 0	3912:16:124661:124668	8995468	0	True				
ANR	8996107	RelationalExpression	code < 0		8995468	0		<			
ANR	8996108	Identifier	code		8995468	0					
ANR	8996109	PrimaryExpression	0		8995468	1					
ANR	8996110	ReturnStatement	return code ;	3913:16:124687:124698	8995468	1	True				
ANR	8996111	Identifier	code		8995468	0					
ANR	8996112	ExpressionStatement	pcs -> params . separation . sep_type = sep_type	3914:12:124712:124754	8995468	6	True				
ANR	8996113	AssignmentExpression	pcs -> params . separation . sep_type = sep_type		8995468	0		=			
ANR	8996114	MemberAccess	pcs -> params . separation . sep_type		8995468	0					
ANR	8996115	MemberAccess	pcs -> params . separation		8995468	0					
ANR	8996116	PtrMemberAccess	pcs -> params		8995468	0					
ANR	8996117	Identifier	pcs		8995468	0					
ANR	8996118	Identifier	params		8995468	1					
ANR	8996119	Identifier	separation		8995468	1					
ANR	8996120	Identifier	sep_type		8995468	1					
ANR	8996121	Identifier	sep_type		8995468	1					
ANR	8996122	ExpressionStatement	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"	3915:12:124768:124829	8995468	7	True				
ANR	8996123	AssignmentExpression	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"		8995468	0		=			
ANR	8996124	MemberAccess	pcs -> params . separation . sep_name		8995468	0					
ANR	8996125	MemberAccess	pcs -> params . separation		8995468	0					
ANR	8996126	PtrMemberAccess	pcs -> params		8995468	0					
ANR	8996127	Identifier	pcs		8995468	0					
ANR	8996128	Identifier	params		8995468	1					
ANR	8996129	Identifier	separation		8995468	1					
ANR	8996130	Identifier	sep_name		8995468	1					
ANR	8996131	CallExpression	"name_index ( imemory , & sname )"		8995468	1					
ANR	8996132	Callee	name_index		8995468	0					
ANR	8996133	Identifier	name_index		8995468	0					
ANR	8996134	ArgumentList	imemory		8995468	1					
ANR	8996135	Argument	imemory		8995468	0					
ANR	8996136	Identifier	imemory		8995468	0					
ANR	8996137	Argument	& sname		8995468	1					
ANR	8996138	UnaryOperationExpression	& sname		8995468	0					
ANR	8996139	UnaryOperator	&		8995468	0					
ANR	8996140	Identifier	sname		8995468	1					
ANR	8996141	ExpressionStatement	pcs -> params . separation . get_colorname_string = gs_get_colorname_string	3916:12:124843:124912	8995468	8	True				
ANR	8996142	AssignmentExpression	pcs -> params . separation . get_colorname_string = gs_get_colorname_string		8995468	0		=			
ANR	8996143	MemberAccess	pcs -> params . separation . get_colorname_string		8995468	0					
ANR	8996144	MemberAccess	pcs -> params . separation		8995468	0					
ANR	8996145	PtrMemberAccess	pcs -> params		8995468	0					
ANR	8996146	Identifier	pcs		8995468	0					
ANR	8996147	Identifier	params		8995468	1					
ANR	8996148	Identifier	separation		8995468	1					
ANR	8996149	Identifier	get_colorname_string		8995468	1					
ANR	8996150	Identifier	gs_get_colorname_string		8995468	1					
ANR	8996151	ExpressionStatement	"code = array_get ( imemory , & namesarray , ( long ) 0 , & sname )"	3917:12:124926:124981	8995468	9	True				
ANR	8996152	AssignmentExpression	"code = array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		8995468	0		=			
ANR	8996153	Identifier	code		8995468	0					
ANR	8996154	CallExpression	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		8995468	1					
ANR	8996155	Callee	array_get		8995468	0					
ANR	8996156	Identifier	array_get		8995468	0					
ANR	8996157	ArgumentList	imemory		8995468	1					
ANR	8996158	Argument	imemory		8995468	0					
ANR	8996159	Identifier	imemory		8995468	0					
ANR	8996160	Argument	& namesarray		8995468	1					
ANR	8996161	UnaryOperationExpression	& namesarray		8995468	0					
ANR	8996162	UnaryOperator	&		8995468	0					
ANR	8996163	Identifier	namesarray		8995468	1					
ANR	8996164	Argument	( long ) 0		8995468	2					
ANR	8996165	CastExpression	( long ) 0		8995468	0					
ANR	8996166	CastTarget	long		8995468	0					
ANR	8996167	PrimaryExpression	0		8995468	1					
ANR	8996168	Argument	& sname		8995468	3					
ANR	8996169	UnaryOperationExpression	& sname		8995468	0					
ANR	8996170	UnaryOperator	&		8995468	0					
ANR	8996171	Identifier	sname		8995468	1					
ANR	8996172	IfStatement	if ( code < 0 )		8995468	10					
ANR	8996173	Condition	code < 0	3918:16:124999:125006	8995468	0	True				
ANR	8996174	RelationalExpression	code < 0		8995468	0		<			
ANR	8996175	Identifier	code		8995468	0					
ANR	8996176	PrimaryExpression	0		8995468	1					
ANR	8996177	ReturnStatement	return code ;	3919:16:125025:125036	8995468	1	True				
ANR	8996178	Identifier	code		8995468	0					
ANR	8996179	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = sname	3920:12:125050:125115	8995468	11	True				
ANR	8996180	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = sname		8995468	0		=			
ANR	8996181	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		8995468	0					
ANR	8996182	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		8995468	0					
ANR	8996183	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8995468	0					
ANR	8996184	MemberAccess	istate -> colorspace [ 0 ] . procs		8995468	0					
ANR	8996185	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996186	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996187	Identifier	istate		8995468	0					
ANR	8996188	Identifier	colorspace		8995468	1					
ANR	8996189	PrimaryExpression	0		8995468	1					
ANR	8996190	Identifier	procs		8995468	1					
ANR	8996191	Identifier	special		8995468	1					
ANR	8996192	Identifier	separation		8995468	1					
ANR	8996193	Identifier	layer_name		8995468	1					
ANR	8996194	Identifier	sname		8995468	1					
ANR	8996195	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3921:12:125129:125178	8995468	12	True				
ANR	8996196	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		8995468	0		=			
ANR	8996197	Identifier	code		8995468	0					
ANR	8996198	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		8995468	1					
ANR	8996199	Callee	array_get		8995468	0					
ANR	8996200	Identifier	array_get		8995468	0					
ANR	8996201	ArgumentList	imemory		8995468	1					
ANR	8996202	Argument	imemory		8995468	0					
ANR	8996203	Identifier	imemory		8995468	0					
ANR	8996204	Argument	devicenspace		8995468	1					
ANR	8996205	Identifier	devicenspace		8995468	0					
ANR	8996206	Argument	3		8995468	2					
ANR	8996207	PrimaryExpression	3		8995468	0					
ANR	8996208	Argument	& proc		8995468	3					
ANR	8996209	UnaryOperationExpression	& proc		8995468	0					
ANR	8996210	UnaryOperator	&		8995468	0					
ANR	8996211	Identifier	proc		8995468	1					
ANR	8996212	IfStatement	if ( code < 0 )		8995468	13					
ANR	8996213	Condition	code < 0	3922:16:125196:125203	8995468	0	True				
ANR	8996214	RelationalExpression	code < 0		8995468	0		<			
ANR	8996215	Identifier	code		8995468	0					
ANR	8996216	PrimaryExpression	0		8995468	1					
ANR	8996217	ReturnStatement	return code ;	3923:16:125222:125233	8995468	1	True				
ANR	8996218	Identifier	code		8995468	0					
ANR	8996219	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc	3924:12:125247:125315	8995468	14	True				
ANR	8996220	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc		8995468	0		=			
ANR	8996221	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		8995468	0					
ANR	8996222	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		8995468	0					
ANR	8996223	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8995468	0					
ANR	8996224	MemberAccess	istate -> colorspace [ 0 ] . procs		8995468	0					
ANR	8996225	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996226	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996227	Identifier	istate		8995468	0					
ANR	8996228	Identifier	colorspace		8995468	1					
ANR	8996229	PrimaryExpression	0		8995468	1					
ANR	8996230	Identifier	procs		8995468	1					
ANR	8996231	Identifier	special		8995468	1					
ANR	8996232	Identifier	separation		8995468	1					
ANR	8996233	Identifier	tint_transform		8995468	1					
ANR	8996234	Identifier	proc		8995468	1					
ANR	8996235	IfStatement	if ( code >= 0 )		8995468	15					
ANR	8996236	Condition	code >= 0	3925:16:125333:125341	8995468	0	True				
ANR	8996237	RelationalExpression	code >= 0		8995468	0		>=			
ANR	8996238	Identifier	code		8995468	0					
ANR	8996239	PrimaryExpression	0		8995468	1					
ANR	8996240	ExpressionStatement	"code = gs_cspace_set_sepr_function ( pcs , pfn )"	3926:16:125360:125404	8995468	1	True				
ANR	8996241	AssignmentExpression	"code = gs_cspace_set_sepr_function ( pcs , pfn )"		8995468	0		=			
ANR	8996242	Identifier	code		8995468	0					
ANR	8996243	CallExpression	"gs_cspace_set_sepr_function ( pcs , pfn )"		8995468	1					
ANR	8996244	Callee	gs_cspace_set_sepr_function		8995468	0					
ANR	8996245	Identifier	gs_cspace_set_sepr_function		8995468	0					
ANR	8996246	ArgumentList	pcs		8995468	1					
ANR	8996247	Argument	pcs		8995468	0					
ANR	8996248	Identifier	pcs		8995468	0					
ANR	8996249	Argument	pfn		8995468	1					
ANR	8996250	Identifier	pfn		8995468	0					
ANR	8996251	IfStatement	if ( code >= 0 )		8995468	16					
ANR	8996252	Condition	code >= 0	3927:16:125422:125430	8995468	0	True				
ANR	8996253	RelationalExpression	code >= 0		8995468	0		>=			
ANR	8996254	Identifier	code		8995468	0					
ANR	8996255	PrimaryExpression	0		8995468	1					
ANR	8996256	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3928:16:125449:125482	8995468	1	True				
ANR	8996257	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8995468	0		=			
ANR	8996258	Identifier	code		8995468	0					
ANR	8996259	CallExpression	"gs_setcolorspace ( igs , pcs )"		8995468	1					
ANR	8996260	Callee	gs_setcolorspace		8995468	0					
ANR	8996261	Identifier	gs_setcolorspace		8995468	0					
ANR	8996262	ArgumentList	igs		8995468	1					
ANR	8996263	Argument	igs		8995468	0					
ANR	8996264	Identifier	igs		8995468	0					
ANR	8996265	Argument	pcs		8995468	1					
ANR	8996266	Identifier	pcs		8995468	0					
ANR	8996267	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	3930:12:125550:125597	8995468	17	True				
ANR	8996268	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		8995468	0					
ANR	8996269	Callee	rc_decrement_only_cs		8995468	0					
ANR	8996270	Identifier	rc_decrement_only_cs		8995468	0					
ANR	8996271	ArgumentList	pcs		8995468	1					
ANR	8996272	Argument	pcs		8995468	0					
ANR	8996273	Identifier	pcs		8995468	0					
ANR	8996274	Argument	"""setseparationspace"""		8995468	1					
ANR	8996275	PrimaryExpression	"""setseparationspace"""		8995468	0					
ANR	8996276	IfStatement	if ( code < 0 )		8995468	18					
ANR	8996277	Condition	code < 0	3931:16:125615:125622	8995468	0	True				
ANR	8996278	RelationalExpression	code < 0		8995468	0		<			
ANR	8996279	Identifier	code		8995468	0					
ANR	8996280	PrimaryExpression	0		8995468	1					
ANR	8996281	CompoundStatement		152:26:5529:5529	8995468	1					
ANR	8996282	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3932:16:125643:125677	8995468	0	True				
ANR	8996283	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		8995468	0		=			
ANR	8996284	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996285	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996286	Identifier	istate		8995468	0					
ANR	8996287	Identifier	colorspace		8995468	1					
ANR	8996288	PrimaryExpression	0		8995468	1					
ANR	8996289	Identifier	cspace_old		8995468	1					
ANR	8996290	ReturnStatement	return code ;	3933:16:125695:125706	8995468	1	True				
ANR	8996291	Identifier	code		8995468	0					
ANR	8996292	ExpressionStatement	cc . pattern = 0x00	3935:12:125734:125751	8995468	19	True				
ANR	8996293	AssignmentExpression	cc . pattern = 0x00		8995468	0		=			
ANR	8996294	MemberAccess	cc . pattern		8995468	0					
ANR	8996295	Identifier	cc		8995468	0					
ANR	8996296	Identifier	pattern		8995468	1					
ANR	8996297	PrimaryExpression	0x00		8995468	1					
ANR	8996298	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3936:12:125765:125789	8995468	20	True				
ANR	8996299	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		8995468	0		=			
ANR	8996300	ArrayIndexing	cc . paint . values [ 0 ]		8995468	0					
ANR	8996301	MemberAccess	cc . paint . values		8995468	0					
ANR	8996302	MemberAccess	cc . paint		8995468	0					
ANR	8996303	Identifier	cc		8995468	0					
ANR	8996304	Identifier	paint		8995468	1					
ANR	8996305	Identifier	values		8995468	1					
ANR	8996306	PrimaryExpression	0		8995468	1					
ANR	8996307	PrimaryExpression	1.0		8995468	1					
ANR	8996308	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3937:12:125803:125831	8995468	21	True				
ANR	8996309	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8995468	0		=			
ANR	8996310	Identifier	code		8995468	0					
ANR	8996311	CallExpression	"gs_setcolor ( igs , & cc )"		8995468	1					
ANR	8996312	Callee	gs_setcolor		8995468	0					
ANR	8996313	Identifier	gs_setcolor		8995468	0					
ANR	8996314	ArgumentList	igs		8995468	1					
ANR	8996315	Argument	igs		8995468	0					
ANR	8996316	Identifier	igs		8995468	0					
ANR	8996317	Argument	& cc		8995468	1					
ANR	8996318	UnaryOperationExpression	& cc		8995468	0					
ANR	8996319	UnaryOperator	&		8995468	0					
ANR	8996320	Identifier	cc		8995468	1					
ANR	8996321	ReturnStatement	return code ;	3938:12:125845:125856	8995468	22	True				
ANR	8996322	Identifier	code		8995468	0					
ANR	8996323	ExpressionStatement	"code = gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"	3941:4:125878:125943	8995468	20	True				
ANR	8996324	AssignmentExpression	"code = gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"		8995468	0		=			
ANR	8996325	Identifier	code		8995468	0					
ANR	8996326	CallExpression	"gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"		8995468	1					
ANR	8996327	Callee	gs_cspace_new_DeviceN		8995468	0					
ANR	8996328	Identifier	gs_cspace_new_DeviceN		8995468	0					
ANR	8996329	ArgumentList	& pcs		8995468	1					
ANR	8996330	Argument	& pcs		8995468	0					
ANR	8996331	UnaryOperationExpression	& pcs		8995468	0					
ANR	8996332	UnaryOperator	&		8995468	0					
ANR	8996333	Identifier	pcs		8995468	1					
ANR	8996334	Argument	num_components		8995468	1					
ANR	8996335	Identifier	num_components		8995468	0					
ANR	8996336	Argument	pacs		8995468	2					
ANR	8996337	Identifier	pacs		8995468	0					
ANR	8996338	Argument	imemory		8995468	3					
ANR	8996339	Identifier	imemory		8995468	0					
ANR	8996340	IfStatement	if ( code < 0 )		8995468	21					
ANR	8996341	Condition	code < 0	3942:8:125953:125960	8995468	0	True				
ANR	8996342	RelationalExpression	code < 0		8995468	0		<			
ANR	8996343	Identifier	code		8995468	0					
ANR	8996344	PrimaryExpression	0		8995468	1					
ANR	8996345	ReturnStatement	return code ;	3943:8:125971:125982	8995468	1	True				
ANR	8996346	Identifier	code		8995468	0					
ANR	8996347	ExpressionStatement	names = pcs -> params . device_n . names	3944:4:125988:126022	8995468	22	True				
ANR	8996348	AssignmentExpression	names = pcs -> params . device_n . names		8995468	0		=			
ANR	8996349	Identifier	names		8995468	0					
ANR	8996350	MemberAccess	pcs -> params . device_n . names		8995468	1					
ANR	8996351	MemberAccess	pcs -> params . device_n		8995468	0					
ANR	8996352	PtrMemberAccess	pcs -> params		8995468	0					
ANR	8996353	Identifier	pcs		8995468	0					
ANR	8996354	Identifier	params		8995468	1					
ANR	8996355	Identifier	device_n		8995468	1					
ANR	8996356	Identifier	names		8995468	1					
ANR	8996357	ExpressionStatement	pcs -> params . device_n . get_colorname_string = gs_get_colorname_string	3945:4:126028:126095	8995468	23	True				
ANR	8996358	AssignmentExpression	pcs -> params . device_n . get_colorname_string = gs_get_colorname_string		8995468	0		=			
ANR	8996359	MemberAccess	pcs -> params . device_n . get_colorname_string		8995468	0					
ANR	8996360	MemberAccess	pcs -> params . device_n		8995468	0					
ANR	8996361	PtrMemberAccess	pcs -> params		8995468	0					
ANR	8996362	Identifier	pcs		8995468	0					
ANR	8996363	Identifier	params		8995468	1					
ANR	8996364	Identifier	device_n		8995468	1					
ANR	8996365	Identifier	get_colorname_string		8995468	1					
ANR	8996366	Identifier	gs_get_colorname_string		8995468	1					
ANR	8996367	CompoundStatement		171:8:6078:6087	8995468	24					
ANR	8996368	IdentifierDeclStatement	uint i ;	3949:8:126158:126164	8995468	0	True				
ANR	8996369	IdentifierDecl	i		8995468	0					
ANR	8996370	IdentifierDeclType	uint		8995468	0					
ANR	8996371	Identifier	i		8995468	1					
ANR	8996372	IdentifierDeclStatement	ref sname ;	3950:8:126174:126183	8995468	1	True				
ANR	8996373	IdentifierDecl	sname		8995468	0					
ANR	8996374	IdentifierDeclType	ref		8995468	0					
ANR	8996375	Identifier	sname		8995468	1					
ANR	8996376	ForStatement	for ( i = 0 ; i < num_components ; ++ i )		8995468	2					
ANR	8996377	ForInit	i = 0 ;	3952:13:126199:126204	8995468	0	True				
ANR	8996378	AssignmentExpression	i = 0		8995468	0		=			
ANR	8996379	Identifier	i		8995468	0					
ANR	8996380	PrimaryExpression	0		8995468	1					
ANR	8996381	Condition	i < num_components	3952:20:126206:126223	8995468	1	True				
ANR	8996382	RelationalExpression	i < num_components		8995468	0		<			
ANR	8996383	Identifier	i		8995468	0					
ANR	8996384	Identifier	num_components		8995468	1					
ANR	8996385	UnaryExpression	++ i	3952:40:126226:126228	8995468	2	True				
ANR	8996386	IncDec	++		8995468	0					
ANR	8996387	Identifier	i		8995468	1					
ANR	8996388	CompoundStatement		173:45:6135:6135	8995468	3					
ANR	8996389	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) i , & sname )"	3953:12:126245:126293	8995468	0	True				
ANR	8996390	CallExpression	"array_get ( imemory , & namesarray , ( long ) i , & sname )"		8995468	0					
ANR	8996391	Callee	array_get		8995468	0					
ANR	8996392	Identifier	array_get		8995468	0					
ANR	8996393	ArgumentList	imemory		8995468	1					
ANR	8996394	Argument	imemory		8995468	0					
ANR	8996395	Identifier	imemory		8995468	0					
ANR	8996396	Argument	& namesarray		8995468	1					
ANR	8996397	UnaryOperationExpression	& namesarray		8995468	0					
ANR	8996398	UnaryOperator	&		8995468	0					
ANR	8996399	Identifier	namesarray		8995468	1					
ANR	8996400	Argument	( long ) i		8995468	2					
ANR	8996401	CastExpression	( long ) i		8995468	0					
ANR	8996402	CastTarget	long		8995468	0					
ANR	8996403	Identifier	i		8995468	1					
ANR	8996404	Argument	& sname		8995468	3					
ANR	8996405	UnaryOperationExpression	& sname		8995468	0					
ANR	8996406	UnaryOperator	&		8995468	0					
ANR	8996407	Identifier	sname		8995468	1					
ANR	8996408	SwitchStatement	switch ( r_type ( & sname ) )		8995468	1					
ANR	8996409	Condition	r_type ( & sname )	3954:20:126315:126328	8995468	0	True				
ANR	8996410	CallExpression	r_type ( & sname )		8995468	0					
ANR	8996411	Callee	r_type		8995468	0					
ANR	8996412	Identifier	r_type		8995468	0					
ANR	8996413	ArgumentList	& sname		8995468	1					
ANR	8996414	Argument	& sname		8995468	0					
ANR	8996415	UnaryOperationExpression	& sname		8995468	0					
ANR	8996416	UnaryOperator	&		8995468	0					
ANR	8996417	Identifier	sname		8995468	1					
ANR	8996418	CompoundStatement		175:36:6235:6235	8995468	1					
ANR	8996419	Label	case t_string :	3955:16:126349:126362	8995468	0	True				
ANR	8996420	Identifier	t_string		8995468	0					
ANR	8996421	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3956:20:126384:126432	8995468	1	True				
ANR	8996422	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		8995468	0		=			
ANR	8996423	Identifier	code		8995468	0					
ANR	8996424	CallExpression	"name_from_string ( imemory , & sname , & sname )"		8995468	1					
ANR	8996425	Callee	name_from_string		8995468	0					
ANR	8996426	Identifier	name_from_string		8995468	0					
ANR	8996427	ArgumentList	imemory		8995468	1					
ANR	8996428	Argument	imemory		8995468	0					
ANR	8996429	Identifier	imemory		8995468	0					
ANR	8996430	Argument	& sname		8995468	1					
ANR	8996431	UnaryOperationExpression	& sname		8995468	0					
ANR	8996432	UnaryOperator	&		8995468	0					
ANR	8996433	Identifier	sname		8995468	1					
ANR	8996434	Argument	& sname		8995468	2					
ANR	8996435	UnaryOperationExpression	& sname		8995468	0					
ANR	8996436	UnaryOperator	&		8995468	0					
ANR	8996437	Identifier	sname		8995468	1					
ANR	8996438	IfStatement	if ( code < 0 )		8995468	2					
ANR	8996439	Condition	code < 0	3957:24:126458:126465	8995468	0	True				
ANR	8996440	RelationalExpression	code < 0		8995468	0		<			
ANR	8996441	Identifier	code		8995468	0					
ANR	8996442	PrimaryExpression	0		8995468	1					
ANR	8996443	CompoundStatement		178:34:6372:6372	8995468	1					
ANR	8996444	ExpressionStatement	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"	3958:24:126494:126533	8995468	0	True				
ANR	8996445	CallExpression	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"		8995468	0					
ANR	8996446	Callee	rc_decrement_cs		8995468	0					
ANR	8996447	Identifier	rc_decrement_cs		8995468	0					
ANR	8996448	ArgumentList	pcs		8995468	1					
ANR	8996449	Argument	pcs		8995468	0					
ANR	8996450	Identifier	pcs		8995468	0					
ANR	8996451	Argument	"""setdevicenspace"""		8995468	1					
ANR	8996452	PrimaryExpression	"""setdevicenspace"""		8995468	0					
ANR	8996453	ReturnStatement	return code ;	3959:24:126559:126570	8995468	1	True				
ANR	8996454	Identifier	code		8995468	0					
ANR	8996455	Label	case t_name :	3962:16:126650:126661	8995468	3	True				
ANR	8996456	Identifier	t_name		8995468	0					
ANR	8996457	ExpressionStatement	"names [ i ] = name_index ( imemory , & sname )"	3963:20:126683:126721	8995468	4	True				
ANR	8996458	AssignmentExpression	"names [ i ] = name_index ( imemory , & sname )"		8995468	0		=			
ANR	8996459	ArrayIndexing	names [ i ]		8995468	0					
ANR	8996460	Identifier	names		8995468	0					
ANR	8996461	Identifier	i		8995468	1					
ANR	8996462	CallExpression	"name_index ( imemory , & sname )"		8995468	1					
ANR	8996463	Callee	name_index		8995468	0					
ANR	8996464	Identifier	name_index		8995468	0					
ANR	8996465	ArgumentList	imemory		8995468	1					
ANR	8996466	Argument	imemory		8995468	0					
ANR	8996467	Identifier	imemory		8995468	0					
ANR	8996468	Argument	& sname		8995468	1					
ANR	8996469	UnaryOperationExpression	& sname		8995468	0					
ANR	8996470	UnaryOperator	&		8995468	0					
ANR	8996471	Identifier	sname		8995468	1					
ANR	8996472	BreakStatement	break ;	3964:20:126743:126748	8995468	5	True				
ANR	8996473	Label	default :	3965:16:126766:126773	8995468	6	True				
ANR	8996474	Identifier	default		8995468	0					
ANR	8996475	ExpressionStatement	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"	3966:20:126795:126834	8995468	7	True				
ANR	8996476	CallExpression	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"		8995468	0					
ANR	8996477	Callee	rc_decrement_cs		8995468	0					
ANR	8996478	Identifier	rc_decrement_cs		8995468	0					
ANR	8996479	ArgumentList	pcs		8995468	1					
ANR	8996480	Argument	pcs		8995468	0					
ANR	8996481	Identifier	pcs		8995468	0					
ANR	8996482	Argument	"""setdevicenspace"""		8995468	1					
ANR	8996483	PrimaryExpression	"""setdevicenspace"""		8995468	0					
ANR	8996484	ExpressionStatement	return_error ( gs_error_typecheck )	3967:20:126856:126888	8995468	8	True				
ANR	8996485	CallExpression	return_error ( gs_error_typecheck )		8995468	0					
ANR	8996486	Callee	return_error		8995468	0					
ANR	8996487	Identifier	return_error		8995468	0					
ANR	8996488	ArgumentList	gs_error_typecheck		8995468	1					
ANR	8996489	Argument	gs_error_typecheck		8995468	0					
ANR	8996490	Identifier	gs_error_typecheck		8995468	0					
ANR	8996491	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3974:4:126979:127013	8995468	25	True				
ANR	8996492	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		8995468	0		=			
ANR	8996493	Identifier	cspace_old		8995468	0					
ANR	8996494	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	1					
ANR	8996495	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996496	Identifier	istate		8995468	0					
ANR	8996497	Identifier	colorspace		8995468	1					
ANR	8996498	PrimaryExpression	0		8995468	1					
ANR	8996499	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names = namesarray	3975:4:127019:127088	8995468	26	True				
ANR	8996500	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names = namesarray		8995468	0		=			
ANR	8996501	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names		8995468	0					
ANR	8996502	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n		8995468	0					
ANR	8996503	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8995468	0					
ANR	8996504	MemberAccess	istate -> colorspace [ 0 ] . procs		8995468	0					
ANR	8996505	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996506	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996507	Identifier	istate		8995468	0					
ANR	8996508	Identifier	colorspace		8995468	1					
ANR	8996509	PrimaryExpression	0		8995468	1					
ANR	8996510	Identifier	procs		8995468	1					
ANR	8996511	Identifier	special		8995468	1					
ANR	8996512	Identifier	device_n		8995468	1					
ANR	8996513	Identifier	layer_names		8995468	1					
ANR	8996514	Identifier	namesarray		8995468	1					
ANR	8996515	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3976:4:127094:127143	8995468	27	True				
ANR	8996516	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		8995468	0		=			
ANR	8996517	Identifier	code		8995468	0					
ANR	8996518	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		8995468	1					
ANR	8996519	Callee	array_get		8995468	0					
ANR	8996520	Identifier	array_get		8995468	0					
ANR	8996521	ArgumentList	imemory		8995468	1					
ANR	8996522	Argument	imemory		8995468	0					
ANR	8996523	Identifier	imemory		8995468	0					
ANR	8996524	Argument	devicenspace		8995468	1					
ANR	8996525	Identifier	devicenspace		8995468	0					
ANR	8996526	Argument	3		8995468	2					
ANR	8996527	PrimaryExpression	3		8995468	0					
ANR	8996528	Argument	& proc		8995468	3					
ANR	8996529	UnaryOperationExpression	& proc		8995468	0					
ANR	8996530	UnaryOperator	&		8995468	0					
ANR	8996531	Identifier	proc		8995468	1					
ANR	8996532	IfStatement	if ( code < 0 )		8995468	28					
ANR	8996533	Condition	code < 0	3977:8:127153:127160	8995468	0	True				
ANR	8996534	RelationalExpression	code < 0		8995468	0		<			
ANR	8996535	Identifier	code		8995468	0					
ANR	8996536	PrimaryExpression	0		8995468	1					
ANR	8996537	ReturnStatement	return code ;	3978:8:127171:127182	8995468	1	True				
ANR	8996538	Identifier	code		8995468	0					
ANR	8996539	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform = proc	3979:4:127188:127254	8995468	29	True				
ANR	8996540	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform = proc		8995468	0		=			
ANR	8996541	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform		8995468	0					
ANR	8996542	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n		8995468	0					
ANR	8996543	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8995468	0					
ANR	8996544	MemberAccess	istate -> colorspace [ 0 ] . procs		8995468	0					
ANR	8996545	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996546	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996547	Identifier	istate		8995468	0					
ANR	8996548	Identifier	colorspace		8995468	1					
ANR	8996549	PrimaryExpression	0		8995468	1					
ANR	8996550	Identifier	procs		8995468	1					
ANR	8996551	Identifier	special		8995468	1					
ANR	8996552	Identifier	device_n		8995468	1					
ANR	8996553	Identifier	tint_transform		8995468	1					
ANR	8996554	Identifier	proc		8995468	1					
ANR	8996555	ExpressionStatement	"code = gs_cspace_set_devn_function ( pcs , pfn )"	3980:4:127260:127304	8995468	30	True				
ANR	8996556	AssignmentExpression	"code = gs_cspace_set_devn_function ( pcs , pfn )"		8995468	0		=			
ANR	8996557	Identifier	code		8995468	0					
ANR	8996558	CallExpression	"gs_cspace_set_devn_function ( pcs , pfn )"		8995468	1					
ANR	8996559	Callee	gs_cspace_set_devn_function		8995468	0					
ANR	8996560	Identifier	gs_cspace_set_devn_function		8995468	0					
ANR	8996561	ArgumentList	pcs		8995468	1					
ANR	8996562	Argument	pcs		8995468	0					
ANR	8996563	Identifier	pcs		8995468	0					
ANR	8996564	Argument	pfn		8995468	1					
ANR	8996565	Identifier	pfn		8995468	0					
ANR	8996566	IfStatement	if ( code < 0 )		8995468	31					
ANR	8996567	Condition	code < 0	3981:8:127314:127321	8995468	0	True				
ANR	8996568	RelationalExpression	code < 0		8995468	0		<			
ANR	8996569	Identifier	code		8995468	0					
ANR	8996570	PrimaryExpression	0		8995468	1					
ANR	8996571	CompoundStatement		202:18:7228:7228	8995468	1					
ANR	8996572	ReturnStatement	return code ;	3982:8:127334:127345	8995468	0	True				
ANR	8996573	Identifier	code		8995468	0					
ANR	8996574	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3984:4:127357:127390	8995468	32	True				
ANR	8996575	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8995468	0		=			
ANR	8996576	Identifier	code		8995468	0					
ANR	8996577	CallExpression	"gs_setcolorspace ( igs , pcs )"		8995468	1					
ANR	8996578	Callee	gs_setcolorspace		8995468	0					
ANR	8996579	Identifier	gs_setcolorspace		8995468	0					
ANR	8996580	ArgumentList	igs		8995468	1					
ANR	8996581	Argument	igs		8995468	0					
ANR	8996582	Identifier	igs		8995468	0					
ANR	8996583	Argument	pcs		8995468	1					
ANR	8996584	Identifier	pcs		8995468	0					
ANR	8996585	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setdevicenspace"" )"	3986:4:127442:127486	8995468	33	True				
ANR	8996586	CallExpression	"rc_decrement_only_cs ( pcs , ""setdevicenspace"" )"		8995468	0					
ANR	8996587	Callee	rc_decrement_only_cs		8995468	0					
ANR	8996588	Identifier	rc_decrement_only_cs		8995468	0					
ANR	8996589	ArgumentList	pcs		8995468	1					
ANR	8996590	Argument	pcs		8995468	0					
ANR	8996591	Identifier	pcs		8995468	0					
ANR	8996592	Argument	"""setdevicenspace"""		8995468	1					
ANR	8996593	PrimaryExpression	"""setdevicenspace"""		8995468	0					
ANR	8996594	IfStatement	if ( code < 0 )		8995468	34					
ANR	8996595	Condition	code < 0	3987:8:127496:127503	8995468	0	True				
ANR	8996596	RelationalExpression	code < 0		8995468	0		<			
ANR	8996597	Identifier	code		8995468	0					
ANR	8996598	PrimaryExpression	0		8995468	1					
ANR	8996599	CompoundStatement		208:18:7410:7410	8995468	1					
ANR	8996600	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3988:8:127516:127550	8995468	0	True				
ANR	8996601	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		8995468	0		=			
ANR	8996602	ArrayIndexing	istate -> colorspace [ 0 ]		8995468	0					
ANR	8996603	PtrMemberAccess	istate -> colorspace		8995468	0					
ANR	8996604	Identifier	istate		8995468	0					
ANR	8996605	Identifier	colorspace		8995468	1					
ANR	8996606	PrimaryExpression	0		8995468	1					
ANR	8996607	Identifier	cspace_old		8995468	1					
ANR	8996608	ReturnStatement	return code ;	3989:8:127560:127571	8995468	1	True				
ANR	8996609	Identifier	code		8995468	0					
ANR	8996610	ExpressionStatement	cc . pattern = 0x00	3992:4:127584:127601	8995468	35	True				
ANR	8996611	AssignmentExpression	cc . pattern = 0x00		8995468	0		=			
ANR	8996612	MemberAccess	cc . pattern		8995468	0					
ANR	8996613	Identifier	cc		8995468	0					
ANR	8996614	Identifier	pattern		8995468	1					
ANR	8996615	PrimaryExpression	0x00		8995468	1					
ANR	8996616	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		8995468	36					
ANR	8996617	ForInit	i = 0 ;	3993:9:127612:127615	8995468	0	True				
ANR	8996618	AssignmentExpression	i = 0		8995468	0		=			
ANR	8996619	Identifier	i		8995468	0					
ANR	8996620	PrimaryExpression	0		8995468	1					
ANR	8996621	Condition	i < num_components	3993:13:127616:127631	8995468	1	True				
ANR	8996622	RelationalExpression	i < num_components		8995468	0		<			
ANR	8996623	Identifier	i		8995468	0					
ANR	8996624	Identifier	num_components		8995468	1					
ANR	8996625	PostIncDecOperationExpression	i ++	3993:30:127633:127635	8995468	2	True				
ANR	8996626	Identifier	i		8995468	0					
ANR	8996627	IncDec	++		8995468	1					
ANR	8996628	ExpressionStatement	cc . paint . values [ i ] = 1.0	3994:8:127646:127670	8995468	3	True				
ANR	8996629	AssignmentExpression	cc . paint . values [ i ] = 1.0		8995468	0		=			
ANR	8996630	ArrayIndexing	cc . paint . values [ i ]		8995468	0					
ANR	8996631	MemberAccess	cc . paint . values		8995468	0					
ANR	8996632	MemberAccess	cc . paint		8995468	0					
ANR	8996633	Identifier	cc		8995468	0					
ANR	8996634	Identifier	paint		8995468	1					
ANR	8996635	Identifier	values		8995468	1					
ANR	8996636	Identifier	i		8995468	1					
ANR	8996637	PrimaryExpression	1.0		8995468	1					
ANR	8996638	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3995:4:127676:127704	8995468	37	True				
ANR	8996639	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		8995468	0		=			
ANR	8996640	Identifier	code		8995468	0					
ANR	8996641	CallExpression	"gs_setcolor ( igs , & cc )"		8995468	1					
ANR	8996642	Callee	gs_setcolor		8995468	0					
ANR	8996643	Identifier	gs_setcolor		8995468	0					
ANR	8996644	ArgumentList	igs		8995468	1					
ANR	8996645	Argument	igs		8995468	0					
ANR	8996646	Identifier	igs		8995468	0					
ANR	8996647	Argument	& cc		8995468	1					
ANR	8996648	UnaryOperationExpression	& cc		8995468	0					
ANR	8996649	UnaryOperator	&		8995468	0					
ANR	8996650	Identifier	cc		8995468	1					
ANR	8996651	ExpressionStatement	* cont = 1	3996:4:127710:127719	8995468	38	True				
ANR	8996652	AssignmentExpression	* cont = 1		8995468	0		=			
ANR	8996653	UnaryOperationExpression	* cont		8995468	0					
ANR	8996654	UnaryOperator	*		8995468	0					
ANR	8996655	Identifier	cont		8995468	1					
ANR	8996656	PrimaryExpression	1		8995468	1					
ANR	8996657	ReturnStatement	return code ;	3997:4:127725:127736	8995468	39	True				
ANR	8996658	Identifier	code		8995468	0					
ANR	8996659	ReturnType	static int		8995468	1					
ANR	8996660	Identifier	setdevicenspace		8995468	2					
ANR	8996661	ParameterList	"i_ctx_t * i_ctx_p , ref * devicenspace , int * stage , int * cont , int CIESubst"		8995468	3					
ANR	8996662	Parameter	i_ctx_t * i_ctx_p	3779:27:120020:120036	8995468	0	True				
ANR	8996663	ParameterType	i_ctx_t *		8995468	0					
ANR	8996664	Identifier	i_ctx_p		8995468	1					
ANR	8996665	Parameter	ref * devicenspace	3779:46:120039:120055	8995468	1	True				
ANR	8996666	ParameterType	ref *		8995468	0					
ANR	8996667	Identifier	devicenspace		8995468	1					
ANR	8996668	Parameter	int * stage	3779:65:120058:120067	8995468	2	True				
ANR	8996669	ParameterType	int *		8995468	0					
ANR	8996670	Identifier	stage		8995468	1					
ANR	8996671	Parameter	int * cont	3779:77:120070:120078	8995468	3	True				
ANR	8996672	ParameterType	int *		8995468	0					
ANR	8996673	Identifier	cont		8995468	1					
ANR	8996674	Parameter	int CIESubst	3779:88:120081:120092	8995468	4	True				
ANR	8996675	ParameterType	int		8995468	0					
ANR	8996676	Identifier	CIESubst		8995468	1					
ANR	8996677	CFGEntryNode	ENTRY		8995468		True				
ANR	8996678	CFGExitNode	EXIT		8995468		True				
ANR	8996679	Symbol	convert_transform		8995468						
ANR	8996680	Symbol	* cc		8995468						
ANR	8996681	Symbol	pcs -> params . separation . sep_type		8995468						
ANR	8996682	Symbol	osp		8995468						
ANR	8996683	Symbol	* istate		8995468						
ANR	8996684	Symbol	name_from_string		8995468						
ANR	8996685	Symbol	strncmp		8995468						
ANR	8996686	Symbol	igs		8995468						
ANR	8996687	Symbol	pacs		8995468						
ANR	8996688	Symbol	gs_currentcolorspace		8995468						
ANR	8996689	Symbol	cont		8995468						
ANR	8996690	Symbol	r_type		8995468						
ANR	8996691	Symbol	pcs -> params . device_n . names		8995468						
ANR	8996692	Symbol	gs_cspace_new_DeviceN		8995468						
ANR	8996693	Symbol	& sref		8995468						
ANR	8996694	Symbol	i_ctx_p		8995468						
ANR	8996695	Symbol	pfn		8995468						
ANR	8996696	Symbol	cc . paint . values		8995468						
ANR	8996697	Symbol	cc . pattern		8995468						
ANR	8996698	Symbol	t_dictionary		8995468						
ANR	8996699	Symbol	ref_function		8995468						
ANR	8996700	Symbol	gs_setcolorspace		8995468						
ANR	8996701	Symbol	& sname		8995468						
ANR	8996702	Symbol	* names		8995468						
ANR	8996703	Symbol	gs_error_typecheck		8995468						
ANR	8996704	Symbol	r_size		8995468						
ANR	8996705	Symbol	colorants		8995468						
ANR	8996706	Symbol	name_index		8995468						
ANR	8996707	Symbol	CIESubst		8995468						
ANR	8996708	Symbol	* istate -> colorspace		8995468						
ANR	8996709	Symbol	cc		8995468						
ANR	8996710	Symbol	proc		8995468						
ANR	8996711	Symbol	* stage		8995468						
ANR	8996712	Symbol	array_get		8995468						
ANR	8996713	Symbol	pcs -> params		8995468						
ANR	8996714	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		8995468						
ANR	8996715	Symbol	i		8995468						
ANR	8996716	Symbol	tname		8995468						
ANR	8996717	Symbol	colour_cleanup		8995468						
ANR	8996718	Symbol	num_components		8995468						
ANR	8996719	Symbol	devicencolorants_cont		8995468						
ANR	8996720	Symbol	names		8995468						
ANR	8996721	Symbol	stage		8995468						
ANR	8996722	Symbol	sref		8995468						
ANR	8996723	Symbol	cc . paint		8995468						
ANR	8996724	Symbol	gs_cspace_new_Separation		8995468						
ANR	8996725	Symbol	istate		8995468						
ANR	8996726	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n		8995468						
ANR	8996727	Symbol	pcs -> params . device_n		8995468						
ANR	8996728	Symbol	esp		8995468						
ANR	8996729	Symbol	i_ctx_p -> language_level		8995468						
ANR	8996730	Symbol	gs_cspace_set_devn_function		8995468						
ANR	8996731	Symbol	gs_error_undefined		8995468						
ANR	8996732	Symbol	* pcs		8995468						
ANR	8996733	Symbol	& cc		8995468						
ANR	8996734	Symbol	istate -> colorspace [ 0 ] . procs . special . separation		8995468						
ANR	8996735	Symbol	es_other		8995468						
ANR	8996736	Symbol	gs_cspace_set_sepr_function		8995468						
ANR	8996737	Symbol	r_has_type		8995468						
ANR	8996738	Symbol	* cc . paint . values		8995468						
ANR	8996739	Symbol	istate -> colorspace [ 0 ] . procs		8995468						
ANR	8996740	Symbol	* i_ctx_p		8995468						
ANR	8996741	Symbol	istate -> colorspace		8995468						
ANR	8996742	Symbol	gs_get_colorname_string		8995468						
ANR	8996743	Symbol	imemory		8995468						
ANR	8996744	Symbol	devicenspace		8995468						
ANR	8996745	Symbol	NULL		8995468						
ANR	8996746	Symbol	dict_find_string		8995468						
ANR	8996747	Symbol	pcs -> params . device_n . get_colorname_string		8995468						
ANR	8996748	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		8995468						
ANR	8996749	Symbol	tname . value		8995468						
ANR	8996750	Symbol	istate -> colorspace [ 0 ] . procs . special		8995468						
ANR	8996751	Symbol	& namesarray		8995468						
ANR	8996752	Symbol	* * istate		8995468						
ANR	8996753	Symbol	& pcs		8995468						
ANR	8996754	Symbol	code		8995468						
ANR	8996755	Symbol	gs_setcolor		8995468						
ANR	8996756	Symbol	pcs -> params . separation		8995468						
ANR	8996757	Symbol	pcs -> params . separation . sep_name		8995468						
ANR	8996758	Symbol	pcs -> params . separation . get_colorname_string		8995468						
ANR	8996759	Symbol	& tname		8995468						
ANR	8996760	Symbol	o_push_estack		8995468						
ANR	8996761	Symbol	& proc		8995468						
ANR	8996762	Symbol	op		8995468						
ANR	8996763	Symbol	pcs		8995468						
ANR	8996764	Symbol	namesarray		8995468						
ANR	8996765	Symbol	& colorants		8995468						
ANR	8996766	Symbol	* cc . paint		8995468						
ANR	8996767	Symbol	dict_first		8995468						
ANR	8996768	Symbol	* i		8995468						
ANR	8996769	Symbol	* cont		8995468						
ANR	8996770	Symbol	sname		8995468						
ANR	8996771	Symbol	sep_type		8995468						
ANR	8996772	Symbol	SEP_ALL		8995468						
ANR	8996773	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform		8995468						
ANR	8996774	Symbol	cspace_old		8995468						
ANR	8996775	Symbol	tname . value . const_bytes		8995468						
ANR	8996776	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names		8995468						
ANR	8996777	Function	validatedevicenspace	3999:0:127740:130553							
ANR	8996778	FunctionDef	"validatedevicenspace (i_ctx_t * i_ctx_p , ref * * space)"		8996777	0					
ANR	8996779	CompoundStatement		4000:0:127804:130553	8996777	0					
ANR	8996780	IdentifierDeclStatement	"int i , code = 0 ;"	4001:4:127810:127825	8996777	0	True				
ANR	8996781	IdentifierDecl	i		8996777	0					
ANR	8996782	IdentifierDeclType	int		8996777	0					
ANR	8996783	Identifier	i		8996777	1					
ANR	8996784	IdentifierDecl	code = 0		8996777	1					
ANR	8996785	IdentifierDeclType	int		8996777	0					
ANR	8996786	Identifier	code		8996777	1					
ANR	8996787	AssignmentExpression	code = 0		8996777	2		=			
ANR	8996788	Identifier	code		8996777	0					
ANR	8996789	PrimaryExpression	0		8996777	1					
ANR	8996790	IdentifierDeclStatement	"ref * devicenspace = * space , proc ;"	4002:4:127831:127863	8996777	1	True				
ANR	8996791	IdentifierDecl	* devicenspace = * space		8996777	0					
ANR	8996792	IdentifierDeclType	ref *		8996777	0					
ANR	8996793	Identifier	devicenspace		8996777	1					
ANR	8996794	AssignmentExpression	* devicenspace = * space		8996777	2		=			
ANR	8996795	Identifier	devicenspace		8996777	0					
ANR	8996796	UnaryOperationExpression	* space		8996777	1					
ANR	8996797	UnaryOperator	*		8996777	0					
ANR	8996798	Identifier	space		8996777	1					
ANR	8996799	IdentifierDecl	proc		8996777	1					
ANR	8996800	IdentifierDeclType	ref		8996777	0					
ANR	8996801	Identifier	proc		8996777	1					
ANR	8996802	IdentifierDeclStatement	"ref nameref , sref , altspace , namesarray , sname ;"	4003:4:127869:127915	8996777	2	True				
ANR	8996803	IdentifierDecl	nameref		8996777	0					
ANR	8996804	IdentifierDeclType	ref		8996777	0					
ANR	8996805	Identifier	nameref		8996777	1					
ANR	8996806	IdentifierDecl	sref		8996777	1					
ANR	8996807	IdentifierDeclType	ref		8996777	0					
ANR	8996808	Identifier	sref		8996777	1					
ANR	8996809	IdentifierDecl	altspace		8996777	2					
ANR	8996810	IdentifierDeclType	ref		8996777	0					
ANR	8996811	Identifier	altspace		8996777	1					
ANR	8996812	IdentifierDecl	namesarray		8996777	3					
ANR	8996813	IdentifierDeclType	ref		8996777	0					
ANR	8996814	Identifier	namesarray		8996777	1					
ANR	8996815	IdentifierDecl	sname		8996777	4					
ANR	8996816	IdentifierDeclType	ref		8996777	0					
ANR	8996817	Identifier	sname		8996777	1					
ANR	8996818	IfStatement	if ( r_size ( devicenspace ) < 4 )		8996777	3					
ANR	8996819	Condition	r_size ( devicenspace ) < 4	4006:8:127972:127995	8996777	0	True				
ANR	8996820	RelationalExpression	r_size ( devicenspace ) < 4		8996777	0		<			
ANR	8996821	CallExpression	r_size ( devicenspace )		8996777	0					
ANR	8996822	Callee	r_size		8996777	0					
ANR	8996823	Identifier	r_size		8996777	0					
ANR	8996824	ArgumentList	devicenspace		8996777	1					
ANR	8996825	Argument	devicenspace		8996777	0					
ANR	8996826	Identifier	devicenspace		8996777	0					
ANR	8996827	PrimaryExpression	4		8996777	1					
ANR	8996828	ExpressionStatement	return_error ( gs_error_rangecheck )	4007:8:128006:128039	8996777	1	True				
ANR	8996829	CallExpression	return_error ( gs_error_rangecheck )		8996777	0					
ANR	8996830	Callee	return_error		8996777	0					
ANR	8996831	Identifier	return_error		8996777	0					
ANR	8996832	ArgumentList	gs_error_rangecheck		8996777	1					
ANR	8996833	Argument	gs_error_rangecheck		8996777	0					
ANR	8996834	Identifier	gs_error_rangecheck		8996777	0					
ANR	8996835	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"	4009:4:128093:128148	8996777	4	True				
ANR	8996836	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"		8996777	0		=			
ANR	8996837	Identifier	code		8996777	0					
ANR	8996838	CallExpression	"array_get ( imemory , devicenspace , 1 , & namesarray )"		8996777	1					
ANR	8996839	Callee	array_get		8996777	0					
ANR	8996840	Identifier	array_get		8996777	0					
ANR	8996841	ArgumentList	imemory		8996777	1					
ANR	8996842	Argument	imemory		8996777	0					
ANR	8996843	Identifier	imemory		8996777	0					
ANR	8996844	Argument	devicenspace		8996777	1					
ANR	8996845	Identifier	devicenspace		8996777	0					
ANR	8996846	Argument	1		8996777	2					
ANR	8996847	PrimaryExpression	1		8996777	0					
ANR	8996848	Argument	& namesarray		8996777	3					
ANR	8996849	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996850	UnaryOperator	&		8996777	0					
ANR	8996851	Identifier	namesarray		8996777	1					
ANR	8996852	IfStatement	if ( code < 0 )		8996777	5					
ANR	8996853	Condition	code < 0	4010:8:128158:128165	8996777	0	True				
ANR	8996854	RelationalExpression	code < 0		8996777	0		<			
ANR	8996855	Identifier	code		8996777	0					
ANR	8996856	PrimaryExpression	0		8996777	1					
ANR	8996857	ReturnStatement	return code ;	4011:8:128176:128187	8996777	1	True				
ANR	8996858	Identifier	code		8996777	0					
ANR	8996859	IfStatement	if ( ! r_is_array ( & namesarray ) )		8996777	6					
ANR	8996860	Condition	! r_is_array ( & namesarray )	4012:8:128197:128220	8996777	0	True				
ANR	8996861	UnaryOperationExpression	! r_is_array ( & namesarray )		8996777	0					
ANR	8996862	UnaryOperator	!		8996777	0					
ANR	8996863	CallExpression	r_is_array ( & namesarray )		8996777	1					
ANR	8996864	Callee	r_is_array		8996777	0					
ANR	8996865	Identifier	r_is_array		8996777	0					
ANR	8996866	ArgumentList	& namesarray		8996777	1					
ANR	8996867	Argument	& namesarray		8996777	0					
ANR	8996868	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996869	UnaryOperator	&		8996777	0					
ANR	8996870	Identifier	namesarray		8996777	1					
ANR	8996871	ExpressionStatement	return_error ( gs_error_typecheck )	4013:8:128231:128263	8996777	1	True				
ANR	8996872	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8996873	Callee	return_error		8996777	0					
ANR	8996874	Identifier	return_error		8996777	0					
ANR	8996875	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8996876	Argument	gs_error_typecheck		8996777	0					
ANR	8996877	Identifier	gs_error_typecheck		8996777	0					
ANR	8996878	IfStatement	if ( r_size ( & namesarray ) < 1 )		8996777	7					
ANR	8996879	Condition	r_size ( & namesarray ) < 1	4015:8:128315:128337	8996777	0	True				
ANR	8996880	RelationalExpression	r_size ( & namesarray ) < 1		8996777	0		<			
ANR	8996881	CallExpression	r_size ( & namesarray )		8996777	0					
ANR	8996882	Callee	r_size		8996777	0					
ANR	8996883	Identifier	r_size		8996777	0					
ANR	8996884	ArgumentList	& namesarray		8996777	1					
ANR	8996885	Argument	& namesarray		8996777	0					
ANR	8996886	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996887	UnaryOperator	&		8996777	0					
ANR	8996888	Identifier	namesarray		8996777	1					
ANR	8996889	PrimaryExpression	1		8996777	1					
ANR	8996890	ExpressionStatement	return_error ( gs_error_typecheck )	4016:8:128348:128380	8996777	1	True				
ANR	8996891	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8996892	Callee	return_error		8996777	0					
ANR	8996893	Identifier	return_error		8996777	0					
ANR	8996894	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8996895	Argument	gs_error_typecheck		8996777	0					
ANR	8996896	Identifier	gs_error_typecheck		8996777	0					
ANR	8996897	IfStatement	if ( r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN )		8996777	8					
ANR	8996898	Condition	r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN	4018:8:128445:128488	8996777	0	True				
ANR	8996899	RelationalExpression	r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN		8996777	0		>			
ANR	8996900	CallExpression	r_size ( & namesarray )		8996777	0					
ANR	8996901	Callee	r_size		8996777	0					
ANR	8996902	Identifier	r_size		8996777	0					
ANR	8996903	ArgumentList	& namesarray		8996777	1					
ANR	8996904	Argument	& namesarray		8996777	0					
ANR	8996905	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996906	UnaryOperator	&		8996777	0					
ANR	8996907	Identifier	namesarray		8996777	1					
ANR	8996908	Identifier	MAX_COMPONENTS_IN_DEVN		8996777	1					
ANR	8996909	ExpressionStatement	return_error ( gs_error_limitcheck )	4019:8:128556:128589	8996777	1	True				
ANR	8996910	CallExpression	return_error ( gs_error_limitcheck )		8996777	0					
ANR	8996911	Callee	return_error		8996777	0					
ANR	8996912	Identifier	return_error		8996777	0					
ANR	8996913	ArgumentList	gs_error_limitcheck		8996777	1					
ANR	8996914	Argument	gs_error_limitcheck		8996777	0					
ANR	8996915	Identifier	gs_error_limitcheck		8996777	0					
ANR	8996916	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	4021:4:128645:128694	8996777	9	True				
ANR	8996917	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		8996777	0		=			
ANR	8996918	Identifier	code		8996777	0					
ANR	8996919	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		8996777	1					
ANR	8996920	Callee	array_get		8996777	0					
ANR	8996921	Identifier	array_get		8996777	0					
ANR	8996922	ArgumentList	imemory		8996777	1					
ANR	8996923	Argument	imemory		8996777	0					
ANR	8996924	Identifier	imemory		8996777	0					
ANR	8996925	Argument	devicenspace		8996777	1					
ANR	8996926	Identifier	devicenspace		8996777	0					
ANR	8996927	Argument	3		8996777	2					
ANR	8996928	PrimaryExpression	3		8996777	0					
ANR	8996929	Argument	& proc		8996777	3					
ANR	8996930	UnaryOperationExpression	& proc		8996777	0					
ANR	8996931	UnaryOperator	&		8996777	0					
ANR	8996932	Identifier	proc		8996777	1					
ANR	8996933	IfStatement	if ( code < 0 )		8996777	10					
ANR	8996934	Condition	code < 0	4022:8:128704:128711	8996777	0	True				
ANR	8996935	RelationalExpression	code < 0		8996777	0		<			
ANR	8996936	Identifier	code		8996777	0					
ANR	8996937	PrimaryExpression	0		8996777	1					
ANR	8996938	ReturnStatement	return code ;	4023:8:128722:128733	8996777	1	True				
ANR	8996939	Identifier	code		8996777	0					
ANR	8996940	ExpressionStatement	check_proc ( proc )	4024:4:128739:128755	8996777	11	True				
ANR	8996941	CallExpression	check_proc ( proc )		8996777	0					
ANR	8996942	Callee	check_proc		8996777	0					
ANR	8996943	Identifier	check_proc		8996777	0					
ANR	8996944	ArgumentList	proc		8996777	1					
ANR	8996945	Argument	proc		8996777	0					
ANR	8996946	Identifier	proc		8996777	0					
ANR	8996947	ForStatement	for ( i = 0 ; i < r_size ( & namesarray ) ; ++ i )		8996777	12					
ANR	8996948	ForInit	i = 0 ;	4027:9:128837:128842	8996777	0	True				
ANR	8996949	AssignmentExpression	i = 0		8996777	0		=			
ANR	8996950	Identifier	i		8996777	0					
ANR	8996951	PrimaryExpression	0		8996777	1					
ANR	8996952	Condition	i < r_size ( & namesarray )	4027:16:128844:128866	8996777	1	True				
ANR	8996953	RelationalExpression	i < r_size ( & namesarray )		8996777	0		<			
ANR	8996954	Identifier	i		8996777	0					
ANR	8996955	CallExpression	r_size ( & namesarray )		8996777	1					
ANR	8996956	Callee	r_size		8996777	0					
ANR	8996957	Identifier	r_size		8996777	0					
ANR	8996958	ArgumentList	& namesarray		8996777	1					
ANR	8996959	Argument	& namesarray		8996777	0					
ANR	8996960	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996961	UnaryOperator	&		8996777	0					
ANR	8996962	Identifier	namesarray		8996777	1					
ANR	8996963	UnaryExpression	++ i	4027:41:128869:128871	8996777	2	True				
ANR	8996964	IncDec	++		8996777	0					
ANR	8996965	Identifier	i		8996777	1					
ANR	8996966	CompoundStatement		28:46:1069:1069	8996777	3					
ANR	8996967	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) i , & sname )"	4028:8:128884:128932	8996777	0	True				
ANR	8996968	CallExpression	"array_get ( imemory , & namesarray , ( long ) i , & sname )"		8996777	0					
ANR	8996969	Callee	array_get		8996777	0					
ANR	8996970	Identifier	array_get		8996777	0					
ANR	8996971	ArgumentList	imemory		8996777	1					
ANR	8996972	Argument	imemory		8996777	0					
ANR	8996973	Identifier	imemory		8996777	0					
ANR	8996974	Argument	& namesarray		8996777	1					
ANR	8996975	UnaryOperationExpression	& namesarray		8996777	0					
ANR	8996976	UnaryOperator	&		8996777	0					
ANR	8996977	Identifier	namesarray		8996777	1					
ANR	8996978	Argument	( long ) i		8996777	2					
ANR	8996979	CastExpression	( long ) i		8996777	0					
ANR	8996980	CastTarget	long		8996777	0					
ANR	8996981	Identifier	i		8996777	1					
ANR	8996982	Argument	& sname		8996777	3					
ANR	8996983	UnaryOperationExpression	& sname		8996777	0					
ANR	8996984	UnaryOperator	&		8996777	0					
ANR	8996985	Identifier	sname		8996777	1					
ANR	8996986	SwitchStatement	switch ( r_type ( & sname ) )		8996777	1					
ANR	8996987	Condition	r_type ( & sname )	4029:16:128950:128963	8996777	0	True				
ANR	8996988	CallExpression	r_type ( & sname )		8996777	0					
ANR	8996989	Callee	r_type		8996777	0					
ANR	8996990	Identifier	r_type		8996777	0					
ANR	8996991	ArgumentList	& sname		8996777	1					
ANR	8996992	Argument	& sname		8996777	0					
ANR	8996993	UnaryOperationExpression	& sname		8996777	0					
ANR	8996994	UnaryOperator	&		8996777	0					
ANR	8996995	Identifier	sname		8996777	1					
ANR	8996996	CompoundStatement		30:32:1161:1161	8996777	1					
ANR	8996997	Label	case t_string :	4030:16:128984:128997	8996777	0	True				
ANR	8996998	Identifier	t_string		8996777	0					
ANR	8996999	Label	case t_name :	4031:16:129015:129026	8996777	1	True				
ANR	8997000	Identifier	t_name		8996777	0					
ANR	8997001	BreakStatement	break ;	4032:20:129048:129053	8996777	2	True				
ANR	8997002	Label	default :	4033:16:129071:129078	8996777	3	True				
ANR	8997003	Identifier	default		8996777	0					
ANR	8997004	ExpressionStatement	return_error ( gs_error_typecheck )	4034:20:129100:129132	8996777	4	True				
ANR	8997005	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997006	Callee	return_error		8996777	0					
ANR	8997007	Identifier	return_error		8996777	0					
ANR	8997008	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997009	Argument	gs_error_typecheck		8996777	0					
ANR	8997010	Identifier	gs_error_typecheck		8996777	0					
ANR	8997011	ExpressionStatement	"code = array_get ( imemory , devicenspace , 2 , & altspace )"	4039:4:129201:129254	8996777	13	True				
ANR	8997012	AssignmentExpression	"code = array_get ( imemory , devicenspace , 2 , & altspace )"		8996777	0		=			
ANR	8997013	Identifier	code		8996777	0					
ANR	8997014	CallExpression	"array_get ( imemory , devicenspace , 2 , & altspace )"		8996777	1					
ANR	8997015	Callee	array_get		8996777	0					
ANR	8997016	Identifier	array_get		8996777	0					
ANR	8997017	ArgumentList	imemory		8996777	1					
ANR	8997018	Argument	imemory		8996777	0					
ANR	8997019	Identifier	imemory		8996777	0					
ANR	8997020	Argument	devicenspace		8996777	1					
ANR	8997021	Identifier	devicenspace		8996777	0					
ANR	8997022	Argument	2		8996777	2					
ANR	8997023	PrimaryExpression	2		8996777	0					
ANR	8997024	Argument	& altspace		8996777	3					
ANR	8997025	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997026	UnaryOperator	&		8996777	0					
ANR	8997027	Identifier	altspace		8996777	1					
ANR	8997028	IfStatement	if ( code < 0 )		8996777	14					
ANR	8997029	Condition	code < 0	4040:8:129264:129271	8996777	0	True				
ANR	8997030	RelationalExpression	code < 0		8996777	0		<			
ANR	8997031	Identifier	code		8996777	0					
ANR	8997032	PrimaryExpression	0		8996777	1					
ANR	8997033	ReturnStatement	return code ;	4041:8:129282:129293	8996777	1	True				
ANR	8997034	Identifier	code		8996777	0					
ANR	8997035	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		8996777	15					
ANR	8997036	Condition	"r_has_type ( & altspace , t_name )"	4042:8:129303:129331	8996777	0	True				
ANR	8997037	CallExpression	"r_has_type ( & altspace , t_name )"		8996777	0					
ANR	8997038	Callee	r_has_type		8996777	0					
ANR	8997039	Identifier	r_has_type		8996777	0					
ANR	8997040	ArgumentList	& altspace		8996777	1					
ANR	8997041	Argument	& altspace		8996777	0					
ANR	8997042	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997043	UnaryOperator	&		8996777	0					
ANR	8997044	Identifier	altspace		8996777	1					
ANR	8997045	Argument	t_name		8996777	1					
ANR	8997046	Identifier	t_name		8996777	0					
ANR	8997047	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	4043:8:129342:129373	8996777	1	True				
ANR	8997048	CallExpression	"ref_assign ( & nameref , & altspace )"		8996777	0					
ANR	8997049	Callee	ref_assign		8996777	0					
ANR	8997050	Identifier	ref_assign		8996777	0					
ANR	8997051	ArgumentList	& nameref		8996777	1					
ANR	8997052	Argument	& nameref		8996777	0					
ANR	8997053	UnaryOperationExpression	& nameref		8996777	0					
ANR	8997054	UnaryOperator	&		8996777	0					
ANR	8997055	Identifier	nameref		8996777	1					
ANR	8997056	Argument	& altspace		8996777	1					
ANR	8997057	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997058	UnaryOperator	&		8996777	0					
ANR	8997059	Identifier	altspace		8996777	1					
ANR	8997060	ElseStatement	else		8996777	0					
ANR	8997061	CompoundStatement		45:9:1579:1579	8996777	0					
ANR	8997062	IfStatement	if ( ! r_is_array ( & altspace ) )		8996777	0					
ANR	8997063	Condition	! r_is_array ( & altspace )	4046:12:129454:129475	8996777	0	True				
ANR	8997064	UnaryOperationExpression	! r_is_array ( & altspace )		8996777	0					
ANR	8997065	UnaryOperator	!		8996777	0					
ANR	8997066	CallExpression	r_is_array ( & altspace )		8996777	1					
ANR	8997067	Callee	r_is_array		8996777	0					
ANR	8997068	Identifier	r_is_array		8996777	0					
ANR	8997069	ArgumentList	& altspace		8996777	1					
ANR	8997070	Argument	& altspace		8996777	0					
ANR	8997071	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997072	UnaryOperator	&		8996777	0					
ANR	8997073	Identifier	altspace		8996777	1					
ANR	8997074	ExpressionStatement	return_error ( gs_error_typecheck )	4047:12:129490:129522	8996777	1	True				
ANR	8997075	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997076	Callee	return_error		8996777	0					
ANR	8997077	Identifier	return_error		8996777	0					
ANR	8997078	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997079	Argument	gs_error_typecheck		8996777	0					
ANR	8997080	Identifier	gs_error_typecheck		8996777	0					
ANR	8997081	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & nameref )"	4049:8:129574:129623	8996777	1	True				
ANR	8997082	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & nameref )"		8996777	0		=			
ANR	8997083	Identifier	code		8996777	0					
ANR	8997084	CallExpression	"array_get ( imemory , & altspace , 0 , & nameref )"		8996777	1					
ANR	8997085	Callee	array_get		8996777	0					
ANR	8997086	Identifier	array_get		8996777	0					
ANR	8997087	ArgumentList	imemory		8996777	1					
ANR	8997088	Argument	imemory		8996777	0					
ANR	8997089	Identifier	imemory		8996777	0					
ANR	8997090	Argument	& altspace		8996777	1					
ANR	8997091	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997092	UnaryOperator	&		8996777	0					
ANR	8997093	Identifier	altspace		8996777	1					
ANR	8997094	Argument	0		8996777	2					
ANR	8997095	PrimaryExpression	0		8996777	0					
ANR	8997096	Argument	& nameref		8996777	3					
ANR	8997097	UnaryOperationExpression	& nameref		8996777	0					
ANR	8997098	UnaryOperator	&		8996777	0					
ANR	8997099	Identifier	nameref		8996777	1					
ANR	8997100	IfStatement	if ( code < 0 )		8996777	2					
ANR	8997101	Condition	code < 0	4050:12:129637:129644	8996777	0	True				
ANR	8997102	RelationalExpression	code < 0		8996777	0		<			
ANR	8997103	Identifier	code		8996777	0					
ANR	8997104	PrimaryExpression	0		8996777	1					
ANR	8997105	ReturnStatement	return code ;	4051:12:129659:129670	8996777	1	True				
ANR	8997106	Identifier	code		8996777	0					
ANR	8997107	IfStatement	"if ( ! r_has_type ( & nameref , t_name ) )"		8996777	3					
ANR	8997108	Condition	"! r_has_type ( & nameref , t_name )"	4052:12:129684:129712	8996777	0	True				
ANR	8997109	UnaryOperationExpression	"! r_has_type ( & nameref , t_name )"		8996777	0					
ANR	8997110	UnaryOperator	!		8996777	0					
ANR	8997111	CallExpression	"r_has_type ( & nameref , t_name )"		8996777	1					
ANR	8997112	Callee	r_has_type		8996777	0					
ANR	8997113	Identifier	r_has_type		8996777	0					
ANR	8997114	ArgumentList	& nameref		8996777	1					
ANR	8997115	Argument	& nameref		8996777	0					
ANR	8997116	UnaryOperationExpression	& nameref		8996777	0					
ANR	8997117	UnaryOperator	&		8996777	0					
ANR	8997118	Identifier	nameref		8996777	1					
ANR	8997119	Argument	t_name		8996777	1					
ANR	8997120	Identifier	t_name		8996777	0					
ANR	8997121	ExpressionStatement	return_error ( gs_error_typecheck )	4053:12:129727:129759	8996777	1	True				
ANR	8997122	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997123	Callee	return_error		8996777	0					
ANR	8997124	Identifier	return_error		8996777	0					
ANR	8997125	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997126	Argument	gs_error_typecheck		8996777	0					
ANR	8997127	Identifier	gs_error_typecheck		8996777	0					
ANR	8997128	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	4056:4:129820:129861	8996777	16	True				
ANR	8997129	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		8996777	0					
ANR	8997130	Callee	name_string_ref		8996777	0					
ANR	8997131	Identifier	name_string_ref		8996777	0					
ANR	8997132	ArgumentList	imemory		8996777	1					
ANR	8997133	Argument	imemory		8996777	0					
ANR	8997134	Identifier	imemory		8996777	0					
ANR	8997135	Argument	& nameref		8996777	1					
ANR	8997136	UnaryOperationExpression	& nameref		8996777	0					
ANR	8997137	UnaryOperator	&		8996777	0					
ANR	8997138	Identifier	nameref		8996777	1					
ANR	8997139	Argument	& sref		8996777	2					
ANR	8997140	UnaryOperationExpression	& sref		8996777	0					
ANR	8997141	UnaryOperator	&		8996777	0					
ANR	8997142	Identifier	sref		8996777	1					
ANR	8997143	IfStatement	if ( r_size ( & sref ) == 7 )		8996777	17					
ANR	8997144	Condition	r_size ( & sref ) == 7	4058:8:129924:129941	8996777	0	True				
ANR	8997145	EqualityExpression	r_size ( & sref ) == 7		8996777	0		==			
ANR	8997146	CallExpression	r_size ( & sref )		8996777	0					
ANR	8997147	Callee	r_size		8996777	0					
ANR	8997148	Identifier	r_size		8996777	0					
ANR	8997149	ArgumentList	& sref		8996777	1					
ANR	8997150	Argument	& sref		8996777	0					
ANR	8997151	UnaryOperationExpression	& sref		8996777	0					
ANR	8997152	UnaryOperator	&		8996777	0					
ANR	8997153	Identifier	sref		8996777	1					
ANR	8997154	PrimaryExpression	7		8996777	1					
ANR	8997155	CompoundStatement		59:28:2139:2139	8996777	1					
ANR	8997156	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		8996777	0					
ANR	8997157	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	4059:12:129958:130021	8996777	0	True				
ANR	8997158	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		8996777	0		==			
ANR	8997159	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		8996777	0					
ANR	8997160	Callee	strncmp		8996777	0					
ANR	8997161	Identifier	strncmp		8996777	0					
ANR	8997162	ArgumentList	( const char * ) sref . value . const_bytes		8996777	1					
ANR	8997163	Argument	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997164	CastExpression	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997165	CastTarget	const char *		8996777	0					
ANR	8997166	MemberAccess	sref . value . const_bytes		8996777	1					
ANR	8997167	MemberAccess	sref . value		8996777	0					
ANR	8997168	Identifier	sref		8996777	0					
ANR	8997169	Identifier	value		8996777	1					
ANR	8997170	Identifier	const_bytes		8996777	1					
ANR	8997171	Argument	"""Indexed"""		8996777	1					
ANR	8997172	PrimaryExpression	"""Indexed"""		8996777	0					
ANR	8997173	Argument	7		8996777	2					
ANR	8997174	PrimaryExpression	7		8996777	0					
ANR	8997175	PrimaryExpression	0		8996777	1					
ANR	8997176	ExpressionStatement	return_error ( gs_error_typecheck )	4060:12:130036:130068	8996777	1	True				
ANR	8997177	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997178	Callee	return_error		8996777	0					
ANR	8997179	Identifier	return_error		8996777	0					
ANR	8997180	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997181	Argument	gs_error_typecheck		8996777	0					
ANR	8997182	Identifier	gs_error_typecheck		8996777	0					
ANR	8997183	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		8996777	1					
ANR	8997184	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	4061:12:130082:130145	8996777	0	True				
ANR	8997185	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		8996777	0		==			
ANR	8997186	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		8996777	0					
ANR	8997187	Callee	strncmp		8996777	0					
ANR	8997188	Identifier	strncmp		8996777	0					
ANR	8997189	ArgumentList	( const char * ) sref . value . const_bytes		8996777	1					
ANR	8997190	Argument	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997191	CastExpression	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997192	CastTarget	const char *		8996777	0					
ANR	8997193	MemberAccess	sref . value . const_bytes		8996777	1					
ANR	8997194	MemberAccess	sref . value		8996777	0					
ANR	8997195	Identifier	sref		8996777	0					
ANR	8997196	Identifier	value		8996777	1					
ANR	8997197	Identifier	const_bytes		8996777	1					
ANR	8997198	Argument	"""Pattern"""		8996777	1					
ANR	8997199	PrimaryExpression	"""Pattern"""		8996777	0					
ANR	8997200	Argument	7		8996777	2					
ANR	8997201	PrimaryExpression	7		8996777	0					
ANR	8997202	PrimaryExpression	0		8996777	1					
ANR	8997203	ExpressionStatement	return_error ( gs_error_typecheck )	4062:12:130160:130192	8996777	1	True				
ANR	8997204	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997205	Callee	return_error		8996777	0					
ANR	8997206	Identifier	return_error		8996777	0					
ANR	8997207	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997208	Argument	gs_error_typecheck		8996777	0					
ANR	8997209	Identifier	gs_error_typecheck		8996777	0					
ANR	8997210	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0 )"		8996777	2					
ANR	8997211	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"	4063:12:130206:130269	8996777	0	True				
ANR	8997212	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"		8996777	0		==			
ANR	8997213	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 )"		8996777	0					
ANR	8997214	Callee	strncmp		8996777	0					
ANR	8997215	Identifier	strncmp		8996777	0					
ANR	8997216	ArgumentList	( const char * ) sref . value . const_bytes		8996777	1					
ANR	8997217	Argument	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997218	CastExpression	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997219	CastTarget	const char *		8996777	0					
ANR	8997220	MemberAccess	sref . value . const_bytes		8996777	1					
ANR	8997221	MemberAccess	sref . value		8996777	0					
ANR	8997222	Identifier	sref		8996777	0					
ANR	8997223	Identifier	value		8996777	1					
ANR	8997224	Identifier	const_bytes		8996777	1					
ANR	8997225	Argument	"""DeviceN"""		8996777	1					
ANR	8997226	PrimaryExpression	"""DeviceN"""		8996777	0					
ANR	8997227	Argument	7		8996777	2					
ANR	8997228	PrimaryExpression	7		8996777	0					
ANR	8997229	PrimaryExpression	0		8996777	1					
ANR	8997230	ExpressionStatement	return_error ( gs_error_typecheck )	4064:12:130284:130316	8996777	1	True				
ANR	8997231	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997232	Callee	return_error		8996777	0					
ANR	8997233	Identifier	return_error		8996777	0					
ANR	8997234	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997235	Argument	gs_error_typecheck		8996777	0					
ANR	8997236	Identifier	gs_error_typecheck		8996777	0					
ANR	8997237	IfStatement	"if ( r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0 )"		8996777	18					
ANR	8997238	Condition	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"	4067:8:130367:130455	8996777	0	True				
ANR	8997239	AndExpression	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		8996777	0		&&			
ANR	8997240	EqualityExpression	r_size ( & sref ) == 9		8996777	0		==			
ANR	8997241	CallExpression	r_size ( & sref )		8996777	0					
ANR	8997242	Callee	r_size		8996777	0					
ANR	8997243	Identifier	r_size		8996777	0					
ANR	8997244	ArgumentList	& sref		8996777	1					
ANR	8997245	Argument	& sref		8996777	0					
ANR	8997246	UnaryOperationExpression	& sref		8996777	0					
ANR	8997247	UnaryOperator	&		8996777	0					
ANR	8997248	Identifier	sref		8996777	1					
ANR	8997249	PrimaryExpression	9		8996777	1					
ANR	8997250	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		8996777	1		==			
ANR	8997251	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 )"		8996777	0					
ANR	8997252	Callee	strncmp		8996777	0					
ANR	8997253	Identifier	strncmp		8996777	0					
ANR	8997254	ArgumentList	( const char * ) sref . value . const_bytes		8996777	1					
ANR	8997255	Argument	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997256	CastExpression	( const char * ) sref . value . const_bytes		8996777	0					
ANR	8997257	CastTarget	const char *		8996777	0					
ANR	8997258	MemberAccess	sref . value . const_bytes		8996777	1					
ANR	8997259	MemberAccess	sref . value		8996777	0					
ANR	8997260	Identifier	sref		8996777	0					
ANR	8997261	Identifier	value		8996777	1					
ANR	8997262	Identifier	const_bytes		8996777	1					
ANR	8997263	Argument	"""Separation"""		8996777	1					
ANR	8997264	PrimaryExpression	"""Separation"""		8996777	0					
ANR	8997265	Argument	9		8996777	2					
ANR	8997266	PrimaryExpression	9		8996777	0					
ANR	8997267	PrimaryExpression	0		8996777	1					
ANR	8997268	ExpressionStatement	return_error ( gs_error_typecheck )	4068:11:130469:130501	8996777	1	True				
ANR	8997269	CallExpression	return_error ( gs_error_typecheck )		8996777	0					
ANR	8997270	Callee	return_error		8996777	0					
ANR	8997271	Identifier	return_error		8996777	0					
ANR	8997272	ArgumentList	gs_error_typecheck		8996777	1					
ANR	8997273	Argument	gs_error_typecheck		8996777	0					
ANR	8997274	Identifier	gs_error_typecheck		8996777	0					
ANR	8997275	ExpressionStatement	"ref_assign ( * space , & altspace )"	4070:4:130508:130537	8996777	19	True				
ANR	8997276	CallExpression	"ref_assign ( * space , & altspace )"		8996777	0					
ANR	8997277	Callee	ref_assign		8996777	0					
ANR	8997278	Identifier	ref_assign		8996777	0					
ANR	8997279	ArgumentList	* space		8996777	1					
ANR	8997280	Argument	* space		8996777	0					
ANR	8997281	UnaryOperationExpression	* space		8996777	0					
ANR	8997282	UnaryOperator	*		8996777	0					
ANR	8997283	Identifier	space		8996777	1					
ANR	8997284	Argument	& altspace		8996777	1					
ANR	8997285	UnaryOperationExpression	& altspace		8996777	0					
ANR	8997286	UnaryOperator	&		8996777	0					
ANR	8997287	Identifier	altspace		8996777	1					
ANR	8997288	ReturnStatement	return 0 ;	4071:4:130543:130551	8996777	20	True				
ANR	8997289	PrimaryExpression	0		8996777	0					
ANR	8997290	ReturnType	static int		8996777	1					
ANR	8997291	Identifier	validatedevicenspace		8996777	2					
ANR	8997292	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		8996777	3					
ANR	8997293	Parameter	i_ctx_t * i_ctx_p	3999:32:127772:127788	8996777	0	True				
ANR	8997294	ParameterType	i_ctx_t *		8996777	0					
ANR	8997295	Identifier	i_ctx_p		8996777	1					
ANR	8997296	Parameter	ref * * space	3999:51:127791:127801	8996777	1	True				
ANR	8997297	ParameterType	ref * *		8996777	0					
ANR	8997298	Identifier	space		8996777	1					
ANR	8997299	CFGEntryNode	ENTRY		8996777		True				
ANR	8997300	CFGExitNode	EXIT		8996777		True				
ANR	8997301	Symbol	code		8996777						
ANR	8997302	Symbol	gs_error_rangecheck		8996777						
ANR	8997303	Symbol	nameref		8996777						
ANR	8997304	Symbol	& sname		8996777						
ANR	8997305	Symbol	space		8996777						
ANR	8997306	Symbol	strncmp		8996777						
ANR	8997307	Symbol	gs_error_typecheck		8996777						
ANR	8997308	Symbol	MAX_COMPONENTS_IN_DEVN		8996777						
ANR	8997309	Symbol	r_has_type		8996777						
ANR	8997310	Symbol	altspace		8996777						
ANR	8997311	Symbol	& altspace		8996777						
ANR	8997312	Symbol	t_name		8996777						
ANR	8997313	Symbol	r_size		8996777						
ANR	8997314	Symbol	gs_error_limitcheck		8996777						
ANR	8997315	Symbol	sref . value . const_bytes		8996777						
ANR	8997316	Symbol	imemory		8996777						
ANR	8997317	Symbol	devicenspace		8996777						
ANR	8997318	Symbol	r_type		8996777						
ANR	8997319	Symbol	& proc		8996777						
ANR	8997320	Symbol	& nameref		8996777						
ANR	8997321	Symbol	proc		8996777						
ANR	8997322	Symbol	array_get		8996777						
ANR	8997323	Symbol	i		8996777						
ANR	8997324	Symbol	namesarray		8996777						
ANR	8997325	Symbol	& sref		8996777						
ANR	8997326	Symbol	sref . value		8996777						
ANR	8997327	Symbol	sref		8996777						
ANR	8997328	Symbol	i_ctx_p		8996777						
ANR	8997329	Symbol	sname		8996777						
ANR	8997330	Symbol	* space		8996777						
ANR	8997331	Symbol	& namesarray		8996777						
ANR	8997332	Symbol	r_is_array		8996777						
ANR	8997333	Function	devicenalternatespace	4073:0:130555:130814							
ANR	8997334	FunctionDef	"devicenalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		8997333	0					
ANR	8997335	CompoundStatement		4074:0:130643:130814	8997333	0					
ANR	8997336	IdentifierDeclStatement	ref altspace ;	4075:4:130649:130661	8997333	0	True				
ANR	8997337	IdentifierDecl	altspace		8997333	0					
ANR	8997338	IdentifierDeclType	ref		8997333	0					
ANR	8997339	Identifier	altspace		8997333	1					
ANR	8997340	IdentifierDeclStatement	int code ;	4076:4:130667:130675	8997333	1	True				
ANR	8997341	IdentifierDecl	code		8997333	0					
ANR	8997342	IdentifierDeclType	int		8997333	0					
ANR	8997343	Identifier	code		8997333	1					
ANR	8997344	ExpressionStatement	"code = array_get ( imemory , space , 2 , & altspace )"	4078:4:130682:130728	8997333	2	True				
ANR	8997345	AssignmentExpression	"code = array_get ( imemory , space , 2 , & altspace )"		8997333	0		=			
ANR	8997346	Identifier	code		8997333	0					
ANR	8997347	CallExpression	"array_get ( imemory , space , 2 , & altspace )"		8997333	1					
ANR	8997348	Callee	array_get		8997333	0					
ANR	8997349	Identifier	array_get		8997333	0					
ANR	8997350	ArgumentList	imemory		8997333	1					
ANR	8997351	Argument	imemory		8997333	0					
ANR	8997352	Identifier	imemory		8997333	0					
ANR	8997353	Argument	space		8997333	1					
ANR	8997354	Identifier	space		8997333	0					
ANR	8997355	Argument	2		8997333	2					
ANR	8997356	PrimaryExpression	2		8997333	0					
ANR	8997357	Argument	& altspace		8997333	3					
ANR	8997358	UnaryOperationExpression	& altspace		8997333	0					
ANR	8997359	UnaryOperator	&		8997333	0					
ANR	8997360	Identifier	altspace		8997333	1					
ANR	8997361	IfStatement	if ( code < 0 )		8997333	3					
ANR	8997362	Condition	code < 0	4079:8:130738:130745	8997333	0	True				
ANR	8997363	RelationalExpression	code < 0		8997333	0		<			
ANR	8997364	Identifier	code		8997333	0					
ANR	8997365	PrimaryExpression	0		8997333	1					
ANR	8997366	ReturnStatement	return code ;	4080:8:130756:130767	8997333	1	True				
ANR	8997367	Identifier	code		8997333	0					
ANR	8997368	ExpressionStatement	"ref_assign ( * r , & altspace )"	4081:4:130773:130798	8997333	4	True				
ANR	8997369	CallExpression	"ref_assign ( * r , & altspace )"		8997333	0					
ANR	8997370	Callee	ref_assign		8997333	0					
ANR	8997371	Identifier	ref_assign		8997333	0					
ANR	8997372	ArgumentList	* r		8997333	1					
ANR	8997373	Argument	* r		8997333	0					
ANR	8997374	UnaryOperationExpression	* r		8997333	0					
ANR	8997375	UnaryOperator	*		8997333	0					
ANR	8997376	Identifier	r		8997333	1					
ANR	8997377	Argument	& altspace		8997333	1					
ANR	8997378	UnaryOperationExpression	& altspace		8997333	0					
ANR	8997379	UnaryOperator	&		8997333	0					
ANR	8997380	Identifier	altspace		8997333	1					
ANR	8997381	ReturnStatement	return 0 ;	4082:4:130804:130812	8997333	5	True				
ANR	8997382	PrimaryExpression	0		8997333	0					
ANR	8997383	ReturnType	static int		8997333	1					
ANR	8997384	Identifier	devicenalternatespace		8997333	2					
ANR	8997385	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		8997333	3					
ANR	8997386	Parameter	i_ctx_t * i_ctx_p	4073:33:130588:130604	8997333	0	True				
ANR	8997387	ParameterType	i_ctx_t *		8997333	0					
ANR	8997388	Identifier	i_ctx_p		8997333	1					
ANR	8997389	Parameter	ref * space	4073:52:130607:130616	8997333	1	True				
ANR	8997390	ParameterType	ref *		8997333	0					
ANR	8997391	Identifier	space		8997333	1					
ANR	8997392	Parameter	ref * * r	4073:64:130619:130625	8997333	2	True				
ANR	8997393	ParameterType	ref * *		8997333	0					
ANR	8997394	Identifier	r		8997333	1					
ANR	8997395	Parameter	int * CIESubst	4073:73:130628:130640	8997333	3	True				
ANR	8997396	ParameterType	int *		8997333	0					
ANR	8997397	Identifier	CIESubst		8997333	1					
ANR	8997398	CFGEntryNode	ENTRY		8997333		True				
ANR	8997399	CFGExitNode	EXIT		8997333		True				
ANR	8997400	Symbol	r		8997333						
ANR	8997401	Symbol	altspace		8997333						
ANR	8997402	Symbol	code		8997333						
ANR	8997403	Symbol	& altspace		8997333						
ANR	8997404	Symbol	i_ctx_p		8997333						
ANR	8997405	Symbol	array_get		8997333						
ANR	8997406	Symbol	imemory		8997333						
ANR	8997407	Symbol	* r		8997333						
ANR	8997408	Symbol	space		8997333						
ANR	8997409	Symbol	CIESubst		8997333						
ANR	8997410	Function	devicencomponents	4084:0:130816:131058							
ANR	8997411	FunctionDef	"devicencomponents (i_ctx_t * i_ctx_p , ref * space , int * n)"		8997410	0					
ANR	8997412	CompoundStatement		4085:0:130884:131058	8997410	0					
ANR	8997413	IdentifierDeclStatement	ref namesarray ;	4086:4:130890:130904	8997410	0	True				
ANR	8997414	IdentifierDecl	namesarray		8997410	0					
ANR	8997415	IdentifierDeclType	ref		8997410	0					
ANR	8997416	Identifier	namesarray		8997410	1					
ANR	8997417	IdentifierDeclStatement	int code ;	4087:4:130910:130918	8997410	1	True				
ANR	8997418	IdentifierDecl	code		8997410	0					
ANR	8997419	IdentifierDeclType	int		8997410	0					
ANR	8997420	Identifier	code		8997410	1					
ANR	8997421	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4089:4:130925:130973	8997410	2	True				
ANR	8997422	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		8997410	0		=			
ANR	8997423	Identifier	code		8997410	0					
ANR	8997424	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		8997410	1					
ANR	8997425	Callee	array_get		8997410	0					
ANR	8997426	Identifier	array_get		8997410	0					
ANR	8997427	ArgumentList	imemory		8997410	1					
ANR	8997428	Argument	imemory		8997410	0					
ANR	8997429	Identifier	imemory		8997410	0					
ANR	8997430	Argument	space		8997410	1					
ANR	8997431	Identifier	space		8997410	0					
ANR	8997432	Argument	1		8997410	2					
ANR	8997433	PrimaryExpression	1		8997410	0					
ANR	8997434	Argument	& namesarray		8997410	3					
ANR	8997435	UnaryOperationExpression	& namesarray		8997410	0					
ANR	8997436	UnaryOperator	&		8997410	0					
ANR	8997437	Identifier	namesarray		8997410	1					
ANR	8997438	IfStatement	if ( code < 0 )		8997410	3					
ANR	8997439	Condition	code < 0	4090:8:130983:130990	8997410	0	True				
ANR	8997440	RelationalExpression	code < 0		8997410	0		<			
ANR	8997441	Identifier	code		8997410	0					
ANR	8997442	PrimaryExpression	0		8997410	1					
ANR	8997443	ReturnStatement	return code ;	4091:8:131001:131012	8997410	1	True				
ANR	8997444	Identifier	code		8997410	0					
ANR	8997445	ExpressionStatement	* n = r_size ( & namesarray )	4092:4:131018:131042	8997410	4	True				
ANR	8997446	AssignmentExpression	* n = r_size ( & namesarray )		8997410	0		=			
ANR	8997447	UnaryOperationExpression	* n		8997410	0					
ANR	8997448	UnaryOperator	*		8997410	0					
ANR	8997449	Identifier	n		8997410	1					
ANR	8997450	CallExpression	r_size ( & namesarray )		8997410	1					
ANR	8997451	Callee	r_size		8997410	0					
ANR	8997452	Identifier	r_size		8997410	0					
ANR	8997453	ArgumentList	& namesarray		8997410	1					
ANR	8997454	Argument	& namesarray		8997410	0					
ANR	8997455	UnaryOperationExpression	& namesarray		8997410	0					
ANR	8997456	UnaryOperator	&		8997410	0					
ANR	8997457	Identifier	namesarray		8997410	1					
ANR	8997458	ReturnStatement	return 0 ;	4093:4:131048:131056	8997410	5	True				
ANR	8997459	PrimaryExpression	0		8997410	0					
ANR	8997460	ReturnType	static int		8997410	1					
ANR	8997461	Identifier	devicencomponents		8997410	2					
ANR	8997462	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		8997410	3					
ANR	8997463	Parameter	i_ctx_t * i_ctx_p	4084:29:130845:130861	8997410	0	True				
ANR	8997464	ParameterType	i_ctx_t *		8997410	0					
ANR	8997465	Identifier	i_ctx_p		8997410	1					
ANR	8997466	Parameter	ref * space	4084:48:130864:130873	8997410	1	True				
ANR	8997467	ParameterType	ref *		8997410	0					
ANR	8997468	Identifier	space		8997410	1					
ANR	8997469	Parameter	int * n	4084:60:130876:130881	8997410	2	True				
ANR	8997470	ParameterType	int *		8997410	0					
ANR	8997471	Identifier	n		8997410	1					
ANR	8997472	CFGEntryNode	ENTRY		8997410		True				
ANR	8997473	CFGExitNode	EXIT		8997410		True				
ANR	8997474	Symbol	code		8997410						
ANR	8997475	Symbol	i_ctx_p		8997410						
ANR	8997476	Symbol	array_get		8997410						
ANR	8997477	Symbol	r_size		8997410						
ANR	8997478	Symbol	* n		8997410						
ANR	8997479	Symbol	namesarray		8997410						
ANR	8997480	Symbol	& namesarray		8997410						
ANR	8997481	Symbol	imemory		8997410						
ANR	8997482	Symbol	space		8997410						
ANR	8997483	Symbol	n		8997410						
ANR	8997484	Function	devicendomain	4095:0:131060:131401							
ANR	8997485	FunctionDef	"devicendomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8997484	0					
ANR	8997486	CompoundStatement		4096:0:131128:131401	8997484	0					
ANR	8997487	IdentifierDeclStatement	"int i , limit , code ;"	4097:4:131134:131152	8997484	0	True				
ANR	8997488	IdentifierDecl	i		8997484	0					
ANR	8997489	IdentifierDeclType	int		8997484	0					
ANR	8997490	Identifier	i		8997484	1					
ANR	8997491	IdentifierDecl	limit		8997484	1					
ANR	8997492	IdentifierDeclType	int		8997484	0					
ANR	8997493	Identifier	limit		8997484	1					
ANR	8997494	IdentifierDecl	code		8997484	2					
ANR	8997495	IdentifierDeclType	int		8997484	0					
ANR	8997496	Identifier	code		8997484	1					
ANR	8997497	IdentifierDeclStatement	ref namesarray ;	4098:4:131158:131172	8997484	1	True				
ANR	8997498	IdentifierDecl	namesarray		8997484	0					
ANR	8997499	IdentifierDeclType	ref		8997484	0					
ANR	8997500	Identifier	namesarray		8997484	1					
ANR	8997501	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4100:4:131179:131227	8997484	2	True				
ANR	8997502	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		8997484	0		=			
ANR	8997503	Identifier	code		8997484	0					
ANR	8997504	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		8997484	1					
ANR	8997505	Callee	array_get		8997484	0					
ANR	8997506	Identifier	array_get		8997484	0					
ANR	8997507	ArgumentList	imemory		8997484	1					
ANR	8997508	Argument	imemory		8997484	0					
ANR	8997509	Identifier	imemory		8997484	0					
ANR	8997510	Argument	space		8997484	1					
ANR	8997511	Identifier	space		8997484	0					
ANR	8997512	Argument	1		8997484	2					
ANR	8997513	PrimaryExpression	1		8997484	0					
ANR	8997514	Argument	& namesarray		8997484	3					
ANR	8997515	UnaryOperationExpression	& namesarray		8997484	0					
ANR	8997516	UnaryOperator	&		8997484	0					
ANR	8997517	Identifier	namesarray		8997484	1					
ANR	8997518	IfStatement	if ( code < 0 )		8997484	3					
ANR	8997519	Condition	code < 0	4101:8:131237:131244	8997484	0	True				
ANR	8997520	RelationalExpression	code < 0		8997484	0		<			
ANR	8997521	Identifier	code		8997484	0					
ANR	8997522	PrimaryExpression	0		8997484	1					
ANR	8997523	ReturnStatement	return code ;	4102:8:131255:131266	8997484	1	True				
ANR	8997524	Identifier	code		8997484	0					
ANR	8997525	ExpressionStatement	limit = r_size ( & namesarray ) * 2	4104:4:131273:131304	8997484	4	True				
ANR	8997526	AssignmentExpression	limit = r_size ( & namesarray ) * 2		8997484	0		=			
ANR	8997527	Identifier	limit		8997484	0					
ANR	8997528	MultiplicativeExpression	r_size ( & namesarray ) * 2		8997484	1		*			
ANR	8997529	CallExpression	r_size ( & namesarray )		8997484	0					
ANR	8997530	Callee	r_size		8997484	0					
ANR	8997531	Identifier	r_size		8997484	0					
ANR	8997532	ArgumentList	& namesarray		8997484	1					
ANR	8997533	Argument	& namesarray		8997484	0					
ANR	8997534	UnaryOperationExpression	& namesarray		8997484	0					
ANR	8997535	UnaryOperator	&		8997484	0					
ANR	8997536	Identifier	namesarray		8997484	1					
ANR	8997537	PrimaryExpression	2		8997484	1					
ANR	8997538	ForStatement	for ( i = 0 ; i < limit ; i += 2 )		8997484	5					
ANR	8997539	ForInit	i = 0 ;	4105:9:131315:131320	8997484	0	True				
ANR	8997540	AssignmentExpression	i = 0		8997484	0		=			
ANR	8997541	Identifier	i		8997484	0					
ANR	8997542	PrimaryExpression	0		8997484	1					
ANR	8997543	Condition	i < limit	4105:15:131321:131329	8997484	1	True				
ANR	8997544	RelationalExpression	i < limit		8997484	0		<			
ANR	8997545	Identifier	i		8997484	0					
ANR	8997546	Identifier	limit		8997484	1					
ANR	8997547	AssignmentExpression	i += 2	4105:25:131331:131334	8997484	2	True	+=			
ANR	8997548	Identifier	i		8997484	0					
ANR	8997549	PrimaryExpression	2		8997484	1					
ANR	8997550	CompoundStatement		10:31:208:208	8997484	3					
ANR	8997551	ExpressionStatement	ptr [ i ] = 0	4106:8:131347:131357	8997484	0	True				
ANR	8997552	AssignmentExpression	ptr [ i ] = 0		8997484	0		=			
ANR	8997553	ArrayIndexing	ptr [ i ]		8997484	0					
ANR	8997554	Identifier	ptr		8997484	0					
ANR	8997555	Identifier	i		8997484	1					
ANR	8997556	PrimaryExpression	0		8997484	1					
ANR	8997557	ExpressionStatement	ptr [ i + 1 ] = 1	4107:8:131367:131379	8997484	1	True				
ANR	8997558	AssignmentExpression	ptr [ i + 1 ] = 1		8997484	0		=			
ANR	8997559	ArrayIndexing	ptr [ i + 1 ]		8997484	0					
ANR	8997560	Identifier	ptr		8997484	0					
ANR	8997561	AdditiveExpression	i + 1		8997484	1		+			
ANR	8997562	Identifier	i		8997484	0					
ANR	8997563	PrimaryExpression	1		8997484	1					
ANR	8997564	PrimaryExpression	1		8997484	1					
ANR	8997565	ReturnStatement	return 0 ;	4109:4:131391:131399	8997484	6	True				
ANR	8997566	PrimaryExpression	0		8997484	0					
ANR	8997567	ReturnType	static int		8997484	1					
ANR	8997568	Identifier	devicendomain		8997484	2					
ANR	8997569	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8997484	3					
ANR	8997570	Parameter	i_ctx_t * i_ctx_p	4095:25:131085:131101	8997484	0	True				
ANR	8997571	ParameterType	i_ctx_t *		8997484	0					
ANR	8997572	Identifier	i_ctx_p		8997484	1					
ANR	8997573	Parameter	ref * space	4095:44:131104:131113	8997484	1	True				
ANR	8997574	ParameterType	ref *		8997484	0					
ANR	8997575	Identifier	space		8997484	1					
ANR	8997576	Parameter	float * ptr	4095:56:131116:131125	8997484	2	True				
ANR	8997577	ParameterType	float *		8997484	0					
ANR	8997578	Identifier	ptr		8997484	1					
ANR	8997579	CFGEntryNode	ENTRY		8997484		True				
ANR	8997580	CFGExitNode	EXIT		8997484		True				
ANR	8997581	Symbol	code		8997484						
ANR	8997582	Symbol	array_get		8997484						
ANR	8997583	Symbol	i		8997484						
ANR	8997584	Symbol	namesarray		8997484						
ANR	8997585	Symbol	space		8997484						
ANR	8997586	Symbol	ptr		8997484						
ANR	8997587	Symbol	* i		8997484						
ANR	8997588	Symbol	i_ctx_p		8997484						
ANR	8997589	Symbol	r_size		8997484						
ANR	8997590	Symbol	limit		8997484						
ANR	8997591	Symbol	* ptr		8997484						
ANR	8997592	Symbol	imemory		8997484						
ANR	8997593	Symbol	& namesarray		8997484						
ANR	8997594	Function	devicenrange	4111:0:131403:131938							
ANR	8997595	FunctionDef	"devicenrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		8997594	0					
ANR	8997596	CompoundStatement		4112:0:131470:131938	8997594	0					
ANR	8997597	IdentifierDeclStatement	"int i , limit , code ;"	4113:4:131476:131494	8997594	0	True				
ANR	8997598	IdentifierDecl	i		8997594	0					
ANR	8997599	IdentifierDeclType	int		8997594	0					
ANR	8997600	Identifier	i		8997594	1					
ANR	8997601	IdentifierDecl	limit		8997594	1					
ANR	8997602	IdentifierDeclType	int		8997594	0					
ANR	8997603	Identifier	limit		8997594	1					
ANR	8997604	IdentifierDecl	code		8997594	2					
ANR	8997605	IdentifierDeclType	int		8997594	0					
ANR	8997606	Identifier	code		8997594	1					
ANR	8997607	IdentifierDeclStatement	PS_colour_space_t * cspace ;	4114:4:131500:131525	8997594	1	True				
ANR	8997608	IdentifierDecl	* cspace		8997594	0					
ANR	8997609	IdentifierDeclType	PS_colour_space_t *		8997594	0					
ANR	8997610	Identifier	cspace		8997594	1					
ANR	8997611	IdentifierDeclStatement	ref altspace ;	4116:4:131532:131544	8997594	2	True				
ANR	8997612	IdentifierDecl	altspace		8997594	0					
ANR	8997613	IdentifierDeclType	ref		8997594	0					
ANR	8997614	Identifier	altspace		8997594	1					
ANR	8997615	ExpressionStatement	"code = array_get ( imemory , space , 1 , & altspace )"	4118:4:131551:131597	8997594	3	True				
ANR	8997616	AssignmentExpression	"code = array_get ( imemory , space , 1 , & altspace )"		8997594	0		=			
ANR	8997617	Identifier	code		8997594	0					
ANR	8997618	CallExpression	"array_get ( imemory , space , 1 , & altspace )"		8997594	1					
ANR	8997619	Callee	array_get		8997594	0					
ANR	8997620	Identifier	array_get		8997594	0					
ANR	8997621	ArgumentList	imemory		8997594	1					
ANR	8997622	Argument	imemory		8997594	0					
ANR	8997623	Identifier	imemory		8997594	0					
ANR	8997624	Argument	space		8997594	1					
ANR	8997625	Identifier	space		8997594	0					
ANR	8997626	Argument	1		8997594	2					
ANR	8997627	PrimaryExpression	1		8997594	0					
ANR	8997628	Argument	& altspace		8997594	3					
ANR	8997629	UnaryOperationExpression	& altspace		8997594	0					
ANR	8997630	UnaryOperator	&		8997594	0					
ANR	8997631	Identifier	altspace		8997594	1					
ANR	8997632	IfStatement	if ( code < 0 )		8997594	4					
ANR	8997633	Condition	code < 0	4119:8:131607:131614	8997594	0	True				
ANR	8997634	RelationalExpression	code < 0		8997594	0		<			
ANR	8997635	Identifier	code		8997594	0					
ANR	8997636	PrimaryExpression	0		8997594	1					
ANR	8997637	ReturnStatement	return code ;	4120:8:131625:131636	8997594	1	True				
ANR	8997638	Identifier	code		8997594	0					
ANR	8997639	ExpressionStatement	"code = get_space_object ( i_ctx_p , & altspace , & cspace )"	4122:4:131643:131695	8997594	5	True				
ANR	8997640	AssignmentExpression	"code = get_space_object ( i_ctx_p , & altspace , & cspace )"		8997594	0		=			
ANR	8997641	Identifier	code		8997594	0					
ANR	8997642	CallExpression	"get_space_object ( i_ctx_p , & altspace , & cspace )"		8997594	1					
ANR	8997643	Callee	get_space_object		8997594	0					
ANR	8997644	Identifier	get_space_object		8997594	0					
ANR	8997645	ArgumentList	i_ctx_p		8997594	1					
ANR	8997646	Argument	i_ctx_p		8997594	0					
ANR	8997647	Identifier	i_ctx_p		8997594	0					
ANR	8997648	Argument	& altspace		8997594	1					
ANR	8997649	UnaryOperationExpression	& altspace		8997594	0					
ANR	8997650	UnaryOperator	&		8997594	0					
ANR	8997651	Identifier	altspace		8997594	1					
ANR	8997652	Argument	& cspace		8997594	2					
ANR	8997653	UnaryOperationExpression	& cspace		8997594	0					
ANR	8997654	UnaryOperator	&		8997594	0					
ANR	8997655	Identifier	cspace		8997594	1					
ANR	8997656	IfStatement	if ( code < 0 )		8997594	6					
ANR	8997657	Condition	code < 0	4123:8:131705:131712	8997594	0	True				
ANR	8997658	RelationalExpression	code < 0		8997594	0		<			
ANR	8997659	Identifier	code		8997594	0					
ANR	8997660	PrimaryExpression	0		8997594	1					
ANR	8997661	ReturnStatement	return code ;	4124:8:131723:131734	8997594	1	True				
ANR	8997662	Identifier	code		8997594	0					
ANR	8997663	ExpressionStatement	"code = cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"	4126:4:131741:131797	8997594	7	True				
ANR	8997664	AssignmentExpression	"code = cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"		8997594	0		=			
ANR	8997665	Identifier	code		8997594	0					
ANR	8997666	CallExpression	"cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"		8997594	1					
ANR	8997667	Callee	cspace -> numcomponents		8997594	0					
ANR	8997668	PtrMemberAccess	cspace -> numcomponents		8997594	0					
ANR	8997669	Identifier	cspace		8997594	0					
ANR	8997670	Identifier	numcomponents		8997594	1					
ANR	8997671	ArgumentList	i_ctx_p		8997594	1					
ANR	8997672	Argument	i_ctx_p		8997594	0					
ANR	8997673	Identifier	i_ctx_p		8997594	0					
ANR	8997674	Argument	& altspace		8997594	1					
ANR	8997675	UnaryOperationExpression	& altspace		8997594	0					
ANR	8997676	UnaryOperator	&		8997594	0					
ANR	8997677	Identifier	altspace		8997594	1					
ANR	8997678	Argument	& limit		8997594	2					
ANR	8997679	UnaryOperationExpression	& limit		8997594	0					
ANR	8997680	UnaryOperator	&		8997594	0					
ANR	8997681	Identifier	limit		8997594	1					
ANR	8997682	IfStatement	if ( code < 0 )		8997594	8					
ANR	8997683	Condition	code < 0	4127:8:131807:131814	8997594	0	True				
ANR	8997684	RelationalExpression	code < 0		8997594	0		<			
ANR	8997685	Identifier	code		8997594	0					
ANR	8997686	PrimaryExpression	0		8997594	1					
ANR	8997687	ReturnStatement	return code ;	4128:8:131825:131836	8997594	1	True				
ANR	8997688	Identifier	code		8997594	0					
ANR	8997689	ForStatement	for ( i = 0 ; i < limit * 2 ; i += 2 )		8997594	9					
ANR	8997690	ForInit	i = 0 ;	4130:9:131848:131853	8997594	0	True				
ANR	8997691	AssignmentExpression	i = 0		8997594	0		=			
ANR	8997692	Identifier	i		8997594	0					
ANR	8997693	PrimaryExpression	0		8997594	1					
ANR	8997694	Condition	i < limit * 2	4130:15:131854:131866	8997594	1	True				
ANR	8997695	RelationalExpression	i < limit * 2		8997594	0		<			
ANR	8997696	Identifier	i		8997594	0					
ANR	8997697	MultiplicativeExpression	limit * 2		8997594	1		*			
ANR	8997698	Identifier	limit		8997594	0					
ANR	8997699	PrimaryExpression	2		8997594	1					
ANR	8997700	AssignmentExpression	i += 2	4130:29:131868:131871	8997594	2	True	+=			
ANR	8997701	Identifier	i		8997594	0					
ANR	8997702	PrimaryExpression	2		8997594	1					
ANR	8997703	CompoundStatement		19:35:403:403	8997594	3					
ANR	8997704	ExpressionStatement	ptr [ i ] = 0	4131:8:131884:131894	8997594	0	True				
ANR	8997705	AssignmentExpression	ptr [ i ] = 0		8997594	0		=			
ANR	8997706	ArrayIndexing	ptr [ i ]		8997594	0					
ANR	8997707	Identifier	ptr		8997594	0					
ANR	8997708	Identifier	i		8997594	1					
ANR	8997709	PrimaryExpression	0		8997594	1					
ANR	8997710	ExpressionStatement	ptr [ i + 1 ] = 1	4132:8:131904:131916	8997594	1	True				
ANR	8997711	AssignmentExpression	ptr [ i + 1 ] = 1		8997594	0		=			
ANR	8997712	ArrayIndexing	ptr [ i + 1 ]		8997594	0					
ANR	8997713	Identifier	ptr		8997594	0					
ANR	8997714	AdditiveExpression	i + 1		8997594	1		+			
ANR	8997715	Identifier	i		8997594	0					
ANR	8997716	PrimaryExpression	1		8997594	1					
ANR	8997717	PrimaryExpression	1		8997594	1					
ANR	8997718	ReturnStatement	return 0 ;	4134:4:131928:131936	8997594	10	True				
ANR	8997719	PrimaryExpression	0		8997594	0					
ANR	8997720	ReturnType	static int		8997594	1					
ANR	8997721	Identifier	devicenrange		8997594	2					
ANR	8997722	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		8997594	3					
ANR	8997723	Parameter	i_ctx_t * i_ctx_p	4111:24:131427:131443	8997594	0	True				
ANR	8997724	ParameterType	i_ctx_t *		8997594	0					
ANR	8997725	Identifier	i_ctx_p		8997594	1					
ANR	8997726	Parameter	ref * space	4111:43:131446:131455	8997594	1	True				
ANR	8997727	ParameterType	ref *		8997594	0					
ANR	8997728	Identifier	space		8997594	1					
ANR	8997729	Parameter	float * ptr	4111:55:131458:131467	8997594	2	True				
ANR	8997730	ParameterType	float *		8997594	0					
ANR	8997731	Identifier	ptr		8997594	1					
ANR	8997732	CFGEntryNode	ENTRY		8997594		True				
ANR	8997733	CFGExitNode	EXIT		8997594		True				
ANR	8997734	Symbol	code		8997594						
ANR	8997735	Symbol	array_get		8997594						
ANR	8997736	Symbol	* cspace		8997594						
ANR	8997737	Symbol	i		8997594						
ANR	8997738	Symbol	& limit		8997594						
ANR	8997739	Symbol	get_space_object		8997594						
ANR	8997740	Symbol	space		8997594						
ANR	8997741	Symbol	ptr		8997594						
ANR	8997742	Symbol	& cspace		8997594						
ANR	8997743	Symbol	altspace		8997594						
ANR	8997744	Symbol	* i		8997594						
ANR	8997745	Symbol	& altspace		8997594						
ANR	8997746	Symbol	cspace -> numcomponents		8997594						
ANR	8997747	Symbol	i_ctx_p		8997594						
ANR	8997748	Symbol	limit		8997594						
ANR	8997749	Symbol	* ptr		8997594						
ANR	8997750	Symbol	cspace		8997594						
ANR	8997751	Symbol	imemory		8997594						
ANR	8997752	Function	devicentransform	4136:0:131940:133832							
ANR	8997753	FunctionDef	"devicentransform (i_ctx_t * i_ctx_p , ref * devicenspace , int * usealternate , int * stage , int * stack_depth)"		8997752	0					
ANR	8997754	CompoundStatement		4137:0:132054:133832	8997752	0					
ANR	8997755	IdentifierDeclStatement	gx_device * dev = igs -> device ;	4138:4:132060:132089	8997752	0	True				
ANR	8997756	IdentifierDecl	* dev = igs -> device		8997752	0					
ANR	8997757	IdentifierDeclType	gx_device *		8997752	0					
ANR	8997758	Identifier	dev		8997752	1					
ANR	8997759	AssignmentExpression	* dev = igs -> device		8997752	2		=			
ANR	8997760	Identifier	dev		8997752	0					
ANR	8997761	PtrMemberAccess	igs -> device		8997752	1					
ANR	8997762	Identifier	igs		8997752	0					
ANR	8997763	Identifier	device		8997752	1					
ANR	8997764	IdentifierDeclStatement	"ref narray , sname , proc ;"	4139:4:132095:132118	8997752	1	True				
ANR	8997765	IdentifierDecl	narray		8997752	0					
ANR	8997766	IdentifierDeclType	ref		8997752	0					
ANR	8997767	Identifier	narray		8997752	1					
ANR	8997768	IdentifierDecl	sname		8997752	1					
ANR	8997769	IdentifierDeclType	ref		8997752	0					
ANR	8997770	Identifier	sname		8997752	1					
ANR	8997771	IdentifierDecl	proc		8997752	2					
ANR	8997772	IdentifierDeclType	ref		8997752	0					
ANR	8997773	Identifier	proc		8997752	1					
ANR	8997774	IdentifierDeclStatement	"int i , code , colorant_number ;"	4140:4:132124:132152	8997752	2	True				
ANR	8997775	IdentifierDecl	i		8997752	0					
ANR	8997776	IdentifierDeclType	int		8997752	0					
ANR	8997777	Identifier	i		8997752	1					
ANR	8997778	IdentifierDecl	code		8997752	1					
ANR	8997779	IdentifierDeclType	int		8997752	0					
ANR	8997780	Identifier	code		8997752	1					
ANR	8997781	IdentifierDecl	colorant_number		8997752	2					
ANR	8997782	IdentifierDeclType	int		8997752	0					
ANR	8997783	Identifier	colorant_number		8997752	1					
ANR	8997784	ExpressionStatement	* usealternate = 0	4142:4:132159:132176	8997752	3	True				
ANR	8997785	AssignmentExpression	* usealternate = 0		8997752	0		=			
ANR	8997786	UnaryOperationExpression	* usealternate		8997752	0					
ANR	8997787	UnaryOperator	*		8997752	0					
ANR	8997788	Identifier	usealternate		8997752	1					
ANR	8997789	PrimaryExpression	0		8997752	1					
ANR	8997790	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & narray )"	4143:4:132182:132233	8997752	4	True				
ANR	8997791	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & narray )"		8997752	0		=			
ANR	8997792	Identifier	code		8997752	0					
ANR	8997793	CallExpression	"array_get ( imemory , devicenspace , 1 , & narray )"		8997752	1					
ANR	8997794	Callee	array_get		8997752	0					
ANR	8997795	Identifier	array_get		8997752	0					
ANR	8997796	ArgumentList	imemory		8997752	1					
ANR	8997797	Argument	imemory		8997752	0					
ANR	8997798	Identifier	imemory		8997752	0					
ANR	8997799	Argument	devicenspace		8997752	1					
ANR	8997800	Identifier	devicenspace		8997752	0					
ANR	8997801	Argument	1		8997752	2					
ANR	8997802	PrimaryExpression	1		8997752	0					
ANR	8997803	Argument	& narray		8997752	3					
ANR	8997804	UnaryOperationExpression	& narray		8997752	0					
ANR	8997805	UnaryOperator	&		8997752	0					
ANR	8997806	Identifier	narray		8997752	1					
ANR	8997807	IfStatement	if ( code < 0 )		8997752	5					
ANR	8997808	Condition	code < 0	4144:8:132243:132250	8997752	0	True				
ANR	8997809	RelationalExpression	code < 0		8997752	0		<			
ANR	8997810	Identifier	code		8997752	0					
ANR	8997811	PrimaryExpression	0		8997752	1					
ANR	8997812	ReturnStatement	return code ;	4145:8:132261:132272	8997752	1	True				
ANR	8997813	Identifier	code		8997752	0					
ANR	8997814	IfStatement	if ( ! r_is_array ( & narray ) )		8997752	6					
ANR	8997815	Condition	! r_is_array ( & narray )	4146:8:132282:132301	8997752	0	True				
ANR	8997816	UnaryOperationExpression	! r_is_array ( & narray )		8997752	0					
ANR	8997817	UnaryOperator	!		8997752	0					
ANR	8997818	CallExpression	r_is_array ( & narray )		8997752	1					
ANR	8997819	Callee	r_is_array		8997752	0					
ANR	8997820	Identifier	r_is_array		8997752	0					
ANR	8997821	ArgumentList	& narray		8997752	1					
ANR	8997822	Argument	& narray		8997752	0					
ANR	8997823	UnaryOperationExpression	& narray		8997752	0					
ANR	8997824	UnaryOperator	&		8997752	0					
ANR	8997825	Identifier	narray		8997752	1					
ANR	8997826	ExpressionStatement	return_error ( gs_error_typecheck )	4147:8:132312:132344	8997752	1	True				
ANR	8997827	CallExpression	return_error ( gs_error_typecheck )		8997752	0					
ANR	8997828	Callee	return_error		8997752	0					
ANR	8997829	Identifier	return_error		8997752	0					
ANR	8997830	ArgumentList	gs_error_typecheck		8997752	1					
ANR	8997831	Argument	gs_error_typecheck		8997752	0					
ANR	8997832	Identifier	gs_error_typecheck		8997752	0					
ANR	8997833	ForStatement	for ( i = 0 ; i < r_size ( & narray ) ; i ++ )		8997752	7					
ANR	8997834	ForInit	i = 0 ;	4149:9:132356:132359	8997752	0	True				
ANR	8997835	AssignmentExpression	i = 0		8997752	0		=			
ANR	8997836	Identifier	i		8997752	0					
ANR	8997837	PrimaryExpression	0		8997752	1					
ANR	8997838	Condition	i < r_size ( & narray )	4149:13:132360:132376	8997752	1	True				
ANR	8997839	RelationalExpression	i < r_size ( & narray )		8997752	0		<			
ANR	8997840	Identifier	i		8997752	0					
ANR	8997841	CallExpression	r_size ( & narray )		8997752	1					
ANR	8997842	Callee	r_size		8997752	0					
ANR	8997843	Identifier	r_size		8997752	0					
ANR	8997844	ArgumentList	& narray		8997752	1					
ANR	8997845	Argument	& narray		8997752	0					
ANR	8997846	UnaryOperationExpression	& narray		8997752	0					
ANR	8997847	UnaryOperator	&		8997752	0					
ANR	8997848	Identifier	narray		8997752	1					
ANR	8997849	PostIncDecOperationExpression	i ++	4149:31:132378:132380	8997752	2	True				
ANR	8997850	Identifier	i		8997752	0					
ANR	8997851	IncDec	++		8997752	1					
ANR	8997852	CompoundStatement		13:36:328:328	8997752	3					
ANR	8997853	ExpressionStatement	"code = array_get ( imemory , & narray , i , & sname )"	4150:8:132393:132438	8997752	0	True				
ANR	8997854	AssignmentExpression	"code = array_get ( imemory , & narray , i , & sname )"		8997752	0		=			
ANR	8997855	Identifier	code		8997752	0					
ANR	8997856	CallExpression	"array_get ( imemory , & narray , i , & sname )"		8997752	1					
ANR	8997857	Callee	array_get		8997752	0					
ANR	8997858	Identifier	array_get		8997752	0					
ANR	8997859	ArgumentList	imemory		8997752	1					
ANR	8997860	Argument	imemory		8997752	0					
ANR	8997861	Identifier	imemory		8997752	0					
ANR	8997862	Argument	& narray		8997752	1					
ANR	8997863	UnaryOperationExpression	& narray		8997752	0					
ANR	8997864	UnaryOperator	&		8997752	0					
ANR	8997865	Identifier	narray		8997752	1					
ANR	8997866	Argument	i		8997752	2					
ANR	8997867	Identifier	i		8997752	0					
ANR	8997868	Argument	& sname		8997752	3					
ANR	8997869	UnaryOperationExpression	& sname		8997752	0					
ANR	8997870	UnaryOperator	&		8997752	0					
ANR	8997871	Identifier	sname		8997752	1					
ANR	8997872	IfStatement	if ( code < 0 )		8997752	1					
ANR	8997873	Condition	code < 0	4151:12:132452:132459	8997752	0	True				
ANR	8997874	RelationalExpression	code < 0		8997752	0		<			
ANR	8997875	Identifier	code		8997752	0					
ANR	8997876	PrimaryExpression	0		8997752	1					
ANR	8997877	ReturnStatement	return code ;	4152:12:132474:132485	8997752	1	True				
ANR	8997878	Identifier	code		8997752	0					
ANR	8997879	IfStatement	"if ( r_has_type ( & sname , t_name ) )"		8997752	2					
ANR	8997880	Condition	"r_has_type ( & sname , t_name )"	4153:12:132499:132524	8997752	0	True				
ANR	8997881	CallExpression	"r_has_type ( & sname , t_name )"		8997752	0					
ANR	8997882	Callee	r_has_type		8997752	0					
ANR	8997883	Identifier	r_has_type		8997752	0					
ANR	8997884	ArgumentList	& sname		8997752	1					
ANR	8997885	Argument	& sname		8997752	0					
ANR	8997886	UnaryOperationExpression	& sname		8997752	0					
ANR	8997887	UnaryOperator	&		8997752	0					
ANR	8997888	Identifier	sname		8997752	1					
ANR	8997889	Argument	t_name		8997752	1					
ANR	8997890	Identifier	t_name		8997752	0					
ANR	8997891	CompoundStatement		17:40:472:472	8997752	1					
ANR	8997892	ExpressionStatement	"name_string_ref ( imemory , & sname , & sname )"	4154:12:132541:132581	8997752	0	True				
ANR	8997893	CallExpression	"name_string_ref ( imemory , & sname , & sname )"		8997752	0					
ANR	8997894	Callee	name_string_ref		8997752	0					
ANR	8997895	Identifier	name_string_ref		8997752	0					
ANR	8997896	ArgumentList	imemory		8997752	1					
ANR	8997897	Argument	imemory		8997752	0					
ANR	8997898	Identifier	imemory		8997752	0					
ANR	8997899	Argument	& sname		8997752	1					
ANR	8997900	UnaryOperationExpression	& sname		8997752	0					
ANR	8997901	UnaryOperator	&		8997752	0					
ANR	8997902	Identifier	sname		8997752	1					
ANR	8997903	Argument	& sname		8997752	2					
ANR	8997904	UnaryOperationExpression	& sname		8997752	0					
ANR	8997905	UnaryOperator	&		8997752	0					
ANR	8997906	Identifier	sname		8997752	1					
ANR	8997907	IfStatement	"if ( r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		8997752	3					
ANR	8997908	Condition	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	4158:12:132681:132783	8997752	0	True				
ANR	8997909	AndExpression	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8997752	0		&&			
ANR	8997910	EqualityExpression	r_size ( & sname ) == 3		8997752	0		==			
ANR	8997911	CallExpression	r_size ( & sname )		8997752	0					
ANR	8997912	Callee	r_size		8997752	0					
ANR	8997913	Identifier	r_size		8997752	0					
ANR	8997914	ArgumentList	& sname		8997752	1					
ANR	8997915	Argument	& sname		8997752	0					
ANR	8997916	UnaryOperationExpression	& sname		8997752	0					
ANR	8997917	UnaryOperator	&		8997752	0					
ANR	8997918	Identifier	sname		8997752	1					
ANR	8997919	PrimaryExpression	3		8997752	1					
ANR	8997920	EqualityExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8997752	1		==			
ANR	8997921	CallExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		8997752	0					
ANR	8997922	Callee	strncmp		8997752	0					
ANR	8997923	Identifier	strncmp		8997752	0					
ANR	8997924	ArgumentList	"""All"""		8997752	1					
ANR	8997925	Argument	"""All"""		8997752	0					
ANR	8997926	PrimaryExpression	"""All"""		8997752	0					
ANR	8997927	Argument	( const char * ) sname . value . bytes		8997752	1					
ANR	8997928	CastExpression	( const char * ) sname . value . bytes		8997752	0					
ANR	8997929	CastTarget	const char *		8997752	0					
ANR	8997930	MemberAccess	sname . value . bytes		8997752	1					
ANR	8997931	MemberAccess	sname . value		8997752	0					
ANR	8997932	Identifier	sname		8997752	0					
ANR	8997933	Identifier	value		8997752	1					
ANR	8997934	Identifier	bytes		8997752	1					
ANR	8997935	Argument	r_size ( & sname )		8997752	2					
ANR	8997936	CallExpression	r_size ( & sname )		8997752	0					
ANR	8997937	Callee	r_size		8997752	0					
ANR	8997938	Identifier	r_size		8997752	0					
ANR	8997939	ArgumentList	& sname		8997752	1					
ANR	8997940	Argument	& sname		8997752	0					
ANR	8997941	UnaryOperationExpression	& sname		8997752	0					
ANR	8997942	UnaryOperator	&		8997752	0					
ANR	8997943	Identifier	sname		8997752	1					
ANR	8997944	PrimaryExpression	0		8997752	1					
ANR	8997945	ContinueStatement	continue ;	4160:12:132798:132806	8997752	1	True				
ANR	8997946	IfStatement	"if ( r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		8997752	4					
ANR	8997947	Condition	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	4161:12:132820:132923	8997752	0	True				
ANR	8997948	AndExpression	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8997752	0		&&			
ANR	8997949	EqualityExpression	r_size ( & sname ) == 4		8997752	0		==			
ANR	8997950	CallExpression	r_size ( & sname )		8997752	0					
ANR	8997951	Callee	r_size		8997752	0					
ANR	8997952	Identifier	r_size		8997752	0					
ANR	8997953	ArgumentList	& sname		8997752	1					
ANR	8997954	Argument	& sname		8997752	0					
ANR	8997955	UnaryOperationExpression	& sname		8997752	0					
ANR	8997956	UnaryOperator	&		8997752	0					
ANR	8997957	Identifier	sname		8997752	1					
ANR	8997958	PrimaryExpression	4		8997752	1					
ANR	8997959	EqualityExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		8997752	1		==			
ANR	8997960	CallExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		8997752	0					
ANR	8997961	Callee	strncmp		8997752	0					
ANR	8997962	Identifier	strncmp		8997752	0					
ANR	8997963	ArgumentList	"""None"""		8997752	1					
ANR	8997964	Argument	"""None"""		8997752	0					
ANR	8997965	PrimaryExpression	"""None"""		8997752	0					
ANR	8997966	Argument	( const char * ) sname . value . bytes		8997752	1					
ANR	8997967	CastExpression	( const char * ) sname . value . bytes		8997752	0					
ANR	8997968	CastTarget	const char *		8997752	0					
ANR	8997969	MemberAccess	sname . value . bytes		8997752	1					
ANR	8997970	MemberAccess	sname . value		8997752	0					
ANR	8997971	Identifier	sname		8997752	0					
ANR	8997972	Identifier	value		8997752	1					
ANR	8997973	Identifier	bytes		8997752	1					
ANR	8997974	Argument	r_size ( & sname )		8997752	2					
ANR	8997975	CallExpression	r_size ( & sname )		8997752	0					
ANR	8997976	Callee	r_size		8997752	0					
ANR	8997977	Identifier	r_size		8997752	0					
ANR	8997978	ArgumentList	& sname		8997752	1					
ANR	8997979	Argument	& sname		8997752	0					
ANR	8997980	UnaryOperationExpression	& sname		8997752	0					
ANR	8997981	UnaryOperator	&		8997752	0					
ANR	8997982	Identifier	sname		8997752	1					
ANR	8997983	PrimaryExpression	0		8997752	1					
ANR	8997984	ContinueStatement	continue ;	4163:12:132938:132946	8997752	1	True				
ANR	8997985	ExpressionStatement	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"	4170:8:133224:133368	8997752	5	True				
ANR	8997986	AssignmentExpression	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		8997752	0		=			
ANR	8997987	Identifier	colorant_number		8997752	0					
ANR	8997988	CallExpression	"( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		8997752	1					
ANR	8997989	Callee	"* dev_proc ( dev , get_color_comp_index )"		8997752	0					
ANR	8997990	UnaryOperationExpression	"* dev_proc ( dev , get_color_comp_index )"		8997752	0					
ANR	8997991	UnaryOperator	*		8997752	0					
ANR	8997992	CallExpression	"dev_proc ( dev , get_color_comp_index )"		8997752	1					
ANR	8997993	Callee	dev_proc		8997752	0					
ANR	8997994	Identifier	dev_proc		8997752	0					
ANR	8997995	ArgumentList	dev		8997752	1					
ANR	8997996	Argument	dev		8997752	0					
ANR	8997997	Identifier	dev		8997752	0					
ANR	8997998	Argument	get_color_comp_index		8997752	1					
ANR	8997999	Identifier	get_color_comp_index		8997752	0					
ANR	8998000	ArgumentList	dev		8997752	1					
ANR	8998001	Argument	dev		8997752	0					
ANR	8998002	Identifier	dev		8997752	0					
ANR	8998003	Argument	( const char * ) sname . value . bytes		8997752	1					
ANR	8998004	CastExpression	( const char * ) sname . value . bytes		8997752	0					
ANR	8998005	CastTarget	const char *		8997752	0					
ANR	8998006	MemberAccess	sname . value . bytes		8997752	1					
ANR	8998007	MemberAccess	sname . value		8997752	0					
ANR	8998008	Identifier	sname		8997752	0					
ANR	8998009	Identifier	value		8997752	1					
ANR	8998010	Identifier	bytes		8997752	1					
ANR	8998011	Argument	r_size ( & sname )		8997752	2					
ANR	8998012	CallExpression	r_size ( & sname )		8997752	0					
ANR	8998013	Callee	r_size		8997752	0					
ANR	8998014	Identifier	r_size		8997752	0					
ANR	8998015	ArgumentList	& sname		8997752	1					
ANR	8998016	Argument	& sname		8997752	0					
ANR	8998017	UnaryOperationExpression	& sname		8997752	0					
ANR	8998018	UnaryOperator	&		8997752	0					
ANR	8998019	Identifier	sname		8997752	1					
ANR	8998020	Argument	SEPARATION_NAME		8997752	3					
ANR	8998021	Identifier	SEPARATION_NAME		8997752	0					
ANR	8998022	IfStatement	if ( colorant_number < 0 )		8997752	6					
ANR	8998023	Condition	colorant_number < 0	4172:12:133382:133400	8997752	0	True				
ANR	8998024	RelationalExpression	colorant_number < 0		8997752	0		<			
ANR	8998025	Identifier	colorant_number		8997752	0					
ANR	8998026	PrimaryExpression	0		8997752	1					
ANR	8998027	CompoundStatement		36:33:1348:1348	8997752	1					
ANR	8998028	ExpressionStatement	* usealternate = 1	4173:12:133451:133468	8997752	0	True				
ANR	8998029	AssignmentExpression	* usealternate = 1		8997752	0		=			
ANR	8998030	UnaryOperationExpression	* usealternate		8997752	0					
ANR	8998031	UnaryOperator	*		8997752	0					
ANR	8998032	Identifier	usealternate		8997752	1					
ANR	8998033	PrimaryExpression	1		8997752	1					
ANR	8998034	BreakStatement	break ;	4174:12:133482:133487	8997752	1	True				
ANR	8998035	IfStatement	if ( * usealternate && * stage == 0 )		8997752	8					
ANR	8998036	Condition	* usealternate && * stage == 0	4177:8:133513:133540	8997752	0	True				
ANR	8998037	AndExpression	* usealternate && * stage == 0		8997752	0		&&			
ANR	8998038	UnaryOperationExpression	* usealternate		8997752	0					
ANR	8998039	UnaryOperator	*		8997752	0					
ANR	8998040	Identifier	usealternate		8997752	1					
ANR	8998041	EqualityExpression	* stage == 0		8997752	1		==			
ANR	8998042	UnaryOperationExpression	* stage		8997752	0					
ANR	8998043	UnaryOperator	*		8997752	0					
ANR	8998044	Identifier	stage		8997752	1					
ANR	8998045	PrimaryExpression	0		8997752	1					
ANR	8998046	CompoundStatement		41:38:1488:1488	8997752	1					
ANR	8998047	ExpressionStatement	( * stage ) ++	4178:8:133553:133563	8997752	0	True				
ANR	8998048	PostIncDecOperationExpression	( * stage ) ++		8997752	0					
ANR	8998049	UnaryOperationExpression	* stage		8997752	0					
ANR	8998050	UnaryOperator	*		8997752	0					
ANR	8998051	Identifier	stage		8997752	1					
ANR	8998052	IncDec	++		8997752	1					
ANR	8998053	ExpressionStatement	esp ++	4179:8:133573:133578	8997752	1	True				
ANR	8998054	PostIncDecOperationExpression	esp ++		8997752	0					
ANR	8998055	Identifier	esp		8997752	0					
ANR	8998056	IncDec	++		8997752	1					
ANR	8998057	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	4180:8:133588:133637	8997752	2	True				
ANR	8998058	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		8997752	0		=			
ANR	8998059	Identifier	code		8997752	0					
ANR	8998060	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		8997752	1					
ANR	8998061	Callee	array_get		8997752	0					
ANR	8998062	Identifier	array_get		8997752	0					
ANR	8998063	ArgumentList	imemory		8997752	1					
ANR	8998064	Argument	imemory		8997752	0					
ANR	8998065	Identifier	imemory		8997752	0					
ANR	8998066	Argument	devicenspace		8997752	1					
ANR	8998067	Identifier	devicenspace		8997752	0					
ANR	8998068	Argument	3		8997752	2					
ANR	8998069	PrimaryExpression	3		8997752	0					
ANR	8998070	Argument	& proc		8997752	3					
ANR	8998071	UnaryOperationExpression	& proc		8997752	0					
ANR	8998072	UnaryOperator	&		8997752	0					
ANR	8998073	Identifier	proc		8997752	1					
ANR	8998074	IfStatement	if ( code < 0 )		8997752	3					
ANR	8998075	Condition	code < 0	4181:12:133651:133658	8997752	0	True				
ANR	8998076	RelationalExpression	code < 0		8997752	0		<			
ANR	8998077	Identifier	code		8997752	0					
ANR	8998078	PrimaryExpression	0		8997752	1					
ANR	8998079	ReturnStatement	return code ;	4182:12:133673:133684	8997752	1	True				
ANR	8998080	Identifier	code		8997752	0					
ANR	8998081	ExpressionStatement	* esp = proc	4183:8:133694:133705	8997752	4	True				
ANR	8998082	AssignmentExpression	* esp = proc		8997752	0		=			
ANR	8998083	UnaryOperationExpression	* esp		8997752	0					
ANR	8998084	UnaryOperator	*		8997752	0					
ANR	8998085	Identifier	esp		8997752	1					
ANR	8998086	Identifier	proc		8997752	1					
ANR	8998087	ReturnStatement	return o_push_estack ;	4184:8:133715:133735	8997752	5	True				
ANR	8998088	Identifier	o_push_estack		8997752	0					
ANR	8998089	IfStatement	if ( * stage == 1 )		8997752	9					
ANR	8998090	Condition	* stage == 1	4187:8:133752:133762	8997752	0	True				
ANR	8998091	EqualityExpression	* stage == 1		8997752	0		==			
ANR	8998092	UnaryOperationExpression	* stage		8997752	0					
ANR	8998093	UnaryOperator	*		8997752	0					
ANR	8998094	Identifier	stage		8997752	1					
ANR	8998095	PrimaryExpression	1		8997752	1					
ANR	8998096	CompoundStatement		51:20:1709:1709	8997752	1					
ANR	8998097	ExpressionStatement	* stack_depth = 0	4188:8:133774:133790	8997752	0	True				
ANR	8998098	AssignmentExpression	* stack_depth = 0		8997752	0		=			
ANR	8998099	UnaryOperationExpression	* stack_depth		8997752	0					
ANR	8998100	UnaryOperator	*		8997752	0					
ANR	8998101	Identifier	stack_depth		8997752	1					
ANR	8998102	PrimaryExpression	0		8997752	1					
ANR	8998103	ExpressionStatement	* stage = 0	4189:8:133800:133810	8997752	1	True				
ANR	8998104	AssignmentExpression	* stage = 0		8997752	0		=			
ANR	8998105	UnaryOperationExpression	* stage		8997752	0					
ANR	8998106	UnaryOperator	*		8997752	0					
ANR	8998107	Identifier	stage		8997752	1					
ANR	8998108	PrimaryExpression	0		8997752	1					
ANR	8998109	ReturnStatement	return 0 ;	4191:4:133822:133830	8997752	10	True				
ANR	8998110	PrimaryExpression	0		8997752	0					
ANR	8998111	ReturnType	static int		8997752	1					
ANR	8998112	Identifier	devicentransform		8997752	2					
ANR	8998113	ParameterList	"i_ctx_t * i_ctx_p , ref * devicenspace , int * usealternate , int * stage , int * stack_depth"		8997752	3					
ANR	8998114	Parameter	i_ctx_t * i_ctx_p	4136:28:131968:131983	8997752	0	True				
ANR	8998115	ParameterType	i_ctx_t *		8997752	0					
ANR	8998116	Identifier	i_ctx_p		8997752	1					
ANR	8998117	Parameter	ref * devicenspace	4136:46:131986:132002	8997752	1	True				
ANR	8998118	ParameterType	ref *		8997752	0					
ANR	8998119	Identifier	devicenspace		8997752	1					
ANR	8998120	Parameter	int * usealternate	4136:65:132005:132021	8997752	2	True				
ANR	8998121	ParameterType	int *		8997752	0					
ANR	8998122	Identifier	usealternate		8997752	1					
ANR	8998123	Parameter	int * stage	4136:84:132024:132033	8997752	3	True				
ANR	8998124	ParameterType	int *		8997752	0					
ANR	8998125	Identifier	stage		8997752	1					
ANR	8998126	Parameter	int * stack_depth	4136:96:132036:132051	8997752	4	True				
ANR	8998127	ParameterType	int *		8997752	0					
ANR	8998128	Identifier	stack_depth		8997752	1					
ANR	8998129	CFGEntryNode	ENTRY		8997752		True				
ANR	8998130	CFGExitNode	EXIT		8997752		True				
ANR	8998131	Symbol	* igs		8997752						
ANR	8998132	Symbol	stack_depth		8997752						
ANR	8998133	Symbol	code		8997752						
ANR	8998134	Symbol	esp		8997752						
ANR	8998135	Symbol	* dev_proc		8997752						
ANR	8998136	Symbol	& sname		8997752						
ANR	8998137	Symbol	& narray		8997752						
ANR	8998138	Symbol	strncmp		8997752						
ANR	8998139	Symbol	gs_error_typecheck		8997752						
ANR	8998140	Symbol	r_has_type		8997752						
ANR	8998141	Symbol	* esp		8997752						
ANR	8998142	Symbol	igs		8997752						
ANR	8998143	Symbol	dev		8997752						
ANR	8998144	Symbol	t_name		8997752						
ANR	8998145	Symbol	dev_proc		8997752						
ANR	8998146	Symbol	r_size		8997752						
ANR	8998147	Symbol	* stack_depth		8997752						
ANR	8998148	Symbol	imemory		8997752						
ANR	8998149	Symbol	devicenspace		8997752						
ANR	8998150	Symbol	& proc		8997752						
ANR	8998151	Symbol	o_push_estack		8997752						
ANR	8998152	Symbol	proc		8997752						
ANR	8998153	Symbol	get_color_comp_index		8997752						
ANR	8998154	Symbol	* stage		8997752						
ANR	8998155	Symbol	array_get		8997752						
ANR	8998156	Symbol	sname . value . bytes		8997752						
ANR	8998157	Symbol	i		8997752						
ANR	8998158	Symbol	usealternate		8997752						
ANR	8998159	Symbol	narray		8997752						
ANR	8998160	Symbol	SEPARATION_NAME		8997752						
ANR	8998161	Symbol	colorant_number		8997752						
ANR	8998162	Symbol	stage		8997752						
ANR	8998163	Symbol	* usealternate		8997752						
ANR	8998164	Symbol	sname . value		8997752						
ANR	8998165	Symbol	i_ctx_p		8997752						
ANR	8998166	Symbol	sname		8997752						
ANR	8998167	Symbol	"* dev_proc ( dev , get_color_comp_index )"		8997752						
ANR	8998168	Symbol	r_is_array		8997752						
ANR	8998169	Symbol	igs -> device		8997752						
ANR	8998170	Function	devicenbasecolor	4193:0:133834:134956							
ANR	8998171	FunctionDef	"devicenbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		8998170	0					
ANR	8998172	CompoundStatement		4194:0:133944:134956	8998170	0					
ANR	8998173	IdentifierDeclStatement	os_ptr op = osp ;	4195:4:133950:133966	8998170	0	True				
ANR	8998174	IdentifierDecl	op = osp		8998170	0					
ANR	8998175	IdentifierDeclType	os_ptr		8998170	0					
ANR	8998176	Identifier	op		8998170	1					
ANR	8998177	AssignmentExpression	op = osp		8998170	2		=			
ANR	8998178	Identifier	osp		8998170	0					
ANR	8998179	Identifier	osp		8998170	1					
ANR	8998180	IdentifierDeclStatement	"int code , use , n_comp ;"	4196:4:134005:134026	8998170	1	True				
ANR	8998181	IdentifierDecl	code		8998170	0					
ANR	8998182	IdentifierDeclType	int		8998170	0					
ANR	8998183	Identifier	code		8998170	1					
ANR	8998184	IdentifierDecl	use		8998170	1					
ANR	8998185	IdentifierDeclType	int		8998170	0					
ANR	8998186	Identifier	use		8998170	1					
ANR	8998187	IdentifierDecl	n_comp		8998170	2					
ANR	8998188	IdentifierDeclType	int		8998170	0					
ANR	8998189	Identifier	n_comp		8998170	1					
ANR	8998190	IdentifierDeclStatement	ref narray ;	4197:4:134032:134042	8998170	2	True				
ANR	8998191	IdentifierDecl	narray		8998170	0					
ANR	8998192	IdentifierDeclType	ref		8998170	0					
ANR	8998193	Identifier	narray		8998170	1					
ANR	8998194	ExpressionStatement	"code = devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"	4199:4:134049:134114	8998170	3	True				
ANR	8998195	AssignmentExpression	"code = devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"		8998170	0		=			
ANR	8998196	Identifier	code		8998170	0					
ANR	8998197	CallExpression	"devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"		8998170	1					
ANR	8998198	Callee	devicentransform		8998170	0					
ANR	8998199	Identifier	devicentransform		8998170	0					
ANR	8998200	ArgumentList	i_ctx_p		8998170	1					
ANR	8998201	Argument	i_ctx_p		8998170	0					
ANR	8998202	Identifier	i_ctx_p		8998170	0					
ANR	8998203	Argument	space		8998170	1					
ANR	8998204	Identifier	space		8998170	0					
ANR	8998205	Argument	& use		8998170	2					
ANR	8998206	UnaryOperationExpression	& use		8998170	0					
ANR	8998207	UnaryOperator	&		8998170	0					
ANR	8998208	Identifier	use		8998170	1					
ANR	8998209	Argument	stage		8998170	3					
ANR	8998210	Identifier	stage		8998170	0					
ANR	8998211	Argument	stack_depth		8998170	4					
ANR	8998212	Identifier	stack_depth		8998170	0					
ANR	8998213	IfStatement	if ( code != 0 )		8998170	4					
ANR	8998214	Condition	code != 0	4200:8:134124:134133	8998170	0	True				
ANR	8998215	EqualityExpression	code != 0		8998170	0		!=			
ANR	8998216	Identifier	code		8998170	0					
ANR	8998217	PrimaryExpression	0		8998170	1					
ANR	8998218	ReturnStatement	return code ;	4201:8:134144:134155	8998170	1	True				
ANR	8998219	Identifier	code		8998170	0					
ANR	8998220	IfStatement	if ( ! use )		8998170	5					
ANR	8998221	Condition	! use	4202:8:134165:134168	8998170	0	True				
ANR	8998222	UnaryOperationExpression	! use		8998170	0					
ANR	8998223	UnaryOperator	!		8998170	0					
ANR	8998224	Identifier	use		8998170	1					
ANR	8998225	CompoundStatement		9:14:226:226	8998170	1					
ANR	8998226	ExpressionStatement	* stage = 0	4203:8:134181:134191	8998170	0	True				
ANR	8998227	AssignmentExpression	* stage = 0		8998170	0		=			
ANR	8998228	UnaryOperationExpression	* stage		8998170	0					
ANR	8998229	UnaryOperator	*		8998170	0					
ANR	8998230	Identifier	stage		8998170	1					
ANR	8998231	PrimaryExpression	0		8998170	1					
ANR	8998232	ExpressionStatement	* cont = 0	4204:8:134201:134210	8998170	1	True				
ANR	8998233	AssignmentExpression	* cont = 0		8998170	0		=			
ANR	8998234	UnaryOperationExpression	* cont		8998170	0					
ANR	8998235	UnaryOperator	*		8998170	0					
ANR	8998236	Identifier	cont		8998170	1					
ANR	8998237	PrimaryExpression	0		8998170	1					
ANR	8998238	ExpressionStatement	"code = array_get ( imemory , space , 1 , & narray )"	4205:8:134220:134264	8998170	2	True				
ANR	8998239	AssignmentExpression	"code = array_get ( imemory , space , 1 , & narray )"		8998170	0		=			
ANR	8998240	Identifier	code		8998170	0					
ANR	8998241	CallExpression	"array_get ( imemory , space , 1 , & narray )"		8998170	1					
ANR	8998242	Callee	array_get		8998170	0					
ANR	8998243	Identifier	array_get		8998170	0					
ANR	8998244	ArgumentList	imemory		8998170	1					
ANR	8998245	Argument	imemory		8998170	0					
ANR	8998246	Identifier	imemory		8998170	0					
ANR	8998247	Argument	space		8998170	1					
ANR	8998248	Identifier	space		8998170	0					
ANR	8998249	Argument	1		8998170	2					
ANR	8998250	PrimaryExpression	1		8998170	0					
ANR	8998251	Argument	& narray		8998170	3					
ANR	8998252	UnaryOperationExpression	& narray		8998170	0					
ANR	8998253	UnaryOperator	&		8998170	0					
ANR	8998254	Identifier	narray		8998170	1					
ANR	8998255	IfStatement	if ( code < 0 )		8998170	3					
ANR	8998256	Condition	code < 0	4206:12:134278:134285	8998170	0	True				
ANR	8998257	RelationalExpression	code < 0		8998170	0		<			
ANR	8998258	Identifier	code		8998170	0					
ANR	8998259	PrimaryExpression	0		8998170	1					
ANR	8998260	ReturnStatement	return code ;	4207:12:134300:134311	8998170	1	True				
ANR	8998261	Identifier	code		8998170	0					
ANR	8998262	ExpressionStatement	n_comp = r_size ( & narray )	4208:8:134321:134345	8998170	4	True				
ANR	8998263	AssignmentExpression	n_comp = r_size ( & narray )		8998170	0		=			
ANR	8998264	Identifier	n_comp		8998170	0					
ANR	8998265	CallExpression	r_size ( & narray )		8998170	1					
ANR	8998266	Callee	r_size		8998170	0					
ANR	8998267	Identifier	r_size		8998170	0					
ANR	8998268	ArgumentList	& narray		8998170	1					
ANR	8998269	Argument	& narray		8998170	0					
ANR	8998270	UnaryOperationExpression	& narray		8998170	0					
ANR	8998271	UnaryOperator	&		8998170	0					
ANR	8998272	Identifier	narray		8998170	1					
ANR	8998273	ExpressionStatement	pop ( n_comp )	4209:8:134355:134366	8998170	5	True				
ANR	8998274	CallExpression	pop ( n_comp )		8998170	0					
ANR	8998275	Callee	pop		8998170	0					
ANR	8998276	Identifier	pop		8998170	0					
ANR	8998277	ArgumentList	n_comp		8998170	1					
ANR	8998278	Argument	n_comp		8998170	0					
ANR	8998279	Identifier	n_comp		8998170	0					
ANR	8998280	ExpressionStatement	op = osp	4210:8:134376:134384	8998170	6	True				
ANR	8998281	AssignmentExpression	op = osp		8998170	0		=			
ANR	8998282	Identifier	op		8998170	0					
ANR	8998283	Identifier	osp		8998170	1					
ANR	8998284	SwitchStatement	switch ( base )		8998170	7					
ANR	8998285	Condition	base	4211:15:134401:134404	8998170	0	True				
ANR	8998286	Identifier	base		8998170	0					
ANR	8998287	CompoundStatement		18:21:462:462	8998170	1					
ANR	8998288	Label	case 0 :	4212:8:134417:134423	8998170	0	True				
ANR	8998289	ExpressionStatement	push ( 1 )	4213:12:134437:134444	8998170	1	True				
ANR	8998290	CallExpression	push ( 1 )		8998170	0					
ANR	8998291	Callee	push		8998170	0					
ANR	8998292	Identifier	push		8998170	0					
ANR	8998293	ArgumentList	1		8998170	1					
ANR	8998294	Argument	1		8998170	0					
ANR	8998295	PrimaryExpression	1		8998170	0					
ANR	8998296	ExpressionStatement	"make_real ( op , 0.0 )"	4214:12:134458:134476	8998170	2	True				
ANR	8998297	CallExpression	"make_real ( op , 0.0 )"		8998170	0					
ANR	8998298	Callee	make_real		8998170	0					
ANR	8998299	Identifier	make_real		8998170	0					
ANR	8998300	ArgumentList	op		8998170	1					
ANR	8998301	Argument	op		8998170	0					
ANR	8998302	Identifier	op		8998170	0					
ANR	8998303	Argument	0.0		8998170	1					
ANR	8998304	PrimaryExpression	0.0		8998170	0					
ANR	8998305	BreakStatement	break ;	4215:12:134490:134495	8998170	3	True				
ANR	8998306	Label	case 1 :	4216:8:134505:134511	8998170	4	True				
ANR	8998307	Label	case 2 :	4217:8:134521:134527	8998170	5	True				
ANR	8998308	ExpressionStatement	push ( 3 )	4218:12:134541:134548	8998170	6	True				
ANR	8998309	CallExpression	push ( 3 )		8998170	0					
ANR	8998310	Callee	push		8998170	0					
ANR	8998311	Identifier	push		8998170	0					
ANR	8998312	ArgumentList	3		8998170	1					
ANR	8998313	Argument	3		8998170	0					
ANR	8998314	PrimaryExpression	3		8998170	0					
ANR	8998315	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	4219:12:134562:134585	8998170	7	True				
ANR	8998316	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		8998170	0					
ANR	8998317	Callee	make_real		8998170	0					
ANR	8998318	Identifier	make_real		8998170	0					
ANR	8998319	ArgumentList	& op [ - 2 ]		8998170	1					
ANR	8998320	Argument	& op [ - 2 ]		8998170	0					
ANR	8998321	UnaryOperationExpression	& op [ - 2 ]		8998170	0					
ANR	8998322	UnaryOperator	&		8998170	0					
ANR	8998323	ArrayIndexing	op [ - 2 ]		8998170	1					
ANR	8998324	Identifier	op		8998170	0					
ANR	8998325	UnaryOperationExpression	- 2		8998170	1					
ANR	8998326	UnaryOperator	-		8998170	0					
ANR	8998327	PrimaryExpression	2		8998170	1					
ANR	8998328	Argument	0.0		8998170	1					
ANR	8998329	PrimaryExpression	0.0		8998170	0					
ANR	8998330	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	4220:12:134599:134622	8998170	8	True				
ANR	8998331	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		8998170	0					
ANR	8998332	Callee	make_real		8998170	0					
ANR	8998333	Identifier	make_real		8998170	0					
ANR	8998334	ArgumentList	& op [ - 1 ]		8998170	1					
ANR	8998335	Argument	& op [ - 1 ]		8998170	0					
ANR	8998336	UnaryOperationExpression	& op [ - 1 ]		8998170	0					
ANR	8998337	UnaryOperator	&		8998170	0					
ANR	8998338	ArrayIndexing	op [ - 1 ]		8998170	1					
ANR	8998339	Identifier	op		8998170	0					
ANR	8998340	UnaryOperationExpression	- 1		8998170	1					
ANR	8998341	UnaryOperator	-		8998170	0					
ANR	8998342	PrimaryExpression	1		8998170	1					
ANR	8998343	Argument	0.0		8998170	1					
ANR	8998344	PrimaryExpression	0.0		8998170	0					
ANR	8998345	ExpressionStatement	"make_real ( op , 0.0 )"	4221:12:134636:134654	8998170	9	True				
ANR	8998346	CallExpression	"make_real ( op , 0.0 )"		8998170	0					
ANR	8998347	Callee	make_real		8998170	0					
ANR	8998348	Identifier	make_real		8998170	0					
ANR	8998349	ArgumentList	op		8998170	1					
ANR	8998350	Argument	op		8998170	0					
ANR	8998351	Identifier	op		8998170	0					
ANR	8998352	Argument	0.0		8998170	1					
ANR	8998353	PrimaryExpression	0.0		8998170	0					
ANR	8998354	BreakStatement	break ;	4222:12:134668:134673	8998170	10	True				
ANR	8998355	Label	case 3 :	4223:8:134683:134689	8998170	11	True				
ANR	8998356	ExpressionStatement	push ( 4 )	4224:12:134703:134710	8998170	12	True				
ANR	8998357	CallExpression	push ( 4 )		8998170	0					
ANR	8998358	Callee	push		8998170	0					
ANR	8998359	Identifier	push		8998170	0					
ANR	8998360	ArgumentList	4		8998170	1					
ANR	8998361	Argument	4		8998170	0					
ANR	8998362	PrimaryExpression	4		8998170	0					
ANR	8998363	ExpressionStatement	"make_real ( & op [ - 3 ] , 0.0 )"	4225:12:134724:134747	8998170	13	True				
ANR	8998364	CallExpression	"make_real ( & op [ - 3 ] , 0.0 )"		8998170	0					
ANR	8998365	Callee	make_real		8998170	0					
ANR	8998366	Identifier	make_real		8998170	0					
ANR	8998367	ArgumentList	& op [ - 3 ]		8998170	1					
ANR	8998368	Argument	& op [ - 3 ]		8998170	0					
ANR	8998369	UnaryOperationExpression	& op [ - 3 ]		8998170	0					
ANR	8998370	UnaryOperator	&		8998170	0					
ANR	8998371	ArrayIndexing	op [ - 3 ]		8998170	1					
ANR	8998372	Identifier	op		8998170	0					
ANR	8998373	UnaryOperationExpression	- 3		8998170	1					
ANR	8998374	UnaryOperator	-		8998170	0					
ANR	8998375	PrimaryExpression	3		8998170	1					
ANR	8998376	Argument	0.0		8998170	1					
ANR	8998377	PrimaryExpression	0.0		8998170	0					
ANR	8998378	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	4226:12:134761:134784	8998170	14	True				
ANR	8998379	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		8998170	0					
ANR	8998380	Callee	make_real		8998170	0					
ANR	8998381	Identifier	make_real		8998170	0					
ANR	8998382	ArgumentList	& op [ - 2 ]		8998170	1					
ANR	8998383	Argument	& op [ - 2 ]		8998170	0					
ANR	8998384	UnaryOperationExpression	& op [ - 2 ]		8998170	0					
ANR	8998385	UnaryOperator	&		8998170	0					
ANR	8998386	ArrayIndexing	op [ - 2 ]		8998170	1					
ANR	8998387	Identifier	op		8998170	0					
ANR	8998388	UnaryOperationExpression	- 2		8998170	1					
ANR	8998389	UnaryOperator	-		8998170	0					
ANR	8998390	PrimaryExpression	2		8998170	1					
ANR	8998391	Argument	0.0		8998170	1					
ANR	8998392	PrimaryExpression	0.0		8998170	0					
ANR	8998393	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	4227:12:134798:134821	8998170	15	True				
ANR	8998394	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		8998170	0					
ANR	8998395	Callee	make_real		8998170	0					
ANR	8998396	Identifier	make_real		8998170	0					
ANR	8998397	ArgumentList	& op [ - 1 ]		8998170	1					
ANR	8998398	Argument	& op [ - 1 ]		8998170	0					
ANR	8998399	UnaryOperationExpression	& op [ - 1 ]		8998170	0					
ANR	8998400	UnaryOperator	&		8998170	0					
ANR	8998401	ArrayIndexing	op [ - 1 ]		8998170	1					
ANR	8998402	Identifier	op		8998170	0					
ANR	8998403	UnaryOperationExpression	- 1		8998170	1					
ANR	8998404	UnaryOperator	-		8998170	0					
ANR	8998405	PrimaryExpression	1		8998170	1					
ANR	8998406	Argument	0.0		8998170	1					
ANR	8998407	PrimaryExpression	0.0		8998170	0					
ANR	8998408	ExpressionStatement	"make_real ( op , 0.0 )"	4228:12:134835:134853	8998170	16	True				
ANR	8998409	CallExpression	"make_real ( op , 0.0 )"		8998170	0					
ANR	8998410	Callee	make_real		8998170	0					
ANR	8998411	Identifier	make_real		8998170	0					
ANR	8998412	ArgumentList	op		8998170	1					
ANR	8998413	Argument	op		8998170	0					
ANR	8998414	Identifier	op		8998170	0					
ANR	8998415	Argument	0.0		8998170	1					
ANR	8998416	PrimaryExpression	0.0		8998170	0					
ANR	8998417	BreakStatement	break ;	4229:12:134867:134872	8998170	17	True				
ANR	8998418	ElseStatement	else		8998170	0					
ANR	8998419	CompoundStatement		38:11:950:950	8998170	0					
ANR	8998420	ExpressionStatement	* stage = 0	4232:8:134905:134915	8998170	0	True				
ANR	8998421	AssignmentExpression	* stage = 0		8998170	0		=			
ANR	8998422	UnaryOperationExpression	* stage		8998170	0					
ANR	8998423	UnaryOperator	*		8998170	0					
ANR	8998424	Identifier	stage		8998170	1					
ANR	8998425	PrimaryExpression	0		8998170	1					
ANR	8998426	ExpressionStatement	* cont = 1	4233:8:134925:134934	8998170	1	True				
ANR	8998427	AssignmentExpression	* cont = 1		8998170	0		=			
ANR	8998428	UnaryOperationExpression	* cont		8998170	0					
ANR	8998429	UnaryOperator	*		8998170	0					
ANR	8998430	Identifier	cont		8998170	1					
ANR	8998431	PrimaryExpression	1		8998170	1					
ANR	8998432	ReturnStatement	return 0 ;	4235:4:134946:134954	8998170	6	True				
ANR	8998433	PrimaryExpression	0		8998170	0					
ANR	8998434	ReturnType	static int		8998170	1					
ANR	8998435	Identifier	devicenbasecolor		8998170	2					
ANR	8998436	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		8998170	3					
ANR	8998437	Parameter	i_ctx_t * i_ctx_p	4193:28:133862:133878	8998170	0	True				
ANR	8998438	ParameterType	i_ctx_t *		8998170	0					
ANR	8998439	Identifier	i_ctx_p		8998170	1					
ANR	8998440	Parameter	ref * space	4193:47:133881:133890	8998170	1	True				
ANR	8998441	ParameterType	ref *		8998170	0					
ANR	8998442	Identifier	space		8998170	1					
ANR	8998443	Parameter	int base	4193:59:133893:133900	8998170	2	True				
ANR	8998444	ParameterType	int		8998170	0					
ANR	8998445	Identifier	base		8998170	1					
ANR	8998446	Parameter	int * stage	4193:69:133903:133912	8998170	3	True				
ANR	8998447	ParameterType	int *		8998170	0					
ANR	8998448	Identifier	stage		8998170	1					
ANR	8998449	Parameter	int * cont	4193:81:133915:133923	8998170	4	True				
ANR	8998450	ParameterType	int *		8998170	0					
ANR	8998451	Identifier	cont		8998170	1					
ANR	8998452	Parameter	int * stack_depth	4193:92:133926:133941	8998170	5	True				
ANR	8998453	ParameterType	int *		8998170	0					
ANR	8998454	Identifier	stack_depth		8998170	1					
ANR	8998455	CFGEntryNode	ENTRY		8998170		True				
ANR	8998456	CFGExitNode	EXIT		8998170		True				
ANR	8998457	Symbol	stack_depth		8998170						
ANR	8998458	Symbol	op		8998170						
ANR	8998459	Symbol	code		8998170						
ANR	8998460	Symbol	* stage		8998170						
ANR	8998461	Symbol	use		8998170						
ANR	8998462	Symbol	array_get		8998170						
ANR	8998463	Symbol	narray		8998170						
ANR	8998464	Symbol	devicentransform		8998170						
ANR	8998465	Symbol	& use		8998170						
ANR	8998466	Symbol	osp		8998170						
ANR	8998467	Symbol	space		8998170						
ANR	8998468	Symbol	& narray		8998170						
ANR	8998469	Symbol	stage		8998170						
ANR	8998470	Symbol	* cont		8998170						
ANR	8998471	Symbol	i_ctx_p		8998170						
ANR	8998472	Symbol	r_size		8998170						
ANR	8998473	Symbol	imemory		8998170						
ANR	8998474	Symbol	cont		8998170						
ANR	8998475	Symbol	n_comp		8998170						
ANR	8998476	Symbol	base		8998170						
ANR	8998477	Function	devicenvalidate	4237:0:134958:135688							
ANR	8998478	FunctionDef	"devicenvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		8998477	0					
ANR	8998479	CompoundStatement		4238:0:135045:135688	8998477	0					
ANR	8998480	IdentifierDeclStatement	"int i , code ;"	4239:4:135051:135062	8998477	0	True				
ANR	8998481	IdentifierDecl	i		8998477	0					
ANR	8998482	IdentifierDeclType	int		8998477	0					
ANR	8998483	Identifier	i		8998477	1					
ANR	8998484	IdentifierDecl	code		8998477	1					
ANR	8998485	IdentifierDeclType	int		8998477	0					
ANR	8998486	Identifier	code		8998477	1					
ANR	8998487	IdentifierDeclStatement	ref narray ;	4240:4:135068:135078	8998477	1	True				
ANR	8998488	IdentifierDecl	narray		8998477	0					
ANR	8998489	IdentifierDeclType	ref		8998477	0					
ANR	8998490	Identifier	narray		8998477	1					
ANR	8998491	IdentifierDeclStatement	os_ptr op = osp ;	4241:4:135084:135099	8998477	2	True				
ANR	8998492	IdentifierDecl	op = osp		8998477	0					
ANR	8998493	IdentifierDeclType	os_ptr		8998477	0					
ANR	8998494	Identifier	op		8998477	1					
ANR	8998495	AssignmentExpression	op = osp		8998477	2		=			
ANR	8998496	Identifier	osp		8998477	0					
ANR	8998497	Identifier	osp		8998477	1					
ANR	8998498	ExpressionStatement	"code = array_get ( imemory , space , 1 , & narray )"	4243:4:135106:135150	8998477	3	True				
ANR	8998499	AssignmentExpression	"code = array_get ( imemory , space , 1 , & narray )"		8998477	0		=			
ANR	8998500	Identifier	code		8998477	0					
ANR	8998501	CallExpression	"array_get ( imemory , space , 1 , & narray )"		8998477	1					
ANR	8998502	Callee	array_get		8998477	0					
ANR	8998503	Identifier	array_get		8998477	0					
ANR	8998504	ArgumentList	imemory		8998477	1					
ANR	8998505	Argument	imemory		8998477	0					
ANR	8998506	Identifier	imemory		8998477	0					
ANR	8998507	Argument	space		8998477	1					
ANR	8998508	Identifier	space		8998477	0					
ANR	8998509	Argument	1		8998477	2					
ANR	8998510	PrimaryExpression	1		8998477	0					
ANR	8998511	Argument	& narray		8998477	3					
ANR	8998512	UnaryOperationExpression	& narray		8998477	0					
ANR	8998513	UnaryOperator	&		8998477	0					
ANR	8998514	Identifier	narray		8998477	1					
ANR	8998515	IfStatement	if ( code < 0 )		8998477	4					
ANR	8998516	Condition	code < 0	4244:8:135160:135167	8998477	0	True				
ANR	8998517	RelationalExpression	code < 0		8998477	0		<			
ANR	8998518	Identifier	code		8998477	0					
ANR	8998519	PrimaryExpression	0		8998477	1					
ANR	8998520	ReturnStatement	return code ;	4245:8:135178:135189	8998477	1	True				
ANR	8998521	Identifier	code		8998477	0					
ANR	8998522	IfStatement	if ( ! r_is_array ( & narray ) )		8998477	5					
ANR	8998523	Condition	! r_is_array ( & narray )	4246:8:135199:135218	8998477	0	True				
ANR	8998524	UnaryOperationExpression	! r_is_array ( & narray )		8998477	0					
ANR	8998525	UnaryOperator	!		8998477	0					
ANR	8998526	CallExpression	r_is_array ( & narray )		8998477	1					
ANR	8998527	Callee	r_is_array		8998477	0					
ANR	8998528	Identifier	r_is_array		8998477	0					
ANR	8998529	ArgumentList	& narray		8998477	1					
ANR	8998530	Argument	& narray		8998477	0					
ANR	8998531	UnaryOperationExpression	& narray		8998477	0					
ANR	8998532	UnaryOperator	&		8998477	0					
ANR	8998533	Identifier	narray		8998477	1					
ANR	8998534	ExpressionStatement	return_error ( gs_error_typecheck )	4247:8:135229:135261	8998477	1	True				
ANR	8998535	CallExpression	return_error ( gs_error_typecheck )		8998477	0					
ANR	8998536	Callee	return_error		8998477	0					
ANR	8998537	Identifier	return_error		8998477	0					
ANR	8998538	ArgumentList	gs_error_typecheck		8998477	1					
ANR	8998539	Argument	gs_error_typecheck		8998477	0					
ANR	8998540	Identifier	gs_error_typecheck		8998477	0					
ANR	8998541	IfStatement	if ( num_comps < r_size ( & narray ) )		8998477	6					
ANR	8998542	Condition	num_comps < r_size ( & narray )	4249:8:135272:135298	8998477	0	True				
ANR	8998543	RelationalExpression	num_comps < r_size ( & narray )		8998477	0		<			
ANR	8998544	Identifier	num_comps		8998477	0					
ANR	8998545	CallExpression	r_size ( & narray )		8998477	1					
ANR	8998546	Callee	r_size		8998477	0					
ANR	8998547	Identifier	r_size		8998477	0					
ANR	8998548	ArgumentList	& narray		8998477	1					
ANR	8998549	Argument	& narray		8998477	0					
ANR	8998550	UnaryOperationExpression	& narray		8998477	0					
ANR	8998551	UnaryOperator	&		8998477	0					
ANR	8998552	Identifier	narray		8998477	1					
ANR	8998553	ExpressionStatement	return_error ( gs_error_stackunderflow )	4250:8:135309:135346	8998477	1	True				
ANR	8998554	CallExpression	return_error ( gs_error_stackunderflow )		8998477	0					
ANR	8998555	Callee	return_error		8998477	0					
ANR	8998556	Identifier	return_error		8998477	0					
ANR	8998557	ArgumentList	gs_error_stackunderflow		8998477	1					
ANR	8998558	Argument	gs_error_stackunderflow		8998477	0					
ANR	8998559	Identifier	gs_error_stackunderflow		8998477	0					
ANR	8998560	ExpressionStatement	op -= r_size ( & narray ) - 1	4252:4:135353:135378	8998477	7	True				
ANR	8998561	AssignmentExpression	op -= r_size ( & narray ) - 1		8998477	0		-=			
ANR	8998562	Identifier	op		8998477	0					
ANR	8998563	AdditiveExpression	r_size ( & narray ) - 1		8998477	1		-			
ANR	8998564	CallExpression	r_size ( & narray )		8998477	0					
ANR	8998565	Callee	r_size		8998477	0					
ANR	8998566	Identifier	r_size		8998477	0					
ANR	8998567	ArgumentList	& narray		8998477	1					
ANR	8998568	Argument	& narray		8998477	0					
ANR	8998569	UnaryOperationExpression	& narray		8998477	0					
ANR	8998570	UnaryOperator	&		8998477	0					
ANR	8998571	Identifier	narray		8998477	1					
ANR	8998572	PrimaryExpression	1		8998477	1					
ANR	8998573	ForStatement	for ( i = 0 ; i < r_size ( & narray ) ; i ++ )		8998477	8					
ANR	8998574	ForInit	i = 0 ;	4254:9:135390:135393	8998477	0	True				
ANR	8998575	AssignmentExpression	i = 0		8998477	0		=			
ANR	8998576	Identifier	i		8998477	0					
ANR	8998577	PrimaryExpression	0		8998477	1					
ANR	8998578	Condition	i < r_size ( & narray )	4254:13:135394:135412	8998477	1	True				
ANR	8998579	RelationalExpression	i < r_size ( & narray )		8998477	0		<			
ANR	8998580	Identifier	i		8998477	0					
ANR	8998581	CallExpression	r_size ( & narray )		8998477	1					
ANR	8998582	Callee	r_size		8998477	0					
ANR	8998583	Identifier	r_size		8998477	0					
ANR	8998584	ArgumentList	& narray		8998477	1					
ANR	8998585	Argument	& narray		8998477	0					
ANR	8998586	UnaryOperationExpression	& narray		8998477	0					
ANR	8998587	UnaryOperator	&		8998477	0					
ANR	8998588	Identifier	narray		8998477	1					
ANR	8998589	PostIncDecOperationExpression	i ++	4254:34:135415:135417	8998477	2	True				
ANR	8998590	Identifier	i		8998477	0					
ANR	8998591	IncDec	++		8998477	1					
ANR	8998592	CompoundStatement		17:39:374:374	8998477	3					
ANR	8998593	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		8998477	0					
ANR	8998594	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	4255:12:135434:135486	8998477	0	True				
ANR	8998595	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		8998477	0		&&			
ANR	8998596	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		8998477	0					
ANR	8998597	UnaryOperator	!		8998477	0					
ANR	8998598	CallExpression	"r_has_type ( op , t_integer )"		8998477	1					
ANR	8998599	Callee	r_has_type		8998477	0					
ANR	8998600	Identifier	r_has_type		8998477	0					
ANR	8998601	ArgumentList	op		8998477	1					
ANR	8998602	Argument	op		8998477	0					
ANR	8998603	Identifier	op		8998477	0					
ANR	8998604	Argument	t_integer		8998477	1					
ANR	8998605	Identifier	t_integer		8998477	0					
ANR	8998606	UnaryOperationExpression	"! r_has_type ( op , t_real )"		8998477	1					
ANR	8998607	UnaryOperator	!		8998477	0					
ANR	8998608	CallExpression	"r_has_type ( op , t_real )"		8998477	1					
ANR	8998609	Callee	r_has_type		8998477	0					
ANR	8998610	Identifier	r_has_type		8998477	0					
ANR	8998611	ArgumentList	op		8998477	1					
ANR	8998612	Argument	op		8998477	0					
ANR	8998613	Identifier	op		8998477	0					
ANR	8998614	Argument	t_real		8998477	1					
ANR	8998615	Identifier	t_real		8998477	0					
ANR	8998616	ExpressionStatement	return_error ( gs_error_typecheck )	4256:12:135501:135533	8998477	1	True				
ANR	8998617	CallExpression	return_error ( gs_error_typecheck )		8998477	0					
ANR	8998618	Callee	return_error		8998477	0					
ANR	8998619	Identifier	return_error		8998477	0					
ANR	8998620	ArgumentList	gs_error_typecheck		8998477	1					
ANR	8998621	Argument	gs_error_typecheck		8998477	0					
ANR	8998622	Identifier	gs_error_typecheck		8998477	0					
ANR	8998623	IfStatement	if ( values [ i ] > 1.0 )		8998477	1					
ANR	8998624	Condition	values [ i ] > 1.0	4258:12:135548:135562	8998477	0	True				
ANR	8998625	RelationalExpression	values [ i ] > 1.0		8998477	0		>			
ANR	8998626	ArrayIndexing	values [ i ]		8998477	0					
ANR	8998627	Identifier	values		8998477	0					
ANR	8998628	Identifier	i		8998477	1					
ANR	8998629	PrimaryExpression	1.0		8998477	1					
ANR	8998630	ExpressionStatement	values [ i ] = 1.0	4259:12:135577:135592	8998477	1	True				
ANR	8998631	AssignmentExpression	values [ i ] = 1.0		8998477	0		=			
ANR	8998632	ArrayIndexing	values [ i ]		8998477	0					
ANR	8998633	Identifier	values		8998477	0					
ANR	8998634	Identifier	i		8998477	1					
ANR	8998635	PrimaryExpression	1.0		8998477	1					
ANR	8998636	IfStatement	if ( values [ i ] < 0.0 )		8998477	2					
ANR	8998637	Condition	values [ i ] < 0.0	4261:12:135607:135621	8998477	0	True				
ANR	8998638	RelationalExpression	values [ i ] < 0.0		8998477	0		<			
ANR	8998639	ArrayIndexing	values [ i ]		8998477	0					
ANR	8998640	Identifier	values		8998477	0					
ANR	8998641	Identifier	i		8998477	1					
ANR	8998642	PrimaryExpression	0.0		8998477	1					
ANR	8998643	ExpressionStatement	values [ i ] = 0.0	4262:12:135636:135651	8998477	1	True				
ANR	8998644	AssignmentExpression	values [ i ] = 0.0		8998477	0		=			
ANR	8998645	ArrayIndexing	values [ i ]		8998477	0					
ANR	8998646	Identifier	values		8998477	0					
ANR	8998647	Identifier	i		8998477	1					
ANR	8998648	PrimaryExpression	0.0		8998477	1					
ANR	8998649	ExpressionStatement	op ++	4263:8:135661:135665	8998477	3	True				
ANR	8998650	PostIncDecOperationExpression	op ++		8998477	0					
ANR	8998651	Identifier	op		8998477	0					
ANR	8998652	IncDec	++		8998477	1					
ANR	8998653	ReturnStatement	return 0 ;	4266:4:135678:135686	8998477	9	True				
ANR	8998654	PrimaryExpression	0		8998477	0					
ANR	8998655	ReturnType	static int		8998477	1					
ANR	8998656	Identifier	devicenvalidate		8998477	2					
ANR	8998657	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		8998477	3					
ANR	8998658	Parameter	i_ctx_t * i_ctx_p	4237:27:134985:135000	8998477	0	True				
ANR	8998659	ParameterType	i_ctx_t *		8998477	0					
ANR	8998660	Identifier	i_ctx_p		8998477	1					
ANR	8998661	Parameter	ref * space	4237:45:135003:135012	8998477	1	True				
ANR	8998662	ParameterType	ref *		8998477	0					
ANR	8998663	Identifier	space		8998477	1					
ANR	8998664	Parameter	float * values	4237:57:135015:135027	8998477	2	True				
ANR	8998665	ParameterType	float *		8998477	0					
ANR	8998666	Identifier	values		8998477	1					
ANR	8998667	Parameter	int num_comps	4237:72:135030:135042	8998477	3	True				
ANR	8998668	ParameterType	int		8998477	0					
ANR	8998669	Identifier	num_comps		8998477	1					
ANR	8998670	CFGEntryNode	ENTRY		8998477		True				
ANR	8998671	CFGExitNode	EXIT		8998477		True				
ANR	8998672	Symbol	op		8998477						
ANR	8998673	Symbol	code		8998477						
ANR	8998674	Symbol	array_get		8998477						
ANR	8998675	Symbol	* values		8998477						
ANR	8998676	Symbol	values		8998477						
ANR	8998677	Symbol	i		8998477						
ANR	8998678	Symbol	narray		8998477						
ANR	8998679	Symbol	t_real		8998477						
ANR	8998680	Symbol	osp		8998477						
ANR	8998681	Symbol	space		8998477						
ANR	8998682	Symbol	& narray		8998477						
ANR	8998683	Symbol	gs_error_typecheck		8998477						
ANR	8998684	Symbol	r_has_type		8998477						
ANR	8998685	Symbol	* i		8998477						
ANR	8998686	Symbol	t_integer		8998477						
ANR	8998687	Symbol	gs_error_stackunderflow		8998477						
ANR	8998688	Symbol	i_ctx_p		8998477						
ANR	8998689	Symbol	num_comps		8998477						
ANR	8998690	Symbol	r_size		8998477						
ANR	8998691	Symbol	imemory		8998477						
ANR	8998692	Symbol	r_is_array		8998477						
ANR	8998693	Function	devicencompareproc	4268:0:135690:136878							
ANR	8998694	FunctionDef	"devicencompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		8998693	0					
ANR	8998695	CompoundStatement		4269:0:135766:136878	8998693	0					
ANR	8998696	IdentifierDeclStatement	"ref sname1 , sname2 ;"	4270:4:135772:135790	8998693	0	True				
ANR	8998697	IdentifierDecl	sname1		8998693	0					
ANR	8998698	IdentifierDeclType	ref		8998693	0					
ANR	8998699	Identifier	sname1		8998693	1					
ANR	8998700	IdentifierDecl	sname2		8998693	1					
ANR	8998701	IdentifierDeclType	ref		8998693	0					
ANR	8998702	Identifier	sname2		8998693	1					
ANR	8998703	IdentifierDeclStatement	int code ;	4271:4:135796:135804	8998693	1	True				
ANR	8998704	IdentifierDecl	code		8998693	0					
ANR	8998705	IdentifierDeclType	int		8998693	0					
ANR	8998706	Identifier	code		8998693	1					
ANR	8998707	ExpressionStatement	"code = array_get ( imemory , space , 1 , & sname1 )"	4273:4:135811:135855	8998693	2	True				
ANR	8998708	AssignmentExpression	"code = array_get ( imemory , space , 1 , & sname1 )"		8998693	0		=			
ANR	8998709	Identifier	code		8998693	0					
ANR	8998710	CallExpression	"array_get ( imemory , space , 1 , & sname1 )"		8998693	1					
ANR	8998711	Callee	array_get		8998693	0					
ANR	8998712	Identifier	array_get		8998693	0					
ANR	8998713	ArgumentList	imemory		8998693	1					
ANR	8998714	Argument	imemory		8998693	0					
ANR	8998715	Identifier	imemory		8998693	0					
ANR	8998716	Argument	space		8998693	1					
ANR	8998717	Identifier	space		8998693	0					
ANR	8998718	Argument	1		8998693	2					
ANR	8998719	PrimaryExpression	1		8998693	0					
ANR	8998720	Argument	& sname1		8998693	3					
ANR	8998721	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998722	UnaryOperator	&		8998693	0					
ANR	8998723	Identifier	sname1		8998693	1					
ANR	8998724	IfStatement	if ( code < 0 )		8998693	3					
ANR	8998725	Condition	code < 0	4274:8:135865:135872	8998693	0	True				
ANR	8998726	RelationalExpression	code < 0		8998693	0		<			
ANR	8998727	Identifier	code		8998693	0					
ANR	8998728	PrimaryExpression	0		8998693	1					
ANR	8998729	ReturnStatement	return 0 ;	4275:8:135883:135891	8998693	1	True				
ANR	8998730	PrimaryExpression	0		8998693	0					
ANR	8998731	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & sname2 )"	4277:4:135898:135946	8998693	4	True				
ANR	8998732	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & sname2 )"		8998693	0		=			
ANR	8998733	Identifier	code		8998693	0					
ANR	8998734	CallExpression	"array_get ( imemory , testspace , 1 , & sname2 )"		8998693	1					
ANR	8998735	Callee	array_get		8998693	0					
ANR	8998736	Identifier	array_get		8998693	0					
ANR	8998737	ArgumentList	imemory		8998693	1					
ANR	8998738	Argument	imemory		8998693	0					
ANR	8998739	Identifier	imemory		8998693	0					
ANR	8998740	Argument	testspace		8998693	1					
ANR	8998741	Identifier	testspace		8998693	0					
ANR	8998742	Argument	1		8998693	2					
ANR	8998743	PrimaryExpression	1		8998693	0					
ANR	8998744	Argument	& sname2		8998693	3					
ANR	8998745	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998746	UnaryOperator	&		8998693	0					
ANR	8998747	Identifier	sname2		8998693	1					
ANR	8998748	IfStatement	if ( code < 0 )		8998693	5					
ANR	8998749	Condition	code < 0	4278:8:135956:135963	8998693	0	True				
ANR	8998750	RelationalExpression	code < 0		8998693	0		<			
ANR	8998751	Identifier	code		8998693	0					
ANR	8998752	PrimaryExpression	0		8998693	1					
ANR	8998753	ReturnStatement	return 0 ;	4279:8:135974:135982	8998693	1	True				
ANR	8998754	PrimaryExpression	0		8998693	0					
ANR	8998755	IfStatement	if ( ! r_is_array ( & sname1 ) )		8998693	6					
ANR	8998756	Condition	! r_is_array ( & sname1 )	4281:8:135993:136012	8998693	0	True				
ANR	8998757	UnaryOperationExpression	! r_is_array ( & sname1 )		8998693	0					
ANR	8998758	UnaryOperator	!		8998693	0					
ANR	8998759	CallExpression	r_is_array ( & sname1 )		8998693	1					
ANR	8998760	Callee	r_is_array		8998693	0					
ANR	8998761	Identifier	r_is_array		8998693	0					
ANR	8998762	ArgumentList	& sname1		8998693	1					
ANR	8998763	Argument	& sname1		8998693	0					
ANR	8998764	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998765	UnaryOperator	&		8998693	0					
ANR	8998766	Identifier	sname1		8998693	1					
ANR	8998767	ReturnStatement	return 0 ;	4282:8:136023:136031	8998693	1	True				
ANR	8998768	PrimaryExpression	0		8998693	0					
ANR	8998769	IfStatement	if ( ! r_is_array ( & sname2 ) )		8998693	7					
ANR	8998770	Condition	! r_is_array ( & sname2 )	4283:8:136041:136060	8998693	0	True				
ANR	8998771	UnaryOperationExpression	! r_is_array ( & sname2 )		8998693	0					
ANR	8998772	UnaryOperator	!		8998693	0					
ANR	8998773	CallExpression	r_is_array ( & sname2 )		8998693	1					
ANR	8998774	Callee	r_is_array		8998693	0					
ANR	8998775	Identifier	r_is_array		8998693	0					
ANR	8998776	ArgumentList	& sname2		8998693	1					
ANR	8998777	Argument	& sname2		8998693	0					
ANR	8998778	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998779	UnaryOperator	&		8998693	0					
ANR	8998780	Identifier	sname2		8998693	1					
ANR	8998781	ReturnStatement	return 0 ;	4284:8:136071:136079	8998693	1	True				
ANR	8998782	PrimaryExpression	0		8998693	0					
ANR	8998783	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		8998693	8					
ANR	8998784	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	4286:8:136090:136130	8998693	0	True				
ANR	8998785	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8998693	0					
ANR	8998786	UnaryOperator	!		8998693	0					
ANR	8998787	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8998693	1					
ANR	8998788	Callee	comparearrays		8998693	0					
ANR	8998789	Identifier	comparearrays		8998693	0					
ANR	8998790	ArgumentList	i_ctx_p		8998693	1					
ANR	8998791	Argument	i_ctx_p		8998693	0					
ANR	8998792	Identifier	i_ctx_p		8998693	0					
ANR	8998793	Argument	& sname1		8998693	1					
ANR	8998794	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998795	UnaryOperator	&		8998693	0					
ANR	8998796	Identifier	sname1		8998693	1					
ANR	8998797	Argument	& sname2		8998693	2					
ANR	8998798	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998799	UnaryOperator	&		8998693	0					
ANR	8998800	Identifier	sname2		8998693	1					
ANR	8998801	ReturnStatement	return 0 ;	4287:8:136141:136149	8998693	1	True				
ANR	8998802	PrimaryExpression	0		8998693	0					
ANR	8998803	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname1 )"	4289:4:136156:136204	8998693	9	True				
ANR	8998804	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname1 )"		8998693	0		=			
ANR	8998805	Identifier	code		8998693	0					
ANR	8998806	CallExpression	"array_get ( imemory , testspace , 2 , & sname1 )"		8998693	1					
ANR	8998807	Callee	array_get		8998693	0					
ANR	8998808	Identifier	array_get		8998693	0					
ANR	8998809	ArgumentList	imemory		8998693	1					
ANR	8998810	Argument	imemory		8998693	0					
ANR	8998811	Identifier	imemory		8998693	0					
ANR	8998812	Argument	testspace		8998693	1					
ANR	8998813	Identifier	testspace		8998693	0					
ANR	8998814	Argument	2		8998693	2					
ANR	8998815	PrimaryExpression	2		8998693	0					
ANR	8998816	Argument	& sname1		8998693	3					
ANR	8998817	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998818	UnaryOperator	&		8998693	0					
ANR	8998819	Identifier	sname1		8998693	1					
ANR	8998820	IfStatement	if ( code < 0 )		8998693	10					
ANR	8998821	Condition	code < 0	4290:8:136214:136221	8998693	0	True				
ANR	8998822	RelationalExpression	code < 0		8998693	0		<			
ANR	8998823	Identifier	code		8998693	0					
ANR	8998824	PrimaryExpression	0		8998693	1					
ANR	8998825	ReturnStatement	return 0 ;	4291:8:136232:136240	8998693	1	True				
ANR	8998826	PrimaryExpression	0		8998693	0					
ANR	8998827	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname2 )"	4292:4:136246:136294	8998693	11	True				
ANR	8998828	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname2 )"		8998693	0		=			
ANR	8998829	Identifier	code		8998693	0					
ANR	8998830	CallExpression	"array_get ( imemory , testspace , 2 , & sname2 )"		8998693	1					
ANR	8998831	Callee	array_get		8998693	0					
ANR	8998832	Identifier	array_get		8998693	0					
ANR	8998833	ArgumentList	imemory		8998693	1					
ANR	8998834	Argument	imemory		8998693	0					
ANR	8998835	Identifier	imemory		8998693	0					
ANR	8998836	Argument	testspace		8998693	1					
ANR	8998837	Identifier	testspace		8998693	0					
ANR	8998838	Argument	2		8998693	2					
ANR	8998839	PrimaryExpression	2		8998693	0					
ANR	8998840	Argument	& sname2		8998693	3					
ANR	8998841	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998842	UnaryOperator	&		8998693	0					
ANR	8998843	Identifier	sname2		8998693	1					
ANR	8998844	IfStatement	if ( code < 0 )		8998693	12					
ANR	8998845	Condition	code < 0	4293:8:136304:136311	8998693	0	True				
ANR	8998846	RelationalExpression	code < 0		8998693	0		<			
ANR	8998847	Identifier	code		8998693	0					
ANR	8998848	PrimaryExpression	0		8998693	1					
ANR	8998849	ReturnStatement	return 0 ;	4294:8:136322:136330	8998693	1	True				
ANR	8998850	PrimaryExpression	0		8998693	0					
ANR	8998851	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		8998693	13					
ANR	8998852	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	4295:8:136340:136373	8998693	0	True				
ANR	8998853	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		8998693	0		!=			
ANR	8998854	CallExpression	r_type ( & sname1 )		8998693	0					
ANR	8998855	Callee	r_type		8998693	0					
ANR	8998856	Identifier	r_type		8998693	0					
ANR	8998857	ArgumentList	& sname1		8998693	1					
ANR	8998858	Argument	& sname1		8998693	0					
ANR	8998859	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998860	UnaryOperator	&		8998693	0					
ANR	8998861	Identifier	sname1		8998693	1					
ANR	8998862	CallExpression	r_type ( & sname2 )		8998693	1					
ANR	8998863	Callee	r_type		8998693	0					
ANR	8998864	Identifier	r_type		8998693	0					
ANR	8998865	ArgumentList	& sname2		8998693	1					
ANR	8998866	Argument	& sname2		8998693	0					
ANR	8998867	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998868	UnaryOperator	&		8998693	0					
ANR	8998869	Identifier	sname2		8998693	1					
ANR	8998870	ReturnStatement	return 0 ;	4296:8:136384:136392	8998693	1	True				
ANR	8998871	PrimaryExpression	0		8998693	0					
ANR	8998872	IfStatement	if ( r_is_array ( & sname1 ) )		8998693	14					
ANR	8998873	Condition	r_is_array ( & sname1 )	4298:8:136403:136421	8998693	0	True				
ANR	8998874	CallExpression	r_is_array ( & sname1 )		8998693	0					
ANR	8998875	Callee	r_is_array		8998693	0					
ANR	8998876	Identifier	r_is_array		8998693	0					
ANR	8998877	ArgumentList	& sname1		8998693	1					
ANR	8998878	Argument	& sname1		8998693	0					
ANR	8998879	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998880	UnaryOperator	&		8998693	0					
ANR	8998881	Identifier	sname1		8998693	1					
ANR	8998882	CompoundStatement		30:29:657:657	8998693	1					
ANR	8998883	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		8998693	0					
ANR	8998884	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	4299:12:136438:136478	8998693	0	True				
ANR	8998885	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8998693	0					
ANR	8998886	UnaryOperator	!		8998693	0					
ANR	8998887	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8998693	1					
ANR	8998888	Callee	comparearrays		8998693	0					
ANR	8998889	Identifier	comparearrays		8998693	0					
ANR	8998890	ArgumentList	i_ctx_p		8998693	1					
ANR	8998891	Argument	i_ctx_p		8998693	0					
ANR	8998892	Identifier	i_ctx_p		8998693	0					
ANR	8998893	Argument	& sname1		8998693	1					
ANR	8998894	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998895	UnaryOperator	&		8998693	0					
ANR	8998896	Identifier	sname1		8998693	1					
ANR	8998897	Argument	& sname2		8998693	2					
ANR	8998898	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998899	UnaryOperator	&		8998693	0					
ANR	8998900	Identifier	sname2		8998693	1					
ANR	8998901	ReturnStatement	return 0 ;	4300:12:136493:136501	8998693	1	True				
ANR	8998902	PrimaryExpression	0		8998693	0					
ANR	8998903	ElseStatement	else		8998693	0					
ANR	8998904	CompoundStatement		33:11:747:747	8998693	0					
ANR	8998905	IfStatement	"if ( ! r_has_type ( & sname1 , t_name ) )"		8998693	0					
ANR	8998906	Condition	"! r_has_type ( & sname1 , t_name )"	4302:12:136528:136555	8998693	0	True				
ANR	8998907	UnaryOperationExpression	"! r_has_type ( & sname1 , t_name )"		8998693	0					
ANR	8998908	UnaryOperator	!		8998693	0					
ANR	8998909	CallExpression	"r_has_type ( & sname1 , t_name )"		8998693	1					
ANR	8998910	Callee	r_has_type		8998693	0					
ANR	8998911	Identifier	r_has_type		8998693	0					
ANR	8998912	ArgumentList	& sname1		8998693	1					
ANR	8998913	Argument	& sname1		8998693	0					
ANR	8998914	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998915	UnaryOperator	&		8998693	0					
ANR	8998916	Identifier	sname1		8998693	1					
ANR	8998917	Argument	t_name		8998693	1					
ANR	8998918	Identifier	t_name		8998693	0					
ANR	8998919	ReturnStatement	return 0 ;	4303:12:136570:136578	8998693	1	True				
ANR	8998920	PrimaryExpression	0		8998693	0					
ANR	8998921	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		8998693	1					
ANR	8998922	Condition	"! name_eq ( & sname1 , & sname2 )"	4304:12:136592:136617	8998693	0	True				
ANR	8998923	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		8998693	0					
ANR	8998924	UnaryOperator	!		8998693	0					
ANR	8998925	CallExpression	"name_eq ( & sname1 , & sname2 )"		8998693	1					
ANR	8998926	Callee	name_eq		8998693	0					
ANR	8998927	Identifier	name_eq		8998693	0					
ANR	8998928	ArgumentList	& sname1		8998693	1					
ANR	8998929	Argument	& sname1		8998693	0					
ANR	8998930	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998931	UnaryOperator	&		8998693	0					
ANR	8998932	Identifier	sname1		8998693	1					
ANR	8998933	Argument	& sname2		8998693	1					
ANR	8998934	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998935	UnaryOperator	&		8998693	0					
ANR	8998936	Identifier	sname2		8998693	1					
ANR	8998937	ReturnStatement	return 0 ;	4305:12:136632:136640	8998693	1	True				
ANR	8998938	PrimaryExpression	0		8998693	0					
ANR	8998939	ExpressionStatement	"code = array_get ( imemory , space , 3 , & sname1 )"	4307:4:136652:136696	8998693	15	True				
ANR	8998940	AssignmentExpression	"code = array_get ( imemory , space , 3 , & sname1 )"		8998693	0		=			
ANR	8998941	Identifier	code		8998693	0					
ANR	8998942	CallExpression	"array_get ( imemory , space , 3 , & sname1 )"		8998693	1					
ANR	8998943	Callee	array_get		8998693	0					
ANR	8998944	Identifier	array_get		8998693	0					
ANR	8998945	ArgumentList	imemory		8998693	1					
ANR	8998946	Argument	imemory		8998693	0					
ANR	8998947	Identifier	imemory		8998693	0					
ANR	8998948	Argument	space		8998693	1					
ANR	8998949	Identifier	space		8998693	0					
ANR	8998950	Argument	3		8998693	2					
ANR	8998951	PrimaryExpression	3		8998693	0					
ANR	8998952	Argument	& sname1		8998693	3					
ANR	8998953	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998954	UnaryOperator	&		8998693	0					
ANR	8998955	Identifier	sname1		8998693	1					
ANR	8998956	IfStatement	if ( code < 0 )		8998693	16					
ANR	8998957	Condition	code < 0	4308:8:136706:136713	8998693	0	True				
ANR	8998958	RelationalExpression	code < 0		8998693	0		<			
ANR	8998959	Identifier	code		8998693	0					
ANR	8998960	PrimaryExpression	0		8998693	1					
ANR	8998961	ReturnStatement	return 0 ;	4309:8:136724:136732	8998693	1	True				
ANR	8998962	PrimaryExpression	0		8998693	0					
ANR	8998963	ExpressionStatement	"code = array_get ( imemory , testspace , 3 , & sname2 )"	4310:4:136738:136786	8998693	17	True				
ANR	8998964	AssignmentExpression	"code = array_get ( imemory , testspace , 3 , & sname2 )"		8998693	0		=			
ANR	8998965	Identifier	code		8998693	0					
ANR	8998966	CallExpression	"array_get ( imemory , testspace , 3 , & sname2 )"		8998693	1					
ANR	8998967	Callee	array_get		8998693	0					
ANR	8998968	Identifier	array_get		8998693	0					
ANR	8998969	ArgumentList	imemory		8998693	1					
ANR	8998970	Argument	imemory		8998693	0					
ANR	8998971	Identifier	imemory		8998693	0					
ANR	8998972	Argument	testspace		8998693	1					
ANR	8998973	Identifier	testspace		8998693	0					
ANR	8998974	Argument	3		8998693	2					
ANR	8998975	PrimaryExpression	3		8998693	0					
ANR	8998976	Argument	& sname2		8998693	3					
ANR	8998977	UnaryOperationExpression	& sname2		8998693	0					
ANR	8998978	UnaryOperator	&		8998693	0					
ANR	8998979	Identifier	sname2		8998693	1					
ANR	8998980	IfStatement	if ( code < 0 )		8998693	18					
ANR	8998981	Condition	code < 0	4311:8:136796:136803	8998693	0	True				
ANR	8998982	RelationalExpression	code < 0		8998693	0		<			
ANR	8998983	Identifier	code		8998693	0					
ANR	8998984	PrimaryExpression	0		8998693	1					
ANR	8998985	ReturnStatement	return 0 ;	4312:8:136814:136822	8998693	1	True				
ANR	8998986	PrimaryExpression	0		8998693	0					
ANR	8998987	ReturnStatement	"return ( comparearrays ( i_ctx_p , & sname1 , & sname2 ) ) ;"	4313:4:136828:136876	8998693	19	True				
ANR	8998988	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		8998693	0					
ANR	8998989	Callee	comparearrays		8998693	0					
ANR	8998990	Identifier	comparearrays		8998693	0					
ANR	8998991	ArgumentList	i_ctx_p		8998693	1					
ANR	8998992	Argument	i_ctx_p		8998693	0					
ANR	8998993	Identifier	i_ctx_p		8998693	0					
ANR	8998994	Argument	& sname1		8998693	1					
ANR	8998995	UnaryOperationExpression	& sname1		8998693	0					
ANR	8998996	UnaryOperator	&		8998693	0					
ANR	8998997	Identifier	sname1		8998693	1					
ANR	8998998	Argument	& sname2		8998693	2					
ANR	8998999	UnaryOperationExpression	& sname2		8998693	0					
ANR	8999000	UnaryOperator	&		8998693	0					
ANR	8999001	Identifier	sname2		8998693	1					
ANR	8999002	ReturnType	static int		8998693	1					
ANR	8999003	Identifier	devicencompareproc		8998693	2					
ANR	8999004	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		8998693	3					
ANR	8999005	Parameter	i_ctx_t * i_ctx_p	4268:30:135720:135735	8998693	0	True				
ANR	8999006	ParameterType	i_ctx_t *		8998693	0					
ANR	8999007	Identifier	i_ctx_p		8998693	1					
ANR	8999008	Parameter	ref * space	4268:48:135738:135747	8998693	1	True				
ANR	8999009	ParameterType	ref *		8998693	0					
ANR	8999010	Identifier	space		8998693	1					
ANR	8999011	Parameter	ref * testspace	4268:60:135750:135763	8998693	2	True				
ANR	8999012	ParameterType	ref *		8998693	0					
ANR	8999013	Identifier	testspace		8998693	1					
ANR	8999014	CFGEntryNode	ENTRY		8998693		True				
ANR	8999015	CFGExitNode	EXIT		8998693		True				
ANR	8999016	Symbol	& sname1		8998693						
ANR	8999017	Symbol	comparearrays		8998693						
ANR	8999018	Symbol	name_eq		8998693						
ANR	8999019	Symbol	code		8998693						
ANR	8999020	Symbol	& sname2		8998693						
ANR	8999021	Symbol	array_get		8998693						
ANR	8999022	Symbol	sname1		8998693						
ANR	8999023	Symbol	sname2		8998693						
ANR	8999024	Symbol	space		8998693						
ANR	8999025	Symbol	r_has_type		8998693						
ANR	8999026	Symbol	testspace		8998693						
ANR	8999027	Symbol	i_ctx_p		8998693						
ANR	8999028	Symbol	t_name		8998693						
ANR	8999029	Symbol	imemory		8998693						
ANR	8999030	Symbol	r_is_array		8998693						
ANR	8999031	Symbol	r_type		8998693						
ANR	8999032	Function	deviceninitialproc	4315:0:136880:137281							
ANR	8999033	FunctionDef	"deviceninitialproc (i_ctx_t * i_ctx_p , ref * space)"		8999032	0					
ANR	8999034	CompoundStatement		4316:0:136940:137281	8999032	0					
ANR	8999035	IdentifierDeclStatement	gs_client_color cc ;	4317:4:136946:136964	8999032	0	True				
ANR	8999036	IdentifierDecl	cc		8999032	0					
ANR	8999037	IdentifierDeclType	gs_client_color		8999032	0					
ANR	8999038	Identifier	cc		8999032	1					
ANR	8999039	IdentifierDeclStatement	"int i , num_components , code ;"	4318:4:136970:136997	8999032	1	True				
ANR	8999040	IdentifierDecl	i		8999032	0					
ANR	8999041	IdentifierDeclType	int		8999032	0					
ANR	8999042	Identifier	i		8999032	1					
ANR	8999043	IdentifierDecl	num_components		8999032	1					
ANR	8999044	IdentifierDeclType	int		8999032	0					
ANR	8999045	Identifier	num_components		8999032	1					
ANR	8999046	IdentifierDecl	code		8999032	2					
ANR	8999047	IdentifierDeclType	int		8999032	0					
ANR	8999048	Identifier	code		8999032	1					
ANR	8999049	IdentifierDeclStatement	ref namesarray ;	4319:4:137003:137017	8999032	2	True				
ANR	8999050	IdentifierDecl	namesarray		8999032	0					
ANR	8999051	IdentifierDeclType	ref		8999032	0					
ANR	8999052	Identifier	namesarray		8999032	1					
ANR	8999053	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4321:4:137024:137072	8999032	3	True				
ANR	8999054	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		8999032	0		=			
ANR	8999055	Identifier	code		8999032	0					
ANR	8999056	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		8999032	1					
ANR	8999057	Callee	array_get		8999032	0					
ANR	8999058	Identifier	array_get		8999032	0					
ANR	8999059	ArgumentList	imemory		8999032	1					
ANR	8999060	Argument	imemory		8999032	0					
ANR	8999061	Identifier	imemory		8999032	0					
ANR	8999062	Argument	space		8999032	1					
ANR	8999063	Identifier	space		8999032	0					
ANR	8999064	Argument	1		8999032	2					
ANR	8999065	PrimaryExpression	1		8999032	0					
ANR	8999066	Argument	& namesarray		8999032	3					
ANR	8999067	UnaryOperationExpression	& namesarray		8999032	0					
ANR	8999068	UnaryOperator	&		8999032	0					
ANR	8999069	Identifier	namesarray		8999032	1					
ANR	8999070	IfStatement	if ( code < 0 )		8999032	4					
ANR	8999071	Condition	code < 0	4322:8:137082:137089	8999032	0	True				
ANR	8999072	RelationalExpression	code < 0		8999032	0		<			
ANR	8999073	Identifier	code		8999032	0					
ANR	8999074	PrimaryExpression	0		8999032	1					
ANR	8999075	ReturnStatement	return code ;	4323:8:137100:137111	8999032	1	True				
ANR	8999076	Identifier	code		8999032	0					
ANR	8999077	ExpressionStatement	num_components = r_size ( & namesarray )	4324:4:137117:137153	8999032	5	True				
ANR	8999078	AssignmentExpression	num_components = r_size ( & namesarray )		8999032	0		=			
ANR	8999079	Identifier	num_components		8999032	0					
ANR	8999080	CallExpression	r_size ( & namesarray )		8999032	1					
ANR	8999081	Callee	r_size		8999032	0					
ANR	8999082	Identifier	r_size		8999032	0					
ANR	8999083	ArgumentList	& namesarray		8999032	1					
ANR	8999084	Argument	& namesarray		8999032	0					
ANR	8999085	UnaryOperationExpression	& namesarray		8999032	0					
ANR	8999086	UnaryOperator	&		8999032	0					
ANR	8999087	Identifier	namesarray		8999032	1					
ANR	8999088	ExpressionStatement	cc . pattern = 0x00	4325:4:137159:137176	8999032	6	True				
ANR	8999089	AssignmentExpression	cc . pattern = 0x00		8999032	0		=			
ANR	8999090	MemberAccess	cc . pattern		8999032	0					
ANR	8999091	Identifier	cc		8999032	0					
ANR	8999092	Identifier	pattern		8999032	1					
ANR	8999093	PrimaryExpression	0x00		8999032	1					
ANR	8999094	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		8999032	7					
ANR	8999095	ForInit	i = 0 ;	4326:9:137187:137190	8999032	0	True				
ANR	8999096	AssignmentExpression	i = 0		8999032	0		=			
ANR	8999097	Identifier	i		8999032	0					
ANR	8999098	PrimaryExpression	0		8999032	1					
ANR	8999099	Condition	i < num_components	4326:13:137191:137206	8999032	1	True				
ANR	8999100	RelationalExpression	i < num_components		8999032	0		<			
ANR	8999101	Identifier	i		8999032	0					
ANR	8999102	Identifier	num_components		8999032	1					
ANR	8999103	PostIncDecOperationExpression	i ++	4326:30:137208:137210	8999032	2	True				
ANR	8999104	Identifier	i		8999032	0					
ANR	8999105	IncDec	++		8999032	1					
ANR	8999106	ExpressionStatement	cc . paint . values [ i ] = 1.0	4327:8:137221:137245	8999032	3	True				
ANR	8999107	AssignmentExpression	cc . paint . values [ i ] = 1.0		8999032	0		=			
ANR	8999108	ArrayIndexing	cc . paint . values [ i ]		8999032	0					
ANR	8999109	MemberAccess	cc . paint . values		8999032	0					
ANR	8999110	MemberAccess	cc . paint		8999032	0					
ANR	8999111	Identifier	cc		8999032	0					
ANR	8999112	Identifier	paint		8999032	1					
ANR	8999113	Identifier	values		8999032	1					
ANR	8999114	Identifier	i		8999032	1					
ANR	8999115	PrimaryExpression	1.0		8999032	1					
ANR	8999116	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	4328:4:137251:137279	8999032	8	True				
ANR	8999117	CallExpression	"gs_setcolor ( igs , & cc )"		8999032	0					
ANR	8999118	Callee	gs_setcolor		8999032	0					
ANR	8999119	Identifier	gs_setcolor		8999032	0					
ANR	8999120	ArgumentList	igs		8999032	1					
ANR	8999121	Argument	igs		8999032	0					
ANR	8999122	Identifier	igs		8999032	0					
ANR	8999123	Argument	& cc		8999032	1					
ANR	8999124	UnaryOperationExpression	& cc		8999032	0					
ANR	8999125	UnaryOperator	&		8999032	0					
ANR	8999126	Identifier	cc		8999032	1					
ANR	8999127	ReturnType	static int		8999032	1					
ANR	8999128	Identifier	deviceninitialproc		8999032	2					
ANR	8999129	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		8999032	3					
ANR	8999130	Parameter	i_ctx_t * i_ctx_p	4315:30:136910:136925	8999032	0	True				
ANR	8999131	ParameterType	i_ctx_t *		8999032	0					
ANR	8999132	Identifier	i_ctx_p		8999032	1					
ANR	8999133	Parameter	ref * space	4315:48:136928:136937	8999032	1	True				
ANR	8999134	ParameterType	ref *		8999032	0					
ANR	8999135	Identifier	space		8999032	1					
ANR	8999136	CFGEntryNode	ENTRY		8999032		True				
ANR	8999137	CFGExitNode	EXIT		8999032		True				
ANR	8999138	Symbol	cc		8999032						
ANR	8999139	Symbol	cc . pattern		8999032						
ANR	8999140	Symbol	code		8999032						
ANR	8999141	Symbol	* cc		8999032						
ANR	8999142	Symbol	array_get		8999032						
ANR	8999143	Symbol	gs_setcolor		8999032						
ANR	8999144	Symbol	i		8999032						
ANR	8999145	Symbol	namesarray		8999032						
ANR	8999146	Symbol	num_components		8999032						
ANR	8999147	Symbol	& cc		8999032						
ANR	8999148	Symbol	space		8999032						
ANR	8999149	Symbol	* cc . paint		8999032						
ANR	8999150	Symbol	* i		8999032						
ANR	8999151	Symbol	igs		8999032						
ANR	8999152	Symbol	* cc . paint . values		8999032						
ANR	8999153	Symbol	i_ctx_p		8999032						
ANR	8999154	Symbol	r_size		8999032						
ANR	8999155	Symbol	cc . paint		8999032						
ANR	8999156	Symbol	& namesarray		8999032						
ANR	8999157	Symbol	imemory		8999032						
ANR	8999158	Symbol	cc . paint . values		8999032						
ANR	8999159	Function	indexed_cont	4337:0:137500:138264							
ANR	8999160	FunctionDef	indexed_cont (i_ctx_t * i_ctx_p)		8999159	0					
ANR	8999161	CompoundStatement		4339:0:137542:138264	8999159	0					
ANR	8999162	IdentifierDeclStatement	os_ptr op = osp ;	4340:4:137548:137563	8999159	0	True				
ANR	8999163	IdentifierDecl	op = osp		8999159	0					
ANR	8999164	IdentifierDeclType	os_ptr		8999159	0					
ANR	8999165	Identifier	op		8999159	1					
ANR	8999166	AssignmentExpression	op = osp		8999159	2		=			
ANR	8999167	Identifier	osp		8999159	0					
ANR	8999168	Identifier	osp		8999159	1					
ANR	8999169	IdentifierDeclStatement	es_ptr ep = esp ;	4341:4:137569:137584	8999159	1	True				
ANR	8999170	IdentifierDecl	ep = esp		8999159	0					
ANR	8999171	IdentifierDeclType	es_ptr		8999159	0					
ANR	8999172	Identifier	ep		8999159	1					
ANR	8999173	AssignmentExpression	ep = esp		8999159	2		=			
ANR	8999174	Identifier	esp		8999159	0					
ANR	8999175	Identifier	esp		8999159	1					
ANR	8999176	IdentifierDeclStatement	int i = ( int ) ep [ csme_index ] . value . intval ;	4342:4:137590:137630	8999159	2	True				
ANR	8999177	IdentifierDecl	i = ( int ) ep [ csme_index ] . value . intval		8999159	0					
ANR	8999178	IdentifierDeclType	int		8999159	0					
ANR	8999179	Identifier	i		8999159	1					
ANR	8999180	AssignmentExpression	i = ( int ) ep [ csme_index ] . value . intval		8999159	2		=			
ANR	8999181	Identifier	i		8999159	0					
ANR	8999182	CastExpression	( int ) ep [ csme_index ] . value . intval		8999159	1					
ANR	8999183	CastTarget	int		8999159	0					
ANR	8999184	MemberAccess	ep [ csme_index ] . value . intval		8999159	1					
ANR	8999185	MemberAccess	ep [ csme_index ] . value		8999159	0					
ANR	8999186	ArrayIndexing	ep [ csme_index ]		8999159	0					
ANR	8999187	Identifier	ep		8999159	0					
ANR	8999188	Identifier	csme_index		8999159	1					
ANR	8999189	Identifier	value		8999159	1					
ANR	8999190	Identifier	intval		8999159	1					
ANR	8999191	IfStatement	if ( i >= 0 )		8999159	3					
ANR	8999192	Condition	i >= 0	4344:8:137641:137646	8999159	0	True				
ANR	8999193	RelationalExpression	i >= 0		8999159	0		>=			
ANR	8999194	Identifier	i		8999159	0					
ANR	8999195	PrimaryExpression	0		8999159	1					
ANR	8999196	CompoundStatement		8:8:203:287	8999159	1					
ANR	8999197	IdentifierDeclStatement	int m = ( int ) ep [ csme_num_components ] . value . intval ;	4345:8:137687:137736	8999159	0	True				
ANR	8999198	IdentifierDecl	m = ( int ) ep [ csme_num_components ] . value . intval		8999159	0					
ANR	8999199	IdentifierDeclType	int		8999159	0					
ANR	8999200	Identifier	m		8999159	1					
ANR	8999201	AssignmentExpression	m = ( int ) ep [ csme_num_components ] . value . intval		8999159	2		=			
ANR	8999202	Identifier	m		8999159	0					
ANR	8999203	CastExpression	( int ) ep [ csme_num_components ] . value . intval		8999159	1					
ANR	8999204	CastTarget	int		8999159	0					
ANR	8999205	MemberAccess	ep [ csme_num_components ] . value . intval		8999159	1					
ANR	8999206	MemberAccess	ep [ csme_num_components ] . value		8999159	0					
ANR	8999207	ArrayIndexing	ep [ csme_num_components ]		8999159	0					
ANR	8999208	Identifier	ep		8999159	0					
ANR	8999209	Identifier	csme_num_components		8999159	1					
ANR	8999210	Identifier	value		8999159	1					
ANR	8999211	Identifier	intval		8999159	1					
ANR	8999212	IdentifierDeclStatement	"int code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] ) ;"	4346:8:137746:137830	8999159	1	True				
ANR	8999213	IdentifierDecl	"code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		8999159	0					
ANR	8999214	IdentifierDeclType	int		8999159	0					
ANR	8999215	Identifier	code		8999159	1					
ANR	8999216	AssignmentExpression	"code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		8999159	2		=			
ANR	8999217	Identifier	code		8999159	0					
ANR	8999218	CallExpression	"float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		8999159	1					
ANR	8999219	Callee	float_params		8999159	0					
ANR	8999220	Identifier	float_params		8999159	0					
ANR	8999221	ArgumentList	op		8999159	1					
ANR	8999222	Argument	op		8999159	0					
ANR	8999223	Identifier	op		8999159	0					
ANR	8999224	Argument	m		8999159	1					
ANR	8999225	Identifier	m		8999159	0					
ANR	8999226	Argument	"& r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		8999159	2					
ANR	8999227	UnaryOperationExpression	"& r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		8999159	0					
ANR	8999228	UnaryOperator	&		8999159	0					
ANR	8999229	ArrayIndexing	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		8999159	1					
ANR	8999230	PtrMemberAccess	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values"		8999159	0					
ANR	8999231	CallExpression	"r_ptr ( & ep [ csme_map ] , gs_indexed_map )"		8999159	0					
ANR	8999232	Callee	r_ptr		8999159	0					
ANR	8999233	Identifier	r_ptr		8999159	0					
ANR	8999234	ArgumentList	& ep [ csme_map ]		8999159	1					
ANR	8999235	Argument	& ep [ csme_map ]		8999159	0					
ANR	8999236	UnaryOperationExpression	& ep [ csme_map ]		8999159	0					
ANR	8999237	UnaryOperator	&		8999159	0					
ANR	8999238	ArrayIndexing	ep [ csme_map ]		8999159	1					
ANR	8999239	Identifier	ep		8999159	0					
ANR	8999240	Identifier	csme_map		8999159	1					
ANR	8999241	Argument	gs_indexed_map		8999159	1					
ANR	8999242	Identifier	gs_indexed_map		8999159	0					
ANR	8999243	Identifier	values		8999159	1					
ANR	8999244	MultiplicativeExpression	i * m		8999159	1		*			
ANR	8999245	Identifier	i		8999159	0					
ANR	8999246	Identifier	m		8999159	1					
ANR	8999247	IfStatement	if ( code < 0 )		8999159	2					
ANR	8999248	Condition	code < 0	4348:12:137845:137852	8999159	0	True				
ANR	8999249	RelationalExpression	code < 0		8999159	0		<			
ANR	8999250	Identifier	code		8999159	0					
ANR	8999251	PrimaryExpression	0		8999159	1					
ANR	8999252	ReturnStatement	return code ;	4349:12:137867:137878	8999159	1	True				
ANR	8999253	Identifier	code		8999159	0					
ANR	8999254	ExpressionStatement	pop ( m )	4350:8:137888:137894	8999159	3	True				
ANR	8999255	CallExpression	pop ( m )		8999159	0					
ANR	8999256	Callee	pop		8999159	0					
ANR	8999257	Identifier	pop		8999159	0					
ANR	8999258	ArgumentList	m		8999159	1					
ANR	8999259	Argument	m		8999159	0					
ANR	8999260	Identifier	m		8999159	0					
ANR	8999261	ExpressionStatement	op -= m	4351:8:137904:137911	8999159	4	True				
ANR	8999262	AssignmentExpression	op -= m		8999159	0		-=			
ANR	8999263	Identifier	op		8999159	0					
ANR	8999264	Identifier	m		8999159	1					
ANR	8999265	IfStatement	if ( i == ( int ) ep [ csme_hival ] . value . intval )		8999159	5					
ANR	8999266	Condition	i == ( int ) ep [ csme_hival ] . value . intval	4352:12:137925:137961	8999159	0	True				
ANR	8999267	EqualityExpression	i == ( int ) ep [ csme_hival ] . value . intval		8999159	0		==			
ANR	8999268	Identifier	i		8999159	0					
ANR	8999269	CastExpression	( int ) ep [ csme_hival ] . value . intval		8999159	1					
ANR	8999270	CastTarget	int		8999159	0					
ANR	8999271	MemberAccess	ep [ csme_hival ] . value . intval		8999159	1					
ANR	8999272	MemberAccess	ep [ csme_hival ] . value		8999159	0					
ANR	8999273	ArrayIndexing	ep [ csme_hival ]		8999159	0					
ANR	8999274	Identifier	ep		8999159	0					
ANR	8999275	Identifier	csme_hival		8999159	1					
ANR	8999276	Identifier	value		8999159	1					
ANR	8999277	Identifier	intval		8999159	1					
ANR	8999278	CompoundStatement		14:51:421:421	8999159	1					
ANR	8999279	ExpressionStatement	esp -= num_csme	4353:12:137994:138009	8999159	0	True				
ANR	8999280	AssignmentExpression	esp -= num_csme		8999159	0		-=			
ANR	8999281	Identifier	esp		8999159	0					
ANR	8999282	Identifier	num_csme		8999159	1					
ANR	8999283	ReturnStatement	return o_pop_estack ;	4354:12:138023:138042	8999159	1	True				
ANR	8999284	Identifier	o_pop_estack		8999159	0					
ANR	8999285	ExpressionStatement	push ( 1 )	4357:4:138064:138071	8999159	4	True				
ANR	8999286	CallExpression	push ( 1 )		8999159	0					
ANR	8999287	Callee	push		8999159	0					
ANR	8999288	Identifier	push		8999159	0					
ANR	8999289	ArgumentList	1		8999159	1					
ANR	8999290	Argument	1		8999159	0					
ANR	8999291	PrimaryExpression	1		8999159	0					
ANR	8999292	ExpressionStatement	ep [ csme_index ] . value . intval = ++ i	4358:4:138077:138110	8999159	5	True				
ANR	8999293	AssignmentExpression	ep [ csme_index ] . value . intval = ++ i		8999159	0		=			
ANR	8999294	MemberAccess	ep [ csme_index ] . value . intval		8999159	0					
ANR	8999295	MemberAccess	ep [ csme_index ] . value		8999159	0					
ANR	8999296	ArrayIndexing	ep [ csme_index ]		8999159	0					
ANR	8999297	Identifier	ep		8999159	0					
ANR	8999298	Identifier	csme_index		8999159	1					
ANR	8999299	Identifier	value		8999159	1					
ANR	8999300	Identifier	intval		8999159	1					
ANR	8999301	UnaryExpression	++ i		8999159	1					
ANR	8999302	IncDec	++		8999159	0					
ANR	8999303	Identifier	i		8999159	1					
ANR	8999304	ExpressionStatement	"make_int ( op , i )"	4359:4:138116:138131	8999159	6	True				
ANR	8999305	CallExpression	"make_int ( op , i )"		8999159	0					
ANR	8999306	Callee	make_int		8999159	0					
ANR	8999307	Identifier	make_int		8999159	0					
ANR	8999308	ArgumentList	op		8999159	1					
ANR	8999309	Argument	op		8999159	0					
ANR	8999310	Identifier	op		8999159	0					
ANR	8999311	Argument	i		8999159	1					
ANR	8999312	Identifier	i		8999159	0					
ANR	8999313	ExpressionStatement	"make_op_estack ( ep + 1 , indexed_cont )"	4360:4:138137:138173	8999159	7	True				
ANR	8999314	CallExpression	"make_op_estack ( ep + 1 , indexed_cont )"		8999159	0					
ANR	8999315	Callee	make_op_estack		8999159	0					
ANR	8999316	Identifier	make_op_estack		8999159	0					
ANR	8999317	ArgumentList	ep + 1		8999159	1					
ANR	8999318	Argument	ep + 1		8999159	0					
ANR	8999319	AdditiveExpression	ep + 1		8999159	0		+			
ANR	8999320	Identifier	ep		8999159	0					
ANR	8999321	PrimaryExpression	1		8999159	1					
ANR	8999322	Argument	indexed_cont		8999159	1					
ANR	8999323	Identifier	indexed_cont		8999159	0					
ANR	8999324	ExpressionStatement	ep [ 2 ] = ep [ csme_proc ]	4361:4:138179:138200	8999159	8	True				
ANR	8999325	AssignmentExpression	ep [ 2 ] = ep [ csme_proc ]		8999159	0		=			
ANR	8999326	ArrayIndexing	ep [ 2 ]		8999159	0					
ANR	8999327	Identifier	ep		8999159	0					
ANR	8999328	PrimaryExpression	2		8999159	1					
ANR	8999329	ArrayIndexing	ep [ csme_proc ]		8999159	1					
ANR	8999330	Identifier	ep		8999159	0					
ANR	8999331	Identifier	csme_proc		8999159	1					
ANR	8999332	ExpressionStatement	esp = ep + 2	4362:4:138224:138236	8999159	9	True				
ANR	8999333	AssignmentExpression	esp = ep + 2		8999159	0		=			
ANR	8999334	Identifier	esp		8999159	0					
ANR	8999335	AdditiveExpression	ep + 2		8999159	1		+			
ANR	8999336	Identifier	ep		8999159	0					
ANR	8999337	PrimaryExpression	2		8999159	1					
ANR	8999338	ReturnStatement	return o_push_estack ;	4363:4:138242:138262	8999159	10	True				
ANR	8999339	Identifier	o_push_estack		8999159	0					
ANR	8999340	ReturnType	static int		8999159	1					
ANR	8999341	Identifier	indexed_cont		8999159	2					
ANR	8999342	ParameterList	i_ctx_t * i_ctx_p		8999159	3					
ANR	8999343	Parameter	i_ctx_t * i_ctx_p	4338:13:137524:137539	8999159	0	True				
ANR	8999344	ParameterType	i_ctx_t *		8999159	0					
ANR	8999345	Identifier	i_ctx_p		8999159	1					
ANR	8999346	CFGEntryNode	ENTRY		8999159		True				
ANR	8999347	CFGExitNode	EXIT		8999159		True				
ANR	8999348	Symbol	* csme_num_components		8999159						
ANR	8999349	Symbol	indexed_cont		8999159						
ANR	8999350	Symbol	esp		8999159						
ANR	8999351	Symbol	code		8999159						
ANR	8999352	Symbol	ep [ csme_hival ] . value		8999159						
ANR	8999353	Symbol	csme_proc		8999159						
ANR	8999354	Symbol	num_csme		8999159						
ANR	8999355	Symbol	o_pop_estack		8999159						
ANR	8999356	Symbol	ep [ csme_index ] . value . intval		8999159						
ANR	8999357	Symbol	osp		8999159						
ANR	8999358	Symbol	r_ptr		8999159						
ANR	8999359	Symbol	* csme_proc		8999159						
ANR	8999360	Symbol	csme_map		8999159						
ANR	8999361	Symbol	ep [ csme_num_components ] . value . intval		8999159						
ANR	8999362	Symbol	gs_indexed_map		8999159						
ANR	8999363	Symbol	o_push_estack		8999159						
ANR	8999364	Symbol	op		8999159						
ANR	8999365	Symbol	* csme_hival		8999159						
ANR	8999366	Symbol	ep [ csme_index ] . value		8999159						
ANR	8999367	Symbol	float_params		8999159						
ANR	8999368	Symbol	csme_hival		8999159						
ANR	8999369	Symbol	i		8999159						
ANR	8999370	Symbol	csme_index		8999159						
ANR	8999371	Symbol	ep		8999159						
ANR	8999372	Symbol	m		8999159						
ANR	8999373	Symbol	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values"		8999159						
ANR	8999374	Symbol	* ep		8999159						
ANR	8999375	Symbol	i_ctx_p		8999159						
ANR	8999376	Symbol	ep [ csme_hival ] . value . intval		8999159						
ANR	8999377	Symbol	csme_num_components		8999159						
ANR	8999378	Symbol	* csme_index		8999159						
ANR	8999379	Symbol	ep [ csme_num_components ] . value		8999159						
ANR	8999380	Symbol	* r_ptr		8999159						
ANR	8999381	Function	setindexedspace	4365:0:138266:142443							
ANR	8999382	FunctionDef	"setindexedspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		8999381	0					
ANR	8999383	CompoundStatement		4366:0:138357:142443	8999381	0					
ANR	8999384	IdentifierDeclStatement	ref * pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc ;	4367:4:138363:138423	8999381	0	True				
ANR	8999385	IdentifierDecl	* pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc		8999381	0					
ANR	8999386	IdentifierDeclType	ref *		8999381	0					
ANR	8999387	Identifier	pproc		8999381	1					
ANR	8999388	AssignmentExpression	* pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc		8999381	2		=			
ANR	8999389	Identifier	pproc		8999381	0					
ANR	8999390	UnaryOperationExpression	& istate -> colorspace [ 0 ] . procs . special . index_proc		8999381	1					
ANR	8999391	UnaryOperator	&		8999381	0					
ANR	8999392	MemberAccess	istate -> colorspace [ 0 ] . procs . special . index_proc		8999381	1					
ANR	8999393	MemberAccess	istate -> colorspace [ 0 ] . procs . special		8999381	0					
ANR	8999394	MemberAccess	istate -> colorspace [ 0 ] . procs		8999381	0					
ANR	8999395	ArrayIndexing	istate -> colorspace [ 0 ]		8999381	0					
ANR	8999396	PtrMemberAccess	istate -> colorspace		8999381	0					
ANR	8999397	Identifier	istate		8999381	0					
ANR	8999398	Identifier	colorspace		8999381	1					
ANR	8999399	PrimaryExpression	0		8999381	1					
ANR	8999400	Identifier	procs		8999381	1					
ANR	8999401	Identifier	special		8999381	1					
ANR	8999402	Identifier	index_proc		8999381	1					
ANR	8999403	IdentifierDeclStatement	int code = 0 ;	4368:4:138429:138441	8999381	1	True				
ANR	8999404	IdentifierDecl	code = 0		8999381	0					
ANR	8999405	IdentifierDeclType	int		8999381	0					
ANR	8999406	Identifier	code		8999381	1					
ANR	8999407	AssignmentExpression	code = 0		8999381	2		=			
ANR	8999408	Identifier	code		8999381	0					
ANR	8999409	PrimaryExpression	0		8999381	1					
ANR	8999410	IdentifierDeclStatement	uint edepth = ref_stack_count ( & e_stack ) ;	4369:4:138447:138486	8999381	2	True				
ANR	8999411	IdentifierDecl	edepth = ref_stack_count ( & e_stack )		8999381	0					
ANR	8999412	IdentifierDeclType	uint		8999381	0					
ANR	8999413	Identifier	edepth		8999381	1					
ANR	8999414	AssignmentExpression	edepth = ref_stack_count ( & e_stack )		8999381	2		=			
ANR	8999415	Identifier	edepth		8999381	0					
ANR	8999416	CallExpression	ref_stack_count ( & e_stack )		8999381	1					
ANR	8999417	Callee	ref_stack_count		8999381	0					
ANR	8999418	Identifier	ref_stack_count		8999381	0					
ANR	8999419	ArgumentList	& e_stack		8999381	1					
ANR	8999420	Argument	& e_stack		8999381	0					
ANR	8999421	UnaryOperationExpression	& e_stack		8999381	0					
ANR	8999422	UnaryOperator	&		8999381	0					
ANR	8999423	Identifier	e_stack		8999381	1					
ANR	8999424	IdentifierDeclStatement	ref_colorspace cspace_old ;	4370:4:138492:138517	8999381	3	True				
ANR	8999425	IdentifierDecl	cspace_old		8999381	0					
ANR	8999426	IdentifierDeclType	ref_colorspace		8999381	0					
ANR	8999427	Identifier	cspace_old		8999381	1					
ANR	8999428	IdentifierDeclStatement	"ref hival , lookup ;"	4371:4:138523:138540	8999381	4	True				
ANR	8999429	IdentifierDecl	hival		8999381	0					
ANR	8999430	IdentifierDeclType	ref		8999381	0					
ANR	8999431	Identifier	hival		8999381	1					
ANR	8999432	IdentifierDecl	lookup		8999381	1					
ANR	8999433	IdentifierDeclType	ref		8999381	0					
ANR	8999434	Identifier	lookup		8999381	1					
ANR	8999435	IdentifierDeclStatement	gs_color_space * pcs ;	4372:4:138546:138565	8999381	5	True				
ANR	8999436	IdentifierDecl	* pcs		8999381	0					
ANR	8999437	IdentifierDeclType	gs_color_space *		8999381	0					
ANR	8999438	Identifier	pcs		8999381	1					
ANR	8999439	IdentifierDeclStatement	gs_color_space * pcs_base ;	4373:4:138571:138595	8999381	6	True				
ANR	8999440	IdentifierDecl	* pcs_base		8999381	0					
ANR	8999441	IdentifierDeclType	gs_color_space *		8999381	0					
ANR	8999442	Identifier	pcs_base		8999381	1					
ANR	8999443	IdentifierDeclStatement	gs_color_space_index base_type ;	4374:4:138601:138631	8999381	7	True				
ANR	8999444	IdentifierDecl	base_type		8999381	0					
ANR	8999445	IdentifierDeclType	gs_color_space_index		8999381	0					
ANR	8999446	Identifier	base_type		8999381	1					
ANR	8999447	IfStatement	if ( i_ctx_p -> language_level < 2 )		8999381	8					
ANR	8999448	Condition	i_ctx_p -> language_level < 2	4376:8:138642:138668	8999381	0	True				
ANR	8999449	RelationalExpression	i_ctx_p -> language_level < 2		8999381	0		<			
ANR	8999450	PtrMemberAccess	i_ctx_p -> language_level		8999381	0					
ANR	8999451	Identifier	i_ctx_p		8999381	0					
ANR	8999452	Identifier	language_level		8999381	1					
ANR	8999453	PrimaryExpression	2		8999381	1					
ANR	8999454	ExpressionStatement	return_error ( gs_error_undefined )	4377:8:138679:138711	8999381	1	True				
ANR	8999455	CallExpression	return_error ( gs_error_undefined )		8999381	0					
ANR	8999456	Callee	return_error		8999381	0					
ANR	8999457	Identifier	return_error		8999381	0					
ANR	8999458	ArgumentList	gs_error_undefined		8999381	1					
ANR	8999459	Argument	gs_error_undefined		8999381	0					
ANR	8999460	Identifier	gs_error_undefined		8999381	0					
ANR	8999461	ExpressionStatement	* cont = 0	4379:4:138718:138727	8999381	9	True				
ANR	8999462	AssignmentExpression	* cont = 0		8999381	0		=			
ANR	8999463	UnaryOperationExpression	* cont		8999381	0					
ANR	8999464	UnaryOperator	*		8999381	0					
ANR	8999465	Identifier	cont		8999381	1					
ANR	8999466	PrimaryExpression	0		8999381	1					
ANR	8999467	IfStatement	if ( * stage == 1 )		8999381	10					
ANR	8999468	Condition	* stage == 1	4380:8:138737:138747	8999381	0	True				
ANR	8999469	EqualityExpression	* stage == 1		8999381	0		==			
ANR	8999470	UnaryOperationExpression	* stage		8999381	0					
ANR	8999471	UnaryOperator	*		8999381	0					
ANR	8999472	Identifier	stage		8999381	1					
ANR	8999473	PrimaryExpression	1		8999381	1					
ANR	8999474	CompoundStatement		15:21:392:392	8999381	1					
ANR	8999475	ExpressionStatement	* stage = 0	4381:8:138760:138770	8999381	0	True				
ANR	8999476	AssignmentExpression	* stage = 0		8999381	0		=			
ANR	8999477	UnaryOperationExpression	* stage		8999381	0					
ANR	8999478	UnaryOperator	*		8999381	0					
ANR	8999479	Identifier	stage		8999381	1					
ANR	8999480	PrimaryExpression	0		8999381	1					
ANR	8999481	ReturnStatement	return 0 ;	4382:8:138780:138788	8999381	1	True				
ANR	8999482	PrimaryExpression	0		8999381	0					
ANR	8999483	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	4385:4:138801:138835	8999381	11	True				
ANR	8999484	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		8999381	0		=			
ANR	8999485	Identifier	cspace_old		8999381	0					
ANR	8999486	ArrayIndexing	istate -> colorspace [ 0 ]		8999381	1					
ANR	8999487	PtrMemberAccess	istate -> colorspace		8999381	0					
ANR	8999488	Identifier	istate		8999381	0					
ANR	8999489	Identifier	colorspace		8999381	1					
ANR	8999490	PrimaryExpression	0		8999381	1					
ANR	8999491	ExpressionStatement	pcs_base = gs_currentcolorspace ( igs )	4387:4:138842:138878	8999381	12	True				
ANR	8999492	AssignmentExpression	pcs_base = gs_currentcolorspace ( igs )		8999381	0		=			
ANR	8999493	Identifier	pcs_base		8999381	0					
ANR	8999494	CallExpression	gs_currentcolorspace ( igs )		8999381	1					
ANR	8999495	Callee	gs_currentcolorspace		8999381	0					
ANR	8999496	Identifier	gs_currentcolorspace		8999381	0					
ANR	8999497	ArgumentList	igs		8999381	1					
ANR	8999498	Argument	igs		8999381	0					
ANR	8999499	Identifier	igs		8999381	0					
ANR	8999500	ExpressionStatement	base_type = gs_color_space_get_index ( pcs_base )	4388:4:138884:138930	8999381	13	True				
ANR	8999501	AssignmentExpression	base_type = gs_color_space_get_index ( pcs_base )		8999381	0		=			
ANR	8999502	Identifier	base_type		8999381	0					
ANR	8999503	CallExpression	gs_color_space_get_index ( pcs_base )		8999381	1					
ANR	8999504	Callee	gs_color_space_get_index		8999381	0					
ANR	8999505	Identifier	gs_color_space_get_index		8999381	0					
ANR	8999506	ArgumentList	pcs_base		8999381	1					
ANR	8999507	Argument	pcs_base		8999381	0					
ANR	8999508	Identifier	pcs_base		8999381	0					
ANR	8999509	ExpressionStatement	"code = array_get ( imemory , r , 3 , & lookup )"	4390:4:138937:138977	8999381	14	True				
ANR	8999510	AssignmentExpression	"code = array_get ( imemory , r , 3 , & lookup )"		8999381	0		=			
ANR	8999511	Identifier	code		8999381	0					
ANR	8999512	CallExpression	"array_get ( imemory , r , 3 , & lookup )"		8999381	1					
ANR	8999513	Callee	array_get		8999381	0					
ANR	8999514	Identifier	array_get		8999381	0					
ANR	8999515	ArgumentList	imemory		8999381	1					
ANR	8999516	Argument	imemory		8999381	0					
ANR	8999517	Identifier	imemory		8999381	0					
ANR	8999518	Argument	r		8999381	1					
ANR	8999519	Identifier	r		8999381	0					
ANR	8999520	Argument	3		8999381	2					
ANR	8999521	PrimaryExpression	3		8999381	0					
ANR	8999522	Argument	& lookup		8999381	3					
ANR	8999523	UnaryOperationExpression	& lookup		8999381	0					
ANR	8999524	UnaryOperator	&		8999381	0					
ANR	8999525	Identifier	lookup		8999381	1					
ANR	8999526	IfStatement	if ( code < 0 )		8999381	15					
ANR	8999527	Condition	code < 0	4391:8:138987:138994	8999381	0	True				
ANR	8999528	RelationalExpression	code < 0		8999381	0		<			
ANR	8999529	Identifier	code		8999381	0					
ANR	8999530	PrimaryExpression	0		8999381	1					
ANR	8999531	ReturnStatement	return code ;	4392:8:139005:139016	8999381	1	True				
ANR	8999532	Identifier	code		8999381	0					
ANR	8999533	ExpressionStatement	"code = array_get ( imemory , r , 2 , & hival )"	4393:4:139022:139061	8999381	16	True				
ANR	8999534	AssignmentExpression	"code = array_get ( imemory , r , 2 , & hival )"		8999381	0		=			
ANR	8999535	Identifier	code		8999381	0					
ANR	8999536	CallExpression	"array_get ( imemory , r , 2 , & hival )"		8999381	1					
ANR	8999537	Callee	array_get		8999381	0					
ANR	8999538	Identifier	array_get		8999381	0					
ANR	8999539	ArgumentList	imemory		8999381	1					
ANR	8999540	Argument	imemory		8999381	0					
ANR	8999541	Identifier	imemory		8999381	0					
ANR	8999542	Argument	r		8999381	1					
ANR	8999543	Identifier	r		8999381	0					
ANR	8999544	Argument	2		8999381	2					
ANR	8999545	PrimaryExpression	2		8999381	0					
ANR	8999546	Argument	& hival		8999381	3					
ANR	8999547	UnaryOperationExpression	& hival		8999381	0					
ANR	8999548	UnaryOperator	&		8999381	0					
ANR	8999549	Identifier	hival		8999381	1					
ANR	8999550	IfStatement	if ( code < 0 )		8999381	17					
ANR	8999551	Condition	code < 0	4394:8:139071:139078	8999381	0	True				
ANR	8999552	RelationalExpression	code < 0		8999381	0		<			
ANR	8999553	Identifier	code		8999381	0					
ANR	8999554	PrimaryExpression	0		8999381	1					
ANR	8999555	ReturnStatement	return code ;	4395:8:139089:139100	8999381	1	True				
ANR	8999556	Identifier	code		8999381	0					
ANR	8999557	IfStatement	"if ( r_has_type ( & lookup , t_string ) )"		8999381	18					
ANR	8999558	Condition	"r_has_type ( & lookup , t_string )"	4396:8:139110:139138	8999381	0	True				
ANR	8999559	CallExpression	"r_has_type ( & lookup , t_string )"		8999381	0					
ANR	8999560	Callee	r_has_type		8999381	0					
ANR	8999561	Identifier	r_has_type		8999381	0					
ANR	8999562	ArgumentList	& lookup		8999381	1					
ANR	8999563	Argument	& lookup		8999381	0					
ANR	8999564	UnaryOperationExpression	& lookup		8999381	0					
ANR	8999565	UnaryOperator	&		8999381	0					
ANR	8999566	Identifier	lookup		8999381	1					
ANR	8999567	Argument	t_string		8999381	1					
ANR	8999568	Identifier	t_string		8999381	0					
ANR	8999569	CompoundStatement		33:8:874:888	8999381	1					
ANR	8999570	IdentifierDeclStatement	int num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base ) ;	4397:8:139151:139222	8999381	0	True				
ANR	8999571	IdentifierDecl	num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		8999381	0					
ANR	8999572	IdentifierDeclType	int		8999381	0					
ANR	8999573	Identifier	num_values		8999381	1					
ANR	8999574	AssignmentExpression	num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		8999381	2		=			
ANR	8999575	Identifier	num_values		8999381	0					
ANR	8999576	MultiplicativeExpression	( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		8999381	1		*			
ANR	8999577	AdditiveExpression	hival . value . intval + 1		8999381	0		+			
ANR	8999578	MemberAccess	hival . value . intval		8999381	0					
ANR	8999579	MemberAccess	hival . value		8999381	0					
ANR	8999580	Identifier	hival		8999381	0					
ANR	8999581	Identifier	value		8999381	1					
ANR	8999582	Identifier	intval		8999381	1					
ANR	8999583	PrimaryExpression	1		8999381	1					
ANR	8999584	CallExpression	cs_num_components ( pcs_base )		8999381	1					
ANR	8999585	Callee	cs_num_components		8999381	0					
ANR	8999586	Identifier	cs_num_components		8999381	0					
ANR	8999587	ArgumentList	pcs_base		8999381	1					
ANR	8999588	Argument	pcs_base		8999381	0					
ANR	8999589	Identifier	pcs_base		8999381	0					
ANR	8999590	IdentifierDeclStatement	byte * data_tmp ;	4398:8:139232:139246	8999381	1	True				
ANR	8999591	IdentifierDecl	* data_tmp		8999381	0					
ANR	8999592	IdentifierDeclType	byte *		8999381	0					
ANR	8999593	Identifier	data_tmp		8999381	1					
ANR	8999594	ExpressionStatement	check_read ( lookup )	4400:8:139257:139275	8999381	2	True				
ANR	8999595	CallExpression	check_read ( lookup )		8999381	0					
ANR	8999596	Callee	check_read		8999381	0					
ANR	8999597	Identifier	check_read		8999381	0					
ANR	8999598	ArgumentList	lookup		8999381	1					
ANR	8999599	Argument	lookup		8999381	0					
ANR	8999600	Identifier	lookup		8999381	0					
ANR	8999601	IfStatement	if ( r_size ( & lookup ) < num_values )		8999381	3					
ANR	8999602	Condition	r_size ( & lookup ) < num_values	4407:12:139615:139642	8999381	0	True				
ANR	8999603	RelationalExpression	r_size ( & lookup ) < num_values		8999381	0		<			
ANR	8999604	CallExpression	r_size ( & lookup )		8999381	0					
ANR	8999605	Callee	r_size		8999381	0					
ANR	8999606	Identifier	r_size		8999381	0					
ANR	8999607	ArgumentList	& lookup		8999381	1					
ANR	8999608	Argument	& lookup		8999381	0					
ANR	8999609	UnaryOperationExpression	& lookup		8999381	0					
ANR	8999610	UnaryOperator	&		8999381	0					
ANR	8999611	Identifier	lookup		8999381	1					
ANR	8999612	Identifier	num_values		8999381	1					
ANR	8999613	ExpressionStatement	return_error ( gs_error_rangecheck )	4408:12:139657:139690	8999381	1	True				
ANR	8999614	CallExpression	return_error ( gs_error_rangecheck )		8999381	0					
ANR	8999615	Callee	return_error		8999381	0					
ANR	8999616	Identifier	return_error		8999381	0					
ANR	8999617	ArgumentList	gs_error_rangecheck		8999381	1					
ANR	8999618	Argument	gs_error_rangecheck		8999381	0					
ANR	8999619	Identifier	gs_error_rangecheck		8999381	0					
ANR	8999620	IfStatement	if ( igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN ) )		8999381	4					
ANR	8999621	Condition	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )	4412:12:139900:140058	8999381	0	True				
ANR	8999622	AndExpression	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )		8999381	0		&&			
ANR	8999623	EqualityExpression	igs -> icc_manager -> device_named != NULL		8999381	0		!=			
ANR	8999624	PtrMemberAccess	igs -> icc_manager -> device_named		8999381	0					
ANR	8999625	PtrMemberAccess	igs -> icc_manager		8999381	0					
ANR	8999626	Identifier	igs		8999381	0					
ANR	8999627	Identifier	icc_manager		8999381	1					
ANR	8999628	Identifier	device_named		8999381	1					
ANR	8999629	Identifier	NULL		8999381	1					
ANR	8999630	OrExpression	base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN		8999381	1		||			
ANR	8999631	EqualityExpression	base_type == gs_color_space_index_Separation		8999381	0		==			
ANR	8999632	Identifier	base_type		8999381	0					
ANR	8999633	Identifier	gs_color_space_index_Separation		8999381	1					
ANR	8999634	EqualityExpression	base_type == gs_color_space_index_DeviceN		8999381	1		==			
ANR	8999635	Identifier	base_type		8999381	0					
ANR	8999636	Identifier	gs_color_space_index_DeviceN		8999381	1					
ANR	8999637	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"	4415:12:140073:140139	8999381	1	True				
ANR	8999638	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		8999381	0		=			
ANR	8999639	Identifier	pcs		8999381	0					
ANR	8999640	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		8999381	1					
ANR	8999641	Callee	gs_cspace_alloc		8999381	0					
ANR	8999642	Identifier	gs_cspace_alloc		8999381	0					
ANR	8999643	ArgumentList	imemory		8999381	1					
ANR	8999644	Argument	imemory		8999381	0					
ANR	8999645	Identifier	imemory		8999381	0					
ANR	8999646	Argument	& gs_color_space_type_Indexed_Named		8999381	1					
ANR	8999647	UnaryOperationExpression	& gs_color_space_type_Indexed_Named		8999381	0					
ANR	8999648	UnaryOperator	&		8999381	0					
ANR	8999649	Identifier	gs_color_space_type_Indexed_Named		8999381	1					
ANR	8999650	ElseStatement	else		8999381	0					
ANR	8999651	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"	4417:12:140166:140226	8999381	0	True				
ANR	8999652	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		8999381	0		=			
ANR	8999653	Identifier	pcs		8999381	0					
ANR	8999654	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		8999381	1					
ANR	8999655	Callee	gs_cspace_alloc		8999381	0					
ANR	8999656	Identifier	gs_cspace_alloc		8999381	0					
ANR	8999657	ArgumentList	imemory		8999381	1					
ANR	8999658	Argument	imemory		8999381	0					
ANR	8999659	Identifier	imemory		8999381	0					
ANR	8999660	Argument	& gs_color_space_type_Indexed		8999381	1					
ANR	8999661	UnaryOperationExpression	& gs_color_space_type_Indexed		8999381	0					
ANR	8999662	UnaryOperator	&		8999381	0					
ANR	8999663	Identifier	gs_color_space_type_Indexed		8999381	1					
ANR	8999664	IfStatement	if ( ! pcs )		8999381	5					
ANR	8999665	Condition	! pcs	4418:12:140240:140243	8999381	0	True				
ANR	8999666	UnaryOperationExpression	! pcs		8999381	0					
ANR	8999667	UnaryOperator	!		8999381	0					
ANR	8999668	Identifier	pcs		8999381	1					
ANR	8999669	CompoundStatement		53:18:1888:1888	8999381	1					
ANR	8999670	ExpressionStatement	return_error ( gs_error_VMerror )	4419:12:140260:140290	8999381	0	True				
ANR	8999671	CallExpression	return_error ( gs_error_VMerror )		8999381	0					
ANR	8999672	Callee	return_error		8999381	0					
ANR	8999673	Identifier	return_error		8999381	0					
ANR	8999674	ArgumentList	gs_error_VMerror		8999381	1					
ANR	8999675	Argument	gs_error_VMerror		8999381	0					
ANR	8999676	Identifier	gs_error_VMerror		8999381	0					
ANR	8999677	ExpressionStatement	pcs -> base_space = pcs_base	4421:8:140310:140336	8999381	6	True				
ANR	8999678	AssignmentExpression	pcs -> base_space = pcs_base		8999381	0		=			
ANR	8999679	PtrMemberAccess	pcs -> base_space		8999381	0					
ANR	8999680	Identifier	pcs		8999381	0					
ANR	8999681	Identifier	base_space		8999381	1					
ANR	8999682	Identifier	pcs_base		8999381	1					
ANR	8999683	ExpressionStatement	rc_increment_cs ( pcs_base )	4422:8:140346:140371	8999381	7	True				
ANR	8999684	CallExpression	rc_increment_cs ( pcs_base )		8999381	0					
ANR	8999685	Callee	rc_increment_cs		8999381	0					
ANR	8999686	Identifier	rc_increment_cs		8999381	0					
ANR	8999687	ArgumentList	pcs_base		8999381	1					
ANR	8999688	Argument	pcs_base		8999381	0					
ANR	8999689	Identifier	pcs_base		8999381	0					
ANR	8999690	ExpressionStatement	"data_tmp = ( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"	4424:8:140382:140495	8999381	8	True				
ANR	8999691	AssignmentExpression	"data_tmp = ( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"		8999381	0		=			
ANR	8999692	Identifier	data_tmp		8999381	0					
ANR	8999693	CastExpression	"( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"		8999381	1					
ANR	8999694	CastTarget	byte *		8999381	0					
ANR	8999695	AssignmentExpression	"pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" )"		8999381	1		=			
ANR	8999696	MemberAccess	pcs -> params . indexed . lookup . table . data		8999381	0					
ANR	8999697	MemberAccess	pcs -> params . indexed . lookup . table		8999381	0					
ANR	8999698	MemberAccess	pcs -> params . indexed . lookup		8999381	0					
ANR	8999699	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999700	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999701	Identifier	pcs		8999381	0					
ANR	8999702	Identifier	params		8999381	1					
ANR	8999703	Identifier	indexed		8999381	1					
ANR	8999704	Identifier	lookup		8999381	1					
ANR	8999705	Identifier	table		8999381	1					
ANR	8999706	Identifier	data		8999381	1					
ANR	8999707	CallExpression	"ialloc_string ( lookup . tas . rsize , ""setindexedspace"" )"		8999381	1					
ANR	8999708	Callee	ialloc_string		8999381	0					
ANR	8999709	Identifier	ialloc_string		8999381	0					
ANR	8999710	ArgumentList	lookup . tas . rsize		8999381	1					
ANR	8999711	Argument	lookup . tas . rsize		8999381	0					
ANR	8999712	MemberAccess	lookup . tas . rsize		8999381	0					
ANR	8999713	MemberAccess	lookup . tas		8999381	0					
ANR	8999714	Identifier	lookup		8999381	0					
ANR	8999715	Identifier	tas		8999381	1					
ANR	8999716	Identifier	rsize		8999381	1					
ANR	8999717	Argument	"""setindexedspace"""		8999381	1					
ANR	8999718	PrimaryExpression	"""setindexedspace"""		8999381	0					
ANR	8999719	IfStatement	if ( ! data_tmp )		8999381	9					
ANR	8999720	Condition	! data_tmp	4425:12:140509:140517	8999381	0	True				
ANR	8999721	UnaryOperationExpression	! data_tmp		8999381	0					
ANR	8999722	UnaryOperator	!		8999381	0					
ANR	8999723	Identifier	data_tmp		8999381	1					
ANR	8999724	CompoundStatement		60:23:2162:2162	8999381	1					
ANR	8999725	ExpressionStatement	"rc_decrement ( pcs , ""setindexedspace"" )"	4426:12:140534:140570	8999381	0	True				
ANR	8999726	CallExpression	"rc_decrement ( pcs , ""setindexedspace"" )"		8999381	0					
ANR	8999727	Callee	rc_decrement		8999381	0					
ANR	8999728	Identifier	rc_decrement		8999381	0					
ANR	8999729	ArgumentList	pcs		8999381	1					
ANR	8999730	Argument	pcs		8999381	0					
ANR	8999731	Identifier	pcs		8999381	0					
ANR	8999732	Argument	"""setindexedspace"""		8999381	1					
ANR	8999733	PrimaryExpression	"""setindexedspace"""		8999381	0					
ANR	8999734	ExpressionStatement	return_error ( gs_error_VMerror )	4427:12:140584:140614	8999381	1	True				
ANR	8999735	CallExpression	return_error ( gs_error_VMerror )		8999381	0					
ANR	8999736	Callee	return_error		8999381	0					
ANR	8999737	Identifier	return_error		8999381	0					
ANR	8999738	ArgumentList	gs_error_VMerror		8999381	1					
ANR	8999739	Argument	gs_error_VMerror		8999381	0					
ANR	8999740	Identifier	gs_error_VMerror		8999381	0					
ANR	8999741	ExpressionStatement	"memcpy ( data_tmp , lookup . value . const_bytes , lookup . tas . rsize )"	4430:8:140635:140695	8999381	10	True				
ANR	8999742	CallExpression	"memcpy ( data_tmp , lookup . value . const_bytes , lookup . tas . rsize )"		8999381	0					
ANR	8999743	Callee	memcpy		8999381	0					
ANR	8999744	Identifier	memcpy		8999381	0					
ANR	8999745	ArgumentList	data_tmp		8999381	1					
ANR	8999746	Argument	data_tmp		8999381	0					
ANR	8999747	Identifier	data_tmp		8999381	0					
ANR	8999748	Argument	lookup . value . const_bytes		8999381	1					
ANR	8999749	MemberAccess	lookup . value . const_bytes		8999381	0					
ANR	8999750	MemberAccess	lookup . value		8999381	0					
ANR	8999751	Identifier	lookup		8999381	0					
ANR	8999752	Identifier	value		8999381	1					
ANR	8999753	Identifier	const_bytes		8999381	1					
ANR	8999754	Argument	lookup . tas . rsize		8999381	2					
ANR	8999755	MemberAccess	lookup . tas . rsize		8999381	0					
ANR	8999756	MemberAccess	lookup . tas		8999381	0					
ANR	8999757	Identifier	lookup		8999381	0					
ANR	8999758	Identifier	tas		8999381	1					
ANR	8999759	Identifier	rsize		8999381	1					
ANR	8999760	ExpressionStatement	pcs -> params . indexed . lookup . table . size = num_values	4432:8:140706:140756	8999381	11	True				
ANR	8999761	AssignmentExpression	pcs -> params . indexed . lookup . table . size = num_values		8999381	0		=			
ANR	8999762	MemberAccess	pcs -> params . indexed . lookup . table . size		8999381	0					
ANR	8999763	MemberAccess	pcs -> params . indexed . lookup . table		8999381	0					
ANR	8999764	MemberAccess	pcs -> params . indexed . lookup		8999381	0					
ANR	8999765	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999766	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999767	Identifier	pcs		8999381	0					
ANR	8999768	Identifier	params		8999381	1					
ANR	8999769	Identifier	indexed		8999381	1					
ANR	8999770	Identifier	lookup		8999381	1					
ANR	8999771	Identifier	table		8999381	1					
ANR	8999772	Identifier	size		8999381	1					
ANR	8999773	Identifier	num_values		8999381	1					
ANR	8999774	ExpressionStatement	pcs -> params . indexed . use_proc = 0	4433:8:140766:140798	8999381	12	True				
ANR	8999775	AssignmentExpression	pcs -> params . indexed . use_proc = 0		8999381	0		=			
ANR	8999776	MemberAccess	pcs -> params . indexed . use_proc		8999381	0					
ANR	8999777	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999778	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999779	Identifier	pcs		8999381	0					
ANR	8999780	Identifier	params		8999381	1					
ANR	8999781	Identifier	indexed		8999381	1					
ANR	8999782	Identifier	use_proc		8999381	1					
ANR	8999783	PrimaryExpression	0		8999381	1					
ANR	8999784	ExpressionStatement	make_null ( pproc )	4434:8:140808:140824	8999381	13	True				
ANR	8999785	CallExpression	make_null ( pproc )		8999381	0					
ANR	8999786	Callee	make_null		8999381	0					
ANR	8999787	Identifier	make_null		8999381	0					
ANR	8999788	ArgumentList	pproc		8999381	1					
ANR	8999789	Argument	pproc		8999381	0					
ANR	8999790	Identifier	pproc		8999381	0					
ANR	8999791	ElseStatement	else		8999381	0					
ANR	8999792	CompoundStatement		71:8:2489:2508	8999381	0					
ANR	8999793	IdentifierDeclStatement	gs_indexed_map * map ;	4436:8:140847:140866	8999381	0	True				
ANR	8999794	IdentifierDecl	* map		8999381	0					
ANR	8999795	IdentifierDeclType	gs_indexed_map *		8999381	0					
ANR	8999796	Identifier	map		8999381	1					
ANR	8999797	ExpressionStatement	"code = zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"	4443:8:141095:141218	8999381	1	True				
ANR	8999798	AssignmentExpression	"code = zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"		8999381	0		=			
ANR	8999799	Identifier	code		8999381	0					
ANR	8999800	CallExpression	"zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"		8999381	1					
ANR	8999801	Callee	zcs_begin_map		8999381	0					
ANR	8999802	Identifier	zcs_begin_map		8999381	0					
ANR	8999803	ArgumentList	i_ctx_p		8999381	1					
ANR	8999804	Argument	i_ctx_p		8999381	0					
ANR	8999805	Identifier	i_ctx_p		8999381	0					
ANR	8999806	Argument	& map		8999381	1					
ANR	8999807	UnaryOperationExpression	& map		8999381	0					
ANR	8999808	UnaryOperator	&		8999381	0					
ANR	8999809	Identifier	map		8999381	1					
ANR	8999810	Argument	& lookup		8999381	2					
ANR	8999811	UnaryOperationExpression	& lookup		8999381	0					
ANR	8999812	UnaryOperator	&		8999381	0					
ANR	8999813	Identifier	lookup		8999381	1					
ANR	8999814	Argument	hival . value . intval + 1		8999381	3					
ANR	8999815	AdditiveExpression	hival . value . intval + 1		8999381	0		+			
ANR	8999816	MemberAccess	hival . value . intval		8999381	0					
ANR	8999817	MemberAccess	hival . value		8999381	0					
ANR	8999818	Identifier	hival		8999381	0					
ANR	8999819	Identifier	value		8999381	1					
ANR	8999820	Identifier	intval		8999381	1					
ANR	8999821	PrimaryExpression	1		8999381	1					
ANR	8999822	Argument	pcs_base		8999381	4					
ANR	8999823	Identifier	pcs_base		8999381	0					
ANR	8999824	Argument	indexed_cont		8999381	5					
ANR	8999825	Identifier	indexed_cont		8999381	0					
ANR	8999826	IfStatement	if ( code < 0 )		8999381	2					
ANR	8999827	Condition	code < 0	4445:12:141232:141239	8999381	0	True				
ANR	8999828	RelationalExpression	code < 0		8999381	0		<			
ANR	8999829	Identifier	code		8999381	0					
ANR	8999830	PrimaryExpression	0		8999381	1					
ANR	8999831	ReturnStatement	return code ;	4446:12:141254:141265	8999381	1	True				
ANR	8999832	Identifier	code		8999381	0					
ANR	8999833	IfStatement	if ( igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN ) )		8999381	3					
ANR	8999834	Condition	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )	4447:12:141279:141436	8999381	0	True				
ANR	8999835	AndExpression	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )		8999381	0		&&			
ANR	8999836	EqualityExpression	igs -> icc_manager -> device_named != NULL		8999381	0		!=			
ANR	8999837	PtrMemberAccess	igs -> icc_manager -> device_named		8999381	0					
ANR	8999838	PtrMemberAccess	igs -> icc_manager		8999381	0					
ANR	8999839	Identifier	igs		8999381	0					
ANR	8999840	Identifier	icc_manager		8999381	1					
ANR	8999841	Identifier	device_named		8999381	1					
ANR	8999842	Identifier	NULL		8999381	1					
ANR	8999843	OrExpression	base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN		8999381	1		||			
ANR	8999844	EqualityExpression	base_type == gs_color_space_index_Separation		8999381	0		==			
ANR	8999845	Identifier	base_type		8999381	0					
ANR	8999846	Identifier	gs_color_space_index_Separation		8999381	1					
ANR	8999847	EqualityExpression	base_type == gs_color_space_index_DeviceN		8999381	1		==			
ANR	8999848	Identifier	base_type		8999381	0					
ANR	8999849	Identifier	gs_color_space_index_DeviceN		8999381	1					
ANR	8999850	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"	4450:12:141451:141517	8999381	1	True				
ANR	8999851	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		8999381	0		=			
ANR	8999852	Identifier	pcs		8999381	0					
ANR	8999853	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		8999381	1					
ANR	8999854	Callee	gs_cspace_alloc		8999381	0					
ANR	8999855	Identifier	gs_cspace_alloc		8999381	0					
ANR	8999856	ArgumentList	imemory		8999381	1					
ANR	8999857	Argument	imemory		8999381	0					
ANR	8999858	Identifier	imemory		8999381	0					
ANR	8999859	Argument	& gs_color_space_type_Indexed_Named		8999381	1					
ANR	8999860	UnaryOperationExpression	& gs_color_space_type_Indexed_Named		8999381	0					
ANR	8999861	UnaryOperator	&		8999381	0					
ANR	8999862	Identifier	gs_color_space_type_Indexed_Named		8999381	1					
ANR	8999863	ElseStatement	else		8999381	0					
ANR	8999864	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"	4452:12:141544:141604	8999381	0	True				
ANR	8999865	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		8999381	0		=			
ANR	8999866	Identifier	pcs		8999381	0					
ANR	8999867	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		8999381	1					
ANR	8999868	Callee	gs_cspace_alloc		8999381	0					
ANR	8999869	Identifier	gs_cspace_alloc		8999381	0					
ANR	8999870	ArgumentList	imemory		8999381	1					
ANR	8999871	Argument	imemory		8999381	0					
ANR	8999872	Identifier	imemory		8999381	0					
ANR	8999873	Argument	& gs_color_space_type_Indexed		8999381	1					
ANR	8999874	UnaryOperationExpression	& gs_color_space_type_Indexed		8999381	0					
ANR	8999875	UnaryOperator	&		8999381	0					
ANR	8999876	Identifier	gs_color_space_type_Indexed		8999381	1					
ANR	8999877	ExpressionStatement	pcs -> base_space = pcs_base	4453:8:141614:141640	8999381	4	True				
ANR	8999878	AssignmentExpression	pcs -> base_space = pcs_base		8999381	0		=			
ANR	8999879	PtrMemberAccess	pcs -> base_space		8999381	0					
ANR	8999880	Identifier	pcs		8999381	0					
ANR	8999881	Identifier	base_space		8999381	1					
ANR	8999882	Identifier	pcs_base		8999381	1					
ANR	8999883	ExpressionStatement	rc_increment_cs ( pcs_base )	4454:8:141650:141675	8999381	5	True				
ANR	8999884	CallExpression	rc_increment_cs ( pcs_base )		8999381	0					
ANR	8999885	Callee	rc_increment_cs		8999381	0					
ANR	8999886	Identifier	rc_increment_cs		8999381	0					
ANR	8999887	ArgumentList	pcs_base		8999381	1					
ANR	8999888	Argument	pcs_base		8999381	0					
ANR	8999889	Identifier	pcs_base		8999381	0					
ANR	8999890	ExpressionStatement	pcs -> params . indexed . use_proc = 1	4455:8:141685:141717	8999381	6	True				
ANR	8999891	AssignmentExpression	pcs -> params . indexed . use_proc = 1		8999381	0		=			
ANR	8999892	MemberAccess	pcs -> params . indexed . use_proc		8999381	0					
ANR	8999893	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999894	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999895	Identifier	pcs		8999381	0					
ANR	8999896	Identifier	params		8999381	1					
ANR	8999897	Identifier	indexed		8999381	1					
ANR	8999898	Identifier	use_proc		8999381	1					
ANR	8999899	PrimaryExpression	1		8999381	1					
ANR	8999900	ExpressionStatement	* pproc = lookup	4456:8:141727:141742	8999381	7	True				
ANR	8999901	AssignmentExpression	* pproc = lookup		8999381	0		=			
ANR	8999902	UnaryOperationExpression	* pproc		8999381	0					
ANR	8999903	UnaryOperator	*		8999381	0					
ANR	8999904	Identifier	pproc		8999381	1					
ANR	8999905	Identifier	lookup		8999381	1					
ANR	8999906	ExpressionStatement	map -> proc . lookup_index = lookup_indexed_map	4457:8:141752:141795	8999381	8	True				
ANR	8999907	AssignmentExpression	map -> proc . lookup_index = lookup_indexed_map		8999381	0		=			
ANR	8999908	MemberAccess	map -> proc . lookup_index		8999381	0					
ANR	8999909	PtrMemberAccess	map -> proc		8999381	0					
ANR	8999910	Identifier	map		8999381	0					
ANR	8999911	Identifier	proc		8999381	1					
ANR	8999912	Identifier	lookup_index		8999381	1					
ANR	8999913	Identifier	lookup_indexed_map		8999381	1					
ANR	8999914	ExpressionStatement	pcs -> params . indexed . lookup . map = map	4458:8:141805:141841	8999381	9	True				
ANR	8999915	AssignmentExpression	pcs -> params . indexed . lookup . map = map		8999381	0		=			
ANR	8999916	MemberAccess	pcs -> params . indexed . lookup . map		8999381	0					
ANR	8999917	MemberAccess	pcs -> params . indexed . lookup		8999381	0					
ANR	8999918	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999919	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999920	Identifier	pcs		8999381	0					
ANR	8999921	Identifier	params		8999381	1					
ANR	8999922	Identifier	indexed		8999381	1					
ANR	8999923	Identifier	lookup		8999381	1					
ANR	8999924	Identifier	map		8999381	1					
ANR	8999925	Identifier	map		8999381	1					
ANR	8999926	ExpressionStatement	pcs -> params . indexed . hival = hival . value . intval	4460:4:141853:141899	8999381	19	True				
ANR	8999927	AssignmentExpression	pcs -> params . indexed . hival = hival . value . intval		8999381	0		=			
ANR	8999928	MemberAccess	pcs -> params . indexed . hival		8999381	0					
ANR	8999929	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999930	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999931	Identifier	pcs		8999381	0					
ANR	8999932	Identifier	params		8999381	1					
ANR	8999933	Identifier	indexed		8999381	1					
ANR	8999934	Identifier	hival		8999381	1					
ANR	8999935	MemberAccess	hival . value . intval		8999381	1					
ANR	8999936	MemberAccess	hival . value		8999381	0					
ANR	8999937	Identifier	hival		8999381	0					
ANR	8999938	Identifier	value		8999381	1					
ANR	8999939	Identifier	intval		8999381	1					
ANR	8999940	ExpressionStatement	pcs -> params . indexed . n_comps = cs_num_components ( pcs_base )	4461:4:141905:141962	8999381	20	True				
ANR	8999941	AssignmentExpression	pcs -> params . indexed . n_comps = cs_num_components ( pcs_base )		8999381	0		=			
ANR	8999942	MemberAccess	pcs -> params . indexed . n_comps		8999381	0					
ANR	8999943	MemberAccess	pcs -> params . indexed		8999381	0					
ANR	8999944	PtrMemberAccess	pcs -> params		8999381	0					
ANR	8999945	Identifier	pcs		8999381	0					
ANR	8999946	Identifier	params		8999381	1					
ANR	8999947	Identifier	indexed		8999381	1					
ANR	8999948	Identifier	n_comps		8999381	1					
ANR	8999949	CallExpression	cs_num_components ( pcs_base )		8999381	1					
ANR	8999950	Callee	cs_num_components		8999381	0					
ANR	8999951	Identifier	cs_num_components		8999381	0					
ANR	8999952	ArgumentList	pcs_base		8999381	1					
ANR	8999953	Argument	pcs_base		8999381	0					
ANR	8999954	Identifier	pcs_base		8999381	0					
ANR	8999955	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4462:4:141968:142001	8999381	21	True				
ANR	8999956	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		8999381	0		=			
ANR	8999957	Identifier	code		8999381	0					
ANR	8999958	CallExpression	"gs_setcolorspace ( igs , pcs )"		8999381	1					
ANR	8999959	Callee	gs_setcolorspace		8999381	0					
ANR	8999960	Identifier	gs_setcolorspace		8999381	0					
ANR	8999961	ArgumentList	igs		8999381	1					
ANR	8999962	Argument	igs		8999381	0					
ANR	8999963	Identifier	igs		8999381	0					
ANR	8999964	Argument	pcs		8999381	1					
ANR	8999965	Identifier	pcs		8999381	0					
ANR	8999966	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setindexedspace"" )"	4464:4:142053:142097	8999381	22	True				
ANR	8999967	CallExpression	"rc_decrement_only_cs ( pcs , ""setindexedspace"" )"		8999381	0					
ANR	8999968	Callee	rc_decrement_only_cs		8999381	0					
ANR	8999969	Identifier	rc_decrement_only_cs		8999381	0					
ANR	8999970	ArgumentList	pcs		8999381	1					
ANR	8999971	Argument	pcs		8999381	0					
ANR	8999972	Identifier	pcs		8999381	0					
ANR	8999973	Argument	"""setindexedspace"""		8999381	1					
ANR	8999974	PrimaryExpression	"""setindexedspace"""		8999381	0					
ANR	8999975	IfStatement	if ( code < 0 )		8999381	23					
ANR	8999976	Condition	code < 0	4465:8:142107:142114	8999381	0	True				
ANR	8999977	RelationalExpression	code < 0		8999381	0		<			
ANR	8999978	Identifier	code		8999381	0					
ANR	8999979	PrimaryExpression	0		8999381	1					
ANR	8999980	CompoundStatement		100:18:3759:3759	8999381	1					
ANR	8999981	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	4466:8:142127:142161	8999381	0	True				
ANR	8999982	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		8999381	0		=			
ANR	8999983	ArrayIndexing	istate -> colorspace [ 0 ]		8999381	0					
ANR	8999984	PtrMemberAccess	istate -> colorspace		8999381	0					
ANR	8999985	Identifier	istate		8999381	0					
ANR	8999986	Identifier	colorspace		8999381	1					
ANR	8999987	PrimaryExpression	0		8999381	1					
ANR	8999988	Identifier	cspace_old		8999381	1					
ANR	8999989	ExpressionStatement	"ref_stack_pop_to ( & e_stack , edepth )"	4467:8:142171:142205	8999381	1	True				
ANR	8999990	CallExpression	"ref_stack_pop_to ( & e_stack , edepth )"		8999381	0					
ANR	8999991	Callee	ref_stack_pop_to		8999381	0					
ANR	8999992	Identifier	ref_stack_pop_to		8999381	0					
ANR	8999993	ArgumentList	& e_stack		8999381	1					
ANR	8999994	Argument	& e_stack		8999381	0					
ANR	8999995	UnaryOperationExpression	& e_stack		8999381	0					
ANR	8999996	UnaryOperator	&		8999381	0					
ANR	8999997	Identifier	e_stack		8999381	1					
ANR	8999998	Argument	edepth		8999381	1					
ANR	8999999	Identifier	edepth		8999381	0					
ANR	9000000	ReturnStatement	return code ;	4468:8:142215:142226	8999381	2	True				
ANR	9000001	Identifier	code		8999381	0					
ANR	9000002	ExpressionStatement	* stage = 0	4470:4:142238:142248	8999381	24	True				
ANR	9000003	AssignmentExpression	* stage = 0		8999381	0		=			
ANR	9000004	UnaryOperationExpression	* stage		8999381	0					
ANR	9000005	UnaryOperator	*		8999381	0					
ANR	9000006	Identifier	stage		8999381	1					
ANR	9000007	PrimaryExpression	0		8999381	1					
ANR	9000008	IfStatement	if ( ref_stack_count ( & e_stack ) == edepth )		8999381	25					
ANR	9000009	Condition	ref_stack_count ( & e_stack ) == edepth	4471:8:142258:142292	8999381	0	True				
ANR	9000010	EqualityExpression	ref_stack_count ( & e_stack ) == edepth		8999381	0		==			
ANR	9000011	CallExpression	ref_stack_count ( & e_stack )		8999381	0					
ANR	9000012	Callee	ref_stack_count		8999381	0					
ANR	9000013	Identifier	ref_stack_count		8999381	0					
ANR	9000014	ArgumentList	& e_stack		8999381	1					
ANR	9000015	Argument	& e_stack		8999381	0					
ANR	9000016	UnaryOperationExpression	& e_stack		8999381	0					
ANR	9000017	UnaryOperator	&		8999381	0					
ANR	9000018	Identifier	e_stack		8999381	1					
ANR	9000019	Identifier	edepth		8999381	1					
ANR	9000020	CompoundStatement		106:45:3937:3937	8999381	1					
ANR	9000021	ReturnStatement	return 0 ;	4472:8:142305:142313	8999381	0	True				
ANR	9000022	PrimaryExpression	0		8999381	0					
ANR	9000023	ElseStatement	else		8999381	0					
ANR	9000024	CompoundStatement		108:11:3968:3968	8999381	0					
ANR	9000025	ExpressionStatement	* cont = 1	4474:8:142336:142345	8999381	0	True				
ANR	9000026	AssignmentExpression	* cont = 1		8999381	0		=			
ANR	9000027	UnaryOperationExpression	* cont		8999381	0					
ANR	9000028	UnaryOperator	*		8999381	0					
ANR	9000029	Identifier	cont		8999381	1					
ANR	9000030	PrimaryExpression	1		8999381	1					
ANR	9000031	ExpressionStatement	* stage = 1	4475:8:142355:142365	8999381	1	True				
ANR	9000032	AssignmentExpression	* stage = 1		8999381	0		=			
ANR	9000033	UnaryOperationExpression	* stage		8999381	0					
ANR	9000034	UnaryOperator	*		8999381	0					
ANR	9000035	Identifier	stage		8999381	1					
ANR	9000036	PrimaryExpression	1		8999381	1					
ANR	9000037	ReturnStatement	return o_push_estack ;	4476:8:142375:142395	8999381	2	True				
ANR	9000038	Identifier	o_push_estack		8999381	0					
ANR	9000039	ReturnType	static int		8999381	1					
ANR	9000040	Identifier	setindexedspace		8999381	2					
ANR	9000041	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		8999381	3					
ANR	9000042	Parameter	i_ctx_t * i_ctx_p	4365:27:138293:138309	8999381	0	True				
ANR	9000043	ParameterType	i_ctx_t *		8999381	0					
ANR	9000044	Identifier	i_ctx_p		8999381	1					
ANR	9000045	Parameter	ref * r	4365:46:138312:138317	8999381	1	True				
ANR	9000046	ParameterType	ref *		8999381	0					
ANR	9000047	Identifier	r		8999381	1					
ANR	9000048	Parameter	int * stage	4365:54:138320:138329	8999381	2	True				
ANR	9000049	ParameterType	int *		8999381	0					
ANR	9000050	Identifier	stage		8999381	1					
ANR	9000051	Parameter	int * cont	4365:66:138332:138340	8999381	3	True				
ANR	9000052	ParameterType	int *		8999381	0					
ANR	9000053	Identifier	cont		8999381	1					
ANR	9000054	Parameter	int CIESubst	4365:77:138343:138354	8999381	4	True				
ANR	9000055	ParameterType	int		8999381	0					
ANR	9000056	Identifier	CIESubst		8999381	1					
ANR	9000057	CFGEntryNode	ENTRY		8999381		True				
ANR	9000058	CFGExitNode	EXIT		8999381		True				
ANR	9000059	Symbol	& gs_color_space_type_Indexed		8999381						
ANR	9000060	Symbol	indexed_cont		8999381						
ANR	9000061	Symbol	i_ctx_p -> language_level		8999381						
ANR	9000062	Symbol	gs_error_rangecheck		8999381						
ANR	9000063	Symbol	zcs_begin_map		8999381						
ANR	9000064	Symbol	pcs -> params . indexed . n_comps		8999381						
ANR	9000065	Symbol	* map		8999381						
ANR	9000066	Symbol	gs_error_undefined		8999381						
ANR	9000067	Symbol	* pcs		8999381						
ANR	9000068	Symbol	* istate		8999381						
ANR	9000069	Symbol	gs_color_space_index_DeviceN		8999381						
ANR	9000070	Symbol	& gs_color_space_type_Indexed_Named		8999381						
ANR	9000071	Symbol	r_has_type		8999381						
ANR	9000072	Symbol	lookup . value		8999381						
ANR	9000073	Symbol	igs		8999381						
ANR	9000074	Symbol	gs_currentcolorspace		8999381						
ANR	9000075	Symbol	hival . value . intval		8999381						
ANR	9000076	Symbol	istate -> colorspace [ 0 ] . procs		8999381						
ANR	9000077	Symbol	pproc		8999381						
ANR	9000078	Symbol	* i_ctx_p		8999381						
ANR	9000079	Symbol	istate -> colorspace		8999381						
ANR	9000080	Symbol	imemory		8999381						
ANR	9000081	Symbol	cont		8999381						
ANR	9000082	Symbol	NULL		8999381						
ANR	9000083	Symbol	pcs -> params . indexed		8999381						
ANR	9000084	Symbol	data_tmp		8999381						
ANR	9000085	Symbol	map -> proc		8999381						
ANR	9000086	Symbol	pcs -> params . indexed . lookup . table . data		8999381						
ANR	9000087	Symbol	igs -> icc_manager -> device_named		8999381						
ANR	9000088	Symbol	istate -> colorspace [ 0 ] . procs . special		8999381						
ANR	9000089	Symbol	& hival		8999381						
ANR	9000090	Symbol	i_ctx_p		8999381						
ANR	9000091	Symbol	& istate -> colorspace [ 0 ] . procs . special		8999381						
ANR	9000092	Symbol	cs_num_components		8999381						
ANR	9000093	Symbol	ref_stack_count		8999381						
ANR	9000094	Symbol	lookup . tas . rsize		8999381						
ANR	9000095	Symbol	gs_color_space_get_index		8999381						
ANR	9000096	Symbol	lookup . value . const_bytes		8999381						
ANR	9000097	Symbol	* * istate		8999381						
ANR	9000098	Symbol	* igs		8999381						
ANR	9000099	Symbol	gs_color_space_index_Separation		8999381						
ANR	9000100	Symbol	* igs -> icc_manager		8999381						
ANR	9000101	Symbol	code		8999381						
ANR	9000102	Symbol	pcs -> params . indexed . use_proc		8999381						
ANR	9000103	Symbol	& map		8999381						
ANR	9000104	Symbol	gs_setcolorspace		8999381						
ANR	9000105	Symbol	ialloc_string		8999381						
ANR	9000106	Symbol	& istate -> colorspace [ 0 ] . procs		8999381						
ANR	9000107	Symbol	base_type		8999381						
ANR	9000108	Symbol	pcs -> params . indexed . lookup		8999381						
ANR	9000109	Symbol	r_size		8999381						
ANR	9000110	Symbol	map		8999381						
ANR	9000111	Symbol	CIESubst		8999381						
ANR	9000112	Symbol	* istate -> colorspace		8999381						
ANR	9000113	Symbol	hival . value		8999381						
ANR	9000114	Symbol	map -> proc . lookup_index		8999381						
ANR	9000115	Symbol	pcs -> params . indexed . hival		8999381						
ANR	9000116	Symbol	o_push_estack		8999381						
ANR	9000117	Symbol	lookup		8999381						
ANR	9000118	Symbol	pcs		8999381						
ANR	9000119	Symbol	igs -> icc_manager		8999381						
ANR	9000120	Symbol	pcs_base		8999381						
ANR	9000121	Symbol	* stage		8999381						
ANR	9000122	Symbol	pcs -> params . indexed . lookup . table		8999381						
ANR	9000123	Symbol	array_get		8999381						
ANR	9000124	Symbol	pcs -> params		8999381						
ANR	9000125	Symbol	* * igs		8999381						
ANR	9000126	Symbol	lookup . tas		8999381						
ANR	9000127	Symbol	hival		8999381						
ANR	9000128	Symbol	lookup_indexed_map		8999381						
ANR	9000129	Symbol	* pproc		8999381						
ANR	9000130	Symbol	pcs -> params . indexed . lookup . map		8999381						
ANR	9000131	Symbol	num_values		8999381						
ANR	9000132	Symbol	t_string		8999381						
ANR	9000133	Symbol	gs_error_VMerror		8999381						
ANR	9000134	Symbol	r		8999381						
ANR	9000135	Symbol	pcs -> base_space		8999381						
ANR	9000136	Symbol	stage		8999381						
ANR	9000137	Symbol	edepth		8999381						
ANR	9000138	Symbol	* cont		8999381						
ANR	9000139	Symbol	pcs -> params . indexed . lookup . table . size		8999381						
ANR	9000140	Symbol	cspace_old		8999381						
ANR	9000141	Symbol	& lookup		8999381						
ANR	9000142	Symbol	gs_cspace_alloc		8999381						
ANR	9000143	Symbol	& istate -> colorspace [ 0 ] . procs . special . index_proc		8999381						
ANR	9000144	Symbol	& e_stack		8999381						
ANR	9000145	Symbol	istate		8999381						
ANR	9000146	Function	validateindexedspace	4479:0:142445:144299							
ANR	9000147	FunctionDef	"validateindexedspace (i_ctx_t * i_ctx_p , ref * * space)"		9000146	0					
ANR	9000148	CompoundStatement		4480:0:142509:144299	9000146	0					
ANR	9000149	IdentifierDeclStatement	int code = 0 ;	4481:4:142515:142527	9000146	0	True				
ANR	9000150	IdentifierDecl	code = 0		9000146	0					
ANR	9000151	IdentifierDeclType	int		9000146	0					
ANR	9000152	Identifier	code		9000146	1					
ANR	9000153	AssignmentExpression	code = 0		9000146	2		=			
ANR	9000154	Identifier	code		9000146	0					
ANR	9000155	PrimaryExpression	0		9000146	1					
ANR	9000156	IdentifierDeclStatement	ref * r = * space ;	4482:4:142533:142548	9000146	1	True				
ANR	9000157	IdentifierDecl	* r = * space		9000146	0					
ANR	9000158	IdentifierDeclType	ref *		9000146	0					
ANR	9000159	Identifier	r		9000146	1					
ANR	9000160	AssignmentExpression	* r = * space		9000146	2		=			
ANR	9000161	Identifier	r		9000146	0					
ANR	9000162	UnaryOperationExpression	* space		9000146	1					
ANR	9000163	UnaryOperator	*		9000146	0					
ANR	9000164	Identifier	space		9000146	1					
ANR	9000165	IdentifierDeclStatement	"ref nameref , sref , hival , lookup , altspace ;"	4483:4:142554:142596	9000146	2	True				
ANR	9000166	IdentifierDecl	nameref		9000146	0					
ANR	9000167	IdentifierDeclType	ref		9000146	0					
ANR	9000168	Identifier	nameref		9000146	1					
ANR	9000169	IdentifierDecl	sref		9000146	1					
ANR	9000170	IdentifierDeclType	ref		9000146	0					
ANR	9000171	Identifier	sref		9000146	1					
ANR	9000172	IdentifierDecl	hival		9000146	2					
ANR	9000173	IdentifierDeclType	ref		9000146	0					
ANR	9000174	Identifier	hival		9000146	1					
ANR	9000175	IdentifierDecl	lookup		9000146	3					
ANR	9000176	IdentifierDeclType	ref		9000146	0					
ANR	9000177	Identifier	lookup		9000146	1					
ANR	9000178	IdentifierDecl	altspace		9000146	4					
ANR	9000179	IdentifierDeclType	ref		9000146	0					
ANR	9000180	Identifier	altspace		9000146	1					
ANR	9000181	IfStatement	if ( ! r_is_array ( r ) )		9000146	3					
ANR	9000182	Condition	! r_is_array ( r )	4485:8:142607:142620	9000146	0	True				
ANR	9000183	UnaryOperationExpression	! r_is_array ( r )		9000146	0					
ANR	9000184	UnaryOperator	!		9000146	0					
ANR	9000185	CallExpression	r_is_array ( r )		9000146	1					
ANR	9000186	Callee	r_is_array		9000146	0					
ANR	9000187	Identifier	r_is_array		9000146	0					
ANR	9000188	ArgumentList	r		9000146	1					
ANR	9000189	Argument	r		9000146	0					
ANR	9000190	Identifier	r		9000146	0					
ANR	9000191	ExpressionStatement	return_error ( gs_error_typecheck )	4486:8:142631:142663	9000146	1	True				
ANR	9000192	CallExpression	return_error ( gs_error_typecheck )		9000146	0					
ANR	9000193	Callee	return_error		9000146	0					
ANR	9000194	Identifier	return_error		9000146	0					
ANR	9000195	ArgumentList	gs_error_typecheck		9000146	1					
ANR	9000196	Argument	gs_error_typecheck		9000146	0					
ANR	9000197	Identifier	gs_error_typecheck		9000146	0					
ANR	9000198	IfStatement	if ( r_size ( r ) != 4 )		9000146	4					
ANR	9000199	Condition	r_size ( r ) != 4	4488:8:142734:142747	9000146	0	True				
ANR	9000200	EqualityExpression	r_size ( r ) != 4		9000146	0		!=			
ANR	9000201	CallExpression	r_size ( r )		9000146	0					
ANR	9000202	Callee	r_size		9000146	0					
ANR	9000203	Identifier	r_size		9000146	0					
ANR	9000204	ArgumentList	r		9000146	1					
ANR	9000205	Argument	r		9000146	0					
ANR	9000206	Identifier	r		9000146	0					
ANR	9000207	PrimaryExpression	4		9000146	1					
ANR	9000208	ExpressionStatement	return_error ( gs_error_rangecheck )	4489:8:142758:142791	9000146	1	True				
ANR	9000209	CallExpression	return_error ( gs_error_rangecheck )		9000146	0					
ANR	9000210	Callee	return_error		9000146	0					
ANR	9000211	Identifier	return_error		9000146	0					
ANR	9000212	ArgumentList	gs_error_rangecheck		9000146	1					
ANR	9000213	Argument	gs_error_rangecheck		9000146	0					
ANR	9000214	Identifier	gs_error_rangecheck		9000146	0					
ANR	9000215	ExpressionStatement	"code = array_get ( imemory , r , 2 , & hival )"	4492:4:142871:142910	9000146	5	True				
ANR	9000216	AssignmentExpression	"code = array_get ( imemory , r , 2 , & hival )"		9000146	0		=			
ANR	9000217	Identifier	code		9000146	0					
ANR	9000218	CallExpression	"array_get ( imemory , r , 2 , & hival )"		9000146	1					
ANR	9000219	Callee	array_get		9000146	0					
ANR	9000220	Identifier	array_get		9000146	0					
ANR	9000221	ArgumentList	imemory		9000146	1					
ANR	9000222	Argument	imemory		9000146	0					
ANR	9000223	Identifier	imemory		9000146	0					
ANR	9000224	Argument	r		9000146	1					
ANR	9000225	Identifier	r		9000146	0					
ANR	9000226	Argument	2		9000146	2					
ANR	9000227	PrimaryExpression	2		9000146	0					
ANR	9000228	Argument	& hival		9000146	3					
ANR	9000229	UnaryOperationExpression	& hival		9000146	0					
ANR	9000230	UnaryOperator	&		9000146	0					
ANR	9000231	Identifier	hival		9000146	1					
ANR	9000232	IfStatement	if ( code < 0 )		9000146	6					
ANR	9000233	Condition	code < 0	4493:8:142920:142927	9000146	0	True				
ANR	9000234	RelationalExpression	code < 0		9000146	0		<			
ANR	9000235	Identifier	code		9000146	0					
ANR	9000236	PrimaryExpression	0		9000146	1					
ANR	9000237	ReturnStatement	return code ;	4494:8:142938:142949	9000146	1	True				
ANR	9000238	Identifier	code		9000146	0					
ANR	9000239	IfStatement	"if ( ! r_has_type ( & hival , t_integer ) )"		9000146	7					
ANR	9000240	Condition	"! r_has_type ( & hival , t_integer )"	4495:8:142959:142988	9000146	0	True				
ANR	9000241	UnaryOperationExpression	"! r_has_type ( & hival , t_integer )"		9000146	0					
ANR	9000242	UnaryOperator	!		9000146	0					
ANR	9000243	CallExpression	"r_has_type ( & hival , t_integer )"		9000146	1					
ANR	9000244	Callee	r_has_type		9000146	0					
ANR	9000245	Identifier	r_has_type		9000146	0					
ANR	9000246	ArgumentList	& hival		9000146	1					
ANR	9000247	Argument	& hival		9000146	0					
ANR	9000248	UnaryOperationExpression	& hival		9000146	0					
ANR	9000249	UnaryOperator	&		9000146	0					
ANR	9000250	Identifier	hival		9000146	1					
ANR	9000251	Argument	t_integer		9000146	1					
ANR	9000252	Identifier	t_integer		9000146	0					
ANR	9000253	ExpressionStatement	return_error ( gs_error_typecheck )	4496:8:142999:143031	9000146	1	True				
ANR	9000254	CallExpression	return_error ( gs_error_typecheck )		9000146	0					
ANR	9000255	Callee	return_error		9000146	0					
ANR	9000256	Identifier	return_error		9000146	0					
ANR	9000257	ArgumentList	gs_error_typecheck		9000146	1					
ANR	9000258	Argument	gs_error_typecheck		9000146	0					
ANR	9000259	Identifier	gs_error_typecheck		9000146	0					
ANR	9000260	IfStatement	if ( hival . value . intval < 0 || hival . value . intval > 4096 )		9000146	8					
ANR	9000261	Condition	hival . value . intval < 0 || hival . value . intval > 4096	4498:8:143093:143143	9000146	0	True				
ANR	9000262	OrExpression	hival . value . intval < 0 || hival . value . intval > 4096		9000146	0		||			
ANR	9000263	RelationalExpression	hival . value . intval < 0		9000146	0		<			
ANR	9000264	MemberAccess	hival . value . intval		9000146	0					
ANR	9000265	MemberAccess	hival . value		9000146	0					
ANR	9000266	Identifier	hival		9000146	0					
ANR	9000267	Identifier	value		9000146	1					
ANR	9000268	Identifier	intval		9000146	1					
ANR	9000269	PrimaryExpression	0		9000146	1					
ANR	9000270	RelationalExpression	hival . value . intval > 4096		9000146	1		>			
ANR	9000271	MemberAccess	hival . value . intval		9000146	0					
ANR	9000272	MemberAccess	hival . value		9000146	0					
ANR	9000273	Identifier	hival		9000146	0					
ANR	9000274	Identifier	value		9000146	1					
ANR	9000275	Identifier	intval		9000146	1					
ANR	9000276	PrimaryExpression	4096		9000146	1					
ANR	9000277	ExpressionStatement	return_error ( gs_error_rangecheck )	4499:8:143154:143187	9000146	1	True				
ANR	9000278	CallExpression	return_error ( gs_error_rangecheck )		9000146	0					
ANR	9000279	Callee	return_error		9000146	0					
ANR	9000280	Identifier	return_error		9000146	0					
ANR	9000281	ArgumentList	gs_error_rangecheck		9000146	1					
ANR	9000282	Argument	gs_error_rangecheck		9000146	0					
ANR	9000283	Identifier	gs_error_rangecheck		9000146	0					
ANR	9000284	ExpressionStatement	"code = array_get ( imemory , r , 3 , & lookup )"	4501:4:143257:143297	9000146	9	True				
ANR	9000285	AssignmentExpression	"code = array_get ( imemory , r , 3 , & lookup )"		9000146	0		=			
ANR	9000286	Identifier	code		9000146	0					
ANR	9000287	CallExpression	"array_get ( imemory , r , 3 , & lookup )"		9000146	1					
ANR	9000288	Callee	array_get		9000146	0					
ANR	9000289	Identifier	array_get		9000146	0					
ANR	9000290	ArgumentList	imemory		9000146	1					
ANR	9000291	Argument	imemory		9000146	0					
ANR	9000292	Identifier	imemory		9000146	0					
ANR	9000293	Argument	r		9000146	1					
ANR	9000294	Identifier	r		9000146	0					
ANR	9000295	Argument	3		9000146	2					
ANR	9000296	PrimaryExpression	3		9000146	0					
ANR	9000297	Argument	& lookup		9000146	3					
ANR	9000298	UnaryOperationExpression	& lookup		9000146	0					
ANR	9000299	UnaryOperator	&		9000146	0					
ANR	9000300	Identifier	lookup		9000146	1					
ANR	9000301	IfStatement	if ( code < 0 )		9000146	10					
ANR	9000302	Condition	code < 0	4502:8:143307:143314	9000146	0	True				
ANR	9000303	RelationalExpression	code < 0		9000146	0		<			
ANR	9000304	Identifier	code		9000146	0					
ANR	9000305	PrimaryExpression	0		9000146	1					
ANR	9000306	ReturnStatement	return code ;	4503:8:143325:143336	9000146	1	True				
ANR	9000307	Identifier	code		9000146	0					
ANR	9000308	IfStatement	"if ( ! r_has_type ( & lookup , t_string ) )"		9000146	11					
ANR	9000309	Condition	"! r_has_type ( & lookup , t_string )"	4504:8:143346:143375	9000146	0	True				
ANR	9000310	UnaryOperationExpression	"! r_has_type ( & lookup , t_string )"		9000146	0					
ANR	9000311	UnaryOperator	!		9000146	0					
ANR	9000312	CallExpression	"r_has_type ( & lookup , t_string )"		9000146	1					
ANR	9000313	Callee	r_has_type		9000146	0					
ANR	9000314	Identifier	r_has_type		9000146	0					
ANR	9000315	ArgumentList	& lookup		9000146	1					
ANR	9000316	Argument	& lookup		9000146	0					
ANR	9000317	UnaryOperationExpression	& lookup		9000146	0					
ANR	9000318	UnaryOperator	&		9000146	0					
ANR	9000319	Identifier	lookup		9000146	1					
ANR	9000320	Argument	t_string		9000146	1					
ANR	9000321	Identifier	t_string		9000146	0					
ANR	9000322	ExpressionStatement	check_proc ( lookup )	4505:8:143386:143404	9000146	1	True				
ANR	9000323	CallExpression	check_proc ( lookup )		9000146	0					
ANR	9000324	Callee	check_proc		9000146	0					
ANR	9000325	Identifier	check_proc		9000146	0					
ANR	9000326	ArgumentList	lookup		9000146	1					
ANR	9000327	Argument	lookup		9000146	0					
ANR	9000328	Identifier	lookup		9000146	0					
ANR	9000329	ExpressionStatement	"code = array_get ( imemory , r , 1 , & altspace )"	4508:4:143457:143499	9000146	12	True				
ANR	9000330	AssignmentExpression	"code = array_get ( imemory , r , 1 , & altspace )"		9000146	0		=			
ANR	9000331	Identifier	code		9000146	0					
ANR	9000332	CallExpression	"array_get ( imemory , r , 1 , & altspace )"		9000146	1					
ANR	9000333	Callee	array_get		9000146	0					
ANR	9000334	Identifier	array_get		9000146	0					
ANR	9000335	ArgumentList	imemory		9000146	1					
ANR	9000336	Argument	imemory		9000146	0					
ANR	9000337	Identifier	imemory		9000146	0					
ANR	9000338	Argument	r		9000146	1					
ANR	9000339	Identifier	r		9000146	0					
ANR	9000340	Argument	1		9000146	2					
ANR	9000341	PrimaryExpression	1		9000146	0					
ANR	9000342	Argument	& altspace		9000146	3					
ANR	9000343	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000344	UnaryOperator	&		9000146	0					
ANR	9000345	Identifier	altspace		9000146	1					
ANR	9000346	IfStatement	if ( code < 0 )		9000146	13					
ANR	9000347	Condition	code < 0	4509:8:143509:143516	9000146	0	True				
ANR	9000348	RelationalExpression	code < 0		9000146	0		<			
ANR	9000349	Identifier	code		9000146	0					
ANR	9000350	PrimaryExpression	0		9000146	1					
ANR	9000351	ReturnStatement	return code ;	4510:8:143527:143538	9000146	1	True				
ANR	9000352	Identifier	code		9000146	0					
ANR	9000353	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		9000146	14					
ANR	9000354	Condition	"r_has_type ( & altspace , t_name )"	4511:8:143548:143576	9000146	0	True				
ANR	9000355	CallExpression	"r_has_type ( & altspace , t_name )"		9000146	0					
ANR	9000356	Callee	r_has_type		9000146	0					
ANR	9000357	Identifier	r_has_type		9000146	0					
ANR	9000358	ArgumentList	& altspace		9000146	1					
ANR	9000359	Argument	& altspace		9000146	0					
ANR	9000360	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000361	UnaryOperator	&		9000146	0					
ANR	9000362	Identifier	altspace		9000146	1					
ANR	9000363	Argument	t_name		9000146	1					
ANR	9000364	Identifier	t_name		9000146	0					
ANR	9000365	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	4512:8:143587:143618	9000146	1	True				
ANR	9000366	CallExpression	"ref_assign ( & nameref , & altspace )"		9000146	0					
ANR	9000367	Callee	ref_assign		9000146	0					
ANR	9000368	Identifier	ref_assign		9000146	0					
ANR	9000369	ArgumentList	& nameref		9000146	1					
ANR	9000370	Argument	& nameref		9000146	0					
ANR	9000371	UnaryOperationExpression	& nameref		9000146	0					
ANR	9000372	UnaryOperator	&		9000146	0					
ANR	9000373	Identifier	nameref		9000146	1					
ANR	9000374	Argument	& altspace		9000146	1					
ANR	9000375	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000376	UnaryOperator	&		9000146	0					
ANR	9000377	Identifier	altspace		9000146	1					
ANR	9000378	ElseStatement	else		9000146	0					
ANR	9000379	CompoundStatement		34:9:1119:1119	9000146	0					
ANR	9000380	IfStatement	if ( ! r_is_array ( & altspace ) )		9000146	0					
ANR	9000381	Condition	! r_is_array ( & altspace )	4514:12:143643:143664	9000146	0	True				
ANR	9000382	UnaryOperationExpression	! r_is_array ( & altspace )		9000146	0					
ANR	9000383	UnaryOperator	!		9000146	0					
ANR	9000384	CallExpression	r_is_array ( & altspace )		9000146	1					
ANR	9000385	Callee	r_is_array		9000146	0					
ANR	9000386	Identifier	r_is_array		9000146	0					
ANR	9000387	ArgumentList	& altspace		9000146	1					
ANR	9000388	Argument	& altspace		9000146	0					
ANR	9000389	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000390	UnaryOperator	&		9000146	0					
ANR	9000391	Identifier	altspace		9000146	1					
ANR	9000392	ExpressionStatement	return_error ( gs_error_typecheck )	4515:12:143679:143711	9000146	1	True				
ANR	9000393	CallExpression	return_error ( gs_error_typecheck )		9000146	0					
ANR	9000394	Callee	return_error		9000146	0					
ANR	9000395	Identifier	return_error		9000146	0					
ANR	9000396	ArgumentList	gs_error_typecheck		9000146	1					
ANR	9000397	Argument	gs_error_typecheck		9000146	0					
ANR	9000398	Identifier	gs_error_typecheck		9000146	0					
ANR	9000399	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & nameref )"	4516:8:143721:143770	9000146	1	True				
ANR	9000400	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & nameref )"		9000146	0		=			
ANR	9000401	Identifier	code		9000146	0					
ANR	9000402	CallExpression	"array_get ( imemory , & altspace , 0 , & nameref )"		9000146	1					
ANR	9000403	Callee	array_get		9000146	0					
ANR	9000404	Identifier	array_get		9000146	0					
ANR	9000405	ArgumentList	imemory		9000146	1					
ANR	9000406	Argument	imemory		9000146	0					
ANR	9000407	Identifier	imemory		9000146	0					
ANR	9000408	Argument	& altspace		9000146	1					
ANR	9000409	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000410	UnaryOperator	&		9000146	0					
ANR	9000411	Identifier	altspace		9000146	1					
ANR	9000412	Argument	0		9000146	2					
ANR	9000413	PrimaryExpression	0		9000146	0					
ANR	9000414	Argument	& nameref		9000146	3					
ANR	9000415	UnaryOperationExpression	& nameref		9000146	0					
ANR	9000416	UnaryOperator	&		9000146	0					
ANR	9000417	Identifier	nameref		9000146	1					
ANR	9000418	IfStatement	if ( code < 0 )		9000146	2					
ANR	9000419	Condition	code < 0	4517:12:143784:143791	9000146	0	True				
ANR	9000420	RelationalExpression	code < 0		9000146	0		<			
ANR	9000421	Identifier	code		9000146	0					
ANR	9000422	PrimaryExpression	0		9000146	1					
ANR	9000423	ReturnStatement	return code ;	4518:12:143806:143817	9000146	1	True				
ANR	9000424	Identifier	code		9000146	0					
ANR	9000425	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	4521:4:143878:143919	9000146	15	True				
ANR	9000426	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		9000146	0					
ANR	9000427	Callee	name_string_ref		9000146	0					
ANR	9000428	Identifier	name_string_ref		9000146	0					
ANR	9000429	ArgumentList	imemory		9000146	1					
ANR	9000430	Argument	imemory		9000146	0					
ANR	9000431	Identifier	imemory		9000146	0					
ANR	9000432	Argument	& nameref		9000146	1					
ANR	9000433	UnaryOperationExpression	& nameref		9000146	0					
ANR	9000434	UnaryOperator	&		9000146	0					
ANR	9000435	Identifier	nameref		9000146	1					
ANR	9000436	Argument	& sref		9000146	2					
ANR	9000437	UnaryOperationExpression	& sref		9000146	0					
ANR	9000438	UnaryOperator	&		9000146	0					
ANR	9000439	Identifier	sref		9000146	1					
ANR	9000440	IfStatement	if ( r_size ( & sref ) == 7 )		9000146	16					
ANR	9000441	Condition	r_size ( & sref ) == 7	4523:8:143974:143991	9000146	0	True				
ANR	9000442	EqualityExpression	r_size ( & sref ) == 7		9000146	0		==			
ANR	9000443	CallExpression	r_size ( & sref )		9000146	0					
ANR	9000444	Callee	r_size		9000146	0					
ANR	9000445	Identifier	r_size		9000146	0					
ANR	9000446	ArgumentList	& sref		9000146	1					
ANR	9000447	Argument	& sref		9000146	0					
ANR	9000448	UnaryOperationExpression	& sref		9000146	0					
ANR	9000449	UnaryOperator	&		9000146	0					
ANR	9000450	Identifier	sref		9000146	1					
ANR	9000451	PrimaryExpression	7		9000146	1					
ANR	9000452	CompoundStatement		44:28:1484:1484	9000146	1					
ANR	9000453	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		9000146	0					
ANR	9000454	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	4524:12:144008:144071	9000146	0	True				
ANR	9000455	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		9000146	0		==			
ANR	9000456	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		9000146	0					
ANR	9000457	Callee	strncmp		9000146	0					
ANR	9000458	Identifier	strncmp		9000146	0					
ANR	9000459	ArgumentList	( const char * ) sref . value . const_bytes		9000146	1					
ANR	9000460	Argument	( const char * ) sref . value . const_bytes		9000146	0					
ANR	9000461	CastExpression	( const char * ) sref . value . const_bytes		9000146	0					
ANR	9000462	CastTarget	const char *		9000146	0					
ANR	9000463	MemberAccess	sref . value . const_bytes		9000146	1					
ANR	9000464	MemberAccess	sref . value		9000146	0					
ANR	9000465	Identifier	sref		9000146	0					
ANR	9000466	Identifier	value		9000146	1					
ANR	9000467	Identifier	const_bytes		9000146	1					
ANR	9000468	Argument	"""Indexed"""		9000146	1					
ANR	9000469	PrimaryExpression	"""Indexed"""		9000146	0					
ANR	9000470	Argument	7		9000146	2					
ANR	9000471	PrimaryExpression	7		9000146	0					
ANR	9000472	PrimaryExpression	0		9000146	1					
ANR	9000473	ExpressionStatement	return_error ( gs_error_typecheck )	4525:12:144086:144118	9000146	1	True				
ANR	9000474	CallExpression	return_error ( gs_error_typecheck )		9000146	0					
ANR	9000475	Callee	return_error		9000146	0					
ANR	9000476	Identifier	return_error		9000146	0					
ANR	9000477	ArgumentList	gs_error_typecheck		9000146	1					
ANR	9000478	Argument	gs_error_typecheck		9000146	0					
ANR	9000479	Identifier	gs_error_typecheck		9000146	0					
ANR	9000480	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		9000146	1					
ANR	9000481	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	4526:12:144132:144195	9000146	0	True				
ANR	9000482	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		9000146	0		==			
ANR	9000483	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		9000146	0					
ANR	9000484	Callee	strncmp		9000146	0					
ANR	9000485	Identifier	strncmp		9000146	0					
ANR	9000486	ArgumentList	( const char * ) sref . value . const_bytes		9000146	1					
ANR	9000487	Argument	( const char * ) sref . value . const_bytes		9000146	0					
ANR	9000488	CastExpression	( const char * ) sref . value . const_bytes		9000146	0					
ANR	9000489	CastTarget	const char *		9000146	0					
ANR	9000490	MemberAccess	sref . value . const_bytes		9000146	1					
ANR	9000491	MemberAccess	sref . value		9000146	0					
ANR	9000492	Identifier	sref		9000146	0					
ANR	9000493	Identifier	value		9000146	1					
ANR	9000494	Identifier	const_bytes		9000146	1					
ANR	9000495	Argument	"""Pattern"""		9000146	1					
ANR	9000496	PrimaryExpression	"""Pattern"""		9000146	0					
ANR	9000497	Argument	7		9000146	2					
ANR	9000498	PrimaryExpression	7		9000146	0					
ANR	9000499	PrimaryExpression	0		9000146	1					
ANR	9000500	ExpressionStatement	return_error ( gs_error_typecheck )	4527:12:144210:144242	9000146	1	True				
ANR	9000501	CallExpression	return_error ( gs_error_typecheck )		9000146	0					
ANR	9000502	Callee	return_error		9000146	0					
ANR	9000503	Identifier	return_error		9000146	0					
ANR	9000504	ArgumentList	gs_error_typecheck		9000146	1					
ANR	9000505	Argument	gs_error_typecheck		9000146	0					
ANR	9000506	Identifier	gs_error_typecheck		9000146	0					
ANR	9000507	ExpressionStatement	"ref_assign ( * space , & altspace )"	4529:4:144254:144283	9000146	17	True				
ANR	9000508	CallExpression	"ref_assign ( * space , & altspace )"		9000146	0					
ANR	9000509	Callee	ref_assign		9000146	0					
ANR	9000510	Identifier	ref_assign		9000146	0					
ANR	9000511	ArgumentList	* space		9000146	1					
ANR	9000512	Argument	* space		9000146	0					
ANR	9000513	UnaryOperationExpression	* space		9000146	0					
ANR	9000514	UnaryOperator	*		9000146	0					
ANR	9000515	Identifier	space		9000146	1					
ANR	9000516	Argument	& altspace		9000146	1					
ANR	9000517	UnaryOperationExpression	& altspace		9000146	0					
ANR	9000518	UnaryOperator	&		9000146	0					
ANR	9000519	Identifier	altspace		9000146	1					
ANR	9000520	ReturnStatement	return 0 ;	4530:4:144289:144297	9000146	18	True				
ANR	9000521	PrimaryExpression	0		9000146	0					
ANR	9000522	ReturnType	static int		9000146	1					
ANR	9000523	Identifier	validateindexedspace		9000146	2					
ANR	9000524	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		9000146	3					
ANR	9000525	Parameter	i_ctx_t * i_ctx_p	4479:32:142477:142493	9000146	0	True				
ANR	9000526	ParameterType	i_ctx_t *		9000146	0					
ANR	9000527	Identifier	i_ctx_p		9000146	1					
ANR	9000528	Parameter	ref * * space	4479:51:142496:142506	9000146	1	True				
ANR	9000529	ParameterType	ref * *		9000146	0					
ANR	9000530	Identifier	space		9000146	1					
ANR	9000531	CFGEntryNode	ENTRY		9000146		True				
ANR	9000532	CFGExitNode	EXIT		9000146		True				
ANR	9000533	Symbol	code		9000146						
ANR	9000534	Symbol	gs_error_rangecheck		9000146						
ANR	9000535	Symbol	nameref		9000146						
ANR	9000536	Symbol	space		9000146						
ANR	9000537	Symbol	strncmp		9000146						
ANR	9000538	Symbol	gs_error_typecheck		9000146						
ANR	9000539	Symbol	r_has_type		9000146						
ANR	9000540	Symbol	altspace		9000146						
ANR	9000541	Symbol	hival . value . intval		9000146						
ANR	9000542	Symbol	& altspace		9000146						
ANR	9000543	Symbol	t_name		9000146						
ANR	9000544	Symbol	r_size		9000146						
ANR	9000545	Symbol	sref . value . const_bytes		9000146						
ANR	9000546	Symbol	imemory		9000146						
ANR	9000547	Symbol	hival . value		9000146						
ANR	9000548	Symbol	& nameref		9000146						
ANR	9000549	Symbol	lookup		9000146						
ANR	9000550	Symbol	array_get		9000146						
ANR	9000551	Symbol	hival		9000146						
ANR	9000552	Symbol	& sref		9000146						
ANR	9000553	Symbol	t_string		9000146						
ANR	9000554	Symbol	sref . value		9000146						
ANR	9000555	Symbol	r		9000146						
ANR	9000556	Symbol	& hival		9000146						
ANR	9000557	Symbol	t_integer		9000146						
ANR	9000558	Symbol	sref		9000146						
ANR	9000559	Symbol	i_ctx_p		9000146						
ANR	9000560	Symbol	* space		9000146						
ANR	9000561	Symbol	r_is_array		9000146						
ANR	9000562	Symbol	& lookup		9000146						
ANR	9000563	Function	indexedalternatespace	4532:0:144301:144542							
ANR	9000564	FunctionDef	"indexedalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		9000563	0					
ANR	9000565	CompoundStatement		4533:0:144389:144542	9000563	0					
ANR	9000566	IdentifierDeclStatement	ref alt ;	4534:4:144395:144402	9000563	0	True				
ANR	9000567	IdentifierDecl	alt		9000563	0					
ANR	9000568	IdentifierDeclType	ref		9000563	0					
ANR	9000569	Identifier	alt		9000563	1					
ANR	9000570	IdentifierDeclStatement	int code ;	4535:4:144408:144416	9000563	1	True				
ANR	9000571	IdentifierDecl	code		9000563	0					
ANR	9000572	IdentifierDeclType	int		9000563	0					
ANR	9000573	Identifier	code		9000563	1					
ANR	9000574	ExpressionStatement	"code = array_get ( imemory , * r , 1 , & alt )"	4537:4:144423:144461	9000563	2	True				
ANR	9000575	AssignmentExpression	"code = array_get ( imemory , * r , 1 , & alt )"		9000563	0		=			
ANR	9000576	Identifier	code		9000563	0					
ANR	9000577	CallExpression	"array_get ( imemory , * r , 1 , & alt )"		9000563	1					
ANR	9000578	Callee	array_get		9000563	0					
ANR	9000579	Identifier	array_get		9000563	0					
ANR	9000580	ArgumentList	imemory		9000563	1					
ANR	9000581	Argument	imemory		9000563	0					
ANR	9000582	Identifier	imemory		9000563	0					
ANR	9000583	Argument	* r		9000563	1					
ANR	9000584	UnaryOperationExpression	* r		9000563	0					
ANR	9000585	UnaryOperator	*		9000563	0					
ANR	9000586	Identifier	r		9000563	1					
ANR	9000587	Argument	1		9000563	2					
ANR	9000588	PrimaryExpression	1		9000563	0					
ANR	9000589	Argument	& alt		9000563	3					
ANR	9000590	UnaryOperationExpression	& alt		9000563	0					
ANR	9000591	UnaryOperator	&		9000563	0					
ANR	9000592	Identifier	alt		9000563	1					
ANR	9000593	IfStatement	if ( code < 0 )		9000563	3					
ANR	9000594	Condition	code < 0	4538:8:144471:144478	9000563	0	True				
ANR	9000595	RelationalExpression	code < 0		9000563	0		<			
ANR	9000596	Identifier	code		9000563	0					
ANR	9000597	PrimaryExpression	0		9000563	1					
ANR	9000598	ReturnStatement	return code ;	4539:8:144489:144500	9000563	1	True				
ANR	9000599	Identifier	code		9000563	0					
ANR	9000600	ExpressionStatement	"ref_assign ( * r , & alt )"	4540:4:144506:144526	9000563	4	True				
ANR	9000601	CallExpression	"ref_assign ( * r , & alt )"		9000563	0					
ANR	9000602	Callee	ref_assign		9000563	0					
ANR	9000603	Identifier	ref_assign		9000563	0					
ANR	9000604	ArgumentList	* r		9000563	1					
ANR	9000605	Argument	* r		9000563	0					
ANR	9000606	UnaryOperationExpression	* r		9000563	0					
ANR	9000607	UnaryOperator	*		9000563	0					
ANR	9000608	Identifier	r		9000563	1					
ANR	9000609	Argument	& alt		9000563	1					
ANR	9000610	UnaryOperationExpression	& alt		9000563	0					
ANR	9000611	UnaryOperator	&		9000563	0					
ANR	9000612	Identifier	alt		9000563	1					
ANR	9000613	ReturnStatement	return 0 ;	4541:4:144532:144540	9000563	5	True				
ANR	9000614	PrimaryExpression	0		9000563	0					
ANR	9000615	ReturnType	static int		9000563	1					
ANR	9000616	Identifier	indexedalternatespace		9000563	2					
ANR	9000617	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		9000563	3					
ANR	9000618	Parameter	i_ctx_t * i_ctx_p	4532:33:144334:144350	9000563	0	True				
ANR	9000619	ParameterType	i_ctx_t *		9000563	0					
ANR	9000620	Identifier	i_ctx_p		9000563	1					
ANR	9000621	Parameter	ref * space	4532:52:144353:144362	9000563	1	True				
ANR	9000622	ParameterType	ref *		9000563	0					
ANR	9000623	Identifier	space		9000563	1					
ANR	9000624	Parameter	ref * * r	4532:64:144365:144371	9000563	2	True				
ANR	9000625	ParameterType	ref * *		9000563	0					
ANR	9000626	Identifier	r		9000563	1					
ANR	9000627	Parameter	int * CIESubst	4532:73:144374:144386	9000563	3	True				
ANR	9000628	ParameterType	int *		9000563	0					
ANR	9000629	Identifier	CIESubst		9000563	1					
ANR	9000630	CFGEntryNode	ENTRY		9000563		True				
ANR	9000631	CFGExitNode	EXIT		9000563		True				
ANR	9000632	Symbol	r		9000563						
ANR	9000633	Symbol	code		9000563						
ANR	9000634	Symbol	i_ctx_p		9000563						
ANR	9000635	Symbol	array_get		9000563						
ANR	9000636	Symbol	alt		9000563						
ANR	9000637	Symbol	& alt		9000563						
ANR	9000638	Symbol	imemory		9000563						
ANR	9000639	Symbol	* r		9000563						
ANR	9000640	Symbol	space		9000563						
ANR	9000641	Symbol	CIESubst		9000563						
ANR	9000642	Function	indexeddomain	4543:0:144544:144802							
ANR	9000643	FunctionDef	"indexeddomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9000642	0					
ANR	9000644	CompoundStatement		4544:0:144612:144802	9000642	0					
ANR	9000645	IdentifierDeclStatement	ref hival ;	4545:4:144618:144627	9000642	0	True				
ANR	9000646	IdentifierDecl	hival		9000642	0					
ANR	9000647	IdentifierDeclType	ref		9000642	0					
ANR	9000648	Identifier	hival		9000642	1					
ANR	9000649	IdentifierDeclStatement	int code ;	4546:4:144633:144641	9000642	1	True				
ANR	9000650	IdentifierDecl	code		9000642	0					
ANR	9000651	IdentifierDeclType	int		9000642	0					
ANR	9000652	Identifier	code		9000642	1					
ANR	9000653	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4548:4:144648:144691	9000642	2	True				
ANR	9000654	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		9000642	0		=			
ANR	9000655	Identifier	code		9000642	0					
ANR	9000656	CallExpression	"array_get ( imemory , space , 2 , & hival )"		9000642	1					
ANR	9000657	Callee	array_get		9000642	0					
ANR	9000658	Identifier	array_get		9000642	0					
ANR	9000659	ArgumentList	imemory		9000642	1					
ANR	9000660	Argument	imemory		9000642	0					
ANR	9000661	Identifier	imemory		9000642	0					
ANR	9000662	Argument	space		9000642	1					
ANR	9000663	Identifier	space		9000642	0					
ANR	9000664	Argument	2		9000642	2					
ANR	9000665	PrimaryExpression	2		9000642	0					
ANR	9000666	Argument	& hival		9000642	3					
ANR	9000667	UnaryOperationExpression	& hival		9000642	0					
ANR	9000668	UnaryOperator	&		9000642	0					
ANR	9000669	Identifier	hival		9000642	1					
ANR	9000670	IfStatement	if ( code < 0 )		9000642	3					
ANR	9000671	Condition	code < 0	4549:8:144701:144708	9000642	0	True				
ANR	9000672	RelationalExpression	code < 0		9000642	0		<			
ANR	9000673	Identifier	code		9000642	0					
ANR	9000674	PrimaryExpression	0		9000642	1					
ANR	9000675	ReturnStatement	return code ;	4550:8:144719:144730	9000642	1	True				
ANR	9000676	Identifier	code		9000642	0					
ANR	9000677	ExpressionStatement	ptr [ 0 ] = 0	4551:4:144736:144746	9000642	4	True				
ANR	9000678	AssignmentExpression	ptr [ 0 ] = 0		9000642	0		=			
ANR	9000679	ArrayIndexing	ptr [ 0 ]		9000642	0					
ANR	9000680	Identifier	ptr		9000642	0					
ANR	9000681	PrimaryExpression	0		9000642	1					
ANR	9000682	PrimaryExpression	0		9000642	1					
ANR	9000683	ExpressionStatement	ptr [ 1 ] = ( float ) hival . value . intval	4552:4:144752:144786	9000642	5	True				
ANR	9000684	AssignmentExpression	ptr [ 1 ] = ( float ) hival . value . intval		9000642	0		=			
ANR	9000685	ArrayIndexing	ptr [ 1 ]		9000642	0					
ANR	9000686	Identifier	ptr		9000642	0					
ANR	9000687	PrimaryExpression	1		9000642	1					
ANR	9000688	CastExpression	( float ) hival . value . intval		9000642	1					
ANR	9000689	CastTarget	float		9000642	0					
ANR	9000690	MemberAccess	hival . value . intval		9000642	1					
ANR	9000691	MemberAccess	hival . value		9000642	0					
ANR	9000692	Identifier	hival		9000642	0					
ANR	9000693	Identifier	value		9000642	1					
ANR	9000694	Identifier	intval		9000642	1					
ANR	9000695	ReturnStatement	return 0 ;	4553:4:144792:144800	9000642	6	True				
ANR	9000696	PrimaryExpression	0		9000642	0					
ANR	9000697	ReturnType	static int		9000642	1					
ANR	9000698	Identifier	indexeddomain		9000642	2					
ANR	9000699	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9000642	3					
ANR	9000700	Parameter	i_ctx_t * i_ctx_p	4543:25:144569:144585	9000642	0	True				
ANR	9000701	ParameterType	i_ctx_t *		9000642	0					
ANR	9000702	Identifier	i_ctx_p		9000642	1					
ANR	9000703	Parameter	ref * space	4543:44:144588:144597	9000642	1	True				
ANR	9000704	ParameterType	ref *		9000642	0					
ANR	9000705	Identifier	space		9000642	1					
ANR	9000706	Parameter	float * ptr	4543:56:144600:144609	9000642	2	True				
ANR	9000707	ParameterType	float *		9000642	0					
ANR	9000708	Identifier	ptr		9000642	1					
ANR	9000709	CFGEntryNode	ENTRY		9000642		True				
ANR	9000710	CFGExitNode	EXIT		9000642		True				
ANR	9000711	Symbol	code		9000642						
ANR	9000712	Symbol	& hival		9000642						
ANR	9000713	Symbol	hival . value . intval		9000642						
ANR	9000714	Symbol	i_ctx_p		9000642						
ANR	9000715	Symbol	array_get		9000642						
ANR	9000716	Symbol	* ptr		9000642						
ANR	9000717	Symbol	hival		9000642						
ANR	9000718	Symbol	imemory		9000642						
ANR	9000719	Symbol	space		9000642						
ANR	9000720	Symbol	ptr		9000642						
ANR	9000721	Symbol	hival . value		9000642						
ANR	9000722	Function	indexedrange	4555:0:144804:145061							
ANR	9000723	FunctionDef	"indexedrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9000722	0					
ANR	9000724	CompoundStatement		4556:0:144871:145061	9000722	0					
ANR	9000725	IdentifierDeclStatement	ref hival ;	4557:4:144877:144886	9000722	0	True				
ANR	9000726	IdentifierDecl	hival		9000722	0					
ANR	9000727	IdentifierDeclType	ref		9000722	0					
ANR	9000728	Identifier	hival		9000722	1					
ANR	9000729	IdentifierDeclStatement	int code ;	4558:4:144892:144900	9000722	1	True				
ANR	9000730	IdentifierDecl	code		9000722	0					
ANR	9000731	IdentifierDeclType	int		9000722	0					
ANR	9000732	Identifier	code		9000722	1					
ANR	9000733	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4560:4:144907:144950	9000722	2	True				
ANR	9000734	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		9000722	0		=			
ANR	9000735	Identifier	code		9000722	0					
ANR	9000736	CallExpression	"array_get ( imemory , space , 2 , & hival )"		9000722	1					
ANR	9000737	Callee	array_get		9000722	0					
ANR	9000738	Identifier	array_get		9000722	0					
ANR	9000739	ArgumentList	imemory		9000722	1					
ANR	9000740	Argument	imemory		9000722	0					
ANR	9000741	Identifier	imemory		9000722	0					
ANR	9000742	Argument	space		9000722	1					
ANR	9000743	Identifier	space		9000722	0					
ANR	9000744	Argument	2		9000722	2					
ANR	9000745	PrimaryExpression	2		9000722	0					
ANR	9000746	Argument	& hival		9000722	3					
ANR	9000747	UnaryOperationExpression	& hival		9000722	0					
ANR	9000748	UnaryOperator	&		9000722	0					
ANR	9000749	Identifier	hival		9000722	1					
ANR	9000750	IfStatement	if ( code < 0 )		9000722	3					
ANR	9000751	Condition	code < 0	4561:8:144960:144967	9000722	0	True				
ANR	9000752	RelationalExpression	code < 0		9000722	0		<			
ANR	9000753	Identifier	code		9000722	0					
ANR	9000754	PrimaryExpression	0		9000722	1					
ANR	9000755	ReturnStatement	return code ;	4562:8:144978:144989	9000722	1	True				
ANR	9000756	Identifier	code		9000722	0					
ANR	9000757	ExpressionStatement	ptr [ 0 ] = 0	4563:4:144995:145005	9000722	4	True				
ANR	9000758	AssignmentExpression	ptr [ 0 ] = 0		9000722	0		=			
ANR	9000759	ArrayIndexing	ptr [ 0 ]		9000722	0					
ANR	9000760	Identifier	ptr		9000722	0					
ANR	9000761	PrimaryExpression	0		9000722	1					
ANR	9000762	PrimaryExpression	0		9000722	1					
ANR	9000763	ExpressionStatement	ptr [ 1 ] = ( float ) hival . value . intval	4564:4:145011:145045	9000722	5	True				
ANR	9000764	AssignmentExpression	ptr [ 1 ] = ( float ) hival . value . intval		9000722	0		=			
ANR	9000765	ArrayIndexing	ptr [ 1 ]		9000722	0					
ANR	9000766	Identifier	ptr		9000722	0					
ANR	9000767	PrimaryExpression	1		9000722	1					
ANR	9000768	CastExpression	( float ) hival . value . intval		9000722	1					
ANR	9000769	CastTarget	float		9000722	0					
ANR	9000770	MemberAccess	hival . value . intval		9000722	1					
ANR	9000771	MemberAccess	hival . value		9000722	0					
ANR	9000772	Identifier	hival		9000722	0					
ANR	9000773	Identifier	value		9000722	1					
ANR	9000774	Identifier	intval		9000722	1					
ANR	9000775	ReturnStatement	return 0 ;	4565:4:145051:145059	9000722	6	True				
ANR	9000776	PrimaryExpression	0		9000722	0					
ANR	9000777	ReturnType	static int		9000722	1					
ANR	9000778	Identifier	indexedrange		9000722	2					
ANR	9000779	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9000722	3					
ANR	9000780	Parameter	i_ctx_t * i_ctx_p	4555:24:144828:144844	9000722	0	True				
ANR	9000781	ParameterType	i_ctx_t *		9000722	0					
ANR	9000782	Identifier	i_ctx_p		9000722	1					
ANR	9000783	Parameter	ref * space	4555:43:144847:144856	9000722	1	True				
ANR	9000784	ParameterType	ref *		9000722	0					
ANR	9000785	Identifier	space		9000722	1					
ANR	9000786	Parameter	float * ptr	4555:55:144859:144868	9000722	2	True				
ANR	9000787	ParameterType	float *		9000722	0					
ANR	9000788	Identifier	ptr		9000722	1					
ANR	9000789	CFGEntryNode	ENTRY		9000722		True				
ANR	9000790	CFGExitNode	EXIT		9000722		True				
ANR	9000791	Symbol	code		9000722						
ANR	9000792	Symbol	& hival		9000722						
ANR	9000793	Symbol	hival . value . intval		9000722						
ANR	9000794	Symbol	i_ctx_p		9000722						
ANR	9000795	Symbol	array_get		9000722						
ANR	9000796	Symbol	* ptr		9000722						
ANR	9000797	Symbol	hival		9000722						
ANR	9000798	Symbol	imemory		9000722						
ANR	9000799	Symbol	space		9000722						
ANR	9000800	Symbol	ptr		9000722						
ANR	9000801	Symbol	hival . value		9000722						
ANR	9000802	Function	indexedbasecolor	4567:0:145063:147660							
ANR	9000803	FunctionDef	"indexedbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		9000802	0					
ANR	9000804	CompoundStatement		4568:0:145173:147660	9000802	0					
ANR	9000805	IdentifierDeclStatement	int code ;	4569:4:145179:145187	9000802	0	True				
ANR	9000806	IdentifierDecl	code		9000802	0					
ANR	9000807	IdentifierDeclType	int		9000802	0					
ANR	9000808	Identifier	code		9000802	1					
ANR	9000809	IfStatement	if ( * stage == 0 )		9000802	1					
ANR	9000810	Condition	* stage == 0	4571:8:145198:145208	9000802	0	True				
ANR	9000811	EqualityExpression	* stage == 0		9000802	0		==			
ANR	9000812	UnaryOperationExpression	* stage		9000802	0					
ANR	9000813	UnaryOperator	*		9000802	0					
ANR	9000814	Identifier	stage		9000802	1					
ANR	9000815	PrimaryExpression	0		9000802	1					
ANR	9000816	CompoundStatement		8:8:201:220	9000802	1					
ANR	9000817	IdentifierDeclStatement	gs_color_space * pcs ;	4575:8:145375:145394	9000802	0	True				
ANR	9000818	IdentifierDecl	* pcs		9000802	0					
ANR	9000819	IdentifierDeclType	gs_color_space *		9000802	0					
ANR	9000820	Identifier	pcs		9000802	1					
ANR	9000821	ExpressionStatement	pcs = gs_currentcolorspace ( igs )	4576:8:145404:145435	9000802	1	True				
ANR	9000822	AssignmentExpression	pcs = gs_currentcolorspace ( igs )		9000802	0		=			
ANR	9000823	Identifier	pcs		9000802	0					
ANR	9000824	CallExpression	gs_currentcolorspace ( igs )		9000802	1					
ANR	9000825	Callee	gs_currentcolorspace		9000802	0					
ANR	9000826	Identifier	gs_currentcolorspace		9000802	0					
ANR	9000827	ArgumentList	igs		9000802	1					
ANR	9000828	Argument	igs		9000802	0					
ANR	9000829	Identifier	igs		9000802	0					
ANR	9000830	ExpressionStatement	* stage = 1	4579:8:145480:145490	9000802	2	True				
ANR	9000831	AssignmentExpression	* stage = 1		9000802	0		=			
ANR	9000832	UnaryOperationExpression	* stage		9000802	0					
ANR	9000833	UnaryOperator	*		9000802	0					
ANR	9000834	Identifier	stage		9000802	1					
ANR	9000835	PrimaryExpression	1		9000802	1					
ANR	9000836	ExpressionStatement	* cont = 1	4580:8:145500:145509	9000802	3	True				
ANR	9000837	AssignmentExpression	* cont = 1		9000802	0		=			
ANR	9000838	UnaryOperationExpression	* cont		9000802	0					
ANR	9000839	UnaryOperator	*		9000802	0					
ANR	9000840	Identifier	cont		9000802	1					
ANR	9000841	PrimaryExpression	1		9000802	1					
ANR	9000842	IfStatement	if ( pcs -> params . indexed . use_proc )		9000802	4					
ANR	9000843	Condition	pcs -> params . indexed . use_proc	4585:12:145631:145658	9000802	0	True				
ANR	9000844	MemberAccess	pcs -> params . indexed . use_proc		9000802	0					
ANR	9000845	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9000846	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9000847	Identifier	pcs		9000802	0					
ANR	9000848	Identifier	params		9000802	1					
ANR	9000849	Identifier	indexed		9000802	1					
ANR	9000850	Identifier	use_proc		9000802	1					
ANR	9000851	CompoundStatement		20:12:532:540	9000802	1					
ANR	9000852	IdentifierDeclStatement	es_ptr ep = ++ esp ;	4586:12:145675:145692	9000802	0	True				
ANR	9000853	IdentifierDecl	ep = ++ esp		9000802	0					
ANR	9000854	IdentifierDeclType	es_ptr		9000802	0					
ANR	9000855	Identifier	ep		9000802	1					
ANR	9000856	AssignmentExpression	ep = ++ esp		9000802	2		=			
ANR	9000857	Identifier	ep		9000802	0					
ANR	9000858	UnaryExpression	++ esp		9000802	1					
ANR	9000859	IncDec	++		9000802	0					
ANR	9000860	Identifier	esp		9000802	1					
ANR	9000861	IdentifierDeclStatement	ref proc ;	4587:12:145706:145714	9000802	1	True				
ANR	9000862	IdentifierDecl	proc		9000802	0					
ANR	9000863	IdentifierDeclType	ref		9000802	0					
ANR	9000864	Identifier	proc		9000802	1					
ANR	9000865	ExpressionStatement	check_estack ( 1 )	4592:12:145893:145908	9000802	2	True				
ANR	9000866	CallExpression	check_estack ( 1 )		9000802	0					
ANR	9000867	Callee	check_estack		9000802	0					
ANR	9000868	Identifier	check_estack		9000802	0					
ANR	9000869	ArgumentList	1		9000802	1					
ANR	9000870	Argument	1		9000802	0					
ANR	9000871	PrimaryExpression	1		9000802	0					
ANR	9000872	ExpressionStatement	"code = array_get ( imemory , space , 3 , & proc )"	4593:12:145922:145964	9000802	3	True				
ANR	9000873	AssignmentExpression	"code = array_get ( imemory , space , 3 , & proc )"		9000802	0		=			
ANR	9000874	Identifier	code		9000802	0					
ANR	9000875	CallExpression	"array_get ( imemory , space , 3 , & proc )"		9000802	1					
ANR	9000876	Callee	array_get		9000802	0					
ANR	9000877	Identifier	array_get		9000802	0					
ANR	9000878	ArgumentList	imemory		9000802	1					
ANR	9000879	Argument	imemory		9000802	0					
ANR	9000880	Identifier	imemory		9000802	0					
ANR	9000881	Argument	space		9000802	1					
ANR	9000882	Identifier	space		9000802	0					
ANR	9000883	Argument	3		9000802	2					
ANR	9000884	PrimaryExpression	3		9000802	0					
ANR	9000885	Argument	& proc		9000802	3					
ANR	9000886	UnaryOperationExpression	& proc		9000802	0					
ANR	9000887	UnaryOperator	&		9000802	0					
ANR	9000888	Identifier	proc		9000802	1					
ANR	9000889	IfStatement	if ( code < 0 )		9000802	4					
ANR	9000890	Condition	code < 0	4594:16:145982:145989	9000802	0	True				
ANR	9000891	RelationalExpression	code < 0		9000802	0		<			
ANR	9000892	Identifier	code		9000802	0					
ANR	9000893	PrimaryExpression	0		9000802	1					
ANR	9000894	ReturnStatement	return code ;	4595:16:146008:146019	9000802	1	True				
ANR	9000895	Identifier	code		9000802	0					
ANR	9000896	ExpressionStatement	* ep = proc	4596:12:146033:146043	9000802	5	True				
ANR	9000897	AssignmentExpression	* ep = proc		9000802	0		=			
ANR	9000898	UnaryOperationExpression	* ep		9000802	0					
ANR	9000899	UnaryOperator	*		9000802	0					
ANR	9000900	Identifier	ep		9000802	1					
ANR	9000901	Identifier	proc		9000802	1					
ANR	9000902	ReturnStatement	return o_push_estack ;	4597:12:146075:146095	9000802	6	True				
ANR	9000903	Identifier	o_push_estack		9000802	0					
ANR	9000904	ElseStatement	else		9000802	0					
ANR	9000905	CompoundStatement		34:12:1007:1082	9000802	0					
ANR	9000906	IdentifierDeclStatement	"int i , index ;"	4599:12:146126:146138	9000802	0	True				
ANR	9000907	IdentifierDecl	i		9000802	0					
ANR	9000908	IdentifierDeclType	int		9000802	0					
ANR	9000909	Identifier	i		9000802	1					
ANR	9000910	IdentifierDecl	index		9000802	1					
ANR	9000911	IdentifierDeclType	int		9000802	0					
ANR	9000912	Identifier	index		9000802	1					
ANR	9000913	IdentifierDeclStatement	os_ptr op = osp ;	4600:12:146152:146167	9000802	1	True				
ANR	9000914	IdentifierDecl	op = osp		9000802	0					
ANR	9000915	IdentifierDeclType	os_ptr		9000802	0					
ANR	9000916	Identifier	op		9000802	1					
ANR	9000917	AssignmentExpression	op = osp		9000802	2		=			
ANR	9000918	Identifier	osp		9000802	0					
ANR	9000919	Identifier	osp		9000802	1					
ANR	9000920	IdentifierDeclStatement	unsigned char * ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data ;	4601:12:146181:146256	9000802	2	True				
ANR	9000921	IdentifierDecl	* ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data		9000802	0					
ANR	9000922	IdentifierDeclType	unsigned char *		9000802	0					
ANR	9000923	Identifier	ptr		9000802	1					
ANR	9000924	AssignmentExpression	* ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data		9000802	2		=			
ANR	9000925	Identifier	ptr		9000802	0					
ANR	9000926	CastExpression	( unsigned char * ) pcs -> params . indexed . lookup . table . data		9000802	1					
ANR	9000927	CastTarget	unsigned char *		9000802	0					
ANR	9000928	MemberAccess	pcs -> params . indexed . lookup . table . data		9000802	1					
ANR	9000929	MemberAccess	pcs -> params . indexed . lookup . table		9000802	0					
ANR	9000930	MemberAccess	pcs -> params . indexed . lookup		9000802	0					
ANR	9000931	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9000932	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9000933	Identifier	pcs		9000802	0					
ANR	9000934	Identifier	params		9000802	1					
ANR	9000935	Identifier	indexed		9000802	1					
ANR	9000936	Identifier	lookup		9000802	1					
ANR	9000937	Identifier	table		9000802	1					
ANR	9000938	Identifier	data		9000802	1					
ANR	9000939	ExpressionStatement	* stage = 0	4603:12:146271:146281	9000802	3	True				
ANR	9000940	AssignmentExpression	* stage = 0		9000802	0		=			
ANR	9000941	UnaryOperationExpression	* stage		9000802	0					
ANR	9000942	UnaryOperator	*		9000802	0					
ANR	9000943	Identifier	stage		9000802	1					
ANR	9000944	PrimaryExpression	0		9000802	1					
ANR	9000945	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		9000802	4					
ANR	9000946	Condition	"! r_has_type ( op , t_integer )"	4606:16:146427:146452	9000802	0	True				
ANR	9000947	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		9000802	0					
ANR	9000948	UnaryOperator	!		9000802	0					
ANR	9000949	CallExpression	"r_has_type ( op , t_integer )"		9000802	1					
ANR	9000950	Callee	r_has_type		9000802	0					
ANR	9000951	Identifier	r_has_type		9000802	0					
ANR	9000952	ArgumentList	op		9000802	1					
ANR	9000953	Argument	op		9000802	0					
ANR	9000954	Identifier	op		9000802	0					
ANR	9000955	Argument	t_integer		9000802	1					
ANR	9000956	Identifier	t_integer		9000802	0					
ANR	9000957	ExpressionStatement	return_error ( gs_error_typecheck )	4607:16:146471:146504	9000802	1	True				
ANR	9000958	CallExpression	return_error ( gs_error_typecheck )		9000802	0					
ANR	9000959	Callee	return_error		9000802	0					
ANR	9000960	Identifier	return_error		9000802	0					
ANR	9000961	ArgumentList	gs_error_typecheck		9000802	1					
ANR	9000962	Argument	gs_error_typecheck		9000802	0					
ANR	9000963	Identifier	gs_error_typecheck		9000802	0					
ANR	9000964	ExpressionStatement	index = op -> value . intval	4608:12:146518:146542	9000802	5	True				
ANR	9000965	AssignmentExpression	index = op -> value . intval		9000802	0		=			
ANR	9000966	Identifier	index		9000802	0					
ANR	9000967	MemberAccess	op -> value . intval		9000802	1					
ANR	9000968	PtrMemberAccess	op -> value		9000802	0					
ANR	9000969	Identifier	op		9000802	0					
ANR	9000970	Identifier	value		9000802	1					
ANR	9000971	Identifier	intval		9000802	1					
ANR	9000972	ExpressionStatement	pop ( 1 )	4610:12:146604:146610	9000802	6	True				
ANR	9000973	CallExpression	pop ( 1 )		9000802	0					
ANR	9000974	Callee	pop		9000802	0					
ANR	9000975	Identifier	pop		9000802	0					
ANR	9000976	ArgumentList	1		9000802	1					
ANR	9000977	Argument	1		9000802	0					
ANR	9000978	PrimaryExpression	1		9000802	0					
ANR	9000979	ExpressionStatement	op = osp	4611:12:146624:146632	9000802	7	True				
ANR	9000980	AssignmentExpression	op = osp		9000802	0		=			
ANR	9000981	Identifier	op		9000802	0					
ANR	9000982	Identifier	osp		9000802	1					
ANR	9000983	ExpressionStatement	push ( pcs -> params . indexed . n_comps )	4616:12:146800:146833	9000802	8	True				
ANR	9000984	CallExpression	push ( pcs -> params . indexed . n_comps )		9000802	0					
ANR	9000985	Callee	push		9000802	0					
ANR	9000986	Identifier	push		9000802	0					
ANR	9000987	ArgumentList	pcs -> params . indexed . n_comps		9000802	1					
ANR	9000988	Argument	pcs -> params . indexed . n_comps		9000802	0					
ANR	9000989	MemberAccess	pcs -> params . indexed . n_comps		9000802	0					
ANR	9000990	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9000991	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9000992	Identifier	pcs		9000802	0					
ANR	9000993	Identifier	params		9000802	1					
ANR	9000994	Identifier	indexed		9000802	1					
ANR	9000995	Identifier	n_comps		9000802	1					
ANR	9000996	ExpressionStatement	op -= pcs -> params . indexed . n_comps - 1	4617:12:146847:146884	9000802	9	True				
ANR	9000997	AssignmentExpression	op -= pcs -> params . indexed . n_comps - 1		9000802	0		-=			
ANR	9000998	Identifier	op		9000802	0					
ANR	9000999	AdditiveExpression	pcs -> params . indexed . n_comps - 1		9000802	1		-			
ANR	9001000	MemberAccess	pcs -> params . indexed . n_comps		9000802	0					
ANR	9001001	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9001002	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9001003	Identifier	pcs		9000802	0					
ANR	9001004	Identifier	params		9000802	1					
ANR	9001005	Identifier	indexed		9000802	1					
ANR	9001006	Identifier	n_comps		9000802	1					
ANR	9001007	PrimaryExpression	1		9000802	1					
ANR	9001008	ExpressionStatement	ptr += index * pcs -> params . indexed . n_comps	4622:12:147069:147111	9000802	10	True				
ANR	9001009	AssignmentExpression	ptr += index * pcs -> params . indexed . n_comps		9000802	0		+=			
ANR	9001010	Identifier	ptr		9000802	0					
ANR	9001011	MultiplicativeExpression	index * pcs -> params . indexed . n_comps		9000802	1		*			
ANR	9001012	Identifier	index		9000802	0					
ANR	9001013	MemberAccess	pcs -> params . indexed . n_comps		9000802	1					
ANR	9001014	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9001015	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9001016	Identifier	pcs		9000802	0					
ANR	9001017	Identifier	params		9000802	1					
ANR	9001018	Identifier	indexed		9000802	1					
ANR	9001019	Identifier	n_comps		9000802	1					
ANR	9001020	ForStatement	"for ( i = 0 ; i < pcs -> params . indexed . n_comps ; i ++ , op ++ )"		9000802	11					
ANR	9001021	ForInit	i = 0 ;	4629:17:147401:147406	9000802	0	True				
ANR	9001022	AssignmentExpression	i = 0		9000802	0		=			
ANR	9001023	Identifier	i		9000802	0					
ANR	9001024	PrimaryExpression	0		9000802	1					
ANR	9001025	Condition	i < pcs -> params . indexed . n_comps	4629:24:147408:147438	9000802	1	True				
ANR	9001026	RelationalExpression	i < pcs -> params . indexed . n_comps		9000802	0		<			
ANR	9001027	Identifier	i		9000802	0					
ANR	9001028	MemberAccess	pcs -> params . indexed . n_comps		9000802	1					
ANR	9001029	MemberAccess	pcs -> params . indexed		9000802	0					
ANR	9001030	PtrMemberAccess	pcs -> params		9000802	0					
ANR	9001031	Identifier	pcs		9000802	0					
ANR	9001032	Identifier	params		9000802	1					
ANR	9001033	Identifier	indexed		9000802	1					
ANR	9001034	Identifier	n_comps		9000802	1					
ANR	9001035	Expression	"i ++ , op ++"	4629:57:147441:147449	9000802	2	True				
ANR	9001036	PostIncDecOperationExpression	i ++		9000802	0					
ANR	9001037	Identifier	i		9000802	0					
ANR	9001038	IncDec	++		9000802	1					
ANR	9001039	PostIncDecOperationExpression	op ++		9000802	1					
ANR	9001040	Identifier	op		9000802	0					
ANR	9001041	IncDec	++		9000802	1					
ANR	9001042	CompoundStatement		63:16:2296:2325	9000802	3					
ANR	9001043	IdentifierDeclStatement	float rval = ( * ptr ++ ) / 255.0 ;	4630:16:147470:147499	9000802	0	True				
ANR	9001044	IdentifierDecl	rval = ( * ptr ++ ) / 255.0		9000802	0					
ANR	9001045	IdentifierDeclType	float		9000802	0					
ANR	9001046	Identifier	rval		9000802	1					
ANR	9001047	AssignmentExpression	rval = ( * ptr ++ ) / 255.0		9000802	2		=			
ANR	9001048	Identifier	rval		9000802	0					
ANR	9001049	MultiplicativeExpression	( * ptr ++ ) / 255.0		9000802	1		/			
ANR	9001050	UnaryOperationExpression	* ptr ++		9000802	0					
ANR	9001051	UnaryOperator	*		9000802	0					
ANR	9001052	PostIncDecOperationExpression	ptr ++		9000802	1					
ANR	9001053	Identifier	ptr		9000802	0					
ANR	9001054	IncDec	++		9000802	1					
ANR	9001055	PrimaryExpression	255.0		9000802	1					
ANR	9001056	ExpressionStatement	"make_real ( op , rval )"	4631:16:147517:147536	9000802	1	True				
ANR	9001057	CallExpression	"make_real ( op , rval )"		9000802	0					
ANR	9001058	Callee	make_real		9000802	0					
ANR	9001059	Identifier	make_real		9000802	0					
ANR	9001060	ArgumentList	op		9000802	1					
ANR	9001061	Argument	op		9000802	0					
ANR	9001062	Identifier	op		9000802	0					
ANR	9001063	Argument	rval		9000802	1					
ANR	9001064	Identifier	rval		9000802	0					
ANR	9001065	ReturnStatement	return 0 ;	4633:12:147564:147572	9000802	12	True				
ANR	9001066	PrimaryExpression	0		9000802	0					
ANR	9001067	ElseStatement	else		9000802	0					
ANR	9001068	CompoundStatement		68:11:2421:2421	9000802	0					
ANR	9001069	ExpressionStatement	* stage = 0	4636:8:147605:147615	9000802	0	True				
ANR	9001070	AssignmentExpression	* stage = 0		9000802	0		=			
ANR	9001071	UnaryOperationExpression	* stage		9000802	0					
ANR	9001072	UnaryOperator	*		9000802	0					
ANR	9001073	Identifier	stage		9000802	1					
ANR	9001074	PrimaryExpression	0		9000802	1					
ANR	9001075	ExpressionStatement	* cont = 1	4637:8:147625:147634	9000802	1	True				
ANR	9001076	AssignmentExpression	* cont = 1		9000802	0		=			
ANR	9001077	UnaryOperationExpression	* cont		9000802	0					
ANR	9001078	UnaryOperator	*		9000802	0					
ANR	9001079	Identifier	cont		9000802	1					
ANR	9001080	PrimaryExpression	1		9000802	1					
ANR	9001081	ReturnStatement	return 0 ;	4638:8:147644:147652	9000802	2	True				
ANR	9001082	PrimaryExpression	0		9000802	0					
ANR	9001083	ReturnType	static int		9000802	1					
ANR	9001084	Identifier	indexedbasecolor		9000802	2					
ANR	9001085	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		9000802	3					
ANR	9001086	Parameter	i_ctx_t * i_ctx_p	4567:28:145091:145107	9000802	0	True				
ANR	9001087	ParameterType	i_ctx_t *		9000802	0					
ANR	9001088	Identifier	i_ctx_p		9000802	1					
ANR	9001089	Parameter	ref * space	4567:47:145110:145119	9000802	1	True				
ANR	9001090	ParameterType	ref *		9000802	0					
ANR	9001091	Identifier	space		9000802	1					
ANR	9001092	Parameter	int base	4567:59:145122:145129	9000802	2	True				
ANR	9001093	ParameterType	int		9000802	0					
ANR	9001094	Identifier	base		9000802	1					
ANR	9001095	Parameter	int * stage	4567:69:145132:145141	9000802	3	True				
ANR	9001096	ParameterType	int *		9000802	0					
ANR	9001097	Identifier	stage		9000802	1					
ANR	9001098	Parameter	int * cont	4567:81:145144:145152	9000802	4	True				
ANR	9001099	ParameterType	int *		9000802	0					
ANR	9001100	Identifier	cont		9000802	1					
ANR	9001101	Parameter	int * stack_depth	4567:92:145155:145170	9000802	5	True				
ANR	9001102	ParameterType	int *		9000802	0					
ANR	9001103	Identifier	stack_depth		9000802	1					
ANR	9001104	CFGEntryNode	ENTRY		9000802		True				
ANR	9001105	CFGExitNode	EXIT		9000802		True				
ANR	9001106	Symbol	stack_depth		9000802						
ANR	9001107	Symbol	code		9000802						
ANR	9001108	Symbol	esp		9000802						
ANR	9001109	Symbol	pcs -> params . indexed . use_proc		9000802						
ANR	9001110	Symbol	* op		9000802						
ANR	9001111	Symbol	pcs -> params . indexed . n_comps		9000802						
ANR	9001112	Symbol	* pcs		9000802						
ANR	9001113	Symbol	osp		9000802						
ANR	9001114	Symbol	space		9000802						
ANR	9001115	Symbol	r_has_type		9000802						
ANR	9001116	Symbol	gs_error_typecheck		9000802						
ANR	9001117	Symbol	igs		9000802						
ANR	9001118	Symbol	gs_currentcolorspace		9000802						
ANR	9001119	Symbol	pcs -> params . indexed . lookup		9000802						
ANR	9001120	Symbol	op -> value		9000802						
ANR	9001121	Symbol	rval		9000802						
ANR	9001122	Symbol	imemory		9000802						
ANR	9001123	Symbol	cont		9000802						
ANR	9001124	Symbol	& proc		9000802						
ANR	9001125	Symbol	o_push_estack		9000802						
ANR	9001126	Symbol	pcs		9000802						
ANR	9001127	Symbol	op		9000802						
ANR	9001128	Symbol	proc		9000802						
ANR	9001129	Symbol	* stage		9000802						
ANR	9001130	Symbol	pcs -> params . indexed		9000802						
ANR	9001131	Symbol	pcs -> params . indexed . lookup . table		9000802						
ANR	9001132	Symbol	array_get		9000802						
ANR	9001133	Symbol	* ptr ++		9000802						
ANR	9001134	Symbol	pcs -> params		9000802						
ANR	9001135	Symbol	index		9000802						
ANR	9001136	Symbol	i		9000802						
ANR	9001137	Symbol	pcs -> params . indexed . lookup . table . data		9000802						
ANR	9001138	Symbol	ep		9000802						
ANR	9001139	Symbol	ptr		9000802						
ANR	9001140	Symbol	* ep		9000802						
ANR	9001141	Symbol	stage		9000802						
ANR	9001142	Symbol	t_integer		9000802						
ANR	9001143	Symbol	* cont		9000802						
ANR	9001144	Symbol	i_ctx_p		9000802						
ANR	9001145	Symbol	op -> value . intval		9000802						
ANR	9001146	Symbol	base		9000802						
ANR	9001147	Function	indexedvalidate	4641:0:147662:149003							
ANR	9001148	FunctionDef	"indexedvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		9001147	0					
ANR	9001149	CompoundStatement		4642:0:147749:149003	9001147	0					
ANR	9001150	IdentifierDeclStatement	"int code , integer ;"	4643:4:147755:147772	9001147	0	True				
ANR	9001151	IdentifierDecl	code		9001147	0					
ANR	9001152	IdentifierDeclType	int		9001147	0					
ANR	9001153	Identifier	code		9001147	1					
ANR	9001154	IdentifierDecl	integer		9001147	1					
ANR	9001155	IdentifierDeclType	int		9001147	0					
ANR	9001156	Identifier	integer		9001147	1					
ANR	9001157	IdentifierDeclStatement	float fraction ;	4644:4:147778:147792	9001147	1	True				
ANR	9001158	IdentifierDecl	fraction		9001147	0					
ANR	9001159	IdentifierDeclType	float		9001147	0					
ANR	9001160	Identifier	fraction		9001147	1					
ANR	9001161	IdentifierDeclStatement	ref hival ;	4645:4:147798:147807	9001147	2	True				
ANR	9001162	IdentifierDecl	hival		9001147	0					
ANR	9001163	IdentifierDeclType	ref		9001147	0					
ANR	9001164	Identifier	hival		9001147	1					
ANR	9001165	IdentifierDeclStatement	os_ptr op = osp ;	4646:4:147813:147828	9001147	3	True				
ANR	9001166	IdentifierDecl	op = osp		9001147	0					
ANR	9001167	IdentifierDeclType	os_ptr		9001147	0					
ANR	9001168	Identifier	op		9001147	1					
ANR	9001169	AssignmentExpression	op = osp		9001147	2		=			
ANR	9001170	Identifier	osp		9001147	0					
ANR	9001171	Identifier	osp		9001147	1					
ANR	9001172	IfStatement	if ( num_comps < 1 )		9001147	4					
ANR	9001173	Condition	num_comps < 1	4648:8:147839:147851	9001147	0	True				
ANR	9001174	RelationalExpression	num_comps < 1		9001147	0		<			
ANR	9001175	Identifier	num_comps		9001147	0					
ANR	9001176	PrimaryExpression	1		9001147	1					
ANR	9001177	ExpressionStatement	return_error ( gs_error_stackunderflow )	4649:8:147862:147899	9001147	1	True				
ANR	9001178	CallExpression	return_error ( gs_error_stackunderflow )		9001147	0					
ANR	9001179	Callee	return_error		9001147	0					
ANR	9001180	Identifier	return_error		9001147	0					
ANR	9001181	ArgumentList	gs_error_stackunderflow		9001147	1					
ANR	9001182	Argument	gs_error_stackunderflow		9001147	0					
ANR	9001183	Identifier	gs_error_stackunderflow		9001147	0					
ANR	9001184	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		9001147	5					
ANR	9001185	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	4651:8:147910:147962	9001147	0	True				
ANR	9001186	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		9001147	0		&&			
ANR	9001187	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		9001147	0					
ANR	9001188	UnaryOperator	!		9001147	0					
ANR	9001189	CallExpression	"r_has_type ( op , t_integer )"		9001147	1					
ANR	9001190	Callee	r_has_type		9001147	0					
ANR	9001191	Identifier	r_has_type		9001147	0					
ANR	9001192	ArgumentList	op		9001147	1					
ANR	9001193	Argument	op		9001147	0					
ANR	9001194	Identifier	op		9001147	0					
ANR	9001195	Argument	t_integer		9001147	1					
ANR	9001196	Identifier	t_integer		9001147	0					
ANR	9001197	UnaryOperationExpression	"! r_has_type ( op , t_real )"		9001147	1					
ANR	9001198	UnaryOperator	!		9001147	0					
ANR	9001199	CallExpression	"r_has_type ( op , t_real )"		9001147	1					
ANR	9001200	Callee	r_has_type		9001147	0					
ANR	9001201	Identifier	r_has_type		9001147	0					
ANR	9001202	ArgumentList	op		9001147	1					
ANR	9001203	Argument	op		9001147	0					
ANR	9001204	Identifier	op		9001147	0					
ANR	9001205	Argument	t_real		9001147	1					
ANR	9001206	Identifier	t_real		9001147	0					
ANR	9001207	ExpressionStatement	return_error ( gs_error_typecheck )	4652:8:147973:148005	9001147	1	True				
ANR	9001208	CallExpression	return_error ( gs_error_typecheck )		9001147	0					
ANR	9001209	Callee	return_error		9001147	0					
ANR	9001210	Identifier	return_error		9001147	0					
ANR	9001211	ArgumentList	gs_error_typecheck		9001147	1					
ANR	9001212	Argument	gs_error_typecheck		9001147	0					
ANR	9001213	Identifier	gs_error_typecheck		9001147	0					
ANR	9001214	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4654:4:148012:148055	9001147	6	True				
ANR	9001215	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		9001147	0		=			
ANR	9001216	Identifier	code		9001147	0					
ANR	9001217	CallExpression	"array_get ( imemory , space , 2 , & hival )"		9001147	1					
ANR	9001218	Callee	array_get		9001147	0					
ANR	9001219	Identifier	array_get		9001147	0					
ANR	9001220	ArgumentList	imemory		9001147	1					
ANR	9001221	Argument	imemory		9001147	0					
ANR	9001222	Identifier	imemory		9001147	0					
ANR	9001223	Argument	space		9001147	1					
ANR	9001224	Identifier	space		9001147	0					
ANR	9001225	Argument	2		9001147	2					
ANR	9001226	PrimaryExpression	2		9001147	0					
ANR	9001227	Argument	& hival		9001147	3					
ANR	9001228	UnaryOperationExpression	& hival		9001147	0					
ANR	9001229	UnaryOperator	&		9001147	0					
ANR	9001230	Identifier	hival		9001147	1					
ANR	9001231	IfStatement	if ( code < 0 )		9001147	7					
ANR	9001232	Condition	code < 0	4655:8:148065:148072	9001147	0	True				
ANR	9001233	RelationalExpression	code < 0		9001147	0		<			
ANR	9001234	Identifier	code		9001147	0					
ANR	9001235	PrimaryExpression	0		9001147	1					
ANR	9001236	ReturnStatement	return code ;	4656:8:148083:148094	9001147	1	True				
ANR	9001237	Identifier	code		9001147	0					
ANR	9001238	IfStatement	if ( * values > hival . value . intval )		9001147	8					
ANR	9001239	Condition	* values > hival . value . intval	4658:8:148105:148132	9001147	0	True				
ANR	9001240	RelationalExpression	* values > hival . value . intval		9001147	0		>			
ANR	9001241	UnaryOperationExpression	* values		9001147	0					
ANR	9001242	UnaryOperator	*		9001147	0					
ANR	9001243	Identifier	values		9001147	1					
ANR	9001244	MemberAccess	hival . value . intval		9001147	1					
ANR	9001245	MemberAccess	hival . value		9001147	0					
ANR	9001246	Identifier	hival		9001147	0					
ANR	9001247	Identifier	value		9001147	1					
ANR	9001248	Identifier	intval		9001147	1					
ANR	9001249	ExpressionStatement	* values = ( float ) hival . value . intval	4659:8:148143:148178	9001147	1	True				
ANR	9001250	AssignmentExpression	* values = ( float ) hival . value . intval		9001147	0		=			
ANR	9001251	UnaryOperationExpression	* values		9001147	0					
ANR	9001252	UnaryOperator	*		9001147	0					
ANR	9001253	Identifier	values		9001147	1					
ANR	9001254	CastExpression	( float ) hival . value . intval		9001147	1					
ANR	9001255	CastTarget	float		9001147	0					
ANR	9001256	MemberAccess	hival . value . intval		9001147	1					
ANR	9001257	MemberAccess	hival . value		9001147	0					
ANR	9001258	Identifier	hival		9001147	0					
ANR	9001259	Identifier	value		9001147	1					
ANR	9001260	Identifier	intval		9001147	1					
ANR	9001261	IfStatement	if ( * values < 0 )		9001147	9					
ANR	9001262	Condition	* values < 0	4661:8:148189:148199	9001147	0	True				
ANR	9001263	RelationalExpression	* values < 0		9001147	0		<			
ANR	9001264	UnaryOperationExpression	* values		9001147	0					
ANR	9001265	UnaryOperator	*		9001147	0					
ANR	9001266	Identifier	values		9001147	1					
ANR	9001267	PrimaryExpression	0		9001147	1					
ANR	9001268	ExpressionStatement	* values = 0	4662:8:148210:148221	9001147	1	True				
ANR	9001269	AssignmentExpression	* values = 0		9001147	0		=			
ANR	9001270	UnaryOperationExpression	* values		9001147	0					
ANR	9001271	UnaryOperator	*		9001147	0					
ANR	9001272	Identifier	values		9001147	1					
ANR	9001273	PrimaryExpression	0		9001147	1					
ANR	9001274	ExpressionStatement	integer = ( int ) floor ( * values )	4673:4:148814:148843	9001147	10	True				
ANR	9001275	AssignmentExpression	integer = ( int ) floor ( * values )		9001147	0		=			
ANR	9001276	Identifier	integer		9001147	0					
ANR	9001277	CastExpression	( int ) floor ( * values )		9001147	1					
ANR	9001278	CastTarget	int		9001147	0					
ANR	9001279	CallExpression	floor ( * values )		9001147	1					
ANR	9001280	Callee	floor		9001147	0					
ANR	9001281	Identifier	floor		9001147	0					
ANR	9001282	ArgumentList	* values		9001147	1					
ANR	9001283	Argument	* values		9001147	0					
ANR	9001284	UnaryOperationExpression	* values		9001147	0					
ANR	9001285	UnaryOperator	*		9001147	0					
ANR	9001286	Identifier	values		9001147	1					
ANR	9001287	ExpressionStatement	fraction = * values - integer	4674:4:148849:148877	9001147	11	True				
ANR	9001288	AssignmentExpression	fraction = * values - integer		9001147	0		=			
ANR	9001289	Identifier	fraction		9001147	0					
ANR	9001290	AdditiveExpression	* values - integer		9001147	1		-			
ANR	9001291	UnaryOperationExpression	* values		9001147	0					
ANR	9001292	UnaryOperator	*		9001147	0					
ANR	9001293	Identifier	values		9001147	1					
ANR	9001294	Identifier	integer		9001147	1					
ANR	9001295	IfStatement	if ( fraction >= 0.5 )		9001147	12					
ANR	9001296	Condition	fraction >= 0.5	4676:8:148888:148902	9001147	0	True				
ANR	9001297	RelationalExpression	fraction >= 0.5		9001147	0		>=			
ANR	9001298	Identifier	fraction		9001147	0					
ANR	9001299	PrimaryExpression	0.5		9001147	1					
ANR	9001300	ExpressionStatement	* values = ( float ) ( integer + 1 )	4677:8:148913:148943	9001147	1	True				
ANR	9001301	AssignmentExpression	* values = ( float ) ( integer + 1 )		9001147	0		=			
ANR	9001302	UnaryOperationExpression	* values		9001147	0					
ANR	9001303	UnaryOperator	*		9001147	0					
ANR	9001304	Identifier	values		9001147	1					
ANR	9001305	CastExpression	( float ) ( integer + 1 )		9001147	1					
ANR	9001306	CastTarget	float		9001147	0					
ANR	9001307	AdditiveExpression	integer + 1		9001147	1		+			
ANR	9001308	Identifier	integer		9001147	0					
ANR	9001309	PrimaryExpression	1		9001147	1					
ANR	9001310	ElseStatement	else		9001147	0					
ANR	9001311	ExpressionStatement	* values = ( float ) integer	4679:8:148962:148986	9001147	0	True				
ANR	9001312	AssignmentExpression	* values = ( float ) integer		9001147	0		=			
ANR	9001313	UnaryOperationExpression	* values		9001147	0					
ANR	9001314	UnaryOperator	*		9001147	0					
ANR	9001315	Identifier	values		9001147	1					
ANR	9001316	CastExpression	( float ) integer		9001147	1					
ANR	9001317	CastTarget	float		9001147	0					
ANR	9001318	Identifier	integer		9001147	1					
ANR	9001319	ReturnStatement	return 0 ;	4681:4:148993:149001	9001147	13	True				
ANR	9001320	PrimaryExpression	0		9001147	0					
ANR	9001321	ReturnType	static int		9001147	1					
ANR	9001322	Identifier	indexedvalidate		9001147	2					
ANR	9001323	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		9001147	3					
ANR	9001324	Parameter	i_ctx_t * i_ctx_p	4641:27:147689:147704	9001147	0	True				
ANR	9001325	ParameterType	i_ctx_t *		9001147	0					
ANR	9001326	Identifier	i_ctx_p		9001147	1					
ANR	9001327	Parameter	ref * space	4641:45:147707:147716	9001147	1	True				
ANR	9001328	ParameterType	ref *		9001147	0					
ANR	9001329	Identifier	space		9001147	1					
ANR	9001330	Parameter	float * values	4641:57:147719:147731	9001147	2	True				
ANR	9001331	ParameterType	float *		9001147	0					
ANR	9001332	Identifier	values		9001147	1					
ANR	9001333	Parameter	int num_comps	4641:72:147734:147746	9001147	3	True				
ANR	9001334	ParameterType	int		9001147	0					
ANR	9001335	Identifier	num_comps		9001147	1					
ANR	9001336	CFGEntryNode	ENTRY		9001147		True				
ANR	9001337	CFGExitNode	EXIT		9001147		True				
ANR	9001338	Symbol	op		9001147						
ANR	9001339	Symbol	code		9001147						
ANR	9001340	Symbol	array_get		9001147						
ANR	9001341	Symbol	* values		9001147						
ANR	9001342	Symbol	values		9001147						
ANR	9001343	Symbol	integer		9001147						
ANR	9001344	Symbol	hival		9001147						
ANR	9001345	Symbol	t_real		9001147						
ANR	9001346	Symbol	osp		9001147						
ANR	9001347	Symbol	space		9001147						
ANR	9001348	Symbol	fraction		9001147						
ANR	9001349	Symbol	r_has_type		9001147						
ANR	9001350	Symbol	gs_error_typecheck		9001147						
ANR	9001351	Symbol	t_integer		9001147						
ANR	9001352	Symbol	& hival		9001147						
ANR	9001353	Symbol	gs_error_stackunderflow		9001147						
ANR	9001354	Symbol	hival . value . intval		9001147						
ANR	9001355	Symbol	i_ctx_p		9001147						
ANR	9001356	Symbol	num_comps		9001147						
ANR	9001357	Symbol	imemory		9001147						
ANR	9001358	Symbol	floor		9001147						
ANR	9001359	Symbol	hival . value		9001147						
ANR	9001360	Function	setpatternspace	4685:0:149020:150454							
ANR	9001361	FunctionDef	"setpatternspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9001360	0					
ANR	9001362	CompoundStatement		4686:0:149111:150454	9001360	0					
ANR	9001363	IdentifierDeclStatement	gs_color_space * pcs ;	4687:4:149117:149136	9001360	0	True				
ANR	9001364	IdentifierDecl	* pcs		9001360	0					
ANR	9001365	IdentifierDeclType	gs_color_space *		9001360	0					
ANR	9001366	Identifier	pcs		9001360	1					
ANR	9001367	IdentifierDeclStatement	gs_color_space * pcs_base ;	4688:4:149142:149166	9001360	1	True				
ANR	9001368	IdentifierDecl	* pcs_base		9001360	0					
ANR	9001369	IdentifierDeclType	gs_color_space *		9001360	0					
ANR	9001370	Identifier	pcs_base		9001360	1					
ANR	9001371	IdentifierDeclStatement	uint edepth = ref_stack_count ( & e_stack ) ;	4689:4:149172:149211	9001360	2	True				
ANR	9001372	IdentifierDecl	edepth = ref_stack_count ( & e_stack )		9001360	0					
ANR	9001373	IdentifierDeclType	uint		9001360	0					
ANR	9001374	Identifier	edepth		9001360	1					
ANR	9001375	AssignmentExpression	edepth = ref_stack_count ( & e_stack )		9001360	2		=			
ANR	9001376	Identifier	edepth		9001360	0					
ANR	9001377	CallExpression	ref_stack_count ( & e_stack )		9001360	1					
ANR	9001378	Callee	ref_stack_count		9001360	0					
ANR	9001379	Identifier	ref_stack_count		9001360	0					
ANR	9001380	ArgumentList	& e_stack		9001360	1					
ANR	9001381	Argument	& e_stack		9001360	0					
ANR	9001382	UnaryOperationExpression	& e_stack		9001360	0					
ANR	9001383	UnaryOperator	&		9001360	0					
ANR	9001384	Identifier	e_stack		9001360	1					
ANR	9001385	IdentifierDeclStatement	int code = 0 ;	4690:4:149217:149229	9001360	3	True				
ANR	9001386	IdentifierDecl	code = 0		9001360	0					
ANR	9001387	IdentifierDeclType	int		9001360	0					
ANR	9001388	Identifier	code		9001360	1					
ANR	9001389	AssignmentExpression	code = 0		9001360	2		=			
ANR	9001390	Identifier	code		9001360	0					
ANR	9001391	PrimaryExpression	0		9001360	1					
ANR	9001392	IfStatement	if ( i_ctx_p -> language_level < 2 )		9001360	4					
ANR	9001393	Condition	i_ctx_p -> language_level < 2	4692:8:149240:149266	9001360	0	True				
ANR	9001394	RelationalExpression	i_ctx_p -> language_level < 2		9001360	0		<			
ANR	9001395	PtrMemberAccess	i_ctx_p -> language_level		9001360	0					
ANR	9001396	Identifier	i_ctx_p		9001360	0					
ANR	9001397	Identifier	language_level		9001360	1					
ANR	9001398	PrimaryExpression	2		9001360	1					
ANR	9001399	ExpressionStatement	return_error ( gs_error_undefined )	4693:8:149277:149309	9001360	1	True				
ANR	9001400	CallExpression	return_error ( gs_error_undefined )		9001360	0					
ANR	9001401	Callee	return_error		9001360	0					
ANR	9001402	Identifier	return_error		9001360	0					
ANR	9001403	ArgumentList	gs_error_undefined		9001360	1					
ANR	9001404	Argument	gs_error_undefined		9001360	0					
ANR	9001405	Identifier	gs_error_undefined		9001360	0					
ANR	9001406	ExpressionStatement	* cont = 0	4695:4:149316:149325	9001360	5	True				
ANR	9001407	AssignmentExpression	* cont = 0		9001360	0		=			
ANR	9001408	UnaryOperationExpression	* cont		9001360	0					
ANR	9001409	UnaryOperator	*		9001360	0					
ANR	9001410	Identifier	cont		9001360	1					
ANR	9001411	PrimaryExpression	0		9001360	1					
ANR	9001412	ExpressionStatement	pcs_base = NULL	4696:4:149331:149346	9001360	6	True				
ANR	9001413	AssignmentExpression	pcs_base = NULL		9001360	0		=			
ANR	9001414	Identifier	pcs_base		9001360	0					
ANR	9001415	Identifier	NULL		9001360	1					
ANR	9001416	IfStatement	if ( r_is_array ( r ) )		9001360	7					
ANR	9001417	Condition	r_is_array ( r )	4697:8:149356:149368	9001360	0	True				
ANR	9001418	CallExpression	r_is_array ( r )		9001360	0					
ANR	9001419	Callee	r_is_array		9001360	0					
ANR	9001420	Identifier	r_is_array		9001360	0					
ANR	9001421	ArgumentList	r		9001360	1					
ANR	9001422	Argument	r		9001360	0					
ANR	9001423	Identifier	r		9001360	0					
ANR	9001424	CompoundStatement		12:23:259:259	9001360	1					
ANR	9001425	ExpressionStatement	check_read ( * r )	4698:8:149381:149395	9001360	0	True				
ANR	9001426	CallExpression	check_read ( * r )		9001360	0					
ANR	9001427	Callee	check_read		9001360	0					
ANR	9001428	Identifier	check_read		9001360	0					
ANR	9001429	ArgumentList	* r		9001360	1					
ANR	9001430	Argument	* r		9001360	0					
ANR	9001431	UnaryOperationExpression	* r		9001360	0					
ANR	9001432	UnaryOperator	*		9001360	0					
ANR	9001433	Identifier	r		9001360	1					
ANR	9001434	SwitchStatement	switch ( r_size ( r ) )		9001360	1					
ANR	9001435	Condition	r_size ( r )	4700:16:149414:149422	9001360	0	True				
ANR	9001436	CallExpression	r_size ( r )		9001360	0					
ANR	9001437	Callee	r_size		9001360	0					
ANR	9001438	Identifier	r_size		9001360	0					
ANR	9001439	ArgumentList	r		9001360	1					
ANR	9001440	Argument	r		9001360	0					
ANR	9001441	Identifier	r		9001360	0					
ANR	9001442	CompoundStatement		15:27:313:313	9001360	1					
ANR	9001443	Label	case 1 :	4701:12:149439:149445	9001360	0	True				
ANR	9001444	ExpressionStatement	pcs_base = NULL	4702:16:149484:149499	9001360	1	True				
ANR	9001445	AssignmentExpression	pcs_base = NULL		9001360	0		=			
ANR	9001446	Identifier	pcs_base		9001360	0					
ANR	9001447	Identifier	NULL		9001360	1					
ANR	9001448	BreakStatement	break ;	4703:16:149517:149522	9001360	2	True				
ANR	9001449	Label	default :	4704:12:149536:149543	9001360	3	True				
ANR	9001450	Identifier	default		9001360	0					
ANR	9001451	ExpressionStatement	return_error ( gs_error_rangecheck )	4705:16:149561:149594	9001360	4	True				
ANR	9001452	CallExpression	return_error ( gs_error_rangecheck )		9001360	0					
ANR	9001453	Callee	return_error		9001360	0					
ANR	9001454	Identifier	return_error		9001360	0					
ANR	9001455	ArgumentList	gs_error_rangecheck		9001360	1					
ANR	9001456	Argument	gs_error_rangecheck		9001360	0					
ANR	9001457	Identifier	gs_error_rangecheck		9001360	0					
ANR	9001458	Label	case 2 :	4706:12:149608:149614	9001360	5	True				
ANR	9001459	ExpressionStatement	pcs_base = gs_currentcolorspace ( igs )	4707:16:149632:149668	9001360	6	True				
ANR	9001460	AssignmentExpression	pcs_base = gs_currentcolorspace ( igs )		9001360	0		=			
ANR	9001461	Identifier	pcs_base		9001360	0					
ANR	9001462	CallExpression	gs_currentcolorspace ( igs )		9001360	1					
ANR	9001463	Callee	gs_currentcolorspace		9001360	0					
ANR	9001464	Identifier	gs_currentcolorspace		9001360	0					
ANR	9001465	ArgumentList	igs		9001360	1					
ANR	9001466	Argument	igs		9001360	0					
ANR	9001467	Identifier	igs		9001360	0					
ANR	9001468	IfStatement	if ( cs_num_components ( pcs_base ) < 0 )		9001360	7					
ANR	9001469	Condition	cs_num_components ( pcs_base ) < 0	4708:20:149690:149720	9001360	0	True				
ANR	9001470	RelationalExpression	cs_num_components ( pcs_base ) < 0		9001360	0		<			
ANR	9001471	CallExpression	cs_num_components ( pcs_base )		9001360	0					
ANR	9001472	Callee	cs_num_components		9001360	0					
ANR	9001473	Identifier	cs_num_components		9001360	0					
ANR	9001474	ArgumentList	pcs_base		9001360	1					
ANR	9001475	Argument	pcs_base		9001360	0					
ANR	9001476	Identifier	pcs_base		9001360	0					
ANR	9001477	PrimaryExpression	0		9001360	1					
ANR	9001478	ExpressionStatement	return_error ( gs_error_rangecheck )	4709:20:149775:149808	9001360	1	True				
ANR	9001479	CallExpression	return_error ( gs_error_rangecheck )		9001360	0					
ANR	9001480	Callee	return_error		9001360	0					
ANR	9001481	Identifier	return_error		9001360	0					
ANR	9001482	ArgumentList	gs_error_rangecheck		9001360	1					
ANR	9001483	Argument	gs_error_rangecheck		9001360	0					
ANR	9001484	Identifier	gs_error_rangecheck		9001360	0					
ANR	9001485	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"	4712:4:149830:149890	9001360	8	True				
ANR	9001486	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"		9001360	0		=			
ANR	9001487	Identifier	pcs		9001360	0					
ANR	9001488	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"		9001360	1					
ANR	9001489	Callee	gs_cspace_alloc		9001360	0					
ANR	9001490	Identifier	gs_cspace_alloc		9001360	0					
ANR	9001491	ArgumentList	imemory		9001360	1					
ANR	9001492	Argument	imemory		9001360	0					
ANR	9001493	Identifier	imemory		9001360	0					
ANR	9001494	Argument	& gs_color_space_type_Pattern		9001360	1					
ANR	9001495	UnaryOperationExpression	& gs_color_space_type_Pattern		9001360	0					
ANR	9001496	UnaryOperator	&		9001360	0					
ANR	9001497	Identifier	gs_color_space_type_Pattern		9001360	1					
ANR	9001498	ExpressionStatement	pcs -> base_space = pcs_base	4713:4:149896:149922	9001360	9	True				
ANR	9001499	AssignmentExpression	pcs -> base_space = pcs_base		9001360	0		=			
ANR	9001500	PtrMemberAccess	pcs -> base_space		9001360	0					
ANR	9001501	Identifier	pcs		9001360	0					
ANR	9001502	Identifier	base_space		9001360	1					
ANR	9001503	Identifier	pcs_base		9001360	1					
ANR	9001504	ExpressionStatement	pcs -> params . pattern . has_base_space = ( pcs_base != NULL )	4714:4:149928:149983	9001360	10	True				
ANR	9001505	AssignmentExpression	pcs -> params . pattern . has_base_space = ( pcs_base != NULL )		9001360	0		=			
ANR	9001506	MemberAccess	pcs -> params . pattern . has_base_space		9001360	0					
ANR	9001507	MemberAccess	pcs -> params . pattern		9001360	0					
ANR	9001508	PtrMemberAccess	pcs -> params		9001360	0					
ANR	9001509	Identifier	pcs		9001360	0					
ANR	9001510	Identifier	params		9001360	1					
ANR	9001511	Identifier	pattern		9001360	1					
ANR	9001512	Identifier	has_base_space		9001360	1					
ANR	9001513	EqualityExpression	pcs_base != NULL		9001360	1		!=			
ANR	9001514	Identifier	pcs_base		9001360	0					
ANR	9001515	Identifier	NULL		9001360	1					
ANR	9001516	ExpressionStatement	rc_increment_cs ( pcs_base )	4715:4:149989:150014	9001360	11	True				
ANR	9001517	CallExpression	rc_increment_cs ( pcs_base )		9001360	0					
ANR	9001518	Callee	rc_increment_cs		9001360	0					
ANR	9001519	Identifier	rc_increment_cs		9001360	0					
ANR	9001520	ArgumentList	pcs_base		9001360	1					
ANR	9001521	Argument	pcs_base		9001360	0					
ANR	9001522	Identifier	pcs_base		9001360	0					
ANR	9001523	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4716:4:150020:150053	9001360	12	True				
ANR	9001524	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		9001360	0		=			
ANR	9001525	Identifier	code		9001360	0					
ANR	9001526	CallExpression	"gs_setcolorspace ( igs , pcs )"		9001360	1					
ANR	9001527	Callee	gs_setcolorspace		9001360	0					
ANR	9001528	Identifier	gs_setcolorspace		9001360	0					
ANR	9001529	ArgumentList	igs		9001360	1					
ANR	9001530	Argument	igs		9001360	0					
ANR	9001531	Identifier	igs		9001360	0					
ANR	9001532	Argument	pcs		9001360	1					
ANR	9001533	Identifier	pcs		9001360	0					
ANR	9001534	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetpatternspace"" )"	4718:4:150105:150150	9001360	13	True				
ANR	9001535	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetpatternspace"" )"		9001360	0					
ANR	9001536	Callee	rc_decrement_only_cs		9001360	0					
ANR	9001537	Identifier	rc_decrement_only_cs		9001360	0					
ANR	9001538	ArgumentList	pcs		9001360	1					
ANR	9001539	Argument	pcs		9001360	0					
ANR	9001540	Identifier	pcs		9001360	0					
ANR	9001541	Argument	"""zsetpatternspace"""		9001360	1					
ANR	9001542	PrimaryExpression	"""zsetpatternspace"""		9001360	0					
ANR	9001543	IfStatement	if ( code < 0 )		9001360	14					
ANR	9001544	Condition	code < 0	4719:8:150160:150167	9001360	0	True				
ANR	9001545	RelationalExpression	code < 0		9001360	0		<			
ANR	9001546	Identifier	code		9001360	0					
ANR	9001547	PrimaryExpression	0		9001360	1					
ANR	9001548	CompoundStatement		34:18:1058:1058	9001360	1					
ANR	9001549	ExpressionStatement	"ref_stack_pop_to ( & e_stack , edepth )"	4720:8:150180:150214	9001360	0	True				
ANR	9001550	CallExpression	"ref_stack_pop_to ( & e_stack , edepth )"		9001360	0					
ANR	9001551	Callee	ref_stack_pop_to		9001360	0					
ANR	9001552	Identifier	ref_stack_pop_to		9001360	0					
ANR	9001553	ArgumentList	& e_stack		9001360	1					
ANR	9001554	Argument	& e_stack		9001360	0					
ANR	9001555	UnaryOperationExpression	& e_stack		9001360	0					
ANR	9001556	UnaryOperator	&		9001360	0					
ANR	9001557	Identifier	e_stack		9001360	1					
ANR	9001558	Argument	edepth		9001360	1					
ANR	9001559	Identifier	edepth		9001360	0					
ANR	9001560	ReturnStatement	return code ;	4721:8:150224:150235	9001360	1	True				
ANR	9001561	Identifier	code		9001360	0					
ANR	9001562	ExpressionStatement	make_null ( & istate -> pattern [ 0 ] )	4723:4:150247:150277	9001360	15	True				
ANR	9001563	CallExpression	make_null ( & istate -> pattern [ 0 ] )		9001360	0					
ANR	9001564	Callee	make_null		9001360	0					
ANR	9001565	Identifier	make_null		9001360	0					
ANR	9001566	ArgumentList	& istate -> pattern [ 0 ]		9001360	1					
ANR	9001567	Argument	& istate -> pattern [ 0 ]		9001360	0					
ANR	9001568	UnaryOperationExpression	& istate -> pattern [ 0 ]		9001360	0					
ANR	9001569	UnaryOperator	&		9001360	0					
ANR	9001570	ArrayIndexing	istate -> pattern [ 0 ]		9001360	1					
ANR	9001571	PtrMemberAccess	istate -> pattern		9001360	0					
ANR	9001572	Identifier	istate		9001360	0					
ANR	9001573	Identifier	pattern		9001360	1					
ANR	9001574	PrimaryExpression	0		9001360	1					
ANR	9001575	ExpressionStatement	* stage = 0	4724:4:150332:150342	9001360	16	True				
ANR	9001576	AssignmentExpression	* stage = 0		9001360	0		=			
ANR	9001577	UnaryOperationExpression	* stage		9001360	0					
ANR	9001578	UnaryOperator	*		9001360	0					
ANR	9001579	Identifier	stage		9001360	1					
ANR	9001580	PrimaryExpression	0		9001360	1					
ANR	9001581	ReturnStatement	return ( ref_stack_count ( & e_stack ) == edepth ? 0 : o_push_estack ) ;	4725:4:150348:150412	9001360	17	True				
ANR	9001582	ConditionalExpression	ref_stack_count ( & e_stack ) == edepth ? 0 : o_push_estack		9001360	0					
ANR	9001583	Condition	ref_stack_count ( & e_stack ) == edepth		9001360	0					
ANR	9001584	EqualityExpression	ref_stack_count ( & e_stack ) == edepth		9001360	0		==			
ANR	9001585	CallExpression	ref_stack_count ( & e_stack )		9001360	0					
ANR	9001586	Callee	ref_stack_count		9001360	0					
ANR	9001587	Identifier	ref_stack_count		9001360	0					
ANR	9001588	ArgumentList	& e_stack		9001360	1					
ANR	9001589	Argument	& e_stack		9001360	0					
ANR	9001590	UnaryOperationExpression	& e_stack		9001360	0					
ANR	9001591	UnaryOperator	&		9001360	0					
ANR	9001592	Identifier	e_stack		9001360	1					
ANR	9001593	Identifier	edepth		9001360	1					
ANR	9001594	PrimaryExpression	0		9001360	1					
ANR	9001595	Identifier	o_push_estack		9001360	2					
ANR	9001596	ReturnType	static int		9001360	1					
ANR	9001597	Identifier	setpatternspace		9001360	2					
ANR	9001598	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9001360	3					
ANR	9001599	Parameter	i_ctx_t * i_ctx_p	4685:27:149047:149063	9001360	0	True				
ANR	9001600	ParameterType	i_ctx_t *		9001360	0					
ANR	9001601	Identifier	i_ctx_p		9001360	1					
ANR	9001602	Parameter	ref * r	4685:46:149066:149071	9001360	1	True				
ANR	9001603	ParameterType	ref *		9001360	0					
ANR	9001604	Identifier	r		9001360	1					
ANR	9001605	Parameter	int * stage	4685:54:149074:149083	9001360	2	True				
ANR	9001606	ParameterType	int *		9001360	0					
ANR	9001607	Identifier	stage		9001360	1					
ANR	9001608	Parameter	int * cont	4685:66:149086:149094	9001360	3	True				
ANR	9001609	ParameterType	int *		9001360	0					
ANR	9001610	Identifier	cont		9001360	1					
ANR	9001611	Parameter	int CIESubst	4685:77:149097:149108	9001360	4	True				
ANR	9001612	ParameterType	int		9001360	0					
ANR	9001613	Identifier	CIESubst		9001360	1					
ANR	9001614	CFGEntryNode	ENTRY		9001360		True				
ANR	9001615	CFGExitNode	EXIT		9001360		True				
ANR	9001616	Symbol	code		9001360						
ANR	9001617	Symbol	i_ctx_p -> language_level		9001360						
ANR	9001618	Symbol	gs_error_rangecheck		9001360						
ANR	9001619	Symbol	pcs -> params . pattern		9001360						
ANR	9001620	Symbol	gs_error_undefined		9001360						
ANR	9001621	Symbol	* pcs		9001360						
ANR	9001622	Symbol	gs_setcolorspace		9001360						
ANR	9001623	Symbol	* istate		9001360						
ANR	9001624	Symbol	igs		9001360						
ANR	9001625	Symbol	gs_currentcolorspace		9001360						
ANR	9001626	Symbol	r_size		9001360						
ANR	9001627	Symbol	istate -> pattern		9001360						
ANR	9001628	Symbol	* i_ctx_p		9001360						
ANR	9001629	Symbol	imemory		9001360						
ANR	9001630	Symbol	cont		9001360						
ANR	9001631	Symbol	CIESubst		9001360						
ANR	9001632	Symbol	o_push_estack		9001360						
ANR	9001633	Symbol	pcs		9001360						
ANR	9001634	Symbol	pcs_base		9001360						
ANR	9001635	Symbol	NULL		9001360						
ANR	9001636	Symbol	* stage		9001360						
ANR	9001637	Symbol	& gs_color_space_type_Pattern		9001360						
ANR	9001638	Symbol	pcs -> params		9001360						
ANR	9001639	Symbol	r		9001360						
ANR	9001640	Symbol	pcs -> base_space		9001360						
ANR	9001641	Symbol	stage		9001360						
ANR	9001642	Symbol	edepth		9001360						
ANR	9001643	Symbol	pcs -> params . pattern . has_base_space		9001360						
ANR	9001644	Symbol	* cont		9001360						
ANR	9001645	Symbol	i_ctx_p		9001360						
ANR	9001646	Symbol	cs_num_components		9001360						
ANR	9001647	Symbol	ref_stack_count		9001360						
ANR	9001648	Symbol	r_is_array		9001360						
ANR	9001649	Symbol	gs_cspace_alloc		9001360						
ANR	9001650	Symbol	* r		9001360						
ANR	9001651	Symbol	& e_stack		9001360						
ANR	9001652	Symbol	istate		9001360						
ANR	9001653	Function	validatepatternspace	4727:0:150456:151036							
ANR	9001654	FunctionDef	"validatepatternspace (i_ctx_t * i_ctx_p , ref * * r)"		9001653	0					
ANR	9001655	CompoundStatement		4728:0:150516:151036	9001653	0					
ANR	9001656	IdentifierDeclStatement	int code ;	4729:4:150522:150530	9001653	0	True				
ANR	9001657	IdentifierDecl	code		9001653	0					
ANR	9001658	IdentifierDeclType	int		9001653	0					
ANR	9001659	Identifier	code		9001653	1					
ANR	9001660	IdentifierDeclStatement	ref tref ;	4730:4:150536:150544	9001653	1	True				
ANR	9001661	IdentifierDecl	tref		9001653	0					
ANR	9001662	IdentifierDeclType	ref		9001653	0					
ANR	9001663	Identifier	tref		9001653	1					
ANR	9001664	IfStatement	"if ( ! r_has_type ( * r , t_name ) )"		9001653	2					
ANR	9001665	Condition	"! r_has_type ( * r , t_name )"	4733:8:150641:150663	9001653	0	True				
ANR	9001666	UnaryOperationExpression	"! r_has_type ( * r , t_name )"		9001653	0					
ANR	9001667	UnaryOperator	!		9001653	0					
ANR	9001668	CallExpression	"r_has_type ( * r , t_name )"		9001653	1					
ANR	9001669	Callee	r_has_type		9001653	0					
ANR	9001670	Identifier	r_has_type		9001653	0					
ANR	9001671	ArgumentList	* r		9001653	1					
ANR	9001672	Argument	* r		9001653	0					
ANR	9001673	UnaryOperationExpression	* r		9001653	0					
ANR	9001674	UnaryOperator	*		9001653	0					
ANR	9001675	Identifier	r		9001653	1					
ANR	9001676	Argument	t_name		9001653	1					
ANR	9001677	Identifier	t_name		9001653	0					
ANR	9001678	CompoundStatement		6:33:149:149	9001653	1					
ANR	9001679	IfStatement	if ( r_is_array ( * r ) )		9001653	0					
ANR	9001680	Condition	r_is_array ( * r )	4734:12:150680:150693	9001653	0	True				
ANR	9001681	CallExpression	r_is_array ( * r )		9001653	0					
ANR	9001682	Callee	r_is_array		9001653	0					
ANR	9001683	Identifier	r_is_array		9001653	0					
ANR	9001684	ArgumentList	* r		9001653	1					
ANR	9001685	Argument	* r		9001653	0					
ANR	9001686	UnaryOperationExpression	* r		9001653	0					
ANR	9001687	UnaryOperator	*		9001653	0					
ANR	9001688	Identifier	r		9001653	1					
ANR	9001689	CompoundStatement		7:28:179:179	9001653	1					
ANR	9001690	IfStatement	if ( r_size ( * r ) > 1 )		9001653	0					
ANR	9001691	Condition	r_size ( * r ) > 1	4735:16:150714:150727	9001653	0	True				
ANR	9001692	RelationalExpression	r_size ( * r ) > 1		9001653	0		>			
ANR	9001693	CallExpression	r_size ( * r )		9001653	0					
ANR	9001694	Callee	r_size		9001653	0					
ANR	9001695	Identifier	r_size		9001653	0					
ANR	9001696	ArgumentList	* r		9001653	1					
ANR	9001697	Argument	* r		9001653	0					
ANR	9001698	UnaryOperationExpression	* r		9001653	0					
ANR	9001699	UnaryOperator	*		9001653	0					
ANR	9001700	Identifier	r		9001653	1					
ANR	9001701	PrimaryExpression	1		9001653	1					
ANR	9001702	CompoundStatement		8:32:213:213	9001653	1					
ANR	9001703	ExpressionStatement	"code = array_get ( imemory , * r , 1 , & tref )"	4736:16:150748:150787	9001653	0	True				
ANR	9001704	AssignmentExpression	"code = array_get ( imemory , * r , 1 , & tref )"		9001653	0		=			
ANR	9001705	Identifier	code		9001653	0					
ANR	9001706	CallExpression	"array_get ( imemory , * r , 1 , & tref )"		9001653	1					
ANR	9001707	Callee	array_get		9001653	0					
ANR	9001708	Identifier	array_get		9001653	0					
ANR	9001709	ArgumentList	imemory		9001653	1					
ANR	9001710	Argument	imemory		9001653	0					
ANR	9001711	Identifier	imemory		9001653	0					
ANR	9001712	Argument	* r		9001653	1					
ANR	9001713	UnaryOperationExpression	* r		9001653	0					
ANR	9001714	UnaryOperator	*		9001653	0					
ANR	9001715	Identifier	r		9001653	1					
ANR	9001716	Argument	1		9001653	2					
ANR	9001717	PrimaryExpression	1		9001653	0					
ANR	9001718	Argument	& tref		9001653	3					
ANR	9001719	UnaryOperationExpression	& tref		9001653	0					
ANR	9001720	UnaryOperator	&		9001653	0					
ANR	9001721	Identifier	tref		9001653	1					
ANR	9001722	IfStatement	if ( code < 0 )		9001653	1					
ANR	9001723	Condition	code < 0	4737:20:150809:150816	9001653	0	True				
ANR	9001724	RelationalExpression	code < 0		9001653	0		<			
ANR	9001725	Identifier	code		9001653	0					
ANR	9001726	PrimaryExpression	0		9001653	1					
ANR	9001727	ReturnStatement	return code ;	4738:20:150839:150850	9001653	1	True				
ANR	9001728	Identifier	code		9001653	0					
ANR	9001729	ExpressionStatement	"ref_assign ( * r , & tref )"	4739:16:150868:150889	9001653	2	True				
ANR	9001730	CallExpression	"ref_assign ( * r , & tref )"		9001653	0					
ANR	9001731	Callee	ref_assign		9001653	0					
ANR	9001732	Identifier	ref_assign		9001653	0					
ANR	9001733	ArgumentList	* r		9001653	1					
ANR	9001734	Argument	* r		9001653	0					
ANR	9001735	UnaryOperationExpression	* r		9001653	0					
ANR	9001736	UnaryOperator	*		9001653	0					
ANR	9001737	Identifier	r		9001653	1					
ANR	9001738	Argument	& tref		9001653	1					
ANR	9001739	UnaryOperationExpression	& tref		9001653	0					
ANR	9001740	UnaryOperator	&		9001653	0					
ANR	9001741	Identifier	tref		9001653	1					
ANR	9001742	ElseStatement	else		9001653	0					
ANR	9001743	ExpressionStatement	* r = 0	4741:16:150926:150932	9001653	0	True				
ANR	9001744	AssignmentExpression	* r = 0		9001653	0		=			
ANR	9001745	UnaryOperationExpression	* r		9001653	0					
ANR	9001746	UnaryOperator	*		9001653	0					
ANR	9001747	Identifier	r		9001653	1					
ANR	9001748	PrimaryExpression	0		9001653	1					
ANR	9001749	ElseStatement	else		9001653	0					
ANR	9001750	ExpressionStatement	return_error ( gs_error_typecheck )	4743:12:150961:150993	9001653	0	True				
ANR	9001751	CallExpression	return_error ( gs_error_typecheck )		9001653	0					
ANR	9001752	Callee	return_error		9001653	0					
ANR	9001753	Identifier	return_error		9001653	0					
ANR	9001754	ArgumentList	gs_error_typecheck		9001653	1					
ANR	9001755	Argument	gs_error_typecheck		9001653	0					
ANR	9001756	Identifier	gs_error_typecheck		9001653	0					
ANR	9001757	ElseStatement	else		9001653	0					
ANR	9001758	ExpressionStatement	* r = 0	4745:8:151014:151020	9001653	0	True				
ANR	9001759	AssignmentExpression	* r = 0		9001653	0		=			
ANR	9001760	UnaryOperationExpression	* r		9001653	0					
ANR	9001761	UnaryOperator	*		9001653	0					
ANR	9001762	Identifier	r		9001653	1					
ANR	9001763	PrimaryExpression	0		9001653	1					
ANR	9001764	ReturnStatement	return 0 ;	4746:4:151026:151034	9001653	3	True				
ANR	9001765	PrimaryExpression	0		9001653	0					
ANR	9001766	ReturnType	static int		9001653	1					
ANR	9001767	Identifier	validatepatternspace		9001653	2					
ANR	9001768	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		9001653	3					
ANR	9001769	Parameter	i_ctx_t * i_ctx_p	4727:32:150488:150504	9001653	0	True				
ANR	9001770	ParameterType	i_ctx_t *		9001653	0					
ANR	9001771	Identifier	i_ctx_p		9001653	1					
ANR	9001772	Parameter	ref * * r	4727:51:150507:150513	9001653	1	True				
ANR	9001773	ParameterType	ref * *		9001653	0					
ANR	9001774	Identifier	r		9001653	1					
ANR	9001775	CFGEntryNode	ENTRY		9001653		True				
ANR	9001776	CFGExitNode	EXIT		9001653		True				
ANR	9001777	Symbol	code		9001653						
ANR	9001778	Symbol	array_get		9001653						
ANR	9001779	Symbol	& tref		9001653						
ANR	9001780	Symbol	tref		9001653						
ANR	9001781	Symbol	r		9001653						
ANR	9001782	Symbol	r_has_type		9001653						
ANR	9001783	Symbol	gs_error_typecheck		9001653						
ANR	9001784	Symbol	i_ctx_p		9001653						
ANR	9001785	Symbol	t_name		9001653						
ANR	9001786	Symbol	r_size		9001653						
ANR	9001787	Symbol	r_is_array		9001653						
ANR	9001788	Symbol	imemory		9001653						
ANR	9001789	Symbol	* r		9001653						
ANR	9001790	Function	patternalternatespace	4748:0:151038:151563							
ANR	9001791	FunctionDef	"patternalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		9001790	0					
ANR	9001792	CompoundStatement		4749:0:151126:151563	9001790	0					
ANR	9001793	IdentifierDeclStatement	ref tref ;	4750:4:151132:151140	9001790	0	True				
ANR	9001794	IdentifierDecl	tref		9001790	0					
ANR	9001795	IdentifierDeclType	ref		9001790	0					
ANR	9001796	Identifier	tref		9001790	1					
ANR	9001797	IdentifierDeclStatement	int code ;	4751:4:151146:151154	9001790	1	True				
ANR	9001798	IdentifierDecl	code		9001790	0					
ANR	9001799	IdentifierDeclType	int		9001790	0					
ANR	9001800	Identifier	code		9001790	1					
ANR	9001801	IfStatement	"if ( ! r_has_type ( * r , t_name ) )"		9001790	2					
ANR	9001802	Condition	"! r_has_type ( * r , t_name )"	4753:8:151165:151187	9001790	0	True				
ANR	9001803	UnaryOperationExpression	"! r_has_type ( * r , t_name )"		9001790	0					
ANR	9001804	UnaryOperator	!		9001790	0					
ANR	9001805	CallExpression	"r_has_type ( * r , t_name )"		9001790	1					
ANR	9001806	Callee	r_has_type		9001790	0					
ANR	9001807	Identifier	r_has_type		9001790	0					
ANR	9001808	ArgumentList	* r		9001790	1					
ANR	9001809	Argument	* r		9001790	0					
ANR	9001810	UnaryOperationExpression	* r		9001790	0					
ANR	9001811	UnaryOperator	*		9001790	0					
ANR	9001812	Identifier	r		9001790	1					
ANR	9001813	Argument	t_name		9001790	1					
ANR	9001814	Identifier	t_name		9001790	0					
ANR	9001815	CompoundStatement		5:33:63:63	9001790	1					
ANR	9001816	IfStatement	if ( r_is_array ( * r ) )		9001790	0					
ANR	9001817	Condition	r_is_array ( * r )	4754:12:151204:151217	9001790	0	True				
ANR	9001818	CallExpression	r_is_array ( * r )		9001790	0					
ANR	9001819	Callee	r_is_array		9001790	0					
ANR	9001820	Identifier	r_is_array		9001790	0					
ANR	9001821	ArgumentList	* r		9001790	1					
ANR	9001822	Argument	* r		9001790	0					
ANR	9001823	UnaryOperationExpression	* r		9001790	0					
ANR	9001824	UnaryOperator	*		9001790	0					
ANR	9001825	Identifier	r		9001790	1					
ANR	9001826	CompoundStatement		6:28:93:93	9001790	1					
ANR	9001827	IfStatement	if ( r_size ( * r ) > 1 )		9001790	0					
ANR	9001828	Condition	r_size ( * r ) > 1	4755:16:151238:151251	9001790	0	True				
ANR	9001829	RelationalExpression	r_size ( * r ) > 1		9001790	0		>			
ANR	9001830	CallExpression	r_size ( * r )		9001790	0					
ANR	9001831	Callee	r_size		9001790	0					
ANR	9001832	Identifier	r_size		9001790	0					
ANR	9001833	ArgumentList	* r		9001790	1					
ANR	9001834	Argument	* r		9001790	0					
ANR	9001835	UnaryOperationExpression	* r		9001790	0					
ANR	9001836	UnaryOperator	*		9001790	0					
ANR	9001837	Identifier	r		9001790	1					
ANR	9001838	PrimaryExpression	1		9001790	1					
ANR	9001839	CompoundStatement		7:32:127:127	9001790	1					
ANR	9001840	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4756:16:151272:151314	9001790	0	True				
ANR	9001841	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		9001790	0		=			
ANR	9001842	Identifier	code		9001790	0					
ANR	9001843	CallExpression	"array_get ( imemory , space , 1 , & tref )"		9001790	1					
ANR	9001844	Callee	array_get		9001790	0					
ANR	9001845	Identifier	array_get		9001790	0					
ANR	9001846	ArgumentList	imemory		9001790	1					
ANR	9001847	Argument	imemory		9001790	0					
ANR	9001848	Identifier	imemory		9001790	0					
ANR	9001849	Argument	space		9001790	1					
ANR	9001850	Identifier	space		9001790	0					
ANR	9001851	Argument	1		9001790	2					
ANR	9001852	PrimaryExpression	1		9001790	0					
ANR	9001853	Argument	& tref		9001790	3					
ANR	9001854	UnaryOperationExpression	& tref		9001790	0					
ANR	9001855	UnaryOperator	&		9001790	0					
ANR	9001856	Identifier	tref		9001790	1					
ANR	9001857	IfStatement	if ( code < 0 )		9001790	1					
ANR	9001858	Condition	code < 0	4757:20:151336:151343	9001790	0	True				
ANR	9001859	RelationalExpression	code < 0		9001790	0		<			
ANR	9001860	Identifier	code		9001790	0					
ANR	9001861	PrimaryExpression	0		9001790	1					
ANR	9001862	ReturnStatement	return code ;	4758:20:151366:151377	9001790	1	True				
ANR	9001863	Identifier	code		9001790	0					
ANR	9001864	ExpressionStatement	"ref_assign ( * r , & tref )"	4759:16:151395:151416	9001790	2	True				
ANR	9001865	CallExpression	"ref_assign ( * r , & tref )"		9001790	0					
ANR	9001866	Callee	ref_assign		9001790	0					
ANR	9001867	Identifier	ref_assign		9001790	0					
ANR	9001868	ArgumentList	* r		9001790	1					
ANR	9001869	Argument	* r		9001790	0					
ANR	9001870	UnaryOperationExpression	* r		9001790	0					
ANR	9001871	UnaryOperator	*		9001790	0					
ANR	9001872	Identifier	r		9001790	1					
ANR	9001873	Argument	& tref		9001790	1					
ANR	9001874	UnaryOperationExpression	& tref		9001790	0					
ANR	9001875	UnaryOperator	&		9001790	0					
ANR	9001876	Identifier	tref		9001790	1					
ANR	9001877	ElseStatement	else		9001790	0					
ANR	9001878	ExpressionStatement	* r = 0	4761:16:151453:151459	9001790	0	True				
ANR	9001879	AssignmentExpression	* r = 0		9001790	0		=			
ANR	9001880	UnaryOperationExpression	* r		9001790	0					
ANR	9001881	UnaryOperator	*		9001790	0					
ANR	9001882	Identifier	r		9001790	1					
ANR	9001883	PrimaryExpression	0		9001790	1					
ANR	9001884	ElseStatement	else		9001790	0					
ANR	9001885	ExpressionStatement	return_error ( gs_error_typecheck )	4763:12:151488:151520	9001790	0	True				
ANR	9001886	CallExpression	return_error ( gs_error_typecheck )		9001790	0					
ANR	9001887	Callee	return_error		9001790	0					
ANR	9001888	Identifier	return_error		9001790	0					
ANR	9001889	ArgumentList	gs_error_typecheck		9001790	1					
ANR	9001890	Argument	gs_error_typecheck		9001790	0					
ANR	9001891	Identifier	gs_error_typecheck		9001790	0					
ANR	9001892	ElseStatement	else		9001790	0					
ANR	9001893	ExpressionStatement	* r = 0	4765:8:151541:151547	9001790	0	True				
ANR	9001894	AssignmentExpression	* r = 0		9001790	0		=			
ANR	9001895	UnaryOperationExpression	* r		9001790	0					
ANR	9001896	UnaryOperator	*		9001790	0					
ANR	9001897	Identifier	r		9001790	1					
ANR	9001898	PrimaryExpression	0		9001790	1					
ANR	9001899	ReturnStatement	return 0 ;	4766:4:151553:151561	9001790	3	True				
ANR	9001900	PrimaryExpression	0		9001790	0					
ANR	9001901	ReturnType	static int		9001790	1					
ANR	9001902	Identifier	patternalternatespace		9001790	2					
ANR	9001903	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		9001790	3					
ANR	9001904	Parameter	i_ctx_t * i_ctx_p	4748:33:151071:151087	9001790	0	True				
ANR	9001905	ParameterType	i_ctx_t *		9001790	0					
ANR	9001906	Identifier	i_ctx_p		9001790	1					
ANR	9001907	Parameter	ref * space	4748:52:151090:151099	9001790	1	True				
ANR	9001908	ParameterType	ref *		9001790	0					
ANR	9001909	Identifier	space		9001790	1					
ANR	9001910	Parameter	ref * * r	4748:64:151102:151108	9001790	2	True				
ANR	9001911	ParameterType	ref * *		9001790	0					
ANR	9001912	Identifier	r		9001790	1					
ANR	9001913	Parameter	int * CIESubst	4748:73:151111:151123	9001790	3	True				
ANR	9001914	ParameterType	int *		9001790	0					
ANR	9001915	Identifier	CIESubst		9001790	1					
ANR	9001916	CFGEntryNode	ENTRY		9001790		True				
ANR	9001917	CFGExitNode	EXIT		9001790		True				
ANR	9001918	Symbol	code		9001790						
ANR	9001919	Symbol	array_get		9001790						
ANR	9001920	Symbol	& tref		9001790						
ANR	9001921	Symbol	tref		9001790						
ANR	9001922	Symbol	space		9001790						
ANR	9001923	Symbol	r		9001790						
ANR	9001924	Symbol	r_has_type		9001790						
ANR	9001925	Symbol	gs_error_typecheck		9001790						
ANR	9001926	Symbol	i_ctx_p		9001790						
ANR	9001927	Symbol	t_name		9001790						
ANR	9001928	Symbol	r_size		9001790						
ANR	9001929	Symbol	r_is_array		9001790						
ANR	9001930	Symbol	imemory		9001790						
ANR	9001931	Symbol	* r		9001790						
ANR	9001932	Symbol	CIESubst		9001790						
ANR	9001933	Function	patterncomponent	4768:0:151565:152522							
ANR	9001934	FunctionDef	"patterncomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		9001933	0					
ANR	9001935	CompoundStatement		4769:0:151632:152522	9001933	0					
ANR	9001936	IdentifierDeclStatement	os_ptr op = osp ;	4770:4:151638:151653	9001933	0	True				
ANR	9001937	IdentifierDecl	op = osp		9001933	0					
ANR	9001938	IdentifierDeclType	os_ptr		9001933	0					
ANR	9001939	Identifier	op		9001933	1					
ANR	9001940	AssignmentExpression	op = osp		9001933	2		=			
ANR	9001941	Identifier	osp		9001933	0					
ANR	9001942	Identifier	osp		9001933	1					
ANR	9001943	IdentifierDeclStatement	"int n_comps , code ;"	4771:4:151659:151676	9001933	1	True				
ANR	9001944	IdentifierDecl	n_comps		9001933	0					
ANR	9001945	IdentifierDeclType	int		9001933	0					
ANR	9001946	Identifier	n_comps		9001933	1					
ANR	9001947	IdentifierDecl	code		9001933	1					
ANR	9001948	IdentifierDeclType	int		9001933	0					
ANR	9001949	Identifier	code		9001933	1					
ANR	9001950	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	4772:4:151682:151737	9001933	2	True				
ANR	9001951	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		9001933	0					
ANR	9001952	IdentifierDeclType	const gs_color_space *		9001933	0					
ANR	9001953	Identifier	pcs		9001933	1					
ANR	9001954	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		9001933	2		=			
ANR	9001955	Identifier	pcs		9001933	0					
ANR	9001956	CallExpression	gs_currentcolorspace ( igs )		9001933	1					
ANR	9001957	Callee	gs_currentcolorspace		9001933	0					
ANR	9001958	Identifier	gs_currentcolorspace		9001933	0					
ANR	9001959	ArgumentList	igs		9001933	1					
ANR	9001960	Argument	igs		9001933	0					
ANR	9001961	Identifier	igs		9001933	0					
ANR	9001962	IdentifierDeclStatement	gs_client_color cc ;	4773:4:151743:151769	9001933	3	True				
ANR	9001963	IdentifierDecl	cc		9001933	0					
ANR	9001964	IdentifierDeclType	gs_client_color		9001933	0					
ANR	9001965	Identifier	cc		9001933	1					
ANR	9001966	IfStatement	if ( ( n_comps = cs_num_components ( pcs ) ) < 0 )		9001933	4					
ANR	9001967	Condition	( n_comps = cs_num_components ( pcs ) ) < 0	4776:8:151822:151859	9001933	0	True				
ANR	9001968	RelationalExpression	( n_comps = cs_num_components ( pcs ) ) < 0		9001933	0		<			
ANR	9001969	AssignmentExpression	n_comps = cs_num_components ( pcs )		9001933	0		=			
ANR	9001970	Identifier	n_comps		9001933	0					
ANR	9001971	CallExpression	cs_num_components ( pcs )		9001933	1					
ANR	9001972	Callee	cs_num_components		9001933	0					
ANR	9001973	Identifier	cs_num_components		9001933	0					
ANR	9001974	ArgumentList	pcs		9001933	1					
ANR	9001975	Argument	pcs		9001933	0					
ANR	9001976	Identifier	pcs		9001933	0					
ANR	9001977	PrimaryExpression	0		9001933	1					
ANR	9001978	CompoundStatement		8:48:229:229	9001933	1					
ANR	9001979	ExpressionStatement	n_comps = - n_comps	4777:8:151872:151890	9001933	0	True				
ANR	9001980	AssignmentExpression	n_comps = - n_comps		9001933	0		=			
ANR	9001981	Identifier	n_comps		9001933	0					
ANR	9001982	UnaryOperationExpression	- n_comps		9001933	1					
ANR	9001983	UnaryOperator	-		9001933	0					
ANR	9001984	Identifier	n_comps		9001933	1					
ANR	9001985	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		9001933	1					
ANR	9001986	Condition	"r_has_type ( op , t_dictionary )"	4778:12:151904:151931	9001933	0	True				
ANR	9001987	CallExpression	"r_has_type ( op , t_dictionary )"		9001933	0					
ANR	9001988	Callee	r_has_type		9001933	0					
ANR	9001989	Identifier	r_has_type		9001933	0					
ANR	9001990	ArgumentList	op		9001933	1					
ANR	9001991	Argument	op		9001933	0					
ANR	9001992	Identifier	op		9001933	0					
ANR	9001993	Argument	t_dictionary		9001933	1					
ANR	9001994	Identifier	t_dictionary		9001933	0					
ANR	9001995	CompoundStatement		11:12:315:339	9001933	1					
ANR	9001996	IdentifierDeclStatement	"ref * pImpl , pPatInst ;"	4779:12:151948:151972	9001933	0	True				
ANR	9001997	IdentifierDecl	* pImpl		9001933	0					
ANR	9001998	IdentifierDeclType	ref *		9001933	0					
ANR	9001999	Identifier	pImpl		9001933	1					
ANR	9002000	IdentifierDecl	pPatInst		9001933	1					
ANR	9002001	IdentifierDeclType	ref		9001933	0					
ANR	9002002	Identifier	pPatInst		9001933	1					
ANR	9002003	ExpressionStatement	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"	4781:12:151987:152040	9001933	1	True				
ANR	9002004	AssignmentExpression	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"		9001933	0		=			
ANR	9002005	Identifier	code		9001933	0					
ANR	9002006	CallExpression	"dict_find_string ( op , ""Implementation"" , & pImpl )"		9001933	1					
ANR	9002007	Callee	dict_find_string		9001933	0					
ANR	9002008	Identifier	dict_find_string		9001933	0					
ANR	9002009	ArgumentList	op		9001933	1					
ANR	9002010	Argument	op		9001933	0					
ANR	9002011	Identifier	op		9001933	0					
ANR	9002012	Argument	"""Implementation"""		9001933	1					
ANR	9002013	PrimaryExpression	"""Implementation"""		9001933	0					
ANR	9002014	Argument	& pImpl		9001933	2					
ANR	9002015	UnaryOperationExpression	& pImpl		9001933	0					
ANR	9002016	UnaryOperator	&		9001933	0					
ANR	9002017	Identifier	pImpl		9001933	1					
ANR	9002018	IfStatement	if ( code > 0 )		9001933	2					
ANR	9002019	Condition	code > 0	4782:12:152054:152061	9001933	0	True				
ANR	9002020	RelationalExpression	code > 0		9001933	0		>			
ANR	9002021	Identifier	code		9001933	0					
ANR	9002022	PrimaryExpression	0		9001933	1					
ANR	9002023	CompoundStatement		14:22:431:431	9001933	1					
ANR	9002024	ExpressionStatement	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"	4783:12:152078:152124	9001933	0	True				
ANR	9002025	AssignmentExpression	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"		9001933	0		=			
ANR	9002026	Identifier	code		9001933	0					
ANR	9002027	CallExpression	"array_get ( imemory , pImpl , 0 , & pPatInst )"		9001933	1					
ANR	9002028	Callee	array_get		9001933	0					
ANR	9002029	Identifier	array_get		9001933	0					
ANR	9002030	ArgumentList	imemory		9001933	1					
ANR	9002031	Argument	imemory		9001933	0					
ANR	9002032	Identifier	imemory		9001933	0					
ANR	9002033	Argument	pImpl		9001933	1					
ANR	9002034	Identifier	pImpl		9001933	0					
ANR	9002035	Argument	0		9001933	2					
ANR	9002036	PrimaryExpression	0		9001933	0					
ANR	9002037	Argument	& pPatInst		9001933	3					
ANR	9002038	UnaryOperationExpression	& pPatInst		9001933	0					
ANR	9002039	UnaryOperator	&		9001933	0					
ANR	9002040	Identifier	pPatInst		9001933	1					
ANR	9002041	IfStatement	if ( code < 0 )		9001933	1					
ANR	9002042	Condition	code < 0	4784:16:152142:152149	9001933	0	True				
ANR	9002043	RelationalExpression	code < 0		9001933	0		<			
ANR	9002044	Identifier	code		9001933	0					
ANR	9002045	PrimaryExpression	0		9001933	1					
ANR	9002046	ReturnStatement	return code ;	4785:16:152168:152179	9001933	1	True				
ANR	9002047	Identifier	code		9001933	0					
ANR	9002048	ExpressionStatement	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"	4786:12:152193:152245	9001933	2	True				
ANR	9002049	AssignmentExpression	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"		9001933	0		=			
ANR	9002050	MemberAccess	cc . pattern		9001933	0					
ANR	9002051	Identifier	cc		9001933	0					
ANR	9002052	Identifier	pattern		9001933	1					
ANR	9002053	CallExpression	"r_ptr ( & pPatInst , gs_pattern_instance_t )"		9001933	1					
ANR	9002054	Callee	r_ptr		9001933	0					
ANR	9002055	Identifier	r_ptr		9001933	0					
ANR	9002056	ArgumentList	& pPatInst		9001933	1					
ANR	9002057	Argument	& pPatInst		9001933	0					
ANR	9002058	UnaryOperationExpression	& pPatInst		9001933	0					
ANR	9002059	UnaryOperator	&		9001933	0					
ANR	9002060	Identifier	pPatInst		9001933	1					
ANR	9002061	Argument	gs_pattern_instance_t		9001933	1					
ANR	9002062	Identifier	gs_pattern_instance_t		9001933	0					
ANR	9002063	IfStatement	if ( pattern_instance_uses_base_space ( cc . pattern ) )		9001933	3					
ANR	9002064	Condition	pattern_instance_uses_base_space ( cc . pattern )	4787:16:152263:152306	9001933	0	True				
ANR	9002065	CallExpression	pattern_instance_uses_base_space ( cc . pattern )		9001933	0					
ANR	9002066	Callee	pattern_instance_uses_base_space		9001933	0					
ANR	9002067	Identifier	pattern_instance_uses_base_space		9001933	0					
ANR	9002068	ArgumentList	cc . pattern		9001933	1					
ANR	9002069	Argument	cc . pattern		9001933	0					
ANR	9002070	MemberAccess	cc . pattern		9001933	0					
ANR	9002071	Identifier	cc		9001933	0					
ANR	9002072	Identifier	pattern		9001933	1					
ANR	9002073	ExpressionStatement	* n = n_comps	4788:16:152325:152337	9001933	1	True				
ANR	9002074	AssignmentExpression	* n = n_comps		9001933	0		=			
ANR	9002075	UnaryOperationExpression	* n		9001933	0					
ANR	9002076	UnaryOperator	*		9001933	0					
ANR	9002077	Identifier	n		9001933	1					
ANR	9002078	Identifier	n_comps		9001933	1					
ANR	9002079	ElseStatement	else		9001933	0					
ANR	9002080	ExpressionStatement	* n = 1	4790:16:152372:152378	9001933	0	True				
ANR	9002081	AssignmentExpression	* n = 1		9001933	0		=			
ANR	9002082	UnaryOperationExpression	* n		9001933	0					
ANR	9002083	UnaryOperator	*		9001933	0					
ANR	9002084	Identifier	n		9001933	1					
ANR	9002085	PrimaryExpression	1		9001933	1					
ANR	9002086	ElseStatement	else		9001933	0					
ANR	9002087	ExpressionStatement	* n = 1	4792:12:152411:152417	9001933	0	True				
ANR	9002088	AssignmentExpression	* n = 1		9001933	0		=			
ANR	9002089	UnaryOperationExpression	* n		9001933	0					
ANR	9002090	UnaryOperator	*		9001933	0					
ANR	9002091	Identifier	n		9001933	1					
ANR	9002092	PrimaryExpression	1		9001933	1					
ANR	9002093	ElseStatement	else		9001933	0					
ANR	9002094	ExpressionStatement	* n = 1	4794:12:152446:152452	9001933	0	True				
ANR	9002095	AssignmentExpression	* n = 1		9001933	0		=			
ANR	9002096	UnaryOperationExpression	* n		9001933	0					
ANR	9002097	UnaryOperator	*		9001933	0					
ANR	9002098	Identifier	n		9001933	1					
ANR	9002099	PrimaryExpression	1		9001933	1					
ANR	9002100	ElseStatement	else		9001933	0					
ANR	9002101	ExpressionStatement	return_error ( gs_error_typecheck )	4796:8:152473:152505	9001933	0	True				
ANR	9002102	CallExpression	return_error ( gs_error_typecheck )		9001933	0					
ANR	9002103	Callee	return_error		9001933	0					
ANR	9002104	Identifier	return_error		9001933	0					
ANR	9002105	ArgumentList	gs_error_typecheck		9001933	1					
ANR	9002106	Argument	gs_error_typecheck		9001933	0					
ANR	9002107	Identifier	gs_error_typecheck		9001933	0					
ANR	9002108	ReturnStatement	return 0 ;	4798:4:152512:152520	9001933	5	True				
ANR	9002109	PrimaryExpression	0		9001933	0					
ANR	9002110	ReturnType	static int		9001933	1					
ANR	9002111	Identifier	patterncomponent		9001933	2					
ANR	9002112	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		9001933	3					
ANR	9002113	Parameter	i_ctx_t * i_ctx_p	4768:28:151593:151609	9001933	0	True				
ANR	9002114	ParameterType	i_ctx_t *		9001933	0					
ANR	9002115	Identifier	i_ctx_p		9001933	1					
ANR	9002116	Parameter	ref * space	4768:47:151612:151621	9001933	1	True				
ANR	9002117	ParameterType	ref *		9001933	0					
ANR	9002118	Identifier	space		9001933	1					
ANR	9002119	Parameter	int * n	4768:59:151624:151629	9001933	2	True				
ANR	9002120	ParameterType	int *		9001933	0					
ANR	9002121	Identifier	n		9001933	1					
ANR	9002122	CFGEntryNode	ENTRY		9001933		True				
ANR	9002123	CFGExitNode	EXIT		9001933		True				
ANR	9002124	Symbol	n_comps		9001933						
ANR	9002125	Symbol	cc . pattern		9001933						
ANR	9002126	Symbol	code		9001933						
ANR	9002127	Symbol	t_dictionary		9001933						
ANR	9002128	Symbol	& pPatInst		9001933						
ANR	9002129	Symbol	osp		9001933						
ANR	9002130	Symbol	space		9001933						
ANR	9002131	Symbol	r_has_type		9001933						
ANR	9002132	Symbol	r_ptr		9001933						
ANR	9002133	Symbol	pattern_instance_uses_base_space		9001933						
ANR	9002134	Symbol	gs_error_typecheck		9001933						
ANR	9002135	Symbol	igs		9001933						
ANR	9002136	Symbol	gs_currentcolorspace		9001933						
ANR	9002137	Symbol	imemory		9001933						
ANR	9002138	Symbol	cc		9001933						
ANR	9002139	Symbol	op		9001933						
ANR	9002140	Symbol	pcs		9001933						
ANR	9002141	Symbol	& pImpl		9001933						
ANR	9002142	Symbol	dict_find_string		9001933						
ANR	9002143	Symbol	array_get		9001933						
ANR	9002144	Symbol	n		9001933						
ANR	9002145	Symbol	gs_pattern_instance_t		9001933						
ANR	9002146	Symbol	i_ctx_p		9001933						
ANR	9002147	Symbol	cs_num_components		9001933						
ANR	9002148	Symbol	pPatInst		9001933						
ANR	9002149	Symbol	* n		9001933						
ANR	9002150	Symbol	pImpl		9001933						
ANR	9002151	Function	patternbasecolor	4800:0:152524:153962							
ANR	9002152	FunctionDef	"patternbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		9002151	0					
ANR	9002153	CompoundStatement		4801:0:152634:153962	9002151	0					
ANR	9002154	IdentifierDeclStatement	os_ptr op ;	4802:4:152640:152649	9002151	0	True				
ANR	9002155	IdentifierDecl	op		9002151	0					
ANR	9002156	IdentifierDeclType	os_ptr		9002151	0					
ANR	9002157	Identifier	op		9002151	1					
ANR	9002158	IdentifierDeclStatement	"int i , components = 0 ;"	4803:4:152655:152674	9002151	1	True				
ANR	9002159	IdentifierDecl	i		9002151	0					
ANR	9002160	IdentifierDeclType	int		9002151	0					
ANR	9002161	Identifier	i		9002151	1					
ANR	9002162	IdentifierDecl	components = 0		9002151	1					
ANR	9002163	IdentifierDeclType	int		9002151	0					
ANR	9002164	Identifier	components		9002151	1					
ANR	9002165	AssignmentExpression	components = 0		9002151	2		=			
ANR	9002166	Identifier	components		9002151	0					
ANR	9002167	PrimaryExpression	0		9002151	1					
ANR	9002168	IfStatement	if ( r_size ( space ) > 1 )		9002151	2					
ANR	9002169	Condition	r_size ( space ) > 1	4805:8:152685:152701	9002151	0	True				
ANR	9002170	RelationalExpression	r_size ( space ) > 1		9002151	0		>			
ANR	9002171	CallExpression	r_size ( space )		9002151	0					
ANR	9002172	Callee	r_size		9002151	0					
ANR	9002173	Identifier	r_size		9002151	0					
ANR	9002174	ArgumentList	space		9002151	1					
ANR	9002175	Argument	space		9002151	0					
ANR	9002176	Identifier	space		9002151	0					
ANR	9002177	PrimaryExpression	1		9002151	1					
ANR	9002178	CompoundStatement		10:8:318:362	9002151	1					
ANR	9002179	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	4806:8:152714:152769	9002151	0	True				
ANR	9002180	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		9002151	0					
ANR	9002181	IdentifierDeclType	const gs_color_space *		9002151	0					
ANR	9002182	Identifier	pcs		9002151	1					
ANR	9002183	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		9002151	2		=			
ANR	9002184	Identifier	pcs		9002151	0					
ANR	9002185	CallExpression	gs_currentcolorspace ( igs )		9002151	1					
ANR	9002186	Callee	gs_currentcolorspace		9002151	0					
ANR	9002187	Identifier	gs_currentcolorspace		9002151	0					
ANR	9002188	ArgumentList	igs		9002151	1					
ANR	9002189	Argument	igs		9002151	0					
ANR	9002190	Identifier	igs		9002151	0					
ANR	9002191	IdentifierDeclStatement	const gs_client_color * pcc = gs_currentcolor ( igs ) ;	4807:8:152779:152829	9002151	1	True				
ANR	9002192	IdentifierDecl	* pcc = gs_currentcolor ( igs )		9002151	0					
ANR	9002193	IdentifierDeclType	const gs_client_color *		9002151	0					
ANR	9002194	Identifier	pcc		9002151	1					
ANR	9002195	AssignmentExpression	* pcc = gs_currentcolor ( igs )		9002151	2		=			
ANR	9002196	Identifier	pcc		9002151	0					
ANR	9002197	CallExpression	gs_currentcolor ( igs )		9002151	1					
ANR	9002198	Callee	gs_currentcolor		9002151	0					
ANR	9002199	Identifier	gs_currentcolor		9002151	0					
ANR	9002200	ArgumentList	igs		9002151	1					
ANR	9002201	Argument	igs		9002151	0					
ANR	9002202	Identifier	igs		9002151	0					
ANR	9002203	IdentifierDeclStatement	int n = cs_num_components ( pcs ) ;	4808:8:152839:152889	9002151	2	True				
ANR	9002204	IdentifierDecl	n = cs_num_components ( pcs )		9002151	0					
ANR	9002205	IdentifierDeclType	int		9002151	0					
ANR	9002206	Identifier	n		9002151	1					
ANR	9002207	AssignmentExpression	n = cs_num_components ( pcs )		9002151	2		=			
ANR	9002208	Identifier	n		9002151	0					
ANR	9002209	CallExpression	cs_num_components ( pcs )		9002151	1					
ANR	9002210	Callee	cs_num_components		9002151	0					
ANR	9002211	Identifier	cs_num_components		9002151	0					
ANR	9002212	ArgumentList	pcs		9002151	1					
ANR	9002213	Argument	pcs		9002151	0					
ANR	9002214	Identifier	pcs		9002151	0					
ANR	9002215	IdentifierDeclStatement	bool push_pattern = n < 0 ;	4809:8:152899:152943	9002151	3	True				
ANR	9002216	IdentifierDecl	push_pattern = n < 0		9002151	0					
ANR	9002217	IdentifierDeclType	bool		9002151	0					
ANR	9002218	Identifier	push_pattern		9002151	1					
ANR	9002219	AssignmentExpression	push_pattern = n < 0		9002151	2		=			
ANR	9002220	Identifier	push_pattern		9002151	0					
ANR	9002221	RelationalExpression	n < 0		9002151	1		<			
ANR	9002222	Identifier	n		9002151	0					
ANR	9002223	PrimaryExpression	0		9002151	1					
ANR	9002224	IdentifierDeclStatement	gs_pattern_instance_t * pinst = pcc -> pattern ;	4810:8:152953:152997	9002151	4	True				
ANR	9002225	IdentifierDecl	* pinst = pcc -> pattern		9002151	0					
ANR	9002226	IdentifierDeclType	gs_pattern_instance_t *		9002151	0					
ANR	9002227	Identifier	pinst		9002151	1					
ANR	9002228	AssignmentExpression	* pinst = pcc -> pattern		9002151	2		=			
ANR	9002229	Identifier	pinst		9002151	0					
ANR	9002230	PtrMemberAccess	pcc -> pattern		9002151	1					
ANR	9002231	Identifier	pcc		9002151	0					
ANR	9002232	Identifier	pattern		9002151	1					
ANR	9002233	IfStatement	if ( pinst != 0 && pattern_instance_uses_base_space ( pinst ) )		9002151	5					
ANR	9002234	Condition	pinst != 0 && pattern_instance_uses_base_space ( pinst )	4812:12:153012:153064	9002151	0	True				
ANR	9002235	AndExpression	pinst != 0 && pattern_instance_uses_base_space ( pinst )		9002151	0		&&			
ANR	9002236	EqualityExpression	pinst != 0		9002151	0		!=			
ANR	9002237	Identifier	pinst		9002151	0					
ANR	9002238	PrimaryExpression	0		9002151	1					
ANR	9002239	CallExpression	pattern_instance_uses_base_space ( pinst )		9002151	1					
ANR	9002240	Callee	pattern_instance_uses_base_space		9002151	0					
ANR	9002241	Identifier	pattern_instance_uses_base_space		9002151	0					
ANR	9002242	ArgumentList	pinst		9002151	1					
ANR	9002243	Argument	pinst		9002151	0					
ANR	9002244	Identifier	pinst		9002151	0					
ANR	9002245	CompoundStatement		12:67:432:432	9002151	1					
ANR	9002246	IfStatement	if ( push_pattern )		9002151	0					
ANR	9002247	Condition	push_pattern	4814:16:153121:153132	9002151	0	True				
ANR	9002248	Identifier	push_pattern		9002151	0					
ANR	9002249	ExpressionStatement	pop ( 1 )	4815:16:153151:153157	9002151	1	True				
ANR	9002250	CallExpression	pop ( 1 )		9002151	0					
ANR	9002251	Callee	pop		9002151	0					
ANR	9002252	Identifier	pop		9002151	0					
ANR	9002253	ArgumentList	1		9002151	1					
ANR	9002254	Argument	1		9002151	0					
ANR	9002255	PrimaryExpression	1		9002151	0					
ANR	9002256	ExpressionStatement	* stage = 0	4816:12:153202:153212	9002151	1	True				
ANR	9002257	AssignmentExpression	* stage = 0		9002151	0		=			
ANR	9002258	UnaryOperationExpression	* stage		9002151	0					
ANR	9002259	UnaryOperator	*		9002151	0					
ANR	9002260	Identifier	stage		9002151	1					
ANR	9002261	PrimaryExpression	0		9002151	1					
ANR	9002262	ExpressionStatement	* cont = 1	4817:12:153226:153235	9002151	2	True				
ANR	9002263	AssignmentExpression	* cont = 1		9002151	0		=			
ANR	9002264	UnaryOperationExpression	* cont		9002151	0					
ANR	9002265	UnaryOperator	*		9002151	0					
ANR	9002266	Identifier	cont		9002151	1					
ANR	9002267	PrimaryExpression	1		9002151	1					
ANR	9002268	ReturnStatement	return 0 ;	4818:12:153249:153257	9002151	3	True				
ANR	9002269	PrimaryExpression	0		9002151	0					
ANR	9002270	ExpressionStatement	pop ( 1 )	4826:4:153453:153459	9002151	3	True				
ANR	9002271	CallExpression	pop ( 1 )		9002151	0					
ANR	9002272	Callee	pop		9002151	0					
ANR	9002273	Identifier	pop		9002151	0					
ANR	9002274	ArgumentList	1		9002151	1					
ANR	9002275	Argument	1		9002151	0					
ANR	9002276	PrimaryExpression	1		9002151	0					
ANR	9002277	ExpressionStatement	op = osp	4827:4:153465:153473	9002151	4	True				
ANR	9002278	AssignmentExpression	op = osp		9002151	0		=			
ANR	9002279	Identifier	op		9002151	0					
ANR	9002280	Identifier	osp		9002151	1					
ANR	9002281	SwitchStatement	switch ( base )		9002151	5					
ANR	9002282	Condition	base	4828:11:153486:153489	9002151	0	True				
ANR	9002283	Identifier	base		9002151	0					
ANR	9002284	CompoundStatement		28:17:857:857	9002151	1					
ANR	9002285	Label	case 0 :	4829:8:153502:153508	9002151	0	True				
ANR	9002286	ExpressionStatement	components = 1	4830:12:153522:153536	9002151	1	True				
ANR	9002287	AssignmentExpression	components = 1		9002151	0		=			
ANR	9002288	Identifier	components		9002151	0					
ANR	9002289	PrimaryExpression	1		9002151	1					
ANR	9002290	BreakStatement	break ;	4831:12:153550:153555	9002151	2	True				
ANR	9002291	Label	case 1 :	4832:8:153565:153571	9002151	3	True				
ANR	9002292	Label	case 2 :	4833:8:153581:153587	9002151	4	True				
ANR	9002293	ExpressionStatement	components = 3	4834:12:153601:153615	9002151	5	True				
ANR	9002294	AssignmentExpression	components = 3		9002151	0		=			
ANR	9002295	Identifier	components		9002151	0					
ANR	9002296	PrimaryExpression	3		9002151	1					
ANR	9002297	BreakStatement	break ;	4835:12:153629:153634	9002151	6	True				
ANR	9002298	Label	case 3 :	4836:8:153644:153650	9002151	7	True				
ANR	9002299	ExpressionStatement	components = 4	4837:12:153664:153678	9002151	8	True				
ANR	9002300	AssignmentExpression	components = 4		9002151	0		=			
ANR	9002301	Identifier	components		9002151	0					
ANR	9002302	PrimaryExpression	4		9002151	1					
ANR	9002303	BreakStatement	break ;	4838:12:153692:153697	9002151	9	True				
ANR	9002304	ExpressionStatement	push ( components )	4840:4:153709:153725	9002151	6	True				
ANR	9002305	CallExpression	push ( components )		9002151	0					
ANR	9002306	Callee	push		9002151	0					
ANR	9002307	Identifier	push		9002151	0					
ANR	9002308	ArgumentList	components		9002151	1					
ANR	9002309	Argument	components		9002151	0					
ANR	9002310	Identifier	components		9002151	0					
ANR	9002311	ExpressionStatement	op -= components - 1	4841:4:153731:153749	9002151	7	True				
ANR	9002312	AssignmentExpression	op -= components - 1		9002151	0		-=			
ANR	9002313	Identifier	op		9002151	0					
ANR	9002314	AdditiveExpression	components - 1		9002151	1		-			
ANR	9002315	Identifier	components		9002151	0					
ANR	9002316	PrimaryExpression	1		9002151	1					
ANR	9002317	ForStatement	for ( i = 0 ; i < components ; i ++ )		9002151	8					
ANR	9002318	ForInit	i = 0 ;	4842:9:153760:153763	9002151	0	True				
ANR	9002319	AssignmentExpression	i = 0		9002151	0		=			
ANR	9002320	Identifier	i		9002151	0					
ANR	9002321	PrimaryExpression	0		9002151	1					
ANR	9002322	Condition	i < components	4842:13:153764:153775	9002151	1	True				
ANR	9002323	RelationalExpression	i < components		9002151	0		<			
ANR	9002324	Identifier	i		9002151	0					
ANR	9002325	Identifier	components		9002151	1					
ANR	9002326	PostIncDecOperationExpression	i ++	4842:26:153777:153779	9002151	2	True				
ANR	9002327	Identifier	i		9002151	0					
ANR	9002328	IncDec	++		9002151	1					
ANR	9002329	CompoundStatement		42:31:1147:1147	9002151	3					
ANR	9002330	ExpressionStatement	"make_real ( op , ( float ) 0 )"	4843:8:153792:153815	9002151	0	True				
ANR	9002331	CallExpression	"make_real ( op , ( float ) 0 )"		9002151	0					
ANR	9002332	Callee	make_real		9002151	0					
ANR	9002333	Identifier	make_real		9002151	0					
ANR	9002334	ArgumentList	op		9002151	1					
ANR	9002335	Argument	op		9002151	0					
ANR	9002336	Identifier	op		9002151	0					
ANR	9002337	Argument	( float ) 0		9002151	1					
ANR	9002338	CastExpression	( float ) 0		9002151	0					
ANR	9002339	CastTarget	float		9002151	0					
ANR	9002340	PrimaryExpression	0		9002151	1					
ANR	9002341	ExpressionStatement	op ++	4844:8:153825:153829	9002151	1	True				
ANR	9002342	PostIncDecOperationExpression	op ++		9002151	0					
ANR	9002343	Identifier	op		9002151	0					
ANR	9002344	IncDec	++		9002151	1					
ANR	9002345	IfStatement	if ( components == 4 )		9002151	9					
ANR	9002346	Condition	components == 4	4846:8:153845:153859	9002151	0	True				
ANR	9002347	EqualityExpression	components == 4		9002151	0		==			
ANR	9002348	Identifier	components		9002151	0					
ANR	9002349	PrimaryExpression	4		9002151	1					
ANR	9002350	CompoundStatement		46:25:1227:1227	9002151	1					
ANR	9002351	ExpressionStatement	op --	4847:8:153872:153876	9002151	0	True				
ANR	9002352	PostIncDecOperationExpression	op --		9002151	0					
ANR	9002353	Identifier	op		9002151	0					
ANR	9002354	IncDec	--		9002151	1					
ANR	9002355	ExpressionStatement	"make_real ( op , ( float ) 1 )"	4848:8:153886:153909	9002151	1	True				
ANR	9002356	CallExpression	"make_real ( op , ( float ) 1 )"		9002151	0					
ANR	9002357	Callee	make_real		9002151	0					
ANR	9002358	Identifier	make_real		9002151	0					
ANR	9002359	ArgumentList	op		9002151	1					
ANR	9002360	Argument	op		9002151	0					
ANR	9002361	Identifier	op		9002151	0					
ANR	9002362	Argument	( float ) 1		9002151	1					
ANR	9002363	CastExpression	( float ) 1		9002151	0					
ANR	9002364	CastTarget	float		9002151	0					
ANR	9002365	PrimaryExpression	1		9002151	1					
ANR	9002366	ExpressionStatement	* stage = 0	4850:4:153921:153931	9002151	10	True				
ANR	9002367	AssignmentExpression	* stage = 0		9002151	0		=			
ANR	9002368	UnaryOperationExpression	* stage		9002151	0					
ANR	9002369	UnaryOperator	*		9002151	0					
ANR	9002370	Identifier	stage		9002151	1					
ANR	9002371	PrimaryExpression	0		9002151	1					
ANR	9002372	ExpressionStatement	* cont = 0	4851:4:153937:153946	9002151	11	True				
ANR	9002373	AssignmentExpression	* cont = 0		9002151	0		=			
ANR	9002374	UnaryOperationExpression	* cont		9002151	0					
ANR	9002375	UnaryOperator	*		9002151	0					
ANR	9002376	Identifier	cont		9002151	1					
ANR	9002377	PrimaryExpression	0		9002151	1					
ANR	9002378	ReturnStatement	return 0 ;	4852:4:153952:153960	9002151	12	True				
ANR	9002379	PrimaryExpression	0		9002151	0					
ANR	9002380	ReturnType	static int		9002151	1					
ANR	9002381	Identifier	patternbasecolor		9002151	2					
ANR	9002382	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		9002151	3					
ANR	9002383	Parameter	i_ctx_t * i_ctx_p	4800:28:152552:152568	9002151	0	True				
ANR	9002384	ParameterType	i_ctx_t *		9002151	0					
ANR	9002385	Identifier	i_ctx_p		9002151	1					
ANR	9002386	Parameter	ref * space	4800:47:152571:152580	9002151	1	True				
ANR	9002387	ParameterType	ref *		9002151	0					
ANR	9002388	Identifier	space		9002151	1					
ANR	9002389	Parameter	int base	4800:59:152583:152590	9002151	2	True				
ANR	9002390	ParameterType	int		9002151	0					
ANR	9002391	Identifier	base		9002151	1					
ANR	9002392	Parameter	int * stage	4800:69:152593:152602	9002151	3	True				
ANR	9002393	ParameterType	int *		9002151	0					
ANR	9002394	Identifier	stage		9002151	1					
ANR	9002395	Parameter	int * cont	4800:81:152605:152613	9002151	4	True				
ANR	9002396	ParameterType	int *		9002151	0					
ANR	9002397	Identifier	cont		9002151	1					
ANR	9002398	Parameter	int * stack_depth	4800:92:152616:152631	9002151	5	True				
ANR	9002399	ParameterType	int *		9002151	0					
ANR	9002400	Identifier	stack_depth		9002151	1					
ANR	9002401	CFGEntryNode	ENTRY		9002151		True				
ANR	9002402	CFGExitNode	EXIT		9002151		True				
ANR	9002403	Symbol	stack_depth		9002151						
ANR	9002404	Symbol	components		9002151						
ANR	9002405	Symbol	pcc -> pattern		9002151						
ANR	9002406	Symbol	osp		9002151						
ANR	9002407	Symbol	space		9002151						
ANR	9002408	Symbol	pcc		9002151						
ANR	9002409	Symbol	pattern_instance_uses_base_space		9002151						
ANR	9002410	Symbol	igs		9002151						
ANR	9002411	Symbol	gs_currentcolorspace		9002151						
ANR	9002412	Symbol	r_size		9002151						
ANR	9002413	Symbol	push_pattern		9002151						
ANR	9002414	Symbol	cont		9002151						
ANR	9002415	Symbol	op		9002151						
ANR	9002416	Symbol	pcs		9002151						
ANR	9002417	Symbol	* stage		9002151						
ANR	9002418	Symbol	i		9002151						
ANR	9002419	Symbol	pinst		9002151						
ANR	9002420	Symbol	n		9002151						
ANR	9002421	Symbol	gs_currentcolor		9002151						
ANR	9002422	Symbol	stage		9002151						
ANR	9002423	Symbol	* cont		9002151						
ANR	9002424	Symbol	i_ctx_p		9002151						
ANR	9002425	Symbol	cs_num_components		9002151						
ANR	9002426	Symbol	* pcc		9002151						
ANR	9002427	Symbol	base		9002151						
ANR	9002428	Function	patternvalidate	4854:0:153964:154216							
ANR	9002429	FunctionDef	"patternvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		9002428	0					
ANR	9002430	CompoundStatement		4855:0:154051:154216	9002428	0					
ANR	9002431	IdentifierDeclStatement	os_ptr op = osp ;	4856:4:154057:154072	9002428	0	True				
ANR	9002432	IdentifierDecl	op = osp		9002428	0					
ANR	9002433	IdentifierDeclType	os_ptr		9002428	0					
ANR	9002434	Identifier	op		9002428	1					
ANR	9002435	AssignmentExpression	op = osp		9002428	2		=			
ANR	9002436	Identifier	osp		9002428	0					
ANR	9002437	Identifier	osp		9002428	1					
ANR	9002438	ExpressionStatement	check_op ( 1 )	4858:4:154079:154090	9002428	1	True				
ANR	9002439	CallExpression	check_op ( 1 )		9002428	0					
ANR	9002440	Callee	check_op		9002428	0					
ANR	9002441	Identifier	check_op		9002428	0					
ANR	9002442	ArgumentList	1		9002428	1					
ANR	9002443	Argument	1		9002428	0					
ANR	9002444	PrimaryExpression	1		9002428	0					
ANR	9002445	IfStatement	"if ( ! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null ) )"		9002428	2					
ANR	9002446	Condition	"! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null )"	4860:8:154101:154156	9002428	0	True				
ANR	9002447	AndExpression	"! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null )"		9002428	0		&&			
ANR	9002448	UnaryOperationExpression	"! r_has_type ( op , t_dictionary )"		9002428	0					
ANR	9002449	UnaryOperator	!		9002428	0					
ANR	9002450	CallExpression	"r_has_type ( op , t_dictionary )"		9002428	1					
ANR	9002451	Callee	r_has_type		9002428	0					
ANR	9002452	Identifier	r_has_type		9002428	0					
ANR	9002453	ArgumentList	op		9002428	1					
ANR	9002454	Argument	op		9002428	0					
ANR	9002455	Identifier	op		9002428	0					
ANR	9002456	Argument	t_dictionary		9002428	1					
ANR	9002457	Identifier	t_dictionary		9002428	0					
ANR	9002458	UnaryOperationExpression	"! r_has_type ( op , t_null )"		9002428	1					
ANR	9002459	UnaryOperator	!		9002428	0					
ANR	9002460	CallExpression	"r_has_type ( op , t_null )"		9002428	1					
ANR	9002461	Callee	r_has_type		9002428	0					
ANR	9002462	Identifier	r_has_type		9002428	0					
ANR	9002463	ArgumentList	op		9002428	1					
ANR	9002464	Argument	op		9002428	0					
ANR	9002465	Identifier	op		9002428	0					
ANR	9002466	Argument	t_null		9002428	1					
ANR	9002467	Identifier	t_null		9002428	0					
ANR	9002468	ExpressionStatement	return_error ( gs_error_typecheck )	4861:8:154167:154199	9002428	1	True				
ANR	9002469	CallExpression	return_error ( gs_error_typecheck )		9002428	0					
ANR	9002470	Callee	return_error		9002428	0					
ANR	9002471	Identifier	return_error		9002428	0					
ANR	9002472	ArgumentList	gs_error_typecheck		9002428	1					
ANR	9002473	Argument	gs_error_typecheck		9002428	0					
ANR	9002474	Identifier	gs_error_typecheck		9002428	0					
ANR	9002475	ReturnStatement	return 0 ;	4863:4:154206:154214	9002428	3	True				
ANR	9002476	PrimaryExpression	0		9002428	0					
ANR	9002477	ReturnType	static int		9002428	1					
ANR	9002478	Identifier	patternvalidate		9002428	2					
ANR	9002479	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		9002428	3					
ANR	9002480	Parameter	i_ctx_t * i_ctx_p	4854:27:153991:154006	9002428	0	True				
ANR	9002481	ParameterType	i_ctx_t *		9002428	0					
ANR	9002482	Identifier	i_ctx_p		9002428	1					
ANR	9002483	Parameter	ref * space	4854:45:154009:154018	9002428	1	True				
ANR	9002484	ParameterType	ref *		9002428	0					
ANR	9002485	Identifier	space		9002428	1					
ANR	9002486	Parameter	float * values	4854:57:154021:154033	9002428	2	True				
ANR	9002487	ParameterType	float *		9002428	0					
ANR	9002488	Identifier	values		9002428	1					
ANR	9002489	Parameter	int num_comps	4854:72:154036:154048	9002428	3	True				
ANR	9002490	ParameterType	int		9002428	0					
ANR	9002491	Identifier	num_comps		9002428	1					
ANR	9002492	CFGEntryNode	ENTRY		9002428		True				
ANR	9002493	CFGExitNode	EXIT		9002428		True				
ANR	9002494	Symbol	op		9002428						
ANR	9002495	Symbol	r_has_type		9002428						
ANR	9002496	Symbol	t_null		9002428						
ANR	9002497	Symbol	gs_error_typecheck		9002428						
ANR	9002498	Symbol	t_dictionary		9002428						
ANR	9002499	Symbol	i_ctx_p		9002428						
ANR	9002500	Symbol	values		9002428						
ANR	9002501	Symbol	num_comps		9002428						
ANR	9002502	Symbol	osp		9002428						
ANR	9002503	Symbol	space		9002428						
ANR	9002504	Function	setdevicepspace	4867:0:154237:155264							
ANR	9002505	FunctionDef	"setdevicepspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9002504	0					
ANR	9002506	CompoundStatement		4868:0:154328:155264	9002504	0					
ANR	9002507	IdentifierDeclStatement	int code = 0 ;	4869:4:154334:154346	9002504	0	True				
ANR	9002508	IdentifierDecl	code = 0		9002504	0					
ANR	9002509	IdentifierDeclType	int		9002504	0					
ANR	9002510	Identifier	code		9002504	1					
ANR	9002511	AssignmentExpression	code = 0		9002504	2		=			
ANR	9002512	Identifier	code		9002504	0					
ANR	9002513	PrimaryExpression	0		9002504	1					
ANR	9002514	IdentifierDeclStatement	gs_color_space * pcs ;	4870:4:154352:154371	9002504	1	True				
ANR	9002515	IdentifierDecl	* pcs		9002504	0					
ANR	9002516	IdentifierDeclType	gs_color_space *		9002504	0					
ANR	9002517	Identifier	pcs		9002504	1					
ANR	9002518	IdentifierDeclStatement	ref bpp ;	4871:4:154377:154384	9002504	2	True				
ANR	9002519	IdentifierDecl	bpp		9002504	0					
ANR	9002520	IdentifierDeclType	ref		9002504	0					
ANR	9002521	Identifier	bpp		9002504	1					
ANR	9002522	IfStatement	if ( i_ctx_p -> language_level < 2 )		9002504	3					
ANR	9002523	Condition	i_ctx_p -> language_level < 2	4879:8:154729:154755	9002504	0	True				
ANR	9002524	RelationalExpression	i_ctx_p -> language_level < 2		9002504	0		<			
ANR	9002525	PtrMemberAccess	i_ctx_p -> language_level		9002504	0					
ANR	9002526	Identifier	i_ctx_p		9002504	0					
ANR	9002527	Identifier	language_level		9002504	1					
ANR	9002528	PrimaryExpression	2		9002504	1					
ANR	9002529	ExpressionStatement	return_error ( gs_error_undefined )	4880:8:154766:154798	9002504	1	True				
ANR	9002530	CallExpression	return_error ( gs_error_undefined )		9002504	0					
ANR	9002531	Callee	return_error		9002504	0					
ANR	9002532	Identifier	return_error		9002504	0					
ANR	9002533	ArgumentList	gs_error_undefined		9002504	1					
ANR	9002534	Argument	gs_error_undefined		9002504	0					
ANR	9002535	Identifier	gs_error_undefined		9002504	0					
ANR	9002536	ExpressionStatement	* cont = 0	4882:4:154805:154814	9002504	4	True				
ANR	9002537	AssignmentExpression	* cont = 0		9002504	0		=			
ANR	9002538	UnaryOperationExpression	* cont		9002504	0					
ANR	9002539	UnaryOperator	*		9002504	0					
ANR	9002540	Identifier	cont		9002504	1					
ANR	9002541	PrimaryExpression	0		9002504	1					
ANR	9002542	ExpressionStatement	"code = array_get ( imemory , r , 1 , & bpp )"	4883:4:154820:154857	9002504	5	True				
ANR	9002543	AssignmentExpression	"code = array_get ( imemory , r , 1 , & bpp )"		9002504	0		=			
ANR	9002544	Identifier	code		9002504	0					
ANR	9002545	CallExpression	"array_get ( imemory , r , 1 , & bpp )"		9002504	1					
ANR	9002546	Callee	array_get		9002504	0					
ANR	9002547	Identifier	array_get		9002504	0					
ANR	9002548	ArgumentList	imemory		9002504	1					
ANR	9002549	Argument	imemory		9002504	0					
ANR	9002550	Identifier	imemory		9002504	0					
ANR	9002551	Argument	r		9002504	1					
ANR	9002552	Identifier	r		9002504	0					
ANR	9002553	Argument	1		9002504	2					
ANR	9002554	PrimaryExpression	1		9002504	0					
ANR	9002555	Argument	& bpp		9002504	3					
ANR	9002556	UnaryOperationExpression	& bpp		9002504	0					
ANR	9002557	UnaryOperator	&		9002504	0					
ANR	9002558	Identifier	bpp		9002504	1					
ANR	9002559	IfStatement	if ( code < 0 )		9002504	6					
ANR	9002560	Condition	code < 0	4884:8:154867:154874	9002504	0	True				
ANR	9002561	RelationalExpression	code < 0		9002504	0		<			
ANR	9002562	Identifier	code		9002504	0					
ANR	9002563	PrimaryExpression	0		9002504	1					
ANR	9002564	ReturnStatement	return code ;	4885:8:154885:154896	9002504	1	True				
ANR	9002565	Identifier	code		9002504	0					
ANR	9002566	IfStatement	"if ( ! r_has_type ( & bpp , t_integer ) )"		9002504	7					
ANR	9002567	Condition	"! r_has_type ( & bpp , t_integer )"	4886:8:154906:154933	9002504	0	True				
ANR	9002568	UnaryOperationExpression	"! r_has_type ( & bpp , t_integer )"		9002504	0					
ANR	9002569	UnaryOperator	!		9002504	0					
ANR	9002570	CallExpression	"r_has_type ( & bpp , t_integer )"		9002504	1					
ANR	9002571	Callee	r_has_type		9002504	0					
ANR	9002572	Identifier	r_has_type		9002504	0					
ANR	9002573	ArgumentList	& bpp		9002504	1					
ANR	9002574	Argument	& bpp		9002504	0					
ANR	9002575	UnaryOperationExpression	& bpp		9002504	0					
ANR	9002576	UnaryOperator	&		9002504	0					
ANR	9002577	Identifier	bpp		9002504	1					
ANR	9002578	Argument	t_integer		9002504	1					
ANR	9002579	Identifier	t_integer		9002504	0					
ANR	9002580	ExpressionStatement	return_error ( gs_error_typecheck )	4887:8:154944:154976	9002504	1	True				
ANR	9002581	CallExpression	return_error ( gs_error_typecheck )		9002504	0					
ANR	9002582	Callee	return_error		9002504	0					
ANR	9002583	Identifier	return_error		9002504	0					
ANR	9002584	ArgumentList	gs_error_typecheck		9002504	1					
ANR	9002585	Argument	gs_error_typecheck		9002504	0					
ANR	9002586	Identifier	gs_error_typecheck		9002504	0					
ANR	9002587	ExpressionStatement	"code = gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"	4888:4:154982:155052	9002504	8	True				
ANR	9002588	AssignmentExpression	"code = gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"		9002504	0		=			
ANR	9002589	Identifier	code		9002504	0					
ANR	9002590	CallExpression	"gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"		9002504	1					
ANR	9002591	Callee	gs_cspace_new_DevicePixel		9002504	0					
ANR	9002592	Identifier	gs_cspace_new_DevicePixel		9002504	0					
ANR	9002593	ArgumentList	imemory		9002504	1					
ANR	9002594	Argument	imemory		9002504	0					
ANR	9002595	Identifier	imemory		9002504	0					
ANR	9002596	Argument	& pcs		9002504	1					
ANR	9002597	UnaryOperationExpression	& pcs		9002504	0					
ANR	9002598	UnaryOperator	&		9002504	0					
ANR	9002599	Identifier	pcs		9002504	1					
ANR	9002600	Argument	( int ) bpp . value . intval		9002504	2					
ANR	9002601	CastExpression	( int ) bpp . value . intval		9002504	0					
ANR	9002602	CastTarget	int		9002504	0					
ANR	9002603	MemberAccess	bpp . value . intval		9002504	1					
ANR	9002604	MemberAccess	bpp . value		9002504	0					
ANR	9002605	Identifier	bpp		9002504	0					
ANR	9002606	Identifier	value		9002504	1					
ANR	9002607	Identifier	intval		9002504	1					
ANR	9002608	IfStatement	if ( code < 0 )		9002504	9					
ANR	9002609	Condition	code < 0	4889:8:155062:155069	9002504	0	True				
ANR	9002610	RelationalExpression	code < 0		9002504	0		<			
ANR	9002611	Identifier	code		9002504	0					
ANR	9002612	PrimaryExpression	0		9002504	1					
ANR	9002613	ReturnStatement	return code ;	4890:8:155080:155091	9002504	1	True				
ANR	9002614	Identifier	code		9002504	0					
ANR	9002615	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4891:4:155097:155130	9002504	10	True				
ANR	9002616	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		9002504	0		=			
ANR	9002617	Identifier	code		9002504	0					
ANR	9002618	CallExpression	"gs_setcolorspace ( igs , pcs )"		9002504	1					
ANR	9002619	Callee	gs_setcolorspace		9002504	0					
ANR	9002620	Identifier	gs_setcolorspace		9002504	0					
ANR	9002621	ArgumentList	igs		9002504	1					
ANR	9002622	Argument	igs		9002504	0					
ANR	9002623	Identifier	igs		9002504	0					
ANR	9002624	Argument	pcs		9002504	1					
ANR	9002625	Identifier	pcs		9002504	0					
ANR	9002626	ExpressionStatement	* stage = 0	4893:4:155182:155192	9002504	11	True				
ANR	9002627	AssignmentExpression	* stage = 0		9002504	0		=			
ANR	9002628	UnaryOperationExpression	* stage		9002504	0					
ANR	9002629	UnaryOperator	*		9002504	0					
ANR	9002630	Identifier	stage		9002504	1					
ANR	9002631	PrimaryExpression	0		9002504	1					
ANR	9002632	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	4894:4:155198:155245	9002504	12	True				
ANR	9002633	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		9002504	0					
ANR	9002634	Callee	rc_decrement_only_cs		9002504	0					
ANR	9002635	Identifier	rc_decrement_only_cs		9002504	0					
ANR	9002636	ArgumentList	pcs		9002504	1					
ANR	9002637	Argument	pcs		9002504	0					
ANR	9002638	Identifier	pcs		9002504	0					
ANR	9002639	Argument	"""setseparationspace"""		9002504	1					
ANR	9002640	PrimaryExpression	"""setseparationspace"""		9002504	0					
ANR	9002641	ReturnStatement	return code ;	4895:4:155251:155262	9002504	13	True				
ANR	9002642	Identifier	code		9002504	0					
ANR	9002643	ReturnType	static int		9002504	1					
ANR	9002644	Identifier	setdevicepspace		9002504	2					
ANR	9002645	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9002504	3					
ANR	9002646	Parameter	i_ctx_t * i_ctx_p	4867:27:154264:154280	9002504	0	True				
ANR	9002647	ParameterType	i_ctx_t *		9002504	0					
ANR	9002648	Identifier	i_ctx_p		9002504	1					
ANR	9002649	Parameter	ref * r	4867:46:154283:154288	9002504	1	True				
ANR	9002650	ParameterType	ref *		9002504	0					
ANR	9002651	Identifier	r		9002504	1					
ANR	9002652	Parameter	int * stage	4867:54:154291:154300	9002504	2	True				
ANR	9002653	ParameterType	int *		9002504	0					
ANR	9002654	Identifier	stage		9002504	1					
ANR	9002655	Parameter	int * cont	4867:66:154303:154311	9002504	3	True				
ANR	9002656	ParameterType	int *		9002504	0					
ANR	9002657	Identifier	cont		9002504	1					
ANR	9002658	Parameter	int CIESubst	4867:77:154314:154325	9002504	4	True				
ANR	9002659	ParameterType	int		9002504	0					
ANR	9002660	Identifier	CIESubst		9002504	1					
ANR	9002661	CFGEntryNode	ENTRY		9002504		True				
ANR	9002662	CFGExitNode	EXIT		9002504		True				
ANR	9002663	Symbol	& pcs		9002504						
ANR	9002664	Symbol	code		9002504						
ANR	9002665	Symbol	i_ctx_p -> language_level		9002504						
ANR	9002666	Symbol	gs_error_undefined		9002504						
ANR	9002667	Symbol	gs_setcolorspace		9002504						
ANR	9002668	Symbol	& bpp		9002504						
ANR	9002669	Symbol	r_has_type		9002504						
ANR	9002670	Symbol	gs_error_typecheck		9002504						
ANR	9002671	Symbol	gs_cspace_new_DevicePixel		9002504						
ANR	9002672	Symbol	igs		9002504						
ANR	9002673	Symbol	* i_ctx_p		9002504						
ANR	9002674	Symbol	imemory		9002504						
ANR	9002675	Symbol	cont		9002504						
ANR	9002676	Symbol	CIESubst		9002504						
ANR	9002677	Symbol	pcs		9002504						
ANR	9002678	Symbol	bpp		9002504						
ANR	9002679	Symbol	* stage		9002504						
ANR	9002680	Symbol	array_get		9002504						
ANR	9002681	Symbol	bpp . value		9002504						
ANR	9002682	Symbol	r		9002504						
ANR	9002683	Symbol	stage		9002504						
ANR	9002684	Symbol	t_integer		9002504						
ANR	9002685	Symbol	* cont		9002504						
ANR	9002686	Symbol	i_ctx_p		9002504						
ANR	9002687	Symbol	bpp . value . intval		9002504						
ANR	9002688	Function	validatedevicepspace	4897:0:155266:155976							
ANR	9002689	FunctionDef	"validatedevicepspace (i_ctx_t * i_ctx_p , ref * * space)"		9002688	0					
ANR	9002690	CompoundStatement		4898:0:155330:155976	9002688	0					
ANR	9002691	IdentifierDeclStatement	int code = 0 ;	4899:4:155336:155348	9002688	0	True				
ANR	9002692	IdentifierDecl	code = 0		9002688	0					
ANR	9002693	IdentifierDeclType	int		9002688	0					
ANR	9002694	Identifier	code		9002688	1					
ANR	9002695	AssignmentExpression	code = 0		9002688	2		=			
ANR	9002696	Identifier	code		9002688	0					
ANR	9002697	PrimaryExpression	0		9002688	1					
ANR	9002698	IdentifierDeclStatement	"ref * r = * space , bpp ;"	4900:4:155354:155374	9002688	1	True				
ANR	9002699	IdentifierDecl	* r = * space		9002688	0					
ANR	9002700	IdentifierDeclType	ref *		9002688	0					
ANR	9002701	Identifier	r		9002688	1					
ANR	9002702	AssignmentExpression	* r = * space		9002688	2		=			
ANR	9002703	Identifier	r		9002688	0					
ANR	9002704	UnaryOperationExpression	* space		9002688	1					
ANR	9002705	UnaryOperator	*		9002688	0					
ANR	9002706	Identifier	space		9002688	1					
ANR	9002707	IdentifierDecl	bpp		9002688	1					
ANR	9002708	IdentifierDeclType	ref		9002688	0					
ANR	9002709	Identifier	bpp		9002688	1					
ANR	9002710	IfStatement	if ( ! r_is_array ( r ) )		9002688	2					
ANR	9002711	Condition	! r_is_array ( r )	4902:8:155385:155398	9002688	0	True				
ANR	9002712	UnaryOperationExpression	! r_is_array ( r )		9002688	0					
ANR	9002713	UnaryOperator	!		9002688	0					
ANR	9002714	CallExpression	r_is_array ( r )		9002688	1					
ANR	9002715	Callee	r_is_array		9002688	0					
ANR	9002716	Identifier	r_is_array		9002688	0					
ANR	9002717	ArgumentList	r		9002688	1					
ANR	9002718	Argument	r		9002688	0					
ANR	9002719	Identifier	r		9002688	0					
ANR	9002720	ExpressionStatement	return_error ( gs_error_typecheck )	4903:8:155409:155441	9002688	1	True				
ANR	9002721	CallExpression	return_error ( gs_error_typecheck )		9002688	0					
ANR	9002722	Callee	return_error		9002688	0					
ANR	9002723	Identifier	return_error		9002688	0					
ANR	9002724	ArgumentList	gs_error_typecheck		9002688	1					
ANR	9002725	Argument	gs_error_typecheck		9002688	0					
ANR	9002726	Identifier	gs_error_typecheck		9002688	0					
ANR	9002727	IfStatement	if ( r_size ( r ) != 2 )		9002688	3					
ANR	9002728	Condition	r_size ( r ) != 2	4905:8:155512:155525	9002688	0	True				
ANR	9002729	EqualityExpression	r_size ( r ) != 2		9002688	0		!=			
ANR	9002730	CallExpression	r_size ( r )		9002688	0					
ANR	9002731	Callee	r_size		9002688	0					
ANR	9002732	Identifier	r_size		9002688	0					
ANR	9002733	ArgumentList	r		9002688	1					
ANR	9002734	Argument	r		9002688	0					
ANR	9002735	Identifier	r		9002688	0					
ANR	9002736	PrimaryExpression	2		9002688	1					
ANR	9002737	ExpressionStatement	return_error ( gs_error_rangecheck )	4906:8:155536:155569	9002688	1	True				
ANR	9002738	CallExpression	return_error ( gs_error_rangecheck )		9002688	0					
ANR	9002739	Callee	return_error		9002688	0					
ANR	9002740	Identifier	return_error		9002688	0					
ANR	9002741	ArgumentList	gs_error_rangecheck		9002688	1					
ANR	9002742	Argument	gs_error_rangecheck		9002688	0					
ANR	9002743	Identifier	gs_error_rangecheck		9002688	0					
ANR	9002744	ExpressionStatement	"code = array_get ( imemory , r , 1 , & bpp )"	4908:4:155626:155663	9002688	4	True				
ANR	9002745	AssignmentExpression	"code = array_get ( imemory , r , 1 , & bpp )"		9002688	0		=			
ANR	9002746	Identifier	code		9002688	0					
ANR	9002747	CallExpression	"array_get ( imemory , r , 1 , & bpp )"		9002688	1					
ANR	9002748	Callee	array_get		9002688	0					
ANR	9002749	Identifier	array_get		9002688	0					
ANR	9002750	ArgumentList	imemory		9002688	1					
ANR	9002751	Argument	imemory		9002688	0					
ANR	9002752	Identifier	imemory		9002688	0					
ANR	9002753	Argument	r		9002688	1					
ANR	9002754	Identifier	r		9002688	0					
ANR	9002755	Argument	1		9002688	2					
ANR	9002756	PrimaryExpression	1		9002688	0					
ANR	9002757	Argument	& bpp		9002688	3					
ANR	9002758	UnaryOperationExpression	& bpp		9002688	0					
ANR	9002759	UnaryOperator	&		9002688	0					
ANR	9002760	Identifier	bpp		9002688	1					
ANR	9002761	IfStatement	if ( code < 0 )		9002688	5					
ANR	9002762	Condition	code < 0	4909:8:155673:155680	9002688	0	True				
ANR	9002763	RelationalExpression	code < 0		9002688	0		<			
ANR	9002764	Identifier	code		9002688	0					
ANR	9002765	PrimaryExpression	0		9002688	1					
ANR	9002766	ReturnStatement	return code ;	4910:8:155691:155702	9002688	1	True				
ANR	9002767	Identifier	code		9002688	0					
ANR	9002768	IfStatement	"if ( ! r_has_type ( & bpp , t_integer ) )"		9002688	6					
ANR	9002769	Condition	"! r_has_type ( & bpp , t_integer )"	4911:8:155712:155739	9002688	0	True				
ANR	9002770	UnaryOperationExpression	"! r_has_type ( & bpp , t_integer )"		9002688	0					
ANR	9002771	UnaryOperator	!		9002688	0					
ANR	9002772	CallExpression	"r_has_type ( & bpp , t_integer )"		9002688	1					
ANR	9002773	Callee	r_has_type		9002688	0					
ANR	9002774	Identifier	r_has_type		9002688	0					
ANR	9002775	ArgumentList	& bpp		9002688	1					
ANR	9002776	Argument	& bpp		9002688	0					
ANR	9002777	UnaryOperationExpression	& bpp		9002688	0					
ANR	9002778	UnaryOperator	&		9002688	0					
ANR	9002779	Identifier	bpp		9002688	1					
ANR	9002780	Argument	t_integer		9002688	1					
ANR	9002781	Identifier	t_integer		9002688	0					
ANR	9002782	ExpressionStatement	return_error ( gs_error_typecheck )	4912:8:155750:155782	9002688	1	True				
ANR	9002783	CallExpression	return_error ( gs_error_typecheck )		9002688	0					
ANR	9002784	Callee	return_error		9002688	0					
ANR	9002785	Identifier	return_error		9002688	0					
ANR	9002786	ArgumentList	gs_error_typecheck		9002688	1					
ANR	9002787	Argument	gs_error_typecheck		9002688	0					
ANR	9002788	Identifier	gs_error_typecheck		9002688	0					
ANR	9002789	IfStatement	if ( bpp . value . intval < 0 || bpp . value . intval > 31 )		9002688	7					
ANR	9002790	Condition	bpp . value . intval < 0 || bpp . value . intval > 31	4915:8:155852:155896	9002688	0	True				
ANR	9002791	OrExpression	bpp . value . intval < 0 || bpp . value . intval > 31		9002688	0		||			
ANR	9002792	RelationalExpression	bpp . value . intval < 0		9002688	0		<			
ANR	9002793	MemberAccess	bpp . value . intval		9002688	0					
ANR	9002794	MemberAccess	bpp . value		9002688	0					
ANR	9002795	Identifier	bpp		9002688	0					
ANR	9002796	Identifier	value		9002688	1					
ANR	9002797	Identifier	intval		9002688	1					
ANR	9002798	PrimaryExpression	0		9002688	1					
ANR	9002799	RelationalExpression	bpp . value . intval > 31		9002688	1		>			
ANR	9002800	MemberAccess	bpp . value . intval		9002688	0					
ANR	9002801	MemberAccess	bpp . value		9002688	0					
ANR	9002802	Identifier	bpp		9002688	0					
ANR	9002803	Identifier	value		9002688	1					
ANR	9002804	Identifier	intval		9002688	1					
ANR	9002805	PrimaryExpression	31		9002688	1					
ANR	9002806	ExpressionStatement	return_error ( gs_error_rangecheck )	4916:8:155907:155940	9002688	1	True				
ANR	9002807	CallExpression	return_error ( gs_error_rangecheck )		9002688	0					
ANR	9002808	Callee	return_error		9002688	0					
ANR	9002809	Identifier	return_error		9002688	0					
ANR	9002810	ArgumentList	gs_error_rangecheck		9002688	1					
ANR	9002811	Argument	gs_error_rangecheck		9002688	0					
ANR	9002812	Identifier	gs_error_rangecheck		9002688	0					
ANR	9002813	ExpressionStatement	* space = 0	4918:4:155947:155957	9002688	8	True				
ANR	9002814	AssignmentExpression	* space = 0		9002688	0		=			
ANR	9002815	UnaryOperationExpression	* space		9002688	0					
ANR	9002816	UnaryOperator	*		9002688	0					
ANR	9002817	Identifier	space		9002688	1					
ANR	9002818	PrimaryExpression	0		9002688	1					
ANR	9002819	ReturnStatement	return code ;	4919:4:155963:155974	9002688	9	True				
ANR	9002820	Identifier	code		9002688	0					
ANR	9002821	ReturnType	static int		9002688	1					
ANR	9002822	Identifier	validatedevicepspace		9002688	2					
ANR	9002823	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		9002688	3					
ANR	9002824	Parameter	i_ctx_t * i_ctx_p	4897:32:155298:155314	9002688	0	True				
ANR	9002825	ParameterType	i_ctx_t *		9002688	0					
ANR	9002826	Identifier	i_ctx_p		9002688	1					
ANR	9002827	Parameter	ref * * space	4897:51:155317:155327	9002688	1	True				
ANR	9002828	ParameterType	ref * *		9002688	0					
ANR	9002829	Identifier	space		9002688	1					
ANR	9002830	CFGEntryNode	ENTRY		9002688		True				
ANR	9002831	CFGExitNode	EXIT		9002688		True				
ANR	9002832	Symbol	code		9002688						
ANR	9002833	Symbol	bpp		9002688						
ANR	9002834	Symbol	gs_error_rangecheck		9002688						
ANR	9002835	Symbol	array_get		9002688						
ANR	9002836	Symbol	bpp . value		9002688						
ANR	9002837	Symbol	space		9002688						
ANR	9002838	Symbol	& bpp		9002688						
ANR	9002839	Symbol	r		9002688						
ANR	9002840	Symbol	gs_error_typecheck		9002688						
ANR	9002841	Symbol	r_has_type		9002688						
ANR	9002842	Symbol	t_integer		9002688						
ANR	9002843	Symbol	i_ctx_p		9002688						
ANR	9002844	Symbol	r_size		9002688						
ANR	9002845	Symbol	* space		9002688						
ANR	9002846	Symbol	r_is_array		9002688						
ANR	9002847	Symbol	imemory		9002688						
ANR	9002848	Symbol	bpp . value . intval		9002688						
ANR	9002849	Function	devicepdomain	4921:0:155978:156240							
ANR	9002850	FunctionDef	"devicepdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9002849	0					
ANR	9002851	CompoundStatement		4922:0:156046:156240	9002849	0					
ANR	9002852	IdentifierDeclStatement	int code ;	4923:4:156052:156060	9002849	0	True				
ANR	9002853	IdentifierDecl	code		9002849	0					
ANR	9002854	IdentifierDeclType	int		9002849	0					
ANR	9002855	Identifier	code		9002849	1					
ANR	9002856	IdentifierDeclStatement	ref tref ;	4924:4:156066:156074	9002849	1	True				
ANR	9002857	IdentifierDecl	tref		9002849	0					
ANR	9002858	IdentifierDeclType	ref		9002849	0					
ANR	9002859	Identifier	tref		9002849	1					
ANR	9002860	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4926:4:156081:156123	9002849	2	True				
ANR	9002861	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		9002849	0		=			
ANR	9002862	Identifier	code		9002849	0					
ANR	9002863	CallExpression	"array_get ( imemory , space , 1 , & tref )"		9002849	1					
ANR	9002864	Callee	array_get		9002849	0					
ANR	9002865	Identifier	array_get		9002849	0					
ANR	9002866	ArgumentList	imemory		9002849	1					
ANR	9002867	Argument	imemory		9002849	0					
ANR	9002868	Identifier	imemory		9002849	0					
ANR	9002869	Argument	space		9002849	1					
ANR	9002870	Identifier	space		9002849	0					
ANR	9002871	Argument	1		9002849	2					
ANR	9002872	PrimaryExpression	1		9002849	0					
ANR	9002873	Argument	& tref		9002849	3					
ANR	9002874	UnaryOperationExpression	& tref		9002849	0					
ANR	9002875	UnaryOperator	&		9002849	0					
ANR	9002876	Identifier	tref		9002849	1					
ANR	9002877	IfStatement	if ( code < 0 )		9002849	3					
ANR	9002878	Condition	code < 0	4927:8:156133:156140	9002849	0	True				
ANR	9002879	RelationalExpression	code < 0		9002849	0		<			
ANR	9002880	Identifier	code		9002849	0					
ANR	9002881	PrimaryExpression	0		9002849	1					
ANR	9002882	ReturnStatement	return code ;	4928:8:156151:156162	9002849	1	True				
ANR	9002883	Identifier	code		9002849	0					
ANR	9002884	ExpressionStatement	ptr [ 0 ] = 0	4929:4:156168:156178	9002849	4	True				
ANR	9002885	AssignmentExpression	ptr [ 0 ] = 0		9002849	0		=			
ANR	9002886	ArrayIndexing	ptr [ 0 ]		9002849	0					
ANR	9002887	Identifier	ptr		9002849	0					
ANR	9002888	PrimaryExpression	0		9002849	1					
ANR	9002889	PrimaryExpression	0		9002849	1					
ANR	9002890	ExpressionStatement	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )	4930:4:156184:156224	9002849	5	True				
ANR	9002891	AssignmentExpression	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )		9002849	0		=			
ANR	9002892	ArrayIndexing	ptr [ 1 ]		9002849	0					
ANR	9002893	Identifier	ptr		9002849	0					
ANR	9002894	PrimaryExpression	1		9002849	1					
ANR	9002895	CastExpression	( float ) ( 1 << tref . value . intval )		9002849	1					
ANR	9002896	CastTarget	float		9002849	0					
ANR	9002897	ShiftExpression	1 << tref . value . intval		9002849	1		<<			
ANR	9002898	PrimaryExpression	1		9002849	0					
ANR	9002899	MemberAccess	tref . value . intval		9002849	1					
ANR	9002900	MemberAccess	tref . value		9002849	0					
ANR	9002901	Identifier	tref		9002849	0					
ANR	9002902	Identifier	value		9002849	1					
ANR	9002903	Identifier	intval		9002849	1					
ANR	9002904	ReturnStatement	return 0 ;	4931:4:156230:156238	9002849	6	True				
ANR	9002905	PrimaryExpression	0		9002849	0					
ANR	9002906	ReturnType	static int		9002849	1					
ANR	9002907	Identifier	devicepdomain		9002849	2					
ANR	9002908	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9002849	3					
ANR	9002909	Parameter	i_ctx_t * i_ctx_p	4921:25:156003:156019	9002849	0	True				
ANR	9002910	ParameterType	i_ctx_t *		9002849	0					
ANR	9002911	Identifier	i_ctx_p		9002849	1					
ANR	9002912	Parameter	ref * space	4921:44:156022:156031	9002849	1	True				
ANR	9002913	ParameterType	ref *		9002849	0					
ANR	9002914	Identifier	space		9002849	1					
ANR	9002915	Parameter	float * ptr	4921:56:156034:156043	9002849	2	True				
ANR	9002916	ParameterType	float *		9002849	0					
ANR	9002917	Identifier	ptr		9002849	1					
ANR	9002918	CFGEntryNode	ENTRY		9002849		True				
ANR	9002919	CFGExitNode	EXIT		9002849		True				
ANR	9002920	Symbol	tref . value . intval		9002849						
ANR	9002921	Symbol	code		9002849						
ANR	9002922	Symbol	i_ctx_p		9002849						
ANR	9002923	Symbol	array_get		9002849						
ANR	9002924	Symbol	& tref		9002849						
ANR	9002925	Symbol	* ptr		9002849						
ANR	9002926	Symbol	tref		9002849						
ANR	9002927	Symbol	imemory		9002849						
ANR	9002928	Symbol	space		9002849						
ANR	9002929	Symbol	tref . value		9002849						
ANR	9002930	Symbol	ptr		9002849						
ANR	9002931	Function	deviceprange	4933:0:156242:156503							
ANR	9002932	FunctionDef	"deviceprange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9002931	0					
ANR	9002933	CompoundStatement		4934:0:156309:156503	9002931	0					
ANR	9002934	IdentifierDeclStatement	int code ;	4935:4:156315:156323	9002931	0	True				
ANR	9002935	IdentifierDecl	code		9002931	0					
ANR	9002936	IdentifierDeclType	int		9002931	0					
ANR	9002937	Identifier	code		9002931	1					
ANR	9002938	IdentifierDeclStatement	ref tref ;	4936:4:156329:156337	9002931	1	True				
ANR	9002939	IdentifierDecl	tref		9002931	0					
ANR	9002940	IdentifierDeclType	ref		9002931	0					
ANR	9002941	Identifier	tref		9002931	1					
ANR	9002942	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4938:4:156344:156386	9002931	2	True				
ANR	9002943	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		9002931	0		=			
ANR	9002944	Identifier	code		9002931	0					
ANR	9002945	CallExpression	"array_get ( imemory , space , 1 , & tref )"		9002931	1					
ANR	9002946	Callee	array_get		9002931	0					
ANR	9002947	Identifier	array_get		9002931	0					
ANR	9002948	ArgumentList	imemory		9002931	1					
ANR	9002949	Argument	imemory		9002931	0					
ANR	9002950	Identifier	imemory		9002931	0					
ANR	9002951	Argument	space		9002931	1					
ANR	9002952	Identifier	space		9002931	0					
ANR	9002953	Argument	1		9002931	2					
ANR	9002954	PrimaryExpression	1		9002931	0					
ANR	9002955	Argument	& tref		9002931	3					
ANR	9002956	UnaryOperationExpression	& tref		9002931	0					
ANR	9002957	UnaryOperator	&		9002931	0					
ANR	9002958	Identifier	tref		9002931	1					
ANR	9002959	IfStatement	if ( code < 0 )		9002931	3					
ANR	9002960	Condition	code < 0	4939:8:156396:156403	9002931	0	True				
ANR	9002961	RelationalExpression	code < 0		9002931	0		<			
ANR	9002962	Identifier	code		9002931	0					
ANR	9002963	PrimaryExpression	0		9002931	1					
ANR	9002964	ReturnStatement	return code ;	4940:8:156414:156425	9002931	1	True				
ANR	9002965	Identifier	code		9002931	0					
ANR	9002966	ExpressionStatement	ptr [ 0 ] = 0	4941:4:156431:156441	9002931	4	True				
ANR	9002967	AssignmentExpression	ptr [ 0 ] = 0		9002931	0		=			
ANR	9002968	ArrayIndexing	ptr [ 0 ]		9002931	0					
ANR	9002969	Identifier	ptr		9002931	0					
ANR	9002970	PrimaryExpression	0		9002931	1					
ANR	9002971	PrimaryExpression	0		9002931	1					
ANR	9002972	ExpressionStatement	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )	4942:4:156447:156487	9002931	5	True				
ANR	9002973	AssignmentExpression	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )		9002931	0		=			
ANR	9002974	ArrayIndexing	ptr [ 1 ]		9002931	0					
ANR	9002975	Identifier	ptr		9002931	0					
ANR	9002976	PrimaryExpression	1		9002931	1					
ANR	9002977	CastExpression	( float ) ( 1 << tref . value . intval )		9002931	1					
ANR	9002978	CastTarget	float		9002931	0					
ANR	9002979	ShiftExpression	1 << tref . value . intval		9002931	1		<<			
ANR	9002980	PrimaryExpression	1		9002931	0					
ANR	9002981	MemberAccess	tref . value . intval		9002931	1					
ANR	9002982	MemberAccess	tref . value		9002931	0					
ANR	9002983	Identifier	tref		9002931	0					
ANR	9002984	Identifier	value		9002931	1					
ANR	9002985	Identifier	intval		9002931	1					
ANR	9002986	ReturnStatement	return 0 ;	4943:4:156493:156501	9002931	6	True				
ANR	9002987	PrimaryExpression	0		9002931	0					
ANR	9002988	ReturnType	static int		9002931	1					
ANR	9002989	Identifier	deviceprange		9002931	2					
ANR	9002990	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9002931	3					
ANR	9002991	Parameter	i_ctx_t * i_ctx_p	4933:24:156266:156282	9002931	0	True				
ANR	9002992	ParameterType	i_ctx_t *		9002931	0					
ANR	9002993	Identifier	i_ctx_p		9002931	1					
ANR	9002994	Parameter	ref * space	4933:43:156285:156294	9002931	1	True				
ANR	9002995	ParameterType	ref *		9002931	0					
ANR	9002996	Identifier	space		9002931	1					
ANR	9002997	Parameter	float * ptr	4933:55:156297:156306	9002931	2	True				
ANR	9002998	ParameterType	float *		9002931	0					
ANR	9002999	Identifier	ptr		9002931	1					
ANR	9003000	CFGEntryNode	ENTRY		9002931		True				
ANR	9003001	CFGExitNode	EXIT		9002931		True				
ANR	9003002	Symbol	tref . value . intval		9002931						
ANR	9003003	Symbol	code		9002931						
ANR	9003004	Symbol	i_ctx_p		9002931						
ANR	9003005	Symbol	array_get		9002931						
ANR	9003006	Symbol	& tref		9002931						
ANR	9003007	Symbol	* ptr		9002931						
ANR	9003008	Symbol	tref		9002931						
ANR	9003009	Symbol	imemory		9002931						
ANR	9003010	Symbol	space		9002931						
ANR	9003011	Symbol	tref . value		9002931						
ANR	9003012	Symbol	ptr		9002931						
ANR	9003013	Function	devicepbasecolor	4945:0:156505:156706							
ANR	9003014	FunctionDef	"devicepbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		9003013	0					
ANR	9003015	CompoundStatement		4946:0:156615:156706	9003013	0					
ANR	9003016	IdentifierDeclStatement	os_ptr op = osp ;	4947:4:156621:156637	9003013	0	True				
ANR	9003017	IdentifierDecl	op = osp		9003013	0					
ANR	9003018	IdentifierDeclType	os_ptr		9003013	0					
ANR	9003019	Identifier	op		9003013	1					
ANR	9003020	AssignmentExpression	op = osp		9003013	2		=			
ANR	9003021	Identifier	osp		9003013	0					
ANR	9003022	Identifier	osp		9003013	1					
ANR	9003023	ExpressionStatement	* stage = 0	4949:4:156644:156654	9003013	1	True				
ANR	9003024	AssignmentExpression	* stage = 0		9003013	0		=			
ANR	9003025	UnaryOperationExpression	* stage		9003013	0					
ANR	9003026	UnaryOperator	*		9003013	0					
ANR	9003027	Identifier	stage		9003013	1					
ANR	9003028	PrimaryExpression	0		9003013	1					
ANR	9003029	ExpressionStatement	* cont = 0	4950:4:156660:156669	9003013	2	True				
ANR	9003030	AssignmentExpression	* cont = 0		9003013	0		=			
ANR	9003031	UnaryOperationExpression	* cont		9003013	0					
ANR	9003032	UnaryOperator	*		9003013	0					
ANR	9003033	Identifier	cont		9003013	1					
ANR	9003034	PrimaryExpression	0		9003013	1					
ANR	9003035	ExpressionStatement	"make_int ( op , 0 )"	4951:4:156675:156690	9003013	3	True				
ANR	9003036	CallExpression	"make_int ( op , 0 )"		9003013	0					
ANR	9003037	Callee	make_int		9003013	0					
ANR	9003038	Identifier	make_int		9003013	0					
ANR	9003039	ArgumentList	op		9003013	1					
ANR	9003040	Argument	op		9003013	0					
ANR	9003041	Identifier	op		9003013	0					
ANR	9003042	Argument	0		9003013	1					
ANR	9003043	PrimaryExpression	0		9003013	0					
ANR	9003044	ReturnStatement	return 0 ;	4952:4:156696:156704	9003013	4	True				
ANR	9003045	PrimaryExpression	0		9003013	0					
ANR	9003046	ReturnType	static int		9003013	1					
ANR	9003047	Identifier	devicepbasecolor		9003013	2					
ANR	9003048	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		9003013	3					
ANR	9003049	Parameter	i_ctx_t * i_ctx_p	4945:28:156533:156549	9003013	0	True				
ANR	9003050	ParameterType	i_ctx_t *		9003013	0					
ANR	9003051	Identifier	i_ctx_p		9003013	1					
ANR	9003052	Parameter	ref * space	4945:47:156552:156561	9003013	1	True				
ANR	9003053	ParameterType	ref *		9003013	0					
ANR	9003054	Identifier	space		9003013	1					
ANR	9003055	Parameter	int base	4945:59:156564:156571	9003013	2	True				
ANR	9003056	ParameterType	int		9003013	0					
ANR	9003057	Identifier	base		9003013	1					
ANR	9003058	Parameter	int * stage	4945:69:156574:156583	9003013	3	True				
ANR	9003059	ParameterType	int *		9003013	0					
ANR	9003060	Identifier	stage		9003013	1					
ANR	9003061	Parameter	int * cont	4945:81:156586:156594	9003013	4	True				
ANR	9003062	ParameterType	int *		9003013	0					
ANR	9003063	Identifier	cont		9003013	1					
ANR	9003064	Parameter	int * stack_depth	4945:92:156597:156612	9003013	5	True				
ANR	9003065	ParameterType	int *		9003013	0					
ANR	9003066	Identifier	stack_depth		9003013	1					
ANR	9003067	CFGEntryNode	ENTRY		9003013		True				
ANR	9003068	CFGExitNode	EXIT		9003013		True				
ANR	9003069	Symbol	stack_depth		9003013						
ANR	9003070	Symbol	op		9003013						
ANR	9003071	Symbol	* stage		9003013						
ANR	9003072	Symbol	stage		9003013						
ANR	9003073	Symbol	* cont		9003013						
ANR	9003074	Symbol	i_ctx_p		9003013						
ANR	9003075	Symbol	cont		9003013						
ANR	9003076	Symbol	osp		9003013						
ANR	9003077	Symbol	space		9003013						
ANR	9003078	Symbol	base		9003013						
ANR	9003079	Function	devicepvalidate	4954:0:156708:156811							
ANR	9003080	FunctionDef	"devicepvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		9003079	0					
ANR	9003081	CompoundStatement		4955:0:156795:156811	9003079	0					
ANR	9003082	ReturnStatement	return 0 ;	4956:4:156801:156809	9003079	0	True				
ANR	9003083	PrimaryExpression	0		9003079	0					
ANR	9003084	ReturnType	static int		9003079	1					
ANR	9003085	Identifier	devicepvalidate		9003079	2					
ANR	9003086	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		9003079	3					
ANR	9003087	Parameter	i_ctx_t * i_ctx_p	4954:27:156735:156750	9003079	0	True				
ANR	9003088	ParameterType	i_ctx_t *		9003079	0					
ANR	9003089	Identifier	i_ctx_p		9003079	1					
ANR	9003090	Parameter	ref * space	4954:45:156753:156762	9003079	1	True				
ANR	9003091	ParameterType	ref *		9003079	0					
ANR	9003092	Identifier	space		9003079	1					
ANR	9003093	Parameter	float * values	4954:57:156765:156777	9003079	2	True				
ANR	9003094	ParameterType	float *		9003079	0					
ANR	9003095	Identifier	values		9003079	1					
ANR	9003096	Parameter	int num_comps	4954:72:156780:156792	9003079	3	True				
ANR	9003097	ParameterType	int		9003079	0					
ANR	9003098	Identifier	num_comps		9003079	1					
ANR	9003099	CFGEntryNode	ENTRY		9003079		True				
ANR	9003100	CFGExitNode	EXIT		9003079		True				
ANR	9003101	Symbol	i_ctx_p		9003079						
ANR	9003102	Symbol	values		9003079						
ANR	9003103	Symbol	num_comps		9003079						
ANR	9003104	Symbol	space		9003079						
ANR	9003105	Function	set_dev_space	4959:0:156814:157364							
ANR	9003106	FunctionDef	"set_dev_space (i_ctx_t * i_ctx_p , int components)"		9003105	0					
ANR	9003107	CompoundStatement		4960:0:156874:157364	9003105	0					
ANR	9003108	IdentifierDeclStatement	"int code , stage = 1 , cont = 0 ;"	4961:4:156880:156909	9003105	0	True				
ANR	9003109	IdentifierDecl	code		9003105	0					
ANR	9003110	IdentifierDeclType	int		9003105	0					
ANR	9003111	Identifier	code		9003105	1					
ANR	9003112	IdentifierDecl	stage = 1		9003105	1					
ANR	9003113	IdentifierDeclType	int		9003105	0					
ANR	9003114	Identifier	stage		9003105	1					
ANR	9003115	AssignmentExpression	stage = 1		9003105	2		=			
ANR	9003116	Identifier	stage		9003105	0					
ANR	9003117	PrimaryExpression	1		9003105	1					
ANR	9003118	IdentifierDecl	cont = 0		9003105	2					
ANR	9003119	IdentifierDeclType	int		9003105	0					
ANR	9003120	Identifier	cont		9003105	1					
ANR	9003121	AssignmentExpression	cont = 0		9003105	2		=			
ANR	9003122	Identifier	cont		9003105	0					
ANR	9003123	PrimaryExpression	0		9003105	1					
ANR	9003124	SwitchStatement	switch ( components )		9003105	1					
ANR	9003125	Condition	components	4962:11:156922:156931	9003105	0	True				
ANR	9003126	Identifier	components		9003105	0					
ANR	9003127	CompoundStatement		3:23:59:59	9003105	1					
ANR	9003128	Label	case 1 :	4963:8:156944:156950	9003105	0	True				
ANR	9003129	ExpressionStatement	"code = setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4964:12:156964:157020	9003105	1	True				
ANR	9003130	AssignmentExpression	"code = setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	0		=			
ANR	9003131	Identifier	code		9003105	0					
ANR	9003132	CallExpression	"setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	1					
ANR	9003133	Callee	setgrayspace		9003105	0					
ANR	9003134	Identifier	setgrayspace		9003105	0					
ANR	9003135	ArgumentList	i_ctx_p		9003105	1					
ANR	9003136	Argument	i_ctx_p		9003105	0					
ANR	9003137	Identifier	i_ctx_p		9003105	0					
ANR	9003138	Argument	( ref * ) 0		9003105	1					
ANR	9003139	CastExpression	( ref * ) 0		9003105	0					
ANR	9003140	CastTarget	ref *		9003105	0					
ANR	9003141	PrimaryExpression	0		9003105	1					
ANR	9003142	Argument	& stage		9003105	2					
ANR	9003143	UnaryOperationExpression	& stage		9003105	0					
ANR	9003144	UnaryOperator	&		9003105	0					
ANR	9003145	Identifier	stage		9003105	1					
ANR	9003146	Argument	& cont		9003105	3					
ANR	9003147	UnaryOperationExpression	& cont		9003105	0					
ANR	9003148	UnaryOperator	&		9003105	0					
ANR	9003149	Identifier	cont		9003105	1					
ANR	9003150	Argument	1		9003105	4					
ANR	9003151	PrimaryExpression	1		9003105	0					
ANR	9003152	BreakStatement	break ;	4965:12:157034:157039	9003105	2	True				
ANR	9003153	Label	case 3 :	4966:8:157049:157055	9003105	3	True				
ANR	9003154	ExpressionStatement	"code = setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4967:12:157069:157124	9003105	4	True				
ANR	9003155	AssignmentExpression	"code = setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	0		=			
ANR	9003156	Identifier	code		9003105	0					
ANR	9003157	CallExpression	"setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	1					
ANR	9003158	Callee	setrgbspace		9003105	0					
ANR	9003159	Identifier	setrgbspace		9003105	0					
ANR	9003160	ArgumentList	i_ctx_p		9003105	1					
ANR	9003161	Argument	i_ctx_p		9003105	0					
ANR	9003162	Identifier	i_ctx_p		9003105	0					
ANR	9003163	Argument	( ref * ) 0		9003105	1					
ANR	9003164	CastExpression	( ref * ) 0		9003105	0					
ANR	9003165	CastTarget	ref *		9003105	0					
ANR	9003166	PrimaryExpression	0		9003105	1					
ANR	9003167	Argument	& stage		9003105	2					
ANR	9003168	UnaryOperationExpression	& stage		9003105	0					
ANR	9003169	UnaryOperator	&		9003105	0					
ANR	9003170	Identifier	stage		9003105	1					
ANR	9003171	Argument	& cont		9003105	3					
ANR	9003172	UnaryOperationExpression	& cont		9003105	0					
ANR	9003173	UnaryOperator	&		9003105	0					
ANR	9003174	Identifier	cont		9003105	1					
ANR	9003175	Argument	1		9003105	4					
ANR	9003176	PrimaryExpression	1		9003105	0					
ANR	9003177	BreakStatement	break ;	4968:12:157138:157143	9003105	5	True				
ANR	9003178	Label	case 4 :	4969:8:157153:157159	9003105	6	True				
ANR	9003179	ExpressionStatement	"code = setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4970:12:157173:157229	9003105	7	True				
ANR	9003180	AssignmentExpression	"code = setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	0		=			
ANR	9003181	Identifier	code		9003105	0					
ANR	9003182	CallExpression	"setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		9003105	1					
ANR	9003183	Callee	setcmykspace		9003105	0					
ANR	9003184	Identifier	setcmykspace		9003105	0					
ANR	9003185	ArgumentList	i_ctx_p		9003105	1					
ANR	9003186	Argument	i_ctx_p		9003105	0					
ANR	9003187	Identifier	i_ctx_p		9003105	0					
ANR	9003188	Argument	( ref * ) 0		9003105	1					
ANR	9003189	CastExpression	( ref * ) 0		9003105	0					
ANR	9003190	CastTarget	ref *		9003105	0					
ANR	9003191	PrimaryExpression	0		9003105	1					
ANR	9003192	Argument	& stage		9003105	2					
ANR	9003193	UnaryOperationExpression	& stage		9003105	0					
ANR	9003194	UnaryOperator	&		9003105	0					
ANR	9003195	Identifier	stage		9003105	1					
ANR	9003196	Argument	& cont		9003105	3					
ANR	9003197	UnaryOperationExpression	& cont		9003105	0					
ANR	9003198	UnaryOperator	&		9003105	0					
ANR	9003199	Identifier	cont		9003105	1					
ANR	9003200	Argument	1		9003105	4					
ANR	9003201	PrimaryExpression	1		9003105	0					
ANR	9003202	BreakStatement	break ;	4971:12:157243:157248	9003105	8	True				
ANR	9003203	Label	default :	4972:8:157258:157265	9003105	9	True				
ANR	9003204	Identifier	default		9003105	0					
ANR	9003205	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	4973:12:157279:157320	9003105	10	True				
ANR	9003206	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		9003105	0		=			
ANR	9003207	Identifier	code		9003105	0					
ANR	9003208	CallExpression	gs_note_error ( gs_error_rangecheck )		9003105	1					
ANR	9003209	Callee	gs_note_error		9003105	0					
ANR	9003210	Identifier	gs_note_error		9003105	0					
ANR	9003211	ArgumentList	gs_error_rangecheck		9003105	1					
ANR	9003212	Argument	gs_error_rangecheck		9003105	0					
ANR	9003213	Identifier	gs_error_rangecheck		9003105	0					
ANR	9003214	BreakStatement	break ;	4974:12:157334:157339	9003105	11	True				
ANR	9003215	ReturnStatement	return code ;	4976:4:157351:157362	9003105	2	True				
ANR	9003216	Identifier	code		9003105	0					
ANR	9003217	ReturnType	static int		9003105	1					
ANR	9003218	Identifier	set_dev_space		9003105	2					
ANR	9003219	ParameterList	"i_ctx_t * i_ctx_p , int components"		9003105	3					
ANR	9003220	Parameter	i_ctx_t * i_ctx_p	4959:25:156839:156855	9003105	0	True				
ANR	9003221	ParameterType	i_ctx_t *		9003105	0					
ANR	9003222	Identifier	i_ctx_p		9003105	1					
ANR	9003223	Parameter	int components	4959:44:156858:156871	9003105	1	True				
ANR	9003224	ParameterType	int		9003105	0					
ANR	9003225	Identifier	components		9003105	1					
ANR	9003226	CFGEntryNode	ENTRY		9003105		True				
ANR	9003227	CFGExitNode	EXIT		9003105		True				
ANR	9003228	Symbol	components		9003105						
ANR	9003229	Symbol	gs_note_error		9003105						
ANR	9003230	Symbol	code		9003105						
ANR	9003231	Symbol	stage		9003105						
ANR	9003232	Symbol	gs_error_rangecheck		9003105						
ANR	9003233	Symbol	& cont		9003105						
ANR	9003234	Symbol	i_ctx_p		9003105						
ANR	9003235	Symbol	& stage		9003105						
ANR	9003236	Symbol	setrgbspace		9003105						
ANR	9003237	Symbol	cont		9003105						
ANR	9003238	Symbol	setgrayspace		9003105						
ANR	9003239	Symbol	setcmykspace		9003105						
ANR	9003240	Function	checkrangeab	4982:0:157439:158390							
ANR	9003241	FunctionDef	"checkrangeab (i_ctx_t * i_ctx_p , ref * labdict)"		9003240	0					
ANR	9003242	CompoundStatement		4983:0:157496:158390	9003240	0					
ANR	9003243	IdentifierDeclStatement	"int code = 0 , i ;"	4984:4:157502:157517	9003240	0	True				
ANR	9003244	IdentifierDecl	code = 0		9003240	0					
ANR	9003245	IdentifierDeclType	int		9003240	0					
ANR	9003246	Identifier	code		9003240	1					
ANR	9003247	AssignmentExpression	code = 0		9003240	2		=			
ANR	9003248	Identifier	code		9003240	0					
ANR	9003249	PrimaryExpression	0		9003240	1					
ANR	9003250	IdentifierDecl	i		9003240	1					
ANR	9003251	IdentifierDeclType	int		9003240	0					
ANR	9003252	Identifier	i		9003240	1					
ANR	9003253	IdentifierDeclStatement	float value [ 4 ] ;	4985:4:157523:157537	9003240	1	True				
ANR	9003254	IdentifierDecl	value [ 4 ]		9003240	0					
ANR	9003255	IdentifierDeclType	float [ 4 ]		9003240	0					
ANR	9003256	Identifier	value		9003240	1					
ANR	9003257	PrimaryExpression	4		9003240	2					
ANR	9003258	IdentifierDeclStatement	"ref * tempref , valref ;"	4986:4:157543:157563	9003240	2	True				
ANR	9003259	IdentifierDecl	* tempref		9003240	0					
ANR	9003260	IdentifierDeclType	ref *		9003240	0					
ANR	9003261	Identifier	tempref		9003240	1					
ANR	9003262	IdentifierDecl	valref		9003240	1					
ANR	9003263	IdentifierDeclType	ref		9003240	0					
ANR	9003264	Identifier	valref		9003240	1					
ANR	9003265	ExpressionStatement	"code = dict_find_string ( labdict , ""Range"" , & tempref )"	4988:4:157570:157621	9003240	3	True				
ANR	9003266	AssignmentExpression	"code = dict_find_string ( labdict , ""Range"" , & tempref )"		9003240	0		=			
ANR	9003267	Identifier	code		9003240	0					
ANR	9003268	CallExpression	"dict_find_string ( labdict , ""Range"" , & tempref )"		9003240	1					
ANR	9003269	Callee	dict_find_string		9003240	0					
ANR	9003270	Identifier	dict_find_string		9003240	0					
ANR	9003271	ArgumentList	labdict		9003240	1					
ANR	9003272	Argument	labdict		9003240	0					
ANR	9003273	Identifier	labdict		9003240	0					
ANR	9003274	Argument	"""Range"""		9003240	1					
ANR	9003275	PrimaryExpression	"""Range"""		9003240	0					
ANR	9003276	Argument	& tempref		9003240	2					
ANR	9003277	UnaryOperationExpression	& tempref		9003240	0					
ANR	9003278	UnaryOperator	&		9003240	0					
ANR	9003279	Identifier	tempref		9003240	1					
ANR	9003280	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9003240	4					
ANR	9003281	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	4989:8:157631:157670	9003240	0	True				
ANR	9003282	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9003240	0		&&			
ANR	9003283	RelationalExpression	code > 0		9003240	0		>			
ANR	9003284	Identifier	code		9003240	0					
ANR	9003285	PrimaryExpression	0		9003240	1					
ANR	9003286	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9003240	1					
ANR	9003287	UnaryOperator	!		9003240	0					
ANR	9003288	CallExpression	"r_has_type ( tempref , t_null )"		9003240	1					
ANR	9003289	Callee	r_has_type		9003240	0					
ANR	9003290	Identifier	r_has_type		9003240	0					
ANR	9003291	ArgumentList	tempref		9003240	1					
ANR	9003292	Argument	tempref		9003240	0					
ANR	9003293	Identifier	tempref		9003240	0					
ANR	9003294	Argument	t_null		9003240	1					
ANR	9003295	Identifier	t_null		9003240	0					
ANR	9003296	CompoundStatement		7:50:176:176	9003240	1					
ANR	9003297	IfStatement	if ( ! r_is_array ( tempref ) )		9003240	0					
ANR	9003298	Condition	! r_is_array ( tempref )	4990:12:157687:157706	9003240	0	True				
ANR	9003299	UnaryOperationExpression	! r_is_array ( tempref )		9003240	0					
ANR	9003300	UnaryOperator	!		9003240	0					
ANR	9003301	CallExpression	r_is_array ( tempref )		9003240	1					
ANR	9003302	Callee	r_is_array		9003240	0					
ANR	9003303	Identifier	r_is_array		9003240	0					
ANR	9003304	ArgumentList	tempref		9003240	1					
ANR	9003305	Argument	tempref		9003240	0					
ANR	9003306	Identifier	tempref		9003240	0					
ANR	9003307	ExpressionStatement	return_error ( gs_error_typecheck )	4991:12:157721:157753	9003240	1	True				
ANR	9003308	CallExpression	return_error ( gs_error_typecheck )		9003240	0					
ANR	9003309	Callee	return_error		9003240	0					
ANR	9003310	Identifier	return_error		9003240	0					
ANR	9003311	ArgumentList	gs_error_typecheck		9003240	1					
ANR	9003312	Argument	gs_error_typecheck		9003240	0					
ANR	9003313	Identifier	gs_error_typecheck		9003240	0					
ANR	9003314	IfStatement	if ( r_size ( tempref ) != 4 )		9003240	1					
ANR	9003315	Condition	r_size ( tempref ) != 4	4992:12:157767:157786	9003240	0	True				
ANR	9003316	EqualityExpression	r_size ( tempref ) != 4		9003240	0		!=			
ANR	9003317	CallExpression	r_size ( tempref )		9003240	0					
ANR	9003318	Callee	r_size		9003240	0					
ANR	9003319	Identifier	r_size		9003240	0					
ANR	9003320	ArgumentList	tempref		9003240	1					
ANR	9003321	Argument	tempref		9003240	0					
ANR	9003322	Identifier	tempref		9003240	0					
ANR	9003323	PrimaryExpression	4		9003240	1					
ANR	9003324	ExpressionStatement	return_error ( gs_error_rangecheck )	4993:12:157801:157834	9003240	1	True				
ANR	9003325	CallExpression	return_error ( gs_error_rangecheck )		9003240	0					
ANR	9003326	Callee	return_error		9003240	0					
ANR	9003327	Identifier	return_error		9003240	0					
ANR	9003328	ArgumentList	gs_error_rangecheck		9003240	1					
ANR	9003329	Argument	gs_error_rangecheck		9003240	0					
ANR	9003330	Identifier	gs_error_rangecheck		9003240	0					
ANR	9003331	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		9003240	2					
ANR	9003332	ForInit	i = 0 ;	4995:13:157850:157853	9003240	0	True				
ANR	9003333	AssignmentExpression	i = 0		9003240	0		=			
ANR	9003334	Identifier	i		9003240	0					
ANR	9003335	PrimaryExpression	0		9003240	1					
ANR	9003336	Condition	i < 4	4995:17:157854:157856	9003240	1	True				
ANR	9003337	RelationalExpression	i < 4		9003240	0		<			
ANR	9003338	Identifier	i		9003240	0					
ANR	9003339	PrimaryExpression	4		9003240	1					
ANR	9003340	PostIncDecOperationExpression	i ++	4995:21:157858:157860	9003240	2	True				
ANR	9003341	Identifier	i		9003240	0					
ANR	9003342	IncDec	++		9003240	1					
ANR	9003343	CompoundStatement		13:26:366:366	9003240	3					
ANR	9003344	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	4996:12:157877:157923	9003240	0	True				
ANR	9003345	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9003240	0		=			
ANR	9003346	Identifier	code		9003240	0					
ANR	9003347	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9003240	1					
ANR	9003348	Callee	array_get		9003240	0					
ANR	9003349	Identifier	array_get		9003240	0					
ANR	9003350	ArgumentList	imemory		9003240	1					
ANR	9003351	Argument	imemory		9003240	0					
ANR	9003352	Identifier	imemory		9003240	0					
ANR	9003353	Argument	tempref		9003240	1					
ANR	9003354	Identifier	tempref		9003240	0					
ANR	9003355	Argument	i		9003240	2					
ANR	9003356	Identifier	i		9003240	0					
ANR	9003357	Argument	& valref		9003240	3					
ANR	9003358	UnaryOperationExpression	& valref		9003240	0					
ANR	9003359	UnaryOperator	&		9003240	0					
ANR	9003360	Identifier	valref		9003240	1					
ANR	9003361	IfStatement	if ( code < 0 )		9003240	1					
ANR	9003362	Condition	code < 0	4997:16:157941:157948	9003240	0	True				
ANR	9003363	RelationalExpression	code < 0		9003240	0		<			
ANR	9003364	Identifier	code		9003240	0					
ANR	9003365	PrimaryExpression	0		9003240	1					
ANR	9003366	ReturnStatement	return code ;	4998:16:157967:157978	9003240	1	True				
ANR	9003367	Identifier	code		9003240	0					
ANR	9003368	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9003240	2					
ANR	9003369	Condition	"r_has_type ( & valref , t_integer )"	4999:16:157996:158025	9003240	0	True				
ANR	9003370	CallExpression	"r_has_type ( & valref , t_integer )"		9003240	0					
ANR	9003371	Callee	r_has_type		9003240	0					
ANR	9003372	Identifier	r_has_type		9003240	0					
ANR	9003373	ArgumentList	& valref		9003240	1					
ANR	9003374	Argument	& valref		9003240	0					
ANR	9003375	UnaryOperationExpression	& valref		9003240	0					
ANR	9003376	UnaryOperator	&		9003240	0					
ANR	9003377	Identifier	valref		9003240	1					
ANR	9003378	Argument	t_integer		9003240	1					
ANR	9003379	Identifier	t_integer		9003240	0					
ANR	9003380	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	5000:16:158044:158081	9003240	1	True				
ANR	9003381	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		9003240	0		=			
ANR	9003382	ArrayIndexing	value [ i ]		9003240	0					
ANR	9003383	Identifier	value		9003240	0					
ANR	9003384	Identifier	i		9003240	1					
ANR	9003385	CastExpression	( float ) valref . value . intval		9003240	1					
ANR	9003386	CastTarget	float		9003240	0					
ANR	9003387	MemberAccess	valref . value . intval		9003240	1					
ANR	9003388	MemberAccess	valref . value		9003240	0					
ANR	9003389	Identifier	valref		9003240	0					
ANR	9003390	Identifier	value		9003240	1					
ANR	9003391	Identifier	intval		9003240	1					
ANR	9003392	ElseStatement	else		9003240	0					
ANR	9003393	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		9003240	0					
ANR	9003394	Condition	"r_has_type ( & valref , t_real )"	5001:21:158104:158130	9003240	0	True				
ANR	9003395	CallExpression	"r_has_type ( & valref , t_real )"		9003240	0					
ANR	9003396	Callee	r_has_type		9003240	0					
ANR	9003397	Identifier	r_has_type		9003240	0					
ANR	9003398	ArgumentList	& valref		9003240	1					
ANR	9003399	Argument	& valref		9003240	0					
ANR	9003400	UnaryOperationExpression	& valref		9003240	0					
ANR	9003401	UnaryOperator	&		9003240	0					
ANR	9003402	Identifier	valref		9003240	1					
ANR	9003403	Argument	t_real		9003240	1					
ANR	9003404	Identifier	t_real		9003240	0					
ANR	9003405	ExpressionStatement	value [ i ] = ( float ) valref . value . realval	5002:16:158149:158187	9003240	1	True				
ANR	9003406	AssignmentExpression	value [ i ] = ( float ) valref . value . realval		9003240	0		=			
ANR	9003407	ArrayIndexing	value [ i ]		9003240	0					
ANR	9003408	Identifier	value		9003240	0					
ANR	9003409	Identifier	i		9003240	1					
ANR	9003410	CastExpression	( float ) valref . value . realval		9003240	1					
ANR	9003411	CastTarget	float		9003240	0					
ANR	9003412	MemberAccess	valref . value . realval		9003240	1					
ANR	9003413	MemberAccess	valref . value		9003240	0					
ANR	9003414	Identifier	valref		9003240	0					
ANR	9003415	Identifier	value		9003240	1					
ANR	9003416	Identifier	realval		9003240	1					
ANR	9003417	ElseStatement	else		9003240	0					
ANR	9003418	ExpressionStatement	return_error ( gs_error_typecheck )	5004:16:158222:158254	9003240	0	True				
ANR	9003419	CallExpression	return_error ( gs_error_typecheck )		9003240	0					
ANR	9003420	Callee	return_error		9003240	0					
ANR	9003421	Identifier	return_error		9003240	0					
ANR	9003422	ArgumentList	gs_error_typecheck		9003240	1					
ANR	9003423	Argument	gs_error_typecheck		9003240	0					
ANR	9003424	Identifier	gs_error_typecheck		9003240	0					
ANR	9003425	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] )		9003240	3					
ANR	9003426	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ]	5006:12:158278:158319	9003240	0	True				
ANR	9003427	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ]		9003240	0		||			
ANR	9003428	RelationalExpression	value [ 1 ] < value [ 0 ]		9003240	0		<			
ANR	9003429	ArrayIndexing	value [ 1 ]		9003240	0					
ANR	9003430	Identifier	value		9003240	0					
ANR	9003431	PrimaryExpression	1		9003240	1					
ANR	9003432	ArrayIndexing	value [ 0 ]		9003240	1					
ANR	9003433	Identifier	value		9003240	0					
ANR	9003434	PrimaryExpression	0		9003240	1					
ANR	9003435	RelationalExpression	value [ 3 ] < value [ 2 ]		9003240	1		<			
ANR	9003436	ArrayIndexing	value [ 3 ]		9003240	0					
ANR	9003437	Identifier	value		9003240	0					
ANR	9003438	PrimaryExpression	3		9003240	1					
ANR	9003439	ArrayIndexing	value [ 2 ]		9003240	1					
ANR	9003440	Identifier	value		9003240	0					
ANR	9003441	PrimaryExpression	2		9003240	1					
ANR	9003442	ExpressionStatement	return_error ( gs_error_rangecheck )	5007:12:158335:158368	9003240	1	True				
ANR	9003443	CallExpression	return_error ( gs_error_rangecheck )		9003240	0					
ANR	9003444	Callee	return_error		9003240	0					
ANR	9003445	Identifier	return_error		9003240	0					
ANR	9003446	ArgumentList	gs_error_rangecheck		9003240	1					
ANR	9003447	Argument	gs_error_rangecheck		9003240	0					
ANR	9003448	Identifier	gs_error_rangecheck		9003240	0					
ANR	9003449	ReturnStatement	return 0 ;	5009:4:158380:158388	9003240	5	True				
ANR	9003450	PrimaryExpression	0		9003240	0					
ANR	9003451	ReturnType	static int		9003240	1					
ANR	9003452	Identifier	checkrangeab		9003240	2					
ANR	9003453	ParameterList	"i_ctx_t * i_ctx_p , ref * labdict"		9003240	3					
ANR	9003454	Parameter	i_ctx_t * i_ctx_p	4982:24:157463:157479	9003240	0	True				
ANR	9003455	ParameterType	i_ctx_t *		9003240	0					
ANR	9003456	Identifier	i_ctx_p		9003240	1					
ANR	9003457	Parameter	ref * labdict	4982:43:157482:157493	9003240	1	True				
ANR	9003458	ParameterType	ref *		9003240	0					
ANR	9003459	Identifier	labdict		9003240	1					
ANR	9003460	CFGEntryNode	ENTRY		9003240		True				
ANR	9003461	CFGExitNode	EXIT		9003240		True				
ANR	9003462	Symbol	valref . value		9003240						
ANR	9003463	Symbol	code		9003240						
ANR	9003464	Symbol	gs_error_rangecheck		9003240						
ANR	9003465	Symbol	valref . value . realval		9003240						
ANR	9003466	Symbol	t_null		9003240						
ANR	9003467	Symbol	r_has_type		9003240						
ANR	9003468	Symbol	gs_error_typecheck		9003240						
ANR	9003469	Symbol	& valref		9003240						
ANR	9003470	Symbol	r_size		9003240						
ANR	9003471	Symbol	imemory		9003240						
ANR	9003472	Symbol	value		9003240						
ANR	9003473	Symbol	tempref		9003240						
ANR	9003474	Symbol	dict_find_string		9003240						
ANR	9003475	Symbol	array_get		9003240						
ANR	9003476	Symbol	i		9003240						
ANR	9003477	Symbol	& tempref		9003240						
ANR	9003478	Symbol	t_real		9003240						
ANR	9003479	Symbol	* i		9003240						
ANR	9003480	Symbol	t_integer		9003240						
ANR	9003481	Symbol	valref . value . intval		9003240						
ANR	9003482	Symbol	i_ctx_p		9003240						
ANR	9003483	Symbol	* value		9003240						
ANR	9003484	Symbol	valref		9003240						
ANR	9003485	Symbol	labdict		9003240						
ANR	9003486	Symbol	r_is_array		9003240						
ANR	9003487	Function	setlabspace	5012:0:158393:159982							
ANR	9003488	FunctionDef	"setlabspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9003487	0					
ANR	9003489	CompoundStatement		5014:0:158503:159982	9003487	0					
ANR	9003490	IdentifierDeclStatement	ref labdict ;	5017:4:158611:158622	9003487	0	True				
ANR	9003491	IdentifierDecl	labdict		9003487	0					
ANR	9003492	IdentifierDeclType	ref		9003487	0					
ANR	9003493	Identifier	labdict		9003487	1					
ANR	9003494	IdentifierDeclStatement	int code = 0 ;	5018:4:158628:158640	9003487	1	True				
ANR	9003495	IdentifierDecl	code = 0		9003487	0					
ANR	9003496	IdentifierDeclType	int		9003487	0					
ANR	9003497	Identifier	code		9003487	1					
ANR	9003498	AssignmentExpression	code = 0		9003487	2		=			
ANR	9003499	Identifier	code		9003487	0					
ANR	9003500	PrimaryExpression	0		9003487	1					
ANR	9003501	IdentifierDeclStatement	"float range_buff [ 4 ] , white [ 3 ] , black [ 3 ] ;"	5019:4:158646:158703	9003487	2	True				
ANR	9003502	IdentifierDecl	range_buff [ 4 ]		9003487	0					
ANR	9003503	IdentifierDeclType	float [ 4 ]		9003487	0					
ANR	9003504	Identifier	range_buff		9003487	1					
ANR	9003505	PrimaryExpression	4		9003487	2					
ANR	9003506	IdentifierDecl	white [ 3 ]		9003487	1					
ANR	9003507	IdentifierDeclType	float [ 3 ]		9003487	0					
ANR	9003508	Identifier	white		9003487	1					
ANR	9003509	PrimaryExpression	3		9003487	2					
ANR	9003510	IdentifierDecl	black [ 3 ]		9003487	2					
ANR	9003511	IdentifierDeclType	float [ 3 ]		9003487	0					
ANR	9003512	Identifier	black		9003487	1					
ANR	9003513	PrimaryExpression	3		9003487	2					
ANR	9003514	Statement	static	5020:4:158709:158714	9003487	3	True				
ANR	9003515	IdentifierDeclStatement	"const float dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 } ;"	5020:11:158716:158773	9003487	4	True				
ANR	9003516	IdentifierDecl	"dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 }"		9003487	0					
ANR	9003517	IdentifierDeclType	const float [ 4 ]		9003487	0					
ANR	9003518	Identifier	dflt_range		9003487	1					
ANR	9003519	PrimaryExpression	4		9003487	2					
ANR	9003520	AssignmentExpression	"dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 }"		9003487	3		=			
ANR	9003521	Identifier	dflt_range		9003487	0					
ANR	9003522	InitializerList	- 100		9003487	1					
ANR	9003523	UnaryOperationExpression	- 100		9003487	0					
ANR	9003524	UnaryOperator	-		9003487	0					
ANR	9003525	PrimaryExpression	100		9003487	1					
ANR	9003526	PrimaryExpression	100		9003487	1					
ANR	9003527	UnaryOperationExpression	- 100		9003487	2					
ANR	9003528	UnaryOperator	-		9003487	0					
ANR	9003529	PrimaryExpression	100		9003487	1					
ANR	9003530	PrimaryExpression	100		9003487	3					
ANR	9003531	Statement	static	5021:4:158779:158784	9003487	5	True				
ANR	9003532	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5021:11:158786:158851	9003487	6	True				
ANR	9003533	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9003487	0					
ANR	9003534	IdentifierDeclType	const float [ 3 ]		9003487	0					
ANR	9003535	Identifier	dflt_black		9003487	1					
ANR	9003536	PrimaryExpression	3		9003487	2					
ANR	9003537	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9003487	3		=			
ANR	9003538	Identifier	dflt_black		9003487	0					
ANR	9003539	InitializerList	0		9003487	1					
ANR	9003540	PrimaryExpression	0		9003487	0					
ANR	9003541	PrimaryExpression	0		9003487	1					
ANR	9003542	PrimaryExpression	0		9003487	2					
ANR	9003543	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9003487	1					
ANR	9003544	IdentifierDeclType	const float [ 3 ]		9003487	0					
ANR	9003545	Identifier	dflt_white		9003487	1					
ANR	9003546	PrimaryExpression	3		9003487	2					
ANR	9003547	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9003487	3		=			
ANR	9003548	Identifier	dflt_white		9003487	0					
ANR	9003549	InitializerList	0		9003487	1					
ANR	9003550	PrimaryExpression	0		9003487	0					
ANR	9003551	PrimaryExpression	0		9003487	1					
ANR	9003552	PrimaryExpression	0		9003487	2					
ANR	9003553	IdentifierDeclStatement	int i ;	5022:4:158857:158862	9003487	7	True				
ANR	9003554	IdentifierDecl	i		9003487	0					
ANR	9003555	IdentifierDeclType	int		9003487	0					
ANR	9003556	Identifier	i		9003487	1					
ANR	9003557	IdentifierDeclStatement	gs_client_color cc ;	5023:4:158868:158886	9003487	8	True				
ANR	9003558	IdentifierDecl	cc		9003487	0					
ANR	9003559	IdentifierDeclType	gs_client_color		9003487	0					
ANR	9003560	Identifier	cc		9003487	1					
ANR	9003561	ExpressionStatement	* cont = 0	5025:4:158893:158902	9003487	9	True				
ANR	9003562	AssignmentExpression	* cont = 0		9003487	0		=			
ANR	9003563	UnaryOperationExpression	* cont		9003487	0					
ANR	9003564	UnaryOperator	*		9003487	0					
ANR	9003565	Identifier	cont		9003487	1					
ANR	9003566	PrimaryExpression	0		9003487	1					
ANR	9003567	ExpressionStatement	"code = array_get ( imemory , r , 1 , & labdict )"	5026:4:158908:158949	9003487	10	True				
ANR	9003568	AssignmentExpression	"code = array_get ( imemory , r , 1 , & labdict )"		9003487	0		=			
ANR	9003569	Identifier	code		9003487	0					
ANR	9003570	CallExpression	"array_get ( imemory , r , 1 , & labdict )"		9003487	1					
ANR	9003571	Callee	array_get		9003487	0					
ANR	9003572	Identifier	array_get		9003487	0					
ANR	9003573	ArgumentList	imemory		9003487	1					
ANR	9003574	Argument	imemory		9003487	0					
ANR	9003575	Identifier	imemory		9003487	0					
ANR	9003576	Argument	r		9003487	1					
ANR	9003577	Identifier	r		9003487	0					
ANR	9003578	Argument	1		9003487	2					
ANR	9003579	PrimaryExpression	1		9003487	0					
ANR	9003580	Argument	& labdict		9003487	3					
ANR	9003581	UnaryOperationExpression	& labdict		9003487	0					
ANR	9003582	UnaryOperator	&		9003487	0					
ANR	9003583	Identifier	labdict		9003487	1					
ANR	9003584	IfStatement	if ( code < 0 )		9003487	11					
ANR	9003585	Condition	code < 0	5027:8:158959:158966	9003487	0	True				
ANR	9003586	RelationalExpression	code < 0		9003487	0		<			
ANR	9003587	Identifier	code		9003487	0					
ANR	9003588	PrimaryExpression	0		9003487	1					
ANR	9003589	ReturnStatement	return code ;	5028:8:158977:158988	9003487	1	True				
ANR	9003590	Identifier	code		9003487	0					
ANR	9003591	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"	5030:4:159018:159129	9003487	12	True				
ANR	9003592	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"		9003487	0		=			
ANR	9003593	Identifier	code		9003487	0					
ANR	9003594	CallExpression	"dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"		9003487	1					
ANR	9003595	Callee	dict_floats_param		9003487	0					
ANR	9003596	Identifier	dict_floats_param		9003487	0					
ANR	9003597	ArgumentList	imemory		9003487	1					
ANR	9003598	Argument	imemory		9003487	0					
ANR	9003599	Identifier	imemory		9003487	0					
ANR	9003600	Argument	& labdict		9003487	1					
ANR	9003601	UnaryOperationExpression	& labdict		9003487	0					
ANR	9003602	UnaryOperator	&		9003487	0					
ANR	9003603	Identifier	labdict		9003487	1					
ANR	9003604	Argument	"""Range"""		9003487	2					
ANR	9003605	PrimaryExpression	"""Range"""		9003487	0					
ANR	9003606	Argument	4		9003487	3					
ANR	9003607	PrimaryExpression	4		9003487	0					
ANR	9003608	Argument	range_buff		9003487	4					
ANR	9003609	Identifier	range_buff		9003487	0					
ANR	9003610	Argument	dflt_range		9003487	5					
ANR	9003611	Identifier	dflt_range		9003487	0					
ANR	9003612	IfStatement	if ( code < 0 )		9003487	13					
ANR	9003613	Condition	code < 0	5032:8:159139:159146	9003487	0	True				
ANR	9003614	RelationalExpression	code < 0		9003487	0		<			
ANR	9003615	Identifier	code		9003487	0					
ANR	9003616	PrimaryExpression	0		9003487	1					
ANR	9003617	ReturnStatement	return code ;	5033:8:159157:159168	9003487	1	True				
ANR	9003618	Identifier	code		9003487	0					
ANR	9003619	ForStatement	for ( i = 0 ; i < 4 && range_buff [ i + 1 ] >= range_buff [ i ] ; i += 2 )		9003487	14					
ANR	9003620	ForInit	i = 0 ;	5034:9:159179:159184	9003487	0	True				
ANR	9003621	AssignmentExpression	i = 0		9003487	0		=			
ANR	9003622	Identifier	i		9003487	0					
ANR	9003623	PrimaryExpression	0		9003487	1					
ANR	9003624	Condition	i < 4 && range_buff [ i + 1 ] >= range_buff [ i ]	5034:16:159186:159228	9003487	1	True				
ANR	9003625	AndExpression	i < 4 && range_buff [ i + 1 ] >= range_buff [ i ]		9003487	0		&&			
ANR	9003626	RelationalExpression	i < 4		9003487	0		<			
ANR	9003627	Identifier	i		9003487	0					
ANR	9003628	PrimaryExpression	4		9003487	1					
ANR	9003629	RelationalExpression	range_buff [ i + 1 ] >= range_buff [ i ]		9003487	1		>=			
ANR	9003630	ArrayIndexing	range_buff [ i + 1 ]		9003487	0					
ANR	9003631	Identifier	range_buff		9003487	0					
ANR	9003632	AdditiveExpression	i + 1		9003487	1		+			
ANR	9003633	Identifier	i		9003487	0					
ANR	9003634	PrimaryExpression	1		9003487	1					
ANR	9003635	ArrayIndexing	range_buff [ i ]		9003487	1					
ANR	9003636	Identifier	range_buff		9003487	0					
ANR	9003637	Identifier	i		9003487	1					
ANR	9003638	AssignmentExpression	i += 2	5034:61:159231:159236	9003487	2	True	+=			
ANR	9003639	Identifier	i		9003487	0					
ANR	9003640	PrimaryExpression	2		9003487	1					
ANR	9003641	ExpressionStatement		5034:68:159238:159238	9003487	3	True				
ANR	9003642	IfStatement	if ( i != 4 )		9003487	15					
ANR	9003643	Condition	i != 4	5035:8:159248:159253	9003487	0	True				
ANR	9003644	EqualityExpression	i != 4		9003487	0		!=			
ANR	9003645	Identifier	i		9003487	0					
ANR	9003646	PrimaryExpression	4		9003487	1					
ANR	9003647	ExpressionStatement	return_error ( gs_error_rangecheck )	5036:8:159264:159297	9003487	1	True				
ANR	9003648	CallExpression	return_error ( gs_error_rangecheck )		9003487	0					
ANR	9003649	Callee	return_error		9003487	0					
ANR	9003650	Identifier	return_error		9003487	0					
ANR	9003651	ArgumentList	gs_error_rangecheck		9003487	1					
ANR	9003652	Argument	gs_error_rangecheck		9003487	0					
ANR	9003653	Identifier	gs_error_rangecheck		9003487	0					
ANR	9003654	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"	5037:4:159303:159414	9003487	16	True				
ANR	9003655	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"		9003487	0		=			
ANR	9003656	Identifier	code		9003487	0					
ANR	9003657	CallExpression	"dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"		9003487	1					
ANR	9003658	Callee	dict_floats_param		9003487	0					
ANR	9003659	Identifier	dict_floats_param		9003487	0					
ANR	9003660	ArgumentList	imemory		9003487	1					
ANR	9003661	Argument	imemory		9003487	0					
ANR	9003662	Identifier	imemory		9003487	0					
ANR	9003663	Argument	& labdict		9003487	1					
ANR	9003664	UnaryOperationExpression	& labdict		9003487	0					
ANR	9003665	UnaryOperator	&		9003487	0					
ANR	9003666	Identifier	labdict		9003487	1					
ANR	9003667	Argument	"""BlackPoint"""		9003487	2					
ANR	9003668	PrimaryExpression	"""BlackPoint"""		9003487	0					
ANR	9003669	Argument	3		9003487	3					
ANR	9003670	PrimaryExpression	3		9003487	0					
ANR	9003671	Argument	black		9003487	4					
ANR	9003672	Identifier	black		9003487	0					
ANR	9003673	Argument	dflt_black		9003487	5					
ANR	9003674	Identifier	dflt_black		9003487	0					
ANR	9003675	IfStatement	if ( code < 0 )		9003487	17					
ANR	9003676	Condition	code < 0	5039:8:159424:159431	9003487	0	True				
ANR	9003677	RelationalExpression	code < 0		9003487	0		<			
ANR	9003678	Identifier	code		9003487	0					
ANR	9003679	PrimaryExpression	0		9003487	1					
ANR	9003680	ReturnStatement	return code ;	5040:8:159442:159453	9003487	1	True				
ANR	9003681	Identifier	code		9003487	0					
ANR	9003682	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"	5041:4:159459:159570	9003487	18	True				
ANR	9003683	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"		9003487	0		=			
ANR	9003684	Identifier	code		9003487	0					
ANR	9003685	CallExpression	"dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"		9003487	1					
ANR	9003686	Callee	dict_floats_param		9003487	0					
ANR	9003687	Identifier	dict_floats_param		9003487	0					
ANR	9003688	ArgumentList	imemory		9003487	1					
ANR	9003689	Argument	imemory		9003487	0					
ANR	9003690	Identifier	imemory		9003487	0					
ANR	9003691	Argument	& labdict		9003487	1					
ANR	9003692	UnaryOperationExpression	& labdict		9003487	0					
ANR	9003693	UnaryOperator	&		9003487	0					
ANR	9003694	Identifier	labdict		9003487	1					
ANR	9003695	Argument	"""WhitePoint"""		9003487	2					
ANR	9003696	PrimaryExpression	"""WhitePoint"""		9003487	0					
ANR	9003697	Argument	3		9003487	3					
ANR	9003698	PrimaryExpression	3		9003487	0					
ANR	9003699	Argument	white		9003487	4					
ANR	9003700	Identifier	white		9003487	0					
ANR	9003701	Argument	dflt_white		9003487	5					
ANR	9003702	Identifier	dflt_white		9003487	0					
ANR	9003703	IfStatement	if ( code < 0 )		9003487	19					
ANR	9003704	Condition	code < 0	5043:8:159580:159587	9003487	0	True				
ANR	9003705	RelationalExpression	code < 0		9003487	0		<			
ANR	9003706	Identifier	code		9003487	0					
ANR	9003707	PrimaryExpression	0		9003487	1					
ANR	9003708	ReturnStatement	return code ;	5044:8:159598:159609	9003487	1	True				
ANR	9003709	Identifier	code		9003487	0					
ANR	9003710	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		9003487	20					
ANR	9003711	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5045:8:159619:159667	9003487	0	True				
ANR	9003712	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		9003487	0		||			
ANR	9003713	RelationalExpression	white [ 0 ] <= 0		9003487	0		<=			
ANR	9003714	ArrayIndexing	white [ 0 ]		9003487	0					
ANR	9003715	Identifier	white		9003487	0					
ANR	9003716	PrimaryExpression	0		9003487	1					
ANR	9003717	PrimaryExpression	0		9003487	1					
ANR	9003718	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		9003487	1		||			
ANR	9003719	EqualityExpression	white [ 1 ] != 1.0		9003487	0		!=			
ANR	9003720	ArrayIndexing	white [ 1 ]		9003487	0					
ANR	9003721	Identifier	white		9003487	0					
ANR	9003722	PrimaryExpression	1		9003487	1					
ANR	9003723	PrimaryExpression	1.0		9003487	1					
ANR	9003724	RelationalExpression	white [ 2 ] <= 0		9003487	1		<=			
ANR	9003725	ArrayIndexing	white [ 2 ]		9003487	0					
ANR	9003726	Identifier	white		9003487	0					
ANR	9003727	PrimaryExpression	2		9003487	1					
ANR	9003728	PrimaryExpression	0		9003487	1					
ANR	9003729	ExpressionStatement	return_error ( gs_error_rangecheck )	5046:8:159678:159711	9003487	1	True				
ANR	9003730	CallExpression	return_error ( gs_error_rangecheck )		9003487	0					
ANR	9003731	Callee	return_error		9003487	0					
ANR	9003732	Identifier	return_error		9003487	0					
ANR	9003733	ArgumentList	gs_error_rangecheck		9003487	1					
ANR	9003734	Argument	gs_error_rangecheck		9003487	0					
ANR	9003735	Identifier	gs_error_rangecheck		9003487	0					
ANR	9003736	ExpressionStatement	"code = seticc_lab ( i_ctx_p , white , black , range_buff )"	5047:4:159717:159769	9003487	21	True				
ANR	9003737	AssignmentExpression	"code = seticc_lab ( i_ctx_p , white , black , range_buff )"		9003487	0		=			
ANR	9003738	Identifier	code		9003487	0					
ANR	9003739	CallExpression	"seticc_lab ( i_ctx_p , white , black , range_buff )"		9003487	1					
ANR	9003740	Callee	seticc_lab		9003487	0					
ANR	9003741	Identifier	seticc_lab		9003487	0					
ANR	9003742	ArgumentList	i_ctx_p		9003487	1					
ANR	9003743	Argument	i_ctx_p		9003487	0					
ANR	9003744	Identifier	i_ctx_p		9003487	0					
ANR	9003745	Argument	white		9003487	1					
ANR	9003746	Identifier	white		9003487	0					
ANR	9003747	Argument	black		9003487	2					
ANR	9003748	Identifier	black		9003487	0					
ANR	9003749	Argument	range_buff		9003487	3					
ANR	9003750	Identifier	range_buff		9003487	0					
ANR	9003751	IfStatement	if ( code < 0 )		9003487	22					
ANR	9003752	Condition	code < 0	5048:9:159780:159787	9003487	0	True				
ANR	9003753	RelationalExpression	code < 0		9003487	0		<			
ANR	9003754	Identifier	code		9003487	0					
ANR	9003755	PrimaryExpression	0		9003487	1					
ANR	9003756	ReturnStatement	"return gs_rethrow ( code , ""setting PDF lab color space"" ) ;"	5049:8:159798:159852	9003487	1	True				
ANR	9003757	CallExpression	"gs_rethrow ( code , ""setting PDF lab color space"" )"		9003487	0					
ANR	9003758	Callee	gs_rethrow		9003487	0					
ANR	9003759	Identifier	gs_rethrow		9003487	0					
ANR	9003760	ArgumentList	code		9003487	1					
ANR	9003761	Argument	code		9003487	0					
ANR	9003762	Identifier	code		9003487	0					
ANR	9003763	Argument	"""setting PDF lab color space"""		9003487	1					
ANR	9003764	PrimaryExpression	"""setting PDF lab color space"""		9003487	0					
ANR	9003765	ExpressionStatement	cc . pattern = 0x00	5050:4:159858:159875	9003487	23	True				
ANR	9003766	AssignmentExpression	cc . pattern = 0x00		9003487	0		=			
ANR	9003767	MemberAccess	cc . pattern		9003487	0					
ANR	9003768	Identifier	cc		9003487	0					
ANR	9003769	Identifier	pattern		9003487	1					
ANR	9003770	PrimaryExpression	0x00		9003487	1					
ANR	9003771	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		9003487	24					
ANR	9003772	ForInit	i = 0 ;	5051:9:159886:159889	9003487	0	True				
ANR	9003773	AssignmentExpression	i = 0		9003487	0		=			
ANR	9003774	Identifier	i		9003487	0					
ANR	9003775	PrimaryExpression	0		9003487	1					
ANR	9003776	Condition	i < 3	5051:13:159890:159892	9003487	1	True				
ANR	9003777	RelationalExpression	i < 3		9003487	0		<			
ANR	9003778	Identifier	i		9003487	0					
ANR	9003779	PrimaryExpression	3		9003487	1					
ANR	9003780	PostIncDecOperationExpression	i ++	5051:17:159894:159896	9003487	2	True				
ANR	9003781	Identifier	i		9003487	0					
ANR	9003782	IncDec	++		9003487	1					
ANR	9003783	ExpressionStatement	cc . paint . values [ i ] = 0	5052:8:159907:159929	9003487	3	True				
ANR	9003784	AssignmentExpression	cc . paint . values [ i ] = 0		9003487	0		=			
ANR	9003785	ArrayIndexing	cc . paint . values [ i ]		9003487	0					
ANR	9003786	MemberAccess	cc . paint . values		9003487	0					
ANR	9003787	MemberAccess	cc . paint		9003487	0					
ANR	9003788	Identifier	cc		9003487	0					
ANR	9003789	Identifier	paint		9003487	1					
ANR	9003790	Identifier	values		9003487	1					
ANR	9003791	Identifier	i		9003487	1					
ANR	9003792	PrimaryExpression	0		9003487	1					
ANR	9003793	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5053:4:159935:159963	9003487	25	True				
ANR	9003794	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		9003487	0		=			
ANR	9003795	Identifier	code		9003487	0					
ANR	9003796	CallExpression	"gs_setcolor ( igs , & cc )"		9003487	1					
ANR	9003797	Callee	gs_setcolor		9003487	0					
ANR	9003798	Identifier	gs_setcolor		9003487	0					
ANR	9003799	ArgumentList	igs		9003487	1					
ANR	9003800	Argument	igs		9003487	0					
ANR	9003801	Identifier	igs		9003487	0					
ANR	9003802	Argument	& cc		9003487	1					
ANR	9003803	UnaryOperationExpression	& cc		9003487	0					
ANR	9003804	UnaryOperator	&		9003487	0					
ANR	9003805	Identifier	cc		9003487	1					
ANR	9003806	ReturnStatement	return code ;	5054:4:159969:159980	9003487	26	True				
ANR	9003807	Identifier	code		9003487	0					
ANR	9003808	ReturnType	static int		9003487	1					
ANR	9003809	Identifier	setlabspace		9003487	2					
ANR	9003810	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9003487	3					
ANR	9003811	Parameter	i_ctx_t * i_ctx_p	5012:23:158416:158432	9003487	0	True				
ANR	9003812	ParameterType	i_ctx_t *		9003487	0					
ANR	9003813	Identifier	i_ctx_p		9003487	1					
ANR	9003814	Parameter	ref * r	5012:42:158435:158440	9003487	1	True				
ANR	9003815	ParameterType	ref *		9003487	0					
ANR	9003816	Identifier	r		9003487	1					
ANR	9003817	Parameter	int * stage	5012:50:158443:158452	9003487	2	True				
ANR	9003818	ParameterType	int *		9003487	0					
ANR	9003819	Identifier	stage		9003487	1					
ANR	9003820	Parameter	int * cont	5012:62:158455:158463	9003487	3	True				
ANR	9003821	ParameterType	int *		9003487	0					
ANR	9003822	Identifier	cont		9003487	1					
ANR	9003823	Parameter	int CIESubst	5013:23:158489:158500	9003487	4	True				
ANR	9003824	ParameterType	int		9003487	0					
ANR	9003825	Identifier	CIESubst		9003487	1					
ANR	9003826	CFGEntryNode	ENTRY		9003487		True				
ANR	9003827	CFGExitNode	EXIT		9003487		True				
ANR	9003828	Symbol	& labdict		9003487						
ANR	9003829	Symbol	cc . pattern		9003487						
ANR	9003830	Symbol	code		9003487						
ANR	9003831	Symbol	gs_error_rangecheck		9003487						
ANR	9003832	Symbol	* cc		9003487						
ANR	9003833	Symbol	* range_buff		9003487						
ANR	9003834	Symbol	gs_setcolor		9003487						
ANR	9003835	Symbol	& cc		9003487						
ANR	9003836	Symbol	gs_rethrow		9003487						
ANR	9003837	Symbol	white		9003487						
ANR	9003838	Symbol	dflt_white		9003487						
ANR	9003839	Symbol	dict_floats_param		9003487						
ANR	9003840	Symbol	igs		9003487						
ANR	9003841	Symbol	* cc . paint . values		9003487						
ANR	9003842	Symbol	imemory		9003487						
ANR	9003843	Symbol	cont		9003487						
ANR	9003844	Symbol	range_buff		9003487						
ANR	9003845	Symbol	CIESubst		9003487						
ANR	9003846	Symbol	dflt_range		9003487						
ANR	9003847	Symbol	cc		9003487						
ANR	9003848	Symbol	array_get		9003487						
ANR	9003849	Symbol	black		9003487						
ANR	9003850	Symbol	i		9003487						
ANR	9003851	Symbol	* white		9003487						
ANR	9003852	Symbol	dflt_black		9003487						
ANR	9003853	Symbol	r		9003487						
ANR	9003854	Symbol	* cc . paint		9003487						
ANR	9003855	Symbol	* i		9003487						
ANR	9003856	Symbol	stage		9003487						
ANR	9003857	Symbol	* cont		9003487						
ANR	9003858	Symbol	i_ctx_p		9003487						
ANR	9003859	Symbol	seticc_lab		9003487						
ANR	9003860	Symbol	labdict		9003487						
ANR	9003861	Symbol	cc . paint		9003487						
ANR	9003862	Symbol	cc . paint . values		9003487						
ANR	9003863	Function	validatelabspace	5057:0:159985:160876							
ANR	9003864	FunctionDef	"validatelabspace (i_ctx_t * i_ctx_p , ref * * r)"		9003863	0					
ANR	9003865	CompoundStatement		5058:0:160041:160876	9003863	0					
ANR	9003866	IdentifierDeclStatement	int code = 0 ;	5059:4:160047:160057	9003863	0	True				
ANR	9003867	IdentifierDecl	code = 0		9003863	0					
ANR	9003868	IdentifierDeclType	int		9003863	0					
ANR	9003869	Identifier	code		9003863	1					
ANR	9003870	AssignmentExpression	code = 0		9003863	2		=			
ANR	9003871	Identifier	code		9003863	0					
ANR	9003872	PrimaryExpression	0		9003863	1					
ANR	9003873	IdentifierDeclStatement	"ref * space , labdict ;"	5060:4:160063:160082	9003863	1	True				
ANR	9003874	IdentifierDecl	* space		9003863	0					
ANR	9003875	IdentifierDeclType	ref *		9003863	0					
ANR	9003876	Identifier	space		9003863	1					
ANR	9003877	IdentifierDecl	labdict		9003863	1					
ANR	9003878	IdentifierDeclType	ref		9003863	0					
ANR	9003879	Identifier	labdict		9003863	1					
ANR	9003880	ExpressionStatement	space = * r	5062:4:160089:160099	9003863	2	True				
ANR	9003881	AssignmentExpression	space = * r		9003863	0		=			
ANR	9003882	Identifier	space		9003863	0					
ANR	9003883	UnaryOperationExpression	* r		9003863	1					
ANR	9003884	UnaryOperator	*		9003863	0					
ANR	9003885	Identifier	r		9003863	1					
ANR	9003886	IfStatement	if ( ! r_is_array ( space ) )		9003863	3					
ANR	9003887	Condition	! r_is_array ( space )	5063:8:160109:160126	9003863	0	True				
ANR	9003888	UnaryOperationExpression	! r_is_array ( space )		9003863	0					
ANR	9003889	UnaryOperator	!		9003863	0					
ANR	9003890	CallExpression	r_is_array ( space )		9003863	1					
ANR	9003891	Callee	r_is_array		9003863	0					
ANR	9003892	Identifier	r_is_array		9003863	0					
ANR	9003893	ArgumentList	space		9003863	1					
ANR	9003894	Argument	space		9003863	0					
ANR	9003895	Identifier	space		9003863	0					
ANR	9003896	ExpressionStatement	return_error ( gs_error_typecheck )	5064:8:160137:160169	9003863	1	True				
ANR	9003897	CallExpression	return_error ( gs_error_typecheck )		9003863	0					
ANR	9003898	Callee	return_error		9003863	0					
ANR	9003899	Identifier	return_error		9003863	0					
ANR	9003900	ArgumentList	gs_error_typecheck		9003863	1					
ANR	9003901	Argument	gs_error_typecheck		9003863	0					
ANR	9003902	Identifier	gs_error_typecheck		9003863	0					
ANR	9003903	IfStatement	if ( r_size ( space ) < 2 )		9003863	4					
ANR	9003904	Condition	r_size ( space ) < 2	5066:8:160240:160256	9003863	0	True				
ANR	9003905	RelationalExpression	r_size ( space ) < 2		9003863	0		<			
ANR	9003906	CallExpression	r_size ( space )		9003863	0					
ANR	9003907	Callee	r_size		9003863	0					
ANR	9003908	Identifier	r_size		9003863	0					
ANR	9003909	ArgumentList	space		9003863	1					
ANR	9003910	Argument	space		9003863	0					
ANR	9003911	Identifier	space		9003863	0					
ANR	9003912	PrimaryExpression	2		9003863	1					
ANR	9003913	ExpressionStatement	return_error ( gs_error_rangecheck )	5067:8:160267:160300	9003863	1	True				
ANR	9003914	CallExpression	return_error ( gs_error_rangecheck )		9003863	0					
ANR	9003915	Callee	return_error		9003863	0					
ANR	9003916	Identifier	return_error		9003863	0					
ANR	9003917	ArgumentList	gs_error_rangecheck		9003863	1					
ANR	9003918	Argument	gs_error_rangecheck		9003863	0					
ANR	9003919	Identifier	gs_error_rangecheck		9003863	0					
ANR	9003920	ExpressionStatement	"code = array_get ( imemory , space , 1 , & labdict )"	5068:4:160306:160351	9003863	5	True				
ANR	9003921	AssignmentExpression	"code = array_get ( imemory , space , 1 , & labdict )"		9003863	0		=			
ANR	9003922	Identifier	code		9003863	0					
ANR	9003923	CallExpression	"array_get ( imemory , space , 1 , & labdict )"		9003863	1					
ANR	9003924	Callee	array_get		9003863	0					
ANR	9003925	Identifier	array_get		9003863	0					
ANR	9003926	ArgumentList	imemory		9003863	1					
ANR	9003927	Argument	imemory		9003863	0					
ANR	9003928	Identifier	imemory		9003863	0					
ANR	9003929	Argument	space		9003863	1					
ANR	9003930	Identifier	space		9003863	0					
ANR	9003931	Argument	1		9003863	2					
ANR	9003932	PrimaryExpression	1		9003863	0					
ANR	9003933	Argument	& labdict		9003863	3					
ANR	9003934	UnaryOperationExpression	& labdict		9003863	0					
ANR	9003935	UnaryOperator	&		9003863	0					
ANR	9003936	Identifier	labdict		9003863	1					
ANR	9003937	IfStatement	if ( code < 0 )		9003863	6					
ANR	9003938	Condition	code < 0	5069:8:160361:160368	9003863	0	True				
ANR	9003939	RelationalExpression	code < 0		9003863	0		<			
ANR	9003940	Identifier	code		9003863	0					
ANR	9003941	PrimaryExpression	0		9003863	1					
ANR	9003942	ReturnStatement	return code ;	5070:8:160379:160390	9003863	1	True				
ANR	9003943	Identifier	code		9003863	0					
ANR	9003944	ExpressionStatement	"check_type ( labdict , t_dictionary )"	5071:4:160396:160429	9003863	7	True				
ANR	9003945	CallExpression	"check_type ( labdict , t_dictionary )"		9003863	0					
ANR	9003946	Callee	check_type		9003863	0					
ANR	9003947	Identifier	check_type		9003863	0					
ANR	9003948	ArgumentList	labdict		9003863	1					
ANR	9003949	Argument	labdict		9003863	0					
ANR	9003950	Identifier	labdict		9003863	0					
ANR	9003951	Argument	t_dictionary		9003863	1					
ANR	9003952	Identifier	t_dictionary		9003863	0					
ANR	9003953	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & labdict )"	5073:4:160487:160528	9003863	8	True				
ANR	9003954	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & labdict )"		9003863	0		=			
ANR	9003955	Identifier	code		9003863	0					
ANR	9003956	CallExpression	"checkWhitePoint ( i_ctx_p , & labdict )"		9003863	1					
ANR	9003957	Callee	checkWhitePoint		9003863	0					
ANR	9003958	Identifier	checkWhitePoint		9003863	0					
ANR	9003959	ArgumentList	i_ctx_p		9003863	1					
ANR	9003960	Argument	i_ctx_p		9003863	0					
ANR	9003961	Identifier	i_ctx_p		9003863	0					
ANR	9003962	Argument	& labdict		9003863	1					
ANR	9003963	UnaryOperationExpression	& labdict		9003863	0					
ANR	9003964	UnaryOperator	&		9003863	0					
ANR	9003965	Identifier	labdict		9003863	1					
ANR	9003966	IfStatement	if ( code != 0 )		9003863	9					
ANR	9003967	Condition	code != 0	5074:8:160538:160546	9003863	0	True				
ANR	9003968	EqualityExpression	code != 0		9003863	0		!=			
ANR	9003969	Identifier	code		9003863	0					
ANR	9003970	PrimaryExpression	0		9003863	1					
ANR	9003971	ReturnStatement	return code ;	5075:8:160557:160568	9003863	1	True				
ANR	9003972	Identifier	code		9003863	0					
ANR	9003973	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & labdict )"	5077:4:160632:160673	9003863	10	True				
ANR	9003974	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & labdict )"		9003863	0		=			
ANR	9003975	Identifier	code		9003863	0					
ANR	9003976	CallExpression	"checkBlackPoint ( i_ctx_p , & labdict )"		9003863	1					
ANR	9003977	Callee	checkBlackPoint		9003863	0					
ANR	9003978	Identifier	checkBlackPoint		9003863	0					
ANR	9003979	ArgumentList	i_ctx_p		9003863	1					
ANR	9003980	Argument	i_ctx_p		9003863	0					
ANR	9003981	Identifier	i_ctx_p		9003863	0					
ANR	9003982	Argument	& labdict		9003863	1					
ANR	9003983	UnaryOperationExpression	& labdict		9003863	0					
ANR	9003984	UnaryOperator	&		9003863	0					
ANR	9003985	Identifier	labdict		9003863	1					
ANR	9003986	IfStatement	if ( code < 0 )		9003863	11					
ANR	9003987	Condition	code < 0	5078:8:160683:160690	9003863	0	True				
ANR	9003988	RelationalExpression	code < 0		9003863	0		<			
ANR	9003989	Identifier	code		9003863	0					
ANR	9003990	PrimaryExpression	0		9003863	1					
ANR	9003991	ReturnStatement	return code ;	5079:8:160701:160712	9003863	1	True				
ANR	9003992	Identifier	code		9003863	0					
ANR	9003993	ExpressionStatement	"code = checkrangeab ( i_ctx_p , & labdict )"	5081:4:160748:160786	9003863	12	True				
ANR	9003994	AssignmentExpression	"code = checkrangeab ( i_ctx_p , & labdict )"		9003863	0		=			
ANR	9003995	Identifier	code		9003863	0					
ANR	9003996	CallExpression	"checkrangeab ( i_ctx_p , & labdict )"		9003863	1					
ANR	9003997	Callee	checkrangeab		9003863	0					
ANR	9003998	Identifier	checkrangeab		9003863	0					
ANR	9003999	ArgumentList	i_ctx_p		9003863	1					
ANR	9004000	Argument	i_ctx_p		9003863	0					
ANR	9004001	Identifier	i_ctx_p		9003863	0					
ANR	9004002	Argument	& labdict		9003863	1					
ANR	9004003	UnaryOperationExpression	& labdict		9003863	0					
ANR	9004004	UnaryOperator	&		9003863	0					
ANR	9004005	Identifier	labdict		9003863	1					
ANR	9004006	IfStatement	if ( code < 0 )		9003863	13					
ANR	9004007	Condition	code < 0	5082:8:160796:160803	9003863	0	True				
ANR	9004008	RelationalExpression	code < 0		9003863	0		<			
ANR	9004009	Identifier	code		9003863	0					
ANR	9004010	PrimaryExpression	0		9003863	1					
ANR	9004011	ReturnStatement	return code ;	5083:8:160814:160825	9003863	1	True				
ANR	9004012	Identifier	code		9003863	0					
ANR	9004013	ExpressionStatement	* r = 0	5084:4:160831:160837	9003863	14	True				
ANR	9004014	AssignmentExpression	* r = 0		9003863	0		=			
ANR	9004015	UnaryOperationExpression	* r		9003863	0					
ANR	9004016	UnaryOperator	*		9003863	0					
ANR	9004017	Identifier	r		9003863	1					
ANR	9004018	PrimaryExpression	0		9003863	1					
ANR	9004019	ReturnStatement	return 0 ;	5085:4:160866:160874	9003863	15	True				
ANR	9004020	PrimaryExpression	0		9003863	0					
ANR	9004021	ReturnType	static int		9003863	1					
ANR	9004022	Identifier	validatelabspace		9003863	2					
ANR	9004023	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		9003863	3					
ANR	9004024	Parameter	i_ctx_t * i_ctx_p	5057:28:160013:160029	9003863	0	True				
ANR	9004025	ParameterType	i_ctx_t *		9003863	0					
ANR	9004026	Identifier	i_ctx_p		9003863	1					
ANR	9004027	Parameter	ref * * r	5057:47:160032:160038	9003863	1	True				
ANR	9004028	ParameterType	ref * *		9003863	0					
ANR	9004029	Identifier	r		9003863	1					
ANR	9004030	CFGEntryNode	ENTRY		9003863		True				
ANR	9004031	CFGExitNode	EXIT		9003863		True				
ANR	9004032	Symbol	& labdict		9003863						
ANR	9004033	Symbol	checkrangeab		9003863						
ANR	9004034	Symbol	code		9003863						
ANR	9004035	Symbol	t_dictionary		9003863						
ANR	9004036	Symbol	gs_error_rangecheck		9003863						
ANR	9004037	Symbol	array_get		9003863						
ANR	9004038	Symbol	space		9003863						
ANR	9004039	Symbol	r		9003863						
ANR	9004040	Symbol	gs_error_typecheck		9003863						
ANR	9004041	Symbol	checkBlackPoint		9003863						
ANR	9004042	Symbol	i_ctx_p		9003863						
ANR	9004043	Symbol	r_size		9003863						
ANR	9004044	Symbol	labdict		9003863						
ANR	9004045	Symbol	r_is_array		9003863						
ANR	9004046	Symbol	imemory		9003863						
ANR	9004047	Symbol	checkWhitePoint		9003863						
ANR	9004048	Symbol	* r		9003863						
ANR	9004049	Function	labrange	5088:0:160879:161863							
ANR	9004050	FunctionDef	"labrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9004049	0					
ANR	9004051	CompoundStatement		5089:0:160942:161863	9004049	0					
ANR	9004052	IdentifierDeclStatement	"int i , code ;"	5090:4:160948:160959	9004049	0	True				
ANR	9004053	IdentifierDecl	i		9004049	0					
ANR	9004054	IdentifierDeclType	int		9004049	0					
ANR	9004055	Identifier	i		9004049	1					
ANR	9004056	IdentifierDecl	code		9004049	1					
ANR	9004057	IdentifierDeclType	int		9004049	0					
ANR	9004058	Identifier	code		9004049	1					
ANR	9004059	IdentifierDeclStatement	"ref CIEdict , * tempref , valref ;"	5091:4:160965:160998	9004049	1	True				
ANR	9004060	IdentifierDecl	CIEdict		9004049	0					
ANR	9004061	IdentifierDeclType	ref		9004049	0					
ANR	9004062	Identifier	CIEdict		9004049	1					
ANR	9004063	IdentifierDecl	* tempref		9004049	1					
ANR	9004064	IdentifierDeclType	ref *		9004049	0					
ANR	9004065	Identifier	tempref		9004049	1					
ANR	9004066	IdentifierDecl	valref		9004049	2					
ANR	9004067	IdentifierDeclType	ref		9004049	0					
ANR	9004068	Identifier	valref		9004049	1					
ANR	9004069	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	5093:4:161005:161050	9004049	2	True				
ANR	9004070	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		9004049	0		=			
ANR	9004071	Identifier	code		9004049	0					
ANR	9004072	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		9004049	1					
ANR	9004073	Callee	array_get		9004049	0					
ANR	9004074	Identifier	array_get		9004049	0					
ANR	9004075	ArgumentList	imemory		9004049	1					
ANR	9004076	Argument	imemory		9004049	0					
ANR	9004077	Identifier	imemory		9004049	0					
ANR	9004078	Argument	space		9004049	1					
ANR	9004079	Identifier	space		9004049	0					
ANR	9004080	Argument	1		9004049	2					
ANR	9004081	PrimaryExpression	1		9004049	0					
ANR	9004082	Argument	& CIEdict		9004049	3					
ANR	9004083	UnaryOperationExpression	& CIEdict		9004049	0					
ANR	9004084	UnaryOperator	&		9004049	0					
ANR	9004085	Identifier	CIEdict		9004049	1					
ANR	9004086	IfStatement	if ( code < 0 )		9004049	3					
ANR	9004087	Condition	code < 0	5094:8:161060:161067	9004049	0	True				
ANR	9004088	RelationalExpression	code < 0		9004049	0		<			
ANR	9004089	Identifier	code		9004049	0					
ANR	9004090	PrimaryExpression	0		9004049	1					
ANR	9004091	ReturnStatement	return code ;	5095:8:161078:161089	9004049	1	True				
ANR	9004092	Identifier	code		9004049	0					
ANR	9004093	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"	5098:4:161157:161209	9004049	4	True				
ANR	9004094	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"		9004049	0		=			
ANR	9004095	Identifier	code		9004049	0					
ANR	9004096	CallExpression	"dict_find_string ( & CIEdict , ""Range"" , & tempref )"		9004049	1					
ANR	9004097	Callee	dict_find_string		9004049	0					
ANR	9004098	Identifier	dict_find_string		9004049	0					
ANR	9004099	ArgumentList	& CIEdict		9004049	1					
ANR	9004100	Argument	& CIEdict		9004049	0					
ANR	9004101	UnaryOperationExpression	& CIEdict		9004049	0					
ANR	9004102	UnaryOperator	&		9004049	0					
ANR	9004103	Identifier	CIEdict		9004049	1					
ANR	9004104	Argument	"""Range"""		9004049	1					
ANR	9004105	PrimaryExpression	"""Range"""		9004049	0					
ANR	9004106	Argument	& tempref		9004049	2					
ANR	9004107	UnaryOperationExpression	& tempref		9004049	0					
ANR	9004108	UnaryOperator	&		9004049	0					
ANR	9004109	Identifier	tempref		9004049	1					
ANR	9004110	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9004049	5					
ANR	9004111	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5099:8:161219:161258	9004049	0	True				
ANR	9004112	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9004049	0		&&			
ANR	9004113	RelationalExpression	code > 0		9004049	0		>			
ANR	9004114	Identifier	code		9004049	0					
ANR	9004115	PrimaryExpression	0		9004049	1					
ANR	9004116	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9004049	1					
ANR	9004117	UnaryOperator	!		9004049	0					
ANR	9004118	CallExpression	"r_has_type ( tempref , t_null )"		9004049	1					
ANR	9004119	Callee	r_has_type		9004049	0					
ANR	9004120	Identifier	r_has_type		9004049	0					
ANR	9004121	ArgumentList	tempref		9004049	1					
ANR	9004122	Argument	tempref		9004049	0					
ANR	9004123	Identifier	tempref		9004049	0					
ANR	9004124	Argument	t_null		9004049	1					
ANR	9004125	Identifier	t_null		9004049	0					
ANR	9004126	CompoundStatement		11:50:318:318	9004049	1					
ANR	9004127	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		9004049	0					
ANR	9004128	ForInit	i = 0 ;	5100:13:161276:161279	9004049	0	True				
ANR	9004129	AssignmentExpression	i = 0		9004049	0		=			
ANR	9004130	Identifier	i		9004049	0					
ANR	9004131	PrimaryExpression	0		9004049	1					
ANR	9004132	Condition	i < 4	5100:17:161280:161282	9004049	1	True				
ANR	9004133	RelationalExpression	i < 4		9004049	0		<			
ANR	9004134	Identifier	i		9004049	0					
ANR	9004135	PrimaryExpression	4		9004049	1					
ANR	9004136	PostIncDecOperationExpression	i ++	5100:21:161284:161286	9004049	2	True				
ANR	9004137	Identifier	i		9004049	0					
ANR	9004138	IncDec	++		9004049	1					
ANR	9004139	CompoundStatement		12:26:346:346	9004049	3					
ANR	9004140	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5101:12:161303:161349	9004049	0	True				
ANR	9004141	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9004049	0		=			
ANR	9004142	Identifier	code		9004049	0					
ANR	9004143	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9004049	1					
ANR	9004144	Callee	array_get		9004049	0					
ANR	9004145	Identifier	array_get		9004049	0					
ANR	9004146	ArgumentList	imemory		9004049	1					
ANR	9004147	Argument	imemory		9004049	0					
ANR	9004148	Identifier	imemory		9004049	0					
ANR	9004149	Argument	tempref		9004049	1					
ANR	9004150	Identifier	tempref		9004049	0					
ANR	9004151	Argument	i		9004049	2					
ANR	9004152	Identifier	i		9004049	0					
ANR	9004153	Argument	& valref		9004049	3					
ANR	9004154	UnaryOperationExpression	& valref		9004049	0					
ANR	9004155	UnaryOperator	&		9004049	0					
ANR	9004156	Identifier	valref		9004049	1					
ANR	9004157	IfStatement	if ( code < 0 )		9004049	1					
ANR	9004158	Condition	code < 0	5102:16:161367:161374	9004049	0	True				
ANR	9004159	RelationalExpression	code < 0		9004049	0		<			
ANR	9004160	Identifier	code		9004049	0					
ANR	9004161	PrimaryExpression	0		9004049	1					
ANR	9004162	ReturnStatement	return code ;	5103:16:161393:161404	9004049	1	True				
ANR	9004163	Identifier	code		9004049	0					
ANR	9004164	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9004049	2					
ANR	9004165	Condition	"r_has_type ( & valref , t_integer )"	5104:16:161422:161451	9004049	0	True				
ANR	9004166	CallExpression	"r_has_type ( & valref , t_integer )"		9004049	0					
ANR	9004167	Callee	r_has_type		9004049	0					
ANR	9004168	Identifier	r_has_type		9004049	0					
ANR	9004169	ArgumentList	& valref		9004049	1					
ANR	9004170	Argument	& valref		9004049	0					
ANR	9004171	UnaryOperationExpression	& valref		9004049	0					
ANR	9004172	UnaryOperator	&		9004049	0					
ANR	9004173	Identifier	valref		9004049	1					
ANR	9004174	Argument	t_integer		9004049	1					
ANR	9004175	Identifier	t_integer		9004049	0					
ANR	9004176	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5105:16:161470:161505	9004049	1	True				
ANR	9004177	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		9004049	0		=			
ANR	9004178	ArrayIndexing	ptr [ i ]		9004049	0					
ANR	9004179	Identifier	ptr		9004049	0					
ANR	9004180	Identifier	i		9004049	1					
ANR	9004181	CastExpression	( float ) valref . value . intval		9004049	1					
ANR	9004182	CastTarget	float		9004049	0					
ANR	9004183	MemberAccess	valref . value . intval		9004049	1					
ANR	9004184	MemberAccess	valref . value		9004049	0					
ANR	9004185	Identifier	valref		9004049	0					
ANR	9004186	Identifier	value		9004049	1					
ANR	9004187	Identifier	intval		9004049	1					
ANR	9004188	ElseStatement	else		9004049	0					
ANR	9004189	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		9004049	0					
ANR	9004190	Condition	"r_has_type ( & valref , t_real )"	5106:21:161528:161554	9004049	0	True				
ANR	9004191	CallExpression	"r_has_type ( & valref , t_real )"		9004049	0					
ANR	9004192	Callee	r_has_type		9004049	0					
ANR	9004193	Identifier	r_has_type		9004049	0					
ANR	9004194	ArgumentList	& valref		9004049	1					
ANR	9004195	Argument	& valref		9004049	0					
ANR	9004196	UnaryOperationExpression	& valref		9004049	0					
ANR	9004197	UnaryOperator	&		9004049	0					
ANR	9004198	Identifier	valref		9004049	1					
ANR	9004199	Argument	t_real		9004049	1					
ANR	9004200	Identifier	t_real		9004049	0					
ANR	9004201	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5107:16:161573:161609	9004049	1	True				
ANR	9004202	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		9004049	0		=			
ANR	9004203	ArrayIndexing	ptr [ i ]		9004049	0					
ANR	9004204	Identifier	ptr		9004049	0					
ANR	9004205	Identifier	i		9004049	1					
ANR	9004206	CastExpression	( float ) valref . value . realval		9004049	1					
ANR	9004207	CastTarget	float		9004049	0					
ANR	9004208	MemberAccess	valref . value . realval		9004049	1					
ANR	9004209	MemberAccess	valref . value		9004049	0					
ANR	9004210	Identifier	valref		9004049	0					
ANR	9004211	Identifier	value		9004049	1					
ANR	9004212	Identifier	realval		9004049	1					
ANR	9004213	ElseStatement	else		9004049	0					
ANR	9004214	ExpressionStatement	return_error ( gs_error_typecheck )	5109:16:161644:161676	9004049	0	True				
ANR	9004215	CallExpression	return_error ( gs_error_typecheck )		9004049	0					
ANR	9004216	Callee	return_error		9004049	0					
ANR	9004217	Identifier	return_error		9004049	0					
ANR	9004218	ArgumentList	gs_error_typecheck		9004049	1					
ANR	9004219	Argument	gs_error_typecheck		9004049	0					
ANR	9004220	Identifier	gs_error_typecheck		9004049	0					
ANR	9004221	ElseStatement	else		9004049	0					
ANR	9004222	CompoundStatement		23:11:756:756	9004049	0					
ANR	9004223	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		9004049	0					
ANR	9004224	ForInit	i = 0 ;	5113:13:161751:161754	9004049	0	True				
ANR	9004225	AssignmentExpression	i = 0		9004049	0		=			
ANR	9004226	Identifier	i		9004049	0					
ANR	9004227	PrimaryExpression	0		9004049	1					
ANR	9004228	Condition	i < 2	5113:17:161755:161757	9004049	1	True				
ANR	9004229	RelationalExpression	i < 2		9004049	0		<			
ANR	9004230	Identifier	i		9004049	0					
ANR	9004231	PrimaryExpression	2		9004049	1					
ANR	9004232	PostIncDecOperationExpression	i ++	5113:21:161759:161761	9004049	2	True				
ANR	9004233	Identifier	i		9004049	0					
ANR	9004234	IncDec	++		9004049	1					
ANR	9004235	CompoundStatement		25:26:821:821	9004049	3					
ANR	9004236	ExpressionStatement	ptr [ 2 * i ] = - 100	5114:12:161778:161795	9004049	0	True				
ANR	9004237	AssignmentExpression	ptr [ 2 * i ] = - 100		9004049	0		=			
ANR	9004238	ArrayIndexing	ptr [ 2 * i ]		9004049	0					
ANR	9004239	Identifier	ptr		9004049	0					
ANR	9004240	MultiplicativeExpression	2 * i		9004049	1		*			
ANR	9004241	PrimaryExpression	2		9004049	0					
ANR	9004242	Identifier	i		9004049	1					
ANR	9004243	UnaryOperationExpression	- 100		9004049	1					
ANR	9004244	UnaryOperator	-		9004049	0					
ANR	9004245	PrimaryExpression	100		9004049	1					
ANR	9004246	ExpressionStatement	ptr [ ( 2 * i ) + 1 ] = 100	5115:12:161809:161831	9004049	1	True				
ANR	9004247	AssignmentExpression	ptr [ ( 2 * i ) + 1 ] = 100		9004049	0		=			
ANR	9004248	ArrayIndexing	ptr [ ( 2 * i ) + 1 ]		9004049	0					
ANR	9004249	Identifier	ptr		9004049	0					
ANR	9004250	AdditiveExpression	( 2 * i ) + 1		9004049	1		+			
ANR	9004251	MultiplicativeExpression	2 * i		9004049	0		*			
ANR	9004252	PrimaryExpression	2		9004049	0					
ANR	9004253	Identifier	i		9004049	1					
ANR	9004254	PrimaryExpression	1		9004049	1					
ANR	9004255	PrimaryExpression	100		9004049	1					
ANR	9004256	ReturnStatement	return 0 ;	5118:4:161853:161861	9004049	6	True				
ANR	9004257	PrimaryExpression	0		9004049	0					
ANR	9004258	ReturnType	static int		9004049	1					
ANR	9004259	Identifier	labrange		9004049	2					
ANR	9004260	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9004049	3					
ANR	9004261	Parameter	i_ctx_t * i_ctx_p	5088:20:160899:160915	9004049	0	True				
ANR	9004262	ParameterType	i_ctx_t *		9004049	0					
ANR	9004263	Identifier	i_ctx_p		9004049	1					
ANR	9004264	Parameter	ref * space	5088:39:160918:160927	9004049	1	True				
ANR	9004265	ParameterType	ref *		9004049	0					
ANR	9004266	Identifier	space		9004049	1					
ANR	9004267	Parameter	float * ptr	5088:51:160930:160939	9004049	2	True				
ANR	9004268	ParameterType	float *		9004049	0					
ANR	9004269	Identifier	ptr		9004049	1					
ANR	9004270	CFGEntryNode	ENTRY		9004049		True				
ANR	9004271	CFGExitNode	EXIT		9004049		True				
ANR	9004272	Symbol	valref . value		9004049						
ANR	9004273	Symbol	code		9004049						
ANR	9004274	Symbol	dict_find_string		9004049						
ANR	9004275	Symbol	array_get		9004049						
ANR	9004276	Symbol	& CIEdict		9004049						
ANR	9004277	Symbol	i		9004049						
ANR	9004278	Symbol	& tempref		9004049						
ANR	9004279	Symbol	t_real		9004049						
ANR	9004280	Symbol	space		9004049						
ANR	9004281	Symbol	valref . value . realval		9004049						
ANR	9004282	Symbol	ptr		9004049						
ANR	9004283	Symbol	r_has_type		9004049						
ANR	9004284	Symbol	t_null		9004049						
ANR	9004285	Symbol	gs_error_typecheck		9004049						
ANR	9004286	Symbol	* i		9004049						
ANR	9004287	Symbol	t_integer		9004049						
ANR	9004288	Symbol	valref . value . intval		9004049						
ANR	9004289	Symbol	& valref		9004049						
ANR	9004290	Symbol	i_ctx_p		9004049						
ANR	9004291	Symbol	valref		9004049						
ANR	9004292	Symbol	* ptr		9004049						
ANR	9004293	Symbol	CIEdict		9004049						
ANR	9004294	Symbol	imemory		9004049						
ANR	9004295	Symbol	tempref		9004049						
ANR	9004296	Function	labdomain	5121:0:161866:162845							
ANR	9004297	FunctionDef	"labdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9004296	0					
ANR	9004298	CompoundStatement		5122:0:161930:162845	9004296	0					
ANR	9004299	IdentifierDeclStatement	"int i , code ;"	5123:4:161936:161947	9004296	0	True				
ANR	9004300	IdentifierDecl	i		9004296	0					
ANR	9004301	IdentifierDeclType	int		9004296	0					
ANR	9004302	Identifier	i		9004296	1					
ANR	9004303	IdentifierDecl	code		9004296	1					
ANR	9004304	IdentifierDeclType	int		9004296	0					
ANR	9004305	Identifier	code		9004296	1					
ANR	9004306	IdentifierDeclStatement	"ref CIEdict , * tempref , valref ;"	5124:4:161953:161986	9004296	1	True				
ANR	9004307	IdentifierDecl	CIEdict		9004296	0					
ANR	9004308	IdentifierDeclType	ref		9004296	0					
ANR	9004309	Identifier	CIEdict		9004296	1					
ANR	9004310	IdentifierDecl	* tempref		9004296	1					
ANR	9004311	IdentifierDeclType	ref *		9004296	0					
ANR	9004312	Identifier	tempref		9004296	1					
ANR	9004313	IdentifierDecl	valref		9004296	2					
ANR	9004314	IdentifierDeclType	ref		9004296	0					
ANR	9004315	Identifier	valref		9004296	1					
ANR	9004316	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	5126:4:161993:162038	9004296	2	True				
ANR	9004317	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		9004296	0		=			
ANR	9004318	Identifier	code		9004296	0					
ANR	9004319	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		9004296	1					
ANR	9004320	Callee	array_get		9004296	0					
ANR	9004321	Identifier	array_get		9004296	0					
ANR	9004322	ArgumentList	imemory		9004296	1					
ANR	9004323	Argument	imemory		9004296	0					
ANR	9004324	Identifier	imemory		9004296	0					
ANR	9004325	Argument	space		9004296	1					
ANR	9004326	Identifier	space		9004296	0					
ANR	9004327	Argument	1		9004296	2					
ANR	9004328	PrimaryExpression	1		9004296	0					
ANR	9004329	Argument	& CIEdict		9004296	3					
ANR	9004330	UnaryOperationExpression	& CIEdict		9004296	0					
ANR	9004331	UnaryOperator	&		9004296	0					
ANR	9004332	Identifier	CIEdict		9004296	1					
ANR	9004333	IfStatement	if ( code < 0 )		9004296	3					
ANR	9004334	Condition	code < 0	5127:8:162048:162055	9004296	0	True				
ANR	9004335	RelationalExpression	code < 0		9004296	0		<			
ANR	9004336	Identifier	code		9004296	0					
ANR	9004337	PrimaryExpression	0		9004296	1					
ANR	9004338	ReturnStatement	return code ;	5128:8:162066:162077	9004296	1	True				
ANR	9004339	Identifier	code		9004296	0					
ANR	9004340	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"	5131:4:162139:162191	9004296	4	True				
ANR	9004341	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"		9004296	0		=			
ANR	9004342	Identifier	code		9004296	0					
ANR	9004343	CallExpression	"dict_find_string ( & CIEdict , ""Range"" , & tempref )"		9004296	1					
ANR	9004344	Callee	dict_find_string		9004296	0					
ANR	9004345	Identifier	dict_find_string		9004296	0					
ANR	9004346	ArgumentList	& CIEdict		9004296	1					
ANR	9004347	Argument	& CIEdict		9004296	0					
ANR	9004348	UnaryOperationExpression	& CIEdict		9004296	0					
ANR	9004349	UnaryOperator	&		9004296	0					
ANR	9004350	Identifier	CIEdict		9004296	1					
ANR	9004351	Argument	"""Range"""		9004296	1					
ANR	9004352	PrimaryExpression	"""Range"""		9004296	0					
ANR	9004353	Argument	& tempref		9004296	2					
ANR	9004354	UnaryOperationExpression	& tempref		9004296	0					
ANR	9004355	UnaryOperator	&		9004296	0					
ANR	9004356	Identifier	tempref		9004296	1					
ANR	9004357	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9004296	5					
ANR	9004358	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5132:8:162201:162240	9004296	0	True				
ANR	9004359	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9004296	0		&&			
ANR	9004360	RelationalExpression	code > 0		9004296	0		>			
ANR	9004361	Identifier	code		9004296	0					
ANR	9004362	PrimaryExpression	0		9004296	1					
ANR	9004363	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9004296	1					
ANR	9004364	UnaryOperator	!		9004296	0					
ANR	9004365	CallExpression	"r_has_type ( tempref , t_null )"		9004296	1					
ANR	9004366	Callee	r_has_type		9004296	0					
ANR	9004367	Identifier	r_has_type		9004296	0					
ANR	9004368	ArgumentList	tempref		9004296	1					
ANR	9004369	Argument	tempref		9004296	0					
ANR	9004370	Identifier	tempref		9004296	0					
ANR	9004371	Argument	t_null		9004296	1					
ANR	9004372	Identifier	t_null		9004296	0					
ANR	9004373	CompoundStatement		11:50:312:312	9004296	1					
ANR	9004374	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		9004296	0					
ANR	9004375	ForInit	i = 0 ;	5133:13:162258:162261	9004296	0	True				
ANR	9004376	AssignmentExpression	i = 0		9004296	0		=			
ANR	9004377	Identifier	i		9004296	0					
ANR	9004378	PrimaryExpression	0		9004296	1					
ANR	9004379	Condition	i < 4	5133:17:162262:162264	9004296	1	True				
ANR	9004380	RelationalExpression	i < 4		9004296	0		<			
ANR	9004381	Identifier	i		9004296	0					
ANR	9004382	PrimaryExpression	4		9004296	1					
ANR	9004383	PostIncDecOperationExpression	i ++	5133:21:162266:162268	9004296	2	True				
ANR	9004384	Identifier	i		9004296	0					
ANR	9004385	IncDec	++		9004296	1					
ANR	9004386	CompoundStatement		12:26:340:340	9004296	3					
ANR	9004387	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5134:12:162285:162331	9004296	0	True				
ANR	9004388	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9004296	0		=			
ANR	9004389	Identifier	code		9004296	0					
ANR	9004390	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9004296	1					
ANR	9004391	Callee	array_get		9004296	0					
ANR	9004392	Identifier	array_get		9004296	0					
ANR	9004393	ArgumentList	imemory		9004296	1					
ANR	9004394	Argument	imemory		9004296	0					
ANR	9004395	Identifier	imemory		9004296	0					
ANR	9004396	Argument	tempref		9004296	1					
ANR	9004397	Identifier	tempref		9004296	0					
ANR	9004398	Argument	i		9004296	2					
ANR	9004399	Identifier	i		9004296	0					
ANR	9004400	Argument	& valref		9004296	3					
ANR	9004401	UnaryOperationExpression	& valref		9004296	0					
ANR	9004402	UnaryOperator	&		9004296	0					
ANR	9004403	Identifier	valref		9004296	1					
ANR	9004404	IfStatement	if ( code < 0 )		9004296	1					
ANR	9004405	Condition	code < 0	5135:16:162349:162356	9004296	0	True				
ANR	9004406	RelationalExpression	code < 0		9004296	0		<			
ANR	9004407	Identifier	code		9004296	0					
ANR	9004408	PrimaryExpression	0		9004296	1					
ANR	9004409	ReturnStatement	return code ;	5136:16:162375:162386	9004296	1	True				
ANR	9004410	Identifier	code		9004296	0					
ANR	9004411	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9004296	2					
ANR	9004412	Condition	"r_has_type ( & valref , t_integer )"	5137:16:162404:162433	9004296	0	True				
ANR	9004413	CallExpression	"r_has_type ( & valref , t_integer )"		9004296	0					
ANR	9004414	Callee	r_has_type		9004296	0					
ANR	9004415	Identifier	r_has_type		9004296	0					
ANR	9004416	ArgumentList	& valref		9004296	1					
ANR	9004417	Argument	& valref		9004296	0					
ANR	9004418	UnaryOperationExpression	& valref		9004296	0					
ANR	9004419	UnaryOperator	&		9004296	0					
ANR	9004420	Identifier	valref		9004296	1					
ANR	9004421	Argument	t_integer		9004296	1					
ANR	9004422	Identifier	t_integer		9004296	0					
ANR	9004423	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5138:16:162452:162487	9004296	1	True				
ANR	9004424	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		9004296	0		=			
ANR	9004425	ArrayIndexing	ptr [ i ]		9004296	0					
ANR	9004426	Identifier	ptr		9004296	0					
ANR	9004427	Identifier	i		9004296	1					
ANR	9004428	CastExpression	( float ) valref . value . intval		9004296	1					
ANR	9004429	CastTarget	float		9004296	0					
ANR	9004430	MemberAccess	valref . value . intval		9004296	1					
ANR	9004431	MemberAccess	valref . value		9004296	0					
ANR	9004432	Identifier	valref		9004296	0					
ANR	9004433	Identifier	value		9004296	1					
ANR	9004434	Identifier	intval		9004296	1					
ANR	9004435	ElseStatement	else		9004296	0					
ANR	9004436	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		9004296	0					
ANR	9004437	Condition	"r_has_type ( & valref , t_real )"	5139:21:162510:162536	9004296	0	True				
ANR	9004438	CallExpression	"r_has_type ( & valref , t_real )"		9004296	0					
ANR	9004439	Callee	r_has_type		9004296	0					
ANR	9004440	Identifier	r_has_type		9004296	0					
ANR	9004441	ArgumentList	& valref		9004296	1					
ANR	9004442	Argument	& valref		9004296	0					
ANR	9004443	UnaryOperationExpression	& valref		9004296	0					
ANR	9004444	UnaryOperator	&		9004296	0					
ANR	9004445	Identifier	valref		9004296	1					
ANR	9004446	Argument	t_real		9004296	1					
ANR	9004447	Identifier	t_real		9004296	0					
ANR	9004448	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5140:16:162555:162591	9004296	1	True				
ANR	9004449	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		9004296	0		=			
ANR	9004450	ArrayIndexing	ptr [ i ]		9004296	0					
ANR	9004451	Identifier	ptr		9004296	0					
ANR	9004452	Identifier	i		9004296	1					
ANR	9004453	CastExpression	( float ) valref . value . realval		9004296	1					
ANR	9004454	CastTarget	float		9004296	0					
ANR	9004455	MemberAccess	valref . value . realval		9004296	1					
ANR	9004456	MemberAccess	valref . value		9004296	0					
ANR	9004457	Identifier	valref		9004296	0					
ANR	9004458	Identifier	value		9004296	1					
ANR	9004459	Identifier	realval		9004296	1					
ANR	9004460	ElseStatement	else		9004296	0					
ANR	9004461	ExpressionStatement	return_error ( gs_error_typecheck )	5142:16:162626:162658	9004296	0	True				
ANR	9004462	CallExpression	return_error ( gs_error_typecheck )		9004296	0					
ANR	9004463	Callee	return_error		9004296	0					
ANR	9004464	Identifier	return_error		9004296	0					
ANR	9004465	ArgumentList	gs_error_typecheck		9004296	1					
ANR	9004466	Argument	gs_error_typecheck		9004296	0					
ANR	9004467	Identifier	gs_error_typecheck		9004296	0					
ANR	9004468	ElseStatement	else		9004296	0					
ANR	9004469	CompoundStatement		23:11:750:750	9004296	0					
ANR	9004470	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		9004296	0					
ANR	9004471	ForInit	i = 0 ;	5146:13:162733:162736	9004296	0	True				
ANR	9004472	AssignmentExpression	i = 0		9004296	0		=			
ANR	9004473	Identifier	i		9004296	0					
ANR	9004474	PrimaryExpression	0		9004296	1					
ANR	9004475	Condition	i < 2	5146:17:162737:162739	9004296	1	True				
ANR	9004476	RelationalExpression	i < 2		9004296	0		<			
ANR	9004477	Identifier	i		9004296	0					
ANR	9004478	PrimaryExpression	2		9004296	1					
ANR	9004479	PostIncDecOperationExpression	i ++	5146:21:162741:162743	9004296	2	True				
ANR	9004480	Identifier	i		9004296	0					
ANR	9004481	IncDec	++		9004296	1					
ANR	9004482	CompoundStatement		25:26:815:815	9004296	3					
ANR	9004483	ExpressionStatement	ptr [ 2 * i ] = - 100	5147:12:162760:162777	9004296	0	True				
ANR	9004484	AssignmentExpression	ptr [ 2 * i ] = - 100		9004296	0		=			
ANR	9004485	ArrayIndexing	ptr [ 2 * i ]		9004296	0					
ANR	9004486	Identifier	ptr		9004296	0					
ANR	9004487	MultiplicativeExpression	2 * i		9004296	1		*			
ANR	9004488	PrimaryExpression	2		9004296	0					
ANR	9004489	Identifier	i		9004296	1					
ANR	9004490	UnaryOperationExpression	- 100		9004296	1					
ANR	9004491	UnaryOperator	-		9004296	0					
ANR	9004492	PrimaryExpression	100		9004296	1					
ANR	9004493	ExpressionStatement	ptr [ ( 2 * i ) + 1 ] = 100	5148:12:162791:162813	9004296	1	True				
ANR	9004494	AssignmentExpression	ptr [ ( 2 * i ) + 1 ] = 100		9004296	0		=			
ANR	9004495	ArrayIndexing	ptr [ ( 2 * i ) + 1 ]		9004296	0					
ANR	9004496	Identifier	ptr		9004296	0					
ANR	9004497	AdditiveExpression	( 2 * i ) + 1		9004296	1		+			
ANR	9004498	MultiplicativeExpression	2 * i		9004296	0		*			
ANR	9004499	PrimaryExpression	2		9004296	0					
ANR	9004500	Identifier	i		9004296	1					
ANR	9004501	PrimaryExpression	1		9004296	1					
ANR	9004502	PrimaryExpression	100		9004296	1					
ANR	9004503	ReturnStatement	return 0 ;	5151:4:162835:162843	9004296	6	True				
ANR	9004504	PrimaryExpression	0		9004296	0					
ANR	9004505	ReturnType	static int		9004296	1					
ANR	9004506	Identifier	labdomain		9004296	2					
ANR	9004507	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9004296	3					
ANR	9004508	Parameter	i_ctx_t * i_ctx_p	5121:21:161887:161903	9004296	0	True				
ANR	9004509	ParameterType	i_ctx_t *		9004296	0					
ANR	9004510	Identifier	i_ctx_p		9004296	1					
ANR	9004511	Parameter	ref * space	5121:40:161906:161915	9004296	1	True				
ANR	9004512	ParameterType	ref *		9004296	0					
ANR	9004513	Identifier	space		9004296	1					
ANR	9004514	Parameter	float * ptr	5121:52:161918:161927	9004296	2	True				
ANR	9004515	ParameterType	float *		9004296	0					
ANR	9004516	Identifier	ptr		9004296	1					
ANR	9004517	CFGEntryNode	ENTRY		9004296		True				
ANR	9004518	CFGExitNode	EXIT		9004296		True				
ANR	9004519	Symbol	valref . value		9004296						
ANR	9004520	Symbol	code		9004296						
ANR	9004521	Symbol	dict_find_string		9004296						
ANR	9004522	Symbol	array_get		9004296						
ANR	9004523	Symbol	& CIEdict		9004296						
ANR	9004524	Symbol	i		9004296						
ANR	9004525	Symbol	& tempref		9004296						
ANR	9004526	Symbol	t_real		9004296						
ANR	9004527	Symbol	space		9004296						
ANR	9004528	Symbol	valref . value . realval		9004296						
ANR	9004529	Symbol	ptr		9004296						
ANR	9004530	Symbol	t_null		9004296						
ANR	9004531	Symbol	r_has_type		9004296						
ANR	9004532	Symbol	gs_error_typecheck		9004296						
ANR	9004533	Symbol	* i		9004296						
ANR	9004534	Symbol	t_integer		9004296						
ANR	9004535	Symbol	valref . value . intval		9004296						
ANR	9004536	Symbol	& valref		9004296						
ANR	9004537	Symbol	i_ctx_p		9004296						
ANR	9004538	Symbol	valref		9004296						
ANR	9004539	Symbol	* ptr		9004296						
ANR	9004540	Symbol	CIEdict		9004296						
ANR	9004541	Symbol	imemory		9004296						
ANR	9004542	Symbol	tempref		9004296						
ANR	9004543	Function	labbasecolor	5154:0:162848:163249							
ANR	9004544	FunctionDef	"labbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		9004543	0					
ANR	9004545	CompoundStatement		5155:0:162954:163249	9004543	0					
ANR	9004546	IdentifierDeclStatement	os_ptr op ;	5156:4:162960:162969	9004543	0	True				
ANR	9004547	IdentifierDecl	op		9004543	0					
ANR	9004548	IdentifierDeclType	os_ptr		9004543	0					
ANR	9004549	Identifier	op		9004543	1					
ANR	9004550	IdentifierDeclStatement	"int i , components = 1 ;"	5157:4:162975:162994	9004543	1	True				
ANR	9004551	IdentifierDecl	i		9004543	0					
ANR	9004552	IdentifierDeclType	int		9004543	0					
ANR	9004553	Identifier	i		9004543	1					
ANR	9004554	IdentifierDecl	components = 1		9004543	1					
ANR	9004555	IdentifierDeclType	int		9004543	0					
ANR	9004556	Identifier	components		9004543	1					
ANR	9004557	AssignmentExpression	components = 1		9004543	2		=			
ANR	9004558	Identifier	components		9004543	0					
ANR	9004559	PrimaryExpression	1		9004543	1					
ANR	9004560	ExpressionStatement	components = 3	5159:4:163001:163015	9004543	2	True				
ANR	9004561	AssignmentExpression	components = 3		9004543	0		=			
ANR	9004562	Identifier	components		9004543	0					
ANR	9004563	PrimaryExpression	3		9004543	1					
ANR	9004564	ExpressionStatement	pop ( components )	5160:4:163021:163036	9004543	3	True				
ANR	9004565	CallExpression	pop ( components )		9004543	0					
ANR	9004566	Callee	pop		9004543	0					
ANR	9004567	Identifier	pop		9004543	0					
ANR	9004568	ArgumentList	components		9004543	1					
ANR	9004569	Argument	components		9004543	0					
ANR	9004570	Identifier	components		9004543	0					
ANR	9004571	ExpressionStatement	op = osp	5161:4:163042:163050	9004543	4	True				
ANR	9004572	AssignmentExpression	op = osp		9004543	0		=			
ANR	9004573	Identifier	op		9004543	0					
ANR	9004574	Identifier	osp		9004543	1					
ANR	9004575	ExpressionStatement	components = 3	5162:4:163056:163070	9004543	5	True				
ANR	9004576	AssignmentExpression	components = 3		9004543	0		=			
ANR	9004577	Identifier	components		9004543	0					
ANR	9004578	PrimaryExpression	3		9004543	1					
ANR	9004579	ExpressionStatement	push ( components )	5163:4:163076:163092	9004543	6	True				
ANR	9004580	CallExpression	push ( components )		9004543	0					
ANR	9004581	Callee	push		9004543	0					
ANR	9004582	Identifier	push		9004543	0					
ANR	9004583	ArgumentList	components		9004543	1					
ANR	9004584	Argument	components		9004543	0					
ANR	9004585	Identifier	components		9004543	0					
ANR	9004586	ExpressionStatement	op -= components - 1	5164:4:163098:163116	9004543	7	True				
ANR	9004587	AssignmentExpression	op -= components - 1		9004543	0		-=			
ANR	9004588	Identifier	op		9004543	0					
ANR	9004589	AdditiveExpression	components - 1		9004543	1		-			
ANR	9004590	Identifier	components		9004543	0					
ANR	9004591	PrimaryExpression	1		9004543	1					
ANR	9004592	ForStatement	for ( i = 0 ; i < components ; i ++ )		9004543	8					
ANR	9004593	ForInit	i = 0 ;	5165:9:163127:163130	9004543	0	True				
ANR	9004594	AssignmentExpression	i = 0		9004543	0		=			
ANR	9004595	Identifier	i		9004543	0					
ANR	9004596	PrimaryExpression	0		9004543	1					
ANR	9004597	Condition	i < components	5165:13:163131:163142	9004543	1	True				
ANR	9004598	RelationalExpression	i < components		9004543	0		<			
ANR	9004599	Identifier	i		9004543	0					
ANR	9004600	Identifier	components		9004543	1					
ANR	9004601	PostIncDecOperationExpression	i ++	5165:26:163144:163146	9004543	2	True				
ANR	9004602	Identifier	i		9004543	0					
ANR	9004603	IncDec	++		9004543	1					
ANR	9004604	CompoundStatement		11:31:194:194	9004543	3					
ANR	9004605	ExpressionStatement	"make_real ( op , ( float ) 0 )"	5166:8:163159:163182	9004543	0	True				
ANR	9004606	CallExpression	"make_real ( op , ( float ) 0 )"		9004543	0					
ANR	9004607	Callee	make_real		9004543	0					
ANR	9004608	Identifier	make_real		9004543	0					
ANR	9004609	ArgumentList	op		9004543	1					
ANR	9004610	Argument	op		9004543	0					
ANR	9004611	Identifier	op		9004543	0					
ANR	9004612	Argument	( float ) 0		9004543	1					
ANR	9004613	CastExpression	( float ) 0		9004543	0					
ANR	9004614	CastTarget	float		9004543	0					
ANR	9004615	PrimaryExpression	0		9004543	1					
ANR	9004616	ExpressionStatement	op ++	5167:8:163192:163196	9004543	1	True				
ANR	9004617	PostIncDecOperationExpression	op ++		9004543	0					
ANR	9004618	Identifier	op		9004543	0					
ANR	9004619	IncDec	++		9004543	1					
ANR	9004620	ExpressionStatement	* stage = 0	5169:4:163208:163218	9004543	9	True				
ANR	9004621	AssignmentExpression	* stage = 0		9004543	0		=			
ANR	9004622	UnaryOperationExpression	* stage		9004543	0					
ANR	9004623	UnaryOperator	*		9004543	0					
ANR	9004624	Identifier	stage		9004543	1					
ANR	9004625	PrimaryExpression	0		9004543	1					
ANR	9004626	ExpressionStatement	* cont = 0	5170:4:163224:163233	9004543	10	True				
ANR	9004627	AssignmentExpression	* cont = 0		9004543	0		=			
ANR	9004628	UnaryOperationExpression	* cont		9004543	0					
ANR	9004629	UnaryOperator	*		9004543	0					
ANR	9004630	Identifier	cont		9004543	1					
ANR	9004631	PrimaryExpression	0		9004543	1					
ANR	9004632	ReturnStatement	return 0 ;	5171:4:163239:163247	9004543	11	True				
ANR	9004633	PrimaryExpression	0		9004543	0					
ANR	9004634	ReturnType	static int		9004543	1					
ANR	9004635	Identifier	labbasecolor		9004543	2					
ANR	9004636	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		9004543	3					
ANR	9004637	Parameter	i_ctx_t * i_ctx_p	5154:24:162872:162888	9004543	0	True				
ANR	9004638	ParameterType	i_ctx_t *		9004543	0					
ANR	9004639	Identifier	i_ctx_p		9004543	1					
ANR	9004640	Parameter	ref * space	5154:43:162891:162900	9004543	1	True				
ANR	9004641	ParameterType	ref *		9004543	0					
ANR	9004642	Identifier	space		9004543	1					
ANR	9004643	Parameter	int base	5154:55:162903:162910	9004543	2	True				
ANR	9004644	ParameterType	int		9004543	0					
ANR	9004645	Identifier	base		9004543	1					
ANR	9004646	Parameter	int * stage	5154:65:162913:162922	9004543	3	True				
ANR	9004647	ParameterType	int *		9004543	0					
ANR	9004648	Identifier	stage		9004543	1					
ANR	9004649	Parameter	int * cont	5154:77:162925:162933	9004543	4	True				
ANR	9004650	ParameterType	int *		9004543	0					
ANR	9004651	Identifier	cont		9004543	1					
ANR	9004652	Parameter	int * stack_depth	5154:88:162936:162951	9004543	5	True				
ANR	9004653	ParameterType	int *		9004543	0					
ANR	9004654	Identifier	stack_depth		9004543	1					
ANR	9004655	CFGEntryNode	ENTRY		9004543		True				
ANR	9004656	CFGExitNode	EXIT		9004543		True				
ANR	9004657	Symbol	stack_depth		9004543						
ANR	9004658	Symbol	op		9004543						
ANR	9004659	Symbol	components		9004543						
ANR	9004660	Symbol	* stage		9004543						
ANR	9004661	Symbol	stage		9004543						
ANR	9004662	Symbol	* cont		9004543						
ANR	9004663	Symbol	i_ctx_p		9004543						
ANR	9004664	Symbol	i		9004543						
ANR	9004665	Symbol	cont		9004543						
ANR	9004666	Symbol	osp		9004543						
ANR	9004667	Symbol	space		9004543						
ANR	9004668	Symbol	base		9004543						
ANR	9004669	Function	labvalidate	5174:0:163252:163624							
ANR	9004670	FunctionDef	"labvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		9004669	0					
ANR	9004671	CompoundStatement		5175:0:163335:163624	9004669	0					
ANR	9004672	IdentifierDeclStatement	os_ptr op = osp ;	5176:4:163341:163356	9004669	0	True				
ANR	9004673	IdentifierDecl	op = osp		9004669	0					
ANR	9004674	IdentifierDeclType	os_ptr		9004669	0					
ANR	9004675	Identifier	op		9004669	1					
ANR	9004676	AssignmentExpression	op = osp		9004669	2		=			
ANR	9004677	Identifier	osp		9004669	0					
ANR	9004678	Identifier	osp		9004669	1					
ANR	9004679	IdentifierDeclStatement	int i ;	5177:4:163362:163367	9004669	1	True				
ANR	9004680	IdentifierDecl	i		9004669	0					
ANR	9004681	IdentifierDeclType	int		9004669	0					
ANR	9004682	Identifier	i		9004669	1					
ANR	9004683	IfStatement	if ( num_comps < 3 )		9004669	2					
ANR	9004684	Condition	num_comps < 3	5179:8:163378:163390	9004669	0	True				
ANR	9004685	RelationalExpression	num_comps < 3		9004669	0		<			
ANR	9004686	Identifier	num_comps		9004669	0					
ANR	9004687	PrimaryExpression	3		9004669	1					
ANR	9004688	ExpressionStatement	return_error ( gs_error_stackunderflow )	5180:8:163401:163438	9004669	1	True				
ANR	9004689	CallExpression	return_error ( gs_error_stackunderflow )		9004669	0					
ANR	9004690	Callee	return_error		9004669	0					
ANR	9004691	Identifier	return_error		9004669	0					
ANR	9004692	ArgumentList	gs_error_stackunderflow		9004669	1					
ANR	9004693	Argument	gs_error_stackunderflow		9004669	0					
ANR	9004694	Identifier	gs_error_stackunderflow		9004669	0					
ANR	9004695	ExpressionStatement	op -= 2	5181:4:163444:163451	9004669	3	True				
ANR	9004696	AssignmentExpression	op -= 2		9004669	0		-=			
ANR	9004697	Identifier	op		9004669	0					
ANR	9004698	PrimaryExpression	2		9004669	1					
ANR	9004699	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		9004669	4					
ANR	9004700	ForInit	i = 0 ;	5182:9:163462:163465	9004669	0	True				
ANR	9004701	AssignmentExpression	i = 0		9004669	0		=			
ANR	9004702	Identifier	i		9004669	0					
ANR	9004703	PrimaryExpression	0		9004669	1					
ANR	9004704	Condition	i < 3	5182:13:163466:163468	9004669	1	True				
ANR	9004705	RelationalExpression	i < 3		9004669	0		<			
ANR	9004706	Identifier	i		9004669	0					
ANR	9004707	PrimaryExpression	3		9004669	1					
ANR	9004708	PostIncDecOperationExpression	i ++	5182:17:163470:163472	9004669	2	True				
ANR	9004709	Identifier	i		9004669	0					
ANR	9004710	IncDec	++		9004669	1					
ANR	9004711	CompoundStatement		8:22:139:139	9004669	3					
ANR	9004712	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		9004669	0					
ANR	9004713	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	5183:12:163489:163541	9004669	0	True				
ANR	9004714	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		9004669	0		&&			
ANR	9004715	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		9004669	0					
ANR	9004716	UnaryOperator	!		9004669	0					
ANR	9004717	CallExpression	"r_has_type ( op , t_integer )"		9004669	1					
ANR	9004718	Callee	r_has_type		9004669	0					
ANR	9004719	Identifier	r_has_type		9004669	0					
ANR	9004720	ArgumentList	op		9004669	1					
ANR	9004721	Argument	op		9004669	0					
ANR	9004722	Identifier	op		9004669	0					
ANR	9004723	Argument	t_integer		9004669	1					
ANR	9004724	Identifier	t_integer		9004669	0					
ANR	9004725	UnaryOperationExpression	"! r_has_type ( op , t_real )"		9004669	1					
ANR	9004726	UnaryOperator	!		9004669	0					
ANR	9004727	CallExpression	"r_has_type ( op , t_real )"		9004669	1					
ANR	9004728	Callee	r_has_type		9004669	0					
ANR	9004729	Identifier	r_has_type		9004669	0					
ANR	9004730	ArgumentList	op		9004669	1					
ANR	9004731	Argument	op		9004669	0					
ANR	9004732	Identifier	op		9004669	0					
ANR	9004733	Argument	t_real		9004669	1					
ANR	9004734	Identifier	t_real		9004669	0					
ANR	9004735	ExpressionStatement	return_error ( gs_error_typecheck )	5184:12:163556:163588	9004669	1	True				
ANR	9004736	CallExpression	return_error ( gs_error_typecheck )		9004669	0					
ANR	9004737	Callee	return_error		9004669	0					
ANR	9004738	Identifier	return_error		9004669	0					
ANR	9004739	ArgumentList	gs_error_typecheck		9004669	1					
ANR	9004740	Argument	gs_error_typecheck		9004669	0					
ANR	9004741	Identifier	gs_error_typecheck		9004669	0					
ANR	9004742	ExpressionStatement	op ++	5185:8:163598:163602	9004669	1	True				
ANR	9004743	PostIncDecOperationExpression	op ++		9004669	0					
ANR	9004744	Identifier	op		9004669	0					
ANR	9004745	IncDec	++		9004669	1					
ANR	9004746	ReturnStatement	return 0 ;	5187:4:163614:163622	9004669	5	True				
ANR	9004747	PrimaryExpression	0		9004669	0					
ANR	9004748	ReturnType	static int		9004669	1					
ANR	9004749	Identifier	labvalidate		9004669	2					
ANR	9004750	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		9004669	3					
ANR	9004751	Parameter	i_ctx_t * i_ctx_p	5174:23:163275:163290	9004669	0	True				
ANR	9004752	ParameterType	i_ctx_t *		9004669	0					
ANR	9004753	Identifier	i_ctx_p		9004669	1					
ANR	9004754	Parameter	ref * space	5174:41:163293:163302	9004669	1	True				
ANR	9004755	ParameterType	ref *		9004669	0					
ANR	9004756	Identifier	space		9004669	1					
ANR	9004757	Parameter	float * values	5174:53:163305:163317	9004669	2	True				
ANR	9004758	ParameterType	float *		9004669	0					
ANR	9004759	Identifier	values		9004669	1					
ANR	9004760	Parameter	int num_comps	5174:68:163320:163332	9004669	3	True				
ANR	9004761	ParameterType	int		9004669	0					
ANR	9004762	Identifier	num_comps		9004669	1					
ANR	9004763	CFGEntryNode	ENTRY		9004669		True				
ANR	9004764	CFGExitNode	EXIT		9004669		True				
ANR	9004765	Symbol	op		9004669						
ANR	9004766	Symbol	r_has_type		9004669						
ANR	9004767	Symbol	gs_error_typecheck		9004669						
ANR	9004768	Symbol	t_integer		9004669						
ANR	9004769	Symbol	gs_error_stackunderflow		9004669						
ANR	9004770	Symbol	i_ctx_p		9004669						
ANR	9004771	Symbol	values		9004669						
ANR	9004772	Symbol	num_comps		9004669						
ANR	9004773	Symbol	i		9004669						
ANR	9004774	Symbol	t_real		9004669						
ANR	9004775	Symbol	osp		9004669						
ANR	9004776	Symbol	space		9004669						
ANR	9004777	Function	checkCalMatrix	5191:0:163694:164210							
ANR	9004778	FunctionDef	"checkCalMatrix (i_ctx_t * i_ctx_p , ref * CIEdict)"		9004777	0					
ANR	9004779	CompoundStatement		5192:0:163753:164210	9004777	0					
ANR	9004780	IdentifierDeclStatement	int code ;	5193:4:163759:163767	9004777	0	True				
ANR	9004781	IdentifierDecl	code		9004777	0					
ANR	9004782	IdentifierDeclType	int		9004777	0					
ANR	9004783	Identifier	code		9004777	1					
ANR	9004784	IdentifierDeclStatement	float value [ 9 ] ;	5194:4:163773:163787	9004777	1	True				
ANR	9004785	IdentifierDecl	value [ 9 ]		9004777	0					
ANR	9004786	IdentifierDeclType	float [ 9 ]		9004777	0					
ANR	9004787	Identifier	value		9004777	1					
ANR	9004788	PrimaryExpression	9		9004777	2					
ANR	9004789	IdentifierDeclStatement	ref * tempref ;	5195:4:163793:163805	9004777	2	True				
ANR	9004790	IdentifierDecl	* tempref		9004777	0					
ANR	9004791	IdentifierDeclType	ref *		9004777	0					
ANR	9004792	Identifier	tempref		9004777	1					
ANR	9004793	ExpressionStatement	"code = dict_find_string ( CIEdict , ""Matrix"" , & tempref )"	5197:4:163812:163864	9004777	3	True				
ANR	9004794	AssignmentExpression	"code = dict_find_string ( CIEdict , ""Matrix"" , & tempref )"		9004777	0		=			
ANR	9004795	Identifier	code		9004777	0					
ANR	9004796	CallExpression	"dict_find_string ( CIEdict , ""Matrix"" , & tempref )"		9004777	1					
ANR	9004797	Callee	dict_find_string		9004777	0					
ANR	9004798	Identifier	dict_find_string		9004777	0					
ANR	9004799	ArgumentList	CIEdict		9004777	1					
ANR	9004800	Argument	CIEdict		9004777	0					
ANR	9004801	Identifier	CIEdict		9004777	0					
ANR	9004802	Argument	"""Matrix"""		9004777	1					
ANR	9004803	PrimaryExpression	"""Matrix"""		9004777	0					
ANR	9004804	Argument	& tempref		9004777	2					
ANR	9004805	UnaryOperationExpression	& tempref		9004777	0					
ANR	9004806	UnaryOperator	&		9004777	0					
ANR	9004807	Identifier	tempref		9004777	1					
ANR	9004808	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9004777	4					
ANR	9004809	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5198:8:163874:163913	9004777	0	True				
ANR	9004810	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9004777	0		&&			
ANR	9004811	RelationalExpression	code > 0		9004777	0		>			
ANR	9004812	Identifier	code		9004777	0					
ANR	9004813	PrimaryExpression	0		9004777	1					
ANR	9004814	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9004777	1					
ANR	9004815	UnaryOperator	!		9004777	0					
ANR	9004816	CallExpression	"r_has_type ( tempref , t_null )"		9004777	1					
ANR	9004817	Callee	r_has_type		9004777	0					
ANR	9004818	Identifier	r_has_type		9004777	0					
ANR	9004819	ArgumentList	tempref		9004777	1					
ANR	9004820	Argument	tempref		9004777	0					
ANR	9004821	Identifier	tempref		9004777	0					
ANR	9004822	Argument	t_null		9004777	1					
ANR	9004823	Identifier	t_null		9004777	0					
ANR	9004824	CompoundStatement		7:50:162:162	9004777	1					
ANR	9004825	IfStatement	if ( ! r_is_array ( tempref ) )		9004777	0					
ANR	9004826	Condition	! r_is_array ( tempref )	5199:12:163930:163949	9004777	0	True				
ANR	9004827	UnaryOperationExpression	! r_is_array ( tempref )		9004777	0					
ANR	9004828	UnaryOperator	!		9004777	0					
ANR	9004829	CallExpression	r_is_array ( tempref )		9004777	1					
ANR	9004830	Callee	r_is_array		9004777	0					
ANR	9004831	Identifier	r_is_array		9004777	0					
ANR	9004832	ArgumentList	tempref		9004777	1					
ANR	9004833	Argument	tempref		9004777	0					
ANR	9004834	Identifier	tempref		9004777	0					
ANR	9004835	ExpressionStatement	return_error ( gs_error_typecheck )	5200:12:163964:163996	9004777	1	True				
ANR	9004836	CallExpression	return_error ( gs_error_typecheck )		9004777	0					
ANR	9004837	Callee	return_error		9004777	0					
ANR	9004838	Identifier	return_error		9004777	0					
ANR	9004839	ArgumentList	gs_error_typecheck		9004777	1					
ANR	9004840	Argument	gs_error_typecheck		9004777	0					
ANR	9004841	Identifier	gs_error_typecheck		9004777	0					
ANR	9004842	IfStatement	if ( r_size ( tempref ) != 9 )		9004777	1					
ANR	9004843	Condition	r_size ( tempref ) != 9	5201:12:164010:164029	9004777	0	True				
ANR	9004844	EqualityExpression	r_size ( tempref ) != 9		9004777	0		!=			
ANR	9004845	CallExpression	r_size ( tempref )		9004777	0					
ANR	9004846	Callee	r_size		9004777	0					
ANR	9004847	Identifier	r_size		9004777	0					
ANR	9004848	ArgumentList	tempref		9004777	1					
ANR	9004849	Argument	tempref		9004777	0					
ANR	9004850	Identifier	tempref		9004777	0					
ANR	9004851	PrimaryExpression	9		9004777	1					
ANR	9004852	ExpressionStatement	return_error ( gs_error_rangecheck )	5202:12:164044:164077	9004777	1	True				
ANR	9004853	CallExpression	return_error ( gs_error_rangecheck )		9004777	0					
ANR	9004854	Callee	return_error		9004777	0					
ANR	9004855	Identifier	return_error		9004777	0					
ANR	9004856	ArgumentList	gs_error_rangecheck		9004777	1					
ANR	9004857	Argument	gs_error_rangecheck		9004777	0					
ANR	9004858	Identifier	gs_error_rangecheck		9004777	0					
ANR	9004859	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	5203:8:164087:164141	9004777	2	True				
ANR	9004860	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		9004777	0		=			
ANR	9004861	Identifier	code		9004777	0					
ANR	9004862	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		9004777	1					
ANR	9004863	Callee	get_cie_param_array		9004777	0					
ANR	9004864	Identifier	get_cie_param_array		9004777	0					
ANR	9004865	ArgumentList	imemory		9004777	1					
ANR	9004866	Argument	imemory		9004777	0					
ANR	9004867	Identifier	imemory		9004777	0					
ANR	9004868	Argument	tempref		9004777	1					
ANR	9004869	Identifier	tempref		9004777	0					
ANR	9004870	Argument	9		9004777	2					
ANR	9004871	PrimaryExpression	9		9004777	0					
ANR	9004872	Argument	value		9004777	3					
ANR	9004873	Identifier	value		9004777	0					
ANR	9004874	IfStatement	if ( code < 0 )		9004777	3					
ANR	9004875	Condition	code < 0	5204:12:164155:164162	9004777	0	True				
ANR	9004876	RelationalExpression	code < 0		9004777	0		<			
ANR	9004877	Identifier	code		9004777	0					
ANR	9004878	PrimaryExpression	0		9004777	1					
ANR	9004879	ReturnStatement	return code ;	5205:12:164177:164188	9004777	1	True				
ANR	9004880	Identifier	code		9004777	0					
ANR	9004881	ReturnStatement	return 0 ;	5207:4:164200:164208	9004777	5	True				
ANR	9004882	PrimaryExpression	0		9004777	0					
ANR	9004883	ReturnType	static int		9004777	1					
ANR	9004884	Identifier	checkCalMatrix		9004777	2					
ANR	9004885	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		9004777	3					
ANR	9004886	Parameter	i_ctx_t * i_ctx_p	5191:26:163720:163736	9004777	0	True				
ANR	9004887	ParameterType	i_ctx_t *		9004777	0					
ANR	9004888	Identifier	i_ctx_p		9004777	1					
ANR	9004889	Parameter	ref * CIEdict	5191:45:163739:163750	9004777	1	True				
ANR	9004890	ParameterType	ref *		9004777	0					
ANR	9004891	Identifier	CIEdict		9004777	1					
ANR	9004892	CFGEntryNode	ENTRY		9004777		True				
ANR	9004893	CFGExitNode	EXIT		9004777		True				
ANR	9004894	Symbol	code		9004777						
ANR	9004895	Symbol	dict_find_string		9004777						
ANR	9004896	Symbol	gs_error_rangecheck		9004777						
ANR	9004897	Symbol	& tempref		9004777						
ANR	9004898	Symbol	t_null		9004777						
ANR	9004899	Symbol	r_has_type		9004777						
ANR	9004900	Symbol	gs_error_typecheck		9004777						
ANR	9004901	Symbol	i_ctx_p		9004777						
ANR	9004902	Symbol	r_size		9004777						
ANR	9004903	Symbol	CIEdict		9004777						
ANR	9004904	Symbol	r_is_array		9004777						
ANR	9004905	Symbol	imemory		9004777						
ANR	9004906	Symbol	get_cie_param_array		9004777						
ANR	9004907	Symbol	value		9004777						
ANR	9004908	Symbol	tempref		9004777						
ANR	9004909	Function	checkGamma	5211:0:164279:165772							
ANR	9004910	FunctionDef	"checkGamma (i_ctx_t * i_ctx_p , ref * CIEdict , int numvalues)"		9004909	0					
ANR	9004911	CompoundStatement		5212:0:164349:165772	9004909	0					
ANR	9004912	IdentifierDeclStatement	"int code = 0 , i ;"	5213:4:164355:164370	9004909	0	True				
ANR	9004913	IdentifierDecl	code = 0		9004909	0					
ANR	9004914	IdentifierDeclType	int		9004909	0					
ANR	9004915	Identifier	code		9004909	1					
ANR	9004916	AssignmentExpression	code = 0		9004909	2		=			
ANR	9004917	Identifier	code		9004909	0					
ANR	9004918	PrimaryExpression	0		9004909	1					
ANR	9004919	IdentifierDecl	i		9004909	1					
ANR	9004920	IdentifierDeclType	int		9004909	0					
ANR	9004921	Identifier	i		9004909	1					
ANR	9004922	IdentifierDeclStatement	float value [ 3 ] ;	5214:4:164376:164390	9004909	1	True				
ANR	9004923	IdentifierDecl	value [ 3 ]		9004909	0					
ANR	9004924	IdentifierDeclType	float [ 3 ]		9004909	0					
ANR	9004925	Identifier	value		9004909	1					
ANR	9004926	PrimaryExpression	3		9004909	2					
ANR	9004927	IdentifierDeclStatement	"ref * tempref , valref ;"	5215:4:164396:164416	9004909	2	True				
ANR	9004928	IdentifierDecl	* tempref		9004909	0					
ANR	9004929	IdentifierDeclType	ref *		9004909	0					
ANR	9004930	Identifier	tempref		9004909	1					
ANR	9004931	IdentifierDecl	valref		9004909	1					
ANR	9004932	IdentifierDeclType	ref		9004909	0					
ANR	9004933	Identifier	valref		9004909	1					
ANR	9004934	ExpressionStatement	"code = dict_find_string ( CIEdict , ""Gamma"" , & tempref )"	5217:4:164423:164474	9004909	3	True				
ANR	9004935	AssignmentExpression	"code = dict_find_string ( CIEdict , ""Gamma"" , & tempref )"		9004909	0		=			
ANR	9004936	Identifier	code		9004909	0					
ANR	9004937	CallExpression	"dict_find_string ( CIEdict , ""Gamma"" , & tempref )"		9004909	1					
ANR	9004938	Callee	dict_find_string		9004909	0					
ANR	9004939	Identifier	dict_find_string		9004909	0					
ANR	9004940	ArgumentList	CIEdict		9004909	1					
ANR	9004941	Argument	CIEdict		9004909	0					
ANR	9004942	Identifier	CIEdict		9004909	0					
ANR	9004943	Argument	"""Gamma"""		9004909	1					
ANR	9004944	PrimaryExpression	"""Gamma"""		9004909	0					
ANR	9004945	Argument	& tempref		9004909	2					
ANR	9004946	UnaryOperationExpression	& tempref		9004909	0					
ANR	9004947	UnaryOperator	&		9004909	0					
ANR	9004948	Identifier	tempref		9004909	1					
ANR	9004949	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9004909	4					
ANR	9004950	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5218:8:164484:164523	9004909	0	True				
ANR	9004951	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9004909	0		&&			
ANR	9004952	RelationalExpression	code > 0		9004909	0		>			
ANR	9004953	Identifier	code		9004909	0					
ANR	9004954	PrimaryExpression	0		9004909	1					
ANR	9004955	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9004909	1					
ANR	9004956	UnaryOperator	!		9004909	0					
ANR	9004957	CallExpression	"r_has_type ( tempref , t_null )"		9004909	1					
ANR	9004958	Callee	r_has_type		9004909	0					
ANR	9004959	Identifier	r_has_type		9004909	0					
ANR	9004960	ArgumentList	tempref		9004909	1					
ANR	9004961	Argument	tempref		9004909	0					
ANR	9004962	Identifier	tempref		9004909	0					
ANR	9004963	Argument	t_null		9004909	1					
ANR	9004964	Identifier	t_null		9004909	0					
ANR	9004965	CompoundStatement		7:50:176:176	9004909	1					
ANR	9004966	IfStatement	if ( numvalues > 1 )		9004909	0					
ANR	9004967	Condition	numvalues > 1	5219:12:164540:164552	9004909	0	True				
ANR	9004968	RelationalExpression	numvalues > 1		9004909	0		>			
ANR	9004969	Identifier	numvalues		9004909	0					
ANR	9004970	PrimaryExpression	1		9004909	1					
ANR	9004971	CompoundStatement		8:27:205:205	9004909	1					
ANR	9004972	IfStatement	if ( ! r_is_array ( tempref ) )		9004909	0					
ANR	9004973	Condition	! r_is_array ( tempref )	5221:16:164613:164632	9004909	0	True				
ANR	9004974	UnaryOperationExpression	! r_is_array ( tempref )		9004909	0					
ANR	9004975	UnaryOperator	!		9004909	0					
ANR	9004976	CallExpression	r_is_array ( tempref )		9004909	1					
ANR	9004977	Callee	r_is_array		9004909	0					
ANR	9004978	Identifier	r_is_array		9004909	0					
ANR	9004979	ArgumentList	tempref		9004909	1					
ANR	9004980	Argument	tempref		9004909	0					
ANR	9004981	Identifier	tempref		9004909	0					
ANR	9004982	ExpressionStatement	return_error ( gs_error_typecheck )	5222:16:164651:164683	9004909	1	True				
ANR	9004983	CallExpression	return_error ( gs_error_typecheck )		9004909	0					
ANR	9004984	Callee	return_error		9004909	0					
ANR	9004985	Identifier	return_error		9004909	0					
ANR	9004986	ArgumentList	gs_error_typecheck		9004909	1					
ANR	9004987	Argument	gs_error_typecheck		9004909	0					
ANR	9004988	Identifier	gs_error_typecheck		9004909	0					
ANR	9004989	IfStatement	if ( r_size ( tempref ) != numvalues )		9004909	1					
ANR	9004990	Condition	r_size ( tempref ) != numvalues	5223:16:164701:164728	9004909	0	True				
ANR	9004991	EqualityExpression	r_size ( tempref ) != numvalues		9004909	0		!=			
ANR	9004992	CallExpression	r_size ( tempref )		9004909	0					
ANR	9004993	Callee	r_size		9004909	0					
ANR	9004994	Identifier	r_size		9004909	0					
ANR	9004995	ArgumentList	tempref		9004909	1					
ANR	9004996	Argument	tempref		9004909	0					
ANR	9004997	Identifier	tempref		9004909	0					
ANR	9004998	Identifier	numvalues		9004909	1					
ANR	9004999	ExpressionStatement	return_error ( gs_error_rangecheck )	5224:16:164747:164780	9004909	1	True				
ANR	9005000	CallExpression	return_error ( gs_error_rangecheck )		9004909	0					
ANR	9005001	Callee	return_error		9004909	0					
ANR	9005002	Identifier	return_error		9004909	0					
ANR	9005003	ArgumentList	gs_error_rangecheck		9004909	1					
ANR	9005004	Argument	gs_error_rangecheck		9004909	0					
ANR	9005005	Identifier	gs_error_rangecheck		9004909	0					
ANR	9005006	ForStatement	for ( i = 0 ; i < numvalues ; i ++ )		9004909	2					
ANR	9005007	ForInit	i = 0 ;	5225:17:164799:164802	9004909	0	True				
ANR	9005008	AssignmentExpression	i = 0		9004909	0		=			
ANR	9005009	Identifier	i		9004909	0					
ANR	9005010	PrimaryExpression	0		9004909	1					
ANR	9005011	Condition	i < numvalues	5225:21:164803:164813	9004909	1	True				
ANR	9005012	RelationalExpression	i < numvalues		9004909	0		<			
ANR	9005013	Identifier	i		9004909	0					
ANR	9005014	Identifier	numvalues		9004909	1					
ANR	9005015	PostIncDecOperationExpression	i ++	5225:33:164815:164817	9004909	2	True				
ANR	9005016	Identifier	i		9004909	0					
ANR	9005017	IncDec	++		9004909	1					
ANR	9005018	CompoundStatement		14:38:470:470	9004909	3					
ANR	9005019	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5226:16:164838:164884	9004909	0	True				
ANR	9005020	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9004909	0		=			
ANR	9005021	Identifier	code		9004909	0					
ANR	9005022	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9004909	1					
ANR	9005023	Callee	array_get		9004909	0					
ANR	9005024	Identifier	array_get		9004909	0					
ANR	9005025	ArgumentList	imemory		9004909	1					
ANR	9005026	Argument	imemory		9004909	0					
ANR	9005027	Identifier	imemory		9004909	0					
ANR	9005028	Argument	tempref		9004909	1					
ANR	9005029	Identifier	tempref		9004909	0					
ANR	9005030	Argument	i		9004909	2					
ANR	9005031	Identifier	i		9004909	0					
ANR	9005032	Argument	& valref		9004909	3					
ANR	9005033	UnaryOperationExpression	& valref		9004909	0					
ANR	9005034	UnaryOperator	&		9004909	0					
ANR	9005035	Identifier	valref		9004909	1					
ANR	9005036	IfStatement	if ( code < 0 )		9004909	1					
ANR	9005037	Condition	code < 0	5227:20:164906:164913	9004909	0	True				
ANR	9005038	RelationalExpression	code < 0		9004909	0		<			
ANR	9005039	Identifier	code		9004909	0					
ANR	9005040	PrimaryExpression	0		9004909	1					
ANR	9005041	ReturnStatement	return code ;	5228:20:164936:164947	9004909	1	True				
ANR	9005042	Identifier	code		9004909	0					
ANR	9005043	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9004909	2					
ANR	9005044	Condition	"r_has_type ( & valref , t_integer )"	5229:20:164969:164998	9004909	0	True				
ANR	9005045	CallExpression	"r_has_type ( & valref , t_integer )"		9004909	0					
ANR	9005046	Callee	r_has_type		9004909	0					
ANR	9005047	Identifier	r_has_type		9004909	0					
ANR	9005048	ArgumentList	& valref		9004909	1					
ANR	9005049	Argument	& valref		9004909	0					
ANR	9005050	UnaryOperationExpression	& valref		9004909	0					
ANR	9005051	UnaryOperator	&		9004909	0					
ANR	9005052	Identifier	valref		9004909	1					
ANR	9005053	Argument	t_integer		9004909	1					
ANR	9005054	Identifier	t_integer		9004909	0					
ANR	9005055	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	5230:20:165021:165058	9004909	1	True				
ANR	9005056	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		9004909	0		=			
ANR	9005057	ArrayIndexing	value [ i ]		9004909	0					
ANR	9005058	Identifier	value		9004909	0					
ANR	9005059	Identifier	i		9004909	1					
ANR	9005060	CastExpression	( float ) valref . value . intval		9004909	1					
ANR	9005061	CastTarget	float		9004909	0					
ANR	9005062	MemberAccess	valref . value . intval		9004909	1					
ANR	9005063	MemberAccess	valref . value		9004909	0					
ANR	9005064	Identifier	valref		9004909	0					
ANR	9005065	Identifier	value		9004909	1					
ANR	9005066	Identifier	intval		9004909	1					
ANR	9005067	ElseStatement	else		9004909	0					
ANR	9005068	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		9004909	0					
ANR	9005069	Condition	"r_has_type ( & valref , t_real )"	5231:25:165085:165111	9004909	0	True				
ANR	9005070	CallExpression	"r_has_type ( & valref , t_real )"		9004909	0					
ANR	9005071	Callee	r_has_type		9004909	0					
ANR	9005072	Identifier	r_has_type		9004909	0					
ANR	9005073	ArgumentList	& valref		9004909	1					
ANR	9005074	Argument	& valref		9004909	0					
ANR	9005075	UnaryOperationExpression	& valref		9004909	0					
ANR	9005076	UnaryOperator	&		9004909	0					
ANR	9005077	Identifier	valref		9004909	1					
ANR	9005078	Argument	t_real		9004909	1					
ANR	9005079	Identifier	t_real		9004909	0					
ANR	9005080	ExpressionStatement	value [ i ] = ( float ) valref . value . realval	5232:20:165134:165172	9004909	1	True				
ANR	9005081	AssignmentExpression	value [ i ] = ( float ) valref . value . realval		9004909	0		=			
ANR	9005082	ArrayIndexing	value [ i ]		9004909	0					
ANR	9005083	Identifier	value		9004909	0					
ANR	9005084	Identifier	i		9004909	1					
ANR	9005085	CastExpression	( float ) valref . value . realval		9004909	1					
ANR	9005086	CastTarget	float		9004909	0					
ANR	9005087	MemberAccess	valref . value . realval		9004909	1					
ANR	9005088	MemberAccess	valref . value		9004909	0					
ANR	9005089	Identifier	valref		9004909	0					
ANR	9005090	Identifier	value		9004909	1					
ANR	9005091	Identifier	realval		9004909	1					
ANR	9005092	ElseStatement	else		9004909	0					
ANR	9005093	ExpressionStatement	return_error ( gs_error_typecheck )	5234:20:165215:165247	9004909	0	True				
ANR	9005094	CallExpression	return_error ( gs_error_typecheck )		9004909	0					
ANR	9005095	Callee	return_error		9004909	0					
ANR	9005096	Identifier	return_error		9004909	0					
ANR	9005097	ArgumentList	gs_error_typecheck		9004909	1					
ANR	9005098	Argument	gs_error_typecheck		9004909	0					
ANR	9005099	Identifier	gs_error_typecheck		9004909	0					
ANR	9005100	IfStatement	if ( value [ i ] <= 0 )		9004909	3					
ANR	9005101	Condition	value [ i ] <= 0	5235:20:165269:165281	9004909	0	True				
ANR	9005102	RelationalExpression	value [ i ] <= 0		9004909	0		<=			
ANR	9005103	ArrayIndexing	value [ i ]		9004909	0					
ANR	9005104	Identifier	value		9004909	0					
ANR	9005105	Identifier	i		9004909	1					
ANR	9005106	PrimaryExpression	0		9004909	1					
ANR	9005107	ExpressionStatement	return_error ( gs_error_rangecheck )	5235:35:165284:165317	9004909	1	True				
ANR	9005108	CallExpression	return_error ( gs_error_rangecheck )		9004909	0					
ANR	9005109	Callee	return_error		9004909	0					
ANR	9005110	Identifier	return_error		9004909	0					
ANR	9005111	ArgumentList	gs_error_rangecheck		9004909	1					
ANR	9005112	Argument	gs_error_rangecheck		9004909	0					
ANR	9005113	Identifier	gs_error_rangecheck		9004909	0					
ANR	9005114	ElseStatement	else		9004909	0					
ANR	9005115	CompoundStatement		26:15:998:998	9004909	0					
ANR	9005116	IfStatement	"if ( r_has_type ( tempref , t_real ) )"		9004909	0					
ANR	9005117	Condition	"r_has_type ( tempref , t_real )"	5239:16:165404:165430	9004909	0	True				
ANR	9005118	CallExpression	"r_has_type ( tempref , t_real )"		9004909	0					
ANR	9005119	Callee	r_has_type		9004909	0					
ANR	9005120	Identifier	r_has_type		9004909	0					
ANR	9005121	ArgumentList	tempref		9004909	1					
ANR	9005122	Argument	tempref		9004909	0					
ANR	9005123	Identifier	tempref		9004909	0					
ANR	9005124	Argument	t_real		9004909	1					
ANR	9005125	Identifier	t_real		9004909	0					
ANR	9005126	ExpressionStatement	value [ 0 ] = ( float ) ( tempref -> value . realval )	5240:16:165449:165491	9004909	1	True				
ANR	9005127	AssignmentExpression	value [ 0 ] = ( float ) ( tempref -> value . realval )		9004909	0		=			
ANR	9005128	ArrayIndexing	value [ 0 ]		9004909	0					
ANR	9005129	Identifier	value		9004909	0					
ANR	9005130	PrimaryExpression	0		9004909	1					
ANR	9005131	CastExpression	( float ) ( tempref -> value . realval )		9004909	1					
ANR	9005132	CastTarget	float		9004909	0					
ANR	9005133	MemberAccess	tempref -> value . realval		9004909	1					
ANR	9005134	PtrMemberAccess	tempref -> value		9004909	0					
ANR	9005135	Identifier	tempref		9004909	0					
ANR	9005136	Identifier	value		9004909	1					
ANR	9005137	Identifier	realval		9004909	1					
ANR	9005138	ElseStatement	else		9004909	0					
ANR	9005139	IfStatement	"if ( r_has_type ( tempref , t_integer ) )"		9004909	0					
ANR	9005140	Condition	"r_has_type ( tempref , t_integer )"	5241:21:165514:165543	9004909	0	True				
ANR	9005141	CallExpression	"r_has_type ( tempref , t_integer )"		9004909	0					
ANR	9005142	Callee	r_has_type		9004909	0					
ANR	9005143	Identifier	r_has_type		9004909	0					
ANR	9005144	ArgumentList	tempref		9004909	1					
ANR	9005145	Argument	tempref		9004909	0					
ANR	9005146	Identifier	tempref		9004909	0					
ANR	9005147	Argument	t_integer		9004909	1					
ANR	9005148	Identifier	t_integer		9004909	0					
ANR	9005149	ExpressionStatement	value [ 0 ] = ( float ) ( tempref -> value . intval )	5242:20:165566:165607	9004909	1	True				
ANR	9005150	AssignmentExpression	value [ 0 ] = ( float ) ( tempref -> value . intval )		9004909	0		=			
ANR	9005151	ArrayIndexing	value [ 0 ]		9004909	0					
ANR	9005152	Identifier	value		9004909	0					
ANR	9005153	PrimaryExpression	0		9004909	1					
ANR	9005154	CastExpression	( float ) ( tempref -> value . intval )		9004909	1					
ANR	9005155	CastTarget	float		9004909	0					
ANR	9005156	MemberAccess	tempref -> value . intval		9004909	1					
ANR	9005157	PtrMemberAccess	tempref -> value		9004909	0					
ANR	9005158	Identifier	tempref		9004909	0					
ANR	9005159	Identifier	value		9004909	1					
ANR	9005160	Identifier	intval		9004909	1					
ANR	9005161	ElseStatement	else		9004909	0					
ANR	9005162	ExpressionStatement	return_error ( gs_error_typecheck )	5244:16:165642:165674	9004909	0	True				
ANR	9005163	CallExpression	return_error ( gs_error_typecheck )		9004909	0					
ANR	9005164	Callee	return_error		9004909	0					
ANR	9005165	Identifier	return_error		9004909	0					
ANR	9005166	ArgumentList	gs_error_typecheck		9004909	1					
ANR	9005167	Argument	gs_error_typecheck		9004909	0					
ANR	9005168	Identifier	gs_error_typecheck		9004909	0					
ANR	9005169	IfStatement	if ( value [ 0 ] <= 0 )		9004909	1					
ANR	9005170	Condition	value [ 0 ] <= 0	5245:16:165692:165704	9004909	0	True				
ANR	9005171	RelationalExpression	value [ 0 ] <= 0		9004909	0		<=			
ANR	9005172	ArrayIndexing	value [ 0 ]		9004909	0					
ANR	9005173	Identifier	value		9004909	0					
ANR	9005174	PrimaryExpression	0		9004909	1					
ANR	9005175	PrimaryExpression	0		9004909	1					
ANR	9005176	ExpressionStatement	return_error ( gs_error_rangecheck )	5245:31:165707:165740	9004909	1	True				
ANR	9005177	CallExpression	return_error ( gs_error_rangecheck )		9004909	0					
ANR	9005178	Callee	return_error		9004909	0					
ANR	9005179	Identifier	return_error		9004909	0					
ANR	9005180	ArgumentList	gs_error_rangecheck		9004909	1					
ANR	9005181	Argument	gs_error_rangecheck		9004909	0					
ANR	9005182	Identifier	gs_error_rangecheck		9004909	0					
ANR	9005183	ReturnStatement	return 0 ;	5248:4:165762:165770	9004909	5	True				
ANR	9005184	PrimaryExpression	0		9004909	0					
ANR	9005185	ReturnType	static int		9004909	1					
ANR	9005186	Identifier	checkGamma		9004909	2					
ANR	9005187	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict , int numvalues"		9004909	3					
ANR	9005188	Parameter	i_ctx_t * i_ctx_p	5211:22:164301:164317	9004909	0	True				
ANR	9005189	ParameterType	i_ctx_t *		9004909	0					
ANR	9005190	Identifier	i_ctx_p		9004909	1					
ANR	9005191	Parameter	ref * CIEdict	5211:41:164320:164331	9004909	1	True				
ANR	9005192	ParameterType	ref *		9004909	0					
ANR	9005193	Identifier	CIEdict		9004909	1					
ANR	9005194	Parameter	int numvalues	5211:55:164334:164346	9004909	2	True				
ANR	9005195	ParameterType	int		9004909	0					
ANR	9005196	Identifier	numvalues		9004909	1					
ANR	9005197	CFGEntryNode	ENTRY		9004909		True				
ANR	9005198	CFGExitNode	EXIT		9004909		True				
ANR	9005199	Symbol	valref . value		9004909						
ANR	9005200	Symbol	code		9004909						
ANR	9005201	Symbol	gs_error_rangecheck		9004909						
ANR	9005202	Symbol	* tempref		9004909						
ANR	9005203	Symbol	tempref -> value . realval		9004909						
ANR	9005204	Symbol	valref . value . realval		9004909						
ANR	9005205	Symbol	r_has_type		9004909						
ANR	9005206	Symbol	t_null		9004909						
ANR	9005207	Symbol	gs_error_typecheck		9004909						
ANR	9005208	Symbol	& valref		9004909						
ANR	9005209	Symbol	numvalues		9004909						
ANR	9005210	Symbol	r_size		9004909						
ANR	9005211	Symbol	CIEdict		9004909						
ANR	9005212	Symbol	imemory		9004909						
ANR	9005213	Symbol	value		9004909						
ANR	9005214	Symbol	tempref		9004909						
ANR	9005215	Symbol	tempref -> value . intval		9004909						
ANR	9005216	Symbol	dict_find_string		9004909						
ANR	9005217	Symbol	array_get		9004909						
ANR	9005218	Symbol	i		9004909						
ANR	9005219	Symbol	& tempref		9004909						
ANR	9005220	Symbol	t_real		9004909						
ANR	9005221	Symbol	tempref -> value		9004909						
ANR	9005222	Symbol	* i		9004909						
ANR	9005223	Symbol	t_integer		9004909						
ANR	9005224	Symbol	valref . value . intval		9004909						
ANR	9005225	Symbol	i_ctx_p		9004909						
ANR	9005226	Symbol	* value		9004909						
ANR	9005227	Symbol	valref		9004909						
ANR	9005228	Symbol	r_is_array		9004909						
ANR	9005229	Function	setcalgrayspace	5252:0:165847:167447							
ANR	9005230	FunctionDef	"setcalgrayspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9005229	0					
ANR	9005231	CompoundStatement		5253:0:165938:167447	9005229	0					
ANR	9005232	IdentifierDeclStatement	ref graydict ;	5254:4:165944:165956	9005229	0	True				
ANR	9005233	IdentifierDecl	graydict		9005229	0					
ANR	9005234	IdentifierDeclType	ref		9005229	0					
ANR	9005235	Identifier	graydict		9005229	1					
ANR	9005236	IdentifierDeclStatement	int code = 0 ;	5255:4:165962:165974	9005229	1	True				
ANR	9005237	IdentifierDecl	code = 0		9005229	0					
ANR	9005238	IdentifierDeclType	int		9005229	0					
ANR	9005239	Identifier	code		9005229	1					
ANR	9005240	AssignmentExpression	code = 0		9005229	2		=			
ANR	9005241	Identifier	code		9005229	0					
ANR	9005242	PrimaryExpression	0		9005229	1					
ANR	9005243	IdentifierDeclStatement	"float gamma , white [ 3 ] , black [ 3 ] ;"	5256:4:165980:166029	9005229	2	True				
ANR	9005244	IdentifierDecl	gamma		9005229	0					
ANR	9005245	IdentifierDeclType	float		9005229	0					
ANR	9005246	Identifier	gamma		9005229	1					
ANR	9005247	IdentifierDecl	white [ 3 ]		9005229	1					
ANR	9005248	IdentifierDeclType	float [ 3 ]		9005229	0					
ANR	9005249	Identifier	white		9005229	1					
ANR	9005250	PrimaryExpression	3		9005229	2					
ANR	9005251	IdentifierDecl	black [ 3 ]		9005229	2					
ANR	9005252	IdentifierDeclType	float [ 3 ]		9005229	0					
ANR	9005253	Identifier	black		9005229	1					
ANR	9005254	PrimaryExpression	3		9005229	2					
ANR	9005255	IdentifierDeclStatement	double dflt_gamma = 1.0 ;	5257:4:166035:166075	9005229	3	True				
ANR	9005256	IdentifierDecl	dflt_gamma = 1.0		9005229	0					
ANR	9005257	IdentifierDeclType	double		9005229	0					
ANR	9005258	Identifier	dflt_gamma		9005229	1					
ANR	9005259	AssignmentExpression	dflt_gamma = 1.0		9005229	2		=			
ANR	9005260	Identifier	dflt_gamma		9005229	0					
ANR	9005261	PrimaryExpression	1.0		9005229	1					
ANR	9005262	Statement	static	5258:4:166081:166086	9005229	4	True				
ANR	9005263	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5258:11:166088:166153	9005229	5	True				
ANR	9005264	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9005229	0					
ANR	9005265	IdentifierDeclType	const float [ 3 ]		9005229	0					
ANR	9005266	Identifier	dflt_black		9005229	1					
ANR	9005267	PrimaryExpression	3		9005229	2					
ANR	9005268	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9005229	3		=			
ANR	9005269	Identifier	dflt_black		9005229	0					
ANR	9005270	InitializerList	0		9005229	1					
ANR	9005271	PrimaryExpression	0		9005229	0					
ANR	9005272	PrimaryExpression	0		9005229	1					
ANR	9005273	PrimaryExpression	0		9005229	2					
ANR	9005274	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9005229	1					
ANR	9005275	IdentifierDeclType	const float [ 3 ]		9005229	0					
ANR	9005276	Identifier	dflt_white		9005229	1					
ANR	9005277	PrimaryExpression	3		9005229	2					
ANR	9005278	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9005229	3		=			
ANR	9005279	Identifier	dflt_white		9005229	0					
ANR	9005280	InitializerList	0		9005229	1					
ANR	9005281	PrimaryExpression	0		9005229	0					
ANR	9005282	PrimaryExpression	0		9005229	1					
ANR	9005283	PrimaryExpression	0		9005229	2					
ANR	9005284	IdentifierDeclStatement	gs_client_color cc ;	5259:4:166159:166177	9005229	6	True				
ANR	9005285	IdentifierDecl	cc		9005229	0					
ANR	9005286	IdentifierDeclType	gs_client_color		9005229	0					
ANR	9005287	Identifier	cc		9005229	1					
ANR	9005288	ExpressionStatement	* cont = 0	5261:4:166184:166193	9005229	7	True				
ANR	9005289	AssignmentExpression	* cont = 0		9005229	0		=			
ANR	9005290	UnaryOperationExpression	* cont		9005229	0					
ANR	9005291	UnaryOperator	*		9005229	0					
ANR	9005292	Identifier	cont		9005229	1					
ANR	9005293	PrimaryExpression	0		9005229	1					
ANR	9005294	ExpressionStatement	"code = array_get ( imemory , r , 1 , & graydict )"	5262:4:166199:166241	9005229	8	True				
ANR	9005295	AssignmentExpression	"code = array_get ( imemory , r , 1 , & graydict )"		9005229	0		=			
ANR	9005296	Identifier	code		9005229	0					
ANR	9005297	CallExpression	"array_get ( imemory , r , 1 , & graydict )"		9005229	1					
ANR	9005298	Callee	array_get		9005229	0					
ANR	9005299	Identifier	array_get		9005229	0					
ANR	9005300	ArgumentList	imemory		9005229	1					
ANR	9005301	Argument	imemory		9005229	0					
ANR	9005302	Identifier	imemory		9005229	0					
ANR	9005303	Argument	r		9005229	1					
ANR	9005304	Identifier	r		9005229	0					
ANR	9005305	Argument	1		9005229	2					
ANR	9005306	PrimaryExpression	1		9005229	0					
ANR	9005307	Argument	& graydict		9005229	3					
ANR	9005308	UnaryOperationExpression	& graydict		9005229	0					
ANR	9005309	UnaryOperator	&		9005229	0					
ANR	9005310	Identifier	graydict		9005229	1					
ANR	9005311	IfStatement	if ( code < 0 )		9005229	9					
ANR	9005312	Condition	code < 0	5263:8:166251:166258	9005229	0	True				
ANR	9005313	RelationalExpression	code < 0		9005229	0		<			
ANR	9005314	Identifier	code		9005229	0					
ANR	9005315	PrimaryExpression	0		9005229	1					
ANR	9005316	ReturnStatement	return code ;	5264:8:166269:166280	9005229	1	True				
ANR	9005317	Identifier	code		9005229	0					
ANR	9005318	ExpressionStatement	"code = dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"	5266:4:166310:166390	9005229	10	True				
ANR	9005319	AssignmentExpression	"code = dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"		9005229	0		=			
ANR	9005320	Identifier	code		9005229	0					
ANR	9005321	CallExpression	"dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"		9005229	1					
ANR	9005322	Callee	dict_float_param		9005229	0					
ANR	9005323	Identifier	dict_float_param		9005229	0					
ANR	9005324	ArgumentList	& graydict		9005229	1					
ANR	9005325	Argument	& graydict		9005229	0					
ANR	9005326	UnaryOperationExpression	& graydict		9005229	0					
ANR	9005327	UnaryOperator	&		9005229	0					
ANR	9005328	Identifier	graydict		9005229	1					
ANR	9005329	Argument	"""Gamma"""		9005229	1					
ANR	9005330	PrimaryExpression	"""Gamma"""		9005229	0					
ANR	9005331	Argument	dflt_gamma		9005229	2					
ANR	9005332	Identifier	dflt_gamma		9005229	0					
ANR	9005333	Argument	& gamma		9005229	3					
ANR	9005334	UnaryOperationExpression	& gamma		9005229	0					
ANR	9005335	UnaryOperator	&		9005229	0					
ANR	9005336	Identifier	gamma		9005229	1					
ANR	9005337	IfStatement	if ( code < 0 )		9005229	11					
ANR	9005338	Condition	code < 0	5268:8:166400:166407	9005229	0	True				
ANR	9005339	RelationalExpression	code < 0		9005229	0		<			
ANR	9005340	Identifier	code		9005229	0					
ANR	9005341	PrimaryExpression	0		9005229	1					
ANR	9005342	ReturnStatement	return code ;	5269:8:166418:166429	9005229	1	True				
ANR	9005343	Identifier	code		9005229	0					
ANR	9005344	IfStatement	if ( gamma <= 0 )		9005229	12					
ANR	9005345	Condition	gamma <= 0	5270:8:166439:166448	9005229	0	True				
ANR	9005346	RelationalExpression	gamma <= 0		9005229	0		<=			
ANR	9005347	Identifier	gamma		9005229	0					
ANR	9005348	PrimaryExpression	0		9005229	1					
ANR	9005349	ExpressionStatement	return_error ( gs_error_rangecheck )	5271:8:166460:166493	9005229	1	True				
ANR	9005350	CallExpression	return_error ( gs_error_rangecheck )		9005229	0					
ANR	9005351	Callee	return_error		9005229	0					
ANR	9005352	Identifier	return_error		9005229	0					
ANR	9005353	ArgumentList	gs_error_rangecheck		9005229	1					
ANR	9005354	Argument	gs_error_rangecheck		9005229	0					
ANR	9005355	Identifier	gs_error_rangecheck		9005229	0					
ANR	9005356	ExpressionStatement	"code = dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"	5272:4:166499:166731	9005229	13	True				
ANR	9005357	AssignmentExpression	"code = dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"		9005229	0		=			
ANR	9005358	Identifier	code		9005229	0					
ANR	9005359	CallExpression	"dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"		9005229	1					
ANR	9005360	Callee	dict_floats_param		9005229	0					
ANR	9005361	Identifier	dict_floats_param		9005229	0					
ANR	9005362	ArgumentList	imemory		9005229	1					
ANR	9005363	Argument	imemory		9005229	0					
ANR	9005364	Identifier	imemory		9005229	0					
ANR	9005365	Argument	& graydict		9005229	1					
ANR	9005366	UnaryOperationExpression	& graydict		9005229	0					
ANR	9005367	UnaryOperator	&		9005229	0					
ANR	9005368	Identifier	graydict		9005229	1					
ANR	9005369	Argument	"""BlackPoint"""		9005229	2					
ANR	9005370	PrimaryExpression	"""BlackPoint"""		9005229	0					
ANR	9005371	Argument	3		9005229	3					
ANR	9005372	PrimaryExpression	3		9005229	0					
ANR	9005373	Argument	black		9005229	4					
ANR	9005374	Identifier	black		9005229	0					
ANR	9005375	Argument	dflt_black		9005229	5					
ANR	9005376	Identifier	dflt_black		9005229	0					
ANR	9005377	IfStatement	if ( code < 0 )		9005229	14					
ANR	9005378	Condition	code < 0	5278:8:166741:166748	9005229	0	True				
ANR	9005379	RelationalExpression	code < 0		9005229	0		<			
ANR	9005380	Identifier	code		9005229	0					
ANR	9005381	PrimaryExpression	0		9005229	1					
ANR	9005382	ReturnStatement	return code ;	5279:8:166759:166770	9005229	1	True				
ANR	9005383	Identifier	code		9005229	0					
ANR	9005384	ExpressionStatement	"code = dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"	5280:4:166776:167008	9005229	15	True				
ANR	9005385	AssignmentExpression	"code = dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"		9005229	0		=			
ANR	9005386	Identifier	code		9005229	0					
ANR	9005387	CallExpression	"dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"		9005229	1					
ANR	9005388	Callee	dict_floats_param		9005229	0					
ANR	9005389	Identifier	dict_floats_param		9005229	0					
ANR	9005390	ArgumentList	imemory		9005229	1					
ANR	9005391	Argument	imemory		9005229	0					
ANR	9005392	Identifier	imemory		9005229	0					
ANR	9005393	Argument	& graydict		9005229	1					
ANR	9005394	UnaryOperationExpression	& graydict		9005229	0					
ANR	9005395	UnaryOperator	&		9005229	0					
ANR	9005396	Identifier	graydict		9005229	1					
ANR	9005397	Argument	"""WhitePoint"""		9005229	2					
ANR	9005398	PrimaryExpression	"""WhitePoint"""		9005229	0					
ANR	9005399	Argument	3		9005229	3					
ANR	9005400	PrimaryExpression	3		9005229	0					
ANR	9005401	Argument	white		9005229	4					
ANR	9005402	Identifier	white		9005229	0					
ANR	9005403	Argument	dflt_white		9005229	5					
ANR	9005404	Identifier	dflt_white		9005229	0					
ANR	9005405	IfStatement	if ( code < 0 )		9005229	16					
ANR	9005406	Condition	code < 0	5286:8:167018:167025	9005229	0	True				
ANR	9005407	RelationalExpression	code < 0		9005229	0		<			
ANR	9005408	Identifier	code		9005229	0					
ANR	9005409	PrimaryExpression	0		9005229	1					
ANR	9005410	ReturnStatement	return code ;	5287:8:167036:167047	9005229	1	True				
ANR	9005411	Identifier	code		9005229	0					
ANR	9005412	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		9005229	17					
ANR	9005413	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5288:8:167057:167105	9005229	0	True				
ANR	9005414	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		9005229	0		||			
ANR	9005415	RelationalExpression	white [ 0 ] <= 0		9005229	0		<=			
ANR	9005416	ArrayIndexing	white [ 0 ]		9005229	0					
ANR	9005417	Identifier	white		9005229	0					
ANR	9005418	PrimaryExpression	0		9005229	1					
ANR	9005419	PrimaryExpression	0		9005229	1					
ANR	9005420	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		9005229	1		||			
ANR	9005421	EqualityExpression	white [ 1 ] != 1.0		9005229	0		!=			
ANR	9005422	ArrayIndexing	white [ 1 ]		9005229	0					
ANR	9005423	Identifier	white		9005229	0					
ANR	9005424	PrimaryExpression	1		9005229	1					
ANR	9005425	PrimaryExpression	1.0		9005229	1					
ANR	9005426	RelationalExpression	white [ 2 ] <= 0		9005229	1		<=			
ANR	9005427	ArrayIndexing	white [ 2 ]		9005229	0					
ANR	9005428	Identifier	white		9005229	0					
ANR	9005429	PrimaryExpression	2		9005229	1					
ANR	9005430	PrimaryExpression	0		9005229	1					
ANR	9005431	ExpressionStatement	return_error ( gs_error_rangecheck )	5289:8:167116:167149	9005229	1	True				
ANR	9005432	CallExpression	return_error ( gs_error_rangecheck )		9005229	0					
ANR	9005433	Callee	return_error		9005229	0					
ANR	9005434	Identifier	return_error		9005229	0					
ANR	9005435	ArgumentList	gs_error_rangecheck		9005229	1					
ANR	9005436	Argument	gs_error_rangecheck		9005229	0					
ANR	9005437	Identifier	gs_error_rangecheck		9005229	0					
ANR	9005438	ExpressionStatement	"code = seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"	5290:4:167155:167259	9005229	18	True				
ANR	9005439	AssignmentExpression	"code = seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"		9005229	0		=			
ANR	9005440	Identifier	code		9005229	0					
ANR	9005441	CallExpression	"seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"		9005229	1					
ANR	9005442	Callee	seticc_cal		9005229	0					
ANR	9005443	Identifier	seticc_cal		9005229	0					
ANR	9005444	ArgumentList	i_ctx_p		9005229	1					
ANR	9005445	Argument	i_ctx_p		9005229	0					
ANR	9005446	Identifier	i_ctx_p		9005229	0					
ANR	9005447	Argument	white		9005229	1					
ANR	9005448	Identifier	white		9005229	0					
ANR	9005449	Argument	black		9005229	2					
ANR	9005450	Identifier	black		9005229	0					
ANR	9005451	Argument	& gamma		9005229	3					
ANR	9005452	UnaryOperationExpression	& gamma		9005229	0					
ANR	9005453	UnaryOperator	&		9005229	0					
ANR	9005454	Identifier	gamma		9005229	1					
ANR	9005455	Argument	NULL		9005229	4					
ANR	9005456	Identifier	NULL		9005229	0					
ANR	9005457	Argument	1		9005229	5					
ANR	9005458	PrimaryExpression	1		9005229	0					
ANR	9005459	Argument	graydict . value . saveid		9005229	6					
ANR	9005460	MemberAccess	graydict . value . saveid		9005229	0					
ANR	9005461	MemberAccess	graydict . value		9005229	0					
ANR	9005462	Identifier	graydict		9005229	0					
ANR	9005463	Identifier	value		9005229	1					
ANR	9005464	Identifier	saveid		9005229	1					
ANR	9005465	IfStatement	if ( code < 0 )		9005229	19					
ANR	9005466	Condition	code < 0	5292:9:167270:167277	9005229	0	True				
ANR	9005467	RelationalExpression	code < 0		9005229	0		<			
ANR	9005468	Identifier	code		9005229	0					
ANR	9005469	PrimaryExpression	0		9005229	1					
ANR	9005470	ReturnStatement	"return gs_rethrow ( code , ""setting CalGray  color space"" ) ;"	5293:8:167288:167343	9005229	1	True				
ANR	9005471	CallExpression	"gs_rethrow ( code , ""setting CalGray  color space"" )"		9005229	0					
ANR	9005472	Callee	gs_rethrow		9005229	0					
ANR	9005473	Identifier	gs_rethrow		9005229	0					
ANR	9005474	ArgumentList	code		9005229	1					
ANR	9005475	Argument	code		9005229	0					
ANR	9005476	Identifier	code		9005229	0					
ANR	9005477	Argument	"""setting CalGray  color space"""		9005229	1					
ANR	9005478	PrimaryExpression	"""setting CalGray  color space"""		9005229	0					
ANR	9005479	ExpressionStatement	cc . pattern = 0x00	5294:4:167349:167366	9005229	20	True				
ANR	9005480	AssignmentExpression	cc . pattern = 0x00		9005229	0		=			
ANR	9005481	MemberAccess	cc . pattern		9005229	0					
ANR	9005482	Identifier	cc		9005229	0					
ANR	9005483	Identifier	pattern		9005229	1					
ANR	9005484	PrimaryExpression	0x00		9005229	1					
ANR	9005485	ExpressionStatement	cc . paint . values [ 0 ] = 0	5295:4:167372:167394	9005229	21	True				
ANR	9005486	AssignmentExpression	cc . paint . values [ 0 ] = 0		9005229	0		=			
ANR	9005487	ArrayIndexing	cc . paint . values [ 0 ]		9005229	0					
ANR	9005488	MemberAccess	cc . paint . values		9005229	0					
ANR	9005489	MemberAccess	cc . paint		9005229	0					
ANR	9005490	Identifier	cc		9005229	0					
ANR	9005491	Identifier	paint		9005229	1					
ANR	9005492	Identifier	values		9005229	1					
ANR	9005493	PrimaryExpression	0		9005229	1					
ANR	9005494	PrimaryExpression	0		9005229	1					
ANR	9005495	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5296:4:167400:167428	9005229	22	True				
ANR	9005496	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		9005229	0		=			
ANR	9005497	Identifier	code		9005229	0					
ANR	9005498	CallExpression	"gs_setcolor ( igs , & cc )"		9005229	1					
ANR	9005499	Callee	gs_setcolor		9005229	0					
ANR	9005500	Identifier	gs_setcolor		9005229	0					
ANR	9005501	ArgumentList	igs		9005229	1					
ANR	9005502	Argument	igs		9005229	0					
ANR	9005503	Identifier	igs		9005229	0					
ANR	9005504	Argument	& cc		9005229	1					
ANR	9005505	UnaryOperationExpression	& cc		9005229	0					
ANR	9005506	UnaryOperator	&		9005229	0					
ANR	9005507	Identifier	cc		9005229	1					
ANR	9005508	ReturnStatement	return code ;	5297:4:167434:167445	9005229	23	True				
ANR	9005509	Identifier	code		9005229	0					
ANR	9005510	ReturnType	static int		9005229	1					
ANR	9005511	Identifier	setcalgrayspace		9005229	2					
ANR	9005512	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9005229	3					
ANR	9005513	Parameter	i_ctx_t * i_ctx_p	5252:27:165874:165890	9005229	0	True				
ANR	9005514	ParameterType	i_ctx_t *		9005229	0					
ANR	9005515	Identifier	i_ctx_p		9005229	1					
ANR	9005516	Parameter	ref * r	5252:46:165893:165898	9005229	1	True				
ANR	9005517	ParameterType	ref *		9005229	0					
ANR	9005518	Identifier	r		9005229	1					
ANR	9005519	Parameter	int * stage	5252:54:165901:165910	9005229	2	True				
ANR	9005520	ParameterType	int *		9005229	0					
ANR	9005521	Identifier	stage		9005229	1					
ANR	9005522	Parameter	int * cont	5252:66:165913:165921	9005229	3	True				
ANR	9005523	ParameterType	int *		9005229	0					
ANR	9005524	Identifier	cont		9005229	1					
ANR	9005525	Parameter	int CIESubst	5252:77:165924:165935	9005229	4	True				
ANR	9005526	ParameterType	int		9005229	0					
ANR	9005527	Identifier	CIESubst		9005229	1					
ANR	9005528	CFGEntryNode	ENTRY		9005229		True				
ANR	9005529	CFGExitNode	EXIT		9005229		True				
ANR	9005530	Symbol	cc . pattern		9005229						
ANR	9005531	Symbol	code		9005229						
ANR	9005532	Symbol	gs_error_rangecheck		9005229						
ANR	9005533	Symbol	* cc		9005229						
ANR	9005534	Symbol	dict_float_param		9005229						
ANR	9005535	Symbol	gs_setcolor		9005229						
ANR	9005536	Symbol	dflt_gamma		9005229						
ANR	9005537	Symbol	& cc		9005229						
ANR	9005538	Symbol	& gamma		9005229						
ANR	9005539	Symbol	gs_rethrow		9005229						
ANR	9005540	Symbol	white		9005229						
ANR	9005541	Symbol	dflt_white		9005229						
ANR	9005542	Symbol	dict_floats_param		9005229						
ANR	9005543	Symbol	igs		9005229						
ANR	9005544	Symbol	* cc . paint . values		9005229						
ANR	9005545	Symbol	imemory		9005229						
ANR	9005546	Symbol	cont		9005229						
ANR	9005547	Symbol	CIESubst		9005229						
ANR	9005548	Symbol	cc		9005229						
ANR	9005549	Symbol	& graydict		9005229						
ANR	9005550	Symbol	NULL		9005229						
ANR	9005551	Symbol	graydict		9005229						
ANR	9005552	Symbol	array_get		9005229						
ANR	9005553	Symbol	black		9005229						
ANR	9005554	Symbol	* white		9005229						
ANR	9005555	Symbol	dflt_black		9005229						
ANR	9005556	Symbol	r		9005229						
ANR	9005557	Symbol	* cc . paint		9005229						
ANR	9005558	Symbol	stage		9005229						
ANR	9005559	Symbol	* cont		9005229						
ANR	9005560	Symbol	graydict . value . saveid		9005229						
ANR	9005561	Symbol	seticc_cal		9005229						
ANR	9005562	Symbol	i_ctx_p		9005229						
ANR	9005563	Symbol	cc . paint		9005229						
ANR	9005564	Symbol	graydict . value		9005229						
ANR	9005565	Symbol	cc . paint . values		9005229						
ANR	9005566	Symbol	gamma		9005229						
ANR	9005567	Function	validatecalgrayspace	5300:0:167450:168477							
ANR	9005568	FunctionDef	"validatecalgrayspace (i_ctx_t * i_ctx_p , ref * * r)"		9005567	0					
ANR	9005569	CompoundStatement		5301:0:167510:168477	9005567	0					
ANR	9005570	IdentifierDeclStatement	int code = 0 ;	5302:4:167516:167526	9005567	0	True				
ANR	9005571	IdentifierDecl	code = 0		9005567	0					
ANR	9005572	IdentifierDeclType	int		9005567	0					
ANR	9005573	Identifier	code		9005567	1					
ANR	9005574	AssignmentExpression	code = 0		9005567	2		=			
ANR	9005575	Identifier	code		9005567	0					
ANR	9005576	PrimaryExpression	0		9005567	1					
ANR	9005577	IdentifierDeclStatement	"ref * space , calgraydict ;"	5303:4:167532:167555	9005567	1	True				
ANR	9005578	IdentifierDecl	* space		9005567	0					
ANR	9005579	IdentifierDeclType	ref *		9005567	0					
ANR	9005580	Identifier	space		9005567	1					
ANR	9005581	IdentifierDecl	calgraydict		9005567	1					
ANR	9005582	IdentifierDeclType	ref		9005567	0					
ANR	9005583	Identifier	calgraydict		9005567	1					
ANR	9005584	ExpressionStatement	space = * r	5305:4:167562:167572	9005567	2	True				
ANR	9005585	AssignmentExpression	space = * r		9005567	0		=			
ANR	9005586	Identifier	space		9005567	0					
ANR	9005587	UnaryOperationExpression	* r		9005567	1					
ANR	9005588	UnaryOperator	*		9005567	0					
ANR	9005589	Identifier	r		9005567	1					
ANR	9005590	IfStatement	if ( ! r_is_array ( space ) )		9005567	3					
ANR	9005591	Condition	! r_is_array ( space )	5306:8:167582:167599	9005567	0	True				
ANR	9005592	UnaryOperationExpression	! r_is_array ( space )		9005567	0					
ANR	9005593	UnaryOperator	!		9005567	0					
ANR	9005594	CallExpression	r_is_array ( space )		9005567	1					
ANR	9005595	Callee	r_is_array		9005567	0					
ANR	9005596	Identifier	r_is_array		9005567	0					
ANR	9005597	ArgumentList	space		9005567	1					
ANR	9005598	Argument	space		9005567	0					
ANR	9005599	Identifier	space		9005567	0					
ANR	9005600	ExpressionStatement	return_error ( gs_error_typecheck )	5307:8:167610:167642	9005567	1	True				
ANR	9005601	CallExpression	return_error ( gs_error_typecheck )		9005567	0					
ANR	9005602	Callee	return_error		9005567	0					
ANR	9005603	Identifier	return_error		9005567	0					
ANR	9005604	ArgumentList	gs_error_typecheck		9005567	1					
ANR	9005605	Argument	gs_error_typecheck		9005567	0					
ANR	9005606	Identifier	gs_error_typecheck		9005567	0					
ANR	9005607	IfStatement	if ( r_size ( space ) < 2 )		9005567	4					
ANR	9005608	Condition	r_size ( space ) < 2	5309:8:167713:167729	9005567	0	True				
ANR	9005609	RelationalExpression	r_size ( space ) < 2		9005567	0		<			
ANR	9005610	CallExpression	r_size ( space )		9005567	0					
ANR	9005611	Callee	r_size		9005567	0					
ANR	9005612	Identifier	r_size		9005567	0					
ANR	9005613	ArgumentList	space		9005567	1					
ANR	9005614	Argument	space		9005567	0					
ANR	9005615	Identifier	space		9005567	0					
ANR	9005616	PrimaryExpression	2		9005567	1					
ANR	9005617	ExpressionStatement	return_error ( gs_error_rangecheck )	5310:8:167740:167773	9005567	1	True				
ANR	9005618	CallExpression	return_error ( gs_error_rangecheck )		9005567	0					
ANR	9005619	Callee	return_error		9005567	0					
ANR	9005620	Identifier	return_error		9005567	0					
ANR	9005621	ArgumentList	gs_error_rangecheck		9005567	1					
ANR	9005622	Argument	gs_error_rangecheck		9005567	0					
ANR	9005623	Identifier	gs_error_rangecheck		9005567	0					
ANR	9005624	ExpressionStatement	"code = array_get ( imemory , space , 1 , & calgraydict )"	5311:4:167779:167828	9005567	5	True				
ANR	9005625	AssignmentExpression	"code = array_get ( imemory , space , 1 , & calgraydict )"		9005567	0		=			
ANR	9005626	Identifier	code		9005567	0					
ANR	9005627	CallExpression	"array_get ( imemory , space , 1 , & calgraydict )"		9005567	1					
ANR	9005628	Callee	array_get		9005567	0					
ANR	9005629	Identifier	array_get		9005567	0					
ANR	9005630	ArgumentList	imemory		9005567	1					
ANR	9005631	Argument	imemory		9005567	0					
ANR	9005632	Identifier	imemory		9005567	0					
ANR	9005633	Argument	space		9005567	1					
ANR	9005634	Identifier	space		9005567	0					
ANR	9005635	Argument	1		9005567	2					
ANR	9005636	PrimaryExpression	1		9005567	0					
ANR	9005637	Argument	& calgraydict		9005567	3					
ANR	9005638	UnaryOperationExpression	& calgraydict		9005567	0					
ANR	9005639	UnaryOperator	&		9005567	0					
ANR	9005640	Identifier	calgraydict		9005567	1					
ANR	9005641	IfStatement	if ( code < 0 )		9005567	6					
ANR	9005642	Condition	code < 0	5312:8:167838:167845	9005567	0	True				
ANR	9005643	RelationalExpression	code < 0		9005567	0		<			
ANR	9005644	Identifier	code		9005567	0					
ANR	9005645	PrimaryExpression	0		9005567	1					
ANR	9005646	ReturnStatement	return code ;	5313:8:167856:167867	9005567	1	True				
ANR	9005647	Identifier	code		9005567	0					
ANR	9005648	ExpressionStatement	"check_type ( calgraydict , t_dictionary )"	5314:4:167873:167910	9005567	7	True				
ANR	9005649	CallExpression	"check_type ( calgraydict , t_dictionary )"		9005567	0					
ANR	9005650	Callee	check_type		9005567	0					
ANR	9005651	Identifier	check_type		9005567	0					
ANR	9005652	ArgumentList	calgraydict		9005567	1					
ANR	9005653	Argument	calgraydict		9005567	0					
ANR	9005654	Identifier	calgraydict		9005567	0					
ANR	9005655	Argument	t_dictionary		9005567	1					
ANR	9005656	Identifier	t_dictionary		9005567	0					
ANR	9005657	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & calgraydict )"	5318:4:168076:168121	9005567	8	True				
ANR	9005658	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & calgraydict )"		9005567	0		=			
ANR	9005659	Identifier	code		9005567	0					
ANR	9005660	CallExpression	"checkWhitePoint ( i_ctx_p , & calgraydict )"		9005567	1					
ANR	9005661	Callee	checkWhitePoint		9005567	0					
ANR	9005662	Identifier	checkWhitePoint		9005567	0					
ANR	9005663	ArgumentList	i_ctx_p		9005567	1					
ANR	9005664	Argument	i_ctx_p		9005567	0					
ANR	9005665	Identifier	i_ctx_p		9005567	0					
ANR	9005666	Argument	& calgraydict		9005567	1					
ANR	9005667	UnaryOperationExpression	& calgraydict		9005567	0					
ANR	9005668	UnaryOperator	&		9005567	0					
ANR	9005669	Identifier	calgraydict		9005567	1					
ANR	9005670	IfStatement	if ( code != 0 )		9005567	9					
ANR	9005671	Condition	code != 0	5319:8:168131:168139	9005567	0	True				
ANR	9005672	EqualityExpression	code != 0		9005567	0		!=			
ANR	9005673	Identifier	code		9005567	0					
ANR	9005674	PrimaryExpression	0		9005567	1					
ANR	9005675	ReturnStatement	return code ;	5320:8:168150:168161	9005567	1	True				
ANR	9005676	Identifier	code		9005567	0					
ANR	9005677	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & calgraydict )"	5322:4:168225:168270	9005567	10	True				
ANR	9005678	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & calgraydict )"		9005567	0		=			
ANR	9005679	Identifier	code		9005567	0					
ANR	9005680	CallExpression	"checkBlackPoint ( i_ctx_p , & calgraydict )"		9005567	1					
ANR	9005681	Callee	checkBlackPoint		9005567	0					
ANR	9005682	Identifier	checkBlackPoint		9005567	0					
ANR	9005683	ArgumentList	i_ctx_p		9005567	1					
ANR	9005684	Argument	i_ctx_p		9005567	0					
ANR	9005685	Identifier	i_ctx_p		9005567	0					
ANR	9005686	Argument	& calgraydict		9005567	1					
ANR	9005687	UnaryOperationExpression	& calgraydict		9005567	0					
ANR	9005688	UnaryOperator	&		9005567	0					
ANR	9005689	Identifier	calgraydict		9005567	1					
ANR	9005690	IfStatement	if ( code < 0 )		9005567	11					
ANR	9005691	Condition	code < 0	5323:8:168280:168287	9005567	0	True				
ANR	9005692	RelationalExpression	code < 0		9005567	0		<			
ANR	9005693	Identifier	code		9005567	0					
ANR	9005694	PrimaryExpression	0		9005567	1					
ANR	9005695	ReturnStatement	return code ;	5324:8:168298:168309	9005567	1	True				
ANR	9005696	Identifier	code		9005567	0					
ANR	9005697	ExpressionStatement	"code = checkGamma ( i_ctx_p , & calgraydict , 1 )"	5326:4:168344:168387	9005567	12	True				
ANR	9005698	AssignmentExpression	"code = checkGamma ( i_ctx_p , & calgraydict , 1 )"		9005567	0		=			
ANR	9005699	Identifier	code		9005567	0					
ANR	9005700	CallExpression	"checkGamma ( i_ctx_p , & calgraydict , 1 )"		9005567	1					
ANR	9005701	Callee	checkGamma		9005567	0					
ANR	9005702	Identifier	checkGamma		9005567	0					
ANR	9005703	ArgumentList	i_ctx_p		9005567	1					
ANR	9005704	Argument	i_ctx_p		9005567	0					
ANR	9005705	Identifier	i_ctx_p		9005567	0					
ANR	9005706	Argument	& calgraydict		9005567	1					
ANR	9005707	UnaryOperationExpression	& calgraydict		9005567	0					
ANR	9005708	UnaryOperator	&		9005567	0					
ANR	9005709	Identifier	calgraydict		9005567	1					
ANR	9005710	Argument	1		9005567	2					
ANR	9005711	PrimaryExpression	1		9005567	0					
ANR	9005712	IfStatement	if ( code < 0 )		9005567	13					
ANR	9005713	Condition	code < 0	5327:8:168397:168404	9005567	0	True				
ANR	9005714	RelationalExpression	code < 0		9005567	0		<			
ANR	9005715	Identifier	code		9005567	0					
ANR	9005716	PrimaryExpression	0		9005567	1					
ANR	9005717	ReturnStatement	return code ;	5328:8:168415:168426	9005567	1	True				
ANR	9005718	Identifier	code		9005567	0					
ANR	9005719	ExpressionStatement	* r = 0	5329:4:168432:168438	9005567	14	True				
ANR	9005720	AssignmentExpression	* r = 0		9005567	0		=			
ANR	9005721	UnaryOperationExpression	* r		9005567	0					
ANR	9005722	UnaryOperator	*		9005567	0					
ANR	9005723	Identifier	r		9005567	1					
ANR	9005724	PrimaryExpression	0		9005567	1					
ANR	9005725	ReturnStatement	return 0 ;	5330:4:168467:168475	9005567	15	True				
ANR	9005726	PrimaryExpression	0		9005567	0					
ANR	9005727	ReturnType	static int		9005567	1					
ANR	9005728	Identifier	validatecalgrayspace		9005567	2					
ANR	9005729	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		9005567	3					
ANR	9005730	Parameter	i_ctx_t * i_ctx_p	5300:32:167482:167498	9005567	0	True				
ANR	9005731	ParameterType	i_ctx_t *		9005567	0					
ANR	9005732	Identifier	i_ctx_p		9005567	1					
ANR	9005733	Parameter	ref * * r	5300:51:167501:167507	9005567	1	True				
ANR	9005734	ParameterType	ref * *		9005567	0					
ANR	9005735	Identifier	r		9005567	1					
ANR	9005736	CFGEntryNode	ENTRY		9005567		True				
ANR	9005737	CFGExitNode	EXIT		9005567		True				
ANR	9005738	Symbol	code		9005567						
ANR	9005739	Symbol	t_dictionary		9005567						
ANR	9005740	Symbol	gs_error_rangecheck		9005567						
ANR	9005741	Symbol	& calgraydict		9005567						
ANR	9005742	Symbol	calgraydict		9005567						
ANR	9005743	Symbol	array_get		9005567						
ANR	9005744	Symbol	space		9005567						
ANR	9005745	Symbol	r		9005567						
ANR	9005746	Symbol	gs_error_typecheck		9005567						
ANR	9005747	Symbol	checkBlackPoint		9005567						
ANR	9005748	Symbol	i_ctx_p		9005567						
ANR	9005749	Symbol	r_size		9005567						
ANR	9005750	Symbol	r_is_array		9005567						
ANR	9005751	Symbol	imemory		9005567						
ANR	9005752	Symbol	checkWhitePoint		9005567						
ANR	9005753	Symbol	* r		9005567						
ANR	9005754	Symbol	checkGamma		9005567						
ANR	9005755	Function	setcalrgbspace	5334:0:168551:170711							
ANR	9005756	FunctionDef	"setcalrgbspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9005755	0					
ANR	9005757	CompoundStatement		5335:0:168641:170711	9005755	0					
ANR	9005758	IdentifierDeclStatement	ref rgbdict ;	5336:4:168647:168658	9005755	0	True				
ANR	9005759	IdentifierDecl	rgbdict		9005755	0					
ANR	9005760	IdentifierDeclType	ref		9005755	0					
ANR	9005761	Identifier	rgbdict		9005755	1					
ANR	9005762	IdentifierDeclStatement	int code = 0 ;	5337:4:168664:168676	9005755	1	True				
ANR	9005763	IdentifierDecl	code = 0		9005755	0					
ANR	9005764	IdentifierDeclType	int		9005755	0					
ANR	9005765	Identifier	code		9005755	1					
ANR	9005766	AssignmentExpression	code = 0		9005755	2		=			
ANR	9005767	Identifier	code		9005755	0					
ANR	9005768	PrimaryExpression	0		9005755	1					
ANR	9005769	IdentifierDeclStatement	"float gamma [ 3 ] , white [ 3 ] , black [ 3 ] , matrix [ 9 ] ;"	5338:4:168682:168745	9005755	2	True				
ANR	9005770	IdentifierDecl	gamma [ 3 ]		9005755	0					
ANR	9005771	IdentifierDeclType	float [ 3 ]		9005755	0					
ANR	9005772	Identifier	gamma		9005755	1					
ANR	9005773	PrimaryExpression	3		9005755	2					
ANR	9005774	IdentifierDecl	white [ 3 ]		9005755	1					
ANR	9005775	IdentifierDeclType	float [ 3 ]		9005755	0					
ANR	9005776	Identifier	white		9005755	1					
ANR	9005777	PrimaryExpression	3		9005755	2					
ANR	9005778	IdentifierDecl	black [ 3 ]		9005755	2					
ANR	9005779	IdentifierDeclType	float [ 3 ]		9005755	0					
ANR	9005780	Identifier	black		9005755	1					
ANR	9005781	PrimaryExpression	3		9005755	2					
ANR	9005782	IdentifierDecl	matrix [ 9 ]		9005755	3					
ANR	9005783	IdentifierDeclType	float [ 9 ]		9005755	0					
ANR	9005784	Identifier	matrix		9005755	1					
ANR	9005785	PrimaryExpression	9		9005755	2					
ANR	9005786	Statement	static	5339:4:168751:168756	9005755	3	True				
ANR	9005787	IdentifierDeclStatement	"const float dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 } ;"	5339:11:168758:168808	9005755	4	True				
ANR	9005788	IdentifierDecl	"dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 }"		9005755	0					
ANR	9005789	IdentifierDeclType	const float [ 3 ]		9005755	0					
ANR	9005790	Identifier	dflt_gamma		9005755	1					
ANR	9005791	PrimaryExpression	3		9005755	2					
ANR	9005792	AssignmentExpression	"dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 }"		9005755	3		=			
ANR	9005793	Identifier	dflt_gamma		9005755	0					
ANR	9005794	InitializerList	1.0		9005755	1					
ANR	9005795	PrimaryExpression	1.0		9005755	0					
ANR	9005796	PrimaryExpression	1.0		9005755	1					
ANR	9005797	PrimaryExpression	1.0		9005755	2					
ANR	9005798	Statement	static	5340:4:168814:168819	9005755	5	True				
ANR	9005799	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5340:11:168821:168886	9005755	6	True				
ANR	9005800	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9005755	0					
ANR	9005801	IdentifierDeclType	const float [ 3 ]		9005755	0					
ANR	9005802	Identifier	dflt_black		9005755	1					
ANR	9005803	PrimaryExpression	3		9005755	2					
ANR	9005804	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		9005755	3		=			
ANR	9005805	Identifier	dflt_black		9005755	0					
ANR	9005806	InitializerList	0		9005755	1					
ANR	9005807	PrimaryExpression	0		9005755	0					
ANR	9005808	PrimaryExpression	0		9005755	1					
ANR	9005809	PrimaryExpression	0		9005755	2					
ANR	9005810	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9005755	1					
ANR	9005811	IdentifierDeclType	const float [ 3 ]		9005755	0					
ANR	9005812	Identifier	dflt_white		9005755	1					
ANR	9005813	PrimaryExpression	3		9005755	2					
ANR	9005814	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		9005755	3		=			
ANR	9005815	Identifier	dflt_white		9005755	0					
ANR	9005816	InitializerList	0		9005755	1					
ANR	9005817	PrimaryExpression	0		9005755	0					
ANR	9005818	PrimaryExpression	0		9005755	1					
ANR	9005819	PrimaryExpression	0		9005755	2					
ANR	9005820	Statement	static	5341:4:168892:168897	9005755	7	True				
ANR	9005821	IdentifierDeclStatement	"const float dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 } ;"	5341:11:168899:168952	9005755	8	True				
ANR	9005822	IdentifierDecl	"dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 }"		9005755	0					
ANR	9005823	IdentifierDeclType	const float [ 9 ]		9005755	0					
ANR	9005824	Identifier	dflt_matrix		9005755	1					
ANR	9005825	PrimaryExpression	9		9005755	2					
ANR	9005826	AssignmentExpression	"dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 }"		9005755	3		=			
ANR	9005827	Identifier	dflt_matrix		9005755	0					
ANR	9005828	InitializerList	1		9005755	1					
ANR	9005829	PrimaryExpression	1		9005755	0					
ANR	9005830	PrimaryExpression	0		9005755	1					
ANR	9005831	PrimaryExpression	0		9005755	2					
ANR	9005832	PrimaryExpression	0		9005755	3					
ANR	9005833	PrimaryExpression	1		9005755	4					
ANR	9005834	PrimaryExpression	0		9005755	5					
ANR	9005835	PrimaryExpression	0		9005755	6					
ANR	9005836	PrimaryExpression	0		9005755	7					
ANR	9005837	PrimaryExpression	1		9005755	8					
ANR	9005838	IdentifierDeclStatement	int i ;	5342:4:168958:168963	9005755	9	True				
ANR	9005839	IdentifierDecl	i		9005755	0					
ANR	9005840	IdentifierDeclType	int		9005755	0					
ANR	9005841	Identifier	i		9005755	1					
ANR	9005842	IdentifierDeclStatement	gs_client_color cc ;	5343:4:168969:168987	9005755	10	True				
ANR	9005843	IdentifierDecl	cc		9005755	0					
ANR	9005844	IdentifierDeclType	gs_client_color		9005755	0					
ANR	9005845	Identifier	cc		9005755	1					
ANR	9005846	ExpressionStatement	* cont = 0	5345:4:168994:169003	9005755	11	True				
ANR	9005847	AssignmentExpression	* cont = 0		9005755	0		=			
ANR	9005848	UnaryOperationExpression	* cont		9005755	0					
ANR	9005849	UnaryOperator	*		9005755	0					
ANR	9005850	Identifier	cont		9005755	1					
ANR	9005851	PrimaryExpression	0		9005755	1					
ANR	9005852	ExpressionStatement	"code = array_get ( imemory , r , 1 , & rgbdict )"	5346:4:169009:169050	9005755	12	True				
ANR	9005853	AssignmentExpression	"code = array_get ( imemory , r , 1 , & rgbdict )"		9005755	0		=			
ANR	9005854	Identifier	code		9005755	0					
ANR	9005855	CallExpression	"array_get ( imemory , r , 1 , & rgbdict )"		9005755	1					
ANR	9005856	Callee	array_get		9005755	0					
ANR	9005857	Identifier	array_get		9005755	0					
ANR	9005858	ArgumentList	imemory		9005755	1					
ANR	9005859	Argument	imemory		9005755	0					
ANR	9005860	Identifier	imemory		9005755	0					
ANR	9005861	Argument	r		9005755	1					
ANR	9005862	Identifier	r		9005755	0					
ANR	9005863	Argument	1		9005755	2					
ANR	9005864	PrimaryExpression	1		9005755	0					
ANR	9005865	Argument	& rgbdict		9005755	3					
ANR	9005866	UnaryOperationExpression	& rgbdict		9005755	0					
ANR	9005867	UnaryOperator	&		9005755	0					
ANR	9005868	Identifier	rgbdict		9005755	1					
ANR	9005869	IfStatement	if ( code < 0 )		9005755	13					
ANR	9005870	Condition	code < 0	5347:8:169060:169067	9005755	0	True				
ANR	9005871	RelationalExpression	code < 0		9005755	0		<			
ANR	9005872	Identifier	code		9005755	0					
ANR	9005873	PrimaryExpression	0		9005755	1					
ANR	9005874	ReturnStatement	return code ;	5348:8:169078:169089	9005755	1	True				
ANR	9005875	Identifier	code		9005755	0					
ANR	9005876	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"	5350:4:169119:169345	9005755	14	True				
ANR	9005877	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"		9005755	0		=			
ANR	9005878	Identifier	code		9005755	0					
ANR	9005879	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"		9005755	1					
ANR	9005880	Callee	dict_floats_param		9005755	0					
ANR	9005881	Identifier	dict_floats_param		9005755	0					
ANR	9005882	ArgumentList	imemory		9005755	1					
ANR	9005883	Argument	imemory		9005755	0					
ANR	9005884	Identifier	imemory		9005755	0					
ANR	9005885	Argument	& rgbdict		9005755	1					
ANR	9005886	UnaryOperationExpression	& rgbdict		9005755	0					
ANR	9005887	UnaryOperator	&		9005755	0					
ANR	9005888	Identifier	rgbdict		9005755	1					
ANR	9005889	Argument	"""Gamma"""		9005755	2					
ANR	9005890	PrimaryExpression	"""Gamma"""		9005755	0					
ANR	9005891	Argument	3		9005755	3					
ANR	9005892	PrimaryExpression	3		9005755	0					
ANR	9005893	Argument	gamma		9005755	4					
ANR	9005894	Identifier	gamma		9005755	0					
ANR	9005895	Argument	dflt_gamma		9005755	5					
ANR	9005896	Identifier	dflt_gamma		9005755	0					
ANR	9005897	IfStatement	if ( code < 0 )		9005755	15					
ANR	9005898	Condition	code < 0	5356:8:169355:169362	9005755	0	True				
ANR	9005899	RelationalExpression	code < 0		9005755	0		<			
ANR	9005900	Identifier	code		9005755	0					
ANR	9005901	PrimaryExpression	0		9005755	1					
ANR	9005902	ReturnStatement	return code ;	5357:8:169373:169384	9005755	1	True				
ANR	9005903	Identifier	code		9005755	0					
ANR	9005904	IfStatement	if ( gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0 )		9005755	16					
ANR	9005905	Condition	gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0	5358:8:169394:169440	9005755	0	True				
ANR	9005906	OrExpression	gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0		9005755	0		||			
ANR	9005907	RelationalExpression	gamma [ 0 ] <= 0		9005755	0		<=			
ANR	9005908	ArrayIndexing	gamma [ 0 ]		9005755	0					
ANR	9005909	Identifier	gamma		9005755	0					
ANR	9005910	PrimaryExpression	0		9005755	1					
ANR	9005911	PrimaryExpression	0		9005755	1					
ANR	9005912	OrExpression	gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0		9005755	1		||			
ANR	9005913	RelationalExpression	gamma [ 1 ] <= 0		9005755	0		<=			
ANR	9005914	ArrayIndexing	gamma [ 1 ]		9005755	0					
ANR	9005915	Identifier	gamma		9005755	0					
ANR	9005916	PrimaryExpression	1		9005755	1					
ANR	9005917	PrimaryExpression	0		9005755	1					
ANR	9005918	RelationalExpression	gamma [ 2 ] <= 0		9005755	1		<=			
ANR	9005919	ArrayIndexing	gamma [ 2 ]		9005755	0					
ANR	9005920	Identifier	gamma		9005755	0					
ANR	9005921	PrimaryExpression	2		9005755	1					
ANR	9005922	PrimaryExpression	0		9005755	1					
ANR	9005923	ExpressionStatement	return_error ( gs_error_rangecheck )	5359:8:169451:169484	9005755	1	True				
ANR	9005924	CallExpression	return_error ( gs_error_rangecheck )		9005755	0					
ANR	9005925	Callee	return_error		9005755	0					
ANR	9005926	Identifier	return_error		9005755	0					
ANR	9005927	ArgumentList	gs_error_rangecheck		9005755	1					
ANR	9005928	Argument	gs_error_rangecheck		9005755	0					
ANR	9005929	Identifier	gs_error_rangecheck		9005755	0					
ANR	9005930	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"	5360:4:169490:169721	9005755	17	True				
ANR	9005931	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"		9005755	0		=			
ANR	9005932	Identifier	code		9005755	0					
ANR	9005933	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"		9005755	1					
ANR	9005934	Callee	dict_floats_param		9005755	0					
ANR	9005935	Identifier	dict_floats_param		9005755	0					
ANR	9005936	ArgumentList	imemory		9005755	1					
ANR	9005937	Argument	imemory		9005755	0					
ANR	9005938	Identifier	imemory		9005755	0					
ANR	9005939	Argument	& rgbdict		9005755	1					
ANR	9005940	UnaryOperationExpression	& rgbdict		9005755	0					
ANR	9005941	UnaryOperator	&		9005755	0					
ANR	9005942	Identifier	rgbdict		9005755	1					
ANR	9005943	Argument	"""BlackPoint"""		9005755	2					
ANR	9005944	PrimaryExpression	"""BlackPoint"""		9005755	0					
ANR	9005945	Argument	3		9005755	3					
ANR	9005946	PrimaryExpression	3		9005755	0					
ANR	9005947	Argument	black		9005755	4					
ANR	9005948	Identifier	black		9005755	0					
ANR	9005949	Argument	dflt_black		9005755	5					
ANR	9005950	Identifier	dflt_black		9005755	0					
ANR	9005951	IfStatement	if ( code < 0 )		9005755	18					
ANR	9005952	Condition	code < 0	5366:8:169731:169738	9005755	0	True				
ANR	9005953	RelationalExpression	code < 0		9005755	0		<			
ANR	9005954	Identifier	code		9005755	0					
ANR	9005955	PrimaryExpression	0		9005755	1					
ANR	9005956	ReturnStatement	return code ;	5367:8:169749:169760	9005755	1	True				
ANR	9005957	Identifier	code		9005755	0					
ANR	9005958	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"	5368:4:169766:169997	9005755	19	True				
ANR	9005959	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"		9005755	0		=			
ANR	9005960	Identifier	code		9005755	0					
ANR	9005961	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"		9005755	1					
ANR	9005962	Callee	dict_floats_param		9005755	0					
ANR	9005963	Identifier	dict_floats_param		9005755	0					
ANR	9005964	ArgumentList	imemory		9005755	1					
ANR	9005965	Argument	imemory		9005755	0					
ANR	9005966	Identifier	imemory		9005755	0					
ANR	9005967	Argument	& rgbdict		9005755	1					
ANR	9005968	UnaryOperationExpression	& rgbdict		9005755	0					
ANR	9005969	UnaryOperator	&		9005755	0					
ANR	9005970	Identifier	rgbdict		9005755	1					
ANR	9005971	Argument	"""WhitePoint"""		9005755	2					
ANR	9005972	PrimaryExpression	"""WhitePoint"""		9005755	0					
ANR	9005973	Argument	3		9005755	3					
ANR	9005974	PrimaryExpression	3		9005755	0					
ANR	9005975	Argument	white		9005755	4					
ANR	9005976	Identifier	white		9005755	0					
ANR	9005977	Argument	dflt_white		9005755	5					
ANR	9005978	Identifier	dflt_white		9005755	0					
ANR	9005979	IfStatement	if ( code < 0 )		9005755	20					
ANR	9005980	Condition	code < 0	5374:8:170007:170014	9005755	0	True				
ANR	9005981	RelationalExpression	code < 0		9005755	0		<			
ANR	9005982	Identifier	code		9005755	0					
ANR	9005983	PrimaryExpression	0		9005755	1					
ANR	9005984	ReturnStatement	return code ;	5375:8:170025:170036	9005755	1	True				
ANR	9005985	Identifier	code		9005755	0					
ANR	9005986	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		9005755	21					
ANR	9005987	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5376:8:170046:170094	9005755	0	True				
ANR	9005988	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		9005755	0		||			
ANR	9005989	RelationalExpression	white [ 0 ] <= 0		9005755	0		<=			
ANR	9005990	ArrayIndexing	white [ 0 ]		9005755	0					
ANR	9005991	Identifier	white		9005755	0					
ANR	9005992	PrimaryExpression	0		9005755	1					
ANR	9005993	PrimaryExpression	0		9005755	1					
ANR	9005994	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		9005755	1		||			
ANR	9005995	EqualityExpression	white [ 1 ] != 1.0		9005755	0		!=			
ANR	9005996	ArrayIndexing	white [ 1 ]		9005755	0					
ANR	9005997	Identifier	white		9005755	0					
ANR	9005998	PrimaryExpression	1		9005755	1					
ANR	9005999	PrimaryExpression	1.0		9005755	1					
ANR	9006000	RelationalExpression	white [ 2 ] <= 0		9005755	1		<=			
ANR	9006001	ArrayIndexing	white [ 2 ]		9005755	0					
ANR	9006002	Identifier	white		9005755	0					
ANR	9006003	PrimaryExpression	2		9005755	1					
ANR	9006004	PrimaryExpression	0		9005755	1					
ANR	9006005	ExpressionStatement	return_error ( gs_error_rangecheck )	5377:8:170105:170138	9005755	1	True				
ANR	9006006	CallExpression	return_error ( gs_error_rangecheck )		9005755	0					
ANR	9006007	Callee	return_error		9005755	0					
ANR	9006008	Identifier	return_error		9005755	0					
ANR	9006009	ArgumentList	gs_error_rangecheck		9005755	1					
ANR	9006010	Argument	gs_error_rangecheck		9005755	0					
ANR	9006011	Identifier	gs_error_rangecheck		9005755	0					
ANR	9006012	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"	5378:4:170144:170373	9005755	22	True				
ANR	9006013	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"		9005755	0		=			
ANR	9006014	Identifier	code		9005755	0					
ANR	9006015	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"		9005755	1					
ANR	9006016	Callee	dict_floats_param		9005755	0					
ANR	9006017	Identifier	dict_floats_param		9005755	0					
ANR	9006018	ArgumentList	imemory		9005755	1					
ANR	9006019	Argument	imemory		9005755	0					
ANR	9006020	Identifier	imemory		9005755	0					
ANR	9006021	Argument	& rgbdict		9005755	1					
ANR	9006022	UnaryOperationExpression	& rgbdict		9005755	0					
ANR	9006023	UnaryOperator	&		9005755	0					
ANR	9006024	Identifier	rgbdict		9005755	1					
ANR	9006025	Argument	"""Matrix"""		9005755	2					
ANR	9006026	PrimaryExpression	"""Matrix"""		9005755	0					
ANR	9006027	Argument	9		9005755	3					
ANR	9006028	PrimaryExpression	9		9005755	0					
ANR	9006029	Argument	matrix		9005755	4					
ANR	9006030	Identifier	matrix		9005755	0					
ANR	9006031	Argument	dflt_matrix		9005755	5					
ANR	9006032	Identifier	dflt_matrix		9005755	0					
ANR	9006033	IfStatement	if ( code < 0 )		9005755	23					
ANR	9006034	Condition	code < 0	5384:8:170383:170390	9005755	0	True				
ANR	9006035	RelationalExpression	code < 0		9005755	0		<			
ANR	9006036	Identifier	code		9005755	0					
ANR	9006037	PrimaryExpression	0		9005755	1					
ANR	9006038	ReturnStatement	return code ;	5385:8:170401:170412	9005755	1	True				
ANR	9006039	Identifier	code		9005755	0					
ANR	9006040	ExpressionStatement	"code = seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"	5386:4:170418:170498	9005755	24	True				
ANR	9006041	AssignmentExpression	"code = seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"		9005755	0		=			
ANR	9006042	Identifier	code		9005755	0					
ANR	9006043	CallExpression	"seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"		9005755	1					
ANR	9006044	Callee	seticc_cal		9005755	0					
ANR	9006045	Identifier	seticc_cal		9005755	0					
ANR	9006046	ArgumentList	i_ctx_p		9005755	1					
ANR	9006047	Argument	i_ctx_p		9005755	0					
ANR	9006048	Identifier	i_ctx_p		9005755	0					
ANR	9006049	Argument	white		9005755	1					
ANR	9006050	Identifier	white		9005755	0					
ANR	9006051	Argument	black		9005755	2					
ANR	9006052	Identifier	black		9005755	0					
ANR	9006053	Argument	gamma		9005755	3					
ANR	9006054	Identifier	gamma		9005755	0					
ANR	9006055	Argument	matrix		9005755	4					
ANR	9006056	Identifier	matrix		9005755	0					
ANR	9006057	Argument	3		9005755	5					
ANR	9006058	PrimaryExpression	3		9005755	0					
ANR	9006059	Argument	rgbdict . value . saveid		9005755	6					
ANR	9006060	MemberAccess	rgbdict . value . saveid		9005755	0					
ANR	9006061	MemberAccess	rgbdict . value		9005755	0					
ANR	9006062	Identifier	rgbdict		9005755	0					
ANR	9006063	Identifier	value		9005755	1					
ANR	9006064	Identifier	saveid		9005755	1					
ANR	9006065	IfStatement	if ( code < 0 )		9005755	25					
ANR	9006066	Condition	code < 0	5387:9:170509:170516	9005755	0	True				
ANR	9006067	RelationalExpression	code < 0		9005755	0		<			
ANR	9006068	Identifier	code		9005755	0					
ANR	9006069	PrimaryExpression	0		9005755	1					
ANR	9006070	ReturnStatement	"return gs_rethrow ( code , ""setting CalRGB  color space"" ) ;"	5388:8:170527:170581	9005755	1	True				
ANR	9006071	CallExpression	"gs_rethrow ( code , ""setting CalRGB  color space"" )"		9005755	0					
ANR	9006072	Callee	gs_rethrow		9005755	0					
ANR	9006073	Identifier	gs_rethrow		9005755	0					
ANR	9006074	ArgumentList	code		9005755	1					
ANR	9006075	Argument	code		9005755	0					
ANR	9006076	Identifier	code		9005755	0					
ANR	9006077	Argument	"""setting CalRGB  color space"""		9005755	1					
ANR	9006078	PrimaryExpression	"""setting CalRGB  color space"""		9005755	0					
ANR	9006079	ExpressionStatement	cc . pattern = 0x00	5389:4:170587:170604	9005755	26	True				
ANR	9006080	AssignmentExpression	cc . pattern = 0x00		9005755	0		=			
ANR	9006081	MemberAccess	cc . pattern		9005755	0					
ANR	9006082	Identifier	cc		9005755	0					
ANR	9006083	Identifier	pattern		9005755	1					
ANR	9006084	PrimaryExpression	0x00		9005755	1					
ANR	9006085	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		9005755	27					
ANR	9006086	ForInit	i = 0 ;	5390:9:170615:170618	9005755	0	True				
ANR	9006087	AssignmentExpression	i = 0		9005755	0		=			
ANR	9006088	Identifier	i		9005755	0					
ANR	9006089	PrimaryExpression	0		9005755	1					
ANR	9006090	Condition	i < 3	5390:13:170619:170621	9005755	1	True				
ANR	9006091	RelationalExpression	i < 3		9005755	0		<			
ANR	9006092	Identifier	i		9005755	0					
ANR	9006093	PrimaryExpression	3		9005755	1					
ANR	9006094	PostIncDecOperationExpression	i ++	5390:17:170623:170625	9005755	2	True				
ANR	9006095	Identifier	i		9005755	0					
ANR	9006096	IncDec	++		9005755	1					
ANR	9006097	ExpressionStatement	cc . paint . values [ i ] = 0	5391:8:170636:170658	9005755	3	True				
ANR	9006098	AssignmentExpression	cc . paint . values [ i ] = 0		9005755	0		=			
ANR	9006099	ArrayIndexing	cc . paint . values [ i ]		9005755	0					
ANR	9006100	MemberAccess	cc . paint . values		9005755	0					
ANR	9006101	MemberAccess	cc . paint		9005755	0					
ANR	9006102	Identifier	cc		9005755	0					
ANR	9006103	Identifier	paint		9005755	1					
ANR	9006104	Identifier	values		9005755	1					
ANR	9006105	Identifier	i		9005755	1					
ANR	9006106	PrimaryExpression	0		9005755	1					
ANR	9006107	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5392:4:170664:170692	9005755	28	True				
ANR	9006108	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		9005755	0		=			
ANR	9006109	Identifier	code		9005755	0					
ANR	9006110	CallExpression	"gs_setcolor ( igs , & cc )"		9005755	1					
ANR	9006111	Callee	gs_setcolor		9005755	0					
ANR	9006112	Identifier	gs_setcolor		9005755	0					
ANR	9006113	ArgumentList	igs		9005755	1					
ANR	9006114	Argument	igs		9005755	0					
ANR	9006115	Identifier	igs		9005755	0					
ANR	9006116	Argument	& cc		9005755	1					
ANR	9006117	UnaryOperationExpression	& cc		9005755	0					
ANR	9006118	UnaryOperator	&		9005755	0					
ANR	9006119	Identifier	cc		9005755	1					
ANR	9006120	ReturnStatement	return code ;	5393:4:170698:170709	9005755	29	True				
ANR	9006121	Identifier	code		9005755	0					
ANR	9006122	ReturnType	static int		9005755	1					
ANR	9006123	Identifier	setcalrgbspace		9005755	2					
ANR	9006124	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9005755	3					
ANR	9006125	Parameter	i_ctx_t * i_ctx_p	5334:26:168577:168593	9005755	0	True				
ANR	9006126	ParameterType	i_ctx_t *		9005755	0					
ANR	9006127	Identifier	i_ctx_p		9005755	1					
ANR	9006128	Parameter	ref * r	5334:45:168596:168601	9005755	1	True				
ANR	9006129	ParameterType	ref *		9005755	0					
ANR	9006130	Identifier	r		9005755	1					
ANR	9006131	Parameter	int * stage	5334:53:168604:168613	9005755	2	True				
ANR	9006132	ParameterType	int *		9005755	0					
ANR	9006133	Identifier	stage		9005755	1					
ANR	9006134	Parameter	int * cont	5334:65:168616:168624	9005755	3	True				
ANR	9006135	ParameterType	int *		9005755	0					
ANR	9006136	Identifier	cont		9005755	1					
ANR	9006137	Parameter	int CIESubst	5334:76:168627:168638	9005755	4	True				
ANR	9006138	ParameterType	int		9005755	0					
ANR	9006139	Identifier	CIESubst		9005755	1					
ANR	9006140	CFGEntryNode	ENTRY		9005755		True				
ANR	9006141	CFGExitNode	EXIT		9005755		True				
ANR	9006142	Symbol	cc . pattern		9005755						
ANR	9006143	Symbol	code		9005755						
ANR	9006144	Symbol	gs_error_rangecheck		9005755						
ANR	9006145	Symbol	* cc		9005755						
ANR	9006146	Symbol	gs_setcolor		9005755						
ANR	9006147	Symbol	dflt_gamma		9005755						
ANR	9006148	Symbol	* gamma		9005755						
ANR	9006149	Symbol	& cc		9005755						
ANR	9006150	Symbol	matrix		9005755						
ANR	9006151	Symbol	gs_rethrow		9005755						
ANR	9006152	Symbol	white		9005755						
ANR	9006153	Symbol	dflt_white		9005755						
ANR	9006154	Symbol	dict_floats_param		9005755						
ANR	9006155	Symbol	igs		9005755						
ANR	9006156	Symbol	* cc . paint . values		9005755						
ANR	9006157	Symbol	imemory		9005755						
ANR	9006158	Symbol	cont		9005755						
ANR	9006159	Symbol	CIESubst		9005755						
ANR	9006160	Symbol	rgbdict		9005755						
ANR	9006161	Symbol	cc		9005755						
ANR	9006162	Symbol	& rgbdict		9005755						
ANR	9006163	Symbol	rgbdict . value		9005755						
ANR	9006164	Symbol	array_get		9005755						
ANR	9006165	Symbol	black		9005755						
ANR	9006166	Symbol	i		9005755						
ANR	9006167	Symbol	dflt_matrix		9005755						
ANR	9006168	Symbol	* white		9005755						
ANR	9006169	Symbol	dflt_black		9005755						
ANR	9006170	Symbol	r		9005755						
ANR	9006171	Symbol	* cc . paint		9005755						
ANR	9006172	Symbol	* i		9005755						
ANR	9006173	Symbol	stage		9005755						
ANR	9006174	Symbol	* cont		9005755						
ANR	9006175	Symbol	seticc_cal		9005755						
ANR	9006176	Symbol	rgbdict . value . saveid		9005755						
ANR	9006177	Symbol	i_ctx_p		9005755						
ANR	9006178	Symbol	cc . paint		9005755						
ANR	9006179	Symbol	cc . paint . values		9005755						
ANR	9006180	Symbol	gamma		9005755						
ANR	9006181	Function	validatecalrgbspace	5396:0:170714:171784							
ANR	9006182	FunctionDef	"validatecalrgbspace (i_ctx_t * i_ctx_p , ref * * r)"		9006181	0					
ANR	9006183	CompoundStatement		5397:0:170773:171784	9006181	0					
ANR	9006184	IdentifierDeclStatement	int code = 0 ;	5398:4:170779:170789	9006181	0	True				
ANR	9006185	IdentifierDecl	code = 0		9006181	0					
ANR	9006186	IdentifierDeclType	int		9006181	0					
ANR	9006187	Identifier	code		9006181	1					
ANR	9006188	AssignmentExpression	code = 0		9006181	2		=			
ANR	9006189	Identifier	code		9006181	0					
ANR	9006190	PrimaryExpression	0		9006181	1					
ANR	9006191	IdentifierDeclStatement	"ref * space , calrgbdict ;"	5399:4:170795:170817	9006181	1	True				
ANR	9006192	IdentifierDecl	* space		9006181	0					
ANR	9006193	IdentifierDeclType	ref *		9006181	0					
ANR	9006194	Identifier	space		9006181	1					
ANR	9006195	IdentifierDecl	calrgbdict		9006181	1					
ANR	9006196	IdentifierDeclType	ref		9006181	0					
ANR	9006197	Identifier	calrgbdict		9006181	1					
ANR	9006198	ExpressionStatement	space = * r	5401:4:170824:170834	9006181	2	True				
ANR	9006199	AssignmentExpression	space = * r		9006181	0		=			
ANR	9006200	Identifier	space		9006181	0					
ANR	9006201	UnaryOperationExpression	* r		9006181	1					
ANR	9006202	UnaryOperator	*		9006181	0					
ANR	9006203	Identifier	r		9006181	1					
ANR	9006204	IfStatement	if ( ! r_is_array ( space ) )		9006181	3					
ANR	9006205	Condition	! r_is_array ( space )	5402:8:170844:170861	9006181	0	True				
ANR	9006206	UnaryOperationExpression	! r_is_array ( space )		9006181	0					
ANR	9006207	UnaryOperator	!		9006181	0					
ANR	9006208	CallExpression	r_is_array ( space )		9006181	1					
ANR	9006209	Callee	r_is_array		9006181	0					
ANR	9006210	Identifier	r_is_array		9006181	0					
ANR	9006211	ArgumentList	space		9006181	1					
ANR	9006212	Argument	space		9006181	0					
ANR	9006213	Identifier	space		9006181	0					
ANR	9006214	ExpressionStatement	return_error ( gs_error_typecheck )	5403:8:170872:170904	9006181	1	True				
ANR	9006215	CallExpression	return_error ( gs_error_typecheck )		9006181	0					
ANR	9006216	Callee	return_error		9006181	0					
ANR	9006217	Identifier	return_error		9006181	0					
ANR	9006218	ArgumentList	gs_error_typecheck		9006181	1					
ANR	9006219	Argument	gs_error_typecheck		9006181	0					
ANR	9006220	Identifier	gs_error_typecheck		9006181	0					
ANR	9006221	IfStatement	if ( r_size ( space ) < 2 )		9006181	4					
ANR	9006222	Condition	r_size ( space ) < 2	5405:8:170975:170991	9006181	0	True				
ANR	9006223	RelationalExpression	r_size ( space ) < 2		9006181	0		<			
ANR	9006224	CallExpression	r_size ( space )		9006181	0					
ANR	9006225	Callee	r_size		9006181	0					
ANR	9006226	Identifier	r_size		9006181	0					
ANR	9006227	ArgumentList	space		9006181	1					
ANR	9006228	Argument	space		9006181	0					
ANR	9006229	Identifier	space		9006181	0					
ANR	9006230	PrimaryExpression	2		9006181	1					
ANR	9006231	ExpressionStatement	return_error ( gs_error_rangecheck )	5406:8:171002:171035	9006181	1	True				
ANR	9006232	CallExpression	return_error ( gs_error_rangecheck )		9006181	0					
ANR	9006233	Callee	return_error		9006181	0					
ANR	9006234	Identifier	return_error		9006181	0					
ANR	9006235	ArgumentList	gs_error_rangecheck		9006181	1					
ANR	9006236	Argument	gs_error_rangecheck		9006181	0					
ANR	9006237	Identifier	gs_error_rangecheck		9006181	0					
ANR	9006238	ExpressionStatement	"code = array_get ( imemory , space , 1 , & calrgbdict )"	5407:4:171041:171089	9006181	5	True				
ANR	9006239	AssignmentExpression	"code = array_get ( imemory , space , 1 , & calrgbdict )"		9006181	0		=			
ANR	9006240	Identifier	code		9006181	0					
ANR	9006241	CallExpression	"array_get ( imemory , space , 1 , & calrgbdict )"		9006181	1					
ANR	9006242	Callee	array_get		9006181	0					
ANR	9006243	Identifier	array_get		9006181	0					
ANR	9006244	ArgumentList	imemory		9006181	1					
ANR	9006245	Argument	imemory		9006181	0					
ANR	9006246	Identifier	imemory		9006181	0					
ANR	9006247	Argument	space		9006181	1					
ANR	9006248	Identifier	space		9006181	0					
ANR	9006249	Argument	1		9006181	2					
ANR	9006250	PrimaryExpression	1		9006181	0					
ANR	9006251	Argument	& calrgbdict		9006181	3					
ANR	9006252	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006253	UnaryOperator	&		9006181	0					
ANR	9006254	Identifier	calrgbdict		9006181	1					
ANR	9006255	IfStatement	if ( code < 0 )		9006181	6					
ANR	9006256	Condition	code < 0	5408:8:171099:171106	9006181	0	True				
ANR	9006257	RelationalExpression	code < 0		9006181	0		<			
ANR	9006258	Identifier	code		9006181	0					
ANR	9006259	PrimaryExpression	0		9006181	1					
ANR	9006260	ReturnStatement	return code ;	5409:8:171117:171128	9006181	1	True				
ANR	9006261	Identifier	code		9006181	0					
ANR	9006262	IfStatement	"if ( ! r_has_type ( & calrgbdict , t_dictionary ) )"		9006181	7					
ANR	9006263	Condition	"! r_has_type ( & calrgbdict , t_dictionary )"	5410:8:171138:171175	9006181	0	True				
ANR	9006264	UnaryOperationExpression	"! r_has_type ( & calrgbdict , t_dictionary )"		9006181	0					
ANR	9006265	UnaryOperator	!		9006181	0					
ANR	9006266	CallExpression	"r_has_type ( & calrgbdict , t_dictionary )"		9006181	1					
ANR	9006267	Callee	r_has_type		9006181	0					
ANR	9006268	Identifier	r_has_type		9006181	0					
ANR	9006269	ArgumentList	& calrgbdict		9006181	1					
ANR	9006270	Argument	& calrgbdict		9006181	0					
ANR	9006271	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006272	UnaryOperator	&		9006181	0					
ANR	9006273	Identifier	calrgbdict		9006181	1					
ANR	9006274	Argument	t_dictionary		9006181	1					
ANR	9006275	Identifier	t_dictionary		9006181	0					
ANR	9006276	ExpressionStatement	return_error ( gs_error_typecheck )	5411:8:171186:171218	9006181	1	True				
ANR	9006277	CallExpression	return_error ( gs_error_typecheck )		9006181	0					
ANR	9006278	Callee	return_error		9006181	0					
ANR	9006279	Identifier	return_error		9006181	0					
ANR	9006280	ArgumentList	gs_error_typecheck		9006181	1					
ANR	9006281	Argument	gs_error_typecheck		9006181	0					
ANR	9006282	Identifier	gs_error_typecheck		9006181	0					
ANR	9006283	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & calrgbdict )"	5413:4:171275:171319	9006181	8	True				
ANR	9006284	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & calrgbdict )"		9006181	0		=			
ANR	9006285	Identifier	code		9006181	0					
ANR	9006286	CallExpression	"checkWhitePoint ( i_ctx_p , & calrgbdict )"		9006181	1					
ANR	9006287	Callee	checkWhitePoint		9006181	0					
ANR	9006288	Identifier	checkWhitePoint		9006181	0					
ANR	9006289	ArgumentList	i_ctx_p		9006181	1					
ANR	9006290	Argument	i_ctx_p		9006181	0					
ANR	9006291	Identifier	i_ctx_p		9006181	0					
ANR	9006292	Argument	& calrgbdict		9006181	1					
ANR	9006293	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006294	UnaryOperator	&		9006181	0					
ANR	9006295	Identifier	calrgbdict		9006181	1					
ANR	9006296	IfStatement	if ( code != 0 )		9006181	9					
ANR	9006297	Condition	code != 0	5414:8:171329:171337	9006181	0	True				
ANR	9006298	EqualityExpression	code != 0		9006181	0		!=			
ANR	9006299	Identifier	code		9006181	0					
ANR	9006300	PrimaryExpression	0		9006181	1					
ANR	9006301	ReturnStatement	return code ;	5415:8:171348:171359	9006181	1	True				
ANR	9006302	Identifier	code		9006181	0					
ANR	9006303	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & calrgbdict )"	5417:4:171423:171467	9006181	10	True				
ANR	9006304	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & calrgbdict )"		9006181	0		=			
ANR	9006305	Identifier	code		9006181	0					
ANR	9006306	CallExpression	"checkBlackPoint ( i_ctx_p , & calrgbdict )"		9006181	1					
ANR	9006307	Callee	checkBlackPoint		9006181	0					
ANR	9006308	Identifier	checkBlackPoint		9006181	0					
ANR	9006309	ArgumentList	i_ctx_p		9006181	1					
ANR	9006310	Argument	i_ctx_p		9006181	0					
ANR	9006311	Identifier	i_ctx_p		9006181	0					
ANR	9006312	Argument	& calrgbdict		9006181	1					
ANR	9006313	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006314	UnaryOperator	&		9006181	0					
ANR	9006315	Identifier	calrgbdict		9006181	1					
ANR	9006316	IfStatement	if ( code < 0 )		9006181	11					
ANR	9006317	Condition	code < 0	5418:8:171477:171484	9006181	0	True				
ANR	9006318	RelationalExpression	code < 0		9006181	0		<			
ANR	9006319	Identifier	code		9006181	0					
ANR	9006320	PrimaryExpression	0		9006181	1					
ANR	9006321	ReturnStatement	return code ;	5419:8:171495:171506	9006181	1	True				
ANR	9006322	Identifier	code		9006181	0					
ANR	9006323	ExpressionStatement	"code = checkGamma ( i_ctx_p , & calrgbdict , 3 )"	5421:4:171541:171583	9006181	12	True				
ANR	9006324	AssignmentExpression	"code = checkGamma ( i_ctx_p , & calrgbdict , 3 )"		9006181	0		=			
ANR	9006325	Identifier	code		9006181	0					
ANR	9006326	CallExpression	"checkGamma ( i_ctx_p , & calrgbdict , 3 )"		9006181	1					
ANR	9006327	Callee	checkGamma		9006181	0					
ANR	9006328	Identifier	checkGamma		9006181	0					
ANR	9006329	ArgumentList	i_ctx_p		9006181	1					
ANR	9006330	Argument	i_ctx_p		9006181	0					
ANR	9006331	Identifier	i_ctx_p		9006181	0					
ANR	9006332	Argument	& calrgbdict		9006181	1					
ANR	9006333	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006334	UnaryOperator	&		9006181	0					
ANR	9006335	Identifier	calrgbdict		9006181	1					
ANR	9006336	Argument	3		9006181	2					
ANR	9006337	PrimaryExpression	3		9006181	0					
ANR	9006338	IfStatement	if ( code < 0 )		9006181	13					
ANR	9006339	Condition	code < 0	5422:8:171593:171600	9006181	0	True				
ANR	9006340	RelationalExpression	code < 0		9006181	0		<			
ANR	9006341	Identifier	code		9006181	0					
ANR	9006342	PrimaryExpression	0		9006181	1					
ANR	9006343	ReturnStatement	return code ;	5423:8:171611:171622	9006181	1	True				
ANR	9006344	Identifier	code		9006181	0					
ANR	9006345	ExpressionStatement	"code = checkCalMatrix ( i_ctx_p , & calrgbdict )"	5425:4:171651:171694	9006181	14	True				
ANR	9006346	AssignmentExpression	"code = checkCalMatrix ( i_ctx_p , & calrgbdict )"		9006181	0		=			
ANR	9006347	Identifier	code		9006181	0					
ANR	9006348	CallExpression	"checkCalMatrix ( i_ctx_p , & calrgbdict )"		9006181	1					
ANR	9006349	Callee	checkCalMatrix		9006181	0					
ANR	9006350	Identifier	checkCalMatrix		9006181	0					
ANR	9006351	ArgumentList	i_ctx_p		9006181	1					
ANR	9006352	Argument	i_ctx_p		9006181	0					
ANR	9006353	Identifier	i_ctx_p		9006181	0					
ANR	9006354	Argument	& calrgbdict		9006181	1					
ANR	9006355	UnaryOperationExpression	& calrgbdict		9006181	0					
ANR	9006356	UnaryOperator	&		9006181	0					
ANR	9006357	Identifier	calrgbdict		9006181	1					
ANR	9006358	IfStatement	if ( code < 0 )		9006181	15					
ANR	9006359	Condition	code < 0	5426:8:171704:171711	9006181	0	True				
ANR	9006360	RelationalExpression	code < 0		9006181	0		<			
ANR	9006361	Identifier	code		9006181	0					
ANR	9006362	PrimaryExpression	0		9006181	1					
ANR	9006363	ReturnStatement	return code ;	5427:8:171722:171733	9006181	1	True				
ANR	9006364	Identifier	code		9006181	0					
ANR	9006365	ExpressionStatement	* r = 0	5428:4:171739:171745	9006181	16	True				
ANR	9006366	AssignmentExpression	* r = 0		9006181	0		=			
ANR	9006367	UnaryOperationExpression	* r		9006181	0					
ANR	9006368	UnaryOperator	*		9006181	0					
ANR	9006369	Identifier	r		9006181	1					
ANR	9006370	PrimaryExpression	0		9006181	1					
ANR	9006371	ReturnStatement	return 0 ;	5429:4:171774:171782	9006181	17	True				
ANR	9006372	PrimaryExpression	0		9006181	0					
ANR	9006373	ReturnType	static int		9006181	1					
ANR	9006374	Identifier	validatecalrgbspace		9006181	2					
ANR	9006375	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		9006181	3					
ANR	9006376	Parameter	i_ctx_t * i_ctx_p	5396:31:170745:170761	9006181	0	True				
ANR	9006377	ParameterType	i_ctx_t *		9006181	0					
ANR	9006378	Identifier	i_ctx_p		9006181	1					
ANR	9006379	Parameter	ref * * r	5396:50:170764:170770	9006181	1	True				
ANR	9006380	ParameterType	ref * *		9006181	0					
ANR	9006381	Identifier	r		9006181	1					
ANR	9006382	CFGEntryNode	ENTRY		9006181		True				
ANR	9006383	CFGExitNode	EXIT		9006181		True				
ANR	9006384	Symbol	checkCalMatrix		9006181						
ANR	9006385	Symbol	code		9006181						
ANR	9006386	Symbol	t_dictionary		9006181						
ANR	9006387	Symbol	calrgbdict		9006181						
ANR	9006388	Symbol	gs_error_rangecheck		9006181						
ANR	9006389	Symbol	array_get		9006181						
ANR	9006390	Symbol	& calrgbdict		9006181						
ANR	9006391	Symbol	space		9006181						
ANR	9006392	Symbol	r		9006181						
ANR	9006393	Symbol	gs_error_typecheck		9006181						
ANR	9006394	Symbol	r_has_type		9006181						
ANR	9006395	Symbol	checkBlackPoint		9006181						
ANR	9006396	Symbol	i_ctx_p		9006181						
ANR	9006397	Symbol	r_size		9006181						
ANR	9006398	Symbol	r_is_array		9006181						
ANR	9006399	Symbol	imemory		9006181						
ANR	9006400	Symbol	checkWhitePoint		9006181						
ANR	9006401	Symbol	* r		9006181						
ANR	9006402	Symbol	checkGamma		9006181						
ANR	9006403	DeclStmt									
ANR	9006404	Decl							int	"int ( i_ctx_t * i_ctx_p , ref * space , float * ptr )"	iccrange
ANR	9006405	Function	seticcspace	5434:0:171866:177105							
ANR	9006406	FunctionDef	"seticcspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		9006405	0					
ANR	9006407	CompoundStatement		5435:0:171953:177105	9006405	0					
ANR	9006408	IdentifierDeclStatement	os_ptr op = osp ;	5436:4:171959:171974	9006405	0	True				
ANR	9006409	IdentifierDecl	op = osp		9006405	0					
ANR	9006410	IdentifierDeclType	os_ptr		9006405	0					
ANR	9006411	Identifier	op		9006405	1					
ANR	9006412	AssignmentExpression	op = osp		9006405	2		=			
ANR	9006413	Identifier	osp		9006405	0					
ANR	9006414	Identifier	osp		9006405	1					
ANR	9006415	IdentifierDeclStatement	"ref ICCdict , * tempref , * altref = NULL , * nocie = NULL ;"	5437:4:171980:172034	9006405	1	True				
ANR	9006416	IdentifierDecl	ICCdict		9006405	0					
ANR	9006417	IdentifierDeclType	ref		9006405	0					
ANR	9006418	Identifier	ICCdict		9006405	1					
ANR	9006419	IdentifierDecl	* tempref		9006405	1					
ANR	9006420	IdentifierDeclType	ref *		9006405	0					
ANR	9006421	Identifier	tempref		9006405	1					
ANR	9006422	IdentifierDecl	* altref = NULL		9006405	2					
ANR	9006423	IdentifierDeclType	ref *		9006405	0					
ANR	9006424	Identifier	altref		9006405	1					
ANR	9006425	AssignmentExpression	* altref = NULL		9006405	2		=			
ANR	9006426	Identifier	NULL		9006405	0					
ANR	9006427	Identifier	NULL		9006405	1					
ANR	9006428	IdentifierDecl	* nocie = NULL		9006405	3					
ANR	9006429	IdentifierDeclType	ref *		9006405	0					
ANR	9006430	Identifier	nocie		9006405	1					
ANR	9006431	AssignmentExpression	* nocie = NULL		9006405	2		=			
ANR	9006432	Identifier	NULL		9006405	0					
ANR	9006433	Identifier	NULL		9006405	1					
ANR	9006434	IdentifierDeclStatement	"int components , code ;"	5438:4:172040:172060	9006405	2	True				
ANR	9006435	IdentifierDecl	components		9006405	0					
ANR	9006436	IdentifierDeclType	int		9006405	0					
ANR	9006437	Identifier	components		9006405	1					
ANR	9006438	IdentifierDecl	code		9006405	1					
ANR	9006439	IdentifierDeclType	int		9006405	0					
ANR	9006440	Identifier	code		9006405	1					
ANR	9006441	IdentifierDeclStatement	float range [ 8 ] ;	5439:4:172066:172080	9006405	3	True				
ANR	9006442	IdentifierDecl	range [ 8 ]		9006405	0					
ANR	9006443	IdentifierDeclType	float [ 8 ]		9006405	0					
ANR	9006444	Identifier	range		9006405	1					
ANR	9006445	PrimaryExpression	8		9006405	2					
ANR	9006446	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	5441:4:172087:172139	9006405	4	True				
ANR	9006447	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		9006405	0		=			
ANR	9006448	Identifier	code		9006405	0					
ANR	9006449	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		9006405	1					
ANR	9006450	Callee	dict_find_string		9006405	0					
ANR	9006451	Identifier	dict_find_string		9006405	0					
ANR	9006452	ArgumentList	systemdict		9006405	1					
ANR	9006453	Argument	systemdict		9006405	0					
ANR	9006454	Identifier	systemdict		9006405	0					
ANR	9006455	Argument	"""NOCIE"""		9006405	1					
ANR	9006456	PrimaryExpression	"""NOCIE"""		9006405	0					
ANR	9006457	Argument	& nocie		9006405	2					
ANR	9006458	UnaryOperationExpression	& nocie		9006405	0					
ANR	9006459	UnaryOperator	&		9006405	0					
ANR	9006460	Identifier	nocie		9006405	1					
ANR	9006461	IfStatement	if ( code > 0 )		9006405	5					
ANR	9006462	Condition	code > 0	5442:8:172149:172156	9006405	0	True				
ANR	9006463	RelationalExpression	code > 0		9006405	0		>			
ANR	9006464	Identifier	code		9006405	0					
ANR	9006465	PrimaryExpression	0		9006405	1					
ANR	9006466	CompoundStatement		8:18:205:205	9006405	1					
ANR	9006467	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		9006405	0					
ANR	9006468	Condition	"! r_has_type ( nocie , t_boolean )"	5443:12:172173:172201	9006405	0	True				
ANR	9006469	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		9006405	0					
ANR	9006470	UnaryOperator	!		9006405	0					
ANR	9006471	CallExpression	"r_has_type ( nocie , t_boolean )"		9006405	1					
ANR	9006472	Callee	r_has_type		9006405	0					
ANR	9006473	Identifier	r_has_type		9006405	0					
ANR	9006474	ArgumentList	nocie		9006405	1					
ANR	9006475	Argument	nocie		9006405	0					
ANR	9006476	Identifier	nocie		9006405	0					
ANR	9006477	Argument	t_boolean		9006405	1					
ANR	9006478	Identifier	t_boolean		9006405	0					
ANR	9006479	ExpressionStatement	return_error ( gs_error_typecheck )	5444:12:172216:172248	9006405	1	True				
ANR	9006480	CallExpression	return_error ( gs_error_typecheck )		9006405	0					
ANR	9006481	Callee	return_error		9006405	0					
ANR	9006482	Identifier	return_error		9006405	0					
ANR	9006483	ArgumentList	gs_error_typecheck		9006405	1					
ANR	9006484	Argument	gs_error_typecheck		9006405	0					
ANR	9006485	Identifier	gs_error_typecheck		9006405	0					
ANR	9006486	ExpressionStatement	* cont = 0	5446:4:172260:172269	9006405	6	True				
ANR	9006487	AssignmentExpression	* cont = 0		9006405	0		=			
ANR	9006488	UnaryOperationExpression	* cont		9006405	0					
ANR	9006489	UnaryOperator	*		9006405	0					
ANR	9006490	Identifier	cont		9006405	1					
ANR	9006491	PrimaryExpression	0		9006405	1					
ANR	9006492	DoStatement	do		9006405	7					
ANR	9006493	CompoundStatement		13:7:324:324	9006405	0					
ANR	9006494	SwitchStatement	switch ( * stage )		9006405	0					
ANR	9006495	Condition	* stage	5448:15:172295:172300	9006405	0	True				
ANR	9006496	UnaryOperationExpression	* stage		9006405	0					
ANR	9006497	UnaryOperator	*		9006405	0					
ANR	9006498	Identifier	stage		9006405	1					
ANR	9006499	CompoundStatement		14:23:349:349	9006405	1					
ANR	9006500	Label	case 0 :	5449:12:172317:172323	9006405	0	True				
ANR	9006501	ExpressionStatement	( * stage ) ++	5450:16:172341:172351	9006405	1	True				
ANR	9006502	PostIncDecOperationExpression	( * stage ) ++		9006405	0					
ANR	9006503	UnaryOperationExpression	* stage		9006405	0					
ANR	9006504	UnaryOperator	*		9006405	0					
ANR	9006505	Identifier	stage		9006405	1					
ANR	9006506	IncDec	++		9006405	1					
ANR	9006507	ExpressionStatement	"code = array_get ( imemory , r , 1 , & ICCdict )"	5451:16:172369:172410	9006405	2	True				
ANR	9006508	AssignmentExpression	"code = array_get ( imemory , r , 1 , & ICCdict )"		9006405	0		=			
ANR	9006509	Identifier	code		9006405	0					
ANR	9006510	CallExpression	"array_get ( imemory , r , 1 , & ICCdict )"		9006405	1					
ANR	9006511	Callee	array_get		9006405	0					
ANR	9006512	Identifier	array_get		9006405	0					
ANR	9006513	ArgumentList	imemory		9006405	1					
ANR	9006514	Argument	imemory		9006405	0					
ANR	9006515	Identifier	imemory		9006405	0					
ANR	9006516	Argument	r		9006405	1					
ANR	9006517	Identifier	r		9006405	0					
ANR	9006518	Argument	1		9006405	2					
ANR	9006519	PrimaryExpression	1		9006405	0					
ANR	9006520	Argument	& ICCdict		9006405	3					
ANR	9006521	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006522	UnaryOperator	&		9006405	0					
ANR	9006523	Identifier	ICCdict		9006405	1					
ANR	9006524	IfStatement	if ( code < 0 )		9006405	3					
ANR	9006525	Condition	code < 0	5452:20:172432:172439	9006405	0	True				
ANR	9006526	RelationalExpression	code < 0		9006405	0		<			
ANR	9006527	Identifier	code		9006405	0					
ANR	9006528	PrimaryExpression	0		9006405	1					
ANR	9006529	ReturnStatement	return code ;	5453:20:172462:172473	9006405	1	True				
ANR	9006530	Identifier	code		9006405	0					
ANR	9006531	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5454:16:172491:172539	9006405	4	True				
ANR	9006532	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9006405	0		=			
ANR	9006533	Identifier	code		9006405	0					
ANR	9006534	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9006405	1					
ANR	9006535	Callee	dict_find_string		9006405	0					
ANR	9006536	Identifier	dict_find_string		9006405	0					
ANR	9006537	ArgumentList	& ICCdict		9006405	1					
ANR	9006538	Argument	& ICCdict		9006405	0					
ANR	9006539	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006540	UnaryOperator	&		9006405	0					
ANR	9006541	Identifier	ICCdict		9006405	1					
ANR	9006542	Argument	"""N"""		9006405	1					
ANR	9006543	PrimaryExpression	"""N"""		9006405	0					
ANR	9006544	Argument	& tempref		9006405	2					
ANR	9006545	UnaryOperationExpression	& tempref		9006405	0					
ANR	9006546	UnaryOperator	&		9006405	0					
ANR	9006547	Identifier	tempref		9006405	1					
ANR	9006548	IfStatement	if ( code < 0 )		9006405	5					
ANR	9006549	Condition	code < 0	5455:20:172561:172568	9006405	0	True				
ANR	9006550	RelationalExpression	code < 0		9006405	0		<			
ANR	9006551	Identifier	code		9006405	0					
ANR	9006552	PrimaryExpression	0		9006405	1					
ANR	9006553	ReturnStatement	return code ;	5456:20:172591:172602	9006405	1	True				
ANR	9006554	Identifier	code		9006405	0					
ANR	9006555	IfStatement	if ( code == 0 )		9006405	6					
ANR	9006556	Condition	code == 0	5457:20:172624:172632	9006405	0	True				
ANR	9006557	EqualityExpression	code == 0		9006405	0		==			
ANR	9006558	Identifier	code		9006405	0					
ANR	9006559	PrimaryExpression	0		9006405	1					
ANR	9006560	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5458:20:172655:172695	9006405	1	True				
ANR	9006561	CallExpression	gs_note_error ( gs_error_undefined )		9006405	0					
ANR	9006562	Callee	gs_note_error		9006405	0					
ANR	9006563	Identifier	gs_note_error		9006405	0					
ANR	9006564	ArgumentList	gs_error_undefined		9006405	1					
ANR	9006565	Argument	gs_error_undefined		9006405	0					
ANR	9006566	Identifier	gs_error_undefined		9006405	0					
ANR	9006567	ExpressionStatement	components = tempref -> value . intval	5459:16:172713:172747	9006405	7	True				
ANR	9006568	AssignmentExpression	components = tempref -> value . intval		9006405	0		=			
ANR	9006569	Identifier	components		9006405	0					
ANR	9006570	MemberAccess	tempref -> value . intval		9006405	1					
ANR	9006571	PtrMemberAccess	tempref -> value		9006405	0					
ANR	9006572	Identifier	tempref		9006405	0					
ANR	9006573	Identifier	value		9006405	1					
ANR	9006574	Identifier	intval		9006405	1					
ANR	9006575	IfStatement	if ( components > count_of ( range ) / 2 )		9006405	8					
ANR	9006576	Condition	components > count_of ( range ) / 2	5460:20:172769:172798	9006405	0	True				
ANR	9006577	RelationalExpression	components > count_of ( range ) / 2		9006405	0		>			
ANR	9006578	Identifier	components		9006405	0					
ANR	9006579	MultiplicativeExpression	count_of ( range ) / 2		9006405	1		/			
ANR	9006580	CallExpression	count_of ( range )		9006405	0					
ANR	9006581	Callee	count_of		9006405	0					
ANR	9006582	Identifier	count_of		9006405	0					
ANR	9006583	ArgumentList	range		9006405	1					
ANR	9006584	Argument	range		9006405	0					
ANR	9006585	Identifier	range		9006405	0					
ANR	9006586	PrimaryExpression	2		9006405	1					
ANR	9006587	ExpressionStatement	return_error ( gs_error_rangecheck )	5461:20:172821:172854	9006405	1	True				
ANR	9006588	CallExpression	return_error ( gs_error_rangecheck )		9006405	0					
ANR	9006589	Callee	return_error		9006405	0					
ANR	9006590	Identifier	return_error		9006405	0					
ANR	9006591	ArgumentList	gs_error_rangecheck		9006405	1					
ANR	9006592	Argument	gs_error_rangecheck		9006405	0					
ANR	9006593	Identifier	gs_error_rangecheck		9006405	0					
ANR	9006594	IfStatement	if ( nocie && nocie -> value . boolval )		9006405	9					
ANR	9006595	Condition	nocie && nocie -> value . boolval	5464:20:172944:172972	9006405	0	True				
ANR	9006596	AndExpression	nocie && nocie -> value . boolval		9006405	0		&&			
ANR	9006597	Identifier	nocie		9006405	0					
ANR	9006598	MemberAccess	nocie -> value . boolval		9006405	1					
ANR	9006599	PtrMemberAccess	nocie -> value		9006405	0					
ANR	9006600	Identifier	nocie		9006405	0					
ANR	9006601	Identifier	value		9006405	1					
ANR	9006602	Identifier	boolval		9006405	1					
ANR	9006603	CompoundStatement		30:51:1021:1021	9006405	1					
ANR	9006604	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"	5465:20:172997:173052	9006405	0	True				
ANR	9006605	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		9006405	0		=			
ANR	9006606	Identifier	code		9006405	0					
ANR	9006607	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		9006405	1					
ANR	9006608	Callee	dict_find_string		9006405	0					
ANR	9006609	Identifier	dict_find_string		9006405	0					
ANR	9006610	ArgumentList	& ICCdict		9006405	1					
ANR	9006611	Argument	& ICCdict		9006405	0					
ANR	9006612	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006613	UnaryOperator	&		9006405	0					
ANR	9006614	Identifier	ICCdict		9006405	1					
ANR	9006615	Argument	"""Alternate"""		9006405	1					
ANR	9006616	PrimaryExpression	"""Alternate"""		9006405	0					
ANR	9006617	Argument	& altref		9006405	2					
ANR	9006618	UnaryOperationExpression	& altref		9006405	0					
ANR	9006619	UnaryOperator	&		9006405	0					
ANR	9006620	Identifier	altref		9006405	1					
ANR	9006621	IfStatement	if ( code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null ) )		9006405	1					
ANR	9006622	Condition	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )	5466:24:173106:173163	9006405	0	True				
ANR	9006623	AndExpression	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )		9006405	0		&&			
ANR	9006624	RelationalExpression	code > 0		9006405	0		>			
ANR	9006625	Identifier	code		9006405	0					
ANR	9006626	PrimaryExpression	0		9006405	1					
ANR	9006627	AndExpression	( altref != NULL ) && ( r_type ( altref ) != t_null )		9006405	1		&&			
ANR	9006628	EqualityExpression	altref != NULL		9006405	0		!=			
ANR	9006629	Identifier	altref		9006405	0					
ANR	9006630	Identifier	NULL		9006405	1					
ANR	9006631	EqualityExpression	r_type ( altref ) != t_null		9006405	1		!=			
ANR	9006632	CallExpression	r_type ( altref )		9006405	0					
ANR	9006633	Callee	r_type		9006405	0					
ANR	9006634	Identifier	r_type		9006405	0					
ANR	9006635	ArgumentList	altref		9006405	1					
ANR	9006636	Argument	altref		9006405	0					
ANR	9006637	Identifier	altref		9006405	0					
ANR	9006638	Identifier	t_null		9006405	1					
ANR	9006639	CompoundStatement		32:84:1212:1212	9006405	1					
ANR	9006640	ExpressionStatement	push ( 1 )	5471:24:173448:173455	9006405	0	True				
ANR	9006641	CallExpression	push ( 1 )		9006405	0					
ANR	9006642	Callee	push		9006405	0					
ANR	9006643	Identifier	push		9006405	0					
ANR	9006644	ArgumentList	1		9006405	1					
ANR	9006645	Argument	1		9006405	0					
ANR	9006646	PrimaryExpression	1		9006405	0					
ANR	9006647	ExpressionStatement	"ref_assign ( op , altref )"	5472:24:173481:173503	9006405	1	True				
ANR	9006648	CallExpression	"ref_assign ( op , altref )"		9006405	0					
ANR	9006649	Callee	ref_assign		9006405	0					
ANR	9006650	Identifier	ref_assign		9006405	0					
ANR	9006651	ArgumentList	op		9006405	1					
ANR	9006652	Argument	op		9006405	0					
ANR	9006653	Identifier	op		9006405	0					
ANR	9006654	Argument	altref		9006405	1					
ANR	9006655	Identifier	altref		9006405	0					
ANR	9006656	ReturnStatement	return setcolorspace_nosubst ( i_ctx_p ) ;	5476:24:173709:173746	9006405	2	True				
ANR	9006657	CallExpression	setcolorspace_nosubst ( i_ctx_p )		9006405	0					
ANR	9006658	Callee	setcolorspace_nosubst		9006405	0					
ANR	9006659	Identifier	setcolorspace_nosubst		9006405	0					
ANR	9006660	ArgumentList	i_ctx_p		9006405	1					
ANR	9006661	Argument	i_ctx_p		9006405	0					
ANR	9006662	Identifier	i_ctx_p		9006405	0					
ANR	9006663	ElseStatement	else		9006405	0					
ANR	9006664	CompoundStatement		43:27:1821:1821	9006405	0					
ANR	9006665	ExpressionStatement	"code = set_dev_space ( i_ctx_p , components )"	5481:24:173998:174039	9006405	0	True				
ANR	9006666	AssignmentExpression	"code = set_dev_space ( i_ctx_p , components )"		9006405	0		=			
ANR	9006667	Identifier	code		9006405	0					
ANR	9006668	CallExpression	"set_dev_space ( i_ctx_p , components )"		9006405	1					
ANR	9006669	Callee	set_dev_space		9006405	0					
ANR	9006670	Identifier	set_dev_space		9006405	0					
ANR	9006671	ArgumentList	i_ctx_p		9006405	1					
ANR	9006672	Argument	i_ctx_p		9006405	0					
ANR	9006673	Identifier	i_ctx_p		9006405	0					
ANR	9006674	Argument	components		9006405	1					
ANR	9006675	Identifier	components		9006405	0					
ANR	9006676	IfStatement	if ( code != 0 )		9006405	1					
ANR	9006677	Condition	code != 0	5482:28:174069:174077	9006405	0	True				
ANR	9006678	EqualityExpression	code != 0		9006405	0		!=			
ANR	9006679	Identifier	code		9006405	0					
ANR	9006680	PrimaryExpression	0		9006405	1					
ANR	9006681	ReturnStatement	return code ;	5483:28:174108:174119	9006405	1	True				
ANR	9006682	Identifier	code		9006405	0					
ANR	9006683	ExpressionStatement	* stage = 0	5484:24:174145:174155	9006405	2	True				
ANR	9006684	AssignmentExpression	* stage = 0		9006405	0		=			
ANR	9006685	UnaryOperationExpression	* stage		9006405	0					
ANR	9006686	UnaryOperator	*		9006405	0					
ANR	9006687	Identifier	stage		9006405	1					
ANR	9006688	PrimaryExpression	0		9006405	1					
ANR	9006689	ElseStatement	else		9006405	0					
ANR	9006690	CompoundStatement		52:23:2248:2248	9006405	0					
ANR	9006691	ExpressionStatement	"code = iccrange ( i_ctx_p , r , ( float * ) & range )"	5487:20:174224:174268	9006405	0	True				
ANR	9006692	AssignmentExpression	"code = iccrange ( i_ctx_p , r , ( float * ) & range )"		9006405	0		=			
ANR	9006693	Identifier	code		9006405	0					
ANR	9006694	CallExpression	"iccrange ( i_ctx_p , r , ( float * ) & range )"		9006405	1					
ANR	9006695	Callee	iccrange		9006405	0					
ANR	9006696	Identifier	iccrange		9006405	0					
ANR	9006697	ArgumentList	i_ctx_p		9006405	1					
ANR	9006698	Argument	i_ctx_p		9006405	0					
ANR	9006699	Identifier	i_ctx_p		9006405	0					
ANR	9006700	Argument	r		9006405	1					
ANR	9006701	Identifier	r		9006405	0					
ANR	9006702	Argument	( float * ) & range		9006405	2					
ANR	9006703	CastExpression	( float * ) & range		9006405	0					
ANR	9006704	CastTarget	float *		9006405	0					
ANR	9006705	UnaryOperationExpression	& range		9006405	1					
ANR	9006706	UnaryOperator	&		9006405	0					
ANR	9006707	Identifier	range		9006405	1					
ANR	9006708	IfStatement	if ( code < 0 )		9006405	1					
ANR	9006709	Condition	code < 0	5488:24:174294:174301	9006405	0	True				
ANR	9006710	RelationalExpression	code < 0		9006405	0		<			
ANR	9006711	Identifier	code		9006405	0					
ANR	9006712	PrimaryExpression	0		9006405	1					
ANR	9006713	ReturnStatement	return code ;	5489:24:174328:174339	9006405	1	True				
ANR	9006714	Identifier	code		9006405	0					
ANR	9006715	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"	5490:20:174361:174418	9006405	2	True				
ANR	9006716	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		9006405	0		=			
ANR	9006717	Identifier	code		9006405	0					
ANR	9006718	CallExpression	"dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		9006405	1					
ANR	9006719	Callee	dict_find_string		9006405	0					
ANR	9006720	Identifier	dict_find_string		9006405	0					
ANR	9006721	ArgumentList	& ICCdict		9006405	1					
ANR	9006722	Argument	& ICCdict		9006405	0					
ANR	9006723	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006724	UnaryOperator	&		9006405	0					
ANR	9006725	Identifier	ICCdict		9006405	1					
ANR	9006726	Argument	"""DataSource"""		9006405	1					
ANR	9006727	PrimaryExpression	"""DataSource"""		9006405	0					
ANR	9006728	Argument	& tempref		9006405	2					
ANR	9006729	UnaryOperationExpression	& tempref		9006405	0					
ANR	9006730	UnaryOperator	&		9006405	0					
ANR	9006731	Identifier	tempref		9006405	1					
ANR	9006732	IfStatement	if ( code == 0 )		9006405	3					
ANR	9006733	Condition	code == 0	5491:24:174444:174452	9006405	0	True				
ANR	9006734	EqualityExpression	code == 0		9006405	0		==			
ANR	9006735	Identifier	code		9006405	0					
ANR	9006736	PrimaryExpression	0		9006405	1					
ANR	9006737	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5492:24:174479:174519	9006405	1	True				
ANR	9006738	CallExpression	gs_note_error ( gs_error_undefined )		9006405	0					
ANR	9006739	Callee	gs_note_error		9006405	0					
ANR	9006740	Identifier	gs_note_error		9006405	0					
ANR	9006741	ArgumentList	gs_error_undefined		9006405	1					
ANR	9006742	Argument	gs_error_undefined		9006405	0					
ANR	9006743	Identifier	gs_error_undefined		9006405	0					
ANR	9006744	IfStatement	"if ( r_has_type ( tempref , t_string ) )"		9006405	4					
ANR	9006745	Condition	"r_has_type ( tempref , t_string )"	5494:24:174620:174648	9006405	0	True				
ANR	9006746	CallExpression	"r_has_type ( tempref , t_string )"		9006405	0					
ANR	9006747	Callee	r_has_type		9006405	0					
ANR	9006748	Identifier	r_has_type		9006405	0					
ANR	9006749	ArgumentList	tempref		9006405	1					
ANR	9006750	Argument	tempref		9006405	0					
ANR	9006751	Identifier	tempref		9006405	0					
ANR	9006752	Argument	t_string		9006405	1					
ANR	9006753	Identifier	t_string		9006405	0					
ANR	9006754	CompoundStatement		62:24:2772:2779	9006405	1					
ANR	9006755	IdentifierDeclStatement	uint n = r_size ( tempref ) ;	5495:24:174676:174700	9006405	0	True				
ANR	9006756	IdentifierDecl	n = r_size ( tempref )		9006405	0					
ANR	9006757	IdentifierDeclType	uint		9006405	0					
ANR	9006758	Identifier	n		9006405	1					
ANR	9006759	AssignmentExpression	n = r_size ( tempref )		9006405	2		=			
ANR	9006760	Identifier	n		9006405	0					
ANR	9006761	CallExpression	r_size ( tempref )		9006405	1					
ANR	9006762	Callee	r_size		9006405	0					
ANR	9006763	Identifier	r_size		9006405	0					
ANR	9006764	ArgumentList	tempref		9006405	1					
ANR	9006765	Argument	tempref		9006405	0					
ANR	9006766	Identifier	tempref		9006405	0					
ANR	9006767	IdentifierDeclStatement	ref rss ;	5496:24:174726:174733	9006405	1	True				
ANR	9006768	IdentifierDecl	rss		9006405	0					
ANR	9006769	IdentifierDeclType	ref		9006405	0					
ANR	9006770	Identifier	rss		9006405	1					
ANR	9006771	ExpressionStatement	"code = make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"	5498:24:174760:174853	9006405	2	True				
ANR	9006772	AssignmentExpression	"code = make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"		9006405	0		=			
ANR	9006773	Identifier	code		9006405	0					
ANR	9006774	CallExpression	"make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"		9006405	1					
ANR	9006775	Callee	make_rss		9006405	0					
ANR	9006776	Identifier	make_rss		9006405	0					
ANR	9006777	ArgumentList	i_ctx_p		9006405	1					
ANR	9006778	Argument	i_ctx_p		9006405	0					
ANR	9006779	Identifier	i_ctx_p		9006405	0					
ANR	9006780	Argument	& rss		9006405	1					
ANR	9006781	UnaryOperationExpression	& rss		9006405	0					
ANR	9006782	UnaryOperator	&		9006405	0					
ANR	9006783	Identifier	rss		9006405	1					
ANR	9006784	Argument	tempref -> value . const_bytes		9006405	2					
ANR	9006785	MemberAccess	tempref -> value . const_bytes		9006405	0					
ANR	9006786	PtrMemberAccess	tempref -> value		9006405	0					
ANR	9006787	Identifier	tempref		9006405	0					
ANR	9006788	Identifier	value		9006405	1					
ANR	9006789	Identifier	const_bytes		9006405	1					
ANR	9006790	Argument	n		9006405	3					
ANR	9006791	Identifier	n		9006405	0					
ANR	9006792	Argument	r_space ( tempref )		9006405	4					
ANR	9006793	CallExpression	r_space ( tempref )		9006405	0					
ANR	9006794	Callee	r_space		9006405	0					
ANR	9006795	Identifier	r_space		9006405	0					
ANR	9006796	ArgumentList	tempref		9006405	1					
ANR	9006797	Argument	tempref		9006405	0					
ANR	9006798	Identifier	tempref		9006405	0					
ANR	9006799	Argument	0L		9006405	5					
ANR	9006800	PrimaryExpression	0L		9006405	0					
ANR	9006801	Argument	n		9006405	6					
ANR	9006802	Identifier	n		9006405	0					
ANR	9006803	Argument	false		9006405	7					
ANR	9006804	Identifier	false		9006405	0					
ANR	9006805	IfStatement	if ( code < 0 )		9006405	3					
ANR	9006806	Condition	code < 0	5499:28:174883:174890	9006405	0	True				
ANR	9006807	RelationalExpression	code < 0		9006405	0		<			
ANR	9006808	Identifier	code		9006405	0					
ANR	9006809	PrimaryExpression	0		9006405	1					
ANR	9006810	ReturnStatement	return code ;	5500:28:174921:174932	9006405	1	True				
ANR	9006811	Identifier	code		9006405	0					
ANR	9006812	ExpressionStatement	"ref_assign ( tempref , & rss )"	5501:24:174958:174983	9006405	4	True				
ANR	9006813	CallExpression	"ref_assign ( tempref , & rss )"		9006405	0					
ANR	9006814	Callee	ref_assign		9006405	0					
ANR	9006815	Identifier	ref_assign		9006405	0					
ANR	9006816	ArgumentList	tempref		9006405	1					
ANR	9006817	Argument	tempref		9006405	0					
ANR	9006818	Identifier	tempref		9006405	0					
ANR	9006819	Argument	& rss		9006405	1					
ANR	9006820	UnaryOperationExpression	& rss		9006405	0					
ANR	9006821	UnaryOperator	&		9006405	0					
ANR	9006822	Identifier	rss		9006405	1					
ANR	9006823	ExpressionStatement	push ( 1 )	5504:20:175108:175115	9006405	5	True				
ANR	9006824	CallExpression	push ( 1 )		9006405	0					
ANR	9006825	Callee	push		9006405	0					
ANR	9006826	Identifier	push		9006405	0					
ANR	9006827	ArgumentList	1		9006405	1					
ANR	9006828	Argument	1		9006405	0					
ANR	9006829	PrimaryExpression	1		9006405	0					
ANR	9006830	ExpressionStatement	"ref_assign ( op , & ICCdict )"	5505:20:175137:175161	9006405	6	True				
ANR	9006831	CallExpression	"ref_assign ( op , & ICCdict )"		9006405	0					
ANR	9006832	Callee	ref_assign		9006405	0					
ANR	9006833	Identifier	ref_assign		9006405	0					
ANR	9006834	ArgumentList	op		9006405	1					
ANR	9006835	Argument	op		9006405	0					
ANR	9006836	Identifier	op		9006405	0					
ANR	9006837	Argument	& ICCdict		9006405	1					
ANR	9006838	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006839	UnaryOperator	&		9006405	0					
ANR	9006840	Identifier	ICCdict		9006405	1					
ANR	9006841	ExpressionStatement	"code = seticc ( i_ctx_p , components , op , ( float * ) & range )"	5506:20:175183:175238	9006405	7	True				
ANR	9006842	AssignmentExpression	"code = seticc ( i_ctx_p , components , op , ( float * ) & range )"		9006405	0		=			
ANR	9006843	Identifier	code		9006405	0					
ANR	9006844	CallExpression	"seticc ( i_ctx_p , components , op , ( float * ) & range )"		9006405	1					
ANR	9006845	Callee	seticc		9006405	0					
ANR	9006846	Identifier	seticc		9006405	0					
ANR	9006847	ArgumentList	i_ctx_p		9006405	1					
ANR	9006848	Argument	i_ctx_p		9006405	0					
ANR	9006849	Identifier	i_ctx_p		9006405	0					
ANR	9006850	Argument	components		9006405	1					
ANR	9006851	Identifier	components		9006405	0					
ANR	9006852	Argument	op		9006405	2					
ANR	9006853	Identifier	op		9006405	0					
ANR	9006854	Argument	( float * ) & range		9006405	3					
ANR	9006855	CastExpression	( float * ) & range		9006405	0					
ANR	9006856	CastTarget	float *		9006405	0					
ANR	9006857	UnaryOperationExpression	& range		9006405	1					
ANR	9006858	UnaryOperator	&		9006405	0					
ANR	9006859	Identifier	range		9006405	1					
ANR	9006860	IfStatement	if ( code < 0 )		9006405	8					
ANR	9006861	Condition	code < 0	5507:24:175264:175271	9006405	0	True				
ANR	9006862	RelationalExpression	code < 0		9006405	0		<			
ANR	9006863	Identifier	code		9006405	0					
ANR	9006864	PrimaryExpression	0		9006405	1					
ANR	9006865	CompoundStatement		73:34:3320:3320	9006405	1					
ANR	9006866	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"	5508:24:175300:175355	9006405	0	True				
ANR	9006867	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		9006405	0		=			
ANR	9006868	Identifier	code		9006405	0					
ANR	9006869	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		9006405	1					
ANR	9006870	Callee	dict_find_string		9006405	0					
ANR	9006871	Identifier	dict_find_string		9006405	0					
ANR	9006872	ArgumentList	& ICCdict		9006405	1					
ANR	9006873	Argument	& ICCdict		9006405	0					
ANR	9006874	UnaryOperationExpression	& ICCdict		9006405	0					
ANR	9006875	UnaryOperator	&		9006405	0					
ANR	9006876	Identifier	ICCdict		9006405	1					
ANR	9006877	Argument	"""Alternate"""		9006405	1					
ANR	9006878	PrimaryExpression	"""Alternate"""		9006405	0					
ANR	9006879	Argument	& altref		9006405	2					
ANR	9006880	UnaryOperationExpression	& altref		9006405	0					
ANR	9006881	UnaryOperator	&		9006405	0					
ANR	9006882	Identifier	altref		9006405	1					
ANR	9006883	IfStatement	if ( code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null ) )		9006405	1					
ANR	9006884	Condition	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )	5509:28:175413:175470	9006405	0	True				
ANR	9006885	AndExpression	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )		9006405	0		&&			
ANR	9006886	RelationalExpression	code > 0		9006405	0		>			
ANR	9006887	Identifier	code		9006405	0					
ANR	9006888	PrimaryExpression	0		9006405	1					
ANR	9006889	AndExpression	( altref != NULL ) && ( r_type ( altref ) != t_null )		9006405	1		&&			
ANR	9006890	EqualityExpression	altref != NULL		9006405	0		!=			
ANR	9006891	Identifier	altref		9006405	0					
ANR	9006892	Identifier	NULL		9006405	1					
ANR	9006893	EqualityExpression	r_type ( altref ) != t_null		9006405	1		!=			
ANR	9006894	CallExpression	r_type ( altref )		9006405	0					
ANR	9006895	Callee	r_type		9006405	0					
ANR	9006896	Identifier	r_type		9006405	0					
ANR	9006897	ArgumentList	altref		9006405	1					
ANR	9006898	Argument	altref		9006405	0					
ANR	9006899	Identifier	altref		9006405	0					
ANR	9006900	Identifier	t_null		9006405	1					
ANR	9006901	CompoundStatement		75:88:3519:3519	9006405	1					
ANR	9006902	ExpressionStatement	"ref_assign ( op , ( ref * ) altref )"	5514:28:175776:175805	9006405	0	True				
ANR	9006903	CallExpression	"ref_assign ( op , ( ref * ) altref )"		9006405	0					
ANR	9006904	Callee	ref_assign		9006405	0					
ANR	9006905	Identifier	ref_assign		9006405	0					
ANR	9006906	ArgumentList	op		9006405	1					
ANR	9006907	Argument	op		9006405	0					
ANR	9006908	Identifier	op		9006405	0					
ANR	9006909	Argument	( ref * ) altref		9006405	1					
ANR	9006910	CastExpression	( ref * ) altref		9006405	0					
ANR	9006911	CastTarget	ref *		9006405	0					
ANR	9006912	Identifier	altref		9006405	1					
ANR	9006913	IfStatement	if ( CIESubst )		9006405	1					
ANR	9006914	Condition	CIESubst	5518:32:176031:176038	9006405	0	True				
ANR	9006915	Identifier	CIESubst		9006405	0					
ANR	9006916	ReturnStatement	return setcolorspace_nosubst ( i_ctx_p ) ;	5519:32:176073:176110	9006405	1	True				
ANR	9006917	CallExpression	setcolorspace_nosubst ( i_ctx_p )		9006405	0					
ANR	9006918	Callee	setcolorspace_nosubst		9006405	0					
ANR	9006919	Identifier	setcolorspace_nosubst		9006405	0					
ANR	9006920	ArgumentList	i_ctx_p		9006405	1					
ANR	9006921	Argument	i_ctx_p		9006405	0					
ANR	9006922	Identifier	i_ctx_p		9006405	0					
ANR	9006923	ElseStatement	else		9006405	0					
ANR	9006924	ReturnStatement	return zsetcolorspace ( i_ctx_p ) ;	5521:32:176177:176207	9006405	0	True				
ANR	9006925	CallExpression	zsetcolorspace ( i_ctx_p )		9006405	0					
ANR	9006926	Callee	zsetcolorspace		9006405	0					
ANR	9006927	Identifier	zsetcolorspace		9006405	0					
ANR	9006928	ArgumentList	i_ctx_p		9006405	1					
ANR	9006929	Argument	i_ctx_p		9006405	0					
ANR	9006930	Identifier	i_ctx_p		9006405	0					
ANR	9006931	ElseStatement	else		9006405	0					
ANR	9006932	CompoundStatement		88:31:4286:4286	9006405	0					
ANR	9006933	ExpressionStatement	"code = set_dev_space ( i_ctx_p , components )"	5526:28:176464:176505	9006405	0	True				
ANR	9006934	AssignmentExpression	"code = set_dev_space ( i_ctx_p , components )"		9006405	0		=			
ANR	9006935	Identifier	code		9006405	0					
ANR	9006936	CallExpression	"set_dev_space ( i_ctx_p , components )"		9006405	1					
ANR	9006937	Callee	set_dev_space		9006405	0					
ANR	9006938	Identifier	set_dev_space		9006405	0					
ANR	9006939	ArgumentList	i_ctx_p		9006405	1					
ANR	9006940	Argument	i_ctx_p		9006405	0					
ANR	9006941	Identifier	i_ctx_p		9006405	0					
ANR	9006942	Argument	components		9006405	1					
ANR	9006943	Identifier	components		9006405	0					
ANR	9006944	IfStatement	if ( code != 0 )		9006405	1					
ANR	9006945	Condition	code != 0	5527:32:176539:176547	9006405	0	True				
ANR	9006946	EqualityExpression	code != 0		9006405	0		!=			
ANR	9006947	Identifier	code		9006405	0					
ANR	9006948	PrimaryExpression	0		9006405	1					
ANR	9006949	ReturnStatement	return code ;	5528:32:176582:176593	9006405	1	True				
ANR	9006950	Identifier	code		9006405	0					
ANR	9006951	ExpressionStatement	* stage = 0	5529:28:176623:176633	9006405	2	True				
ANR	9006952	AssignmentExpression	* stage = 0		9006405	0		=			
ANR	9006953	UnaryOperationExpression	* stage		9006405	0					
ANR	9006954	UnaryOperator	*		9006405	0					
ANR	9006955	Identifier	stage		9006405	1					
ANR	9006956	PrimaryExpression	0		9006405	1					
ANR	9006957	ExpressionStatement	pop ( 1 )	5531:24:176685:176691	9006405	2	True				
ANR	9006958	CallExpression	pop ( 1 )		9006405	0					
ANR	9006959	Callee	pop		9006405	0					
ANR	9006960	Identifier	pop		9006405	0					
ANR	9006961	ArgumentList	1		9006405	1					
ANR	9006962	Argument	1		9006405	0					
ANR	9006963	PrimaryExpression	1		9006405	0					
ANR	9006964	IfStatement	if ( code != 0 )		9006405	9					
ANR	9006965	Condition	code != 0	5533:24:176739:176747	9006405	0	True				
ANR	9006966	EqualityExpression	code != 0		9006405	0		!=			
ANR	9006967	Identifier	code		9006405	0					
ANR	9006968	PrimaryExpression	0		9006405	1					
ANR	9006969	ReturnStatement	return code ;	5534:24:176774:176785	9006405	1	True				
ANR	9006970	Identifier	code		9006405	0					
ANR	9006971	BreakStatement	break ;	5536:16:176821:176826	9006405	10	True				
ANR	9006972	Label	case 1 :	5537:12:176840:176846	9006405	11	True				
ANR	9006973	ExpressionStatement	* stage = 0	5539:16:176901:176911	9006405	12	True				
ANR	9006974	AssignmentExpression	* stage = 0		9006405	0		=			
ANR	9006975	UnaryOperationExpression	* stage		9006405	0					
ANR	9006976	UnaryOperator	*		9006405	0					
ANR	9006977	Identifier	stage		9006405	1					
ANR	9006978	PrimaryExpression	0		9006405	1					
ANR	9006979	ExpressionStatement	code = 0	5540:16:176929:176937	9006405	13	True				
ANR	9006980	AssignmentExpression	code = 0		9006405	0		=			
ANR	9006981	Identifier	code		9006405	0					
ANR	9006982	PrimaryExpression	0		9006405	1					
ANR	9006983	BreakStatement	break ;	5541:16:176955:176960	9006405	14	True				
ANR	9006984	Label	default :	5542:12:176974:176981	9006405	15	True				
ANR	9006985	Identifier	default		9006405	0					
ANR	9006986	ExpressionStatement	return_error ( gs_error_rangecheck )	5543:16:176999:177033	9006405	16	True				
ANR	9006987	CallExpression	return_error ( gs_error_rangecheck )		9006405	0					
ANR	9006988	Callee	return_error		9006405	0					
ANR	9006989	Identifier	return_error		9006405	0					
ANR	9006990	ArgumentList	gs_error_rangecheck		9006405	1					
ANR	9006991	Argument	gs_error_rangecheck		9006405	0					
ANR	9006992	Identifier	gs_error_rangecheck		9006405	0					
ANR	9006993	BreakStatement	break ;	5544:16:177051:177056	9006405	17	True				
ANR	9006994	Condition	* stage	5546:11:177079:177084	9006405	1	True				
ANR	9006995	UnaryOperationExpression	* stage		9006405	0					
ANR	9006996	UnaryOperator	*		9006405	0					
ANR	9006997	Identifier	stage		9006405	1					
ANR	9006998	ReturnStatement	return code ;	5547:4:177092:177103	9006405	8	True				
ANR	9006999	Identifier	code		9006405	0					
ANR	9007000	ReturnType	static int		9006405	1					
ANR	9007001	Identifier	seticcspace		9006405	2					
ANR	9007002	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		9006405	3					
ANR	9007003	Parameter	i_ctx_t * i_ctx_p	5434:23:171889:171905	9006405	0	True				
ANR	9007004	ParameterType	i_ctx_t *		9006405	0					
ANR	9007005	Identifier	i_ctx_p		9006405	1					
ANR	9007006	Parameter	ref * r	5434:42:171908:171913	9006405	1	True				
ANR	9007007	ParameterType	ref *		9006405	0					
ANR	9007008	Identifier	r		9006405	1					
ANR	9007009	Parameter	int * stage	5434:50:171916:171925	9006405	2	True				
ANR	9007010	ParameterType	int *		9006405	0					
ANR	9007011	Identifier	stage		9006405	1					
ANR	9007012	Parameter	int * cont	5434:62:171928:171936	9006405	3	True				
ANR	9007013	ParameterType	int *		9006405	0					
ANR	9007014	Identifier	cont		9006405	1					
ANR	9007015	Parameter	int CIESubst	5434:73:171939:171950	9006405	4	True				
ANR	9007016	ParameterType	int		9006405	0					
ANR	9007017	Identifier	CIESubst		9006405	1					
ANR	9007018	CFGEntryNode	ENTRY		9006405		True				
ANR	9007019	CFGExitNode	EXIT		9006405		True				
ANR	9007020	Symbol	gs_error_rangecheck		9006405						
ANR	9007021	Symbol	nocie -> value		9006405						
ANR	9007022	Symbol	gs_error_undefined		9006405						
ANR	9007023	Symbol	* tempref		9006405						
ANR	9007024	Symbol	osp		9006405						
ANR	9007025	Symbol	& ICCdict		9006405						
ANR	9007026	Symbol	nocie -> value . boolval		9006405						
ANR	9007027	Symbol	r_has_type		9006405						
ANR	9007028	Symbol	t_null		9006405						
ANR	9007029	Symbol	set_dev_space		9006405						
ANR	9007030	Symbol	zsetcolorspace		9006405						
ANR	9007031	Symbol	imemory		9006405						
ANR	9007032	Symbol	cont		9006405						
ANR	9007033	Symbol	nocie		9006405						
ANR	9007034	Symbol	iccrange		9006405						
ANR	9007035	Symbol	r_type		9006405						
ANR	9007036	Symbol	NULL		9006405						
ANR	9007037	Symbol	dict_find_string		9006405						
ANR	9007038	Symbol	t_boolean		9006405						
ANR	9007039	Symbol	tempref -> value		9006405						
ANR	9007040	Symbol	i_ctx_p		9006405						
ANR	9007041	Symbol	systemdict		9006405						
ANR	9007042	Symbol	components		9006405						
ANR	9007043	Symbol	code		9006405						
ANR	9007044	Symbol	ICCdict		9006405						
ANR	9007045	Symbol	range		9006405						
ANR	9007046	Symbol	* nocie		9006405						
ANR	9007047	Symbol	gs_error_typecheck		9006405						
ANR	9007048	Symbol	r_space		9006405						
ANR	9007049	Symbol	rss		9006405						
ANR	9007050	Symbol	count_of		9006405						
ANR	9007051	Symbol	r_size		9006405						
ANR	9007052	Symbol	CIESubst		9006405						
ANR	9007053	Symbol	tempref		9006405						
ANR	9007054	Symbol	tempref -> value . intval		9006405						
ANR	9007055	Symbol	op		9006405						
ANR	9007056	Symbol	* stage		9006405						
ANR	9007057	Symbol	altref		9006405						
ANR	9007058	Symbol	seticc		9006405						
ANR	9007059	Symbol	array_get		9006405						
ANR	9007060	Symbol	& altref		9006405						
ANR	9007061	Symbol	false		9006405						
ANR	9007062	Symbol	& tempref		9006405						
ANR	9007063	Symbol	& nocie		9006405						
ANR	9007064	Symbol	n		9006405						
ANR	9007065	Symbol	make_rss		9006405						
ANR	9007066	Symbol	t_string		9006405						
ANR	9007067	Symbol	r		9006405						
ANR	9007068	Symbol	gs_note_error		9006405						
ANR	9007069	Symbol	stage		9006405						
ANR	9007070	Symbol	* cont		9006405						
ANR	9007071	Symbol	tempref -> value . const_bytes		9006405						
ANR	9007072	Symbol	setcolorspace_nosubst		9006405						
ANR	9007073	Symbol	& range		9006405						
ANR	9007074	Symbol	& rss		9006405						
ANR	9007075	Function	iccompareproc	5550:0:177108:178404							
ANR	9007076	FunctionDef	"iccompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		9007075	0					
ANR	9007077	CompoundStatement		5551:0:177179:178404	9007075	0					
ANR	9007078	IdentifierDeclStatement	"int code1 , code2 ;"	5552:4:177185:177201	9007075	0	True				
ANR	9007079	IdentifierDecl	code1		9007075	0					
ANR	9007080	IdentifierDeclType	int		9007075	0					
ANR	9007081	Identifier	code1		9007075	1					
ANR	9007082	IdentifierDecl	code2		9007075	1					
ANR	9007083	IdentifierDeclType	int		9007075	0					
ANR	9007084	Identifier	code2		9007075	1					
ANR	9007085	IdentifierDeclStatement	"ref ICCdict1 , ICCdict2 , * tempref1 , * tempref2 ;"	5553:4:177207:177251	9007075	1	True				
ANR	9007086	IdentifierDecl	ICCdict1		9007075	0					
ANR	9007087	IdentifierDeclType	ref		9007075	0					
ANR	9007088	Identifier	ICCdict1		9007075	1					
ANR	9007089	IdentifierDecl	ICCdict2		9007075	1					
ANR	9007090	IdentifierDeclType	ref		9007075	0					
ANR	9007091	Identifier	ICCdict2		9007075	1					
ANR	9007092	IdentifierDecl	* tempref1		9007075	2					
ANR	9007093	IdentifierDeclType	ref *		9007075	0					
ANR	9007094	Identifier	tempref1		9007075	1					
ANR	9007095	IdentifierDecl	* tempref2		9007075	3					
ANR	9007096	IdentifierDeclType	ref *		9007075	0					
ANR	9007097	Identifier	tempref2		9007075	1					
ANR	9007098	IdentifierDeclStatement	int buff_size ;	5554:4:177257:177270	9007075	2	True				
ANR	9007099	IdentifierDecl	buff_size		9007075	0					
ANR	9007100	IdentifierDeclType	int		9007075	0					
ANR	9007101	Identifier	buff_size		9007075	1					
ANR	9007102	ExpressionStatement	"code1 = array_get ( imemory , space , 1 , & ICCdict1 )"	5556:4:177277:177324	9007075	3	True				
ANR	9007103	AssignmentExpression	"code1 = array_get ( imemory , space , 1 , & ICCdict1 )"		9007075	0		=			
ANR	9007104	Identifier	code1		9007075	0					
ANR	9007105	CallExpression	"array_get ( imemory , space , 1 , & ICCdict1 )"		9007075	1					
ANR	9007106	Callee	array_get		9007075	0					
ANR	9007107	Identifier	array_get		9007075	0					
ANR	9007108	ArgumentList	imemory		9007075	1					
ANR	9007109	Argument	imemory		9007075	0					
ANR	9007110	Identifier	imemory		9007075	0					
ANR	9007111	Argument	space		9007075	1					
ANR	9007112	Identifier	space		9007075	0					
ANR	9007113	Argument	1		9007075	2					
ANR	9007114	PrimaryExpression	1		9007075	0					
ANR	9007115	Argument	& ICCdict1		9007075	3					
ANR	9007116	UnaryOperationExpression	& ICCdict1		9007075	0					
ANR	9007117	UnaryOperator	&		9007075	0					
ANR	9007118	Identifier	ICCdict1		9007075	1					
ANR	9007119	IfStatement	if ( code1 < 0 )		9007075	4					
ANR	9007120	Condition	code1 < 0	5557:8:177334:177342	9007075	0	True				
ANR	9007121	RelationalExpression	code1 < 0		9007075	0		<			
ANR	9007122	Identifier	code1		9007075	0					
ANR	9007123	PrimaryExpression	0		9007075	1					
ANR	9007124	ReturnStatement	return 0 ;	5558:8:177353:177361	9007075	1	True				
ANR	9007125	PrimaryExpression	0		9007075	0					
ANR	9007126	ExpressionStatement	"code2 = array_get ( imemory , testspace , 1 , & ICCdict2 )"	5559:4:177367:177418	9007075	5	True				
ANR	9007127	AssignmentExpression	"code2 = array_get ( imemory , testspace , 1 , & ICCdict2 )"		9007075	0		=			
ANR	9007128	Identifier	code2		9007075	0					
ANR	9007129	CallExpression	"array_get ( imemory , testspace , 1 , & ICCdict2 )"		9007075	1					
ANR	9007130	Callee	array_get		9007075	0					
ANR	9007131	Identifier	array_get		9007075	0					
ANR	9007132	ArgumentList	imemory		9007075	1					
ANR	9007133	Argument	imemory		9007075	0					
ANR	9007134	Identifier	imemory		9007075	0					
ANR	9007135	Argument	testspace		9007075	1					
ANR	9007136	Identifier	testspace		9007075	0					
ANR	9007137	Argument	1		9007075	2					
ANR	9007138	PrimaryExpression	1		9007075	0					
ANR	9007139	Argument	& ICCdict2		9007075	3					
ANR	9007140	UnaryOperationExpression	& ICCdict2		9007075	0					
ANR	9007141	UnaryOperator	&		9007075	0					
ANR	9007142	Identifier	ICCdict2		9007075	1					
ANR	9007143	IfStatement	if ( code2 < 0 )		9007075	6					
ANR	9007144	Condition	code2 < 0	5560:8:177428:177436	9007075	0	True				
ANR	9007145	RelationalExpression	code2 < 0		9007075	0		<			
ANR	9007146	Identifier	code2		9007075	0					
ANR	9007147	PrimaryExpression	0		9007075	1					
ANR	9007148	ReturnStatement	return 0 ;	5561:8:177447:177455	9007075	1	True				
ANR	9007149	PrimaryExpression	0		9007075	0					
ANR	9007150	IfStatement	if ( ICCdict1 . value . bytes == ICCdict2 . value . bytes )		9007075	7					
ANR	9007151	Condition	ICCdict1 . value . bytes == ICCdict2 . value . bytes	5564:8:177523:177566	9007075	0	True				
ANR	9007152	EqualityExpression	ICCdict1 . value . bytes == ICCdict2 . value . bytes		9007075	0		==			
ANR	9007153	MemberAccess	ICCdict1 . value . bytes		9007075	0					
ANR	9007154	MemberAccess	ICCdict1 . value		9007075	0					
ANR	9007155	Identifier	ICCdict1		9007075	0					
ANR	9007156	Identifier	value		9007075	1					
ANR	9007157	Identifier	bytes		9007075	1					
ANR	9007158	MemberAccess	ICCdict2 . value . bytes		9007075	1					
ANR	9007159	MemberAccess	ICCdict2 . value		9007075	0					
ANR	9007160	Identifier	ICCdict2		9007075	0					
ANR	9007161	Identifier	value		9007075	1					
ANR	9007162	Identifier	bytes		9007075	1					
ANR	9007163	ReturnStatement	return 1 ;	5565:9:177579:177587	9007075	1	True				
ANR	9007164	PrimaryExpression	1		9007075	0					
ANR	9007165	ExpressionStatement	"code1 = dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"	5568:4:177640:177691	9007075	8	True				
ANR	9007166	AssignmentExpression	"code1 = dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"		9007075	0		=			
ANR	9007167	Identifier	code1		9007075	0					
ANR	9007168	CallExpression	"dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"		9007075	1					
ANR	9007169	Callee	dict_find_string		9007075	0					
ANR	9007170	Identifier	dict_find_string		9007075	0					
ANR	9007171	ArgumentList	& ICCdict1		9007075	1					
ANR	9007172	Argument	& ICCdict1		9007075	0					
ANR	9007173	UnaryOperationExpression	& ICCdict1		9007075	0					
ANR	9007174	UnaryOperator	&		9007075	0					
ANR	9007175	Identifier	ICCdict1		9007075	1					
ANR	9007176	Argument	"""N"""		9007075	1					
ANR	9007177	PrimaryExpression	"""N"""		9007075	0					
ANR	9007178	Argument	& tempref1		9007075	2					
ANR	9007179	UnaryOperationExpression	& tempref1		9007075	0					
ANR	9007180	UnaryOperator	&		9007075	0					
ANR	9007181	Identifier	tempref1		9007075	1					
ANR	9007182	ExpressionStatement	"code2 = dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"	5569:4:177697:177748	9007075	9	True				
ANR	9007183	AssignmentExpression	"code2 = dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"		9007075	0		=			
ANR	9007184	Identifier	code2		9007075	0					
ANR	9007185	CallExpression	"dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"		9007075	1					
ANR	9007186	Callee	dict_find_string		9007075	0					
ANR	9007187	Identifier	dict_find_string		9007075	0					
ANR	9007188	ArgumentList	& ICCdict2		9007075	1					
ANR	9007189	Argument	& ICCdict2		9007075	0					
ANR	9007190	UnaryOperationExpression	& ICCdict2		9007075	0					
ANR	9007191	UnaryOperator	&		9007075	0					
ANR	9007192	Identifier	ICCdict2		9007075	1					
ANR	9007193	Argument	"""N"""		9007075	1					
ANR	9007194	PrimaryExpression	"""N"""		9007075	0					
ANR	9007195	Argument	& tempref2		9007075	2					
ANR	9007196	UnaryOperationExpression	& tempref2		9007075	0					
ANR	9007197	UnaryOperator	&		9007075	0					
ANR	9007198	Identifier	tempref2		9007075	1					
ANR	9007199	IfStatement	if ( code1 != code2 )		9007075	10					
ANR	9007200	Condition	code1 != code2	5570:8:177758:177771	9007075	0	True				
ANR	9007201	EqualityExpression	code1 != code2		9007075	0		!=			
ANR	9007202	Identifier	code1		9007075	0					
ANR	9007203	Identifier	code2		9007075	1					
ANR	9007204	ReturnStatement	return 0 ;	5571:8:177782:177790	9007075	1	True				
ANR	9007205	PrimaryExpression	0		9007075	0					
ANR	9007206	IfStatement	if ( tempref1 -> value . intval != tempref2 -> value . intval )		9007075	11					
ANR	9007207	Condition	tempref1 -> value . intval != tempref2 -> value . intval	5572:8:177800:177847	9007075	0	True				
ANR	9007208	EqualityExpression	tempref1 -> value . intval != tempref2 -> value . intval		9007075	0		!=			
ANR	9007209	MemberAccess	tempref1 -> value . intval		9007075	0					
ANR	9007210	PtrMemberAccess	tempref1 -> value		9007075	0					
ANR	9007211	Identifier	tempref1		9007075	0					
ANR	9007212	Identifier	value		9007075	1					
ANR	9007213	Identifier	intval		9007075	1					
ANR	9007214	MemberAccess	tempref2 -> value . intval		9007075	1					
ANR	9007215	PtrMemberAccess	tempref2 -> value		9007075	0					
ANR	9007216	Identifier	tempref2		9007075	0					
ANR	9007217	Identifier	value		9007075	1					
ANR	9007218	Identifier	intval		9007075	1					
ANR	9007219	ReturnStatement	return 0 ;	5573:8:177858:177866	9007075	1	True				
ANR	9007220	PrimaryExpression	0		9007075	0					
ANR	9007221	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" ) )"		9007075	12					
ANR	9007222	Condition	"! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"	5575:8:177877:177939	9007075	0	True				
ANR	9007223	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"		9007075	0					
ANR	9007224	UnaryOperator	!		9007075	0					
ANR	9007225	CallExpression	"comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"		9007075	1					
ANR	9007226	Callee	comparedictkey		9007075	0					
ANR	9007227	Identifier	comparedictkey		9007075	0					
ANR	9007228	ArgumentList	i_ctx_p		9007075	1					
ANR	9007229	Argument	i_ctx_p		9007075	0					
ANR	9007230	Identifier	i_ctx_p		9007075	0					
ANR	9007231	Argument	& ICCdict1		9007075	1					
ANR	9007232	UnaryOperationExpression	& ICCdict1		9007075	0					
ANR	9007233	UnaryOperator	&		9007075	0					
ANR	9007234	Identifier	ICCdict1		9007075	1					
ANR	9007235	Argument	& ICCdict2		9007075	2					
ANR	9007236	UnaryOperationExpression	& ICCdict2		9007075	0					
ANR	9007237	UnaryOperator	&		9007075	0					
ANR	9007238	Identifier	ICCdict2		9007075	1					
ANR	9007239	Argument	"( char * ) ""Range"""		9007075	3					
ANR	9007240	CastExpression	"( char * ) ""Range"""		9007075	0					
ANR	9007241	CastTarget	char *		9007075	0					
ANR	9007242	PrimaryExpression	"""Range"""		9007075	1					
ANR	9007243	ReturnStatement	return 0 ;	5576:8:177950:177958	9007075	1	True				
ANR	9007244	PrimaryExpression	0		9007075	0					
ANR	9007245	ExpressionStatement	"code1 = dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"	5578:4:177965:178025	9007075	13	True				
ANR	9007246	AssignmentExpression	"code1 = dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"		9007075	0		=			
ANR	9007247	Identifier	code1		9007075	0					
ANR	9007248	CallExpression	"dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"		9007075	1					
ANR	9007249	Callee	dict_find_string		9007075	0					
ANR	9007250	Identifier	dict_find_string		9007075	0					
ANR	9007251	ArgumentList	& ICCdict1		9007075	1					
ANR	9007252	Argument	& ICCdict1		9007075	0					
ANR	9007253	UnaryOperationExpression	& ICCdict1		9007075	0					
ANR	9007254	UnaryOperator	&		9007075	0					
ANR	9007255	Identifier	ICCdict1		9007075	1					
ANR	9007256	Argument	"""DataSource"""		9007075	1					
ANR	9007257	PrimaryExpression	"""DataSource"""		9007075	0					
ANR	9007258	Argument	& tempref1		9007075	2					
ANR	9007259	UnaryOperationExpression	& tempref1		9007075	0					
ANR	9007260	UnaryOperator	&		9007075	0					
ANR	9007261	Identifier	tempref1		9007075	1					
ANR	9007262	IfStatement	if ( code1 <= 0 )		9007075	14					
ANR	9007263	Condition	code1 <= 0	5579:8:178035:178044	9007075	0	True				
ANR	9007264	RelationalExpression	code1 <= 0		9007075	0		<=			
ANR	9007265	Identifier	code1		9007075	0					
ANR	9007266	PrimaryExpression	0		9007075	1					
ANR	9007267	ReturnStatement	return 0 ;	5580:8:178055:178063	9007075	1	True				
ANR	9007268	PrimaryExpression	0		9007075	0					
ANR	9007269	ExpressionStatement	"code2 = dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"	5581:4:178069:178129	9007075	15	True				
ANR	9007270	AssignmentExpression	"code2 = dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"		9007075	0		=			
ANR	9007271	Identifier	code2		9007075	0					
ANR	9007272	CallExpression	"dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"		9007075	1					
ANR	9007273	Callee	dict_find_string		9007075	0					
ANR	9007274	Identifier	dict_find_string		9007075	0					
ANR	9007275	ArgumentList	& ICCdict2		9007075	1					
ANR	9007276	Argument	& ICCdict2		9007075	0					
ANR	9007277	UnaryOperationExpression	& ICCdict2		9007075	0					
ANR	9007278	UnaryOperator	&		9007075	0					
ANR	9007279	Identifier	ICCdict2		9007075	1					
ANR	9007280	Argument	"""DataSource"""		9007075	1					
ANR	9007281	PrimaryExpression	"""DataSource"""		9007075	0					
ANR	9007282	Argument	& tempref2		9007075	2					
ANR	9007283	UnaryOperationExpression	& tempref2		9007075	0					
ANR	9007284	UnaryOperator	&		9007075	0					
ANR	9007285	Identifier	tempref2		9007075	1					
ANR	9007286	IfStatement	if ( code2 <= 0 )		9007075	16					
ANR	9007287	Condition	code2 <= 0	5582:8:178139:178148	9007075	0	True				
ANR	9007288	RelationalExpression	code2 <= 0		9007075	0		<=			
ANR	9007289	Identifier	code2		9007075	0					
ANR	9007290	PrimaryExpression	0		9007075	1					
ANR	9007291	ReturnStatement	return 0 ;	5583:8:178159:178167	9007075	1	True				
ANR	9007292	PrimaryExpression	0		9007075	0					
ANR	9007293	IfStatement	if ( r_size ( tempref1 ) != r_size ( tempref2 ) )		9007075	17					
ANR	9007294	Condition	r_size ( tempref1 ) != r_size ( tempref2 )	5584:8:178177:178212	9007075	0	True				
ANR	9007295	EqualityExpression	r_size ( tempref1 ) != r_size ( tempref2 )		9007075	0		!=			
ANR	9007296	CallExpression	r_size ( tempref1 )		9007075	0					
ANR	9007297	Callee	r_size		9007075	0					
ANR	9007298	Identifier	r_size		9007075	0					
ANR	9007299	ArgumentList	tempref1		9007075	1					
ANR	9007300	Argument	tempref1		9007075	0					
ANR	9007301	Identifier	tempref1		9007075	0					
ANR	9007302	CallExpression	r_size ( tempref2 )		9007075	1					
ANR	9007303	Callee	r_size		9007075	0					
ANR	9007304	Identifier	r_size		9007075	0					
ANR	9007305	ArgumentList	tempref2		9007075	1					
ANR	9007306	Argument	tempref2		9007075	0					
ANR	9007307	Identifier	tempref2		9007075	0					
ANR	9007308	ReturnStatement	return 0 ;	5585:8:178224:178232	9007075	1	True				
ANR	9007309	PrimaryExpression	0		9007075	0					
ANR	9007310	ExpressionStatement	buff_size = r_size ( tempref1 )	5587:4:178239:178267	9007075	18	True				
ANR	9007311	AssignmentExpression	buff_size = r_size ( tempref1 )		9007075	0		=			
ANR	9007312	Identifier	buff_size		9007075	0					
ANR	9007313	CallExpression	r_size ( tempref1 )		9007075	1					
ANR	9007314	Callee	r_size		9007075	0					
ANR	9007315	Identifier	r_size		9007075	0					
ANR	9007316	ArgumentList	tempref1		9007075	1					
ANR	9007317	Argument	tempref1		9007075	0					
ANR	9007318	Identifier	tempref1		9007075	0					
ANR	9007319	IfStatement	"if ( memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0 )"		9007075	19					
ANR	9007320	Condition	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0"	5588:8:178277:178356	9007075	0	True				
ANR	9007321	EqualityExpression	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0"		9007075	0		==			
ANR	9007322	CallExpression	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size )"		9007075	0					
ANR	9007323	Callee	memcmp		9007075	0					
ANR	9007324	Identifier	memcmp		9007075	0					
ANR	9007325	ArgumentList	tempref1 -> value . const_bytes		9007075	1					
ANR	9007326	Argument	tempref1 -> value . const_bytes		9007075	0					
ANR	9007327	MemberAccess	tempref1 -> value . const_bytes		9007075	0					
ANR	9007328	PtrMemberAccess	tempref1 -> value		9007075	0					
ANR	9007329	Identifier	tempref1		9007075	0					
ANR	9007330	Identifier	value		9007075	1					
ANR	9007331	Identifier	const_bytes		9007075	1					
ANR	9007332	Argument	tempref2 -> value . const_bytes		9007075	1					
ANR	9007333	MemberAccess	tempref2 -> value . const_bytes		9007075	0					
ANR	9007334	PtrMemberAccess	tempref2 -> value		9007075	0					
ANR	9007335	Identifier	tempref2		9007075	0					
ANR	9007336	Identifier	value		9007075	1					
ANR	9007337	Identifier	const_bytes		9007075	1					
ANR	9007338	Argument	buff_size		9007075	2					
ANR	9007339	Identifier	buff_size		9007075	0					
ANR	9007340	PrimaryExpression	0		9007075	1					
ANR	9007341	ReturnStatement	return 1 ;	5589:8:178367:178375	9007075	1	True				
ANR	9007342	PrimaryExpression	1		9007075	0					
ANR	9007343	ElseStatement	else		9007075	0					
ANR	9007344	ReturnStatement	return 0 ;	5591:8:178394:178402	9007075	0	True				
ANR	9007345	PrimaryExpression	0		9007075	0					
ANR	9007346	ReturnType	static int		9007075	1					
ANR	9007347	Identifier	iccompareproc		9007075	2					
ANR	9007348	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		9007075	3					
ANR	9007349	Parameter	i_ctx_t * i_ctx_p	5550:25:177133:177148	9007075	0	True				
ANR	9007350	ParameterType	i_ctx_t *		9007075	0					
ANR	9007351	Identifier	i_ctx_p		9007075	1					
ANR	9007352	Parameter	ref * space	5550:43:177151:177160	9007075	1	True				
ANR	9007353	ParameterType	ref *		9007075	0					
ANR	9007354	Identifier	space		9007075	1					
ANR	9007355	Parameter	ref * testspace	5550:55:177163:177176	9007075	2	True				
ANR	9007356	ParameterType	ref *		9007075	0					
ANR	9007357	Identifier	testspace		9007075	1					
ANR	9007358	CFGEntryNode	ENTRY		9007075		True				
ANR	9007359	CFGExitNode	EXIT		9007075		True				
ANR	9007360	Symbol	code2		9007075						
ANR	9007361	Symbol	code1		9007075						
ANR	9007362	Symbol	ICCdict1 . value . bytes		9007075						
ANR	9007363	Symbol	comparedictkey		9007075						
ANR	9007364	Symbol	ICCdict1		9007075						
ANR	9007365	Symbol	ICCdict2		9007075						
ANR	9007366	Symbol	space		9007075						
ANR	9007367	Symbol	tempref1 -> value . const_bytes		9007075						
ANR	9007368	Symbol	* tempref1		9007075						
ANR	9007369	Symbol	* tempref2		9007075						
ANR	9007370	Symbol	tempref1 -> value		9007075						
ANR	9007371	Symbol	memcmp		9007075						
ANR	9007372	Symbol	r_size		9007075						
ANR	9007373	Symbol	imemory		9007075						
ANR	9007374	Symbol	& ICCdict2		9007075						
ANR	9007375	Symbol	tempref1 -> value . intval		9007075						
ANR	9007376	Symbol	& ICCdict1		9007075						
ANR	9007377	Symbol	tempref2 -> value . intval		9007075						
ANR	9007378	Symbol	tempref2 -> value		9007075						
ANR	9007379	Symbol	dict_find_string		9007075						
ANR	9007380	Symbol	array_get		9007075						
ANR	9007381	Symbol	ICCdict1 . value		9007075						
ANR	9007382	Symbol	ICCdict2 . value		9007075						
ANR	9007383	Symbol	tempref2		9007075						
ANR	9007384	Symbol	tempref1		9007075						
ANR	9007385	Symbol	tempref2 -> value . const_bytes		9007075						
ANR	9007386	Symbol	ICCdict2 . value . bytes		9007075						
ANR	9007387	Symbol	testspace		9007075						
ANR	9007388	Symbol	i_ctx_p		9007075						
ANR	9007389	Symbol	buff_size		9007075						
ANR	9007390	Symbol	& tempref1		9007075						
ANR	9007391	Symbol	& tempref2		9007075						
ANR	9007392	Function	validateiccspace	5594:0:178407:182509							
ANR	9007393	FunctionDef	"validateiccspace (i_ctx_t * i_ctx_p , ref * * r)"		9007392	0					
ANR	9007394	CompoundStatement		5595:0:178463:182509	9007392	0					
ANR	9007395	IdentifierDeclStatement	"int code = 0 , i , components = 0 ;"	5596:4:178469:178498	9007392	0	True				
ANR	9007396	IdentifierDecl	code = 0		9007392	0					
ANR	9007397	IdentifierDeclType	int		9007392	0					
ANR	9007398	Identifier	code		9007392	1					
ANR	9007399	AssignmentExpression	code = 0		9007392	2		=			
ANR	9007400	Identifier	code		9007392	0					
ANR	9007401	PrimaryExpression	0		9007392	1					
ANR	9007402	IdentifierDecl	i		9007392	1					
ANR	9007403	IdentifierDeclType	int		9007392	0					
ANR	9007404	Identifier	i		9007392	1					
ANR	9007405	IdentifierDecl	components = 0		9007392	2					
ANR	9007406	IdentifierDeclType	int		9007392	0					
ANR	9007407	Identifier	components		9007392	1					
ANR	9007408	AssignmentExpression	components = 0		9007392	2		=			
ANR	9007409	Identifier	components		9007392	0					
ANR	9007410	PrimaryExpression	0		9007392	1					
ANR	9007411	IdentifierDeclStatement	"ref * space , * tempref , valref , ICCdict , sref ;"	5597:4:178504:178547	9007392	1	True				
ANR	9007412	IdentifierDecl	* space		9007392	0					
ANR	9007413	IdentifierDeclType	ref *		9007392	0					
ANR	9007414	Identifier	space		9007392	1					
ANR	9007415	IdentifierDecl	* tempref		9007392	1					
ANR	9007416	IdentifierDeclType	ref *		9007392	0					
ANR	9007417	Identifier	tempref		9007392	1					
ANR	9007418	IdentifierDecl	valref		9007392	2					
ANR	9007419	IdentifierDeclType	ref		9007392	0					
ANR	9007420	Identifier	valref		9007392	1					
ANR	9007421	IdentifierDecl	ICCdict		9007392	3					
ANR	9007422	IdentifierDeclType	ref		9007392	0					
ANR	9007423	Identifier	ICCdict		9007392	1					
ANR	9007424	IdentifierDecl	sref		9007392	4					
ANR	9007425	IdentifierDeclType	ref		9007392	0					
ANR	9007426	Identifier	sref		9007392	1					
ANR	9007427	ExpressionStatement	space = * r	5599:4:178554:178564	9007392	2	True				
ANR	9007428	AssignmentExpression	space = * r		9007392	0		=			
ANR	9007429	Identifier	space		9007392	0					
ANR	9007430	UnaryOperationExpression	* r		9007392	1					
ANR	9007431	UnaryOperator	*		9007392	0					
ANR	9007432	Identifier	r		9007392	1					
ANR	9007433	IfStatement	if ( ! r_is_array ( space ) )		9007392	3					
ANR	9007434	Condition	! r_is_array ( space )	5600:8:178574:178591	9007392	0	True				
ANR	9007435	UnaryOperationExpression	! r_is_array ( space )		9007392	0					
ANR	9007436	UnaryOperator	!		9007392	0					
ANR	9007437	CallExpression	r_is_array ( space )		9007392	1					
ANR	9007438	Callee	r_is_array		9007392	0					
ANR	9007439	Identifier	r_is_array		9007392	0					
ANR	9007440	ArgumentList	space		9007392	1					
ANR	9007441	Argument	space		9007392	0					
ANR	9007442	Identifier	space		9007392	0					
ANR	9007443	ExpressionStatement	return_error ( gs_error_typecheck )	5601:8:178602:178634	9007392	1	True				
ANR	9007444	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007445	Callee	return_error		9007392	0					
ANR	9007446	Identifier	return_error		9007392	0					
ANR	9007447	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007448	Argument	gs_error_typecheck		9007392	0					
ANR	9007449	Identifier	gs_error_typecheck		9007392	0					
ANR	9007450	IfStatement	if ( r_size ( space ) != 2 )		9007392	4					
ANR	9007451	Condition	r_size ( space ) != 2	5603:8:178705:178722	9007392	0	True				
ANR	9007452	EqualityExpression	r_size ( space ) != 2		9007392	0		!=			
ANR	9007453	CallExpression	r_size ( space )		9007392	0					
ANR	9007454	Callee	r_size		9007392	0					
ANR	9007455	Identifier	r_size		9007392	0					
ANR	9007456	ArgumentList	space		9007392	1					
ANR	9007457	Argument	space		9007392	0					
ANR	9007458	Identifier	space		9007392	0					
ANR	9007459	PrimaryExpression	2		9007392	1					
ANR	9007460	ExpressionStatement	return_error ( gs_error_rangecheck )	5604:8:178733:178766	9007392	1	True				
ANR	9007461	CallExpression	return_error ( gs_error_rangecheck )		9007392	0					
ANR	9007462	Callee	return_error		9007392	0					
ANR	9007463	Identifier	return_error		9007392	0					
ANR	9007464	ArgumentList	gs_error_rangecheck		9007392	1					
ANR	9007465	Argument	gs_error_rangecheck		9007392	0					
ANR	9007466	Identifier	gs_error_rangecheck		9007392	0					
ANR	9007467	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5606:4:178773:178818	9007392	5	True				
ANR	9007468	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		9007392	0		=			
ANR	9007469	Identifier	code		9007392	0					
ANR	9007470	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		9007392	1					
ANR	9007471	Callee	array_get		9007392	0					
ANR	9007472	Identifier	array_get		9007392	0					
ANR	9007473	ArgumentList	imemory		9007392	1					
ANR	9007474	Argument	imemory		9007392	0					
ANR	9007475	Identifier	imemory		9007392	0					
ANR	9007476	Argument	space		9007392	1					
ANR	9007477	Identifier	space		9007392	0					
ANR	9007478	Argument	1		9007392	2					
ANR	9007479	PrimaryExpression	1		9007392	0					
ANR	9007480	Argument	& ICCdict		9007392	3					
ANR	9007481	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9007482	UnaryOperator	&		9007392	0					
ANR	9007483	Identifier	ICCdict		9007392	1					
ANR	9007484	IfStatement	if ( code < 0 )		9007392	6					
ANR	9007485	Condition	code < 0	5607:8:178828:178835	9007392	0	True				
ANR	9007486	RelationalExpression	code < 0		9007392	0		<			
ANR	9007487	Identifier	code		9007392	0					
ANR	9007488	PrimaryExpression	0		9007392	1					
ANR	9007489	ReturnStatement	return code ;	5608:8:178846:178857	9007392	1	True				
ANR	9007490	Identifier	code		9007392	0					
ANR	9007491	ExpressionStatement	"check_type ( ICCdict , t_dictionary )"	5610:4:178864:178897	9007392	7	True				
ANR	9007492	CallExpression	"check_type ( ICCdict , t_dictionary )"		9007392	0					
ANR	9007493	Callee	check_type		9007392	0					
ANR	9007494	Identifier	check_type		9007392	0					
ANR	9007495	ArgumentList	ICCdict		9007392	1					
ANR	9007496	Argument	ICCdict		9007392	0					
ANR	9007497	Identifier	ICCdict		9007392	0					
ANR	9007498	Argument	t_dictionary		9007392	1					
ANR	9007499	Identifier	t_dictionary		9007392	0					
ANR	9007500	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5612:4:178904:178952	9007392	8	True				
ANR	9007501	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9007392	0		=			
ANR	9007502	Identifier	code		9007392	0					
ANR	9007503	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9007392	1					
ANR	9007504	Callee	dict_find_string		9007392	0					
ANR	9007505	Identifier	dict_find_string		9007392	0					
ANR	9007506	ArgumentList	& ICCdict		9007392	1					
ANR	9007507	Argument	& ICCdict		9007392	0					
ANR	9007508	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9007509	UnaryOperator	&		9007392	0					
ANR	9007510	Identifier	ICCdict		9007392	1					
ANR	9007511	Argument	"""N"""		9007392	1					
ANR	9007512	PrimaryExpression	"""N"""		9007392	0					
ANR	9007513	Argument	& tempref		9007392	2					
ANR	9007514	UnaryOperationExpression	& tempref		9007392	0					
ANR	9007515	UnaryOperator	&		9007392	0					
ANR	9007516	Identifier	tempref		9007392	1					
ANR	9007517	IfStatement	if ( code < 0 )		9007392	9					
ANR	9007518	Condition	code < 0	5613:8:178962:178969	9007392	0	True				
ANR	9007519	RelationalExpression	code < 0		9007392	0		<			
ANR	9007520	Identifier	code		9007392	0					
ANR	9007521	PrimaryExpression	0		9007392	1					
ANR	9007522	ReturnStatement	return code ;	5614:8:178980:178991	9007392	1	True				
ANR	9007523	Identifier	code		9007392	0					
ANR	9007524	IfStatement	if ( code == 0 )		9007392	10					
ANR	9007525	Condition	code == 0	5615:8:179001:179009	9007392	0	True				
ANR	9007526	EqualityExpression	code == 0		9007392	0		==			
ANR	9007527	Identifier	code		9007392	0					
ANR	9007528	PrimaryExpression	0		9007392	1					
ANR	9007529	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5616:8:179020:179060	9007392	1	True				
ANR	9007530	CallExpression	gs_note_error ( gs_error_undefined )		9007392	0					
ANR	9007531	Callee	gs_note_error		9007392	0					
ANR	9007532	Identifier	gs_note_error		9007392	0					
ANR	9007533	ArgumentList	gs_error_undefined		9007392	1					
ANR	9007534	Argument	gs_error_undefined		9007392	0					
ANR	9007535	Identifier	gs_error_undefined		9007392	0					
ANR	9007536	IfStatement	"if ( ! r_has_type ( tempref , t_null ) )"		9007392	11					
ANR	9007537	Condition	"! r_has_type ( tempref , t_null )"	5617:8:179070:179097	9007392	0	True				
ANR	9007538	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9007392	0					
ANR	9007539	UnaryOperator	!		9007392	0					
ANR	9007540	CallExpression	"r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007541	Callee	r_has_type		9007392	0					
ANR	9007542	Identifier	r_has_type		9007392	0					
ANR	9007543	ArgumentList	tempref		9007392	1					
ANR	9007544	Argument	tempref		9007392	0					
ANR	9007545	Identifier	tempref		9007392	0					
ANR	9007546	Argument	t_null		9007392	1					
ANR	9007547	Identifier	t_null		9007392	0					
ANR	9007548	CompoundStatement		23:38:636:636	9007392	1					
ANR	9007549	IfStatement	"if ( ! r_has_type ( tempref , t_integer ) )"		9007392	0					
ANR	9007550	Condition	"! r_has_type ( tempref , t_integer )"	5618:12:179114:179144	9007392	0	True				
ANR	9007551	UnaryOperationExpression	"! r_has_type ( tempref , t_integer )"		9007392	0					
ANR	9007552	UnaryOperator	!		9007392	0					
ANR	9007553	CallExpression	"r_has_type ( tempref , t_integer )"		9007392	1					
ANR	9007554	Callee	r_has_type		9007392	0					
ANR	9007555	Identifier	r_has_type		9007392	0					
ANR	9007556	ArgumentList	tempref		9007392	1					
ANR	9007557	Argument	tempref		9007392	0					
ANR	9007558	Identifier	tempref		9007392	0					
ANR	9007559	Argument	t_integer		9007392	1					
ANR	9007560	Identifier	t_integer		9007392	0					
ANR	9007561	ExpressionStatement	return_error ( gs_error_typecheck )	5619:12:179159:179191	9007392	1	True				
ANR	9007562	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007563	Callee	return_error		9007392	0					
ANR	9007564	Identifier	return_error		9007392	0					
ANR	9007565	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007566	Argument	gs_error_typecheck		9007392	0					
ANR	9007567	Identifier	gs_error_typecheck		9007392	0					
ANR	9007568	ExpressionStatement	components = tempref -> value . intval	5620:8:179201:179235	9007392	1	True				
ANR	9007569	AssignmentExpression	components = tempref -> value . intval		9007392	0		=			
ANR	9007570	Identifier	components		9007392	0					
ANR	9007571	MemberAccess	tempref -> value . intval		9007392	1					
ANR	9007572	PtrMemberAccess	tempref -> value		9007392	0					
ANR	9007573	Identifier	tempref		9007392	0					
ANR	9007574	Identifier	value		9007392	1					
ANR	9007575	Identifier	intval		9007392	1					
ANR	9007576	ElseStatement	else		9007392	0					
ANR	9007577	ExpressionStatement	return_error ( gs_error_typecheck )	5622:8:179256:179288	9007392	0	True				
ANR	9007578	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007579	Callee	return_error		9007392	0					
ANR	9007580	Identifier	return_error		9007392	0					
ANR	9007581	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007582	Argument	gs_error_typecheck		9007392	0					
ANR	9007583	Identifier	gs_error_typecheck		9007392	0					
ANR	9007584	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"	5623:4:179294:179351	9007392	12	True				
ANR	9007585	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		9007392	0		=			
ANR	9007586	Identifier	code		9007392	0					
ANR	9007587	CallExpression	"dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		9007392	1					
ANR	9007588	Callee	dict_find_string		9007392	0					
ANR	9007589	Identifier	dict_find_string		9007392	0					
ANR	9007590	ArgumentList	& ICCdict		9007392	1					
ANR	9007591	Argument	& ICCdict		9007392	0					
ANR	9007592	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9007593	UnaryOperator	&		9007392	0					
ANR	9007594	Identifier	ICCdict		9007392	1					
ANR	9007595	Argument	"""DataSource"""		9007392	1					
ANR	9007596	PrimaryExpression	"""DataSource"""		9007392	0					
ANR	9007597	Argument	& tempref		9007392	2					
ANR	9007598	UnaryOperationExpression	& tempref		9007392	0					
ANR	9007599	UnaryOperator	&		9007392	0					
ANR	9007600	Identifier	tempref		9007392	1					
ANR	9007601	IfStatement	if ( code <= 0 )		9007392	13					
ANR	9007602	Condition	code <= 0	5624:8:179361:179369	9007392	0	True				
ANR	9007603	RelationalExpression	code <= 0		9007392	0		<=			
ANR	9007604	Identifier	code		9007392	0					
ANR	9007605	PrimaryExpression	0		9007392	1					
ANR	9007606	ExpressionStatement	return_error ( gs_error_typecheck )	5625:8:179380:179412	9007392	1	True				
ANR	9007607	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007608	Callee	return_error		9007392	0					
ANR	9007609	Identifier	return_error		9007392	0					
ANR	9007610	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007611	Argument	gs_error_typecheck		9007392	0					
ANR	9007612	Identifier	gs_error_typecheck		9007392	0					
ANR	9007613	IfStatement	"if ( ! r_has_type ( tempref , t_null ) )"		9007392	14					
ANR	9007614	Condition	"! r_has_type ( tempref , t_null )"	5626:8:179422:179449	9007392	0	True				
ANR	9007615	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9007392	0					
ANR	9007616	UnaryOperator	!		9007392	0					
ANR	9007617	CallExpression	"r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007618	Callee	r_has_type		9007392	0					
ANR	9007619	Identifier	r_has_type		9007392	0					
ANR	9007620	ArgumentList	tempref		9007392	1					
ANR	9007621	Argument	tempref		9007392	0					
ANR	9007622	Identifier	tempref		9007392	0					
ANR	9007623	Argument	t_null		9007392	1					
ANR	9007624	Identifier	t_null		9007392	0					
ANR	9007625	CompoundStatement		32:38:988:988	9007392	1					
ANR	9007626	IfStatement	"if ( ! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file ) )"		9007392	0					
ANR	9007627	Condition	"! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file )"	5627:12:179466:179527	9007392	0	True				
ANR	9007628	AndExpression	"! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file )"		9007392	0		&&			
ANR	9007629	UnaryOperationExpression	"! r_has_type ( tempref , t_string )"		9007392	0					
ANR	9007630	UnaryOperator	!		9007392	0					
ANR	9007631	CallExpression	"r_has_type ( tempref , t_string )"		9007392	1					
ANR	9007632	Callee	r_has_type		9007392	0					
ANR	9007633	Identifier	r_has_type		9007392	0					
ANR	9007634	ArgumentList	tempref		9007392	1					
ANR	9007635	Argument	tempref		9007392	0					
ANR	9007636	Identifier	tempref		9007392	0					
ANR	9007637	Argument	t_string		9007392	1					
ANR	9007638	Identifier	t_string		9007392	0					
ANR	9007639	UnaryOperationExpression	"! r_has_type ( tempref , t_file )"		9007392	1					
ANR	9007640	UnaryOperator	!		9007392	0					
ANR	9007641	CallExpression	"r_has_type ( tempref , t_file )"		9007392	1					
ANR	9007642	Callee	r_has_type		9007392	0					
ANR	9007643	Identifier	r_has_type		9007392	0					
ANR	9007644	ArgumentList	tempref		9007392	1					
ANR	9007645	Argument	tempref		9007392	0					
ANR	9007646	Identifier	tempref		9007392	0					
ANR	9007647	Argument	t_file		9007392	1					
ANR	9007648	Identifier	t_file		9007392	0					
ANR	9007649	ExpressionStatement	return_error ( gs_error_typecheck )	5628:12:179542:179574	9007392	1	True				
ANR	9007650	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007651	Callee	return_error		9007392	0					
ANR	9007652	Identifier	return_error		9007392	0					
ANR	9007653	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007654	Argument	gs_error_typecheck		9007392	0					
ANR	9007655	Identifier	gs_error_typecheck		9007392	0					
ANR	9007656	ElseStatement	else		9007392	0					
ANR	9007657	ExpressionStatement	return_error ( gs_error_typecheck )	5630:8:179595:179627	9007392	0	True				
ANR	9007658	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007659	Callee	return_error		9007392	0					
ANR	9007660	Identifier	return_error		9007392	0					
ANR	9007661	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007662	Argument	gs_error_typecheck		9007392	0					
ANR	9007663	Identifier	gs_error_typecheck		9007392	0					
ANR	9007664	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5633:4:179675:179727	9007392	15	True				
ANR	9007665	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9007392	0		=			
ANR	9007666	Identifier	code		9007392	0					
ANR	9007667	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9007392	1					
ANR	9007668	Callee	dict_find_string		9007392	0					
ANR	9007669	Identifier	dict_find_string		9007392	0					
ANR	9007670	ArgumentList	& ICCdict		9007392	1					
ANR	9007671	Argument	& ICCdict		9007392	0					
ANR	9007672	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9007673	UnaryOperator	&		9007392	0					
ANR	9007674	Identifier	ICCdict		9007392	1					
ANR	9007675	Argument	"""Range"""		9007392	1					
ANR	9007676	PrimaryExpression	"""Range"""		9007392	0					
ANR	9007677	Argument	& tempref		9007392	2					
ANR	9007678	UnaryOperationExpression	& tempref		9007392	0					
ANR	9007679	UnaryOperator	&		9007392	0					
ANR	9007680	Identifier	tempref		9007392	1					
ANR	9007681	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9007392	16					
ANR	9007682	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5634:8:179737:179776	9007392	0	True				
ANR	9007683	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9007392	0		&&			
ANR	9007684	RelationalExpression	code > 0		9007392	0		>			
ANR	9007685	Identifier	code		9007392	0					
ANR	9007686	PrimaryExpression	0		9007392	1					
ANR	9007687	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007688	UnaryOperator	!		9007392	0					
ANR	9007689	CallExpression	"r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007690	Callee	r_has_type		9007392	0					
ANR	9007691	Identifier	r_has_type		9007392	0					
ANR	9007692	ArgumentList	tempref		9007392	1					
ANR	9007693	Argument	tempref		9007392	0					
ANR	9007694	Identifier	tempref		9007392	0					
ANR	9007695	Argument	t_null		9007392	1					
ANR	9007696	Identifier	t_null		9007392	0					
ANR	9007697	CompoundStatement		40:50:1315:1315	9007392	1					
ANR	9007698	IfStatement	if ( ! r_is_array ( tempref ) )		9007392	0					
ANR	9007699	Condition	! r_is_array ( tempref )	5635:12:179793:179812	9007392	0	True				
ANR	9007700	UnaryOperationExpression	! r_is_array ( tempref )		9007392	0					
ANR	9007701	UnaryOperator	!		9007392	0					
ANR	9007702	CallExpression	r_is_array ( tempref )		9007392	1					
ANR	9007703	Callee	r_is_array		9007392	0					
ANR	9007704	Identifier	r_is_array		9007392	0					
ANR	9007705	ArgumentList	tempref		9007392	1					
ANR	9007706	Argument	tempref		9007392	0					
ANR	9007707	Identifier	tempref		9007392	0					
ANR	9007708	ExpressionStatement	return_error ( gs_error_typecheck )	5636:12:179827:179859	9007392	1	True				
ANR	9007709	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007710	Callee	return_error		9007392	0					
ANR	9007711	Identifier	return_error		9007392	0					
ANR	9007712	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007713	Argument	gs_error_typecheck		9007392	0					
ANR	9007714	Identifier	gs_error_typecheck		9007392	0					
ANR	9007715	IfStatement	if ( r_size ( tempref ) < ( components * 2 ) )		9007392	1					
ANR	9007716	Condition	r_size ( tempref ) < ( components * 2 )	5637:12:179873:179906	9007392	0	True				
ANR	9007717	RelationalExpression	r_size ( tempref ) < ( components * 2 )		9007392	0		<			
ANR	9007718	CallExpression	r_size ( tempref )		9007392	0					
ANR	9007719	Callee	r_size		9007392	0					
ANR	9007720	Identifier	r_size		9007392	0					
ANR	9007721	ArgumentList	tempref		9007392	1					
ANR	9007722	Argument	tempref		9007392	0					
ANR	9007723	Identifier	tempref		9007392	0					
ANR	9007724	MultiplicativeExpression	components * 2		9007392	1		*			
ANR	9007725	Identifier	components		9007392	0					
ANR	9007726	PrimaryExpression	2		9007392	1					
ANR	9007727	ExpressionStatement	return_error ( gs_error_rangecheck )	5638:12:179921:179954	9007392	1	True				
ANR	9007728	CallExpression	return_error ( gs_error_rangecheck )		9007392	0					
ANR	9007729	Callee	return_error		9007392	0					
ANR	9007730	Identifier	return_error		9007392	0					
ANR	9007731	ArgumentList	gs_error_rangecheck		9007392	1					
ANR	9007732	Argument	gs_error_rangecheck		9007392	0					
ANR	9007733	Identifier	gs_error_rangecheck		9007392	0					
ANR	9007734	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		9007392	2					
ANR	9007735	ForInit	i = 0 ;	5639:13:179969:179972	9007392	0	True				
ANR	9007736	AssignmentExpression	i = 0		9007392	0		=			
ANR	9007737	Identifier	i		9007392	0					
ANR	9007738	PrimaryExpression	0		9007392	1					
ANR	9007739	Condition	i < components * 2	5639:17:179973:179988	9007392	1	True				
ANR	9007740	RelationalExpression	i < components * 2		9007392	0		<			
ANR	9007741	Identifier	i		9007392	0					
ANR	9007742	MultiplicativeExpression	components * 2		9007392	1		*			
ANR	9007743	Identifier	components		9007392	0					
ANR	9007744	PrimaryExpression	2		9007392	1					
ANR	9007745	PostIncDecOperationExpression	i ++	5639:34:179990:179992	9007392	2	True				
ANR	9007746	Identifier	i		9007392	0					
ANR	9007747	IncDec	++		9007392	1					
ANR	9007748	CompoundStatement		45:39:1531:1531	9007392	3					
ANR	9007749	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5640:12:180009:180055	9007392	0	True				
ANR	9007750	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9007392	0		=			
ANR	9007751	Identifier	code		9007392	0					
ANR	9007752	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9007392	1					
ANR	9007753	Callee	array_get		9007392	0					
ANR	9007754	Identifier	array_get		9007392	0					
ANR	9007755	ArgumentList	imemory		9007392	1					
ANR	9007756	Argument	imemory		9007392	0					
ANR	9007757	Identifier	imemory		9007392	0					
ANR	9007758	Argument	tempref		9007392	1					
ANR	9007759	Identifier	tempref		9007392	0					
ANR	9007760	Argument	i		9007392	2					
ANR	9007761	Identifier	i		9007392	0					
ANR	9007762	Argument	& valref		9007392	3					
ANR	9007763	UnaryOperationExpression	& valref		9007392	0					
ANR	9007764	UnaryOperator	&		9007392	0					
ANR	9007765	Identifier	valref		9007392	1					
ANR	9007766	IfStatement	if ( code < 0 )		9007392	1					
ANR	9007767	Condition	code < 0	5641:16:180073:180080	9007392	0	True				
ANR	9007768	RelationalExpression	code < 0		9007392	0		<			
ANR	9007769	Identifier	code		9007392	0					
ANR	9007770	PrimaryExpression	0		9007392	1					
ANR	9007771	ReturnStatement	return code ;	5642:16:180099:180110	9007392	1	True				
ANR	9007772	Identifier	code		9007392	0					
ANR	9007773	IfStatement	"if ( ! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real ) )"		9007392	2					
ANR	9007774	Condition	"! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real )"	5643:16:180128:180190	9007392	0	True				
ANR	9007775	AndExpression	"! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real )"		9007392	0		&&			
ANR	9007776	UnaryOperationExpression	"! r_has_type ( & valref , t_integer )"		9007392	0					
ANR	9007777	UnaryOperator	!		9007392	0					
ANR	9007778	CallExpression	"r_has_type ( & valref , t_integer )"		9007392	1					
ANR	9007779	Callee	r_has_type		9007392	0					
ANR	9007780	Identifier	r_has_type		9007392	0					
ANR	9007781	ArgumentList	& valref		9007392	1					
ANR	9007782	Argument	& valref		9007392	0					
ANR	9007783	UnaryOperationExpression	& valref		9007392	0					
ANR	9007784	UnaryOperator	&		9007392	0					
ANR	9007785	Identifier	valref		9007392	1					
ANR	9007786	Argument	t_integer		9007392	1					
ANR	9007787	Identifier	t_integer		9007392	0					
ANR	9007788	UnaryOperationExpression	"! r_has_type ( & valref , t_real )"		9007392	1					
ANR	9007789	UnaryOperator	!		9007392	0					
ANR	9007790	CallExpression	"r_has_type ( & valref , t_real )"		9007392	1					
ANR	9007791	Callee	r_has_type		9007392	0					
ANR	9007792	Identifier	r_has_type		9007392	0					
ANR	9007793	ArgumentList	& valref		9007392	1					
ANR	9007794	Argument	& valref		9007392	0					
ANR	9007795	UnaryOperationExpression	& valref		9007392	0					
ANR	9007796	UnaryOperator	&		9007392	0					
ANR	9007797	Identifier	valref		9007392	1					
ANR	9007798	Argument	t_real		9007392	1					
ANR	9007799	Identifier	t_real		9007392	0					
ANR	9007800	ExpressionStatement	return_error ( gs_error_typecheck )	5644:16:180209:180241	9007392	1	True				
ANR	9007801	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007802	Callee	return_error		9007392	0					
ANR	9007803	Identifier	return_error		9007392	0					
ANR	9007804	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007805	Argument	gs_error_typecheck		9007392	0					
ANR	9007806	Identifier	gs_error_typecheck		9007392	0					
ANR	9007807	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"	5647:4:180263:180319	9007392	17	True				
ANR	9007808	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		9007392	0		=			
ANR	9007809	Identifier	code		9007392	0					
ANR	9007810	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		9007392	1					
ANR	9007811	Callee	dict_find_string		9007392	0					
ANR	9007812	Identifier	dict_find_string		9007392	0					
ANR	9007813	ArgumentList	& ICCdict		9007392	1					
ANR	9007814	Argument	& ICCdict		9007392	0					
ANR	9007815	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9007816	UnaryOperator	&		9007392	0					
ANR	9007817	Identifier	ICCdict		9007392	1					
ANR	9007818	Argument	"""Alternate"""		9007392	1					
ANR	9007819	PrimaryExpression	"""Alternate"""		9007392	0					
ANR	9007820	Argument	& tempref		9007392	2					
ANR	9007821	UnaryOperationExpression	& tempref		9007392	0					
ANR	9007822	UnaryOperator	&		9007392	0					
ANR	9007823	Identifier	tempref		9007392	1					
ANR	9007824	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9007392	18					
ANR	9007825	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5648:8:180329:180368	9007392	0	True				
ANR	9007826	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9007392	0		&&			
ANR	9007827	RelationalExpression	code > 0		9007392	0		>			
ANR	9007828	Identifier	code		9007392	0					
ANR	9007829	PrimaryExpression	0		9007392	1					
ANR	9007830	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007831	UnaryOperator	!		9007392	0					
ANR	9007832	CallExpression	"r_has_type ( tempref , t_null )"		9007392	1					
ANR	9007833	Callee	r_has_type		9007392	0					
ANR	9007834	Identifier	r_has_type		9007392	0					
ANR	9007835	ArgumentList	tempref		9007392	1					
ANR	9007836	Argument	tempref		9007392	0					
ANR	9007837	Identifier	tempref		9007392	0					
ANR	9007838	Argument	t_null		9007392	1					
ANR	9007839	Identifier	t_null		9007392	0					
ANR	9007840	CompoundStatement		54:50:1907:1907	9007392	1					
ANR	9007841	ExpressionStatement	"ref_assign ( * r , tempref )"	5649:8:180381:180404	9007392	0	True				
ANR	9007842	CallExpression	"ref_assign ( * r , tempref )"		9007392	0					
ANR	9007843	Callee	ref_assign		9007392	0					
ANR	9007844	Identifier	ref_assign		9007392	0					
ANR	9007845	ArgumentList	* r		9007392	1					
ANR	9007846	Argument	* r		9007392	0					
ANR	9007847	UnaryOperationExpression	* r		9007392	0					
ANR	9007848	UnaryOperator	*		9007392	0					
ANR	9007849	Identifier	r		9007392	1					
ANR	9007850	Argument	tempref		9007392	1					
ANR	9007851	Identifier	tempref		9007392	0					
ANR	9007852	IfStatement	"if ( r_has_type ( tempref , t_name ) )"		9007392	1					
ANR	9007853	Condition	"r_has_type ( tempref , t_name )"	5650:12:180418:180444	9007392	0	True				
ANR	9007854	CallExpression	"r_has_type ( tempref , t_name )"		9007392	0					
ANR	9007855	Callee	r_has_type		9007392	0					
ANR	9007856	Identifier	r_has_type		9007392	0					
ANR	9007857	ArgumentList	tempref		9007392	1					
ANR	9007858	Argument	tempref		9007392	0					
ANR	9007859	Identifier	tempref		9007392	0					
ANR	9007860	Argument	t_name		9007392	1					
ANR	9007861	Identifier	t_name		9007392	0					
ANR	9007862	CompoundStatement		56:41:1983:1983	9007392	1					
ANR	9007863	ExpressionStatement	"name_string_ref ( imemory , tempref , & sref )"	5651:12:180461:180501	9007392	0	True				
ANR	9007864	CallExpression	"name_string_ref ( imemory , tempref , & sref )"		9007392	0					
ANR	9007865	Callee	name_string_ref		9007392	0					
ANR	9007866	Identifier	name_string_ref		9007392	0					
ANR	9007867	ArgumentList	imemory		9007392	1					
ANR	9007868	Argument	imemory		9007392	0					
ANR	9007869	Identifier	imemory		9007392	0					
ANR	9007870	Argument	tempref		9007392	1					
ANR	9007871	Identifier	tempref		9007392	0					
ANR	9007872	Argument	& sref		9007392	2					
ANR	9007873	UnaryOperationExpression	& sref		9007392	0					
ANR	9007874	UnaryOperator	&		9007392	0					
ANR	9007875	Identifier	sref		9007392	1					
ANR	9007876	IfStatement	"if ( sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0 )"		9007392	1					
ANR	9007877	Condition	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"	5652:16:180519:180596	9007392	0	True				
ANR	9007878	AndExpression	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		9007392	0		&&			
ANR	9007879	MemberAccess	sref . value . bytes		9007392	0					
ANR	9007880	MemberAccess	sref . value		9007392	0					
ANR	9007881	Identifier	sref		9007392	0					
ANR	9007882	Identifier	value		9007392	1					
ANR	9007883	Identifier	bytes		9007392	1					
ANR	9007884	EqualityExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		9007392	1		==			
ANR	9007885	CallExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 )"		9007392	0					
ANR	9007886	Callee	strncmp		9007392	0					
ANR	9007887	Identifier	strncmp		9007392	0					
ANR	9007888	ArgumentList	( const char * ) sref . value . bytes		9007392	1					
ANR	9007889	Argument	( const char * ) sref . value . bytes		9007392	0					
ANR	9007890	CastExpression	( const char * ) sref . value . bytes		9007392	0					
ANR	9007891	CastTarget	const char *		9007392	0					
ANR	9007892	MemberAccess	sref . value . bytes		9007392	1					
ANR	9007893	MemberAccess	sref . value		9007392	0					
ANR	9007894	Identifier	sref		9007392	0					
ANR	9007895	Identifier	value		9007392	1					
ANR	9007896	Identifier	bytes		9007392	1					
ANR	9007897	Argument	"""Pattern"""		9007392	1					
ANR	9007898	PrimaryExpression	"""Pattern"""		9007392	0					
ANR	9007899	Argument	7		9007392	2					
ANR	9007900	PrimaryExpression	7		9007392	0					
ANR	9007901	PrimaryExpression	0		9007392	1					
ANR	9007902	ExpressionStatement	return_error ( gs_error_typecheck )	5653:16:180615:180647	9007392	1	True				
ANR	9007903	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007904	Callee	return_error		9007392	0					
ANR	9007905	Identifier	return_error		9007392	0					
ANR	9007906	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007907	Argument	gs_error_typecheck		9007392	0					
ANR	9007908	Identifier	gs_error_typecheck		9007392	0					
ANR	9007909	ElseStatement	else		9007392	0					
ANR	9007910	CompoundStatement		60:15:2200:2200	9007392	0					
ANR	9007911	IfStatement	if ( r_is_array ( tempref ) )		9007392	0					
ANR	9007912	Condition	r_is_array ( tempref )	5655:16:180682:180700	9007392	0	True				
ANR	9007913	CallExpression	r_is_array ( tempref )		9007392	0					
ANR	9007914	Callee	r_is_array		9007392	0					
ANR	9007915	Identifier	r_is_array		9007392	0					
ANR	9007916	ArgumentList	tempref		9007392	1					
ANR	9007917	Argument	tempref		9007392	0					
ANR	9007918	Identifier	tempref		9007392	0					
ANR	9007919	CompoundStatement		61:37:2239:2239	9007392	1					
ANR	9007920	ExpressionStatement	"code = array_get ( imemory , tempref , 0 , & valref )"	5656:16:180721:180767	9007392	0	True				
ANR	9007921	AssignmentExpression	"code = array_get ( imemory , tempref , 0 , & valref )"		9007392	0		=			
ANR	9007922	Identifier	code		9007392	0					
ANR	9007923	CallExpression	"array_get ( imemory , tempref , 0 , & valref )"		9007392	1					
ANR	9007924	Callee	array_get		9007392	0					
ANR	9007925	Identifier	array_get		9007392	0					
ANR	9007926	ArgumentList	imemory		9007392	1					
ANR	9007927	Argument	imemory		9007392	0					
ANR	9007928	Identifier	imemory		9007392	0					
ANR	9007929	Argument	tempref		9007392	1					
ANR	9007930	Identifier	tempref		9007392	0					
ANR	9007931	Argument	0		9007392	2					
ANR	9007932	PrimaryExpression	0		9007392	0					
ANR	9007933	Argument	& valref		9007392	3					
ANR	9007934	UnaryOperationExpression	& valref		9007392	0					
ANR	9007935	UnaryOperator	&		9007392	0					
ANR	9007936	Identifier	valref		9007392	1					
ANR	9007937	IfStatement	if ( code < 0 )		9007392	1					
ANR	9007938	Condition	code < 0	5657:20:180789:180796	9007392	0	True				
ANR	9007939	RelationalExpression	code < 0		9007392	0		<			
ANR	9007940	Identifier	code		9007392	0					
ANR	9007941	PrimaryExpression	0		9007392	1					
ANR	9007942	ReturnStatement	return code ;	5658:20:180819:180830	9007392	1	True				
ANR	9007943	Identifier	code		9007392	0					
ANR	9007944	IfStatement	"if ( ! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string ) )"		9007392	2					
ANR	9007945	Condition	"! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string )"	5659:20:180852:180913	9007392	0	True				
ANR	9007946	AndExpression	"! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string )"		9007392	0		&&			
ANR	9007947	UnaryOperationExpression	"! r_has_type ( & valref , t_name )"		9007392	0					
ANR	9007948	UnaryOperator	!		9007392	0					
ANR	9007949	CallExpression	"r_has_type ( & valref , t_name )"		9007392	1					
ANR	9007950	Callee	r_has_type		9007392	0					
ANR	9007951	Identifier	r_has_type		9007392	0					
ANR	9007952	ArgumentList	& valref		9007392	1					
ANR	9007953	Argument	& valref		9007392	0					
ANR	9007954	UnaryOperationExpression	& valref		9007392	0					
ANR	9007955	UnaryOperator	&		9007392	0					
ANR	9007956	Identifier	valref		9007392	1					
ANR	9007957	Argument	t_name		9007392	1					
ANR	9007958	Identifier	t_name		9007392	0					
ANR	9007959	UnaryOperationExpression	"! r_has_type ( & valref , t_string )"		9007392	1					
ANR	9007960	UnaryOperator	!		9007392	0					
ANR	9007961	CallExpression	"r_has_type ( & valref , t_string )"		9007392	1					
ANR	9007962	Callee	r_has_type		9007392	0					
ANR	9007963	Identifier	r_has_type		9007392	0					
ANR	9007964	ArgumentList	& valref		9007392	1					
ANR	9007965	Argument	& valref		9007392	0					
ANR	9007966	UnaryOperationExpression	& valref		9007392	0					
ANR	9007967	UnaryOperator	&		9007392	0					
ANR	9007968	Identifier	valref		9007392	1					
ANR	9007969	Argument	t_string		9007392	1					
ANR	9007970	Identifier	t_string		9007392	0					
ANR	9007971	ExpressionStatement	return_error ( gs_error_typecheck )	5660:20:180936:180968	9007392	1	True				
ANR	9007972	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9007973	Callee	return_error		9007392	0					
ANR	9007974	Identifier	return_error		9007392	0					
ANR	9007975	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9007976	Argument	gs_error_typecheck		9007392	0					
ANR	9007977	Identifier	gs_error_typecheck		9007392	0					
ANR	9007978	IfStatement	"if ( r_has_type ( & valref , t_name ) )"		9007392	3					
ANR	9007979	Condition	"r_has_type ( & valref , t_name )"	5661:20:180990:181016	9007392	0	True				
ANR	9007980	CallExpression	"r_has_type ( & valref , t_name )"		9007392	0					
ANR	9007981	Callee	r_has_type		9007392	0					
ANR	9007982	Identifier	r_has_type		9007392	0					
ANR	9007983	ArgumentList	& valref		9007392	1					
ANR	9007984	Argument	& valref		9007392	0					
ANR	9007985	UnaryOperationExpression	& valref		9007392	0					
ANR	9007986	UnaryOperator	&		9007392	0					
ANR	9007987	Identifier	valref		9007392	1					
ANR	9007988	Argument	t_name		9007392	1					
ANR	9007989	Identifier	t_name		9007392	0					
ANR	9007990	ExpressionStatement	"name_string_ref ( imemory , & valref , & sref )"	5662:20:181039:181079	9007392	1	True				
ANR	9007991	CallExpression	"name_string_ref ( imemory , & valref , & sref )"		9007392	0					
ANR	9007992	Callee	name_string_ref		9007392	0					
ANR	9007993	Identifier	name_string_ref		9007392	0					
ANR	9007994	ArgumentList	imemory		9007392	1					
ANR	9007995	Argument	imemory		9007392	0					
ANR	9007996	Identifier	imemory		9007392	0					
ANR	9007997	Argument	& valref		9007392	1					
ANR	9007998	UnaryOperationExpression	& valref		9007392	0					
ANR	9007999	UnaryOperator	&		9007392	0					
ANR	9008000	Identifier	valref		9007392	1					
ANR	9008001	Argument	& sref		9007392	2					
ANR	9008002	UnaryOperationExpression	& sref		9007392	0					
ANR	9008003	UnaryOperator	&		9007392	0					
ANR	9008004	Identifier	sref		9007392	1					
ANR	9008005	ElseStatement	else		9007392	0					
ANR	9008006	ExpressionStatement	sref . value . bytes = valref . value . bytes	5664:20:181122:181159	9007392	0	True				
ANR	9008007	AssignmentExpression	sref . value . bytes = valref . value . bytes		9007392	0		=			
ANR	9008008	MemberAccess	sref . value . bytes		9007392	0					
ANR	9008009	MemberAccess	sref . value		9007392	0					
ANR	9008010	Identifier	sref		9007392	0					
ANR	9008011	Identifier	value		9007392	1					
ANR	9008012	Identifier	bytes		9007392	1					
ANR	9008013	MemberAccess	valref . value . bytes		9007392	1					
ANR	9008014	MemberAccess	valref . value		9007392	0					
ANR	9008015	Identifier	valref		9007392	0					
ANR	9008016	Identifier	value		9007392	1					
ANR	9008017	Identifier	bytes		9007392	1					
ANR	9008018	IfStatement	"if ( sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0 )"		9007392	4					
ANR	9008019	Condition	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"	5665:20:181181:181258	9007392	0	True				
ANR	9008020	AndExpression	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		9007392	0		&&			
ANR	9008021	MemberAccess	sref . value . bytes		9007392	0					
ANR	9008022	MemberAccess	sref . value		9007392	0					
ANR	9008023	Identifier	sref		9007392	0					
ANR	9008024	Identifier	value		9007392	1					
ANR	9008025	Identifier	bytes		9007392	1					
ANR	9008026	EqualityExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		9007392	1		==			
ANR	9008027	CallExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 )"		9007392	0					
ANR	9008028	Callee	strncmp		9007392	0					
ANR	9008029	Identifier	strncmp		9007392	0					
ANR	9008030	ArgumentList	( const char * ) sref . value . bytes		9007392	1					
ANR	9008031	Argument	( const char * ) sref . value . bytes		9007392	0					
ANR	9008032	CastExpression	( const char * ) sref . value . bytes		9007392	0					
ANR	9008033	CastTarget	const char *		9007392	0					
ANR	9008034	MemberAccess	sref . value . bytes		9007392	1					
ANR	9008035	MemberAccess	sref . value		9007392	0					
ANR	9008036	Identifier	sref		9007392	0					
ANR	9008037	Identifier	value		9007392	1					
ANR	9008038	Identifier	bytes		9007392	1					
ANR	9008039	Argument	"""Pattern"""		9007392	1					
ANR	9008040	PrimaryExpression	"""Pattern"""		9007392	0					
ANR	9008041	Argument	7		9007392	2					
ANR	9008042	PrimaryExpression	7		9007392	0					
ANR	9008043	PrimaryExpression	0		9007392	1					
ANR	9008044	ExpressionStatement	return_error ( gs_error_typecheck )	5666:20:181281:181313	9007392	1	True				
ANR	9008045	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9008046	Callee	return_error		9007392	0					
ANR	9008047	Identifier	return_error		9007392	0					
ANR	9008048	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9008049	Argument	gs_error_typecheck		9007392	0					
ANR	9008050	Identifier	gs_error_typecheck		9007392	0					
ANR	9008051	ElseStatement	else		9007392	0					
ANR	9008052	ExpressionStatement	return_error ( gs_error_typecheck )	5668:16:181350:181382	9007392	0	True				
ANR	9008053	CallExpression	return_error ( gs_error_typecheck )		9007392	0					
ANR	9008054	Callee	return_error		9007392	0					
ANR	9008055	Identifier	return_error		9007392	0					
ANR	9008056	ArgumentList	gs_error_typecheck		9007392	1					
ANR	9008057	Argument	gs_error_typecheck		9007392	0					
ANR	9008058	Identifier	gs_error_typecheck		9007392	0					
ANR	9008059	ElseStatement	else		9007392	0					
ANR	9008060	CompoundStatement		77:8:2951:2962	9007392	0					
ANR	9008061	IdentifierDeclStatement	ref nameref ;	5671:8:181415:181426	9007392	0	True				
ANR	9008062	IdentifierDecl	nameref		9007392	0					
ANR	9008063	IdentifierDeclType	ref		9007392	0					
ANR	9008064	Identifier	nameref		9007392	1					
ANR	9008065	SwitchStatement	switch ( components )		9007392	1					
ANR	9008066	Condition	components	5673:16:181445:181454	9007392	0	True				
ANR	9008067	Identifier	components		9007392	0					
ANR	9008068	CompoundStatement		79:28:2993:2993	9007392	1					
ANR	9008069	Label	case 1 :	5674:12:181471:181477	9007392	0	True				
ANR	9008070	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , & nameref )"	5675:16:181495:181552	9007392	1	True				
ANR	9008071	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , & nameref )"		9007392	0		=			
ANR	9008072	Identifier	code		9007392	0					
ANR	9008073	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , & nameref )"		9007392	1					
ANR	9008074	Callee	name_enter_string		9007392	0					
ANR	9008075	Identifier	name_enter_string		9007392	0					
ANR	9008076	ArgumentList	imemory		9007392	1					
ANR	9008077	Argument	imemory		9007392	0					
ANR	9008078	Identifier	imemory		9007392	0					
ANR	9008079	Argument	"""DeviceGray"""		9007392	1					
ANR	9008080	PrimaryExpression	"""DeviceGray"""		9007392	0					
ANR	9008081	Argument	& nameref		9007392	2					
ANR	9008082	UnaryOperationExpression	& nameref		9007392	0					
ANR	9008083	UnaryOperator	&		9007392	0					
ANR	9008084	Identifier	nameref		9007392	1					
ANR	9008085	BreakStatement	break ;	5676:16:181570:181575	9007392	2	True				
ANR	9008086	Label	case 3 :	5677:12:181589:181595	9007392	3	True				
ANR	9008087	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"	5678:16:181613:181669	9007392	4	True				
ANR	9008088	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"		9007392	0		=			
ANR	9008089	Identifier	code		9007392	0					
ANR	9008090	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"		9007392	1					
ANR	9008091	Callee	name_enter_string		9007392	0					
ANR	9008092	Identifier	name_enter_string		9007392	0					
ANR	9008093	ArgumentList	imemory		9007392	1					
ANR	9008094	Argument	imemory		9007392	0					
ANR	9008095	Identifier	imemory		9007392	0					
ANR	9008096	Argument	"""DeviceRGB"""		9007392	1					
ANR	9008097	PrimaryExpression	"""DeviceRGB"""		9007392	0					
ANR	9008098	Argument	& nameref		9007392	2					
ANR	9008099	UnaryOperationExpression	& nameref		9007392	0					
ANR	9008100	UnaryOperator	&		9007392	0					
ANR	9008101	Identifier	nameref		9007392	1					
ANR	9008102	BreakStatement	break ;	5679:16:181687:181692	9007392	5	True				
ANR	9008103	Label	case 4 :	5680:12:181706:181712	9007392	6	True				
ANR	9008104	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"	5681:16:181730:181787	9007392	7	True				
ANR	9008105	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"		9007392	0		=			
ANR	9008106	Identifier	code		9007392	0					
ANR	9008107	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"		9007392	1					
ANR	9008108	Callee	name_enter_string		9007392	0					
ANR	9008109	Identifier	name_enter_string		9007392	0					
ANR	9008110	ArgumentList	imemory		9007392	1					
ANR	9008111	Argument	imemory		9007392	0					
ANR	9008112	Identifier	imemory		9007392	0					
ANR	9008113	Argument	"""DeviceCMYK"""		9007392	1					
ANR	9008114	PrimaryExpression	"""DeviceCMYK"""		9007392	0					
ANR	9008115	Argument	& nameref		9007392	2					
ANR	9008116	UnaryOperationExpression	& nameref		9007392	0					
ANR	9008117	UnaryOperator	&		9007392	0					
ANR	9008118	Identifier	nameref		9007392	1					
ANR	9008119	BreakStatement	break ;	5682:16:181805:181810	9007392	8	True				
ANR	9008120	Label	default :	5683:12:181824:181831	9007392	9	True				
ANR	9008121	Identifier	default		9007392	0					
ANR	9008122	ExpressionStatement	return_error ( gs_error_rangecheck )	5684:16:181849:181882	9007392	10	True				
ANR	9008123	CallExpression	return_error ( gs_error_rangecheck )		9007392	0					
ANR	9008124	Callee	return_error		9007392	0					
ANR	9008125	Identifier	return_error		9007392	0					
ANR	9008126	ArgumentList	gs_error_rangecheck		9007392	1					
ANR	9008127	Argument	gs_error_rangecheck		9007392	0					
ANR	9008128	Identifier	gs_error_rangecheck		9007392	0					
ANR	9008129	IfStatement	if ( code < 0 )		9007392	2					
ANR	9008130	Condition	code < 0	5686:12:181906:181913	9007392	0	True				
ANR	9008131	RelationalExpression	code < 0		9007392	0		<			
ANR	9008132	Identifier	code		9007392	0					
ANR	9008133	PrimaryExpression	0		9007392	1					
ANR	9008134	ReturnStatement	return code ;	5687:12:181928:181939	9007392	1	True				
ANR	9008135	Identifier	code		9007392	0					
ANR	9008136	ExpressionStatement	"code = idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"	5693:8:182268:182324	9007392	3	True				
ANR	9008137	AssignmentExpression	"code = idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"		9007392	0		=			
ANR	9008138	Identifier	code		9007392	0					
ANR	9008139	CallExpression	"idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"		9007392	1					
ANR	9008140	Callee	idict_put_string		9007392	0					
ANR	9008141	Identifier	idict_put_string		9007392	0					
ANR	9008142	ArgumentList	& ICCdict		9007392	1					
ANR	9008143	Argument	& ICCdict		9007392	0					
ANR	9008144	UnaryOperationExpression	& ICCdict		9007392	0					
ANR	9008145	UnaryOperator	&		9007392	0					
ANR	9008146	Identifier	ICCdict		9007392	1					
ANR	9008147	Argument	"""Alternate"""		9007392	1					
ANR	9008148	PrimaryExpression	"""Alternate"""		9007392	0					
ANR	9008149	Argument	& nameref		9007392	2					
ANR	9008150	UnaryOperationExpression	& nameref		9007392	0					
ANR	9008151	UnaryOperator	&		9007392	0					
ANR	9008152	Identifier	nameref		9007392	1					
ANR	9008153	IfStatement	if ( code < 0 )		9007392	4					
ANR	9008154	Condition	code < 0	5694:12:182338:182345	9007392	0	True				
ANR	9008155	RelationalExpression	code < 0		9007392	0		<			
ANR	9008156	Identifier	code		9007392	0					
ANR	9008157	PrimaryExpression	0		9007392	1					
ANR	9008158	ReturnStatement	return code ;	5695:12:182360:182371	9007392	1	True				
ANR	9008159	Identifier	code		9007392	0					
ANR	9008160	ReturnStatement	"return validateiccspace ( i_ctx_p , r ) ;"	5698:8:182449:182484	9007392	5	True				
ANR	9008161	CallExpression	"validateiccspace ( i_ctx_p , r )"		9007392	0					
ANR	9008162	Callee	validateiccspace		9007392	0					
ANR	9008163	Identifier	validateiccspace		9007392	0					
ANR	9008164	ArgumentList	i_ctx_p		9007392	1					
ANR	9008165	Argument	i_ctx_p		9007392	0					
ANR	9008166	Identifier	i_ctx_p		9007392	0					
ANR	9008167	Argument	r		9007392	1					
ANR	9008168	Identifier	r		9007392	0					
ANR	9008169	ReturnStatement	return code ;	5700:4:182496:182507	9007392	19	True				
ANR	9008170	Identifier	code		9007392	0					
ANR	9008171	ReturnType	static int		9007392	1					
ANR	9008172	Identifier	validateiccspace		9007392	2					
ANR	9008173	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		9007392	3					
ANR	9008174	Parameter	i_ctx_t * i_ctx_p	5594:28:178435:178451	9007392	0	True				
ANR	9008175	ParameterType	i_ctx_t *		9007392	0					
ANR	9008176	Identifier	i_ctx_p		9007392	1					
ANR	9008177	Parameter	ref * * r	5594:47:178454:178460	9007392	1	True				
ANR	9008178	ParameterType	ref * *		9007392	0					
ANR	9008179	Identifier	r		9007392	1					
ANR	9008180	CFGEntryNode	ENTRY		9007392		True				
ANR	9008181	CFGExitNode	EXIT		9007392		True				
ANR	9008182	Symbol	components		9007392						
ANR	9008183	Symbol	valref . value		9007392						
ANR	9008184	Symbol	code		9007392						
ANR	9008185	Symbol	t_dictionary		9007392						
ANR	9008186	Symbol	gs_error_rangecheck		9007392						
ANR	9008187	Symbol	ICCdict		9007392						
ANR	9008188	Symbol	gs_error_undefined		9007392						
ANR	9008189	Symbol	* tempref		9007392						
ANR	9008190	Symbol	nameref		9007392						
ANR	9008191	Symbol	& ICCdict		9007392						
ANR	9008192	Symbol	space		9007392						
ANR	9008193	Symbol	strncmp		9007392						
ANR	9008194	Symbol	valref . value . bytes		9007392						
ANR	9008195	Symbol	gs_error_typecheck		9007392						
ANR	9008196	Symbol	t_null		9007392						
ANR	9008197	Symbol	r_has_type		9007392						
ANR	9008198	Symbol	& valref		9007392						
ANR	9008199	Symbol	t_name		9007392						
ANR	9008200	Symbol	r_size		9007392						
ANR	9008201	Symbol	sref . value . bytes		9007392						
ANR	9008202	Symbol	imemory		9007392						
ANR	9008203	Symbol	idict_put_string		9007392						
ANR	9008204	Symbol	tempref		9007392						
ANR	9008205	Symbol	& nameref		9007392						
ANR	9008206	Symbol	tempref -> value . intval		9007392						
ANR	9008207	Symbol	dict_find_string		9007392						
ANR	9008208	Symbol	array_get		9007392						
ANR	9008209	Symbol	i		9007392						
ANR	9008210	Symbol	& tempref		9007392						
ANR	9008211	Symbol	t_real		9007392						
ANR	9008212	Symbol	& sref		9007392						
ANR	9008213	Symbol	validateiccspace		9007392						
ANR	9008214	Symbol	name_enter_string		9007392						
ANR	9008215	Symbol	t_string		9007392						
ANR	9008216	Symbol	sref . value		9007392						
ANR	9008217	Symbol	r		9007392						
ANR	9008218	Symbol	gs_note_error		9007392						
ANR	9008219	Symbol	tempref -> value		9007392						
ANR	9008220	Symbol	t_integer		9007392						
ANR	9008221	Symbol	sref		9007392						
ANR	9008222	Symbol	i_ctx_p		9007392						
ANR	9008223	Symbol	valref		9007392						
ANR	9008224	Symbol	r_is_array		9007392						
ANR	9008225	Symbol	t_file		9007392						
ANR	9008226	Symbol	* r		9007392						
ANR	9008227	Function	iccalternatespace	5703:0:182512:183792							
ANR	9008228	FunctionDef	"iccalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		9008227	0					
ANR	9008229	CompoundStatement		5704:0:182596:183792	9008227	0					
ANR	9008230	IdentifierDeclStatement	"int components , code = 0 ;"	5705:4:182602:182626	9008227	0	True				
ANR	9008231	IdentifierDecl	components		9008227	0					
ANR	9008232	IdentifierDeclType	int		9008227	0					
ANR	9008233	Identifier	components		9008227	1					
ANR	9008234	IdentifierDecl	code = 0		9008227	1					
ANR	9008235	IdentifierDeclType	int		9008227	0					
ANR	9008236	Identifier	code		9008227	1					
ANR	9008237	AssignmentExpression	code = 0		9008227	2		=			
ANR	9008238	Identifier	code		9008227	0					
ANR	9008239	PrimaryExpression	0		9008227	1					
ANR	9008240	IdentifierDeclStatement	"ref * tempref , ICCdict ;"	5706:4:182632:182653	9008227	1	True				
ANR	9008241	IdentifierDecl	* tempref		9008227	0					
ANR	9008242	IdentifierDeclType	ref *		9008227	0					
ANR	9008243	Identifier	tempref		9008227	1					
ANR	9008244	IdentifierDecl	ICCdict		9008227	1					
ANR	9008245	IdentifierDeclType	ref		9008227	0					
ANR	9008246	Identifier	ICCdict		9008227	1					
ANR	9008247	IfStatement	if ( ! r_is_array ( space ) )		9008227	2					
ANR	9008248	Condition	! r_is_array ( space )	5708:8:182664:182681	9008227	0	True				
ANR	9008249	UnaryOperationExpression	! r_is_array ( space )		9008227	0					
ANR	9008250	UnaryOperator	!		9008227	0					
ANR	9008251	CallExpression	r_is_array ( space )		9008227	1					
ANR	9008252	Callee	r_is_array		9008227	0					
ANR	9008253	Identifier	r_is_array		9008227	0					
ANR	9008254	ArgumentList	space		9008227	1					
ANR	9008255	Argument	space		9008227	0					
ANR	9008256	Identifier	space		9008227	0					
ANR	9008257	ExpressionStatement	return_error ( gs_error_typecheck )	5709:8:182692:182724	9008227	1	True				
ANR	9008258	CallExpression	return_error ( gs_error_typecheck )		9008227	0					
ANR	9008259	Callee	return_error		9008227	0					
ANR	9008260	Identifier	return_error		9008227	0					
ANR	9008261	ArgumentList	gs_error_typecheck		9008227	1					
ANR	9008262	Argument	gs_error_typecheck		9008227	0					
ANR	9008263	Identifier	gs_error_typecheck		9008227	0					
ANR	9008264	IfStatement	if ( r_size ( space ) != 2 )		9008227	3					
ANR	9008265	Condition	r_size ( space ) != 2	5711:8:182795:182812	9008227	0	True				
ANR	9008266	EqualityExpression	r_size ( space ) != 2		9008227	0		!=			
ANR	9008267	CallExpression	r_size ( space )		9008227	0					
ANR	9008268	Callee	r_size		9008227	0					
ANR	9008269	Identifier	r_size		9008227	0					
ANR	9008270	ArgumentList	space		9008227	1					
ANR	9008271	Argument	space		9008227	0					
ANR	9008272	Identifier	space		9008227	0					
ANR	9008273	PrimaryExpression	2		9008227	1					
ANR	9008274	ExpressionStatement	return_error ( gs_error_rangecheck )	5712:8:182823:182856	9008227	1	True				
ANR	9008275	CallExpression	return_error ( gs_error_rangecheck )		9008227	0					
ANR	9008276	Callee	return_error		9008227	0					
ANR	9008277	Identifier	return_error		9008227	0					
ANR	9008278	ArgumentList	gs_error_rangecheck		9008227	1					
ANR	9008279	Argument	gs_error_rangecheck		9008227	0					
ANR	9008280	Identifier	gs_error_rangecheck		9008227	0					
ANR	9008281	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5714:4:182863:182908	9008227	4	True				
ANR	9008282	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		9008227	0		=			
ANR	9008283	Identifier	code		9008227	0					
ANR	9008284	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		9008227	1					
ANR	9008285	Callee	array_get		9008227	0					
ANR	9008286	Identifier	array_get		9008227	0					
ANR	9008287	ArgumentList	imemory		9008227	1					
ANR	9008288	Argument	imemory		9008227	0					
ANR	9008289	Identifier	imemory		9008227	0					
ANR	9008290	Argument	space		9008227	1					
ANR	9008291	Identifier	space		9008227	0					
ANR	9008292	Argument	1		9008227	2					
ANR	9008293	PrimaryExpression	1		9008227	0					
ANR	9008294	Argument	& ICCdict		9008227	3					
ANR	9008295	UnaryOperationExpression	& ICCdict		9008227	0					
ANR	9008296	UnaryOperator	&		9008227	0					
ANR	9008297	Identifier	ICCdict		9008227	1					
ANR	9008298	IfStatement	if ( code < 0 )		9008227	5					
ANR	9008299	Condition	code < 0	5715:8:182918:182925	9008227	0	True				
ANR	9008300	RelationalExpression	code < 0		9008227	0		<			
ANR	9008301	Identifier	code		9008227	0					
ANR	9008302	PrimaryExpression	0		9008227	1					
ANR	9008303	ReturnStatement	return code ;	5716:8:182936:182947	9008227	1	True				
ANR	9008304	Identifier	code		9008227	0					
ANR	9008305	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5718:4:182954:183002	9008227	6	True				
ANR	9008306	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008227	0		=			
ANR	9008307	Identifier	code		9008227	0					
ANR	9008308	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008227	1					
ANR	9008309	Callee	dict_find_string		9008227	0					
ANR	9008310	Identifier	dict_find_string		9008227	0					
ANR	9008311	ArgumentList	& ICCdict		9008227	1					
ANR	9008312	Argument	& ICCdict		9008227	0					
ANR	9008313	UnaryOperationExpression	& ICCdict		9008227	0					
ANR	9008314	UnaryOperator	&		9008227	0					
ANR	9008315	Identifier	ICCdict		9008227	1					
ANR	9008316	Argument	"""N"""		9008227	1					
ANR	9008317	PrimaryExpression	"""N"""		9008227	0					
ANR	9008318	Argument	& tempref		9008227	2					
ANR	9008319	UnaryOperationExpression	& tempref		9008227	0					
ANR	9008320	UnaryOperator	&		9008227	0					
ANR	9008321	Identifier	tempref		9008227	1					
ANR	9008322	IfStatement	if ( code < 0 )		9008227	7					
ANR	9008323	Condition	code < 0	5719:8:183012:183019	9008227	0	True				
ANR	9008324	RelationalExpression	code < 0		9008227	0		<			
ANR	9008325	Identifier	code		9008227	0					
ANR	9008326	PrimaryExpression	0		9008227	1					
ANR	9008327	ReturnStatement	return code ;	5720:8:183030:183041	9008227	1	True				
ANR	9008328	Identifier	code		9008227	0					
ANR	9008329	IfStatement	if ( code == 0 )		9008227	8					
ANR	9008330	Condition	code == 0	5721:8:183051:183059	9008227	0	True				
ANR	9008331	EqualityExpression	code == 0		9008227	0		==			
ANR	9008332	Identifier	code		9008227	0					
ANR	9008333	PrimaryExpression	0		9008227	1					
ANR	9008334	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5722:8:183070:183110	9008227	1	True				
ANR	9008335	CallExpression	gs_note_error ( gs_error_undefined )		9008227	0					
ANR	9008336	Callee	gs_note_error		9008227	0					
ANR	9008337	Identifier	gs_note_error		9008227	0					
ANR	9008338	ArgumentList	gs_error_undefined		9008227	1					
ANR	9008339	Argument	gs_error_undefined		9008227	0					
ANR	9008340	Identifier	gs_error_undefined		9008227	0					
ANR	9008341	ExpressionStatement	components = tempref -> value . intval	5724:4:183117:183151	9008227	9	True				
ANR	9008342	AssignmentExpression	components = tempref -> value . intval		9008227	0		=			
ANR	9008343	Identifier	components		9008227	0					
ANR	9008344	MemberAccess	tempref -> value . intval		9008227	1					
ANR	9008345	PtrMemberAccess	tempref -> value		9008227	0					
ANR	9008346	Identifier	tempref		9008227	0					
ANR	9008347	Identifier	value		9008227	1					
ANR	9008348	Identifier	intval		9008227	1					
ANR	9008349	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"	5726:4:183158:183214	9008227	10	True				
ANR	9008350	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		9008227	0		=			
ANR	9008351	Identifier	code		9008227	0					
ANR	9008352	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		9008227	1					
ANR	9008353	Callee	dict_find_string		9008227	0					
ANR	9008354	Identifier	dict_find_string		9008227	0					
ANR	9008355	ArgumentList	& ICCdict		9008227	1					
ANR	9008356	Argument	& ICCdict		9008227	0					
ANR	9008357	UnaryOperationExpression	& ICCdict		9008227	0					
ANR	9008358	UnaryOperator	&		9008227	0					
ANR	9008359	Identifier	ICCdict		9008227	1					
ANR	9008360	Argument	"""Alternate"""		9008227	1					
ANR	9008361	PrimaryExpression	"""Alternate"""		9008227	0					
ANR	9008362	Argument	& tempref		9008227	2					
ANR	9008363	UnaryOperationExpression	& tempref		9008227	0					
ANR	9008364	UnaryOperator	&		9008227	0					
ANR	9008365	Identifier	tempref		9008227	1					
ANR	9008366	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9008227	11					
ANR	9008367	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5727:8:183224:183263	9008227	0	True				
ANR	9008368	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9008227	0		&&			
ANR	9008369	RelationalExpression	code > 0		9008227	0		>			
ANR	9008370	Identifier	code		9008227	0					
ANR	9008371	PrimaryExpression	0		9008227	1					
ANR	9008372	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9008227	1					
ANR	9008373	UnaryOperator	!		9008227	0					
ANR	9008374	CallExpression	"r_has_type ( tempref , t_null )"		9008227	1					
ANR	9008375	Callee	r_has_type		9008227	0					
ANR	9008376	Identifier	r_has_type		9008227	0					
ANR	9008377	ArgumentList	tempref		9008227	1					
ANR	9008378	Argument	tempref		9008227	0					
ANR	9008379	Identifier	tempref		9008227	0					
ANR	9008380	Argument	t_null		9008227	1					
ANR	9008381	Identifier	t_null		9008227	0					
ANR	9008382	CompoundStatement		24:50:669:669	9008227	1					
ANR	9008383	ExpressionStatement	* r = tempref	5728:8:183276:183288	9008227	0	True				
ANR	9008384	AssignmentExpression	* r = tempref		9008227	0		=			
ANR	9008385	UnaryOperationExpression	* r		9008227	0					
ANR	9008386	UnaryOperator	*		9008227	0					
ANR	9008387	Identifier	r		9008227	1					
ANR	9008388	Identifier	tempref		9008227	1					
ANR	9008389	ElseStatement	else		9008227	0					
ANR	9008390	CompoundStatement		26:11:704:704	9008227	0					
ANR	9008391	SwitchStatement	switch ( components )		9008227	0					
ANR	9008392	Condition	components	5730:16:183319:183328	9008227	0	True				
ANR	9008393	Identifier	components		9008227	0					
ANR	9008394	CompoundStatement		27:28:734:734	9008227	1					
ANR	9008395	Label	case 1 :	5731:12:183345:183351	9008227	0	True				
ANR	9008396	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , * r )"	5732:16:183369:183420	9008227	1	True				
ANR	9008397	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , * r )"		9008227	0		=			
ANR	9008398	Identifier	code		9008227	0					
ANR	9008399	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , * r )"		9008227	1					
ANR	9008400	Callee	name_enter_string		9008227	0					
ANR	9008401	Identifier	name_enter_string		9008227	0					
ANR	9008402	ArgumentList	imemory		9008227	1					
ANR	9008403	Argument	imemory		9008227	0					
ANR	9008404	Identifier	imemory		9008227	0					
ANR	9008405	Argument	"""DeviceGray"""		9008227	1					
ANR	9008406	PrimaryExpression	"""DeviceGray"""		9008227	0					
ANR	9008407	Argument	* r		9008227	2					
ANR	9008408	UnaryOperationExpression	* r		9008227	0					
ANR	9008409	UnaryOperator	*		9008227	0					
ANR	9008410	Identifier	r		9008227	1					
ANR	9008411	BreakStatement	break ;	5733:16:183438:183443	9008227	2	True				
ANR	9008412	Label	case 3 :	5734:12:183457:183463	9008227	3	True				
ANR	9008413	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , * r )"	5735:16:183481:183531	9008227	4	True				
ANR	9008414	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , * r )"		9008227	0		=			
ANR	9008415	Identifier	code		9008227	0					
ANR	9008416	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , * r )"		9008227	1					
ANR	9008417	Callee	name_enter_string		9008227	0					
ANR	9008418	Identifier	name_enter_string		9008227	0					
ANR	9008419	ArgumentList	imemory		9008227	1					
ANR	9008420	Argument	imemory		9008227	0					
ANR	9008421	Identifier	imemory		9008227	0					
ANR	9008422	Argument	"""DeviceRGB"""		9008227	1					
ANR	9008423	PrimaryExpression	"""DeviceRGB"""		9008227	0					
ANR	9008424	Argument	* r		9008227	2					
ANR	9008425	UnaryOperationExpression	* r		9008227	0					
ANR	9008426	UnaryOperator	*		9008227	0					
ANR	9008427	Identifier	r		9008227	1					
ANR	9008428	BreakStatement	break ;	5736:16:183549:183554	9008227	5	True				
ANR	9008429	Label	case 4 :	5737:12:183568:183574	9008227	6	True				
ANR	9008430	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , * r )"	5738:16:183592:183643	9008227	7	True				
ANR	9008431	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , * r )"		9008227	0		=			
ANR	9008432	Identifier	code		9008227	0					
ANR	9008433	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , * r )"		9008227	1					
ANR	9008434	Callee	name_enter_string		9008227	0					
ANR	9008435	Identifier	name_enter_string		9008227	0					
ANR	9008436	ArgumentList	imemory		9008227	1					
ANR	9008437	Argument	imemory		9008227	0					
ANR	9008438	Identifier	imemory		9008227	0					
ANR	9008439	Argument	"""DeviceCMYK"""		9008227	1					
ANR	9008440	PrimaryExpression	"""DeviceCMYK"""		9008227	0					
ANR	9008441	Argument	* r		9008227	2					
ANR	9008442	UnaryOperationExpression	* r		9008227	0					
ANR	9008443	UnaryOperator	*		9008227	0					
ANR	9008444	Identifier	r		9008227	1					
ANR	9008445	BreakStatement	break ;	5739:16:183661:183666	9008227	8	True				
ANR	9008446	Label	default :	5740:12:183680:183687	9008227	9	True				
ANR	9008447	Identifier	default		9008227	0					
ANR	9008448	ExpressionStatement	return_error ( gs_error_rangecheck )	5741:16:183705:183738	9008227	10	True				
ANR	9008449	CallExpression	return_error ( gs_error_rangecheck )		9008227	0					
ANR	9008450	Callee	return_error		9008227	0					
ANR	9008451	Identifier	return_error		9008227	0					
ANR	9008452	ArgumentList	gs_error_rangecheck		9008227	1					
ANR	9008453	Argument	gs_error_rangecheck		9008227	0					
ANR	9008454	Identifier	gs_error_rangecheck		9008227	0					
ANR	9008455	ExpressionStatement	* CIESubst = 1	5744:4:183760:183773	9008227	12	True				
ANR	9008456	AssignmentExpression	* CIESubst = 1		9008227	0		=			
ANR	9008457	UnaryOperationExpression	* CIESubst		9008227	0					
ANR	9008458	UnaryOperator	*		9008227	0					
ANR	9008459	Identifier	CIESubst		9008227	1					
ANR	9008460	PrimaryExpression	1		9008227	1					
ANR	9008461	ReturnStatement	return code ;	5745:4:183779:183790	9008227	13	True				
ANR	9008462	Identifier	code		9008227	0					
ANR	9008463	ReturnType	static int		9008227	1					
ANR	9008464	Identifier	iccalternatespace		9008227	2					
ANR	9008465	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		9008227	3					
ANR	9008466	Parameter	i_ctx_t * i_ctx_p	5703:29:182541:182557	9008227	0	True				
ANR	9008467	ParameterType	i_ctx_t *		9008227	0					
ANR	9008468	Identifier	i_ctx_p		9008227	1					
ANR	9008469	Parameter	ref * space	5703:48:182560:182569	9008227	1	True				
ANR	9008470	ParameterType	ref *		9008227	0					
ANR	9008471	Identifier	space		9008227	1					
ANR	9008472	Parameter	ref * * r	5703:60:182572:182578	9008227	2	True				
ANR	9008473	ParameterType	ref * *		9008227	0					
ANR	9008474	Identifier	r		9008227	1					
ANR	9008475	Parameter	int * CIESubst	5703:69:182581:182593	9008227	3	True				
ANR	9008476	ParameterType	int *		9008227	0					
ANR	9008477	Identifier	CIESubst		9008227	1					
ANR	9008478	CFGEntryNode	ENTRY		9008227		True				
ANR	9008479	CFGExitNode	EXIT		9008227		True				
ANR	9008480	Symbol	components		9008227						
ANR	9008481	Symbol	code		9008227						
ANR	9008482	Symbol	gs_error_rangecheck		9008227						
ANR	9008483	Symbol	ICCdict		9008227						
ANR	9008484	Symbol	gs_error_undefined		9008227						
ANR	9008485	Symbol	* tempref		9008227						
ANR	9008486	Symbol	& ICCdict		9008227						
ANR	9008487	Symbol	space		9008227						
ANR	9008488	Symbol	* CIESubst		9008227						
ANR	9008489	Symbol	gs_error_typecheck		9008227						
ANR	9008490	Symbol	r_has_type		9008227						
ANR	9008491	Symbol	t_null		9008227						
ANR	9008492	Symbol	r_size		9008227						
ANR	9008493	Symbol	imemory		9008227						
ANR	9008494	Symbol	CIESubst		9008227						
ANR	9008495	Symbol	tempref		9008227						
ANR	9008496	Symbol	tempref -> value . intval		9008227						
ANR	9008497	Symbol	dict_find_string		9008227						
ANR	9008498	Symbol	array_get		9008227						
ANR	9008499	Symbol	& tempref		9008227						
ANR	9008500	Symbol	name_enter_string		9008227						
ANR	9008501	Symbol	r		9008227						
ANR	9008502	Symbol	gs_note_error		9008227						
ANR	9008503	Symbol	tempref -> value		9008227						
ANR	9008504	Symbol	i_ctx_p		9008227						
ANR	9008505	Symbol	r_is_array		9008227						
ANR	9008506	Symbol	* r		9008227						
ANR	9008507	Function	icccomponents	5747:0:183794:184205							
ANR	9008508	FunctionDef	"icccomponents (i_ctx_t * i_ctx_p , ref * space , int * n)"		9008507	0					
ANR	9008509	CompoundStatement		5748:0:183858:184205	9008507	0					
ANR	9008510	IdentifierDeclStatement	int code = 0 ;	5749:4:183864:183876	9008507	0	True				
ANR	9008511	IdentifierDecl	code = 0		9008507	0					
ANR	9008512	IdentifierDeclType	int		9008507	0					
ANR	9008513	Identifier	code		9008507	1					
ANR	9008514	AssignmentExpression	code = 0		9008507	2		=			
ANR	9008515	Identifier	code		9008507	0					
ANR	9008516	PrimaryExpression	0		9008507	1					
ANR	9008517	IdentifierDeclStatement	"ref * tempref , ICCdict ;"	5750:4:183882:183903	9008507	1	True				
ANR	9008518	IdentifierDecl	* tempref		9008507	0					
ANR	9008519	IdentifierDeclType	ref *		9008507	0					
ANR	9008520	Identifier	tempref		9008507	1					
ANR	9008521	IdentifierDecl	ICCdict		9008507	1					
ANR	9008522	IdentifierDeclType	ref		9008507	0					
ANR	9008523	Identifier	ICCdict		9008507	1					
ANR	9008524	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5752:4:183910:183955	9008507	2	True				
ANR	9008525	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		9008507	0		=			
ANR	9008526	Identifier	code		9008507	0					
ANR	9008527	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		9008507	1					
ANR	9008528	Callee	array_get		9008507	0					
ANR	9008529	Identifier	array_get		9008507	0					
ANR	9008530	ArgumentList	imemory		9008507	1					
ANR	9008531	Argument	imemory		9008507	0					
ANR	9008532	Identifier	imemory		9008507	0					
ANR	9008533	Argument	space		9008507	1					
ANR	9008534	Identifier	space		9008507	0					
ANR	9008535	Argument	1		9008507	2					
ANR	9008536	PrimaryExpression	1		9008507	0					
ANR	9008537	Argument	& ICCdict		9008507	3					
ANR	9008538	UnaryOperationExpression	& ICCdict		9008507	0					
ANR	9008539	UnaryOperator	&		9008507	0					
ANR	9008540	Identifier	ICCdict		9008507	1					
ANR	9008541	IfStatement	if ( code < 0 )		9008507	3					
ANR	9008542	Condition	code < 0	5753:8:183965:183972	9008507	0	True				
ANR	9008543	RelationalExpression	code < 0		9008507	0		<			
ANR	9008544	Identifier	code		9008507	0					
ANR	9008545	PrimaryExpression	0		9008507	1					
ANR	9008546	ReturnStatement	return code ;	5754:8:183983:183994	9008507	1	True				
ANR	9008547	Identifier	code		9008507	0					
ANR	9008548	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5756:4:184001:184049	9008507	4	True				
ANR	9008549	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008507	0		=			
ANR	9008550	Identifier	code		9008507	0					
ANR	9008551	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008507	1					
ANR	9008552	Callee	dict_find_string		9008507	0					
ANR	9008553	Identifier	dict_find_string		9008507	0					
ANR	9008554	ArgumentList	& ICCdict		9008507	1					
ANR	9008555	Argument	& ICCdict		9008507	0					
ANR	9008556	UnaryOperationExpression	& ICCdict		9008507	0					
ANR	9008557	UnaryOperator	&		9008507	0					
ANR	9008558	Identifier	ICCdict		9008507	1					
ANR	9008559	Argument	"""N"""		9008507	1					
ANR	9008560	PrimaryExpression	"""N"""		9008507	0					
ANR	9008561	Argument	& tempref		9008507	2					
ANR	9008562	UnaryOperationExpression	& tempref		9008507	0					
ANR	9008563	UnaryOperator	&		9008507	0					
ANR	9008564	Identifier	tempref		9008507	1					
ANR	9008565	IfStatement	if ( code < 0 )		9008507	5					
ANR	9008566	Condition	code < 0	5757:8:184059:184066	9008507	0	True				
ANR	9008567	RelationalExpression	code < 0		9008507	0		<			
ANR	9008568	Identifier	code		9008507	0					
ANR	9008569	PrimaryExpression	0		9008507	1					
ANR	9008570	ReturnStatement	return code ;	5758:8:184077:184088	9008507	1	True				
ANR	9008571	Identifier	code		9008507	0					
ANR	9008572	IfStatement	if ( code == 0 )		9008507	6					
ANR	9008573	Condition	code == 0	5759:8:184098:184106	9008507	0	True				
ANR	9008574	EqualityExpression	code == 0		9008507	0		==			
ANR	9008575	Identifier	code		9008507	0					
ANR	9008576	PrimaryExpression	0		9008507	1					
ANR	9008577	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5760:8:184117:184157	9008507	1	True				
ANR	9008578	CallExpression	gs_note_error ( gs_error_undefined )		9008507	0					
ANR	9008579	Callee	gs_note_error		9008507	0					
ANR	9008580	Identifier	gs_note_error		9008507	0					
ANR	9008581	ArgumentList	gs_error_undefined		9008507	1					
ANR	9008582	Argument	gs_error_undefined		9008507	0					
ANR	9008583	Identifier	gs_error_undefined		9008507	0					
ANR	9008584	ExpressionStatement	* n = tempref -> value . intval	5761:4:184163:184189	9008507	7	True				
ANR	9008585	AssignmentExpression	* n = tempref -> value . intval		9008507	0		=			
ANR	9008586	UnaryOperationExpression	* n		9008507	0					
ANR	9008587	UnaryOperator	*		9008507	0					
ANR	9008588	Identifier	n		9008507	1					
ANR	9008589	MemberAccess	tempref -> value . intval		9008507	1					
ANR	9008590	PtrMemberAccess	tempref -> value		9008507	0					
ANR	9008591	Identifier	tempref		9008507	0					
ANR	9008592	Identifier	value		9008507	1					
ANR	9008593	Identifier	intval		9008507	1					
ANR	9008594	ReturnStatement	return 0 ;	5762:4:184195:184203	9008507	8	True				
ANR	9008595	PrimaryExpression	0		9008507	0					
ANR	9008596	ReturnType	static int		9008507	1					
ANR	9008597	Identifier	icccomponents		9008507	2					
ANR	9008598	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		9008507	3					
ANR	9008599	Parameter	i_ctx_t * i_ctx_p	5747:25:183819:183835	9008507	0	True				
ANR	9008600	ParameterType	i_ctx_t *		9008507	0					
ANR	9008601	Identifier	i_ctx_p		9008507	1					
ANR	9008602	Parameter	ref * space	5747:44:183838:183847	9008507	1	True				
ANR	9008603	ParameterType	ref *		9008507	0					
ANR	9008604	Identifier	space		9008507	1					
ANR	9008605	Parameter	int * n	5747:56:183850:183855	9008507	2	True				
ANR	9008606	ParameterType	int *		9008507	0					
ANR	9008607	Identifier	n		9008507	1					
ANR	9008608	CFGEntryNode	ENTRY		9008507		True				
ANR	9008609	CFGExitNode	EXIT		9008507		True				
ANR	9008610	Symbol	tempref -> value . intval		9008507						
ANR	9008611	Symbol	code		9008507						
ANR	9008612	Symbol	dict_find_string		9008507						
ANR	9008613	Symbol	ICCdict		9008507						
ANR	9008614	Symbol	array_get		9008507						
ANR	9008615	Symbol	gs_error_undefined		9008507						
ANR	9008616	Symbol	* tempref		9008507						
ANR	9008617	Symbol	& tempref		9008507						
ANR	9008618	Symbol	& ICCdict		9008507						
ANR	9008619	Symbol	space		9008507						
ANR	9008620	Symbol	n		9008507						
ANR	9008621	Symbol	gs_note_error		9008507						
ANR	9008622	Symbol	tempref -> value		9008507						
ANR	9008623	Symbol	i_ctx_p		9008507						
ANR	9008624	Symbol	* n		9008507						
ANR	9008625	Symbol	imemory		9008507						
ANR	9008626	Symbol	tempref		9008507						
ANR	9008627	Function	iccdomain	5764:0:184207:185225							
ANR	9008628	FunctionDef	"iccdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9008627	0					
ANR	9008629	CompoundStatement		5765:0:184271:185225	9008627	0					
ANR	9008630	IdentifierDeclStatement	"int components , i , code = 0 ;"	5766:4:184277:184304	9008627	0	True				
ANR	9008631	IdentifierDecl	components		9008627	0					
ANR	9008632	IdentifierDeclType	int		9008627	0					
ANR	9008633	Identifier	components		9008627	1					
ANR	9008634	IdentifierDecl	i		9008627	1					
ANR	9008635	IdentifierDeclType	int		9008627	0					
ANR	9008636	Identifier	i		9008627	1					
ANR	9008637	IdentifierDecl	code = 0		9008627	2					
ANR	9008638	IdentifierDeclType	int		9008627	0					
ANR	9008639	Identifier	code		9008627	1					
ANR	9008640	AssignmentExpression	code = 0		9008627	2		=			
ANR	9008641	Identifier	code		9008627	0					
ANR	9008642	PrimaryExpression	0		9008627	1					
ANR	9008643	IdentifierDeclStatement	"ref * tempref , ICCdict , valref ;"	5767:4:184310:184339	9008627	1	True				
ANR	9008644	IdentifierDecl	* tempref		9008627	0					
ANR	9008645	IdentifierDeclType	ref *		9008627	0					
ANR	9008646	Identifier	tempref		9008627	1					
ANR	9008647	IdentifierDecl	ICCdict		9008627	1					
ANR	9008648	IdentifierDeclType	ref		9008627	0					
ANR	9008649	Identifier	ICCdict		9008627	1					
ANR	9008650	IdentifierDecl	valref		9008627	2					
ANR	9008651	IdentifierDeclType	ref		9008627	0					
ANR	9008652	Identifier	valref		9008627	1					
ANR	9008653	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5769:4:184346:184391	9008627	2	True				
ANR	9008654	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		9008627	0		=			
ANR	9008655	Identifier	code		9008627	0					
ANR	9008656	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		9008627	1					
ANR	9008657	Callee	array_get		9008627	0					
ANR	9008658	Identifier	array_get		9008627	0					
ANR	9008659	ArgumentList	imemory		9008627	1					
ANR	9008660	Argument	imemory		9008627	0					
ANR	9008661	Identifier	imemory		9008627	0					
ANR	9008662	Argument	space		9008627	1					
ANR	9008663	Identifier	space		9008627	0					
ANR	9008664	Argument	1		9008627	2					
ANR	9008665	PrimaryExpression	1		9008627	0					
ANR	9008666	Argument	& ICCdict		9008627	3					
ANR	9008667	UnaryOperationExpression	& ICCdict		9008627	0					
ANR	9008668	UnaryOperator	&		9008627	0					
ANR	9008669	Identifier	ICCdict		9008627	1					
ANR	9008670	IfStatement	if ( code < 0 )		9008627	3					
ANR	9008671	Condition	code < 0	5770:8:184401:184408	9008627	0	True				
ANR	9008672	RelationalExpression	code < 0		9008627	0		<			
ANR	9008673	Identifier	code		9008627	0					
ANR	9008674	PrimaryExpression	0		9008627	1					
ANR	9008675	ReturnStatement	return code ;	5771:8:184419:184430	9008627	1	True				
ANR	9008676	Identifier	code		9008627	0					
ANR	9008677	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5772:4:184436:184484	9008627	4	True				
ANR	9008678	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008627	0		=			
ANR	9008679	Identifier	code		9008627	0					
ANR	9008680	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008627	1					
ANR	9008681	Callee	dict_find_string		9008627	0					
ANR	9008682	Identifier	dict_find_string		9008627	0					
ANR	9008683	ArgumentList	& ICCdict		9008627	1					
ANR	9008684	Argument	& ICCdict		9008627	0					
ANR	9008685	UnaryOperationExpression	& ICCdict		9008627	0					
ANR	9008686	UnaryOperator	&		9008627	0					
ANR	9008687	Identifier	ICCdict		9008627	1					
ANR	9008688	Argument	"""N"""		9008627	1					
ANR	9008689	PrimaryExpression	"""N"""		9008627	0					
ANR	9008690	Argument	& tempref		9008627	2					
ANR	9008691	UnaryOperationExpression	& tempref		9008627	0					
ANR	9008692	UnaryOperator	&		9008627	0					
ANR	9008693	Identifier	tempref		9008627	1					
ANR	9008694	IfStatement	if ( code < 0 )		9008627	5					
ANR	9008695	Condition	code < 0	5773:8:184494:184501	9008627	0	True				
ANR	9008696	RelationalExpression	code < 0		9008627	0		<			
ANR	9008697	Identifier	code		9008627	0					
ANR	9008698	PrimaryExpression	0		9008627	1					
ANR	9008699	ReturnStatement	return code ;	5774:8:184512:184523	9008627	1	True				
ANR	9008700	Identifier	code		9008627	0					
ANR	9008701	IfStatement	if ( code == 0 )		9008627	6					
ANR	9008702	Condition	code == 0	5775:8:184533:184541	9008627	0	True				
ANR	9008703	EqualityExpression	code == 0		9008627	0		==			
ANR	9008704	Identifier	code		9008627	0					
ANR	9008705	PrimaryExpression	0		9008627	1					
ANR	9008706	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5776:8:184552:184592	9008627	1	True				
ANR	9008707	CallExpression	gs_note_error ( gs_error_undefined )		9008627	0					
ANR	9008708	Callee	gs_note_error		9008627	0					
ANR	9008709	Identifier	gs_note_error		9008627	0					
ANR	9008710	ArgumentList	gs_error_undefined		9008627	1					
ANR	9008711	Argument	gs_error_undefined		9008627	0					
ANR	9008712	Identifier	gs_error_undefined		9008627	0					
ANR	9008713	ExpressionStatement	components = tempref -> value . intval	5777:4:184598:184632	9008627	7	True				
ANR	9008714	AssignmentExpression	components = tempref -> value . intval		9008627	0		=			
ANR	9008715	Identifier	components		9008627	0					
ANR	9008716	MemberAccess	tempref -> value . intval		9008627	1					
ANR	9008717	PtrMemberAccess	tempref -> value		9008627	0					
ANR	9008718	Identifier	tempref		9008627	0					
ANR	9008719	Identifier	value		9008627	1					
ANR	9008720	Identifier	intval		9008627	1					
ANR	9008721	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5778:4:184638:184690	9008627	8	True				
ANR	9008722	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9008627	0		=			
ANR	9008723	Identifier	code		9008627	0					
ANR	9008724	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9008627	1					
ANR	9008725	Callee	dict_find_string		9008627	0					
ANR	9008726	Identifier	dict_find_string		9008627	0					
ANR	9008727	ArgumentList	& ICCdict		9008627	1					
ANR	9008728	Argument	& ICCdict		9008627	0					
ANR	9008729	UnaryOperationExpression	& ICCdict		9008627	0					
ANR	9008730	UnaryOperator	&		9008627	0					
ANR	9008731	Identifier	ICCdict		9008627	1					
ANR	9008732	Argument	"""Range"""		9008627	1					
ANR	9008733	PrimaryExpression	"""Range"""		9008627	0					
ANR	9008734	Argument	& tempref		9008627	2					
ANR	9008735	UnaryOperationExpression	& tempref		9008627	0					
ANR	9008736	UnaryOperator	&		9008627	0					
ANR	9008737	Identifier	tempref		9008627	1					
ANR	9008738	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9008627	9					
ANR	9008739	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5779:8:184700:184739	9008627	0	True				
ANR	9008740	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9008627	0		&&			
ANR	9008741	RelationalExpression	code > 0		9008627	0		>			
ANR	9008742	Identifier	code		9008627	0					
ANR	9008743	PrimaryExpression	0		9008627	1					
ANR	9008744	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9008627	1					
ANR	9008745	UnaryOperator	!		9008627	0					
ANR	9008746	CallExpression	"r_has_type ( tempref , t_null )"		9008627	1					
ANR	9008747	Callee	r_has_type		9008627	0					
ANR	9008748	Identifier	r_has_type		9008627	0					
ANR	9008749	ArgumentList	tempref		9008627	1					
ANR	9008750	Argument	tempref		9008627	0					
ANR	9008751	Identifier	tempref		9008627	0					
ANR	9008752	Argument	t_null		9008627	1					
ANR	9008753	Identifier	t_null		9008627	0					
ANR	9008754	CompoundStatement		15:50:470:470	9008627	1					
ANR	9008755	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		9008627	0					
ANR	9008756	ForInit	i = 0 ;	5780:13:184757:184760	9008627	0	True				
ANR	9008757	AssignmentExpression	i = 0		9008627	0		=			
ANR	9008758	Identifier	i		9008627	0					
ANR	9008759	PrimaryExpression	0		9008627	1					
ANR	9008760	Condition	i < components * 2	5780:17:184761:184776	9008627	1	True				
ANR	9008761	RelationalExpression	i < components * 2		9008627	0		<			
ANR	9008762	Identifier	i		9008627	0					
ANR	9008763	MultiplicativeExpression	components * 2		9008627	1		*			
ANR	9008764	Identifier	components		9008627	0					
ANR	9008765	PrimaryExpression	2		9008627	1					
ANR	9008766	PostIncDecOperationExpression	i ++	5780:34:184778:184780	9008627	2	True				
ANR	9008767	Identifier	i		9008627	0					
ANR	9008768	IncDec	++		9008627	1					
ANR	9008769	CompoundStatement		16:39:511:511	9008627	3					
ANR	9008770	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5781:12:184797:184843	9008627	0	True				
ANR	9008771	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9008627	0		=			
ANR	9008772	Identifier	code		9008627	0					
ANR	9008773	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9008627	1					
ANR	9008774	Callee	array_get		9008627	0					
ANR	9008775	Identifier	array_get		9008627	0					
ANR	9008776	ArgumentList	imemory		9008627	1					
ANR	9008777	Argument	imemory		9008627	0					
ANR	9008778	Identifier	imemory		9008627	0					
ANR	9008779	Argument	tempref		9008627	1					
ANR	9008780	Identifier	tempref		9008627	0					
ANR	9008781	Argument	i		9008627	2					
ANR	9008782	Identifier	i		9008627	0					
ANR	9008783	Argument	& valref		9008627	3					
ANR	9008784	UnaryOperationExpression	& valref		9008627	0					
ANR	9008785	UnaryOperator	&		9008627	0					
ANR	9008786	Identifier	valref		9008627	1					
ANR	9008787	IfStatement	if ( code < 0 )		9008627	1					
ANR	9008788	Condition	code < 0	5782:16:184861:184868	9008627	0	True				
ANR	9008789	RelationalExpression	code < 0		9008627	0		<			
ANR	9008790	Identifier	code		9008627	0					
ANR	9008791	PrimaryExpression	0		9008627	1					
ANR	9008792	ReturnStatement	return code ;	5783:16:184887:184898	9008627	1	True				
ANR	9008793	Identifier	code		9008627	0					
ANR	9008794	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9008627	2					
ANR	9008795	Condition	"r_has_type ( & valref , t_integer )"	5784:16:184916:184945	9008627	0	True				
ANR	9008796	CallExpression	"r_has_type ( & valref , t_integer )"		9008627	0					
ANR	9008797	Callee	r_has_type		9008627	0					
ANR	9008798	Identifier	r_has_type		9008627	0					
ANR	9008799	ArgumentList	& valref		9008627	1					
ANR	9008800	Argument	& valref		9008627	0					
ANR	9008801	UnaryOperationExpression	& valref		9008627	0					
ANR	9008802	UnaryOperator	&		9008627	0					
ANR	9008803	Identifier	valref		9008627	1					
ANR	9008804	Argument	t_integer		9008627	1					
ANR	9008805	Identifier	t_integer		9008627	0					
ANR	9008806	ExpressionStatement	ptr [ i * 2 ] = ( float ) valref . value . intval	5785:16:184964:185003	9008627	1	True				
ANR	9008807	AssignmentExpression	ptr [ i * 2 ] = ( float ) valref . value . intval		9008627	0		=			
ANR	9008808	ArrayIndexing	ptr [ i * 2 ]		9008627	0					
ANR	9008809	Identifier	ptr		9008627	0					
ANR	9008810	MultiplicativeExpression	i * 2		9008627	1		*			
ANR	9008811	Identifier	i		9008627	0					
ANR	9008812	PrimaryExpression	2		9008627	1					
ANR	9008813	CastExpression	( float ) valref . value . intval		9008627	1					
ANR	9008814	CastTarget	float		9008627	0					
ANR	9008815	MemberAccess	valref . value . intval		9008627	1					
ANR	9008816	MemberAccess	valref . value		9008627	0					
ANR	9008817	Identifier	valref		9008627	0					
ANR	9008818	Identifier	value		9008627	1					
ANR	9008819	Identifier	intval		9008627	1					
ANR	9008820	ElseStatement	else		9008627	0					
ANR	9008821	ExpressionStatement	ptr [ i * 2 ] = valref . value . realval	5787:16:185038:185071	9008627	0	True				
ANR	9008822	AssignmentExpression	ptr [ i * 2 ] = valref . value . realval		9008627	0		=			
ANR	9008823	ArrayIndexing	ptr [ i * 2 ]		9008627	0					
ANR	9008824	Identifier	ptr		9008627	0					
ANR	9008825	MultiplicativeExpression	i * 2		9008627	1		*			
ANR	9008826	Identifier	i		9008627	0					
ANR	9008827	PrimaryExpression	2		9008627	1					
ANR	9008828	MemberAccess	valref . value . realval		9008627	1					
ANR	9008829	MemberAccess	valref . value		9008627	0					
ANR	9008830	Identifier	valref		9008627	0					
ANR	9008831	Identifier	value		9008627	1					
ANR	9008832	Identifier	realval		9008627	1					
ANR	9008833	ElseStatement	else		9008627	0					
ANR	9008834	CompoundStatement		25:11:822:822	9008627	0					
ANR	9008835	ForStatement	for ( i = 0 ; i < components ; i ++ )		9008627	0					
ANR	9008836	ForInit	i = 0 ;	5790:13:185109:185112	9008627	0	True				
ANR	9008837	AssignmentExpression	i = 0		9008627	0		=			
ANR	9008838	Identifier	i		9008627	0					
ANR	9008839	PrimaryExpression	0		9008627	1					
ANR	9008840	Condition	i < components	5790:17:185113:185124	9008627	1	True				
ANR	9008841	RelationalExpression	i < components		9008627	0		<			
ANR	9008842	Identifier	i		9008627	0					
ANR	9008843	Identifier	components		9008627	1					
ANR	9008844	PostIncDecOperationExpression	i ++	5790:30:185126:185128	9008627	2	True				
ANR	9008845	Identifier	i		9008627	0					
ANR	9008846	IncDec	++		9008627	1					
ANR	9008847	CompoundStatement		26:35:859:859	9008627	3					
ANR	9008848	ExpressionStatement	ptr [ i * 2 ] = 0	5791:12:185145:185159	9008627	0	True				
ANR	9008849	AssignmentExpression	ptr [ i * 2 ] = 0		9008627	0		=			
ANR	9008850	ArrayIndexing	ptr [ i * 2 ]		9008627	0					
ANR	9008851	Identifier	ptr		9008627	0					
ANR	9008852	MultiplicativeExpression	i * 2		9008627	1		*			
ANR	9008853	Identifier	i		9008627	0					
ANR	9008854	PrimaryExpression	2		9008627	1					
ANR	9008855	PrimaryExpression	0		9008627	1					
ANR	9008856	ExpressionStatement	ptr [ ( i * 2 ) + 1 ] = 1	5792:12:185173:185193	9008627	1	True				
ANR	9008857	AssignmentExpression	ptr [ ( i * 2 ) + 1 ] = 1		9008627	0		=			
ANR	9008858	ArrayIndexing	ptr [ ( i * 2 ) + 1 ]		9008627	0					
ANR	9008859	Identifier	ptr		9008627	0					
ANR	9008860	AdditiveExpression	( i * 2 ) + 1		9008627	1		+			
ANR	9008861	MultiplicativeExpression	i * 2		9008627	0		*			
ANR	9008862	Identifier	i		9008627	0					
ANR	9008863	PrimaryExpression	2		9008627	1					
ANR	9008864	PrimaryExpression	1		9008627	1					
ANR	9008865	PrimaryExpression	1		9008627	1					
ANR	9008866	ReturnStatement	return 0 ;	5795:4:185215:185223	9008627	10	True				
ANR	9008867	PrimaryExpression	0		9008627	0					
ANR	9008868	ReturnType	static int		9008627	1					
ANR	9008869	Identifier	iccdomain		9008627	2					
ANR	9008870	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9008627	3					
ANR	9008871	Parameter	i_ctx_t * i_ctx_p	5764:21:184228:184244	9008627	0	True				
ANR	9008872	ParameterType	i_ctx_t *		9008627	0					
ANR	9008873	Identifier	i_ctx_p		9008627	1					
ANR	9008874	Parameter	ref * space	5764:40:184247:184256	9008627	1	True				
ANR	9008875	ParameterType	ref *		9008627	0					
ANR	9008876	Identifier	space		9008627	1					
ANR	9008877	Parameter	float * ptr	5764:52:184259:184268	9008627	2	True				
ANR	9008878	ParameterType	float *		9008627	0					
ANR	9008879	Identifier	ptr		9008627	1					
ANR	9008880	CFGEntryNode	ENTRY		9008627		True				
ANR	9008881	CFGExitNode	EXIT		9008627		True				
ANR	9008882	Symbol	components		9008627						
ANR	9008883	Symbol	valref . value		9008627						
ANR	9008884	Symbol	code		9008627						
ANR	9008885	Symbol	ICCdict		9008627						
ANR	9008886	Symbol	gs_error_undefined		9008627						
ANR	9008887	Symbol	* tempref		9008627						
ANR	9008888	Symbol	& ICCdict		9008627						
ANR	9008889	Symbol	space		9008627						
ANR	9008890	Symbol	valref . value . realval		9008627						
ANR	9008891	Symbol	r_has_type		9008627						
ANR	9008892	Symbol	t_null		9008627						
ANR	9008893	Symbol	& valref		9008627						
ANR	9008894	Symbol	* ptr		9008627						
ANR	9008895	Symbol	imemory		9008627						
ANR	9008896	Symbol	tempref		9008627						
ANR	9008897	Symbol	tempref -> value . intval		9008627						
ANR	9008898	Symbol	dict_find_string		9008627						
ANR	9008899	Symbol	array_get		9008627						
ANR	9008900	Symbol	i		9008627						
ANR	9008901	Symbol	& tempref		9008627						
ANR	9008902	Symbol	ptr		9008627						
ANR	9008903	Symbol	gs_note_error		9008627						
ANR	9008904	Symbol	tempref -> value		9008627						
ANR	9008905	Symbol	* i		9008627						
ANR	9008906	Symbol	t_integer		9008627						
ANR	9008907	Symbol	valref . value . intval		9008627						
ANR	9008908	Symbol	i_ctx_p		9008627						
ANR	9008909	Symbol	valref		9008627						
ANR	9008910	Function	iccrange	5797:0:185227:186243							
ANR	9008911	FunctionDef	"iccrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9008910	0					
ANR	9008912	CompoundStatement		5798:0:185290:186243	9008910	0					
ANR	9008913	IdentifierDeclStatement	"int components , i , code = 0 ;"	5799:4:185296:185323	9008910	0	True				
ANR	9008914	IdentifierDecl	components		9008910	0					
ANR	9008915	IdentifierDeclType	int		9008910	0					
ANR	9008916	Identifier	components		9008910	1					
ANR	9008917	IdentifierDecl	i		9008910	1					
ANR	9008918	IdentifierDeclType	int		9008910	0					
ANR	9008919	Identifier	i		9008910	1					
ANR	9008920	IdentifierDecl	code = 0		9008910	2					
ANR	9008921	IdentifierDeclType	int		9008910	0					
ANR	9008922	Identifier	code		9008910	1					
ANR	9008923	AssignmentExpression	code = 0		9008910	2		=			
ANR	9008924	Identifier	code		9008910	0					
ANR	9008925	PrimaryExpression	0		9008910	1					
ANR	9008926	IdentifierDeclStatement	"ref * tempref , ICCdict , valref ;"	5800:4:185329:185358	9008910	1	True				
ANR	9008927	IdentifierDecl	* tempref		9008910	0					
ANR	9008928	IdentifierDeclType	ref *		9008910	0					
ANR	9008929	Identifier	tempref		9008910	1					
ANR	9008930	IdentifierDecl	ICCdict		9008910	1					
ANR	9008931	IdentifierDeclType	ref		9008910	0					
ANR	9008932	Identifier	ICCdict		9008910	1					
ANR	9008933	IdentifierDecl	valref		9008910	2					
ANR	9008934	IdentifierDeclType	ref		9008910	0					
ANR	9008935	Identifier	valref		9008910	1					
ANR	9008936	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5802:4:185365:185410	9008910	2	True				
ANR	9008937	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		9008910	0		=			
ANR	9008938	Identifier	code		9008910	0					
ANR	9008939	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		9008910	1					
ANR	9008940	Callee	array_get		9008910	0					
ANR	9008941	Identifier	array_get		9008910	0					
ANR	9008942	ArgumentList	imemory		9008910	1					
ANR	9008943	Argument	imemory		9008910	0					
ANR	9008944	Identifier	imemory		9008910	0					
ANR	9008945	Argument	space		9008910	1					
ANR	9008946	Identifier	space		9008910	0					
ANR	9008947	Argument	1		9008910	2					
ANR	9008948	PrimaryExpression	1		9008910	0					
ANR	9008949	Argument	& ICCdict		9008910	3					
ANR	9008950	UnaryOperationExpression	& ICCdict		9008910	0					
ANR	9008951	UnaryOperator	&		9008910	0					
ANR	9008952	Identifier	ICCdict		9008910	1					
ANR	9008953	IfStatement	if ( code < 0 )		9008910	3					
ANR	9008954	Condition	code < 0	5803:8:185420:185427	9008910	0	True				
ANR	9008955	RelationalExpression	code < 0		9008910	0		<			
ANR	9008956	Identifier	code		9008910	0					
ANR	9008957	PrimaryExpression	0		9008910	1					
ANR	9008958	ReturnStatement	return code ;	5804:8:185438:185449	9008910	1	True				
ANR	9008959	Identifier	code		9008910	0					
ANR	9008960	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5805:4:185455:185503	9008910	4	True				
ANR	9008961	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008910	0		=			
ANR	9008962	Identifier	code		9008910	0					
ANR	9008963	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		9008910	1					
ANR	9008964	Callee	dict_find_string		9008910	0					
ANR	9008965	Identifier	dict_find_string		9008910	0					
ANR	9008966	ArgumentList	& ICCdict		9008910	1					
ANR	9008967	Argument	& ICCdict		9008910	0					
ANR	9008968	UnaryOperationExpression	& ICCdict		9008910	0					
ANR	9008969	UnaryOperator	&		9008910	0					
ANR	9008970	Identifier	ICCdict		9008910	1					
ANR	9008971	Argument	"""N"""		9008910	1					
ANR	9008972	PrimaryExpression	"""N"""		9008910	0					
ANR	9008973	Argument	& tempref		9008910	2					
ANR	9008974	UnaryOperationExpression	& tempref		9008910	0					
ANR	9008975	UnaryOperator	&		9008910	0					
ANR	9008976	Identifier	tempref		9008910	1					
ANR	9008977	IfStatement	if ( code < 0 )		9008910	5					
ANR	9008978	Condition	code < 0	5806:8:185513:185520	9008910	0	True				
ANR	9008979	RelationalExpression	code < 0		9008910	0		<			
ANR	9008980	Identifier	code		9008910	0					
ANR	9008981	PrimaryExpression	0		9008910	1					
ANR	9008982	ReturnStatement	return code ;	5807:8:185531:185542	9008910	1	True				
ANR	9008983	Identifier	code		9008910	0					
ANR	9008984	IfStatement	if ( code == 0 )		9008910	6					
ANR	9008985	Condition	code == 0	5808:8:185552:185560	9008910	0	True				
ANR	9008986	EqualityExpression	code == 0		9008910	0		==			
ANR	9008987	Identifier	code		9008910	0					
ANR	9008988	PrimaryExpression	0		9008910	1					
ANR	9008989	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5809:8:185571:185611	9008910	1	True				
ANR	9008990	CallExpression	gs_note_error ( gs_error_undefined )		9008910	0					
ANR	9008991	Callee	gs_note_error		9008910	0					
ANR	9008992	Identifier	gs_note_error		9008910	0					
ANR	9008993	ArgumentList	gs_error_undefined		9008910	1					
ANR	9008994	Argument	gs_error_undefined		9008910	0					
ANR	9008995	Identifier	gs_error_undefined		9008910	0					
ANR	9008996	ExpressionStatement	components = tempref -> value . intval	5810:4:185617:185651	9008910	7	True				
ANR	9008997	AssignmentExpression	components = tempref -> value . intval		9008910	0		=			
ANR	9008998	Identifier	components		9008910	0					
ANR	9008999	MemberAccess	tempref -> value . intval		9008910	1					
ANR	9009000	PtrMemberAccess	tempref -> value		9008910	0					
ANR	9009001	Identifier	tempref		9008910	0					
ANR	9009002	Identifier	value		9008910	1					
ANR	9009003	Identifier	intval		9008910	1					
ANR	9009004	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5811:4:185657:185709	9008910	8	True				
ANR	9009005	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9008910	0		=			
ANR	9009006	Identifier	code		9008910	0					
ANR	9009007	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		9008910	1					
ANR	9009008	Callee	dict_find_string		9008910	0					
ANR	9009009	Identifier	dict_find_string		9008910	0					
ANR	9009010	ArgumentList	& ICCdict		9008910	1					
ANR	9009011	Argument	& ICCdict		9008910	0					
ANR	9009012	UnaryOperationExpression	& ICCdict		9008910	0					
ANR	9009013	UnaryOperator	&		9008910	0					
ANR	9009014	Identifier	ICCdict		9008910	1					
ANR	9009015	Argument	"""Range"""		9008910	1					
ANR	9009016	PrimaryExpression	"""Range"""		9008910	0					
ANR	9009017	Argument	& tempref		9008910	2					
ANR	9009018	UnaryOperationExpression	& tempref		9008910	0					
ANR	9009019	UnaryOperator	&		9008910	0					
ANR	9009020	Identifier	tempref		9008910	1					
ANR	9009021	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		9008910	9					
ANR	9009022	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5812:8:185719:185758	9008910	0	True				
ANR	9009023	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		9008910	0		&&			
ANR	9009024	RelationalExpression	code > 0		9008910	0		>			
ANR	9009025	Identifier	code		9008910	0					
ANR	9009026	PrimaryExpression	0		9008910	1					
ANR	9009027	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		9008910	1					
ANR	9009028	UnaryOperator	!		9008910	0					
ANR	9009029	CallExpression	"r_has_type ( tempref , t_null )"		9008910	1					
ANR	9009030	Callee	r_has_type		9008910	0					
ANR	9009031	Identifier	r_has_type		9008910	0					
ANR	9009032	ArgumentList	tempref		9008910	1					
ANR	9009033	Argument	tempref		9008910	0					
ANR	9009034	Identifier	tempref		9008910	0					
ANR	9009035	Argument	t_null		9008910	1					
ANR	9009036	Identifier	t_null		9008910	0					
ANR	9009037	CompoundStatement		15:50:470:470	9008910	1					
ANR	9009038	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		9008910	0					
ANR	9009039	ForInit	i = 0 ;	5813:13:185776:185779	9008910	0	True				
ANR	9009040	AssignmentExpression	i = 0		9008910	0		=			
ANR	9009041	Identifier	i		9008910	0					
ANR	9009042	PrimaryExpression	0		9008910	1					
ANR	9009043	Condition	i < components * 2	5813:17:185780:185795	9008910	1	True				
ANR	9009044	RelationalExpression	i < components * 2		9008910	0		<			
ANR	9009045	Identifier	i		9008910	0					
ANR	9009046	MultiplicativeExpression	components * 2		9008910	1		*			
ANR	9009047	Identifier	components		9008910	0					
ANR	9009048	PrimaryExpression	2		9008910	1					
ANR	9009049	PostIncDecOperationExpression	i ++	5813:34:185797:185799	9008910	2	True				
ANR	9009050	Identifier	i		9008910	0					
ANR	9009051	IncDec	++		9008910	1					
ANR	9009052	CompoundStatement		16:39:511:511	9008910	3					
ANR	9009053	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5814:12:185816:185862	9008910	0	True				
ANR	9009054	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		9008910	0		=			
ANR	9009055	Identifier	code		9008910	0					
ANR	9009056	CallExpression	"array_get ( imemory , tempref , i , & valref )"		9008910	1					
ANR	9009057	Callee	array_get		9008910	0					
ANR	9009058	Identifier	array_get		9008910	0					
ANR	9009059	ArgumentList	imemory		9008910	1					
ANR	9009060	Argument	imemory		9008910	0					
ANR	9009061	Identifier	imemory		9008910	0					
ANR	9009062	Argument	tempref		9008910	1					
ANR	9009063	Identifier	tempref		9008910	0					
ANR	9009064	Argument	i		9008910	2					
ANR	9009065	Identifier	i		9008910	0					
ANR	9009066	Argument	& valref		9008910	3					
ANR	9009067	UnaryOperationExpression	& valref		9008910	0					
ANR	9009068	UnaryOperator	&		9008910	0					
ANR	9009069	Identifier	valref		9008910	1					
ANR	9009070	IfStatement	if ( code < 0 )		9008910	1					
ANR	9009071	Condition	code < 0	5815:16:185880:185887	9008910	0	True				
ANR	9009072	RelationalExpression	code < 0		9008910	0		<			
ANR	9009073	Identifier	code		9008910	0					
ANR	9009074	PrimaryExpression	0		9008910	1					
ANR	9009075	ReturnStatement	return code ;	5816:16:185906:185917	9008910	1	True				
ANR	9009076	Identifier	code		9008910	0					
ANR	9009077	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		9008910	2					
ANR	9009078	Condition	"r_has_type ( & valref , t_integer )"	5817:16:185935:185964	9008910	0	True				
ANR	9009079	CallExpression	"r_has_type ( & valref , t_integer )"		9008910	0					
ANR	9009080	Callee	r_has_type		9008910	0					
ANR	9009081	Identifier	r_has_type		9008910	0					
ANR	9009082	ArgumentList	& valref		9008910	1					
ANR	9009083	Argument	& valref		9008910	0					
ANR	9009084	UnaryOperationExpression	& valref		9008910	0					
ANR	9009085	UnaryOperator	&		9008910	0					
ANR	9009086	Identifier	valref		9008910	1					
ANR	9009087	Argument	t_integer		9008910	1					
ANR	9009088	Identifier	t_integer		9008910	0					
ANR	9009089	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5818:16:185983:186018	9008910	1	True				
ANR	9009090	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		9008910	0		=			
ANR	9009091	ArrayIndexing	ptr [ i ]		9008910	0					
ANR	9009092	Identifier	ptr		9008910	0					
ANR	9009093	Identifier	i		9008910	1					
ANR	9009094	CastExpression	( float ) valref . value . intval		9008910	1					
ANR	9009095	CastTarget	float		9008910	0					
ANR	9009096	MemberAccess	valref . value . intval		9008910	1					
ANR	9009097	MemberAccess	valref . value		9008910	0					
ANR	9009098	Identifier	valref		9008910	0					
ANR	9009099	Identifier	value		9008910	1					
ANR	9009100	Identifier	intval		9008910	1					
ANR	9009101	ElseStatement	else		9008910	0					
ANR	9009102	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5820:16:186053:186089	9008910	0	True				
ANR	9009103	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		9008910	0		=			
ANR	9009104	ArrayIndexing	ptr [ i ]		9008910	0					
ANR	9009105	Identifier	ptr		9008910	0					
ANR	9009106	Identifier	i		9008910	1					
ANR	9009107	CastExpression	( float ) valref . value . realval		9008910	1					
ANR	9009108	CastTarget	float		9008910	0					
ANR	9009109	MemberAccess	valref . value . realval		9008910	1					
ANR	9009110	MemberAccess	valref . value		9008910	0					
ANR	9009111	Identifier	valref		9008910	0					
ANR	9009112	Identifier	value		9008910	1					
ANR	9009113	Identifier	realval		9008910	1					
ANR	9009114	ElseStatement	else		9008910	0					
ANR	9009115	CompoundStatement		25:11:821:821	9008910	0					
ANR	9009116	ForStatement	for ( i = 0 ; i < components ; i ++ )		9008910	0					
ANR	9009117	ForInit	i = 0 ;	5823:13:186127:186130	9008910	0	True				
ANR	9009118	AssignmentExpression	i = 0		9008910	0		=			
ANR	9009119	Identifier	i		9008910	0					
ANR	9009120	PrimaryExpression	0		9008910	1					
ANR	9009121	Condition	i < components	5823:17:186131:186142	9008910	1	True				
ANR	9009122	RelationalExpression	i < components		9008910	0		<			
ANR	9009123	Identifier	i		9008910	0					
ANR	9009124	Identifier	components		9008910	1					
ANR	9009125	PostIncDecOperationExpression	i ++	5823:30:186144:186146	9008910	2	True				
ANR	9009126	Identifier	i		9008910	0					
ANR	9009127	IncDec	++		9008910	1					
ANR	9009128	CompoundStatement		26:35:858:858	9008910	3					
ANR	9009129	ExpressionStatement	ptr [ i * 2 ] = 0	5824:12:186163:186177	9008910	0	True				
ANR	9009130	AssignmentExpression	ptr [ i * 2 ] = 0		9008910	0		=			
ANR	9009131	ArrayIndexing	ptr [ i * 2 ]		9008910	0					
ANR	9009132	Identifier	ptr		9008910	0					
ANR	9009133	MultiplicativeExpression	i * 2		9008910	1		*			
ANR	9009134	Identifier	i		9008910	0					
ANR	9009135	PrimaryExpression	2		9008910	1					
ANR	9009136	PrimaryExpression	0		9008910	1					
ANR	9009137	ExpressionStatement	ptr [ ( i * 2 ) + 1 ] = 1	5825:12:186191:186211	9008910	1	True				
ANR	9009138	AssignmentExpression	ptr [ ( i * 2 ) + 1 ] = 1		9008910	0		=			
ANR	9009139	ArrayIndexing	ptr [ ( i * 2 ) + 1 ]		9008910	0					
ANR	9009140	Identifier	ptr		9008910	0					
ANR	9009141	AdditiveExpression	( i * 2 ) + 1		9008910	1		+			
ANR	9009142	MultiplicativeExpression	i * 2		9008910	0		*			
ANR	9009143	Identifier	i		9008910	0					
ANR	9009144	PrimaryExpression	2		9008910	1					
ANR	9009145	PrimaryExpression	1		9008910	1					
ANR	9009146	PrimaryExpression	1		9008910	1					
ANR	9009147	ReturnStatement	return 0 ;	5828:4:186233:186241	9008910	10	True				
ANR	9009148	PrimaryExpression	0		9008910	0					
ANR	9009149	ReturnType	static int		9008910	1					
ANR	9009150	Identifier	iccrange		9008910	2					
ANR	9009151	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9008910	3					
ANR	9009152	Parameter	i_ctx_t * i_ctx_p	5797:20:185247:185263	9008910	0	True				
ANR	9009153	ParameterType	i_ctx_t *		9008910	0					
ANR	9009154	Identifier	i_ctx_p		9008910	1					
ANR	9009155	Parameter	ref * space	5797:39:185266:185275	9008910	1	True				
ANR	9009156	ParameterType	ref *		9008910	0					
ANR	9009157	Identifier	space		9008910	1					
ANR	9009158	Parameter	float * ptr	5797:51:185278:185287	9008910	2	True				
ANR	9009159	ParameterType	float *		9008910	0					
ANR	9009160	Identifier	ptr		9008910	1					
ANR	9009161	CFGEntryNode	ENTRY		9008910		True				
ANR	9009162	CFGExitNode	EXIT		9008910		True				
ANR	9009163	Symbol	components		9008910						
ANR	9009164	Symbol	valref . value		9008910						
ANR	9009165	Symbol	code		9008910						
ANR	9009166	Symbol	ICCdict		9008910						
ANR	9009167	Symbol	gs_error_undefined		9008910						
ANR	9009168	Symbol	* tempref		9008910						
ANR	9009169	Symbol	& ICCdict		9008910						
ANR	9009170	Symbol	space		9008910						
ANR	9009171	Symbol	valref . value . realval		9008910						
ANR	9009172	Symbol	r_has_type		9008910						
ANR	9009173	Symbol	t_null		9008910						
ANR	9009174	Symbol	& valref		9008910						
ANR	9009175	Symbol	* ptr		9008910						
ANR	9009176	Symbol	imemory		9008910						
ANR	9009177	Symbol	tempref		9008910						
ANR	9009178	Symbol	tempref -> value . intval		9008910						
ANR	9009179	Symbol	dict_find_string		9008910						
ANR	9009180	Symbol	array_get		9008910						
ANR	9009181	Symbol	i		9008910						
ANR	9009182	Symbol	& tempref		9008910						
ANR	9009183	Symbol	ptr		9008910						
ANR	9009184	Symbol	gs_note_error		9008910						
ANR	9009185	Symbol	tempref -> value		9008910						
ANR	9009186	Symbol	* i		9008910						
ANR	9009187	Symbol	t_integer		9008910						
ANR	9009188	Symbol	valref . value . intval		9008910						
ANR	9009189	Symbol	i_ctx_p		9008910						
ANR	9009190	Symbol	valref		9008910						
ANR	9009191	Function	iccbasecolor	5830:0:186245:186398							
ANR	9009192	FunctionDef	"iccbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		9009191	0					
ANR	9009193	CompoundStatement		5831:0:186351:186398	9009191	0					
ANR	9009194	ExpressionStatement	* stage = 0	5832:4:186357:186367	9009191	0	True				
ANR	9009195	AssignmentExpression	* stage = 0		9009191	0		=			
ANR	9009196	UnaryOperationExpression	* stage		9009191	0					
ANR	9009197	UnaryOperator	*		9009191	0					
ANR	9009198	Identifier	stage		9009191	1					
ANR	9009199	PrimaryExpression	0		9009191	1					
ANR	9009200	ExpressionStatement	* cont = 1	5833:4:186373:186382	9009191	1	True				
ANR	9009201	AssignmentExpression	* cont = 1		9009191	0		=			
ANR	9009202	UnaryOperationExpression	* cont		9009191	0					
ANR	9009203	UnaryOperator	*		9009191	0					
ANR	9009204	Identifier	cont		9009191	1					
ANR	9009205	PrimaryExpression	1		9009191	1					
ANR	9009206	ReturnStatement	return 0 ;	5834:4:186388:186396	9009191	2	True				
ANR	9009207	PrimaryExpression	0		9009191	0					
ANR	9009208	ReturnType	static int		9009191	1					
ANR	9009209	Identifier	iccbasecolor		9009191	2					
ANR	9009210	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		9009191	3					
ANR	9009211	Parameter	i_ctx_t * i_ctx_p	5830:24:186269:186285	9009191	0	True				
ANR	9009212	ParameterType	i_ctx_t *		9009191	0					
ANR	9009213	Identifier	i_ctx_p		9009191	1					
ANR	9009214	Parameter	ref * space	5830:43:186288:186297	9009191	1	True				
ANR	9009215	ParameterType	ref *		9009191	0					
ANR	9009216	Identifier	space		9009191	1					
ANR	9009217	Parameter	int base	5830:55:186300:186307	9009191	2	True				
ANR	9009218	ParameterType	int		9009191	0					
ANR	9009219	Identifier	base		9009191	1					
ANR	9009220	Parameter	int * stage	5830:65:186310:186319	9009191	3	True				
ANR	9009221	ParameterType	int *		9009191	0					
ANR	9009222	Identifier	stage		9009191	1					
ANR	9009223	Parameter	int * cont	5830:77:186322:186330	9009191	4	True				
ANR	9009224	ParameterType	int *		9009191	0					
ANR	9009225	Identifier	cont		9009191	1					
ANR	9009226	Parameter	int * stack_depth	5830:88:186333:186348	9009191	5	True				
ANR	9009227	ParameterType	int *		9009191	0					
ANR	9009228	Identifier	stack_depth		9009191	1					
ANR	9009229	CFGEntryNode	ENTRY		9009191		True				
ANR	9009230	CFGExitNode	EXIT		9009191		True				
ANR	9009231	Symbol	stack_depth		9009191						
ANR	9009232	Symbol	* stage		9009191						
ANR	9009233	Symbol	stage		9009191						
ANR	9009234	Symbol	* cont		9009191						
ANR	9009235	Symbol	i_ctx_p		9009191						
ANR	9009236	Symbol	cont		9009191						
ANR	9009237	Symbol	space		9009191						
ANR	9009238	Symbol	base		9009191						
ANR	9009239	Function	iccvalidate	5836:0:186400:186499							
ANR	9009240	FunctionDef	"iccvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		9009239	0					
ANR	9009241	CompoundStatement		5837:0:186483:186499	9009239	0					
ANR	9009242	ReturnStatement	return 0 ;	5838:4:186489:186497	9009239	0	True				
ANR	9009243	PrimaryExpression	0		9009239	0					
ANR	9009244	ReturnType	static int		9009239	1					
ANR	9009245	Identifier	iccvalidate		9009239	2					
ANR	9009246	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		9009239	3					
ANR	9009247	Parameter	i_ctx_t * i_ctx_p	5836:23:186423:186438	9009239	0	True				
ANR	9009248	ParameterType	i_ctx_t *		9009239	0					
ANR	9009249	Identifier	i_ctx_p		9009239	1					
ANR	9009250	Parameter	ref * space	5836:41:186441:186450	9009239	1	True				
ANR	9009251	ParameterType	ref *		9009239	0					
ANR	9009252	Identifier	space		9009239	1					
ANR	9009253	Parameter	float * values	5836:53:186453:186465	9009239	2	True				
ANR	9009254	ParameterType	float *		9009239	0					
ANR	9009255	Identifier	values		9009239	1					
ANR	9009256	Parameter	int num_comps	5836:68:186468:186480	9009239	3	True				
ANR	9009257	ParameterType	int		9009239	0					
ANR	9009258	Identifier	num_comps		9009239	1					
ANR	9009259	CFGEntryNode	ENTRY		9009239		True				
ANR	9009260	CFGExitNode	EXIT		9009239		True				
ANR	9009261	Symbol	i_ctx_p		9009239						
ANR	9009262	Symbol	values		9009239						
ANR	9009263	Symbol	num_comps		9009239						
ANR	9009264	Symbol	space		9009239						
ANR	9009265	Function	dummydomain	5841:0:186502:186584							
ANR	9009266	FunctionDef	"dummydomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9009265	0					
ANR	9009267	CompoundStatement		5842:0:186568:186584	9009265	0					
ANR	9009268	ReturnStatement	return 0 ;	5843:4:186574:186582	9009265	0	True				
ANR	9009269	PrimaryExpression	0		9009265	0					
ANR	9009270	ReturnType	static int		9009265	1					
ANR	9009271	Identifier	dummydomain		9009265	2					
ANR	9009272	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9009265	3					
ANR	9009273	Parameter	i_ctx_t * i_ctx_p	5841:23:186525:186541	9009265	0	True				
ANR	9009274	ParameterType	i_ctx_t *		9009265	0					
ANR	9009275	Identifier	i_ctx_p		9009265	1					
ANR	9009276	Parameter	ref * space	5841:42:186544:186553	9009265	1	True				
ANR	9009277	ParameterType	ref *		9009265	0					
ANR	9009278	Identifier	space		9009265	1					
ANR	9009279	Parameter	float * ptr	5841:54:186556:186565	9009265	2	True				
ANR	9009280	ParameterType	float *		9009265	0					
ANR	9009281	Identifier	ptr		9009265	1					
ANR	9009282	CFGEntryNode	ENTRY		9009265		True				
ANR	9009283	CFGExitNode	EXIT		9009265		True				
ANR	9009284	Symbol	i_ctx_p		9009265						
ANR	9009285	Symbol	space		9009265						
ANR	9009286	Symbol	ptr		9009265						
ANR	9009287	Function	dummyrange	5845:0:186586:186667							
ANR	9009288	FunctionDef	"dummyrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		9009287	0					
ANR	9009289	CompoundStatement		5846:0:186651:186667	9009287	0					
ANR	9009290	ReturnStatement	return 0 ;	5847:4:186657:186665	9009287	0	True				
ANR	9009291	PrimaryExpression	0		9009287	0					
ANR	9009292	ReturnType	static int		9009287	1					
ANR	9009293	Identifier	dummyrange		9009287	2					
ANR	9009294	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		9009287	3					
ANR	9009295	Parameter	i_ctx_t * i_ctx_p	5845:22:186608:186624	9009287	0	True				
ANR	9009296	ParameterType	i_ctx_t *		9009287	0					
ANR	9009297	Identifier	i_ctx_p		9009287	1					
ANR	9009298	Parameter	ref * space	5845:41:186627:186636	9009287	1	True				
ANR	9009299	ParameterType	ref *		9009287	0					
ANR	9009300	Identifier	space		9009287	1					
ANR	9009301	Parameter	float * ptr	5845:53:186639:186648	9009287	2	True				
ANR	9009302	ParameterType	float *		9009287	0					
ANR	9009303	Identifier	ptr		9009287	1					
ANR	9009304	CFGEntryNode	ENTRY		9009287		True				
ANR	9009305	CFGExitNode	EXIT		9009287		True				
ANR	9009306	Symbol	i_ctx_p		9009287						
ANR	9009307	Symbol	space		9009287						
ANR	9009308	Symbol	ptr		9009287						
ANR	9009309	Function	onecomponent	5849:0:186669:186760							
ANR	9009310	FunctionDef	"onecomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		9009309	0					
ANR	9009311	CompoundStatement		5850:0:186732:186760	9009309	0					
ANR	9009312	ExpressionStatement	* n = 1	5851:4:186738:186744	9009309	0	True				
ANR	9009313	AssignmentExpression	* n = 1		9009309	0		=			
ANR	9009314	UnaryOperationExpression	* n		9009309	0					
ANR	9009315	UnaryOperator	*		9009309	0					
ANR	9009316	Identifier	n		9009309	1					
ANR	9009317	PrimaryExpression	1		9009309	1					
ANR	9009318	ReturnStatement	return 0 ;	5852:4:186750:186758	9009309	1	True				
ANR	9009319	PrimaryExpression	0		9009309	0					
ANR	9009320	ReturnType	static int		9009309	1					
ANR	9009321	Identifier	onecomponent		9009309	2					
ANR	9009322	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		9009309	3					
ANR	9009323	Parameter	i_ctx_t * i_ctx_p	5849:24:186693:186709	9009309	0	True				
ANR	9009324	ParameterType	i_ctx_t *		9009309	0					
ANR	9009325	Identifier	i_ctx_p		9009309	1					
ANR	9009326	Parameter	ref * space	5849:43:186712:186721	9009309	1	True				
ANR	9009327	ParameterType	ref *		9009309	0					
ANR	9009328	Identifier	space		9009309	1					
ANR	9009329	Parameter	int * n	5849:55:186724:186729	9009309	2	True				
ANR	9009330	ParameterType	int *		9009309	0					
ANR	9009331	Identifier	n		9009309	1					
ANR	9009332	CFGEntryNode	ENTRY		9009309		True				
ANR	9009333	CFGExitNode	EXIT		9009309		True				
ANR	9009334	Symbol	i_ctx_p		9009309						
ANR	9009335	Symbol	* n		9009309						
ANR	9009336	Symbol	space		9009309						
ANR	9009337	Symbol	n		9009309						
ANR	9009338	Function	threecomponent	5854:0:186762:186855							
ANR	9009339	FunctionDef	"threecomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		9009338	0					
ANR	9009340	CompoundStatement		5855:0:186827:186855	9009338	0					
ANR	9009341	ExpressionStatement	* n = 3	5856:4:186833:186839	9009338	0	True				
ANR	9009342	AssignmentExpression	* n = 3		9009338	0		=			
ANR	9009343	UnaryOperationExpression	* n		9009338	0					
ANR	9009344	UnaryOperator	*		9009338	0					
ANR	9009345	Identifier	n		9009338	1					
ANR	9009346	PrimaryExpression	3		9009338	1					
ANR	9009347	ReturnStatement	return 0 ;	5857:4:186845:186853	9009338	1	True				
ANR	9009348	PrimaryExpression	0		9009338	0					
ANR	9009349	ReturnType	static int		9009338	1					
ANR	9009350	Identifier	threecomponent		9009338	2					
ANR	9009351	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		9009338	3					
ANR	9009352	Parameter	i_ctx_t * i_ctx_p	5854:26:186788:186804	9009338	0	True				
ANR	9009353	ParameterType	i_ctx_t *		9009338	0					
ANR	9009354	Identifier	i_ctx_p		9009338	1					
ANR	9009355	Parameter	ref * space	5854:45:186807:186816	9009338	1	True				
ANR	9009356	ParameterType	ref *		9009338	0					
ANR	9009357	Identifier	space		9009338	1					
ANR	9009358	Parameter	int * n	5854:57:186819:186824	9009338	2	True				
ANR	9009359	ParameterType	int *		9009338	0					
ANR	9009360	Identifier	n		9009338	1					
ANR	9009361	CFGEntryNode	ENTRY		9009338		True				
ANR	9009362	CFGExitNode	EXIT		9009338		True				
ANR	9009363	Symbol	i_ctx_p		9009338						
ANR	9009364	Symbol	* n		9009338						
ANR	9009365	Symbol	space		9009338						
ANR	9009366	Symbol	n		9009338						
ANR	9009367	Function	fourcomponent	5859:0:186857:186949							
ANR	9009368	FunctionDef	"fourcomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		9009367	0					
ANR	9009369	CompoundStatement		5860:0:186921:186949	9009367	0					
ANR	9009370	ExpressionStatement	* n = 4	5861:4:186927:186933	9009367	0	True				
ANR	9009371	AssignmentExpression	* n = 4		9009367	0		=			
ANR	9009372	UnaryOperationExpression	* n		9009367	0					
ANR	9009373	UnaryOperator	*		9009367	0					
ANR	9009374	Identifier	n		9009367	1					
ANR	9009375	PrimaryExpression	4		9009367	1					
ANR	9009376	ReturnStatement	return 0 ;	5862:4:186939:186947	9009367	1	True				
ANR	9009377	PrimaryExpression	0		9009367	0					
ANR	9009378	ReturnType	static int		9009367	1					
ANR	9009379	Identifier	fourcomponent		9009367	2					
ANR	9009380	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		9009367	3					
ANR	9009381	Parameter	i_ctx_t * i_ctx_p	5859:25:186882:186898	9009367	0	True				
ANR	9009382	ParameterType	i_ctx_t *		9009367	0					
ANR	9009383	Identifier	i_ctx_p		9009367	1					
ANR	9009384	Parameter	ref * space	5859:44:186901:186910	9009367	1	True				
ANR	9009385	ParameterType	ref *		9009367	0					
ANR	9009386	Identifier	space		9009367	1					
ANR	9009387	Parameter	int * n	5859:56:186913:186918	9009367	2	True				
ANR	9009388	ParameterType	int *		9009367	0					
ANR	9009389	Identifier	n		9009367	1					
ANR	9009390	CFGEntryNode	ENTRY		9009367		True				
ANR	9009391	CFGExitNode	EXIT		9009367		True				
ANR	9009392	Symbol	i_ctx_p		9009367						
ANR	9009393	Symbol	* n		9009367						
ANR	9009394	Symbol	space		9009367						
ANR	9009395	Symbol	n		9009367						
ANR	9009396	Function	truecompareproc	5864:0:186951:187040							
ANR	9009397	FunctionDef	"truecompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		9009396	0					
ANR	9009398	CompoundStatement		5865:0:187024:187040	9009396	0					
ANR	9009399	ReturnStatement	return 1 ;	5866:4:187030:187038	9009396	0	True				
ANR	9009400	PrimaryExpression	1		9009396	0					
ANR	9009401	ReturnType	static int		9009396	1					
ANR	9009402	Identifier	truecompareproc		9009396	2					
ANR	9009403	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		9009396	3					
ANR	9009404	Parameter	i_ctx_t * i_ctx_p	5864:27:186978:186993	9009396	0	True				
ANR	9009405	ParameterType	i_ctx_t *		9009396	0					
ANR	9009406	Identifier	i_ctx_p		9009396	1					
ANR	9009407	Parameter	ref * space	5864:45:186996:187005	9009396	1	True				
ANR	9009408	ParameterType	ref *		9009396	0					
ANR	9009409	Identifier	space		9009396	1					
ANR	9009410	Parameter	ref * testspace	5864:57:187008:187021	9009396	2	True				
ANR	9009411	ParameterType	ref *		9009396	0					
ANR	9009412	Identifier	testspace		9009396	1					
ANR	9009413	CFGEntryNode	ENTRY		9009396		True				
ANR	9009414	CFGExitNode	EXIT		9009396		True				
ANR	9009415	Symbol	testspace		9009396						
ANR	9009416	Symbol	i_ctx_p		9009396						
ANR	9009417	Symbol	space		9009396						
ANR	9009418	Function	falsecompareproc	5868:0:187042:187132							
ANR	9009419	FunctionDef	"falsecompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		9009418	0					
ANR	9009420	CompoundStatement		5869:0:187116:187132	9009418	0					
ANR	9009421	ReturnStatement	return 0 ;	5870:4:187122:187130	9009418	0	True				
ANR	9009422	PrimaryExpression	0		9009418	0					
ANR	9009423	ReturnType	static int		9009418	1					
ANR	9009424	Identifier	falsecompareproc		9009418	2					
ANR	9009425	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		9009418	3					
ANR	9009426	Parameter	i_ctx_t * i_ctx_p	5868:28:187070:187085	9009418	0	True				
ANR	9009427	ParameterType	i_ctx_t *		9009418	0					
ANR	9009428	Identifier	i_ctx_p		9009418	1					
ANR	9009429	Parameter	ref * space	5868:46:187088:187097	9009418	1	True				
ANR	9009430	ParameterType	ref *		9009418	0					
ANR	9009431	Identifier	space		9009418	1					
ANR	9009432	Parameter	ref * testspace	5868:58:187100:187113	9009418	2	True				
ANR	9009433	ParameterType	ref *		9009418	0					
ANR	9009434	Identifier	testspace		9009418	1					
ANR	9009435	CFGEntryNode	ENTRY		9009418		True				
ANR	9009436	CFGExitNode	EXIT		9009418		True				
ANR	9009437	Symbol	testspace		9009418						
ANR	9009438	Symbol	i_ctx_p		9009418						
ANR	9009439	Symbol	space		9009418						
ANR	9009440	DeclStmt									
ANR	9009441	Decl							PS_colour_space_t	PS_colour_space_t [ ]	colorProcs
ANR	9009442	Function	get_space_object	5911:0:190051:191018							
ANR	9009443	FunctionDef	"get_space_object (i_ctx_t * i_ctx_p , ref * arr , PS_colour_space_t * * obj)"		9009442	0					
ANR	9009444	CompoundStatement		5912:0:190125:191018	9009442	0					
ANR	9009445	IdentifierDeclStatement	"ref spacename , nref ;"	5913:4:190131:190150	9009442	0	True				
ANR	9009446	IdentifierDecl	spacename		9009442	0					
ANR	9009447	IdentifierDeclType	ref		9009442	0					
ANR	9009448	Identifier	spacename		9009442	1					
ANR	9009449	IdentifierDecl	nref		9009442	1					
ANR	9009450	IdentifierDeclType	ref		9009442	0					
ANR	9009451	Identifier	nref		9009442	1					
ANR	9009452	IdentifierDeclStatement	"int i , nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t ) , code ;"	5914:4:190156:190224	9009442	1	True				
ANR	9009453	IdentifierDecl	i		9009442	0					
ANR	9009454	IdentifierDeclType	int		9009442	0					
ANR	9009455	Identifier	i		9009442	1					
ANR	9009456	IdentifierDecl	nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		9009442	1					
ANR	9009457	IdentifierDeclType	int		9009442	0					
ANR	9009458	Identifier	nprocs		9009442	1					
ANR	9009459	AssignmentExpression	nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		9009442	2		=			
ANR	9009460	Identifier	nprocs		9009442	0					
ANR	9009461	MultiplicativeExpression	sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		9009442	1		/			
ANR	9009462	SizeofExpression	sizeof ( colorProcs )		9009442	0					
ANR	9009463	Sizeof	sizeof		9009442	0					
ANR	9009464	SizeofOperand	colorProcs		9009442	1					
ANR	9009465	SizeofExpression	sizeof ( PS_colour_space_t )		9009442	1					
ANR	9009466	Sizeof	sizeof		9009442	0					
ANR	9009467	SizeofOperand	PS_colour_space_t		9009442	1					
ANR	9009468	IdentifierDecl	code		9009442	2					
ANR	9009469	IdentifierDeclType	int		9009442	0					
ANR	9009470	Identifier	code		9009442	1					
ANR	9009471	IfStatement	if ( r_is_array ( arr ) )		9009442	2					
ANR	9009472	Condition	r_is_array ( arr )	5917:8:190309:190323	9009442	0	True				
ANR	9009473	CallExpression	r_is_array ( arr )		9009442	0					
ANR	9009474	Callee	r_is_array		9009442	0					
ANR	9009475	Identifier	r_is_array		9009442	0					
ANR	9009476	ArgumentList	arr		9009442	1					
ANR	9009477	Argument	arr		9009442	0					
ANR	9009478	Identifier	arr		9009442	0					
ANR	9009479	CompoundStatement		6:25:200:200	9009442	1					
ANR	9009480	ExpressionStatement	"code = array_get ( imemory , arr , 0 , & spacename )"	5918:8:190336:190381	9009442	0	True				
ANR	9009481	AssignmentExpression	"code = array_get ( imemory , arr , 0 , & spacename )"		9009442	0		=			
ANR	9009482	Identifier	code		9009442	0					
ANR	9009483	CallExpression	"array_get ( imemory , arr , 0 , & spacename )"		9009442	1					
ANR	9009484	Callee	array_get		9009442	0					
ANR	9009485	Identifier	array_get		9009442	0					
ANR	9009486	ArgumentList	imemory		9009442	1					
ANR	9009487	Argument	imemory		9009442	0					
ANR	9009488	Identifier	imemory		9009442	0					
ANR	9009489	Argument	arr		9009442	1					
ANR	9009490	Identifier	arr		9009442	0					
ANR	9009491	Argument	0		9009442	2					
ANR	9009492	PrimaryExpression	0		9009442	0					
ANR	9009493	Argument	& spacename		9009442	3					
ANR	9009494	UnaryOperationExpression	& spacename		9009442	0					
ANR	9009495	UnaryOperator	&		9009442	0					
ANR	9009496	Identifier	spacename		9009442	1					
ANR	9009497	IfStatement	if ( code < 0 )		9009442	1					
ANR	9009498	Condition	code < 0	5919:12:190395:190402	9009442	0	True				
ANR	9009499	RelationalExpression	code < 0		9009442	0		<			
ANR	9009500	Identifier	code		9009442	0					
ANR	9009501	PrimaryExpression	0		9009442	1					
ANR	9009502	ReturnStatement	return code ;	5920:12:190417:190428	9009442	1	True				
ANR	9009503	Identifier	code		9009442	0					
ANR	9009504	ElseStatement	else		9009442	0					
ANR	9009505	ExpressionStatement	"ref_assign ( & spacename , arr )"	5923:8:190453:190480	9009442	0	True				
ANR	9009506	CallExpression	"ref_assign ( & spacename , arr )"		9009442	0					
ANR	9009507	Callee	ref_assign		9009442	0					
ANR	9009508	Identifier	ref_assign		9009442	0					
ANR	9009509	ArgumentList	& spacename		9009442	1					
ANR	9009510	Argument	& spacename		9009442	0					
ANR	9009511	UnaryOperationExpression	& spacename		9009442	0					
ANR	9009512	UnaryOperator	&		9009442	0					
ANR	9009513	Identifier	spacename		9009442	1					
ANR	9009514	Argument	arr		9009442	1					
ANR	9009515	Identifier	arr		9009442	0					
ANR	9009516	IfStatement	"if ( ! r_has_type ( & spacename , t_name ) )"		9009442	3					
ANR	9009517	Condition	"! r_has_type ( & spacename , t_name )"	5926:8:190532:190562	9009442	0	True				
ANR	9009518	UnaryOperationExpression	"! r_has_type ( & spacename , t_name )"		9009442	0					
ANR	9009519	UnaryOperator	!		9009442	0					
ANR	9009520	CallExpression	"r_has_type ( & spacename , t_name )"		9009442	1					
ANR	9009521	Callee	r_has_type		9009442	0					
ANR	9009522	Identifier	r_has_type		9009442	0					
ANR	9009523	ArgumentList	& spacename		9009442	1					
ANR	9009524	Argument	& spacename		9009442	0					
ANR	9009525	UnaryOperationExpression	& spacename		9009442	0					
ANR	9009526	UnaryOperator	&		9009442	0					
ANR	9009527	Identifier	spacename		9009442	1					
ANR	9009528	Argument	t_name		9009442	1					
ANR	9009529	Identifier	t_name		9009442	0					
ANR	9009530	ExpressionStatement	return_error ( gs_error_typecheck )	5927:8:190573:190605	9009442	1	True				
ANR	9009531	CallExpression	return_error ( gs_error_typecheck )		9009442	0					
ANR	9009532	Callee	return_error		9009442	0					
ANR	9009533	Identifier	return_error		9009442	0					
ANR	9009534	ArgumentList	gs_error_typecheck		9009442	1					
ANR	9009535	Argument	gs_error_typecheck		9009442	0					
ANR	9009536	Identifier	gs_error_typecheck		9009442	0					
ANR	9009537	ForStatement	for ( i = 0 ; i < nprocs ; i ++ )		9009442	4					
ANR	9009538	ForInit	i = 0 ;	5930:9:190664:190667	9009442	0	True				
ANR	9009539	AssignmentExpression	i = 0		9009442	0		=			
ANR	9009540	Identifier	i		9009442	0					
ANR	9009541	PrimaryExpression	0		9009442	1					
ANR	9009542	Condition	i < nprocs	5930:13:190668:190675	9009442	1	True				
ANR	9009543	RelationalExpression	i < nprocs		9009442	0		<			
ANR	9009544	Identifier	i		9009442	0					
ANR	9009545	Identifier	nprocs		9009442	1					
ANR	9009546	PostIncDecOperationExpression	i ++	5930:22:190677:190679	9009442	2	True				
ANR	9009547	Identifier	i		9009442	0					
ANR	9009548	IncDec	++		9009442	1					
ANR	9009549	CompoundStatement		19:27:556:556	9009442	3					
ANR	9009550	ExpressionStatement	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"	5931:8:190692:190816	9009442	0	True				
ANR	9009551	AssignmentExpression	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"		9009442	0		=			
ANR	9009552	Identifier	code		9009442	0					
ANR	9009553	CallExpression	"names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"		9009442	1					
ANR	9009554	Callee	names_ref		9009442	0					
ANR	9009555	Identifier	names_ref		9009442	0					
ANR	9009556	ArgumentList	imemory -> gs_lib_ctx -> gs_name_table		9009442	1					
ANR	9009557	Argument	imemory -> gs_lib_ctx -> gs_name_table		9009442	0					
ANR	9009558	PtrMemberAccess	imemory -> gs_lib_ctx -> gs_name_table		9009442	0					
ANR	9009559	PtrMemberAccess	imemory -> gs_lib_ctx		9009442	0					
ANR	9009560	Identifier	imemory		9009442	0					
ANR	9009561	Identifier	gs_lib_ctx		9009442	1					
ANR	9009562	Identifier	gs_name_table		9009442	1					
ANR	9009563	Argument	( const byte * ) colorProcs [ i ] . name		9009442	1					
ANR	9009564	CastExpression	( const byte * ) colorProcs [ i ] . name		9009442	0					
ANR	9009565	CastTarget	const byte *		9009442	0					
ANR	9009566	MemberAccess	colorProcs [ i ] . name		9009442	1					
ANR	9009567	ArrayIndexing	colorProcs [ i ]		9009442	0					
ANR	9009568	Identifier	colorProcs		9009442	0					
ANR	9009569	Identifier	i		9009442	1					
ANR	9009570	Identifier	name		9009442	1					
ANR	9009571	Argument	strlen ( colorProcs [ i ] . name )		9009442	2					
ANR	9009572	CallExpression	strlen ( colorProcs [ i ] . name )		9009442	0					
ANR	9009573	Callee	strlen		9009442	0					
ANR	9009574	Identifier	strlen		9009442	0					
ANR	9009575	ArgumentList	colorProcs [ i ] . name		9009442	1					
ANR	9009576	Argument	colorProcs [ i ] . name		9009442	0					
ANR	9009577	MemberAccess	colorProcs [ i ] . name		9009442	0					
ANR	9009578	ArrayIndexing	colorProcs [ i ]		9009442	0					
ANR	9009579	Identifier	colorProcs		9009442	0					
ANR	9009580	Identifier	i		9009442	1					
ANR	9009581	Identifier	name		9009442	1					
ANR	9009582	Argument	& nref		9009442	3					
ANR	9009583	UnaryOperationExpression	& nref		9009442	0					
ANR	9009584	UnaryOperator	&		9009442	0					
ANR	9009585	Identifier	nref		9009442	1					
ANR	9009586	Argument	0		9009442	4					
ANR	9009587	PrimaryExpression	0		9009442	0					
ANR	9009588	IfStatement	if ( code < 0 )		9009442	1					
ANR	9009589	Condition	code < 0	5932:12:190830:190837	9009442	0	True				
ANR	9009590	RelationalExpression	code < 0		9009442	0		<			
ANR	9009591	Identifier	code		9009442	0					
ANR	9009592	PrimaryExpression	0		9009442	1					
ANR	9009593	ReturnStatement	return code ;	5933:12:190852:190863	9009442	1	True				
ANR	9009594	Identifier	code		9009442	0					
ANR	9009595	IfStatement	"if ( name_eq ( & spacename , & nref ) )"		9009442	2					
ANR	9009596	Condition	"name_eq ( & spacename , & nref )"	5934:12:190877:190902	9009442	0	True				
ANR	9009597	CallExpression	"name_eq ( & spacename , & nref )"		9009442	0					
ANR	9009598	Callee	name_eq		9009442	0					
ANR	9009599	Identifier	name_eq		9009442	0					
ANR	9009600	ArgumentList	& spacename		9009442	1					
ANR	9009601	Argument	& spacename		9009442	0					
ANR	9009602	UnaryOperationExpression	& spacename		9009442	0					
ANR	9009603	UnaryOperator	&		9009442	0					
ANR	9009604	Identifier	spacename		9009442	1					
ANR	9009605	Argument	& nref		9009442	1					
ANR	9009606	UnaryOperationExpression	& nref		9009442	0					
ANR	9009607	UnaryOperator	&		9009442	0					
ANR	9009608	Identifier	nref		9009442	1					
ANR	9009609	CompoundStatement		23:40:779:779	9009442	1					
ANR	9009610	ExpressionStatement	* obj = & colorProcs [ i ]	5935:12:190919:190940	9009442	0	True				
ANR	9009611	AssignmentExpression	* obj = & colorProcs [ i ]		9009442	0		=			
ANR	9009612	UnaryOperationExpression	* obj		9009442	0					
ANR	9009613	UnaryOperator	*		9009442	0					
ANR	9009614	Identifier	obj		9009442	1					
ANR	9009615	UnaryOperationExpression	& colorProcs [ i ]		9009442	1					
ANR	9009616	UnaryOperator	&		9009442	0					
ANR	9009617	ArrayIndexing	colorProcs [ i ]		9009442	1					
ANR	9009618	Identifier	colorProcs		9009442	0					
ANR	9009619	Identifier	i		9009442	1					
ANR	9009620	ReturnStatement	return 0 ;	5936:12:190954:190962	9009442	1	True				
ANR	9009621	PrimaryExpression	0		9009442	0					
ANR	9009622	ExpressionStatement	return_error ( gs_error_undefined )	5939:4:190984:191016	9009442	5	True				
ANR	9009623	CallExpression	return_error ( gs_error_undefined )		9009442	0					
ANR	9009624	Callee	return_error		9009442	0					
ANR	9009625	Identifier	return_error		9009442	0					
ANR	9009626	ArgumentList	gs_error_undefined		9009442	1					
ANR	9009627	Argument	gs_error_undefined		9009442	0					
ANR	9009628	Identifier	gs_error_undefined		9009442	0					
ANR	9009629	ReturnType	int		9009442	1					
ANR	9009630	Identifier	get_space_object		9009442	2					
ANR	9009631	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , PS_colour_space_t * * obj"		9009442	3					
ANR	9009632	Parameter	i_ctx_t * i_ctx_p	5911:21:190072:190087	9009442	0	True				
ANR	9009633	ParameterType	i_ctx_t *		9009442	0					
ANR	9009634	Identifier	i_ctx_p		9009442	1					
ANR	9009635	Parameter	ref * arr	5911:39:190090:190097	9009442	1	True				
ANR	9009636	ParameterType	ref *		9009442	0					
ANR	9009637	Identifier	arr		9009442	1					
ANR	9009638	Parameter	PS_colour_space_t * * obj	5911:49:190100:190122	9009442	2	True				
ANR	9009639	ParameterType	PS_colour_space_t * *		9009442	0					
ANR	9009640	Identifier	obj		9009442	1					
ANR	9009641	CFGEntryNode	ENTRY		9009442		True				
ANR	9009642	CFGExitNode	EXIT		9009442		True				
ANR	9009643	Symbol	* imemory -> gs_lib_ctx		9009442						
ANR	9009644	Symbol	name_eq		9009442						
ANR	9009645	Symbol	code		9009442						
ANR	9009646	Symbol	imemory -> gs_lib_ctx -> gs_name_table		9009442						
ANR	9009647	Symbol	colorProcs [ i ] . name		9009442						
ANR	9009648	Symbol	& spacename		9009442						
ANR	9009649	Symbol	names_ref		9009442						
ANR	9009650	Symbol	gs_error_undefined		9009442						
ANR	9009651	Symbol	imemory -> gs_lib_ctx		9009442						
ANR	9009652	Symbol	& nref		9009442						
ANR	9009653	Symbol	strlen		9009442						
ANR	9009654	Symbol	r_has_type		9009442						
ANR	9009655	Symbol	gs_error_typecheck		9009442						
ANR	9009656	Symbol	nref		9009442						
ANR	9009657	Symbol	t_name		9009442						
ANR	9009658	Symbol	imemory		9009442						
ANR	9009659	Symbol	arr		9009442						
ANR	9009660	Symbol	spacename		9009442						
ANR	9009661	Symbol	* obj		9009442						
ANR	9009662	Symbol	* imemory		9009442						
ANR	9009663	Symbol	array_get		9009442						
ANR	9009664	Symbol	i		9009442						
ANR	9009665	Symbol	colorProcs		9009442						
ANR	9009666	Symbol	* i		9009442						
ANR	9009667	Symbol	i_ctx_p		9009442						
ANR	9009668	Symbol	obj		9009442						
ANR	9009669	Symbol	* colorProcs		9009442						
ANR	9009670	Symbol	* * imemory		9009442						
ANR	9009671	Symbol	nprocs		9009442						
ANR	9009672	Symbol	r_is_array		9009442						
ANR	9009673	Function	validate_spaces	5946:0:191217:191713							
ANR	9009674	FunctionDef	"validate_spaces (i_ctx_t * i_ctx_p , ref * arr , int * depth)"		9009673	0					
ANR	9009675	CompoundStatement		5947:0:191284:191713	9009673	0					
ANR	9009676	IdentifierDeclStatement	"ref space , * sp = & space ;"	5948:4:191290:191313	9009673	0	True				
ANR	9009677	IdentifierDecl	space		9009673	0					
ANR	9009678	IdentifierDeclType	ref		9009673	0					
ANR	9009679	Identifier	space		9009673	1					
ANR	9009680	IdentifierDecl	* sp = & space		9009673	1					
ANR	9009681	IdentifierDeclType	ref *		9009673	0					
ANR	9009682	Identifier	sp		9009673	1					
ANR	9009683	AssignmentExpression	* sp = & space		9009673	2		=			
ANR	9009684	Identifier	sp		9009673	0					
ANR	9009685	UnaryOperationExpression	& space		9009673	1					
ANR	9009686	UnaryOperator	&		9009673	0					
ANR	9009687	Identifier	space		9009673	1					
ANR	9009688	IdentifierDeclStatement	int code = 0 ;	5949:4:191319:191331	9009673	1	True				
ANR	9009689	IdentifierDecl	code = 0		9009673	0					
ANR	9009690	IdentifierDeclType	int		9009673	0					
ANR	9009691	Identifier	code		9009673	1					
ANR	9009692	AssignmentExpression	code = 0		9009673	2		=			
ANR	9009693	Identifier	code		9009673	0					
ANR	9009694	PrimaryExpression	0		9009673	1					
ANR	9009695	IdentifierDeclStatement	PS_colour_space_t * obj ;	5950:4:191337:191359	9009673	2	True				
ANR	9009696	IdentifierDecl	* obj		9009673	0					
ANR	9009697	IdentifierDeclType	PS_colour_space_t *		9009673	0					
ANR	9009698	Identifier	obj		9009673	1					
ANR	9009699	ExpressionStatement	"ref_assign ( & space , arr )"	5952:4:191366:191389	9009673	3	True				
ANR	9009700	CallExpression	"ref_assign ( & space , arr )"		9009673	0					
ANR	9009701	Callee	ref_assign		9009673	0					
ANR	9009702	Identifier	ref_assign		9009673	0					
ANR	9009703	ArgumentList	& space		9009673	1					
ANR	9009704	Argument	& space		9009673	0					
ANR	9009705	UnaryOperationExpression	& space		9009673	0					
ANR	9009706	UnaryOperator	&		9009673	0					
ANR	9009707	Identifier	space		9009673	1					
ANR	9009708	Argument	arr		9009673	1					
ANR	9009709	Identifier	arr		9009673	0					
ANR	9009710	ExpressionStatement	* depth = 0	5953:4:191395:191405	9009673	4	True				
ANR	9009711	AssignmentExpression	* depth = 0		9009673	0		=			
ANR	9009712	UnaryOperationExpression	* depth		9009673	0					
ANR	9009713	UnaryOperator	*		9009673	0					
ANR	9009714	Identifier	depth		9009673	1					
ANR	9009715	PrimaryExpression	0		9009673	1					
ANR	9009716	DoStatement	do		9009673	5					
ANR	9009717	CompoundStatement		8:7:129:129	9009673	0					
ANR	9009718	ExpressionStatement	"code = get_space_object ( i_ctx_p , sp , & obj )"	5955:8:191424:191466	9009673	0	True				
ANR	9009719	AssignmentExpression	"code = get_space_object ( i_ctx_p , sp , & obj )"		9009673	0		=			
ANR	9009720	Identifier	code		9009673	0					
ANR	9009721	CallExpression	"get_space_object ( i_ctx_p , sp , & obj )"		9009673	1					
ANR	9009722	Callee	get_space_object		9009673	0					
ANR	9009723	Identifier	get_space_object		9009673	0					
ANR	9009724	ArgumentList	i_ctx_p		9009673	1					
ANR	9009725	Argument	i_ctx_p		9009673	0					
ANR	9009726	Identifier	i_ctx_p		9009673	0					
ANR	9009727	Argument	sp		9009673	1					
ANR	9009728	Identifier	sp		9009673	0					
ANR	9009729	Argument	& obj		9009673	2					
ANR	9009730	UnaryOperationExpression	& obj		9009673	0					
ANR	9009731	UnaryOperator	&		9009673	0					
ANR	9009732	Identifier	obj		9009673	1					
ANR	9009733	IfStatement	if ( code < 0 )		9009673	1					
ANR	9009734	Condition	code < 0	5956:12:191480:191487	9009673	0	True				
ANR	9009735	RelationalExpression	code < 0		9009673	0		<			
ANR	9009736	Identifier	code		9009673	0					
ANR	9009737	PrimaryExpression	0		9009673	1					
ANR	9009738	ReturnStatement	return code ;	5957:12:191502:191513	9009673	1	True				
ANR	9009739	Identifier	code		9009673	0					
ANR	9009740	ExpressionStatement	( * depth ) ++	5959:8:191524:191534	9009673	2	True				
ANR	9009741	PostIncDecOperationExpression	( * depth ) ++		9009673	0					
ANR	9009742	UnaryOperationExpression	* depth		9009673	0					
ANR	9009743	UnaryOperator	*		9009673	0					
ANR	9009744	Identifier	depth		9009673	1					
ANR	9009745	IncDec	++		9009673	1					
ANR	9009746	IfStatement	if ( ! obj -> validateproc )		9009673	3					
ANR	9009747	Condition	! obj -> validateproc	5960:12:191548:191565	9009673	0	True				
ANR	9009748	UnaryOperationExpression	! obj -> validateproc		9009673	0					
ANR	9009749	UnaryOperator	!		9009673	0					
ANR	9009750	PtrMemberAccess	obj -> validateproc		9009673	1					
ANR	9009751	Identifier	obj		9009673	0					
ANR	9009752	Identifier	validateproc		9009673	1					
ANR	9009753	BreakStatement	break ;	5961:12:191580:191585	9009673	1	True				
ANR	9009754	ExpressionStatement	"code = obj -> validateproc ( i_ctx_p , & sp )"	5963:8:191596:191634	9009673	4	True				
ANR	9009755	AssignmentExpression	"code = obj -> validateproc ( i_ctx_p , & sp )"		9009673	0		=			
ANR	9009756	Identifier	code		9009673	0					
ANR	9009757	CallExpression	"obj -> validateproc ( i_ctx_p , & sp )"		9009673	1					
ANR	9009758	Callee	obj -> validateproc		9009673	0					
ANR	9009759	PtrMemberAccess	obj -> validateproc		9009673	0					
ANR	9009760	Identifier	obj		9009673	0					
ANR	9009761	Identifier	validateproc		9009673	1					
ANR	9009762	ArgumentList	i_ctx_p		9009673	1					
ANR	9009763	Argument	i_ctx_p		9009673	0					
ANR	9009764	Identifier	i_ctx_p		9009673	0					
ANR	9009765	Argument	& sp		9009673	1					
ANR	9009766	UnaryOperationExpression	& sp		9009673	0					
ANR	9009767	UnaryOperator	&		9009673	0					
ANR	9009768	Identifier	sp		9009673	1					
ANR	9009769	IfStatement	if ( code < 0 )		9009673	5					
ANR	9009770	Condition	code < 0	5964:12:191648:191655	9009673	0	True				
ANR	9009771	RelationalExpression	code < 0		9009673	0		<			
ANR	9009772	Identifier	code		9009673	0					
ANR	9009773	PrimaryExpression	0		9009673	1					
ANR	9009774	ReturnStatement	return code ;	5965:12:191670:191681	9009673	1	True				
ANR	9009775	Identifier	code		9009673	0					
ANR	9009776	Condition	sp	5966:11:191694:191695	9009673	1	True				
ANR	9009777	Identifier	sp		9009673	0					
ANR	9009778	ReturnStatement	return 0 ;	5967:4:191703:191711	9009673	6	True				
ANR	9009779	PrimaryExpression	0		9009673	0					
ANR	9009780	ReturnType	static int		9009673	1					
ANR	9009781	Identifier	validate_spaces		9009673	2					
ANR	9009782	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , int * depth"		9009673	3					
ANR	9009783	Parameter	i_ctx_t * i_ctx_p	5946:27:191244:191259	9009673	0	True				
ANR	9009784	ParameterType	i_ctx_t *		9009673	0					
ANR	9009785	Identifier	i_ctx_p		9009673	1					
ANR	9009786	Parameter	ref * arr	5946:45:191262:191269	9009673	1	True				
ANR	9009787	ParameterType	ref *		9009673	0					
ANR	9009788	Identifier	arr		9009673	1					
ANR	9009789	Parameter	int * depth	5946:55:191272:191281	9009673	2	True				
ANR	9009790	ParameterType	int *		9009673	0					
ANR	9009791	Identifier	depth		9009673	1					
ANR	9009792	CFGEntryNode	ENTRY		9009673		True				
ANR	9009793	CFGExitNode	EXIT		9009673		True				
ANR	9009794	Symbol	arr		9009673						
ANR	9009795	Symbol	obj -> validateproc		9009673						
ANR	9009796	Symbol	* obj		9009673						
ANR	9009797	Symbol	code		9009673						
ANR	9009798	Symbol	& sp		9009673						
ANR	9009799	Symbol	get_space_object		9009673						
ANR	9009800	Symbol	space		9009673						
ANR	9009801	Symbol	depth		9009673						
ANR	9009802	Symbol	i_ctx_p		9009673						
ANR	9009803	Symbol	obj		9009673						
ANR	9009804	Symbol	& obj		9009673						
ANR	9009805	Symbol	& space		9009673						
ANR	9009806	Symbol	* depth		9009673						
ANR	9009807	Symbol	sp		9009673						
ANR	9009808	Function	setcolor_cont	5983:0:192575:194950							
ANR	9009809	FunctionDef	setcolor_cont (i_ctx_t * i_ctx_p)		9009808	0					
ANR	9009810	CompoundStatement		5985:0:192618:194950	9009808	0					
ANR	9009811	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	5986:4:192624:192645	9009808	0	True				
ANR	9009812	IdentifierDecl	arr		9009808	0					
ANR	9009813	IdentifierDeclType	ref		9009808	0					
ANR	9009814	Identifier	arr		9009808	1					
ANR	9009815	IdentifierDecl	* parr = & arr		9009808	1					
ANR	9009816	IdentifierDeclType	ref *		9009808	0					
ANR	9009817	Identifier	parr		9009808	1					
ANR	9009818	AssignmentExpression	* parr = & arr		9009808	2		=			
ANR	9009819	Identifier	parr		9009808	0					
ANR	9009820	UnaryOperationExpression	& arr		9009808	1					
ANR	9009821	UnaryOperator	&		9009808	0					
ANR	9009822	Identifier	arr		9009808	1					
ANR	9009823	IdentifierDeclStatement	es_ptr ep = esp ;	5987:4:192651:192666	9009808	1	True				
ANR	9009824	IdentifierDecl	ep = esp		9009808	0					
ANR	9009825	IdentifierDeclType	es_ptr		9009808	0					
ANR	9009826	Identifier	ep		9009808	1					
ANR	9009827	AssignmentExpression	ep = esp		9009808	2		=			
ANR	9009828	Identifier	esp		9009808	0					
ANR	9009829	Identifier	esp		9009808	1					
ANR	9009830	IdentifierDeclStatement	"int i = 0 , code = 0 , usealternate , stage , stack_depth , CIESubst = 0 , IsICC = 0 ;"	5988:4:192672:192748	9009808	2	True				
ANR	9009831	IdentifierDecl	i = 0		9009808	0					
ANR	9009832	IdentifierDeclType	int		9009808	0					
ANR	9009833	Identifier	i		9009808	1					
ANR	9009834	AssignmentExpression	i = 0		9009808	2		=			
ANR	9009835	Identifier	i		9009808	0					
ANR	9009836	PrimaryExpression	0		9009808	1					
ANR	9009837	IdentifierDecl	code = 0		9009808	1					
ANR	9009838	IdentifierDeclType	int		9009808	0					
ANR	9009839	Identifier	code		9009808	1					
ANR	9009840	AssignmentExpression	code = 0		9009808	2		=			
ANR	9009841	Identifier	code		9009808	0					
ANR	9009842	PrimaryExpression	0		9009808	1					
ANR	9009843	IdentifierDecl	usealternate		9009808	2					
ANR	9009844	IdentifierDeclType	int		9009808	0					
ANR	9009845	Identifier	usealternate		9009808	1					
ANR	9009846	IdentifierDecl	stage		9009808	3					
ANR	9009847	IdentifierDeclType	int		9009808	0					
ANR	9009848	Identifier	stage		9009808	1					
ANR	9009849	IdentifierDecl	stack_depth		9009808	4					
ANR	9009850	IdentifierDeclType	int		9009808	0					
ANR	9009851	Identifier	stack_depth		9009808	1					
ANR	9009852	IdentifierDecl	CIESubst = 0		9009808	5					
ANR	9009853	IdentifierDeclType	int		9009808	0					
ANR	9009854	Identifier	CIESubst		9009808	1					
ANR	9009855	AssignmentExpression	CIESubst = 0		9009808	2		=			
ANR	9009856	Identifier	CIESubst		9009808	0					
ANR	9009857	PrimaryExpression	0		9009808	1					
ANR	9009858	IdentifierDecl	IsICC = 0		9009808	6					
ANR	9009859	IdentifierDeclType	int		9009808	0					
ANR	9009860	Identifier	IsICC		9009808	1					
ANR	9009861	AssignmentExpression	IsICC = 0		9009808	2		=			
ANR	9009862	Identifier	IsICC		9009808	0					
ANR	9009863	PrimaryExpression	0		9009808	1					
ANR	9009864	IdentifierDeclStatement	unsigned int depth ;	5989:4:192754:192772	9009808	3	True				
ANR	9009865	IdentifierDecl	depth		9009808	0					
ANR	9009866	IdentifierDeclType	unsigned int		9009808	0					
ANR	9009867	Identifier	depth		9009808	1					
ANR	9009868	IdentifierDeclStatement	PS_colour_space_t * obj ;	5990:4:192778:192800	9009808	4	True				
ANR	9009869	IdentifierDecl	* obj		9009808	0					
ANR	9009870	IdentifierDeclType	PS_colour_space_t *		9009808	0					
ANR	9009871	Identifier	obj		9009808	1					
ANR	9009872	ExpressionStatement	stack_depth = ( int ) ep [ - 3 ] . value . intval	5992:4:192807:192845	9009808	5	True				
ANR	9009873	AssignmentExpression	stack_depth = ( int ) ep [ - 3 ] . value . intval		9009808	0		=			
ANR	9009874	Identifier	stack_depth		9009808	0					
ANR	9009875	CastExpression	( int ) ep [ - 3 ] . value . intval		9009808	1					
ANR	9009876	CastTarget	int		9009808	0					
ANR	9009877	MemberAccess	ep [ - 3 ] . value . intval		9009808	1					
ANR	9009878	MemberAccess	ep [ - 3 ] . value		9009808	0					
ANR	9009879	ArrayIndexing	ep [ - 3 ]		9009808	0					
ANR	9009880	Identifier	ep		9009808	0					
ANR	9009881	UnaryOperationExpression	- 3		9009808	1					
ANR	9009882	UnaryOperator	-		9009808	0					
ANR	9009883	PrimaryExpression	3		9009808	1					
ANR	9009884	Identifier	value		9009808	1					
ANR	9009885	Identifier	intval		9009808	1					
ANR	9009886	ExpressionStatement	depth = ( unsigned int ) ep [ - 2 ] . value . intval	5993:4:192851:192892	9009808	6	True				
ANR	9009887	AssignmentExpression	depth = ( unsigned int ) ep [ - 2 ] . value . intval		9009808	0		=			
ANR	9009888	Identifier	depth		9009808	0					
ANR	9009889	CastExpression	( unsigned int ) ep [ - 2 ] . value . intval		9009808	1					
ANR	9009890	CastTarget	unsigned int		9009808	0					
ANR	9009891	MemberAccess	ep [ - 2 ] . value . intval		9009808	1					
ANR	9009892	MemberAccess	ep [ - 2 ] . value		9009808	0					
ANR	9009893	ArrayIndexing	ep [ - 2 ]		9009808	0					
ANR	9009894	Identifier	ep		9009808	0					
ANR	9009895	UnaryOperationExpression	- 2		9009808	1					
ANR	9009896	UnaryOperator	-		9009808	0					
ANR	9009897	PrimaryExpression	2		9009808	1					
ANR	9009898	Identifier	value		9009808	1					
ANR	9009899	Identifier	intval		9009808	1					
ANR	9009900	ExpressionStatement	stage = ( int ) ep [ - 1 ] . value . intval	5994:4:192898:192930	9009808	7	True				
ANR	9009901	AssignmentExpression	stage = ( int ) ep [ - 1 ] . value . intval		9009808	0		=			
ANR	9009902	Identifier	stage		9009808	0					
ANR	9009903	CastExpression	( int ) ep [ - 1 ] . value . intval		9009808	1					
ANR	9009904	CastTarget	int		9009808	0					
ANR	9009905	MemberAccess	ep [ - 1 ] . value . intval		9009808	1					
ANR	9009906	MemberAccess	ep [ - 1 ] . value		9009808	0					
ANR	9009907	ArrayIndexing	ep [ - 1 ]		9009808	0					
ANR	9009908	Identifier	ep		9009808	0					
ANR	9009909	UnaryOperationExpression	- 1		9009808	1					
ANR	9009910	UnaryOperator	-		9009808	0					
ANR	9009911	PrimaryExpression	1		9009808	1					
ANR	9009912	Identifier	value		9009808	1					
ANR	9009913	Identifier	intval		9009808	1					
ANR	9009914	ExpressionStatement	check_estack ( 1 )	5999:4:193180:193195	9009808	8	True				
ANR	9009915	CallExpression	check_estack ( 1 )		9009808	0					
ANR	9009916	Callee	check_estack		9009808	0					
ANR	9009917	Identifier	check_estack		9009808	0					
ANR	9009918	ArgumentList	1		9009808	1					
ANR	9009919	Argument	1		9009808	0					
ANR	9009920	PrimaryExpression	1		9009808	0					
ANR	9009921	ExpressionStatement	push_op_estack ( setcolor_cont )	6000:4:193201:193230	9009808	9	True				
ANR	9009922	CallExpression	push_op_estack ( setcolor_cont )		9009808	0					
ANR	9009923	Callee	push_op_estack		9009808	0					
ANR	9009924	Identifier	push_op_estack		9009808	0					
ANR	9009925	ArgumentList	setcolor_cont		9009808	1					
ANR	9009926	Argument	setcolor_cont		9009808	0					
ANR	9009927	Identifier	setcolor_cont		9009808	0					
ANR	9009928	WhileStatement	while ( code == 0 )		9009808	10					
ANR	9009929	Condition	code == 0	6002:11:193244:193252	9009808	0	True				
ANR	9009930	EqualityExpression	code == 0		9009808	0		==			
ANR	9009931	Identifier	code		9009808	0					
ANR	9009932	PrimaryExpression	0		9009808	1					
ANR	9009933	CompoundStatement		18:22:636:636	9009808	1					
ANR	9009934	ExpressionStatement	"ref_assign ( & arr , ep )"	6003:8:193265:193285	9009808	0	True				
ANR	9009935	CallExpression	"ref_assign ( & arr , ep )"		9009808	0					
ANR	9009936	Callee	ref_assign		9009808	0					
ANR	9009937	Identifier	ref_assign		9009808	0					
ANR	9009938	ArgumentList	& arr		9009808	1					
ANR	9009939	Argument	& arr		9009808	0					
ANR	9009940	UnaryOperationExpression	& arr		9009808	0					
ANR	9009941	UnaryOperator	&		9009808	0					
ANR	9009942	Identifier	arr		9009808	1					
ANR	9009943	Argument	ep		9009808	1					
ANR	9009944	Identifier	ep		9009808	0					
ANR	9009945	ForStatement	for ( i = 0 ; i <= depth ; i ++ )		9009808	1					
ANR	9009946	ForInit	i = 0 ;	6007:13:193447:193450	9009808	0	True				
ANR	9009947	AssignmentExpression	i = 0		9009808	0		=			
ANR	9009948	Identifier	i		9009808	0					
ANR	9009949	PrimaryExpression	0		9009808	1					
ANR	9009950	Condition	i <= depth	6007:17:193451:193458	9009808	1	True				
ANR	9009951	RelationalExpression	i <= depth		9009808	0		<=			
ANR	9009952	Identifier	i		9009808	0					
ANR	9009953	Identifier	depth		9009808	1					
ANR	9009954	PostIncDecOperationExpression	i ++	6007:26:193460:193462	9009808	2	True				
ANR	9009955	Identifier	i		9009808	0					
ANR	9009956	IncDec	++		9009808	1					
ANR	9009957	CompoundStatement		23:31:846:846	9009808	3					
ANR	9009958	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6008:12:193479:193523	9009808	0	True				
ANR	9009959	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		9009808	0		=			
ANR	9009960	Identifier	code		9009808	0					
ANR	9009961	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		9009808	1					
ANR	9009962	Callee	get_space_object		9009808	0					
ANR	9009963	Identifier	get_space_object		9009808	0					
ANR	9009964	ArgumentList	i_ctx_p		9009808	1					
ANR	9009965	Argument	i_ctx_p		9009808	0					
ANR	9009966	Identifier	i_ctx_p		9009808	0					
ANR	9009967	Argument	parr		9009808	1					
ANR	9009968	Identifier	parr		9009808	0					
ANR	9009969	Argument	& obj		9009808	2					
ANR	9009970	UnaryOperationExpression	& obj		9009808	0					
ANR	9009971	UnaryOperator	&		9009808	0					
ANR	9009972	Identifier	obj		9009808	1					
ANR	9009973	IfStatement	if ( code < 0 )		9009808	1					
ANR	9009974	Condition	code < 0	6009:16:193541:193548	9009808	0	True				
ANR	9009975	RelationalExpression	code < 0		9009808	0		<			
ANR	9009976	Identifier	code		9009808	0					
ANR	9009977	PrimaryExpression	0		9009808	1					
ANR	9009978	ReturnStatement	return code ;	6010:16:193567:193578	9009808	1	True				
ANR	9009979	Identifier	code		9009808	0					
ANR	9009980	IfStatement	"if ( strcmp ( obj -> name , ""ICCBased"" ) == 0 )"		9009808	2					
ANR	9009981	Condition	"strcmp ( obj -> name , ""ICCBased"" ) == 0"	6012:16:193597:193630	9009808	0	True				
ANR	9009982	EqualityExpression	"strcmp ( obj -> name , ""ICCBased"" ) == 0"		9009808	0		==			
ANR	9009983	CallExpression	"strcmp ( obj -> name , ""ICCBased"" )"		9009808	0					
ANR	9009984	Callee	strcmp		9009808	0					
ANR	9009985	Identifier	strcmp		9009808	0					
ANR	9009986	ArgumentList	obj -> name		9009808	1					
ANR	9009987	Argument	obj -> name		9009808	0					
ANR	9009988	PtrMemberAccess	obj -> name		9009808	0					
ANR	9009989	Identifier	obj		9009808	0					
ANR	9009990	Identifier	name		9009808	1					
ANR	9009991	Argument	"""ICCBased"""		9009808	1					
ANR	9009992	PrimaryExpression	"""ICCBased"""		9009808	0					
ANR	9009993	PrimaryExpression	0		9009808	1					
ANR	9009994	ExpressionStatement	IsICC = 1	6013:16:193649:193658	9009808	1	True				
ANR	9009995	AssignmentExpression	IsICC = 1		9009808	0		=			
ANR	9009996	Identifier	IsICC		9009808	0					
ANR	9009997	PrimaryExpression	1		9009808	1					
ANR	9009998	IfStatement	if ( i < ( depth ) )		9009808	3					
ANR	9009999	Condition	i < ( depth )	6015:16:193677:193687	9009808	0	True				
ANR	9010000	RelationalExpression	i < ( depth )		9009808	0		<			
ANR	9010001	Identifier	i		9009808	0					
ANR	9010002	Identifier	depth		9009808	1					
ANR	9010003	CompoundStatement		31:29:1071:1071	9009808	1					
ANR	9010004	IfStatement	if ( ! obj -> alternateproc )		9009808	0					
ANR	9010005	Condition	! obj -> alternateproc	6016:20:193712:193730	9009808	0	True				
ANR	9010006	UnaryOperationExpression	! obj -> alternateproc		9009808	0					
ANR	9010007	UnaryOperator	!		9009808	0					
ANR	9010008	PtrMemberAccess	obj -> alternateproc		9009808	1					
ANR	9010009	Identifier	obj		9009808	0					
ANR	9010010	Identifier	alternateproc		9009808	1					
ANR	9010011	CompoundStatement		32:41:1114:1114	9009808	1					
ANR	9010012	ExpressionStatement	return_error ( gs_error_typecheck )	6017:20:193755:193787	9009808	0	True				
ANR	9010013	CallExpression	return_error ( gs_error_typecheck )		9009808	0					
ANR	9010014	Callee	return_error		9009808	0					
ANR	9010015	Identifier	return_error		9009808	0					
ANR	9010016	ArgumentList	gs_error_typecheck		9009808	1					
ANR	9010017	Argument	gs_error_typecheck		9009808	0					
ANR	9010018	Identifier	gs_error_typecheck		9009808	0					
ANR	9010019	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6019:16:193823:193881	9009808	1	True				
ANR	9010020	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9009808	0		=			
ANR	9010021	Identifier	code		9009808	0					
ANR	9010022	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9009808	1					
ANR	9010023	Callee	obj -> alternateproc		9009808	0					
ANR	9010024	PtrMemberAccess	obj -> alternateproc		9009808	0					
ANR	9010025	Identifier	obj		9009808	0					
ANR	9010026	Identifier	alternateproc		9009808	1					
ANR	9010027	ArgumentList	i_ctx_p		9009808	1					
ANR	9010028	Argument	i_ctx_p		9009808	0					
ANR	9010029	Identifier	i_ctx_p		9009808	0					
ANR	9010030	Argument	parr		9009808	1					
ANR	9010031	Identifier	parr		9009808	0					
ANR	9010032	Argument	& parr		9009808	2					
ANR	9010033	UnaryOperationExpression	& parr		9009808	0					
ANR	9010034	UnaryOperator	&		9009808	0					
ANR	9010035	Identifier	parr		9009808	1					
ANR	9010036	Argument	& CIESubst		9009808	3					
ANR	9010037	UnaryOperationExpression	& CIESubst		9009808	0					
ANR	9010038	UnaryOperator	&		9009808	0					
ANR	9010039	Identifier	CIESubst		9009808	1					
ANR	9010040	IfStatement	if ( code < 0 )		9009808	2					
ANR	9010041	Condition	code < 0	6020:20:193903:193910	9009808	0	True				
ANR	9010042	RelationalExpression	code < 0		9009808	0		<			
ANR	9010043	Identifier	code		9009808	0					
ANR	9010044	PrimaryExpression	0		9009808	1					
ANR	9010045	ReturnStatement	return code ;	6021:20:193933:193944	9009808	1	True				
ANR	9010046	Identifier	code		9009808	0					
ANR	9010047	IfStatement	if ( obj -> runtransformproc )		9009808	2					
ANR	9010048	Condition	obj -> runtransformproc	6024:12:193982:194002	9009808	0	True				
ANR	9010049	PtrMemberAccess	obj -> runtransformproc		9009808	0					
ANR	9010050	Identifier	obj		9009808	0					
ANR	9010051	Identifier	runtransformproc		9009808	1					
ANR	9010052	CompoundStatement		40:35:1386:1386	9009808	1					
ANR	9010053	ExpressionStatement	"code = obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"	6025:12:194019:194123	9009808	0	True				
ANR	9010054	AssignmentExpression	"code = obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"		9009808	0		=			
ANR	9010055	Identifier	code		9009808	0					
ANR	9010056	CallExpression	"obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"		9009808	1					
ANR	9010057	Callee	obj -> runtransformproc		9009808	0					
ANR	9010058	PtrMemberAccess	obj -> runtransformproc		9009808	0					
ANR	9010059	Identifier	obj		9009808	0					
ANR	9010060	Identifier	runtransformproc		9009808	1					
ANR	9010061	ArgumentList	i_ctx_p		9009808	1					
ANR	9010062	Argument	i_ctx_p		9009808	0					
ANR	9010063	Identifier	i_ctx_p		9009808	0					
ANR	9010064	Argument	& istate -> colorspace [ 0 ] . array		9009808	1					
ANR	9010065	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		9009808	0					
ANR	9010066	UnaryOperator	&		9009808	0					
ANR	9010067	MemberAccess	istate -> colorspace [ 0 ] . array		9009808	1					
ANR	9010068	ArrayIndexing	istate -> colorspace [ 0 ]		9009808	0					
ANR	9010069	PtrMemberAccess	istate -> colorspace		9009808	0					
ANR	9010070	Identifier	istate		9009808	0					
ANR	9010071	Identifier	colorspace		9009808	1					
ANR	9010072	PrimaryExpression	0		9009808	1					
ANR	9010073	Identifier	array		9009808	1					
ANR	9010074	Argument	& usealternate		9009808	2					
ANR	9010075	UnaryOperationExpression	& usealternate		9009808	0					
ANR	9010076	UnaryOperator	&		9009808	0					
ANR	9010077	Identifier	usealternate		9009808	1					
ANR	9010078	Argument	& stage		9009808	3					
ANR	9010079	UnaryOperationExpression	& stage		9009808	0					
ANR	9010080	UnaryOperator	&		9009808	0					
ANR	9010081	Identifier	stage		9009808	1					
ANR	9010082	Argument	& stack_depth		9009808	4					
ANR	9010083	UnaryOperationExpression	& stack_depth		9009808	0					
ANR	9010084	UnaryOperator	&		9009808	0					
ANR	9010085	Identifier	stack_depth		9009808	1					
ANR	9010086	ExpressionStatement	"make_int ( & ep [ - 3 ] , stack_depth )"	6026:12:194137:194167	9009808	1	True				
ANR	9010087	CallExpression	"make_int ( & ep [ - 3 ] , stack_depth )"		9009808	0					
ANR	9010088	Callee	make_int		9009808	0					
ANR	9010089	Identifier	make_int		9009808	0					
ANR	9010090	ArgumentList	& ep [ - 3 ]		9009808	1					
ANR	9010091	Argument	& ep [ - 3 ]		9009808	0					
ANR	9010092	UnaryOperationExpression	& ep [ - 3 ]		9009808	0					
ANR	9010093	UnaryOperator	&		9009808	0					
ANR	9010094	ArrayIndexing	ep [ - 3 ]		9009808	1					
ANR	9010095	Identifier	ep		9009808	0					
ANR	9010096	UnaryOperationExpression	- 3		9009808	1					
ANR	9010097	UnaryOperator	-		9009808	0					
ANR	9010098	PrimaryExpression	3		9009808	1					
ANR	9010099	Argument	stack_depth		9009808	1					
ANR	9010100	Identifier	stack_depth		9009808	0					
ANR	9010101	ExpressionStatement	"make_int ( & ep [ - 1 ] , stage )"	6027:12:194181:194205	9009808	2	True				
ANR	9010102	CallExpression	"make_int ( & ep [ - 1 ] , stage )"		9009808	0					
ANR	9010103	Callee	make_int		9009808	0					
ANR	9010104	Identifier	make_int		9009808	0					
ANR	9010105	ArgumentList	& ep [ - 1 ]		9009808	1					
ANR	9010106	Argument	& ep [ - 1 ]		9009808	0					
ANR	9010107	UnaryOperationExpression	& ep [ - 1 ]		9009808	0					
ANR	9010108	UnaryOperator	&		9009808	0					
ANR	9010109	ArrayIndexing	ep [ - 1 ]		9009808	1					
ANR	9010110	Identifier	ep		9009808	0					
ANR	9010111	UnaryOperationExpression	- 1		9009808	1					
ANR	9010112	UnaryOperator	-		9009808	0					
ANR	9010113	PrimaryExpression	1		9009808	1					
ANR	9010114	Argument	stage		9009808	1					
ANR	9010115	Identifier	stage		9009808	0					
ANR	9010116	IfStatement	if ( code != 0 )		9009808	3					
ANR	9010117	Condition	code != 0	6028:16:194223:194231	9009808	0	True				
ANR	9010118	EqualityExpression	code != 0		9009808	0		!=			
ANR	9010119	Identifier	code		9009808	0					
ANR	9010120	PrimaryExpression	0		9009808	1					
ANR	9010121	CompoundStatement		44:27:1615:1615	9009808	1					
ANR	9010122	ReturnStatement	return code ;	6029:16:194252:194263	9009808	0	True				
ANR	9010123	Identifier	code		9009808	0					
ANR	9010124	ExpressionStatement	"make_int ( & ep [ - 2 ] , ++ depth )"	6031:12:194291:194317	9009808	4	True				
ANR	9010125	CallExpression	"make_int ( & ep [ - 2 ] , ++ depth )"		9009808	0					
ANR	9010126	Callee	make_int		9009808	0					
ANR	9010127	Identifier	make_int		9009808	0					
ANR	9010128	ArgumentList	& ep [ - 2 ]		9009808	1					
ANR	9010129	Argument	& ep [ - 2 ]		9009808	0					
ANR	9010130	UnaryOperationExpression	& ep [ - 2 ]		9009808	0					
ANR	9010131	UnaryOperator	&		9009808	0					
ANR	9010132	ArrayIndexing	ep [ - 2 ]		9009808	1					
ANR	9010133	Identifier	ep		9009808	0					
ANR	9010134	UnaryOperationExpression	- 2		9009808	1					
ANR	9010135	UnaryOperator	-		9009808	0					
ANR	9010136	PrimaryExpression	2		9009808	1					
ANR	9010137	Argument	++ depth		9009808	1					
ANR	9010138	UnaryExpression	++ depth		9009808	0					
ANR	9010139	IncDec	++		9009808	0					
ANR	9010140	Identifier	depth		9009808	1					
ANR	9010141	IfStatement	if ( ! usealternate )		9009808	5					
ANR	9010142	Condition	! usealternate	6032:16:194335:194347	9009808	0	True				
ANR	9010143	UnaryOperationExpression	! usealternate		9009808	0					
ANR	9010144	UnaryOperator	!		9009808	0					
ANR	9010145	Identifier	usealternate		9009808	1					
ANR	9010146	BreakStatement	break ;	6033:16:194366:194371	9009808	1	True				
ANR	9010147	ElseStatement	else		9009808	0					
ANR	9010148	BreakStatement	break ;	6035:12:194400:194405	9009808	0	True				
ANR	9010149	IfStatement	if ( IsICC && depth == 0 )		9009808	11					
ANR	9010150	Condition	IsICC && depth == 0	6042:8:194680:194698	9009808	0	True				
ANR	9010151	AndExpression	IsICC && depth == 0		9009808	0		&&			
ANR	9010152	Identifier	IsICC		9009808	0					
ANR	9010153	EqualityExpression	depth == 0		9009808	1		==			
ANR	9010154	Identifier	depth		9009808	0					
ANR	9010155	PrimaryExpression	0		9009808	1					
ANR	9010156	CompoundStatement		58:29:2082:2082	9009808	1					
ANR	9010157	ExpressionStatement	code = gx_set_dev_color ( i_ctx_p -> pgs )	6043:8:194711:194748	9009808	0	True				
ANR	9010158	AssignmentExpression	code = gx_set_dev_color ( i_ctx_p -> pgs )		9009808	0		=			
ANR	9010159	Identifier	code		9009808	0					
ANR	9010160	CallExpression	gx_set_dev_color ( i_ctx_p -> pgs )		9009808	1					
ANR	9010161	Callee	gx_set_dev_color		9009808	0					
ANR	9010162	Identifier	gx_set_dev_color		9009808	0					
ANR	9010163	ArgumentList	i_ctx_p -> pgs		9009808	1					
ANR	9010164	Argument	i_ctx_p -> pgs		9009808	0					
ANR	9010165	PtrMemberAccess	i_ctx_p -> pgs		9009808	0					
ANR	9010166	Identifier	i_ctx_p		9009808	0					
ANR	9010167	Identifier	pgs		9009808	1					
ANR	9010168	IfStatement	if ( code < 0 )		9009808	1					
ANR	9010169	Condition	code < 0	6044:12:194762:194769	9009808	0	True				
ANR	9010170	RelationalExpression	code < 0		9009808	0		<			
ANR	9010171	Identifier	code		9009808	0					
ANR	9010172	PrimaryExpression	0		9009808	1					
ANR	9010173	ReturnStatement	return code ;	6045:12:194784:194795	9009808	1	True				
ANR	9010174	Identifier	code		9009808	0					
ANR	9010175	ExpressionStatement	"obj -> numcomponents ( i_ctx_p , parr , & i )"	6049:4:194860:194897	9009808	12	True				
ANR	9010176	CallExpression	"obj -> numcomponents ( i_ctx_p , parr , & i )"		9009808	0					
ANR	9010177	Callee	obj -> numcomponents		9009808	0					
ANR	9010178	PtrMemberAccess	obj -> numcomponents		9009808	0					
ANR	9010179	Identifier	obj		9009808	0					
ANR	9010180	Identifier	numcomponents		9009808	1					
ANR	9010181	ArgumentList	i_ctx_p		9009808	1					
ANR	9010182	Argument	i_ctx_p		9009808	0					
ANR	9010183	Identifier	i_ctx_p		9009808	0					
ANR	9010184	Argument	parr		9009808	1					
ANR	9010185	Identifier	parr		9009808	0					
ANR	9010186	Argument	& i		9009808	2					
ANR	9010187	UnaryOperationExpression	& i		9009808	0					
ANR	9010188	UnaryOperator	&		9009808	0					
ANR	9010189	Identifier	i		9009808	1					
ANR	9010190	ExpressionStatement	pop ( i )	6050:4:194903:194909	9009808	13	True				
ANR	9010191	CallExpression	pop ( i )		9009808	0					
ANR	9010192	Callee	pop		9009808	0					
ANR	9010193	Identifier	pop		9009808	0					
ANR	9010194	ArgumentList	i		9009808	1					
ANR	9010195	Argument	i		9009808	0					
ANR	9010196	Identifier	i		9009808	0					
ANR	9010197	ExpressionStatement	esp -= 5	6051:4:194915:194923	9009808	14	True				
ANR	9010198	AssignmentExpression	esp -= 5		9009808	0		-=			
ANR	9010199	Identifier	esp		9009808	0					
ANR	9010200	PrimaryExpression	5		9009808	1					
ANR	9010201	ReturnStatement	return o_pop_estack ;	6052:4:194929:194948	9009808	15	True				
ANR	9010202	Identifier	o_pop_estack		9009808	0					
ANR	9010203	ReturnType	static int		9009808	1					
ANR	9010204	Identifier	setcolor_cont		9009808	2					
ANR	9010205	ParameterList	i_ctx_t * i_ctx_p		9009808	3					
ANR	9010206	Parameter	i_ctx_t * i_ctx_p	5984:14:192600:192615	9009808	0	True				
ANR	9010207	ParameterType	i_ctx_t *		9009808	0					
ANR	9010208	Identifier	i_ctx_p		9009808	1					
ANR	9010209	CFGEntryNode	ENTRY		9009808		True				
ANR	9010210	CFGExitNode	EXIT		9009808		True				
ANR	9010211	Symbol	& arr		9009808						
ANR	9010212	Symbol	stack_depth		9009808						
ANR	9010213	Symbol	& istate -> colorspace [ 0 ] . array		9009808						
ANR	9010214	Symbol	obj -> alternateproc		9009808						
ANR	9010215	Symbol	esp		9009808						
ANR	9010216	Symbol	code		9009808						
ANR	9010217	Symbol	parr		9009808						
ANR	9010218	Symbol	i_ctx_p -> pgs		9009808						
ANR	9010219	Symbol	& usealternate		9009808						
ANR	9010220	Symbol	o_pop_estack		9009808						
ANR	9010221	Symbol	ep [ - 1 ] . value		9009808						
ANR	9010222	Symbol	obj -> name		9009808						
ANR	9010223	Symbol	* istate		9009808						
ANR	9010224	Symbol	gs_error_typecheck		9009808						
ANR	9010225	Symbol	& stage		9009808						
ANR	9010226	Symbol	ep [ - 3 ] . value		9009808						
ANR	9010227	Symbol	* i_ctx_p		9009808						
ANR	9010228	Symbol	setcolor_cont		9009808						
ANR	9010229	Symbol	& obj		9009808						
ANR	9010230	Symbol	istate -> colorspace		9009808						
ANR	9010231	Symbol	CIESubst		9009808						
ANR	9010232	Symbol	* istate -> colorspace		9009808						
ANR	9010233	Symbol	arr		9009808						
ANR	9010234	Symbol	strcmp		9009808						
ANR	9010235	Symbol	* obj		9009808						
ANR	9010236	Symbol	& parr		9009808						
ANR	9010237	Symbol	IsICC		9009808						
ANR	9010238	Symbol	& stack_depth		9009808						
ANR	9010239	Symbol	i		9009808						
ANR	9010240	Symbol	ep [ - 1 ] . value . intval		9009808						
ANR	9010241	Symbol	usealternate		9009808						
ANR	9010242	Symbol	ep		9009808						
ANR	9010243	Symbol	ep [ - 2 ] . value . intval		9009808						
ANR	9010244	Symbol	get_space_object		9009808						
ANR	9010245	Symbol	& CIESubst		9009808						
ANR	9010246	Symbol	gx_set_dev_color		9009808						
ANR	9010247	Symbol	& i		9009808						
ANR	9010248	Symbol	ep [ - 2 ] . value		9009808						
ANR	9010249	Symbol	* ep		9009808						
ANR	9010250	Symbol	depth		9009808						
ANR	9010251	Symbol	ep [ - 3 ] . value . intval		9009808						
ANR	9010252	Symbol	stage		9009808						
ANR	9010253	Symbol	i_ctx_p		9009808						
ANR	9010254	Symbol	obj		9009808						
ANR	9010255	Symbol	obj -> runtransformproc		9009808						
ANR	9010256	Symbol	* * istate		9009808						
ANR	9010257	Symbol	istate		9009808						
ANR	9010258	Function	setcolorspace_cont	6068:0:195778:197908							
ANR	9010259	FunctionDef	setcolorspace_cont (i_ctx_t * i_ctx_p)		9010258	0					
ANR	9010260	CompoundStatement		6070:0:195826:197908	9010258	0					
ANR	9010261	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	6071:4:195832:195853	9010258	0	True				
ANR	9010262	IdentifierDecl	arr		9010258	0					
ANR	9010263	IdentifierDeclType	ref		9010258	0					
ANR	9010264	Identifier	arr		9010258	1					
ANR	9010265	IdentifierDecl	* parr = & arr		9010258	1					
ANR	9010266	IdentifierDeclType	ref *		9010258	0					
ANR	9010267	Identifier	parr		9010258	1					
ANR	9010268	AssignmentExpression	* parr = & arr		9010258	2		=			
ANR	9010269	Identifier	parr		9010258	0					
ANR	9010270	UnaryOperationExpression	& arr		9010258	1					
ANR	9010271	UnaryOperator	&		9010258	0					
ANR	9010272	Identifier	arr		9010258	1					
ANR	9010273	IdentifierDeclStatement	os_ptr op = osp ;	6072:4:195859:195874	9010258	1	True				
ANR	9010274	IdentifierDecl	op = osp		9010258	0					
ANR	9010275	IdentifierDeclType	os_ptr		9010258	0					
ANR	9010276	Identifier	op		9010258	1					
ANR	9010277	AssignmentExpression	op = osp		9010258	2		=			
ANR	9010278	Identifier	osp		9010258	0					
ANR	9010279	Identifier	osp		9010258	1					
ANR	9010280	IdentifierDeclStatement	"es_ptr ep = esp , pdepth , pstage , pCIESubst ;"	6073:4:195880:195922	9010258	2	True				
ANR	9010281	IdentifierDecl	ep = esp		9010258	0					
ANR	9010282	IdentifierDeclType	es_ptr		9010258	0					
ANR	9010283	Identifier	ep		9010258	1					
ANR	9010284	AssignmentExpression	ep = esp		9010258	2		=			
ANR	9010285	Identifier	esp		9010258	0					
ANR	9010286	Identifier	esp		9010258	1					
ANR	9010287	IdentifierDecl	pdepth		9010258	1					
ANR	9010288	IdentifierDeclType	es_ptr		9010258	0					
ANR	9010289	Identifier	pdepth		9010258	1					
ANR	9010290	IdentifierDecl	pstage		9010258	2					
ANR	9010291	IdentifierDeclType	es_ptr		9010258	0					
ANR	9010292	Identifier	pstage		9010258	1					
ANR	9010293	IdentifierDecl	pCIESubst		9010258	3					
ANR	9010294	IdentifierDeclType	es_ptr		9010258	0					
ANR	9010295	Identifier	pCIESubst		9010258	1					
ANR	9010296	IdentifierDeclStatement	"int i , code = 0 , stage , cont , CIESubst = 0 ;"	6074:4:195928:195970	9010258	3	True				
ANR	9010297	IdentifierDecl	i		9010258	0					
ANR	9010298	IdentifierDeclType	int		9010258	0					
ANR	9010299	Identifier	i		9010258	1					
ANR	9010300	IdentifierDecl	code = 0		9010258	1					
ANR	9010301	IdentifierDeclType	int		9010258	0					
ANR	9010302	Identifier	code		9010258	1					
ANR	9010303	AssignmentExpression	code = 0		9010258	2		=			
ANR	9010304	Identifier	code		9010258	0					
ANR	9010305	PrimaryExpression	0		9010258	1					
ANR	9010306	IdentifierDecl	stage		9010258	2					
ANR	9010307	IdentifierDeclType	int		9010258	0					
ANR	9010308	Identifier	stage		9010258	1					
ANR	9010309	IdentifierDecl	cont		9010258	3					
ANR	9010310	IdentifierDeclType	int		9010258	0					
ANR	9010311	Identifier	cont		9010258	1					
ANR	9010312	IdentifierDecl	CIESubst = 0		9010258	4					
ANR	9010313	IdentifierDeclType	int		9010258	0					
ANR	9010314	Identifier	CIESubst		9010258	1					
ANR	9010315	AssignmentExpression	CIESubst = 0		9010258	2		=			
ANR	9010316	Identifier	CIESubst		9010258	0					
ANR	9010317	PrimaryExpression	0		9010258	1					
ANR	9010318	IdentifierDeclStatement	unsigned int depth ;	6075:4:195976:195994	9010258	4	True				
ANR	9010319	IdentifierDecl	depth		9010258	0					
ANR	9010320	IdentifierDeclType	unsigned int		9010258	0					
ANR	9010321	Identifier	depth		9010258	1					
ANR	9010322	IdentifierDeclStatement	PS_colour_space_t * obj ;	6076:4:196000:196022	9010258	5	True				
ANR	9010323	IdentifierDecl	* obj		9010258	0					
ANR	9010324	IdentifierDeclType	PS_colour_space_t *		9010258	0					
ANR	9010325	Identifier	obj		9010258	1					
ANR	9010326	ExpressionStatement	pCIESubst = & ep [ - 3 ]	6078:4:196029:196048	9010258	6	True				
ANR	9010327	AssignmentExpression	pCIESubst = & ep [ - 3 ]		9010258	0		=			
ANR	9010328	Identifier	pCIESubst		9010258	0					
ANR	9010329	UnaryOperationExpression	& ep [ - 3 ]		9010258	1					
ANR	9010330	UnaryOperator	&		9010258	0					
ANR	9010331	ArrayIndexing	ep [ - 3 ]		9010258	1					
ANR	9010332	Identifier	ep		9010258	0					
ANR	9010333	UnaryOperationExpression	- 3		9010258	1					
ANR	9010334	UnaryOperator	-		9010258	0					
ANR	9010335	PrimaryExpression	3		9010258	1					
ANR	9010336	ExpressionStatement	pdepth = & ep [ - 2 ]	6079:4:196054:196070	9010258	7	True				
ANR	9010337	AssignmentExpression	pdepth = & ep [ - 2 ]		9010258	0		=			
ANR	9010338	Identifier	pdepth		9010258	0					
ANR	9010339	UnaryOperationExpression	& ep [ - 2 ]		9010258	1					
ANR	9010340	UnaryOperator	&		9010258	0					
ANR	9010341	ArrayIndexing	ep [ - 2 ]		9010258	1					
ANR	9010342	Identifier	ep		9010258	0					
ANR	9010343	UnaryOperationExpression	- 2		9010258	1					
ANR	9010344	UnaryOperator	-		9010258	0					
ANR	9010345	PrimaryExpression	2		9010258	1					
ANR	9010346	ExpressionStatement	pstage = & ep [ - 1 ]	6080:4:196076:196092	9010258	8	True				
ANR	9010347	AssignmentExpression	pstage = & ep [ - 1 ]		9010258	0		=			
ANR	9010348	Identifier	pstage		9010258	0					
ANR	9010349	UnaryOperationExpression	& ep [ - 1 ]		9010258	1					
ANR	9010350	UnaryOperator	&		9010258	0					
ANR	9010351	ArrayIndexing	ep [ - 1 ]		9010258	1					
ANR	9010352	Identifier	ep		9010258	0					
ANR	9010353	UnaryOperationExpression	- 1		9010258	1					
ANR	9010354	UnaryOperator	-		9010258	0					
ANR	9010355	PrimaryExpression	1		9010258	1					
ANR	9010356	ExpressionStatement	CIESubst = ( int ) pCIESubst -> value . intval	6082:4:196099:196138	9010258	9	True				
ANR	9010357	AssignmentExpression	CIESubst = ( int ) pCIESubst -> value . intval		9010258	0		=			
ANR	9010358	Identifier	CIESubst		9010258	0					
ANR	9010359	CastExpression	( int ) pCIESubst -> value . intval		9010258	1					
ANR	9010360	CastTarget	int		9010258	0					
ANR	9010361	MemberAccess	pCIESubst -> value . intval		9010258	1					
ANR	9010362	PtrMemberAccess	pCIESubst -> value		9010258	0					
ANR	9010363	Identifier	pCIESubst		9010258	0					
ANR	9010364	Identifier	value		9010258	1					
ANR	9010365	Identifier	intval		9010258	1					
ANR	9010366	ExpressionStatement	depth = ( unsigned int ) pdepth -> value . intval	6083:4:196144:196186	9010258	10	True				
ANR	9010367	AssignmentExpression	depth = ( unsigned int ) pdepth -> value . intval		9010258	0		=			
ANR	9010368	Identifier	depth		9010258	0					
ANR	9010369	CastExpression	( unsigned int ) pdepth -> value . intval		9010258	1					
ANR	9010370	CastTarget	unsigned int		9010258	0					
ANR	9010371	MemberAccess	pdepth -> value . intval		9010258	1					
ANR	9010372	PtrMemberAccess	pdepth -> value		9010258	0					
ANR	9010373	Identifier	pdepth		9010258	0					
ANR	9010374	Identifier	value		9010258	1					
ANR	9010375	Identifier	intval		9010258	1					
ANR	9010376	ExpressionStatement	stage = ( int ) pstage -> value . intval	6084:4:196192:196225	9010258	11	True				
ANR	9010377	AssignmentExpression	stage = ( int ) pstage -> value . intval		9010258	0		=			
ANR	9010378	Identifier	stage		9010258	0					
ANR	9010379	CastExpression	( int ) pstage -> value . intval		9010258	1					
ANR	9010380	CastTarget	int		9010258	0					
ANR	9010381	MemberAccess	pstage -> value . intval		9010258	1					
ANR	9010382	PtrMemberAccess	pstage -> value		9010258	0					
ANR	9010383	Identifier	pstage		9010258	0					
ANR	9010384	Identifier	value		9010258	1					
ANR	9010385	Identifier	intval		9010258	1					
ANR	9010386	ExpressionStatement	check_estack ( 1 )	6089:4:196475:196490	9010258	12	True				
ANR	9010387	CallExpression	check_estack ( 1 )		9010258	0					
ANR	9010388	Callee	check_estack		9010258	0					
ANR	9010389	Identifier	check_estack		9010258	0					
ANR	9010390	ArgumentList	1		9010258	1					
ANR	9010391	Argument	1		9010258	0					
ANR	9010392	PrimaryExpression	1		9010258	0					
ANR	9010393	ExpressionStatement	push_op_estack ( setcolorspace_cont )	6090:4:196496:196530	9010258	13	True				
ANR	9010394	CallExpression	push_op_estack ( setcolorspace_cont )		9010258	0					
ANR	9010395	Callee	push_op_estack		9010258	0					
ANR	9010396	Identifier	push_op_estack		9010258	0					
ANR	9010397	ArgumentList	setcolorspace_cont		9010258	1					
ANR	9010398	Argument	setcolorspace_cont		9010258	0					
ANR	9010399	Identifier	setcolorspace_cont		9010258	0					
ANR	9010400	WhileStatement	while ( code == 0 && depth )		9010258	14					
ANR	9010401	Condition	code == 0 && depth	6092:11:196544:196561	9010258	0	True				
ANR	9010402	AndExpression	code == 0 && depth		9010258	0		&&			
ANR	9010403	EqualityExpression	code == 0		9010258	0		==			
ANR	9010404	Identifier	code		9010258	0					
ANR	9010405	PrimaryExpression	0		9010258	1					
ANR	9010406	Identifier	depth		9010258	1					
ANR	9010407	CompoundStatement		23:31:737:737	9010258	1					
ANR	9010408	ExpressionStatement	"ref_assign ( & arr , ep )"	6093:8:196574:196594	9010258	0	True				
ANR	9010409	CallExpression	"ref_assign ( & arr , ep )"		9010258	0					
ANR	9010410	Callee	ref_assign		9010258	0					
ANR	9010411	Identifier	ref_assign		9010258	0					
ANR	9010412	ArgumentList	& arr		9010258	1					
ANR	9010413	Argument	& arr		9010258	0					
ANR	9010414	UnaryOperationExpression	& arr		9010258	0					
ANR	9010415	UnaryOperator	&		9010258	0					
ANR	9010416	Identifier	arr		9010258	1					
ANR	9010417	Argument	ep		9010258	1					
ANR	9010418	Identifier	ep		9010258	0					
ANR	9010419	ForStatement	for ( i = 0 ; i < depth ; i ++ )		9010258	1					
ANR	9010420	ForInit	i = 0 ;	6097:13:196757:196762	9010258	0	True				
ANR	9010421	AssignmentExpression	i = 0		9010258	0		=			
ANR	9010422	Identifier	i		9010258	0					
ANR	9010423	PrimaryExpression	0		9010258	1					
ANR	9010424	Condition	i < depth	6097:19:196763:196771	9010258	1	True				
ANR	9010425	RelationalExpression	i < depth		9010258	0		<			
ANR	9010426	Identifier	i		9010258	0					
ANR	9010427	Identifier	depth		9010258	1					
ANR	9010428	PostIncDecOperationExpression	i ++	6097:29:196773:196775	9010258	2	True				
ANR	9010429	Identifier	i		9010258	0					
ANR	9010430	IncDec	++		9010258	1					
ANR	9010431	CompoundStatement		28:34:951:951	9010258	3					
ANR	9010432	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6098:12:196792:196836	9010258	0	True				
ANR	9010433	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		9010258	0		=			
ANR	9010434	Identifier	code		9010258	0					
ANR	9010435	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		9010258	1					
ANR	9010436	Callee	get_space_object		9010258	0					
ANR	9010437	Identifier	get_space_object		9010258	0					
ANR	9010438	ArgumentList	i_ctx_p		9010258	1					
ANR	9010439	Argument	i_ctx_p		9010258	0					
ANR	9010440	Identifier	i_ctx_p		9010258	0					
ANR	9010441	Argument	parr		9010258	1					
ANR	9010442	Identifier	parr		9010258	0					
ANR	9010443	Argument	& obj		9010258	2					
ANR	9010444	UnaryOperationExpression	& obj		9010258	0					
ANR	9010445	UnaryOperator	&		9010258	0					
ANR	9010446	Identifier	obj		9010258	1					
ANR	9010447	IfStatement	if ( code < 0 )		9010258	1					
ANR	9010448	Condition	code < 0	6099:16:196854:196861	9010258	0	True				
ANR	9010449	RelationalExpression	code < 0		9010258	0		<			
ANR	9010450	Identifier	code		9010258	0					
ANR	9010451	PrimaryExpression	0		9010258	1					
ANR	9010452	ReturnStatement	return code ;	6100:16:196880:196891	9010258	1	True				
ANR	9010453	Identifier	code		9010258	0					
ANR	9010454	IfStatement	if ( i < ( depth - 1 ) )		9010258	2					
ANR	9010455	Condition	i < ( depth - 1 )	6102:16:196910:196924	9010258	0	True				
ANR	9010456	RelationalExpression	i < ( depth - 1 )		9010258	0		<			
ANR	9010457	Identifier	i		9010258	0					
ANR	9010458	AdditiveExpression	depth - 1		9010258	1		-			
ANR	9010459	Identifier	depth		9010258	0					
ANR	9010460	PrimaryExpression	1		9010258	1					
ANR	9010461	CompoundStatement		33:33:1100:1100	9010258	1					
ANR	9010462	IfStatement	if ( ! obj -> alternateproc )		9010258	0					
ANR	9010463	Condition	! obj -> alternateproc	6103:20:196949:196967	9010258	0	True				
ANR	9010464	UnaryOperationExpression	! obj -> alternateproc		9010258	0					
ANR	9010465	UnaryOperator	!		9010258	0					
ANR	9010466	PtrMemberAccess	obj -> alternateproc		9010258	1					
ANR	9010467	Identifier	obj		9010258	0					
ANR	9010468	Identifier	alternateproc		9010258	1					
ANR	9010469	CompoundStatement		34:41:1143:1143	9010258	1					
ANR	9010470	ExpressionStatement	return_error ( gs_error_typecheck )	6104:20:196992:197024	9010258	0	True				
ANR	9010471	CallExpression	return_error ( gs_error_typecheck )		9010258	0					
ANR	9010472	Callee	return_error		9010258	0					
ANR	9010473	Identifier	return_error		9010258	0					
ANR	9010474	ArgumentList	gs_error_typecheck		9010258	1					
ANR	9010475	Argument	gs_error_typecheck		9010258	0					
ANR	9010476	Identifier	gs_error_typecheck		9010258	0					
ANR	9010477	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6106:16:197060:197118	9010258	1	True				
ANR	9010478	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9010258	0		=			
ANR	9010479	Identifier	code		9010258	0					
ANR	9010480	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9010258	1					
ANR	9010481	Callee	obj -> alternateproc		9010258	0					
ANR	9010482	PtrMemberAccess	obj -> alternateproc		9010258	0					
ANR	9010483	Identifier	obj		9010258	0					
ANR	9010484	Identifier	alternateproc		9010258	1					
ANR	9010485	ArgumentList	i_ctx_p		9010258	1					
ANR	9010486	Argument	i_ctx_p		9010258	0					
ANR	9010487	Identifier	i_ctx_p		9010258	0					
ANR	9010488	Argument	parr		9010258	1					
ANR	9010489	Identifier	parr		9010258	0					
ANR	9010490	Argument	& parr		9010258	2					
ANR	9010491	UnaryOperationExpression	& parr		9010258	0					
ANR	9010492	UnaryOperator	&		9010258	0					
ANR	9010493	Identifier	parr		9010258	1					
ANR	9010494	Argument	& CIESubst		9010258	3					
ANR	9010495	UnaryOperationExpression	& CIESubst		9010258	0					
ANR	9010496	UnaryOperator	&		9010258	0					
ANR	9010497	Identifier	CIESubst		9010258	1					
ANR	9010498	IfStatement	if ( code < 0 )		9010258	2					
ANR	9010499	Condition	code < 0	6107:20:197140:197147	9010258	0	True				
ANR	9010500	RelationalExpression	code < 0		9010258	0		<			
ANR	9010501	Identifier	code		9010258	0					
ANR	9010502	PrimaryExpression	0		9010258	1					
ANR	9010503	ReturnStatement	return code ;	6108:20:197170:197181	9010258	1	True				
ANR	9010504	Identifier	code		9010258	0					
ANR	9010505	ExpressionStatement	"code = obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"	6112:8:197216:197275	9010258	2	True				
ANR	9010506	AssignmentExpression	"code = obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"		9010258	0		=			
ANR	9010507	Identifier	code		9010258	0					
ANR	9010508	CallExpression	"obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"		9010258	1					
ANR	9010509	Callee	obj -> setproc		9010258	0					
ANR	9010510	PtrMemberAccess	obj -> setproc		9010258	0					
ANR	9010511	Identifier	obj		9010258	0					
ANR	9010512	Identifier	setproc		9010258	1					
ANR	9010513	ArgumentList	i_ctx_p		9010258	1					
ANR	9010514	Argument	i_ctx_p		9010258	0					
ANR	9010515	Identifier	i_ctx_p		9010258	0					
ANR	9010516	Argument	parr		9010258	1					
ANR	9010517	Identifier	parr		9010258	0					
ANR	9010518	Argument	& stage		9010258	2					
ANR	9010519	UnaryOperationExpression	& stage		9010258	0					
ANR	9010520	UnaryOperator	&		9010258	0					
ANR	9010521	Identifier	stage		9010258	1					
ANR	9010522	Argument	& cont		9010258	3					
ANR	9010523	UnaryOperationExpression	& cont		9010258	0					
ANR	9010524	UnaryOperator	&		9010258	0					
ANR	9010525	Identifier	cont		9010258	1					
ANR	9010526	Argument	CIESubst		9010258	4					
ANR	9010527	Identifier	CIESubst		9010258	0					
ANR	9010528	ExpressionStatement	"make_int ( pstage , stage )"	6113:8:197285:197308	9010258	3	True				
ANR	9010529	CallExpression	"make_int ( pstage , stage )"		9010258	0					
ANR	9010530	Callee	make_int		9010258	0					
ANR	9010531	Identifier	make_int		9010258	0					
ANR	9010532	ArgumentList	pstage		9010258	1					
ANR	9010533	Argument	pstage		9010258	0					
ANR	9010534	Identifier	pstage		9010258	0					
ANR	9010535	Argument	stage		9010258	1					
ANR	9010536	Identifier	stage		9010258	0					
ANR	9010537	IfStatement	if ( code != 0 )		9010258	4					
ANR	9010538	Condition	code != 0	6114:12:197322:197330	9010258	0	True				
ANR	9010539	EqualityExpression	code != 0		9010258	0		!=			
ANR	9010540	Identifier	code		9010258	0					
ANR	9010541	PrimaryExpression	0		9010258	1					
ANR	9010542	CompoundStatement		45:23:1506:1506	9010258	1					
ANR	9010543	IfStatement	if ( code < 0 && code != gs_error_stackoverflow )		9010258	0					
ANR	9010544	Condition	code < 0 && code != gs_error_stackoverflow	6115:16:197351:197392	9010258	0	True				
ANR	9010545	AndExpression	code < 0 && code != gs_error_stackoverflow		9010258	0		&&			
ANR	9010546	RelationalExpression	code < 0		9010258	0		<			
ANR	9010547	Identifier	code		9010258	0					
ANR	9010548	PrimaryExpression	0		9010258	1					
ANR	9010549	EqualityExpression	code != gs_error_stackoverflow		9010258	1		!=			
ANR	9010550	Identifier	code		9010258	0					
ANR	9010551	Identifier	gs_error_stackoverflow		9010258	1					
ANR	9010552	ExpressionStatement	esp -= 5	6116:16:197411:197419	9010258	1	True				
ANR	9010553	AssignmentExpression	esp -= 5		9010258	0		-=			
ANR	9010554	Identifier	esp		9010258	0					
ANR	9010555	PrimaryExpression	5		9010258	1					
ANR	9010556	ReturnStatement	return code ;	6117:12:197433:197444	9010258	1	True				
ANR	9010557	Identifier	code		9010258	0					
ANR	9010558	IfStatement	if ( ! cont )		9010258	5					
ANR	9010559	Condition	! cont	6119:12:197468:197472	9010258	0	True				
ANR	9010560	UnaryOperationExpression	! cont		9010258	0					
ANR	9010561	UnaryOperator	!		9010258	0					
ANR	9010562	Identifier	cont		9010258	1					
ANR	9010563	CompoundStatement		50:19:1648:1648	9010258	1					
ANR	9010564	ExpressionStatement	"make_int ( pdepth , -- depth )"	6121:12:197551:197576	9010258	0	True				
ANR	9010565	CallExpression	"make_int ( pdepth , -- depth )"		9010258	0					
ANR	9010566	Callee	make_int		9010258	0					
ANR	9010567	Identifier	make_int		9010258	0					
ANR	9010568	ArgumentList	pdepth		9010258	1					
ANR	9010569	Argument	pdepth		9010258	0					
ANR	9010570	Identifier	pdepth		9010258	0					
ANR	9010571	Argument	-- depth		9010258	1					
ANR	9010572	UnaryExpression	-- depth		9010258	0					
ANR	9010573	IncDec	--		9010258	0					
ANR	9010574	Identifier	depth		9010258	1					
ANR	9010575	ExpressionStatement	parr = & arr	6122:12:197590:197601	9010258	1	True				
ANR	9010576	AssignmentExpression	parr = & arr		9010258	0		=			
ANR	9010577	Identifier	parr		9010258	0					
ANR	9010578	UnaryOperationExpression	& arr		9010258	1					
ANR	9010579	UnaryOperator	&		9010258	0					
ANR	9010580	Identifier	arr		9010258	1					
ANR	9010581	IfStatement	if ( code == 0 )		9010258	15					
ANR	9010582	Condition	code == 0	6125:8:197627:197635	9010258	0	True				
ANR	9010583	EqualityExpression	code == 0		9010258	0		==			
ANR	9010584	Identifier	code		9010258	0					
ANR	9010585	PrimaryExpression	0		9010258	1					
ANR	9010586	CompoundStatement		56:19:1811:1811	9010258	1					
ANR	9010587	ExpressionStatement	esp -= 5	6127:8:197704:197712	9010258	0	True				
ANR	9010588	AssignmentExpression	esp -= 5		9010258	0		-=			
ANR	9010589	Identifier	esp		9010258	0					
ANR	9010590	PrimaryExpression	5		9010258	1					
ANR	9010591	ExpressionStatement	op = osp	6128:8:197722:197730	9010258	1	True				
ANR	9010592	AssignmentExpression	op = osp		9010258	0		=			
ANR	9010593	Identifier	op		9010258	0					
ANR	9010594	Identifier	osp		9010258	1					
ANR	9010595	ExpressionStatement	istate -> colorspace [ 0 ] . array = * op	6129:8:197740:197773	9010258	2	True				
ANR	9010596	AssignmentExpression	istate -> colorspace [ 0 ] . array = * op		9010258	0		=			
ANR	9010597	MemberAccess	istate -> colorspace [ 0 ] . array		9010258	0					
ANR	9010598	ArrayIndexing	istate -> colorspace [ 0 ]		9010258	0					
ANR	9010599	PtrMemberAccess	istate -> colorspace		9010258	0					
ANR	9010600	Identifier	istate		9010258	0					
ANR	9010601	Identifier	colorspace		9010258	1					
ANR	9010602	PrimaryExpression	0		9010258	1					
ANR	9010603	Identifier	array		9010258	1					
ANR	9010604	UnaryOperationExpression	* op		9010258	1					
ANR	9010605	UnaryOperator	*		9010258	0					
ANR	9010606	Identifier	op		9010258	1					
ANR	9010607	ExpressionStatement	pop ( 1 )	6131:8:197848:197854	9010258	3	True				
ANR	9010608	CallExpression	pop ( 1 )		9010258	0					
ANR	9010609	Callee	pop		9010258	0					
ANR	9010610	Identifier	pop		9010258	0					
ANR	9010611	ArgumentList	1		9010258	1					
ANR	9010612	Argument	1		9010258	0					
ANR	9010613	PrimaryExpression	1		9010258	0					
ANR	9010614	ExpressionStatement	code = o_pop_estack	6132:8:197864:197883	9010258	4	True				
ANR	9010615	AssignmentExpression	code = o_pop_estack		9010258	0		=			
ANR	9010616	Identifier	code		9010258	0					
ANR	9010617	Identifier	o_pop_estack		9010258	1					
ANR	9010618	ReturnStatement	return code ;	6134:4:197895:197906	9010258	16	True				
ANR	9010619	Identifier	code		9010258	0					
ANR	9010620	ReturnType	static int		9010258	1					
ANR	9010621	Identifier	setcolorspace_cont		9010258	2					
ANR	9010622	ParameterList	i_ctx_t * i_ctx_p		9010258	3					
ANR	9010623	Parameter	i_ctx_t * i_ctx_p	6069:19:195808:195823	9010258	0	True				
ANR	9010624	ParameterType	i_ctx_t *		9010258	0					
ANR	9010625	Identifier	i_ctx_p		9010258	1					
ANR	9010626	CFGEntryNode	ENTRY		9010258		True				
ANR	9010627	CFGExitNode	EXIT		9010258		True				
ANR	9010628	Symbol	& arr		9010258						
ANR	9010629	Symbol	* pdepth		9010258						
ANR	9010630	Symbol	pdepth -> value		9010258						
ANR	9010631	Symbol	istate -> colorspace [ 0 ] . array		9010258						
ANR	9010632	Symbol	obj -> alternateproc		9010258						
ANR	9010633	Symbol	esp		9010258						
ANR	9010634	Symbol	code		9010258						
ANR	9010635	Symbol	* op		9010258						
ANR	9010636	Symbol	parr		9010258						
ANR	9010637	Symbol	o_pop_estack		9010258						
ANR	9010638	Symbol	osp		9010258						
ANR	9010639	Symbol	* istate		9010258						
ANR	9010640	Symbol	pCIESubst -> value		9010258						
ANR	9010641	Symbol	pstage -> value . intval		9010258						
ANR	9010642	Symbol	gs_error_typecheck		9010258						
ANR	9010643	Symbol	& stage		9010258						
ANR	9010644	Symbol	setcolorspace_cont		9010258						
ANR	9010645	Symbol	& obj		9010258						
ANR	9010646	Symbol	istate -> colorspace		9010258						
ANR	9010647	Symbol	pdepth		9010258						
ANR	9010648	Symbol	cont		9010258						
ANR	9010649	Symbol	CIESubst		9010258						
ANR	9010650	Symbol	* istate -> colorspace		9010258						
ANR	9010651	Symbol	arr		9010258						
ANR	9010652	Symbol	op		9010258						
ANR	9010653	Symbol	* obj		9010258						
ANR	9010654	Symbol	& parr		9010258						
ANR	9010655	Symbol	obj -> setproc		9010258						
ANR	9010656	Symbol	pdepth -> value . intval		9010258						
ANR	9010657	Symbol	& cont		9010258						
ANR	9010658	Symbol	* pstage		9010258						
ANR	9010659	Symbol	pstage		9010258						
ANR	9010660	Symbol	i		9010258						
ANR	9010661	Symbol	ep		9010258						
ANR	9010662	Symbol	pstage -> value		9010258						
ANR	9010663	Symbol	get_space_object		9010258						
ANR	9010664	Symbol	& CIESubst		9010258						
ANR	9010665	Symbol	pCIESubst -> value . intval		9010258						
ANR	9010666	Symbol	depth		9010258						
ANR	9010667	Symbol	stage		9010258						
ANR	9010668	Symbol	i_ctx_p		9010258						
ANR	9010669	Symbol	obj		9010258						
ANR	9010670	Symbol	* pCIESubst		9010258						
ANR	9010671	Symbol	pCIESubst		9010258						
ANR	9010672	Symbol	gs_error_stackoverflow		9010258						
ANR	9010673	Symbol	* * istate		9010258						
ANR	9010674	Symbol	istate		9010258						
ANR	9010675	Function	setdevicecolor_cont	6149:0:198629:200513							
ANR	9010676	FunctionDef	setdevicecolor_cont (i_ctx_t * i_ctx_p)		9010675	0					
ANR	9010677	CompoundStatement		6151:0:198678:200513	9010675	0					
ANR	9010678	IdentifierDeclStatement	os_ptr op = osp ;	6152:4:198684:198699	9010675	0	True				
ANR	9010679	IdentifierDecl	op = osp		9010675	0					
ANR	9010680	IdentifierDeclType	os_ptr		9010675	0					
ANR	9010681	Identifier	op		9010675	1					
ANR	9010682	AssignmentExpression	op = osp		9010675	2		=			
ANR	9010683	Identifier	osp		9010675	0					
ANR	9010684	Identifier	osp		9010675	1					
ANR	9010685	IdentifierDeclStatement	"es_ptr ep = esp , pstage ;"	6153:4:198705:198728	9010675	1	True				
ANR	9010686	IdentifierDecl	ep = esp		9010675	0					
ANR	9010687	IdentifierDeclType	es_ptr		9010675	0					
ANR	9010688	Identifier	ep		9010675	1					
ANR	9010689	AssignmentExpression	ep = esp		9010675	2		=			
ANR	9010690	Identifier	esp		9010675	0					
ANR	9010691	Identifier	esp		9010675	1					
ANR	9010692	IdentifierDecl	pstage		9010675	1					
ANR	9010693	IdentifierDeclType	es_ptr		9010675	0					
ANR	9010694	Identifier	pstage		9010675	1					
ANR	9010695	IdentifierDeclStatement	"int code = 0 , stage , base ;"	6154:4:198734:198759	9010675	2	True				
ANR	9010696	IdentifierDecl	code = 0		9010675	0					
ANR	9010697	IdentifierDeclType	int		9010675	0					
ANR	9010698	Identifier	code		9010675	1					
ANR	9010699	AssignmentExpression	code = 0		9010675	2		=			
ANR	9010700	Identifier	code		9010675	0					
ANR	9010701	PrimaryExpression	0		9010675	1					
ANR	9010702	IdentifierDecl	stage		9010675	1					
ANR	9010703	IdentifierDeclType	int		9010675	0					
ANR	9010704	Identifier	stage		9010675	1					
ANR	9010705	IdentifierDecl	base		9010675	2					
ANR	9010706	IdentifierDeclType	int		9010675	0					
ANR	9010707	Identifier	base		9010675	1					
ANR	9010708	ExpressionStatement	pstage = ep	6156:4:198766:198777	9010675	3	True				
ANR	9010709	AssignmentExpression	pstage = ep		9010675	0		=			
ANR	9010710	Identifier	pstage		9010675	0					
ANR	9010711	Identifier	ep		9010675	1					
ANR	9010712	ExpressionStatement	base = ( int ) ep [ - 1 ] . value . intval	6157:4:198783:198814	9010675	4	True				
ANR	9010713	AssignmentExpression	base = ( int ) ep [ - 1 ] . value . intval		9010675	0		=			
ANR	9010714	Identifier	base		9010675	0					
ANR	9010715	CastExpression	( int ) ep [ - 1 ] . value . intval		9010675	1					
ANR	9010716	CastTarget	int		9010675	0					
ANR	9010717	MemberAccess	ep [ - 1 ] . value . intval		9010675	1					
ANR	9010718	MemberAccess	ep [ - 1 ] . value		9010675	0					
ANR	9010719	ArrayIndexing	ep [ - 1 ]		9010675	0					
ANR	9010720	Identifier	ep		9010675	0					
ANR	9010721	UnaryOperationExpression	- 1		9010675	1					
ANR	9010722	UnaryOperator	-		9010675	0					
ANR	9010723	PrimaryExpression	1		9010675	1					
ANR	9010724	Identifier	value		9010675	1					
ANR	9010725	Identifier	intval		9010675	1					
ANR	9010726	ExpressionStatement	stage = ( int ) pstage -> value . intval	6158:4:198820:198853	9010675	5	True				
ANR	9010727	AssignmentExpression	stage = ( int ) pstage -> value . intval		9010675	0		=			
ANR	9010728	Identifier	stage		9010675	0					
ANR	9010729	CastExpression	( int ) pstage -> value . intval		9010675	1					
ANR	9010730	CastTarget	int		9010675	0					
ANR	9010731	MemberAccess	pstage -> value . intval		9010675	1					
ANR	9010732	PtrMemberAccess	pstage -> value		9010675	0					
ANR	9010733	Identifier	pstage		9010675	0					
ANR	9010734	Identifier	value		9010675	1					
ANR	9010735	Identifier	intval		9010675	1					
ANR	9010736	ExpressionStatement	check_estack ( 1 )	6163:4:199103:199118	9010675	6	True				
ANR	9010737	CallExpression	check_estack ( 1 )		9010675	0					
ANR	9010738	Callee	check_estack		9010675	0					
ANR	9010739	Identifier	check_estack		9010675	0					
ANR	9010740	ArgumentList	1		9010675	1					
ANR	9010741	Argument	1		9010675	0					
ANR	9010742	PrimaryExpression	1		9010675	0					
ANR	9010743	ExpressionStatement	check_ostack ( 1 )	6165:4:199209:199224	9010675	7	True				
ANR	9010744	CallExpression	check_ostack ( 1 )		9010675	0					
ANR	9010745	Callee	check_ostack		9010675	0					
ANR	9010746	Identifier	check_ostack		9010675	0					
ANR	9010747	ArgumentList	1		9010675	1					
ANR	9010748	Argument	1		9010675	0					
ANR	9010749	PrimaryExpression	1		9010675	0					
ANR	9010750	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6167:4:199312:199347	9010675	8	True				
ANR	9010751	CallExpression	push_op_estack ( setdevicecolor_cont )		9010675	0					
ANR	9010752	Callee	push_op_estack		9010675	0					
ANR	9010753	Identifier	push_op_estack		9010675	0					
ANR	9010754	ArgumentList	setdevicecolor_cont		9010675	1					
ANR	9010755	Argument	setdevicecolor_cont		9010675	0					
ANR	9010756	Identifier	setdevicecolor_cont		9010675	0					
ANR	9010757	DoStatement	do		9010675	9					
ANR	9010758	CompoundStatement		19:7:678:678	9010675	0					
ANR	9010759	SwitchStatement	switch ( stage )		9010675	0					
ANR	9010760	Condition	stage	6170:15:199374:199378	9010675	0	True				
ANR	9010761	Identifier	stage		9010675	0					
ANR	9010762	CompoundStatement		20:22:702:702	9010675	1					
ANR	9010763	Label	case 0 :	6171:12:199395:199401	9010675	0	True				
ANR	9010764	ExpressionStatement	"make_int ( pstage , ++ stage )"	6172:16:199419:199444	9010675	1	True				
ANR	9010765	CallExpression	"make_int ( pstage , ++ stage )"		9010675	0					
ANR	9010766	Callee	make_int		9010675	0					
ANR	9010767	Identifier	make_int		9010675	0					
ANR	9010768	ArgumentList	pstage		9010675	1					
ANR	9010769	Argument	pstage		9010675	0					
ANR	9010770	Identifier	pstage		9010675	0					
ANR	9010771	Argument	++ stage		9010675	1					
ANR	9010772	UnaryExpression	++ stage		9010675	0					
ANR	9010773	IncDec	++		9010675	0					
ANR	9010774	Identifier	stage		9010675	1					
ANR	9010775	ExpressionStatement	push ( 1 )	6173:16:199462:199469	9010675	2	True				
ANR	9010776	CallExpression	push ( 1 )		9010675	0					
ANR	9010777	Callee	push		9010675	0					
ANR	9010778	Identifier	push		9010675	0					
ANR	9010779	ArgumentList	1		9010675	1					
ANR	9010780	Argument	1		9010675	0					
ANR	9010781	PrimaryExpression	1		9010675	0					
ANR	9010782	SwitchStatement	switch ( base )		9010675	3					
ANR	9010783	Condition	base	6174:23:199494:199497	9010675	0	True				
ANR	9010784	Identifier	base		9010675	0					
ANR	9010785	CompoundStatement		24:29:821:821	9010675	1					
ANR	9010786	Label	case 0 :	6175:20:199522:199528	9010675	0	True				
ANR	9010787	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , op )"	6176:24:199571:199622	9010675	1	True				
ANR	9010788	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , op )"		9010675	0		=			
ANR	9010789	Identifier	code		9010675	0					
ANR	9010790	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , op )"		9010675	1					
ANR	9010791	Callee	name_enter_string		9010675	0					
ANR	9010792	Identifier	name_enter_string		9010675	0					
ANR	9010793	ArgumentList	imemory		9010675	1					
ANR	9010794	Argument	imemory		9010675	0					
ANR	9010795	Identifier	imemory		9010675	0					
ANR	9010796	Argument	"""DeviceGray"""		9010675	1					
ANR	9010797	PrimaryExpression	"""DeviceGray"""		9010675	0					
ANR	9010798	Argument	op		9010675	2					
ANR	9010799	Identifier	op		9010675	0					
ANR	9010800	BreakStatement	break ;	6177:24:199648:199653	9010675	2	True				
ANR	9010801	Label	case 1 :	6178:20:199675:199681	9010675	3	True				
ANR	9010802	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , op )"	6179:24:199723:199773	9010675	4	True				
ANR	9010803	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , op )"		9010675	0		=			
ANR	9010804	Identifier	code		9010675	0					
ANR	9010805	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , op )"		9010675	1					
ANR	9010806	Callee	name_enter_string		9010675	0					
ANR	9010807	Identifier	name_enter_string		9010675	0					
ANR	9010808	ArgumentList	imemory		9010675	1					
ANR	9010809	Argument	imemory		9010675	0					
ANR	9010810	Identifier	imemory		9010675	0					
ANR	9010811	Argument	"""DeviceRGB"""		9010675	1					
ANR	9010812	PrimaryExpression	"""DeviceRGB"""		9010675	0					
ANR	9010813	Argument	op		9010675	2					
ANR	9010814	Identifier	op		9010675	0					
ANR	9010815	BreakStatement	break ;	6180:24:199799:199804	9010675	5	True				
ANR	9010816	Label	case 2 :	6181:20:199826:199832	9010675	6	True				
ANR	9010817	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , op )"	6182:24:199875:199926	9010675	7	True				
ANR	9010818	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , op )"		9010675	0		=			
ANR	9010819	Identifier	code		9010675	0					
ANR	9010820	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , op )"		9010675	1					
ANR	9010821	Callee	name_enter_string		9010675	0					
ANR	9010822	Identifier	name_enter_string		9010675	0					
ANR	9010823	ArgumentList	imemory		9010675	1					
ANR	9010824	Argument	imemory		9010675	0					
ANR	9010825	Identifier	imemory		9010675	0					
ANR	9010826	Argument	"""DeviceCMYK"""		9010675	1					
ANR	9010827	PrimaryExpression	"""DeviceCMYK"""		9010675	0					
ANR	9010828	Argument	op		9010675	2					
ANR	9010829	Identifier	op		9010675	0					
ANR	9010830	BreakStatement	break ;	6183:24:199952:199957	9010675	8	True				
ANR	9010831	IfStatement	if ( code < 0 )		9010675	4					
ANR	9010832	Condition	code < 0	6185:20:199997:200004	9010675	0	True				
ANR	9010833	RelationalExpression	code < 0		9010675	0		<			
ANR	9010834	Identifier	code		9010675	0					
ANR	9010835	PrimaryExpression	0		9010675	1					
ANR	9010836	ReturnStatement	return code ;	6186:20:200027:200038	9010675	1	True				
ANR	9010837	Identifier	code		9010675	0					
ANR	9010838	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	6187:16:200056:200086	9010675	5	True				
ANR	9010839	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		9010675	0		=			
ANR	9010840	Identifier	code		9010675	0					
ANR	9010841	CallExpression	zsetcolorspace ( i_ctx_p )		9010675	1					
ANR	9010842	Callee	zsetcolorspace		9010675	0					
ANR	9010843	Identifier	zsetcolorspace		9010675	0					
ANR	9010844	ArgumentList	i_ctx_p		9010675	1					
ANR	9010845	Argument	i_ctx_p		9010675	0					
ANR	9010846	Identifier	i_ctx_p		9010675	0					
ANR	9010847	IfStatement	if ( code != 0 )		9010675	6					
ANR	9010848	Condition	code != 0	6188:20:200108:200116	9010675	0	True				
ANR	9010849	EqualityExpression	code != 0		9010675	0		!=			
ANR	9010850	Identifier	code		9010675	0					
ANR	9010851	PrimaryExpression	0		9010675	1					
ANR	9010852	ReturnStatement	return code ;	6189:20:200139:200150	9010675	1	True				
ANR	9010853	Identifier	code		9010675	0					
ANR	9010854	BreakStatement	break ;	6190:16:200168:200173	9010675	7	True				
ANR	9010855	Label	case 1 :	6191:12:200187:200193	9010675	8	True				
ANR	9010856	ExpressionStatement	"make_int ( pstage , ++ stage )"	6192:16:200211:200236	9010675	9	True				
ANR	9010857	CallExpression	"make_int ( pstage , ++ stage )"		9010675	0					
ANR	9010858	Callee	make_int		9010675	0					
ANR	9010859	Identifier	make_int		9010675	0					
ANR	9010860	ArgumentList	pstage		9010675	1					
ANR	9010861	Argument	pstage		9010675	0					
ANR	9010862	Identifier	pstage		9010675	0					
ANR	9010863	Argument	++ stage		9010675	1					
ANR	9010864	UnaryExpression	++ stage		9010675	0					
ANR	9010865	IncDec	++		9010675	0					
ANR	9010866	Identifier	stage		9010675	1					
ANR	9010867	ExpressionStatement	code = zsetcolor ( i_ctx_p )	6193:16:200254:200279	9010675	10	True				
ANR	9010868	AssignmentExpression	code = zsetcolor ( i_ctx_p )		9010675	0		=			
ANR	9010869	Identifier	code		9010675	0					
ANR	9010870	CallExpression	zsetcolor ( i_ctx_p )		9010675	1					
ANR	9010871	Callee	zsetcolor		9010675	0					
ANR	9010872	Identifier	zsetcolor		9010675	0					
ANR	9010873	ArgumentList	i_ctx_p		9010675	1					
ANR	9010874	Argument	i_ctx_p		9010675	0					
ANR	9010875	Identifier	i_ctx_p		9010675	0					
ANR	9010876	IfStatement	if ( code != 0 )		9010675	11					
ANR	9010877	Condition	code != 0	6194:20:200301:200309	9010675	0	True				
ANR	9010878	EqualityExpression	code != 0		9010675	0		!=			
ANR	9010879	Identifier	code		9010675	0					
ANR	9010880	PrimaryExpression	0		9010675	1					
ANR	9010881	ReturnStatement	return code ;	6195:20:200332:200343	9010675	1	True				
ANR	9010882	Identifier	code		9010675	0					
ANR	9010883	BreakStatement	break ;	6196:16:200361:200366	9010675	12	True				
ANR	9010884	Label	case 2 :	6197:12:200380:200386	9010675	13	True				
ANR	9010885	ExpressionStatement	esp -= 3	6198:16:200404:200412	9010675	14	True				
ANR	9010886	AssignmentExpression	esp -= 3		9010675	0		-=			
ANR	9010887	Identifier	esp		9010675	0					
ANR	9010888	PrimaryExpression	3		9010675	1					
ANR	9010889	ReturnStatement	return o_pop_estack ;	6199:16:200430:200449	9010675	15	True				
ANR	9010890	Identifier	o_pop_estack		9010675	0					
ANR	9010891	BreakStatement	break ;	6200:16:200467:200472	9010675	16	True				
ANR	9010892	Condition	1	6202:11:200495:200495	9010675	1	True				
ANR	9010893	PrimaryExpression	1		9010675	0					
ANR	9010894	ReturnStatement	return 0 ;	6203:4:200503:200511	9010675	10	True				
ANR	9010895	PrimaryExpression	0		9010675	0					
ANR	9010896	ReturnType	static int		9010675	1					
ANR	9010897	Identifier	setdevicecolor_cont		9010675	2					
ANR	9010898	ParameterList	i_ctx_t * i_ctx_p		9010675	3					
ANR	9010899	Parameter	i_ctx_t * i_ctx_p	6150:20:198660:198675	9010675	0	True				
ANR	9010900	ParameterType	i_ctx_t *		9010675	0					
ANR	9010901	Identifier	i_ctx_p		9010675	1					
ANR	9010902	CFGEntryNode	ENTRY		9010675		True				
ANR	9010903	CFGExitNode	EXIT		9010675		True				
ANR	9010904	Symbol	op		9010675						
ANR	9010905	Symbol	esp		9010675						
ANR	9010906	Symbol	code		9010675						
ANR	9010907	Symbol	* pstage		9010675						
ANR	9010908	Symbol	pstage		9010675						
ANR	9010909	Symbol	ep [ - 1 ] . value . intval		9010675						
ANR	9010910	Symbol	zsetcolor		9010675						
ANR	9010911	Symbol	ep		9010675						
ANR	9010912	Symbol	o_pop_estack		9010675						
ANR	9010913	Symbol	ep [ - 1 ] . value		9010675						
ANR	9010914	Symbol	pstage -> value		9010675						
ANR	9010915	Symbol	osp		9010675						
ANR	9010916	Symbol	name_enter_string		9010675						
ANR	9010917	Symbol	pstage -> value . intval		9010675						
ANR	9010918	Symbol	* ep		9010675						
ANR	9010919	Symbol	stage		9010675						
ANR	9010920	Symbol	i_ctx_p		9010675						
ANR	9010921	Symbol	zsetcolorspace		9010675						
ANR	9010922	Symbol	imemory		9010675						
ANR	9010923	Symbol	base		9010675						
ANR	9010924	Symbol	setdevicecolor_cont		9010675						
ANR	9010925	Function	zsetgray	6210:0:200701:201631							
ANR	9010926	FunctionDef	zsetgray (i_ctx_t * i_ctx_p)		9010925	0					
ANR	9010927	CompoundStatement		6212:0:200740:201631	9010925	0					
ANR	9010928	IdentifierDeclStatement	os_ptr op = osp ;	6213:4:200746:200762	9010925	0	True				
ANR	9010929	IdentifierDecl	op = osp		9010925	0					
ANR	9010930	IdentifierDeclType	os_ptr		9010925	0					
ANR	9010931	Identifier	op		9010925	1					
ANR	9010932	AssignmentExpression	op = osp		9010925	2		=			
ANR	9010933	Identifier	osp		9010925	0					
ANR	9010934	Identifier	osp		9010925	1					
ANR	9010935	IdentifierDeclStatement	float value ;	6214:4:200801:200812	9010925	1	True				
ANR	9010936	IdentifierDecl	value		9010925	0					
ANR	9010937	IdentifierDeclType	float		9010925	0					
ANR	9010938	Identifier	value		9010925	1					
ANR	9010939	IdentifierDeclStatement	int code ;	6215:4:200818:200826	9010925	2	True				
ANR	9010940	IdentifierDecl	code		9010925	0					
ANR	9010941	IdentifierDeclType	int		9010925	0					
ANR	9010942	Identifier	code		9010925	1					
ANR	9010943	ExpressionStatement	"code = float_params ( op , 1 , & value )"	6218:4:200875:200909	9010925	3	True				
ANR	9010944	AssignmentExpression	"code = float_params ( op , 1 , & value )"		9010925	0		=			
ANR	9010945	Identifier	code		9010925	0					
ANR	9010946	CallExpression	"float_params ( op , 1 , & value )"		9010925	1					
ANR	9010947	Callee	float_params		9010925	0					
ANR	9010948	Identifier	float_params		9010925	0					
ANR	9010949	ArgumentList	op		9010925	1					
ANR	9010950	Argument	op		9010925	0					
ANR	9010951	Identifier	op		9010925	0					
ANR	9010952	Argument	1		9010925	1					
ANR	9010953	PrimaryExpression	1		9010925	0					
ANR	9010954	Argument	& value		9010925	2					
ANR	9010955	UnaryOperationExpression	& value		9010925	0					
ANR	9010956	UnaryOperator	&		9010925	0					
ANR	9010957	Identifier	value		9010925	1					
ANR	9010958	IfStatement	if ( code < 0 )		9010925	4					
ANR	9010959	Condition	code < 0	6219:8:200919:200926	9010925	0	True				
ANR	9010960	RelationalExpression	code < 0		9010925	0		<			
ANR	9010961	Identifier	code		9010925	0					
ANR	9010962	PrimaryExpression	0		9010925	1					
ANR	9010963	ReturnStatement	return code ;	6220:8:200937:200948	9010925	1	True				
ANR	9010964	Identifier	code		9010925	0					
ANR	9010965	IfStatement	if ( value < 0 )		9010925	5					
ANR	9010966	Condition	value < 0	6222:8:200999:201007	9010925	0	True				
ANR	9010967	RelationalExpression	value < 0		9010925	0		<			
ANR	9010968	Identifier	value		9010925	0					
ANR	9010969	PrimaryExpression	0		9010925	1					
ANR	9010970	ExpressionStatement	value = 0	6223:8:201018:201027	9010925	1	True				
ANR	9010971	AssignmentExpression	value = 0		9010925	0		=			
ANR	9010972	Identifier	value		9010925	0					
ANR	9010973	PrimaryExpression	0		9010925	1					
ANR	9010974	ElseStatement	else		9010925	0					
ANR	9010975	IfStatement	if ( value > 1 )		9010925	0					
ANR	9010976	Condition	value > 1	6224:13:201042:201050	9010925	0	True				
ANR	9010977	RelationalExpression	value > 1		9010925	0		>			
ANR	9010978	Identifier	value		9010925	0					
ANR	9010979	PrimaryExpression	1		9010925	1					
ANR	9010980	ExpressionStatement	value = 1	6225:8:201061:201070	9010925	1	True				
ANR	9010981	AssignmentExpression	value = 1		9010925	0		=			
ANR	9010982	Identifier	value		9010925	0					
ANR	9010983	PrimaryExpression	1		9010925	1					
ANR	9010984	ExpressionStatement	"code = make_floats ( op , & value , 1 )"	6226:4:201076:201109	9010925	6	True				
ANR	9010985	AssignmentExpression	"code = make_floats ( op , & value , 1 )"		9010925	0		=			
ANR	9010986	Identifier	code		9010925	0					
ANR	9010987	CallExpression	"make_floats ( op , & value , 1 )"		9010925	1					
ANR	9010988	Callee	make_floats		9010925	0					
ANR	9010989	Identifier	make_floats		9010925	0					
ANR	9010990	ArgumentList	op		9010925	1					
ANR	9010991	Argument	op		9010925	0					
ANR	9010992	Identifier	op		9010925	0					
ANR	9010993	Argument	& value		9010925	1					
ANR	9010994	UnaryOperationExpression	& value		9010925	0					
ANR	9010995	UnaryOperator	&		9010925	0					
ANR	9010996	Identifier	value		9010925	1					
ANR	9010997	Argument	1		9010925	2					
ANR	9010998	PrimaryExpression	1		9010925	0					
ANR	9010999	IfStatement	if ( code < 0 )		9010925	7					
ANR	9011000	Condition	code < 0	6227:8:201119:201126	9010925	0	True				
ANR	9011001	RelationalExpression	code < 0		9010925	0		<			
ANR	9011002	Identifier	code		9010925	0					
ANR	9011003	PrimaryExpression	0		9010925	1					
ANR	9011004	ReturnStatement	return code ;	6228:8:201137:201148	9010925	1	True				
ANR	9011005	Identifier	code		9010925	0					
ANR	9011006	ExpressionStatement	check_estack ( 5 )	6232:4:201278:201293	9010925	8	True				
ANR	9011007	CallExpression	check_estack ( 5 )		9010925	0					
ANR	9011008	Callee	check_estack		9010925	0					
ANR	9011009	Identifier	check_estack		9010925	0					
ANR	9011010	ArgumentList	5		9010925	1					
ANR	9011011	Argument	5		9010925	0					
ANR	9011012	PrimaryExpression	5		9010925	0					
ANR	9011013	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6233:4:201299:201341	9010925	9	True				
ANR	9011014	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9010925	0					
ANR	9011015	Callee	push_mark_estack		9010925	0					
ANR	9011016	Identifier	push_mark_estack		9010925	0					
ANR	9011017	ArgumentList	es_other		9010925	1					
ANR	9011018	Argument	es_other		9010925	0					
ANR	9011019	Identifier	es_other		9010925	0					
ANR	9011020	Argument	colour_cleanup		9010925	1					
ANR	9011021	Identifier	colour_cleanup		9010925	0					
ANR	9011022	ExpressionStatement	esp ++	6234:4:201347:201352	9010925	10	True				
ANR	9011023	PostIncDecOperationExpression	esp ++		9010925	0					
ANR	9011024	Identifier	esp		9010925	0					
ANR	9011025	IncDec	++		9010925	1					
ANR	9011026	ExpressionStatement	"make_int ( esp , 0 )"	6236:4:201406:201422	9010925	11	True				
ANR	9011027	CallExpression	"make_int ( esp , 0 )"		9010925	0					
ANR	9011028	Callee	make_int		9010925	0					
ANR	9011029	Identifier	make_int		9010925	0					
ANR	9011030	ArgumentList	esp		9010925	1					
ANR	9011031	Argument	esp		9010925	0					
ANR	9011032	Identifier	esp		9010925	0					
ANR	9011033	Argument	0		9010925	1					
ANR	9011034	PrimaryExpression	0		9010925	0					
ANR	9011035	ExpressionStatement	esp ++	6237:4:201428:201433	9010925	12	True				
ANR	9011036	PostIncDecOperationExpression	esp ++		9010925	0					
ANR	9011037	Identifier	esp		9010925	0					
ANR	9011038	IncDec	++		9010925	1					
ANR	9011039	ExpressionStatement	"make_int ( esp , 0 )"	6239:4:201495:201511	9010925	13	True				
ANR	9011040	CallExpression	"make_int ( esp , 0 )"		9010925	0					
ANR	9011041	Callee	make_int		9010925	0					
ANR	9011042	Identifier	make_int		9010925	0					
ANR	9011043	ArgumentList	esp		9010925	1					
ANR	9011044	Argument	esp		9010925	0					
ANR	9011045	Identifier	esp		9010925	0					
ANR	9011046	Argument	0		9010925	1					
ANR	9011047	PrimaryExpression	0		9010925	0					
ANR	9011048	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6241:4:201568:201603	9010925	14	True				
ANR	9011049	CallExpression	push_op_estack ( setdevicecolor_cont )		9010925	0					
ANR	9011050	Callee	push_op_estack		9010925	0					
ANR	9011051	Identifier	push_op_estack		9010925	0					
ANR	9011052	ArgumentList	setdevicecolor_cont		9010925	1					
ANR	9011053	Argument	setdevicecolor_cont		9010925	0					
ANR	9011054	Identifier	setdevicecolor_cont		9010925	0					
ANR	9011055	ReturnStatement	return o_push_estack ;	6242:4:201609:201629	9010925	15	True				
ANR	9011056	Identifier	o_push_estack		9010925	0					
ANR	9011057	ReturnType	static int		9010925	1					
ANR	9011058	Identifier	zsetgray		9010925	2					
ANR	9011059	ParameterList	i_ctx_t * i_ctx_p		9010925	3					
ANR	9011060	Parameter	i_ctx_t * i_ctx_p	6211:9:200721:200737	9010925	0	True				
ANR	9011061	ParameterType	i_ctx_t *		9010925	0					
ANR	9011062	Identifier	i_ctx_p		9010925	1					
ANR	9011063	CFGEntryNode	ENTRY		9010925		True				
ANR	9011064	CFGExitNode	EXIT		9010925		True				
ANR	9011065	Symbol	op		9010925						
ANR	9011066	Symbol	make_floats		9010925						
ANR	9011067	Symbol	code		9010925						
ANR	9011068	Symbol	& value		9010925						
ANR	9011069	Symbol	esp		9010925						
ANR	9011070	Symbol	float_params		9010925						
ANR	9011071	Symbol	colour_cleanup		9010925						
ANR	9011072	Symbol	osp		9010925						
ANR	9011073	Symbol	es_other		9010925						
ANR	9011074	Symbol	i_ctx_p		9010925						
ANR	9011075	Symbol	value		9010925						
ANR	9011076	Symbol	setdevicecolor_cont		9010925						
ANR	9011077	Symbol	o_push_estack		9010925						
ANR	9011078	Function	zsethsbcolor	6244:0:201633:202723							
ANR	9011079	FunctionDef	zsethsbcolor (i_ctx_t * i_ctx_p)		9011078	0					
ANR	9011080	CompoundStatement		6246:0:201676:202723	9011078	0					
ANR	9011081	IdentifierDeclStatement	os_ptr op = osp ;	6247:4:201682:201698	9011078	0	True				
ANR	9011082	IdentifierDecl	op = osp		9011078	0					
ANR	9011083	IdentifierDeclType	os_ptr		9011078	0					
ANR	9011084	Identifier	op		9011078	1					
ANR	9011085	AssignmentExpression	op = osp		9011078	2		=			
ANR	9011086	Identifier	osp		9011078	0					
ANR	9011087	Identifier	osp		9011078	1					
ANR	9011088	IdentifierDeclStatement	"int code , i ;"	6248:4:201737:201748	9011078	1	True				
ANR	9011089	IdentifierDecl	code		9011078	0					
ANR	9011090	IdentifierDeclType	int		9011078	0					
ANR	9011091	Identifier	code		9011078	1					
ANR	9011092	IdentifierDecl	i		9011078	1					
ANR	9011093	IdentifierDeclType	int		9011078	0					
ANR	9011094	Identifier	i		9011078	1					
ANR	9011095	IdentifierDeclStatement	float values [ 3 ] ;	6249:4:201754:201769	9011078	2	True				
ANR	9011096	IdentifierDecl	values [ 3 ]		9011078	0					
ANR	9011097	IdentifierDeclType	float [ 3 ]		9011078	0					
ANR	9011098	Identifier	values		9011078	1					
ANR	9011099	PrimaryExpression	3		9011078	2					
ANR	9011100	ExpressionStatement	"code = float_params ( op , 3 , ( float * ) & values )"	6252:4:201837:201881	9011078	3	True				
ANR	9011101	AssignmentExpression	"code = float_params ( op , 3 , ( float * ) & values )"		9011078	0		=			
ANR	9011102	Identifier	code		9011078	0					
ANR	9011103	CallExpression	"float_params ( op , 3 , ( float * ) & values )"		9011078	1					
ANR	9011104	Callee	float_params		9011078	0					
ANR	9011105	Identifier	float_params		9011078	0					
ANR	9011106	ArgumentList	op		9011078	1					
ANR	9011107	Argument	op		9011078	0					
ANR	9011108	Identifier	op		9011078	0					
ANR	9011109	Argument	3		9011078	1					
ANR	9011110	PrimaryExpression	3		9011078	0					
ANR	9011111	Argument	( float * ) & values		9011078	2					
ANR	9011112	CastExpression	( float * ) & values		9011078	0					
ANR	9011113	CastTarget	float *		9011078	0					
ANR	9011114	UnaryOperationExpression	& values		9011078	1					
ANR	9011115	UnaryOperator	&		9011078	0					
ANR	9011116	Identifier	values		9011078	1					
ANR	9011117	IfStatement	if ( code < 0 )		9011078	4					
ANR	9011118	Condition	code < 0	6253:8:201891:201898	9011078	0	True				
ANR	9011119	RelationalExpression	code < 0		9011078	0		<			
ANR	9011120	Identifier	code		9011078	0					
ANR	9011121	PrimaryExpression	0		9011078	1					
ANR	9011122	ReturnStatement	return code ;	6254:8:201909:201920	9011078	1	True				
ANR	9011123	Identifier	code		9011078	0					
ANR	9011124	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		9011078	5					
ANR	9011125	ForInit	i = 0 ;	6256:9:201972:201977	9011078	0	True				
ANR	9011126	AssignmentExpression	i = 0		9011078	0		=			
ANR	9011127	Identifier	i		9011078	0					
ANR	9011128	PrimaryExpression	0		9011078	1					
ANR	9011129	Condition	i < 3	6256:15:201978:201982	9011078	1	True				
ANR	9011130	RelationalExpression	i < 3		9011078	0		<			
ANR	9011131	Identifier	i		9011078	0					
ANR	9011132	PrimaryExpression	3		9011078	1					
ANR	9011133	PostIncDecOperationExpression	i ++	6256:22:201985:201987	9011078	2	True				
ANR	9011134	Identifier	i		9011078	0					
ANR	9011135	IncDec	++		9011078	1					
ANR	9011136	CompoundStatement		11:27:313:313	9011078	3					
ANR	9011137	IfStatement	if ( values [ i ] < 0 )		9011078	0					
ANR	9011138	Condition	values [ i ] < 0	6257:12:202004:202016	9011078	0	True				
ANR	9011139	RelationalExpression	values [ i ] < 0		9011078	0		<			
ANR	9011140	ArrayIndexing	values [ i ]		9011078	0					
ANR	9011141	Identifier	values		9011078	0					
ANR	9011142	Identifier	i		9011078	1					
ANR	9011143	PrimaryExpression	0		9011078	1					
ANR	9011144	ExpressionStatement	values [ i ] = 0	6258:12:202031:202044	9011078	1	True				
ANR	9011145	AssignmentExpression	values [ i ] = 0		9011078	0		=			
ANR	9011146	ArrayIndexing	values [ i ]		9011078	0					
ANR	9011147	Identifier	values		9011078	0					
ANR	9011148	Identifier	i		9011078	1					
ANR	9011149	PrimaryExpression	0		9011078	1					
ANR	9011150	ElseStatement	else		9011078	0					
ANR	9011151	IfStatement	if ( values [ i ] > 1 )		9011078	0					
ANR	9011152	Condition	values [ i ] > 1	6259:17:202063:202075	9011078	0	True				
ANR	9011153	RelationalExpression	values [ i ] > 1		9011078	0		>			
ANR	9011154	ArrayIndexing	values [ i ]		9011078	0					
ANR	9011155	Identifier	values		9011078	0					
ANR	9011156	Identifier	i		9011078	1					
ANR	9011157	PrimaryExpression	1		9011078	1					
ANR	9011158	ExpressionStatement	values [ i ] = 1	6260:12:202090:202103	9011078	1	True				
ANR	9011159	AssignmentExpression	values [ i ] = 1		9011078	0		=			
ANR	9011160	ArrayIndexing	values [ i ]		9011078	0					
ANR	9011161	Identifier	values		9011078	0					
ANR	9011162	Identifier	i		9011078	1					
ANR	9011163	PrimaryExpression	1		9011078	1					
ANR	9011164	ExpressionStatement	hsb2rgb ( ( float * ) & values )	6263:4:202116:202141	9011078	6	True				
ANR	9011165	CallExpression	hsb2rgb ( ( float * ) & values )		9011078	0					
ANR	9011166	Callee	hsb2rgb		9011078	0					
ANR	9011167	Identifier	hsb2rgb		9011078	0					
ANR	9011168	ArgumentList	( float * ) & values		9011078	1					
ANR	9011169	Argument	( float * ) & values		9011078	0					
ANR	9011170	CastExpression	( float * ) & values		9011078	0					
ANR	9011171	CastTarget	float *		9011078	0					
ANR	9011172	UnaryOperationExpression	& values		9011078	1					
ANR	9011173	UnaryOperator	&		9011078	0					
ANR	9011174	Identifier	values		9011078	1					
ANR	9011175	ExpressionStatement	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"	6265:4:202148:202202	9011078	7	True				
ANR	9011176	AssignmentExpression	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		9011078	0		=			
ANR	9011177	Identifier	code		9011078	0					
ANR	9011178	CallExpression	"make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		9011078	1					
ANR	9011179	Callee	make_floats		9011078	0					
ANR	9011180	Identifier	make_floats		9011078	0					
ANR	9011181	ArgumentList	& op [ - 2 ]		9011078	1					
ANR	9011182	Argument	& op [ - 2 ]		9011078	0					
ANR	9011183	UnaryOperationExpression	& op [ - 2 ]		9011078	0					
ANR	9011184	UnaryOperator	&		9011078	0					
ANR	9011185	ArrayIndexing	op [ - 2 ]		9011078	1					
ANR	9011186	Identifier	op		9011078	0					
ANR	9011187	UnaryOperationExpression	- 2		9011078	1					
ANR	9011188	UnaryOperator	-		9011078	0					
ANR	9011189	PrimaryExpression	2		9011078	1					
ANR	9011190	Argument	( const float * ) & values		9011078	1					
ANR	9011191	CastExpression	( const float * ) & values		9011078	0					
ANR	9011192	CastTarget	const float *		9011078	0					
ANR	9011193	UnaryOperationExpression	& values		9011078	1					
ANR	9011194	UnaryOperator	&		9011078	0					
ANR	9011195	Identifier	values		9011078	1					
ANR	9011196	Argument	3		9011078	2					
ANR	9011197	PrimaryExpression	3		9011078	0					
ANR	9011198	IfStatement	if ( code < 0 )		9011078	8					
ANR	9011199	Condition	code < 0	6266:8:202212:202219	9011078	0	True				
ANR	9011200	RelationalExpression	code < 0		9011078	0		<			
ANR	9011201	Identifier	code		9011078	0					
ANR	9011202	PrimaryExpression	0		9011078	1					
ANR	9011203	ReturnStatement	return code ;	6267:8:202230:202241	9011078	1	True				
ANR	9011204	Identifier	code		9011078	0					
ANR	9011205	ExpressionStatement	check_estack ( 5 )	6271:4:202371:202386	9011078	9	True				
ANR	9011206	CallExpression	check_estack ( 5 )		9011078	0					
ANR	9011207	Callee	check_estack		9011078	0					
ANR	9011208	Identifier	check_estack		9011078	0					
ANR	9011209	ArgumentList	5		9011078	1					
ANR	9011210	Argument	5		9011078	0					
ANR	9011211	PrimaryExpression	5		9011078	0					
ANR	9011212	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6272:4:202392:202434	9011078	10	True				
ANR	9011213	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9011078	0					
ANR	9011214	Callee	push_mark_estack		9011078	0					
ANR	9011215	Identifier	push_mark_estack		9011078	0					
ANR	9011216	ArgumentList	es_other		9011078	1					
ANR	9011217	Argument	es_other		9011078	0					
ANR	9011218	Identifier	es_other		9011078	0					
ANR	9011219	Argument	colour_cleanup		9011078	1					
ANR	9011220	Identifier	colour_cleanup		9011078	0					
ANR	9011221	ExpressionStatement	esp ++	6273:4:202440:202445	9011078	11	True				
ANR	9011222	PostIncDecOperationExpression	esp ++		9011078	0					
ANR	9011223	Identifier	esp		9011078	0					
ANR	9011224	IncDec	++		9011078	1					
ANR	9011225	ExpressionStatement	"make_int ( esp , 1 )"	6275:4:202498:202514	9011078	12	True				
ANR	9011226	CallExpression	"make_int ( esp , 1 )"		9011078	0					
ANR	9011227	Callee	make_int		9011078	0					
ANR	9011228	Identifier	make_int		9011078	0					
ANR	9011229	ArgumentList	esp		9011078	1					
ANR	9011230	Argument	esp		9011078	0					
ANR	9011231	Identifier	esp		9011078	0					
ANR	9011232	Argument	1		9011078	1					
ANR	9011233	PrimaryExpression	1		9011078	0					
ANR	9011234	ExpressionStatement	esp ++	6276:4:202520:202525	9011078	13	True				
ANR	9011235	PostIncDecOperationExpression	esp ++		9011078	0					
ANR	9011236	Identifier	esp		9011078	0					
ANR	9011237	IncDec	++		9011078	1					
ANR	9011238	ExpressionStatement	"make_int ( esp , 0 )"	6278:4:202587:202603	9011078	14	True				
ANR	9011239	CallExpression	"make_int ( esp , 0 )"		9011078	0					
ANR	9011240	Callee	make_int		9011078	0					
ANR	9011241	Identifier	make_int		9011078	0					
ANR	9011242	ArgumentList	esp		9011078	1					
ANR	9011243	Argument	esp		9011078	0					
ANR	9011244	Identifier	esp		9011078	0					
ANR	9011245	Argument	0		9011078	1					
ANR	9011246	PrimaryExpression	0		9011078	0					
ANR	9011247	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6280:4:202660:202695	9011078	15	True				
ANR	9011248	CallExpression	push_op_estack ( setdevicecolor_cont )		9011078	0					
ANR	9011249	Callee	push_op_estack		9011078	0					
ANR	9011250	Identifier	push_op_estack		9011078	0					
ANR	9011251	ArgumentList	setdevicecolor_cont		9011078	1					
ANR	9011252	Argument	setdevicecolor_cont		9011078	0					
ANR	9011253	Identifier	setdevicecolor_cont		9011078	0					
ANR	9011254	ReturnStatement	return o_push_estack ;	6281:4:202701:202721	9011078	16	True				
ANR	9011255	Identifier	o_push_estack		9011078	0					
ANR	9011256	ReturnType	static int		9011078	1					
ANR	9011257	Identifier	zsethsbcolor		9011078	2					
ANR	9011258	ParameterList	i_ctx_t * i_ctx_p		9011078	3					
ANR	9011259	Parameter	i_ctx_t * i_ctx_p	6245:13:201657:201673	9011078	0	True				
ANR	9011260	ParameterType	i_ctx_t *		9011078	0					
ANR	9011261	Identifier	i_ctx_p		9011078	1					
ANR	9011262	CFGEntryNode	ENTRY		9011078		True				
ANR	9011263	CFGExitNode	EXIT		9011078		True				
ANR	9011264	Symbol	op		9011078						
ANR	9011265	Symbol	make_floats		9011078						
ANR	9011266	Symbol	code		9011078						
ANR	9011267	Symbol	esp		9011078						
ANR	9011268	Symbol	float_params		9011078						
ANR	9011269	Symbol	& values		9011078						
ANR	9011270	Symbol	* values		9011078						
ANR	9011271	Symbol	values		9011078						
ANR	9011272	Symbol	i		9011078						
ANR	9011273	Symbol	colour_cleanup		9011078						
ANR	9011274	Symbol	osp		9011078						
ANR	9011275	Symbol	es_other		9011078						
ANR	9011276	Symbol	* i		9011078						
ANR	9011277	Symbol	i_ctx_p		9011078						
ANR	9011278	Symbol	setdevicecolor_cont		9011078						
ANR	9011279	Symbol	o_push_estack		9011078						
ANR	9011280	Function	zsetrgbcolor	6283:0:202725:203783							
ANR	9011281	FunctionDef	zsetrgbcolor (i_ctx_t * i_ctx_p)		9011280	0					
ANR	9011282	CompoundStatement		6285:0:202768:203783	9011280	0					
ANR	9011283	IdentifierDeclStatement	os_ptr op = osp ;	6286:4:202774:202790	9011280	0	True				
ANR	9011284	IdentifierDecl	op = osp		9011280	0					
ANR	9011285	IdentifierDeclType	os_ptr		9011280	0					
ANR	9011286	Identifier	op		9011280	1					
ANR	9011287	AssignmentExpression	op = osp		9011280	2		=			
ANR	9011288	Identifier	osp		9011280	0					
ANR	9011289	Identifier	osp		9011280	1					
ANR	9011290	IdentifierDeclStatement	"int code , i ;"	6287:4:202829:202840	9011280	1	True				
ANR	9011291	IdentifierDecl	code		9011280	0					
ANR	9011292	IdentifierDeclType	int		9011280	0					
ANR	9011293	Identifier	code		9011280	1					
ANR	9011294	IdentifierDecl	i		9011280	1					
ANR	9011295	IdentifierDeclType	int		9011280	0					
ANR	9011296	Identifier	i		9011280	1					
ANR	9011297	IdentifierDeclStatement	float values [ 3 ] ;	6288:4:202846:202861	9011280	2	True				
ANR	9011298	IdentifierDecl	values [ 3 ]		9011280	0					
ANR	9011299	IdentifierDeclType	float [ 3 ]		9011280	0					
ANR	9011300	Identifier	values		9011280	1					
ANR	9011301	PrimaryExpression	3		9011280	2					
ANR	9011302	ExpressionStatement	"code = float_params ( op , 3 , ( float * ) & values )"	6291:4:202929:202973	9011280	3	True				
ANR	9011303	AssignmentExpression	"code = float_params ( op , 3 , ( float * ) & values )"		9011280	0		=			
ANR	9011304	Identifier	code		9011280	0					
ANR	9011305	CallExpression	"float_params ( op , 3 , ( float * ) & values )"		9011280	1					
ANR	9011306	Callee	float_params		9011280	0					
ANR	9011307	Identifier	float_params		9011280	0					
ANR	9011308	ArgumentList	op		9011280	1					
ANR	9011309	Argument	op		9011280	0					
ANR	9011310	Identifier	op		9011280	0					
ANR	9011311	Argument	3		9011280	1					
ANR	9011312	PrimaryExpression	3		9011280	0					
ANR	9011313	Argument	( float * ) & values		9011280	2					
ANR	9011314	CastExpression	( float * ) & values		9011280	0					
ANR	9011315	CastTarget	float *		9011280	0					
ANR	9011316	UnaryOperationExpression	& values		9011280	1					
ANR	9011317	UnaryOperator	&		9011280	0					
ANR	9011318	Identifier	values		9011280	1					
ANR	9011319	IfStatement	if ( code < 0 )		9011280	4					
ANR	9011320	Condition	code < 0	6292:8:202983:202990	9011280	0	True				
ANR	9011321	RelationalExpression	code < 0		9011280	0		<			
ANR	9011322	Identifier	code		9011280	0					
ANR	9011323	PrimaryExpression	0		9011280	1					
ANR	9011324	ReturnStatement	return code ;	6293:8:203001:203012	9011280	1	True				
ANR	9011325	Identifier	code		9011280	0					
ANR	9011326	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		9011280	5					
ANR	9011327	ForInit	i = 0 ;	6295:9:203064:203069	9011280	0	True				
ANR	9011328	AssignmentExpression	i = 0		9011280	0		=			
ANR	9011329	Identifier	i		9011280	0					
ANR	9011330	PrimaryExpression	0		9011280	1					
ANR	9011331	Condition	i < 3	6295:15:203070:203074	9011280	1	True				
ANR	9011332	RelationalExpression	i < 3		9011280	0		<			
ANR	9011333	Identifier	i		9011280	0					
ANR	9011334	PrimaryExpression	3		9011280	1					
ANR	9011335	PostIncDecOperationExpression	i ++	6295:22:203077:203079	9011280	2	True				
ANR	9011336	Identifier	i		9011280	0					
ANR	9011337	IncDec	++		9011280	1					
ANR	9011338	CompoundStatement		11:27:313:313	9011280	3					
ANR	9011339	IfStatement	if ( values [ i ] < 0 )		9011280	0					
ANR	9011340	Condition	values [ i ] < 0	6296:12:203096:203108	9011280	0	True				
ANR	9011341	RelationalExpression	values [ i ] < 0		9011280	0		<			
ANR	9011342	ArrayIndexing	values [ i ]		9011280	0					
ANR	9011343	Identifier	values		9011280	0					
ANR	9011344	Identifier	i		9011280	1					
ANR	9011345	PrimaryExpression	0		9011280	1					
ANR	9011346	ExpressionStatement	values [ i ] = 0	6297:12:203123:203136	9011280	1	True				
ANR	9011347	AssignmentExpression	values [ i ] = 0		9011280	0		=			
ANR	9011348	ArrayIndexing	values [ i ]		9011280	0					
ANR	9011349	Identifier	values		9011280	0					
ANR	9011350	Identifier	i		9011280	1					
ANR	9011351	PrimaryExpression	0		9011280	1					
ANR	9011352	ElseStatement	else		9011280	0					
ANR	9011353	IfStatement	if ( values [ i ] > 1 )		9011280	0					
ANR	9011354	Condition	values [ i ] > 1	6298:17:203155:203167	9011280	0	True				
ANR	9011355	RelationalExpression	values [ i ] > 1		9011280	0		>			
ANR	9011356	ArrayIndexing	values [ i ]		9011280	0					
ANR	9011357	Identifier	values		9011280	0					
ANR	9011358	Identifier	i		9011280	1					
ANR	9011359	PrimaryExpression	1		9011280	1					
ANR	9011360	ExpressionStatement	values [ i ] = 1	6299:12:203182:203195	9011280	1	True				
ANR	9011361	AssignmentExpression	values [ i ] = 1		9011280	0		=			
ANR	9011362	ArrayIndexing	values [ i ]		9011280	0					
ANR	9011363	Identifier	values		9011280	0					
ANR	9011364	Identifier	i		9011280	1					
ANR	9011365	PrimaryExpression	1		9011280	1					
ANR	9011366	ExpressionStatement	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"	6302:4:203208:203262	9011280	6	True				
ANR	9011367	AssignmentExpression	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		9011280	0		=			
ANR	9011368	Identifier	code		9011280	0					
ANR	9011369	CallExpression	"make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		9011280	1					
ANR	9011370	Callee	make_floats		9011280	0					
ANR	9011371	Identifier	make_floats		9011280	0					
ANR	9011372	ArgumentList	& op [ - 2 ]		9011280	1					
ANR	9011373	Argument	& op [ - 2 ]		9011280	0					
ANR	9011374	UnaryOperationExpression	& op [ - 2 ]		9011280	0					
ANR	9011375	UnaryOperator	&		9011280	0					
ANR	9011376	ArrayIndexing	op [ - 2 ]		9011280	1					
ANR	9011377	Identifier	op		9011280	0					
ANR	9011378	UnaryOperationExpression	- 2		9011280	1					
ANR	9011379	UnaryOperator	-		9011280	0					
ANR	9011380	PrimaryExpression	2		9011280	1					
ANR	9011381	Argument	( const float * ) & values		9011280	1					
ANR	9011382	CastExpression	( const float * ) & values		9011280	0					
ANR	9011383	CastTarget	const float *		9011280	0					
ANR	9011384	UnaryOperationExpression	& values		9011280	1					
ANR	9011385	UnaryOperator	&		9011280	0					
ANR	9011386	Identifier	values		9011280	1					
ANR	9011387	Argument	3		9011280	2					
ANR	9011388	PrimaryExpression	3		9011280	0					
ANR	9011389	IfStatement	if ( code < 0 )		9011280	7					
ANR	9011390	Condition	code < 0	6303:8:203272:203279	9011280	0	True				
ANR	9011391	RelationalExpression	code < 0		9011280	0		<			
ANR	9011392	Identifier	code		9011280	0					
ANR	9011393	PrimaryExpression	0		9011280	1					
ANR	9011394	ReturnStatement	return code ;	6304:8:203290:203301	9011280	1	True				
ANR	9011395	Identifier	code		9011280	0					
ANR	9011396	ExpressionStatement	check_estack ( 5 )	6308:4:203431:203446	9011280	8	True				
ANR	9011397	CallExpression	check_estack ( 5 )		9011280	0					
ANR	9011398	Callee	check_estack		9011280	0					
ANR	9011399	Identifier	check_estack		9011280	0					
ANR	9011400	ArgumentList	5		9011280	1					
ANR	9011401	Argument	5		9011280	0					
ANR	9011402	PrimaryExpression	5		9011280	0					
ANR	9011403	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6309:4:203452:203494	9011280	9	True				
ANR	9011404	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9011280	0					
ANR	9011405	Callee	push_mark_estack		9011280	0					
ANR	9011406	Identifier	push_mark_estack		9011280	0					
ANR	9011407	ArgumentList	es_other		9011280	1					
ANR	9011408	Argument	es_other		9011280	0					
ANR	9011409	Identifier	es_other		9011280	0					
ANR	9011410	Argument	colour_cleanup		9011280	1					
ANR	9011411	Identifier	colour_cleanup		9011280	0					
ANR	9011412	ExpressionStatement	esp ++	6310:4:203500:203505	9011280	10	True				
ANR	9011413	PostIncDecOperationExpression	esp ++		9011280	0					
ANR	9011414	Identifier	esp		9011280	0					
ANR	9011415	IncDec	++		9011280	1					
ANR	9011416	ExpressionStatement	"make_int ( esp , 1 )"	6312:4:203558:203574	9011280	11	True				
ANR	9011417	CallExpression	"make_int ( esp , 1 )"		9011280	0					
ANR	9011418	Callee	make_int		9011280	0					
ANR	9011419	Identifier	make_int		9011280	0					
ANR	9011420	ArgumentList	esp		9011280	1					
ANR	9011421	Argument	esp		9011280	0					
ANR	9011422	Identifier	esp		9011280	0					
ANR	9011423	Argument	1		9011280	1					
ANR	9011424	PrimaryExpression	1		9011280	0					
ANR	9011425	ExpressionStatement	esp ++	6313:4:203580:203585	9011280	12	True				
ANR	9011426	PostIncDecOperationExpression	esp ++		9011280	0					
ANR	9011427	Identifier	esp		9011280	0					
ANR	9011428	IncDec	++		9011280	1					
ANR	9011429	ExpressionStatement	"make_int ( esp , 0 )"	6315:4:203647:203663	9011280	13	True				
ANR	9011430	CallExpression	"make_int ( esp , 0 )"		9011280	0					
ANR	9011431	Callee	make_int		9011280	0					
ANR	9011432	Identifier	make_int		9011280	0					
ANR	9011433	ArgumentList	esp		9011280	1					
ANR	9011434	Argument	esp		9011280	0					
ANR	9011435	Identifier	esp		9011280	0					
ANR	9011436	Argument	0		9011280	1					
ANR	9011437	PrimaryExpression	0		9011280	0					
ANR	9011438	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6317:4:203720:203755	9011280	14	True				
ANR	9011439	CallExpression	push_op_estack ( setdevicecolor_cont )		9011280	0					
ANR	9011440	Callee	push_op_estack		9011280	0					
ANR	9011441	Identifier	push_op_estack		9011280	0					
ANR	9011442	ArgumentList	setdevicecolor_cont		9011280	1					
ANR	9011443	Argument	setdevicecolor_cont		9011280	0					
ANR	9011444	Identifier	setdevicecolor_cont		9011280	0					
ANR	9011445	ReturnStatement	return o_push_estack ;	6318:4:203761:203781	9011280	15	True				
ANR	9011446	Identifier	o_push_estack		9011280	0					
ANR	9011447	ReturnType	static int		9011280	1					
ANR	9011448	Identifier	zsetrgbcolor		9011280	2					
ANR	9011449	ParameterList	i_ctx_t * i_ctx_p		9011280	3					
ANR	9011450	Parameter	i_ctx_t * i_ctx_p	6284:13:202749:202765	9011280	0	True				
ANR	9011451	ParameterType	i_ctx_t *		9011280	0					
ANR	9011452	Identifier	i_ctx_p		9011280	1					
ANR	9011453	CFGEntryNode	ENTRY		9011280		True				
ANR	9011454	CFGExitNode	EXIT		9011280		True				
ANR	9011455	Symbol	op		9011280						
ANR	9011456	Symbol	make_floats		9011280						
ANR	9011457	Symbol	code		9011280						
ANR	9011458	Symbol	esp		9011280						
ANR	9011459	Symbol	float_params		9011280						
ANR	9011460	Symbol	& values		9011280						
ANR	9011461	Symbol	* values		9011280						
ANR	9011462	Symbol	values		9011280						
ANR	9011463	Symbol	i		9011280						
ANR	9011464	Symbol	colour_cleanup		9011280						
ANR	9011465	Symbol	osp		9011280						
ANR	9011466	Symbol	es_other		9011280						
ANR	9011467	Symbol	* i		9011280						
ANR	9011468	Symbol	i_ctx_p		9011280						
ANR	9011469	Symbol	setdevicecolor_cont		9011280						
ANR	9011470	Symbol	o_push_estack		9011280						
ANR	9011471	Function	zsetcmykcolor	6321:0:203786:204846							
ANR	9011472	FunctionDef	zsetcmykcolor (i_ctx_t * i_ctx_p)		9011471	0					
ANR	9011473	CompoundStatement		6323:0:203830:204846	9011471	0					
ANR	9011474	IdentifierDeclStatement	os_ptr op = osp ;	6324:4:203836:203852	9011471	0	True				
ANR	9011475	IdentifierDecl	op = osp		9011471	0					
ANR	9011476	IdentifierDeclType	os_ptr		9011471	0					
ANR	9011477	Identifier	op		9011471	1					
ANR	9011478	AssignmentExpression	op = osp		9011471	2		=			
ANR	9011479	Identifier	osp		9011471	0					
ANR	9011480	Identifier	osp		9011471	1					
ANR	9011481	IdentifierDeclStatement	"int code , i ;"	6325:4:203891:203902	9011471	1	True				
ANR	9011482	IdentifierDecl	code		9011471	0					
ANR	9011483	IdentifierDeclType	int		9011471	0					
ANR	9011484	Identifier	code		9011471	1					
ANR	9011485	IdentifierDecl	i		9011471	1					
ANR	9011486	IdentifierDeclType	int		9011471	0					
ANR	9011487	Identifier	i		9011471	1					
ANR	9011488	IdentifierDeclStatement	float values [ 4 ] ;	6326:4:203908:203923	9011471	2	True				
ANR	9011489	IdentifierDecl	values [ 4 ]		9011471	0					
ANR	9011490	IdentifierDeclType	float [ 4 ]		9011471	0					
ANR	9011491	Identifier	values		9011471	1					
ANR	9011492	PrimaryExpression	4		9011471	2					
ANR	9011493	ExpressionStatement	"code = float_params ( op , 4 , ( float * ) & values )"	6329:4:203991:204035	9011471	3	True				
ANR	9011494	AssignmentExpression	"code = float_params ( op , 4 , ( float * ) & values )"		9011471	0		=			
ANR	9011495	Identifier	code		9011471	0					
ANR	9011496	CallExpression	"float_params ( op , 4 , ( float * ) & values )"		9011471	1					
ANR	9011497	Callee	float_params		9011471	0					
ANR	9011498	Identifier	float_params		9011471	0					
ANR	9011499	ArgumentList	op		9011471	1					
ANR	9011500	Argument	op		9011471	0					
ANR	9011501	Identifier	op		9011471	0					
ANR	9011502	Argument	4		9011471	1					
ANR	9011503	PrimaryExpression	4		9011471	0					
ANR	9011504	Argument	( float * ) & values		9011471	2					
ANR	9011505	CastExpression	( float * ) & values		9011471	0					
ANR	9011506	CastTarget	float *		9011471	0					
ANR	9011507	UnaryOperationExpression	& values		9011471	1					
ANR	9011508	UnaryOperator	&		9011471	0					
ANR	9011509	Identifier	values		9011471	1					
ANR	9011510	IfStatement	if ( code < 0 )		9011471	4					
ANR	9011511	Condition	code < 0	6330:8:204045:204052	9011471	0	True				
ANR	9011512	RelationalExpression	code < 0		9011471	0		<			
ANR	9011513	Identifier	code		9011471	0					
ANR	9011514	PrimaryExpression	0		9011471	1					
ANR	9011515	ReturnStatement	return code ;	6331:8:204063:204074	9011471	1	True				
ANR	9011516	Identifier	code		9011471	0					
ANR	9011517	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		9011471	5					
ANR	9011518	ForInit	i = 0 ;	6333:9:204126:204131	9011471	0	True				
ANR	9011519	AssignmentExpression	i = 0		9011471	0		=			
ANR	9011520	Identifier	i		9011471	0					
ANR	9011521	PrimaryExpression	0		9011471	1					
ANR	9011522	Condition	i < 4	6333:15:204132:204136	9011471	1	True				
ANR	9011523	RelationalExpression	i < 4		9011471	0		<			
ANR	9011524	Identifier	i		9011471	0					
ANR	9011525	PrimaryExpression	4		9011471	1					
ANR	9011526	PostIncDecOperationExpression	i ++	6333:22:204139:204141	9011471	2	True				
ANR	9011527	Identifier	i		9011471	0					
ANR	9011528	IncDec	++		9011471	1					
ANR	9011529	CompoundStatement		11:27:313:313	9011471	3					
ANR	9011530	IfStatement	if ( values [ i ] < 0 )		9011471	0					
ANR	9011531	Condition	values [ i ] < 0	6334:12:204158:204170	9011471	0	True				
ANR	9011532	RelationalExpression	values [ i ] < 0		9011471	0		<			
ANR	9011533	ArrayIndexing	values [ i ]		9011471	0					
ANR	9011534	Identifier	values		9011471	0					
ANR	9011535	Identifier	i		9011471	1					
ANR	9011536	PrimaryExpression	0		9011471	1					
ANR	9011537	ExpressionStatement	values [ i ] = 0	6335:12:204185:204198	9011471	1	True				
ANR	9011538	AssignmentExpression	values [ i ] = 0		9011471	0		=			
ANR	9011539	ArrayIndexing	values [ i ]		9011471	0					
ANR	9011540	Identifier	values		9011471	0					
ANR	9011541	Identifier	i		9011471	1					
ANR	9011542	PrimaryExpression	0		9011471	1					
ANR	9011543	ElseStatement	else		9011471	0					
ANR	9011544	IfStatement	if ( values [ i ] > 1 )		9011471	0					
ANR	9011545	Condition	values [ i ] > 1	6336:17:204217:204229	9011471	0	True				
ANR	9011546	RelationalExpression	values [ i ] > 1		9011471	0		>			
ANR	9011547	ArrayIndexing	values [ i ]		9011471	0					
ANR	9011548	Identifier	values		9011471	0					
ANR	9011549	Identifier	i		9011471	1					
ANR	9011550	PrimaryExpression	1		9011471	1					
ANR	9011551	ExpressionStatement	values [ i ] = 1	6337:12:204244:204257	9011471	1	True				
ANR	9011552	AssignmentExpression	values [ i ] = 1		9011471	0		=			
ANR	9011553	ArrayIndexing	values [ i ]		9011471	0					
ANR	9011554	Identifier	values		9011471	0					
ANR	9011555	Identifier	i		9011471	1					
ANR	9011556	PrimaryExpression	1		9011471	1					
ANR	9011557	ExpressionStatement	"code = make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"	6340:4:204270:204324	9011471	6	True				
ANR	9011558	AssignmentExpression	"code = make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"		9011471	0		=			
ANR	9011559	Identifier	code		9011471	0					
ANR	9011560	CallExpression	"make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"		9011471	1					
ANR	9011561	Callee	make_floats		9011471	0					
ANR	9011562	Identifier	make_floats		9011471	0					
ANR	9011563	ArgumentList	& op [ - 3 ]		9011471	1					
ANR	9011564	Argument	& op [ - 3 ]		9011471	0					
ANR	9011565	UnaryOperationExpression	& op [ - 3 ]		9011471	0					
ANR	9011566	UnaryOperator	&		9011471	0					
ANR	9011567	ArrayIndexing	op [ - 3 ]		9011471	1					
ANR	9011568	Identifier	op		9011471	0					
ANR	9011569	UnaryOperationExpression	- 3		9011471	1					
ANR	9011570	UnaryOperator	-		9011471	0					
ANR	9011571	PrimaryExpression	3		9011471	1					
ANR	9011572	Argument	( const float * ) & values		9011471	1					
ANR	9011573	CastExpression	( const float * ) & values		9011471	0					
ANR	9011574	CastTarget	const float *		9011471	0					
ANR	9011575	UnaryOperationExpression	& values		9011471	1					
ANR	9011576	UnaryOperator	&		9011471	0					
ANR	9011577	Identifier	values		9011471	1					
ANR	9011578	Argument	4		9011471	2					
ANR	9011579	PrimaryExpression	4		9011471	0					
ANR	9011580	IfStatement	if ( code < 0 )		9011471	7					
ANR	9011581	Condition	code < 0	6341:8:204334:204341	9011471	0	True				
ANR	9011582	RelationalExpression	code < 0		9011471	0		<			
ANR	9011583	Identifier	code		9011471	0					
ANR	9011584	PrimaryExpression	0		9011471	1					
ANR	9011585	ReturnStatement	return code ;	6342:8:204352:204363	9011471	1	True				
ANR	9011586	Identifier	code		9011471	0					
ANR	9011587	ExpressionStatement	check_estack ( 5 )	6346:4:204493:204508	9011471	8	True				
ANR	9011588	CallExpression	check_estack ( 5 )		9011471	0					
ANR	9011589	Callee	check_estack		9011471	0					
ANR	9011590	Identifier	check_estack		9011471	0					
ANR	9011591	ArgumentList	5		9011471	1					
ANR	9011592	Argument	5		9011471	0					
ANR	9011593	PrimaryExpression	5		9011471	0					
ANR	9011594	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6347:4:204514:204556	9011471	9	True				
ANR	9011595	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9011471	0					
ANR	9011596	Callee	push_mark_estack		9011471	0					
ANR	9011597	Identifier	push_mark_estack		9011471	0					
ANR	9011598	ArgumentList	es_other		9011471	1					
ANR	9011599	Argument	es_other		9011471	0					
ANR	9011600	Identifier	es_other		9011471	0					
ANR	9011601	Argument	colour_cleanup		9011471	1					
ANR	9011602	Identifier	colour_cleanup		9011471	0					
ANR	9011603	ExpressionStatement	esp ++	6348:4:204562:204567	9011471	10	True				
ANR	9011604	PostIncDecOperationExpression	esp ++		9011471	0					
ANR	9011605	Identifier	esp		9011471	0					
ANR	9011606	IncDec	++		9011471	1					
ANR	9011607	ExpressionStatement	"make_int ( esp , 2 )"	6350:4:204621:204637	9011471	11	True				
ANR	9011608	CallExpression	"make_int ( esp , 2 )"		9011471	0					
ANR	9011609	Callee	make_int		9011471	0					
ANR	9011610	Identifier	make_int		9011471	0					
ANR	9011611	ArgumentList	esp		9011471	1					
ANR	9011612	Argument	esp		9011471	0					
ANR	9011613	Identifier	esp		9011471	0					
ANR	9011614	Argument	2		9011471	1					
ANR	9011615	PrimaryExpression	2		9011471	0					
ANR	9011616	ExpressionStatement	esp ++	6351:4:204643:204648	9011471	12	True				
ANR	9011617	PostIncDecOperationExpression	esp ++		9011471	0					
ANR	9011618	Identifier	esp		9011471	0					
ANR	9011619	IncDec	++		9011471	1					
ANR	9011620	ExpressionStatement	"make_int ( esp , 0 )"	6353:4:204710:204726	9011471	13	True				
ANR	9011621	CallExpression	"make_int ( esp , 0 )"		9011471	0					
ANR	9011622	Callee	make_int		9011471	0					
ANR	9011623	Identifier	make_int		9011471	0					
ANR	9011624	ArgumentList	esp		9011471	1					
ANR	9011625	Argument	esp		9011471	0					
ANR	9011626	Identifier	esp		9011471	0					
ANR	9011627	Argument	0		9011471	1					
ANR	9011628	PrimaryExpression	0		9011471	0					
ANR	9011629	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6355:4:204783:204818	9011471	14	True				
ANR	9011630	CallExpression	push_op_estack ( setdevicecolor_cont )		9011471	0					
ANR	9011631	Callee	push_op_estack		9011471	0					
ANR	9011632	Identifier	push_op_estack		9011471	0					
ANR	9011633	ArgumentList	setdevicecolor_cont		9011471	1					
ANR	9011634	Argument	setdevicecolor_cont		9011471	0					
ANR	9011635	Identifier	setdevicecolor_cont		9011471	0					
ANR	9011636	ReturnStatement	return o_push_estack ;	6356:4:204824:204844	9011471	15	True				
ANR	9011637	Identifier	o_push_estack		9011471	0					
ANR	9011638	ReturnType	static int		9011471	1					
ANR	9011639	Identifier	zsetcmykcolor		9011471	2					
ANR	9011640	ParameterList	i_ctx_t * i_ctx_p		9011471	3					
ANR	9011641	Parameter	i_ctx_t * i_ctx_p	6322:14:203811:203827	9011471	0	True				
ANR	9011642	ParameterType	i_ctx_t *		9011471	0					
ANR	9011643	Identifier	i_ctx_p		9011471	1					
ANR	9011644	CFGEntryNode	ENTRY		9011471		True				
ANR	9011645	CFGExitNode	EXIT		9011471		True				
ANR	9011646	Symbol	op		9011471						
ANR	9011647	Symbol	make_floats		9011471						
ANR	9011648	Symbol	code		9011471						
ANR	9011649	Symbol	esp		9011471						
ANR	9011650	Symbol	& values		9011471						
ANR	9011651	Symbol	float_params		9011471						
ANR	9011652	Symbol	* values		9011471						
ANR	9011653	Symbol	values		9011471						
ANR	9011654	Symbol	i		9011471						
ANR	9011655	Symbol	colour_cleanup		9011471						
ANR	9011656	Symbol	osp		9011471						
ANR	9011657	Symbol	es_other		9011471						
ANR	9011658	Symbol	* i		9011471						
ANR	9011659	Symbol	i_ctx_p		9011471						
ANR	9011660	Symbol	setdevicecolor_cont		9011471						
ANR	9011661	Symbol	o_push_estack		9011471						
ANR	9011662	Function	currentbasecolor_cont	6377:0:205787:207906							
ANR	9011663	FunctionDef	currentbasecolor_cont (i_ctx_t * i_ctx_p)		9011662	0					
ANR	9011664	CompoundStatement		6379:0:205838:207906	9011662	0					
ANR	9011665	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	6380:4:205844:205865	9011662	0	True				
ANR	9011666	IdentifierDecl	arr		9011662	0					
ANR	9011667	IdentifierDeclType	ref		9011662	0					
ANR	9011668	Identifier	arr		9011662	1					
ANR	9011669	IdentifierDecl	* parr = & arr		9011662	1					
ANR	9011670	IdentifierDeclType	ref *		9011662	0					
ANR	9011671	Identifier	parr		9011662	1					
ANR	9011672	AssignmentExpression	* parr = & arr		9011662	2		=			
ANR	9011673	Identifier	parr		9011662	0					
ANR	9011674	UnaryOperationExpression	& arr		9011662	1					
ANR	9011675	UnaryOperator	&		9011662	0					
ANR	9011676	Identifier	arr		9011662	1					
ANR	9011677	IdentifierDeclStatement	es_ptr ep = esp ;	6381:4:205871:205886	9011662	1	True				
ANR	9011678	IdentifierDecl	ep = esp		9011662	0					
ANR	9011679	IdentifierDeclType	es_ptr		9011662	0					
ANR	9011680	Identifier	ep		9011662	1					
ANR	9011681	AssignmentExpression	ep = esp		9011662	2		=			
ANR	9011682	Identifier	esp		9011662	0					
ANR	9011683	Identifier	esp		9011662	1					
ANR	9011684	IdentifierDeclStatement	"int i , code = 0 , stage , base , cont = 1 , stack_depth = 0 , CIESubst = 0 ;"	6382:4:205892:205957	9011662	2	True				
ANR	9011685	IdentifierDecl	i		9011662	0					
ANR	9011686	IdentifierDeclType	int		9011662	0					
ANR	9011687	Identifier	i		9011662	1					
ANR	9011688	IdentifierDecl	code = 0		9011662	1					
ANR	9011689	IdentifierDeclType	int		9011662	0					
ANR	9011690	Identifier	code		9011662	1					
ANR	9011691	AssignmentExpression	code = 0		9011662	2		=			
ANR	9011692	Identifier	code		9011662	0					
ANR	9011693	PrimaryExpression	0		9011662	1					
ANR	9011694	IdentifierDecl	stage		9011662	2					
ANR	9011695	IdentifierDeclType	int		9011662	0					
ANR	9011696	Identifier	stage		9011662	1					
ANR	9011697	IdentifierDecl	base		9011662	3					
ANR	9011698	IdentifierDeclType	int		9011662	0					
ANR	9011699	Identifier	base		9011662	1					
ANR	9011700	IdentifierDecl	cont = 1		9011662	4					
ANR	9011701	IdentifierDeclType	int		9011662	0					
ANR	9011702	Identifier	cont		9011662	1					
ANR	9011703	AssignmentExpression	cont = 1		9011662	2		=			
ANR	9011704	Identifier	cont		9011662	0					
ANR	9011705	PrimaryExpression	1		9011662	1					
ANR	9011706	IdentifierDecl	stack_depth = 0		9011662	5					
ANR	9011707	IdentifierDeclType	int		9011662	0					
ANR	9011708	Identifier	stack_depth		9011662	1					
ANR	9011709	AssignmentExpression	stack_depth = 0		9011662	2		=			
ANR	9011710	Identifier	stack_depth		9011662	0					
ANR	9011711	PrimaryExpression	0		9011662	1					
ANR	9011712	IdentifierDecl	CIESubst = 0		9011662	6					
ANR	9011713	IdentifierDeclType	int		9011662	0					
ANR	9011714	Identifier	CIESubst		9011662	1					
ANR	9011715	AssignmentExpression	CIESubst = 0		9011662	2		=			
ANR	9011716	Identifier	CIESubst		9011662	0					
ANR	9011717	PrimaryExpression	0		9011662	1					
ANR	9011718	IdentifierDeclStatement	unsigned int depth ;	6383:4:205963:205981	9011662	3	True				
ANR	9011719	IdentifierDecl	depth		9011662	0					
ANR	9011720	IdentifierDeclType	unsigned int		9011662	0					
ANR	9011721	Identifier	depth		9011662	1					
ANR	9011722	IdentifierDeclStatement	PS_colour_space_t * obj ;	6384:4:205987:206009	9011662	4	True				
ANR	9011723	IdentifierDecl	* obj		9011662	0					
ANR	9011724	IdentifierDeclType	PS_colour_space_t *		9011662	0					
ANR	9011725	Identifier	obj		9011662	1					
ANR	9011726	ExpressionStatement	stack_depth = ( int ) ep [ - 4 ] . value . intval	6386:4:206016:206054	9011662	5	True				
ANR	9011727	AssignmentExpression	stack_depth = ( int ) ep [ - 4 ] . value . intval		9011662	0		=			
ANR	9011728	Identifier	stack_depth		9011662	0					
ANR	9011729	CastExpression	( int ) ep [ - 4 ] . value . intval		9011662	1					
ANR	9011730	CastTarget	int		9011662	0					
ANR	9011731	MemberAccess	ep [ - 4 ] . value . intval		9011662	1					
ANR	9011732	MemberAccess	ep [ - 4 ] . value		9011662	0					
ANR	9011733	ArrayIndexing	ep [ - 4 ]		9011662	0					
ANR	9011734	Identifier	ep		9011662	0					
ANR	9011735	UnaryOperationExpression	- 4		9011662	1					
ANR	9011736	UnaryOperator	-		9011662	0					
ANR	9011737	PrimaryExpression	4		9011662	1					
ANR	9011738	Identifier	value		9011662	1					
ANR	9011739	Identifier	intval		9011662	1					
ANR	9011740	ExpressionStatement	base = ( int ) ep [ - 3 ] . value . intval	6387:4:206060:206091	9011662	6	True				
ANR	9011741	AssignmentExpression	base = ( int ) ep [ - 3 ] . value . intval		9011662	0		=			
ANR	9011742	Identifier	base		9011662	0					
ANR	9011743	CastExpression	( int ) ep [ - 3 ] . value . intval		9011662	1					
ANR	9011744	CastTarget	int		9011662	0					
ANR	9011745	MemberAccess	ep [ - 3 ] . value . intval		9011662	1					
ANR	9011746	MemberAccess	ep [ - 3 ] . value		9011662	0					
ANR	9011747	ArrayIndexing	ep [ - 3 ]		9011662	0					
ANR	9011748	Identifier	ep		9011662	0					
ANR	9011749	UnaryOperationExpression	- 3		9011662	1					
ANR	9011750	UnaryOperator	-		9011662	0					
ANR	9011751	PrimaryExpression	3		9011662	1					
ANR	9011752	Identifier	value		9011662	1					
ANR	9011753	Identifier	intval		9011662	1					
ANR	9011754	ExpressionStatement	depth = ( unsigned int ) ep [ - 2 ] . value . intval	6388:4:206097:206138	9011662	7	True				
ANR	9011755	AssignmentExpression	depth = ( unsigned int ) ep [ - 2 ] . value . intval		9011662	0		=			
ANR	9011756	Identifier	depth		9011662	0					
ANR	9011757	CastExpression	( unsigned int ) ep [ - 2 ] . value . intval		9011662	1					
ANR	9011758	CastTarget	unsigned int		9011662	0					
ANR	9011759	MemberAccess	ep [ - 2 ] . value . intval		9011662	1					
ANR	9011760	MemberAccess	ep [ - 2 ] . value		9011662	0					
ANR	9011761	ArrayIndexing	ep [ - 2 ]		9011662	0					
ANR	9011762	Identifier	ep		9011662	0					
ANR	9011763	UnaryOperationExpression	- 2		9011662	1					
ANR	9011764	UnaryOperator	-		9011662	0					
ANR	9011765	PrimaryExpression	2		9011662	1					
ANR	9011766	Identifier	value		9011662	1					
ANR	9011767	Identifier	intval		9011662	1					
ANR	9011768	ExpressionStatement	stage = ( int ) ep [ - 1 ] . value . intval	6389:4:206144:206176	9011662	8	True				
ANR	9011769	AssignmentExpression	stage = ( int ) ep [ - 1 ] . value . intval		9011662	0		=			
ANR	9011770	Identifier	stage		9011662	0					
ANR	9011771	CastExpression	( int ) ep [ - 1 ] . value . intval		9011662	1					
ANR	9011772	CastTarget	int		9011662	0					
ANR	9011773	MemberAccess	ep [ - 1 ] . value . intval		9011662	1					
ANR	9011774	MemberAccess	ep [ - 1 ] . value		9011662	0					
ANR	9011775	ArrayIndexing	ep [ - 1 ]		9011662	0					
ANR	9011776	Identifier	ep		9011662	0					
ANR	9011777	UnaryOperationExpression	- 1		9011662	1					
ANR	9011778	UnaryOperator	-		9011662	0					
ANR	9011779	PrimaryExpression	1		9011662	1					
ANR	9011780	Identifier	value		9011662	1					
ANR	9011781	Identifier	intval		9011662	1					
ANR	9011782	IfStatement	if ( depth < 1 )		9011662	9					
ANR	9011783	Condition	depth < 1	6394:8:206310:206318	9011662	0	True				
ANR	9011784	RelationalExpression	depth < 1		9011662	0		<			
ANR	9011785	Identifier	depth		9011662	0					
ANR	9011786	PrimaryExpression	1		9011662	1					
ANR	9011787	ExpressionStatement	return_error ( gs_error_unknownerror )	6395:8:206329:206364	9011662	1	True				
ANR	9011788	CallExpression	return_error ( gs_error_unknownerror )		9011662	0					
ANR	9011789	Callee	return_error		9011662	0					
ANR	9011790	Identifier	return_error		9011662	0					
ANR	9011791	ArgumentList	gs_error_unknownerror		9011662	1					
ANR	9011792	Argument	gs_error_unknownerror		9011662	0					
ANR	9011793	Identifier	gs_error_unknownerror		9011662	0					
ANR	9011794	ExpressionStatement	check_estack ( 1 )	6401:4:206615:206630	9011662	10	True				
ANR	9011795	CallExpression	check_estack ( 1 )		9011662	0					
ANR	9011796	Callee	check_estack		9011662	0					
ANR	9011797	Identifier	check_estack		9011662	0					
ANR	9011798	ArgumentList	1		9011662	1					
ANR	9011799	Argument	1		9011662	0					
ANR	9011800	PrimaryExpression	1		9011662	0					
ANR	9011801	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6403:4:206718:206755	9011662	11	True				
ANR	9011802	CallExpression	push_op_estack ( currentbasecolor_cont )		9011662	0					
ANR	9011803	Callee	push_op_estack		9011662	0					
ANR	9011804	Identifier	push_op_estack		9011662	0					
ANR	9011805	ArgumentList	currentbasecolor_cont		9011662	1					
ANR	9011806	Argument	currentbasecolor_cont		9011662	0					
ANR	9011807	Identifier	currentbasecolor_cont		9011662	0					
ANR	9011808	WhileStatement	while ( code == 0 && cont )		9011662	12					
ANR	9011809	Condition	code == 0 && cont	6405:11:206769:206785	9011662	0	True				
ANR	9011810	AndExpression	code == 0 && cont		9011662	0		&&			
ANR	9011811	EqualityExpression	code == 0		9011662	0		==			
ANR	9011812	Identifier	code		9011662	0					
ANR	9011813	PrimaryExpression	0		9011662	1					
ANR	9011814	Identifier	cont		9011662	1					
ANR	9011815	CompoundStatement		27:30:949:949	9011662	1					
ANR	9011816	ExpressionStatement	"ref_assign ( & arr , ep )"	6406:8:206798:206818	9011662	0	True				
ANR	9011817	CallExpression	"ref_assign ( & arr , ep )"		9011662	0					
ANR	9011818	Callee	ref_assign		9011662	0					
ANR	9011819	Identifier	ref_assign		9011662	0					
ANR	9011820	ArgumentList	& arr		9011662	1					
ANR	9011821	Argument	& arr		9011662	0					
ANR	9011822	UnaryOperationExpression	& arr		9011662	0					
ANR	9011823	UnaryOperator	&		9011662	0					
ANR	9011824	Identifier	arr		9011662	1					
ANR	9011825	Argument	ep		9011662	1					
ANR	9011826	Identifier	ep		9011662	0					
ANR	9011827	ExpressionStatement	parr = & arr	6407:8:206828:206839	9011662	1	True				
ANR	9011828	AssignmentExpression	parr = & arr		9011662	0		=			
ANR	9011829	Identifier	parr		9011662	0					
ANR	9011830	UnaryOperationExpression	& arr		9011662	1					
ANR	9011831	UnaryOperator	&		9011662	0					
ANR	9011832	Identifier	arr		9011662	1					
ANR	9011833	ForStatement	for ( i = 0 ; i < depth ; i ++ )		9011662	2					
ANR	9011834	ForInit	i = 0 ;	6411:13:207002:207007	9011662	0	True				
ANR	9011835	AssignmentExpression	i = 0		9011662	0		=			
ANR	9011836	Identifier	i		9011662	0					
ANR	9011837	PrimaryExpression	0		9011662	1					
ANR	9011838	Condition	i < depth	6411:19:207008:207016	9011662	1	True				
ANR	9011839	RelationalExpression	i < depth		9011662	0		<			
ANR	9011840	Identifier	i		9011662	0					
ANR	9011841	Identifier	depth		9011662	1					
ANR	9011842	PostIncDecOperationExpression	i ++	6411:29:207018:207020	9011662	2	True				
ANR	9011843	Identifier	i		9011662	0					
ANR	9011844	IncDec	++		9011662	1					
ANR	9011845	CompoundStatement		33:34:1184:1184	9011662	3					
ANR	9011846	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6412:12:207037:207081	9011662	0	True				
ANR	9011847	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		9011662	0		=			
ANR	9011848	Identifier	code		9011662	0					
ANR	9011849	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		9011662	1					
ANR	9011850	Callee	get_space_object		9011662	0					
ANR	9011851	Identifier	get_space_object		9011662	0					
ANR	9011852	ArgumentList	i_ctx_p		9011662	1					
ANR	9011853	Argument	i_ctx_p		9011662	0					
ANR	9011854	Identifier	i_ctx_p		9011662	0					
ANR	9011855	Argument	parr		9011662	1					
ANR	9011856	Identifier	parr		9011662	0					
ANR	9011857	Argument	& obj		9011662	2					
ANR	9011858	UnaryOperationExpression	& obj		9011662	0					
ANR	9011859	UnaryOperator	&		9011662	0					
ANR	9011860	Identifier	obj		9011662	1					
ANR	9011861	IfStatement	if ( code < 0 )		9011662	1					
ANR	9011862	Condition	code < 0	6413:16:207099:207106	9011662	0	True				
ANR	9011863	RelationalExpression	code < 0		9011662	0		<			
ANR	9011864	Identifier	code		9011662	0					
ANR	9011865	PrimaryExpression	0		9011662	1					
ANR	9011866	ReturnStatement	return code ;	6414:16:207125:207136	9011662	1	True				
ANR	9011867	Identifier	code		9011662	0					
ANR	9011868	IfStatement	if ( i < ( depth - 1 ) )		9011662	2					
ANR	9011869	Condition	i < ( depth - 1 )	6416:16:207155:207169	9011662	0	True				
ANR	9011870	RelationalExpression	i < ( depth - 1 )		9011662	0		<			
ANR	9011871	Identifier	i		9011662	0					
ANR	9011872	AdditiveExpression	depth - 1		9011662	1		-			
ANR	9011873	Identifier	depth		9011662	0					
ANR	9011874	PrimaryExpression	1		9011662	1					
ANR	9011875	CompoundStatement		38:33:1333:1333	9011662	1					
ANR	9011876	IfStatement	if ( ! obj -> alternateproc )		9011662	0					
ANR	9011877	Condition	! obj -> alternateproc	6417:20:207194:207212	9011662	0	True				
ANR	9011878	UnaryOperationExpression	! obj -> alternateproc		9011662	0					
ANR	9011879	UnaryOperator	!		9011662	0					
ANR	9011880	PtrMemberAccess	obj -> alternateproc		9011662	1					
ANR	9011881	Identifier	obj		9011662	0					
ANR	9011882	Identifier	alternateproc		9011662	1					
ANR	9011883	CompoundStatement		39:41:1376:1376	9011662	1					
ANR	9011884	ExpressionStatement	return_error ( gs_error_typecheck )	6418:20:207237:207269	9011662	0	True				
ANR	9011885	CallExpression	return_error ( gs_error_typecheck )		9011662	0					
ANR	9011886	Callee	return_error		9011662	0					
ANR	9011887	Identifier	return_error		9011662	0					
ANR	9011888	ArgumentList	gs_error_typecheck		9011662	1					
ANR	9011889	Argument	gs_error_typecheck		9011662	0					
ANR	9011890	Identifier	gs_error_typecheck		9011662	0					
ANR	9011891	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6420:16:207305:207363	9011662	1	True				
ANR	9011892	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9011662	0		=			
ANR	9011893	Identifier	code		9011662	0					
ANR	9011894	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		9011662	1					
ANR	9011895	Callee	obj -> alternateproc		9011662	0					
ANR	9011896	PtrMemberAccess	obj -> alternateproc		9011662	0					
ANR	9011897	Identifier	obj		9011662	0					
ANR	9011898	Identifier	alternateproc		9011662	1					
ANR	9011899	ArgumentList	i_ctx_p		9011662	1					
ANR	9011900	Argument	i_ctx_p		9011662	0					
ANR	9011901	Identifier	i_ctx_p		9011662	0					
ANR	9011902	Argument	parr		9011662	1					
ANR	9011903	Identifier	parr		9011662	0					
ANR	9011904	Argument	& parr		9011662	2					
ANR	9011905	UnaryOperationExpression	& parr		9011662	0					
ANR	9011906	UnaryOperator	&		9011662	0					
ANR	9011907	Identifier	parr		9011662	1					
ANR	9011908	Argument	& CIESubst		9011662	3					
ANR	9011909	UnaryOperationExpression	& CIESubst		9011662	0					
ANR	9011910	UnaryOperator	&		9011662	0					
ANR	9011911	Identifier	CIESubst		9011662	1					
ANR	9011912	IfStatement	if ( code < 0 )		9011662	2					
ANR	9011913	Condition	code < 0	6421:20:207385:207392	9011662	0	True				
ANR	9011914	RelationalExpression	code < 0		9011662	0		<			
ANR	9011915	Identifier	code		9011662	0					
ANR	9011916	PrimaryExpression	0		9011662	1					
ANR	9011917	ReturnStatement	return code ;	6422:20:207415:207426	9011662	1	True				
ANR	9011918	Identifier	code		9011662	0					
ANR	9011919	ExpressionStatement	"code = obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"	6426:8:207461:207536	9011662	3	True				
ANR	9011920	AssignmentExpression	"code = obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"		9011662	0		=			
ANR	9011921	Identifier	code		9011662	0					
ANR	9011922	CallExpression	"obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"		9011662	1					
ANR	9011923	Callee	obj -> basecolorproc		9011662	0					
ANR	9011924	PtrMemberAccess	obj -> basecolorproc		9011662	0					
ANR	9011925	Identifier	obj		9011662	0					
ANR	9011926	Identifier	basecolorproc		9011662	1					
ANR	9011927	ArgumentList	i_ctx_p		9011662	1					
ANR	9011928	Argument	i_ctx_p		9011662	0					
ANR	9011929	Identifier	i_ctx_p		9011662	0					
ANR	9011930	Argument	parr		9011662	1					
ANR	9011931	Identifier	parr		9011662	0					
ANR	9011932	Argument	base		9011662	2					
ANR	9011933	Identifier	base		9011662	0					
ANR	9011934	Argument	& stage		9011662	3					
ANR	9011935	UnaryOperationExpression	& stage		9011662	0					
ANR	9011936	UnaryOperator	&		9011662	0					
ANR	9011937	Identifier	stage		9011662	1					
ANR	9011938	Argument	& cont		9011662	4					
ANR	9011939	UnaryOperationExpression	& cont		9011662	0					
ANR	9011940	UnaryOperator	&		9011662	0					
ANR	9011941	Identifier	cont		9011662	1					
ANR	9011942	Argument	& stack_depth		9011662	5					
ANR	9011943	UnaryOperationExpression	& stack_depth		9011662	0					
ANR	9011944	UnaryOperator	&		9011662	0					
ANR	9011945	Identifier	stack_depth		9011662	1					
ANR	9011946	ExpressionStatement	"make_int ( & ep [ - 4 ] , stack_depth )"	6427:8:207546:207576	9011662	4	True				
ANR	9011947	CallExpression	"make_int ( & ep [ - 4 ] , stack_depth )"		9011662	0					
ANR	9011948	Callee	make_int		9011662	0					
ANR	9011949	Identifier	make_int		9011662	0					
ANR	9011950	ArgumentList	& ep [ - 4 ]		9011662	1					
ANR	9011951	Argument	& ep [ - 4 ]		9011662	0					
ANR	9011952	UnaryOperationExpression	& ep [ - 4 ]		9011662	0					
ANR	9011953	UnaryOperator	&		9011662	0					
ANR	9011954	ArrayIndexing	ep [ - 4 ]		9011662	1					
ANR	9011955	Identifier	ep		9011662	0					
ANR	9011956	UnaryOperationExpression	- 4		9011662	1					
ANR	9011957	UnaryOperator	-		9011662	0					
ANR	9011958	PrimaryExpression	4		9011662	1					
ANR	9011959	Argument	stack_depth		9011662	1					
ANR	9011960	Identifier	stack_depth		9011662	0					
ANR	9011961	ExpressionStatement	"make_int ( & ep [ - 1 ] , stage )"	6428:8:207586:207610	9011662	5	True				
ANR	9011962	CallExpression	"make_int ( & ep [ - 1 ] , stage )"		9011662	0					
ANR	9011963	Callee	make_int		9011662	0					
ANR	9011964	Identifier	make_int		9011662	0					
ANR	9011965	ArgumentList	& ep [ - 1 ]		9011662	1					
ANR	9011966	Argument	& ep [ - 1 ]		9011662	0					
ANR	9011967	UnaryOperationExpression	& ep [ - 1 ]		9011662	0					
ANR	9011968	UnaryOperator	&		9011662	0					
ANR	9011969	ArrayIndexing	ep [ - 1 ]		9011662	1					
ANR	9011970	Identifier	ep		9011662	0					
ANR	9011971	UnaryOperationExpression	- 1		9011662	1					
ANR	9011972	UnaryOperator	-		9011662	0					
ANR	9011973	PrimaryExpression	1		9011662	1					
ANR	9011974	Argument	stage		9011662	1					
ANR	9011975	Identifier	stage		9011662	0					
ANR	9011976	IfStatement	if ( code > 0 )		9011662	6					
ANR	9011977	Condition	code > 0	6429:12:207624:207631	9011662	0	True				
ANR	9011978	RelationalExpression	code > 0		9011662	0		>			
ANR	9011979	Identifier	code		9011662	0					
ANR	9011980	PrimaryExpression	0		9011662	1					
ANR	9011981	ReturnStatement	return code ;	6430:12:207646:207657	9011662	1	True				
ANR	9011982	Identifier	code		9011662	0					
ANR	9011983	ExpressionStatement	"make_int ( & ep [ - 2 ] , ++ depth )"	6432:8:207725:207751	9011662	7	True				
ANR	9011984	CallExpression	"make_int ( & ep [ - 2 ] , ++ depth )"		9011662	0					
ANR	9011985	Callee	make_int		9011662	0					
ANR	9011986	Identifier	make_int		9011662	0					
ANR	9011987	ArgumentList	& ep [ - 2 ]		9011662	1					
ANR	9011988	Argument	& ep [ - 2 ]		9011662	0					
ANR	9011989	UnaryOperationExpression	& ep [ - 2 ]		9011662	0					
ANR	9011990	UnaryOperator	&		9011662	0					
ANR	9011991	ArrayIndexing	ep [ - 2 ]		9011662	1					
ANR	9011992	Identifier	ep		9011662	0					
ANR	9011993	UnaryOperationExpression	- 2		9011662	1					
ANR	9011994	UnaryOperator	-		9011662	0					
ANR	9011995	PrimaryExpression	2		9011662	1					
ANR	9011996	Argument	++ depth		9011662	1					
ANR	9011997	UnaryExpression	++ depth		9011662	0					
ANR	9011998	IncDec	++		9011662	0					
ANR	9011999	Identifier	depth		9011662	1					
ANR	9012000	IfStatement	if ( code <= 0 )		9011662	13					
ANR	9012001	Condition	code <= 0	6434:8:207767:207775	9011662	0	True				
ANR	9012002	RelationalExpression	code <= 0		9011662	0		<=			
ANR	9012003	Identifier	code		9011662	0					
ANR	9012004	PrimaryExpression	0		9011662	1					
ANR	9012005	CompoundStatement		56:19:1939:1939	9011662	1					
ANR	9012006	ExpressionStatement	esp -= 7	6436:8:207844:207852	9011662	0	True				
ANR	9012007	AssignmentExpression	esp -= 7		9011662	0		-=			
ANR	9012008	Identifier	esp		9011662	0					
ANR	9012009	PrimaryExpression	7		9011662	1					
ANR	9012010	ExpressionStatement	code = o_pop_estack	6437:8:207862:207881	9011662	1	True				
ANR	9012011	AssignmentExpression	code = o_pop_estack		9011662	0		=			
ANR	9012012	Identifier	code		9011662	0					
ANR	9012013	Identifier	o_pop_estack		9011662	1					
ANR	9012014	ReturnStatement	return code ;	6439:4:207893:207904	9011662	14	True				
ANR	9012015	Identifier	code		9011662	0					
ANR	9012016	ReturnType	static int		9011662	1					
ANR	9012017	Identifier	currentbasecolor_cont		9011662	2					
ANR	9012018	ParameterList	i_ctx_t * i_ctx_p		9011662	3					
ANR	9012019	Parameter	i_ctx_t * i_ctx_p	6378:22:205820:205835	9011662	0	True				
ANR	9012020	ParameterType	i_ctx_t *		9011662	0					
ANR	9012021	Identifier	i_ctx_p		9011662	1					
ANR	9012022	CFGEntryNode	ENTRY		9011662		True				
ANR	9012023	CFGExitNode	EXIT		9011662		True				
ANR	9012024	Symbol	& arr		9011662						
ANR	9012025	Symbol	stack_depth		9011662						
ANR	9012026	Symbol	obj -> alternateproc		9011662						
ANR	9012027	Symbol	esp		9011662						
ANR	9012028	Symbol	code		9011662						
ANR	9012029	Symbol	parr		9011662						
ANR	9012030	Symbol	o_pop_estack		9011662						
ANR	9012031	Symbol	ep [ - 1 ] . value		9011662						
ANR	9012032	Symbol	gs_error_typecheck		9011662						
ANR	9012033	Symbol	& stage		9011662						
ANR	9012034	Symbol	ep [ - 3 ] . value		9011662						
ANR	9012035	Symbol	& obj		9011662						
ANR	9012036	Symbol	cont		9011662						
ANR	9012037	Symbol	CIESubst		9011662						
ANR	9012038	Symbol	gs_error_unknownerror		9011662						
ANR	9012039	Symbol	arr		9011662						
ANR	9012040	Symbol	* obj		9011662						
ANR	9012041	Symbol	& parr		9011662						
ANR	9012042	Symbol	& cont		9011662						
ANR	9012043	Symbol	currentbasecolor_cont		9011662						
ANR	9012044	Symbol	& stack_depth		9011662						
ANR	9012045	Symbol	i		9011662						
ANR	9012046	Symbol	ep [ - 1 ] . value . intval		9011662						
ANR	9012047	Symbol	ep		9011662						
ANR	9012048	Symbol	ep [ - 2 ] . value . intval		9011662						
ANR	9012049	Symbol	get_space_object		9011662						
ANR	9012050	Symbol	& CIESubst		9011662						
ANR	9012051	Symbol	ep [ - 2 ] . value		9011662						
ANR	9012052	Symbol	* ep		9011662						
ANR	9012053	Symbol	ep [ - 4 ] . value . intval		9011662						
ANR	9012054	Symbol	depth		9011662						
ANR	9012055	Symbol	ep [ - 3 ] . value . intval		9011662						
ANR	9012056	Symbol	stage		9011662						
ANR	9012057	Symbol	obj -> basecolorproc		9011662						
ANR	9012058	Symbol	i_ctx_p		9011662						
ANR	9012059	Symbol	obj		9011662						
ANR	9012060	Symbol	ep [ - 4 ] . value		9011662						
ANR	9012061	Symbol	base		9011662						
ANR	9012062	Function	zcurrentgray	6445:0:208036:209199							
ANR	9012063	FunctionDef	zcurrentgray (i_ctx_t * i_ctx_p)		9012062	0					
ANR	9012064	CompoundStatement		6447:0:208079:209199	9012062	0					
ANR	9012065	IdentifierDeclStatement	"int code , depth ;"	6448:4:208085:208100	9012062	0	True				
ANR	9012066	IdentifierDecl	code		9012062	0					
ANR	9012067	IdentifierDeclType	int		9012062	0					
ANR	9012068	Identifier	code		9012062	1					
ANR	9012069	IdentifierDecl	depth		9012062	1					
ANR	9012070	IdentifierDeclType	int		9012062	0					
ANR	9012071	Identifier	depth		9012062	1					
ANR	9012072	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	6450:4:208107:208176	9012062	1	True				
ANR	9012073	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		9012062	0		=			
ANR	9012074	Identifier	code		9012062	0					
ANR	9012075	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		9012062	1					
ANR	9012076	Callee	validate_spaces		9012062	0					
ANR	9012077	Identifier	validate_spaces		9012062	0					
ANR	9012078	ArgumentList	i_ctx_p		9012062	1					
ANR	9012079	Argument	i_ctx_p		9012062	0					
ANR	9012080	Identifier	i_ctx_p		9012062	0					
ANR	9012081	Argument	& istate -> colorspace [ 0 ] . array		9012062	1					
ANR	9012082	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		9012062	0					
ANR	9012083	UnaryOperator	&		9012062	0					
ANR	9012084	MemberAccess	istate -> colorspace [ 0 ] . array		9012062	1					
ANR	9012085	ArrayIndexing	istate -> colorspace [ 0 ]		9012062	0					
ANR	9012086	PtrMemberAccess	istate -> colorspace		9012062	0					
ANR	9012087	Identifier	istate		9012062	0					
ANR	9012088	Identifier	colorspace		9012062	1					
ANR	9012089	PrimaryExpression	0		9012062	1					
ANR	9012090	Identifier	array		9012062	1					
ANR	9012091	Argument	& depth		9012062	2					
ANR	9012092	UnaryOperationExpression	& depth		9012062	0					
ANR	9012093	UnaryOperator	&		9012062	0					
ANR	9012094	Identifier	depth		9012062	1					
ANR	9012095	IfStatement	if ( code < 0 )		9012062	2					
ANR	9012096	Condition	code < 0	6451:8:208186:208193	9012062	0	True				
ANR	9012097	RelationalExpression	code < 0		9012062	0		<			
ANR	9012098	Identifier	code		9012062	0					
ANR	9012099	PrimaryExpression	0		9012062	1					
ANR	9012100	ReturnStatement	return code ;	6452:8:208204:208215	9012062	1	True				
ANR	9012101	Identifier	code		9012062	0					
ANR	9012102	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6454:4:208222:208251	9012062	3	True				
ANR	9012103	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		9012062	0		=			
ANR	9012104	Identifier	code		9012062	0					
ANR	9012105	CallExpression	zcurrentcolor ( i_ctx_p )		9012062	1					
ANR	9012106	Callee	zcurrentcolor		9012062	0					
ANR	9012107	Identifier	zcurrentcolor		9012062	0					
ANR	9012108	ArgumentList	i_ctx_p		9012062	1					
ANR	9012109	Argument	i_ctx_p		9012062	0					
ANR	9012110	Identifier	i_ctx_p		9012062	0					
ANR	9012111	IfStatement	if ( code < 0 )		9012062	4					
ANR	9012112	Condition	code < 0	6455:8:208261:208268	9012062	0	True				
ANR	9012113	RelationalExpression	code < 0		9012062	0		<			
ANR	9012114	Identifier	code		9012062	0					
ANR	9012115	PrimaryExpression	0		9012062	1					
ANR	9012116	ReturnStatement	return code ;	6456:8:208279:208290	9012062	1	True				
ANR	9012117	Identifier	code		9012062	0					
ANR	9012118	ExpressionStatement	check_estack ( 7 )	6459:4:208419:208434	9012062	5	True				
ANR	9012119	CallExpression	check_estack ( 7 )		9012062	0					
ANR	9012120	Callee	check_estack		9012062	0					
ANR	9012121	Identifier	check_estack		9012062	0					
ANR	9012122	ArgumentList	7		9012062	1					
ANR	9012123	Argument	7		9012062	0					
ANR	9012124	PrimaryExpression	7		9012062	0					
ANR	9012125	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6460:4:208440:208482	9012062	6	True				
ANR	9012126	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9012062	0					
ANR	9012127	Callee	push_mark_estack		9012062	0					
ANR	9012128	Identifier	push_mark_estack		9012062	0					
ANR	9012129	ArgumentList	es_other		9012062	1					
ANR	9012130	Argument	es_other		9012062	0					
ANR	9012131	Identifier	es_other		9012062	0					
ANR	9012132	Argument	colour_cleanup		9012062	1					
ANR	9012133	Identifier	colour_cleanup		9012062	0					
ANR	9012134	ExpressionStatement	esp ++	6461:4:208488:208493	9012062	7	True				
ANR	9012135	PostIncDecOperationExpression	esp ++		9012062	0					
ANR	9012136	Identifier	esp		9012062	0					
ANR	9012137	IncDec	++		9012062	1					
ANR	9012138	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6463:4:208557:208577	9012062	8	True				
ANR	9012139	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		9012062	0					
ANR	9012140	Callee	make_int		9012062	0					
ANR	9012141	Identifier	make_int		9012062	0					
ANR	9012142	ArgumentList	& esp [ 0 ]		9012062	1					
ANR	9012143	Argument	& esp [ 0 ]		9012062	0					
ANR	9012144	UnaryOperationExpression	& esp [ 0 ]		9012062	0					
ANR	9012145	UnaryOperator	&		9012062	0					
ANR	9012146	ArrayIndexing	esp [ 0 ]		9012062	1					
ANR	9012147	Identifier	esp		9012062	0					
ANR	9012148	PrimaryExpression	0		9012062	1					
ANR	9012149	Argument	0		9012062	1					
ANR	9012150	PrimaryExpression	0		9012062	0					
ANR	9012151	ExpressionStatement	esp ++	6464:4:208583:208588	9012062	9	True				
ANR	9012152	PostIncDecOperationExpression	esp ++		9012062	0					
ANR	9012153	Identifier	esp		9012062	0					
ANR	9012154	IncDec	++		9012062	1					
ANR	9012155	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6466:4:208658:208678	9012062	10	True				
ANR	9012156	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		9012062	0					
ANR	9012157	Callee	make_int		9012062	0					
ANR	9012158	Identifier	make_int		9012062	0					
ANR	9012159	ArgumentList	& esp [ 0 ]		9012062	1					
ANR	9012160	Argument	& esp [ 0 ]		9012062	0					
ANR	9012161	UnaryOperationExpression	& esp [ 0 ]		9012062	0					
ANR	9012162	UnaryOperator	&		9012062	0					
ANR	9012163	ArrayIndexing	esp [ 0 ]		9012062	1					
ANR	9012164	Identifier	esp		9012062	0					
ANR	9012165	PrimaryExpression	0		9012062	1					
ANR	9012166	Argument	0		9012062	1					
ANR	9012167	PrimaryExpression	0		9012062	0					
ANR	9012168	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6467:4:208684:208704	9012062	11	True				
ANR	9012169	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		9012062	0					
ANR	9012170	Callee	make_int		9012062	0					
ANR	9012171	Identifier	make_int		9012062	0					
ANR	9012172	ArgumentList	& esp [ 1 ]		9012062	1					
ANR	9012173	Argument	& esp [ 1 ]		9012062	0					
ANR	9012174	UnaryOperationExpression	& esp [ 1 ]		9012062	0					
ANR	9012175	UnaryOperator	&		9012062	0					
ANR	9012176	ArrayIndexing	esp [ 1 ]		9012062	1					
ANR	9012177	Identifier	esp		9012062	0					
ANR	9012178	PrimaryExpression	1		9012062	1					
ANR	9012179	Argument	1		9012062	1					
ANR	9012180	PrimaryExpression	1		9012062	0					
ANR	9012181	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6469:4:208766:208786	9012062	12	True				
ANR	9012182	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		9012062	0					
ANR	9012183	Callee	make_int		9012062	0					
ANR	9012184	Identifier	make_int		9012062	0					
ANR	9012185	ArgumentList	& esp [ 2 ]		9012062	1					
ANR	9012186	Argument	& esp [ 2 ]		9012062	0					
ANR	9012187	UnaryOperationExpression	& esp [ 2 ]		9012062	0					
ANR	9012188	UnaryOperator	&		9012062	0					
ANR	9012189	ArrayIndexing	esp [ 2 ]		9012062	1					
ANR	9012190	Identifier	esp		9012062	0					
ANR	9012191	PrimaryExpression	2		9012062	1					
ANR	9012192	Argument	0		9012062	1					
ANR	9012193	PrimaryExpression	0		9012062	0					
ANR	9012194	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6474:4:208965:209001	9012062	13	True				
ANR	9012195	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		9012062	0		=			
ANR	9012196	ArrayIndexing	esp [ 3 ]		9012062	0					
ANR	9012197	Identifier	esp		9012062	0					
ANR	9012198	PrimaryExpression	3		9012062	1					
ANR	9012199	MemberAccess	istate -> colorspace [ 0 ] . array		9012062	1					
ANR	9012200	ArrayIndexing	istate -> colorspace [ 0 ]		9012062	0					
ANR	9012201	PtrMemberAccess	istate -> colorspace		9012062	0					
ANR	9012202	Identifier	istate		9012062	0					
ANR	9012203	Identifier	colorspace		9012062	1					
ANR	9012204	PrimaryExpression	0		9012062	1					
ANR	9012205	Identifier	array		9012062	1					
ANR	9012206	ExpressionStatement	esp += 3	6475:4:209007:209015	9012062	14	True				
ANR	9012207	AssignmentExpression	esp += 3		9012062	0		+=			
ANR	9012208	Identifier	esp		9012062	0					
ANR	9012209	PrimaryExpression	3		9012062	1					
ANR	9012210	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6477:4:209134:209171	9012062	15	True				
ANR	9012211	CallExpression	push_op_estack ( currentbasecolor_cont )		9012062	0					
ANR	9012212	Callee	push_op_estack		9012062	0					
ANR	9012213	Identifier	push_op_estack		9012062	0					
ANR	9012214	ArgumentList	currentbasecolor_cont		9012062	1					
ANR	9012215	Argument	currentbasecolor_cont		9012062	0					
ANR	9012216	Identifier	currentbasecolor_cont		9012062	0					
ANR	9012217	ReturnStatement	return o_push_estack ;	6478:4:209177:209197	9012062	16	True				
ANR	9012218	Identifier	o_push_estack		9012062	0					
ANR	9012219	ReturnType	static int		9012062	1					
ANR	9012220	Identifier	zcurrentgray		9012062	2					
ANR	9012221	ParameterList	i_ctx_t * i_ctx_p		9012062	3					
ANR	9012222	Parameter	i_ctx_t * i_ctx_p	6446:13:208060:208076	9012062	0	True				
ANR	9012223	ParameterType	i_ctx_t *		9012062	0					
ANR	9012224	Identifier	i_ctx_p		9012062	1					
ANR	9012225	CFGEntryNode	ENTRY		9012062		True				
ANR	9012226	CFGExitNode	EXIT		9012062		True				
ANR	9012227	Symbol	validate_spaces		9012062						
ANR	9012228	Symbol	& istate -> colorspace [ 0 ] . array		9012062						
ANR	9012229	Symbol	istate -> colorspace [ 0 ] . array		9012062						
ANR	9012230	Symbol	code		9012062						
ANR	9012231	Symbol	esp		9012062						
ANR	9012232	Symbol	currentbasecolor_cont		9012062						
ANR	9012233	Symbol	colour_cleanup		9012062						
ANR	9012234	Symbol	es_other		9012062						
ANR	9012235	Symbol	* istate		9012062						
ANR	9012236	Symbol	& depth		9012062						
ANR	9012237	Symbol	zcurrentcolor		9012062						
ANR	9012238	Symbol	depth		9012062						
ANR	9012239	Symbol	* esp		9012062						
ANR	9012240	Symbol	i_ctx_p		9012062						
ANR	9012241	Symbol	istate -> colorspace		9012062						
ANR	9012242	Symbol	* * istate		9012062						
ANR	9012243	Symbol	istate		9012062						
ANR	9012244	Symbol	* istate -> colorspace		9012062						
ANR	9012245	Symbol	o_push_estack		9012062						
ANR	9012246	Function	zcurrenthsbcolor	6480:0:209201:210367							
ANR	9012247	FunctionDef	zcurrenthsbcolor (i_ctx_t * i_ctx_p)		9012246	0					
ANR	9012248	CompoundStatement		6482:0:209248:210367	9012246	0					
ANR	9012249	IdentifierDeclStatement	"int code , depth ;"	6483:4:209254:209269	9012246	0	True				
ANR	9012250	IdentifierDecl	code		9012246	0					
ANR	9012251	IdentifierDeclType	int		9012246	0					
ANR	9012252	Identifier	code		9012246	1					
ANR	9012253	IdentifierDecl	depth		9012246	1					
ANR	9012254	IdentifierDeclType	int		9012246	0					
ANR	9012255	Identifier	depth		9012246	1					
ANR	9012256	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	6485:4:209276:209345	9012246	1	True				
ANR	9012257	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		9012246	0		=			
ANR	9012258	Identifier	code		9012246	0					
ANR	9012259	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		9012246	1					
ANR	9012260	Callee	validate_spaces		9012246	0					
ANR	9012261	Identifier	validate_spaces		9012246	0					
ANR	9012262	ArgumentList	i_ctx_p		9012246	1					
ANR	9012263	Argument	i_ctx_p		9012246	0					
ANR	9012264	Identifier	i_ctx_p		9012246	0					
ANR	9012265	Argument	& istate -> colorspace [ 0 ] . array		9012246	1					
ANR	9012266	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		9012246	0					
ANR	9012267	UnaryOperator	&		9012246	0					
ANR	9012268	MemberAccess	istate -> colorspace [ 0 ] . array		9012246	1					
ANR	9012269	ArrayIndexing	istate -> colorspace [ 0 ]		9012246	0					
ANR	9012270	PtrMemberAccess	istate -> colorspace		9012246	0					
ANR	9012271	Identifier	istate		9012246	0					
ANR	9012272	Identifier	colorspace		9012246	1					
ANR	9012273	PrimaryExpression	0		9012246	1					
ANR	9012274	Identifier	array		9012246	1					
ANR	9012275	Argument	& depth		9012246	2					
ANR	9012276	UnaryOperationExpression	& depth		9012246	0					
ANR	9012277	UnaryOperator	&		9012246	0					
ANR	9012278	Identifier	depth		9012246	1					
ANR	9012279	IfStatement	if ( code < 0 )		9012246	2					
ANR	9012280	Condition	code < 0	6486:8:209355:209362	9012246	0	True				
ANR	9012281	RelationalExpression	code < 0		9012246	0		<			
ANR	9012282	Identifier	code		9012246	0					
ANR	9012283	PrimaryExpression	0		9012246	1					
ANR	9012284	ReturnStatement	return code ;	6487:8:209373:209384	9012246	1	True				
ANR	9012285	Identifier	code		9012246	0					
ANR	9012286	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6489:4:209391:209420	9012246	3	True				
ANR	9012287	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		9012246	0		=			
ANR	9012288	Identifier	code		9012246	0					
ANR	9012289	CallExpression	zcurrentcolor ( i_ctx_p )		9012246	1					
ANR	9012290	Callee	zcurrentcolor		9012246	0					
ANR	9012291	Identifier	zcurrentcolor		9012246	0					
ANR	9012292	ArgumentList	i_ctx_p		9012246	1					
ANR	9012293	Argument	i_ctx_p		9012246	0					
ANR	9012294	Identifier	i_ctx_p		9012246	0					
ANR	9012295	IfStatement	if ( code < 0 )		9012246	4					
ANR	9012296	Condition	code < 0	6490:8:209430:209437	9012246	0	True				
ANR	9012297	RelationalExpression	code < 0		9012246	0		<			
ANR	9012298	Identifier	code		9012246	0					
ANR	9012299	PrimaryExpression	0		9012246	1					
ANR	9012300	ReturnStatement	return code ;	6491:8:209448:209459	9012246	1	True				
ANR	9012301	Identifier	code		9012246	0					
ANR	9012302	ExpressionStatement	check_estack ( 7 )	6494:4:209588:209603	9012246	5	True				
ANR	9012303	CallExpression	check_estack ( 7 )		9012246	0					
ANR	9012304	Callee	check_estack		9012246	0					
ANR	9012305	Identifier	check_estack		9012246	0					
ANR	9012306	ArgumentList	7		9012246	1					
ANR	9012307	Argument	7		9012246	0					
ANR	9012308	PrimaryExpression	7		9012246	0					
ANR	9012309	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6495:4:209609:209651	9012246	6	True				
ANR	9012310	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9012246	0					
ANR	9012311	Callee	push_mark_estack		9012246	0					
ANR	9012312	Identifier	push_mark_estack		9012246	0					
ANR	9012313	ArgumentList	es_other		9012246	1					
ANR	9012314	Argument	es_other		9012246	0					
ANR	9012315	Identifier	es_other		9012246	0					
ANR	9012316	Argument	colour_cleanup		9012246	1					
ANR	9012317	Identifier	colour_cleanup		9012246	0					
ANR	9012318	ExpressionStatement	esp ++	6496:4:209657:209662	9012246	7	True				
ANR	9012319	PostIncDecOperationExpression	esp ++		9012246	0					
ANR	9012320	Identifier	esp		9012246	0					
ANR	9012321	IncDec	++		9012246	1					
ANR	9012322	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6498:4:209726:209746	9012246	8	True				
ANR	9012323	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		9012246	0					
ANR	9012324	Callee	make_int		9012246	0					
ANR	9012325	Identifier	make_int		9012246	0					
ANR	9012326	ArgumentList	& esp [ 0 ]		9012246	1					
ANR	9012327	Argument	& esp [ 0 ]		9012246	0					
ANR	9012328	UnaryOperationExpression	& esp [ 0 ]		9012246	0					
ANR	9012329	UnaryOperator	&		9012246	0					
ANR	9012330	ArrayIndexing	esp [ 0 ]		9012246	1					
ANR	9012331	Identifier	esp		9012246	0					
ANR	9012332	PrimaryExpression	0		9012246	1					
ANR	9012333	Argument	0		9012246	1					
ANR	9012334	PrimaryExpression	0		9012246	0					
ANR	9012335	ExpressionStatement	esp ++	6499:4:209752:209757	9012246	9	True				
ANR	9012336	PostIncDecOperationExpression	esp ++		9012246	0					
ANR	9012337	Identifier	esp		9012246	0					
ANR	9012338	IncDec	++		9012246	1					
ANR	9012339	ExpressionStatement	"make_int ( & esp [ 0 ] , 1 )"	6501:4:209826:209846	9012246	10	True				
ANR	9012340	CallExpression	"make_int ( & esp [ 0 ] , 1 )"		9012246	0					
ANR	9012341	Callee	make_int		9012246	0					
ANR	9012342	Identifier	make_int		9012246	0					
ANR	9012343	ArgumentList	& esp [ 0 ]		9012246	1					
ANR	9012344	Argument	& esp [ 0 ]		9012246	0					
ANR	9012345	UnaryOperationExpression	& esp [ 0 ]		9012246	0					
ANR	9012346	UnaryOperator	&		9012246	0					
ANR	9012347	ArrayIndexing	esp [ 0 ]		9012246	1					
ANR	9012348	Identifier	esp		9012246	0					
ANR	9012349	PrimaryExpression	0		9012246	1					
ANR	9012350	Argument	1		9012246	1					
ANR	9012351	PrimaryExpression	1		9012246	0					
ANR	9012352	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6502:4:209852:209872	9012246	11	True				
ANR	9012353	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		9012246	0					
ANR	9012354	Callee	make_int		9012246	0					
ANR	9012355	Identifier	make_int		9012246	0					
ANR	9012356	ArgumentList	& esp [ 1 ]		9012246	1					
ANR	9012357	Argument	& esp [ 1 ]		9012246	0					
ANR	9012358	UnaryOperationExpression	& esp [ 1 ]		9012246	0					
ANR	9012359	UnaryOperator	&		9012246	0					
ANR	9012360	ArrayIndexing	esp [ 1 ]		9012246	1					
ANR	9012361	Identifier	esp		9012246	0					
ANR	9012362	PrimaryExpression	1		9012246	1					
ANR	9012363	Argument	1		9012246	1					
ANR	9012364	PrimaryExpression	1		9012246	0					
ANR	9012365	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6504:4:209934:209954	9012246	12	True				
ANR	9012366	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		9012246	0					
ANR	9012367	Callee	make_int		9012246	0					
ANR	9012368	Identifier	make_int		9012246	0					
ANR	9012369	ArgumentList	& esp [ 2 ]		9012246	1					
ANR	9012370	Argument	& esp [ 2 ]		9012246	0					
ANR	9012371	UnaryOperationExpression	& esp [ 2 ]		9012246	0					
ANR	9012372	UnaryOperator	&		9012246	0					
ANR	9012373	ArrayIndexing	esp [ 2 ]		9012246	1					
ANR	9012374	Identifier	esp		9012246	0					
ANR	9012375	PrimaryExpression	2		9012246	1					
ANR	9012376	Argument	0		9012246	1					
ANR	9012377	PrimaryExpression	0		9012246	0					
ANR	9012378	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6509:4:210133:210169	9012246	13	True				
ANR	9012379	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		9012246	0		=			
ANR	9012380	ArrayIndexing	esp [ 3 ]		9012246	0					
ANR	9012381	Identifier	esp		9012246	0					
ANR	9012382	PrimaryExpression	3		9012246	1					
ANR	9012383	MemberAccess	istate -> colorspace [ 0 ] . array		9012246	1					
ANR	9012384	ArrayIndexing	istate -> colorspace [ 0 ]		9012246	0					
ANR	9012385	PtrMemberAccess	istate -> colorspace		9012246	0					
ANR	9012386	Identifier	istate		9012246	0					
ANR	9012387	Identifier	colorspace		9012246	1					
ANR	9012388	PrimaryExpression	0		9012246	1					
ANR	9012389	Identifier	array		9012246	1					
ANR	9012390	ExpressionStatement	esp += 3	6510:4:210175:210183	9012246	14	True				
ANR	9012391	AssignmentExpression	esp += 3		9012246	0		+=			
ANR	9012392	Identifier	esp		9012246	0					
ANR	9012393	PrimaryExpression	3		9012246	1					
ANR	9012394	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6512:4:210302:210339	9012246	15	True				
ANR	9012395	CallExpression	push_op_estack ( currentbasecolor_cont )		9012246	0					
ANR	9012396	Callee	push_op_estack		9012246	0					
ANR	9012397	Identifier	push_op_estack		9012246	0					
ANR	9012398	ArgumentList	currentbasecolor_cont		9012246	1					
ANR	9012399	Argument	currentbasecolor_cont		9012246	0					
ANR	9012400	Identifier	currentbasecolor_cont		9012246	0					
ANR	9012401	ReturnStatement	return o_push_estack ;	6513:4:210345:210365	9012246	16	True				
ANR	9012402	Identifier	o_push_estack		9012246	0					
ANR	9012403	ReturnType	static int		9012246	1					
ANR	9012404	Identifier	zcurrenthsbcolor		9012246	2					
ANR	9012405	ParameterList	i_ctx_t * i_ctx_p		9012246	3					
ANR	9012406	Parameter	i_ctx_t * i_ctx_p	6481:17:209229:209245	9012246	0	True				
ANR	9012407	ParameterType	i_ctx_t *		9012246	0					
ANR	9012408	Identifier	i_ctx_p		9012246	1					
ANR	9012409	CFGEntryNode	ENTRY		9012246		True				
ANR	9012410	CFGExitNode	EXIT		9012246		True				
ANR	9012411	Symbol	& istate -> colorspace [ 0 ] . array		9012246						
ANR	9012412	Symbol	validate_spaces		9012246						
ANR	9012413	Symbol	istate -> colorspace [ 0 ] . array		9012246						
ANR	9012414	Symbol	code		9012246						
ANR	9012415	Symbol	esp		9012246						
ANR	9012416	Symbol	currentbasecolor_cont		9012246						
ANR	9012417	Symbol	colour_cleanup		9012246						
ANR	9012418	Symbol	es_other		9012246						
ANR	9012419	Symbol	* istate		9012246						
ANR	9012420	Symbol	& depth		9012246						
ANR	9012421	Symbol	zcurrentcolor		9012246						
ANR	9012422	Symbol	depth		9012246						
ANR	9012423	Symbol	* esp		9012246						
ANR	9012424	Symbol	i_ctx_p		9012246						
ANR	9012425	Symbol	istate -> colorspace		9012246						
ANR	9012426	Symbol	* * istate		9012246						
ANR	9012427	Symbol	istate		9012246						
ANR	9012428	Symbol	* istate -> colorspace		9012246						
ANR	9012429	Symbol	o_push_estack		9012246						
ANR	9012430	Function	zcurrentrgbcolor	6515:0:210369:211413							
ANR	9012431	FunctionDef	zcurrentrgbcolor (i_ctx_t * i_ctx_p)		9012430	0					
ANR	9012432	CompoundStatement		6517:0:210416:211413	9012430	0					
ANR	9012433	IdentifierDeclStatement	int code ;	6518:4:210422:210430	9012430	0	True				
ANR	9012434	IdentifierDecl	code		9012430	0					
ANR	9012435	IdentifierDeclType	int		9012430	0					
ANR	9012436	Identifier	code		9012430	1					
ANR	9012437	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6520:4:210437:210466	9012430	1	True				
ANR	9012438	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		9012430	0		=			
ANR	9012439	Identifier	code		9012430	0					
ANR	9012440	CallExpression	zcurrentcolor ( i_ctx_p )		9012430	1					
ANR	9012441	Callee	zcurrentcolor		9012430	0					
ANR	9012442	Identifier	zcurrentcolor		9012430	0					
ANR	9012443	ArgumentList	i_ctx_p		9012430	1					
ANR	9012444	Argument	i_ctx_p		9012430	0					
ANR	9012445	Identifier	i_ctx_p		9012430	0					
ANR	9012446	IfStatement	if ( code < 0 )		9012430	2					
ANR	9012447	Condition	code < 0	6521:8:210476:210483	9012430	0	True				
ANR	9012448	RelationalExpression	code < 0		9012430	0		<			
ANR	9012449	Identifier	code		9012430	0					
ANR	9012450	PrimaryExpression	0		9012430	1					
ANR	9012451	ReturnStatement	return code ;	6522:8:210494:210505	9012430	1	True				
ANR	9012452	Identifier	code		9012430	0					
ANR	9012453	ExpressionStatement	check_estack ( 7 )	6525:4:210634:210649	9012430	3	True				
ANR	9012454	CallExpression	check_estack ( 7 )		9012430	0					
ANR	9012455	Callee	check_estack		9012430	0					
ANR	9012456	Identifier	check_estack		9012430	0					
ANR	9012457	ArgumentList	7		9012430	1					
ANR	9012458	Argument	7		9012430	0					
ANR	9012459	PrimaryExpression	7		9012430	0					
ANR	9012460	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6526:4:210655:210697	9012430	4	True				
ANR	9012461	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9012430	0					
ANR	9012462	Callee	push_mark_estack		9012430	0					
ANR	9012463	Identifier	push_mark_estack		9012430	0					
ANR	9012464	ArgumentList	es_other		9012430	1					
ANR	9012465	Argument	es_other		9012430	0					
ANR	9012466	Identifier	es_other		9012430	0					
ANR	9012467	Argument	colour_cleanup		9012430	1					
ANR	9012468	Identifier	colour_cleanup		9012430	0					
ANR	9012469	ExpressionStatement	esp ++	6527:4:210703:210708	9012430	5	True				
ANR	9012470	PostIncDecOperationExpression	esp ++		9012430	0					
ANR	9012471	Identifier	esp		9012430	0					
ANR	9012472	IncDec	++		9012430	1					
ANR	9012473	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6529:4:210772:210792	9012430	6	True				
ANR	9012474	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		9012430	0					
ANR	9012475	Callee	make_int		9012430	0					
ANR	9012476	Identifier	make_int		9012430	0					
ANR	9012477	ArgumentList	& esp [ 0 ]		9012430	1					
ANR	9012478	Argument	& esp [ 0 ]		9012430	0					
ANR	9012479	UnaryOperationExpression	& esp [ 0 ]		9012430	0					
ANR	9012480	UnaryOperator	&		9012430	0					
ANR	9012481	ArrayIndexing	esp [ 0 ]		9012430	1					
ANR	9012482	Identifier	esp		9012430	0					
ANR	9012483	PrimaryExpression	0		9012430	1					
ANR	9012484	Argument	0		9012430	1					
ANR	9012485	PrimaryExpression	0		9012430	0					
ANR	9012486	ExpressionStatement	esp ++	6530:4:210798:210803	9012430	7	True				
ANR	9012487	PostIncDecOperationExpression	esp ++		9012430	0					
ANR	9012488	Identifier	esp		9012430	0					
ANR	9012489	IncDec	++		9012430	1					
ANR	9012490	ExpressionStatement	"make_int ( & esp [ 0 ] , 2 )"	6532:4:210872:210892	9012430	8	True				
ANR	9012491	CallExpression	"make_int ( & esp [ 0 ] , 2 )"		9012430	0					
ANR	9012492	Callee	make_int		9012430	0					
ANR	9012493	Identifier	make_int		9012430	0					
ANR	9012494	ArgumentList	& esp [ 0 ]		9012430	1					
ANR	9012495	Argument	& esp [ 0 ]		9012430	0					
ANR	9012496	UnaryOperationExpression	& esp [ 0 ]		9012430	0					
ANR	9012497	UnaryOperator	&		9012430	0					
ANR	9012498	ArrayIndexing	esp [ 0 ]		9012430	1					
ANR	9012499	Identifier	esp		9012430	0					
ANR	9012500	PrimaryExpression	0		9012430	1					
ANR	9012501	Argument	2		9012430	1					
ANR	9012502	PrimaryExpression	2		9012430	0					
ANR	9012503	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6533:4:210898:210918	9012430	9	True				
ANR	9012504	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		9012430	0					
ANR	9012505	Callee	make_int		9012430	0					
ANR	9012506	Identifier	make_int		9012430	0					
ANR	9012507	ArgumentList	& esp [ 1 ]		9012430	1					
ANR	9012508	Argument	& esp [ 1 ]		9012430	0					
ANR	9012509	UnaryOperationExpression	& esp [ 1 ]		9012430	0					
ANR	9012510	UnaryOperator	&		9012430	0					
ANR	9012511	ArrayIndexing	esp [ 1 ]		9012430	1					
ANR	9012512	Identifier	esp		9012430	0					
ANR	9012513	PrimaryExpression	1		9012430	1					
ANR	9012514	Argument	1		9012430	1					
ANR	9012515	PrimaryExpression	1		9012430	0					
ANR	9012516	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6535:4:210980:211000	9012430	10	True				
ANR	9012517	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		9012430	0					
ANR	9012518	Callee	make_int		9012430	0					
ANR	9012519	Identifier	make_int		9012430	0					
ANR	9012520	ArgumentList	& esp [ 2 ]		9012430	1					
ANR	9012521	Argument	& esp [ 2 ]		9012430	0					
ANR	9012522	UnaryOperationExpression	& esp [ 2 ]		9012430	0					
ANR	9012523	UnaryOperator	&		9012430	0					
ANR	9012524	ArrayIndexing	esp [ 2 ]		9012430	1					
ANR	9012525	Identifier	esp		9012430	0					
ANR	9012526	PrimaryExpression	2		9012430	1					
ANR	9012527	Argument	0		9012430	1					
ANR	9012528	PrimaryExpression	0		9012430	0					
ANR	9012529	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6540:4:211179:211215	9012430	11	True				
ANR	9012530	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		9012430	0		=			
ANR	9012531	ArrayIndexing	esp [ 3 ]		9012430	0					
ANR	9012532	Identifier	esp		9012430	0					
ANR	9012533	PrimaryExpression	3		9012430	1					
ANR	9012534	MemberAccess	istate -> colorspace [ 0 ] . array		9012430	1					
ANR	9012535	ArrayIndexing	istate -> colorspace [ 0 ]		9012430	0					
ANR	9012536	PtrMemberAccess	istate -> colorspace		9012430	0					
ANR	9012537	Identifier	istate		9012430	0					
ANR	9012538	Identifier	colorspace		9012430	1					
ANR	9012539	PrimaryExpression	0		9012430	1					
ANR	9012540	Identifier	array		9012430	1					
ANR	9012541	ExpressionStatement	esp += 3	6541:4:211221:211229	9012430	12	True				
ANR	9012542	AssignmentExpression	esp += 3		9012430	0		+=			
ANR	9012543	Identifier	esp		9012430	0					
ANR	9012544	PrimaryExpression	3		9012430	1					
ANR	9012545	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6543:4:211348:211385	9012430	13	True				
ANR	9012546	CallExpression	push_op_estack ( currentbasecolor_cont )		9012430	0					
ANR	9012547	Callee	push_op_estack		9012430	0					
ANR	9012548	Identifier	push_op_estack		9012430	0					
ANR	9012549	ArgumentList	currentbasecolor_cont		9012430	1					
ANR	9012550	Argument	currentbasecolor_cont		9012430	0					
ANR	9012551	Identifier	currentbasecolor_cont		9012430	0					
ANR	9012552	ReturnStatement	return o_push_estack ;	6544:4:211391:211411	9012430	14	True				
ANR	9012553	Identifier	o_push_estack		9012430	0					
ANR	9012554	ReturnType	static int		9012430	1					
ANR	9012555	Identifier	zcurrentrgbcolor		9012430	2					
ANR	9012556	ParameterList	i_ctx_t * i_ctx_p		9012430	3					
ANR	9012557	Parameter	i_ctx_t * i_ctx_p	6516:17:210397:210413	9012430	0	True				
ANR	9012558	ParameterType	i_ctx_t *		9012430	0					
ANR	9012559	Identifier	i_ctx_p		9012430	1					
ANR	9012560	CFGEntryNode	ENTRY		9012430		True				
ANR	9012561	CFGExitNode	EXIT		9012430		True				
ANR	9012562	Symbol	istate -> colorspace [ 0 ] . array		9012430						
ANR	9012563	Symbol	code		9012430						
ANR	9012564	Symbol	esp		9012430						
ANR	9012565	Symbol	currentbasecolor_cont		9012430						
ANR	9012566	Symbol	colour_cleanup		9012430						
ANR	9012567	Symbol	es_other		9012430						
ANR	9012568	Symbol	* istate		9012430						
ANR	9012569	Symbol	zcurrentcolor		9012430						
ANR	9012570	Symbol	* esp		9012430						
ANR	9012571	Symbol	i_ctx_p		9012430						
ANR	9012572	Symbol	istate -> colorspace		9012430						
ANR	9012573	Symbol	* * istate		9012430						
ANR	9012574	Symbol	istate		9012430						
ANR	9012575	Symbol	* istate -> colorspace		9012430						
ANR	9012576	Symbol	o_push_estack		9012430						
ANR	9012577	Function	zcurrentcmykcolor	6546:0:211415:212461							
ANR	9012578	FunctionDef	zcurrentcmykcolor (i_ctx_t * i_ctx_p)		9012577	0					
ANR	9012579	CompoundStatement		6548:0:211463:212461	9012577	0					
ANR	9012580	IdentifierDeclStatement	int code ;	6549:4:211469:211477	9012577	0	True				
ANR	9012581	IdentifierDecl	code		9012577	0					
ANR	9012582	IdentifierDeclType	int		9012577	0					
ANR	9012583	Identifier	code		9012577	1					
ANR	9012584	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6551:4:211484:211513	9012577	1	True				
ANR	9012585	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		9012577	0		=			
ANR	9012586	Identifier	code		9012577	0					
ANR	9012587	CallExpression	zcurrentcolor ( i_ctx_p )		9012577	1					
ANR	9012588	Callee	zcurrentcolor		9012577	0					
ANR	9012589	Identifier	zcurrentcolor		9012577	0					
ANR	9012590	ArgumentList	i_ctx_p		9012577	1					
ANR	9012591	Argument	i_ctx_p		9012577	0					
ANR	9012592	Identifier	i_ctx_p		9012577	0					
ANR	9012593	IfStatement	if ( code < 0 )		9012577	2					
ANR	9012594	Condition	code < 0	6552:8:211523:211530	9012577	0	True				
ANR	9012595	RelationalExpression	code < 0		9012577	0		<			
ANR	9012596	Identifier	code		9012577	0					
ANR	9012597	PrimaryExpression	0		9012577	1					
ANR	9012598	ReturnStatement	return code ;	6553:8:211541:211552	9012577	1	True				
ANR	9012599	Identifier	code		9012577	0					
ANR	9012600	ExpressionStatement	check_estack ( 7 )	6556:4:211681:211696	9012577	3	True				
ANR	9012601	CallExpression	check_estack ( 7 )		9012577	0					
ANR	9012602	Callee	check_estack		9012577	0					
ANR	9012603	Identifier	check_estack		9012577	0					
ANR	9012604	ArgumentList	7		9012577	1					
ANR	9012605	Argument	7		9012577	0					
ANR	9012606	PrimaryExpression	7		9012577	0					
ANR	9012607	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6557:4:211702:211744	9012577	4	True				
ANR	9012608	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		9012577	0					
ANR	9012609	Callee	push_mark_estack		9012577	0					
ANR	9012610	Identifier	push_mark_estack		9012577	0					
ANR	9012611	ArgumentList	es_other		9012577	1					
ANR	9012612	Argument	es_other		9012577	0					
ANR	9012613	Identifier	es_other		9012577	0					
ANR	9012614	Argument	colour_cleanup		9012577	1					
ANR	9012615	Identifier	colour_cleanup		9012577	0					
ANR	9012616	ExpressionStatement	esp ++	6558:4:211750:211755	9012577	5	True				
ANR	9012617	PostIncDecOperationExpression	esp ++		9012577	0					
ANR	9012618	Identifier	esp		9012577	0					
ANR	9012619	IncDec	++		9012577	1					
ANR	9012620	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6560:4:211819:211839	9012577	6	True				
ANR	9012621	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		9012577	0					
ANR	9012622	Callee	make_int		9012577	0					
ANR	9012623	Identifier	make_int		9012577	0					
ANR	9012624	ArgumentList	& esp [ 0 ]		9012577	1					
ANR	9012625	Argument	& esp [ 0 ]		9012577	0					
ANR	9012626	UnaryOperationExpression	& esp [ 0 ]		9012577	0					
ANR	9012627	UnaryOperator	&		9012577	0					
ANR	9012628	ArrayIndexing	esp [ 0 ]		9012577	1					
ANR	9012629	Identifier	esp		9012577	0					
ANR	9012630	PrimaryExpression	0		9012577	1					
ANR	9012631	Argument	0		9012577	1					
ANR	9012632	PrimaryExpression	0		9012577	0					
ANR	9012633	ExpressionStatement	esp ++	6561:4:211845:211850	9012577	7	True				
ANR	9012634	PostIncDecOperationExpression	esp ++		9012577	0					
ANR	9012635	Identifier	esp		9012577	0					
ANR	9012636	IncDec	++		9012577	1					
ANR	9012637	ExpressionStatement	"make_int ( & esp [ 0 ] , 3 )"	6563:4:211920:211940	9012577	8	True				
ANR	9012638	CallExpression	"make_int ( & esp [ 0 ] , 3 )"		9012577	0					
ANR	9012639	Callee	make_int		9012577	0					
ANR	9012640	Identifier	make_int		9012577	0					
ANR	9012641	ArgumentList	& esp [ 0 ]		9012577	1					
ANR	9012642	Argument	& esp [ 0 ]		9012577	0					
ANR	9012643	UnaryOperationExpression	& esp [ 0 ]		9012577	0					
ANR	9012644	UnaryOperator	&		9012577	0					
ANR	9012645	ArrayIndexing	esp [ 0 ]		9012577	1					
ANR	9012646	Identifier	esp		9012577	0					
ANR	9012647	PrimaryExpression	0		9012577	1					
ANR	9012648	Argument	3		9012577	1					
ANR	9012649	PrimaryExpression	3		9012577	0					
ANR	9012650	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6564:4:211946:211966	9012577	9	True				
ANR	9012651	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		9012577	0					
ANR	9012652	Callee	make_int		9012577	0					
ANR	9012653	Identifier	make_int		9012577	0					
ANR	9012654	ArgumentList	& esp [ 1 ]		9012577	1					
ANR	9012655	Argument	& esp [ 1 ]		9012577	0					
ANR	9012656	UnaryOperationExpression	& esp [ 1 ]		9012577	0					
ANR	9012657	UnaryOperator	&		9012577	0					
ANR	9012658	ArrayIndexing	esp [ 1 ]		9012577	1					
ANR	9012659	Identifier	esp		9012577	0					
ANR	9012660	PrimaryExpression	1		9012577	1					
ANR	9012661	Argument	1		9012577	1					
ANR	9012662	PrimaryExpression	1		9012577	0					
ANR	9012663	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6566:4:212028:212048	9012577	10	True				
ANR	9012664	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		9012577	0					
ANR	9012665	Callee	make_int		9012577	0					
ANR	9012666	Identifier	make_int		9012577	0					
ANR	9012667	ArgumentList	& esp [ 2 ]		9012577	1					
ANR	9012668	Argument	& esp [ 2 ]		9012577	0					
ANR	9012669	UnaryOperationExpression	& esp [ 2 ]		9012577	0					
ANR	9012670	UnaryOperator	&		9012577	0					
ANR	9012671	ArrayIndexing	esp [ 2 ]		9012577	1					
ANR	9012672	Identifier	esp		9012577	0					
ANR	9012673	PrimaryExpression	2		9012577	1					
ANR	9012674	Argument	0		9012577	1					
ANR	9012675	PrimaryExpression	0		9012577	0					
ANR	9012676	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6571:4:212227:212263	9012577	11	True				
ANR	9012677	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		9012577	0		=			
ANR	9012678	ArrayIndexing	esp [ 3 ]		9012577	0					
ANR	9012679	Identifier	esp		9012577	0					
ANR	9012680	PrimaryExpression	3		9012577	1					
ANR	9012681	MemberAccess	istate -> colorspace [ 0 ] . array		9012577	1					
ANR	9012682	ArrayIndexing	istate -> colorspace [ 0 ]		9012577	0					
ANR	9012683	PtrMemberAccess	istate -> colorspace		9012577	0					
ANR	9012684	Identifier	istate		9012577	0					
ANR	9012685	Identifier	colorspace		9012577	1					
ANR	9012686	PrimaryExpression	0		9012577	1					
ANR	9012687	Identifier	array		9012577	1					
ANR	9012688	ExpressionStatement	esp += 3	6572:4:212269:212277	9012577	12	True				
ANR	9012689	AssignmentExpression	esp += 3		9012577	0		+=			
ANR	9012690	Identifier	esp		9012577	0					
ANR	9012691	PrimaryExpression	3		9012577	1					
ANR	9012692	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6574:4:212396:212433	9012577	13	True				
ANR	9012693	CallExpression	push_op_estack ( currentbasecolor_cont )		9012577	0					
ANR	9012694	Callee	push_op_estack		9012577	0					
ANR	9012695	Identifier	push_op_estack		9012577	0					
ANR	9012696	ArgumentList	currentbasecolor_cont		9012577	1					
ANR	9012697	Argument	currentbasecolor_cont		9012577	0					
ANR	9012698	Identifier	currentbasecolor_cont		9012577	0					
ANR	9012699	ReturnStatement	return o_push_estack ;	6575:4:212439:212459	9012577	14	True				
ANR	9012700	Identifier	o_push_estack		9012577	0					
ANR	9012701	ReturnType	static int		9012577	1					
ANR	9012702	Identifier	zcurrentcmykcolor		9012577	2					
ANR	9012703	ParameterList	i_ctx_t * i_ctx_p		9012577	3					
ANR	9012704	Parameter	i_ctx_t * i_ctx_p	6547:18:211444:211460	9012577	0	True				
ANR	9012705	ParameterType	i_ctx_t *		9012577	0					
ANR	9012706	Identifier	i_ctx_p		9012577	1					
ANR	9012707	CFGEntryNode	ENTRY		9012577		True				
ANR	9012708	CFGExitNode	EXIT		9012577		True				
ANR	9012709	Symbol	istate -> colorspace [ 0 ] . array		9012577						
ANR	9012710	Symbol	code		9012577						
ANR	9012711	Symbol	esp		9012577						
ANR	9012712	Symbol	currentbasecolor_cont		9012577						
ANR	9012713	Symbol	colour_cleanup		9012577						
ANR	9012714	Symbol	es_other		9012577						
ANR	9012715	Symbol	* istate		9012577						
ANR	9012716	Symbol	zcurrentcolor		9012577						
ANR	9012717	Symbol	* esp		9012577						
ANR	9012718	Symbol	i_ctx_p		9012577						
ANR	9012719	Symbol	istate -> colorspace		9012577						
ANR	9012720	Symbol	* * istate		9012577						
ANR	9012721	Symbol	istate		9012577						
ANR	9012722	Symbol	* istate -> colorspace		9012577						
ANR	9012723	Symbol	o_push_estack		9012577						
ANR	9012724	Function	zswapcolors	6578:0:212464:212859							
ANR	9012725	FunctionDef	zswapcolors (i_ctx_t * i_ctx_p)		9012724	0					
ANR	9012726	CompoundStatement		6580:0:212506:212859	9012724	0					
ANR	9012727	IdentifierDeclStatement	ref_colorspace tmp_cs ;	6581:4:212512:212533	9012724	0	True				
ANR	9012728	IdentifierDecl	tmp_cs		9012724	0					
ANR	9012729	IdentifierDeclType	ref_colorspace		9012724	0					
ANR	9012730	Identifier	tmp_cs		9012724	1					
ANR	9012731	IdentifierDeclStatement	ref tmp_pat ;	6582:4:212539:212561	9012724	1	True				
ANR	9012732	IdentifierDecl	tmp_pat		9012724	0					
ANR	9012733	IdentifierDeclType	ref		9012724	0					
ANR	9012734	Identifier	tmp_pat		9012724	1					
ANR	9012735	ExpressionStatement	tmp_cs = istate -> colorspace [ 0 ]	6584:4:212568:212613	9012724	2	True				
ANR	9012736	AssignmentExpression	tmp_cs = istate -> colorspace [ 0 ]		9012724	0		=			
ANR	9012737	Identifier	tmp_cs		9012724	0					
ANR	9012738	ArrayIndexing	istate -> colorspace [ 0 ]		9012724	1					
ANR	9012739	PtrMemberAccess	istate -> colorspace		9012724	0					
ANR	9012740	Identifier	istate		9012724	0					
ANR	9012741	Identifier	colorspace		9012724	1					
ANR	9012742	PrimaryExpression	0		9012724	1					
ANR	9012743	ExpressionStatement	istate -> colorspace [ 0 ] = istate -> colorspace [ 1 ]	6585:4:212619:212664	9012724	3	True				
ANR	9012744	AssignmentExpression	istate -> colorspace [ 0 ] = istate -> colorspace [ 1 ]		9012724	0		=			
ANR	9012745	ArrayIndexing	istate -> colorspace [ 0 ]		9012724	0					
ANR	9012746	PtrMemberAccess	istate -> colorspace		9012724	0					
ANR	9012747	Identifier	istate		9012724	0					
ANR	9012748	Identifier	colorspace		9012724	1					
ANR	9012749	PrimaryExpression	0		9012724	1					
ANR	9012750	ArrayIndexing	istate -> colorspace [ 1 ]		9012724	1					
ANR	9012751	PtrMemberAccess	istate -> colorspace		9012724	0					
ANR	9012752	Identifier	istate		9012724	0					
ANR	9012753	Identifier	colorspace		9012724	1					
ANR	9012754	PrimaryExpression	1		9012724	1					
ANR	9012755	ExpressionStatement	istate -> colorspace [ 1 ] = tmp_cs	6586:4:212670:212700	9012724	4	True				
ANR	9012756	AssignmentExpression	istate -> colorspace [ 1 ] = tmp_cs		9012724	0		=			
ANR	9012757	ArrayIndexing	istate -> colorspace [ 1 ]		9012724	0					
ANR	9012758	PtrMemberAccess	istate -> colorspace		9012724	0					
ANR	9012759	Identifier	istate		9012724	0					
ANR	9012760	Identifier	colorspace		9012724	1					
ANR	9012761	PrimaryExpression	1		9012724	1					
ANR	9012762	Identifier	tmp_cs		9012724	1					
ANR	9012763	ExpressionStatement	tmp_pat = istate -> pattern [ 0 ]	6588:4:212707:212746	9012724	5	True				
ANR	9012764	AssignmentExpression	tmp_pat = istate -> pattern [ 0 ]		9012724	0		=			
ANR	9012765	Identifier	tmp_pat		9012724	0					
ANR	9012766	ArrayIndexing	istate -> pattern [ 0 ]		9012724	1					
ANR	9012767	PtrMemberAccess	istate -> pattern		9012724	0					
ANR	9012768	Identifier	istate		9012724	0					
ANR	9012769	Identifier	pattern		9012724	1					
ANR	9012770	PrimaryExpression	0		9012724	1					
ANR	9012771	ExpressionStatement	istate -> pattern [ 0 ] = istate -> pattern [ 1 ]	6589:4:212752:212791	9012724	6	True				
ANR	9012772	AssignmentExpression	istate -> pattern [ 0 ] = istate -> pattern [ 1 ]		9012724	0		=			
ANR	9012773	ArrayIndexing	istate -> pattern [ 0 ]		9012724	0					
ANR	9012774	PtrMemberAccess	istate -> pattern		9012724	0					
ANR	9012775	Identifier	istate		9012724	0					
ANR	9012776	Identifier	pattern		9012724	1					
ANR	9012777	PrimaryExpression	0		9012724	1					
ANR	9012778	ArrayIndexing	istate -> pattern [ 1 ]		9012724	1					
ANR	9012779	PtrMemberAccess	istate -> pattern		9012724	0					
ANR	9012780	Identifier	istate		9012724	0					
ANR	9012781	Identifier	pattern		9012724	1					
ANR	9012782	PrimaryExpression	1		9012724	1					
ANR	9012783	ExpressionStatement	istate -> pattern [ 1 ] = tmp_pat	6590:4:212797:212825	9012724	7	True				
ANR	9012784	AssignmentExpression	istate -> pattern [ 1 ] = tmp_pat		9012724	0		=			
ANR	9012785	ArrayIndexing	istate -> pattern [ 1 ]		9012724	0					
ANR	9012786	PtrMemberAccess	istate -> pattern		9012724	0					
ANR	9012787	Identifier	istate		9012724	0					
ANR	9012788	Identifier	pattern		9012724	1					
ANR	9012789	PrimaryExpression	1		9012724	1					
ANR	9012790	Identifier	tmp_pat		9012724	1					
ANR	9012791	ReturnStatement	return gs_swapcolors ( igs ) ;	6592:4:212832:212857	9012724	8	True				
ANR	9012792	CallExpression	gs_swapcolors ( igs )		9012724	0					
ANR	9012793	Callee	gs_swapcolors		9012724	0					
ANR	9012794	Identifier	gs_swapcolors		9012724	0					
ANR	9012795	ArgumentList	igs		9012724	1					
ANR	9012796	Argument	igs		9012724	0					
ANR	9012797	Identifier	igs		9012724	0					
ANR	9012798	ReturnType	static int		9012724	1					
ANR	9012799	Identifier	zswapcolors		9012724	2					
ANR	9012800	ParameterList	i_ctx_t * i_ctx_p		9012724	3					
ANR	9012801	Parameter	i_ctx_t * i_ctx_p	6579:12:212487:212503	9012724	0	True				
ANR	9012802	ParameterType	i_ctx_t *		9012724	0					
ANR	9012803	Identifier	i_ctx_p		9012724	1					
ANR	9012804	CFGEntryNode	ENTRY		9012724		True				
ANR	9012805	CFGExitNode	EXIT		9012724		True				
ANR	9012806	Symbol	tmp_pat		9012724						
ANR	9012807	Symbol	igs		9012724						
ANR	9012808	Symbol	i_ctx_p		9012724						
ANR	9012809	Symbol	istate -> pattern		9012724						
ANR	9012810	Symbol	istate -> colorspace		9012724						
ANR	9012811	Symbol	* istate -> pattern		9012724						
ANR	9012812	Symbol	gs_swapcolors		9012724						
ANR	9012813	Symbol	tmp_cs		9012724						
ANR	9012814	Symbol	* * istate		9012724						
ANR	9012815	Symbol	* istate		9012724						
ANR	9012816	Symbol	* istate -> colorspace		9012724						
ANR	9012817	Symbol	istate		9012724						
ANR	9012818	Function	zsetfillcolor	6595:0:212862:212939							
ANR	9012819	FunctionDef	zsetfillcolor (i_ctx_t * i_ctx_p)		9012818	0					
ANR	9012820	CompoundStatement		6597:0:212906:212939	9012818	0					
ANR	9012821	ReturnStatement	return zsetcolor ( i_ctx_p ) ;	6598:4:212912:212937	9012818	0	True				
ANR	9012822	CallExpression	zsetcolor ( i_ctx_p )		9012818	0					
ANR	9012823	Callee	zsetcolor		9012818	0					
ANR	9012824	Identifier	zsetcolor		9012818	0					
ANR	9012825	ArgumentList	i_ctx_p		9012818	1					
ANR	9012826	Argument	i_ctx_p		9012818	0					
ANR	9012827	Identifier	i_ctx_p		9012818	0					
ANR	9012828	ReturnType	static int		9012818	1					
ANR	9012829	Identifier	zsetfillcolor		9012818	2					
ANR	9012830	ParameterList	i_ctx_t * i_ctx_p		9012818	3					
ANR	9012831	Parameter	i_ctx_t * i_ctx_p	6596:14:212887:212903	9012818	0	True				
ANR	9012832	ParameterType	i_ctx_t *		9012818	0					
ANR	9012833	Identifier	i_ctx_p		9012818	1					
ANR	9012834	CFGEntryNode	ENTRY		9012818		True				
ANR	9012835	CFGExitNode	EXIT		9012818		True				
ANR	9012836	Symbol	i_ctx_p		9012818						
ANR	9012837	Symbol	zsetcolor		9012818						
ANR	9012838	Function	zsetfillcolorspace	6600:0:212941:213028							
ANR	9012839	FunctionDef	zsetfillcolorspace (i_ctx_t * i_ctx_p)		9012838	0					
ANR	9012840	CompoundStatement		6602:0:212990:213028	9012838	0					
ANR	9012841	ReturnStatement	return zsetcolorspace ( i_ctx_p ) ;	6603:4:212996:213026	9012838	0	True				
ANR	9012842	CallExpression	zsetcolorspace ( i_ctx_p )		9012838	0					
ANR	9012843	Callee	zsetcolorspace		9012838	0					
ANR	9012844	Identifier	zsetcolorspace		9012838	0					
ANR	9012845	ArgumentList	i_ctx_p		9012838	1					
ANR	9012846	Argument	i_ctx_p		9012838	0					
ANR	9012847	Identifier	i_ctx_p		9012838	0					
ANR	9012848	ReturnType	static int		9012838	1					
ANR	9012849	Identifier	zsetfillcolorspace		9012838	2					
ANR	9012850	ParameterList	i_ctx_t * i_ctx_p		9012838	3					
ANR	9012851	Parameter	i_ctx_t * i_ctx_p	6601:19:212971:212987	9012838	0	True				
ANR	9012852	ParameterType	i_ctx_t *		9012838	0					
ANR	9012853	Identifier	i_ctx_p		9012838	1					
ANR	9012854	CFGEntryNode	ENTRY		9012838		True				
ANR	9012855	CFGExitNode	EXIT		9012838		True				
ANR	9012856	Symbol	i_ctx_p		9012838						
ANR	9012857	Symbol	zsetcolorspace		9012838						
ANR	9012858	Function	setstrokecolor_cont	6605:0:213030:213115							
ANR	9012859	FunctionDef	setstrokecolor_cont (i_ctx_t * i_ctx_p)		9012858	0					
ANR	9012860	CompoundStatement		6607:0:213080:213115	9012858	0					
ANR	9012861	ReturnStatement	return zswapcolors ( i_ctx_p ) ;	6608:4:213086:213113	9012858	0	True				
ANR	9012862	CallExpression	zswapcolors ( i_ctx_p )		9012858	0					
ANR	9012863	Callee	zswapcolors		9012858	0					
ANR	9012864	Identifier	zswapcolors		9012858	0					
ANR	9012865	ArgumentList	i_ctx_p		9012858	1					
ANR	9012866	Argument	i_ctx_p		9012858	0					
ANR	9012867	Identifier	i_ctx_p		9012858	0					
ANR	9012868	ReturnType	static int		9012858	1					
ANR	9012869	Identifier	setstrokecolor_cont		9012858	2					
ANR	9012870	ParameterList	i_ctx_t * i_ctx_p		9012858	3					
ANR	9012871	Parameter	i_ctx_t * i_ctx_p	6606:20:213061:213077	9012858	0	True				
ANR	9012872	ParameterType	i_ctx_t *		9012858	0					
ANR	9012873	Identifier	i_ctx_p		9012858	1					
ANR	9012874	CFGEntryNode	ENTRY		9012858		True				
ANR	9012875	CFGExitNode	EXIT		9012858		True				
ANR	9012876	Symbol	i_ctx_p		9012858						
ANR	9012877	Symbol	zswapcolors		9012858						
ANR	9012878	Function	zsetstrokecolor	6610:0:213117:213615							
ANR	9012879	FunctionDef	zsetstrokecolor (i_ctx_t * i_ctx_p)		9012878	0					
ANR	9012880	CompoundStatement		6612:0:213163:213615	9012878	0					
ANR	9012881	IdentifierDeclStatement	int code ;	6613:4:213169:213177	9012878	0	True				
ANR	9012882	IdentifierDecl	code		9012878	0					
ANR	9012883	IdentifierDeclType	int		9012878	0					
ANR	9012884	Identifier	code		9012878	1					
ANR	9012885	ExpressionStatement	code = zswapcolors ( i_ctx_p )	6615:4:213184:213211	9012878	1	True				
ANR	9012886	AssignmentExpression	code = zswapcolors ( i_ctx_p )		9012878	0		=			
ANR	9012887	Identifier	code		9012878	0					
ANR	9012888	CallExpression	zswapcolors ( i_ctx_p )		9012878	1					
ANR	9012889	Callee	zswapcolors		9012878	0					
ANR	9012890	Identifier	zswapcolors		9012878	0					
ANR	9012891	ArgumentList	i_ctx_p		9012878	1					
ANR	9012892	Argument	i_ctx_p		9012878	0					
ANR	9012893	Identifier	i_ctx_p		9012878	0					
ANR	9012894	IfStatement	if ( code < 0 )		9012878	2					
ANR	9012895	Condition	code < 0	6616:8:213221:213228	9012878	0	True				
ANR	9012896	RelationalExpression	code < 0		9012878	0		<			
ANR	9012897	Identifier	code		9012878	0					
ANR	9012898	PrimaryExpression	0		9012878	1					
ANR	9012899	ReturnStatement	return code ;	6617:8:213239:213250	9012878	1	True				
ANR	9012900	Identifier	code		9012878	0					
ANR	9012901	ExpressionStatement	check_estack ( 1 )	6621:4:213410:213425	9012878	3	True				
ANR	9012902	CallExpression	check_estack ( 1 )		9012878	0					
ANR	9012903	Callee	check_estack		9012878	0					
ANR	9012904	Identifier	check_estack		9012878	0					
ANR	9012905	ArgumentList	1		9012878	1					
ANR	9012906	Argument	1		9012878	0					
ANR	9012907	PrimaryExpression	1		9012878	0					
ANR	9012908	ExpressionStatement	push_op_estack ( setstrokecolor_cont )	6623:4:213478:213513	9012878	4	True				
ANR	9012909	CallExpression	push_op_estack ( setstrokecolor_cont )		9012878	0					
ANR	9012910	Callee	push_op_estack		9012878	0					
ANR	9012911	Identifier	push_op_estack		9012878	0					
ANR	9012912	ArgumentList	setstrokecolor_cont		9012878	1					
ANR	9012913	Argument	setstrokecolor_cont		9012878	0					
ANR	9012914	Identifier	setstrokecolor_cont		9012878	0					
ANR	9012915	ExpressionStatement	code = zsetcolor ( i_ctx_p )	6625:4:213520:213545	9012878	5	True				
ANR	9012916	AssignmentExpression	code = zsetcolor ( i_ctx_p )		9012878	0		=			
ANR	9012917	Identifier	code		9012878	0					
ANR	9012918	CallExpression	zsetcolor ( i_ctx_p )		9012878	1					
ANR	9012919	Callee	zsetcolor		9012878	0					
ANR	9012920	Identifier	zsetcolor		9012878	0					
ANR	9012921	ArgumentList	i_ctx_p		9012878	1					
ANR	9012922	Argument	i_ctx_p		9012878	0					
ANR	9012923	Identifier	i_ctx_p		9012878	0					
ANR	9012924	IfStatement	if ( code >= 0 )		9012878	6					
ANR	9012925	Condition	code >= 0	6627:8:213556:213564	9012878	0	True				
ANR	9012926	RelationalExpression	code >= 0		9012878	0		>=			
ANR	9012927	Identifier	code		9012878	0					
ANR	9012928	PrimaryExpression	0		9012878	1					
ANR	9012929	ReturnStatement	return o_push_estack ;	6628:8:213575:213595	9012878	1	True				
ANR	9012930	Identifier	o_push_estack		9012878	0					
ANR	9012931	ReturnStatement	return code ;	6630:4:213602:213613	9012878	7	True				
ANR	9012932	Identifier	code		9012878	0					
ANR	9012933	ReturnType	static int		9012878	1					
ANR	9012934	Identifier	zsetstrokecolor		9012878	2					
ANR	9012935	ParameterList	i_ctx_t * i_ctx_p		9012878	3					
ANR	9012936	Parameter	i_ctx_t * i_ctx_p	6611:16:213144:213160	9012878	0	True				
ANR	9012937	ParameterType	i_ctx_t *		9012878	0					
ANR	9012938	Identifier	i_ctx_p		9012878	1					
ANR	9012939	CFGEntryNode	ENTRY		9012878		True				
ANR	9012940	CFGExitNode	EXIT		9012878		True				
ANR	9012941	Symbol	setstrokecolor_cont		9012878						
ANR	9012942	Symbol	code		9012878						
ANR	9012943	Symbol	i_ctx_p		9012878						
ANR	9012944	Symbol	zswapcolors		9012878						
ANR	9012945	Symbol	zsetcolor		9012878						
ANR	9012946	Symbol	o_push_estack		9012878						
ANR	9012947	Function	setstrokecolorspace_cont	6632:0:213617:213707							
ANR	9012948	FunctionDef	setstrokecolorspace_cont (i_ctx_t * i_ctx_p)		9012947	0					
ANR	9012949	CompoundStatement		6634:0:213672:213707	9012947	0					
ANR	9012950	ReturnStatement	return zswapcolors ( i_ctx_p ) ;	6635:4:213678:213705	9012947	0	True				
ANR	9012951	CallExpression	zswapcolors ( i_ctx_p )		9012947	0					
ANR	9012952	Callee	zswapcolors		9012947	0					
ANR	9012953	Identifier	zswapcolors		9012947	0					
ANR	9012954	ArgumentList	i_ctx_p		9012947	1					
ANR	9012955	Argument	i_ctx_p		9012947	0					
ANR	9012956	Identifier	i_ctx_p		9012947	0					
ANR	9012957	ReturnType	static int		9012947	1					
ANR	9012958	Identifier	setstrokecolorspace_cont		9012947	2					
ANR	9012959	ParameterList	i_ctx_t * i_ctx_p		9012947	3					
ANR	9012960	Parameter	i_ctx_t * i_ctx_p	6633:25:213653:213669	9012947	0	True				
ANR	9012961	ParameterType	i_ctx_t *		9012947	0					
ANR	9012962	Identifier	i_ctx_p		9012947	1					
ANR	9012963	CFGEntryNode	ENTRY		9012947		True				
ANR	9012964	CFGExitNode	EXIT		9012947		True				
ANR	9012965	Symbol	i_ctx_p		9012947						
ANR	9012966	Symbol	zswapcolors		9012947						
ANR	9012967	Function	zsetstrokecolorspace	6637:0:213709:214221							
ANR	9012968	FunctionDef	zsetstrokecolorspace (i_ctx_t * i_ctx_p)		9012967	0					
ANR	9012969	CompoundStatement		6639:0:213760:214221	9012967	0					
ANR	9012970	IdentifierDeclStatement	int code ;	6640:4:213766:213774	9012967	0	True				
ANR	9012971	IdentifierDecl	code		9012967	0					
ANR	9012972	IdentifierDeclType	int		9012967	0					
ANR	9012973	Identifier	code		9012967	1					
ANR	9012974	ExpressionStatement	code = zswapcolors ( i_ctx_p )	6642:4:213781:213808	9012967	1	True				
ANR	9012975	AssignmentExpression	code = zswapcolors ( i_ctx_p )		9012967	0		=			
ANR	9012976	Identifier	code		9012967	0					
ANR	9012977	CallExpression	zswapcolors ( i_ctx_p )		9012967	1					
ANR	9012978	Callee	zswapcolors		9012967	0					
ANR	9012979	Identifier	zswapcolors		9012967	0					
ANR	9012980	ArgumentList	i_ctx_p		9012967	1					
ANR	9012981	Argument	i_ctx_p		9012967	0					
ANR	9012982	Identifier	i_ctx_p		9012967	0					
ANR	9012983	IfStatement	if ( code < 0 )		9012967	2					
ANR	9012984	Condition	code < 0	6643:8:213818:213825	9012967	0	True				
ANR	9012985	RelationalExpression	code < 0		9012967	0		<			
ANR	9012986	Identifier	code		9012967	0					
ANR	9012987	PrimaryExpression	0		9012967	1					
ANR	9012988	ReturnStatement	return code ;	6644:8:213836:213847	9012967	1	True				
ANR	9012989	Identifier	code		9012967	0					
ANR	9012990	ExpressionStatement	check_estack ( 1 )	6648:4:214007:214022	9012967	3	True				
ANR	9012991	CallExpression	check_estack ( 1 )		9012967	0					
ANR	9012992	Callee	check_estack		9012967	0					
ANR	9012993	Identifier	check_estack		9012967	0					
ANR	9012994	ArgumentList	1		9012967	1					
ANR	9012995	Argument	1		9012967	0					
ANR	9012996	PrimaryExpression	1		9012967	0					
ANR	9012997	ExpressionStatement	push_op_estack ( setstrokecolorspace_cont )	6650:4:214075:214115	9012967	4	True				
ANR	9012998	CallExpression	push_op_estack ( setstrokecolorspace_cont )		9012967	0					
ANR	9012999	Callee	push_op_estack		9012967	0					
ANR	9013000	Identifier	push_op_estack		9012967	0					
ANR	9013001	ArgumentList	setstrokecolorspace_cont		9012967	1					
ANR	9013002	Argument	setstrokecolorspace_cont		9012967	0					
ANR	9013003	Identifier	setstrokecolorspace_cont		9012967	0					
ANR	9013004	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	6652:4:214122:214152	9012967	5	True				
ANR	9013005	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		9012967	0		=			
ANR	9013006	Identifier	code		9012967	0					
ANR	9013007	CallExpression	zsetcolorspace ( i_ctx_p )		9012967	1					
ANR	9013008	Callee	zsetcolorspace		9012967	0					
ANR	9013009	Identifier	zsetcolorspace		9012967	0					
ANR	9013010	ArgumentList	i_ctx_p		9012967	1					
ANR	9013011	Argument	i_ctx_p		9012967	0					
ANR	9013012	Identifier	i_ctx_p		9012967	0					
ANR	9013013	IfStatement	if ( code >= 0 )		9012967	6					
ANR	9013014	Condition	code >= 0	6653:8:214162:214170	9012967	0	True				
ANR	9013015	RelationalExpression	code >= 0		9012967	0		>=			
ANR	9013016	Identifier	code		9012967	0					
ANR	9013017	PrimaryExpression	0		9012967	1					
ANR	9013018	ReturnStatement	return o_push_estack ;	6654:8:214181:214201	9012967	1	True				
ANR	9013019	Identifier	o_push_estack		9012967	0					
ANR	9013020	ReturnStatement	return code ;	6656:4:214208:214219	9012967	7	True				
ANR	9013021	Identifier	code		9012967	0					
ANR	9013022	ReturnType	static int		9012967	1					
ANR	9013023	Identifier	zsetstrokecolorspace		9012967	2					
ANR	9013024	ParameterList	i_ctx_t * i_ctx_p		9012967	3					
ANR	9013025	Parameter	i_ctx_t * i_ctx_p	6638:21:213741:213757	9012967	0	True				
ANR	9013026	ParameterType	i_ctx_t *		9012967	0					
ANR	9013027	Identifier	i_ctx_p		9012967	1					
ANR	9013028	CFGEntryNode	ENTRY		9012967		True				
ANR	9013029	CFGExitNode	EXIT		9012967		True				
ANR	9013030	Symbol	code		9012967						
ANR	9013031	Symbol	i_ctx_p		9012967						
ANR	9013032	Symbol	zsetcolorspace		9012967						
ANR	9013033	Symbol	zswapcolors		9012967						
ANR	9013034	Symbol	setstrokecolorspace_cont		9012967						
ANR	9013035	Symbol	o_push_estack		9012967						
ANR	9013036	DeclStmt									
ANR	9013037	Decl							const op_def	const op_def [ ]	zcolor_op_defs
ANR	9013038	DeclStmt									
ANR	9013039	Decl							const op_def	const op_def [ ]	zcolor_ext_op_defs
ANR	9013040	DeclStmt									
ANR	9013041	Decl							const op_def	const op_def [ ]	zcolor_pdf_op_defs
