command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7684345	File	data/converged/CVE-2018-16863_ghostpdl/openjpeg_src_bin_mj2_meta_out.c								
ANR	7684346	DeclStmt									
ANR	7684347	Decl							BOOL	BOOL	notes
ANR	7684348	DeclStmt									
ANR	7684349	Decl							BOOL	BOOL	sampletables
ANR	7684350	DeclStmt									
ANR	7684351	Decl							BOOL	BOOL	raw
ANR	7684352	DeclStmt									
ANR	7684353	Decl							BOOL	BOOL	derived
ANR	7684354	DeclStmt									
ANR	7684355	Decl							opj_tcp_t	opj_tcp_t *	j2k_default_tcp
ANR	7684356	DeclStmt									
ANR	7684357	Decl							int	"int ( FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_overall_header
ANR	7684358	DeclStmt									
ANR	7684359	Decl							int	"int ( FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_moov
ANR	7684360	DeclStmt									
ANR	7684361	Decl							void	"void ( unsigned int value , char * buf )"	uint_to_chars
ANR	7684362	DeclStmt									
ANR	7684363	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr )"	xml_write_trak
ANR	7684364	DeclStmt									
ANR	7684365	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_tkhd
ANR	7684366	DeclStmt									
ANR	7684367	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_udta
ANR	7684368	DeclStmt									
ANR	7684369	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_mdia
ANR	7684370	DeclStmt									
ANR	7684371	Decl							void	"void ( FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum )"	xml_write_stbl
ANR	7684372	DeclStmt									
ANR	7684373	Decl							void	"void ( time_t t , LPFILETIME pft )"	UnixTimeToFileTime
ANR	7684374	DeclStmt									
ANR	7684375	Decl							void	"void ( time_t t , LPSYSTEMTIME pst )"	UnixTimeToSystemTime
ANR	7684376	DeclStmt									
ANR	7684377	Decl							void	"void ( FILE * xmlout , time_t t )"	xml_time_out
ANR	7684378	DeclStmt									
ANR	7684379	Decl							void	"void ( short int value , char * buf )"	int16_to_3packedchars
ANR	7684380	DeclStmt									
ANR	7684381	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_moov_udta
ANR	7684382	DeclStmt									
ANR	7684383	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_free_and_skip
ANR	7684384	DeclStmt									
ANR	7684385	Decl							void	"void ( FILE * xmlout , opj_mj2_t * movie )"	xml_write_uuid
ANR	7684386	DeclStmt									
ANR	7684387	Decl							int	"int ( FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr )"	xml_out_frame
ANR	7684388	DeclStmt									
ANR	7684389	Decl							void	"void ( FILE * xmlout , opj_image_t * img , opj_cp_t * cp )"	xml_out_frame_siz
ANR	7684390	DeclStmt									
ANR	7684391	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_cod
ANR	7684392	DeclStmt									
ANR	7684393	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_coc
ANR	7684394	DeclStmt									
ANR	7684395	Decl							BOOL	"BOOL ( opj_tccp_t * tccp1 , opj_tccp_t * tccp2 )"	same_component_style
ANR	7684396	DeclStmt									
ANR	7684397	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_qcd
ANR	7684398	DeclStmt									
ANR	7684399	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_qcc
ANR	7684400	DeclStmt									
ANR	7684401	Decl							BOOL	"BOOL ( opj_tccp_t * tccp1 , opj_tccp_t * tccp2 )"	same_component_quantization
ANR	7684402	DeclStmt									
ANR	7684403	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp , int numcomps )"	xml_out_frame_rgn
ANR	7684404	DeclStmt									
ANR	7684405	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_poc
ANR	7684406	DeclStmt									
ANR	7684407	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_ppm
ANR	7684408	DeclStmt									
ANR	7684409	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_ppt
ANR	7684410	DeclStmt									
ANR	7684411	Decl							void	void ( FILE * xmlout )	xml_out_frame_tlm
ANR	7684412	DeclStmt									
ANR	7684413	Decl							void	void ( FILE * xmlout )	xml_out_frame_plm
ANR	7684414	DeclStmt									
ANR	7684415	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_plt
ANR	7684416	DeclStmt									
ANR	7684417	Decl							void	void ( FILE * xmlout )	xml_out_frame_crg
ANR	7684418	DeclStmt									
ANR	7684419	Decl							void	"void ( FILE * xmlout , opj_tcp_t * tcp )"	xml_out_frame_com
ANR	7684420	DeclStmt									
ANR	7684421	Decl							void	"void ( FILE * xmlout , char * data , int data_len , char * s )"	xml_out_dump_hex
ANR	7684422	DeclStmt									
ANR	7684423	Decl							void	"void ( FILE * xmlout , char * data , int data_len , char * s )"	xml_out_dump_hex_and_ascii
ANR	7684424	DeclStmt									
ANR	7684425	Decl							void	"void ( FILE * xmlout , opj_jp2_t * jp2_struct )"	xml_out_frame_jp2h
ANR	7684426	DeclStmt									
ANR	7684427	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_jp2i
ANR	7684428	DeclStmt									
ANR	7684429	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_xml
ANR	7684430	DeclStmt									
ANR	7684431	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_uuid
ANR	7684432	DeclStmt									
ANR	7684433	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_uinf
ANR	7684434	DeclStmt									
ANR	7684435	Decl							void	"void ( FILE * xmlout , opj_cp_t * cp )"	xml_out_frame_unknown_type
ANR	7684436	Function	xml_write_init	104:0:4975:5124							
ANR	7684437	FunctionDef	"xml_write_init (BOOL n , BOOL t , BOOL r , BOOL d)"		7684436	0					
ANR	7684438	CompoundStatement		105:0:5027:5124	7684436	0					
ANR	7684439	ExpressionStatement	notes = n	107:4:5061:5070	7684436	0	True				
ANR	7684440	AssignmentExpression	notes = n		7684436	0		=			
ANR	7684441	Identifier	notes		7684436	0					
ANR	7684442	Identifier	n		7684436	1					
ANR	7684443	ExpressionStatement	sampletables = t	108:4:5076:5092	7684436	1	True				
ANR	7684444	AssignmentExpression	sampletables = t		7684436	0		=			
ANR	7684445	Identifier	sampletables		7684436	0					
ANR	7684446	Identifier	t		7684436	1					
ANR	7684447	ExpressionStatement	raw = r	109:4:5098:5105	7684436	2	True				
ANR	7684448	AssignmentExpression	raw = r		7684436	0		=			
ANR	7684449	Identifier	raw		7684436	0					
ANR	7684450	Identifier	r		7684436	1					
ANR	7684451	ExpressionStatement	derived = d	110:4:5111:5122	7684436	3	True				
ANR	7684452	AssignmentExpression	derived = d		7684436	0		=			
ANR	7684453	Identifier	derived		7684436	0					
ANR	7684454	Identifier	d		7684436	1					
ANR	7684455	ReturnType	void		7684436	1					
ANR	7684456	Identifier	xml_write_init		7684436	2					
ANR	7684457	ParameterList	"BOOL n , BOOL t , BOOL r , BOOL d"		7684436	3					
ANR	7684458	Parameter	BOOL n	104:20:4995:5000	7684436	0	True				
ANR	7684459	ParameterType	BOOL		7684436	0					
ANR	7684460	Identifier	n		7684436	1					
ANR	7684461	Parameter	BOOL t	104:28:5003:5008	7684436	1	True				
ANR	7684462	ParameterType	BOOL		7684436	0					
ANR	7684463	Identifier	t		7684436	1					
ANR	7684464	Parameter	BOOL r	104:36:5011:5016	7684436	2	True				
ANR	7684465	ParameterType	BOOL		7684436	0					
ANR	7684466	Identifier	r		7684436	1					
ANR	7684467	Parameter	BOOL d	104:44:5019:5024	7684436	3	True				
ANR	7684468	ParameterType	BOOL		7684436	0					
ANR	7684469	Identifier	d		7684436	1					
ANR	7684470	CFGEntryNode	ENTRY		7684436		True				
ANR	7684471	CFGExitNode	EXIT		7684436		True				
ANR	7684472	Symbol	r		7684436						
ANR	7684473	Symbol	notes		7684436						
ANR	7684474	Symbol	t		7684436						
ANR	7684475	Symbol	d		7684436						
ANR	7684476	Symbol	sampletables		7684436						
ANR	7684477	Symbol	raw		7684436						
ANR	7684478	Symbol	derived		7684436						
ANR	7684479	Symbol	n		7684436						
ANR	7684480	Function	xml_write_struct	113:0:5127:6040							
ANR	7684481	FunctionDef	"xml_write_struct (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , char * stringDTD , opj_event_mgr_t * event_mgr)"		7684480	0					
ANR	7684482	CompoundStatement		115:0:5285:6040	7684480	0					
ANR	7684483	IfStatement	if ( stringDTD != NULL )		7684480	0					
ANR	7684484	Condition	stringDTD != NULL	117:8:5296:5312	7684480	0	True				
ANR	7684485	EqualityExpression	stringDTD != NULL		7684480	0		!=			
ANR	7684486	Identifier	stringDTD		7684480	0					
ANR	7684487	Identifier	NULL		7684480	1					
ANR	7684488	CompoundStatement		3:27:29:29	7684480	1					
ANR	7684489	ExpressionStatement	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"" )"	118:8:5325:5387	7684480	0	True				
ANR	7684490	CallExpression	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"" )"		7684480	0					
ANR	7684491	Callee	fprintf		7684480	0					
ANR	7684492	Identifier	fprintf		7684480	0					
ANR	7684493	ArgumentList	xmlout		7684480	1					
ANR	7684494	Argument	xmlout		7684480	0					
ANR	7684495	Identifier	xmlout		7684480	0					
ANR	7684496	Argument	"""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"""		7684480	1					
ANR	7684497	PrimaryExpression	"""<?xml version=\\""1.0\\"" standalone=\\""no\\""?>\\n"""		7684480	0					
ANR	7684498	ExpressionStatement	stringDTD [ 6 ] = '\\0'	121:8:5517:5548	7684480	1	True				
ANR	7684499	AssignmentExpression	stringDTD [ 6 ] = '\\0'		7684480	0		=			
ANR	7684500	ArrayIndexing	stringDTD [ 6 ]		7684480	0					
ANR	7684501	Identifier	stringDTD		7684480	0					
ANR	7684502	PrimaryExpression	6		7684480	1					
ANR	7684503	PrimaryExpression	'\\0'		7684480	1					
ANR	7684504	ExpressionStatement	"fprintf ( xmlout , ""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"" , stringDTD , stringDTD + 7 )"	123:8:5624:5700	7684480	2	True				
ANR	7684505	CallExpression	"fprintf ( xmlout , ""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"" , stringDTD , stringDTD + 7 )"		7684480	0					
ANR	7684506	Callee	fprintf		7684480	0					
ANR	7684507	Identifier	fprintf		7684480	0					
ANR	7684508	ArgumentList	xmlout		7684480	1					
ANR	7684509	Argument	xmlout		7684480	0					
ANR	7684510	Identifier	xmlout		7684480	0					
ANR	7684511	Argument	"""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"""		7684480	1					
ANR	7684512	PrimaryExpression	"""<!DOCTYPE MJ2_File %s \\""%s\\"">\\n"""		7684480	0					
ANR	7684513	Argument	stringDTD		7684480	2					
ANR	7684514	Identifier	stringDTD		7684480	0					
ANR	7684515	Argument	stringDTD + 7		7684480	3					
ANR	7684516	AdditiveExpression	stringDTD + 7		7684480	0		+			
ANR	7684517	Identifier	stringDTD		7684480	0					
ANR	7684518	PrimaryExpression	7		7684480	1					
ANR	7684519	ExpressionStatement	stringDTD [ 6 ] = ' '	124:8:5710:5728	7684480	3	True				
ANR	7684520	AssignmentExpression	stringDTD [ 6 ] = ' '		7684480	0		=			
ANR	7684521	ArrayIndexing	stringDTD [ 6 ]		7684480	0					
ANR	7684522	Identifier	stringDTD		7684480	0					
ANR	7684523	PrimaryExpression	6		7684480	1					
ANR	7684524	PrimaryExpression	' '		7684480	1					
ANR	7684525	ElseStatement	else		7684480	0					
ANR	7684526	CompoundStatement		11:11:510:510	7684480	0					
ANR	7684527	ExpressionStatement	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"" )"	126:8:5806:5869	7684480	0	True				
ANR	7684528	CallExpression	"fprintf ( xmlout , ""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"" )"		7684480	0					
ANR	7684529	Callee	fprintf		7684480	0					
ANR	7684530	Identifier	fprintf		7684480	0					
ANR	7684531	ArgumentList	xmlout		7684480	1					
ANR	7684532	Argument	xmlout		7684480	0					
ANR	7684533	Identifier	xmlout		7684480	0					
ANR	7684534	Argument	"""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"""		7684480	1					
ANR	7684535	PrimaryExpression	"""<?xml version=\\""1.0\\"" standalone=\\""yes\\""?>\\n"""		7684480	0					
ANR	7684536	ExpressionStatement	"fprintf ( xmlout , ""<MJ2_File>\\n"" )"	129:4:5882:5913	7684480	1	True				
ANR	7684537	CallExpression	"fprintf ( xmlout , ""<MJ2_File>\\n"" )"		7684480	0					
ANR	7684538	Callee	fprintf		7684480	0					
ANR	7684539	Identifier	fprintf		7684480	0					
ANR	7684540	ArgumentList	xmlout		7684480	1					
ANR	7684541	Argument	xmlout		7684480	0					
ANR	7684542	Identifier	xmlout		7684480	0					
ANR	7684543	Argument	"""<MJ2_File>\\n"""		7684480	1					
ANR	7684544	PrimaryExpression	"""<MJ2_File>\\n"""		7684480	0					
ANR	7684545	ExpressionStatement	"xml_write_overall_header ( file , xmlout , movie , sampleframe , event_mgr )"	130:4:5919:5988	7684480	2	True				
ANR	7684546	CallExpression	"xml_write_overall_header ( file , xmlout , movie , sampleframe , event_mgr )"		7684480	0					
ANR	7684547	Callee	xml_write_overall_header		7684480	0					
ANR	7684548	Identifier	xml_write_overall_header		7684480	0					
ANR	7684549	ArgumentList	file		7684480	1					
ANR	7684550	Argument	file		7684480	0					
ANR	7684551	Identifier	file		7684480	0					
ANR	7684552	Argument	xmlout		7684480	1					
ANR	7684553	Identifier	xmlout		7684480	0					
ANR	7684554	Argument	movie		7684480	2					
ANR	7684555	Identifier	movie		7684480	0					
ANR	7684556	Argument	sampleframe		7684480	3					
ANR	7684557	Identifier	sampleframe		7684480	0					
ANR	7684558	Argument	event_mgr		7684480	4					
ANR	7684559	Identifier	event_mgr		7684480	0					
ANR	7684560	ExpressionStatement	"fprintf ( xmlout , ""</MJ2_File>"" )"	131:4:5994:6024	7684480	3	True				
ANR	7684561	CallExpression	"fprintf ( xmlout , ""</MJ2_File>"" )"		7684480	0					
ANR	7684562	Callee	fprintf		7684480	0					
ANR	7684563	Identifier	fprintf		7684480	0					
ANR	7684564	ArgumentList	xmlout		7684480	1					
ANR	7684565	Argument	xmlout		7684480	0					
ANR	7684566	Identifier	xmlout		7684480	0					
ANR	7684567	Argument	"""</MJ2_File>"""		7684480	1					
ANR	7684568	PrimaryExpression	"""</MJ2_File>"""		7684480	0					
ANR	7684569	ReturnStatement	return 0 ;	132:4:6030:6038	7684480	4	True				
ANR	7684570	PrimaryExpression	0		7684480	0					
ANR	7684571	ReturnType	int		7684480	1					
ANR	7684572	Identifier	xml_write_struct		7684480	2					
ANR	7684573	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , char * stringDTD , opj_event_mgr_t * event_mgr"		7684480	3					
ANR	7684574	Parameter	FILE * file	113:21:5148:5157	7684480	0	True				
ANR	7684575	ParameterType	FILE *		7684480	0					
ANR	7684576	Identifier	file		7684480	1					
ANR	7684577	Parameter	FILE * xmlout	113:33:5160:5171	7684480	1	True				
ANR	7684578	ParameterType	FILE *		7684480	0					
ANR	7684579	Identifier	xmlout		7684480	1					
ANR	7684580	Parameter	opj_mj2_t * movie	113:47:5174:5190	7684480	2	True				
ANR	7684581	ParameterType	opj_mj2_t *		7684480	0					
ANR	7684582	Identifier	movie		7684480	1					
ANR	7684583	Parameter	unsigned int sampleframe	114:21:5214:5237	7684480	3	True				
ANR	7684584	ParameterType	unsigned int		7684480	0					
ANR	7684585	Identifier	sampleframe		7684480	1					
ANR	7684586	Parameter	char * stringDTD	114:47:5240:5254	7684480	4	True				
ANR	7684587	ParameterType	char *		7684480	0					
ANR	7684588	Identifier	stringDTD		7684480	1					
ANR	7684589	Parameter	opj_event_mgr_t * event_mgr	114:64:5257:5282	7684480	5	True				
ANR	7684590	ParameterType	opj_event_mgr_t *		7684480	0					
ANR	7684591	Identifier	event_mgr		7684480	1					
ANR	7684592	CFGEntryNode	ENTRY		7684480		True				
ANR	7684593	CFGExitNode	EXIT		7684480		True				
ANR	7684594	Symbol	file		7684480						
ANR	7684595	Symbol	NULL		7684480						
ANR	7684596	Symbol	movie		7684480						
ANR	7684597	Symbol	stringDTD		7684480						
ANR	7684598	Symbol	sampleframe		7684480						
ANR	7684599	Symbol	event_mgr		7684480						
ANR	7684600	Symbol	* stringDTD		7684480						
ANR	7684601	Symbol	xmlout		7684480						
ANR	7684602	Function	xml_write_overall_header	137:0:6064:7881							
ANR	7684603	FunctionDef	"xml_write_overall_header (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		7684602	0					
ANR	7684604	CompoundStatement		139:0:6221:7881	7684602	0					
ANR	7684605	IdentifierDeclStatement	int i ;	140:4:6227:6232	7684602	0	True				
ANR	7684606	IdentifierDecl	i		7684602	0					
ANR	7684607	IdentifierDeclType	int		7684602	0					
ANR	7684608	Identifier	i		7684602	1					
ANR	7684609	IdentifierDeclStatement	char buf [ 5 ] ;	141:4:6238:6249	7684602	1	True				
ANR	7684610	IdentifierDecl	buf [ 5 ]		7684602	0					
ANR	7684611	IdentifierDeclType	char [ 5 ]		7684602	0					
ANR	7684612	Identifier	buf		7684602	1					
ANR	7684613	PrimaryExpression	5		7684602	2					
ANR	7684614	ExpressionStatement	buf [ 4 ] = '\\0'	142:4:6255:6268	7684602	2	True				
ANR	7684615	AssignmentExpression	buf [ 4 ] = '\\0'		7684602	0		=			
ANR	7684616	ArrayIndexing	buf [ 4 ]		7684602	0					
ANR	7684617	Identifier	buf		7684602	0					
ANR	7684618	PrimaryExpression	4		7684602	1					
ANR	7684619	PrimaryExpression	'\\0'		7684602	1					
ANR	7684620	ExpressionStatement	"fprintf ( xmlout , ""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"" )"	144:4:6275:6371	7684602	3	True				
ANR	7684621	CallExpression	"fprintf ( xmlout , ""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"" )"		7684602	0					
ANR	7684622	Callee	fprintf		7684602	0					
ANR	7684623	Identifier	fprintf		7684602	0					
ANR	7684624	ArgumentList	xmlout		7684602	1					
ANR	7684625	Argument	xmlout		7684602	0					
ANR	7684626	Identifier	xmlout		7684602	0					
ANR	7684627	Argument	"""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"""		7684602	1					
ANR	7684628	PrimaryExpression	"""  <JP2 BoxType=\\""jP[space][space]\\"" Signature=\\""0x0d0a870a\\"" />\\n"""		7684602	0					
ANR	7684629	ExpressionStatement	"fprintf ( xmlout , ""  <FileType BoxType=\\""ftyp\\"">\\n"" )"	147:4:6436:6488	7684602	4	True				
ANR	7684630	CallExpression	"fprintf ( xmlout , ""  <FileType BoxType=\\""ftyp\\"">\\n"" )"		7684602	0					
ANR	7684631	Callee	fprintf		7684602	0					
ANR	7684632	Identifier	fprintf		7684602	0					
ANR	7684633	ArgumentList	xmlout		7684602	1					
ANR	7684634	Argument	xmlout		7684602	0					
ANR	7684635	Identifier	xmlout		7684602	0					
ANR	7684636	Argument	"""  <FileType BoxType=\\""ftyp\\"">\\n"""		7684602	1					
ANR	7684637	PrimaryExpression	"""  <FileType BoxType=\\""ftyp\\"">\\n"""		7684602	0					
ANR	7684638	ExpressionStatement	"uint_to_chars ( movie -> brand , buf )"	148:4:6494:6526	7684602	5	True				
ANR	7684639	CallExpression	"uint_to_chars ( movie -> brand , buf )"		7684602	0					
ANR	7684640	Callee	uint_to_chars		7684602	0					
ANR	7684641	Identifier	uint_to_chars		7684602	0					
ANR	7684642	ArgumentList	movie -> brand		7684602	1					
ANR	7684643	Argument	movie -> brand		7684602	0					
ANR	7684644	PtrMemberAccess	movie -> brand		7684602	0					
ANR	7684645	Identifier	movie		7684602	0					
ANR	7684646	Identifier	brand		7684602	1					
ANR	7684647	Argument	buf		7684602	1					
ANR	7684648	Identifier	buf		7684602	0					
ANR	7684649	ExpressionStatement	"fprintf ( xmlout , ""    <Brand>%s</Brand>\\n"" , buf )"	149:4:6532:6593	7684602	6	True				
ANR	7684650	CallExpression	"fprintf ( xmlout , ""    <Brand>%s</Brand>\\n"" , buf )"		7684602	0					
ANR	7684651	Callee	fprintf		7684602	0					
ANR	7684652	Identifier	fprintf		7684602	0					
ANR	7684653	ArgumentList	xmlout		7684602	1					
ANR	7684654	Argument	xmlout		7684602	0					
ANR	7684655	Identifier	xmlout		7684602	0					
ANR	7684656	Argument	"""    <Brand>%s</Brand>\\n"""		7684602	1					
ANR	7684657	PrimaryExpression	"""    <Brand>%s</Brand>\\n"""		7684602	0					
ANR	7684658	Argument	buf		7684602	2					
ANR	7684659	Identifier	buf		7684602	0					
ANR	7684660	ExpressionStatement	"fprintf ( xmlout , ""    <MinorVersion>%u</MinorVersion>\\n"" , movie -> minversion )"	151:4:6637:6726	7684602	7	True				
ANR	7684661	CallExpression	"fprintf ( xmlout , ""    <MinorVersion>%u</MinorVersion>\\n"" , movie -> minversion )"		7684602	0					
ANR	7684662	Callee	fprintf		7684602	0					
ANR	7684663	Identifier	fprintf		7684602	0					
ANR	7684664	ArgumentList	xmlout		7684602	1					
ANR	7684665	Argument	xmlout		7684602	0					
ANR	7684666	Identifier	xmlout		7684602	0					
ANR	7684667	Argument	"""    <MinorVersion>%u</MinorVersion>\\n"""		7684602	1					
ANR	7684668	PrimaryExpression	"""    <MinorVersion>%u</MinorVersion>\\n"""		7684602	0					
ANR	7684669	Argument	movie -> minversion		7684602	2					
ANR	7684670	PtrMemberAccess	movie -> minversion		7684602	0					
ANR	7684671	Identifier	movie		7684602	0					
ANR	7684672	Identifier	minversion		7684602	1					
ANR	7684673	ExpressionStatement	"fprintf ( xmlout , ""    <CompatibilityList Count=\\""%d\\"">\\n"" , movie -> num_cl )"	153:4:6765:6839	7684602	8	True				
ANR	7684674	CallExpression	"fprintf ( xmlout , ""    <CompatibilityList Count=\\""%d\\"">\\n"" , movie -> num_cl )"		7684602	0					
ANR	7684675	Callee	fprintf		7684602	0					
ANR	7684676	Identifier	fprintf		7684602	0					
ANR	7684677	ArgumentList	xmlout		7684602	1					
ANR	7684678	Argument	xmlout		7684602	0					
ANR	7684679	Identifier	xmlout		7684602	0					
ANR	7684680	Argument	"""    <CompatibilityList Count=\\""%d\\"">\\n"""		7684602	1					
ANR	7684681	PrimaryExpression	"""    <CompatibilityList Count=\\""%d\\"">\\n"""		7684602	0					
ANR	7684682	Argument	movie -> num_cl		7684602	2					
ANR	7684683	PtrMemberAccess	movie -> num_cl		7684602	0					
ANR	7684684	Identifier	movie		7684602	0					
ANR	7684685	Identifier	num_cl		7684602	1					
ANR	7684686	ForStatement	for ( i = movie -> num_cl - 1 ; i > - 1 ; i -- )		7684602	9					
ANR	7684687	ForInit	i = movie -> num_cl - 1 ;	154:9:6850:6871	7684602	0	True				
ANR	7684688	AssignmentExpression	i = movie -> num_cl - 1		7684602	0		=			
ANR	7684689	Identifier	i		7684602	0					
ANR	7684690	AdditiveExpression	movie -> num_cl - 1		7684602	1		-			
ANR	7684691	PtrMemberAccess	movie -> num_cl		7684602	0					
ANR	7684692	Identifier	movie		7684602	0					
ANR	7684693	Identifier	num_cl		7684602	1					
ANR	7684694	PrimaryExpression	1		7684602	1					
ANR	7684695	Condition	i > - 1	154:32:6873:6878	7684602	1	True				
ANR	7684696	RelationalExpression	i > - 1		7684602	0		>			
ANR	7684697	Identifier	i		7684602	0					
ANR	7684698	UnaryOperationExpression	- 1		7684602	1					
ANR	7684699	UnaryOperator	-		7684602	0					
ANR	7684700	PrimaryExpression	1		7684602	1					
ANR	7684701	PostIncDecOperationExpression	i --	155:12:6893:6895	7684602	2	True				
ANR	7684702	Identifier	i		7684602	0					
ANR	7684703	IncDec	--		7684602	1					
ANR	7684704	CompoundStatement		17:17:676:676	7684602	3					
ANR	7684705	ExpressionStatement	"uint_to_chars ( movie -> cl [ i ] , buf )"	156:8:6973:7005	7684602	0	True				
ANR	7684706	CallExpression	"uint_to_chars ( movie -> cl [ i ] , buf )"		7684602	0					
ANR	7684707	Callee	uint_to_chars		7684602	0					
ANR	7684708	Identifier	uint_to_chars		7684602	0					
ANR	7684709	ArgumentList	movie -> cl [ i ]		7684602	1					
ANR	7684710	Argument	movie -> cl [ i ]		7684602	0					
ANR	7684711	ArrayIndexing	movie -> cl [ i ]		7684602	0					
ANR	7684712	PtrMemberAccess	movie -> cl		7684602	0					
ANR	7684713	Identifier	movie		7684602	0					
ANR	7684714	Identifier	cl		7684602	1					
ANR	7684715	Identifier	i		7684602	1					
ANR	7684716	Argument	buf		7684602	1					
ANR	7684717	Identifier	buf		7684602	0					
ANR	7684718	ExpressionStatement	"fprintf ( xmlout , ""      <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"	157:8:7015:7100	7684602	1	True				
ANR	7684719	CallExpression	"fprintf ( xmlout , ""      <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"		7684602	0					
ANR	7684720	Callee	fprintf		7684602	0					
ANR	7684721	Identifier	fprintf		7684602	0					
ANR	7684722	ArgumentList	xmlout		7684602	1					
ANR	7684723	Argument	xmlout		7684602	0					
ANR	7684724	Identifier	xmlout		7684602	0					
ANR	7684725	Argument	"""      <CompatibleBrand>%s</CompatibleBrand>\\n"""		7684602	1					
ANR	7684726	PrimaryExpression	"""      <CompatibleBrand>%s</CompatibleBrand>\\n"""		7684602	0					
ANR	7684727	Argument	buf		7684602	2					
ANR	7684728	Identifier	buf		7684602	0					
ANR	7684729	ExpressionStatement	"fprintf ( xmlout , ""    </CompatibilityList>\\n"" )"	160:4:7143:7190	7684602	10	True				
ANR	7684730	CallExpression	"fprintf ( xmlout , ""    </CompatibilityList>\\n"" )"		7684602	0					
ANR	7684731	Callee	fprintf		7684602	0					
ANR	7684732	Identifier	fprintf		7684602	0					
ANR	7684733	ArgumentList	xmlout		7684602	1					
ANR	7684734	Argument	xmlout		7684602	0					
ANR	7684735	Identifier	xmlout		7684602	0					
ANR	7684736	Argument	"""    </CompatibilityList>\\n"""		7684602	1					
ANR	7684737	PrimaryExpression	"""    </CompatibilityList>\\n"""		7684602	0					
ANR	7684738	ExpressionStatement	"fprintf ( xmlout , ""  </FileType>\\n"" )"	161:4:7196:7232	7684602	11	True				
ANR	7684739	CallExpression	"fprintf ( xmlout , ""  </FileType>\\n"" )"		7684602	0					
ANR	7684740	Callee	fprintf		7684602	0					
ANR	7684741	Identifier	fprintf		7684602	0					
ANR	7684742	ArgumentList	xmlout		7684602	1					
ANR	7684743	Argument	xmlout		7684602	0					
ANR	7684744	Identifier	xmlout		7684602	0					
ANR	7684745	Argument	"""  </FileType>\\n"""		7684602	1					
ANR	7684746	PrimaryExpression	"""  </FileType>\\n"""		7684602	0					
ANR	7684747	ExpressionStatement	"xml_write_moov ( file , xmlout , movie , sampleframe , event_mgr )"	162:4:7238:7297	7684602	12	True				
ANR	7684748	CallExpression	"xml_write_moov ( file , xmlout , movie , sampleframe , event_mgr )"		7684602	0					
ANR	7684749	Callee	xml_write_moov		7684602	0					
ANR	7684750	Identifier	xml_write_moov		7684602	0					
ANR	7684751	ArgumentList	file		7684602	1					
ANR	7684752	Argument	file		7684602	0					
ANR	7684753	Identifier	file		7684602	0					
ANR	7684754	Argument	xmlout		7684602	1					
ANR	7684755	Identifier	xmlout		7684602	0					
ANR	7684756	Argument	movie		7684602	2					
ANR	7684757	Identifier	movie		7684602	0					
ANR	7684758	Argument	sampleframe		7684602	3					
ANR	7684759	Identifier	sampleframe		7684602	0					
ANR	7684760	Argument	event_mgr		7684602	4					
ANR	7684761	Identifier	event_mgr		7684602	0					
ANR	7684762	ExpressionStatement	"xml_write_free_and_skip ( xmlout , movie )"	166:4:7605:7671	7684602	13	True				
ANR	7684763	CallExpression	"xml_write_free_and_skip ( xmlout , movie )"		7684602	0					
ANR	7684764	Callee	xml_write_free_and_skip		7684602	0					
ANR	7684765	Identifier	xml_write_free_and_skip		7684602	0					
ANR	7684766	ArgumentList	xmlout		7684602	1					
ANR	7684767	Argument	xmlout		7684602	0					
ANR	7684768	Identifier	xmlout		7684602	0					
ANR	7684769	Argument	movie		7684602	1					
ANR	7684770	Identifier	movie		7684602	0					
ANR	7684771	ExpressionStatement	"xml_write_uuid ( xmlout , movie )"	168:4:7747:7795	7684602	14	True				
ANR	7684772	CallExpression	"xml_write_uuid ( xmlout , movie )"		7684602	0					
ANR	7684773	Callee	xml_write_uuid		7684602	0					
ANR	7684774	Identifier	xml_write_uuid		7684602	0					
ANR	7684775	ArgumentList	xmlout		7684602	1					
ANR	7684776	Argument	xmlout		7684602	0					
ANR	7684777	Identifier	xmlout		7684602	0					
ANR	7684778	Argument	movie		7684602	1					
ANR	7684779	Identifier	movie		7684602	0					
ANR	7684780	ReturnStatement	return 0 ;	170:4:7871:7879	7684602	15	True				
ANR	7684781	PrimaryExpression	0		7684602	0					
ANR	7684782	ReturnType	int		7684602	1					
ANR	7684783	Identifier	xml_write_overall_header		7684602	2					
ANR	7684784	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		7684602	3					
ANR	7684785	Parameter	FILE * file	137:29:6093:6102	7684602	0	True				
ANR	7684786	ParameterType	FILE *		7684602	0					
ANR	7684787	Identifier	file		7684602	1					
ANR	7684788	Parameter	FILE * xmlout	137:41:6105:6116	7684602	1	True				
ANR	7684789	ParameterType	FILE *		7684602	0					
ANR	7684790	Identifier	xmlout		7684602	1					
ANR	7684791	Parameter	opj_mj2_t * movie	137:55:6119:6135	7684602	2	True				
ANR	7684792	ParameterType	opj_mj2_t *		7684602	0					
ANR	7684793	Identifier	movie		7684602	1					
ANR	7684794	Parameter	unsigned int sampleframe	138:29:6167:6190	7684602	3	True				
ANR	7684795	ParameterType	unsigned int		7684602	0					
ANR	7684796	Identifier	sampleframe		7684602	1					
ANR	7684797	Parameter	opj_event_mgr_t * event_mgr	138:55:6193:6218	7684602	4	True				
ANR	7684798	ParameterType	opj_event_mgr_t *		7684602	0					
ANR	7684799	Identifier	event_mgr		7684602	1					
ANR	7684800	CFGEntryNode	ENTRY		7684602		True				
ANR	7684801	CFGExitNode	EXIT		7684602		True				
ANR	7684802	Symbol	* buf		7684602						
ANR	7684803	Symbol	movie		7684602						
ANR	7684804	Symbol	sampleframe		7684602						
ANR	7684805	Symbol	i		7684602						
ANR	7684806	Symbol	movie -> brand		7684602						
ANR	7684807	Symbol	* movie -> cl		7684602						
ANR	7684808	Symbol	movie -> minversion		7684602						
ANR	7684809	Symbol	movie -> cl		7684602						
ANR	7684810	Symbol	xmlout		7684602						
ANR	7684811	Symbol	* movie		7684602						
ANR	7684812	Symbol	movie -> num_cl		7684602						
ANR	7684813	Symbol	* * movie		7684602						
ANR	7684814	Symbol	buf		7684602						
ANR	7684815	Symbol	file		7684602						
ANR	7684816	Symbol	* i		7684602						
ANR	7684817	Symbol	event_mgr		7684602						
ANR	7684818	Function	xml_write_moov	175:0:7905:14563							
ANR	7684819	FunctionDef	"xml_write_moov (FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		7684818	0					
ANR	7684820	CompoundStatement		177:0:8042:14563	7684818	0					
ANR	7684821	IdentifierDeclStatement	unsigned int tnum ;	178:4:8048:8065	7684818	0	True				
ANR	7684822	IdentifierDecl	tnum		7684818	0					
ANR	7684823	IdentifierDeclType	unsigned int		7684818	0					
ANR	7684824	Identifier	tnum		7684818	1					
ANR	7684825	IdentifierDeclStatement	mj2_tk_t * track ;	179:4:8071:8086	7684818	1	True				
ANR	7684826	IdentifierDecl	* track		7684818	0					
ANR	7684827	IdentifierDeclType	mj2_tk_t *		7684818	0					
ANR	7684828	Identifier	track		7684818	1					
ANR	7684829	ExpressionStatement	"fprintf ( xmlout , ""  <MovieBox BoxType=\\""moov\\"">\\n"" )"	181:4:8093:8145	7684818	2	True				
ANR	7684830	CallExpression	"fprintf ( xmlout , ""  <MovieBox BoxType=\\""moov\\"">\\n"" )"		7684818	0					
ANR	7684831	Callee	fprintf		7684818	0					
ANR	7684832	Identifier	fprintf		7684818	0					
ANR	7684833	ArgumentList	xmlout		7684818	1					
ANR	7684834	Argument	xmlout		7684818	0					
ANR	7684835	Identifier	xmlout		7684818	0					
ANR	7684836	Argument	"""  <MovieBox BoxType=\\""moov\\"">\\n"""		7684818	1					
ANR	7684837	PrimaryExpression	"""  <MovieBox BoxType=\\""moov\\"">\\n"""		7684818	0					
ANR	7684838	ExpressionStatement	"fprintf ( xmlout , ""    <MovieHeader BoxType=\\""mvhd\\"">\\n"" )"	182:4:8151:8208	7684818	3	True				
ANR	7684839	CallExpression	"fprintf ( xmlout , ""    <MovieHeader BoxType=\\""mvhd\\"">\\n"" )"		7684818	0					
ANR	7684840	Callee	fprintf		7684818	0					
ANR	7684841	Identifier	fprintf		7684818	0					
ANR	7684842	ArgumentList	xmlout		7684818	1					
ANR	7684843	Argument	xmlout		7684818	0					
ANR	7684844	Identifier	xmlout		7684818	0					
ANR	7684845	Argument	"""    <MovieHeader BoxType=\\""mvhd\\"">\\n"""		7684818	1					
ANR	7684846	PrimaryExpression	"""    <MovieHeader BoxType=\\""mvhd\\"">\\n"""		7684818	0					
ANR	7684847	ExpressionStatement	"fprintf ( xmlout , ""      <CreationTime>\\n"" )"	183:4:8214:8257	7684818	4	True				
ANR	7684848	CallExpression	"fprintf ( xmlout , ""      <CreationTime>\\n"" )"		7684818	0					
ANR	7684849	Callee	fprintf		7684818	0					
ANR	7684850	Identifier	fprintf		7684818	0					
ANR	7684851	ArgumentList	xmlout		7684818	1					
ANR	7684852	Argument	xmlout		7684818	0					
ANR	7684853	Identifier	xmlout		7684818	0					
ANR	7684854	Argument	"""      <CreationTime>\\n"""		7684818	1					
ANR	7684855	PrimaryExpression	"""      <CreationTime>\\n"""		7684818	0					
ANR	7684856	IfStatement	if ( raw )		7684818	5					
ANR	7684857	Condition	raw	184:8:8267:8269	7684818	0	True				
ANR	7684858	Identifier	raw		7684818	0					
ANR	7684859	CompoundStatement		8:13:229:229	7684818	1					
ANR	7684860	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> creation_time )"	185:8:8282:8358	7684818	0	True				
ANR	7684861	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> creation_time )"		7684818	0					
ANR	7684862	Callee	fprintf		7684818	0					
ANR	7684863	Identifier	fprintf		7684818	0					
ANR	7684864	ArgumentList	xmlout		7684818	1					
ANR	7684865	Argument	xmlout		7684818	0					
ANR	7684866	Identifier	xmlout		7684818	0					
ANR	7684867	Argument	"""        <InSeconds>%u</InSeconds>\\n"""		7684818	1					
ANR	7684868	PrimaryExpression	"""        <InSeconds>%u</InSeconds>\\n"""		7684818	0					
ANR	7684869	Argument	movie -> creation_time		7684818	2					
ANR	7684870	PtrMemberAccess	movie -> creation_time		7684818	0					
ANR	7684871	Identifier	movie		7684818	0					
ANR	7684872	Identifier	creation_time		7684818	1					
ANR	7684873	IfStatement	if ( notes )		7684818	6					
ANR	7684874	Condition	notes	187:8:8374:8378	7684818	0	True				
ANR	7684875	Identifier	notes		7684818	0					
ANR	7684876	CompoundStatement		11:15:338:338	7684818	1					
ANR	7684877	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"	188:8:8391:8496	7684818	0	True				
ANR	7684878	CallExpression	"fprintf ( xmlout , ""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"		7684818	0					
ANR	7684879	Callee	fprintf		7684818	0					
ANR	7684880	Identifier	fprintf		7684818	0					
ANR	7684881	ArgumentList	xmlout		7684818	1					
ANR	7684882	Argument	xmlout		7684818	0					
ANR	7684883	Identifier	xmlout		7684818	0					
ANR	7684884	Argument	"""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		7684818	1					
ANR	7684885	PrimaryExpression	"""        <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		7684818	0					
ANR	7684886	IfStatement	if ( derived )		7684818	7					
ANR	7684887	Condition	derived	194:8:8713:8719	7684818	0	True				
ANR	7684888	Identifier	derived		7684818	0					
ANR	7684889	CompoundStatement		18:17:679:679	7684818	1					
ANR	7684890	ExpressionStatement	"fprintf ( xmlout , ""        <AsLocalTime>"" )"	195:8:8732:8772	7684818	0	True				
ANR	7684891	CallExpression	"fprintf ( xmlout , ""        <AsLocalTime>"" )"		7684818	0					
ANR	7684892	Callee	fprintf		7684818	0					
ANR	7684893	Identifier	fprintf		7684818	0					
ANR	7684894	ArgumentList	xmlout		7684818	1					
ANR	7684895	Argument	xmlout		7684818	0					
ANR	7684896	Identifier	xmlout		7684818	0					
ANR	7684897	Argument	"""        <AsLocalTime>"""		7684818	1					
ANR	7684898	PrimaryExpression	"""        <AsLocalTime>"""		7684818	0					
ANR	7684899	ExpressionStatement	"xml_time_out ( xmlout , movie -> creation_time - 2082844800 )"	196:8:8782:8837	7684818	1	True				
ANR	7684900	CallExpression	"xml_time_out ( xmlout , movie -> creation_time - 2082844800 )"		7684818	0					
ANR	7684901	Callee	xml_time_out		7684818	0					
ANR	7684902	Identifier	xml_time_out		7684818	0					
ANR	7684903	ArgumentList	xmlout		7684818	1					
ANR	7684904	Argument	xmlout		7684818	0					
ANR	7684905	Identifier	xmlout		7684818	0					
ANR	7684906	Argument	movie -> creation_time - 2082844800		7684818	1					
ANR	7684907	AdditiveExpression	movie -> creation_time - 2082844800		7684818	0		-			
ANR	7684908	PtrMemberAccess	movie -> creation_time		7684818	0					
ANR	7684909	Identifier	movie		7684818	0					
ANR	7684910	Identifier	creation_time		7684818	1					
ANR	7684911	PrimaryExpression	2082844800		7684818	1					
ANR	7684912	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	197:8:8847:8882	7684818	2	True				
ANR	7684913	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		7684818	0					
ANR	7684914	Callee	fprintf		7684818	0					
ANR	7684915	Identifier	fprintf		7684818	0					
ANR	7684916	ArgumentList	xmlout		7684818	1					
ANR	7684917	Argument	xmlout		7684818	0					
ANR	7684918	Identifier	xmlout		7684818	0					
ANR	7684919	Argument	"""</AsLocalTime>\\n"""		7684818	1					
ANR	7684920	PrimaryExpression	"""</AsLocalTime>\\n"""		7684818	0					
ANR	7684921	ExpressionStatement	"fprintf ( xmlout , ""      </CreationTime>\\n"" )"	199:4:8894:8938	7684818	8	True				
ANR	7684922	CallExpression	"fprintf ( xmlout , ""      </CreationTime>\\n"" )"		7684818	0					
ANR	7684923	Callee	fprintf		7684818	0					
ANR	7684924	Identifier	fprintf		7684818	0					
ANR	7684925	ArgumentList	xmlout		7684818	1					
ANR	7684926	Argument	xmlout		7684818	0					
ANR	7684927	Identifier	xmlout		7684818	0					
ANR	7684928	Argument	"""      </CreationTime>\\n"""		7684818	1					
ANR	7684929	PrimaryExpression	"""      </CreationTime>\\n"""		7684818	0					
ANR	7684930	ExpressionStatement	"fprintf ( xmlout , ""      <ModificationTime>\\n"" )"	200:4:8944:8991	7684818	9	True				
ANR	7684931	CallExpression	"fprintf ( xmlout , ""      <ModificationTime>\\n"" )"		7684818	0					
ANR	7684932	Callee	fprintf		7684818	0					
ANR	7684933	Identifier	fprintf		7684818	0					
ANR	7684934	ArgumentList	xmlout		7684818	1					
ANR	7684935	Argument	xmlout		7684818	0					
ANR	7684936	Identifier	xmlout		7684818	0					
ANR	7684937	Argument	"""      <ModificationTime>\\n"""		7684818	1					
ANR	7684938	PrimaryExpression	"""      <ModificationTime>\\n"""		7684818	0					
ANR	7684939	IfStatement	if ( raw )		7684818	10					
ANR	7684940	Condition	raw	201:8:9001:9003	7684818	0	True				
ANR	7684941	Identifier	raw		7684818	0					
ANR	7684942	CompoundStatement		25:13:963:963	7684818	1					
ANR	7684943	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> modification_time )"	202:8:9016:9112	7684818	0	True				
ANR	7684944	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%u</InSeconds>\\n"" , movie -> modification_time )"		7684818	0					
ANR	7684945	Callee	fprintf		7684818	0					
ANR	7684946	Identifier	fprintf		7684818	0					
ANR	7684947	ArgumentList	xmlout		7684818	1					
ANR	7684948	Argument	xmlout		7684818	0					
ANR	7684949	Identifier	xmlout		7684818	0					
ANR	7684950	Argument	"""        <InSeconds>%u</InSeconds>\\n"""		7684818	1					
ANR	7684951	PrimaryExpression	"""        <InSeconds>%u</InSeconds>\\n"""		7684818	0					
ANR	7684952	Argument	movie -> modification_time		7684818	2					
ANR	7684953	PtrMemberAccess	movie -> modification_time		7684818	0					
ANR	7684954	Identifier	movie		7684818	0					
ANR	7684955	Identifier	modification_time		7684818	1					
ANR	7684956	IfStatement	if ( derived )		7684818	11					
ANR	7684957	Condition	derived	205:8:9128:9134	7684818	0	True				
ANR	7684958	Identifier	derived		7684818	0					
ANR	7684959	CompoundStatement		29:17:1094:1094	7684818	1					
ANR	7684960	ExpressionStatement	"fprintf ( xmlout , ""        <AsLocalTime>"" )"	206:8:9147:9187	7684818	0	True				
ANR	7684961	CallExpression	"fprintf ( xmlout , ""        <AsLocalTime>"" )"		7684818	0					
ANR	7684962	Callee	fprintf		7684818	0					
ANR	7684963	Identifier	fprintf		7684818	0					
ANR	7684964	ArgumentList	xmlout		7684818	1					
ANR	7684965	Argument	xmlout		7684818	0					
ANR	7684966	Identifier	xmlout		7684818	0					
ANR	7684967	Argument	"""        <AsLocalTime>"""		7684818	1					
ANR	7684968	PrimaryExpression	"""        <AsLocalTime>"""		7684818	0					
ANR	7684969	ExpressionStatement	"xml_time_out ( xmlout , movie -> modification_time - 2082844800 )"	207:8:9197:9256	7684818	1	True				
ANR	7684970	CallExpression	"xml_time_out ( xmlout , movie -> modification_time - 2082844800 )"		7684818	0					
ANR	7684971	Callee	xml_time_out		7684818	0					
ANR	7684972	Identifier	xml_time_out		7684818	0					
ANR	7684973	ArgumentList	xmlout		7684818	1					
ANR	7684974	Argument	xmlout		7684818	0					
ANR	7684975	Identifier	xmlout		7684818	0					
ANR	7684976	Argument	movie -> modification_time - 2082844800		7684818	1					
ANR	7684977	AdditiveExpression	movie -> modification_time - 2082844800		7684818	0		-			
ANR	7684978	PtrMemberAccess	movie -> modification_time		7684818	0					
ANR	7684979	Identifier	movie		7684818	0					
ANR	7684980	Identifier	modification_time		7684818	1					
ANR	7684981	PrimaryExpression	2082844800		7684818	1					
ANR	7684982	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	208:8:9266:9301	7684818	2	True				
ANR	7684983	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		7684818	0					
ANR	7684984	Callee	fprintf		7684818	0					
ANR	7684985	Identifier	fprintf		7684818	0					
ANR	7684986	ArgumentList	xmlout		7684818	1					
ANR	7684987	Argument	xmlout		7684818	0					
ANR	7684988	Identifier	xmlout		7684818	0					
ANR	7684989	Argument	"""</AsLocalTime>\\n"""		7684818	1					
ANR	7684990	PrimaryExpression	"""</AsLocalTime>\\n"""		7684818	0					
ANR	7684991	ExpressionStatement	"fprintf ( xmlout , ""      </ModificationTime>\\n"" )"	210:4:9313:9361	7684818	12	True				
ANR	7684992	CallExpression	"fprintf ( xmlout , ""      </ModificationTime>\\n"" )"		7684818	0					
ANR	7684993	Callee	fprintf		7684818	0					
ANR	7684994	Identifier	fprintf		7684818	0					
ANR	7684995	ArgumentList	xmlout		7684818	1					
ANR	7684996	Argument	xmlout		7684818	0					
ANR	7684997	Identifier	xmlout		7684818	0					
ANR	7684998	Argument	"""      </ModificationTime>\\n"""		7684818	1					
ANR	7684999	PrimaryExpression	"""      </ModificationTime>\\n"""		7684818	0					
ANR	7685000	ExpressionStatement	"fprintf ( xmlout , ""      <Timescale>%d</Timescale>\\n"" , movie -> timescale )"	211:4:9367:9439	7684818	13	True				
ANR	7685001	CallExpression	"fprintf ( xmlout , ""      <Timescale>%d</Timescale>\\n"" , movie -> timescale )"		7684818	0					
ANR	7685002	Callee	fprintf		7684818	0					
ANR	7685003	Identifier	fprintf		7684818	0					
ANR	7685004	ArgumentList	xmlout		7684818	1					
ANR	7685005	Argument	xmlout		7684818	0					
ANR	7685006	Identifier	xmlout		7684818	0					
ANR	7685007	Argument	"""      <Timescale>%d</Timescale>\\n"""		7684818	1					
ANR	7685008	PrimaryExpression	"""      <Timescale>%d</Timescale>\\n"""		7684818	0					
ANR	7685009	Argument	movie -> timescale		7684818	2					
ANR	7685010	PtrMemberAccess	movie -> timescale		7684818	0					
ANR	7685011	Identifier	movie		7684818	0					
ANR	7685012	Identifier	timescale		7684818	1					
ANR	7685013	IfStatement	if ( notes )		7684818	14					
ANR	7685014	Condition	notes	212:8:9449:9453	7684818	0	True				
ANR	7685015	Identifier	notes		7684818	0					
ANR	7685016	CompoundStatement		36:15:1413:1413	7684818	1					
ANR	7685017	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Timescale defines time units in one second -->\\n"" )"	213:8:9466:9544	7684818	0	True				
ANR	7685018	CallExpression	"fprintf ( xmlout , ""      <!-- Timescale defines time units in one second -->\\n"" )"		7684818	0					
ANR	7685019	Callee	fprintf		7684818	0					
ANR	7685020	Identifier	fprintf		7684818	0					
ANR	7685021	ArgumentList	xmlout		7684818	1					
ANR	7685022	Argument	xmlout		7684818	0					
ANR	7685023	Identifier	xmlout		7684818	0					
ANR	7685024	Argument	"""      <!-- Timescale defines time units in one second -->\\n"""		7684818	1					
ANR	7685025	PrimaryExpression	"""      <!-- Timescale defines time units in one second -->\\n"""		7684818	0					
ANR	7685026	ExpressionStatement	"fprintf ( xmlout , ""      <Rate>\\n"" )"	215:4:9556:9601	7684818	15	True				
ANR	7685027	CallExpression	"fprintf ( xmlout , ""      <Rate>\\n"" )"		7684818	0					
ANR	7685028	Callee	fprintf		7684818	0					
ANR	7685029	Identifier	fprintf		7684818	0					
ANR	7685030	ArgumentList	xmlout		7684818	1					
ANR	7685031	Argument	xmlout		7684818	0					
ANR	7685032	Identifier	xmlout		7684818	0					
ANR	7685033	Argument	"""      <Rate>\\n"""		7684818	1					
ANR	7685034	PrimaryExpression	"""      <Rate>\\n"""		7684818	0					
ANR	7685035	IfStatement	if ( notes )		7684818	16					
ANR	7685036	Condition	notes	217:8:9683:9687	7684818	0	True				
ANR	7685037	Identifier	notes		7684818	0					
ANR	7685038	CompoundStatement		41:15:1647:1647	7684818	1					
ANR	7685039	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"" )"	218:8:9700:9854	7684818	0	True				
ANR	7685040	CallExpression	"fprintf ( xmlout , ""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"" )"		7684818	0					
ANR	7685041	Callee	fprintf		7684818	0					
ANR	7685042	Identifier	fprintf		7684818	0					
ANR	7685043	ArgumentList	xmlout		7684818	1					
ANR	7685044	Argument	xmlout		7684818	0					
ANR	7685045	Identifier	xmlout		7684818	0					
ANR	7685046	Argument	"""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"""		7684818	1					
ANR	7685047	PrimaryExpression	"""      <!-- Rate to play presentation is stored as fixed-point binary 16.16 value. Decimal value is approximation. -->\\n"""		7684818	0					
ANR	7685048	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"" )"	220:8:9864:9988	7684818	1	True				
ANR	7685049	CallExpression	"fprintf ( xmlout , ""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"" )"		7684818	0					
ANR	7685050	Callee	fprintf		7684818	0					
ANR	7685051	Identifier	fprintf		7684818	0					
ANR	7685052	ArgumentList	xmlout		7684818	1					
ANR	7685053	Argument	xmlout		7684818	0					
ANR	7685054	Identifier	xmlout		7684818	0					
ANR	7685055	Argument	"""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"""		7684818	1					
ANR	7685056	PrimaryExpression	"""      <!-- Rate is expressed relative to normal (default) value of 0x00010000 (1.0) -->\\n"""		7684818	0					
ANR	7685057	IfStatement	if ( raw )		7684818	17					
ANR	7685058	Condition	raw	223:8:10004:10006	7684818	0	True				
ANR	7685059	Identifier	raw		7684818	0					
ANR	7685060	CompoundStatement		47:13:1966:1966	7684818	1					
ANR	7685061	ExpressionStatement	"fprintf ( xmlout , ""        <AsHex>0x%08x</AsHex>\\n"" , movie -> rate )"	224:8:10019:10082	7684818	0	True				
ANR	7685062	CallExpression	"fprintf ( xmlout , ""        <AsHex>0x%08x</AsHex>\\n"" , movie -> rate )"		7684818	0					
ANR	7685063	Callee	fprintf		7684818	0					
ANR	7685064	Identifier	fprintf		7684818	0					
ANR	7685065	ArgumentList	xmlout		7684818	1					
ANR	7685066	Argument	xmlout		7684818	0					
ANR	7685067	Identifier	xmlout		7684818	0					
ANR	7685068	Argument	"""        <AsHex>0x%08x</AsHex>\\n"""		7684818	1					
ANR	7685069	PrimaryExpression	"""        <AsHex>0x%08x</AsHex>\\n"""		7684818	0					
ANR	7685070	Argument	movie -> rate		7684818	2					
ANR	7685071	PtrMemberAccess	movie -> rate		7684818	0					
ANR	7685072	Identifier	movie		7684818	0					
ANR	7685073	Identifier	rate		7684818	1					
ANR	7685074	IfStatement	if ( derived )		7684818	18					
ANR	7685075	Condition	derived	226:8:10098:10104	7684818	0	True				
ANR	7685076	Identifier	derived		7684818	0					
ANR	7685077	CompoundStatement		50:17:2064:2064	7684818	1					
ANR	7685078	ExpressionStatement	"fprintf ( xmlout , ""        <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) movie -> rate / ( double ) 0x00010000 )"	227:8:10117:10233	7684818	0	True				
ANR	7685079	CallExpression	"fprintf ( xmlout , ""        <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) movie -> rate / ( double ) 0x00010000 )"		7684818	0					
ANR	7685080	Callee	fprintf		7684818	0					
ANR	7685081	Identifier	fprintf		7684818	0					
ANR	7685082	ArgumentList	xmlout		7684818	1					
ANR	7685083	Argument	xmlout		7684818	0					
ANR	7685084	Identifier	xmlout		7684818	0					
ANR	7685085	Argument	"""        <AsDecimal>%12.6f</AsDecimal>\\n"""		7684818	1					
ANR	7685086	PrimaryExpression	"""        <AsDecimal>%12.6f</AsDecimal>\\n"""		7684818	0					
ANR	7685087	Argument	( double ) movie -> rate / ( double ) 0x00010000		7684818	2					
ANR	7685088	MultiplicativeExpression	( double ) movie -> rate / ( double ) 0x00010000		7684818	0		/			
ANR	7685089	CastExpression	( double ) movie -> rate		7684818	0					
ANR	7685090	CastTarget	double		7684818	0					
ANR	7685091	PtrMemberAccess	movie -> rate		7684818	1					
ANR	7685092	Identifier	movie		7684818	0					
ANR	7685093	Identifier	rate		7684818	1					
ANR	7685094	CastExpression	( double ) 0x00010000		7684818	1					
ANR	7685095	CastTarget	double		7684818	0					
ANR	7685096	PrimaryExpression	0x00010000		7684818	1					
ANR	7685097	ExpressionStatement	"fprintf ( xmlout , ""      </Rate>\\n"" )"	230:4:10245:10281	7684818	19	True				
ANR	7685098	CallExpression	"fprintf ( xmlout , ""      </Rate>\\n"" )"		7684818	0					
ANR	7685099	Callee	fprintf		7684818	0					
ANR	7685100	Identifier	fprintf		7684818	0					
ANR	7685101	ArgumentList	xmlout		7684818	1					
ANR	7685102	Argument	xmlout		7684818	0					
ANR	7685103	Identifier	xmlout		7684818	0					
ANR	7685104	Argument	"""      </Rate>\\n"""		7684818	1					
ANR	7685105	PrimaryExpression	"""      </Rate>\\n"""		7684818	0					
ANR	7685106	ExpressionStatement	"fprintf ( xmlout , ""      <Duration>\\n"" )"	231:4:10287:10326	7684818	20	True				
ANR	7685107	CallExpression	"fprintf ( xmlout , ""      <Duration>\\n"" )"		7684818	0					
ANR	7685108	Callee	fprintf		7684818	0					
ANR	7685109	Identifier	fprintf		7684818	0					
ANR	7685110	ArgumentList	xmlout		7684818	1					
ANR	7685111	Argument	xmlout		7684818	0					
ANR	7685112	Identifier	xmlout		7684818	0					
ANR	7685113	Argument	"""      <Duration>\\n"""		7684818	1					
ANR	7685114	PrimaryExpression	"""      <Duration>\\n"""		7684818	0					
ANR	7685115	IfStatement	if ( raw )		7684818	21					
ANR	7685116	Condition	raw	232:8:10336:10338	7684818	0	True				
ANR	7685117	Identifier	raw		7684818	0					
ANR	7685118	CompoundStatement		56:13:2298:2298	7684818	1					
ANR	7685119	ExpressionStatement	"fprintf ( xmlout , ""        <InTimeUnits>%u</InTimeUnits>\\n"" , movie -> duration )"	233:8:10351:10426	7684818	0	True				
ANR	7685120	CallExpression	"fprintf ( xmlout , ""        <InTimeUnits>%u</InTimeUnits>\\n"" , movie -> duration )"		7684818	0					
ANR	7685121	Callee	fprintf		7684818	0					
ANR	7685122	Identifier	fprintf		7684818	0					
ANR	7685123	ArgumentList	xmlout		7684818	1					
ANR	7685124	Argument	xmlout		7684818	0					
ANR	7685125	Identifier	xmlout		7684818	0					
ANR	7685126	Argument	"""        <InTimeUnits>%u</InTimeUnits>\\n"""		7684818	1					
ANR	7685127	PrimaryExpression	"""        <InTimeUnits>%u</InTimeUnits>\\n"""		7684818	0					
ANR	7685128	Argument	movie -> duration		7684818	2					
ANR	7685129	PtrMemberAccess	movie -> duration		7684818	0					
ANR	7685130	Identifier	movie		7684818	0					
ANR	7685131	Identifier	duration		7684818	1					
ANR	7685132	IfStatement	if ( derived )		7684818	22					
ANR	7685133	Condition	derived	235:8:10442:10448	7684818	0	True				
ANR	7685134	Identifier	derived		7684818	0					
ANR	7685135	CompoundStatement		59:17:2408:2408	7684818	1					
ANR	7685136	ExpressionStatement	"fprintf ( xmlout , ""        <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) movie -> duration / ( double ) movie -> timescale )"	236:8:10461:10604	7684818	0	True				
ANR	7685137	CallExpression	"fprintf ( xmlout , ""        <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) movie -> duration / ( double ) movie -> timescale )"		7684818	0					
ANR	7685138	Callee	fprintf		7684818	0					
ANR	7685139	Identifier	fprintf		7684818	0					
ANR	7685140	ArgumentList	xmlout		7684818	1					
ANR	7685141	Argument	xmlout		7684818	0					
ANR	7685142	Identifier	xmlout		7684818	0					
ANR	7685143	Argument	"""        <InSeconds>%12.3f</InSeconds>\\n"""		7684818	1					
ANR	7685144	PrimaryExpression	"""        <InSeconds>%12.3f</InSeconds>\\n"""		7684818	0					
ANR	7685145	Argument	( double ) movie -> duration / ( double ) movie -> timescale		7684818	2					
ANR	7685146	MultiplicativeExpression	( double ) movie -> duration / ( double ) movie -> timescale		7684818	0		/			
ANR	7685147	CastExpression	( double ) movie -> duration		7684818	0					
ANR	7685148	CastTarget	double		7684818	0					
ANR	7685149	PtrMemberAccess	movie -> duration		7684818	1					
ANR	7685150	Identifier	movie		7684818	0					
ANR	7685151	Identifier	duration		7684818	1					
ANR	7685152	CastExpression	( double ) movie -> timescale		7684818	1					
ANR	7685153	CastTarget	double		7684818	0					
ANR	7685154	PtrMemberAccess	movie -> timescale		7684818	1					
ANR	7685155	Identifier	movie		7684818	0					
ANR	7685156	Identifier	timescale		7684818	1					
ANR	7685157	ExpressionStatement	"fprintf ( xmlout , ""      </Duration>\\n"" )"	240:4:10671:10711	7684818	23	True				
ANR	7685158	CallExpression	"fprintf ( xmlout , ""      </Duration>\\n"" )"		7684818	0					
ANR	7685159	Callee	fprintf		7684818	0					
ANR	7685160	Identifier	fprintf		7684818	0					
ANR	7685161	ArgumentList	xmlout		7684818	1					
ANR	7685162	Argument	xmlout		7684818	0					
ANR	7685163	Identifier	xmlout		7684818	0					
ANR	7685164	Argument	"""      </Duration>\\n"""		7684818	1					
ANR	7685165	PrimaryExpression	"""      </Duration>\\n"""		7684818	0					
ANR	7685166	ExpressionStatement	movie -> volume = movie -> volume << 8	242:4:10738:10772	7684818	24	True				
ANR	7685167	AssignmentExpression	movie -> volume = movie -> volume << 8		7684818	0		=			
ANR	7685168	PtrMemberAccess	movie -> volume		7684818	0					
ANR	7685169	Identifier	movie		7684818	0					
ANR	7685170	Identifier	volume		7684818	1					
ANR	7685171	ShiftExpression	movie -> volume << 8		7684818	1		<<			
ANR	7685172	PtrMemberAccess	movie -> volume		7684818	0					
ANR	7685173	Identifier	movie		7684818	0					
ANR	7685174	Identifier	volume		7684818	1					
ANR	7685175	PrimaryExpression	8		7684818	1					
ANR	7685176	ExpressionStatement	"fprintf ( xmlout , ""      <Volume>\\n"" )"	244:4:10785:10822	7684818	25	True				
ANR	7685177	CallExpression	"fprintf ( xmlout , ""      <Volume>\\n"" )"		7684818	0					
ANR	7685178	Callee	fprintf		7684818	0					
ANR	7685179	Identifier	fprintf		7684818	0					
ANR	7685180	ArgumentList	xmlout		7684818	1					
ANR	7685181	Argument	xmlout		7684818	0					
ANR	7685182	Identifier	xmlout		7684818	0					
ANR	7685183	Argument	"""      <Volume>\\n"""		7684818	1					
ANR	7685184	PrimaryExpression	"""      <Volume>\\n"""		7684818	0					
ANR	7685185	IfStatement	if ( notes )		7684818	26					
ANR	7685186	Condition	notes	245:8:10832:10836	7684818	0	True				
ANR	7685187	Identifier	notes		7684818	0					
ANR	7685188	CompoundStatement		69:15:2796:2796	7684818	1					
ANR	7685189	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	246:8:10849:10985	7684818	0	True				
ANR	7685190	CallExpression	"fprintf ( xmlout , ""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		7684818	0					
ANR	7685191	Callee	fprintf		7684818	0					
ANR	7685192	Identifier	fprintf		7684818	0					
ANR	7685193	ArgumentList	xmlout		7684818	1					
ANR	7685194	Argument	xmlout		7684818	0					
ANR	7685195	Identifier	xmlout		7684818	0					
ANR	7685196	Argument	"""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7684818	1					
ANR	7685197	PrimaryExpression	"""      <!-- Audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7684818	0					
ANR	7685198	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"	248:8:10995:11091	7684818	1	True				
ANR	7685199	CallExpression	"fprintf ( xmlout , ""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"		7684818	0					
ANR	7685200	Callee	fprintf		7684818	0					
ANR	7685201	Identifier	fprintf		7684818	0					
ANR	7685202	ArgumentList	xmlout		7684818	1					
ANR	7685203	Argument	xmlout		7684818	0					
ANR	7685204	Identifier	xmlout		7684818	0					
ANR	7685205	Argument	"""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		7684818	1					
ANR	7685206	PrimaryExpression	"""      <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		7684818	0					
ANR	7685207	IfStatement	if ( raw )		7684818	27					
ANR	7685208	Condition	raw	251:8:11107:11109	7684818	0	True				
ANR	7685209	Identifier	raw		7684818	0					
ANR	7685210	CompoundStatement		75:13:3069:3069	7684818	1					
ANR	7685211	ExpressionStatement	"fprintf ( xmlout , ""        <AsHex>0x%04x</AsHex>\\n"" , movie -> volume )"	252:8:11122:11187	7684818	0	True				
ANR	7685212	CallExpression	"fprintf ( xmlout , ""        <AsHex>0x%04x</AsHex>\\n"" , movie -> volume )"		7684818	0					
ANR	7685213	Callee	fprintf		7684818	0					
ANR	7685214	Identifier	fprintf		7684818	0					
ANR	7685215	ArgumentList	xmlout		7684818	1					
ANR	7685216	Argument	xmlout		7684818	0					
ANR	7685217	Identifier	xmlout		7684818	0					
ANR	7685218	Argument	"""        <AsHex>0x%04x</AsHex>\\n"""		7684818	1					
ANR	7685219	PrimaryExpression	"""        <AsHex>0x%04x</AsHex>\\n"""		7684818	0					
ANR	7685220	Argument	movie -> volume		7684818	2					
ANR	7685221	PtrMemberAccess	movie -> volume		7684818	0					
ANR	7685222	Identifier	movie		7684818	0					
ANR	7685223	Identifier	volume		7684818	1					
ANR	7685224	IfStatement	if ( derived )		7684818	28					
ANR	7685225	Condition	derived	254:8:11203:11209	7684818	0	True				
ANR	7685226	Identifier	derived		7684818	0					
ANR	7685227	CompoundStatement		78:17:3169:3169	7684818	1					
ANR	7685228	ExpressionStatement	"fprintf ( xmlout , ""        <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) movie -> volume / ( double ) 0x0100 )"	255:8:11222:11335	7684818	0	True				
ANR	7685229	CallExpression	"fprintf ( xmlout , ""        <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) movie -> volume / ( double ) 0x0100 )"		7684818	0					
ANR	7685230	Callee	fprintf		7684818	0					
ANR	7685231	Identifier	fprintf		7684818	0					
ANR	7685232	ArgumentList	xmlout		7684818	1					
ANR	7685233	Argument	xmlout		7684818	0					
ANR	7685234	Identifier	xmlout		7684818	0					
ANR	7685235	Argument	"""        <AsDecimal>%6.3f</AsDecimal>\\n"""		7684818	1					
ANR	7685236	PrimaryExpression	"""        <AsDecimal>%6.3f</AsDecimal>\\n"""		7684818	0					
ANR	7685237	Argument	( double ) movie -> volume / ( double ) 0x0100		7684818	2					
ANR	7685238	MultiplicativeExpression	( double ) movie -> volume / ( double ) 0x0100		7684818	0		/			
ANR	7685239	CastExpression	( double ) movie -> volume		7684818	0					
ANR	7685240	CastTarget	double		7684818	0					
ANR	7685241	PtrMemberAccess	movie -> volume		7684818	1					
ANR	7685242	Identifier	movie		7684818	0					
ANR	7685243	Identifier	volume		7684818	1					
ANR	7685244	CastExpression	( double ) 0x0100		7684818	1					
ANR	7685245	CastTarget	double		7684818	0					
ANR	7685246	PrimaryExpression	0x0100		7684818	1					
ANR	7685247	ExpressionStatement	"fprintf ( xmlout , ""      </Volume>\\n"" )"	258:4:11347:11385	7684818	29	True				
ANR	7685248	CallExpression	"fprintf ( xmlout , ""      </Volume>\\n"" )"		7684818	0					
ANR	7685249	Callee	fprintf		7684818	0					
ANR	7685250	Identifier	fprintf		7684818	0					
ANR	7685251	ArgumentList	xmlout		7684818	1					
ANR	7685252	Argument	xmlout		7684818	0					
ANR	7685253	Identifier	xmlout		7684818	0					
ANR	7685254	Argument	"""      </Volume>\\n"""		7684818	1					
ANR	7685255	PrimaryExpression	"""      </Volume>\\n"""		7684818	0					
ANR	7685256	IfStatement	if ( notes )		7684818	30					
ANR	7685257	Condition	notes	260:8:11416:11420	7684818	0	True				
ANR	7685258	Identifier	notes		7684818	0					
ANR	7685259	CompoundStatement		84:15:3380:3380	7684818	1					
ANR	7685260	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	261:8:11433:11572	7684818	0	True				
ANR	7685261	CallExpression	"fprintf ( xmlout , ""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		7684818	0					
ANR	7685262	Callee	fprintf		7684818	0					
ANR	7685263	Identifier	fprintf		7684818	0					
ANR	7685264	ArgumentList	xmlout		7684818	1					
ANR	7685265	Argument	xmlout		7684818	0					
ANR	7685266	Identifier	xmlout		7684818	0					
ANR	7685267	Argument	"""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7684818	1					
ANR	7685268	PrimaryExpression	"""      <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7684818	0					
ANR	7685269	ExpressionStatement	movie -> volume = movie -> volume >> 8	264:4:11584:11618	7684818	31	True				
ANR	7685270	AssignmentExpression	movie -> volume = movie -> volume >> 8		7684818	0		=			
ANR	7685271	PtrMemberAccess	movie -> volume		7684818	0					
ANR	7685272	Identifier	movie		7684818	0					
ANR	7685273	Identifier	volume		7684818	1					
ANR	7685274	ShiftExpression	movie -> volume >> 8		7684818	1		>>			
ANR	7685275	PtrMemberAccess	movie -> volume		7684818	0					
ANR	7685276	Identifier	movie		7684818	0					
ANR	7685277	Identifier	volume		7684818	1					
ANR	7685278	PrimaryExpression	8		7684818	1					
ANR	7685279	ExpressionStatement	"fprintf ( xmlout , ""      <TransformationMatrix>\\n"" )"	267:4:11700:11751	7684818	32	True				
ANR	7685280	CallExpression	"fprintf ( xmlout , ""      <TransformationMatrix>\\n"" )"		7684818	0					
ANR	7685281	Callee	fprintf		7684818	0					
ANR	7685282	Identifier	fprintf		7684818	0					
ANR	7685283	ArgumentList	xmlout		7684818	1					
ANR	7685284	Argument	xmlout		7684818	0					
ANR	7685285	Identifier	xmlout		7684818	0					
ANR	7685286	Argument	"""      <TransformationMatrix>\\n"""		7684818	1					
ANR	7685287	PrimaryExpression	"""      <TransformationMatrix>\\n"""		7684818	0					
ANR	7685288	IfStatement	if ( notes )		7684818	33					
ANR	7685289	Condition	notes	268:8:11761:11765	7684818	0	True				
ANR	7685290	Identifier	notes		7684818	0					
ANR	7685291	CompoundStatement		92:15:3725:3725	7684818	1					
ANR	7685292	ExpressionStatement	"fprintf ( xmlout , ""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"" )"	269:8:11778:11909	7684818	0	True				
ANR	7685293	CallExpression	"fprintf ( xmlout , ""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"" )"		7684818	0					
ANR	7685294	Callee	fprintf		7684818	0					
ANR	7685295	Identifier	fprintf		7684818	0					
ANR	7685296	ArgumentList	xmlout		7684818	1					
ANR	7685297	Argument	xmlout		7684818	0					
ANR	7685298	Identifier	xmlout		7684818	0					
ANR	7685299	Argument	"""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"""		7684818	1					
ANR	7685300	PrimaryExpression	"""      <!-- 3 x 3 Video Transformation Matrix {a,b,u,c,d,v,x,y,w}.  Required: u=0, v=0, w=1 -->\\n"""		7684818	0					
ANR	7685301	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"" )"	271:8:11919:12045	7684818	1	True				
ANR	7685302	CallExpression	"fprintf ( xmlout , ""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"" )"		7684818	0					
ANR	7685303	Callee	fprintf		7684818	0					
ANR	7685304	Identifier	fprintf		7684818	0					
ANR	7685305	ArgumentList	xmlout		7684818	1					
ANR	7685306	Argument	xmlout		7684818	0					
ANR	7685307	Identifier	xmlout		7684818	0					
ANR	7685308	Argument	"""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"""		7684818	1					
ANR	7685309	PrimaryExpression	"""      <!-- Maps decompressed point (p,q) to rendered point (ap + cq + x, bp + dq + y) -->\\n"""		7684818	0					
ANR	7685310	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"" )"	273:8:12055:12177	7684818	2	True				
ANR	7685311	CallExpression	"fprintf ( xmlout , ""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"" )"		7684818	0					
ANR	7685312	Callee	fprintf		7684818	0					
ANR	7685313	Identifier	fprintf		7684818	0					
ANR	7685314	ArgumentList	xmlout		7684818	1					
ANR	7685315	Argument	xmlout		7684818	0					
ANR	7685316	Identifier	xmlout		7684818	0					
ANR	7685317	Argument	"""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"""		7684818	1					
ANR	7685318	PrimaryExpression	"""      <!-- Stored as Fixed Point Hex: all are binary 16.16, except u,v,w are 2.30 -->\\n"""		7684818	0					
ANR	7685319	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"" )"	275:8:12187:12291	7684818	3	True				
ANR	7685320	CallExpression	"fprintf ( xmlout , ""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"" )"		7684818	0					
ANR	7685321	Callee	fprintf		7684818	0					
ANR	7685322	Identifier	fprintf		7684818	0					
ANR	7685323	ArgumentList	xmlout		7684818	1					
ANR	7685324	Argument	xmlout		7684818	0					
ANR	7685325	Identifier	xmlout		7684818	0					
ANR	7685326	Argument	"""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"""		7684818	1					
ANR	7685327	PrimaryExpression	"""      <!-- Unity = 0x00010000,0,0,0,0x00010000,0,0,0,0x40000000 -->\\n"""		7684818	0					
ANR	7685328	ExpressionStatement	"fprintf ( xmlout , ""        <TMa>0x%08x</TMa>\\n"" , movie -> trans_matrix [ 0 ] )"	278:4:12303:12375	7684818	34	True				
ANR	7685329	CallExpression	"fprintf ( xmlout , ""        <TMa>0x%08x</TMa>\\n"" , movie -> trans_matrix [ 0 ] )"		7684818	0					
ANR	7685330	Callee	fprintf		7684818	0					
ANR	7685331	Identifier	fprintf		7684818	0					
ANR	7685332	ArgumentList	xmlout		7684818	1					
ANR	7685333	Argument	xmlout		7684818	0					
ANR	7685334	Identifier	xmlout		7684818	0					
ANR	7685335	Argument	"""        <TMa>0x%08x</TMa>\\n"""		7684818	1					
ANR	7685336	PrimaryExpression	"""        <TMa>0x%08x</TMa>\\n"""		7684818	0					
ANR	7685337	Argument	movie -> trans_matrix [ 0 ]		7684818	2					
ANR	7685338	ArrayIndexing	movie -> trans_matrix [ 0 ]		7684818	0					
ANR	7685339	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685340	Identifier	movie		7684818	0					
ANR	7685341	Identifier	trans_matrix		7684818	1					
ANR	7685342	PrimaryExpression	0		7684818	1					
ANR	7685343	ExpressionStatement	"fprintf ( xmlout , ""        <TMb>0x%08x</TMb>\\n"" , movie -> trans_matrix [ 1 ] )"	279:4:12381:12453	7684818	35	True				
ANR	7685344	CallExpression	"fprintf ( xmlout , ""        <TMb>0x%08x</TMb>\\n"" , movie -> trans_matrix [ 1 ] )"		7684818	0					
ANR	7685345	Callee	fprintf		7684818	0					
ANR	7685346	Identifier	fprintf		7684818	0					
ANR	7685347	ArgumentList	xmlout		7684818	1					
ANR	7685348	Argument	xmlout		7684818	0					
ANR	7685349	Identifier	xmlout		7684818	0					
ANR	7685350	Argument	"""        <TMb>0x%08x</TMb>\\n"""		7684818	1					
ANR	7685351	PrimaryExpression	"""        <TMb>0x%08x</TMb>\\n"""		7684818	0					
ANR	7685352	Argument	movie -> trans_matrix [ 1 ]		7684818	2					
ANR	7685353	ArrayIndexing	movie -> trans_matrix [ 1 ]		7684818	0					
ANR	7685354	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685355	Identifier	movie		7684818	0					
ANR	7685356	Identifier	trans_matrix		7684818	1					
ANR	7685357	PrimaryExpression	1		7684818	1					
ANR	7685358	ExpressionStatement	"fprintf ( xmlout , ""        <TMu>0x%08x</TMu>\\n"" , movie -> trans_matrix [ 2 ] )"	280:4:12459:12531	7684818	36	True				
ANR	7685359	CallExpression	"fprintf ( xmlout , ""        <TMu>0x%08x</TMu>\\n"" , movie -> trans_matrix [ 2 ] )"		7684818	0					
ANR	7685360	Callee	fprintf		7684818	0					
ANR	7685361	Identifier	fprintf		7684818	0					
ANR	7685362	ArgumentList	xmlout		7684818	1					
ANR	7685363	Argument	xmlout		7684818	0					
ANR	7685364	Identifier	xmlout		7684818	0					
ANR	7685365	Argument	"""        <TMu>0x%08x</TMu>\\n"""		7684818	1					
ANR	7685366	PrimaryExpression	"""        <TMu>0x%08x</TMu>\\n"""		7684818	0					
ANR	7685367	Argument	movie -> trans_matrix [ 2 ]		7684818	2					
ANR	7685368	ArrayIndexing	movie -> trans_matrix [ 2 ]		7684818	0					
ANR	7685369	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685370	Identifier	movie		7684818	0					
ANR	7685371	Identifier	trans_matrix		7684818	1					
ANR	7685372	PrimaryExpression	2		7684818	1					
ANR	7685373	ExpressionStatement	"fprintf ( xmlout , ""        <TMc>0x%08x</TMc>\\n"" , movie -> trans_matrix [ 3 ] )"	281:4:12537:12609	7684818	37	True				
ANR	7685374	CallExpression	"fprintf ( xmlout , ""        <TMc>0x%08x</TMc>\\n"" , movie -> trans_matrix [ 3 ] )"		7684818	0					
ANR	7685375	Callee	fprintf		7684818	0					
ANR	7685376	Identifier	fprintf		7684818	0					
ANR	7685377	ArgumentList	xmlout		7684818	1					
ANR	7685378	Argument	xmlout		7684818	0					
ANR	7685379	Identifier	xmlout		7684818	0					
ANR	7685380	Argument	"""        <TMc>0x%08x</TMc>\\n"""		7684818	1					
ANR	7685381	PrimaryExpression	"""        <TMc>0x%08x</TMc>\\n"""		7684818	0					
ANR	7685382	Argument	movie -> trans_matrix [ 3 ]		7684818	2					
ANR	7685383	ArrayIndexing	movie -> trans_matrix [ 3 ]		7684818	0					
ANR	7685384	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685385	Identifier	movie		7684818	0					
ANR	7685386	Identifier	trans_matrix		7684818	1					
ANR	7685387	PrimaryExpression	3		7684818	1					
ANR	7685388	ExpressionStatement	"fprintf ( xmlout , ""        <TMd>0x%08x</TMd>\\n"" , movie -> trans_matrix [ 4 ] )"	282:4:12615:12687	7684818	38	True				
ANR	7685389	CallExpression	"fprintf ( xmlout , ""        <TMd>0x%08x</TMd>\\n"" , movie -> trans_matrix [ 4 ] )"		7684818	0					
ANR	7685390	Callee	fprintf		7684818	0					
ANR	7685391	Identifier	fprintf		7684818	0					
ANR	7685392	ArgumentList	xmlout		7684818	1					
ANR	7685393	Argument	xmlout		7684818	0					
ANR	7685394	Identifier	xmlout		7684818	0					
ANR	7685395	Argument	"""        <TMd>0x%08x</TMd>\\n"""		7684818	1					
ANR	7685396	PrimaryExpression	"""        <TMd>0x%08x</TMd>\\n"""		7684818	0					
ANR	7685397	Argument	movie -> trans_matrix [ 4 ]		7684818	2					
ANR	7685398	ArrayIndexing	movie -> trans_matrix [ 4 ]		7684818	0					
ANR	7685399	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685400	Identifier	movie		7684818	0					
ANR	7685401	Identifier	trans_matrix		7684818	1					
ANR	7685402	PrimaryExpression	4		7684818	1					
ANR	7685403	ExpressionStatement	"fprintf ( xmlout , ""        <TMv>0x%08x</TMv>\\n"" , movie -> trans_matrix [ 5 ] )"	283:4:12693:12765	7684818	39	True				
ANR	7685404	CallExpression	"fprintf ( xmlout , ""        <TMv>0x%08x</TMv>\\n"" , movie -> trans_matrix [ 5 ] )"		7684818	0					
ANR	7685405	Callee	fprintf		7684818	0					
ANR	7685406	Identifier	fprintf		7684818	0					
ANR	7685407	ArgumentList	xmlout		7684818	1					
ANR	7685408	Argument	xmlout		7684818	0					
ANR	7685409	Identifier	xmlout		7684818	0					
ANR	7685410	Argument	"""        <TMv>0x%08x</TMv>\\n"""		7684818	1					
ANR	7685411	PrimaryExpression	"""        <TMv>0x%08x</TMv>\\n"""		7684818	0					
ANR	7685412	Argument	movie -> trans_matrix [ 5 ]		7684818	2					
ANR	7685413	ArrayIndexing	movie -> trans_matrix [ 5 ]		7684818	0					
ANR	7685414	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685415	Identifier	movie		7684818	0					
ANR	7685416	Identifier	trans_matrix		7684818	1					
ANR	7685417	PrimaryExpression	5		7684818	1					
ANR	7685418	ExpressionStatement	"fprintf ( xmlout , ""        <TMx>0x%08x</TMx>\\n"" , movie -> trans_matrix [ 6 ] )"	284:4:12771:12843	7684818	40	True				
ANR	7685419	CallExpression	"fprintf ( xmlout , ""        <TMx>0x%08x</TMx>\\n"" , movie -> trans_matrix [ 6 ] )"		7684818	0					
ANR	7685420	Callee	fprintf		7684818	0					
ANR	7685421	Identifier	fprintf		7684818	0					
ANR	7685422	ArgumentList	xmlout		7684818	1					
ANR	7685423	Argument	xmlout		7684818	0					
ANR	7685424	Identifier	xmlout		7684818	0					
ANR	7685425	Argument	"""        <TMx>0x%08x</TMx>\\n"""		7684818	1					
ANR	7685426	PrimaryExpression	"""        <TMx>0x%08x</TMx>\\n"""		7684818	0					
ANR	7685427	Argument	movie -> trans_matrix [ 6 ]		7684818	2					
ANR	7685428	ArrayIndexing	movie -> trans_matrix [ 6 ]		7684818	0					
ANR	7685429	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685430	Identifier	movie		7684818	0					
ANR	7685431	Identifier	trans_matrix		7684818	1					
ANR	7685432	PrimaryExpression	6		7684818	1					
ANR	7685433	ExpressionStatement	"fprintf ( xmlout , ""        <TMy>0x%08x</TMy>\\n"" , movie -> trans_matrix [ 7 ] )"	285:4:12849:12921	7684818	41	True				
ANR	7685434	CallExpression	"fprintf ( xmlout , ""        <TMy>0x%08x</TMy>\\n"" , movie -> trans_matrix [ 7 ] )"		7684818	0					
ANR	7685435	Callee	fprintf		7684818	0					
ANR	7685436	Identifier	fprintf		7684818	0					
ANR	7685437	ArgumentList	xmlout		7684818	1					
ANR	7685438	Argument	xmlout		7684818	0					
ANR	7685439	Identifier	xmlout		7684818	0					
ANR	7685440	Argument	"""        <TMy>0x%08x</TMy>\\n"""		7684818	1					
ANR	7685441	PrimaryExpression	"""        <TMy>0x%08x</TMy>\\n"""		7684818	0					
ANR	7685442	Argument	movie -> trans_matrix [ 7 ]		7684818	2					
ANR	7685443	ArrayIndexing	movie -> trans_matrix [ 7 ]		7684818	0					
ANR	7685444	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685445	Identifier	movie		7684818	0					
ANR	7685446	Identifier	trans_matrix		7684818	1					
ANR	7685447	PrimaryExpression	7		7684818	1					
ANR	7685448	ExpressionStatement	"fprintf ( xmlout , ""        <TMw>0x%08x</TMw>\\n"" , movie -> trans_matrix [ 8 ] )"	286:4:12927:12999	7684818	42	True				
ANR	7685449	CallExpression	"fprintf ( xmlout , ""        <TMw>0x%08x</TMw>\\n"" , movie -> trans_matrix [ 8 ] )"		7684818	0					
ANR	7685450	Callee	fprintf		7684818	0					
ANR	7685451	Identifier	fprintf		7684818	0					
ANR	7685452	ArgumentList	xmlout		7684818	1					
ANR	7685453	Argument	xmlout		7684818	0					
ANR	7685454	Identifier	xmlout		7684818	0					
ANR	7685455	Argument	"""        <TMw>0x%08x</TMw>\\n"""		7684818	1					
ANR	7685456	PrimaryExpression	"""        <TMw>0x%08x</TMw>\\n"""		7684818	0					
ANR	7685457	Argument	movie -> trans_matrix [ 8 ]		7684818	2					
ANR	7685458	ArrayIndexing	movie -> trans_matrix [ 8 ]		7684818	0					
ANR	7685459	PtrMemberAccess	movie -> trans_matrix		7684818	0					
ANR	7685460	Identifier	movie		7684818	0					
ANR	7685461	Identifier	trans_matrix		7684818	1					
ANR	7685462	PrimaryExpression	8		7684818	1					
ANR	7685463	ExpressionStatement	"fprintf ( xmlout , ""      </TransformationMatrix>\\n"" )"	287:4:13005:13057	7684818	43	True				
ANR	7685464	CallExpression	"fprintf ( xmlout , ""      </TransformationMatrix>\\n"" )"		7684818	0					
ANR	7685465	Callee	fprintf		7684818	0					
ANR	7685466	Identifier	fprintf		7684818	0					
ANR	7685467	ArgumentList	xmlout		7684818	1					
ANR	7685468	Argument	xmlout		7684818	0					
ANR	7685469	Identifier	xmlout		7684818	0					
ANR	7685470	Argument	"""      </TransformationMatrix>\\n"""		7684818	1					
ANR	7685471	PrimaryExpression	"""      </TransformationMatrix>\\n"""		7684818	0					
ANR	7685472	ExpressionStatement	"fprintf ( xmlout , ""    </MovieHeader>\\n"" )"	288:4:13063:13104	7684818	44	True				
ANR	7685473	CallExpression	"fprintf ( xmlout , ""    </MovieHeader>\\n"" )"		7684818	0					
ANR	7685474	Callee	fprintf		7684818	0					
ANR	7685475	Identifier	fprintf		7684818	0					
ANR	7685476	ArgumentList	xmlout		7684818	1					
ANR	7685477	Argument	xmlout		7684818	0					
ANR	7685478	Identifier	xmlout		7684818	0					
ANR	7685479	Argument	"""    </MovieHeader>\\n"""		7684818	1					
ANR	7685480	PrimaryExpression	"""    </MovieHeader>\\n"""		7684818	0					
ANR	7685481	ExpressionStatement	"fprintf ( xmlout , ""    <Statistics>\\n"" )"	290:4:13111:13150	7684818	45	True				
ANR	7685482	CallExpression	"fprintf ( xmlout , ""    <Statistics>\\n"" )"		7684818	0					
ANR	7685483	Callee	fprintf		7684818	0					
ANR	7685484	Identifier	fprintf		7684818	0					
ANR	7685485	ArgumentList	xmlout		7684818	1					
ANR	7685486	Argument	xmlout		7684818	0					
ANR	7685487	Identifier	xmlout		7684818	0					
ANR	7685488	Argument	"""    <Statistics>\\n"""		7684818	1					
ANR	7685489	PrimaryExpression	"""    <Statistics>\\n"""		7684818	0					
ANR	7685490	ExpressionStatement	"fprintf ( xmlout , ""      <TracksFound>\\n"" )"	291:4:13156:13198	7684818	46	True				
ANR	7685491	CallExpression	"fprintf ( xmlout , ""      <TracksFound>\\n"" )"		7684818	0					
ANR	7685492	Callee	fprintf		7684818	0					
ANR	7685493	Identifier	fprintf		7684818	0					
ANR	7685494	ArgumentList	xmlout		7684818	1					
ANR	7685495	Argument	xmlout		7684818	0					
ANR	7685496	Identifier	xmlout		7684818	0					
ANR	7685497	Argument	"""      <TracksFound>\\n"""		7684818	1					
ANR	7685498	PrimaryExpression	"""      <TracksFound>\\n"""		7684818	0					
ANR	7685499	ExpressionStatement	"fprintf ( xmlout , ""        <Video>%d</Video>\\n"" , movie -> num_vtk )"	292:4:13204:13268	7684818	47	True				
ANR	7685500	CallExpression	"fprintf ( xmlout , ""        <Video>%d</Video>\\n"" , movie -> num_vtk )"		7684818	0					
ANR	7685501	Callee	fprintf		7684818	0					
ANR	7685502	Identifier	fprintf		7684818	0					
ANR	7685503	ArgumentList	xmlout		7684818	1					
ANR	7685504	Argument	xmlout		7684818	0					
ANR	7685505	Identifier	xmlout		7684818	0					
ANR	7685506	Argument	"""        <Video>%d</Video>\\n"""		7684818	1					
ANR	7685507	PrimaryExpression	"""        <Video>%d</Video>\\n"""		7684818	0					
ANR	7685508	Argument	movie -> num_vtk		7684818	2					
ANR	7685509	PtrMemberAccess	movie -> num_vtk		7684818	0					
ANR	7685510	Identifier	movie		7684818	0					
ANR	7685511	Identifier	num_vtk		7684818	1					
ANR	7685512	ExpressionStatement	"fprintf ( xmlout , ""        <Audio>%d</Audio>\\n"" , movie -> num_stk )"	293:4:13274:13338	7684818	48	True				
ANR	7685513	CallExpression	"fprintf ( xmlout , ""        <Audio>%d</Audio>\\n"" , movie -> num_stk )"		7684818	0					
ANR	7685514	Callee	fprintf		7684818	0					
ANR	7685515	Identifier	fprintf		7684818	0					
ANR	7685516	ArgumentList	xmlout		7684818	1					
ANR	7685517	Argument	xmlout		7684818	0					
ANR	7685518	Identifier	xmlout		7684818	0					
ANR	7685519	Argument	"""        <Audio>%d</Audio>\\n"""		7684818	1					
ANR	7685520	PrimaryExpression	"""        <Audio>%d</Audio>\\n"""		7684818	0					
ANR	7685521	Argument	movie -> num_stk		7684818	2					
ANR	7685522	PtrMemberAccess	movie -> num_stk		7684818	0					
ANR	7685523	Identifier	movie		7684818	0					
ANR	7685524	Identifier	num_stk		7684818	1					
ANR	7685525	ExpressionStatement	"fprintf ( xmlout , ""        <Hint>%d</Hint>\\n"" , movie -> num_htk )"	294:4:13344:13406	7684818	49	True				
ANR	7685526	CallExpression	"fprintf ( xmlout , ""        <Hint>%d</Hint>\\n"" , movie -> num_htk )"		7684818	0					
ANR	7685527	Callee	fprintf		7684818	0					
ANR	7685528	Identifier	fprintf		7684818	0					
ANR	7685529	ArgumentList	xmlout		7684818	1					
ANR	7685530	Argument	xmlout		7684818	0					
ANR	7685531	Identifier	xmlout		7684818	0					
ANR	7685532	Argument	"""        <Hint>%d</Hint>\\n"""		7684818	1					
ANR	7685533	PrimaryExpression	"""        <Hint>%d</Hint>\\n"""		7684818	0					
ANR	7685534	Argument	movie -> num_htk		7684818	2					
ANR	7685535	PtrMemberAccess	movie -> num_htk		7684818	0					
ANR	7685536	Identifier	movie		7684818	0					
ANR	7685537	Identifier	num_htk		7684818	1					
ANR	7685538	IfStatement	if ( notes )		7684818	50					
ANR	7685539	Condition	notes	295:8:13416:13420	7684818	0	True				
ANR	7685540	Identifier	notes		7684818	0					
ANR	7685541	CompoundStatement		119:15:5380:5380	7684818	1					
ANR	7685542	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"" )"	296:8:13433:13568	7684818	0	True				
ANR	7685543	CallExpression	"fprintf ( xmlout , ""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"" )"		7684818	0					
ANR	7685544	Callee	fprintf		7684818	0					
ANR	7685545	Identifier	fprintf		7684818	0					
ANR	7685546	ArgumentList	xmlout		7684818	1					
ANR	7685547	Argument	xmlout		7684818	0					
ANR	7685548	Identifier	xmlout		7684818	0					
ANR	7685549	Argument	"""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"""		7684818	1					
ANR	7685550	PrimaryExpression	"""        <!-- Hint tracks for streaming video are not part of MJ2, but are a defined extension. -->\\n"""		7684818	0					
ANR	7685551	ExpressionStatement	"fprintf ( xmlout , ""      </TracksFound>\\n"" )"	300:4:13676:13719	7684818	51	True				
ANR	7685552	CallExpression	"fprintf ( xmlout , ""      </TracksFound>\\n"" )"		7684818	0					
ANR	7685553	Callee	fprintf		7684818	0					
ANR	7685554	Identifier	fprintf		7684818	0					
ANR	7685555	ArgumentList	xmlout		7684818	1					
ANR	7685556	Argument	xmlout		7684818	0					
ANR	7685557	Identifier	xmlout		7684818	0					
ANR	7685558	Argument	"""      </TracksFound>\\n"""		7684818	1					
ANR	7685559	PrimaryExpression	"""      </TracksFound>\\n"""		7684818	0					
ANR	7685560	ExpressionStatement	"fprintf ( xmlout , ""    </Statistics>\\n"" )"	301:4:13725:13765	7684818	52	True				
ANR	7685561	CallExpression	"fprintf ( xmlout , ""    </Statistics>\\n"" )"		7684818	0					
ANR	7685562	Callee	fprintf		7684818	0					
ANR	7685563	Identifier	fprintf		7684818	0					
ANR	7685564	ArgumentList	xmlout		7684818	1					
ANR	7685565	Argument	xmlout		7684818	0					
ANR	7685566	Identifier	xmlout		7684818	0					
ANR	7685567	Argument	"""    </Statistics>\\n"""		7684818	1					
ANR	7685568	PrimaryExpression	"""    </Statistics>\\n"""		7684818	0					
ANR	7685569	ExpressionStatement	tnum = 0	308:4:14052:14060	7684818	53	True				
ANR	7685570	AssignmentExpression	tnum = 0		7684818	0		=			
ANR	7685571	Identifier	tnum		7684818	0					
ANR	7685572	PrimaryExpression	0		7684818	1					
ANR	7685573	WhileStatement	while ( movie -> tk [ tnum ] . track_type != 0 )		7684818	54					
ANR	7685574	Condition	movie -> tk [ tnum ] . track_type != 0	309:11:14073:14103	7684818	0	True				
ANR	7685575	EqualityExpression	movie -> tk [ tnum ] . track_type != 0		7684818	0		!=			
ANR	7685576	MemberAccess	movie -> tk [ tnum ] . track_type		7684818	0					
ANR	7685577	ArrayIndexing	movie -> tk [ tnum ]		7684818	0					
ANR	7685578	PtrMemberAccess	movie -> tk		7684818	0					
ANR	7685579	Identifier	movie		7684818	0					
ANR	7685580	Identifier	tk		7684818	1					
ANR	7685581	Identifier	tnum		7684818	1					
ANR	7685582	Identifier	track_type		7684818	1					
ANR	7685583	PrimaryExpression	0		7684818	1					
ANR	7685584	CompoundStatement		133:44:6063:6063	7684818	1					
ANR	7685585	ExpressionStatement	tnum ++	310:8:14116:14123	7684818	0	True				
ANR	7685586	PostIncDecOperationExpression	tnum ++		7684818	0					
ANR	7685587	Identifier	tnum		7684818	0					
ANR	7685588	IncDec	++		7684818	1					
ANR	7685589	ExpressionStatement	track = & ( movie -> tk [ tnum ] )	313:4:14136:14162	7684818	55	True				
ANR	7685590	AssignmentExpression	track = & ( movie -> tk [ tnum ] )		7684818	0		=			
ANR	7685591	Identifier	track		7684818	0					
ANR	7685592	UnaryOperationExpression	& ( movie -> tk [ tnum ] )		7684818	1					
ANR	7685593	UnaryOperator	&		7684818	0					
ANR	7685594	ArrayIndexing	movie -> tk [ tnum ]		7684818	1					
ANR	7685595	PtrMemberAccess	movie -> tk		7684818	0					
ANR	7685596	Identifier	movie		7684818	0					
ANR	7685597	Identifier	tk		7684818	1					
ANR	7685598	Identifier	tnum		7684818	1					
ANR	7685599	ExpressionStatement	"xml_write_trak ( file , xmlout , track , tnum , sampleframe , event_mgr )"	315:4:14217:14282	7684818	56	True				
ANR	7685600	CallExpression	"xml_write_trak ( file , xmlout , track , tnum , sampleframe , event_mgr )"		7684818	0					
ANR	7685601	Callee	xml_write_trak		7684818	0					
ANR	7685602	Identifier	xml_write_trak		7684818	0					
ANR	7685603	ArgumentList	file		7684818	1					
ANR	7685604	Argument	file		7684818	0					
ANR	7685605	Identifier	file		7684818	0					
ANR	7685606	Argument	xmlout		7684818	1					
ANR	7685607	Identifier	xmlout		7684818	0					
ANR	7685608	Argument	track		7684818	2					
ANR	7685609	Identifier	track		7684818	0					
ANR	7685610	Argument	tnum		7684818	3					
ANR	7685611	Identifier	tnum		7684818	0					
ANR	7685612	Argument	sampleframe		7684818	4					
ANR	7685613	Identifier	sampleframe		7684818	0					
ANR	7685614	Argument	event_mgr		7684818	5					
ANR	7685615	Identifier	event_mgr		7684818	0					
ANR	7685616	ExpressionStatement	"xml_write_moov_udta ( xmlout , movie )"	318:4:14374:14432	7684818	57	True				
ANR	7685617	CallExpression	"xml_write_moov_udta ( xmlout , movie )"		7684818	0					
ANR	7685618	Callee	xml_write_moov_udta		7684818	0					
ANR	7685619	Identifier	xml_write_moov_udta		7684818	0					
ANR	7685620	ArgumentList	xmlout		7684818	1					
ANR	7685621	Argument	xmlout		7684818	0					
ANR	7685622	Identifier	xmlout		7684818	0					
ANR	7685623	Argument	movie		7684818	1					
ANR	7685624	Identifier	movie		7684818	0					
ANR	7685625	ExpressionStatement	"fprintf ( xmlout , ""  </MovieBox>\\n"" )"	320:4:14511:14547	7684818	58	True				
ANR	7685626	CallExpression	"fprintf ( xmlout , ""  </MovieBox>\\n"" )"		7684818	0					
ANR	7685627	Callee	fprintf		7684818	0					
ANR	7685628	Identifier	fprintf		7684818	0					
ANR	7685629	ArgumentList	xmlout		7684818	1					
ANR	7685630	Argument	xmlout		7684818	0					
ANR	7685631	Identifier	xmlout		7684818	0					
ANR	7685632	Argument	"""  </MovieBox>\\n"""		7684818	1					
ANR	7685633	PrimaryExpression	"""  </MovieBox>\\n"""		7684818	0					
ANR	7685634	ReturnStatement	return 0 ;	321:4:14553:14561	7684818	59	True				
ANR	7685635	PrimaryExpression	0		7684818	0					
ANR	7685636	ReturnType	int		7684818	1					
ANR	7685637	Identifier	xml_write_moov		7684818	2					
ANR	7685638	ParameterList	"FILE * file , FILE * xmlout , opj_mj2_t * movie , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		7684818	3					
ANR	7685639	Parameter	FILE * file	175:19:7924:7933	7684818	0	True				
ANR	7685640	ParameterType	FILE *		7684818	0					
ANR	7685641	Identifier	file		7684818	1					
ANR	7685642	Parameter	FILE * xmlout	175:31:7936:7947	7684818	1	True				
ANR	7685643	ParameterType	FILE *		7684818	0					
ANR	7685644	Identifier	xmlout		7684818	1					
ANR	7685645	Parameter	opj_mj2_t * movie	175:45:7950:7966	7684818	2	True				
ANR	7685646	ParameterType	opj_mj2_t *		7684818	0					
ANR	7685647	Identifier	movie		7684818	1					
ANR	7685648	Parameter	unsigned int sampleframe	176:19:7988:8011	7684818	3	True				
ANR	7685649	ParameterType	unsigned int		7684818	0					
ANR	7685650	Identifier	sampleframe		7684818	1					
ANR	7685651	Parameter	opj_event_mgr_t * event_mgr	176:45:8014:8039	7684818	4	True				
ANR	7685652	ParameterType	opj_event_mgr_t *		7684818	0					
ANR	7685653	Identifier	event_mgr		7684818	1					
ANR	7685654	CFGEntryNode	ENTRY		7684818		True				
ANR	7685655	CFGExitNode	EXIT		7684818		True				
ANR	7685656	Symbol	notes		7684818						
ANR	7685657	Symbol	movie -> rate		7684818						
ANR	7685658	Symbol	movie		7684818						
ANR	7685659	Symbol	sampleframe		7684818						
ANR	7685660	Symbol	* movie -> trans_matrix		7684818						
ANR	7685661	Symbol	movie -> duration		7684818						
ANR	7685662	Symbol	file		7684818						
ANR	7685663	Symbol	event_mgr		7684818						
ANR	7685664	Symbol	movie -> modification_time		7684818						
ANR	7685665	Symbol	movie -> creation_time		7684818						
ANR	7685666	Symbol	track		7684818						
ANR	7685667	Symbol	movie -> trans_matrix		7684818						
ANR	7685668	Symbol	derived		7684818						
ANR	7685669	Symbol	movie -> tk [ tnum ] . track_type		7684818						
ANR	7685670	Symbol	movie -> num_htk		7684818						
ANR	7685671	Symbol	tnum		7684818						
ANR	7685672	Symbol	raw		7684818						
ANR	7685673	Symbol	* tnum		7684818						
ANR	7685674	Symbol	xmlout		7684818						
ANR	7685675	Symbol	* movie		7684818						
ANR	7685676	Symbol	* * movie		7684818						
ANR	7685677	Symbol	movie -> tk		7684818						
ANR	7685678	Symbol	movie -> timescale		7684818						
ANR	7685679	Symbol	movie -> num_vtk		7684818						
ANR	7685680	Symbol	movie -> num_stk		7684818						
ANR	7685681	Symbol	* movie -> tk		7684818						
ANR	7685682	Symbol	movie -> volume		7684818						
ANR	7685683	Function	uint_to_chars	326:0:14589:14831							
ANR	7685684	FunctionDef	"uint_to_chars (unsigned int value , char * buf)"		7685683	0					
ANR	7685685	CompoundStatement		327:0:14639:14831	7685683	0					
ANR	7685686	IdentifierDeclStatement	int i ;	329:4:14679:14684	7685683	0	True				
ANR	7685687	IdentifierDecl	i		7685683	0					
ANR	7685688	IdentifierDeclType	int		7685683	0					
ANR	7685689	Identifier	i		7685683	1					
ANR	7685690	ForStatement	for ( i = 3 ; i >= 0 ; i -- )		7685683	1					
ANR	7685691	ForInit	i = 3 ;	330:9:14695:14700	7685683	0	True				
ANR	7685692	AssignmentExpression	i = 3		7685683	0		=			
ANR	7685693	Identifier	i		7685683	0					
ANR	7685694	PrimaryExpression	3		7685683	1					
ANR	7685695	Condition	i >= 0	330:16:14702:14707	7685683	1	True				
ANR	7685696	RelationalExpression	i >= 0		7685683	0		>=			
ANR	7685697	Identifier	i		7685683	0					
ANR	7685698	PrimaryExpression	0		7685683	1					
ANR	7685699	PostIncDecOperationExpression	i --	330:24:14710:14712	7685683	2	True				
ANR	7685700	Identifier	i		7685683	0					
ANR	7685701	IncDec	--		7685683	1					
ANR	7685702	CompoundStatement		4:29:75:75	7685683	3					
ANR	7685703	ExpressionStatement	buf [ i ] = ( value & 0x000000ff )	331:8:14725:14754	7685683	0	True				
ANR	7685704	AssignmentExpression	buf [ i ] = ( value & 0x000000ff )		7685683	0		=			
ANR	7685705	ArrayIndexing	buf [ i ]		7685683	0					
ANR	7685706	Identifier	buf		7685683	0					
ANR	7685707	Identifier	i		7685683	1					
ANR	7685708	BitAndExpression	value & 0x000000ff		7685683	1		&			
ANR	7685709	Identifier	value		7685683	0					
ANR	7685710	PrimaryExpression	0x000000ff		7685683	1					
ANR	7685711	ExpressionStatement	value = ( value >> 8 )	332:8:14764:14784	7685683	1	True				
ANR	7685712	AssignmentExpression	value = ( value >> 8 )		7685683	0		=			
ANR	7685713	Identifier	value		7685683	0					
ANR	7685714	ShiftExpression	value >> 8		7685683	1		>>			
ANR	7685715	Identifier	value		7685683	0					
ANR	7685716	PrimaryExpression	8		7685683	1					
ANR	7685717	ExpressionStatement	buf [ 4 ] = '\\0'	334:4:14796:14809	7685683	2	True				
ANR	7685718	AssignmentExpression	buf [ 4 ] = '\\0'		7685683	0		=			
ANR	7685719	ArrayIndexing	buf [ 4 ]		7685683	0					
ANR	7685720	Identifier	buf		7685683	0					
ANR	7685721	PrimaryExpression	4		7685683	1					
ANR	7685722	PrimaryExpression	'\\0'		7685683	1					
ANR	7685723	ReturnType	void		7685683	1					
ANR	7685724	Identifier	uint_to_chars		7685683	2					
ANR	7685725	ParameterList	"unsigned int value , char * buf"		7685683	3					
ANR	7685726	Parameter	unsigned int value	326:19:14608:14625	7685683	0	True				
ANR	7685727	ParameterType	unsigned int		7685683	0					
ANR	7685728	Identifier	value		7685683	1					
ANR	7685729	Parameter	char * buf	326:39:14628:14636	7685683	1	True				
ANR	7685730	ParameterType	char *		7685683	0					
ANR	7685731	Identifier	buf		7685683	1					
ANR	7685732	CFGEntryNode	ENTRY		7685683		True				
ANR	7685733	CFGExitNode	EXIT		7685683		True				
ANR	7685734	Symbol	buf		7685683						
ANR	7685735	Symbol	* buf		7685683						
ANR	7685736	Symbol	* i		7685683						
ANR	7685737	Symbol	i		7685683						
ANR	7685738	Symbol	value		7685683						
ANR	7685739	Function	UnixTimeToFileTime	341:0:14879:15474							
ANR	7685740	FunctionDef	"UnixTimeToFileTime (time_t t , LPFILETIME pft)"		7685739	0					
ANR	7685741	CompoundStatement		342:0:14929:15474	7685739	0					
ANR	7685742	IdentifierDeclStatement	LONGLONG ll ;	346:4:15224:15235	7685739	0	True				
ANR	7685743	IdentifierDecl	ll		7685739	0					
ANR	7685744	IdentifierDeclType	LONGLONG		7685739	0					
ANR	7685745	Identifier	ll		7685739	1					
ANR	7685746	ExpressionStatement	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"	347:4:15275:15326	7685739	1	True				
ANR	7685747	AssignmentExpression	"ll = Int32x32To64 ( t , 10000000 ) + 116444736000000000"		7685739	0		=			
ANR	7685748	Identifier	ll		7685739	0					
ANR	7685749	AdditiveExpression	"Int32x32To64 ( t , 10000000 ) + 116444736000000000"		7685739	1		+			
ANR	7685750	CallExpression	"Int32x32To64 ( t , 10000000 )"		7685739	0					
ANR	7685751	Callee	Int32x32To64		7685739	0					
ANR	7685752	Identifier	Int32x32To64		7685739	0					
ANR	7685753	ArgumentList	t		7685739	1					
ANR	7685754	Argument	t		7685739	0					
ANR	7685755	Identifier	t		7685739	0					
ANR	7685756	Argument	10000000		7685739	1					
ANR	7685757	PrimaryExpression	10000000		7685739	0					
ANR	7685758	PrimaryExpression	116444736000000000		7685739	1					
ANR	7685759	ExpressionStatement	pft -> dwLowDateTime = ( DWORD ) ll	348:4:15332:15362	7685739	2	True				
ANR	7685760	AssignmentExpression	pft -> dwLowDateTime = ( DWORD ) ll		7685739	0		=			
ANR	7685761	PtrMemberAccess	pft -> dwLowDateTime		7685739	0					
ANR	7685762	Identifier	pft		7685739	0					
ANR	7685763	Identifier	dwLowDateTime		7685739	1					
ANR	7685764	CastExpression	( DWORD ) ll		7685739	1					
ANR	7685765	CastTarget	DWORD		7685739	0					
ANR	7685766	Identifier	ll		7685739	1					
ANR	7685767	ExpressionStatement	pft -> dwHighDateTime = ( DWORD ) ( ll >> 32 )	350:4:15433:15472	7685739	3	True				
ANR	7685768	AssignmentExpression	pft -> dwHighDateTime = ( DWORD ) ( ll >> 32 )		7685739	0		=			
ANR	7685769	PtrMemberAccess	pft -> dwHighDateTime		7685739	0					
ANR	7685770	Identifier	pft		7685739	0					
ANR	7685771	Identifier	dwHighDateTime		7685739	1					
ANR	7685772	CastExpression	( DWORD ) ( ll >> 32 )		7685739	1					
ANR	7685773	CastTarget	DWORD		7685739	0					
ANR	7685774	ShiftExpression	ll >> 32		7685739	1		>>			
ANR	7685775	Identifier	ll		7685739	0					
ANR	7685776	PrimaryExpression	32		7685739	1					
ANR	7685777	ReturnType	void		7685739	1					
ANR	7685778	Identifier	UnixTimeToFileTime		7685739	2					
ANR	7685779	ParameterList	"time_t t , LPFILETIME pft"		7685739	3					
ANR	7685780	Parameter	time_t t	341:24:14903:14910	7685739	0	True				
ANR	7685781	ParameterType	time_t		7685739	0					
ANR	7685782	Identifier	t		7685739	1					
ANR	7685783	Parameter	LPFILETIME pft	341:34:14913:14926	7685739	1	True				
ANR	7685784	ParameterType	LPFILETIME		7685739	0					
ANR	7685785	Identifier	pft		7685739	1					
ANR	7685786	CFGEntryNode	ENTRY		7685739		True				
ANR	7685787	CFGExitNode	EXIT		7685739		True				
ANR	7685788	Symbol	ll		7685739						
ANR	7685789	Symbol	pft -> dwLowDateTime		7685739						
ANR	7685790	Symbol	t		7685739						
ANR	7685791	Symbol	* pft		7685739						
ANR	7685792	Symbol	Int32x32To64		7685739						
ANR	7685793	Symbol	pft		7685739						
ANR	7685794	Symbol	pft -> dwHighDateTime		7685739						
ANR	7685795	Function	UnixTimeToSystemTime	358:0:15697:15947							
ANR	7685796	FunctionDef	"UnixTimeToSystemTime (time_t t , LPSYSTEMTIME pst)"		7685795	0					
ANR	7685797	CompoundStatement		359:0:15751:15947	7685795	0					
ANR	7685798	IdentifierDeclStatement	FILETIME ft ;	361:4:15784:15795	7685795	0	True				
ANR	7685799	IdentifierDecl	ft		7685795	0					
ANR	7685800	IdentifierDeclType	FILETIME		7685795	0					
ANR	7685801	Identifier	ft		7685795	1					
ANR	7685802	ExpressionStatement	"UnixTimeToFileTime ( t , & ft )"	362:4:15801:15827	7685795	1	True				
ANR	7685803	CallExpression	"UnixTimeToFileTime ( t , & ft )"		7685795	0					
ANR	7685804	Callee	UnixTimeToFileTime		7685795	0					
ANR	7685805	Identifier	UnixTimeToFileTime		7685795	0					
ANR	7685806	ArgumentList	t		7685795	1					
ANR	7685807	Argument	t		7685795	0					
ANR	7685808	Identifier	t		7685795	0					
ANR	7685809	Argument	& ft		7685795	1					
ANR	7685810	UnaryOperationExpression	& ft		7685795	0					
ANR	7685811	UnaryOperator	&		7685795	0					
ANR	7685812	Identifier	ft		7685795	1					
ANR	7685813	ExpressionStatement	"FileTimeToLocalFileTime ( & ft , & ft )"	363:4:15833:15866	7685795	2	True				
ANR	7685814	CallExpression	"FileTimeToLocalFileTime ( & ft , & ft )"		7685795	0					
ANR	7685815	Callee	FileTimeToLocalFileTime		7685795	0					
ANR	7685816	Identifier	FileTimeToLocalFileTime		7685795	0					
ANR	7685817	ArgumentList	& ft		7685795	1					
ANR	7685818	Argument	& ft		7685795	0					
ANR	7685819	UnaryOperationExpression	& ft		7685795	0					
ANR	7685820	UnaryOperator	&		7685795	0					
ANR	7685821	Identifier	ft		7685795	1					
ANR	7685822	Argument	& ft		7685795	1					
ANR	7685823	UnaryOperationExpression	& ft		7685795	0					
ANR	7685824	UnaryOperator	&		7685795	0					
ANR	7685825	Identifier	ft		7685795	1					
ANR	7685826	ExpressionStatement	"FileTimeToSystemTime ( & ft , pst )"	364:4:15915:15945	7685795	3	True				
ANR	7685827	CallExpression	"FileTimeToSystemTime ( & ft , pst )"		7685795	0					
ANR	7685828	Callee	FileTimeToSystemTime		7685795	0					
ANR	7685829	Identifier	FileTimeToSystemTime		7685795	0					
ANR	7685830	ArgumentList	& ft		7685795	1					
ANR	7685831	Argument	& ft		7685795	0					
ANR	7685832	UnaryOperationExpression	& ft		7685795	0					
ANR	7685833	UnaryOperator	&		7685795	0					
ANR	7685834	Identifier	ft		7685795	1					
ANR	7685835	Argument	pst		7685795	1					
ANR	7685836	Identifier	pst		7685795	0					
ANR	7685837	ReturnType	void		7685795	1					
ANR	7685838	Identifier	UnixTimeToSystemTime		7685795	2					
ANR	7685839	ParameterList	"time_t t , LPSYSTEMTIME pst"		7685795	3					
ANR	7685840	Parameter	time_t t	358:26:15723:15730	7685795	0	True				
ANR	7685841	ParameterType	time_t		7685795	0					
ANR	7685842	Identifier	t		7685795	1					
ANR	7685843	Parameter	LPSYSTEMTIME pst	358:36:15733:15748	7685795	1	True				
ANR	7685844	ParameterType	LPSYSTEMTIME		7685795	0					
ANR	7685845	Identifier	pst		7685795	1					
ANR	7685846	CFGEntryNode	ENTRY		7685795		True				
ANR	7685847	CFGExitNode	EXIT		7685795		True				
ANR	7685848	Symbol	pst		7685795						
ANR	7685849	Symbol	t		7685795						
ANR	7685850	Symbol	& ft		7685795						
ANR	7685851	Symbol	ft		7685795						
ANR	7685852	Function	xml_time_out	369:0:15971:16352							
ANR	7685853	FunctionDef	"xml_time_out (FILE * xmlout , time_t t)"		7685852	0					
ANR	7685854	CompoundStatement		370:0:16013:16352	7685852	0					
ANR	7685855	IdentifierDeclStatement	SYSTEMTIME st ;	372:4:16046:16059	7685852	0	True				
ANR	7685856	IdentifierDecl	st		7685852	0					
ANR	7685857	IdentifierDeclType	SYSTEMTIME		7685852	0					
ANR	7685858	Identifier	st		7685852	1					
ANR	7685859	IdentifierDeclStatement	"char szLocalDate [ 255 ] , szLocalTime [ 255 ] ;"	373:4:16065:16104	7685852	1	True				
ANR	7685860	IdentifierDecl	szLocalDate [ 255 ]		7685852	0					
ANR	7685861	IdentifierDeclType	char [ 255 ]		7685852	0					
ANR	7685862	Identifier	szLocalDate		7685852	1					
ANR	7685863	PrimaryExpression	255		7685852	2					
ANR	7685864	IdentifierDecl	szLocalTime [ 255 ]		7685852	1					
ANR	7685865	IdentifierDeclType	char [ 255 ]		7685852	0					
ANR	7685866	Identifier	szLocalTime		7685852	1					
ANR	7685867	PrimaryExpression	255		7685852	2					
ANR	7685868	ExpressionStatement	"UnixTimeToSystemTime ( t , & st )"	374:4:16110:16138	7685852	2	True				
ANR	7685869	CallExpression	"UnixTimeToSystemTime ( t , & st )"		7685852	0					
ANR	7685870	Callee	UnixTimeToSystemTime		7685852	0					
ANR	7685871	Identifier	UnixTimeToSystemTime		7685852	0					
ANR	7685872	ArgumentList	t		7685852	1					
ANR	7685873	Argument	t		7685852	0					
ANR	7685874	Identifier	t		7685852	0					
ANR	7685875	Argument	& st		7685852	1					
ANR	7685876	UnaryOperationExpression	& st		7685852	0					
ANR	7685877	UnaryOperator	&		7685852	0					
ANR	7685878	Identifier	st		7685852	1					
ANR	7685879	ExpressionStatement	"GetDateFormat ( LOCALE_USER_DEFAULT , DATE_LONGDATE , & st , NULL , szLocalDate , 255 )"	375:4:16144:16222	7685852	3	True				
ANR	7685880	CallExpression	"GetDateFormat ( LOCALE_USER_DEFAULT , DATE_LONGDATE , & st , NULL , szLocalDate , 255 )"		7685852	0					
ANR	7685881	Callee	GetDateFormat		7685852	0					
ANR	7685882	Identifier	GetDateFormat		7685852	0					
ANR	7685883	ArgumentList	LOCALE_USER_DEFAULT		7685852	1					
ANR	7685884	Argument	LOCALE_USER_DEFAULT		7685852	0					
ANR	7685885	Identifier	LOCALE_USER_DEFAULT		7685852	0					
ANR	7685886	Argument	DATE_LONGDATE		7685852	1					
ANR	7685887	Identifier	DATE_LONGDATE		7685852	0					
ANR	7685888	Argument	& st		7685852	2					
ANR	7685889	UnaryOperationExpression	& st		7685852	0					
ANR	7685890	UnaryOperator	&		7685852	0					
ANR	7685891	Identifier	st		7685852	1					
ANR	7685892	Argument	NULL		7685852	3					
ANR	7685893	Identifier	NULL		7685852	0					
ANR	7685894	Argument	szLocalDate		7685852	4					
ANR	7685895	Identifier	szLocalDate		7685852	0					
ANR	7685896	Argument	255		7685852	5					
ANR	7685897	PrimaryExpression	255		7685852	0					
ANR	7685898	ExpressionStatement	"GetTimeFormat ( LOCALE_USER_DEFAULT , 0 , & st , NULL , szLocalTime , 255 )"	376:4:16228:16294	7685852	4	True				
ANR	7685899	CallExpression	"GetTimeFormat ( LOCALE_USER_DEFAULT , 0 , & st , NULL , szLocalTime , 255 )"		7685852	0					
ANR	7685900	Callee	GetTimeFormat		7685852	0					
ANR	7685901	Identifier	GetTimeFormat		7685852	0					
ANR	7685902	ArgumentList	LOCALE_USER_DEFAULT		7685852	1					
ANR	7685903	Argument	LOCALE_USER_DEFAULT		7685852	0					
ANR	7685904	Identifier	LOCALE_USER_DEFAULT		7685852	0					
ANR	7685905	Argument	0		7685852	1					
ANR	7685906	PrimaryExpression	0		7685852	0					
ANR	7685907	Argument	& st		7685852	2					
ANR	7685908	UnaryOperationExpression	& st		7685852	0					
ANR	7685909	UnaryOperator	&		7685852	0					
ANR	7685910	Identifier	st		7685852	1					
ANR	7685911	Argument	NULL		7685852	3					
ANR	7685912	Identifier	NULL		7685852	0					
ANR	7685913	Argument	szLocalTime		7685852	4					
ANR	7685914	Identifier	szLocalTime		7685852	0					
ANR	7685915	Argument	255		7685852	5					
ANR	7685916	PrimaryExpression	255		7685852	0					
ANR	7685917	ExpressionStatement	"fprintf ( xmlout , ""%s %s"" , szLocalDate , szLocalTime )"	377:4:16300:16350	7685852	5	True				
ANR	7685918	CallExpression	"fprintf ( xmlout , ""%s %s"" , szLocalDate , szLocalTime )"		7685852	0					
ANR	7685919	Callee	fprintf		7685852	0					
ANR	7685920	Identifier	fprintf		7685852	0					
ANR	7685921	ArgumentList	xmlout		7685852	1					
ANR	7685922	Argument	xmlout		7685852	0					
ANR	7685923	Identifier	xmlout		7685852	0					
ANR	7685924	Argument	"""%s %s"""		7685852	1					
ANR	7685925	PrimaryExpression	"""%s %s"""		7685852	0					
ANR	7685926	Argument	szLocalDate		7685852	2					
ANR	7685927	Identifier	szLocalDate		7685852	0					
ANR	7685928	Argument	szLocalTime		7685852	3					
ANR	7685929	Identifier	szLocalTime		7685852	0					
ANR	7685930	ReturnType	void		7685852	1					
ANR	7685931	Identifier	xml_time_out		7685852	2					
ANR	7685932	ParameterList	"FILE * xmlout , time_t t"		7685852	3					
ANR	7685933	Parameter	FILE * xmlout	369:18:15989:16000	7685852	0	True				
ANR	7685934	ParameterType	FILE *		7685852	0					
ANR	7685935	Identifier	xmlout		7685852	1					
ANR	7685936	Parameter	time_t t	369:32:16003:16010	7685852	1	True				
ANR	7685937	ParameterType	time_t		7685852	0					
ANR	7685938	Identifier	t		7685852	1					
ANR	7685939	CFGEntryNode	ENTRY		7685852		True				
ANR	7685940	CFGExitNode	EXIT		7685852		True				
ANR	7685941	Symbol	st		7685852						
ANR	7685942	Symbol	szLocalDate		7685852						
ANR	7685943	Symbol	NULL		7685852						
ANR	7685944	Symbol	t		7685852						
ANR	7685945	Symbol	DATE_LONGDATE		7685852						
ANR	7685946	Symbol	LOCALE_USER_DEFAULT		7685852						
ANR	7685947	Symbol	szLocalTime		7685852						
ANR	7685948	Symbol	& st		7685852						
ANR	7685949	Symbol	xmlout		7685852						
ANR	7685950	Function	xml_write_moov_udta	384:0:16404:17726							
ANR	7685951	FunctionDef	"xml_write_moov_udta (FILE * xmlout , opj_mj2_t * movie)"		7685950	0					
ANR	7685952	CompoundStatement		385:0:16462:17726	7685950	0					
ANR	7685953	Statement	IMAGINE	391:4:16741:16747	7685950	0	True				
ANR	7685954	Statement	movie	391:12:16749:16753	7685950	1	True				
ANR	7685955	Statement	->	391:17:16754:16755	7685950	2	True				
ANR	7685956	Statement	udta	391:19:16756:16759	7685950	3	True				
ANR	7685957	Statement	","	391:23:16760:16760	7685950	4	True				
ANR	7685958	Statement	movie	391:25:16762:16766	7685950	5	True				
ANR	7685959	Statement	->	391:30:16767:16768	7685950	6	True				
ANR	7685960	Statement	copyright_count	391:32:16769:16783	7685950	7	True				
ANR	7685961	Statement	","	391:47:16784:16784	7685950	8	True				
ANR	7685962	Statement	movie	392:12:16798:16802	7685950	9	True				
ANR	7685963	Statement	->	392:17:16803:16804	7685950	10	True				
ANR	7685964	Statement	copyright_language	392:19:16805:16822	7685950	11	True				
ANR	7685965	Statement	[	392:37:16823:16823	7685950	12	True				
ANR	7685966	Statement	i	392:38:16824:16824	7685950	13	True				
ANR	7685967	Statement	]	392:39:16825:16825	7685950	14	True				
ANR	7685968	Statement	(	392:40:16826:16826	7685950	15	True				
ANR	7685969	Statement	array	392:41:16827:16831	7685950	16	True				
ANR	7685970	Statement	of	392:47:16833:16834	7685950	17	True				
ANR	7685971	Statement	16	392:50:16836:16837	7685950	18	True				
ANR	7685972	Statement	bit	392:52:16838:16840	7685950	19	True				
ANR	7685973	Statement	ints	392:56:16842:16845	7685950	20	True				
ANR	7685974	Statement	)	392:60:16846:16846	7685950	21	True				
ANR	7685975	Statement	","	392:61:16847:16847	7685950	22	True				
ANR	7685976	Statement	movie	393:12:16861:16865	7685950	23	True				
ANR	7685977	Statement	->	393:17:16866:16867	7685950	24	True				
ANR	7685978	Statement	copyright_notice	393:19:16868:16883	7685950	25	True				
ANR	7685979	Statement	[	393:35:16884:16884	7685950	26	True				
ANR	7685980	Statement	i	393:36:16885:16885	7685950	27	True				
ANR	7685981	Statement	]	393:37:16886:16886	7685950	28	True				
ANR	7685982	Statement	(	393:38:16887:16887	7685950	29	True				
ANR	7685983	Statement	array	393:39:16888:16892	7685950	30	True				
ANR	7685984	Statement	of	393:45:16894:16895	7685950	31	True				
ANR	7685985	Statement	buffers	393:48:16897:16903	7685950	32	True				
ANR	7685986	Statement	)	393:55:16904:16904	7685950	33	True				
ANR	7685987	Statement	PROBABLY	394:12:16918:16925	7685950	34	True				
ANR	7685988	Statement	ALSO	394:21:16927:16930	7685950	35	True				
ANR	7685989	Statement	NEED	394:26:16932:16935	7685950	36	True				
ANR	7685990	Statement	movie	394:31:16937:16941	7685950	37	True				
ANR	7685991	Statement	->	394:36:16942:16943	7685950	38	True				
ANR	7685992	Statement	udta_len	394:38:16944:16951	7685950	39	True				
ANR	7685993	Statement	or	394:47:16953:16954	7685950	40	True				
ANR	7685994	Statement	special	394:50:16956:16962	7685950	41	True				
ANR	7685995	Statement	handler	394:58:16964:16970	7685950	42	True				
ANR	7685996	Statement	for	394:66:16972:16974	7685950	43	True				
ANR	7685997	Statement	non	394:70:16976:16978	7685950	44	True				
ANR	7685998	Statement	-	394:74:16980:16980	7685950	45	True				
ANR	7685999	IdentifierDeclStatement	standard boxes char buf [ 5 ] ;	394:76:16982:17020	7685950	46	True				
ANR	7686000	IdentifierDecl	buf [ 5 ]		7685950	0					
ANR	7686001	IdentifierDeclType	standard boxes char [ 5 ]		7685950	0					
ANR	7686002	Identifier	buf		7685950	1					
ANR	7686003	PrimaryExpression	5		7685950	2					
ANR	7686004	IdentifierDeclStatement	int i ;	396:4:17026:17031	7685950	47	True				
ANR	7686005	IdentifierDecl	i		7685950	0					
ANR	7686006	IdentifierDeclType	int		7685950	0					
ANR	7686007	Identifier	i		7685950	1					
ANR	7686008	IfStatement	if ( movie -> udta != 1 )		7685950	48					
ANR	7686009	Condition	movie -> udta != 1	398:8:17042:17057	7685950	0	True				
ANR	7686010	EqualityExpression	movie -> udta != 1		7685950	0		!=			
ANR	7686011	PtrMemberAccess	movie -> udta		7685950	0					
ANR	7686012	Identifier	movie		7685950	0					
ANR	7686013	Identifier	udta		7685950	1					
ANR	7686014	PrimaryExpression	1		7685950	1					
ANR	7686015	CompoundStatement		14:26:597:597	7685950	1					
ANR	7686016	ReturnStatement	return ;	399:8:17070:17076	7685950	0	True				
ANR	7686017	ExpressionStatement	"fprintf ( xmlout , ""    <UserData BoxType=\\""udta\\"">\\n"" )"	402:4:17110:17165	7685950	49	True				
ANR	7686018	CallExpression	"fprintf ( xmlout , ""    <UserData BoxType=\\""udta\\"">\\n"" )"		7685950	0					
ANR	7686019	Callee	fprintf		7685950	0					
ANR	7686020	Identifier	fprintf		7685950	0					
ANR	7686021	ArgumentList	xmlout		7685950	1					
ANR	7686022	Argument	xmlout		7685950	0					
ANR	7686023	Identifier	xmlout		7685950	0					
ANR	7686024	Argument	"""    <UserData BoxType=\\""udta\\"">\\n"""		7685950	1					
ANR	7686025	PrimaryExpression	"""    <UserData BoxType=\\""udta\\"">\\n"""		7685950	0					
ANR	7686026	ForStatement	for ( i = 0 ; i < movie -> copyright_count ; i ++ )		7685950	50					
ANR	7686027	ForInit	i = 0 ;	403:9:17176:17181	7685950	0	True				
ANR	7686028	AssignmentExpression	i = 0		7685950	0		=			
ANR	7686029	Identifier	i		7685950	0					
ANR	7686030	PrimaryExpression	0		7685950	1					
ANR	7686031	Condition	i < movie -> copyright_count	403:16:17183:17208	7685950	1	True				
ANR	7686032	RelationalExpression	i < movie -> copyright_count		7685950	0		<			
ANR	7686033	Identifier	i		7685950	0					
ANR	7686034	PtrMemberAccess	movie -> copyright_count		7685950	1					
ANR	7686035	Identifier	movie		7685950	0					
ANR	7686036	Identifier	copyright_count		7685950	1					
ANR	7686037	PostIncDecOperationExpression	i ++	403:44:17211:17213	7685950	2	True				
ANR	7686038	Identifier	i		7685950	0					
ANR	7686039	IncDec	++		7685950	1					
ANR	7686040	CompoundStatement		19:49:753:753	7685950	3					
ANR	7686041	ExpressionStatement	"fprintf ( xmlout , ""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"	404:8:17226:17322	7685950	0	True				
ANR	7686042	CallExpression	"fprintf ( xmlout , ""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"		7685950	0					
ANR	7686043	Callee	fprintf		7685950	0					
ANR	7686044	Identifier	fprintf		7685950	0					
ANR	7686045	ArgumentList	xmlout		7685950	1					
ANR	7686046	Argument	xmlout		7685950	0					
ANR	7686047	Identifier	xmlout		7685950	0					
ANR	7686048	Argument	"""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		7685950	1					
ANR	7686049	PrimaryExpression	"""      <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		7685950	0					
ANR	7686050	Argument	i + 1		7685950	2					
ANR	7686051	AdditiveExpression	i + 1		7685950	0		+			
ANR	7686052	Identifier	i		7685950	0					
ANR	7686053	PrimaryExpression	1		7685950	1					
ANR	7686054	ExpressionStatement	"int16_to_3packedchars ( ( short int ) movie -> copyright_languages [ i ] , buf )"	406:8:17332:17400	7685950	1	True				
ANR	7686055	CallExpression	"int16_to_3packedchars ( ( short int ) movie -> copyright_languages [ i ] , buf )"		7685950	0					
ANR	7686056	Callee	int16_to_3packedchars		7685950	0					
ANR	7686057	Identifier	int16_to_3packedchars		7685950	0					
ANR	7686058	ArgumentList	( short int ) movie -> copyright_languages [ i ]		7685950	1					
ANR	7686059	Argument	( short int ) movie -> copyright_languages [ i ]		7685950	0					
ANR	7686060	CastExpression	( short int ) movie -> copyright_languages [ i ]		7685950	0					
ANR	7686061	CastTarget	short int		7685950	0					
ANR	7686062	ArrayIndexing	movie -> copyright_languages [ i ]		7685950	1					
ANR	7686063	PtrMemberAccess	movie -> copyright_languages		7685950	0					
ANR	7686064	Identifier	movie		7685950	0					
ANR	7686065	Identifier	copyright_languages		7685950	1					
ANR	7686066	Identifier	i		7685950	1					
ANR	7686067	Argument	buf		7685950	1					
ANR	7686068	Identifier	buf		7685950	0					
ANR	7686069	ExpressionStatement	"fprintf ( xmlout , ""        <Language>%s</Language>\\n"" , buf )"	407:8:17410:17468	7685950	2	True				
ANR	7686070	CallExpression	"fprintf ( xmlout , ""        <Language>%s</Language>\\n"" , buf )"		7685950	0					
ANR	7686071	Callee	fprintf		7685950	0					
ANR	7686072	Identifier	fprintf		7685950	0					
ANR	7686073	ArgumentList	xmlout		7685950	1					
ANR	7686074	Argument	xmlout		7685950	0					
ANR	7686075	Identifier	xmlout		7685950	0					
ANR	7686076	Argument	"""        <Language>%s</Language>\\n"""		7685950	1					
ANR	7686077	PrimaryExpression	"""        <Language>%s</Language>\\n"""		7685950	0					
ANR	7686078	Argument	buf		7685950	2					
ANR	7686079	Identifier	buf		7685950	0					
ANR	7686080	ExpressionStatement	"fprintf ( xmlout , ""        <Notice>%s</Notice>\\n"" , movie -> copyright_notices [ i ] )"	408:8:17495:17573	7685950	3	True				
ANR	7686081	CallExpression	"fprintf ( xmlout , ""        <Notice>%s</Notice>\\n"" , movie -> copyright_notices [ i ] )"		7685950	0					
ANR	7686082	Callee	fprintf		7685950	0					
ANR	7686083	Identifier	fprintf		7685950	0					
ANR	7686084	ArgumentList	xmlout		7685950	1					
ANR	7686085	Argument	xmlout		7685950	0					
ANR	7686086	Identifier	xmlout		7685950	0					
ANR	7686087	Argument	"""        <Notice>%s</Notice>\\n"""		7685950	1					
ANR	7686088	PrimaryExpression	"""        <Notice>%s</Notice>\\n"""		7685950	0					
ANR	7686089	Argument	movie -> copyright_notices [ i ]		7685950	2					
ANR	7686090	ArrayIndexing	movie -> copyright_notices [ i ]		7685950	0					
ANR	7686091	PtrMemberAccess	movie -> copyright_notices		7685950	0					
ANR	7686092	Identifier	movie		7685950	0					
ANR	7686093	Identifier	copyright_notices		7685950	1					
ANR	7686094	Identifier	i		7685950	1					
ANR	7686095	ExpressionStatement	"fprintf ( xmlout , ""      </Copyright>\\n"" , i + 1 )"	409:8:17583:17630	7685950	4	True				
ANR	7686096	CallExpression	"fprintf ( xmlout , ""      </Copyright>\\n"" , i + 1 )"		7685950	0					
ANR	7686097	Callee	fprintf		7685950	0					
ANR	7686098	Identifier	fprintf		7685950	0					
ANR	7686099	ArgumentList	xmlout		7685950	1					
ANR	7686100	Argument	xmlout		7685950	0					
ANR	7686101	Identifier	xmlout		7685950	0					
ANR	7686102	Argument	"""      </Copyright>\\n"""		7685950	1					
ANR	7686103	PrimaryExpression	"""      </Copyright>\\n"""		7685950	0					
ANR	7686104	Argument	i + 1		7685950	2					
ANR	7686105	AdditiveExpression	i + 1		7685950	0		+			
ANR	7686106	Identifier	i		7685950	0					
ANR	7686107	PrimaryExpression	1		7685950	1					
ANR	7686108	ExpressionStatement	"fprintf ( xmlout , ""    </UserData>\\n"" )"	412:4:17678:17717	7685950	51	True				
ANR	7686109	CallExpression	"fprintf ( xmlout , ""    </UserData>\\n"" )"		7685950	0					
ANR	7686110	Callee	fprintf		7685950	0					
ANR	7686111	Identifier	fprintf		7685950	0					
ANR	7686112	ArgumentList	xmlout		7685950	1					
ANR	7686113	Argument	xmlout		7685950	0					
ANR	7686114	Identifier	xmlout		7685950	0					
ANR	7686115	Argument	"""    </UserData>\\n"""		7685950	1					
ANR	7686116	PrimaryExpression	"""    </UserData>\\n"""		7685950	0					
ANR	7686117	ReturnType	void		7685950	1					
ANR	7686118	Identifier	xml_write_moov_udta		7685950	2					
ANR	7686119	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		7685950	3					
ANR	7686120	Parameter	FILE * xmlout	384:25:16429:16440	7685950	0	True				
ANR	7686121	ParameterType	FILE *		7685950	0					
ANR	7686122	Identifier	xmlout		7685950	1					
ANR	7686123	Parameter	opj_mj2_t * movie	384:39:16443:16459	7685950	1	True				
ANR	7686124	ParameterType	opj_mj2_t *		7685950	0					
ANR	7686125	Identifier	movie		7685950	1					
ANR	7686126	CFGEntryNode	ENTRY		7685950		True				
ANR	7686127	CFGExitNode	EXIT		7685950		True				
ANR	7686128	Symbol	* movie -> copyright_notices		7685950						
ANR	7686129	Symbol	movie		7685950						
ANR	7686130	Symbol	movie -> udta		7685950						
ANR	7686131	Symbol	i		7685950						
ANR	7686132	Symbol	movie -> copyright_notices		7685950						
ANR	7686133	Symbol	movie -> copyright_count		7685950						
ANR	7686134	Symbol	xmlout		7685950						
ANR	7686135	Symbol	* movie		7685950						
ANR	7686136	Symbol	movie -> copyright_languages		7685950						
ANR	7686137	Symbol	* * movie		7685950						
ANR	7686138	Symbol	buf		7685950						
ANR	7686139	Symbol	* i		7685950						
ANR	7686140	Symbol	* movie -> copyright_languages		7685950						
ANR	7686141	Function	xml_write_free_and_skip	416:0:17729:18895							
ANR	7686142	FunctionDef	"xml_write_free_and_skip (FILE * xmlout , opj_mj2_t * movie)"		7686141	0					
ANR	7686143	CompoundStatement		417:0:17791:18895	7686141	0					
ANR	7686144	Statement	IMAGINE	422:4:18032:18038	7686141	0	True				
ANR	7686145	Statement	movie	422:12:18040:18044	7686141	1	True				
ANR	7686146	Statement	->	422:17:18045:18046	7686141	2	True				
ANR	7686147	Statement	free_and_skip	422:19:18047:18059	7686141	3	True				
ANR	7686148	Statement	","	422:32:18060:18060	7686141	4	True				
ANR	7686149	Statement	movie	422:34:18062:18066	7686141	5	True				
ANR	7686150	Statement	->	422:39:18067:18068	7686141	6	True				
ANR	7686151	Statement	free_and_skip_count	422:41:18069:18087	7686141	7	True				
ANR	7686152	Statement	","	422:60:18088:18088	7686141	8	True				
ANR	7686153	Statement	movie	423:12:18102:18106	7686141	9	True				
ANR	7686154	Statement	->	423:17:18107:18108	7686141	10	True				
ANR	7686155	Statement	free_and_skip_content	423:19:18109:18129	7686141	11	True				
ANR	7686156	Statement	[	423:40:18130:18130	7686141	12	True				
ANR	7686157	Statement	i	423:41:18131:18131	7686141	13	True				
ANR	7686158	Statement	]	423:42:18132:18132	7686141	14	True				
ANR	7686159	Statement	(	423:43:18133:18133	7686141	15	True				
ANR	7686160	Statement	array	423:44:18134:18138	7686141	16	True				
ANR	7686161	Statement	of	423:50:18140:18141	7686141	17	True				
ANR	7686162	Statement	buffers	423:53:18143:18149	7686141	18	True				
ANR	7686163	Statement	)	423:60:18150:18150	7686141	19	True				
ANR	7686164	Statement	","	423:61:18151:18151	7686141	20	True				
ANR	7686165	Statement	movie	424:12:18165:18169	7686141	21	True				
ANR	7686166	Statement	->	424:17:18170:18171	7686141	22	True				
ANR	7686167	Statement	free_and_skip_len	424:19:18172:18188	7686141	23	True				
ANR	7686168	Statement	[	424:36:18189:18189	7686141	24	True				
ANR	7686169	Statement	i	424:37:18190:18190	7686141	25	True				
ANR	7686170	Statement	]	424:38:18191:18191	7686141	26	True				
ANR	7686171	Statement	(	424:39:18192:18192	7686141	27	True				
ANR	7686172	Statement	array	424:40:18193:18197	7686141	28	True				
ANR	7686173	Statement	of	424:46:18199:18200	7686141	29	True				
ANR	7686174	Statement	ints	424:49:18202:18205	7686141	30	True				
ANR	7686175	Statement	)	424:53:18206:18206	7686141	31	True				
ANR	7686176	Statement	","	424:54:18207:18207	7686141	32	True				
ANR	7686177	Statement	movie	424:56:18209:18213	7686141	33	True				
ANR	7686178	Statement	->	424:61:18214:18215	7686141	34	True				
ANR	7686179	Statement	is_skip	424:63:18216:18222	7686141	35	True				
ANR	7686180	Statement	[	424:70:18223:18223	7686141	36	True				
ANR	7686181	Statement	i	424:71:18224:18224	7686141	37	True				
ANR	7686182	Statement	]	424:72:18225:18225	7686141	38	True				
ANR	7686183	Statement	(	424:73:18226:18226	7686141	39	True				
ANR	7686184	Statement	array	424:74:18227:18231	7686141	40	True				
ANR	7686185	Statement	of	424:80:18233:18234	7686141	41	True				
ANR	7686186	Statement	BOOL	424:83:18236:18239	7686141	42	True				
ANR	7686187	Statement	)	424:87:18240:18240	7686141	43	True				
ANR	7686188	IdentifierDeclStatement	int i ;	425:12:18254:18259	7686141	44	True				
ANR	7686189	IdentifierDecl	i		7686141	0					
ANR	7686190	IdentifierDeclType	int		7686141	0					
ANR	7686191	Identifier	i		7686141	1					
ANR	7686192	IfStatement	if ( movie -> free_and_skip != 1 )		7686141	45					
ANR	7686193	Condition	movie -> free_and_skip != 1	427:8:18270:18294	7686141	0	True				
ANR	7686194	EqualityExpression	movie -> free_and_skip != 1		7686141	0		!=			
ANR	7686195	PtrMemberAccess	movie -> free_and_skip		7686141	0					
ANR	7686196	Identifier	movie		7686141	0					
ANR	7686197	Identifier	free_and_skip		7686141	1					
ANR	7686198	PrimaryExpression	1		7686141	1					
ANR	7686199	CompoundStatement		11:35:505:505	7686141	1					
ANR	7686200	ReturnStatement	return ;	428:8:18307:18313	7686141	0	True				
ANR	7686201	ForStatement	for ( i = 0 ; i < movie -> free_and_skip_count ; i ++ )		7686141	46					
ANR	7686202	ForInit	i = 0 ;	431:9:18352:18357	7686141	0	True				
ANR	7686203	AssignmentExpression	i = 0		7686141	0		=			
ANR	7686204	Identifier	i		7686141	0					
ANR	7686205	PrimaryExpression	0		7686141	1					
ANR	7686206	Condition	i < movie -> free_and_skip_count	431:16:18359:18388	7686141	1	True				
ANR	7686207	RelationalExpression	i < movie -> free_and_skip_count		7686141	0		<			
ANR	7686208	Identifier	i		7686141	0					
ANR	7686209	PtrMemberAccess	movie -> free_and_skip_count		7686141	1					
ANR	7686210	Identifier	movie		7686141	0					
ANR	7686211	Identifier	free_and_skip_count		7686141	1					
ANR	7686212	PostIncDecOperationExpression	i ++	431:48:18391:18393	7686141	2	True				
ANR	7686213	Identifier	i		7686141	0					
ANR	7686214	IncDec	++		7686141	1					
ANR	7686215	CompoundStatement		15:53:604:604	7686141	3					
ANR	7686216	IfStatement	if ( movie -> is_skip [ i ] )		7686141	0					
ANR	7686217	Condition	movie -> is_skip [ i ]	432:12:18410:18426	7686141	0	True				
ANR	7686218	ArrayIndexing	movie -> is_skip [ i ]		7686141	0					
ANR	7686219	PtrMemberAccess	movie -> is_skip		7686141	0					
ANR	7686220	Identifier	movie		7686141	0					
ANR	7686221	Identifier	is_skip		7686141	1					
ANR	7686222	Identifier	i		7686141	1					
ANR	7686223	CompoundStatement		16:31:637:637	7686141	1					
ANR	7686224	ExpressionStatement	"fprintf ( xmlout , ""  <Skip BoxType=\\""skip\\"">\\n"" )"	433:12:18443:18492	7686141	0	True				
ANR	7686225	CallExpression	"fprintf ( xmlout , ""  <Skip BoxType=\\""skip\\"">\\n"" )"		7686141	0					
ANR	7686226	Callee	fprintf		7686141	0					
ANR	7686227	Identifier	fprintf		7686141	0					
ANR	7686228	ArgumentList	xmlout		7686141	1					
ANR	7686229	Argument	xmlout		7686141	0					
ANR	7686230	Identifier	xmlout		7686141	0					
ANR	7686231	Argument	"""  <Skip BoxType=\\""skip\\"">\\n"""		7686141	1					
ANR	7686232	PrimaryExpression	"""  <Skip BoxType=\\""skip\\"">\\n"""		7686141	0					
ANR	7686233	ElseStatement	else		7686141	0					
ANR	7686234	CompoundStatement		18:15:717:717	7686141	0					
ANR	7686235	ExpressionStatement	"fprintf ( xmlout , ""  <Free BoxType=\\""free\\"">\\n"" )"	435:12:18523:18572	7686141	0	True				
ANR	7686236	CallExpression	"fprintf ( xmlout , ""  <Free BoxType=\\""free\\"">\\n"" )"		7686141	0					
ANR	7686237	Callee	fprintf		7686141	0					
ANR	7686238	Identifier	fprintf		7686141	0					
ANR	7686239	ArgumentList	xmlout		7686141	1					
ANR	7686240	Argument	xmlout		7686141	0					
ANR	7686241	Identifier	xmlout		7686141	0					
ANR	7686242	Argument	"""  <Free BoxType=\\""free\\"">\\n"""		7686141	1					
ANR	7686243	PrimaryExpression	"""  <Free BoxType=\\""free\\"">\\n"""		7686141	0					
ANR	7686244	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , movie -> free_and_skip_contents [ i ] , movie -> free_and_skip_len [ i ] )"	438:8:18593:18725	7686141	1	True				
ANR	7686245	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , movie -> free_and_skip_contents [ i ] , movie -> free_and_skip_len [ i ] )"		7686141	0					
ANR	7686246	Callee	xml_out_dump_hex_and_ascii		7686141	0					
ANR	7686247	Identifier	xml_out_dump_hex_and_ascii		7686141	0					
ANR	7686248	ArgumentList	xmlout		7686141	1					
ANR	7686249	Argument	xmlout		7686141	0					
ANR	7686250	Identifier	xmlout		7686141	0					
ANR	7686251	Argument	movie -> free_and_skip_contents [ i ]		7686141	1					
ANR	7686252	ArrayIndexing	movie -> free_and_skip_contents [ i ]		7686141	0					
ANR	7686253	PtrMemberAccess	movie -> free_and_skip_contents		7686141	0					
ANR	7686254	Identifier	movie		7686141	0					
ANR	7686255	Identifier	free_and_skip_contents		7686141	1					
ANR	7686256	Identifier	i		7686141	1					
ANR	7686257	Argument	movie -> free_and_skip_len [ i ]		7686141	2					
ANR	7686258	ArrayIndexing	movie -> free_and_skip_len [ i ]		7686141	0					
ANR	7686259	PtrMemberAccess	movie -> free_and_skip_len		7686141	0					
ANR	7686260	Identifier	movie		7686141	0					
ANR	7686261	Identifier	free_and_skip_len		7686141	1					
ANR	7686262	Identifier	i		7686141	1					
ANR	7686263	IfStatement	if ( movie -> is_skip [ i ] )		7686141	2					
ANR	7686264	Condition	movie -> is_skip [ i ]	441:12:18740:18756	7686141	0	True				
ANR	7686265	ArrayIndexing	movie -> is_skip [ i ]		7686141	0					
ANR	7686266	PtrMemberAccess	movie -> is_skip		7686141	0					
ANR	7686267	Identifier	movie		7686141	0					
ANR	7686268	Identifier	is_skip		7686141	1					
ANR	7686269	Identifier	i		7686141	1					
ANR	7686270	CompoundStatement		25:31:967:967	7686141	1					
ANR	7686271	ExpressionStatement	"fprintf ( xmlout , ""  </Skip>\\n"" )"	442:12:18773:18806	7686141	0	True				
ANR	7686272	CallExpression	"fprintf ( xmlout , ""  </Skip>\\n"" )"		7686141	0					
ANR	7686273	Callee	fprintf		7686141	0					
ANR	7686274	Identifier	fprintf		7686141	0					
ANR	7686275	ArgumentList	xmlout		7686141	1					
ANR	7686276	Argument	xmlout		7686141	0					
ANR	7686277	Identifier	xmlout		7686141	0					
ANR	7686278	Argument	"""  </Skip>\\n"""		7686141	1					
ANR	7686279	PrimaryExpression	"""  </Skip>\\n"""		7686141	0					
ANR	7686280	ElseStatement	else		7686141	0					
ANR	7686281	CompoundStatement		27:15:1031:1031	7686141	0					
ANR	7686282	ExpressionStatement	"fprintf ( xmlout , ""  </Free>\\n"" )"	444:12:18837:18870	7686141	0	True				
ANR	7686283	CallExpression	"fprintf ( xmlout , ""  </Free>\\n"" )"		7686141	0					
ANR	7686284	Callee	fprintf		7686141	0					
ANR	7686285	Identifier	fprintf		7686141	0					
ANR	7686286	ArgumentList	xmlout		7686141	1					
ANR	7686287	Argument	xmlout		7686141	0					
ANR	7686288	Identifier	xmlout		7686141	0					
ANR	7686289	Argument	"""  </Free>\\n"""		7686141	1					
ANR	7686290	PrimaryExpression	"""  </Free>\\n"""		7686141	0					
ANR	7686291	ReturnType	void		7686141	1					
ANR	7686292	Identifier	xml_write_free_and_skip		7686141	2					
ANR	7686293	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		7686141	3					
ANR	7686294	Parameter	FILE * xmlout	416:29:17758:17769	7686141	0	True				
ANR	7686295	ParameterType	FILE *		7686141	0					
ANR	7686296	Identifier	xmlout		7686141	1					
ANR	7686297	Parameter	opj_mj2_t * movie	416:43:17772:17788	7686141	1	True				
ANR	7686298	ParameterType	opj_mj2_t *		7686141	0					
ANR	7686299	Identifier	movie		7686141	1					
ANR	7686300	CFGEntryNode	ENTRY		7686141		True				
ANR	7686301	CFGExitNode	EXIT		7686141		True				
ANR	7686302	Symbol	movie		7686141						
ANR	7686303	Symbol	* movie -> is_skip		7686141						
ANR	7686304	Symbol	i		7686141						
ANR	7686305	Symbol	* movie -> free_and_skip_len		7686141						
ANR	7686306	Symbol	xmlout		7686141						
ANR	7686307	Symbol	* movie		7686141						
ANR	7686308	Symbol	* * movie		7686141						
ANR	7686309	Symbol	movie -> free_and_skip_len		7686141						
ANR	7686310	Symbol	* i		7686141						
ANR	7686311	Symbol	movie -> is_skip		7686141						
ANR	7686312	Symbol	movie -> free_and_skip_contents		7686141						
ANR	7686313	Symbol	movie -> free_and_skip_count		7686141						
ANR	7686314	Symbol	movie -> free_and_skip		7686141						
ANR	7686315	Symbol	* movie -> free_and_skip_contents		7686141						
ANR	7686316	Function	xml_write_uuid	450:0:18898:20004							
ANR	7686317	FunctionDef	"xml_write_uuid (FILE * xmlout , opj_mj2_t * movie)"		7686316	0					
ANR	7686318	CompoundStatement		451:0:18951:20004	7686316	0					
ANR	7686319	Statement	IMAGINE	457:4:19317:19323	7686316	0	True				
ANR	7686320	Statement	movie	457:12:19325:19329	7686316	1	True				
ANR	7686321	Statement	->	457:17:19330:19331	7686316	2	True				
ANR	7686322	Statement	uuid	457:19:19332:19335	7686316	3	True				
ANR	7686323	Statement	","	457:23:19336:19336	7686316	4	True				
ANR	7686324	Statement	movie	457:25:19338:19342	7686316	5	True				
ANR	7686325	Statement	->	457:30:19343:19344	7686316	6	True				
ANR	7686326	Statement	uuid_count	457:32:19345:19354	7686316	7	True				
ANR	7686327	Statement	","	457:42:19355:19355	7686316	8	True				
ANR	7686328	Statement	movie	458:12:19369:19373	7686316	9	True				
ANR	7686329	Statement	->	458:17:19374:19375	7686316	10	True				
ANR	7686330	Statement	uuid_content	458:19:19376:19387	7686316	11	True				
ANR	7686331	Statement	[	458:31:19388:19388	7686316	12	True				
ANR	7686332	Statement	i	458:32:19389:19389	7686316	13	True				
ANR	7686333	Statement	]	458:33:19390:19390	7686316	14	True				
ANR	7686334	Statement	(	458:34:19391:19391	7686316	15	True				
ANR	7686335	Statement	array	458:35:19392:19396	7686316	16	True				
ANR	7686336	Statement	of	458:41:19398:19399	7686316	17	True				
ANR	7686337	Statement	buffers	458:44:19401:19407	7686316	18	True				
ANR	7686338	Statement	)	458:51:19408:19408	7686316	19	True				
ANR	7686339	Statement	","	458:52:19409:19409	7686316	20	True				
ANR	7686340	Statement	movie	459:12:19423:19427	7686316	21	True				
ANR	7686341	Statement	->	459:17:19428:19429	7686316	22	True				
ANR	7686342	Statement	uuid_len	459:19:19430:19437	7686316	23	True				
ANR	7686343	Statement	[	459:27:19438:19438	7686316	24	True				
ANR	7686344	Statement	i	459:28:19439:19439	7686316	25	True				
ANR	7686345	Statement	]	459:29:19440:19440	7686316	26	True				
ANR	7686346	Statement	(	459:30:19441:19441	7686316	27	True				
ANR	7686347	Statement	array	459:31:19442:19446	7686316	28	True				
ANR	7686348	Statement	of	459:37:19448:19449	7686316	29	True				
ANR	7686349	Statement	ints	459:40:19451:19454	7686316	30	True				
ANR	7686350	Statement	)	459:44:19455:19455	7686316	31	True				
ANR	7686351	Statement	","	459:45:19456:19456	7686316	32	True				
ANR	7686352	Statement	movie	460:12:19470:19474	7686316	33	True				
ANR	7686353	Statement	->	460:17:19475:19476	7686316	34	True				
ANR	7686354	Statement	uuid_type	460:19:19477:19485	7686316	35	True				
ANR	7686355	Statement	[	460:28:19486:19486	7686316	36	True				
ANR	7686356	Statement	i	460:29:19487:19487	7686316	37	True				
ANR	7686357	Statement	]	460:30:19488:19488	7686316	38	True				
ANR	7686358	Statement	(	460:31:19489:19489	7686316	39	True				
ANR	7686359	Statement	array	460:32:19490:19494	7686316	40	True				
ANR	7686360	Statement	of	460:38:19496:19497	7686316	41	True				
ANR	7686361	Statement	17	460:41:19499:19500	7686316	42	True				
ANR	7686362	Statement	-	460:44:19502:19502	7686316	43	True				
ANR	7686363	Statement	byte	460:46:19504:19507	7686316	44	True				
ANR	7686364	Statement	(	460:50:19508:19508	7686316	45	True				
ANR	7686365	Statement	16	460:51:19509:19510	7686316	46	True				
ANR	7686366	Statement	+	460:54:19512:19512	7686316	47	True				
ANR	7686367	Statement	null	460:56:19514:19517	7686316	48	True				
ANR	7686368	Statement	termination	460:61:19519:19529	7686316	49	True				
ANR	7686369	Statement	)	460:72:19530:19530	7686316	50	True				
ANR	7686370	Statement	buffers	460:74:19532:19538	7686316	51	True				
ANR	7686371	Statement	)	460:81:19539:19539	7686316	52	True				
ANR	7686372	IdentifierDeclStatement	int i ;	461:12:19553:19558	7686316	53	True				
ANR	7686373	IdentifierDecl	i		7686316	0					
ANR	7686374	IdentifierDeclType	int		7686316	0					
ANR	7686375	Identifier	i		7686316	1					
ANR	7686376	IfStatement	if ( movie -> uuid != 1 )		7686316	54					
ANR	7686377	Condition	movie -> uuid != 1	463:8:19569:19584	7686316	0	True				
ANR	7686378	EqualityExpression	movie -> uuid != 1		7686316	0		!=			
ANR	7686379	PtrMemberAccess	movie -> uuid		7686316	0					
ANR	7686380	Identifier	movie		7686316	0					
ANR	7686381	Identifier	uuid		7686316	1					
ANR	7686382	PrimaryExpression	1		7686316	1					
ANR	7686383	CompoundStatement		13:26:635:635	7686316	1					
ANR	7686384	ReturnStatement	return ;	464:8:19597:19603	7686316	0	True				
ANR	7686385	ForStatement	for ( i = 0 ; i < movie -> uuid_count ; i ++ )		7686316	55					
ANR	7686386	ForInit	i = 0 ;	467:9:19642:19647	7686316	0	True				
ANR	7686387	AssignmentExpression	i = 0		7686316	0		=			
ANR	7686388	Identifier	i		7686316	0					
ANR	7686389	PrimaryExpression	0		7686316	1					
ANR	7686390	Condition	i < movie -> uuid_count	467:16:19649:19669	7686316	1	True				
ANR	7686391	RelationalExpression	i < movie -> uuid_count		7686316	0		<			
ANR	7686392	Identifier	i		7686316	0					
ANR	7686393	PtrMemberAccess	movie -> uuid_count		7686316	1					
ANR	7686394	Identifier	movie		7686316	0					
ANR	7686395	Identifier	uuid_count		7686316	1					
ANR	7686396	PostIncDecOperationExpression	i ++	467:39:19672:19674	7686316	2	True				
ANR	7686397	Identifier	i		7686316	0					
ANR	7686398	IncDec	++		7686316	1					
ANR	7686399	CompoundStatement		17:44:725:725	7686316	3					
ANR	7686400	ExpressionStatement	"fprintf ( xmlout , ""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"" , movie -> uuid_type [ i ] )"	468:8:19687:19797	7686316	0	True				
ANR	7686401	CallExpression	"fprintf ( xmlout , ""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"" , movie -> uuid_type [ i ] )"		7686316	0					
ANR	7686402	Callee	fprintf		7686316	0					
ANR	7686403	Identifier	fprintf		7686316	0					
ANR	7686404	ArgumentList	xmlout		7686316	1					
ANR	7686405	Argument	xmlout		7686316	0					
ANR	7686406	Identifier	xmlout		7686316	0					
ANR	7686407	Argument	"""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"""		7686316	1					
ANR	7686408	PrimaryExpression	"""  <PrivateExtension BoxType=\\""uuid\\"" UUID=\\""%s\\"">\\n"""		7686316	0					
ANR	7686409	Argument	movie -> uuid_type [ i ]		7686316	2					
ANR	7686410	ArrayIndexing	movie -> uuid_type [ i ]		7686316	0					
ANR	7686411	PtrMemberAccess	movie -> uuid_type		7686316	0					
ANR	7686412	Identifier	movie		7686316	0					
ANR	7686413	Identifier	uuid_type		7686316	1					
ANR	7686414	Identifier	i		7686316	1					
ANR	7686415	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , movie -> uuid_contents [ i ] , movie -> uuid_len [ i ] )"	471:8:19855:19934	7686316	1	True				
ANR	7686416	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , movie -> uuid_contents [ i ] , movie -> uuid_len [ i ] )"		7686316	0					
ANR	7686417	Callee	xml_out_dump_hex_and_ascii		7686316	0					
ANR	7686418	Identifier	xml_out_dump_hex_and_ascii		7686316	0					
ANR	7686419	ArgumentList	xmlout		7686316	1					
ANR	7686420	Argument	xmlout		7686316	0					
ANR	7686421	Identifier	xmlout		7686316	0					
ANR	7686422	Argument	movie -> uuid_contents [ i ]		7686316	1					
ANR	7686423	ArrayIndexing	movie -> uuid_contents [ i ]		7686316	0					
ANR	7686424	PtrMemberAccess	movie -> uuid_contents		7686316	0					
ANR	7686425	Identifier	movie		7686316	0					
ANR	7686426	Identifier	uuid_contents		7686316	1					
ANR	7686427	Identifier	i		7686316	1					
ANR	7686428	Argument	movie -> uuid_len [ i ]		7686316	2					
ANR	7686429	ArrayIndexing	movie -> uuid_len [ i ]		7686316	0					
ANR	7686430	PtrMemberAccess	movie -> uuid_len		7686316	0					
ANR	7686431	Identifier	movie		7686316	0					
ANR	7686432	Identifier	uuid_len		7686316	1					
ANR	7686433	Identifier	i		7686316	1					
ANR	7686434	ExpressionStatement	"fprintf ( xmlout , ""  </PrivateExtension>\\n"" )"	472:8:19944:19989	7686316	2	True				
ANR	7686435	CallExpression	"fprintf ( xmlout , ""  </PrivateExtension>\\n"" )"		7686316	0					
ANR	7686436	Callee	fprintf		7686316	0					
ANR	7686437	Identifier	fprintf		7686316	0					
ANR	7686438	ArgumentList	xmlout		7686316	1					
ANR	7686439	Argument	xmlout		7686316	0					
ANR	7686440	Identifier	xmlout		7686316	0					
ANR	7686441	Argument	"""  </PrivateExtension>\\n"""		7686316	1					
ANR	7686442	PrimaryExpression	"""  </PrivateExtension>\\n"""		7686316	0					
ANR	7686443	ReturnType	void		7686316	1					
ANR	7686444	Identifier	xml_write_uuid		7686316	2					
ANR	7686445	ParameterList	"FILE * xmlout , opj_mj2_t * movie"		7686316	3					
ANR	7686446	Parameter	FILE * xmlout	450:20:18918:18929	7686316	0	True				
ANR	7686447	ParameterType	FILE *		7686316	0					
ANR	7686448	Identifier	xmlout		7686316	1					
ANR	7686449	Parameter	opj_mj2_t * movie	450:34:18932:18948	7686316	1	True				
ANR	7686450	ParameterType	opj_mj2_t *		7686316	0					
ANR	7686451	Identifier	movie		7686316	1					
ANR	7686452	CFGEntryNode	ENTRY		7686316		True				
ANR	7686453	CFGExitNode	EXIT		7686316		True				
ANR	7686454	Symbol	movie		7686316						
ANR	7686455	Symbol	movie -> uuid		7686316						
ANR	7686456	Symbol	i		7686316						
ANR	7686457	Symbol	movie -> uuid_count		7686316						
ANR	7686458	Symbol	movie -> uuid_len		7686316						
ANR	7686459	Symbol	xmlout		7686316						
ANR	7686460	Symbol	* movie		7686316						
ANR	7686461	Symbol	* movie -> uuid_type		7686316						
ANR	7686462	Symbol	* * movie		7686316						
ANR	7686463	Symbol	movie -> uuid_contents		7686316						
ANR	7686464	Symbol	* i		7686316						
ANR	7686465	Symbol	* movie -> uuid_contents		7686316						
ANR	7686466	Symbol	* movie -> uuid_len		7686316						
ANR	7686467	Symbol	movie -> uuid_type		7686316						
ANR	7686468	Function	xml_write_trak	479:0:20028:21520							
ANR	7686469	FunctionDef	"xml_write_trak (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr)"		7686468	0					
ANR	7686470	CompoundStatement		481:0:20184:21520	7686468	0					
ANR	7686471	ExpressionStatement	"fprintf ( xmlout , ""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"" , tnum )"	482:4:20190:20264	7686468	0	True				
ANR	7686472	CallExpression	"fprintf ( xmlout , ""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"" , tnum )"		7686468	0					
ANR	7686473	Callee	fprintf		7686468	0					
ANR	7686474	Identifier	fprintf		7686468	0					
ANR	7686475	ArgumentList	xmlout		7686468	1					
ANR	7686476	Argument	xmlout		7686468	0					
ANR	7686477	Identifier	xmlout		7686468	0					
ANR	7686478	Argument	"""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"""		7686468	1					
ANR	7686479	PrimaryExpression	"""    <Track BoxType=\\""trak\\"" Instance=\\""%d\\"">\\n"""		7686468	0					
ANR	7686480	Argument	tnum		7686468	2					
ANR	7686481	Identifier	tnum		7686468	0					
ANR	7686482	ExpressionStatement	"xml_write_tkhd ( file , xmlout , track , tnum )"	483:4:20270:20311	7686468	1	True				
ANR	7686483	CallExpression	"xml_write_tkhd ( file , xmlout , track , tnum )"		7686468	0					
ANR	7686484	Callee	xml_write_tkhd		7686468	0					
ANR	7686485	Identifier	xml_write_tkhd		7686468	0					
ANR	7686486	ArgumentList	file		7686468	1					
ANR	7686487	Argument	file		7686468	0					
ANR	7686488	Identifier	file		7686468	0					
ANR	7686489	Argument	xmlout		7686468	1					
ANR	7686490	Identifier	xmlout		7686468	0					
ANR	7686491	Argument	track		7686468	2					
ANR	7686492	Identifier	track		7686468	0					
ANR	7686493	Argument	tnum		7686468	3					
ANR	7686494	Identifier	tnum		7686468	0					
ANR	7686495	ExpressionStatement	"xml_write_mdia ( file , xmlout , track , tnum )"	486:4:20498:20539	7686468	2	True				
ANR	7686496	CallExpression	"xml_write_mdia ( file , xmlout , track , tnum )"		7686468	0					
ANR	7686497	Callee	xml_write_mdia		7686468	0					
ANR	7686498	Identifier	xml_write_mdia		7686468	0					
ANR	7686499	ArgumentList	file		7686468	1					
ANR	7686500	Argument	file		7686468	0					
ANR	7686501	Identifier	file		7686468	0					
ANR	7686502	Argument	xmlout		7686468	1					
ANR	7686503	Identifier	xmlout		7686468	0					
ANR	7686504	Argument	track		7686468	2					
ANR	7686505	Identifier	track		7686468	0					
ANR	7686506	Argument	tnum		7686468	3					
ANR	7686507	Identifier	tnum		7686468	0					
ANR	7686508	ExpressionStatement	"xml_write_udta ( file , xmlout , track , tnum )"	487:4:20545:20605	7686468	3	True				
ANR	7686509	CallExpression	"xml_write_udta ( file , xmlout , track , tnum )"		7686468	0					
ANR	7686510	Callee	xml_write_udta		7686468	0					
ANR	7686511	Identifier	xml_write_udta		7686468	0					
ANR	7686512	ArgumentList	file		7686468	1					
ANR	7686513	Argument	file		7686468	0					
ANR	7686514	Identifier	file		7686468	0					
ANR	7686515	Argument	xmlout		7686468	1					
ANR	7686516	Identifier	xmlout		7686468	0					
ANR	7686517	Argument	track		7686468	2					
ANR	7686518	Identifier	track		7686468	0					
ANR	7686519	Argument	tnum		7686468	3					
ANR	7686520	Identifier	tnum		7686468	0					
ANR	7686521	IfStatement	if ( track -> track_type == 0 )		7686468	4					
ANR	7686522	Condition	track -> track_type == 0	490:8:20698:20719	7686468	0	True				
ANR	7686523	EqualityExpression	track -> track_type == 0		7686468	0		==			
ANR	7686524	PtrMemberAccess	track -> track_type		7686468	0					
ANR	7686525	Identifier	track		7686468	0					
ANR	7686526	Identifier	track_type		7686468	1					
ANR	7686527	PrimaryExpression	0		7686468	1					
ANR	7686528	CompoundStatement		10:32:537:537	7686468	1					
ANR	7686529	IfStatement	if ( sampleframe > 0 && sampleframe <= track -> num_samples )		7686468	0					
ANR	7686530	Condition	sampleframe > 0 && sampleframe <= track -> num_samples	494:12:20956:21007	7686468	0	True				
ANR	7686531	AndExpression	sampleframe > 0 && sampleframe <= track -> num_samples		7686468	0		&&			
ANR	7686532	RelationalExpression	sampleframe > 0		7686468	0		>			
ANR	7686533	Identifier	sampleframe		7686468	0					
ANR	7686534	PrimaryExpression	0		7686468	1					
ANR	7686535	RelationalExpression	sampleframe <= track -> num_samples		7686468	1		<=			
ANR	7686536	Identifier	sampleframe		7686468	0					
ANR	7686537	PtrMemberAccess	track -> num_samples		7686468	1					
ANR	7686538	Identifier	track		7686468	0					
ANR	7686539	Identifier	num_samples		7686468	1					
ANR	7686540	CompoundStatement		16:12:873:890	7686468	1					
ANR	7686541	IdentifierDeclStatement	mj2_sample_t * sample ;	495:12:21024:21044	7686468	0	True				
ANR	7686542	IdentifierDecl	* sample		7686468	0					
ANR	7686543	IdentifierDeclType	mj2_sample_t *		7686468	0					
ANR	7686544	Identifier	sample		7686468	1					
ANR	7686545	IdentifierDeclStatement	unsigned int snum ;	496:12:21058:21075	7686468	1	True				
ANR	7686546	IdentifierDecl	snum		7686468	0					
ANR	7686547	IdentifierDeclType	unsigned int		7686468	0					
ANR	7686548	Identifier	snum		7686468	1					
ANR	7686549	ExpressionStatement	snum = sampleframe - 1	498:12:21090:21112	7686468	2	True				
ANR	7686550	AssignmentExpression	snum = sampleframe - 1		7686468	0		=			
ANR	7686551	Identifier	snum		7686468	0					
ANR	7686552	AdditiveExpression	sampleframe - 1		7686468	1		-			
ANR	7686553	Identifier	sampleframe		7686468	0					
ANR	7686554	PrimaryExpression	1		7686468	1					
ANR	7686555	ExpressionStatement	sample = & track -> sample [ snum ]	501:12:21282:21311	7686468	3	True				
ANR	7686556	AssignmentExpression	sample = & track -> sample [ snum ]		7686468	0		=			
ANR	7686557	Identifier	sample		7686468	0					
ANR	7686558	UnaryOperationExpression	& track -> sample [ snum ]		7686468	1					
ANR	7686559	UnaryOperator	&		7686468	0					
ANR	7686560	ArrayIndexing	track -> sample [ snum ]		7686468	1					
ANR	7686561	PtrMemberAccess	track -> sample		7686468	0					
ANR	7686562	Identifier	track		7686468	0					
ANR	7686563	Identifier	sample		7686468	1					
ANR	7686564	Identifier	snum		7686468	1					
ANR	7686565	IfStatement	"if ( xml_out_frame ( file , xmlout , sample , snum , event_mgr ) )"		7686468	4					
ANR	7686566	Condition	"xml_out_frame ( file , xmlout , sample , snum , event_mgr )"	502:16:21329:21380	7686468	0	True				
ANR	7686567	CallExpression	"xml_out_frame ( file , xmlout , sample , snum , event_mgr )"		7686468	0					
ANR	7686568	Callee	xml_out_frame		7686468	0					
ANR	7686569	Identifier	xml_out_frame		7686468	0					
ANR	7686570	ArgumentList	file		7686468	1					
ANR	7686571	Argument	file		7686468	0					
ANR	7686572	Identifier	file		7686468	0					
ANR	7686573	Argument	xmlout		7686468	1					
ANR	7686574	Identifier	xmlout		7686468	0					
ANR	7686575	Argument	sample		7686468	2					
ANR	7686576	Identifier	sample		7686468	0					
ANR	7686577	Argument	snum		7686468	3					
ANR	7686578	Identifier	snum		7686468	0					
ANR	7686579	Argument	event_mgr		7686468	4					
ANR	7686580	Identifier	event_mgr		7686468	0					
ANR	7686581	CompoundStatement		22:70:1198:1198	7686468	1					
ANR	7686582	ReturnStatement	return ;	503:16:21401:21407	7686468	0	True				
ANR	7686583	ExpressionStatement	"fprintf ( xmlout , ""    </Track>\\n"" )"	507:4:21482:21518	7686468	5	True				
ANR	7686584	CallExpression	"fprintf ( xmlout , ""    </Track>\\n"" )"		7686468	0					
ANR	7686585	Callee	fprintf		7686468	0					
ANR	7686586	Identifier	fprintf		7686468	0					
ANR	7686587	ArgumentList	xmlout		7686468	1					
ANR	7686588	Argument	xmlout		7686468	0					
ANR	7686589	Identifier	xmlout		7686468	0					
ANR	7686590	Argument	"""    </Track>\\n"""		7686468	1					
ANR	7686591	PrimaryExpression	"""    </Track>\\n"""		7686468	0					
ANR	7686592	ReturnType	void		7686468	1					
ANR	7686593	Identifier	xml_write_trak		7686468	2					
ANR	7686594	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum , unsigned int sampleframe , opj_event_mgr_t * event_mgr"		7686468	3					
ANR	7686595	Parameter	FILE * file	479:20:20048:20057	7686468	0	True				
ANR	7686596	ParameterType	FILE *		7686468	0					
ANR	7686597	Identifier	file		7686468	1					
ANR	7686598	Parameter	FILE * xmlout	479:32:20060:20071	7686468	1	True				
ANR	7686599	ParameterType	FILE *		7686468	0					
ANR	7686600	Identifier	xmlout		7686468	1					
ANR	7686601	Parameter	mj2_tk_t * track	479:46:20074:20088	7686468	2	True				
ANR	7686602	ParameterType	mj2_tk_t *		7686468	0					
ANR	7686603	Identifier	track		7686468	1					
ANR	7686604	Parameter	unsigned int tnum	480:20:20111:20127	7686468	3	True				
ANR	7686605	ParameterType	unsigned int		7686468	0					
ANR	7686606	Identifier	tnum		7686468	1					
ANR	7686607	Parameter	unsigned int sampleframe	480:39:20130:20153	7686468	4	True				
ANR	7686608	ParameterType	unsigned int		7686468	0					
ANR	7686609	Identifier	sampleframe		7686468	1					
ANR	7686610	Parameter	opj_event_mgr_t * event_mgr	480:65:20156:20181	7686468	5	True				
ANR	7686611	ParameterType	opj_event_mgr_t *		7686468	0					
ANR	7686612	Identifier	event_mgr		7686468	1					
ANR	7686613	CFGEntryNode	ENTRY		7686468		True				
ANR	7686614	CFGExitNode	EXIT		7686468		True				
ANR	7686615	Symbol	tnum		7686468						
ANR	7686616	Symbol	snum		7686468						
ANR	7686617	Symbol	sampleframe		7686468						
ANR	7686618	Symbol	track -> sample		7686468						
ANR	7686619	Symbol	* track		7686468						
ANR	7686620	Symbol	sample		7686468						
ANR	7686621	Symbol	xmlout		7686468						
ANR	7686622	Symbol	track -> track_type		7686468						
ANR	7686623	Symbol	file		7686468						
ANR	7686624	Symbol	xml_out_frame		7686468						
ANR	7686625	Symbol	event_mgr		7686468						
ANR	7686626	Symbol	track -> num_samples		7686468						
ANR	7686627	Symbol	track		7686468						
ANR	7686628	Function	xml_write_tkhd	512:0:21544:26757							
ANR	7686629	FunctionDef	"xml_write_tkhd (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		7686628	0					
ANR	7686630	CompoundStatement		514:0:21646:26757	7686628	0					
ANR	7686631	ExpressionStatement	"fprintf ( xmlout , ""      <TrackHeader BoxType=\\""tkhd\\"">\\n"" )"	515:4:21652:21712	7686628	0	True				
ANR	7686632	CallExpression	"fprintf ( xmlout , ""      <TrackHeader BoxType=\\""tkhd\\"">\\n"" )"		7686628	0					
ANR	7686633	Callee	fprintf		7686628	0					
ANR	7686634	Identifier	fprintf		7686628	0					
ANR	7686635	ArgumentList	xmlout		7686628	1					
ANR	7686636	Argument	xmlout		7686628	0					
ANR	7686637	Identifier	xmlout		7686628	0					
ANR	7686638	Argument	"""      <TrackHeader BoxType=\\""tkhd\\"">\\n"""		7686628	1					
ANR	7686639	PrimaryExpression	"""      <TrackHeader BoxType=\\""tkhd\\"">\\n"""		7686628	0					
ANR	7686640	IfStatement	if ( notes )		7686628	1					
ANR	7686641	Condition	notes	516:8:21722:21726	7686628	0	True				
ANR	7686642	Identifier	notes		7686628	0					
ANR	7686643	CompoundStatement		3:15:82:82	7686628	1					
ANR	7686644	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"" )"	517:8:21739:21848	7686628	0	True				
ANR	7686645	CallExpression	"fprintf ( xmlout , ""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"" )"		7686628	0					
ANR	7686646	Callee	fprintf		7686628	0					
ANR	7686647	Identifier	fprintf		7686628	0					
ANR	7686648	ArgumentList	xmlout		7686628	1					
ANR	7686649	Argument	xmlout		7686628	0					
ANR	7686650	Identifier	xmlout		7686628	0					
ANR	7686651	Argument	"""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"""		7686628	1					
ANR	7686652	PrimaryExpression	"""      <!-- Not shown here: CreationTime, ModificationTime, Duration. -->\\n"""		7686628	0					
ANR	7686653	ExpressionStatement	"fprintf ( xmlout , ""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"" )"	519:8:21858:21986	7686628	1	True				
ANR	7686654	CallExpression	"fprintf ( xmlout , ""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"" )"		7686628	0					
ANR	7686655	Callee	fprintf		7686628	0					
ANR	7686656	Identifier	fprintf		7686628	0					
ANR	7686657	ArgumentList	xmlout		7686628	1					
ANR	7686658	Argument	xmlout		7686628	0					
ANR	7686659	Identifier	xmlout		7686628	0					
ANR	7686660	Argument	"""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"""		7686628	1					
ANR	7686661	PrimaryExpression	"""      <!-- These 3 fields are reported under MediaHeader below.   When reading these 3, -->\\n"""		7686628	0					
ANR	7686662	ExpressionStatement	"fprintf ( xmlout , ""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"" )"	521:8:21996:22137	7686628	2	True				
ANR	7686663	CallExpression	"fprintf ( xmlout , ""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"" )"		7686628	0					
ANR	7686664	Callee	fprintf		7686628	0					
ANR	7686665	Identifier	fprintf		7686628	0					
ANR	7686666	ArgumentList	xmlout		7686628	1					
ANR	7686667	Argument	xmlout		7686628	0					
ANR	7686668	Identifier	xmlout		7686628	0					
ANR	7686669	Argument	"""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"""		7686628	1					
ANR	7686670	PrimaryExpression	"""      <!-- m2j_to_metadata currently doesn't distinguish between TrackHeader and MediaHeader source. -->\\n"""		7686628	0					
ANR	7686671	ExpressionStatement	"fprintf ( xmlout , ""      <!-- If both found, value read from MediaHeader is used. -->\\n"" )"	523:8:22147:22250	7686628	3	True				
ANR	7686672	CallExpression	"fprintf ( xmlout , ""      <!-- If both found, value read from MediaHeader is used. -->\\n"" )"		7686628	0					
ANR	7686673	Callee	fprintf		7686628	0					
ANR	7686674	Identifier	fprintf		7686628	0					
ANR	7686675	ArgumentList	xmlout		7686628	1					
ANR	7686676	Argument	xmlout		7686628	0					
ANR	7686677	Identifier	xmlout		7686628	0					
ANR	7686678	Argument	"""      <!-- If both found, value read from MediaHeader is used. -->\\n"""		7686628	1					
ANR	7686679	PrimaryExpression	"""      <!-- If both found, value read from MediaHeader is used. -->\\n"""		7686628	0					
ANR	7686680	ExpressionStatement	"fprintf ( xmlout , ""        <TrackID>%u</TrackID>\\n"" , track -> track_ID )"	526:4:22262:22332	7686628	2	True				
ANR	7686681	CallExpression	"fprintf ( xmlout , ""        <TrackID>%u</TrackID>\\n"" , track -> track_ID )"		7686628	0					
ANR	7686682	Callee	fprintf		7686628	0					
ANR	7686683	Identifier	fprintf		7686628	0					
ANR	7686684	ArgumentList	xmlout		7686628	1					
ANR	7686685	Argument	xmlout		7686628	0					
ANR	7686686	Identifier	xmlout		7686628	0					
ANR	7686687	Argument	"""        <TrackID>%u</TrackID>\\n"""		7686628	1					
ANR	7686688	PrimaryExpression	"""        <TrackID>%u</TrackID>\\n"""		7686628	0					
ANR	7686689	Argument	track -> track_ID		7686628	2					
ANR	7686690	PtrMemberAccess	track -> track_ID		7686628	0					
ANR	7686691	Identifier	track		7686628	0					
ANR	7686692	Identifier	track_ID		7686628	1					
ANR	7686693	IfStatement	if ( track -> track_type == 0 )		7686628	3					
ANR	7686694	Condition	track -> track_type == 0	527:8:22342:22363	7686628	0	True				
ANR	7686695	EqualityExpression	track -> track_type == 0		7686628	0		==			
ANR	7686696	PtrMemberAccess	track -> track_type		7686628	0					
ANR	7686697	Identifier	track		7686628	0					
ANR	7686698	Identifier	track_type		7686628	1					
ANR	7686699	PrimaryExpression	0		7686628	1					
ANR	7686700	CompoundStatement		14:32:719:719	7686628	1					
ANR	7686701	ExpressionStatement	"fprintf ( xmlout , ""        <TrackLayer>%d</TrackLayer>\\n"" , track -> layer )"	528:8:22399:22470	7686628	0	True				
ANR	7686702	CallExpression	"fprintf ( xmlout , ""        <TrackLayer>%d</TrackLayer>\\n"" , track -> layer )"		7686628	0					
ANR	7686703	Callee	fprintf		7686628	0					
ANR	7686704	Identifier	fprintf		7686628	0					
ANR	7686705	ArgumentList	xmlout		7686628	1					
ANR	7686706	Argument	xmlout		7686628	0					
ANR	7686707	Identifier	xmlout		7686628	0					
ANR	7686708	Argument	"""        <TrackLayer>%d</TrackLayer>\\n"""		7686628	1					
ANR	7686709	PrimaryExpression	"""        <TrackLayer>%d</TrackLayer>\\n"""		7686628	0					
ANR	7686710	Argument	track -> layer		7686628	2					
ANR	7686711	PtrMemberAccess	track -> layer		7686628	0					
ANR	7686712	Identifier	track		7686628	0					
ANR	7686713	Identifier	layer		7686628	1					
ANR	7686714	IfStatement	if ( notes )		7686628	1					
ANR	7686715	Condition	notes	529:12:22484:22488	7686628	0	True				
ANR	7686716	Identifier	notes		7686628	0					
ANR	7686717	CompoundStatement		16:19:844:844	7686628	1					
ANR	7686718	ExpressionStatement	"fprintf ( xmlout , ""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"" )"	530:12:22505:22633	7686628	0	True				
ANR	7686719	CallExpression	"fprintf ( xmlout , ""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"" )"		7686628	0					
ANR	7686720	Callee	fprintf		7686628	0					
ANR	7686721	Identifier	fprintf		7686628	0					
ANR	7686722	ArgumentList	xmlout		7686628	1					
ANR	7686723	Argument	xmlout		7686628	0					
ANR	7686724	Identifier	xmlout		7686628	0					
ANR	7686725	Argument	"""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"""		7686628	1					
ANR	7686726	PrimaryExpression	"""        <!-- front-to-back ordering of video tracks. 0 = normal, -1 is closer, etc. -->\\n"""		7686628	0					
ANR	7686727	IfStatement	if ( track -> track_type != 0 )		7686628	4					
ANR	7686728	Condition	track -> track_type != 0	534:8:22659:22680	7686628	0	True				
ANR	7686729	EqualityExpression	track -> track_type != 0		7686628	0		!=			
ANR	7686730	PtrMemberAccess	track -> track_type		7686628	0					
ANR	7686731	Identifier	track		7686628	0					
ANR	7686732	Identifier	track_type		7686628	1					
ANR	7686733	PrimaryExpression	0		7686628	1					
ANR	7686734	CompoundStatement		21:32:1036:1036	7686628	1					
ANR	7686735	ExpressionStatement	track -> volume = track -> volume << 8	536:8:22755:22789	7686628	0	True				
ANR	7686736	AssignmentExpression	track -> volume = track -> volume << 8		7686628	0		=			
ANR	7686737	PtrMemberAccess	track -> volume		7686628	0					
ANR	7686738	Identifier	track		7686628	0					
ANR	7686739	Identifier	volume		7686628	1					
ANR	7686740	ShiftExpression	track -> volume << 8		7686628	1		<<			
ANR	7686741	PtrMemberAccess	track -> volume		7686628	0					
ANR	7686742	Identifier	track		7686628	0					
ANR	7686743	Identifier	volume		7686628	1					
ANR	7686744	PrimaryExpression	8		7686628	1					
ANR	7686745	ExpressionStatement	"fprintf ( xmlout , ""        <Volume>\\n"" )"	538:8:22806:22844	7686628	1	True				
ANR	7686746	CallExpression	"fprintf ( xmlout , ""        <Volume>\\n"" )"		7686628	0					
ANR	7686747	Callee	fprintf		7686628	0					
ANR	7686748	Identifier	fprintf		7686628	0					
ANR	7686749	ArgumentList	xmlout		7686628	1					
ANR	7686750	Argument	xmlout		7686628	0					
ANR	7686751	Identifier	xmlout		7686628	0					
ANR	7686752	Argument	"""        <Volume>\\n"""		7686628	1					
ANR	7686753	PrimaryExpression	"""        <Volume>\\n"""		7686628	0					
ANR	7686754	IfStatement	if ( notes )		7686628	2					
ANR	7686755	Condition	notes	539:12:22858:22862	7686628	0	True				
ANR	7686756	Identifier	notes		7686628	0					
ANR	7686757	CompoundStatement		26:19:1218:1218	7686628	1					
ANR	7686758	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	540:12:22879:23029	7686628	0	True				
ANR	7686759	CallExpression	"fprintf ( xmlout , ""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		7686628	0					
ANR	7686760	Callee	fprintf		7686628	0					
ANR	7686761	Identifier	fprintf		7686628	0					
ANR	7686762	ArgumentList	xmlout		7686628	1					
ANR	7686763	Argument	xmlout		7686628	0					
ANR	7686764	Identifier	xmlout		7686628	0					
ANR	7686765	Argument	"""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7686628	1					
ANR	7686766	PrimaryExpression	"""          <!-- Track audio volume stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7686628	0					
ANR	7686767	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"	542:12:23043:23147	7686628	1	True				
ANR	7686768	CallExpression	"fprintf ( xmlout , ""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"" )"		7686628	0					
ANR	7686769	Callee	fprintf		7686628	0					
ANR	7686770	Identifier	fprintf		7686628	0					
ANR	7686771	ArgumentList	xmlout		7686628	1					
ANR	7686772	Argument	xmlout		7686628	0					
ANR	7686773	Identifier	xmlout		7686628	0					
ANR	7686774	Argument	"""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		7686628	1					
ANR	7686775	PrimaryExpression	"""          <!-- Full, normal (default) value is 0x0100 (1.0) -->\\n"""		7686628	0					
ANR	7686776	IfStatement	if ( raw )		7686628	3					
ANR	7686777	Condition	raw	545:12:23171:23173	7686628	0	True				
ANR	7686778	Identifier	raw		7686628	0					
ANR	7686779	CompoundStatement		32:17:1529:1529	7686628	1					
ANR	7686780	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%04x</AsHex>\\n"" , track -> volume )"	546:12:23190:23257	7686628	0	True				
ANR	7686781	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%04x</AsHex>\\n"" , track -> volume )"		7686628	0					
ANR	7686782	Callee	fprintf		7686628	0					
ANR	7686783	Identifier	fprintf		7686628	0					
ANR	7686784	ArgumentList	xmlout		7686628	1					
ANR	7686785	Argument	xmlout		7686628	0					
ANR	7686786	Identifier	xmlout		7686628	0					
ANR	7686787	Argument	"""          <AsHex>0x%04x</AsHex>\\n"""		7686628	1					
ANR	7686788	PrimaryExpression	"""          <AsHex>0x%04x</AsHex>\\n"""		7686628	0					
ANR	7686789	Argument	track -> volume		7686628	2					
ANR	7686790	PtrMemberAccess	track -> volume		7686628	0					
ANR	7686791	Identifier	track		7686628	0					
ANR	7686792	Identifier	volume		7686628	1					
ANR	7686793	IfStatement	if ( derived )		7686628	4					
ANR	7686794	Condition	derived	548:12:23281:23287	7686628	0	True				
ANR	7686795	Identifier	derived		7686628	0					
ANR	7686796	CompoundStatement		35:21:1643:1643	7686628	1					
ANR	7686797	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> volume / ( double ) 0x0100 )"	549:12:23304:23423	7686628	0	True				
ANR	7686798	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> volume / ( double ) 0x0100 )"		7686628	0					
ANR	7686799	Callee	fprintf		7686628	0					
ANR	7686800	Identifier	fprintf		7686628	0					
ANR	7686801	ArgumentList	xmlout		7686628	1					
ANR	7686802	Argument	xmlout		7686628	0					
ANR	7686803	Identifier	xmlout		7686628	0					
ANR	7686804	Argument	"""          <AsDecimal>%6.3f</AsDecimal>\\n"""		7686628	1					
ANR	7686805	PrimaryExpression	"""          <AsDecimal>%6.3f</AsDecimal>\\n"""		7686628	0					
ANR	7686806	Argument	( double ) track -> volume / ( double ) 0x0100		7686628	2					
ANR	7686807	MultiplicativeExpression	( double ) track -> volume / ( double ) 0x0100		7686628	0		/			
ANR	7686808	CastExpression	( double ) track -> volume		7686628	0					
ANR	7686809	CastTarget	double		7686628	0					
ANR	7686810	PtrMemberAccess	track -> volume		7686628	1					
ANR	7686811	Identifier	track		7686628	0					
ANR	7686812	Identifier	volume		7686628	1					
ANR	7686813	CastExpression	( double ) 0x0100		7686628	1					
ANR	7686814	CastTarget	double		7686628	0					
ANR	7686815	PrimaryExpression	0x0100		7686628	1					
ANR	7686816	ExpressionStatement	"fprintf ( xmlout , ""        </Volume>\\n"" )"	552:8:23443:23482	7686628	5	True				
ANR	7686817	CallExpression	"fprintf ( xmlout , ""        </Volume>\\n"" )"		7686628	0					
ANR	7686818	Callee	fprintf		7686628	0					
ANR	7686819	Identifier	fprintf		7686628	0					
ANR	7686820	ArgumentList	xmlout		7686628	1					
ANR	7686821	Argument	xmlout		7686628	0					
ANR	7686822	Identifier	xmlout		7686628	0					
ANR	7686823	Argument	"""        </Volume>\\n"""		7686628	1					
ANR	7686824	PrimaryExpression	"""        </Volume>\\n"""		7686628	0					
ANR	7686825	IfStatement	if ( notes )		7686628	6					
ANR	7686826	Condition	notes	554:12:23517:23521	7686628	0	True				
ANR	7686827	Identifier	notes		7686628	0					
ANR	7686828	CompoundStatement		41:19:1877:1877	7686628	1					
ANR	7686829	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	555:12:23538:23683	7686628	0	True				
ANR	7686830	CallExpression	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		7686628	0					
ANR	7686831	Callee	fprintf		7686628	0					
ANR	7686832	Identifier	fprintf		7686628	0					
ANR	7686833	ArgumentList	xmlout		7686628	1					
ANR	7686834	Argument	xmlout		7686628	0					
ANR	7686835	Identifier	xmlout		7686628	0					
ANR	7686836	Argument	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7686628	1					
ANR	7686837	PrimaryExpression	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7686628	0					
ANR	7686838	ExpressionStatement	track -> volume = track -> volume >> 8	558:8:23703:23737	7686628	7	True				
ANR	7686839	AssignmentExpression	track -> volume = track -> volume >> 8		7686628	0		=			
ANR	7686840	PtrMemberAccess	track -> volume		7686628	0					
ANR	7686841	Identifier	track		7686628	0					
ANR	7686842	Identifier	volume		7686628	1					
ANR	7686843	ShiftExpression	track -> volume >> 8		7686628	1		>>			
ANR	7686844	PtrMemberAccess	track -> volume		7686628	0					
ANR	7686845	Identifier	track		7686628	0					
ANR	7686846	Identifier	volume		7686628	1					
ANR	7686847	PrimaryExpression	8		7686628	1					
ANR	7686848	IfStatement	if ( track -> track_type == 0 )		7686628	5					
ANR	7686849	Condition	track -> track_type == 0	561:8:23760:23781	7686628	0	True				
ANR	7686850	EqualityExpression	track -> track_type == 0		7686628	0		==			
ANR	7686851	PtrMemberAccess	track -> track_type		7686628	0					
ANR	7686852	Identifier	track		7686628	0					
ANR	7686853	Identifier	track_type		7686628	1					
ANR	7686854	PrimaryExpression	0		7686628	1					
ANR	7686855	CompoundStatement		48:32:2137:2137	7686628	1					
ANR	7686856	ExpressionStatement	"fprintf ( xmlout , ""        <TransformationMatrix>\\n"" )"	563:8:23867:23919	7686628	0	True				
ANR	7686857	CallExpression	"fprintf ( xmlout , ""        <TransformationMatrix>\\n"" )"		7686628	0					
ANR	7686858	Callee	fprintf		7686628	0					
ANR	7686859	Identifier	fprintf		7686628	0					
ANR	7686860	ArgumentList	xmlout		7686628	1					
ANR	7686861	Argument	xmlout		7686628	0					
ANR	7686862	Identifier	xmlout		7686628	0					
ANR	7686863	Argument	"""        <TransformationMatrix>\\n"""		7686628	1					
ANR	7686864	PrimaryExpression	"""        <TransformationMatrix>\\n"""		7686628	0					
ANR	7686865	IfStatement	if ( notes )		7686628	1					
ANR	7686866	Condition	notes	564:12:23933:23937	7686628	0	True				
ANR	7686867	Identifier	notes		7686628	0					
ANR	7686868	CompoundStatement		51:19:2293:2293	7686628	1					
ANR	7686869	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"" )"	565:12:23954:24070	7686628	0	True				
ANR	7686870	CallExpression	"fprintf ( xmlout , ""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"" )"		7686628	0					
ANR	7686871	Callee	fprintf		7686628	0					
ANR	7686872	Identifier	fprintf		7686628	0					
ANR	7686873	ArgumentList	xmlout		7686628	1					
ANR	7686874	Argument	xmlout		7686628	0					
ANR	7686875	Identifier	xmlout		7686628	0					
ANR	7686876	Argument	"""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"""		7686628	1					
ANR	7686877	PrimaryExpression	"""          <!-- Comments about matrix in MovieHeader apply here as well. -->\\n"""		7686628	0					
ANR	7686878	ExpressionStatement	"fprintf ( xmlout , ""          <!-- This matrix is applied before MovieHeader one. -->\\n"" )"	567:12:24084:24190	7686628	1	True				
ANR	7686879	CallExpression	"fprintf ( xmlout , ""          <!-- This matrix is applied before MovieHeader one. -->\\n"" )"		7686628	0					
ANR	7686880	Callee	fprintf		7686628	0					
ANR	7686881	Identifier	fprintf		7686628	0					
ANR	7686882	ArgumentList	xmlout		7686628	1					
ANR	7686883	Argument	xmlout		7686628	0					
ANR	7686884	Identifier	xmlout		7686628	0					
ANR	7686885	Argument	"""          <!-- This matrix is applied before MovieHeader one. -->\\n"""		7686628	1					
ANR	7686886	PrimaryExpression	"""          <!-- This matrix is applied before MovieHeader one. -->\\n"""		7686628	0					
ANR	7686887	ExpressionStatement	"fprintf ( xmlout , ""          <TMa>0x%08x</TMa>\\n"" , track -> trans_matrix [ 0 ] )"	570:8:24210:24283	7686628	2	True				
ANR	7686888	CallExpression	"fprintf ( xmlout , ""          <TMa>0x%08x</TMa>\\n"" , track -> trans_matrix [ 0 ] )"		7686628	0					
ANR	7686889	Callee	fprintf		7686628	0					
ANR	7686890	Identifier	fprintf		7686628	0					
ANR	7686891	ArgumentList	xmlout		7686628	1					
ANR	7686892	Argument	xmlout		7686628	0					
ANR	7686893	Identifier	xmlout		7686628	0					
ANR	7686894	Argument	"""          <TMa>0x%08x</TMa>\\n"""		7686628	1					
ANR	7686895	PrimaryExpression	"""          <TMa>0x%08x</TMa>\\n"""		7686628	0					
ANR	7686896	Argument	track -> trans_matrix [ 0 ]		7686628	2					
ANR	7686897	ArrayIndexing	track -> trans_matrix [ 0 ]		7686628	0					
ANR	7686898	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686899	Identifier	track		7686628	0					
ANR	7686900	Identifier	trans_matrix		7686628	1					
ANR	7686901	PrimaryExpression	0		7686628	1					
ANR	7686902	ExpressionStatement	"fprintf ( xmlout , ""          <TMb>0x%08x</TMb>\\n"" , track -> trans_matrix [ 1 ] )"	571:8:24293:24366	7686628	3	True				
ANR	7686903	CallExpression	"fprintf ( xmlout , ""          <TMb>0x%08x</TMb>\\n"" , track -> trans_matrix [ 1 ] )"		7686628	0					
ANR	7686904	Callee	fprintf		7686628	0					
ANR	7686905	Identifier	fprintf		7686628	0					
ANR	7686906	ArgumentList	xmlout		7686628	1					
ANR	7686907	Argument	xmlout		7686628	0					
ANR	7686908	Identifier	xmlout		7686628	0					
ANR	7686909	Argument	"""          <TMb>0x%08x</TMb>\\n"""		7686628	1					
ANR	7686910	PrimaryExpression	"""          <TMb>0x%08x</TMb>\\n"""		7686628	0					
ANR	7686911	Argument	track -> trans_matrix [ 1 ]		7686628	2					
ANR	7686912	ArrayIndexing	track -> trans_matrix [ 1 ]		7686628	0					
ANR	7686913	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686914	Identifier	track		7686628	0					
ANR	7686915	Identifier	trans_matrix		7686628	1					
ANR	7686916	PrimaryExpression	1		7686628	1					
ANR	7686917	ExpressionStatement	"fprintf ( xmlout , ""          <TMu>0x%08x</TMu>\\n"" , track -> trans_matrix [ 2 ] )"	572:8:24376:24449	7686628	4	True				
ANR	7686918	CallExpression	"fprintf ( xmlout , ""          <TMu>0x%08x</TMu>\\n"" , track -> trans_matrix [ 2 ] )"		7686628	0					
ANR	7686919	Callee	fprintf		7686628	0					
ANR	7686920	Identifier	fprintf		7686628	0					
ANR	7686921	ArgumentList	xmlout		7686628	1					
ANR	7686922	Argument	xmlout		7686628	0					
ANR	7686923	Identifier	xmlout		7686628	0					
ANR	7686924	Argument	"""          <TMu>0x%08x</TMu>\\n"""		7686628	1					
ANR	7686925	PrimaryExpression	"""          <TMu>0x%08x</TMu>\\n"""		7686628	0					
ANR	7686926	Argument	track -> trans_matrix [ 2 ]		7686628	2					
ANR	7686927	ArrayIndexing	track -> trans_matrix [ 2 ]		7686628	0					
ANR	7686928	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686929	Identifier	track		7686628	0					
ANR	7686930	Identifier	trans_matrix		7686628	1					
ANR	7686931	PrimaryExpression	2		7686628	1					
ANR	7686932	ExpressionStatement	"fprintf ( xmlout , ""          <TMc>0x%08x</TMc>\\n"" , track -> trans_matrix [ 3 ] )"	573:8:24459:24532	7686628	5	True				
ANR	7686933	CallExpression	"fprintf ( xmlout , ""          <TMc>0x%08x</TMc>\\n"" , track -> trans_matrix [ 3 ] )"		7686628	0					
ANR	7686934	Callee	fprintf		7686628	0					
ANR	7686935	Identifier	fprintf		7686628	0					
ANR	7686936	ArgumentList	xmlout		7686628	1					
ANR	7686937	Argument	xmlout		7686628	0					
ANR	7686938	Identifier	xmlout		7686628	0					
ANR	7686939	Argument	"""          <TMc>0x%08x</TMc>\\n"""		7686628	1					
ANR	7686940	PrimaryExpression	"""          <TMc>0x%08x</TMc>\\n"""		7686628	0					
ANR	7686941	Argument	track -> trans_matrix [ 3 ]		7686628	2					
ANR	7686942	ArrayIndexing	track -> trans_matrix [ 3 ]		7686628	0					
ANR	7686943	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686944	Identifier	track		7686628	0					
ANR	7686945	Identifier	trans_matrix		7686628	1					
ANR	7686946	PrimaryExpression	3		7686628	1					
ANR	7686947	ExpressionStatement	"fprintf ( xmlout , ""          <TMd>0x%08x</TMd>\\n"" , track -> trans_matrix [ 4 ] )"	574:8:24542:24615	7686628	6	True				
ANR	7686948	CallExpression	"fprintf ( xmlout , ""          <TMd>0x%08x</TMd>\\n"" , track -> trans_matrix [ 4 ] )"		7686628	0					
ANR	7686949	Callee	fprintf		7686628	0					
ANR	7686950	Identifier	fprintf		7686628	0					
ANR	7686951	ArgumentList	xmlout		7686628	1					
ANR	7686952	Argument	xmlout		7686628	0					
ANR	7686953	Identifier	xmlout		7686628	0					
ANR	7686954	Argument	"""          <TMd>0x%08x</TMd>\\n"""		7686628	1					
ANR	7686955	PrimaryExpression	"""          <TMd>0x%08x</TMd>\\n"""		7686628	0					
ANR	7686956	Argument	track -> trans_matrix [ 4 ]		7686628	2					
ANR	7686957	ArrayIndexing	track -> trans_matrix [ 4 ]		7686628	0					
ANR	7686958	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686959	Identifier	track		7686628	0					
ANR	7686960	Identifier	trans_matrix		7686628	1					
ANR	7686961	PrimaryExpression	4		7686628	1					
ANR	7686962	ExpressionStatement	"fprintf ( xmlout , ""          <TMv>0x%08x</TMv>\\n"" , track -> trans_matrix [ 5 ] )"	575:8:24625:24698	7686628	7	True				
ANR	7686963	CallExpression	"fprintf ( xmlout , ""          <TMv>0x%08x</TMv>\\n"" , track -> trans_matrix [ 5 ] )"		7686628	0					
ANR	7686964	Callee	fprintf		7686628	0					
ANR	7686965	Identifier	fprintf		7686628	0					
ANR	7686966	ArgumentList	xmlout		7686628	1					
ANR	7686967	Argument	xmlout		7686628	0					
ANR	7686968	Identifier	xmlout		7686628	0					
ANR	7686969	Argument	"""          <TMv>0x%08x</TMv>\\n"""		7686628	1					
ANR	7686970	PrimaryExpression	"""          <TMv>0x%08x</TMv>\\n"""		7686628	0					
ANR	7686971	Argument	track -> trans_matrix [ 5 ]		7686628	2					
ANR	7686972	ArrayIndexing	track -> trans_matrix [ 5 ]		7686628	0					
ANR	7686973	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686974	Identifier	track		7686628	0					
ANR	7686975	Identifier	trans_matrix		7686628	1					
ANR	7686976	PrimaryExpression	5		7686628	1					
ANR	7686977	ExpressionStatement	"fprintf ( xmlout , ""          <TMx>0x%08x</TMx>\\n"" , track -> trans_matrix [ 6 ] )"	576:8:24708:24781	7686628	8	True				
ANR	7686978	CallExpression	"fprintf ( xmlout , ""          <TMx>0x%08x</TMx>\\n"" , track -> trans_matrix [ 6 ] )"		7686628	0					
ANR	7686979	Callee	fprintf		7686628	0					
ANR	7686980	Identifier	fprintf		7686628	0					
ANR	7686981	ArgumentList	xmlout		7686628	1					
ANR	7686982	Argument	xmlout		7686628	0					
ANR	7686983	Identifier	xmlout		7686628	0					
ANR	7686984	Argument	"""          <TMx>0x%08x</TMx>\\n"""		7686628	1					
ANR	7686985	PrimaryExpression	"""          <TMx>0x%08x</TMx>\\n"""		7686628	0					
ANR	7686986	Argument	track -> trans_matrix [ 6 ]		7686628	2					
ANR	7686987	ArrayIndexing	track -> trans_matrix [ 6 ]		7686628	0					
ANR	7686988	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7686989	Identifier	track		7686628	0					
ANR	7686990	Identifier	trans_matrix		7686628	1					
ANR	7686991	PrimaryExpression	6		7686628	1					
ANR	7686992	ExpressionStatement	"fprintf ( xmlout , ""          <TMy>0x%08x</TMy>\\n"" , track -> trans_matrix [ 7 ] )"	577:8:24791:24864	7686628	9	True				
ANR	7686993	CallExpression	"fprintf ( xmlout , ""          <TMy>0x%08x</TMy>\\n"" , track -> trans_matrix [ 7 ] )"		7686628	0					
ANR	7686994	Callee	fprintf		7686628	0					
ANR	7686995	Identifier	fprintf		7686628	0					
ANR	7686996	ArgumentList	xmlout		7686628	1					
ANR	7686997	Argument	xmlout		7686628	0					
ANR	7686998	Identifier	xmlout		7686628	0					
ANR	7686999	Argument	"""          <TMy>0x%08x</TMy>\\n"""		7686628	1					
ANR	7687000	PrimaryExpression	"""          <TMy>0x%08x</TMy>\\n"""		7686628	0					
ANR	7687001	Argument	track -> trans_matrix [ 7 ]		7686628	2					
ANR	7687002	ArrayIndexing	track -> trans_matrix [ 7 ]		7686628	0					
ANR	7687003	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7687004	Identifier	track		7686628	0					
ANR	7687005	Identifier	trans_matrix		7686628	1					
ANR	7687006	PrimaryExpression	7		7686628	1					
ANR	7687007	ExpressionStatement	"fprintf ( xmlout , ""          <TMw>0x%08x</TMw>\\n"" , track -> trans_matrix [ 8 ] )"	578:8:24874:24947	7686628	10	True				
ANR	7687008	CallExpression	"fprintf ( xmlout , ""          <TMw>0x%08x</TMw>\\n"" , track -> trans_matrix [ 8 ] )"		7686628	0					
ANR	7687009	Callee	fprintf		7686628	0					
ANR	7687010	Identifier	fprintf		7686628	0					
ANR	7687011	ArgumentList	xmlout		7686628	1					
ANR	7687012	Argument	xmlout		7686628	0					
ANR	7687013	Identifier	xmlout		7686628	0					
ANR	7687014	Argument	"""          <TMw>0x%08x</TMw>\\n"""		7686628	1					
ANR	7687015	PrimaryExpression	"""          <TMw>0x%08x</TMw>\\n"""		7686628	0					
ANR	7687016	Argument	track -> trans_matrix [ 8 ]		7686628	2					
ANR	7687017	ArrayIndexing	track -> trans_matrix [ 8 ]		7686628	0					
ANR	7687018	PtrMemberAccess	track -> trans_matrix		7686628	0					
ANR	7687019	Identifier	track		7686628	0					
ANR	7687020	Identifier	trans_matrix		7686628	1					
ANR	7687021	PrimaryExpression	8		7686628	1					
ANR	7687022	ExpressionStatement	"fprintf ( xmlout , ""        </TransformationMatrix>\\n"" )"	579:8:24957:25010	7686628	11	True				
ANR	7687023	CallExpression	"fprintf ( xmlout , ""        </TransformationMatrix>\\n"" )"		7686628	0					
ANR	7687024	Callee	fprintf		7686628	0					
ANR	7687025	Identifier	fprintf		7686628	0					
ANR	7687026	ArgumentList	xmlout		7686628	1					
ANR	7687027	Argument	xmlout		7686628	0					
ANR	7687028	Identifier	xmlout		7686628	0					
ANR	7687029	Argument	"""        </TransformationMatrix>\\n"""		7686628	1					
ANR	7687030	PrimaryExpression	"""        </TransformationMatrix>\\n"""		7686628	0					
ANR	7687031	ExpressionStatement	track -> w = track -> w << 16	582:4:25043:25068	7686628	6	True				
ANR	7687032	AssignmentExpression	track -> w = track -> w << 16		7686628	0		=			
ANR	7687033	PtrMemberAccess	track -> w		7686628	0					
ANR	7687034	Identifier	track		7686628	0					
ANR	7687035	Identifier	w		7686628	1					
ANR	7687036	ShiftExpression	track -> w << 16		7686628	1		<<			
ANR	7687037	PtrMemberAccess	track -> w		7686628	0					
ANR	7687038	Identifier	track		7686628	0					
ANR	7687039	Identifier	w		7686628	1					
ANR	7687040	PrimaryExpression	16		7686628	1					
ANR	7687041	ExpressionStatement	track -> h = track -> h << 16	583:4:25074:25099	7686628	7	True				
ANR	7687042	AssignmentExpression	track -> h = track -> h << 16		7686628	0		=			
ANR	7687043	PtrMemberAccess	track -> h		7686628	0					
ANR	7687044	Identifier	track		7686628	0					
ANR	7687045	Identifier	h		7686628	1					
ANR	7687046	ShiftExpression	track -> h << 16		7686628	1		<<			
ANR	7687047	PtrMemberAccess	track -> h		7686628	0					
ANR	7687048	Identifier	track		7686628	0					
ANR	7687049	Identifier	h		7686628	1					
ANR	7687050	PrimaryExpression	16		7686628	1					
ANR	7687051	IfStatement	if ( notes )		7686628	8					
ANR	7687052	Condition	notes	585:8:25116:25120	7686628	0	True				
ANR	7687053	Identifier	notes		7686628	0					
ANR	7687054	CompoundStatement		72:15:3476:3476	7686628	1					
ANR	7687055	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"" )"	586:8:25133:25270	7686628	0	True				
ANR	7687056	CallExpression	"fprintf ( xmlout , ""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"" )"		7686628	0					
ANR	7687057	Callee	fprintf		7686628	0					
ANR	7687058	Identifier	fprintf		7686628	0					
ANR	7687059	ArgumentList	xmlout		7686628	1					
ANR	7687060	Argument	xmlout		7686628	0					
ANR	7687061	Identifier	xmlout		7686628	0					
ANR	7687062	Argument	"""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"""		7686628	1					
ANR	7687063	PrimaryExpression	"""        <!-- Width and Height in pixels are for the presentation; frames will be scaled to this. -->\\n"""		7686628	0					
ANR	7687064	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"	588:8:25280:25416	7686628	1	True				
ANR	7687065	CallExpression	"fprintf ( xmlout , ""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"		7686628	0					
ANR	7687066	Callee	fprintf		7686628	0					
ANR	7687067	Identifier	fprintf		7686628	0					
ANR	7687068	ArgumentList	xmlout		7686628	1					
ANR	7687069	Argument	xmlout		7686628	0					
ANR	7687070	Identifier	xmlout		7686628	0					
ANR	7687071	Argument	"""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		7686628	1					
ANR	7687072	PrimaryExpression	"""        <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		7686628	0					
ANR	7687073	ExpressionStatement	"fprintf ( xmlout , ""        <Width>\\n"" )"	591:4:25428:25467	7686628	9	True				
ANR	7687074	CallExpression	"fprintf ( xmlout , ""        <Width>\\n"" )"		7686628	0					
ANR	7687075	Callee	fprintf		7686628	0					
ANR	7687076	Identifier	fprintf		7686628	0					
ANR	7687077	ArgumentList	xmlout		7686628	1					
ANR	7687078	Argument	xmlout		7686628	0					
ANR	7687079	Identifier	xmlout		7686628	0					
ANR	7687080	Argument	"""        <Width>\\n"""		7686628	1					
ANR	7687081	PrimaryExpression	"""        <Width>\\n"""		7686628	0					
ANR	7687082	IfStatement	if ( raw )		7686628	10					
ANR	7687083	Condition	raw	592:8:25477:25479	7686628	0	True				
ANR	7687084	Identifier	raw		7686628	0					
ANR	7687085	CompoundStatement		79:13:3835:3835	7686628	1					
ANR	7687086	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> w )"	593:8:25492:25555	7686628	0	True				
ANR	7687087	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> w )"		7686628	0					
ANR	7687088	Callee	fprintf		7686628	0					
ANR	7687089	Identifier	fprintf		7686628	0					
ANR	7687090	ArgumentList	xmlout		7686628	1					
ANR	7687091	Argument	xmlout		7686628	0					
ANR	7687092	Identifier	xmlout		7686628	0					
ANR	7687093	Argument	"""          <AsHex>0x%08x</AsHex>\\n"""		7686628	1					
ANR	7687094	PrimaryExpression	"""          <AsHex>0x%08x</AsHex>\\n"""		7686628	0					
ANR	7687095	Argument	track -> w		7686628	2					
ANR	7687096	PtrMemberAccess	track -> w		7686628	0					
ANR	7687097	Identifier	track		7686628	0					
ANR	7687098	Identifier	w		7686628	1					
ANR	7687099	IfStatement	if ( derived )		7686628	11					
ANR	7687100	Condition	derived	595:8:25571:25577	7686628	0	True				
ANR	7687101	Identifier	derived		7686628	0					
ANR	7687102	CompoundStatement		82:17:3933:3933	7686628	1					
ANR	7687103	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> w / ( double ) 0x00010000 )"	596:8:25590:25723	7686628	0	True				
ANR	7687104	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> w / ( double ) 0x00010000 )"		7686628	0					
ANR	7687105	Callee	fprintf		7686628	0					
ANR	7687106	Identifier	fprintf		7686628	0					
ANR	7687107	ArgumentList	xmlout		7686628	1					
ANR	7687108	Argument	xmlout		7686628	0					
ANR	7687109	Identifier	xmlout		7686628	0					
ANR	7687110	Argument	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		7686628	1					
ANR	7687111	PrimaryExpression	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		7686628	0					
ANR	7687112	Argument	( double ) track -> w / ( double ) 0x00010000		7686628	2					
ANR	7687113	MultiplicativeExpression	( double ) track -> w / ( double ) 0x00010000		7686628	0		/			
ANR	7687114	CastExpression	( double ) track -> w		7686628	0					
ANR	7687115	CastTarget	double		7686628	0					
ANR	7687116	PtrMemberAccess	track -> w		7686628	1					
ANR	7687117	Identifier	track		7686628	0					
ANR	7687118	Identifier	w		7686628	1					
ANR	7687119	CastExpression	( double ) 0x00010000		7686628	1					
ANR	7687120	CastTarget	double		7686628	0					
ANR	7687121	PrimaryExpression	0x00010000		7686628	1					
ANR	7687122	ExpressionStatement	"fprintf ( xmlout , ""        </Width>\\n"" )"	600:4:25803:25843	7686628	12	True				
ANR	7687123	CallExpression	"fprintf ( xmlout , ""        </Width>\\n"" )"		7686628	0					
ANR	7687124	Callee	fprintf		7686628	0					
ANR	7687125	Identifier	fprintf		7686628	0					
ANR	7687126	ArgumentList	xmlout		7686628	1					
ANR	7687127	Argument	xmlout		7686628	0					
ANR	7687128	Identifier	xmlout		7686628	0					
ANR	7687129	Argument	"""        </Width>\\n"""		7686628	1					
ANR	7687130	PrimaryExpression	"""        </Width>\\n"""		7686628	0					
ANR	7687131	ExpressionStatement	"fprintf ( xmlout , ""        <Height>\\n"" )"	601:4:25849:25889	7686628	13	True				
ANR	7687132	CallExpression	"fprintf ( xmlout , ""        <Height>\\n"" )"		7686628	0					
ANR	7687133	Callee	fprintf		7686628	0					
ANR	7687134	Identifier	fprintf		7686628	0					
ANR	7687135	ArgumentList	xmlout		7686628	1					
ANR	7687136	Argument	xmlout		7686628	0					
ANR	7687137	Identifier	xmlout		7686628	0					
ANR	7687138	Argument	"""        <Height>\\n"""		7686628	1					
ANR	7687139	PrimaryExpression	"""        <Height>\\n"""		7686628	0					
ANR	7687140	IfStatement	if ( raw )		7686628	14					
ANR	7687141	Condition	raw	602:8:25899:25901	7686628	0	True				
ANR	7687142	Identifier	raw		7686628	0					
ANR	7687143	CompoundStatement		89:13:4257:4257	7686628	1					
ANR	7687144	ExpressionStatement	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> h )"	603:8:25914:25977	7686628	0	True				
ANR	7687145	CallExpression	"fprintf ( xmlout , ""          <AsHex>0x%08x</AsHex>\\n"" , track -> h )"		7686628	0					
ANR	7687146	Callee	fprintf		7686628	0					
ANR	7687147	Identifier	fprintf		7686628	0					
ANR	7687148	ArgumentList	xmlout		7686628	1					
ANR	7687149	Argument	xmlout		7686628	0					
ANR	7687150	Identifier	xmlout		7686628	0					
ANR	7687151	Argument	"""          <AsHex>0x%08x</AsHex>\\n"""		7686628	1					
ANR	7687152	PrimaryExpression	"""          <AsHex>0x%08x</AsHex>\\n"""		7686628	0					
ANR	7687153	Argument	track -> h		7686628	2					
ANR	7687154	PtrMemberAccess	track -> h		7686628	0					
ANR	7687155	Identifier	track		7686628	0					
ANR	7687156	Identifier	h		7686628	1					
ANR	7687157	IfStatement	if ( derived )		7686628	15					
ANR	7687158	Condition	derived	605:8:25993:25999	7686628	0	True				
ANR	7687159	Identifier	derived		7686628	0					
ANR	7687160	CompoundStatement		92:17:4355:4355	7686628	1					
ANR	7687161	ExpressionStatement	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> h / ( double ) 0x00010000 )"	606:8:26012:26145	7686628	0	True				
ANR	7687162	CallExpression	"fprintf ( xmlout , ""          <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> h / ( double ) 0x00010000 )"		7686628	0					
ANR	7687163	Callee	fprintf		7686628	0					
ANR	7687164	Identifier	fprintf		7686628	0					
ANR	7687165	ArgumentList	xmlout		7686628	1					
ANR	7687166	Argument	xmlout		7686628	0					
ANR	7687167	Identifier	xmlout		7686628	0					
ANR	7687168	Argument	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		7686628	1					
ANR	7687169	PrimaryExpression	"""          <AsDecimal>%12.6f</AsDecimal>\\n"""		7686628	0					
ANR	7687170	Argument	( double ) track -> h / ( double ) 0x00010000		7686628	2					
ANR	7687171	MultiplicativeExpression	( double ) track -> h / ( double ) 0x00010000		7686628	0		/			
ANR	7687172	CastExpression	( double ) track -> h		7686628	0					
ANR	7687173	CastTarget	double		7686628	0					
ANR	7687174	PtrMemberAccess	track -> h		7686628	1					
ANR	7687175	Identifier	track		7686628	0					
ANR	7687176	Identifier	h		7686628	1					
ANR	7687177	CastExpression	( double ) 0x00010000		7686628	1					
ANR	7687178	CastTarget	double		7686628	0					
ANR	7687179	PrimaryExpression	0x00010000		7686628	1					
ANR	7687180	ExpressionStatement	"fprintf ( xmlout , ""        </Height>\\n"" )"	610:4:26225:26266	7686628	16	True				
ANR	7687181	CallExpression	"fprintf ( xmlout , ""        </Height>\\n"" )"		7686628	0					
ANR	7687182	Callee	fprintf		7686628	0					
ANR	7687183	Identifier	fprintf		7686628	0					
ANR	7687184	ArgumentList	xmlout		7686628	1					
ANR	7687185	Argument	xmlout		7686628	0					
ANR	7687186	Identifier	xmlout		7686628	0					
ANR	7687187	Argument	"""        </Height>\\n"""		7686628	1					
ANR	7687188	PrimaryExpression	"""        </Height>\\n"""		7686628	0					
ANR	7687189	IfStatement	if ( notes )		7686628	17					
ANR	7687190	Condition	notes	612:8:26297:26301	7686628	0	True				
ANR	7687191	Identifier	notes		7686628	0					
ANR	7687192	CompoundStatement		99:15:4657:4657	7686628	1					
ANR	7687193	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	613:8:26314:26455	7686628	0	True				
ANR	7687194	CallExpression	"fprintf ( xmlout , ""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		7686628	0					
ANR	7687195	Callee	fprintf		7686628	0					
ANR	7687196	Identifier	fprintf		7686628	0					
ANR	7687197	ArgumentList	xmlout		7686628	1					
ANR	7687198	Argument	xmlout		7686628	0					
ANR	7687199	Identifier	xmlout		7686628	0					
ANR	7687200	Argument	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7686628	1					
ANR	7687201	PrimaryExpression	"""        <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7686628	0					
ANR	7687202	ExpressionStatement	"fprintf ( xmlout , ""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"" )"	615:8:26465:26630	7686628	1	True				
ANR	7687203	CallExpression	"fprintf ( xmlout , ""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"" )"		7686628	0					
ANR	7687204	Callee	fprintf		7686628	0					
ANR	7687205	Identifier	fprintf		7686628	0					
ANR	7687206	ArgumentList	xmlout		7686628	1					
ANR	7687207	Argument	xmlout		7686628	0					
ANR	7687208	Identifier	xmlout		7686628	0					
ANR	7687209	Argument	"""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"""		7686628	1					
ANR	7687210	PrimaryExpression	"""        <!-- Also, width and height values shown here will actually be those read from track's <VisualSampleEntry> if given. -->\\n"""		7686628	0					
ANR	7687211	ExpressionStatement	track -> w = track -> w >> 16	618:4:26642:26667	7686628	18	True				
ANR	7687212	AssignmentExpression	track -> w = track -> w >> 16		7686628	0		=			
ANR	7687213	PtrMemberAccess	track -> w		7686628	0					
ANR	7687214	Identifier	track		7686628	0					
ANR	7687215	Identifier	w		7686628	1					
ANR	7687216	ShiftExpression	track -> w >> 16		7686628	1		>>			
ANR	7687217	PtrMemberAccess	track -> w		7686628	0					
ANR	7687218	Identifier	track		7686628	0					
ANR	7687219	Identifier	w		7686628	1					
ANR	7687220	PrimaryExpression	16		7686628	1					
ANR	7687221	ExpressionStatement	track -> h = track -> h >> 16	619:4:26673:26698	7686628	19	True				
ANR	7687222	AssignmentExpression	track -> h = track -> h >> 16		7686628	0		=			
ANR	7687223	PtrMemberAccess	track -> h		7686628	0					
ANR	7687224	Identifier	track		7686628	0					
ANR	7687225	Identifier	h		7686628	1					
ANR	7687226	ShiftExpression	track -> h >> 16		7686628	1		>>			
ANR	7687227	PtrMemberAccess	track -> h		7686628	0					
ANR	7687228	Identifier	track		7686628	0					
ANR	7687229	Identifier	h		7686628	1					
ANR	7687230	PrimaryExpression	16		7686628	1					
ANR	7687231	ExpressionStatement	"fprintf ( xmlout , ""      </TrackHeader>\\n"" )"	621:4:26711:26755	7686628	20	True				
ANR	7687232	CallExpression	"fprintf ( xmlout , ""      </TrackHeader>\\n"" )"		7686628	0					
ANR	7687233	Callee	fprintf		7686628	0					
ANR	7687234	Identifier	fprintf		7686628	0					
ANR	7687235	ArgumentList	xmlout		7686628	1					
ANR	7687236	Argument	xmlout		7686628	0					
ANR	7687237	Identifier	xmlout		7686628	0					
ANR	7687238	Argument	"""      </TrackHeader>\\n"""		7686628	1					
ANR	7687239	PrimaryExpression	"""      </TrackHeader>\\n"""		7686628	0					
ANR	7687240	ReturnType	void		7686628	1					
ANR	7687241	Identifier	xml_write_tkhd		7686628	2					
ANR	7687242	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		7686628	3					
ANR	7687243	Parameter	FILE * file	512:20:21564:21573	7686628	0	True				
ANR	7687244	ParameterType	FILE *		7686628	0					
ANR	7687245	Identifier	file		7686628	1					
ANR	7687246	Parameter	FILE * xmlout	512:32:21576:21587	7686628	1	True				
ANR	7687247	ParameterType	FILE *		7686628	0					
ANR	7687248	Identifier	xmlout		7686628	1					
ANR	7687249	Parameter	mj2_tk_t * track	512:46:21590:21604	7686628	2	True				
ANR	7687250	ParameterType	mj2_tk_t *		7686628	0					
ANR	7687251	Identifier	track		7686628	1					
ANR	7687252	Parameter	unsigned int tnum	513:20:21627:21643	7686628	3	True				
ANR	7687253	ParameterType	unsigned int		7686628	0					
ANR	7687254	Identifier	tnum		7686628	1					
ANR	7687255	CFGEntryNode	ENTRY		7686628		True				
ANR	7687256	CFGExitNode	EXIT		7686628		True				
ANR	7687257	Symbol	notes		7686628						
ANR	7687258	Symbol	tnum		7686628						
ANR	7687259	Symbol	track -> h		7686628						
ANR	7687260	Symbol	* * track		7686628						
ANR	7687261	Symbol	track -> trans_matrix		7686628						
ANR	7687262	Symbol	raw		7686628						
ANR	7687263	Symbol	* track -> trans_matrix		7686628						
ANR	7687264	Symbol	* track		7686628						
ANR	7687265	Symbol	xmlout		7686628						
ANR	7687266	Symbol	track -> track_type		7686628						
ANR	7687267	Symbol	file		7686628						
ANR	7687268	Symbol	track -> w		7686628						
ANR	7687269	Symbol	track -> track_ID		7686628						
ANR	7687270	Symbol	track -> volume		7686628						
ANR	7687271	Symbol	track		7686628						
ANR	7687272	Symbol	track -> layer		7686628						
ANR	7687273	Symbol	derived		7686628						
ANR	7687274	Function	xml_write_udta	626:0:26781:28137							
ANR	7687275	FunctionDef	"xml_write_udta (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		7687274	0					
ANR	7687276	CompoundStatement		628:0:26883:28137	7687274	0					
ANR	7687277	Statement	IMAGINE	633:4:27124:27130	7687274	0	True				
ANR	7687278	Statement	track	633:12:27132:27136	7687274	1	True				
ANR	7687279	Statement	->	633:17:27137:27138	7687274	2	True				
ANR	7687280	Statement	udta	633:19:27139:27142	7687274	3	True				
ANR	7687281	Statement	","	633:23:27143:27143	7687274	4	True				
ANR	7687282	Statement	track	633:25:27145:27149	7687274	5	True				
ANR	7687283	Statement	->	633:30:27150:27151	7687274	6	True				
ANR	7687284	Statement	copyright_count	633:32:27152:27166	7687274	7	True				
ANR	7687285	Statement	","	633:47:27167:27167	7687274	8	True				
ANR	7687286	Statement	track	634:12:27181:27185	7687274	9	True				
ANR	7687287	Statement	->	634:17:27186:27187	7687274	10	True				
ANR	7687288	Statement	copyright_language	634:19:27188:27205	7687274	11	True				
ANR	7687289	Statement	[	634:37:27206:27206	7687274	12	True				
ANR	7687290	Statement	i	634:38:27207:27207	7687274	13	True				
ANR	7687291	Statement	]	634:39:27208:27208	7687274	14	True				
ANR	7687292	Statement	(	634:40:27209:27209	7687274	15	True				
ANR	7687293	Statement	array	634:41:27210:27214	7687274	16	True				
ANR	7687294	Statement	of	634:47:27216:27217	7687274	17	True				
ANR	7687295	Statement	16	634:50:27219:27220	7687274	18	True				
ANR	7687296	Statement	bit	634:52:27221:27223	7687274	19	True				
ANR	7687297	Statement	ints	634:56:27225:27228	7687274	20	True				
ANR	7687298	Statement	)	634:60:27229:27229	7687274	21	True				
ANR	7687299	Statement	","	634:61:27230:27230	7687274	22	True				
ANR	7687300	Statement	track	635:12:27244:27248	7687274	23	True				
ANR	7687301	Statement	->	635:17:27249:27250	7687274	24	True				
ANR	7687302	Statement	copyright_notice	635:19:27251:27266	7687274	25	True				
ANR	7687303	Statement	[	635:35:27267:27267	7687274	26	True				
ANR	7687304	Statement	i	635:36:27268:27268	7687274	27	True				
ANR	7687305	Statement	]	635:37:27269:27269	7687274	28	True				
ANR	7687306	Statement	(	635:38:27270:27270	7687274	29	True				
ANR	7687307	Statement	array	635:39:27271:27275	7687274	30	True				
ANR	7687308	Statement	of	635:45:27277:27278	7687274	31	True				
ANR	7687309	Statement	buffers	635:48:27280:27286	7687274	32	True				
ANR	7687310	Statement	)	635:55:27287:27287	7687274	33	True				
ANR	7687311	Statement	PROBABLY	636:12:27301:27308	7687274	34	True				
ANR	7687312	Statement	ALSO	636:21:27310:27313	7687274	35	True				
ANR	7687313	Statement	NEED	636:26:27315:27318	7687274	36	True				
ANR	7687314	Statement	track	636:31:27320:27324	7687274	37	True				
ANR	7687315	Statement	->	636:36:27325:27326	7687274	38	True				
ANR	7687316	Statement	udta_len	636:38:27327:27334	7687274	39	True				
ANR	7687317	Statement	or	636:47:27336:27337	7687274	40	True				
ANR	7687318	Statement	special	636:50:27339:27345	7687274	41	True				
ANR	7687319	Statement	handler	636:58:27347:27353	7687274	42	True				
ANR	7687320	Statement	for	636:66:27355:27357	7687274	43	True				
ANR	7687321	Statement	non	636:70:27359:27361	7687274	44	True				
ANR	7687322	Statement	-	636:74:27363:27363	7687274	45	True				
ANR	7687323	IdentifierDeclStatement	standard boxes char buf [ 5 ] ;	636:76:27365:27403	7687274	46	True				
ANR	7687324	IdentifierDecl	buf [ 5 ]		7687274	0					
ANR	7687325	IdentifierDeclType	standard boxes char [ 5 ]		7687274	0					
ANR	7687326	Identifier	buf		7687274	1					
ANR	7687327	PrimaryExpression	5		7687274	2					
ANR	7687328	IdentifierDeclStatement	int i ;	638:4:27409:27414	7687274	47	True				
ANR	7687329	IdentifierDecl	i		7687274	0					
ANR	7687330	IdentifierDeclType	int		7687274	0					
ANR	7687331	Identifier	i		7687274	1					
ANR	7687332	IfStatement	if ( track -> udta != 1 )		7687274	48					
ANR	7687333	Condition	track -> udta != 1	640:8:27425:27440	7687274	0	True				
ANR	7687334	EqualityExpression	track -> udta != 1		7687274	0		!=			
ANR	7687335	PtrMemberAccess	track -> udta		7687274	0					
ANR	7687336	Identifier	track		7687274	0					
ANR	7687337	Identifier	udta		7687274	1					
ANR	7687338	PrimaryExpression	1		7687274	1					
ANR	7687339	CompoundStatement		13:26:559:559	7687274	1					
ANR	7687340	ReturnStatement	return ;	641:8:27453:27459	7687274	0	True				
ANR	7687341	ExpressionStatement	"fprintf ( xmlout , ""      <UserData BoxType=\\""udta\\"">\\n"" )"	644:4:27493:27550	7687274	49	True				
ANR	7687342	CallExpression	"fprintf ( xmlout , ""      <UserData BoxType=\\""udta\\"">\\n"" )"		7687274	0					
ANR	7687343	Callee	fprintf		7687274	0					
ANR	7687344	Identifier	fprintf		7687274	0					
ANR	7687345	ArgumentList	xmlout		7687274	1					
ANR	7687346	Argument	xmlout		7687274	0					
ANR	7687347	Identifier	xmlout		7687274	0					
ANR	7687348	Argument	"""      <UserData BoxType=\\""udta\\"">\\n"""		7687274	1					
ANR	7687349	PrimaryExpression	"""      <UserData BoxType=\\""udta\\"">\\n"""		7687274	0					
ANR	7687350	ForStatement	for ( i = 0 ; i < track -> copyright_count ; i ++ )		7687274	50					
ANR	7687351	ForInit	i = 0 ;	645:9:27561:27566	7687274	0	True				
ANR	7687352	AssignmentExpression	i = 0		7687274	0		=			
ANR	7687353	Identifier	i		7687274	0					
ANR	7687354	PrimaryExpression	0		7687274	1					
ANR	7687355	Condition	i < track -> copyright_count	645:16:27568:27593	7687274	1	True				
ANR	7687356	RelationalExpression	i < track -> copyright_count		7687274	0		<			
ANR	7687357	Identifier	i		7687274	0					
ANR	7687358	PtrMemberAccess	track -> copyright_count		7687274	1					
ANR	7687359	Identifier	track		7687274	0					
ANR	7687360	Identifier	copyright_count		7687274	1					
ANR	7687361	PostIncDecOperationExpression	i ++	645:44:27596:27598	7687274	2	True				
ANR	7687362	Identifier	i		7687274	0					
ANR	7687363	IncDec	++		7687274	1					
ANR	7687364	CompoundStatement		18:49:717:717	7687274	3					
ANR	7687365	ExpressionStatement	"fprintf ( xmlout , ""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"	646:8:27611:27709	7687274	0	True				
ANR	7687366	CallExpression	"fprintf ( xmlout , ""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"" , i + 1 )"		7687274	0					
ANR	7687367	Callee	fprintf		7687274	0					
ANR	7687368	Identifier	fprintf		7687274	0					
ANR	7687369	ArgumentList	xmlout		7687274	1					
ANR	7687370	Argument	xmlout		7687274	0					
ANR	7687371	Identifier	xmlout		7687274	0					
ANR	7687372	Argument	"""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		7687274	1					
ANR	7687373	PrimaryExpression	"""        <Copyright BoxType=\\""cprt\\""> Instance=\\""%d\\"">\\n"""		7687274	0					
ANR	7687374	Argument	i + 1		7687274	2					
ANR	7687375	AdditiveExpression	i + 1		7687274	0		+			
ANR	7687376	Identifier	i		7687274	0					
ANR	7687377	PrimaryExpression	1		7687274	1					
ANR	7687378	ExpressionStatement	"int16_to_3packedchars ( ( short int ) track -> copyright_languages [ i ] , buf )"	648:8:27719:27787	7687274	1	True				
ANR	7687379	CallExpression	"int16_to_3packedchars ( ( short int ) track -> copyright_languages [ i ] , buf )"		7687274	0					
ANR	7687380	Callee	int16_to_3packedchars		7687274	0					
ANR	7687381	Identifier	int16_to_3packedchars		7687274	0					
ANR	7687382	ArgumentList	( short int ) track -> copyright_languages [ i ]		7687274	1					
ANR	7687383	Argument	( short int ) track -> copyright_languages [ i ]		7687274	0					
ANR	7687384	CastExpression	( short int ) track -> copyright_languages [ i ]		7687274	0					
ANR	7687385	CastTarget	short int		7687274	0					
ANR	7687386	ArrayIndexing	track -> copyright_languages [ i ]		7687274	1					
ANR	7687387	PtrMemberAccess	track -> copyright_languages		7687274	0					
ANR	7687388	Identifier	track		7687274	0					
ANR	7687389	Identifier	copyright_languages		7687274	1					
ANR	7687390	Identifier	i		7687274	1					
ANR	7687391	Argument	buf		7687274	1					
ANR	7687392	Identifier	buf		7687274	0					
ANR	7687393	ExpressionStatement	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"	649:8:27797:27857	7687274	2	True				
ANR	7687394	CallExpression	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"		7687274	0					
ANR	7687395	Callee	fprintf		7687274	0					
ANR	7687396	Identifier	fprintf		7687274	0					
ANR	7687397	ArgumentList	xmlout		7687274	1					
ANR	7687398	Argument	xmlout		7687274	0					
ANR	7687399	Identifier	xmlout		7687274	0					
ANR	7687400	Argument	"""          <Language>%s</Language>\\n"""		7687274	1					
ANR	7687401	PrimaryExpression	"""          <Language>%s</Language>\\n"""		7687274	0					
ANR	7687402	Argument	buf		7687274	2					
ANR	7687403	Identifier	buf		7687274	0					
ANR	7687404	ExpressionStatement	"fprintf ( xmlout , ""          <Notice>%s</Notice>\\n"" , track -> copyright_notices [ i ] )"	650:8:27884:27980	7687274	3	True				
ANR	7687405	CallExpression	"fprintf ( xmlout , ""          <Notice>%s</Notice>\\n"" , track -> copyright_notices [ i ] )"		7687274	0					
ANR	7687406	Callee	fprintf		7687274	0					
ANR	7687407	Identifier	fprintf		7687274	0					
ANR	7687408	ArgumentList	xmlout		7687274	1					
ANR	7687409	Argument	xmlout		7687274	0					
ANR	7687410	Identifier	xmlout		7687274	0					
ANR	7687411	Argument	"""          <Notice>%s</Notice>\\n"""		7687274	1					
ANR	7687412	PrimaryExpression	"""          <Notice>%s</Notice>\\n"""		7687274	0					
ANR	7687413	Argument	track -> copyright_notices [ i ]		7687274	2					
ANR	7687414	ArrayIndexing	track -> copyright_notices [ i ]		7687274	0					
ANR	7687415	PtrMemberAccess	track -> copyright_notices		7687274	0					
ANR	7687416	Identifier	track		7687274	0					
ANR	7687417	Identifier	copyright_notices		7687274	1					
ANR	7687418	Identifier	i		7687274	1					
ANR	7687419	ExpressionStatement	"fprintf ( xmlout , ""        </Copyright>\\n"" , i + 1 )"	652:8:27990:28039	7687274	4	True				
ANR	7687420	CallExpression	"fprintf ( xmlout , ""        </Copyright>\\n"" , i + 1 )"		7687274	0					
ANR	7687421	Callee	fprintf		7687274	0					
ANR	7687422	Identifier	fprintf		7687274	0					
ANR	7687423	ArgumentList	xmlout		7687274	1					
ANR	7687424	Argument	xmlout		7687274	0					
ANR	7687425	Identifier	xmlout		7687274	0					
ANR	7687426	Argument	"""        </Copyright>\\n"""		7687274	1					
ANR	7687427	PrimaryExpression	"""        </Copyright>\\n"""		7687274	0					
ANR	7687428	Argument	i + 1		7687274	2					
ANR	7687429	AdditiveExpression	i + 1		7687274	0		+			
ANR	7687430	Identifier	i		7687274	0					
ANR	7687431	PrimaryExpression	1		7687274	1					
ANR	7687432	ExpressionStatement	"fprintf ( xmlout , ""      </UserData>\\n"" )"	655:4:28087:28128	7687274	51	True				
ANR	7687433	CallExpression	"fprintf ( xmlout , ""      </UserData>\\n"" )"		7687274	0					
ANR	7687434	Callee	fprintf		7687274	0					
ANR	7687435	Identifier	fprintf		7687274	0					
ANR	7687436	ArgumentList	xmlout		7687274	1					
ANR	7687437	Argument	xmlout		7687274	0					
ANR	7687438	Identifier	xmlout		7687274	0					
ANR	7687439	Argument	"""      </UserData>\\n"""		7687274	1					
ANR	7687440	PrimaryExpression	"""      </UserData>\\n"""		7687274	0					
ANR	7687441	ReturnType	void		7687274	1					
ANR	7687442	Identifier	xml_write_udta		7687274	2					
ANR	7687443	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		7687274	3					
ANR	7687444	Parameter	FILE * file	626:20:26801:26810	7687274	0	True				
ANR	7687445	ParameterType	FILE *		7687274	0					
ANR	7687446	Identifier	file		7687274	1					
ANR	7687447	Parameter	FILE * xmlout	626:32:26813:26824	7687274	1	True				
ANR	7687448	ParameterType	FILE *		7687274	0					
ANR	7687449	Identifier	xmlout		7687274	1					
ANR	7687450	Parameter	mj2_tk_t * track	626:46:26827:26841	7687274	2	True				
ANR	7687451	ParameterType	mj2_tk_t *		7687274	0					
ANR	7687452	Identifier	track		7687274	1					
ANR	7687453	Parameter	unsigned int tnum	627:20:26864:26880	7687274	3	True				
ANR	7687454	ParameterType	unsigned int		7687274	0					
ANR	7687455	Identifier	tnum		7687274	1					
ANR	7687456	CFGEntryNode	ENTRY		7687274		True				
ANR	7687457	CFGExitNode	EXIT		7687274		True				
ANR	7687458	Symbol	tnum		7687274						
ANR	7687459	Symbol	* * track		7687274						
ANR	7687460	Symbol	i		7687274						
ANR	7687461	Symbol	* track -> copyright_notices		7687274						
ANR	7687462	Symbol	track -> copyright_count		7687274						
ANR	7687463	Symbol	* track		7687274						
ANR	7687464	Symbol	track -> copyright_notices		7687274						
ANR	7687465	Symbol	xmlout		7687274						
ANR	7687466	Symbol	track -> udta		7687274						
ANR	7687467	Symbol	buf		7687274						
ANR	7687468	Symbol	file		7687274						
ANR	7687469	Symbol	* i		7687274						
ANR	7687470	Symbol	track -> copyright_languages		7687274						
ANR	7687471	Symbol	track		7687274						
ANR	7687472	Symbol	* track -> copyright_languages		7687274						
ANR	7687473	Function	xml_write_mdia	661:0:28161:38518							
ANR	7687474	FunctionDef	"xml_write_mdia (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		7687473	0					
ANR	7687475	CompoundStatement		663:0:28263:38518	7687473	0					
ANR	7687476	IdentifierDeclStatement	char buf [ 5 ] ;	664:4:28269:28280	7687473	0	True				
ANR	7687477	IdentifierDecl	buf [ 5 ]		7687473	0					
ANR	7687478	IdentifierDeclType	char [ 5 ]		7687473	0					
ANR	7687479	Identifier	buf		7687473	1					
ANR	7687480	PrimaryExpression	5		7687473	2					
ANR	7687481	IdentifierDeclStatement	"int i , k ;"	665:4:28286:28294	7687473	1	True				
ANR	7687482	IdentifierDecl	i		7687473	0					
ANR	7687483	IdentifierDeclType	int		7687473	0					
ANR	7687484	Identifier	i		7687473	1					
ANR	7687485	IdentifierDecl	k		7687473	1					
ANR	7687486	IdentifierDeclType	int		7687473	0					
ANR	7687487	Identifier	k		7687473	1					
ANR	7687488	ExpressionStatement	buf [ 4 ] = '\\0'	666:4:28300:28313	7687473	2	True				
ANR	7687489	AssignmentExpression	buf [ 4 ] = '\\0'		7687473	0		=			
ANR	7687490	ArrayIndexing	buf [ 4 ]		7687473	0					
ANR	7687491	Identifier	buf		7687473	0					
ANR	7687492	PrimaryExpression	4		7687473	1					
ANR	7687493	PrimaryExpression	'\\0'		7687473	1					
ANR	7687494	ExpressionStatement	"fprintf ( xmlout , ""      <Media BoxType=\\""mdia\\"">\\n"" )"	668:4:28320:28374	7687473	3	True				
ANR	7687495	CallExpression	"fprintf ( xmlout , ""      <Media BoxType=\\""mdia\\"">\\n"" )"		7687473	0					
ANR	7687496	Callee	fprintf		7687473	0					
ANR	7687497	Identifier	fprintf		7687473	0					
ANR	7687498	ArgumentList	xmlout		7687473	1					
ANR	7687499	Argument	xmlout		7687473	0					
ANR	7687500	Identifier	xmlout		7687473	0					
ANR	7687501	Argument	"""      <Media BoxType=\\""mdia\\"">\\n"""		7687473	1					
ANR	7687502	PrimaryExpression	"""      <Media BoxType=\\""mdia\\"">\\n"""		7687473	0					
ANR	7687503	ExpressionStatement	"fprintf ( xmlout , ""        <MediaHeader BoxType=\\""mdhd\\"">\\n"" )"	669:4:28380:28442	7687473	4	True				
ANR	7687504	CallExpression	"fprintf ( xmlout , ""        <MediaHeader BoxType=\\""mdhd\\"">\\n"" )"		7687473	0					
ANR	7687505	Callee	fprintf		7687473	0					
ANR	7687506	Identifier	fprintf		7687473	0					
ANR	7687507	ArgumentList	xmlout		7687473	1					
ANR	7687508	Argument	xmlout		7687473	0					
ANR	7687509	Identifier	xmlout		7687473	0					
ANR	7687510	Argument	"""        <MediaHeader BoxType=\\""mdhd\\"">\\n"""		7687473	1					
ANR	7687511	PrimaryExpression	"""        <MediaHeader BoxType=\\""mdhd\\"">\\n"""		7687473	0					
ANR	7687512	ExpressionStatement	"fprintf ( xmlout , ""          <CreationTime>\\n"" )"	670:4:28448:28496	7687473	5	True				
ANR	7687513	CallExpression	"fprintf ( xmlout , ""          <CreationTime>\\n"" )"		7687473	0					
ANR	7687514	Callee	fprintf		7687473	0					
ANR	7687515	Identifier	fprintf		7687473	0					
ANR	7687516	ArgumentList	xmlout		7687473	1					
ANR	7687517	Argument	xmlout		7687473	0					
ANR	7687518	Identifier	xmlout		7687473	0					
ANR	7687519	Argument	"""          <CreationTime>\\n"""		7687473	1					
ANR	7687520	PrimaryExpression	"""          <CreationTime>\\n"""		7687473	0					
ANR	7687521	IfStatement	if ( raw )		7687473	6					
ANR	7687522	Condition	raw	671:8:28506:28508	7687473	0	True				
ANR	7687523	Identifier	raw		7687473	0					
ANR	7687524	CompoundStatement		9:13:247:247	7687473	1					
ANR	7687525	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> creation_time )"	672:8:28521:28618	7687473	0	True				
ANR	7687526	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> creation_time )"		7687473	0					
ANR	7687527	Callee	fprintf		7687473	0					
ANR	7687528	Identifier	fprintf		7687473	0					
ANR	7687529	ArgumentList	xmlout		7687473	1					
ANR	7687530	Argument	xmlout		7687473	0					
ANR	7687531	Identifier	xmlout		7687473	0					
ANR	7687532	Argument	"""            <InSeconds>%u</InSeconds>\\n"""		7687473	1					
ANR	7687533	PrimaryExpression	"""            <InSeconds>%u</InSeconds>\\n"""		7687473	0					
ANR	7687534	Argument	track -> creation_time		7687473	2					
ANR	7687535	PtrMemberAccess	track -> creation_time		7687473	0					
ANR	7687536	Identifier	track		7687473	0					
ANR	7687537	Identifier	creation_time		7687473	1					
ANR	7687538	IfStatement	if ( notes )		7687473	7					
ANR	7687539	Condition	notes	675:8:28634:28638	7687473	0	True				
ANR	7687540	Identifier	notes		7687473	0					
ANR	7687541	CompoundStatement		13:15:377:377	7687473	1					
ANR	7687542	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"	676:8:28651:28760	7687473	0	True				
ANR	7687543	CallExpression	"fprintf ( xmlout , ""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"" )"		7687473	0					
ANR	7687544	Callee	fprintf		7687473	0					
ANR	7687545	Identifier	fprintf		7687473	0					
ANR	7687546	ArgumentList	xmlout		7687473	1					
ANR	7687547	Argument	xmlout		7687473	0					
ANR	7687548	Identifier	xmlout		7687473	0					
ANR	7687549	Argument	"""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		7687473	1					
ANR	7687550	PrimaryExpression	"""            <!-- Seconds since start of Jan. 1, 1904 UTC (Greenwich) -->\\n"""		7687473	0					
ANR	7687551	IfStatement	if ( derived )		7687473	8					
ANR	7687552	Condition	derived	682:8:28977:28983	7687473	0	True				
ANR	7687553	Identifier	derived		7687473	0					
ANR	7687554	CompoundStatement		20:17:722:722	7687473	1					
ANR	7687555	ExpressionStatement	"fprintf ( xmlout , ""            <AsLocalTime>"" )"	683:8:28996:29041	7687473	0	True				
ANR	7687556	CallExpression	"fprintf ( xmlout , ""            <AsLocalTime>"" )"		7687473	0					
ANR	7687557	Callee	fprintf		7687473	0					
ANR	7687558	Identifier	fprintf		7687473	0					
ANR	7687559	ArgumentList	xmlout		7687473	1					
ANR	7687560	Argument	xmlout		7687473	0					
ANR	7687561	Identifier	xmlout		7687473	0					
ANR	7687562	Argument	"""            <AsLocalTime>"""		7687473	1					
ANR	7687563	PrimaryExpression	"""            <AsLocalTime>"""		7687473	0					
ANR	7687564	ExpressionStatement	"xml_time_out ( xmlout , track -> creation_time - 2082844800 )"	684:8:29051:29106	7687473	1	True				
ANR	7687565	CallExpression	"xml_time_out ( xmlout , track -> creation_time - 2082844800 )"		7687473	0					
ANR	7687566	Callee	xml_time_out		7687473	0					
ANR	7687567	Identifier	xml_time_out		7687473	0					
ANR	7687568	ArgumentList	xmlout		7687473	1					
ANR	7687569	Argument	xmlout		7687473	0					
ANR	7687570	Identifier	xmlout		7687473	0					
ANR	7687571	Argument	track -> creation_time - 2082844800		7687473	1					
ANR	7687572	AdditiveExpression	track -> creation_time - 2082844800		7687473	0		-			
ANR	7687573	PtrMemberAccess	track -> creation_time		7687473	0					
ANR	7687574	Identifier	track		7687473	0					
ANR	7687575	Identifier	creation_time		7687473	1					
ANR	7687576	PrimaryExpression	2082844800		7687473	1					
ANR	7687577	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	685:8:29116:29151	7687473	2	True				
ANR	7687578	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		7687473	0					
ANR	7687579	Callee	fprintf		7687473	0					
ANR	7687580	Identifier	fprintf		7687473	0					
ANR	7687581	ArgumentList	xmlout		7687473	1					
ANR	7687582	Argument	xmlout		7687473	0					
ANR	7687583	Identifier	xmlout		7687473	0					
ANR	7687584	Argument	"""</AsLocalTime>\\n"""		7687473	1					
ANR	7687585	PrimaryExpression	"""</AsLocalTime>\\n"""		7687473	0					
ANR	7687586	ExpressionStatement	"fprintf ( xmlout , ""          </CreationTime>\\n"" )"	687:4:29163:29212	7687473	9	True				
ANR	7687587	CallExpression	"fprintf ( xmlout , ""          </CreationTime>\\n"" )"		7687473	0					
ANR	7687588	Callee	fprintf		7687473	0					
ANR	7687589	Identifier	fprintf		7687473	0					
ANR	7687590	ArgumentList	xmlout		7687473	1					
ANR	7687591	Argument	xmlout		7687473	0					
ANR	7687592	Identifier	xmlout		7687473	0					
ANR	7687593	Argument	"""          </CreationTime>\\n"""		7687473	1					
ANR	7687594	PrimaryExpression	"""          </CreationTime>\\n"""		7687473	0					
ANR	7687595	ExpressionStatement	"fprintf ( xmlout , ""          <ModificationTime>\\n"" )"	688:4:29218:29270	7687473	10	True				
ANR	7687596	CallExpression	"fprintf ( xmlout , ""          <ModificationTime>\\n"" )"		7687473	0					
ANR	7687597	Callee	fprintf		7687473	0					
ANR	7687598	Identifier	fprintf		7687473	0					
ANR	7687599	ArgumentList	xmlout		7687473	1					
ANR	7687600	Argument	xmlout		7687473	0					
ANR	7687601	Identifier	xmlout		7687473	0					
ANR	7687602	Argument	"""          <ModificationTime>\\n"""		7687473	1					
ANR	7687603	PrimaryExpression	"""          <ModificationTime>\\n"""		7687473	0					
ANR	7687604	IfStatement	if ( raw )		7687473	11					
ANR	7687605	Condition	raw	689:8:29280:29282	7687473	0	True				
ANR	7687606	Identifier	raw		7687473	0					
ANR	7687607	CompoundStatement		27:13:1021:1021	7687473	1					
ANR	7687608	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> modification_time )"	690:8:29295:29396	7687473	0	True				
ANR	7687609	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%u</InSeconds>\\n"" , track -> modification_time )"		7687473	0					
ANR	7687610	Callee	fprintf		7687473	0					
ANR	7687611	Identifier	fprintf		7687473	0					
ANR	7687612	ArgumentList	xmlout		7687473	1					
ANR	7687613	Argument	xmlout		7687473	0					
ANR	7687614	Identifier	xmlout		7687473	0					
ANR	7687615	Argument	"""            <InSeconds>%u</InSeconds>\\n"""		7687473	1					
ANR	7687616	PrimaryExpression	"""            <InSeconds>%u</InSeconds>\\n"""		7687473	0					
ANR	7687617	Argument	track -> modification_time		7687473	2					
ANR	7687618	PtrMemberAccess	track -> modification_time		7687473	0					
ANR	7687619	Identifier	track		7687473	0					
ANR	7687620	Identifier	modification_time		7687473	1					
ANR	7687621	IfStatement	if ( derived )		7687473	12					
ANR	7687622	Condition	derived	693:8:29412:29418	7687473	0	True				
ANR	7687623	Identifier	derived		7687473	0					
ANR	7687624	CompoundStatement		31:17:1157:1157	7687473	1					
ANR	7687625	ExpressionStatement	"fprintf ( xmlout , ""            <AsLocalTime>"" )"	694:8:29431:29476	7687473	0	True				
ANR	7687626	CallExpression	"fprintf ( xmlout , ""            <AsLocalTime>"" )"		7687473	0					
ANR	7687627	Callee	fprintf		7687473	0					
ANR	7687628	Identifier	fprintf		7687473	0					
ANR	7687629	ArgumentList	xmlout		7687473	1					
ANR	7687630	Argument	xmlout		7687473	0					
ANR	7687631	Identifier	xmlout		7687473	0					
ANR	7687632	Argument	"""            <AsLocalTime>"""		7687473	1					
ANR	7687633	PrimaryExpression	"""            <AsLocalTime>"""		7687473	0					
ANR	7687634	ExpressionStatement	"xml_time_out ( xmlout , track -> modification_time - 2082844800 )"	695:8:29486:29545	7687473	1	True				
ANR	7687635	CallExpression	"xml_time_out ( xmlout , track -> modification_time - 2082844800 )"		7687473	0					
ANR	7687636	Callee	xml_time_out		7687473	0					
ANR	7687637	Identifier	xml_time_out		7687473	0					
ANR	7687638	ArgumentList	xmlout		7687473	1					
ANR	7687639	Argument	xmlout		7687473	0					
ANR	7687640	Identifier	xmlout		7687473	0					
ANR	7687641	Argument	track -> modification_time - 2082844800		7687473	1					
ANR	7687642	AdditiveExpression	track -> modification_time - 2082844800		7687473	0		-			
ANR	7687643	PtrMemberAccess	track -> modification_time		7687473	0					
ANR	7687644	Identifier	track		7687473	0					
ANR	7687645	Identifier	modification_time		7687473	1					
ANR	7687646	PrimaryExpression	2082844800		7687473	1					
ANR	7687647	ExpressionStatement	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"	696:8:29555:29590	7687473	2	True				
ANR	7687648	CallExpression	"fprintf ( xmlout , ""</AsLocalTime>\\n"" )"		7687473	0					
ANR	7687649	Callee	fprintf		7687473	0					
ANR	7687650	Identifier	fprintf		7687473	0					
ANR	7687651	ArgumentList	xmlout		7687473	1					
ANR	7687652	Argument	xmlout		7687473	0					
ANR	7687653	Identifier	xmlout		7687473	0					
ANR	7687654	Argument	"""</AsLocalTime>\\n"""		7687473	1					
ANR	7687655	PrimaryExpression	"""</AsLocalTime>\\n"""		7687473	0					
ANR	7687656	ExpressionStatement	"fprintf ( xmlout , ""          </ModificationTime>\\n"" )"	698:4:29602:29655	7687473	13	True				
ANR	7687657	CallExpression	"fprintf ( xmlout , ""          </ModificationTime>\\n"" )"		7687473	0					
ANR	7687658	Callee	fprintf		7687473	0					
ANR	7687659	Identifier	fprintf		7687473	0					
ANR	7687660	ArgumentList	xmlout		7687473	1					
ANR	7687661	Argument	xmlout		7687473	0					
ANR	7687662	Identifier	xmlout		7687473	0					
ANR	7687663	Argument	"""          </ModificationTime>\\n"""		7687473	1					
ANR	7687664	PrimaryExpression	"""          </ModificationTime>\\n"""		7687473	0					
ANR	7687665	ExpressionStatement	"fprintf ( xmlout , ""          <Timescale>%d</Timescale>\\n"" , track -> timescale )"	699:4:29661:29738	7687473	14	True				
ANR	7687666	CallExpression	"fprintf ( xmlout , ""          <Timescale>%d</Timescale>\\n"" , track -> timescale )"		7687473	0					
ANR	7687667	Callee	fprintf		7687473	0					
ANR	7687668	Identifier	fprintf		7687473	0					
ANR	7687669	ArgumentList	xmlout		7687473	1					
ANR	7687670	Argument	xmlout		7687473	0					
ANR	7687671	Identifier	xmlout		7687473	0					
ANR	7687672	Argument	"""          <Timescale>%d</Timescale>\\n"""		7687473	1					
ANR	7687673	PrimaryExpression	"""          <Timescale>%d</Timescale>\\n"""		7687473	0					
ANR	7687674	Argument	track -> timescale		7687473	2					
ANR	7687675	PtrMemberAccess	track -> timescale		7687473	0					
ANR	7687676	Identifier	track		7687473	0					
ANR	7687677	Identifier	timescale		7687473	1					
ANR	7687678	IfStatement	if ( notes )		7687473	15					
ANR	7687679	Condition	notes	700:8:29748:29752	7687473	0	True				
ANR	7687680	Identifier	notes		7687473	0					
ANR	7687681	CompoundStatement		38:15:1491:1491	7687473	1					
ANR	7687682	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Timescale defines time units in one second -->\\n"" )"	701:8:29765:29863	7687473	0	True				
ANR	7687683	CallExpression	"fprintf ( xmlout , ""          <!-- Timescale defines time units in one second -->\\n"" )"		7687473	0					
ANR	7687684	Callee	fprintf		7687473	0					
ANR	7687685	Identifier	fprintf		7687473	0					
ANR	7687686	ArgumentList	xmlout		7687473	1					
ANR	7687687	Argument	xmlout		7687473	0					
ANR	7687688	Identifier	xmlout		7687473	0					
ANR	7687689	Argument	"""          <!-- Timescale defines time units in one second -->\\n"""		7687473	1					
ANR	7687690	PrimaryExpression	"""          <!-- Timescale defines time units in one second -->\\n"""		7687473	0					
ANR	7687691	ExpressionStatement	"fprintf ( xmlout , ""          <Duration>\\n"" )"	704:4:29875:29919	7687473	16	True				
ANR	7687692	CallExpression	"fprintf ( xmlout , ""          <Duration>\\n"" )"		7687473	0					
ANR	7687693	Callee	fprintf		7687473	0					
ANR	7687694	Identifier	fprintf		7687473	0					
ANR	7687695	ArgumentList	xmlout		7687473	1					
ANR	7687696	Argument	xmlout		7687473	0					
ANR	7687697	Identifier	xmlout		7687473	0					
ANR	7687698	Argument	"""          <Duration>\\n"""		7687473	1					
ANR	7687699	PrimaryExpression	"""          <Duration>\\n"""		7687473	0					
ANR	7687700	IfStatement	if ( raw )		7687473	17					
ANR	7687701	Condition	raw	705:8:29929:29931	7687473	0	True				
ANR	7687702	Identifier	raw		7687473	0					
ANR	7687703	CompoundStatement		43:13:1670:1670	7687473	1					
ANR	7687704	ExpressionStatement	"fprintf ( xmlout , ""            <InTimeUnits>%u</InTimeUnits>\\n"" , track -> duration )"	706:8:29944:30040	7687473	0	True				
ANR	7687705	CallExpression	"fprintf ( xmlout , ""            <InTimeUnits>%u</InTimeUnits>\\n"" , track -> duration )"		7687473	0					
ANR	7687706	Callee	fprintf		7687473	0					
ANR	7687707	Identifier	fprintf		7687473	0					
ANR	7687708	ArgumentList	xmlout		7687473	1					
ANR	7687709	Argument	xmlout		7687473	0					
ANR	7687710	Identifier	xmlout		7687473	0					
ANR	7687711	Argument	"""            <InTimeUnits>%u</InTimeUnits>\\n"""		7687473	1					
ANR	7687712	PrimaryExpression	"""            <InTimeUnits>%u</InTimeUnits>\\n"""		7687473	0					
ANR	7687713	Argument	track -> duration		7687473	2					
ANR	7687714	PtrMemberAccess	track -> duration		7687473	0					
ANR	7687715	Identifier	track		7687473	0					
ANR	7687716	Identifier	duration		7687473	1					
ANR	7687717	IfStatement	if ( derived )		7687473	18					
ANR	7687718	Condition	derived	709:8:30056:30062	7687473	0	True				
ANR	7687719	Identifier	derived		7687473	0					
ANR	7687720	CompoundStatement		47:17:1801:1801	7687473	1					
ANR	7687721	ExpressionStatement	"fprintf ( xmlout , ""            <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) track -> duration / ( double ) track -> timescale )"	710:8:30075:30223	7687473	0	True				
ANR	7687722	CallExpression	"fprintf ( xmlout , ""            <InSeconds>%12.3f</InSeconds>\\n"" , ( double ) track -> duration / ( double ) track -> timescale )"		7687473	0					
ANR	7687723	Callee	fprintf		7687473	0					
ANR	7687724	Identifier	fprintf		7687473	0					
ANR	7687725	ArgumentList	xmlout		7687473	1					
ANR	7687726	Argument	xmlout		7687473	0					
ANR	7687727	Identifier	xmlout		7687473	0					
ANR	7687728	Argument	"""            <InSeconds>%12.3f</InSeconds>\\n"""		7687473	1					
ANR	7687729	PrimaryExpression	"""            <InSeconds>%12.3f</InSeconds>\\n"""		7687473	0					
ANR	7687730	Argument	( double ) track -> duration / ( double ) track -> timescale		7687473	2					
ANR	7687731	MultiplicativeExpression	( double ) track -> duration / ( double ) track -> timescale		7687473	0		/			
ANR	7687732	CastExpression	( double ) track -> duration		7687473	0					
ANR	7687733	CastTarget	double		7687473	0					
ANR	7687734	PtrMemberAccess	track -> duration		7687473	1					
ANR	7687735	Identifier	track		7687473	0					
ANR	7687736	Identifier	duration		7687473	1					
ANR	7687737	CastExpression	( double ) track -> timescale		7687473	1					
ANR	7687738	CastTarget	double		7687473	0					
ANR	7687739	PtrMemberAccess	track -> timescale		7687473	1					
ANR	7687740	Identifier	track		7687473	0					
ANR	7687741	Identifier	timescale		7687473	1					
ANR	7687742	ExpressionStatement	"fprintf ( xmlout , ""          </Duration>\\n"" )"	714:4:30290:30335	7687473	19	True				
ANR	7687743	CallExpression	"fprintf ( xmlout , ""          </Duration>\\n"" )"		7687473	0					
ANR	7687744	Callee	fprintf		7687473	0					
ANR	7687745	Identifier	fprintf		7687473	0					
ANR	7687746	ArgumentList	xmlout		7687473	1					
ANR	7687747	Argument	xmlout		7687473	0					
ANR	7687748	Identifier	xmlout		7687473	0					
ANR	7687749	Argument	"""          </Duration>\\n"""		7687473	1					
ANR	7687750	PrimaryExpression	"""          </Duration>\\n"""		7687473	0					
ANR	7687751	ExpressionStatement	"int16_to_3packedchars ( ( short int ) track -> language , buf )"	715:4:30341:30395	7687473	20	True				
ANR	7687752	CallExpression	"int16_to_3packedchars ( ( short int ) track -> language , buf )"		7687473	0					
ANR	7687753	Callee	int16_to_3packedchars		7687473	0					
ANR	7687754	Identifier	int16_to_3packedchars		7687473	0					
ANR	7687755	ArgumentList	( short int ) track -> language		7687473	1					
ANR	7687756	Argument	( short int ) track -> language		7687473	0					
ANR	7687757	CastExpression	( short int ) track -> language		7687473	0					
ANR	7687758	CastTarget	short int		7687473	0					
ANR	7687759	PtrMemberAccess	track -> language		7687473	1					
ANR	7687760	Identifier	track		7687473	0					
ANR	7687761	Identifier	language		7687473	1					
ANR	7687762	Argument	buf		7687473	1					
ANR	7687763	Identifier	buf		7687473	0					
ANR	7687764	ExpressionStatement	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"	716:4:30401:30463	7687473	21	True				
ANR	7687765	CallExpression	"fprintf ( xmlout , ""          <Language>%s</Language>\\n"" , buf )"		7687473	0					
ANR	7687766	Callee	fprintf		7687473	0					
ANR	7687767	Identifier	fprintf		7687473	0					
ANR	7687768	ArgumentList	xmlout		7687473	1					
ANR	7687769	Argument	xmlout		7687473	0					
ANR	7687770	Identifier	xmlout		7687473	0					
ANR	7687771	Argument	"""          <Language>%s</Language>\\n"""		7687473	1					
ANR	7687772	PrimaryExpression	"""          <Language>%s</Language>\\n"""		7687473	0					
ANR	7687773	Argument	buf		7687473	2					
ANR	7687774	Identifier	buf		7687473	0					
ANR	7687775	ExpressionStatement	"fprintf ( xmlout , ""        </MediaHeader>\\n"" )"	717:4:30486:30532	7687473	22	True				
ANR	7687776	CallExpression	"fprintf ( xmlout , ""        </MediaHeader>\\n"" )"		7687473	0					
ANR	7687777	Callee	fprintf		7687473	0					
ANR	7687778	Identifier	fprintf		7687473	0					
ANR	7687779	ArgumentList	xmlout		7687473	1					
ANR	7687780	Argument	xmlout		7687473	0					
ANR	7687781	Identifier	xmlout		7687473	0					
ANR	7687782	Argument	"""        </MediaHeader>\\n"""		7687473	1					
ANR	7687783	PrimaryExpression	"""        </MediaHeader>\\n"""		7687473	0					
ANR	7687784	ExpressionStatement	"fprintf ( xmlout , ""        <HandlerReference BoxType=\\""hdlr\\"">\\n"" )"	718:4:30538:30605	7687473	23	True				
ANR	7687785	CallExpression	"fprintf ( xmlout , ""        <HandlerReference BoxType=\\""hdlr\\"">\\n"" )"		7687473	0					
ANR	7687786	Callee	fprintf		7687473	0					
ANR	7687787	Identifier	fprintf		7687473	0					
ANR	7687788	ArgumentList	xmlout		7687473	1					
ANR	7687789	Argument	xmlout		7687473	0					
ANR	7687790	Identifier	xmlout		7687473	0					
ANR	7687791	Argument	"""        <HandlerReference BoxType=\\""hdlr\\"">\\n"""		7687473	1					
ANR	7687792	PrimaryExpression	"""        <HandlerReference BoxType=\\""hdlr\\"">\\n"""		7687473	0					
ANR	7687793	SwitchStatement	switch ( track -> track_type )		7687473	24					
ANR	7687794	Condition	track -> track_type	719:12:30619:30635	7687473	0	True				
ANR	7687795	PtrMemberAccess	track -> track_type		7687473	0					
ANR	7687796	Identifier	track		7687473	0					
ANR	7687797	Identifier	track_type		7687473	1					
ANR	7687798	CompoundStatement		57:31:2374:2374	7687473	1					
ANR	7687799	Label	case 0 :	720:4:30644:30650	7687473	0	True				
ANR	7687800	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"" )"	721:8:30660:30765	7687473	1	True				
ANR	7687801	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"" )"		7687473	0					
ANR	7687802	Callee	fprintf		7687473	0					
ANR	7687803	Identifier	fprintf		7687473	0					
ANR	7687804	ArgumentList	xmlout		7687473	1					
ANR	7687805	Argument	xmlout		7687473	0					
ANR	7687806	Identifier	xmlout		7687473	0					
ANR	7687807	Argument	"""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"""		7687473	1					
ANR	7687808	PrimaryExpression	"""          <HandlerType Code=\\""vide\\"">video media track</HandlerType>\\n"""		7687473	0					
ANR	7687809	BreakStatement	break ;	723:8:30775:30780	7687473	2	True				
ANR	7687810	Label	case 1 :	724:4:30786:30792	7687473	3	True				
ANR	7687811	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"" )"	725:8:30802:30880	7687473	4	True				
ANR	7687812	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"" )"		7687473	0					
ANR	7687813	Callee	fprintf		7687473	0					
ANR	7687814	Identifier	fprintf		7687473	0					
ANR	7687815	ArgumentList	xmlout		7687473	1					
ANR	7687816	Argument	xmlout		7687473	0					
ANR	7687817	Identifier	xmlout		7687473	0					
ANR	7687818	Argument	"""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"""		7687473	1					
ANR	7687819	PrimaryExpression	"""          <HandlerType Code=\\""soun\\"">Sound</HandlerType>\\n"""		7687473	0					
ANR	7687820	BreakStatement	break ;	726:8:30890:30895	7687473	5	True				
ANR	7687821	Label	case 2 :	727:4:30901:30907	7687473	6	True				
ANR	7687822	ExpressionStatement	"fprintf ( xmlout , ""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"" )"	728:8:30917:30994	7687473	7	True				
ANR	7687823	CallExpression	"fprintf ( xmlout , ""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"" )"		7687473	0					
ANR	7687824	Callee	fprintf		7687473	0					
ANR	7687825	Identifier	fprintf		7687473	0					
ANR	7687826	ArgumentList	xmlout		7687473	1					
ANR	7687827	Argument	xmlout		7687473	0					
ANR	7687828	Identifier	xmlout		7687473	0					
ANR	7687829	Argument	"""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"""		7687473	1					
ANR	7687830	PrimaryExpression	"""          <HandlerType Code=\\""hint\\"">Hint</HandlerType>\\n"""		7687473	0					
ANR	7687831	BreakStatement	break ;	729:8:31004:31009	7687473	8	True				
ANR	7687832	IfStatement	if ( notes )		7687473	25					
ANR	7687833	Condition	notes	731:8:31025:31029	7687473	0	True				
ANR	7687834	Identifier	notes		7687473	0					
ANR	7687835	CompoundStatement		69:15:2768:2768	7687473	1					
ANR	7687836	ExpressionStatement	"fprintf ( xmlout , ""          <!-- String value shown is not actually read from file. -->\\n"" )"	732:8:31042:31148	7687473	0	True				
ANR	7687837	CallExpression	"fprintf ( xmlout , ""          <!-- String value shown is not actually read from file. -->\\n"" )"		7687473	0					
ANR	7687838	Callee	fprintf		7687473	0					
ANR	7687839	Identifier	fprintf		7687473	0					
ANR	7687840	ArgumentList	xmlout		7687473	1					
ANR	7687841	Argument	xmlout		7687473	0					
ANR	7687842	Identifier	xmlout		7687473	0					
ANR	7687843	Argument	"""          <!-- String value shown is not actually read from file. -->\\n"""		7687473	1					
ANR	7687844	PrimaryExpression	"""          <!-- String value shown is not actually read from file. -->\\n"""		7687473	0					
ANR	7687845	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Shown value is one used for our encode. -->\\n"" )"	734:8:31158:31253	7687473	1	True				
ANR	7687846	CallExpression	"fprintf ( xmlout , ""          <!-- Shown value is one used for our encode. -->\\n"" )"		7687473	0					
ANR	7687847	Callee	fprintf		7687473	0					
ANR	7687848	Identifier	fprintf		7687473	0					
ANR	7687849	ArgumentList	xmlout		7687473	1					
ANR	7687850	Argument	xmlout		7687473	0					
ANR	7687851	Identifier	xmlout		7687473	0					
ANR	7687852	Argument	"""          <!-- Shown value is one used for our encode. -->\\n"""		7687473	1					
ANR	7687853	PrimaryExpression	"""          <!-- Shown value is one used for our encode. -->\\n"""		7687473	0					
ANR	7687854	ExpressionStatement	"fprintf ( xmlout , ""        </HandlerReference>\\n"" )"	737:4:31265:31316	7687473	26	True				
ANR	7687855	CallExpression	"fprintf ( xmlout , ""        </HandlerReference>\\n"" )"		7687473	0					
ANR	7687856	Callee	fprintf		7687473	0					
ANR	7687857	Identifier	fprintf		7687473	0					
ANR	7687858	ArgumentList	xmlout		7687473	1					
ANR	7687859	Argument	xmlout		7687473	0					
ANR	7687860	Identifier	xmlout		7687473	0					
ANR	7687861	Argument	"""        </HandlerReference>\\n"""		7687473	1					
ANR	7687862	PrimaryExpression	"""        </HandlerReference>\\n"""		7687473	0					
ANR	7687863	ExpressionStatement	"fprintf ( xmlout , ""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"" )"	738:4:31322:31391	7687473	27	True				
ANR	7687864	CallExpression	"fprintf ( xmlout , ""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"" )"		7687473	0					
ANR	7687865	Callee	fprintf		7687473	0					
ANR	7687866	Identifier	fprintf		7687473	0					
ANR	7687867	ArgumentList	xmlout		7687473	1					
ANR	7687868	Argument	xmlout		7687473	0					
ANR	7687869	Identifier	xmlout		7687473	0					
ANR	7687870	Argument	"""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"""		7687473	1					
ANR	7687871	PrimaryExpression	"""        <MediaInfoContainer BoxType=\\""minf\\"">\\n"""		7687473	0					
ANR	7687872	SwitchStatement	switch ( track -> track_type )		7687473	28					
ANR	7687873	Condition	track -> track_type	739:12:31405:31421	7687473	0	True				
ANR	7687874	PtrMemberAccess	track -> track_type		7687473	0					
ANR	7687875	Identifier	track		7687473	0					
ANR	7687876	Identifier	track_type		7687473	1					
ANR	7687877	CompoundStatement		77:31:3160:3160	7687473	1					
ANR	7687878	Label	case 0 :	740:4:31430:31436	7687473	0	True				
ANR	7687879	ExpressionStatement	"fprintf ( xmlout , ""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"" )"	741:8:31446:31513	7687473	1	True				
ANR	7687880	CallExpression	"fprintf ( xmlout , ""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"" )"		7687473	0					
ANR	7687881	Callee	fprintf		7687473	0					
ANR	7687882	Identifier	fprintf		7687473	0					
ANR	7687883	ArgumentList	xmlout		7687473	1					
ANR	7687884	Argument	xmlout		7687473	0					
ANR	7687885	Identifier	xmlout		7687473	0					
ANR	7687886	Argument	"""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"""		7687473	1					
ANR	7687887	PrimaryExpression	"""          <VideoMediaHeader BoxType=\\""vmhd\\"">\\n"""		7687473	0					
ANR	7687888	ExpressionStatement	"fprintf ( xmlout , ""            <GraphicsMode>0x%02x</GraphicsMode>\\n"" , track -> graphicsmode )"	742:8:31523:31629	7687473	2	True				
ANR	7687889	CallExpression	"fprintf ( xmlout , ""            <GraphicsMode>0x%02x</GraphicsMode>\\n"" , track -> graphicsmode )"		7687473	0					
ANR	7687890	Callee	fprintf		7687473	0					
ANR	7687891	Identifier	fprintf		7687473	0					
ANR	7687892	ArgumentList	xmlout		7687473	1					
ANR	7687893	Argument	xmlout		7687473	0					
ANR	7687894	Identifier	xmlout		7687473	0					
ANR	7687895	Argument	"""            <GraphicsMode>0x%02x</GraphicsMode>\\n"""		7687473	1					
ANR	7687896	PrimaryExpression	"""            <GraphicsMode>0x%02x</GraphicsMode>\\n"""		7687473	0					
ANR	7687897	Argument	track -> graphicsmode		7687473	2					
ANR	7687898	PtrMemberAccess	track -> graphicsmode		7687473	0					
ANR	7687899	Identifier	track		7687473	0					
ANR	7687900	Identifier	graphicsmode		7687473	1					
ANR	7687901	IfStatement	if ( notes )		7687473	3					
ANR	7687902	Condition	notes	744:12:31643:31647	7687473	0	True				
ANR	7687903	Identifier	notes		7687473	0					
ANR	7687904	CompoundStatement		82:19:3386:3386	7687473	1					
ANR	7687905	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Enumerated values of graphics mode: -->\\n"" )"	745:12:31664:31741	7687473	0	True				
ANR	7687906	CallExpression	"fprintf ( xmlout , ""            <!-- Enumerated values of graphics mode: -->\\n"" )"		7687473	0					
ANR	7687907	Callee	fprintf		7687473	0					
ANR	7687908	Identifier	fprintf		7687473	0					
ANR	7687909	ArgumentList	xmlout		7687473	1					
ANR	7687910	Argument	xmlout		7687473	0					
ANR	7687911	Identifier	xmlout		7687473	0					
ANR	7687912	Argument	"""            <!-- Enumerated values of graphics mode: -->\\n"""		7687473	1					
ANR	7687913	PrimaryExpression	"""            <!-- Enumerated values of graphics mode: -->\\n"""		7687473	0					
ANR	7687914	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x00 = copy (over existing image); -->\\n"" )"	746:12:31755:31832	7687473	1	True				
ANR	7687915	CallExpression	"fprintf ( xmlout , ""            <!--  0x00 = copy (over existing image); -->\\n"" )"		7687473	0					
ANR	7687916	Callee	fprintf		7687473	0					
ANR	7687917	Identifier	fprintf		7687473	0					
ANR	7687918	ArgumentList	xmlout		7687473	1					
ANR	7687919	Argument	xmlout		7687473	0					
ANR	7687920	Identifier	xmlout		7687473	0					
ANR	7687921	Argument	"""            <!--  0x00 = copy (over existing image); -->\\n"""		7687473	1					
ANR	7687922	PrimaryExpression	"""            <!--  0x00 = copy (over existing image); -->\\n"""		7687473	0					
ANR	7687923	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"" )"	747:12:31846:31968	7687473	2	True				
ANR	7687924	CallExpression	"fprintf ( xmlout , ""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"" )"		7687473	0					
ANR	7687925	Callee	fprintf		7687473	0					
ANR	7687926	Identifier	fprintf		7687473	0					
ANR	7687927	ArgumentList	xmlout		7687473	1					
ANR	7687928	Argument	xmlout		7687473	0					
ANR	7687929	Identifier	xmlout		7687473	0					
ANR	7687930	Argument	"""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"""		7687473	1					
ANR	7687931	PrimaryExpression	"""            <!--  0x24 = transparent; 'blue-screen' this image using opcolor; -->\\n"""		7687473	0					
ANR	7687932	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x100 = alpha; alpha-blend this image -->\\n"" )"	749:12:31982:32082	7687473	3	True				
ANR	7687933	CallExpression	"fprintf ( xmlout , ""            <!--  0x100 = alpha; alpha-blend this image -->\\n"" )"		7687473	0					
ANR	7687934	Callee	fprintf		7687473	0					
ANR	7687935	Identifier	fprintf		7687473	0					
ANR	7687936	ArgumentList	xmlout		7687473	1					
ANR	7687937	Argument	xmlout		7687473	0					
ANR	7687938	Identifier	xmlout		7687473	0					
ANR	7687939	Argument	"""            <!--  0x100 = alpha; alpha-blend this image -->\\n"""		7687473	1					
ANR	7687940	PrimaryExpression	"""            <!--  0x100 = alpha; alpha-blend this image -->\\n"""		7687473	0					
ANR	7687941	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"" )"	752:12:32281:32433	7687473	4	True				
ANR	7687942	CallExpression	"fprintf ( xmlout , ""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"" )"		7687473	0					
ANR	7687943	Callee	fprintf		7687473	0					
ANR	7687944	Identifier	fprintf		7687473	0					
ANR	7687945	ArgumentList	xmlout		7687473	1					
ANR	7687946	Argument	xmlout		7687473	0					
ANR	7687947	Identifier	xmlout		7687473	0					
ANR	7687948	Argument	"""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"""		7687473	1					
ANR	7687949	PrimaryExpression	"""            <!--  0x102 = pre-multiplied black alpha; image has been already been alpha-blended with black. -->\\n"""		7687473	0					
ANR	7687950	ExpressionStatement	"fprintf ( xmlout , ""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"" )"	754:12:32447:32590	7687473	5	True				
ANR	7687951	CallExpression	"fprintf ( xmlout , ""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"" )"		7687473	0					
ANR	7687952	Callee	fprintf		7687473	0					
ANR	7687953	Identifier	fprintf		7687473	0					
ANR	7687954	ArgumentList	xmlout		7687473	1					
ANR	7687955	Argument	xmlout		7687473	0					
ANR	7687956	Identifier	xmlout		7687473	0					
ANR	7687957	Argument	"""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"""		7687473	1					
ANR	7687958	PrimaryExpression	"""            <!--  0x110 = component alpha; blend alpha channel(s) and color channels individually. -->\\n"""		7687473	0					
ANR	7687959	ExpressionStatement	"fprintf ( xmlout , ""            <Opcolor>\\n"" )"	757:8:32610:32653	7687473	4	True				
ANR	7687960	CallExpression	"fprintf ( xmlout , ""            <Opcolor>\\n"" )"		7687473	0					
ANR	7687961	Callee	fprintf		7687473	0					
ANR	7687962	Identifier	fprintf		7687473	0					
ANR	7687963	ArgumentList	xmlout		7687473	1					
ANR	7687964	Argument	xmlout		7687473	0					
ANR	7687965	Identifier	xmlout		7687473	0					
ANR	7687966	Argument	"""            <Opcolor>\\n"""		7687473	1					
ANR	7687967	PrimaryExpression	"""            <Opcolor>\\n"""		7687473	0					
ANR	7687968	ExpressionStatement	"fprintf ( xmlout , ""              <Red>0x%02x</Red>\\n"" , track -> opcolor [ 0 ] )"	758:8:32663:32735	7687473	5	True				
ANR	7687969	CallExpression	"fprintf ( xmlout , ""              <Red>0x%02x</Red>\\n"" , track -> opcolor [ 0 ] )"		7687473	0					
ANR	7687970	Callee	fprintf		7687473	0					
ANR	7687971	Identifier	fprintf		7687473	0					
ANR	7687972	ArgumentList	xmlout		7687473	1					
ANR	7687973	Argument	xmlout		7687473	0					
ANR	7687974	Identifier	xmlout		7687473	0					
ANR	7687975	Argument	"""              <Red>0x%02x</Red>\\n"""		7687473	1					
ANR	7687976	PrimaryExpression	"""              <Red>0x%02x</Red>\\n"""		7687473	0					
ANR	7687977	Argument	track -> opcolor [ 0 ]		7687473	2					
ANR	7687978	ArrayIndexing	track -> opcolor [ 0 ]		7687473	0					
ANR	7687979	PtrMemberAccess	track -> opcolor		7687473	0					
ANR	7687980	Identifier	track		7687473	0					
ANR	7687981	Identifier	opcolor		7687473	1					
ANR	7687982	PrimaryExpression	0		7687473	1					
ANR	7687983	ExpressionStatement	"fprintf ( xmlout , ""              <Green>0x%02x</Green>\\n"" , track -> opcolor [ 1 ] )"	759:8:32745:32821	7687473	6	True				
ANR	7687984	CallExpression	"fprintf ( xmlout , ""              <Green>0x%02x</Green>\\n"" , track -> opcolor [ 1 ] )"		7687473	0					
ANR	7687985	Callee	fprintf		7687473	0					
ANR	7687986	Identifier	fprintf		7687473	0					
ANR	7687987	ArgumentList	xmlout		7687473	1					
ANR	7687988	Argument	xmlout		7687473	0					
ANR	7687989	Identifier	xmlout		7687473	0					
ANR	7687990	Argument	"""              <Green>0x%02x</Green>\\n"""		7687473	1					
ANR	7687991	PrimaryExpression	"""              <Green>0x%02x</Green>\\n"""		7687473	0					
ANR	7687992	Argument	track -> opcolor [ 1 ]		7687473	2					
ANR	7687993	ArrayIndexing	track -> opcolor [ 1 ]		7687473	0					
ANR	7687994	PtrMemberAccess	track -> opcolor		7687473	0					
ANR	7687995	Identifier	track		7687473	0					
ANR	7687996	Identifier	opcolor		7687473	1					
ANR	7687997	PrimaryExpression	1		7687473	1					
ANR	7687998	ExpressionStatement	"fprintf ( xmlout , ""              <Blue>0x%02x</Blue>\\n"" , track -> opcolor [ 2 ] )"	760:8:32831:32905	7687473	7	True				
ANR	7687999	CallExpression	"fprintf ( xmlout , ""              <Blue>0x%02x</Blue>\\n"" , track -> opcolor [ 2 ] )"		7687473	0					
ANR	7688000	Callee	fprintf		7687473	0					
ANR	7688001	Identifier	fprintf		7687473	0					
ANR	7688002	ArgumentList	xmlout		7687473	1					
ANR	7688003	Argument	xmlout		7687473	0					
ANR	7688004	Identifier	xmlout		7687473	0					
ANR	7688005	Argument	"""              <Blue>0x%02x</Blue>\\n"""		7687473	1					
ANR	7688006	PrimaryExpression	"""              <Blue>0x%02x</Blue>\\n"""		7687473	0					
ANR	7688007	Argument	track -> opcolor [ 2 ]		7687473	2					
ANR	7688008	ArrayIndexing	track -> opcolor [ 2 ]		7687473	0					
ANR	7688009	PtrMemberAccess	track -> opcolor		7687473	0					
ANR	7688010	Identifier	track		7687473	0					
ANR	7688011	Identifier	opcolor		7687473	1					
ANR	7688012	PrimaryExpression	2		7687473	1					
ANR	7688013	ExpressionStatement	"fprintf ( xmlout , ""            </Opcolor>\\n"" )"	761:8:32915:32959	7687473	8	True				
ANR	7688014	CallExpression	"fprintf ( xmlout , ""            </Opcolor>\\n"" )"		7687473	0					
ANR	7688015	Callee	fprintf		7687473	0					
ANR	7688016	Identifier	fprintf		7687473	0					
ANR	7688017	ArgumentList	xmlout		7687473	1					
ANR	7688018	Argument	xmlout		7687473	0					
ANR	7688019	Identifier	xmlout		7687473	0					
ANR	7688020	Argument	"""            </Opcolor>\\n"""		7687473	1					
ANR	7688021	PrimaryExpression	"""            </Opcolor>\\n"""		7687473	0					
ANR	7688022	ExpressionStatement	"fprintf ( xmlout , ""          </VideoMediaHeader>\\n"" )"	762:8:32969:33020	7687473	9	True				
ANR	7688023	CallExpression	"fprintf ( xmlout , ""          </VideoMediaHeader>\\n"" )"		7687473	0					
ANR	7688024	Callee	fprintf		7687473	0					
ANR	7688025	Identifier	fprintf		7687473	0					
ANR	7688026	ArgumentList	xmlout		7687473	1					
ANR	7688027	Argument	xmlout		7687473	0					
ANR	7688028	Identifier	xmlout		7687473	0					
ANR	7688029	Argument	"""          </VideoMediaHeader>\\n"""		7687473	1					
ANR	7688030	PrimaryExpression	"""          </VideoMediaHeader>\\n"""		7687473	0					
ANR	7688031	BreakStatement	break ;	763:8:33030:33035	7687473	10	True				
ANR	7688032	Label	case 1 :	764:4:33041:33047	7687473	11	True				
ANR	7688033	ExpressionStatement	"fprintf ( xmlout , ""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"" )"	765:8:33057:33124	7687473	12	True				
ANR	7688034	CallExpression	"fprintf ( xmlout , ""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"" )"		7687473	0					
ANR	7688035	Callee	fprintf		7687473	0					
ANR	7688036	Identifier	fprintf		7687473	0					
ANR	7688037	ArgumentList	xmlout		7687473	1					
ANR	7688038	Argument	xmlout		7687473	0					
ANR	7688039	Identifier	xmlout		7687473	0					
ANR	7688040	Argument	"""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"""		7687473	1					
ANR	7688041	PrimaryExpression	"""          <SoundMediaHeader BoxType=\\""smhd\\"">\\n"""		7687473	0					
ANR	7688042	ExpressionStatement	track -> balance = track -> balance << 8	767:8:33155:33191	7687473	13	True				
ANR	7688043	AssignmentExpression	track -> balance = track -> balance << 8		7687473	0		=			
ANR	7688044	PtrMemberAccess	track -> balance		7687473	0					
ANR	7688045	Identifier	track		7687473	0					
ANR	7688046	Identifier	balance		7687473	1					
ANR	7688047	ShiftExpression	track -> balance << 8		7687473	1		<<			
ANR	7688048	PtrMemberAccess	track -> balance		7687473	0					
ANR	7688049	Identifier	track		7687473	0					
ANR	7688050	Identifier	balance		7687473	1					
ANR	7688051	PrimaryExpression	8		7687473	1					
ANR	7688052	ExpressionStatement	"fprintf ( xmlout , ""            <Balance>\\n"" )"	769:8:33208:33251	7687473	14	True				
ANR	7688053	CallExpression	"fprintf ( xmlout , ""            <Balance>\\n"" )"		7687473	0					
ANR	7688054	Callee	fprintf		7687473	0					
ANR	7688055	Identifier	fprintf		7687473	0					
ANR	7688056	ArgumentList	xmlout		7687473	1					
ANR	7688057	Argument	xmlout		7687473	0					
ANR	7688058	Identifier	xmlout		7687473	0					
ANR	7688059	Argument	"""            <Balance>\\n"""		7687473	1					
ANR	7688060	PrimaryExpression	"""            <Balance>\\n"""		7687473	0					
ANR	7688061	IfStatement	if ( notes )		7687473	15					
ANR	7688062	Condition	notes	770:12:33265:33269	7687473	0	True				
ANR	7688063	Identifier	notes		7687473	0					
ANR	7688064	CompoundStatement		108:19:5008:5008	7687473	1					
ANR	7688065	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"" )"	771:12:33286:33403	7687473	0	True				
ANR	7688066	CallExpression	"fprintf ( xmlout , ""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"" )"		7687473	0					
ANR	7688067	Callee	fprintf		7687473	0					
ANR	7688068	Identifier	fprintf		7687473	0					
ANR	7688069	ArgumentList	xmlout		7687473	1					
ANR	7688070	Argument	xmlout		7687473	0					
ANR	7688071	Identifier	xmlout		7687473	0					
ANR	7688072	Argument	"""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"""		7687473	1					
ANR	7688073	PrimaryExpression	"""              <!-- Track audio balance fixes mono track in stereo space. -->\\n"""		7687473	0					
ANR	7688074	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"	773:12:33417:33552	7687473	1	True				
ANR	7688075	CallExpression	"fprintf ( xmlout , ""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"" )"		7687473	0					
ANR	7688076	Callee	fprintf		7687473	0					
ANR	7688077	Identifier	fprintf		7687473	0					
ANR	7688078	ArgumentList	xmlout		7687473	1					
ANR	7688079	Argument	xmlout		7687473	0					
ANR	7688080	Identifier	xmlout		7687473	0					
ANR	7688081	Argument	"""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7687473	1					
ANR	7688082	PrimaryExpression	"""              <!-- Stored as fixed-point binary 8.8 value. Decimal value is approximation. -->\\n"""		7687473	0					
ANR	7688083	ExpressionStatement	"fprintf ( xmlout , ""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"" )"	775:12:33566:33678	7687473	2	True				
ANR	7688084	CallExpression	"fprintf ( xmlout , ""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"" )"		7687473	0					
ANR	7688085	Callee	fprintf		7687473	0					
ANR	7688086	Identifier	fprintf		7687473	0					
ANR	7688087	ArgumentList	xmlout		7687473	1					
ANR	7688088	Argument	xmlout		7687473	0					
ANR	7688089	Identifier	xmlout		7687473	0					
ANR	7688090	Argument	"""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"""		7687473	1					
ANR	7688091	PrimaryExpression	"""              <!-- 0.0 = center, -1.0 = full left, 1.0 = full right -->\\n"""		7687473	0					
ANR	7688092	IfStatement	if ( raw )		7687473	16					
ANR	7688093	Condition	raw	778:12:33702:33704	7687473	0	True				
ANR	7688094	Identifier	raw		7687473	0					
ANR	7688095	CompoundStatement		116:17:5443:5443	7687473	1					
ANR	7688096	ExpressionStatement	"fprintf ( xmlout , ""              <AsHex>0x%04x</AsHex>\\n"" , track -> balance )"	779:12:33721:33793	7687473	0	True				
ANR	7688097	CallExpression	"fprintf ( xmlout , ""              <AsHex>0x%04x</AsHex>\\n"" , track -> balance )"		7687473	0					
ANR	7688098	Callee	fprintf		7687473	0					
ANR	7688099	Identifier	fprintf		7687473	0					
ANR	7688100	ArgumentList	xmlout		7687473	1					
ANR	7688101	Argument	xmlout		7687473	0					
ANR	7688102	Identifier	xmlout		7687473	0					
ANR	7688103	Argument	"""              <AsHex>0x%04x</AsHex>\\n"""		7687473	1					
ANR	7688104	PrimaryExpression	"""              <AsHex>0x%04x</AsHex>\\n"""		7687473	0					
ANR	7688105	Argument	track -> balance		7687473	2					
ANR	7688106	PtrMemberAccess	track -> balance		7687473	0					
ANR	7688107	Identifier	track		7687473	0					
ANR	7688108	Identifier	balance		7687473	1					
ANR	7688109	IfStatement	if ( derived )		7687473	17					
ANR	7688110	Condition	derived	781:12:33817:33823	7687473	0	True				
ANR	7688111	Identifier	derived		7687473	0					
ANR	7688112	CompoundStatement		119:21:5562:5562	7687473	1					
ANR	7688113	ExpressionStatement	"fprintf ( xmlout , ""              <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> balance / ( double ) 0x0100 )"	782:12:33840:33964	7687473	0	True				
ANR	7688114	CallExpression	"fprintf ( xmlout , ""              <AsDecimal>%6.3f</AsDecimal>\\n"" , ( double ) track -> balance / ( double ) 0x0100 )"		7687473	0					
ANR	7688115	Callee	fprintf		7687473	0					
ANR	7688116	Identifier	fprintf		7687473	0					
ANR	7688117	ArgumentList	xmlout		7687473	1					
ANR	7688118	Argument	xmlout		7687473	0					
ANR	7688119	Identifier	xmlout		7687473	0					
ANR	7688120	Argument	"""              <AsDecimal>%6.3f</AsDecimal>\\n"""		7687473	1					
ANR	7688121	PrimaryExpression	"""              <AsDecimal>%6.3f</AsDecimal>\\n"""		7687473	0					
ANR	7688122	Argument	( double ) track -> balance / ( double ) 0x0100		7687473	2					
ANR	7688123	MultiplicativeExpression	( double ) track -> balance / ( double ) 0x0100		7687473	0		/			
ANR	7688124	CastExpression	( double ) track -> balance		7687473	0					
ANR	7688125	CastTarget	double		7687473	0					
ANR	7688126	PtrMemberAccess	track -> balance		7687473	1					
ANR	7688127	Identifier	track		7687473	0					
ANR	7688128	Identifier	balance		7687473	1					
ANR	7688129	CastExpression	( double ) 0x0100		7687473	1					
ANR	7688130	CastTarget	double		7687473	0					
ANR	7688131	PrimaryExpression	0x0100		7687473	1					
ANR	7688132	ExpressionStatement	"fprintf ( xmlout , ""            </Balance>\\n"" )"	785:8:33984:34028	7687473	18	True				
ANR	7688133	CallExpression	"fprintf ( xmlout , ""            </Balance>\\n"" )"		7687473	0					
ANR	7688134	Callee	fprintf		7687473	0					
ANR	7688135	Identifier	fprintf		7687473	0					
ANR	7688136	ArgumentList	xmlout		7687473	1					
ANR	7688137	Argument	xmlout		7687473	0					
ANR	7688138	Identifier	xmlout		7687473	0					
ANR	7688139	Argument	"""            </Balance>\\n"""		7687473	1					
ANR	7688140	PrimaryExpression	"""            </Balance>\\n"""		7687473	0					
ANR	7688141	IfStatement	if ( notes )		7687473	19					
ANR	7688142	Condition	notes	787:12:34063:34067	7687473	0	True				
ANR	7688143	Identifier	notes		7687473	0					
ANR	7688144	CompoundStatement		125:19:5806:5806	7687473	1					
ANR	7688145	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"	788:12:34084:34233	7687473	0	True				
ANR	7688146	CallExpression	"fprintf ( xmlout , ""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"" )"		7687473	0					
ANR	7688147	Callee	fprintf		7687473	0					
ANR	7688148	Identifier	fprintf		7687473	0					
ANR	7688149	ArgumentList	xmlout		7687473	1					
ANR	7688150	Argument	xmlout		7687473	0					
ANR	7688151	Identifier	xmlout		7687473	0					
ANR	7688152	Argument	"""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7687473	1					
ANR	7688153	PrimaryExpression	"""            <!-- Current m2j_to_metadata implementation always shows bits to right of decimal as zeroed. -->\\n"""		7687473	0					
ANR	7688154	ExpressionStatement	track -> balance = track -> balance >> 8	791:8:34253:34289	7687473	20	True				
ANR	7688155	AssignmentExpression	track -> balance = track -> balance >> 8		7687473	0		=			
ANR	7688156	PtrMemberAccess	track -> balance		7687473	0					
ANR	7688157	Identifier	track		7687473	0					
ANR	7688158	Identifier	balance		7687473	1					
ANR	7688159	ShiftExpression	track -> balance >> 8		7687473	1		>>			
ANR	7688160	PtrMemberAccess	track -> balance		7687473	0					
ANR	7688161	Identifier	track		7687473	0					
ANR	7688162	Identifier	balance		7687473	1					
ANR	7688163	PrimaryExpression	8		7687473	1					
ANR	7688164	ExpressionStatement	"fprintf ( xmlout , ""          </SoundMediaHeader>\\n"" )"	793:8:34306:34357	7687473	21	True				
ANR	7688165	CallExpression	"fprintf ( xmlout , ""          </SoundMediaHeader>\\n"" )"		7687473	0					
ANR	7688166	Callee	fprintf		7687473	0					
ANR	7688167	Identifier	fprintf		7687473	0					
ANR	7688168	ArgumentList	xmlout		7687473	1					
ANR	7688169	Argument	xmlout		7687473	0					
ANR	7688170	Identifier	xmlout		7687473	0					
ANR	7688171	Argument	"""          </SoundMediaHeader>\\n"""		7687473	1					
ANR	7688172	PrimaryExpression	"""          </SoundMediaHeader>\\n"""		7687473	0					
ANR	7688173	BreakStatement	break ;	794:8:34367:34372	7687473	22	True				
ANR	7688174	Label	case 2 :	795:4:34378:34384	7687473	23	True				
ANR	7688175	ExpressionStatement	"fprintf ( xmlout , ""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"" )"	796:8:34394:34460	7687473	24	True				
ANR	7688176	CallExpression	"fprintf ( xmlout , ""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"" )"		7687473	0					
ANR	7688177	Callee	fprintf		7687473	0					
ANR	7688178	Identifier	fprintf		7687473	0					
ANR	7688179	ArgumentList	xmlout		7687473	1					
ANR	7688180	Argument	xmlout		7687473	0					
ANR	7688181	Identifier	xmlout		7687473	0					
ANR	7688182	Argument	"""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"""		7687473	1					
ANR	7688183	PrimaryExpression	"""          <HintMediaHeader BoxType=\\""hmhd\\"">\\n"""		7687473	0					
ANR	7688184	ExpressionStatement	"fprintf ( xmlout , ""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"" , track -> maxPDUsize )"	797:8:34470:34568	7687473	25	True				
ANR	7688185	CallExpression	"fprintf ( xmlout , ""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"" , track -> maxPDUsize )"		7687473	0					
ANR	7688186	Callee	fprintf		7687473	0					
ANR	7688187	Identifier	fprintf		7687473	0					
ANR	7688188	ArgumentList	xmlout		7687473	1					
ANR	7688189	Argument	xmlout		7687473	0					
ANR	7688190	Identifier	xmlout		7687473	0					
ANR	7688191	Argument	"""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"""		7687473	1					
ANR	7688192	PrimaryExpression	"""            <MaxPDU_Size>%d</MaxPDU_Size>\\n"""		7687473	0					
ANR	7688193	Argument	track -> maxPDUsize		7687473	2					
ANR	7688194	PtrMemberAccess	track -> maxPDUsize		7687473	0					
ANR	7688195	Identifier	track		7687473	0					
ANR	7688196	Identifier	maxPDUsize		7687473	1					
ANR	7688197	IfStatement	if ( notes )		7687473	26					
ANR	7688198	Condition	notes	799:12:34582:34586	7687473	0	True				
ANR	7688199	Identifier	notes		7687473	0					
ANR	7688200	CompoundStatement		137:19:6325:6325	7687473	1					
ANR	7688201	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"" )"	800:12:34603:34714	7687473	0	True				
ANR	7688202	CallExpression	"fprintf ( xmlout , ""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"" )"		7687473	0					
ANR	7688203	Callee	fprintf		7687473	0					
ANR	7688204	Identifier	fprintf		7687473	0					
ANR	7688205	ArgumentList	xmlout		7687473	1					
ANR	7688206	Argument	xmlout		7687473	0					
ANR	7688207	Identifier	xmlout		7687473	0					
ANR	7688208	Argument	"""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"""		7687473	1					
ANR	7688209	PrimaryExpression	"""            <!-- Size in bytes of largest PDU in this hint stream. -->\\n"""		7687473	0					
ANR	7688210	ExpressionStatement	"fprintf ( xmlout , ""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"" , track -> avgPDUsize )"	803:8:34734:34832	7687473	27	True				
ANR	7688211	CallExpression	"fprintf ( xmlout , ""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"" , track -> avgPDUsize )"		7687473	0					
ANR	7688212	Callee	fprintf		7687473	0					
ANR	7688213	Identifier	fprintf		7687473	0					
ANR	7688214	ArgumentList	xmlout		7687473	1					
ANR	7688215	Argument	xmlout		7687473	0					
ANR	7688216	Identifier	xmlout		7687473	0					
ANR	7688217	Argument	"""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"""		7687473	1					
ANR	7688218	PrimaryExpression	"""            <AvgPDU_Size>%d</AvgPDU_Size>\\n"""		7687473	0					
ANR	7688219	Argument	track -> avgPDUsize		7687473	2					
ANR	7688220	PtrMemberAccess	track -> avgPDUsize		7687473	0					
ANR	7688221	Identifier	track		7687473	0					
ANR	7688222	Identifier	avgPDUsize		7687473	1					
ANR	7688223	IfStatement	if ( notes )		7687473	28					
ANR	7688224	Condition	notes	805:12:34846:34850	7687473	0	True				
ANR	7688225	Identifier	notes		7687473	0					
ANR	7688226	CompoundStatement		143:19:6589:6589	7687473	1					
ANR	7688227	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"" )"	806:12:34867:34989	7687473	0	True				
ANR	7688228	CallExpression	"fprintf ( xmlout , ""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"" )"		7687473	0					
ANR	7688229	Callee	fprintf		7687473	0					
ANR	7688230	Identifier	fprintf		7687473	0					
ANR	7688231	ArgumentList	xmlout		7687473	1					
ANR	7688232	Argument	xmlout		7687473	0					
ANR	7688233	Identifier	xmlout		7687473	0					
ANR	7688234	Argument	"""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"""		7687473	1					
ANR	7688235	PrimaryExpression	"""            <!-- Average size in bytes of a PDU over the entire presentation. -->\\n"""		7687473	0					
ANR	7688236	ExpressionStatement	"fprintf ( xmlout , ""            <MaxBitRate>%d</MaxBitRate>\\n"" , track -> maxbitrate )"	809:8:35009:35105	7687473	29	True				
ANR	7688237	CallExpression	"fprintf ( xmlout , ""            <MaxBitRate>%d</MaxBitRate>\\n"" , track -> maxbitrate )"		7687473	0					
ANR	7688238	Callee	fprintf		7687473	0					
ANR	7688239	Identifier	fprintf		7687473	0					
ANR	7688240	ArgumentList	xmlout		7687473	1					
ANR	7688241	Argument	xmlout		7687473	0					
ANR	7688242	Identifier	xmlout		7687473	0					
ANR	7688243	Argument	"""            <MaxBitRate>%d</MaxBitRate>\\n"""		7687473	1					
ANR	7688244	PrimaryExpression	"""            <MaxBitRate>%d</MaxBitRate>\\n"""		7687473	0					
ANR	7688245	Argument	track -> maxbitrate		7687473	2					
ANR	7688246	PtrMemberAccess	track -> maxbitrate		7687473	0					
ANR	7688247	Identifier	track		7687473	0					
ANR	7688248	Identifier	maxbitrate		7687473	1					
ANR	7688249	IfStatement	if ( notes )		7687473	30					
ANR	7688250	Condition	notes	811:12:35119:35123	7687473	0	True				
ANR	7688251	Identifier	notes		7687473	0					
ANR	7688252	CompoundStatement		149:19:6862:6862	7687473	1					
ANR	7688253	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"" )"	812:12:35140:35262	7687473	0	True				
ANR	7688254	CallExpression	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"" )"		7687473	0					
ANR	7688255	Callee	fprintf		7687473	0					
ANR	7688256	Identifier	fprintf		7687473	0					
ANR	7688257	ArgumentList	xmlout		7687473	1					
ANR	7688258	Argument	xmlout		7687473	0					
ANR	7688259	Identifier	xmlout		7687473	0					
ANR	7688260	Argument	"""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"""		7687473	1					
ANR	7688261	PrimaryExpression	"""            <!-- Maximum rate in bits per second over any window of 1 second. -->\\n"""		7687473	0					
ANR	7688262	ExpressionStatement	"fprintf ( xmlout , ""            <AvgBitRate>%d</AvgBitRate>\\n"" , track -> avgbitrate )"	815:8:35282:35378	7687473	31	True				
ANR	7688263	CallExpression	"fprintf ( xmlout , ""            <AvgBitRate>%d</AvgBitRate>\\n"" , track -> avgbitrate )"		7687473	0					
ANR	7688264	Callee	fprintf		7687473	0					
ANR	7688265	Identifier	fprintf		7687473	0					
ANR	7688266	ArgumentList	xmlout		7687473	1					
ANR	7688267	Argument	xmlout		7687473	0					
ANR	7688268	Identifier	xmlout		7687473	0					
ANR	7688269	Argument	"""            <AvgBitRate>%d</AvgBitRate>\\n"""		7687473	1					
ANR	7688270	PrimaryExpression	"""            <AvgBitRate>%d</AvgBitRate>\\n"""		7687473	0					
ANR	7688271	Argument	track -> avgbitrate		7687473	2					
ANR	7688272	PtrMemberAccess	track -> avgbitrate		7687473	0					
ANR	7688273	Identifier	track		7687473	0					
ANR	7688274	Identifier	avgbitrate		7687473	1					
ANR	7688275	IfStatement	if ( notes )		7687473	32					
ANR	7688276	Condition	notes	817:12:35392:35396	7687473	0	True				
ANR	7688277	Identifier	notes		7687473	0					
ANR	7688278	CompoundStatement		155:19:7135:7135	7687473	1					
ANR	7688279	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"" )"	818:12:35413:35536	7687473	0	True				
ANR	7688280	CallExpression	"fprintf ( xmlout , ""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"" )"		7687473	0					
ANR	7688281	Callee	fprintf		7687473	0					
ANR	7688282	Identifier	fprintf		7687473	0					
ANR	7688283	ArgumentList	xmlout		7687473	1					
ANR	7688284	Argument	xmlout		7687473	0					
ANR	7688285	Identifier	xmlout		7687473	0					
ANR	7688286	Argument	"""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"""		7687473	1					
ANR	7688287	PrimaryExpression	"""            <!-- Averate rate in bits per second over the entire presentation. -->\\n"""		7687473	0					
ANR	7688288	ExpressionStatement	"fprintf ( xmlout , ""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"" , track -> slidingavgbitrate )"	821:8:35556:35669	7687473	33	True				
ANR	7688289	CallExpression	"fprintf ( xmlout , ""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"" , track -> slidingavgbitrate )"		7687473	0					
ANR	7688290	Callee	fprintf		7687473	0					
ANR	7688291	Identifier	fprintf		7687473	0					
ANR	7688292	ArgumentList	xmlout		7687473	1					
ANR	7688293	Argument	xmlout		7687473	0					
ANR	7688294	Identifier	xmlout		7687473	0					
ANR	7688295	Argument	"""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"""		7687473	1					
ANR	7688296	PrimaryExpression	"""            <SlidingAvgBit>%d</SlidingAvgBitRate>\\n"""		7687473	0					
ANR	7688297	Argument	track -> slidingavgbitrate		7687473	2					
ANR	7688298	PtrMemberAccess	track -> slidingavgbitrate		7687473	0					
ANR	7688299	Identifier	track		7687473	0					
ANR	7688300	Identifier	slidingavgbitrate		7687473	1					
ANR	7688301	IfStatement	if ( notes )		7687473	34					
ANR	7688302	Condition	notes	823:12:35683:35687	7687473	0	True				
ANR	7688303	Identifier	notes		7687473	0					
ANR	7688304	CompoundStatement		161:19:7426:7426	7687473	1					
ANR	7688305	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"" )"	824:12:35704:35828	7687473	0	True				
ANR	7688306	CallExpression	"fprintf ( xmlout , ""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"" )"		7687473	0					
ANR	7688307	Callee	fprintf		7687473	0					
ANR	7688308	Identifier	fprintf		7687473	0					
ANR	7688309	ArgumentList	xmlout		7687473	1					
ANR	7688310	Argument	xmlout		7687473	0					
ANR	7688311	Identifier	xmlout		7687473	0					
ANR	7688312	Argument	"""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"""		7687473	1					
ANR	7688313	PrimaryExpression	"""            <!-- Maximum rate in bits per second over any window of one minute. -->\\n"""		7687473	0					
ANR	7688314	ExpressionStatement	"fprintf ( xmlout , ""          </HintMediaHeader>\\n"" )"	827:8:35848:35898	7687473	35	True				
ANR	7688315	CallExpression	"fprintf ( xmlout , ""          </HintMediaHeader>\\n"" )"		7687473	0					
ANR	7688316	Callee	fprintf		7687473	0					
ANR	7688317	Identifier	fprintf		7687473	0					
ANR	7688318	ArgumentList	xmlout		7687473	1					
ANR	7688319	Argument	xmlout		7687473	0					
ANR	7688320	Identifier	xmlout		7687473	0					
ANR	7688321	Argument	"""          </HintMediaHeader>\\n"""		7687473	1					
ANR	7688322	PrimaryExpression	"""          </HintMediaHeader>\\n"""		7687473	0					
ANR	7688323	BreakStatement	break ;	828:8:35908:35913	7687473	36	True				
ANR	7688324	ExpressionStatement	"fprintf ( xmlout , ""          <DataInfo BoxType=\\""dinf\\"">\\n"" )"	830:4:35925:35986	7687473	29	True				
ANR	7688325	CallExpression	"fprintf ( xmlout , ""          <DataInfo BoxType=\\""dinf\\"">\\n"" )"		7687473	0					
ANR	7688326	Callee	fprintf		7687473	0					
ANR	7688327	Identifier	fprintf		7687473	0					
ANR	7688328	ArgumentList	xmlout		7687473	1					
ANR	7688329	Argument	xmlout		7687473	0					
ANR	7688330	Identifier	xmlout		7687473	0					
ANR	7688331	Argument	"""          <DataInfo BoxType=\\""dinf\\"">\\n"""		7687473	1					
ANR	7688332	PrimaryExpression	"""          <DataInfo BoxType=\\""dinf\\"">\\n"""		7687473	0					
ANR	7688333	ExpressionStatement	"fprintf ( xmlout , ""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"" , track -> num_url , track -> num_urn )"	831:4:35992:36148	7687473	30	True				
ANR	7688334	CallExpression	"fprintf ( xmlout , ""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"" , track -> num_url , track -> num_urn )"		7687473	0					
ANR	7688335	Callee	fprintf		7687473	0					
ANR	7688336	Identifier	fprintf		7687473	0					
ANR	7688337	ArgumentList	xmlout		7687473	1					
ANR	7688338	Argument	xmlout		7687473	0					
ANR	7688339	Identifier	xmlout		7687473	0					
ANR	7688340	Argument	"""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"""		7687473	1					
ANR	7688341	PrimaryExpression	"""            <DataReference BoxType=\\""dref\\""  URL_Count=\\""%d\\"" URN_Count=\\""%d\\"">\\n"""		7687473	0					
ANR	7688342	Argument	track -> num_url		7687473	2					
ANR	7688343	PtrMemberAccess	track -> num_url		7687473	0					
ANR	7688344	Identifier	track		7687473	0					
ANR	7688345	Identifier	num_url		7687473	1					
ANR	7688346	Argument	track -> num_urn		7687473	3					
ANR	7688347	PtrMemberAccess	track -> num_urn		7687473	0					
ANR	7688348	Identifier	track		7687473	0					
ANR	7688349	Identifier	num_urn		7687473	1					
ANR	7688350	IfStatement	if ( notes )		7687473	31					
ANR	7688351	Condition	notes	836:8:36375:36379	7687473	0	True				
ANR	7688352	Identifier	notes		7687473	0					
ANR	7688353	CompoundStatement		174:15:8118:8118	7687473	1					
ANR	7688354	ExpressionStatement	"fprintf ( xmlout , ""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"" )"	837:8:36392:36532	7687473	0	True				
ANR	7688355	CallExpression	"fprintf ( xmlout , ""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"" )"		7687473	0					
ANR	7688356	Callee	fprintf		7687473	0					
ANR	7688357	Identifier	fprintf		7687473	0					
ANR	7688358	ArgumentList	xmlout		7687473	1					
ANR	7688359	Argument	xmlout		7687473	0					
ANR	7688360	Identifier	xmlout		7687473	0					
ANR	7688361	Argument	"""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"""		7687473	1					
ANR	7688362	PrimaryExpression	"""              <!-- No entries here mean that file is self-contained, as required by Simple Profile. -->\\n"""		7687473	0					
ANR	7688363	ForStatement	for ( k = 0 ; k < track -> num_url ; k ++ )		7687473	32					
ANR	7688364	ForInit	k = 0 ;	840:9:36549:36554	7687473	0	True				
ANR	7688365	AssignmentExpression	k = 0		7687473	0		=			
ANR	7688366	Identifier	k		7687473	0					
ANR	7688367	PrimaryExpression	0		7687473	1					
ANR	7688368	Condition	k < track -> num_url	840:16:36556:36573	7687473	1	True				
ANR	7688369	RelationalExpression	k < track -> num_url		7687473	0		<			
ANR	7688370	Identifier	k		7687473	0					
ANR	7688371	PtrMemberAccess	track -> num_url		7687473	1					
ANR	7688372	Identifier	track		7687473	0					
ANR	7688373	Identifier	num_url		7687473	1					
ANR	7688374	PostIncDecOperationExpression	k ++	840:36:36576:36578	7687473	2	True				
ANR	7688375	Identifier	k		7687473	0					
ANR	7688376	IncDec	++		7687473	1					
ANR	7688377	CompoundStatement		178:41:8317:8317	7687473	3					
ANR	7688378	ExpressionStatement	"fprintf ( xmlout , ""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"" )"	841:8:36591:36680	7687473	0	True				
ANR	7688379	CallExpression	"fprintf ( xmlout , ""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"" )"		7687473	0					
ANR	7688380	Callee	fprintf		7687473	0					
ANR	7688381	Identifier	fprintf		7687473	0					
ANR	7688382	ArgumentList	xmlout		7687473	1					
ANR	7688383	Argument	xmlout		7687473	0					
ANR	7688384	Identifier	xmlout		7687473	0					
ANR	7688385	Argument	"""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"""		7687473	1					
ANR	7688386	PrimaryExpression	"""            <DataEntryUrlBox BoxType=\\""url[space]\\"">\\n"""		7687473	0					
ANR	7688387	IfStatement	if ( notes )		7687473	1					
ANR	7688388	Condition	notes	843:12:36724:36728	7687473	0	True				
ANR	7688389	Identifier	notes		7687473	0					
ANR	7688390	CompoundStatement		181:19:8467:8467	7687473	1					
ANR	7688391	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"" )"	844:12:36745:36896	7687473	0	True				
ANR	7688392	CallExpression	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"" )"		7687473	0					
ANR	7688393	Callee	fprintf		7687473	0					
ANR	7688394	Identifier	fprintf		7687473	0					
ANR	7688395	ArgumentList	xmlout		7687473	1					
ANR	7688396	Argument	xmlout		7687473	0					
ANR	7688397	Identifier	xmlout		7687473	0					
ANR	7688398	Argument	"""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"""		7687473	1					
ANR	7688399	PrimaryExpression	"""              <!-- Only the first 16 bytes of URL location are recorded in mj2_to_metadata data structure. -->\\n"""		7687473	0					
ANR	7688400	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		7687473	2					
ANR	7688401	ForInit	i = 0 ;	847:13:36921:36926	7687473	0	True				
ANR	7688402	AssignmentExpression	i = 0		7687473	0		=			
ANR	7688403	Identifier	i		7687473	0					
ANR	7688404	PrimaryExpression	0		7687473	1					
ANR	7688405	Condition	i < 4	847:20:36928:36932	7687473	1	True				
ANR	7688406	RelationalExpression	i < 4		7687473	0		<			
ANR	7688407	Identifier	i		7687473	0					
ANR	7688408	PrimaryExpression	4		7687473	1					
ANR	7688409	PostIncDecOperationExpression	i ++	847:27:36935:36937	7687473	2	True				
ANR	7688410	Identifier	i		7687473	0					
ANR	7688411	IncDec	++		7687473	1					
ANR	7688412	CompoundStatement		185:32:8676:8676	7687473	3					
ANR	7688413	ExpressionStatement	"uint_to_chars ( track -> url [ track -> num_url ] . location [ i ] , buf )"	848:12:36954:37012	7687473	0	True				
ANR	7688414	CallExpression	"uint_to_chars ( track -> url [ track -> num_url ] . location [ i ] , buf )"		7687473	0					
ANR	7688415	Callee	uint_to_chars		7687473	0					
ANR	7688416	Identifier	uint_to_chars		7687473	0					
ANR	7688417	ArgumentList	track -> url [ track -> num_url ] . location [ i ]		7687473	1					
ANR	7688418	Argument	track -> url [ track -> num_url ] . location [ i ]		7687473	0					
ANR	7688419	ArrayIndexing	track -> url [ track -> num_url ] . location [ i ]		7687473	0					
ANR	7688420	MemberAccess	track -> url [ track -> num_url ] . location		7687473	0					
ANR	7688421	ArrayIndexing	track -> url [ track -> num_url ]		7687473	0					
ANR	7688422	PtrMemberAccess	track -> url		7687473	0					
ANR	7688423	Identifier	track		7687473	0					
ANR	7688424	Identifier	url		7687473	1					
ANR	7688425	PtrMemberAccess	track -> num_url		7687473	1					
ANR	7688426	Identifier	track		7687473	0					
ANR	7688427	Identifier	num_url		7687473	1					
ANR	7688428	Identifier	location		7687473	1					
ANR	7688429	Identifier	i		7687473	1					
ANR	7688430	Argument	buf		7687473	1					
ANR	7688431	Identifier	buf		7687473	0					
ANR	7688432	ExpressionStatement	"fprintf ( xmlout , ""              <Location>%s</Location>\\n"" )"	849:12:37026:37085	7687473	1	True				
ANR	7688433	CallExpression	"fprintf ( xmlout , ""              <Location>%s</Location>\\n"" )"		7687473	0					
ANR	7688434	Callee	fprintf		7687473	0					
ANR	7688435	Identifier	fprintf		7687473	0					
ANR	7688436	ArgumentList	xmlout		7687473	1					
ANR	7688437	Argument	xmlout		7687473	0					
ANR	7688438	Identifier	xmlout		7687473	0					
ANR	7688439	Argument	"""              <Location>%s</Location>\\n"""		7687473	1					
ANR	7688440	PrimaryExpression	"""              <Location>%s</Location>\\n"""		7687473	0					
ANR	7688441	ExpressionStatement	"fprintf ( xmlout , ""            </DataEntryUrlBox>\\n"" )"	851:8:37105:37172	7687473	3	True				
ANR	7688442	CallExpression	"fprintf ( xmlout , ""            </DataEntryUrlBox>\\n"" )"		7687473	0					
ANR	7688443	Callee	fprintf		7687473	0					
ANR	7688444	Identifier	fprintf		7687473	0					
ANR	7688445	ArgumentList	xmlout		7687473	1					
ANR	7688446	Argument	xmlout		7687473	0					
ANR	7688447	Identifier	xmlout		7687473	0					
ANR	7688448	Argument	"""            </DataEntryUrlBox>\\n"""		7687473	1					
ANR	7688449	PrimaryExpression	"""            </DataEntryUrlBox>\\n"""		7687473	0					
ANR	7688450	ForStatement	for ( k = 0 ; k < track -> num_urn ; k ++ )		7687473	33					
ANR	7688451	ForInit	k = 0 ;	854:9:37219:37224	7687473	0	True				
ANR	7688452	AssignmentExpression	k = 0		7687473	0		=			
ANR	7688453	Identifier	k		7687473	0					
ANR	7688454	PrimaryExpression	0		7687473	1					
ANR	7688455	Condition	k < track -> num_urn	854:16:37226:37243	7687473	1	True				
ANR	7688456	RelationalExpression	k < track -> num_urn		7687473	0		<			
ANR	7688457	Identifier	k		7687473	0					
ANR	7688458	PtrMemberAccess	track -> num_urn		7687473	1					
ANR	7688459	Identifier	track		7687473	0					
ANR	7688460	Identifier	num_urn		7687473	1					
ANR	7688461	PostIncDecOperationExpression	k ++	854:36:37246:37248	7687473	2	True				
ANR	7688462	Identifier	k		7687473	0					
ANR	7688463	IncDec	++		7687473	1					
ANR	7688464	CompoundStatement		192:41:8987:8987	7687473	3					
ANR	7688465	ExpressionStatement	"fprintf ( xmlout , ""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"" )"	855:8:37261:37350	7687473	0	True				
ANR	7688466	CallExpression	"fprintf ( xmlout , ""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"" )"		7687473	0					
ANR	7688467	Callee	fprintf		7687473	0					
ANR	7688468	Identifier	fprintf		7687473	0					
ANR	7688469	ArgumentList	xmlout		7687473	1					
ANR	7688470	Argument	xmlout		7687473	0					
ANR	7688471	Identifier	xmlout		7687473	0					
ANR	7688472	Argument	"""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"""		7687473	1					
ANR	7688473	PrimaryExpression	"""            <DataEntryUrnBox BoxType=\\""urn[space]\\"">\\n"""		7687473	0					
ANR	7688474	IfStatement	if ( notes )		7687473	1					
ANR	7688475	Condition	notes	858:12:37475:37479	7687473	0	True				
ANR	7688476	Identifier	notes		7687473	0					
ANR	7688477	CompoundStatement		196:19:9218:9218	7687473	1					
ANR	7688478	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"" )"	859:12:37496:37670	7687473	0	True				
ANR	7688479	CallExpression	"fprintf ( xmlout , ""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"" )"		7687473	0					
ANR	7688480	Callee	fprintf		7687473	0					
ANR	7688481	Identifier	fprintf		7687473	0					
ANR	7688482	ArgumentList	xmlout		7687473	1					
ANR	7688483	Argument	xmlout		7687473	0					
ANR	7688484	Identifier	xmlout		7687473	0					
ANR	7688485	Argument	"""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"""		7687473	1					
ANR	7688486	PrimaryExpression	"""              <!-- Only the first 16 bytes each of URN name and optional location are recorded in mj2_to_metadata data structure. -->\\n"""		7687473	0					
ANR	7688487	ExpressionStatement	"fprintf ( xmlout , ""              <Name>"" )"	862:8:37690:37730	7687473	2	True				
ANR	7688488	CallExpression	"fprintf ( xmlout , ""              <Name>"" )"		7687473	0					
ANR	7688489	Callee	fprintf		7687473	0					
ANR	7688490	Identifier	fprintf		7687473	0					
ANR	7688491	ArgumentList	xmlout		7687473	1					
ANR	7688492	Argument	xmlout		7687473	0					
ANR	7688493	Identifier	xmlout		7687473	0					
ANR	7688494	Argument	"""              <Name>"""		7687473	1					
ANR	7688495	PrimaryExpression	"""              <Name>"""		7687473	0					
ANR	7688496	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		7687473	3					
ANR	7688497	ForInit	i = 0 ;	863:13:37745:37750	7687473	0	True				
ANR	7688498	AssignmentExpression	i = 0		7687473	0		=			
ANR	7688499	Identifier	i		7687473	0					
ANR	7688500	PrimaryExpression	0		7687473	1					
ANR	7688501	Condition	i < 4	863:20:37752:37756	7687473	1	True				
ANR	7688502	RelationalExpression	i < 4		7687473	0		<			
ANR	7688503	Identifier	i		7687473	0					
ANR	7688504	PrimaryExpression	4		7687473	1					
ANR	7688505	PostIncDecOperationExpression	i ++	863:27:37759:37761	7687473	2	True				
ANR	7688506	Identifier	i		7687473	0					
ANR	7688507	IncDec	++		7687473	1					
ANR	7688508	CompoundStatement		201:32:9500:9500	7687473	3					
ANR	7688509	ExpressionStatement	"uint_to_chars ( track -> urn [ track -> num_urn ] . name [ i ] , buf )"	864:12:37778:37832	7687473	0	True				
ANR	7688510	CallExpression	"uint_to_chars ( track -> urn [ track -> num_urn ] . name [ i ] , buf )"		7687473	0					
ANR	7688511	Callee	uint_to_chars		7687473	0					
ANR	7688512	Identifier	uint_to_chars		7687473	0					
ANR	7688513	ArgumentList	track -> urn [ track -> num_urn ] . name [ i ]		7687473	1					
ANR	7688514	Argument	track -> urn [ track -> num_urn ] . name [ i ]		7687473	0					
ANR	7688515	ArrayIndexing	track -> urn [ track -> num_urn ] . name [ i ]		7687473	0					
ANR	7688516	MemberAccess	track -> urn [ track -> num_urn ] . name		7687473	0					
ANR	7688517	ArrayIndexing	track -> urn [ track -> num_urn ]		7687473	0					
ANR	7688518	PtrMemberAccess	track -> urn		7687473	0					
ANR	7688519	Identifier	track		7687473	0					
ANR	7688520	Identifier	urn		7687473	1					
ANR	7688521	PtrMemberAccess	track -> num_urn		7687473	1					
ANR	7688522	Identifier	track		7687473	0					
ANR	7688523	Identifier	num_urn		7687473	1					
ANR	7688524	Identifier	name		7687473	1					
ANR	7688525	Identifier	i		7687473	1					
ANR	7688526	Argument	buf		7687473	1					
ANR	7688527	Identifier	buf		7687473	0					
ANR	7688528	ExpressionStatement	"fprintf ( xmlout , ""%s"" , buf )"	865:12:37846:37872	7687473	1	True				
ANR	7688529	CallExpression	"fprintf ( xmlout , ""%s"" , buf )"		7687473	0					
ANR	7688530	Callee	fprintf		7687473	0					
ANR	7688531	Identifier	fprintf		7687473	0					
ANR	7688532	ArgumentList	xmlout		7687473	1					
ANR	7688533	Argument	xmlout		7687473	0					
ANR	7688534	Identifier	xmlout		7687473	0					
ANR	7688535	Argument	"""%s"""		7687473	1					
ANR	7688536	PrimaryExpression	"""%s"""		7687473	0					
ANR	7688537	Argument	buf		7687473	2					
ANR	7688538	Identifier	buf		7687473	0					
ANR	7688539	ExpressionStatement	"fprintf ( xmlout , ""</Name>\\n"" )"	867:8:37892:37921	7687473	4	True				
ANR	7688540	CallExpression	"fprintf ( xmlout , ""</Name>\\n"" )"		7687473	0					
ANR	7688541	Callee	fprintf		7687473	0					
ANR	7688542	Identifier	fprintf		7687473	0					
ANR	7688543	ArgumentList	xmlout		7687473	1					
ANR	7688544	Argument	xmlout		7687473	0					
ANR	7688545	Identifier	xmlout		7687473	0					
ANR	7688546	Argument	"""</Name>\\n"""		7687473	1					
ANR	7688547	PrimaryExpression	"""</Name>\\n"""		7687473	0					
ANR	7688548	ExpressionStatement	"fprintf ( xmlout , ""              <Location>"" )"	868:8:37931:37975	7687473	5	True				
ANR	7688549	CallExpression	"fprintf ( xmlout , ""              <Location>"" )"		7687473	0					
ANR	7688550	Callee	fprintf		7687473	0					
ANR	7688551	Identifier	fprintf		7687473	0					
ANR	7688552	ArgumentList	xmlout		7687473	1					
ANR	7688553	Argument	xmlout		7687473	0					
ANR	7688554	Identifier	xmlout		7687473	0					
ANR	7688555	Argument	"""              <Location>"""		7687473	1					
ANR	7688556	PrimaryExpression	"""              <Location>"""		7687473	0					
ANR	7688557	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		7687473	6					
ANR	7688558	ForInit	i = 0 ;	869:13:37990:37995	7687473	0	True				
ANR	7688559	AssignmentExpression	i = 0		7687473	0		=			
ANR	7688560	Identifier	i		7687473	0					
ANR	7688561	PrimaryExpression	0		7687473	1					
ANR	7688562	Condition	i < 4	869:20:37997:38001	7687473	1	True				
ANR	7688563	RelationalExpression	i < 4		7687473	0		<			
ANR	7688564	Identifier	i		7687473	0					
ANR	7688565	PrimaryExpression	4		7687473	1					
ANR	7688566	PostIncDecOperationExpression	i ++	869:27:38004:38006	7687473	2	True				
ANR	7688567	Identifier	i		7687473	0					
ANR	7688568	IncDec	++		7687473	1					
ANR	7688569	CompoundStatement		207:32:9745:9745	7687473	3					
ANR	7688570	ExpressionStatement	"uint_to_chars ( track -> urn [ track -> num_urn ] . location [ i ] , buf )"	870:12:38023:38081	7687473	0	True				
ANR	7688571	CallExpression	"uint_to_chars ( track -> urn [ track -> num_urn ] . location [ i ] , buf )"		7687473	0					
ANR	7688572	Callee	uint_to_chars		7687473	0					
ANR	7688573	Identifier	uint_to_chars		7687473	0					
ANR	7688574	ArgumentList	track -> urn [ track -> num_urn ] . location [ i ]		7687473	1					
ANR	7688575	Argument	track -> urn [ track -> num_urn ] . location [ i ]		7687473	0					
ANR	7688576	ArrayIndexing	track -> urn [ track -> num_urn ] . location [ i ]		7687473	0					
ANR	7688577	MemberAccess	track -> urn [ track -> num_urn ] . location		7687473	0					
ANR	7688578	ArrayIndexing	track -> urn [ track -> num_urn ]		7687473	0					
ANR	7688579	PtrMemberAccess	track -> urn		7687473	0					
ANR	7688580	Identifier	track		7687473	0					
ANR	7688581	Identifier	urn		7687473	1					
ANR	7688582	PtrMemberAccess	track -> num_urn		7687473	1					
ANR	7688583	Identifier	track		7687473	0					
ANR	7688584	Identifier	num_urn		7687473	1					
ANR	7688585	Identifier	location		7687473	1					
ANR	7688586	Identifier	i		7687473	1					
ANR	7688587	Argument	buf		7687473	1					
ANR	7688588	Identifier	buf		7687473	0					
ANR	7688589	ExpressionStatement	"fprintf ( xmlout , ""%s"" )"	871:12:38095:38116	7687473	1	True				
ANR	7688590	CallExpression	"fprintf ( xmlout , ""%s"" )"		7687473	0					
ANR	7688591	Callee	fprintf		7687473	0					
ANR	7688592	Identifier	fprintf		7687473	0					
ANR	7688593	ArgumentList	xmlout		7687473	1					
ANR	7688594	Argument	xmlout		7687473	0					
ANR	7688595	Identifier	xmlout		7687473	0					
ANR	7688596	Argument	"""%s"""		7687473	1					
ANR	7688597	PrimaryExpression	"""%s"""		7687473	0					
ANR	7688598	ExpressionStatement	"fprintf ( xmlout , ""</Location>\\n"" )"	873:8:38136:38169	7687473	7	True				
ANR	7688599	CallExpression	"fprintf ( xmlout , ""</Location>\\n"" )"		7687473	0					
ANR	7688600	Callee	fprintf		7687473	0					
ANR	7688601	Identifier	fprintf		7687473	0					
ANR	7688602	ArgumentList	xmlout		7687473	1					
ANR	7688603	Argument	xmlout		7687473	0					
ANR	7688604	Identifier	xmlout		7687473	0					
ANR	7688605	Argument	"""</Location>\\n"""		7687473	1					
ANR	7688606	PrimaryExpression	"""</Location>\\n"""		7687473	0					
ANR	7688607	ExpressionStatement	"fprintf ( xmlout , ""            </DataEntryUrnBox>\\n"" )"	874:8:38179:38231	7687473	8	True				
ANR	7688608	CallExpression	"fprintf ( xmlout , ""            </DataEntryUrnBox>\\n"" )"		7687473	0					
ANR	7688609	Callee	fprintf		7687473	0					
ANR	7688610	Identifier	fprintf		7687473	0					
ANR	7688611	ArgumentList	xmlout		7687473	1					
ANR	7688612	Argument	xmlout		7687473	0					
ANR	7688613	Identifier	xmlout		7687473	0					
ANR	7688614	Argument	"""            </DataEntryUrnBox>\\n"""		7687473	1					
ANR	7688615	PrimaryExpression	"""            </DataEntryUrnBox>\\n"""		7687473	0					
ANR	7688616	ExpressionStatement	"fprintf ( xmlout , ""            </DataReference>\\n"" )"	876:4:38243:38295	7687473	34	True				
ANR	7688617	CallExpression	"fprintf ( xmlout , ""            </DataReference>\\n"" )"		7687473	0					
ANR	7688618	Callee	fprintf		7687473	0					
ANR	7688619	Identifier	fprintf		7687473	0					
ANR	7688620	ArgumentList	xmlout		7687473	1					
ANR	7688621	Argument	xmlout		7687473	0					
ANR	7688622	Identifier	xmlout		7687473	0					
ANR	7688623	Argument	"""            </DataReference>\\n"""		7687473	1					
ANR	7688624	PrimaryExpression	"""            </DataReference>\\n"""		7687473	0					
ANR	7688625	ExpressionStatement	"fprintf ( xmlout , ""          </DataInfo>\\n"" )"	877:4:38301:38346	7687473	35	True				
ANR	7688626	CallExpression	"fprintf ( xmlout , ""          </DataInfo>\\n"" )"		7687473	0					
ANR	7688627	Callee	fprintf		7687473	0					
ANR	7688628	Identifier	fprintf		7687473	0					
ANR	7688629	ArgumentList	xmlout		7687473	1					
ANR	7688630	Argument	xmlout		7687473	0					
ANR	7688631	Identifier	xmlout		7687473	0					
ANR	7688632	Argument	"""          </DataInfo>\\n"""		7687473	1					
ANR	7688633	PrimaryExpression	"""          </DataInfo>\\n"""		7687473	0					
ANR	7688634	ExpressionStatement	"xml_write_stbl ( file , xmlout , track , tnum )"	879:4:38353:38394	7687473	36	True				
ANR	7688635	CallExpression	"xml_write_stbl ( file , xmlout , track , tnum )"		7687473	0					
ANR	7688636	Callee	xml_write_stbl		7687473	0					
ANR	7688637	Identifier	xml_write_stbl		7687473	0					
ANR	7688638	ArgumentList	file		7687473	1					
ANR	7688639	Argument	file		7687473	0					
ANR	7688640	Identifier	file		7687473	0					
ANR	7688641	Argument	xmlout		7687473	1					
ANR	7688642	Identifier	xmlout		7687473	0					
ANR	7688643	Argument	track		7687473	2					
ANR	7688644	Identifier	track		7687473	0					
ANR	7688645	Argument	tnum		7687473	3					
ANR	7688646	Identifier	tnum		7687473	0					
ANR	7688647	ExpressionStatement	"fprintf ( xmlout , ""        </MediaInfoContainer>\\n"" )"	881:4:38419:38472	7687473	37	True				
ANR	7688648	CallExpression	"fprintf ( xmlout , ""        </MediaInfoContainer>\\n"" )"		7687473	0					
ANR	7688649	Callee	fprintf		7687473	0					
ANR	7688650	Identifier	fprintf		7687473	0					
ANR	7688651	ArgumentList	xmlout		7687473	1					
ANR	7688652	Argument	xmlout		7687473	0					
ANR	7688653	Identifier	xmlout		7687473	0					
ANR	7688654	Argument	"""        </MediaInfoContainer>\\n"""		7687473	1					
ANR	7688655	PrimaryExpression	"""        </MediaInfoContainer>\\n"""		7687473	0					
ANR	7688656	ExpressionStatement	"fprintf ( xmlout , ""      </Media>\\n"" )"	882:4:38478:38516	7687473	38	True				
ANR	7688657	CallExpression	"fprintf ( xmlout , ""      </Media>\\n"" )"		7687473	0					
ANR	7688658	Callee	fprintf		7687473	0					
ANR	7688659	Identifier	fprintf		7687473	0					
ANR	7688660	ArgumentList	xmlout		7687473	1					
ANR	7688661	Argument	xmlout		7687473	0					
ANR	7688662	Identifier	xmlout		7687473	0					
ANR	7688663	Argument	"""      </Media>\\n"""		7687473	1					
ANR	7688664	PrimaryExpression	"""      </Media>\\n"""		7687473	0					
ANR	7688665	ReturnType	void		7687473	1					
ANR	7688666	Identifier	xml_write_mdia		7687473	2					
ANR	7688667	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		7687473	3					
ANR	7688668	Parameter	FILE * file	661:20:28181:28190	7687473	0	True				
ANR	7688669	ParameterType	FILE *		7687473	0					
ANR	7688670	Identifier	file		7687473	1					
ANR	7688671	Parameter	FILE * xmlout	661:32:28193:28204	7687473	1	True				
ANR	7688672	ParameterType	FILE *		7687473	0					
ANR	7688673	Identifier	xmlout		7687473	1					
ANR	7688674	Parameter	mj2_tk_t * track	661:46:28207:28221	7687473	2	True				
ANR	7688675	ParameterType	mj2_tk_t *		7687473	0					
ANR	7688676	Identifier	track		7687473	1					
ANR	7688677	Parameter	unsigned int tnum	662:20:28244:28260	7687473	3	True				
ANR	7688678	ParameterType	unsigned int		7687473	0					
ANR	7688679	Identifier	tnum		7687473	1					
ANR	7688680	CFGEntryNode	ENTRY		7687473		True				
ANR	7688681	CFGExitNode	EXIT		7687473		True				
ANR	7688682	Symbol	track -> num_url		7687473						
ANR	7688683	Symbol	track -> num_urn		7687473						
ANR	7688684	Symbol	notes		7687473						
ANR	7688685	Symbol	track -> urn [ track -> num_urn ] . location		7687473						
ANR	7688686	Symbol	* * track		7687473						
ANR	7688687	Symbol	* * track -> urn		7687473						
ANR	7688688	Symbol	* * track -> url		7687473						
ANR	7688689	Symbol	track -> track_type		7687473						
ANR	7688690	Symbol	track -> avgPDUsize		7687473						
ANR	7688691	Symbol	* track -> num_urn		7687473						
ANR	7688692	Symbol	file		7687473						
ANR	7688693	Symbol	track -> duration		7687473						
ANR	7688694	Symbol	* track -> num_url		7687473						
ANR	7688695	Symbol	track -> urn [ track -> num_urn ] . name		7687473						
ANR	7688696	Symbol	* track -> urn [ track -> num_urn ] . location		7687473						
ANR	7688697	Symbol	track		7687473						
ANR	7688698	Symbol	track -> timescale		7687473						
ANR	7688699	Symbol	track -> graphicsmode		7687473						
ANR	7688700	Symbol	track -> maxPDUsize		7687473						
ANR	7688701	Symbol	derived		7687473						
ANR	7688702	Symbol	* track -> opcolor		7687473						
ANR	7688703	Symbol	track -> balance		7687473						
ANR	7688704	Symbol	* buf		7687473						
ANR	7688705	Symbol	* track -> urn		7687473						
ANR	7688706	Symbol	tnum		7687473						
ANR	7688707	Symbol	* * * track		7687473						
ANR	7688708	Symbol	* track -> url		7687473						
ANR	7688709	Symbol	track -> maxbitrate		7687473						
ANR	7688710	Symbol	track -> slidingavgbitrate		7687473						
ANR	7688711	Symbol	* * track -> num_url		7687473						
ANR	7688712	Symbol	i		7687473						
ANR	7688713	Symbol	raw		7687473						
ANR	7688714	Symbol	* track -> urn [ track -> num_urn ] . name		7687473						
ANR	7688715	Symbol	* * track -> num_urn		7687473						
ANR	7688716	Symbol	k		7687473						
ANR	7688717	Symbol	* track		7687473						
ANR	7688718	Symbol	xmlout		7687473						
ANR	7688719	Symbol	buf		7687473						
ANR	7688720	Symbol	track -> modification_time		7687473						
ANR	7688721	Symbol	* i		7687473						
ANR	7688722	Symbol	track -> url [ track -> num_url ] . location		7687473						
ANR	7688723	Symbol	track -> avgbitrate		7687473						
ANR	7688724	Symbol	* track -> url [ track -> num_url ] . location		7687473						
ANR	7688725	Symbol	track -> language		7687473						
ANR	7688726	Symbol	track -> creation_time		7687473						
ANR	7688727	Symbol	track -> opcolor		7687473						
ANR	7688728	Symbol	track -> urn		7687473						
ANR	7688729	Symbol	track -> url		7687473						
ANR	7688730	Function	xml_write_stbl	887:0:38542:53570							
ANR	7688731	FunctionDef	"xml_write_stbl (FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum)"		7688730	0					
ANR	7688732	CompoundStatement		889:0:38644:53570	7688730	0					
ANR	7688733	IdentifierDeclStatement	"char buf [ 5 ] , buf33 [ 33 ] ;"	890:4:38650:38672	7688730	0	True				
ANR	7688734	IdentifierDecl	buf [ 5 ]		7688730	0					
ANR	7688735	IdentifierDeclType	char [ 5 ]		7688730	0					
ANR	7688736	Identifier	buf		7688730	1					
ANR	7688737	PrimaryExpression	5		7688730	2					
ANR	7688738	IdentifierDecl	buf33 [ 33 ]		7688730	1					
ANR	7688739	IdentifierDeclType	char [ 33 ]		7688730	0					
ANR	7688740	Identifier	buf33		7688730	1					
ANR	7688741	PrimaryExpression	33		7688730	2					
ANR	7688742	IdentifierDeclStatement	"int i , len ;"	891:4:38678:38688	7688730	1	True				
ANR	7688743	IdentifierDecl	i		7688730	0					
ANR	7688744	IdentifierDeclType	int		7688730	0					
ANR	7688745	Identifier	i		7688730	1					
ANR	7688746	IdentifierDecl	len		7688730	1					
ANR	7688747	IdentifierDeclType	int		7688730	0					
ANR	7688748	Identifier	len		7688730	1					
ANR	7688749	ExpressionStatement	buf [ 4 ] = '\\0'	892:4:38694:38707	7688730	2	True				
ANR	7688750	AssignmentExpression	buf [ 4 ] = '\\0'		7688730	0		=			
ANR	7688751	ArrayIndexing	buf [ 4 ]		7688730	0					
ANR	7688752	Identifier	buf		7688730	0					
ANR	7688753	PrimaryExpression	4		7688730	1					
ANR	7688754	PrimaryExpression	'\\0'		7688730	1					
ANR	7688755	ExpressionStatement	"fprintf ( xmlout , ""          <SampleTable BoxType=\\""stbl\\"">\\n"" )"	894:4:38714:38780	7688730	3	True				
ANR	7688756	CallExpression	"fprintf ( xmlout , ""          <SampleTable BoxType=\\""stbl\\"">\\n"" )"		7688730	0					
ANR	7688757	Callee	fprintf		7688730	0					
ANR	7688758	Identifier	fprintf		7688730	0					
ANR	7688759	ArgumentList	xmlout		7688730	1					
ANR	7688760	Argument	xmlout		7688730	0					
ANR	7688761	Identifier	xmlout		7688730	0					
ANR	7688762	Argument	"""          <SampleTable BoxType=\\""stbl\\"">\\n"""		7688730	1					
ANR	7688763	PrimaryExpression	"""          <SampleTable BoxType=\\""stbl\\"">\\n"""		7688730	0					
ANR	7688764	IfStatement	if ( notes )		7688730	4					
ANR	7688765	Condition	notes	895:8:38790:38794	7688730	0	True				
ANR	7688766	Identifier	notes		7688730	0					
ANR	7688767	CompoundStatement		7:15:152:152	7688730	1					
ANR	7688768	ExpressionStatement	"fprintf ( xmlout , ""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"" )"	896:8:38807:38946	7688730	0	True				
ANR	7688769	CallExpression	"fprintf ( xmlout , ""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"" )"		7688730	0					
ANR	7688770	Callee	fprintf		7688730	0					
ANR	7688771	Identifier	fprintf		7688730	0					
ANR	7688772	ArgumentList	xmlout		7688730	1					
ANR	7688773	Argument	xmlout		7688730	0					
ANR	7688774	Identifier	xmlout		7688730	0					
ANR	7688775	Argument	"""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"""		7688730	1					
ANR	7688776	PrimaryExpression	"""            <!-- What follows are specific instances of generic SampleDescription BoxType=\\""stsd\\"" -->\\n"""		7688730	0					
ANR	7688777	SwitchStatement	switch ( track -> track_type )		7688730	5					
ANR	7688778	Condition	track -> track_type	899:12:38966:38982	7688730	0	True				
ANR	7688779	PtrMemberAccess	track -> track_type		7688730	0					
ANR	7688780	Identifier	track		7688730	0					
ANR	7688781	Identifier	track_type		7688730	1					
ANR	7688782	CompoundStatement		11:31:340:340	7688730	1					
ANR	7688783	Label	case 0 :	900:4:38991:38997	7688730	0	True				
ANR	7688784	ExpressionStatement	"fprintf ( xmlout , ""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"" )"	904:8:39260:39332	7688730	1	True				
ANR	7688785	CallExpression	"fprintf ( xmlout , ""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"" )"		7688730	0					
ANR	7688786	Callee	fprintf		7688730	0					
ANR	7688787	Identifier	fprintf		7688730	0					
ANR	7688788	ArgumentList	xmlout		7688730	1					
ANR	7688789	Argument	xmlout		7688730	0					
ANR	7688790	Identifier	xmlout		7688730	0					
ANR	7688791	Argument	"""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"""		7688730	1					
ANR	7688792	PrimaryExpression	"""            <VisualSampleEntry BoxType=\\""mjp2\\"">\\n"""		7688730	0					
ANR	7688793	IfStatement	if ( notes )		7688730	2					
ANR	7688794	Condition	notes	905:12:39346:39350	7688730	0	True				
ANR	7688795	Identifier	notes		7688730	0					
ANR	7688796	CompoundStatement		17:19:708:708	7688730	1					
ANR	7688797	ExpressionStatement	"fprintf ( xmlout , ""            <!-- If multiple instances of this box, only first is shown here. -->\\n"" )"	906:12:39367:39489	7688730	0	True				
ANR	7688798	CallExpression	"fprintf ( xmlout , ""            <!-- If multiple instances of this box, only first is shown here. -->\\n"" )"		7688730	0					
ANR	7688799	Callee	fprintf		7688730	0					
ANR	7688800	Identifier	fprintf		7688730	0					
ANR	7688801	ArgumentList	xmlout		7688730	1					
ANR	7688802	Argument	xmlout		7688730	0					
ANR	7688803	Identifier	xmlout		7688730	0					
ANR	7688804	Argument	"""            <!-- If multiple instances of this box, only first is shown here. -->\\n"""		7688730	1					
ANR	7688805	PrimaryExpression	"""            <!-- If multiple instances of this box, only first is shown here. -->\\n"""		7688730	0					
ANR	7688806	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"" )"	908:12:39503:39651	7688730	1	True				
ANR	7688807	CallExpression	"fprintf ( xmlout , ""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"" )"		7688730	0					
ANR	7688808	Callee	fprintf		7688730	0					
ANR	7688809	Identifier	fprintf		7688730	0					
ANR	7688810	ArgumentList	xmlout		7688730	1					
ANR	7688811	Argument	xmlout		7688730	0					
ANR	7688812	Identifier	xmlout		7688730	0					
ANR	7688813	Argument	"""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"""		7688730	1					
ANR	7688814	PrimaryExpression	"""            <!-- Width and Height are in pixels.  Unlike the Track Header, there is no fractional part. -->\\n"""		7688730	0					
ANR	7688815	ExpressionStatement	"fprintf ( xmlout , ""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"" )"	910:12:39665:39831	7688730	2	True				
ANR	7688816	CallExpression	"fprintf ( xmlout , ""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"" )"		7688730	0					
ANR	7688817	Callee	fprintf		7688730	0					
ANR	7688818	Identifier	fprintf		7688730	0					
ANR	7688819	ArgumentList	xmlout		7688730	1					
ANR	7688820	Argument	xmlout		7688730	0					
ANR	7688821	Identifier	xmlout		7688730	0					
ANR	7688822	Argument	"""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"""		7688730	1					
ANR	7688823	PrimaryExpression	"""            <!-- In mj2_to_metadata implementation, the values are not represented separately from Track Header's values. -->\\n"""		7688730	0					
ANR	7688824	ExpressionStatement	"fprintf ( xmlout , ""              <WidthAsInteger>%d</WidthAsInteger>\\n"" , track -> w )"	914:8:39963:40062	7688730	3	True				
ANR	7688825	CallExpression	"fprintf ( xmlout , ""              <WidthAsInteger>%d</WidthAsInteger>\\n"" , track -> w )"		7688730	0					
ANR	7688826	Callee	fprintf		7688730	0					
ANR	7688827	Identifier	fprintf		7688730	0					
ANR	7688828	ArgumentList	xmlout		7688730	1					
ANR	7688829	Argument	xmlout		7688730	0					
ANR	7688830	Identifier	xmlout		7688730	0					
ANR	7688831	Argument	"""              <WidthAsInteger>%d</WidthAsInteger>\\n"""		7688730	1					
ANR	7688832	PrimaryExpression	"""              <WidthAsInteger>%d</WidthAsInteger>\\n"""		7688730	0					
ANR	7688833	Argument	track -> w		7688730	2					
ANR	7688834	PtrMemberAccess	track -> w		7688730	0					
ANR	7688835	Identifier	track		7688730	0					
ANR	7688836	Identifier	w		7688730	1					
ANR	7688837	ExpressionStatement	"fprintf ( xmlout , ""              <HeightAsInteger>%d</HeightAsInteger>\\n"" , track -> h )"	916:8:40072:40173	7688730	4	True				
ANR	7688838	CallExpression	"fprintf ( xmlout , ""              <HeightAsInteger>%d</HeightAsInteger>\\n"" , track -> h )"		7688730	0					
ANR	7688839	Callee	fprintf		7688730	0					
ANR	7688840	Identifier	fprintf		7688730	0					
ANR	7688841	ArgumentList	xmlout		7688730	1					
ANR	7688842	Argument	xmlout		7688730	0					
ANR	7688843	Identifier	xmlout		7688730	0					
ANR	7688844	Argument	"""              <HeightAsInteger>%d</HeightAsInteger>\\n"""		7688730	1					
ANR	7688845	PrimaryExpression	"""              <HeightAsInteger>%d</HeightAsInteger>\\n"""		7688730	0					
ANR	7688846	Argument	track -> h		7688730	2					
ANR	7688847	PtrMemberAccess	track -> h		7688730	0					
ANR	7688848	Identifier	track		7688730	0					
ANR	7688849	Identifier	h		7688730	1					
ANR	7688850	IfStatement	if ( notes )		7688730	5					
ANR	7688851	Condition	notes	919:12:40287:40291	7688730	0	True				
ANR	7688852	Identifier	notes		7688730	0					
ANR	7688853	CompoundStatement		31:19:1649:1649	7688730	1					
ANR	7688854	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"" )"	920:12:40308:40467	7688730	0	True				
ANR	7688855	CallExpression	"fprintf ( xmlout , ""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"" )"		7688730	0					
ANR	7688856	Callee	fprintf		7688730	0					
ANR	7688857	Identifier	fprintf		7688730	0					
ANR	7688858	ArgumentList	xmlout		7688730	1					
ANR	7688859	Argument	xmlout		7688730	0					
ANR	7688860	Identifier	xmlout		7688730	0					
ANR	7688861	Argument	"""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"""		7688730	1					
ANR	7688862	PrimaryExpression	"""              <!-- Resolutions are in pixels per inch, for the highest-resolution component (typically luminance). -->\\n"""		7688730	0					
ANR	7688863	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"	922:12:40481:40627	7688730	1	True				
ANR	7688864	CallExpression	"fprintf ( xmlout , ""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"" )"		7688730	0					
ANR	7688865	Callee	fprintf		7688730	0					
ANR	7688866	Identifier	fprintf		7688730	0					
ANR	7688867	ArgumentList	xmlout		7688730	1					
ANR	7688868	Argument	xmlout		7688730	0					
ANR	7688869	Identifier	xmlout		7688730	0					
ANR	7688870	Argument	"""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		7688730	1					
ANR	7688871	PrimaryExpression	"""              <!-- Both stored as fixed-point binary 16.16 values. Decimal values are approximations. -->\\n"""		7688730	0					
ANR	7688872	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"" )"	924:12:40641:40761	7688730	2	True				
ANR	7688873	CallExpression	"fprintf ( xmlout , ""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"" )"		7688730	0					
ANR	7688874	Callee	fprintf		7688730	0					
ANR	7688875	Identifier	fprintf		7688730	0					
ANR	7688876	ArgumentList	xmlout		7688730	1					
ANR	7688877	Argument	xmlout		7688730	0					
ANR	7688878	Identifier	xmlout		7688730	0					
ANR	7688879	Argument	"""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"""		7688730	1					
ANR	7688880	PrimaryExpression	"""              <!-- Typical value for both resolutions is 0x00480000  (72.0) -->\\n"""		7688730	0					
ANR	7688881	ExpressionStatement	"fprintf ( xmlout , ""              <HorizontalRes>\\n"" )"	927:8:40781:40834	7688730	6	True				
ANR	7688882	CallExpression	"fprintf ( xmlout , ""              <HorizontalRes>\\n"" )"		7688730	0					
ANR	7688883	Callee	fprintf		7688730	0					
ANR	7688884	Identifier	fprintf		7688730	0					
ANR	7688885	ArgumentList	xmlout		7688730	1					
ANR	7688886	Argument	xmlout		7688730	0					
ANR	7688887	Identifier	xmlout		7688730	0					
ANR	7688888	Argument	"""              <HorizontalRes>\\n"""		7688730	1					
ANR	7688889	PrimaryExpression	"""              <HorizontalRes>\\n"""		7688730	0					
ANR	7688890	IfStatement	if ( raw )		7688730	7					
ANR	7688891	Condition	raw	928:12:40848:40850	7688730	0	True				
ANR	7688892	Identifier	raw		7688730	0					
ANR	7688893	CompoundStatement		40:17:2208:2208	7688730	1					
ANR	7688894	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> horizresolution )"	929:12:40867:40970	7688730	0	True				
ANR	7688895	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> horizresolution )"		7688730	0					
ANR	7688896	Callee	fprintf		7688730	0					
ANR	7688897	Identifier	fprintf		7688730	0					
ANR	7688898	ArgumentList	xmlout		7688730	1					
ANR	7688899	Argument	xmlout		7688730	0					
ANR	7688900	Identifier	xmlout		7688730	0					
ANR	7688901	Argument	"""                <AsHex>0x%08x</AsHex>\\n"""		7688730	1					
ANR	7688902	PrimaryExpression	"""                <AsHex>0x%08x</AsHex>\\n"""		7688730	0					
ANR	7688903	Argument	track -> horizresolution		7688730	2					
ANR	7688904	PtrMemberAccess	track -> horizresolution		7688730	0					
ANR	7688905	Identifier	track		7688730	0					
ANR	7688906	Identifier	horizresolution		7688730	1					
ANR	7688907	IfStatement	if ( derived )		7688730	8					
ANR	7688908	Condition	derived	932:12:40994:41000	7688730	0	True				
ANR	7688909	Identifier	derived		7688730	0					
ANR	7688910	CompoundStatement		44:21:2358:2358	7688730	1					
ANR	7688911	ExpressionStatement	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> horizresolution / ( double ) 0x00010000 )"	933:12:41017:41178	7688730	0	True				
ANR	7688912	CallExpression	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> horizresolution / ( double ) 0x00010000 )"		7688730	0					
ANR	7688913	Callee	fprintf		7688730	0					
ANR	7688914	Identifier	fprintf		7688730	0					
ANR	7688915	ArgumentList	xmlout		7688730	1					
ANR	7688916	Argument	xmlout		7688730	0					
ANR	7688917	Identifier	xmlout		7688730	0					
ANR	7688918	Argument	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		7688730	1					
ANR	7688919	PrimaryExpression	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		7688730	0					
ANR	7688920	Argument	( double ) track -> horizresolution / ( double ) 0x00010000		7688730	2					
ANR	7688921	MultiplicativeExpression	( double ) track -> horizresolution / ( double ) 0x00010000		7688730	0		/			
ANR	7688922	CastExpression	( double ) track -> horizresolution		7688730	0					
ANR	7688923	CastTarget	double		7688730	0					
ANR	7688924	PtrMemberAccess	track -> horizresolution		7688730	1					
ANR	7688925	Identifier	track		7688730	0					
ANR	7688926	Identifier	horizresolution		7688730	1					
ANR	7688927	CastExpression	( double ) 0x00010000		7688730	1					
ANR	7688928	CastTarget	double		7688730	0					
ANR	7688929	PrimaryExpression	0x00010000		7688730	1					
ANR	7688930	ExpressionStatement	"fprintf ( xmlout , ""              </HorizontalRes>\\n"" )"	937:8:41266:41320	7688730	9	True				
ANR	7688931	CallExpression	"fprintf ( xmlout , ""              </HorizontalRes>\\n"" )"		7688730	0					
ANR	7688932	Callee	fprintf		7688730	0					
ANR	7688933	Identifier	fprintf		7688730	0					
ANR	7688934	ArgumentList	xmlout		7688730	1					
ANR	7688935	Argument	xmlout		7688730	0					
ANR	7688936	Identifier	xmlout		7688730	0					
ANR	7688937	Argument	"""              </HorizontalRes>\\n"""		7688730	1					
ANR	7688938	PrimaryExpression	"""              </HorizontalRes>\\n"""		7688730	0					
ANR	7688939	ExpressionStatement	"fprintf ( xmlout , ""              <VerticalRes>\\n"" )"	938:8:41330:41381	7688730	10	True				
ANR	7688940	CallExpression	"fprintf ( xmlout , ""              <VerticalRes>\\n"" )"		7688730	0					
ANR	7688941	Callee	fprintf		7688730	0					
ANR	7688942	Identifier	fprintf		7688730	0					
ANR	7688943	ArgumentList	xmlout		7688730	1					
ANR	7688944	Argument	xmlout		7688730	0					
ANR	7688945	Identifier	xmlout		7688730	0					
ANR	7688946	Argument	"""              <VerticalRes>\\n"""		7688730	1					
ANR	7688947	PrimaryExpression	"""              <VerticalRes>\\n"""		7688730	0					
ANR	7688948	IfStatement	if ( raw )		7688730	11					
ANR	7688949	Condition	raw	939:12:41395:41397	7688730	0	True				
ANR	7688950	Identifier	raw		7688730	0					
ANR	7688951	CompoundStatement		51:17:2755:2755	7688730	1					
ANR	7688952	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> vertresolution )"	940:12:41414:41516	7688730	0	True				
ANR	7688953	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%08x</AsHex>\\n"" , track -> vertresolution )"		7688730	0					
ANR	7688954	Callee	fprintf		7688730	0					
ANR	7688955	Identifier	fprintf		7688730	0					
ANR	7688956	ArgumentList	xmlout		7688730	1					
ANR	7688957	Argument	xmlout		7688730	0					
ANR	7688958	Identifier	xmlout		7688730	0					
ANR	7688959	Argument	"""                <AsHex>0x%08x</AsHex>\\n"""		7688730	1					
ANR	7688960	PrimaryExpression	"""                <AsHex>0x%08x</AsHex>\\n"""		7688730	0					
ANR	7688961	Argument	track -> vertresolution		7688730	2					
ANR	7688962	PtrMemberAccess	track -> vertresolution		7688730	0					
ANR	7688963	Identifier	track		7688730	0					
ANR	7688964	Identifier	vertresolution		7688730	1					
ANR	7688965	IfStatement	if ( derived )		7688730	12					
ANR	7688966	Condition	derived	943:12:41540:41546	7688730	0	True				
ANR	7688967	Identifier	derived		7688730	0					
ANR	7688968	CompoundStatement		55:21:2904:2904	7688730	1					
ANR	7688969	ExpressionStatement	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> vertresolution / ( double ) 0x00010000 )"	944:12:41563:41723	7688730	0	True				
ANR	7688970	CallExpression	"fprintf ( xmlout , ""                <AsDecimal>%12.6f</AsDecimal>\\n"" , ( double ) track -> vertresolution / ( double ) 0x00010000 )"		7688730	0					
ANR	7688971	Callee	fprintf		7688730	0					
ANR	7688972	Identifier	fprintf		7688730	0					
ANR	7688973	ArgumentList	xmlout		7688730	1					
ANR	7688974	Argument	xmlout		7688730	0					
ANR	7688975	Identifier	xmlout		7688730	0					
ANR	7688976	Argument	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		7688730	1					
ANR	7688977	PrimaryExpression	"""                <AsDecimal>%12.6f</AsDecimal>\\n"""		7688730	0					
ANR	7688978	Argument	( double ) track -> vertresolution / ( double ) 0x00010000		7688730	2					
ANR	7688979	MultiplicativeExpression	( double ) track -> vertresolution / ( double ) 0x00010000		7688730	0		/			
ANR	7688980	CastExpression	( double ) track -> vertresolution		7688730	0					
ANR	7688981	CastTarget	double		7688730	0					
ANR	7688982	PtrMemberAccess	track -> vertresolution		7688730	1					
ANR	7688983	Identifier	track		7688730	0					
ANR	7688984	Identifier	vertresolution		7688730	1					
ANR	7688985	CastExpression	( double ) 0x00010000		7688730	1					
ANR	7688986	CastTarget	double		7688730	0					
ANR	7688987	PrimaryExpression	0x00010000		7688730	1					
ANR	7688988	ExpressionStatement	"fprintf ( xmlout , ""              </VerticalRes>\\n"" )"	948:8:41811:41863	7688730	13	True				
ANR	7688989	CallExpression	"fprintf ( xmlout , ""              </VerticalRes>\\n"" )"		7688730	0					
ANR	7688990	Callee	fprintf		7688730	0					
ANR	7688991	Identifier	fprintf		7688730	0					
ANR	7688992	ArgumentList	xmlout		7688730	1					
ANR	7688993	Argument	xmlout		7688730	0					
ANR	7688994	Identifier	xmlout		7688730	0					
ANR	7688995	Argument	"""              </VerticalRes>\\n"""		7688730	1					
ANR	7688996	PrimaryExpression	"""              </VerticalRes>\\n"""		7688730	0					
ANR	7688997	ExpressionStatement	buf33 [ 0 ] = '\\0'	950:8:41874:41889	7688730	14	True				
ANR	7688998	AssignmentExpression	buf33 [ 0 ] = '\\0'		7688730	0		=			
ANR	7688999	ArrayIndexing	buf33 [ 0 ]		7688730	0					
ANR	7689000	Identifier	buf33		7688730	0					
ANR	7689001	PrimaryExpression	0		7688730	1					
ANR	7689002	PrimaryExpression	'\\0'		7688730	1					
ANR	7689003	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		7688730	15					
ANR	7689004	ForInit	i = 0 ;	951:13:41904:41909	7688730	0	True				
ANR	7689005	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689006	Identifier	i		7688730	0					
ANR	7689007	PrimaryExpression	0		7688730	1					
ANR	7689008	Condition	i < 8	951:20:41911:41915	7688730	1	True				
ANR	7689009	RelationalExpression	i < 8		7688730	0		<			
ANR	7689010	Identifier	i		7688730	0					
ANR	7689011	PrimaryExpression	8		7688730	1					
ANR	7689012	PostIncDecOperationExpression	i ++	951:27:41918:41920	7688730	2	True				
ANR	7689013	Identifier	i		7688730	0					
ANR	7689014	IncDec	++		7688730	1					
ANR	7689015	CompoundStatement		63:32:3278:3278	7688730	3					
ANR	7689016	ExpressionStatement	"uint_to_chars ( ( unsigned int ) track -> compressorname [ i ] , buf )"	952:12:41937:41995	7688730	0	True				
ANR	7689017	CallExpression	"uint_to_chars ( ( unsigned int ) track -> compressorname [ i ] , buf )"		7688730	0					
ANR	7689018	Callee	uint_to_chars		7688730	0					
ANR	7689019	Identifier	uint_to_chars		7688730	0					
ANR	7689020	ArgumentList	( unsigned int ) track -> compressorname [ i ]		7688730	1					
ANR	7689021	Argument	( unsigned int ) track -> compressorname [ i ]		7688730	0					
ANR	7689022	CastExpression	( unsigned int ) track -> compressorname [ i ]		7688730	0					
ANR	7689023	CastTarget	unsigned int		7688730	0					
ANR	7689024	ArrayIndexing	track -> compressorname [ i ]		7688730	1					
ANR	7689025	PtrMemberAccess	track -> compressorname		7688730	0					
ANR	7689026	Identifier	track		7688730	0					
ANR	7689027	Identifier	compressorname		7688730	1					
ANR	7689028	Identifier	i		7688730	1					
ANR	7689029	Argument	buf		7688730	1					
ANR	7689030	Identifier	buf		7688730	0					
ANR	7689031	ExpressionStatement	"strcat ( buf33 , buf )"	953:12:42009:42046	7688730	1	True				
ANR	7689032	CallExpression	"strcat ( buf33 , buf )"		7688730	0					
ANR	7689033	Callee	strcat		7688730	0					
ANR	7689034	Identifier	strcat		7688730	0					
ANR	7689035	ArgumentList	buf33		7688730	1					
ANR	7689036	Argument	buf33		7688730	0					
ANR	7689037	Identifier	buf33		7688730	0					
ANR	7689038	Argument	buf		7688730	1					
ANR	7689039	Identifier	buf		7688730	0					
ANR	7689040	ExpressionStatement	len = ( int ) buf33 [ 0 ]	956:8:42140:42174	7688730	16	True				
ANR	7689041	AssignmentExpression	len = ( int ) buf33 [ 0 ]		7688730	0		=			
ANR	7689042	Identifier	len		7688730	0					
ANR	7689043	CastExpression	( int ) buf33 [ 0 ]		7688730	1					
ANR	7689044	CastTarget	int		7688730	0					
ANR	7689045	ArrayIndexing	buf33 [ 0 ]		7688730	1					
ANR	7689046	Identifier	buf33		7688730	0					
ANR	7689047	PrimaryExpression	0		7688730	1					
ANR	7689048	ExpressionStatement	buf33 [ len + 1 ] = '\\0'	958:8:42262:42283	7688730	17	True				
ANR	7689049	AssignmentExpression	buf33 [ len + 1 ] = '\\0'		7688730	0		=			
ANR	7689050	ArrayIndexing	buf33 [ len + 1 ]		7688730	0					
ANR	7689051	Identifier	buf33		7688730	0					
ANR	7689052	AdditiveExpression	len + 1		7688730	1		+			
ANR	7689053	Identifier	len		7688730	0					
ANR	7689054	PrimaryExpression	1		7688730	1					
ANR	7689055	PrimaryExpression	'\\0'		7688730	1					
ANR	7689056	ExpressionStatement	"fprintf ( xmlout , ""              <CompressorName>%s</CompressorName>\\n"" , buf33 + 1 )"	959:8:42311:42411	7688730	18	True				
ANR	7689057	CallExpression	"fprintf ( xmlout , ""              <CompressorName>%s</CompressorName>\\n"" , buf33 + 1 )"		7688730	0					
ANR	7689058	Callee	fprintf		7688730	0					
ANR	7689059	Identifier	fprintf		7688730	0					
ANR	7689060	ArgumentList	xmlout		7688730	1					
ANR	7689061	Argument	xmlout		7688730	0					
ANR	7689062	Identifier	xmlout		7688730	0					
ANR	7689063	Argument	"""              <CompressorName>%s</CompressorName>\\n"""		7688730	1					
ANR	7689064	PrimaryExpression	"""              <CompressorName>%s</CompressorName>\\n"""		7688730	0					
ANR	7689065	Argument	buf33 + 1		7688730	2					
ANR	7689066	AdditiveExpression	buf33 + 1		7688730	0		+			
ANR	7689067	Identifier	buf33		7688730	0					
ANR	7689068	PrimaryExpression	1		7688730	1					
ANR	7689069	IfStatement	if ( notes )		7688730	19					
ANR	7689070	Condition	notes	961:12:42455:42459	7688730	0	True				
ANR	7689071	Identifier	notes		7688730	0					
ANR	7689072	CompoundStatement		73:19:3817:3817	7688730	1					
ANR	7689073	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"" )"	962:12:42476:42614	7688730	0	True				
ANR	7689074	CallExpression	"fprintf ( xmlout , ""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"" )"		7688730	0					
ANR	7689075	Callee	fprintf		7688730	0					
ANR	7689076	Identifier	fprintf		7688730	0					
ANR	7689077	ArgumentList	xmlout		7688730	1					
ANR	7689078	Argument	xmlout		7688730	0					
ANR	7689079	Identifier	xmlout		7688730	0					
ANR	7689080	Argument	"""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"""		7688730	1					
ANR	7689081	PrimaryExpression	"""              <!-- Compressor name for debugging.  Standard restricts max length to 31 bytes. -->\\n"""		7688730	0					
ANR	7689082	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"" )"	964:12:42628:42728	7688730	1	True				
ANR	7689083	CallExpression	"fprintf ( xmlout , ""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"" )"		7688730	0					
ANR	7689084	Callee	fprintf		7688730	0					
ANR	7689085	Identifier	fprintf		7688730	0					
ANR	7689086	ArgumentList	xmlout		7688730	1					
ANR	7689087	Argument	xmlout		7688730	0					
ANR	7689088	Identifier	xmlout		7688730	0					
ANR	7689089	Argument	"""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"""		7688730	1					
ANR	7689090	PrimaryExpression	"""              <!-- Usually blank or \\""Motion JPEG2000\\"" -->\\n"""		7688730	0					
ANR	7689091	ExpressionStatement	"fprintf ( xmlout , ""              <Depth>0x%02x</Depth>\\n"" , track -> depth )"	967:8:42748:42821	7688730	20	True				
ANR	7689092	CallExpression	"fprintf ( xmlout , ""              <Depth>0x%02x</Depth>\\n"" , track -> depth )"		7688730	0					
ANR	7689093	Callee	fprintf		7688730	0					
ANR	7689094	Identifier	fprintf		7688730	0					
ANR	7689095	ArgumentList	xmlout		7688730	1					
ANR	7689096	Argument	xmlout		7688730	0					
ANR	7689097	Identifier	xmlout		7688730	0					
ANR	7689098	Argument	"""              <Depth>0x%02x</Depth>\\n"""		7688730	1					
ANR	7689099	PrimaryExpression	"""              <Depth>0x%02x</Depth>\\n"""		7688730	0					
ANR	7689100	Argument	track -> depth		7688730	2					
ANR	7689101	PtrMemberAccess	track -> depth		7688730	0					
ANR	7689102	Identifier	track		7688730	0					
ANR	7689103	Identifier	depth		7688730	1					
ANR	7689104	IfStatement	if ( notes )		7688730	21					
ANR	7689105	Condition	notes	968:12:42835:42839	7688730	0	True				
ANR	7689106	Identifier	notes		7688730	0					
ANR	7689107	CompoundStatement		80:19:4197:4197	7688730	1					
ANR	7689108	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Depth is: -->\\n"" )"	969:12:42856:42910	7688730	0	True				
ANR	7689109	CallExpression	"fprintf ( xmlout , ""              <!-- Depth is: -->\\n"" )"		7688730	0					
ANR	7689110	Callee	fprintf		7688730	0					
ANR	7689111	Identifier	fprintf		7688730	0					
ANR	7689112	ArgumentList	xmlout		7688730	1					
ANR	7689113	Argument	xmlout		7688730	0					
ANR	7689114	Identifier	xmlout		7688730	0					
ANR	7689115	Argument	"""              <!-- Depth is: -->\\n"""		7688730	1					
ANR	7689116	PrimaryExpression	"""              <!-- Depth is: -->\\n"""		7688730	0					
ANR	7689117	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"" )"	970:12:42924:43039	7688730	1	True				
ANR	7689118	CallExpression	"fprintf ( xmlout , ""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"" )"		7688730	0					
ANR	7689119	Callee	fprintf		7688730	0					
ANR	7689120	Identifier	fprintf		7688730	0					
ANR	7689121	ArgumentList	xmlout		7688730	1					
ANR	7689122	Argument	xmlout		7688730	0					
ANR	7689123	Identifier	xmlout		7688730	0					
ANR	7689124	Argument	"""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"""		7688730	1					
ANR	7689125	PrimaryExpression	"""              <!--   0x20: alpha channels present (color or grayscale) -->\\n"""		7688730	0					
ANR	7689126	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x28: grayscale without alpha -->\\n"" )"	972:12:43053:43129	7688730	2	True				
ANR	7689127	CallExpression	"fprintf ( xmlout , ""              <!--   0x28: grayscale without alpha -->\\n"" )"		7688730	0					
ANR	7689128	Callee	fprintf		7688730	0					
ANR	7689129	Identifier	fprintf		7688730	0					
ANR	7689130	ArgumentList	xmlout		7688730	1					
ANR	7689131	Argument	xmlout		7688730	0					
ANR	7689132	Identifier	xmlout		7688730	0					
ANR	7689133	Argument	"""              <!--   0x28: grayscale without alpha -->\\n"""		7688730	1					
ANR	7689134	PrimaryExpression	"""              <!--   0x28: grayscale without alpha -->\\n"""		7688730	0					
ANR	7689135	ExpressionStatement	"fprintf ( xmlout , ""              <!--   0x18: color without alpha -->\\n"" )"	973:12:43143:43215	7688730	3	True				
ANR	7689136	CallExpression	"fprintf ( xmlout , ""              <!--   0x18: color without alpha -->\\n"" )"		7688730	0					
ANR	7689137	Callee	fprintf		7688730	0					
ANR	7689138	Identifier	fprintf		7688730	0					
ANR	7689139	ArgumentList	xmlout		7688730	1					
ANR	7689140	Argument	xmlout		7688730	0					
ANR	7689141	Identifier	xmlout		7688730	0					
ANR	7689142	Argument	"""              <!--   0x18: color without alpha -->\\n"""		7688730	1					
ANR	7689143	PrimaryExpression	"""              <!--   0x18: color without alpha -->\\n"""		7688730	0					
ANR	7689144	ExpressionStatement	"xml_out_frame_jp2h ( xmlout , & ( track -> jp2_struct ) )"	976:8:43236:43284	7688730	22	True				
ANR	7689145	CallExpression	"xml_out_frame_jp2h ( xmlout , & ( track -> jp2_struct ) )"		7688730	0					
ANR	7689146	Callee	xml_out_frame_jp2h		7688730	0					
ANR	7689147	Identifier	xml_out_frame_jp2h		7688730	0					
ANR	7689148	ArgumentList	xmlout		7688730	1					
ANR	7689149	Argument	xmlout		7688730	0					
ANR	7689150	Identifier	xmlout		7688730	0					
ANR	7689151	Argument	& ( track -> jp2_struct )		7688730	1					
ANR	7689152	UnaryOperationExpression	& ( track -> jp2_struct )		7688730	0					
ANR	7689153	UnaryOperator	&		7688730	0					
ANR	7689154	PtrMemberAccess	track -> jp2_struct		7688730	1					
ANR	7689155	Identifier	track		7688730	0					
ANR	7689156	Identifier	jp2_struct		7688730	1					
ANR	7689157	ExpressionStatement	"fprintf ( xmlout , ""              <FieldCoding BoxType=\\""fiel\\"">\\n"" )"	979:8:43359:43427	7688730	23	True				
ANR	7689158	CallExpression	"fprintf ( xmlout , ""              <FieldCoding BoxType=\\""fiel\\"">\\n"" )"		7688730	0					
ANR	7689159	Callee	fprintf		7688730	0					
ANR	7689160	Identifier	fprintf		7688730	0					
ANR	7689161	ArgumentList	xmlout		7688730	1					
ANR	7689162	Argument	xmlout		7688730	0					
ANR	7689163	Identifier	xmlout		7688730	0					
ANR	7689164	Argument	"""              <FieldCoding BoxType=\\""fiel\\"">\\n"""		7688730	1					
ANR	7689165	PrimaryExpression	"""              <FieldCoding BoxType=\\""fiel\\"">\\n"""		7688730	0					
ANR	7689166	ExpressionStatement	"fprintf ( xmlout , ""                <FieldCount>%d</FieldCount>\\n"" , ( unsigned int ) track -> fieldcount )"	980:8:43437:43553	7688730	24	True				
ANR	7689167	CallExpression	"fprintf ( xmlout , ""                <FieldCount>%d</FieldCount>\\n"" , ( unsigned int ) track -> fieldcount )"		7688730	0					
ANR	7689168	Callee	fprintf		7688730	0					
ANR	7689169	Identifier	fprintf		7688730	0					
ANR	7689170	ArgumentList	xmlout		7688730	1					
ANR	7689171	Argument	xmlout		7688730	0					
ANR	7689172	Identifier	xmlout		7688730	0					
ANR	7689173	Argument	"""                <FieldCount>%d</FieldCount>\\n"""		7688730	1					
ANR	7689174	PrimaryExpression	"""                <FieldCount>%d</FieldCount>\\n"""		7688730	0					
ANR	7689175	Argument	( unsigned int ) track -> fieldcount		7688730	2					
ANR	7689176	CastExpression	( unsigned int ) track -> fieldcount		7688730	0					
ANR	7689177	CastTarget	unsigned int		7688730	0					
ANR	7689178	PtrMemberAccess	track -> fieldcount		7688730	1					
ANR	7689179	Identifier	track		7688730	0					
ANR	7689180	Identifier	fieldcount		7688730	1					
ANR	7689181	IfStatement	if ( notes )		7688730	25					
ANR	7689182	Condition	notes	982:12:43594:43598	7688730	0	True				
ANR	7689183	Identifier	notes		7688730	0					
ANR	7689184	CompoundStatement		94:19:4956:4956	7688730	1					
ANR	7689185	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Must be either 1 or 2 -->\\n"" )"	983:12:43615:43683	7688730	0	True				
ANR	7689186	CallExpression	"fprintf ( xmlout , ""                <!-- Must be either 1 or 2 -->\\n"" )"		7688730	0					
ANR	7689187	Callee	fprintf		7688730	0					
ANR	7689188	Identifier	fprintf		7688730	0					
ANR	7689189	ArgumentList	xmlout		7688730	1					
ANR	7689190	Argument	xmlout		7688730	0					
ANR	7689191	Identifier	xmlout		7688730	0					
ANR	7689192	Argument	"""                <!-- Must be either 1 or 2 -->\\n"""		7688730	1					
ANR	7689193	PrimaryExpression	"""                <!-- Must be either 1 or 2 -->\\n"""		7688730	0					
ANR	7689194	ExpressionStatement	"fprintf ( xmlout , ""                <FieldOrder>%d</FieldOrder>\\n"" , ( unsigned int ) track -> fieldorder )"	985:8:43703:43819	7688730	26	True				
ANR	7689195	CallExpression	"fprintf ( xmlout , ""                <FieldOrder>%d</FieldOrder>\\n"" , ( unsigned int ) track -> fieldorder )"		7688730	0					
ANR	7689196	Callee	fprintf		7688730	0					
ANR	7689197	Identifier	fprintf		7688730	0					
ANR	7689198	ArgumentList	xmlout		7688730	1					
ANR	7689199	Argument	xmlout		7688730	0					
ANR	7689200	Identifier	xmlout		7688730	0					
ANR	7689201	Argument	"""                <FieldOrder>%d</FieldOrder>\\n"""		7688730	1					
ANR	7689202	PrimaryExpression	"""                <FieldOrder>%d</FieldOrder>\\n"""		7688730	0					
ANR	7689203	Argument	( unsigned int ) track -> fieldorder		7688730	2					
ANR	7689204	CastExpression	( unsigned int ) track -> fieldorder		7688730	0					
ANR	7689205	CastTarget	unsigned int		7688730	0					
ANR	7689206	PtrMemberAccess	track -> fieldorder		7688730	1					
ANR	7689207	Identifier	track		7688730	0					
ANR	7689208	Identifier	fieldorder		7688730	1					
ANR	7689209	IfStatement	if ( notes )		7688730	27					
ANR	7689210	Condition	notes	987:12:43860:43864	7688730	0	True				
ANR	7689211	Identifier	notes		7688730	0					
ANR	7689212	CompoundStatement		99:19:5222:5222	7688730	1					
ANR	7689213	ExpressionStatement	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"	988:12:43881:43983	7688730	0	True				
ANR	7689214	CallExpression	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"		7688730	0					
ANR	7689215	Callee	fprintf		7688730	0					
ANR	7689216	Identifier	fprintf		7688730	0					
ANR	7689217	ArgumentList	xmlout		7688730	1					
ANR	7689218	Argument	xmlout		7688730	0					
ANR	7689219	Identifier	xmlout		7688730	0					
ANR	7689220	Argument	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		7688730	1					
ANR	7689221	PrimaryExpression	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		7688730	0					
ANR	7689222	ExpressionStatement	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"	990:12:43997:44069	7688730	1	True				
ANR	7689223	CallExpression	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"		7688730	0					
ANR	7689224	Callee	fprintf		7688730	0					
ANR	7689225	Identifier	fprintf		7688730	0					
ANR	7689226	ArgumentList	xmlout		7688730	1					
ANR	7689227	Argument	xmlout		7688730	0					
ANR	7689228	Identifier	xmlout		7688730	0					
ANR	7689229	Argument	"""                <!--   0: Field coding unknown -->\\n"""		7688730	1					
ANR	7689230	PrimaryExpression	"""                <!--   0: Field coding unknown -->\\n"""		7688730	0					
ANR	7689231	ExpressionStatement	"fprintf ( xmlout , ""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"" )"	991:12:44083:44233	7688730	2	True				
ANR	7689232	CallExpression	"fprintf ( xmlout , ""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"" )"		7688730	0					
ANR	7689233	Callee	fprintf		7688730	0					
ANR	7689234	Identifier	fprintf		7688730	0					
ANR	7689235	ArgumentList	xmlout		7688730	1					
ANR	7689236	Argument	xmlout		7688730	0					
ANR	7689237	Identifier	xmlout		7688730	0					
ANR	7689238	Argument	"""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"""		7688730	1					
ANR	7689239	PrimaryExpression	"""                <!--   1: Field with topmost line is stored first in sample; fields are in temporal order -->\\n"""		7688730	0					
ANR	7689240	ExpressionStatement	"fprintf ( xmlout , ""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"" )"	993:12:44247:44398	7688730	3	True				
ANR	7689241	CallExpression	"fprintf ( xmlout , ""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"" )"		7688730	0					
ANR	7689242	Callee	fprintf		7688730	0					
ANR	7689243	Identifier	fprintf		7688730	0					
ANR	7689244	ArgumentList	xmlout		7688730	1					
ANR	7689245	Argument	xmlout		7688730	0					
ANR	7689246	Identifier	xmlout		7688730	0					
ANR	7689247	Argument	"""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"""		7688730	1					
ANR	7689248	PrimaryExpression	"""                <!--   6: Field with topmost line is stored second in sample; fields are in temporal order -->\\n"""		7688730	0					
ANR	7689249	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"	995:12:44412:44545	7688730	4	True				
ANR	7689250	CallExpression	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"		7688730	0					
ANR	7689251	Callee	fprintf		7688730	0					
ANR	7689252	Identifier	fprintf		7688730	0					
ANR	7689253	ArgumentList	xmlout		7688730	1					
ANR	7689254	Argument	xmlout		7688730	0					
ANR	7689255	Identifier	xmlout		7688730	0					
ANR	7689256	Argument	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		7688730	1					
ANR	7689257	PrimaryExpression	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		7688730	0					
ANR	7689258	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"	997:12:44559:44696	7688730	5	True				
ANR	7689259	CallExpression	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"		7688730	0					
ANR	7689260	Callee	fprintf		7688730	0					
ANR	7689261	Identifier	fprintf		7688730	0					
ANR	7689262	ArgumentList	xmlout		7688730	1					
ANR	7689263	Argument	xmlout		7688730	0					
ANR	7689264	Identifier	xmlout		7688730	0					
ANR	7689265	Argument	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		7688730	1					
ANR	7689266	PrimaryExpression	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		7688730	0					
ANR	7689267	ExpressionStatement	"fprintf ( xmlout , ""              </FieldCoding>\\n"" )"	1000:8:44716:44768	7688730	28	True				
ANR	7689268	CallExpression	"fprintf ( xmlout , ""              </FieldCoding>\\n"" )"		7688730	0					
ANR	7689269	Callee	fprintf		7688730	0					
ANR	7689270	Identifier	fprintf		7688730	0					
ANR	7689271	ArgumentList	xmlout		7688730	1					
ANR	7689272	Argument	xmlout		7688730	0					
ANR	7689273	Identifier	xmlout		7688730	0					
ANR	7689274	Argument	"""              </FieldCoding>\\n"""		7688730	1					
ANR	7689275	PrimaryExpression	"""              </FieldCoding>\\n"""		7688730	0					
ANR	7689276	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"" , track -> num_br )"	1002:8:44779:44889	7688730	29	True				
ANR	7689277	CallExpression	"fprintf ( xmlout , ""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"" , track -> num_br )"		7688730	0					
ANR	7689278	Callee	fprintf		7688730	0					
ANR	7689279	Identifier	fprintf		7688730	0					
ANR	7689280	ArgumentList	xmlout		7688730	1					
ANR	7689281	Argument	xmlout		7688730	0					
ANR	7689282	Identifier	xmlout		7688730	0					
ANR	7689283	Argument	"""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"""		7688730	1					
ANR	7689284	PrimaryExpression	"""              <MJP2_Profile BoxType=\\""jp2p\\"" Count=\\""%d\\"">\\n"""		7688730	0					
ANR	7689285	Argument	track -> num_br		7688730	2					
ANR	7689286	PtrMemberAccess	track -> num_br		7688730	0					
ANR	7689287	Identifier	track		7688730	0					
ANR	7689288	Identifier	num_br		7688730	1					
ANR	7689289	ForStatement	for ( i = 0 ; i < track -> num_br ; i ++ )		7688730	30					
ANR	7689290	ForInit	i = 0 ;	1004:13:44904:44909	7688730	0	True				
ANR	7689291	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689292	Identifier	i		7688730	0					
ANR	7689293	PrimaryExpression	0		7688730	1					
ANR	7689294	Condition	i < track -> num_br	1004:20:44911:44927	7688730	1	True				
ANR	7689295	RelationalExpression	i < track -> num_br		7688730	0		<			
ANR	7689296	Identifier	i		7688730	0					
ANR	7689297	PtrMemberAccess	track -> num_br		7688730	1					
ANR	7689298	Identifier	track		7688730	0					
ANR	7689299	Identifier	num_br		7688730	1					
ANR	7689300	PostIncDecOperationExpression	i ++	1005:16:44946:44948	7688730	2	True				
ANR	7689301	Identifier	i		7688730	0					
ANR	7689302	IncDec	++		7688730	1					
ANR	7689303	CompoundStatement		117:21:6306:6306	7688730	3					
ANR	7689304	ExpressionStatement	"uint_to_chars ( track -> br [ i ] , buf )"	1006:12:45030:45062	7688730	0	True				
ANR	7689305	CallExpression	"uint_to_chars ( track -> br [ i ] , buf )"		7688730	0					
ANR	7689306	Callee	uint_to_chars		7688730	0					
ANR	7689307	Identifier	uint_to_chars		7688730	0					
ANR	7689308	ArgumentList	track -> br [ i ]		7688730	1					
ANR	7689309	Argument	track -> br [ i ]		7688730	0					
ANR	7689310	ArrayIndexing	track -> br [ i ]		7688730	0					
ANR	7689311	PtrMemberAccess	track -> br		7688730	0					
ANR	7689312	Identifier	track		7688730	0					
ANR	7689313	Identifier	br		7688730	1					
ANR	7689314	Identifier	i		7688730	1					
ANR	7689315	Argument	buf		7688730	1					
ANR	7689316	Identifier	buf		7688730	0					
ANR	7689317	ExpressionStatement	"fprintf ( xmlout , ""                <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"	1007:12:45076:45176	7688730	1	True				
ANR	7689318	CallExpression	"fprintf ( xmlout , ""                <CompatibleBrand>%s</CompatibleBrand>\\n"" , buf )"		7688730	0					
ANR	7689319	Callee	fprintf		7688730	0					
ANR	7689320	Identifier	fprintf		7688730	0					
ANR	7689321	ArgumentList	xmlout		7688730	1					
ANR	7689322	Argument	xmlout		7688730	0					
ANR	7689323	Identifier	xmlout		7688730	0					
ANR	7689324	Argument	"""                <CompatibleBrand>%s</CompatibleBrand>\\n"""		7688730	1					
ANR	7689325	PrimaryExpression	"""                <CompatibleBrand>%s</CompatibleBrand>\\n"""		7688730	0					
ANR	7689326	Argument	buf		7688730	2					
ANR	7689327	Identifier	buf		7688730	0					
ANR	7689328	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_Profile>\\n"" )"	1010:8:45227:45280	7688730	31	True				
ANR	7689329	CallExpression	"fprintf ( xmlout , ""              </MJP2_Profile>\\n"" )"		7688730	0					
ANR	7689330	Callee	fprintf		7688730	0					
ANR	7689331	Identifier	fprintf		7688730	0					
ANR	7689332	ArgumentList	xmlout		7688730	1					
ANR	7689333	Argument	xmlout		7688730	0					
ANR	7689334	Identifier	xmlout		7688730	0					
ANR	7689335	Argument	"""              </MJP2_Profile>\\n"""		7688730	1					
ANR	7689336	PrimaryExpression	"""              </MJP2_Profile>\\n"""		7688730	0					
ANR	7689337	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"" , track -> num_jp2x )"	1012:8:45291:45402	7688730	32	True				
ANR	7689338	CallExpression	"fprintf ( xmlout , ""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"" , track -> num_jp2x )"		7688730	0					
ANR	7689339	Callee	fprintf		7688730	0					
ANR	7689340	Identifier	fprintf		7688730	0					
ANR	7689341	ArgumentList	xmlout		7688730	1					
ANR	7689342	Argument	xmlout		7688730	0					
ANR	7689343	Identifier	xmlout		7688730	0					
ANR	7689344	Argument	"""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"""		7688730	1					
ANR	7689345	PrimaryExpression	"""              <MJP2_Prefix BoxType=\\""jp2x\\"" Count=\\""%d\\"">\\n"""		7688730	0					
ANR	7689346	Argument	track -> num_jp2x		7688730	2					
ANR	7689347	PtrMemberAccess	track -> num_jp2x		7688730	0					
ANR	7689348	Identifier	track		7688730	0					
ANR	7689349	Identifier	num_jp2x		7688730	1					
ANR	7689350	ForStatement	for ( i = 0 ; i < track -> num_jp2x ; i ++ )		7688730	33					
ANR	7689351	ForInit	i = 0 ;	1014:13:45417:45422	7688730	0	True				
ANR	7689352	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689353	Identifier	i		7688730	0					
ANR	7689354	PrimaryExpression	0		7688730	1					
ANR	7689355	Condition	i < track -> num_jp2x	1014:20:45424:45442	7688730	1	True				
ANR	7689356	RelationalExpression	i < track -> num_jp2x		7688730	0		<			
ANR	7689357	Identifier	i		7688730	0					
ANR	7689358	PtrMemberAccess	track -> num_jp2x		7688730	1					
ANR	7689359	Identifier	track		7688730	0					
ANR	7689360	Identifier	num_jp2x		7688730	1					
ANR	7689361	PostIncDecOperationExpression	i ++	1014:41:45445:45447	7688730	2	True				
ANR	7689362	Identifier	i		7688730	0					
ANR	7689363	IncDec	++		7688730	1					
ANR	7689364	CompoundStatement		126:46:6805:6805	7688730	3					
ANR	7689365	ExpressionStatement	"fprintf ( xmlout , ""                <Data>0x%02x</Data>\\n"" , track -> jp2xdata [ i ] )"	1016:12:45527:45624	7688730	0	True				
ANR	7689366	CallExpression	"fprintf ( xmlout , ""                <Data>0x%02x</Data>\\n"" , track -> jp2xdata [ i ] )"		7688730	0					
ANR	7689367	Callee	fprintf		7688730	0					
ANR	7689368	Identifier	fprintf		7688730	0					
ANR	7689369	ArgumentList	xmlout		7688730	1					
ANR	7689370	Argument	xmlout		7688730	0					
ANR	7689371	Identifier	xmlout		7688730	0					
ANR	7689372	Argument	"""                <Data>0x%02x</Data>\\n"""		7688730	1					
ANR	7689373	PrimaryExpression	"""                <Data>0x%02x</Data>\\n"""		7688730	0					
ANR	7689374	Argument	track -> jp2xdata [ i ]		7688730	2					
ANR	7689375	ArrayIndexing	track -> jp2xdata [ i ]		7688730	0					
ANR	7689376	PtrMemberAccess	track -> jp2xdata		7688730	0					
ANR	7689377	Identifier	track		7688730	0					
ANR	7689378	Identifier	jp2xdata		7688730	1					
ANR	7689379	Identifier	i		7688730	1					
ANR	7689380	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_Prefix>\\n"" )"	1019:8:45679:45731	7688730	34	True				
ANR	7689381	CallExpression	"fprintf ( xmlout , ""              </MJP2_Prefix>\\n"" )"		7688730	0					
ANR	7689382	Callee	fprintf		7688730	0					
ANR	7689383	Identifier	fprintf		7688730	0					
ANR	7689384	ArgumentList	xmlout		7688730	1					
ANR	7689385	Argument	xmlout		7688730	0					
ANR	7689386	Identifier	xmlout		7688730	0					
ANR	7689387	Argument	"""              </MJP2_Prefix>\\n"""		7688730	1					
ANR	7689388	PrimaryExpression	"""              </MJP2_Prefix>\\n"""		7688730	0					
ANR	7689389	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"" )"	1021:8:45742:45828	7688730	35	True				
ANR	7689390	CallExpression	"fprintf ( xmlout , ""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"" )"		7688730	0					
ANR	7689391	Callee	fprintf		7688730	0					
ANR	7689392	Identifier	fprintf		7688730	0					
ANR	7689393	ArgumentList	xmlout		7688730	1					
ANR	7689394	Argument	xmlout		7688730	0					
ANR	7689395	Identifier	xmlout		7688730	0					
ANR	7689396	Argument	"""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"""		7688730	1					
ANR	7689397	PrimaryExpression	"""              <MJP2_SubSampling BoxType=\\""jsub\\"">\\n"""		7688730	0					
ANR	7689398	IfStatement	if ( notes )		7688730	36					
ANR	7689399	Condition	notes	1023:12:45876:45880	7688730	0	True				
ANR	7689400	Identifier	notes		7688730	0					
ANR	7689401	CompoundStatement		135:19:7238:7238	7688730	1					
ANR	7689402	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"" )"	1024:12:45897:45999	7688730	0	True				
ANR	7689403	CallExpression	"fprintf ( xmlout , ""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"" )"		7688730	0					
ANR	7689404	Callee	fprintf		7688730	0					
ANR	7689405	Identifier	fprintf		7688730	0					
ANR	7689406	ArgumentList	xmlout		7688730	1					
ANR	7689407	Argument	xmlout		7688730	0					
ANR	7689408	Identifier	xmlout		7688730	0					
ANR	7689409	Argument	"""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"""		7688730	1					
ANR	7689410	PrimaryExpression	"""              <!-- Typical subsample value is 2 for 4:2:0 -->\\n"""		7688730	0					
ANR	7689411	ExpressionStatement	"fprintf ( xmlout , ""                <HorizontalSub>%d</HorizontalSub>\\n"" , track -> hsub )"	1027:8:46019:46121	7688730	37	True				
ANR	7689412	CallExpression	"fprintf ( xmlout , ""                <HorizontalSub>%d</HorizontalSub>\\n"" , track -> hsub )"		7688730	0					
ANR	7689413	Callee	fprintf		7688730	0					
ANR	7689414	Identifier	fprintf		7688730	0					
ANR	7689415	ArgumentList	xmlout		7688730	1					
ANR	7689416	Argument	xmlout		7688730	0					
ANR	7689417	Identifier	xmlout		7688730	0					
ANR	7689418	Argument	"""                <HorizontalSub>%d</HorizontalSub>\\n"""		7688730	1					
ANR	7689419	PrimaryExpression	"""                <HorizontalSub>%d</HorizontalSub>\\n"""		7688730	0					
ANR	7689420	Argument	track -> hsub		7688730	2					
ANR	7689421	PtrMemberAccess	track -> hsub		7688730	0					
ANR	7689422	Identifier	track		7688730	0					
ANR	7689423	Identifier	hsub		7688730	1					
ANR	7689424	ExpressionStatement	"fprintf ( xmlout , ""                <VerticalSub>%d</VerticalSub>\\n"" , track -> vsub )"	1029:8:46131:46229	7688730	38	True				
ANR	7689425	CallExpression	"fprintf ( xmlout , ""                <VerticalSub>%d</VerticalSub>\\n"" , track -> vsub )"		7688730	0					
ANR	7689426	Callee	fprintf		7688730	0					
ANR	7689427	Identifier	fprintf		7688730	0					
ANR	7689428	ArgumentList	xmlout		7688730	1					
ANR	7689429	Argument	xmlout		7688730	0					
ANR	7689430	Identifier	xmlout		7688730	0					
ANR	7689431	Argument	"""                <VerticalSub>%d</VerticalSub>\\n"""		7688730	1					
ANR	7689432	PrimaryExpression	"""                <VerticalSub>%d</VerticalSub>\\n"""		7688730	0					
ANR	7689433	Argument	track -> vsub		7688730	2					
ANR	7689434	PtrMemberAccess	track -> vsub		7688730	0					
ANR	7689435	Identifier	track		7688730	0					
ANR	7689436	Identifier	vsub		7688730	1					
ANR	7689437	ExpressionStatement	"fprintf ( xmlout , ""                <HorizontalOffset>%d</HorizontalOffset>\\n"" , track -> hoff )"	1031:8:46239:46347	7688730	39	True				
ANR	7689438	CallExpression	"fprintf ( xmlout , ""                <HorizontalOffset>%d</HorizontalOffset>\\n"" , track -> hoff )"		7688730	0					
ANR	7689439	Callee	fprintf		7688730	0					
ANR	7689440	Identifier	fprintf		7688730	0					
ANR	7689441	ArgumentList	xmlout		7688730	1					
ANR	7689442	Argument	xmlout		7688730	0					
ANR	7689443	Identifier	xmlout		7688730	0					
ANR	7689444	Argument	"""                <HorizontalOffset>%d</HorizontalOffset>\\n"""		7688730	1					
ANR	7689445	PrimaryExpression	"""                <HorizontalOffset>%d</HorizontalOffset>\\n"""		7688730	0					
ANR	7689446	Argument	track -> hoff		7688730	2					
ANR	7689447	PtrMemberAccess	track -> hoff		7688730	0					
ANR	7689448	Identifier	track		7688730	0					
ANR	7689449	Identifier	hoff		7688730	1					
ANR	7689450	ExpressionStatement	"fprintf ( xmlout , ""                <VerticalOffset>%d</VerticalOffset>\\n"" , track -> voff )"	1033:8:46357:46461	7688730	40	True				
ANR	7689451	CallExpression	"fprintf ( xmlout , ""                <VerticalOffset>%d</VerticalOffset>\\n"" , track -> voff )"		7688730	0					
ANR	7689452	Callee	fprintf		7688730	0					
ANR	7689453	Identifier	fprintf		7688730	0					
ANR	7689454	ArgumentList	xmlout		7688730	1					
ANR	7689455	Argument	xmlout		7688730	0					
ANR	7689456	Identifier	xmlout		7688730	0					
ANR	7689457	Argument	"""                <VerticalOffset>%d</VerticalOffset>\\n"""		7688730	1					
ANR	7689458	PrimaryExpression	"""                <VerticalOffset>%d</VerticalOffset>\\n"""		7688730	0					
ANR	7689459	Argument	track -> voff		7688730	2					
ANR	7689460	PtrMemberAccess	track -> voff		7688730	0					
ANR	7689461	Identifier	track		7688730	0					
ANR	7689462	Identifier	voff		7688730	1					
ANR	7689463	IfStatement	if ( notes )		7688730	41					
ANR	7689464	Condition	notes	1035:12:46475:46479	7688730	0	True				
ANR	7689465	Identifier	notes		7688730	0					
ANR	7689466	CompoundStatement		147:19:7837:7837	7688730	1					
ANR	7689467	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"" )"	1036:12:46496:46614	7688730	0	True				
ANR	7689468	CallExpression	"fprintf ( xmlout , ""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"" )"		7688730	0					
ANR	7689469	Callee	fprintf		7688730	0					
ANR	7689470	Identifier	fprintf		7688730	0					
ANR	7689471	ArgumentList	xmlout		7688730	1					
ANR	7689472	Argument	xmlout		7688730	0					
ANR	7689473	Identifier	xmlout		7688730	0					
ANR	7689474	Argument	"""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"""		7688730	1					
ANR	7689475	PrimaryExpression	"""                <!-- Typical {horizontal, vertical} chroma offset values: -->\\n"""		7688730	0					
ANR	7689476	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"" )"	1038:12:46628:46758	7688730	1	True				
ANR	7689477	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"" )"		7688730	0					
ANR	7689478	Callee	fprintf		7688730	0					
ANR	7689479	Identifier	fprintf		7688730	0					
ANR	7689480	ArgumentList	xmlout		7688730	1					
ANR	7689481	Argument	xmlout		7688730	0					
ANR	7689482	Identifier	xmlout		7688730	0					
ANR	7689483	Argument	"""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"""		7688730	1					
ANR	7689484	PrimaryExpression	"""                <!-- 4:2:2 format (CCIR601, H.262, MPEG2, MPEG4, recom. Exif): {0, 0} -->\\n"""		7688730	0					
ANR	7689485	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"" )"	1040:12:46772:46902	7688730	2	True				
ANR	7689486	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"" )"		7688730	0					
ANR	7689487	Callee	fprintf		7688730	0					
ANR	7689488	Identifier	fprintf		7688730	0					
ANR	7689489	ArgumentList	xmlout		7688730	1					
ANR	7689490	Argument	xmlout		7688730	0					
ANR	7689491	Identifier	xmlout		7688730	0					
ANR	7689492	Argument	"""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"""		7688730	1					
ANR	7689493	PrimaryExpression	"""                <!-- 4:2:2 format (JFIF):                                      {1, 0} -->\\n"""		7688730	0					
ANR	7689494	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"" )"	1042:12:46916:47046	7688730	3	True				
ANR	7689495	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"" )"		7688730	0					
ANR	7689496	Callee	fprintf		7688730	0					
ANR	7689497	Identifier	fprintf		7688730	0					
ANR	7689498	ArgumentList	xmlout		7688730	1					
ANR	7689499	Argument	xmlout		7688730	0					
ANR	7689500	Identifier	xmlout		7688730	0					
ANR	7689501	Argument	"""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"""		7688730	1					
ANR	7689502	PrimaryExpression	"""                <!-- 4:2:0 format (H.262, MPEG2, MPEG4):                       {0, 1} -->\\n"""		7688730	0					
ANR	7689503	ExpressionStatement	"fprintf ( xmlout , ""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"" )"	1044:12:47060:47190	7688730	4	True				
ANR	7689504	CallExpression	"fprintf ( xmlout , ""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"" )"		7688730	0					
ANR	7689505	Callee	fprintf		7688730	0					
ANR	7689506	Identifier	fprintf		7688730	0					
ANR	7689507	ArgumentList	xmlout		7688730	1					
ANR	7689508	Argument	xmlout		7688730	0					
ANR	7689509	Identifier	xmlout		7688730	0					
ANR	7689510	Argument	"""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"""		7688730	1					
ANR	7689511	PrimaryExpression	"""                <!-- 4:2:0 format (MPEG1, H.261, JFIF, recom. Exif):           {1, 1} -->\\n"""		7688730	0					
ANR	7689512	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_SubSampling>\\n"" )"	1047:8:47210:47280	7688730	42	True				
ANR	7689513	CallExpression	"fprintf ( xmlout , ""              </MJP2_SubSampling>\\n"" )"		7688730	0					
ANR	7689514	Callee	fprintf		7688730	0					
ANR	7689515	Identifier	fprintf		7688730	0					
ANR	7689516	ArgumentList	xmlout		7688730	1					
ANR	7689517	Argument	xmlout		7688730	0					
ANR	7689518	Identifier	xmlout		7688730	0					
ANR	7689519	Argument	"""              </MJP2_SubSampling>\\n"""		7688730	1					
ANR	7689520	PrimaryExpression	"""              </MJP2_SubSampling>\\n"""		7688730	0					
ANR	7689521	ExpressionStatement	"fprintf ( xmlout , ""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"" )"	1050:8:47325:47414	7688730	43	True				
ANR	7689522	CallExpression	"fprintf ( xmlout , ""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"" )"		7688730	0					
ANR	7689523	Callee	fprintf		7688730	0					
ANR	7689524	Identifier	fprintf		7688730	0					
ANR	7689525	ArgumentList	xmlout		7688730	1					
ANR	7689526	Argument	xmlout		7688730	0					
ANR	7689527	Identifier	xmlout		7688730	0					
ANR	7689528	Argument	"""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"""		7688730	1					
ANR	7689529	PrimaryExpression	"""              <MJP2_OriginalFormat BoxType=\\""orfo\\"">\\n"""		7688730	0					
ANR	7689530	ExpressionStatement	"fprintf ( xmlout , ""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"" , ( unsigned int ) track -> or_fieldcount )"	1052:8:47447:47595	7688730	44	True				
ANR	7689531	CallExpression	"fprintf ( xmlout , ""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"" , ( unsigned int ) track -> or_fieldcount )"		7688730	0					
ANR	7689532	Callee	fprintf		7688730	0					
ANR	7689533	Identifier	fprintf		7688730	0					
ANR	7689534	ArgumentList	xmlout		7688730	1					
ANR	7689535	Argument	xmlout		7688730	0					
ANR	7689536	Identifier	xmlout		7688730	0					
ANR	7689537	Argument	"""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"""		7688730	1					
ANR	7689538	PrimaryExpression	"""                <OriginalFieldCount>%u</OriginalFieldCount>\\n"""		7688730	0					
ANR	7689539	Argument	( unsigned int ) track -> or_fieldcount		7688730	2					
ANR	7689540	CastExpression	( unsigned int ) track -> or_fieldcount		7688730	0					
ANR	7689541	CastTarget	unsigned int		7688730	0					
ANR	7689542	PtrMemberAccess	track -> or_fieldcount		7688730	1					
ANR	7689543	Identifier	track		7688730	0					
ANR	7689544	Identifier	or_fieldcount		7688730	1					
ANR	7689545	IfStatement	if ( notes )		7688730	45					
ANR	7689546	Condition	notes	1055:12:47636:47640	7688730	0	True				
ANR	7689547	Identifier	notes		7688730	0					
ANR	7689548	CompoundStatement		167:19:8998:8998	7688730	1					
ANR	7689549	ExpressionStatement	"fprintf ( xmlout , ""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"" )"	1056:12:47657:47783	7688730	0	True				
ANR	7689550	CallExpression	"fprintf ( xmlout , ""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"" )"		7688730	0					
ANR	7689551	Callee	fprintf		7688730	0					
ANR	7689552	Identifier	fprintf		7688730	0					
ANR	7689553	ArgumentList	xmlout		7688730	1					
ANR	7689554	Argument	xmlout		7688730	0					
ANR	7689555	Identifier	xmlout		7688730	0					
ANR	7689556	Argument	"""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"""		7688730	1					
ANR	7689557	PrimaryExpression	"""                <!-- In original material before encoding.  Must be either 1 or 2 -->\\n"""		7688730	0					
ANR	7689558	ExpressionStatement	"fprintf ( xmlout , ""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"" , ( unsigned int ) track -> or_fieldorder )"	1059:8:47803:47951	7688730	46	True				
ANR	7689559	CallExpression	"fprintf ( xmlout , ""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"" , ( unsigned int ) track -> or_fieldorder )"		7688730	0					
ANR	7689560	Callee	fprintf		7688730	0					
ANR	7689561	Identifier	fprintf		7688730	0					
ANR	7689562	ArgumentList	xmlout		7688730	1					
ANR	7689563	Argument	xmlout		7688730	0					
ANR	7689564	Identifier	xmlout		7688730	0					
ANR	7689565	Argument	"""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"""		7688730	1					
ANR	7689566	PrimaryExpression	"""                <OriginalFieldOrder>%u</OriginalFieldOrder>\\n"""		7688730	0					
ANR	7689567	Argument	( unsigned int ) track -> or_fieldorder		7688730	2					
ANR	7689568	CastExpression	( unsigned int ) track -> or_fieldorder		7688730	0					
ANR	7689569	CastTarget	unsigned int		7688730	0					
ANR	7689570	PtrMemberAccess	track -> or_fieldorder		7688730	1					
ANR	7689571	Identifier	track		7688730	0					
ANR	7689572	Identifier	or_fieldorder		7688730	1					
ANR	7689573	IfStatement	if ( notes )		7688730	47					
ANR	7689574	Condition	notes	1062:12:47992:47996	7688730	0	True				
ANR	7689575	Identifier	notes		7688730	0					
ANR	7689576	CompoundStatement		174:19:9354:9354	7688730	1					
ANR	7689577	ExpressionStatement	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"	1063:12:48013:48115	7688730	0	True				
ANR	7689578	CallExpression	"fprintf ( xmlout , ""                <!-- When FieldCount=2, FieldOrder means: -->\\n"" )"		7688730	0					
ANR	7689579	Callee	fprintf		7688730	0					
ANR	7689580	Identifier	fprintf		7688730	0					
ANR	7689581	ArgumentList	xmlout		7688730	1					
ANR	7689582	Argument	xmlout		7688730	0					
ANR	7689583	Identifier	xmlout		7688730	0					
ANR	7689584	Argument	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		7688730	1					
ANR	7689585	PrimaryExpression	"""                <!-- When FieldCount=2, FieldOrder means: -->\\n"""		7688730	0					
ANR	7689586	ExpressionStatement	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"	1065:12:48129:48201	7688730	1	True				
ANR	7689587	CallExpression	"fprintf ( xmlout , ""                <!--   0: Field coding unknown -->\\n"" )"		7688730	0					
ANR	7689588	Callee	fprintf		7688730	0					
ANR	7689589	Identifier	fprintf		7688730	0					
ANR	7689590	ArgumentList	xmlout		7688730	1					
ANR	7689591	Argument	xmlout		7688730	0					
ANR	7689592	Identifier	xmlout		7688730	0					
ANR	7689593	Argument	"""                <!--   0: Field coding unknown -->\\n"""		7688730	1					
ANR	7689594	PrimaryExpression	"""                <!--   0: Field coding unknown -->\\n"""		7688730	0					
ANR	7689595	ExpressionStatement	"fprintf ( xmlout , ""                <!--   11: Topmost line came from the earlier field; -->\\n"" )"	1066:12:48215:48328	7688730	2	True				
ANR	7689596	CallExpression	"fprintf ( xmlout , ""                <!--   11: Topmost line came from the earlier field; -->\\n"" )"		7688730	0					
ANR	7689597	Callee	fprintf		7688730	0					
ANR	7689598	Identifier	fprintf		7688730	0					
ANR	7689599	ArgumentList	xmlout		7688730	1					
ANR	7689600	Argument	xmlout		7688730	0					
ANR	7689601	Identifier	xmlout		7688730	0					
ANR	7689602	Argument	"""                <!--   11: Topmost line came from the earlier field; -->\\n"""		7688730	1					
ANR	7689603	PrimaryExpression	"""                <!--   11: Topmost line came from the earlier field; -->\\n"""		7688730	0					
ANR	7689604	ExpressionStatement	"fprintf ( xmlout , ""                <!--   16:  Topmost line came form the later field. -->\\n"" )"	1068:12:48342:48454	7688730	3	True				
ANR	7689605	CallExpression	"fprintf ( xmlout , ""                <!--   16:  Topmost line came form the later field. -->\\n"" )"		7688730	0					
ANR	7689606	Callee	fprintf		7688730	0					
ANR	7689607	Identifier	fprintf		7688730	0					
ANR	7689608	ArgumentList	xmlout		7688730	1					
ANR	7689609	Argument	xmlout		7688730	0					
ANR	7689610	Identifier	xmlout		7688730	0					
ANR	7689611	Argument	"""                <!--   16:  Topmost line came form the later field. -->\\n"""		7688730	1					
ANR	7689612	PrimaryExpression	"""                <!--   16:  Topmost line came form the later field. -->\\n"""		7688730	0					
ANR	7689613	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"	1070:12:48468:48601	7688730	4	True				
ANR	7689614	CallExpression	"fprintf ( xmlout , ""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"" )"		7688730	0					
ANR	7689615	Callee	fprintf		7688730	0					
ANR	7689616	Identifier	fprintf		7688730	0					
ANR	7689617	ArgumentList	xmlout		7688730	1					
ANR	7689618	Argument	xmlout		7688730	0					
ANR	7689619	Identifier	xmlout		7688730	0					
ANR	7689620	Argument	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		7688730	1					
ANR	7689621	PrimaryExpression	"""                <!-- Defaults: FieldCount=1, FieldOrder=0 if FieldCoding box not present -->\\n"""		7688730	0					
ANR	7689622	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"	1072:12:48615:48752	7688730	5	True				
ANR	7689623	CallExpression	"fprintf ( xmlout , ""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"" )"		7688730	0					
ANR	7689624	Callee	fprintf		7688730	0					
ANR	7689625	Identifier	fprintf		7688730	0					
ANR	7689626	ArgumentList	xmlout		7688730	1					
ANR	7689627	Argument	xmlout		7688730	0					
ANR	7689628	Identifier	xmlout		7688730	0					
ANR	7689629	Argument	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		7688730	1					
ANR	7689630	PrimaryExpression	"""                <!-- Current implementation doesn't retain whether box was actually present. -->\\n"""		7688730	0					
ANR	7689631	ExpressionStatement	"fprintf ( xmlout , ""              </MJP2_OriginalFormat>\\n"" )"	1075:8:48772:48832	7688730	48	True				
ANR	7689632	CallExpression	"fprintf ( xmlout , ""              </MJP2_OriginalFormat>\\n"" )"		7688730	0					
ANR	7689633	Callee	fprintf		7688730	0					
ANR	7689634	Identifier	fprintf		7688730	0					
ANR	7689635	ArgumentList	xmlout		7688730	1					
ANR	7689636	Argument	xmlout		7688730	0					
ANR	7689637	Identifier	xmlout		7688730	0					
ANR	7689638	Argument	"""              </MJP2_OriginalFormat>\\n"""		7688730	1					
ANR	7689639	PrimaryExpression	"""              </MJP2_OriginalFormat>\\n"""		7688730	0					
ANR	7689640	ExpressionStatement	"fprintf ( xmlout , ""            </VisualSampleEntry>\\n"" )"	1076:8:48842:48898	7688730	49	True				
ANR	7689641	CallExpression	"fprintf ( xmlout , ""            </VisualSampleEntry>\\n"" )"		7688730	0					
ANR	7689642	Callee	fprintf		7688730	0					
ANR	7689643	Identifier	fprintf		7688730	0					
ANR	7689644	ArgumentList	xmlout		7688730	1					
ANR	7689645	Argument	xmlout		7688730	0					
ANR	7689646	Identifier	xmlout		7688730	0					
ANR	7689647	Argument	"""            </VisualSampleEntry>\\n"""		7688730	1					
ANR	7689648	PrimaryExpression	"""            </VisualSampleEntry>\\n"""		7688730	0					
ANR	7689649	BreakStatement	break ;	1077:8:48908:48913	7688730	50	True				
ANR	7689650	Label	case 1 :	1078:4:48919:48925	7688730	51	True				
ANR	7689651	Label	case 2 :	1079:4:48931:48937	7688730	52	True				
ANR	7689652	IfStatement	if ( notes )		7688730	53					
ANR	7689653	Condition	notes	1080:12:48951:48955	7688730	0	True				
ANR	7689654	Identifier	notes		7688730	0					
ANR	7689655	CompoundStatement		192:19:10313:10313	7688730	1					
ANR	7689656	ExpressionStatement	"fprintf ( xmlout , ""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"" )"	1081:12:48972:49097	7688730	0	True				
ANR	7689657	CallExpression	"fprintf ( xmlout , ""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"" )"		7688730	0					
ANR	7689658	Callee	fprintf		7688730	0					
ANR	7689659	Identifier	fprintf		7688730	0					
ANR	7689660	ArgumentList	xmlout		7688730	1					
ANR	7689661	Argument	xmlout		7688730	0					
ANR	7689662	Identifier	xmlout		7688730	0					
ANR	7689663	Argument	"""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"""		7688730	1					
ANR	7689664	PrimaryExpression	"""            <!-- mj2_to_metadata's data structure doesn't record this currently. -->\\n"""		7688730	0					
ANR	7689665	BreakStatement	break ;	1084:8:49117:49122	7688730	54	True				
ANR	7689666	ExpressionStatement	"fprintf ( xmlout , ""            <TimeToSample BoxType=\\""stts\\"">\\n"" )"	1086:4:49134:49203	7688730	6	True				
ANR	7689667	CallExpression	"fprintf ( xmlout , ""            <TimeToSample BoxType=\\""stts\\"">\\n"" )"		7688730	0					
ANR	7689668	Callee	fprintf		7688730	0					
ANR	7689669	Identifier	fprintf		7688730	0					
ANR	7689670	ArgumentList	xmlout		7688730	1					
ANR	7689671	Argument	xmlout		7688730	0					
ANR	7689672	Identifier	xmlout		7688730	0					
ANR	7689673	Argument	"""            <TimeToSample BoxType=\\""stts\\"">\\n"""		7688730	1					
ANR	7689674	PrimaryExpression	"""            <TimeToSample BoxType=\\""stts\\"">\\n"""		7688730	0					
ANR	7689675	ExpressionStatement	"fprintf ( xmlout , ""              <SampleStatistics>\\n"" )"	1087:4:49209:49267	7688730	7	True				
ANR	7689676	CallExpression	"fprintf ( xmlout , ""              <SampleStatistics>\\n"" )"		7688730	0					
ANR	7689677	Callee	fprintf		7688730	0					
ANR	7689678	Identifier	fprintf		7688730	0					
ANR	7689679	ArgumentList	xmlout		7688730	1					
ANR	7689680	Argument	xmlout		7688730	0					
ANR	7689681	Identifier	xmlout		7688730	0					
ANR	7689682	Argument	"""              <SampleStatistics>\\n"""		7688730	1					
ANR	7689683	PrimaryExpression	"""              <SampleStatistics>\\n"""		7688730	0					
ANR	7689684	ExpressionStatement	"fprintf ( xmlout , ""                <TotalSamples>%d</TotalSamples>\\n"" , track -> num_samples )"	1088:4:49273:49378	7688730	8	True				
ANR	7689685	CallExpression	"fprintf ( xmlout , ""                <TotalSamples>%d</TotalSamples>\\n"" , track -> num_samples )"		7688730	0					
ANR	7689686	Callee	fprintf		7688730	0					
ANR	7689687	Identifier	fprintf		7688730	0					
ANR	7689688	ArgumentList	xmlout		7688730	1					
ANR	7689689	Argument	xmlout		7688730	0					
ANR	7689690	Identifier	xmlout		7688730	0					
ANR	7689691	Argument	"""                <TotalSamples>%d</TotalSamples>\\n"""		7688730	1					
ANR	7689692	PrimaryExpression	"""                <TotalSamples>%d</TotalSamples>\\n"""		7688730	0					
ANR	7689693	Argument	track -> num_samples		7688730	2					
ANR	7689694	PtrMemberAccess	track -> num_samples		7688730	0					
ANR	7689695	Identifier	track		7688730	0					
ANR	7689696	Identifier	num_samples		7688730	1					
ANR	7689697	IfStatement	if ( notes )		7688730	9					
ANR	7689698	Condition	notes	1090:8:49388:49392	7688730	0	True				
ANR	7689699	Identifier	notes		7688730	0					
ANR	7689700	CompoundStatement		202:15:10750:10750	7688730	1					
ANR	7689701	ExpressionStatement	"fprintf ( xmlout , ""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"" )"	1091:8:49405:49557	7688730	0	True				
ANR	7689702	CallExpression	"fprintf ( xmlout , ""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"" )"		7688730	0					
ANR	7689703	Callee	fprintf		7688730	0					
ANR	7689704	Identifier	fprintf		7688730	0					
ANR	7689705	ArgumentList	xmlout		7688730	1					
ANR	7689706	Argument	xmlout		7688730	0					
ANR	7689707	Identifier	xmlout		7688730	0					
ANR	7689708	Argument	"""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"""		7688730	1					
ANR	7689709	PrimaryExpression	"""                <!-- For video, gives the total frames in the track, by summing all entries in the Sample Table -->\\n"""		7688730	0					
ANR	7689710	ExpressionStatement	"fprintf ( xmlout , ""              </SampleStatistics>\\n"" )"	1094:4:49569:49628	7688730	10	True				
ANR	7689711	CallExpression	"fprintf ( xmlout , ""              </SampleStatistics>\\n"" )"		7688730	0					
ANR	7689712	Callee	fprintf		7688730	0					
ANR	7689713	Identifier	fprintf		7688730	0					
ANR	7689714	ArgumentList	xmlout		7688730	1					
ANR	7689715	Argument	xmlout		7688730	0					
ANR	7689716	Identifier	xmlout		7688730	0					
ANR	7689717	Argument	"""              </SampleStatistics>\\n"""		7688730	1					
ANR	7689718	PrimaryExpression	"""              </SampleStatistics>\\n"""		7688730	0					
ANR	7689719	ExpressionStatement	"fprintf ( xmlout , ""              <SampleEntries EntryCount=\\""%d\\"">\\n"" , track -> num_tts )"	1095:4:49634:49735	7688730	11	True				
ANR	7689720	CallExpression	"fprintf ( xmlout , ""              <SampleEntries EntryCount=\\""%d\\"">\\n"" , track -> num_tts )"		7688730	0					
ANR	7689721	Callee	fprintf		7688730	0					
ANR	7689722	Identifier	fprintf		7688730	0					
ANR	7689723	ArgumentList	xmlout		7688730	1					
ANR	7689724	Argument	xmlout		7688730	0					
ANR	7689725	Identifier	xmlout		7688730	0					
ANR	7689726	Argument	"""              <SampleEntries EntryCount=\\""%d\\"">\\n"""		7688730	1					
ANR	7689727	PrimaryExpression	"""              <SampleEntries EntryCount=\\""%d\\"">\\n"""		7688730	0					
ANR	7689728	Argument	track -> num_tts		7688730	2					
ANR	7689729	PtrMemberAccess	track -> num_tts		7688730	0					
ANR	7689730	Identifier	track		7688730	0					
ANR	7689731	Identifier	num_tts		7688730	1					
ANR	7689732	ForStatement	for ( i = 0 ; i < track -> num_tts ; i ++ )		7688730	12					
ANR	7689733	ForInit	i = 0 ;	1097:9:49746:49751	7688730	0	True				
ANR	7689734	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689735	Identifier	i		7688730	0					
ANR	7689736	PrimaryExpression	0		7688730	1					
ANR	7689737	Condition	i < track -> num_tts	1097:16:49753:49770	7688730	1	True				
ANR	7689738	RelationalExpression	i < track -> num_tts		7688730	0		<			
ANR	7689739	Identifier	i		7688730	0					
ANR	7689740	PtrMemberAccess	track -> num_tts		7688730	1					
ANR	7689741	Identifier	track		7688730	0					
ANR	7689742	Identifier	num_tts		7688730	1					
ANR	7689743	PostIncDecOperationExpression	i ++	1097:36:49773:49775	7688730	2	True				
ANR	7689744	Identifier	i		7688730	0					
ANR	7689745	IncDec	++		7688730	1					
ANR	7689746	CompoundStatement		209:41:11133:11133	7688730	3					
ANR	7689747	ExpressionStatement	"fprintf ( xmlout , ""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"" , i + 1 , track -> tts [ i ] . sample_count , track -> tts [ i ] . sample_delta )"	1098:8:49788:49980	7688730	0	True				
ANR	7689748	CallExpression	"fprintf ( xmlout , ""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"" , i + 1 , track -> tts [ i ] . sample_count , track -> tts [ i ] . sample_delta )"		7688730	0					
ANR	7689749	Callee	fprintf		7688730	0					
ANR	7689750	Identifier	fprintf		7688730	0					
ANR	7689751	ArgumentList	xmlout		7688730	1					
ANR	7689752	Argument	xmlout		7688730	0					
ANR	7689753	Identifier	xmlout		7688730	0					
ANR	7689754	Argument	"""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"""		7688730	1					
ANR	7689755	PrimaryExpression	"""                <Table Entry=\\""%u\\"" SampleCount=\\""%d\\"" SampleDelta=\\""%u\\"" />\\n"""		7688730	0					
ANR	7689756	Argument	i + 1		7688730	2					
ANR	7689757	AdditiveExpression	i + 1		7688730	0		+			
ANR	7689758	Identifier	i		7688730	0					
ANR	7689759	PrimaryExpression	1		7688730	1					
ANR	7689760	Argument	track -> tts [ i ] . sample_count		7688730	3					
ANR	7689761	MemberAccess	track -> tts [ i ] . sample_count		7688730	0					
ANR	7689762	ArrayIndexing	track -> tts [ i ]		7688730	0					
ANR	7689763	PtrMemberAccess	track -> tts		7688730	0					
ANR	7689764	Identifier	track		7688730	0					
ANR	7689765	Identifier	tts		7688730	1					
ANR	7689766	Identifier	i		7688730	1					
ANR	7689767	Identifier	sample_count		7688730	1					
ANR	7689768	Argument	track -> tts [ i ] . sample_delta		7688730	4					
ANR	7689769	MemberAccess	track -> tts [ i ] . sample_delta		7688730	0					
ANR	7689770	ArrayIndexing	track -> tts [ i ]		7688730	0					
ANR	7689771	PtrMemberAccess	track -> tts		7688730	0					
ANR	7689772	Identifier	track		7688730	0					
ANR	7689773	Identifier	tts		7688730	1					
ANR	7689774	Identifier	i		7688730	1					
ANR	7689775	Identifier	sample_delta		7688730	1					
ANR	7689776	ExpressionStatement	"fprintf ( xmlout , ""              </SampleEntries>\\n"" )"	1102:4:49992:50048	7688730	13	True				
ANR	7689777	CallExpression	"fprintf ( xmlout , ""              </SampleEntries>\\n"" )"		7688730	0					
ANR	7689778	Callee	fprintf		7688730	0					
ANR	7689779	Identifier	fprintf		7688730	0					
ANR	7689780	ArgumentList	xmlout		7688730	1					
ANR	7689781	Argument	xmlout		7688730	0					
ANR	7689782	Identifier	xmlout		7688730	0					
ANR	7689783	Argument	"""              </SampleEntries>\\n"""		7688730	1					
ANR	7689784	PrimaryExpression	"""              </SampleEntries>\\n"""		7688730	0					
ANR	7689785	ExpressionStatement	"fprintf ( xmlout , ""            </TimeToSample>\\n"" )"	1103:4:50054:50107	7688730	14	True				
ANR	7689786	CallExpression	"fprintf ( xmlout , ""            </TimeToSample>\\n"" )"		7688730	0					
ANR	7689787	Callee	fprintf		7688730	0					
ANR	7689788	Identifier	fprintf		7688730	0					
ANR	7689789	ArgumentList	xmlout		7688730	1					
ANR	7689790	Argument	xmlout		7688730	0					
ANR	7689791	Identifier	xmlout		7688730	0					
ANR	7689792	Argument	"""            </TimeToSample>\\n"""		7688730	1					
ANR	7689793	PrimaryExpression	"""            </TimeToSample>\\n"""		7688730	0					
ANR	7689794	ExpressionStatement	"fprintf ( xmlout , ""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"" , track -> num_samplestochunk )"	1105:4:50114:50243	7688730	15	True				
ANR	7689795	CallExpression	"fprintf ( xmlout , ""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"" , track -> num_samplestochunk )"		7688730	0					
ANR	7689796	Callee	fprintf		7688730	0					
ANR	7689797	Identifier	fprintf		7688730	0					
ANR	7689798	ArgumentList	xmlout		7688730	1					
ANR	7689799	Argument	xmlout		7688730	0					
ANR	7689800	Identifier	xmlout		7688730	0					
ANR	7689801	Argument	"""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"""		7688730	1					
ANR	7689802	PrimaryExpression	"""            <SampleToChunk BoxType=\\""stsc\\"" Count=\\""%d\\"">\\n"""		7688730	0					
ANR	7689803	Argument	track -> num_samplestochunk		7688730	2					
ANR	7689804	PtrMemberAccess	track -> num_samplestochunk		7688730	0					
ANR	7689805	Identifier	track		7688730	0					
ANR	7689806	Identifier	num_samplestochunk		7688730	1					
ANR	7689807	ForStatement	for ( i = 0 ; i < track -> num_samplestochunk ; i ++ )		7688730	16					
ANR	7689808	ForInit	i = 0 ;	1108:9:50254:50259	7688730	0	True				
ANR	7689809	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689810	Identifier	i		7688730	0					
ANR	7689811	PrimaryExpression	0		7688730	1					
ANR	7689812	Condition	i < track -> num_samplestochunk	1108:16:50261:50289	7688730	1	True				
ANR	7689813	RelationalExpression	i < track -> num_samplestochunk		7688730	0		<			
ANR	7689814	Identifier	i		7688730	0					
ANR	7689815	PtrMemberAccess	track -> num_samplestochunk		7688730	1					
ANR	7689816	Identifier	track		7688730	0					
ANR	7689817	Identifier	num_samplestochunk		7688730	1					
ANR	7689818	PostIncDecOperationExpression	i ++	1108:47:50292:50294	7688730	2	True				
ANR	7689819	Identifier	i		7688730	0					
ANR	7689820	IncDec	++		7688730	1					
ANR	7689821	CompoundStatement		220:52:11652:11652	7688730	3					
ANR	7689822	ExpressionStatement	"fprintf ( xmlout , ""              <FirstChunk>%u</FirstChunk>\\n"" , track -> sampletochunk [ i ] . first_chunk )"	1109:8:50307:50425	7688730	0	True				
ANR	7689823	CallExpression	"fprintf ( xmlout , ""              <FirstChunk>%u</FirstChunk>\\n"" , track -> sampletochunk [ i ] . first_chunk )"		7688730	0					
ANR	7689824	Callee	fprintf		7688730	0					
ANR	7689825	Identifier	fprintf		7688730	0					
ANR	7689826	ArgumentList	xmlout		7688730	1					
ANR	7689827	Argument	xmlout		7688730	0					
ANR	7689828	Identifier	xmlout		7688730	0					
ANR	7689829	Argument	"""              <FirstChunk>%u</FirstChunk>\\n"""		7688730	1					
ANR	7689830	PrimaryExpression	"""              <FirstChunk>%u</FirstChunk>\\n"""		7688730	0					
ANR	7689831	Argument	track -> sampletochunk [ i ] . first_chunk		7688730	2					
ANR	7689832	MemberAccess	track -> sampletochunk [ i ] . first_chunk		7688730	0					
ANR	7689833	ArrayIndexing	track -> sampletochunk [ i ]		7688730	0					
ANR	7689834	PtrMemberAccess	track -> sampletochunk		7688730	0					
ANR	7689835	Identifier	track		7688730	0					
ANR	7689836	Identifier	sampletochunk		7688730	1					
ANR	7689837	Identifier	i		7688730	1					
ANR	7689838	Identifier	first_chunk		7688730	1					
ANR	7689839	ExpressionStatement	"fprintf ( xmlout , ""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"" , track -> sampletochunk [ i ] . samples_per_chunk )"	1111:8:50449:50583	7688730	1	True				
ANR	7689840	CallExpression	"fprintf ( xmlout , ""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"" , track -> sampletochunk [ i ] . samples_per_chunk )"		7688730	0					
ANR	7689841	Callee	fprintf		7688730	0					
ANR	7689842	Identifier	fprintf		7688730	0					
ANR	7689843	ArgumentList	xmlout		7688730	1					
ANR	7689844	Argument	xmlout		7688730	0					
ANR	7689845	Identifier	xmlout		7688730	0					
ANR	7689846	Argument	"""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"""		7688730	1					
ANR	7689847	PrimaryExpression	"""              <SamplesPerChunk>%u</SamplesPerChunk>\\n"""		7688730	0					
ANR	7689848	Argument	track -> sampletochunk [ i ] . samples_per_chunk		7688730	2					
ANR	7689849	MemberAccess	track -> sampletochunk [ i ] . samples_per_chunk		7688730	0					
ANR	7689850	ArrayIndexing	track -> sampletochunk [ i ]		7688730	0					
ANR	7689851	PtrMemberAccess	track -> sampletochunk		7688730	0					
ANR	7689852	Identifier	track		7688730	0					
ANR	7689853	Identifier	sampletochunk		7688730	1					
ANR	7689854	Identifier	i		7688730	1					
ANR	7689855	Identifier	samples_per_chunk		7688730	1					
ANR	7689856	ExpressionStatement	"fprintf ( xmlout , ""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"" , track -> sampletochunk [ i ] . sample_descr_idx )"	1113:8:50607:50742	7688730	2	True				
ANR	7689857	CallExpression	"fprintf ( xmlout , ""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"" , track -> sampletochunk [ i ] . sample_descr_idx )"		7688730	0					
ANR	7689858	Callee	fprintf		7688730	0					
ANR	7689859	Identifier	fprintf		7688730	0					
ANR	7689860	ArgumentList	xmlout		7688730	1					
ANR	7689861	Argument	xmlout		7688730	0					
ANR	7689862	Identifier	xmlout		7688730	0					
ANR	7689863	Argument	"""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"""		7688730	1					
ANR	7689864	PrimaryExpression	"""              <SampleDescrIndex>%u</SampleDescrIndex>\\n"""		7688730	0					
ANR	7689865	Argument	track -> sampletochunk [ i ] . sample_descr_idx		7688730	2					
ANR	7689866	MemberAccess	track -> sampletochunk [ i ] . sample_descr_idx		7688730	0					
ANR	7689867	ArrayIndexing	track -> sampletochunk [ i ]		7688730	0					
ANR	7689868	PtrMemberAccess	track -> sampletochunk		7688730	0					
ANR	7689869	Identifier	track		7688730	0					
ANR	7689870	Identifier	sampletochunk		7688730	1					
ANR	7689871	Identifier	i		7688730	1					
ANR	7689872	Identifier	sample_descr_idx		7688730	1					
ANR	7689873	ExpressionStatement	"fprintf ( xmlout , ""            </SampleToChunk>\\n"" )"	1116:4:50768:50822	7688730	17	True				
ANR	7689874	CallExpression	"fprintf ( xmlout , ""            </SampleToChunk>\\n"" )"		7688730	0					
ANR	7689875	Callee	fprintf		7688730	0					
ANR	7689876	Identifier	fprintf		7688730	0					
ANR	7689877	ArgumentList	xmlout		7688730	1					
ANR	7689878	Argument	xmlout		7688730	0					
ANR	7689879	Identifier	xmlout		7688730	0					
ANR	7689880	Argument	"""            </SampleToChunk>\\n"""		7688730	1					
ANR	7689881	PrimaryExpression	"""            </SampleToChunk>\\n"""		7688730	0					
ANR	7689882	ExpressionStatement	"fprintf ( xmlout , ""            <SampleSize BoxType=\\""stsz\\"">\\n"" )"	1119:4:50945:51012	7688730	18	True				
ANR	7689883	CallExpression	"fprintf ( xmlout , ""            <SampleSize BoxType=\\""stsz\\"">\\n"" )"		7688730	0					
ANR	7689884	Callee	fprintf		7688730	0					
ANR	7689885	Identifier	fprintf		7688730	0					
ANR	7689886	ArgumentList	xmlout		7688730	1					
ANR	7689887	Argument	xmlout		7688730	0					
ANR	7689888	Identifier	xmlout		7688730	0					
ANR	7689889	Argument	"""            <SampleSize BoxType=\\""stsz\\"">\\n"""		7688730	1					
ANR	7689890	PrimaryExpression	"""            <SampleSize BoxType=\\""stsz\\"">\\n"""		7688730	0					
ANR	7689891	IfStatement	if ( track -> same_sample_size )		7688730	19					
ANR	7689892	Condition	track -> same_sample_size	1120:8:51022:51044	7688730	0	True				
ANR	7689893	PtrMemberAccess	track -> same_sample_size		7688730	0					
ANR	7689894	Identifier	track		7688730	0					
ANR	7689895	Identifier	same_sample_size		7688730	1					
ANR	7689896	CompoundStatement		232:33:12402:12402	7688730	1					
ANR	7689897	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Size>%u</Sample_Size>\\n"" , track -> sample [ 0 ] . sample_size )"	1122:8:51143:51256	7688730	0	True				
ANR	7689898	CallExpression	"fprintf ( xmlout , ""              <Sample_Size>%u</Sample_Size>\\n"" , track -> sample [ 0 ] . sample_size )"		7688730	0					
ANR	7689899	Callee	fprintf		7688730	0					
ANR	7689900	Identifier	fprintf		7688730	0					
ANR	7689901	ArgumentList	xmlout		7688730	1					
ANR	7689902	Argument	xmlout		7688730	0					
ANR	7689903	Identifier	xmlout		7688730	0					
ANR	7689904	Argument	"""              <Sample_Size>%u</Sample_Size>\\n"""		7688730	1					
ANR	7689905	PrimaryExpression	"""              <Sample_Size>%u</Sample_Size>\\n"""		7688730	0					
ANR	7689906	Argument	track -> sample [ 0 ] . sample_size		7688730	2					
ANR	7689907	MemberAccess	track -> sample [ 0 ] . sample_size		7688730	0					
ANR	7689908	ArrayIndexing	track -> sample [ 0 ]		7688730	0					
ANR	7689909	PtrMemberAccess	track -> sample		7688730	0					
ANR	7689910	Identifier	track		7688730	0					
ANR	7689911	Identifier	sample		7688730	1					
ANR	7689912	PrimaryExpression	0		7688730	1					
ANR	7689913	Identifier	sample_size		7688730	1					
ANR	7689914	IfStatement	if ( notes )		7688730	1					
ANR	7689915	Condition	notes	1124:12:51270:51274	7688730	0	True				
ANR	7689916	Identifier	notes		7688730	0					
ANR	7689917	CompoundStatement		236:19:12632:12632	7688730	1					
ANR	7689918	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Non-zero value means all samples have that size. -->\\n"" )"	1125:12:51291:51403	7688730	0	True				
ANR	7689919	CallExpression	"fprintf ( xmlout , ""              <!-- Non-zero value means all samples have that size. -->\\n"" )"		7688730	0					
ANR	7689920	Callee	fprintf		7688730	0					
ANR	7689921	Identifier	fprintf		7688730	0					
ANR	7689922	ArgumentList	xmlout		7688730	1					
ANR	7689923	Argument	xmlout		7688730	0					
ANR	7689924	Identifier	xmlout		7688730	0					
ANR	7689925	Argument	"""              <!-- Non-zero value means all samples have that size. -->\\n"""		7688730	1					
ANR	7689926	PrimaryExpression	"""              <!-- Non-zero value means all samples have that size. -->\\n"""		7688730	0					
ANR	7689927	ExpressionStatement	"fprintf ( xmlout , ""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"" )"	1127:12:51417:51594	7688730	1	True				
ANR	7689928	CallExpression	"fprintf ( xmlout , ""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"" )"		7688730	0					
ANR	7689929	Callee	fprintf		7688730	0					
ANR	7689930	Identifier	fprintf		7688730	0					
ANR	7689931	ArgumentList	xmlout		7688730	1					
ANR	7689932	Argument	xmlout		7688730	0					
ANR	7689933	Identifier	xmlout		7688730	0					
ANR	7689934	Argument	"""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"""		7688730	1					
ANR	7689935	PrimaryExpression	"""              <!-- So <Sample_Count> (aka Entry_Count in std.) has no meaning, is suppressed from this output, and no table follows. -->\\n"""		7688730	0					
ANR	7689936	ElseStatement	else		7688730	0					
ANR	7689937	CompoundStatement		242:11:12972:12972	7688730	0					
ANR	7689938	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Size>0</Sample_Size>\\n"" )"	1131:8:51627:51693	7688730	0	True				
ANR	7689939	CallExpression	"fprintf ( xmlout , ""              <Sample_Size>0</Sample_Size>\\n"" )"		7688730	0					
ANR	7689940	Callee	fprintf		7688730	0					
ANR	7689941	Identifier	fprintf		7688730	0					
ANR	7689942	ArgumentList	xmlout		7688730	1					
ANR	7689943	Argument	xmlout		7688730	0					
ANR	7689944	Identifier	xmlout		7688730	0					
ANR	7689945	Argument	"""              <Sample_Size>0</Sample_Size>\\n"""		7688730	1					
ANR	7689946	PrimaryExpression	"""              <Sample_Size>0</Sample_Size>\\n"""		7688730	0					
ANR	7689947	IfStatement	if ( notes )		7688730	1					
ANR	7689948	Condition	notes	1132:12:51707:51711	7688730	0	True				
ANR	7689949	Identifier	notes		7688730	0					
ANR	7689950	IfStatement	if ( sampletables )		7688730	1					
ANR	7689951	Condition	sampletables	1133:16:51730:51741	7688730	0	True				
ANR	7689952	Identifier	sampletables		7688730	0					
ANR	7689953	CompoundStatement		245:30:13099:13099	7688730	1					
ANR	7689954	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"" )"	1134:16:51762:51945	7688730	0	True				
ANR	7689955	CallExpression	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"" )"		7688730	0					
ANR	7689956	Callee	fprintf		7688730	0					
ANR	7689957	Identifier	fprintf		7688730	0					
ANR	7689958	ArgumentList	xmlout		7688730	1					
ANR	7689959	Argument	xmlout		7688730	0					
ANR	7689960	Identifier	xmlout		7688730	0					
ANR	7689961	Argument	"""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"""		7688730	1					
ANR	7689962	PrimaryExpression	"""              <!-- Zero value means samples have different sizes, given in table next of length Sample_Count (aka Entry_Count in std). -->\\n"""		7688730	0					
ANR	7689963	ElseStatement	else		7688730	0					
ANR	7689964	CompoundStatement		248:19:13321:13321	7688730	0					
ANR	7689965	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"" )"	1137:16:51984:52174	7688730	0	True				
ANR	7689966	CallExpression	"fprintf ( xmlout , ""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"" )"		7688730	0					
ANR	7689967	Callee	fprintf		7688730	0					
ANR	7689968	Identifier	fprintf		7688730	0					
ANR	7689969	ArgumentList	xmlout		7688730	1					
ANR	7689970	Argument	xmlout		7688730	0					
ANR	7689971	Identifier	xmlout		7688730	0					
ANR	7689972	Argument	"""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"""		7688730	1					
ANR	7689973	PrimaryExpression	"""              <!-- Zero value means samples have different sizes, given in table (not shown) of length Sample_Count (aka Entry_Count in std). -->\\n"""		7688730	0					
ANR	7689974	ExpressionStatement	"fprintf ( xmlout , ""              <Sample_Count>%u</Sample_Count>\\n"" , track -> num_samples )"	1140:8:52198:52303	7688730	2	True				
ANR	7689975	CallExpression	"fprintf ( xmlout , ""              <Sample_Count>%u</Sample_Count>\\n"" , track -> num_samples )"		7688730	0					
ANR	7689976	Callee	fprintf		7688730	0					
ANR	7689977	Identifier	fprintf		7688730	0					
ANR	7689978	ArgumentList	xmlout		7688730	1					
ANR	7689979	Argument	xmlout		7688730	0					
ANR	7689980	Identifier	xmlout		7688730	0					
ANR	7689981	Argument	"""              <Sample_Count>%u</Sample_Count>\\n"""		7688730	1					
ANR	7689982	PrimaryExpression	"""              <Sample_Count>%u</Sample_Count>\\n"""		7688730	0					
ANR	7689983	Argument	track -> num_samples		7688730	2					
ANR	7689984	PtrMemberAccess	track -> num_samples		7688730	0					
ANR	7689985	Identifier	track		7688730	0					
ANR	7689986	Identifier	num_samples		7688730	1					
ANR	7689987	IfStatement	if ( sampletables )		7688730	3					
ANR	7689988	Condition	sampletables	1142:12:52317:52328	7688730	0	True				
ANR	7689989	Identifier	sampletables		7688730	0					
ANR	7689990	ForStatement	for ( i = 0 ; i < ( int ) track -> num_samples ; i ++ )		7688730	1					
ANR	7689991	ForInit	i = 0 ;	1143:17:52348:52353	7688730	0	True				
ANR	7689992	AssignmentExpression	i = 0		7688730	0		=			
ANR	7689993	Identifier	i		7688730	0					
ANR	7689994	PrimaryExpression	0		7688730	1					
ANR	7689995	Condition	i < ( int ) track -> num_samples	1143:24:52355:52381	7688730	1	True				
ANR	7689996	RelationalExpression	i < ( int ) track -> num_samples		7688730	0		<			
ANR	7689997	Identifier	i		7688730	0					
ANR	7689998	CastExpression	( int ) track -> num_samples		7688730	1					
ANR	7689999	CastTarget	int		7688730	0					
ANR	7690000	PtrMemberAccess	track -> num_samples		7688730	1					
ANR	7690001	Identifier	track		7688730	0					
ANR	7690002	Identifier	num_samples		7688730	1					
ANR	7690003	PostIncDecOperationExpression	i ++	1143:53:52384:52386	7688730	2	True				
ANR	7690004	Identifier	i		7688730	0					
ANR	7690005	IncDec	++		7688730	1					
ANR	7690006	CompoundStatement		255:58:13744:13744	7688730	3					
ANR	7690007	ExpressionStatement	"fprintf ( xmlout , ""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"" , i + 1 , track -> sample [ i ] . sample_size )"	1144:16:52407:52540	7688730	0	True				
ANR	7690008	CallExpression	"fprintf ( xmlout , ""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"" , i + 1 , track -> sample [ i ] . sample_size )"		7688730	0					
ANR	7690009	Callee	fprintf		7688730	0					
ANR	7690010	Identifier	fprintf		7688730	0					
ANR	7690011	ArgumentList	xmlout		7688730	1					
ANR	7690012	Argument	xmlout		7688730	0					
ANR	7690013	Identifier	xmlout		7688730	0					
ANR	7690014	Argument	"""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"""		7688730	1					
ANR	7690015	PrimaryExpression	"""              <EntrySize Num=\\""%u\\"">%u</EntrySize>\\n"""		7688730	0					
ANR	7690016	Argument	i + 1		7688730	2					
ANR	7690017	AdditiveExpression	i + 1		7688730	0		+			
ANR	7690018	Identifier	i		7688730	0					
ANR	7690019	PrimaryExpression	1		7688730	1					
ANR	7690020	Argument	track -> sample [ i ] . sample_size		7688730	3					
ANR	7690021	MemberAccess	track -> sample [ i ] . sample_size		7688730	0					
ANR	7690022	ArrayIndexing	track -> sample [ i ]		7688730	0					
ANR	7690023	PtrMemberAccess	track -> sample		7688730	0					
ANR	7690024	Identifier	track		7688730	0					
ANR	7690025	Identifier	sample		7688730	1					
ANR	7690026	Identifier	i		7688730	1					
ANR	7690027	Identifier	sample_size		7688730	1					
ANR	7690028	ExpressionStatement	"fprintf ( xmlout , ""            </SampleSize>\\n"" )"	1148:4:52566:52617	7688730	20	True				
ANR	7690029	CallExpression	"fprintf ( xmlout , ""            </SampleSize>\\n"" )"		7688730	0					
ANR	7690030	Callee	fprintf		7688730	0					
ANR	7690031	Identifier	fprintf		7688730	0					
ANR	7690032	ArgumentList	xmlout		7688730	1					
ANR	7690033	Argument	xmlout		7688730	0					
ANR	7690034	Identifier	xmlout		7688730	0					
ANR	7690035	Argument	"""            </SampleSize>\\n"""		7688730	1					
ANR	7690036	PrimaryExpression	"""            </SampleSize>\\n"""		7688730	0					
ANR	7690037	ExpressionStatement	"fprintf ( xmlout , ""            <ChunkOffset BoxType=\\""stco\\"">\\n"" )"	1150:4:52624:52692	7688730	21	True				
ANR	7690038	CallExpression	"fprintf ( xmlout , ""            <ChunkOffset BoxType=\\""stco\\"">\\n"" )"		7688730	0					
ANR	7690039	Callee	fprintf		7688730	0					
ANR	7690040	Identifier	fprintf		7688730	0					
ANR	7690041	ArgumentList	xmlout		7688730	1					
ANR	7690042	Argument	xmlout		7688730	0					
ANR	7690043	Identifier	xmlout		7688730	0					
ANR	7690044	Argument	"""            <ChunkOffset BoxType=\\""stco\\"">\\n"""		7688730	1					
ANR	7690045	PrimaryExpression	"""            <ChunkOffset BoxType=\\""stco\\"">\\n"""		7688730	0					
ANR	7690046	ExpressionStatement	"fprintf ( xmlout , ""              <EntryCount>%u</EntryCount>\\n"" , track -> num_chunks )"	1152:4:52757:52855	7688730	22	True				
ANR	7690047	CallExpression	"fprintf ( xmlout , ""              <EntryCount>%u</EntryCount>\\n"" , track -> num_chunks )"		7688730	0					
ANR	7690048	Callee	fprintf		7688730	0					
ANR	7690049	Identifier	fprintf		7688730	0					
ANR	7690050	ArgumentList	xmlout		7688730	1					
ANR	7690051	Argument	xmlout		7688730	0					
ANR	7690052	Identifier	xmlout		7688730	0					
ANR	7690053	Argument	"""              <EntryCount>%u</EntryCount>\\n"""		7688730	1					
ANR	7690054	PrimaryExpression	"""              <EntryCount>%u</EntryCount>\\n"""		7688730	0					
ANR	7690055	Argument	track -> num_chunks		7688730	2					
ANR	7690056	PtrMemberAccess	track -> num_chunks		7688730	0					
ANR	7690057	Identifier	track		7688730	0					
ANR	7690058	Identifier	num_chunks		7688730	1					
ANR	7690059	IfStatement	if ( notes )		7688730	23					
ANR	7690060	Condition	notes	1154:8:52865:52869	7688730	0	True				
ANR	7690061	Identifier	notes		7688730	0					
ANR	7690062	CompoundStatement		266:15:14227:14227	7688730	1					
ANR	7690063	ExpressionStatement	"fprintf ( xmlout , ""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"" )"	1155:8:52882:53043	7688730	0	True				
ANR	7690064	CallExpression	"fprintf ( xmlout , ""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"" )"		7688730	0					
ANR	7690065	Callee	fprintf		7688730	0					
ANR	7690066	Identifier	fprintf		7688730	0					
ANR	7690067	ArgumentList	xmlout		7688730	1					
ANR	7690068	Argument	xmlout		7688730	0					
ANR	7690069	Identifier	xmlout		7688730	0					
ANR	7690070	Argument	"""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"""		7688730	1					
ANR	7690071	PrimaryExpression	"""              <!-- For this implementation, EntryCount shown is one calculated during file read of <SampleToChunk> data. -->\\n"""		7688730	0					
ANR	7690072	ExpressionStatement	"fprintf ( xmlout , ""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"" )"	1157:8:53053:53217	7688730	1	True				
ANR	7690073	CallExpression	"fprintf ( xmlout , ""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"" )"		7688730	0					
ANR	7690074	Callee	fprintf		7688730	0					
ANR	7690075	Identifier	fprintf		7688730	0					
ANR	7690076	ArgumentList	xmlout		7688730	1					
ANR	7690077	Argument	xmlout		7688730	0					
ANR	7690078	Identifier	xmlout		7688730	0					
ANR	7690079	Argument	"""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"""		7688730	1					
ANR	7690080	PrimaryExpression	"""              <!-- Implementation will report failure during file read of <ChunkOffset> data if read entry-count disagrees. -->\\n"""		7688730	0					
ANR	7690081	IfStatement	if ( sampletables )		7688730	24					
ANR	7690082	Condition	sampletables	1160:8:53233:53244	7688730	0	True				
ANR	7690083	Identifier	sampletables		7688730	0					
ANR	7690084	ForStatement	for ( i = 0 ; i < ( int ) track -> num_chunks ; i ++ )		7688730	1					
ANR	7690085	ForInit	i = 0 ;	1161:13:53260:53265	7688730	0	True				
ANR	7690086	AssignmentExpression	i = 0		7688730	0		=			
ANR	7690087	Identifier	i		7688730	0					
ANR	7690088	PrimaryExpression	0		7688730	1					
ANR	7690089	Condition	i < ( int ) track -> num_chunks	1161:20:53267:53292	7688730	1	True				
ANR	7690090	RelationalExpression	i < ( int ) track -> num_chunks		7688730	0		<			
ANR	7690091	Identifier	i		7688730	0					
ANR	7690092	CastExpression	( int ) track -> num_chunks		7688730	1					
ANR	7690093	CastTarget	int		7688730	0					
ANR	7690094	PtrMemberAccess	track -> num_chunks		7688730	1					
ANR	7690095	Identifier	track		7688730	0					
ANR	7690096	Identifier	num_chunks		7688730	1					
ANR	7690097	PostIncDecOperationExpression	i ++	1161:48:53295:53297	7688730	2	True				
ANR	7690098	Identifier	i		7688730	0					
ANR	7690099	IncDec	++		7688730	1					
ANR	7690100	CompoundStatement		273:53:14655:14655	7688730	3					
ANR	7690101	ExpressionStatement	"fprintf ( xmlout , ""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"" , i + 1 , track -> chunk [ i ] . offset )"	1162:12:53314:53443	7688730	0	True				
ANR	7690102	CallExpression	"fprintf ( xmlout , ""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"" , i + 1 , track -> chunk [ i ] . offset )"		7688730	0					
ANR	7690103	Callee	fprintf		7688730	0					
ANR	7690104	Identifier	fprintf		7688730	0					
ANR	7690105	ArgumentList	xmlout		7688730	1					
ANR	7690106	Argument	xmlout		7688730	0					
ANR	7690107	Identifier	xmlout		7688730	0					
ANR	7690108	Argument	"""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"""		7688730	1					
ANR	7690109	PrimaryExpression	"""              <Chunk_Offset Num=\\""%d\\"">%u</Chunk_Offset>\\n"""		7688730	0					
ANR	7690110	Argument	i + 1		7688730	2					
ANR	7690111	AdditiveExpression	i + 1		7688730	0		+			
ANR	7690112	Identifier	i		7688730	0					
ANR	7690113	PrimaryExpression	1		7688730	1					
ANR	7690114	Argument	track -> chunk [ i ] . offset		7688730	3					
ANR	7690115	MemberAccess	track -> chunk [ i ] . offset		7688730	0					
ANR	7690116	ArrayIndexing	track -> chunk [ i ]		7688730	0					
ANR	7690117	PtrMemberAccess	track -> chunk		7688730	0					
ANR	7690118	Identifier	track		7688730	0					
ANR	7690119	Identifier	chunk		7688730	1					
ANR	7690120	Identifier	i		7688730	1					
ANR	7690121	Identifier	offset		7688730	1					
ANR	7690122	ExpressionStatement	"fprintf ( xmlout , ""            </ChunkOffset>\\n"" )"	1165:4:53459:53511	7688730	25	True				
ANR	7690123	CallExpression	"fprintf ( xmlout , ""            </ChunkOffset>\\n"" )"		7688730	0					
ANR	7690124	Callee	fprintf		7688730	0					
ANR	7690125	Identifier	fprintf		7688730	0					
ANR	7690126	ArgumentList	xmlout		7688730	1					
ANR	7690127	Argument	xmlout		7688730	0					
ANR	7690128	Identifier	xmlout		7688730	0					
ANR	7690129	Argument	"""            </ChunkOffset>\\n"""		7688730	1					
ANR	7690130	PrimaryExpression	"""            </ChunkOffset>\\n"""		7688730	0					
ANR	7690131	ExpressionStatement	"fprintf ( xmlout , ""          </SampleTable>\\n"" )"	1167:4:53518:53568	7688730	26	True				
ANR	7690132	CallExpression	"fprintf ( xmlout , ""          </SampleTable>\\n"" )"		7688730	0					
ANR	7690133	Callee	fprintf		7688730	0					
ANR	7690134	Identifier	fprintf		7688730	0					
ANR	7690135	ArgumentList	xmlout		7688730	1					
ANR	7690136	Argument	xmlout		7688730	0					
ANR	7690137	Identifier	xmlout		7688730	0					
ANR	7690138	Argument	"""          </SampleTable>\\n"""		7688730	1					
ANR	7690139	PrimaryExpression	"""          </SampleTable>\\n"""		7688730	0					
ANR	7690140	ReturnType	void		7688730	1					
ANR	7690141	Identifier	xml_write_stbl		7688730	2					
ANR	7690142	ParameterList	"FILE * file , FILE * xmlout , mj2_tk_t * track , unsigned int tnum"		7688730	3					
ANR	7690143	Parameter	FILE * file	887:20:38562:38571	7688730	0	True				
ANR	7690144	ParameterType	FILE *		7688730	0					
ANR	7690145	Identifier	file		7688730	1					
ANR	7690146	Parameter	FILE * xmlout	887:32:38574:38585	7688730	1	True				
ANR	7690147	ParameterType	FILE *		7688730	0					
ANR	7690148	Identifier	xmlout		7688730	1					
ANR	7690149	Parameter	mj2_tk_t * track	887:46:38588:38602	7688730	2	True				
ANR	7690150	ParameterType	mj2_tk_t *		7688730	0					
ANR	7690151	Identifier	track		7688730	1					
ANR	7690152	Parameter	unsigned int tnum	888:20:38625:38641	7688730	3	True				
ANR	7690153	ParameterType	unsigned int		7688730	0					
ANR	7690154	Identifier	tnum		7688730	1					
ANR	7690155	CFGEntryNode	ENTRY		7688730		True				
ANR	7690156	CFGExitNode	EXIT		7688730		True				
ANR	7690157	Symbol	notes		7688730						
ANR	7690158	Symbol	& track -> jp2_struct		7688730						
ANR	7690159	Symbol	track -> sampletochunk [ i ] . sample_descr_idx		7688730						
ANR	7690160	Symbol	* * track		7688730						
ANR	7690161	Symbol	buf33		7688730						
ANR	7690162	Symbol	track -> fieldorder		7688730						
ANR	7690163	Symbol	track -> sample		7688730						
ANR	7690164	Symbol	track -> sampletochunk		7688730						
ANR	7690165	Symbol	track -> fieldcount		7688730						
ANR	7690166	Symbol	track -> hsub		7688730						
ANR	7690167	Symbol	len		7688730						
ANR	7690168	Symbol	track -> compressorname		7688730						
ANR	7690169	Symbol	track -> chunk		7688730						
ANR	7690170	Symbol	track -> num_br		7688730						
ANR	7690171	Symbol	track -> num_jp2x		7688730						
ANR	7690172	Symbol	* track -> jp2xdata		7688730						
ANR	7690173	Symbol	* track -> tts		7688730						
ANR	7690174	Symbol	* buf		7688730						
ANR	7690175	Symbol	tnum		7688730						
ANR	7690176	Symbol	* track -> compressorname		7688730						
ANR	7690177	Symbol	raw		7688730						
ANR	7690178	Symbol	* track		7688730						
ANR	7690179	Symbol	xmlout		7688730						
ANR	7690180	Symbol	track -> num_samplestochunk		7688730						
ANR	7690181	Symbol	track -> num_chunks		7688730						
ANR	7690182	Symbol	track -> or_fieldcount		7688730						
ANR	7690183	Symbol	track -> tts		7688730						
ANR	7690184	Symbol	track -> depth		7688730						
ANR	7690185	Symbol	track -> sample [ i ] . sample_size		7688730						
ANR	7690186	Symbol	track -> vertresolution		7688730						
ANR	7690187	Symbol	track -> sample [ 0 ] . sample_size		7688730						
ANR	7690188	Symbol	track -> hoff		7688730						
ANR	7690189	Symbol	track -> tts [ i ] . sample_count		7688730						
ANR	7690190	Symbol	track -> same_sample_size		7688730						
ANR	7690191	Symbol	track -> vsub		7688730						
ANR	7690192	Symbol	track -> br		7688730						
ANR	7690193	Symbol	track -> track_type		7688730						
ANR	7690194	Symbol	track -> sampletochunk [ i ] . first_chunk		7688730						
ANR	7690195	Symbol	file		7688730						
ANR	7690196	Symbol	track -> or_fieldorder		7688730						
ANR	7690197	Symbol	track -> horizresolution		7688730						
ANR	7690198	Symbol	track -> jp2xdata		7688730						
ANR	7690199	Symbol	track		7688730						
ANR	7690200	Symbol	derived		7688730						
ANR	7690201	Symbol	* buf33		7688730						
ANR	7690202	Symbol	* track -> chunk		7688730						
ANR	7690203	Symbol	track -> h		7688730						
ANR	7690204	Symbol	track -> tts [ i ] . sample_delta		7688730						
ANR	7690205	Symbol	* track -> sample		7688730						
ANR	7690206	Symbol	i		7688730						
ANR	7690207	Symbol	* track -> br		7688730						
ANR	7690208	Symbol	track -> chunk [ i ] . offset		7688730						
ANR	7690209	Symbol	buf		7688730						
ANR	7690210	Symbol	* i		7688730						
ANR	7690211	Symbol	track -> w		7688730						
ANR	7690212	Symbol	sampletables		7688730						
ANR	7690213	Symbol	track -> voff		7688730						
ANR	7690214	Symbol	track -> num_samples		7688730						
ANR	7690215	Symbol	track -> num_tts		7688730						
ANR	7690216	Symbol	track -> sampletochunk [ i ] . samples_per_chunk		7688730						
ANR	7690217	Symbol	* track -> sampletochunk		7688730						
ANR	7690218	Symbol	* len		7688730						
ANR	7690219	Function	xml_out_frame	1172:0:53594:61951							
ANR	7690220	FunctionDef	"xml_out_frame (FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr)"		7690219	0					
ANR	7690221	CompoundStatement		1174:0:53725:61951	7690219	0					
ANR	7690222	IdentifierDeclStatement	opj_dparameters_t parameters ;	1175:4:53731:53759	7690219	0	True				
ANR	7690223	IdentifierDecl	parameters		7690219	0					
ANR	7690224	IdentifierDeclType	opj_dparameters_t		7690219	0					
ANR	7690225	Identifier	parameters		7690219	1					
ANR	7690226	IdentifierDeclStatement	opj_image_t * img ;	1176:4:53798:53814	7690219	1	True				
ANR	7690227	IdentifierDecl	* img		7690219	0					
ANR	7690228	IdentifierDeclType	opj_image_t *		7690219	0					
ANR	7690229	Identifier	img		7690219	1					
ANR	7690230	IdentifierDeclStatement	opj_cp_t * cp ;	1177:4:53820:53832	7690219	2	True				
ANR	7690231	IdentifierDecl	* cp		7690219	0					
ANR	7690232	IdentifierDeclType	opj_cp_t *		7690219	0					
ANR	7690233	Identifier	cp		7690219	1					
ANR	7690234	IdentifierDeclStatement	int i ;	1178:4:53838:53843	7690219	3	True				
ANR	7690235	IdentifierDecl	i		7690219	0					
ANR	7690236	IdentifierDeclType	int		7690219	0					
ANR	7690237	Identifier	i		7690219	1					
ANR	7690238	IdentifierDeclStatement	int numcomps ;	1179:4:53849:53861	7690219	4	True				
ANR	7690239	IdentifierDecl	numcomps		7690219	0					
ANR	7690240	IdentifierDeclType	int		7690219	0					
ANR	7690241	Identifier	numcomps		7690219	1					
ANR	7690242	IdentifierDeclStatement	unsigned char * frame_codestream ;	1180:4:53867:53898	7690219	5	True				
ANR	7690243	IdentifierDecl	* frame_codestream		7690219	0					
ANR	7690244	IdentifierDeclType	unsigned char *		7690219	0					
ANR	7690245	Identifier	frame_codestream		7690219	1					
ANR	7690246	IdentifierDeclStatement	opj_dinfo_t * dinfo = NULL ;	1181:4:53904:53929	7690219	6	True				
ANR	7690247	IdentifierDecl	* dinfo = NULL		7690219	0					
ANR	7690248	IdentifierDeclType	opj_dinfo_t *		7690219	0					
ANR	7690249	Identifier	dinfo		7690219	1					
ANR	7690250	AssignmentExpression	* dinfo = NULL		7690219	2		=			
ANR	7690251	Identifier	NULL		7690219	0					
ANR	7690252	Identifier	NULL		7690219	1					
ANR	7690253	IdentifierDeclStatement	opj_cio_t * cio = NULL ;	1182:4:53967:53988	7690219	7	True				
ANR	7690254	IdentifierDecl	* cio = NULL		7690219	0					
ANR	7690255	IdentifierDeclType	opj_cio_t *		7690219	0					
ANR	7690256	Identifier	cio		7690219	1					
ANR	7690257	AssignmentExpression	* cio = NULL		7690219	2		=			
ANR	7690258	Identifier	NULL		7690219	0					
ANR	7690259	Identifier	NULL		7690219	1					
ANR	7690260	IdentifierDeclStatement	opj_j2k_t * j2k ;	1183:4:53994:54008	7690219	8	True				
ANR	7690261	IdentifierDecl	* j2k		7690219	0					
ANR	7690262	IdentifierDeclType	opj_j2k_t *		7690219	0					
ANR	7690263	Identifier	j2k		7690219	1					
ANR	7690264	ExpressionStatement	dinfo = opj_create_decompress ( CODEC_J2K )	1188:4:54089:54129	7690219	9	True				
ANR	7690265	AssignmentExpression	dinfo = opj_create_decompress ( CODEC_J2K )		7690219	0		=			
ANR	7690266	Identifier	dinfo		7690219	0					
ANR	7690267	CallExpression	opj_create_decompress ( CODEC_J2K )		7690219	1					
ANR	7690268	Callee	opj_create_decompress		7690219	0					
ANR	7690269	Identifier	opj_create_decompress		7690219	0					
ANR	7690270	ArgumentList	CODEC_J2K		7690219	1					
ANR	7690271	Argument	CODEC_J2K		7690219	0					
ANR	7690272	Identifier	CODEC_J2K		7690219	0					
ANR	7690273	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , event_mgr , stderr )"	1191:4:54204:54263	7690219	10	True				
ANR	7690274	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , event_mgr , stderr )"		7690219	0					
ANR	7690275	Callee	opj_set_event_mgr		7690219	0					
ANR	7690276	Identifier	opj_set_event_mgr		7690219	0					
ANR	7690277	ArgumentList	( opj_common_ptr ) dinfo		7690219	1					
ANR	7690278	Argument	( opj_common_ptr ) dinfo		7690219	0					
ANR	7690279	CastExpression	( opj_common_ptr ) dinfo		7690219	0					
ANR	7690280	CastTarget	opj_common_ptr		7690219	0					
ANR	7690281	Identifier	dinfo		7690219	1					
ANR	7690282	Argument	event_mgr		7690219	1					
ANR	7690283	Identifier	event_mgr		7690219	0					
ANR	7690284	Argument	stderr		7690219	2					
ANR	7690285	Identifier	stderr		7690219	0					
ANR	7690286	ExpressionStatement	parameters . cp_limit_decoding = DECODE_ALL_BUT_PACKETS	1194:4:54362:54415	7690219	11	True				
ANR	7690287	AssignmentExpression	parameters . cp_limit_decoding = DECODE_ALL_BUT_PACKETS		7690219	0		=			
ANR	7690288	MemberAccess	parameters . cp_limit_decoding		7690219	0					
ANR	7690289	Identifier	parameters		7690219	0					
ANR	7690290	Identifier	cp_limit_decoding		7690219	1					
ANR	7690291	Identifier	DECODE_ALL_BUT_PACKETS		7690219	1					
ANR	7690292	ExpressionStatement	"opj_setup_decoder ( dinfo , & parameters )"	1195:4:54421:54458	7690219	12	True				
ANR	7690293	CallExpression	"opj_setup_decoder ( dinfo , & parameters )"		7690219	0					
ANR	7690294	Callee	opj_setup_decoder		7690219	0					
ANR	7690295	Identifier	opj_setup_decoder		7690219	0					
ANR	7690296	ArgumentList	dinfo		7690219	1					
ANR	7690297	Argument	dinfo		7690219	0					
ANR	7690298	Identifier	dinfo		7690219	0					
ANR	7690299	Argument	& parameters		7690219	1					
ANR	7690300	UnaryOperationExpression	& parameters		7690219	0					
ANR	7690301	UnaryOperator	&		7690219	0					
ANR	7690302	Identifier	parameters		7690219	1					
ANR	7690303	ExpressionStatement	frame_codestream = ( unsigned char * ) malloc ( sample -> sample_size - 8 )	1197:4:54465:54555	7690219	13	True				
ANR	7690304	AssignmentExpression	frame_codestream = ( unsigned char * ) malloc ( sample -> sample_size - 8 )		7690219	0		=			
ANR	7690305	Identifier	frame_codestream		7690219	0					
ANR	7690306	CastExpression	( unsigned char * ) malloc ( sample -> sample_size - 8 )		7690219	1					
ANR	7690307	CastTarget	unsigned char *		7690219	0					
ANR	7690308	CallExpression	malloc ( sample -> sample_size - 8 )		7690219	1					
ANR	7690309	Callee	malloc		7690219	0					
ANR	7690310	Identifier	malloc		7690219	0					
ANR	7690311	ArgumentList	sample -> sample_size - 8		7690219	1					
ANR	7690312	Argument	sample -> sample_size - 8		7690219	0					
ANR	7690313	AdditiveExpression	sample -> sample_size - 8		7690219	0		-			
ANR	7690314	PtrMemberAccess	sample -> sample_size		7690219	0					
ANR	7690315	Identifier	sample		7690219	0					
ANR	7690316	Identifier	sample_size		7690219	1					
ANR	7690317	PrimaryExpression	8		7690219	1					
ANR	7690318	IfStatement	if ( frame_codestream == NULL )		7690219	14					
ANR	7690319	Condition	frame_codestream == NULL	1199:8:54592:54615	7690219	0	True				
ANR	7690320	EqualityExpression	frame_codestream == NULL		7690219	0		==			
ANR	7690321	Identifier	frame_codestream		7690219	0					
ANR	7690322	Identifier	NULL		7690219	1					
ANR	7690323	CompoundStatement		26:34:892:892	7690219	1					
ANR	7690324	ReturnStatement	return 1 ;	1200:8:54628:54636	7690219	0	True				
ANR	7690325	PrimaryExpression	1		7690219	0					
ANR	7690326	ExpressionStatement	"fseek ( file , sample -> offset + 8 , SEEK_SET )"	1203:4:54649:54690	7690219	15	True				
ANR	7690327	CallExpression	"fseek ( file , sample -> offset + 8 , SEEK_SET )"		7690219	0					
ANR	7690328	Callee	fseek		7690219	0					
ANR	7690329	Identifier	fseek		7690219	0					
ANR	7690330	ArgumentList	file		7690219	1					
ANR	7690331	Argument	file		7690219	0					
ANR	7690332	Identifier	file		7690219	0					
ANR	7690333	Argument	sample -> offset + 8		7690219	1					
ANR	7690334	AdditiveExpression	sample -> offset + 8		7690219	0		+			
ANR	7690335	PtrMemberAccess	sample -> offset		7690219	0					
ANR	7690336	Identifier	sample		7690219	0					
ANR	7690337	Identifier	offset		7690219	1					
ANR	7690338	PrimaryExpression	8		7690219	1					
ANR	7690339	Argument	SEEK_SET		7690219	2					
ANR	7690340	Identifier	SEEK_SET		7690219	0					
ANR	7690341	ExpressionStatement	"fread ( frame_codestream , sample -> sample_size - 8 , 1 , file )"	1204:4:54696:54763	7690219	16	True				
ANR	7690342	CallExpression	"fread ( frame_codestream , sample -> sample_size - 8 , 1 , file )"		7690219	0					
ANR	7690343	Callee	fread		7690219	0					
ANR	7690344	Identifier	fread		7690219	0					
ANR	7690345	ArgumentList	frame_codestream		7690219	1					
ANR	7690346	Argument	frame_codestream		7690219	0					
ANR	7690347	Identifier	frame_codestream		7690219	0					
ANR	7690348	Argument	sample -> sample_size - 8		7690219	1					
ANR	7690349	AdditiveExpression	sample -> sample_size - 8		7690219	0		-			
ANR	7690350	PtrMemberAccess	sample -> sample_size		7690219	0					
ANR	7690351	Identifier	sample		7690219	0					
ANR	7690352	Identifier	sample_size		7690219	1					
ANR	7690353	PrimaryExpression	8		7690219	1					
ANR	7690354	Argument	1		7690219	2					
ANR	7690355	PrimaryExpression	1		7690219	0					
ANR	7690356	Argument	file		7690219	3					
ANR	7690357	Identifier	file		7690219	0					
ANR	7690358	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"	1208:4:54847:54954	7690219	17	True				
ANR	7690359	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"		7690219	0		=			
ANR	7690360	Identifier	cio		7690219	0					
ANR	7690361	CallExpression	"opj_cio_open ( ( opj_common_ptr ) dinfo , frame_codestream , sample -> sample_size - 8 )"		7690219	1					
ANR	7690362	Callee	opj_cio_open		7690219	0					
ANR	7690363	Identifier	opj_cio_open		7690219	0					
ANR	7690364	ArgumentList	( opj_common_ptr ) dinfo		7690219	1					
ANR	7690365	Argument	( opj_common_ptr ) dinfo		7690219	0					
ANR	7690366	CastExpression	( opj_common_ptr ) dinfo		7690219	0					
ANR	7690367	CastTarget	opj_common_ptr		7690219	0					
ANR	7690368	Identifier	dinfo		7690219	1					
ANR	7690369	Argument	frame_codestream		7690219	1					
ANR	7690370	Identifier	frame_codestream		7690219	0					
ANR	7690371	Argument	sample -> sample_size - 8		7690219	2					
ANR	7690372	AdditiveExpression	sample -> sample_size - 8		7690219	0		-			
ANR	7690373	PtrMemberAccess	sample -> sample_size		7690219	0					
ANR	7690374	Identifier	sample		7690219	0					
ANR	7690375	Identifier	sample_size		7690219	1					
ANR	7690376	PrimaryExpression	8		7690219	1					
ANR	7690377	ExpressionStatement	"img = opj_decode ( dinfo , cio )"	1212:4:54992:55020	7690219	18	True				
ANR	7690378	AssignmentExpression	"img = opj_decode ( dinfo , cio )"		7690219	0		=			
ANR	7690379	Identifier	img		7690219	0					
ANR	7690380	CallExpression	"opj_decode ( dinfo , cio )"		7690219	1					
ANR	7690381	Callee	opj_decode		7690219	0					
ANR	7690382	Identifier	opj_decode		7690219	0					
ANR	7690383	ArgumentList	dinfo		7690219	1					
ANR	7690384	Argument	dinfo		7690219	0					
ANR	7690385	Identifier	dinfo		7690219	0					
ANR	7690386	Argument	cio		7690219	1					
ANR	7690387	Identifier	cio		7690219	0					
ANR	7690388	IfStatement	if ( ! img )		7690219	19					
ANR	7690389	Condition	! img	1213:8:55030:55033	7690219	0	True				
ANR	7690390	UnaryOperationExpression	! img		7690219	0					
ANR	7690391	UnaryOperator	!		7690219	0					
ANR	7690392	Identifier	img		7690219	1					
ANR	7690393	CompoundStatement		40:14:1310:1310	7690219	1					
ANR	7690394	ExpressionStatement	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"	1214:8:55046:55113	7690219	0	True				
ANR	7690395	CallExpression	"fprintf ( stderr , ""ERROR -> j2k_to_image: failed to decode image!\\n"" )"		7690219	0					
ANR	7690396	Callee	fprintf		7690219	0					
ANR	7690397	Identifier	fprintf		7690219	0					
ANR	7690398	ArgumentList	stderr		7690219	1					
ANR	7690399	Argument	stderr		7690219	0					
ANR	7690400	Identifier	stderr		7690219	0					
ANR	7690401	Argument	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		7690219	1					
ANR	7690402	PrimaryExpression	"""ERROR -> j2k_to_image: failed to decode image!\\n"""		7690219	0					
ANR	7690403	ExpressionStatement	opj_destroy_decompress ( dinfo )	1215:8:55123:55152	7690219	1	True				
ANR	7690404	CallExpression	opj_destroy_decompress ( dinfo )		7690219	0					
ANR	7690405	Callee	opj_destroy_decompress		7690219	0					
ANR	7690406	Identifier	opj_destroy_decompress		7690219	0					
ANR	7690407	ArgumentList	dinfo		7690219	1					
ANR	7690408	Argument	dinfo		7690219	0					
ANR	7690409	Identifier	dinfo		7690219	0					
ANR	7690410	ExpressionStatement	opj_cio_close ( cio )	1216:8:55162:55180	7690219	2	True				
ANR	7690411	CallExpression	opj_cio_close ( cio )		7690219	0					
ANR	7690412	Callee	opj_cio_close		7690219	0					
ANR	7690413	Identifier	opj_cio_close		7690219	0					
ANR	7690414	ArgumentList	cio		7690219	1					
ANR	7690415	Argument	cio		7690219	0					
ANR	7690416	Identifier	cio		7690219	0					
ANR	7690417	ReturnStatement	return 1 ;	1217:8:55190:55198	7690219	3	True				
ANR	7690418	PrimaryExpression	1		7690219	0					
ANR	7690419	ExpressionStatement	j2k = ( opj_j2k_t * ) dinfo -> j2k_handle	1220:4:55211:55246	7690219	20	True				
ANR	7690420	AssignmentExpression	j2k = ( opj_j2k_t * ) dinfo -> j2k_handle		7690219	0		=			
ANR	7690421	Identifier	j2k		7690219	0					
ANR	7690422	CastExpression	( opj_j2k_t * ) dinfo -> j2k_handle		7690219	1					
ANR	7690423	CastTarget	opj_j2k_t *		7690219	0					
ANR	7690424	PtrMemberAccess	dinfo -> j2k_handle		7690219	1					
ANR	7690425	Identifier	dinfo		7690219	0					
ANR	7690426	Identifier	j2k_handle		7690219	1					
ANR	7690427	ExpressionStatement	j2k_default_tcp = j2k -> default_tcp	1221:4:55252:55286	7690219	21	True				
ANR	7690428	AssignmentExpression	j2k_default_tcp = j2k -> default_tcp		7690219	0		=			
ANR	7690429	Identifier	j2k_default_tcp		7690219	0					
ANR	7690430	PtrMemberAccess	j2k -> default_tcp		7690219	1					
ANR	7690431	Identifier	j2k		7690219	0					
ANR	7690432	Identifier	default_tcp		7690219	1					
ANR	7690433	ExpressionStatement	cp = j2k -> cp	1222:4:55292:55304	7690219	22	True				
ANR	7690434	AssignmentExpression	cp = j2k -> cp		7690219	0		=			
ANR	7690435	Identifier	cp		7690219	0					
ANR	7690436	PtrMemberAccess	j2k -> cp		7690219	1					
ANR	7690437	Identifier	j2k		7690219	0					
ANR	7690438	Identifier	cp		7690219	1					
ANR	7690439	ExpressionStatement	numcomps = img -> numcomps	1224:4:55311:55335	7690219	23	True				
ANR	7690440	AssignmentExpression	numcomps = img -> numcomps		7690219	0		=			
ANR	7690441	Identifier	numcomps		7690219	0					
ANR	7690442	PtrMemberAccess	img -> numcomps		7690219	1					
ANR	7690443	Identifier	img		7690219	0					
ANR	7690444	Identifier	numcomps		7690219	1					
ANR	7690445	ExpressionStatement	"fprintf ( xmlout , ""      <JP2_Frame Num=\\""%d\\"">\\n"" , snum + 1 )"	1226:4:55423:55487	7690219	24	True				
ANR	7690446	CallExpression	"fprintf ( xmlout , ""      <JP2_Frame Num=\\""%d\\"">\\n"" , snum + 1 )"		7690219	0					
ANR	7690447	Callee	fprintf		7690219	0					
ANR	7690448	Identifier	fprintf		7690219	0					
ANR	7690449	ArgumentList	xmlout		7690219	1					
ANR	7690450	Argument	xmlout		7690219	0					
ANR	7690451	Identifier	xmlout		7690219	0					
ANR	7690452	Argument	"""      <JP2_Frame Num=\\""%d\\"">\\n"""		7690219	1					
ANR	7690453	PrimaryExpression	"""      <JP2_Frame Num=\\""%d\\"">\\n"""		7690219	0					
ANR	7690454	Argument	snum + 1		7690219	2					
ANR	7690455	AdditiveExpression	snum + 1		7690219	0		+			
ANR	7690456	Identifier	snum		7690219	0					
ANR	7690457	PrimaryExpression	1		7690219	1					
ANR	7690458	ExpressionStatement	"fprintf ( xmlout , ""        <MainHeader>\\n"" )"	1227:4:55493:55539	7690219	25	True				
ANR	7690459	CallExpression	"fprintf ( xmlout , ""        <MainHeader>\\n"" )"		7690219	0					
ANR	7690460	Callee	fprintf		7690219	0					
ANR	7690461	Identifier	fprintf		7690219	0					
ANR	7690462	ArgumentList	xmlout		7690219	1					
ANR	7690463	Argument	xmlout		7690219	0					
ANR	7690464	Identifier	xmlout		7690219	0					
ANR	7690465	Argument	"""        <MainHeader>\\n"""		7690219	1					
ANR	7690466	PrimaryExpression	"""        <MainHeader>\\n"""		7690219	0					
ANR	7690467	ExpressionStatement	"fprintf ( xmlout , ""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"" )"	1230:4:55751:55823	7690219	26	True				
ANR	7690468	CallExpression	"fprintf ( xmlout , ""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"" )"		7690219	0					
ANR	7690469	Callee	fprintf		7690219	0					
ANR	7690470	Identifier	fprintf		7690219	0					
ANR	7690471	ArgumentList	xmlout		7690219	1					
ANR	7690472	Argument	xmlout		7690219	0					
ANR	7690473	Identifier	xmlout		7690219	0					
ANR	7690474	Argument	"""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"""		7690219	1					
ANR	7690475	PrimaryExpression	"""          <StartOfCodestream Marker=\\""SOC\\"" />\\n"""		7690219	0					
ANR	7690476	ExpressionStatement	"xml_out_frame_siz ( xmlout , img , cp )"	1232:4:55951:55985	7690219	27	True				
ANR	7690477	CallExpression	"xml_out_frame_siz ( xmlout , img , cp )"		7690219	0					
ANR	7690478	Callee	xml_out_frame_siz		7690219	0					
ANR	7690479	Identifier	xml_out_frame_siz		7690219	0					
ANR	7690480	ArgumentList	xmlout		7690219	1					
ANR	7690481	Argument	xmlout		7690219	0					
ANR	7690482	Identifier	xmlout		7690219	0					
ANR	7690483	Argument	img		7690219	1					
ANR	7690484	Identifier	img		7690219	0					
ANR	7690485	Argument	cp		7690219	2					
ANR	7690486	Identifier	cp		7690219	0					
ANR	7690487	ExpressionStatement	"xml_out_frame_cod ( xmlout , j2k_default_tcp )"	1233:4:56010:56052	7690219	28	True				
ANR	7690488	CallExpression	"xml_out_frame_cod ( xmlout , j2k_default_tcp )"		7690219	0					
ANR	7690489	Callee	xml_out_frame_cod		7690219	0					
ANR	7690490	Identifier	xml_out_frame_cod		7690219	0					
ANR	7690491	ArgumentList	xmlout		7690219	1					
ANR	7690492	Argument	xmlout		7690219	0					
ANR	7690493	Identifier	xmlout		7690219	0					
ANR	7690494	Argument	j2k_default_tcp		7690219	1					
ANR	7690495	Identifier	j2k_default_tcp		7690219	0					
ANR	7690496	ExpressionStatement	"xml_out_frame_coc ( xmlout , j2k_default_tcp , numcomps )"	1234:4:56077:56151	7690219	29	True				
ANR	7690497	CallExpression	"xml_out_frame_coc ( xmlout , j2k_default_tcp , numcomps )"		7690219	0					
ANR	7690498	Callee	xml_out_frame_coc		7690219	0					
ANR	7690499	Identifier	xml_out_frame_coc		7690219	0					
ANR	7690500	ArgumentList	xmlout		7690219	1					
ANR	7690501	Argument	xmlout		7690219	0					
ANR	7690502	Identifier	xmlout		7690219	0					
ANR	7690503	Argument	j2k_default_tcp		7690219	1					
ANR	7690504	Identifier	j2k_default_tcp		7690219	0					
ANR	7690505	Argument	numcomps		7690219	2					
ANR	7690506	Identifier	numcomps		7690219	0					
ANR	7690507	ExpressionStatement	"xml_out_frame_qcd ( xmlout , j2k_default_tcp )"	1236:4:56200:56242	7690219	30	True				
ANR	7690508	CallExpression	"xml_out_frame_qcd ( xmlout , j2k_default_tcp )"		7690219	0					
ANR	7690509	Callee	xml_out_frame_qcd		7690219	0					
ANR	7690510	Identifier	xml_out_frame_qcd		7690219	0					
ANR	7690511	ArgumentList	xmlout		7690219	1					
ANR	7690512	Argument	xmlout		7690219	0					
ANR	7690513	Identifier	xmlout		7690219	0					
ANR	7690514	Argument	j2k_default_tcp		7690219	1					
ANR	7690515	Identifier	j2k_default_tcp		7690219	0					
ANR	7690516	ExpressionStatement	"xml_out_frame_qcc ( xmlout , j2k_default_tcp , numcomps )"	1237:4:56267:56341	7690219	31	True				
ANR	7690517	CallExpression	"xml_out_frame_qcc ( xmlout , j2k_default_tcp , numcomps )"		7690219	0					
ANR	7690518	Callee	xml_out_frame_qcc		7690219	0					
ANR	7690519	Identifier	xml_out_frame_qcc		7690219	0					
ANR	7690520	ArgumentList	xmlout		7690219	1					
ANR	7690521	Argument	xmlout		7690219	0					
ANR	7690522	Identifier	xmlout		7690219	0					
ANR	7690523	Argument	j2k_default_tcp		7690219	1					
ANR	7690524	Identifier	j2k_default_tcp		7690219	0					
ANR	7690525	Argument	numcomps		7690219	2					
ANR	7690526	Identifier	numcomps		7690219	0					
ANR	7690527	ExpressionStatement	"xml_out_frame_rgn ( xmlout , j2k_default_tcp , numcomps )"	1239:4:56390:56464	7690219	32	True				
ANR	7690528	CallExpression	"xml_out_frame_rgn ( xmlout , j2k_default_tcp , numcomps )"		7690219	0					
ANR	7690529	Callee	xml_out_frame_rgn		7690219	0					
ANR	7690530	Identifier	xml_out_frame_rgn		7690219	0					
ANR	7690531	ArgumentList	xmlout		7690219	1					
ANR	7690532	Argument	xmlout		7690219	0					
ANR	7690533	Identifier	xmlout		7690219	0					
ANR	7690534	Argument	j2k_default_tcp		7690219	1					
ANR	7690535	Identifier	j2k_default_tcp		7690219	0					
ANR	7690536	Argument	numcomps		7690219	2					
ANR	7690537	Identifier	numcomps		7690219	0					
ANR	7690538	ExpressionStatement	"xml_out_frame_poc ( xmlout , j2k_default_tcp )"	1241:4:56505:56569	7690219	33	True				
ANR	7690539	CallExpression	"xml_out_frame_poc ( xmlout , j2k_default_tcp )"		7690219	0					
ANR	7690540	Callee	xml_out_frame_poc		7690219	0					
ANR	7690541	Identifier	xml_out_frame_poc		7690219	0					
ANR	7690542	ArgumentList	xmlout		7690219	1					
ANR	7690543	Argument	xmlout		7690219	0					
ANR	7690544	Identifier	xmlout		7690219	0					
ANR	7690545	Argument	j2k_default_tcp		7690219	1					
ANR	7690546	Identifier	j2k_default_tcp		7690219	0					
ANR	7690547	ExpressionStatement	"xml_out_frame_ppm ( xmlout , cp )"	1245:4:56728:56779	7690219	34	True				
ANR	7690548	CallExpression	"xml_out_frame_ppm ( xmlout , cp )"		7690219	0					
ANR	7690549	Callee	xml_out_frame_ppm		7690219	0					
ANR	7690550	Identifier	xml_out_frame_ppm		7690219	0					
ANR	7690551	ArgumentList	xmlout		7690219	1					
ANR	7690552	Argument	xmlout		7690219	0					
ANR	7690553	Identifier	xmlout		7690219	0					
ANR	7690554	Argument	cp		7690219	1					
ANR	7690555	Identifier	cp		7690219	0					
ANR	7690556	ExpressionStatement	xml_out_frame_tlm ( xmlout )	1248:4:56889:56923	7690219	35	True				
ANR	7690557	CallExpression	xml_out_frame_tlm ( xmlout )		7690219	0					
ANR	7690558	Callee	xml_out_frame_tlm		7690219	0					
ANR	7690559	Identifier	xml_out_frame_tlm		7690219	0					
ANR	7690560	ArgumentList	xmlout		7690219	1					
ANR	7690561	Argument	xmlout		7690219	0					
ANR	7690562	Identifier	xmlout		7690219	0					
ANR	7690563	ExpressionStatement	xml_out_frame_plm ( xmlout )	1250:4:56985:57019	7690219	36	True				
ANR	7690564	CallExpression	xml_out_frame_plm ( xmlout )		7690219	0					
ANR	7690565	Callee	xml_out_frame_plm		7690219	0					
ANR	7690566	Identifier	xml_out_frame_plm		7690219	0					
ANR	7690567	ArgumentList	xmlout		7690219	1					
ANR	7690568	Argument	xmlout		7690219	0					
ANR	7690569	Identifier	xmlout		7690219	0					
ANR	7690570	ExpressionStatement	xml_out_frame_crg ( xmlout )	1252:4:57126:57160	7690219	37	True				
ANR	7690571	CallExpression	xml_out_frame_crg ( xmlout )		7690219	0					
ANR	7690572	Callee	xml_out_frame_crg		7690219	0					
ANR	7690573	Identifier	xml_out_frame_crg		7690219	0					
ANR	7690574	ArgumentList	xmlout		7690219	1					
ANR	7690575	Argument	xmlout		7690219	0					
ANR	7690576	Identifier	xmlout		7690219	0					
ANR	7690577	ExpressionStatement	"xml_out_frame_com ( xmlout , j2k_default_tcp )"	1254:4:57231:57295	7690219	38	True				
ANR	7690578	CallExpression	"xml_out_frame_com ( xmlout , j2k_default_tcp )"		7690219	0					
ANR	7690579	Callee	xml_out_frame_com		7690219	0					
ANR	7690580	Identifier	xml_out_frame_com		7690219	0					
ANR	7690581	ArgumentList	xmlout		7690219	1					
ANR	7690582	Argument	xmlout		7690219	0					
ANR	7690583	Identifier	xmlout		7690219	0					
ANR	7690584	Argument	j2k_default_tcp		7690219	1					
ANR	7690585	Identifier	j2k_default_tcp		7690219	0					
ANR	7690586	ExpressionStatement	"fprintf ( xmlout , ""        </MainHeader>\\n"" )"	1257:4:57367:57414	7690219	39	True				
ANR	7690587	CallExpression	"fprintf ( xmlout , ""        </MainHeader>\\n"" )"		7690219	0					
ANR	7690588	Callee	fprintf		7690219	0					
ANR	7690589	Identifier	fprintf		7690219	0					
ANR	7690590	ArgumentList	xmlout		7690219	1					
ANR	7690591	Argument	xmlout		7690219	0					
ANR	7690592	Identifier	xmlout		7690219	0					
ANR	7690593	Argument	"""        </MainHeader>\\n"""		7690219	1					
ANR	7690594	PrimaryExpression	"""        </MainHeader>\\n"""		7690219	0					
ANR	7690595	ExpressionStatement	"fprintf ( xmlout , ""        <TilePartHeaders Count=\\""%d\\"">\\n"" , cp -> tileno_size )"	1260:4:57470:57563	7690219	40	True				
ANR	7690596	CallExpression	"fprintf ( xmlout , ""        <TilePartHeaders Count=\\""%d\\"">\\n"" , cp -> tileno_size )"		7690219	0					
ANR	7690597	Callee	fprintf		7690219	0					
ANR	7690598	Identifier	fprintf		7690219	0					
ANR	7690599	ArgumentList	xmlout		7690219	1					
ANR	7690600	Argument	xmlout		7690219	0					
ANR	7690601	Identifier	xmlout		7690219	0					
ANR	7690602	Argument	"""        <TilePartHeaders Count=\\""%d\\"">\\n"""		7690219	1					
ANR	7690603	PrimaryExpression	"""        <TilePartHeaders Count=\\""%d\\"">\\n"""		7690219	0					
ANR	7690604	Argument	cp -> tileno_size		7690219	2					
ANR	7690605	PtrMemberAccess	cp -> tileno_size		7690219	0					
ANR	7690606	Identifier	cp		7690219	0					
ANR	7690607	Identifier	tileno_size		7690219	1					
ANR	7690608	ForStatement	for ( i = 0 ; i < cp -> tileno_size ; i ++ )		7690219	41					
ANR	7690609	ForInit	i = 0 ;	1262:9:57613:57618	7690219	0	True				
ANR	7690610	AssignmentExpression	i = 0		7690219	0		=			
ANR	7690611	Identifier	i		7690219	0					
ANR	7690612	PrimaryExpression	0		7690219	1					
ANR	7690613	Condition	i < cp -> tileno_size	1262:16:57620:57638	7690219	1	True				
ANR	7690614	RelationalExpression	i < cp -> tileno_size		7690219	0		<			
ANR	7690615	Identifier	i		7690219	0					
ANR	7690616	PtrMemberAccess	cp -> tileno_size		7690219	1					
ANR	7690617	Identifier	cp		7690219	0					
ANR	7690618	Identifier	tileno_size		7690219	1					
ANR	7690619	PostIncDecOperationExpression	i ++	1263:12:57653:57655	7690219	2	True				
ANR	7690620	Identifier	i		7690219	0					
ANR	7690621	IncDec	++		7690219	1					
ANR	7690622	CompoundStatement		90:17:3932:3932	7690219	3					
ANR	7690623	ExpressionStatement	"fprintf ( xmlout , ""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"" , i , cp -> tileno [ i ] )"	1265:8:57827:57932	7690219	0	True				
ANR	7690624	CallExpression	"fprintf ( xmlout , ""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"" , i , cp -> tileno [ i ] )"		7690219	0					
ANR	7690625	Callee	fprintf		7690219	0					
ANR	7690626	Identifier	fprintf		7690219	0					
ANR	7690627	ArgumentList	xmlout		7690219	1					
ANR	7690628	Argument	xmlout		7690219	0					
ANR	7690629	Identifier	xmlout		7690219	0					
ANR	7690630	Argument	"""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"""		7690219	1					
ANR	7690631	PrimaryExpression	"""          <TilePartHeader Num=\\""%d\\"" ID=\\""%d\\"">\\n"""		7690219	0					
ANR	7690632	Argument	i		7690219	2					
ANR	7690633	Identifier	i		7690219	0					
ANR	7690634	Argument	cp -> tileno [ i ]		7690219	3					
ANR	7690635	ArrayIndexing	cp -> tileno [ i ]		7690219	0					
ANR	7690636	PtrMemberAccess	cp -> tileno		7690219	0					
ANR	7690637	Identifier	cp		7690219	0					
ANR	7690638	Identifier	tileno		7690219	1					
ANR	7690639	Identifier	i		7690219	1					
ANR	7690640	ExpressionStatement	"fprintf ( xmlout , ""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"" )"	1267:8:58006:58076	7690219	1	True				
ANR	7690641	CallExpression	"fprintf ( xmlout , ""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"" )"		7690219	0					
ANR	7690642	Callee	fprintf		7690219	0					
ANR	7690643	Identifier	fprintf		7690219	0					
ANR	7690644	ArgumentList	xmlout		7690219	1					
ANR	7690645	Argument	xmlout		7690219	0					
ANR	7690646	Identifier	xmlout		7690219	0					
ANR	7690647	Argument	"""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"""		7690219	1					
ANR	7690648	PrimaryExpression	"""            <StartOfTilePart Marker=\\""SOT\\"" />\\n"""		7690219	0					
ANR	7690649	IfStatement	if ( i == 0 )		7690219	2					
ANR	7690650	Condition	i == 0	1269:12:58200:58205	7690219	0	True				
ANR	7690651	EqualityExpression	i == 0		7690219	0		==			
ANR	7690652	Identifier	i		7690219	0					
ANR	7690653	PrimaryExpression	0		7690219	1					
ANR	7690654	CompoundStatement		96:20:4482:4482	7690219	1					
ANR	7690655	ExpressionStatement	"xml_out_frame_cod ( xmlout , & ( cp -> tcps [ i ] ) )"	1270:12:58222:58263	7690219	0	True				
ANR	7690656	CallExpression	"xml_out_frame_cod ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690657	Callee	xml_out_frame_cod		7690219	0					
ANR	7690658	Identifier	xml_out_frame_cod		7690219	0					
ANR	7690659	ArgumentList	xmlout		7690219	1					
ANR	7690660	Argument	xmlout		7690219	0					
ANR	7690661	Identifier	xmlout		7690219	0					
ANR	7690662	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690663	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690664	UnaryOperator	&		7690219	0					
ANR	7690665	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690666	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690667	Identifier	cp		7690219	0					
ANR	7690668	Identifier	tcps		7690219	1					
ANR	7690669	Identifier	i		7690219	1					
ANR	7690670	ExpressionStatement	"xml_out_frame_coc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1271:12:58307:58388	7690219	1	True				
ANR	7690671	CallExpression	"xml_out_frame_coc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		7690219	0					
ANR	7690672	Callee	xml_out_frame_coc		7690219	0					
ANR	7690673	Identifier	xml_out_frame_coc		7690219	0					
ANR	7690674	ArgumentList	xmlout		7690219	1					
ANR	7690675	Argument	xmlout		7690219	0					
ANR	7690676	Identifier	xmlout		7690219	0					
ANR	7690677	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690678	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690679	UnaryOperator	&		7690219	0					
ANR	7690680	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690681	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690682	Identifier	cp		7690219	0					
ANR	7690683	Identifier	tcps		7690219	1					
ANR	7690684	Identifier	i		7690219	1					
ANR	7690685	Argument	numcomps		7690219	2					
ANR	7690686	Identifier	numcomps		7690219	0					
ANR	7690687	ExpressionStatement	"xml_out_frame_qcd ( xmlout , & ( cp -> tcps [ i ] ) )"	1273:12:58437:58478	7690219	2	True				
ANR	7690688	CallExpression	"xml_out_frame_qcd ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690689	Callee	xml_out_frame_qcd		7690219	0					
ANR	7690690	Identifier	xml_out_frame_qcd		7690219	0					
ANR	7690691	ArgumentList	xmlout		7690219	1					
ANR	7690692	Argument	xmlout		7690219	0					
ANR	7690693	Identifier	xmlout		7690219	0					
ANR	7690694	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690695	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690696	UnaryOperator	&		7690219	0					
ANR	7690697	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690698	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690699	Identifier	cp		7690219	0					
ANR	7690700	Identifier	tcps		7690219	1					
ANR	7690701	Identifier	i		7690219	1					
ANR	7690702	ExpressionStatement	"xml_out_frame_qcc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1274:12:58522:58603	7690219	3	True				
ANR	7690703	CallExpression	"xml_out_frame_qcc ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		7690219	0					
ANR	7690704	Callee	xml_out_frame_qcc		7690219	0					
ANR	7690705	Identifier	xml_out_frame_qcc		7690219	0					
ANR	7690706	ArgumentList	xmlout		7690219	1					
ANR	7690707	Argument	xmlout		7690219	0					
ANR	7690708	Identifier	xmlout		7690219	0					
ANR	7690709	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690710	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690711	UnaryOperator	&		7690219	0					
ANR	7690712	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690713	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690714	Identifier	cp		7690219	0					
ANR	7690715	Identifier	tcps		7690219	1					
ANR	7690716	Identifier	i		7690219	1					
ANR	7690717	Argument	numcomps		7690219	2					
ANR	7690718	Identifier	numcomps		7690219	0					
ANR	7690719	ExpressionStatement	"xml_out_frame_rgn ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"	1276:12:58653:58734	7690219	4	True				
ANR	7690720	CallExpression	"xml_out_frame_rgn ( xmlout , & ( cp -> tcps [ i ] ) , numcomps )"		7690219	0					
ANR	7690721	Callee	xml_out_frame_rgn		7690219	0					
ANR	7690722	Identifier	xml_out_frame_rgn		7690219	0					
ANR	7690723	ArgumentList	xmlout		7690219	1					
ANR	7690724	Argument	xmlout		7690219	0					
ANR	7690725	Identifier	xmlout		7690219	0					
ANR	7690726	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690727	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690728	UnaryOperator	&		7690219	0					
ANR	7690729	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690730	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690731	Identifier	cp		7690219	0					
ANR	7690732	Identifier	tcps		7690219	1					
ANR	7690733	Identifier	i		7690219	1					
ANR	7690734	Argument	numcomps		7690219	2					
ANR	7690735	Identifier	numcomps		7690219	0					
ANR	7690736	ExpressionStatement	"xml_out_frame_poc ( xmlout , & ( cp -> tcps [ i ] ) )"	1279:8:58789:58856	7690219	3	True				
ANR	7690737	CallExpression	"xml_out_frame_poc ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690738	Callee	xml_out_frame_poc		7690219	0					
ANR	7690739	Identifier	xml_out_frame_poc		7690219	0					
ANR	7690740	ArgumentList	xmlout		7690219	1					
ANR	7690741	Argument	xmlout		7690219	0					
ANR	7690742	Identifier	xmlout		7690219	0					
ANR	7690743	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690744	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690745	UnaryOperator	&		7690219	0					
ANR	7690746	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690747	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690748	Identifier	cp		7690219	0					
ANR	7690749	Identifier	tcps		7690219	1					
ANR	7690750	Identifier	i		7690219	1					
ANR	7690751	ExpressionStatement	"xml_out_frame_ppt ( xmlout , & ( cp -> tcps [ i ] ) )"	1282:8:58963:59030	7690219	4	True				
ANR	7690752	CallExpression	"xml_out_frame_ppt ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690753	Callee	xml_out_frame_ppt		7690219	0					
ANR	7690754	Identifier	xml_out_frame_ppt		7690219	0					
ANR	7690755	ArgumentList	xmlout		7690219	1					
ANR	7690756	Argument	xmlout		7690219	0					
ANR	7690757	Identifier	xmlout		7690219	0					
ANR	7690758	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690759	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690760	UnaryOperator	&		7690219	0					
ANR	7690761	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690762	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690763	Identifier	cp		7690219	0					
ANR	7690764	Identifier	tcps		7690219	1					
ANR	7690765	Identifier	i		7690219	1					
ANR	7690766	ExpressionStatement	"xml_out_frame_plt ( xmlout , & ( cp -> tcps [ i ] ) )"	1285:8:59135:59202	7690219	5	True				
ANR	7690767	CallExpression	"xml_out_frame_plt ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690768	Callee	xml_out_frame_plt		7690219	0					
ANR	7690769	Identifier	xml_out_frame_plt		7690219	0					
ANR	7690770	ArgumentList	xmlout		7690219	1					
ANR	7690771	Argument	xmlout		7690219	0					
ANR	7690772	Identifier	xmlout		7690219	0					
ANR	7690773	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690774	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690775	UnaryOperator	&		7690219	0					
ANR	7690776	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690777	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690778	Identifier	cp		7690219	0					
ANR	7690779	Identifier	tcps		7690219	1					
ANR	7690780	Identifier	i		7690219	1					
ANR	7690781	ExpressionStatement	"xml_out_frame_com ( xmlout , & ( cp -> tcps [ i ] ) )"	1287:8:59307:59374	7690219	6	True				
ANR	7690782	CallExpression	"xml_out_frame_com ( xmlout , & ( cp -> tcps [ i ] ) )"		7690219	0					
ANR	7690783	Callee	xml_out_frame_com		7690219	0					
ANR	7690784	Identifier	xml_out_frame_com		7690219	0					
ANR	7690785	ArgumentList	xmlout		7690219	1					
ANR	7690786	Argument	xmlout		7690219	0					
ANR	7690787	Identifier	xmlout		7690219	0					
ANR	7690788	Argument	& ( cp -> tcps [ i ] )		7690219	1					
ANR	7690789	UnaryOperationExpression	& ( cp -> tcps [ i ] )		7690219	0					
ANR	7690790	UnaryOperator	&		7690219	0					
ANR	7690791	ArrayIndexing	cp -> tcps [ i ]		7690219	1					
ANR	7690792	PtrMemberAccess	cp -> tcps		7690219	0					
ANR	7690793	Identifier	cp		7690219	0					
ANR	7690794	Identifier	tcps		7690219	1					
ANR	7690795	Identifier	i		7690219	1					
ANR	7690796	ExpressionStatement	"fprintf ( xmlout , ""            <StartOfData Marker=\\""SOD\\"" />\\n"" )"	1291:8:59599:59665	7690219	7	True				
ANR	7690797	CallExpression	"fprintf ( xmlout , ""            <StartOfData Marker=\\""SOD\\"" />\\n"" )"		7690219	0					
ANR	7690798	Callee	fprintf		7690219	0					
ANR	7690799	Identifier	fprintf		7690219	0					
ANR	7690800	ArgumentList	xmlout		7690219	1					
ANR	7690801	Argument	xmlout		7690219	0					
ANR	7690802	Identifier	xmlout		7690219	0					
ANR	7690803	Argument	"""            <StartOfData Marker=\\""SOD\\"" />\\n"""		7690219	1					
ANR	7690804	PrimaryExpression	"""            <StartOfData Marker=\\""SOD\\"" />\\n"""		7690219	0					
ANR	7690805	IfStatement	if ( notes )		7690219	8					
ANR	7690806	Condition	notes	1292:12:59679:59683	7690219	0	True				
ANR	7690807	Identifier	notes		7690219	0					
ANR	7690808	CompoundStatement		119:19:5960:5960	7690219	1					
ANR	7690809	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"" )"	1293:12:59700:59834	7690219	0	True				
ANR	7690810	CallExpression	"fprintf ( xmlout , ""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"" )"		7690219	0					
ANR	7690811	Callee	fprintf		7690219	0					
ANR	7690812	Identifier	fprintf		7690219	0					
ANR	7690813	ArgumentList	xmlout		7690219	1					
ANR	7690814	Argument	xmlout		7690219	0					
ANR	7690815	Identifier	xmlout		7690219	0					
ANR	7690816	Argument	"""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"""		7690219	1					
ANR	7690817	PrimaryExpression	"""            <!-- Tile-part bitstream, not shown, follows tile-part header and SOD marker. -->\\n"""		7690219	0					
ANR	7690818	ExpressionStatement	"fprintf ( xmlout , ""          </TilePartHeader>\\n"" )"	1296:8:59854:59905	7690219	9	True				
ANR	7690819	CallExpression	"fprintf ( xmlout , ""          </TilePartHeader>\\n"" )"		7690219	0					
ANR	7690820	Callee	fprintf		7690219	0					
ANR	7690821	Identifier	fprintf		7690219	0					
ANR	7690822	ArgumentList	xmlout		7690219	1					
ANR	7690823	Argument	xmlout		7690219	0					
ANR	7690824	Identifier	xmlout		7690219	0					
ANR	7690825	Argument	"""          </TilePartHeader>\\n"""		7690219	1					
ANR	7690826	PrimaryExpression	"""          </TilePartHeader>\\n"""		7690219	0					
ANR	7690827	ExpressionStatement	"fprintf ( xmlout , ""        </TilePartHeaders>\\n"" )"	1298:4:59917:59976	7690219	42	True				
ANR	7690828	CallExpression	"fprintf ( xmlout , ""        </TilePartHeaders>\\n"" )"		7690219	0					
ANR	7690829	Callee	fprintf		7690219	0					
ANR	7690830	Identifier	fprintf		7690219	0					
ANR	7690831	ArgumentList	xmlout		7690219	1					
ANR	7690832	Argument	xmlout		7690219	0					
ANR	7690833	Identifier	xmlout		7690219	0					
ANR	7690834	Argument	"""        </TilePartHeaders>\\n"""		7690219	1					
ANR	7690835	PrimaryExpression	"""        </TilePartHeaders>\\n"""		7690219	0					
ANR	7690836	Statement	IMAGINE	1302:4:60033:60039	7690219	43	True				
ANR	7690837	Statement	the	1302:12:60041:60043	7690219	44	True				
ANR	7690838	Statement	cp	1302:16:60045:60046	7690219	45	True				
ANR	7690839	Statement	object	1302:19:60048:60053	7690219	46	True				
ANR	7690840	Statement	has	1302:26:60055:60057	7690219	47	True				
ANR	7690841	Statement	data	1302:30:60059:60062	7690219	48	True				
ANR	7690842	Statement	to	1302:35:60064:60065	7690219	49	True				
ANR	7690843	Statement	support	1302:38:60067:60073	7690219	50	True				
ANR	7690844	Statement	the	1302:46:60075:60077	7690219	51	True				
ANR	7690845	Statement	following	1302:50:60079:60087	7690219	52	True				
ANR	7690846	Statement	...	1302:59:60088:60090	7690219	53	True				
ANR	7690847	Statement	but	1302:63:60092:60094	7690219	54	True				
ANR	7690848	Statement	we	1302:67:60096:60097	7690219	55	True				
ANR	7690849	Statement	could	1302:70:60099:60103	7690219	56	True				
ANR	7690850	Statement	use	1302:76:60105:60107	7690219	57	True				
ANR	7690851	Statement	an	1302:80:60109:60110	7690219	58	True				
ANR	7690852	ExpressionStatement	"xmlout , & cp"	1303:4:60116:60456	7690219	59	True				
ANR	7690853	Expression	"xmlout , & cp"		7690219	0					
ANR	7690854	Identifier	xmlout		7690219	0					
ANR	7690855	UnaryOperationExpression	& cp		7690219	1					
ANR	7690856	UnaryOperator	&		7690219	0					
ANR	7690857	Identifier	cp		7690219	1					
ANR	7690858	ExpressionStatement	"xml_out_frame_xml ( xmlout , & cp )"	1308:4:60526:60578	7690219	60	True				
ANR	7690859	CallExpression	"xml_out_frame_xml ( xmlout , & cp )"		7690219	0					
ANR	7690860	Callee	xml_out_frame_xml		7690219	0					
ANR	7690861	Identifier	xml_out_frame_xml		7690219	0					
ANR	7690862	ArgumentList	xmlout		7690219	1					
ANR	7690863	Argument	xmlout		7690219	0					
ANR	7690864	Identifier	xmlout		7690219	0					
ANR	7690865	Argument	& cp		7690219	1					
ANR	7690866	UnaryOperationExpression	& cp		7690219	0					
ANR	7690867	UnaryOperator	&		7690219	0					
ANR	7690868	Identifier	cp		7690219	1					
ANR	7690869	ExpressionStatement	"xml_out_frame_uuid ( xmlout , & cp )"	1310:4:60639:60670	7690219	61	True				
ANR	7690870	CallExpression	"xml_out_frame_uuid ( xmlout , & cp )"		7690219	0					
ANR	7690871	Callee	xml_out_frame_uuid		7690219	0					
ANR	7690872	Identifier	xml_out_frame_uuid		7690219	0					
ANR	7690873	ArgumentList	xmlout		7690219	1					
ANR	7690874	Argument	xmlout		7690219	0					
ANR	7690875	Identifier	xmlout		7690219	0					
ANR	7690876	Argument	& cp		7690219	1					
ANR	7690877	UnaryOperationExpression	& cp		7690219	0					
ANR	7690878	UnaryOperator	&		7690219	0					
ANR	7690879	Identifier	cp		7690219	1					
ANR	7690880	ExpressionStatement	"xml_out_frame_uinf ( xmlout , & cp )"	1311:4:60711:60765	7690219	62	True				
ANR	7690881	CallExpression	"xml_out_frame_uinf ( xmlout , & cp )"		7690219	0					
ANR	7690882	Callee	xml_out_frame_uinf		7690219	0					
ANR	7690883	Identifier	xml_out_frame_uinf		7690219	0					
ANR	7690884	ArgumentList	xmlout		7690219	1					
ANR	7690885	Argument	xmlout		7690219	0					
ANR	7690886	Identifier	xmlout		7690219	0					
ANR	7690887	Argument	& cp		7690219	1					
ANR	7690888	UnaryOperationExpression	& cp		7690219	0					
ANR	7690889	UnaryOperator	&		7690219	0					
ANR	7690890	Identifier	cp		7690219	1					
ANR	7690891	ExpressionStatement	"fprintf ( xmlout , ""      </JP2_Frame>\\n"" )"	1315:4:60844:60888	7690219	63	True				
ANR	7690892	CallExpression	"fprintf ( xmlout , ""      </JP2_Frame>\\n"" )"		7690219	0					
ANR	7690893	Callee	fprintf		7690219	0					
ANR	7690894	Identifier	fprintf		7690219	0					
ANR	7690895	ArgumentList	xmlout		7690219	1					
ANR	7690896	Argument	xmlout		7690219	0					
ANR	7690897	Identifier	xmlout		7690219	0					
ANR	7690898	Argument	"""      </JP2_Frame>\\n"""		7690219	1					
ANR	7690899	PrimaryExpression	"""      </JP2_Frame>\\n"""		7690219	0					
ANR	7690900	IfStatement	if ( notes )		7690219	64					
ANR	7690901	Condition	notes	1318:8:60927:60931	7690219	0	True				
ANR	7690902	Identifier	notes		7690219	0					
ANR	7690903	CompoundStatement		145:15:7208:7208	7690219	1					
ANR	7690904	ExpressionStatement	"fprintf ( xmlout , ""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"" )"	1319:8:60944:61075	7690219	0	True				
ANR	7690905	CallExpression	"fprintf ( xmlout , ""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"" )"		7690219	0					
ANR	7690906	Callee	fprintf		7690219	0					
ANR	7690907	Identifier	fprintf		7690219	0					
ANR	7690908	ArgumentList	xmlout		7690219	1					
ANR	7690909	Argument	xmlout		7690219	0					
ANR	7690910	Identifier	xmlout		7690219	0					
ANR	7690911	Argument	"""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"""		7690219	1					
ANR	7690912	PrimaryExpression	"""      <!-- Given the number and size of components, mj2_to_frame would try to convert this -->\\n"""		7690219	0					
ANR	7690913	IfStatement	if ( ( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 ) )		7690219	1					
ANR	7690914	Condition	( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 )	1321:12:61089:61285	7690219	0	True				
ANR	7690915	OrExpression	( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 ) ) || ( img -> numcomps == 1 )		7690219	0		||			
ANR	7690916	AndExpression	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		7690219	0		&&			
ANR	7690917	EqualityExpression	img -> numcomps == 3		7690219	0		==			
ANR	7690918	PtrMemberAccess	img -> numcomps		7690219	0					
ANR	7690919	Identifier	img		7690219	0					
ANR	7690920	Identifier	numcomps		7690219	1					
ANR	7690921	PrimaryExpression	3		7690219	1					
ANR	7690922	AndExpression	( img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		7690219	1		&&			
ANR	7690923	EqualityExpression	img -> comps [ 0 ] . dx == img -> comps [ 1 ] . dx / 2		7690219	0		==			
ANR	7690924	MemberAccess	img -> comps [ 0 ] . dx		7690219	0					
ANR	7690925	ArrayIndexing	img -> comps [ 0 ]		7690219	0					
ANR	7690926	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690927	Identifier	img		7690219	0					
ANR	7690928	Identifier	comps		7690219	1					
ANR	7690929	PrimaryExpression	0		7690219	1					
ANR	7690930	Identifier	dx		7690219	1					
ANR	7690931	MultiplicativeExpression	img -> comps [ 1 ] . dx / 2		7690219	1		/			
ANR	7690932	MemberAccess	img -> comps [ 1 ] . dx		7690219	0					
ANR	7690933	ArrayIndexing	img -> comps [ 1 ]		7690219	0					
ANR	7690934	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690935	Identifier	img		7690219	0					
ANR	7690936	Identifier	comps		7690219	1					
ANR	7690937	PrimaryExpression	1		7690219	1					
ANR	7690938	Identifier	dx		7690219	1					
ANR	7690939	PrimaryExpression	2		7690219	1					
ANR	7690940	AndExpression	( img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2 ) && ( img -> comps [ 0 ] . dx == 1 )		7690219	1		&&			
ANR	7690941	EqualityExpression	img -> comps [ 0 ] . dx == img -> comps [ 2 ] . dx / 2		7690219	0		==			
ANR	7690942	MemberAccess	img -> comps [ 0 ] . dx		7690219	0					
ANR	7690943	ArrayIndexing	img -> comps [ 0 ]		7690219	0					
ANR	7690944	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690945	Identifier	img		7690219	0					
ANR	7690946	Identifier	comps		7690219	1					
ANR	7690947	PrimaryExpression	0		7690219	1					
ANR	7690948	Identifier	dx		7690219	1					
ANR	7690949	MultiplicativeExpression	img -> comps [ 2 ] . dx / 2		7690219	1		/			
ANR	7690950	MemberAccess	img -> comps [ 2 ] . dx		7690219	0					
ANR	7690951	ArrayIndexing	img -> comps [ 2 ]		7690219	0					
ANR	7690952	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690953	Identifier	img		7690219	0					
ANR	7690954	Identifier	comps		7690219	1					
ANR	7690955	PrimaryExpression	2		7690219	1					
ANR	7690956	Identifier	dx		7690219	1					
ANR	7690957	PrimaryExpression	2		7690219	1					
ANR	7690958	EqualityExpression	img -> comps [ 0 ] . dx == 1		7690219	1		==			
ANR	7690959	MemberAccess	img -> comps [ 0 ] . dx		7690219	0					
ANR	7690960	ArrayIndexing	img -> comps [ 0 ]		7690219	0					
ANR	7690961	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690962	Identifier	img		7690219	0					
ANR	7690963	Identifier	comps		7690219	1					
ANR	7690964	PrimaryExpression	0		7690219	1					
ANR	7690965	Identifier	dx		7690219	1					
ANR	7690966	PrimaryExpression	1		7690219	1					
ANR	7690967	EqualityExpression	img -> numcomps == 1		7690219	1		==			
ANR	7690968	PtrMemberAccess	img -> numcomps		7690219	0					
ANR	7690969	Identifier	img		7690219	0					
ANR	7690970	Identifier	numcomps		7690219	1					
ANR	7690971	PrimaryExpression	1		7690219	1					
ANR	7690972	CompoundStatement		150:41:7562:7562	7690219	1					
ANR	7690973	ExpressionStatement	"fprintf ( xmlout , ""      <!-- file to a YUV movie in the normal manner. -->\\n"" )"	1324:12:61302:61380	7690219	0	True				
ANR	7690974	CallExpression	"fprintf ( xmlout , ""      <!-- file to a YUV movie in the normal manner. -->\\n"" )"		7690219	0					
ANR	7690975	Callee	fprintf		7690219	0					
ANR	7690976	Identifier	fprintf		7690219	0					
ANR	7690977	ArgumentList	xmlout		7690219	1					
ANR	7690978	Argument	xmlout		7690219	0					
ANR	7690979	Identifier	xmlout		7690219	0					
ANR	7690980	Argument	"""      <!-- file to a YUV movie in the normal manner. -->\\n"""		7690219	1					
ANR	7690981	PrimaryExpression	"""      <!-- file to a YUV movie in the normal manner. -->\\n"""		7690219	0					
ANR	7690982	ElseStatement	else		7690219	0					
ANR	7690983	IfStatement	if ( ( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 ) )		7690219	0					
ANR	7690984	Condition	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )	1325:19:61401:61539	7690219	0	True				
ANR	7690985	AndExpression	( img -> numcomps == 3 ) && ( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		7690219	0		&&			
ANR	7690986	EqualityExpression	img -> numcomps == 3		7690219	0		==			
ANR	7690987	PtrMemberAccess	img -> numcomps		7690219	0					
ANR	7690988	Identifier	img		7690219	0					
ANR	7690989	Identifier	numcomps		7690219	1					
ANR	7690990	PrimaryExpression	3		7690219	1					
ANR	7690991	AndExpression	( img -> comps [ 0 ] . dx == 1 ) && ( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		7690219	1		&&			
ANR	7690992	EqualityExpression	img -> comps [ 0 ] . dx == 1		7690219	0		==			
ANR	7690993	MemberAccess	img -> comps [ 0 ] . dx		7690219	0					
ANR	7690994	ArrayIndexing	img -> comps [ 0 ]		7690219	0					
ANR	7690995	PtrMemberAccess	img -> comps		7690219	0					
ANR	7690996	Identifier	img		7690219	0					
ANR	7690997	Identifier	comps		7690219	1					
ANR	7690998	PrimaryExpression	0		7690219	1					
ANR	7690999	Identifier	dx		7690219	1					
ANR	7691000	PrimaryExpression	1		7690219	1					
ANR	7691001	AndExpression	( img -> comps [ 1 ] . dx == 1 ) && ( img -> comps [ 2 ] . dx == 1 )		7690219	1		&&			
ANR	7691002	EqualityExpression	img -> comps [ 1 ] . dx == 1		7690219	0		==			
ANR	7691003	MemberAccess	img -> comps [ 1 ] . dx		7690219	0					
ANR	7691004	ArrayIndexing	img -> comps [ 1 ]		7690219	0					
ANR	7691005	PtrMemberAccess	img -> comps		7690219	0					
ANR	7691006	Identifier	img		7690219	0					
ANR	7691007	Identifier	comps		7690219	1					
ANR	7691008	PrimaryExpression	1		7690219	1					
ANR	7691009	Identifier	dx		7690219	1					
ANR	7691010	PrimaryExpression	1		7690219	1					
ANR	7691011	EqualityExpression	img -> comps [ 2 ] . dx == 1		7690219	1		==			
ANR	7691012	MemberAccess	img -> comps [ 2 ] . dx		7690219	0					
ANR	7691013	ArrayIndexing	img -> comps [ 2 ]		7690219	0					
ANR	7691014	PtrMemberAccess	img -> comps		7690219	0					
ANR	7691015	Identifier	img		7690219	0					
ANR	7691016	Identifier	comps		7690219	1					
ANR	7691017	PrimaryExpression	2		7690219	1					
ANR	7691018	Identifier	dx		7690219	1					
ANR	7691019	PrimaryExpression	1		7690219	1					
ANR	7691020	CompoundStatement		154:45:7817:7817	7690219	1					
ANR	7691021	ExpressionStatement	"fprintf ( xmlout , ""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"" )"	1328:12:61589:61667	7690219	0	True				
ANR	7691022	CallExpression	"fprintf ( xmlout , ""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"" )"		7690219	0					
ANR	7691023	Callee	fprintf		7690219	0					
ANR	7691024	Identifier	fprintf		7690219	0					
ANR	7691025	ArgumentList	xmlout		7690219	1					
ANR	7691026	Argument	xmlout		7690219	0					
ANR	7691027	Identifier	xmlout		7690219	0					
ANR	7691028	Argument	"""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"""		7690219	1					
ANR	7691029	PrimaryExpression	"""      <!-- YUV 4:4:4 file to a series of .bmp files. -->\\n"""		7690219	0					
ANR	7691030	ElseStatement	else		7690219	0					
ANR	7691031	CompoundStatement		156:15:7958:7958	7690219	0					
ANR	7691032	ExpressionStatement	"fprintf ( xmlout , ""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"" )"	1330:12:61698:61830	7690219	0	True				
ANR	7691033	CallExpression	"fprintf ( xmlout , ""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"" )"		7690219	0					
ANR	7691034	Callee	fprintf		7690219	0					
ANR	7691035	Identifier	fprintf		7690219	0					
ANR	7691036	ArgumentList	xmlout		7690219	1					
ANR	7691037	Argument	xmlout		7690219	0					
ANR	7691038	Identifier	xmlout		7690219	0					
ANR	7691039	Argument	"""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"""		7690219	1					
ANR	7691040	PrimaryExpression	"""      <!-- file whose image component dimension are unknown, to a series of .j2k files. -->\\n"""		7690219	0					
ANR	7691041	ExpressionStatement	opj_destroy_decompress ( dinfo )	1335:4:61853:61882	7690219	65	True				
ANR	7691042	CallExpression	opj_destroy_decompress ( dinfo )		7690219	0					
ANR	7691043	Callee	opj_destroy_decompress		7690219	0					
ANR	7691044	Identifier	opj_destroy_decompress		7690219	0					
ANR	7691045	ArgumentList	dinfo		7690219	1					
ANR	7691046	Argument	dinfo		7690219	0					
ANR	7691047	Identifier	dinfo		7690219	0					
ANR	7691048	ExpressionStatement	opj_cio_close ( cio )	1336:4:61888:61906	7690219	66	True				
ANR	7691049	CallExpression	opj_cio_close ( cio )		7690219	0					
ANR	7691050	Callee	opj_cio_close		7690219	0					
ANR	7691051	Identifier	opj_cio_close		7690219	0					
ANR	7691052	ArgumentList	cio		7690219	1					
ANR	7691053	Argument	cio		7690219	0					
ANR	7691054	Identifier	cio		7690219	0					
ANR	7691055	ExpressionStatement	free ( frame_codestream )	1337:4:61912:61934	7690219	67	True				
ANR	7691056	CallExpression	free ( frame_codestream )		7690219	0					
ANR	7691057	Callee	free		7690219	0					
ANR	7691058	Identifier	free		7690219	0					
ANR	7691059	ArgumentList	frame_codestream		7690219	1					
ANR	7691060	Argument	frame_codestream		7690219	0					
ANR	7691061	Identifier	frame_codestream		7690219	0					
ANR	7691062	ReturnStatement	return 0 ;	1339:4:61941:61949	7690219	68	True				
ANR	7691063	PrimaryExpression	0		7690219	0					
ANR	7691064	ReturnType	int		7690219	1					
ANR	7691065	Identifier	xml_out_frame		7690219	2					
ANR	7691066	ParameterList	"FILE * file , FILE * xmlout , mj2_sample_t * sample , unsigned int snum , opj_event_mgr_t * event_mgr"		7690219	3					
ANR	7691067	Parameter	FILE * file	1172:18:53612:53621	7690219	0	True				
ANR	7691068	ParameterType	FILE *		7690219	0					
ANR	7691069	Identifier	file		7690219	1					
ANR	7691070	Parameter	FILE * xmlout	1172:30:53624:53635	7690219	1	True				
ANR	7691071	ParameterType	FILE *		7690219	0					
ANR	7691072	Identifier	xmlout		7690219	1					
ANR	7691073	Parameter	mj2_sample_t * sample	1172:44:53638:53657	7690219	2	True				
ANR	7691074	ParameterType	mj2_sample_t *		7690219	0					
ANR	7691075	Identifier	sample		7690219	1					
ANR	7691076	Parameter	unsigned int snum	1173:18:53678:53694	7690219	3	True				
ANR	7691077	ParameterType	unsigned int		7690219	0					
ANR	7691078	Identifier	snum		7690219	1					
ANR	7691079	Parameter	opj_event_mgr_t * event_mgr	1173:37:53697:53722	7690219	4	True				
ANR	7691080	ParameterType	opj_event_mgr_t *		7690219	0					
ANR	7691081	Identifier	event_mgr		7690219	1					
ANR	7691082	CFGEntryNode	ENTRY		7690219		True				
ANR	7691083	CFGExitNode	EXIT		7690219		True				
ANR	7691084	Symbol	j2k -> cp		7690219						
ANR	7691085	Symbol	notes		7690219						
ANR	7691086	Symbol	snum		7690219						
ANR	7691087	Symbol	* dinfo		7690219						
ANR	7691088	Symbol	dinfo -> j2k_handle		7690219						
ANR	7691089	Symbol	* img		7690219						
ANR	7691090	Symbol	opj_decode		7690219						
ANR	7691091	Symbol	event_mgr		7690219						
ANR	7691092	Symbol	* * img		7690219						
ANR	7691093	Symbol	DECODE_ALL_BUT_PACKETS		7690219						
ANR	7691094	Symbol	dinfo		7690219						
ANR	7691095	Symbol	img -> comps		7690219						
ANR	7691096	Symbol	NULL		7690219						
ANR	7691097	Symbol	sample -> sample_size		7690219						
ANR	7691098	Symbol	opj_create_decompress		7690219						
ANR	7691099	Symbol	parameters . cp_limit_decoding		7690219						
ANR	7691100	Symbol	stderr		7690219						
ANR	7691101	Symbol	xmlout		7690219						
ANR	7691102	Symbol	* cp		7690219						
ANR	7691103	Symbol	j2k -> default_tcp		7690219						
ANR	7691104	Symbol	* j2k		7690219						
ANR	7691105	Symbol	img -> comps [ 2 ] . dx		7690219						
ANR	7691106	Symbol	cp -> tcps		7690219						
ANR	7691107	Symbol	img -> numcomps		7690219						
ANR	7691108	Symbol	& cp		7690219						
ANR	7691109	Symbol	sample -> offset		7690219						
ANR	7691110	Symbol	img -> comps [ 0 ] . dx		7690219						
ANR	7691111	Symbol	* img -> comps		7690219						
ANR	7691112	Symbol	parameters		7690219						
ANR	7691113	Symbol	img		7690219						
ANR	7691114	Symbol	cio		7690219						
ANR	7691115	Symbol	j2k_default_tcp		7690219						
ANR	7691116	Symbol	file		7690219						
ANR	7691117	Symbol	* * cp		7690219						
ANR	7691118	Symbol	numcomps		7690219						
ANR	7691119	Symbol	* sample		7690219						
ANR	7691120	Symbol	SEEK_SET		7690219						
ANR	7691121	Symbol	malloc		7690219						
ANR	7691122	Symbol	j2k		7690219						
ANR	7691123	Symbol	& parameters		7690219						
ANR	7691124	Symbol	opj_cio_open		7690219						
ANR	7691125	Symbol	i		7690219						
ANR	7691126	Symbol	cp -> tileno_size		7690219						
ANR	7691127	Symbol	sample		7690219						
ANR	7691128	Symbol	cp		7690219						
ANR	7691129	Symbol	frame_codestream		7690219						
ANR	7691130	Symbol	CODEC_J2K		7690219						
ANR	7691131	Symbol	* i		7690219						
ANR	7691132	Symbol	* cp -> tileno		7690219						
ANR	7691133	Symbol	cp -> tileno		7690219						
ANR	7691134	Symbol	img -> comps [ 1 ] . dx		7690219						
ANR	7691135	Function	int16_to_3packedchars	1344:0:61975:62301							
ANR	7691136	FunctionDef	"int16_to_3packedchars (short int value , char * buf)"		7691135	0					
ANR	7691137	CompoundStatement		1345:0:62030:62301	7691135	0					
ANR	7691138	IdentifierDeclStatement	int i ;	1348:4:62166:62171	7691135	0	True				
ANR	7691139	IdentifierDecl	i		7691135	0					
ANR	7691140	IdentifierDeclType	int		7691135	0					
ANR	7691141	Identifier	i		7691135	1					
ANR	7691142	ForStatement	for ( i = 2 ; i >= 0 ; i -- )		7691135	1					
ANR	7691143	ForInit	i = 2 ;	1349:9:62182:62187	7691135	0	True				
ANR	7691144	AssignmentExpression	i = 2		7691135	0		=			
ANR	7691145	Identifier	i		7691135	0					
ANR	7691146	PrimaryExpression	2		7691135	1					
ANR	7691147	Condition	i >= 0	1349:16:62189:62194	7691135	1	True				
ANR	7691148	RelationalExpression	i >= 0		7691135	0		>=			
ANR	7691149	Identifier	i		7691135	0					
ANR	7691150	PrimaryExpression	0		7691135	1					
ANR	7691151	PostIncDecOperationExpression	i --	1349:24:62197:62199	7691135	2	True				
ANR	7691152	Identifier	i		7691135	0					
ANR	7691153	IncDec	--		7691135	1					
ANR	7691154	CompoundStatement		5:29:171:171	7691135	3					
ANR	7691155	ExpressionStatement	buf [ i ] = ( value & 0x001f ) + 0x60	1350:8:62212:62244	7691135	0	True				
ANR	7691156	AssignmentExpression	buf [ i ] = ( value & 0x001f ) + 0x60		7691135	0		=			
ANR	7691157	ArrayIndexing	buf [ i ]		7691135	0					
ANR	7691158	Identifier	buf		7691135	0					
ANR	7691159	Identifier	i		7691135	1					
ANR	7691160	AdditiveExpression	( value & 0x001f ) + 0x60		7691135	1		+			
ANR	7691161	BitAndExpression	value & 0x001f		7691135	0		&			
ANR	7691162	Identifier	value		7691135	0					
ANR	7691163	PrimaryExpression	0x001f		7691135	1					
ANR	7691164	PrimaryExpression	0x60		7691135	1					
ANR	7691165	ExpressionStatement	value = ( value >> 5 )	1351:8:62254:62274	7691135	1	True				
ANR	7691166	AssignmentExpression	value = ( value >> 5 )		7691135	0		=			
ANR	7691167	Identifier	value		7691135	0					
ANR	7691168	ShiftExpression	value >> 5		7691135	1		>>			
ANR	7691169	Identifier	value		7691135	0					
ANR	7691170	PrimaryExpression	5		7691135	1					
ANR	7691171	ExpressionStatement	buf [ 3 ] = '\\0'	1353:4:62286:62299	7691135	2	True				
ANR	7691172	AssignmentExpression	buf [ 3 ] = '\\0'		7691135	0		=			
ANR	7691173	ArrayIndexing	buf [ 3 ]		7691135	0					
ANR	7691174	Identifier	buf		7691135	0					
ANR	7691175	PrimaryExpression	3		7691135	1					
ANR	7691176	PrimaryExpression	'\\0'		7691135	1					
ANR	7691177	ReturnType	void		7691135	1					
ANR	7691178	Identifier	int16_to_3packedchars		7691135	2					
ANR	7691179	ParameterList	"short int value , char * buf"		7691135	3					
ANR	7691180	Parameter	short int value	1344:27:62002:62016	7691135	0	True				
ANR	7691181	ParameterType	short int		7691135	0					
ANR	7691182	Identifier	value		7691135	1					
ANR	7691183	Parameter	char * buf	1344:44:62019:62027	7691135	1	True				
ANR	7691184	ParameterType	char *		7691135	0					
ANR	7691185	Identifier	buf		7691135	1					
ANR	7691186	CFGEntryNode	ENTRY		7691135		True				
ANR	7691187	CFGExitNode	EXIT		7691135		True				
ANR	7691188	Symbol	buf		7691135						
ANR	7691189	Symbol	* buf		7691135						
ANR	7691190	Symbol	* i		7691135						
ANR	7691191	Symbol	i		7691135						
ANR	7691192	Symbol	value		7691135						
ANR	7691193	Function	xml_out_frame_siz	1358:0:62325:66501							
ANR	7691194	FunctionDef	"xml_out_frame_siz (FILE * xmlout , opj_image_t * img , opj_cp_t * cp)"		7691193	0					
ANR	7691195	CompoundStatement		1359:0:62394:66501	7691193	0					
ANR	7691196	IdentifierDeclStatement	opj_image_comp_t * comp ;	1360:4:62400:62422	7691193	0	True				
ANR	7691197	IdentifierDecl	* comp		7691193	0					
ANR	7691198	IdentifierDeclType	opj_image_comp_t *		7691193	0					
ANR	7691199	Identifier	comp		7691193	1					
ANR	7691200	IdentifierDeclStatement	int i ;	1361:4:62428:62433	7691193	1	True				
ANR	7691201	IdentifierDecl	i		7691193	0					
ANR	7691202	IdentifierDeclType	int		7691193	0					
ANR	7691203	Identifier	i		7691193	1					
ANR	7691204	ExpressionStatement	"fprintf ( xmlout , ""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"" )"	1363:4:62440:62507	7691193	2	True				
ANR	7691205	CallExpression	"fprintf ( xmlout , ""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"" )"		7691193	0					
ANR	7691206	Callee	fprintf		7691193	0					
ANR	7691207	Identifier	fprintf		7691193	0					
ANR	7691208	ArgumentList	xmlout		7691193	1					
ANR	7691209	Argument	xmlout		7691193	0					
ANR	7691210	Identifier	xmlout		7691193	0					
ANR	7691211	Argument	"""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"""		7691193	1					
ANR	7691212	PrimaryExpression	"""          <ImageAndFileSize Marker=\\""SIZ\\"">\\n"""		7691193	0					
ANR	7691213	ExpressionStatement	"fprintf ( xmlout , ""            <Xsiz>%d</Xsiz>\\n"" , img -> x1 )"	1366:4:62598:62658	7691193	3	True				
ANR	7691214	CallExpression	"fprintf ( xmlout , ""            <Xsiz>%d</Xsiz>\\n"" , img -> x1 )"		7691193	0					
ANR	7691215	Callee	fprintf		7691193	0					
ANR	7691216	Identifier	fprintf		7691193	0					
ANR	7691217	ArgumentList	xmlout		7691193	1					
ANR	7691218	Argument	xmlout		7691193	0					
ANR	7691219	Identifier	xmlout		7691193	0					
ANR	7691220	Argument	"""            <Xsiz>%d</Xsiz>\\n"""		7691193	1					
ANR	7691221	PrimaryExpression	"""            <Xsiz>%d</Xsiz>\\n"""		7691193	0					
ANR	7691222	Argument	img -> x1		7691193	2					
ANR	7691223	PtrMemberAccess	img -> x1		7691193	0					
ANR	7691224	Identifier	img		7691193	0					
ANR	7691225	Identifier	x1		7691193	1					
ANR	7691226	ExpressionStatement	"fprintf ( xmlout , ""            <Ysiz>%d</Ysiz>\\n"" , img -> y1 )"	1367:4:62664:62724	7691193	4	True				
ANR	7691227	CallExpression	"fprintf ( xmlout , ""            <Ysiz>%d</Ysiz>\\n"" , img -> y1 )"		7691193	0					
ANR	7691228	Callee	fprintf		7691193	0					
ANR	7691229	Identifier	fprintf		7691193	0					
ANR	7691230	ArgumentList	xmlout		7691193	1					
ANR	7691231	Argument	xmlout		7691193	0					
ANR	7691232	Identifier	xmlout		7691193	0					
ANR	7691233	Argument	"""            <Ysiz>%d</Ysiz>\\n"""		7691193	1					
ANR	7691234	PrimaryExpression	"""            <Ysiz>%d</Ysiz>\\n"""		7691193	0					
ANR	7691235	Argument	img -> y1		7691193	2					
ANR	7691236	PtrMemberAccess	img -> y1		7691193	0					
ANR	7691237	Identifier	img		7691193	0					
ANR	7691238	Identifier	y1		7691193	1					
ANR	7691239	IfStatement	if ( notes )		7691193	5					
ANR	7691240	Condition	notes	1368:8:62734:62738	7691193	0	True				
ANR	7691241	Identifier	notes		7691193	0					
ANR	7691242	CompoundStatement		10:15:346:346	7691193	1					
ANR	7691243	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"" )"	1369:8:62751:62854	7691193	0	True				
ANR	7691244	CallExpression	"fprintf ( xmlout , ""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"" )"		7691193	0					
ANR	7691245	Callee	fprintf		7691193	0					
ANR	7691246	Identifier	fprintf		7691193	0					
ANR	7691247	ArgumentList	xmlout		7691193	1					
ANR	7691248	Argument	xmlout		7691193	0					
ANR	7691249	Identifier	xmlout		7691193	0					
ANR	7691250	Argument	"""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"""		7691193	1					
ANR	7691251	PrimaryExpression	"""            <!-- Xsiz, Ysiz is the size of the reference grid. -->\\n"""		7691193	0					
ANR	7691252	ExpressionStatement	"fprintf ( xmlout , ""            <XOsiz>%d</XOsiz>\\n"" , img -> x0 )"	1372:4:62866:62928	7691193	6	True				
ANR	7691253	CallExpression	"fprintf ( xmlout , ""            <XOsiz>%d</XOsiz>\\n"" , img -> x0 )"		7691193	0					
ANR	7691254	Callee	fprintf		7691193	0					
ANR	7691255	Identifier	fprintf		7691193	0					
ANR	7691256	ArgumentList	xmlout		7691193	1					
ANR	7691257	Argument	xmlout		7691193	0					
ANR	7691258	Identifier	xmlout		7691193	0					
ANR	7691259	Argument	"""            <XOsiz>%d</XOsiz>\\n"""		7691193	1					
ANR	7691260	PrimaryExpression	"""            <XOsiz>%d</XOsiz>\\n"""		7691193	0					
ANR	7691261	Argument	img -> x0		7691193	2					
ANR	7691262	PtrMemberAccess	img -> x0		7691193	0					
ANR	7691263	Identifier	img		7691193	0					
ANR	7691264	Identifier	x0		7691193	1					
ANR	7691265	ExpressionStatement	"fprintf ( xmlout , ""            <YOsiz>%d</YOsiz>\\n"" , img -> y0 )"	1373:4:62934:62996	7691193	7	True				
ANR	7691266	CallExpression	"fprintf ( xmlout , ""            <YOsiz>%d</YOsiz>\\n"" , img -> y0 )"		7691193	0					
ANR	7691267	Callee	fprintf		7691193	0					
ANR	7691268	Identifier	fprintf		7691193	0					
ANR	7691269	ArgumentList	xmlout		7691193	1					
ANR	7691270	Argument	xmlout		7691193	0					
ANR	7691271	Identifier	xmlout		7691193	0					
ANR	7691272	Argument	"""            <YOsiz>%d</YOsiz>\\n"""		7691193	1					
ANR	7691273	PrimaryExpression	"""            <YOsiz>%d</YOsiz>\\n"""		7691193	0					
ANR	7691274	Argument	img -> y0		7691193	2					
ANR	7691275	PtrMemberAccess	img -> y0		7691193	0					
ANR	7691276	Identifier	img		7691193	0					
ANR	7691277	Identifier	y0		7691193	1					
ANR	7691278	IfStatement	if ( notes )		7691193	8					
ANR	7691279	Condition	notes	1374:8:63006:63010	7691193	0	True				
ANR	7691280	Identifier	notes		7691193	0					
ANR	7691281	CompoundStatement		16:15:618:618	7691193	1					
ANR	7691282	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"" )"	1375:8:63023:63139	7691193	0	True				
ANR	7691283	CallExpression	"fprintf ( xmlout , ""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"" )"		7691193	0					
ANR	7691284	Callee	fprintf		7691193	0					
ANR	7691285	Identifier	fprintf		7691193	0					
ANR	7691286	ArgumentList	xmlout		7691193	1					
ANR	7691287	Argument	xmlout		7691193	0					
ANR	7691288	Identifier	xmlout		7691193	0					
ANR	7691289	Argument	"""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"""		7691193	1					
ANR	7691290	PrimaryExpression	"""            <!-- XOsiz, YOsiz are offsets from grid origin to image origin. -->\\n"""		7691193	0					
ANR	7691291	ExpressionStatement	"fprintf ( xmlout , ""            <XTsiz>%d</XTsiz>\\n"" , cp -> tdx )"	1378:4:63151:63213	7691193	9	True				
ANR	7691292	CallExpression	"fprintf ( xmlout , ""            <XTsiz>%d</XTsiz>\\n"" , cp -> tdx )"		7691193	0					
ANR	7691293	Callee	fprintf		7691193	0					
ANR	7691294	Identifier	fprintf		7691193	0					
ANR	7691295	ArgumentList	xmlout		7691193	1					
ANR	7691296	Argument	xmlout		7691193	0					
ANR	7691297	Identifier	xmlout		7691193	0					
ANR	7691298	Argument	"""            <XTsiz>%d</XTsiz>\\n"""		7691193	1					
ANR	7691299	PrimaryExpression	"""            <XTsiz>%d</XTsiz>\\n"""		7691193	0					
ANR	7691300	Argument	cp -> tdx		7691193	2					
ANR	7691301	PtrMemberAccess	cp -> tdx		7691193	0					
ANR	7691302	Identifier	cp		7691193	0					
ANR	7691303	Identifier	tdx		7691193	1					
ANR	7691304	ExpressionStatement	"fprintf ( xmlout , ""            <YTsiz>%d</YTsiz>\\n"" , cp -> tdy )"	1379:4:63219:63281	7691193	10	True				
ANR	7691305	CallExpression	"fprintf ( xmlout , ""            <YTsiz>%d</YTsiz>\\n"" , cp -> tdy )"		7691193	0					
ANR	7691306	Callee	fprintf		7691193	0					
ANR	7691307	Identifier	fprintf		7691193	0					
ANR	7691308	ArgumentList	xmlout		7691193	1					
ANR	7691309	Argument	xmlout		7691193	0					
ANR	7691310	Identifier	xmlout		7691193	0					
ANR	7691311	Argument	"""            <YTsiz>%d</YTsiz>\\n"""		7691193	1					
ANR	7691312	PrimaryExpression	"""            <YTsiz>%d</YTsiz>\\n"""		7691193	0					
ANR	7691313	Argument	cp -> tdy		7691193	2					
ANR	7691314	PtrMemberAccess	cp -> tdy		7691193	0					
ANR	7691315	Identifier	cp		7691193	0					
ANR	7691316	Identifier	tdy		7691193	1					
ANR	7691317	IfStatement	if ( notes )		7691193	11					
ANR	7691318	Condition	notes	1380:8:63291:63295	7691193	0	True				
ANR	7691319	Identifier	notes		7691193	0					
ANR	7691320	CompoundStatement		22:15:903:903	7691193	1					
ANR	7691321	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"" )"	1381:8:63308:63428	7691193	0	True				
ANR	7691322	CallExpression	"fprintf ( xmlout , ""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"" )"		7691193	0					
ANR	7691323	Callee	fprintf		7691193	0					
ANR	7691324	Identifier	fprintf		7691193	0					
ANR	7691325	ArgumentList	xmlout		7691193	1					
ANR	7691326	Argument	xmlout		7691193	0					
ANR	7691327	Identifier	xmlout		7691193	0					
ANR	7691328	Argument	"""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"""		7691193	1					
ANR	7691329	PrimaryExpression	"""            <!-- XTsiz, YTsiz is the size of one tile with respect to the grid. -->\\n"""		7691193	0					
ANR	7691330	ExpressionStatement	"fprintf ( xmlout , ""            <XTOsiz>%d</XTOsiz>\\n"" , cp -> tx0 )"	1384:4:63440:63504	7691193	12	True				
ANR	7691331	CallExpression	"fprintf ( xmlout , ""            <XTOsiz>%d</XTOsiz>\\n"" , cp -> tx0 )"		7691193	0					
ANR	7691332	Callee	fprintf		7691193	0					
ANR	7691333	Identifier	fprintf		7691193	0					
ANR	7691334	ArgumentList	xmlout		7691193	1					
ANR	7691335	Argument	xmlout		7691193	0					
ANR	7691336	Identifier	xmlout		7691193	0					
ANR	7691337	Argument	"""            <XTOsiz>%d</XTOsiz>\\n"""		7691193	1					
ANR	7691338	PrimaryExpression	"""            <XTOsiz>%d</XTOsiz>\\n"""		7691193	0					
ANR	7691339	Argument	cp -> tx0		7691193	2					
ANR	7691340	PtrMemberAccess	cp -> tx0		7691193	0					
ANR	7691341	Identifier	cp		7691193	0					
ANR	7691342	Identifier	tx0		7691193	1					
ANR	7691343	ExpressionStatement	"fprintf ( xmlout , ""            <YTOsiz>%d</YTOsiz>\\n"" , cp -> ty0 )"	1385:4:63510:63574	7691193	13	True				
ANR	7691344	CallExpression	"fprintf ( xmlout , ""            <YTOsiz>%d</YTOsiz>\\n"" , cp -> ty0 )"		7691193	0					
ANR	7691345	Callee	fprintf		7691193	0					
ANR	7691346	Identifier	fprintf		7691193	0					
ANR	7691347	ArgumentList	xmlout		7691193	1					
ANR	7691348	Argument	xmlout		7691193	0					
ANR	7691349	Identifier	xmlout		7691193	0					
ANR	7691350	Argument	"""            <YTOsiz>%d</YTOsiz>\\n"""		7691193	1					
ANR	7691351	PrimaryExpression	"""            <YTOsiz>%d</YTOsiz>\\n"""		7691193	0					
ANR	7691352	Argument	cp -> ty0		7691193	2					
ANR	7691353	PtrMemberAccess	cp -> ty0		7691193	0					
ANR	7691354	Identifier	cp		7691193	0					
ANR	7691355	Identifier	ty0		7691193	1					
ANR	7691356	IfStatement	if ( notes )		7691193	14					
ANR	7691357	Condition	notes	1386:8:63584:63588	7691193	0	True				
ANR	7691358	Identifier	notes		7691193	0					
ANR	7691359	CompoundStatement		28:15:1196:1196	7691193	1					
ANR	7691360	ExpressionStatement	"fprintf ( xmlout , ""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"" )"	1387:8:63601:63724	7691193	0	True				
ANR	7691361	CallExpression	"fprintf ( xmlout , ""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"" )"		7691193	0					
ANR	7691362	Callee	fprintf		7691193	0					
ANR	7691363	Identifier	fprintf		7691193	0					
ANR	7691364	ArgumentList	xmlout		7691193	1					
ANR	7691365	Argument	xmlout		7691193	0					
ANR	7691366	Identifier	xmlout		7691193	0					
ANR	7691367	Argument	"""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"""		7691193	1					
ANR	7691368	PrimaryExpression	"""            <!-- XTOsiz, YTOsiz are offsets from grid origin to first tile origin. -->\\n"""		7691193	0					
ANR	7691369	ExpressionStatement	"fprintf ( xmlout , ""            <Csiz>%d</Csiz>\\n"" , img -> numcomps )"	1390:4:63736:63802	7691193	15	True				
ANR	7691370	CallExpression	"fprintf ( xmlout , ""            <Csiz>%d</Csiz>\\n"" , img -> numcomps )"		7691193	0					
ANR	7691371	Callee	fprintf		7691193	0					
ANR	7691372	Identifier	fprintf		7691193	0					
ANR	7691373	ArgumentList	xmlout		7691193	1					
ANR	7691374	Argument	xmlout		7691193	0					
ANR	7691375	Identifier	xmlout		7691193	0					
ANR	7691376	Argument	"""            <Csiz>%d</Csiz>\\n"""		7691193	1					
ANR	7691377	PrimaryExpression	"""            <Csiz>%d</Csiz>\\n"""		7691193	0					
ANR	7691378	Argument	img -> numcomps		7691193	2					
ANR	7691379	PtrMemberAccess	img -> numcomps		7691193	0					
ANR	7691380	Identifier	img		7691193	0					
ANR	7691381	Identifier	numcomps		7691193	1					
ANR	7691382	IfStatement	if ( notes )		7691193	16					
ANR	7691383	Condition	notes	1391:8:63812:63816	7691193	0	True				
ANR	7691384	Identifier	notes		7691193	0					
ANR	7691385	CompoundStatement		33:15:1424:1424	7691193	1					
ANR	7691386	ExpressionStatement	"fprintf ( xmlout , ""            <!-- Csiz is the number of components in the image. -->\\n"" )"	1392:8:63829:63933	7691193	0	True				
ANR	7691387	CallExpression	"fprintf ( xmlout , ""            <!-- Csiz is the number of components in the image. -->\\n"" )"		7691193	0					
ANR	7691388	Callee	fprintf		7691193	0					
ANR	7691389	Identifier	fprintf		7691193	0					
ANR	7691390	ArgumentList	xmlout		7691193	1					
ANR	7691391	Argument	xmlout		7691193	0					
ANR	7691392	Identifier	xmlout		7691193	0					
ANR	7691393	Argument	"""            <!-- Csiz is the number of components in the image. -->\\n"""		7691193	1					
ANR	7691394	PrimaryExpression	"""            <!-- Csiz is the number of components in the image. -->\\n"""		7691193	0					
ANR	7691395	ExpressionStatement	"fprintf ( xmlout , ""            <!-- For image components next: -->\\n"" )"	1394:8:63943:64012	7691193	1	True				
ANR	7691396	CallExpression	"fprintf ( xmlout , ""            <!-- For image components next: -->\\n"" )"		7691193	0					
ANR	7691397	Callee	fprintf		7691193	0					
ANR	7691398	Identifier	fprintf		7691193	0					
ANR	7691399	ArgumentList	xmlout		7691193	1					
ANR	7691400	Argument	xmlout		7691193	0					
ANR	7691401	Identifier	xmlout		7691193	0					
ANR	7691402	Argument	"""            <!-- For image components next: -->\\n"""		7691193	1					
ANR	7691403	PrimaryExpression	"""            <!-- For image components next: -->\\n"""		7691193	0					
ANR	7691404	ExpressionStatement	"fprintf ( xmlout , ""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"" )"	1395:8:64022:64155	7691193	2	True				
ANR	7691405	CallExpression	"fprintf ( xmlout , ""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"" )"		7691193	0					
ANR	7691406	Callee	fprintf		7691193	0					
ANR	7691407	Identifier	fprintf		7691193	0					
ANR	7691408	ArgumentList	xmlout		7691193	1					
ANR	7691409	Argument	xmlout		7691193	0					
ANR	7691410	Identifier	xmlout		7691193	0					
ANR	7691411	Argument	"""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"""		7691193	1					
ANR	7691412	PrimaryExpression	"""            <!--   XRsiz, YRsiz denote pixel-sample-spacing on the grid, per Part I Annex B. -->\\n"""		7691193	0					
ANR	7691413	ExpressionStatement	"fprintf ( xmlout , ""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"" )"	1398:8:64282:64382	7691193	3	True				
ANR	7691414	CallExpression	"fprintf ( xmlout , ""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"" )"		7691193	0					
ANR	7691415	Callee	fprintf		7691193	0					
ANR	7691416	Identifier	fprintf		7691193	0					
ANR	7691417	ArgumentList	xmlout		7691193	1					
ANR	7691418	Argument	xmlout		7691193	0					
ANR	7691419	Identifier	xmlout		7691193	0					
ANR	7691420	Argument	"""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"""		7691193	1					
ANR	7691421	PrimaryExpression	"""            <!--   Bits per pixel (bpp) is the pixel depth. -->\\n"""		7691193	0					
ANR	7691422	ExpressionStatement	"fprintf ( xmlout , ""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"" )"	1400:8:64392:64544	7691193	4	True				
ANR	7691423	CallExpression	"fprintf ( xmlout , ""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"" )"		7691193	0					
ANR	7691424	Callee	fprintf		7691193	0					
ANR	7691425	Identifier	fprintf		7691193	0					
ANR	7691426	ArgumentList	xmlout		7691193	1					
ANR	7691427	Argument	xmlout		7691193	0					
ANR	7691428	Identifier	xmlout		7691193	0					
ANR	7691429	Argument	"""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"""		7691193	1					
ANR	7691430	PrimaryExpression	"""            <!--   WidthOfData and HeightOfData are calculated values, e.g.: w = roundup((Xsiz - XOsiz)/ XRsiz) -->\\n"""		7691193	0					
ANR	7691431	ForStatement	for ( i = 0 ; i < img -> numcomps ; i ++ )		7691193	17					
ANR	7691432	ForInit	i = 0 ;	1404:9:64562:64567	7691193	0	True				
ANR	7691433	AssignmentExpression	i = 0		7691193	0		=			
ANR	7691434	Identifier	i		7691193	0					
ANR	7691435	PrimaryExpression	0		7691193	1					
ANR	7691436	Condition	i < img -> numcomps	1404:16:64569:64585	7691193	1	True				
ANR	7691437	RelationalExpression	i < img -> numcomps		7691193	0		<			
ANR	7691438	Identifier	i		7691193	0					
ANR	7691439	PtrMemberAccess	img -> numcomps		7691193	1					
ANR	7691440	Identifier	img		7691193	0					
ANR	7691441	Identifier	numcomps		7691193	1					
ANR	7691442	PostIncDecOperationExpression	i ++	1404:35:64588:64590	7691193	2	True				
ANR	7691443	Identifier	i		7691193	0					
ANR	7691444	IncDec	++		7691193	1					
ANR	7691445	CompoundStatement		46:40:2198:2198	7691193	3					
ANR	7691446	ExpressionStatement	comp = & ( img -> comps [ i ] )	1405:8:64625:64648	7691193	0	True				
ANR	7691447	AssignmentExpression	comp = & ( img -> comps [ i ] )		7691193	0		=			
ANR	7691448	Identifier	comp		7691193	0					
ANR	7691449	UnaryOperationExpression	& ( img -> comps [ i ] )		7691193	1					
ANR	7691450	UnaryOperator	&		7691193	0					
ANR	7691451	ArrayIndexing	img -> comps [ i ]		7691193	1					
ANR	7691452	PtrMemberAccess	img -> comps		7691193	0					
ANR	7691453	Identifier	img		7691193	0					
ANR	7691454	Identifier	comps		7691193	1					
ANR	7691455	Identifier	i		7691193	1					
ANR	7691456	ExpressionStatement	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"	1406:8:64658:64721	7691193	1	True				
ANR	7691457	CallExpression	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"		7691193	0					
ANR	7691458	Callee	fprintf		7691193	0					
ANR	7691459	Identifier	fprintf		7691193	0					
ANR	7691460	ArgumentList	xmlout		7691193	1					
ANR	7691461	Argument	xmlout		7691193	0					
ANR	7691462	Identifier	xmlout		7691193	0					
ANR	7691463	Argument	"""            <Component Num=\\""%d\\"">\\n"""		7691193	1					
ANR	7691464	PrimaryExpression	"""            <Component Num=\\""%d\\"">\\n"""		7691193	0					
ANR	7691465	Argument	i + 1		7691193	2					
ANR	7691466	AdditiveExpression	i + 1		7691193	0		+			
ANR	7691467	Identifier	i		7691193	0					
ANR	7691468	PrimaryExpression	1		7691193	1					
ANR	7691469	ExpressionStatement	"fprintf ( xmlout , ""              <Ssiz>\\n"" )"	1407:8:64731:64773	7691193	2	True				
ANR	7691470	CallExpression	"fprintf ( xmlout , ""              <Ssiz>\\n"" )"		7691193	0					
ANR	7691471	Callee	fprintf		7691193	0					
ANR	7691472	Identifier	fprintf		7691193	0					
ANR	7691473	ArgumentList	xmlout		7691193	1					
ANR	7691474	Argument	xmlout		7691193	0					
ANR	7691475	Identifier	xmlout		7691193	0					
ANR	7691476	Argument	"""              <Ssiz>\\n"""		7691193	1					
ANR	7691477	PrimaryExpression	"""              <Ssiz>\\n"""		7691193	0					
ANR	7691478	IfStatement	if ( raw )		7691193	3					
ANR	7691479	Condition	raw	1408:12:64787:64789	7691193	0	True				
ANR	7691480	Identifier	raw		7691193	0					
ANR	7691481	CompoundStatement		50:17:2397:2397	7691193	1					
ANR	7691482	ExpressionStatement	"fprintf ( xmlout , ""                <AsHex>0x%02x</AsHex>\\n"" , ( comp -> sgnd << 7 ) & ( comp -> prec - 1 ) )"	1409:12:64806:64922	7691193	0	True				
ANR	7691483	CallExpression	"fprintf ( xmlout , ""                <AsHex>0x%02x</AsHex>\\n"" , ( comp -> sgnd << 7 ) & ( comp -> prec - 1 ) )"		7691193	0					
ANR	7691484	Callee	fprintf		7691193	0					
ANR	7691485	Identifier	fprintf		7691193	0					
ANR	7691486	ArgumentList	xmlout		7691193	1					
ANR	7691487	Argument	xmlout		7691193	0					
ANR	7691488	Identifier	xmlout		7691193	0					
ANR	7691489	Argument	"""                <AsHex>0x%02x</AsHex>\\n"""		7691193	1					
ANR	7691490	PrimaryExpression	"""                <AsHex>0x%02x</AsHex>\\n"""		7691193	0					
ANR	7691491	Argument	( comp -> sgnd << 7 ) & ( comp -> prec - 1 )		7691193	2					
ANR	7691492	BitAndExpression	( comp -> sgnd << 7 ) & ( comp -> prec - 1 )		7691193	0		&			
ANR	7691493	ShiftExpression	comp -> sgnd << 7		7691193	0		<<			
ANR	7691494	PtrMemberAccess	comp -> sgnd		7691193	0					
ANR	7691495	Identifier	comp		7691193	0					
ANR	7691496	Identifier	sgnd		7691193	1					
ANR	7691497	PrimaryExpression	7		7691193	1					
ANR	7691498	AdditiveExpression	comp -> prec - 1		7691193	1		-			
ANR	7691499	PtrMemberAccess	comp -> prec		7691193	0					
ANR	7691500	Identifier	comp		7691193	0					
ANR	7691501	Identifier	prec		7691193	1					
ANR	7691502	PrimaryExpression	1		7691193	1					
ANR	7691503	IfStatement	if ( derived )		7691193	4					
ANR	7691504	Condition	derived	1412:12:64946:64952	7691193	0	True				
ANR	7691505	Identifier	derived		7691193	0					
ANR	7691506	CompoundStatement		54:21:2560:2560	7691193	1					
ANR	7691507	ExpressionStatement	"fprintf ( xmlout , ""                <Signed>%d</Signed>\\n"" , comp -> sgnd )"	1413:12:64969:65037	7691193	0	True				
ANR	7691508	CallExpression	"fprintf ( xmlout , ""                <Signed>%d</Signed>\\n"" , comp -> sgnd )"		7691193	0					
ANR	7691509	Callee	fprintf		7691193	0					
ANR	7691510	Identifier	fprintf		7691193	0					
ANR	7691511	ArgumentList	xmlout		7691193	1					
ANR	7691512	Argument	xmlout		7691193	0					
ANR	7691513	Identifier	xmlout		7691193	0					
ANR	7691514	Argument	"""                <Signed>%d</Signed>\\n"""		7691193	1					
ANR	7691515	PrimaryExpression	"""                <Signed>%d</Signed>\\n"""		7691193	0					
ANR	7691516	Argument	comp -> sgnd		7691193	2					
ANR	7691517	PtrMemberAccess	comp -> sgnd		7691193	0					
ANR	7691518	Identifier	comp		7691193	0					
ANR	7691519	Identifier	sgnd		7691193	1					
ANR	7691520	ExpressionStatement	"fprintf ( xmlout , ""                <PrecisionInBits>%d</PrecisionInBits>\\n"" , comp -> prec )"	1414:12:65051:65157	7691193	1	True				
ANR	7691521	CallExpression	"fprintf ( xmlout , ""                <PrecisionInBits>%d</PrecisionInBits>\\n"" , comp -> prec )"		7691193	0					
ANR	7691522	Callee	fprintf		7691193	0					
ANR	7691523	Identifier	fprintf		7691193	0					
ANR	7691524	ArgumentList	xmlout		7691193	1					
ANR	7691525	Argument	xmlout		7691193	0					
ANR	7691526	Identifier	xmlout		7691193	0					
ANR	7691527	Argument	"""                <PrecisionInBits>%d</PrecisionInBits>\\n"""		7691193	1					
ANR	7691528	PrimaryExpression	"""                <PrecisionInBits>%d</PrecisionInBits>\\n"""		7691193	0					
ANR	7691529	Argument	comp -> prec		7691193	2					
ANR	7691530	PtrMemberAccess	comp -> prec		7691193	0					
ANR	7691531	Identifier	comp		7691193	0					
ANR	7691532	Identifier	prec		7691193	1					
ANR	7691533	ExpressionStatement	"fprintf ( xmlout , ""              </Ssiz>\\n"" )"	1417:8:65177:65220	7691193	5	True				
ANR	7691534	CallExpression	"fprintf ( xmlout , ""              </Ssiz>\\n"" )"		7691193	0					
ANR	7691535	Callee	fprintf		7691193	0					
ANR	7691536	Identifier	fprintf		7691193	0					
ANR	7691537	ArgumentList	xmlout		7691193	1					
ANR	7691538	Argument	xmlout		7691193	0					
ANR	7691539	Identifier	xmlout		7691193	0					
ANR	7691540	Argument	"""              </Ssiz>\\n"""		7691193	1					
ANR	7691541	PrimaryExpression	"""              </Ssiz>\\n"""		7691193	0					
ANR	7691542	ExpressionStatement	"fprintf ( xmlout , ""              <XRsiz>%d</XRsiz>\\n"" , comp -> dx )"	1418:8:65230:65293	7691193	6	True				
ANR	7691543	CallExpression	"fprintf ( xmlout , ""              <XRsiz>%d</XRsiz>\\n"" , comp -> dx )"		7691193	0					
ANR	7691544	Callee	fprintf		7691193	0					
ANR	7691545	Identifier	fprintf		7691193	0					
ANR	7691546	ArgumentList	xmlout		7691193	1					
ANR	7691547	Argument	xmlout		7691193	0					
ANR	7691548	Identifier	xmlout		7691193	0					
ANR	7691549	Argument	"""              <XRsiz>%d</XRsiz>\\n"""		7691193	1					
ANR	7691550	PrimaryExpression	"""              <XRsiz>%d</XRsiz>\\n"""		7691193	0					
ANR	7691551	Argument	comp -> dx		7691193	2					
ANR	7691552	PtrMemberAccess	comp -> dx		7691193	0					
ANR	7691553	Identifier	comp		7691193	0					
ANR	7691554	Identifier	dx		7691193	1					
ANR	7691555	ExpressionStatement	"fprintf ( xmlout , ""              <YRsiz>%d</YRsiz>\\n"" , comp -> dy )"	1419:8:65303:65366	7691193	7	True				
ANR	7691556	CallExpression	"fprintf ( xmlout , ""              <YRsiz>%d</YRsiz>\\n"" , comp -> dy )"		7691193	0					
ANR	7691557	Callee	fprintf		7691193	0					
ANR	7691558	Identifier	fprintf		7691193	0					
ANR	7691559	ArgumentList	xmlout		7691193	1					
ANR	7691560	Argument	xmlout		7691193	0					
ANR	7691561	Identifier	xmlout		7691193	0					
ANR	7691562	Argument	"""              <YRsiz>%d</YRsiz>\\n"""		7691193	1					
ANR	7691563	PrimaryExpression	"""              <YRsiz>%d</YRsiz>\\n"""		7691193	0					
ANR	7691564	Argument	comp -> dy		7691193	2					
ANR	7691565	PtrMemberAccess	comp -> dy		7691193	0					
ANR	7691566	Identifier	comp		7691193	0					
ANR	7691567	Identifier	dy		7691193	1					
ANR	7691568	ExpressionStatement	"fprintf ( xmlout , ""              <WidthOfData>%d</WidthOfData>\\n"" , comp -> w )"	1420:8:65376:65450	7691193	8	True				
ANR	7691569	CallExpression	"fprintf ( xmlout , ""              <WidthOfData>%d</WidthOfData>\\n"" , comp -> w )"		7691193	0					
ANR	7691570	Callee	fprintf		7691193	0					
ANR	7691571	Identifier	fprintf		7691193	0					
ANR	7691572	ArgumentList	xmlout		7691193	1					
ANR	7691573	Argument	xmlout		7691193	0					
ANR	7691574	Identifier	xmlout		7691193	0					
ANR	7691575	Argument	"""              <WidthOfData>%d</WidthOfData>\\n"""		7691193	1					
ANR	7691576	PrimaryExpression	"""              <WidthOfData>%d</WidthOfData>\\n"""		7691193	0					
ANR	7691577	Argument	comp -> w		7691193	2					
ANR	7691578	PtrMemberAccess	comp -> w		7691193	0					
ANR	7691579	Identifier	comp		7691193	0					
ANR	7691580	Identifier	w		7691193	1					
ANR	7691581	ExpressionStatement	"fprintf ( xmlout , ""              <HeightOfData>%d</HeightOfData>\\n"" , comp -> h )"	1421:8:65460:65536	7691193	9	True				
ANR	7691582	CallExpression	"fprintf ( xmlout , ""              <HeightOfData>%d</HeightOfData>\\n"" , comp -> h )"		7691193	0					
ANR	7691583	Callee	fprintf		7691193	0					
ANR	7691584	Identifier	fprintf		7691193	0					
ANR	7691585	ArgumentList	xmlout		7691193	1					
ANR	7691586	Argument	xmlout		7691193	0					
ANR	7691587	Identifier	xmlout		7691193	0					
ANR	7691588	Argument	"""              <HeightOfData>%d</HeightOfData>\\n"""		7691193	1					
ANR	7691589	PrimaryExpression	"""              <HeightOfData>%d</HeightOfData>\\n"""		7691193	0					
ANR	7691590	Argument	comp -> h		7691193	2					
ANR	7691591	PtrMemberAccess	comp -> h		7691193	0					
ANR	7691592	Identifier	comp		7691193	0					
ANR	7691593	Identifier	h		7691193	1					
ANR	7691594	ExpressionStatement	"fprintf ( xmlout , ""            </Component>\\n"" )"	1433:8:66388:66434	7691193	10	True				
ANR	7691595	CallExpression	"fprintf ( xmlout , ""            </Component>\\n"" )"		7691193	0					
ANR	7691596	Callee	fprintf		7691193	0					
ANR	7691597	Identifier	fprintf		7691193	0					
ANR	7691598	ArgumentList	xmlout		7691193	1					
ANR	7691599	Argument	xmlout		7691193	0					
ANR	7691600	Identifier	xmlout		7691193	0					
ANR	7691601	Argument	"""            </Component>\\n"""		7691193	1					
ANR	7691602	PrimaryExpression	"""            </Component>\\n"""		7691193	0					
ANR	7691603	ExpressionStatement	"fprintf ( xmlout , ""          </ImageAndFileSize>\\n"" )"	1435:4:66446:66499	7691193	18	True				
ANR	7691604	CallExpression	"fprintf ( xmlout , ""          </ImageAndFileSize>\\n"" )"		7691193	0					
ANR	7691605	Callee	fprintf		7691193	0					
ANR	7691606	Identifier	fprintf		7691193	0					
ANR	7691607	ArgumentList	xmlout		7691193	1					
ANR	7691608	Argument	xmlout		7691193	0					
ANR	7691609	Identifier	xmlout		7691193	0					
ANR	7691610	Argument	"""          </ImageAndFileSize>\\n"""		7691193	1					
ANR	7691611	PrimaryExpression	"""          </ImageAndFileSize>\\n"""		7691193	0					
ANR	7691612	ReturnType	void		7691193	1					
ANR	7691613	Identifier	xml_out_frame_siz		7691193	2					
ANR	7691614	ParameterList	"FILE * xmlout , opj_image_t * img , opj_cp_t * cp"		7691193	3					
ANR	7691615	Parameter	FILE * xmlout	1358:23:62348:62359	7691193	0	True				
ANR	7691616	ParameterType	FILE *		7691193	0					
ANR	7691617	Identifier	xmlout		7691193	1					
ANR	7691618	Parameter	opj_image_t * img	1358:37:62362:62377	7691193	1	True				
ANR	7691619	ParameterType	opj_image_t *		7691193	0					
ANR	7691620	Identifier	img		7691193	1					
ANR	7691621	Parameter	opj_cp_t * cp	1358:55:62380:62391	7691193	2	True				
ANR	7691622	ParameterType	opj_cp_t *		7691193	0					
ANR	7691623	Identifier	cp		7691193	1					
ANR	7691624	CFGEntryNode	ENTRY		7691193		True				
ANR	7691625	CFGExitNode	EXIT		7691193		True				
ANR	7691626	Symbol	img		7691193						
ANR	7691627	Symbol	notes		7691193						
ANR	7691628	Symbol	img -> y0		7691193						
ANR	7691629	Symbol	comp -> dx		7691193						
ANR	7691630	Symbol	comp -> dy		7691193						
ANR	7691631	Symbol	img -> y1		7691193						
ANR	7691632	Symbol	* img		7691193						
ANR	7691633	Symbol	cp -> tx0		7691193						
ANR	7691634	Symbol	* comp		7691193						
ANR	7691635	Symbol	derived		7691193						
ANR	7691636	Symbol	comp		7691193						
ANR	7691637	Symbol	img -> comps		7691193						
ANR	7691638	Symbol	i		7691193						
ANR	7691639	Symbol	cp -> ty0		7691193						
ANR	7691640	Symbol	raw		7691193						
ANR	7691641	Symbol	cp -> tdx		7691193						
ANR	7691642	Symbol	comp -> prec		7691193						
ANR	7691643	Symbol	cp -> tdy		7691193						
ANR	7691644	Symbol	cp		7691193						
ANR	7691645	Symbol	img -> x1		7691193						
ANR	7691646	Symbol	comp -> w		7691193						
ANR	7691647	Symbol	xmlout		7691193						
ANR	7691648	Symbol	img -> x0		7691193						
ANR	7691649	Symbol	* cp		7691193						
ANR	7691650	Symbol	img -> numcomps		7691193						
ANR	7691651	Symbol	comp -> sgnd		7691193						
ANR	7691652	Symbol	comp -> h		7691193						
ANR	7691653	Function	xml_out_frame_cod	1440:0:66525:72656							
ANR	7691654	FunctionDef	"xml_out_frame_cod (FILE * xmlout , opj_tcp_t * tcp)"		7691653	0					
ANR	7691655	CompoundStatement		1441:0:66578:72656	7691653	0					
ANR	7691656	IdentifierDeclStatement	opj_tccp_t * tccp ;	1446:4:66879:66895	7691653	0	True				
ANR	7691657	IdentifierDecl	* tccp		7691653	0					
ANR	7691658	IdentifierDeclType	opj_tccp_t *		7691653	0					
ANR	7691659	Identifier	tccp		7691653	1					
ANR	7691660	IdentifierDeclStatement	int i ;	1447:4:66901:66906	7691653	1	True				
ANR	7691661	IdentifierDecl	i		7691653	0					
ANR	7691662	IdentifierDeclType	int		7691653	0					
ANR	7691663	Identifier	i		7691653	1					
ANR	7691664	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1448:4:66912:66944	7691653	2	True				
ANR	7691665	IdentifierDecl	"spaces [ 13 ] = ""            """		7691653	0					
ANR	7691666	IdentifierDeclType	char [ 13 ]		7691653	0					
ANR	7691667	Identifier	spaces		7691653	1					
ANR	7691668	PrimaryExpression	13		7691653	2					
ANR	7691669	AssignmentExpression	"spaces [ 13 ] = ""            """		7691653	3		=			
ANR	7691670	Identifier	spaces		7691653	0					
ANR	7691671	PrimaryExpression	"""            """		7691653	1					
ANR	7691672	IdentifierDeclStatement	char * s = spaces ;	1449:4:66977:66993	7691653	3	True				
ANR	7691673	IdentifierDecl	* s = spaces		7691653	0					
ANR	7691674	IdentifierDeclType	char *		7691653	0					
ANR	7691675	Identifier	s		7691653	1					
ANR	7691676	AssignmentExpression	* s = spaces		7691653	2		=			
ANR	7691677	Identifier	spaces		7691653	0					
ANR	7691678	Identifier	spaces		7691653	1					
ANR	7691679	IfStatement	if ( tcp == j2k_default_tcp )		7691653	4					
ANR	7691680	Condition	tcp == j2k_default_tcp	1450:8:67003:67024	7691653	0	True				
ANR	7691681	EqualityExpression	tcp == j2k_default_tcp		7691653	0		==			
ANR	7691682	Identifier	tcp		7691653	0					
ANR	7691683	Identifier	j2k_default_tcp		7691653	1					
ANR	7691684	CompoundStatement		10:32:448:448	7691653	1					
ANR	7691685	ExpressionStatement	s ++	1451:8:67037:67040	7691653	0	True				
ANR	7691686	PostIncDecOperationExpression	s ++		7691653	0					
ANR	7691687	Identifier	s		7691653	0					
ANR	7691688	IncDec	++		7691653	1					
ANR	7691689	ExpressionStatement	s ++	1452:8:67050:67053	7691653	1	True				
ANR	7691690	PostIncDecOperationExpression	s ++		7691653	0					
ANR	7691691	Identifier	s		7691653	0					
ANR	7691692	IncDec	++		7691653	1					
ANR	7691693	ExpressionStatement	tccp = & ( tcp -> tccps [ 0 ] )	1454:4:67102:67125	7691653	5	True				
ANR	7691694	AssignmentExpression	tccp = & ( tcp -> tccps [ 0 ] )		7691653	0		=			
ANR	7691695	Identifier	tccp		7691653	0					
ANR	7691696	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		7691653	1					
ANR	7691697	UnaryOperator	&		7691653	0					
ANR	7691698	ArrayIndexing	tcp -> tccps [ 0 ]		7691653	1					
ANR	7691699	PtrMemberAccess	tcp -> tccps		7691653	0					
ANR	7691700	Identifier	tcp		7691653	0					
ANR	7691701	Identifier	tccps		7691653	1					
ANR	7691702	PrimaryExpression	0		7691653	1					
ANR	7691703	ExpressionStatement	"fprintf ( xmlout , ""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"" , s )"	1456:4:67132:67210	7691653	6	True				
ANR	7691704	CallExpression	"fprintf ( xmlout , ""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"" , s )"		7691653	0					
ANR	7691705	Callee	fprintf		7691653	0					
ANR	7691706	Identifier	fprintf		7691653	0					
ANR	7691707	ArgumentList	xmlout		7691653	1					
ANR	7691708	Argument	xmlout		7691653	0					
ANR	7691709	Identifier	xmlout		7691653	0					
ANR	7691710	Argument	"""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"""		7691653	1					
ANR	7691711	PrimaryExpression	"""%s<CodingStyleDefault Marker=\\""COD\\"">\\n"""		7691653	0					
ANR	7691712	Argument	s		7691653	2					
ANR	7691713	Identifier	s		7691653	0					
ANR	7691714	ExpressionStatement	"fprintf ( xmlout , ""%s  <Scod>0x%02x</Scod>\\n"" , s , tcp -> csty )"	1459:4:67290:67353	7691653	7	True				
ANR	7691715	CallExpression	"fprintf ( xmlout , ""%s  <Scod>0x%02x</Scod>\\n"" , s , tcp -> csty )"		7691653	0					
ANR	7691716	Callee	fprintf		7691653	0					
ANR	7691717	Identifier	fprintf		7691653	0					
ANR	7691718	ArgumentList	xmlout		7691653	1					
ANR	7691719	Argument	xmlout		7691653	0					
ANR	7691720	Identifier	xmlout		7691653	0					
ANR	7691721	Argument	"""%s  <Scod>0x%02x</Scod>\\n"""		7691653	1					
ANR	7691722	PrimaryExpression	"""%s  <Scod>0x%02x</Scod>\\n"""		7691653	0					
ANR	7691723	Argument	s		7691653	2					
ANR	7691724	Identifier	s		7691653	0					
ANR	7691725	Argument	tcp -> csty		7691653	3					
ANR	7691726	PtrMemberAccess	tcp -> csty		7691653	0					
ANR	7691727	Identifier	tcp		7691653	0					
ANR	7691728	Identifier	csty		7691653	1					
ANR	7691729	IfStatement	if ( notes )		7691653	8					
ANR	7691730	Condition	notes	1460:8:67376:67380	7691653	0	True				
ANR	7691731	Identifier	notes		7691653	0					
ANR	7691732	CompoundStatement		20:15:804:804	7691653	1					
ANR	7691733	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"" , s )"	1461:8:67393:67528	7691653	0	True				
ANR	7691734	CallExpression	"fprintf ( xmlout , ""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"" , s )"		7691653	0					
ANR	7691735	Callee	fprintf		7691653	0					
ANR	7691736	Identifier	fprintf		7691653	0					
ANR	7691737	ArgumentList	xmlout		7691653	1					
ANR	7691738	Argument	xmlout		7691653	0					
ANR	7691739	Identifier	xmlout		7691653	0					
ANR	7691740	Argument	"""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"""		7691653	1					
ANR	7691741	PrimaryExpression	"""%s  <!-- For Scod, specific bits mean (where bit 0 is lowest or rightmost): -->\\n"""		7691653	0					
ANR	7691742	Argument	s		7691653	2					
ANR	7691743	Identifier	s		7691653	0					
ANR	7691744	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"" , s )"	1464:8:67538:67616	7691653	1	True				
ANR	7691745	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"" , s )"		7691653	0					
ANR	7691746	Callee	fprintf		7691653	0					
ANR	7691747	Identifier	fprintf		7691653	0					
ANR	7691748	ArgumentList	xmlout		7691653	1					
ANR	7691749	Argument	xmlout		7691653	0					
ANR	7691750	Identifier	xmlout		7691653	0					
ANR	7691751	Argument	"""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"""		7691653	1					
ANR	7691752	PrimaryExpression	"""%s  <!-- bit 0: Defines entropy coder precincts -->\\n"""		7691653	0					
ANR	7691753	Argument	s		7691653	2					
ANR	7691754	Identifier	s		7691653	0					
ANR	7691755	ExpressionStatement	"fprintf ( xmlout , ""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"	1465:8:67626:67736	7691653	2	True				
ANR	7691756	CallExpression	"fprintf ( xmlout , ""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"		7691653	0					
ANR	7691757	Callee	fprintf		7691653	0					
ANR	7691758	Identifier	fprintf		7691653	0					
ANR	7691759	ArgumentList	xmlout		7691653	1					
ANR	7691760	Argument	xmlout		7691653	0					
ANR	7691761	Identifier	xmlout		7691653	0					
ANR	7691762	Argument	"""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		7691653	1					
ANR	7691763	PrimaryExpression	"""%s  <!--        0 = (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		7691653	0					
ANR	7691764	Argument	s		7691653	2					
ANR	7691765	Identifier	s		7691653	0					
ANR	7691766	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"" , s )"	1467:8:67746:67845	7691653	3	True				
ANR	7691767	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"" , s )"		7691653	0					
ANR	7691768	Callee	fprintf		7691653	0					
ANR	7691769	Identifier	fprintf		7691653	0					
ANR	7691770	ArgumentList	xmlout		7691653	1					
ANR	7691771	Argument	xmlout		7691653	0					
ANR	7691772	Identifier	xmlout		7691653	0					
ANR	7691773	Argument	"""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"""		7691653	1					
ANR	7691774	PrimaryExpression	"""%s  <!-- bit 1: 1 = SOP marker may be used; 0 = not. -->\\n"""		7691653	0					
ANR	7691775	Argument	s		7691653	2					
ANR	7691776	Identifier	s		7691653	0					
ANR	7691777	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"" , s )"	1469:8:67855:67954	7691653	4	True				
ANR	7691778	CallExpression	"fprintf ( xmlout , ""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"" , s )"		7691653	0					
ANR	7691779	Callee	fprintf		7691653	0					
ANR	7691780	Identifier	fprintf		7691653	0					
ANR	7691781	ArgumentList	xmlout		7691653	1					
ANR	7691782	Argument	xmlout		7691653	0					
ANR	7691783	Identifier	xmlout		7691653	0					
ANR	7691784	Argument	"""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"""		7691653	1					
ANR	7691785	PrimaryExpression	"""%s  <!-- bit 2: 1 = EPH marker may be used; 0 = not. -->\\n"""		7691653	0					
ANR	7691786	Argument	s		7691653	2					
ANR	7691787	Identifier	s		7691653	0					
ANR	7691788	ExpressionStatement	"fprintf ( xmlout , ""%s  <SGcod>\\n"" , s )"	1472:4:67966:68006	7691653	9	True				
ANR	7691789	CallExpression	"fprintf ( xmlout , ""%s  <SGcod>\\n"" , s )"		7691653	0					
ANR	7691790	Callee	fprintf		7691653	0					
ANR	7691791	Identifier	fprintf		7691653	0					
ANR	7691792	ArgumentList	xmlout		7691653	1					
ANR	7691793	Argument	xmlout		7691653	0					
ANR	7691794	Identifier	xmlout		7691653	0					
ANR	7691795	Argument	"""%s  <SGcod>\\n"""		7691653	1					
ANR	7691796	PrimaryExpression	"""%s  <SGcod>\\n"""		7691653	0					
ANR	7691797	Argument	s		7691653	2					
ANR	7691798	Identifier	s		7691653	0					
ANR	7691799	ExpressionStatement	"fprintf ( xmlout , ""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"" , s , tcp -> prg )"	1473:4:68012:68108	7691653	10	True				
ANR	7691800	CallExpression	"fprintf ( xmlout , ""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"" , s , tcp -> prg )"		7691653	0					
ANR	7691801	Callee	fprintf		7691653	0					
ANR	7691802	Identifier	fprintf		7691653	0					
ANR	7691803	ArgumentList	xmlout		7691653	1					
ANR	7691804	Argument	xmlout		7691653	0					
ANR	7691805	Identifier	xmlout		7691653	0					
ANR	7691806	Argument	"""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"""		7691653	1					
ANR	7691807	PrimaryExpression	"""%s    <ProgressionOrder>%d</ProgressionOrder>\\n"""		7691653	0					
ANR	7691808	Argument	s		7691653	2					
ANR	7691809	Identifier	s		7691653	0					
ANR	7691810	Argument	tcp -> prg		7691653	3					
ANR	7691811	PtrMemberAccess	tcp -> prg		7691653	0					
ANR	7691812	Identifier	tcp		7691653	0					
ANR	7691813	Identifier	prg		7691653	1					
ANR	7691814	IfStatement	if ( notes )		7691653	11					
ANR	7691815	Condition	notes	1475:8:68142:68146	7691653	0	True				
ANR	7691816	Identifier	notes		7691653	0					
ANR	7691817	CompoundStatement		35:15:1570:1570	7691653	1					
ANR	7691818	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"	1476:8:68159:68238	7691653	0	True				
ANR	7691819	CallExpression	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"		7691653	0					
ANR	7691820	Callee	fprintf		7691653	0					
ANR	7691821	Identifier	fprintf		7691653	0					
ANR	7691822	ArgumentList	xmlout		7691653	1					
ANR	7691823	Argument	xmlout		7691653	0					
ANR	7691824	Identifier	xmlout		7691653	0					
ANR	7691825	Argument	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		7691653	1					
ANR	7691826	PrimaryExpression	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		7691653	0					
ANR	7691827	Argument	s		7691653	2					
ANR	7691828	Identifier	s		7691653	0					
ANR	7691829	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"	1477:8:68248:68351	7691653	1	True				
ANR	7691830	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"		7691653	0					
ANR	7691831	Callee	fprintf		7691653	0					
ANR	7691832	Identifier	fprintf		7691653	0					
ANR	7691833	ArgumentList	xmlout		7691653	1					
ANR	7691834	Argument	xmlout		7691653	0					
ANR	7691835	Identifier	xmlout		7691653	0					
ANR	7691836	Argument	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		7691653	1					
ANR	7691837	PrimaryExpression	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		7691653	0					
ANR	7691838	Argument	s		7691653	2					
ANR	7691839	Identifier	s		7691653	0					
ANR	7691840	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"	1479:8:68361:68515	7691653	2	True				
ANR	7691841	CallExpression	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"		7691653	0					
ANR	7691842	Callee	fprintf		7691653	0					
ANR	7691843	Identifier	fprintf		7691653	0					
ANR	7691844	ArgumentList	xmlout		7691653	1					
ANR	7691845	Argument	xmlout		7691653	0					
ANR	7691846	Identifier	xmlout		7691653	0					
ANR	7691847	Argument	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		7691653	1					
ANR	7691848	PrimaryExpression	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		7691653	0					
ANR	7691849	Argument	s		7691653	2					
ANR	7691850	Identifier	s		7691653	0					
ANR	7691851	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"" , s , tcp -> numlayers )"	1483:4:68527:68625	7691653	12	True				
ANR	7691852	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"" , s , tcp -> numlayers )"		7691653	0					
ANR	7691853	Callee	fprintf		7691653	0					
ANR	7691854	Identifier	fprintf		7691653	0					
ANR	7691855	ArgumentList	xmlout		7691653	1					
ANR	7691856	Argument	xmlout		7691653	0					
ANR	7691857	Identifier	xmlout		7691653	0					
ANR	7691858	Argument	"""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"""		7691653	1					
ANR	7691859	PrimaryExpression	"""%s    <NumberOfLayers>%d</NumberOfLayers>\\n"""		7691653	0					
ANR	7691860	Argument	s		7691653	2					
ANR	7691861	Identifier	s		7691653	0					
ANR	7691862	Argument	tcp -> numlayers		7691653	3					
ANR	7691863	PtrMemberAccess	tcp -> numlayers		7691653	0					
ANR	7691864	Identifier	tcp		7691653	0					
ANR	7691865	Identifier	numlayers		7691653	1					
ANR	7691866	ExpressionStatement	"fprintf ( xmlout , ""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"" , s , tcp -> mct )"	1485:4:68656:68789	7691653	13	True				
ANR	7691867	CallExpression	"fprintf ( xmlout , ""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"" , s , tcp -> mct )"		7691653	0					
ANR	7691868	Callee	fprintf		7691653	0					
ANR	7691869	Identifier	fprintf		7691653	0					
ANR	7691870	ArgumentList	xmlout		7691653	1					
ANR	7691871	Argument	xmlout		7691653	0					
ANR	7691872	Identifier	xmlout		7691653	0					
ANR	7691873	Argument	"""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"""		7691653	1					
ANR	7691874	PrimaryExpression	"""%s    <MultipleComponentTransformation>%d</MultipleComponentTransformation>\\n"""		7691653	0					
ANR	7691875	Argument	s		7691653	2					
ANR	7691876	Identifier	s		7691653	0					
ANR	7691877	Argument	tcp -> mct		7691653	3					
ANR	7691878	PtrMemberAccess	tcp -> mct		7691653	0					
ANR	7691879	Identifier	tcp		7691653	0					
ANR	7691880	Identifier	mct		7691653	1					
ANR	7691881	IfStatement	if ( notes )		7691653	14					
ANR	7691882	Condition	notes	1488:8:68846:68850	7691653	0	True				
ANR	7691883	Identifier	notes		7691653	0					
ANR	7691884	CompoundStatement		48:15:2274:2274	7691653	1					
ANR	7691885	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"" , s )"	1489:8:68863:69020	7691653	0	True				
ANR	7691886	CallExpression	"fprintf ( xmlout , ""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"" , s )"		7691653	0					
ANR	7691887	Callee	fprintf		7691653	0					
ANR	7691888	Identifier	fprintf		7691653	0					
ANR	7691889	ArgumentList	xmlout		7691653	1					
ANR	7691890	Argument	xmlout		7691653	0					
ANR	7691891	Identifier	xmlout		7691653	0					
ANR	7691892	Argument	"""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"""		7691653	1					
ANR	7691893	PrimaryExpression	"""%s    <!-- For MCT, 0 = none, 1 = transform first 3 components for efficiency, per Part I Annex G -->\\n"""		7691653	0					
ANR	7691894	Argument	s		7691653	2					
ANR	7691895	Identifier	s		7691653	0					
ANR	7691896	ExpressionStatement	"fprintf ( xmlout , ""%s  </SGcod>\\n"" , s )"	1493:4:69032:69073	7691653	15	True				
ANR	7691897	CallExpression	"fprintf ( xmlout , ""%s  </SGcod>\\n"" , s )"		7691653	0					
ANR	7691898	Callee	fprintf		7691653	0					
ANR	7691899	Identifier	fprintf		7691653	0					
ANR	7691900	ArgumentList	xmlout		7691653	1					
ANR	7691901	Argument	xmlout		7691653	0					
ANR	7691902	Identifier	xmlout		7691653	0					
ANR	7691903	Argument	"""%s  </SGcod>\\n"""		7691653	1					
ANR	7691904	PrimaryExpression	"""%s  </SGcod>\\n"""		7691653	0					
ANR	7691905	Argument	s		7691653	2					
ANR	7691906	Identifier	s		7691653	0					
ANR	7691907	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPcod>\\n"" , s )"	1495:4:69204:69244	7691653	16	True				
ANR	7691908	CallExpression	"fprintf ( xmlout , ""%s  <SPcod>\\n"" , s )"		7691653	0					
ANR	7691909	Callee	fprintf		7691653	0					
ANR	7691910	Identifier	fprintf		7691653	0					
ANR	7691911	ArgumentList	xmlout		7691653	1					
ANR	7691912	Argument	xmlout		7691653	0					
ANR	7691913	Identifier	xmlout		7691653	0					
ANR	7691914	Argument	"""%s  <SPcod>\\n"""		7691653	1					
ANR	7691915	PrimaryExpression	"""%s  <SPcod>\\n"""		7691653	0					
ANR	7691916	Argument	s		7691653	2					
ANR	7691917	Identifier	s		7691653	0					
ANR	7691918	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"	1499:4:69475:69616	7691653	17	True				
ANR	7691919	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"		7691653	0					
ANR	7691920	Callee	fprintf		7691653	0					
ANR	7691921	Identifier	fprintf		7691653	0					
ANR	7691922	ArgumentList	xmlout		7691653	1					
ANR	7691923	Argument	xmlout		7691653	0					
ANR	7691924	Identifier	xmlout		7691653	0					
ANR	7691925	Argument	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		7691653	1					
ANR	7691926	PrimaryExpression	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		7691653	0					
ANR	7691927	Argument	s		7691653	2					
ANR	7691928	Identifier	s		7691653	0					
ANR	7691929	Argument	tccp -> numresolutions - 1		7691653	3					
ANR	7691930	AdditiveExpression	tccp -> numresolutions - 1		7691653	0		-			
ANR	7691931	PtrMemberAccess	tccp -> numresolutions		7691653	0					
ANR	7691932	Identifier	tccp		7691653	0					
ANR	7691933	Identifier	numresolutions		7691653	1					
ANR	7691934	PrimaryExpression	1		7691653	1					
ANR	7691935	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"	1502:4:69648:69747	7691653	18	True				
ANR	7691936	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"		7691653	0					
ANR	7691937	Callee	fprintf		7691653	0					
ANR	7691938	Identifier	fprintf		7691653	0					
ANR	7691939	ArgumentList	xmlout		7691653	1					
ANR	7691940	Argument	xmlout		7691653	0					
ANR	7691941	Identifier	xmlout		7691653	0					
ANR	7691942	Argument	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		7691653	1					
ANR	7691943	PrimaryExpression	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		7691653	0					
ANR	7691944	Argument	s		7691653	2					
ANR	7691945	Identifier	s		7691653	0					
ANR	7691946	Argument	tccp -> cblkw - 2		7691653	3					
ANR	7691947	AdditiveExpression	tccp -> cblkw - 2		7691653	0		-			
ANR	7691948	PtrMemberAccess	tccp -> cblkw		7691653	0					
ANR	7691949	Identifier	tccp		7691653	0					
ANR	7691950	Identifier	cblkw		7691653	1					
ANR	7691951	PrimaryExpression	2		7691653	1					
ANR	7691952	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"	1504:4:69778:69879	7691653	19	True				
ANR	7691953	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"		7691653	0					
ANR	7691954	Callee	fprintf		7691653	0					
ANR	7691955	Identifier	fprintf		7691653	0					
ANR	7691956	ArgumentList	xmlout		7691653	1					
ANR	7691957	Argument	xmlout		7691653	0					
ANR	7691958	Identifier	xmlout		7691653	0					
ANR	7691959	Argument	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		7691653	1					
ANR	7691960	PrimaryExpression	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		7691653	0					
ANR	7691961	Argument	s		7691653	2					
ANR	7691962	Identifier	s		7691653	0					
ANR	7691963	Argument	tccp -> cblkh - 2		7691653	3					
ANR	7691964	AdditiveExpression	tccp -> cblkh - 2		7691653	0		-			
ANR	7691965	PtrMemberAccess	tccp -> cblkh		7691653	0					
ANR	7691966	Identifier	tccp		7691653	0					
ANR	7691967	Identifier	cblkh		7691653	1					
ANR	7691968	PrimaryExpression	2		7691653	1					
ANR	7691969	IfStatement	if ( notes )		7691653	20					
ANR	7691970	Condition	notes	1506:8:69916:69920	7691653	0	True				
ANR	7691971	Identifier	notes		7691653	0					
ANR	7691972	CompoundStatement		66:15:3344:3344	7691653	1					
ANR	7691973	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"	1507:8:69933:70044	7691653	0	True				
ANR	7691974	CallExpression	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"		7691653	0					
ANR	7691975	Callee	fprintf		7691653	0					
ANR	7691976	Identifier	fprintf		7691653	0					
ANR	7691977	ArgumentList	xmlout		7691653	1					
ANR	7691978	Argument	xmlout		7691653	0					
ANR	7691979	Identifier	xmlout		7691653	0					
ANR	7691980	Argument	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		7691653	1					
ANR	7691981	PrimaryExpression	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		7691653	0					
ANR	7691982	Argument	s		7691653	2					
ANR	7691983	Identifier	s		7691653	0					
ANR	7691984	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"	1509:8:70054:70132	7691653	1	True				
ANR	7691985	CallExpression	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"		7691653	0					
ANR	7691986	Callee	fprintf		7691653	0					
ANR	7691987	Identifier	fprintf		7691653	0					
ANR	7691988	ArgumentList	xmlout		7691653	1					
ANR	7691989	Argument	xmlout		7691653	0					
ANR	7691990	Identifier	xmlout		7691653	0					
ANR	7691991	Argument	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		7691653	1					
ANR	7691992	PrimaryExpression	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		7691653	0					
ANR	7691993	Argument	s		7691653	2					
ANR	7691994	Identifier	s		7691653	0					
ANR	7691995	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"	1511:4:70144:70245	7691653	21	True				
ANR	7691996	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"		7691653	0					
ANR	7691997	Callee	fprintf		7691653	0					
ANR	7691998	Identifier	fprintf		7691653	0					
ANR	7691999	ArgumentList	xmlout		7691653	1					
ANR	7692000	Argument	xmlout		7691653	0					
ANR	7692001	Identifier	xmlout		7691653	0					
ANR	7692002	Argument	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		7691653	1					
ANR	7692003	PrimaryExpression	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		7691653	0					
ANR	7692004	Argument	s		7691653	2					
ANR	7692005	Identifier	s		7691653	0					
ANR	7692006	Argument	tccp -> cblksty		7691653	3					
ANR	7692007	PtrMemberAccess	tccp -> cblksty		7691653	0					
ANR	7692008	Identifier	tccp		7691653	0					
ANR	7692009	Identifier	cblksty		7691653	1					
ANR	7692010	IfStatement	if ( notes )		7691653	22					
ANR	7692011	Condition	notes	1513:8:70282:70286	7691653	0	True				
ANR	7692012	Identifier	notes		7691653	0					
ANR	7692013	CompoundStatement		73:15:3710:3710	7691653	1					
ANR	7692014	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"	1514:8:70299:70433	7691653	0	True				
ANR	7692015	CallExpression	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"		7691653	0					
ANR	7692016	Callee	fprintf		7691653	0					
ANR	7692017	Identifier	fprintf		7691653	0					
ANR	7692018	ArgumentList	xmlout		7691653	1					
ANR	7692019	Argument	xmlout		7691653	0					
ANR	7692020	Identifier	xmlout		7691653	0					
ANR	7692021	Argument	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		7691653	1					
ANR	7692022	PrimaryExpression	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		7691653	0					
ANR	7692023	Argument	s		7691653	2					
ANR	7692024	Identifier	s		7691653	0					
ANR	7692025	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"	1517:8:70443:70540	7691653	1	True				
ANR	7692026	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"		7691653	0					
ANR	7692027	Callee	fprintf		7691653	0					
ANR	7692028	Identifier	fprintf		7691653	0					
ANR	7692029	ArgumentList	xmlout		7691653	1					
ANR	7692030	Argument	xmlout		7691653	0					
ANR	7692031	Identifier	xmlout		7691653	0					
ANR	7692032	Argument	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		7691653	1					
ANR	7692033	PrimaryExpression	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		7691653	0					
ANR	7692034	Argument	s		7691653	2					
ANR	7692035	Identifier	s		7691653	0					
ANR	7692036	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"	1519:8:70550:70682	7691653	2	True				
ANR	7692037	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"		7691653	0					
ANR	7692038	Callee	fprintf		7691653	0					
ANR	7692039	Identifier	fprintf		7691653	0					
ANR	7692040	ArgumentList	xmlout		7691653	1					
ANR	7692041	Argument	xmlout		7691653	0					
ANR	7692042	Identifier	xmlout		7691653	0					
ANR	7692043	Argument	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		7691653	1					
ANR	7692044	PrimaryExpression	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		7691653	0					
ANR	7692045	Argument	s		7691653	2					
ANR	7692046	Identifier	s		7691653	0					
ANR	7692047	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"	1522:8:70692:70789	7691653	3	True				
ANR	7692048	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"		7691653	0					
ANR	7692049	Callee	fprintf		7691653	0					
ANR	7692050	Identifier	fprintf		7691653	0					
ANR	7692051	ArgumentList	xmlout		7691653	1					
ANR	7692052	Argument	xmlout		7691653	0					
ANR	7692053	Identifier	xmlout		7691653	0					
ANR	7692054	Argument	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		7691653	1					
ANR	7692055	PrimaryExpression	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		7691653	0					
ANR	7692056	Argument	s		7691653	2					
ANR	7692057	Identifier	s		7691653	0					
ANR	7692058	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"	1524:8:70799:70874	7691653	4	True				
ANR	7692059	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"		7691653	0					
ANR	7692060	Callee	fprintf		7691653	0					
ANR	7692061	Identifier	fprintf		7691653	0					
ANR	7692062	ArgumentList	xmlout		7691653	1					
ANR	7692063	Argument	xmlout		7691653	0					
ANR	7692064	Identifier	xmlout		7691653	0					
ANR	7692065	Argument	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		7691653	1					
ANR	7692066	PrimaryExpression	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		7691653	0					
ANR	7692067	Argument	s		7691653	2					
ANR	7692068	Identifier	s		7691653	0					
ANR	7692069	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"	1525:8:70884:70957	7691653	5	True				
ANR	7692070	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"		7691653	0					
ANR	7692071	Callee	fprintf		7691653	0					
ANR	7692072	Identifier	fprintf		7691653	0					
ANR	7692073	ArgumentList	xmlout		7691653	1					
ANR	7692074	Argument	xmlout		7691653	0					
ANR	7692075	Identifier	xmlout		7691653	0					
ANR	7692076	Argument	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		7691653	1					
ANR	7692077	PrimaryExpression	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		7691653	0					
ANR	7692078	Argument	s		7691653	2					
ANR	7692079	Identifier	s		7691653	0					
ANR	7692080	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"	1526:8:70967:71046	7691653	6	True				
ANR	7692081	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"		7691653	0					
ANR	7692082	Callee	fprintf		7691653	0					
ANR	7692083	Identifier	fprintf		7691653	0					
ANR	7692084	ArgumentList	xmlout		7691653	1					
ANR	7692085	Argument	xmlout		7691653	0					
ANR	7692086	Identifier	xmlout		7691653	0					
ANR	7692087	Argument	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		7691653	1					
ANR	7692088	PrimaryExpression	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		7691653	0					
ANR	7692089	Argument	s		7691653	2					
ANR	7692090	Identifier	s		7691653	0					
ANR	7692091	ExpressionStatement	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"	1528:4:71058:71154	7691653	23	True				
ANR	7692092	CallExpression	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"		7691653	0					
ANR	7692093	Callee	fprintf		7691653	0					
ANR	7692094	Identifier	fprintf		7691653	0					
ANR	7692095	ArgumentList	xmlout		7691653	1					
ANR	7692096	Argument	xmlout		7691653	0					
ANR	7692097	Identifier	xmlout		7691653	0					
ANR	7692098	Argument	"""%s    <Transformation>%d</Transformation>\\n"""		7691653	1					
ANR	7692099	PrimaryExpression	"""%s    <Transformation>%d</Transformation>\\n"""		7691653	0					
ANR	7692100	Argument	s		7691653	2					
ANR	7692101	Identifier	s		7691653	0					
ANR	7692102	Argument	tccp -> qmfbid		7691653	3					
ANR	7692103	PtrMemberAccess	tccp -> qmfbid		7691653	0					
ANR	7692104	Identifier	tccp		7691653	0					
ANR	7692105	Identifier	qmfbid		7691653	1					
ANR	7692106	IfStatement	if ( notes )		7691653	24					
ANR	7692107	Condition	notes	1530:8:71188:71192	7691653	0	True				
ANR	7692108	Identifier	notes		7691653	0					
ANR	7692109	CompoundStatement		90:15:4616:4616	7691653	1					
ANR	7692110	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"	1531:8:71205:71354	7691653	0	True				
ANR	7692111	CallExpression	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"		7691653	0					
ANR	7692112	Callee	fprintf		7691653	0					
ANR	7692113	Identifier	fprintf		7691653	0					
ANR	7692114	ArgumentList	xmlout		7691653	1					
ANR	7692115	Argument	xmlout		7691653	0					
ANR	7692116	Identifier	xmlout		7691653	0					
ANR	7692117	Argument	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		7691653	1					
ANR	7692118	PrimaryExpression	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		7691653	0					
ANR	7692119	Argument	s		7691653	2					
ANR	7692120	Identifier	s		7691653	0					
ANR	7692121	IfStatement	if ( tccp -> csty & J2K_CP_CSTY_PRT )		7691653	25					
ANR	7692122	Condition	tccp -> csty & J2K_CP_CSTY_PRT	1535:8:71370:71397	7691653	0	True				
ANR	7692123	BitAndExpression	tccp -> csty & J2K_CP_CSTY_PRT		7691653	0		&			
ANR	7692124	PtrMemberAccess	tccp -> csty		7691653	0					
ANR	7692125	Identifier	tccp		7691653	0					
ANR	7692126	Identifier	csty		7691653	1					
ANR	7692127	Identifier	J2K_CP_CSTY_PRT		7691653	1					
ANR	7692128	CompoundStatement		95:38:4821:4821	7691653	1					
ANR	7692129	ExpressionStatement	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"	1536:8:71410:71457	7691653	0	True				
ANR	7692130	CallExpression	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"		7691653	0					
ANR	7692131	Callee	fprintf		7691653	0					
ANR	7692132	Identifier	fprintf		7691653	0					
ANR	7692133	ArgumentList	xmlout		7691653	1					
ANR	7692134	Argument	xmlout		7691653	0					
ANR	7692135	Identifier	xmlout		7691653	0					
ANR	7692136	Argument	"""%s    <PrecinctSize>\\n"""		7691653	1					
ANR	7692137	PrimaryExpression	"""%s    <PrecinctSize>\\n"""		7691653	0					
ANR	7692138	Argument	s		7691653	2					
ANR	7692139	Identifier	s		7691653	0					
ANR	7692140	IfStatement	if ( notes )		7691653	1					
ANR	7692141	Condition	notes	1537:12:71497:71501	7691653	0	True				
ANR	7692142	Identifier	notes		7691653	0					
ANR	7692143	CompoundStatement		97:19:4925:4925	7691653	1					
ANR	7692144	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"	1538:12:71518:71687	7691653	0	True				
ANR	7692145	CallExpression	"fprintf ( xmlout , ""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"		7691653	0					
ANR	7692146	Callee	fprintf		7691653	0					
ANR	7692147	Identifier	fprintf		7691653	0					
ANR	7692148	ArgumentList	xmlout		7691653	1					
ANR	7692149	Argument	xmlout		7691653	0					
ANR	7692150	Identifier	xmlout		7691653	0					
ANR	7692151	Argument	"""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		7691653	1					
ANR	7692152	PrimaryExpression	"""%s    <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		7691653	0					
ANR	7692153	Argument	s		7691653	2					
ANR	7692154	Identifier	s		7691653	0					
ANR	7692155	ForStatement	for ( i = 0 ; i < tccp -> numresolutions ; i ++ )		7691653	2					
ANR	7692156	ForInit	i = 0 ;	1542:13:71712:71717	7691653	0	True				
ANR	7692157	AssignmentExpression	i = 0		7691653	0		=			
ANR	7692158	Identifier	i		7691653	0					
ANR	7692159	PrimaryExpression	0		7691653	1					
ANR	7692160	Condition	i < tccp -> numresolutions	1542:20:71719:71742	7691653	1	True				
ANR	7692161	RelationalExpression	i < tccp -> numresolutions		7691653	0		<			
ANR	7692162	Identifier	i		7691653	0					
ANR	7692163	PtrMemberAccess	tccp -> numresolutions		7691653	1					
ANR	7692164	Identifier	tccp		7691653	0					
ANR	7692165	Identifier	numresolutions		7691653	1					
ANR	7692166	PostIncDecOperationExpression	i ++	1542:46:71745:71747	7691653	2	True				
ANR	7692167	Identifier	i		7691653	0					
ANR	7692168	IncDec	++		7691653	1					
ANR	7692169	CompoundStatement		102:51:5171:5171	7691653	3					
ANR	7692170	ExpressionStatement	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"	1543:12:71764:71868	7691653	0	True				
ANR	7692171	CallExpression	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"		7691653	0					
ANR	7692172	Callee	fprintf		7691653	0					
ANR	7692173	Identifier	fprintf		7691653	0					
ANR	7692174	ArgumentList	xmlout		7691653	1					
ANR	7692175	Argument	xmlout		7691653	0					
ANR	7692176	Identifier	xmlout		7691653	0					
ANR	7692177	Argument	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		7691653	1					
ANR	7692178	PrimaryExpression	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		7691653	0					
ANR	7692179	Argument	s		7691653	2					
ANR	7692180	Identifier	s		7691653	0					
ANR	7692181	Argument	i		7691653	3					
ANR	7692182	Identifier	i		7691653	0					
ANR	7692183	IfStatement	if ( raw )		7691653	1					
ANR	7692184	Condition	raw	1545:16:71886:71888	7691653	0	True				
ANR	7692185	Identifier	raw		7691653	0					
ANR	7692186	CompoundStatement		105:21:5312:5312	7691653	1					
ANR	7692187	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"	1546:16:71909:72026	7691653	0	True				
ANR	7692188	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"		7691653	0					
ANR	7692189	Callee	fprintf		7691653	0					
ANR	7692190	Identifier	fprintf		7691653	0					
ANR	7692191	ArgumentList	xmlout		7691653	1					
ANR	7692192	Argument	xmlout		7691653	0					
ANR	7692193	Identifier	xmlout		7691653	0					
ANR	7692194	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7691653	1					
ANR	7692195	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7691653	0					
ANR	7692196	Argument	s		7691653	2					
ANR	7692197	Identifier	s		7691653	0					
ANR	7692198	Argument	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		7691653	3					
ANR	7692199	InclusiveOrExpression	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		7691653	0		|			
ANR	7692200	ShiftExpression	tccp -> prch [ i ] << 4		7691653	0		<<			
ANR	7692201	ArrayIndexing	tccp -> prch [ i ]		7691653	0					
ANR	7692202	PtrMemberAccess	tccp -> prch		7691653	0					
ANR	7692203	Identifier	tccp		7691653	0					
ANR	7692204	Identifier	prch		7691653	1					
ANR	7692205	Identifier	i		7691653	1					
ANR	7692206	PrimaryExpression	4		7691653	1					
ANR	7692207	ArrayIndexing	tccp -> prcw [ i ]		7691653	1					
ANR	7692208	PtrMemberAccess	tccp -> prcw		7691653	0					
ANR	7692209	Identifier	tccp		7691653	0					
ANR	7692210	Identifier	prcw		7691653	1					
ANR	7692211	Identifier	i		7691653	1					
ANR	7692212	IfStatement	if ( derived )		7691653	2					
ANR	7692213	Condition	derived	1549:16:72097:72103	7691653	0	True				
ANR	7692214	Identifier	derived		7691653	0					
ANR	7692215	CompoundStatement		109:25:5527:5527	7691653	1					
ANR	7692216	ExpressionStatement	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"	1550:16:72124:72232	7691653	0	True				
ANR	7692217	CallExpression	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"		7691653	0					
ANR	7692218	Callee	fprintf		7691653	0					
ANR	7692219	Identifier	fprintf		7691653	0					
ANR	7692220	ArgumentList	xmlout		7691653	1					
ANR	7692221	Argument	xmlout		7691653	0					
ANR	7692222	Identifier	xmlout		7691653	0					
ANR	7692223	Argument	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		7691653	1					
ANR	7692224	PrimaryExpression	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		7691653	0					
ANR	7692225	Argument	s		7691653	2					
ANR	7692226	Identifier	s		7691653	0					
ANR	7692227	Argument	tccp -> prcw [ i ]		7691653	3					
ANR	7692228	ArrayIndexing	tccp -> prcw [ i ]		7691653	0					
ANR	7692229	PtrMemberAccess	tccp -> prcw		7691653	0					
ANR	7692230	Identifier	tccp		7691653	0					
ANR	7692231	Identifier	prcw		7691653	1					
ANR	7692232	Identifier	i		7691653	1					
ANR	7692233	ExpressionStatement	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"	1552:16:72250:72360	7691653	1	True				
ANR	7692234	CallExpression	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"		7691653	0					
ANR	7692235	Callee	fprintf		7691653	0					
ANR	7692236	Identifier	fprintf		7691653	0					
ANR	7692237	ArgumentList	xmlout		7691653	1					
ANR	7692238	Argument	xmlout		7691653	0					
ANR	7692239	Identifier	xmlout		7691653	0					
ANR	7692240	Argument	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		7691653	1					
ANR	7692241	PrimaryExpression	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		7691653	0					
ANR	7692242	Argument	s		7691653	2					
ANR	7692243	Identifier	s		7691653	0					
ANR	7692244	Argument	tccp -> prch [ i ]		7691653	3					
ANR	7692245	ArrayIndexing	tccp -> prch [ i ]		7691653	0					
ANR	7692246	PtrMemberAccess	tccp -> prch		7691653	0					
ANR	7692247	Identifier	tccp		7691653	0					
ANR	7692248	Identifier	prch		7691653	1					
ANR	7692249	Identifier	i		7691653	1					
ANR	7692250	ExpressionStatement	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"	1555:12:72388:72449	7691653	3	True				
ANR	7692251	CallExpression	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"		7691653	0					
ANR	7692252	Callee	fprintf		7691653	0					
ANR	7692253	Identifier	fprintf		7691653	0					
ANR	7692254	ArgumentList	xmlout		7691653	1					
ANR	7692255	Argument	xmlout		7691653	0					
ANR	7692256	Identifier	xmlout		7691653	0					
ANR	7692257	Argument	"""%s      </PrecinctHeightAndWidth>\\n"""		7691653	1					
ANR	7692258	PrimaryExpression	"""%s      </PrecinctHeightAndWidth>\\n"""		7691653	0					
ANR	7692259	Argument	s		7691653	2					
ANR	7692260	Identifier	s		7691653	0					
ANR	7692261	Argument	i		7691653	3					
ANR	7692262	Identifier	i		7691653	0					
ANR	7692263	ExpressionStatement	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"	1557:8:72469:72517	7691653	3	True				
ANR	7692264	CallExpression	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"		7691653	0					
ANR	7692265	Callee	fprintf		7691653	0					
ANR	7692266	Identifier	fprintf		7691653	0					
ANR	7692267	ArgumentList	xmlout		7691653	1					
ANR	7692268	Argument	xmlout		7691653	0					
ANR	7692269	Identifier	xmlout		7691653	0					
ANR	7692270	Argument	"""%s    </PrecinctSize>\\n"""		7691653	1					
ANR	7692271	PrimaryExpression	"""%s    </PrecinctSize>\\n"""		7691653	0					
ANR	7692272	Argument	s		7691653	2					
ANR	7692273	Identifier	s		7691653	0					
ANR	7692274	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPcod>\\n"" , s )"	1559:4:72555:72596	7691653	26	True				
ANR	7692275	CallExpression	"fprintf ( xmlout , ""%s  </SPcod>\\n"" , s )"		7691653	0					
ANR	7692276	Callee	fprintf		7691653	0					
ANR	7692277	Identifier	fprintf		7691653	0					
ANR	7692278	ArgumentList	xmlout		7691653	1					
ANR	7692279	Argument	xmlout		7691653	0					
ANR	7692280	Identifier	xmlout		7691653	0					
ANR	7692281	Argument	"""%s  </SPcod>\\n"""		7691653	1					
ANR	7692282	PrimaryExpression	"""%s  </SPcod>\\n"""		7691653	0					
ANR	7692283	Argument	s		7691653	2					
ANR	7692284	Identifier	s		7691653	0					
ANR	7692285	ExpressionStatement	"fprintf ( xmlout , ""%s</CodingStyleDefault>\\n"" , s )"	1560:4:72602:72654	7691653	27	True				
ANR	7692286	CallExpression	"fprintf ( xmlout , ""%s</CodingStyleDefault>\\n"" , s )"		7691653	0					
ANR	7692287	Callee	fprintf		7691653	0					
ANR	7692288	Identifier	fprintf		7691653	0					
ANR	7692289	ArgumentList	xmlout		7691653	1					
ANR	7692290	Argument	xmlout		7691653	0					
ANR	7692291	Identifier	xmlout		7691653	0					
ANR	7692292	Argument	"""%s</CodingStyleDefault>\\n"""		7691653	1					
ANR	7692293	PrimaryExpression	"""%s</CodingStyleDefault>\\n"""		7691653	0					
ANR	7692294	Argument	s		7691653	2					
ANR	7692295	Identifier	s		7691653	0					
ANR	7692296	ReturnType	void		7691653	1					
ANR	7692297	Identifier	xml_out_frame_cod		7691653	2					
ANR	7692298	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7691653	3					
ANR	7692299	Parameter	FILE * xmlout	1440:23:66548:66559	7691653	0	True				
ANR	7692300	ParameterType	FILE *		7691653	0					
ANR	7692301	Identifier	xmlout		7691653	1					
ANR	7692302	Parameter	opj_tcp_t * tcp	1440:37:66562:66575	7691653	1	True				
ANR	7692303	ParameterType	opj_tcp_t *		7691653	0					
ANR	7692304	Identifier	tcp		7691653	1					
ANR	7692305	CFGEntryNode	ENTRY		7691653		True				
ANR	7692306	CFGExitNode	EXIT		7691653		True				
ANR	7692307	Symbol	J2K_CP_CSTY_PRT		7691653						
ANR	7692308	Symbol	notes		7691653						
ANR	7692309	Symbol	tcp -> mct		7691653						
ANR	7692310	Symbol	* tccp -> prch		7691653						
ANR	7692311	Symbol	* tcp		7691653						
ANR	7692312	Symbol	tccp -> qmfbid		7691653						
ANR	7692313	Symbol	tcp -> csty		7691653						
ANR	7692314	Symbol	j2k_default_tcp		7691653						
ANR	7692315	Symbol	tccp -> numresolutions		7691653						
ANR	7692316	Symbol	* * tccp		7691653						
ANR	7692317	Symbol	tcp -> prg		7691653						
ANR	7692318	Symbol	tccp -> cblkh		7691653						
ANR	7692319	Symbol	* tccp -> prcw		7691653						
ANR	7692320	Symbol	tccp -> cblksty		7691653						
ANR	7692321	Symbol	tccp -> prch		7691653						
ANR	7692322	Symbol	derived		7691653						
ANR	7692323	Symbol	tcp		7691653						
ANR	7692324	Symbol	tcp -> numlayers		7691653						
ANR	7692325	Symbol	tccp -> csty		7691653						
ANR	7692326	Symbol	tcp -> tccps		7691653						
ANR	7692327	Symbol	tccp -> prcw		7691653						
ANR	7692328	Symbol	i		7691653						
ANR	7692329	Symbol	raw		7691653						
ANR	7692330	Symbol	tccp		7691653						
ANR	7692331	Symbol	tccp -> cblkw		7691653						
ANR	7692332	Symbol	xmlout		7691653						
ANR	7692333	Symbol	s		7691653						
ANR	7692334	Symbol	* i		7691653						
ANR	7692335	Symbol	* tccp		7691653						
ANR	7692336	Symbol	spaces		7691653						
ANR	7692337	Function	xml_out_frame_coc	1565:0:72680:79185							
ANR	7692338	FunctionDef	"xml_out_frame_coc (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		7692337	0					
ANR	7692339	CompoundStatement		1567:0:72813:79185	7692337	0					
ANR	7692340	IdentifierDeclStatement	"opj_tccp_t * tccp , * firstcomp_tccp ;"	1569:4:72857:72890	7692337	0	True				
ANR	7692341	IdentifierDecl	* tccp		7692337	0					
ANR	7692342	IdentifierDeclType	opj_tccp_t *		7692337	0					
ANR	7692343	Identifier	tccp		7692337	1					
ANR	7692344	IdentifierDecl	* firstcomp_tccp		7692337	1					
ANR	7692345	IdentifierDeclType	opj_tccp_t *		7692337	0					
ANR	7692346	Identifier	firstcomp_tccp		7692337	1					
ANR	7692347	IdentifierDeclStatement	"int i , compno ;"	1570:4:72896:72909	7692337	1	True				
ANR	7692348	IdentifierDecl	i		7692337	0					
ANR	7692349	IdentifierDeclType	int		7692337	0					
ANR	7692350	Identifier	i		7692337	1					
ANR	7692351	IdentifierDecl	compno		7692337	1					
ANR	7692352	IdentifierDeclType	int		7692337	0					
ANR	7692353	Identifier	compno		7692337	1					
ANR	7692354	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1571:4:72915:72947	7692337	2	True				
ANR	7692355	IdentifierDecl	"spaces [ 13 ] = ""            """		7692337	0					
ANR	7692356	IdentifierDeclType	char [ 13 ]		7692337	0					
ANR	7692357	Identifier	spaces		7692337	1					
ANR	7692358	PrimaryExpression	13		7692337	2					
ANR	7692359	AssignmentExpression	"spaces [ 13 ] = ""            """		7692337	3		=			
ANR	7692360	Identifier	spaces		7692337	0					
ANR	7692361	PrimaryExpression	"""            """		7692337	1					
ANR	7692362	IdentifierDeclStatement	char * s = spaces ;	1572:4:72980:72996	7692337	3	True				
ANR	7692363	IdentifierDecl	* s = spaces		7692337	0					
ANR	7692364	IdentifierDeclType	char *		7692337	0					
ANR	7692365	Identifier	s		7692337	1					
ANR	7692366	AssignmentExpression	* s = spaces		7692337	2		=			
ANR	7692367	Identifier	spaces		7692337	0					
ANR	7692368	Identifier	spaces		7692337	1					
ANR	7692369	IfStatement	if ( tcp == j2k_default_tcp )		7692337	4					
ANR	7692370	Condition	tcp == j2k_default_tcp	1573:8:73006:73027	7692337	0	True				
ANR	7692371	EqualityExpression	tcp == j2k_default_tcp		7692337	0		==			
ANR	7692372	Identifier	tcp		7692337	0					
ANR	7692373	Identifier	j2k_default_tcp		7692337	1					
ANR	7692374	CompoundStatement		7:32:216:216	7692337	1					
ANR	7692375	ExpressionStatement	s ++	1574:8:73040:73043	7692337	0	True				
ANR	7692376	PostIncDecOperationExpression	s ++		7692337	0					
ANR	7692377	Identifier	s		7692337	0					
ANR	7692378	IncDec	++		7692337	1					
ANR	7692379	ExpressionStatement	s ++	1575:8:73053:73056	7692337	1	True				
ANR	7692380	PostIncDecOperationExpression	s ++		7692337	0					
ANR	7692381	Identifier	s		7692337	0					
ANR	7692382	IncDec	++		7692337	1					
ANR	7692383	ExpressionStatement	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )	1578:4:73106:73139	7692337	5	True				
ANR	7692384	AssignmentExpression	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )		7692337	0		=			
ANR	7692385	Identifier	firstcomp_tccp		7692337	0					
ANR	7692386	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		7692337	1					
ANR	7692387	UnaryOperator	&		7692337	0					
ANR	7692388	ArrayIndexing	tcp -> tccps [ 0 ]		7692337	1					
ANR	7692389	PtrMemberAccess	tcp -> tccps		7692337	0					
ANR	7692390	Identifier	tcp		7692337	0					
ANR	7692391	Identifier	tccps		7692337	1					
ANR	7692392	PrimaryExpression	0		7692337	1					
ANR	7692393	IfStatement	if ( notes )		7692337	6					
ANR	7692394	Condition	notes	1584:8:73477:73481	7692337	0	True				
ANR	7692395	Identifier	notes		7692337	0					
ANR	7692396	CompoundStatement		18:15:670:670	7692337	1					
ANR	7692397	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"" , s )"	1585:8:73494:73641	7692337	0	True				
ANR	7692398	CallExpression	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"" , s )"		7692337	0					
ANR	7692399	Callee	fprintf		7692337	0					
ANR	7692400	Identifier	fprintf		7692337	0					
ANR	7692401	ArgumentList	xmlout		7692337	1					
ANR	7692402	Argument	xmlout		7692337	0					
ANR	7692403	Identifier	xmlout		7692337	0					
ANR	7692404	Argument	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"""		7692337	1					
ANR	7692405	PrimaryExpression	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default COD, -->\\n"""		7692337	0					
ANR	7692406	Argument	s		7692337	2					
ANR	7692407	Identifier	s		7692337	0					
ANR	7692408	IfStatement	if ( tcp == j2k_default_tcp )		7692337	1					
ANR	7692409	Condition	tcp == j2k_default_tcp	1588:12:73655:73676	7692337	0	True				
ANR	7692410	EqualityExpression	tcp == j2k_default_tcp		7692337	0		==			
ANR	7692411	Identifier	tcp		7692337	0					
ANR	7692412	Identifier	j2k_default_tcp		7692337	1					
ANR	7692413	CompoundStatement		22:36:865:865	7692337	1					
ANR	7692414	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"" , s )"	1589:12:73693:73850	7692337	0	True				
ANR	7692415	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"" , s )"		7692337	0					
ANR	7692416	Callee	fprintf		7692337	0					
ANR	7692417	Identifier	fprintf		7692337	0					
ANR	7692418	ArgumentList	xmlout		7692337	1					
ANR	7692419	Argument	xmlout		7692337	0					
ANR	7692420	Identifier	xmlout		7692337	0					
ANR	7692421	Argument	"""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"""		7692337	1					
ANR	7692422	PrimaryExpression	"""%s<!-- and any other component, with main-header style values different from [0], as COC. -->\\n"""		7692337	0					
ANR	7692423	Argument	s		7692337	2					
ANR	7692424	Identifier	s		7692337	0					
ANR	7692425	ElseStatement	else		7692337	0					
ANR	7692426	CompoundStatement		26:15:1053:1053	7692337	0					
ANR	7692427	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"" , s )"	1593:12:73881:74043	7692337	0	True				
ANR	7692428	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"" , s )"		7692337	0					
ANR	7692429	Callee	fprintf		7692337	0					
ANR	7692430	Identifier	fprintf		7692337	0					
ANR	7692431	ArgumentList	xmlout		7692337	1					
ANR	7692432	Argument	xmlout		7692337	0					
ANR	7692433	Identifier	xmlout		7692337	0					
ANR	7692434	Argument	"""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"""		7692337	1					
ANR	7692435	PrimaryExpression	"""%s<!-- and any other component, with tile-part-header style values different from [0], as COC. -->\\n"""		7692337	0					
ANR	7692436	Argument	s		7692337	2					
ANR	7692437	Identifier	s		7692337	0					
ANR	7692438	ForStatement	for ( compno = 1 ; compno < numcomps ; compno ++ )		7692337	7					
ANR	7692439	ForInit	compno = 1 ;	1598:9:74070:74080	7692337	0	True				
ANR	7692440	AssignmentExpression	compno = 1		7692337	0		=			
ANR	7692441	Identifier	compno		7692337	0					
ANR	7692442	PrimaryExpression	1		7692337	1					
ANR	7692443	Condition	compno < numcomps	1598:21:74082:74098	7692337	1	True				
ANR	7692444	RelationalExpression	compno < numcomps		7692337	0		<			
ANR	7692445	Identifier	compno		7692337	0					
ANR	7692446	Identifier	numcomps		7692337	1					
ANR	7692447	PostIncDecOperationExpression	compno ++	1599:12:74113:74120	7692337	2	True				
ANR	7692448	Identifier	compno		7692337	0					
ANR	7692449	IncDec	++		7692337	1					
ANR	7692450	CompoundStatement		33:22:1309:1309	7692337	3					
ANR	7692451	ExpressionStatement	tccp = & tcp -> tccps [ compno ]	1600:8:74175:74201	7692337	0	True				
ANR	7692452	AssignmentExpression	tccp = & tcp -> tccps [ compno ]		7692337	0		=			
ANR	7692453	Identifier	tccp		7692337	0					
ANR	7692454	UnaryOperationExpression	& tcp -> tccps [ compno ]		7692337	1					
ANR	7692455	UnaryOperator	&		7692337	0					
ANR	7692456	ArrayIndexing	tcp -> tccps [ compno ]		7692337	1					
ANR	7692457	PtrMemberAccess	tcp -> tccps		7692337	0					
ANR	7692458	Identifier	tcp		7692337	0					
ANR	7692459	Identifier	tccps		7692337	1					
ANR	7692460	Identifier	compno		7692337	1					
ANR	7692461	IfStatement	"if ( same_component_style ( firstcomp_tccp , tccp ) )"		7692337	1					
ANR	7692462	Condition	"same_component_style ( firstcomp_tccp , tccp )"	1601:12:74215:74256	7692337	0	True				
ANR	7692463	CallExpression	"same_component_style ( firstcomp_tccp , tccp )"		7692337	0					
ANR	7692464	Callee	same_component_style		7692337	0					
ANR	7692465	Identifier	same_component_style		7692337	0					
ANR	7692466	ArgumentList	firstcomp_tccp		7692337	1					
ANR	7692467	Argument	firstcomp_tccp		7692337	0					
ANR	7692468	Identifier	firstcomp_tccp		7692337	0					
ANR	7692469	Argument	tccp		7692337	1					
ANR	7692470	Identifier	tccp		7692337	0					
ANR	7692471	CompoundStatement		35:56:1445:1445	7692337	1					
ANR	7692472	ContinueStatement	continue ;	1602:12:74273:74281	7692337	0	True				
ANR	7692473	ExpressionStatement	"fprintf ( xmlout , ""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"" , s )"	1606:8:74394:74478	7692337	2	True				
ANR	7692474	CallExpression	"fprintf ( xmlout , ""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"" , s )"		7692337	0					
ANR	7692475	Callee	fprintf		7692337	0					
ANR	7692476	Identifier	fprintf		7692337	0					
ANR	7692477	ArgumentList	xmlout		7692337	1					
ANR	7692478	Argument	xmlout		7692337	0					
ANR	7692479	Identifier	xmlout		7692337	0					
ANR	7692480	Argument	"""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"""		7692337	1					
ANR	7692481	PrimaryExpression	"""%s<CodingStyleComponent Marker=\\""COC\\"">\\n"""		7692337	0					
ANR	7692482	Argument	s		7692337	2					
ANR	7692483	Identifier	s		7692337	0					
ANR	7692484	IfStatement	if ( notes )		7692337	3					
ANR	7692485	Condition	notes	1608:12:74547:74551	7692337	0	True				
ANR	7692486	Identifier	notes		7692337	0					
ANR	7692487	CompoundStatement		42:19:1740:1740	7692337	1					
ANR	7692488	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- See Ccoc below for zero-based component number. -->\\n"" , s )"	1609:12:74568:74672	7692337	0	True				
ANR	7692489	CallExpression	"fprintf ( xmlout , ""%s  <!-- See Ccoc below for zero-based component number. -->\\n"" , s )"		7692337	0					
ANR	7692490	Callee	fprintf		7692337	0					
ANR	7692491	Identifier	fprintf		7692337	0					
ANR	7692492	ArgumentList	xmlout		7692337	1					
ANR	7692493	Argument	xmlout		7692337	0					
ANR	7692494	Identifier	xmlout		7692337	0					
ANR	7692495	Argument	"""%s  <!-- See Ccoc below for zero-based component number. -->\\n"""		7692337	1					
ANR	7692496	PrimaryExpression	"""%s  <!-- See Ccoc below for zero-based component number. -->\\n"""		7692337	0					
ANR	7692497	Argument	s		7692337	2					
ANR	7692498	Identifier	s		7692337	0					
ANR	7692499	ExpressionStatement	"fprintf ( xmlout , ""%s  <Scoc>0x%02x</Scoc>\\n"" , s , tccp -> csty )"	1614:8:74804:74868	7692337	4	True				
ANR	7692500	CallExpression	"fprintf ( xmlout , ""%s  <Scoc>0x%02x</Scoc>\\n"" , s , tccp -> csty )"		7692337	0					
ANR	7692501	Callee	fprintf		7692337	0					
ANR	7692502	Identifier	fprintf		7692337	0					
ANR	7692503	ArgumentList	xmlout		7692337	1					
ANR	7692504	Argument	xmlout		7692337	0					
ANR	7692505	Identifier	xmlout		7692337	0					
ANR	7692506	Argument	"""%s  <Scoc>0x%02x</Scoc>\\n"""		7692337	1					
ANR	7692507	PrimaryExpression	"""%s  <Scoc>0x%02x</Scoc>\\n"""		7692337	0					
ANR	7692508	Argument	s		7692337	2					
ANR	7692509	Identifier	s		7692337	0					
ANR	7692510	Argument	tccp -> csty		7692337	3					
ANR	7692511	PtrMemberAccess	tccp -> csty		7692337	0					
ANR	7692512	Identifier	tccp		7692337	0					
ANR	7692513	Identifier	csty		7692337	1					
ANR	7692514	IfStatement	if ( notes )		7692337	5					
ANR	7692515	Condition	notes	1615:12:74895:74899	7692337	0	True				
ANR	7692516	Identifier	notes		7692337	0					
ANR	7692517	CompoundStatement		49:19:2088:2088	7692337	1					
ANR	7692518	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Scoc defines entropy coder precincts: -->\\n"" , s )"	1616:12:74916:74993	7692337	0	True				
ANR	7692519	CallExpression	"fprintf ( xmlout , ""%s  <!-- Scoc defines entropy coder precincts: -->\\n"" , s )"		7692337	0					
ANR	7692520	Callee	fprintf		7692337	0					
ANR	7692521	Identifier	fprintf		7692337	0					
ANR	7692522	ArgumentList	xmlout		7692337	1					
ANR	7692523	Argument	xmlout		7692337	0					
ANR	7692524	Identifier	xmlout		7692337	0					
ANR	7692525	Argument	"""%s  <!-- Scoc defines entropy coder precincts: -->\\n"""		7692337	1					
ANR	7692526	PrimaryExpression	"""%s  <!-- Scoc defines entropy coder precincts: -->\\n"""		7692337	0					
ANR	7692527	Argument	s		7692337	2					
ANR	7692528	Identifier	s		7692337	0					
ANR	7692529	ExpressionStatement	"fprintf ( xmlout , ""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"	1617:12:75007:75152	7692337	1	True				
ANR	7692530	CallExpression	"fprintf ( xmlout , ""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"" , s )"		7692337	0					
ANR	7692531	Callee	fprintf		7692337	0					
ANR	7692532	Identifier	fprintf		7692337	0					
ANR	7692533	ArgumentList	xmlout		7692337	1					
ANR	7692534	Argument	xmlout		7692337	0					
ANR	7692535	Identifier	xmlout		7692337	0					
ANR	7692536	Argument	"""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		7692337	1					
ANR	7692537	PrimaryExpression	"""%s  <!--   0 = maximum, namely (PPx=15, PPy=15); 1 = precincts defined below. -->\\n"""		7692337	0					
ANR	7692538	Argument	s		7692337	2					
ANR	7692539	Identifier	s		7692337	0					
ANR	7692540	ExpressionStatement	"fprintf ( xmlout , ""%s  <Ccoc>%d</Ccoc>\\n"" , s , compno )"	1621:8:75172:75228	7692337	6	True				
ANR	7692541	CallExpression	"fprintf ( xmlout , ""%s  <Ccoc>%d</Ccoc>\\n"" , s , compno )"		7692337	0					
ANR	7692542	Callee	fprintf		7692337	0					
ANR	7692543	Identifier	fprintf		7692337	0					
ANR	7692544	ArgumentList	xmlout		7692337	1					
ANR	7692545	Argument	xmlout		7692337	0					
ANR	7692546	Identifier	xmlout		7692337	0					
ANR	7692547	Argument	"""%s  <Ccoc>%d</Ccoc>\\n"""		7692337	1					
ANR	7692548	PrimaryExpression	"""%s  <Ccoc>%d</Ccoc>\\n"""		7692337	0					
ANR	7692549	Argument	s		7692337	2					
ANR	7692550	Identifier	s		7692337	0					
ANR	7692551	Argument	compno		7692337	3					
ANR	7692552	Identifier	compno		7692337	0					
ANR	7692553	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPcoc>\\n"" , s )"	1629:8:75628:75668	7692337	7	True				
ANR	7692554	CallExpression	"fprintf ( xmlout , ""%s  <SPcoc>\\n"" , s )"		7692337	0					
ANR	7692555	Callee	fprintf		7692337	0					
ANR	7692556	Identifier	fprintf		7692337	0					
ANR	7692557	ArgumentList	xmlout		7692337	1					
ANR	7692558	Argument	xmlout		7692337	0					
ANR	7692559	Identifier	xmlout		7692337	0					
ANR	7692560	Argument	"""%s  <SPcoc>\\n"""		7692337	1					
ANR	7692561	PrimaryExpression	"""%s  <SPcoc>\\n"""		7692337	0					
ANR	7692562	Argument	s		7692337	2					
ANR	7692563	Identifier	s		7692337	0					
ANR	7692564	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"	1630:8:75678:75827	7692337	8	True				
ANR	7692565	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"" , s , tccp -> numresolutions - 1 )"		7692337	0					
ANR	7692566	Callee	fprintf		7692337	0					
ANR	7692567	Identifier	fprintf		7692337	0					
ANR	7692568	ArgumentList	xmlout		7692337	1					
ANR	7692569	Argument	xmlout		7692337	0					
ANR	7692570	Identifier	xmlout		7692337	0					
ANR	7692571	Argument	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		7692337	1					
ANR	7692572	PrimaryExpression	"""%s    <NumberOfDecompositionLevels>%d</NumberOfDecompositionLevels>\\n"""		7692337	0					
ANR	7692573	Argument	s		7692337	2					
ANR	7692574	Identifier	s		7692337	0					
ANR	7692575	Argument	tccp -> numresolutions - 1		7692337	3					
ANR	7692576	AdditiveExpression	tccp -> numresolutions - 1		7692337	0		-			
ANR	7692577	PtrMemberAccess	tccp -> numresolutions		7692337	0					
ANR	7692578	Identifier	tccp		7692337	0					
ANR	7692579	Identifier	numresolutions		7692337	1					
ANR	7692580	PrimaryExpression	1		7692337	1					
ANR	7692581	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"	1633:8:75861:75964	7692337	9	True				
ANR	7692582	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"" , s , tccp -> cblkw - 2 )"		7692337	0					
ANR	7692583	Callee	fprintf		7692337	0					
ANR	7692584	Identifier	fprintf		7692337	0					
ANR	7692585	ArgumentList	xmlout		7692337	1					
ANR	7692586	Argument	xmlout		7692337	0					
ANR	7692587	Identifier	xmlout		7692337	0					
ANR	7692588	Argument	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		7692337	1					
ANR	7692589	PrimaryExpression	"""%s    <CodeblockWidth>%d</CodeblockWidth>\\n"""		7692337	0					
ANR	7692590	Argument	s		7692337	2					
ANR	7692591	Identifier	s		7692337	0					
ANR	7692592	Argument	tccp -> cblkw - 2		7692337	3					
ANR	7692593	AdditiveExpression	tccp -> cblkw - 2		7692337	0		-			
ANR	7692594	PtrMemberAccess	tccp -> cblkw		7692337	0					
ANR	7692595	Identifier	tccp		7692337	0					
ANR	7692596	Identifier	cblkw		7692337	1					
ANR	7692597	PrimaryExpression	2		7692337	1					
ANR	7692598	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"	1635:8:76001:76106	7692337	10	True				
ANR	7692599	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"" , s , tccp -> cblkh - 2 )"		7692337	0					
ANR	7692600	Callee	fprintf		7692337	0					
ANR	7692601	Identifier	fprintf		7692337	0					
ANR	7692602	ArgumentList	xmlout		7692337	1					
ANR	7692603	Argument	xmlout		7692337	0					
ANR	7692604	Identifier	xmlout		7692337	0					
ANR	7692605	Argument	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		7692337	1					
ANR	7692606	PrimaryExpression	"""%s    <CodeblockHeight>%d</CodeblockHeight>\\n"""		7692337	0					
ANR	7692607	Argument	s		7692337	2					
ANR	7692608	Identifier	s		7692337	0					
ANR	7692609	Argument	tccp -> cblkh - 2		7692337	3					
ANR	7692610	AdditiveExpression	tccp -> cblkh - 2		7692337	0		-			
ANR	7692611	PtrMemberAccess	tccp -> cblkh		7692337	0					
ANR	7692612	Identifier	tccp		7692337	0					
ANR	7692613	Identifier	cblkh		7692337	1					
ANR	7692614	PrimaryExpression	2		7692337	1					
ANR	7692615	IfStatement	if ( notes )		7692337	11					
ANR	7692616	Condition	notes	1637:12:76145:76149	7692337	0	True				
ANR	7692617	Identifier	notes		7692337	0					
ANR	7692618	CompoundStatement		71:19:3338:3338	7692337	1					
ANR	7692619	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"	1638:12:76166:76281	7692337	0	True				
ANR	7692620	CallExpression	"fprintf ( xmlout , ""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"" , s )"		7692337	0					
ANR	7692621	Callee	fprintf		7692337	0					
ANR	7692622	Identifier	fprintf		7692337	0					
ANR	7692623	ArgumentList	xmlout		7692337	1					
ANR	7692624	Argument	xmlout		7692337	0					
ANR	7692625	Identifier	xmlout		7692337	0					
ANR	7692626	Argument	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		7692337	1					
ANR	7692627	PrimaryExpression	"""%s    <!-- CBW and CBH are non-negative, and summed cannot exceed 8 -->\\n"""		7692337	0					
ANR	7692628	Argument	s		7692337	2					
ANR	7692629	Identifier	s		7692337	0					
ANR	7692630	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"	1640:12:76295:76373	7692337	1	True				
ANR	7692631	CallExpression	"fprintf ( xmlout , ""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"" , s )"		7692337	0					
ANR	7692632	Callee	fprintf		7692337	0					
ANR	7692633	Identifier	fprintf		7692337	0					
ANR	7692634	ArgumentList	xmlout		7692337	1					
ANR	7692635	Argument	xmlout		7692337	0					
ANR	7692636	Identifier	xmlout		7692337	0					
ANR	7692637	Argument	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		7692337	1					
ANR	7692638	PrimaryExpression	"""%s    <!-- Codeblock dimension is 2^(value + 2) -->\\n"""		7692337	0					
ANR	7692639	Argument	s		7692337	2					
ANR	7692640	Identifier	s		7692337	0					
ANR	7692641	ExpressionStatement	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"	1642:8:76393:76498	7692337	12	True				
ANR	7692642	CallExpression	"fprintf ( xmlout , ""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"" , s , tccp -> cblksty )"		7692337	0					
ANR	7692643	Callee	fprintf		7692337	0					
ANR	7692644	Identifier	fprintf		7692337	0					
ANR	7692645	ArgumentList	xmlout		7692337	1					
ANR	7692646	Argument	xmlout		7692337	0					
ANR	7692647	Identifier	xmlout		7692337	0					
ANR	7692648	Argument	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		7692337	1					
ANR	7692649	PrimaryExpression	"""%s    <CodeblockStyle>0x%02x</CodeblockStyle>\\n"""		7692337	0					
ANR	7692650	Argument	s		7692337	2					
ANR	7692651	Identifier	s		7692337	0					
ANR	7692652	Argument	tccp -> cblksty		7692337	3					
ANR	7692653	PtrMemberAccess	tccp -> cblksty		7692337	0					
ANR	7692654	Identifier	tccp		7692337	0					
ANR	7692655	Identifier	cblksty		7692337	1					
ANR	7692656	IfStatement	if ( notes )		7692337	13					
ANR	7692657	Condition	notes	1644:12:76537:76541	7692337	0	True				
ANR	7692658	Identifier	notes		7692337	0					
ANR	7692659	CompoundStatement		78:19:3730:3730	7692337	1					
ANR	7692660	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"	1645:12:76558:76700	7692337	0	True				
ANR	7692661	CallExpression	"fprintf ( xmlout , ""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"" , s )"		7692337	0					
ANR	7692662	Callee	fprintf		7692337	0					
ANR	7692663	Identifier	fprintf		7692337	0					
ANR	7692664	ArgumentList	xmlout		7692337	1					
ANR	7692665	Argument	xmlout		7692337	0					
ANR	7692666	Identifier	xmlout		7692337	0					
ANR	7692667	Argument	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		7692337	1					
ANR	7692668	PrimaryExpression	"""%s    <!-- For CodeblockStyle, bits mean (with value 1=feature on, 0=off): -->\\n"""		7692337	0					
ANR	7692669	Argument	s		7692337	2					
ANR	7692670	Identifier	s		7692337	0					
ANR	7692671	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"	1648:12:76714:76815	7692337	1	True				
ANR	7692672	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"" , s )"		7692337	0					
ANR	7692673	Callee	fprintf		7692337	0					
ANR	7692674	Identifier	fprintf		7692337	0					
ANR	7692675	ArgumentList	xmlout		7692337	1					
ANR	7692676	Argument	xmlout		7692337	0					
ANR	7692677	Identifier	xmlout		7692337	0					
ANR	7692678	Argument	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		7692337	1					
ANR	7692679	PrimaryExpression	"""%s    <!-- bit 0: Selective arithmetic coding bypass. -->\\n"""		7692337	0					
ANR	7692680	Argument	s		7692337	2					
ANR	7692681	Identifier	s		7692337	0					
ANR	7692682	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"	1650:12:76829:76969	7692337	2	True				
ANR	7692683	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"" , s )"		7692337	0					
ANR	7692684	Callee	fprintf		7692337	0					
ANR	7692685	Identifier	fprintf		7692337	0					
ANR	7692686	ArgumentList	xmlout		7692337	1					
ANR	7692687	Argument	xmlout		7692337	0					
ANR	7692688	Identifier	xmlout		7692337	0					
ANR	7692689	Argument	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		7692337	1					
ANR	7692690	PrimaryExpression	"""%s    <!-- bit 1: Reset context probabilities on coding pass boundaries. -->\\n"""		7692337	0					
ANR	7692691	Argument	s		7692337	2					
ANR	7692692	Identifier	s		7692337	0					
ANR	7692693	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"	1653:12:76983:77084	7692337	3	True				
ANR	7692694	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 2: Termination on each coding pass. -->\\n"" , s )"		7692337	0					
ANR	7692695	Callee	fprintf		7692337	0					
ANR	7692696	Identifier	fprintf		7692337	0					
ANR	7692697	ArgumentList	xmlout		7692337	1					
ANR	7692698	Argument	xmlout		7692337	0					
ANR	7692699	Identifier	xmlout		7692337	0					
ANR	7692700	Argument	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		7692337	1					
ANR	7692701	PrimaryExpression	"""%s    <!-- bit 2: Termination on each coding pass. -->\\n"""		7692337	0					
ANR	7692702	Argument	s		7692337	2					
ANR	7692703	Identifier	s		7692337	0					
ANR	7692704	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"	1655:12:77098:77173	7692337	4	True				
ANR	7692705	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 3: Vertically causal context. -->\\n"" , s )"		7692337	0					
ANR	7692706	Callee	fprintf		7692337	0					
ANR	7692707	Identifier	fprintf		7692337	0					
ANR	7692708	ArgumentList	xmlout		7692337	1					
ANR	7692709	Argument	xmlout		7692337	0					
ANR	7692710	Identifier	xmlout		7692337	0					
ANR	7692711	Argument	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		7692337	1					
ANR	7692712	PrimaryExpression	"""%s    <!-- bit 3: Vertically causal context. -->\\n"""		7692337	0					
ANR	7692713	Argument	s		7692337	2					
ANR	7692714	Identifier	s		7692337	0					
ANR	7692715	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"	1656:12:77187:77260	7692337	5	True				
ANR	7692716	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 4: Predictable termination. -->\\n"" , s )"		7692337	0					
ANR	7692717	Callee	fprintf		7692337	0					
ANR	7692718	Identifier	fprintf		7692337	0					
ANR	7692719	ArgumentList	xmlout		7692337	1					
ANR	7692720	Argument	xmlout		7692337	0					
ANR	7692721	Identifier	xmlout		7692337	0					
ANR	7692722	Argument	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		7692337	1					
ANR	7692723	PrimaryExpression	"""%s    <!-- bit 4: Predictable termination. -->\\n"""		7692337	0					
ANR	7692724	Argument	s		7692337	2					
ANR	7692725	Identifier	s		7692337	0					
ANR	7692726	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"	1657:12:77274:77353	7692337	6	True				
ANR	7692727	CallExpression	"fprintf ( xmlout , ""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"" , s )"		7692337	0					
ANR	7692728	Callee	fprintf		7692337	0					
ANR	7692729	Identifier	fprintf		7692337	0					
ANR	7692730	ArgumentList	xmlout		7692337	1					
ANR	7692731	Argument	xmlout		7692337	0					
ANR	7692732	Identifier	xmlout		7692337	0					
ANR	7692733	Argument	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		7692337	1					
ANR	7692734	PrimaryExpression	"""%s    <!-- bit 5: Segmentation symbols are used. -->\\n"""		7692337	0					
ANR	7692735	Argument	s		7692337	2					
ANR	7692736	Identifier	s		7692337	0					
ANR	7692737	ExpressionStatement	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"	1659:8:77373:77473	7692337	14	True				
ANR	7692738	CallExpression	"fprintf ( xmlout , ""%s    <Transformation>%d</Transformation>\\n"" , s , tccp -> qmfbid )"		7692337	0					
ANR	7692739	Callee	fprintf		7692337	0					
ANR	7692740	Identifier	fprintf		7692337	0					
ANR	7692741	ArgumentList	xmlout		7692337	1					
ANR	7692742	Argument	xmlout		7692337	0					
ANR	7692743	Identifier	xmlout		7692337	0					
ANR	7692744	Argument	"""%s    <Transformation>%d</Transformation>\\n"""		7692337	1					
ANR	7692745	PrimaryExpression	"""%s    <Transformation>%d</Transformation>\\n"""		7692337	0					
ANR	7692746	Argument	s		7692337	2					
ANR	7692747	Identifier	s		7692337	0					
ANR	7692748	Argument	tccp -> qmfbid		7692337	3					
ANR	7692749	PtrMemberAccess	tccp -> qmfbid		7692337	0					
ANR	7692750	Identifier	tccp		7692337	0					
ANR	7692751	Identifier	qmfbid		7692337	1					
ANR	7692752	IfStatement	if ( notes )		7692337	15					
ANR	7692753	Condition	notes	1661:12:77513:77517	7692337	0	True				
ANR	7692754	Identifier	notes		7692337	0					
ANR	7692755	CompoundStatement		95:19:4706:4706	7692337	1					
ANR	7692756	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"	1662:12:77534:77691	7692337	0	True				
ANR	7692757	CallExpression	"fprintf ( xmlout , ""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"" , s )"		7692337	0					
ANR	7692758	Callee	fprintf		7692337	0					
ANR	7692759	Identifier	fprintf		7692337	0					
ANR	7692760	ArgumentList	xmlout		7692337	1					
ANR	7692761	Argument	xmlout		7692337	0					
ANR	7692762	Identifier	xmlout		7692337	0					
ANR	7692763	Argument	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		7692337	1					
ANR	7692764	PrimaryExpression	"""%s    <!-- For Transformation, 0=\\""9-7 irreversible filter\\"", 1=\\""5-3 reversible filter\\"" -->\\n"""		7692337	0					
ANR	7692765	Argument	s		7692337	2					
ANR	7692766	Identifier	s		7692337	0					
ANR	7692767	IfStatement	if ( tccp -> csty & J2K_CP_CSTY_PRT )		7692337	16					
ANR	7692768	Condition	tccp -> csty & J2K_CP_CSTY_PRT	1666:12:77715:77742	7692337	0	True				
ANR	7692769	BitAndExpression	tccp -> csty & J2K_CP_CSTY_PRT		7692337	0		&			
ANR	7692770	PtrMemberAccess	tccp -> csty		7692337	0					
ANR	7692771	Identifier	tccp		7692337	0					
ANR	7692772	Identifier	csty		7692337	1					
ANR	7692773	Identifier	J2K_CP_CSTY_PRT		7692337	1					
ANR	7692774	CompoundStatement		100:42:4931:4931	7692337	1					
ANR	7692775	ExpressionStatement	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"	1667:12:77759:77806	7692337	0	True				
ANR	7692776	CallExpression	"fprintf ( xmlout , ""%s    <PrecinctSize>\\n"" , s )"		7692337	0					
ANR	7692777	Callee	fprintf		7692337	0					
ANR	7692778	Identifier	fprintf		7692337	0					
ANR	7692779	ArgumentList	xmlout		7692337	1					
ANR	7692780	Argument	xmlout		7692337	0					
ANR	7692781	Identifier	xmlout		7692337	0					
ANR	7692782	Argument	"""%s    <PrecinctSize>\\n"""		7692337	1					
ANR	7692783	PrimaryExpression	"""%s    <PrecinctSize>\\n"""		7692337	0					
ANR	7692784	Argument	s		7692337	2					
ANR	7692785	Identifier	s		7692337	0					
ANR	7692786	IfStatement	if ( notes )		7692337	1					
ANR	7692787	Condition	notes	1668:16:77850:77854	7692337	0	True				
ANR	7692788	Identifier	notes		7692337	0					
ANR	7692789	CompoundStatement		102:23:5043:5043	7692337	1					
ANR	7692790	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"	1669:16:77875:78054	7692337	0	True				
ANR	7692791	CallExpression	"fprintf ( xmlout , ""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"" , s )"		7692337	0					
ANR	7692792	Callee	fprintf		7692337	0					
ANR	7692793	Identifier	fprintf		7692337	0					
ANR	7692794	ArgumentList	xmlout		7692337	1					
ANR	7692795	Argument	xmlout		7692337	0					
ANR	7692796	Identifier	xmlout		7692337	0					
ANR	7692797	Argument	"""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		7692337	1					
ANR	7692798	PrimaryExpression	"""%s      <!-- These are size exponents PPx and PPy. May be zero only for first level (aka N(L)LL subband)-->\\n"""		7692337	0					
ANR	7692799	Argument	s		7692337	2					
ANR	7692800	Identifier	s		7692337	0					
ANR	7692801	ForStatement	for ( i = 0 ; i < tccp -> numresolutions - 1 ; i ++ )		7692337	2					
ANR	7692802	ForInit	i = 0 ;	1673:17:78087:78092	7692337	0	True				
ANR	7692803	AssignmentExpression	i = 0		7692337	0		=			
ANR	7692804	Identifier	i		7692337	0					
ANR	7692805	PrimaryExpression	0		7692337	1					
ANR	7692806	Condition	i < tccp -> numresolutions - 1	1673:24:78094:78121	7692337	1	True				
ANR	7692807	RelationalExpression	i < tccp -> numresolutions - 1		7692337	0		<			
ANR	7692808	Identifier	i		7692337	0					
ANR	7692809	AdditiveExpression	tccp -> numresolutions - 1		7692337	1		-			
ANR	7692810	PtrMemberAccess	tccp -> numresolutions		7692337	0					
ANR	7692811	Identifier	tccp		7692337	0					
ANR	7692812	Identifier	numresolutions		7692337	1					
ANR	7692813	PrimaryExpression	1		7692337	1					
ANR	7692814	PostIncDecOperationExpression	i ++	1674:20:78144:78146	7692337	2	True				
ANR	7692815	Identifier	i		7692337	0					
ANR	7692816	IncDec	++		7692337	1					
ANR	7692817	CompoundStatement		108:25:5335:5335	7692337	3					
ANR	7692818	ExpressionStatement	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"	1675:16:78217:78325	7692337	0	True				
ANR	7692819	CallExpression	"fprintf ( xmlout , ""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"" , s , i )"		7692337	0					
ANR	7692820	Callee	fprintf		7692337	0					
ANR	7692821	Identifier	fprintf		7692337	0					
ANR	7692822	ArgumentList	xmlout		7692337	1					
ANR	7692823	Argument	xmlout		7692337	0					
ANR	7692824	Identifier	xmlout		7692337	0					
ANR	7692825	Argument	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		7692337	1					
ANR	7692826	PrimaryExpression	"""%s      <PrecinctHeightAndWidth  ResolutionLevel=\\""%d\\"">\\n"""		7692337	0					
ANR	7692827	Argument	s		7692337	2					
ANR	7692828	Identifier	s		7692337	0					
ANR	7692829	Argument	i		7692337	3					
ANR	7692830	Identifier	i		7692337	0					
ANR	7692831	IfStatement	if ( raw )		7692337	1					
ANR	7692832	Condition	raw	1677:20:78347:78349	7692337	0	True				
ANR	7692833	Identifier	raw		7692337	0					
ANR	7692834	CompoundStatement		111:25:5538:5538	7692337	1					
ANR	7692835	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"	1678:20:78374:78495	7692337	0	True				
ANR	7692836	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ] )"		7692337	0					
ANR	7692837	Callee	fprintf		7692337	0					
ANR	7692838	Identifier	fprintf		7692337	0					
ANR	7692839	ArgumentList	xmlout		7692337	1					
ANR	7692840	Argument	xmlout		7692337	0					
ANR	7692841	Identifier	xmlout		7692337	0					
ANR	7692842	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7692337	1					
ANR	7692843	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7692337	0					
ANR	7692844	Argument	s		7692337	2					
ANR	7692845	Identifier	s		7692337	0					
ANR	7692846	Argument	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		7692337	3					
ANR	7692847	InclusiveOrExpression	( tccp -> prch [ i ] << 4 ) | tccp -> prcw [ i ]		7692337	0		|			
ANR	7692848	ShiftExpression	tccp -> prch [ i ] << 4		7692337	0		<<			
ANR	7692849	ArrayIndexing	tccp -> prch [ i ]		7692337	0					
ANR	7692850	PtrMemberAccess	tccp -> prch		7692337	0					
ANR	7692851	Identifier	tccp		7692337	0					
ANR	7692852	Identifier	prch		7692337	1					
ANR	7692853	Identifier	i		7692337	1					
ANR	7692854	PrimaryExpression	4		7692337	1					
ANR	7692855	ArrayIndexing	tccp -> prcw [ i ]		7692337	1					
ANR	7692856	PtrMemberAccess	tccp -> prcw		7692337	0					
ANR	7692857	Identifier	tccp		7692337	0					
ANR	7692858	Identifier	prcw		7692337	1					
ANR	7692859	Identifier	i		7692337	1					
ANR	7692860	IfStatement	if ( derived )		7692337	2					
ANR	7692861	Condition	derived	1681:20:78574:78580	7692337	0	True				
ANR	7692862	Identifier	derived		7692337	0					
ANR	7692863	CompoundStatement		115:29:5769:5769	7692337	1					
ANR	7692864	ExpressionStatement	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"	1682:20:78605:78717	7692337	0	True				
ANR	7692865	CallExpression	"fprintf ( xmlout , ""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"" , s , tccp -> prcw [ i ] )"		7692337	0					
ANR	7692866	Callee	fprintf		7692337	0					
ANR	7692867	Identifier	fprintf		7692337	0					
ANR	7692868	ArgumentList	xmlout		7692337	1					
ANR	7692869	Argument	xmlout		7692337	0					
ANR	7692870	Identifier	xmlout		7692337	0					
ANR	7692871	Argument	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		7692337	1					
ANR	7692872	PrimaryExpression	"""%s        <WidthAsDecimal>%d</WidthAsDecimal>\\n"""		7692337	0					
ANR	7692873	Argument	s		7692337	2					
ANR	7692874	Identifier	s		7692337	0					
ANR	7692875	Argument	tccp -> prcw [ i ]		7692337	3					
ANR	7692876	ArrayIndexing	tccp -> prcw [ i ]		7692337	0					
ANR	7692877	PtrMemberAccess	tccp -> prcw		7692337	0					
ANR	7692878	Identifier	tccp		7692337	0					
ANR	7692879	Identifier	prcw		7692337	1					
ANR	7692880	Identifier	i		7692337	1					
ANR	7692881	ExpressionStatement	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"	1684:20:78739:78853	7692337	1	True				
ANR	7692882	CallExpression	"fprintf ( xmlout , ""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"" , s , tccp -> prch [ i ] )"		7692337	0					
ANR	7692883	Callee	fprintf		7692337	0					
ANR	7692884	Identifier	fprintf		7692337	0					
ANR	7692885	ArgumentList	xmlout		7692337	1					
ANR	7692886	Argument	xmlout		7692337	0					
ANR	7692887	Identifier	xmlout		7692337	0					
ANR	7692888	Argument	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		7692337	1					
ANR	7692889	PrimaryExpression	"""%s        <HeightAsDecimal>%d</HeightAsDecimal>\\n"""		7692337	0					
ANR	7692890	Argument	s		7692337	2					
ANR	7692891	Identifier	s		7692337	0					
ANR	7692892	Argument	tccp -> prch [ i ]		7692337	3					
ANR	7692893	ArrayIndexing	tccp -> prch [ i ]		7692337	0					
ANR	7692894	PtrMemberAccess	tccp -> prch		7692337	0					
ANR	7692895	Identifier	tccp		7692337	0					
ANR	7692896	Identifier	prch		7692337	1					
ANR	7692897	Identifier	i		7692337	1					
ANR	7692898	ExpressionStatement	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"	1687:16:78889:78950	7692337	3	True				
ANR	7692899	CallExpression	"fprintf ( xmlout , ""%s      </PrecinctHeightAndWidth>\\n"" , s , i )"		7692337	0					
ANR	7692900	Callee	fprintf		7692337	0					
ANR	7692901	Identifier	fprintf		7692337	0					
ANR	7692902	ArgumentList	xmlout		7692337	1					
ANR	7692903	Argument	xmlout		7692337	0					
ANR	7692904	Identifier	xmlout		7692337	0					
ANR	7692905	Argument	"""%s      </PrecinctHeightAndWidth>\\n"""		7692337	1					
ANR	7692906	PrimaryExpression	"""%s      </PrecinctHeightAndWidth>\\n"""		7692337	0					
ANR	7692907	Argument	s		7692337	2					
ANR	7692908	Identifier	s		7692337	0					
ANR	7692909	Argument	i		7692337	3					
ANR	7692910	Identifier	i		7692337	0					
ANR	7692911	ExpressionStatement	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"	1689:12:78978:79026	7692337	3	True				
ANR	7692912	CallExpression	"fprintf ( xmlout , ""%s    </PrecinctSize>\\n"" , s )"		7692337	0					
ANR	7692913	Callee	fprintf		7692337	0					
ANR	7692914	Identifier	fprintf		7692337	0					
ANR	7692915	ArgumentList	xmlout		7692337	1					
ANR	7692916	Argument	xmlout		7692337	0					
ANR	7692917	Identifier	xmlout		7692337	0					
ANR	7692918	Argument	"""%s    </PrecinctSize>\\n"""		7692337	1					
ANR	7692919	PrimaryExpression	"""%s    </PrecinctSize>\\n"""		7692337	0					
ANR	7692920	Argument	s		7692337	2					
ANR	7692921	Identifier	s		7692337	0					
ANR	7692922	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPcoc>\\n"" , s )"	1691:8:79072:79113	7692337	17	True				
ANR	7692923	CallExpression	"fprintf ( xmlout , ""%s  </SPcoc>\\n"" , s )"		7692337	0					
ANR	7692924	Callee	fprintf		7692337	0					
ANR	7692925	Identifier	fprintf		7692337	0					
ANR	7692926	ArgumentList	xmlout		7692337	1					
ANR	7692927	Argument	xmlout		7692337	0					
ANR	7692928	Identifier	xmlout		7692337	0					
ANR	7692929	Argument	"""%s  </SPcoc>\\n"""		7692337	1					
ANR	7692930	PrimaryExpression	"""%s  </SPcoc>\\n"""		7692337	0					
ANR	7692931	Argument	s		7692337	2					
ANR	7692932	Identifier	s		7692337	0					
ANR	7692933	ExpressionStatement	"fprintf ( xmlout , ""%s</CodingStyleComponent>\\n"" , s )"	1692:8:79123:79177	7692337	18	True				
ANR	7692934	CallExpression	"fprintf ( xmlout , ""%s</CodingStyleComponent>\\n"" , s )"		7692337	0					
ANR	7692935	Callee	fprintf		7692337	0					
ANR	7692936	Identifier	fprintf		7692337	0					
ANR	7692937	ArgumentList	xmlout		7692337	1					
ANR	7692938	Argument	xmlout		7692337	0					
ANR	7692939	Identifier	xmlout		7692337	0					
ANR	7692940	Argument	"""%s</CodingStyleComponent>\\n"""		7692337	1					
ANR	7692941	PrimaryExpression	"""%s</CodingStyleComponent>\\n"""		7692337	0					
ANR	7692942	Argument	s		7692337	2					
ANR	7692943	Identifier	s		7692337	0					
ANR	7692944	ReturnType	void		7692337	1					
ANR	7692945	Identifier	xml_out_frame_coc		7692337	2					
ANR	7692946	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		7692337	3					
ANR	7692947	Parameter	FILE * xmlout	1565:23:72703:72714	7692337	0	True				
ANR	7692948	ParameterType	FILE *		7692337	0					
ANR	7692949	Identifier	xmlout		7692337	1					
ANR	7692950	Parameter	opj_tcp_t * tcp	1565:37:72717:72730	7692337	1	True				
ANR	7692951	ParameterType	opj_tcp_t *		7692337	0					
ANR	7692952	Identifier	tcp		7692337	1					
ANR	7692953	Parameter	int numcomps	1566:23:72756:72767	7692337	2	True				
ANR	7692954	ParameterType	int		7692337	0					
ANR	7692955	Identifier	numcomps		7692337	1					
ANR	7692956	CFGEntryNode	ENTRY		7692337		True				
ANR	7692957	CFGExitNode	EXIT		7692337		True				
ANR	7692958	Symbol	J2K_CP_CSTY_PRT		7692337						
ANR	7692959	Symbol	notes		7692337						
ANR	7692960	Symbol	* tccp -> prch		7692337						
ANR	7692961	Symbol	* tcp		7692337						
ANR	7692962	Symbol	tccp -> qmfbid		7692337						
ANR	7692963	Symbol	j2k_default_tcp		7692337						
ANR	7692964	Symbol	tccp -> numresolutions		7692337						
ANR	7692965	Symbol	* * tccp		7692337						
ANR	7692966	Symbol	tccp -> cblkh		7692337						
ANR	7692967	Symbol	* tccp -> prcw		7692337						
ANR	7692968	Symbol	tccp -> cblksty		7692337						
ANR	7692969	Symbol	tccp -> prch		7692337						
ANR	7692970	Symbol	derived		7692337						
ANR	7692971	Symbol	numcomps		7692337						
ANR	7692972	Symbol	tcp		7692337						
ANR	7692973	Symbol	tccp -> csty		7692337						
ANR	7692974	Symbol	tcp -> tccps		7692337						
ANR	7692975	Symbol	tccp -> prcw		7692337						
ANR	7692976	Symbol	i		7692337						
ANR	7692977	Symbol	same_component_style		7692337						
ANR	7692978	Symbol	raw		7692337						
ANR	7692979	Symbol	tccp		7692337						
ANR	7692980	Symbol	tccp -> cblkw		7692337						
ANR	7692981	Symbol	xmlout		7692337						
ANR	7692982	Symbol	compno		7692337						
ANR	7692983	Symbol	s		7692337						
ANR	7692984	Symbol	* i		7692337						
ANR	7692985	Symbol	* tccp		7692337						
ANR	7692986	Symbol	firstcomp_tccp		7692337						
ANR	7692987	Symbol	spaces		7692337						
ANR	7692988	Function	same_component_style	1698:0:79209:79908							
ANR	7692989	FunctionDef	"same_component_style (opj_tccp_t * tccp1 , opj_tccp_t * tccp2)"		7692988	0					
ANR	7692990	CompoundStatement		1699:0:79273:79908	7692988	0					
ANR	7692991	IdentifierDeclStatement	int i ;	1700:4:79279:79284	7692988	0	True				
ANR	7692992	IdentifierDecl	i		7692988	0					
ANR	7692993	IdentifierDeclType	int		7692988	0					
ANR	7692994	Identifier	i		7692988	1					
ANR	7692995	IfStatement	if ( tccp1 -> numresolutions != tccp2 -> numresolutions )		7692988	1					
ANR	7692996	Condition	tccp1 -> numresolutions != tccp2 -> numresolutions	1702:8:79295:79340	7692988	0	True				
ANR	7692997	EqualityExpression	tccp1 -> numresolutions != tccp2 -> numresolutions		7692988	0		!=			
ANR	7692998	PtrMemberAccess	tccp1 -> numresolutions		7692988	0					
ANR	7692999	Identifier	tccp1		7692988	0					
ANR	7693000	Identifier	numresolutions		7692988	1					
ANR	7693001	PtrMemberAccess	tccp2 -> numresolutions		7692988	1					
ANR	7693002	Identifier	tccp2		7692988	0					
ANR	7693003	Identifier	numresolutions		7692988	1					
ANR	7693004	CompoundStatement		4:56:69:69	7692988	1					
ANR	7693005	ReturnStatement	return FALSE ;	1703:8:79353:79365	7692988	0	True				
ANR	7693006	Identifier	FALSE		7692988	0					
ANR	7693007	IfStatement	if ( tccp1 -> cblkw != tccp2 -> cblkw )		7692988	2					
ANR	7693008	Condition	tccp1 -> cblkw != tccp2 -> cblkw	1705:8:79381:79408	7692988	0	True				
ANR	7693009	EqualityExpression	tccp1 -> cblkw != tccp2 -> cblkw		7692988	0		!=			
ANR	7693010	PtrMemberAccess	tccp1 -> cblkw		7692988	0					
ANR	7693011	Identifier	tccp1		7692988	0					
ANR	7693012	Identifier	cblkw		7692988	1					
ANR	7693013	PtrMemberAccess	tccp2 -> cblkw		7692988	1					
ANR	7693014	Identifier	tccp2		7692988	0					
ANR	7693015	Identifier	cblkw		7692988	1					
ANR	7693016	CompoundStatement		7:38:137:137	7692988	1					
ANR	7693017	ReturnStatement	return FALSE ;	1706:8:79421:79433	7692988	0	True				
ANR	7693018	Identifier	FALSE		7692988	0					
ANR	7693019	IfStatement	if ( tccp1 -> cblkh != tccp2 -> cblkh )		7692988	3					
ANR	7693020	Condition	tccp1 -> cblkh != tccp2 -> cblkh	1708:8:79449:79476	7692988	0	True				
ANR	7693021	EqualityExpression	tccp1 -> cblkh != tccp2 -> cblkh		7692988	0		!=			
ANR	7693022	PtrMemberAccess	tccp1 -> cblkh		7692988	0					
ANR	7693023	Identifier	tccp1		7692988	0					
ANR	7693024	Identifier	cblkh		7692988	1					
ANR	7693025	PtrMemberAccess	tccp2 -> cblkh		7692988	1					
ANR	7693026	Identifier	tccp2		7692988	0					
ANR	7693027	Identifier	cblkh		7692988	1					
ANR	7693028	CompoundStatement		10:38:205:205	7692988	1					
ANR	7693029	ReturnStatement	return FALSE ;	1709:8:79489:79501	7692988	0	True				
ANR	7693030	Identifier	FALSE		7692988	0					
ANR	7693031	IfStatement	if ( tccp1 -> cblksty != tccp2 -> cblksty )		7692988	4					
ANR	7693032	Condition	tccp1 -> cblksty != tccp2 -> cblksty	1711:8:79517:79548	7692988	0	True				
ANR	7693033	EqualityExpression	tccp1 -> cblksty != tccp2 -> cblksty		7692988	0		!=			
ANR	7693034	PtrMemberAccess	tccp1 -> cblksty		7692988	0					
ANR	7693035	Identifier	tccp1		7692988	0					
ANR	7693036	Identifier	cblksty		7692988	1					
ANR	7693037	PtrMemberAccess	tccp2 -> cblksty		7692988	1					
ANR	7693038	Identifier	tccp2		7692988	0					
ANR	7693039	Identifier	cblksty		7692988	1					
ANR	7693040	CompoundStatement		13:42:277:277	7692988	1					
ANR	7693041	ReturnStatement	return FALSE ;	1712:8:79561:79573	7692988	0	True				
ANR	7693042	Identifier	FALSE		7692988	0					
ANR	7693043	IfStatement	if ( tccp1 -> csty != tccp2 -> csty )		7692988	5					
ANR	7693044	Condition	tccp1 -> csty != tccp2 -> csty	1714:8:79589:79614	7692988	0	True				
ANR	7693045	EqualityExpression	tccp1 -> csty != tccp2 -> csty		7692988	0		!=			
ANR	7693046	PtrMemberAccess	tccp1 -> csty		7692988	0					
ANR	7693047	Identifier	tccp1		7692988	0					
ANR	7693048	Identifier	csty		7692988	1					
ANR	7693049	PtrMemberAccess	tccp2 -> csty		7692988	1					
ANR	7693050	Identifier	tccp2		7692988	0					
ANR	7693051	Identifier	csty		7692988	1					
ANR	7693052	CompoundStatement		16:36:343:343	7692988	1					
ANR	7693053	ReturnStatement	return FALSE ;	1715:8:79627:79639	7692988	0	True				
ANR	7693054	Identifier	FALSE		7692988	0					
ANR	7693055	IfStatement	if ( tccp1 -> csty & J2K_CP_CSTY_PRT )		7692988	6					
ANR	7693056	Condition	tccp1 -> csty & J2K_CP_CSTY_PRT	1718:8:79656:79684	7692988	0	True				
ANR	7693057	BitAndExpression	tccp1 -> csty & J2K_CP_CSTY_PRT		7692988	0		&			
ANR	7693058	PtrMemberAccess	tccp1 -> csty		7692988	0					
ANR	7693059	Identifier	tccp1		7692988	0					
ANR	7693060	Identifier	csty		7692988	1					
ANR	7693061	Identifier	J2K_CP_CSTY_PRT		7692988	1					
ANR	7693062	CompoundStatement		20:39:413:413	7692988	1					
ANR	7693063	ForStatement	for ( i = 0 ; i < tccp1 -> numresolutions ; i ++ )		7692988	0					
ANR	7693064	ForInit	i = 0 ;	1719:13:79702:79707	7692988	0	True				
ANR	7693065	AssignmentExpression	i = 0		7692988	0		=			
ANR	7693066	Identifier	i		7692988	0					
ANR	7693067	PrimaryExpression	0		7692988	1					
ANR	7693068	Condition	i < tccp1 -> numresolutions	1719:20:79709:79733	7692988	1	True				
ANR	7693069	RelationalExpression	i < tccp1 -> numresolutions		7692988	0		<			
ANR	7693070	Identifier	i		7692988	0					
ANR	7693071	PtrMemberAccess	tccp1 -> numresolutions		7692988	1					
ANR	7693072	Identifier	tccp1		7692988	0					
ANR	7693073	Identifier	numresolutions		7692988	1					
ANR	7693074	PostIncDecOperationExpression	i ++	1719:47:79736:79738	7692988	2	True				
ANR	7693075	Identifier	i		7692988	0					
ANR	7693076	IncDec	++		7692988	1					
ANR	7693077	CompoundStatement		21:52:467:467	7692988	3					
ANR	7693078	IfStatement	if ( tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ] )		7692988	0					
ANR	7693079	Condition	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ]	1720:16:79759:79826	7692988	0	True				
ANR	7693080	OrExpression	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ] || tccp1 -> prch [ i ] != tccp2 -> prch [ i ]		7692988	0		||			
ANR	7693081	EqualityExpression	tccp1 -> prcw [ i ] != tccp2 -> prcw [ i ]		7692988	0		!=			
ANR	7693082	ArrayIndexing	tccp1 -> prcw [ i ]		7692988	0					
ANR	7693083	PtrMemberAccess	tccp1 -> prcw		7692988	0					
ANR	7693084	Identifier	tccp1		7692988	0					
ANR	7693085	Identifier	prcw		7692988	1					
ANR	7693086	Identifier	i		7692988	1					
ANR	7693087	ArrayIndexing	tccp2 -> prcw [ i ]		7692988	1					
ANR	7693088	PtrMemberAccess	tccp2 -> prcw		7692988	0					
ANR	7693089	Identifier	tccp2		7692988	0					
ANR	7693090	Identifier	prcw		7692988	1					
ANR	7693091	Identifier	i		7692988	1					
ANR	7693092	EqualityExpression	tccp1 -> prch [ i ] != tccp2 -> prch [ i ]		7692988	1		!=			
ANR	7693093	ArrayIndexing	tccp1 -> prch [ i ]		7692988	0					
ANR	7693094	PtrMemberAccess	tccp1 -> prch		7692988	0					
ANR	7693095	Identifier	tccp1		7692988	0					
ANR	7693096	Identifier	prch		7692988	1					
ANR	7693097	Identifier	i		7692988	1					
ANR	7693098	ArrayIndexing	tccp2 -> prch [ i ]		7692988	1					
ANR	7693099	PtrMemberAccess	tccp2 -> prch		7692988	0					
ANR	7693100	Identifier	tccp2		7692988	0					
ANR	7693101	Identifier	prch		7692988	1					
ANR	7693102	Identifier	i		7692988	1					
ANR	7693103	CompoundStatement		22:86:555:555	7692988	1					
ANR	7693104	ReturnStatement	return FALSE ;	1721:16:79847:79859	7692988	0	True				
ANR	7693105	Identifier	FALSE		7692988	0					
ANR	7693106	ReturnStatement	return TRUE ;	1725:4:79895:79906	7692988	7	True				
ANR	7693107	Identifier	TRUE		7692988	0					
ANR	7693108	ReturnType	BOOL		7692988	1					
ANR	7693109	Identifier	same_component_style		7692988	2					
ANR	7693110	ParameterList	"opj_tccp_t * tccp1 , opj_tccp_t * tccp2"		7692988	3					
ANR	7693111	Parameter	opj_tccp_t * tccp1	1698:26:79235:79251	7692988	0	True				
ANR	7693112	ParameterType	opj_tccp_t *		7692988	0					
ANR	7693113	Identifier	tccp1		7692988	1					
ANR	7693114	Parameter	opj_tccp_t * tccp2	1698:45:79254:79270	7692988	1	True				
ANR	7693115	ParameterType	opj_tccp_t *		7692988	0					
ANR	7693116	Identifier	tccp2		7692988	1					
ANR	7693117	CFGEntryNode	ENTRY		7692988		True				
ANR	7693118	CFGExitNode	EXIT		7692988		True				
ANR	7693119	Symbol	tccp2 -> cblkh		7692988						
ANR	7693120	Symbol	J2K_CP_CSTY_PRT		7692988						
ANR	7693121	Symbol	tccp1		7692988						
ANR	7693122	Symbol	tccp2		7692988						
ANR	7693123	Symbol	tccp2 -> prch		7692988						
ANR	7693124	Symbol	tccp1 -> cblkw		7692988						
ANR	7693125	Symbol	* tccp2		7692988						
ANR	7693126	Symbol	tccp2 -> cblkw		7692988						
ANR	7693127	Symbol	* tccp2 -> prcw		7692988						
ANR	7693128	Symbol	tccp1 -> cblkh		7692988						
ANR	7693129	Symbol	* tccp1 -> prcw		7692988						
ANR	7693130	Symbol	tccp2 -> prcw		7692988						
ANR	7693131	Symbol	tccp1 -> csty		7692988						
ANR	7693132	Symbol	tccp2 -> numresolutions		7692988						
ANR	7693133	Symbol	tccp2 -> csty		7692988						
ANR	7693134	Symbol	tccp1 -> prcw		7692988						
ANR	7693135	Symbol	i		7692988						
ANR	7693136	Symbol	tccp2 -> cblksty		7692988						
ANR	7693137	Symbol	TRUE		7692988						
ANR	7693138	Symbol	* tccp2 -> prch		7692988						
ANR	7693139	Symbol	* tccp1 -> prch		7692988						
ANR	7693140	Symbol	* tccp1		7692988						
ANR	7693141	Symbol	* i		7692988						
ANR	7693142	Symbol	tccp1 -> prch		7692988						
ANR	7693143	Symbol	* * tccp1		7692988						
ANR	7693144	Symbol	FALSE		7692988						
ANR	7693145	Symbol	* * tccp2		7692988						
ANR	7693146	Symbol	tccp1 -> cblksty		7692988						
ANR	7693147	Symbol	tccp1 -> numresolutions		7692988						
ANR	7693148	Function	xml_out_frame_qcd	1730:0:79932:88378							
ANR	7693149	FunctionDef	"xml_out_frame_qcd (FILE * xmlout , opj_tcp_t * tcp)"		7693148	0					
ANR	7693150	CompoundStatement		1731:0:79985:88378	7693148	0					
ANR	7693151	IdentifierDeclStatement	opj_tccp_t * tccp ;	1733:4:80116:80132	7693148	0	True				
ANR	7693152	IdentifierDecl	* tccp		7693148	0					
ANR	7693153	IdentifierDeclType	opj_tccp_t *		7693148	0					
ANR	7693154	Identifier	tccp		7693148	1					
ANR	7693155	IdentifierDeclStatement	"int bandno , numbands ;"	1734:4:80138:80158	7693148	1	True				
ANR	7693156	IdentifierDecl	bandno		7693148	0					
ANR	7693157	IdentifierDeclType	int		7693148	0					
ANR	7693158	Identifier	bandno		7693148	1					
ANR	7693159	IdentifierDecl	numbands		7693148	1					
ANR	7693160	IdentifierDeclType	int		7693148	0					
ANR	7693161	Identifier	numbands		7693148	1					
ANR	7693162	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1735:4:80164:80196	7693148	2	True				
ANR	7693163	IdentifierDecl	"spaces [ 13 ] = ""            """		7693148	0					
ANR	7693164	IdentifierDeclType	char [ 13 ]		7693148	0					
ANR	7693165	Identifier	spaces		7693148	1					
ANR	7693166	PrimaryExpression	13		7693148	2					
ANR	7693167	AssignmentExpression	"spaces [ 13 ] = ""            """		7693148	3		=			
ANR	7693168	Identifier	spaces		7693148	0					
ANR	7693169	PrimaryExpression	"""            """		7693148	1					
ANR	7693170	IdentifierDeclStatement	char * s = spaces ;	1736:4:80229:80245	7693148	3	True				
ANR	7693171	IdentifierDecl	* s = spaces		7693148	0					
ANR	7693172	IdentifierDeclType	char *		7693148	0					
ANR	7693173	Identifier	s		7693148	1					
ANR	7693174	AssignmentExpression	* s = spaces		7693148	2		=			
ANR	7693175	Identifier	spaces		7693148	0					
ANR	7693176	Identifier	spaces		7693148	1					
ANR	7693177	IfStatement	if ( tcp == j2k_default_tcp )		7693148	4					
ANR	7693178	Condition	tcp == j2k_default_tcp	1737:8:80255:80276	7693148	0	True				
ANR	7693179	EqualityExpression	tcp == j2k_default_tcp		7693148	0		==			
ANR	7693180	Identifier	tcp		7693148	0					
ANR	7693181	Identifier	j2k_default_tcp		7693148	1					
ANR	7693182	CompoundStatement		7:32:293:293	7693148	1					
ANR	7693183	ExpressionStatement	s ++	1738:8:80289:80292	7693148	0	True				
ANR	7693184	PostIncDecOperationExpression	s ++		7693148	0					
ANR	7693185	Identifier	s		7693148	0					
ANR	7693186	IncDec	++		7693148	1					
ANR	7693187	ExpressionStatement	s ++	1739:8:80302:80305	7693148	1	True				
ANR	7693188	PostIncDecOperationExpression	s ++		7693148	0					
ANR	7693189	Identifier	s		7693148	0					
ANR	7693190	IncDec	++		7693148	1					
ANR	7693191	ExpressionStatement	"fprintf ( xmlout , ""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"" , s )"	1743:4:80386:80465	7693148	5	True				
ANR	7693192	CallExpression	"fprintf ( xmlout , ""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"" , s )"		7693148	0					
ANR	7693193	Callee	fprintf		7693148	0					
ANR	7693194	Identifier	fprintf		7693148	0					
ANR	7693195	ArgumentList	xmlout		7693148	1					
ANR	7693196	Argument	xmlout		7693148	0					
ANR	7693197	Identifier	xmlout		7693148	0					
ANR	7693198	Argument	"""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"""		7693148	1					
ANR	7693199	PrimaryExpression	"""%s<QuantizationDefault Marker=\\""QCD\\"">\\n"""		7693148	0					
ANR	7693200	Argument	s		7693148	2					
ANR	7693201	Identifier	s		7693148	0					
ANR	7693202	ExpressionStatement	tccp = & ( tcp -> tccps [ 0 ] )	1745:4:80520:80543	7693148	6	True				
ANR	7693203	AssignmentExpression	tccp = & ( tcp -> tccps [ 0 ] )		7693148	0		=			
ANR	7693204	Identifier	tccp		7693148	0					
ANR	7693205	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		7693148	1					
ANR	7693206	UnaryOperator	&		7693148	0					
ANR	7693207	ArrayIndexing	tcp -> tccps [ 0 ]		7693148	1					
ANR	7693208	PtrMemberAccess	tcp -> tccps		7693148	0					
ANR	7693209	Identifier	tcp		7693148	0					
ANR	7693210	Identifier	tccps		7693148	1					
ANR	7693211	PrimaryExpression	0		7693148	1					
ANR	7693212	ExpressionStatement	"fprintf ( xmlout , ""%s  <Sqcd>\\n"" , s )"	1747:4:80593:80632	7693148	7	True				
ANR	7693213	CallExpression	"fprintf ( xmlout , ""%s  <Sqcd>\\n"" , s )"		7693148	0					
ANR	7693214	Callee	fprintf		7693148	0					
ANR	7693215	Identifier	fprintf		7693148	0					
ANR	7693216	ArgumentList	xmlout		7693148	1					
ANR	7693217	Argument	xmlout		7693148	0					
ANR	7693218	Identifier	xmlout		7693148	0					
ANR	7693219	Argument	"""%s  <Sqcd>\\n"""		7693148	1					
ANR	7693220	PrimaryExpression	"""%s  <Sqcd>\\n"""		7693148	0					
ANR	7693221	Argument	s		7693148	2					
ANR	7693222	Identifier	s		7693148	0					
ANR	7693223	IfStatement	if ( notes )		7693148	8					
ANR	7693224	Condition	notes	1748:8:80660:80664	7693148	0	True				
ANR	7693225	Identifier	notes		7693148	0					
ANR	7693226	CompoundStatement		18:15:681:681	7693148	1					
ANR	7693227	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Default quantization style for all components. -->\\n"" , s )"	1749:8:80677:80776	7693148	0	True				
ANR	7693228	CallExpression	"fprintf ( xmlout , ""%s  <!-- Default quantization style for all components. -->\\n"" , s )"		7693148	0					
ANR	7693229	Callee	fprintf		7693148	0					
ANR	7693230	Identifier	fprintf		7693148	0					
ANR	7693231	ArgumentList	xmlout		7693148	1					
ANR	7693232	Argument	xmlout		7693148	0					
ANR	7693233	Identifier	xmlout		7693148	0					
ANR	7693234	Argument	"""%s  <!-- Default quantization style for all components. -->\\n"""		7693148	1					
ANR	7693235	PrimaryExpression	"""%s  <!-- Default quantization style for all components. -->\\n"""		7693148	0					
ANR	7693236	Argument	s		7693148	2					
ANR	7693237	Identifier	s		7693148	0					
ANR	7693238	IfStatement	if ( raw )		7693148	9					
ANR	7693239	Condition	raw	1752:8:80792:80794	7693148	0	True				
ANR	7693240	Identifier	raw		7693148	0					
ANR	7693241	CompoundStatement		22:13:811:811	7693148	1					
ANR	7693242	ExpressionStatement	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"	1753:8:80807:80915	7693148	0	True				
ANR	7693243	CallExpression	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"		7693148	0					
ANR	7693244	Callee	fprintf		7693148	0					
ANR	7693245	Identifier	fprintf		7693148	0					
ANR	7693246	ArgumentList	xmlout		7693148	1					
ANR	7693247	Argument	xmlout		7693148	0					
ANR	7693248	Identifier	xmlout		7693148	0					
ANR	7693249	Argument	"""%s    <AsHex>0x%02x</AsHex>\\n"""		7693148	1					
ANR	7693250	PrimaryExpression	"""%s    <AsHex>0x%02x</AsHex>\\n"""		7693148	0					
ANR	7693251	Argument	s		7693148	2					
ANR	7693252	Identifier	s		7693148	0					
ANR	7693253	Argument	( tccp -> numgbits ) << 5 | tccp -> qntsty		7693148	3					
ANR	7693254	InclusiveOrExpression	( tccp -> numgbits ) << 5 | tccp -> qntsty		7693148	0		|			
ANR	7693255	ShiftExpression	( tccp -> numgbits ) << 5		7693148	0		<<			
ANR	7693256	PtrMemberAccess	tccp -> numgbits		7693148	0					
ANR	7693257	Identifier	tccp		7693148	0					
ANR	7693258	Identifier	numgbits		7693148	1					
ANR	7693259	PrimaryExpression	5		7693148	1					
ANR	7693260	PtrMemberAccess	tccp -> qntsty		7693148	1					
ANR	7693261	Identifier	tccp		7693148	0					
ANR	7693262	Identifier	qntsty		7693148	1					
ANR	7693263	IfStatement	if ( derived )		7693148	10					
ANR	7693264	Condition	derived	1756:8:80931:80937	7693148	0	True				
ANR	7693265	Identifier	derived		7693148	0					
ANR	7693266	CompoundStatement		26:17:954:954	7693148	1					
ANR	7693267	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"	1757:8:80950:81054	7693148	0	True				
ANR	7693268	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"		7693148	0					
ANR	7693269	Callee	fprintf		7693148	0					
ANR	7693270	Identifier	fprintf		7693148	0					
ANR	7693271	ArgumentList	xmlout		7693148	1					
ANR	7693272	Argument	xmlout		7693148	0					
ANR	7693273	Identifier	xmlout		7693148	0					
ANR	7693274	Argument	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		7693148	1					
ANR	7693275	PrimaryExpression	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		7693148	0					
ANR	7693276	Argument	s		7693148	2					
ANR	7693277	Identifier	s		7693148	0					
ANR	7693278	Argument	tccp -> qntsty		7693148	3					
ANR	7693279	PtrMemberAccess	tccp -> qntsty		7693148	0					
ANR	7693280	Identifier	tccp		7693148	0					
ANR	7693281	Identifier	qntsty		7693148	1					
ANR	7693282	IfStatement	if ( notes )		7693148	11					
ANR	7693283	Condition	notes	1760:8:81070:81074	7693148	0	True				
ANR	7693284	Identifier	notes		7693148	0					
ANR	7693285	CompoundStatement		30:15:1091:1091	7693148	1					
ANR	7693286	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"" , s )"	1761:8:81087:81191	7693148	0	True				
ANR	7693287	CallExpression	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"" , s )"		7693148	0					
ANR	7693288	Callee	fprintf		7693148	0					
ANR	7693289	Identifier	fprintf		7693148	0					
ANR	7693290	ArgumentList	xmlout		7693148	1					
ANR	7693291	Argument	xmlout		7693148	0					
ANR	7693292	Identifier	xmlout		7693148	0					
ANR	7693293	Argument	"""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"""		7693148	1					
ANR	7693294	PrimaryExpression	"""%s    <!-- Quantization style (in Sqcd's low 5 bits) may be: -->\\n"""		7693148	0					
ANR	7693295	Argument	s		7693148	2					
ANR	7693296	Identifier	s		7693148	0					
ANR	7693297	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"" , s )"	1763:8:81201:81300	7693148	1	True				
ANR	7693298	CallExpression	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"" , s )"		7693148	0					
ANR	7693299	Callee	fprintf		7693148	0					
ANR	7693300	Identifier	fprintf		7693148	0					
ANR	7693301	ArgumentList	xmlout		7693148	1					
ANR	7693302	Argument	xmlout		7693148	0					
ANR	7693303	Identifier	xmlout		7693148	0					
ANR	7693304	Argument	"""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"""		7693148	1					
ANR	7693305	PrimaryExpression	"""%s    <!--   0 = No quantization. SPqcd size = 8 bits-->\\n"""		7693148	0					
ANR	7693306	Argument	s		7693148	2					
ANR	7693307	Identifier	s		7693148	0					
ANR	7693308	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"" , s )"	1765:8:81310:81474	7693148	2	True				
ANR	7693309	CallExpression	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"" , s )"		7693148	0					
ANR	7693310	Callee	fprintf		7693148	0					
ANR	7693311	Identifier	fprintf		7693148	0					
ANR	7693312	ArgumentList	xmlout		7693148	1					
ANR	7693313	Argument	xmlout		7693148	0					
ANR	7693314	Identifier	xmlout		7693148	0					
ANR	7693315	Argument	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"""		7693148	1					
ANR	7693316	PrimaryExpression	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcd size = 16. -->\\n"""		7693148	0					
ANR	7693317	Argument	s		7693148	2					
ANR	7693318	Identifier	s		7693148	0					
ANR	7693319	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"" , s )"	1768:8:81484:81630	7693148	3	True				
ANR	7693320	CallExpression	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"" , s )"		7693148	0					
ANR	7693321	Callee	fprintf		7693148	0					
ANR	7693322	Identifier	fprintf		7693148	0					
ANR	7693323	ArgumentList	xmlout		7693148	1					
ANR	7693324	Argument	xmlout		7693148	0					
ANR	7693325	Identifier	xmlout		7693148	0					
ANR	7693326	Argument	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"""		7693148	1					
ANR	7693327	PrimaryExpression	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcd size = 16. -->\\n"""		7693148	0					
ANR	7693328	Argument	s		7693148	2					
ANR	7693329	Identifier	s		7693148	0					
ANR	7693330	IfStatement	if ( derived )		7693148	12					
ANR	7693331	Condition	derived	1772:8:81646:81652	7693148	0	True				
ANR	7693332	Identifier	derived		7693148	0					
ANR	7693333	CompoundStatement		42:17:1669:1669	7693148	1					
ANR	7693334	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"	1773:8:81665:81771	7693148	0	True				
ANR	7693335	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"		7693148	0					
ANR	7693336	Callee	fprintf		7693148	0					
ANR	7693337	Identifier	fprintf		7693148	0					
ANR	7693338	ArgumentList	xmlout		7693148	1					
ANR	7693339	Argument	xmlout		7693148	0					
ANR	7693340	Identifier	xmlout		7693148	0					
ANR	7693341	Argument	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		7693148	1					
ANR	7693342	PrimaryExpression	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		7693148	0					
ANR	7693343	Argument	s		7693148	2					
ANR	7693344	Identifier	s		7693148	0					
ANR	7693345	Argument	tccp -> numgbits		7693148	3					
ANR	7693346	PtrMemberAccess	tccp -> numgbits		7693148	0					
ANR	7693347	Identifier	tccp		7693148	0					
ANR	7693348	Identifier	numgbits		7693148	1					
ANR	7693349	IfStatement	if ( notes )		7693148	13					
ANR	7693350	Condition	notes	1776:8:81787:81791	7693148	0	True				
ANR	7693351	Identifier	notes		7693148	0					
ANR	7693352	CompoundStatement		46:15:1808:1808	7693148	1					
ANR	7693353	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"" , s )"	1777:8:81804:81912	7693148	0	True				
ANR	7693354	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"" , s )"		7693148	0					
ANR	7693355	Callee	fprintf		7693148	0					
ANR	7693356	Identifier	fprintf		7693148	0					
ANR	7693357	ArgumentList	xmlout		7693148	1					
ANR	7693358	Argument	xmlout		7693148	0					
ANR	7693359	Identifier	xmlout		7693148	0					
ANR	7693360	Argument	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"""		7693148	1					
ANR	7693361	PrimaryExpression	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcd's high 3 bits) -->\\n"""		7693148	0					
ANR	7693362	Argument	s		7693148	2					
ANR	7693363	Identifier	s		7693148	0					
ANR	7693364	ExpressionStatement	"fprintf ( xmlout , ""%s  </Sqcd>\\n"" , s )"	1780:4:81924:81964	7693148	14	True				
ANR	7693365	CallExpression	"fprintf ( xmlout , ""%s  </Sqcd>\\n"" , s )"		7693148	0					
ANR	7693366	Callee	fprintf		7693148	0					
ANR	7693367	Identifier	fprintf		7693148	0					
ANR	7693368	ArgumentList	xmlout		7693148	1					
ANR	7693369	Argument	xmlout		7693148	0					
ANR	7693370	Identifier	xmlout		7693148	0					
ANR	7693371	Argument	"""%s  </Sqcd>\\n"""		7693148	1					
ANR	7693372	PrimaryExpression	"""%s  </Sqcd>\\n"""		7693148	0					
ANR	7693373	Argument	s		7693148	2					
ANR	7693374	Identifier	s		7693148	0					
ANR	7693375	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPqcd>\\n"" , s )"	1786:4:82243:82283	7693148	15	True				
ANR	7693376	CallExpression	"fprintf ( xmlout , ""%s  <SPqcd>\\n"" , s )"		7693148	0					
ANR	7693377	Callee	fprintf		7693148	0					
ANR	7693378	Identifier	fprintf		7693148	0					
ANR	7693379	ArgumentList	xmlout		7693148	1					
ANR	7693380	Argument	xmlout		7693148	0					
ANR	7693381	Identifier	xmlout		7693148	0					
ANR	7693382	Argument	"""%s  <SPqcd>\\n"""		7693148	1					
ANR	7693383	PrimaryExpression	"""%s  <SPqcd>\\n"""		7693148	0					
ANR	7693384	Argument	s		7693148	2					
ANR	7693385	Identifier	s		7693148	0					
ANR	7693386	SwitchStatement	switch ( tccp -> qntsty )		7693148	16					
ANR	7693387	Condition	tccp -> qntsty	1787:12:82297:82308	7693148	0	True				
ANR	7693388	PtrMemberAccess	tccp -> qntsty		7693148	0					
ANR	7693389	Identifier	tccp		7693148	0					
ANR	7693390	Identifier	qntsty		7693148	1					
ANR	7693391	CompoundStatement		57:26:2325:2325	7693148	1					
ANR	7693392	Label	case J2K_CCP_QNTSTY_NOQNT :	1788:4:82317:82342	7693148	0	True				
ANR	7693393	Identifier	J2K_CCP_QNTSTY_NOQNT		7693148	0					
ANR	7693394	ExpressionStatement	numbands = J2K_MAXBANDS	1790:8:82462:82485	7693148	1	True				
ANR	7693395	AssignmentExpression	numbands = J2K_MAXBANDS		7693148	0		=			
ANR	7693396	Identifier	numbands		7693148	0					
ANR	7693397	Identifier	J2K_MAXBANDS		7693148	1					
ANR	7693398	ExpressionStatement	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"	1793:8:82673:82731	7693148	2	True				
ANR	7693399	CallExpression	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"		7693148	0					
ANR	7693400	Callee	fprintf		7693148	0					
ANR	7693401	Identifier	fprintf		7693148	0					
ANR	7693402	ArgumentList	xmlout		7693148	1					
ANR	7693403	Argument	xmlout		7693148	0					
ANR	7693404	Identifier	xmlout		7693148	0					
ANR	7693405	Argument	"""%s    <ReversibleStepSizeValue>\\n"""		7693148	1					
ANR	7693406	PrimaryExpression	"""%s    <ReversibleStepSizeValue>\\n"""		7693148	0					
ANR	7693407	Argument	s		7693148	2					
ANR	7693408	Identifier	s		7693148	0					
ANR	7693409	IfStatement	if ( notes )		7693148	3					
ANR	7693410	Condition	notes	1794:12:82745:82749	7693148	0	True				
ANR	7693411	Identifier	notes		7693148	0					
ANR	7693412	CompoundStatement		64:19:2766:2766	7693148	1					
ANR	7693413	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1795:12:82766:82912	7693148	0	True				
ANR	7693414	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7693148	0					
ANR	7693415	Callee	fprintf		7693148	0					
ANR	7693416	Identifier	fprintf		7693148	0					
ANR	7693417	ArgumentList	xmlout		7693148	1					
ANR	7693418	Argument	xmlout		7693148	0					
ANR	7693419	Identifier	xmlout		7693148	0					
ANR	7693420	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	1					
ANR	7693421	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	0					
ANR	7693422	Argument	s		7693148	2					
ANR	7693423	Identifier	s		7693148	0					
ANR	7693424	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"	1798:12:82926:83030	7693148	1	True				
ANR	7693425	CallExpression	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"		7693148	0					
ANR	7693426	Callee	fprintf		7693148	0					
ANR	7693427	Identifier	fprintf		7693148	0					
ANR	7693428	ArgumentList	xmlout		7693148	1					
ANR	7693429	Argument	xmlout		7693148	0					
ANR	7693430	Identifier	xmlout		7693148	0					
ANR	7693431	Argument	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		7693148	1					
ANR	7693432	PrimaryExpression	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		7693148	0					
ANR	7693433	Argument	s		7693148	2					
ANR	7693434	Identifier	s		7693148	0					
ANR	7693435	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"	1800:12:83044:83151	7693148	2	True				
ANR	7693436	CallExpression	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"		7693148	0					
ANR	7693437	Callee	fprintf		7693148	0					
ANR	7693438	Identifier	fprintf		7693148	0					
ANR	7693439	ArgumentList	xmlout		7693148	1					
ANR	7693440	Argument	xmlout		7693148	0					
ANR	7693441	Identifier	xmlout		7693148	0					
ANR	7693442	Argument	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		7693148	1					
ANR	7693443	PrimaryExpression	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		7693148	0					
ANR	7693444	Argument	s		7693148	2					
ANR	7693445	Identifier	s		7693148	0					
ANR	7693446	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"	1802:12:83165:83269	7693148	3	True				
ANR	7693447	CallExpression	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"		7693148	0					
ANR	7693448	Callee	fprintf		7693148	0					
ANR	7693449	Identifier	fprintf		7693148	0					
ANR	7693450	ArgumentList	xmlout		7693148	1					
ANR	7693451	Argument	xmlout		7693148	0					
ANR	7693452	Identifier	xmlout		7693148	0					
ANR	7693453	Argument	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		7693148	1					
ANR	7693454	PrimaryExpression	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		7693148	0					
ANR	7693455	Argument	s		7693148	2					
ANR	7693456	Identifier	s		7693148	0					
ANR	7693457	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7693148	4					
ANR	7693458	ForInit	bandno = 0 ;	1805:13:83294:83304	7693148	0	True				
ANR	7693459	AssignmentExpression	bandno = 0		7693148	0		=			
ANR	7693460	Identifier	bandno		7693148	0					
ANR	7693461	PrimaryExpression	0		7693148	1					
ANR	7693462	Condition	bandno < numbands	1805:25:83306:83322	7693148	1	True				
ANR	7693463	RelationalExpression	bandno < numbands		7693148	0		<			
ANR	7693464	Identifier	bandno		7693148	0					
ANR	7693465	Identifier	numbands		7693148	1					
ANR	7693466	PostIncDecOperationExpression	bandno ++	1805:44:83325:83332	7693148	2	True				
ANR	7693467	Identifier	bandno		7693148	0					
ANR	7693468	IncDec	++		7693148	1					
ANR	7693469	CompoundStatement		75:54:3349:3349	7693148	3					
ANR	7693470	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		7693148	0					
ANR	7693471	Condition	tccp -> stepsizes [ bandno ] . expn == 0	1806:16:83353:83385	7693148	0	True				
ANR	7693472	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7693148	0		==			
ANR	7693473	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693474	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693475	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693476	Identifier	tccp		7693148	0					
ANR	7693477	Identifier	stepsizes		7693148	1					
ANR	7693478	Identifier	bandno		7693148	1					
ANR	7693479	Identifier	expn		7693148	1					
ANR	7693480	PrimaryExpression	0		7693148	1					
ANR	7693481	CompoundStatement		76:51:3402:3402	7693148	1					
ANR	7693482	BreakStatement	break ;	1807:16:83406:83411	7693148	0	True				
ANR	7693483	ExpressionStatement	"fprintf ( xmlout , ""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"" , s , bandno )"	1809:12:83482:83560	7693148	1	True				
ANR	7693484	CallExpression	"fprintf ( xmlout , ""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"" , s , bandno )"		7693148	0					
ANR	7693485	Callee	fprintf		7693148	0					
ANR	7693486	Identifier	fprintf		7693148	0					
ANR	7693487	ArgumentList	xmlout		7693148	1					
ANR	7693488	Argument	xmlout		7693148	0					
ANR	7693489	Identifier	xmlout		7693148	0					
ANR	7693490	Argument	"""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"""		7693148	1					
ANR	7693491	PrimaryExpression	"""%s      <DynamicRangeExponent Subband=\\""%d\\"">\\n"""		7693148	0					
ANR	7693492	Argument	s		7693148	2					
ANR	7693493	Identifier	s		7693148	0					
ANR	7693494	Argument	bandno		7693148	3					
ANR	7693495	Identifier	bandno		7693148	0					
ANR	7693496	IfStatement	if ( raw )		7693148	2					
ANR	7693497	Condition	raw	1810:16:83578:83580	7693148	0	True				
ANR	7693498	Identifier	raw		7693148	0					
ANR	7693499	CompoundStatement		80:21:3597:3597	7693148	1					
ANR	7693500	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"	1811:16:83601:83715	7693148	0	True				
ANR	7693501	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"		7693148	0					
ANR	7693502	Callee	fprintf		7693148	0					
ANR	7693503	Identifier	fprintf		7693148	0					
ANR	7693504	ArgumentList	xmlout		7693148	1					
ANR	7693505	Argument	xmlout		7693148	0					
ANR	7693506	Identifier	xmlout		7693148	0					
ANR	7693507	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	1					
ANR	7693508	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	0					
ANR	7693509	Argument	s		7693148	2					
ANR	7693510	Identifier	s		7693148	0					
ANR	7693511	Argument	tccp -> stepsizes [ bandno ] . expn << 3		7693148	3					
ANR	7693512	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 3		7693148	0		<<			
ANR	7693513	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693514	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693515	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693516	Identifier	tccp		7693148	0					
ANR	7693517	Identifier	stepsizes		7693148	1					
ANR	7693518	Identifier	bandno		7693148	1					
ANR	7693519	Identifier	expn		7693148	1					
ANR	7693520	PrimaryExpression	3		7693148	1					
ANR	7693521	IfStatement	if ( derived )		7693148	3					
ANR	7693522	Condition	derived	1814:16:83747:83753	7693148	0	True				
ANR	7693523	Identifier	derived		7693148	0					
ANR	7693524	CompoundStatement		84:25:3770:3770	7693148	1					
ANR	7693525	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	1815:16:83774:83887	7693148	0	True				
ANR	7693526	CallExpression	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		7693148	0					
ANR	7693527	Callee	fprintf		7693148	0					
ANR	7693528	Identifier	fprintf		7693148	0					
ANR	7693529	ArgumentList	xmlout		7693148	1					
ANR	7693530	Argument	xmlout		7693148	0					
ANR	7693531	Identifier	xmlout		7693148	0					
ANR	7693532	Argument	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		7693148	1					
ANR	7693533	PrimaryExpression	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		7693148	0					
ANR	7693534	Argument	s		7693148	2					
ANR	7693535	Identifier	s		7693148	0					
ANR	7693536	Argument	tccp -> stepsizes [ bandno ] . expn		7693148	3					
ANR	7693537	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693538	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693539	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693540	Identifier	tccp		7693148	0					
ANR	7693541	Identifier	stepsizes		7693148	1					
ANR	7693542	Identifier	bandno		7693148	1					
ANR	7693543	Identifier	expn		7693148	1					
ANR	7693544	ExpressionStatement	"fprintf ( xmlout , ""%s      </DynamicRangeExponent>\\n"" , s )"	1818:12:83915:83971	7693148	4	True				
ANR	7693545	CallExpression	"fprintf ( xmlout , ""%s      </DynamicRangeExponent>\\n"" , s )"		7693148	0					
ANR	7693546	Callee	fprintf		7693148	0					
ANR	7693547	Identifier	fprintf		7693148	0					
ANR	7693548	ArgumentList	xmlout		7693148	1					
ANR	7693549	Argument	xmlout		7693148	0					
ANR	7693550	Identifier	xmlout		7693148	0					
ANR	7693551	Argument	"""%s      </DynamicRangeExponent>\\n"""		7693148	1					
ANR	7693552	PrimaryExpression	"""%s      </DynamicRangeExponent>\\n"""		7693148	0					
ANR	7693553	Argument	s		7693148	2					
ANR	7693554	Identifier	s		7693148	0					
ANR	7693555	ExpressionStatement	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"	1820:8:83991:84050	7693148	5	True				
ANR	7693556	CallExpression	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"		7693148	0					
ANR	7693557	Callee	fprintf		7693148	0					
ANR	7693558	Identifier	fprintf		7693148	0					
ANR	7693559	ArgumentList	xmlout		7693148	1					
ANR	7693560	Argument	xmlout		7693148	0					
ANR	7693561	Identifier	xmlout		7693148	0					
ANR	7693562	Argument	"""%s    </ReversibleStepSizeValue>\\n"""		7693148	1					
ANR	7693563	PrimaryExpression	"""%s    </ReversibleStepSizeValue>\\n"""		7693148	0					
ANR	7693564	Argument	s		7693148	2					
ANR	7693565	Identifier	s		7693148	0					
ANR	7693566	BreakStatement	break ;	1821:8:84060:84065	7693148	6	True				
ANR	7693567	Label	case J2K_CCP_QNTSTY_SIQNT :	1822:4:84071:84096	7693148	7	True				
ANR	7693568	Identifier	J2K_CCP_QNTSTY_SIQNT		7693148	0					
ANR	7693569	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	1825:8:84240:84301	7693148	8	True				
ANR	7693570	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		7693148	0					
ANR	7693571	Callee	fprintf		7693148	0					
ANR	7693572	Identifier	fprintf		7693148	0					
ANR	7693573	ArgumentList	xmlout		7693148	1					
ANR	7693574	Argument	xmlout		7693148	0					
ANR	7693575	Identifier	xmlout		7693148	0					
ANR	7693576	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		7693148	1					
ANR	7693577	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		7693148	0					
ANR	7693578	Argument	s		7693148	2					
ANR	7693579	Identifier	s		7693148	0					
ANR	7693580	IfStatement	if ( notes )		7693148	9					
ANR	7693581	Condition	notes	1826:12:84315:84319	7693148	0	True				
ANR	7693582	Identifier	notes		7693148	0					
ANR	7693583	CompoundStatement		96:19:4336:4336	7693148	1					
ANR	7693584	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	1827:12:84336:84485	7693148	0	True				
ANR	7693585	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		7693148	0					
ANR	7693586	Callee	fprintf		7693148	0					
ANR	7693587	Identifier	fprintf		7693148	0					
ANR	7693588	ArgumentList	xmlout		7693148	1					
ANR	7693589	Argument	xmlout		7693148	0					
ANR	7693590	Identifier	xmlout		7693148	0					
ANR	7693591	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7693148	1					
ANR	7693592	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7693148	0					
ANR	7693593	Argument	s		7693148	2					
ANR	7693594	Identifier	s		7693148	0					
ANR	7693595	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""0\\"">\\n"" , s )"	1831:8:84505:84574	7693148	10	True				
ANR	7693596	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""0\\"">\\n"" , s )"		7693148	0					
ANR	7693597	Callee	fprintf		7693148	0					
ANR	7693598	Identifier	fprintf		7693148	0					
ANR	7693599	ArgumentList	xmlout		7693148	1					
ANR	7693600	Argument	xmlout		7693148	0					
ANR	7693601	Identifier	xmlout		7693148	0					
ANR	7693602	Argument	"""%s      <QuantizationValues Subband=\\""0\\"">\\n"""		7693148	1					
ANR	7693603	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""0\\"">\\n"""		7693148	0					
ANR	7693604	Argument	s		7693148	2					
ANR	7693605	Identifier	s		7693148	0					
ANR	7693606	IfStatement	if ( notes )		7693148	11					
ANR	7693607	Condition	notes	1832:12:84588:84592	7693148	0	True				
ANR	7693608	Identifier	notes		7693148	0					
ANR	7693609	CompoundStatement		102:19:4609:4609	7693148	1					
ANR	7693610	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"	1833:12:84609:84668	7693148	0	True				
ANR	7693611	CallExpression	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"		7693148	0					
ANR	7693612	Callee	fprintf		7693148	0					
ANR	7693613	Identifier	fprintf		7693148	0					
ANR	7693614	ArgumentList	xmlout		7693148	1					
ANR	7693615	Argument	xmlout		7693148	0					
ANR	7693616	Identifier	xmlout		7693148	0					
ANR	7693617	Argument	"""%s      <!-- For N(L)LL subband: >\\n"""		7693148	1					
ANR	7693618	PrimaryExpression	"""%s      <!-- For N(L)LL subband: >\\n"""		7693148	0					
ANR	7693619	Argument	s		7693148	2					
ANR	7693620	Identifier	s		7693148	0					
ANR	7693621	IfStatement	if ( raw )		7693148	12					
ANR	7693622	Condition	raw	1835:12:84692:84694	7693148	0	True				
ANR	7693623	Identifier	raw		7693148	0					
ANR	7693624	CompoundStatement		105:17:4711:4711	7693148	1					
ANR	7693625	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"	1836:12:84711:84846	7693148	0	True				
ANR	7693626	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"		7693148	0					
ANR	7693627	Callee	fprintf		7693148	0					
ANR	7693628	Identifier	fprintf		7693148	0					
ANR	7693629	ArgumentList	xmlout		7693148	1					
ANR	7693630	Argument	xmlout		7693148	0					
ANR	7693631	Identifier	xmlout		7693148	0					
ANR	7693632	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	1					
ANR	7693633	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	0					
ANR	7693634	Argument	s		7693148	2					
ANR	7693635	Identifier	s		7693148	0					
ANR	7693636	Argument	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		7693148	3					
ANR	7693637	InclusiveOrExpression	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		7693148	0		|			
ANR	7693638	ShiftExpression	tccp -> stepsizes [ 0 ] . expn << 11		7693148	0		<<			
ANR	7693639	MemberAccess	tccp -> stepsizes [ 0 ] . expn		7693148	0					
ANR	7693640	ArrayIndexing	tccp -> stepsizes [ 0 ]		7693148	0					
ANR	7693641	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693642	Identifier	tccp		7693148	0					
ANR	7693643	Identifier	stepsizes		7693148	1					
ANR	7693644	PrimaryExpression	0		7693148	1					
ANR	7693645	Identifier	expn		7693148	1					
ANR	7693646	PrimaryExpression	11		7693148	1					
ANR	7693647	MemberAccess	tccp -> stepsizes [ 0 ] . mant		7693148	1					
ANR	7693648	ArrayIndexing	tccp -> stepsizes [ 0 ]		7693148	0					
ANR	7693649	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693650	Identifier	tccp		7693148	0					
ANR	7693651	Identifier	stepsizes		7693148	1					
ANR	7693652	PrimaryExpression	0		7693148	1					
ANR	7693653	Identifier	mant		7693148	1					
ANR	7693654	IfStatement	if ( derived )		7693148	13					
ANR	7693655	Condition	derived	1839:12:84870:84876	7693148	0	True				
ANR	7693656	Identifier	derived		7693148	0					
ANR	7693657	CompoundStatement		109:21:4893:4893	7693148	1					
ANR	7693658	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"	1840:12:84893:84996	7693148	0	True				
ANR	7693659	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"		7693148	0					
ANR	7693660	Callee	fprintf		7693148	0					
ANR	7693661	Identifier	fprintf		7693148	0					
ANR	7693662	ArgumentList	xmlout		7693148	1					
ANR	7693663	Argument	xmlout		7693148	0					
ANR	7693664	Identifier	xmlout		7693148	0					
ANR	7693665	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		7693148	1					
ANR	7693666	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		7693148	0					
ANR	7693667	Argument	s		7693148	2					
ANR	7693668	Identifier	s		7693148	0					
ANR	7693669	Argument	tccp -> stepsizes [ 0 ] . expn		7693148	3					
ANR	7693670	MemberAccess	tccp -> stepsizes [ 0 ] . expn		7693148	0					
ANR	7693671	ArrayIndexing	tccp -> stepsizes [ 0 ]		7693148	0					
ANR	7693672	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693673	Identifier	tccp		7693148	0					
ANR	7693674	Identifier	stepsizes		7693148	1					
ANR	7693675	PrimaryExpression	0		7693148	1					
ANR	7693676	Identifier	expn		7693148	1					
ANR	7693677	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"	1842:12:85010:85113	7693148	1	True				
ANR	7693678	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"		7693148	0					
ANR	7693679	Callee	fprintf		7693148	0					
ANR	7693680	Identifier	fprintf		7693148	0					
ANR	7693681	ArgumentList	xmlout		7693148	1					
ANR	7693682	Argument	xmlout		7693148	0					
ANR	7693683	Identifier	xmlout		7693148	0					
ANR	7693684	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		7693148	1					
ANR	7693685	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		7693148	0					
ANR	7693686	Argument	s		7693148	2					
ANR	7693687	Identifier	s		7693148	0					
ANR	7693688	Argument	tccp -> stepsizes [ 0 ] . mant		7693148	3					
ANR	7693689	MemberAccess	tccp -> stepsizes [ 0 ] . mant		7693148	0					
ANR	7693690	ArrayIndexing	tccp -> stepsizes [ 0 ]		7693148	0					
ANR	7693691	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693692	Identifier	tccp		7693148	0					
ANR	7693693	Identifier	stepsizes		7693148	1					
ANR	7693694	PrimaryExpression	0		7693148	1					
ANR	7693695	Identifier	mant		7693148	1					
ANR	7693696	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	1845:8:85133:85189	7693148	14	True				
ANR	7693697	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		7693148	0					
ANR	7693698	Callee	fprintf		7693148	0					
ANR	7693699	Identifier	fprintf		7693148	0					
ANR	7693700	ArgumentList	xmlout		7693148	1					
ANR	7693701	Argument	xmlout		7693148	0					
ANR	7693702	Identifier	xmlout		7693148	0					
ANR	7693703	Argument	"""%s      </QuantizationValues>\\n"""		7693148	1					
ANR	7693704	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		7693148	0					
ANR	7693705	Argument	s		7693148	2					
ANR	7693706	Identifier	s		7693148	0					
ANR	7693707	IfStatement	if ( notes )		7693148	15					
ANR	7693708	Condition	notes	1846:12:85203:85207	7693148	0	True				
ANR	7693709	Identifier	notes		7693148	0					
ANR	7693710	CompoundStatement		116:19:5224:5224	7693148	1					
ANR	7693711	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"	1847:12:85224:85384	7693148	0	True				
ANR	7693712	CallExpression	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"		7693148	0					
ANR	7693713	Callee	fprintf		7693148	0					
ANR	7693714	Identifier	fprintf		7693148	0					
ANR	7693715	ArgumentList	xmlout		7693148	1					
ANR	7693716	Argument	xmlout		7693148	0					
ANR	7693717	Identifier	xmlout		7693148	0					
ANR	7693718	Argument	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		7693148	1					
ANR	7693719	PrimaryExpression	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		7693148	0					
ANR	7693720	Argument	s		7693148	2					
ANR	7693721	Identifier	s		7693148	0					
ANR	7693722	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"	1850:12:85398:85547	7693148	1	True				
ANR	7693723	CallExpression	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"		7693148	0					
ANR	7693724	Callee	fprintf		7693148	0					
ANR	7693725	Identifier	fprintf		7693148	0					
ANR	7693726	ArgumentList	xmlout		7693148	1					
ANR	7693727	Argument	xmlout		7693148	0					
ANR	7693728	Identifier	xmlout		7693148	0					
ANR	7693729	Argument	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		7693148	1					
ANR	7693730	PrimaryExpression	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		7693148	0					
ANR	7693731	Argument	s		7693148	2					
ANR	7693732	Identifier	s		7693148	0					
ANR	7693733	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1853:12:85561:85709	7693148	2	True				
ANR	7693734	CallExpression	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7693148	0					
ANR	7693735	Callee	fprintf		7693148	0					
ANR	7693736	Identifier	fprintf		7693148	0					
ANR	7693737	ArgumentList	xmlout		7693148	1					
ANR	7693738	Argument	xmlout		7693148	0					
ANR	7693739	Identifier	xmlout		7693148	0					
ANR	7693740	Argument	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	1					
ANR	7693741	PrimaryExpression	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	0					
ANR	7693742	Argument	s		7693148	2					
ANR	7693743	Identifier	s		7693148	0					
ANR	7693744	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"	1856:12:85723:85859	7693148	3	True				
ANR	7693745	CallExpression	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"		7693148	0					
ANR	7693746	Callee	fprintf		7693148	0					
ANR	7693747	Identifier	fprintf		7693148	0					
ANR	7693748	ArgumentList	xmlout		7693148	1					
ANR	7693749	Argument	xmlout		7693148	0					
ANR	7693750	Identifier	xmlout		7693148	0					
ANR	7693751	Argument	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		7693148	1					
ANR	7693752	PrimaryExpression	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		7693148	0					
ANR	7693753	Argument	s		7693148	2					
ANR	7693754	Identifier	s		7693148	0					
ANR	7693755	ForStatement	for ( bandno = 1 ; bandno < J2K_MAXBANDS ; bandno ++ )		7693148	16					
ANR	7693756	ForInit	bandno = 1 ;	1861:13:85885:85895	7693148	0	True				
ANR	7693757	AssignmentExpression	bandno = 1		7693148	0		=			
ANR	7693758	Identifier	bandno		7693148	0					
ANR	7693759	PrimaryExpression	1		7693148	1					
ANR	7693760	Condition	bandno < J2K_MAXBANDS	1861:25:85897:85917	7693148	1	True				
ANR	7693761	RelationalExpression	bandno < J2K_MAXBANDS		7693148	0		<			
ANR	7693762	Identifier	bandno		7693148	0					
ANR	7693763	Identifier	J2K_MAXBANDS		7693148	1					
ANR	7693764	PostIncDecOperationExpression	bandno ++	1861:48:85920:85927	7693148	2	True				
ANR	7693765	Identifier	bandno		7693148	0					
ANR	7693766	IncDec	++		7693148	1					
ANR	7693767	CompoundStatement		131:58:5944:5944	7693148	3					
ANR	7693768	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		7693148	0					
ANR	7693769	Condition	tccp -> stepsizes [ bandno ] . expn == 0	1862:16:85948:85980	7693148	0	True				
ANR	7693770	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7693148	0		==			
ANR	7693771	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693772	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693773	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693774	Identifier	tccp		7693148	0					
ANR	7693775	Identifier	stepsizes		7693148	1					
ANR	7693776	Identifier	bandno		7693148	1					
ANR	7693777	Identifier	expn		7693148	1					
ANR	7693778	PrimaryExpression	0		7693148	1					
ANR	7693779	CompoundStatement		132:51:5997:5997	7693148	1					
ANR	7693780	BreakStatement	break ;	1863:16:86001:86006	7693148	0	True				
ANR	7693781	ExpressionStatement	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"	1866:12:86035:86203	7693148	1	True				
ANR	7693782	CallExpression	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"		7693148	0					
ANR	7693783	Callee	fprintf		7693148	0					
ANR	7693784	Identifier	fprintf		7693148	0					
ANR	7693785	ArgumentList	xmlout		7693148	1					
ANR	7693786	Argument	xmlout		7693148	0					
ANR	7693787	Identifier	xmlout		7693148	0					
ANR	7693788	Argument	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		7693148	1					
ANR	7693789	PrimaryExpression	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		7693148	0					
ANR	7693790	Argument	s		7693148	2					
ANR	7693791	Identifier	s		7693148	0					
ANR	7693792	Argument	bandno		7693148	3					
ANR	7693793	Identifier	bandno		7693148	0					
ANR	7693794	Argument	tccp -> stepsizes [ bandno ] . expn		7693148	4					
ANR	7693795	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693796	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693797	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693798	Identifier	tccp		7693148	0					
ANR	7693799	Identifier	stepsizes		7693148	1					
ANR	7693800	Identifier	bandno		7693148	1					
ANR	7693801	Identifier	expn		7693148	1					
ANR	7693802	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	1871:8:86224:86286	7693148	17	True				
ANR	7693803	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		7693148	0					
ANR	7693804	Callee	fprintf		7693148	0					
ANR	7693805	Identifier	fprintf		7693148	0					
ANR	7693806	ArgumentList	xmlout		7693148	1					
ANR	7693807	Argument	xmlout		7693148	0					
ANR	7693808	Identifier	xmlout		7693148	0					
ANR	7693809	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		7693148	1					
ANR	7693810	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		7693148	0					
ANR	7693811	Argument	s		7693148	2					
ANR	7693812	Identifier	s		7693148	0					
ANR	7693813	BreakStatement	break ;	1872:8:86296:86301	7693148	18	True				
ANR	7693814	Label	default :	1874:4:86308:86315	7693148	19	True				
ANR	7693815	Identifier	default		7693148	0					
ANR	7693816	ExpressionStatement	numbands = J2K_MAXBANDS	1876:8:86475:86498	7693148	20	True				
ANR	7693817	AssignmentExpression	numbands = J2K_MAXBANDS		7693148	0		=			
ANR	7693818	Identifier	numbands		7693148	0					
ANR	7693819	Identifier	J2K_MAXBANDS		7693148	1					
ANR	7693820	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	1878:8:86605:86666	7693148	21	True				
ANR	7693821	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		7693148	0					
ANR	7693822	Callee	fprintf		7693148	0					
ANR	7693823	Identifier	fprintf		7693148	0					
ANR	7693824	ArgumentList	xmlout		7693148	1					
ANR	7693825	Argument	xmlout		7693148	0					
ANR	7693826	Identifier	xmlout		7693148	0					
ANR	7693827	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		7693148	1					
ANR	7693828	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		7693148	0					
ANR	7693829	Argument	s		7693148	2					
ANR	7693830	Identifier	s		7693148	0					
ANR	7693831	IfStatement	if ( notes )		7693148	22					
ANR	7693832	Condition	notes	1879:12:86680:86684	7693148	0	True				
ANR	7693833	Identifier	notes		7693148	0					
ANR	7693834	CompoundStatement		149:19:6701:6701	7693148	1					
ANR	7693835	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	1880:12:86701:86850	7693148	0	True				
ANR	7693836	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		7693148	0					
ANR	7693837	Callee	fprintf		7693148	0					
ANR	7693838	Identifier	fprintf		7693148	0					
ANR	7693839	ArgumentList	xmlout		7693148	1					
ANR	7693840	Argument	xmlout		7693148	0					
ANR	7693841	Identifier	xmlout		7693148	0					
ANR	7693842	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7693148	1					
ANR	7693843	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7693148	0					
ANR	7693844	Argument	s		7693148	2					
ANR	7693845	Identifier	s		7693148	0					
ANR	7693846	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	1883:12:86864:87010	7693148	1	True				
ANR	7693847	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7693148	0					
ANR	7693848	Callee	fprintf		7693148	0					
ANR	7693849	Identifier	fprintf		7693148	0					
ANR	7693850	ArgumentList	xmlout		7693148	1					
ANR	7693851	Argument	xmlout		7693148	0					
ANR	7693852	Identifier	xmlout		7693148	0					
ANR	7693853	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	1					
ANR	7693854	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7693148	0					
ANR	7693855	Argument	s		7693148	2					
ANR	7693856	Identifier	s		7693148	0					
ANR	7693857	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"	1886:12:87024:87172	7693148	2	True				
ANR	7693858	CallExpression	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"		7693148	0					
ANR	7693859	Callee	fprintf		7693148	0					
ANR	7693860	Identifier	fprintf		7693148	0					
ANR	7693861	ArgumentList	xmlout		7693148	1					
ANR	7693862	Argument	xmlout		7693148	0					
ANR	7693863	Identifier	xmlout		7693148	0					
ANR	7693864	Argument	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		7693148	1					
ANR	7693865	PrimaryExpression	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		7693148	0					
ANR	7693866	Argument	s		7693148	2					
ANR	7693867	Identifier	s		7693148	0					
ANR	7693868	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7693148	23					
ANR	7693869	ForInit	bandno = 0 ;	1890:13:87197:87207	7693148	0	True				
ANR	7693870	AssignmentExpression	bandno = 0		7693148	0		=			
ANR	7693871	Identifier	bandno		7693148	0					
ANR	7693872	PrimaryExpression	0		7693148	1					
ANR	7693873	Condition	bandno < numbands	1890:25:87209:87225	7693148	1	True				
ANR	7693874	RelationalExpression	bandno < numbands		7693148	0		<			
ANR	7693875	Identifier	bandno		7693148	0					
ANR	7693876	Identifier	numbands		7693148	1					
ANR	7693877	PostIncDecOperationExpression	bandno ++	1890:44:87228:87235	7693148	2	True				
ANR	7693878	Identifier	bandno		7693148	0					
ANR	7693879	IncDec	++		7693148	1					
ANR	7693880	CompoundStatement		160:54:7252:7252	7693148	3					
ANR	7693881	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0 )		7693148	0					
ANR	7693882	Condition	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0	1891:16:87256:87325	7693148	0	True				
ANR	7693883	AndExpression	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0		7693148	0		&&			
ANR	7693884	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7693148	0		==			
ANR	7693885	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693886	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693887	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693888	Identifier	tccp		7693148	0					
ANR	7693889	Identifier	stepsizes		7693148	1					
ANR	7693890	Identifier	bandno		7693148	1					
ANR	7693891	Identifier	expn		7693148	1					
ANR	7693892	PrimaryExpression	0		7693148	1					
ANR	7693893	EqualityExpression	tccp -> stepsizes [ bandno ] . mant == 0		7693148	1		==			
ANR	7693894	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7693148	0					
ANR	7693895	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693896	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693897	Identifier	tccp		7693148	0					
ANR	7693898	Identifier	stepsizes		7693148	1					
ANR	7693899	Identifier	bandno		7693148	1					
ANR	7693900	Identifier	mant		7693148	1					
ANR	7693901	PrimaryExpression	0		7693148	1					
ANR	7693902	CompoundStatement		161:88:7342:7342	7693148	1					
ANR	7693903	BreakStatement	break ;	1892:16:87346:87351	7693148	0	True				
ANR	7693904	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"	1895:12:87423:87499	7693148	1	True				
ANR	7693905	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"		7693148	0					
ANR	7693906	Callee	fprintf		7693148	0					
ANR	7693907	Identifier	fprintf		7693148	0					
ANR	7693908	ArgumentList	xmlout		7693148	1					
ANR	7693909	Argument	xmlout		7693148	0					
ANR	7693910	Identifier	xmlout		7693148	0					
ANR	7693911	Argument	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		7693148	1					
ANR	7693912	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		7693148	0					
ANR	7693913	Argument	s		7693148	2					
ANR	7693914	Identifier	s		7693148	0					
ANR	7693915	Argument	bandno		7693148	3					
ANR	7693916	Identifier	bandno		7693148	0					
ANR	7693917	IfStatement	if ( raw )		7693148	2					
ANR	7693918	Condition	raw	1896:16:87517:87519	7693148	0	True				
ANR	7693919	Identifier	raw		7693148	0					
ANR	7693920	CompoundStatement		166:21:7536:7536	7693148	1					
ANR	7693921	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"	1897:16:87540:87688	7693148	0	True				
ANR	7693922	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"		7693148	0					
ANR	7693923	Callee	fprintf		7693148	0					
ANR	7693924	Identifier	fprintf		7693148	0					
ANR	7693925	ArgumentList	xmlout		7693148	1					
ANR	7693926	Argument	xmlout		7693148	0					
ANR	7693927	Identifier	xmlout		7693148	0					
ANR	7693928	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	1					
ANR	7693929	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7693148	0					
ANR	7693930	Argument	s		7693148	2					
ANR	7693931	Identifier	s		7693148	0					
ANR	7693932	Argument	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		7693148	3					
ANR	7693933	InclusiveOrExpression	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		7693148	0		|			
ANR	7693934	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 11		7693148	0		<<			
ANR	7693935	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693936	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693937	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693938	Identifier	tccp		7693148	0					
ANR	7693939	Identifier	stepsizes		7693148	1					
ANR	7693940	Identifier	bandno		7693148	1					
ANR	7693941	Identifier	expn		7693148	1					
ANR	7693942	PrimaryExpression	11		7693148	1					
ANR	7693943	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7693148	1					
ANR	7693944	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693945	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693946	Identifier	tccp		7693148	0					
ANR	7693947	Identifier	stepsizes		7693148	1					
ANR	7693948	Identifier	bandno		7693148	1					
ANR	7693949	Identifier	mant		7693148	1					
ANR	7693950	IfStatement	if ( derived )		7693148	3					
ANR	7693951	Condition	derived	1900:16:87720:87726	7693148	0	True				
ANR	7693952	Identifier	derived		7693148	0					
ANR	7693953	CompoundStatement		170:25:7743:7743	7693148	1					
ANR	7693954	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	1901:16:87747:87858	7693148	0	True				
ANR	7693955	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		7693148	0					
ANR	7693956	Callee	fprintf		7693148	0					
ANR	7693957	Identifier	fprintf		7693148	0					
ANR	7693958	ArgumentList	xmlout		7693148	1					
ANR	7693959	Argument	xmlout		7693148	0					
ANR	7693960	Identifier	xmlout		7693148	0					
ANR	7693961	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		7693148	1					
ANR	7693962	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		7693148	0					
ANR	7693963	Argument	s		7693148	2					
ANR	7693964	Identifier	s		7693148	0					
ANR	7693965	Argument	tccp -> stepsizes [ bandno ] . expn		7693148	3					
ANR	7693966	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7693148	0					
ANR	7693967	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693968	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693969	Identifier	tccp		7693148	0					
ANR	7693970	Identifier	stepsizes		7693148	1					
ANR	7693971	Identifier	bandno		7693148	1					
ANR	7693972	Identifier	expn		7693148	1					
ANR	7693973	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"	1903:16:87876:87987	7693148	1	True				
ANR	7693974	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"		7693148	0					
ANR	7693975	Callee	fprintf		7693148	0					
ANR	7693976	Identifier	fprintf		7693148	0					
ANR	7693977	ArgumentList	xmlout		7693148	1					
ANR	7693978	Argument	xmlout		7693148	0					
ANR	7693979	Identifier	xmlout		7693148	0					
ANR	7693980	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		7693148	1					
ANR	7693981	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		7693148	0					
ANR	7693982	Argument	s		7693148	2					
ANR	7693983	Identifier	s		7693148	0					
ANR	7693984	Argument	tccp -> stepsizes [ bandno ] . mant		7693148	3					
ANR	7693985	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7693148	0					
ANR	7693986	ArrayIndexing	tccp -> stepsizes [ bandno ]		7693148	0					
ANR	7693987	PtrMemberAccess	tccp -> stepsizes		7693148	0					
ANR	7693988	Identifier	tccp		7693148	0					
ANR	7693989	Identifier	stepsizes		7693148	1					
ANR	7693990	Identifier	bandno		7693148	1					
ANR	7693991	Identifier	mant		7693148	1					
ANR	7693992	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	1906:12:88015:88069	7693148	4	True				
ANR	7693993	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		7693148	0					
ANR	7693994	Callee	fprintf		7693148	0					
ANR	7693995	Identifier	fprintf		7693148	0					
ANR	7693996	ArgumentList	xmlout		7693148	1					
ANR	7693997	Argument	xmlout		7693148	0					
ANR	7693998	Identifier	xmlout		7693148	0					
ANR	7693999	Argument	"""%s      </QuantizationValues>\\n"""		7693148	1					
ANR	7694000	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		7693148	0					
ANR	7694001	Argument	s		7693148	2					
ANR	7694002	Identifier	s		7693148	0					
ANR	7694003	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	1908:8:88089:88151	7693148	24	True				
ANR	7694004	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		7693148	0					
ANR	7694005	Callee	fprintf		7693148	0					
ANR	7694006	Identifier	fprintf		7693148	0					
ANR	7694007	ArgumentList	xmlout		7693148	1					
ANR	7694008	Argument	xmlout		7693148	0					
ANR	7694009	Identifier	xmlout		7693148	0					
ANR	7694010	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		7693148	1					
ANR	7694011	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		7693148	0					
ANR	7694012	Argument	s		7693148	2					
ANR	7694013	Identifier	s		7693148	0					
ANR	7694014	BreakStatement	break ;	1909:8:88161:88166	7693148	25	True				
ANR	7694015	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPqcd>\\n"" , s )"	1911:4:88191:88232	7693148	17	True				
ANR	7694016	CallExpression	"fprintf ( xmlout , ""%s  </SPqcd>\\n"" , s )"		7693148	0					
ANR	7694017	Callee	fprintf		7693148	0					
ANR	7694018	Identifier	fprintf		7693148	0					
ANR	7694019	ArgumentList	xmlout		7693148	1					
ANR	7694020	Argument	xmlout		7693148	0					
ANR	7694021	Identifier	xmlout		7693148	0					
ANR	7694022	Argument	"""%s  </SPqcd>\\n"""		7693148	1					
ANR	7694023	PrimaryExpression	"""%s  </SPqcd>\\n"""		7693148	0					
ANR	7694024	Argument	s		7693148	2					
ANR	7694025	Identifier	s		7693148	0					
ANR	7694026	ExpressionStatement	"fprintf ( xmlout , ""%s</QuantizationDefault>\\n"" , s )"	1912:4:88238:88291	7693148	18	True				
ANR	7694027	CallExpression	"fprintf ( xmlout , ""%s</QuantizationDefault>\\n"" , s )"		7693148	0					
ANR	7694028	Callee	fprintf		7693148	0					
ANR	7694029	Identifier	fprintf		7693148	0					
ANR	7694030	ArgumentList	xmlout		7693148	1					
ANR	7694031	Argument	xmlout		7693148	0					
ANR	7694032	Identifier	xmlout		7693148	0					
ANR	7694033	Argument	"""%s</QuantizationDefault>\\n"""		7693148	1					
ANR	7694034	PrimaryExpression	"""%s</QuantizationDefault>\\n"""		7693148	0					
ANR	7694035	Argument	s		7693148	2					
ANR	7694036	Identifier	s		7693148	0					
ANR	7694037	ReturnType	void		7693148	1					
ANR	7694038	Identifier	xml_out_frame_qcd		7693148	2					
ANR	7694039	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7693148	3					
ANR	7694040	Parameter	FILE * xmlout	1730:23:79955:79966	7693148	0	True				
ANR	7694041	ParameterType	FILE *		7693148	0					
ANR	7694042	Identifier	xmlout		7693148	1					
ANR	7694043	Parameter	opj_tcp_t * tcp	1730:37:79969:79982	7693148	1	True				
ANR	7694044	ParameterType	opj_tcp_t *		7693148	0					
ANR	7694045	Identifier	tcp		7693148	1					
ANR	7694046	CFGEntryNode	ENTRY		7693148		True				
ANR	7694047	CFGExitNode	EXIT		7693148		True				
ANR	7694048	Symbol	notes		7693148						
ANR	7694049	Symbol	* tccp -> stepsizes		7693148						
ANR	7694050	Symbol	tccp -> stepsizes [ bandno ] . mant		7693148						
ANR	7694051	Symbol	* tcp		7693148						
ANR	7694052	Symbol	j2k_default_tcp		7693148						
ANR	7694053	Symbol	* bandno		7693148						
ANR	7694054	Symbol	tccp -> stepsizes [ 0 ] . expn		7693148						
ANR	7694055	Symbol	numbands		7693148						
ANR	7694056	Symbol	* * tccp		7693148						
ANR	7694057	Symbol	derived		7693148						
ANR	7694058	Symbol	J2K_MAXBANDS		7693148						
ANR	7694059	Symbol	tcp		7693148						
ANR	7694060	Symbol	tccp -> stepsizes [ bandno ] . expn		7693148						
ANR	7694061	Symbol	tcp -> tccps		7693148						
ANR	7694062	Symbol	tccp -> qntsty		7693148						
ANR	7694063	Symbol	raw		7693148						
ANR	7694064	Symbol	tccp		7693148						
ANR	7694065	Symbol	tccp -> stepsizes		7693148						
ANR	7694066	Symbol	tccp -> numgbits		7693148						
ANR	7694067	Symbol	xmlout		7693148						
ANR	7694068	Symbol	bandno		7693148						
ANR	7694069	Symbol	s		7693148						
ANR	7694070	Symbol	* tccp		7693148						
ANR	7694071	Symbol	spaces		7693148						
ANR	7694072	Symbol	tccp -> stepsizes [ 0 ] . mant		7693148						
ANR	7694073	Function	xml_out_frame_qcc	1919:0:88402:98417							
ANR	7694074	FunctionDef	"xml_out_frame_qcc (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		7694073	0					
ANR	7694075	CompoundStatement		1920:0:88469:98417	7694073	0					
ANR	7694076	IdentifierDeclStatement	"opj_tccp_t * tccp , * firstcomp_tccp ;"	1923:4:88638:88671	7694073	0	True				
ANR	7694077	IdentifierDecl	* tccp		7694073	0					
ANR	7694078	IdentifierDeclType	opj_tccp_t *		7694073	0					
ANR	7694079	Identifier	tccp		7694073	1					
ANR	7694080	IdentifierDecl	* firstcomp_tccp		7694073	1					
ANR	7694081	IdentifierDeclType	opj_tccp_t *		7694073	0					
ANR	7694082	Identifier	firstcomp_tccp		7694073	1					
ANR	7694083	IdentifierDeclStatement	"int bandno , numbands ;"	1924:4:88677:88697	7694073	1	True				
ANR	7694084	IdentifierDecl	bandno		7694073	0					
ANR	7694085	IdentifierDeclType	int		7694073	0					
ANR	7694086	Identifier	bandno		7694073	1					
ANR	7694087	IdentifierDecl	numbands		7694073	1					
ANR	7694088	IdentifierDeclType	int		7694073	0					
ANR	7694089	Identifier	numbands		7694073	1					
ANR	7694090	IdentifierDeclStatement	int compno ;	1925:4:88703:88713	7694073	2	True				
ANR	7694091	IdentifierDecl	compno		7694073	0					
ANR	7694092	IdentifierDeclType	int		7694073	0					
ANR	7694093	Identifier	compno		7694073	1					
ANR	7694094	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	1926:4:88719:88751	7694073	3	True				
ANR	7694095	IdentifierDecl	"spaces [ 13 ] = ""            """		7694073	0					
ANR	7694096	IdentifierDeclType	char [ 13 ]		7694073	0					
ANR	7694097	Identifier	spaces		7694073	1					
ANR	7694098	PrimaryExpression	13		7694073	2					
ANR	7694099	AssignmentExpression	"spaces [ 13 ] = ""            """		7694073	3		=			
ANR	7694100	Identifier	spaces		7694073	0					
ANR	7694101	PrimaryExpression	"""            """		7694073	1					
ANR	7694102	IdentifierDeclStatement	char * s = spaces ;	1927:4:88784:88800	7694073	4	True				
ANR	7694103	IdentifierDecl	* s = spaces		7694073	0					
ANR	7694104	IdentifierDeclType	char *		7694073	0					
ANR	7694105	Identifier	s		7694073	1					
ANR	7694106	AssignmentExpression	* s = spaces		7694073	2		=			
ANR	7694107	Identifier	spaces		7694073	0					
ANR	7694108	Identifier	spaces		7694073	1					
ANR	7694109	IfStatement	if ( tcp == j2k_default_tcp )		7694073	5					
ANR	7694110	Condition	tcp == j2k_default_tcp	1928:8:88810:88831	7694073	0	True				
ANR	7694111	EqualityExpression	tcp == j2k_default_tcp		7694073	0		==			
ANR	7694112	Identifier	tcp		7694073	0					
ANR	7694113	Identifier	j2k_default_tcp		7694073	1					
ANR	7694114	CompoundStatement		9:32:364:364	7694073	1					
ANR	7694115	ExpressionStatement	s ++	1929:8:88844:88847	7694073	0	True				
ANR	7694116	PostIncDecOperationExpression	s ++		7694073	0					
ANR	7694117	Identifier	s		7694073	0					
ANR	7694118	IncDec	++		7694073	1					
ANR	7694119	ExpressionStatement	s ++	1930:8:88857:88860	7694073	1	True				
ANR	7694120	PostIncDecOperationExpression	s ++		7694073	0					
ANR	7694121	Identifier	s		7694073	0					
ANR	7694122	IncDec	++		7694073	1					
ANR	7694123	ExpressionStatement	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )	1933:4:88910:88943	7694073	6	True				
ANR	7694124	AssignmentExpression	firstcomp_tccp = & ( tcp -> tccps [ 0 ] )		7694073	0		=			
ANR	7694125	Identifier	firstcomp_tccp		7694073	0					
ANR	7694126	UnaryOperationExpression	& ( tcp -> tccps [ 0 ] )		7694073	1					
ANR	7694127	UnaryOperator	&		7694073	0					
ANR	7694128	ArrayIndexing	tcp -> tccps [ 0 ]		7694073	1					
ANR	7694129	PtrMemberAccess	tcp -> tccps		7694073	0					
ANR	7694130	Identifier	tcp		7694073	0					
ANR	7694131	Identifier	tccps		7694073	1					
ANR	7694132	PrimaryExpression	0		7694073	1					
ANR	7694133	IfStatement	if ( notes )		7694073	7					
ANR	7694134	Condition	notes	1939:8:89281:89285	7694073	0	True				
ANR	7694135	Identifier	notes		7694073	0					
ANR	7694136	CompoundStatement		20:15:818:818	7694073	1					
ANR	7694137	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"" , s )"	1940:8:89298:89445	7694073	0	True				
ANR	7694138	CallExpression	"fprintf ( xmlout , ""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"" , s )"		7694073	0					
ANR	7694139	Callee	fprintf		7694073	0					
ANR	7694140	Identifier	fprintf		7694073	0					
ANR	7694141	ArgumentList	xmlout		7694073	1					
ANR	7694142	Argument	xmlout		7694073	0					
ANR	7694143	Identifier	xmlout		7694073	0					
ANR	7694144	Argument	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"""		7694073	1					
ANR	7694145	PrimaryExpression	"""%s<!-- mj2_to_metadata implementation always reports component[0] as using default QCD, -->\\n"""		7694073	0					
ANR	7694146	Argument	s		7694073	2					
ANR	7694147	Identifier	s		7694073	0					
ANR	7694148	IfStatement	if ( tcp == j2k_default_tcp )		7694073	1					
ANR	7694149	Condition	tcp == j2k_default_tcp	1943:12:89459:89480	7694073	0	True				
ANR	7694150	EqualityExpression	tcp == j2k_default_tcp		7694073	0		==			
ANR	7694151	Identifier	tcp		7694073	0					
ANR	7694152	Identifier	j2k_default_tcp		7694073	1					
ANR	7694153	CompoundStatement		24:36:1013:1013	7694073	1					
ANR	7694154	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"" , s )"	1944:12:89497:89661	7694073	0	True				
ANR	7694155	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"" , s )"		7694073	0					
ANR	7694156	Callee	fprintf		7694073	0					
ANR	7694157	Identifier	fprintf		7694073	0					
ANR	7694158	ArgumentList	xmlout		7694073	1					
ANR	7694159	Argument	xmlout		7694073	0					
ANR	7694160	Identifier	xmlout		7694073	0					
ANR	7694161	Argument	"""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"""		7694073	1					
ANR	7694162	PrimaryExpression	"""%s<!-- and any other component, with main-header quantization values different from [0], as QCC. -->\\n"""		7694073	0					
ANR	7694163	Argument	s		7694073	2					
ANR	7694164	Identifier	s		7694073	0					
ANR	7694165	ElseStatement	else		7694073	0					
ANR	7694166	CompoundStatement		28:15:1208:1208	7694073	0					
ANR	7694167	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"" , s )"	1948:12:89692:89861	7694073	0	True				
ANR	7694168	CallExpression	"fprintf ( xmlout , ""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"" , s )"		7694073	0					
ANR	7694169	Callee	fprintf		7694073	0					
ANR	7694170	Identifier	fprintf		7694073	0					
ANR	7694171	ArgumentList	xmlout		7694073	1					
ANR	7694172	Argument	xmlout		7694073	0					
ANR	7694173	Identifier	xmlout		7694073	0					
ANR	7694174	Argument	"""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"""		7694073	1					
ANR	7694175	PrimaryExpression	"""%s<!-- and any other component, with tile-part-header quantization values different from [0], as QCC. -->\\n"""		7694073	0					
ANR	7694176	Argument	s		7694073	2					
ANR	7694177	Identifier	s		7694073	0					
ANR	7694178	ForStatement	for ( compno = 1 ; compno < numcomps ; compno ++ )		7694073	8					
ANR	7694179	ForInit	compno = 1 ;	1953:9:89888:89898	7694073	0	True				
ANR	7694180	AssignmentExpression	compno = 1		7694073	0		=			
ANR	7694181	Identifier	compno		7694073	0					
ANR	7694182	PrimaryExpression	1		7694073	1					
ANR	7694183	Condition	compno < numcomps	1953:21:89900:89916	7694073	1	True				
ANR	7694184	RelationalExpression	compno < numcomps		7694073	0		<			
ANR	7694185	Identifier	compno		7694073	0					
ANR	7694186	Identifier	numcomps		7694073	1					
ANR	7694187	PostIncDecOperationExpression	compno ++	1954:12:89931:89938	7694073	2	True				
ANR	7694188	Identifier	compno		7694073	0					
ANR	7694189	IncDec	++		7694073	1					
ANR	7694190	CompoundStatement		35:22:1471:1471	7694073	3					
ANR	7694191	ExpressionStatement	tccp = & ( tcp -> tccps [ compno ] )	1955:8:89993:90021	7694073	0	True				
ANR	7694192	AssignmentExpression	tccp = & ( tcp -> tccps [ compno ] )		7694073	0		=			
ANR	7694193	Identifier	tccp		7694073	0					
ANR	7694194	UnaryOperationExpression	& ( tcp -> tccps [ compno ] )		7694073	1					
ANR	7694195	UnaryOperator	&		7694073	0					
ANR	7694196	ArrayIndexing	tcp -> tccps [ compno ]		7694073	1					
ANR	7694197	PtrMemberAccess	tcp -> tccps		7694073	0					
ANR	7694198	Identifier	tcp		7694073	0					
ANR	7694199	Identifier	tccps		7694073	1					
ANR	7694200	Identifier	compno		7694073	1					
ANR	7694201	IfStatement	"if ( same_component_quantization ( firstcomp_tccp , tccp ) )"		7694073	1					
ANR	7694202	Condition	"same_component_quantization ( firstcomp_tccp , tccp )"	1956:12:90035:90083	7694073	0	True				
ANR	7694203	CallExpression	"same_component_quantization ( firstcomp_tccp , tccp )"		7694073	0					
ANR	7694204	Callee	same_component_quantization		7694073	0					
ANR	7694205	Identifier	same_component_quantization		7694073	0					
ANR	7694206	ArgumentList	firstcomp_tccp		7694073	1					
ANR	7694207	Argument	firstcomp_tccp		7694073	0					
ANR	7694208	Identifier	firstcomp_tccp		7694073	0					
ANR	7694209	Argument	tccp		7694073	1					
ANR	7694210	Identifier	tccp		7694073	0					
ANR	7694211	CompoundStatement		37:63:1616:1616	7694073	1					
ANR	7694212	ContinueStatement	continue ;	1957:12:90100:90108	7694073	0	True				
ANR	7694213	ExpressionStatement	"fprintf ( xmlout , ""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"" , s , compno )"	1961:8:90164:90285	7694073	2	True				
ANR	7694214	CallExpression	"fprintf ( xmlout , ""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"" , s , compno )"		7694073	0					
ANR	7694215	Callee	fprintf		7694073	0					
ANR	7694216	Identifier	fprintf		7694073	0					
ANR	7694217	ArgumentList	xmlout		7694073	1					
ANR	7694218	Argument	xmlout		7694073	0					
ANR	7694219	Identifier	xmlout		7694073	0					
ANR	7694220	Argument	"""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"""		7694073	1					
ANR	7694221	PrimaryExpression	"""%s<QuantizationComponent Marker=\\""QCC\\"" Component=\\""%d\\"">\\n"""		7694073	0					
ANR	7694222	Argument	s		7694073	2					
ANR	7694223	Identifier	s		7694073	0					
ANR	7694224	Argument	compno		7694073	3					
ANR	7694225	Identifier	compno		7694073	0					
ANR	7694226	ExpressionStatement	tccp = & j2k_default_tcp -> tccps [ 0 ]	1964:8:90344:90377	7694073	3	True				
ANR	7694227	AssignmentExpression	tccp = & j2k_default_tcp -> tccps [ 0 ]		7694073	0		=			
ANR	7694228	Identifier	tccp		7694073	0					
ANR	7694229	UnaryOperationExpression	& j2k_default_tcp -> tccps [ 0 ]		7694073	1					
ANR	7694230	UnaryOperator	&		7694073	0					
ANR	7694231	ArrayIndexing	j2k_default_tcp -> tccps [ 0 ]		7694073	1					
ANR	7694232	PtrMemberAccess	j2k_default_tcp -> tccps		7694073	0					
ANR	7694233	Identifier	j2k_default_tcp		7694073	0					
ANR	7694234	Identifier	tccps		7694073	1					
ANR	7694235	PrimaryExpression	0		7694073	1					
ANR	7694236	ExpressionStatement	"fprintf ( xmlout , ""%s  <Sqcc>\\n"" , s )"	1966:8:90474:90513	7694073	4	True				
ANR	7694237	CallExpression	"fprintf ( xmlout , ""%s  <Sqcc>\\n"" , s )"		7694073	0					
ANR	7694238	Callee	fprintf		7694073	0					
ANR	7694239	Identifier	fprintf		7694073	0					
ANR	7694240	ArgumentList	xmlout		7694073	1					
ANR	7694241	Argument	xmlout		7694073	0					
ANR	7694242	Identifier	xmlout		7694073	0					
ANR	7694243	Argument	"""%s  <Sqcc>\\n"""		7694073	1					
ANR	7694244	PrimaryExpression	"""%s  <Sqcc>\\n"""		7694073	0					
ANR	7694245	Argument	s		7694073	2					
ANR	7694246	Identifier	s		7694073	0					
ANR	7694247	IfStatement	if ( notes )		7694073	5					
ANR	7694248	Condition	notes	1967:12:90547:90551	7694073	0	True				
ANR	7694249	Identifier	notes		7694073	0					
ANR	7694250	CompoundStatement		48:19:2084:2084	7694073	1					
ANR	7694251	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Quantization style for this component. -->\\n"" , s )"	1968:12:90568:90646	7694073	0	True				
ANR	7694252	CallExpression	"fprintf ( xmlout , ""%s  <!-- Quantization style for this component. -->\\n"" , s )"		7694073	0					
ANR	7694253	Callee	fprintf		7694073	0					
ANR	7694254	Identifier	fprintf		7694073	0					
ANR	7694255	ArgumentList	xmlout		7694073	1					
ANR	7694256	Argument	xmlout		7694073	0					
ANR	7694257	Identifier	xmlout		7694073	0					
ANR	7694258	Argument	"""%s  <!-- Quantization style for this component. -->\\n"""		7694073	1					
ANR	7694259	PrimaryExpression	"""%s  <!-- Quantization style for this component. -->\\n"""		7694073	0					
ANR	7694260	Argument	s		7694073	2					
ANR	7694261	Identifier	s		7694073	0					
ANR	7694262	IfStatement	if ( raw )		7694073	6					
ANR	7694263	Condition	raw	1970:12:90670:90672	7694073	0	True				
ANR	7694264	Identifier	raw		7694073	0					
ANR	7694265	CompoundStatement		51:17:2205:2205	7694073	1					
ANR	7694266	ExpressionStatement	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"	1971:12:90689:90801	7694073	0	True				
ANR	7694267	CallExpression	"fprintf ( xmlout , ""%s    <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> numgbits ) << 5 | tccp -> qntsty )"		7694073	0					
ANR	7694268	Callee	fprintf		7694073	0					
ANR	7694269	Identifier	fprintf		7694073	0					
ANR	7694270	ArgumentList	xmlout		7694073	1					
ANR	7694271	Argument	xmlout		7694073	0					
ANR	7694272	Identifier	xmlout		7694073	0					
ANR	7694273	Argument	"""%s    <AsHex>0x%02x</AsHex>\\n"""		7694073	1					
ANR	7694274	PrimaryExpression	"""%s    <AsHex>0x%02x</AsHex>\\n"""		7694073	0					
ANR	7694275	Argument	s		7694073	2					
ANR	7694276	Identifier	s		7694073	0					
ANR	7694277	Argument	( tccp -> numgbits ) << 5 | tccp -> qntsty		7694073	3					
ANR	7694278	InclusiveOrExpression	( tccp -> numgbits ) << 5 | tccp -> qntsty		7694073	0		|			
ANR	7694279	ShiftExpression	( tccp -> numgbits ) << 5		7694073	0		<<			
ANR	7694280	PtrMemberAccess	tccp -> numgbits		7694073	0					
ANR	7694281	Identifier	tccp		7694073	0					
ANR	7694282	Identifier	numgbits		7694073	1					
ANR	7694283	PrimaryExpression	5		7694073	1					
ANR	7694284	PtrMemberAccess	tccp -> qntsty		7694073	1					
ANR	7694285	Identifier	tccp		7694073	0					
ANR	7694286	Identifier	qntsty		7694073	1					
ANR	7694287	IfStatement	if ( derived )		7694073	7					
ANR	7694288	Condition	derived	1974:12:90825:90831	7694073	0	True				
ANR	7694289	Identifier	derived		7694073	0					
ANR	7694290	CompoundStatement		55:21:2364:2364	7694073	1					
ANR	7694291	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"	1975:12:90848:90956	7694073	0	True				
ANR	7694292	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"" , s , tccp -> qntsty )"		7694073	0					
ANR	7694293	Callee	fprintf		7694073	0					
ANR	7694294	Identifier	fprintf		7694073	0					
ANR	7694295	ArgumentList	xmlout		7694073	1					
ANR	7694296	Argument	xmlout		7694073	0					
ANR	7694297	Identifier	xmlout		7694073	0					
ANR	7694298	Argument	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		7694073	1					
ANR	7694299	PrimaryExpression	"""%s    <QuantizationStyle>%d</QuantizationStyle>\\n"""		7694073	0					
ANR	7694300	Argument	s		7694073	2					
ANR	7694301	Identifier	s		7694073	0					
ANR	7694302	Argument	tccp -> qntsty		7694073	3					
ANR	7694303	PtrMemberAccess	tccp -> qntsty		7694073	0					
ANR	7694304	Identifier	tccp		7694073	0					
ANR	7694305	Identifier	qntsty		7694073	1					
ANR	7694306	IfStatement	if ( notes )		7694073	8					
ANR	7694307	Condition	notes	1978:12:90980:90984	7694073	0	True				
ANR	7694308	Identifier	notes		7694073	0					
ANR	7694309	CompoundStatement		59:19:2517:2517	7694073	1					
ANR	7694310	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"" , s )"	1979:12:91001:91109	7694073	0	True				
ANR	7694311	CallExpression	"fprintf ( xmlout , ""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"" , s )"		7694073	0					
ANR	7694312	Callee	fprintf		7694073	0					
ANR	7694313	Identifier	fprintf		7694073	0					
ANR	7694314	ArgumentList	xmlout		7694073	1					
ANR	7694315	Argument	xmlout		7694073	0					
ANR	7694316	Identifier	xmlout		7694073	0					
ANR	7694317	Argument	"""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"""		7694073	1					
ANR	7694318	PrimaryExpression	"""%s    <!-- Quantization style (in Sqcc's low 5 bits) may be: -->\\n"""		7694073	0					
ANR	7694319	Argument	s		7694073	2					
ANR	7694320	Identifier	s		7694073	0					
ANR	7694321	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"" , s )"	1981:12:91123:91226	7694073	1	True				
ANR	7694322	CallExpression	"fprintf ( xmlout , ""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"" , s )"		7694073	0					
ANR	7694323	Callee	fprintf		7694073	0					
ANR	7694324	Identifier	fprintf		7694073	0					
ANR	7694325	ArgumentList	xmlout		7694073	1					
ANR	7694326	Argument	xmlout		7694073	0					
ANR	7694327	Identifier	xmlout		7694073	0					
ANR	7694328	Argument	"""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"""		7694073	1					
ANR	7694329	PrimaryExpression	"""%s    <!--   0 = No quantization. SPqcc size = 8 bits-->\\n"""		7694073	0					
ANR	7694330	Argument	s		7694073	2					
ANR	7694331	Identifier	s		7694073	0					
ANR	7694332	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"" , s )"	1983:12:91240:91412	7694073	2	True				
ANR	7694333	CallExpression	"fprintf ( xmlout , ""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"" , s )"		7694073	0					
ANR	7694334	Callee	fprintf		7694073	0					
ANR	7694335	Identifier	fprintf		7694073	0					
ANR	7694336	ArgumentList	xmlout		7694073	1					
ANR	7694337	Argument	xmlout		7694073	0					
ANR	7694338	Identifier	xmlout		7694073	0					
ANR	7694339	Argument	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"""		7694073	1					
ANR	7694340	PrimaryExpression	"""%s    <!--   1 = Scalar derived (values signaled for N(L)LL subband only). Use Eq. E.5. SPqcc size = 16. -->\\n"""		7694073	0					
ANR	7694341	Argument	s		7694073	2					
ANR	7694342	Identifier	s		7694073	0					
ANR	7694343	ExpressionStatement	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"" , s )"	1986:12:91426:91580	7694073	3	True				
ANR	7694344	CallExpression	"fprintf ( xmlout , ""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"" , s )"		7694073	0					
ANR	7694345	Callee	fprintf		7694073	0					
ANR	7694346	Identifier	fprintf		7694073	0					
ANR	7694347	ArgumentList	xmlout		7694073	1					
ANR	7694348	Argument	xmlout		7694073	0					
ANR	7694349	Identifier	xmlout		7694073	0					
ANR	7694350	Argument	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"""		7694073	1					
ANR	7694351	PrimaryExpression	"""%s    <!--   2 = Scalar expounded (values signaled for each subband). SPqcc size = 16. -->\\n"""		7694073	0					
ANR	7694352	Argument	s		7694073	2					
ANR	7694353	Identifier	s		7694073	0					
ANR	7694354	IfStatement	if ( derived )		7694073	9					
ANR	7694355	Condition	derived	1990:12:91604:91610	7694073	0	True				
ANR	7694356	Identifier	derived		7694073	0					
ANR	7694357	CompoundStatement		71:21:3143:3143	7694073	1					
ANR	7694358	ExpressionStatement	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"	1991:12:91627:91737	7694073	0	True				
ANR	7694359	CallExpression	"fprintf ( xmlout , ""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"" , s , tccp -> numgbits )"		7694073	0					
ANR	7694360	Callee	fprintf		7694073	0					
ANR	7694361	Identifier	fprintf		7694073	0					
ANR	7694362	ArgumentList	xmlout		7694073	1					
ANR	7694363	Argument	xmlout		7694073	0					
ANR	7694364	Identifier	xmlout		7694073	0					
ANR	7694365	Argument	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		7694073	1					
ANR	7694366	PrimaryExpression	"""%s    <NumberOfGuardBits>%d</NumberOfGuardBits>\\n"""		7694073	0					
ANR	7694367	Argument	s		7694073	2					
ANR	7694368	Identifier	s		7694073	0					
ANR	7694369	Argument	tccp -> numgbits		7694073	3					
ANR	7694370	PtrMemberAccess	tccp -> numgbits		7694073	0					
ANR	7694371	Identifier	tccp		7694073	0					
ANR	7694372	Identifier	numgbits		7694073	1					
ANR	7694373	IfStatement	if ( notes )		7694073	10					
ANR	7694374	Condition	notes	1994:12:91761:91765	7694073	0	True				
ANR	7694375	Identifier	notes		7694073	0					
ANR	7694376	CompoundStatement		75:19:3298:3298	7694073	1					
ANR	7694377	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"" , s )"	1995:12:91782:91894	7694073	0	True				
ANR	7694378	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"" , s )"		7694073	0					
ANR	7694379	Callee	fprintf		7694073	0					
ANR	7694380	Identifier	fprintf		7694073	0					
ANR	7694381	ArgumentList	xmlout		7694073	1					
ANR	7694382	Argument	xmlout		7694073	0					
ANR	7694383	Identifier	xmlout		7694073	0					
ANR	7694384	Argument	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"""		7694073	1					
ANR	7694385	PrimaryExpression	"""%s    <!-- 0-7 guard bits allowed (stored in Sqcc's high 3 bits) -->\\n"""		7694073	0					
ANR	7694386	Argument	s		7694073	2					
ANR	7694387	Identifier	s		7694073	0					
ANR	7694388	ExpressionStatement	"fprintf ( xmlout , ""%s  </Sqcc>\\n"" , s )"	1998:8:91914:91954	7694073	11	True				
ANR	7694389	CallExpression	"fprintf ( xmlout , ""%s  </Sqcc>\\n"" , s )"		7694073	0					
ANR	7694390	Callee	fprintf		7694073	0					
ANR	7694391	Identifier	fprintf		7694073	0					
ANR	7694392	ArgumentList	xmlout		7694073	1					
ANR	7694393	Argument	xmlout		7694073	0					
ANR	7694394	Identifier	xmlout		7694073	0					
ANR	7694395	Argument	"""%s  </Sqcc>\\n"""		7694073	1					
ANR	7694396	PrimaryExpression	"""%s  </Sqcc>\\n"""		7694073	0					
ANR	7694397	Argument	s		7694073	2					
ANR	7694398	Identifier	s		7694073	0					
ANR	7694399	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPqcc>\\n"" , s )"	2002:8:92141:92181	7694073	12	True				
ANR	7694400	CallExpression	"fprintf ( xmlout , ""%s  <SPqcc>\\n"" , s )"		7694073	0					
ANR	7694401	Callee	fprintf		7694073	0					
ANR	7694402	Identifier	fprintf		7694073	0					
ANR	7694403	ArgumentList	xmlout		7694073	1					
ANR	7694404	Argument	xmlout		7694073	0					
ANR	7694405	Identifier	xmlout		7694073	0					
ANR	7694406	Argument	"""%s  <SPqcc>\\n"""		7694073	1					
ANR	7694407	PrimaryExpression	"""%s  <SPqcc>\\n"""		7694073	0					
ANR	7694408	Argument	s		7694073	2					
ANR	7694409	Identifier	s		7694073	0					
ANR	7694410	SwitchStatement	switch ( tccp -> qntsty )		7694073	13					
ANR	7694411	Condition	tccp -> qntsty	2003:16:92199:92210	7694073	0	True				
ANR	7694412	PtrMemberAccess	tccp -> qntsty		7694073	0					
ANR	7694413	Identifier	tccp		7694073	0					
ANR	7694414	Identifier	qntsty		7694073	1					
ANR	7694415	CompoundStatement		84:30:3743:3743	7694073	1					
ANR	7694416	Label	case J2K_CCP_QNTSTY_NOQNT :	2004:8:92223:92248	7694073	0	True				
ANR	7694417	Identifier	J2K_CCP_QNTSTY_NOQNT		7694073	0					
ANR	7694418	ExpressionStatement	numbands = J2K_MAXBANDS	2005:12:92262:92285	7694073	1	True				
ANR	7694419	AssignmentExpression	numbands = J2K_MAXBANDS		7694073	0		=			
ANR	7694420	Identifier	numbands		7694073	0					
ANR	7694421	Identifier	J2K_MAXBANDS		7694073	1					
ANR	7694422	ExpressionStatement	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"	2009:12:92486:92544	7694073	2	True				
ANR	7694423	CallExpression	"fprintf ( xmlout , ""%s    <ReversibleStepSizeValue>\\n"" , s )"		7694073	0					
ANR	7694424	Callee	fprintf		7694073	0					
ANR	7694425	Identifier	fprintf		7694073	0					
ANR	7694426	ArgumentList	xmlout		7694073	1					
ANR	7694427	Argument	xmlout		7694073	0					
ANR	7694428	Identifier	xmlout		7694073	0					
ANR	7694429	Argument	"""%s    <ReversibleStepSizeValue>\\n"""		7694073	1					
ANR	7694430	PrimaryExpression	"""%s    <ReversibleStepSizeValue>\\n"""		7694073	0					
ANR	7694431	Argument	s		7694073	2					
ANR	7694432	Identifier	s		7694073	0					
ANR	7694433	IfStatement	if ( notes )		7694073	3					
ANR	7694434	Condition	notes	2010:16:92562:92566	7694073	0	True				
ANR	7694435	Identifier	notes		7694073	0					
ANR	7694436	CompoundStatement		91:23:4099:4099	7694073	1					
ANR	7694437	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2011:16:92587:92741	7694073	0	True				
ANR	7694438	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7694073	0					
ANR	7694439	Callee	fprintf		7694073	0					
ANR	7694440	Identifier	fprintf		7694073	0					
ANR	7694441	ArgumentList	xmlout		7694073	1					
ANR	7694442	Argument	xmlout		7694073	0					
ANR	7694443	Identifier	xmlout		7694073	0					
ANR	7694444	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	1					
ANR	7694445	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	0					
ANR	7694446	Argument	s		7694073	2					
ANR	7694447	Identifier	s		7694073	0					
ANR	7694448	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"	2014:16:92759:92867	7694073	1	True				
ANR	7694449	CallExpression	"fprintf ( xmlout , ""%s    <!-- until an exponent with zero value is reached. -->\\n"" , s )"		7694073	0					
ANR	7694450	Callee	fprintf		7694073	0					
ANR	7694451	Identifier	fprintf		7694073	0					
ANR	7694452	ArgumentList	xmlout		7694073	1					
ANR	7694453	Argument	xmlout		7694073	0					
ANR	7694454	Identifier	xmlout		7694073	0					
ANR	7694455	Argument	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		7694073	1					
ANR	7694456	PrimaryExpression	"""%s    <!-- until an exponent with zero value is reached. -->\\n"""		7694073	0					
ANR	7694457	Argument	s		7694073	2					
ANR	7694458	Identifier	s		7694073	0					
ANR	7694459	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"	2016:16:92885:92996	7694073	2	True				
ANR	7694460	CallExpression	"fprintf ( xmlout , ""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"" , s )"		7694073	0					
ANR	7694461	Callee	fprintf		7694073	0					
ANR	7694462	Identifier	fprintf		7694073	0					
ANR	7694463	ArgumentList	xmlout		7694073	1					
ANR	7694464	Argument	xmlout		7694073	0					
ANR	7694465	Identifier	xmlout		7694073	0					
ANR	7694466	Argument	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		7694073	1					
ANR	7694467	PrimaryExpression	"""%s    <!-- Exponent epsilon(b) of reversible dynamic range. -->\\n"""		7694073	0					
ANR	7694468	Argument	s		7694073	2					
ANR	7694469	Identifier	s		7694073	0					
ANR	7694470	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"	2018:16:93014:93122	7694073	3	True				
ANR	7694471	CallExpression	"fprintf ( xmlout , ""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"" , s )"		7694073	0					
ANR	7694472	Callee	fprintf		7694073	0					
ANR	7694473	Identifier	fprintf		7694073	0					
ANR	7694474	ArgumentList	xmlout		7694073	1					
ANR	7694475	Argument	xmlout		7694073	0					
ANR	7694476	Identifier	xmlout		7694073	0					
ANR	7694477	Argument	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		7694073	1					
ANR	7694478	PrimaryExpression	"""%s    <!-- Hex value is as stored, in high-order 5 bits. -->\\n"""		7694073	0					
ANR	7694479	Argument	s		7694073	2					
ANR	7694480	Identifier	s		7694073	0					
ANR	7694481	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7694073	4					
ANR	7694482	ForInit	bandno = 0 ;	2021:17:93155:93165	7694073	0	True				
ANR	7694483	AssignmentExpression	bandno = 0		7694073	0		=			
ANR	7694484	Identifier	bandno		7694073	0					
ANR	7694485	PrimaryExpression	0		7694073	1					
ANR	7694486	Condition	bandno < numbands	2021:29:93167:93183	7694073	1	True				
ANR	7694487	RelationalExpression	bandno < numbands		7694073	0		<			
ANR	7694488	Identifier	bandno		7694073	0					
ANR	7694489	Identifier	numbands		7694073	1					
ANR	7694490	PostIncDecOperationExpression	bandno ++	2021:48:93186:93193	7694073	2	True				
ANR	7694491	Identifier	bandno		7694073	0					
ANR	7694492	IncDec	++		7694073	1					
ANR	7694493	CompoundStatement		102:58:4726:4726	7694073	3					
ANR	7694494	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		7694073	0					
ANR	7694495	Condition	tccp -> stepsizes [ bandno ] . expn == 0	2022:20:93218:93250	7694073	0	True				
ANR	7694496	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7694073	0		==			
ANR	7694497	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694498	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694499	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694500	Identifier	tccp		7694073	0					
ANR	7694501	Identifier	stepsizes		7694073	1					
ANR	7694502	Identifier	bandno		7694073	1					
ANR	7694503	Identifier	expn		7694073	1					
ANR	7694504	PrimaryExpression	0		7694073	1					
ANR	7694505	CompoundStatement		103:55:4783:4783	7694073	1					
ANR	7694506	BreakStatement	break ;	2023:20:93275:93280	7694073	0	True				
ANR	7694507	ExpressionStatement	"fprintf ( xmlout , ""%s      <Exponent Subband=\\""%d\\"">\\n"" , s , bandno )"	2025:16:93364:93430	7694073	1	True				
ANR	7694508	CallExpression	"fprintf ( xmlout , ""%s      <Exponent Subband=\\""%d\\"">\\n"" , s , bandno )"		7694073	0					
ANR	7694509	Callee	fprintf		7694073	0					
ANR	7694510	Identifier	fprintf		7694073	0					
ANR	7694511	ArgumentList	xmlout		7694073	1					
ANR	7694512	Argument	xmlout		7694073	0					
ANR	7694513	Identifier	xmlout		7694073	0					
ANR	7694514	Argument	"""%s      <Exponent Subband=\\""%d\\"">\\n"""		7694073	1					
ANR	7694515	PrimaryExpression	"""%s      <Exponent Subband=\\""%d\\"">\\n"""		7694073	0					
ANR	7694516	Argument	s		7694073	2					
ANR	7694517	Identifier	s		7694073	0					
ANR	7694518	Argument	bandno		7694073	3					
ANR	7694519	Identifier	bandno		7694073	0					
ANR	7694520	IfStatement	if ( raw )		7694073	2					
ANR	7694521	Condition	raw	2026:20:93452:93454	7694073	0	True				
ANR	7694522	Identifier	raw		7694073	0					
ANR	7694523	CompoundStatement		107:25:4987:4987	7694073	1					
ANR	7694524	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"	2027:20:93479:93597	7694073	0	True				
ANR	7694525	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , tccp -> stepsizes [ bandno ] . expn << 3 )"		7694073	0					
ANR	7694526	Callee	fprintf		7694073	0					
ANR	7694527	Identifier	fprintf		7694073	0					
ANR	7694528	ArgumentList	xmlout		7694073	1					
ANR	7694529	Argument	xmlout		7694073	0					
ANR	7694530	Identifier	xmlout		7694073	0					
ANR	7694531	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	1					
ANR	7694532	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	0					
ANR	7694533	Argument	s		7694073	2					
ANR	7694534	Identifier	s		7694073	0					
ANR	7694535	Argument	tccp -> stepsizes [ bandno ] . expn << 3		7694073	3					
ANR	7694536	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 3		7694073	0		<<			
ANR	7694537	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694538	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694539	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694540	Identifier	tccp		7694073	0					
ANR	7694541	Identifier	stepsizes		7694073	1					
ANR	7694542	Identifier	bandno		7694073	1					
ANR	7694543	Identifier	expn		7694073	1					
ANR	7694544	PrimaryExpression	3		7694073	1					
ANR	7694545	IfStatement	if ( derived )		7694073	3					
ANR	7694546	Condition	derived	2030:20:93637:93643	7694073	0	True				
ANR	7694547	Identifier	derived		7694073	0					
ANR	7694548	CompoundStatement		111:29:5176:5176	7694073	1					
ANR	7694549	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	2031:20:93668:93785	7694073	0	True				
ANR	7694550	CallExpression	"fprintf ( xmlout , ""%s        <AsDecimal>%d</AsDecimal>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		7694073	0					
ANR	7694551	Callee	fprintf		7694073	0					
ANR	7694552	Identifier	fprintf		7694073	0					
ANR	7694553	ArgumentList	xmlout		7694073	1					
ANR	7694554	Argument	xmlout		7694073	0					
ANR	7694555	Identifier	xmlout		7694073	0					
ANR	7694556	Argument	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		7694073	1					
ANR	7694557	PrimaryExpression	"""%s        <AsDecimal>%d</AsDecimal>\\n"""		7694073	0					
ANR	7694558	Argument	s		7694073	2					
ANR	7694559	Identifier	s		7694073	0					
ANR	7694560	Argument	tccp -> stepsizes [ bandno ] . expn		7694073	3					
ANR	7694561	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694562	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694563	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694564	Identifier	tccp		7694073	0					
ANR	7694565	Identifier	stepsizes		7694073	1					
ANR	7694566	Identifier	bandno		7694073	1					
ANR	7694567	Identifier	expn		7694073	1					
ANR	7694568	ExpressionStatement	"fprintf ( xmlout , ""%s      </Exponent>\\n"" , s )"	2034:16:93821:93865	7694073	4	True				
ANR	7694569	CallExpression	"fprintf ( xmlout , ""%s      </Exponent>\\n"" , s )"		7694073	0					
ANR	7694570	Callee	fprintf		7694073	0					
ANR	7694571	Identifier	fprintf		7694073	0					
ANR	7694572	ArgumentList	xmlout		7694073	1					
ANR	7694573	Argument	xmlout		7694073	0					
ANR	7694574	Identifier	xmlout		7694073	0					
ANR	7694575	Argument	"""%s      </Exponent>\\n"""		7694073	1					
ANR	7694576	PrimaryExpression	"""%s      </Exponent>\\n"""		7694073	0					
ANR	7694577	Argument	s		7694073	2					
ANR	7694578	Identifier	s		7694073	0					
ANR	7694579	ExpressionStatement	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"	2036:12:93893:93952	7694073	5	True				
ANR	7694580	CallExpression	"fprintf ( xmlout , ""%s    </ReversibleStepSizeValue>\\n"" , s )"		7694073	0					
ANR	7694581	Callee	fprintf		7694073	0					
ANR	7694582	Identifier	fprintf		7694073	0					
ANR	7694583	ArgumentList	xmlout		7694073	1					
ANR	7694584	Argument	xmlout		7694073	0					
ANR	7694585	Identifier	xmlout		7694073	0					
ANR	7694586	Argument	"""%s    </ReversibleStepSizeValue>\\n"""		7694073	1					
ANR	7694587	PrimaryExpression	"""%s    </ReversibleStepSizeValue>\\n"""		7694073	0					
ANR	7694588	Argument	s		7694073	2					
ANR	7694589	Identifier	s		7694073	0					
ANR	7694590	BreakStatement	break ;	2037:12:93966:93971	7694073	6	True				
ANR	7694591	Label	case J2K_CCP_QNTSTY_SIQNT :	2038:8:93981:94006	7694073	7	True				
ANR	7694592	Identifier	J2K_CCP_QNTSTY_SIQNT		7694073	0					
ANR	7694593	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	2040:12:94052:94113	7694073	8	True				
ANR	7694594	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		7694073	0					
ANR	7694595	Callee	fprintf		7694073	0					
ANR	7694596	Identifier	fprintf		7694073	0					
ANR	7694597	ArgumentList	xmlout		7694073	1					
ANR	7694598	Argument	xmlout		7694073	0					
ANR	7694599	Identifier	xmlout		7694073	0					
ANR	7694600	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		7694073	1					
ANR	7694601	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		7694073	0					
ANR	7694602	Argument	s		7694073	2					
ANR	7694603	Identifier	s		7694073	0					
ANR	7694604	IfStatement	if ( notes )		7694073	9					
ANR	7694605	Condition	notes	2041:16:94131:94135	7694073	0	True				
ANR	7694606	Identifier	notes		7694073	0					
ANR	7694607	CompoundStatement		122:23:5668:5668	7694073	1					
ANR	7694608	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	2042:16:94156:94313	7694073	0	True				
ANR	7694609	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		7694073	0					
ANR	7694610	Callee	fprintf		7694073	0					
ANR	7694611	Identifier	fprintf		7694073	0					
ANR	7694612	ArgumentList	xmlout		7694073	1					
ANR	7694613	Argument	xmlout		7694073	0					
ANR	7694614	Identifier	xmlout		7694073	0					
ANR	7694615	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7694073	1					
ANR	7694616	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7694073	0					
ANR	7694617	Argument	s		7694073	2					
ANR	7694618	Identifier	s		7694073	0					
ANR	7694619	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValuesForSubband0>\\n"" , s )"	2046:12:94341:94407	7694073	10	True				
ANR	7694620	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValuesForSubband0>\\n"" , s )"		7694073	0					
ANR	7694621	Callee	fprintf		7694073	0					
ANR	7694622	Identifier	fprintf		7694073	0					
ANR	7694623	ArgumentList	xmlout		7694073	1					
ANR	7694624	Argument	xmlout		7694073	0					
ANR	7694625	Identifier	xmlout		7694073	0					
ANR	7694626	Argument	"""%s      <QuantizationValuesForSubband0>\\n"""		7694073	1					
ANR	7694627	PrimaryExpression	"""%s      <QuantizationValuesForSubband0>\\n"""		7694073	0					
ANR	7694628	Argument	s		7694073	2					
ANR	7694629	Identifier	s		7694073	0					
ANR	7694630	IfStatement	if ( notes )		7694073	11					
ANR	7694631	Condition	notes	2047:16:94425:94429	7694073	0	True				
ANR	7694632	Identifier	notes		7694073	0					
ANR	7694633	CompoundStatement		128:23:5962:5962	7694073	1					
ANR	7694634	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"	2048:16:94450:94509	7694073	0	True				
ANR	7694635	CallExpression	"fprintf ( xmlout , ""%s      <!-- For N(L)LL subband: >\\n"" , s )"		7694073	0					
ANR	7694636	Callee	fprintf		7694073	0					
ANR	7694637	Identifier	fprintf		7694073	0					
ANR	7694638	ArgumentList	xmlout		7694073	1					
ANR	7694639	Argument	xmlout		7694073	0					
ANR	7694640	Identifier	xmlout		7694073	0					
ANR	7694641	Argument	"""%s      <!-- For N(L)LL subband: >\\n"""		7694073	1					
ANR	7694642	PrimaryExpression	"""%s      <!-- For N(L)LL subband: >\\n"""		7694073	0					
ANR	7694643	Argument	s		7694073	2					
ANR	7694644	Identifier	s		7694073	0					
ANR	7694645	IfStatement	if ( raw )		7694073	12					
ANR	7694646	Condition	raw	2050:16:94541:94543	7694073	0	True				
ANR	7694647	Identifier	raw		7694073	0					
ANR	7694648	CompoundStatement		131:21:6076:6076	7694073	1					
ANR	7694649	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"	2051:16:94564:94703	7694073	0	True				
ANR	7694650	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant )"		7694073	0					
ANR	7694651	Callee	fprintf		7694073	0					
ANR	7694652	Identifier	fprintf		7694073	0					
ANR	7694653	ArgumentList	xmlout		7694073	1					
ANR	7694654	Argument	xmlout		7694073	0					
ANR	7694655	Identifier	xmlout		7694073	0					
ANR	7694656	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	1					
ANR	7694657	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	0					
ANR	7694658	Argument	s		7694073	2					
ANR	7694659	Identifier	s		7694073	0					
ANR	7694660	Argument	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		7694073	3					
ANR	7694661	InclusiveOrExpression	( tccp -> stepsizes [ 0 ] . expn << 11 ) | tccp -> stepsizes [ 0 ] . mant		7694073	0		|			
ANR	7694662	ShiftExpression	tccp -> stepsizes [ 0 ] . expn << 11		7694073	0		<<			
ANR	7694663	MemberAccess	tccp -> stepsizes [ 0 ] . expn		7694073	0					
ANR	7694664	ArrayIndexing	tccp -> stepsizes [ 0 ]		7694073	0					
ANR	7694665	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694666	Identifier	tccp		7694073	0					
ANR	7694667	Identifier	stepsizes		7694073	1					
ANR	7694668	PrimaryExpression	0		7694073	1					
ANR	7694669	Identifier	expn		7694073	1					
ANR	7694670	PrimaryExpression	11		7694073	1					
ANR	7694671	MemberAccess	tccp -> stepsizes [ 0 ] . mant		7694073	1					
ANR	7694672	ArrayIndexing	tccp -> stepsizes [ 0 ]		7694073	0					
ANR	7694673	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694674	Identifier	tccp		7694073	0					
ANR	7694675	Identifier	stepsizes		7694073	1					
ANR	7694676	PrimaryExpression	0		7694073	1					
ANR	7694677	Identifier	mant		7694073	1					
ANR	7694678	IfStatement	if ( derived )		7694073	13					
ANR	7694679	Condition	derived	2054:16:94735:94741	7694073	0	True				
ANR	7694680	Identifier	derived		7694073	0					
ANR	7694681	CompoundStatement		135:25:6274:6274	7694073	1					
ANR	7694682	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"	2055:16:94762:94869	7694073	0	True				
ANR	7694683	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ 0 ] . expn )"		7694073	0					
ANR	7694684	Callee	fprintf		7694073	0					
ANR	7694685	Identifier	fprintf		7694073	0					
ANR	7694686	ArgumentList	xmlout		7694073	1					
ANR	7694687	Argument	xmlout		7694073	0					
ANR	7694688	Identifier	xmlout		7694073	0					
ANR	7694689	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		7694073	1					
ANR	7694690	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		7694073	0					
ANR	7694691	Argument	s		7694073	2					
ANR	7694692	Identifier	s		7694073	0					
ANR	7694693	Argument	tccp -> stepsizes [ 0 ] . expn		7694073	3					
ANR	7694694	MemberAccess	tccp -> stepsizes [ 0 ] . expn		7694073	0					
ANR	7694695	ArrayIndexing	tccp -> stepsizes [ 0 ]		7694073	0					
ANR	7694696	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694697	Identifier	tccp		7694073	0					
ANR	7694698	Identifier	stepsizes		7694073	1					
ANR	7694699	PrimaryExpression	0		7694073	1					
ANR	7694700	Identifier	expn		7694073	1					
ANR	7694701	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"	2057:16:94887:94994	7694073	1	True				
ANR	7694702	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ 0 ] . mant )"		7694073	0					
ANR	7694703	Callee	fprintf		7694073	0					
ANR	7694704	Identifier	fprintf		7694073	0					
ANR	7694705	ArgumentList	xmlout		7694073	1					
ANR	7694706	Argument	xmlout		7694073	0					
ANR	7694707	Identifier	xmlout		7694073	0					
ANR	7694708	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		7694073	1					
ANR	7694709	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		7694073	0					
ANR	7694710	Argument	s		7694073	2					
ANR	7694711	Identifier	s		7694073	0					
ANR	7694712	Argument	tccp -> stepsizes [ 0 ] . mant		7694073	3					
ANR	7694713	MemberAccess	tccp -> stepsizes [ 0 ] . mant		7694073	0					
ANR	7694714	ArrayIndexing	tccp -> stepsizes [ 0 ]		7694073	0					
ANR	7694715	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694716	Identifier	tccp		7694073	0					
ANR	7694717	Identifier	stepsizes		7694073	1					
ANR	7694718	PrimaryExpression	0		7694073	1					
ANR	7694719	Identifier	mant		7694073	1					
ANR	7694720	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValuesForSubband0>\\n"" , s )"	2060:12:95022:95089	7694073	14	True				
ANR	7694721	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValuesForSubband0>\\n"" , s )"		7694073	0					
ANR	7694722	Callee	fprintf		7694073	0					
ANR	7694723	Identifier	fprintf		7694073	0					
ANR	7694724	ArgumentList	xmlout		7694073	1					
ANR	7694725	Argument	xmlout		7694073	0					
ANR	7694726	Identifier	xmlout		7694073	0					
ANR	7694727	Argument	"""%s      </QuantizationValuesForSubband0>\\n"""		7694073	1					
ANR	7694728	PrimaryExpression	"""%s      </QuantizationValuesForSubband0>\\n"""		7694073	0					
ANR	7694729	Argument	s		7694073	2					
ANR	7694730	Identifier	s		7694073	0					
ANR	7694731	IfStatement	if ( notes )		7694073	15					
ANR	7694732	Condition	notes	2061:16:95107:95111	7694073	0	True				
ANR	7694733	Identifier	notes		7694073	0					
ANR	7694734	CompoundStatement		142:23:6644:6644	7694073	1					
ANR	7694735	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"	2062:16:95132:95300	7694073	0	True				
ANR	7694736	CallExpression	"fprintf ( xmlout , ""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"" , s )"		7694073	0					
ANR	7694737	Callee	fprintf		7694073	0					
ANR	7694738	Identifier	fprintf		7694073	0					
ANR	7694739	ArgumentList	xmlout		7694073	1					
ANR	7694740	Argument	xmlout		7694073	0					
ANR	7694741	Identifier	xmlout		7694073	0					
ANR	7694742	Argument	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		7694073	1					
ANR	7694743	PrimaryExpression	"""%s      <!-- Exponents for subbands beyond 0 are not from header, but calculated per Eq. E.5 -->\\n"""		7694073	0					
ANR	7694744	Argument	s		7694073	2					
ANR	7694745	Identifier	s		7694073	0					
ANR	7694746	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"	2065:16:95318:95475	7694073	1	True				
ANR	7694747	CallExpression	"fprintf ( xmlout , ""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"" , s )"		7694073	0					
ANR	7694748	Callee	fprintf		7694073	0					
ANR	7694749	Identifier	fprintf		7694073	0					
ANR	7694750	ArgumentList	xmlout		7694073	1					
ANR	7694751	Argument	xmlout		7694073	0					
ANR	7694752	Identifier	xmlout		7694073	0					
ANR	7694753	Argument	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		7694073	1					
ANR	7694754	PrimaryExpression	"""%s      <!-- The mantissa for all subbands is the same, given by the value above. -->\\n"""		7694073	0					
ANR	7694755	Argument	s		7694073	2					
ANR	7694756	Identifier	s		7694073	0					
ANR	7694757	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2068:16:95493:95649	7694073	2	True				
ANR	7694758	CallExpression	"fprintf ( xmlout , ""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7694073	0					
ANR	7694759	Callee	fprintf		7694073	0					
ANR	7694760	Identifier	fprintf		7694073	0					
ANR	7694761	ArgumentList	xmlout		7694073	1					
ANR	7694762	Argument	xmlout		7694073	0					
ANR	7694763	Identifier	xmlout		7694073	0					
ANR	7694764	Argument	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	1					
ANR	7694765	PrimaryExpression	"""%s      <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	0					
ANR	7694766	Argument	s		7694073	2					
ANR	7694767	Identifier	s		7694073	0					
ANR	7694768	ExpressionStatement	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"	2071:16:95667:95811	7694073	3	True				
ANR	7694769	CallExpression	"fprintf ( xmlout , ""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"" , s )"		7694073	0					
ANR	7694770	Callee	fprintf		7694073	0					
ANR	7694771	Identifier	fprintf		7694073	0					
ANR	7694772	ArgumentList	xmlout		7694073	1					
ANR	7694773	Argument	xmlout		7694073	0					
ANR	7694774	Identifier	xmlout		7694073	0					
ANR	7694775	Argument	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		7694073	1					
ANR	7694776	PrimaryExpression	"""%s      <!-- until a subband with exponent of zero value is reached. -->\\n"""		7694073	0					
ANR	7694777	Argument	s		7694073	2					
ANR	7694778	Identifier	s		7694073	0					
ANR	7694779	ForStatement	for ( bandno = 1 ; bandno < J2K_MAXBANDS ; bandno ++ )		7694073	16					
ANR	7694780	ForInit	bandno = 1 ;	2076:17:95845:95855	7694073	0	True				
ANR	7694781	AssignmentExpression	bandno = 1		7694073	0		=			
ANR	7694782	Identifier	bandno		7694073	0					
ANR	7694783	PrimaryExpression	1		7694073	1					
ANR	7694784	Condition	bandno < J2K_MAXBANDS	2076:29:95857:95877	7694073	1	True				
ANR	7694785	RelationalExpression	bandno < J2K_MAXBANDS		7694073	0		<			
ANR	7694786	Identifier	bandno		7694073	0					
ANR	7694787	Identifier	J2K_MAXBANDS		7694073	1					
ANR	7694788	PostIncDecOperationExpression	bandno ++	2076:52:95880:95887	7694073	2	True				
ANR	7694789	Identifier	bandno		7694073	0					
ANR	7694790	IncDec	++		7694073	1					
ANR	7694791	CompoundStatement		157:62:7420:7420	7694073	3					
ANR	7694792	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 )		7694073	0					
ANR	7694793	Condition	tccp -> stepsizes [ bandno ] . expn == 0	2077:20:95912:95944	7694073	0	True				
ANR	7694794	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7694073	0		==			
ANR	7694795	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694796	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694797	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694798	Identifier	tccp		7694073	0					
ANR	7694799	Identifier	stepsizes		7694073	1					
ANR	7694800	Identifier	bandno		7694073	1					
ANR	7694801	Identifier	expn		7694073	1					
ANR	7694802	PrimaryExpression	0		7694073	1					
ANR	7694803	CompoundStatement		158:55:7477:7477	7694073	1					
ANR	7694804	BreakStatement	break ;	2078:20:95969:95974	7694073	0	True				
ANR	7694805	ExpressionStatement	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"	2081:16:96011:96187	7694073	1	True				
ANR	7694806	CallExpression	"fprintf ( xmlout , ""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"" , s , bandno , tccp -> stepsizes [ bandno ] . expn )"		7694073	0					
ANR	7694807	Callee	fprintf		7694073	0					
ANR	7694808	Identifier	fprintf		7694073	0					
ANR	7694809	ArgumentList	xmlout		7694073	1					
ANR	7694810	Argument	xmlout		7694073	0					
ANR	7694811	Identifier	xmlout		7694073	0					
ANR	7694812	Argument	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		7694073	1					
ANR	7694813	PrimaryExpression	"""%s      <CalculatedExponent Subband=\\""%d\\"">%d</CalculatedExponent>\\n"""		7694073	0					
ANR	7694814	Argument	s		7694073	2					
ANR	7694815	Identifier	s		7694073	0					
ANR	7694816	Argument	bandno		7694073	3					
ANR	7694817	Identifier	bandno		7694073	0					
ANR	7694818	Argument	tccp -> stepsizes [ bandno ] . expn		7694073	4					
ANR	7694819	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694820	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694821	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694822	Identifier	tccp		7694073	0					
ANR	7694823	Identifier	stepsizes		7694073	1					
ANR	7694824	Identifier	bandno		7694073	1					
ANR	7694825	Identifier	expn		7694073	1					
ANR	7694826	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	2085:12:96215:96277	7694073	17	True				
ANR	7694827	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		7694073	0					
ANR	7694828	Callee	fprintf		7694073	0					
ANR	7694829	Identifier	fprintf		7694073	0					
ANR	7694830	ArgumentList	xmlout		7694073	1					
ANR	7694831	Argument	xmlout		7694073	0					
ANR	7694832	Identifier	xmlout		7694073	0					
ANR	7694833	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		7694073	1					
ANR	7694834	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		7694073	0					
ANR	7694835	Argument	s		7694073	2					
ANR	7694836	Identifier	s		7694073	0					
ANR	7694837	BreakStatement	break ;	2086:12:96291:96296	7694073	18	True				
ANR	7694838	Label	default :	2088:8:96307:96314	7694073	19	True				
ANR	7694839	Identifier	default		7694073	0					
ANR	7694840	ExpressionStatement	numbands = J2K_MAXBANDS	2089:12:96355:96378	7694073	20	True				
ANR	7694841	AssignmentExpression	numbands = J2K_MAXBANDS		7694073	0		=			
ANR	7694842	Identifier	numbands		7694073	0					
ANR	7694843	Identifier	J2K_MAXBANDS		7694073	1					
ANR	7694844	ExpressionStatement	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"	2091:12:96493:96554	7694073	21	True				
ANR	7694845	CallExpression	"fprintf ( xmlout , ""%s    <QuantizationStepSizeValues>\\n"" , s )"		7694073	0					
ANR	7694846	Callee	fprintf		7694073	0					
ANR	7694847	Identifier	fprintf		7694073	0					
ANR	7694848	ArgumentList	xmlout		7694073	1					
ANR	7694849	Argument	xmlout		7694073	0					
ANR	7694850	Identifier	xmlout		7694073	0					
ANR	7694851	Argument	"""%s    <QuantizationStepSizeValues>\\n"""		7694073	1					
ANR	7694852	PrimaryExpression	"""%s    <QuantizationStepSizeValues>\\n"""		7694073	0					
ANR	7694853	Argument	s		7694073	2					
ANR	7694854	Identifier	s		7694073	0					
ANR	7694855	IfStatement	if ( notes )		7694073	22					
ANR	7694856	Condition	notes	2092:16:96572:96576	7694073	0	True				
ANR	7694857	Identifier	notes		7694073	0					
ANR	7694858	CompoundStatement		173:23:8109:8109	7694073	1					
ANR	7694859	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"	2093:16:96597:96754	7694073	0	True				
ANR	7694860	CallExpression	"fprintf ( xmlout , ""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"" , s )"		7694073	0					
ANR	7694861	Callee	fprintf		7694073	0					
ANR	7694862	Identifier	fprintf		7694073	0					
ANR	7694863	ArgumentList	xmlout		7694073	1					
ANR	7694864	Argument	xmlout		7694073	0					
ANR	7694865	Identifier	xmlout		7694073	0					
ANR	7694866	Argument	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7694073	1					
ANR	7694867	PrimaryExpression	"""%s    <!-- For irreversible transformation only.  See Part I Annex E Equation E.3 -->\\n"""		7694073	0					
ANR	7694868	Argument	s		7694073	2					
ANR	7694869	Identifier	s		7694073	0					
ANR	7694870	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"	2096:16:96772:96926	7694073	1	True				
ANR	7694871	CallExpression	"fprintf ( xmlout , ""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"" , s )"		7694073	0					
ANR	7694872	Callee	fprintf		7694073	0					
ANR	7694873	Identifier	fprintf		7694073	0					
ANR	7694874	ArgumentList	xmlout		7694073	1					
ANR	7694875	Argument	xmlout		7694073	0					
ANR	7694876	Identifier	xmlout		7694073	0					
ANR	7694877	Argument	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	1					
ANR	7694878	PrimaryExpression	"""%s    <!-- Current mj2_to_metadata implementation dumps entire internal table, -->\\n"""		7694073	0					
ANR	7694879	Argument	s		7694073	2					
ANR	7694880	Identifier	s		7694073	0					
ANR	7694881	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"	2099:16:96944:97100	7694073	2	True				
ANR	7694882	CallExpression	"fprintf ( xmlout , ""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"" , s )"		7694073	0					
ANR	7694883	Callee	fprintf		7694073	0					
ANR	7694884	Identifier	fprintf		7694073	0					
ANR	7694885	ArgumentList	xmlout		7694073	1					
ANR	7694886	Argument	xmlout		7694073	0					
ANR	7694887	Identifier	xmlout		7694073	0					
ANR	7694888	Argument	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		7694073	1					
ANR	7694889	PrimaryExpression	"""%s    <!-- until a subband with mantissa and exponent of zero values is reached. -->\\n"""		7694073	0					
ANR	7694890	Argument	s		7694073	2					
ANR	7694891	Identifier	s		7694073	0					
ANR	7694892	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7694073	23					
ANR	7694893	ForInit	bandno = 0 ;	2103:17:97133:97143	7694073	0	True				
ANR	7694894	AssignmentExpression	bandno = 0		7694073	0		=			
ANR	7694895	Identifier	bandno		7694073	0					
ANR	7694896	PrimaryExpression	0		7694073	1					
ANR	7694897	Condition	bandno < numbands	2103:29:97145:97161	7694073	1	True				
ANR	7694898	RelationalExpression	bandno < numbands		7694073	0		<			
ANR	7694899	Identifier	bandno		7694073	0					
ANR	7694900	Identifier	numbands		7694073	1					
ANR	7694901	PostIncDecOperationExpression	bandno ++	2103:48:97164:97171	7694073	2	True				
ANR	7694902	Identifier	bandno		7694073	0					
ANR	7694903	IncDec	++		7694073	1					
ANR	7694904	CompoundStatement		184:58:8704:8704	7694073	3					
ANR	7694905	IfStatement	if ( tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0 )		7694073	0					
ANR	7694906	Condition	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0	2104:20:97196:97265	7694073	0	True				
ANR	7694907	AndExpression	tccp -> stepsizes [ bandno ] . expn == 0 && tccp -> stepsizes [ bandno ] . mant == 0		7694073	0		&&			
ANR	7694908	EqualityExpression	tccp -> stepsizes [ bandno ] . expn == 0		7694073	0		==			
ANR	7694909	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694910	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694911	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694912	Identifier	tccp		7694073	0					
ANR	7694913	Identifier	stepsizes		7694073	1					
ANR	7694914	Identifier	bandno		7694073	1					
ANR	7694915	Identifier	expn		7694073	1					
ANR	7694916	PrimaryExpression	0		7694073	1					
ANR	7694917	EqualityExpression	tccp -> stepsizes [ bandno ] . mant == 0		7694073	1		==			
ANR	7694918	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7694073	0					
ANR	7694919	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694920	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694921	Identifier	tccp		7694073	0					
ANR	7694922	Identifier	stepsizes		7694073	1					
ANR	7694923	Identifier	bandno		7694073	1					
ANR	7694924	Identifier	mant		7694073	1					
ANR	7694925	PrimaryExpression	0		7694073	1					
ANR	7694926	CompoundStatement		185:92:8798:8798	7694073	1					
ANR	7694927	BreakStatement	break ;	2105:20:97290:97295	7694073	0	True				
ANR	7694928	ExpressionStatement	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"	2107:16:97385:97461	7694073	1	True				
ANR	7694929	CallExpression	"fprintf ( xmlout , ""%s      <QuantizationValues Subband=\\""%d\\"">\\n"" , s , bandno )"		7694073	0					
ANR	7694930	Callee	fprintf		7694073	0					
ANR	7694931	Identifier	fprintf		7694073	0					
ANR	7694932	ArgumentList	xmlout		7694073	1					
ANR	7694933	Argument	xmlout		7694073	0					
ANR	7694934	Identifier	xmlout		7694073	0					
ANR	7694935	Argument	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		7694073	1					
ANR	7694936	PrimaryExpression	"""%s      <QuantizationValues Subband=\\""%d\\"">\\n"""		7694073	0					
ANR	7694937	Argument	s		7694073	2					
ANR	7694938	Identifier	s		7694073	0					
ANR	7694939	Argument	bandno		7694073	3					
ANR	7694940	Identifier	bandno		7694073	0					
ANR	7694941	IfStatement	if ( raw )		7694073	2					
ANR	7694942	Condition	raw	2108:20:97483:97485	7694073	0	True				
ANR	7694943	Identifier	raw		7694073	0					
ANR	7694944	CompoundStatement		189:25:9018:9018	7694073	1					
ANR	7694945	ExpressionStatement	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"	2109:20:97510:97662	7694073	0	True				
ANR	7694946	CallExpression	"fprintf ( xmlout , ""%s        <AsHex>0x%02x</AsHex>\\n"" , s , ( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant )"		7694073	0					
ANR	7694947	Callee	fprintf		7694073	0					
ANR	7694948	Identifier	fprintf		7694073	0					
ANR	7694949	ArgumentList	xmlout		7694073	1					
ANR	7694950	Argument	xmlout		7694073	0					
ANR	7694951	Identifier	xmlout		7694073	0					
ANR	7694952	Argument	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	1					
ANR	7694953	PrimaryExpression	"""%s        <AsHex>0x%02x</AsHex>\\n"""		7694073	0					
ANR	7694954	Argument	s		7694073	2					
ANR	7694955	Identifier	s		7694073	0					
ANR	7694956	Argument	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		7694073	3					
ANR	7694957	InclusiveOrExpression	( tccp -> stepsizes [ bandno ] . expn << 11 ) | tccp -> stepsizes [ bandno ] . mant		7694073	0		|			
ANR	7694958	ShiftExpression	tccp -> stepsizes [ bandno ] . expn << 11		7694073	0		<<			
ANR	7694959	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694960	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694961	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694962	Identifier	tccp		7694073	0					
ANR	7694963	Identifier	stepsizes		7694073	1					
ANR	7694964	Identifier	bandno		7694073	1					
ANR	7694965	Identifier	expn		7694073	1					
ANR	7694966	PrimaryExpression	11		7694073	1					
ANR	7694967	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7694073	1					
ANR	7694968	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694969	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694970	Identifier	tccp		7694073	0					
ANR	7694971	Identifier	stepsizes		7694073	1					
ANR	7694972	Identifier	bandno		7694073	1					
ANR	7694973	Identifier	mant		7694073	1					
ANR	7694974	IfStatement	if ( derived )		7694073	3					
ANR	7694975	Condition	derived	2112:20:97702:97708	7694073	0	True				
ANR	7694976	Identifier	derived		7694073	0					
ANR	7694977	CompoundStatement		193:29:9241:9241	7694073	1					
ANR	7694978	ExpressionStatement	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"	2113:20:97733:97848	7694073	0	True				
ANR	7694979	CallExpression	"fprintf ( xmlout , ""%s        <Exponent>%d</Exponent>\\n"" , s , tccp -> stepsizes [ bandno ] . expn )"		7694073	0					
ANR	7694980	Callee	fprintf		7694073	0					
ANR	7694981	Identifier	fprintf		7694073	0					
ANR	7694982	ArgumentList	xmlout		7694073	1					
ANR	7694983	Argument	xmlout		7694073	0					
ANR	7694984	Identifier	xmlout		7694073	0					
ANR	7694985	Argument	"""%s        <Exponent>%d</Exponent>\\n"""		7694073	1					
ANR	7694986	PrimaryExpression	"""%s        <Exponent>%d</Exponent>\\n"""		7694073	0					
ANR	7694987	Argument	s		7694073	2					
ANR	7694988	Identifier	s		7694073	0					
ANR	7694989	Argument	tccp -> stepsizes [ bandno ] . expn		7694073	3					
ANR	7694990	MemberAccess	tccp -> stepsizes [ bandno ] . expn		7694073	0					
ANR	7694991	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7694992	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7694993	Identifier	tccp		7694073	0					
ANR	7694994	Identifier	stepsizes		7694073	1					
ANR	7694995	Identifier	bandno		7694073	1					
ANR	7694996	Identifier	expn		7694073	1					
ANR	7694997	ExpressionStatement	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"	2115:20:97870:97985	7694073	1	True				
ANR	7694998	CallExpression	"fprintf ( xmlout , ""%s        <Mantissa>%d</Mantissa>\\n"" , s , tccp -> stepsizes [ bandno ] . mant )"		7694073	0					
ANR	7694999	Callee	fprintf		7694073	0					
ANR	7695000	Identifier	fprintf		7694073	0					
ANR	7695001	ArgumentList	xmlout		7694073	1					
ANR	7695002	Argument	xmlout		7694073	0					
ANR	7695003	Identifier	xmlout		7694073	0					
ANR	7695004	Argument	"""%s        <Mantissa>%d</Mantissa>\\n"""		7694073	1					
ANR	7695005	PrimaryExpression	"""%s        <Mantissa>%d</Mantissa>\\n"""		7694073	0					
ANR	7695006	Argument	s		7694073	2					
ANR	7695007	Identifier	s		7694073	0					
ANR	7695008	Argument	tccp -> stepsizes [ bandno ] . mant		7694073	3					
ANR	7695009	MemberAccess	tccp -> stepsizes [ bandno ] . mant		7694073	0					
ANR	7695010	ArrayIndexing	tccp -> stepsizes [ bandno ]		7694073	0					
ANR	7695011	PtrMemberAccess	tccp -> stepsizes		7694073	0					
ANR	7695012	Identifier	tccp		7694073	0					
ANR	7695013	Identifier	stepsizes		7694073	1					
ANR	7695014	Identifier	bandno		7694073	1					
ANR	7695015	Identifier	mant		7694073	1					
ANR	7695016	ExpressionStatement	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"	2118:16:98021:98075	7694073	4	True				
ANR	7695017	CallExpression	"fprintf ( xmlout , ""%s      </QuantizationValues>\\n"" , s )"		7694073	0					
ANR	7695018	Callee	fprintf		7694073	0					
ANR	7695019	Identifier	fprintf		7694073	0					
ANR	7695020	ArgumentList	xmlout		7694073	1					
ANR	7695021	Argument	xmlout		7694073	0					
ANR	7695022	Identifier	xmlout		7694073	0					
ANR	7695023	Argument	"""%s      </QuantizationValues>\\n"""		7694073	1					
ANR	7695024	PrimaryExpression	"""%s      </QuantizationValues>\\n"""		7694073	0					
ANR	7695025	Argument	s		7694073	2					
ANR	7695026	Identifier	s		7694073	0					
ANR	7695027	ExpressionStatement	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"	2120:12:98103:98165	7694073	24	True				
ANR	7695028	CallExpression	"fprintf ( xmlout , ""%s    </QuantizationStepSizeValues>\\n"" , s )"		7694073	0					
ANR	7695029	Callee	fprintf		7694073	0					
ANR	7695030	Identifier	fprintf		7694073	0					
ANR	7695031	ArgumentList	xmlout		7694073	1					
ANR	7695032	Argument	xmlout		7694073	0					
ANR	7695033	Identifier	xmlout		7694073	0					
ANR	7695034	Argument	"""%s    </QuantizationStepSizeValues>\\n"""		7694073	1					
ANR	7695035	PrimaryExpression	"""%s    </QuantizationStepSizeValues>\\n"""		7694073	0					
ANR	7695036	Argument	s		7694073	2					
ANR	7695037	Identifier	s		7694073	0					
ANR	7695038	BreakStatement	break ;	2121:12:98179:98184	7694073	25	True				
ANR	7695039	ExpressionStatement	"fprintf ( xmlout , ""%s  </SPqcc>\\n"" , s )"	2123:8:98217:98258	7694073	14	True				
ANR	7695040	CallExpression	"fprintf ( xmlout , ""%s  </SPqcc>\\n"" , s )"		7694073	0					
ANR	7695041	Callee	fprintf		7694073	0					
ANR	7695042	Identifier	fprintf		7694073	0					
ANR	7695043	ArgumentList	xmlout		7694073	1					
ANR	7695044	Argument	xmlout		7694073	0					
ANR	7695045	Identifier	xmlout		7694073	0					
ANR	7695046	Argument	"""%s  </SPqcc>\\n"""		7694073	1					
ANR	7695047	PrimaryExpression	"""%s  </SPqcc>\\n"""		7694073	0					
ANR	7695048	Argument	s		7694073	2					
ANR	7695049	Identifier	s		7694073	0					
ANR	7695050	ExpressionStatement	"fprintf ( xmlout , ""%s</QuantizationComponent>\\n"" , s )"	2124:8:98268:98323	7694073	15	True				
ANR	7695051	CallExpression	"fprintf ( xmlout , ""%s</QuantizationComponent>\\n"" , s )"		7694073	0					
ANR	7695052	Callee	fprintf		7694073	0					
ANR	7695053	Identifier	fprintf		7694073	0					
ANR	7695054	ArgumentList	xmlout		7694073	1					
ANR	7695055	Argument	xmlout		7694073	0					
ANR	7695056	Identifier	xmlout		7694073	0					
ANR	7695057	Argument	"""%s</QuantizationComponent>\\n"""		7694073	1					
ANR	7695058	PrimaryExpression	"""%s</QuantizationComponent>\\n"""		7694073	0					
ANR	7695059	Argument	s		7694073	2					
ANR	7695060	Identifier	s		7694073	0					
ANR	7695061	ReturnType	void		7694073	1					
ANR	7695062	Identifier	xml_out_frame_qcc		7694073	2					
ANR	7695063	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		7694073	3					
ANR	7695064	Parameter	FILE * xmlout	1919:23:88425:88436	7694073	0	True				
ANR	7695065	ParameterType	FILE *		7694073	0					
ANR	7695066	Identifier	xmlout		7694073	1					
ANR	7695067	Parameter	opj_tcp_t * tcp	1919:37:88439:88452	7694073	1	True				
ANR	7695068	ParameterType	opj_tcp_t *		7694073	0					
ANR	7695069	Identifier	tcp		7694073	1					
ANR	7695070	Parameter	int numcomps	1919:53:88455:88466	7694073	2	True				
ANR	7695071	ParameterType	int		7694073	0					
ANR	7695072	Identifier	numcomps		7694073	1					
ANR	7695073	CFGEntryNode	ENTRY		7694073		True				
ANR	7695074	CFGExitNode	EXIT		7694073		True				
ANR	7695075	Symbol	notes		7694073						
ANR	7695076	Symbol	* tccp -> stepsizes		7694073						
ANR	7695077	Symbol	j2k_default_tcp -> tccps		7694073						
ANR	7695078	Symbol	tccp -> stepsizes [ bandno ] . mant		7694073						
ANR	7695079	Symbol	* tcp		7694073						
ANR	7695080	Symbol	j2k_default_tcp		7694073						
ANR	7695081	Symbol	* bandno		7694073						
ANR	7695082	Symbol	tccp -> stepsizes [ 0 ] . expn		7694073						
ANR	7695083	Symbol	numbands		7694073						
ANR	7695084	Symbol	* * tccp		7694073						
ANR	7695085	Symbol	same_component_quantization		7694073						
ANR	7695086	Symbol	derived		7694073						
ANR	7695087	Symbol	J2K_MAXBANDS		7694073						
ANR	7695088	Symbol	numcomps		7694073						
ANR	7695089	Symbol	tcp		7694073						
ANR	7695090	Symbol	tccp -> stepsizes [ bandno ] . expn		7694073						
ANR	7695091	Symbol	tcp -> tccps		7694073						
ANR	7695092	Symbol	tccp -> qntsty		7694073						
ANR	7695093	Symbol	raw		7694073						
ANR	7695094	Symbol	tccp		7694073						
ANR	7695095	Symbol	tccp -> stepsizes		7694073						
ANR	7695096	Symbol	tccp -> numgbits		7694073						
ANR	7695097	Symbol	xmlout		7694073						
ANR	7695098	Symbol	compno		7694073						
ANR	7695099	Symbol	bandno		7694073						
ANR	7695100	Symbol	s		7694073						
ANR	7695101	Symbol	* tccp		7694073						
ANR	7695102	Symbol	firstcomp_tccp		7694073						
ANR	7695103	Symbol	spaces		7694073						
ANR	7695104	Symbol	* j2k_default_tcp		7694073						
ANR	7695105	Symbol	tccp -> stepsizes [ 0 ] . mant		7694073						
ANR	7695106	Function	same_component_quantization	2131:0:98441:100013							
ANR	7695107	FunctionDef	"same_component_quantization (opj_tccp_t * tccp1 , opj_tccp_t * tccp2)"		7695106	0					
ANR	7695108	CompoundStatement		2132:0:98512:100013	7695106	0					
ANR	7695109	IdentifierDeclStatement	"int bandno , numbands ;"	2133:4:98518:98538	7695106	0	True				
ANR	7695110	IdentifierDecl	bandno		7695106	0					
ANR	7695111	IdentifierDeclType	int		7695106	0					
ANR	7695112	Identifier	bandno		7695106	1					
ANR	7695113	IdentifierDecl	numbands		7695106	1					
ANR	7695114	IdentifierDeclType	int		7695106	0					
ANR	7695115	Identifier	numbands		7695106	1					
ANR	7695116	IfStatement	if ( tccp1 -> qntsty != tccp2 -> qntsty )		7695106	1					
ANR	7695117	Condition	tccp1 -> qntsty != tccp2 -> qntsty	2135:8:98549:98578	7695106	0	True				
ANR	7695118	EqualityExpression	tccp1 -> qntsty != tccp2 -> qntsty		7695106	0		!=			
ANR	7695119	PtrMemberAccess	tccp1 -> qntsty		7695106	0					
ANR	7695120	Identifier	tccp1		7695106	0					
ANR	7695121	Identifier	qntsty		7695106	1					
ANR	7695122	PtrMemberAccess	tccp2 -> qntsty		7695106	1					
ANR	7695123	Identifier	tccp2		7695106	0					
ANR	7695124	Identifier	qntsty		7695106	1					
ANR	7695125	CompoundStatement		4:40:68:68	7695106	1					
ANR	7695126	ReturnStatement	return FALSE ;	2136:8:98591:98603	7695106	0	True				
ANR	7695127	Identifier	FALSE		7695106	0					
ANR	7695128	IfStatement	if ( tccp1 -> numgbits != tccp2 -> numgbits )		7695106	2					
ANR	7695129	Condition	tccp1 -> numgbits != tccp2 -> numgbits	2138:8:98619:98652	7695106	0	True				
ANR	7695130	EqualityExpression	tccp1 -> numgbits != tccp2 -> numgbits		7695106	0		!=			
ANR	7695131	PtrMemberAccess	tccp1 -> numgbits		7695106	0					
ANR	7695132	Identifier	tccp1		7695106	0					
ANR	7695133	Identifier	numgbits		7695106	1					
ANR	7695134	PtrMemberAccess	tccp2 -> numgbits		7695106	1					
ANR	7695135	Identifier	tccp2		7695106	0					
ANR	7695136	Identifier	numgbits		7695106	1					
ANR	7695137	CompoundStatement		7:44:142:142	7695106	1					
ANR	7695138	ReturnStatement	return FALSE ;	2139:8:98665:98677	7695106	0	True				
ANR	7695139	Identifier	FALSE		7695106	0					
ANR	7695140	SwitchStatement	switch ( tccp1 -> qntsty )		7695106	3					
ANR	7695141	Condition	tccp1 -> qntsty	2142:12:98698:98710	7695106	0	True				
ANR	7695142	PtrMemberAccess	tccp1 -> qntsty		7695106	0					
ANR	7695143	Identifier	tccp1		7695106	0					
ANR	7695144	Identifier	qntsty		7695106	1					
ANR	7695145	CompoundStatement		11:27:200:200	7695106	1					
ANR	7695146	Label	case J2K_CCP_QNTSTY_NOQNT :	2143:4:98719:98744	7695106	0	True				
ANR	7695147	Identifier	J2K_CCP_QNTSTY_NOQNT		7695106	0					
ANR	7695148	ExpressionStatement	numbands = J2K_MAXBANDS	2144:8:98754:98777	7695106	1	True				
ANR	7695149	AssignmentExpression	numbands = J2K_MAXBANDS		7695106	0		=			
ANR	7695150	Identifier	numbands		7695106	0					
ANR	7695151	Identifier	J2K_MAXBANDS		7695106	1					
ANR	7695152	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7695106	2					
ANR	7695153	ForInit	bandno = 0 ;	2146:13:98904:98914	7695106	0	True				
ANR	7695154	AssignmentExpression	bandno = 0		7695106	0		=			
ANR	7695155	Identifier	bandno		7695106	0					
ANR	7695156	PrimaryExpression	0		7695106	1					
ANR	7695157	Condition	bandno < numbands	2146:25:98916:98932	7695106	1	True				
ANR	7695158	RelationalExpression	bandno < numbands		7695106	0		<			
ANR	7695159	Identifier	bandno		7695106	0					
ANR	7695160	Identifier	numbands		7695106	1					
ANR	7695161	PostIncDecOperationExpression	bandno ++	2146:44:98935:98942	7695106	2	True				
ANR	7695162	Identifier	bandno		7695106	0					
ANR	7695163	IncDec	++		7695106	1					
ANR	7695164	CompoundStatement		15:54:432:432	7695106	3					
ANR	7695165	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn == 0 )		7695106	0					
ANR	7695166	Condition	tccp1 -> stepsizes [ bandno ] . expn == 0	2147:16:98963:98996	7695106	0	True				
ANR	7695167	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn == 0		7695106	0		==			
ANR	7695168	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		7695106	0					
ANR	7695169	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		7695106	0					
ANR	7695170	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695171	Identifier	tccp1		7695106	0					
ANR	7695172	Identifier	stepsizes		7695106	1					
ANR	7695173	Identifier	bandno		7695106	1					
ANR	7695174	Identifier	expn		7695106	1					
ANR	7695175	PrimaryExpression	0		7695106	1					
ANR	7695176	CompoundStatement		16:52:486:486	7695106	1					
ANR	7695177	BreakStatement	break ;	2148:16:99017:99022	7695106	0	True				
ANR	7695178	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn )		7695106	1					
ANR	7695179	Condition	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn	2150:16:99054:99115	7695106	0	True				
ANR	7695180	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn		7695106	0		!=			
ANR	7695181	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		7695106	0					
ANR	7695182	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		7695106	0					
ANR	7695183	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695184	Identifier	tccp1		7695106	0					
ANR	7695185	Identifier	stepsizes		7695106	1					
ANR	7695186	Identifier	bandno		7695106	1					
ANR	7695187	Identifier	expn		7695106	1					
ANR	7695188	MemberAccess	tccp2 -> stepsizes [ bandno ] . expn		7695106	1					
ANR	7695189	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		7695106	0					
ANR	7695190	PtrMemberAccess	tccp2 -> stepsizes		7695106	0					
ANR	7695191	Identifier	tccp2		7695106	0					
ANR	7695192	Identifier	stepsizes		7695106	1					
ANR	7695193	Identifier	bandno		7695106	1					
ANR	7695194	Identifier	expn		7695106	1					
ANR	7695195	CompoundStatement		19:80:605:605	7695106	1					
ANR	7695196	ReturnStatement	return FALSE ;	2151:16:99136:99148	7695106	0	True				
ANR	7695197	Identifier	FALSE		7695106	0					
ANR	7695198	BreakStatement	break ;	2154:8:99182:99187	7695106	3	True				
ANR	7695199	Label	case J2K_CCP_QNTSTY_SIQNT :	2155:4:99193:99218	7695106	4	True				
ANR	7695200	Identifier	J2K_CCP_QNTSTY_SIQNT		7695106	0					
ANR	7695201	IfStatement	if ( tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant )		7695106	5					
ANR	7695202	Condition	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant	2157:12:99260:99383	7695106	0	True				
ANR	7695203	OrExpression	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn || tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant		7695106	0		||			
ANR	7695204	EqualityExpression	tccp1 -> stepsizes [ 0 ] . expn != tccp2 -> stepsizes [ 0 ] . expn		7695106	0		!=			
ANR	7695205	MemberAccess	tccp1 -> stepsizes [ 0 ] . expn		7695106	0					
ANR	7695206	ArrayIndexing	tccp1 -> stepsizes [ 0 ]		7695106	0					
ANR	7695207	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695208	Identifier	tccp1		7695106	0					
ANR	7695209	Identifier	stepsizes		7695106	1					
ANR	7695210	PrimaryExpression	0		7695106	1					
ANR	7695211	Identifier	expn		7695106	1					
ANR	7695212	MemberAccess	tccp2 -> stepsizes [ 0 ] . expn		7695106	1					
ANR	7695213	ArrayIndexing	tccp2 -> stepsizes [ 0 ]		7695106	0					
ANR	7695214	PtrMemberAccess	tccp2 -> stepsizes		7695106	0					
ANR	7695215	Identifier	tccp2		7695106	0					
ANR	7695216	Identifier	stepsizes		7695106	1					
ANR	7695217	PrimaryExpression	0		7695106	1					
ANR	7695218	Identifier	expn		7695106	1					
ANR	7695219	EqualityExpression	tccp1 -> stepsizes [ 0 ] . mant != tccp2 -> stepsizes [ 0 ] . mant		7695106	1		!=			
ANR	7695220	MemberAccess	tccp1 -> stepsizes [ 0 ] . mant		7695106	0					
ANR	7695221	ArrayIndexing	tccp1 -> stepsizes [ 0 ]		7695106	0					
ANR	7695222	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695223	Identifier	tccp1		7695106	0					
ANR	7695224	Identifier	stepsizes		7695106	1					
ANR	7695225	PrimaryExpression	0		7695106	1					
ANR	7695226	Identifier	mant		7695106	1					
ANR	7695227	MemberAccess	tccp2 -> stepsizes [ 0 ] . mant		7695106	1					
ANR	7695228	ArrayIndexing	tccp2 -> stepsizes [ 0 ]		7695106	0					
ANR	7695229	PtrMemberAccess	tccp2 -> stepsizes		7695106	0					
ANR	7695230	Identifier	tccp2		7695106	0					
ANR	7695231	Identifier	stepsizes		7695106	1					
ANR	7695232	PrimaryExpression	0		7695106	1					
ANR	7695233	Identifier	mant		7695106	1					
ANR	7695234	CompoundStatement		27:70:873:873	7695106	1					
ANR	7695235	ReturnStatement	return FALSE ;	2159:12:99400:99412	7695106	0	True				
ANR	7695236	Identifier	FALSE		7695106	0					
ANR	7695237	BreakStatement	break ;	2162:8:99512:99517	7695106	6	True				
ANR	7695238	Label	default :	2164:4:99524:99531	7695106	7	True				
ANR	7695239	Identifier	default		7695106	0					
ANR	7695240	ExpressionStatement	numbands = J2K_MAXBANDS	2165:8:99568:99591	7695106	8	True				
ANR	7695241	AssignmentExpression	numbands = J2K_MAXBANDS		7695106	0		=			
ANR	7695242	Identifier	numbands		7695106	0					
ANR	7695243	Identifier	J2K_MAXBANDS		7695106	1					
ANR	7695244	ForStatement	for ( bandno = 0 ; bandno < numbands ; bandno ++ )		7695106	9					
ANR	7695245	ForInit	bandno = 0 ;	2167:13:99716:99726	7695106	0	True				
ANR	7695246	AssignmentExpression	bandno = 0		7695106	0		=			
ANR	7695247	Identifier	bandno		7695106	0					
ANR	7695248	PrimaryExpression	0		7695106	1					
ANR	7695249	Condition	bandno < numbands	2167:25:99728:99744	7695106	1	True				
ANR	7695250	RelationalExpression	bandno < numbands		7695106	0		<			
ANR	7695251	Identifier	bandno		7695106	0					
ANR	7695252	Identifier	numbands		7695106	1					
ANR	7695253	PostIncDecOperationExpression	bandno ++	2167:44:99747:99754	7695106	2	True				
ANR	7695254	Identifier	bandno		7695106	0					
ANR	7695255	IncDec	++		7695106	1					
ANR	7695256	CompoundStatement		36:54:1244:1244	7695106	3					
ANR	7695257	IfStatement	if ( tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant )		7695106	0					
ANR	7695258	Condition	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant	2168:16:99775:99922	7695106	0	True				
ANR	7695259	OrExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn || tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant		7695106	0		||			
ANR	7695260	EqualityExpression	tccp1 -> stepsizes [ bandno ] . expn != tccp2 -> stepsizes [ bandno ] . expn		7695106	0		!=			
ANR	7695261	MemberAccess	tccp1 -> stepsizes [ bandno ] . expn		7695106	0					
ANR	7695262	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		7695106	0					
ANR	7695263	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695264	Identifier	tccp1		7695106	0					
ANR	7695265	Identifier	stepsizes		7695106	1					
ANR	7695266	Identifier	bandno		7695106	1					
ANR	7695267	Identifier	expn		7695106	1					
ANR	7695268	MemberAccess	tccp2 -> stepsizes [ bandno ] . expn		7695106	1					
ANR	7695269	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		7695106	0					
ANR	7695270	PtrMemberAccess	tccp2 -> stepsizes		7695106	0					
ANR	7695271	Identifier	tccp2		7695106	0					
ANR	7695272	Identifier	stepsizes		7695106	1					
ANR	7695273	Identifier	bandno		7695106	1					
ANR	7695274	Identifier	expn		7695106	1					
ANR	7695275	EqualityExpression	tccp1 -> stepsizes [ bandno ] . mant != tccp2 -> stepsizes [ bandno ] . mant		7695106	1		!=			
ANR	7695276	MemberAccess	tccp1 -> stepsizes [ bandno ] . mant		7695106	0					
ANR	7695277	ArrayIndexing	tccp1 -> stepsizes [ bandno ]		7695106	0					
ANR	7695278	PtrMemberAccess	tccp1 -> stepsizes		7695106	0					
ANR	7695279	Identifier	tccp1		7695106	0					
ANR	7695280	Identifier	stepsizes		7695106	1					
ANR	7695281	Identifier	bandno		7695106	1					
ANR	7695282	Identifier	mant		7695106	1					
ANR	7695283	MemberAccess	tccp2 -> stepsizes [ bandno ] . mant		7695106	1					
ANR	7695284	ArrayIndexing	tccp2 -> stepsizes [ bandno ]		7695106	0					
ANR	7695285	PtrMemberAccess	tccp2 -> stepsizes		7695106	0					
ANR	7695286	Identifier	tccp2		7695106	0					
ANR	7695287	Identifier	stepsizes		7695106	1					
ANR	7695288	Identifier	bandno		7695106	1					
ANR	7695289	Identifier	mant		7695106	1					
ANR	7695290	ExpressionStatement		2169:83:99924:99924	7695106	1	True				
ANR	7695291	ReturnStatement	return FALSE ;	2170:12:99938:99950	7695106	1	True				
ANR	7695292	Identifier	FALSE		7695106	0					
ANR	7695293	BreakStatement	break ;	2172:8:99970:99975	7695106	10	True				
ANR	7695294	ReturnStatement	return TRUE ;	2174:4:100000:100011	7695106	4	True				
ANR	7695295	Identifier	TRUE		7695106	0					
ANR	7695296	ReturnType	BOOL		7695106	1					
ANR	7695297	Identifier	same_component_quantization		7695106	2					
ANR	7695298	ParameterList	"opj_tccp_t * tccp1 , opj_tccp_t * tccp2"		7695106	3					
ANR	7695299	Parameter	opj_tccp_t * tccp1	2131:33:98474:98490	7695106	0	True				
ANR	7695300	ParameterType	opj_tccp_t *		7695106	0					
ANR	7695301	Identifier	tccp1		7695106	1					
ANR	7695302	Parameter	opj_tccp_t * tccp2	2131:52:98493:98509	7695106	1	True				
ANR	7695303	ParameterType	opj_tccp_t *		7695106	0					
ANR	7695304	Identifier	tccp2		7695106	1					
ANR	7695305	CFGEntryNode	ENTRY		7695106		True				
ANR	7695306	CFGExitNode	EXIT		7695106		True				
ANR	7695307	Symbol	tccp1 -> numgbits		7695106						
ANR	7695308	Symbol	tccp2 -> numgbits		7695106						
ANR	7695309	Symbol	tccp1		7695106						
ANR	7695310	Symbol	tccp2		7695106						
ANR	7695311	Symbol	tccp1 -> stepsizes		7695106						
ANR	7695312	Symbol	* tccp2		7695106						
ANR	7695313	Symbol	tccp2 -> stepsizes		7695106						
ANR	7695314	Symbol	* bandno		7695106						
ANR	7695315	Symbol	* tccp1 -> stepsizes		7695106						
ANR	7695316	Symbol	numbands		7695106						
ANR	7695317	Symbol	tccp1 -> stepsizes [ bandno ] . expn		7695106						
ANR	7695318	Symbol	tccp2 -> stepsizes [ bandno ] . mant		7695106						
ANR	7695319	Symbol	tccp1 -> qntsty		7695106						
ANR	7695320	Symbol	* tccp2 -> stepsizes		7695106						
ANR	7695321	Symbol	J2K_MAXBANDS		7695106						
ANR	7695322	Symbol	tccp2 -> stepsizes [ bandno ] . expn		7695106						
ANR	7695323	Symbol	tccp1 -> stepsizes [ 0 ] . mant		7695106						
ANR	7695324	Symbol	tccp2 -> stepsizes [ 0 ] . expn		7695106						
ANR	7695325	Symbol	tccp1 -> stepsizes [ bandno ] . mant		7695106						
ANR	7695326	Symbol	TRUE		7695106						
ANR	7695327	Symbol	* tccp1		7695106						
ANR	7695328	Symbol	bandno		7695106						
ANR	7695329	Symbol	tccp2 -> stepsizes [ 0 ] . mant		7695106						
ANR	7695330	Symbol	tccp2 -> qntsty		7695106						
ANR	7695331	Symbol	* * tccp1		7695106						
ANR	7695332	Symbol	tccp1 -> stepsizes [ 0 ] . expn		7695106						
ANR	7695333	Symbol	FALSE		7695106						
ANR	7695334	Symbol	* * tccp2		7695106						
ANR	7695335	Function	xml_out_frame_rgn	2179:0:100037:101706							
ANR	7695336	FunctionDef	"xml_out_frame_rgn (FILE * xmlout , opj_tcp_t * tcp , int numcomps)"		7695335	0					
ANR	7695337	CompoundStatement		2180:0:100104:101706	7695335	0					
ANR	7695338	IdentifierDeclStatement	"int compno , SPrgn ;"	2181:4:100110:100127	7695335	0	True				
ANR	7695339	IdentifierDecl	compno		7695335	0					
ANR	7695340	IdentifierDeclType	int		7695335	0					
ANR	7695341	Identifier	compno		7695335	1					
ANR	7695342	IdentifierDecl	SPrgn		7695335	1					
ANR	7695343	IdentifierDeclType	int		7695335	0					
ANR	7695344	Identifier	SPrgn		7695335	1					
ANR	7695345	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2183:4:100213:100245	7695335	1	True				
ANR	7695346	IdentifierDecl	"spaces [ 13 ] = ""            """		7695335	0					
ANR	7695347	IdentifierDeclType	char [ 13 ]		7695335	0					
ANR	7695348	Identifier	spaces		7695335	1					
ANR	7695349	PrimaryExpression	13		7695335	2					
ANR	7695350	AssignmentExpression	"spaces [ 13 ] = ""            """		7695335	3		=			
ANR	7695351	Identifier	spaces		7695335	0					
ANR	7695352	PrimaryExpression	"""            """		7695335	1					
ANR	7695353	IdentifierDeclStatement	char * s = spaces ;	2184:4:100278:100294	7695335	2	True				
ANR	7695354	IdentifierDecl	* s = spaces		7695335	0					
ANR	7695355	IdentifierDeclType	char *		7695335	0					
ANR	7695356	Identifier	s		7695335	1					
ANR	7695357	AssignmentExpression	* s = spaces		7695335	2		=			
ANR	7695358	Identifier	spaces		7695335	0					
ANR	7695359	Identifier	spaces		7695335	1					
ANR	7695360	IfStatement	if ( tcp == j2k_default_tcp )		7695335	3					
ANR	7695361	Condition	tcp == j2k_default_tcp	2185:8:100304:100325	7695335	0	True				
ANR	7695362	EqualityExpression	tcp == j2k_default_tcp		7695335	0		==			
ANR	7695363	Identifier	tcp		7695335	0					
ANR	7695364	Identifier	j2k_default_tcp		7695335	1					
ANR	7695365	CompoundStatement		6:32:223:223	7695335	1					
ANR	7695366	ExpressionStatement	s ++	2186:8:100338:100341	7695335	0	True				
ANR	7695367	PostIncDecOperationExpression	s ++		7695335	0					
ANR	7695368	Identifier	s		7695335	0					
ANR	7695369	IncDec	++		7695335	1					
ANR	7695370	ExpressionStatement	s ++	2187:8:100351:100354	7695335	1	True				
ANR	7695371	PostIncDecOperationExpression	s ++		7695335	0					
ANR	7695372	Identifier	s		7695335	0					
ANR	7695373	IncDec	++		7695335	1					
ANR	7695374	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		7695335	4					
ANR	7695375	ForInit	compno = 0 ;	2190:9:100409:100419	7695335	0	True				
ANR	7695376	AssignmentExpression	compno = 0		7695335	0		=			
ANR	7695377	Identifier	compno		7695335	0					
ANR	7695378	PrimaryExpression	0		7695335	1					
ANR	7695379	Condition	compno < numcomps	2190:21:100421:100437	7695335	1	True				
ANR	7695380	RelationalExpression	compno < numcomps		7695335	0		<			
ANR	7695381	Identifier	compno		7695335	0					
ANR	7695382	Identifier	numcomps		7695335	1					
ANR	7695383	PostIncDecOperationExpression	compno ++	2190:40:100440:100447	7695335	2	True				
ANR	7695384	Identifier	compno		7695335	0					
ANR	7695385	IncDec	++		7695335	1					
ANR	7695386	CompoundStatement		11:50:345:345	7695335	3					
ANR	7695387	ExpressionStatement	SPrgn = tcp -> tccps [ compno ] . roishift	2191:8:100460:100495	7695335	0	True				
ANR	7695388	AssignmentExpression	SPrgn = tcp -> tccps [ compno ] . roishift		7695335	0		=			
ANR	7695389	Identifier	SPrgn		7695335	0					
ANR	7695390	MemberAccess	tcp -> tccps [ compno ] . roishift		7695335	1					
ANR	7695391	ArrayIndexing	tcp -> tccps [ compno ]		7695335	0					
ANR	7695392	PtrMemberAccess	tcp -> tccps		7695335	0					
ANR	7695393	Identifier	tcp		7695335	0					
ANR	7695394	Identifier	tccps		7695335	1					
ANR	7695395	Identifier	compno		7695335	1					
ANR	7695396	Identifier	roishift		7695335	1					
ANR	7695397	IfStatement	if ( SPrgn == 0 )		7695335	1					
ANR	7695398	Condition	SPrgn == 0	2192:12:100532:100541	7695335	0	True				
ANR	7695399	EqualityExpression	SPrgn == 0		7695335	0		==			
ANR	7695400	Identifier	SPrgn		7695335	0					
ANR	7695401	PrimaryExpression	0		7695335	1					
ANR	7695402	CompoundStatement		13:24:439:439	7695335	1					
ANR	7695403	ContinueStatement	continue ;	2193:12:100558:100566	7695335	0	True				
ANR	7695404	ExpressionStatement	"fprintf ( xmlout , ""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"" , s )"	2196:8:100615:100693	7695335	2	True				
ANR	7695405	CallExpression	"fprintf ( xmlout , ""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"" , s )"		7695335	0					
ANR	7695406	Callee	fprintf		7695335	0					
ANR	7695407	Identifier	fprintf		7695335	0					
ANR	7695408	ArgumentList	xmlout		7695335	1					
ANR	7695409	Argument	xmlout		7695335	0					
ANR	7695410	Identifier	xmlout		7695335	0					
ANR	7695411	Argument	"""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"""		7695335	1					
ANR	7695412	PrimaryExpression	"""%s<RegionOfInterest Marker=\\""RGN\\"">\\n"""		7695335	0					
ANR	7695413	Argument	s		7695335	2					
ANR	7695414	Identifier	s		7695335	0					
ANR	7695415	IfStatement	if ( notes )		7695335	3					
ANR	7695416	Condition	notes	2198:12:100762:100766	7695335	0	True				
ANR	7695417	Identifier	notes		7695335	0					
ANR	7695418	CompoundStatement		19:19:664:664	7695335	1					
ANR	7695419	ExpressionStatement	"fprintf ( xmlout , ""%s<!-- See Crgn below for zero-based component number. -->\\n"" , s )"	2199:12:100783:100886	7695335	0	True				
ANR	7695420	CallExpression	"fprintf ( xmlout , ""%s<!-- See Crgn below for zero-based component number. -->\\n"" , s )"		7695335	0					
ANR	7695421	Callee	fprintf		7695335	0					
ANR	7695422	Identifier	fprintf		7695335	0					
ANR	7695423	ArgumentList	xmlout		7695335	1					
ANR	7695424	Argument	xmlout		7695335	0					
ANR	7695425	Identifier	xmlout		7695335	0					
ANR	7695426	Argument	"""%s<!-- See Crgn below for zero-based component number. -->\\n"""		7695335	1					
ANR	7695427	PrimaryExpression	"""%s<!-- See Crgn below for zero-based component number. -->\\n"""		7695335	0					
ANR	7695428	Argument	s		7695335	2					
ANR	7695429	Identifier	s		7695335	0					
ANR	7695430	ExpressionStatement	"fprintf ( xmlout , ""%s  <Srgn>0</Srgn>\\n"" , s )"	2203:8:100954:100999	7695335	4	True				
ANR	7695431	CallExpression	"fprintf ( xmlout , ""%s  <Srgn>0</Srgn>\\n"" , s )"		7695335	0					
ANR	7695432	Callee	fprintf		7695335	0					
ANR	7695433	Identifier	fprintf		7695335	0					
ANR	7695434	ArgumentList	xmlout		7695335	1					
ANR	7695435	Argument	xmlout		7695335	0					
ANR	7695436	Identifier	xmlout		7695335	0					
ANR	7695437	Argument	"""%s  <Srgn>0</Srgn>\\n"""		7695335	1					
ANR	7695438	PrimaryExpression	"""%s  <Srgn>0</Srgn>\\n"""		7695335	0					
ANR	7695439	Argument	s		7695335	2					
ANR	7695440	Identifier	s		7695335	0					
ANR	7695441	IfStatement	if ( notes )		7695335	5					
ANR	7695442	Condition	notes	2204:12:101026:101030	7695335	0	True				
ANR	7695443	Identifier	notes		7695335	0					
ANR	7695444	CompoundStatement		25:19:928:928	7695335	1					
ANR	7695445	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"" , s )"	2205:12:101047:101191	7695335	0	True				
ANR	7695446	CallExpression	"fprintf ( xmlout , ""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"" , s )"		7695335	0					
ANR	7695447	Callee	fprintf		7695335	0					
ANR	7695448	Identifier	fprintf		7695335	0					
ANR	7695449	ArgumentList	xmlout		7695335	1					
ANR	7695450	Argument	xmlout		7695335	0					
ANR	7695451	Identifier	xmlout		7695335	0					
ANR	7695452	Argument	"""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"""		7695335	1					
ANR	7695453	PrimaryExpression	"""%s  <!-- Srgn is ROI style.  Only style=0 defined: Implicit ROI (max. shift) -->\\n"""		7695335	0					
ANR	7695454	Argument	s		7695335	2					
ANR	7695455	Identifier	s		7695335	0					
ANR	7695456	ExpressionStatement	"fprintf ( xmlout , ""%s  <Crgn>%d</Crgn>\\n"" , s , compno )"	2209:8:101211:101265	7695335	6	True				
ANR	7695457	CallExpression	"fprintf ( xmlout , ""%s  <Crgn>%d</Crgn>\\n"" , s , compno )"		7695335	0					
ANR	7695458	Callee	fprintf		7695335	0					
ANR	7695459	Identifier	fprintf		7695335	0					
ANR	7695460	ArgumentList	xmlout		7695335	1					
ANR	7695461	Argument	xmlout		7695335	0					
ANR	7695462	Identifier	xmlout		7695335	0					
ANR	7695463	Argument	"""%s  <Crgn>%d</Crgn>\\n"""		7695335	1					
ANR	7695464	PrimaryExpression	"""%s  <Crgn>%d</Crgn>\\n"""		7695335	0					
ANR	7695465	Argument	s		7695335	2					
ANR	7695466	Identifier	s		7695335	0					
ANR	7695467	Argument	compno		7695335	3					
ANR	7695468	Identifier	compno		7695335	0					
ANR	7695469	ExpressionStatement	"fprintf ( xmlout , ""%s  <SPrgn>%d</SPrgn>\\n"" , s , SPrgn )"	2210:8:101294:101349	7695335	7	True				
ANR	7695470	CallExpression	"fprintf ( xmlout , ""%s  <SPrgn>%d</SPrgn>\\n"" , s , SPrgn )"		7695335	0					
ANR	7695471	Callee	fprintf		7695335	0					
ANR	7695472	Identifier	fprintf		7695335	0					
ANR	7695473	ArgumentList	xmlout		7695335	1					
ANR	7695474	Argument	xmlout		7695335	0					
ANR	7695475	Identifier	xmlout		7695335	0					
ANR	7695476	Argument	"""%s  <SPrgn>%d</SPrgn>\\n"""		7695335	1					
ANR	7695477	PrimaryExpression	"""%s  <SPrgn>%d</SPrgn>\\n"""		7695335	0					
ANR	7695478	Argument	s		7695335	2					
ANR	7695479	Identifier	s		7695335	0					
ANR	7695480	Argument	SPrgn		7695335	3					
ANR	7695481	Identifier	SPrgn		7695335	0					
ANR	7695482	IfStatement	if ( notes )		7695335	8					
ANR	7695483	Condition	notes	2211:12:101376:101380	7695335	0	True				
ANR	7695484	Identifier	notes		7695335	0					
ANR	7695485	CompoundStatement		32:19:1278:1278	7695335	1					
ANR	7695486	ExpressionStatement	"fprintf ( xmlout , ""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"" , s )"	2212:12:101397:101562	7695335	0	True				
ANR	7695487	CallExpression	"fprintf ( xmlout , ""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"" , s )"		7695335	0					
ANR	7695488	Callee	fprintf		7695335	0					
ANR	7695489	Identifier	fprintf		7695335	0					
ANR	7695490	ArgumentList	xmlout		7695335	1					
ANR	7695491	Argument	xmlout		7695335	0					
ANR	7695492	Identifier	xmlout		7695335	0					
ANR	7695493	Argument	"""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"""		7695335	1					
ANR	7695494	PrimaryExpression	"""%s  <!-- SPrgn is implicit ROI shift, i.e., binary shifting of ROI coefficients above background. -->\\n"""		7695335	0					
ANR	7695495	Argument	s		7695335	2					
ANR	7695496	Identifier	s		7695335	0					
ANR	7695497	ExpressionStatement	"fprintf ( xmlout , ""</RegionOfInterest\\n"" , s )"	2216:8:101582:101643	7695335	9	True				
ANR	7695498	CallExpression	"fprintf ( xmlout , ""</RegionOfInterest\\n"" , s )"		7695335	0					
ANR	7695499	Callee	fprintf		7695335	0					
ANR	7695500	Identifier	fprintf		7695335	0					
ANR	7695501	ArgumentList	xmlout		7695335	1					
ANR	7695502	Argument	xmlout		7695335	0					
ANR	7695503	Identifier	xmlout		7695335	0					
ANR	7695504	Argument	"""</RegionOfInterest\\n"""		7695335	1					
ANR	7695505	PrimaryExpression	"""</RegionOfInterest\\n"""		7695335	0					
ANR	7695506	Argument	s		7695335	2					
ANR	7695507	Identifier	s		7695335	0					
ANR	7695508	ReturnType	void		7695335	1					
ANR	7695509	Identifier	xml_out_frame_rgn		7695335	2					
ANR	7695510	ParameterList	"FILE * xmlout , opj_tcp_t * tcp , int numcomps"		7695335	3					
ANR	7695511	Parameter	FILE * xmlout	2179:23:100060:100071	7695335	0	True				
ANR	7695512	ParameterType	FILE *		7695335	0					
ANR	7695513	Identifier	xmlout		7695335	1					
ANR	7695514	Parameter	opj_tcp_t * tcp	2179:37:100074:100087	7695335	1	True				
ANR	7695515	ParameterType	opj_tcp_t *		7695335	0					
ANR	7695516	Identifier	tcp		7695335	1					
ANR	7695517	Parameter	int numcomps	2179:53:100090:100101	7695335	2	True				
ANR	7695518	ParameterType	int		7695335	0					
ANR	7695519	Identifier	numcomps		7695335	1					
ANR	7695520	CFGEntryNode	ENTRY		7695335		True				
ANR	7695521	CFGExitNode	EXIT		7695335		True				
ANR	7695522	Symbol	tcp		7695335						
ANR	7695523	Symbol	notes		7695335						
ANR	7695524	Symbol	tcp -> tccps		7695335						
ANR	7695525	Symbol	SPrgn		7695335						
ANR	7695526	Symbol	* tcp		7695335						
ANR	7695527	Symbol	xmlout		7695335						
ANR	7695528	Symbol	compno		7695335						
ANR	7695529	Symbol	* compno		7695335						
ANR	7695530	Symbol	j2k_default_tcp		7695335						
ANR	7695531	Symbol	s		7695335						
ANR	7695532	Symbol	* * tcp		7695335						
ANR	7695533	Symbol	spaces		7695335						
ANR	7695534	Symbol	* tcp -> tccps		7695335						
ANR	7695535	Symbol	tcp -> tccps [ compno ] . roishift		7695335						
ANR	7695536	Symbol	numcomps		7695335						
ANR	7695537	Function	xml_out_frame_poc	2223:0:101730:104925							
ANR	7695538	FunctionDef	"xml_out_frame_poc (FILE * xmlout , opj_tcp_t * tcp)"		7695537	0					
ANR	7695539	CompoundStatement		2225:0:101839:104925	7695537	0					
ANR	7695540	IdentifierDeclStatement	int i ;	2227:4:101878:101883	7695537	0	True				
ANR	7695541	IdentifierDecl	i		7695537	0					
ANR	7695542	IdentifierDeclType	int		7695537	0					
ANR	7695543	Identifier	i		7695537	1					
ANR	7695544	IdentifierDeclStatement	opj_poc_t * poc ;	2228:4:101889:101903	7695537	1	True				
ANR	7695545	IdentifierDecl	* poc		7695537	0					
ANR	7695546	IdentifierDeclType	opj_poc_t *		7695537	0					
ANR	7695547	Identifier	poc		7695537	1					
ANR	7695548	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2229:4:101909:101941	7695537	2	True				
ANR	7695549	IdentifierDecl	"spaces [ 13 ] = ""            """		7695537	0					
ANR	7695550	IdentifierDeclType	char [ 13 ]		7695537	0					
ANR	7695551	Identifier	spaces		7695537	1					
ANR	7695552	PrimaryExpression	13		7695537	2					
ANR	7695553	AssignmentExpression	"spaces [ 13 ] = ""            """		7695537	3		=			
ANR	7695554	Identifier	spaces		7695537	0					
ANR	7695555	PrimaryExpression	"""            """		7695537	1					
ANR	7695556	IdentifierDeclStatement	char * s = spaces ;	2230:4:101974:101990	7695537	3	True				
ANR	7695557	IdentifierDecl	* s = spaces		7695537	0					
ANR	7695558	IdentifierDeclType	char *		7695537	0					
ANR	7695559	Identifier	s		7695537	1					
ANR	7695560	AssignmentExpression	* s = spaces		7695537	2		=			
ANR	7695561	Identifier	spaces		7695537	0					
ANR	7695562	Identifier	spaces		7695537	1					
ANR	7695563	IfStatement	if ( tcp == j2k_default_tcp )		7695537	4					
ANR	7695564	Condition	tcp == j2k_default_tcp	2231:8:102000:102021	7695537	0	True				
ANR	7695565	EqualityExpression	tcp == j2k_default_tcp		7695537	0		==			
ANR	7695566	Identifier	tcp		7695537	0					
ANR	7695567	Identifier	j2k_default_tcp		7695537	1					
ANR	7695568	CompoundStatement		7:32:184:184	7695537	1					
ANR	7695569	ExpressionStatement	s ++	2232:8:102034:102037	7695537	0	True				
ANR	7695570	PostIncDecOperationExpression	s ++		7695537	0					
ANR	7695571	Identifier	s		7695537	0					
ANR	7695572	IncDec	++		7695537	1					
ANR	7695573	ExpressionStatement	s ++	2233:8:102047:102050	7695537	1	True				
ANR	7695574	PostIncDecOperationExpression	s ++		7695537	0					
ANR	7695575	Identifier	s		7695537	0					
ANR	7695576	IncDec	++		7695537	1					
ANR	7695577	IfStatement	if ( tcp -> POC != 1 )		7695537	5					
ANR	7695578	Condition	tcp -> POC != 1	2236:8:102104:102116	7695537	0	True				
ANR	7695579	EqualityExpression	tcp -> POC != 1		7695537	0		!=			
ANR	7695580	PtrMemberAccess	tcp -> POC		7695537	0					
ANR	7695581	Identifier	tcp		7695537	0					
ANR	7695582	Identifier	POC		7695537	1					
ANR	7695583	PrimaryExpression	1		7695537	1					
ANR	7695584	CompoundStatement		12:23:279:279	7695537	1					
ANR	7695585	ReturnStatement	return ;	2237:8:102129:102135	7695537	0	True				
ANR	7695586	ExpressionStatement	"fprintf ( xmlout , ""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"" , s )"	2240:4:102169:102249	7695537	6	True				
ANR	7695587	CallExpression	"fprintf ( xmlout , ""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"" , s )"		7695537	0					
ANR	7695588	Callee	fprintf		7695537	0					
ANR	7695589	Identifier	fprintf		7695537	0					
ANR	7695590	ArgumentList	xmlout		7695537	1					
ANR	7695591	Argument	xmlout		7695537	0					
ANR	7695592	Identifier	xmlout		7695537	0					
ANR	7695593	Argument	"""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"""		7695537	1					
ANR	7695594	PrimaryExpression	"""%s<ProgressionOrderChange Marker=\\""POC\\"">\\n"""		7695537	0					
ANR	7695595	Argument	s		7695537	2					
ANR	7695596	Identifier	s		7695537	0					
ANR	7695597	ForStatement	for ( i = 0 ; i < tcp -> numpocs ; i ++ )		7695537	7					
ANR	7695598	ForInit	i = 0 ;	2246:9:102548:102553	7695537	0	True				
ANR	7695599	AssignmentExpression	i = 0		7695537	0		=			
ANR	7695600	Identifier	i		7695537	0					
ANR	7695601	PrimaryExpression	0		7695537	1					
ANR	7695602	Condition	i < tcp -> numpocs	2246:16:102555:102570	7695537	1	True				
ANR	7695603	RelationalExpression	i < tcp -> numpocs		7695537	0		<			
ANR	7695604	Identifier	i		7695537	0					
ANR	7695605	PtrMemberAccess	tcp -> numpocs		7695537	1					
ANR	7695606	Identifier	tcp		7695537	0					
ANR	7695607	Identifier	numpocs		7695537	1					
ANR	7695608	PostIncDecOperationExpression	i ++	2246:34:102573:102575	7695537	2	True				
ANR	7695609	Identifier	i		7695537	0					
ANR	7695610	IncDec	++		7695537	1					
ANR	7695611	CompoundStatement		22:39:738:738	7695537	3					
ANR	7695612	ExpressionStatement	poc = & tcp -> pocs [ i ]	2247:8:102588:102607	7695537	0	True				
ANR	7695613	AssignmentExpression	poc = & tcp -> pocs [ i ]		7695537	0		=			
ANR	7695614	Identifier	poc		7695537	0					
ANR	7695615	UnaryOperationExpression	& tcp -> pocs [ i ]		7695537	1					
ANR	7695616	UnaryOperator	&		7695537	0					
ANR	7695617	ArrayIndexing	tcp -> pocs [ i ]		7695537	1					
ANR	7695618	PtrMemberAccess	tcp -> pocs		7695537	0					
ANR	7695619	Identifier	tcp		7695537	0					
ANR	7695620	Identifier	pocs		7695537	1					
ANR	7695621	Identifier	i		7695537	1					
ANR	7695622	ExpressionStatement	"fprintf ( xmlout , ""%s  <Progression Num=\\""%d\\"">\\n"" , s , i + 1 )"	2248:8:102617:102677	7695537	1	True				
ANR	7695623	CallExpression	"fprintf ( xmlout , ""%s  <Progression Num=\\""%d\\"">\\n"" , s , i + 1 )"		7695537	0					
ANR	7695624	Callee	fprintf		7695537	0					
ANR	7695625	Identifier	fprintf		7695537	0					
ANR	7695626	ArgumentList	xmlout		7695537	1					
ANR	7695627	Argument	xmlout		7695537	0					
ANR	7695628	Identifier	xmlout		7695537	0					
ANR	7695629	Argument	"""%s  <Progression Num=\\""%d\\"">\\n"""		7695537	1					
ANR	7695630	PrimaryExpression	"""%s  <Progression Num=\\""%d\\"">\\n"""		7695537	0					
ANR	7695631	Argument	s		7695537	2					
ANR	7695632	Identifier	s		7695537	0					
ANR	7695633	Argument	i + 1		7695537	3					
ANR	7695634	AdditiveExpression	i + 1		7695537	0		+			
ANR	7695635	Identifier	i		7695537	0					
ANR	7695636	PrimaryExpression	1		7695537	1					
ANR	7695637	ExpressionStatement	"fprintf ( xmlout , ""%S    <RSpoc>%d</RSpoc>\\n"" , s , poc -> resno0 )"	2249:8:102687:102764	7695537	2	True				
ANR	7695638	CallExpression	"fprintf ( xmlout , ""%S    <RSpoc>%d</RSpoc>\\n"" , s , poc -> resno0 )"		7695537	0					
ANR	7695639	Callee	fprintf		7695537	0					
ANR	7695640	Identifier	fprintf		7695537	0					
ANR	7695641	ArgumentList	xmlout		7695537	1					
ANR	7695642	Argument	xmlout		7695537	0					
ANR	7695643	Identifier	xmlout		7695537	0					
ANR	7695644	Argument	"""%S    <RSpoc>%d</RSpoc>\\n"""		7695537	1					
ANR	7695645	PrimaryExpression	"""%S    <RSpoc>%d</RSpoc>\\n"""		7695537	0					
ANR	7695646	Argument	s		7695537	2					
ANR	7695647	Identifier	s		7695537	0					
ANR	7695648	Argument	poc -> resno0		7695537	3					
ANR	7695649	PtrMemberAccess	poc -> resno0		7695537	0					
ANR	7695650	Identifier	poc		7695537	0					
ANR	7695651	Identifier	resno0		7695537	1					
ANR	7695652	IfStatement	if ( notes )		7695537	3					
ANR	7695653	Condition	notes	2251:12:102801:102805	7695537	0	True				
ANR	7695654	Identifier	notes		7695537	0					
ANR	7695655	CompoundStatement		27:19:968:968	7695537	1					
ANR	7695656	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"" , s )"	2252:12:102822:102973	7695537	0	True				
ANR	7695657	CallExpression	"fprintf ( xmlout , ""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"" , s )"		7695537	0					
ANR	7695658	Callee	fprintf		7695537	0					
ANR	7695659	Identifier	fprintf		7695537	0					
ANR	7695660	ArgumentList	xmlout		7695537	1					
ANR	7695661	Argument	xmlout		7695537	0					
ANR	7695662	Identifier	xmlout		7695537	0					
ANR	7695663	Argument	"""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"""		7695537	1					
ANR	7695664	PrimaryExpression	"""%s    <!-- Resolution level index (inclusive) for progression start. Range: 0 to 33 -->\\n"""		7695537	0					
ANR	7695665	Argument	s		7695537	2					
ANR	7695666	Identifier	s		7695537	0					
ANR	7695667	ExpressionStatement	"fprintf ( xmlout , ""%s    <CSpoc>%d</CSpoc>\\n"" , s , poc -> compno0 )"	2256:8:102993:103071	7695537	4	True				
ANR	7695668	CallExpression	"fprintf ( xmlout , ""%s    <CSpoc>%d</CSpoc>\\n"" , s , poc -> compno0 )"		7695537	0					
ANR	7695669	Callee	fprintf		7695537	0					
ANR	7695670	Identifier	fprintf		7695537	0					
ANR	7695671	ArgumentList	xmlout		7695537	1					
ANR	7695672	Argument	xmlout		7695537	0					
ANR	7695673	Identifier	xmlout		7695537	0					
ANR	7695674	Argument	"""%s    <CSpoc>%d</CSpoc>\\n"""		7695537	1					
ANR	7695675	PrimaryExpression	"""%s    <CSpoc>%d</CSpoc>\\n"""		7695537	0					
ANR	7695676	Argument	s		7695537	2					
ANR	7695677	Identifier	s		7695537	0					
ANR	7695678	Argument	poc -> compno0		7695537	3					
ANR	7695679	PtrMemberAccess	poc -> compno0		7695537	0					
ANR	7695680	Identifier	poc		7695537	0					
ANR	7695681	Identifier	compno0		7695537	1					
ANR	7695682	IfStatement	if ( notes )		7695537	5					
ANR	7695683	Condition	notes	2258:12:103143:103147	7695537	0	True				
ANR	7695684	Identifier	notes		7695537	0					
ANR	7695685	CompoundStatement		34:19:1310:1310	7695537	1					
ANR	7695686	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Component index (inclusive) for progression start. -->\\n"" , s )"	2259:12:103164:103273	7695537	0	True				
ANR	7695687	CallExpression	"fprintf ( xmlout , ""%s    <!-- Component index (inclusive) for progression start. -->\\n"" , s )"		7695537	0					
ANR	7695688	Callee	fprintf		7695537	0					
ANR	7695689	Identifier	fprintf		7695537	0					
ANR	7695690	ArgumentList	xmlout		7695537	1					
ANR	7695691	Argument	xmlout		7695537	0					
ANR	7695692	Identifier	xmlout		7695537	0					
ANR	7695693	Argument	"""%s    <!-- Component index (inclusive) for progression start. -->\\n"""		7695537	1					
ANR	7695694	PrimaryExpression	"""%s    <!-- Component index (inclusive) for progression start. -->\\n"""		7695537	0					
ANR	7695695	Argument	s		7695537	2					
ANR	7695696	Identifier	s		7695537	0					
ANR	7695697	ExpressionStatement	"fprintf ( xmlout , ""%s    <LYEpoc>%d</LYEpoc>\\n"" , s , poc -> layno1 )"	2262:8:103293:103372	7695537	6	True				
ANR	7695698	CallExpression	"fprintf ( xmlout , ""%s    <LYEpoc>%d</LYEpoc>\\n"" , s , poc -> layno1 )"		7695537	0					
ANR	7695699	Callee	fprintf		7695537	0					
ANR	7695700	Identifier	fprintf		7695537	0					
ANR	7695701	ArgumentList	xmlout		7695537	1					
ANR	7695702	Argument	xmlout		7695537	0					
ANR	7695703	Identifier	xmlout		7695537	0					
ANR	7695704	Argument	"""%s    <LYEpoc>%d</LYEpoc>\\n"""		7695537	1					
ANR	7695705	PrimaryExpression	"""%s    <LYEpoc>%d</LYEpoc>\\n"""		7695537	0					
ANR	7695706	Argument	s		7695537	2					
ANR	7695707	Identifier	s		7695537	0					
ANR	7695708	Argument	poc -> layno1		7695537	3					
ANR	7695709	PtrMemberAccess	poc -> layno1		7695537	0					
ANR	7695710	Identifier	poc		7695537	0					
ANR	7695711	Identifier	layno1		7695537	1					
ANR	7695712	IfStatement	if ( notes )		7695537	7					
ANR	7695713	Condition	notes	2264:12:103453:103457	7695537	0	True				
ANR	7695714	Identifier	notes		7695537	0					
ANR	7695715	CompoundStatement		40:19:1620:1620	7695537	1					
ANR	7695716	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Layer index (exclusive) for progression end. -->\\n"" , s )"	2265:12:103474:103577	7695537	0	True				
ANR	7695717	CallExpression	"fprintf ( xmlout , ""%s    <!-- Layer index (exclusive) for progression end. -->\\n"" , s )"		7695537	0					
ANR	7695718	Callee	fprintf		7695537	0					
ANR	7695719	Identifier	fprintf		7695537	0					
ANR	7695720	ArgumentList	xmlout		7695537	1					
ANR	7695721	Argument	xmlout		7695537	0					
ANR	7695722	Identifier	xmlout		7695537	0					
ANR	7695723	Argument	"""%s    <!-- Layer index (exclusive) for progression end. -->\\n"""		7695537	1					
ANR	7695724	PrimaryExpression	"""%s    <!-- Layer index (exclusive) for progression end. -->\\n"""		7695537	0					
ANR	7695725	Argument	s		7695537	2					
ANR	7695726	Identifier	s		7695537	0					
ANR	7695727	ExpressionStatement	"fprintf ( xmlout , ""%s    <REpoc>%d</REpoc>\\n"" , s , poc -> resno1 )"	2268:8:103597:103674	7695537	8	True				
ANR	7695728	CallExpression	"fprintf ( xmlout , ""%s    <REpoc>%d</REpoc>\\n"" , s , poc -> resno1 )"		7695537	0					
ANR	7695729	Callee	fprintf		7695537	0					
ANR	7695730	Identifier	fprintf		7695537	0					
ANR	7695731	ArgumentList	xmlout		7695537	1					
ANR	7695732	Argument	xmlout		7695537	0					
ANR	7695733	Identifier	xmlout		7695537	0					
ANR	7695734	Argument	"""%s    <REpoc>%d</REpoc>\\n"""		7695537	1					
ANR	7695735	PrimaryExpression	"""%s    <REpoc>%d</REpoc>\\n"""		7695537	0					
ANR	7695736	Argument	s		7695537	2					
ANR	7695737	Identifier	s		7695537	0					
ANR	7695738	Argument	poc -> resno1		7695537	3					
ANR	7695739	PtrMemberAccess	poc -> resno1		7695537	0					
ANR	7695740	Identifier	poc		7695537	0					
ANR	7695741	Identifier	resno1		7695537	1					
ANR	7695742	IfStatement	if ( notes )		7695537	9					
ANR	7695743	Condition	notes	2270:12:103751:103755	7695537	0	True				
ANR	7695744	Identifier	notes		7695537	0					
ANR	7695745	CompoundStatement		46:19:1918:1918	7695537	1					
ANR	7695746	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"" , s )"	2271:12:103772:103925	7695537	0	True				
ANR	7695747	CallExpression	"fprintf ( xmlout , ""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"" , s )"		7695537	0					
ANR	7695748	Callee	fprintf		7695537	0					
ANR	7695749	Identifier	fprintf		7695537	0					
ANR	7695750	ArgumentList	xmlout		7695537	1					
ANR	7695751	Argument	xmlout		7695537	0					
ANR	7695752	Identifier	xmlout		7695537	0					
ANR	7695753	Argument	"""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"""		7695537	1					
ANR	7695754	PrimaryExpression	"""%s    <!-- Resolution level index (exclusive) for progression end. Range: RSpoc to 33 -->\\n"""		7695537	0					
ANR	7695755	Argument	s		7695537	2					
ANR	7695756	Identifier	s		7695537	0					
ANR	7695757	ExpressionStatement	"fprintf ( xmlout , ""%s    <CEpoc>%d</CEpoc>\\n"" , s , poc -> compno1 )"	2275:8:103945:104023	7695537	10	True				
ANR	7695758	CallExpression	"fprintf ( xmlout , ""%s    <CEpoc>%d</CEpoc>\\n"" , s , poc -> compno1 )"		7695537	0					
ANR	7695759	Callee	fprintf		7695537	0					
ANR	7695760	Identifier	fprintf		7695537	0					
ANR	7695761	ArgumentList	xmlout		7695537	1					
ANR	7695762	Argument	xmlout		7695537	0					
ANR	7695763	Identifier	xmlout		7695537	0					
ANR	7695764	Argument	"""%s    <CEpoc>%d</CEpoc>\\n"""		7695537	1					
ANR	7695765	PrimaryExpression	"""%s    <CEpoc>%d</CEpoc>\\n"""		7695537	0					
ANR	7695766	Argument	s		7695537	2					
ANR	7695767	Identifier	s		7695537	0					
ANR	7695768	Argument	poc -> compno1		7695537	3					
ANR	7695769	PtrMemberAccess	poc -> compno1		7695537	0					
ANR	7695770	Identifier	poc		7695537	0					
ANR	7695771	Identifier	compno1		7695537	1					
ANR	7695772	IfStatement	if ( notes )		7695537	11					
ANR	7695773	Condition	notes	2277:12:104127:104131	7695537	0	True				
ANR	7695774	Identifier	notes		7695537	0					
ANR	7695775	CompoundStatement		53:19:2294:2294	7695537	1					
ANR	7695776	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"" , s )"	2278:12:104148:104291	7695537	0	True				
ANR	7695777	CallExpression	"fprintf ( xmlout , ""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"" , s )"		7695537	0					
ANR	7695778	Callee	fprintf		7695537	0					
ANR	7695779	Identifier	fprintf		7695537	0					
ANR	7695780	ArgumentList	xmlout		7695537	1					
ANR	7695781	Argument	xmlout		7695537	0					
ANR	7695782	Identifier	xmlout		7695537	0					
ANR	7695783	Argument	"""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"""		7695537	1					
ANR	7695784	PrimaryExpression	"""%s    <!-- Component index (exclusive) for progression end.  Minimum: CSpoc -->\\n"""		7695537	0					
ANR	7695785	Argument	s		7695537	2					
ANR	7695786	Identifier	s		7695537	0					
ANR	7695787	ExpressionStatement	"fprintf ( xmlout , ""%s    <Ppoc>%d</Ppoc>\\n"" , s , poc -> prg )"	2282:8:104311:104367	7695537	12	True				
ANR	7695788	CallExpression	"fprintf ( xmlout , ""%s    <Ppoc>%d</Ppoc>\\n"" , s , poc -> prg )"		7695537	0					
ANR	7695789	Callee	fprintf		7695537	0					
ANR	7695790	Identifier	fprintf		7695537	0					
ANR	7695791	ArgumentList	xmlout		7695537	1					
ANR	7695792	Argument	xmlout		7695537	0					
ANR	7695793	Identifier	xmlout		7695537	0					
ANR	7695794	Argument	"""%s    <Ppoc>%d</Ppoc>\\n"""		7695537	1					
ANR	7695795	PrimaryExpression	"""%s    <Ppoc>%d</Ppoc>\\n"""		7695537	0					
ANR	7695796	Argument	s		7695537	2					
ANR	7695797	Identifier	s		7695537	0					
ANR	7695798	Argument	poc -> prg		7695537	3					
ANR	7695799	PtrMemberAccess	poc -> prg		7695537	0					
ANR	7695800	Identifier	poc		7695537	0					
ANR	7695801	Identifier	prg		7695537	1					
ANR	7695802	IfStatement	if ( notes )		7695537	13					
ANR	7695803	Condition	notes	2283:12:104401:104405	7695537	0	True				
ANR	7695804	Identifier	notes		7695537	0					
ANR	7695805	CompoundStatement		59:19:2568:2568	7695537	1					
ANR	7695806	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"	2284:12:104422:104498	7695537	0	True				
ANR	7695807	CallExpression	"fprintf ( xmlout , ""%s    <!-- Defined Progression Order Values are: -->\\n"" , s )"		7695537	0					
ANR	7695808	Callee	fprintf		7695537	0					
ANR	7695809	Identifier	fprintf		7695537	0					
ANR	7695810	ArgumentList	xmlout		7695537	1					
ANR	7695811	Argument	xmlout		7695537	0					
ANR	7695812	Identifier	xmlout		7695537	0					
ANR	7695813	Argument	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		7695537	1					
ANR	7695814	PrimaryExpression	"""%s    <!-- Defined Progression Order Values are: -->\\n"""		7695537	0					
ANR	7695815	Argument	s		7695537	2					
ANR	7695816	Identifier	s		7695537	0					
ANR	7695817	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"	2285:12:104512:104619	7695537	1	True				
ANR	7695818	CallExpression	"fprintf ( xmlout , ""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"" , s )"		7695537	0					
ANR	7695819	Callee	fprintf		7695537	0					
ANR	7695820	Identifier	fprintf		7695537	0					
ANR	7695821	ArgumentList	xmlout		7695537	1					
ANR	7695822	Argument	xmlout		7695537	0					
ANR	7695823	Identifier	xmlout		7695537	0					
ANR	7695824	Argument	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		7695537	1					
ANR	7695825	PrimaryExpression	"""%s    <!-- 0 = LRCP; 1 = RLCP; 2 = RPCL; 3 = PCRL; 4 = CPRL -->\\n"""		7695537	0					
ANR	7695826	Argument	s		7695537	2					
ANR	7695827	Identifier	s		7695537	0					
ANR	7695828	ExpressionStatement	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"	2287:12:104633:104795	7695537	2	True				
ANR	7695829	CallExpression	"fprintf ( xmlout , ""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"" , s )"		7695537	0					
ANR	7695830	Callee	fprintf		7695537	0					
ANR	7695831	Identifier	fprintf		7695537	0					
ANR	7695832	ArgumentList	xmlout		7695537	1					
ANR	7695833	Argument	xmlout		7695537	0					
ANR	7695834	Identifier	xmlout		7695537	0					
ANR	7695835	Argument	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		7695537	1					
ANR	7695836	PrimaryExpression	"""%s    <!-- where L = \\""layer\\"", R = \\""resolution level\\"", C = \\""component\\"", P = \\""position\\"". -->\\n"""		7695537	0					
ANR	7695837	Argument	s		7695537	2					
ANR	7695838	Identifier	s		7695537	0					
ANR	7695839	ExpressionStatement	"fprintf ( xmlout , ""%s  </Progression>\\n"" , s )"	2291:8:104815:104858	7695537	14	True				
ANR	7695840	CallExpression	"fprintf ( xmlout , ""%s  </Progression>\\n"" , s )"		7695537	0					
ANR	7695841	Callee	fprintf		7695537	0					
ANR	7695842	Identifier	fprintf		7695537	0					
ANR	7695843	ArgumentList	xmlout		7695537	1					
ANR	7695844	Argument	xmlout		7695537	0					
ANR	7695845	Identifier	xmlout		7695537	0					
ANR	7695846	Argument	"""%s  </Progression>\\n"""		7695537	1					
ANR	7695847	PrimaryExpression	"""%s  </Progression>\\n"""		7695537	0					
ANR	7695848	Argument	s		7695537	2					
ANR	7695849	Identifier	s		7695537	0					
ANR	7695850	ExpressionStatement	"fprintf ( xmlout , ""%s</ProgressionOrderChange\\n"" , s )"	2293:4:104870:104923	7695537	8	True				
ANR	7695851	CallExpression	"fprintf ( xmlout , ""%s</ProgressionOrderChange\\n"" , s )"		7695537	0					
ANR	7695852	Callee	fprintf		7695537	0					
ANR	7695853	Identifier	fprintf		7695537	0					
ANR	7695854	ArgumentList	xmlout		7695537	1					
ANR	7695855	Argument	xmlout		7695537	0					
ANR	7695856	Identifier	xmlout		7695537	0					
ANR	7695857	Argument	"""%s</ProgressionOrderChange\\n"""		7695537	1					
ANR	7695858	PrimaryExpression	"""%s</ProgressionOrderChange\\n"""		7695537	0					
ANR	7695859	Argument	s		7695537	2					
ANR	7695860	Identifier	s		7695537	0					
ANR	7695861	ReturnType	void		7695537	1					
ANR	7695862	Identifier	xml_out_frame_poc		7695537	2					
ANR	7695863	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7695537	3					
ANR	7695864	Parameter	FILE * xmlout	2223:23:101753:101764	7695537	0	True				
ANR	7695865	ParameterType	FILE *		7695537	0					
ANR	7695866	Identifier	xmlout		7695537	1					
ANR	7695867	Parameter	opj_tcp_t * tcp	2224:23:101790:101803	7695537	1	True				
ANR	7695868	ParameterType	opj_tcp_t *		7695537	0					
ANR	7695869	Identifier	tcp		7695537	1					
ANR	7695870	CFGEntryNode	ENTRY		7695537		True				
ANR	7695871	CFGExitNode	EXIT		7695537		True				
ANR	7695872	Symbol	tcp		7695537						
ANR	7695873	Symbol	tcp -> numpocs		7695537						
ANR	7695874	Symbol	notes		7695537						
ANR	7695875	Symbol	poc -> compno1		7695537						
ANR	7695876	Symbol	poc		7695537						
ANR	7695877	Symbol	tcp -> pocs		7695537						
ANR	7695878	Symbol	poc -> compno0		7695537						
ANR	7695879	Symbol	i		7695537						
ANR	7695880	Symbol	* tcp		7695537						
ANR	7695881	Symbol	* poc		7695537						
ANR	7695882	Symbol	xmlout		7695537						
ANR	7695883	Symbol	j2k_default_tcp		7695537						
ANR	7695884	Symbol	s		7695537						
ANR	7695885	Symbol	poc -> layno1		7695537						
ANR	7695886	Symbol	spaces		7695537						
ANR	7695887	Symbol	tcp -> POC		7695537						
ANR	7695888	Symbol	poc -> resno0		7695537						
ANR	7695889	Symbol	poc -> resno1		7695537						
ANR	7695890	Symbol	poc -> prg		7695537						
ANR	7695891	Function	xml_out_frame_ppm	2302:0:105168:107061							
ANR	7695892	FunctionDef	"xml_out_frame_ppm (FILE * xmlout , opj_cp_t * cp)"		7695891	0					
ANR	7695893	CompoundStatement		2304:0:105307:107061	7695891	0					
ANR	7695894	IdentifierDeclStatement	int j ;	2308:4:105503:105508	7695891	0	True				
ANR	7695895	IdentifierDecl	j		7695891	0					
ANR	7695896	IdentifierDeclType	int		7695891	0					
ANR	7695897	Identifier	j		7695891	1					
ANR	7695898	IfStatement	if ( cp -> ppm != 1 )		7695891	1					
ANR	7695899	Condition	cp -> ppm != 1	2310:8:105519:105530	7695891	0	True				
ANR	7695900	EqualityExpression	cp -> ppm != 1		7695891	0		!=			
ANR	7695901	PtrMemberAccess	cp -> ppm		7695891	0					
ANR	7695902	Identifier	cp		7695891	0					
ANR	7695903	Identifier	ppm		7695891	1					
ANR	7695904	PrimaryExpression	1		7695891	1					
ANR	7695905	CompoundStatement		7:22:225:225	7695891	1					
ANR	7695906	ReturnStatement	return ;	2311:8:105543:105549	7695891	0	True				
ANR	7695907	ExpressionStatement	"fprintf ( xmlout , ""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"" )"	2314:4:105629:105718	7695891	2	True				
ANR	7695908	CallExpression	"fprintf ( xmlout , ""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"" )"		7695891	0					
ANR	7695909	Callee	fprintf		7695891	0					
ANR	7695910	Identifier	fprintf		7695891	0					
ANR	7695911	ArgumentList	xmlout		7695891	1					
ANR	7695912	Argument	xmlout		7695891	0					
ANR	7695913	Identifier	xmlout		7695891	0					
ANR	7695914	Argument	"""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"""		7695891	1					
ANR	7695915	PrimaryExpression	"""          <PackedPacketHeadersMainHeader Marker=\\""PPM\\"">\\n"""		7695891	0					
ANR	7695916	IfStatement	if ( notes )		7695891	3					
ANR	7695917	Condition	notes	2317:8:105833:105837	7695891	0	True				
ANR	7695918	Identifier	notes		7695891	0					
ANR	7695919	CompoundStatement		14:15:532:532	7695891	1					
ANR	7695920	ExpressionStatement	"fprintf ( xmlout , ""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"" )"	2318:8:105850:105967	7695891	0	True				
ANR	7695921	CallExpression	"fprintf ( xmlout , ""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"" )"		7695891	0					
ANR	7695922	Callee	fprintf		7695891	0					
ANR	7695923	Identifier	fprintf		7695891	0					
ANR	7695924	ArgumentList	xmlout		7695891	1					
ANR	7695925	Argument	xmlout		7695891	0					
ANR	7695926	Identifier	xmlout		7695891	0					
ANR	7695927	Argument	"""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"""		7695891	1					
ANR	7695928	PrimaryExpression	"""          <!-- If there are multiple PPM marker segments in the main header, -->\\n"""		7695891	0					
ANR	7695929	ExpressionStatement	"fprintf ( xmlout , ""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"" )"	2320:8:105977:106122	7695891	1	True				
ANR	7695930	CallExpression	"fprintf ( xmlout , ""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"" )"		7695891	0					
ANR	7695931	Callee	fprintf		7695891	0					
ANR	7695932	Identifier	fprintf		7695891	0					
ANR	7695933	ArgumentList	xmlout		7695891	1					
ANR	7695934	Argument	xmlout		7695891	0					
ANR	7695935	Identifier	xmlout		7695891	0					
ANR	7695936	Argument	"""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"""		7695891	1					
ANR	7695937	PrimaryExpression	"""          <!-- this mj2_to_metadata implementation will report them as a single consolidated PPM header. -->\\n"""		7695891	0					
ANR	7695938	ExpressionStatement	"fprintf ( xmlout , ""          <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"	2322:8:106132:106246	7695891	2	True				
ANR	7695939	CallExpression	"fprintf ( xmlout , ""          <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"		7695891	0					
ANR	7695940	Callee	fprintf		7695891	0					
ANR	7695941	Identifier	fprintf		7695891	0					
ANR	7695942	ArgumentList	xmlout		7695891	1					
ANR	7695943	Argument	xmlout		7695891	0					
ANR	7695944	Identifier	xmlout		7695891	0					
ANR	7695945	Argument	"""          <!-- The implementation can't currently segregate by tile-part. -->\\n"""		7695891	1					
ANR	7695946	PrimaryExpression	"""          <!-- The implementation can't currently segregate by tile-part. -->\\n"""		7695891	0					
ANR	7695947	ExpressionStatement	"fprintf ( xmlout , ""          <!-- TO DO? further map the packet headers to xml. -->\\n"" )"	2324:8:106256:106357	7695891	3	True				
ANR	7695948	CallExpression	"fprintf ( xmlout , ""          <!-- TO DO? further map the packet headers to xml. -->\\n"" )"		7695891	0					
ANR	7695949	Callee	fprintf		7695891	0					
ANR	7695950	Identifier	fprintf		7695891	0					
ANR	7695951	ArgumentList	xmlout		7695891	1					
ANR	7695952	Argument	xmlout		7695891	0					
ANR	7695953	Identifier	xmlout		7695891	0					
ANR	7695954	Argument	"""          <!-- TO DO? further map the packet headers to xml. -->\\n"""		7695891	1					
ANR	7695955	PrimaryExpression	"""          <!-- TO DO? further map the packet headers to xml. -->\\n"""		7695891	0					
ANR	7695956	ExpressionStatement	"fprintf ( xmlout , ""            <PackedData>\\n"" )"	2332:4:106687:106735	7695891	4	True				
ANR	7695957	CallExpression	"fprintf ( xmlout , ""            <PackedData>\\n"" )"		7695891	0					
ANR	7695958	Callee	fprintf		7695891	0					
ANR	7695959	Identifier	fprintf		7695891	0					
ANR	7695960	ArgumentList	xmlout		7695891	1					
ANR	7695961	Argument	xmlout		7695891	0					
ANR	7695962	Identifier	xmlout		7695891	0					
ANR	7695963	Argument	"""            <PackedData>\\n"""		7695891	1					
ANR	7695964	PrimaryExpression	"""            <PackedData>\\n"""		7695891	0					
ANR	7695965	ExpressionStatement	"xml_out_dump_hex ( xmlout , cp -> ppm_data , cp -> ppm_len )"	2333:4:106741:106792	7695891	5	True				
ANR	7695966	CallExpression	"xml_out_dump_hex ( xmlout , cp -> ppm_data , cp -> ppm_len )"		7695891	0					
ANR	7695967	Callee	xml_out_dump_hex		7695891	0					
ANR	7695968	Identifier	xml_out_dump_hex		7695891	0					
ANR	7695969	ArgumentList	xmlout		7695891	1					
ANR	7695970	Argument	xmlout		7695891	0					
ANR	7695971	Identifier	xmlout		7695891	0					
ANR	7695972	Argument	cp -> ppm_data		7695891	1					
ANR	7695973	PtrMemberAccess	cp -> ppm_data		7695891	0					
ANR	7695974	Identifier	cp		7695891	0					
ANR	7695975	Identifier	ppm_data		7695891	1					
ANR	7695976	Argument	cp -> ppm_len		7695891	2					
ANR	7695977	PtrMemberAccess	cp -> ppm_len		7695891	0					
ANR	7695978	Identifier	cp		7695891	0					
ANR	7695979	Identifier	ppm_len		7695891	1					
ANR	7695980	ExpressionStatement	"fprintf ( xmlout , ""            </PackedData>\\n"" )"	2335:4:106857:106906	7695891	6	True				
ANR	7695981	CallExpression	"fprintf ( xmlout , ""            </PackedData>\\n"" )"		7695891	0					
ANR	7695982	Callee	fprintf		7695891	0					
ANR	7695983	Identifier	fprintf		7695891	0					
ANR	7695984	ArgumentList	xmlout		7695891	1					
ANR	7695985	Argument	xmlout		7695891	0					
ANR	7695986	Identifier	xmlout		7695891	0					
ANR	7695987	Argument	"""            </PackedData>\\n"""		7695891	1					
ANR	7695988	PrimaryExpression	"""            </PackedData>\\n"""		7695891	0					
ANR	7695989	ExpressionStatement	"fprintf ( xmlout , ""          </PackedPacketHeadersMainHeader>\\n"" )"	2336:4:106912:106987	7695891	7	True				
ANR	7695990	CallExpression	"fprintf ( xmlout , ""          </PackedPacketHeadersMainHeader>\\n"" )"		7695891	0					
ANR	7695991	Callee	fprintf		7695891	0					
ANR	7695992	Identifier	fprintf		7695891	0					
ANR	7695993	ArgumentList	xmlout		7695891	1					
ANR	7695994	Argument	xmlout		7695891	0					
ANR	7695995	Identifier	xmlout		7695891	0					
ANR	7695996	Argument	"""          </PackedPacketHeadersMainHeader>\\n"""		7695891	1					
ANR	7695997	PrimaryExpression	"""          </PackedPacketHeadersMainHeader>\\n"""		7695891	0					
ANR	7695998	ReturnType	void		7695891	1					
ANR	7695999	Identifier	xml_out_frame_ppm		7695891	2					
ANR	7696000	ParameterList	"FILE * xmlout , opj_cp_t * cp"		7695891	3					
ANR	7696001	Parameter	FILE * xmlout	2302:23:105191:105202	7695891	0	True				
ANR	7696002	ParameterType	FILE *		7695891	0					
ANR	7696003	Identifier	xmlout		7695891	1					
ANR	7696004	Parameter	opj_cp_t * cp	2303:23:105228:105239	7695891	1	True				
ANR	7696005	ParameterType	opj_cp_t *		7695891	0					
ANR	7696006	Identifier	cp		7695891	1					
ANR	7696007	CFGEntryNode	ENTRY		7695891		True				
ANR	7696008	CFGExitNode	EXIT		7695891		True				
ANR	7696009	Symbol	* cp		7695891						
ANR	7696010	Symbol	notes		7695891						
ANR	7696011	Symbol	cp -> ppm		7695891						
ANR	7696012	Symbol	cp -> ppm_len		7695891						
ANR	7696013	Symbol	cp -> ppm_data		7695891						
ANR	7696014	Symbol	j		7695891						
ANR	7696015	Symbol	cp		7695891						
ANR	7696016	Symbol	xmlout		7695891						
ANR	7696017	Function	xml_out_frame_ppt	2342:0:107085:109009							
ANR	7696018	FunctionDef	"xml_out_frame_ppt (FILE * xmlout , opj_tcp_t * tcp)"		7696017	0					
ANR	7696019	CompoundStatement		2344:0:107226:109009	7696017	0					
ANR	7696020	IdentifierDeclStatement	int j ;	2348:4:107422:107427	7696017	0	True				
ANR	7696021	IdentifierDecl	j		7696017	0					
ANR	7696022	IdentifierDeclType	int		7696017	0					
ANR	7696023	Identifier	j		7696017	1					
ANR	7696024	IfStatement	if ( tcp -> ppt != 1 )		7696017	1					
ANR	7696025	Condition	tcp -> ppt != 1	2350:8:107438:107450	7696017	0	True				
ANR	7696026	EqualityExpression	tcp -> ppt != 1		7696017	0		!=			
ANR	7696027	PtrMemberAccess	tcp -> ppt		7696017	0					
ANR	7696028	Identifier	tcp		7696017	0					
ANR	7696029	Identifier	ppt		7696017	1					
ANR	7696030	PrimaryExpression	1		7696017	1					
ANR	7696031	CompoundStatement		7:23:226:226	7696017	1					
ANR	7696032	ReturnStatement	return ;	2351:8:107463:107469	7696017	0	True				
ANR	7696033	ExpressionStatement	"fprintf ( xmlout , ""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"" )"	2355:4:107545:107640	7696017	2	True				
ANR	7696034	CallExpression	"fprintf ( xmlout , ""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"" )"		7696017	0					
ANR	7696035	Callee	fprintf		7696017	0					
ANR	7696036	Identifier	fprintf		7696017	0					
ANR	7696037	ArgumentList	xmlout		7696017	1					
ANR	7696038	Argument	xmlout		7696017	0					
ANR	7696039	Identifier	xmlout		7696017	0					
ANR	7696040	Argument	"""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"""		7696017	1					
ANR	7696041	PrimaryExpression	"""            <PackedPacketHeadersTilePartHeader Marker=\\""PPT\\"">\\n"""		7696017	0					
ANR	7696042	IfStatement	if ( notes )		7696017	3					
ANR	7696043	Condition	notes	2358:8:107755:107759	7696017	0	True				
ANR	7696044	Identifier	notes		7696017	0					
ANR	7696045	CompoundStatement		15:15:535:535	7696017	1					
ANR	7696046	ExpressionStatement	"fprintf ( xmlout , ""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"" )"	2359:8:107772:107896	7696017	0	True				
ANR	7696047	CallExpression	"fprintf ( xmlout , ""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"" )"		7696017	0					
ANR	7696048	Callee	fprintf		7696017	0					
ANR	7696049	Identifier	fprintf		7696017	0					
ANR	7696050	ArgumentList	xmlout		7696017	1					
ANR	7696051	Argument	xmlout		7696017	0					
ANR	7696052	Identifier	xmlout		7696017	0					
ANR	7696053	Argument	"""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"""		7696017	1					
ANR	7696054	PrimaryExpression	"""            <!-- If there are multiple PPT marker segments in the tile-part header, -->\\n"""		7696017	0					
ANR	7696055	ExpressionStatement	"fprintf ( xmlout , ""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"" )"	2361:8:107906:108053	7696017	1	True				
ANR	7696056	CallExpression	"fprintf ( xmlout , ""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"" )"		7696017	0					
ANR	7696057	Callee	fprintf		7696017	0					
ANR	7696058	Identifier	fprintf		7696017	0					
ANR	7696059	ArgumentList	xmlout		7696017	1					
ANR	7696060	Argument	xmlout		7696017	0					
ANR	7696061	Identifier	xmlout		7696017	0					
ANR	7696062	Argument	"""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"""		7696017	1					
ANR	7696063	PrimaryExpression	"""            <!-- this mj2_to_metadata implementation will report them as a single consolidated PPT header. -->\\n"""		7696017	0					
ANR	7696064	ExpressionStatement	"fprintf ( xmlout , ""            <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"	2363:8:108063:108179	7696017	2	True				
ANR	7696065	CallExpression	"fprintf ( xmlout , ""            <!-- The implementation can't currently segregate by tile-part. -->\\n"" )"		7696017	0					
ANR	7696066	Callee	fprintf		7696017	0					
ANR	7696067	Identifier	fprintf		7696017	0					
ANR	7696068	ArgumentList	xmlout		7696017	1					
ANR	7696069	Argument	xmlout		7696017	0					
ANR	7696070	Identifier	xmlout		7696017	0					
ANR	7696071	Argument	"""            <!-- The implementation can't currently segregate by tile-part. -->\\n"""		7696017	1					
ANR	7696072	PrimaryExpression	"""            <!-- The implementation can't currently segregate by tile-part. -->\\n"""		7696017	0					
ANR	7696073	ExpressionStatement	"fprintf ( xmlout , ""            <!-- TO DO? further map the packet headers to xml. -->\\n"" )"	2365:8:108189:108292	7696017	3	True				
ANR	7696074	CallExpression	"fprintf ( xmlout , ""            <!-- TO DO? further map the packet headers to xml. -->\\n"" )"		7696017	0					
ANR	7696075	Callee	fprintf		7696017	0					
ANR	7696076	Identifier	fprintf		7696017	0					
ANR	7696077	ArgumentList	xmlout		7696017	1					
ANR	7696078	Argument	xmlout		7696017	0					
ANR	7696079	Identifier	xmlout		7696017	0					
ANR	7696080	Argument	"""            <!-- TO DO? further map the packet headers to xml. -->\\n"""		7696017	1					
ANR	7696081	PrimaryExpression	"""            <!-- TO DO? further map the packet headers to xml. -->\\n"""		7696017	0					
ANR	7696082	ExpressionStatement	"fprintf ( xmlout , ""              <PackedData>\\n"" )"	2373:4:108622:108672	7696017	4	True				
ANR	7696083	CallExpression	"fprintf ( xmlout , ""              <PackedData>\\n"" )"		7696017	0					
ANR	7696084	Callee	fprintf		7696017	0					
ANR	7696085	Identifier	fprintf		7696017	0					
ANR	7696086	ArgumentList	xmlout		7696017	1					
ANR	7696087	Argument	xmlout		7696017	0					
ANR	7696088	Identifier	xmlout		7696017	0					
ANR	7696089	Argument	"""              <PackedData>\\n"""		7696017	1					
ANR	7696090	PrimaryExpression	"""              <PackedData>\\n"""		7696017	0					
ANR	7696091	ExpressionStatement	"xml_out_dump_hex ( xmlout , tcp -> ppt_data , tcp -> ppt_len )"	2374:4:108678:108731	7696017	5	True				
ANR	7696092	CallExpression	"xml_out_dump_hex ( xmlout , tcp -> ppt_data , tcp -> ppt_len )"		7696017	0					
ANR	7696093	Callee	xml_out_dump_hex		7696017	0					
ANR	7696094	Identifier	xml_out_dump_hex		7696017	0					
ANR	7696095	ArgumentList	xmlout		7696017	1					
ANR	7696096	Argument	xmlout		7696017	0					
ANR	7696097	Identifier	xmlout		7696017	0					
ANR	7696098	Argument	tcp -> ppt_data		7696017	1					
ANR	7696099	PtrMemberAccess	tcp -> ppt_data		7696017	0					
ANR	7696100	Identifier	tcp		7696017	0					
ANR	7696101	Identifier	ppt_data		7696017	1					
ANR	7696102	Argument	tcp -> ppt_len		7696017	2					
ANR	7696103	PtrMemberAccess	tcp -> ppt_len		7696017	0					
ANR	7696104	Identifier	tcp		7696017	0					
ANR	7696105	Identifier	ppt_len		7696017	1					
ANR	7696106	ExpressionStatement	"fprintf ( xmlout , ""              </PackedData>\\n"" )"	2376:4:108796:108847	7696017	6	True				
ANR	7696107	CallExpression	"fprintf ( xmlout , ""              </PackedData>\\n"" )"		7696017	0					
ANR	7696108	Callee	fprintf		7696017	0					
ANR	7696109	Identifier	fprintf		7696017	0					
ANR	7696110	ArgumentList	xmlout		7696017	1					
ANR	7696111	Argument	xmlout		7696017	0					
ANR	7696112	Identifier	xmlout		7696017	0					
ANR	7696113	Argument	"""              </PackedData>\\n"""		7696017	1					
ANR	7696114	PrimaryExpression	"""              </PackedData>\\n"""		7696017	0					
ANR	7696115	ExpressionStatement	"fprintf ( xmlout , ""            </PackedPacketHeadersTileHeader>\\n"" )"	2377:4:108853:108930	7696017	7	True				
ANR	7696116	CallExpression	"fprintf ( xmlout , ""            </PackedPacketHeadersTileHeader>\\n"" )"		7696017	0					
ANR	7696117	Callee	fprintf		7696017	0					
ANR	7696118	Identifier	fprintf		7696017	0					
ANR	7696119	ArgumentList	xmlout		7696017	1					
ANR	7696120	Argument	xmlout		7696017	0					
ANR	7696121	Identifier	xmlout		7696017	0					
ANR	7696122	Argument	"""            </PackedPacketHeadersTileHeader>\\n"""		7696017	1					
ANR	7696123	PrimaryExpression	"""            </PackedPacketHeadersTileHeader>\\n"""		7696017	0					
ANR	7696124	ReturnType	void		7696017	1					
ANR	7696125	Identifier	xml_out_frame_ppt		7696017	2					
ANR	7696126	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7696017	3					
ANR	7696127	Parameter	FILE * xmlout	2342:23:107108:107119	7696017	0	True				
ANR	7696128	ParameterType	FILE *		7696017	0					
ANR	7696129	Identifier	xmlout		7696017	1					
ANR	7696130	Parameter	opj_tcp_t * tcp	2343:23:107145:107158	7696017	1	True				
ANR	7696131	ParameterType	opj_tcp_t *		7696017	0					
ANR	7696132	Identifier	tcp		7696017	1					
ANR	7696133	CFGEntryNode	ENTRY		7696017		True				
ANR	7696134	CFGExitNode	EXIT		7696017		True				
ANR	7696135	Symbol	tcp		7696017						
ANR	7696136	Symbol	notes		7696017						
ANR	7696137	Symbol	tcp -> ppt		7696017						
ANR	7696138	Symbol	tcp -> ppt_data		7696017						
ANR	7696139	Symbol	tcp -> ppt_len		7696017						
ANR	7696140	Symbol	j		7696017						
ANR	7696141	Symbol	* tcp		7696017						
ANR	7696142	Symbol	xmlout		7696017						
ANR	7696143	Function	xml_out_frame_tlm	2384:0:109057:109403							
ANR	7696144	FunctionDef	xml_out_frame_tlm (FILE * xmlout)		7696143	0					
ANR	7696145	CompoundStatement		2386:0:109166:109403	7696143	0					
ANR	7696146	ReturnType	void		7696143	1					
ANR	7696147	Identifier	xml_out_frame_tlm		7696143	2					
ANR	7696148	ParameterList	FILE * xmlout		7696143	3					
ANR	7696149	Parameter	FILE * xmlout	2384:23:109080:109114	7696143	0	True				
ANR	7696150	ParameterType	FILE *		7696143	0					
ANR	7696151	Identifier	xmlout		7696143	1					
ANR	7696152	CFGEntryNode	ENTRY		7696143		True				
ANR	7696153	CFGExitNode	EXIT		7696143		True				
ANR	7696154	Symbol	xmlout		7696143						
ANR	7696155	Function	xml_out_frame_plm	2394:0:109427:109853							
ANR	7696156	FunctionDef	xml_out_frame_plm (FILE * xmlout)		7696155	0					
ANR	7696157	CompoundStatement		2396:0:109566:109853	7696155	0					
ANR	7696158	ReturnType	void		7696155	1					
ANR	7696159	Identifier	xml_out_frame_plm		7696155	2					
ANR	7696160	ParameterList	FILE * xmlout		7696155	3					
ANR	7696161	Parameter	FILE * xmlout	2394:23:109450:109484	7696155	0	True				
ANR	7696162	ParameterType	FILE *		7696155	0					
ANR	7696163	Identifier	xmlout		7696155	1					
ANR	7696164	CFGEntryNode	ENTRY		7696155		True				
ANR	7696165	CFGExitNode	EXIT		7696155		True				
ANR	7696166	Symbol	xmlout		7696155						
ANR	7696167	Function	xml_out_frame_plt	2405:0:109877:110208							
ANR	7696168	FunctionDef	"xml_out_frame_plt (FILE * xmlout , opj_tcp_t * tcp)"		7696167	0					
ANR	7696169	CompoundStatement		2407:0:110040:110208	7696167	0					
ANR	7696170	ReturnType	void		7696167	1					
ANR	7696171	Identifier	xml_out_frame_plt		7696167	2					
ANR	7696172	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7696167	3					
ANR	7696173	Parameter	FILE * xmlout	2405:23:109900:109911	7696167	0	True				
ANR	7696174	ParameterType	FILE *		7696167	0					
ANR	7696175	Identifier	xmlout		7696167	1					
ANR	7696176	Parameter	opj_tcp_t * tcp	2406:23:109937:109950	7696167	1	True				
ANR	7696177	ParameterType	opj_tcp_t *		7696167	0					
ANR	7696178	Identifier	tcp		7696167	1					
ANR	7696179	CFGEntryNode	ENTRY		7696167		True				
ANR	7696180	CFGExitNode	EXIT		7696167		True				
ANR	7696181	Symbol	tcp		7696167						
ANR	7696182	Symbol	xmlout		7696167						
ANR	7696183	Function	xml_out_frame_crg	2415:0:110232:113220							
ANR	7696184	FunctionDef	xml_out_frame_crg (FILE * xmlout)		7696183	0					
ANR	7696185	CompoundStatement		2416:0:110269:113220	7696183	0					
ANR	7696186	Statement	THIS	2421:0:110555:110558	7696183	0	True				
ANR	7696187	Statement	PSEUDOCODE	2421:5:110560:110569	7696183	1	True				
ANR	7696188	Statement	IMAGINES	2421:16:110571:110578	7696183	2	True				
ANR	7696189	Statement	THESE	2421:25:110580:110584	7696183	3	True				
ANR	7696190	Label	EXIST :	2421:31:110586:110591	7696183	4	True				
ANR	7696191	Identifier	EXIST		7696183	0					
ANR	7696192	Statement	j2k_default_tcp	2422:4:110597:110611	7696183	5	True				
ANR	7696193	Statement	->	2422:19:110612:110613	7696183	6	True				
ANR	7696194	Statement	crg	2422:21:110614:110616	7696183	7	True				
ANR	7696195	Statement	","	2422:24:110617:110617	7696183	8	True				
ANR	7696196	Statement	j2k_default_tcp	2422:26:110619:110633	7696183	9	True				
ANR	7696197	Statement	->	2422:41:110634:110635	7696183	10	True				
ANR	7696198	Statement	crg_i	2422:43:110636:110640	7696183	11	True				
ANR	7696199	Statement	","	2422:48:110641:110641	7696183	12	True				
ANR	7696200	Statement	j2k_default_tcp	2422:50:110643:110657	7696183	13	True				
ANR	7696201	Statement	->	2422:65:110658:110659	7696183	14	True				
ANR	7696202	Statement	crg_xcrg	2422:67:110660:110667	7696183	15	True				
ANR	7696203	Statement	*	2422:75:110668:110668	7696183	16	True				
ANR	7696204	Statement	","	2422:76:110669:110669	7696183	17	True				
ANR	7696205	Statement	j2k_default_tcp	2423:20:110691:110705	7696183	18	True				
ANR	7696206	Statement	->	2423:35:110706:110707	7696183	19	True				
ANR	7696207	Statement	crg_ycrg	2423:37:110708:110715	7696183	20	True				
ANR	7696208	Statement	*	2423:45:110716:110716	7696183	21	True				
ANR	7696209	Statement	(	2424:20:110738:110738	7696183	22	True				
ANR	7696210	Statement	POSSIBLY	2424:21:110739:110746	7696183	23	True				
ANR	7696211	Statement	DON	2424:30:110748:110750	7696183	24	True				
ANR	7696212	Statement	T	2424:34:110752:110752	7696183	25	True				
ANR	7696213	Statement	NEED	2424:36:110754:110757	7696183	26	True				
ANR	7696214	Statement	crg_i	2424:41:110759:110763	7696183	27	True				
ANR	7696215	Statement	","	2424:46:110764:110764	7696183	28	True				
ANR	7696216	Statement	CAN	2424:48:110766:110768	7696183	29	True				
ANR	7696217	Statement	GET	2424:52:110770:110772	7696183	30	True				
ANR	7696218	Statement	NUMBER	2424:56:110774:110779	7696183	31	True				
ANR	7696219	Statement	OR	2424:63:110781:110782	7696183	32	True				
ANR	7696220	Statement	COMPONENTS	2424:66:110784:110793	7696183	33	True				
ANR	7696221	Statement	FROM	2424:77:110795:110798	7696183	34	True				
ANR	7696222	Statement	ELSEWHERE	2424:82:110800:110808	7696183	35	True				
ANR	7696223	Statement	)	2424:91:110809:110809	7696183	36	True				
ANR	7696224	IfStatement	if ( j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0 )		7696183	37					
ANR	7696225	Condition	j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0	2425:25:110836:110891	7696183	0	True				
ANR	7696226	OrExpression	j2k_default_tcp -> crg != 1 || j2k_default_tcp -> crg_i == 0		7696183	0		||			
ANR	7696227	EqualityExpression	j2k_default_tcp -> crg != 1		7696183	0		!=			
ANR	7696228	PtrMemberAccess	j2k_default_tcp -> crg		7696183	0					
ANR	7696229	Identifier	j2k_default_tcp		7696183	0					
ANR	7696230	Identifier	crg		7696183	1					
ANR	7696231	PrimaryExpression	1		7696183	1					
ANR	7696232	EqualityExpression	j2k_default_tcp -> crg_i == 0		7696183	1		==			
ANR	7696233	PtrMemberAccess	j2k_default_tcp -> crg_i		7696183	0					
ANR	7696234	Identifier	j2k_default_tcp		7696183	0					
ANR	7696235	Identifier	crg_i		7696183	1					
ANR	7696236	PrimaryExpression	0		7696183	1					
ANR	7696237	ReturnStatement	return ;	2426:21:110915:110921	7696183	1	True				
ANR	7696238	ExpressionStatement	"fprintf ( xmlout , ""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"" , j2k_default_tcp -> crg_i )"	2429:21:111024:111187	7696183	38	True				
ANR	7696239	CallExpression	"fprintf ( xmlout , ""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"" , j2k_default_tcp -> crg_i )"		7696183	0					
ANR	7696240	Callee	fprintf		7696183	0					
ANR	7696241	Identifier	fprintf		7696183	0					
ANR	7696242	ArgumentList	xmlout		7696183	1					
ANR	7696243	Argument	xmlout		7696183	0					
ANR	7696244	Identifier	xmlout		7696183	0					
ANR	7696245	Argument	"""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"""		7696183	1					
ANR	7696246	PrimaryExpression	"""          <ComponentRegistration Marker=\\""RG\\"" Count=\\""%d\\"">\\n"""		7696183	0					
ANR	7696247	Argument	j2k_default_tcp -> crg_i		7696183	2					
ANR	7696248	PtrMemberAccess	j2k_default_tcp -> crg_i		7696183	0					
ANR	7696249	Identifier	j2k_default_tcp		7696183	0					
ANR	7696250	Identifier	crg_i		7696183	1					
ANR	7696251	IfStatement	if ( notes )		7696183	39					
ANR	7696252	Condition	notes	2432:8:111197:111201	7696183	0	True				
ANR	7696253	Identifier	notes		7696183	0					
ANR	7696254	CompoundStatement		17:15:934:934	7696183	1					
ANR	7696255	ExpressionStatement	"fprintf ( xmlout , ""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"" )"	2433:8:111214:111339	7696183	0	True				
ANR	7696256	CallExpression	"fprintf ( xmlout , ""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"" )"		7696183	0					
ANR	7696257	Callee	fprintf		7696183	0					
ANR	7696258	Identifier	fprintf		7696183	0					
ANR	7696259	ArgumentList	xmlout		7696183	1					
ANR	7696260	Argument	xmlout		7696183	0					
ANR	7696261	Identifier	xmlout		7696183	0					
ANR	7696262	Argument	"""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"""		7696183	1					
ANR	7696263	PrimaryExpression	"""          <!-- Fine tuning of registration of components with respect to each other, -->\\n"""		7696183	0					
ANR	7696264	ExpressionStatement	"fprintf ( xmlout , ""          <!-- not required but potentially helpful for decoder. -->\\n"" )"	2435:12:111353:111462	7696183	1	True				
ANR	7696265	CallExpression	"fprintf ( xmlout , ""          <!-- not required but potentially helpful for decoder. -->\\n"" )"		7696183	0					
ANR	7696266	Callee	fprintf		7696183	0					
ANR	7696267	Identifier	fprintf		7696183	0					
ANR	7696268	ArgumentList	xmlout		7696183	1					
ANR	7696269	Argument	xmlout		7696183	0					
ANR	7696270	Identifier	xmlout		7696183	0					
ANR	7696271	Argument	"""          <!-- not required but potentially helpful for decoder. -->\\n"""		7696183	1					
ANR	7696272	PrimaryExpression	"""          <!-- not required but potentially helpful for decoder. -->\\n"""		7696183	0					
ANR	7696273	ExpressionStatement	"fprintf ( xmlout , ""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"" )"	2437:12:111476:111616	7696183	2	True				
ANR	7696274	CallExpression	"fprintf ( xmlout , ""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"" )"		7696183	0					
ANR	7696275	Callee	fprintf		7696183	0					
ANR	7696276	Identifier	fprintf		7696183	0					
ANR	7696277	ArgumentList	xmlout		7696183	1					
ANR	7696278	Argument	xmlout		7696183	0					
ANR	7696279	Identifier	xmlout		7696183	0					
ANR	7696280	Argument	"""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"""		7696183	1					
ANR	7696281	PrimaryExpression	"""          <!-- These supplementary fractional offsets are in units of 1/65536 of the horizontal -->\\n"""		7696183	0					
ANR	7696282	ExpressionStatement	"fprintf ( xmlout , ""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"" )"	2439:12:111630:111758	7696183	3	True				
ANR	7696283	CallExpression	"fprintf ( xmlout , ""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"" )"		7696183	0					
ANR	7696284	Callee	fprintf		7696183	0					
ANR	7696285	Identifier	fprintf		7696183	0					
ANR	7696286	ArgumentList	xmlout		7696183	1					
ANR	7696287	Argument	xmlout		7696183	0					
ANR	7696288	Identifier	xmlout		7696183	0					
ANR	7696289	Argument	"""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"""		7696183	1					
ANR	7696290	PrimaryExpression	"""          <!-- or vertical separation (e.g., XRsiz[i] or YRsiz[i] for component i). -->\\n"""		7696183	0					
ANR	7696291	ForStatement	for ( i = 0 ; i < j2k_default_tcp -> crg_i ; i ++ )		7696183	40					
ANR	7696292	ForInit	i = 0 ;	2443:9:111892:111897	7696183	0	True				
ANR	7696293	AssignmentExpression	i = 0		7696183	0		=			
ANR	7696294	Identifier	i		7696183	0					
ANR	7696295	PrimaryExpression	0		7696183	1					
ANR	7696296	Condition	i < j2k_default_tcp -> crg_i	2443:16:111899:111924	7696183	1	True				
ANR	7696297	RelationalExpression	i < j2k_default_tcp -> crg_i		7696183	0		<			
ANR	7696298	Identifier	i		7696183	0					
ANR	7696299	PtrMemberAccess	j2k_default_tcp -> crg_i		7696183	1					
ANR	7696300	Identifier	j2k_default_tcp		7696183	0					
ANR	7696301	Identifier	crg_i		7696183	1					
ANR	7696302	PostIncDecOperationExpression	i ++	2443:44:111927:111929	7696183	2	True				
ANR	7696303	Identifier	i		7696183	0					
ANR	7696304	IncDec	++		7696183	1					
ANR	7696305	CompoundStatement		28:49:1662:1662	7696183	3					
ANR	7696306	ExpressionStatement	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"	2444:4:111938:112001	7696183	0	True				
ANR	7696307	CallExpression	"fprintf ( xmlout , ""            <Component Num=\\""%d\\"">\\n"" , i + 1 )"		7696183	0					
ANR	7696308	Callee	fprintf		7696183	0					
ANR	7696309	Identifier	fprintf		7696183	0					
ANR	7696310	ArgumentList	xmlout		7696183	1					
ANR	7696311	Argument	xmlout		7696183	0					
ANR	7696312	Identifier	xmlout		7696183	0					
ANR	7696313	Argument	"""            <Component Num=\\""%d\\"">\\n"""		7696183	1					
ANR	7696314	PrimaryExpression	"""            <Component Num=\\""%d\\"">\\n"""		7696183	0					
ANR	7696315	Argument	i + 1		7696183	2					
ANR	7696316	AdditiveExpression	i + 1		7696183	0		+			
ANR	7696317	Identifier	i		7696183	0					
ANR	7696318	PrimaryExpression	1		7696183	1					
ANR	7696319	ExpressionStatement	"fprintf ( xmlout , ""              <Xcrg>\\n"" )"	2445:8:112011:112053	7696183	1	True				
ANR	7696320	CallExpression	"fprintf ( xmlout , ""              <Xcrg>\\n"" )"		7696183	0					
ANR	7696321	Callee	fprintf		7696183	0					
ANR	7696322	Identifier	fprintf		7696183	0					
ANR	7696323	ArgumentList	xmlout		7696183	1					
ANR	7696324	Argument	xmlout		7696183	0					
ANR	7696325	Identifier	xmlout		7696183	0					
ANR	7696326	Argument	"""              <Xcrg>\\n"""		7696183	1					
ANR	7696327	PrimaryExpression	"""              <Xcrg>\\n"""		7696183	0					
ANR	7696328	IfStatement	if ( raw )		7696183	2					
ANR	7696329	Condition	raw	2446:12:112067:112069	7696183	0	True				
ANR	7696330	Identifier	raw		7696183	0					
ANR	7696331	CompoundStatement		31:17:1802:1802	7696183	1					
ANR	7696332	ExpressionStatement	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_xcrg [ i ] )"	2447:12:112086:112202	7696183	0	True				
ANR	7696333	CallExpression	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_xcrg [ i ] )"		7696183	0					
ANR	7696334	Callee	fprintf		7696183	0					
ANR	7696335	Identifier	fprintf		7696183	0					
ANR	7696336	ArgumentList	xmlout		7696183	1					
ANR	7696337	Argument	xmlout		7696183	0					
ANR	7696338	Identifier	xmlout		7696183	0					
ANR	7696339	Argument	"""                <AsNumerator>%d</AsNumerator>\\n"""		7696183	1					
ANR	7696340	PrimaryExpression	"""                <AsNumerator>%d</AsNumerator>\\n"""		7696183	0					
ANR	7696341	Argument	j2k_default_tcp -> crg_xcrg [ i ]		7696183	2					
ANR	7696342	ArrayIndexing	j2k_default_tcp -> crg_xcrg [ i ]		7696183	0					
ANR	7696343	PtrMemberAccess	j2k_default_tcp -> crg_xcrg		7696183	0					
ANR	7696344	Identifier	j2k_default_tcp		7696183	0					
ANR	7696345	Identifier	crg_xcrg		7696183	1					
ANR	7696346	Identifier	i		7696183	1					
ANR	7696347	IfStatement	if ( derived )		7696183	3					
ANR	7696348	Condition	derived	2450:12:112226:112232	7696183	0	True				
ANR	7696349	Identifier	derived		7696183	0					
ANR	7696350	CompoundStatement		35:21:1965:1965	7696183	1					
ANR	7696351	ExpressionStatement	"fprintf ( xmlout , ""                <AsPercentage>%.4f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36 )"	2452:12:112347:112486	7696183	0	True				
ANR	7696352	CallExpression	"fprintf ( xmlout , ""                <AsPercentage>%.4f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36 )"		7696183	0					
ANR	7696353	Callee	fprintf		7696183	0					
ANR	7696354	Identifier	fprintf		7696183	0					
ANR	7696355	ArgumentList	xmlout		7696183	1					
ANR	7696356	Argument	xmlout		7696183	0					
ANR	7696357	Identifier	xmlout		7696183	0					
ANR	7696358	Argument	"""                <AsPercentage>%.4f</AsPercentage>\\n"""		7696183	1					
ANR	7696359	PrimaryExpression	"""                <AsPercentage>%.4f</AsPercentage>\\n"""		7696183	0					
ANR	7696360	Argument	( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36		7696183	2					
ANR	7696361	MultiplicativeExpression	( ( double ) j2k_default_tcp -> crg_xcrg [ i ] ) / 655.36		7696183	0		/			
ANR	7696362	CastExpression	( double ) j2k_default_tcp -> crg_xcrg [ i ]		7696183	0					
ANR	7696363	CastTarget	double		7696183	0					
ANR	7696364	ArrayIndexing	j2k_default_tcp -> crg_xcrg [ i ]		7696183	1					
ANR	7696365	PtrMemberAccess	j2k_default_tcp -> crg_xcrg		7696183	0					
ANR	7696366	Identifier	j2k_default_tcp		7696183	0					
ANR	7696367	Identifier	crg_xcrg		7696183	1					
ANR	7696368	Identifier	i		7696183	1					
ANR	7696369	PrimaryExpression	655.36		7696183	1					
ANR	7696370	ExpressionStatement	"fprintf ( xmlout , ""              </Xcrg>\\n"" )"	2456:8:112592:112635	7696183	4	True				
ANR	7696371	CallExpression	"fprintf ( xmlout , ""              </Xcrg>\\n"" )"		7696183	0					
ANR	7696372	Callee	fprintf		7696183	0					
ANR	7696373	Identifier	fprintf		7696183	0					
ANR	7696374	ArgumentList	xmlout		7696183	1					
ANR	7696375	Argument	xmlout		7696183	0					
ANR	7696376	Identifier	xmlout		7696183	0					
ANR	7696377	Argument	"""              </Xcrg>\\n"""		7696183	1					
ANR	7696378	PrimaryExpression	"""              </Xcrg>\\n"""		7696183	0					
ANR	7696379	ExpressionStatement	"fprintf ( xmlout , ""              <Ycrg>\\n"" )"	2457:8:112645:112687	7696183	5	True				
ANR	7696380	CallExpression	"fprintf ( xmlout , ""              <Ycrg>\\n"" )"		7696183	0					
ANR	7696381	Callee	fprintf		7696183	0					
ANR	7696382	Identifier	fprintf		7696183	0					
ANR	7696383	ArgumentList	xmlout		7696183	1					
ANR	7696384	Argument	xmlout		7696183	0					
ANR	7696385	Identifier	xmlout		7696183	0					
ANR	7696386	Argument	"""              <Ycrg>\\n"""		7696183	1					
ANR	7696387	PrimaryExpression	"""              <Ycrg>\\n"""		7696183	0					
ANR	7696388	IfStatement	if ( raw )		7696183	6					
ANR	7696389	Condition	raw	2458:12:112701:112703	7696183	0	True				
ANR	7696390	Identifier	raw		7696183	0					
ANR	7696391	CompoundStatement		43:17:2436:2436	7696183	1					
ANR	7696392	ExpressionStatement	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_ycrg [ i ] )"	2459:12:112720:112836	7696183	0	True				
ANR	7696393	CallExpression	"fprintf ( xmlout , ""                <AsNumerator>%d</AsNumerator>\\n"" , j2k_default_tcp -> crg_ycrg [ i ] )"		7696183	0					
ANR	7696394	Callee	fprintf		7696183	0					
ANR	7696395	Identifier	fprintf		7696183	0					
ANR	7696396	ArgumentList	xmlout		7696183	1					
ANR	7696397	Argument	xmlout		7696183	0					
ANR	7696398	Identifier	xmlout		7696183	0					
ANR	7696399	Argument	"""                <AsNumerator>%d</AsNumerator>\\n"""		7696183	1					
ANR	7696400	PrimaryExpression	"""                <AsNumerator>%d</AsNumerator>\\n"""		7696183	0					
ANR	7696401	Argument	j2k_default_tcp -> crg_ycrg [ i ]		7696183	2					
ANR	7696402	ArrayIndexing	j2k_default_tcp -> crg_ycrg [ i ]		7696183	0					
ANR	7696403	PtrMemberAccess	j2k_default_tcp -> crg_ycrg		7696183	0					
ANR	7696404	Identifier	j2k_default_tcp		7696183	0					
ANR	7696405	Identifier	crg_ycrg		7696183	1					
ANR	7696406	Identifier	i		7696183	1					
ANR	7696407	IfStatement	if ( derived )		7696183	7					
ANR	7696408	Condition	derived	2462:12:112860:112866	7696183	0	True				
ANR	7696409	Identifier	derived		7696183	0					
ANR	7696410	CompoundStatement		47:21:2599:2599	7696183	1					
ANR	7696411	ExpressionStatement	"fprintf ( xmlout , ""                <AsPercentage>%f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36 )"	2463:12:112883:113020	7696183	0	True				
ANR	7696412	CallExpression	"fprintf ( xmlout , ""                <AsPercentage>%f</AsPercentage>\\n"" , ( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36 )"		7696183	0					
ANR	7696413	Callee	fprintf		7696183	0					
ANR	7696414	Identifier	fprintf		7696183	0					
ANR	7696415	ArgumentList	xmlout		7696183	1					
ANR	7696416	Argument	xmlout		7696183	0					
ANR	7696417	Identifier	xmlout		7696183	0					
ANR	7696418	Argument	"""                <AsPercentage>%f</AsPercentage>\\n"""		7696183	1					
ANR	7696419	PrimaryExpression	"""                <AsPercentage>%f</AsPercentage>\\n"""		7696183	0					
ANR	7696420	Argument	( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36		7696183	2					
ANR	7696421	MultiplicativeExpression	( ( double ) j2k_default_tcp -> crg_ycrg [ i ] ) / 655.36		7696183	0		/			
ANR	7696422	CastExpression	( double ) j2k_default_tcp -> crg_ycrg [ i ]		7696183	0					
ANR	7696423	CastTarget	double		7696183	0					
ANR	7696424	ArrayIndexing	j2k_default_tcp -> crg_ycrg [ i ]		7696183	1					
ANR	7696425	PtrMemberAccess	j2k_default_tcp -> crg_ycrg		7696183	0					
ANR	7696426	Identifier	j2k_default_tcp		7696183	0					
ANR	7696427	Identifier	crg_ycrg		7696183	1					
ANR	7696428	Identifier	i		7696183	1					
ANR	7696429	PrimaryExpression	655.36		7696183	1					
ANR	7696430	ExpressionStatement	"fprintf ( xmlout , ""              </Ycrg>\\n"" )"	2466:8:113040:113083	7696183	8	True				
ANR	7696431	CallExpression	"fprintf ( xmlout , ""              </Ycrg>\\n"" )"		7696183	0					
ANR	7696432	Callee	fprintf		7696183	0					
ANR	7696433	Identifier	fprintf		7696183	0					
ANR	7696434	ArgumentList	xmlout		7696183	1					
ANR	7696435	Argument	xmlout		7696183	0					
ANR	7696436	Identifier	xmlout		7696183	0					
ANR	7696437	Argument	"""              </Ycrg>\\n"""		7696183	1					
ANR	7696438	PrimaryExpression	"""              </Ycrg>\\n"""		7696183	0					
ANR	7696439	ExpressionStatement	"fprintf ( xmlout , ""            </Component>\\n"" )"	2467:8:113093:113139	7696183	9	True				
ANR	7696440	CallExpression	"fprintf ( xmlout , ""            </Component>\\n"" )"		7696183	0					
ANR	7696441	Callee	fprintf		7696183	0					
ANR	7696442	Identifier	fprintf		7696183	0					
ANR	7696443	ArgumentList	xmlout		7696183	1					
ANR	7696444	Argument	xmlout		7696183	0					
ANR	7696445	Identifier	xmlout		7696183	0					
ANR	7696446	Argument	"""            </Component>\\n"""		7696183	1					
ANR	7696447	PrimaryExpression	"""            </Component>\\n"""		7696183	0					
ANR	7696448	ExpressionStatement	"fprintf ( xmlout , ""          </ComponentRegistration>\\n"" )"	2470:4:113152:113210	7696183	41	True				
ANR	7696449	CallExpression	"fprintf ( xmlout , ""          </ComponentRegistration>\\n"" )"		7696183	0					
ANR	7696450	Callee	fprintf		7696183	0					
ANR	7696451	Identifier	fprintf		7696183	0					
ANR	7696452	ArgumentList	xmlout		7696183	1					
ANR	7696453	Argument	xmlout		7696183	0					
ANR	7696454	Identifier	xmlout		7696183	0					
ANR	7696455	Argument	"""          </ComponentRegistration>\\n"""		7696183	1					
ANR	7696456	PrimaryExpression	"""          </ComponentRegistration>\\n"""		7696183	0					
ANR	7696457	ReturnType	void		7696183	1					
ANR	7696458	Identifier	xml_out_frame_crg		7696183	2					
ANR	7696459	ParameterList	FILE * xmlout		7696183	3					
ANR	7696460	Parameter	FILE * xmlout	2415:23:110255:110266	7696183	0	True				
ANR	7696461	ParameterType	FILE *		7696183	0					
ANR	7696462	Identifier	xmlout		7696183	1					
ANR	7696463	CFGEntryNode	ENTRY		7696183		True				
ANR	7696464	CFGExitNode	EXIT		7696183		True				
ANR	7696465	Symbol	notes		7696183						
ANR	7696466	Symbol	* * j2k_default_tcp		7696183						
ANR	7696467	Symbol	* j2k_default_tcp -> crg_ycrg		7696183						
ANR	7696468	Symbol	* j2k_default_tcp -> crg_xcrg		7696183						
ANR	7696469	Symbol	i		7696183						
ANR	7696470	Symbol	raw		7696183						
ANR	7696471	Symbol	j2k_default_tcp -> crg		7696183						
ANR	7696472	Symbol	xmlout		7696183						
ANR	7696473	Symbol	j2k_default_tcp		7696183						
ANR	7696474	Symbol	j2k_default_tcp -> crg_i		7696183						
ANR	7696475	Symbol	* i		7696183						
ANR	7696476	Symbol	j2k_default_tcp -> crg_xcrg		7696183						
ANR	7696477	Symbol	j2k_default_tcp -> crg_ycrg		7696183						
ANR	7696478	Symbol	derived		7696183						
ANR	7696479	Symbol	* j2k_default_tcp		7696183						
ANR	7696480	Function	xml_out_frame_com	2478:0:113367:114169							
ANR	7696481	FunctionDef	"xml_out_frame_com (FILE * xmlout , opj_tcp_t * tcp)"		7696480	0					
ANR	7696482	CompoundStatement		2479:0:113420:114169	7696480	0					
ANR	7696483	IdentifierDeclStatement	"char spaces [ 13 ] = ""            "" ;"	2483:4:113597:113629	7696480	0	True				
ANR	7696484	IdentifierDecl	"spaces [ 13 ] = ""            """		7696480	0					
ANR	7696485	IdentifierDeclType	char [ 13 ]		7696480	0					
ANR	7696486	Identifier	spaces		7696480	1					
ANR	7696487	PrimaryExpression	13		7696480	2					
ANR	7696488	AssignmentExpression	"spaces [ 13 ] = ""            """		7696480	3		=			
ANR	7696489	Identifier	spaces		7696480	0					
ANR	7696490	PrimaryExpression	"""            """		7696480	1					
ANR	7696491	IdentifierDeclStatement	char * s = spaces ;	2484:4:113662:113678	7696480	1	True				
ANR	7696492	IdentifierDecl	* s = spaces		7696480	0					
ANR	7696493	IdentifierDeclType	char *		7696480	0					
ANR	7696494	Identifier	s		7696480	1					
ANR	7696495	AssignmentExpression	* s = spaces		7696480	2		=			
ANR	7696496	Identifier	spaces		7696480	0					
ANR	7696497	Identifier	spaces		7696480	1					
ANR	7696498	IfStatement	if ( tcp == & j2k_default_tcp )		7696480	2					
ANR	7696499	Condition	tcp == & j2k_default_tcp	2485:8:113688:113710	7696480	0	True				
ANR	7696500	EqualityExpression	tcp == & j2k_default_tcp		7696480	0		==			
ANR	7696501	Identifier	tcp		7696480	0					
ANR	7696502	UnaryOperationExpression	& j2k_default_tcp		7696480	1					
ANR	7696503	UnaryOperator	&		7696480	0					
ANR	7696504	Identifier	j2k_default_tcp		7696480	1					
ANR	7696505	CompoundStatement		7:33:292:292	7696480	1					
ANR	7696506	ExpressionStatement	s ++	2486:8:113723:113726	7696480	0	True				
ANR	7696507	PostIncDecOperationExpression	s ++		7696480	0					
ANR	7696508	Identifier	s		7696480	0					
ANR	7696509	IncDec	++		7696480	1					
ANR	7696510	ExpressionStatement	s ++	2487:8:113736:113739	7696480	1	True				
ANR	7696511	PostIncDecOperationExpression	s ++		7696480	0					
ANR	7696512	Identifier	s		7696480	0					
ANR	7696513	IncDec	++		7696480	1					
ANR	7696514	Statement	THIS	2489:0:113784:113787	7696480	3	True				
ANR	7696515	Statement	PSEUDOCODE	2489:5:113789:113798	7696480	4	True				
ANR	7696516	Statement	IMAGINES	2489:16:113800:113807	7696480	5	True				
ANR	7696517	Statement	THESE	2489:25:113809:113813	7696480	6	True				
ANR	7696518	Label	EXIST :	2489:31:113815:113820	7696480	7	True				
ANR	7696519	Identifier	EXIST		7696480	0					
ANR	7696520	Statement	tcp	2490:4:113826:113828	7696480	8	True				
ANR	7696521	Statement	->	2490:7:113829:113830	7696480	9	True				
ANR	7696522	Statement	com	2490:9:113831:113833	7696480	10	True				
ANR	7696523	Statement	","	2490:12:113834:113834	7696480	11	True				
ANR	7696524	Statement	tcp	2490:14:113836:113838	7696480	12	True				
ANR	7696525	Statement	->	2490:17:113839:113840	7696480	13	True				
ANR	7696526	Statement	com_len	2490:19:113841:113847	7696480	14	True				
ANR	7696527	Statement	","	2490:26:113848:113848	7696480	15	True				
ANR	7696528	Statement	tcp	2490:28:113850:113852	7696480	16	True				
ANR	7696529	Statement	->	2490:31:113853:113854	7696480	17	True				
ANR	7696530	Statement	com_data	2490:33:113855:113862	7696480	18	True				
ANR	7696531	Statement	array	2490:42:113864:113868	7696480	19	True				
ANR	7696532	IfStatement	if ( tcp -> com != 1 )		7696480	20					
ANR	7696533	Condition	tcp -> com != 1	2491:8:113878:113890	7696480	0	True				
ANR	7696534	EqualityExpression	tcp -> com != 1		7696480	0		!=			
ANR	7696535	PtrMemberAccess	tcp -> com		7696480	0					
ANR	7696536	Identifier	tcp		7696480	0					
ANR	7696537	Identifier	com		7696480	1					
ANR	7696538	PrimaryExpression	1		7696480	1					
ANR	7696539	CompoundStatement		13:23:472:472	7696480	1					
ANR	7696540	ReturnStatement	return ;	2492:8:113903:113909	7696480	0	True				
ANR	7696541	ExpressionStatement	"fprintf ( xmlout , ""%s<Comment Marker=\\""COM\\"">\\n"" , s )"	2495:4:113943:114008	7696480	21	True				
ANR	7696542	CallExpression	"fprintf ( xmlout , ""%s<Comment Marker=\\""COM\\"">\\n"" , s )"		7696480	0					
ANR	7696543	Callee	fprintf		7696480	0					
ANR	7696544	Identifier	fprintf		7696480	0					
ANR	7696545	ArgumentList	xmlout		7696480	1					
ANR	7696546	Argument	xmlout		7696480	0					
ANR	7696547	Identifier	xmlout		7696480	0					
ANR	7696548	Argument	"""%s<Comment Marker=\\""COM\\"">\\n"""		7696480	1					
ANR	7696549	PrimaryExpression	"""%s<Comment Marker=\\""COM\\"">\\n"""		7696480	0					
ANR	7696550	Argument	s		7696480	2					
ANR	7696551	Identifier	s		7696480	0					
ANR	7696552	ExpressionStatement	"xml_out_dump_hex_and_ascii ( tcp -> com_data , tcp -> com_len , s )"	2497:4:114057:114115	7696480	22	True				
ANR	7696553	CallExpression	"xml_out_dump_hex_and_ascii ( tcp -> com_data , tcp -> com_len , s )"		7696480	0					
ANR	7696554	Callee	xml_out_dump_hex_and_ascii		7696480	0					
ANR	7696555	Identifier	xml_out_dump_hex_and_ascii		7696480	0					
ANR	7696556	ArgumentList	tcp -> com_data		7696480	1					
ANR	7696557	Argument	tcp -> com_data		7696480	0					
ANR	7696558	PtrMemberAccess	tcp -> com_data		7696480	0					
ANR	7696559	Identifier	tcp		7696480	0					
ANR	7696560	Identifier	com_data		7696480	1					
ANR	7696561	Argument	tcp -> com_len		7696480	1					
ANR	7696562	PtrMemberAccess	tcp -> com_len		7696480	0					
ANR	7696563	Identifier	tcp		7696480	0					
ANR	7696564	Identifier	com_len		7696480	1					
ANR	7696565	Argument	s		7696480	2					
ANR	7696566	Identifier	s		7696480	0					
ANR	7696567	ExpressionStatement	"fprintf ( xmlout , ""%s</Comment>\\n"" , s )"	2498:4:114121:114160	7696480	23	True				
ANR	7696568	CallExpression	"fprintf ( xmlout , ""%s</Comment>\\n"" , s )"		7696480	0					
ANR	7696569	Callee	fprintf		7696480	0					
ANR	7696570	Identifier	fprintf		7696480	0					
ANR	7696571	ArgumentList	xmlout		7696480	1					
ANR	7696572	Argument	xmlout		7696480	0					
ANR	7696573	Identifier	xmlout		7696480	0					
ANR	7696574	Argument	"""%s</Comment>\\n"""		7696480	1					
ANR	7696575	PrimaryExpression	"""%s</Comment>\\n"""		7696480	0					
ANR	7696576	Argument	s		7696480	2					
ANR	7696577	Identifier	s		7696480	0					
ANR	7696578	ReturnType	void		7696480	1					
ANR	7696579	Identifier	xml_out_frame_com		7696480	2					
ANR	7696580	ParameterList	"FILE * xmlout , opj_tcp_t * tcp"		7696480	3					
ANR	7696581	Parameter	FILE * xmlout	2478:23:113390:113401	7696480	0	True				
ANR	7696582	ParameterType	FILE *		7696480	0					
ANR	7696583	Identifier	xmlout		7696480	1					
ANR	7696584	Parameter	opj_tcp_t * tcp	2478:37:113404:113417	7696480	1	True				
ANR	7696585	ParameterType	opj_tcp_t *		7696480	0					
ANR	7696586	Identifier	tcp		7696480	1					
ANR	7696587	CFGEntryNode	ENTRY		7696480		True				
ANR	7696588	CFGExitNode	EXIT		7696480		True				
ANR	7696589	Symbol	tcp		7696480						
ANR	7696590	Symbol	s		7696480						
ANR	7696591	Symbol	spaces		7696480						
ANR	7696592	Symbol	& j2k_default_tcp		7696480						
ANR	7696593	Symbol	* tcp		7696480						
ANR	7696594	Symbol	tcp -> com		7696480						
ANR	7696595	Symbol	tcp -> com_data		7696480						
ANR	7696596	Symbol	tcp -> com_len		7696480						
ANR	7696597	Symbol	xmlout		7696480						
ANR	7696598	Function	xml_out_dump_hex	2502:0:114172:114655							
ANR	7696599	FunctionDef	"xml_out_dump_hex (FILE * xmlout , char * data , int data_len , char * s)"		7696598	0					
ANR	7696600	CompoundStatement		2503:0:114243:114655	7696598	0					
ANR	7696601	IdentifierDeclStatement	int i ;	2505:4:114294:114299	7696598	0	True				
ANR	7696602	IdentifierDecl	i		7696598	0					
ANR	7696603	IdentifierDeclType	int		7696598	0					
ANR	7696604	Identifier	i		7696598	1					
ANR	7696605	ExpressionStatement	"fprintf ( xmlout , ""%s<AsHex>\\n"" , s )"	2508:4:114389:114425	7696598	1	True				
ANR	7696606	CallExpression	"fprintf ( xmlout , ""%s<AsHex>\\n"" , s )"		7696598	0					
ANR	7696607	Callee	fprintf		7696598	0					
ANR	7696608	Identifier	fprintf		7696598	0					
ANR	7696609	ArgumentList	xmlout		7696598	1					
ANR	7696610	Argument	xmlout		7696598	0					
ANR	7696611	Identifier	xmlout		7696598	0					
ANR	7696612	Argument	"""%s<AsHex>\\n"""		7696598	1					
ANR	7696613	PrimaryExpression	"""%s<AsHex>\\n"""		7696598	0					
ANR	7696614	Argument	s		7696598	2					
ANR	7696615	Identifier	s		7696598	0					
ANR	7696616	ExpressionStatement	"fprintf ( xmlout , ""%s  "" , s )"	2509:4:114431:114460	7696598	2	True				
ANR	7696617	CallExpression	"fprintf ( xmlout , ""%s  "" , s )"		7696598	0					
ANR	7696618	Callee	fprintf		7696598	0					
ANR	7696619	Identifier	fprintf		7696598	0					
ANR	7696620	ArgumentList	xmlout		7696598	1					
ANR	7696621	Argument	xmlout		7696598	0					
ANR	7696622	Identifier	xmlout		7696598	0					
ANR	7696623	Argument	"""%s  """		7696598	1					
ANR	7696624	PrimaryExpression	"""%s  """		7696598	0					
ANR	7696625	Argument	s		7696598	2					
ANR	7696626	Identifier	s		7696598	0					
ANR	7696627	ForStatement	for ( i = 0 ; i < data_len ; i ++ )		7696598	3					
ANR	7696628	ForInit	i = 0 ;	2510:9:114508:114513	7696598	0	True				
ANR	7696629	AssignmentExpression	i = 0		7696598	0		=			
ANR	7696630	Identifier	i		7696598	0					
ANR	7696631	PrimaryExpression	0		7696598	1					
ANR	7696632	Condition	i < data_len	2510:16:114515:114526	7696598	1	True				
ANR	7696633	RelationalExpression	i < data_len		7696598	0		<			
ANR	7696634	Identifier	i		7696598	0					
ANR	7696635	Identifier	data_len		7696598	1					
ANR	7696636	PostIncDecOperationExpression	i ++	2510:30:114529:114531	7696598	2	True				
ANR	7696637	Identifier	i		7696598	0					
ANR	7696638	IncDec	++		7696598	1					
ANR	7696639	CompoundStatement		8:35:290:290	7696598	3					
ANR	7696640	ExpressionStatement	"fprintf ( xmlout , ""%02x"" , data [ i ] )"	2511:8:114571:114604	7696598	0	True				
ANR	7696641	CallExpression	"fprintf ( xmlout , ""%02x"" , data [ i ] )"		7696598	0					
ANR	7696642	Callee	fprintf		7696598	0					
ANR	7696643	Identifier	fprintf		7696598	0					
ANR	7696644	ArgumentList	xmlout		7696598	1					
ANR	7696645	Argument	xmlout		7696598	0					
ANR	7696646	Identifier	xmlout		7696598	0					
ANR	7696647	Argument	"""%02x"""		7696598	1					
ANR	7696648	PrimaryExpression	"""%02x"""		7696598	0					
ANR	7696649	Argument	data [ i ]		7696598	2					
ANR	7696650	ArrayIndexing	data [ i ]		7696598	0					
ANR	7696651	Identifier	data		7696598	0					
ANR	7696652	Identifier	i		7696598	1					
ANR	7696653	ExpressionStatement	"fprintf ( xmlout , ""%s</AsHex>\\n"" , s )"	2513:4:114616:114653	7696598	4	True				
ANR	7696654	CallExpression	"fprintf ( xmlout , ""%s</AsHex>\\n"" , s )"		7696598	0					
ANR	7696655	Callee	fprintf		7696598	0					
ANR	7696656	Identifier	fprintf		7696598	0					
ANR	7696657	ArgumentList	xmlout		7696598	1					
ANR	7696658	Argument	xmlout		7696598	0					
ANR	7696659	Identifier	xmlout		7696598	0					
ANR	7696660	Argument	"""%s</AsHex>\\n"""		7696598	1					
ANR	7696661	PrimaryExpression	"""%s</AsHex>\\n"""		7696598	0					
ANR	7696662	Argument	s		7696598	2					
ANR	7696663	Identifier	s		7696598	0					
ANR	7696664	ReturnType	void		7696598	1					
ANR	7696665	Identifier	xml_out_dump_hex		7696598	2					
ANR	7696666	ParameterList	"FILE * xmlout , char * data , int data_len , char * s"		7696598	3					
ANR	7696667	Parameter	FILE * xmlout	2502:22:114194:114205	7696598	0	True				
ANR	7696668	ParameterType	FILE *		7696598	0					
ANR	7696669	Identifier	xmlout		7696598	1					
ANR	7696670	Parameter	char * data	2502:36:114208:114217	7696598	1	True				
ANR	7696671	ParameterType	char *		7696598	0					
ANR	7696672	Identifier	data		7696598	1					
ANR	7696673	Parameter	int data_len	2502:48:114220:114231	7696598	2	True				
ANR	7696674	ParameterType	int		7696598	0					
ANR	7696675	Identifier	data_len		7696598	1					
ANR	7696676	Parameter	char * s	2502:62:114234:114240	7696598	3	True				
ANR	7696677	ParameterType	char *		7696598	0					
ANR	7696678	Identifier	s		7696598	1					
ANR	7696679	CFGEntryNode	ENTRY		7696598		True				
ANR	7696680	CFGExitNode	EXIT		7696598		True				
ANR	7696681	Symbol	s		7696598						
ANR	7696682	Symbol	* i		7696598						
ANR	7696683	Symbol	data		7696598						
ANR	7696684	Symbol	data_len		7696598						
ANR	7696685	Symbol	i		7696598						
ANR	7696686	Symbol	* data		7696598						
ANR	7696687	Symbol	xmlout		7696598						
ANR	7696688	Function	xml_out_dump_hex_and_ascii	2519:0:114821:116314							
ANR	7696689	FunctionDef	"xml_out_dump_hex_and_ascii (FILE * xmlout , char * data , int data_len , char * s)"		7696688	0					
ANR	7696690	CompoundStatement		2521:0:114934:116314	7696688	0					
ANR	7696691	IdentifierDeclStatement	"int i , j ;"	2523:4:114985:114993	7696688	0	True				
ANR	7696692	IdentifierDecl	i		7696688	0					
ANR	7696693	IdentifierDeclType	int		7696688	0					
ANR	7696694	Identifier	i		7696688	1					
ANR	7696695	IdentifierDecl	j		7696688	1					
ANR	7696696	IdentifierDeclType	int		7696688	0					
ANR	7696697	Identifier	j		7696688	1					
ANR	7696698	IfStatement	if ( raw )		7696688	1					
ANR	7696699	Condition	raw	2525:8:115004:115006	7696688	0	True				
ANR	7696700	Identifier	raw		7696688	0					
ANR	7696701	CompoundStatement		5:13:74:74	7696688	1					
ANR	7696702	ExpressionStatement	"xml_out_dump_hex ( xmlout , data , data_len , s )"	2526:8:115019:115062	7696688	0	True				
ANR	7696703	CallExpression	"xml_out_dump_hex ( xmlout , data , data_len , s )"		7696688	0					
ANR	7696704	Callee	xml_out_dump_hex		7696688	0					
ANR	7696705	Identifier	xml_out_dump_hex		7696688	0					
ANR	7696706	ArgumentList	xmlout		7696688	1					
ANR	7696707	Argument	xmlout		7696688	0					
ANR	7696708	Identifier	xmlout		7696688	0					
ANR	7696709	Argument	data		7696688	1					
ANR	7696710	Identifier	data		7696688	0					
ANR	7696711	Argument	data_len		7696688	2					
ANR	7696712	Identifier	data_len		7696688	0					
ANR	7696713	Argument	s		7696688	3					
ANR	7696714	Identifier	s		7696688	0					
ANR	7696715	IfStatement	if ( derived )		7696688	2					
ANR	7696716	Condition	derived	2529:8:115079:115085	7696688	0	True				
ANR	7696717	Identifier	derived		7696688	0					
ANR	7696718	CompoundStatement		9:17:153:153	7696688	1					
ANR	7696719	ExpressionStatement	"fprintf ( xmlout , ""%s<AsHexAndASCII>\\n"" , s )"	2530:8:115098:115140	7696688	0	True				
ANR	7696720	CallExpression	"fprintf ( xmlout , ""%s<AsHexAndASCII>\\n"" , s )"		7696688	0					
ANR	7696721	Callee	fprintf		7696688	0					
ANR	7696722	Identifier	fprintf		7696688	0					
ANR	7696723	ArgumentList	xmlout		7696688	1					
ANR	7696724	Argument	xmlout		7696688	0					
ANR	7696725	Identifier	xmlout		7696688	0					
ANR	7696726	Argument	"""%s<AsHexAndASCII>\\n"""		7696688	1					
ANR	7696727	PrimaryExpression	"""%s<AsHexAndASCII>\\n"""		7696688	0					
ANR	7696728	Argument	s		7696688	2					
ANR	7696729	Identifier	s		7696688	0					
ANR	7696730	ForStatement	for ( i = 0 ; i < data_len ; )		7696688	1					
ANR	7696731	ForInit	i = 0 ;	2531:13:115155:115160	7696688	0	True				
ANR	7696732	AssignmentExpression	i = 0		7696688	0		=			
ANR	7696733	Identifier	i		7696688	0					
ANR	7696734	PrimaryExpression	0		7696688	1					
ANR	7696735	Condition	i < data_len	2531:20:115162:115173	7696688	1	True				
ANR	7696736	RelationalExpression	i < data_len		7696688	0		<			
ANR	7696737	Identifier	i		7696688	0					
ANR	7696738	Identifier	data_len		7696688	1					
ANR	7696739	CompoundStatement		11:35:242:242	7696688	2					
ANR	7696740	ExpressionStatement	"fprintf ( xmlout , ""%s "" , s )"	2532:12:115191:115216	7696688	0	True				
ANR	7696741	CallExpression	"fprintf ( xmlout , ""%s "" , s )"		7696688	0					
ANR	7696742	Callee	fprintf		7696688	0					
ANR	7696743	Identifier	fprintf		7696688	0					
ANR	7696744	ArgumentList	xmlout		7696688	1					
ANR	7696745	Argument	xmlout		7696688	0					
ANR	7696746	Identifier	xmlout		7696688	0					
ANR	7696747	Argument	"""%s """		7696688	1					
ANR	7696748	PrimaryExpression	"""%s """		7696688	0					
ANR	7696749	Argument	s		7696688	2					
ANR	7696750	Identifier	s		7696688	0					
ANR	7696751	ForStatement	for ( j = 0 ; j < BYTES_PER_DUMP_LINE ; j ++ )		7696688	1					
ANR	7696752	ForInit	j = 0 ;	2534:17:115316:115321	7696688	0	True				
ANR	7696753	AssignmentExpression	j = 0		7696688	0		=			
ANR	7696754	Identifier	j		7696688	0					
ANR	7696755	PrimaryExpression	0		7696688	1					
ANR	7696756	Condition	j < BYTES_PER_DUMP_LINE	2534:24:115323:115345	7696688	1	True				
ANR	7696757	RelationalExpression	j < BYTES_PER_DUMP_LINE		7696688	0		<			
ANR	7696758	Identifier	j		7696688	0					
ANR	7696759	Identifier	BYTES_PER_DUMP_LINE		7696688	1					
ANR	7696760	PostIncDecOperationExpression	j ++	2534:49:115348:115350	7696688	2	True				
ANR	7696761	Identifier	j		7696688	0					
ANR	7696762	IncDec	++		7696688	1					
ANR	7696763	CompoundStatement		14:54:418:418	7696688	3					
ANR	7696764	ExpressionStatement	"fprintf ( xmlout , "" %02x"" , data [ i + j ] )"	2535:16:115388:115425	7696688	0	True				
ANR	7696765	CallExpression	"fprintf ( xmlout , "" %02x"" , data [ i + j ] )"		7696688	0					
ANR	7696766	Callee	fprintf		7696688	0					
ANR	7696767	Identifier	fprintf		7696688	0					
ANR	7696768	ArgumentList	xmlout		7696688	1					
ANR	7696769	Argument	xmlout		7696688	0					
ANR	7696770	Identifier	xmlout		7696688	0					
ANR	7696771	Argument	""" %02x"""		7696688	1					
ANR	7696772	PrimaryExpression	""" %02x"""		7696688	0					
ANR	7696773	Argument	data [ i + j ]		7696688	2					
ANR	7696774	ArrayIndexing	data [ i + j ]		7696688	0					
ANR	7696775	Identifier	data		7696688	0					
ANR	7696776	AdditiveExpression	i + j		7696688	1		+			
ANR	7696777	Identifier	i		7696688	0					
ANR	7696778	Identifier	j		7696688	1					
ANR	7696779	ExpressionStatement	"fprintf ( xmlout , ""  "" )"	2537:43:115484:115506	7696688	2	True				
ANR	7696780	CallExpression	"fprintf ( xmlout , ""  "" )"		7696688	0					
ANR	7696781	Callee	fprintf		7696688	0					
ANR	7696782	Identifier	fprintf		7696688	0					
ANR	7696783	ArgumentList	xmlout		7696688	1					
ANR	7696784	Argument	xmlout		7696688	0					
ANR	7696785	Identifier	xmlout		7696688	0					
ANR	7696786	Argument	"""  """		7696688	1					
ANR	7696787	PrimaryExpression	"""  """		7696688	0					
ANR	7696788	ForStatement	"for ( j = 0 ; j < BYTES_PER_DUMP_LINE ; j ++ , i ++ )"		7696688	3					
ANR	7696789	ForInit	j = 0 ;	2539:17:115564:115569	7696688	0	True				
ANR	7696790	AssignmentExpression	j = 0		7696688	0		=			
ANR	7696791	Identifier	j		7696688	0					
ANR	7696792	PrimaryExpression	0		7696688	1					
ANR	7696793	Condition	j < BYTES_PER_DUMP_LINE	2539:24:115571:115593	7696688	1	True				
ANR	7696794	RelationalExpression	j < BYTES_PER_DUMP_LINE		7696688	0		<			
ANR	7696795	Identifier	j		7696688	0					
ANR	7696796	Identifier	BYTES_PER_DUMP_LINE		7696688	1					
ANR	7696797	Expression	"j ++ , i ++"	2539:49:115596:115603	7696688	2	True				
ANR	7696798	PostIncDecOperationExpression	j ++		7696688	0					
ANR	7696799	Identifier	j		7696688	0					
ANR	7696800	IncDec	++		7696688	1					
ANR	7696801	PostIncDecOperationExpression	i ++		7696688	1					
ANR	7696802	Identifier	i		7696688	0					
ANR	7696803	IncDec	++		7696688	1					
ANR	7696804	CompoundStatement		19:59:671:671	7696688	3					
ANR	7696805	IfStatement	if ( isprint ( ( int ) data [ i ] ) && i < data_len )		7696688	0					
ANR	7696806	Condition	isprint ( ( int ) data [ i ] ) && i < data_len	2540:20:115628:115664	7696688	0	True				
ANR	7696807	AndExpression	isprint ( ( int ) data [ i ] ) && i < data_len		7696688	0		&&			
ANR	7696808	CallExpression	isprint ( ( int ) data [ i ] )		7696688	0					
ANR	7696809	Callee	isprint		7696688	0					
ANR	7696810	Identifier	isprint		7696688	0					
ANR	7696811	ArgumentList	( int ) data [ i ]		7696688	1					
ANR	7696812	Argument	( int ) data [ i ]		7696688	0					
ANR	7696813	CastExpression	( int ) data [ i ]		7696688	0					
ANR	7696814	CastTarget	int		7696688	0					
ANR	7696815	ArrayIndexing	data [ i ]		7696688	1					
ANR	7696816	Identifier	data		7696688	0					
ANR	7696817	Identifier	i		7696688	1					
ANR	7696818	RelationalExpression	i < data_len		7696688	1		<			
ANR	7696819	Identifier	i		7696688	0					
ANR	7696820	Identifier	data_len		7696688	1					
ANR	7696821	CompoundStatement		20:59:732:732	7696688	1					
ANR	7696822	ExpressionStatement	"fprintf ( xmlout , ""%c"" , data [ i ] )"	2541:20:115689:115719	7696688	0	True				
ANR	7696823	CallExpression	"fprintf ( xmlout , ""%c"" , data [ i ] )"		7696688	0					
ANR	7696824	Callee	fprintf		7696688	0					
ANR	7696825	Identifier	fprintf		7696688	0					
ANR	7696826	ArgumentList	xmlout		7696688	1					
ANR	7696827	Argument	xmlout		7696688	0					
ANR	7696828	Identifier	xmlout		7696688	0					
ANR	7696829	Argument	"""%c"""		7696688	1					
ANR	7696830	PrimaryExpression	"""%c"""		7696688	0					
ANR	7696831	Argument	data [ i ]		7696688	2					
ANR	7696832	ArrayIndexing	data [ i ]		7696688	0					
ANR	7696833	Identifier	data		7696688	0					
ANR	7696834	Identifier	i		7696688	1					
ANR	7696835	ElseStatement	else		7696688	0					
ANR	7696836	CompoundStatement		22:23:809:809	7696688	0					
ANR	7696837	ExpressionStatement	"fprintf ( xmlout , "" "" )"	2543:20:115766:115786	7696688	0	True				
ANR	7696838	CallExpression	"fprintf ( xmlout , "" "" )"		7696688	0					
ANR	7696839	Callee	fprintf		7696688	0					
ANR	7696840	Identifier	fprintf		7696688	0					
ANR	7696841	ArgumentList	xmlout		7696688	1					
ANR	7696842	Argument	xmlout		7696688	0					
ANR	7696843	Identifier	xmlout		7696688	0					
ANR	7696844	Argument	""" """		7696688	1					
ANR	7696845	PrimaryExpression	""" """		7696688	0					
ANR	7696846	ExpressionStatement	"fprintf ( xmlout , ""%s</AsHexAndASCII>\\n"" , s )"	2552:8:116263:116306	7696688	2	True				
ANR	7696847	CallExpression	"fprintf ( xmlout , ""%s</AsHexAndASCII>\\n"" , s )"		7696688	0					
ANR	7696848	Callee	fprintf		7696688	0					
ANR	7696849	Identifier	fprintf		7696688	0					
ANR	7696850	ArgumentList	xmlout		7696688	1					
ANR	7696851	Argument	xmlout		7696688	0					
ANR	7696852	Identifier	xmlout		7696688	0					
ANR	7696853	Argument	"""%s</AsHexAndASCII>\\n"""		7696688	1					
ANR	7696854	PrimaryExpression	"""%s</AsHexAndASCII>\\n"""		7696688	0					
ANR	7696855	Argument	s		7696688	2					
ANR	7696856	Identifier	s		7696688	0					
ANR	7696857	ReturnType	void		7696688	1					
ANR	7696858	Identifier	xml_out_dump_hex_and_ascii		7696688	2					
ANR	7696859	ParameterList	"FILE * xmlout , char * data , int data_len , char * s"		7696688	3					
ANR	7696860	Parameter	FILE * xmlout	2519:32:114853:114864	7696688	0	True				
ANR	7696861	ParameterType	FILE *		7696688	0					
ANR	7696862	Identifier	xmlout		7696688	1					
ANR	7696863	Parameter	char * data	2519:46:114867:114876	7696688	1	True				
ANR	7696864	ParameterType	char *		7696688	0					
ANR	7696865	Identifier	data		7696688	1					
ANR	7696866	Parameter	int data_len	2519:58:114879:114890	7696688	2	True				
ANR	7696867	ParameterType	int		7696688	0					
ANR	7696868	Identifier	data_len		7696688	1					
ANR	7696869	Parameter	char * s	2520:32:114925:114931	7696688	3	True				
ANR	7696870	ParameterType	char *		7696688	0					
ANR	7696871	Identifier	s		7696688	1					
ANR	7696872	CFGEntryNode	ENTRY		7696688		True				
ANR	7696873	CFGExitNode	EXIT		7696688		True				
ANR	7696874	Symbol	data		7696688						
ANR	7696875	Symbol	BYTES_PER_DUMP_LINE		7696688						
ANR	7696876	Symbol	data_len		7696688						
ANR	7696877	Symbol	isprint		7696688						
ANR	7696878	Symbol	i		7696688						
ANR	7696879	Symbol	raw		7696688						
ANR	7696880	Symbol	j		7696688						
ANR	7696881	Symbol	xmlout		7696688						
ANR	7696882	Symbol	s		7696688						
ANR	7696883	Symbol	* i		7696688						
ANR	7696884	Symbol	* j		7696688						
ANR	7696885	Symbol	derived		7696688						
ANR	7696886	Symbol	* data		7696688						
ANR	7696887	Function	xml_out_frame_jp2h	2559:0:116339:122850							
ANR	7696888	FunctionDef	"xml_out_frame_jp2h (FILE * xmlout , opj_jp2_t * jp2_struct)"		7696887	0					
ANR	7696889	CompoundStatement		2560:0:116420:122850	7696887	0					
ANR	7696890	IdentifierDeclStatement	int i ;	2562:4:116482:116487	7696887	0	True				
ANR	7696891	IdentifierDecl	i		7696887	0					
ANR	7696892	IdentifierDeclType	int		7696887	0					
ANR	7696893	Identifier	i		7696887	1					
ANR	7696894	ExpressionStatement	"fprintf ( xmlout , ""              <JP2Header BoxType=\\""jp2h\\"">\\n"" )"	2564:4:116494:116562	7696887	1	True				
ANR	7696895	CallExpression	"fprintf ( xmlout , ""              <JP2Header BoxType=\\""jp2h\\"">\\n"" )"		7696887	0					
ANR	7696896	Callee	fprintf		7696887	0					
ANR	7696897	Identifier	fprintf		7696887	0					
ANR	7696898	ArgumentList	xmlout		7696887	1					
ANR	7696899	Argument	xmlout		7696887	0					
ANR	7696900	Identifier	xmlout		7696887	0					
ANR	7696901	Argument	"""              <JP2Header BoxType=\\""jp2h\\"">\\n"""		7696887	1					
ANR	7696902	PrimaryExpression	"""              <JP2Header BoxType=\\""jp2h\\"">\\n"""		7696887	0					
ANR	7696903	ExpressionStatement	"fprintf ( xmlout , ""                <ImageHeader BoxType=\\""ihdr\\"">\\n"" )"	2567:4:116614:116686	7696887	2	True				
ANR	7696904	CallExpression	"fprintf ( xmlout , ""                <ImageHeader BoxType=\\""ihdr\\"">\\n"" )"		7696887	0					
ANR	7696905	Callee	fprintf		7696887	0					
ANR	7696906	Identifier	fprintf		7696887	0					
ANR	7696907	ArgumentList	xmlout		7696887	1					
ANR	7696908	Argument	xmlout		7696887	0					
ANR	7696909	Identifier	xmlout		7696887	0					
ANR	7696910	Argument	"""                <ImageHeader BoxType=\\""ihdr\\"">\\n"""		7696887	1					
ANR	7696911	PrimaryExpression	"""                <ImageHeader BoxType=\\""ihdr\\"">\\n"""		7696887	0					
ANR	7696912	ExpressionStatement	"fprintf ( xmlout , ""                  <HEIGHT>%d</HEIGHT>\\n"" , jp2_struct -> h )"	2568:4:116692:116782	7696887	3	True				
ANR	7696913	CallExpression	"fprintf ( xmlout , ""                  <HEIGHT>%d</HEIGHT>\\n"" , jp2_struct -> h )"		7696887	0					
ANR	7696914	Callee	fprintf		7696887	0					
ANR	7696915	Identifier	fprintf		7696887	0					
ANR	7696916	ArgumentList	xmlout		7696887	1					
ANR	7696917	Argument	xmlout		7696887	0					
ANR	7696918	Identifier	xmlout		7696887	0					
ANR	7696919	Argument	"""                  <HEIGHT>%d</HEIGHT>\\n"""		7696887	1					
ANR	7696920	PrimaryExpression	"""                  <HEIGHT>%d</HEIGHT>\\n"""		7696887	0					
ANR	7696921	Argument	jp2_struct -> h		7696887	2					
ANR	7696922	PtrMemberAccess	jp2_struct -> h		7696887	0					
ANR	7696923	Identifier	jp2_struct		7696887	0					
ANR	7696924	Identifier	h		7696887	1					
ANR	7696925	ExpressionStatement	"fprintf ( xmlout , ""                  <WIDTH>%d</WIDTH>\\n"" , jp2_struct -> w )"	2570:4:116802:116890	7696887	4	True				
ANR	7696926	CallExpression	"fprintf ( xmlout , ""                  <WIDTH>%d</WIDTH>\\n"" , jp2_struct -> w )"		7696887	0					
ANR	7696927	Callee	fprintf		7696887	0					
ANR	7696928	Identifier	fprintf		7696887	0					
ANR	7696929	ArgumentList	xmlout		7696887	1					
ANR	7696930	Argument	xmlout		7696887	0					
ANR	7696931	Identifier	xmlout		7696887	0					
ANR	7696932	Argument	"""                  <WIDTH>%d</WIDTH>\\n"""		7696887	1					
ANR	7696933	PrimaryExpression	"""                  <WIDTH>%d</WIDTH>\\n"""		7696887	0					
ANR	7696934	Argument	jp2_struct -> w		7696887	2					
ANR	7696935	PtrMemberAccess	jp2_struct -> w		7696887	0					
ANR	7696936	Identifier	jp2_struct		7696887	0					
ANR	7696937	Identifier	w		7696887	1					
ANR	7696938	IfStatement	if ( notes )		7696887	5					
ANR	7696939	Condition	notes	2572:8:116914:116918	7696887	0	True				
ANR	7696940	Identifier	notes		7696887	0					
ANR	7696941	CompoundStatement		13:15:500:500	7696887	1					
ANR	7696942	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"" )"	2573:8:116931:117063	7696887	0	True				
ANR	7696943	CallExpression	"fprintf ( xmlout , ""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"" )"		7696887	0					
ANR	7696944	Callee	fprintf		7696887	0					
ANR	7696945	Identifier	fprintf		7696887	0					
ANR	7696946	ArgumentList	xmlout		7696887	1					
ANR	7696947	Argument	xmlout		7696887	0					
ANR	7696948	Identifier	xmlout		7696887	0					
ANR	7696949	Argument	"""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"""		7696887	1					
ANR	7696950	PrimaryExpression	"""                  <!-- HEIGHT here, if 2 fields per image, is of total deinterlaced height. -->\\n"""		7696887	0					
ANR	7696951	ExpressionStatement	"fprintf ( xmlout , ""                  <NC>%d</NC>\\n"" , jp2_struct -> numcomps )"	2576:4:117075:117164	7696887	6	True				
ANR	7696952	CallExpression	"fprintf ( xmlout , ""                  <NC>%d</NC>\\n"" , jp2_struct -> numcomps )"		7696887	0					
ANR	7696953	Callee	fprintf		7696887	0					
ANR	7696954	Identifier	fprintf		7696887	0					
ANR	7696955	ArgumentList	xmlout		7696887	1					
ANR	7696956	Argument	xmlout		7696887	0					
ANR	7696957	Identifier	xmlout		7696887	0					
ANR	7696958	Argument	"""                  <NC>%d</NC>\\n"""		7696887	1					
ANR	7696959	PrimaryExpression	"""                  <NC>%d</NC>\\n"""		7696887	0					
ANR	7696960	Argument	jp2_struct -> numcomps		7696887	2					
ANR	7696961	PtrMemberAccess	jp2_struct -> numcomps		7696887	0					
ANR	7696962	Identifier	jp2_struct		7696887	0					
ANR	7696963	Identifier	numcomps		7696887	1					
ANR	7696964	IfStatement	if ( notes )		7696887	7					
ANR	7696965	Condition	notes	2578:8:117188:117192	7696887	0	True				
ANR	7696966	Identifier	notes		7696887	0					
ANR	7696967	CompoundStatement		19:15:774:774	7696887	1					
ANR	7696968	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- NC is number of components -->\\n"" )"	2579:8:117205:117295	7696887	0	True				
ANR	7696969	CallExpression	"fprintf ( xmlout , ""                  <!-- NC is number of components -->\\n"" )"		7696887	0					
ANR	7696970	Callee	fprintf		7696887	0					
ANR	7696971	Identifier	fprintf		7696887	0					
ANR	7696972	ArgumentList	xmlout		7696887	1					
ANR	7696973	Argument	xmlout		7696887	0					
ANR	7696974	Identifier	xmlout		7696887	0					
ANR	7696975	Argument	"""                  <!-- NC is number of components -->\\n"""		7696887	1					
ANR	7696976	PrimaryExpression	"""                  <!-- NC is number of components -->\\n"""		7696887	0					
ANR	7696977	ExpressionStatement	"fprintf ( xmlout , ""                  <BPC>\\n"" )"	2582:4:117324:117373	7696887	8	True				
ANR	7696978	CallExpression	"fprintf ( xmlout , ""                  <BPC>\\n"" )"		7696887	0					
ANR	7696979	Callee	fprintf		7696887	0					
ANR	7696980	Identifier	fprintf		7696887	0					
ANR	7696981	ArgumentList	xmlout		7696887	1					
ANR	7696982	Argument	xmlout		7696887	0					
ANR	7696983	Identifier	xmlout		7696887	0					
ANR	7696984	Argument	"""                  <BPC>\\n"""		7696887	1					
ANR	7696985	PrimaryExpression	"""                  <BPC>\\n"""		7696887	0					
ANR	7696986	IfStatement	if ( jp2_struct -> bpc == 255 )		7696887	9					
ANR	7696987	Condition	jp2_struct -> bpc == 255	2583:8:117396:117417	7696887	0	True				
ANR	7696988	EqualityExpression	jp2_struct -> bpc == 255		7696887	0		==			
ANR	7696989	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7696990	Identifier	jp2_struct		7696887	0					
ANR	7696991	Identifier	bpc		7696887	1					
ANR	7696992	PrimaryExpression	255		7696887	1					
ANR	7696993	CompoundStatement		24:32:999:999	7696887	1					
ANR	7696994	ExpressionStatement	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"	2584:8:117430:117528	7696887	0	True				
ANR	7696995	CallExpression	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"		7696887	0					
ANR	7696996	Callee	fprintf		7696887	0					
ANR	7696997	Identifier	fprintf		7696887	0					
ANR	7696998	ArgumentList	xmlout		7696887	1					
ANR	7696999	Argument	xmlout		7696887	0					
ANR	7697000	Identifier	xmlout		7696887	0					
ANR	7697001	Argument	"""                    <AsHex>0x%02x</AsHex>\\n"""		7696887	1					
ANR	7697002	PrimaryExpression	"""                    <AsHex>0x%02x</AsHex>\\n"""		7696887	0					
ANR	7697003	Argument	jp2_struct -> bpc		7696887	2					
ANR	7697004	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7697005	Identifier	jp2_struct		7696887	0					
ANR	7697006	Identifier	bpc		7696887	1					
ANR	7697007	IfStatement	if ( notes )		7696887	1					
ANR	7697008	Condition	notes	2586:12:117555:117559	7696887	0	True				
ANR	7697009	Identifier	notes		7696887	0					
ANR	7697010	CompoundStatement		27:19:1141:1141	7696887	1					
ANR	7697011	ExpressionStatement	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"	2587:12:117576:117717	7696887	0	True				
ANR	7697012	CallExpression	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"		7696887	0					
ANR	7697013	Callee	fprintf		7696887	0					
ANR	7697014	Identifier	fprintf		7696887	0					
ANR	7697015	ArgumentList	xmlout		7696887	1					
ANR	7697016	Argument	xmlout		7696887	0					
ANR	7697017	Identifier	xmlout		7696887	0					
ANR	7697018	Argument	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		7696887	1					
ANR	7697019	PrimaryExpression	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		7696887	0					
ANR	7697020	ElseStatement	else		7696887	0					
ANR	7697021	CompoundStatement		31:11:1319:1319	7696887	0					
ANR	7697022	IfStatement	if ( raw )		7696887	0					
ANR	7697023	Condition	raw	2591:12:117769:117771	7696887	0	True				
ANR	7697024	Identifier	raw		7696887	0					
ANR	7697025	CompoundStatement		32:17:1353:1353	7696887	1					
ANR	7697026	ExpressionStatement	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"	2592:12:117788:117888	7696887	0	True				
ANR	7697027	CallExpression	"fprintf ( xmlout , ""                    <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> bpc )"		7696887	0					
ANR	7697028	Callee	fprintf		7696887	0					
ANR	7697029	Identifier	fprintf		7696887	0					
ANR	7697030	ArgumentList	xmlout		7696887	1					
ANR	7697031	Argument	xmlout		7696887	0					
ANR	7697032	Identifier	xmlout		7696887	0					
ANR	7697033	Argument	"""                    <AsHex>0x%02x</AsHex>\\n"""		7696887	1					
ANR	7697034	PrimaryExpression	"""                    <AsHex>0x%02x</AsHex>\\n"""		7696887	0					
ANR	7697035	Argument	jp2_struct -> bpc		7696887	2					
ANR	7697036	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7697037	Identifier	jp2_struct		7696887	0					
ANR	7697038	Identifier	bpc		7696887	1					
ANR	7697039	IfStatement	if ( notes )		7696887	1					
ANR	7697040	Condition	notes	2594:16:117919:117923	7696887	0	True				
ANR	7697041	Identifier	notes		7696887	0					
ANR	7697042	CompoundStatement		35:23:1505:1505	7696887	1					
ANR	7697043	ExpressionStatement	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"	2595:16:117944:118089	7696887	0	True				
ANR	7697044	CallExpression	"fprintf ( xmlout , ""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"" )"		7696887	0					
ANR	7697045	Callee	fprintf		7696887	0					
ANR	7697046	Identifier	fprintf		7696887	0					
ANR	7697047	ArgumentList	xmlout		7696887	1					
ANR	7697048	Argument	xmlout		7696887	0					
ANR	7697049	Identifier	xmlout		7696887	0					
ANR	7697050	Argument	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		7696887	1					
ANR	7697051	PrimaryExpression	"""                    <!-- BPC = 0xff means bits per pixel varies with component; see table below. -->\\n"""		7696887	0					
ANR	7697052	IfStatement	if ( derived )		7696887	1					
ANR	7697053	Condition	derived	2599:12:118127:118133	7696887	0	True				
ANR	7697054	Identifier	derived		7696887	0					
ANR	7697055	CompoundStatement		40:21:1715:1715	7696887	1					
ANR	7697056	ExpressionStatement	"fprintf ( xmlout , ""                    <BitsPerPixel>%d</BitsPerPixel>\\n"" , jp2_struct -> bpc & 0x7f )"	2600:12:118150:118267	7696887	0	True				
ANR	7697057	CallExpression	"fprintf ( xmlout , ""                    <BitsPerPixel>%d</BitsPerPixel>\\n"" , jp2_struct -> bpc & 0x7f )"		7696887	0					
ANR	7697058	Callee	fprintf		7696887	0					
ANR	7697059	Identifier	fprintf		7696887	0					
ANR	7697060	ArgumentList	xmlout		7696887	1					
ANR	7697061	Argument	xmlout		7696887	0					
ANR	7697062	Identifier	xmlout		7696887	0					
ANR	7697063	Argument	"""                    <BitsPerPixel>%d</BitsPerPixel>\\n"""		7696887	1					
ANR	7697064	PrimaryExpression	"""                    <BitsPerPixel>%d</BitsPerPixel>\\n"""		7696887	0					
ANR	7697065	Argument	jp2_struct -> bpc & 0x7f		7696887	2					
ANR	7697066	BitAndExpression	jp2_struct -> bpc & 0x7f		7696887	0		&			
ANR	7697067	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7697068	Identifier	jp2_struct		7696887	0					
ANR	7697069	Identifier	bpc		7696887	1					
ANR	7697070	PrimaryExpression	0x7f		7696887	1					
ANR	7697071	ExpressionStatement	"fprintf ( xmlout , ""                    <Signed>%d</Signed>\\n"" , jp2_struct -> bpc >> 7 )"	2602:12:118281:118384	7696887	1	True				
ANR	7697072	CallExpression	"fprintf ( xmlout , ""                    <Signed>%d</Signed>\\n"" , jp2_struct -> bpc >> 7 )"		7696887	0					
ANR	7697073	Callee	fprintf		7696887	0					
ANR	7697074	Identifier	fprintf		7696887	0					
ANR	7697075	ArgumentList	xmlout		7696887	1					
ANR	7697076	Argument	xmlout		7696887	0					
ANR	7697077	Identifier	xmlout		7696887	0					
ANR	7697078	Argument	"""                    <Signed>%d</Signed>\\n"""		7696887	1					
ANR	7697079	PrimaryExpression	"""                    <Signed>%d</Signed>\\n"""		7696887	0					
ANR	7697080	Argument	jp2_struct -> bpc >> 7		7696887	2					
ANR	7697081	ShiftExpression	jp2_struct -> bpc >> 7		7696887	0		>>			
ANR	7697082	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7697083	Identifier	jp2_struct		7696887	0					
ANR	7697084	Identifier	bpc		7696887	1					
ANR	7697085	PrimaryExpression	7		7696887	1					
ANR	7697086	ExpressionStatement	"fprintf ( xmlout , ""                  </BPC>\\n"" )"	2606:4:118406:118456	7696887	10	True				
ANR	7697087	CallExpression	"fprintf ( xmlout , ""                  </BPC>\\n"" )"		7696887	0					
ANR	7697088	Callee	fprintf		7696887	0					
ANR	7697089	Identifier	fprintf		7696887	0					
ANR	7697090	ArgumentList	xmlout		7696887	1					
ANR	7697091	Argument	xmlout		7696887	0					
ANR	7697092	Identifier	xmlout		7696887	0					
ANR	7697093	Argument	"""                  </BPC>\\n"""		7696887	1					
ANR	7697094	PrimaryExpression	"""                  </BPC>\\n"""		7696887	0					
ANR	7697095	ExpressionStatement	"fprintf ( xmlout , ""                  <C>%d</C>\\n"" , jp2_struct -> C )"	2607:4:118462:118542	7696887	11	True				
ANR	7697096	CallExpression	"fprintf ( xmlout , ""                  <C>%d</C>\\n"" , jp2_struct -> C )"		7696887	0					
ANR	7697097	Callee	fprintf		7696887	0					
ANR	7697098	Identifier	fprintf		7696887	0					
ANR	7697099	ArgumentList	xmlout		7696887	1					
ANR	7697100	Argument	xmlout		7696887	0					
ANR	7697101	Identifier	xmlout		7696887	0					
ANR	7697102	Argument	"""                  <C>%d</C>\\n"""		7696887	1					
ANR	7697103	PrimaryExpression	"""                  <C>%d</C>\\n"""		7696887	0					
ANR	7697104	Argument	jp2_struct -> C		7696887	2					
ANR	7697105	PtrMemberAccess	jp2_struct -> C		7696887	0					
ANR	7697106	Identifier	jp2_struct		7696887	0					
ANR	7697107	Identifier	C		7696887	1					
ANR	7697108	IfStatement	if ( notes )		7696887	12					
ANR	7697109	Condition	notes	2609:8:118565:118569	7696887	0	True				
ANR	7697110	Identifier	notes		7696887	0					
ANR	7697111	CompoundStatement		50:15:2151:2151	7696887	1					
ANR	7697112	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"" )"	2610:8:118582:118700	7696887	0	True				
ANR	7697113	CallExpression	"fprintf ( xmlout , ""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"" )"		7696887	0					
ANR	7697114	Callee	fprintf		7696887	0					
ANR	7697115	Identifier	fprintf		7696887	0					
ANR	7697116	ArgumentList	xmlout		7696887	1					
ANR	7697117	Argument	xmlout		7696887	0					
ANR	7697118	Identifier	xmlout		7696887	0					
ANR	7697119	Argument	"""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"""		7696887	1					
ANR	7697120	PrimaryExpression	"""                  <!-- C is compression type.  Only \\""7\\"" is allowed to date. -->\\n"""		7696887	0					
ANR	7697121	ExpressionStatement	"fprintf ( xmlout , ""                  <UnkC>%d</UnkC>\\n"" , jp2_struct -> UnkC )"	2613:4:118729:118818	7696887	13	True				
ANR	7697122	CallExpression	"fprintf ( xmlout , ""                  <UnkC>%d</UnkC>\\n"" , jp2_struct -> UnkC )"		7696887	0					
ANR	7697123	Callee	fprintf		7696887	0					
ANR	7697124	Identifier	fprintf		7696887	0					
ANR	7697125	ArgumentList	xmlout		7696887	1					
ANR	7697126	Argument	xmlout		7696887	0					
ANR	7697127	Identifier	xmlout		7696887	0					
ANR	7697128	Argument	"""                  <UnkC>%d</UnkC>\\n"""		7696887	1					
ANR	7697129	PrimaryExpression	"""                  <UnkC>%d</UnkC>\\n"""		7696887	0					
ANR	7697130	Argument	jp2_struct -> UnkC		7696887	2					
ANR	7697131	PtrMemberAccess	jp2_struct -> UnkC		7696887	0					
ANR	7697132	Identifier	jp2_struct		7696887	0					
ANR	7697133	Identifier	UnkC		7696887	1					
ANR	7697134	IfStatement	if ( notes )		7696887	14					
ANR	7697135	Condition	notes	2615:8:118841:118845	7696887	0	True				
ANR	7697136	Identifier	notes		7696887	0					
ANR	7697137	CompoundStatement		56:15:2427:2427	7696887	1					
ANR	7697138	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"" )"	2616:8:118858:119002	7696887	0	True				
ANR	7697139	CallExpression	"fprintf ( xmlout , ""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"" )"		7696887	0					
ANR	7697140	Callee	fprintf		7696887	0					
ANR	7697141	Identifier	fprintf		7696887	0					
ANR	7697142	ArgumentList	xmlout		7696887	1					
ANR	7697143	Argument	xmlout		7696887	0					
ANR	7697144	Identifier	xmlout		7696887	0					
ANR	7697145	Argument	"""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"""		7696887	1					
ANR	7697146	PrimaryExpression	"""                  <!-- Colourspace Unknown. 1 = unknown, 0 = known (e.g., colourspace spec is accurate) -->\\n"""		7696887	0					
ANR	7697147	ExpressionStatement	"fprintf ( xmlout , ""                  <IPR>%d</IPR>\\n"" , jp2_struct -> IPR )"	2619:4:119030:119116	7696887	15	True				
ANR	7697148	CallExpression	"fprintf ( xmlout , ""                  <IPR>%d</IPR>\\n"" , jp2_struct -> IPR )"		7696887	0					
ANR	7697149	Callee	fprintf		7696887	0					
ANR	7697150	Identifier	fprintf		7696887	0					
ANR	7697151	ArgumentList	xmlout		7696887	1					
ANR	7697152	Argument	xmlout		7696887	0					
ANR	7697153	Identifier	xmlout		7696887	0					
ANR	7697154	Argument	"""                  <IPR>%d</IPR>\\n"""		7696887	1					
ANR	7697155	PrimaryExpression	"""                  <IPR>%d</IPR>\\n"""		7696887	0					
ANR	7697156	Argument	jp2_struct -> IPR		7696887	2					
ANR	7697157	PtrMemberAccess	jp2_struct -> IPR		7696887	0					
ANR	7697158	Identifier	jp2_struct		7696887	0					
ANR	7697159	Identifier	IPR		7696887	1					
ANR	7697160	IfStatement	if ( notes )		7696887	16					
ANR	7697161	Condition	notes	2621:8:119139:119143	7696887	0	True				
ANR	7697162	Identifier	notes		7696887	0					
ANR	7697163	CompoundStatement		62:15:2725:2725	7696887	1					
ANR	7697164	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"" )"	2622:8:119156:119289	7696887	0	True				
ANR	7697165	CallExpression	"fprintf ( xmlout , ""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"" )"		7696887	0					
ANR	7697166	Callee	fprintf		7696887	0					
ANR	7697167	Identifier	fprintf		7696887	0					
ANR	7697168	ArgumentList	xmlout		7696887	1					
ANR	7697169	Argument	xmlout		7696887	0					
ANR	7697170	Identifier	xmlout		7696887	0					
ANR	7697171	Argument	"""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"""		7696887	1					
ANR	7697172	PrimaryExpression	"""                  <!-- IPR is 1 if frame contains an Intellectual Property box; 0 otherwise. -->\\n"""		7696887	0					
ANR	7697173	ExpressionStatement	"fprintf ( xmlout , ""                </ImageHeader>\\n"" )"	2625:4:119318:119374	7696887	17	True				
ANR	7697174	CallExpression	"fprintf ( xmlout , ""                </ImageHeader>\\n"" )"		7696887	0					
ANR	7697175	Callee	fprintf		7696887	0					
ANR	7697176	Identifier	fprintf		7696887	0					
ANR	7697177	ArgumentList	xmlout		7696887	1					
ANR	7697178	Argument	xmlout		7696887	0					
ANR	7697179	Identifier	xmlout		7696887	0					
ANR	7697180	Argument	"""                </ImageHeader>\\n"""		7696887	1					
ANR	7697181	PrimaryExpression	"""                </ImageHeader>\\n"""		7696887	0					
ANR	7697182	IfStatement	if ( jp2_struct -> bpc == 255 )		7696887	18					
ANR	7697183	Condition	jp2_struct -> bpc == 255	2627:8:119385:119406	7696887	0	True				
ANR	7697184	EqualityExpression	jp2_struct -> bpc == 255		7696887	0		==			
ANR	7697185	PtrMemberAccess	jp2_struct -> bpc		7696887	0					
ANR	7697186	Identifier	jp2_struct		7696887	0					
ANR	7697187	Identifier	bpc		7696887	1					
ANR	7697188	PrimaryExpression	255		7696887	1					
ANR	7697189	CompoundStatement		68:32:2988:2988	7696887	1					
ANR	7697190	ExpressionStatement	"fprintf ( xmlout , ""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"" )"	2628:8:119419:119494	7696887	0	True				
ANR	7697191	CallExpression	"fprintf ( xmlout , ""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"" )"		7696887	0					
ANR	7697192	Callee	fprintf		7696887	0					
ANR	7697193	Identifier	fprintf		7696887	0					
ANR	7697194	ArgumentList	xmlout		7696887	1					
ANR	7697195	Argument	xmlout		7696887	0					
ANR	7697196	Identifier	xmlout		7696887	0					
ANR	7697197	Argument	"""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"""		7696887	1					
ANR	7697198	PrimaryExpression	"""                <BitsPerComponent BoxType=\\""bpcc\\"">\\n"""		7696887	0					
ANR	7697199	IfStatement	if ( notes )		7696887	1					
ANR	7697200	Condition	notes	2629:12:119508:119512	7696887	0	True				
ANR	7697201	Identifier	notes		7696887	0					
ANR	7697202	CompoundStatement		70:19:3094:3094	7696887	1					
ANR	7697203	ExpressionStatement	"fprintf ( xmlout , ""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"" )"	2630:12:119529:119653	7696887	0	True				
ANR	7697204	CallExpression	"fprintf ( xmlout , ""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"" )"		7696887	0					
ANR	7697205	Callee	fprintf		7696887	0					
ANR	7697206	Identifier	fprintf		7696887	0					
ANR	7697207	ArgumentList	xmlout		7696887	1					
ANR	7697208	Argument	xmlout		7696887	0					
ANR	7697209	Identifier	xmlout		7696887	0					
ANR	7697210	Argument	"""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"""		7696887	1					
ANR	7697211	PrimaryExpression	"""                <!-- Pixel depth (range 1 to 38) is low 7 bits of hex value + 1 -->\\n"""		7696887	0					
ANR	7697212	ForStatement	for ( i = 0 ; i < ( int ) jp2_struct -> numcomps ; i ++ )		7696887	2					
ANR	7697213	ForInit	i = 0 ;	2635:13:119778:119783	7696887	0	True				
ANR	7697214	AssignmentExpression	i = 0		7696887	0		=			
ANR	7697215	Identifier	i		7696887	0					
ANR	7697216	PrimaryExpression	0		7696887	1					
ANR	7697217	Condition	i < ( int ) jp2_struct -> numcomps	2635:20:119785:119813	7696887	1	True				
ANR	7697218	RelationalExpression	i < ( int ) jp2_struct -> numcomps		7696887	0		<			
ANR	7697219	Identifier	i		7696887	0					
ANR	7697220	CastExpression	( int ) jp2_struct -> numcomps		7696887	1					
ANR	7697221	CastTarget	int		7696887	0					
ANR	7697222	PtrMemberAccess	jp2_struct -> numcomps		7696887	1					
ANR	7697223	Identifier	jp2_struct		7696887	0					
ANR	7697224	Identifier	numcomps		7696887	1					
ANR	7697225	PostIncDecOperationExpression	i ++	2635:51:119816:119818	7696887	2	True				
ANR	7697226	Identifier	i		7696887	0					
ANR	7697227	IncDec	++		7696887	1					
ANR	7697228	CompoundStatement		76:56:3400:3400	7696887	3					
ANR	7697229	IfStatement	if ( raw )		7696887	0					
ANR	7697230	Condition	raw	2636:16:119839:119841	7696887	0	True				
ANR	7697231	Identifier	raw		7696887	0					
ANR	7697232	CompoundStatement		77:21:3423:3423	7696887	1					
ANR	7697233	ExpressionStatement	"fprintf ( xmlout , ""                  <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> comps [ i ] . bpcc )"	2637:16:119862:119973	7696887	0	True				
ANR	7697234	CallExpression	"fprintf ( xmlout , ""                  <AsHex>0x%02x</AsHex>\\n"" , jp2_struct -> comps [ i ] . bpcc )"		7696887	0					
ANR	7697235	Callee	fprintf		7696887	0					
ANR	7697236	Identifier	fprintf		7696887	0					
ANR	7697237	ArgumentList	xmlout		7696887	1					
ANR	7697238	Argument	xmlout		7696887	0					
ANR	7697239	Identifier	xmlout		7696887	0					
ANR	7697240	Argument	"""                  <AsHex>0x%02x</AsHex>\\n"""		7696887	1					
ANR	7697241	PrimaryExpression	"""                  <AsHex>0x%02x</AsHex>\\n"""		7696887	0					
ANR	7697242	Argument	jp2_struct -> comps [ i ] . bpcc		7696887	2					
ANR	7697243	MemberAccess	jp2_struct -> comps [ i ] . bpcc		7696887	0					
ANR	7697244	ArrayIndexing	jp2_struct -> comps [ i ]		7696887	0					
ANR	7697245	PtrMemberAccess	jp2_struct -> comps		7696887	0					
ANR	7697246	Identifier	jp2_struct		7696887	0					
ANR	7697247	Identifier	comps		7696887	1					
ANR	7697248	Identifier	i		7696887	1					
ANR	7697249	Identifier	bpcc		7696887	1					
ANR	7697250	IfStatement	if ( derived )		7696887	1					
ANR	7697251	Condition	derived	2640:16:120021:120027	7696887	0	True				
ANR	7697252	Identifier	derived		7696887	0					
ANR	7697253	CompoundStatement		81:25:3609:3609	7696887	1					
ANR	7697254	ExpressionStatement	"fprintf ( xmlout , ""                  <BitsPerPixel>%d</BitsPerPixel>\\n"" , ( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1 )"	2641:16:120048:120182	7696887	0	True				
ANR	7697255	CallExpression	"fprintf ( xmlout , ""                  <BitsPerPixel>%d</BitsPerPixel>\\n"" , ( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1 )"		7696887	0					
ANR	7697256	Callee	fprintf		7696887	0					
ANR	7697257	Identifier	fprintf		7696887	0					
ANR	7697258	ArgumentList	xmlout		7696887	1					
ANR	7697259	Argument	xmlout		7696887	0					
ANR	7697260	Identifier	xmlout		7696887	0					
ANR	7697261	Argument	"""                  <BitsPerPixel>%d</BitsPerPixel>\\n"""		7696887	1					
ANR	7697262	PrimaryExpression	"""                  <BitsPerPixel>%d</BitsPerPixel>\\n"""		7696887	0					
ANR	7697263	Argument	( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1		7696887	2					
ANR	7697264	AdditiveExpression	( jp2_struct -> comps [ i ] . bpcc & 0x7f ) + 1		7696887	0		+			
ANR	7697265	BitAndExpression	jp2_struct -> comps [ i ] . bpcc & 0x7f		7696887	0		&			
ANR	7697266	MemberAccess	jp2_struct -> comps [ i ] . bpcc		7696887	0					
ANR	7697267	ArrayIndexing	jp2_struct -> comps [ i ]		7696887	0					
ANR	7697268	PtrMemberAccess	jp2_struct -> comps		7696887	0					
ANR	7697269	Identifier	jp2_struct		7696887	0					
ANR	7697270	Identifier	comps		7696887	1					
ANR	7697271	Identifier	i		7696887	1					
ANR	7697272	Identifier	bpcc		7696887	1					
ANR	7697273	PrimaryExpression	0x7f		7696887	1					
ANR	7697274	PrimaryExpression	1		7696887	1					
ANR	7697275	ExpressionStatement	"fprintf ( xmlout , ""                  <Signed>%d</Signed>\\n"" , jp2_struct -> comps [ i ] . bpcc >> 7 )"	2643:16:120200:120314	7696887	1	True				
ANR	7697276	CallExpression	"fprintf ( xmlout , ""                  <Signed>%d</Signed>\\n"" , jp2_struct -> comps [ i ] . bpcc >> 7 )"		7696887	0					
ANR	7697277	Callee	fprintf		7696887	0					
ANR	7697278	Identifier	fprintf		7696887	0					
ANR	7697279	ArgumentList	xmlout		7696887	1					
ANR	7697280	Argument	xmlout		7696887	0					
ANR	7697281	Identifier	xmlout		7696887	0					
ANR	7697282	Argument	"""                  <Signed>%d</Signed>\\n"""		7696887	1					
ANR	7697283	PrimaryExpression	"""                  <Signed>%d</Signed>\\n"""		7696887	0					
ANR	7697284	Argument	jp2_struct -> comps [ i ] . bpcc >> 7		7696887	2					
ANR	7697285	ShiftExpression	jp2_struct -> comps [ i ] . bpcc >> 7		7696887	0		>>			
ANR	7697286	MemberAccess	jp2_struct -> comps [ i ] . bpcc		7696887	0					
ANR	7697287	ArrayIndexing	jp2_struct -> comps [ i ]		7696887	0					
ANR	7697288	PtrMemberAccess	jp2_struct -> comps		7696887	0					
ANR	7697289	Identifier	jp2_struct		7696887	0					
ANR	7697290	Identifier	comps		7696887	1					
ANR	7697291	Identifier	i		7696887	1					
ANR	7697292	Identifier	bpcc		7696887	1					
ANR	7697293	PrimaryExpression	7		7696887	1					
ANR	7697294	ExpressionStatement	"fprintf ( xmlout , ""                </BitsPerComponent>\\n"" )"	2647:8:120348:120407	7696887	3	True				
ANR	7697295	CallExpression	"fprintf ( xmlout , ""                </BitsPerComponent>\\n"" )"		7696887	0					
ANR	7697296	Callee	fprintf		7696887	0					
ANR	7697297	Identifier	fprintf		7696887	0					
ANR	7697298	ArgumentList	xmlout		7696887	1					
ANR	7697299	Argument	xmlout		7696887	0					
ANR	7697300	Identifier	xmlout		7696887	0					
ANR	7697301	Argument	"""                </BitsPerComponent>\\n"""		7696887	1					
ANR	7697302	PrimaryExpression	"""                </BitsPerComponent>\\n"""		7696887	0					
ANR	7697303	ExpressionStatement	"fprintf ( xmlout , ""                <ColourSpecification BoxType=\\""colr\\"">\\n"" )"	2651:4:120464:120551	7696887	19	True				
ANR	7697304	CallExpression	"fprintf ( xmlout , ""                <ColourSpecification BoxType=\\""colr\\"">\\n"" )"		7696887	0					
ANR	7697305	Callee	fprintf		7696887	0					
ANR	7697306	Identifier	fprintf		7696887	0					
ANR	7697307	ArgumentList	xmlout		7696887	1					
ANR	7697308	Argument	xmlout		7696887	0					
ANR	7697309	Identifier	xmlout		7696887	0					
ANR	7697310	Argument	"""                <ColourSpecification BoxType=\\""colr\\"">\\n"""		7696887	1					
ANR	7697311	PrimaryExpression	"""                <ColourSpecification BoxType=\\""colr\\"">\\n"""		7696887	0					
ANR	7697312	ExpressionStatement	"fprintf ( xmlout , ""                  <METH>%d</METH>\\n"" , jp2_struct -> meth )"	2653:4:120557:120646	7696887	20	True				
ANR	7697313	CallExpression	"fprintf ( xmlout , ""                  <METH>%d</METH>\\n"" , jp2_struct -> meth )"		7696887	0					
ANR	7697314	Callee	fprintf		7696887	0					
ANR	7697315	Identifier	fprintf		7696887	0					
ANR	7697316	ArgumentList	xmlout		7696887	1					
ANR	7697317	Argument	xmlout		7696887	0					
ANR	7697318	Identifier	xmlout		7696887	0					
ANR	7697319	Argument	"""                  <METH>%d</METH>\\n"""		7696887	1					
ANR	7697320	PrimaryExpression	"""                  <METH>%d</METH>\\n"""		7696887	0					
ANR	7697321	Argument	jp2_struct -> meth		7696887	2					
ANR	7697322	PtrMemberAccess	jp2_struct -> meth		7696887	0					
ANR	7697323	Identifier	jp2_struct		7696887	0					
ANR	7697324	Identifier	meth		7696887	1					
ANR	7697325	IfStatement	if ( notes )		7696887	21					
ANR	7697326	Condition	notes	2655:8:120669:120673	7696887	0	True				
ANR	7697327	Identifier	notes		7696887	0					
ANR	7697328	CompoundStatement		96:15:4255:4255	7696887	1					
ANR	7697329	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Valid values of specification method so far: -->\\n"" )"	2656:8:120686:120794	7696887	0	True				
ANR	7697330	CallExpression	"fprintf ( xmlout , ""                  <!-- Valid values of specification method so far: -->\\n"" )"		7696887	0					
ANR	7697331	Callee	fprintf		7696887	0					
ANR	7697332	Identifier	fprintf		7696887	0					
ANR	7697333	ArgumentList	xmlout		7696887	1					
ANR	7697334	Argument	xmlout		7696887	0					
ANR	7697335	Identifier	xmlout		7696887	0					
ANR	7697336	Argument	"""                  <!-- Valid values of specification method so far: -->\\n"""		7696887	1					
ANR	7697337	PrimaryExpression	"""                  <!-- Valid values of specification method so far: -->\\n"""		7696887	0					
ANR	7697338	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"" )"	2658:8:120804:120913	7696887	1	True				
ANR	7697339	CallExpression	"fprintf ( xmlout , ""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"" )"		7696887	0					
ANR	7697340	Callee	fprintf		7696887	0					
ANR	7697341	Identifier	fprintf		7696887	0					
ANR	7697342	ArgumentList	xmlout		7696887	1					
ANR	7697343	Argument	xmlout		7696887	0					
ANR	7697344	Identifier	xmlout		7696887	0					
ANR	7697345	Argument	"""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"""		7696887	1					
ANR	7697346	PrimaryExpression	"""                  <!--   1 = Enumerated colourspace, in EnumCS field -->\\n"""		7696887	0					
ANR	7697347	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"" )"	2660:8:120923:121033	7696887	2	True				
ANR	7697348	CallExpression	"fprintf ( xmlout , ""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"" )"		7696887	0					
ANR	7697349	Callee	fprintf		7696887	0					
ANR	7697350	Identifier	fprintf		7696887	0					
ANR	7697351	ArgumentList	xmlout		7696887	1					
ANR	7697352	Argument	xmlout		7696887	0					
ANR	7697353	Identifier	xmlout		7696887	0					
ANR	7697354	Argument	"""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"""		7696887	1					
ANR	7697355	PrimaryExpression	"""                  <!--   2 = Restricted ICC Profile, in PROFILE field -->\\n"""		7696887	0					
ANR	7697356	ExpressionStatement	"fprintf ( xmlout , ""                  <PREC>%d</PREC>\\n"" , jp2_struct -> precedence )"	2663:4:121045:121140	7696887	22	True				
ANR	7697357	CallExpression	"fprintf ( xmlout , ""                  <PREC>%d</PREC>\\n"" , jp2_struct -> precedence )"		7696887	0					
ANR	7697358	Callee	fprintf		7696887	0					
ANR	7697359	Identifier	fprintf		7696887	0					
ANR	7697360	ArgumentList	xmlout		7696887	1					
ANR	7697361	Argument	xmlout		7696887	0					
ANR	7697362	Identifier	xmlout		7696887	0					
ANR	7697363	Argument	"""                  <PREC>%d</PREC>\\n"""		7696887	1					
ANR	7697364	PrimaryExpression	"""                  <PREC>%d</PREC>\\n"""		7696887	0					
ANR	7697365	Argument	jp2_struct -> precedence		7696887	2					
ANR	7697366	PtrMemberAccess	jp2_struct -> precedence		7696887	0					
ANR	7697367	Identifier	jp2_struct		7696887	0					
ANR	7697368	Identifier	precedence		7696887	1					
ANR	7697369	IfStatement	if ( notes )		7696887	23					
ANR	7697370	Condition	notes	2665:8:121163:121167	7696887	0	True				
ANR	7697371	Identifier	notes		7696887	0					
ANR	7697372	CompoundStatement		106:15:4749:4749	7696887	1					
ANR	7697373	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of precedence so far. -->\\n"" )"	2666:8:121180:121287	7696887	0	True				
ANR	7697374	CallExpression	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of precedence so far. -->\\n"" )"		7696887	0					
ANR	7697375	Callee	fprintf		7696887	0					
ANR	7697376	Identifier	fprintf		7696887	0					
ANR	7697377	ArgumentList	xmlout		7696887	1					
ANR	7697378	Argument	xmlout		7696887	0					
ANR	7697379	Identifier	xmlout		7696887	0					
ANR	7697380	Argument	"""                  <!-- 0 is only valid value of precedence so far. -->\\n"""		7696887	1					
ANR	7697381	PrimaryExpression	"""                  <!-- 0 is only valid value of precedence so far. -->\\n"""		7696887	0					
ANR	7697382	ExpressionStatement	"fprintf ( xmlout , ""                  <APPROX>%d</APPROX>\\n"" , jp2_struct -> approx )"	2669:4:121299:121394	7696887	24	True				
ANR	7697383	CallExpression	"fprintf ( xmlout , ""                  <APPROX>%d</APPROX>\\n"" , jp2_struct -> approx )"		7696887	0					
ANR	7697384	Callee	fprintf		7696887	0					
ANR	7697385	Identifier	fprintf		7696887	0					
ANR	7697386	ArgumentList	xmlout		7696887	1					
ANR	7697387	Argument	xmlout		7696887	0					
ANR	7697388	Identifier	xmlout		7696887	0					
ANR	7697389	Argument	"""                  <APPROX>%d</APPROX>\\n"""		7696887	1					
ANR	7697390	PrimaryExpression	"""                  <APPROX>%d</APPROX>\\n"""		7696887	0					
ANR	7697391	Argument	jp2_struct -> approx		7696887	2					
ANR	7697392	PtrMemberAccess	jp2_struct -> approx		7696887	0					
ANR	7697393	Identifier	jp2_struct		7696887	0					
ANR	7697394	Identifier	approx		7696887	1					
ANR	7697395	IfStatement	if ( notes )		7696887	25					
ANR	7697396	Condition	notes	2671:8:121417:121421	7696887	0	True				
ANR	7697397	Identifier	notes		7696887	0					
ANR	7697398	CompoundStatement		112:15:5003:5003	7696887	1					
ANR	7697399	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"" )"	2672:8:121434:121556	7696887	0	True				
ANR	7697400	CallExpression	"fprintf ( xmlout , ""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"" )"		7696887	0					
ANR	7697401	Callee	fprintf		7696887	0					
ANR	7697402	Identifier	fprintf		7696887	0					
ANR	7697403	ArgumentList	xmlout		7696887	1					
ANR	7697404	Argument	xmlout		7696887	0					
ANR	7697405	Identifier	xmlout		7696887	0					
ANR	7697406	Argument	"""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"""		7696887	1					
ANR	7697407	PrimaryExpression	"""                  <!-- 0 is only valid value of colourspace approximation so far. -->\\n"""		7696887	0					
ANR	7697408	IfStatement	if ( jp2_struct -> meth == 1 )		7696887	26					
ANR	7697409	Condition	jp2_struct -> meth == 1	2676:8:121573:121593	7696887	0	True				
ANR	7697410	EqualityExpression	jp2_struct -> meth == 1		7696887	0		==			
ANR	7697411	PtrMemberAccess	jp2_struct -> meth		7696887	0					
ANR	7697412	Identifier	jp2_struct		7696887	0					
ANR	7697413	Identifier	meth		7696887	1					
ANR	7697414	PrimaryExpression	1		7696887	1					
ANR	7697415	CompoundStatement		117:31:5175:5175	7696887	1					
ANR	7697416	ExpressionStatement	"fprintf ( xmlout , ""                  <EnumCS>%d</EnumCS>\\n"" , jp2_struct -> enumcs )"	2677:8:121606:121703	7696887	0	True				
ANR	7697417	CallExpression	"fprintf ( xmlout , ""                  <EnumCS>%d</EnumCS>\\n"" , jp2_struct -> enumcs )"		7696887	0					
ANR	7697418	Callee	fprintf		7696887	0					
ANR	7697419	Identifier	fprintf		7696887	0					
ANR	7697420	ArgumentList	xmlout		7696887	1					
ANR	7697421	Argument	xmlout		7696887	0					
ANR	7697422	Identifier	xmlout		7696887	0					
ANR	7697423	Argument	"""                  <EnumCS>%d</EnumCS>\\n"""		7696887	1					
ANR	7697424	PrimaryExpression	"""                  <EnumCS>%d</EnumCS>\\n"""		7696887	0					
ANR	7697425	Argument	jp2_struct -> enumcs		7696887	2					
ANR	7697426	PtrMemberAccess	jp2_struct -> enumcs		7696887	0					
ANR	7697427	Identifier	jp2_struct		7696887	0					
ANR	7697428	Identifier	enumcs		7696887	1					
ANR	7697429	IfStatement	if ( notes )		7696887	1					
ANR	7697430	Condition	notes	2679:12:121731:121735	7696887	0	True				
ANR	7697431	Identifier	notes		7696887	0					
ANR	7697432	CompoundStatement		120:19:5317:5317	7696887	1					
ANR	7697433	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"" )"	2680:12:121752:121870	7696887	0	True				
ANR	7697434	CallExpression	"fprintf ( xmlout , ""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"" )"		7696887	0					
ANR	7697435	Callee	fprintf		7696887	0					
ANR	7697436	Identifier	fprintf		7696887	0					
ANR	7697437	ArgumentList	xmlout		7696887	1					
ANR	7697438	Argument	xmlout		7696887	0					
ANR	7697439	Identifier	xmlout		7696887	0					
ANR	7697440	Argument	"""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"""		7696887	1					
ANR	7697441	PrimaryExpression	"""                  <!-- Valid values of enumerated MJ2 colourspace so far: -->\\n"""		7696887	0					
ANR	7697442	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"" )"	2682:12:121884:121991	7696887	1	True				
ANR	7697443	CallExpression	"fprintf ( xmlout , ""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"" )"		7696887	0					
ANR	7697444	Callee	fprintf		7696887	0					
ANR	7697445	Identifier	fprintf		7696887	0					
ANR	7697446	ArgumentList	xmlout		7696887	1					
ANR	7697447	Argument	xmlout		7696887	0					
ANR	7697448	Identifier	xmlout		7696887	0					
ANR	7697449	Argument	"""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"""		7696887	1					
ANR	7697450	PrimaryExpression	"""                  <!--   16: sRGB as defined by IEC 61966-2-1. -->\\n"""		7696887	0					
ANR	7697451	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   17: greyscale (related to sRGB). -->\\n"" )"	2684:12:122005:122107	7696887	2	True				
ANR	7697452	CallExpression	"fprintf ( xmlout , ""                  <!--   17: greyscale (related to sRGB). -->\\n"" )"		7696887	0					
ANR	7697453	Callee	fprintf		7696887	0					
ANR	7697454	Identifier	fprintf		7696887	0					
ANR	7697455	ArgumentList	xmlout		7696887	1					
ANR	7697456	Argument	xmlout		7696887	0					
ANR	7697457	Identifier	xmlout		7696887	0					
ANR	7697458	Argument	"""                  <!--   17: greyscale (related to sRGB). -->\\n"""		7696887	1					
ANR	7697459	PrimaryExpression	"""                  <!--   17: greyscale (related to sRGB). -->\\n"""		7696887	0					
ANR	7697460	ExpressionStatement	"fprintf ( xmlout , ""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"" )"	2686:12:122121:122229	7696887	3	True				
ANR	7697461	CallExpression	"fprintf ( xmlout , ""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"" )"		7696887	0					
ANR	7697462	Callee	fprintf		7696887	0					
ANR	7697463	Identifier	fprintf		7696887	0					
ANR	7697464	ArgumentList	xmlout		7696887	1					
ANR	7697465	Argument	xmlout		7696887	0					
ANR	7697466	Identifier	xmlout		7696887	0					
ANR	7697467	Argument	"""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"""		7696887	1					
ANR	7697468	PrimaryExpression	"""                  <!--   18: sRGB YCC (from JPEG 2000 Part II). -->\\n"""		7696887	0					
ANR	7697469	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- (Additional JPX values are defined in Part II). -->\\n"" )"	2688:12:122243:122358	7696887	4	True				
ANR	7697470	CallExpression	"fprintf ( xmlout , ""                  <!-- (Additional JPX values are defined in Part II). -->\\n"" )"		7696887	0					
ANR	7697471	Callee	fprintf		7696887	0					
ANR	7697472	Identifier	fprintf		7696887	0					
ANR	7697473	ArgumentList	xmlout		7696887	1					
ANR	7697474	Argument	xmlout		7696887	0					
ANR	7697475	Identifier	xmlout		7696887	0					
ANR	7697476	Argument	"""                  <!-- (Additional JPX values are defined in Part II). -->\\n"""		7696887	1					
ANR	7697477	PrimaryExpression	"""                  <!-- (Additional JPX values are defined in Part II). -->\\n"""		7696887	0					
ANR	7697478	ElseStatement	else		7696887	0					
ANR	7697479	IfStatement	if ( notes )		7696887	0					
ANR	7697480	Condition	notes	2691:15:122385:122389	7696887	0	True				
ANR	7697481	Identifier	notes		7696887	0					
ANR	7697482	CompoundStatement		132:22:5971:5971	7696887	1					
ANR	7697483	ExpressionStatement	"fprintf ( xmlout , ""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"" )"	2692:8:122402:122524	7696887	0	True				
ANR	7697484	CallExpression	"fprintf ( xmlout , ""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"" )"		7696887	0					
ANR	7697485	Callee	fprintf		7696887	0					
ANR	7697486	Identifier	fprintf		7696887	0					
ANR	7697487	ArgumentList	xmlout		7696887	1					
ANR	7697488	Argument	xmlout		7696887	0					
ANR	7697489	Identifier	xmlout		7696887	0					
ANR	7697490	Argument	"""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"""		7696887	1					
ANR	7697491	PrimaryExpression	"""                  <!-- PROFILE is not handled by current OpenJPEG implementation. -->\\n"""		7696887	0					
ANR	7697492	ExpressionStatement	"fprintf ( xmlout , ""                </ColourSpecification>\\n"" )"	2696:4:122585:122649	7696887	27	True				
ANR	7697493	CallExpression	"fprintf ( xmlout , ""                </ColourSpecification>\\n"" )"		7696887	0					
ANR	7697494	Callee	fprintf		7696887	0					
ANR	7697495	Identifier	fprintf		7696887	0					
ANR	7697496	ArgumentList	xmlout		7696887	1					
ANR	7697497	Argument	xmlout		7696887	0					
ANR	7697498	Identifier	xmlout		7696887	0					
ANR	7697499	Argument	"""                </ColourSpecification>\\n"""		7696887	1					
ANR	7697500	PrimaryExpression	"""                </ColourSpecification>\\n"""		7696887	0					
ANR	7697501	ExpressionStatement	"fprintf ( xmlout , ""              </JP2Header>\\n"" )"	2704:4:122796:122848	7696887	28	True				
ANR	7697502	CallExpression	"fprintf ( xmlout , ""              </JP2Header>\\n"" )"		7696887	0					
ANR	7697503	Callee	fprintf		7696887	0					
ANR	7697504	Identifier	fprintf		7696887	0					
ANR	7697505	ArgumentList	xmlout		7696887	1					
ANR	7697506	Argument	xmlout		7696887	0					
ANR	7697507	Identifier	xmlout		7696887	0					
ANR	7697508	Argument	"""              </JP2Header>\\n"""		7696887	1					
ANR	7697509	PrimaryExpression	"""              </JP2Header>\\n"""		7696887	0					
ANR	7697510	ReturnType	void		7696887	1					
ANR	7697511	Identifier	xml_out_frame_jp2h		7696887	2					
ANR	7697512	ParameterList	"FILE * xmlout , opj_jp2_t * jp2_struct"		7696887	3					
ANR	7697513	Parameter	FILE * xmlout	2559:24:116363:116374	7696887	0	True				
ANR	7697514	ParameterType	FILE *		7696887	0					
ANR	7697515	Identifier	xmlout		7696887	1					
ANR	7697516	Parameter	opj_jp2_t * jp2_struct	2559:38:116377:116397	7696887	1	True				
ANR	7697517	ParameterType	opj_jp2_t *		7696887	0					
ANR	7697518	Identifier	jp2_struct		7696887	1					
ANR	7697519	CFGEntryNode	ENTRY		7696887		True				
ANR	7697520	CFGExitNode	EXIT		7696887		True				
ANR	7697521	Symbol	notes		7696887						
ANR	7697522	Symbol	jp2_struct -> bpc		7696887						
ANR	7697523	Symbol	jp2_struct -> comps [ i ] . bpcc		7696887						
ANR	7697524	Symbol	jp2_struct -> IPR		7696887						
ANR	7697525	Symbol	i		7696887						
ANR	7697526	Symbol	raw		7696887						
ANR	7697527	Symbol	jp2_struct -> comps		7696887						
ANR	7697528	Symbol	* jp2_struct		7696887						
ANR	7697529	Symbol	jp2_struct -> UnkC		7696887						
ANR	7697530	Symbol	* jp2_struct -> comps		7696887						
ANR	7697531	Symbol	* * jp2_struct		7696887						
ANR	7697532	Symbol	jp2_struct -> enumcs		7696887						
ANR	7697533	Symbol	jp2_struct -> h		7696887						
ANR	7697534	Symbol	jp2_struct -> meth		7696887						
ANR	7697535	Symbol	xmlout		7696887						
ANR	7697536	Symbol	jp2_struct -> precedence		7696887						
ANR	7697537	Symbol	jp2_struct		7696887						
ANR	7697538	Symbol	jp2_struct -> C		7696887						
ANR	7697539	Symbol	* i		7696887						
ANR	7697540	Symbol	jp2_struct -> numcomps		7696887						
ANR	7697541	Symbol	derived		7696887						
ANR	7697542	Symbol	jp2_struct -> approx		7696887						
ANR	7697543	Symbol	jp2_struct -> w		7696887						
ANR	7697544	Function	xml_out_frame_jp2i	2710:41:122958:123784							
ANR	7697545	FunctionDef	"xml_out_frame_jp2i (FILE * xmlout , opj_cp_t * cp)"		7697544	0					
ANR	7697546	CompoundStatement		2712:0:123039:123784	7697544	0					
ANR	7697547	IdentifierDeclStatement	int i ;	2714:4:123113:123118	7697544	0	True				
ANR	7697548	IdentifierDecl	i		7697544	0					
ANR	7697549	IdentifierDeclType	int		7697544	0					
ANR	7697550	Identifier	i		7697544	1					
ANR	7697551	Statement	IMAGE	2715:4:123124:123128	7697544	1	True				
ANR	7697552	Statement	cp	2715:10:123130:123131	7697544	2	True				
ANR	7697553	Statement	->	2715:12:123132:123133	7697544	3	True				
ANR	7697554	Statement	jp2i	2715:14:123134:123137	7697544	4	True				
ANR	7697555	Statement	","	2715:18:123138:123138	7697544	5	True				
ANR	7697556	Statement	cp	2715:20:123140:123141	7697544	6	True				
ANR	7697557	Statement	->	2715:22:123142:123143	7697544	7	True				
ANR	7697558	Statement	jp2i_count	2715:24:123144:123153	7697544	8	True				
ANR	7697559	Statement	","	2715:34:123154:123154	7697544	9	True				
ANR	7697560	Statement	cp	2715:36:123156:123157	7697544	10	True				
ANR	7697561	Statement	->	2715:38:123158:123159	7697544	11	True				
ANR	7697562	Statement	jp2i_data	2715:40:123160:123168	7697544	12	True				
ANR	7697563	Statement	(	2715:49:123169:123169	7697544	13	True				
ANR	7697564	Statement	array	2715:50:123170:123174	7697544	14	True				
ANR	7697565	Statement	of	2715:56:123176:123177	7697544	15	True				
ANR	7697566	Statement	chars	2715:59:123179:123183	7697544	16	True				
ANR	7697567	Statement	)	2715:64:123184:123184	7697544	17	True				
ANR	7697568	Statement	","	2715:65:123185:123185	7697544	18	True				
ANR	7697569	Statement	cp	2716:10:123197:123198	7697544	19	True				
ANR	7697570	Statement	->	2716:12:123199:123200	7697544	20	True				
ANR	7697571	Statement	cp2i_len	2716:14:123201:123208	7697544	21	True				
ANR	7697572	Statement	(	2716:22:123209:123209	7697544	22	True				
ANR	7697573	Statement	array	2716:23:123210:123214	7697544	23	True				
ANR	7697574	Statement	of	2716:29:123216:123217	7697544	24	True				
ANR	7697575	Statement	ints	2716:32:123219:123222	7697544	25	True				
ANR	7697576	Statement	)	2716:36:123223:123223	7697544	26	True				
ANR	7697577	IfStatement	if ( cp -> jp2i != 1 )		7697544	27					
ANR	7697578	Condition	cp -> jp2i != 1	2717:8:123233:123245	7697544	0	True				
ANR	7697579	EqualityExpression	cp -> jp2i != 1		7697544	0		!=			
ANR	7697580	PtrMemberAccess	cp -> jp2i		7697544	0					
ANR	7697581	Identifier	cp		7697544	0					
ANR	7697582	Identifier	jp2i		7697544	1					
ANR	7697583	PrimaryExpression	1		7697544	1					
ANR	7697584	CompoundStatement		6:23:208:208	7697544	1					
ANR	7697585	ReturnStatement	return ;	2718:8:123258:123264	7697544	0	True				
ANR	7697586	ForStatement	for ( i = 0 ; i < cp -> jp2i_count ; i ++ )		7697544	28					
ANR	7697587	ForInit	i = 0 ;	2721:9:123303:123308	7697544	0	True				
ANR	7697588	AssignmentExpression	i = 0		7697544	0		=			
ANR	7697589	Identifier	i		7697544	0					
ANR	7697590	PrimaryExpression	0		7697544	1					
ANR	7697591	Condition	i < cp -> jp2i_count	2721:16:123310:123327	7697544	1	True				
ANR	7697592	RelationalExpression	i < cp -> jp2i_count		7697544	0		<			
ANR	7697593	Identifier	i		7697544	0					
ANR	7697594	PtrMemberAccess	cp -> jp2i_count		7697544	1					
ANR	7697595	Identifier	cp		7697544	0					
ANR	7697596	Identifier	jp2i_count		7697544	1					
ANR	7697597	PostIncDecOperationExpression	i ++	2721:36:123330:123332	7697544	2	True				
ANR	7697598	Identifier	i		7697544	0					
ANR	7697599	IncDec	++		7697544	1					
ANR	7697600	CompoundStatement		10:41:295:295	7697544	3					
ANR	7697601	ExpressionStatement	"fprintf ( xmlout , ""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"" )"	2722:8:123345:123422	7697544	0	True				
ANR	7697602	CallExpression	"fprintf ( xmlout , ""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"" )"		7697544	0					
ANR	7697603	Callee	fprintf		7697544	0					
ANR	7697604	Identifier	fprintf		7697544	0					
ANR	7697605	ArgumentList	xmlout		7697544	1					
ANR	7697606	Argument	xmlout		7697544	0					
ANR	7697607	Identifier	xmlout		7697544	0					
ANR	7697608	Argument	"""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"""		7697544	1					
ANR	7697609	PrimaryExpression	"""            <IntellectualProperty BoxType=\\""jp2i\\"">\\n"""		7697544	0					
ANR	7697610	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , cp -> jp2i_data [ i ] , cp -> jp2i_len [ i ] )"	2726:8:123636:123705	7697544	1	True				
ANR	7697611	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , cp -> jp2i_data [ i ] , cp -> jp2i_len [ i ] )"		7697544	0					
ANR	7697612	Callee	xml_out_dump_hex_and_ascii		7697544	0					
ANR	7697613	Identifier	xml_out_dump_hex_and_ascii		7697544	0					
ANR	7697614	ArgumentList	xmlout		7697544	1					
ANR	7697615	Argument	xmlout		7697544	0					
ANR	7697616	Identifier	xmlout		7697544	0					
ANR	7697617	Argument	cp -> jp2i_data [ i ]		7697544	1					
ANR	7697618	ArrayIndexing	cp -> jp2i_data [ i ]		7697544	0					
ANR	7697619	PtrMemberAccess	cp -> jp2i_data		7697544	0					
ANR	7697620	Identifier	cp		7697544	0					
ANR	7697621	Identifier	jp2i_data		7697544	1					
ANR	7697622	Identifier	i		7697544	1					
ANR	7697623	Argument	cp -> jp2i_len [ i ]		7697544	2					
ANR	7697624	ArrayIndexing	cp -> jp2i_len [ i ]		7697544	0					
ANR	7697625	PtrMemberAccess	cp -> jp2i_len		7697544	0					
ANR	7697626	Identifier	cp		7697544	0					
ANR	7697627	Identifier	jp2i_len		7697544	1					
ANR	7697628	Identifier	i		7697544	1					
ANR	7697629	ExpressionStatement	"fprintf ( xmlout , ""            </IntellectualProperty>\\n"" )"	2727:8:123715:123776	7697544	2	True				
ANR	7697630	CallExpression	"fprintf ( xmlout , ""            </IntellectualProperty>\\n"" )"		7697544	0					
ANR	7697631	Callee	fprintf		7697544	0					
ANR	7697632	Identifier	fprintf		7697544	0					
ANR	7697633	ArgumentList	xmlout		7697544	1					
ANR	7697634	Argument	xmlout		7697544	0					
ANR	7697635	Identifier	xmlout		7697544	0					
ANR	7697636	Argument	"""            </IntellectualProperty>\\n"""		7697544	1					
ANR	7697637	PrimaryExpression	"""            </IntellectualProperty>\\n"""		7697544	0					
ANR	7697638	ReturnType	data structure instead void		7697544	1					
ANR	7697639	Identifier	xml_out_frame_jp2i		7697544	2					
ANR	7697640	ParameterList	"FILE * xmlout , opj_cp_t * cp"		7697544	3					
ANR	7697641	Parameter	FILE * xmlout	2711:30:123011:123022	7697544	0	True				
ANR	7697642	ParameterType	FILE *		7697544	0					
ANR	7697643	Identifier	xmlout		7697544	1					
ANR	7697644	Parameter	opj_cp_t * cp	2711:44:123025:123036	7697544	1	True				
ANR	7697645	ParameterType	opj_cp_t *		7697544	0					
ANR	7697646	Identifier	cp		7697544	1					
ANR	7697647	CFGEntryNode	ENTRY		7697544		True				
ANR	7697648	CFGExitNode	EXIT		7697544		True				
ANR	7697649	Symbol	* cp		7697544						
ANR	7697650	Symbol	cp -> jp2i_count		7697544						
ANR	7697651	Symbol	* i		7697544						
ANR	7697652	Symbol	* cp -> jp2i_len		7697544						
ANR	7697653	Symbol	cp -> jp2i_data		7697544						
ANR	7697654	Symbol	i		7697544						
ANR	7697655	Symbol	* cp -> jp2i_data		7697544						
ANR	7697656	Symbol	* * cp		7697544						
ANR	7697657	Symbol	cp -> jp2i_len		7697544						
ANR	7697658	Symbol	cp		7697544						
ANR	7697659	Symbol	xmlout		7697544						
ANR	7697660	Symbol	cp -> jp2i		7697544						
ANR	7697661	Function	xml_out_frame_xml	2731:0:123787:124739							
ANR	7697662	FunctionDef	"xml_out_frame_xml (FILE * xmlout , opj_cp_t * cp)"		7697661	0					
ANR	7697663	CompoundStatement		2732:0:123838:124739	7697661	0					
ANR	7697664	Statement	IMAGE	2734:4:123937:123941	7697661	0	True				
ANR	7697665	Statement	cp	2734:10:123943:123944	7697661	1	True				
ANR	7697666	Statement	->	2734:12:123945:123946	7697661	2	True				
ANR	7697667	Statement	xml	2734:14:123947:123949	7697661	3	True				
ANR	7697668	Statement	","	2734:17:123950:123950	7697661	4	True				
ANR	7697669	Statement	cp	2734:19:123952:123953	7697661	5	True				
ANR	7697670	Statement	->	2734:21:123954:123955	7697661	6	True				
ANR	7697671	Statement	xml_count	2734:23:123956:123964	7697661	7	True				
ANR	7697672	Statement	","	2734:32:123965:123965	7697661	8	True				
ANR	7697673	Statement	cp	2734:34:123967:123968	7697661	9	True				
ANR	7697674	Statement	->	2734:36:123969:123970	7697661	10	True				
ANR	7697675	Statement	xml_data	2734:38:123971:123978	7697661	11	True				
ANR	7697676	Statement	(	2734:46:123979:123979	7697661	12	True				
ANR	7697677	Statement	array	2734:47:123980:123984	7697661	13	True				
ANR	7697678	Statement	of	2734:53:123986:123987	7697661	14	True				
ANR	7697679	Statement	chars	2734:56:123989:123993	7697661	15	True				
ANR	7697680	Statement	)	2734:61:123994:123994	7697661	16	True				
ANR	7697681	Statement	MAYBE	2735:4:124000:124004	7697661	17	True				
ANR	7697682	Statement	WE	2735:10:124006:124007	7697661	18	True				
ANR	7697683	Statement	DON	2735:13:124009:124011	7697661	19	True				
ANR	7697684	Statement	T	2735:17:124013:124013	7697661	20	True				
ANR	7697685	Statement	NEED	2735:19:124015:124018	7697661	21	True				
ANR	7697686	Statement	cp	2735:24:124020:124021	7697661	22	True				
ANR	7697687	Statement	->	2735:26:124022:124023	7697661	23	True				
ANR	7697688	Statement	xml_len	2735:28:124024:124030	7697661	24	True				
ANR	7697689	Statement	(	2735:36:124032:124032	7697661	25	True				
ANR	7697690	Statement	array	2735:37:124033:124037	7697661	26	True				
ANR	7697691	Statement	of	2735:43:124039:124040	7697661	27	True				
ANR	7697692	Statement	ints	2735:46:124042:124045	7697661	28	True				
ANR	7697693	Statement	)	2735:50:124046:124046	7697661	29	True				
ANR	7697694	Statement	IF	2735:52:124048:124049	7697661	30	True				
ANR	7697695	Statement	WE	2735:55:124051:124052	7697661	31	True				
ANR	7697696	Statement	ASSUME	2735:58:124054:124059	7697661	32	True				
ANR	7697697	Statement	xml_data	2735:65:124061:124068	7697661	33	True				
ANR	7697698	Statement	IS	2735:74:124070:124071	7697661	34	True				
ANR	7697699	Statement	NULL	2735:77:124073:124076	7697661	35	True				
ANR	7697700	Statement	-	2735:81:124077:124077	7697661	36	True				
ANR	7697701	Statement	TERMINATED	2735:82:124078:124087	7697661	37	True				
ANR	7697702	Statement	.	2735:92:124088:124088	7697661	38	True				
ANR	7697703	Statement	ASSUME	2736:4:124094:124099	7697661	39	True				
ANR	7697704	Statement	ASSUME	2736:11:124101:124106	7697661	40	True				
ANR	7697705	Statement	EACH	2736:18:124108:124111	7697661	41	True				
ANR	7697706	Statement	LINE	2736:23:124113:124116	7697661	42	True				
ANR	7697707	Statement	IS	2736:28:124118:124119	7697661	43	True				
ANR	7697708	Statement	ENDED	2736:31:124121:124125	7697661	44	True				
ANR	7697709	Statement	BY	2736:37:124127:124128	7697661	45	True				
ANR	7697710	Statement	n	2736:41:124131:124131	7697661	46	True				
ANR	7697711	Statement	.	2736:42:124132:124132	7697661	47	True				
ANR	7697712	IdentifierDeclStatement	int i ;	2737:4:124138:124143	7697661	48	True				
ANR	7697713	IdentifierDecl	i		7697661	0					
ANR	7697714	IdentifierDeclType	int		7697661	0					
ANR	7697715	Identifier	i		7697661	1					
ANR	7697716	IfStatement	if ( cp -> xml != 1 )		7697661	49					
ANR	7697717	Condition	cp -> xml != 1	2738:8:124153:124164	7697661	0	True				
ANR	7697718	EqualityExpression	cp -> xml != 1		7697661	0		!=			
ANR	7697719	PtrMemberAccess	cp -> xml		7697661	0					
ANR	7697720	Identifier	cp		7697661	0					
ANR	7697721	Identifier	xml		7697661	1					
ANR	7697722	PrimaryExpression	1		7697661	1					
ANR	7697723	CompoundStatement		7:22:328:328	7697661	1					
ANR	7697724	ReturnStatement	return ;	2739:8:124177:124183	7697661	0	True				
ANR	7697725	ForStatement	for ( i = 0 ; i < cp -> xml_count ; i ++ )		7697661	50					
ANR	7697726	ForInit	i = 0 ;	2742:9:124222:124227	7697661	0	True				
ANR	7697727	AssignmentExpression	i = 0		7697661	0		=			
ANR	7697728	Identifier	i		7697661	0					
ANR	7697729	PrimaryExpression	0		7697661	1					
ANR	7697730	Condition	i < cp -> xml_count	2742:16:124229:124245	7697661	1	True				
ANR	7697731	RelationalExpression	i < cp -> xml_count		7697661	0		<			
ANR	7697732	Identifier	i		7697661	0					
ANR	7697733	PtrMemberAccess	cp -> xml_count		7697661	1					
ANR	7697734	Identifier	cp		7697661	0					
ANR	7697735	Identifier	xml_count		7697661	1					
ANR	7697736	PostIncDecOperationExpression	i ++	2742:35:124248:124250	7697661	2	True				
ANR	7697737	Identifier	i		7697661	0					
ANR	7697738	IncDec	++		7697661	1					
ANR	7697739	CompoundStatement		11:40:414:414	7697661	3					
ANR	7697740	Statement	fprintf	2743:8:124263:124269	7697661	0	True				
ANR	7697741	Statement	(	2743:15:124270:124270	7697661	1	True				
ANR	7697742	Statement	xmlout	2743:16:124271:124276	7697661	2	True				
ANR	7697743	Statement	","	2743:22:124277:124277	7697661	3	True				
ANR	7697744	Statement	"""            <TextFormXML BoxType=\\""xml[space]"""	2743:29:124284:124330	7697661	4	True				
ANR	7697745	Statement	Instance	2743:77:124332:124339	7697661	5	True				
ANR	7697746	Statement	=	2743:86:124341:124341	7697661	6	True				
ANR	7697747	Statement	"""%d\\"">\\n"""	2744:21:124364:124372	7697661	7	True				
ANR	7697748	Statement	","	2744:30:124373:124373	7697661	8	True				
ANR	7697749	Statement	i	2744:32:124375:124375	7697661	9	True				
ANR	7697750	Statement	+	2744:34:124377:124377	7697661	10	True				
ANR	7697751	Statement	1	2744:36:124379:124379	7697661	11	True				
ANR	7697752	Statement	)	2744:37:124380:124380	7697661	12	True				
ANR	7697753	ExpressionStatement		2744:38:124381:124381	7697661	13	True				
ANR	7697754	ExpressionStatement	"fprintf ( xmlout , cp -> xml_data [ i ] )"	2747:8:124552:124600	7697661	14	True				
ANR	7697755	CallExpression	"fprintf ( xmlout , cp -> xml_data [ i ] )"		7697661	0					
ANR	7697756	Callee	fprintf		7697661	0					
ANR	7697757	Identifier	fprintf		7697661	0					
ANR	7697758	ArgumentList	xmlout		7697661	1					
ANR	7697759	Argument	xmlout		7697661	0					
ANR	7697760	Identifier	xmlout		7697661	0					
ANR	7697761	Argument	cp -> xml_data [ i ]		7697661	1					
ANR	7697762	ArrayIndexing	cp -> xml_data [ i ]		7697661	0					
ANR	7697763	PtrMemberAccess	cp -> xml_data		7697661	0					
ANR	7697764	Identifier	cp		7697661	0					
ANR	7697765	Identifier	xml_data		7697661	1					
ANR	7697766	Identifier	i		7697661	1					
ANR	7697767	ExpressionStatement	"fprintf ( xmlout , ""            </TextFormXML>\\n"" )"	2749:8:124679:124731	7697661	15	True				
ANR	7697768	CallExpression	"fprintf ( xmlout , ""            </TextFormXML>\\n"" )"		7697661	0					
ANR	7697769	Callee	fprintf		7697661	0					
ANR	7697770	Identifier	fprintf		7697661	0					
ANR	7697771	ArgumentList	xmlout		7697661	1					
ANR	7697772	Argument	xmlout		7697661	0					
ANR	7697773	Identifier	xmlout		7697661	0					
ANR	7697774	Argument	"""            </TextFormXML>\\n"""		7697661	1					
ANR	7697775	PrimaryExpression	"""            </TextFormXML>\\n"""		7697661	0					
ANR	7697776	ReturnType	void		7697661	1					
ANR	7697777	Identifier	xml_out_frame_xml		7697661	2					
ANR	7697778	ParameterList	"FILE * xmlout , opj_cp_t * cp"		7697661	3					
ANR	7697779	Parameter	FILE * xmlout	2731:23:123810:123821	7697661	0	True				
ANR	7697780	ParameterType	FILE *		7697661	0					
ANR	7697781	Identifier	xmlout		7697661	1					
ANR	7697782	Parameter	opj_cp_t * cp	2731:37:123824:123835	7697661	1	True				
ANR	7697783	ParameterType	opj_cp_t *		7697661	0					
ANR	7697784	Identifier	cp		7697661	1					
ANR	7697785	CFGEntryNode	ENTRY		7697661		True				
ANR	7697786	CFGExitNode	EXIT		7697661		True				
ANR	7697787	Symbol	* cp		7697661						
ANR	7697788	Symbol	* i		7697661						
ANR	7697789	Symbol	* cp -> xml_data		7697661						
ANR	7697790	Symbol	i		7697661						
ANR	7697791	Symbol	* * cp		7697661						
ANR	7697792	Symbol	cp -> xml_count		7697661						
ANR	7697793	Symbol	cp		7697661						
ANR	7697794	Symbol	cp -> xml		7697661						
ANR	7697795	Symbol	cp -> xml_data		7697661						
ANR	7697796	Symbol	xmlout		7697661						
ANR	7697797	Function	xml_out_frame_uuid	2753:0:124742:128575							
ANR	7697798	FunctionDef	"xml_out_frame_uuid (FILE * xmlout , opj_cp_t * cp)"		7697797	0					
ANR	7697799	CompoundStatement		2754:0:124794:128575	7697797	0					
ANR	7697800	IdentifierDeclStatement	int i ;	2765:4:125602:125607	7697797	0	True				
ANR	7697801	IdentifierDecl	i		7697797	0					
ANR	7697802	IdentifierDeclType	int		7697797	0					
ANR	7697803	Identifier	i		7697797	1					
ANR	7697804	Statement	IMAGE	2766:4:125613:125617	7697797	1	True				
ANR	7697805	Statement	cp	2766:10:125619:125620	7697797	2	True				
ANR	7697806	Statement	->	2766:12:125621:125622	7697797	3	True				
ANR	7697807	Statement	uuid	2766:14:125623:125626	7697797	4	True				
ANR	7697808	Statement	","	2766:18:125627:125627	7697797	5	True				
ANR	7697809	Statement	cp	2766:20:125629:125630	7697797	6	True				
ANR	7697810	Statement	->	2766:22:125631:125632	7697797	7	True				
ANR	7697811	Statement	uuid_count	2766:24:125633:125642	7697797	8	True				
ANR	7697812	Statement	","	2766:34:125643:125643	7697797	9	True				
ANR	7697813	Statement	cp	2767:10:125655:125656	7697797	10	True				
ANR	7697814	Statement	->	2767:12:125657:125658	7697797	11	True				
ANR	7697815	Statement	uuid_value	2767:14:125659:125668	7697797	12	True				
ANR	7697816	Statement	(	2767:24:125669:125669	7697797	13	True				
ANR	7697817	Statement	array	2767:25:125670:125674	7697797	14	True				
ANR	7697818	Statement	of	2767:31:125676:125677	7697797	15	True				
ANR	7697819	Statement	uuids	2767:34:125679:125683	7697797	16	True				
ANR	7697820	Statement	...	2767:39:125684:125686	7697797	17	True				
ANR	7697821	Statement	let	2768:25:125713:125715	7697797	18	True				
ANR	7697822	Statement	s	2768:29:125717:125717	7697797	19	True				
ANR	7697823	Statement	say	2768:31:125719:125721	7697797	20	True				
ANR	7697824	Statement	fixed	2768:35:125723:125727	7697797	21	True				
ANR	7697825	Statement	-	2768:40:125728:125728	7697797	22	True				
ANR	7697826	Statement	length	2768:41:125729:125734	7697797	23	True				
ANR	7697827	Statement	strings	2768:48:125736:125742	7697797	24	True				
ANR	7697828	Statement	)	2768:55:125743:125743	7697797	25	True				
ANR	7697829	Statement	cp	2768:57:125745:125746	7697797	26	True				
ANR	7697830	Statement	->	2768:59:125747:125748	7697797	27	True				
ANR	7697831	Statement	uuid_data	2768:61:125749:125757	7697797	28	True				
ANR	7697832	Statement	(	2768:71:125759:125759	7697797	29	True				
ANR	7697833	Statement	array	2768:72:125760:125764	7697797	30	True				
ANR	7697834	Statement	of	2768:78:125766:125767	7697797	31	True				
ANR	7697835	Statement	char	2768:81:125769:125772	7697797	32	True				
ANR	7697836	Statement	buffers	2768:86:125774:125780	7697797	33	True				
ANR	7697837	Statement	)	2768:93:125781:125781	7697797	34	True				
ANR	7697838	Statement	","	2768:94:125782:125782	7697797	35	True				
ANR	7697839	Statement	cp	2768:96:125784:125785	7697797	36	True				
ANR	7697840	Statement	->	2768:98:125786:125787	7697797	37	True				
ANR	7697841	Statement	uuid_len	2768:100:125788:125795	7697797	38	True				
ANR	7697842	Statement	(	2768:109:125797:125797	7697797	39	True				
ANR	7697843	Statement	array	2768:110:125798:125802	7697797	40	True				
ANR	7697844	Statement	of	2768:116:125804:125805	7697797	41	True				
ANR	7697845	Statement	ints	2768:119:125807:125810	7697797	42	True				
ANR	7697846	Statement	)	2768:123:125811:125811	7697797	43	True				
ANR	7697847	IfStatement	if ( cp -> juuid != 1 )		7697797	44					
ANR	7697848	Condition	cp -> juuid != 1	2769:29:125842:125855	7697797	0	True				
ANR	7697849	EqualityExpression	cp -> juuid != 1		7697797	0		!=			
ANR	7697850	PtrMemberAccess	cp -> juuid		7697797	0					
ANR	7697851	Identifier	cp		7697797	0					
ANR	7697852	Identifier	juuid		7697797	1					
ANR	7697853	PrimaryExpression	1		7697797	1					
ANR	7697854	ReturnStatement	return ;	2770:25:125883:125889	7697797	1	True				
ANR	7697855	ForStatement	for ( i = 0 ; i < cp -> uuid_count ; i ++ )		7697797	45					
ANR	7697856	ForInit	i = 0 ;	2772:9:125919:125924	7697797	0	True				
ANR	7697857	AssignmentExpression	i = 0		7697797	0		=			
ANR	7697858	Identifier	i		7697797	0					
ANR	7697859	PrimaryExpression	0		7697797	1					
ANR	7697860	Condition	i < cp -> uuid_count	2772:16:125926:125943	7697797	1	True				
ANR	7697861	RelationalExpression	i < cp -> uuid_count		7697797	0		<			
ANR	7697862	Identifier	i		7697797	0					
ANR	7697863	PtrMemberAccess	cp -> uuid_count		7697797	1					
ANR	7697864	Identifier	cp		7697797	0					
ANR	7697865	Identifier	uuid_count		7697797	1					
ANR	7697866	PostIncDecOperationExpression	i ++	2772:36:125946:125948	7697797	2	True				
ANR	7697867	Identifier	i		7697797	0					
ANR	7697868	IncDec	++		7697797	1					
ANR	7697869	CompoundStatement		19:41:1156:1156	7697797	3					
ANR	7697870	Statement	fprintf	2773:8:125961:125967	7697797	0	True				
ANR	7697871	Statement	(	2773:15:125968:125968	7697797	1	True				
ANR	7697872	Statement	xmlout	2773:16:125969:125974	7697797	2	True				
ANR	7697873	Statement	","	2773:22:125975:125975	7697797	3	True				
ANR	7697874	Statement	"""            <UniversalUniqueID BoxType=\\""uuid\\"">\\n                fprintf(xmlout,      """	2773:29:125982:126069	7697797	4	True				
ANR	7697875	Statement	<	2774:52:126084:126084	7697797	5	True				
ANR	7697876	Statement	UUID	2774:53:126085:126088	7697797	6	True				
ANR	7697877	Statement	>	2774:57:126089:126089	7697797	7	True				
ANR	7697878	Statement	%	2774:58:126090:126090	7697797	8	True				
ANR	7697879	Statement	s	2774:59:126091:126091	7697797	9	True				
ANR	7697880	Statement	<	2774:60:126092:126092	7697797	10	True				
ANR	7697881	Statement	/	2774:61:126093:126093	7697797	11	True				
ANR	7697882	Statement	UUDI	2774:62:126094:126097	7697797	12	True				
ANR	7697883	Statement	>	2774:66:126098:126098	7697797	13	True				
ANR	7697884	Statement	n	2774:68:126100:126100	7697797	14	True				
ANR	7697885	Statement	""", cp->uuid_value[i]);\\n                fprintf(xmlout,      """	2774:69:126101:126161	7697797	15	True				
ANR	7697886	Statement	<	2775:52:126176:126176	7697797	16	True				
ANR	7697887	Statement	Data	2775:53:126177:126180	7697797	17	True				
ANR	7697888	Statement	>	2775:57:126181:126181	7697797	18	True				
ANR	7697889	Statement	n	2775:59:126183:126183	7697797	19	True				
ANR	7697890	Statement	""");\\n                /* I think this can be anything, including binary, so do a dump */\\n                /* Is it better to indent or not indent this content?  Indent is better for reading, but\\n                worse for cut/paste. */\\n                xml_out_dump_hex_and_ascii(xmlout, cp->uuid_data[i], cp->uuid_len[i]);\\n                fprintf(xmlout,      """	2775:60:126184:126540	7697797	20	True				
ANR	7697891	Statement	<	2780:52:126555:126555	7697797	21	True				
ANR	7697892	Statement	/	2780:53:126556:126556	7697797	22	True				
ANR	7697893	Statement	Data	2780:54:126557:126560	7697797	23	True				
ANR	7697894	Statement	>	2780:58:126561:126561	7697797	24	True				
ANR	7697895	Statement	n	2780:60:126563:126563	7697797	25	True				
ANR	7697896	Statement	""");\\n                fprintf(xmlout,      """	2780:61:126564:126605	7697797	26	True				
ANR	7697897	Statement	<	2781:50:126618:126618	7697797	27	True				
ANR	7697898	Statement	/	2781:51:126619:126619	7697797	28	True				
ANR	7697899	Statement	UniversalUniqueID	2781:52:126620:126636	7697797	29	True				
ANR	7697900	Statement	>	2781:69:126637:126637	7697797	30	True				
ANR	7697901	Statement	n	2781:71:126639:126639	7697797	31	True				
ANR	7697902	Statement	""");\\n    }\\n}\\n\\nvoid xml_out_frame_uinf(FILE* xmlout, opj_cp_t *cp)\\n{\\n    /* UUIDInfo 'uinf', includes UUIDList 'ulst' and URL 'url\\40' */\\n    /* Part I 1.7.3 says: may appear multiply in JP2 file, anywhere at the top level except before File Type box */\\n    /* So there may be multiple ulst's, and each can have multiple UUIDs listed (with a single URL) */\\n    /* This is not quite as vendor-specific as UUIDs, or at least is meant to be generally readable */\\n    /* Assume UUIDs stored in canonical string format */\\n    int i, j;\\n    IMAGE cp->uinf, cp->uinf_count, cp->uinf_ulst_nu(array of ints)\\n    cp->uinf_uuid(2 dimensional array of uuids... let's say fixed-length strings),\\n                  cp->uinf_url(array of char buffers)\\n\\n                  if (cp->uinf != 1)\\n                  return; /* Not present */\\n\\n    for (i = 0; i < cp->uuid_count; i++) {\\n        fprintf(xmlout,      """	2781:72:126640:127529	7697797	32	True				
ANR	7697903	Statement	<	2801:42:127542:127542	7697797	33	True				
ANR	7697904	Statement	UUIDInfo	2801:43:127543:127550	7697797	34	True				
ANR	7697905	Statement	BoxType	2801:52:127552:127558	7697797	35	True				
ANR	7697906	Statement	=	2801:59:127559:127559	7697797	36	True				
ANR	7697907	Statement	"""uinf\\"">\\n"""	2801:61:127561:127571	7697797	37	True				
ANR	7697908	Statement	)	2801:72:127572:127572	7697797	38	True				
ANR	7697909	ExpressionStatement		2801:73:127573:127573	7697797	39	True				
ANR	7697910	ExpressionStatement	"fprintf ( xmlout , ""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"" , cp -> cp -> uinf_ulst_nu [ i ] )"	2802:12:127587:127712	7697797	40	True				
ANR	7697911	CallExpression	"fprintf ( xmlout , ""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"" , cp -> cp -> uinf_ulst_nu [ i ] )"		7697797	0					
ANR	7697912	Callee	fprintf		7697797	0					
ANR	7697913	Identifier	fprintf		7697797	0					
ANR	7697914	ArgumentList	xmlout		7697797	1					
ANR	7697915	Argument	xmlout		7697797	0					
ANR	7697916	Identifier	xmlout		7697797	0					
ANR	7697917	Argument	"""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"""		7697797	1					
ANR	7697918	PrimaryExpression	"""              <UUIDList BoxType=\\""ulst\\"" Count=\\""%d\\"">\\n"""		7697797	0					
ANR	7697919	Argument	cp -> cp -> uinf_ulst_nu [ i ]		7697797	2					
ANR	7697920	ArrayIndexing	cp -> cp -> uinf_ulst_nu [ i ]		7697797	0					
ANR	7697921	PtrMemberAccess	cp -> cp -> uinf_ulst_nu		7697797	0					
ANR	7697922	PtrMemberAccess	cp -> cp		7697797	0					
ANR	7697923	Identifier	cp		7697797	0					
ANR	7697924	Identifier	cp		7697797	1					
ANR	7697925	Identifier	uinf_ulst_nu		7697797	1					
ANR	7697926	Identifier	i		7697797	1					
ANR	7697927	ForStatement	for ( j = 0 ; j < cp -> uinf_ulst_nu [ i ] ; j ++ )		7697797	41					
ANR	7697928	ForInit	j = 0 ;	2804:17:127731:127736	7697797	0	True				
ANR	7697929	AssignmentExpression	j = 0		7697797	0		=			
ANR	7697930	Identifier	j		7697797	0					
ANR	7697931	PrimaryExpression	0		7697797	1					
ANR	7697932	Condition	j < cp -> uinf_ulst_nu [ i ]	2804:24:127738:127760	7697797	1	True				
ANR	7697933	RelationalExpression	j < cp -> uinf_ulst_nu [ i ]		7697797	0		<			
ANR	7697934	Identifier	j		7697797	0					
ANR	7697935	ArrayIndexing	cp -> uinf_ulst_nu [ i ]		7697797	1					
ANR	7697936	PtrMemberAccess	cp -> uinf_ulst_nu		7697797	0					
ANR	7697937	Identifier	cp		7697797	0					
ANR	7697938	Identifier	uinf_ulst_nu		7697797	1					
ANR	7697939	Identifier	i		7697797	1					
ANR	7697940	PostIncDecOperationExpression	j ++	2804:50:127764:127766	7697797	2	True				
ANR	7697941	Identifier	j		7697797	0					
ANR	7697942	IncDec	++		7697797	1					
ANR	7697943	CompoundStatement		51:55:2974:2974	7697797	3					
ANR	7697944	ExpressionStatement	"fprintf ( xmlout , ""              <ID Instance=\\""%s\\"">%s</ID>\\n"" , cp -> uuif_uuid [ i ] [ j ] , j + 1 )"	2805:16:127787:127904	7697797	0	True				
ANR	7697945	CallExpression	"fprintf ( xmlout , ""              <ID Instance=\\""%s\\"">%s</ID>\\n"" , cp -> uuif_uuid [ i ] [ j ] , j + 1 )"		7697797	0					
ANR	7697946	Callee	fprintf		7697797	0					
ANR	7697947	Identifier	fprintf		7697797	0					
ANR	7697948	ArgumentList	xmlout		7697797	1					
ANR	7697949	Argument	xmlout		7697797	0					
ANR	7697950	Identifier	xmlout		7697797	0					
ANR	7697951	Argument	"""              <ID Instance=\\""%s\\"">%s</ID>\\n"""		7697797	1					
ANR	7697952	PrimaryExpression	"""              <ID Instance=\\""%s\\"">%s</ID>\\n"""		7697797	0					
ANR	7697953	Argument	cp -> uuif_uuid [ i ] [ j ]		7697797	2					
ANR	7697954	ArrayIndexing	cp -> uuif_uuid [ i ] [ j ]		7697797	0					
ANR	7697955	ArrayIndexing	cp -> uuif_uuid [ i ]		7697797	0					
ANR	7697956	PtrMemberAccess	cp -> uuif_uuid		7697797	0					
ANR	7697957	Identifier	cp		7697797	0					
ANR	7697958	Identifier	uuif_uuid		7697797	1					
ANR	7697959	Identifier	i		7697797	1					
ANR	7697960	Identifier	j		7697797	1					
ANR	7697961	Argument	j + 1		7697797	3					
ANR	7697962	AdditiveExpression	j + 1		7697797	0		+			
ANR	7697963	Identifier	j		7697797	0					
ANR	7697964	PrimaryExpression	1		7697797	1					
ANR	7697965	ExpressionStatement	"fprintf ( xmlout , ""              </UUIDList>\\n"" )"	2808:12:127932:127983	7697797	42	True				
ANR	7697966	CallExpression	"fprintf ( xmlout , ""              </UUIDList>\\n"" )"		7697797	0					
ANR	7697967	Callee	fprintf		7697797	0					
ANR	7697968	Identifier	fprintf		7697797	0					
ANR	7697969	ArgumentList	xmlout		7697797	1					
ANR	7697970	Argument	xmlout		7697797	0					
ANR	7697971	Identifier	xmlout		7697797	0					
ANR	7697972	Argument	"""              </UUIDList>\\n"""		7697797	1					
ANR	7697973	PrimaryExpression	"""              </UUIDList>\\n"""		7697797	0					
ANR	7697974	ExpressionStatement	"fprintf ( xmlout , ""              <DataEntryURL>\\n"" )"	2809:12:127997:128051	7697797	43	True				
ANR	7697975	CallExpression	"fprintf ( xmlout , ""              <DataEntryURL>\\n"" )"		7697797	0					
ANR	7697976	Callee	fprintf		7697797	0					
ANR	7697977	Identifier	fprintf		7697797	0					
ANR	7697978	ArgumentList	xmlout		7697797	1					
ANR	7697979	Argument	xmlout		7697797	0					
ANR	7697980	Identifier	xmlout		7697797	0					
ANR	7697981	Argument	"""              <DataEntryURL>\\n"""		7697797	1					
ANR	7697982	PrimaryExpression	"""              <DataEntryURL>\\n"""		7697797	0					
ANR	7697983	ExpressionStatement	"fprintf ( xmlout , ""                <LOC>\\n"" )"	2811:12:128112:128159	7697797	44	True				
ANR	7697984	CallExpression	"fprintf ( xmlout , ""                <LOC>\\n"" )"		7697797	0					
ANR	7697985	Callee	fprintf		7697797	0					
ANR	7697986	Identifier	fprintf		7697797	0					
ANR	7697987	ArgumentList	xmlout		7697797	1					
ANR	7697988	Argument	xmlout		7697797	0					
ANR	7697989	Identifier	xmlout		7697797	0					
ANR	7697990	Argument	"""                <LOC>\\n"""		7697797	1					
ANR	7697991	PrimaryExpression	"""                <LOC>\\n"""		7697797	0					
ANR	7697992	ExpressionStatement	"fprintf ( xmlout , ""                  %s"" , cp -> uinf_url [ i ] )"	2812:12:128173:128254	7697797	45	True				
ANR	7697993	CallExpression	"fprintf ( xmlout , ""                  %s"" , cp -> uinf_url [ i ] )"		7697797	0					
ANR	7697994	Callee	fprintf		7697797	0					
ANR	7697995	Identifier	fprintf		7697797	0					
ANR	7697996	ArgumentList	xmlout		7697797	1					
ANR	7697997	Argument	xmlout		7697797	0					
ANR	7697998	Identifier	xmlout		7697797	0					
ANR	7697999	Argument	"""                  %s"""		7697797	1					
ANR	7698000	PrimaryExpression	"""                  %s"""		7697797	0					
ANR	7698001	Argument	cp -> uinf_url [ i ]		7697797	2					
ANR	7698002	ArrayIndexing	cp -> uinf_url [ i ]		7697797	0					
ANR	7698003	PtrMemberAccess	cp -> uinf_url		7697797	0					
ANR	7698004	Identifier	cp		7697797	0					
ANR	7698005	Identifier	uinf_url		7697797	1					
ANR	7698006	Identifier	i		7697797	1					
ANR	7698007	ExpressionStatement	"fprintf ( xmlout , ""                </LOC>\\n"" )"	2814:12:128383:128431	7697797	46	True				
ANR	7698008	CallExpression	"fprintf ( xmlout , ""                </LOC>\\n"" )"		7697797	0					
ANR	7698009	Callee	fprintf		7697797	0					
ANR	7698010	Identifier	fprintf		7697797	0					
ANR	7698011	ArgumentList	xmlout		7697797	1					
ANR	7698012	Argument	xmlout		7697797	0					
ANR	7698013	Identifier	xmlout		7697797	0					
ANR	7698014	Argument	"""                </LOC>\\n"""		7697797	1					
ANR	7698015	PrimaryExpression	"""                </LOC>\\n"""		7697797	0					
ANR	7698016	ExpressionStatement	"fprintf ( xmlout , ""              </DataEntryURL>\\n"" )"	2815:12:128445:128500	7697797	47	True				
ANR	7698017	CallExpression	"fprintf ( xmlout , ""              </DataEntryURL>\\n"" )"		7697797	0					
ANR	7698018	Callee	fprintf		7697797	0					
ANR	7698019	Identifier	fprintf		7697797	0					
ANR	7698020	ArgumentList	xmlout		7697797	1					
ANR	7698021	Argument	xmlout		7697797	0					
ANR	7698022	Identifier	xmlout		7697797	0					
ANR	7698023	Argument	"""              </DataEntryURL>\\n"""		7697797	1					
ANR	7698024	PrimaryExpression	"""              </DataEntryURL>\\n"""		7697797	0					
ANR	7698025	ExpressionStatement	"fprintf ( xmlout , ""            </UUIDInfo>\\n"" )"	2816:12:128514:128563	7697797	48	True				
ANR	7698026	CallExpression	"fprintf ( xmlout , ""            </UUIDInfo>\\n"" )"		7697797	0					
ANR	7698027	Callee	fprintf		7697797	0					
ANR	7698028	Identifier	fprintf		7697797	0					
ANR	7698029	ArgumentList	xmlout		7697797	1					
ANR	7698030	Argument	xmlout		7697797	0					
ANR	7698031	Identifier	xmlout		7697797	0					
ANR	7698032	Argument	"""            </UUIDInfo>\\n"""		7697797	1					
ANR	7698033	PrimaryExpression	"""            </UUIDInfo>\\n"""		7697797	0					
ANR	7698034	ReturnType	void		7697797	1					
ANR	7698035	Identifier	xml_out_frame_uuid		7697797	2					
ANR	7698036	ParameterList	"FILE * xmlout , opj_cp_t * cp"		7697797	3					
ANR	7698037	Parameter	FILE * xmlout	2753:24:124766:124777	7697797	0	True				
ANR	7698038	ParameterType	FILE *		7697797	0					
ANR	7698039	Identifier	xmlout		7697797	1					
ANR	7698040	Parameter	opj_cp_t * cp	2753:38:124780:124791	7697797	1	True				
ANR	7698041	ParameterType	opj_cp_t *		7697797	0					
ANR	7698042	Identifier	cp		7697797	1					
ANR	7698043	CFGEntryNode	ENTRY		7697797		True				
ANR	7698044	CFGExitNode	EXIT		7697797		True				
ANR	7698045	Symbol	* * cp -> uuif_uuid		7697797						
ANR	7698046	Symbol	* * i		7697797						
ANR	7698047	Symbol	* * cp -> cp		7697797						
ANR	7698048	Symbol	* cp -> uinf_ulst_nu		7697797						
ANR	7698049	Symbol	* cp -> uinf_url		7697797						
ANR	7698050	Symbol	* cp -> cp		7697797						
ANR	7698051	Symbol	cp -> cp -> uinf_ulst_nu		7697797						
ANR	7698052	Symbol	cp -> uinf_ulst_nu		7697797						
ANR	7698053	Symbol	i		7697797						
ANR	7698054	Symbol	cp -> cp		7697797						
ANR	7698055	Symbol	j		7697797						
ANR	7698056	Symbol	* cp -> uuif_uuid		7697797						
ANR	7698057	Symbol	cp -> uuif_uuid		7697797						
ANR	7698058	Symbol	cp		7697797						
ANR	7698059	Symbol	cp -> uuid_count		7697797						
ANR	7698060	Symbol	* cp -> cp -> uinf_ulst_nu		7697797						
ANR	7698061	Symbol	xmlout		7697797						
ANR	7698062	Symbol	* cp		7697797						
ANR	7698063	Symbol	* i		7697797						
ANR	7698064	Symbol	* j		7697797						
ANR	7698065	Symbol	* * * cp		7697797						
ANR	7698066	Symbol	cp -> juuid		7697797						
ANR	7698067	Symbol	cp -> uinf_url		7697797						
ANR	7698068	Symbol	* * cp		7697797						
ANR	7698069	Function	xml_out_frame_unknown_type	2821:35:128643:130570							
ANR	7698070	FunctionDef	"xml_out_frame_unknown_type (FILE * xmlout , opj_cp_t * cp)"		7698069	0					
ANR	7698071	CompoundStatement		2823:0:128726:130570	7698069	0					
ANR	7698072	IdentifierDeclStatement	int i ;	2838:4:129734:129739	7698069	0	True				
ANR	7698073	IdentifierDecl	i		7698069	0					
ANR	7698074	IdentifierDeclType	int		7698069	0					
ANR	7698075	Identifier	i		7698069	1					
ANR	7698076	Statement	IMAGE	2839:4:129745:129749	7698069	1	True				
ANR	7698077	Statement	cp	2839:10:129751:129752	7698069	2	True				
ANR	7698078	Statement	->	2839:12:129753:129754	7698069	3	True				
ANR	7698079	Statement	unknown_type	2839:14:129755:129766	7698069	4	True				
ANR	7698080	Statement	","	2839:26:129767:129767	7698069	5	True				
ANR	7698081	Statement	cp	2839:28:129769:129770	7698069	6	True				
ANR	7698082	Statement	->	2839:30:129771:129772	7698069	7	True				
ANR	7698083	Statement	unknown_type_count	2839:32:129773:129790	7698069	8	True				
ANR	7698084	Statement	","	2839:50:129791:129791	7698069	9	True				
ANR	7698085	Statement	cp	2840:10:129803:129804	7698069	10	True				
ANR	7698086	Statement	->	2840:12:129805:129806	7698069	11	True				
ANR	7698087	Statement	unknown_type_boxtype	2840:14:129807:129826	7698069	12	True				
ANR	7698088	Statement	(	2840:34:129827:129827	7698069	13	True				
ANR	7698089	Statement	array	2840:35:129828:129832	7698069	14	True				
ANR	7698090	Statement	of	2840:41:129834:129835	7698069	15	True				
ANR	7698091	Statement	buf	2840:44:129837:129839	7698069	16	True				
ANR	7698092	Statement	[	2840:47:129840:129840	7698069	17	True				
ANR	7698093	Statement	5	2840:48:129841:129841	7698069	18	True				
ANR	7698094	Statement	]	2840:49:129842:129842	7698069	19	True				
ANR	7698095	Statement	s	2840:50:129843:129843	7698069	20	True				
ANR	7698096	Statement	)	2840:51:129844:129844	7698069	21	True				
ANR	7698097	Statement	","	2840:52:129845:129845	7698069	22	True				
ANR	7698098	Statement	cp	2841:10:129857:129858	7698069	23	True				
ANR	7698099	Statement	->	2841:12:129859:129860	7698069	24	True				
ANR	7698100	Statement	unknown_type_data	2841:14:129861:129877	7698069	25	True				
ANR	7698101	Statement	(	2841:31:129878:129878	7698069	26	True				
ANR	7698102	Statement	array	2841:32:129879:129883	7698069	27	True				
ANR	7698103	Statement	of	2841:38:129885:129886	7698069	28	True				
ANR	7698104	Statement	chars	2841:41:129888:129892	7698069	29	True				
ANR	7698105	Statement	)	2841:46:129893:129893	7698069	30	True				
ANR	7698106	Statement	","	2841:47:129894:129894	7698069	31	True				
ANR	7698107	Statement	cp	2841:49:129896:129897	7698069	32	True				
ANR	7698108	Statement	->	2841:51:129898:129899	7698069	33	True				
ANR	7698109	Statement	unknown_type_len	2841:53:129900:129915	7698069	34	True				
ANR	7698110	Statement	(	2841:69:129916:129916	7698069	35	True				
ANR	7698111	Statement	array	2841:70:129917:129921	7698069	36	True				
ANR	7698112	Statement	of	2841:76:129923:129924	7698069	37	True				
ANR	7698113	Statement	ints	2841:79:129926:129929	7698069	38	True				
ANR	7698114	Statement	)	2841:83:129930:129930	7698069	39	True				
ANR	7698115	IfStatement	if ( cp -> unknown_type != 1 )		7698069	40					
ANR	7698116	Condition	cp -> unknown_type != 1	2842:8:129940:129960	7698069	0	True				
ANR	7698117	EqualityExpression	cp -> unknown_type != 1		7698069	0		!=			
ANR	7698118	PtrMemberAccess	cp -> unknown_type		7698069	0					
ANR	7698119	Identifier	cp		7698069	0					
ANR	7698120	Identifier	unknown_type		7698069	1					
ANR	7698121	PrimaryExpression	1		7698069	1					
ANR	7698122	CompoundStatement		20:31:1236:1236	7698069	1					
ANR	7698123	ReturnStatement	return ;	2843:8:129973:129979	7698069	0	True				
ANR	7698124	ForStatement	for ( i = 0 ; i < cp -> unknown_type_count ; i ++ )		7698069	41					
ANR	7698125	ForInit	i = 0 ;	2846:9:130018:130023	7698069	0	True				
ANR	7698126	AssignmentExpression	i = 0		7698069	0		=			
ANR	7698127	Identifier	i		7698069	0					
ANR	7698128	PrimaryExpression	0		7698069	1					
ANR	7698129	Condition	i < cp -> unknown_type_count	2846:16:130025:130050	7698069	1	True				
ANR	7698130	RelationalExpression	i < cp -> unknown_type_count		7698069	0		<			
ANR	7698131	Identifier	i		7698069	0					
ANR	7698132	PtrMemberAccess	cp -> unknown_type_count		7698069	1					
ANR	7698133	Identifier	cp		7698069	0					
ANR	7698134	Identifier	unknown_type_count		7698069	1					
ANR	7698135	PostIncDecOperationExpression	i ++	2846:44:130053:130055	7698069	2	True				
ANR	7698136	Identifier	i		7698069	0					
ANR	7698137	IncDec	++		7698069	1					
ANR	7698138	CompoundStatement		24:49:1331:1331	7698069	3					
ANR	7698139	ExpressionStatement	"fprintf ( xmlout , ""            <UnknownType BoxType=\\""%s\\"">\\n"" , cp -> unknown_type_boxtype [ i ] )"	2847:8:130068:130179	7698069	0	True				
ANR	7698140	CallExpression	"fprintf ( xmlout , ""            <UnknownType BoxType=\\""%s\\"">\\n"" , cp -> unknown_type_boxtype [ i ] )"		7698069	0					
ANR	7698141	Callee	fprintf		7698069	0					
ANR	7698142	Identifier	fprintf		7698069	0					
ANR	7698143	ArgumentList	xmlout		7698069	1					
ANR	7698144	Argument	xmlout		7698069	0					
ANR	7698145	Identifier	xmlout		7698069	0					
ANR	7698146	Argument	"""            <UnknownType BoxType=\\""%s\\"">\\n"""		7698069	1					
ANR	7698147	PrimaryExpression	"""            <UnknownType BoxType=\\""%s\\"">\\n"""		7698069	0					
ANR	7698148	Argument	cp -> unknown_type_boxtype [ i ]		7698069	2					
ANR	7698149	ArrayIndexing	cp -> unknown_type_boxtype [ i ]		7698069	0					
ANR	7698150	PtrMemberAccess	cp -> unknown_type_boxtype		7698069	0					
ANR	7698151	Identifier	cp		7698069	0					
ANR	7698152	Identifier	unknown_type_boxtype		7698069	1					
ANR	7698153	Identifier	i		7698069	1					
ANR	7698154	ExpressionStatement	"xml_out_dump_hex_and_ascii ( xmlout , cp -> unknown_type_data [ i ] , cp -> unknown_type_len [ i ] )"	2852:8:130380:130500	7698069	1	True				
ANR	7698155	CallExpression	"xml_out_dump_hex_and_ascii ( xmlout , cp -> unknown_type_data [ i ] , cp -> unknown_type_len [ i ] )"		7698069	0					
ANR	7698156	Callee	xml_out_dump_hex_and_ascii		7698069	0					
ANR	7698157	Identifier	xml_out_dump_hex_and_ascii		7698069	0					
ANR	7698158	ArgumentList	xmlout		7698069	1					
ANR	7698159	Argument	xmlout		7698069	0					
ANR	7698160	Identifier	xmlout		7698069	0					
ANR	7698161	Argument	cp -> unknown_type_data [ i ]		7698069	1					
ANR	7698162	ArrayIndexing	cp -> unknown_type_data [ i ]		7698069	0					
ANR	7698163	PtrMemberAccess	cp -> unknown_type_data		7698069	0					
ANR	7698164	Identifier	cp		7698069	0					
ANR	7698165	Identifier	unknown_type_data		7698069	1					
ANR	7698166	Identifier	i		7698069	1					
ANR	7698167	Argument	cp -> unknown_type_len [ i ]		7698069	2					
ANR	7698168	ArrayIndexing	cp -> unknown_type_len [ i ]		7698069	0					
ANR	7698169	PtrMemberAccess	cp -> unknown_type_len		7698069	0					
ANR	7698170	Identifier	cp		7698069	0					
ANR	7698171	Identifier	unknown_type_len		7698069	1					
ANR	7698172	Identifier	i		7698069	1					
ANR	7698173	ExpressionStatement	"fprintf ( xmlout , ""            </UnknownType>\\n"" )"	2854:8:130510:130562	7698069	2	True				
ANR	7698174	CallExpression	"fprintf ( xmlout , ""            </UnknownType>\\n"" )"		7698069	0					
ANR	7698175	Callee	fprintf		7698069	0					
ANR	7698176	Identifier	fprintf		7698069	0					
ANR	7698177	ArgumentList	xmlout		7698069	1					
ANR	7698178	Argument	xmlout		7698069	0					
ANR	7698179	Identifier	xmlout		7698069	0					
ANR	7698180	Argument	"""            </UnknownType>\\n"""		7698069	1					
ANR	7698181	PrimaryExpression	"""            </UnknownType>\\n"""		7698069	0					
ANR	7698182	ReturnType	data structure instead void		7698069	1					
ANR	7698183	Identifier	xml_out_frame_unknown_type		7698069	2					
ANR	7698184	ParameterList	"FILE * xmlout , opj_cp_t * cp"		7698069	3					
ANR	7698185	Parameter	FILE * xmlout	2822:32:128698:128709	7698069	0	True				
ANR	7698186	ParameterType	FILE *		7698069	0					
ANR	7698187	Identifier	xmlout		7698069	1					
ANR	7698188	Parameter	opj_cp_t * cp	2822:46:128712:128723	7698069	1	True				
ANR	7698189	ParameterType	opj_cp_t *		7698069	0					
ANR	7698190	Identifier	cp		7698069	1					
ANR	7698191	CFGEntryNode	ENTRY		7698069		True				
ANR	7698192	CFGExitNode	EXIT		7698069		True				
ANR	7698193	Symbol	* cp -> unknown_type_data		7698069						
ANR	7698194	Symbol	i		7698069						
ANR	7698195	Symbol	cp -> unknown_type_count		7698069						
ANR	7698196	Symbol	cp		7698069						
ANR	7698197	Symbol	xmlout		7698069						
ANR	7698198	Symbol	* cp		7698069						
ANR	7698199	Symbol	cp -> unknown_type_len		7698069						
ANR	7698200	Symbol	* cp -> unknown_type_len		7698069						
ANR	7698201	Symbol	* i		7698069						
ANR	7698202	Symbol	cp -> unknown_type_data		7698069						
ANR	7698203	Symbol	cp -> unknown_type		7698069						
ANR	7698204	Symbol	* * cp		7698069						
ANR	7698205	Symbol	cp -> unknown_type_boxtype		7698069						
ANR	7698206	Symbol	* cp -> unknown_type_boxtype		7698069						
